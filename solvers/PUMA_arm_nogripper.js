// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = (typeof Module !== 'undefined' ? Module : null) || {};

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_WEB = typeof window === 'object';
var ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function' && !ENVIRONMENT_IS_WEB;
// Three configurations we can be running in:
// 1) We could be the application main() thread running in the main JS UI thread. (ENVIRONMENT_IS_WORKER == false and ENVIRONMENT_IS_PTHREAD == false)
// 2) We could be the application main() thread proxied to worker. (with Emscripten -s PROXY_TO_WORKER=1) (ENVIRONMENT_IS_WORKER == true, ENVIRONMENT_IS_PTHREAD == false)
// 3) We could be an application pthread running in a worker. (ENVIRONMENT_IS_WORKER == true and ENVIRONMENT_IS_PTHREAD == true)
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  if (!Module['print']) Module['print'] = function print(x) {
    process['stdout'].write(x + '\n');
  };
  if (!Module['printErr']) Module['printErr'] = function printErr(x) {
    process['stderr'].write(x + '\n');
  };

  var nodeFS = require('fs');
  var nodePath = require('path');

  Module['read'] = function read(filename, binary) {
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename);
    }
    if (ret && !binary) ret = ret.toString();
    return ret;
  };

  Module['readBinary'] = function readBinary(filename) { return Module['read'](filename, true) };

  Module['load'] = function load(f) {
    globalEval(read(f));
  };

  if (!Module['thisProgram']) {
    if (process['argv'].length > 1) {
      Module['thisProgram'] = process['argv'][1].replace(/\\/g, '/');
    } else {
      Module['thisProgram'] = 'unknown-program';
    }
  }

  Module['arguments'] = process['argv'].slice(2);

  if (typeof module !== 'undefined') {
    module['exports'] = Module;
  }

  process['on']('uncaughtException', function(ex) {
    // suppress ExitStatus exceptions from showing an error
    if (!(ex instanceof ExitStatus)) {
      throw ex;
    }
  });

  Module['inspect'] = function () { return '[Emscripten Module object]'; };
}
else if (ENVIRONMENT_IS_SHELL) {
  if (!Module['print']) Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm

  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function read() { throw 'no read() available (jsc?)' };
  }

  Module['readBinary'] = function readBinary(f) {
    if (typeof readbuffer === 'function') {
      return new Uint8Array(readbuffer(f));
    }
    var data = read(f, 'binary');
    assert(typeof data === 'object');
    return data;
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof console !== 'undefined') {
    if (!Module['print']) Module['print'] = function print(x) {
      console.log(x);
    };
    if (!Module['printErr']) Module['printErr'] = function printErr(x) {
      console.log(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }

  if (ENVIRONMENT_IS_WORKER) {
    Module['load'] = importScripts;
  }

  if (typeof Module['setWindowTitle'] === 'undefined') {
    Module['setWindowTitle'] = function(title) { document.title = title };
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
if (!Module['thisProgram']) {
  Module['thisProgram'] = './this.program';
}

// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];

// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}



// === Preamble library stuff ===

// Documentation for the public APIs defined in this file must be updated in: 
//    site/source/docs/api_reference/preamble.js.rst
// A prebuilt local version of the documentation is available at: 
//    site/build/text/docs/api_reference/preamble.js.txt
// You can also build docs locally as HTML or other formats in site/
// An online HTML version (which may be of a different version of Emscripten)
//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  setTempRet0: function (value) {
    tempRet0 = value;
  },
  getTempRet0: function () {
    return tempRet0;
  },
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  STACK_ALIGN: 16,
  prepVararg: function (ptr, type) {
    if (type === 'double' || type === 'i64') {
      // move so the load is aligned
      if (ptr & 7) {
        assert((ptr & 7) === 4);
        ptr += 4;
      }
    } else {
      assert((ptr & 3) === 0);
    }
    return ptr;
  },
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      assert(args.length == sig.length-1);
      if (!args.splice) args = Array.prototype.slice.call(args);
      args.splice(0, 0, ptr);
      assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \'' + sig + '\'');
      return Module['dynCall_' + sig].apply(null, args);
    } else {
      assert(sig.length == 1);
      assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \'' + sig + '\'');
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[sig]) {
      Runtime.funcWrappers[sig] = {};
    }
    var sigCache = Runtime.funcWrappers[sig];
    if (!sigCache[func]) {
      sigCache[func] = function dynCall_wrapper() {
        return Runtime.dynCall(sig, func, arguments);
      };
    }
    return sigCache[func];
  },
  getCompilerSetting: function (name) {
    throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work';
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+15)&-16);(assert((((STACKTOP|0) < (STACK_MAX|0))|0))|0); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + (assert(!staticSealed),size))|0;STATICTOP = (((STATICTOP)+15)&-16); return ret; },
  dynamicAlloc: function (size) { var ret = DYNAMICTOP;DYNAMICTOP = (DYNAMICTOP + (assert(DYNAMICTOP > 0),size))|0;DYNAMICTOP = (((DYNAMICTOP)+15)&-16); if (DYNAMICTOP >= TOTAL_MEMORY) { var success = enlargeMemory(); if (!success) { DYNAMICTOP = ret; return 0; } }; return ret; },
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 16))*(quantum ? quantum : 16); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*4294967296.0)) : ((+((low>>>0)))+((+((high|0)))*4294967296.0))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}


Module['Runtime'] = Runtime;



//========================================
// Runtime essentials
//========================================

var __THREW__ = 0; // Used in checking for thrown exceptions.

var ABORT = false; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD, tempDouble, tempFloat;
var tempI64, tempI64b;
var tempRet0, tempRet1, tempRet2, tempRet3, tempRet4, tempRet5, tempRet6, tempRet7, tempRet8, tempRet9;

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  var func = Module['_' + ident]; // closure exported function
  if (!func) {
    try {
      func = eval('_' + ident); // explicit lookup
    } catch(e) {}
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}

var cwrap, ccall;
(function(){
  var JSfuncs = {
    // Helpers for cwrap -- it can't refer to Runtime directly because it might
    // be renamed by closure, instead it calls JSfuncs['stackSave'].body to find
    // out what the minified function name is.
    'stackSave': function() {
      Runtime.stackSave()
    },
    'stackRestore': function() {
      Runtime.stackRestore()
    },
    // type conversion from js to c
    'arrayToC' : function(arr) {
      var ret = Runtime.stackAlloc(arr.length);
      writeArrayToMemory(arr, ret);
      return ret;
    },
    'stringToC' : function(str) {
      var ret = 0;
      if (str !== null && str !== undefined && str !== 0) { // null string
        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\0'
        ret = Runtime.stackAlloc((str.length << 2) + 1);
        writeStringToMemory(str, ret);
      }
      return ret;
    }
  };
  // For fast lookup of conversion functions
  var toC = {'string' : JSfuncs['stringToC'], 'array' : JSfuncs['arrayToC']};

  // C calling interface. 
  ccall = function ccallFunc(ident, returnType, argTypes, args, opts) {
    var func = getCFunc(ident);
    var cArgs = [];
    var stack = 0;
    assert(returnType !== 'array', 'Return type should not be "array".');
    if (args) {
      for (var i = 0; i < args.length; i++) {
        var converter = toC[argTypes[i]];
        if (converter) {
          if (stack === 0) stack = Runtime.stackSave();
          cArgs[i] = converter(args[i]);
        } else {
          cArgs[i] = args[i];
        }
      }
    }
    var ret = func.apply(null, cArgs);
    if ((!opts || !opts.async) && typeof EmterpreterAsync === 'object') {
      assert(!EmterpreterAsync.state, 'cannot start async op with normal JS calling ccall');
    }
    if (opts && opts.async) assert(!returnType, 'async ccalls cannot return values');
    if (returnType === 'string') ret = Pointer_stringify(ret);
    if (stack !== 0) {
      if (opts && opts.async) {
        EmterpreterAsync.asyncFinalizers.push(function() {
          Runtime.stackRestore(stack);
        });
        return;
      }
      Runtime.stackRestore(stack);
    }
    return ret;
  }

  var sourceRegex = /^function\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/;
  function parseJSFunc(jsfunc) {
    // Match the body and the return value of a javascript function source
    var parsed = jsfunc.toString().match(sourceRegex).slice(1);
    return {arguments : parsed[0], body : parsed[1], returnValue: parsed[2]}
  }
  var JSsource = {};
  for (var fun in JSfuncs) {
    if (JSfuncs.hasOwnProperty(fun)) {
      // Elements of toCsource are arrays of three items:
      // the code, and the return value
      JSsource[fun] = parseJSFunc(JSfuncs[fun]);
    }
  }

  
  cwrap = function cwrap(ident, returnType, argTypes) {
    argTypes = argTypes || [];
    var cfunc = getCFunc(ident);
    // When the function takes numbers and returns a number, we can just return
    // the original function
    var numericArgs = argTypes.every(function(type){ return type === 'number'});
    var numericRet = (returnType !== 'string');
    if ( numericRet && numericArgs) {
      return cfunc;
    }
    // Creation of the arguments list (["$1","$2",...,"$nargs"])
    var argNames = argTypes.map(function(x,i){return '$'+i});
    var funcstr = "(function(" + argNames.join(',') + ") {";
    var nargs = argTypes.length;
    if (!numericArgs) {
      // Generate the code needed to convert the arguments from javascript
      // values to pointers
      funcstr += 'var stack = ' + JSsource['stackSave'].body + ';';
      for (var i = 0; i < nargs; i++) {
        var arg = argNames[i], type = argTypes[i];
        if (type === 'number') continue;
        var convertCode = JSsource[type + 'ToC']; // [code, return]
        funcstr += 'var ' + convertCode.arguments + ' = ' + arg + ';';
        funcstr += convertCode.body + ';';
        funcstr += arg + '=' + convertCode.returnValue + ';';
      }
    }

    // When the code is compressed, the name of cfunc is not literally 'cfunc' anymore
    var cfuncname = parseJSFunc(function(){return cfunc}).returnValue;
    // Call the function
    funcstr += 'var ret = ' + cfuncname + '(' + argNames.join(',') + ');';
    if (!numericRet) { // Return type can only by 'string' or 'number'
      // Convert the result to a string
      var strgfy = parseJSFunc(function(){return Pointer_stringify}).returnValue;
      funcstr += 'ret = ' + strgfy + '(ret);';
    }
    funcstr += "if (typeof EmterpreterAsync === 'object') { assert(!EmterpreterAsync.state, 'cannot start async op with normal JS calling cwrap') }";
    if (!numericArgs) {
      // If we had a stack, restore it
      funcstr += JSsource['stackRestore'].body.replace('()', '(stack)') + ';';
    }
    funcstr += 'return ret})';
    return eval(funcstr);
  };
})();
Module["cwrap"] = cwrap;
Module["ccall"] = ccall;


function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[((ptr)>>0)]=value; break;
      case 'i8': HEAP8[((ptr)>>0)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module['setValue'] = setValue;


function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[((ptr)>>0)];
      case 'i8': return HEAP8[((ptr)>>0)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module['getValue'] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module['ALLOC_NORMAL'] = ALLOC_NORMAL;
Module['ALLOC_STACK'] = ALLOC_STACK;
Module['ALLOC_STATIC'] = ALLOC_STATIC;
Module['ALLOC_DYNAMIC'] = ALLOC_DYNAMIC;
Module['ALLOC_NONE'] = ALLOC_NONE;

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)>>0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }
    assert(type, 'Must know what type to store in allocate!');

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}
Module['allocate'] = allocate;

// Allocate memory during any stage of startup - static memory early on, dynamic memory later, malloc when ready
function getMemory(size) {
  if (!staticSealed) return Runtime.staticAlloc(size);
  if ((typeof _sbrk !== 'undefined' && !_sbrk.called) || !runtimeInitialized) return Runtime.dynamicAlloc(size);
  return _malloc(size);
}
Module['getMemory'] = getMemory;

function Pointer_stringify(ptr, /* optional */ length) {
  if (length === 0 || !ptr) return '';
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = 0;
  var t;
  var i = 0;
  while (1) {
    assert(ptr + i < TOTAL_MEMORY);
    t = HEAPU8[(((ptr)+(i))>>0)];
    hasUtf |= t;
    if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (hasUtf < 128) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }
  return Module['UTF8ToString'](ptr);
}
Module['Pointer_stringify'] = Pointer_stringify;

// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function AsciiToString(ptr) {
  var str = '';
  while (1) {
    var ch = HEAP8[((ptr++)>>0)];
    if (!ch) return str;
    str += String.fromCharCode(ch);
  }
}
Module['AsciiToString'] = AsciiToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.

function stringToAscii(str, outPtr) {
  return writeAsciiToMemory(str, outPtr, false);
}
Module['stringToAscii'] = stringToAscii;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the given array that contains uint8 values, returns
// a copy of that string as a Javascript String object.

function UTF8ArrayToString(u8Array, idx) {
  var u0, u1, u2, u3, u4, u5;

  var str = '';
  while (1) {
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    u0 = u8Array[idx++];
    if (!u0) return str;
    if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }
    u1 = u8Array[idx++] & 63;
    if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }
    u2 = u8Array[idx++] & 63;
    if ((u0 & 0xF0) == 0xE0) {
      u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;
    } else {
      u3 = u8Array[idx++] & 63;
      if ((u0 & 0xF8) == 0xF0) {
        u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | u3;
      } else {
        u4 = u8Array[idx++] & 63;
        if ((u0 & 0xFC) == 0xF8) {
          u0 = ((u0 & 3) << 24) | (u1 << 18) | (u2 << 12) | (u3 << 6) | u4;
        } else {
          u5 = u8Array[idx++] & 63;
          u0 = ((u0 & 1) << 30) | (u1 << 24) | (u2 << 18) | (u3 << 12) | (u4 << 6) | u5;
        }
      }
    }
    if (u0 < 0x10000) {
      str += String.fromCharCode(u0);
    } else {
      var ch = u0 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    }
  }
}
Module['UTF8ArrayToString'] = UTF8ArrayToString;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF8ToString(ptr) {
  return UTF8ArrayToString(HEAPU8, ptr);
}
Module['UTF8ToString'] = UTF8ToString;

// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',
// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outU8Array: the array to copy to. Each index in this array is assumed to be one 8-byte element.
//   outIdx: The starting offset in the array to begin the copying.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.
//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.
    return 0;

  var startIdx = outIdx;
  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      if (outIdx >= endIdx) break;
      outU8Array[outIdx++] = u;
    } else if (u <= 0x7FF) {
      if (outIdx + 1 >= endIdx) break;
      outU8Array[outIdx++] = 0xC0 | (u >> 6);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0xFFFF) {
      if (outIdx + 2 >= endIdx) break;
      outU8Array[outIdx++] = 0xE0 | (u >> 12);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x1FFFFF) {
      if (outIdx + 3 >= endIdx) break;
      outU8Array[outIdx++] = 0xF0 | (u >> 18);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x3FFFFFF) {
      if (outIdx + 4 >= endIdx) break;
      outU8Array[outIdx++] = 0xF8 | (u >> 24);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else {
      if (outIdx + 5 >= endIdx) break;
      outU8Array[outIdx++] = 0xFC | (u >> 30);
      outU8Array[outIdx++] = 0x80 | ((u >> 24) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    }
  }
  // Null-terminate the pointer to the buffer.
  outU8Array[outIdx] = 0;
  return outIdx - startIdx;
}
Module['stringToUTF8Array'] = stringToUTF8Array;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8(str, outPtr, maxBytesToWrite) {
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);
}
Module['stringToUTF8'] = stringToUTF8;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF8(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      ++len;
    } else if (u <= 0x7FF) {
      len += 2;
    } else if (u <= 0xFFFF) {
      len += 3;
    } else if (u <= 0x1FFFFF) {
      len += 4;
    } else if (u <= 0x3FFFFFF) {
      len += 5;
    } else {
      len += 6;
    }
  }
  return len;
}
Module['lengthBytesUTF8'] = lengthBytesUTF8;

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF16ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
    if (codeUnit == 0)
      return str;
    ++i;
    // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
    str += String.fromCharCode(codeUnit);
  }
}
Module['UTF16ToString'] = UTF16ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.
// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF16(str, outPtr, maxBytesToWrite) {
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 2) return 0;
  maxBytesToWrite -= 2; // Null terminator.
  var startPtr = outPtr;
  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;
  for (var i = 0; i < numCharsToWrite; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[((outPtr)>>1)]=codeUnit;
    outPtr += 2;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[((outPtr)>>1)]=0;
  return outPtr - startPtr;
}
Module['stringToUTF16'] = stringToUTF16;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF16(str) {
  return str.length*2;
}
Module['lengthBytesUTF16'] = lengthBytesUTF16;

function UTF32ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}
Module['UTF32ToString'] = UTF32ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.
// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF32(str, outPtr, maxBytesToWrite) {
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 4) return 0;
  var startPtr = outPtr;
  var endPtr = startPtr + maxBytesToWrite - 4;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++i);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[((outPtr)>>2)]=codeUnit;
    outPtr += 4;
    if (outPtr + 4 > endPtr) break;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[((outPtr)>>2)]=0;
  return outPtr - startPtr;
}
Module['stringToUTF32'] = stringToUTF32;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF32(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i);
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.
    len += 4;
  }

  return len;
}
Module['lengthBytesUTF32'] = lengthBytesUTF32;

function demangle(func) {
  var hasLibcxxabi = !!Module['___cxa_demangle'];
  if (hasLibcxxabi) {
    try {
      var buf = _malloc(func.length);
      writeStringToMemory(func.substr(1), buf);
      var status = _malloc(4);
      var ret = Module['___cxa_demangle'](buf, 0, 0, status);
      if (getValue(status, 'i32') === 0 && ret) {
        return Pointer_stringify(ret);
      }
      // otherwise, libcxxabi failed, we can try ours which may return a partial result
    } catch(e) {
      // failure when using libcxxabi, we can try ours which may return a partial result
    } finally {
      if (buf) _free(buf);
      if (status) _free(status);
      if (ret) _free(ret);
    }
  }
  var i = 3;
  // params, etc.
  var basicTypes = {
    'v': 'void',
    'b': 'bool',
    'c': 'char',
    's': 'short',
    'i': 'int',
    'l': 'long',
    'f': 'float',
    'd': 'double',
    'w': 'wchar_t',
    'a': 'signed char',
    'h': 'unsigned char',
    't': 'unsigned short',
    'j': 'unsigned int',
    'm': 'unsigned long',
    'x': 'long long',
    'y': 'unsigned long long',
    'z': '...'
  };
  var subs = [];
  var first = true;
  function dump(x) {
    //return;
    if (x) Module.print(x);
    Module.print(func);
    var pre = '';
    for (var a = 0; a < i; a++) pre += ' ';
    Module.print (pre + '^');
  }
  function parseNested() {
    i++;
    if (func[i] === 'K') i++; // ignore const
    var parts = [];
    while (func[i] !== 'E') {
      if (func[i] === 'S') { // substitution
        i++;
        var next = func.indexOf('_', i);
        var num = func.substring(i, next) || 0;
        parts.push(subs[num] || '?');
        i = next+1;
        continue;
      }
      if (func[i] === 'C') { // constructor
        parts.push(parts[parts.length-1]);
        i += 2;
        continue;
      }
      var size = parseInt(func.substr(i));
      var pre = size.toString().length;
      if (!size || !pre) { i--; break; } // counter i++ below us
      var curr = func.substr(i + pre, size);
      parts.push(curr);
      subs.push(curr);
      i += pre + size;
    }
    i++; // skip E
    return parts;
  }
  function parse(rawList, limit, allowVoid) { // main parser
    limit = limit || Infinity;
    var ret = '', list = [];
    function flushList() {
      return '(' + list.join(', ') + ')';
    }
    var name;
    if (func[i] === 'N') {
      // namespaced N-E
      name = parseNested().join('::');
      limit--;
      if (limit === 0) return rawList ? [name] : name;
    } else {
      // not namespaced
      if (func[i] === 'K' || (first && func[i] === 'L')) i++; // ignore const and first 'L'
      var size = parseInt(func.substr(i));
      if (size) {
        var pre = size.toString().length;
        name = func.substr(i + pre, size);
        i += pre + size;
      }
    }
    first = false;
    if (func[i] === 'I') {
      i++;
      var iList = parse(true);
      var iRet = parse(true, 1, true);
      ret += iRet[0] + ' ' + name + '<' + iList.join(', ') + '>';
    } else {
      ret = name;
    }
    paramLoop: while (i < func.length && limit-- > 0) {
      //dump('paramLoop');
      var c = func[i++];
      if (c in basicTypes) {
        list.push(basicTypes[c]);
      } else {
        switch (c) {
          case 'P': list.push(parse(true, 1, true)[0] + '*'); break; // pointer
          case 'R': list.push(parse(true, 1, true)[0] + '&'); break; // reference
          case 'L': { // literal
            i++; // skip basic type
            var end = func.indexOf('E', i);
            var size = end - i;
            list.push(func.substr(i, size));
            i += size + 2; // size + 'EE'
            break;
          }
          case 'A': { // array
            var size = parseInt(func.substr(i));
            i += size.toString().length;
            if (func[i] !== '_') throw '?';
            i++; // skip _
            list.push(parse(true, 1, true)[0] + ' [' + size + ']');
            break;
          }
          case 'E': break paramLoop;
          default: ret += '?' + c; break paramLoop;
        }
      }
    }
    if (!allowVoid && list.length === 1 && list[0] === 'void') list = []; // avoid (void)
    if (rawList) {
      if (ret) {
        list.push(ret + '?');
      }
      return list;
    } else {
      return ret + flushList();
    }
  }
  var parsed = func;
  try {
    // Special-case the entry point, since its name differs from other name mangling.
    if (func == 'Object._main' || func == '_main') {
      return 'main()';
    }
    if (typeof func === 'number') func = Pointer_stringify(func);
    if (func[0] !== '_') return func;
    if (func[1] !== '_') return func; // C function
    if (func[2] !== 'Z') return func;
    switch (func[3]) {
      case 'n': return 'operator new()';
      case 'd': return 'operator delete()';
    }
    parsed = parse();
  } catch(e) {
    parsed += '?';
  }
  if (parsed.indexOf('?') >= 0 && !hasLibcxxabi) {
    Runtime.warnOnce('warning: a problem occurred in builtin C++ name demangling; build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling');
  }
  return parsed;
}

function demangleAll(text) {
  return text.replace(/__Z[\w\d_]+/g, function(x) { var y = demangle(x); return x === y ? x : (x + ' [' + y + ']') });
}

function jsStackTrace() {
  var err = new Error();
  if (!err.stack) {
    // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,
    // so try that as a special-case.
    try {
      throw new Error(0);
    } catch(e) {
      err = e;
    }
    if (!err.stack) {
      return '(no stack trace available)';
    }
  }
  return err.stack.toString();
}

function stackTrace() {
  return demangleAll(jsStackTrace());
}
Module['stackTrace'] = stackTrace;

// Memory management

var PAGE_SIZE = 4096;

function alignMemoryPage(x) {
  if (x % 4096 > 0) {
    x += (4096 - (x % 4096));
  }
  return x;
}

var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false; // static area
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0; // stack area
var DYNAMIC_BASE = 0, DYNAMICTOP = 0; // dynamic area handled by sbrk


function enlargeMemory() {
  abort('Cannot enlarge memory arrays. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with ALLOW_MEMORY_GROWTH which adjusts the size at runtime but prevents some optimizations, or (3) set Module.TOTAL_MEMORY before the program runs.');
}


var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;

var totalMemory = 64*1024;
while (totalMemory < TOTAL_MEMORY || totalMemory < 2*TOTAL_STACK) {
  if (totalMemory < 16*1024*1024) {
    totalMemory *= 2;
  } else {
    totalMemory += 16*1024*1024
  }
}
if (totalMemory !== TOTAL_MEMORY) {
  Module.printErr('increasing TOTAL_MEMORY to ' + totalMemory + ' to be compliant with the asm.js spec (and given that TOTAL_STACK=' + TOTAL_STACK + ')');
  TOTAL_MEMORY = totalMemory;
}

// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'JS engine does not provide full typed array support');

var buffer;
buffer = new ArrayBuffer(TOTAL_MEMORY);
HEAP8 = new Int8Array(buffer);
HEAP16 = new Int16Array(buffer);
HEAP32 = new Int32Array(buffer);
HEAPU8 = new Uint8Array(buffer);
HEAPU16 = new Uint16Array(buffer);
HEAPU32 = new Uint32Array(buffer);
HEAPF32 = new Float32Array(buffer);
HEAPF64 = new Float64Array(buffer);

// Endianness check (note: assumes compiler arch was little-endian)
HEAP32[0] = 255;
assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');

Module['HEAP'] = HEAP;
Module['buffer'] = buffer;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;
var runtimeExited = false;


function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
  runtimeExited = true;
}

function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module['addOnPreRun'] = Module.addOnPreRun = addOnPreRun;

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module['addOnInit'] = Module.addOnInit = addOnInit;

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module['addOnPreMain'] = Module.addOnPreMain = addOnPreMain;

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module['addOnExit'] = Module.addOnExit = addOnExit;

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module['addOnPostRun'] = Module.addOnPostRun = addOnPostRun;

// Tools


function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;
  var u8array = new Array(len);
  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
  if (dontAddNull) u8array.length = numBytesWritten;
  return u8array;
}
Module['intArrayFromString'] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
        assert(false, 'Character code ' + chr + ' (' + String.fromCharCode(chr) + ')  at offset ' + i + ' not in 0x00-0xFF.');
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module['intArrayToString'] = intArrayToString;

function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[(((buffer)+(i))>>0)]=chr;
    i = i + 1;
  }
}
Module['writeStringToMemory'] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[((buffer++)>>0)]=array[i];
  }
}
Module['writeArrayToMemory'] = writeArrayToMemory;

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; ++i) {
    assert(str.charCodeAt(i) === str.charCodeAt(i)&0xff);
    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);
  }
  // Null-terminate the pointer to the HEAP.
  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;
}
Module['writeAsciiToMemory'] = writeAsciiToMemory;

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}


// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];


if (!Math['clz32']) Math['clz32'] = function(x) {
  x = x >>> 0;
  for (var i = 0; i < 32; i++) {
    if (x & (1 << (31 - i))) return i;
  }
  return 32;
};
Math.clz32 = Math['clz32']

var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_min = Math.min;
var Math_clz32 = Math.clz32;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled
var runDependencyTracking = {};

function getUniqueRunDependency(id) {
  var orig = id;
  while (1) {
    if (!runDependencyTracking[id]) return id;
    id = orig + Math.random();
  }
  return id;
}

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(!runDependencyTracking[id]);
    runDependencyTracking[id] = 1;
    if (runDependencyWatcher === null && typeof setInterval !== 'undefined') {
      // Check for missing dependencies every few seconds
      runDependencyWatcher = setInterval(function() {
        if (ABORT) {
          clearInterval(runDependencyWatcher);
          runDependencyWatcher = null;
          return;
        }
        var shown = false;
        for (var dep in runDependencyTracking) {
          if (!shown) {
            shown = true;
            Module.printErr('still waiting on run dependencies:');
          }
          Module.printErr('dependency: ' + dep);
        }
        if (shown) {
          Module.printErr('(end of list)');
        }
      }, 10000);
    }
  } else {
    Module.printErr('warning: run dependency added without ID');
  }
}
Module['addRunDependency'] = addRunDependency;
function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(runDependencyTracking[id]);
    delete runDependencyTracking[id];
  } else {
    Module.printErr('warning: run dependency removed without ID');
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module['removeRunDependency'] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data



var memoryInitializer = null;



// === Body ===

var ASM_CONSTS = [];




STATIC_BASE = 8;

STATICTOP = STATIC_BASE + 15152;
  /* global initializers */  __ATINIT__.push();
  

/* memory initializer */ allocate([10,75,65,75,65,75,65,75,32,85,115,97,103,101,58,32,46,47,105,107,32,114,48,48,32,114,48,49,32,114,48,50,32,116,48,32,114,49,48,32,114,49,49,32,114,49,50,32,116,49,32,114,50,48,32,114,50,49,32,114,50,50,32,116,50,32,102,114,101,101,48,32,46,46,46,10,10,82,101,116,117,114,110,115,32,116,104,101,32,105,107,32,115,111,108,117,116,105,111,110,115,32,103,105,118,101,110,32,116,104,101,32,116,114,97,110,115,102,111,114,109,97,116,105,111,110,32,111,102,32,116,104,101,32,101,110,100,32,101,102,102,101,99,116,111,114,32,115,112,101,99,105,102,105,101,100,32,98,121,10,97,32,51,120,51,32,114,111,116,97,116,105,111,110,32,82,32,40,114,88,88,41,44,32,97,110,100,32,97,32,51,120,49,32,116,114,97,110,115,108,97,116,105,111,110,32,40,116,88,41,46,10,84,104,101,114,101,32,97,114,101,32,37,100,32,102,114,101,101,32,112,97,114,97,109,101,116,101,114,115,32,116,104,97,116,32,104,97,118,101,32,116,111,32,98,101,32,115,112,101,99,105,102,105,101,100,46,10,10,0,0,0,70,97,105,108,101,100,32,116,111,32,103,101,116,32,105,107,32,115,111,108,117,116,105,111,110,10,0,0,0,0,0,0,70,111,117,110,100,32,37,100,32,105,107,32,115,111,108,117,116,105,111,110,115,58,10,0,115,111,108,37,100,32,40,102,114,101,101,61,37,100,41,58,32,0,0,0,0,0,0,0,37,46,49,53,102,44,32,0,10,0,0,0,0,0,0,0,0,0,0,0,152,1,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,120,9,0,0,216,2,0,0,248,2,0,0,0,0,0,0,0,0,0,0,208,1,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,120,9,0,0,112,2,0,0,144,2,0,0,0,0,0,0,109,97,120,32,115,111,108,117,116,105,111,110,115,32,102,111,114,32,106,111,105,110,116,32,110,111,116,32,105,110,105,116,105,97,108,105,122,101,100,0,105,110,100,101,120,32,62,61,32,109,97,120,32,115,111,108,117,116,105,111,110,115,32,102,111,114,32,106,111,105,110,116,0,0,0,0,0,0,0,0,50,110,100,32,105,110,100,101,120,32,62,61,32,109,97,120,32,115,111,108,117,116,105,111,110,115,32,102,111,114,32,106,111,105,110,116,0,0,0,0,102,111,102,102,115,101,116,32,119,97,115,32,110,111,116,32,102,105,110,105,116,101,0,0,78,54,105,107,102,97,115,116,49,48,73,107,83,111,108,117,116,105,111,110,73,100,69,69,0,0,0,0,0,0,0,0,80,9,0,0,152,2,0,0,78,54,105,107,102,97,115,116,49,52,73,107,83,111,108,117,116,105,111,110,66,97,115,101,73,100,69,69,0,0,0,0,0,0,0,0,144,2,0,0,15,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,17,0,0,0,17,0,0,0,78,54,105,107,102,97,115,116,49,52,73,107,83,111,108,117,116,105,111,110,76,105,115,116,73,100,69,69,0,0,0,0,80,9,0,0,0,3,0,0,78,54,105,107,102,97,115,116,49,56,73,107,83,111,108,117,116,105,111,110,76,105,115,116,66,97,115,101,73,100,69,69,0,0,0,0,0,0,0,0,71,101,116,83,111,108,117,116,105,111,110,32,105,110,100,101,120,32,105,115,32,105,110,118,97,108,105,100,0,0,0,0,0,0,0,0,248,2,0,0,19,0,0,0,20,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,105,107,102,97,115,116,32,101,120,99,101,112,116,105,111,110,58,32,0,0,0,0,0,0,46,47,115,111,108,118,101,114,115,47,80,85,77,65,95,97,114,109,95,110,111,103,114,105,112,112,101,114,46,116,109,112,46,99,112,112,0,0,0,0,58,0,0,0,0,0,0,0,73,75,97,116,97,110,50,0,58,32,65,115,115,101,114,116,105,111,110,32,39,0,0,0,33,105,115,110,97,110,40,102,120,41,0,0,0,0,0,0,39,32,102,97,105,108,101,100,0,0,0,0,0,0,0,0,180,4,0,0,244,4,0,0,52,5,0,0,72,5,0,0,92,5,0,0,112,5,0,0,28,5,0,0,8,5,0,0,220,4,0,0,200,4,0,0,0,0,0,0,80,4,0,0,21,0,0,0,22,0,0,0,23,0,0,0,24,0,0,0,25,0,0,0,26,0,0,0,27,0,0,0,28,0,0,0,29,0,0,0,30,0,0,0,31,0,0,0,32,0,0,0,33,0,0,0,34,0,0,0,120,9,0,0,96,4,0,0,48,20,0,0,0,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,105,110,103,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,120,5,0,0,35,0,0,0,36,0,0,0,56,0,0,0,248,255,255,255,120,5,0,0,37,0,0,0,38,0,0,0,192,255,255,255,192,255,255,255,120,5,0,0,39,0,0,0,40,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,248,20,0,0,41,0,0,0,42,0,0,0,56,0,0,0,248,255,255,255,248,20,0,0,43,0,0,0,44,0,0,0,192,255,255,255,192,255,255,255,248,20,0,0,45,0,0,0,46,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,104,20,0,0,47,0,0,0,48,0,0,0,192,255,255,255,192,255,255,255,104,20,0,0,49,0,0,0,50,0,0,0,56,0,0,0,0,0,0,0,176,20,0,0,51,0,0,0,52,0,0,0,200,255,255,255,200,255,255,255,176,20,0,0,53,0,0,0,54,0,0,0,120,9,0,0,136,5,0,0,248,20,0,0,0,0,0,0,78,83,116,51,95,95,49,49,56,98,97,115,105,99,95,115,116,114,105,110,103,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,0,0,0,73,75,97,99,111,115,0,0,102,32,62,32,45,49,45,73,75,70,65,83,84,95,83,73,78,67,79,83,95,84,72,82,69,83,72,32,38,38,32,102,32,60,32,49,43,73,75,70,65,83,84,95,83,73,78,67,79,83,95,84,72,82,69,83,72,0,0,0,0,0,0,0,73,75,97,115,105,110,0,0,2,0,0,192,3,0,0,192,4,0,0,192,5,0,0,192,6,0,0,192,7,0,0,192,8,0,0,192,9,0,0,192,10,0,0,192,11,0,0,192,12,0,0,192,13,0,0,192,14,0,0,192,15,0,0,192,16,0,0,192,17,0,0,192,18,0,0,192,19,0,0,192,20,0,0,192,21,0,0,192,22,0,0,192,23,0,0,192,24,0,0,192,25,0,0,192,26,0,0,192,27,0,0,192,28,0,0,192,29,0,0,192,30,0,0,192,31,0,0,192,0,0,0,179,1,0,0,195,2,0,0,195,3,0,0,195,4,0,0,195,5,0,0,195,6,0,0,195,7,0,0,195,8,0,0,195,9,0,0,195,10,0,0,195,11,0,0,195,12,0,0,195,13,0,0,211,14,0,0,195,15,0,0,195,0,0,12,187,1,0,12,195,2,0,12,195,3,0,12,195,4,0,12,211,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,55,0,0,0,0,0,0,0,0,0,0,0,48,7,0,0,56,0,0,0,57,0,0,0,58,0,0,0,0,0,0,0,83,116,57,98,97,100,95,97,108,108,111,99,0,0,0,0,120,9,0,0,32,7,0,0,88,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,116,57,101,120,99,101,112,116,105,111,110,0,0,0,0,80,9,0,0,72,7,0,0,0,0,0,0,160,7,0,0,59,0,0,0,60,0,0,0,61,0,0,0,0,0,0,0,0,0,0,0,8,8,0,0,62,0,0,0,63,0,0,0,64,0,0,0,0,0,0,0,83,116,49,49,108,111,103,105,99,95,101,114,114,111,114,0,120,9,0,0,144,7,0,0,88,7,0,0,0,0,0,0,0,0,0,0,224,7,0,0,59,0,0,0,65,0,0,0,61,0,0,0,0,0,0,0,83,116,49,50,111,117,116,95,111,102,95,114,97,110,103,101,0,0,0,0,0,0,0,0,120,9,0,0,200,7,0,0,160,7,0,0,0,0,0,0,83,116,49,51,114,117,110,116,105,109,101,95,101,114,114,111,114,0,0,0,0,0,0,0,120,9,0,0,240,7,0,0,88,7,0,0,0,0,0,0,0,0,0,0,88,8,0,0,66,0,0,0,67,0,0,0,68,0,0,0,0,0,0,0,83,116,57,116,121,112,101,95,105,110,102,111,0,0,0,0,80,9,0,0,48,8,0,0,83,116,56,98,97,100,95,99,97,115,116,0,0,0,0,0,120,9,0,0,72,8,0,0,88,7,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,115,104,105,109,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,0,120,9,0,0,104,8,0,0,64,8,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,120,9,0,0,160,8,0,0,144,8,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,57,95,95,112,111,105,110,116,101,114,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,112,98,97,115,101,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,120,9,0,0,0,9,0,0,144,8,0,0,0,0,0,0,120,9,0,0,216,8,0,0,40,9,0,0,0,0,0,0,0,0,0,0,200,8,0,0,69,0,0,0,70,0,0,0,71,0,0,0,72,0,0,0,73,0,0,0,74,0,0,0,75,0,0,0,76,0,0,0,0,0,0,0,192,9,0,0,69,0,0,0,77,0,0,0,71,0,0,0,72,0,0,0,73,0,0,0,78,0,0,0,79,0,0,0,80,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,48,95,95,115,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,120,9,0,0,152,9,0,0,200,8,0,0,0,0,0,0,0,0,0,0,32,10,0,0,69,0,0,0,81,0,0,0,71,0,0,0,72,0,0,0,73,0,0,0,82,0,0,0,83,0,0,0,84,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,49,95,95,118,109,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,120,9,0,0,248,9,0,0,200,8,0,0,0,0,0,0,33,34,98,97,115,105,99,95,115,116,114,105,110,103,32,108,101,110,103,116,104,95,101,114,114,111,114,34,0,0,0,0,47,104,111,109,101,47,108,100,47,106,115,45,105,107,115,111,108,118,101,114,115,47,101,109,115,100,107,95,112,111,114,116,97,98,108,101,47,101,109,115,99,114,105,112,116,101,110,47,109,97,115,116,101,114,47,115,121,115,116,101,109,47,105,110,99,108,117,100,101,47,108,105,98,99,120,120,47,115,116,114,105,110,103,0,0,0,0,0,95,95,116,104,114,111,119,95,108,101,110,103,116,104,95,101,114,114,111,114,0,0,0,0,33,34,118,101,99,116,111,114,32,108,101,110,103,116,104,95,101,114,114,111,114,34,0,0,47,104,111,109,101,47,108,100,47,106,115,45,105,107,115,111,108,118,101,114,115,47,101,109,115,100,107,95,112,111,114,116,97,98,108,101,47,101,109,115,99,114,105,112,116,101,110,47,109,97,115,116,101,114,47,115,121,115,116,101,109,47,105,110,99,108,117,100,101,47,108,105,98,99,120,120,47,118,101,99,116,111,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,116,104,114,101,97,100,95,111,110,99,101,32,102,97,105,108,117,114,101,32,105,110,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,95,102,97,115,116,40,41,0,0,0,0,0,0,0,0,115,116,100,58,58,98,97,100,95,97,108,108,111,99,0,0,116,101,114,109,105,110,97,116,101,95,104,97,110,100,108,101,114,32,117,110,101,120,112,101,99,116,101,100,108,121,32,114,101,116,117,114,110,101,100,0,116,101,114,109,105,110,97,116,101,95,104,97,110,100,108,101,114,32,117,110,101,120,112,101,99,116,101,100,108,121,32,116,104,114,101,119,32,97,110,32,101,120,99,101,112,116,105,111,110,0,0,0,0,0,0,0,115,116,100,58,58,98,97,100,95,99,97,115,116,0,0,0,99,97,110,110,111,116,32,99,114,101,97,116,101,32,112,116,104,114,101,97,100,32,107,101,121,32,102,111,114,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,40,41,0,0,0,0,0,0,0,99,97,110,110,111,116,32,122,101,114,111,32,111,117,116,32,116,104,114,101,97,100,32,118,97,108,117,101,32,102,111,114,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,40,41,0,0,0,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,101,120,99,101,112,116,105,111,110,32,111,102,32,116,121,112,101,32,37,115,58,32,37,115,0,0,0,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,101,120,99,101,112,116,105,111,110,32,111,102,32,116,121,112,101,32,37,115,0,0,0,0,0,0,0,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,102,111,114,101,105,103,110,32,101,120,99,101,112,116,105,111,110,0,0,0,116,101,114,109,105,110,97,116,105,110,103,0,0,0,0,0,117,110,99,97,117,103,104,116,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,1,2,3,4,5,6,7,8,9,255,255,255,255,255,255,255,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,255,255,255,255,255,255,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,1,2,4,7,3,6,5,0,0,0,0,0,0,0,0,105,110,102,105,110,105,116,121,0,0,0,0,0,0,0,0,10,0,0,0,100,0,0,0,232,3,0,0,16,39,0,0,160,134,1,0,64,66,15,0,128,150,152,0,0,225,245,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,85,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,0,10,0,17,17,17,0,0,0,0,5,0,0,0,0,0,0,9,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,15,10,17,17,17,3,10,7,0,1,19,9,11,11,0,0,9,6,11,0,0,11,0,6,17,0,0,0,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,10,10,17,17,17,0,10,0,0,2,0,9,11,0,0,0,9,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,4,13,0,0,0,0,9,14,0,0,0,0,0,14,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,15,0,0,0,0,9,16,0,0,0,0,0,16,0,0,16,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,10,0,0,0,0,9,11,0,0,0,0,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,45,43,32,32,32,48,88,48,120,0,0,0,0,0,0,0,40,110,117,108,108,41,0,0,45,48,88,43,48,88,32,48,88,45,48,120,43,48,120,32,48,120,0,0,0,0,0,0,105,110,102,0,0,0,0,0,73,78,70,0,0,0,0,0,110,97,110,0,0,0,0,0,78,65,78,0,0,0,0,0,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,232,19,0,0,86,0,0,0,87,0,0,0,0,0,0,0,48,20,0,0,88,0,0,0,89,0,0,0,23,0,0,0,24,0,0,0,90,0,0,0,91,0,0,0,27,0,0,0,28,0,0,0,29,0,0,0,92,0,0,0,31,0,0,0,93,0,0,0,33,0,0,0,94,0,0,0,0,0,0,0,136,19,0,0,95,0,0,0,96,0,0,0,64,0,0,0,0,0,0,0,0,0,0,0,176,19,0,0,97,0,0,0,98,0,0,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,55,102,97,105,108,117,114,101,69,0,0,0,0,0,0,0,120,9,0,0,104,19,0,0,112,58,0,0,0,0,0,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,69,0,0,0,0,0,0,0,80,9,0,0,152,19,0,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,120,9,0,0,184,19,0,0,176,19,0,0,0,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,0,80,9,0,0,248,19,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,216,9,0,0,56,20,0,0,0,0,0,0,1,0,0,0,232,19,0,0,3,244,255,255,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,216,9,0,0,128,20,0,0,0,0,0,0,1,0,0,0,232,19,0,0,3,244,255,255,78,83,116,51,95,95,49,49,52,98,97,115,105,99,95,105,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,216,9,0,0,200,20,0,0,3,0,0,0,2,0,0,0,104,20,0,0,2,0,0,0,176,20,0,0,2,8,0,0,0,0,0,0,96,21,0,0,99,0,0,0,100,0,0,0,101,0,0,0,102,0,0,0,103,0,0,0,104,0,0,0,105,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,57,95,95,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,69,0,0,0,120,9,0,0,64,21,0,0,192,58,0,0,0,0,0,0,0,0,0,0,0,0,0,0,105,111,115,95,98,97,115,101,58,58,99,108,101,97,114,0,105,111,115,116,114,101,97,109,0,0,0,0,0,0,0,0,117,110,115,112,101,99,105,102,105,101,100,32,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,32,101,114,114,111,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,216,30,0,0,106,0,0,0,107,0,0,0,108,0,0,0,109,0,0,0,110,0,0,0,111,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,0,0,112,0,0,0,113,0,0,0,108,0,0,0,114,0,0,0,115,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,31,0,0,117,0,0,0,118,0,0,0,108,0,0,0,119,0,0,0,120,0,0,0,121,0,0,0,122,0,0,0,123,0,0,0,124,0,0,0,125,0,0,0,126,0,0,0,127,0,0,0,128,0,0,0,129,0,0,0,0,0,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102,65,66,67,68,69,70,120,88,43,45,112,80,105,73,110,78,0,0,0,0,0,0,0,0,0,0,0,0,72,32,0,0,130,0,0,0,131,0,0,0,108,0,0,0,132,0,0,0,133,0,0,0,134,0,0,0,135,0,0,0,136,0,0,0,137,0,0,0,138,0,0,0,139,0,0,0,140,0,0,0,141,0,0,0,142,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,32,0,0,143,0,0,0,144,0,0,0,108,0,0,0,145,0,0,0,146,0,0,0,147,0,0,0,148,0,0,0,149,0,0,0,150,0,0,0,151,0,0,0,152,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,33,0,0,153,0,0,0,154,0,0,0,108,0,0,0,155,0,0,0,156,0,0,0,157,0,0,0,158,0,0,0,159,0,0,0,160,0,0,0,161,0,0,0,162,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,33,0,0,163,0,0,0,164,0,0,0,108,0,0,0,165,0,0,0,166,0,0,0,167,0,0,0,168,0,0,0,169,0,0,0,170,0,0,0,171,0,0,0,248,255,255,255,128,33,0,0,172,0,0,0,173,0,0,0,174,0,0,0,175,0,0,0,176,0,0,0,177,0,0,0,178,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,33,0,0,179,0,0,0,180,0,0,0,108,0,0,0,181,0,0,0,182,0,0,0,183,0,0,0,184,0,0,0,185,0,0,0,186,0,0,0,187,0,0,0,248,255,255,255,240,33,0,0,188,0,0,0,189,0,0,0,190,0,0,0,191,0,0,0,192,0,0,0,193,0,0,0,194,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,34,0,0,195,0,0,0,196,0,0,0,108,0,0,0,197,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,200,34,0,0,198,0,0,0,199,0,0,0,108,0,0,0,200,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,35,0,0,201,0,0,0,202,0,0,0,108,0,0,0,203,0,0,0,204,0,0,0,205,0,0,0,206,0,0,0,207,0,0,0,208,0,0,0,209,0,0,0,210,0,0,0,211,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,35,0,0,212,0,0,0,213,0,0,0,108,0,0,0,214,0,0,0,215,0,0,0,216,0,0,0,217,0,0,0,218,0,0,0,219,0,0,0,220,0,0,0,221,0,0,0,222,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,35,0,0,223,0,0,0,224,0,0,0,108,0,0,0,225,0,0,0,226,0,0,0,227,0,0,0,228,0,0,0,229,0,0,0,230,0,0,0,231,0,0,0,232,0,0,0,233,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,200,35,0,0,234,0,0,0,235,0,0,0,108,0,0,0,236,0,0,0,237,0,0,0,238,0,0,0,239,0,0,0,240,0,0,0,241,0,0,0,242,0,0,0,243,0,0,0,244,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,36,0,0,245,0,0,0,246,0,0,0,108,0,0,0,247,0,0,0,248,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,36,0,0,249,0,0,0,250,0,0,0,108,0,0,0,251,0,0,0,252,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,253,0,0,0,254,0,0,0,108,0,0,0,255,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,37,0,0,1,1,0,0,2,1,0,0,108,0,0,0,3,1,0,0,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,37,0,0,5,1,0,0,6,1,0,0,108,0,0,0,7,1,0,0,8,1,0,0,9,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,216,37,0,0,10,1,0,0,11,1,0,0,108,0,0,0,12,1,0,0,13,1,0,0,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,30,0,0,15,1,0,0,16,1,0,0,108,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,31,0,0,17,1,0,0,18,1,0,0,108,0,0,0,19,1,0,0,20,1,0,0,21,1,0,0,22,1,0,0,23,1,0,0,24,1,0,0,25,1,0,0,26,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,30,0,0,27,1,0,0,28,1,0,0,108,0,0,0,29,1,0,0,30,1,0,0,31,1,0,0,32,1,0,0,33,1,0,0,34,1,0,0,35,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,31,0,0,36,1,0,0,37,1,0,0,108,0,0,0,38,1,0,0,39,1,0,0,40,1,0,0,41,1,0,0,42,1,0,0,0,0,0,0,136,31,0,0,43,1,0,0,44,1,0,0,108,0,0,0,45,1,0,0,46,1,0,0,47,1,0,0,48,1,0,0,49,1,0,0,0,0,0,0,136,27,0,0,50,1,0,0,51,1,0,0,108,0,0,0,0,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,102,97,99,101,116,69,0,0,0,120,9,0,0,112,27,0,0,56,58,0,0,0,0,0,0,0,0,0,0,248,27,0,0,50,1,0,0,52,1,0,0,108,0,0,0,53,1,0,0,54,1,0,0,55,1,0,0,56,1,0,0,57,1,0,0,58,1,0,0,59,1,0,0,60,1,0,0,61,1,0,0,62,1,0,0,63,1,0,0,64,1,0,0,0,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,119,69,69,0,0,0,0,0,0,0,216,9,0,0,224,27,0,0,0,0,0,0,2,0,0,0,136,27,0,0,2,0,0,0,72,55,0,0,2,0,0,0,0,0,0,0,112,28,0,0,50,1,0,0,65,1,0,0,108,0,0,0,66,1,0,0,67,1,0,0,68,1,0,0,69,1,0,0,70,1,0,0,71,1,0,0,72,1,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,99,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,216,9,0,0,72,28,0,0,0,0,0,0,2,0,0,0,136,27,0,0,2,0,0,0,80,55,0,0,2,0,0,0,0,0,0,0,232,28,0,0,50,1,0,0,73,1,0,0,108,0,0,0,74,1,0,0,75,1,0,0,76,1,0,0,77,1,0,0,78,1,0,0,79,1,0,0,80,1,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,115,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,216,9,0,0,192,28,0,0,0,0,0,0,2,0,0,0,136,27,0,0,2,0,0,0,80,55,0,0,2,0,0,0,0,0,0,0,96,29,0,0,50,1,0,0,81,1,0,0,108,0,0,0,82,1,0,0,83,1,0,0,84,1,0,0,85,1,0,0,86,1,0,0,87,1,0,0,88,1,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,105,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,216,9,0,0,56,29,0,0,0,0,0,0,2,0,0,0,136,27,0,0,2,0,0,0,80,55,0,0,2,0,0,0,0,0,0,0,216,29,0,0,50,1,0,0,89,1,0,0,108,0,0,0,82,1,0,0,83,1,0,0,84,1,0,0,85,1,0,0,86,1,0,0,87,1,0,0,88,1,0,0,78,83,116,51,95,95,49,49,54,95,95,110,97,114,114,111,119,95,116,111,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,0,120,9,0,0,176,29,0,0,96,29,0,0,0,0,0,0,0,0,0,0,64,30,0,0,50,1,0,0,90,1,0,0,108,0,0,0,82,1,0,0,83,1,0,0,84,1,0,0,85,1,0,0,86,1,0,0,87,1,0,0,88,1,0,0,78,83,116,51,95,95,49,49,55,95,95,119,105,100,101,110,95,102,114,111,109,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,120,9,0,0,24,30,0,0,96,29,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,119,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,216,9,0,0,80,30,0,0,0,0,0,0,2,0,0,0,136,27,0,0,2,0,0,0,80,55,0,0,2,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,95,95,105,109,112,69,0,0,0,120,9,0,0,152,30,0,0,136,27,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,99,69,69,0,0,0,0,0,120,9,0,0,192,30,0,0,136,27,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,119,69,69,0,0,0,0,0,120,9,0,0,232,30,0,0,136,27,0,0,0,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,99,69,69,0,0,0,0,0,0,0,216,9,0,0,16,31,0,0,0,0,0,0,2,0,0,0,136,27,0,0,2,0,0,0,72,55,0,0,2,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,99,69,69,0,0,0,0,120,9,0,0,72,31,0,0,136,27,0,0,0,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,119,69,69,0,0,0,0,120,9,0,0,112,31,0,0,136,27,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,216,9,0,0,152,31,0,0,0,0,0,0,2,0,0,0,136,27,0,0,2,0,0,0,88,55,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,216,9,0,0,0,32,0,0,0,0,0,0,2,0,0,0,136,27,0,0,2,0,0,0,112,55,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,216,9,0,0,104,32,0,0,0,0,0,0,2,0,0,0,136,27,0,0,2,0,0,0,136,55,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,216,9,0,0,208,32,0,0,0,0,0,0,2,0,0,0,136,27,0,0,2,0,0,0,160,55,0,0,0,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,216,9,0,0,56,33,0,0,0,0,0,0,3,0,0,0,136,27,0,0,2,0,0,0,184,55,0,0,2,0,0,0,192,55,0,0,0,8,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,216,9,0,0,168,33,0,0,0,0,0,0,3,0,0,0,136,27,0,0,2,0,0,0,184,55,0,0,2,0,0,0,200,55,0,0,0,8,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,216,9,0,0,24,34,0,0,0,0,0,0,2,0,0,0,136,27,0,0,2,0,0,0,208,55,0,0,0,8,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,216,9,0,0,128,34,0,0,0,0,0,0,2,0,0,0,136,27,0,0,2,0,0,0,208,55,0,0,0,8,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,48,69,69,69,0,0,0,0,0,216,9,0,0,232,34,0,0,0,0,0,0,2,0,0,0,136,27,0,0,2,0,0,0,216,55,0,0,2,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,49,69,69,69,0,0,0,0,0,216,9,0,0,40,35,0,0,0,0,0,0,2,0,0,0,136,27,0,0,2,0,0,0,216,55,0,0,2,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,48,69,69,69,0,0,0,0,0,216,9,0,0,104,35,0,0,0,0,0,0,2,0,0,0,136,27,0,0,2,0,0,0,216,55,0,0,2,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,49,69,69,69,0,0,0,0,0,216,9,0,0,168,35,0,0,0,0,0,0,2,0,0,0,136,27,0,0,2,0,0,0,216,55,0,0,2,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,216,9,0,0,232,35,0,0,0,0,0,0,2,0,0,0,136,27,0,0,2,0,0,0,224,55,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,216,9,0,0,80,36,0,0,0,0,0,0,2,0,0,0,136,27,0,0,2,0,0,0,232,55,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,216,9,0,0,184,36,0,0,0,0,0,0,2,0,0,0,136,27,0,0,2,0,0,0,240,55,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,216,9,0,0,32,37,0,0,0,0,0,0,2,0,0,0,136,27,0,0,2,0,0,0,248,55,0,0,0,0,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,99,69,69,0,0,0,0,216,9,0,0,136,37,0,0,0,0,0,0,2,0,0,0,136,27,0,0,2,0,0,0,0,56,0,0,2,0,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,119,69,69,0,0,0,0,216,9,0,0,192,37,0,0,0,0,0,0,2,0,0,0,136,27,0,0,2,0,0,0,0,56,0,0,2,0,0,0,37,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,0,0,0,0,108,0,0,0,0,0,0,0,108,108,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,0,0,0,0,0,0,0,37,112,0,0,0,0,0,0,37,72,58,37,77,58,37,83,37,109,47,37,100,47,37,121,37,89,45,37,109,45,37,100,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,37,72,58,37,77,0,0,0,37,72,58,37,77,58,37,83,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,37,0,0,0,89,0,0,0,45,0,0,0,37,0,0,0,109,0,0,0,45,0,0,0,37,0,0,0,100,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,108,111,99,97,108,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,37,76,102,0,0,0,0,0,109,111,110,101,121,95,103,101,116,32,101,114,114,111,114,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,37,46,48,76,102,0,0,0,118,101,99,116,111,114], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);
/* memory initializer */ allocate([116,114,117,101,0,0,0,0,116,0,0,0,114,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,102,97,108,115,101,0,0,0,102,0,0,0,97,0,0,0,108,0,0,0,115,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,117,110,100,97,121,0,0,77,111,110,100,97,121,0,0,84,117,101,115,100,97,121,0,87,101,100,110,101,115,100,97,121,0,0,0,0,0,0,0,84,104,117,114,115,100,97,121,0,0,0,0,0,0,0,0,70,114,105,100,97,121,0,0,83,97,116,117,114,100,97,121,0,0,0,0,0,0,0,0,83,117,110,0,0,0,0,0,77,111,110,0,0,0,0,0,84,117,101,0,0,0,0,0,87,101,100,0,0,0,0,0,84,104,117,0,0,0,0,0,70,114,105,0,0,0,0,0,83,97,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,110,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,114,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,117,0,0,0,114,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,74,97,110,117,97,114,121,0,70,101,98,114,117,97,114,121,0,0,0,0,0,0,0,0,77,97,114,99,104,0,0,0,65,112,114,105,108,0,0,0,77,97,121,0,0,0,0,0,74,117,110,101,0,0,0,0,74,117,108,121,0,0,0,0,65,117,103,117,115,116,0,0,83,101,112,116,101,109,98,101,114,0,0,0,0,0,0,0,79,99,116,111,98,101,114,0,78,111,118,101,109,98,101,114,0,0,0,0,0,0,0,0,68,101,99,101,109,98,101,114,0,0,0,0,0,0,0,0,74,97,110,0,0,0,0,0,70,101,98,0,0,0,0,0,77,97,114,0,0,0,0,0,65,112,114,0,0,0,0,0,74,117,110,0,0,0,0,0,74,117,108,0,0,0,0,0,65,117,103,0,0,0,0,0,83,101,112,0,0,0,0,0,79,99,116,0,0,0,0,0,78,111,118,0,0,0,0,0,68,101,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,114,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,99,0,0,0,104,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,105,0,0,0,108,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,117,0,0,0,115,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,116,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,111,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,77,0,0,0,0,0,0,80,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,80,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,109,47,37,100,47,37,121,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,72,58,37,77,58,37,83,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,97,32,37,98,32,37,100,32,37,72,58,37,77,58,37,83,32,37,89,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,97,0,0,0,32,0,0,0,37,0,0,0,98,0,0,0,32,0,0,0,37,0,0,0,100,0,0,0,32,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,9,0,0,0,58,0,0,80,9,0,0,232,57,0,0,216,9,0,0,208,57,0,0,0,0,0,0,1,0,0,0,168,57,0,0,0,0,0,0,216,9,0,0,144,57,0,0,0,0,0,0,1,0,0,0,168,57,0,0,0,0,0,0,216,9,0,0,120,57,0,0,0,0,0,0,1,0,0,0,80,57,0,0,0,0,0,0,216,9,0,0,56,57,0,0,0,0,0,0,1,0,0,0,80,57,0,0,0,0,0,0,80,9,0,0,32,57,0,0,80,9,0,0,248,56,0,0,80,9,0,0,208,56,0,0,80,9,0,0,184,56,0,0,80,9,0,0,160,56,0,0,80,9,0,0,128,56,0,0,80,9,0,0,96,56,0,0,80,9,0,0,64,56,0,0,80,9,0,0,32,56,0,0,80,9,0,0,8,56,0,0,78,83,116,51,95,95,49,49,51,109,101,115,115,97,103,101,115,95,98,97,115,101,69,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,119,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,99,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,119,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,99,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,95,98,97,115,101,69,0,0,0,0,78,83,116,51,95,95,49,49,48,95,95,116,105,109,101,95,112,117,116,69,0,0,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,119,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,99,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,57,116,105,109,101,95,98,97,115,101,69,0,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,119,69,69,0,0,0,80,9,0,0,88,57,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,112,117,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,119,69,69,0,0,0,80,9,0,0,176,57,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,103,101,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,49,50,99,111,100,101,99,118,116,95,98,97,115,101,69,0,0,78,83,116,51,95,95,49,49,48,99,116,121,112,101,95,98,97,115,101,69,0,0,0,0,78,83,116,51,95,95,49,49,52,95,95,115,104,97,114,101,100,95,99,111,117,110,116,69,0,0,0,0,0,0,0,0,80,9,0,0,24,58,0,0,0,0,0,0,112,58,0,0,91,1,0,0,92,1,0,0,64,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,50,115,121,115,116,101,109,95,101,114,114,111,114,69,0,0,120,9,0,0,88,58,0,0,8,8,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,101,114,114,111,114,95,99,97,116,101,103,111,114,121,69,0,0,0,0,0,0,0,0,80,9,0,0,128,58,0,0,78,83,116,51,95,95,49,49,50,95,95,100,111,95,109,101,115,115,97,103,101,69,0,0,120,9,0,0,168,58,0,0,160,58,0,0,0,0,0,0,58,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+10664);





/* no memory initializer */
var tempDoublePtr = Runtime.alignMemory(allocate(12, "i8", ALLOC_STATIC), 8);

assert(tempDoublePtr % 8 == 0);

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}

// {{PRE_LIBRARY}}


   
  Module["_i64Subtract"] = _i64Subtract;

   
  Module["_i64Add"] = _i64Add;

  
  function __ZSt18uncaught_exceptionv() { // std::uncaught_exception()
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }
  
  
  
  var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:function (adjusted) {
        if (!adjusted || EXCEPTIONS.infos[adjusted]) return adjusted;
        for (var ptr in EXCEPTIONS.infos) {
          var info = EXCEPTIONS.infos[ptr];
          if (info.adjusted === adjusted) {
            return ptr;
          }
        }
        return adjusted;
      },addRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount++;
      },decRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        assert(info.refcount > 0);
        info.refcount--;
        if (info.refcount === 0) {
          if (info.destructor) {
            Runtime.dynCall('vi', info.destructor, [ptr]);
          }
          delete EXCEPTIONS.infos[ptr];
          ___cxa_free_exception(ptr);
        }
      },clearRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount = 0;
      }};
  function ___resumeException(ptr) {
      if (!EXCEPTIONS.last) { EXCEPTIONS.last = ptr; }
      EXCEPTIONS.clearRef(EXCEPTIONS.deAdjust(ptr)); // exception refcount should be cleared, but don't free it
      throw ptr;
    }function ___cxa_find_matching_catch() {
      var thrown = EXCEPTIONS.last;
      if (!thrown) {
        // just pass through the null ptr
        return ((asm["setTempRet0"](0),0)|0);
      }
      var info = EXCEPTIONS.infos[thrown];
      var throwntype = info.type;
      if (!throwntype) {
        // just pass through the thrown ptr
        return ((asm["setTempRet0"](0),thrown)|0);
      }
      var typeArray = Array.prototype.slice.call(arguments);
  
      var pointer = Module['___cxa_is_pointer_type'](throwntype);
      // can_catch receives a **, add indirection
      if (!___cxa_find_matching_catch.buffer) ___cxa_find_matching_catch.buffer = _malloc(4);
      HEAP32[((___cxa_find_matching_catch.buffer)>>2)]=thrown;
      thrown = ___cxa_find_matching_catch.buffer;
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        if (typeArray[i] && Module['___cxa_can_catch'](typeArray[i], throwntype, thrown)) {
          thrown = HEAP32[((thrown)>>2)]; // undo indirection
          info.adjusted = thrown;
          return ((asm["setTempRet0"](typeArray[i]),thrown)|0);
        }
      }
      // Shouldn't happen unless we have bogus data in typeArray
      // or encounter a type for which emscripten doesn't have suitable
      // typeinfo defined. Best-efforts match just in case.
      thrown = HEAP32[((thrown)>>2)]; // undo indirection
      return ((asm["setTempRet0"](throwntype),thrown)|0);
    }function ___cxa_throw(ptr, type, destructor) {
      EXCEPTIONS.infos[ptr] = {
        ptr: ptr,
        adjusted: ptr,
        type: type,
        destructor: destructor,
        refcount: 0
      };
      EXCEPTIONS.last = ptr;
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exception = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exception++;
      }
      throw ptr;
    }

  var _emscripten_resume=true;

  var _emscripten_landingpad=true;

  
  
  function _free() {
  }
  Module["_free"] = _free;function ___cxa_free_exception(ptr) {
      try {
        return _free(ptr);
      } catch(e) { // XXX FIXME
        Module.printErr('exception during cxa_free_exception: ' + e);
      }
    }function ___cxa_end_catch() {
      if (___cxa_end_catch.rethrown) {
        ___cxa_end_catch.rethrown = false;
        return;
      }
      // Clear state flag.
      asm['setThrew'](0);
      // Call destructor if one is registered then clear it.
      var ptr = EXCEPTIONS.caught.pop();
      if (ptr) {
        EXCEPTIONS.decRef(EXCEPTIONS.deAdjust(ptr));
        EXCEPTIONS.last = 0; // XXX in decRef?
      }
    }

  
  
  
  var FS=undefined;
  
  
  
  var ___errno_state=0;function ___setErrNo(value) {
      // For convenient setting and returning of errno.
      HEAP32[((___errno_state)>>2)]=value;
      return value;
    }
  
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};
  
  
  var SOCKFS=undefined;function _send(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _write(fd, buf, len);
    }
  
  function _pwrite(fildes, buf, nbyte, offset) {
      // ssize_t pwrite(int fildes, const void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _write(fildes, buf, nbyte) {
      // ssize_t write(int fildes, const void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
  
  
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }
  
  function _fileno(stream) {
      // int fileno(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fileno.html
      stream = FS.getStreamFromPtr(stream);
      if (!stream) return -1;
      return stream.fd;
    }function _fwrite(ptr, size, nitems, stream) {
      // size_t fwrite(const void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fwrite.html
      var bytesToWrite = nitems * size;
      if (bytesToWrite == 0) return 0;
      var fd = _fileno(stream);
      var bytesWritten = _write(fd, ptr, bytesToWrite);
      if (bytesWritten == -1) {
        var streamObj = FS.getStreamFromPtr(stream);
        if (streamObj) streamObj.error = true;
        return 0;
      } else {
        return (bytesWritten / size)|0;
      }
    }
  
  
   
  Module["_strlen"] = _strlen;
  
  function __reallyNegative(x) {
      return x < 0 || (x === 0 && (1/x) === -Infinity);
    }function __formatString(format, varargs) {
      assert((varargs & 3) === 0);
      var textIndex = format;
      var argIndex = 0;
      function getNextArg(type) {
        // NOTE: Explicitly ignoring type safety. Otherwise this fails:
        //       int x = 4; printf("%c\n", (char)x);
        var ret;
        argIndex = Runtime.prepVararg(argIndex, type);
        if (type === 'double') {
          ret = (HEAP32[((tempDoublePtr)>>2)]=HEAP32[(((varargs)+(argIndex))>>2)],HEAP32[(((tempDoublePtr)+(4))>>2)]=HEAP32[(((varargs)+((argIndex)+(4)))>>2)],(+(HEAPF64[(tempDoublePtr)>>3])));
          argIndex += 8;
        } else if (type == 'i64') {
          ret = [HEAP32[(((varargs)+(argIndex))>>2)],
                 HEAP32[(((varargs)+(argIndex+4))>>2)]];
  
          argIndex += 8;
        } else {
          assert((argIndex & 3) === 0);
          type = 'i32'; // varargs are always i32, i64, or double
          ret = HEAP32[(((varargs)+(argIndex))>>2)];
          argIndex += 4;
        }
        return ret;
      }
  
      var ret = [];
      var curr, next, currArg;
      while(1) {
        var startTextIndex = textIndex;
        curr = HEAP8[((textIndex)>>0)];
        if (curr === 0) break;
        next = HEAP8[((textIndex+1)>>0)];
        if (curr == 37) {
          // Handle flags.
          var flagAlwaysSigned = false;
          var flagLeftAlign = false;
          var flagAlternative = false;
          var flagZeroPad = false;
          var flagPadSign = false;
          flagsLoop: while (1) {
            switch (next) {
              case 43:
                flagAlwaysSigned = true;
                break;
              case 45:
                flagLeftAlign = true;
                break;
              case 35:
                flagAlternative = true;
                break;
              case 48:
                if (flagZeroPad) {
                  break flagsLoop;
                } else {
                  flagZeroPad = true;
                  break;
                }
              case 32:
                flagPadSign = true;
                break;
              default:
                break flagsLoop;
            }
            textIndex++;
            next = HEAP8[((textIndex+1)>>0)];
          }
  
          // Handle width.
          var width = 0;
          if (next == 42) {
            width = getNextArg('i32');
            textIndex++;
            next = HEAP8[((textIndex+1)>>0)];
          } else {
            while (next >= 48 && next <= 57) {
              width = width * 10 + (next - 48);
              textIndex++;
              next = HEAP8[((textIndex+1)>>0)];
            }
          }
  
          // Handle precision.
          var precisionSet = false, precision = -1;
          if (next == 46) {
            precision = 0;
            precisionSet = true;
            textIndex++;
            next = HEAP8[((textIndex+1)>>0)];
            if (next == 42) {
              precision = getNextArg('i32');
              textIndex++;
            } else {
              while(1) {
                var precisionChr = HEAP8[((textIndex+1)>>0)];
                if (precisionChr < 48 ||
                    precisionChr > 57) break;
                precision = precision * 10 + (precisionChr - 48);
                textIndex++;
              }
            }
            next = HEAP8[((textIndex+1)>>0)];
          }
          if (precision < 0) {
            precision = 6; // Standard default.
            precisionSet = false;
          }
  
          // Handle integer sizes. WARNING: These assume a 32-bit architecture!
          var argSize;
          switch (String.fromCharCode(next)) {
            case 'h':
              var nextNext = HEAP8[((textIndex+2)>>0)];
              if (nextNext == 104) {
                textIndex++;
                argSize = 1; // char (actually i32 in varargs)
              } else {
                argSize = 2; // short (actually i32 in varargs)
              }
              break;
            case 'l':
              var nextNext = HEAP8[((textIndex+2)>>0)];
              if (nextNext == 108) {
                textIndex++;
                argSize = 8; // long long
              } else {
                argSize = 4; // long
              }
              break;
            case 'L': // long long
            case 'q': // int64_t
            case 'j': // intmax_t
              argSize = 8;
              break;
            case 'z': // size_t
            case 't': // ptrdiff_t
            case 'I': // signed ptrdiff_t or unsigned size_t
              argSize = 4;
              break;
            default:
              argSize = null;
          }
          if (argSize) textIndex++;
          next = HEAP8[((textIndex+1)>>0)];
  
          // Handle type specifier.
          switch (String.fromCharCode(next)) {
            case 'd': case 'i': case 'u': case 'o': case 'x': case 'X': case 'p': {
              // Integer.
              var signed = next == 100 || next == 105;
              argSize = argSize || 4;
              var currArg = getNextArg('i' + (argSize * 8));
              var origArg = currArg;
              var argText;
              // Flatten i64-1 [low, high] into a (slightly rounded) double
              if (argSize == 8) {
                currArg = Runtime.makeBigInt(currArg[0], currArg[1], next == 117);
              }
              // Truncate to requested size.
              if (argSize <= 4) {
                var limit = Math.pow(256, argSize) - 1;
                currArg = (signed ? reSign : unSign)(currArg & limit, argSize * 8);
              }
              // Format the number.
              var currAbsArg = Math.abs(currArg);
              var prefix = '';
              if (next == 100 || next == 105) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], null); else
                argText = reSign(currArg, 8 * argSize, 1).toString(10);
              } else if (next == 117) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], true); else
                argText = unSign(currArg, 8 * argSize, 1).toString(10);
                currArg = Math.abs(currArg);
              } else if (next == 111) {
                argText = (flagAlternative ? '0' : '') + currAbsArg.toString(8);
              } else if (next == 120 || next == 88) {
                prefix = (flagAlternative && currArg != 0) ? '0x' : '';
                if (argSize == 8 && i64Math) {
                  if (origArg[1]) {
                    argText = (origArg[1]>>>0).toString(16);
                    var lower = (origArg[0]>>>0).toString(16);
                    while (lower.length < 8) lower = '0' + lower;
                    argText += lower;
                  } else {
                    argText = (origArg[0]>>>0).toString(16);
                  }
                } else
                if (currArg < 0) {
                  // Represent negative numbers in hex as 2's complement.
                  currArg = -currArg;
                  argText = (currAbsArg - 1).toString(16);
                  var buffer = [];
                  for (var i = 0; i < argText.length; i++) {
                    buffer.push((0xF - parseInt(argText[i], 16)).toString(16));
                  }
                  argText = buffer.join('');
                  while (argText.length < argSize * 2) argText = 'f' + argText;
                } else {
                  argText = currAbsArg.toString(16);
                }
                if (next == 88) {
                  prefix = prefix.toUpperCase();
                  argText = argText.toUpperCase();
                }
              } else if (next == 112) {
                if (currAbsArg === 0) {
                  argText = '(nil)';
                } else {
                  prefix = '0x';
                  argText = currAbsArg.toString(16);
                }
              }
              if (precisionSet) {
                while (argText.length < precision) {
                  argText = '0' + argText;
                }
              }
  
              // Add sign if needed
              if (currArg >= 0) {
                if (flagAlwaysSigned) {
                  prefix = '+' + prefix;
                } else if (flagPadSign) {
                  prefix = ' ' + prefix;
                }
              }
  
              // Move sign to prefix so we zero-pad after the sign
              if (argText.charAt(0) == '-') {
                prefix = '-' + prefix;
                argText = argText.substr(1);
              }
  
              // Add padding.
              while (prefix.length + argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad) {
                    argText = '0' + argText;
                  } else {
                    prefix = ' ' + prefix;
                  }
                }
              }
  
              // Insert the result into the buffer.
              argText = prefix + argText;
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 'f': case 'F': case 'e': case 'E': case 'g': case 'G': {
              // Float.
              var currArg = getNextArg('double');
              var argText;
              if (isNaN(currArg)) {
                argText = 'nan';
                flagZeroPad = false;
              } else if (!isFinite(currArg)) {
                argText = (currArg < 0 ? '-' : '') + 'inf';
                flagZeroPad = false;
              } else {
                var isGeneral = false;
                var effectivePrecision = Math.min(precision, 20);
  
                // Convert g/G to f/F or e/E, as per:
                // http://pubs.opengroup.org/onlinepubs/9699919799/functions/printf.html
                if (next == 103 || next == 71) {
                  isGeneral = true;
                  precision = precision || 1;
                  var exponent = parseInt(currArg.toExponential(effectivePrecision).split('e')[1], 10);
                  if (precision > exponent && exponent >= -4) {
                    next = ((next == 103) ? 'f' : 'F').charCodeAt(0);
                    precision -= exponent + 1;
                  } else {
                    next = ((next == 103) ? 'e' : 'E').charCodeAt(0);
                    precision--;
                  }
                  effectivePrecision = Math.min(precision, 20);
                }
  
                if (next == 101 || next == 69) {
                  argText = currArg.toExponential(effectivePrecision);
                  // Make sure the exponent has at least 2 digits.
                  if (/[eE][-+]\d$/.test(argText)) {
                    argText = argText.slice(0, -1) + '0' + argText.slice(-1);
                  }
                } else if (next == 102 || next == 70) {
                  argText = currArg.toFixed(effectivePrecision);
                  if (currArg === 0 && __reallyNegative(currArg)) {
                    argText = '-' + argText;
                  }
                }
  
                var parts = argText.split('e');
                if (isGeneral && !flagAlternative) {
                  // Discard trailing zeros and periods.
                  while (parts[0].length > 1 && parts[0].indexOf('.') != -1 &&
                         (parts[0].slice(-1) == '0' || parts[0].slice(-1) == '.')) {
                    parts[0] = parts[0].slice(0, -1);
                  }
                } else {
                  // Make sure we have a period in alternative mode.
                  if (flagAlternative && argText.indexOf('.') == -1) parts[0] += '.';
                  // Zero pad until required precision.
                  while (precision > effectivePrecision++) parts[0] += '0';
                }
                argText = parts[0] + (parts.length > 1 ? 'e' + parts[1] : '');
  
                // Capitalize 'E' if needed.
                if (next == 69) argText = argText.toUpperCase();
  
                // Add sign.
                if (currArg >= 0) {
                  if (flagAlwaysSigned) {
                    argText = '+' + argText;
                  } else if (flagPadSign) {
                    argText = ' ' + argText;
                  }
                }
              }
  
              // Add padding.
              while (argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad && (argText[0] == '-' || argText[0] == '+')) {
                    argText = argText[0] + '0' + argText.slice(1);
                  } else {
                    argText = (flagZeroPad ? '0' : ' ') + argText;
                  }
                }
              }
  
              // Adjust case.
              if (next < 97) argText = argText.toUpperCase();
  
              // Insert the result into the buffer.
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 's': {
              // String.
              var arg = getNextArg('i8*');
              var argLength = arg ? _strlen(arg) : '(null)'.length;
              if (precisionSet) argLength = Math.min(argLength, precision);
              if (!flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              if (arg) {
                for (var i = 0; i < argLength; i++) {
                  ret.push(HEAPU8[((arg++)>>0)]);
                }
              } else {
                ret = ret.concat(intArrayFromString('(null)'.substr(0, argLength), true));
              }
              if (flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              break;
            }
            case 'c': {
              // Character.
              if (flagLeftAlign) ret.push(getNextArg('i8'));
              while (--width > 0) {
                ret.push(32);
              }
              if (!flagLeftAlign) ret.push(getNextArg('i8'));
              break;
            }
            case 'n': {
              // Write the length written so far to the next parameter.
              var ptr = getNextArg('i32*');
              HEAP32[((ptr)>>2)]=ret.length;
              break;
            }
            case '%': {
              // Literal percent sign.
              ret.push(curr);
              break;
            }
            default: {
              // Unknown specifiers remain untouched.
              for (var i = startTextIndex; i < textIndex + 2; i++) {
                ret.push(HEAP8[((i)>>0)]);
              }
            }
          }
          textIndex += 2;
          // TODO: Support a/A (hex float) and m (last error) specifiers.
          // TODO: Support %1${specifier} for arg selection.
        } else {
          ret.push(curr);
          textIndex += 1;
        }
      }
      return ret;
    }function _fprintf(stream, format, varargs) {
      // int fprintf(FILE *restrict stream, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var stack = Runtime.stackSave();
      var ret = _fwrite(allocate(result, 'i8', ALLOC_STACK), 1, result.length, stream);
      Runtime.stackRestore(stack);
      return ret;
    }function _printf(format, varargs) {
      // int printf(const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      // extra effort to support printf, even without a filesystem. very partial, very hackish
      var result = __formatString(format, varargs);
      var string = intArrayToString(result);
      if (string[string.length-1] === '\n') string = string.substr(0, string.length-1); // remove a final \n, as Module.print will do that
      Module.print(string);
      return result.length;
    }

  function _fputc(c, stream) {
      // int fputc(int c, FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fputc.html
      var chr = unSign(c & 0xFF);
      HEAP8[((_fputc.ret)>>0)]=chr;
      var fd = _fileno(stream);
      var ret = _write(fd, _fputc.ret, 1);
      if (ret == -1) {
        var streamObj = FS.getStreamFromPtr(stream);
        if (streamObj) streamObj.error = true;
        return -1;
      } else {
        return chr;
      }
    }

  function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 30: return PAGE_SIZE;
        case 85: return totalMemory / PAGE_SIZE;
        case 132:
        case 133:
        case 12:
        case 137:
        case 138:
        case 15:
        case 235:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 149:
        case 13:
        case 10:
        case 236:
        case 153:
        case 9:
        case 21:
        case 22:
        case 159:
        case 154:
        case 14:
        case 77:
        case 78:
        case 139:
        case 80:
        case 81:
        case 82:
        case 68:
        case 67:
        case 164:
        case 11:
        case 29:
        case 47:
        case 48:
        case 95:
        case 52:
        case 51:
        case 46:
          return 200809;
        case 79:
          return 0;
        case 27:
        case 246:
        case 127:
        case 128:
        case 23:
        case 24:
        case 160:
        case 161:
        case 181:
        case 182:
        case 242:
        case 183:
        case 184:
        case 243:
        case 244:
        case 245:
        case 165:
        case 178:
        case 179:
        case 49:
        case 50:
        case 168:
        case 169:
        case 175:
        case 170:
        case 171:
        case 172:
        case 97:
        case 76:
        case 32:
        case 173:
        case 35:
          return -1;
        case 176:
        case 177:
        case 7:
        case 155:
        case 8:
        case 157:
        case 125:
        case 126:
        case 92:
        case 93:
        case 129:
        case 130:
        case 131:
        case 94:
        case 91:
          return 1;
        case 74:
        case 60:
        case 69:
        case 70:
        case 4:
          return 1024;
        case 31:
        case 42:
        case 72:
          return 32;
        case 87:
        case 26:
        case 33:
          return 2147483647;
        case 34:
        case 1:
          return 47839;
        case 38:
        case 36:
          return 99;
        case 43:
        case 37:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 28: return 32768;
        case 44: return 32767;
        case 75: return 16384;
        case 39: return 1000;
        case 89: return 700;
        case 71: return 256;
        case 40: return 255;
        case 2: return 100;
        case 180: return 64;
        case 25: return 20;
        case 5: return 16;
        case 6: return 6;
        case 73: return 4;
        case 84: {
          if (typeof navigator === 'object') return navigator['hardwareConcurrency'] || 1;
          return 1;
        }
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }

  var _emscripten_postinvoke=true;

  
  var PTHREAD_SPECIFIC={};
  
  var PTHREAD_SPECIFIC_NEXT_KEY=1;function _pthread_key_create(key, destructor) {
      if (key == 0) {
        return ERRNO_CODES.EINVAL;
      }
      HEAP32[((key)>>2)]=PTHREAD_SPECIFIC_NEXT_KEY;
      // values start at 0
      PTHREAD_SPECIFIC[PTHREAD_SPECIFIC_NEXT_KEY] = 0;
      PTHREAD_SPECIFIC_NEXT_KEY++;
      return 0;
    }

  function ___gxx_personality_v0() {
    }

   
  Module["_bitshift64Lshr"] = _bitshift64Lshr;

  var _BDtoIHigh=true;

  function _pthread_cond_broadcast() {
      return 0;
    }

  function _vfprintf(s, f, va_arg) {
      return _fprintf(s, f, HEAP32[((va_arg)>>2)]);
    }

  function _pthread_mutex_unlock() {}

  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    } 
  Module["_memcpy"] = _memcpy;

  function _pthread_mutex_lock() {}

  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
      // We control the "dynamic" memory - DYNAMIC_BASE to DYNAMICTOP
      var self = _sbrk;
      if (!self.called) {
        DYNAMICTOP = alignMemoryPage(DYNAMICTOP); // make sure we start out aligned
        self.called = true;
        assert(Runtime.dynamicAlloc);
        self.alloc = Runtime.dynamicAlloc;
        Runtime.dynamicAlloc = function() { abort('cannot dynamically allocate, sbrk now has control') };
      }
      var ret = DYNAMICTOP;
      if (bytes != 0) {
        var success = self.alloc(bytes);
        if (!success) return -1 >>> 0; // sbrk failure code
      }
      return ret;  // Previous break location.
    }

   
  Module["_bitshift64Shl"] = _bitshift64Shl;

  function ___cxa_guard_abort() {}

  
  var LOCALE={curr:0,check:function (locale) {
        if (locale) locale = Pointer_stringify(locale);
        return locale === 'C' || locale === 'POSIX' || !locale;
      }};
  
  function _calloc(n, s) {
      var ret = _malloc(n*s);
      _memset(ret, 0, n*s);
      return ret;
    }function _newlocale(mask, locale, base) {
      if (!LOCALE.check(locale)) {
        ___setErrNo(ERRNO_CODES.ENOENT);
        return 0;
      }
      if (!base) base = _calloc(1, 4);
      return base;
    }

   
  Module["_memmove"] = _memmove;

  var _emscripten_preinvoke=true;

  
  
  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};function _strerror_r(errnum, strerrbuf, buflen) {
      if (errnum in ERRNO_MESSAGES) {
        if (ERRNO_MESSAGES[errnum].length > buflen - 1) {
          return ___setErrNo(ERRNO_CODES.ERANGE);
        } else {
          var msg = ERRNO_MESSAGES[errnum];
          writeAsciiToMemory(msg, strerrbuf);
          return 0;
        }
      } else {
        return ___setErrNo(ERRNO_CODES.EINVAL);
      }
    }function _strerror(errnum) {
      if (!_strerror.buffer) _strerror.buffer = _malloc(256);
      _strerror_r(errnum, _strerror.buffer, 256);
      return _strerror.buffer;
    }

  function _pthread_cond_wait() {
      return 0;
    }

  function ___cxa_rethrow() {
      ___cxa_end_catch.rethrown = true;
      var ptr = EXCEPTIONS.caught.pop();
      EXCEPTIONS.last = ptr;
      throw ptr;
    }

  function ___cxa_guard_release() {}

  function _uselocale(locale) {
      var old = LOCALE.curr;
      if (locale) LOCALE.curr = locale;
      return old;
    }

  function ___assert_fail(condition, filename, line, func) {
      ABORT = true;
      throw 'Assertion failed: ' + Pointer_stringify(condition) + ', at: ' + [filename ? Pointer_stringify(filename) : 'unknown filename', line, func ? Pointer_stringify(func) : 'unknown function'] + ' at ' + stackTrace();
    }

  function ___errno_location() {
      return ___errno_state;
    }

   
  Module["_memset"] = _memset;

  var _BDtoILow=true;

  var _BItoD=true;

  
  
  function __isLeapYear(year) {
        return year%4 === 0 && (year%100 !== 0 || year%400 === 0);
    }
  
  function __arraySum(array, index) {
      var sum = 0;
      for (var i = 0; i <= index; sum += array[i++]);
      return sum;
    }
  
  
  var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];
  
  var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date, days) {
      var newDate = new Date(date.getTime());
      while(days > 0) {
        var leap = __isLeapYear(newDate.getFullYear());
        var currentMonth = newDate.getMonth();
        var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];
  
        if (days > daysInCurrentMonth-newDate.getDate()) {
          // we spill over to next month
          days -= (daysInCurrentMonth-newDate.getDate()+1);
          newDate.setDate(1);
          if (currentMonth < 11) {
            newDate.setMonth(currentMonth+1)
          } else {
            newDate.setMonth(0);
            newDate.setFullYear(newDate.getFullYear()+1);
          }
        } else {
          // we stay in current month 
          newDate.setDate(newDate.getDate()+days);
          return newDate;
        }
      }
  
      return newDate;
    }function _strftime(s, maxsize, format, tm) {
      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html
  
      var tm_zone = HEAP32[(((tm)+(40))>>2)];
  
      var date = {
        tm_sec: HEAP32[((tm)>>2)],
        tm_min: HEAP32[(((tm)+(4))>>2)],
        tm_hour: HEAP32[(((tm)+(8))>>2)],
        tm_mday: HEAP32[(((tm)+(12))>>2)],
        tm_mon: HEAP32[(((tm)+(16))>>2)],
        tm_year: HEAP32[(((tm)+(20))>>2)],
        tm_wday: HEAP32[(((tm)+(24))>>2)],
        tm_yday: HEAP32[(((tm)+(28))>>2)],
        tm_isdst: HEAP32[(((tm)+(32))>>2)],
        tm_gmtoff: HEAP32[(((tm)+(36))>>2)],
        tm_zone: tm_zone ? Pointer_stringify(tm_zone) : ''
      };
  
      var pattern = Pointer_stringify(format);
  
      // expand format
      var EXPANSION_RULES_1 = {
        '%c': '%a %b %d %H:%M:%S %Y',     // Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013
        '%D': '%m/%d/%y',                 // Equivalent to %m / %d / %y
        '%F': '%Y-%m-%d',                 // Equivalent to %Y - %m - %d
        '%h': '%b',                       // Equivalent to %b
        '%r': '%I:%M:%S %p',              // Replaced by the time in a.m. and p.m. notation
        '%R': '%H:%M',                    // Replaced by the time in 24-hour notation
        '%T': '%H:%M:%S',                 // Replaced by the time
        '%x': '%m/%d/%y',                 // Replaced by the locale's appropriate date representation
        '%X': '%H:%M:%S'                  // Replaced by the locale's appropriate date representation
      };
      for (var rule in EXPANSION_RULES_1) {
        pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);
      }
  
      var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
      var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
  
      function leadingSomething(value, digits, character) {
        var str = typeof value === 'number' ? value.toString() : (value || '');
        while (str.length < digits) {
          str = character[0]+str;
        }
        return str;
      };
  
      function leadingNulls(value, digits) {
        return leadingSomething(value, digits, '0');
      };
  
      function compareByDay(date1, date2) {
        function sgn(value) {
          return value < 0 ? -1 : (value > 0 ? 1 : 0);
        };
  
        var compare;
        if ((compare = sgn(date1.getFullYear()-date2.getFullYear())) === 0) {
          if ((compare = sgn(date1.getMonth()-date2.getMonth())) === 0) {
            compare = sgn(date1.getDate()-date2.getDate());
          }
        }
        return compare;
      };
  
      function getFirstWeekStartDate(janFourth) {
          switch (janFourth.getDay()) {
            case 0: // Sunday
              return new Date(janFourth.getFullYear()-1, 11, 29);
            case 1: // Monday
              return janFourth;
            case 2: // Tuesday
              return new Date(janFourth.getFullYear(), 0, 3);
            case 3: // Wednesday
              return new Date(janFourth.getFullYear(), 0, 2);
            case 4: // Thursday
              return new Date(janFourth.getFullYear(), 0, 1);
            case 5: // Friday
              return new Date(janFourth.getFullYear()-1, 11, 31);
            case 6: // Saturday
              return new Date(janFourth.getFullYear()-1, 11, 30);
          }
      };
  
      function getWeekBasedYear(date) {
          var thisDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);
          var janFourthNextYear = new Date(thisDate.getFullYear()+1, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {
            // this date is after the start of the first week of this year
            if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {
              return thisDate.getFullYear()+1;
            } else {
              return thisDate.getFullYear();
            }
          } else { 
            return thisDate.getFullYear()-1;
          }
      };
  
      var EXPANSION_RULES_2 = {
        '%a': function(date) {
          return WEEKDAYS[date.tm_wday].substring(0,3);
        },
        '%A': function(date) {
          return WEEKDAYS[date.tm_wday];
        },
        '%b': function(date) {
          return MONTHS[date.tm_mon].substring(0,3);
        },
        '%B': function(date) {
          return MONTHS[date.tm_mon];
        },
        '%C': function(date) {
          var year = date.tm_year+1900;
          return leadingNulls((year/100)|0,2);
        },
        '%d': function(date) {
          return leadingNulls(date.tm_mday, 2);
        },
        '%e': function(date) {
          return leadingSomething(date.tm_mday, 2, ' ');
        },
        '%g': function(date) {
          // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year. 
          // In this system, weeks begin on a Monday and week 1 of the year is the week that includes 
          // January 4th, which is also the week that includes the first Thursday of the year, and 
          // is also the first week that contains at least four days in the year. 
          // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of 
          // the last week of the preceding year; thus, for Saturday 2nd January 1999, 
          // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th, 
          // or 31st is a Monday, it and any following days are part of week 1 of the following year. 
          // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.
          
          return getWeekBasedYear(date).toString().substring(2);
        },
        '%G': function(date) {
          return getWeekBasedYear(date);
        },
        '%H': function(date) {
          return leadingNulls(date.tm_hour, 2);
        },
        '%I': function(date) {
          return leadingNulls(date.tm_hour < 13 ? date.tm_hour : date.tm_hour-12, 2);
        },
        '%j': function(date) {
          // Day of the year (001-366)
          return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon-1), 3);
        },
        '%m': function(date) {
          return leadingNulls(date.tm_mon+1, 2);
        },
        '%M': function(date) {
          return leadingNulls(date.tm_min, 2);
        },
        '%n': function() {
          return '\n';
        },
        '%p': function(date) {
          if (date.tm_hour > 0 && date.tm_hour < 13) {
            return 'AM';
          } else {
            return 'PM';
          }
        },
        '%S': function(date) {
          return leadingNulls(date.tm_sec, 2);
        },
        '%t': function() {
          return '\t';
        },
        '%u': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay() || 7;
        },
        '%U': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Sunday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year+1900, 0, 1);
          var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7-janFirst.getDay());
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
          
          // is target date after the first Sunday?
          if (compareByDay(firstSunday, endDate) < 0) {
            // calculate difference in days between first Sunday and endDate
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstSundayUntilEndJanuary = 31-firstSunday.getDate();
            var days = firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
  
          return compareByDay(firstSunday, janFirst) === 0 ? '01': '00';
        },
        '%V': function(date) {
          // Replaced by the week number of the year (Monday as the first day of the week) 
          // as a decimal number [01,53]. If the week containing 1 January has four 
          // or more days in the new year, then it is considered week 1. 
          // Otherwise, it is the last week of the previous year, and the next week is week 1. 
          // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]
          var janFourthThisYear = new Date(date.tm_year+1900, 0, 4);
          var janFourthNextYear = new Date(date.tm_year+1901, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          var endDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          if (compareByDay(endDate, firstWeekStartThisYear) < 0) {
            // if given date is before this years first week, then it belongs to the 53rd week of last year
            return '53';
          } 
  
          if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {
            // if given date is after next years first week, then it belongs to the 01th week of next year
            return '01';
          }
  
          // given date is in between CW 01..53 of this calendar year
          var daysDifference;
          if (firstWeekStartThisYear.getFullYear() < date.tm_year+1900) {
            // first CW of this year starts last year
            daysDifference = date.tm_yday+32-firstWeekStartThisYear.getDate()
          } else {
            // first CW of this year starts this year
            daysDifference = date.tm_yday+1-firstWeekStartThisYear.getDate();
          }
          return leadingNulls(Math.ceil(daysDifference/7), 2);
        },
        '%w': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay();
        },
        '%W': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Monday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year, 0, 1);
          var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7-janFirst.getDay()+1);
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
  
          // is target date after the first Monday?
          if (compareByDay(firstMonday, endDate) < 0) {
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstMondayUntilEndJanuary = 31-firstMonday.getDate();
            var days = firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
          return compareByDay(firstMonday, janFirst) === 0 ? '01': '00';
        },
        '%y': function(date) {
          // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]
          return (date.tm_year+1900).toString().substring(2);
        },
        '%Y': function(date) {
          // Replaced by the year as a decimal number (for example, 1997). [ tm_year]
          return date.tm_year+1900;
        },
        '%z': function(date) {
          // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ).
          // For example, "-0430" means 4 hours 30 minutes behind UTC (west of Greenwich).
          var off = date.tm_gmtoff;
          var ahead = off >= 0;
          off = Math.abs(off) / 60;
          // convert from minutes into hhmm format (which means 60 minutes = 100 units)
          off = (off / 60)*100 + (off % 60);
          return (ahead ? '+' : '-') + String("0000" + off).slice(-4);
        },
        '%Z': function(date) {
          return date.tm_zone;
        },
        '%%': function() {
          return '%';
        }
      };
      for (var rule in EXPANSION_RULES_2) {
        if (pattern.indexOf(rule) >= 0) {
          pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));
        }
      }
  
      var bytes = intArrayFromString(pattern, false);
      if (bytes.length > maxsize) {
        return 0;
      } 
  
      writeArrayToMemory(bytes, s);
      return bytes.length-1;
    }function _strftime_l(s, maxsize, format, tm) {
      return _strftime(s, maxsize, format, tm); // no locale support yet
    }

  function _abort() {
      Module['abort']();
    }



  function _pthread_once(ptr, func) {
      if (!_pthread_once.seen) _pthread_once.seen = {};
      if (ptr in _pthread_once.seen) return;
      Runtime.dynCall('v', func);
      _pthread_once.seen[ptr] = 1;
    }


  var _asin=Math_asin;

  function _pthread_getspecific(key) {
      return PTHREAD_SPECIFIC[key] || 0;
    }

  var _fabs=Math_abs;

  var _sqrt=Math_sqrt;

  function _catclose(catd) {
      // int catclose (nl_catd catd)
      return 0;
    }

  function _pthread_setspecific(key, value) {
      if (!(key in PTHREAD_SPECIFIC)) {
        return ERRNO_CODES.EINVAL;
      }
      PTHREAD_SPECIFIC[key] = value;
      return 0;
    }

  function ___ctype_b_loc() {
      // http://refspecs.freestandards.org/LSB_3.0.0/LSB-Core-generic/LSB-Core-generic/baselib---ctype-b-loc.html
      var me = ___ctype_b_loc;
      if (!me.ret) {
        var values = [
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,8195,8194,8194,8194,8194,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,24577,49156,49156,49156,
          49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,55304,55304,55304,55304,55304,55304,55304,55304,
          55304,55304,49156,49156,49156,49156,49156,49156,49156,54536,54536,54536,54536,54536,54536,50440,50440,50440,50440,50440,
          50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,49156,49156,49156,49156,49156,
          49156,54792,54792,54792,54792,54792,54792,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,
          50696,50696,50696,50696,50696,50696,50696,49156,49156,49156,49156,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
        ];
        var i16size = 2;
        var arr = _malloc(values.length * i16size);
        for (var i = 0; i < values.length; i++) {
          HEAP16[(((arr)+(i * i16size))>>1)]=values[i];
        }
        me.ret = allocate([arr + 128 * i16size], 'i16*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  function _freelocale(locale) {
      _free(locale);
    }

  
  function _malloc(bytes) {
      /* Over-allocate to make sure it is byte-aligned by 8.
       * This will leak memory, but this is only the dummy
       * implementation (replaced by dlmalloc normally) so
       * not an issue.
       */
      var ptr = Runtime.dynamicAlloc(bytes + 8);
      return (ptr+8) & 0xFFFFFFF8;
    }
  Module["_malloc"] = _malloc;function ___cxa_allocate_exception(size) {
      return _malloc(size);
    }

  var _sin=Math_sin;

  function ___cxa_pure_virtual() {
      ABORT = true;
      throw 'Pure virtual function called!';
    }

  function _catgets(catd, set_id, msg_id, s) {
      // char *catgets (nl_catd catd, int set_id, int msg_id, const char *s)
      return s;
    }

  function _catopen(name, oflag) {
      // nl_catd catopen (const char *name, int oflag)
      return -1;
    }

  function ___ctype_toupper_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-toupper-loc.html
      var me = ___ctype_toupper_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,
          73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,
          81,82,83,84,85,86,87,88,89,90,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,
          145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,
          175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,
          205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,
          235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i];
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  function ___cxa_guard_acquire(variable) {
      if (!HEAP8[((variable)>>0)]) { // ignore SAFE_HEAP stuff because llvm mixes i64 and i8 here
        HEAP8[((variable)>>0)]=1;
        return 1;
      }
      return 0;
    }

  function ___ctype_tolower_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-tolower-loc.html
      var me = ___ctype_tolower_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,91,92,93,94,95,96,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,
          134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,
          164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,
          194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,
          224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,
          254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i];
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  function ___cxa_begin_catch(ptr) {
      __ZSt18uncaught_exceptionv.uncaught_exception--;
      EXCEPTIONS.caught.push(ptr);
      EXCEPTIONS.addRef(EXCEPTIONS.deAdjust(ptr));
      return ptr;
    }


  var _cos=Math_cos;

  function ___cxa_call_unexpected(exception) {
      Module.printErr('Unexpected exception thrown, this is not properly supported - aborting');
      ABORT = true;
      throw exception;
    }

  var _atan2=Math_atan2;

  function _time(ptr) {
      var ret = (Date.now()/1000)|0;
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret;
      }
      return ret;
    }

  var _acos=Math_acos;

  var _stderr=allocate(1, "i32*", ALLOC_STATIC);
___errno_state = Runtime.staticAlloc(4); HEAP32[((___errno_state)>>2)]=0;
_fputc.ret = allocate([0], "i8", ALLOC_STATIC);
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);

staticSealed = true; // seal the static portion of memory

STACK_MAX = STACK_BASE + TOTAL_STACK;

DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);

assert(DYNAMIC_BASE < TOTAL_MEMORY, "TOTAL_MEMORY not big enough for stack");

 var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_DYNAMIC);


function nullFunc_iiiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiiiid(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiiid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_vi(x) { Module["printErr"]("Invalid function pointer called with signature 'vi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_vii(x) { Module["printErr"]("Invalid function pointer called with signature 'vii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_ii(x) { Module["printErr"]("Invalid function pointer called with signature 'ii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_id(x) { Module["printErr"]("Invalid function pointer called with signature 'id'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiiiiiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiiiiiiiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiiiiiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_di(x) { Module["printErr"]("Invalid function pointer called with signature 'di'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iii(x) { Module["printErr"]("Invalid function pointer called with signature 'iii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_diii(x) { Module["printErr"]("Invalid function pointer called with signature 'diii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_i(x) { Module["printErr"]("Invalid function pointer called with signature 'i'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viii(x) { Module["printErr"]("Invalid function pointer called with signature 'viii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_v(x) { Module["printErr"]("Invalid function pointer called with signature 'v'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiiid(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function invoke_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    return Module["dynCall_iiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiid(index,a1,a2,a3,a4,a5,a6) {
  try {
    return Module["dynCall_iiiiiid"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    return Module["dynCall_iiiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_id(index,a1) {
  try {
    return Module["dynCall_id"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11) {
  try {
    return Module["dynCall_iiiiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15) {
  try {
    Module["dynCall_viiiiiiiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_di(index,a1) {
  try {
    return Module["dynCall_di"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_viiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10) {
  try {
    Module["dynCall_viiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_diii(index,a1,a2,a3) {
  try {
    return Module["dynCall_diii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_i(index) {
  try {
    return Module["dynCall_i"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viii(index,a1,a2,a3) {
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    return Module["dynCall_iiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiid(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiid"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

Module.asmGlobalArg = { "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array, "NaN": NaN, "Infinity": Infinity };
Module.asmLibraryArg = { "abort": abort, "assert": assert, "nullFunc_iiiiiiii": nullFunc_iiiiiiii, "nullFunc_viiiii": nullFunc_viiiii, "nullFunc_iiiiiid": nullFunc_iiiiiid, "nullFunc_vi": nullFunc_vi, "nullFunc_vii": nullFunc_vii, "nullFunc_iiiiiii": nullFunc_iiiiiii, "nullFunc_ii": nullFunc_ii, "nullFunc_id": nullFunc_id, "nullFunc_iiiiiiiiiiii": nullFunc_iiiiiiiiiiii, "nullFunc_iiii": nullFunc_iiii, "nullFunc_viiiiiiiiiiiiiii": nullFunc_viiiiiiiiiiiiiii, "nullFunc_viiiiii": nullFunc_viiiiii, "nullFunc_di": nullFunc_di, "nullFunc_viiiiiii": nullFunc_viiiiiii, "nullFunc_viiiiiiiiii": nullFunc_viiiiiiiiii, "nullFunc_iii": nullFunc_iii, "nullFunc_iiiiii": nullFunc_iiiiii, "nullFunc_diii": nullFunc_diii, "nullFunc_i": nullFunc_i, "nullFunc_iiiii": nullFunc_iiiii, "nullFunc_viii": nullFunc_viii, "nullFunc_v": nullFunc_v, "nullFunc_iiiiiiiii": nullFunc_iiiiiiiii, "nullFunc_iiiiid": nullFunc_iiiiid, "nullFunc_viiii": nullFunc_viiii, "invoke_iiiiiiii": invoke_iiiiiiii, "invoke_viiiii": invoke_viiiii, "invoke_iiiiiid": invoke_iiiiiid, "invoke_vi": invoke_vi, "invoke_vii": invoke_vii, "invoke_iiiiiii": invoke_iiiiiii, "invoke_ii": invoke_ii, "invoke_id": invoke_id, "invoke_iiiiiiiiiiii": invoke_iiiiiiiiiiii, "invoke_iiii": invoke_iiii, "invoke_viiiiiiiiiiiiiii": invoke_viiiiiiiiiiiiiii, "invoke_viiiiii": invoke_viiiiii, "invoke_di": invoke_di, "invoke_viiiiiii": invoke_viiiiiii, "invoke_viiiiiiiiii": invoke_viiiiiiiiii, "invoke_iii": invoke_iii, "invoke_iiiiii": invoke_iiiiii, "invoke_diii": invoke_diii, "invoke_i": invoke_i, "invoke_iiiii": invoke_iiiii, "invoke_viii": invoke_viii, "invoke_v": invoke_v, "invoke_iiiiiiiii": invoke_iiiiiiiii, "invoke_iiiiid": invoke_iiiiid, "invoke_viiii": invoke_viiii, "_fabs": _fabs, "_strftime": _strftime, "_pthread_cond_wait": _pthread_cond_wait, "_sin": _sin, "___ctype_tolower_loc": ___ctype_tolower_loc, "_uselocale": _uselocale, "_vfprintf": _vfprintf, "___ctype_b_loc": ___ctype_b_loc, "___cxa_guard_acquire": ___cxa_guard_acquire, "_atan2": _atan2, "___setErrNo": ___setErrNo, "___gxx_personality_v0": ___gxx_personality_v0, "___assert_fail": ___assert_fail, "___cxa_free_exception": ___cxa_free_exception, "_calloc": _calloc, "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv, "___ctype_toupper_loc": ___ctype_toupper_loc, "___cxa_guard_release": ___cxa_guard_release, "__addDays": __addDays, "_pwrite": _pwrite, "_strerror_r": _strerror_r, "_strftime_l": _strftime_l, "_fprintf": _fprintf, "__reallyNegative": __reallyNegative, "_sbrk": _sbrk, "_acos": _acos, "_catgets": _catgets, "_newlocale": _newlocale, "___cxa_allocate_exception": ___cxa_allocate_exception, "_emscripten_memcpy_big": _emscripten_memcpy_big, "_fileno": _fileno, "___resumeException": ___resumeException, "_asin": _asin, "_freelocale": _freelocale, "___cxa_begin_catch": ___cxa_begin_catch, "_pthread_getspecific": _pthread_getspecific, "__arraySum": __arraySum, "_cos": _cos, "___cxa_end_catch": ___cxa_end_catch, "___cxa_call_unexpected": ___cxa_call_unexpected, "_pthread_mutex_unlock": _pthread_mutex_unlock, "_pthread_once": _pthread_once, "_pthread_cond_broadcast": _pthread_cond_broadcast, "_printf": _printf, "_pthread_key_create": _pthread_key_create, "_write": _write, "__isLeapYear": __isLeapYear, "___errno_location": ___errno_location, "_pthread_setspecific": _pthread_setspecific, "_fputc": _fputc, "___cxa_throw": ___cxa_throw, "_sysconf": _sysconf, "_send": _send, "___cxa_rethrow": ___cxa_rethrow, "_abort": _abort, "_catclose": _catclose, "_fwrite": _fwrite, "_time": _time, "_pthread_mutex_lock": _pthread_mutex_lock, "_strerror": _strerror, "__formatString": __formatString, "_sqrt": _sqrt, "_catopen": _catopen, "___cxa_find_matching_catch": ___cxa_find_matching_catch, "___cxa_pure_virtual": ___cxa_pure_virtual, "___cxa_guard_abort": ___cxa_guard_abort, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "cttz_i8": cttz_i8, "_stderr": _stderr };
// EMSCRIPTEN_START_ASM
var asm = (function(global, env, buffer) {
  'almost asm';
  
  var HEAP8 = new global.Int8Array(buffer);
  var HEAP16 = new global.Int16Array(buffer);
  var HEAP32 = new global.Int32Array(buffer);
  var HEAPU8 = new global.Uint8Array(buffer);
  var HEAPU16 = new global.Uint16Array(buffer);
  var HEAPU32 = new global.Uint32Array(buffer);
  var HEAPF32 = new global.Float32Array(buffer);
  var HEAPF64 = new global.Float64Array(buffer);


  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var ABORT=env.ABORT|0;
  var cttz_i8=env.cttz_i8|0;
  var _stderr=env._stderr|0;

  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var nan = global.NaN, inf = global.Infinity;
  var tempInt = 0, tempBigInt = 0, tempBigIntP = 0, tempBigIntS = 0, tempBigIntR = 0.0, tempBigIntI = 0, tempBigIntD = 0, tempValue = 0, tempDouble = 0.0;

  var tempRet0 = 0;
  var tempRet1 = 0;
  var tempRet2 = 0;
  var tempRet3 = 0;
  var tempRet4 = 0;
  var tempRet5 = 0;
  var tempRet6 = 0;
  var tempRet7 = 0;
  var tempRet8 = 0;
  var tempRet9 = 0;
  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var Math_min=global.Math.min;
  var Math_clz32=global.Math.clz32;
  var abort=env.abort;
  var assert=env.assert;
  var nullFunc_iiiiiiii=env.nullFunc_iiiiiiii;
  var nullFunc_viiiii=env.nullFunc_viiiii;
  var nullFunc_iiiiiid=env.nullFunc_iiiiiid;
  var nullFunc_vi=env.nullFunc_vi;
  var nullFunc_vii=env.nullFunc_vii;
  var nullFunc_iiiiiii=env.nullFunc_iiiiiii;
  var nullFunc_ii=env.nullFunc_ii;
  var nullFunc_id=env.nullFunc_id;
  var nullFunc_iiiiiiiiiiii=env.nullFunc_iiiiiiiiiiii;
  var nullFunc_iiii=env.nullFunc_iiii;
  var nullFunc_viiiiiiiiiiiiiii=env.nullFunc_viiiiiiiiiiiiiii;
  var nullFunc_viiiiii=env.nullFunc_viiiiii;
  var nullFunc_di=env.nullFunc_di;
  var nullFunc_viiiiiii=env.nullFunc_viiiiiii;
  var nullFunc_viiiiiiiiii=env.nullFunc_viiiiiiiiii;
  var nullFunc_iii=env.nullFunc_iii;
  var nullFunc_iiiiii=env.nullFunc_iiiiii;
  var nullFunc_diii=env.nullFunc_diii;
  var nullFunc_i=env.nullFunc_i;
  var nullFunc_iiiii=env.nullFunc_iiiii;
  var nullFunc_viii=env.nullFunc_viii;
  var nullFunc_v=env.nullFunc_v;
  var nullFunc_iiiiiiiii=env.nullFunc_iiiiiiiii;
  var nullFunc_iiiiid=env.nullFunc_iiiiid;
  var nullFunc_viiii=env.nullFunc_viiii;
  var invoke_iiiiiiii=env.invoke_iiiiiiii;
  var invoke_viiiii=env.invoke_viiiii;
  var invoke_iiiiiid=env.invoke_iiiiiid;
  var invoke_vi=env.invoke_vi;
  var invoke_vii=env.invoke_vii;
  var invoke_iiiiiii=env.invoke_iiiiiii;
  var invoke_ii=env.invoke_ii;
  var invoke_id=env.invoke_id;
  var invoke_iiiiiiiiiiii=env.invoke_iiiiiiiiiiii;
  var invoke_iiii=env.invoke_iiii;
  var invoke_viiiiiiiiiiiiiii=env.invoke_viiiiiiiiiiiiiii;
  var invoke_viiiiii=env.invoke_viiiiii;
  var invoke_di=env.invoke_di;
  var invoke_viiiiiii=env.invoke_viiiiiii;
  var invoke_viiiiiiiiii=env.invoke_viiiiiiiiii;
  var invoke_iii=env.invoke_iii;
  var invoke_iiiiii=env.invoke_iiiiii;
  var invoke_diii=env.invoke_diii;
  var invoke_i=env.invoke_i;
  var invoke_iiiii=env.invoke_iiiii;
  var invoke_viii=env.invoke_viii;
  var invoke_v=env.invoke_v;
  var invoke_iiiiiiiii=env.invoke_iiiiiiiii;
  var invoke_iiiiid=env.invoke_iiiiid;
  var invoke_viiii=env.invoke_viiii;
  var _fabs=env._fabs;
  var _strftime=env._strftime;
  var _pthread_cond_wait=env._pthread_cond_wait;
  var _sin=env._sin;
  var ___ctype_tolower_loc=env.___ctype_tolower_loc;
  var _uselocale=env._uselocale;
  var _vfprintf=env._vfprintf;
  var ___ctype_b_loc=env.___ctype_b_loc;
  var ___cxa_guard_acquire=env.___cxa_guard_acquire;
  var _atan2=env._atan2;
  var ___setErrNo=env.___setErrNo;
  var ___gxx_personality_v0=env.___gxx_personality_v0;
  var ___assert_fail=env.___assert_fail;
  var ___cxa_free_exception=env.___cxa_free_exception;
  var _calloc=env._calloc;
  var __ZSt18uncaught_exceptionv=env.__ZSt18uncaught_exceptionv;
  var ___ctype_toupper_loc=env.___ctype_toupper_loc;
  var ___cxa_guard_release=env.___cxa_guard_release;
  var __addDays=env.__addDays;
  var _pwrite=env._pwrite;
  var _strerror_r=env._strerror_r;
  var _strftime_l=env._strftime_l;
  var _fprintf=env._fprintf;
  var __reallyNegative=env.__reallyNegative;
  var _sbrk=env._sbrk;
  var _acos=env._acos;
  var _catgets=env._catgets;
  var _newlocale=env._newlocale;
  var ___cxa_allocate_exception=env.___cxa_allocate_exception;
  var _emscripten_memcpy_big=env._emscripten_memcpy_big;
  var _fileno=env._fileno;
  var ___resumeException=env.___resumeException;
  var _asin=env._asin;
  var _freelocale=env._freelocale;
  var ___cxa_begin_catch=env.___cxa_begin_catch;
  var _pthread_getspecific=env._pthread_getspecific;
  var __arraySum=env.__arraySum;
  var _cos=env._cos;
  var ___cxa_end_catch=env.___cxa_end_catch;
  var ___cxa_call_unexpected=env.___cxa_call_unexpected;
  var _pthread_mutex_unlock=env._pthread_mutex_unlock;
  var _pthread_once=env._pthread_once;
  var _pthread_cond_broadcast=env._pthread_cond_broadcast;
  var _printf=env._printf;
  var _pthread_key_create=env._pthread_key_create;
  var _write=env._write;
  var __isLeapYear=env.__isLeapYear;
  var ___errno_location=env.___errno_location;
  var _pthread_setspecific=env._pthread_setspecific;
  var _fputc=env._fputc;
  var ___cxa_throw=env.___cxa_throw;
  var _sysconf=env._sysconf;
  var _send=env._send;
  var ___cxa_rethrow=env.___cxa_rethrow;
  var _abort=env._abort;
  var _catclose=env._catclose;
  var _fwrite=env._fwrite;
  var _time=env._time;
  var _pthread_mutex_lock=env._pthread_mutex_lock;
  var _strerror=env._strerror;
  var __formatString=env.__formatString;
  var _sqrt=env._sqrt;
  var _catopen=env._catopen;
  var ___cxa_find_matching_catch=env.___cxa_find_matching_catch;
  var ___cxa_pure_virtual=env.___cxa_pure_virtual;
  var ___cxa_guard_abort=env.___cxa_guard_abort;
  var tempFloat = 0.0;

// EMSCRIPTEN_START_FUNCS
function stackAlloc(size) {
  size = size|0;
  var ret = 0;
  ret = STACKTOP;
  STACKTOP = (STACKTOP + size)|0;
  STACKTOP = (STACKTOP + 15)&-16;
if ((STACKTOP|0) >= (STACK_MAX|0)) abort();

  return ret|0;
}
function stackSave() {
  return STACKTOP|0;
}
function stackRestore(top) {
  top = top|0;
  STACKTOP = top;
}
function establishStackSpace(stackBase, stackMax) {
  stackBase = stackBase|0;
  stackMax = stackMax|0;
  STACKTOP = stackBase;
  STACK_MAX = stackMax;
}

function setThrew(threw, value) {
  threw = threw|0;
  value = value|0;
  if ((__THREW__|0) == 0) {
    __THREW__ = threw;
    threwValue = value;
  }
}
function copyTempFloat(ptr) {
  ptr = ptr|0;
  HEAP8[tempDoublePtr>>0] = HEAP8[ptr>>0];
  HEAP8[tempDoublePtr+1>>0] = HEAP8[ptr+1>>0];
  HEAP8[tempDoublePtr+2>>0] = HEAP8[ptr+2>>0];
  HEAP8[tempDoublePtr+3>>0] = HEAP8[ptr+3>>0];
}
function copyTempDouble(ptr) {
  ptr = ptr|0;
  HEAP8[tempDoublePtr>>0] = HEAP8[ptr>>0];
  HEAP8[tempDoublePtr+1>>0] = HEAP8[ptr+1>>0];
  HEAP8[tempDoublePtr+2>>0] = HEAP8[ptr+2>>0];
  HEAP8[tempDoublePtr+3>>0] = HEAP8[ptr+3>>0];
  HEAP8[tempDoublePtr+4>>0] = HEAP8[ptr+4>>0];
  HEAP8[tempDoublePtr+5>>0] = HEAP8[ptr+5>>0];
  HEAP8[tempDoublePtr+6>>0] = HEAP8[ptr+6>>0];
  HEAP8[tempDoublePtr+7>>0] = HEAP8[ptr+7>>0];
}

function setTempRet0(value) {
  value = value|0;
  tempRet0 = value;
}
function getTempRet0() {
  return tempRet0|0;
}

function __Z20GetNumFreeParametersv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __Z12GetNumJointsv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 6;
}
function __Z9ComputeIkPKdS0_S0_RN6ikfast18IkSolutionListBaseIdEE($eetrans,$eerot,$pfree,$solutions) {
 $eetrans = $eetrans|0;
 $eerot = $eerot|0;
 $pfree = $pfree|0;
 $solutions = $solutions|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $solver = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 608|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $solver = sp;
 $0 = $eetrans;
 $1 = $eerot;
 $2 = $pfree;
 $3 = $solutions;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = (__ZN8IKSolver9ComputeIkEPKdS1_S1_RN6ikfast18IkSolutionListBaseIdEE($solver,$4,$5,$6,$7)|0);
 STACKTOP = sp;return ($8|0);
}
function _main($argc,$argv) {
 $argc = $argc|0;
 $argv = $argv|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0.0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0.0, $198 = 0, $199 = 0, $2 = 0, $20 = 0.0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0.0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0.0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0.0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0.0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0.0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0.0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0.0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0.0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0.0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0.0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0.0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $bSuccess = 0, $eerot = 0, $eetrans = 0, $i = 0, $i1 = 0, $j = 0, $sol = 0, $solutions = 0, $solvalues = 0, $vararg_buffer = 0, $vararg_buffer1 = 0;
 var $vararg_buffer10 = 0, $vararg_buffer13 = 0, $vararg_buffer3 = 0, $vararg_buffer6 = 0, $vararg_ptr9 = 0, $vfree = 0, $vsolfree = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer13 = sp + 136|0;
 $vararg_buffer10 = sp + 128|0;
 $vararg_buffer6 = sp + 120|0;
 $vararg_buffer3 = sp + 112|0;
 $vararg_buffer1 = sp + 104|0;
 $vararg_buffer = sp + 96|0;
 $solutions = sp + 208|0;
 $vfree = sp + 192|0;
 $eerot = sp + 24|0;
 $eetrans = sp;
 $solvalues = sp + 164|0;
 $vsolfree = sp + 144|0;
 $0 = 0;
 $1 = $argc;
 $2 = $argv;
 $6 = $1;
 $7 = (__Z20GetNumFreeParametersv()|0);
 $8 = (12 + ($7))|0;
 $9 = (($8) + 1)|0;
 $10 = ($6|0)!=($9|0);
 if ($10) {
  $11 = (__Z20GetNumFreeParametersv()|0);
  HEAP32[$vararg_buffer>>2] = $11;
  (_printf((8|0),($vararg_buffer|0))|0);
  $0 = 1;
  $224 = $0;
  STACKTOP = sp;return ($224|0);
 }
 __ZN6ikfast14IkSolutionListIdEC2Ev($solutions);
 __THREW__ = 0;
 $12 = (invoke_i(349)|0);
 $13 = __THREW__; __THREW__ = 0;
 $14 = $13&1;
 L5: do {
  if ($14) {
   label = 22;
  } else {
   __THREW__ = 0;
   invoke_vii(350,($vfree|0),($12|0));
   $15 = __THREW__; __THREW__ = 0;
   $16 = $15&1;
   if ($16) {
    label = 22;
   } else {
    $17 = $2;
    $18 = ((($17)) + 4|0);
    $19 = HEAP32[$18>>2]|0;
    __THREW__ = 0;
    $20 = (+invoke_di(351,($19|0)));
    $21 = __THREW__; __THREW__ = 0;
    $22 = $21&1;
    L8: do {
     if ($22) {
      label = 23;
     } else {
      HEAPF64[$eerot>>3] = $20;
      $23 = $2;
      $24 = ((($23)) + 8|0);
      $25 = HEAP32[$24>>2]|0;
      __THREW__ = 0;
      $26 = (+invoke_di(351,($25|0)));
      $27 = __THREW__; __THREW__ = 0;
      $28 = $27&1;
      if ($28) {
       label = 23;
      } else {
       $29 = ((($eerot)) + 8|0);
       HEAPF64[$29>>3] = $26;
       $30 = $2;
       $31 = ((($30)) + 12|0);
       $32 = HEAP32[$31>>2]|0;
       __THREW__ = 0;
       $33 = (+invoke_di(351,($32|0)));
       $34 = __THREW__; __THREW__ = 0;
       $35 = $34&1;
       if ($35) {
        label = 23;
       } else {
        $36 = ((($eerot)) + 16|0);
        HEAPF64[$36>>3] = $33;
        $37 = $2;
        $38 = ((($37)) + 16|0);
        $39 = HEAP32[$38>>2]|0;
        __THREW__ = 0;
        $40 = (+invoke_di(351,($39|0)));
        $41 = __THREW__; __THREW__ = 0;
        $42 = $41&1;
        if ($42) {
         label = 23;
        } else {
         HEAPF64[$eetrans>>3] = $40;
         $43 = $2;
         $44 = ((($43)) + 20|0);
         $45 = HEAP32[$44>>2]|0;
         __THREW__ = 0;
         $46 = (+invoke_di(351,($45|0)));
         $47 = __THREW__; __THREW__ = 0;
         $48 = $47&1;
         if ($48) {
          label = 23;
         } else {
          $49 = ((($eerot)) + 24|0);
          HEAPF64[$49>>3] = $46;
          $50 = $2;
          $51 = ((($50)) + 24|0);
          $52 = HEAP32[$51>>2]|0;
          __THREW__ = 0;
          $53 = (+invoke_di(351,($52|0)));
          $54 = __THREW__; __THREW__ = 0;
          $55 = $54&1;
          if ($55) {
           label = 23;
          } else {
           $56 = ((($eerot)) + 32|0);
           HEAPF64[$56>>3] = $53;
           $57 = $2;
           $58 = ((($57)) + 28|0);
           $59 = HEAP32[$58>>2]|0;
           __THREW__ = 0;
           $60 = (+invoke_di(351,($59|0)));
           $61 = __THREW__; __THREW__ = 0;
           $62 = $61&1;
           if ($62) {
            label = 23;
           } else {
            $63 = ((($eerot)) + 40|0);
            HEAPF64[$63>>3] = $60;
            $64 = $2;
            $65 = ((($64)) + 32|0);
            $66 = HEAP32[$65>>2]|0;
            __THREW__ = 0;
            $67 = (+invoke_di(351,($66|0)));
            $68 = __THREW__; __THREW__ = 0;
            $69 = $68&1;
            if ($69) {
             label = 23;
            } else {
             $70 = ((($eetrans)) + 8|0);
             HEAPF64[$70>>3] = $67;
             $71 = $2;
             $72 = ((($71)) + 36|0);
             $73 = HEAP32[$72>>2]|0;
             __THREW__ = 0;
             $74 = (+invoke_di(351,($73|0)));
             $75 = __THREW__; __THREW__ = 0;
             $76 = $75&1;
             if ($76) {
              label = 23;
             } else {
              $77 = ((($eerot)) + 48|0);
              HEAPF64[$77>>3] = $74;
              $78 = $2;
              $79 = ((($78)) + 40|0);
              $80 = HEAP32[$79>>2]|0;
              __THREW__ = 0;
              $81 = (+invoke_di(351,($80|0)));
              $82 = __THREW__; __THREW__ = 0;
              $83 = $82&1;
              if ($83) {
               label = 23;
              } else {
               $84 = ((($eerot)) + 56|0);
               HEAPF64[$84>>3] = $81;
               $85 = $2;
               $86 = ((($85)) + 44|0);
               $87 = HEAP32[$86>>2]|0;
               __THREW__ = 0;
               $88 = (+invoke_di(351,($87|0)));
               $89 = __THREW__; __THREW__ = 0;
               $90 = $89&1;
               if ($90) {
                label = 23;
               } else {
                $91 = ((($eerot)) + 64|0);
                HEAPF64[$91>>3] = $88;
                $92 = $2;
                $93 = ((($92)) + 48|0);
                $94 = HEAP32[$93>>2]|0;
                __THREW__ = 0;
                $95 = (+invoke_di(351,($94|0)));
                $96 = __THREW__; __THREW__ = 0;
                $97 = $96&1;
                if ($97) {
                 label = 23;
                } else {
                 $98 = ((($eetrans)) + 16|0);
                 HEAPF64[$98>>3] = $95;
                 $i = 0;
                 while(1) {
                  $99 = $i;
                  $100 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($vfree)|0);
                  $101 = ($99>>>0)<($100>>>0);
                  if (!($101)) {
                   break;
                  }
                  $102 = $i;
                  $103 = (13 + ($102))|0;
                  $104 = $2;
                  $105 = (($104) + ($103<<2)|0);
                  $106 = HEAP32[$105>>2]|0;
                  __THREW__ = 0;
                  $107 = (+invoke_di(351,($106|0)));
                  $108 = __THREW__; __THREW__ = 0;
                  $109 = $108&1;
                  if ($109) {
                   label = 23;
                   break L8;
                  }
                  $110 = $i;
                  __THREW__ = 0;
                  $111 = (invoke_iii(352,($vfree|0),($110|0))|0);
                  $112 = __THREW__; __THREW__ = 0;
                  $113 = $112&1;
                  if ($113) {
                   label = 23;
                   break L8;
                  }
                  HEAPF64[$111>>3] = $107;
                  $114 = $i;
                  $115 = (($114) + 1)|0;
                  $i = $115;
                 }
                 $120 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($vfree)|0);
                 $121 = ($120>>>0)>(0);
                 if ($121) {
                  __THREW__ = 0;
                  $122 = (invoke_iii(352,($vfree|0),0)|0);
                  $123 = __THREW__; __THREW__ = 0;
                  $124 = $123&1;
                  if ($124) {
                   label = 23;
                   break;
                  } else {
                   $125 = $122;
                  }
                 } else {
                  $125 = 0;
                 }
                 __THREW__ = 0;
                 $126 = (invoke_iiiii(353,($eetrans|0),($eerot|0),($125|0),($solutions|0))|0);
                 $127 = __THREW__; __THREW__ = 0;
                 $128 = $127&1;
                 if ($128) {
                  label = 23;
                 } else {
                  $129 = $126&1;
                  $bSuccess = $129;
                  $130 = $bSuccess;
                  $131 = $130&1;
                  L31: do {
                   if ($131) {
                    __THREW__ = 0;
                    $135 = (invoke_ii(5,($solutions|0))|0);
                    $136 = __THREW__; __THREW__ = 0;
                    $137 = $136&1;
                    if ($137) {
                     label = 23;
                     break L8;
                    }
                    __THREW__ = 0;
                    HEAP32[$vararg_buffer3>>2] = $135;
                    (invoke_iii(355,(312|0),($vararg_buffer3|0))|0);
                    $138 = __THREW__; __THREW__ = 0;
                    $139 = $138&1;
                    if ($139) {
                     label = 23;
                     break L8;
                    }
                    __THREW__ = 0;
                    $140 = (invoke_i(356)|0);
                    $141 = __THREW__; __THREW__ = 0;
                    $142 = $141&1;
                    if ($142) {
                     label = 23;
                     break L8;
                    }
                    __THREW__ = 0;
                    invoke_vii(350,($solvalues|0),($140|0));
                    $143 = __THREW__; __THREW__ = 0;
                    $144 = $143&1;
                    if ($144) {
                     label = 23;
                     break L8;
                    }
                    $i1 = 0;
                    L39: while(1) {
                     $145 = $i1;
                     __THREW__ = 0;
                     $146 = (invoke_ii(5,($solutions|0))|0);
                     $147 = __THREW__; __THREW__ = 0;
                     $148 = $147&1;
                     if ($148) {
                      label = 51;
                      break;
                     }
                     $149 = ($145>>>0)<($146>>>0);
                     if (!($149)) {
                      label = 56;
                      break;
                     }
                     $150 = $i1;
                     __THREW__ = 0;
                     $151 = (invoke_iii(4,($solutions|0),($150|0))|0);
                     $152 = __THREW__; __THREW__ = 0;
                     $153 = $152&1;
                     if ($153) {
                      label = 51;
                      break;
                     }
                     $sol = $151;
                     $154 = $i1;
                     $155 = $sol;
                     $156 = HEAP32[$155>>2]|0;
                     $157 = ((($156)) + 16|0);
                     $158 = HEAP32[$157>>2]|0;
                     __THREW__ = 0;
                     $159 = (invoke_ii($158|0,($155|0))|0);
                     $160 = __THREW__; __THREW__ = 0;
                     $161 = $160&1;
                     if ($161) {
                      label = 51;
                      break;
                     }
                     $162 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv($159)|0);
                     __THREW__ = 0;
                     HEAP32[$vararg_buffer6>>2] = $154;
                     $vararg_ptr9 = ((($vararg_buffer6)) + 4|0);
                     HEAP32[$vararg_ptr9>>2] = $162;
                     (invoke_iii(355,(336|0),($vararg_buffer6|0))|0);
                     $163 = __THREW__; __THREW__ = 0;
                     $164 = $163&1;
                     if ($164) {
                      label = 51;
                      break;
                     }
                     $165 = $sol;
                     $166 = HEAP32[$165>>2]|0;
                     $167 = ((($166)) + 16|0);
                     $168 = HEAP32[$167>>2]|0;
                     __THREW__ = 0;
                     $169 = (invoke_ii($168|0,($165|0))|0);
                     $170 = __THREW__; __THREW__ = 0;
                     $171 = $170&1;
                     if ($171) {
                      label = 51;
                      break;
                     }
                     $172 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv($169)|0);
                     __THREW__ = 0;
                     invoke_vii(350,($vsolfree|0),($172|0));
                     $173 = __THREW__; __THREW__ = 0;
                     $174 = $173&1;
                     if ($174) {
                      label = 51;
                      break;
                     }
                     $175 = $sol;
                     $176 = HEAP32[$175>>2]|0;
                     $177 = ((($176)) + 8|0);
                     $178 = HEAP32[$177>>2]|0;
                     __THREW__ = 0;
                     $179 = (invoke_iii(352,($solvalues|0),0)|0);
                     $180 = __THREW__; __THREW__ = 0;
                     $181 = $180&1;
                     if ($181) {
                      label = 52;
                      break;
                     }
                     $182 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($vsolfree)|0);
                     $183 = ($182>>>0)>(0);
                     if ($183) {
                      __THREW__ = 0;
                      $184 = (invoke_iii(352,($vsolfree|0),0)|0);
                      $185 = __THREW__; __THREW__ = 0;
                      $186 = $185&1;
                      if ($186) {
                       label = 52;
                       break;
                      } else {
                       $187 = $184;
                      }
                     } else {
                      $187 = 0;
                     }
                     __THREW__ = 0;
                     invoke_viii($178|0,($175|0),($179|0),($187|0));
                     $188 = __THREW__; __THREW__ = 0;
                     $189 = $188&1;
                     if ($189) {
                      label = 52;
                      break;
                     }
                     $j = 0;
                     while(1) {
                      $190 = $j;
                      $191 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($solvalues)|0);
                      $192 = ($190>>>0)<($191>>>0);
                      if (!($192)) {
                       break;
                      }
                      $193 = $j;
                      __THREW__ = 0;
                      $194 = (invoke_iii(352,($solvalues|0),($193|0))|0);
                      $195 = __THREW__; __THREW__ = 0;
                      $196 = $195&1;
                      if ($196) {
                       label = 52;
                       break L39;
                      }
                      $197 = +HEAPF64[$194>>3];
                      __THREW__ = 0;
                      HEAPF64[$vararg_buffer10>>3] = $197;
                      (invoke_iii(355,(360|0),($vararg_buffer10|0))|0);
                      $198 = __THREW__; __THREW__ = 0;
                      $199 = $198&1;
                      if ($199) {
                       label = 52;
                       break L39;
                      }
                      $200 = $j;
                      $201 = (($200) + 1)|0;
                      $j = $201;
                     }
                     __THREW__ = 0;
                     (invoke_iii(355,(368|0),($vararg_buffer13|0))|0);
                     $208 = __THREW__; __THREW__ = 0;
                     $209 = $208&1;
                     if ($209) {
                      label = 52;
                      break;
                     }
                     __THREW__ = 0;
                     invoke_vi(357,($vsolfree|0));
                     $210 = __THREW__; __THREW__ = 0;
                     $211 = $210&1;
                     if ($211) {
                      label = 51;
                      break;
                     }
                     $212 = $i1;
                     $213 = (($212) + 1)|0;
                     $i1 = $213;
                    }
                    do {
                     if ((label|0) == 51) {
                      $202 = ___cxa_find_matching_catch()|0;
                      $203 = tempRet0;
                      $3 = $202;
                      $4 = $203;
                     }
                     else if ((label|0) == 52) {
                      $204 = ___cxa_find_matching_catch()|0;
                      $205 = tempRet0;
                      $3 = $204;
                      $4 = $205;
                      __THREW__ = 0;
                      invoke_vi(357,($vsolfree|0));
                      $206 = __THREW__; __THREW__ = 0;
                      $207 = $206&1;
                      if (!($207)) {
                       break;
                      }
                      $227 = ___cxa_find_matching_catch(0|0)|0;
                      $228 = tempRet0;
                      ___clang_call_terminate($227);
                      // unreachable;
                     }
                     else if ((label|0) == 56) {
                      $0 = 0;
                      $5 = 1;
                      __THREW__ = 0;
                      invoke_vi(357,($solvalues|0));
                      $214 = __THREW__; __THREW__ = 0;
                      $215 = $214&1;
                      if ($215) {
                       label = 23;
                       break L8;
                      } else {
                       break L31;
                      }
                     }
                    } while(0);
                    __THREW__ = 0;
                    invoke_vi(357,($solvalues|0));
                    $216 = __THREW__; __THREW__ = 0;
                    $217 = $216&1;
                    if (!($217)) {
                     break L8;
                    }
                    $227 = ___cxa_find_matching_catch(0|0)|0;
                    $228 = tempRet0;
                    ___clang_call_terminate($227);
                    // unreachable;
                   } else {
                    $132 = HEAP32[_stderr>>2]|0;
                    __THREW__ = 0;
                    (invoke_iiii(354,($132|0),(280|0),($vararg_buffer1|0))|0);
                    $133 = __THREW__; __THREW__ = 0;
                    $134 = $133&1;
                    if ($134) {
                     label = 23;
                     break L8;
                    }
                    $0 = -1;
                    $5 = 1;
                   }
                  } while(0);
                  __THREW__ = 0;
                  invoke_vi(357,($vfree|0));
                  $218 = __THREW__; __THREW__ = 0;
                  $219 = $218&1;
                  if ($219) {
                   label = 22;
                   break L5;
                  }
                  __ZN6ikfast14IkSolutionListIdED2Ev($solutions);
                  $224 = $0;
                  STACKTOP = sp;return ($224|0);
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    } while(0);
    if ((label|0) == 23) {
     $118 = ___cxa_find_matching_catch()|0;
     $119 = tempRet0;
     $3 = $118;
     $4 = $119;
    }
    __THREW__ = 0;
    invoke_vi(357,($vfree|0));
    $220 = __THREW__; __THREW__ = 0;
    $221 = $220&1;
    if ($221) {
     $227 = ___cxa_find_matching_catch(0|0)|0;
     $228 = tempRet0;
     ___clang_call_terminate($227);
     // unreachable;
    }
   }
  }
 } while(0);
 if ((label|0) == 22) {
  $116 = ___cxa_find_matching_catch()|0;
  $117 = tempRet0;
  $3 = $116;
  $4 = $117;
 }
 __THREW__ = 0;
 invoke_vi(1,($solutions|0));
 $222 = __THREW__; __THREW__ = 0;
 $223 = $222&1;
 if ($223) {
  $227 = ___cxa_find_matching_catch(0|0)|0;
  $228 = tempRet0;
  ___clang_call_terminate($227);
  // unreachable;
 } else {
  $225 = $3;
  $226 = $4;
  ___resumeException($225|0);
  // unreachable;
 }
 return (0)|0;
}
function __Z5IKcosd($f) {
 $f = +$f;
 var $0 = 0.0, $1 = 0.0, $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $f;
 $1 = $0;
 $2 = (+Math_cos((+$1)));
 STACKTOP = sp;return (+$2);
}
function __Z5IKsind($f) {
 $f = +$f;
 var $0 = 0.0, $1 = 0.0, $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $f;
 $1 = $0;
 $2 = (+Math_sin((+$1)));
 STACKTOP = sp;return (+$2);
}
function __ZN8IKSolver9ComputeIkEPKdS1_S1_RN6ikfast18IkSolutionListBaseIdEE($this,$eetrans,$eerot,$pfree,$solutions) {
 $this = $this|0;
 $eetrans = $eetrans|0;
 $eerot = $eerot|0;
 $pfree = $pfree|0;
 $solutions = $solutions|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0.0, $1000 = 0.0, $1001 = 0, $1002 = 0.0, $1003 = 0, $1004 = 0.0, $1005 = 0, $1006 = 0.0, $1007 = 0.0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0.0, $1011 = 0.0, $1012 = 0, $1013 = 0, $1014 = 0.0;
 var $1015 = 0.0, $1016 = 0, $1017 = 0, $1018 = 0.0, $1019 = 0.0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0.0, $1023 = 0.0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0.0, $103 = 0.0, $1030 = 0, $1031 = 0.0, $1032 = 0.0;
 var $1033 = 0, $1034 = 0.0, $1035 = 0.0, $1036 = 0, $1037 = 0.0, $1038 = 0.0, $1039 = 0, $104 = 0, $1040 = 0.0, $1041 = 0.0, $1042 = 0.0, $1043 = 0.0, $1044 = 0, $1045 = 0.0, $1046 = 0.0, $1047 = 0.0, $1048 = 0.0, $1049 = 0, $105 = 0, $1050 = 0.0;
 var $1051 = 0.0, $1052 = 0.0, $1053 = 0.0, $1054 = 0.0, $1055 = 0, $1056 = 0.0, $1057 = 0.0, $1058 = 0.0, $1059 = 0.0, $106 = 0.0, $1060 = 0, $1061 = 0.0, $1062 = 0.0, $1063 = 0, $1064 = 0.0, $1065 = 0.0, $1066 = 0.0, $1067 = 0.0, $1068 = 0.0, $1069 = 0;
 var $107 = 0, $1070 = 0.0, $1071 = 0.0, $1072 = 0.0, $1073 = 0.0, $1074 = 0.0, $1075 = 0.0, $1076 = 0.0, $1077 = 0, $1078 = 0.0, $1079 = 0.0, $108 = 0, $1080 = 0, $1081 = 0.0, $1082 = 0.0, $1083 = 0.0, $1084 = 0.0, $1085 = 0, $1086 = 0.0, $1087 = 0.0;
 var $1088 = 0, $1089 = 0, $109 = 0.0, $1090 = 0.0, $1091 = 0.0, $1092 = 0, $1093 = 0, $1094 = 0.0, $1095 = 0.0, $1096 = 0, $1097 = 0, $1098 = 0, $1099 = 0.0, $11 = 0.0, $110 = 0, $1100 = 0.0, $1101 = 0, $1102 = 0.0, $1103 = 0.0, $1104 = 0;
 var $1105 = 0.0, $1106 = 0.0, $1107 = 0, $1108 = 0.0, $1109 = 0.0, $111 = 0, $1110 = 0.0, $1111 = 0.0, $1112 = 0.0, $1113 = 0, $1114 = 0.0, $1115 = 0.0, $1116 = 0.0, $1117 = 0.0, $1118 = 0.0, $1119 = 0, $112 = 0.0, $1120 = 0.0, $1121 = 0.0, $1122 = 0.0;
 var $1123 = 0.0, $1124 = 0, $1125 = 0.0, $1126 = 0.0, $1127 = 0.0, $1128 = 0.0, $1129 = 0.0, $113 = 0, $1130 = 0, $1131 = 0.0, $1132 = 0.0, $1133 = 0.0, $1134 = 0, $1135 = 0, $1136 = 0, $1137 = 0, $1138 = 0.0, $1139 = 0, $114 = 0, $1140 = 0.0;
 var $1141 = 0.0, $1142 = 0.0, $1143 = 0, $1144 = 0.0, $1145 = 0.0, $1146 = 0.0, $1147 = 0.0, $1148 = 0, $1149 = 0, $115 = 0.0, $1150 = 0, $1151 = 0.0, $1152 = 0.0, $1153 = 0.0, $1154 = 0.0, $1155 = 0.0, $1156 = 0.0, $1157 = 0.0, $1158 = 0.0, $1159 = 0.0;
 var $116 = 0, $1160 = 0.0, $1161 = 0, $1162 = 0.0, $1163 = 0.0, $1164 = 0, $1165 = 0.0, $1166 = 0.0, $1167 = 0, $1168 = 0, $1169 = 0, $117 = 0, $1170 = 0, $1171 = 0, $1172 = 0, $1173 = 0, $1174 = 0, $1175 = 0, $1176 = 0, $1177 = 0;
 var $1178 = 0, $1179 = 0, $118 = 0.0, $1180 = 0, $1181 = 0, $1182 = 0, $1183 = 0, $1184 = 0, $1185 = 0, $1186 = 0, $1187 = 0, $1188 = 0.0, $1189 = 0, $119 = 0, $1190 = 0, $1191 = 0.0, $1192 = 0.0, $1193 = 0.0, $1194 = 0, $1195 = 0;
 var $1196 = 0, $1197 = 0.0, $1198 = 0, $1199 = 0, $12 = 0, $120 = 0, $1200 = 0.0, $1201 = 0.0, $1202 = 0.0, $1203 = 0, $1204 = 0, $1205 = 0, $1206 = 0, $1207 = 0, $1208 = 0, $1209 = 0, $121 = 0.0, $1210 = 0, $1211 = 0, $1212 = 0;
 var $1213 = 0, $1214 = 0.0, $1215 = 0, $1216 = 0, $1217 = 0.0, $1218 = 0, $1219 = 0, $122 = 0, $1220 = 0, $1221 = 0.0, $1222 = 0, $1223 = 0.0, $1224 = 0.0, $1225 = 0.0, $1226 = 0.0, $1227 = 0, $1228 = 0.0, $1229 = 0.0, $123 = 0, $1230 = 0.0;
 var $1231 = 0.0, $1232 = 0.0, $1233 = 0, $1234 = 0.0, $1235 = 0.0, $1236 = 0.0, $1237 = 0.0, $1238 = 0, $1239 = 0.0, $124 = 0.0, $1240 = 0.0, $1241 = 0, $1242 = 0.0, $1243 = 0.0, $1244 = 0.0, $1245 = 0.0, $1246 = 0, $1247 = 0.0, $1248 = 0.0, $1249 = 0.0;
 var $125 = 0, $1250 = 0.0, $1251 = 0, $1252 = 0.0, $1253 = 0.0, $1254 = 0.0, $1255 = 0, $1256 = 0.0, $1257 = 0.0, $1258 = 0, $1259 = 0, $126 = 0, $1260 = 0.0, $1261 = 0.0, $1262 = 0, $1263 = 0, $1264 = 0, $1265 = 0, $1266 = 0, $1267 = 0;
 var $1268 = 0, $1269 = 0.0, $127 = 0.0, $1270 = 0.0, $1271 = 0, $1272 = 0.0, $1273 = 0.0, $1274 = 0, $1275 = 0.0, $1276 = 0.0, $1277 = 0, $1278 = 0.0, $1279 = 0.0, $128 = 0.0, $1280 = 0.0, $1281 = 0.0, $1282 = 0.0, $1283 = 0.0, $1284 = 0, $1285 = 0.0;
 var $1286 = 0.0, $1287 = 0.0, $1288 = 0.0, $1289 = 0.0, $129 = 0, $1290 = 0.0, $1291 = 0, $1292 = 0.0, $1293 = 0.0, $1294 = 0.0, $1295 = 0, $1296 = 0.0, $1297 = 0.0, $1298 = 0.0, $1299 = 0, $13 = 0, $130 = 0, $1300 = 0.0, $1301 = 0.0, $1302 = 0.0;
 var $1303 = 0, $1304 = 0.0, $1305 = 0.0, $1306 = 0.0, $1307 = 0, $1308 = 0.0, $1309 = 0.0, $131 = 0.0, $1310 = 0.0, $1311 = 0.0, $1312 = 0.0, $1313 = 0, $1314 = 0.0, $1315 = 0.0, $1316 = 0.0, $1317 = 0.0, $1318 = 0.0, $1319 = 0, $132 = 0, $1320 = 0.0;
 var $1321 = 0.0, $1322 = 0, $1323 = 0.0, $1324 = 0.0, $1325 = 0, $1326 = 0, $1327 = 0.0, $1328 = 0.0, $1329 = 0, $133 = 0, $1330 = 0, $1331 = 0.0, $1332 = 0.0, $1333 = 0, $1334 = 0, $1335 = 0.0, $1336 = 0.0, $1337 = 0, $1338 = 0, $1339 = 0.0;
 var $134 = 0.0, $1340 = 0.0, $1341 = 0, $1342 = 0, $1343 = 0, $1344 = 0, $1345 = 0, $1346 = 0.0, $1347 = 0, $1348 = 0.0, $1349 = 0.0, $135 = 0, $1350 = 0, $1351 = 0.0, $1352 = 0.0, $1353 = 0, $1354 = 0.0, $1355 = 0.0, $1356 = 0.0, $1357 = 0.0;
 var $1358 = 0, $1359 = 0.0, $136 = 0, $1360 = 0.0, $1361 = 0.0, $1362 = 0.0, $1363 = 0, $1364 = 0.0, $1365 = 0.0, $1366 = 0.0, $1367 = 0.0, $1368 = 0, $1369 = 0, $137 = 0.0, $1370 = 0.0, $1371 = 0.0, $1372 = 0.0, $1373 = 0.0, $1374 = 0, $1375 = 0.0;
 var $1376 = 0.0, $1377 = 0.0, $1378 = 0.0, $1379 = 0.0, $138 = 0, $1380 = 0, $1381 = 0.0, $1382 = 0.0, $1383 = 0.0, $1384 = 0.0, $1385 = 0, $1386 = 0.0, $1387 = 0.0, $1388 = 0, $1389 = 0.0, $139 = 0, $1390 = 0.0, $1391 = 0.0, $1392 = 0.0, $1393 = 0.0;
 var $1394 = 0, $1395 = 0.0, $1396 = 0.0, $1397 = 0.0, $1398 = 0.0, $1399 = 0.0, $14 = 0, $140 = 0.0, $1400 = 0.0, $1401 = 0.0, $1402 = 0, $1403 = 0.0, $1404 = 0.0, $1405 = 0, $1406 = 0, $1407 = 0.0, $1408 = 0.0, $1409 = 0, $141 = 0, $1410 = 0;
 var $1411 = 0.0, $1412 = 0.0, $1413 = 0, $1414 = 0, $1415 = 0, $1416 = 0.0, $1417 = 0.0, $1418 = 0, $1419 = 0.0, $142 = 0, $1420 = 0.0, $1421 = 0, $1422 = 0.0, $1423 = 0.0, $1424 = 0.0, $1425 = 0.0, $1426 = 0, $1427 = 0.0, $1428 = 0.0, $1429 = 0.0;
 var $143 = 0.0, $1430 = 0.0, $1431 = 0.0, $1432 = 0, $1433 = 0.0, $1434 = 0.0, $1435 = 0.0, $1436 = 0, $1437 = 0.0, $1438 = 0.0, $1439 = 0, $144 = 0, $1440 = 0.0, $1441 = 0.0, $1442 = 0.0, $1443 = 0.0, $1444 = 0.0, $1445 = 0, $1446 = 0.0, $1447 = 0.0;
 var $1448 = 0.0, $1449 = 0.0, $145 = 0, $1450 = 0.0, $1451 = 0, $1452 = 0, $1453 = 0, $1454 = 0, $1455 = 0.0, $1456 = 0, $1457 = 0.0, $1458 = 0.0, $1459 = 0.0, $146 = 0.0, $1460 = 0, $1461 = 0.0, $1462 = 0.0, $1463 = 0.0, $1464 = 0.0, $1465 = 0;
 var $1466 = 0, $1467 = 0, $1468 = 0.0, $1469 = 0.0, $147 = 0, $1470 = 0.0, $1471 = 0.0, $1472 = 0.0, $1473 = 0.0, $1474 = 0.0, $1475 = 0.0, $1476 = 0.0, $1477 = 0.0, $1478 = 0, $1479 = 0.0, $148 = 0, $1480 = 0.0, $1481 = 0, $1482 = 0.0, $1483 = 0.0;
 var $1484 = 0, $1485 = 0, $1486 = 0, $1487 = 0, $1488 = 0, $1489 = 0, $149 = 0.0, $1490 = 0, $1491 = 0, $1492 = 0, $1493 = 0, $1494 = 0, $1495 = 0, $1496 = 0, $1497 = 0, $1498 = 0, $1499 = 0, $15 = 0, $150 = 0, $1500 = 0;
 var $1501 = 0, $1502 = 0, $1503 = 0, $1504 = 0, $1505 = 0.0, $1506 = 0, $1507 = 0, $1508 = 0.0, $1509 = 0.0, $151 = 0, $1510 = 0.0, $1511 = 0, $1512 = 0, $1513 = 0, $1514 = 0.0, $1515 = 0, $1516 = 0, $1517 = 0.0, $1518 = 0.0, $1519 = 0.0;
 var $152 = 0.0, $1520 = 0, $1521 = 0, $1522 = 0, $1523 = 0, $1524 = 0, $1525 = 0, $1526 = 0, $1527 = 0, $1528 = 0, $1529 = 0, $153 = 0, $1530 = 0, $1531 = 0.0, $1532 = 0, $1533 = 0, $1534 = 0.0, $1535 = 0, $1536 = 0, $1537 = 0;
 var $1538 = 0.0, $1539 = 0, $154 = 0, $1540 = 0.0, $1541 = 0.0, $1542 = 0.0, $1543 = 0.0, $1544 = 0.0, $1545 = 0.0, $1546 = 0, $1547 = 0.0, $1548 = 0.0, $1549 = 0.0, $155 = 0.0, $1550 = 0.0, $1551 = 0, $1552 = 0.0, $1553 = 0.0, $1554 = 0.0, $1555 = 0.0;
 var $1556 = 0.0, $1557 = 0, $1558 = 0.0, $1559 = 0.0, $156 = 0, $1560 = 0.0, $1561 = 0.0, $1562 = 0, $1563 = 0.0, $1564 = 0.0, $1565 = 0.0, $1566 = 0, $1567 = 0.0, $1568 = 0.0, $1569 = 0.0, $157 = 0, $1570 = 0.0, $1571 = 0.0, $1572 = 0, $1573 = 0.0;
 var $1574 = 0.0, $1575 = 0.0, $1576 = 0, $1577 = 0.0, $1578 = 0.0, $1579 = 0, $158 = 0.0, $1580 = 0, $1581 = 0.0, $1582 = 0.0, $1583 = 0, $1584 = 0, $1585 = 0, $1586 = 0, $1587 = 0, $1588 = 0, $1589 = 0, $159 = 0, $1590 = 0.0, $1591 = 0.0;
 var $1592 = 0, $1593 = 0.0, $1594 = 0.0, $1595 = 0, $1596 = 0.0, $1597 = 0.0, $1598 = 0.0, $1599 = 0, $16 = 0, $160 = 0, $1600 = 0.0, $1601 = 0.0, $1602 = 0.0, $1603 = 0.0, $1604 = 0.0, $1605 = 0, $1606 = 0.0, $1607 = 0.0, $1608 = 0.0, $1609 = 0;
 var $161 = 0.0, $1610 = 0.0, $1611 = 0.0, $1612 = 0.0, $1613 = 0, $1614 = 0.0, $1615 = 0.0, $1616 = 0.0, $1617 = 0, $1618 = 0.0, $1619 = 0, $162 = 0, $1620 = 0.0, $1621 = 0, $1622 = 0.0, $1623 = 0.0, $1624 = 0, $1625 = 0, $1626 = 0.0, $1627 = 0.0;
 var $1628 = 0, $1629 = 0, $163 = 0, $1630 = 0.0, $1631 = 0.0, $1632 = 0, $1633 = 0, $1634 = 0.0, $1635 = 0.0, $1636 = 0, $1637 = 0, $1638 = 0, $1639 = 0, $164 = 0.0, $1640 = 0, $1641 = 0.0, $1642 = 0, $1643 = 0.0, $1644 = 0.0, $1645 = 0;
 var $1646 = 0.0, $1647 = 0.0, $1648 = 0, $1649 = 0.0, $165 = 0, $1650 = 0.0, $1651 = 0.0, $1652 = 0.0, $1653 = 0, $1654 = 0.0, $1655 = 0.0, $1656 = 0, $1657 = 0.0, $1658 = 0.0, $1659 = 0.0, $166 = 0, $1660 = 0, $1661 = 0.0, $1662 = 0.0, $1663 = 0.0;
 var $1664 = 0.0, $1665 = 0.0, $1666 = 0.0, $1667 = 0, $1668 = 0.0, $1669 = 0.0, $167 = 0.0, $1670 = 0, $1671 = 0.0, $1672 = 0.0, $1673 = 0.0, $1674 = 0.0, $1675 = 0.0, $1676 = 0, $1677 = 0.0, $1678 = 0.0, $1679 = 0.0, $168 = 0.0, $1680 = 0.0, $1681 = 0.0;
 var $1682 = 0, $1683 = 0.0, $1684 = 0.0, $1685 = 0, $1686 = 0.0, $1687 = 0.0, $1688 = 0.0, $1689 = 0.0, $169 = 0, $1690 = 0, $1691 = 0.0, $1692 = 0.0, $1693 = 0, $1694 = 0, $1695 = 0.0, $1696 = 0.0, $1697 = 0, $1698 = 0, $1699 = 0.0, $17 = 0.0;
 var $170 = 0.0, $1700 = 0.0, $1701 = 0, $1702 = 0, $1703 = 0, $1704 = 0, $1705 = 0, $1706 = 0.0, $1707 = 0, $1708 = 0.0, $1709 = 0.0, $171 = 0.0, $1710 = 0, $1711 = 0.0, $1712 = 0.0, $1713 = 0, $1714 = 0.0, $1715 = 0.0, $1716 = 0.0, $1717 = 0.0;
 var $1718 = 0, $1719 = 0.0, $172 = 0, $1720 = 0.0, $1721 = 0.0, $1722 = 0.0, $1723 = 0, $1724 = 0.0, $1725 = 0.0, $1726 = 0.0, $1727 = 0.0, $1728 = 0, $1729 = 0, $173 = 0.0, $1730 = 0.0, $1731 = 0.0, $1732 = 0.0, $1733 = 0, $1734 = 0.0, $1735 = 0.0;
 var $1736 = 0.0, $1737 = 0, $1738 = 0.0, $1739 = 0.0, $174 = 0.0, $1740 = 0.0, $1741 = 0, $1742 = 0.0, $1743 = 0.0, $1744 = 0.0, $1745 = 0.0, $1746 = 0.0, $1747 = 0.0, $1748 = 0, $1749 = 0.0, $175 = 0, $1750 = 0.0, $1751 = 0, $1752 = 0.0, $1753 = 0.0;
 var $1754 = 0.0, $1755 = 0.0, $1756 = 0, $1757 = 0.0, $1758 = 0.0, $1759 = 0.0, $176 = 0.0, $1760 = 0.0, $1761 = 0.0, $1762 = 0, $1763 = 0.0, $1764 = 0.0, $1765 = 0.0, $1766 = 0.0, $1767 = 0.0, $1768 = 0, $1769 = 0.0, $177 = 0, $1770 = 0.0, $1771 = 0;
 var $1772 = 0, $1773 = 0.0, $1774 = 0.0, $1775 = 0, $1776 = 0, $1777 = 0.0, $1778 = 0.0, $1779 = 0, $178 = 0.0, $1780 = 0, $1781 = 0, $1782 = 0.0, $1783 = 0.0, $1784 = 0, $1785 = 0.0, $1786 = 0.0, $1787 = 0, $1788 = 0.0, $1789 = 0.0, $179 = 0.0;
 var $1790 = 0.0, $1791 = 0, $1792 = 0.0, $1793 = 0.0, $1794 = 0.0, $1795 = 0, $1796 = 0.0, $1797 = 0.0, $1798 = 0.0, $1799 = 0, $18 = 0, $180 = 0, $1800 = 0.0, $1801 = 0.0, $1802 = 0.0, $1803 = 0.0, $1804 = 0.0, $1805 = 0, $1806 = 0.0, $1807 = 0.0;
 var $1808 = 0, $1809 = 0.0, $181 = 0.0, $1810 = 0.0, $1811 = 0.0, $1812 = 0.0, $1813 = 0, $1814 = 0.0, $1815 = 0.0, $1816 = 0.0, $1817 = 0.0, $1818 = 0.0, $1819 = 0, $182 = 0, $1820 = 0.0, $1821 = 0.0, $1822 = 0.0, $1823 = 0, $1824 = 0, $1825 = 0;
 var $1826 = 0, $1827 = 0.0, $1828 = 0, $1829 = 0.0, $183 = 0.0, $1830 = 0.0, $1831 = 0.0, $1832 = 0, $1833 = 0.0, $1834 = 0.0, $1835 = 0.0, $1836 = 0.0, $1837 = 0, $1838 = 0, $1839 = 0, $184 = 0.0, $1840 = 0.0, $1841 = 0.0, $1842 = 0.0, $1843 = 0.0;
 var $1844 = 0.0, $1845 = 0.0, $1846 = 0.0, $1847 = 0.0, $1848 = 0.0, $1849 = 0.0, $185 = 0.0, $1850 = 0, $1851 = 0.0, $1852 = 0.0, $1853 = 0, $1854 = 0.0, $1855 = 0.0, $1856 = 0, $1857 = 0, $1858 = 0, $1859 = 0, $186 = 0, $1860 = 0, $1861 = 0;
 var $1862 = 0, $1863 = 0, $1864 = 0, $1865 = 0, $1866 = 0, $1867 = 0, $1868 = 0, $1869 = 0, $187 = 0.0, $1870 = 0, $1871 = 0, $1872 = 0, $1873 = 0, $1874 = 0, $1875 = 0, $1876 = 0, $1877 = 0.0, $1878 = 0, $1879 = 0, $188 = 0;
 var $1880 = 0.0, $1881 = 0.0, $1882 = 0.0, $1883 = 0, $1884 = 0, $1885 = 0, $1886 = 0.0, $1887 = 0, $1888 = 0, $1889 = 0.0, $189 = 0.0, $1890 = 0.0, $1891 = 0.0, $1892 = 0, $1893 = 0, $1894 = 0, $1895 = 0, $1896 = 0, $1897 = 0, $1898 = 0;
 var $1899 = 0, $19 = 0, $190 = 0.0, $1900 = 0, $1901 = 0, $1902 = 0, $1903 = 0.0, $1904 = 0, $1905 = 0, $1906 = 0.0, $1907 = 0, $1908 = 0, $1909 = 0, $191 = 0.0, $1910 = 0.0, $1911 = 0, $1912 = 0.0, $1913 = 0.0, $1914 = 0.0, $1915 = 0.0;
 var $1916 = 0.0, $1917 = 0.0, $1918 = 0, $1919 = 0.0, $192 = 0, $1920 = 0.0, $1921 = 0.0, $1922 = 0, $1923 = 0.0, $1924 = 0.0, $1925 = 0.0, $1926 = 0.0, $1927 = 0, $1928 = 0.0, $1929 = 0.0, $193 = 0, $1930 = 0.0, $1931 = 0.0, $1932 = 0.0, $1933 = 0.0;
 var $1934 = 0.0, $1935 = 0.0, $1936 = 0, $1937 = 0.0, $1938 = 0.0, $1939 = 0.0, $194 = 0.0, $1940 = 0, $1941 = 0.0, $1942 = 0.0, $1943 = 0.0, $1944 = 0.0, $1945 = 0.0, $1946 = 0, $1947 = 0, $1948 = 0.0, $1949 = 0.0, $195 = 0, $1950 = 0.0, $1951 = 0.0;
 var $1952 = 0.0, $1953 = 0, $1954 = 0.0, $1955 = 0.0, $1956 = 0.0, $1957 = 0.0, $1958 = 0.0, $1959 = 0.0, $196 = 0.0, $1960 = 0, $1961 = 0.0, $1962 = 0.0, $1963 = 0.0, $1964 = 0, $1965 = 0.0, $1966 = 0.0, $1967 = 0, $1968 = 0, $1969 = 0.0, $197 = 0.0;
 var $1970 = 0.0, $1971 = 0, $1972 = 0, $1973 = 0.0, $1974 = 0.0, $1975 = 0, $1976 = 0, $1977 = 0, $1978 = 0, $1979 = 0, $198 = 0, $1980 = 0, $1981 = 0.0, $1982 = 0.0, $1983 = 0, $1984 = 0.0, $1985 = 0, $1986 = 0.0, $1987 = 0.0, $1988 = 0.0;
 var $1989 = 0, $199 = 0.0, $1990 = 0.0, $1991 = 0.0, $1992 = 0.0, $1993 = 0.0, $1994 = 0, $1995 = 0, $1996 = 0, $1997 = 0, $1998 = 0.0, $1999 = 0.0, $2 = 0, $20 = 0, $200 = 0, $2000 = 0, $2001 = 0.0, $2002 = 0.0, $2003 = 0.0, $2004 = 0;
 var $2005 = 0.0, $2006 = 0.0, $2007 = 0.0, $2008 = 0.0, $2009 = 0.0, $201 = 0.0, $2010 = 0, $2011 = 0.0, $2012 = 0.0, $2013 = 0, $2014 = 0.0, $2015 = 0.0, $2016 = 0.0, $2017 = 0.0, $2018 = 0.0, $2019 = 0, $202 = 0.0, $2020 = 0.0, $2021 = 0.0, $2022 = 0.0;
 var $2023 = 0, $2024 = 0, $2025 = 0, $2026 = 0.0, $2027 = 0.0, $2028 = 0.0, $2029 = 0.0, $203 = 0.0, $2030 = 0.0, $2031 = 0.0, $2032 = 0.0, $2033 = 0.0, $2034 = 0.0, $2035 = 0.0, $2036 = 0, $2037 = 0.0, $2038 = 0.0, $2039 = 0, $204 = 0, $2040 = 0.0;
 var $2041 = 0.0, $2042 = 0, $2043 = 0, $2044 = 0, $2045 = 0, $2046 = 0, $2047 = 0, $2048 = 0, $2049 = 0, $205 = 0.0, $2050 = 0, $2051 = 0, $2052 = 0, $2053 = 0, $2054 = 0, $2055 = 0, $2056 = 0, $2057 = 0, $2058 = 0, $2059 = 0;
 var $206 = 0, $2060 = 0, $2061 = 0, $2062 = 0, $2063 = 0.0, $2064 = 0, $2065 = 0, $2066 = 0.0, $2067 = 0.0, $2068 = 0.0, $2069 = 0, $207 = 0.0, $2070 = 0, $2071 = 0, $2072 = 0.0, $2073 = 0, $2074 = 0, $2075 = 0.0, $2076 = 0.0, $2077 = 0.0;
 var $2078 = 0, $2079 = 0, $208 = 0.0, $2080 = 0, $2081 = 0, $2082 = 0, $2083 = 0, $2084 = 0, $2085 = 0, $2086 = 0, $2087 = 0, $2088 = 0, $2089 = 0.0, $209 = 0.0, $2090 = 0, $2091 = 0, $2092 = 0.0, $2093 = 0, $2094 = 0, $2095 = 0;
 var $2096 = 0.0, $2097 = 0, $2098 = 0.0, $2099 = 0.0, $21 = 0, $210 = 0, $2100 = 0.0, $2101 = 0.0, $2102 = 0.0, $2103 = 0.0, $2104 = 0, $2105 = 0.0, $2106 = 0.0, $2107 = 0.0, $2108 = 0, $2109 = 0.0, $211 = 0, $2110 = 0.0, $2111 = 0.0, $2112 = 0.0;
 var $2113 = 0.0, $2114 = 0, $2115 = 0.0, $2116 = 0.0, $2117 = 0.0, $2118 = 0.0, $2119 = 0, $212 = 0.0, $2120 = 0.0, $2121 = 0.0, $2122 = 0.0, $2123 = 0.0, $2124 = 0.0, $2125 = 0.0, $2126 = 0.0, $2127 = 0.0, $2128 = 0, $2129 = 0.0, $213 = 0, $2130 = 0.0;
 var $2131 = 0.0, $2132 = 0, $2133 = 0, $2134 = 0.0, $2135 = 0.0, $2136 = 0.0, $2137 = 0, $2138 = 0.0, $2139 = 0.0, $214 = 0.0, $2140 = 0.0, $2141 = 0.0, $2142 = 0.0, $2143 = 0.0, $2144 = 0, $2145 = 0.0, $2146 = 0.0, $2147 = 0.0, $2148 = 0.0, $2149 = 0.0;
 var $215 = 0.0, $2150 = 0, $2151 = 0.0, $2152 = 0.0, $2153 = 0, $2154 = 0, $2155 = 0.0, $2156 = 0.0, $2157 = 0, $2158 = 0, $2159 = 0.0, $216 = 0, $2160 = 0.0, $2161 = 0, $2162 = 0, $2163 = 0, $2164 = 0, $2165 = 0, $2166 = 0, $2167 = 0;
 var $2168 = 0.0, $2169 = 0.0, $217 = 0.0, $2170 = 0, $2171 = 0.0, $2172 = 0.0, $2173 = 0.0, $2174 = 0.0, $2175 = 0.0, $2176 = 0, $2177 = 0.0, $2178 = 0.0, $2179 = 0.0, $218 = 0, $2180 = 0.0, $2181 = 0.0, $2182 = 0.0, $2183 = 0, $2184 = 0.0, $2185 = 0.0;
 var $2186 = 0.0, $2187 = 0, $2188 = 0.0, $2189 = 0.0, $219 = 0.0, $2190 = 0.0, $2191 = 0, $2192 = 0.0, $2193 = 0.0, $2194 = 0.0, $2195 = 0, $2196 = 0.0, $2197 = 0.0, $2198 = 0, $2199 = 0.0, $22 = 0, $220 = 0.0, $2200 = 0.0, $2201 = 0.0, $2202 = 0;
 var $2203 = 0, $2204 = 0.0, $2205 = 0.0, $2206 = 0.0, $2207 = 0, $2208 = 0.0, $2209 = 0.0, $221 = 0.0, $2210 = 0, $2211 = 0, $2212 = 0.0, $2213 = 0.0, $2214 = 0, $2215 = 0, $2216 = 0.0, $2217 = 0.0, $2218 = 0, $2219 = 0, $222 = 0, $2220 = 0.0;
 var $2221 = 0.0, $2222 = 0, $2223 = 0, $2224 = 0, $2225 = 0, $2226 = 0, $2227 = 0.0, $2228 = 0, $2229 = 0.0, $223 = 0.0, $2230 = 0.0, $2231 = 0, $2232 = 0.0, $2233 = 0.0, $2234 = 0, $2235 = 0.0, $2236 = 0.0, $2237 = 0.0, $2238 = 0.0, $2239 = 0;
 var $224 = 0, $2240 = 0.0, $2241 = 0.0, $2242 = 0, $2243 = 0.0, $2244 = 0.0, $2245 = 0.0, $2246 = 0, $2247 = 0.0, $2248 = 0.0, $2249 = 0.0, $225 = 0.0, $2250 = 0.0, $2251 = 0.0, $2252 = 0.0, $2253 = 0, $2254 = 0.0, $2255 = 0.0, $2256 = 0.0, $2257 = 0.0;
 var $2258 = 0, $2259 = 0.0, $226 = 0.0, $2260 = 0.0, $2261 = 0.0, $2262 = 0, $2263 = 0.0, $2264 = 0.0, $2265 = 0.0, $2266 = 0.0, $2267 = 0.0, $2268 = 0, $2269 = 0.0, $227 = 0.0, $2270 = 0.0, $2271 = 0, $2272 = 0.0, $2273 = 0.0, $2274 = 0.0, $2275 = 0.0;
 var $2276 = 0, $2277 = 0.0, $2278 = 0.0, $2279 = 0, $228 = 0, $2280 = 0, $2281 = 0.0, $2282 = 0.0, $2283 = 0, $2284 = 0, $2285 = 0.0, $2286 = 0.0, $2287 = 0, $2288 = 0, $2289 = 0, $229 = 0, $2290 = 0, $2291 = 0, $2292 = 0.0, $2293 = 0;
 var $2294 = 0.0, $2295 = 0.0, $2296 = 0, $2297 = 0.0, $2298 = 0.0, $2299 = 0, $23 = 0.0, $230 = 0.0, $2300 = 0.0, $2301 = 0.0, $2302 = 0, $2303 = 0.0, $2304 = 0.0, $2305 = 0.0, $2306 = 0.0, $2307 = 0, $2308 = 0.0, $2309 = 0.0, $231 = 0, $2310 = 0;
 var $2311 = 0.0, $2312 = 0.0, $2313 = 0.0, $2314 = 0.0, $2315 = 0, $2316 = 0.0, $2317 = 0.0, $2318 = 0.0, $2319 = 0, $232 = 0.0, $2320 = 0.0, $2321 = 0.0, $2322 = 0.0, $2323 = 0.0, $2324 = 0.0, $2325 = 0, $2326 = 0.0, $2327 = 0.0, $2328 = 0.0, $2329 = 0;
 var $233 = 0.0, $2330 = 0.0, $2331 = 0.0, $2332 = 0.0, $2333 = 0, $2334 = 0.0, $2335 = 0.0, $2336 = 0.0, $2337 = 0.0, $2338 = 0, $2339 = 0.0, $234 = 0, $2340 = 0.0, $2341 = 0.0, $2342 = 0.0, $2343 = 0.0, $2344 = 0, $2345 = 0, $2346 = 0.0, $2347 = 0.0;
 var $2348 = 0.0, $2349 = 0.0, $235 = 0.0, $2350 = 0.0, $2351 = 0.0, $2352 = 0, $2353 = 0.0, $2354 = 0.0, $2355 = 0, $2356 = 0, $2357 = 0.0, $2358 = 0.0, $2359 = 0, $236 = 0, $2360 = 0, $2361 = 0.0, $2362 = 0.0, $2363 = 0, $2364 = 0, $2365 = 0;
 var $2366 = 0.0, $2367 = 0.0, $2368 = 0, $2369 = 0.0, $237 = 0.0, $2370 = 0.0, $2371 = 0, $2372 = 0.0, $2373 = 0, $2374 = 0.0, $2375 = 0.0, $2376 = 0.0, $2377 = 0, $2378 = 0.0, $2379 = 0.0, $238 = 0.0, $2380 = 0.0, $2381 = 0.0, $2382 = 0, $2383 = 0;
 var $2384 = 0, $2385 = 0, $2386 = 0.0, $2387 = 0.0, $2388 = 0, $2389 = 0.0, $239 = 0.0, $2390 = 0.0, $2391 = 0.0, $2392 = 0.0, $2393 = 0, $2394 = 0.0, $2395 = 0.0, $2396 = 0.0, $2397 = 0.0, $2398 = 0, $2399 = 0.0, $24 = 0, $240 = 0, $2400 = 0.0;
 var $2401 = 0.0, $2402 = 0, $2403 = 0.0, $2404 = 0.0, $2405 = 0.0, $2406 = 0, $2407 = 0.0, $2408 = 0.0, $2409 = 0.0, $241 = 0.0, $2410 = 0.0, $2411 = 0, $2412 = 0.0, $2413 = 0.0, $2414 = 0.0, $2415 = 0, $2416 = 0.0, $2417 = 0.0, $2418 = 0.0, $2419 = 0;
 var $242 = 0, $2420 = 0, $2421 = 0, $2422 = 0.0, $2423 = 0.0, $2424 = 0.0, $2425 = 0.0, $2426 = 0.0, $2427 = 0.0, $2428 = 0.0, $2429 = 0.0, $243 = 0.0, $2430 = 0.0, $2431 = 0.0, $2432 = 0, $2433 = 0.0, $2434 = 0.0, $2435 = 0, $2436 = 0.0, $2437 = 0.0;
 var $2438 = 0, $2439 = 0, $244 = 0.0, $2440 = 0, $2441 = 0, $2442 = 0, $2443 = 0, $2444 = 0, $2445 = 0, $2446 = 0, $2447 = 0, $2448 = 0, $2449 = 0, $245 = 0.0, $2450 = 0, $2451 = 0, $2452 = 0, $2453 = 0, $2454 = 0, $2455 = 0;
 var $2456 = 0, $2457 = 0, $2458 = 0, $2459 = 0.0, $246 = 0, $2460 = 0, $2461 = 0, $2462 = 0.0, $2463 = 0.0, $2464 = 0.0, $2465 = 0, $2466 = 0, $2467 = 0, $2468 = 0.0, $2469 = 0, $247 = 0, $2470 = 0, $2471 = 0.0, $2472 = 0.0, $2473 = 0.0;
 var $2474 = 0, $2475 = 0, $2476 = 0, $2477 = 0, $2478 = 0, $2479 = 0, $248 = 0.0, $2480 = 0, $2481 = 0, $2482 = 0, $2483 = 0, $2484 = 0, $2485 = 0.0, $2486 = 0, $2487 = 0, $2488 = 0.0, $2489 = 0, $249 = 0.0, $2490 = 0, $2491 = 0;
 var $2492 = 0.0, $2493 = 0, $2494 = 0.0, $2495 = 0.0, $2496 = 0.0, $2497 = 0.0, $2498 = 0, $2499 = 0.0, $25 = 0, $250 = 0.0, $2500 = 0.0, $2501 = 0.0, $2502 = 0, $2503 = 0.0, $2504 = 0.0, $2505 = 0.0, $2506 = 0, $2507 = 0.0, $2508 = 0.0, $2509 = 0.0;
 var $251 = 0.0, $2510 = 0.0, $2511 = 0, $2512 = 0.0, $2513 = 0.0, $2514 = 0.0, $2515 = 0.0, $2516 = 0.0, $2517 = 0.0, $2518 = 0.0, $2519 = 0.0, $252 = 0, $2520 = 0.0, $2521 = 0.0, $2522 = 0.0, $2523 = 0, $2524 = 0.0, $2525 = 0.0, $2526 = 0.0, $2527 = 0;
 var $2528 = 0, $2529 = 0.0, $253 = 0.0, $2530 = 0.0, $2531 = 0.0, $2532 = 0, $2533 = 0.0, $2534 = 0.0, $2535 = 0.0, $2536 = 0.0, $2537 = 0.0, $2538 = 0.0, $2539 = 0.0, $254 = 0, $2540 = 0, $2541 = 0.0, $2542 = 0.0, $2543 = 0, $2544 = 0, $2545 = 0.0;
 var $2546 = 0.0, $2547 = 0, $2548 = 0, $2549 = 0.0, $255 = 0.0, $2550 = 0.0, $2551 = 0, $2552 = 0, $2553 = 0, $2554 = 0, $2555 = 0, $2556 = 0, $2557 = 0.0, $2558 = 0.0, $2559 = 0, $256 = 0.0, $2560 = 0.0, $2561 = 0.0, $2562 = 0, $2563 = 0.0;
 var $2564 = 0.0, $2565 = 0.0, $2566 = 0, $2567 = 0.0, $2568 = 0.0, $2569 = 0.0, $257 = 0.0, $2570 = 0.0, $2571 = 0.0, $2572 = 0, $2573 = 0.0, $2574 = 0.0, $2575 = 0.0, $2576 = 0.0, $2577 = 0, $2578 = 0.0, $2579 = 0.0, $258 = 0, $2580 = 0.0, $2581 = 0;
 var $2582 = 0.0, $2583 = 0.0, $2584 = 0.0, $2585 = 0, $2586 = 0, $2587 = 0, $2588 = 0, $2589 = 0.0, $259 = 0, $2590 = 0, $2591 = 0.0, $2592 = 0.0, $2593 = 0.0, $2594 = 0, $2595 = 0.0, $2596 = 0.0, $2597 = 0.0, $2598 = 0.0, $2599 = 0, $26 = 0;
 var $260 = 0.0, $2600 = 0, $2601 = 0, $2602 = 0.0, $2603 = 0.0, $2604 = 0.0, $2605 = 0.0, $2606 = 0.0, $2607 = 0.0, $2608 = 0.0, $2609 = 0.0, $261 = 0, $2610 = 0.0, $2611 = 0.0, $2612 = 0, $2613 = 0.0, $2614 = 0.0, $2615 = 0, $2616 = 0.0, $2617 = 0.0;
 var $2618 = 0, $2619 = 0, $262 = 0.0, $2620 = 0, $2621 = 0, $2622 = 0, $2623 = 0, $2624 = 0, $2625 = 0, $2626 = 0, $2627 = 0, $2628 = 0, $2629 = 0, $263 = 0.0, $2630 = 0, $2631 = 0, $2632 = 0, $2633 = 0, $2634 = 0, $2635 = 0;
 var $2636 = 0, $2637 = 0, $2638 = 0, $2639 = 0.0, $264 = 0, $2640 = 0, $2641 = 0, $2642 = 0.0, $2643 = 0.0, $2644 = 0.0, $2645 = 0, $2646 = 0, $2647 = 0, $2648 = 0.0, $2649 = 0, $265 = 0.0, $2650 = 0, $2651 = 0.0, $2652 = 0.0, $2653 = 0.0;
 var $2654 = 0, $2655 = 0, $2656 = 0, $2657 = 0, $2658 = 0, $2659 = 0, $266 = 0.0, $2660 = 0, $2661 = 0, $2662 = 0, $2663 = 0, $2664 = 0, $2665 = 0.0, $2666 = 0, $2667 = 0, $2668 = 0.0, $2669 = 0, $267 = 0.0, $2670 = 0, $2671 = 0;
 var $2672 = 0.0, $2673 = 0, $2674 = 0.0, $2675 = 0.0, $2676 = 0.0, $2677 = 0.0, $2678 = 0, $2679 = 0.0, $268 = 0.0, $2680 = 0.0, $2681 = 0.0, $2682 = 0, $2683 = 0.0, $2684 = 0.0, $2685 = 0.0, $2686 = 0, $2687 = 0.0, $2688 = 0.0, $2689 = 0.0, $269 = 0.0;
 var $2690 = 0.0, $2691 = 0.0, $2692 = 0, $2693 = 0.0, $2694 = 0.0, $2695 = 0.0, $2696 = 0.0, $2697 = 0.0, $2698 = 0.0, $2699 = 0.0, $27 = 0, $270 = 0, $2700 = 0.0, $2701 = 0.0, $2702 = 0.0, $2703 = 0, $2704 = 0.0, $2705 = 0.0, $2706 = 0.0, $2707 = 0;
 var $2708 = 0, $2709 = 0.0, $271 = 0, $2710 = 0.0, $2711 = 0.0, $2712 = 0, $2713 = 0.0, $2714 = 0.0, $2715 = 0.0, $2716 = 0.0, $2717 = 0.0, $2718 = 0.0, $2719 = 0.0, $272 = 0.0, $2720 = 0, $2721 = 0.0, $2722 = 0.0, $2723 = 0, $2724 = 0, $2725 = 0.0;
 var $2726 = 0.0, $2727 = 0, $2728 = 0, $2729 = 0.0, $273 = 0.0, $2730 = 0.0, $2731 = 0, $2732 = 0, $2733 = 0, $2734 = 0, $2735 = 0, $2736 = 0, $2737 = 0, $2738 = 0, $2739 = 0.0, $274 = 0.0, $2740 = 0.0, $2741 = 0, $2742 = 0.0, $2743 = 0.0;
 var $2744 = 0, $2745 = 0.0, $2746 = 0.0, $2747 = 0, $2748 = 0.0, $2749 = 0.0, $275 = 0.0, $2750 = 0, $2751 = 0.0, $2752 = 0.0, $2753 = 0, $2754 = 0.0, $2755 = 0.0, $2756 = 0, $2757 = 0.0, $2758 = 0.0, $2759 = 0.0, $276 = 0, $2760 = 0.0, $2761 = 0;
 var $2762 = 0.0, $2763 = 0.0, $2764 = 0.0, $2765 = 0.0, $2766 = 0.0, $2767 = 0, $2768 = 0.0, $2769 = 0.0, $277 = 0.0, $2770 = 0.0, $2771 = 0, $2772 = 0.0, $2773 = 0.0, $2774 = 0.0, $2775 = 0.0, $2776 = 0, $2777 = 0.0, $2778 = 0.0, $2779 = 0.0, $278 = 0;
 var $2780 = 0.0, $2781 = 0, $2782 = 0.0, $2783 = 0.0, $2784 = 0.0, $2785 = 0.0, $2786 = 0, $2787 = 0.0, $2788 = 0.0, $2789 = 0.0, $279 = 0.0, $2790 = 0.0, $2791 = 0, $2792 = 0.0, $2793 = 0.0, $2794 = 0.0, $2795 = 0.0, $2796 = 0, $2797 = 0.0, $2798 = 0.0;
 var $2799 = 0.0, $28 = 0, $280 = 0.0, $2800 = 0, $2801 = 0.0, $2802 = 0.0, $2803 = 0.0, $2804 = 0.0, $2805 = 0, $2806 = 0, $2807 = 0, $2808 = 0.0, $2809 = 0.0, $281 = 0.0, $2810 = 0, $2811 = 0.0, $2812 = 0, $2813 = 0.0, $2814 = 0.0, $2815 = 0.0;
 var $2816 = 0, $2817 = 0.0, $2818 = 0.0, $2819 = 0.0, $282 = 0, $2820 = 0.0, $2821 = 0.0, $2822 = 0, $2823 = 0, $2824 = 0, $2825 = 0.0, $2826 = 0.0, $2827 = 0.0, $2828 = 0.0, $2829 = 0.0, $283 = 0, $2830 = 0.0, $2831 = 0.0, $2832 = 0.0, $2833 = 0.0;
 var $2834 = 0.0, $2835 = 0, $2836 = 0.0, $2837 = 0.0, $2838 = 0, $2839 = 0.0, $284 = 0.0, $2840 = 0.0, $2841 = 0, $2842 = 0, $2843 = 0, $2844 = 0, $2845 = 0, $2846 = 0, $2847 = 0, $2848 = 0, $2849 = 0, $285 = 0.0, $2850 = 0, $2851 = 0;
 var $2852 = 0, $2853 = 0, $2854 = 0, $2855 = 0, $2856 = 0, $2857 = 0, $2858 = 0, $2859 = 0, $286 = 0.0, $2860 = 0, $2861 = 0, $2862 = 0.0, $2863 = 0, $2864 = 0, $2865 = 0.0, $2866 = 0.0, $2867 = 0.0, $2868 = 0, $2869 = 0, $287 = 0.0;
 var $2870 = 0, $2871 = 0.0, $2872 = 0, $2873 = 0, $2874 = 0.0, $2875 = 0.0, $2876 = 0.0, $2877 = 0, $2878 = 0, $2879 = 0, $288 = 0, $2880 = 0, $2881 = 0, $2882 = 0, $2883 = 0, $2884 = 0, $2885 = 0, $2886 = 0, $2887 = 0, $2888 = 0.0;
 var $2889 = 0, $289 = 0.0, $2890 = 0, $2891 = 0.0, $2892 = 0, $2893 = 0, $2894 = 0, $2895 = 0.0, $2896 = 0, $2897 = 0.0, $2898 = 0.0, $2899 = 0.0, $29 = 0.0, $290 = 0, $2900 = 0.0, $2901 = 0, $2902 = 0.0, $2903 = 0.0, $2904 = 0, $2905 = 0.0;
 var $2906 = 0.0, $2907 = 0, $2908 = 0.0, $2909 = 0, $291 = 0.0, $2910 = 0.0, $2911 = 0.0, $2912 = 0, $2913 = 0.0, $2914 = 0.0, $2915 = 0, $2916 = 0.0, $2917 = 0.0, $2918 = 0, $2919 = 0.0, $292 = 0.0, $2920 = 0.0, $2921 = 0, $2922 = 0.0, $2923 = 0.0;
 var $2924 = 0, $2925 = 0.0, $2926 = 0.0, $2927 = 0.0, $2928 = 0, $2929 = 0.0, $293 = 0.0, $2930 = 0.0, $2931 = 0.0, $2932 = 0, $2933 = 0.0, $2934 = 0.0, $2935 = 0.0, $2936 = 0.0, $2937 = 0.0, $2938 = 0, $2939 = 0.0, $294 = 0, $2940 = 0.0, $2941 = 0.0;
 var $2942 = 0.0, $2943 = 0, $2944 = 0.0, $2945 = 0.0, $2946 = 0.0, $2947 = 0, $2948 = 0.0, $2949 = 0.0, $295 = 0, $2950 = 0.0, $2951 = 0.0, $2952 = 0.0, $2953 = 0.0, $2954 = 0.0, $2955 = 0.0, $2956 = 0.0, $2957 = 0.0, $2958 = 0, $2959 = 0.0, $296 = 0.0;
 var $2960 = 0, $2961 = 0.0, $2962 = 0.0, $2963 = 0.0, $2964 = 0, $2965 = 0.0, $2966 = 0.0, $2967 = 0.0, $2968 = 0.0, $2969 = 0.0, $297 = 0, $2970 = 0.0, $2971 = 0.0, $2972 = 0.0, $2973 = 0.0, $2974 = 0.0, $2975 = 0.0, $2976 = 0, $2977 = 0.0, $2978 = 0.0;
 var $2979 = 0.0, $298 = 0.0, $2980 = 0, $2981 = 0.0, $2982 = 0.0, $2983 = 0.0, $2984 = 0.0, $2985 = 0.0, $2986 = 0.0, $2987 = 0.0, $2988 = 0.0, $2989 = 0.0, $299 = 0.0, $2990 = 0.0, $2991 = 0.0, $2992 = 0.0, $2993 = 0.0, $2994 = 0.0, $2995 = 0.0, $2996 = 0.0;
 var $2997 = 0.0, $2998 = 0, $2999 = 0, $3 = 0, $30 = 0, $300 = 0, $3000 = 0.0, $3001 = 0.0, $3002 = 0, $3003 = 0.0, $3004 = 0.0, $3005 = 0.0, $3006 = 0.0, $3007 = 0.0, $3008 = 0.0, $3009 = 0.0, $301 = 0.0, $3010 = 0.0, $3011 = 0.0, $3012 = 0.0;
 var $3013 = 0, $3014 = 0.0, $3015 = 0.0, $3016 = 0.0, $3017 = 0.0, $3018 = 0, $3019 = 0.0, $302 = 0.0, $3020 = 0.0, $3021 = 0.0, $3022 = 0.0, $3023 = 0.0, $3024 = 0, $3025 = 0.0, $3026 = 0.0, $3027 = 0.0, $3028 = 0.0, $3029 = 0, $303 = 0.0, $3030 = 0.0;
 var $3031 = 0.0, $3032 = 0, $3033 = 0, $3034 = 0.0, $3035 = 0.0, $3036 = 0, $3037 = 0, $3038 = 0.0, $3039 = 0.0, $304 = 0.0, $3040 = 0, $3041 = 0, $3042 = 0.0, $3043 = 0.0, $3044 = 0, $3045 = 0, $3046 = 0.0, $3047 = 0.0, $3048 = 0, $3049 = 0;
 var $305 = 0.0, $3050 = 0, $3051 = 0, $3052 = 0, $3053 = 0, $3054 = 0.0, $3055 = 0.0, $3056 = 0, $3057 = 0.0, $3058 = 0.0, $3059 = 0, $306 = 0, $3060 = 0.0, $3061 = 0.0, $3062 = 0, $3063 = 0.0, $3064 = 0.0, $3065 = 0, $3066 = 0.0, $3067 = 0.0;
 var $3068 = 0, $3069 = 0.0, $307 = 0, $3070 = 0.0, $3071 = 0, $3072 = 0.0, $3073 = 0.0, $3074 = 0.0, $3075 = 0, $3076 = 0.0, $3077 = 0.0, $3078 = 0.0, $3079 = 0.0, $308 = 0.0, $3080 = 0, $3081 = 0.0, $3082 = 0.0, $3083 = 0.0, $3084 = 0.0, $3085 = 0.0;
 var $3086 = 0, $3087 = 0.0, $3088 = 0.0, $3089 = 0.0, $309 = 0.0, $3090 = 0.0, $3091 = 0.0, $3092 = 0, $3093 = 0.0, $3094 = 0.0, $3095 = 0.0, $3096 = 0, $3097 = 0.0, $3098 = 0.0, $3099 = 0.0, $31 = 0, $310 = 0.0, $3100 = 0.0, $3101 = 0, $3102 = 0.0;
 var $3103 = 0.0, $3104 = 0.0, $3105 = 0.0, $3106 = 0, $3107 = 0.0, $3108 = 0.0, $3109 = 0.0, $311 = 0.0, $3110 = 0.0, $3111 = 0.0, $3112 = 0, $3113 = 0, $3114 = 0, $3115 = 0.0, $3116 = 0.0, $3117 = 0, $3118 = 0.0, $3119 = 0, $312 = 0, $3120 = 0.0;
 var $3121 = 0.0, $3122 = 0.0, $3123 = 0, $3124 = 0.0, $3125 = 0.0, $3126 = 0.0, $3127 = 0.0, $3128 = 0.0, $3129 = 0, $313 = 0.0, $3130 = 0, $3131 = 0, $3132 = 0.0, $3133 = 0.0, $3134 = 0.0, $3135 = 0.0, $3136 = 0.0, $3137 = 0.0, $3138 = 0.0, $3139 = 0.0;
 var $314 = 0, $3140 = 0.0, $3141 = 0.0, $3142 = 0, $3143 = 0.0, $3144 = 0.0, $3145 = 0, $3146 = 0.0, $3147 = 0.0, $3148 = 0, $3149 = 0, $315 = 0.0, $3150 = 0, $3151 = 0, $3152 = 0, $3153 = 0, $3154 = 0, $3155 = 0, $3156 = 0, $3157 = 0;
 var $3158 = 0, $3159 = 0, $316 = 0.0, $3160 = 0, $3161 = 0, $3162 = 0, $3163 = 0, $3164 = 0, $3165 = 0, $3166 = 0, $3167 = 0, $3168 = 0, $3169 = 0.0, $317 = 0.0, $3170 = 0, $3171 = 0, $3172 = 0.0, $3173 = 0.0, $3174 = 0.0, $3175 = 0;
 var $3176 = 0, $3177 = 0, $3178 = 0.0, $3179 = 0, $318 = 0, $3180 = 0, $3181 = 0.0, $3182 = 0.0, $3183 = 0.0, $3184 = 0, $3185 = 0, $3186 = 0, $3187 = 0, $3188 = 0, $3189 = 0, $319 = 0, $3190 = 0, $3191 = 0, $3192 = 0, $3193 = 0;
 var $3194 = 0, $3195 = 0.0, $3196 = 0, $3197 = 0, $3198 = 0.0, $3199 = 0, $32 = 0, $320 = 0.0, $3200 = 0, $3201 = 0, $3202 = 0.0, $3203 = 0, $3204 = 0.0, $3205 = 0.0, $3206 = 0.0, $3207 = 0.0, $3208 = 0, $3209 = 0.0, $321 = 0.0, $3210 = 0.0;
 var $3211 = 0, $3212 = 0.0, $3213 = 0.0, $3214 = 0, $3215 = 0.0, $3216 = 0, $3217 = 0.0, $3218 = 0.0, $3219 = 0, $322 = 0.0, $3220 = 0.0, $3221 = 0.0, $3222 = 0, $3223 = 0.0, $3224 = 0.0, $3225 = 0, $3226 = 0.0, $3227 = 0.0, $3228 = 0, $3229 = 0.0;
 var $323 = 0.0, $3230 = 0.0, $3231 = 0, $3232 = 0.0, $3233 = 0.0, $3234 = 0.0, $3235 = 0, $3236 = 0.0, $3237 = 0.0, $3238 = 0.0, $3239 = 0, $324 = 0, $3240 = 0.0, $3241 = 0.0, $3242 = 0.0, $3243 = 0.0, $3244 = 0.0, $3245 = 0, $3246 = 0.0, $3247 = 0.0;
 var $3248 = 0.0, $3249 = 0.0, $325 = 0.0, $3250 = 0, $3251 = 0.0, $3252 = 0, $3253 = 0.0, $3254 = 0.0, $3255 = 0.0, $3256 = 0.0, $3257 = 0.0, $3258 = 0.0, $3259 = 0.0, $326 = 0, $3260 = 0.0, $3261 = 0, $3262 = 0.0, $3263 = 0.0, $3264 = 0.0, $3265 = 0.0;
 var $3266 = 0, $3267 = 0.0, $3268 = 0.0, $3269 = 0.0, $327 = 0.0, $3270 = 0.0, $3271 = 0, $3272 = 0.0, $3273 = 0.0, $3274 = 0.0, $3275 = 0, $3276 = 0.0, $3277 = 0.0, $3278 = 0.0, $3279 = 0.0, $328 = 0.0, $3280 = 0.0, $3281 = 0.0, $3282 = 0.0, $3283 = 0.0;
 var $3284 = 0.0, $3285 = 0.0, $3286 = 0.0, $3287 = 0, $3288 = 0.0, $3289 = 0.0, $329 = 0.0, $3290 = 0.0, $3291 = 0.0, $3292 = 0.0, $3293 = 0.0, $3294 = 0.0, $3295 = 0.0, $3296 = 0.0, $3297 = 0.0, $3298 = 0.0, $3299 = 0.0, $33 = 0, $330 = 0, $3300 = 0.0;
 var $3301 = 0.0, $3302 = 0.0, $3303 = 0.0, $3304 = 0.0, $3305 = 0, $3306 = 0, $3307 = 0.0, $3308 = 0.0, $3309 = 0.0, $331 = 0, $3310 = 0, $3311 = 0.0, $3312 = 0.0, $3313 = 0.0, $3314 = 0.0, $3315 = 0, $3316 = 0.0, $3317 = 0.0, $3318 = 0.0, $3319 = 0;
 var $332 = 0.0, $3320 = 0.0, $3321 = 0.0, $3322 = 0.0, $3323 = 0.0, $3324 = 0.0, $3325 = 0, $3326 = 0.0, $3327 = 0.0, $3328 = 0.0, $3329 = 0.0, $333 = 0.0, $3330 = 0.0, $3331 = 0.0, $3332 = 0.0, $3333 = 0.0, $3334 = 0.0, $3335 = 0.0, $3336 = 0, $3337 = 0.0;
 var $3338 = 0.0, $3339 = 0, $334 = 0.0, $3340 = 0, $3341 = 0.0, $3342 = 0.0, $3343 = 0, $3344 = 0, $3345 = 0.0, $3346 = 0.0, $3347 = 0, $3348 = 0, $3349 = 0.0, $335 = 0.0, $3350 = 0.0, $3351 = 0, $3352 = 0, $3353 = 0.0, $3354 = 0.0, $3355 = 0;
 var $3356 = 0, $3357 = 0, $3358 = 0, $3359 = 0, $336 = 0, $3360 = 0, $3361 = 0.0, $3362 = 0.0, $3363 = 0, $3364 = 0.0, $3365 = 0.0, $3366 = 0, $3367 = 0.0, $3368 = 0.0, $3369 = 0, $337 = 0.0, $3370 = 0.0, $3371 = 0.0, $3372 = 0, $3373 = 0.0;
 var $3374 = 0.0, $3375 = 0, $3376 = 0.0, $3377 = 0.0, $3378 = 0, $3379 = 0.0, $338 = 0, $3380 = 0.0, $3381 = 0.0, $3382 = 0.0, $3383 = 0, $3384 = 0.0, $3385 = 0.0, $3386 = 0.0, $3387 = 0.0, $3388 = 0, $3389 = 0.0, $339 = 0.0, $3390 = 0.0, $3391 = 0.0;
 var $3392 = 0.0, $3393 = 0.0, $3394 = 0, $3395 = 0.0, $3396 = 0.0, $3397 = 0, $3398 = 0.0, $3399 = 0.0, $34 = 0, $340 = 0.0, $3400 = 0.0, $3401 = 0.0, $3402 = 0, $3403 = 0.0, $3404 = 0.0, $3405 = 0.0, $3406 = 0.0, $3407 = 0, $3408 = 0.0, $3409 = 0.0;
 var $341 = 0.0, $3410 = 0.0, $3411 = 0.0, $3412 = 0, $3413 = 0, $3414 = 0, $3415 = 0.0, $3416 = 0.0, $3417 = 0, $3418 = 0.0, $3419 = 0, $342 = 0, $3420 = 0.0, $3421 = 0.0, $3422 = 0.0, $3423 = 0, $3424 = 0.0, $3425 = 0.0, $3426 = 0.0, $3427 = 0.0;
 var $3428 = 0.0, $3429 = 0, $343 = 0, $3430 = 0, $3431 = 0, $3432 = 0.0, $3433 = 0.0, $3434 = 0.0, $3435 = 0.0, $3436 = 0.0, $3437 = 0.0, $3438 = 0.0, $3439 = 0.0, $344 = 0.0, $3440 = 0.0, $3441 = 0.0, $3442 = 0, $3443 = 0.0, $3444 = 0.0, $3445 = 0;
 var $3446 = 0.0, $3447 = 0.0, $3448 = 0, $3449 = 0, $345 = 0.0, $3450 = 0, $3451 = 0, $3452 = 0, $3453 = 0, $3454 = 0, $3455 = 0, $3456 = 0, $3457 = 0, $3458 = 0, $3459 = 0, $346 = 0.0, $3460 = 0, $3461 = 0, $3462 = 0, $3463 = 0;
 var $3464 = 0, $3465 = 0, $3466 = 0, $3467 = 0, $3468 = 0, $3469 = 0.0, $347 = 0.0, $3470 = 0, $3471 = 0, $3472 = 0.0, $3473 = 0.0, $3474 = 0.0, $3475 = 0, $3476 = 0, $3477 = 0, $3478 = 0.0, $3479 = 0, $348 = 0, $3480 = 0, $3481 = 0.0;
 var $3482 = 0.0, $3483 = 0.0, $3484 = 0, $3485 = 0, $3486 = 0, $3487 = 0, $3488 = 0, $3489 = 0, $349 = 0.0, $3490 = 0, $3491 = 0, $3492 = 0, $3493 = 0, $3494 = 0, $3495 = 0.0, $3496 = 0, $3497 = 0, $3498 = 0.0, $3499 = 0, $35 = 0.0;
 var $350 = 0, $3500 = 0, $3501 = 0, $3502 = 0.0, $3503 = 0, $3504 = 0.0, $3505 = 0.0, $3506 = 0.0, $3507 = 0.0, $3508 = 0, $3509 = 0.0, $351 = 0.0, $3510 = 0.0, $3511 = 0, $3512 = 0.0, $3513 = 0.0, $3514 = 0, $3515 = 0.0, $3516 = 0, $3517 = 0.0;
 var $3518 = 0.0, $3519 = 0, $352 = 0.0, $3520 = 0.0, $3521 = 0.0, $3522 = 0, $3523 = 0.0, $3524 = 0.0, $3525 = 0, $3526 = 0.0, $3527 = 0.0, $3528 = 0, $3529 = 0.0, $353 = 0.0, $3530 = 0.0, $3531 = 0, $3532 = 0.0, $3533 = 0.0, $3534 = 0.0, $3535 = 0;
 var $3536 = 0.0, $3537 = 0.0, $3538 = 0.0, $3539 = 0, $354 = 0, $3540 = 0.0, $3541 = 0.0, $3542 = 0.0, $3543 = 0.0, $3544 = 0.0, $3545 = 0, $3546 = 0.0, $3547 = 0.0, $3548 = 0.0, $3549 = 0.0, $355 = 0, $3550 = 0, $3551 = 0.0, $3552 = 0.0, $3553 = 0.0;
 var $3554 = 0, $3555 = 0.0, $3556 = 0.0, $3557 = 0.0, $3558 = 0.0, $3559 = 0, $356 = 0, $3560 = 0.0, $3561 = 0, $3562 = 0.0, $3563 = 0.0, $3564 = 0.0, $3565 = 0.0, $3566 = 0.0, $3567 = 0.0, $3568 = 0.0, $3569 = 0.0, $357 = 0.0, $3570 = 0.0, $3571 = 0;
 var $3572 = 0.0, $3573 = 0.0, $3574 = 0.0, $3575 = 0.0, $3576 = 0.0, $3577 = 0.0, $3578 = 0.0, $3579 = 0.0, $358 = 0.0, $3580 = 0, $3581 = 0.0, $3582 = 0.0, $3583 = 0.0, $3584 = 0.0, $3585 = 0.0, $3586 = 0.0, $3587 = 0, $3588 = 0.0, $3589 = 0.0, $359 = 0.0;
 var $3590 = 0.0, $3591 = 0.0, $3592 = 0.0, $3593 = 0.0, $3594 = 0.0, $3595 = 0.0, $3596 = 0.0, $3597 = 0.0, $3598 = 0.0, $3599 = 0.0, $36 = 0, $360 = 0, $3600 = 0.0, $3601 = 0.0, $3602 = 0.0, $3603 = 0.0, $3604 = 0.0, $3605 = 0, $3606 = 0, $3607 = 0.0;
 var $3608 = 0.0, $3609 = 0.0, $361 = 0, $3610 = 0, $3611 = 0.0, $3612 = 0.0, $3613 = 0.0, $3614 = 0.0, $3615 = 0, $3616 = 0.0, $3617 = 0.0, $3618 = 0.0, $3619 = 0, $362 = 0.0, $3620 = 0.0, $3621 = 0.0, $3622 = 0.0, $3623 = 0.0, $3624 = 0.0, $3625 = 0.0;
 var $3626 = 0.0, $3627 = 0.0, $3628 = 0.0, $3629 = 0.0, $363 = 0.0, $3630 = 0.0, $3631 = 0, $3632 = 0.0, $3633 = 0.0, $3634 = 0.0, $3635 = 0.0, $3636 = 0, $3637 = 0.0, $3638 = 0.0, $3639 = 0, $364 = 0.0, $3640 = 0, $3641 = 0.0, $3642 = 0.0, $3643 = 0;
 var $3644 = 0, $3645 = 0.0, $3646 = 0.0, $3647 = 0, $3648 = 0, $3649 = 0.0, $365 = 0, $3650 = 0.0, $3651 = 0, $3652 = 0, $3653 = 0.0, $3654 = 0.0, $3655 = 0, $3656 = 0, $3657 = 0, $3658 = 0, $3659 = 0, $366 = 0, $3660 = 0, $3661 = 0;
 var $3662 = 0, $3663 = 0.0, $3664 = 0.0, $3665 = 0, $3666 = 0.0, $3667 = 0, $3668 = 0, $3669 = 0, $367 = 0.0, $3670 = 0.0, $3671 = 0.0, $3672 = 0, $3673 = 0.0, $3674 = 0, $3675 = 0.0, $3676 = 0.0, $3677 = 0, $3678 = 0.0, $3679 = 0, $368 = 0.0;
 var $3680 = 0.0, $3681 = 0.0, $3682 = 0.0, $3683 = 0, $3684 = 0, $3685 = 0.0, $3686 = 0, $3687 = 0.0, $3688 = 0.0, $3689 = 0, $369 = 0.0, $3690 = 0.0, $3691 = 0, $3692 = 0.0, $3693 = 0.0, $3694 = 0.0, $3695 = 0.0, $3696 = 0.0, $3697 = 0, $3698 = 0;
 var $3699 = 0, $37 = 0, $370 = 0.0, $3700 = 0.0, $3701 = 0.0, $3702 = 0, $3703 = 0.0, $3704 = 0.0, $3705 = 0, $3706 = 0.0, $3707 = 0.0, $3708 = 0.0, $3709 = 0.0, $371 = 0.0, $3710 = 0.0, $3711 = 0.0, $3712 = 0.0, $3713 = 0.0, $3714 = 0.0, $3715 = 0.0;
 var $3716 = 0.0, $3717 = 0.0, $3718 = 0.0, $3719 = 0.0, $372 = 0.0, $3720 = 0.0, $3721 = 0.0, $3722 = 0.0, $3723 = 0, $3724 = 0, $3725 = 0.0, $3726 = 0.0, $3727 = 0, $3728 = 0, $3729 = 0.0, $373 = 0.0, $3730 = 0.0, $3731 = 0, $3732 = 0.0, $3733 = 0;
 var $3734 = 0.0, $3735 = 0.0, $3736 = 0, $3737 = 0.0, $3738 = 0.0, $3739 = 0, $374 = 0.0, $3740 = 0.0, $3741 = 0, $3742 = 0, $3743 = 0.0, $3744 = 0.0, $3745 = 0, $3746 = 0, $3747 = 0.0, $3748 = 0.0, $3749 = 0, $375 = 0.0, $3750 = 0, $3751 = 0;
 var $3752 = 0, $3753 = 0, $3754 = 0, $3755 = 0, $3756 = 0, $3757 = 0, $3758 = 0, $3759 = 0, $376 = 0.0, $3760 = 0, $3761 = 0, $3762 = 0, $3763 = 0, $3764 = 0, $3765 = 0, $3766 = 0, $3767 = 0, $3768 = 0, $3769 = 0, $377 = 0.0;
 var $3770 = 0, $3771 = 0.0, $3772 = 0, $3773 = 0, $3774 = 0.0, $3775 = 0.0, $3776 = 0.0, $3777 = 0, $3778 = 0, $3779 = 0, $378 = 0.0, $3780 = 0.0, $3781 = 0, $3782 = 0, $3783 = 0.0, $3784 = 0.0, $3785 = 0.0, $3786 = 0, $3787 = 0, $3788 = 0;
 var $3789 = 0, $379 = 0.0, $3790 = 0, $3791 = 0, $3792 = 0, $3793 = 0, $3794 = 0, $3795 = 0, $3796 = 0, $3797 = 0.0, $3798 = 0, $3799 = 0, $38 = 0, $380 = 0.0, $3800 = 0.0, $3801 = 0, $3802 = 0, $3803 = 0, $3804 = 0.0, $3805 = 0;
 var $3806 = 0, $3807 = 0.0, $3808 = 0, $3809 = 0.0, $381 = 0, $3810 = 0.0, $3811 = 0, $3812 = 0.0, $3813 = 0, $3814 = 0.0, $3815 = 0.0, $3816 = 0, $3817 = 0.0, $3818 = 0, $3819 = 0.0, $382 = 0, $3820 = 0.0, $3821 = 0, $3822 = 0.0, $3823 = 0;
 var $3824 = 0.0, $3825 = 0.0, $3826 = 0, $3827 = 0.0, $3828 = 0.0, $3829 = 0, $383 = 0.0, $3830 = 0.0, $3831 = 0, $3832 = 0.0, $3833 = 0.0, $3834 = 0, $3835 = 0.0, $3836 = 0, $3837 = 0.0, $3838 = 0.0, $3839 = 0, $384 = 0.0, $3840 = 0.0, $3841 = 0.0;
 var $3842 = 0, $3843 = 0.0, $3844 = 0, $3845 = 0.0, $3846 = 0.0, $3847 = 0, $3848 = 0.0, $3849 = 0.0, $385 = 0, $3850 = 0.0, $3851 = 0.0, $3852 = 0.0, $3853 = 0.0, $3854 = 0.0, $3855 = 0, $3856 = 0.0, $3857 = 0.0, $3858 = 0.0, $3859 = 0.0, $386 = 0;
 var $3860 = 0.0, $3861 = 0.0, $3862 = 0.0, $3863 = 0.0, $3864 = 0, $3865 = 0.0, $3866 = 0.0, $3867 = 0.0, $3868 = 0.0, $3869 = 0.0, $387 = 0.0, $3870 = 0.0, $3871 = 0.0, $3872 = 0, $3873 = 0.0, $3874 = 0.0, $3875 = 0.0, $3876 = 0.0, $3877 = 0.0, $3878 = 0;
 var $3879 = 0.0, $388 = 0.0, $3880 = 0.0, $3881 = 0.0, $3882 = 0.0, $3883 = 0.0, $3884 = 0, $3885 = 0.0, $3886 = 0.0, $3887 = 0.0, $3888 = 0.0, $3889 = 0.0, $389 = 0, $3890 = 0.0, $3891 = 0.0, $3892 = 0.0, $3893 = 0.0, $3894 = 0.0, $3895 = 0.0, $3896 = 0;
 var $3897 = 0.0, $3898 = 0.0, $3899 = 0.0, $39 = 0, $390 = 0.0, $3900 = 0.0, $3901 = 0.0, $3902 = 0.0, $3903 = 0.0, $3904 = 0, $3905 = 0.0, $3906 = 0.0, $3907 = 0.0, $3908 = 0.0, $3909 = 0.0, $391 = 0, $3910 = 0.0, $3911 = 0, $3912 = 0.0, $3913 = 0;
 var $3914 = 0.0, $3915 = 0.0, $3916 = 0.0, $3917 = 0.0, $3918 = 0, $3919 = 0.0, $392 = 0.0, $3920 = 0.0, $3921 = 0.0, $3922 = 0, $3923 = 0.0, $3924 = 0.0, $3925 = 0.0, $3926 = 0.0, $3927 = 0.0, $3928 = 0.0, $3929 = 0.0, $393 = 0.0, $3930 = 0.0, $3931 = 0.0;
 var $3932 = 0.0, $3933 = 0.0, $3934 = 0.0, $3935 = 0.0, $3936 = 0.0, $3937 = 0, $3938 = 0.0, $3939 = 0.0, $394 = 0, $3940 = 0, $3941 = 0.0, $3942 = 0.0, $3943 = 0.0, $3944 = 0.0, $3945 = 0.0, $3946 = 0.0, $3947 = 0.0, $3948 = 0, $3949 = 0.0, $395 = 0.0;
 var $3950 = 0.0, $3951 = 0, $3952 = 0, $3953 = 0.0, $3954 = 0.0, $3955 = 0, $3956 = 0, $3957 = 0.0, $3958 = 0.0, $3959 = 0, $396 = 0.0, $3960 = 0, $3961 = 0.0, $3962 = 0, $3963 = 0.0, $3964 = 0.0, $3965 = 0, $3966 = 0.0, $3967 = 0, $3968 = 0.0;
 var $3969 = 0.0, $397 = 0, $3970 = 0, $3971 = 0.0, $3972 = 0.0, $3973 = 0, $3974 = 0.0, $3975 = 0.0, $3976 = 0, $3977 = 0.0, $3978 = 0.0, $3979 = 0, $398 = 0.0, $3980 = 0.0, $3981 = 0, $3982 = 0.0, $3983 = 0.0, $3984 = 0, $3985 = 0.0, $3986 = 0.0;
 var $3987 = 0, $3988 = 0.0, $3989 = 0, $399 = 0, $3990 = 0.0, $3991 = 0.0, $3992 = 0, $3993 = 0.0, $3994 = 0.0, $3995 = 0, $3996 = 0.0, $3997 = 0.0, $3998 = 0, $3999 = 0.0, $4 = 0, $40 = 0, $400 = 0, $4000 = 0.0, $4001 = 0.0, $4002 = 0.0;
 var $4003 = 0.0, $4004 = 0.0, $4005 = 0.0, $4006 = 0.0, $4007 = 0.0, $4008 = 0.0, $4009 = 0.0, $401 = 0.0, $4010 = 0.0, $4011 = 0.0, $4012 = 0.0, $4013 = 0.0, $4014 = 0.0, $4015 = 0.0, $4016 = 0.0, $4017 = 0.0, $4018 = 0.0, $4019 = 0.0, $402 = 0.0, $4020 = 0.0;
 var $4021 = 0.0, $4022 = 0.0, $4023 = 0.0, $4024 = 0.0, $4025 = 0.0, $4026 = 0.0, $4027 = 0.0, $4028 = 0.0, $4029 = 0.0, $403 = 0, $4030 = 0.0, $4031 = 0.0, $4032 = 0.0, $4033 = 0.0, $4034 = 0.0, $4035 = 0.0, $4036 = 0.0, $4037 = 0.0, $4038 = 0.0, $4039 = 0.0;
 var $404 = 0, $4040 = 0.0, $4041 = 0.0, $4042 = 0.0, $4043 = 0.0, $4044 = 0.0, $4045 = 0.0, $4046 = 0.0, $4047 = 0.0, $4048 = 0.0, $4049 = 0.0, $405 = 0.0, $4050 = 0.0, $4051 = 0.0, $4052 = 0.0, $4053 = 0.0, $4054 = 0.0, $4055 = 0.0, $4056 = 0.0, $4057 = 0.0;
 var $4058 = 0.0, $4059 = 0.0, $406 = 0.0, $4060 = 0, $4061 = 0.0, $4062 = 0.0, $4063 = 0.0, $4064 = 0.0, $4065 = 0.0, $4066 = 0.0, $4067 = 0.0, $4068 = 0.0, $4069 = 0.0, $407 = 0, $4070 = 0, $4071 = 0.0, $4072 = 0.0, $4073 = 0.0, $4074 = 0.0, $4075 = 0;
 var $4076 = 0.0, $4077 = 0.0, $4078 = 0.0, $4079 = 0, $408 = 0, $4080 = 0.0, $4081 = 0.0, $4082 = 0.0, $4083 = 0, $4084 = 0.0, $4085 = 0.0, $4086 = 0.0, $4087 = 0.0, $4088 = 0.0, $4089 = 0, $409 = 0, $4090 = 0.0, $4091 = 0.0, $4092 = 0.0, $4093 = 0.0;
 var $4094 = 0.0, $4095 = 0, $4096 = 0.0, $4097 = 0.0, $4098 = 0.0, $4099 = 0, $41 = 0, $410 = 0, $4100 = 0.0, $4101 = 0.0, $4102 = 0.0, $4103 = 0, $4104 = 0.0, $4105 = 0.0, $4106 = 0.0, $4107 = 0, $4108 = 0.0, $4109 = 0.0, $411 = 0, $4110 = 0.0;
 var $4111 = 0.0, $4112 = 0, $4113 = 0.0, $4114 = 0.0, $4115 = 0.0, $4116 = 0.0, $4117 = 0.0, $4118 = 0.0, $4119 = 0.0, $412 = 0, $4120 = 0, $4121 = 0.0, $4122 = 0.0, $4123 = 0, $4124 = 0, $4125 = 0.0, $4126 = 0.0, $4127 = 0, $4128 = 0, $4129 = 0.0;
 var $413 = 0, $4130 = 0.0, $4131 = 0, $4132 = 0, $4133 = 0.0, $4134 = 0, $4135 = 0.0, $4136 = 0.0, $4137 = 0, $4138 = 0.0, $4139 = 0, $414 = 0, $4140 = 0.0, $4141 = 0.0, $4142 = 0, $4143 = 0.0, $4144 = 0, $4145 = 0.0, $4146 = 0.0, $4147 = 0;
 var $4148 = 0.0, $4149 = 0, $415 = 0, $4150 = 0.0, $4151 = 0.0, $4152 = 0, $4153 = 0.0, $4154 = 0.0, $4155 = 0, $4156 = 0.0, $4157 = 0, $4158 = 0.0, $4159 = 0.0, $416 = 0, $4160 = 0, $4161 = 0.0, $4162 = 0.0, $4163 = 0, $4164 = 0.0, $4165 = 0.0;
 var $4166 = 0, $4167 = 0.0, $4168 = 0, $4169 = 0.0, $417 = 0, $4170 = 0.0, $4171 = 0.0, $4172 = 0.0, $4173 = 0.0, $4174 = 0.0, $4175 = 0.0, $4176 = 0.0, $4177 = 0.0, $4178 = 0.0, $4179 = 0.0, $418 = 0, $4180 = 0.0, $4181 = 0.0, $4182 = 0.0, $4183 = 0.0;
 var $4184 = 0.0, $4185 = 0.0, $4186 = 0.0, $4187 = 0.0, $4188 = 0.0, $4189 = 0.0, $419 = 0, $4190 = 0, $4191 = 0.0, $4192 = 0.0, $4193 = 0.0, $4194 = 0.0, $4195 = 0.0, $4196 = 0.0, $4197 = 0.0, $4198 = 0.0, $4199 = 0.0, $42 = 0, $420 = 0, $4200 = 0.0;
 var $4201 = 0.0, $4202 = 0.0, $4203 = 0.0, $4204 = 0.0, $4205 = 0.0, $4206 = 0.0, $4207 = 0.0, $4208 = 0.0, $4209 = 0, $421 = 0, $4210 = 0.0, $4211 = 0.0, $4212 = 0.0, $4213 = 0.0, $4214 = 0.0, $4215 = 0.0, $4216 = 0.0, $4217 = 0.0, $4218 = 0.0, $4219 = 0.0;
 var $422 = 0, $4220 = 0.0, $4221 = 0.0, $4222 = 0.0, $4223 = 0.0, $4224 = 0.0, $4225 = 0.0, $4226 = 0.0, $4227 = 0.0, $4228 = 0.0, $4229 = 0, $423 = 0, $4230 = 0.0, $4231 = 0.0, $4232 = 0.0, $4233 = 0.0, $4234 = 0, $4235 = 0.0, $4236 = 0.0, $4237 = 0.0;
 var $4238 = 0.0, $4239 = 0.0, $424 = 0, $4240 = 0.0, $4241 = 0, $4242 = 0.0, $4243 = 0.0, $4244 = 0.0, $4245 = 0.0, $4246 = 0.0, $4247 = 0.0, $4248 = 0.0, $4249 = 0.0, $425 = 0, $4250 = 0.0, $4251 = 0.0, $4252 = 0.0, $4253 = 0.0, $4254 = 0.0, $4255 = 0.0;
 var $4256 = 0.0, $4257 = 0.0, $4258 = 0.0, $4259 = 0, $426 = 0, $4260 = 0.0, $4261 = 0.0, $4262 = 0, $4263 = 0, $4264 = 0.0, $4265 = 0.0, $4266 = 0, $4267 = 0, $4268 = 0.0, $4269 = 0.0, $427 = 0, $4270 = 0, $4271 = 0, $4272 = 0, $4273 = 0.0;
 var $4274 = 0, $4275 = 0.0, $4276 = 0.0, $4277 = 0, $4278 = 0.0, $4279 = 0, $428 = 0, $4280 = 0.0, $4281 = 0.0, $4282 = 0, $4283 = 0.0, $4284 = 0, $4285 = 0.0, $4286 = 0.0, $4287 = 0, $4288 = 0.0, $4289 = 0.0, $429 = 0.0, $4290 = 0, $4291 = 0.0;
 var $4292 = 0.0, $4293 = 0, $4294 = 0.0, $4295 = 0, $4296 = 0.0, $4297 = 0.0, $4298 = 0, $4299 = 0.0, $43 = 0, $430 = 0, $4300 = 0.0, $4301 = 0.0, $4302 = 0.0, $4303 = 0.0, $4304 = 0.0, $4305 = 0.0, $4306 = 0.0, $4307 = 0, $4308 = 0.0, $4309 = 0;
 var $431 = 0, $4310 = 0.0, $4311 = 0.0, $4312 = 0.0, $4313 = 0.0, $4314 = 0.0, $4315 = 0.0, $4316 = 0, $4317 = 0.0, $4318 = 0, $4319 = 0.0, $432 = 0.0, $4320 = 0.0, $4321 = 0.0, $4322 = 0.0, $4323 = 0.0, $4324 = 0.0, $4325 = 0.0, $4326 = 0.0, $4327 = 0.0;
 var $4328 = 0.0, $4329 = 0.0, $433 = 0.0, $4330 = 0.0, $4331 = 0, $4332 = 0, $4333 = 0, $4334 = 0, $4335 = 0.0, $4336 = 0.0, $4337 = 0.0, $4338 = 0.0, $4339 = 0.0, $434 = 0.0, $4340 = 0.0, $4341 = 0.0, $4342 = 0.0, $4343 = 0.0, $4344 = 0.0, $4345 = 0;
 var $4346 = 0.0, $4347 = 0.0, $4348 = 0.0, $4349 = 0.0, $435 = 0, $4350 = 0.0, $4351 = 0.0, $4352 = 0.0, $4353 = 0.0, $4354 = 0.0, $4355 = 0.0, $4356 = 0.0, $4357 = 0.0, $4358 = 0.0, $4359 = 0.0, $436 = 0, $4360 = 0.0, $4361 = 0.0, $4362 = 0.0, $4363 = 0.0;
 var $4364 = 0, $4365 = 0.0, $4366 = 0.0, $4367 = 0.0, $4368 = 0.0, $4369 = 0, $437 = 0, $4370 = 0.0, $4371 = 0.0, $4372 = 0.0, $4373 = 0.0, $4374 = 0.0, $4375 = 0.0, $4376 = 0.0, $4377 = 0.0, $4378 = 0.0, $4379 = 0.0, $438 = 0.0, $4380 = 0.0, $4381 = 0.0;
 var $4382 = 0, $4383 = 0, $4384 = 0, $4385 = 0.0, $4386 = 0.0, $4387 = 0.0, $4388 = 0.0, $4389 = 0.0, $439 = 0, $4390 = 0.0, $4391 = 0.0, $4392 = 0.0, $4393 = 0.0, $4394 = 0.0, $4395 = 0, $4396 = 0.0, $4397 = 0.0, $4398 = 0, $4399 = 0.0, $44 = 0;
 var $440 = 0, $4400 = 0.0, $4401 = 0, $4402 = 0, $4403 = 0, $4404 = 0, $4405 = 0, $4406 = 0, $4407 = 0, $4408 = 0, $4409 = 0, $441 = 0.0, $4410 = 0, $4411 = 0, $4412 = 0, $4413 = 0, $4414 = 0, $4415 = 0, $4416 = 0, $4417 = 0;
 var $4418 = 0, $4419 = 0, $442 = 0.0, $4420 = 0, $4421 = 0, $4422 = 0.0, $4423 = 0, $4424 = 0, $4425 = 0.0, $4426 = 0.0, $4427 = 0.0, $4428 = 0, $4429 = 0, $443 = 0.0, $4430 = 0, $4431 = 0.0, $4432 = 0, $4433 = 0, $4434 = 0.0, $4435 = 0.0;
 var $4436 = 0.0, $4437 = 0, $4438 = 0, $4439 = 0, $444 = 0, $4440 = 0, $4441 = 0, $4442 = 0, $4443 = 0, $4444 = 0, $4445 = 0, $4446 = 0, $4447 = 0, $4448 = 0.0, $4449 = 0, $445 = 0, $4450 = 0, $4451 = 0, $4452 = 0.0, $4453 = 0;
 var $4454 = 0, $4455 = 0, $4456 = 0.0, $4457 = 0, $4458 = 0, $4459 = 0.0, $446 = 0, $4460 = 0.0, $4461 = 0, $4462 = 0.0, $4463 = 0.0, $4464 = 0, $4465 = 0.0, $4466 = 0.0, $4467 = 0, $4468 = 0.0, $4469 = 0, $447 = 0, $4470 = 0.0, $4471 = 0.0;
 var $4472 = 0, $4473 = 0.0, $4474 = 0.0, $4475 = 0, $4476 = 0.0, $4477 = 0, $4478 = 0.0, $4479 = 0.0, $448 = 0, $4480 = 0, $4481 = 0.0, $4482 = 0.0, $4483 = 0, $4484 = 0.0, $4485 = 0.0, $4486 = 0.0, $4487 = 0.0, $4488 = 0.0, $4489 = 0.0, $449 = 0;
 var $4490 = 0, $4491 = 0.0, $4492 = 0.0, $4493 = 0.0, $4494 = 0.0, $4495 = 0.0, $4496 = 0, $4497 = 0.0, $4498 = 0.0, $4499 = 0.0, $45 = 0, $450 = 0, $4500 = 0.0, $4501 = 0.0, $4502 = 0.0, $4503 = 0.0, $4504 = 0.0, $4505 = 0.0, $4506 = 0.0, $4507 = 0.0;
 var $4508 = 0.0, $4509 = 0.0, $451 = 0, $4510 = 0.0, $4511 = 0.0, $4512 = 0.0, $4513 = 0.0, $4514 = 0.0, $4515 = 0.0, $4516 = 0.0, $4517 = 0.0, $4518 = 0, $4519 = 0.0, $452 = 0, $4520 = 0.0, $4521 = 0.0, $4522 = 0.0, $4523 = 0.0, $4524 = 0.0, $4525 = 0.0;
 var $4526 = 0.0, $4527 = 0.0, $4528 = 0.0, $4529 = 0, $453 = 0, $4530 = 0.0, $4531 = 0.0, $4532 = 0.0, $4533 = 0.0, $4534 = 0.0, $4535 = 0.0, $4536 = 0.0, $4537 = 0.0, $4538 = 0.0, $4539 = 0.0, $454 = 0, $4540 = 0.0, $4541 = 0.0, $4542 = 0.0, $4543 = 0.0;
 var $4544 = 0.0, $4545 = 0.0, $4546 = 0.0, $4547 = 0, $4548 = 0.0, $4549 = 0.0, $455 = 0.0, $4550 = 0.0, $4551 = 0.0, $4552 = 0.0, $4553 = 0.0, $4554 = 0.0, $4555 = 0.0, $4556 = 0.0, $4557 = 0.0, $4558 = 0.0, $4559 = 0.0, $456 = 0, $4560 = 0.0, $4561 = 0.0;
 var $4562 = 0.0, $4563 = 0.0, $4564 = 0.0, $4565 = 0, $4566 = 0.0, $4567 = 0.0, $4568 = 0.0, $4569 = 0.0, $457 = 0, $4570 = 0.0, $4571 = 0.0, $4572 = 0, $4573 = 0.0, $4574 = 0.0, $4575 = 0.0, $4576 = 0.0, $4577 = 0.0, $4578 = 0.0, $4579 = 0.0, $458 = 0;
 var $4580 = 0.0, $4581 = 0.0, $4582 = 0.0, $4583 = 0.0, $4584 = 0.0, $4585 = 0.0, $4586 = 0.0, $4587 = 0.0, $4588 = 0.0, $4589 = 0.0, $459 = 0.0, $4590 = 0.0, $4591 = 0.0, $4592 = 0.0, $4593 = 0.0, $4594 = 0.0, $4595 = 0.0, $4596 = 0.0, $4597 = 0.0, $4598 = 0;
 var $4599 = 0.0, $46 = 0, $460 = 0, $4600 = 0.0, $4601 = 0, $4602 = 0, $4603 = 0.0, $4604 = 0.0, $4605 = 0, $4606 = 0, $4607 = 0.0, $4608 = 0.0, $4609 = 0, $461 = 0, $4610 = 0, $4611 = 0.0, $4612 = 0.0, $4613 = 0, $4614 = 0, $4615 = 0.0;
 var $4616 = 0.0, $4617 = 0, $4618 = 0, $4619 = 0, $462 = 0, $4620 = 0, $4621 = 0, $4622 = 0, $4623 = 0.0, $4624 = 0, $4625 = 0.0, $4626 = 0.0, $4627 = 0, $4628 = 0.0, $4629 = 0, $463 = 0.0, $4630 = 0.0, $4631 = 0.0, $4632 = 0, $4633 = 0.0;
 var $4634 = 0, $4635 = 0.0, $4636 = 0.0, $4637 = 0, $4638 = 0.0, $4639 = 0, $464 = 0, $4640 = 0.0, $4641 = 0.0, $4642 = 0, $4643 = 0.0, $4644 = 0.0, $4645 = 0, $4646 = 0.0, $4647 = 0.0, $4648 = 0, $4649 = 0.0, $465 = 0, $4650 = 0.0, $4651 = 0.0;
 var $4652 = 0.0, $4653 = 0, $4654 = 0.0, $4655 = 0.0, $4656 = 0.0, $4657 = 0, $4658 = 0.0, $4659 = 0.0, $466 = 0.0, $4660 = 0.0, $4661 = 0.0, $4662 = 0.0, $4663 = 0.0, $4664 = 0.0, $4665 = 0.0, $4666 = 0.0, $4667 = 0.0, $4668 = 0.0, $4669 = 0.0, $467 = 0.0;
 var $4670 = 0.0, $4671 = 0.0, $4672 = 0.0, $4673 = 0.0, $4674 = 0, $4675 = 0.0, $4676 = 0.0, $4677 = 0.0, $4678 = 0, $4679 = 0.0, $468 = 0, $4680 = 0.0, $4681 = 0.0, $4682 = 0.0, $4683 = 0.0, $4684 = 0.0, $4685 = 0, $4686 = 0.0, $4687 = 0.0, $4688 = 0.0;
 var $4689 = 0.0, $469 = 0.0, $4690 = 0.0, $4691 = 0.0, $4692 = 0, $4693 = 0.0, $4694 = 0.0, $4695 = 0.0, $4696 = 0.0, $4697 = 0.0, $4698 = 0, $4699 = 0, $47 = 0, $470 = 0.0, $4700 = 0, $4701 = 0, $4702 = 0.0, $4703 = 0.0, $4704 = 0, $4705 = 0.0;
 var $4706 = 0.0, $4707 = 0, $4708 = 0.0, $4709 = 0.0, $471 = 0.0, $4710 = 0, $4711 = 0.0, $4712 = 0.0, $4713 = 0.0, $4714 = 0.0, $4715 = 0.0, $4716 = 0.0, $4717 = 0.0, $4718 = 0.0, $4719 = 0.0, $472 = 0, $4720 = 0.0, $4721 = 0.0, $4722 = 0.0, $4723 = 0.0;
 var $4724 = 0.0, $4725 = 0.0, $4726 = 0.0, $4727 = 0.0, $4728 = 0.0, $4729 = 0.0, $473 = 0.0, $4730 = 0.0, $4731 = 0.0, $4732 = 0.0, $4733 = 0.0, $4734 = 0.0, $4735 = 0.0, $4736 = 0.0, $4737 = 0.0, $4738 = 0.0, $4739 = 0, $474 = 0, $4740 = 0, $4741 = 0;
 var $4742 = 0.0, $4743 = 0.0, $4744 = 0.0, $4745 = 0.0, $4746 = 0.0, $4747 = 0.0, $4748 = 0.0, $4749 = 0.0, $475 = 0.0, $4750 = 0.0, $4751 = 0.0, $4752 = 0, $4753 = 0.0, $4754 = 0.0, $4755 = 0, $4756 = 0.0, $4757 = 0.0, $4758 = 0, $4759 = 0, $476 = 0.0;
 var $4760 = 0, $4761 = 0, $4762 = 0, $4763 = 0, $4764 = 0, $4765 = 0, $4766 = 0, $4767 = 0, $4768 = 0, $4769 = 0, $477 = 0, $4770 = 0, $4771 = 0, $4772 = 0, $4773 = 0, $4774 = 0, $4775 = 0, $4776 = 0, $4777 = 0, $4778 = 0;
 var $4779 = 0.0, $478 = 0.0, $4780 = 0, $4781 = 0, $4782 = 0.0, $4783 = 0.0, $4784 = 0.0, $4785 = 0, $4786 = 0, $4787 = 0, $4788 = 0.0, $4789 = 0, $479 = 0, $4790 = 0, $4791 = 0.0, $4792 = 0.0, $4793 = 0.0, $4794 = 0, $4795 = 0, $4796 = 0;
 var $4797 = 0, $4798 = 0, $4799 = 0, $48 = 0.0, $480 = 0.0, $4800 = 0, $4801 = 0, $4802 = 0, $4803 = 0, $4804 = 0, $4805 = 0.0, $4806 = 0, $4807 = 0, $4808 = 0, $4809 = 0.0, $481 = 0.0, $4810 = 0, $4811 = 0, $4812 = 0, $4813 = 0.0;
 var $4814 = 0, $4815 = 0, $4816 = 0.0, $4817 = 0.0, $4818 = 0, $4819 = 0.0, $482 = 0.0, $4820 = 0.0, $4821 = 0, $4822 = 0.0, $4823 = 0.0, $4824 = 0, $4825 = 0.0, $4826 = 0, $4827 = 0.0, $4828 = 0.0, $4829 = 0, $483 = 0, $4830 = 0.0, $4831 = 0.0;
 var $4832 = 0, $4833 = 0.0, $4834 = 0, $4835 = 0.0, $4836 = 0.0, $4837 = 0, $4838 = 0.0, $4839 = 0.0, $484 = 0.0, $4840 = 0, $4841 = 0.0, $4842 = 0.0, $4843 = 0.0, $4844 = 0.0, $4845 = 0.0, $4846 = 0.0, $4847 = 0, $4848 = 0.0, $4849 = 0.0, $485 = 0.0;
 var $4850 = 0.0, $4851 = 0.0, $4852 = 0.0, $4853 = 0.0, $4854 = 0.0, $4855 = 0.0, $4856 = 0.0, $4857 = 0.0, $4858 = 0.0, $4859 = 0.0, $486 = 0, $4860 = 0.0, $4861 = 0.0, $4862 = 0.0, $4863 = 0, $4864 = 0.0, $4865 = 0.0, $4866 = 0.0, $4867 = 0.0, $4868 = 0.0;
 var $4869 = 0.0, $487 = 0, $4870 = 0.0, $4871 = 0.0, $4872 = 0.0, $4873 = 0.0, $4874 = 0.0, $4875 = 0.0, $4876 = 0.0, $4877 = 0.0, $4878 = 0.0, $4879 = 0.0, $488 = 0.0, $4880 = 0.0, $4881 = 0.0, $4882 = 0, $4883 = 0.0, $4884 = 0.0, $4885 = 0.0, $4886 = 0;
 var $4887 = 0.0, $4888 = 0.0, $4889 = 0.0, $489 = 0.0, $4890 = 0.0, $4891 = 0.0, $4892 = 0.0, $4893 = 0.0, $4894 = 0.0, $4895 = 0.0, $4896 = 0.0, $4897 = 0.0, $4898 = 0.0, $4899 = 0.0, $49 = 0, $490 = 0, $4900 = 0.0, $4901 = 0.0, $4902 = 0.0, $4903 = 0.0;
 var $4904 = 0, $4905 = 0.0, $4906 = 0.0, $4907 = 0.0, $4908 = 0.0, $4909 = 0.0, $491 = 0, $4910 = 0.0, $4911 = 0, $4912 = 0.0, $4913 = 0.0, $4914 = 0.0, $4915 = 0.0, $4916 = 0.0, $4917 = 0.0, $4918 = 0.0, $4919 = 0.0, $492 = 0.0, $4920 = 0.0, $4921 = 0.0;
 var $4922 = 0.0, $4923 = 0.0, $4924 = 0.0, $4925 = 0.0, $4926 = 0.0, $4927 = 0.0, $4928 = 0.0, $4929 = 0, $493 = 0, $4930 = 0.0, $4931 = 0.0, $4932 = 0.0, $4933 = 0.0, $4934 = 0.0, $4935 = 0.0, $4936 = 0.0, $4937 = 0.0, $4938 = 0.0, $4939 = 0.0, $494 = 0.0;
 var $4940 = 0.0, $4941 = 0.0, $4942 = 0.0, $4943 = 0.0, $4944 = 0.0, $4945 = 0.0, $4946 = 0.0, $4947 = 0.0, $4948 = 0.0, $4949 = 0.0, $495 = 0.0, $4950 = 0.0, $4951 = 0.0, $4952 = 0.0, $4953 = 0.0, $4954 = 0.0, $4955 = 0, $4956 = 0.0, $4957 = 0.0, $4958 = 0;
 var $4959 = 0, $496 = 0.0, $4960 = 0.0, $4961 = 0.0, $4962 = 0, $4963 = 0, $4964 = 0.0, $4965 = 0.0, $4966 = 0, $4967 = 0, $4968 = 0.0, $4969 = 0.0, $497 = 0.0, $4970 = 0, $4971 = 0, $4972 = 0.0, $4973 = 0.0, $4974 = 0, $4975 = 0, $4976 = 0;
 var $4977 = 0, $4978 = 0, $4979 = 0, $498 = 0, $4980 = 0.0, $4981 = 0, $4982 = 0.0, $4983 = 0.0, $4984 = 0, $4985 = 0.0, $4986 = 0, $4987 = 0.0, $4988 = 0.0, $4989 = 0, $499 = 0.0, $4990 = 0.0, $4991 = 0.0, $4992 = 0, $4993 = 0.0, $4994 = 0;
 var $4995 = 0.0, $4996 = 0.0, $4997 = 0, $4998 = 0.0, $4999 = 0.0, $5 = 0, $50 = 0, $500 = 0.0, $5000 = 0, $5001 = 0.0, $5002 = 0, $5003 = 0.0, $5004 = 0.0, $5005 = 0, $5006 = 0.0, $5007 = 0.0, $5008 = 0.0, $5009 = 0.0, $501 = 0.0, $5010 = 0.0;
 var $5011 = 0, $5012 = 0.0, $5013 = 0, $5014 = 0.0, $5015 = 0.0, $5016 = 0.0, $5017 = 0.0, $5018 = 0.0, $5019 = 0.0, $502 = 0, $5020 = 0, $5021 = 0.0, $5022 = 0.0, $5023 = 0.0, $5024 = 0.0, $5025 = 0.0, $5026 = 0.0, $5027 = 0, $5028 = 0.0, $5029 = 0.0;
 var $503 = 0.0, $5030 = 0.0, $5031 = 0.0, $5032 = 0.0, $5033 = 0.0, $5034 = 0.0, $5035 = 0.0, $5036 = 0.0, $5037 = 0.0, $5038 = 0.0, $5039 = 0.0, $504 = 0.0, $5040 = 0.0, $5041 = 0.0, $5042 = 0.0, $5043 = 0.0, $5044 = 0, $5045 = 0, $5046 = 0, $5047 = 0.0;
 var $5048 = 0.0, $5049 = 0.0, $505 = 0.0, $5050 = 0.0, $5051 = 0.0, $5052 = 0.0, $5053 = 0.0, $5054 = 0.0, $5055 = 0.0, $5056 = 0.0, $5057 = 0.0, $5058 = 0.0, $5059 = 0.0, $506 = 0, $5060 = 0.0, $5061 = 0.0, $5062 = 0.0, $5063 = 0.0, $5064 = 0.0, $5065 = 0.0;
 var $5066 = 0, $5067 = 0.0, $5068 = 0.0, $5069 = 0, $507 = 0.0, $5070 = 0.0, $5071 = 0.0, $5072 = 0.0, $5073 = 0, $5074 = 0.0, $5075 = 0.0, $5076 = 0, $5077 = 0.0, $5078 = 0.0, $5079 = 0.0, $508 = 0, $5080 = 0, $5081 = 0.0, $5082 = 0.0, $5083 = 0.0;
 var $5084 = 0.0, $5085 = 0, $5086 = 0, $5087 = 0, $5088 = 0.0, $5089 = 0.0, $509 = 0.0, $5090 = 0.0, $5091 = 0.0, $5092 = 0.0, $5093 = 0.0, $5094 = 0.0, $5095 = 0.0, $5096 = 0.0, $5097 = 0.0, $5098 = 0, $5099 = 0.0, $51 = 0, $510 = 0.0, $5100 = 0.0;
 var $5101 = 0, $5102 = 0.0, $5103 = 0.0, $5104 = 0, $5105 = 0, $5106 = 0, $5107 = 0, $5108 = 0, $5109 = 0, $511 = 0.0, $5110 = 0, $5111 = 0, $5112 = 0, $5113 = 0, $5114 = 0, $5115 = 0, $5116 = 0, $5117 = 0, $5118 = 0, $5119 = 0;
 var $512 = 0.0, $5120 = 0, $5121 = 0, $5122 = 0, $5123 = 0, $5124 = 0, $5125 = 0.0, $5126 = 0, $5127 = 0, $5128 = 0.0, $5129 = 0.0, $513 = 0.0, $5130 = 0.0, $5131 = 0, $5132 = 0, $5133 = 0, $5134 = 0.0, $5135 = 0, $5136 = 0, $5137 = 0.0;
 var $5138 = 0.0, $5139 = 0.0, $514 = 0.0, $5140 = 0, $5141 = 0, $5142 = 0, $5143 = 0, $5144 = 0, $5145 = 0, $5146 = 0, $5147 = 0, $5148 = 0, $5149 = 0, $515 = 0, $5150 = 0, $5151 = 0.0, $5152 = 0, $5153 = 0, $5154 = 0, $5155 = 0.0;
 var $5156 = 0, $5157 = 0, $5158 = 0, $5159 = 0.0, $516 = 0, $5160 = 0, $5161 = 0, $5162 = 0.0, $5163 = 0.0, $5164 = 0, $5165 = 0.0, $5166 = 0.0, $5167 = 0, $5168 = 0.0, $5169 = 0.0, $517 = 0, $5170 = 0, $5171 = 0.0, $5172 = 0, $5173 = 0.0;
 var $5174 = 0.0, $5175 = 0, $5176 = 0.0, $5177 = 0.0, $5178 = 0, $5179 = 0.0, $518 = 0.0, $5180 = 0, $5181 = 0.0, $5182 = 0.0, $5183 = 0, $5184 = 0.0, $5185 = 0.0, $5186 = 0, $5187 = 0.0, $5188 = 0.0, $5189 = 0.0, $519 = 0.0, $5190 = 0.0, $5191 = 0.0;
 var $5192 = 0.0, $5193 = 0, $5194 = 0.0, $5195 = 0.0, $5196 = 0.0, $5197 = 0.0, $5198 = 0.0, $5199 = 0.0, $52 = 0.0, $520 = 0, $5200 = 0.0, $5201 = 0.0, $5202 = 0.0, $5203 = 0.0, $5204 = 0.0, $5205 = 0.0, $5206 = 0.0, $5207 = 0.0, $5208 = 0.0, $5209 = 0;
 var $521 = 0.0, $5210 = 0.0, $5211 = 0.0, $5212 = 0.0, $5213 = 0.0, $5214 = 0.0, $5215 = 0.0, $5216 = 0.0, $5217 = 0.0, $5218 = 0.0, $5219 = 0.0, $522 = 0.0, $5220 = 0.0, $5221 = 0, $5222 = 0.0, $5223 = 0.0, $5224 = 0.0, $5225 = 0.0, $5226 = 0.0, $5227 = 0.0;
 var $5228 = 0.0, $5229 = 0.0, $523 = 0.0, $5230 = 0.0, $5231 = 0.0, $5232 = 0, $5233 = 0.0, $5234 = 0.0, $5235 = 0.0, $5236 = 0.0, $5237 = 0.0, $5238 = 0.0, $5239 = 0.0, $524 = 0, $5240 = 0.0, $5241 = 0.0, $5242 = 0.0, $5243 = 0.0, $5244 = 0.0, $5245 = 0.0;
 var $5246 = 0.0, $5247 = 0.0, $5248 = 0.0, $5249 = 0.0, $525 = 0.0, $5250 = 0, $5251 = 0.0, $5252 = 0.0, $5253 = 0.0, $5254 = 0.0, $5255 = 0.0, $5256 = 0.0, $5257 = 0.0, $5258 = 0.0, $5259 = 0.0, $526 = 0.0, $5260 = 0.0, $5261 = 0.0, $5262 = 0.0, $5263 = 0.0;
 var $5264 = 0.0, $5265 = 0.0, $5266 = 0.0, $5267 = 0, $5268 = 0.0, $5269 = 0.0, $527 = 0.0, $5270 = 0.0, $5271 = 0.0, $5272 = 0.0, $5273 = 0.0, $5274 = 0.0, $5275 = 0, $5276 = 0.0, $5277 = 0.0, $5278 = 0.0, $5279 = 0.0, $528 = 0, $5280 = 0.0, $5281 = 0.0;
 var $5282 = 0.0, $5283 = 0.0, $5284 = 0.0, $5285 = 0.0, $5286 = 0.0, $5287 = 0.0, $5288 = 0.0, $5289 = 0.0, $529 = 0.0, $5290 = 0.0, $5291 = 0.0, $5292 = 0.0, $5293 = 0.0, $5294 = 0.0, $5295 = 0.0, $5296 = 0.0, $5297 = 0.0, $5298 = 0.0, $5299 = 0.0, $53 = 0;
 var $530 = 0.0, $5300 = 0.0, $5301 = 0, $5302 = 0.0, $5303 = 0.0, $5304 = 0, $5305 = 0, $5306 = 0.0, $5307 = 0.0, $5308 = 0, $5309 = 0, $531 = 0.0, $5310 = 0.0, $5311 = 0.0, $5312 = 0, $5313 = 0, $5314 = 0.0, $5315 = 0.0, $5316 = 0, $5317 = 0;
 var $5318 = 0.0, $5319 = 0.0, $532 = 0.0, $5320 = 0, $5321 = 0, $5322 = 0, $5323 = 0, $5324 = 0, $5325 = 0, $5326 = 0, $5327 = 0, $5328 = 0, $5329 = 0, $533 = 0.0, $5330 = 0, $5331 = 0, $5332 = 0, $5333 = 0, $5334 = 0, $534 = 0;
 var $535 = 0, $536 = 0, $537 = 0.0, $538 = 0.0, $539 = 0.0, $54 = 0, $540 = 0.0, $541 = 0.0, $542 = 0.0, $543 = 0.0, $544 = 0.0, $545 = 0.0, $546 = 0, $547 = 0.0, $548 = 0.0, $549 = 0.0, $55 = 0, $550 = 0.0, $551 = 0.0, $552 = 0.0;
 var $553 = 0.0, $554 = 0.0, $555 = 0.0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0.0, $560 = 0.0, $561 = 0.0, $562 = 0.0, $563 = 0, $564 = 0, $565 = 0.0, $566 = 0.0, $567 = 0.0, $568 = 0, $569 = 0, $57 = 0, $570 = 0.0;
 var $571 = 0.0, $572 = 0.0, $573 = 0.0, $574 = 0.0, $575 = 0.0, $576 = 0.0, $577 = 0.0, $578 = 0.0, $579 = 0.0, $58 = 0, $580 = 0.0, $581 = 0.0, $582 = 0.0, $583 = 0.0, $584 = 0.0, $585 = 0.0, $586 = 0.0, $587 = 0.0, $588 = 0, $589 = 0;
 var $59 = 0, $590 = 0.0, $591 = 0.0, $592 = 0, $593 = 0, $594 = 0.0, $595 = 0.0, $596 = 0, $597 = 0.0, $598 = 0, $599 = 0.0, $6 = 0.0, $60 = 0.0, $600 = 0.0, $601 = 0, $602 = 0.0, $603 = 0.0, $604 = 0, $605 = 0.0, $606 = 0;
 var $607 = 0, $608 = 0.0, $609 = 0.0, $61 = 0, $610 = 0, $611 = 0, $612 = 0.0, $613 = 0.0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0;
 var $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0.0, $637 = 0, $638 = 0, $639 = 0.0, $64 = 0.0, $640 = 0.0, $641 = 0.0, $642 = 0;
 var $643 = 0, $644 = 0, $645 = 0.0, $646 = 0, $647 = 0, $648 = 0.0, $649 = 0.0, $65 = 0, $650 = 0.0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0;
 var $661 = 0, $662 = 0.0, $663 = 0, $664 = 0, $665 = 0, $666 = 0.0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0.0, $671 = 0, $672 = 0, $673 = 0.0, $674 = 0, $675 = 0.0, $676 = 0.0, $677 = 0, $678 = 0.0, $679 = 0.0;
 var $68 = 0.0, $680 = 0, $681 = 0.0, $682 = 0, $683 = 0.0, $684 = 0.0, $685 = 0, $686 = 0.0, $687 = 0.0, $688 = 0, $689 = 0.0, $69 = 0, $690 = 0.0, $691 = 0, $692 = 0.0, $693 = 0.0, $694 = 0, $695 = 0.0, $696 = 0.0, $697 = 0.0;
 var $698 = 0.0, $699 = 0.0, $7 = 0, $70 = 0, $700 = 0.0, $701 = 0.0, $702 = 0.0, $703 = 0.0, $704 = 0.0, $705 = 0.0, $706 = 0.0, $707 = 0.0, $708 = 0, $709 = 0, $71 = 0, $710 = 0.0, $711 = 0.0, $712 = 0.0, $713 = 0, $714 = 0.0;
 var $715 = 0.0, $716 = 0.0, $717 = 0.0, $718 = 0, $719 = 0.0, $72 = 0.0, $720 = 0.0, $721 = 0.0, $722 = 0, $723 = 0.0, $724 = 0.0, $725 = 0.0, $726 = 0.0, $727 = 0.0, $728 = 0, $729 = 0.0, $73 = 0, $730 = 0.0, $731 = 0.0, $732 = 0.0;
 var $733 = 0, $734 = 0.0, $735 = 0.0, $736 = 0.0, $737 = 0, $738 = 0.0, $739 = 0.0, $74 = 0, $740 = 0.0, $741 = 0.0, $742 = 0, $743 = 0.0, $744 = 0.0, $745 = 0.0, $746 = 0.0, $747 = 0.0, $748 = 0.0, $749 = 0, $75 = 0, $750 = 0.0;
 var $751 = 0.0, $752 = 0, $753 = 0, $754 = 0.0, $755 = 0.0, $756 = 0, $757 = 0, $758 = 0.0, $759 = 0.0, $76 = 0.0, $760 = 0, $761 = 0, $762 = 0.0, $763 = 0, $764 = 0.0, $765 = 0.0, $766 = 0, $767 = 0.0, $768 = 0.0, $769 = 0;
 var $77 = 0, $770 = 0.0, $771 = 0, $772 = 0.0, $773 = 0.0, $774 = 0, $775 = 0.0, $776 = 0.0, $777 = 0, $778 = 0.0, $779 = 0.0, $78 = 0, $780 = 0, $781 = 0.0, $782 = 0.0, $783 = 0.0, $784 = 0, $785 = 0.0, $786 = 0.0, $787 = 0;
 var $788 = 0.0, $789 = 0.0, $79 = 0, $790 = 0.0, $791 = 0.0, $792 = 0.0, $793 = 0.0, $794 = 0, $795 = 0.0, $796 = 0.0, $797 = 0.0, $798 = 0.0, $799 = 0, $8 = 0, $80 = 0.0, $800 = 0.0, $801 = 0.0, $802 = 0.0, $803 = 0.0, $804 = 0;
 var $805 = 0.0, $806 = 0.0, $807 = 0.0, $808 = 0.0, $809 = 0, $81 = 0, $810 = 0.0, $811 = 0.0, $812 = 0.0, $813 = 0.0, $814 = 0.0, $815 = 0, $816 = 0.0, $817 = 0.0, $818 = 0.0, $819 = 0.0, $82 = 0, $820 = 0, $821 = 0.0, $822 = 0.0;
 var $823 = 0.0, $824 = 0.0, $825 = 0.0, $826 = 0, $827 = 0.0, $828 = 0.0, $829 = 0.0, $83 = 0.0, $830 = 0.0, $831 = 0, $832 = 0.0, $833 = 0.0, $834 = 0.0, $835 = 0.0, $836 = 0.0, $837 = 0.0, $838 = 0, $839 = 0.0, $84 = 0, $840 = 0.0;
 var $841 = 0.0, $842 = 0.0, $843 = 0.0, $844 = 0.0, $845 = 0, $846 = 0.0, $847 = 0.0, $848 = 0, $849 = 0, $85 = 0, $850 = 0.0, $851 = 0.0, $852 = 0, $853 = 0, $854 = 0.0, $855 = 0.0, $856 = 0, $857 = 0, $858 = 0.0, $859 = 0;
 var $86 = 0, $860 = 0.0, $861 = 0.0, $862 = 0, $863 = 0.0, $864 = 0.0, $865 = 0, $866 = 0.0, $867 = 0, $868 = 0.0, $869 = 0.0, $87 = 0.0, $870 = 0, $871 = 0.0, $872 = 0.0, $873 = 0, $874 = 0.0, $875 = 0.0, $876 = 0, $877 = 0.0;
 var $878 = 0.0, $879 = 0, $88 = 0, $880 = 0.0, $881 = 0.0, $882 = 0, $883 = 0.0, $884 = 0.0, $885 = 0.0, $886 = 0.0, $887 = 0.0, $888 = 0.0, $889 = 0.0, $89 = 0, $890 = 0.0, $891 = 0.0, $892 = 0.0, $893 = 0.0, $894 = 0.0, $895 = 0.0;
 var $896 = 0, $897 = 0, $898 = 0.0, $899 = 0.0, $9 = 0, $90 = 0, $900 = 0.0, $901 = 0.0, $902 = 0, $903 = 0.0, $904 = 0.0, $905 = 0.0, $906 = 0.0, $907 = 0, $908 = 0.0, $909 = 0.0, $91 = 0.0, $910 = 0.0, $911 = 0, $912 = 0.0;
 var $913 = 0.0, $914 = 0.0, $915 = 0.0, $916 = 0, $917 = 0.0, $918 = 0.0, $919 = 0.0, $92 = 0, $920 = 0.0, $921 = 0.0, $922 = 0, $923 = 0.0, $924 = 0.0, $925 = 0.0, $926 = 0, $927 = 0.0, $928 = 0.0, $929 = 0.0, $93 = 0, $930 = 0.0;
 var $931 = 0.0, $932 = 0, $933 = 0.0, $934 = 0.0, $935 = 0.0, $936 = 0, $937 = 0.0, $938 = 0.0, $939 = 0.0, $94 = 0.0, $940 = 0.0, $941 = 0.0, $942 = 0, $943 = 0.0, $944 = 0.0, $945 = 0.0, $946 = 0.0, $947 = 0.0, $948 = 0.0, $949 = 0;
 var $95 = 0, $950 = 0.0, $951 = 0.0, $952 = 0, $953 = 0, $954 = 0.0, $955 = 0.0, $956 = 0, $957 = 0, $958 = 0.0, $959 = 0.0, $96 = 0, $960 = 0, $961 = 0, $962 = 0.0, $963 = 0.0, $964 = 0, $965 = 0.0, $966 = 0.0, $967 = 0;
 var $968 = 0.0, $969 = 0.0, $97 = 0.0, $970 = 0.0, $971 = 0, $972 = 0.0, $973 = 0.0, $974 = 0.0, $975 = 0, $976 = 0.0, $977 = 0.0, $978 = 0.0, $979 = 0.0, $98 = 0, $980 = 0.0, $981 = 0.0, $982 = 0.0, $983 = 0.0, $984 = 0.0, $985 = 0;
 var $986 = 0.0, $987 = 0.0, $988 = 0.0, $989 = 0, $99 = 0, $990 = 0.0, $991 = 0.0, $992 = 0.0, $993 = 0, $994 = 0.0, $995 = 0.0, $996 = 0.0, $997 = 0, $998 = 0.0, $999 = 0.0, $bgotonextstatement = 0, $bgotonextstatement15 = 0, $bgotonextstatement32 = 0, $bgotonextstatement49 = 0, $bgotonextstatement6 = 0;
 var $cj0array = 0, $cj0array19 = 0, $cj0array26 = 0, $cj0array36 = 0, $cj0array43 = 0, $cj0array51 = 0, $cj0array58 = 0, $cj0array65 = 0, $cj0array72 = 0, $cj0array9 = 0, $cj1array = 0, $cj1array81 = 0, $cj1array88 = 0, $cj1array95 = 0, $cj2array = 0, $dummyiter = 0, $evalcond = 0, $evalcond100 = 0, $evalcond14 = 0, $evalcond24 = 0;
 var $evalcond31 = 0, $evalcond41 = 0, $evalcond48 = 0, $evalcond5 = 0, $evalcond56 = 0, $evalcond63 = 0, $evalcond70 = 0, $evalcond86 = 0, $evalcond93 = 0, $iij0 = 0, $iij013 = 0, $iij023 = 0, $iij030 = 0, $iij040 = 0, $iij047 = 0, $iij055 = 0, $iij062 = 0, $iij069 = 0, $iij076 = 0, $iij1 = 0;
 var $iij185 = 0, $iij192 = 0, $iij199 = 0, $iij2 = 0, $ij0 = 0, $ij012 = 0, $ij022 = 0, $ij029 = 0, $ij039 = 0, $ij046 = 0, $ij054 = 0, $ij061 = 0, $ij068 = 0, $ij075 = 0, $ij1 = 0, $ij184 = 0, $ij191 = 0, $ij198 = 0, $ij2 = 0, $j0array = 0;
 var $j0array18 = 0, $j0array25 = 0, $j0array35 = 0, $j0array42 = 0, $j0array50 = 0, $j0array57 = 0, $j0array64 = 0, $j0array71 = 0, $j0array8 = 0, $j0eval = 0, $j0eval1 = 0, $j0eval16 = 0, $j0eval17 = 0, $j0eval2 = 0, $j0eval3 = 0, $j0eval33 = 0, $j0eval34 = 0, $j0eval4 = 0, $j0eval7 = 0, $j0valid = 0;
 var $j0valid11 = 0, $j0valid21 = 0, $j0valid28 = 0, $j0valid38 = 0, $j0valid45 = 0, $j0valid53 = 0, $j0valid60 = 0, $j0valid67 = 0, $j0valid74 = 0, $j1array = 0, $j1array80 = 0, $j1array87 = 0, $j1array94 = 0, $j1eval = 0, $j1eval77 = 0, $j1eval78 = 0, $j1eval79 = 0, $j1valid = 0, $j1valid83 = 0, $j1valid90 = 0;
 var $j1valid97 = 0, $j2array = 0, $j2valid = 0, $sj0array = 0, $sj0array10 = 0, $sj0array20 = 0, $sj0array27 = 0, $sj0array37 = 0, $sj0array44 = 0, $sj0array52 = 0, $sj0array59 = 0, $sj0array66 = 0, $sj0array73 = 0, $sj1array = 0, $sj1array82 = 0, $sj1array89 = 0, $sj1array96 = 0, $sj2array = 0, $x42 = 0.0, $x43 = 0.0;
 var $x44 = 0.0, $x45 = 0.0, $x46 = 0.0, $x469 = 0.0, $x47 = 0.0, $x470 = 0.0, $x471 = 0.0, $x472 = 0.0, $x473 = 0.0, $x474 = 0.0, $x475 = 0.0, $x476 = 0.0, $x477 = 0, $x478 = 0, $x479 = 0.0, $x48 = 0.0, $x480 = 0.0, $x481 = 0.0, $x482 = 0.0, $x483 = 0.0;
 var $x484 = 0.0, $x485 = 0.0, $x486 = 0.0, $x487 = 0.0, $x488 = 0.0, $x489 = 0.0, $x49 = 0.0, $x490 = 0, $x491 = 0, $x492 = 0.0, $x493 = 0.0, $x494 = 0.0, $x495 = 0.0, $x496 = 0.0, $x497 = 0, $x498 = 0, $x499 = 0.0, $x50 = 0, $x500 = 0.0, $x501 = 0.0;
 var $x502 = 0.0, $x503 = 0.0, $x504 = 0.0, $x505 = 0.0, $x506 = 0.0, $x507 = 0.0, $x508 = 0.0, $x509 = 0.0, $x51 = 0, $x510 = 0.0, $x511 = 0.0, $x512 = 0.0, $x513 = 0, $x514 = 0, $x515 = 0.0, $x516 = 0.0, $x517 = 0.0, $x518 = 0.0, $x519 = 0.0, $x52 = 0.0;
 var $x520 = 0, $x521 = 0, $x522 = 0.0, $x523 = 0.0, $x524 = 0.0, $x525 = 0.0, $x526 = 0.0, $x527 = 0.0, $x528 = 0.0, $x529 = 0.0, $x53 = 0.0, $x530 = 0.0, $x531 = 0, $x532 = 0, $x533 = 0.0, $x534 = 0.0, $x535 = 0.0, $x536 = 0.0, $x537 = 0.0, $x538 = 0.0;
 var $x539 = 0.0, $x54 = 0.0, $x540 = 0.0, $x541 = 0.0, $x542 = 0.0, $x543 = 0.0, $x544 = 0.0, $x545 = 0.0, $x546 = 0.0, $x547 = 0.0, $x548 = 0.0, $x549 = 0, $x55 = 0.0, $x550 = 0, $x551 = 0.0, $x552 = 0.0, $x553 = 0.0, $x554 = 0.0, $x555 = 0.0, $x556 = 0.0;
 var $x557 = 0.0, $x558 = 0.0, $x559 = 0.0, $x56 = 0.0, $x560 = 0.0, $x561 = 0.0, $x562 = 0.0, $x563 = 0.0, $x564 = 0.0, $x565 = 0.0, $x566 = 0, $x567 = 0, $x568 = 0.0, $x569 = 0.0, $x57 = 0.0, $x570 = 0.0, $x571 = 0.0, $x572 = 0.0, $x573 = 0.0, $x574 = 0.0;
 var $x575 = 0.0, $x576 = 0.0, $x577 = 0.0, $x578 = 0.0, $x579 = 0.0, $x58 = 0.0, $x580 = 0.0, $x581 = 0, $x582 = 0, $x583 = 0.0, $x584 = 0.0, $x585 = 0.0, $x586 = 0.0, $x587 = 0.0, $x588 = 0.0, $x589 = 0.0, $x59 = 0.0, $x590 = 0.0, $x591 = 0.0, $x592 = 0.0;
 var $x593 = 0.0, $x594 = 0.0, $x595 = 0.0, $x596 = 0.0, $x597 = 0.0, $x598 = 0.0, $x599 = 0.0, $x60 = 0.0, $x600 = 0.0, $x601 = 0.0, $x602 = 0.0, $x603 = 0.0, $x604 = 0.0, $x605 = 0.0, $x606 = 0.0, $x607 = 0.0, $x608 = 0.0, $x609 = 0.0, $x61 = 0.0, $x610 = 0.0;
 var $x611 = 0.0, $x612 = 0.0, $x613 = 0.0, $x614 = 0.0, $x615 = 0.0, $x616 = 0.0, $x617 = 0.0, $x618 = 0.0, $x619 = 0.0, $x62 = 0.0, $x620 = 0.0, $x621 = 0, $x622 = 0, $x623 = 0.0, $x624 = 0.0, $x625 = 0.0, $x626 = 0.0, $x627 = 0.0, $x628 = 0.0, $x629 = 0.0;
 var $x63 = 0.0, $x630 = 0.0, $x631 = 0.0, $x632 = 0.0, $x633 = 0.0, $x634 = 0.0, $x635 = 0.0, $x636 = 0.0, $x637 = 0.0, $x638 = 0.0, $x639 = 0.0, $x64 = 0.0, $x640 = 0.0, $x641 = 0.0, $x642 = 0, $x643 = 0, $x644 = 0.0, $x645 = 0.0, $x646 = 0.0, $x647 = 0.0;
 var $x648 = 0.0, $x649 = 0.0, $x65 = 0.0, $x650 = 0.0, $x651 = 0.0, $x652 = 0.0, $x653 = 0.0, $x654 = 0.0, $x655 = 0.0, $x656 = 0.0, $x657 = 0.0, $x658 = 0.0, $x659 = 0.0, $x66 = 0.0, $x660 = 0.0, $x661 = 0.0, $x662 = 0.0, $x663 = 0, $x664 = 0, $x665 = 0.0;
 var $x666 = 0.0, $x667 = 0.0, $x668 = 0.0, $x669 = 0.0, $x67 = 0.0, $x670 = 0.0, $x671 = 0.0, $x672 = 0.0, $x673 = 0.0, $x674 = 0.0, $x675 = 0.0, $x676 = 0.0, $x68 = 0.0, $x69 = 0.0, $x70 = 0.0, $x71 = 0.0, $x72 = 0.0, $x73 = 0.0, $x74 = 0.0, $x75 = 0.0;
 var $x76 = 0.0, $x77 = 0.0, $x78 = 0.0, $x79 = 0, $x80 = 0, $x81 = 0.0, $x82 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 3536|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $j2array = sp + 3328|0;
 $cj2array = sp + 3312|0;
 $sj2array = sp + 3296|0;
 $j2valid = sp + 3534|0;
 $j0eval = sp + 3272|0;
 $j1eval = sp + 3264|0;
 $j1array = sp + 3248|0;
 $cj1array = sp + 3232|0;
 $sj1array = sp + 3216|0;
 $j1valid = sp + 3532|0;
 $x50 = sp + 3184|0;
 $x51 = sp + 3160|0;
 $j0eval1 = sp + 3128|0;
 $j0eval2 = sp + 3056|0;
 $j0eval3 = sp + 2976|0;
 $evalcond = sp + 2880|0;
 $j0eval4 = sp + 2840|0;
 $j0array = sp + 2808|0;
 $cj0array = sp + 2800|0;
 $sj0array = sp + 2792|0;
 $j0valid = sp + 3530|0;
 $x79 = sp + 2760|0;
 $x80 = sp + 2744|0;
 $evalcond5 = sp + 2728|0;
 $j0eval7 = sp + 2664|0;
 $j0array8 = sp + 2632|0;
 $cj0array9 = sp + 2624|0;
 $sj0array10 = sp + 2616|0;
 $j0valid11 = sp + 3528|0;
 $x477 = sp + 2584|0;
 $x478 = sp + 2568|0;
 $evalcond14 = sp + 2552|0;
 $j0eval16 = sp + 2496|0;
 $j0eval17 = sp + 2456|0;
 $j0array18 = sp + 2424|0;
 $cj0array19 = sp + 2416|0;
 $sj0array20 = sp + 2408|0;
 $j0valid21 = sp + 3526|0;
 $x490 = sp + 2376|0;
 $x491 = sp + 2360|0;
 $evalcond24 = sp + 2336|0;
 $j0array25 = sp + 2296|0;
 $cj0array26 = sp + 2288|0;
 $sj0array27 = sp + 2280|0;
 $j0valid28 = sp + 3525|0;
 $x497 = sp + 2256|0;
 $x498 = sp + 2240|0;
 $evalcond31 = sp + 2216|0;
 $j0eval33 = sp + 2136|0;
 $j0eval34 = sp + 2096|0;
 $j0array35 = sp + 2064|0;
 $cj0array36 = sp + 2056|0;
 $sj0array37 = sp + 2048|0;
 $j0valid38 = sp + 3523|0;
 $x513 = sp + 2016|0;
 $x514 = sp + 2000|0;
 $evalcond41 = sp + 1976|0;
 $j0array42 = sp + 1936|0;
 $cj0array43 = sp + 1928|0;
 $sj0array44 = sp + 1920|0;
 $j0valid45 = sp + 3522|0;
 $x520 = sp + 1896|0;
 $x521 = sp + 1880|0;
 $evalcond48 = sp + 1856|0;
 $j0array50 = sp + 1816|0;
 $cj0array51 = sp + 1808|0;
 $sj0array52 = sp + 1800|0;
 $j0valid53 = sp + 3520|0;
 $x531 = sp + 1744|0;
 $x532 = sp + 1728|0;
 $evalcond56 = sp + 1688|0;
 $j0array57 = sp + 1592|0;
 $cj0array58 = sp + 1584|0;
 $sj0array59 = sp + 1576|0;
 $j0valid60 = sp + 3519|0;
 $x549 = sp + 1520|0;
 $x550 = sp + 1504|0;
 $evalcond63 = sp + 1464|0;
 $j0array64 = sp + 1368|0;
 $cj0array65 = sp + 1360|0;
 $sj0array66 = sp + 1352|0;
 $j0valid67 = sp + 3518|0;
 $x566 = sp + 1304|0;
 $x567 = sp + 1288|0;
 $evalcond70 = sp + 1248|0;
 $j0array71 = sp + 1144|0;
 $cj0array72 = sp + 1128|0;
 $sj0array73 = sp + 1112|0;
 $j0valid74 = sp + 3516|0;
 $x581 = sp + 1096|0;
 $x582 = sp + 1072|0;
 $j1eval77 = sp + 1040|0;
 $j1eval78 = sp + 952|0;
 $j1eval79 = sp + 840|0;
 $j1array80 = sp + 744|0;
 $cj1array81 = sp + 736|0;
 $sj1array82 = sp + 728|0;
 $j1valid83 = sp + 3514|0;
 $x621 = sp + 648|0;
 $x622 = sp + 632|0;
 $evalcond86 = sp + 592|0;
 $j1array87 = sp + 488|0;
 $cj1array88 = sp + 480|0;
 $sj1array89 = sp + 472|0;
 $j1valid90 = sp + 3513|0;
 $x642 = sp + 400|0;
 $x643 = sp + 384|0;
 $evalcond93 = sp + 344|0;
 $j1array94 = sp + 240|0;
 $cj1array95 = sp + 232|0;
 $sj1array96 = sp + 224|0;
 $j1valid97 = sp + 3512|0;
 $x663 = sp + 152|0;
 $x664 = sp + 136|0;
 $evalcond100 = sp + 96|0;
 $0 = $this;
 $1 = $eetrans;
 $2 = $eerot;
 $3 = $pfree;
 $4 = $solutions;
 $5 = $0;
 $6 = (+__ZNSt3__114numeric_limitsIdE9quiet_NaNEv());
 HEAPF64[$5>>3] = $6;
 $7 = ((($5)) + 536|0);
 HEAP8[$7>>0] = -1;
 $8 = ((($5)) + 536|0);
 $9 = ((($8)) + 1|0);
 HEAP8[$9>>0] = -1;
 $10 = ((($5)) + 538|0);
 HEAP8[$10>>0] = -1;
 $11 = (+__ZNSt3__114numeric_limitsIdE9quiet_NaNEv());
 $12 = ((($5)) + 40|0);
 HEAPF64[$12>>3] = $11;
 $13 = ((($5)) + 539|0);
 HEAP8[$13>>0] = -1;
 $14 = ((($5)) + 539|0);
 $15 = ((($14)) + 1|0);
 HEAP8[$15>>0] = -1;
 $16 = ((($5)) + 541|0);
 HEAP8[$16>>0] = -1;
 $17 = (+__ZNSt3__114numeric_limitsIdE9quiet_NaNEv());
 $18 = ((($5)) + 80|0);
 HEAPF64[$18>>3] = $17;
 $19 = ((($5)) + 542|0);
 HEAP8[$19>>0] = -1;
 $20 = ((($5)) + 542|0);
 $21 = ((($20)) + 1|0);
 HEAP8[$21>>0] = -1;
 $22 = ((($5)) + 544|0);
 HEAP8[$22>>0] = -1;
 $23 = (+__ZNSt3__114numeric_limitsIdE9quiet_NaNEv());
 $24 = ((($5)) + 120|0);
 HEAPF64[$24>>3] = $23;
 $25 = ((($5)) + 545|0);
 HEAP8[$25>>0] = -1;
 $26 = ((($5)) + 545|0);
 $27 = ((($26)) + 1|0);
 HEAP8[$27>>0] = -1;
 $28 = ((($5)) + 547|0);
 HEAP8[$28>>0] = -1;
 $29 = (+__ZNSt3__114numeric_limitsIdE9quiet_NaNEv());
 $30 = ((($5)) + 160|0);
 HEAPF64[$30>>3] = $29;
 $31 = ((($5)) + 548|0);
 HEAP8[$31>>0] = -1;
 $32 = ((($5)) + 548|0);
 $33 = ((($32)) + 1|0);
 HEAP8[$33>>0] = -1;
 $34 = ((($5)) + 550|0);
 HEAP8[$34>>0] = -1;
 $35 = (+__ZNSt3__114numeric_limitsIdE9quiet_NaNEv());
 $36 = ((($5)) + 200|0);
 HEAPF64[$36>>3] = $35;
 $37 = ((($5)) + 551|0);
 HEAP8[$37>>0] = -1;
 $38 = ((($5)) + 551|0);
 $39 = ((($38)) + 1|0);
 HEAP8[$39>>0] = -1;
 $40 = ((($5)) + 553|0);
 HEAP8[$40>>0] = -1;
 $dummyiter = 0;
 while(1) {
  $41 = $dummyiter;
  $42 = ($41|0)<(1);
  $43 = $4;
  if (!($42)) {
   break;
  }
  $44 = HEAP32[$43>>2]|0;
  $45 = ((($44)) + 20|0);
  $46 = HEAP32[$45>>2]|0;
  FUNCTION_TABLE_vi[$46 & 1023]($43);
  $47 = $2;
  $48 = +HEAPF64[$47>>3];
  $49 = ((($5)) + 248|0);
  HEAPF64[$49>>3] = $48;
  $50 = $2;
  $51 = ((($50)) + 8|0);
  $52 = +HEAPF64[$51>>3];
  $53 = ((($5)) + 272|0);
  HEAPF64[$53>>3] = $52;
  $54 = $2;
  $55 = ((($54)) + 16|0);
  $56 = +HEAPF64[$55>>3];
  $57 = ((($5)) + 296|0);
  HEAPF64[$57>>3] = $56;
  $58 = $2;
  $59 = ((($58)) + 24|0);
  $60 = +HEAPF64[$59>>3];
  $61 = ((($5)) + 320|0);
  HEAPF64[$61>>3] = $60;
  $62 = $2;
  $63 = ((($62)) + 32|0);
  $64 = +HEAPF64[$63>>3];
  $65 = ((($5)) + 344|0);
  HEAPF64[$65>>3] = $64;
  $66 = $2;
  $67 = ((($66)) + 40|0);
  $68 = +HEAPF64[$67>>3];
  $69 = ((($5)) + 368|0);
  HEAPF64[$69>>3] = $68;
  $70 = $2;
  $71 = ((($70)) + 48|0);
  $72 = +HEAPF64[$71>>3];
  $73 = ((($5)) + 392|0);
  HEAPF64[$73>>3] = $72;
  $74 = $2;
  $75 = ((($74)) + 56|0);
  $76 = +HEAPF64[$75>>3];
  $77 = ((($5)) + 416|0);
  HEAPF64[$77>>3] = $76;
  $78 = $2;
  $79 = ((($78)) + 64|0);
  $80 = +HEAPF64[$79>>3];
  $81 = ((($5)) + 440|0);
  HEAPF64[$81>>3] = $80;
  $82 = $1;
  $83 = +HEAPF64[$82>>3];
  $84 = ((($5)) + 464|0);
  HEAPF64[$84>>3] = $83;
  $85 = $1;
  $86 = ((($85)) + 8|0);
  $87 = +HEAPF64[$86>>3];
  $88 = ((($5)) + 488|0);
  HEAPF64[$88>>3] = $87;
  $89 = $1;
  $90 = ((($89)) + 16|0);
  $91 = +HEAPF64[$90>>3];
  $92 = ((($5)) + 512|0);
  HEAPF64[$92>>3] = $91;
  $93 = ((($5)) + 248|0);
  $94 = +HEAPF64[$93>>3];
  $95 = ((($5)) + 240|0);
  HEAPF64[$95>>3] = $94;
  $96 = ((($5)) + 272|0);
  $97 = +HEAPF64[$96>>3];
  $98 = ((($5)) + 264|0);
  HEAPF64[$98>>3] = $97;
  $99 = ((($5)) + 296|0);
  $100 = +HEAPF64[$99>>3];
  $101 = ((($5)) + 288|0);
  HEAPF64[$101>>3] = $100;
  $102 = ((($5)) + 464|0);
  $103 = +HEAPF64[$102>>3];
  $104 = ((($5)) + 456|0);
  HEAPF64[$104>>3] = $103;
  $105 = ((($5)) + 320|0);
  $106 = +HEAPF64[$105>>3];
  $107 = ((($5)) + 312|0);
  HEAPF64[$107>>3] = $106;
  $108 = ((($5)) + 344|0);
  $109 = +HEAPF64[$108>>3];
  $110 = ((($5)) + 336|0);
  HEAPF64[$110>>3] = $109;
  $111 = ((($5)) + 368|0);
  $112 = +HEAPF64[$111>>3];
  $113 = ((($5)) + 360|0);
  HEAPF64[$113>>3] = $112;
  $114 = ((($5)) + 488|0);
  $115 = +HEAPF64[$114>>3];
  $116 = ((($5)) + 480|0);
  HEAPF64[$116>>3] = $115;
  $117 = ((($5)) + 392|0);
  $118 = +HEAPF64[$117>>3];
  $119 = ((($5)) + 384|0);
  HEAPF64[$119>>3] = $118;
  $120 = ((($5)) + 416|0);
  $121 = +HEAPF64[$120>>3];
  $122 = ((($5)) + 408|0);
  HEAPF64[$122>>3] = $121;
  $123 = ((($5)) + 440|0);
  $124 = +HEAPF64[$123>>3];
  $125 = ((($5)) + 432|0);
  HEAPF64[$125>>3] = $124;
  $126 = ((($5)) + 512|0);
  $127 = +HEAPF64[$126>>3];
  $128 = -1.371 + $127;
  $129 = ((($5)) + 504|0);
  HEAPF64[$129>>3] = $128;
  $130 = ((($5)) + 240|0);
  $131 = +HEAPF64[$130>>3];
  $132 = ((($5)) + 248|0);
  HEAPF64[$132>>3] = $131;
  $133 = ((($5)) + 264|0);
  $134 = +HEAPF64[$133>>3];
  $135 = ((($5)) + 272|0);
  HEAPF64[$135>>3] = $134;
  $136 = ((($5)) + 288|0);
  $137 = +HEAPF64[$136>>3];
  $138 = ((($5)) + 296|0);
  HEAPF64[$138>>3] = $137;
  $139 = ((($5)) + 312|0);
  $140 = +HEAPF64[$139>>3];
  $141 = ((($5)) + 320|0);
  HEAPF64[$141>>3] = $140;
  $142 = ((($5)) + 336|0);
  $143 = +HEAPF64[$142>>3];
  $144 = ((($5)) + 344|0);
  HEAPF64[$144>>3] = $143;
  $145 = ((($5)) + 360|0);
  $146 = +HEAPF64[$145>>3];
  $147 = ((($5)) + 368|0);
  HEAPF64[$147>>3] = $146;
  $148 = ((($5)) + 384|0);
  $149 = +HEAPF64[$148>>3];
  $150 = ((($5)) + 392|0);
  HEAPF64[$150>>3] = $149;
  $151 = ((($5)) + 408|0);
  $152 = +HEAPF64[$151>>3];
  $153 = ((($5)) + 416|0);
  HEAPF64[$153>>3] = $152;
  $154 = ((($5)) + 432|0);
  $155 = +HEAPF64[$154>>3];
  $156 = ((($5)) + 440|0);
  HEAPF64[$156>>3] = $155;
  $157 = ((($5)) + 456|0);
  $158 = +HEAPF64[$157>>3];
  $159 = ((($5)) + 464|0);
  HEAPF64[$159>>3] = $158;
  $160 = ((($5)) + 480|0);
  $161 = +HEAPF64[$160>>3];
  $162 = ((($5)) + 488|0);
  HEAPF64[$162>>3] = $161;
  $163 = ((($5)) + 504|0);
  $164 = +HEAPF64[$163>>3];
  $165 = ((($5)) + 512|0);
  HEAPF64[$165>>3] = $164;
  $166 = ((($5)) + 464|0);
  $167 = +HEAPF64[$166>>3];
  $168 = 1.0 * $167;
  $x42 = $168;
  $169 = ((($5)) + 512|0);
  $170 = +HEAPF64[$169>>3];
  $171 = 1.0 * $170;
  $x43 = $171;
  $172 = ((($5)) + 488|0);
  $173 = +HEAPF64[$172>>3];
  $174 = 1.0 * $173;
  $x44 = $174;
  $175 = ((($5)) + 464|0);
  $176 = +HEAPF64[$175>>3];
  $177 = ((($5)) + 464|0);
  $178 = +HEAPF64[$177>>3];
  $179 = $176 * $178;
  $180 = ((($5)) + 488|0);
  $181 = +HEAPF64[$180>>3];
  $182 = ((($5)) + 488|0);
  $183 = +HEAPF64[$182>>3];
  $184 = $181 * $183;
  $185 = $179 + $184;
  $186 = ((($5)) + 512|0);
  $187 = +HEAPF64[$186>>3];
  $188 = ((($5)) + 512|0);
  $189 = +HEAPF64[$188>>3];
  $190 = $187 * $189;
  $191 = $185 + $190;
  $192 = ((($5)) + 528|0);
  HEAPF64[$192>>3] = $191;
  $193 = ((($5)) + 464|0);
  $194 = +HEAPF64[$193>>3];
  $195 = ((($5)) + 248|0);
  $196 = +HEAPF64[$195>>3];
  $197 = $194 * $196;
  $198 = ((($5)) + 488|0);
  $199 = +HEAPF64[$198>>3];
  $200 = ((($5)) + 320|0);
  $201 = +HEAPF64[$200>>3];
  $202 = $199 * $201;
  $203 = $197 + $202;
  $204 = ((($5)) + 512|0);
  $205 = +HEAPF64[$204>>3];
  $206 = ((($5)) + 392|0);
  $207 = +HEAPF64[$206>>3];
  $208 = $205 * $207;
  $209 = $203 + $208;
  $210 = ((($5)) + 472|0);
  HEAPF64[$210>>3] = $209;
  $211 = ((($5)) + 464|0);
  $212 = +HEAPF64[$211>>3];
  $213 = ((($5)) + 272|0);
  $214 = +HEAPF64[$213>>3];
  $215 = $212 * $214;
  $216 = ((($5)) + 488|0);
  $217 = +HEAPF64[$216>>3];
  $218 = ((($5)) + 344|0);
  $219 = +HEAPF64[$218>>3];
  $220 = $217 * $219;
  $221 = $215 + $220;
  $222 = ((($5)) + 512|0);
  $223 = +HEAPF64[$222>>3];
  $224 = ((($5)) + 416|0);
  $225 = +HEAPF64[$224>>3];
  $226 = $223 * $225;
  $227 = $221 + $226;
  $228 = ((($5)) + 496|0);
  HEAPF64[$228>>3] = $227;
  $229 = ((($5)) + 464|0);
  $230 = +HEAPF64[$229>>3];
  $231 = ((($5)) + 296|0);
  $232 = +HEAPF64[$231>>3];
  $233 = $230 * $232;
  $234 = ((($5)) + 488|0);
  $235 = +HEAPF64[$234>>3];
  $236 = ((($5)) + 368|0);
  $237 = +HEAPF64[$236>>3];
  $238 = $235 * $237;
  $239 = $233 + $238;
  $240 = ((($5)) + 512|0);
  $241 = +HEAPF64[$240>>3];
  $242 = ((($5)) + 440|0);
  $243 = +HEAPF64[$242>>3];
  $244 = $241 * $243;
  $245 = $239 + $244;
  $246 = ((($5)) + 520|0);
  HEAPF64[$246>>3] = $245;
  $247 = ((($5)) + 392|0);
  $248 = +HEAPF64[$247>>3];
  $249 = -1.0 * $248;
  $250 = $x44;
  $251 = $249 * $250;
  $252 = ((($5)) + 512|0);
  $253 = +HEAPF64[$252>>3];
  $254 = ((($5)) + 320|0);
  $255 = +HEAPF64[$254>>3];
  $256 = $253 * $255;
  $257 = $251 + $256;
  $258 = ((($5)) + 256|0);
  HEAPF64[$258>>3] = $257;
  $259 = ((($5)) + 464|0);
  $260 = +HEAPF64[$259>>3];
  $261 = ((($5)) + 392|0);
  $262 = +HEAPF64[$261>>3];
  $263 = $260 * $262;
  $264 = ((($5)) + 248|0);
  $265 = +HEAPF64[$264>>3];
  $266 = -1.0 * $265;
  $267 = $x43;
  $268 = $266 * $267;
  $269 = $263 + $268;
  $270 = ((($5)) + 280|0);
  HEAPF64[$270>>3] = $269;
  $271 = ((($5)) + 320|0);
  $272 = +HEAPF64[$271>>3];
  $273 = -1.0 * $272;
  $274 = $x42;
  $275 = $273 * $274;
  $276 = ((($5)) + 488|0);
  $277 = +HEAPF64[$276>>3];
  $278 = ((($5)) + 248|0);
  $279 = +HEAPF64[$278>>3];
  $280 = $277 * $279;
  $281 = $275 + $280;
  $282 = ((($5)) + 304|0);
  HEAPF64[$282>>3] = $281;
  $283 = ((($5)) + 416|0);
  $284 = +HEAPF64[$283>>3];
  $285 = -1.0 * $284;
  $286 = $x44;
  $287 = $285 * $286;
  $288 = ((($5)) + 512|0);
  $289 = +HEAPF64[$288>>3];
  $290 = ((($5)) + 344|0);
  $291 = +HEAPF64[$290>>3];
  $292 = $289 * $291;
  $293 = $287 + $292;
  $294 = ((($5)) + 328|0);
  HEAPF64[$294>>3] = $293;
  $295 = ((($5)) + 464|0);
  $296 = +HEAPF64[$295>>3];
  $297 = ((($5)) + 416|0);
  $298 = +HEAPF64[$297>>3];
  $299 = $296 * $298;
  $300 = ((($5)) + 272|0);
  $301 = +HEAPF64[$300>>3];
  $302 = -1.0 * $301;
  $303 = $x43;
  $304 = $302 * $303;
  $305 = $299 + $304;
  $306 = ((($5)) + 352|0);
  HEAPF64[$306>>3] = $305;
  $307 = ((($5)) + 344|0);
  $308 = +HEAPF64[$307>>3];
  $309 = -1.0 * $308;
  $310 = $x42;
  $311 = $309 * $310;
  $312 = ((($5)) + 488|0);
  $313 = +HEAPF64[$312>>3];
  $314 = ((($5)) + 272|0);
  $315 = +HEAPF64[$314>>3];
  $316 = $313 * $315;
  $317 = $311 + $316;
  $318 = ((($5)) + 376|0);
  HEAPF64[$318>>3] = $317;
  $319 = ((($5)) + 440|0);
  $320 = +HEAPF64[$319>>3];
  $321 = -1.0 * $320;
  $322 = $x44;
  $323 = $321 * $322;
  $324 = ((($5)) + 512|0);
  $325 = +HEAPF64[$324>>3];
  $326 = ((($5)) + 368|0);
  $327 = +HEAPF64[$326>>3];
  $328 = $325 * $327;
  $329 = $323 + $328;
  $330 = ((($5)) + 400|0);
  HEAPF64[$330>>3] = $329;
  $331 = ((($5)) + 296|0);
  $332 = +HEAPF64[$331>>3];
  $333 = -1.0 * $332;
  $334 = $x43;
  $335 = $333 * $334;
  $336 = ((($5)) + 464|0);
  $337 = +HEAPF64[$336>>3];
  $338 = ((($5)) + 440|0);
  $339 = +HEAPF64[$338>>3];
  $340 = $337 * $339;
  $341 = $335 + $340;
  $342 = ((($5)) + 424|0);
  HEAPF64[$342>>3] = $341;
  $343 = ((($5)) + 368|0);
  $344 = +HEAPF64[$343>>3];
  $345 = -1.0 * $344;
  $346 = $x42;
  $347 = $345 * $346;
  $348 = ((($5)) + 488|0);
  $349 = +HEAPF64[$348>>3];
  $350 = ((($5)) + 296|0);
  $351 = +HEAPF64[$350>>3];
  $352 = $349 * $351;
  $353 = $347 + $352;
  $354 = ((($5)) + 448|0);
  HEAPF64[$354>>3] = $353;
  ;HEAP8[$j2valid>>0]=0|0;HEAP8[$j2valid+1>>0]=0|0;
  $355 = ((($5)) + 544|0);
  HEAP8[$355>>0] = 2;
  $356 = ((($5)) + 528|0);
  $357 = +HEAPF64[$356>>3];
  $358 = 2.6706848890032902 * $357;
  $359 = -1.0601789761685001 + $358;
  $360 = $359 < -1.0000020000000001;
  L4: do {
   if (!($360)) {
    $361 = ((($5)) + 528|0);
    $362 = +HEAPF64[$361>>3];
    $363 = 2.6706848890032902 * $362;
    $364 = -1.0601789761685001 + $363;
    $365 = $364 > 1.0000020000000001;
    if (!($365)) {
     $366 = ((($5)) + 528|0);
     $367 = +HEAPF64[$366>>3];
     $368 = 2.6706848890032902 * $367;
     $369 = -1.0601789761685001 + $368;
     $370 = (+__Z6IKasind($369));
     $x45 = $370;
     $371 = $x45;
     $372 = 1.0 * $371;
     $373 = 0.046837113113238897 + $372;
     HEAPF64[$j2array>>3] = $373;
     $374 = +HEAPF64[$j2array>>3];
     $375 = (+__Z5IKsind($374));
     HEAPF64[$sj2array>>3] = $375;
     $376 = +HEAPF64[$j2array>>3];
     $377 = (+__Z5IKcosd($376));
     HEAPF64[$cj2array>>3] = $377;
     $378 = $x45;
     $379 = -1.0 * $378;
     $380 = 3.1884297667030301 + $379;
     $381 = ((($j2array)) + 8|0);
     HEAPF64[$381>>3] = $380;
     $382 = ((($j2array)) + 8|0);
     $383 = +HEAPF64[$382>>3];
     $384 = (+__Z5IKsind($383));
     $385 = ((($sj2array)) + 8|0);
     HEAPF64[$385>>3] = $384;
     $386 = ((($j2array)) + 8|0);
     $387 = +HEAPF64[$386>>3];
     $388 = (+__Z5IKcosd($387));
     $389 = ((($cj2array)) + 8|0);
     HEAPF64[$389>>3] = $388;
     $390 = +HEAPF64[$j2array>>3];
     $391 = $390 > 3.14159265358979;
     $392 = +HEAPF64[$j2array>>3];
     if ($391) {
      $393 = $392 - 6.2831853071795898;
      HEAPF64[$j2array>>3] = $393;
     } else {
      $394 = $392 < -3.14159265358979;
      if ($394) {
       $395 = +HEAPF64[$j2array>>3];
       $396 = $395 + 6.2831853071795898;
       HEAPF64[$j2array>>3] = $396;
      }
     }
     HEAP8[$j2valid>>0] = 1;
     $397 = ((($j2array)) + 8|0);
     $398 = +HEAPF64[$397>>3];
     $399 = $398 > 3.14159265358979;
     $400 = ((($j2array)) + 8|0);
     $401 = +HEAPF64[$400>>3];
     if ($399) {
      $402 = $401 - 6.2831853071795898;
      HEAPF64[$400>>3] = $402;
     } else {
      $403 = $401 < -3.14159265358979;
      if ($403) {
       $404 = ((($j2array)) + 8|0);
       $405 = +HEAPF64[$404>>3];
       $406 = $405 + 6.2831853071795898;
       HEAPF64[$404>>3] = $406;
      }
     }
     $407 = ((($j2valid)) + 1|0);
     HEAP8[$407>>0] = 1;
     $ij2 = 0;
     while(1) {
      $408 = $ij2;
      $409 = ($408|0)<(2);
      if (!($409)) {
       break L4;
      }
      $410 = $ij2;
      $411 = (($j2valid) + ($410)|0);
      $412 = HEAP8[$411>>0]|0;
      $413 = $412&1;
      L20: do {
       if ($413) {
        $414 = $ij2;
        $415 = $414&255;
        $416 = ((($5)) + 542|0);
        HEAP8[$416>>0] = $415;
        $417 = ((($5)) + 542|0);
        $418 = ((($417)) + 1|0);
        HEAP8[$418>>0] = -1;
        $419 = $ij2;
        $420 = (($419) + 1)|0;
        $iij2 = $420;
        while(1) {
         $421 = $iij2;
         $422 = ($421|0)<(2);
         if (!($422)) {
          break;
         }
         $423 = $iij2;
         $424 = (($j2valid) + ($423)|0);
         $425 = HEAP8[$424>>0]|0;
         $426 = $425&1;
         if ($426) {
          $427 = $ij2;
          $428 = (($cj2array) + ($427<<3)|0);
          $429 = +HEAPF64[$428>>3];
          $430 = $iij2;
          $431 = (($cj2array) + ($430<<3)|0);
          $432 = +HEAPF64[$431>>3];
          $433 = $429 - $432;
          $434 = (+__Z5IKabsd($433));
          $435 = $434 < 9.9999999999999995E-7;
          if ($435) {
           $436 = $ij2;
           $437 = (($sj2array) + ($436<<3)|0);
           $438 = +HEAPF64[$437>>3];
           $439 = $iij2;
           $440 = (($sj2array) + ($439<<3)|0);
           $441 = +HEAPF64[$440>>3];
           $442 = $438 - $441;
           $443 = (+__Z5IKabsd($442));
           $444 = $443 < 9.9999999999999995E-7;
           if ($444) {
            label = 21;
            break;
           }
          }
         }
         $451 = $iij2;
         $452 = (($451) + 1)|0;
         $iij2 = $452;
        }
        if ((label|0) == 21) {
         label = 0;
         $445 = $iij2;
         $446 = (($j2valid) + ($445)|0);
         HEAP8[$446>>0] = 0;
         $447 = $iij2;
         $448 = $447&255;
         $449 = ((($5)) + 542|0);
         $450 = ((($449)) + 1|0);
         HEAP8[$450>>0] = $448;
        }
        $453 = $ij2;
        $454 = (($j2array) + ($453<<3)|0);
        $455 = +HEAPF64[$454>>3];
        $456 = ((($5)) + 80|0);
        HEAPF64[$456>>3] = $455;
        $457 = $ij2;
        $458 = (($cj2array) + ($457<<3)|0);
        $459 = +HEAPF64[$458>>3];
        $460 = ((($5)) + 88|0);
        HEAPF64[$460>>3] = $459;
        $461 = $ij2;
        $462 = (($sj2array) + ($461<<3)|0);
        $463 = +HEAPF64[$462>>3];
        $464 = ((($5)) + 96|0);
        HEAPF64[$464>>3] = $463;
        $465 = ((($5)) + 464|0);
        $466 = +HEAPF64[$465>>3];
        $467 = (+__Z5IKabsd($466));
        $468 = ((($5)) + 488|0);
        $469 = +HEAPF64[$468>>3];
        $470 = (+__Z5IKabsd($469));
        $471 = $467 + $470;
        HEAPF64[$j0eval>>3] = $471;
        $472 = ((($5)) + 464|0);
        $473 = +HEAPF64[$472>>3];
        $474 = ((($5)) + 464|0);
        $475 = +HEAPF64[$474>>3];
        $476 = $473 * $475;
        $477 = ((($5)) + 488|0);
        $478 = +HEAPF64[$477>>3];
        $479 = ((($5)) + 488|0);
        $480 = +HEAPF64[$479>>3];
        $481 = $478 * $480;
        $482 = $476 + $481;
        $483 = ((($j0eval)) + 8|0);
        HEAPF64[$483>>3] = $482;
        $484 = +HEAPF64[$j0eval>>3];
        $485 = (+__Z5IKabsd($484));
        $486 = $485 < 9.9999999999999995E-7;
        if (!($486)) {
         $487 = ((($j0eval)) + 8|0);
         $488 = +HEAPF64[$487>>3];
         $489 = (+__Z5IKabsd($488));
         $490 = $489 < 9.9999999999999995E-7;
         if (!($490)) {
          ;HEAP8[$j0valid74>>0]=0|0;HEAP8[$j0valid74+1>>0]=0|0;
          $3661 = ((($5)) + 538|0);
          HEAP8[$3661>>0] = 2;
          $3662 = ((($5)) + 488|0);
          $3663 = +HEAPF64[$3662>>3];
          $3664 = -1.0 * $3663;
          $3665 = ((($5)) + 464|0);
          $3666 = +HEAPF64[$3665>>3];
          __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x581,$3664,$3666,1.9999999999999999E-6);
          $3667 = ((($x581)) + 8|0);
          $3668 = HEAP8[$3667>>0]|0;
          $3669 = $3668&1;
          if (!($3669)) {
           break;
          }
          $3670 = +HEAPF64[$x581>>3];
          $3671 = 1.0 * $3670;
          $x579 = $3671;
          $3672 = ((($5)) + 464|0);
          $3673 = +HEAPF64[$3672>>3];
          $3674 = ((($5)) + 464|0);
          $3675 = +HEAPF64[$3674>>3];
          $3676 = $3673 * $3675;
          $3677 = ((($5)) + 488|0);
          $3678 = +HEAPF64[$3677>>3];
          $3679 = ((($5)) + 488|0);
          $3680 = +HEAPF64[$3679>>3];
          $3681 = $3678 * $3680;
          $3682 = $3676 + $3681;
          $3683 = $3682 < -1.0000000000000001E-5;
          if ($3683) {
           break;
          }
          $3684 = ((($5)) + 464|0);
          $3685 = +HEAPF64[$3684>>3];
          $3686 = ((($5)) + 464|0);
          $3687 = +HEAPF64[$3686>>3];
          $3688 = $3685 * $3687;
          $3689 = ((($5)) + 488|0);
          $3690 = +HEAPF64[$3689>>3];
          $3691 = ((($5)) + 488|0);
          $3692 = +HEAPF64[$3691>>3];
          $3693 = $3690 * $3692;
          $3694 = $3688 + $3693;
          $3695 = (+__Z6IKsqrtd($3694));
          $3696 = (+__Z5IKabsd($3695));
          __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x582,$3696,-1);
          $3697 = ((($x582)) + 8|0);
          $3698 = HEAP8[$3697>>0]|0;
          $3699 = $3698&1;
          if (!($3699)) {
           break;
          }
          $3700 = +HEAPF64[$x582>>3];
          $3701 = 0.15010000000000001 * $3700;
          $3702 = $3701 < -1.0000020000000001;
          if ($3702) {
           break;
          }
          $3703 = +HEAPF64[$x582>>3];
          $3704 = 0.15010000000000001 * $3703;
          $3705 = $3704 > 1.0000020000000001;
          if ($3705) {
           break;
          }
          $3706 = +HEAPF64[$x582>>3];
          $3707 = 0.15010000000000001 * $3706;
          $3708 = (+__Z6IKasind($3707));
          $x580 = $3708;
          $3709 = $x580;
          $3710 = -1.0 * $3709;
          $3711 = $x579;
          $3712 = -1.0 * $3711;
          $3713 = $3710 + $3712;
          HEAPF64[$j0array71>>3] = $3713;
          $3714 = +HEAPF64[$j0array71>>3];
          $3715 = (+__Z5IKsind($3714));
          HEAPF64[$sj0array73>>3] = $3715;
          $3716 = +HEAPF64[$j0array71>>3];
          $3717 = (+__Z5IKcosd($3716));
          HEAPF64[$cj0array72>>3] = $3717;
          $3718 = $x579;
          $3719 = -1.0 * $3718;
          $3720 = 3.14159265358979 + $3719;
          $3721 = $x580;
          $3722 = $3720 + $3721;
          $3723 = ((($j0array71)) + 8|0);
          HEAPF64[$3723>>3] = $3722;
          $3724 = ((($j0array71)) + 8|0);
          $3725 = +HEAPF64[$3724>>3];
          $3726 = (+__Z5IKsind($3725));
          $3727 = ((($sj0array73)) + 8|0);
          HEAPF64[$3727>>3] = $3726;
          $3728 = ((($j0array71)) + 8|0);
          $3729 = +HEAPF64[$3728>>3];
          $3730 = (+__Z5IKcosd($3729));
          $3731 = ((($cj0array72)) + 8|0);
          HEAPF64[$3731>>3] = $3730;
          $3732 = +HEAPF64[$j0array71>>3];
          $3733 = $3732 > 3.14159265358979;
          $3734 = +HEAPF64[$j0array71>>3];
          do {
           if ($3733) {
            $3735 = $3734 - 6.2831853071795898;
            HEAPF64[$j0array71>>3] = $3735;
           } else {
            $3736 = $3734 < -3.14159265358979;
            if (!($3736)) {
             break;
            }
            $3737 = +HEAPF64[$j0array71>>3];
            $3738 = $3737 + 6.2831853071795898;
            HEAPF64[$j0array71>>3] = $3738;
           }
          } while(0);
          HEAP8[$j0valid74>>0] = 1;
          $3739 = ((($j0array71)) + 8|0);
          $3740 = +HEAPF64[$3739>>3];
          $3741 = $3740 > 3.14159265358979;
          $3742 = ((($j0array71)) + 8|0);
          $3743 = +HEAPF64[$3742>>3];
          do {
           if ($3741) {
            $3744 = $3743 - 6.2831853071795898;
            HEAPF64[$3742>>3] = $3744;
           } else {
            $3745 = $3743 < -3.14159265358979;
            if (!($3745)) {
             break;
            }
            $3746 = ((($j0array71)) + 8|0);
            $3747 = +HEAPF64[$3746>>3];
            $3748 = $3747 + 6.2831853071795898;
            HEAPF64[$3746>>3] = $3748;
           }
          } while(0);
          $3749 = ((($j0valid74)) + 1|0);
          HEAP8[$3749>>0] = 1;
          $ij075 = 0;
          while(1) {
           $3750 = $ij075;
           $3751 = ($3750|0)<(2);
           if (!($3751)) {
            break L20;
           }
           $3752 = $ij075;
           $3753 = (($j0valid74) + ($3752)|0);
           $3754 = HEAP8[$3753>>0]|0;
           $3755 = $3754&1;
           L53: do {
            if ($3755) {
             $3756 = $ij075;
             $3757 = $3756&255;
             $3758 = ((($5)) + 536|0);
             HEAP8[$3758>>0] = $3757;
             $3759 = ((($5)) + 536|0);
             $3760 = ((($3759)) + 1|0);
             HEAP8[$3760>>0] = -1;
             $3761 = $ij075;
             $3762 = (($3761) + 1)|0;
             $iij076 = $3762;
             L55: while(1) {
              $3763 = $iij076;
              $3764 = ($3763|0)<(2);
              if (!($3764)) {
               break;
              }
              $3765 = $iij076;
              $3766 = (($j0valid74) + ($3765)|0);
              $3767 = HEAP8[$3766>>0]|0;
              $3768 = $3767&1;
              do {
               if ($3768) {
                $3769 = $ij075;
                $3770 = (($cj0array72) + ($3769<<3)|0);
                $3771 = +HEAPF64[$3770>>3];
                $3772 = $iij076;
                $3773 = (($cj0array72) + ($3772<<3)|0);
                $3774 = +HEAPF64[$3773>>3];
                $3775 = $3771 - $3774;
                $3776 = (+__Z5IKabsd($3775));
                $3777 = $3776 < 9.9999999999999995E-7;
                if (!($3777)) {
                 break;
                }
                $3778 = $ij075;
                $3779 = (($sj0array73) + ($3778<<3)|0);
                $3780 = +HEAPF64[$3779>>3];
                $3781 = $iij076;
                $3782 = (($sj0array73) + ($3781<<3)|0);
                $3783 = +HEAPF64[$3782>>3];
                $3784 = $3780 - $3783;
                $3785 = (+__Z5IKabsd($3784));
                $3786 = $3785 < 9.9999999999999995E-7;
                if ($3786) {
                 label = 314;
                 break L55;
                }
               }
              } while(0);
              $3793 = $iij076;
              $3794 = (($3793) + 1)|0;
              $iij076 = $3794;
             }
             if ((label|0) == 314) {
              label = 0;
              $3787 = $iij076;
              $3788 = (($j0valid74) + ($3787)|0);
              HEAP8[$3788>>0] = 0;
              $3789 = $iij076;
              $3790 = $3789&255;
              $3791 = ((($5)) + 536|0);
              $3792 = ((($3791)) + 1|0);
              HEAP8[$3792>>0] = $3790;
             }
             $3795 = $ij075;
             $3796 = (($j0array71) + ($3795<<3)|0);
             $3797 = +HEAPF64[$3796>>3];
             HEAPF64[$5>>3] = $3797;
             $3798 = $ij075;
             $3799 = (($cj0array72) + ($3798<<3)|0);
             $3800 = +HEAPF64[$3799>>3];
             $3801 = ((($5)) + 8|0);
             HEAPF64[$3801>>3] = $3800;
             $3802 = $ij075;
             $3803 = (($sj0array73) + ($3802<<3)|0);
             $3804 = +HEAPF64[$3803>>3];
             $3805 = ((($5)) + 16|0);
             HEAPF64[$3805>>3] = $3804;
             $3806 = ((($5)) + 88|0);
             $3807 = +HEAPF64[$3806>>3];
             $3808 = ((($5)) + 88|0);
             $3809 = +HEAPF64[$3808>>3];
             $3810 = $3807 * $3809;
             $x583 = $3810;
             $3811 = ((($5)) + 88|0);
             $3812 = +HEAPF64[$3811>>3];
             $3813 = ((($5)) + 96|0);
             $3814 = +HEAPF64[$3813>>3];
             $3815 = $3812 * $3814;
             $x584 = $3815;
             $3816 = ((($5)) + 488|0);
             $3817 = +HEAPF64[$3816>>3];
             $3818 = ((($5)) + 16|0);
             $3819 = +HEAPF64[$3818>>3];
             $3820 = $3817 * $3819;
             $x585 = $3820;
             $3821 = ((($5)) + 512|0);
             $3822 = +HEAPF64[$3821>>3];
             $3823 = ((($5)) + 96|0);
             $3824 = +HEAPF64[$3823>>3];
             $3825 = $3822 * $3824;
             $x586 = $3825;
             $3826 = ((($5)) + 512|0);
             $3827 = +HEAPF64[$3826>>3];
             $3828 = 1.0 * $3827;
             $x587 = $3828;
             $3829 = ((($5)) + 88|0);
             $3830 = +HEAPF64[$3829>>3];
             $3831 = ((($5)) + 512|0);
             $3832 = +HEAPF64[$3831>>3];
             $3833 = $3830 * $3832;
             $x588 = $3833;
             $3834 = ((($5)) + 8|0);
             $3835 = +HEAPF64[$3834>>3];
             $3836 = ((($5)) + 88|0);
             $3837 = +HEAPF64[$3836>>3];
             $3838 = $3835 * $3837;
             $3839 = ((($5)) + 464|0);
             $3840 = +HEAPF64[$3839>>3];
             $3841 = $3838 * $3840;
             $x589 = $3841;
             $3842 = ((($5)) + 8|0);
             $3843 = +HEAPF64[$3842>>3];
             $3844 = ((($5)) + 464|0);
             $3845 = +HEAPF64[$3844>>3];
             $3846 = $3843 * $3845;
             $3847 = ((($5)) + 96|0);
             $3848 = +HEAPF64[$3847>>3];
             $3849 = $3846 * $3848;
             $x590 = $3849;
             $3850 = $x586;
             $3851 = -21.3349753694581 * $3850;
             $3852 = $x589;
             $3853 = -21.3349753694581 * $3852;
             $3854 = $3851 + $3853;
             $3855 = ((($5)) + 96|0);
             $3856 = +HEAPF64[$3855>>3];
             $3857 = -1.0 * $3856;
             $3858 = $x585;
             $3859 = $3857 * $3858;
             $3860 = $3854 + $3859;
             $3861 = $x590;
             $3862 = -1.0 * $3861;
             $3863 = $3860 + $3862;
             $3864 = ((($5)) + 88|0);
             $3865 = +HEAPF64[$3864>>3];
             $3866 = -21.3349753694581 * $3865;
             $3867 = $x585;
             $3868 = $3866 * $3867;
             $3869 = $3863 + $3868;
             $3870 = $x588;
             $3871 = $3869 + $3870;
             $3872 = ((($5)) + 512|0);
             $3873 = +HEAPF64[$3872>>3];
             $3874 = -21.2709359605911 * $3873;
             $3875 = $3871 + $3874;
             HEAPF64[$j1eval77>>3] = $3875;
             $3876 = $x588;
             $3877 = 0.020299999999999999 * $3876;
             $3878 = ((($5)) + 96|0);
             $3879 = +HEAPF64[$3878>>3];
             $3880 = -0.020299999999999999 * $3879;
             $3881 = $x585;
             $3882 = $3880 * $3881;
             $3883 = $3877 + $3882;
             $3884 = ((($5)) + 88|0);
             $3885 = +HEAPF64[$3884>>3];
             $3886 = -0.43309999999999998 * $3885;
             $3887 = $x585;
             $3888 = $3886 * $3887;
             $3889 = $3883 + $3888;
             $3890 = $x589;
             $3891 = -0.43309999999999998 * $3890;
             $3892 = $3889 + $3891;
             $3893 = $x586;
             $3894 = -0.43309999999999998 * $3893;
             $3895 = $3892 + $3894;
             $3896 = ((($5)) + 512|0);
             $3897 = +HEAPF64[$3896>>3];
             $3898 = -0.43180000000000002 * $3897;
             $3899 = $3895 + $3898;
             $3900 = $x590;
             $3901 = -0.020299999999999999 * $3900;
             $3902 = $3899 + $3901;
             $3903 = (+__Z6IKsignd($3902));
             $3904 = ((($j1eval77)) + 8|0);
             HEAPF64[$3904>>3] = $3903;
             $3905 = $x584;
             $3906 = -0.01758386 * $3905;
             $3907 = -4.1208999999999999E-4 + $3906;
             $3908 = $x583;
             $3909 = -0.18716352 * $3908;
             $3910 = $3907 + $3909;
             $3911 = ((($5)) + 512|0);
             $3912 = +HEAPF64[$3911>>3];
             $3913 = ((($5)) + 512|0);
             $3914 = +HEAPF64[$3913>>3];
             $3915 = $3912 * $3914;
             $3916 = $3910 + $3915;
             $3917 = (+__Z5IKabsd($3916));
             $3918 = ((($5)) + 96|0);
             $3919 = +HEAPF64[$3918>>3];
             $3920 = -0.0087655400000000004 * $3919;
             $3921 = -0.0087919299999999999 + $3920;
             $3922 = ((($5)) + 88|0);
             $3923 = +HEAPF64[$3922>>3];
             $3924 = -0.18701258000000001 * $3923;
             $3925 = $3921 + $3924;
             $3926 = $x583;
             $3927 = 0.01758386 * $3926;
             $3928 = $3925 + $3927;
             $3929 = $x584;
             $3930 = -0.18716352 * $3929;
             $3931 = $3928 + $3930;
             $3932 = $x585;
             $3933 = -1.0 * $3932;
             $3934 = $x587;
             $3935 = $3933 * $3934;
             $3936 = $3931 + $3935;
             $3937 = ((($5)) + 8|0);
             $3938 = +HEAPF64[$3937>>3];
             $3939 = -1.0 * $3938;
             $3940 = ((($5)) + 464|0);
             $3941 = +HEAPF64[$3940>>3];
             $3942 = $3939 * $3941;
             $3943 = $x587;
             $3944 = $3942 * $3943;
             $3945 = $3936 + $3944;
             $3946 = (+__Z5IKabsd($3945));
             $3947 = $3917 + $3946;
             $3948 = ((($j1eval77)) + 16|0);
             HEAPF64[$3948>>3] = $3947;
             $3949 = +HEAPF64[$j1eval77>>3];
             $3950 = (+__Z5IKabsd($3949));
             $3951 = $3950 < 9.9999999999999995E-7;
             do {
              if (!($3951)) {
               $3952 = ((($j1eval77)) + 8|0);
               $3953 = +HEAPF64[$3952>>3];
               $3954 = (+__Z5IKabsd($3953));
               $3955 = $3954 < 9.9999999999999995E-7;
               if ($3955) {
                break;
               }
               $3956 = ((($j1eval77)) + 16|0);
               $3957 = +HEAPF64[$3956>>3];
               $3958 = (+__Z5IKabsd($3957));
               $3959 = $3958 < 9.9999999999999995E-7;
               if ($3959) {
                break;
               }
               ;HEAP8[$j1valid97>>0]=0|0;
               $4978 = ((($5)) + 541|0);
               HEAP8[$4978>>0] = 1;
               $4979 = ((($5)) + 88|0);
               $4980 = +HEAPF64[$4979>>3];
               $4981 = ((($5)) + 88|0);
               $4982 = +HEAPF64[$4981>>3];
               $4983 = $4980 * $4982;
               $x656 = $4983;
               $4984 = ((($5)) + 8|0);
               $4985 = +HEAPF64[$4984>>3];
               $4986 = ((($5)) + 464|0);
               $4987 = +HEAPF64[$4986>>3];
               $4988 = $4985 * $4987;
               $x657 = $4988;
               $4989 = ((($5)) + 88|0);
               $4990 = +HEAPF64[$4989>>3];
               $4991 = 0.43309999999999998 * $4990;
               $x658 = $4991;
               $4992 = ((($5)) + 88|0);
               $4993 = +HEAPF64[$4992>>3];
               $4994 = ((($5)) + 96|0);
               $4995 = +HEAPF64[$4994>>3];
               $4996 = $4993 * $4995;
               $x659 = $4996;
               $4997 = ((($5)) + 96|0);
               $4998 = +HEAPF64[$4997>>3];
               $4999 = 0.020299999999999999 * $4998;
               $x660 = $4999;
               $5000 = ((($5)) + 488|0);
               $5001 = +HEAPF64[$5000>>3];
               $5002 = ((($5)) + 16|0);
               $5003 = +HEAPF64[$5002>>3];
               $5004 = $5001 * $5003;
               $x661 = $5004;
               $5005 = ((($5)) + 512|0);
               $5006 = +HEAPF64[$5005>>3];
               $5007 = 1.0 * $5006;
               $x662 = $5007;
               $5008 = $x656;
               $5009 = -0.18716352 * $5008;
               $5010 = -4.1208999999999999E-4 + $5009;
               $5011 = ((($5)) + 512|0);
               $5012 = +HEAPF64[$5011>>3];
               $5013 = ((($5)) + 512|0);
               $5014 = +HEAPF64[$5013>>3];
               $5015 = $5012 * $5014;
               $5016 = $5010 + $5015;
               $5017 = $x659;
               $5018 = -0.01758386 * $5017;
               $5019 = $5016 + $5018;
               $5020 = ((($5)) + 96|0);
               $5021 = +HEAPF64[$5020>>3];
               $5022 = -0.0087655400000000004 * $5021;
               $5023 = -0.0087919299999999999 + $5022;
               $5024 = $x656;
               $5025 = 0.01758386 * $5024;
               $5026 = $5023 + $5025;
               $5027 = ((($5)) + 88|0);
               $5028 = +HEAPF64[$5027>>3];
               $5029 = -0.18701258000000001 * $5028;
               $5030 = $5026 + $5029;
               $5031 = $x659;
               $5032 = -0.18716352 * $5031;
               $5033 = $5030 + $5032;
               $5034 = $x661;
               $5035 = -1.0 * $5034;
               $5036 = $x662;
               $5037 = $5035 * $5036;
               $5038 = $5033 + $5037;
               $5039 = $x657;
               $5040 = -1.0 * $5039;
               $5041 = $x662;
               $5042 = $5040 * $5041;
               $5043 = $5038 + $5042;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x663,$5019,$5043,1.9999999999999999E-6);
               $5044 = ((($x663)) + 8|0);
               $5045 = HEAP8[$5044>>0]|0;
               $5046 = $5045&1;
               if (!($5046)) {
                break L53;
               }
               $5047 = $x657;
               $5048 = -1.0 * $5047;
               $5049 = $x658;
               $5050 = $5048 * $5049;
               $5051 = $x660;
               $5052 = -1.0 * $5051;
               $5053 = $x661;
               $5054 = $5052 * $5053;
               $5055 = $5050 + $5054;
               $5056 = $x658;
               $5057 = -1.0 * $5056;
               $5058 = $x661;
               $5059 = $5057 * $5058;
               $5060 = $5055 + $5059;
               $5061 = $x657;
               $5062 = -1.0 * $5061;
               $5063 = $x660;
               $5064 = $5062 * $5063;
               $5065 = $5060 + $5064;
               $5066 = ((($5)) + 88|0);
               $5067 = +HEAPF64[$5066>>3];
               $5068 = 0.020299999999999999 * $5067;
               $5069 = ((($5)) + 512|0);
               $5070 = +HEAPF64[$5069>>3];
               $5071 = $5068 * $5070;
               $5072 = $5065 + $5071;
               $5073 = ((($5)) + 512|0);
               $5074 = +HEAPF64[$5073>>3];
               $5075 = -0.43309999999999998 * $5074;
               $5076 = ((($5)) + 96|0);
               $5077 = +HEAPF64[$5076>>3];
               $5078 = $5075 * $5077;
               $5079 = $5072 + $5078;
               $5080 = ((($5)) + 512|0);
               $5081 = +HEAPF64[$5080>>3];
               $5082 = -0.43180000000000002 * $5081;
               $5083 = $5079 + $5082;
               $5084 = (+__Z6IKsignd($5083));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x664,$5084,-1);
               $5085 = ((($x664)) + 8|0);
               $5086 = HEAP8[$5085>>0]|0;
               $5087 = $5086&1;
               if (!($5087)) {
                break L53;
               }
               $5088 = +HEAPF64[$x663>>3];
               $5089 = -1.5707963267949001 + $5088;
               $5090 = +HEAPF64[$x664>>3];
               $5091 = 1.5707963267949001 * $5090;
               $5092 = $5089 + $5091;
               HEAPF64[$j1array94>>3] = $5092;
               $5093 = +HEAPF64[$j1array94>>3];
               $5094 = (+__Z5IKsind($5093));
               HEAPF64[$sj1array96>>3] = $5094;
               $5095 = +HEAPF64[$j1array94>>3];
               $5096 = (+__Z5IKcosd($5095));
               HEAPF64[$cj1array95>>3] = $5096;
               $5097 = +HEAPF64[$j1array94>>3];
               $5098 = $5097 > 3.14159265358979;
               $5099 = +HEAPF64[$j1array94>>3];
               do {
                if ($5098) {
                 $5100 = $5099 - 6.2831853071795898;
                 HEAPF64[$j1array94>>3] = $5100;
                } else {
                 $5101 = $5099 < -3.14159265358979;
                 if (!($5101)) {
                  break;
                 }
                 $5102 = +HEAPF64[$j1array94>>3];
                 $5103 = $5102 + 6.2831853071795898;
                 HEAPF64[$j1array94>>3] = $5103;
                }
               } while(0);
               HEAP8[$j1valid97>>0] = 1;
               $ij198 = 0;
               while(1) {
                $5104 = $ij198;
                $5105 = ($5104|0)<(1);
                if (!($5105)) {
                 break L53;
                }
                $5106 = $ij198;
                $5107 = (($j1valid97) + ($5106)|0);
                $5108 = HEAP8[$5107>>0]|0;
                $5109 = $5108&1;
                do {
                 if ($5109) {
                  $5110 = $ij198;
                  $5111 = $5110&255;
                  $5112 = ((($5)) + 539|0);
                  HEAP8[$5112>>0] = $5111;
                  $5113 = ((($5)) + 539|0);
                  $5114 = ((($5113)) + 1|0);
                  HEAP8[$5114>>0] = -1;
                  $5115 = $ij198;
                  $5116 = (($5115) + 1)|0;
                  $iij199 = $5116;
                  L81: while(1) {
                   $5117 = $iij199;
                   $5118 = ($5117|0)<(1);
                   if (!($5118)) {
                    break;
                   }
                   $5119 = $iij199;
                   $5120 = (($j1valid97) + ($5119)|0);
                   $5121 = HEAP8[$5120>>0]|0;
                   $5122 = $5121&1;
                   do {
                    if ($5122) {
                     $5123 = $ij198;
                     $5124 = (($cj1array95) + ($5123<<3)|0);
                     $5125 = +HEAPF64[$5124>>3];
                     $5126 = $iij199;
                     $5127 = (($cj1array95) + ($5126<<3)|0);
                     $5128 = +HEAPF64[$5127>>3];
                     $5129 = $5125 - $5128;
                     $5130 = (+__Z5IKabsd($5129));
                     $5131 = $5130 < 9.9999999999999995E-7;
                     if (!($5131)) {
                      break;
                     }
                     $5132 = $ij198;
                     $5133 = (($sj1array96) + ($5132<<3)|0);
                     $5134 = +HEAPF64[$5133>>3];
                     $5135 = $iij199;
                     $5136 = (($sj1array96) + ($5135<<3)|0);
                     $5137 = +HEAPF64[$5136>>3];
                     $5138 = $5134 - $5137;
                     $5139 = (+__Z5IKabsd($5138));
                     $5140 = $5139 < 9.9999999999999995E-7;
                     if ($5140) {
                      label = 385;
                      break L81;
                     }
                    }
                   } while(0);
                   $5147 = $iij199;
                   $5148 = (($5147) + 1)|0;
                   $iij199 = $5148;
                  }
                  if ((label|0) == 385) {
                   label = 0;
                   $5141 = $iij199;
                   $5142 = (($j1valid97) + ($5141)|0);
                   HEAP8[$5142>>0] = 0;
                   $5143 = $iij199;
                   $5144 = $5143&255;
                   $5145 = ((($5)) + 539|0);
                   $5146 = ((($5145)) + 1|0);
                   HEAP8[$5146>>0] = $5144;
                  }
                  $5149 = $ij198;
                  $5150 = (($j1array94) + ($5149<<3)|0);
                  $5151 = +HEAPF64[$5150>>3];
                  $5152 = ((($5)) + 40|0);
                  HEAPF64[$5152>>3] = $5151;
                  $5153 = $ij198;
                  $5154 = (($cj1array95) + ($5153<<3)|0);
                  $5155 = +HEAPF64[$5154>>3];
                  $5156 = ((($5)) + 48|0);
                  HEAPF64[$5156>>3] = $5155;
                  $5157 = $ij198;
                  $5158 = (($sj1array96) + ($5157<<3)|0);
                  $5159 = +HEAPF64[$5158>>3];
                  $5160 = ((($5)) + 56|0);
                  HEAPF64[$5160>>3] = $5159;
                  $5161 = ((($5)) + 40|0);
                  $5162 = +HEAPF64[$5161>>3];
                  $5163 = (+__Z5IKsind($5162));
                  $x665 = $5163;
                  $5164 = ((($5)) + 40|0);
                  $5165 = +HEAPF64[$5164>>3];
                  $5166 = (+__Z5IKcosd($5165));
                  $x666 = $5166;
                  $5167 = ((($5)) + 96|0);
                  $5168 = +HEAPF64[$5167>>3];
                  $5169 = 0.43309999999999998 * $5168;
                  $x667 = $5169;
                  $5170 = ((($5)) + 8|0);
                  $5171 = +HEAPF64[$5170>>3];
                  $5172 = ((($5)) + 464|0);
                  $5173 = +HEAPF64[$5172>>3];
                  $5174 = $5171 * $5173;
                  $x668 = $5174;
                  $5175 = ((($5)) + 88|0);
                  $5176 = +HEAPF64[$5175>>3];
                  $5177 = 0.43309999999999998 * $5176;
                  $x669 = $5177;
                  $5178 = ((($5)) + 488|0);
                  $5179 = +HEAPF64[$5178>>3];
                  $5180 = ((($5)) + 16|0);
                  $5181 = +HEAPF64[$5180>>3];
                  $5182 = $5179 * $5181;
                  $x670 = $5182;
                  $5183 = ((($5)) + 88|0);
                  $5184 = +HEAPF64[$5183>>3];
                  $5185 = 0.020299999999999999 * $5184;
                  $x671 = $5185;
                  $5186 = ((($5)) + 96|0);
                  $5187 = +HEAPF64[$5186>>3];
                  $5188 = 0.020299999999999999 * $5187;
                  $x672 = $5188;
                  $5189 = $x666;
                  $5190 = 1.0 * $5189;
                  $x673 = $5190;
                  $5191 = $x665;
                  $5192 = 0.020299999999999999 * $5191;
                  $x674 = $5192;
                  $5193 = ((($5)) + 512|0);
                  $5194 = +HEAPF64[$5193>>3];
                  $5195 = $x665;
                  $5196 = $5194 * $5195;
                  $x675 = $5196;
                  $5197 = $x666;
                  $5198 = 0.86360000000000003 * $5197;
                  $x676 = $5198;
                  $5199 = $x665;
                  $5200 = $x670;
                  $5201 = $5199 * $5200;
                  $5202 = $x665;
                  $5203 = $x668;
                  $5204 = $5202 * $5203;
                  $5205 = $5201 + $5204;
                  $5206 = $x669;
                  $5207 = -1.0 * $5206;
                  $5208 = $5205 + $5207;
                  $5209 = ((($5)) + 512|0);
                  $5210 = +HEAPF64[$5209>>3];
                  $5211 = $x666;
                  $5212 = $5210 * $5211;
                  $5213 = $5208 + $5212;
                  $5214 = $x672;
                  $5215 = -1.0 * $5214;
                  $5216 = $5213 + $5215;
                  HEAPF64[$evalcond100>>3] = $5216;
                  $5217 = $x670;
                  $5218 = $x676;
                  $5219 = $5217 * $5218;
                  $5220 = 0.02406647 + $5219;
                  $5221 = ((($5)) + 528|0);
                  $5222 = +HEAPF64[$5221>>3];
                  $5223 = -1.0 * $5222;
                  $5224 = $5220 + $5223;
                  $5225 = $x675;
                  $5226 = -0.86360000000000003 * $5225;
                  $5227 = $5224 + $5226;
                  $5228 = $x668;
                  $5229 = $x676;
                  $5230 = $5228 * $5229;
                  $5231 = $5227 + $5230;
                  $5232 = ((($evalcond100)) + 8|0);
                  HEAPF64[$5232>>3] = $5231;
                  $5233 = $x668;
                  $5234 = -1.0 * $5233;
                  $5235 = $x673;
                  $5236 = $5234 * $5235;
                  $5237 = 0.43180000000000002 + $5236;
                  $5238 = $x670;
                  $5239 = -1.0 * $5238;
                  $5240 = $x673;
                  $5241 = $5239 * $5240;
                  $5242 = $5237 + $5241;
                  $5243 = $x667;
                  $5244 = $5242 + $5243;
                  $5245 = $x675;
                  $5246 = $5244 + $5245;
                  $5247 = $x671;
                  $5248 = -1.0 * $5247;
                  $5249 = $5246 + $5248;
                  $5250 = ((($evalcond100)) + 16|0);
                  HEAPF64[$5250>>3] = $5249;
                  $5251 = $x665;
                  $5252 = $x667;
                  $5253 = $5251 * $5252;
                  $5254 = $x665;
                  $5255 = 0.43180000000000002 * $5254;
                  $5256 = $5253 + $5255;
                  $5257 = $x665;
                  $5258 = -1.0 * $5257;
                  $5259 = $x671;
                  $5260 = $5258 * $5259;
                  $5261 = $5256 + $5260;
                  $5262 = $x666;
                  $5263 = -1.0 * $5262;
                  $5264 = $x672;
                  $5265 = $5263 * $5264;
                  $5266 = $5261 + $5265;
                  $5267 = ((($5)) + 512|0);
                  $5268 = +HEAPF64[$5267>>3];
                  $5269 = $5266 + $5268;
                  $5270 = $x666;
                  $5271 = -1.0 * $5270;
                  $5272 = $x669;
                  $5273 = $5271 * $5272;
                  $5274 = $5269 + $5273;
                  $5275 = ((($evalcond100)) + 24|0);
                  HEAPF64[$5275>>3] = $5274;
                  $5276 = $x666;
                  $5277 = $x667;
                  $5278 = $5276 * $5277;
                  $5279 = $x665;
                  $5280 = $x672;
                  $5281 = $5279 * $5280;
                  $5282 = $5278 + $5281;
                  $5283 = $x665;
                  $5284 = $x669;
                  $5285 = $5283 * $5284;
                  $5286 = $5282 + $5285;
                  $5287 = $x666;
                  $5288 = 0.43180000000000002 * $5287;
                  $5289 = $5286 + $5288;
                  $5290 = $x668;
                  $5291 = -1.0 * $5290;
                  $5292 = $5289 + $5291;
                  $5293 = $x666;
                  $5294 = -1.0 * $5293;
                  $5295 = $x671;
                  $5296 = $5294 * $5295;
                  $5297 = $5292 + $5296;
                  $5298 = $x670;
                  $5299 = -1.0 * $5298;
                  $5300 = $5297 + $5299;
                  $5301 = ((($evalcond100)) + 32|0);
                  HEAPF64[$5301>>3] = $5300;
                  $5302 = +HEAPF64[$evalcond100>>3];
                  $5303 = (+__Z5IKabsd($5302));
                  $5304 = $5303 > 5.0000000000000004E-6;
                  if ($5304) {
                   break;
                  }
                  $5305 = ((($evalcond100)) + 8|0);
                  $5306 = +HEAPF64[$5305>>3];
                  $5307 = (+__Z5IKabsd($5306));
                  $5308 = $5307 > 5.0000000000000004E-6;
                  if ($5308) {
                   break;
                  }
                  $5309 = ((($evalcond100)) + 16|0);
                  $5310 = +HEAPF64[$5309>>3];
                  $5311 = (+__Z5IKabsd($5310));
                  $5312 = $5311 > 5.0000000000000004E-6;
                  if ($5312) {
                   break;
                  }
                  $5313 = ((($evalcond100)) + 24|0);
                  $5314 = +HEAPF64[$5313>>3];
                  $5315 = (+__Z5IKabsd($5314));
                  $5316 = $5315 > 5.0000000000000004E-6;
                  if ($5316) {
                   break;
                  }
                  $5317 = ((($evalcond100)) + 32|0);
                  $5318 = +HEAPF64[$5317>>3];
                  $5319 = (+__Z5IKabsd($5318));
                  $5320 = $5319 > 5.0000000000000004E-6;
                  if ($5320) {
                   break;
                  }
                  $5321 = $4;
                  __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($5,$5321);
                 }
                } while(0);
                $5322 = $ij198;
                $5323 = (($5322) + 1)|0;
                $ij198 = $5323;
               }
              }
             } while(0);
             $3960 = ((($5)) + 88|0);
             $3961 = +HEAPF64[$3960>>3];
             $3962 = ((($5)) + 512|0);
             $3963 = +HEAPF64[$3962>>3];
             $3964 = $3961 * $3963;
             $x591 = $3964;
             $3965 = ((($5)) + 488|0);
             $3966 = +HEAPF64[$3965>>3];
             $3967 = ((($5)) + 16|0);
             $3968 = +HEAPF64[$3967>>3];
             $3969 = $3966 * $3968;
             $x592 = $3969;
             $3970 = ((($5)) + 96|0);
             $3971 = +HEAPF64[$3970>>3];
             $3972 = 935.06290000000001 * $3971;
             $x593 = $3972;
             $3973 = ((($5)) + 88|0);
             $3974 = +HEAPF64[$3973>>3];
             $3975 = 1.0 * $3974;
             $x594 = $3975;
             $3976 = ((($5)) + 96|0);
             $3977 = +HEAPF64[$3976>>3];
             $3978 = 21.3349753694581 * $3977;
             $x595 = $3978;
             $3979 = ((($5)) + 8|0);
             $3980 = +HEAPF64[$3979>>3];
             $3981 = ((($5)) + 464|0);
             $3982 = +HEAPF64[$3981>>3];
             $3983 = $3980 * $3982;
             $x596 = $3983;
             $3984 = ((($5)) + 528|0);
             $3985 = +HEAPF64[$3984>>3];
             $3986 = 1082.75 * $3985;
             $x597 = $3986;
             $3987 = ((($5)) + 512|0);
             $3988 = +HEAPF64[$3987>>3];
             $3989 = ((($5)) + 96|0);
             $3990 = +HEAPF64[$3989>>3];
             $3991 = $3988 * $3990;
             $x598 = $3991;
             $3992 = ((($5)) + 88|0);
             $3993 = +HEAPF64[$3992>>3];
             $3994 = 43.8277 * $3993;
             $x599 = $3994;
             $3995 = ((($5)) + 528|0);
             $3996 = +HEAPF64[$3995>>3];
             $3997 = 50.75 * $3996;
             $x600 = $3997;
             $3998 = ((($5)) + 512|0);
             $3999 = +HEAPF64[$3998>>3];
             $4000 = 2159.0 * $3999;
             $x601 = $4000;
             $4001 = $x595;
             $4002 = $x596;
             $4003 = $4001 * $4002;
             $4004 = $x598;
             $4005 = -1.0 * $4004;
             $4006 = $4003 + $4005;
             $4007 = $x592;
             $4008 = -1.0 * $4007;
             $4009 = $x594;
             $4010 = $4008 * $4009;
             $4011 = $4006 + $4010;
             $4012 = $x591;
             $4013 = -21.3349753694581 * $4012;
             $4014 = $4011 + $4013;
             $4015 = $x594;
             $4016 = -1.0 * $4015;
             $4017 = $x596;
             $4018 = $4016 * $4017;
             $4019 = $4014 + $4018;
             $4020 = $x592;
             $4021 = 21.2709359605911 * $4020;
             $4022 = $4019 + $4021;
             $4023 = $x596;
             $4024 = 21.2709359605911 * $4023;
             $4025 = $4022 + $4024;
             $4026 = $x592;
             $4027 = $x595;
             $4028 = $4026 * $4027;
             $4029 = $4025 + $4028;
             HEAPF64[$j1eval78>>3] = $4029;
             $4030 = $x598;
             $4031 = -43.8277 * $4030;
             $4032 = $x596;
             $4033 = -1.0 * $4032;
             $4034 = $x599;
             $4035 = $4033 * $4034;
             $4036 = $4031 + $4035;
             $4037 = $x592;
             $4038 = -1.0 * $4037;
             $4039 = $x599;
             $4040 = $4038 * $4039;
             $4041 = $4036 + $4040;
             $4042 = $x596;
             $4043 = 932.25620000000004 * $4042;
             $4044 = $4041 + $4043;
             $4045 = $x592;
             $4046 = 932.25620000000004 * $4045;
             $4047 = $4044 + $4046;
             $4048 = $x591;
             $4049 = -935.06290000000001 * $4048;
             $4050 = $4047 + $4049;
             $4051 = $x593;
             $4052 = $x596;
             $4053 = $4051 * $4052;
             $4054 = $4050 + $4053;
             $4055 = $x592;
             $4056 = $x593;
             $4057 = $4055 * $4056;
             $4058 = $4054 + $4057;
             $4059 = (+__Z6IKsignd($4058));
             $4060 = ((($j1eval78)) + 8|0);
             HEAPF64[$4060>>3] = $4059;
             $4061 = $x592;
             $4062 = -1.0 * $4061;
             $4063 = $x601;
             $4064 = $4062 * $4063;
             $4065 = $x596;
             $4066 = -1.0 * $4065;
             $4067 = $x601;
             $4068 = $4066 * $4067;
             $4069 = $4064 + $4068;
             $4070 = ((($5)) + 88|0);
             $4071 = +HEAPF64[$4070>>3];
             $4072 = $x597;
             $4073 = $4071 * $4072;
             $4074 = $4069 + $4073;
             $4075 = ((($5)) + 96|0);
             $4076 = +HEAPF64[$4075>>3];
             $4077 = -1.2213733524999999 * $4076;
             $4078 = $4074 + $4077;
             $4079 = ((($5)) + 88|0);
             $4080 = +HEAPF64[$4079>>3];
             $4081 = -26.0579703925 * $4080;
             $4082 = $4078 + $4081;
             $4083 = ((($5)) + 96|0);
             $4084 = +HEAPF64[$4083>>3];
             $4085 = $x600;
             $4086 = $4084 * $4085;
             $4087 = $4082 + $4086;
             $4088 = (+__Z5IKabsd($4087));
             $4089 = ((($5)) + 88|0);
             $4090 = +HEAPF64[$4089>>3];
             $4091 = -1.0 * $4090;
             $4092 = $x600;
             $4093 = $4091 * $4092;
             $4094 = -25.979754365000002 + $4093;
             $4095 = ((($5)) + 528|0);
             $4096 = +HEAPF64[$4095>>3];
             $4097 = 1079.5 * $4096;
             $4098 = $4094 + $4097;
             $4099 = ((($5)) + 96|0);
             $4100 = +HEAPF64[$4099>>3];
             $4101 = -26.0579703925 * $4100;
             $4102 = $4098 + $4101;
             $4103 = ((($5)) + 88|0);
             $4104 = +HEAPF64[$4103>>3];
             $4105 = 1.2213733524999999 * $4104;
             $4106 = $4102 + $4105;
             $4107 = ((($5)) + 96|0);
             $4108 = +HEAPF64[$4107>>3];
             $4109 = $x597;
             $4110 = $4108 * $4109;
             $4111 = $4106 + $4110;
             $4112 = ((($5)) + 512|0);
             $4113 = +HEAPF64[$4112>>3];
             $4114 = -1.0 * $4113;
             $4115 = $x601;
             $4116 = $4114 * $4115;
             $4117 = $4111 + $4116;
             $4118 = (+__Z5IKabsd($4117));
             $4119 = $4088 + $4118;
             $4120 = ((($j1eval78)) + 16|0);
             HEAPF64[$4120>>3] = $4119;
             $4121 = +HEAPF64[$j1eval78>>3];
             $4122 = (+__Z5IKabsd($4121));
             $4123 = $4122 < 9.9999999999999995E-7;
             do {
              if (!($4123)) {
               $4124 = ((($j1eval78)) + 8|0);
               $4125 = +HEAPF64[$4124>>3];
               $4126 = (+__Z5IKabsd($4125));
               $4127 = $4126 < 9.9999999999999995E-7;
               if ($4127) {
                break;
               }
               $4128 = ((($j1eval78)) + 16|0);
               $4129 = +HEAPF64[$4128>>3];
               $4130 = (+__Z5IKabsd($4129));
               $4131 = $4130 < 9.9999999999999995E-7;
               if ($4131) {
                break;
               }
               ;HEAP8[$j1valid90>>0]=0|0;
               $4621 = ((($5)) + 541|0);
               HEAP8[$4621>>0] = 1;
               $4622 = ((($5)) + 528|0);
               $4623 = +HEAPF64[$4622>>3];
               $4624 = ((($5)) + 96|0);
               $4625 = +HEAPF64[$4624>>3];
               $4626 = $4623 * $4625;
               $x635 = $4626;
               $4627 = ((($5)) + 88|0);
               $4628 = +HEAPF64[$4627>>3];
               $4629 = ((($5)) + 528|0);
               $4630 = +HEAPF64[$4629>>3];
               $4631 = $4628 * $4630;
               $x636 = $4631;
               $4632 = ((($5)) + 488|0);
               $4633 = +HEAPF64[$4632>>3];
               $4634 = ((($5)) + 16|0);
               $4635 = +HEAPF64[$4634>>3];
               $4636 = $4633 * $4635;
               $x637 = $4636;
               $4637 = ((($5)) + 8|0);
               $4638 = +HEAPF64[$4637>>3];
               $4639 = ((($5)) + 464|0);
               $4640 = +HEAPF64[$4639>>3];
               $4641 = $4638 * $4640;
               $x638 = $4641;
               $4642 = ((($5)) + 96|0);
               $4643 = +HEAPF64[$4642>>3];
               $4644 = 935.06290000000001 * $4643;
               $x639 = $4644;
               $4645 = ((($5)) + 512|0);
               $4646 = +HEAPF64[$4645>>3];
               $4647 = 2159.0 * $4646;
               $x640 = $4647;
               $4648 = ((($5)) + 88|0);
               $4649 = +HEAPF64[$4648>>3];
               $4650 = 43.8277 * $4649;
               $x641 = $4650;
               $4651 = $x635;
               $4652 = 50.75 * $4651;
               $4653 = ((($5)) + 96|0);
               $4654 = +HEAPF64[$4653>>3];
               $4655 = -1.2213733524999999 * $4654;
               $4656 = $4652 + $4655;
               $4657 = ((($5)) + 88|0);
               $4658 = +HEAPF64[$4657>>3];
               $4659 = -26.0579703925 * $4658;
               $4660 = $4656 + $4659;
               $4661 = $x637;
               $4662 = -1.0 * $4661;
               $4663 = $x640;
               $4664 = $4662 * $4663;
               $4665 = $4660 + $4664;
               $4666 = $x636;
               $4667 = 1082.75 * $4666;
               $4668 = $4665 + $4667;
               $4669 = $x638;
               $4670 = -1.0 * $4669;
               $4671 = $x640;
               $4672 = $4670 * $4671;
               $4673 = $4668 + $4672;
               $4674 = ((($5)) + 528|0);
               $4675 = +HEAPF64[$4674>>3];
               $4676 = 1079.5 * $4675;
               $4677 = -25.979754365000002 + $4676;
               $4678 = ((($5)) + 96|0);
               $4679 = +HEAPF64[$4678>>3];
               $4680 = -26.0579703925 * $4679;
               $4681 = $4677 + $4680;
               $4682 = $x636;
               $4683 = -50.75 * $4682;
               $4684 = $4681 + $4683;
               $4685 = ((($5)) + 88|0);
               $4686 = +HEAPF64[$4685>>3];
               $4687 = 1.2213733524999999 * $4686;
               $4688 = $4684 + $4687;
               $4689 = $x635;
               $4690 = 1082.75 * $4689;
               $4691 = $4688 + $4690;
               $4692 = ((($5)) + 512|0);
               $4693 = +HEAPF64[$4692>>3];
               $4694 = -1.0 * $4693;
               $4695 = $x640;
               $4696 = $4694 * $4695;
               $4697 = $4691 + $4696;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x642,$4673,$4697,1.9999999999999999E-6);
               $4698 = ((($x642)) + 8|0);
               $4699 = HEAP8[$4698>>0]|0;
               $4700 = $4699&1;
               if (!($4700)) {
                break L53;
               }
               $4701 = ((($5)) + 88|0);
               $4702 = +HEAPF64[$4701>>3];
               $4703 = -935.06290000000001 * $4702;
               $4704 = ((($5)) + 512|0);
               $4705 = +HEAPF64[$4704>>3];
               $4706 = $4703 * $4705;
               $4707 = ((($5)) + 512|0);
               $4708 = +HEAPF64[$4707>>3];
               $4709 = -43.8277 * $4708;
               $4710 = ((($5)) + 96|0);
               $4711 = +HEAPF64[$4710>>3];
               $4712 = $4709 * $4711;
               $4713 = $4706 + $4712;
               $4714 = $x638;
               $4715 = $x639;
               $4716 = $4714 * $4715;
               $4717 = $4713 + $4716;
               $4718 = $x638;
               $4719 = 932.25620000000004 * $4718;
               $4720 = $4717 + $4719;
               $4721 = $x637;
               $4722 = 932.25620000000004 * $4721;
               $4723 = $4720 + $4722;
               $4724 = $x637;
               $4725 = -1.0 * $4724;
               $4726 = $x641;
               $4727 = $4725 * $4726;
               $4728 = $4723 + $4727;
               $4729 = $x638;
               $4730 = -1.0 * $4729;
               $4731 = $x641;
               $4732 = $4730 * $4731;
               $4733 = $4728 + $4732;
               $4734 = $x637;
               $4735 = $x639;
               $4736 = $4734 * $4735;
               $4737 = $4733 + $4736;
               $4738 = (+__Z6IKsignd($4737));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x643,$4738,-1);
               $4739 = ((($x643)) + 8|0);
               $4740 = HEAP8[$4739>>0]|0;
               $4741 = $4740&1;
               if (!($4741)) {
                break L53;
               }
               $4742 = +HEAPF64[$x642>>3];
               $4743 = -1.5707963267949001 + $4742;
               $4744 = +HEAPF64[$x643>>3];
               $4745 = 1.5707963267949001 * $4744;
               $4746 = $4743 + $4745;
               HEAPF64[$j1array87>>3] = $4746;
               $4747 = +HEAPF64[$j1array87>>3];
               $4748 = (+__Z5IKsind($4747));
               HEAPF64[$sj1array89>>3] = $4748;
               $4749 = +HEAPF64[$j1array87>>3];
               $4750 = (+__Z5IKcosd($4749));
               HEAPF64[$cj1array88>>3] = $4750;
               $4751 = +HEAPF64[$j1array87>>3];
               $4752 = $4751 > 3.14159265358979;
               $4753 = +HEAPF64[$j1array87>>3];
               do {
                if ($4752) {
                 $4754 = $4753 - 6.2831853071795898;
                 HEAPF64[$j1array87>>3] = $4754;
                } else {
                 $4755 = $4753 < -3.14159265358979;
                 if (!($4755)) {
                  break;
                 }
                 $4756 = +HEAPF64[$j1array87>>3];
                 $4757 = $4756 + 6.2831853071795898;
                 HEAPF64[$j1array87>>3] = $4757;
                }
               } while(0);
               HEAP8[$j1valid90>>0] = 1;
               $ij191 = 0;
               while(1) {
                $4758 = $ij191;
                $4759 = ($4758|0)<(1);
                if (!($4759)) {
                 break L53;
                }
                $4760 = $ij191;
                $4761 = (($j1valid90) + ($4760)|0);
                $4762 = HEAP8[$4761>>0]|0;
                $4763 = $4762&1;
                do {
                 if ($4763) {
                  $4764 = $ij191;
                  $4765 = $4764&255;
                  $4766 = ((($5)) + 539|0);
                  HEAP8[$4766>>0] = $4765;
                  $4767 = ((($5)) + 539|0);
                  $4768 = ((($4767)) + 1|0);
                  HEAP8[$4768>>0] = -1;
                  $4769 = $ij191;
                  $4770 = (($4769) + 1)|0;
                  $iij192 = $4770;
                  L114: while(1) {
                   $4771 = $iij192;
                   $4772 = ($4771|0)<(1);
                   if (!($4772)) {
                    break;
                   }
                   $4773 = $iij192;
                   $4774 = (($j1valid90) + ($4773)|0);
                   $4775 = HEAP8[$4774>>0]|0;
                   $4776 = $4775&1;
                   do {
                    if ($4776) {
                     $4777 = $ij191;
                     $4778 = (($cj1array88) + ($4777<<3)|0);
                     $4779 = +HEAPF64[$4778>>3];
                     $4780 = $iij192;
                     $4781 = (($cj1array88) + ($4780<<3)|0);
                     $4782 = +HEAPF64[$4781>>3];
                     $4783 = $4779 - $4782;
                     $4784 = (+__Z5IKabsd($4783));
                     $4785 = $4784 < 9.9999999999999995E-7;
                     if (!($4785)) {
                      break;
                     }
                     $4786 = $ij191;
                     $4787 = (($sj1array89) + ($4786<<3)|0);
                     $4788 = +HEAPF64[$4787>>3];
                     $4789 = $iij192;
                     $4790 = (($sj1array89) + ($4789<<3)|0);
                     $4791 = +HEAPF64[$4790>>3];
                     $4792 = $4788 - $4791;
                     $4793 = (+__Z5IKabsd($4792));
                     $4794 = $4793 < 9.9999999999999995E-7;
                     if ($4794) {
                      label = 362;
                      break L114;
                     }
                    }
                   } while(0);
                   $4801 = $iij192;
                   $4802 = (($4801) + 1)|0;
                   $iij192 = $4802;
                  }
                  if ((label|0) == 362) {
                   label = 0;
                   $4795 = $iij192;
                   $4796 = (($j1valid90) + ($4795)|0);
                   HEAP8[$4796>>0] = 0;
                   $4797 = $iij192;
                   $4798 = $4797&255;
                   $4799 = ((($5)) + 539|0);
                   $4800 = ((($4799)) + 1|0);
                   HEAP8[$4800>>0] = $4798;
                  }
                  $4803 = $ij191;
                  $4804 = (($j1array87) + ($4803<<3)|0);
                  $4805 = +HEAPF64[$4804>>3];
                  $4806 = ((($5)) + 40|0);
                  HEAPF64[$4806>>3] = $4805;
                  $4807 = $ij191;
                  $4808 = (($cj1array88) + ($4807<<3)|0);
                  $4809 = +HEAPF64[$4808>>3];
                  $4810 = ((($5)) + 48|0);
                  HEAPF64[$4810>>3] = $4809;
                  $4811 = $ij191;
                  $4812 = (($sj1array89) + ($4811<<3)|0);
                  $4813 = +HEAPF64[$4812>>3];
                  $4814 = ((($5)) + 56|0);
                  HEAPF64[$4814>>3] = $4813;
                  $4815 = ((($5)) + 40|0);
                  $4816 = +HEAPF64[$4815>>3];
                  $4817 = (+__Z5IKsind($4816));
                  $x644 = $4817;
                  $4818 = ((($5)) + 40|0);
                  $4819 = +HEAPF64[$4818>>3];
                  $4820 = (+__Z5IKcosd($4819));
                  $x645 = $4820;
                  $4821 = ((($5)) + 96|0);
                  $4822 = +HEAPF64[$4821>>3];
                  $4823 = 0.43309999999999998 * $4822;
                  $x646 = $4823;
                  $4824 = ((($5)) + 8|0);
                  $4825 = +HEAPF64[$4824>>3];
                  $4826 = ((($5)) + 464|0);
                  $4827 = +HEAPF64[$4826>>3];
                  $4828 = $4825 * $4827;
                  $x647 = $4828;
                  $4829 = ((($5)) + 88|0);
                  $4830 = +HEAPF64[$4829>>3];
                  $4831 = 0.43309999999999998 * $4830;
                  $x648 = $4831;
                  $4832 = ((($5)) + 488|0);
                  $4833 = +HEAPF64[$4832>>3];
                  $4834 = ((($5)) + 16|0);
                  $4835 = +HEAPF64[$4834>>3];
                  $4836 = $4833 * $4835;
                  $x649 = $4836;
                  $4837 = ((($5)) + 88|0);
                  $4838 = +HEAPF64[$4837>>3];
                  $4839 = 0.020299999999999999 * $4838;
                  $x650 = $4839;
                  $4840 = ((($5)) + 96|0);
                  $4841 = +HEAPF64[$4840>>3];
                  $4842 = 0.020299999999999999 * $4841;
                  $x651 = $4842;
                  $4843 = $x645;
                  $4844 = 1.0 * $4843;
                  $x652 = $4844;
                  $4845 = $x644;
                  $4846 = 0.020299999999999999 * $4845;
                  $x653 = $4846;
                  $4847 = ((($5)) + 512|0);
                  $4848 = +HEAPF64[$4847>>3];
                  $4849 = $x644;
                  $4850 = $4848 * $4849;
                  $x654 = $4850;
                  $4851 = $x645;
                  $4852 = 0.86360000000000003 * $4851;
                  $x655 = $4852;
                  $4853 = $x644;
                  $4854 = $x649;
                  $4855 = $4853 * $4854;
                  $4856 = $x644;
                  $4857 = $x647;
                  $4858 = $4856 * $4857;
                  $4859 = $4855 + $4858;
                  $4860 = $x651;
                  $4861 = -1.0 * $4860;
                  $4862 = $4859 + $4861;
                  $4863 = ((($5)) + 512|0);
                  $4864 = +HEAPF64[$4863>>3];
                  $4865 = $x645;
                  $4866 = $4864 * $4865;
                  $4867 = $4862 + $4866;
                  $4868 = $x648;
                  $4869 = -1.0 * $4868;
                  $4870 = $4867 + $4869;
                  HEAPF64[$evalcond93>>3] = $4870;
                  $4871 = $x647;
                  $4872 = $x655;
                  $4873 = $4871 * $4872;
                  $4874 = 0.02406647 + $4873;
                  $4875 = $x654;
                  $4876 = -0.86360000000000003 * $4875;
                  $4877 = $4874 + $4876;
                  $4878 = $x649;
                  $4879 = $x655;
                  $4880 = $4878 * $4879;
                  $4881 = $4877 + $4880;
                  $4882 = ((($5)) + 528|0);
                  $4883 = +HEAPF64[$4882>>3];
                  $4884 = -1.0 * $4883;
                  $4885 = $4881 + $4884;
                  $4886 = ((($evalcond93)) + 8|0);
                  HEAPF64[$4886>>3] = $4885;
                  $4887 = $x647;
                  $4888 = -1.0 * $4887;
                  $4889 = $x652;
                  $4890 = $4888 * $4889;
                  $4891 = 0.43180000000000002 + $4890;
                  $4892 = $x650;
                  $4893 = -1.0 * $4892;
                  $4894 = $4891 + $4893;
                  $4895 = $x646;
                  $4896 = $4894 + $4895;
                  $4897 = $x654;
                  $4898 = $4896 + $4897;
                  $4899 = $x649;
                  $4900 = -1.0 * $4899;
                  $4901 = $x652;
                  $4902 = $4900 * $4901;
                  $4903 = $4898 + $4902;
                  $4904 = ((($evalcond93)) + 16|0);
                  HEAPF64[$4904>>3] = $4903;
                  $4905 = $x644;
                  $4906 = 0.43180000000000002 * $4905;
                  $4907 = $x644;
                  $4908 = $x646;
                  $4909 = $4907 * $4908;
                  $4910 = $4906 + $4909;
                  $4911 = ((($5)) + 512|0);
                  $4912 = +HEAPF64[$4911>>3];
                  $4913 = $4910 + $4912;
                  $4914 = $x645;
                  $4915 = -1.0 * $4914;
                  $4916 = $x651;
                  $4917 = $4915 * $4916;
                  $4918 = $4913 + $4917;
                  $4919 = $x644;
                  $4920 = -1.0 * $4919;
                  $4921 = $x650;
                  $4922 = $4920 * $4921;
                  $4923 = $4918 + $4922;
                  $4924 = $x645;
                  $4925 = -1.0 * $4924;
                  $4926 = $x648;
                  $4927 = $4925 * $4926;
                  $4928 = $4923 + $4927;
                  $4929 = ((($evalcond93)) + 24|0);
                  HEAPF64[$4929>>3] = $4928;
                  $4930 = $x649;
                  $4931 = -1.0 * $4930;
                  $4932 = $x647;
                  $4933 = -1.0 * $4932;
                  $4934 = $4931 + $4933;
                  $4935 = $x645;
                  $4936 = 0.43180000000000002 * $4935;
                  $4937 = $4934 + $4936;
                  $4938 = $x644;
                  $4939 = $x648;
                  $4940 = $4938 * $4939;
                  $4941 = $4937 + $4940;
                  $4942 = $x644;
                  $4943 = $x651;
                  $4944 = $4942 * $4943;
                  $4945 = $4941 + $4944;
                  $4946 = $x645;
                  $4947 = $x646;
                  $4948 = $4946 * $4947;
                  $4949 = $4945 + $4948;
                  $4950 = $x645;
                  $4951 = -1.0 * $4950;
                  $4952 = $x650;
                  $4953 = $4951 * $4952;
                  $4954 = $4949 + $4953;
                  $4955 = ((($evalcond93)) + 32|0);
                  HEAPF64[$4955>>3] = $4954;
                  $4956 = +HEAPF64[$evalcond93>>3];
                  $4957 = (+__Z5IKabsd($4956));
                  $4958 = $4957 > 5.0000000000000004E-6;
                  if ($4958) {
                   break;
                  }
                  $4959 = ((($evalcond93)) + 8|0);
                  $4960 = +HEAPF64[$4959>>3];
                  $4961 = (+__Z5IKabsd($4960));
                  $4962 = $4961 > 5.0000000000000004E-6;
                  if ($4962) {
                   break;
                  }
                  $4963 = ((($evalcond93)) + 16|0);
                  $4964 = +HEAPF64[$4963>>3];
                  $4965 = (+__Z5IKabsd($4964));
                  $4966 = $4965 > 5.0000000000000004E-6;
                  if ($4966) {
                   break;
                  }
                  $4967 = ((($evalcond93)) + 24|0);
                  $4968 = +HEAPF64[$4967>>3];
                  $4969 = (+__Z5IKabsd($4968));
                  $4970 = $4969 > 5.0000000000000004E-6;
                  if ($4970) {
                   break;
                  }
                  $4971 = ((($evalcond93)) + 32|0);
                  $4972 = +HEAPF64[$4971>>3];
                  $4973 = (+__Z5IKabsd($4972));
                  $4974 = $4973 > 5.0000000000000004E-6;
                  if ($4974) {
                   break;
                  }
                  $4975 = $4;
                  __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($5,$4975);
                 }
                } while(0);
                $4976 = $ij191;
                $4977 = (($4976) + 1)|0;
                $ij191 = $4977;
               }
              }
             } while(0);
             $4132 = ((($5)) + 8|0);
             $4133 = +HEAPF64[$4132>>3];
             $4134 = ((($5)) + 8|0);
             $4135 = +HEAPF64[$4134>>3];
             $4136 = $4133 * $4135;
             $x602 = $4136;
             $4137 = ((($5)) + 488|0);
             $4138 = +HEAPF64[$4137>>3];
             $4139 = ((($5)) + 488|0);
             $4140 = +HEAPF64[$4139>>3];
             $4141 = $4138 * $4140;
             $x603 = $4141;
             $4142 = ((($5)) + 512|0);
             $4143 = +HEAPF64[$4142>>3];
             $4144 = ((($5)) + 512|0);
             $4145 = +HEAPF64[$4144>>3];
             $4146 = $4143 * $4145;
             $x604 = $4146;
             $4147 = ((($5)) + 464|0);
             $4148 = +HEAPF64[$4147>>3];
             $4149 = ((($5)) + 464|0);
             $4150 = +HEAPF64[$4149>>3];
             $4151 = $4148 * $4150;
             $x605 = $4151;
             $4152 = ((($5)) + 88|0);
             $4153 = +HEAPF64[$4152>>3];
             $4154 = 935.06290000000001 * $4153;
             $x606 = $4154;
             $4155 = ((($5)) + 488|0);
             $4156 = +HEAPF64[$4155>>3];
             $4157 = ((($5)) + 16|0);
             $4158 = +HEAPF64[$4157>>3];
             $4159 = $4156 * $4158;
             $x607 = $4159;
             $4160 = ((($5)) + 96|0);
             $4161 = +HEAPF64[$4160>>3];
             $4162 = 43.8277 * $4161;
             $x608 = $4162;
             $4163 = ((($5)) + 528|0);
             $4164 = +HEAPF64[$4163>>3];
             $4165 = 2500.0 * $4164;
             $x609 = $4165;
             $4166 = ((($5)) + 8|0);
             $4167 = +HEAPF64[$4166>>3];
             $4168 = ((($5)) + 464|0);
             $4169 = +HEAPF64[$4168>>3];
             $4170 = $4167 * $4169;
             $x610 = $4170;
             $4171 = $x602;
             $4172 = $x603;
             $4173 = $4171 * $4172;
             $x611 = $4173;
             $4174 = $x602;
             $4175 = $x605;
             $4176 = $4174 * $4175;
             $x612 = $4176;
             $4177 = $x611;
             $4178 = -1.0 * $4177;
             $4179 = $x607;
             $4180 = 2.0 * $4179;
             $4181 = $x610;
             $4182 = $4180 * $4181;
             $4183 = $4178 + $4182;
             $4184 = $x603;
             $4185 = $4183 + $4184;
             $4186 = $x604;
             $4187 = $4185 + $4186;
             $4188 = $x612;
             $4189 = $4187 + $4188;
             HEAPF64[$j1eval79>>3] = $4189;
             $4190 = ((($5)) + 512|0);
             $4191 = +HEAPF64[$4190>>3];
             $4192 = 60.166175000000003 * $4191;
             $4193 = $x608;
             $4194 = $x610;
             $4195 = $4193 * $4194;
             $4196 = $4192 + $4195;
             $4197 = $x607;
             $4198 = $x608;
             $4199 = $4197 * $4198;
             $4200 = $4196 + $4199;
             $4201 = $x606;
             $4202 = $x607;
             $4203 = $4201 * $4202;
             $4204 = $4200 + $4203;
             $4205 = $x606;
             $4206 = $x610;
             $4207 = $4205 * $4206;
             $4208 = $4204 + $4207;
             $4209 = ((($5)) + 512|0);
             $4210 = +HEAPF64[$4209>>3];
             $4211 = -1.0 * $4210;
             $4212 = $x609;
             $4213 = $4211 * $4212;
             $4214 = $4208 + $4213;
             $4215 = (+__Z5IKabsd($4214));
             $4216 = $x607;
             $4217 = -60.166175000000003 * $4216;
             $4218 = $x610;
             $4219 = -60.166175000000003 * $4218;
             $4220 = $4217 + $4219;
             $4221 = $x607;
             $4222 = $x609;
             $4223 = $4221 * $4222;
             $4224 = $4220 + $4223;
             $4225 = $x609;
             $4226 = $x610;
             $4227 = $4225 * $4226;
             $4228 = $4224 + $4227;
             $4229 = ((($5)) + 512|0);
             $4230 = +HEAPF64[$4229>>3];
             $4231 = $x608;
             $4232 = $4230 * $4231;
             $4233 = $4228 + $4232;
             $4234 = ((($5)) + 512|0);
             $4235 = +HEAPF64[$4234>>3];
             $4236 = $x606;
             $4237 = $4235 * $4236;
             $4238 = $4233 + $4237;
             $4239 = (+__Z5IKabsd($4238));
             $4240 = $4215 + $4239;
             $4241 = ((($j1eval79)) + 8|0);
             HEAPF64[$4241>>3] = $4240;
             $4242 = $x612;
             $4243 = 2159.0 * $4242;
             $4244 = $x604;
             $4245 = 2159.0 * $4244;
             $4246 = $4243 + $4245;
             $4247 = $x603;
             $4248 = 2159.0 * $4247;
             $4249 = $4246 + $4248;
             $4250 = $x607;
             $4251 = 4318.0 * $4250;
             $4252 = $x610;
             $4253 = $4251 * $4252;
             $4254 = $4249 + $4253;
             $4255 = $x611;
             $4256 = -2159.0 * $4255;
             $4257 = $4254 + $4256;
             $4258 = (+__Z6IKsignd($4257));
             $4259 = ((($j1eval79)) + 16|0);
             HEAPF64[$4259>>3] = $4258;
             $4260 = +HEAPF64[$j1eval79>>3];
             $4261 = (+__Z5IKabsd($4260));
             $4262 = $4261 < 9.9999999999999995E-7;
             if ($4262) {
              break;
             }
             $4263 = ((($j1eval79)) + 8|0);
             $4264 = +HEAPF64[$4263>>3];
             $4265 = (+__Z5IKabsd($4264));
             $4266 = $4265 < 9.9999999999999995E-7;
             if ($4266) {
              break;
             }
             $4267 = ((($j1eval79)) + 16|0);
             $4268 = +HEAPF64[$4267>>3];
             $4269 = (+__Z5IKabsd($4268));
             $4270 = $4269 < 9.9999999999999995E-7;
             if ($4270) {
              break;
             }
             ;HEAP8[$j1valid83>>0]=0|0;
             $4271 = ((($5)) + 541|0);
             HEAP8[$4271>>0] = 1;
             $4272 = ((($5)) + 8|0);
             $4273 = +HEAPF64[$4272>>3];
             $4274 = ((($5)) + 8|0);
             $4275 = +HEAPF64[$4274>>3];
             $4276 = $4273 * $4275;
             $x613 = $4276;
             $4277 = ((($5)) + 488|0);
             $4278 = +HEAPF64[$4277>>3];
             $4279 = ((($5)) + 488|0);
             $4280 = +HEAPF64[$4279>>3];
             $4281 = $4278 * $4280;
             $x614 = $4281;
             $4282 = ((($5)) + 488|0);
             $4283 = +HEAPF64[$4282>>3];
             $4284 = ((($5)) + 16|0);
             $4285 = +HEAPF64[$4284>>3];
             $4286 = $4283 * $4285;
             $x615 = $4286;
             $4287 = ((($5)) + 96|0);
             $4288 = +HEAPF64[$4287>>3];
             $4289 = 43.8277 * $4288;
             $x616 = $4289;
             $4290 = ((($5)) + 88|0);
             $4291 = +HEAPF64[$4290>>3];
             $4292 = 935.06290000000001 * $4291;
             $x617 = $4292;
             $4293 = ((($5)) + 8|0);
             $4294 = +HEAPF64[$4293>>3];
             $4295 = ((($5)) + 464|0);
             $4296 = +HEAPF64[$4295>>3];
             $4297 = $4294 * $4296;
             $x618 = $4297;
             $4298 = ((($5)) + 528|0);
             $4299 = +HEAPF64[$4298>>3];
             $4300 = 2500.0 * $4299;
             $x619 = $4300;
             $4301 = $x614;
             $4302 = 2159.0 * $4301;
             $x620 = $4302;
             $4303 = $x615;
             $4304 = 4318.0 * $4303;
             $4305 = $x618;
             $4306 = $4304 * $4305;
             $4307 = ((($5)) + 512|0);
             $4308 = +HEAPF64[$4307>>3];
             $4309 = ((($5)) + 512|0);
             $4310 = +HEAPF64[$4309>>3];
             $4311 = $4308 * $4310;
             $4312 = 2159.0 * $4311;
             $4313 = $4306 + $4312;
             $4314 = $x613;
             $4315 = 2159.0 * $4314;
             $4316 = ((($5)) + 464|0);
             $4317 = +HEAPF64[$4316>>3];
             $4318 = ((($5)) + 464|0);
             $4319 = +HEAPF64[$4318>>3];
             $4320 = $4317 * $4319;
             $4321 = $4315 * $4320;
             $4322 = $4313 + $4321;
             $4323 = $x620;
             $4324 = $4322 + $4323;
             $4325 = $x613;
             $4326 = -1.0 * $4325;
             $4327 = $x620;
             $4328 = $4326 * $4327;
             $4329 = $4324 + $4328;
             $4330 = (+__Z6IKsignd($4329));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x621,$4330,-1);
             $4331 = ((($x621)) + 8|0);
             $4332 = HEAP8[$4331>>0]|0;
             $4333 = $4332&1;
             if (!($4333)) {
              break;
             }
             $4334 = ((($5)) + 512|0);
             $4335 = +HEAPF64[$4334>>3];
             $4336 = 60.166175000000003 * $4335;
             $4337 = $x616;
             $4338 = $x618;
             $4339 = $4337 * $4338;
             $4340 = $4336 + $4339;
             $4341 = $x617;
             $4342 = $x618;
             $4343 = $4341 * $4342;
             $4344 = $4340 + $4343;
             $4345 = ((($5)) + 512|0);
             $4346 = +HEAPF64[$4345>>3];
             $4347 = -1.0 * $4346;
             $4348 = $x619;
             $4349 = $4347 * $4348;
             $4350 = $4344 + $4349;
             $4351 = $x615;
             $4352 = $x617;
             $4353 = $4351 * $4352;
             $4354 = $4350 + $4353;
             $4355 = $x615;
             $4356 = $x616;
             $4357 = $4355 * $4356;
             $4358 = $4354 + $4357;
             $4359 = $x618;
             $4360 = -60.166175000000003 * $4359;
             $4361 = $x615;
             $4362 = -60.166175000000003 * $4361;
             $4363 = $4360 + $4362;
             $4364 = ((($5)) + 512|0);
             $4365 = +HEAPF64[$4364>>3];
             $4366 = $x617;
             $4367 = $4365 * $4366;
             $4368 = $4363 + $4367;
             $4369 = ((($5)) + 512|0);
             $4370 = +HEAPF64[$4369>>3];
             $4371 = $x616;
             $4372 = $4370 * $4371;
             $4373 = $4368 + $4372;
             $4374 = $x615;
             $4375 = $x619;
             $4376 = $4374 * $4375;
             $4377 = $4373 + $4376;
             $4378 = $x618;
             $4379 = $x619;
             $4380 = $4378 * $4379;
             $4381 = $4377 + $4380;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x622,$4358,$4381,1.9999999999999999E-6);
             $4382 = ((($x622)) + 8|0);
             $4383 = HEAP8[$4382>>0]|0;
             $4384 = $4383&1;
             if (!($4384)) {
              break;
             }
             $4385 = +HEAPF64[$x621>>3];
             $4386 = 1.5707963267949001 * $4385;
             $4387 = -1.5707963267949001 + $4386;
             $4388 = +HEAPF64[$x622>>3];
             $4389 = $4387 + $4388;
             HEAPF64[$j1array80>>3] = $4389;
             $4390 = +HEAPF64[$j1array80>>3];
             $4391 = (+__Z5IKsind($4390));
             HEAPF64[$sj1array82>>3] = $4391;
             $4392 = +HEAPF64[$j1array80>>3];
             $4393 = (+__Z5IKcosd($4392));
             HEAPF64[$cj1array81>>3] = $4393;
             $4394 = +HEAPF64[$j1array80>>3];
             $4395 = $4394 > 3.14159265358979;
             $4396 = +HEAPF64[$j1array80>>3];
             do {
              if ($4395) {
               $4397 = $4396 - 6.2831853071795898;
               HEAPF64[$j1array80>>3] = $4397;
              } else {
               $4398 = $4396 < -3.14159265358979;
               if (!($4398)) {
                break;
               }
               $4399 = +HEAPF64[$j1array80>>3];
               $4400 = $4399 + 6.2831853071795898;
               HEAPF64[$j1array80>>3] = $4400;
              }
             } while(0);
             HEAP8[$j1valid83>>0] = 1;
             $ij184 = 0;
             while(1) {
              $4401 = $ij184;
              $4402 = ($4401|0)<(1);
              if (!($4402)) {
               break L53;
              }
              $4403 = $ij184;
              $4404 = (($j1valid83) + ($4403)|0);
              $4405 = HEAP8[$4404>>0]|0;
              $4406 = $4405&1;
              do {
               if ($4406) {
                $4407 = $ij184;
                $4408 = $4407&255;
                $4409 = ((($5)) + 539|0);
                HEAP8[$4409>>0] = $4408;
                $4410 = ((($5)) + 539|0);
                $4411 = ((($4410)) + 1|0);
                HEAP8[$4411>>0] = -1;
                $4412 = $ij184;
                $4413 = (($4412) + 1)|0;
                $iij185 = $4413;
                L146: while(1) {
                 $4414 = $iij185;
                 $4415 = ($4414|0)<(1);
                 if (!($4415)) {
                  break;
                 }
                 $4416 = $iij185;
                 $4417 = (($j1valid83) + ($4416)|0);
                 $4418 = HEAP8[$4417>>0]|0;
                 $4419 = $4418&1;
                 do {
                  if ($4419) {
                   $4420 = $ij184;
                   $4421 = (($cj1array81) + ($4420<<3)|0);
                   $4422 = +HEAPF64[$4421>>3];
                   $4423 = $iij185;
                   $4424 = (($cj1array81) + ($4423<<3)|0);
                   $4425 = +HEAPF64[$4424>>3];
                   $4426 = $4422 - $4425;
                   $4427 = (+__Z5IKabsd($4426));
                   $4428 = $4427 < 9.9999999999999995E-7;
                   if (!($4428)) {
                    break;
                   }
                   $4429 = $ij184;
                   $4430 = (($sj1array82) + ($4429<<3)|0);
                   $4431 = +HEAPF64[$4430>>3];
                   $4432 = $iij185;
                   $4433 = (($sj1array82) + ($4432<<3)|0);
                   $4434 = +HEAPF64[$4433>>3];
                   $4435 = $4431 - $4434;
                   $4436 = (+__Z5IKabsd($4435));
                   $4437 = $4436 < 9.9999999999999995E-7;
                   if ($4437) {
                    label = 339;
                    break L146;
                   }
                  }
                 } while(0);
                 $4444 = $iij185;
                 $4445 = (($4444) + 1)|0;
                 $iij185 = $4445;
                }
                if ((label|0) == 339) {
                 label = 0;
                 $4438 = $iij185;
                 $4439 = (($j1valid83) + ($4438)|0);
                 HEAP8[$4439>>0] = 0;
                 $4440 = $iij185;
                 $4441 = $4440&255;
                 $4442 = ((($5)) + 539|0);
                 $4443 = ((($4442)) + 1|0);
                 HEAP8[$4443>>0] = $4441;
                }
                $4446 = $ij184;
                $4447 = (($j1array80) + ($4446<<3)|0);
                $4448 = +HEAPF64[$4447>>3];
                $4449 = ((($5)) + 40|0);
                HEAPF64[$4449>>3] = $4448;
                $4450 = $ij184;
                $4451 = (($cj1array81) + ($4450<<3)|0);
                $4452 = +HEAPF64[$4451>>3];
                $4453 = ((($5)) + 48|0);
                HEAPF64[$4453>>3] = $4452;
                $4454 = $ij184;
                $4455 = (($sj1array82) + ($4454<<3)|0);
                $4456 = +HEAPF64[$4455>>3];
                $4457 = ((($5)) + 56|0);
                HEAPF64[$4457>>3] = $4456;
                $4458 = ((($5)) + 40|0);
                $4459 = +HEAPF64[$4458>>3];
                $4460 = (+__Z5IKsind($4459));
                $x623 = $4460;
                $4461 = ((($5)) + 40|0);
                $4462 = +HEAPF64[$4461>>3];
                $4463 = (+__Z5IKcosd($4462));
                $x624 = $4463;
                $4464 = ((($5)) + 96|0);
                $4465 = +HEAPF64[$4464>>3];
                $4466 = 0.43309999999999998 * $4465;
                $x625 = $4466;
                $4467 = ((($5)) + 8|0);
                $4468 = +HEAPF64[$4467>>3];
                $4469 = ((($5)) + 464|0);
                $4470 = +HEAPF64[$4469>>3];
                $4471 = $4468 * $4470;
                $x626 = $4471;
                $4472 = ((($5)) + 88|0);
                $4473 = +HEAPF64[$4472>>3];
                $4474 = 0.43309999999999998 * $4473;
                $x627 = $4474;
                $4475 = ((($5)) + 488|0);
                $4476 = +HEAPF64[$4475>>3];
                $4477 = ((($5)) + 16|0);
                $4478 = +HEAPF64[$4477>>3];
                $4479 = $4476 * $4478;
                $x628 = $4479;
                $4480 = ((($5)) + 88|0);
                $4481 = +HEAPF64[$4480>>3];
                $4482 = 0.020299999999999999 * $4481;
                $x629 = $4482;
                $4483 = ((($5)) + 96|0);
                $4484 = +HEAPF64[$4483>>3];
                $4485 = 0.020299999999999999 * $4484;
                $x630 = $4485;
                $4486 = $x624;
                $4487 = 1.0 * $4486;
                $x631 = $4487;
                $4488 = $x623;
                $4489 = 0.020299999999999999 * $4488;
                $x632 = $4489;
                $4490 = ((($5)) + 512|0);
                $4491 = +HEAPF64[$4490>>3];
                $4492 = $x623;
                $4493 = $4491 * $4492;
                $x633 = $4493;
                $4494 = $x624;
                $4495 = 0.86360000000000003 * $4494;
                $x634 = $4495;
                $4496 = ((($5)) + 512|0);
                $4497 = +HEAPF64[$4496>>3];
                $4498 = $x624;
                $4499 = $4497 * $4498;
                $4500 = $x627;
                $4501 = -1.0 * $4500;
                $4502 = $4499 + $4501;
                $4503 = $x630;
                $4504 = -1.0 * $4503;
                $4505 = $4502 + $4504;
                $4506 = $x623;
                $4507 = $x626;
                $4508 = $4506 * $4507;
                $4509 = $4505 + $4508;
                $4510 = $x623;
                $4511 = $x628;
                $4512 = $4510 * $4511;
                $4513 = $4509 + $4512;
                HEAPF64[$evalcond86>>3] = $4513;
                $4514 = $x628;
                $4515 = $x634;
                $4516 = $4514 * $4515;
                $4517 = 0.02406647 + $4516;
                $4518 = ((($5)) + 528|0);
                $4519 = +HEAPF64[$4518>>3];
                $4520 = -1.0 * $4519;
                $4521 = $4517 + $4520;
                $4522 = $x633;
                $4523 = -0.86360000000000003 * $4522;
                $4524 = $4521 + $4523;
                $4525 = $x626;
                $4526 = $x634;
                $4527 = $4525 * $4526;
                $4528 = $4524 + $4527;
                $4529 = ((($evalcond86)) + 8|0);
                HEAPF64[$4529>>3] = $4528;
                $4530 = $x628;
                $4531 = -1.0 * $4530;
                $4532 = $x631;
                $4533 = $4531 * $4532;
                $4534 = 0.43180000000000002 + $4533;
                $4535 = $x629;
                $4536 = -1.0 * $4535;
                $4537 = $4534 + $4536;
                $4538 = $x625;
                $4539 = $4537 + $4538;
                $4540 = $x633;
                $4541 = $4539 + $4540;
                $4542 = $x626;
                $4543 = -1.0 * $4542;
                $4544 = $x631;
                $4545 = $4543 * $4544;
                $4546 = $4541 + $4545;
                $4547 = ((($evalcond86)) + 16|0);
                HEAPF64[$4547>>3] = $4546;
                $4548 = $x623;
                $4549 = -1.0 * $4548;
                $4550 = $x629;
                $4551 = $4549 * $4550;
                $4552 = $x624;
                $4553 = -1.0 * $4552;
                $4554 = $x627;
                $4555 = $4553 * $4554;
                $4556 = $4551 + $4555;
                $4557 = $x624;
                $4558 = -1.0 * $4557;
                $4559 = $x630;
                $4560 = $4558 * $4559;
                $4561 = $4556 + $4560;
                $4562 = $x623;
                $4563 = 0.43180000000000002 * $4562;
                $4564 = $4561 + $4563;
                $4565 = ((($5)) + 512|0);
                $4566 = +HEAPF64[$4565>>3];
                $4567 = $4564 + $4566;
                $4568 = $x623;
                $4569 = $x625;
                $4570 = $4568 * $4569;
                $4571 = $4567 + $4570;
                $4572 = ((($evalcond86)) + 24|0);
                HEAPF64[$4572>>3] = $4571;
                $4573 = $x624;
                $4574 = -1.0 * $4573;
                $4575 = $x629;
                $4576 = $4574 * $4575;
                $4577 = $x624;
                $4578 = 0.43180000000000002 * $4577;
                $4579 = $4576 + $4578;
                $4580 = $x624;
                $4581 = $x625;
                $4582 = $4580 * $4581;
                $4583 = $4579 + $4582;
                $4584 = $x628;
                $4585 = -1.0 * $4584;
                $4586 = $4583 + $4585;
                $4587 = $x626;
                $4588 = -1.0 * $4587;
                $4589 = $4586 + $4588;
                $4590 = $x623;
                $4591 = $x630;
                $4592 = $4590 * $4591;
                $4593 = $4589 + $4592;
                $4594 = $x623;
                $4595 = $x627;
                $4596 = $4594 * $4595;
                $4597 = $4593 + $4596;
                $4598 = ((($evalcond86)) + 32|0);
                HEAPF64[$4598>>3] = $4597;
                $4599 = +HEAPF64[$evalcond86>>3];
                $4600 = (+__Z5IKabsd($4599));
                $4601 = $4600 > 5.0000000000000004E-6;
                if ($4601) {
                 break;
                }
                $4602 = ((($evalcond86)) + 8|0);
                $4603 = +HEAPF64[$4602>>3];
                $4604 = (+__Z5IKabsd($4603));
                $4605 = $4604 > 5.0000000000000004E-6;
                if ($4605) {
                 break;
                }
                $4606 = ((($evalcond86)) + 16|0);
                $4607 = +HEAPF64[$4606>>3];
                $4608 = (+__Z5IKabsd($4607));
                $4609 = $4608 > 5.0000000000000004E-6;
                if ($4609) {
                 break;
                }
                $4610 = ((($evalcond86)) + 24|0);
                $4611 = +HEAPF64[$4610>>3];
                $4612 = (+__Z5IKabsd($4611));
                $4613 = $4612 > 5.0000000000000004E-6;
                if ($4613) {
                 break;
                }
                $4614 = ((($evalcond86)) + 32|0);
                $4615 = +HEAPF64[$4614>>3];
                $4616 = (+__Z5IKabsd($4615));
                $4617 = $4616 > 5.0000000000000004E-6;
                if ($4617) {
                 break;
                }
                $4618 = $4;
                __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($5,$4618);
               }
              } while(0);
              $4619 = $ij184;
              $4620 = (($4619) + 1)|0;
              $ij184 = $4620;
             }
            }
           } while(0);
           $5324 = $ij075;
           $5325 = (($5324) + 1)|0;
           $ij075 = $5325;
          }
         }
        }
        $491 = ((($5)) + 88|0);
        $492 = +HEAPF64[$491>>3];
        $493 = ((($5)) + 88|0);
        $494 = +HEAPF64[$493>>3];
        $495 = $492 * $494;
        $496 = 10.723110042279201 * $495;
        $497 = 10.6354679802956 + $496;
        $498 = ((($5)) + 88|0);
        $499 = +HEAPF64[$498>>3];
        $500 = -1.0 * $499;
        $501 = $497 + $500;
        $502 = ((($5)) + 96|0);
        $503 = +HEAPF64[$502>>3];
        $504 = 21.3349753694581 * $503;
        $505 = $501 + $504;
        $506 = ((($5)) + 96|0);
        $507 = +HEAPF64[$506>>3];
        $508 = ((($5)) + 96|0);
        $509 = +HEAPF64[$508>>3];
        $510 = $507 * $509;
        $511 = 10.723110042279201 * $510;
        $512 = $505 + $511;
        HEAPF64[$j1eval>>3] = $512;
        $513 = +HEAPF64[$j1eval>>3];
        $514 = (+__Z5IKabsd($513));
        $515 = $514 < 9.9999999999999995E-7;
        if (!($515)) {
         ;HEAP8[$j1valid>>0]=0|0;HEAP8[$j1valid+1>>0]=0|0;
         $516 = ((($5)) + 541|0);
         HEAP8[$516>>0] = 2;
         $517 = ((($5)) + 88|0);
         $518 = +HEAPF64[$517>>3];
         $519 = -0.43309999999999998 * $518;
         $520 = ((($5)) + 96|0);
         $521 = +HEAPF64[$520>>3];
         $522 = -0.020299999999999999 * $521;
         $523 = $519 + $522;
         $x46 = $523;
         $524 = ((($5)) + 88|0);
         $525 = +HEAPF64[$524>>3];
         $526 = -0.020299999999999999 * $525;
         $527 = 0.43180000000000002 + $526;
         $528 = ((($5)) + 96|0);
         $529 = +HEAPF64[$528>>3];
         $530 = 0.43309999999999998 * $529;
         $531 = $527 + $530;
         $x47 = $531;
         $532 = $x46;
         $533 = $x47;
         __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x50,$532,$533,1.9999999999999999E-6);
         $534 = ((($x50)) + 8|0);
         $535 = HEAP8[$534>>0]|0;
         $536 = $535&1;
         if ($536) {
          $537 = +HEAPF64[$x50>>3];
          $538 = 1.0 * $537;
          $x48 = $538;
          $539 = $x46;
          $540 = $x46;
          $541 = $539 * $540;
          $542 = $x47;
          $543 = $x47;
          $544 = $542 * $543;
          $545 = $541 + $544;
          $546 = $545 < -1.0000000000000001E-5;
          if (!($546)) {
           $547 = $x46;
           $548 = $x46;
           $549 = $547 * $548;
           $550 = $x47;
           $551 = $x47;
           $552 = $550 * $551;
           $553 = $549 + $552;
           $554 = (+__Z6IKsqrtd($553));
           $555 = (+__Z5IKabsd($554));
           __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x51,$555,-1);
           $556 = ((($x51)) + 8|0);
           $557 = HEAP8[$556>>0]|0;
           $558 = $557&1;
           if ($558) {
            $559 = ((($5)) + 512|0);
            $560 = +HEAPF64[$559>>3];
            $561 = +HEAPF64[$x51>>3];
            $562 = $560 * $561;
            $563 = $562 < -1.0000020000000001;
            if (!($563)) {
             $564 = ((($5)) + 512|0);
             $565 = +HEAPF64[$564>>3];
             $566 = +HEAPF64[$x51>>3];
             $567 = $565 * $566;
             $568 = $567 > 1.0000020000000001;
             if (!($568)) {
              $569 = ((($5)) + 512|0);
              $570 = +HEAPF64[$569>>3];
              $571 = +HEAPF64[$x51>>3];
              $572 = $570 * $571;
              $573 = (+__Z6IKasind($572));
              $x49 = $573;
              $574 = $x49;
              $575 = -1.0 * $574;
              $576 = $x48;
              $577 = -1.0 * $576;
              $578 = $575 + $577;
              HEAPF64[$j1array>>3] = $578;
              $579 = +HEAPF64[$j1array>>3];
              $580 = (+__Z5IKsind($579));
              HEAPF64[$sj1array>>3] = $580;
              $581 = +HEAPF64[$j1array>>3];
              $582 = (+__Z5IKcosd($581));
              HEAPF64[$cj1array>>3] = $582;
              $583 = $x48;
              $584 = -1.0 * $583;
              $585 = 3.14159265358979 + $584;
              $586 = $x49;
              $587 = $585 + $586;
              $588 = ((($j1array)) + 8|0);
              HEAPF64[$588>>3] = $587;
              $589 = ((($j1array)) + 8|0);
              $590 = +HEAPF64[$589>>3];
              $591 = (+__Z5IKsind($590));
              $592 = ((($sj1array)) + 8|0);
              HEAPF64[$592>>3] = $591;
              $593 = ((($j1array)) + 8|0);
              $594 = +HEAPF64[$593>>3];
              $595 = (+__Z5IKcosd($594));
              $596 = ((($cj1array)) + 8|0);
              HEAPF64[$596>>3] = $595;
              $597 = +HEAPF64[$j1array>>3];
              $598 = $597 > 3.14159265358979;
              $599 = +HEAPF64[$j1array>>3];
              do {
               if ($598) {
                $600 = $599 - 6.2831853071795898;
                HEAPF64[$j1array>>3] = $600;
               } else {
                $601 = $599 < -3.14159265358979;
                if (!($601)) {
                 break;
                }
                $602 = +HEAPF64[$j1array>>3];
                $603 = $602 + 6.2831853071795898;
                HEAPF64[$j1array>>3] = $603;
               }
              } while(0);
              HEAP8[$j1valid>>0] = 1;
              $604 = ((($j1array)) + 8|0);
              $605 = +HEAPF64[$604>>3];
              $606 = $605 > 3.14159265358979;
              $607 = ((($j1array)) + 8|0);
              $608 = +HEAPF64[$607>>3];
              do {
               if ($606) {
                $609 = $608 - 6.2831853071795898;
                HEAPF64[$607>>3] = $609;
               } else {
                $610 = $608 < -3.14159265358979;
                if (!($610)) {
                 break;
                }
                $611 = ((($j1array)) + 8|0);
                $612 = +HEAPF64[$611>>3];
                $613 = $612 + 6.2831853071795898;
                HEAPF64[$611>>3] = $613;
               }
              } while(0);
              $614 = ((($j1valid)) + 1|0);
              HEAP8[$614>>0] = 1;
              $ij1 = 0;
              while(1) {
               $615 = $ij1;
               $616 = ($615|0)<(2);
               if (!($616)) {
                break L20;
               }
               $617 = $ij1;
               $618 = (($j1valid) + ($617)|0);
               $619 = HEAP8[$618>>0]|0;
               $620 = $619&1;
               L183: do {
                if ($620) {
                 $621 = $ij1;
                 $622 = $621&255;
                 $623 = ((($5)) + 539|0);
                 HEAP8[$623>>0] = $622;
                 $624 = ((($5)) + 539|0);
                 $625 = ((($624)) + 1|0);
                 HEAP8[$625>>0] = -1;
                 $626 = $ij1;
                 $627 = (($626) + 1)|0;
                 $iij1 = $627;
                 L185: while(1) {
                  $628 = $iij1;
                  $629 = ($628|0)<(2);
                  if (!($629)) {
                   break;
                  }
                  $630 = $iij1;
                  $631 = (($j1valid) + ($630)|0);
                  $632 = HEAP8[$631>>0]|0;
                  $633 = $632&1;
                  do {
                   if ($633) {
                    $634 = $ij1;
                    $635 = (($cj1array) + ($634<<3)|0);
                    $636 = +HEAPF64[$635>>3];
                    $637 = $iij1;
                    $638 = (($cj1array) + ($637<<3)|0);
                    $639 = +HEAPF64[$638>>3];
                    $640 = $636 - $639;
                    $641 = (+__Z5IKabsd($640));
                    $642 = $641 < 9.9999999999999995E-7;
                    if (!($642)) {
                     break;
                    }
                    $643 = $ij1;
                    $644 = (($sj1array) + ($643<<3)|0);
                    $645 = +HEAPF64[$644>>3];
                    $646 = $iij1;
                    $647 = (($sj1array) + ($646<<3)|0);
                    $648 = +HEAPF64[$647>>3];
                    $649 = $645 - $648;
                    $650 = (+__Z5IKabsd($649));
                    $651 = $650 < 9.9999999999999995E-7;
                    if ($651) {
                     label = 47;
                     break L185;
                    }
                   }
                  } while(0);
                  $658 = $iij1;
                  $659 = (($658) + 1)|0;
                  $iij1 = $659;
                 }
                 if ((label|0) == 47) {
                  label = 0;
                  $652 = $iij1;
                  $653 = (($j1valid) + ($652)|0);
                  HEAP8[$653>>0] = 0;
                  $654 = $iij1;
                  $655 = $654&255;
                  $656 = ((($5)) + 539|0);
                  $657 = ((($656)) + 1|0);
                  HEAP8[$657>>0] = $655;
                 }
                 $660 = $ij1;
                 $661 = (($j1array) + ($660<<3)|0);
                 $662 = +HEAPF64[$661>>3];
                 $663 = ((($5)) + 40|0);
                 HEAPF64[$663>>3] = $662;
                 $664 = $ij1;
                 $665 = (($cj1array) + ($664<<3)|0);
                 $666 = +HEAPF64[$665>>3];
                 $667 = ((($5)) + 48|0);
                 HEAPF64[$667>>3] = $666;
                 $668 = $ij1;
                 $669 = (($sj1array) + ($668<<3)|0);
                 $670 = +HEAPF64[$669>>3];
                 $671 = ((($5)) + 56|0);
                 HEAPF64[$671>>3] = $670;
                 $672 = ((($5)) + 512|0);
                 $673 = +HEAPF64[$672>>3];
                 $674 = ((($5)) + 512|0);
                 $675 = +HEAPF64[$674>>3];
                 $676 = $673 * $675;
                 $x52 = $676;
                 $677 = ((($5)) + 528|0);
                 $678 = +HEAPF64[$677>>3];
                 $679 = 2.5E+7 * $678;
                 $x53 = $679;
                 $680 = ((($5)) + 48|0);
                 $681 = +HEAPF64[$680>>3];
                 $682 = ((($5)) + 528|0);
                 $683 = +HEAPF64[$682>>3];
                 $684 = $681 * $683;
                 $x54 = $684;
                 $685 = ((($5)) + 48|0);
                 $686 = +HEAPF64[$685>>3];
                 $687 = 3240659.0 * $686;
                 $x55 = $687;
                 $688 = ((($5)) + 512|0);
                 $689 = +HEAPF64[$688>>3];
                 $690 = 2.159E+7 * $689;
                 $691 = ((($5)) + 56|0);
                 $692 = +HEAPF64[$691>>3];
                 $693 = $690 * $692;
                 $x56 = $693;
                 $694 = ((($5)) + 48|0);
                 $695 = +HEAPF64[$694>>3];
                 $696 = $x52;
                 $697 = $695 * $696;
                 $x57 = $697;
                 $698 = $x54;
                 $699 = $x57;
                 $700 = -1.0 * $699;
                 $701 = $698 + $700;
                 HEAPF64[$j0eval1>>3] = $701;
                 $702 = $x57;
                 $703 = -2.159E+7 * $702;
                 $704 = $x54;
                 $705 = 2.159E+7 * $704;
                 $706 = $703 + $705;
                 $707 = (+__Z6IKsignd($706));
                 $708 = ((($j0eval1)) + 8|0);
                 HEAPF64[$708>>3] = $707;
                 $709 = ((($5)) + 464|0);
                 $710 = +HEAPF64[$709>>3];
                 $711 = $x56;
                 $712 = $710 * $711;
                 $713 = ((($5)) + 464|0);
                 $714 = +HEAPF64[$713>>3];
                 $715 = $x53;
                 $716 = $714 * $715;
                 $717 = $712 + $716;
                 $718 = ((($5)) + 464|0);
                 $719 = +HEAPF64[$718>>3];
                 $720 = -601661.75 * $719;
                 $721 = $717 + $720;
                 $722 = ((($5)) + 488|0);
                 $723 = +HEAPF64[$722>>3];
                 $724 = $x55;
                 $725 = $723 * $724;
                 $726 = $721 + $725;
                 $727 = (+__Z5IKabsd($726));
                 $728 = ((($5)) + 464|0);
                 $729 = +HEAPF64[$728>>3];
                 $730 = -1.0 * $729;
                 $731 = $x55;
                 $732 = $730 * $731;
                 $733 = ((($5)) + 488|0);
                 $734 = +HEAPF64[$733>>3];
                 $735 = -601661.75 * $734;
                 $736 = $732 + $735;
                 $737 = ((($5)) + 488|0);
                 $738 = +HEAPF64[$737>>3];
                 $739 = $x56;
                 $740 = $738 * $739;
                 $741 = $736 + $740;
                 $742 = ((($5)) + 488|0);
                 $743 = +HEAPF64[$742>>3];
                 $744 = $x53;
                 $745 = $743 * $744;
                 $746 = $741 + $745;
                 $747 = (+__Z5IKabsd($746));
                 $748 = $727 + $747;
                 $749 = ((($j0eval1)) + 16|0);
                 HEAPF64[$749>>3] = $748;
                 $750 = +HEAPF64[$j0eval1>>3];
                 $751 = (+__Z5IKabsd($750));
                 $752 = $751 < 9.9999999999999995E-7;
                 do {
                  if (!($752)) {
                   $753 = ((($j0eval1)) + 8|0);
                   $754 = +HEAPF64[$753>>3];
                   $755 = (+__Z5IKabsd($754));
                   $756 = $755 < 9.9999999999999995E-7;
                   if ($756) {
                    break;
                   }
                   $757 = ((($j0eval1)) + 16|0);
                   $758 = +HEAPF64[$757>>3];
                   $759 = (+__Z5IKabsd($758));
                   $760 = $759 < 9.9999999999999995E-7;
                   if ($760) {
                    break;
                   }
                   ;HEAP8[$j0valid67>>0]=0|0;
                   $3359 = ((($5)) + 538|0);
                   HEAP8[$3359>>0] = 1;
                   $3360 = ((($5)) + 528|0);
                   $3361 = +HEAPF64[$3360>>3];
                   $3362 = 2.5E+7 * $3361;
                   $x562 = $3362;
                   $3363 = ((($5)) + 48|0);
                   $3364 = +HEAPF64[$3363>>3];
                   $3365 = 2.159E+7 * $3364;
                   $x563 = $3365;
                   $3366 = ((($5)) + 48|0);
                   $3367 = +HEAPF64[$3366>>3];
                   $3368 = 3240659.0 * $3367;
                   $x564 = $3368;
                   $3369 = ((($5)) + 512|0);
                   $3370 = +HEAPF64[$3369>>3];
                   $3371 = 2.159E+7 * $3370;
                   $3372 = ((($5)) + 56|0);
                   $3373 = +HEAPF64[$3372>>3];
                   $3374 = $3371 * $3373;
                   $x565 = $3374;
                   $3375 = ((($5)) + 488|0);
                   $3376 = +HEAPF64[$3375>>3];
                   $3377 = -601661.75 * $3376;
                   $3378 = ((($5)) + 488|0);
                   $3379 = +HEAPF64[$3378>>3];
                   $3380 = $x562;
                   $3381 = $3379 * $3380;
                   $3382 = $3377 + $3381;
                   $3383 = ((($5)) + 488|0);
                   $3384 = +HEAPF64[$3383>>3];
                   $3385 = $x565;
                   $3386 = $3384 * $3385;
                   $3387 = $3382 + $3386;
                   $3388 = ((($5)) + 464|0);
                   $3389 = +HEAPF64[$3388>>3];
                   $3390 = -1.0 * $3389;
                   $3391 = $x564;
                   $3392 = $3390 * $3391;
                   $3393 = $3387 + $3392;
                   $3394 = ((($5)) + 464|0);
                   $3395 = +HEAPF64[$3394>>3];
                   $3396 = -601661.75 * $3395;
                   $3397 = ((($5)) + 488|0);
                   $3398 = +HEAPF64[$3397>>3];
                   $3399 = $x564;
                   $3400 = $3398 * $3399;
                   $3401 = $3396 + $3400;
                   $3402 = ((($5)) + 464|0);
                   $3403 = +HEAPF64[$3402>>3];
                   $3404 = $x562;
                   $3405 = $3403 * $3404;
                   $3406 = $3401 + $3405;
                   $3407 = ((($5)) + 464|0);
                   $3408 = +HEAPF64[$3407>>3];
                   $3409 = $x565;
                   $3410 = $3408 * $3409;
                   $3411 = $3406 + $3410;
                   __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x566,$3393,$3411,1.9999999999999999E-6);
                   $3412 = ((($x566)) + 8|0);
                   $3413 = HEAP8[$3412>>0]|0;
                   $3414 = $3413&1;
                   if (!($3414)) {
                    break L183;
                   }
                   $3415 = $x563;
                   $3416 = -1.0 * $3415;
                   $3417 = ((($5)) + 512|0);
                   $3418 = +HEAPF64[$3417>>3];
                   $3419 = ((($5)) + 512|0);
                   $3420 = +HEAPF64[$3419>>3];
                   $3421 = $3418 * $3420;
                   $3422 = $3416 * $3421;
                   $3423 = ((($5)) + 528|0);
                   $3424 = +HEAPF64[$3423>>3];
                   $3425 = $x563;
                   $3426 = $3424 * $3425;
                   $3427 = $3422 + $3426;
                   $3428 = (+__Z6IKsignd($3427));
                   __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x567,$3428,-1);
                   $3429 = ((($x567)) + 8|0);
                   $3430 = HEAP8[$3429>>0]|0;
                   $3431 = $3430&1;
                   if (!($3431)) {
                    break L183;
                   }
                   $3432 = +HEAPF64[$x566>>3];
                   $3433 = -1.5707963267949001 + $3432;
                   $3434 = +HEAPF64[$x567>>3];
                   $3435 = 1.5707963267949001 * $3434;
                   $3436 = $3433 + $3435;
                   HEAPF64[$j0array64>>3] = $3436;
                   $3437 = +HEAPF64[$j0array64>>3];
                   $3438 = (+__Z5IKsind($3437));
                   HEAPF64[$sj0array66>>3] = $3438;
                   $3439 = +HEAPF64[$j0array64>>3];
                   $3440 = (+__Z5IKcosd($3439));
                   HEAPF64[$cj0array65>>3] = $3440;
                   $3441 = +HEAPF64[$j0array64>>3];
                   $3442 = $3441 > 3.14159265358979;
                   $3443 = +HEAPF64[$j0array64>>3];
                   do {
                    if ($3442) {
                     $3444 = $3443 - 6.2831853071795898;
                     HEAPF64[$j0array64>>3] = $3444;
                    } else {
                     $3445 = $3443 < -3.14159265358979;
                     if (!($3445)) {
                      break;
                     }
                     $3446 = +HEAPF64[$j0array64>>3];
                     $3447 = $3446 + 6.2831853071795898;
                     HEAPF64[$j0array64>>3] = $3447;
                    }
                   } while(0);
                   HEAP8[$j0valid67>>0] = 1;
                   $ij068 = 0;
                   while(1) {
                    $3448 = $ij068;
                    $3449 = ($3448|0)<(1);
                    if (!($3449)) {
                     break L183;
                    }
                    $3450 = $ij068;
                    $3451 = (($j0valid67) + ($3450)|0);
                    $3452 = HEAP8[$3451>>0]|0;
                    $3453 = $3452&1;
                    do {
                     if ($3453) {
                      $3454 = $ij068;
                      $3455 = $3454&255;
                      $3456 = ((($5)) + 536|0);
                      HEAP8[$3456>>0] = $3455;
                      $3457 = ((($5)) + 536|0);
                      $3458 = ((($3457)) + 1|0);
                      HEAP8[$3458>>0] = -1;
                      $3459 = $ij068;
                      $3460 = (($3459) + 1)|0;
                      $iij069 = $3460;
                      L211: while(1) {
                       $3461 = $iij069;
                       $3462 = ($3461|0)<(1);
                       if (!($3462)) {
                        break;
                       }
                       $3463 = $iij069;
                       $3464 = (($j0valid67) + ($3463)|0);
                       $3465 = HEAP8[$3464>>0]|0;
                       $3466 = $3465&1;
                       do {
                        if ($3466) {
                         $3467 = $ij068;
                         $3468 = (($cj0array65) + ($3467<<3)|0);
                         $3469 = +HEAPF64[$3468>>3];
                         $3470 = $iij069;
                         $3471 = (($cj0array65) + ($3470<<3)|0);
                         $3472 = +HEAPF64[$3471>>3];
                         $3473 = $3469 - $3472;
                         $3474 = (+__Z5IKabsd($3473));
                         $3475 = $3474 < 9.9999999999999995E-7;
                         if (!($3475)) {
                          break;
                         }
                         $3476 = $ij068;
                         $3477 = (($sj0array66) + ($3476<<3)|0);
                         $3478 = +HEAPF64[$3477>>3];
                         $3479 = $iij069;
                         $3480 = (($sj0array66) + ($3479<<3)|0);
                         $3481 = +HEAPF64[$3480>>3];
                         $3482 = $3478 - $3481;
                         $3483 = (+__Z5IKabsd($3482));
                         $3484 = $3483 < 9.9999999999999995E-7;
                         if ($3484) {
                          label = 283;
                          break L211;
                         }
                        }
                       } while(0);
                       $3491 = $iij069;
                       $3492 = (($3491) + 1)|0;
                       $iij069 = $3492;
                      }
                      if ((label|0) == 283) {
                       label = 0;
                       $3485 = $iij069;
                       $3486 = (($j0valid67) + ($3485)|0);
                       HEAP8[$3486>>0] = 0;
                       $3487 = $iij069;
                       $3488 = $3487&255;
                       $3489 = ((($5)) + 536|0);
                       $3490 = ((($3489)) + 1|0);
                       HEAP8[$3490>>0] = $3488;
                      }
                      $3493 = $ij068;
                      $3494 = (($j0array64) + ($3493<<3)|0);
                      $3495 = +HEAPF64[$3494>>3];
                      HEAPF64[$5>>3] = $3495;
                      $3496 = $ij068;
                      $3497 = (($cj0array65) + ($3496<<3)|0);
                      $3498 = +HEAPF64[$3497>>3];
                      $3499 = ((($5)) + 8|0);
                      HEAPF64[$3499>>3] = $3498;
                      $3500 = $ij068;
                      $3501 = (($sj0array66) + ($3500<<3)|0);
                      $3502 = +HEAPF64[$3501>>3];
                      $3503 = ((($5)) + 16|0);
                      HEAPF64[$3503>>3] = $3502;
                      $3504 = +HEAPF64[$5>>3];
                      $3505 = (+__Z5IKcosd($3504));
                      $x568 = $3505;
                      $3506 = +HEAPF64[$5>>3];
                      $3507 = (+__Z5IKsind($3506));
                      $x569 = $3507;
                      $3508 = ((($5)) + 96|0);
                      $3509 = +HEAPF64[$3508>>3];
                      $3510 = 0.43309999999999998 * $3509;
                      $x570 = $3510;
                      $3511 = ((($5)) + 88|0);
                      $3512 = +HEAPF64[$3511>>3];
                      $3513 = 0.43309999999999998 * $3512;
                      $x571 = $3513;
                      $3514 = ((($5)) + 512|0);
                      $3515 = +HEAPF64[$3514>>3];
                      $3516 = ((($5)) + 56|0);
                      $3517 = +HEAPF64[$3516>>3];
                      $3518 = $3515 * $3517;
                      $x572 = $3518;
                      $3519 = ((($5)) + 88|0);
                      $3520 = +HEAPF64[$3519>>3];
                      $3521 = 0.020299999999999999 * $3520;
                      $x573 = $3521;
                      $3522 = ((($5)) + 48|0);
                      $3523 = +HEAPF64[$3522>>3];
                      $3524 = 0.86360000000000003 * $3523;
                      $x574 = $3524;
                      $3525 = ((($5)) + 48|0);
                      $3526 = +HEAPF64[$3525>>3];
                      $3527 = 1.0 * $3526;
                      $x575 = $3527;
                      $3528 = ((($5)) + 96|0);
                      $3529 = +HEAPF64[$3528>>3];
                      $3530 = 0.020299999999999999 * $3529;
                      $x576 = $3530;
                      $3531 = ((($5)) + 464|0);
                      $3532 = +HEAPF64[$3531>>3];
                      $3533 = $x568;
                      $3534 = $3532 * $3533;
                      $x577 = $3534;
                      $3535 = ((($5)) + 488|0);
                      $3536 = +HEAPF64[$3535>>3];
                      $3537 = $x569;
                      $3538 = $3536 * $3537;
                      $x578 = $3538;
                      $3539 = ((($5)) + 488|0);
                      $3540 = +HEAPF64[$3539>>3];
                      $3541 = -1.0 * $3540;
                      $3542 = $x568;
                      $3543 = $3541 * $3542;
                      $3544 = 0.15010000000000001 + $3543;
                      $3545 = ((($5)) + 464|0);
                      $3546 = +HEAPF64[$3545>>3];
                      $3547 = $x569;
                      $3548 = $3546 * $3547;
                      $3549 = $3544 + $3548;
                      HEAPF64[$evalcond70>>3] = $3549;
                      $3550 = ((($5)) + 56|0);
                      $3551 = +HEAPF64[$3550>>3];
                      $3552 = $x577;
                      $3553 = $3551 * $3552;
                      $3554 = ((($5)) + 56|0);
                      $3555 = +HEAPF64[$3554>>3];
                      $3556 = $x578;
                      $3557 = $3555 * $3556;
                      $3558 = $3553 + $3557;
                      $3559 = ((($5)) + 48|0);
                      $3560 = +HEAPF64[$3559>>3];
                      $3561 = ((($5)) + 512|0);
                      $3562 = +HEAPF64[$3561>>3];
                      $3563 = $3560 * $3562;
                      $3564 = $3558 + $3563;
                      $3565 = $x571;
                      $3566 = -1.0 * $3565;
                      $3567 = $3564 + $3566;
                      $3568 = $x576;
                      $3569 = -1.0 * $3568;
                      $3570 = $3567 + $3569;
                      $3571 = ((($evalcond70)) + 8|0);
                      HEAPF64[$3571>>3] = $3570;
                      $3572 = $x574;
                      $3573 = $x578;
                      $3574 = $3572 * $3573;
                      $3575 = 0.02406647 + $3574;
                      $3576 = $x574;
                      $3577 = $x577;
                      $3578 = $3576 * $3577;
                      $3579 = $3575 + $3578;
                      $3580 = ((($5)) + 528|0);
                      $3581 = +HEAPF64[$3580>>3];
                      $3582 = -1.0 * $3581;
                      $3583 = $3579 + $3582;
                      $3584 = $x572;
                      $3585 = -0.86360000000000003 * $3584;
                      $3586 = $3583 + $3585;
                      $3587 = ((($evalcond70)) + 16|0);
                      HEAPF64[$3587>>3] = $3586;
                      $3588 = $x575;
                      $3589 = -1.0 * $3588;
                      $3590 = $x578;
                      $3591 = $3589 * $3590;
                      $3592 = 0.43180000000000002 + $3591;
                      $3593 = $x575;
                      $3594 = -1.0 * $3593;
                      $3595 = $x577;
                      $3596 = $3594 * $3595;
                      $3597 = $3592 + $3596;
                      $3598 = $x573;
                      $3599 = -1.0 * $3598;
                      $3600 = $3597 + $3599;
                      $3601 = $x570;
                      $3602 = $3600 + $3601;
                      $3603 = $x572;
                      $3604 = $3602 + $3603;
                      $3605 = ((($evalcond70)) + 24|0);
                      HEAPF64[$3605>>3] = $3604;
                      $3606 = ((($5)) + 56|0);
                      $3607 = +HEAPF64[$3606>>3];
                      $3608 = $x571;
                      $3609 = $3607 * $3608;
                      $3610 = ((($5)) + 56|0);
                      $3611 = +HEAPF64[$3610>>3];
                      $3612 = $x576;
                      $3613 = $3611 * $3612;
                      $3614 = $3609 + $3613;
                      $3615 = ((($5)) + 48|0);
                      $3616 = +HEAPF64[$3615>>3];
                      $3617 = 0.43180000000000002 * $3616;
                      $3618 = $3614 + $3617;
                      $3619 = ((($5)) + 48|0);
                      $3620 = +HEAPF64[$3619>>3];
                      $3621 = -1.0 * $3620;
                      $3622 = $x573;
                      $3623 = $3621 * $3622;
                      $3624 = $3618 + $3623;
                      $3625 = $x577;
                      $3626 = -1.0 * $3625;
                      $3627 = $3624 + $3626;
                      $3628 = $x578;
                      $3629 = -1.0 * $3628;
                      $3630 = $3627 + $3629;
                      $3631 = ((($5)) + 48|0);
                      $3632 = +HEAPF64[$3631>>3];
                      $3633 = $x570;
                      $3634 = $3632 * $3633;
                      $3635 = $3630 + $3634;
                      $3636 = ((($evalcond70)) + 32|0);
                      HEAPF64[$3636>>3] = $3635;
                      $3637 = +HEAPF64[$evalcond70>>3];
                      $3638 = (+__Z5IKabsd($3637));
                      $3639 = $3638 > 5.0000000000000004E-6;
                      if ($3639) {
                       break;
                      }
                      $3640 = ((($evalcond70)) + 8|0);
                      $3641 = +HEAPF64[$3640>>3];
                      $3642 = (+__Z5IKabsd($3641));
                      $3643 = $3642 > 5.0000000000000004E-6;
                      if ($3643) {
                       break;
                      }
                      $3644 = ((($evalcond70)) + 16|0);
                      $3645 = +HEAPF64[$3644>>3];
                      $3646 = (+__Z5IKabsd($3645));
                      $3647 = $3646 > 5.0000000000000004E-6;
                      if ($3647) {
                       break;
                      }
                      $3648 = ((($evalcond70)) + 24|0);
                      $3649 = +HEAPF64[$3648>>3];
                      $3650 = (+__Z5IKabsd($3649));
                      $3651 = $3650 > 5.0000000000000004E-6;
                      if ($3651) {
                       break;
                      }
                      $3652 = ((($evalcond70)) + 32|0);
                      $3653 = +HEAPF64[$3652>>3];
                      $3654 = (+__Z5IKabsd($3653));
                      $3655 = $3654 > 5.0000000000000004E-6;
                      if ($3655) {
                       break;
                      }
                      $3656 = $4;
                      __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($5,$3656);
                     }
                    } while(0);
                    $3657 = $ij068;
                    $3658 = (($3657) + 1)|0;
                    $ij068 = $3658;
                   }
                  }
                 } while(0);
                 $761 = ((($5)) + 512|0);
                 $762 = +HEAPF64[$761>>3];
                 $763 = ((($5)) + 512|0);
                 $764 = +HEAPF64[$763>>3];
                 $765 = $762 * $764;
                 $x58 = $765;
                 $766 = ((($5)) + 88|0);
                 $767 = +HEAPF64[$766>>3];
                 $768 = 4331.0 * $767;
                 $x59 = $768;
                 $769 = ((($5)) + 528|0);
                 $770 = +HEAPF64[$769>>3];
                 $771 = ((($5)) + 56|0);
                 $772 = +HEAPF64[$771>>3];
                 $773 = $770 * $772;
                 $x60 = $773;
                 $774 = ((($5)) + 56|0);
                 $775 = +HEAPF64[$774>>3];
                 $776 = 1501.0 * $775;
                 $x61 = $776;
                 $777 = ((($5)) + 96|0);
                 $778 = +HEAPF64[$777>>3];
                 $779 = 203.0 * $778;
                 $x62 = $779;
                 $780 = ((($5)) + 56|0);
                 $781 = +HEAPF64[$780>>3];
                 $782 = $x58;
                 $783 = $781 * $782;
                 $x63 = $783;
                 $784 = ((($5)) + 48|0);
                 $785 = +HEAPF64[$784>>3];
                 $786 = 1.0E+4 * $785;
                 $787 = ((($5)) + 512|0);
                 $788 = +HEAPF64[$787>>3];
                 $789 = $786 * $788;
                 $x64 = $789;
                 $790 = $x60;
                 $791 = $x63;
                 $792 = -1.0 * $791;
                 $793 = $790 + $792;
                 HEAPF64[$j0eval2>>3] = $793;
                 $794 = ((($5)) + 464|0);
                 $795 = +HEAPF64[$794>>3];
                 $796 = -1.0 * $795;
                 $797 = $x64;
                 $798 = $796 * $797;
                 $799 = ((($5)) + 464|0);
                 $800 = +HEAPF64[$799>>3];
                 $801 = $x59;
                 $802 = $800 * $801;
                 $803 = $798 + $802;
                 $804 = ((($5)) + 464|0);
                 $805 = +HEAPF64[$804>>3];
                 $806 = $x62;
                 $807 = $805 * $806;
                 $808 = $803 + $807;
                 $809 = ((($5)) + 488|0);
                 $810 = +HEAPF64[$809>>3];
                 $811 = $x61;
                 $812 = $810 * $811;
                 $813 = $808 + $812;
                 $814 = (+__Z5IKabsd($813));
                 $815 = ((($5)) + 464|0);
                 $816 = +HEAPF64[$815>>3];
                 $817 = -1.0 * $816;
                 $818 = $x61;
                 $819 = $817 * $818;
                 $820 = ((($5)) + 488|0);
                 $821 = +HEAPF64[$820>>3];
                 $822 = -1.0 * $821;
                 $823 = $x64;
                 $824 = $822 * $823;
                 $825 = $819 + $824;
                 $826 = ((($5)) + 488|0);
                 $827 = +HEAPF64[$826>>3];
                 $828 = $x62;
                 $829 = $827 * $828;
                 $830 = $825 + $829;
                 $831 = ((($5)) + 488|0);
                 $832 = +HEAPF64[$831>>3];
                 $833 = $x59;
                 $834 = $832 * $833;
                 $835 = $830 + $834;
                 $836 = (+__Z5IKabsd($835));
                 $837 = $814 + $836;
                 $838 = ((($j0eval2)) + 8|0);
                 HEAPF64[$838>>3] = $837;
                 $839 = $x60;
                 $840 = 1.0E+4 * $839;
                 $841 = $x63;
                 $842 = -1.0E+4 * $841;
                 $843 = $840 + $842;
                 $844 = (+__Z6IKsignd($843));
                 $845 = ((($j0eval2)) + 16|0);
                 HEAPF64[$845>>3] = $844;
                 $846 = +HEAPF64[$j0eval2>>3];
                 $847 = (+__Z5IKabsd($846));
                 $848 = $847 < 9.9999999999999995E-7;
                 do {
                  if (!($848)) {
                   $849 = ((($j0eval2)) + 8|0);
                   $850 = +HEAPF64[$849>>3];
                   $851 = (+__Z5IKabsd($850));
                   $852 = $851 < 9.9999999999999995E-7;
                   if ($852) {
                    break;
                   }
                   $853 = ((($j0eval2)) + 16|0);
                   $854 = +HEAPF64[$853>>3];
                   $855 = (+__Z5IKabsd($854));
                   $856 = $855 < 9.9999999999999995E-7;
                   if ($856) {
                    break;
                   }
                   ;HEAP8[$j0valid60>>0]=0|0;
                   $3052 = ((($5)) + 538|0);
                   HEAP8[$3052>>0] = 1;
                   $3053 = ((($5)) + 96|0);
                   $3054 = +HEAPF64[$3053>>3];
                   $3055 = 203.0 * $3054;
                   $x544 = $3055;
                   $3056 = ((($5)) + 88|0);
                   $3057 = +HEAPF64[$3056>>3];
                   $3058 = 4331.0 * $3057;
                   $x545 = $3058;
                   $3059 = ((($5)) + 56|0);
                   $3060 = +HEAPF64[$3059>>3];
                   $3061 = 1.0E+4 * $3060;
                   $x546 = $3061;
                   $3062 = ((($5)) + 56|0);
                   $3063 = +HEAPF64[$3062>>3];
                   $3064 = 1501.0 * $3063;
                   $x547 = $3064;
                   $3065 = ((($5)) + 48|0);
                   $3066 = +HEAPF64[$3065>>3];
                   $3067 = 1.0E+4 * $3066;
                   $3068 = ((($5)) + 512|0);
                   $3069 = +HEAPF64[$3068>>3];
                   $3070 = $3067 * $3069;
                   $x548 = $3070;
                   $3071 = ((($5)) + 488|0);
                   $3072 = +HEAPF64[$3071>>3];
                   $3073 = $x544;
                   $3074 = $3072 * $3073;
                   $3075 = ((($5)) + 488|0);
                   $3076 = +HEAPF64[$3075>>3];
                   $3077 = $x545;
                   $3078 = $3076 * $3077;
                   $3079 = $3074 + $3078;
                   $3080 = ((($5)) + 464|0);
                   $3081 = +HEAPF64[$3080>>3];
                   $3082 = -1.0 * $3081;
                   $3083 = $x547;
                   $3084 = $3082 * $3083;
                   $3085 = $3079 + $3084;
                   $3086 = ((($5)) + 488|0);
                   $3087 = +HEAPF64[$3086>>3];
                   $3088 = -1.0 * $3087;
                   $3089 = $x548;
                   $3090 = $3088 * $3089;
                   $3091 = $3085 + $3090;
                   $3092 = ((($5)) + 488|0);
                   $3093 = +HEAPF64[$3092>>3];
                   $3094 = $x547;
                   $3095 = $3093 * $3094;
                   $3096 = ((($5)) + 464|0);
                   $3097 = +HEAPF64[$3096>>3];
                   $3098 = $x545;
                   $3099 = $3097 * $3098;
                   $3100 = $3095 + $3099;
                   $3101 = ((($5)) + 464|0);
                   $3102 = +HEAPF64[$3101>>3];
                   $3103 = $x544;
                   $3104 = $3102 * $3103;
                   $3105 = $3100 + $3104;
                   $3106 = ((($5)) + 464|0);
                   $3107 = +HEAPF64[$3106>>3];
                   $3108 = -1.0 * $3107;
                   $3109 = $x548;
                   $3110 = $3108 * $3109;
                   $3111 = $3105 + $3110;
                   __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x549,$3091,$3111,1.9999999999999999E-6);
                   $3112 = ((($x549)) + 8|0);
                   $3113 = HEAP8[$3112>>0]|0;
                   $3114 = $3113&1;
                   if (!($3114)) {
                    break L183;
                   }
                   $3115 = $x546;
                   $3116 = -1.0 * $3115;
                   $3117 = ((($5)) + 512|0);
                   $3118 = +HEAPF64[$3117>>3];
                   $3119 = ((($5)) + 512|0);
                   $3120 = +HEAPF64[$3119>>3];
                   $3121 = $3118 * $3120;
                   $3122 = $3116 * $3121;
                   $3123 = ((($5)) + 528|0);
                   $3124 = +HEAPF64[$3123>>3];
                   $3125 = $x546;
                   $3126 = $3124 * $3125;
                   $3127 = $3122 + $3126;
                   $3128 = (+__Z6IKsignd($3127));
                   __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x550,$3128,-1);
                   $3129 = ((($x550)) + 8|0);
                   $3130 = HEAP8[$3129>>0]|0;
                   $3131 = $3130&1;
                   if (!($3131)) {
                    break L183;
                   }
                   $3132 = +HEAPF64[$x549>>3];
                   $3133 = -1.5707963267949001 + $3132;
                   $3134 = +HEAPF64[$x550>>3];
                   $3135 = 1.5707963267949001 * $3134;
                   $3136 = $3133 + $3135;
                   HEAPF64[$j0array57>>3] = $3136;
                   $3137 = +HEAPF64[$j0array57>>3];
                   $3138 = (+__Z5IKsind($3137));
                   HEAPF64[$sj0array59>>3] = $3138;
                   $3139 = +HEAPF64[$j0array57>>3];
                   $3140 = (+__Z5IKcosd($3139));
                   HEAPF64[$cj0array58>>3] = $3140;
                   $3141 = +HEAPF64[$j0array57>>3];
                   $3142 = $3141 > 3.14159265358979;
                   $3143 = +HEAPF64[$j0array57>>3];
                   do {
                    if ($3142) {
                     $3144 = $3143 - 6.2831853071795898;
                     HEAPF64[$j0array57>>3] = $3144;
                    } else {
                     $3145 = $3143 < -3.14159265358979;
                     if (!($3145)) {
                      break;
                     }
                     $3146 = +HEAPF64[$j0array57>>3];
                     $3147 = $3146 + 6.2831853071795898;
                     HEAPF64[$j0array57>>3] = $3147;
                    }
                   } while(0);
                   HEAP8[$j0valid60>>0] = 1;
                   $ij061 = 0;
                   while(1) {
                    $3148 = $ij061;
                    $3149 = ($3148|0)<(1);
                    if (!($3149)) {
                     break L183;
                    }
                    $3150 = $ij061;
                    $3151 = (($j0valid60) + ($3150)|0);
                    $3152 = HEAP8[$3151>>0]|0;
                    $3153 = $3152&1;
                    do {
                     if ($3153) {
                      $3154 = $ij061;
                      $3155 = $3154&255;
                      $3156 = ((($5)) + 536|0);
                      HEAP8[$3156>>0] = $3155;
                      $3157 = ((($5)) + 536|0);
                      $3158 = ((($3157)) + 1|0);
                      HEAP8[$3158>>0] = -1;
                      $3159 = $ij061;
                      $3160 = (($3159) + 1)|0;
                      $iij062 = $3160;
                      L244: while(1) {
                       $3161 = $iij062;
                       $3162 = ($3161|0)<(1);
                       if (!($3162)) {
                        break;
                       }
                       $3163 = $iij062;
                       $3164 = (($j0valid60) + ($3163)|0);
                       $3165 = HEAP8[$3164>>0]|0;
                       $3166 = $3165&1;
                       do {
                        if ($3166) {
                         $3167 = $ij061;
                         $3168 = (($cj0array58) + ($3167<<3)|0);
                         $3169 = +HEAPF64[$3168>>3];
                         $3170 = $iij062;
                         $3171 = (($cj0array58) + ($3170<<3)|0);
                         $3172 = +HEAPF64[$3171>>3];
                         $3173 = $3169 - $3172;
                         $3174 = (+__Z5IKabsd($3173));
                         $3175 = $3174 < 9.9999999999999995E-7;
                         if (!($3175)) {
                          break;
                         }
                         $3176 = $ij061;
                         $3177 = (($sj0array59) + ($3176<<3)|0);
                         $3178 = +HEAPF64[$3177>>3];
                         $3179 = $iij062;
                         $3180 = (($sj0array59) + ($3179<<3)|0);
                         $3181 = +HEAPF64[$3180>>3];
                         $3182 = $3178 - $3181;
                         $3183 = (+__Z5IKabsd($3182));
                         $3184 = $3183 < 9.9999999999999995E-7;
                         if ($3184) {
                          label = 260;
                          break L244;
                         }
                        }
                       } while(0);
                       $3191 = $iij062;
                       $3192 = (($3191) + 1)|0;
                       $iij062 = $3192;
                      }
                      if ((label|0) == 260) {
                       label = 0;
                       $3185 = $iij062;
                       $3186 = (($j0valid60) + ($3185)|0);
                       HEAP8[$3186>>0] = 0;
                       $3187 = $iij062;
                       $3188 = $3187&255;
                       $3189 = ((($5)) + 536|0);
                       $3190 = ((($3189)) + 1|0);
                       HEAP8[$3190>>0] = $3188;
                      }
                      $3193 = $ij061;
                      $3194 = (($j0array57) + ($3193<<3)|0);
                      $3195 = +HEAPF64[$3194>>3];
                      HEAPF64[$5>>3] = $3195;
                      $3196 = $ij061;
                      $3197 = (($cj0array58) + ($3196<<3)|0);
                      $3198 = +HEAPF64[$3197>>3];
                      $3199 = ((($5)) + 8|0);
                      HEAPF64[$3199>>3] = $3198;
                      $3200 = $ij061;
                      $3201 = (($sj0array59) + ($3200<<3)|0);
                      $3202 = +HEAPF64[$3201>>3];
                      $3203 = ((($5)) + 16|0);
                      HEAPF64[$3203>>3] = $3202;
                      $3204 = +HEAPF64[$5>>3];
                      $3205 = (+__Z5IKcosd($3204));
                      $x551 = $3205;
                      $3206 = +HEAPF64[$5>>3];
                      $3207 = (+__Z5IKsind($3206));
                      $x552 = $3207;
                      $3208 = ((($5)) + 96|0);
                      $3209 = +HEAPF64[$3208>>3];
                      $3210 = 0.43309999999999998 * $3209;
                      $x553 = $3210;
                      $3211 = ((($5)) + 88|0);
                      $3212 = +HEAPF64[$3211>>3];
                      $3213 = 0.43309999999999998 * $3212;
                      $x554 = $3213;
                      $3214 = ((($5)) + 512|0);
                      $3215 = +HEAPF64[$3214>>3];
                      $3216 = ((($5)) + 56|0);
                      $3217 = +HEAPF64[$3216>>3];
                      $3218 = $3215 * $3217;
                      $x555 = $3218;
                      $3219 = ((($5)) + 88|0);
                      $3220 = +HEAPF64[$3219>>3];
                      $3221 = 0.020299999999999999 * $3220;
                      $x556 = $3221;
                      $3222 = ((($5)) + 48|0);
                      $3223 = +HEAPF64[$3222>>3];
                      $3224 = 0.86360000000000003 * $3223;
                      $x557 = $3224;
                      $3225 = ((($5)) + 48|0);
                      $3226 = +HEAPF64[$3225>>3];
                      $3227 = 1.0 * $3226;
                      $x558 = $3227;
                      $3228 = ((($5)) + 96|0);
                      $3229 = +HEAPF64[$3228>>3];
                      $3230 = 0.020299999999999999 * $3229;
                      $x559 = $3230;
                      $3231 = ((($5)) + 464|0);
                      $3232 = +HEAPF64[$3231>>3];
                      $3233 = $x551;
                      $3234 = $3232 * $3233;
                      $x560 = $3234;
                      $3235 = ((($5)) + 488|0);
                      $3236 = +HEAPF64[$3235>>3];
                      $3237 = $x552;
                      $3238 = $3236 * $3237;
                      $x561 = $3238;
                      $3239 = ((($5)) + 488|0);
                      $3240 = +HEAPF64[$3239>>3];
                      $3241 = -1.0 * $3240;
                      $3242 = $x551;
                      $3243 = $3241 * $3242;
                      $3244 = 0.15010000000000001 + $3243;
                      $3245 = ((($5)) + 464|0);
                      $3246 = +HEAPF64[$3245>>3];
                      $3247 = $x552;
                      $3248 = $3246 * $3247;
                      $3249 = $3244 + $3248;
                      HEAPF64[$evalcond63>>3] = $3249;
                      $3250 = ((($5)) + 48|0);
                      $3251 = +HEAPF64[$3250>>3];
                      $3252 = ((($5)) + 512|0);
                      $3253 = +HEAPF64[$3252>>3];
                      $3254 = $3251 * $3253;
                      $3255 = $x559;
                      $3256 = -1.0 * $3255;
                      $3257 = $3254 + $3256;
                      $3258 = $x554;
                      $3259 = -1.0 * $3258;
                      $3260 = $3257 + $3259;
                      $3261 = ((($5)) + 56|0);
                      $3262 = +HEAPF64[$3261>>3];
                      $3263 = $x561;
                      $3264 = $3262 * $3263;
                      $3265 = $3260 + $3264;
                      $3266 = ((($5)) + 56|0);
                      $3267 = +HEAPF64[$3266>>3];
                      $3268 = $x560;
                      $3269 = $3267 * $3268;
                      $3270 = $3265 + $3269;
                      $3271 = ((($evalcond63)) + 8|0);
                      HEAPF64[$3271>>3] = $3270;
                      $3272 = $x555;
                      $3273 = -0.86360000000000003 * $3272;
                      $3274 = 0.02406647 + $3273;
                      $3275 = ((($5)) + 528|0);
                      $3276 = +HEAPF64[$3275>>3];
                      $3277 = -1.0 * $3276;
                      $3278 = $3274 + $3277;
                      $3279 = $x557;
                      $3280 = $x561;
                      $3281 = $3279 * $3280;
                      $3282 = $3278 + $3281;
                      $3283 = $x557;
                      $3284 = $x560;
                      $3285 = $3283 * $3284;
                      $3286 = $3282 + $3285;
                      $3287 = ((($evalcond63)) + 16|0);
                      HEAPF64[$3287>>3] = $3286;
                      $3288 = $x558;
                      $3289 = -1.0 * $3288;
                      $3290 = $x560;
                      $3291 = $3289 * $3290;
                      $3292 = 0.43180000000000002 + $3291;
                      $3293 = $x558;
                      $3294 = -1.0 * $3293;
                      $3295 = $x561;
                      $3296 = $3294 * $3295;
                      $3297 = $3292 + $3296;
                      $3298 = $x556;
                      $3299 = -1.0 * $3298;
                      $3300 = $3297 + $3299;
                      $3301 = $x553;
                      $3302 = $3300 + $3301;
                      $3303 = $x555;
                      $3304 = $3302 + $3303;
                      $3305 = ((($evalcond63)) + 24|0);
                      HEAPF64[$3305>>3] = $3304;
                      $3306 = ((($5)) + 56|0);
                      $3307 = +HEAPF64[$3306>>3];
                      $3308 = $x554;
                      $3309 = $3307 * $3308;
                      $3310 = ((($5)) + 56|0);
                      $3311 = +HEAPF64[$3310>>3];
                      $3312 = $x559;
                      $3313 = $3311 * $3312;
                      $3314 = $3309 + $3313;
                      $3315 = ((($5)) + 48|0);
                      $3316 = +HEAPF64[$3315>>3];
                      $3317 = 0.43180000000000002 * $3316;
                      $3318 = $3314 + $3317;
                      $3319 = ((($5)) + 48|0);
                      $3320 = +HEAPF64[$3319>>3];
                      $3321 = -1.0 * $3320;
                      $3322 = $x556;
                      $3323 = $3321 * $3322;
                      $3324 = $3318 + $3323;
                      $3325 = ((($5)) + 48|0);
                      $3326 = +HEAPF64[$3325>>3];
                      $3327 = $x553;
                      $3328 = $3326 * $3327;
                      $3329 = $3324 + $3328;
                      $3330 = $x560;
                      $3331 = -1.0 * $3330;
                      $3332 = $3329 + $3331;
                      $3333 = $x561;
                      $3334 = -1.0 * $3333;
                      $3335 = $3332 + $3334;
                      $3336 = ((($evalcond63)) + 32|0);
                      HEAPF64[$3336>>3] = $3335;
                      $3337 = +HEAPF64[$evalcond63>>3];
                      $3338 = (+__Z5IKabsd($3337));
                      $3339 = $3338 > 5.0000000000000004E-6;
                      if ($3339) {
                       break;
                      }
                      $3340 = ((($evalcond63)) + 8|0);
                      $3341 = +HEAPF64[$3340>>3];
                      $3342 = (+__Z5IKabsd($3341));
                      $3343 = $3342 > 5.0000000000000004E-6;
                      if ($3343) {
                       break;
                      }
                      $3344 = ((($evalcond63)) + 16|0);
                      $3345 = +HEAPF64[$3344>>3];
                      $3346 = (+__Z5IKabsd($3345));
                      $3347 = $3346 > 5.0000000000000004E-6;
                      if ($3347) {
                       break;
                      }
                      $3348 = ((($evalcond63)) + 24|0);
                      $3349 = +HEAPF64[$3348>>3];
                      $3350 = (+__Z5IKabsd($3349));
                      $3351 = $3350 > 5.0000000000000004E-6;
                      if ($3351) {
                       break;
                      }
                      $3352 = ((($evalcond63)) + 32|0);
                      $3353 = +HEAPF64[$3352>>3];
                      $3354 = (+__Z5IKabsd($3353));
                      $3355 = $3354 > 5.0000000000000004E-6;
                      if ($3355) {
                       break;
                      }
                      $3356 = $4;
                      __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($5,$3356);
                     }
                    } while(0);
                    $3357 = $ij061;
                    $3358 = (($3357) + 1)|0;
                    $ij061 = $3358;
                   }
                  }
                 } while(0);
                 $857 = ((($5)) + 512|0);
                 $858 = +HEAPF64[$857>>3];
                 $859 = ((($5)) + 512|0);
                 $860 = +HEAPF64[$859>>3];
                 $861 = $858 * $860;
                 $x65 = $861;
                 $862 = ((($5)) + 88|0);
                 $863 = +HEAPF64[$862>>3];
                 $864 = 203.0 * $863;
                 $x66 = $864;
                 $865 = ((($5)) + 48|0);
                 $866 = +HEAPF64[$865>>3];
                 $867 = ((($5)) + 528|0);
                 $868 = +HEAPF64[$867>>3];
                 $869 = $866 * $868;
                 $x67 = $869;
                 $870 = ((($5)) + 48|0);
                 $871 = +HEAPF64[$870>>3];
                 $872 = 1501.0 * $871;
                 $x68 = $872;
                 $873 = ((($5)) + 96|0);
                 $874 = +HEAPF64[$873>>3];
                 $875 = 4331.0 * $874;
                 $x69 = $875;
                 $876 = ((($5)) + 512|0);
                 $877 = +HEAPF64[$876>>3];
                 $878 = 1.0E+4 * $877;
                 $879 = ((($5)) + 56|0);
                 $880 = +HEAPF64[$879>>3];
                 $881 = $878 * $880;
                 $x70 = $881;
                 $882 = ((($5)) + 48|0);
                 $883 = +HEAPF64[$882>>3];
                 $884 = $x65;
                 $885 = $883 * $884;
                 $x71 = $885;
                 $886 = $x67;
                 $887 = $x71;
                 $888 = -1.0 * $887;
                 $889 = $886 + $888;
                 HEAPF64[$j0eval3>>3] = $889;
                 $890 = $x71;
                 $891 = -1.0E+4 * $890;
                 $892 = $x67;
                 $893 = 1.0E+4 * $892;
                 $894 = $891 + $893;
                 $895 = (+__Z6IKsignd($894));
                 $896 = ((($j0eval3)) + 8|0);
                 HEAPF64[$896>>3] = $895;
                 $897 = ((($5)) + 464|0);
                 $898 = +HEAPF64[$897>>3];
                 $899 = -1.0 * $898;
                 $900 = $x66;
                 $901 = $899 * $900;
                 $902 = ((($5)) + 464|0);
                 $903 = +HEAPF64[$902>>3];
                 $904 = $x69;
                 $905 = $903 * $904;
                 $906 = $901 + $905;
                 $907 = ((($5)) + 464|0);
                 $908 = +HEAPF64[$907>>3];
                 $909 = 4318.0 * $908;
                 $910 = $906 + $909;
                 $911 = ((($5)) + 464|0);
                 $912 = +HEAPF64[$911>>3];
                 $913 = $x70;
                 $914 = $912 * $913;
                 $915 = $910 + $914;
                 $916 = ((($5)) + 488|0);
                 $917 = +HEAPF64[$916>>3];
                 $918 = $x68;
                 $919 = $917 * $918;
                 $920 = $915 + $919;
                 $921 = (+__Z5IKabsd($920));
                 $922 = ((($5)) + 488|0);
                 $923 = +HEAPF64[$922>>3];
                 $924 = $x70;
                 $925 = $923 * $924;
                 $926 = ((($5)) + 464|0);
                 $927 = +HEAPF64[$926>>3];
                 $928 = -1.0 * $927;
                 $929 = $x68;
                 $930 = $928 * $929;
                 $931 = $925 + $930;
                 $932 = ((($5)) + 488|0);
                 $933 = +HEAPF64[$932>>3];
                 $934 = 4318.0 * $933;
                 $935 = $931 + $934;
                 $936 = ((($5)) + 488|0);
                 $937 = +HEAPF64[$936>>3];
                 $938 = -1.0 * $937;
                 $939 = $x66;
                 $940 = $938 * $939;
                 $941 = $935 + $940;
                 $942 = ((($5)) + 488|0);
                 $943 = +HEAPF64[$942>>3];
                 $944 = $x69;
                 $945 = $943 * $944;
                 $946 = $941 + $945;
                 $947 = (+__Z5IKabsd($946));
                 $948 = $921 + $947;
                 $949 = ((($j0eval3)) + 16|0);
                 HEAPF64[$949>>3] = $948;
                 $950 = +HEAPF64[$j0eval3>>3];
                 $951 = (+__Z5IKabsd($950));
                 $952 = $951 < 9.9999999999999995E-7;
                 do {
                  if (!($952)) {
                   $953 = ((($j0eval3)) + 8|0);
                   $954 = +HEAPF64[$953>>3];
                   $955 = (+__Z5IKabsd($954));
                   $956 = $955 < 9.9999999999999995E-7;
                   if ($956) {
                    break;
                   }
                   $957 = ((($j0eval3)) + 16|0);
                   $958 = +HEAPF64[$957>>3];
                   $959 = (+__Z5IKabsd($958));
                   $960 = $959 < 9.9999999999999995E-7;
                   if ($960) {
                    break;
                   }
                   ;HEAP8[$j0valid53>>0]=0|0;
                   $2737 = ((($5)) + 538|0);
                   HEAP8[$2737>>0] = 1;
                   $2738 = ((($5)) + 88|0);
                   $2739 = +HEAPF64[$2738>>3];
                   $2740 = 203.0 * $2739;
                   $x526 = $2740;
                   $2741 = ((($5)) + 48|0);
                   $2742 = +HEAPF64[$2741>>3];
                   $2743 = 1501.0 * $2742;
                   $x527 = $2743;
                   $2744 = ((($5)) + 96|0);
                   $2745 = +HEAPF64[$2744>>3];
                   $2746 = 4331.0 * $2745;
                   $x528 = $2746;
                   $2747 = ((($5)) + 48|0);
                   $2748 = +HEAPF64[$2747>>3];
                   $2749 = 1.0E+4 * $2748;
                   $x529 = $2749;
                   $2750 = ((($5)) + 512|0);
                   $2751 = +HEAPF64[$2750>>3];
                   $2752 = 1.0E+4 * $2751;
                   $2753 = ((($5)) + 56|0);
                   $2754 = +HEAPF64[$2753>>3];
                   $2755 = $2752 * $2754;
                   $x530 = $2755;
                   $2756 = ((($5)) + 464|0);
                   $2757 = +HEAPF64[$2756>>3];
                   $2758 = -1.0 * $2757;
                   $2759 = $x527;
                   $2760 = $2758 * $2759;
                   $2761 = ((($5)) + 488|0);
                   $2762 = +HEAPF64[$2761>>3];
                   $2763 = -1.0 * $2762;
                   $2764 = $x526;
                   $2765 = $2763 * $2764;
                   $2766 = $2760 + $2765;
                   $2767 = ((($5)) + 488|0);
                   $2768 = +HEAPF64[$2767>>3];
                   $2769 = 4318.0 * $2768;
                   $2770 = $2766 + $2769;
                   $2771 = ((($5)) + 488|0);
                   $2772 = +HEAPF64[$2771>>3];
                   $2773 = $x528;
                   $2774 = $2772 * $2773;
                   $2775 = $2770 + $2774;
                   $2776 = ((($5)) + 488|0);
                   $2777 = +HEAPF64[$2776>>3];
                   $2778 = $x530;
                   $2779 = $2777 * $2778;
                   $2780 = $2775 + $2779;
                   $2781 = ((($5)) + 464|0);
                   $2782 = +HEAPF64[$2781>>3];
                   $2783 = -1.0 * $2782;
                   $2784 = $x526;
                   $2785 = $2783 * $2784;
                   $2786 = ((($5)) + 464|0);
                   $2787 = +HEAPF64[$2786>>3];
                   $2788 = $x530;
                   $2789 = $2787 * $2788;
                   $2790 = $2785 + $2789;
                   $2791 = ((($5)) + 464|0);
                   $2792 = +HEAPF64[$2791>>3];
                   $2793 = $x528;
                   $2794 = $2792 * $2793;
                   $2795 = $2790 + $2794;
                   $2796 = ((($5)) + 464|0);
                   $2797 = +HEAPF64[$2796>>3];
                   $2798 = 4318.0 * $2797;
                   $2799 = $2795 + $2798;
                   $2800 = ((($5)) + 488|0);
                   $2801 = +HEAPF64[$2800>>3];
                   $2802 = $x527;
                   $2803 = $2801 * $2802;
                   $2804 = $2799 + $2803;
                   __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x531,$2780,$2804,1.9999999999999999E-6);
                   $2805 = ((($x531)) + 8|0);
                   $2806 = HEAP8[$2805>>0]|0;
                   $2807 = $2806&1;
                   if (!($2807)) {
                    break L183;
                   }
                   $2808 = $x529;
                   $2809 = -1.0 * $2808;
                   $2810 = ((($5)) + 512|0);
                   $2811 = +HEAPF64[$2810>>3];
                   $2812 = ((($5)) + 512|0);
                   $2813 = +HEAPF64[$2812>>3];
                   $2814 = $2811 * $2813;
                   $2815 = $2809 * $2814;
                   $2816 = ((($5)) + 528|0);
                   $2817 = +HEAPF64[$2816>>3];
                   $2818 = $x529;
                   $2819 = $2817 * $2818;
                   $2820 = $2815 + $2819;
                   $2821 = (+__Z6IKsignd($2820));
                   __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x532,$2821,-1);
                   $2822 = ((($x532)) + 8|0);
                   $2823 = HEAP8[$2822>>0]|0;
                   $2824 = $2823&1;
                   if (!($2824)) {
                    break L183;
                   }
                   $2825 = +HEAPF64[$x531>>3];
                   $2826 = -1.5707963267949001 + $2825;
                   $2827 = +HEAPF64[$x532>>3];
                   $2828 = 1.5707963267949001 * $2827;
                   $2829 = $2826 + $2828;
                   HEAPF64[$j0array50>>3] = $2829;
                   $2830 = +HEAPF64[$j0array50>>3];
                   $2831 = (+__Z5IKsind($2830));
                   HEAPF64[$sj0array52>>3] = $2831;
                   $2832 = +HEAPF64[$j0array50>>3];
                   $2833 = (+__Z5IKcosd($2832));
                   HEAPF64[$cj0array51>>3] = $2833;
                   $2834 = +HEAPF64[$j0array50>>3];
                   $2835 = $2834 > 3.14159265358979;
                   $2836 = +HEAPF64[$j0array50>>3];
                   do {
                    if ($2835) {
                     $2837 = $2836 - 6.2831853071795898;
                     HEAPF64[$j0array50>>3] = $2837;
                    } else {
                     $2838 = $2836 < -3.14159265358979;
                     if (!($2838)) {
                      break;
                     }
                     $2839 = +HEAPF64[$j0array50>>3];
                     $2840 = $2839 + 6.2831853071795898;
                     HEAPF64[$j0array50>>3] = $2840;
                    }
                   } while(0);
                   HEAP8[$j0valid53>>0] = 1;
                   $ij054 = 0;
                   while(1) {
                    $2841 = $ij054;
                    $2842 = ($2841|0)<(1);
                    if (!($2842)) {
                     break L183;
                    }
                    $2843 = $ij054;
                    $2844 = (($j0valid53) + ($2843)|0);
                    $2845 = HEAP8[$2844>>0]|0;
                    $2846 = $2845&1;
                    do {
                     if ($2846) {
                      $2847 = $ij054;
                      $2848 = $2847&255;
                      $2849 = ((($5)) + 536|0);
                      HEAP8[$2849>>0] = $2848;
                      $2850 = ((($5)) + 536|0);
                      $2851 = ((($2850)) + 1|0);
                      HEAP8[$2851>>0] = -1;
                      $2852 = $ij054;
                      $2853 = (($2852) + 1)|0;
                      $iij055 = $2853;
                      L277: while(1) {
                       $2854 = $iij055;
                       $2855 = ($2854|0)<(1);
                       if (!($2855)) {
                        break;
                       }
                       $2856 = $iij055;
                       $2857 = (($j0valid53) + ($2856)|0);
                       $2858 = HEAP8[$2857>>0]|0;
                       $2859 = $2858&1;
                       do {
                        if ($2859) {
                         $2860 = $ij054;
                         $2861 = (($cj0array51) + ($2860<<3)|0);
                         $2862 = +HEAPF64[$2861>>3];
                         $2863 = $iij055;
                         $2864 = (($cj0array51) + ($2863<<3)|0);
                         $2865 = +HEAPF64[$2864>>3];
                         $2866 = $2862 - $2865;
                         $2867 = (+__Z5IKabsd($2866));
                         $2868 = $2867 < 9.9999999999999995E-7;
                         if (!($2868)) {
                          break;
                         }
                         $2869 = $ij054;
                         $2870 = (($sj0array52) + ($2869<<3)|0);
                         $2871 = +HEAPF64[$2870>>3];
                         $2872 = $iij055;
                         $2873 = (($sj0array52) + ($2872<<3)|0);
                         $2874 = +HEAPF64[$2873>>3];
                         $2875 = $2871 - $2874;
                         $2876 = (+__Z5IKabsd($2875));
                         $2877 = $2876 < 9.9999999999999995E-7;
                         if ($2877) {
                          label = 237;
                          break L277;
                         }
                        }
                       } while(0);
                       $2884 = $iij055;
                       $2885 = (($2884) + 1)|0;
                       $iij055 = $2885;
                      }
                      if ((label|0) == 237) {
                       label = 0;
                       $2878 = $iij055;
                       $2879 = (($j0valid53) + ($2878)|0);
                       HEAP8[$2879>>0] = 0;
                       $2880 = $iij055;
                       $2881 = $2880&255;
                       $2882 = ((($5)) + 536|0);
                       $2883 = ((($2882)) + 1|0);
                       HEAP8[$2883>>0] = $2881;
                      }
                      $2886 = $ij054;
                      $2887 = (($j0array50) + ($2886<<3)|0);
                      $2888 = +HEAPF64[$2887>>3];
                      HEAPF64[$5>>3] = $2888;
                      $2889 = $ij054;
                      $2890 = (($cj0array51) + ($2889<<3)|0);
                      $2891 = +HEAPF64[$2890>>3];
                      $2892 = ((($5)) + 8|0);
                      HEAPF64[$2892>>3] = $2891;
                      $2893 = $ij054;
                      $2894 = (($sj0array52) + ($2893<<3)|0);
                      $2895 = +HEAPF64[$2894>>3];
                      $2896 = ((($5)) + 16|0);
                      HEAPF64[$2896>>3] = $2895;
                      $2897 = +HEAPF64[$5>>3];
                      $2898 = (+__Z5IKcosd($2897));
                      $x533 = $2898;
                      $2899 = +HEAPF64[$5>>3];
                      $2900 = (+__Z5IKsind($2899));
                      $x534 = $2900;
                      $2901 = ((($5)) + 96|0);
                      $2902 = +HEAPF64[$2901>>3];
                      $2903 = 0.43309999999999998 * $2902;
                      $x535 = $2903;
                      $2904 = ((($5)) + 88|0);
                      $2905 = +HEAPF64[$2904>>3];
                      $2906 = 0.43309999999999998 * $2905;
                      $x536 = $2906;
                      $2907 = ((($5)) + 512|0);
                      $2908 = +HEAPF64[$2907>>3];
                      $2909 = ((($5)) + 56|0);
                      $2910 = +HEAPF64[$2909>>3];
                      $2911 = $2908 * $2910;
                      $x537 = $2911;
                      $2912 = ((($5)) + 88|0);
                      $2913 = +HEAPF64[$2912>>3];
                      $2914 = 0.020299999999999999 * $2913;
                      $x538 = $2914;
                      $2915 = ((($5)) + 48|0);
                      $2916 = +HEAPF64[$2915>>3];
                      $2917 = 0.86360000000000003 * $2916;
                      $x539 = $2917;
                      $2918 = ((($5)) + 48|0);
                      $2919 = +HEAPF64[$2918>>3];
                      $2920 = 1.0 * $2919;
                      $x540 = $2920;
                      $2921 = ((($5)) + 96|0);
                      $2922 = +HEAPF64[$2921>>3];
                      $2923 = 0.020299999999999999 * $2922;
                      $x541 = $2923;
                      $2924 = ((($5)) + 464|0);
                      $2925 = +HEAPF64[$2924>>3];
                      $2926 = $x533;
                      $2927 = $2925 * $2926;
                      $x542 = $2927;
                      $2928 = ((($5)) + 488|0);
                      $2929 = +HEAPF64[$2928>>3];
                      $2930 = $x534;
                      $2931 = $2929 * $2930;
                      $x543 = $2931;
                      $2932 = ((($5)) + 488|0);
                      $2933 = +HEAPF64[$2932>>3];
                      $2934 = -1.0 * $2933;
                      $2935 = $x533;
                      $2936 = $2934 * $2935;
                      $2937 = 0.15010000000000001 + $2936;
                      $2938 = ((($5)) + 464|0);
                      $2939 = +HEAPF64[$2938>>3];
                      $2940 = $x534;
                      $2941 = $2939 * $2940;
                      $2942 = $2937 + $2941;
                      HEAPF64[$evalcond56>>3] = $2942;
                      $2943 = ((($5)) + 56|0);
                      $2944 = +HEAPF64[$2943>>3];
                      $2945 = $x543;
                      $2946 = $2944 * $2945;
                      $2947 = ((($5)) + 56|0);
                      $2948 = +HEAPF64[$2947>>3];
                      $2949 = $x542;
                      $2950 = $2948 * $2949;
                      $2951 = $2946 + $2950;
                      $2952 = $x536;
                      $2953 = -1.0 * $2952;
                      $2954 = $2951 + $2953;
                      $2955 = $x541;
                      $2956 = -1.0 * $2955;
                      $2957 = $2954 + $2956;
                      $2958 = ((($5)) + 48|0);
                      $2959 = +HEAPF64[$2958>>3];
                      $2960 = ((($5)) + 512|0);
                      $2961 = +HEAPF64[$2960>>3];
                      $2962 = $2959 * $2961;
                      $2963 = $2957 + $2962;
                      $2964 = ((($evalcond56)) + 8|0);
                      HEAPF64[$2964>>3] = $2963;
                      $2965 = $x539;
                      $2966 = $x542;
                      $2967 = $2965 * $2966;
                      $2968 = 0.02406647 + $2967;
                      $2969 = $x539;
                      $2970 = $x543;
                      $2971 = $2969 * $2970;
                      $2972 = $2968 + $2971;
                      $2973 = $x537;
                      $2974 = -0.86360000000000003 * $2973;
                      $2975 = $2972 + $2974;
                      $2976 = ((($5)) + 528|0);
                      $2977 = +HEAPF64[$2976>>3];
                      $2978 = -1.0 * $2977;
                      $2979 = $2975 + $2978;
                      $2980 = ((($evalcond56)) + 16|0);
                      HEAPF64[$2980>>3] = $2979;
                      $2981 = $x540;
                      $2982 = -1.0 * $2981;
                      $2983 = $x543;
                      $2984 = $2982 * $2983;
                      $2985 = 0.43180000000000002 + $2984;
                      $2986 = $x540;
                      $2987 = -1.0 * $2986;
                      $2988 = $x542;
                      $2989 = $2987 * $2988;
                      $2990 = $2985 + $2989;
                      $2991 = $x538;
                      $2992 = -1.0 * $2991;
                      $2993 = $2990 + $2992;
                      $2994 = $x535;
                      $2995 = $2993 + $2994;
                      $2996 = $x537;
                      $2997 = $2995 + $2996;
                      $2998 = ((($evalcond56)) + 24|0);
                      HEAPF64[$2998>>3] = $2997;
                      $2999 = ((($5)) + 48|0);
                      $3000 = +HEAPF64[$2999>>3];
                      $3001 = 0.43180000000000002 * $3000;
                      $3002 = ((($5)) + 56|0);
                      $3003 = +HEAPF64[$3002>>3];
                      $3004 = $x541;
                      $3005 = $3003 * $3004;
                      $3006 = $3001 + $3005;
                      $3007 = $x543;
                      $3008 = -1.0 * $3007;
                      $3009 = $3006 + $3008;
                      $3010 = $x542;
                      $3011 = -1.0 * $3010;
                      $3012 = $3009 + $3011;
                      $3013 = ((($5)) + 56|0);
                      $3014 = +HEAPF64[$3013>>3];
                      $3015 = $x536;
                      $3016 = $3014 * $3015;
                      $3017 = $3012 + $3016;
                      $3018 = ((($5)) + 48|0);
                      $3019 = +HEAPF64[$3018>>3];
                      $3020 = -1.0 * $3019;
                      $3021 = $x538;
                      $3022 = $3020 * $3021;
                      $3023 = $3017 + $3022;
                      $3024 = ((($5)) + 48|0);
                      $3025 = +HEAPF64[$3024>>3];
                      $3026 = $x535;
                      $3027 = $3025 * $3026;
                      $3028 = $3023 + $3027;
                      $3029 = ((($evalcond56)) + 32|0);
                      HEAPF64[$3029>>3] = $3028;
                      $3030 = +HEAPF64[$evalcond56>>3];
                      $3031 = (+__Z5IKabsd($3030));
                      $3032 = $3031 > 5.0000000000000004E-6;
                      if ($3032) {
                       break;
                      }
                      $3033 = ((($evalcond56)) + 8|0);
                      $3034 = +HEAPF64[$3033>>3];
                      $3035 = (+__Z5IKabsd($3034));
                      $3036 = $3035 > 5.0000000000000004E-6;
                      if ($3036) {
                       break;
                      }
                      $3037 = ((($evalcond56)) + 16|0);
                      $3038 = +HEAPF64[$3037>>3];
                      $3039 = (+__Z5IKabsd($3038));
                      $3040 = $3039 > 5.0000000000000004E-6;
                      if ($3040) {
                       break;
                      }
                      $3041 = ((($evalcond56)) + 24|0);
                      $3042 = +HEAPF64[$3041>>3];
                      $3043 = (+__Z5IKabsd($3042));
                      $3044 = $3043 > 5.0000000000000004E-6;
                      if ($3044) {
                       break;
                      }
                      $3045 = ((($evalcond56)) + 32|0);
                      $3046 = +HEAPF64[$3045>>3];
                      $3047 = (+__Z5IKabsd($3046));
                      $3048 = $3047 > 5.0000000000000004E-6;
                      if ($3048) {
                       break;
                      }
                      $3049 = $4;
                      __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($5,$3049);
                     }
                    } while(0);
                    $3050 = $ij054;
                    $3051 = (($3050) + 1)|0;
                    $ij054 = $3051;
                   }
                  }
                 } while(0);
                 $bgotonextstatement = 1;
                 $961 = ((($5)) + 528|0);
                 $962 = +HEAPF64[$961>>3];
                 $963 = 1.0 * $962;
                 $x72 = $963;
                 $964 = ((($5)) + 512|0);
                 $965 = +HEAPF64[$964>>3];
                 $966 = 0.43180000000000002 + $965;
                 $967 = ((($5)) + 88|0);
                 $968 = +HEAPF64[$967>>3];
                 $969 = -0.020299999999999999 * $968;
                 $970 = $966 + $969;
                 $971 = ((($5)) + 96|0);
                 $972 = +HEAPF64[$971>>3];
                 $973 = 0.43309999999999998 * $972;
                 $974 = $970 + $973;
                 $x73 = $974;
                 $975 = ((($5)) + 40|0);
                 $976 = +HEAPF64[$975>>3];
                 $977 = -1.5707963267949001 + $976;
                 $978 = (+__Z5IKabsd($977));
                 $979 = 3.14159265358979 + $978;
                 $980 = (+__Z6IKfmoddd($979,6.2831853071795898));
                 $981 = -3.14159265358979 + $980;
                 HEAPF64[$evalcond>>3] = $981;
                 $982 = $x72;
                 $983 = -1.0 * $982;
                 $984 = 0.39696894999999999 + $983;
                 $985 = ((($5)) + 88|0);
                 $986 = +HEAPF64[$985>>3];
                 $987 = -0.017531080000000001 * $986;
                 $988 = $984 + $987;
                 $989 = ((($5)) + 96|0);
                 $990 = +HEAPF64[$989>>3];
                 $991 = 0.37402516000000002 * $990;
                 $992 = $988 + $991;
                 $993 = ((($evalcond)) + 8|0);
                 HEAPF64[$993>>3] = $992;
                 $994 = $x72;
                 $995 = -1.0 * $994;
                 $996 = 0.02406647 + $995;
                 $997 = ((($5)) + 512|0);
                 $998 = +HEAPF64[$997>>3];
                 $999 = -0.86360000000000003 * $998;
                 $1000 = $996 + $999;
                 $1001 = ((($evalcond)) + 16|0);
                 HEAPF64[$1001>>3] = $1000;
                 $1002 = $x73;
                 $1003 = ((($evalcond)) + 24|0);
                 HEAPF64[$1003>>3] = $1002;
                 $1004 = $x73;
                 $1005 = ((($evalcond)) + 32|0);
                 HEAPF64[$1005>>3] = $1004;
                 $1006 = +HEAPF64[$evalcond>>3];
                 $1007 = (+__Z5IKabsd($1006));
                 $1008 = $1007 < 9.9999999999999995E-7;
                 L294: do {
                  if ($1008) {
                   $1009 = ((($evalcond)) + 8|0);
                   $1010 = +HEAPF64[$1009>>3];
                   $1011 = (+__Z5IKabsd($1010));
                   $1012 = $1011 < 9.9999999999999995E-7;
                   if (!($1012)) {
                    break;
                   }
                   $1013 = ((($evalcond)) + 16|0);
                   $1014 = +HEAPF64[$1013>>3];
                   $1015 = (+__Z5IKabsd($1014));
                   $1016 = $1015 < 9.9999999999999995E-7;
                   if (!($1016)) {
                    break;
                   }
                   $1017 = ((($evalcond)) + 24|0);
                   $1018 = +HEAPF64[$1017>>3];
                   $1019 = (+__Z5IKabsd($1018));
                   $1020 = $1019 < 9.9999999999999995E-7;
                   if (!($1020)) {
                    break;
                   }
                   $1021 = ((($evalcond)) + 32|0);
                   $1022 = +HEAPF64[$1021>>3];
                   $1023 = (+__Z5IKabsd($1022));
                   $1024 = $1023 < 9.9999999999999995E-7;
                   if (!($1024)) {
                    break;
                   }
                   $bgotonextstatement = 0;
                   $1025 = ((($5)) + 56|0);
                   HEAPF64[$1025>>3] = 1.0;
                   $1026 = ((($5)) + 48|0);
                   HEAPF64[$1026>>3] = 0.0;
                   $1027 = ((($5)) + 40|0);
                   HEAPF64[$1027>>3] = 1.5707963267949001;
                   $1028 = ((($5)) + 512|0);
                   $1029 = +HEAPF64[$1028>>3];
                   $1030 = ((($5)) + 512|0);
                   $1031 = +HEAPF64[$1030>>3];
                   $1032 = $1029 * $1031;
                   $x74 = $1032;
                   $1033 = ((($5)) + 96|0);
                   $1034 = +HEAPF64[$1033>>3];
                   $1035 = 203.0 * $1034;
                   $x75 = $1035;
                   $1036 = ((($5)) + 88|0);
                   $1037 = +HEAPF64[$1036>>3];
                   $1038 = 4331.0 * $1037;
                   $x76 = $1038;
                   $1039 = ((($5)) + 528|0);
                   $1040 = +HEAPF64[$1039>>3];
                   $1041 = -1.0 * $1040;
                   $1042 = $x74;
                   $1043 = $1041 + $1042;
                   HEAPF64[$j0eval4>>3] = $1043;
                   $1044 = ((($5)) + 464|0);
                   $1045 = +HEAPF64[$1044>>3];
                   $1046 = -1.0 * $1045;
                   $1047 = $x75;
                   $1048 = $1046 * $1047;
                   $1049 = ((($5)) + 464|0);
                   $1050 = +HEAPF64[$1049>>3];
                   $1051 = -1.0 * $1050;
                   $1052 = $x76;
                   $1053 = $1051 * $1052;
                   $1054 = $1048 + $1053;
                   $1055 = ((($5)) + 488|0);
                   $1056 = +HEAPF64[$1055>>3];
                   $1057 = -1501.0 * $1056;
                   $1058 = $1054 + $1057;
                   $1059 = (+__Z5IKabsd($1058));
                   $1060 = ((($5)) + 464|0);
                   $1061 = +HEAPF64[$1060>>3];
                   $1062 = 1501.0 * $1061;
                   $1063 = ((($5)) + 488|0);
                   $1064 = +HEAPF64[$1063>>3];
                   $1065 = -1.0 * $1064;
                   $1066 = $x76;
                   $1067 = $1065 * $1066;
                   $1068 = $1062 + $1067;
                   $1069 = ((($5)) + 488|0);
                   $1070 = +HEAPF64[$1069>>3];
                   $1071 = -1.0 * $1070;
                   $1072 = $x75;
                   $1073 = $1071 * $1072;
                   $1074 = $1068 + $1073;
                   $1075 = (+__Z5IKabsd($1074));
                   $1076 = $1059 + $1075;
                   $1077 = ((($j0eval4)) + 8|0);
                   HEAPF64[$1077>>3] = $1076;
                   $1078 = $x74;
                   $1079 = 1.0E+4 * $1078;
                   $1080 = ((($5)) + 528|0);
                   $1081 = +HEAPF64[$1080>>3];
                   $1082 = -1.0E+4 * $1081;
                   $1083 = $1079 + $1082;
                   $1084 = (+__Z6IKsignd($1083));
                   $1085 = ((($j0eval4)) + 16|0);
                   HEAPF64[$1085>>3] = $1084;
                   $1086 = +HEAPF64[$j0eval4>>3];
                   $1087 = (+__Z5IKabsd($1086));
                   $1088 = $1087 < 9.9999999999999995E-7;
                   if ($1088) {
                    break;
                   }
                   $1089 = ((($j0eval4)) + 8|0);
                   $1090 = +HEAPF64[$1089>>3];
                   $1091 = (+__Z5IKabsd($1090));
                   $1092 = $1091 < 9.9999999999999995E-7;
                   if ($1092) {
                    break;
                   }
                   $1093 = ((($j0eval4)) + 16|0);
                   $1094 = +HEAPF64[$1093>>3];
                   $1095 = (+__Z5IKabsd($1094));
                   $1096 = $1095 < 9.9999999999999995E-7;
                   if ($1096) {
                    break;
                   }
                   ;HEAP8[$j0valid>>0]=0|0;
                   $1097 = ((($5)) + 538|0);
                   HEAP8[$1097>>0] = 1;
                   $1098 = ((($5)) + 96|0);
                   $1099 = +HEAPF64[$1098>>3];
                   $1100 = 203.0 * $1099;
                   $x77 = $1100;
                   $1101 = ((($5)) + 88|0);
                   $1102 = +HEAPF64[$1101>>3];
                   $1103 = 4331.0 * $1102;
                   $x78 = $1103;
                   $1104 = ((($5)) + 464|0);
                   $1105 = +HEAPF64[$1104>>3];
                   $1106 = 1501.0 * $1105;
                   $1107 = ((($5)) + 488|0);
                   $1108 = +HEAPF64[$1107>>3];
                   $1109 = -1.0 * $1108;
                   $1110 = $x77;
                   $1111 = $1109 * $1110;
                   $1112 = $1106 + $1111;
                   $1113 = ((($5)) + 488|0);
                   $1114 = +HEAPF64[$1113>>3];
                   $1115 = -1.0 * $1114;
                   $1116 = $x78;
                   $1117 = $1115 * $1116;
                   $1118 = $1112 + $1117;
                   $1119 = ((($5)) + 464|0);
                   $1120 = +HEAPF64[$1119>>3];
                   $1121 = -1.0 * $1120;
                   $1122 = $x77;
                   $1123 = $1121 * $1122;
                   $1124 = ((($5)) + 464|0);
                   $1125 = +HEAPF64[$1124>>3];
                   $1126 = -1.0 * $1125;
                   $1127 = $x78;
                   $1128 = $1126 * $1127;
                   $1129 = $1123 + $1128;
                   $1130 = ((($5)) + 488|0);
                   $1131 = +HEAPF64[$1130>>3];
                   $1132 = -1501.0 * $1131;
                   $1133 = $1129 + $1132;
                   __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x79,$1118,$1133,1.9999999999999999E-6);
                   $1134 = ((($x79)) + 8|0);
                   $1135 = HEAP8[$1134>>0]|0;
                   $1136 = $1135&1;
                   if (!($1136)) {
                    break;
                   }
                   $1137 = ((($5)) + 512|0);
                   $1138 = +HEAPF64[$1137>>3];
                   $1139 = ((($5)) + 512|0);
                   $1140 = +HEAPF64[$1139>>3];
                   $1141 = $1138 * $1140;
                   $1142 = 1.0E+4 * $1141;
                   $1143 = ((($5)) + 528|0);
                   $1144 = +HEAPF64[$1143>>3];
                   $1145 = -1.0E+4 * $1144;
                   $1146 = $1142 + $1145;
                   $1147 = (+__Z6IKsignd($1146));
                   __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x80,$1147,-1);
                   $1148 = ((($x80)) + 8|0);
                   $1149 = HEAP8[$1148>>0]|0;
                   $1150 = $1149&1;
                   if (!($1150)) {
                    break;
                   }
                   $1151 = +HEAPF64[$x79>>3];
                   $1152 = -1.5707963267949001 + $1151;
                   $1153 = +HEAPF64[$x80>>3];
                   $1154 = 1.5707963267949001 * $1153;
                   $1155 = $1152 + $1154;
                   HEAPF64[$j0array>>3] = $1155;
                   $1156 = +HEAPF64[$j0array>>3];
                   $1157 = (+__Z5IKsind($1156));
                   HEAPF64[$sj0array>>3] = $1157;
                   $1158 = +HEAPF64[$j0array>>3];
                   $1159 = (+__Z5IKcosd($1158));
                   HEAPF64[$cj0array>>3] = $1159;
                   $1160 = +HEAPF64[$j0array>>3];
                   $1161 = $1160 > 3.14159265358979;
                   $1162 = +HEAPF64[$j0array>>3];
                   do {
                    if ($1161) {
                     $1163 = $1162 - 6.2831853071795898;
                     HEAPF64[$j0array>>3] = $1163;
                    } else {
                     $1164 = $1162 < -3.14159265358979;
                     if (!($1164)) {
                      break;
                     }
                     $1165 = +HEAPF64[$j0array>>3];
                     $1166 = $1165 + 6.2831853071795898;
                     HEAPF64[$j0array>>3] = $1166;
                    }
                   } while(0);
                   HEAP8[$j0valid>>0] = 1;
                   $ij0 = 0;
                   while(1) {
                    $1167 = $ij0;
                    $1168 = ($1167|0)<(1);
                    if (!($1168)) {
                     break L294;
                    }
                    $1169 = $ij0;
                    $1170 = (($j0valid) + ($1169)|0);
                    $1171 = HEAP8[$1170>>0]|0;
                    $1172 = $1171&1;
                    do {
                     if ($1172) {
                      $1173 = $ij0;
                      $1174 = $1173&255;
                      $1175 = ((($5)) + 536|0);
                      HEAP8[$1175>>0] = $1174;
                      $1176 = ((($5)) + 536|0);
                      $1177 = ((($1176)) + 1|0);
                      HEAP8[$1177>>0] = -1;
                      $1178 = $ij0;
                      $1179 = (($1178) + 1)|0;
                      $iij0 = $1179;
                      L315: while(1) {
                       $1180 = $iij0;
                       $1181 = ($1180|0)<(1);
                       if (!($1181)) {
                        break;
                       }
                       $1182 = $iij0;
                       $1183 = (($j0valid) + ($1182)|0);
                       $1184 = HEAP8[$1183>>0]|0;
                       $1185 = $1184&1;
                       do {
                        if ($1185) {
                         $1186 = $ij0;
                         $1187 = (($cj0array) + ($1186<<3)|0);
                         $1188 = +HEAPF64[$1187>>3];
                         $1189 = $iij0;
                         $1190 = (($cj0array) + ($1189<<3)|0);
                         $1191 = +HEAPF64[$1190>>3];
                         $1192 = $1188 - $1191;
                         $1193 = (+__Z5IKabsd($1192));
                         $1194 = $1193 < 9.9999999999999995E-7;
                         if (!($1194)) {
                          break;
                         }
                         $1195 = $ij0;
                         $1196 = (($sj0array) + ($1195<<3)|0);
                         $1197 = +HEAPF64[$1196>>3];
                         $1198 = $iij0;
                         $1199 = (($sj0array) + ($1198<<3)|0);
                         $1200 = +HEAPF64[$1199>>3];
                         $1201 = $1197 - $1200;
                         $1202 = (+__Z5IKabsd($1201));
                         $1203 = $1202 < 9.9999999999999995E-7;
                         if ($1203) {
                          label = 80;
                          break L315;
                         }
                        }
                       } while(0);
                       $1210 = $iij0;
                       $1211 = (($1210) + 1)|0;
                       $iij0 = $1211;
                      }
                      if ((label|0) == 80) {
                       label = 0;
                       $1204 = $iij0;
                       $1205 = (($j0valid) + ($1204)|0);
                       HEAP8[$1205>>0] = 0;
                       $1206 = $iij0;
                       $1207 = $1206&255;
                       $1208 = ((($5)) + 536|0);
                       $1209 = ((($1208)) + 1|0);
                       HEAP8[$1209>>0] = $1207;
                      }
                      $1212 = $ij0;
                      $1213 = (($j0array) + ($1212<<3)|0);
                      $1214 = +HEAPF64[$1213>>3];
                      HEAPF64[$5>>3] = $1214;
                      $1215 = $ij0;
                      $1216 = (($cj0array) + ($1215<<3)|0);
                      $1217 = +HEAPF64[$1216>>3];
                      $1218 = ((($5)) + 8|0);
                      HEAPF64[$1218>>3] = $1217;
                      $1219 = $ij0;
                      $1220 = (($sj0array) + ($1219<<3)|0);
                      $1221 = +HEAPF64[$1220>>3];
                      $1222 = ((($5)) + 16|0);
                      HEAPF64[$1222>>3] = $1221;
                      $1223 = +HEAPF64[$5>>3];
                      $1224 = (+__Z5IKsind($1223));
                      $x81 = $1224;
                      $1225 = +HEAPF64[$5>>3];
                      $1226 = (+__Z5IKcosd($1225));
                      $x82 = $1226;
                      $1227 = ((($5)) + 488|0);
                      $1228 = +HEAPF64[$1227>>3];
                      $1229 = -1.0 * $1228;
                      $1230 = $x82;
                      $1231 = $1229 * $1230;
                      $1232 = 0.15010000000000001 + $1231;
                      $1233 = ((($5)) + 464|0);
                      $1234 = +HEAPF64[$1233>>3];
                      $1235 = $x81;
                      $1236 = $1234 * $1235;
                      $1237 = $1232 + $1236;
                      HEAPF64[$evalcond5>>3] = $1237;
                      $1238 = ((($5)) + 88|0);
                      $1239 = +HEAPF64[$1238>>3];
                      $1240 = -0.43309999999999998 * $1239;
                      $1241 = ((($5)) + 488|0);
                      $1242 = +HEAPF64[$1241>>3];
                      $1243 = $x81;
                      $1244 = $1242 * $1243;
                      $1245 = $1240 + $1244;
                      $1246 = ((($5)) + 464|0);
                      $1247 = +HEAPF64[$1246>>3];
                      $1248 = $x82;
                      $1249 = $1247 * $1248;
                      $1250 = $1245 + $1249;
                      $1251 = ((($5)) + 96|0);
                      $1252 = +HEAPF64[$1251>>3];
                      $1253 = -0.020299999999999999 * $1252;
                      $1254 = $1250 + $1253;
                      $1255 = ((($evalcond5)) + 8|0);
                      HEAPF64[$1255>>3] = $1254;
                      $1256 = +HEAPF64[$evalcond5>>3];
                      $1257 = (+__Z5IKabsd($1256));
                      $1258 = $1257 > 5.0000000000000004E-6;
                      if ($1258) {
                       break;
                      }
                      $1259 = ((($evalcond5)) + 8|0);
                      $1260 = +HEAPF64[$1259>>3];
                      $1261 = (+__Z5IKabsd($1260));
                      $1262 = $1261 > 5.0000000000000004E-6;
                      if ($1262) {
                       break;
                      }
                      $1263 = $4;
                      __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($5,$1263);
                     }
                    } while(0);
                    $1264 = $ij0;
                    $1265 = (($1264) + 1)|0;
                    $ij0 = $1265;
                   }
                  }
                 } while(0);
                 $1266 = $bgotonextstatement;
                 $1267 = $1266&1;
                 if (!($1267)) {
                  break;
                 }
                 $bgotonextstatement6 = 1;
                 $1268 = ((($5)) + 528|0);
                 $1269 = +HEAPF64[$1268>>3];
                 $1270 = 1.0 * $1269;
                 $x469 = $1270;
                 $1271 = ((($5)) + 88|0);
                 $1272 = +HEAPF64[$1271>>3];
                 $1273 = 0.020299999999999999 * $1272;
                 $x470 = $1273;
                 $1274 = ((($5)) + 96|0);
                 $1275 = +HEAPF64[$1274>>3];
                 $1276 = 0.43309999999999998 * $1275;
                 $x471 = $1276;
                 $1277 = ((($5)) + 40|0);
                 $1278 = +HEAPF64[$1277>>3];
                 $1279 = 1.5707963267949001 + $1278;
                 $1280 = (+__Z5IKabsd($1279));
                 $1281 = 3.14159265358979 + $1280;
                 $1282 = (+__Z6IKfmoddd($1281,6.2831853071795898));
                 $1283 = -3.14159265358979 + $1282;
                 HEAPF64[$evalcond>>3] = $1283;
                 $1284 = ((($5)) + 88|0);
                 $1285 = +HEAPF64[$1284>>3];
                 $1286 = -0.017531080000000001 * $1285;
                 $1287 = 0.39696894999999999 + $1286;
                 $1288 = $x469;
                 $1289 = -1.0 * $1288;
                 $1290 = $1287 + $1289;
                 $1291 = ((($5)) + 96|0);
                 $1292 = +HEAPF64[$1291>>3];
                 $1293 = 0.37402516000000002 * $1292;
                 $1294 = $1290 + $1293;
                 $1295 = ((($evalcond)) + 8|0);
                 HEAPF64[$1295>>3] = $1294;
                 $1296 = $x469;
                 $1297 = -1.0 * $1296;
                 $1298 = 0.02406647 + $1297;
                 $1299 = ((($5)) + 512|0);
                 $1300 = +HEAPF64[$1299>>3];
                 $1301 = 0.86360000000000003 * $1300;
                 $1302 = $1298 + $1301;
                 $1303 = ((($evalcond)) + 16|0);
                 HEAPF64[$1303>>3] = $1302;
                 $1304 = $x470;
                 $1305 = -1.0 * $1304;
                 $1306 = 0.43180000000000002 + $1305;
                 $1307 = ((($5)) + 512|0);
                 $1308 = +HEAPF64[$1307>>3];
                 $1309 = -1.0 * $1308;
                 $1310 = $1306 + $1309;
                 $1311 = $x471;
                 $1312 = $1310 + $1311;
                 $1313 = ((($evalcond)) + 24|0);
                 HEAPF64[$1313>>3] = $1312;
                 $1314 = $x471;
                 $1315 = -1.0 * $1314;
                 $1316 = -0.43180000000000002 + $1315;
                 $1317 = $x470;
                 $1318 = $1316 + $1317;
                 $1319 = ((($5)) + 512|0);
                 $1320 = +HEAPF64[$1319>>3];
                 $1321 = $1318 + $1320;
                 $1322 = ((($evalcond)) + 32|0);
                 HEAPF64[$1322>>3] = $1321;
                 $1323 = +HEAPF64[$evalcond>>3];
                 $1324 = (+__Z5IKabsd($1323));
                 $1325 = $1324 < 9.9999999999999995E-7;
                 L330: do {
                  if ($1325) {
                   $1326 = ((($evalcond)) + 8|0);
                   $1327 = +HEAPF64[$1326>>3];
                   $1328 = (+__Z5IKabsd($1327));
                   $1329 = $1328 < 9.9999999999999995E-7;
                   if (!($1329)) {
                    break;
                   }
                   $1330 = ((($evalcond)) + 16|0);
                   $1331 = +HEAPF64[$1330>>3];
                   $1332 = (+__Z5IKabsd($1331));
                   $1333 = $1332 < 9.9999999999999995E-7;
                   if (!($1333)) {
                    break;
                   }
                   $1334 = ((($evalcond)) + 24|0);
                   $1335 = +HEAPF64[$1334>>3];
                   $1336 = (+__Z5IKabsd($1335));
                   $1337 = $1336 < 9.9999999999999995E-7;
                   if (!($1337)) {
                    break;
                   }
                   $1338 = ((($evalcond)) + 32|0);
                   $1339 = +HEAPF64[$1338>>3];
                   $1340 = (+__Z5IKabsd($1339));
                   $1341 = $1340 < 9.9999999999999995E-7;
                   if (!($1341)) {
                    break;
                   }
                   $bgotonextstatement6 = 0;
                   $1342 = ((($5)) + 56|0);
                   HEAPF64[$1342>>3] = -1.0;
                   $1343 = ((($5)) + 48|0);
                   HEAPF64[$1343>>3] = 0.0;
                   $1344 = ((($5)) + 40|0);
                   HEAPF64[$1344>>3] = -1.5707963267949001;
                   $1345 = ((($5)) + 512|0);
                   $1346 = +HEAPF64[$1345>>3];
                   $1347 = ((($5)) + 512|0);
                   $1348 = +HEAPF64[$1347>>3];
                   $1349 = $1346 * $1348;
                   $x472 = $1349;
                   $1350 = ((($5)) + 96|0);
                   $1351 = +HEAPF64[$1350>>3];
                   $1352 = 203.0 * $1351;
                   $x473 = $1352;
                   $1353 = ((($5)) + 88|0);
                   $1354 = +HEAPF64[$1353>>3];
                   $1355 = 4331.0 * $1354;
                   $x474 = $1355;
                   $1356 = $x472;
                   $1357 = -1.0 * $1356;
                   $1358 = ((($5)) + 528|0);
                   $1359 = +HEAPF64[$1358>>3];
                   $1360 = $1357 + $1359;
                   HEAPF64[$j0eval7>>3] = $1360;
                   $1361 = $x472;
                   $1362 = -1.0E+4 * $1361;
                   $1363 = ((($5)) + 528|0);
                   $1364 = +HEAPF64[$1363>>3];
                   $1365 = 1.0E+4 * $1364;
                   $1366 = $1362 + $1365;
                   $1367 = (+__Z6IKsignd($1366));
                   $1368 = ((($j0eval7)) + 8|0);
                   HEAPF64[$1368>>3] = $1367;
                   $1369 = ((($5)) + 488|0);
                   $1370 = +HEAPF64[$1369>>3];
                   $1371 = -1.0 * $1370;
                   $1372 = $x473;
                   $1373 = $1371 * $1372;
                   $1374 = ((($5)) + 488|0);
                   $1375 = +HEAPF64[$1374>>3];
                   $1376 = -1.0 * $1375;
                   $1377 = $x474;
                   $1378 = $1376 * $1377;
                   $1379 = $1373 + $1378;
                   $1380 = ((($5)) + 464|0);
                   $1381 = +HEAPF64[$1380>>3];
                   $1382 = -1501.0 * $1381;
                   $1383 = $1379 + $1382;
                   $1384 = (+__Z5IKabsd($1383));
                   $1385 = ((($5)) + 488|0);
                   $1386 = +HEAPF64[$1385>>3];
                   $1387 = 1501.0 * $1386;
                   $1388 = ((($5)) + 464|0);
                   $1389 = +HEAPF64[$1388>>3];
                   $1390 = -1.0 * $1389;
                   $1391 = $x473;
                   $1392 = $1390 * $1391;
                   $1393 = $1387 + $1392;
                   $1394 = ((($5)) + 464|0);
                   $1395 = +HEAPF64[$1394>>3];
                   $1396 = -1.0 * $1395;
                   $1397 = $x474;
                   $1398 = $1396 * $1397;
                   $1399 = $1393 + $1398;
                   $1400 = (+__Z5IKabsd($1399));
                   $1401 = $1384 + $1400;
                   $1402 = ((($j0eval7)) + 16|0);
                   HEAPF64[$1402>>3] = $1401;
                   $1403 = +HEAPF64[$j0eval7>>3];
                   $1404 = (+__Z5IKabsd($1403));
                   $1405 = $1404 < 9.9999999999999995E-7;
                   if ($1405) {
                    break;
                   }
                   $1406 = ((($j0eval7)) + 8|0);
                   $1407 = +HEAPF64[$1406>>3];
                   $1408 = (+__Z5IKabsd($1407));
                   $1409 = $1408 < 9.9999999999999995E-7;
                   if ($1409) {
                    break;
                   }
                   $1410 = ((($j0eval7)) + 16|0);
                   $1411 = +HEAPF64[$1410>>3];
                   $1412 = (+__Z5IKabsd($1411));
                   $1413 = $1412 < 9.9999999999999995E-7;
                   if ($1413) {
                    break;
                   }
                   ;HEAP8[$j0valid11>>0]=0|0;
                   $1414 = ((($5)) + 538|0);
                   HEAP8[$1414>>0] = 1;
                   $1415 = ((($5)) + 96|0);
                   $1416 = +HEAPF64[$1415>>3];
                   $1417 = 203.0 * $1416;
                   $x475 = $1417;
                   $1418 = ((($5)) + 88|0);
                   $1419 = +HEAPF64[$1418>>3];
                   $1420 = 4331.0 * $1419;
                   $x476 = $1420;
                   $1421 = ((($5)) + 488|0);
                   $1422 = +HEAPF64[$1421>>3];
                   $1423 = -1.0 * $1422;
                   $1424 = $x475;
                   $1425 = $1423 * $1424;
                   $1426 = ((($5)) + 488|0);
                   $1427 = +HEAPF64[$1426>>3];
                   $1428 = -1.0 * $1427;
                   $1429 = $x476;
                   $1430 = $1428 * $1429;
                   $1431 = $1425 + $1430;
                   $1432 = ((($5)) + 464|0);
                   $1433 = +HEAPF64[$1432>>3];
                   $1434 = -1501.0 * $1433;
                   $1435 = $1431 + $1434;
                   $1436 = ((($5)) + 488|0);
                   $1437 = +HEAPF64[$1436>>3];
                   $1438 = 1501.0 * $1437;
                   $1439 = ((($5)) + 464|0);
                   $1440 = +HEAPF64[$1439>>3];
                   $1441 = -1.0 * $1440;
                   $1442 = $x476;
                   $1443 = $1441 * $1442;
                   $1444 = $1438 + $1443;
                   $1445 = ((($5)) + 464|0);
                   $1446 = +HEAPF64[$1445>>3];
                   $1447 = -1.0 * $1446;
                   $1448 = $x475;
                   $1449 = $1447 * $1448;
                   $1450 = $1444 + $1449;
                   __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x477,$1435,$1450,1.9999999999999999E-6);
                   $1451 = ((($x477)) + 8|0);
                   $1452 = HEAP8[$1451>>0]|0;
                   $1453 = $1452&1;
                   if (!($1453)) {
                    break;
                   }
                   $1454 = ((($5)) + 512|0);
                   $1455 = +HEAPF64[$1454>>3];
                   $1456 = ((($5)) + 512|0);
                   $1457 = +HEAPF64[$1456>>3];
                   $1458 = $1455 * $1457;
                   $1459 = -1.0E+4 * $1458;
                   $1460 = ((($5)) + 528|0);
                   $1461 = +HEAPF64[$1460>>3];
                   $1462 = 1.0E+4 * $1461;
                   $1463 = $1459 + $1462;
                   $1464 = (+__Z6IKsignd($1463));
                   __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x478,$1464,-1);
                   $1465 = ((($x478)) + 8|0);
                   $1466 = HEAP8[$1465>>0]|0;
                   $1467 = $1466&1;
                   if (!($1467)) {
                    break;
                   }
                   $1468 = +HEAPF64[$x477>>3];
                   $1469 = -1.5707963267949001 + $1468;
                   $1470 = +HEAPF64[$x478>>3];
                   $1471 = 1.5707963267949001 * $1470;
                   $1472 = $1469 + $1471;
                   HEAPF64[$j0array8>>3] = $1472;
                   $1473 = +HEAPF64[$j0array8>>3];
                   $1474 = (+__Z5IKsind($1473));
                   HEAPF64[$sj0array10>>3] = $1474;
                   $1475 = +HEAPF64[$j0array8>>3];
                   $1476 = (+__Z5IKcosd($1475));
                   HEAPF64[$cj0array9>>3] = $1476;
                   $1477 = +HEAPF64[$j0array8>>3];
                   $1478 = $1477 > 3.14159265358979;
                   $1479 = +HEAPF64[$j0array8>>3];
                   do {
                    if ($1478) {
                     $1480 = $1479 - 6.2831853071795898;
                     HEAPF64[$j0array8>>3] = $1480;
                    } else {
                     $1481 = $1479 < -3.14159265358979;
                     if (!($1481)) {
                      break;
                     }
                     $1482 = +HEAPF64[$j0array8>>3];
                     $1483 = $1482 + 6.2831853071795898;
                     HEAPF64[$j0array8>>3] = $1483;
                    }
                   } while(0);
                   HEAP8[$j0valid11>>0] = 1;
                   $ij012 = 0;
                   while(1) {
                    $1484 = $ij012;
                    $1485 = ($1484|0)<(1);
                    if (!($1485)) {
                     break L330;
                    }
                    $1486 = $ij012;
                    $1487 = (($j0valid11) + ($1486)|0);
                    $1488 = HEAP8[$1487>>0]|0;
                    $1489 = $1488&1;
                    do {
                     if ($1489) {
                      $1490 = $ij012;
                      $1491 = $1490&255;
                      $1492 = ((($5)) + 536|0);
                      HEAP8[$1492>>0] = $1491;
                      $1493 = ((($5)) + 536|0);
                      $1494 = ((($1493)) + 1|0);
                      HEAP8[$1494>>0] = -1;
                      $1495 = $ij012;
                      $1496 = (($1495) + 1)|0;
                      $iij013 = $1496;
                      L351: while(1) {
                       $1497 = $iij013;
                       $1498 = ($1497|0)<(1);
                       if (!($1498)) {
                        break;
                       }
                       $1499 = $iij013;
                       $1500 = (($j0valid11) + ($1499)|0);
                       $1501 = HEAP8[$1500>>0]|0;
                       $1502 = $1501&1;
                       do {
                        if ($1502) {
                         $1503 = $ij012;
                         $1504 = (($cj0array9) + ($1503<<3)|0);
                         $1505 = +HEAPF64[$1504>>3];
                         $1506 = $iij013;
                         $1507 = (($cj0array9) + ($1506<<3)|0);
                         $1508 = +HEAPF64[$1507>>3];
                         $1509 = $1505 - $1508;
                         $1510 = (+__Z5IKabsd($1509));
                         $1511 = $1510 < 9.9999999999999995E-7;
                         if (!($1511)) {
                          break;
                         }
                         $1512 = $ij012;
                         $1513 = (($sj0array10) + ($1512<<3)|0);
                         $1514 = +HEAPF64[$1513>>3];
                         $1515 = $iij013;
                         $1516 = (($sj0array10) + ($1515<<3)|0);
                         $1517 = +HEAPF64[$1516>>3];
                         $1518 = $1514 - $1517;
                         $1519 = (+__Z5IKabsd($1518));
                         $1520 = $1519 < 9.9999999999999995E-7;
                         if ($1520) {
                          label = 109;
                          break L351;
                         }
                        }
                       } while(0);
                       $1527 = $iij013;
                       $1528 = (($1527) + 1)|0;
                       $iij013 = $1528;
                      }
                      if ((label|0) == 109) {
                       label = 0;
                       $1521 = $iij013;
                       $1522 = (($j0valid11) + ($1521)|0);
                       HEAP8[$1522>>0] = 0;
                       $1523 = $iij013;
                       $1524 = $1523&255;
                       $1525 = ((($5)) + 536|0);
                       $1526 = ((($1525)) + 1|0);
                       HEAP8[$1526>>0] = $1524;
                      }
                      $1529 = $ij012;
                      $1530 = (($j0array8) + ($1529<<3)|0);
                      $1531 = +HEAPF64[$1530>>3];
                      HEAPF64[$5>>3] = $1531;
                      $1532 = $ij012;
                      $1533 = (($cj0array9) + ($1532<<3)|0);
                      $1534 = +HEAPF64[$1533>>3];
                      $1535 = ((($5)) + 8|0);
                      HEAPF64[$1535>>3] = $1534;
                      $1536 = $ij012;
                      $1537 = (($sj0array10) + ($1536<<3)|0);
                      $1538 = +HEAPF64[$1537>>3];
                      $1539 = ((($5)) + 16|0);
                      HEAPF64[$1539>>3] = $1538;
                      $1540 = +HEAPF64[$5>>3];
                      $1541 = (+__Z5IKcosd($1540));
                      $x479 = $1541;
                      $1542 = +HEAPF64[$5>>3];
                      $1543 = (+__Z5IKsind($1542));
                      $x480 = $1543;
                      $1544 = $x479;
                      $1545 = 1.0 * $1544;
                      $x481 = $1545;
                      $1546 = ((($5)) + 464|0);
                      $1547 = +HEAPF64[$1546>>3];
                      $1548 = $x480;
                      $1549 = $1547 * $1548;
                      $1550 = 0.15010000000000001 + $1549;
                      $1551 = ((($5)) + 488|0);
                      $1552 = +HEAPF64[$1551>>3];
                      $1553 = -1.0 * $1552;
                      $1554 = $x481;
                      $1555 = $1553 * $1554;
                      $1556 = $1550 + $1555;
                      HEAPF64[$evalcond14>>3] = $1556;
                      $1557 = ((($5)) + 488|0);
                      $1558 = +HEAPF64[$1557>>3];
                      $1559 = -1.0 * $1558;
                      $1560 = $x480;
                      $1561 = $1559 * $1560;
                      $1562 = ((($5)) + 88|0);
                      $1563 = +HEAPF64[$1562>>3];
                      $1564 = -0.43309999999999998 * $1563;
                      $1565 = $1561 + $1564;
                      $1566 = ((($5)) + 464|0);
                      $1567 = +HEAPF64[$1566>>3];
                      $1568 = -1.0 * $1567;
                      $1569 = $x481;
                      $1570 = $1568 * $1569;
                      $1571 = $1565 + $1570;
                      $1572 = ((($5)) + 96|0);
                      $1573 = +HEAPF64[$1572>>3];
                      $1574 = -0.020299999999999999 * $1573;
                      $1575 = $1571 + $1574;
                      $1576 = ((($evalcond14)) + 8|0);
                      HEAPF64[$1576>>3] = $1575;
                      $1577 = +HEAPF64[$evalcond14>>3];
                      $1578 = (+__Z5IKabsd($1577));
                      $1579 = $1578 > 5.0000000000000004E-6;
                      if ($1579) {
                       break;
                      }
                      $1580 = ((($evalcond14)) + 8|0);
                      $1581 = +HEAPF64[$1580>>3];
                      $1582 = (+__Z5IKabsd($1581));
                      $1583 = $1582 > 5.0000000000000004E-6;
                      if ($1583) {
                       break;
                      }
                      $1584 = $4;
                      __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($5,$1584);
                     }
                    } while(0);
                    $1585 = $ij012;
                    $1586 = (($1585) + 1)|0;
                    $ij012 = $1586;
                   }
                  }
                 } while(0);
                 $1587 = $bgotonextstatement6;
                 $1588 = $1587&1;
                 if (!($1588)) {
                  break;
                 }
                 $bgotonextstatement15 = 1;
                 $1589 = ((($5)) + 88|0);
                 $1590 = +HEAPF64[$1589>>3];
                 $1591 = -0.43309999999999998 * $1590;
                 $1592 = ((($5)) + 512|0);
                 $1593 = +HEAPF64[$1592>>3];
                 $1594 = $1591 + $1593;
                 $1595 = ((($5)) + 96|0);
                 $1596 = +HEAPF64[$1595>>3];
                 $1597 = -0.020299999999999999 * $1596;
                 $1598 = $1594 + $1597;
                 $x482 = $1598;
                 $1599 = ((($5)) + 40|0);
                 $1600 = +HEAPF64[$1599>>3];
                 $1601 = (+__Z5IKabsd($1600));
                 $1602 = 3.14159265358979 + $1601;
                 $1603 = (+__Z6IKfmoddd($1602,6.2831853071795898));
                 $1604 = -3.14159265358979 + $1603;
                 HEAPF64[$evalcond>>3] = $1604;
                 $1605 = ((($5)) + 88|0);
                 $1606 = +HEAPF64[$1605>>3];
                 $1607 = -0.017531080000000001 * $1606;
                 $1608 = 0.39696894999999999 + $1607;
                 $1609 = ((($5)) + 528|0);
                 $1610 = +HEAPF64[$1609>>3];
                 $1611 = -1.0 * $1610;
                 $1612 = $1608 + $1611;
                 $1613 = ((($5)) + 96|0);
                 $1614 = +HEAPF64[$1613>>3];
                 $1615 = 0.37402516000000002 * $1614;
                 $1616 = $1612 + $1615;
                 $1617 = ((($evalcond)) + 8|0);
                 HEAPF64[$1617>>3] = $1616;
                 $1618 = $x482;
                 $1619 = ((($evalcond)) + 16|0);
                 HEAPF64[$1619>>3] = $1618;
                 $1620 = $x482;
                 $1621 = ((($evalcond)) + 24|0);
                 HEAPF64[$1621>>3] = $1620;
                 $1622 = +HEAPF64[$evalcond>>3];
                 $1623 = (+__Z5IKabsd($1622));
                 $1624 = $1623 < 9.9999999999999995E-7;
                 L366: do {
                  if ($1624) {
                   $1625 = ((($evalcond)) + 8|0);
                   $1626 = +HEAPF64[$1625>>3];
                   $1627 = (+__Z5IKabsd($1626));
                   $1628 = $1627 < 9.9999999999999995E-7;
                   if (!($1628)) {
                    break;
                   }
                   $1629 = ((($evalcond)) + 16|0);
                   $1630 = +HEAPF64[$1629>>3];
                   $1631 = (+__Z5IKabsd($1630));
                   $1632 = $1631 < 9.9999999999999995E-7;
                   if (!($1632)) {
                    break;
                   }
                   $1633 = ((($evalcond)) + 24|0);
                   $1634 = +HEAPF64[$1633>>3];
                   $1635 = (+__Z5IKabsd($1634));
                   $1636 = $1635 < 9.9999999999999995E-7;
                   if (!($1636)) {
                    break;
                   }
                   $bgotonextstatement15 = 0;
                   $1637 = ((($5)) + 56|0);
                   HEAPF64[$1637>>3] = 0.0;
                   $1638 = ((($5)) + 48|0);
                   HEAPF64[$1638>>3] = 1.0;
                   $1639 = ((($5)) + 40|0);
                   HEAPF64[$1639>>3] = 0.0;
                   $1640 = ((($5)) + 512|0);
                   $1641 = +HEAPF64[$1640>>3];
                   $1642 = ((($5)) + 512|0);
                   $1643 = +HEAPF64[$1642>>3];
                   $1644 = $1641 * $1643;
                   $x483 = $1644;
                   $1645 = ((($5)) + 528|0);
                   $1646 = +HEAPF64[$1645>>3];
                   $1647 = 2.5E+7 * $1646;
                   $x484 = $1647;
                   $1648 = ((($5)) + 528|0);
                   $1649 = +HEAPF64[$1648>>3];
                   $1650 = -1.0 * $1649;
                   $1651 = $x483;
                   $1652 = $1650 + $1651;
                   HEAPF64[$j0eval16>>3] = $1652;
                   $1653 = ((($5)) + 488|0);
                   $1654 = +HEAPF64[$1653>>3];
                   $1655 = 601661.75 * $1654;
                   $1656 = ((($5)) + 464|0);
                   $1657 = +HEAPF64[$1656>>3];
                   $1658 = 3240659.0 * $1657;
                   $1659 = $1655 + $1658;
                   $1660 = ((($5)) + 488|0);
                   $1661 = +HEAPF64[$1660>>3];
                   $1662 = -1.0 * $1661;
                   $1663 = $x484;
                   $1664 = $1662 * $1663;
                   $1665 = $1659 + $1664;
                   $1666 = (+__Z5IKabsd($1665));
                   $1667 = ((($5)) + 488|0);
                   $1668 = +HEAPF64[$1667>>3];
                   $1669 = -3240659.0 * $1668;
                   $1670 = ((($5)) + 464|0);
                   $1671 = +HEAPF64[$1670>>3];
                   $1672 = -1.0 * $1671;
                   $1673 = $x484;
                   $1674 = $1672 * $1673;
                   $1675 = $1669 + $1674;
                   $1676 = ((($5)) + 464|0);
                   $1677 = +HEAPF64[$1676>>3];
                   $1678 = 601661.75 * $1677;
                   $1679 = $1675 + $1678;
                   $1680 = (+__Z5IKabsd($1679));
                   $1681 = $1666 + $1680;
                   $1682 = ((($j0eval16)) + 8|0);
                   HEAPF64[$1682>>3] = $1681;
                   $1683 = $x483;
                   $1684 = 2.159E+7 * $1683;
                   $1685 = ((($5)) + 528|0);
                   $1686 = +HEAPF64[$1685>>3];
                   $1687 = -2.159E+7 * $1686;
                   $1688 = $1684 + $1687;
                   $1689 = (+__Z6IKsignd($1688));
                   $1690 = ((($j0eval16)) + 16|0);
                   HEAPF64[$1690>>3] = $1689;
                   $1691 = +HEAPF64[$j0eval16>>3];
                   $1692 = (+__Z5IKabsd($1691));
                   $1693 = $1692 < 9.9999999999999995E-7;
                   do {
                    if (!($1693)) {
                     $1694 = ((($j0eval16)) + 8|0);
                     $1695 = +HEAPF64[$1694>>3];
                     $1696 = (+__Z5IKabsd($1695));
                     $1697 = $1696 < 9.9999999999999995E-7;
                     if ($1697) {
                      break;
                     }
                     $1698 = ((($j0eval16)) + 16|0);
                     $1699 = +HEAPF64[$1698>>3];
                     $1700 = (+__Z5IKabsd($1699));
                     $1701 = $1700 < 9.9999999999999995E-7;
                     if ($1701) {
                      break;
                     }
                     ;HEAP8[$j0valid28>>0]=0|0;
                     $1979 = ((($5)) + 538|0);
                     HEAP8[$1979>>0] = 1;
                     $1980 = ((($5)) + 528|0);
                     $1981 = +HEAPF64[$1980>>3];
                     $1982 = 2.5E+7 * $1981;
                     $x496 = $1982;
                     $1983 = ((($5)) + 512|0);
                     $1984 = +HEAPF64[$1983>>3];
                     $1985 = ((($5)) + 512|0);
                     $1986 = +HEAPF64[$1985>>3];
                     $1987 = $1984 * $1986;
                     $1988 = 2.159E+7 * $1987;
                     $1989 = ((($5)) + 528|0);
                     $1990 = +HEAPF64[$1989>>3];
                     $1991 = -2.159E+7 * $1990;
                     $1992 = $1988 + $1991;
                     $1993 = (+__Z6IKsignd($1992));
                     __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x497,$1993,-1);
                     $1994 = ((($x497)) + 8|0);
                     $1995 = HEAP8[$1994>>0]|0;
                     $1996 = $1995&1;
                     if (!($1996)) {
                      break L366;
                     }
                     $1997 = ((($5)) + 488|0);
                     $1998 = +HEAPF64[$1997>>3];
                     $1999 = 601661.75 * $1998;
                     $2000 = ((($5)) + 464|0);
                     $2001 = +HEAPF64[$2000>>3];
                     $2002 = 3240659.0 * $2001;
                     $2003 = $1999 + $2002;
                     $2004 = ((($5)) + 488|0);
                     $2005 = +HEAPF64[$2004>>3];
                     $2006 = -1.0 * $2005;
                     $2007 = $x496;
                     $2008 = $2006 * $2007;
                     $2009 = $2003 + $2008;
                     $2010 = ((($5)) + 488|0);
                     $2011 = +HEAPF64[$2010>>3];
                     $2012 = -3240659.0 * $2011;
                     $2013 = ((($5)) + 464|0);
                     $2014 = +HEAPF64[$2013>>3];
                     $2015 = -1.0 * $2014;
                     $2016 = $x496;
                     $2017 = $2015 * $2016;
                     $2018 = $2012 + $2017;
                     $2019 = ((($5)) + 464|0);
                     $2020 = +HEAPF64[$2019>>3];
                     $2021 = 601661.75 * $2020;
                     $2022 = $2018 + $2021;
                     __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x498,$2009,$2022,1.9999999999999999E-6);
                     $2023 = ((($x498)) + 8|0);
                     $2024 = HEAP8[$2023>>0]|0;
                     $2025 = $2024&1;
                     if (!($2025)) {
                      break L366;
                     }
                     $2026 = +HEAPF64[$x497>>3];
                     $2027 = 1.5707963267949001 * $2026;
                     $2028 = -1.5707963267949001 + $2027;
                     $2029 = +HEAPF64[$x498>>3];
                     $2030 = $2028 + $2029;
                     HEAPF64[$j0array25>>3] = $2030;
                     $2031 = +HEAPF64[$j0array25>>3];
                     $2032 = (+__Z5IKsind($2031));
                     HEAPF64[$sj0array27>>3] = $2032;
                     $2033 = +HEAPF64[$j0array25>>3];
                     $2034 = (+__Z5IKcosd($2033));
                     HEAPF64[$cj0array26>>3] = $2034;
                     $2035 = +HEAPF64[$j0array25>>3];
                     $2036 = $2035 > 3.14159265358979;
                     $2037 = +HEAPF64[$j0array25>>3];
                     do {
                      if ($2036) {
                       $2038 = $2037 - 6.2831853071795898;
                       HEAPF64[$j0array25>>3] = $2038;
                      } else {
                       $2039 = $2037 < -3.14159265358979;
                       if (!($2039)) {
                        break;
                       }
                       $2040 = +HEAPF64[$j0array25>>3];
                       $2041 = $2040 + 6.2831853071795898;
                       HEAPF64[$j0array25>>3] = $2041;
                      }
                     } while(0);
                     HEAP8[$j0valid28>>0] = 1;
                     $ij029 = 0;
                     while(1) {
                      $2042 = $ij029;
                      $2043 = ($2042|0)<(1);
                      if (!($2043)) {
                       break L366;
                      }
                      $2044 = $ij029;
                      $2045 = (($j0valid28) + ($2044)|0);
                      $2046 = HEAP8[$2045>>0]|0;
                      $2047 = $2046&1;
                      do {
                       if ($2047) {
                        $2048 = $ij029;
                        $2049 = $2048&255;
                        $2050 = ((($5)) + 536|0);
                        HEAP8[$2050>>0] = $2049;
                        $2051 = ((($5)) + 536|0);
                        $2052 = ((($2051)) + 1|0);
                        HEAP8[$2052>>0] = -1;
                        $2053 = $ij029;
                        $2054 = (($2053) + 1)|0;
                        $iij030 = $2054;
                        L387: while(1) {
                         $2055 = $iij030;
                         $2056 = ($2055|0)<(1);
                         if (!($2056)) {
                          break;
                         }
                         $2057 = $iij030;
                         $2058 = (($j0valid28) + ($2057)|0);
                         $2059 = HEAP8[$2058>>0]|0;
                         $2060 = $2059&1;
                         do {
                          if ($2060) {
                           $2061 = $ij029;
                           $2062 = (($cj0array26) + ($2061<<3)|0);
                           $2063 = +HEAPF64[$2062>>3];
                           $2064 = $iij030;
                           $2065 = (($cj0array26) + ($2064<<3)|0);
                           $2066 = +HEAPF64[$2065>>3];
                           $2067 = $2063 - $2066;
                           $2068 = (+__Z5IKabsd($2067));
                           $2069 = $2068 < 9.9999999999999995E-7;
                           if (!($2069)) {
                            break;
                           }
                           $2070 = $ij029;
                           $2071 = (($sj0array27) + ($2070<<3)|0);
                           $2072 = +HEAPF64[$2071>>3];
                           $2073 = $iij030;
                           $2074 = (($sj0array27) + ($2073<<3)|0);
                           $2075 = +HEAPF64[$2074>>3];
                           $2076 = $2072 - $2075;
                           $2077 = (+__Z5IKabsd($2076));
                           $2078 = $2077 < 9.9999999999999995E-7;
                           if ($2078) {
                            label = 161;
                            break L387;
                           }
                          }
                         } while(0);
                         $2085 = $iij030;
                         $2086 = (($2085) + 1)|0;
                         $iij030 = $2086;
                        }
                        if ((label|0) == 161) {
                         label = 0;
                         $2079 = $iij030;
                         $2080 = (($j0valid28) + ($2079)|0);
                         HEAP8[$2080>>0] = 0;
                         $2081 = $iij030;
                         $2082 = $2081&255;
                         $2083 = ((($5)) + 536|0);
                         $2084 = ((($2083)) + 1|0);
                         HEAP8[$2084>>0] = $2082;
                        }
                        $2087 = $ij029;
                        $2088 = (($j0array25) + ($2087<<3)|0);
                        $2089 = +HEAPF64[$2088>>3];
                        HEAPF64[$5>>3] = $2089;
                        $2090 = $ij029;
                        $2091 = (($cj0array26) + ($2090<<3)|0);
                        $2092 = +HEAPF64[$2091>>3];
                        $2093 = ((($5)) + 8|0);
                        HEAPF64[$2093>>3] = $2092;
                        $2094 = $ij029;
                        $2095 = (($sj0array27) + ($2094<<3)|0);
                        $2096 = +HEAPF64[$2095>>3];
                        $2097 = ((($5)) + 16|0);
                        HEAPF64[$2097>>3] = $2096;
                        $2098 = +HEAPF64[$5>>3];
                        $2099 = (+__Z5IKsind($2098));
                        $x499 = $2099;
                        $2100 = +HEAPF64[$5>>3];
                        $2101 = (+__Z5IKcosd($2100));
                        $x500 = $2101;
                        $2102 = $x500;
                        $2103 = 1.0 * $2102;
                        $x501 = $2103;
                        $2104 = ((($5)) + 488|0);
                        $2105 = +HEAPF64[$2104>>3];
                        $2106 = $x499;
                        $2107 = $2105 * $2106;
                        $x502 = $2107;
                        $2108 = ((($5)) + 488|0);
                        $2109 = +HEAPF64[$2108>>3];
                        $2110 = -1.0 * $2109;
                        $2111 = $x501;
                        $2112 = $2110 * $2111;
                        $2113 = 0.15010000000000001 + $2112;
                        $2114 = ((($5)) + 464|0);
                        $2115 = +HEAPF64[$2114>>3];
                        $2116 = $x499;
                        $2117 = $2115 * $2116;
                        $2118 = $2113 + $2117;
                        HEAPF64[$evalcond31>>3] = $2118;
                        $2119 = ((($5)) + 464|0);
                        $2120 = +HEAPF64[$2119>>3];
                        $2121 = 0.86360000000000003 * $2120;
                        $2122 = $x500;
                        $2123 = $2121 * $2122;
                        $2124 = 0.02406647 + $2123;
                        $2125 = $x502;
                        $2126 = 0.86360000000000003 * $2125;
                        $2127 = $2124 + $2126;
                        $2128 = ((($5)) + 528|0);
                        $2129 = +HEAPF64[$2128>>3];
                        $2130 = -1.0 * $2129;
                        $2131 = $2127 + $2130;
                        $2132 = ((($evalcond31)) + 8|0);
                        HEAPF64[$2132>>3] = $2131;
                        $2133 = ((($5)) + 96|0);
                        $2134 = +HEAPF64[$2133>>3];
                        $2135 = 0.43405148926345 * $2134;
                        $2136 = 0.43180000000000002 + $2135;
                        $2137 = ((($5)) + 512|0);
                        $2138 = +HEAPF64[$2137>>3];
                        $2139 = -0.046871392288155199 * $2138;
                        $2140 = $2136 + $2139;
                        $2141 = $x502;
                        $2142 = -1.0 * $2141;
                        $2143 = $2140 + $2142;
                        $2144 = ((($5)) + 464|0);
                        $2145 = +HEAPF64[$2144>>3];
                        $2146 = -1.0 * $2145;
                        $2147 = $x501;
                        $2148 = $2146 * $2147;
                        $2149 = $2143 + $2148;
                        $2150 = ((($evalcond31)) + 16|0);
                        HEAPF64[$2150>>3] = $2149;
                        $2151 = +HEAPF64[$evalcond31>>3];
                        $2152 = (+__Z5IKabsd($2151));
                        $2153 = $2152 > 5.0000000000000004E-6;
                        if ($2153) {
                         break;
                        }
                        $2154 = ((($evalcond31)) + 8|0);
                        $2155 = +HEAPF64[$2154>>3];
                        $2156 = (+__Z5IKabsd($2155));
                        $2157 = $2156 > 5.0000000000000004E-6;
                        if ($2157) {
                         break;
                        }
                        $2158 = ((($evalcond31)) + 16|0);
                        $2159 = +HEAPF64[$2158>>3];
                        $2160 = (+__Z5IKabsd($2159));
                        $2161 = $2160 > 5.0000000000000004E-6;
                        if ($2161) {
                         break;
                        }
                        $2162 = $4;
                        __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($5,$2162);
                       }
                      } while(0);
                      $2163 = $ij029;
                      $2164 = (($2163) + 1)|0;
                      $ij029 = $2164;
                     }
                    }
                   } while(0);
                   $1702 = ((($5)) + 56|0);
                   HEAPF64[$1702>>3] = 0.0;
                   $1703 = ((($5)) + 48|0);
                   HEAPF64[$1703>>3] = 1.0;
                   $1704 = ((($5)) + 40|0);
                   HEAPF64[$1704>>3] = 0.0;
                   $1705 = ((($5)) + 512|0);
                   $1706 = +HEAPF64[$1705>>3];
                   $1707 = ((($5)) + 512|0);
                   $1708 = +HEAPF64[$1707>>3];
                   $1709 = $1706 * $1708;
                   $x485 = $1709;
                   $1710 = ((($5)) + 96|0);
                   $1711 = +HEAPF64[$1710>>3];
                   $1712 = 4340.5148926345 * $1711;
                   $x486 = $1712;
                   $1713 = ((($5)) + 512|0);
                   $1714 = +HEAPF64[$1713>>3];
                   $1715 = 468.71392288155198 * $1714;
                   $x487 = $1715;
                   $1716 = $x485;
                   $1717 = -1.0 * $1716;
                   $1718 = ((($5)) + 528|0);
                   $1719 = +HEAPF64[$1718>>3];
                   $1720 = $1717 + $1719;
                   HEAPF64[$j0eval17>>3] = $1720;
                   $1721 = $x485;
                   $1722 = -1.0E+4 * $1721;
                   $1723 = ((($5)) + 528|0);
                   $1724 = +HEAPF64[$1723>>3];
                   $1725 = 1.0E+4 * $1724;
                   $1726 = $1722 + $1725;
                   $1727 = (+__Z6IKsignd($1726));
                   $1728 = ((($j0eval17)) + 8|0);
                   HEAPF64[$1728>>3] = $1727;
                   $1729 = ((($5)) + 488|0);
                   $1730 = +HEAPF64[$1729>>3];
                   $1731 = $x486;
                   $1732 = $1730 * $1731;
                   $1733 = ((($5)) + 488|0);
                   $1734 = +HEAPF64[$1733>>3];
                   $1735 = 4318.0 * $1734;
                   $1736 = $1732 + $1735;
                   $1737 = ((($5)) + 464|0);
                   $1738 = +HEAPF64[$1737>>3];
                   $1739 = -1501.0 * $1738;
                   $1740 = $1736 + $1739;
                   $1741 = ((($5)) + 488|0);
                   $1742 = +HEAPF64[$1741>>3];
                   $1743 = -1.0 * $1742;
                   $1744 = $x487;
                   $1745 = $1743 * $1744;
                   $1746 = $1740 + $1745;
                   $1747 = (+__Z5IKabsd($1746));
                   $1748 = ((($5)) + 488|0);
                   $1749 = +HEAPF64[$1748>>3];
                   $1750 = 1501.0 * $1749;
                   $1751 = ((($5)) + 464|0);
                   $1752 = +HEAPF64[$1751>>3];
                   $1753 = $x486;
                   $1754 = $1752 * $1753;
                   $1755 = $1750 + $1754;
                   $1756 = ((($5)) + 464|0);
                   $1757 = +HEAPF64[$1756>>3];
                   $1758 = -1.0 * $1757;
                   $1759 = $x487;
                   $1760 = $1758 * $1759;
                   $1761 = $1755 + $1760;
                   $1762 = ((($5)) + 464|0);
                   $1763 = +HEAPF64[$1762>>3];
                   $1764 = 4318.0 * $1763;
                   $1765 = $1761 + $1764;
                   $1766 = (+__Z5IKabsd($1765));
                   $1767 = $1747 + $1766;
                   $1768 = ((($j0eval17)) + 16|0);
                   HEAPF64[$1768>>3] = $1767;
                   $1769 = +HEAPF64[$j0eval17>>3];
                   $1770 = (+__Z5IKabsd($1769));
                   $1771 = $1770 < 9.9999999999999995E-7;
                   if ($1771) {
                    break;
                   }
                   $1772 = ((($j0eval17)) + 8|0);
                   $1773 = +HEAPF64[$1772>>3];
                   $1774 = (+__Z5IKabsd($1773));
                   $1775 = $1774 < 9.9999999999999995E-7;
                   if ($1775) {
                    break;
                   }
                   $1776 = ((($j0eval17)) + 16|0);
                   $1777 = +HEAPF64[$1776>>3];
                   $1778 = (+__Z5IKabsd($1777));
                   $1779 = $1778 < 9.9999999999999995E-7;
                   if ($1779) {
                    break;
                   }
                   ;HEAP8[$j0valid21>>0]=0|0;
                   $1780 = ((($5)) + 538|0);
                   HEAP8[$1780>>0] = 1;
                   $1781 = ((($5)) + 96|0);
                   $1782 = +HEAPF64[$1781>>3];
                   $1783 = 4340.5148926345 * $1782;
                   $x488 = $1783;
                   $1784 = ((($5)) + 512|0);
                   $1785 = +HEAPF64[$1784>>3];
                   $1786 = 468.71392288155198 * $1785;
                   $x489 = $1786;
                   $1787 = ((($5)) + 488|0);
                   $1788 = +HEAPF64[$1787>>3];
                   $1789 = $x488;
                   $1790 = $1788 * $1789;
                   $1791 = ((($5)) + 488|0);
                   $1792 = +HEAPF64[$1791>>3];
                   $1793 = 4318.0 * $1792;
                   $1794 = $1790 + $1793;
                   $1795 = ((($5)) + 464|0);
                   $1796 = +HEAPF64[$1795>>3];
                   $1797 = -1501.0 * $1796;
                   $1798 = $1794 + $1797;
                   $1799 = ((($5)) + 488|0);
                   $1800 = +HEAPF64[$1799>>3];
                   $1801 = -1.0 * $1800;
                   $1802 = $x489;
                   $1803 = $1801 * $1802;
                   $1804 = $1798 + $1803;
                   $1805 = ((($5)) + 488|0);
                   $1806 = +HEAPF64[$1805>>3];
                   $1807 = 1501.0 * $1806;
                   $1808 = ((($5)) + 464|0);
                   $1809 = +HEAPF64[$1808>>3];
                   $1810 = $x488;
                   $1811 = $1809 * $1810;
                   $1812 = $1807 + $1811;
                   $1813 = ((($5)) + 464|0);
                   $1814 = +HEAPF64[$1813>>3];
                   $1815 = -1.0 * $1814;
                   $1816 = $x489;
                   $1817 = $1815 * $1816;
                   $1818 = $1812 + $1817;
                   $1819 = ((($5)) + 464|0);
                   $1820 = +HEAPF64[$1819>>3];
                   $1821 = 4318.0 * $1820;
                   $1822 = $1818 + $1821;
                   __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x490,$1804,$1822,1.9999999999999999E-6);
                   $1823 = ((($x490)) + 8|0);
                   $1824 = HEAP8[$1823>>0]|0;
                   $1825 = $1824&1;
                   if (!($1825)) {
                    break;
                   }
                   $1826 = ((($5)) + 512|0);
                   $1827 = +HEAPF64[$1826>>3];
                   $1828 = ((($5)) + 512|0);
                   $1829 = +HEAPF64[$1828>>3];
                   $1830 = $1827 * $1829;
                   $1831 = -1.0E+4 * $1830;
                   $1832 = ((($5)) + 528|0);
                   $1833 = +HEAPF64[$1832>>3];
                   $1834 = 1.0E+4 * $1833;
                   $1835 = $1831 + $1834;
                   $1836 = (+__Z6IKsignd($1835));
                   __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x491,$1836,-1);
                   $1837 = ((($x491)) + 8|0);
                   $1838 = HEAP8[$1837>>0]|0;
                   $1839 = $1838&1;
                   if (!($1839)) {
                    break;
                   }
                   $1840 = +HEAPF64[$x490>>3];
                   $1841 = -1.5707963267949001 + $1840;
                   $1842 = +HEAPF64[$x491>>3];
                   $1843 = 1.5707963267949001 * $1842;
                   $1844 = $1841 + $1843;
                   HEAPF64[$j0array18>>3] = $1844;
                   $1845 = +HEAPF64[$j0array18>>3];
                   $1846 = (+__Z5IKsind($1845));
                   HEAPF64[$sj0array20>>3] = $1846;
                   $1847 = +HEAPF64[$j0array18>>3];
                   $1848 = (+__Z5IKcosd($1847));
                   HEAPF64[$cj0array19>>3] = $1848;
                   $1849 = +HEAPF64[$j0array18>>3];
                   $1850 = $1849 > 3.14159265358979;
                   $1851 = +HEAPF64[$j0array18>>3];
                   do {
                    if ($1850) {
                     $1852 = $1851 - 6.2831853071795898;
                     HEAPF64[$j0array18>>3] = $1852;
                    } else {
                     $1853 = $1851 < -3.14159265358979;
                     if (!($1853)) {
                      break;
                     }
                     $1854 = +HEAPF64[$j0array18>>3];
                     $1855 = $1854 + 6.2831853071795898;
                     HEAPF64[$j0array18>>3] = $1855;
                    }
                   } while(0);
                   HEAP8[$j0valid21>>0] = 1;
                   $ij022 = 0;
                   while(1) {
                    $1856 = $ij022;
                    $1857 = ($1856|0)<(1);
                    if (!($1857)) {
                     break L366;
                    }
                    $1858 = $ij022;
                    $1859 = (($j0valid21) + ($1858)|0);
                    $1860 = HEAP8[$1859>>0]|0;
                    $1861 = $1860&1;
                    do {
                     if ($1861) {
                      $1862 = $ij022;
                      $1863 = $1862&255;
                      $1864 = ((($5)) + 536|0);
                      HEAP8[$1864>>0] = $1863;
                      $1865 = ((($5)) + 536|0);
                      $1866 = ((($1865)) + 1|0);
                      HEAP8[$1866>>0] = -1;
                      $1867 = $ij022;
                      $1868 = (($1867) + 1)|0;
                      $iij023 = $1868;
                      L417: while(1) {
                       $1869 = $iij023;
                       $1870 = ($1869|0)<(1);
                       if (!($1870)) {
                        break;
                       }
                       $1871 = $iij023;
                       $1872 = (($j0valid21) + ($1871)|0);
                       $1873 = HEAP8[$1872>>0]|0;
                       $1874 = $1873&1;
                       do {
                        if ($1874) {
                         $1875 = $ij022;
                         $1876 = (($cj0array19) + ($1875<<3)|0);
                         $1877 = +HEAPF64[$1876>>3];
                         $1878 = $iij023;
                         $1879 = (($cj0array19) + ($1878<<3)|0);
                         $1880 = +HEAPF64[$1879>>3];
                         $1881 = $1877 - $1880;
                         $1882 = (+__Z5IKabsd($1881));
                         $1883 = $1882 < 9.9999999999999995E-7;
                         if (!($1883)) {
                          break;
                         }
                         $1884 = $ij022;
                         $1885 = (($sj0array20) + ($1884<<3)|0);
                         $1886 = +HEAPF64[$1885>>3];
                         $1887 = $iij023;
                         $1888 = (($sj0array20) + ($1887<<3)|0);
                         $1889 = +HEAPF64[$1888>>3];
                         $1890 = $1886 - $1889;
                         $1891 = (+__Z5IKabsd($1890));
                         $1892 = $1891 < 9.9999999999999995E-7;
                         if ($1892) {
                          label = 140;
                          break L417;
                         }
                        }
                       } while(0);
                       $1899 = $iij023;
                       $1900 = (($1899) + 1)|0;
                       $iij023 = $1900;
                      }
                      if ((label|0) == 140) {
                       label = 0;
                       $1893 = $iij023;
                       $1894 = (($j0valid21) + ($1893)|0);
                       HEAP8[$1894>>0] = 0;
                       $1895 = $iij023;
                       $1896 = $1895&255;
                       $1897 = ((($5)) + 536|0);
                       $1898 = ((($1897)) + 1|0);
                       HEAP8[$1898>>0] = $1896;
                      }
                      $1901 = $ij022;
                      $1902 = (($j0array18) + ($1901<<3)|0);
                      $1903 = +HEAPF64[$1902>>3];
                      HEAPF64[$5>>3] = $1903;
                      $1904 = $ij022;
                      $1905 = (($cj0array19) + ($1904<<3)|0);
                      $1906 = +HEAPF64[$1905>>3];
                      $1907 = ((($5)) + 8|0);
                      HEAPF64[$1907>>3] = $1906;
                      $1908 = $ij022;
                      $1909 = (($sj0array20) + ($1908<<3)|0);
                      $1910 = +HEAPF64[$1909>>3];
                      $1911 = ((($5)) + 16|0);
                      HEAPF64[$1911>>3] = $1910;
                      $1912 = +HEAPF64[$5>>3];
                      $1913 = (+__Z5IKsind($1912));
                      $x492 = $1913;
                      $1914 = +HEAPF64[$5>>3];
                      $1915 = (+__Z5IKcosd($1914));
                      $x493 = $1915;
                      $1916 = $x493;
                      $1917 = 1.0 * $1916;
                      $x494 = $1917;
                      $1918 = ((($5)) + 488|0);
                      $1919 = +HEAPF64[$1918>>3];
                      $1920 = $x492;
                      $1921 = $1919 * $1920;
                      $x495 = $1921;
                      $1922 = ((($5)) + 464|0);
                      $1923 = +HEAPF64[$1922>>3];
                      $1924 = $x492;
                      $1925 = $1923 * $1924;
                      $1926 = 0.15010000000000001 + $1925;
                      $1927 = ((($5)) + 488|0);
                      $1928 = +HEAPF64[$1927>>3];
                      $1929 = -1.0 * $1928;
                      $1930 = $x494;
                      $1931 = $1929 * $1930;
                      $1932 = $1926 + $1931;
                      HEAPF64[$evalcond24>>3] = $1932;
                      $1933 = $x495;
                      $1934 = 0.86360000000000003 * $1933;
                      $1935 = 0.02406647 + $1934;
                      $1936 = ((($5)) + 528|0);
                      $1937 = +HEAPF64[$1936>>3];
                      $1938 = -1.0 * $1937;
                      $1939 = $1935 + $1938;
                      $1940 = ((($5)) + 464|0);
                      $1941 = +HEAPF64[$1940>>3];
                      $1942 = 0.86360000000000003 * $1941;
                      $1943 = $x493;
                      $1944 = $1942 * $1943;
                      $1945 = $1939 + $1944;
                      $1946 = ((($evalcond24)) + 8|0);
                      HEAPF64[$1946>>3] = $1945;
                      $1947 = ((($5)) + 464|0);
                      $1948 = +HEAPF64[$1947>>3];
                      $1949 = -1.0 * $1948;
                      $1950 = $x494;
                      $1951 = $1949 * $1950;
                      $1952 = 0.43180000000000002 + $1951;
                      $1953 = ((($5)) + 96|0);
                      $1954 = +HEAPF64[$1953>>3];
                      $1955 = 0.43405148926345 * $1954;
                      $1956 = $1952 + $1955;
                      $1957 = $x495;
                      $1958 = -1.0 * $1957;
                      $1959 = $1956 + $1958;
                      $1960 = ((($5)) + 512|0);
                      $1961 = +HEAPF64[$1960>>3];
                      $1962 = -0.046871392288155199 * $1961;
                      $1963 = $1959 + $1962;
                      $1964 = ((($evalcond24)) + 16|0);
                      HEAPF64[$1964>>3] = $1963;
                      $1965 = +HEAPF64[$evalcond24>>3];
                      $1966 = (+__Z5IKabsd($1965));
                      $1967 = $1966 > 5.0000000000000004E-6;
                      if ($1967) {
                       break;
                      }
                      $1968 = ((($evalcond24)) + 8|0);
                      $1969 = +HEAPF64[$1968>>3];
                      $1970 = (+__Z5IKabsd($1969));
                      $1971 = $1970 > 5.0000000000000004E-6;
                      if ($1971) {
                       break;
                      }
                      $1972 = ((($evalcond24)) + 16|0);
                      $1973 = +HEAPF64[$1972>>3];
                      $1974 = (+__Z5IKabsd($1973));
                      $1975 = $1974 > 5.0000000000000004E-6;
                      if ($1975) {
                       break;
                      }
                      $1976 = $4;
                      __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($5,$1976);
                     }
                    } while(0);
                    $1977 = $ij022;
                    $1978 = (($1977) + 1)|0;
                    $ij022 = $1978;
                   }
                  }
                 } while(0);
                 $2165 = $bgotonextstatement15;
                 $2166 = $2165&1;
                 if (!($2166)) {
                  break;
                 }
                 $bgotonextstatement32 = 1;
                 $2167 = ((($5)) + 96|0);
                 $2168 = +HEAPF64[$2167>>3];
                 $2169 = 0.020299999999999999 * $2168;
                 $x503 = $2169;
                 $2170 = ((($5)) + 88|0);
                 $2171 = +HEAPF64[$2170>>3];
                 $2172 = 0.43309999999999998 * $2171;
                 $x504 = $2172;
                 $2173 = $x503;
                 $2174 = $x504;
                 $2175 = $2173 + $2174;
                 $x505 = $2175;
                 $2176 = ((($5)) + 40|0);
                 $2177 = +HEAPF64[$2176>>3];
                 $2178 = -3.14159265358979 + $2177;
                 $2179 = (+__Z5IKabsd($2178));
                 $2180 = 3.14159265358979 + $2179;
                 $2181 = (+__Z6IKfmoddd($2180,6.2831853071795898));
                 $2182 = -3.14159265358979 + $2181;
                 HEAPF64[$evalcond>>3] = $2182;
                 $2183 = ((($5)) + 88|0);
                 $2184 = +HEAPF64[$2183>>3];
                 $2185 = -0.017531080000000001 * $2184;
                 $2186 = 0.39696894999999999 + $2185;
                 $2187 = ((($5)) + 528|0);
                 $2188 = +HEAPF64[$2187>>3];
                 $2189 = -1.0 * $2188;
                 $2190 = $2186 + $2189;
                 $2191 = ((($5)) + 96|0);
                 $2192 = +HEAPF64[$2191>>3];
                 $2193 = 0.37402516000000002 * $2192;
                 $2194 = $2190 + $2193;
                 $2195 = ((($evalcond)) + 8|0);
                 HEAPF64[$2195>>3] = $2194;
                 $2196 = $x505;
                 $2197 = -1.0 * $2196;
                 $2198 = ((($5)) + 512|0);
                 $2199 = +HEAPF64[$2198>>3];
                 $2200 = -1.0 * $2199;
                 $2201 = $2197 + $2200;
                 $2202 = ((($evalcond)) + 16|0);
                 HEAPF64[$2202>>3] = $2201;
                 $2203 = ((($5)) + 512|0);
                 $2204 = +HEAPF64[$2203>>3];
                 $2205 = $x505;
                 $2206 = $2204 + $2205;
                 $2207 = ((($evalcond)) + 24|0);
                 HEAPF64[$2207>>3] = $2206;
                 $2208 = +HEAPF64[$evalcond>>3];
                 $2209 = (+__Z5IKabsd($2208));
                 $2210 = $2209 < 9.9999999999999995E-7;
                 L433: do {
                  if ($2210) {
                   $2211 = ((($evalcond)) + 8|0);
                   $2212 = +HEAPF64[$2211>>3];
                   $2213 = (+__Z5IKabsd($2212));
                   $2214 = $2213 < 9.9999999999999995E-7;
                   if (!($2214)) {
                    break;
                   }
                   $2215 = ((($evalcond)) + 16|0);
                   $2216 = +HEAPF64[$2215>>3];
                   $2217 = (+__Z5IKabsd($2216));
                   $2218 = $2217 < 9.9999999999999995E-7;
                   if (!($2218)) {
                    break;
                   }
                   $2219 = ((($evalcond)) + 24|0);
                   $2220 = +HEAPF64[$2219>>3];
                   $2221 = (+__Z5IKabsd($2220));
                   $2222 = $2221 < 9.9999999999999995E-7;
                   if (!($2222)) {
                    break;
                   }
                   $bgotonextstatement32 = 0;
                   $2223 = ((($5)) + 56|0);
                   HEAPF64[$2223>>3] = 0.0;
                   $2224 = ((($5)) + 48|0);
                   HEAPF64[$2224>>3] = -1.0;
                   $2225 = ((($5)) + 40|0);
                   HEAPF64[$2225>>3] = 3.14159265358979;
                   $2226 = ((($5)) + 512|0);
                   $2227 = +HEAPF64[$2226>>3];
                   $2228 = ((($5)) + 512|0);
                   $2229 = +HEAPF64[$2228>>3];
                   $2230 = $2227 * $2229;
                   $x506 = $2230;
                   $2231 = ((($5)) + 528|0);
                   $2232 = +HEAPF64[$2231>>3];
                   $2233 = 2.5E+7 * $2232;
                   $x507 = $2233;
                   $2234 = ((($5)) + 528|0);
                   $2235 = +HEAPF64[$2234>>3];
                   $2236 = $x506;
                   $2237 = -1.0 * $2236;
                   $2238 = $2235 + $2237;
                   HEAPF64[$j0eval33>>3] = $2238;
                   $2239 = ((($5)) + 464|0);
                   $2240 = +HEAPF64[$2239>>3];
                   $2241 = 601661.75 * $2240;
                   $2242 = ((($5)) + 488|0);
                   $2243 = +HEAPF64[$2242>>3];
                   $2244 = 3240659.0 * $2243;
                   $2245 = $2241 + $2244;
                   $2246 = ((($5)) + 464|0);
                   $2247 = +HEAPF64[$2246>>3];
                   $2248 = -1.0 * $2247;
                   $2249 = $x507;
                   $2250 = $2248 * $2249;
                   $2251 = $2245 + $2250;
                   $2252 = (+__Z5IKabsd($2251));
                   $2253 = ((($5)) + 488|0);
                   $2254 = +HEAPF64[$2253>>3];
                   $2255 = -1.0 * $2254;
                   $2256 = $x507;
                   $2257 = $2255 * $2256;
                   $2258 = ((($5)) + 464|0);
                   $2259 = +HEAPF64[$2258>>3];
                   $2260 = -3240659.0 * $2259;
                   $2261 = $2257 + $2260;
                   $2262 = ((($5)) + 488|0);
                   $2263 = +HEAPF64[$2262>>3];
                   $2264 = 601661.75 * $2263;
                   $2265 = $2261 + $2264;
                   $2266 = (+__Z5IKabsd($2265));
                   $2267 = $2252 + $2266;
                   $2268 = ((($j0eval33)) + 8|0);
                   HEAPF64[$2268>>3] = $2267;
                   $2269 = $x506;
                   $2270 = -2.159E+7 * $2269;
                   $2271 = ((($5)) + 528|0);
                   $2272 = +HEAPF64[$2271>>3];
                   $2273 = 2.159E+7 * $2272;
                   $2274 = $2270 + $2273;
                   $2275 = (+__Z6IKsignd($2274));
                   $2276 = ((($j0eval33)) + 16|0);
                   HEAPF64[$2276>>3] = $2275;
                   $2277 = +HEAPF64[$j0eval33>>3];
                   $2278 = (+__Z5IKabsd($2277));
                   $2279 = $2278 < 9.9999999999999995E-7;
                   do {
                    if (!($2279)) {
                     $2280 = ((($j0eval33)) + 8|0);
                     $2281 = +HEAPF64[$2280>>3];
                     $2282 = (+__Z5IKabsd($2281));
                     $2283 = $2282 < 9.9999999999999995E-7;
                     if ($2283) {
                      break;
                     }
                     $2284 = ((($j0eval33)) + 16|0);
                     $2285 = +HEAPF64[$2284>>3];
                     $2286 = (+__Z5IKabsd($2285));
                     $2287 = $2286 < 9.9999999999999995E-7;
                     if ($2287) {
                      break;
                     }
                     ;HEAP8[$j0valid45>>0]=0|0;
                     $2555 = ((($5)) + 538|0);
                     HEAP8[$2555>>0] = 1;
                     $2556 = ((($5)) + 528|0);
                     $2557 = +HEAPF64[$2556>>3];
                     $2558 = 2.5E+7 * $2557;
                     $x519 = $2558;
                     $2559 = ((($5)) + 464|0);
                     $2560 = +HEAPF64[$2559>>3];
                     $2561 = -3240659.0 * $2560;
                     $2562 = ((($5)) + 488|0);
                     $2563 = +HEAPF64[$2562>>3];
                     $2564 = 601661.75 * $2563;
                     $2565 = $2561 + $2564;
                     $2566 = ((($5)) + 488|0);
                     $2567 = +HEAPF64[$2566>>3];
                     $2568 = -1.0 * $2567;
                     $2569 = $x519;
                     $2570 = $2568 * $2569;
                     $2571 = $2565 + $2570;
                     $2572 = ((($5)) + 464|0);
                     $2573 = +HEAPF64[$2572>>3];
                     $2574 = -1.0 * $2573;
                     $2575 = $x519;
                     $2576 = $2574 * $2575;
                     $2577 = ((($5)) + 464|0);
                     $2578 = +HEAPF64[$2577>>3];
                     $2579 = 601661.75 * $2578;
                     $2580 = $2576 + $2579;
                     $2581 = ((($5)) + 488|0);
                     $2582 = +HEAPF64[$2581>>3];
                     $2583 = 3240659.0 * $2582;
                     $2584 = $2580 + $2583;
                     __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x520,$2571,$2584,1.9999999999999999E-6);
                     $2585 = ((($x520)) + 8|0);
                     $2586 = HEAP8[$2585>>0]|0;
                     $2587 = $2586&1;
                     if (!($2587)) {
                      break L433;
                     }
                     $2588 = ((($5)) + 512|0);
                     $2589 = +HEAPF64[$2588>>3];
                     $2590 = ((($5)) + 512|0);
                     $2591 = +HEAPF64[$2590>>3];
                     $2592 = $2589 * $2591;
                     $2593 = -2.159E+7 * $2592;
                     $2594 = ((($5)) + 528|0);
                     $2595 = +HEAPF64[$2594>>3];
                     $2596 = 2.159E+7 * $2595;
                     $2597 = $2593 + $2596;
                     $2598 = (+__Z6IKsignd($2597));
                     __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x521,$2598,-1);
                     $2599 = ((($x521)) + 8|0);
                     $2600 = HEAP8[$2599>>0]|0;
                     $2601 = $2600&1;
                     if (!($2601)) {
                      break L433;
                     }
                     $2602 = +HEAPF64[$x520>>3];
                     $2603 = -1.5707963267949001 + $2602;
                     $2604 = +HEAPF64[$x521>>3];
                     $2605 = 1.5707963267949001 * $2604;
                     $2606 = $2603 + $2605;
                     HEAPF64[$j0array42>>3] = $2606;
                     $2607 = +HEAPF64[$j0array42>>3];
                     $2608 = (+__Z5IKsind($2607));
                     HEAPF64[$sj0array44>>3] = $2608;
                     $2609 = +HEAPF64[$j0array42>>3];
                     $2610 = (+__Z5IKcosd($2609));
                     HEAPF64[$cj0array43>>3] = $2610;
                     $2611 = +HEAPF64[$j0array42>>3];
                     $2612 = $2611 > 3.14159265358979;
                     $2613 = +HEAPF64[$j0array42>>3];
                     do {
                      if ($2612) {
                       $2614 = $2613 - 6.2831853071795898;
                       HEAPF64[$j0array42>>3] = $2614;
                      } else {
                       $2615 = $2613 < -3.14159265358979;
                       if (!($2615)) {
                        break;
                       }
                       $2616 = +HEAPF64[$j0array42>>3];
                       $2617 = $2616 + 6.2831853071795898;
                       HEAPF64[$j0array42>>3] = $2617;
                      }
                     } while(0);
                     HEAP8[$j0valid45>>0] = 1;
                     $ij046 = 0;
                     while(1) {
                      $2618 = $ij046;
                      $2619 = ($2618|0)<(1);
                      if (!($2619)) {
                       break L433;
                      }
                      $2620 = $ij046;
                      $2621 = (($j0valid45) + ($2620)|0);
                      $2622 = HEAP8[$2621>>0]|0;
                      $2623 = $2622&1;
                      do {
                       if ($2623) {
                        $2624 = $ij046;
                        $2625 = $2624&255;
                        $2626 = ((($5)) + 536|0);
                        HEAP8[$2626>>0] = $2625;
                        $2627 = ((($5)) + 536|0);
                        $2628 = ((($2627)) + 1|0);
                        HEAP8[$2628>>0] = -1;
                        $2629 = $ij046;
                        $2630 = (($2629) + 1)|0;
                        $iij047 = $2630;
                        L454: while(1) {
                         $2631 = $iij047;
                         $2632 = ($2631|0)<(1);
                         if (!($2632)) {
                          break;
                         }
                         $2633 = $iij047;
                         $2634 = (($j0valid45) + ($2633)|0);
                         $2635 = HEAP8[$2634>>0]|0;
                         $2636 = $2635&1;
                         do {
                          if ($2636) {
                           $2637 = $ij046;
                           $2638 = (($cj0array43) + ($2637<<3)|0);
                           $2639 = +HEAPF64[$2638>>3];
                           $2640 = $iij047;
                           $2641 = (($cj0array43) + ($2640<<3)|0);
                           $2642 = +HEAPF64[$2641>>3];
                           $2643 = $2639 - $2642;
                           $2644 = (+__Z5IKabsd($2643));
                           $2645 = $2644 < 9.9999999999999995E-7;
                           if (!($2645)) {
                            break;
                           }
                           $2646 = $ij046;
                           $2647 = (($sj0array44) + ($2646<<3)|0);
                           $2648 = +HEAPF64[$2647>>3];
                           $2649 = $iij047;
                           $2650 = (($sj0array44) + ($2649<<3)|0);
                           $2651 = +HEAPF64[$2650>>3];
                           $2652 = $2648 - $2651;
                           $2653 = (+__Z5IKabsd($2652));
                           $2654 = $2653 < 9.9999999999999995E-7;
                           if ($2654) {
                            label = 214;
                            break L454;
                           }
                          }
                         } while(0);
                         $2661 = $iij047;
                         $2662 = (($2661) + 1)|0;
                         $iij047 = $2662;
                        }
                        if ((label|0) == 214) {
                         label = 0;
                         $2655 = $iij047;
                         $2656 = (($j0valid45) + ($2655)|0);
                         HEAP8[$2656>>0] = 0;
                         $2657 = $iij047;
                         $2658 = $2657&255;
                         $2659 = ((($5)) + 536|0);
                         $2660 = ((($2659)) + 1|0);
                         HEAP8[$2660>>0] = $2658;
                        }
                        $2663 = $ij046;
                        $2664 = (($j0array42) + ($2663<<3)|0);
                        $2665 = +HEAPF64[$2664>>3];
                        HEAPF64[$5>>3] = $2665;
                        $2666 = $ij046;
                        $2667 = (($cj0array43) + ($2666<<3)|0);
                        $2668 = +HEAPF64[$2667>>3];
                        $2669 = ((($5)) + 8|0);
                        HEAPF64[$2669>>3] = $2668;
                        $2670 = $ij046;
                        $2671 = (($sj0array44) + ($2670<<3)|0);
                        $2672 = +HEAPF64[$2671>>3];
                        $2673 = ((($5)) + 16|0);
                        HEAPF64[$2673>>3] = $2672;
                        $2674 = +HEAPF64[$5>>3];
                        $2675 = (+__Z5IKsind($2674));
                        $x522 = $2675;
                        $2676 = +HEAPF64[$5>>3];
                        $2677 = (+__Z5IKcosd($2676));
                        $x523 = $2677;
                        $2678 = ((($5)) + 464|0);
                        $2679 = +HEAPF64[$2678>>3];
                        $2680 = $x523;
                        $2681 = $2679 * $2680;
                        $x524 = $2681;
                        $2682 = ((($5)) + 488|0);
                        $2683 = +HEAPF64[$2682>>3];
                        $2684 = $x522;
                        $2685 = $2683 * $2684;
                        $x525 = $2685;
                        $2686 = ((($5)) + 488|0);
                        $2687 = +HEAPF64[$2686>>3];
                        $2688 = -1.0 * $2687;
                        $2689 = $x523;
                        $2690 = $2688 * $2689;
                        $2691 = 0.15010000000000001 + $2690;
                        $2692 = ((($5)) + 464|0);
                        $2693 = +HEAPF64[$2692>>3];
                        $2694 = $x522;
                        $2695 = $2693 * $2694;
                        $2696 = $2691 + $2695;
                        HEAPF64[$evalcond48>>3] = $2696;
                        $2697 = $x525;
                        $2698 = -0.86360000000000003 * $2697;
                        $2699 = 0.02406647 + $2698;
                        $2700 = $x524;
                        $2701 = -0.86360000000000003 * $2700;
                        $2702 = $2699 + $2701;
                        $2703 = ((($5)) + 528|0);
                        $2704 = +HEAPF64[$2703>>3];
                        $2705 = -1.0 * $2704;
                        $2706 = $2702 + $2705;
                        $2707 = ((($evalcond48)) + 8|0);
                        HEAPF64[$2707>>3] = $2706;
                        $2708 = ((($5)) + 96|0);
                        $2709 = +HEAPF64[$2708>>3];
                        $2710 = 0.43405148926345 * $2709;
                        $2711 = 0.43180000000000002 + $2710;
                        $2712 = ((($5)) + 512|0);
                        $2713 = +HEAPF64[$2712>>3];
                        $2714 = 0.046871392288155199 * $2713;
                        $2715 = $2711 + $2714;
                        $2716 = $x524;
                        $2717 = $2715 + $2716;
                        $2718 = $x525;
                        $2719 = $2717 + $2718;
                        $2720 = ((($evalcond48)) + 16|0);
                        HEAPF64[$2720>>3] = $2719;
                        $2721 = +HEAPF64[$evalcond48>>3];
                        $2722 = (+__Z5IKabsd($2721));
                        $2723 = $2722 > 5.0000000000000004E-6;
                        if ($2723) {
                         break;
                        }
                        $2724 = ((($evalcond48)) + 8|0);
                        $2725 = +HEAPF64[$2724>>3];
                        $2726 = (+__Z5IKabsd($2725));
                        $2727 = $2726 > 5.0000000000000004E-6;
                        if ($2727) {
                         break;
                        }
                        $2728 = ((($evalcond48)) + 16|0);
                        $2729 = +HEAPF64[$2728>>3];
                        $2730 = (+__Z5IKabsd($2729));
                        $2731 = $2730 > 5.0000000000000004E-6;
                        if ($2731) {
                         break;
                        }
                        $2732 = $4;
                        __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($5,$2732);
                       }
                      } while(0);
                      $2733 = $ij046;
                      $2734 = (($2733) + 1)|0;
                      $ij046 = $2734;
                     }
                    }
                   } while(0);
                   $2288 = ((($5)) + 56|0);
                   HEAPF64[$2288>>3] = 0.0;
                   $2289 = ((($5)) + 48|0);
                   HEAPF64[$2289>>3] = -1.0;
                   $2290 = ((($5)) + 40|0);
                   HEAPF64[$2290>>3] = 3.14159265358979;
                   $2291 = ((($5)) + 512|0);
                   $2292 = +HEAPF64[$2291>>3];
                   $2293 = ((($5)) + 512|0);
                   $2294 = +HEAPF64[$2293>>3];
                   $2295 = $2292 * $2294;
                   $x508 = $2295;
                   $2296 = ((($5)) + 96|0);
                   $2297 = +HEAPF64[$2296>>3];
                   $2298 = 4340.5148926345 * $2297;
                   $x509 = $2298;
                   $2299 = ((($5)) + 512|0);
                   $2300 = +HEAPF64[$2299>>3];
                   $2301 = 468.71392288155198 * $2300;
                   $x510 = $2301;
                   $2302 = ((($5)) + 528|0);
                   $2303 = +HEAPF64[$2302>>3];
                   $2304 = -1.0 * $2303;
                   $2305 = $x508;
                   $2306 = $2304 + $2305;
                   HEAPF64[$j0eval34>>3] = $2306;
                   $2307 = ((($5)) + 464|0);
                   $2308 = +HEAPF64[$2307>>3];
                   $2309 = 1501.0 * $2308;
                   $2310 = ((($5)) + 488|0);
                   $2311 = +HEAPF64[$2310>>3];
                   $2312 = $x510;
                   $2313 = $2311 * $2312;
                   $2314 = $2309 + $2313;
                   $2315 = ((($5)) + 488|0);
                   $2316 = +HEAPF64[$2315>>3];
                   $2317 = 4318.0 * $2316;
                   $2318 = $2314 + $2317;
                   $2319 = ((($5)) + 488|0);
                   $2320 = +HEAPF64[$2319>>3];
                   $2321 = $x509;
                   $2322 = $2320 * $2321;
                   $2323 = $2318 + $2322;
                   $2324 = (+__Z5IKabsd($2323));
                   $2325 = ((($5)) + 464|0);
                   $2326 = +HEAPF64[$2325>>3];
                   $2327 = $x510;
                   $2328 = $2326 * $2327;
                   $2329 = ((($5)) + 464|0);
                   $2330 = +HEAPF64[$2329>>3];
                   $2331 = 4318.0 * $2330;
                   $2332 = $2328 + $2331;
                   $2333 = ((($5)) + 464|0);
                   $2334 = +HEAPF64[$2333>>3];
                   $2335 = $x509;
                   $2336 = $2334 * $2335;
                   $2337 = $2332 + $2336;
                   $2338 = ((($5)) + 488|0);
                   $2339 = +HEAPF64[$2338>>3];
                   $2340 = -1501.0 * $2339;
                   $2341 = $2337 + $2340;
                   $2342 = (+__Z5IKabsd($2341));
                   $2343 = $2324 + $2342;
                   $2344 = ((($j0eval34)) + 8|0);
                   HEAPF64[$2344>>3] = $2343;
                   $2345 = ((($5)) + 528|0);
                   $2346 = +HEAPF64[$2345>>3];
                   $2347 = -1.0E+4 * $2346;
                   $2348 = $x508;
                   $2349 = 1.0E+4 * $2348;
                   $2350 = $2347 + $2349;
                   $2351 = (+__Z6IKsignd($2350));
                   $2352 = ((($j0eval34)) + 16|0);
                   HEAPF64[$2352>>3] = $2351;
                   $2353 = +HEAPF64[$j0eval34>>3];
                   $2354 = (+__Z5IKabsd($2353));
                   $2355 = $2354 < 9.9999999999999995E-7;
                   if ($2355) {
                    break;
                   }
                   $2356 = ((($j0eval34)) + 8|0);
                   $2357 = +HEAPF64[$2356>>3];
                   $2358 = (+__Z5IKabsd($2357));
                   $2359 = $2358 < 9.9999999999999995E-7;
                   if ($2359) {
                    break;
                   }
                   $2360 = ((($j0eval34)) + 16|0);
                   $2361 = +HEAPF64[$2360>>3];
                   $2362 = (+__Z5IKabsd($2361));
                   $2363 = $2362 < 9.9999999999999995E-7;
                   if ($2363) {
                    break;
                   }
                   ;HEAP8[$j0valid38>>0]=0|0;
                   $2364 = ((($5)) + 538|0);
                   HEAP8[$2364>>0] = 1;
                   $2365 = ((($5)) + 96|0);
                   $2366 = +HEAPF64[$2365>>3];
                   $2367 = 4340.5148926345 * $2366;
                   $x511 = $2367;
                   $2368 = ((($5)) + 512|0);
                   $2369 = +HEAPF64[$2368>>3];
                   $2370 = 468.71392288155198 * $2369;
                   $x512 = $2370;
                   $2371 = ((($5)) + 512|0);
                   $2372 = +HEAPF64[$2371>>3];
                   $2373 = ((($5)) + 512|0);
                   $2374 = +HEAPF64[$2373>>3];
                   $2375 = $2372 * $2374;
                   $2376 = 1.0E+4 * $2375;
                   $2377 = ((($5)) + 528|0);
                   $2378 = +HEAPF64[$2377>>3];
                   $2379 = -1.0E+4 * $2378;
                   $2380 = $2376 + $2379;
                   $2381 = (+__Z6IKsignd($2380));
                   __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x513,$2381,-1);
                   $2382 = ((($x513)) + 8|0);
                   $2383 = HEAP8[$2382>>0]|0;
                   $2384 = $2383&1;
                   if (!($2384)) {
                    break;
                   }
                   $2385 = ((($5)) + 464|0);
                   $2386 = +HEAPF64[$2385>>3];
                   $2387 = 1501.0 * $2386;
                   $2388 = ((($5)) + 488|0);
                   $2389 = +HEAPF64[$2388>>3];
                   $2390 = $x512;
                   $2391 = $2389 * $2390;
                   $2392 = $2387 + $2391;
                   $2393 = ((($5)) + 488|0);
                   $2394 = +HEAPF64[$2393>>3];
                   $2395 = $x511;
                   $2396 = $2394 * $2395;
                   $2397 = $2392 + $2396;
                   $2398 = ((($5)) + 488|0);
                   $2399 = +HEAPF64[$2398>>3];
                   $2400 = 4318.0 * $2399;
                   $2401 = $2397 + $2400;
                   $2402 = ((($5)) + 464|0);
                   $2403 = +HEAPF64[$2402>>3];
                   $2404 = $x512;
                   $2405 = $2403 * $2404;
                   $2406 = ((($5)) + 464|0);
                   $2407 = +HEAPF64[$2406>>3];
                   $2408 = $x511;
                   $2409 = $2407 * $2408;
                   $2410 = $2405 + $2409;
                   $2411 = ((($5)) + 464|0);
                   $2412 = +HEAPF64[$2411>>3];
                   $2413 = 4318.0 * $2412;
                   $2414 = $2410 + $2413;
                   $2415 = ((($5)) + 488|0);
                   $2416 = +HEAPF64[$2415>>3];
                   $2417 = -1501.0 * $2416;
                   $2418 = $2414 + $2417;
                   __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x514,$2401,$2418,1.9999999999999999E-6);
                   $2419 = ((($x514)) + 8|0);
                   $2420 = HEAP8[$2419>>0]|0;
                   $2421 = $2420&1;
                   if (!($2421)) {
                    break;
                   }
                   $2422 = +HEAPF64[$x513>>3];
                   $2423 = 1.5707963267949001 * $2422;
                   $2424 = -1.5707963267949001 + $2423;
                   $2425 = +HEAPF64[$x514>>3];
                   $2426 = $2424 + $2425;
                   HEAPF64[$j0array35>>3] = $2426;
                   $2427 = +HEAPF64[$j0array35>>3];
                   $2428 = (+__Z5IKsind($2427));
                   HEAPF64[$sj0array37>>3] = $2428;
                   $2429 = +HEAPF64[$j0array35>>3];
                   $2430 = (+__Z5IKcosd($2429));
                   HEAPF64[$cj0array36>>3] = $2430;
                   $2431 = +HEAPF64[$j0array35>>3];
                   $2432 = $2431 > 3.14159265358979;
                   $2433 = +HEAPF64[$j0array35>>3];
                   do {
                    if ($2432) {
                     $2434 = $2433 - 6.2831853071795898;
                     HEAPF64[$j0array35>>3] = $2434;
                    } else {
                     $2435 = $2433 < -3.14159265358979;
                     if (!($2435)) {
                      break;
                     }
                     $2436 = +HEAPF64[$j0array35>>3];
                     $2437 = $2436 + 6.2831853071795898;
                     HEAPF64[$j0array35>>3] = $2437;
                    }
                   } while(0);
                   HEAP8[$j0valid38>>0] = 1;
                   $ij039 = 0;
                   while(1) {
                    $2438 = $ij039;
                    $2439 = ($2438|0)<(1);
                    if (!($2439)) {
                     break L433;
                    }
                    $2440 = $ij039;
                    $2441 = (($j0valid38) + ($2440)|0);
                    $2442 = HEAP8[$2441>>0]|0;
                    $2443 = $2442&1;
                    do {
                     if ($2443) {
                      $2444 = $ij039;
                      $2445 = $2444&255;
                      $2446 = ((($5)) + 536|0);
                      HEAP8[$2446>>0] = $2445;
                      $2447 = ((($5)) + 536|0);
                      $2448 = ((($2447)) + 1|0);
                      HEAP8[$2448>>0] = -1;
                      $2449 = $ij039;
                      $2450 = (($2449) + 1)|0;
                      $iij040 = $2450;
                      L484: while(1) {
                       $2451 = $iij040;
                       $2452 = ($2451|0)<(1);
                       if (!($2452)) {
                        break;
                       }
                       $2453 = $iij040;
                       $2454 = (($j0valid38) + ($2453)|0);
                       $2455 = HEAP8[$2454>>0]|0;
                       $2456 = $2455&1;
                       do {
                        if ($2456) {
                         $2457 = $ij039;
                         $2458 = (($cj0array36) + ($2457<<3)|0);
                         $2459 = +HEAPF64[$2458>>3];
                         $2460 = $iij040;
                         $2461 = (($cj0array36) + ($2460<<3)|0);
                         $2462 = +HEAPF64[$2461>>3];
                         $2463 = $2459 - $2462;
                         $2464 = (+__Z5IKabsd($2463));
                         $2465 = $2464 < 9.9999999999999995E-7;
                         if (!($2465)) {
                          break;
                         }
                         $2466 = $ij039;
                         $2467 = (($sj0array37) + ($2466<<3)|0);
                         $2468 = +HEAPF64[$2467>>3];
                         $2469 = $iij040;
                         $2470 = (($sj0array37) + ($2469<<3)|0);
                         $2471 = +HEAPF64[$2470>>3];
                         $2472 = $2468 - $2471;
                         $2473 = (+__Z5IKabsd($2472));
                         $2474 = $2473 < 9.9999999999999995E-7;
                         if ($2474) {
                          label = 193;
                          break L484;
                         }
                        }
                       } while(0);
                       $2481 = $iij040;
                       $2482 = (($2481) + 1)|0;
                       $iij040 = $2482;
                      }
                      if ((label|0) == 193) {
                       label = 0;
                       $2475 = $iij040;
                       $2476 = (($j0valid38) + ($2475)|0);
                       HEAP8[$2476>>0] = 0;
                       $2477 = $iij040;
                       $2478 = $2477&255;
                       $2479 = ((($5)) + 536|0);
                       $2480 = ((($2479)) + 1|0);
                       HEAP8[$2480>>0] = $2478;
                      }
                      $2483 = $ij039;
                      $2484 = (($j0array35) + ($2483<<3)|0);
                      $2485 = +HEAPF64[$2484>>3];
                      HEAPF64[$5>>3] = $2485;
                      $2486 = $ij039;
                      $2487 = (($cj0array36) + ($2486<<3)|0);
                      $2488 = +HEAPF64[$2487>>3];
                      $2489 = ((($5)) + 8|0);
                      HEAPF64[$2489>>3] = $2488;
                      $2490 = $ij039;
                      $2491 = (($sj0array37) + ($2490<<3)|0);
                      $2492 = +HEAPF64[$2491>>3];
                      $2493 = ((($5)) + 16|0);
                      HEAPF64[$2493>>3] = $2492;
                      $2494 = +HEAPF64[$5>>3];
                      $2495 = (+__Z5IKsind($2494));
                      $x515 = $2495;
                      $2496 = +HEAPF64[$5>>3];
                      $2497 = (+__Z5IKcosd($2496));
                      $x516 = $2497;
                      $2498 = ((($5)) + 464|0);
                      $2499 = +HEAPF64[$2498>>3];
                      $2500 = $x516;
                      $2501 = $2499 * $2500;
                      $x517 = $2501;
                      $2502 = ((($5)) + 488|0);
                      $2503 = +HEAPF64[$2502>>3];
                      $2504 = $x515;
                      $2505 = $2503 * $2504;
                      $x518 = $2505;
                      $2506 = ((($5)) + 464|0);
                      $2507 = +HEAPF64[$2506>>3];
                      $2508 = $x515;
                      $2509 = $2507 * $2508;
                      $2510 = 0.15010000000000001 + $2509;
                      $2511 = ((($5)) + 488|0);
                      $2512 = +HEAPF64[$2511>>3];
                      $2513 = -1.0 * $2512;
                      $2514 = $x516;
                      $2515 = $2513 * $2514;
                      $2516 = $2510 + $2515;
                      HEAPF64[$evalcond41>>3] = $2516;
                      $2517 = $x517;
                      $2518 = -0.86360000000000003 * $2517;
                      $2519 = 0.02406647 + $2518;
                      $2520 = $x518;
                      $2521 = -0.86360000000000003 * $2520;
                      $2522 = $2519 + $2521;
                      $2523 = ((($5)) + 528|0);
                      $2524 = +HEAPF64[$2523>>3];
                      $2525 = -1.0 * $2524;
                      $2526 = $2522 + $2525;
                      $2527 = ((($evalcond41)) + 8|0);
                      HEAPF64[$2527>>3] = $2526;
                      $2528 = ((($5)) + 96|0);
                      $2529 = +HEAPF64[$2528>>3];
                      $2530 = 0.43405148926345 * $2529;
                      $2531 = 0.43180000000000002 + $2530;
                      $2532 = ((($5)) + 512|0);
                      $2533 = +HEAPF64[$2532>>3];
                      $2534 = 0.046871392288155199 * $2533;
                      $2535 = $2531 + $2534;
                      $2536 = $x518;
                      $2537 = $2535 + $2536;
                      $2538 = $x517;
                      $2539 = $2537 + $2538;
                      $2540 = ((($evalcond41)) + 16|0);
                      HEAPF64[$2540>>3] = $2539;
                      $2541 = +HEAPF64[$evalcond41>>3];
                      $2542 = (+__Z5IKabsd($2541));
                      $2543 = $2542 > 5.0000000000000004E-6;
                      if ($2543) {
                       break;
                      }
                      $2544 = ((($evalcond41)) + 8|0);
                      $2545 = +HEAPF64[$2544>>3];
                      $2546 = (+__Z5IKabsd($2545));
                      $2547 = $2546 > 5.0000000000000004E-6;
                      if ($2547) {
                       break;
                      }
                      $2548 = ((($evalcond41)) + 16|0);
                      $2549 = +HEAPF64[$2548>>3];
                      $2550 = (+__Z5IKabsd($2549));
                      $2551 = $2550 > 5.0000000000000004E-6;
                      if ($2551) {
                       break;
                      }
                      $2552 = $4;
                      __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($5,$2552);
                     }
                    } while(0);
                    $2553 = $ij039;
                    $2554 = (($2553) + 1)|0;
                    $ij039 = $2554;
                   }
                  }
                 } while(0);
                 $2735 = $bgotonextstatement32;
                 $2736 = $2735&1;
                 if (!($2736)) {
                  break;
                 }
                 $bgotonextstatement49 = 1;
                 $bgotonextstatement49 = 0;
                }
               } while(0);
               $3659 = $ij1;
               $3660 = (($3659) + 1)|0;
               $ij1 = $3660;
              }
             }
            }
           }
          }
         }
        }
       }
      } while(0);
      $5326 = $ij2;
      $5327 = (($5326) + 1)|0;
      $ij2 = $5327;
     }
    }
   }
  } while(0);
  $5328 = $dummyiter;
  $5329 = (($5328) + 1)|0;
  $dummyiter = $5329;
 }
 $5330 = HEAP32[$43>>2]|0;
 $5331 = ((($5330)) + 16|0);
 $5332 = HEAP32[$5331>>2]|0;
 $5333 = (FUNCTION_TABLE_ii[$5332 & 1023]($43)|0);
 $5334 = ($5333>>>0)>(0);
 STACKTOP = sp;return ($5334|0);
}
function __ZN6ikfast14IkSolutionListIdEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 __ZN6ikfast18IkSolutionListBaseIdEC2Ev($3);
 $4 = 384;
 HEAP32[$3>>2] = $4;
 $5 = ((($3)) + 4|0);
 __THREW__ = 0;
 invoke_vi(358,($5|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  STACKTOP = sp;return;
 }
 $8 = ___cxa_find_matching_catch()|0;
 $9 = tempRet0;
 $1 = $8;
 $2 = $9;
 __THREW__ = 0;
 invoke_vi(19,($3|0));
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if ($11) {
  $14 = ___cxa_find_matching_catch(0|0)|0;
  $15 = tempRet0;
  ___clang_call_terminate($14);
  // unreachable;
 } else {
  $12 = $1;
  $13 = $2;
  ___resumeException($12|0);
  // unreachable;
 }
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEEC2Ej($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $4 = $0;
 __ZNSt3__113__vector_baseIdNS_9allocatorIdEEEC2Ev($4);
 $5 = $1;
 $6 = ($5>>>0)>(0);
 if (!($6)) {
  STACKTOP = sp;return;
 }
 $7 = $1;
 __THREW__ = 0;
 invoke_vii(359,($4|0),($7|0));
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if (!($9)) {
  $10 = $1;
  __THREW__ = 0;
  invoke_vii(360,($4|0),($10|0));
  $11 = __THREW__; __THREW__ = 0;
  $12 = $11&1;
  if (!($12)) {
   STACKTOP = sp;return;
  }
 }
 $13 = ___cxa_find_matching_catch()|0;
 $14 = tempRet0;
 $2 = $13;
 $3 = $14;
 __THREW__ = 0;
 invoke_vi(361,($4|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 if ($16) {
  $19 = ___cxa_find_matching_catch(0|0)|0;
  $20 = tempRet0;
  ___clang_call_terminate($19);
  // unreachable;
 } else {
  $17 = $2;
  $18 = $3;
  ___resumeException($17|0);
  // unreachable;
 }
}
function __ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$1>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 8)&-1;
 STACKTOP = sp;return ($8|0);
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEEixEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = HEAP32[$2>>2]|0;
 $5 = (($4) + ($3<<3)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNK6ikfast14IkSolutionListIdE15GetNumSolutionsEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 4|0);
 $3 = (__ZNKSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE4sizeEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK6ikfast14IkSolutionListIdE11GetSolutionEj($this,$index) {
 $this = $this|0;
 $index = $index|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $it = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $it = sp;
 $0 = $this;
 $1 = $index;
 $4 = $0;
 $5 = $1;
 $6 = ((($4)) + 4|0);
 $7 = (__ZNKSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE4sizeEv($6)|0);
 $8 = ($5>>>0)>=($7>>>0);
 if (!($8)) {
  $16 = ((($4)) + 4|0);
  $17 = (__ZNKSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5beginEv($16)|0);
  HEAP32[$it>>2] = $17;
  $18 = $1;
  __ZNSt3__17advanceINS_21__list_const_iteratorIN6ikfast10IkSolutionIdEEPvEEEEvRT_NS_15iterator_traitsIS7_E15difference_typeE($it,$18);
  $19 = (__ZNKSt3__121__list_const_iteratorIN6ikfast10IkSolutionIdEEPvEdeEv($it)|0);
  STACKTOP = sp;return ($19|0);
 }
 $9 = (___cxa_allocate_exception(8)|0);
 __THREW__ = 0;
 invoke_vii(362,($9|0),(808|0));
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if ($11) {
  $12 = ___cxa_find_matching_catch()|0;
  $13 = tempRet0;
  $2 = $12;
  $3 = $13;
  ___cxa_free_exception(($9|0));
  $14 = $2;
  $15 = $3;
  ___resumeException($14|0);
  // unreachable;
 } else {
  ___cxa_throw(($9|0),(2056|0),(62|0));
  // unreachable;
 }
 return (0)|0;
}
function __ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$1>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 4)&-1;
 STACKTOP = sp;return ($8|0);
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__113__vector_baseIdNS_9allocatorIdEEED2Ev($1);
 STACKTOP = sp;return;
}
function __ZN6ikfast14IkSolutionListIdED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 $4 = 384;
 HEAP32[$3>>2] = $4;
 $5 = ((($3)) + 4|0);
 __THREW__ = 0;
 invoke_vi(363,($5|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  __ZN6ikfast18IkSolutionListBaseIdED2Ev($3);
  STACKTOP = sp;return;
 }
 $8 = ___cxa_find_matching_catch()|0;
 $9 = tempRet0;
 $1 = $8;
 $2 = $9;
 __THREW__ = 0;
 invoke_vi(19,($3|0));
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if ($11) {
  $14 = ___cxa_find_matching_catch(0|0)|0;
  $15 = tempRet0;
  ___clang_call_terminate($14);
  // unreachable;
 } else {
  $12 = $1;
  $13 = $2;
  ___resumeException($12|0);
  // unreachable;
 }
}
function ___clang_call_terminate($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 (___cxa_begin_catch(($0|0))|0);
 __ZSt9terminatev();
 // unreachable;
}
function __ZNSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEED2Ev($1);
 STACKTOP = sp;return;
}
function __ZN6ikfast18IkSolutionListBaseIdED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5clearEv($1);
 STACKTOP = sp;return;
}
function __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5clearEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__f = 0, $__l = 0, $__n = 0, $__na = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 $4 = (__ZNKSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5emptyEv($3)|0);
 if ($4) {
  STACKTOP = sp;return;
 }
 $5 = (__ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE12__node_allocEv($3)|0);
 $__na = $5;
 $6 = ((($3)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $__f = $7;
 $8 = (__ZNSt3__114pointer_traitsIPNS_16__list_node_baseIN6ikfast10IkSolutionIdEEPvEEE10pointer_toERS6_($3)|0);
 $__l = $8;
 $9 = $__f;
 $10 = $__l;
 $11 = HEAP32[$10>>2]|0;
 __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE14__unlink_nodesEPNS_11__list_nodeIS3_PvEESA_($9,$11);
 $12 = (__ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE4__szEv($3)|0);
 HEAP32[$12>>2] = 0;
 while(1) {
  $13 = $__f;
  $14 = $__l;
  $15 = ($13|0)!=($14|0);
  if (!($15)) {
   label = 7;
   break;
  }
  $16 = $__f;
  $__n = $16;
  $17 = $__f;
  $18 = ((($17)) + 4|0);
  $19 = HEAP32[$18>>2]|0;
  $__f = $19;
  $20 = $__na;
  $21 = $__n;
  $22 = ((($21)) + 8|0);
  $23 = (__ZNSt3__19addressofIN6ikfast10IkSolutionIdEEEEPT_RS4_($22)|0);
  __THREW__ = 0;
  invoke_vii(364,($20|0),($23|0));
  $24 = __THREW__; __THREW__ = 0;
  $25 = $24&1;
  if ($25) {
   label = 6;
   break;
  }
  $26 = $__na;
  $27 = $__n;
  __ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE10deallocateERS8_PS7_j($26,$27,1);
 }
 if ((label|0) == 6) {
  $28 = ___cxa_find_matching_catch()|0;
  $29 = tempRet0;
  $1 = $28;
  $2 = $29;
  $30 = $1;
  ___cxa_call_unexpected(($30|0));
  // unreachable;
 }
 else if ((label|0) == 7) {
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5emptyEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE4__szEv($1)|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0);
 STACKTOP = sp;return ($4|0);
}
function __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE12__node_allocEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 8|0);
 $3 = (__ZNSt3__117__compressed_pairIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE6secondEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__114pointer_traitsIPNS_16__list_node_baseIN6ikfast10IkSolutionIdEEPvEEE10pointer_toERS6_($__r) {
 $__r = $__r|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__r;
 $1 = $0;
 $2 = (__ZNSt3__19addressofINS_16__list_node_baseIN6ikfast10IkSolutionIdEEPvEEEEPT_RS7_($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE14__unlink_nodesEPNS_11__list_nodeIS3_PvEESA_($__f,$__l) {
 $__f = $__f|0;
 $__l = $__l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__f;
 $1 = $__l;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $0;
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 4|0);
 HEAP32[$7>>2] = $4;
 $8 = $0;
 $9 = HEAP32[$8>>2]|0;
 $10 = $1;
 $11 = ((($10)) + 4|0);
 $12 = HEAP32[$11>>2]|0;
 HEAP32[$12>>2] = $9;
 STACKTOP = sp;return;
}
function __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE4__szEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 8|0);
 $3 = (__ZNSt3__117__compressed_pairIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__19addressofIN6ikfast10IkSolutionIdEEEEPT_RS4_($__x) {
 $__x = $__x|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__x;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE7destroyIS5_EEvRS8_PT_($__a,$__p) {
 $__a = $__a|0;
 $__p = $__p|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__a;
 $1 = $__p;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy>>0]=HEAP8[$2>>0]|0;
 __ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE9__destroyIS5_EEvNS_17integral_constantIbLb0EEERS8_PT_($$byval_copy,$3,$4);
 STACKTOP = sp;return;
}
function __ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE10deallocateERS8_PS7_j($__a,$__p,$__n) {
 $__a = $__a|0;
 $__p = $__p|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__p;
 $2 = $__n;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 __ZNSt3__19allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEE10deallocateEPS6_j($3,$4,$5);
 STACKTOP = sp;return;
}
function __ZNSt3__19allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEE10deallocateEPS6_j($this,$__p,$0) {
 $this = $this|0;
 $__p = $__p|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__p;
 $3 = $0;
 $6 = $2;
 __THREW__ = 0;
 invoke_vi(365,($6|0));
 $7 = __THREW__; __THREW__ = 0;
 $8 = $7&1;
 if ($8) {
  $9 = ___cxa_find_matching_catch()|0;
  $10 = tempRet0;
  $4 = $9;
  $5 = $10;
  $11 = $4;
  ___cxa_call_unexpected(($11|0));
  // unreachable;
 } else {
  STACKTOP = sp;return;
 }
}
function __ZNSt3__112__deallocateEPv($__ptr) {
 $__ptr = $__ptr|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__ptr;
 $1 = $0;
 __ZdlPv($1);
 STACKTOP = sp;return;
}
function __ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE9__destroyIS5_EEvNS_17integral_constantIbLb0EEERS8_PT_($0,$1,$__p) {
 $0 = $0|0;
 $1 = $1|0;
 $__p = $__p|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = $1;
 $3 = $__p;
 $4 = $3;
 $5 = HEAP32[$4>>2]|0;
 $6 = HEAP32[$5>>2]|0;
 FUNCTION_TABLE_vi[$6 & 1023]($4);
 STACKTOP = sp;return;
}
function __ZNSt3__117__compressed_pairIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEELj2EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEELj2EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__19addressofINS_16__list_node_baseIN6ikfast10IkSolutionIdEEPvEEEEPT_RS7_($__x) {
 $__x = $__x|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__x;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__117__compressed_pairIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEELj2EE6secondEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEELj2EE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE4__szEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 8|0);
 $3 = (__ZNKSt3__117__compressed_pairIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__117__compressed_pairIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__128__libcpp_compressed_pair_impIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEELj2EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNKSt3__128__libcpp_compressed_pair_impIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEELj2EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZN6ikfast14IkSolutionListIdED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 __THREW__ = 0;
 invoke_vi(1,($3|0));
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if ($5) {
  $6 = ___cxa_find_matching_catch()|0;
  $7 = tempRet0;
  $1 = $6;
  $2 = $7;
  __ZdlPv($3);
  $8 = $1;
  $9 = $2;
  ___resumeException($8|0);
  // unreachable;
 } else {
  __ZdlPv($3);
  STACKTOP = sp;return;
 }
}
function __ZN6ikfast14IkSolutionListIdE11AddSolutionERKNSt3__16vectorINS_23IkSingleDOFSolutionBaseIdEENS2_9allocatorIS5_EEEERKNS3_IiNS6_IiEEEE($this,$vinfos,$vfree) {
 $this = $this|0;
 $vinfos = $vinfos|0;
 $vfree = $vfree|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $index = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $3 = sp + 8|0;
 $0 = $this;
 $1 = $vinfos;
 $2 = $vfree;
 $6 = $0;
 $7 = ((($6)) + 4|0);
 $8 = (__ZNKSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE4sizeEv($7)|0);
 $index = $8;
 $9 = ((($6)) + 4|0);
 $10 = $1;
 $11 = $2;
 __ZN6ikfast10IkSolutionIdEC2ERKNSt3__16vectorINS_23IkSingleDOFSolutionBaseIdEENS2_9allocatorIS5_EEEERKNS3_IiNS6_IiEEEE($3,$10,$11);
 __THREW__ = 0;
 invoke_vii(366,($9|0),($3|0));
 $12 = __THREW__; __THREW__ = 0;
 $13 = $12&1;
 if (!($13)) {
  __ZN6ikfast10IkSolutionIdED2Ev($3);
  $14 = $index;
  STACKTOP = sp;return ($14|0);
 }
 $15 = ___cxa_find_matching_catch()|0;
 $16 = tempRet0;
 $4 = $15;
 $5 = $16;
 __THREW__ = 0;
 invoke_vi(7,($3|0));
 $17 = __THREW__; __THREW__ = 0;
 $18 = $17&1;
 if ($18) {
  $21 = ___cxa_find_matching_catch(0|0)|0;
  $22 = tempRet0;
  ___clang_call_terminate($21);
  // unreachable;
 } else {
  $19 = $4;
  $20 = $5;
  ___resumeException($19|0);
  // unreachable;
 }
 return (0)|0;
}
function __ZN6ikfast14IkSolutionListIdE5ClearEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 4|0);
 __ZNSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5clearEv($2);
 STACKTOP = sp;return;
}
function __ZNSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5clearEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5clearEv($1);
 STACKTOP = sp;return;
}
function __ZNKSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE4sizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE4__szEv($1)|0);
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZN6ikfast10IkSolutionIdEC2ERKNSt3__16vectorINS_23IkSingleDOFSolutionBaseIdEENS2_9allocatorIS5_EEEERKNS3_IiNS6_IiEEEE($this,$vinfos,$vfree) {
 $this = $this|0;
 $vinfos = $vinfos|0;
 $vfree = $vfree|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $vinfos;
 $2 = $vfree;
 $5 = $0;
 __ZN6ikfast14IkSolutionBaseIdEC2Ev($5);
 $6 = 432;
 HEAP32[$5>>2] = $6;
 $7 = ((($5)) + 4|0);
 __THREW__ = 0;
 invoke_vi(367,($7|0));
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if ($9) {
  $21 = ___cxa_find_matching_catch()|0;
  $22 = tempRet0;
  $3 = $21;
  $4 = $22;
 } else {
  $10 = ((($5)) + 16|0);
  __THREW__ = 0;
  invoke_vi(368,($10|0));
  $11 = __THREW__; __THREW__ = 0;
  $12 = $11&1;
  if ($12) {
   $23 = ___cxa_find_matching_catch()|0;
   $24 = tempRet0;
   $3 = $23;
   $4 = $24;
  } else {
   $13 = ((($5)) + 4|0);
   $14 = $1;
   __THREW__ = 0;
   (invoke_iii(369,($13|0),($14|0))|0);
   $15 = __THREW__; __THREW__ = 0;
   $16 = $15&1;
   if (!($16)) {
    $17 = ((($5)) + 16|0);
    $18 = $2;
    __THREW__ = 0;
    (invoke_iii(370,($17|0),($18|0))|0);
    $19 = __THREW__; __THREW__ = 0;
    $20 = $19&1;
    if (!($20)) {
     STACKTOP = sp;return;
    }
   }
   $25 = ___cxa_find_matching_catch()|0;
   $26 = tempRet0;
   $3 = $25;
   $4 = $26;
   __THREW__ = 0;
   invoke_vi(371,($10|0));
   $27 = __THREW__; __THREW__ = 0;
   $28 = $27&1;
   if ($28) {
    $35 = ___cxa_find_matching_catch(0|0)|0;
    $36 = tempRet0;
    ___clang_call_terminate($35);
    // unreachable;
   }
  }
  __THREW__ = 0;
  invoke_vi(372,($7|0));
  $29 = __THREW__; __THREW__ = 0;
  $30 = $29&1;
  if ($30) {
   $35 = ___cxa_find_matching_catch(0|0)|0;
   $36 = tempRet0;
   ___clang_call_terminate($35);
   // unreachable;
  }
 }
 __THREW__ = 0;
 invoke_vi(15,($5|0));
 $31 = __THREW__; __THREW__ = 0;
 $32 = $31&1;
 if ($32) {
  $35 = ___cxa_find_matching_catch(0|0)|0;
  $36 = tempRet0;
  ___clang_call_terminate($35);
  // unreachable;
 } else {
  $33 = $3;
  $34 = $4;
  ___resumeException($33|0);
  // unreachable;
 }
}
function __ZNSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE9push_backERKS3_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__hold = 0, $__na = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 40|0;
 $__hold = sp + 16|0;
 $2 = sp + 8|0;
 $0 = $this;
 $1 = $__x;
 $5 = $0;
 $6 = (__ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE12__node_allocEv($5)|0);
 $__na = $6;
 $7 = $__na;
 $8 = (__ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE8allocateERS8_j($7,1)|0);
 $9 = $__na;
 __ZNSt3__122__allocator_destructorINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEEC2ERS8_j($2,$9,1);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZNSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEEC2EPS6_SA_($__hold,$8,$$byval_copy);
 $10 = $__na;
 $11 = (__ZNKSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEEptEv($__hold)|0);
 $12 = ((($11)) + 8|0);
 $13 = (__ZNSt3__19addressofIN6ikfast10IkSolutionIdEEEEPT_RS4_($12)|0);
 $14 = $1;
 __THREW__ = 0;
 invoke_viii(373,($10|0),($13|0),($14|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 if (!($16)) {
  $17 = (__ZNKSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE3getEv($__hold)|0);
  $18 = (__ZNKSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE3getEv($__hold)|0);
  __THREW__ = 0;
  invoke_viii(374,($5|0),($17|0),($18|0));
  $19 = __THREW__; __THREW__ = 0;
  $20 = $19&1;
  if (!($20)) {
   $21 = (__ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE4__szEv($5)|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = (($22) + 1)|0;
   HEAP32[$21>>2] = $23;
   (__ZNSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE7releaseEv($__hold)|0);
   __ZNSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEED2Ev($__hold);
   STACKTOP = sp;return;
  }
 }
 $24 = ___cxa_find_matching_catch()|0;
 $25 = tempRet0;
 $3 = $24;
 $4 = $25;
 __THREW__ = 0;
 invoke_vi(375,($__hold|0));
 $26 = __THREW__; __THREW__ = 0;
 $27 = $26&1;
 if ($27) {
  $30 = ___cxa_find_matching_catch(0|0)|0;
  $31 = tempRet0;
  ___clang_call_terminate($30);
  // unreachable;
 } else {
  $28 = $3;
  $29 = $4;
  ___resumeException($28|0);
  // unreachable;
 }
}
function __ZN6ikfast10IkSolutionIdED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 $4 = 432;
 HEAP32[$3>>2] = $4;
 $5 = ((($3)) + 16|0);
 __THREW__ = 0;
 invoke_vi(371,($5|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 do {
  if ($7) {
   $11 = ___cxa_find_matching_catch()|0;
   $12 = tempRet0;
   $1 = $11;
   $2 = $12;
   $13 = ((($3)) + 4|0);
   __THREW__ = 0;
   invoke_vi(372,($13|0));
   $14 = __THREW__; __THREW__ = 0;
   $15 = $14&1;
   if ($15) {
    $22 = ___cxa_find_matching_catch(0|0)|0;
    $23 = tempRet0;
    ___clang_call_terminate($22);
    // unreachable;
   }
  } else {
   $8 = ((($3)) + 4|0);
   __THREW__ = 0;
   invoke_vi(372,($8|0));
   $9 = __THREW__; __THREW__ = 0;
   $10 = $9&1;
   if ($10) {
    $16 = ___cxa_find_matching_catch()|0;
    $17 = tempRet0;
    $1 = $16;
    $2 = $17;
    break;
   } else {
    __ZN6ikfast14IkSolutionBaseIdED2Ev($3);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 __THREW__ = 0;
 invoke_vi(15,($3|0));
 $18 = __THREW__; __THREW__ = 0;
 $19 = $18&1;
 if ($19) {
  $22 = ___cxa_find_matching_catch(0|0)|0;
  $23 = tempRet0;
  ___clang_call_terminate($22);
  // unreachable;
 } else {
  $20 = $1;
  $21 = $2;
  ___resumeException($20|0);
  // unreachable;
 }
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($1);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($1);
 STACKTOP = sp;return;
}
function __ZN6ikfast14IkSolutionBaseIdED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$1>>2] = $4;
 $5 = (__ZNKSt3__19nullptr_tcvPT_IN6ikfast23IkSingleDOFSolutionBaseIdEEEEv($1)|0);
 $6 = ($3|0)!=($5|0);
 if (!($6)) {
  STACKTOP = sp;return;
 }
 __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE5clearEv($2);
 $7 = (__ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE7__allocEv($2)|0);
 $8 = HEAP32[$2>>2]|0;
 $9 = (__ZNKSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8capacityEv($2)|0);
 __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE10deallocateERS5_PS4_j($7,$8,$9);
 STACKTOP = sp;return;
}
function __ZNSt3__115__get_nullptr_tEv() {
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 __ZNSt3__19nullptr_tC2EMNS0_5__natEi($0,-1);
 $1 = HEAP32[$0>>2]|0;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__19nullptr_tcvPT_IN6ikfast23IkSingleDOFSolutionBaseIdEEEEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return (0|0);
}
function __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE5clearEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE17__destruct_at_endEPS3_($1,$2);
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE7__allocEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 8|0);
 $3 = (__ZNSt3__117__compressed_pairIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE6secondEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8capacityEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE9__end_capEv($1)|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$1>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 24)&-1;
 STACKTOP = sp;return ($8|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE10deallocateERS5_PS4_j($__a,$__p,$__n) {
 $__a = $__a|0;
 $__p = $__p|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__p;
 $2 = $__n;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 __ZNSt3__19allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEE10deallocateEPS3_j($3,$4,$5);
 STACKTOP = sp;return;
}
function __ZNSt3__19allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEE10deallocateEPS3_j($this,$__p,$0) {
 $this = $this|0;
 $__p = $__p|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__p;
 $3 = $0;
 $6 = $2;
 __THREW__ = 0;
 invoke_vi(365,($6|0));
 $7 = __THREW__; __THREW__ = 0;
 $8 = $7&1;
 if ($8) {
  $9 = ___cxa_find_matching_catch()|0;
  $10 = tempRet0;
  $4 = $9;
  $5 = $10;
  $11 = $4;
  ___cxa_call_unexpected(($11|0));
  // unreachable;
 } else {
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE9__end_capEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 8|0);
 $3 = (__ZNKSt3__117__compressed_pairIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__117__compressed_pairIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__128__libcpp_compressed_pair_impIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EELj2EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNKSt3__128__libcpp_compressed_pair_impIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EELj2EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__117__compressed_pairIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EELj2EE6secondEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EELj2EE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE17__destruct_at_endEPS3_($this,$__new_last) {
 $this = $this|0;
 $__new_last = $__new_last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__new_last;
 $4 = $0;
 while(1) {
  $5 = $1;
  $6 = ((($4)) + 4|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = ($5|0)!=($7|0);
  if (!($8)) {
   label = 5;
   break;
  }
  $9 = (__ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE7__allocEv($4)|0);
  $10 = ((($4)) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ((($11)) + -24|0);
  HEAP32[$10>>2] = $12;
  $13 = (__ZNSt3__116__to_raw_pointerIN6ikfast23IkSingleDOFSolutionBaseIdEEEEPT_S5_($12)|0);
  __THREW__ = 0;
  invoke_vii(376,($9|0),($13|0));
  $14 = __THREW__; __THREW__ = 0;
  $15 = $14&1;
  if ($15) {
   label = 4;
   break;
  }
 }
 if ((label|0) == 4) {
  $16 = ___cxa_find_matching_catch()|0;
  $17 = tempRet0;
  $2 = $16;
  $3 = $17;
  $18 = $2;
  ___cxa_call_unexpected(($18|0));
  // unreachable;
 }
 else if ((label|0) == 5) {
  STACKTOP = sp;return;
 }
}
function __ZNSt3__116__to_raw_pointerIN6ikfast23IkSingleDOFSolutionBaseIdEEEEPT_S5_($__p) {
 $__p = $__p|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__p;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE7destroyIS4_EEvRS5_PT_($__a,$__p) {
 $__a = $__a|0;
 $__p = $__p|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__a;
 $1 = $__p;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy>>0]=HEAP8[$2>>0]|0;
 __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE9__destroyIS4_EEvNS_17integral_constantIbLb0EEERS5_PT_($$byval_copy,$3,$4);
 STACKTOP = sp;return;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE9__destroyIS4_EEvNS_17integral_constantIbLb0EEERS5_PT_($0,$1,$__p) {
 $0 = $0|0;
 $1 = $1|0;
 $__p = $__p|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = $1;
 $3 = $__p;
 STACKTOP = sp;return;
}
function __ZNSt3__19nullptr_tC2EMNS0_5__natEi($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 HEAP32[$3>>2] = 0;
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$1>>2] = $4;
 $5 = (__ZNKSt3__19nullptr_tcvPT_IiEEv($1)|0);
 $6 = ($3|0)!=($5|0);
 if (!($6)) {
  STACKTOP = sp;return;
 }
 __ZNSt3__113__vector_baseIiNS_9allocatorIiEEE5clearEv($2);
 $7 = (__ZNSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv($2)|0);
 $8 = HEAP32[$2>>2]|0;
 $9 = (__ZNKSt3__113__vector_baseIiNS_9allocatorIiEEE8capacityEv($2)|0);
 __ZNSt3__116allocator_traitsINS_9allocatorIiEEE10deallocateERS2_Pij($7,$8,$9);
 STACKTOP = sp;return;
}
function __ZNKSt3__19nullptr_tcvPT_IiEEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return (0|0);
}
function __ZNSt3__113__vector_baseIiNS_9allocatorIiEEE5clearEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 __ZNSt3__113__vector_baseIiNS_9allocatorIiEEE17__destruct_at_endEPi($1,$2);
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 8|0);
 $3 = (__ZNSt3__117__compressed_pairIPiNS_9allocatorIiEEE6secondEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__113__vector_baseIiNS_9allocatorIiEEE8capacityEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__113__vector_baseIiNS_9allocatorIiEEE9__end_capEv($1)|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$1>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 4)&-1;
 STACKTOP = sp;return ($8|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIiEEE10deallocateERS2_Pij($__a,$__p,$__n) {
 $__a = $__a|0;
 $__p = $__p|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__p;
 $2 = $__n;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 __ZNSt3__19allocatorIiE10deallocateEPij($3,$4,$5);
 STACKTOP = sp;return;
}
function __ZNSt3__19allocatorIiE10deallocateEPij($this,$__p,$0) {
 $this = $this|0;
 $__p = $__p|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__p;
 $3 = $0;
 $6 = $2;
 __THREW__ = 0;
 invoke_vi(365,($6|0));
 $7 = __THREW__; __THREW__ = 0;
 $8 = $7&1;
 if ($8) {
  $9 = ___cxa_find_matching_catch()|0;
  $10 = tempRet0;
  $4 = $9;
  $5 = $10;
  $11 = $4;
  ___cxa_call_unexpected(($11|0));
  // unreachable;
 } else {
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__113__vector_baseIiNS_9allocatorIiEEE9__end_capEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 8|0);
 $3 = (__ZNKSt3__117__compressed_pairIPiNS_9allocatorIiEEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__117__compressed_pairIPiNS_9allocatorIiEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNKSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__117__compressed_pairIPiNS_9allocatorIiEEE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EE6secondEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__113__vector_baseIiNS_9allocatorIiEEE17__destruct_at_endEPi($this,$__new_last) {
 $this = $this|0;
 $__new_last = $__new_last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__new_last;
 $4 = $0;
 while(1) {
  $5 = $1;
  $6 = ((($4)) + 4|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = ($5|0)!=($7|0);
  if (!($8)) {
   label = 5;
   break;
  }
  $9 = (__ZNSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv($4)|0);
  $10 = ((($4)) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ((($11)) + -4|0);
  HEAP32[$10>>2] = $12;
  $13 = (__ZNSt3__116__to_raw_pointerIiEEPT_S2_($12)|0);
  __THREW__ = 0;
  invoke_vii(377,($9|0),($13|0));
  $14 = __THREW__; __THREW__ = 0;
  $15 = $14&1;
  if ($15) {
   label = 4;
   break;
  }
 }
 if ((label|0) == 4) {
  $16 = ___cxa_find_matching_catch()|0;
  $17 = tempRet0;
  $2 = $16;
  $3 = $17;
  $18 = $2;
  ___cxa_call_unexpected(($18|0));
  // unreachable;
 }
 else if ((label|0) == 5) {
  STACKTOP = sp;return;
 }
}
function __ZNSt3__116__to_raw_pointerIiEEPT_S2_($__p) {
 $__p = $__p|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__p;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIiEEE7destroyIiEEvRS2_PT_($__a,$__p) {
 $__a = $__a|0;
 $__p = $__p|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__a;
 $1 = $__p;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy>>0]=HEAP8[$2>>0]|0;
 __ZNSt3__116allocator_traitsINS_9allocatorIiEEE9__destroyIiEEvNS_17integral_constantIbLb0EEERS2_PT_($$byval_copy,$3,$4);
 STACKTOP = sp;return;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIiEEE9__destroyIiEEvNS_17integral_constantIbLb0EEERS2_PT_($0,$1,$__p) {
 $0 = $0|0;
 $1 = $1|0;
 $__p = $__p|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = $1;
 $3 = $__p;
 STACKTOP = sp;return;
}
function __ZN6ikfast10IkSolutionIdED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 __THREW__ = 0;
 invoke_vi(7,($3|0));
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if ($5) {
  $6 = ___cxa_find_matching_catch()|0;
  $7 = tempRet0;
  $1 = $6;
  $2 = $7;
  __ZdlPv($3);
  $8 = $1;
  $9 = $2;
  ___resumeException($8|0);
  // unreachable;
 } else {
  __ZdlPv($3);
  STACKTOP = sp;return;
 }
}
function __ZNK6ikfast10IkSolutionIdE11GetSolutionEPdPKd($this,$solution,$freevalues) {
 $this = $this|0;
 $solution = $solution|0;
 $freevalues = $freevalues|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0.0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0.0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0.0, $33 = 0.0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0.0, $39 = 0.0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0.0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0.0, $52 = 0.0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0.0, $58 = 0.0, $59 = 0, $6 = 0, $60 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $solution;
 $2 = $freevalues;
 $3 = $0;
 $i = 0;
 while(1) {
  $4 = $i;
  $5 = ((($3)) + 4|0);
  $6 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4sizeEv($5)|0);
  $7 = ($4>>>0)<($6>>>0);
  if (!($7)) {
   break;
  }
  $8 = ((($3)) + 4|0);
  $9 = $i;
  $10 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($8,$9)|0);
  $11 = ((($10)) + 16|0);
  $12 = HEAP8[$11>>0]|0;
  $13 = $12 << 24 >> 24;
  $14 = ($13|0)<(0);
  $15 = ((($3)) + 4|0);
  $16 = $i;
  $17 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($15,$16)|0);
  do {
   if ($14) {
    $18 = ((($17)) + 8|0);
    $19 = +HEAPF64[$18>>3];
    $20 = $i;
    $21 = $1;
    $22 = (($21) + ($20<<3)|0);
    HEAPF64[$22>>3] = $19;
   } else {
    $23 = ((($17)) + 16|0);
    $24 = HEAP8[$23>>0]|0;
    $25 = $24 << 24 >> 24;
    $26 = $2;
    $27 = (($26) + ($25<<3)|0);
    $28 = +HEAPF64[$27>>3];
    $29 = ((($3)) + 4|0);
    $30 = $i;
    $31 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($29,$30)|0);
    $32 = +HEAPF64[$31>>3];
    $33 = $28 * $32;
    $34 = ((($3)) + 4|0);
    $35 = $i;
    $36 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($34,$35)|0);
    $37 = ((($36)) + 8|0);
    $38 = +HEAPF64[$37>>3];
    $39 = $33 + $38;
    $40 = $i;
    $41 = $1;
    $42 = (($41) + ($40<<3)|0);
    HEAPF64[$42>>3] = $39;
    $43 = $i;
    $44 = $1;
    $45 = (($44) + ($43<<3)|0);
    $46 = +HEAPF64[$45>>3];
    $47 = $46 > 3.14159265358979;
    $48 = $i;
    $49 = $1;
    $50 = (($49) + ($48<<3)|0);
    $51 = +HEAPF64[$50>>3];
    if ($47) {
     $52 = $51 - 6.2831853071795898;
     HEAPF64[$50>>3] = $52;
     break;
    }
    $53 = $51 < -3.14159265358979;
    if ($53) {
     $54 = $i;
     $55 = $1;
     $56 = (($55) + ($54<<3)|0);
     $57 = +HEAPF64[$56>>3];
     $58 = $57 + 6.2831853071795898;
     HEAPF64[$56>>3] = $58;
    }
   }
  } while(0);
  $59 = $i;
  $60 = (($59) + 1)|0;
  $i = $60;
 }
 STACKTOP = sp;return;
}
function __ZNK6ikfast10IkSolutionIdE11GetSolutionERNSt3__16vectorIdNS2_9allocatorIdEEEERKS6_($this,$solution,$freevalues) {
 $this = $this|0;
 $solution = $solution|0;
 $freevalues = $freevalues|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $solution;
 $2 = $freevalues;
 $3 = $0;
 $4 = $1;
 $5 = HEAP32[$3>>2]|0;
 $6 = ((($5)) + 20|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (FUNCTION_TABLE_ii[$7 & 1023]($3)|0);
 __ZNSt3__16vectorIdNS_9allocatorIdEEE6resizeEj($4,$8);
 $9 = HEAP32[$3>>2]|0;
 $10 = ((($9)) + 8|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = $1;
 $13 = (__ZNSt3__16vectorIdNS_9allocatorIdEEE2atEj($12,0)|0);
 $14 = $2;
 $15 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($14)|0);
 $16 = ($15>>>0)>(0);
 if (!($16)) {
  $19 = 0;
  FUNCTION_TABLE_viii[$11 & 1023]($3,$13,$19);
  STACKTOP = sp;return;
 }
 $17 = $2;
 $18 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE2atEj($17,0)|0);
 $19 = $18;
 FUNCTION_TABLE_viii[$11 & 1023]($3,$13,$19);
 STACKTOP = sp;return;
}
function __ZNK6ikfast10IkSolutionIdE7GetFreeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 16|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNK6ikfast10IkSolutionIdE6GetDOFEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 4|0);
 $3 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4sizeEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK6ikfast10IkSolutionIdE8ValidateEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0.0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $9 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 $i = 0;
 while(1) {
  $4 = $i;
  $5 = ((($3)) + 4|0);
  $6 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4sizeEv($5)|0);
  $7 = ($4>>>0)<($6>>>0);
  if (!($7)) {
   label = 22;
   break;
  }
  $8 = ((($3)) + 4|0);
  $9 = $i;
  $10 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($8,$9)|0);
  $11 = ((($10)) + 18|0);
  $12 = HEAP8[$11>>0]|0;
  $13 = $12&255;
  $14 = ($13|0)==(255);
  if ($14) {
   label = 4;
   break;
  }
  $20 = ((($3)) + 4|0);
  $21 = $i;
  $22 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($20,$21)|0);
  $23 = ((($22)) + 18|0);
  $24 = HEAP8[$23>>0]|0;
  $25 = $24&255;
  $26 = ($25|0)>(0);
  if ($26) {
   $27 = ((($3)) + 4|0);
   $28 = $i;
   $29 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($27,$28)|0);
   $30 = ((($29)) + 19|0);
   $31 = HEAP8[$30>>0]|0;
   $32 = $31&255;
   $33 = ((($3)) + 4|0);
   $34 = $i;
   $35 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($33,$34)|0);
   $36 = ((($35)) + 18|0);
   $37 = HEAP8[$36>>0]|0;
   $38 = $37&255;
   $39 = ($32|0)>=($38|0);
   if ($39) {
    label = 9;
    break;
   }
   $45 = ((($3)) + 4|0);
   $46 = $i;
   $47 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($45,$46)|0);
   $48 = ((($47)) + 19|0);
   $49 = ((($48)) + 1|0);
   $50 = HEAP8[$49>>0]|0;
   $51 = $50&255;
   $52 = ($51|0)!=(255);
   if ($52) {
    $53 = ((($3)) + 4|0);
    $54 = $i;
    $55 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($53,$54)|0);
    $56 = ((($55)) + 19|0);
    $57 = ((($56)) + 1|0);
    $58 = HEAP8[$57>>0]|0;
    $59 = $58&255;
    $60 = ((($3)) + 4|0);
    $61 = $i;
    $62 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($60,$61)|0);
    $63 = ((($62)) + 18|0);
    $64 = HEAP8[$63>>0]|0;
    $65 = $64&255;
    $66 = ($59|0)>=($65|0);
    if ($66) {
     label = 14;
     break;
    }
   }
  }
  $72 = ((($3)) + 4|0);
  $73 = $i;
  $74 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($72,$73)|0);
  $75 = ((($74)) + 8|0);
  $76 = +HEAPF64[$75>>3];
  $77 = (__Z8isfiniteIdENSt3__19enable_ifIXsr3std13is_arithmeticIT_EE5valueEbE4typeES2_($76)|0);
  if (!($77)) {
   label = 18;
   break;
  }
  $83 = $i;
  $84 = (($83) + 1)|0;
  $i = $84;
 }
 if ((label|0) == 4) {
  $15 = (___cxa_allocate_exception(8)|0);
  __THREW__ = 0;
  invoke_vii(362,($15|0),(480|0));
  $16 = __THREW__; __THREW__ = 0;
  $17 = $16&1;
  if (!($17)) {
   ___cxa_throw(($15|0),(2056|0),(62|0));
   // unreachable;
  }
  $18 = ___cxa_find_matching_catch()|0;
  $19 = tempRet0;
  $1 = $18;
  $2 = $19;
  ___cxa_free_exception(($15|0));
  $85 = $1;
  $86 = $2;
  ___resumeException($85|0);
  // unreachable;
 }
 else if ((label|0) == 9) {
  $40 = (___cxa_allocate_exception(8)|0);
  __THREW__ = 0;
  invoke_vii(362,($40|0),(520|0));
  $41 = __THREW__; __THREW__ = 0;
  $42 = $41&1;
  if (!($42)) {
   ___cxa_throw(($40|0),(2056|0),(62|0));
   // unreachable;
  }
  $43 = ___cxa_find_matching_catch()|0;
  $44 = tempRet0;
  $1 = $43;
  $2 = $44;
  ___cxa_free_exception(($40|0));
  $85 = $1;
  $86 = $2;
  ___resumeException($85|0);
  // unreachable;
 }
 else if ((label|0) == 14) {
  $67 = (___cxa_allocate_exception(8)|0);
  __THREW__ = 0;
  invoke_vii(362,($67|0),(560|0));
  $68 = __THREW__; __THREW__ = 0;
  $69 = $68&1;
  if (!($69)) {
   ___cxa_throw(($67|0),(2056|0),(62|0));
   // unreachable;
  }
  $70 = ___cxa_find_matching_catch()|0;
  $71 = tempRet0;
  $1 = $70;
  $2 = $71;
  ___cxa_free_exception(($67|0));
  $85 = $1;
  $86 = $2;
  ___resumeException($85|0);
  // unreachable;
 }
 else if ((label|0) == 18) {
  $78 = (___cxa_allocate_exception(8)|0);
  __THREW__ = 0;
  invoke_vii(362,($78|0),(600|0));
  $79 = __THREW__; __THREW__ = 0;
  $80 = $79&1;
  if (!($80)) {
   ___cxa_throw(($78|0),(2056|0),(62|0));
   // unreachable;
  }
  $81 = ___cxa_find_matching_catch()|0;
  $82 = tempRet0;
  $1 = $81;
  $2 = $82;
  ___cxa_free_exception(($78|0));
  $85 = $1;
  $86 = $2;
  ___resumeException($85|0);
  // unreachable;
 }
 else if ((label|0) == 22) {
  STACKTOP = sp;return;
 }
}
function __ZNK6ikfast10IkSolutionIdE18GetSolutionIndicesERNSt3__16vectorIjNS2_9allocatorIjEEEE($this,$v) {
 $this = $this|0;
 $v = $v|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $i = 0, $j = 0, $j1 = 0, $j2 = 0;
 var $orgsize = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = sp + 24|0;
 $3 = sp + 4|0;
 $0 = $this;
 $1 = $v;
 $4 = $0;
 $5 = $1;
 __ZNSt3__16vectorIjNS_9allocatorIjEEE6resizeEj($5,0);
 $6 = $1;
 HEAP32[$2>>2] = 0;
 __ZNSt3__16vectorIjNS_9allocatorIjEEE9push_backERKj($6,$2);
 $7 = ((($4)) + 4|0);
 $8 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4sizeEv($7)|0);
 $9 = (($8) - 1)|0;
 $i = $9;
 while(1) {
  $10 = $i;
  $11 = ($10|0)>=(0);
  if (!($11)) {
   break;
  }
  $12 = ((($4)) + 4|0);
  $13 = $i;
  $14 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($12,$13)|0);
  $15 = ((($14)) + 18|0);
  $16 = HEAP8[$15>>0]|0;
  $17 = $16&255;
  $18 = ($17|0)!=(255);
  L4: do {
   if ($18) {
    $19 = ((($4)) + 4|0);
    $20 = $i;
    $21 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($19,$20)|0);
    $22 = ((($21)) + 18|0);
    $23 = HEAP8[$22>>0]|0;
    $24 = $23&255;
    $25 = ($24|0)>(1);
    if ($25) {
     $j = 0;
     while(1) {
      $26 = $j;
      $27 = $1;
      $28 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4sizeEv($27)|0);
      $29 = ($26>>>0)<($28>>>0);
      if (!($29)) {
       break;
      }
      $30 = ((($4)) + 4|0);
      $31 = $i;
      $32 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($30,$31)|0);
      $33 = ((($32)) + 18|0);
      $34 = HEAP8[$33>>0]|0;
      $35 = $34&255;
      $36 = $1;
      $37 = $j;
      $38 = (__ZNSt3__16vectorIjNS_9allocatorIjEEEixEj($36,$37)|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = Math_imul($39, $35)|0;
      HEAP32[$38>>2] = $40;
      $41 = $j;
      $42 = (($41) + 1)|0;
      $j = $42;
     }
     $43 = $1;
     $44 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4sizeEv($43)|0);
     $orgsize = $44;
     $45 = ((($4)) + 4|0);
     $46 = $i;
     $47 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($45,$46)|0);
     $48 = ((($47)) + 19|0);
     $49 = ((($48)) + 1|0);
     $50 = HEAP8[$49>>0]|0;
     $51 = $50&255;
     $52 = ($51|0)!=(255);
     L11: do {
      if ($52) {
       $j1 = 0;
       while(1) {
        $53 = $j1;
        $54 = $orgsize;
        $55 = ($53>>>0)<($54>>>0);
        if (!($55)) {
         break L11;
        }
        $56 = $1;
        $57 = $1;
        $58 = $j1;
        $59 = (__ZNSt3__16vectorIjNS_9allocatorIjEEEixEj($57,$58)|0);
        $60 = HEAP32[$59>>2]|0;
        $61 = ((($4)) + 4|0);
        $62 = $i;
        $63 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($61,$62)|0);
        $64 = ((($63)) + 19|0);
        $65 = ((($64)) + 1|0);
        $66 = HEAP8[$65>>0]|0;
        $67 = $66&255;
        $68 = (($60) + ($67))|0;
        HEAP32[$3>>2] = $68;
        __ZNSt3__16vectorIjNS_9allocatorIjEEE9push_backERKj($56,$3);
        $69 = $j1;
        $70 = (($69) + 1)|0;
        $j1 = $70;
       }
      }
     } while(0);
     $71 = ((($4)) + 4|0);
     $72 = $i;
     $73 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($71,$72)|0);
     $74 = ((($73)) + 19|0);
     $75 = HEAP8[$74>>0]|0;
     $76 = $75&255;
     $77 = ($76|0)!=(255);
     if ($77) {
      $j2 = 0;
      while(1) {
       $78 = $j2;
       $79 = $orgsize;
       $80 = ($78>>>0)<($79>>>0);
       if (!($80)) {
        break L4;
       }
       $81 = ((($4)) + 4|0);
       $82 = $i;
       $83 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($81,$82)|0);
       $84 = ((($83)) + 19|0);
       $85 = HEAP8[$84>>0]|0;
       $86 = $85&255;
       $87 = $1;
       $88 = $j2;
       $89 = (__ZNSt3__16vectorIjNS_9allocatorIjEEEixEj($87,$88)|0);
       $90 = HEAP32[$89>>2]|0;
       $91 = (($90) + ($86))|0;
       HEAP32[$89>>2] = $91;
       $92 = $j2;
       $93 = (($92) + 1)|0;
       $j2 = $93;
      }
     }
    }
   }
  } while(0);
  $94 = $i;
  $95 = (($94) + -1)|0;
  $i = $95;
 }
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE6resizeEj($this,$__sz) {
 $this = $this|0;
 $__sz = $__sz|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__cs = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__sz;
 $2 = $0;
 $3 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4sizeEv($2)|0);
 $__cs = $3;
 $4 = $__cs;
 $5 = $1;
 $6 = ($4>>>0)<($5>>>0);
 if ($6) {
  $7 = $1;
  $8 = $__cs;
  $9 = (($7) - ($8))|0;
  __ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEj($2,$9);
  STACKTOP = sp;return;
 }
 $10 = $__cs;
 $11 = $1;
 $12 = ($10>>>0)>($11>>>0);
 if (!($12)) {
  STACKTOP = sp;return;
 }
 $13 = HEAP32[$2>>2]|0;
 $14 = $1;
 $15 = (($13) + ($14<<2)|0);
 __ZNSt3__16vectorIjNS_9allocatorIjEEE17__destruct_at_endEPj($2,$15);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE9push_backERKj($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__annotator = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__annotator = sp + 8|0;
 $0 = $this;
 $1 = $__x;
 $2 = $0;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNSt3__113__vector_baseIjNS_9allocatorIjEEE9__end_capEv($2)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($4|0)!=($6|0);
 if ($7) {
  __ZNSt3__16vectorIjNS_9allocatorIjEEE24__RAII_IncreaseAnnotatorC2ERKS3_j($__annotator,$2,1);
  $8 = (__ZNSt3__113__vector_baseIjNS_9allocatorIjEEE7__allocEv($2)|0);
  $9 = ((($2)) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = (__ZNSt3__116__to_raw_pointerIjEEPT_S2_($10)|0);
  $12 = $1;
  __ZNSt3__116allocator_traitsINS_9allocatorIjEEE9constructIjjEEvRS2_PT_RKT0_($8,$11,$12);
  __ZNSt3__16vectorIjNS_9allocatorIjEEE24__RAII_IncreaseAnnotator6__doneEv($__annotator);
  $13 = ((($2)) + 4|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = ((($14)) + 4|0);
  HEAP32[$13>>2] = $15;
  STACKTOP = sp;return;
 } else {
  $16 = $1;
  __ZNSt3__16vectorIjNS_9allocatorIjEEE21__push_back_slow_pathIKjEEvRT_($2,$16);
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4sizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$1>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 24)&-1;
 STACKTOP = sp;return ($8|0);
}
function __ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = HEAP32[$2>>2]|0;
 $5 = (($4) + (($3*24)|0)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNKSt3__16vectorIjNS_9allocatorIjEEE4sizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$1>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 4)&-1;
 STACKTOP = sp;return ($8|0);
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEEixEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = HEAP32[$2>>2]|0;
 $5 = (($4) + ($3<<2)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNSt3__113__vector_baseIjNS_9allocatorIjEEE9__end_capEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 8|0);
 $3 = (__ZNSt3__117__compressed_pairIPjNS_9allocatorIjEEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE24__RAII_IncreaseAnnotatorC2ERKS3_j($this,$0,$__n) {
 $this = $this|0;
 $0 = $0|0;
 $__n = $__n|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $__n;
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIjNS_9allocatorIjEEE7__allocEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 8|0);
 $3 = (__ZNSt3__117__compressed_pairIPjNS_9allocatorIjEEE6secondEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__116__to_raw_pointerIjEEPT_S2_($__p) {
 $__p = $__p|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__p;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIjEEE9constructIjjEEvRS2_PT_RKT0_($__a,$__p,$__a0) {
 $__a = $__a|0;
 $__p = $__p|0;
 $__a0 = $__a0|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__p;
 $2 = $__a0;
 $3 = $1;
 $4 = $2;
 $5 = HEAP32[$4>>2]|0;
 HEAP32[$3>>2] = $5;
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE24__RAII_IncreaseAnnotator6__doneEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE21__push_back_slow_pathIKjEEvRT_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__v = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__v = sp + 8|0;
 $0 = $this;
 $1 = $__x;
 $4 = $0;
 $5 = (__ZNSt3__113__vector_baseIjNS_9allocatorIjEEE7__allocEv($4)|0);
 $__a = $5;
 $6 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4sizeEv($4)|0);
 $7 = (($6) + 1)|0;
 $8 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE11__recommendEj($4,$7)|0);
 $9 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4sizeEv($4)|0);
 $10 = $__a;
 __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEEC2EjjS3_($__v,$8,$9,$10);
 $11 = $__a;
 $12 = ((($__v)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = (__ZNSt3__116__to_raw_pointerIjEEPT_S2_($13)|0);
 $15 = $1;
 $16 = (__ZNSt3__17forwardIKjEERT_RNS_16remove_referenceIS2_E4typeE($15)|0);
 __THREW__ = 0;
 invoke_viii(378,($11|0),($14|0),($16|0));
 $17 = __THREW__; __THREW__ = 0;
 $18 = $17&1;
 if (!($18)) {
  $19 = ((($__v)) + 8|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = ((($20)) + 4|0);
  HEAP32[$19>>2] = $21;
  __THREW__ = 0;
  invoke_vii(379,($4|0),($__v|0));
  $22 = __THREW__; __THREW__ = 0;
  $23 = $22&1;
  if (!($23)) {
   __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEED2Ev($__v);
   STACKTOP = sp;return;
  }
 }
 $24 = ___cxa_find_matching_catch()|0;
 $25 = tempRet0;
 $2 = $24;
 $3 = $25;
 __THREW__ = 0;
 invoke_vi(380,($__v|0));
 $26 = __THREW__; __THREW__ = 0;
 $27 = $26&1;
 if ($27) {
  $30 = ___cxa_find_matching_catch(0|0)|0;
  $31 = tempRet0;
  ___clang_call_terminate($30);
  // unreachable;
 } else {
  $28 = $2;
  $29 = $3;
  ___resumeException($28|0);
  // unreachable;
 }
}
function __ZNKSt3__16vectorIjNS_9allocatorIjEEE11__recommendEj($this,$__new_size) {
 $this = $this|0;
 $__new_size = $__new_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__cap = 0, $__ms = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = sp + 12|0;
 $3 = sp;
 $1 = $this;
 HEAP32[$2>>2] = $__new_size;
 $4 = $1;
 $5 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE8max_sizeEv($4)|0);
 $__ms = $5;
 $6 = HEAP32[$2>>2]|0;
 $7 = $__ms;
 $8 = ($6>>>0)>($7>>>0);
 if ($8) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($4);
  // unreachable;
 }
 $9 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE8capacityEv($4)|0);
 $__cap = $9;
 $10 = $__cap;
 $11 = $__ms;
 $12 = (($11>>>0) / 2)&-1;
 $13 = ($10>>>0)>=($12>>>0);
 if ($13) {
  $14 = $__ms;
  $0 = $14;
  $19 = $0;
  STACKTOP = sp;return ($19|0);
 } else {
  $15 = $__cap;
  $16 = $15<<1;
  HEAP32[$3>>2] = $16;
  $17 = (__ZNSt3__13maxIjEERKT_S3_S3_($3,$2)|0);
  $18 = HEAP32[$17>>2]|0;
  $0 = $18;
  $19 = $0;
  STACKTOP = sp;return ($19|0);
 }
 return (0)|0;
}
function __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEEC2EjjS3_($this,$__cap,$__start,$__a) {
 $this = $this|0;
 $__cap = $__cap|0;
 $__start = $__start|0;
 $__a = $__a|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $4 = sp + 4|0;
 $5 = sp;
 $0 = $this;
 $1 = $__cap;
 $2 = $__start;
 $3 = $__a;
 $6 = $0;
 $7 = ((($6)) + 12|0);
 $8 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$4>>2] = $8;
 $9 = (__ZNKSt3__19nullptr_tcvPT_IjEEv($4)|0);
 $10 = $3;
 __ZNSt3__117__compressed_pairIPjRNS_9allocatorIjEEEC2ES1_S4_($7,$9,$10);
 $11 = $1;
 $12 = ($11|0)!=(0);
 if ($12) {
  $13 = (__ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE7__allocEv($6)|0);
  $14 = $1;
  $15 = (__ZNSt3__116allocator_traitsINS_9allocatorIjEEE8allocateERS2_j($13,$14)|0);
  $18 = $15;
 } else {
  $16 = (__ZNSt3__115__get_nullptr_tEv()|0);
  HEAP32[$5>>2] = $16;
  $17 = (__ZNKSt3__19nullptr_tcvPT_IjEEv($5)|0);
  $18 = $17;
 }
 HEAP32[$6>>2] = $18;
 $19 = HEAP32[$6>>2]|0;
 $20 = $2;
 $21 = (($19) + ($20<<2)|0);
 $22 = ((($6)) + 8|0);
 HEAP32[$22>>2] = $21;
 $23 = ((($6)) + 4|0);
 HEAP32[$23>>2] = $21;
 $24 = HEAP32[$6>>2]|0;
 $25 = $1;
 $26 = (($24) + ($25<<2)|0);
 $27 = (__ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE9__end_capEv($6)|0);
 HEAP32[$27>>2] = $26;
 STACKTOP = sp;return;
}
function __ZNSt3__17forwardIKjEERT_RNS_16remove_referenceIS2_E4typeE($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE26__swap_out_circular_bufferERNS_14__split_bufferIjRS2_EE($this,$__v) {
 $this = $this|0;
 $__v = $__v|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__v;
 $2 = $0;
 __ZNKSt3__16vectorIjNS_9allocatorIjEEE17__annotate_deleteEv($2);
 $3 = (__ZNSt3__113__vector_baseIjNS_9allocatorIjEEE7__allocEv($2)|0);
 $4 = HEAP32[$2>>2]|0;
 $5 = ((($2)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $1;
 $8 = ((($7)) + 4|0);
 __ZNSt3__116allocator_traitsINS_9allocatorIjEEE20__construct_backwardIjEENS_9enable_ifIXaaoosr7is_sameIS2_NS1_IT_EEEE5valuentsr15__has_constructIS2_PS6_S6_EE5valuesr31is_trivially_move_constructibleIS6_EE5valueEvE4typeERS2_S8_S8_RS8_($3,$4,$6,$8);
 $9 = $1;
 $10 = ((($9)) + 4|0);
 __ZNSt3__14swapIPjEEvRT_S3_($2,$10);
 $11 = ((($2)) + 4|0);
 $12 = $1;
 $13 = ((($12)) + 8|0);
 __ZNSt3__14swapIPjEEvRT_S3_($11,$13);
 $14 = (__ZNSt3__113__vector_baseIjNS_9allocatorIjEEE9__end_capEv($2)|0);
 $15 = $1;
 $16 = (__ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE9__end_capEv($15)|0);
 __ZNSt3__14swapIPjEEvRT_S3_($14,$16);
 $17 = $1;
 $18 = ((($17)) + 4|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = $1;
 HEAP32[$20>>2] = $19;
 $21 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4sizeEv($2)|0);
 __ZNKSt3__16vectorIjNS_9allocatorIjEEE14__annotate_newEj($2,$21);
 __ZNSt3__16vectorIjNS_9allocatorIjEEE26__invalidate_all_iteratorsEv($2);
 STACKTOP = sp;return;
}
function __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE5clearEv($1);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  STACKTOP = sp;return;
 }
 $4 = (__ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE7__allocEv($1)|0);
 $5 = HEAP32[$1>>2]|0;
 $6 = (__ZNKSt3__114__split_bufferIjRNS_9allocatorIjEEE8capacityEv($1)|0);
 __ZNSt3__116allocator_traitsINS_9allocatorIjEEE10deallocateERS2_Pjj($4,$5,$6);
 STACKTOP = sp;return;
}
function __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE5clearEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE17__destruct_at_endEPj($1,$3);
 STACKTOP = sp;return;
}
function __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE7__allocEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 12|0);
 $3 = (__ZNSt3__117__compressed_pairIPjRNS_9allocatorIjEEE6secondEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__114__split_bufferIjRNS_9allocatorIjEEE8capacityEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__114__split_bufferIjRNS_9allocatorIjEEE9__end_capEv($1)|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$1>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 4)&-1;
 STACKTOP = sp;return ($8|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIjEEE10deallocateERS2_Pjj($__a,$__p,$__n) {
 $__a = $__a|0;
 $__p = $__p|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__p;
 $2 = $__n;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 __ZNSt3__19allocatorIjE10deallocateEPjj($3,$4,$5);
 STACKTOP = sp;return;
}
function __ZNSt3__19allocatorIjE10deallocateEPjj($this,$__p,$0) {
 $this = $this|0;
 $__p = $__p|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__p;
 $3 = $0;
 $6 = $2;
 __THREW__ = 0;
 invoke_vi(365,($6|0));
 $7 = __THREW__; __THREW__ = 0;
 $8 = $7&1;
 if ($8) {
  $9 = ___cxa_find_matching_catch()|0;
  $10 = tempRet0;
  $4 = $9;
  $5 = $10;
  $11 = $4;
  ___cxa_call_unexpected(($11|0));
  // unreachable;
 } else {
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__114__split_bufferIjRNS_9allocatorIjEEE9__end_capEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 12|0);
 $3 = (__ZNKSt3__117__compressed_pairIPjRNS_9allocatorIjEEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__117__compressed_pairIPjRNS_9allocatorIjEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__128__libcpp_compressed_pair_impIPjRNS_9allocatorIjEELj0EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNKSt3__128__libcpp_compressed_pair_impIPjRNS_9allocatorIjEELj0EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__117__compressed_pairIPjRNS_9allocatorIjEEE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPjRNS_9allocatorIjEELj0EE6secondEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPjRNS_9allocatorIjEELj0EE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE17__destruct_at_endEPj($this,$__new_last) {
 $this = $this|0;
 $__new_last = $__new_last|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $this;
 $1 = $__new_last;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy>>0]=HEAP8[$2>>0]|0;
 __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE17__destruct_at_endEPjNS_17integral_constantIbLb0EEE($3,$4,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE17__destruct_at_endEPjNS_17integral_constantIbLb0EEE($this,$__new_last,$0) {
 $this = $this|0;
 $__new_last = $__new_last|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__new_last;
 $5 = $1;
 while(1) {
  $6 = $2;
  $7 = ((($5)) + 8|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = ($6|0)!=($8|0);
  if (!($9)) {
   label = 5;
   break;
  }
  $10 = (__ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE7__allocEv($5)|0);
  $11 = ((($5)) + 8|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = ((($12)) + -4|0);
  HEAP32[$11>>2] = $13;
  $14 = (__ZNSt3__116__to_raw_pointerIjEEPT_S2_($13)|0);
  __THREW__ = 0;
  invoke_vii(381,($10|0),($14|0));
  $15 = __THREW__; __THREW__ = 0;
  $16 = $15&1;
  if ($16) {
   label = 4;
   break;
  }
 }
 if ((label|0) == 4) {
  $17 = ___cxa_find_matching_catch()|0;
  $18 = tempRet0;
  $3 = $17;
  $4 = $18;
  $19 = $3;
  ___cxa_call_unexpected(($19|0));
  // unreachable;
 }
 else if ((label|0) == 5) {
  STACKTOP = sp;return;
 }
}
function __ZNSt3__116allocator_traitsINS_9allocatorIjEEE7destroyIjEEvRS2_PT_($__a,$__p) {
 $__a = $__a|0;
 $__p = $__p|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__a;
 $1 = $__p;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy>>0]=HEAP8[$2>>0]|0;
 __ZNSt3__116allocator_traitsINS_9allocatorIjEEE9__destroyIjEEvNS_17integral_constantIbLb0EEERS2_PT_($$byval_copy,$3,$4);
 STACKTOP = sp;return;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIjEEE9__destroyIjEEvNS_17integral_constantIbLb0EEERS2_PT_($0,$1,$__p) {
 $0 = $0|0;
 $1 = $1|0;
 $__p = $__p|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = $1;
 $3 = $__p;
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorIjNS_9allocatorIjEEE17__annotate_deleteEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4dataEv($1)|0);
 $3 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4dataEv($1)|0);
 $4 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE8capacityEv($1)|0);
 $5 = (($3) + ($4<<2)|0);
 $6 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4dataEv($1)|0);
 $7 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4sizeEv($1)|0);
 $8 = (($6) + ($7<<2)|0);
 $9 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4dataEv($1)|0);
 $10 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE8capacityEv($1)|0);
 $11 = (($9) + ($10<<2)|0);
 __ZNKSt3__16vectorIjNS_9allocatorIjEEE31__annotate_contiguous_containerEPKvS5_S5_S5_($1,$2,$5,$8,$11);
 STACKTOP = sp;return;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIjEEE20__construct_backwardIjEENS_9enable_ifIXaaoosr7is_sameIS2_NS1_IT_EEEE5valuentsr15__has_constructIS2_PS6_S6_EE5valuesr31is_trivially_move_constructibleIS6_EE5valueEvE4typeERS2_S8_S8_RS8_($__a,$__begin1,$__end1,$__end2) {
 $__a = $__a|0;
 $__begin1 = $__begin1|0;
 $__end1 = $__end1|0;
 $__end2 = $__end2|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $_Np = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__begin1;
 $2 = $__end1;
 $3 = $__end2;
 $4 = $2;
 $5 = $1;
 $6 = $4;
 $7 = $5;
 $8 = (($6) - ($7))|0;
 $9 = (($8|0) / 4)&-1;
 $_Np = $9;
 $10 = $_Np;
 $11 = $3;
 $12 = HEAP32[$11>>2]|0;
 $13 = (0 - ($10))|0;
 $14 = (($12) + ($13<<2)|0);
 HEAP32[$11>>2] = $14;
 $15 = $3;
 $16 = HEAP32[$15>>2]|0;
 $17 = $1;
 $18 = $_Np;
 $19 = $18<<2;
 _memcpy(($16|0),($17|0),($19|0))|0;
 STACKTOP = sp;return;
}
function __ZNSt3__14swapIPjEEvRT_S3_($__x,$__y) {
 $__x = $__x|0;
 $__y = $__y|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__t = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__t = sp;
 $0 = $__x;
 $1 = $__y;
 $2 = $0;
 $3 = (__ZNSt3__14moveIPjEERT_S3_($2)|0);
 $4 = HEAP32[$3>>2]|0;
 HEAP32[$__t>>2] = $4;
 $5 = $1;
 $6 = (__ZNSt3__14moveIPjEERT_S3_($5)|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = $0;
 HEAP32[$8>>2] = $7;
 $9 = (__ZNSt3__14moveIPjEERT_S3_($__t)|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = $1;
 HEAP32[$11>>2] = $10;
 STACKTOP = sp;return;
}
function __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE9__end_capEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 12|0);
 $3 = (__ZNSt3__117__compressed_pairIPjRNS_9allocatorIjEEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__16vectorIjNS_9allocatorIjEEE14__annotate_newEj($this,$__current_size) {
 $this = $this|0;
 $__current_size = $__current_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__current_size;
 $2 = $0;
 $3 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4dataEv($2)|0);
 $4 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4dataEv($2)|0);
 $5 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE8capacityEv($2)|0);
 $6 = (($4) + ($5<<2)|0);
 $7 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4dataEv($2)|0);
 $8 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE8capacityEv($2)|0);
 $9 = (($7) + ($8<<2)|0);
 $10 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4dataEv($2)|0);
 $11 = $1;
 $12 = (($10) + ($11<<2)|0);
 __ZNKSt3__16vectorIjNS_9allocatorIjEEE31__annotate_contiguous_containerEPKvS5_S5_S5_($2,$3,$6,$9,$12);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE26__invalidate_all_iteratorsEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorIjNS_9allocatorIjEEE4dataEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (__ZNSt3__116__to_raw_pointerIjEEPT_S2_($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__16vectorIjNS_9allocatorIjEEE8capacityEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__113__vector_baseIjNS_9allocatorIjEEE8capacityEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNKSt3__16vectorIjNS_9allocatorIjEEE31__annotate_contiguous_containerEPKvS5_S5_S5_($this,$__beg,$__end,$__old_mid,$__new_mid) {
 $this = $this|0;
 $__beg = $__beg|0;
 $__end = $__end|0;
 $__old_mid = $__old_mid|0;
 $__new_mid = $__new_mid|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__beg;
 $2 = $__end;
 $3 = $__old_mid;
 $4 = $__new_mid;
 STACKTOP = sp;return;
}
function __ZNKSt3__113__vector_baseIjNS_9allocatorIjEEE8capacityEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__113__vector_baseIjNS_9allocatorIjEEE9__end_capEv($1)|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$1>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 4)&-1;
 STACKTOP = sp;return ($8|0);
}
function __ZNKSt3__113__vector_baseIjNS_9allocatorIjEEE9__end_capEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 8|0);
 $3 = (__ZNKSt3__117__compressed_pairIPjNS_9allocatorIjEEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__117__compressed_pairIPjNS_9allocatorIjEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__128__libcpp_compressed_pair_impIPjNS_9allocatorIjEELj2EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNKSt3__128__libcpp_compressed_pair_impIPjNS_9allocatorIjEELj2EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__117__compressed_pairIPjRNS_9allocatorIjEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPjRNS_9allocatorIjEELj0EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPjRNS_9allocatorIjEELj0EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__14moveIPjEERT_S3_($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__19nullptr_tcvPT_IjEEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return (0|0);
}
function __ZNSt3__117__compressed_pairIPjRNS_9allocatorIjEEEC2ES1_S4_($this,$__t1,$__t2) {
 $this = $this|0;
 $__t1 = $__t1|0;
 $__t2 = $__t2|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 4|0;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $__t2;
 $3 = $0;
 $4 = (__ZNSt3__17forwardIPjEERT_RNS_16remove_referenceIS2_E4typeE($1)|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $2;
 $7 = (__ZNSt3__17forwardIRNS_9allocatorIjEEEERT_RNS_16remove_referenceIS4_E4typeE($6)|0);
 __ZNSt3__128__libcpp_compressed_pair_impIPjRNS_9allocatorIjEELj0EEC2ES1_S4_($3,$5,$7);
 STACKTOP = sp;return;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIjEEE8allocateERS2_j($__a,$__n) {
 $__a = $__a|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = (__ZNSt3__19allocatorIjE8allocateEjPKv($2,$3,0)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNSt3__19allocatorIjE8allocateEjPKv($this,$__n,$0) {
 $this = $this|0;
 $__n = $__n|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__n;
 $3 = $0;
 $4 = $2;
 $5 = $4<<2;
 $6 = (__ZNSt3__110__allocateEj($5)|0);
 STACKTOP = sp;return ($6|0);
}
function __ZNSt3__110__allocateEj($__size) {
 $__size = $__size|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__size;
 $1 = $0;
 $2 = (__Znwj($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__17forwardIPjEERT_RNS_16remove_referenceIS2_E4typeE($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__17forwardIRNS_9allocatorIjEEEERT_RNS_16remove_referenceIS4_E4typeE($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPjRNS_9allocatorIjEELj0EEC2ES1_S4_($this,$__t1,$__t2) {
 $this = $this|0;
 $__t1 = $__t1|0;
 $__t2 = $__t2|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 4|0;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $__t2;
 $3 = $0;
 $4 = (__ZNSt3__17forwardIPjEERT_RNS_16remove_referenceIS2_E4typeE($1)|0);
 $5 = HEAP32[$4>>2]|0;
 HEAP32[$3>>2] = $5;
 $6 = ((($3)) + 4|0);
 $7 = $2;
 $8 = (__ZNSt3__17forwardIRNS_9allocatorIjEEEERT_RNS_16remove_referenceIS4_E4typeE($7)|0);
 HEAP32[$6>>2] = $8;
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorIjNS_9allocatorIjEEE8max_sizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 12|0;
 $2 = sp + 8|0;
 $0 = $this;
 $5 = $0;
 $6 = (__ZNKSt3__113__vector_baseIjNS_9allocatorIjEEE7__allocEv($5)|0);
 $7 = (__ZNSt3__116allocator_traitsINS_9allocatorIjEEE8max_sizeERKS2_($6)|0);
 HEAP32[$1>>2] = $7;
 $8 = (__ZNSt3__114numeric_limitsIjE3maxEv()|0);
 $9 = (($8>>>0) / 2)&-1;
 HEAP32[$2>>2] = $9;
 __THREW__ = 0;
 $10 = (invoke_iii(382,($1|0),($2|0))|0);
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 if ($12) {
  $14 = ___cxa_find_matching_catch()|0;
  $15 = tempRet0;
  $3 = $14;
  $4 = $15;
  $16 = $3;
  ___cxa_call_unexpected(($16|0));
  // unreachable;
 } else {
  $13 = HEAP32[$10>>2]|0;
  STACKTOP = sp;return ($13|0);
 }
 return (0)|0;
}
function __ZNSt3__13maxIjEERKT_S3_S3_($__a,$__b) {
 $__a = $__a|0;
 $__b = $__b|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__a;
 $1 = $__b;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy>>0]=HEAP8[$2>>0]|0;
 $5 = (__ZNSt3__13maxIjNS_6__lessIjjEEEERKT_S5_S5_T0_($3,$4,$$byval_copy)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNSt3__13maxIjNS_6__lessIjjEEEERKT_S5_S5_T0_($__a,$__b,$__comp) {
 $__a = $__a|0;
 $__b = $__b|0;
 $__comp = $__comp|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__b;
 $2 = $0;
 $3 = $1;
 $4 = (__ZNKSt3__16__lessIjjEclERKjS3_($__comp,$2,$3)|0);
 $5 = $1;
 $6 = $0;
 $7 = $4 ? $5 : $6;
 STACKTOP = sp;return ($7|0);
}
function __ZNKSt3__16__lessIjjEclERKjS3_($this,$__x,$__y) {
 $this = $this|0;
 $__x = $__x|0;
 $__y = $__y|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__x;
 $2 = $__y;
 $3 = $1;
 $4 = HEAP32[$3>>2]|0;
 $5 = $2;
 $6 = HEAP32[$5>>2]|0;
 $7 = ($4>>>0)<($6>>>0);
 STACKTOP = sp;return ($7|0);
}
function __ZNKSt3__113__vector_baseIjNS_9allocatorIjEEE7__allocEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 8|0);
 $3 = (__ZNKSt3__117__compressed_pairIPjNS_9allocatorIjEEE6secondEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIjEEE8max_sizeERKS2_($__a) {
 $__a = $__a|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 13|0;
 $1 = sp + 12|0;
 $0 = $__a;
 $4 = $0;
 __THREW__ = 0;
 ;HEAP8[$$byval_copy>>0]=HEAP8[$1>>0]|0;
 $5 = (invoke_iii(383,($$byval_copy|0),($4|0))|0);
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if ($7) {
  $8 = ___cxa_find_matching_catch()|0;
  $9 = tempRet0;
  $2 = $8;
  $3 = $9;
  $10 = $2;
  ___cxa_call_unexpected(($10|0));
  // unreachable;
 } else {
  STACKTOP = sp;return ($5|0);
 }
 return (0)|0;
}
function __ZNSt3__114numeric_limitsIjE3maxEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__123__libcpp_numeric_limitsIjLb1EE3maxEv()|0);
 return ($0|0);
}
function __ZNSt3__13minIjEERKT_S3_S3_($__a,$__b) {
 $__a = $__a|0;
 $__b = $__b|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__a;
 $1 = $__b;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy>>0]=HEAP8[$2>>0]|0;
 $5 = (__ZNSt3__13minIjNS_6__lessIjjEEEERKT_S5_S5_T0_($3,$4,$$byval_copy)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNSt3__13minIjNS_6__lessIjjEEEERKT_S5_S5_T0_($__a,$__b,$__comp) {
 $__a = $__a|0;
 $__b = $__b|0;
 $__comp = $__comp|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__b;
 $2 = $1;
 $3 = $0;
 $4 = (__ZNKSt3__16__lessIjjEclERKjS3_($__comp,$2,$3)|0);
 $5 = $1;
 $6 = $0;
 $7 = $4 ? $5 : $6;
 STACKTOP = sp;return ($7|0);
}
function __ZNSt3__123__libcpp_numeric_limitsIjLb1EE3maxEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -1;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIjEEE10__max_sizeENS_17integral_constantIbLb1EEERKS2_($0,$__a) {
 $0 = $0|0;
 $__a = $__a|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $__a;
 $2 = $1;
 $3 = (__ZNKSt3__19allocatorIjE8max_sizeEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__19allocatorIjE8max_sizeEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return 1073741823;
}
function __ZNKSt3__117__compressed_pairIPjNS_9allocatorIjEEE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__128__libcpp_compressed_pair_impIPjNS_9allocatorIjEELj2EE6secondEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNKSt3__128__libcpp_compressed_pair_impIPjNS_9allocatorIjEELj2EE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__117__compressed_pairIPjNS_9allocatorIjEEE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPjNS_9allocatorIjEELj2EE6secondEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPjNS_9allocatorIjEELj2EE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__117__compressed_pairIPjNS_9allocatorIjEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPjNS_9allocatorIjEELj2EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPjNS_9allocatorIjEELj2EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__v = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__v = sp + 8|0;
 $0 = $this;
 $1 = $__n;
 $4 = $0;
 $5 = (__ZNSt3__113__vector_baseIjNS_9allocatorIjEEE9__end_capEv($4)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($4)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = $6;
 $10 = $8;
 $11 = (($9) - ($10))|0;
 $12 = (($11|0) / 4)&-1;
 $13 = $1;
 $14 = ($12>>>0)>=($13>>>0);
 if ($14) {
  $15 = $1;
  __ZNSt3__16vectorIjNS_9allocatorIjEEE18__construct_at_endEj($4,$15);
  STACKTOP = sp;return;
 }
 $16 = (__ZNSt3__113__vector_baseIjNS_9allocatorIjEEE7__allocEv($4)|0);
 $__a = $16;
 $17 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4sizeEv($4)|0);
 $18 = $1;
 $19 = (($17) + ($18))|0;
 $20 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE11__recommendEj($4,$19)|0);
 $21 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4sizeEv($4)|0);
 $22 = $__a;
 __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEEC2EjjS3_($__v,$20,$21,$22);
 $23 = $1;
 __THREW__ = 0;
 invoke_vii(384,($__v|0),($23|0));
 $24 = __THREW__; __THREW__ = 0;
 $25 = $24&1;
 if (!($25)) {
  __THREW__ = 0;
  invoke_vii(379,($4|0),($__v|0));
  $26 = __THREW__; __THREW__ = 0;
  $27 = $26&1;
  if (!($27)) {
   __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEED2Ev($__v);
   STACKTOP = sp;return;
  }
 }
 $28 = ___cxa_find_matching_catch()|0;
 $29 = tempRet0;
 $2 = $28;
 $3 = $29;
 __THREW__ = 0;
 invoke_vi(380,($__v|0));
 $30 = __THREW__; __THREW__ = 0;
 $31 = $30&1;
 if ($31) {
  $34 = ___cxa_find_matching_catch(0|0)|0;
  $35 = tempRet0;
  ___clang_call_terminate($34);
  // unreachable;
 } else {
  $32 = $2;
  $33 = $3;
  ___resumeException($32|0);
  // unreachable;
 }
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE17__destruct_at_endEPj($this,$__new_last) {
 $this = $this|0;
 $__new_last = $__new_last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__old_size = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__new_last;
 $4 = $0;
 $5 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4sizeEv($4)|0);
 $__old_size = $5;
 $6 = $1;
 __ZNSt3__113__vector_baseIjNS_9allocatorIjEEE17__destruct_at_endEPj($4,$6);
 $7 = $__old_size;
 __THREW__ = 0;
 invoke_vii(385,($4|0),($7|0));
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if ($9) {
  $10 = ___cxa_find_matching_catch()|0;
  $11 = tempRet0;
  $2 = $10;
  $3 = $11;
  $12 = $2;
  ___cxa_call_unexpected(($12|0));
  // unreachable;
 } else {
  STACKTOP = sp;return;
 }
}
function __ZNSt3__113__vector_baseIjNS_9allocatorIjEEE17__destruct_at_endEPj($this,$__new_last) {
 $this = $this|0;
 $__new_last = $__new_last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__new_last;
 $4 = $0;
 while(1) {
  $5 = $1;
  $6 = ((($4)) + 4|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = ($5|0)!=($7|0);
  if (!($8)) {
   label = 5;
   break;
  }
  $9 = (__ZNSt3__113__vector_baseIjNS_9allocatorIjEEE7__allocEv($4)|0);
  $10 = ((($4)) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ((($11)) + -4|0);
  HEAP32[$10>>2] = $12;
  $13 = (__ZNSt3__116__to_raw_pointerIjEEPT_S2_($12)|0);
  __THREW__ = 0;
  invoke_vii(381,($9|0),($13|0));
  $14 = __THREW__; __THREW__ = 0;
  $15 = $14&1;
  if ($15) {
   label = 4;
   break;
  }
 }
 if ((label|0) == 4) {
  $16 = ___cxa_find_matching_catch()|0;
  $17 = tempRet0;
  $2 = $16;
  $3 = $17;
  $18 = $2;
  ___cxa_call_unexpected(($18|0));
  // unreachable;
 }
 else if ((label|0) == 5) {
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__16vectorIjNS_9allocatorIjEEE17__annotate_shrinkEj($this,$__old_size) {
 $this = $this|0;
 $__old_size = $__old_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__old_size;
 $2 = $0;
 $3 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4dataEv($2)|0);
 $4 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4dataEv($2)|0);
 $5 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE8capacityEv($2)|0);
 $6 = (($4) + ($5<<2)|0);
 $7 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4dataEv($2)|0);
 $8 = $1;
 $9 = (($7) + ($8<<2)|0);
 $10 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4dataEv($2)|0);
 $11 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4sizeEv($2)|0);
 $12 = (($10) + ($11<<2)|0);
 __ZNKSt3__16vectorIjNS_9allocatorIjEEE31__annotate_contiguous_containerEPKvS5_S5_S5_($2,$3,$6,$9,$12);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__annotator = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__annotator = sp + 12|0;
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = (__ZNSt3__113__vector_baseIjNS_9allocatorIjEEE7__allocEv($2)|0);
 $__a = $3;
 while(1) {
  __ZNSt3__16vectorIjNS_9allocatorIjEEE24__RAII_IncreaseAnnotatorC2ERKS3_j($__annotator,$2,1);
  $4 = $__a;
  $5 = ((($2)) + 4|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (__ZNSt3__116__to_raw_pointerIjEEPT_S2_($6)|0);
  __ZNSt3__116allocator_traitsINS_9allocatorIjEEE9constructIjEEvRS2_PT_($4,$7);
  $8 = ((($2)) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = ((($9)) + 4|0);
  HEAP32[$8>>2] = $10;
  $11 = $1;
  $12 = (($11) + -1)|0;
  $1 = $12;
  __ZNSt3__16vectorIjNS_9allocatorIjEEE24__RAII_IncreaseAnnotator6__doneEv($__annotator);
  $13 = $1;
  $14 = ($13>>>0)>(0);
  if (!($14)) {
   break;
  }
 }
 STACKTOP = sp;return;
}
function __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = (__ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE7__allocEv($2)|0);
 $__a = $3;
 while(1) {
  $4 = $__a;
  $5 = ((($2)) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (__ZNSt3__116__to_raw_pointerIjEEPT_S2_($6)|0);
  __ZNSt3__116allocator_traitsINS_9allocatorIjEEE9constructIjEEvRS2_PT_($4,$7);
  $8 = ((($2)) + 8|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = ((($9)) + 4|0);
  HEAP32[$8>>2] = $10;
  $11 = $1;
  $12 = (($11) + -1)|0;
  $1 = $12;
  $13 = $1;
  $14 = ($13>>>0)>(0);
  if (!($14)) {
   break;
  }
 }
 STACKTOP = sp;return;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIjEEE9constructIjEEvRS2_PT_($__a,$__p) {
 $__a = $__a|0;
 $__p = $__p|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__p;
 $2 = $1;
 HEAP32[$2>>2] = 0;
 STACKTOP = sp;return;
}
function __Z8isfiniteIdENSt3__19enable_ifIXsr3std13is_arithmeticIT_EE5valueEbE4typeES2_($__lcpp_x) {
 $__lcpp_x = +$__lcpp_x;
 var $0 = 0.0, $1 = 0.0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__lcpp_x;
 $1 = $0;
 $2 = (__Z17__libcpp_isfiniteIdEbT_($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __Z17__libcpp_isfiniteIdEbT_($__lcpp_x) {
 $__lcpp_x = +$__lcpp_x;
 var $0 = 0.0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0.0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__lcpp_x;
 $3 = $0;
 __THREW__ = 0;
 $4 = (invoke_id(386,(+$3))|0);
 $5 = tempRet0;
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if ($7) {
  $14 = ___cxa_find_matching_catch()|0;
  $15 = tempRet0;
  $1 = $14;
  $2 = $15;
  $16 = $1;
  ___cxa_call_unexpected(($16|0));
  // unreachable;
 } else {
  $8 = $5 & 2147483647;
  $9 = ($8>>>0)<(2146435072);
  $10 = ($4>>>0)<(0);
  $11 = ($8|0)==(2146435072);
  $12 = $11 & $10;
  $13 = $9 | $12;
  STACKTOP = sp;return ($13|0);
 }
 return (0)|0;
}
function __Z13__DOUBLE_BITSd($__f) {
 $__f = +$__f;
 var $0 = 0.0, $1 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $__u = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__u = sp;
 $0 = $__f;
 $1 = $0;
 HEAPF64[$__u>>3] = $1;
 $2 = $__u;
 $3 = $2;
 $4 = HEAP32[$3>>2]|0;
 $5 = (($2) + 4)|0;
 $6 = $5;
 $7 = HEAP32[$6>>2]|0;
 tempRet0 = ($7);
 STACKTOP = sp;return ($4|0);
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE6resizeEj($this,$__sz) {
 $this = $this|0;
 $__sz = $__sz|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__cs = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__sz;
 $2 = $0;
 $3 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($2)|0);
 $__cs = $3;
 $4 = $__cs;
 $5 = $1;
 $6 = ($4>>>0)<($5>>>0);
 if ($6) {
  $7 = $1;
  $8 = $__cs;
  $9 = (($7) - ($8))|0;
  __ZNSt3__16vectorIdNS_9allocatorIdEEE8__appendEj($2,$9);
  STACKTOP = sp;return;
 }
 $10 = $__cs;
 $11 = $1;
 $12 = ($10>>>0)>($11>>>0);
 if (!($12)) {
  STACKTOP = sp;return;
 }
 $13 = HEAP32[$2>>2]|0;
 $14 = $1;
 $15 = (($13) + ($14<<3)|0);
 __ZNSt3__16vectorIdNS_9allocatorIdEEE17__destruct_at_endEPd($2,$15);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE2atEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($2)|0);
 $5 = ($3>>>0)>=($4>>>0);
 if ($5) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv($2);
  // unreachable;
 } else {
  $6 = $1;
  $7 = HEAP32[$2>>2]|0;
  $8 = (($7) + ($6<<3)|0);
  STACKTOP = sp;return ($8|0);
 }
 return (0)|0;
}
function __ZNKSt3__16vectorIdNS_9allocatorIdEEE2atEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($2)|0);
 $5 = ($3>>>0)>=($4>>>0);
 if ($5) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv($2);
  // unreachable;
 } else {
  $6 = $1;
  $7 = HEAP32[$2>>2]|0;
  $8 = (($7) + ($6<<3)|0);
  STACKTOP = sp;return ($8|0);
 }
 return (0)|0;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE8__appendEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__v = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__v = sp + 8|0;
 $0 = $this;
 $1 = $__n;
 $4 = $0;
 $5 = (__ZNSt3__113__vector_baseIdNS_9allocatorIdEEE9__end_capEv($4)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($4)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = $6;
 $10 = $8;
 $11 = (($9) - ($10))|0;
 $12 = (($11|0) / 8)&-1;
 $13 = $1;
 $14 = ($12>>>0)>=($13>>>0);
 if ($14) {
  $15 = $1;
  __ZNSt3__16vectorIdNS_9allocatorIdEEE18__construct_at_endEj($4,$15);
  STACKTOP = sp;return;
 }
 $16 = (__ZNSt3__113__vector_baseIdNS_9allocatorIdEEE7__allocEv($4)|0);
 $__a = $16;
 $17 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($4)|0);
 $18 = $1;
 $19 = (($17) + ($18))|0;
 $20 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE11__recommendEj($4,$19)|0);
 $21 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($4)|0);
 $22 = $__a;
 __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEEC2EjjS3_($__v,$20,$21,$22);
 $23 = $1;
 __THREW__ = 0;
 invoke_vii(387,($__v|0),($23|0));
 $24 = __THREW__; __THREW__ = 0;
 $25 = $24&1;
 if (!($25)) {
  __THREW__ = 0;
  invoke_vii(388,($4|0),($__v|0));
  $26 = __THREW__; __THREW__ = 0;
  $27 = $26&1;
  if (!($27)) {
   __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEED2Ev($__v);
   STACKTOP = sp;return;
  }
 }
 $28 = ___cxa_find_matching_catch()|0;
 $29 = tempRet0;
 $2 = $28;
 $3 = $29;
 __THREW__ = 0;
 invoke_vi(389,($__v|0));
 $30 = __THREW__; __THREW__ = 0;
 $31 = $30&1;
 if ($31) {
  $34 = ___cxa_find_matching_catch(0|0)|0;
  $35 = tempRet0;
  ___clang_call_terminate($34);
  // unreachable;
 } else {
  $32 = $2;
  $33 = $3;
  ___resumeException($32|0);
  // unreachable;
 }
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE17__destruct_at_endEPd($this,$__new_last) {
 $this = $this|0;
 $__new_last = $__new_last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__old_size = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__new_last;
 $4 = $0;
 $5 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($4)|0);
 $__old_size = $5;
 $6 = $1;
 __ZNSt3__113__vector_baseIdNS_9allocatorIdEEE17__destruct_at_endEPd($4,$6);
 $7 = $__old_size;
 __THREW__ = 0;
 invoke_vii(390,($4|0),($7|0));
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if ($9) {
  $10 = ___cxa_find_matching_catch()|0;
  $11 = tempRet0;
  $2 = $10;
  $3 = $11;
  $12 = $2;
  ___cxa_call_unexpected(($12|0));
  // unreachable;
 } else {
  STACKTOP = sp;return;
 }
}
function __ZNSt3__113__vector_baseIdNS_9allocatorIdEEE17__destruct_at_endEPd($this,$__new_last) {
 $this = $this|0;
 $__new_last = $__new_last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__new_last;
 $4 = $0;
 while(1) {
  $5 = $1;
  $6 = ((($4)) + 4|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = ($5|0)!=($7|0);
  if (!($8)) {
   label = 5;
   break;
  }
  $9 = (__ZNSt3__113__vector_baseIdNS_9allocatorIdEEE7__allocEv($4)|0);
  $10 = ((($4)) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ((($11)) + -8|0);
  HEAP32[$10>>2] = $12;
  $13 = (__ZNSt3__116__to_raw_pointerIdEEPT_S2_($12)|0);
  __THREW__ = 0;
  invoke_vii(391,($9|0),($13|0));
  $14 = __THREW__; __THREW__ = 0;
  $15 = $14&1;
  if ($15) {
   label = 4;
   break;
  }
 }
 if ((label|0) == 4) {
  $16 = ___cxa_find_matching_catch()|0;
  $17 = tempRet0;
  $2 = $16;
  $3 = $17;
  $18 = $2;
  ___cxa_call_unexpected(($18|0));
  // unreachable;
 }
 else if ((label|0) == 5) {
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__16vectorIdNS_9allocatorIdEEE17__annotate_shrinkEj($this,$__old_size) {
 $this = $this|0;
 $__old_size = $__old_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__old_size;
 $2 = $0;
 $3 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4dataEv($2)|0);
 $4 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4dataEv($2)|0);
 $5 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE8capacityEv($2)|0);
 $6 = (($4) + ($5<<3)|0);
 $7 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4dataEv($2)|0);
 $8 = $1;
 $9 = (($7) + ($8<<3)|0);
 $10 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4dataEv($2)|0);
 $11 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($2)|0);
 $12 = (($10) + ($11<<3)|0);
 __ZNKSt3__16vectorIdNS_9allocatorIdEEE31__annotate_contiguous_containerEPKvS5_S5_S5_($2,$3,$6,$9,$12);
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorIdNS_9allocatorIdEEE4dataEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (__ZNSt3__116__to_raw_pointerIdEEPT_S2_($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__16vectorIdNS_9allocatorIdEEE8capacityEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__113__vector_baseIdNS_9allocatorIdEEE8capacityEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNKSt3__16vectorIdNS_9allocatorIdEEE31__annotate_contiguous_containerEPKvS5_S5_S5_($this,$__beg,$__end,$__old_mid,$__new_mid) {
 $this = $this|0;
 $__beg = $__beg|0;
 $__end = $__end|0;
 $__old_mid = $__old_mid|0;
 $__new_mid = $__new_mid|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__beg;
 $2 = $__end;
 $3 = $__old_mid;
 $4 = $__new_mid;
 STACKTOP = sp;return;
}
function __ZNKSt3__113__vector_baseIdNS_9allocatorIdEEE8capacityEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__113__vector_baseIdNS_9allocatorIdEEE9__end_capEv($1)|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$1>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 8)&-1;
 STACKTOP = sp;return ($8|0);
}
function __ZNKSt3__113__vector_baseIdNS_9allocatorIdEEE9__end_capEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 8|0);
 $3 = (__ZNKSt3__117__compressed_pairIPdNS_9allocatorIdEEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__117__compressed_pairIPdNS_9allocatorIdEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__128__libcpp_compressed_pair_impIPdNS_9allocatorIdEELj2EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNKSt3__128__libcpp_compressed_pair_impIPdNS_9allocatorIdEELj2EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__116__to_raw_pointerIdEEPT_S2_($__p) {
 $__p = $__p|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__p;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__113__vector_baseIdNS_9allocatorIdEEE7__allocEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 8|0);
 $3 = (__ZNSt3__117__compressed_pairIPdNS_9allocatorIdEEE6secondEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIdEEE7destroyIdEEvRS2_PT_($__a,$__p) {
 $__a = $__a|0;
 $__p = $__p|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__a;
 $1 = $__p;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy>>0]=HEAP8[$2>>0]|0;
 __ZNSt3__116allocator_traitsINS_9allocatorIdEEE9__destroyIdEEvNS_17integral_constantIbLb0EEERS2_PT_($$byval_copy,$3,$4);
 STACKTOP = sp;return;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIdEEE9__destroyIdEEvNS_17integral_constantIbLb0EEERS2_PT_($0,$1,$__p) {
 $0 = $0|0;
 $1 = $1|0;
 $__p = $__p|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = $1;
 $3 = $__p;
 STACKTOP = sp;return;
}
function __ZNSt3__117__compressed_pairIPdNS_9allocatorIdEEE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPdNS_9allocatorIdEELj2EE6secondEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPdNS_9allocatorIdEELj2EE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__113__vector_baseIdNS_9allocatorIdEEE9__end_capEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 8|0);
 $3 = (__ZNSt3__117__compressed_pairIPdNS_9allocatorIdEEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__annotator = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__annotator = sp + 12|0;
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = (__ZNSt3__113__vector_baseIdNS_9allocatorIdEEE7__allocEv($2)|0);
 $__a = $3;
 while(1) {
  __ZNSt3__16vectorIdNS_9allocatorIdEEE24__RAII_IncreaseAnnotatorC2ERKS3_j($__annotator,$2,1);
  $4 = $__a;
  $5 = ((($2)) + 4|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (__ZNSt3__116__to_raw_pointerIdEEPT_S2_($6)|0);
  __ZNSt3__116allocator_traitsINS_9allocatorIdEEE9constructIdEEvRS2_PT_($4,$7);
  $8 = ((($2)) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = ((($9)) + 8|0);
  HEAP32[$8>>2] = $10;
  $11 = $1;
  $12 = (($11) + -1)|0;
  $1 = $12;
  __ZNSt3__16vectorIdNS_9allocatorIdEEE24__RAII_IncreaseAnnotator6__doneEv($__annotator);
  $13 = $1;
  $14 = ($13>>>0)>(0);
  if (!($14)) {
   break;
  }
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorIdNS_9allocatorIdEEE11__recommendEj($this,$__new_size) {
 $this = $this|0;
 $__new_size = $__new_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__cap = 0, $__ms = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = sp + 12|0;
 $3 = sp;
 $1 = $this;
 HEAP32[$2>>2] = $__new_size;
 $4 = $1;
 $5 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE8max_sizeEv($4)|0);
 $__ms = $5;
 $6 = HEAP32[$2>>2]|0;
 $7 = $__ms;
 $8 = ($6>>>0)>($7>>>0);
 if ($8) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($4);
  // unreachable;
 }
 $9 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE8capacityEv($4)|0);
 $__cap = $9;
 $10 = $__cap;
 $11 = $__ms;
 $12 = (($11>>>0) / 2)&-1;
 $13 = ($10>>>0)>=($12>>>0);
 if ($13) {
  $14 = $__ms;
  $0 = $14;
  $19 = $0;
  STACKTOP = sp;return ($19|0);
 } else {
  $15 = $__cap;
  $16 = $15<<1;
  HEAP32[$3>>2] = $16;
  $17 = (__ZNSt3__13maxIjEERKT_S3_S3_($3,$2)|0);
  $18 = HEAP32[$17>>2]|0;
  $0 = $18;
  $19 = $0;
  STACKTOP = sp;return ($19|0);
 }
 return (0)|0;
}
function __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEEC2EjjS3_($this,$__cap,$__start,$__a) {
 $this = $this|0;
 $__cap = $__cap|0;
 $__start = $__start|0;
 $__a = $__a|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $4 = sp + 4|0;
 $5 = sp;
 $0 = $this;
 $1 = $__cap;
 $2 = $__start;
 $3 = $__a;
 $6 = $0;
 $7 = ((($6)) + 12|0);
 $8 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$4>>2] = $8;
 $9 = (__ZNKSt3__19nullptr_tcvPT_IdEEv($4)|0);
 $10 = $3;
 __ZNSt3__117__compressed_pairIPdRNS_9allocatorIdEEEC2ES1_S4_($7,$9,$10);
 $11 = $1;
 $12 = ($11|0)!=(0);
 if ($12) {
  $13 = (__ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE7__allocEv($6)|0);
  $14 = $1;
  $15 = (__ZNSt3__116allocator_traitsINS_9allocatorIdEEE8allocateERS2_j($13,$14)|0);
  $18 = $15;
 } else {
  $16 = (__ZNSt3__115__get_nullptr_tEv()|0);
  HEAP32[$5>>2] = $16;
  $17 = (__ZNKSt3__19nullptr_tcvPT_IdEEv($5)|0);
  $18 = $17;
 }
 HEAP32[$6>>2] = $18;
 $19 = HEAP32[$6>>2]|0;
 $20 = $2;
 $21 = (($19) + ($20<<3)|0);
 $22 = ((($6)) + 8|0);
 HEAP32[$22>>2] = $21;
 $23 = ((($6)) + 4|0);
 HEAP32[$23>>2] = $21;
 $24 = HEAP32[$6>>2]|0;
 $25 = $1;
 $26 = (($24) + ($25<<3)|0);
 $27 = (__ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE9__end_capEv($6)|0);
 HEAP32[$27>>2] = $26;
 STACKTOP = sp;return;
}
function __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = (__ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE7__allocEv($2)|0);
 $__a = $3;
 while(1) {
  $4 = $__a;
  $5 = ((($2)) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (__ZNSt3__116__to_raw_pointerIdEEPT_S2_($6)|0);
  __ZNSt3__116allocator_traitsINS_9allocatorIdEEE9constructIdEEvRS2_PT_($4,$7);
  $8 = ((($2)) + 8|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = ((($9)) + 8|0);
  HEAP32[$8>>2] = $10;
  $11 = $1;
  $12 = (($11) + -1)|0;
  $1 = $12;
  $13 = $1;
  $14 = ($13>>>0)>(0);
  if (!($14)) {
   break;
  }
 }
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE26__swap_out_circular_bufferERNS_14__split_bufferIdRS2_EE($this,$__v) {
 $this = $this|0;
 $__v = $__v|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__v;
 $2 = $0;
 __ZNKSt3__16vectorIdNS_9allocatorIdEEE17__annotate_deleteEv($2);
 $3 = (__ZNSt3__113__vector_baseIdNS_9allocatorIdEEE7__allocEv($2)|0);
 $4 = HEAP32[$2>>2]|0;
 $5 = ((($2)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $1;
 $8 = ((($7)) + 4|0);
 __ZNSt3__116allocator_traitsINS_9allocatorIdEEE20__construct_backwardIdEENS_9enable_ifIXaaoosr7is_sameIS2_NS1_IT_EEEE5valuentsr15__has_constructIS2_PS6_S6_EE5valuesr31is_trivially_move_constructibleIS6_EE5valueEvE4typeERS2_S8_S8_RS8_($3,$4,$6,$8);
 $9 = $1;
 $10 = ((($9)) + 4|0);
 __ZNSt3__14swapIPdEEvRT_S3_($2,$10);
 $11 = ((($2)) + 4|0);
 $12 = $1;
 $13 = ((($12)) + 8|0);
 __ZNSt3__14swapIPdEEvRT_S3_($11,$13);
 $14 = (__ZNSt3__113__vector_baseIdNS_9allocatorIdEEE9__end_capEv($2)|0);
 $15 = $1;
 $16 = (__ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE9__end_capEv($15)|0);
 __ZNSt3__14swapIPdEEvRT_S3_($14,$16);
 $17 = $1;
 $18 = ((($17)) + 4|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = $1;
 HEAP32[$20>>2] = $19;
 $21 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($2)|0);
 __ZNKSt3__16vectorIdNS_9allocatorIdEEE14__annotate_newEj($2,$21);
 __ZNSt3__16vectorIdNS_9allocatorIdEEE26__invalidate_all_iteratorsEv($2);
 STACKTOP = sp;return;
}
function __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE5clearEv($1);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  STACKTOP = sp;return;
 }
 $4 = (__ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE7__allocEv($1)|0);
 $5 = HEAP32[$1>>2]|0;
 $6 = (__ZNKSt3__114__split_bufferIdRNS_9allocatorIdEEE8capacityEv($1)|0);
 __ZNSt3__116allocator_traitsINS_9allocatorIdEEE10deallocateERS2_Pdj($4,$5,$6);
 STACKTOP = sp;return;
}
function __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE5clearEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE17__destruct_at_endEPd($1,$3);
 STACKTOP = sp;return;
}
function __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE7__allocEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 12|0);
 $3 = (__ZNSt3__117__compressed_pairIPdRNS_9allocatorIdEEE6secondEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__114__split_bufferIdRNS_9allocatorIdEEE8capacityEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__114__split_bufferIdRNS_9allocatorIdEEE9__end_capEv($1)|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$1>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 8)&-1;
 STACKTOP = sp;return ($8|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIdEEE10deallocateERS2_Pdj($__a,$__p,$__n) {
 $__a = $__a|0;
 $__p = $__p|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__p;
 $2 = $__n;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 __ZNSt3__19allocatorIdE10deallocateEPdj($3,$4,$5);
 STACKTOP = sp;return;
}
function __ZNSt3__19allocatorIdE10deallocateEPdj($this,$__p,$0) {
 $this = $this|0;
 $__p = $__p|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__p;
 $3 = $0;
 $6 = $2;
 __THREW__ = 0;
 invoke_vi(365,($6|0));
 $7 = __THREW__; __THREW__ = 0;
 $8 = $7&1;
 if ($8) {
  $9 = ___cxa_find_matching_catch()|0;
  $10 = tempRet0;
  $4 = $9;
  $5 = $10;
  $11 = $4;
  ___cxa_call_unexpected(($11|0));
  // unreachable;
 } else {
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__114__split_bufferIdRNS_9allocatorIdEEE9__end_capEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 12|0);
 $3 = (__ZNKSt3__117__compressed_pairIPdRNS_9allocatorIdEEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__117__compressed_pairIPdRNS_9allocatorIdEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__128__libcpp_compressed_pair_impIPdRNS_9allocatorIdEELj0EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNKSt3__128__libcpp_compressed_pair_impIPdRNS_9allocatorIdEELj0EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__117__compressed_pairIPdRNS_9allocatorIdEEE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPdRNS_9allocatorIdEELj0EE6secondEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPdRNS_9allocatorIdEELj0EE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE17__destruct_at_endEPd($this,$__new_last) {
 $this = $this|0;
 $__new_last = $__new_last|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $this;
 $1 = $__new_last;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy>>0]=HEAP8[$2>>0]|0;
 __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE17__destruct_at_endEPdNS_17integral_constantIbLb0EEE($3,$4,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE17__destruct_at_endEPdNS_17integral_constantIbLb0EEE($this,$__new_last,$0) {
 $this = $this|0;
 $__new_last = $__new_last|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__new_last;
 $5 = $1;
 while(1) {
  $6 = $2;
  $7 = ((($5)) + 8|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = ($6|0)!=($8|0);
  if (!($9)) {
   label = 5;
   break;
  }
  $10 = (__ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE7__allocEv($5)|0);
  $11 = ((($5)) + 8|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = ((($12)) + -8|0);
  HEAP32[$11>>2] = $13;
  $14 = (__ZNSt3__116__to_raw_pointerIdEEPT_S2_($13)|0);
  __THREW__ = 0;
  invoke_vii(391,($10|0),($14|0));
  $15 = __THREW__; __THREW__ = 0;
  $16 = $15&1;
  if ($16) {
   label = 4;
   break;
  }
 }
 if ((label|0) == 4) {
  $17 = ___cxa_find_matching_catch()|0;
  $18 = tempRet0;
  $3 = $17;
  $4 = $18;
  $19 = $3;
  ___cxa_call_unexpected(($19|0));
  // unreachable;
 }
 else if ((label|0) == 5) {
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__16vectorIdNS_9allocatorIdEEE17__annotate_deleteEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4dataEv($1)|0);
 $3 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4dataEv($1)|0);
 $4 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE8capacityEv($1)|0);
 $5 = (($3) + ($4<<3)|0);
 $6 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4dataEv($1)|0);
 $7 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($1)|0);
 $8 = (($6) + ($7<<3)|0);
 $9 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4dataEv($1)|0);
 $10 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE8capacityEv($1)|0);
 $11 = (($9) + ($10<<3)|0);
 __ZNKSt3__16vectorIdNS_9allocatorIdEEE31__annotate_contiguous_containerEPKvS5_S5_S5_($1,$2,$5,$8,$11);
 STACKTOP = sp;return;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIdEEE20__construct_backwardIdEENS_9enable_ifIXaaoosr7is_sameIS2_NS1_IT_EEEE5valuentsr15__has_constructIS2_PS6_S6_EE5valuesr31is_trivially_move_constructibleIS6_EE5valueEvE4typeERS2_S8_S8_RS8_($__a,$__begin1,$__end1,$__end2) {
 $__a = $__a|0;
 $__begin1 = $__begin1|0;
 $__end1 = $__end1|0;
 $__end2 = $__end2|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $_Np = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__begin1;
 $2 = $__end1;
 $3 = $__end2;
 $4 = $2;
 $5 = $1;
 $6 = $4;
 $7 = $5;
 $8 = (($6) - ($7))|0;
 $9 = (($8|0) / 8)&-1;
 $_Np = $9;
 $10 = $_Np;
 $11 = $3;
 $12 = HEAP32[$11>>2]|0;
 $13 = (0 - ($10))|0;
 $14 = (($12) + ($13<<3)|0);
 HEAP32[$11>>2] = $14;
 $15 = $3;
 $16 = HEAP32[$15>>2]|0;
 $17 = $1;
 $18 = $_Np;
 $19 = $18<<3;
 _memcpy(($16|0),($17|0),($19|0))|0;
 STACKTOP = sp;return;
}
function __ZNSt3__14swapIPdEEvRT_S3_($__x,$__y) {
 $__x = $__x|0;
 $__y = $__y|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__t = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__t = sp;
 $0 = $__x;
 $1 = $__y;
 $2 = $0;
 $3 = (__ZNSt3__14moveIPdEERT_S3_($2)|0);
 $4 = HEAP32[$3>>2]|0;
 HEAP32[$__t>>2] = $4;
 $5 = $1;
 $6 = (__ZNSt3__14moveIPdEERT_S3_($5)|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = $0;
 HEAP32[$8>>2] = $7;
 $9 = (__ZNSt3__14moveIPdEERT_S3_($__t)|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = $1;
 HEAP32[$11>>2] = $10;
 STACKTOP = sp;return;
}
function __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE9__end_capEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 12|0);
 $3 = (__ZNSt3__117__compressed_pairIPdRNS_9allocatorIdEEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__16vectorIdNS_9allocatorIdEEE14__annotate_newEj($this,$__current_size) {
 $this = $this|0;
 $__current_size = $__current_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__current_size;
 $2 = $0;
 $3 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4dataEv($2)|0);
 $4 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4dataEv($2)|0);
 $5 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE8capacityEv($2)|0);
 $6 = (($4) + ($5<<3)|0);
 $7 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4dataEv($2)|0);
 $8 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE8capacityEv($2)|0);
 $9 = (($7) + ($8<<3)|0);
 $10 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4dataEv($2)|0);
 $11 = $1;
 $12 = (($10) + ($11<<3)|0);
 __ZNKSt3__16vectorIdNS_9allocatorIdEEE31__annotate_contiguous_containerEPKvS5_S5_S5_($2,$3,$6,$9,$12);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE26__invalidate_all_iteratorsEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZNSt3__117__compressed_pairIPdRNS_9allocatorIdEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPdRNS_9allocatorIdEELj0EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPdRNS_9allocatorIdEELj0EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__14moveIPdEERT_S3_($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIdEEE9constructIdEEvRS2_PT_($__a,$__p) {
 $__a = $__a|0;
 $__p = $__p|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__p;
 $2 = $1;
 HEAPF64[$2>>3] = 0.0;
 STACKTOP = sp;return;
}
function __ZNKSt3__19nullptr_tcvPT_IdEEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return (0|0);
}
function __ZNSt3__117__compressed_pairIPdRNS_9allocatorIdEEEC2ES1_S4_($this,$__t1,$__t2) {
 $this = $this|0;
 $__t1 = $__t1|0;
 $__t2 = $__t2|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 4|0;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $__t2;
 $3 = $0;
 $4 = (__ZNSt3__17forwardIPdEERT_RNS_16remove_referenceIS2_E4typeE($1)|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $2;
 $7 = (__ZNSt3__17forwardIRNS_9allocatorIdEEEERT_RNS_16remove_referenceIS4_E4typeE($6)|0);
 __ZNSt3__128__libcpp_compressed_pair_impIPdRNS_9allocatorIdEELj0EEC2ES1_S4_($3,$5,$7);
 STACKTOP = sp;return;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIdEEE8allocateERS2_j($__a,$__n) {
 $__a = $__a|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = (__ZNSt3__19allocatorIdE8allocateEjPKv($2,$3,0)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNSt3__19allocatorIdE8allocateEjPKv($this,$__n,$0) {
 $this = $this|0;
 $__n = $__n|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__n;
 $3 = $0;
 $4 = $2;
 $5 = $4<<3;
 $6 = (__ZNSt3__110__allocateEj($5)|0);
 STACKTOP = sp;return ($6|0);
}
function __ZNSt3__17forwardIPdEERT_RNS_16remove_referenceIS2_E4typeE($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__17forwardIRNS_9allocatorIdEEEERT_RNS_16remove_referenceIS4_E4typeE($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPdRNS_9allocatorIdEELj0EEC2ES1_S4_($this,$__t1,$__t2) {
 $this = $this|0;
 $__t1 = $__t1|0;
 $__t2 = $__t2|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 4|0;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $__t2;
 $3 = $0;
 $4 = (__ZNSt3__17forwardIPdEERT_RNS_16remove_referenceIS2_E4typeE($1)|0);
 $5 = HEAP32[$4>>2]|0;
 HEAP32[$3>>2] = $5;
 $6 = ((($3)) + 4|0);
 $7 = $2;
 $8 = (__ZNSt3__17forwardIRNS_9allocatorIdEEEERT_RNS_16remove_referenceIS4_E4typeE($7)|0);
 HEAP32[$6>>2] = $8;
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorIdNS_9allocatorIdEEE8max_sizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 12|0;
 $2 = sp + 8|0;
 $0 = $this;
 $5 = $0;
 $6 = (__ZNKSt3__113__vector_baseIdNS_9allocatorIdEEE7__allocEv($5)|0);
 $7 = (__ZNSt3__116allocator_traitsINS_9allocatorIdEEE8max_sizeERKS2_($6)|0);
 HEAP32[$1>>2] = $7;
 $8 = (__ZNSt3__114numeric_limitsIjE3maxEv()|0);
 $9 = (($8>>>0) / 2)&-1;
 HEAP32[$2>>2] = $9;
 __THREW__ = 0;
 $10 = (invoke_iii(382,($1|0),($2|0))|0);
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 if ($12) {
  $14 = ___cxa_find_matching_catch()|0;
  $15 = tempRet0;
  $3 = $14;
  $4 = $15;
  $16 = $3;
  ___cxa_call_unexpected(($16|0));
  // unreachable;
 } else {
  $13 = HEAP32[$10>>2]|0;
  STACKTOP = sp;return ($13|0);
 }
 return (0)|0;
}
function __ZNKSt3__113__vector_baseIdNS_9allocatorIdEEE7__allocEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 8|0);
 $3 = (__ZNKSt3__117__compressed_pairIPdNS_9allocatorIdEEE6secondEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIdEEE8max_sizeERKS2_($__a) {
 $__a = $__a|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 13|0;
 $1 = sp + 12|0;
 $0 = $__a;
 $4 = $0;
 __THREW__ = 0;
 ;HEAP8[$$byval_copy>>0]=HEAP8[$1>>0]|0;
 $5 = (invoke_iii(392,($$byval_copy|0),($4|0))|0);
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if ($7) {
  $8 = ___cxa_find_matching_catch()|0;
  $9 = tempRet0;
  $2 = $8;
  $3 = $9;
  $10 = $2;
  ___cxa_call_unexpected(($10|0));
  // unreachable;
 } else {
  STACKTOP = sp;return ($5|0);
 }
 return (0)|0;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIdEEE10__max_sizeENS_17integral_constantIbLb1EEERKS2_($0,$__a) {
 $0 = $0|0;
 $__a = $__a|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $__a;
 $2 = $1;
 $3 = (__ZNKSt3__19allocatorIdE8max_sizeEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__19allocatorIdE8max_sizeEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return 536870911;
}
function __ZNKSt3__117__compressed_pairIPdNS_9allocatorIdEEE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__128__libcpp_compressed_pair_impIPdNS_9allocatorIdEELj2EE6secondEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNKSt3__128__libcpp_compressed_pair_impIPdNS_9allocatorIdEELj2EE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE24__RAII_IncreaseAnnotatorC2ERKS3_j($this,$0,$__n) {
 $this = $this|0;
 $0 = $0|0;
 $__n = $__n|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $__n;
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE24__RAII_IncreaseAnnotator6__doneEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZNSt3__117__compressed_pairIPdNS_9allocatorIdEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPdNS_9allocatorIdEELj2EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPdNS_9allocatorIdEELj2EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE8allocateERS8_j($__a,$__n) {
 $__a = $__a|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = (__ZNSt3__19allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEE8allocateEjPKv($2,$3,0)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNSt3__122__allocator_destructorINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEEC2ERS8_j($this,$__a,$__s) {
 $this = $this|0;
 $__a = $__a|0;
 $__s = $__s|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__a;
 $2 = $__s;
 $3 = $0;
 $4 = $1;
 HEAP32[$3>>2] = $4;
 $5 = ((($3)) + 4|0);
 $6 = $2;
 HEAP32[$5>>2] = $6;
 STACKTOP = sp;return;
}
function __ZNSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEEC2EPS6_SA_($this,$__p,$__d) {
 $this = $this|0;
 $__p = $__p|0;
 $__d = $__d|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 16|0;
 $1 = sp + 8|0;
 $2 = sp;
 $0 = $this;
 HEAP32[$1>>2] = $__p;
 $3 = $0;
 $4 = (__ZNSt3__14moveIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEERT_S9_($1)|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (__ZNSt3__14moveINS_22__allocator_destructorINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEEEEERT_SC_($__d)|0);
 ;HEAP32[$2>>2]=HEAP32[$6>>2]|0;HEAP32[$2+4>>2]=HEAP32[$6+4>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZNSt3__117__compressed_pairIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEEC2ES7_SB_($3,$5,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNKSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEEptEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__117__compressed_pairIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE5firstEv($1)|0);
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE9constructIS5_S5_EEvRS8_PT_RKT0_($__a,$__p,$__a0) {
 $__a = $__a|0;
 $__p = $__p|0;
 $__a0 = $__a0|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__p;
 $2 = $__a0;
 $3 = $1;
 $4 = $2;
 __ZN6ikfast10IkSolutionIdEC2ERKS1_($3,$4);
 STACKTOP = sp;return;
}
function __ZNKSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE3getEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__117__compressed_pairIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE5firstEv($1)|0);
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE20__link_nodes_at_backEPNS_11__list_nodeIS3_PvEESA_($this,$__f,$__l) {
 $this = $this|0;
 $__f = $__f|0;
 $__l = $__l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__f;
 $2 = $__l;
 $3 = $0;
 $4 = (__ZNSt3__116__list_node_baseIN6ikfast10IkSolutionIdEEPvE6__selfEv($3)|0);
 $5 = $2;
 $6 = ((($5)) + 4|0);
 HEAP32[$6>>2] = $4;
 $7 = HEAP32[$3>>2]|0;
 $8 = $1;
 HEAP32[$8>>2] = $7;
 $9 = $1;
 $10 = $1;
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($11)) + 4|0);
 HEAP32[$12>>2] = $9;
 $13 = $2;
 HEAP32[$3>>2] = $13;
 STACKTOP = sp;return;
}
function __ZNSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE7releaseEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $__t = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__117__compressed_pairIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE5firstEv($1)|0);
 $3 = HEAP32[$2>>2]|0;
 $__t = $3;
 $4 = (__ZNSt3__117__compressed_pairIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE5firstEv($1)|0);
 HEAP32[$4>>2] = 0;
 $5 = $__t;
 STACKTOP = sp;return ($5|0);
}
function __ZNSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE5resetEPS6_($1,0);
 STACKTOP = sp;return;
}
function __ZNSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE5resetEPS6_($this,$__p) {
 $this = $this|0;
 $__p = $__p|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__p;
 $2 = $0;
 $3 = (__ZNSt3__117__compressed_pairIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE5firstEv($2)|0);
 $4 = HEAP32[$3>>2]|0;
 $__tmp = $4;
 $5 = $1;
 $6 = (__ZNSt3__117__compressed_pairIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE5firstEv($2)|0);
 HEAP32[$6>>2] = $5;
 $7 = $__tmp;
 $8 = ($7|0)!=(0|0);
 if (!($8)) {
  STACKTOP = sp;return;
 }
 $9 = (__ZNSt3__117__compressed_pairIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE6secondEv($2)|0);
 $10 = $__tmp;
 __ZNSt3__122__allocator_destructorINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEEclEPS7_($9,$10);
 STACKTOP = sp;return;
}
function __ZNSt3__117__compressed_pairIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEELj0EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__117__compressed_pairIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEELj0EE6secondEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__122__allocator_destructorINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEEclEPS7_($this,$__p) {
 $this = $this|0;
 $__p = $__p|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__p;
 $2 = $0;
 $3 = HEAP32[$2>>2]|0;
 $4 = $1;
 $5 = ((($2)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 __ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE10deallocateERS8_PS7_j($3,$4,$6);
 STACKTOP = sp;return;
}
function __ZNSt3__128__libcpp_compressed_pair_impIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEELj0EE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 4|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEELj0EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__116__list_node_baseIN6ikfast10IkSolutionIdEEPvE6__selfEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__114pointer_traitsIPNS_16__list_node_baseIN6ikfast10IkSolutionIdEEPvEEE10pointer_toERS6_($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNKSt3__117__compressed_pairIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__128__libcpp_compressed_pair_impIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEELj0EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNKSt3__128__libcpp_compressed_pair_impIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEELj0EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZN6ikfast10IkSolutionIdEC2ERKS1_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $5 = $1;
 $6 = $2;
 __ZN6ikfast14IkSolutionBaseIdEC2ERKS1_($5,$6);
 $7 = 432;
 HEAP32[$5>>2] = $7;
 $8 = ((($5)) + 4|0);
 $9 = $2;
 $10 = ((($9)) + 4|0);
 __THREW__ = 0;
 invoke_vii(393,($8|0),($10|0));
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 if ($12) {
  $18 = ___cxa_find_matching_catch()|0;
  $19 = tempRet0;
  $3 = $18;
  $4 = $19;
 } else {
  $13 = ((($5)) + 16|0);
  $14 = $2;
  $15 = ((($14)) + 16|0);
  __THREW__ = 0;
  invoke_vii(394,($13|0),($15|0));
  $16 = __THREW__; __THREW__ = 0;
  $17 = $16&1;
  if (!($17)) {
   STACKTOP = sp;return;
  }
  $20 = ___cxa_find_matching_catch()|0;
  $21 = tempRet0;
  $3 = $20;
  $4 = $21;
  __THREW__ = 0;
  invoke_vi(372,($8|0));
  $22 = __THREW__; __THREW__ = 0;
  $23 = $22&1;
  if ($23) {
   $28 = ___cxa_find_matching_catch(0|0)|0;
   $29 = tempRet0;
   ___clang_call_terminate($28);
   // unreachable;
  }
 }
 __THREW__ = 0;
 invoke_vi(15,($5|0));
 $24 = __THREW__; __THREW__ = 0;
 $25 = $24&1;
 if ($25) {
  $28 = ___cxa_find_matching_catch(0|0)|0;
  $29 = tempRet0;
  ___clang_call_terminate($28);
  // unreachable;
 } else {
  $26 = $3;
  $27 = $4;
  ___resumeException($26|0);
  // unreachable;
 }
}
function __ZN6ikfast14IkSolutionBaseIdEC2ERKS1_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = 704;
 HEAP32[$3>>2] = $4;
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2ERKS6_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__n = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = sp + 20|0;
 $0 = $this;
 $1 = $__x;
 $5 = $0;
 $6 = $1;
 $7 = (__ZNKSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE7__allocEv($6)|0);
 __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE37select_on_container_copy_constructionERKS5_($2,$7);
 __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2ERKS5_($5,$2);
 $8 = $1;
 $9 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4sizeEv($8)|0);
 $__n = $9;
 $10 = $__n;
 $11 = ($10>>>0)>(0);
 if (!($11)) {
  STACKTOP = sp;return;
 }
 $12 = $__n;
 __THREW__ = 0;
 invoke_vii(395,($5|0),($12|0));
 $13 = __THREW__; __THREW__ = 0;
 $14 = $13&1;
 if (!($14)) {
  $15 = $1;
  $16 = HEAP32[$15>>2]|0;
  $17 = $1;
  $18 = ((($17)) + 4|0);
  $19 = HEAP32[$18>>2]|0;
  __THREW__ = 0;
  invoke_viii(396,($5|0),($16|0),($19|0));
  $20 = __THREW__; __THREW__ = 0;
  $21 = $20&1;
  if (!($21)) {
   STACKTOP = sp;return;
  }
 }
 $22 = ___cxa_find_matching_catch()|0;
 $23 = tempRet0;
 $3 = $22;
 $4 = $23;
 __THREW__ = 0;
 invoke_vi(397,($5|0));
 $24 = __THREW__; __THREW__ = 0;
 $25 = $24&1;
 if ($25) {
  $28 = ___cxa_find_matching_catch(0|0)|0;
  $29 = tempRet0;
  ___clang_call_terminate($28);
  // unreachable;
 } else {
  $26 = $3;
  $27 = $4;
  ___resumeException($26|0);
  // unreachable;
 }
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEEC2ERKS3_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__n = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = sp + 20|0;
 $0 = $this;
 $1 = $__x;
 $5 = $0;
 $6 = $1;
 $7 = (__ZNKSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv($6)|0);
 __ZNSt3__116allocator_traitsINS_9allocatorIiEEE37select_on_container_copy_constructionERKS2_($2,$7);
 __ZNSt3__113__vector_baseIiNS_9allocatorIiEEEC2ERKS2_($5,$2);
 $8 = $1;
 $9 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv($8)|0);
 $__n = $9;
 $10 = $__n;
 $11 = ($10>>>0)>(0);
 if (!($11)) {
  STACKTOP = sp;return;
 }
 $12 = $__n;
 __THREW__ = 0;
 invoke_vii(398,($5|0),($12|0));
 $13 = __THREW__; __THREW__ = 0;
 $14 = $13&1;
 if (!($14)) {
  $15 = $1;
  $16 = HEAP32[$15>>2]|0;
  $17 = $1;
  $18 = ((($17)) + 4|0);
  $19 = HEAP32[$18>>2]|0;
  __THREW__ = 0;
  invoke_viii(399,($5|0),($16|0),($19|0));
  $20 = __THREW__; __THREW__ = 0;
  $21 = $20&1;
  if (!($21)) {
   STACKTOP = sp;return;
  }
 }
 $22 = ___cxa_find_matching_catch()|0;
 $23 = tempRet0;
 $3 = $22;
 $4 = $23;
 __THREW__ = 0;
 invoke_vi(400,($5|0));
 $24 = __THREW__; __THREW__ = 0;
 $25 = $24&1;
 if ($25) {
  $28 = ___cxa_find_matching_catch(0|0)|0;
  $29 = tempRet0;
  ___clang_call_terminate($28);
  // unreachable;
 } else {
  $26 = $3;
  $27 = $4;
  ___resumeException($26|0);
  // unreachable;
 }
}
function __ZNKSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 8|0);
 $3 = (__ZNKSt3__117__compressed_pairIPiNS_9allocatorIiEEE6secondEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIiEEE37select_on_container_copy_constructionERKS2_($agg$result,$__a) {
 $agg$result = $agg$result|0;
 $__a = $__a|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 5|0;
 $1 = sp + 4|0;
 $0 = $__a;
 $2 = $0;
 ;HEAP8[$$byval_copy>>0]=HEAP8[$1>>0]|0;
 __ZNSt3__116allocator_traitsINS_9allocatorIiEEE37select_on_container_copy_constructionENS_17integral_constantIbLb0EEERKS2_($agg$result,$$byval_copy,$2);
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIiNS_9allocatorIiEEEC2ERKS2_($this,$__a) {
 $this = $this|0;
 $__a = $__a|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 21|0;
 $2 = sp + 8|0;
 $3 = sp + 4|0;
 $4 = sp;
 $5 = sp + 20|0;
 $0 = $this;
 $1 = $__a;
 $6 = $0;
 $7 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$2>>2] = $7;
 $8 = (__ZNKSt3__19nullptr_tcvPT_IiEEv($2)|0);
 HEAP32[$6>>2] = $8;
 $9 = ((($6)) + 4|0);
 $10 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$3>>2] = $10;
 $11 = (__ZNKSt3__19nullptr_tcvPT_IiEEv($3)|0);
 HEAP32[$9>>2] = $11;
 $12 = ((($6)) + 8|0);
 $13 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$4>>2] = $13;
 $14 = (__ZNKSt3__19nullptr_tcvPT_IiEEv($4)|0);
 ;HEAP8[$$byval_copy>>0]=HEAP8[$5>>0]|0;
 __ZNSt3__117__compressed_pairIPiNS_9allocatorIiEEEC2ES1_S3_($12,$14,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE8allocateEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE8max_sizeEv($2)|0);
 $5 = ($3>>>0)>($4>>>0);
 if ($5) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($2);
  // unreachable;
 } else {
  $6 = (__ZNSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv($2)|0);
  $7 = $1;
  $8 = (__ZNSt3__116allocator_traitsINS_9allocatorIiEEE8allocateERS2_j($6,$7)|0);
  $9 = ((($2)) + 4|0);
  HEAP32[$9>>2] = $8;
  HEAP32[$2>>2] = $8;
  $10 = HEAP32[$2>>2]|0;
  $11 = $1;
  $12 = (($10) + ($11<<2)|0);
  $13 = (__ZNSt3__113__vector_baseIiNS_9allocatorIiEEE9__end_capEv($2)|0);
  HEAP32[$13>>2] = $12;
  __ZNKSt3__16vectorIiNS_9allocatorIiEEE14__annotate_newEj($2,0);
  STACKTOP = sp;return;
 }
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endIPiEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__annotator = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__annotator = sp + 16|0;
 $0 = $this;
 $1 = $__first;
 $2 = $__last;
 $3 = $0;
 $4 = (__ZNSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv($3)|0);
 $__a = $4;
 while(1) {
  $5 = $1;
  $6 = $2;
  $7 = ($5|0)!=($6|0);
  if (!($7)) {
   break;
  }
  __ZNSt3__16vectorIiNS_9allocatorIiEEE24__RAII_IncreaseAnnotatorC2ERKS3_j($__annotator,$3,1);
  $8 = $__a;
  $9 = ((($3)) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = (__ZNSt3__116__to_raw_pointerIiEEPT_S2_($10)|0);
  $12 = $1;
  __ZNSt3__116allocator_traitsINS_9allocatorIiEEE9constructIiiEEvRS2_PT_RKT0_($8,$11,$12);
  __ZNSt3__16vectorIiNS_9allocatorIiEEE24__RAII_IncreaseAnnotator6__doneEv($__annotator);
  $13 = ((($3)) + 4|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = ((($14)) + 4|0);
  HEAP32[$13>>2] = $15;
  $16 = $1;
  $17 = ((($16)) + 4|0);
  $1 = $17;
 }
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE24__RAII_IncreaseAnnotatorC2ERKS3_j($this,$0,$__n) {
 $this = $this|0;
 $0 = $0|0;
 $__n = $__n|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $__n;
 STACKTOP = sp;return;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIiEEE9constructIiiEEvRS2_PT_RKT0_($__a,$__p,$__a0) {
 $__a = $__a|0;
 $__p = $__p|0;
 $__a0 = $__a0|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__p;
 $2 = $__a0;
 $3 = $1;
 $4 = $2;
 $5 = HEAP32[$4>>2]|0;
 HEAP32[$3>>2] = $5;
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE24__RAII_IncreaseAnnotator6__doneEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorIiNS_9allocatorIiEEE8max_sizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 12|0;
 $2 = sp + 8|0;
 $0 = $this;
 $5 = $0;
 $6 = (__ZNKSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv($5)|0);
 $7 = (__ZNSt3__116allocator_traitsINS_9allocatorIiEEE8max_sizeERKS2_($6)|0);
 HEAP32[$1>>2] = $7;
 $8 = (__ZNSt3__114numeric_limitsIjE3maxEv()|0);
 $9 = (($8>>>0) / 2)&-1;
 HEAP32[$2>>2] = $9;
 __THREW__ = 0;
 $10 = (invoke_iii(382,($1|0),($2|0))|0);
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 if ($12) {
  $14 = ___cxa_find_matching_catch()|0;
  $15 = tempRet0;
  $3 = $14;
  $4 = $15;
  $16 = $3;
  ___cxa_call_unexpected(($16|0));
  // unreachable;
 } else {
  $13 = HEAP32[$10>>2]|0;
  STACKTOP = sp;return ($13|0);
 }
 return (0)|0;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIiEEE8allocateERS2_j($__a,$__n) {
 $__a = $__a|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = (__ZNSt3__19allocatorIiE8allocateEjPKv($2,$3,0)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNSt3__113__vector_baseIiNS_9allocatorIiEEE9__end_capEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 8|0);
 $3 = (__ZNSt3__117__compressed_pairIPiNS_9allocatorIiEEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__16vectorIiNS_9allocatorIiEEE14__annotate_newEj($this,$__current_size) {
 $this = $this|0;
 $__current_size = $__current_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__current_size;
 $2 = $0;
 $3 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4dataEv($2)|0);
 $4 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4dataEv($2)|0);
 $5 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE8capacityEv($2)|0);
 $6 = (($4) + ($5<<2)|0);
 $7 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4dataEv($2)|0);
 $8 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE8capacityEv($2)|0);
 $9 = (($7) + ($8<<2)|0);
 $10 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4dataEv($2)|0);
 $11 = $1;
 $12 = (($10) + ($11<<2)|0);
 __ZNKSt3__16vectorIiNS_9allocatorIiEEE31__annotate_contiguous_containerEPKvS5_S5_S5_($2,$3,$6,$9,$12);
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorIiNS_9allocatorIiEEE4dataEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (__ZNSt3__116__to_raw_pointerIiEEPT_S2_($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__16vectorIiNS_9allocatorIiEEE8capacityEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__113__vector_baseIiNS_9allocatorIiEEE8capacityEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNKSt3__16vectorIiNS_9allocatorIiEEE31__annotate_contiguous_containerEPKvS5_S5_S5_($this,$__beg,$__end,$__old_mid,$__new_mid) {
 $this = $this|0;
 $__beg = $__beg|0;
 $__end = $__end|0;
 $__old_mid = $__old_mid|0;
 $__new_mid = $__new_mid|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__beg;
 $2 = $__end;
 $3 = $__old_mid;
 $4 = $__new_mid;
 STACKTOP = sp;return;
}
function __ZNSt3__117__compressed_pairIPiNS_9allocatorIiEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__19allocatorIiE8allocateEjPKv($this,$__n,$0) {
 $this = $this|0;
 $__n = $__n|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__n;
 $3 = $0;
 $4 = $2;
 $5 = $4<<2;
 $6 = (__ZNSt3__110__allocateEj($5)|0);
 STACKTOP = sp;return ($6|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIiEEE8max_sizeERKS2_($__a) {
 $__a = $__a|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 13|0;
 $1 = sp + 12|0;
 $0 = $__a;
 $4 = $0;
 __THREW__ = 0;
 ;HEAP8[$$byval_copy>>0]=HEAP8[$1>>0]|0;
 $5 = (invoke_iii(401,($$byval_copy|0),($4|0))|0);
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if ($7) {
  $8 = ___cxa_find_matching_catch()|0;
  $9 = tempRet0;
  $2 = $8;
  $3 = $9;
  $10 = $2;
  ___cxa_call_unexpected(($10|0));
  // unreachable;
 } else {
  STACKTOP = sp;return ($5|0);
 }
 return (0)|0;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIiEEE10__max_sizeENS_17integral_constantIbLb1EEERKS2_($0,$__a) {
 $0 = $0|0;
 $__a = $__a|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $__a;
 $2 = $1;
 $3 = (__ZNKSt3__19allocatorIiE8max_sizeEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__19allocatorIiE8max_sizeEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return 1073741823;
}
function __ZNSt3__117__compressed_pairIPiNS_9allocatorIiEEEC2ES1_S3_($this,$__t1,$__t2) {
 $this = $this|0;
 $__t1 = $__t1|0;
 $__t2 = $__t2|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $1 = sp;
 $2 = sp + 8|0;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $3 = $0;
 $4 = (__ZNSt3__17forwardIPiEERT_RNS_16remove_referenceIS2_E4typeE($1)|0);
 $5 = HEAP32[$4>>2]|0;
 (__ZNSt3__17forwardINS_9allocatorIiEEEERT_RNS_16remove_referenceIS3_E4typeE($__t2)|0);
 ;HEAP8[$$byval_copy>>0]=HEAP8[$2>>0]|0;
 __ZNSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EEC2ES1_S3_($3,$5,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNSt3__17forwardIPiEERT_RNS_16remove_referenceIS2_E4typeE($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__17forwardINS_9allocatorIiEEEERT_RNS_16remove_referenceIS3_E4typeE($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EEC2ES1_S3_($this,$__t1,$__t2) {
 $this = $this|0;
 $__t1 = $__t1|0;
 $__t2 = $__t2|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $0;
 (__ZNSt3__17forwardINS_9allocatorIiEEEERT_RNS_16remove_referenceIS3_E4typeE($__t2)|0);
 $3 = (__ZNSt3__17forwardIPiEERT_RNS_16remove_referenceIS2_E4typeE($1)|0);
 $4 = HEAP32[$3>>2]|0;
 HEAP32[$2>>2] = $4;
 STACKTOP = sp;return;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIiEEE37select_on_container_copy_constructionENS_17integral_constantIbLb0EEERKS2_($agg$result,$0,$__a) {
 $agg$result = $agg$result|0;
 $0 = $0|0;
 $__a = $__a|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $__a;
 STACKTOP = sp;return;
}
function __ZNKSt3__117__compressed_pairIPiNS_9allocatorIiEEE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EE6secondEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNKSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE7__allocEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 8|0);
 $3 = (__ZNKSt3__117__compressed_pairIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE6secondEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE37select_on_container_copy_constructionERKS5_($agg$result,$__a) {
 $agg$result = $agg$result|0;
 $__a = $__a|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 5|0;
 $1 = sp + 4|0;
 $0 = $__a;
 $2 = $0;
 ;HEAP8[$$byval_copy>>0]=HEAP8[$1>>0]|0;
 __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE37select_on_container_copy_constructionENS_17integral_constantIbLb0EEERKS5_($agg$result,$$byval_copy,$2);
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2ERKS5_($this,$__a) {
 $this = $this|0;
 $__a = $__a|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 21|0;
 $2 = sp + 8|0;
 $3 = sp + 4|0;
 $4 = sp;
 $5 = sp + 20|0;
 $0 = $this;
 $1 = $__a;
 $6 = $0;
 $7 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$2>>2] = $7;
 $8 = (__ZNKSt3__19nullptr_tcvPT_IN6ikfast23IkSingleDOFSolutionBaseIdEEEEv($2)|0);
 HEAP32[$6>>2] = $8;
 $9 = ((($6)) + 4|0);
 $10 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$3>>2] = $10;
 $11 = (__ZNKSt3__19nullptr_tcvPT_IN6ikfast23IkSingleDOFSolutionBaseIdEEEEv($3)|0);
 HEAP32[$9>>2] = $11;
 $12 = ((($6)) + 8|0);
 $13 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$4>>2] = $13;
 $14 = (__ZNKSt3__19nullptr_tcvPT_IN6ikfast23IkSingleDOFSolutionBaseIdEEEEv($4)|0);
 ;HEAP8[$$byval_copy>>0]=HEAP8[$5>>0]|0;
 __ZNSt3__117__compressed_pairIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2ES4_S6_($12,$14,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8allocateEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8max_sizeEv($2)|0);
 $5 = ($3>>>0)>($4>>>0);
 if ($5) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($2);
  // unreachable;
 } else {
  $6 = (__ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE7__allocEv($2)|0);
  $7 = $1;
  $8 = (__ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE8allocateERS5_j($6,$7)|0);
  $9 = ((($2)) + 4|0);
  HEAP32[$9>>2] = $8;
  HEAP32[$2>>2] = $8;
  $10 = HEAP32[$2>>2]|0;
  $11 = $1;
  $12 = (($10) + (($11*24)|0)|0);
  $13 = (__ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE9__end_capEv($2)|0);
  HEAP32[$13>>2] = $12;
  __ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE14__annotate_newEj($2,0);
  STACKTOP = sp;return;
 }
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__annotator = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__annotator = sp + 16|0;
 $0 = $this;
 $1 = $__first;
 $2 = $__last;
 $3 = $0;
 $4 = (__ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE7__allocEv($3)|0);
 $__a = $4;
 while(1) {
  $5 = $1;
  $6 = $2;
  $7 = ($5|0)!=($6|0);
  if (!($7)) {
   break;
  }
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE24__RAII_IncreaseAnnotatorC2ERKS6_j($__annotator,$3,1);
  $8 = $__a;
  $9 = ((($3)) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = (__ZNSt3__116__to_raw_pointerIN6ikfast23IkSingleDOFSolutionBaseIdEEEEPT_S5_($10)|0);
  $12 = $1;
  __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE9constructIS4_S4_EEvRS5_PT_RKT0_($8,$11,$12);
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE24__RAII_IncreaseAnnotator6__doneEv($__annotator);
  $13 = ((($3)) + 4|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = ((($14)) + 24|0);
  HEAP32[$13>>2] = $15;
  $16 = $1;
  $17 = ((($16)) + 24|0);
  $1 = $17;
 }
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE24__RAII_IncreaseAnnotatorC2ERKS6_j($this,$0,$__n) {
 $this = $this|0;
 $0 = $0|0;
 $__n = $__n|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $__n;
 STACKTOP = sp;return;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE9constructIS4_S4_EEvRS5_PT_RKT0_($__a,$__p,$__a0) {
 $__a = $__a|0;
 $__p = $__p|0;
 $__a0 = $__a0|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__p;
 $2 = $__a0;
 $3 = $1;
 $4 = $2;
 ;HEAP32[$3>>2]=HEAP32[$4>>2]|0;HEAP32[$3+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$3+8>>2]=HEAP32[$4+8>>2]|0;HEAP32[$3+12>>2]=HEAP32[$4+12>>2]|0;HEAP32[$3+16>>2]=HEAP32[$4+16>>2]|0;HEAP32[$3+20>>2]=HEAP32[$4+20>>2]|0;
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE24__RAII_IncreaseAnnotator6__doneEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8max_sizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 12|0;
 $2 = sp + 8|0;
 $0 = $this;
 $5 = $0;
 $6 = (__ZNKSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE7__allocEv($5)|0);
 $7 = (__ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE8max_sizeERKS5_($6)|0);
 HEAP32[$1>>2] = $7;
 $8 = (__ZNSt3__114numeric_limitsIjE3maxEv()|0);
 $9 = (($8>>>0) / 2)&-1;
 HEAP32[$2>>2] = $9;
 __THREW__ = 0;
 $10 = (invoke_iii(382,($1|0),($2|0))|0);
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 if ($12) {
  $14 = ___cxa_find_matching_catch()|0;
  $15 = tempRet0;
  $3 = $14;
  $4 = $15;
  $16 = $3;
  ___cxa_call_unexpected(($16|0));
  // unreachable;
 } else {
  $13 = HEAP32[$10>>2]|0;
  STACKTOP = sp;return ($13|0);
 }
 return (0)|0;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE8allocateERS5_j($__a,$__n) {
 $__a = $__a|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = (__ZNSt3__19allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEE8allocateEjPKv($2,$3,0)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE9__end_capEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 8|0);
 $3 = (__ZNSt3__117__compressed_pairIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE14__annotate_newEj($this,$__current_size) {
 $this = $this|0;
 $__current_size = $__current_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__current_size;
 $2 = $0;
 $3 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4dataEv($2)|0);
 $4 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4dataEv($2)|0);
 $5 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8capacityEv($2)|0);
 $6 = (($4) + (($5*24)|0)|0);
 $7 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4dataEv($2)|0);
 $8 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8capacityEv($2)|0);
 $9 = (($7) + (($8*24)|0)|0);
 $10 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4dataEv($2)|0);
 $11 = $1;
 $12 = (($10) + (($11*24)|0)|0);
 __ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE31__annotate_contiguous_containerEPKvS8_S8_S8_($2,$3,$6,$9,$12);
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4dataEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (__ZNSt3__116__to_raw_pointerIN6ikfast23IkSingleDOFSolutionBaseIdEEEEPT_S5_($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8capacityEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8capacityEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE31__annotate_contiguous_containerEPKvS8_S8_S8_($this,$__beg,$__end,$__old_mid,$__new_mid) {
 $this = $this|0;
 $__beg = $__beg|0;
 $__end = $__end|0;
 $__old_mid = $__old_mid|0;
 $__new_mid = $__new_mid|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__beg;
 $2 = $__end;
 $3 = $__old_mid;
 $4 = $__new_mid;
 STACKTOP = sp;return;
}
function __ZNSt3__117__compressed_pairIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EELj2EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EELj2EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__19allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEE8allocateEjPKv($this,$__n,$0) {
 $this = $this|0;
 $__n = $__n|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__n;
 $3 = $0;
 $4 = $2;
 $5 = ($4*24)|0;
 $6 = (__ZNSt3__110__allocateEj($5)|0);
 STACKTOP = sp;return ($6|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE8max_sizeERKS5_($__a) {
 $__a = $__a|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 13|0;
 $1 = sp + 12|0;
 $0 = $__a;
 $4 = $0;
 __THREW__ = 0;
 ;HEAP8[$$byval_copy>>0]=HEAP8[$1>>0]|0;
 $5 = (invoke_iii(402,($$byval_copy|0),($4|0))|0);
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if ($7) {
  $8 = ___cxa_find_matching_catch()|0;
  $9 = tempRet0;
  $2 = $8;
  $3 = $9;
  $10 = $2;
  ___cxa_call_unexpected(($10|0));
  // unreachable;
 } else {
  STACKTOP = sp;return ($5|0);
 }
 return (0)|0;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE10__max_sizeENS_17integral_constantIbLb1EEERKS5_($0,$__a) {
 $0 = $0|0;
 $__a = $__a|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $__a;
 $2 = $1;
 $3 = (__ZNKSt3__19allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEE8max_sizeEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__19allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEE8max_sizeEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return 178956970;
}
function __ZNSt3__117__compressed_pairIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2ES4_S6_($this,$__t1,$__t2) {
 $this = $this|0;
 $__t1 = $__t1|0;
 $__t2 = $__t2|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $1 = sp;
 $2 = sp + 8|0;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $3 = $0;
 $4 = (__ZNSt3__17forwardIPN6ikfast23IkSingleDOFSolutionBaseIdEEEERT_RNS_16remove_referenceIS5_E4typeE($1)|0);
 $5 = HEAP32[$4>>2]|0;
 (__ZNSt3__17forwardINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEEERT_RNS_16remove_referenceIS6_E4typeE($__t2)|0);
 ;HEAP8[$$byval_copy>>0]=HEAP8[$2>>0]|0;
 __ZNSt3__128__libcpp_compressed_pair_impIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EELj2EEC2ES4_S6_($3,$5,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNSt3__17forwardIPN6ikfast23IkSingleDOFSolutionBaseIdEEEERT_RNS_16remove_referenceIS5_E4typeE($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__17forwardINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEEERT_RNS_16remove_referenceIS6_E4typeE($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EELj2EEC2ES4_S6_($this,$__t1,$__t2) {
 $this = $this|0;
 $__t1 = $__t1|0;
 $__t2 = $__t2|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $0;
 (__ZNSt3__17forwardINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEEERT_RNS_16remove_referenceIS6_E4typeE($__t2)|0);
 $3 = (__ZNSt3__17forwardIPN6ikfast23IkSingleDOFSolutionBaseIdEEEERT_RNS_16remove_referenceIS5_E4typeE($1)|0);
 $4 = HEAP32[$3>>2]|0;
 HEAP32[$2>>2] = $4;
 STACKTOP = sp;return;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE37select_on_container_copy_constructionENS_17integral_constantIbLb0EEERKS5_($agg$result,$0,$__a) {
 $agg$result = $agg$result|0;
 $0 = $0|0;
 $__a = $__a|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $__a;
 STACKTOP = sp;return;
}
function __ZNKSt3__117__compressed_pairIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__128__libcpp_compressed_pair_impIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EELj2EE6secondEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNKSt3__128__libcpp_compressed_pair_impIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EELj2EE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZN6ikfast14IkSolutionBaseIdED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 __THREW__ = 0;
 invoke_vi(15,($3|0));
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if ($5) {
  $6 = ___cxa_find_matching_catch()|0;
  $7 = tempRet0;
  $1 = $6;
  $2 = $7;
  __ZdlPv($3);
  $8 = $1;
  $9 = $2;
  ___resumeException($8|0);
  // unreachable;
 } else {
  __ZdlPv($3);
  STACKTOP = sp;return;
 }
}
function __ZNK6ikfast14IkSolutionBaseIdE11GetSolutionERNSt3__16vectorIdNS2_9allocatorIdEEEERKS6_($this,$solution,$freevalues) {
 $this = $this|0;
 $solution = $solution|0;
 $freevalues = $freevalues|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $solution;
 $2 = $freevalues;
 $3 = $0;
 $4 = $1;
 $5 = HEAP32[$3>>2]|0;
 $6 = ((($5)) + 20|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (FUNCTION_TABLE_ii[$7 & 1023]($3)|0);
 __ZNSt3__16vectorIdNS_9allocatorIdEEE6resizeEj($4,$8);
 $9 = HEAP32[$3>>2]|0;
 $10 = ((($9)) + 8|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = $1;
 $13 = (__ZNSt3__16vectorIdNS_9allocatorIdEEE2atEj($12,0)|0);
 $14 = $2;
 $15 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($14)|0);
 $16 = ($15>>>0)>(0);
 if (!($16)) {
  $19 = 0;
  FUNCTION_TABLE_viii[$11 & 1023]($3,$13,$19);
  STACKTOP = sp;return;
 }
 $17 = $2;
 $18 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE2atEj($17,0)|0);
 $19 = $18;
 FUNCTION_TABLE_viii[$11 & 1023]($3,$13,$19);
 STACKTOP = sp;return;
}
function __ZNSt3__14moveIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEERT_S9_($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__14moveINS_22__allocator_destructorINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEEEEERT_SC_($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__117__compressed_pairIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEEC2ES7_SB_($this,$__t1,$__t2) {
 $this = $this|0;
 $__t1 = $__t1|0;
 $__t2 = $__t2|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 16|0;
 $1 = sp + 8|0;
 $2 = sp;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $3 = $0;
 $4 = (__ZNSt3__17forwardIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEERT_RNS_16remove_referenceIS8_E4typeE($1)|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (__ZNSt3__17forwardINS_22__allocator_destructorINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEEEEERT_RNS_16remove_referenceISB_E4typeE($__t2)|0);
 ;HEAP32[$2>>2]=HEAP32[$6>>2]|0;HEAP32[$2+4>>2]=HEAP32[$6+4>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZNSt3__128__libcpp_compressed_pair_impIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEELj0EEC2ES7_SB_($3,$5,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNSt3__17forwardIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEERT_RNS_16remove_referenceIS8_E4typeE($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__17forwardINS_22__allocator_destructorINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEEEEERT_RNS_16remove_referenceISB_E4typeE($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEELj0EEC2ES7_SB_($this,$__t1,$__t2) {
 $this = $this|0;
 $__t1 = $__t1|0;
 $__t2 = $__t2|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $0;
 $3 = (__ZNSt3__17forwardIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEERT_RNS_16remove_referenceIS8_E4typeE($1)|0);
 $4 = HEAP32[$3>>2]|0;
 HEAP32[$2>>2] = $4;
 $5 = ((($2)) + 4|0);
 $6 = (__ZNSt3__17forwardINS_22__allocator_destructorINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEEEEERT_RNS_16remove_referenceISB_E4typeE($__t2)|0);
 ;HEAP32[$5>>2]=HEAP32[$6>>2]|0;HEAP32[$5+4>>2]=HEAP32[$6+4>>2]|0;
 STACKTOP = sp;return;
}
function __ZNSt3__19allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEE8allocateEjPKv($this,$__n,$0) {
 $this = $this|0;
 $__n = $__n|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__n;
 $3 = $0;
 $4 = $2;
 $5 = ($4*36)|0;
 $6 = (__ZNSt3__110__allocateEj($5)|0);
 STACKTOP = sp;return ($6|0);
}
function __ZN6ikfast14IkSolutionBaseIdEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = 704;
 HEAP32[$1>>2] = $2;
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ev($1);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__113__vector_baseIiNS_9allocatorIiEEEC2Ev($1);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEaSERKS6_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__x;
 $2 = $0;
 $3 = $1;
 $4 = ($2|0)!=($3|0);
 if (!($4)) {
  STACKTOP = sp;return ($2|0);
 }
 $5 = $1;
 __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE19__copy_assign_allocERKS6_($2,$5);
 $6 = $1;
 $7 = HEAP32[$6>>2]|0;
 $8 = $1;
 $9 = ((($8)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_($2,$7,$10);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEEaSERKS3_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__x;
 $2 = $0;
 $3 = $1;
 $4 = ($2|0)!=($3|0);
 if (!($4)) {
  STACKTOP = sp;return ($2|0);
 }
 $5 = $1;
 __ZNSt3__113__vector_baseIiNS_9allocatorIiEEE19__copy_assign_allocERKS3_($2,$5);
 $6 = $1;
 $7 = HEAP32[$6>>2]|0;
 $8 = $1;
 $9 = ((($8)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 __ZNSt3__16vectorIiNS_9allocatorIiEEE6assignIPiEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_($2,$7,$10);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__113__vector_baseIiNS_9allocatorIiEEE19__copy_assign_allocERKS3_($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $this;
 $1 = $__c;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy>>0]=HEAP8[$2>>0]|0;
 __ZNSt3__113__vector_baseIiNS_9allocatorIiEEE19__copy_assign_allocERKS3_NS_17integral_constantIbLb0EEE($3,$4,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE6assignIPiEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__growing = 0, $__m = 0, $__mid = 0, $__new_size = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__mid = sp + 4|0;
 $0 = $this;
 $1 = $__first;
 $2 = $__last;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = (__ZNSt3__18distanceIPiEENS_15iterator_traitsIT_E15difference_typeES3_S3_($4,$5)|0);
 $__new_size = $6;
 $7 = $__new_size;
 $8 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE8capacityEv($3)|0);
 $9 = ($7>>>0)<=($8>>>0);
 if (!($9)) {
  __ZNSt3__16vectorIiNS_9allocatorIiEEE10deallocateEv($3);
  $25 = $__new_size;
  $26 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE11__recommendEj($3,$25)|0);
  __ZNSt3__16vectorIiNS_9allocatorIiEEE8allocateEj($3,$26);
  $27 = $1;
  $28 = $2;
  __ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endIPiEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_($3,$27,$28);
  STACKTOP = sp;return;
 }
 $10 = $2;
 HEAP32[$__mid>>2] = $10;
 $__growing = 0;
 $11 = $__new_size;
 $12 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv($3)|0);
 $13 = ($11>>>0)>($12>>>0);
 if ($13) {
  $__growing = 1;
  $14 = $1;
  HEAP32[$__mid>>2] = $14;
  $15 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv($3)|0);
  __ZNSt3__17advanceIPiEEvRT_NS_15iterator_traitsIS2_E15difference_typeE($__mid,$15);
 }
 $16 = $1;
 $17 = HEAP32[$__mid>>2]|0;
 $18 = HEAP32[$3>>2]|0;
 $19 = (__ZNSt3__14copyIPiS1_EET0_T_S3_S2_($16,$17,$18)|0);
 $__m = $19;
 $20 = $__growing;
 $21 = $20&1;
 if ($21) {
  $22 = HEAP32[$__mid>>2]|0;
  $23 = $2;
  __ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endIPiEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_($3,$22,$23);
  STACKTOP = sp;return;
 } else {
  $24 = $__m;
  __ZNSt3__16vectorIiNS_9allocatorIiEEE17__destruct_at_endEPi($3,$24);
  STACKTOP = sp;return;
 }
}
function __ZNSt3__18distanceIPiEENS_15iterator_traitsIT_E15difference_typeES3_S3_($__first,$__last) {
 $__first = $__first|0;
 $__last = $__last|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__first;
 $1 = $__last;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy>>0]=HEAP8[$2>>0]|0;
 $5 = (__ZNSt3__110__distanceIPiEENS_15iterator_traitsIT_E15difference_typeES3_S3_NS_26random_access_iterator_tagE($3,$4,$$byval_copy)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNSt3__17advanceIPiEEvRT_NS_15iterator_traitsIS2_E15difference_typeE($__i,$__n) {
 $__i = $__i|0;
 $__n = $__n|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__i;
 $1 = $__n;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy>>0]=HEAP8[$2>>0]|0;
 __ZNSt3__19__advanceIPiEEvRT_NS_15iterator_traitsIS2_E15difference_typeENS_26random_access_iterator_tagE($3,$4,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNSt3__14copyIPiS1_EET0_T_S3_S2_($__first,$__last,$__result) {
 $__first = $__first|0;
 $__last = $__last|0;
 $__result = $__result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__first;
 $1 = $__last;
 $2 = $__result;
 $3 = $0;
 $4 = (__ZNSt3__113__unwrap_iterIPiEET_S2_($3)|0);
 $5 = $1;
 $6 = (__ZNSt3__113__unwrap_iterIPiEET_S2_($5)|0);
 $7 = $2;
 $8 = (__ZNSt3__113__unwrap_iterIPiEET_S2_($7)|0);
 $9 = (__ZNSt3__16__copyIiiEENS_9enable_ifIXaasr7is_sameINS_12remove_constIT_E4typeET0_EE5valuesr28is_trivially_copy_assignableIS6_EE5valueEPS6_E4typeEPS3_SA_S7_($4,$6,$8)|0);
 STACKTOP = sp;return ($9|0);
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE17__destruct_at_endEPi($this,$__new_last) {
 $this = $this|0;
 $__new_last = $__new_last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__old_size = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__new_last;
 $4 = $0;
 $5 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv($4)|0);
 $__old_size = $5;
 $6 = $1;
 __ZNSt3__113__vector_baseIiNS_9allocatorIiEEE17__destruct_at_endEPi($4,$6);
 $7 = $__old_size;
 __THREW__ = 0;
 invoke_vii(403,($4|0),($7|0));
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if ($9) {
  $10 = ___cxa_find_matching_catch()|0;
  $11 = tempRet0;
  $2 = $10;
  $3 = $11;
  $12 = $2;
  ___cxa_call_unexpected(($12|0));
  // unreachable;
 } else {
  STACKTOP = sp;return;
 }
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE10deallocateEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $3 = sp + 4|0;
 $4 = sp;
 $0 = $this;
 $5 = $0;
 $6 = HEAP32[$5>>2]|0;
 __THREW__ = 0;
 $7 = (invoke_i(404)|0);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if (!($9)) {
  HEAP32[$3>>2] = $7;
  __THREW__ = 0;
  $10 = (invoke_ii(405,($3|0))|0);
  $11 = __THREW__; __THREW__ = 0;
  $12 = $11&1;
  if (!($12)) {
   $13 = ($6|0)!=($10|0);
   if (!($13)) {
    STACKTOP = sp;return;
   }
   __ZNSt3__16vectorIiNS_9allocatorIiEEE5clearEv($5);
   $14 = (__ZNSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv($5)|0);
   $15 = HEAP32[$5>>2]|0;
   $16 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE8capacityEv($5)|0);
   __ZNSt3__116allocator_traitsINS_9allocatorIiEEE10deallocateERS2_Pij($14,$15,$16);
   __THREW__ = 0;
   $17 = (invoke_i(404)|0);
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   if (!($19)) {
    HEAP32[$4>>2] = $17;
    __THREW__ = 0;
    $20 = (invoke_ii(405,($4|0))|0);
    $21 = __THREW__; __THREW__ = 0;
    $22 = $21&1;
    if (!($22)) {
     $23 = (__ZNSt3__113__vector_baseIiNS_9allocatorIiEEE9__end_capEv($5)|0);
     HEAP32[$23>>2] = $20;
     $24 = ((($5)) + 4|0);
     HEAP32[$24>>2] = $20;
     HEAP32[$5>>2] = $20;
     STACKTOP = sp;return;
    }
   }
  }
 }
 $25 = ___cxa_find_matching_catch()|0;
 $26 = tempRet0;
 $1 = $25;
 $2 = $26;
 $27 = $1;
 ___cxa_call_unexpected(($27|0));
 // unreachable;
}
function __ZNKSt3__16vectorIiNS_9allocatorIiEEE11__recommendEj($this,$__new_size) {
 $this = $this|0;
 $__new_size = $__new_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__cap = 0, $__ms = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = sp + 12|0;
 $3 = sp;
 $1 = $this;
 HEAP32[$2>>2] = $__new_size;
 $4 = $1;
 $5 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE8max_sizeEv($4)|0);
 $__ms = $5;
 $6 = HEAP32[$2>>2]|0;
 $7 = $__ms;
 $8 = ($6>>>0)>($7>>>0);
 if ($8) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($4);
  // unreachable;
 }
 $9 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE8capacityEv($4)|0);
 $__cap = $9;
 $10 = $__cap;
 $11 = $__ms;
 $12 = (($11>>>0) / 2)&-1;
 $13 = ($10>>>0)>=($12>>>0);
 if ($13) {
  $14 = $__ms;
  $0 = $14;
  $19 = $0;
  STACKTOP = sp;return ($19|0);
 } else {
  $15 = $__cap;
  $16 = $15<<1;
  HEAP32[$3>>2] = $16;
  $17 = (__ZNSt3__13maxIjEERKT_S3_S3_($3,$2)|0);
  $18 = HEAP32[$17>>2]|0;
  $0 = $18;
  $19 = $0;
  STACKTOP = sp;return ($19|0);
 }
 return (0)|0;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE5clearEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__old_size = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 $4 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv($3)|0);
 $__old_size = $4;
 __ZNSt3__113__vector_baseIiNS_9allocatorIiEEE5clearEv($3);
 $5 = $__old_size;
 __THREW__ = 0;
 invoke_vii(403,($3|0),($5|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  __THREW__ = 0;
  invoke_vi(406,($3|0));
  $8 = __THREW__; __THREW__ = 0;
  $9 = $8&1;
  if (!($9)) {
   STACKTOP = sp;return;
  }
 }
 $10 = ___cxa_find_matching_catch()|0;
 $11 = tempRet0;
 $1 = $10;
 $2 = $11;
 $12 = $1;
 ___cxa_call_unexpected(($12|0));
 // unreachable;
}
function __ZNKSt3__16vectorIiNS_9allocatorIiEEE17__annotate_shrinkEj($this,$__old_size) {
 $this = $this|0;
 $__old_size = $__old_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__old_size;
 $2 = $0;
 $3 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4dataEv($2)|0);
 $4 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4dataEv($2)|0);
 $5 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE8capacityEv($2)|0);
 $6 = (($4) + ($5<<2)|0);
 $7 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4dataEv($2)|0);
 $8 = $1;
 $9 = (($7) + ($8<<2)|0);
 $10 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4dataEv($2)|0);
 $11 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv($2)|0);
 $12 = (($10) + ($11<<2)|0);
 __ZNKSt3__16vectorIiNS_9allocatorIiEEE31__annotate_contiguous_containerEPKvS5_S5_S5_($2,$3,$6,$9,$12);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE26__invalidate_all_iteratorsEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZNSt3__113__unwrap_iterIPiEET_S2_($__i) {
 $__i = $__i|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__i;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__16__copyIiiEENS_9enable_ifIXaasr7is_sameINS_12remove_constIT_E4typeET0_EE5valuesr28is_trivially_copy_assignableIS6_EE5valueEPS6_E4typeEPS3_SA_S7_($__first,$__last,$__result) {
 $__first = $__first|0;
 $__last = $__last|0;
 $__result = $__result|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__n = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__first;
 $1 = $__last;
 $2 = $__result;
 $3 = $1;
 $4 = $0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 4)&-1;
 $__n = $8;
 $9 = $2;
 $10 = $0;
 $11 = $__n;
 $12 = $11<<2;
 _memmove(($9|0),($10|0),($12|0))|0;
 $13 = $2;
 $14 = $__n;
 $15 = (($13) + ($14<<2)|0);
 STACKTOP = sp;return ($15|0);
}
function __ZNSt3__19__advanceIPiEEvRT_NS_15iterator_traitsIS2_E15difference_typeENS_26random_access_iterator_tagE($__i,$__n,$0) {
 $__i = $__i|0;
 $__n = $__n|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $__i;
 $2 = $__n;
 $3 = $2;
 $4 = $1;
 $5 = HEAP32[$4>>2]|0;
 $6 = (($5) + ($3<<2)|0);
 HEAP32[$4>>2] = $6;
 STACKTOP = sp;return;
}
function __ZNSt3__110__distanceIPiEENS_15iterator_traitsIT_E15difference_typeES3_S3_NS_26random_access_iterator_tagE($__first,$__last,$0) {
 $__first = $__first|0;
 $__last = $__last|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $__first;
 $2 = $__last;
 $3 = $2;
 $4 = $1;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 4)&-1;
 STACKTOP = sp;return ($8|0);
}
function __ZNSt3__113__vector_baseIiNS_9allocatorIiEEE19__copy_assign_allocERKS3_NS_17integral_constantIbLb0EEE($this,$0,$1) {
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = $this;
 $3 = $0;
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE19__copy_assign_allocERKS6_($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $this;
 $1 = $__c;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy>>0]=HEAP8[$2>>0]|0;
 __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE19__copy_assign_allocERKS6_NS_17integral_constantIbLb0EEE($3,$4,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__growing = 0, $__m = 0, $__mid = 0, $__new_size = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__mid = sp + 4|0;
 $0 = $this;
 $1 = $__first;
 $2 = $__last;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = (__ZNSt3__18distanceIPN6ikfast23IkSingleDOFSolutionBaseIdEEEENS_15iterator_traitsIT_E15difference_typeES6_S6_($4,$5)|0);
 $__new_size = $6;
 $7 = $__new_size;
 $8 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8capacityEv($3)|0);
 $9 = ($7>>>0)<=($8>>>0);
 if (!($9)) {
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE10deallocateEv($3);
  $25 = $__new_size;
  $26 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE11__recommendEj($3,$25)|0);
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8allocateEj($3,$26);
  $27 = $1;
  $28 = $2;
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($3,$27,$28);
  STACKTOP = sp;return;
 }
 $10 = $2;
 HEAP32[$__mid>>2] = $10;
 $__growing = 0;
 $11 = $__new_size;
 $12 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4sizeEv($3)|0);
 $13 = ($11>>>0)>($12>>>0);
 if ($13) {
  $__growing = 1;
  $14 = $1;
  HEAP32[$__mid>>2] = $14;
  $15 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4sizeEv($3)|0);
  __ZNSt3__17advanceIPN6ikfast23IkSingleDOFSolutionBaseIdEEEEvRT_NS_15iterator_traitsIS5_E15difference_typeE($__mid,$15);
 }
 $16 = $1;
 $17 = HEAP32[$__mid>>2]|0;
 $18 = HEAP32[$3>>2]|0;
 $19 = (__ZNSt3__14copyIPN6ikfast23IkSingleDOFSolutionBaseIdEES4_EET0_T_S6_S5_($16,$17,$18)|0);
 $__m = $19;
 $20 = $__growing;
 $21 = $20&1;
 if ($21) {
  $22 = HEAP32[$__mid>>2]|0;
  $23 = $2;
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($3,$22,$23);
  STACKTOP = sp;return;
 } else {
  $24 = $__m;
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE17__destruct_at_endEPS3_($3,$24);
  STACKTOP = sp;return;
 }
}
function __ZNSt3__18distanceIPN6ikfast23IkSingleDOFSolutionBaseIdEEEENS_15iterator_traitsIT_E15difference_typeES6_S6_($__first,$__last) {
 $__first = $__first|0;
 $__last = $__last|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__first;
 $1 = $__last;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy>>0]=HEAP8[$2>>0]|0;
 $5 = (__ZNSt3__110__distanceIPN6ikfast23IkSingleDOFSolutionBaseIdEEEENS_15iterator_traitsIT_E15difference_typeES6_S6_NS_26random_access_iterator_tagE($3,$4,$$byval_copy)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNSt3__17advanceIPN6ikfast23IkSingleDOFSolutionBaseIdEEEEvRT_NS_15iterator_traitsIS5_E15difference_typeE($__i,$__n) {
 $__i = $__i|0;
 $__n = $__n|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__i;
 $1 = $__n;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy>>0]=HEAP8[$2>>0]|0;
 __ZNSt3__19__advanceIPN6ikfast23IkSingleDOFSolutionBaseIdEEEEvRT_NS_15iterator_traitsIS5_E15difference_typeENS_26random_access_iterator_tagE($3,$4,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNSt3__14copyIPN6ikfast23IkSingleDOFSolutionBaseIdEES4_EET0_T_S6_S5_($__first,$__last,$__result) {
 $__first = $__first|0;
 $__last = $__last|0;
 $__result = $__result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__first;
 $1 = $__last;
 $2 = $__result;
 $3 = $0;
 $4 = (__ZNSt3__113__unwrap_iterIPN6ikfast23IkSingleDOFSolutionBaseIdEEEET_S5_($3)|0);
 $5 = $1;
 $6 = (__ZNSt3__113__unwrap_iterIPN6ikfast23IkSingleDOFSolutionBaseIdEEEET_S5_($5)|0);
 $7 = $2;
 $8 = (__ZNSt3__113__unwrap_iterIPN6ikfast23IkSingleDOFSolutionBaseIdEEEET_S5_($7)|0);
 $9 = (__ZNSt3__16__copyIN6ikfast23IkSingleDOFSolutionBaseIdEES3_EENS_9enable_ifIXaasr7is_sameINS_12remove_constIT_E4typeET0_EE5valuesr28is_trivially_copy_assignableIS9_EE5valueEPS9_E4typeEPS6_SD_SA_($4,$6,$8)|0);
 STACKTOP = sp;return ($9|0);
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE17__destruct_at_endEPS3_($this,$__new_last) {
 $this = $this|0;
 $__new_last = $__new_last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__old_size = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__new_last;
 $4 = $0;
 $5 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4sizeEv($4)|0);
 $__old_size = $5;
 $6 = $1;
 __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE17__destruct_at_endEPS3_($4,$6);
 $7 = $__old_size;
 __THREW__ = 0;
 invoke_vii(407,($4|0),($7|0));
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if ($9) {
  $10 = ___cxa_find_matching_catch()|0;
  $11 = tempRet0;
  $2 = $10;
  $3 = $11;
  $12 = $2;
  ___cxa_call_unexpected(($12|0));
  // unreachable;
 } else {
  STACKTOP = sp;return;
 }
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE10deallocateEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $3 = sp + 4|0;
 $4 = sp;
 $0 = $this;
 $5 = $0;
 $6 = HEAP32[$5>>2]|0;
 __THREW__ = 0;
 $7 = (invoke_i(404)|0);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if (!($9)) {
  HEAP32[$3>>2] = $7;
  __THREW__ = 0;
  $10 = (invoke_ii(408,($3|0))|0);
  $11 = __THREW__; __THREW__ = 0;
  $12 = $11&1;
  if (!($12)) {
   $13 = ($6|0)!=($10|0);
   if (!($13)) {
    STACKTOP = sp;return;
   }
   __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE5clearEv($5);
   $14 = (__ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE7__allocEv($5)|0);
   $15 = HEAP32[$5>>2]|0;
   $16 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8capacityEv($5)|0);
   __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE10deallocateERS5_PS4_j($14,$15,$16);
   __THREW__ = 0;
   $17 = (invoke_i(404)|0);
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   if (!($19)) {
    HEAP32[$4>>2] = $17;
    __THREW__ = 0;
    $20 = (invoke_ii(408,($4|0))|0);
    $21 = __THREW__; __THREW__ = 0;
    $22 = $21&1;
    if (!($22)) {
     $23 = (__ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE9__end_capEv($5)|0);
     HEAP32[$23>>2] = $20;
     $24 = ((($5)) + 4|0);
     HEAP32[$24>>2] = $20;
     HEAP32[$5>>2] = $20;
     STACKTOP = sp;return;
    }
   }
  }
 }
 $25 = ___cxa_find_matching_catch()|0;
 $26 = tempRet0;
 $1 = $25;
 $2 = $26;
 $27 = $1;
 ___cxa_call_unexpected(($27|0));
 // unreachable;
}
function __ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE11__recommendEj($this,$__new_size) {
 $this = $this|0;
 $__new_size = $__new_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__cap = 0, $__ms = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = sp + 12|0;
 $3 = sp;
 $1 = $this;
 HEAP32[$2>>2] = $__new_size;
 $4 = $1;
 $5 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8max_sizeEv($4)|0);
 $__ms = $5;
 $6 = HEAP32[$2>>2]|0;
 $7 = $__ms;
 $8 = ($6>>>0)>($7>>>0);
 if ($8) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($4);
  // unreachable;
 }
 $9 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8capacityEv($4)|0);
 $__cap = $9;
 $10 = $__cap;
 $11 = $__ms;
 $12 = (($11>>>0) / 2)&-1;
 $13 = ($10>>>0)>=($12>>>0);
 if ($13) {
  $14 = $__ms;
  $0 = $14;
  $19 = $0;
  STACKTOP = sp;return ($19|0);
 } else {
  $15 = $__cap;
  $16 = $15<<1;
  HEAP32[$3>>2] = $16;
  $17 = (__ZNSt3__13maxIjEERKT_S3_S3_($3,$2)|0);
  $18 = HEAP32[$17>>2]|0;
  $0 = $18;
  $19 = $0;
  STACKTOP = sp;return ($19|0);
 }
 return (0)|0;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE5clearEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__old_size = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 $4 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4sizeEv($3)|0);
 $__old_size = $4;
 __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE5clearEv($3);
 $5 = $__old_size;
 __THREW__ = 0;
 invoke_vii(407,($3|0),($5|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  __THREW__ = 0;
  invoke_vi(409,($3|0));
  $8 = __THREW__; __THREW__ = 0;
  $9 = $8&1;
  if (!($9)) {
   STACKTOP = sp;return;
  }
 }
 $10 = ___cxa_find_matching_catch()|0;
 $11 = tempRet0;
 $1 = $10;
 $2 = $11;
 $12 = $1;
 ___cxa_call_unexpected(($12|0));
 // unreachable;
}
function __ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE17__annotate_shrinkEj($this,$__old_size) {
 $this = $this|0;
 $__old_size = $__old_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__old_size;
 $2 = $0;
 $3 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4dataEv($2)|0);
 $4 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4dataEv($2)|0);
 $5 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8capacityEv($2)|0);
 $6 = (($4) + (($5*24)|0)|0);
 $7 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4dataEv($2)|0);
 $8 = $1;
 $9 = (($7) + (($8*24)|0)|0);
 $10 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4dataEv($2)|0);
 $11 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4sizeEv($2)|0);
 $12 = (($10) + (($11*24)|0)|0);
 __ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE31__annotate_contiguous_containerEPKvS8_S8_S8_($2,$3,$6,$9,$12);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE26__invalidate_all_iteratorsEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZNSt3__113__unwrap_iterIPN6ikfast23IkSingleDOFSolutionBaseIdEEEET_S5_($__i) {
 $__i = $__i|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__i;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__16__copyIN6ikfast23IkSingleDOFSolutionBaseIdEES3_EENS_9enable_ifIXaasr7is_sameINS_12remove_constIT_E4typeET0_EE5valuesr28is_trivially_copy_assignableIS9_EE5valueEPS9_E4typeEPS6_SD_SA_($__first,$__last,$__result) {
 $__first = $__first|0;
 $__last = $__last|0;
 $__result = $__result|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__n = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__first;
 $1 = $__last;
 $2 = $__result;
 $3 = $1;
 $4 = $0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 24)&-1;
 $__n = $8;
 $9 = $2;
 $10 = $0;
 $11 = $__n;
 $12 = ($11*24)|0;
 _memmove(($9|0),($10|0),($12|0))|0;
 $13 = $2;
 $14 = $__n;
 $15 = (($13) + (($14*24)|0)|0);
 STACKTOP = sp;return ($15|0);
}
function __ZNSt3__19__advanceIPN6ikfast23IkSingleDOFSolutionBaseIdEEEEvRT_NS_15iterator_traitsIS5_E15difference_typeENS_26random_access_iterator_tagE($__i,$__n,$0) {
 $__i = $__i|0;
 $__n = $__n|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $__i;
 $2 = $__n;
 $3 = $2;
 $4 = $1;
 $5 = HEAP32[$4>>2]|0;
 $6 = (($5) + (($3*24)|0)|0);
 HEAP32[$4>>2] = $6;
 STACKTOP = sp;return;
}
function __ZNSt3__110__distanceIPN6ikfast23IkSingleDOFSolutionBaseIdEEEENS_15iterator_traitsIT_E15difference_typeES6_S6_NS_26random_access_iterator_tagE($__first,$__last,$0) {
 $__first = $__first|0;
 $__last = $__last|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $__first;
 $2 = $__last;
 $3 = $2;
 $4 = $1;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 24)&-1;
 STACKTOP = sp;return ($8|0);
}
function __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE19__copy_assign_allocERKS6_NS_17integral_constantIbLb0EEE($this,$0,$1) {
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = $this;
 $3 = $0;
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIiNS_9allocatorIiEEEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 8|0;
 $2 = sp + 4|0;
 $3 = sp;
 $0 = $this;
 $4 = $0;
 $5 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$1>>2] = $5;
 $6 = (__ZNKSt3__19nullptr_tcvPT_IiEEv($1)|0);
 HEAP32[$4>>2] = $6;
 $7 = ((($4)) + 4|0);
 $8 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$2>>2] = $8;
 $9 = (__ZNKSt3__19nullptr_tcvPT_IiEEv($2)|0);
 HEAP32[$7>>2] = $9;
 $10 = ((($4)) + 8|0);
 $11 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$3>>2] = $11;
 $12 = (__ZNKSt3__19nullptr_tcvPT_IiEEv($3)|0);
 __ZNSt3__117__compressed_pairIPiNS_9allocatorIiEEEC2ES1_($10,$12);
 STACKTOP = sp;return;
}
function __ZNSt3__117__compressed_pairIPiNS_9allocatorIiEEEC2ES1_($this,$__t1) {
 $this = $this|0;
 $__t1 = $__t1|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $0;
 $3 = (__ZNSt3__17forwardIPiEERT_RNS_16remove_referenceIS2_E4typeE($1)|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EEC2ES1_($2,$4);
 STACKTOP = sp;return;
}
function __ZNSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EEC2ES1_($this,$__t1) {
 $this = $this|0;
 $__t1 = $__t1|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $0;
 __ZNSt3__19allocatorIiEC2Ev($2);
 $3 = (__ZNSt3__17forwardIPiEERT_RNS_16remove_referenceIS2_E4typeE($1)|0);
 $4 = HEAP32[$3>>2]|0;
 HEAP32[$2>>2] = $4;
 STACKTOP = sp;return;
}
function __ZNSt3__19allocatorIiEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 8|0;
 $2 = sp + 4|0;
 $3 = sp;
 $0 = $this;
 $4 = $0;
 $5 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$1>>2] = $5;
 $6 = (__ZNKSt3__19nullptr_tcvPT_IN6ikfast23IkSingleDOFSolutionBaseIdEEEEv($1)|0);
 HEAP32[$4>>2] = $6;
 $7 = ((($4)) + 4|0);
 $8 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$2>>2] = $8;
 $9 = (__ZNKSt3__19nullptr_tcvPT_IN6ikfast23IkSingleDOFSolutionBaseIdEEEEv($2)|0);
 HEAP32[$7>>2] = $9;
 $10 = ((($4)) + 8|0);
 $11 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$3>>2] = $11;
 $12 = (__ZNKSt3__19nullptr_tcvPT_IN6ikfast23IkSingleDOFSolutionBaseIdEEEEv($3)|0);
 __ZNSt3__117__compressed_pairIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2ES4_($10,$12);
 STACKTOP = sp;return;
}
function __ZNSt3__117__compressed_pairIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2ES4_($this,$__t1) {
 $this = $this|0;
 $__t1 = $__t1|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $0;
 $3 = (__ZNSt3__17forwardIPN6ikfast23IkSingleDOFSolutionBaseIdEEEERT_RNS_16remove_referenceIS5_E4typeE($1)|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__128__libcpp_compressed_pair_impIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EELj2EEC2ES4_($2,$4);
 STACKTOP = sp;return;
}
function __ZNSt3__128__libcpp_compressed_pair_impIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EELj2EEC2ES4_($this,$__t1) {
 $this = $this|0;
 $__t1 = $__t1|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $0;
 __ZNSt3__19allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEC2Ev($2);
 $3 = (__ZNSt3__17forwardIPN6ikfast23IkSingleDOFSolutionBaseIdEEEERT_RNS_16remove_referenceIS5_E4typeE($1)|0);
 $4 = HEAP32[$3>>2]|0;
 HEAP32[$2>>2] = $4;
 STACKTOP = sp;return;
}
function __ZNSt3__19allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIdNS_9allocatorIdEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$1>>2] = $4;
 $5 = (__ZNKSt3__19nullptr_tcvPT_IdEEv($1)|0);
 $6 = ($3|0)!=($5|0);
 if (!($6)) {
  STACKTOP = sp;return;
 }
 __ZNSt3__113__vector_baseIdNS_9allocatorIdEEE5clearEv($2);
 $7 = (__ZNSt3__113__vector_baseIdNS_9allocatorIdEEE7__allocEv($2)|0);
 $8 = HEAP32[$2>>2]|0;
 $9 = (__ZNKSt3__113__vector_baseIdNS_9allocatorIdEEE8capacityEv($2)|0);
 __ZNSt3__116allocator_traitsINS_9allocatorIdEEE10deallocateERS2_Pdj($7,$8,$9);
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIdNS_9allocatorIdEEE5clearEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 __ZNSt3__113__vector_baseIdNS_9allocatorIdEEE17__destruct_at_endEPd($1,$2);
 STACKTOP = sp;return;
}
function __ZNKSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5beginEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 4|0;
 $1 = $this;
 $2 = $1;
 $3 = (__ZNKSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5beginEv($2)|0);
 HEAP32[$0>>2] = $3;
 $4 = HEAP32[$0>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZNSt3__17advanceINS_21__list_const_iteratorIN6ikfast10IkSolutionIdEEPvEEEEvRT_NS_15iterator_traitsIS7_E15difference_typeE($__i,$__n) {
 $__i = $__i|0;
 $__n = $__n|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__i;
 $1 = $__n;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy>>0]=HEAP8[$2>>0]|0;
 __ZNSt3__19__advanceINS_21__list_const_iteratorIN6ikfast10IkSolutionIdEEPvEEEEvRT_NS_15iterator_traitsIS7_E15difference_typeENS_26bidirectional_iterator_tagE($3,$4,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNKSt3__121__list_const_iteratorIN6ikfast10IkSolutionIdEEPvEdeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 8|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__19__advanceINS_21__list_const_iteratorIN6ikfast10IkSolutionIdEEPvEEEEvRT_NS_15iterator_traitsIS7_E15difference_typeENS_26bidirectional_iterator_tagE($__i,$__n,$0) {
 $__i = $__i|0;
 $__n = $__n|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $__i;
 $2 = $__n;
 $3 = $2;
 $4 = ($3|0)>=(0);
 if ($4) {
  while(1) {
   $5 = $2;
   $6 = ($5|0)>(0);
   if (!($6)) {
    break;
   }
   $7 = $1;
   (__ZNSt3__121__list_const_iteratorIN6ikfast10IkSolutionIdEEPvEppEv($7)|0);
   $8 = $2;
   $9 = (($8) + -1)|0;
   $2 = $9;
  }
  STACKTOP = sp;return;
 } else {
  while(1) {
   $10 = $2;
   $11 = ($10|0)<(0);
   if (!($11)) {
    break;
   }
   $12 = $1;
   (__ZNSt3__121__list_const_iteratorIN6ikfast10IkSolutionIdEEPvEmmEv($12)|0);
   $13 = $2;
   $14 = (($13) + 1)|0;
   $2 = $14;
  }
  STACKTOP = sp;return;
 }
}
function __ZNSt3__121__list_const_iteratorIN6ikfast10IkSolutionIdEEPvEppEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 HEAP32[$1>>2] = $4;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__121__list_const_iteratorIN6ikfast10IkSolutionIdEEPvEmmEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 HEAP32[$1>>2] = $3;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5beginEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 4|0;
 $1 = $this;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__121__list_const_iteratorIN6ikfast10IkSolutionIdEEPvEC2EPNS_11__list_nodeIS3_S4_EE($0,$4);
 $5 = HEAP32[$0>>2]|0;
 STACKTOP = sp;return ($5|0);
}
function __ZNSt3__121__list_const_iteratorIN6ikfast10IkSolutionIdEEPvEC2EPNS_11__list_nodeIS3_S4_EE($this,$__p) {
 $this = $this|0;
 $__p = $__p|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__p;
 $2 = $0;
 $3 = $1;
 HEAP32[$2>>2] = $3;
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIdNS_9allocatorIdEEEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 8|0;
 $2 = sp + 4|0;
 $3 = sp;
 $0 = $this;
 $4 = $0;
 $5 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$1>>2] = $5;
 $6 = (__ZNKSt3__19nullptr_tcvPT_IdEEv($1)|0);
 HEAP32[$4>>2] = $6;
 $7 = ((($4)) + 4|0);
 $8 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$2>>2] = $8;
 $9 = (__ZNKSt3__19nullptr_tcvPT_IdEEv($2)|0);
 HEAP32[$7>>2] = $9;
 $10 = ((($4)) + 8|0);
 $11 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$3>>2] = $11;
 $12 = (__ZNKSt3__19nullptr_tcvPT_IdEEv($3)|0);
 __ZNSt3__117__compressed_pairIPdNS_9allocatorIdEEEC2ES1_($10,$12);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE8allocateEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE8max_sizeEv($2)|0);
 $5 = ($3>>>0)>($4>>>0);
 if ($5) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($2);
  // unreachable;
 } else {
  $6 = (__ZNSt3__113__vector_baseIdNS_9allocatorIdEEE7__allocEv($2)|0);
  $7 = $1;
  $8 = (__ZNSt3__116allocator_traitsINS_9allocatorIdEEE8allocateERS2_j($6,$7)|0);
  $9 = ((($2)) + 4|0);
  HEAP32[$9>>2] = $8;
  HEAP32[$2>>2] = $8;
  $10 = HEAP32[$2>>2]|0;
  $11 = $1;
  $12 = (($10) + ($11<<3)|0);
  $13 = (__ZNSt3__113__vector_baseIdNS_9allocatorIdEEE9__end_capEv($2)|0);
  HEAP32[$13>>2] = $12;
  __ZNKSt3__16vectorIdNS_9allocatorIdEEE14__annotate_newEj($2,0);
  STACKTOP = sp;return;
 }
}
function __ZNSt3__117__compressed_pairIPdNS_9allocatorIdEEEC2ES1_($this,$__t1) {
 $this = $this|0;
 $__t1 = $__t1|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $0;
 $3 = (__ZNSt3__17forwardIPdEERT_RNS_16remove_referenceIS2_E4typeE($1)|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__128__libcpp_compressed_pair_impIPdNS_9allocatorIdEELj2EEC2ES1_($2,$4);
 STACKTOP = sp;return;
}
function __ZNSt3__128__libcpp_compressed_pair_impIPdNS_9allocatorIdEELj2EEC2ES1_($this,$__t1) {
 $this = $this|0;
 $__t1 = $__t1|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $0;
 __ZNSt3__19allocatorIdEC2Ev($2);
 $3 = (__ZNSt3__17forwardIPdEERT_RNS_16remove_referenceIS2_E4typeE($1)|0);
 $4 = HEAP32[$3>>2]|0;
 HEAP32[$2>>2] = $4;
 STACKTOP = sp;return;
}
function __ZNSt3__19allocatorIdEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZN6ikfast18IkSolutionListBaseIdEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = 848;
 HEAP32[$1>>2] = $2;
 STACKTOP = sp;return;
}
function __ZNSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEEC2Ev($1);
 STACKTOP = sp;return;
}
function __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__116__list_node_baseIN6ikfast10IkSolutionIdEEPvEC2Ev($1);
 $2 = ((($1)) + 8|0);
 __ZNSt3__117__compressed_pairIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEEC2Ej($2,0);
 STACKTOP = sp;return;
}
function __ZNSt3__116__list_node_baseIN6ikfast10IkSolutionIdEEPvEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__116__list_node_baseIN6ikfast10IkSolutionIdEEPvE6__selfEv($1)|0);
 HEAP32[$1>>2] = $2;
 $3 = ((($1)) + 4|0);
 $4 = (__ZNSt3__116__list_node_baseIN6ikfast10IkSolutionIdEEPvE6__selfEv($1)|0);
 HEAP32[$3>>2] = $4;
 STACKTOP = sp;return;
}
function __ZNSt3__117__compressed_pairIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEEC2Ej($this,$__t1) {
 $this = $this|0;
 $__t1 = $__t1|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $0;
 $3 = (__ZNSt3__17forwardIjEERT_RNS_16remove_referenceIS1_E4typeE($1)|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__128__libcpp_compressed_pair_impIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEELj2EEC2Ej($2,$4);
 STACKTOP = sp;return;
}
function __ZNSt3__17forwardIjEERT_RNS_16remove_referenceIS1_E4typeE($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEELj2EEC2Ej($this,$__t1) {
 $this = $this|0;
 $__t1 = $__t1|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $0;
 __ZNSt3__19allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEC2Ev($2);
 $3 = (__ZNSt3__17forwardIjEERT_RNS_16remove_referenceIS1_E4typeE($1)|0);
 $4 = HEAP32[$3>>2]|0;
 HEAP32[$2>>2] = $4;
 STACKTOP = sp;return;
}
function __ZNSt3__19allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZN6ikfast18IkSolutionListBaseIdED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 __THREW__ = 0;
 invoke_vi(19,($3|0));
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if ($5) {
  $6 = ___cxa_find_matching_catch()|0;
  $7 = tempRet0;
  $1 = $6;
  $2 = $7;
  __ZdlPv($3);
  $8 = $1;
  $9 = $2;
  ___resumeException($8|0);
  // unreachable;
 } else {
  __ZdlPv($3);
  STACKTOP = sp;return;
 }
}
function __ZNSt3__114numeric_limitsIdE9quiet_NaNEv() {
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+__ZNSt3__123__libcpp_numeric_limitsIdLb1EE9quiet_NaNEv());
 return (+$0);
}
function __Z6IKasind($f) {
 $f = +$f;
 var $$expand_i1_val = 0, $$expand_i1_val3 = 0, $$pre_trunc = 0, $0 = 0.0, $1 = 0.0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0.0, $55 = 0, $56 = 0.0, $57 = 0, $58 = 0.0, $59 = 0.0, $6 = 0.0;
 var $60 = 0.0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $7 = 0, $8 = 0.0, $9 = 0, $or$cond = 0, $ss = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ss = sp + 40|0;
 $4 = sp + 16|0;
 $5 = sp + 184|0;
 $1 = $f;
 $6 = $1;
 $7 = $6 > -1.0000020000000001;
 $8 = $1;
 $9 = $8 < 1.0000020000000001;
 $or$cond = $7 & $9;
 if ($or$cond) {
  $54 = $1;
  $55 = $54 <= -1.0;
  if ($55) {
   $0 = -1.5707963267949001;
   $60 = $0;
   STACKTOP = sp;return (+$60);
  }
  $56 = $1;
  $57 = $56 >= 1.0;
  if ($57) {
   $0 = 1.5707963267949001;
   $60 = $0;
   STACKTOP = sp;return (+$60);
  } else {
   $58 = $1;
   $59 = (+Math_asin((+$58)));
   $0 = $59;
   $60 = $0;
   STACKTOP = sp;return (+$60);
  }
 }
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEC1Ej($ss,24);
 $10 = ((($ss)) + 8|0);
 __THREW__ = 0;
 $11 = (invoke_iii(410,($10|0),(872|0))|0);
 $12 = __THREW__; __THREW__ = 0;
 $13 = $12&1;
 if ($13) {
  label = 14;
 } else {
  __THREW__ = 0;
  $14 = (invoke_iii(410,($11|0),(896|0))|0);
  $15 = __THREW__; __THREW__ = 0;
  $16 = $15&1;
  if ($16) {
   label = 14;
  } else {
   __THREW__ = 0;
   $17 = (invoke_iii(410,($14|0),(936|0))|0);
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   if ($19) {
    label = 14;
   } else {
    __THREW__ = 0;
    $20 = (invoke_iii(411,($17|0),130)|0);
    $21 = __THREW__; __THREW__ = 0;
    $22 = $21&1;
    if ($22) {
     label = 14;
    } else {
     __THREW__ = 0;
     $23 = (invoke_iii(410,($20|0),(15056|0))|0);
     $24 = __THREW__; __THREW__ = 0;
     $25 = $24&1;
     if ($25) {
      label = 14;
     } else {
      __THREW__ = 0;
      $26 = (invoke_iii(410,($23|0),(1560|0))|0);
      $27 = __THREW__; __THREW__ = 0;
      $28 = $27&1;
      if ($28) {
       label = 14;
      } else {
       __THREW__ = 0;
       $29 = (invoke_iii(410,($26|0),(952|0))|0);
       $30 = __THREW__; __THREW__ = 0;
       $31 = $30&1;
       if ($31) {
        label = 14;
       } else {
        __THREW__ = 0;
        $32 = (invoke_iii(410,($29|0),(1496|0))|0);
        $33 = __THREW__; __THREW__ = 0;
        $34 = $33&1;
        if ($34) {
         label = 14;
        } else {
         __THREW__ = 0;
         (invoke_iii(410,($32|0),(984|0))|0);
         $35 = __THREW__; __THREW__ = 0;
         $36 = $35&1;
         if ($36) {
          label = 14;
         } else {
          $37 = (___cxa_allocate_exception(8)|0);
          $$expand_i1_val = 1;
          HEAP8[$5>>0] = $$expand_i1_val;
          __THREW__ = 0;
          invoke_vii(412,($4|0),($ss|0));
          $38 = __THREW__; __THREW__ = 0;
          $39 = $38&1;
          if ($39) {
           $45 = ___cxa_find_matching_catch()|0;
           $46 = tempRet0;
           $2 = $45;
           $3 = $46;
          } else {
           __THREW__ = 0;
           invoke_vii(413,($37|0),($4|0));
           $40 = __THREW__; __THREW__ = 0;
           $41 = $40&1;
           if (!($41)) {
            $$expand_i1_val3 = 0;
            HEAP8[$5>>0] = $$expand_i1_val3;
            __THREW__ = 0;
            invoke_viii(414,($37|0),(2056|0),(62|0));
            $42 = __THREW__; __THREW__ = 0;
           }
           $47 = ___cxa_find_matching_catch()|0;
           $48 = tempRet0;
           $2 = $47;
           $3 = $48;
           __THREW__ = 0;
           invoke_vi(415,($4|0));
           $49 = __THREW__; __THREW__ = 0;
           $50 = $49&1;
           if ($50) {
            $63 = ___cxa_find_matching_catch(0|0)|0;
            $64 = tempRet0;
            ___clang_call_terminate($63);
            // unreachable;
           }
          }
          $$pre_trunc = HEAP8[$5>>0]|0;
          $51 = $$pre_trunc&1;
          if ($51) {
           ___cxa_free_exception(($37|0));
          }
         }
        }
       }
      }
     }
    }
   }
  }
 }
 if ((label|0) == 14) {
  $43 = ___cxa_find_matching_catch()|0;
  $44 = tempRet0;
  $2 = $43;
  $3 = $44;
 }
 __THREW__ = 0;
 invoke_vi(35,($ss|0));
 $52 = __THREW__; __THREW__ = 0;
 $53 = $52&1;
 if ($53) {
  $63 = ___cxa_find_matching_catch(0|0)|0;
  $64 = tempRet0;
  ___clang_call_terminate($63);
  // unreachable;
 } else {
  $61 = $2;
  $62 = $3;
  ___resumeException($61|0);
  // unreachable;
 }
 return +(0.0);
}
function __Z5IKabsd($f) {
 $f = +$f;
 var $0 = 0.0, $1 = 0.0, $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $f;
 $1 = $0;
 $2 = (+Math_abs((+$1)));
 STACKTOP = sp;return (+$2);
}
function __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($agg$result,$fy,$fx,$epsilon) {
 $agg$result = $agg$result|0;
 $fy = +$fy;
 $fx = +$fx;
 $epsilon = +$epsilon;
 var $0 = 0.0, $1 = 0.0, $10 = 0, $11 = 0.0, $12 = 0.0, $13 = 0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0, $2 = 0.0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0.0, $7 = 0, $8 = 0.0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $fy;
 $1 = $fx;
 $2 = $epsilon;
 $3 = ((($agg$result)) + 8|0);
 HEAP8[$3>>0] = 0;
 HEAPF64[$agg$result>>3] = 0.0;
 $4 = $0;
 $5 = (__Z5isnanIdENSt3__19enable_ifIXsr3std13is_arithmeticIT_EE5valueEbE4typeES2_($4)|0);
 if ($5) {
  STACKTOP = sp;return;
 }
 $6 = $1;
 $7 = (__Z5isnanIdENSt3__19enable_ifIXsr3std13is_arithmeticIT_EE5valueEbE4typeES2_($6)|0);
 if ($7) {
  STACKTOP = sp;return;
 }
 $8 = $0;
 $9 = (+__Z5IKabsd($8));
 $10 = $9 >= 1.9999999999999999E-6;
 if (!($10)) {
  $11 = $1;
  $12 = (+__Z5IKabsd($11));
  $13 = $12 > 1.9999999999999999E-6;
  if (!($13)) {
   STACKTOP = sp;return;
  }
 }
 $14 = $0;
 $15 = $1;
 $16 = (+__Z13IKatan2Simpledd($14,$15));
 HEAPF64[$agg$result>>3] = $16;
 $17 = ((($agg$result)) + 8|0);
 HEAP8[$17>>0] = 1;
 STACKTOP = sp;return;
}
function __Z6IKsqrtd($f) {
 $f = +$f;
 var $0 = 0.0, $1 = 0.0, $2 = 0.0, $3 = 0, $4 = 0.0, $5 = 0.0, $6 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $f;
 $2 = $1;
 $3 = $2 <= 0.0;
 if ($3) {
  $0 = 0.0;
 } else {
  $4 = $1;
  $5 = (+Math_sqrt((+$4)));
  $0 = $5;
 }
 $6 = $0;
 STACKTOP = sp;return (+$6);
}
function __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($agg$result,$f,$n) {
 $agg$result = $agg$result|0;
 $f = +$f;
 $n = $n|0;
 var $0 = 0.0, $1 = 0, $10 = 0.0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0.0, $16 = 0.0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0.0, $25 = 0.0, $26 = 0.0;
 var $27 = 0, $28 = 0, $29 = 0.0, $3 = 0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0.0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0.0, $4 = 0, $40 = 0.0, $41 = 0.0, $42 = 0, $43 = 0, $44 = 0.0;
 var $45 = 0.0, $46 = 0.0, $47 = 0, $48 = 0, $49 = 0.0, $5 = 0, $50 = 0.0, $6 = 0, $7 = 0.0, $8 = 0, $9 = 0, $num = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $f;
 $1 = $n;
 $2 = ((($agg$result)) + 8|0);
 HEAP8[$2>>0] = 1;
 $3 = $1;
 $4 = ($3|0)==(0);
 if ($4) {
  HEAPF64[$agg$result>>3] = 1.0;
  STACKTOP = sp;return;
 }
 $5 = $1;
 $6 = ($5|0)==(1);
 if ($6) {
  $7 = $0;
  HEAPF64[$agg$result>>3] = $7;
  STACKTOP = sp;return;
 }
 $8 = $1;
 $9 = ($8|0)<(0);
 if ($9) {
  $10 = $0;
  $11 = $10 == 0.0;
  if ($11) {
   $12 = ((($agg$result)) + 8|0);
   HEAP8[$12>>0] = 0;
   HEAPF64[$agg$result>>3] = 1.0E+30;
   STACKTOP = sp;return;
  }
  $13 = $1;
  $14 = ($13|0)==(-1);
  if ($14) {
   $15 = $0;
   $16 = 1.0 / $15;
   HEAPF64[$agg$result>>3] = $16;
   STACKTOP = sp;return;
  }
 }
 $17 = $1;
 $18 = ($17|0)>(0);
 $19 = $1;
 $20 = (0 - ($19))|0;
 $21 = $18 ? $19 : $20;
 $num = $21;
 $22 = $num;
 $23 = ($22|0)==(2);
 L18: do {
  if ($23) {
   $24 = $0;
   $25 = $0;
   $26 = $24 * $25;
   HEAPF64[$agg$result>>3] = $26;
  } else {
   $27 = $num;
   $28 = ($27|0)==(3);
   if ($28) {
    $29 = $0;
    $30 = $0;
    $31 = $29 * $30;
    $32 = $0;
    $33 = $31 * $32;
    HEAPF64[$agg$result>>3] = $33;
    break;
   }
   HEAPF64[$agg$result>>3] = 1.0;
   while(1) {
    $34 = $num;
    $35 = ($34|0)>(0);
    if (!($35)) {
     break L18;
    }
    $36 = $num;
    $37 = $36 & 1;
    $38 = ($37|0)!=(0);
    if ($38) {
     $39 = $0;
     $40 = +HEAPF64[$agg$result>>3];
     $41 = $40 * $39;
     HEAPF64[$agg$result>>3] = $41;
    }
    $42 = $num;
    $43 = $42 >> 1;
    $num = $43;
    $44 = $0;
    $45 = $0;
    $46 = $45 * $44;
    $0 = $46;
   }
  }
 } while(0);
 $47 = $1;
 $48 = ($47|0)<(0);
 if (!($48)) {
  STACKTOP = sp;return;
 }
 $49 = +HEAPF64[$agg$result>>3];
 $50 = 1.0 / $49;
 HEAPF64[$agg$result>>3] = $50;
 STACKTOP = sp;return;
}
function __Z6IKsignd($f) {
 $f = +$f;
 var $0 = 0.0, $1 = 0.0, $2 = 0.0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $f;
 $2 = $1;
 $3 = $2 > 0.0;
 do {
  if ($3) {
   $0 = 1.0;
  } else {
   $4 = $1;
   $5 = $4 < 0.0;
   if ($5) {
    $0 = -1.0;
    break;
   } else {
    $0 = 0.0;
    break;
   }
  }
 } while(0);
 $6 = $0;
 STACKTOP = sp;return (+$6);
}
function __Z6IKfmoddd($x,$y) {
 $x = +$x;
 $y = +$y;
 var $0 = 0.0, $1 = 0.0, $2 = 0.0, $3 = 0, $4 = 0.0, $5 = 0.0, $6 = 0.0, $7 = 0.0, $8 = 0.0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $x;
 $1 = $y;
 while(1) {
  $2 = $0;
  $3 = $2 < 0.0;
  if (!($3)) {
   break;
  }
  $4 = $1;
  $5 = $0;
  $6 = $5 + $4;
  $0 = $6;
 }
 $7 = $0;
 $8 = $1;
 $9 = (+_fmod($7,$8));
 STACKTOP = sp;return (+$9);
}
function __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions) {
 $this = $this|0;
 $solutions = $solutions|0;
 var $0 = 0, $1 = 0, $10 = 0.0, $100 = 0.0, $1000 = 0.0, $10000 = 0, $10001 = 0, $10002 = 0, $10003 = 0.0, $10004 = 0.0, $10005 = 0.0, $10006 = 0.0, $10007 = 0.0, $10008 = 0.0, $10009 = 0.0, $1001 = 0.0, $10010 = 0.0, $10011 = 0.0, $10012 = 0.0, $10013 = 0;
 var $10014 = 0.0, $10015 = 0.0, $10016 = 0, $10017 = 0.0, $10018 = 0.0, $10019 = 0, $1002 = 0, $10020 = 0, $10021 = 0, $10022 = 0, $10023 = 0, $10024 = 0, $10025 = 0, $10026 = 0, $10027 = 0, $10028 = 0, $10029 = 0, $1003 = 0.0, $10030 = 0, $10031 = 0;
 var $10032 = 0, $10033 = 0, $10034 = 0, $10035 = 0, $10036 = 0, $10037 = 0, $10038 = 0, $10039 = 0, $1004 = 0, $10040 = 0.0, $10041 = 0, $10042 = 0, $10043 = 0.0, $10044 = 0.0, $10045 = 0.0, $10046 = 0, $10047 = 0, $10048 = 0, $10049 = 0.0, $1005 = 0.0;
 var $10050 = 0, $10051 = 0, $10052 = 0.0, $10053 = 0.0, $10054 = 0.0, $10055 = 0, $10056 = 0, $10057 = 0, $10058 = 0, $10059 = 0, $1006 = 0.0, $10060 = 0, $10061 = 0, $10062 = 0, $10063 = 0, $10064 = 0, $10065 = 0, $10066 = 0.0, $10067 = 0, $10068 = 0;
 var $10069 = 0, $1007 = 0.0, $10070 = 0.0, $10071 = 0, $10072 = 0, $10073 = 0, $10074 = 0.0, $10075 = 0, $10076 = 0, $10077 = 0.0, $10078 = 0.0, $10079 = 0, $1008 = 0, $10080 = 0.0, $10081 = 0.0, $10082 = 0, $10083 = 0.0, $10084 = 0.0, $10085 = 0.0, $10086 = 0.0;
 var $10087 = 0.0, $10088 = 0.0, $10089 = 0, $1009 = 0, $10090 = 0.0, $10091 = 0, $10092 = 0.0, $10093 = 0.0, $10094 = 0.0, $10095 = 0.0, $10096 = 0, $10097 = 0.0, $10098 = 0.0, $10099 = 0.0, $101 = 0.0, $1010 = 0.0, $10100 = 0, $10101 = 0.0, $10102 = 0.0, $10103 = 0;
 var $10104 = 0.0, $10105 = 0.0, $10106 = 0.0, $10107 = 0.0, $10108 = 0, $10109 = 0.0, $1011 = 0.0, $10110 = 0.0, $10111 = 0, $10112 = 0, $10113 = 0.0, $10114 = 0.0, $10115 = 0.0, $10116 = 0.0, $10117 = 0, $10118 = 0.0, $10119 = 0.0, $1012 = 0.0, $10120 = 0, $10121 = 0.0;
 var $10122 = 0.0, $10123 = 0, $10124 = 0.0, $10125 = 0.0, $10126 = 0.0, $10127 = 0, $10128 = 0.0, $10129 = 0.0, $1013 = 0.0, $10130 = 0, $10131 = 0.0, $10132 = 0.0, $10133 = 0.0, $10134 = 0, $10135 = 0.0, $10136 = 0, $10137 = 0.0, $10138 = 0, $10139 = 0.0, $1014 = 0.0;
 var $10140 = 0.0, $10141 = 0.0, $10142 = 0, $10143 = 0.0, $10144 = 0.0, $10145 = 0.0, $10146 = 0.0, $10147 = 0.0, $10148 = 0, $10149 = 0, $1015 = 0.0, $10150 = 0.0, $10151 = 0.0, $10152 = 0.0, $10153 = 0.0, $10154 = 0.0, $10155 = 0.0, $10156 = 0.0, $10157 = 0, $10158 = 0.0;
 var $10159 = 0, $1016 = 0.0, $10160 = 0.0, $10161 = 0.0, $10162 = 0.0, $10163 = 0, $10164 = 0.0, $10165 = 0.0, $10166 = 0, $10167 = 0, $10168 = 0.0, $10169 = 0.0, $1017 = 0, $10170 = 0, $10171 = 0, $10172 = 0.0, $10173 = 0.0, $10174 = 0, $10175 = 0, $10176 = 0.0;
 var $10177 = 0.0, $10178 = 0, $10179 = 0, $1018 = 0.0, $10180 = 0.0, $10181 = 0.0, $10182 = 0, $10183 = 0, $10184 = 0.0, $10185 = 0.0, $10186 = 0, $10187 = 0, $10188 = 0.0, $10189 = 0.0, $1019 = 0, $10190 = 0, $10191 = 0, $10192 = 0.0, $10193 = 0.0, $10194 = 0;
 var $10195 = 0, $10196 = 0, $10197 = 0, $10198 = 0, $10199 = 0.0, $102 = 0, $1020 = 0.0, $10200 = 0, $10201 = 0, $10202 = 0, $10203 = 0, $10204 = 0, $10205 = 0, $10206 = 0, $10207 = 0, $10208 = 0, $10209 = 0, $1021 = 0.0, $10210 = 0, $10211 = 0;
 var $10212 = 0, $10213 = 0, $10214 = 0, $10215 = 0, $10216 = 0, $10217 = 0, $10218 = 0, $10219 = 0, $1022 = 0.0, $10220 = 0, $10221 = 0, $10222 = 0, $10223 = 0, $10224 = 0, $10225 = 0, $10226 = 0, $10227 = 0, $10228 = 0, $10229 = 0.0, $1023 = 0;
 var $10230 = 0, $10231 = 0, $10232 = 0, $10233 = 0, $10234 = 0, $10235 = 0, $10236 = 0, $10237 = 0, $10238 = 0, $10239 = 0, $1024 = 0, $10240 = 0, $10241 = 0, $10242 = 0, $10243 = 0, $10244 = 0, $10245 = 0, $10246 = 0, $10247 = 0, $10248 = 0;
 var $10249 = 0, $1025 = 0.0, $10250 = 0, $10251 = 0, $10252 = 0, $10253 = 0, $10254 = 0, $10255 = 0, $10256 = 0, $10257 = 0, $10258 = 0, $10259 = 0.0, $1026 = 0.0, $10260 = 0, $10261 = 0, $10262 = 0, $10263 = 0, $10264 = 0, $10265 = 0, $10266 = 0;
 var $10267 = 0, $10268 = 0, $10269 = 0, $1027 = 0.0, $10270 = 0, $10271 = 0, $10272 = 0, $10273 = 0, $10274 = 0, $10275 = 0, $10276 = 0, $10277 = 0, $10278 = 0, $10279 = 0, $1028 = 0.0, $10280 = 0, $10281 = 0, $10282 = 0, $10283 = 0, $10284 = 0;
 var $10285 = 0, $10286 = 0, $10287 = 0, $10288 = 0, $10289 = 0.0, $1029 = 0.0, $10290 = 0, $10291 = 0, $10292 = 0, $10293 = 0, $10294 = 0, $10295 = 0, $10296 = 0, $10297 = 0, $10298 = 0, $10299 = 0, $103 = 0, $1030 = 0.0, $10300 = 0, $10301 = 0;
 var $10302 = 0, $10303 = 0, $10304 = 0, $10305 = 0, $10306 = 0, $10307 = 0, $10308 = 0, $10309 = 0, $1031 = 0.0, $10310 = 0, $10311 = 0, $10312 = 0, $10313 = 0, $10314 = 0, $10315 = 0, $10316 = 0, $10317 = 0, $10318 = 0, $10319 = 0.0, $1032 = 0;
 var $10320 = 0, $10321 = 0, $10322 = 0, $10323 = 0, $10324 = 0, $10325 = 0, $10326 = 0, $10327 = 0, $10328 = 0, $10329 = 0, $1033 = 0.0, $10330 = 0, $10331 = 0, $10332 = 0, $10333 = 0, $10334 = 0, $10335 = 0, $10336 = 0, $10337 = 0, $10338 = 0;
 var $10339 = 0, $1034 = 0, $10340 = 0, $10341 = 0, $10342 = 0, $10343 = 0, $10344 = 0, $10345 = 0, $10346 = 0, $10347 = 0, $10348 = 0, $10349 = 0.0, $1035 = 0.0, $10350 = 0, $10351 = 0, $10352 = 0, $10353 = 0, $10354 = 0, $10355 = 0, $10356 = 0;
 var $10357 = 0, $10358 = 0, $10359 = 0, $1036 = 0.0, $10360 = 0, $10361 = 0, $10362 = 0, $10363 = 0, $10364 = 0, $10365 = 0, $10366 = 0, $10367 = 0, $10368 = 0, $10369 = 0, $1037 = 0.0, $10370 = 0, $10371 = 0, $10372 = 0, $10373 = 0, $10374 = 0;
 var $10375 = 0, $10376 = 0, $10377 = 0, $10378 = 0, $10379 = 0, $1038 = 0, $10380 = 0, $10381 = 0, $10382 = 0, $10383 = 0, $10384 = 0, $10385 = 0, $10386 = 0, $10387 = 0, $10388 = 0, $10389 = 0, $1039 = 0.0, $10390 = 0, $10391 = 0, $10392 = 0;
 var $10393 = 0, $10394 = 0, $10395 = 0, $10396 = 0, $10397 = 0.0, $10398 = 0, $10399 = 0.0, $104 = 0.0, $1040 = 0.0, $10400 = 0.0, $10401 = 0.0, $10402 = 0, $10403 = 0.0, $10404 = 0.0, $10405 = 0, $10406 = 0.0, $10407 = 0.0, $10408 = 0, $10409 = 0.0, $1041 = 0.0;
 var $10410 = 0.0, $10411 = 0.0, $10412 = 0.0, $10413 = 0.0, $10414 = 0.0, $10415 = 0.0, $10416 = 0, $10417 = 0.0, $10418 = 0, $10419 = 0, $1042 = 0.0, $10420 = 0.0, $10421 = 0, $10422 = 0, $10423 = 0.0, $10424 = 0, $10425 = 0.0, $10426 = 0.0, $10427 = 0, $10428 = 0.0;
 var $10429 = 0.0, $1043 = 0, $10430 = 0, $10431 = 0.0, $10432 = 0.0, $10433 = 0.0, $10434 = 0, $10435 = 0, $10436 = 0.0, $10437 = 0.0, $10438 = 0.0, $10439 = 0.0, $1044 = 0.0, $10440 = 0, $10441 = 0.0, $10442 = 0.0, $10443 = 0.0, $10444 = 0.0, $10445 = 0.0, $10446 = 0;
 var $10447 = 0, $10448 = 0.0, $10449 = 0.0, $1045 = 0.0, $10450 = 0.0, $10451 = 0.0, $10452 = 0, $10453 = 0.0, $10454 = 0, $10455 = 0.0, $10456 = 0.0, $10457 = 0.0, $10458 = 0, $10459 = 0, $1046 = 0, $10460 = 0.0, $10461 = 0, $10462 = 0.0, $10463 = 0.0, $10464 = 0;
 var $10465 = 0.0, $10466 = 0.0, $10467 = 0.0, $10468 = 0.0, $10469 = 0.0, $1047 = 0.0, $10470 = 0, $10471 = 0, $10472 = 0.0, $10473 = 0, $10474 = 0.0, $10475 = 0.0, $10476 = 0.0, $10477 = 0, $10478 = 0.0, $10479 = 0.0, $1048 = 0.0, $10480 = 0.0, $10481 = 0.0, $10482 = 0.0;
 var $10483 = 0, $10484 = 0.0, $10485 = 0.0, $10486 = 0, $10487 = 0, $10488 = 0.0, $10489 = 0.0, $1049 = 0.0, $10490 = 0, $10491 = 0, $10492 = 0.0, $10493 = 0.0, $10494 = 0, $10495 = 0, $10496 = 0.0, $10497 = 0.0, $10498 = 0, $10499 = 0, $105 = 0.0, $1050 = 0.0;
 var $10500 = 0.0, $10501 = 0.0, $10502 = 0, $10503 = 0, $10504 = 0.0, $10505 = 0.0, $10506 = 0, $10507 = 0, $10508 = 0.0, $10509 = 0.0, $1051 = 0, $10510 = 0, $10511 = 0, $10512 = 0.0, $10513 = 0.0, $10514 = 0, $10515 = 0, $10516 = 0.0, $10517 = 0.0, $10518 = 0;
 var $10519 = 0, $1052 = 0.0, $10520 = 0.0, $10521 = 0.0, $10522 = 0, $10523 = 0, $10524 = 0, $10525 = 0.0, $10526 = 0.0, $10527 = 0, $10528 = 0, $10529 = 0.0, $1053 = 0.0, $10530 = 0.0, $10531 = 0, $10532 = 0, $10533 = 0.0, $10534 = 0.0, $10535 = 0, $10536 = 0.0;
 var $10537 = 0.0, $10538 = 0.0, $10539 = 0.0, $1054 = 0, $10540 = 0.0, $10541 = 0, $10542 = 0, $10543 = 0.0, $10544 = 0, $10545 = 0.0, $10546 = 0.0, $10547 = 0.0, $10548 = 0.0, $10549 = 0.0, $1055 = 0.0, $10550 = 0.0, $10551 = 0.0, $10552 = 0, $10553 = 0.0, $10554 = 0.0;
 var $10555 = 0, $10556 = 0.0, $10557 = 0.0, $10558 = 0, $10559 = 0, $1056 = 0.0, $10560 = 0, $10561 = 0, $10562 = 0, $10563 = 0, $10564 = 0, $10565 = 0, $10566 = 0, $10567 = 0, $10568 = 0, $10569 = 0, $1057 = 0.0, $10570 = 0, $10571 = 0, $10572 = 0;
 var $10573 = 0, $10574 = 0, $10575 = 0, $10576 = 0, $10577 = 0, $10578 = 0, $10579 = 0.0, $1058 = 0.0, $10580 = 0, $10581 = 0, $10582 = 0.0, $10583 = 0.0, $10584 = 0.0, $10585 = 0, $10586 = 0, $10587 = 0, $10588 = 0.0, $10589 = 0, $1059 = 0, $10590 = 0;
 var $10591 = 0.0, $10592 = 0.0, $10593 = 0.0, $10594 = 0, $10595 = 0, $10596 = 0, $10597 = 0, $10598 = 0, $10599 = 0, $106 = 0.0, $1060 = 0.0, $10600 = 0, $10601 = 0, $10602 = 0, $10603 = 0, $10604 = 0, $10605 = 0.0, $10606 = 0, $10607 = 0, $10608 = 0;
 var $10609 = 0.0, $1061 = 0.0, $10610 = 0, $10611 = 0, $10612 = 0, $10613 = 0.0, $10614 = 0, $10615 = 0, $10616 = 0.0, $10617 = 0.0, $10618 = 0, $10619 = 0.0, $1062 = 0.0, $10620 = 0.0, $10621 = 0, $10622 = 0.0, $10623 = 0.0, $10624 = 0, $10625 = 0.0, $10626 = 0.0;
 var $10627 = 0.0, $10628 = 0.0, $10629 = 0, $1063 = 0.0, $10630 = 0.0, $10631 = 0, $10632 = 0.0, $10633 = 0.0, $10634 = 0.0, $10635 = 0.0, $10636 = 0.0, $10637 = 0.0, $10638 = 0, $10639 = 0.0, $1064 = 0.0, $10640 = 0.0, $10641 = 0, $10642 = 0.0, $10643 = 0.0, $10644 = 0;
 var $10645 = 0.0, $10646 = 0.0, $10647 = 0, $10648 = 0, $10649 = 0.0, $1065 = 0, $10650 = 0.0, $10651 = 0.0, $10652 = 0.0, $10653 = 0, $10654 = 0.0, $10655 = 0.0, $10656 = 0, $10657 = 0, $10658 = 0.0, $10659 = 0.0, $1066 = 0.0, $10660 = 0.0, $10661 = 0.0, $10662 = 0.0;
 var $10663 = 0.0, $10664 = 0, $10665 = 0.0, $10666 = 0.0, $10667 = 0, $10668 = 0.0, $10669 = 0.0, $1067 = 0.0, $10670 = 0.0, $10671 = 0.0, $10672 = 0.0, $10673 = 0, $10674 = 0, $10675 = 0.0, $10676 = 0.0, $10677 = 0.0, $10678 = 0.0, $10679 = 0.0, $1068 = 0, $10680 = 0.0;
 var $10681 = 0, $10682 = 0.0, $10683 = 0, $10684 = 0.0, $10685 = 0.0, $10686 = 0.0, $10687 = 0, $10688 = 0.0, $10689 = 0.0, $1069 = 0.0, $10690 = 0, $10691 = 0.0, $10692 = 0.0, $10693 = 0.0, $10694 = 0.0, $10695 = 0.0, $10696 = 0, $10697 = 0.0, $10698 = 0, $10699 = 0.0;
 var $107 = 0.0, $1070 = 0.0, $10700 = 0.0, $10701 = 0.0, $10702 = 0, $10703 = 0.0, $10704 = 0.0, $10705 = 0, $10706 = 0, $10707 = 0.0, $10708 = 0.0, $10709 = 0, $1071 = 0, $10710 = 0, $10711 = 0.0, $10712 = 0.0, $10713 = 0, $10714 = 0, $10715 = 0.0, $10716 = 0.0;
 var $10717 = 0, $10718 = 0, $10719 = 0.0, $1072 = 0, $10720 = 0.0, $10721 = 0, $10722 = 0, $10723 = 0.0, $10724 = 0.0, $10725 = 0, $10726 = 0, $10727 = 0.0, $10728 = 0.0, $10729 = 0, $1073 = 0.0, $10730 = 0, $10731 = 0.0, $10732 = 0.0, $10733 = 0, $10734 = 0;
 var $10735 = 0, $10736 = 0, $10737 = 0, $10738 = 0.0, $10739 = 0, $1074 = 0.0, $10740 = 0, $10741 = 0, $10742 = 0, $10743 = 0, $10744 = 0, $10745 = 0, $10746 = 0, $10747 = 0, $10748 = 0, $10749 = 0, $1075 = 0, $10750 = 0, $10751 = 0, $10752 = 0;
 var $10753 = 0, $10754 = 0, $10755 = 0, $10756 = 0, $10757 = 0, $10758 = 0, $10759 = 0, $1076 = 0, $10760 = 0, $10761 = 0, $10762 = 0, $10763 = 0, $10764 = 0, $10765 = 0, $10766 = 0, $10767 = 0, $10768 = 0.0, $10769 = 0, $1077 = 0.0, $10770 = 0;
 var $10771 = 0, $10772 = 0, $10773 = 0, $10774 = 0, $10775 = 0, $10776 = 0, $10777 = 0, $10778 = 0, $10779 = 0, $1078 = 0.0, $10780 = 0, $10781 = 0, $10782 = 0, $10783 = 0, $10784 = 0, $10785 = 0, $10786 = 0, $10787 = 0, $10788 = 0, $10789 = 0;
 var $1079 = 0, $10790 = 0, $10791 = 0, $10792 = 0, $10793 = 0, $10794 = 0, $10795 = 0, $10796 = 0, $10797 = 0, $10798 = 0.0, $10799 = 0, $108 = 0.0, $1080 = 0, $10800 = 0, $10801 = 0, $10802 = 0, $10803 = 0, $10804 = 0, $10805 = 0, $10806 = 0;
 var $10807 = 0, $10808 = 0, $10809 = 0, $1081 = 0.0, $10810 = 0, $10811 = 0, $10812 = 0, $10813 = 0, $10814 = 0, $10815 = 0, $10816 = 0, $10817 = 0, $10818 = 0, $10819 = 0, $1082 = 0.0, $10820 = 0, $10821 = 0, $10822 = 0, $10823 = 0, $10824 = 0;
 var $10825 = 0, $10826 = 0, $10827 = 0, $10828 = 0.0, $10829 = 0, $1083 = 0, $10830 = 0, $10831 = 0, $10832 = 0, $10833 = 0, $10834 = 0, $10835 = 0, $10836 = 0, $10837 = 0, $10838 = 0, $10839 = 0, $1084 = 0, $10840 = 0, $10841 = 0, $10842 = 0;
 var $10843 = 0, $10844 = 0, $10845 = 0, $10846 = 0, $10847 = 0, $10848 = 0, $10849 = 0, $1085 = 0.0, $10850 = 0, $10851 = 0, $10852 = 0, $10853 = 0, $10854 = 0, $10855 = 0, $10856 = 0, $10857 = 0, $10858 = 0.0, $10859 = 0, $1086 = 0.0, $10860 = 0;
 var $10861 = 0, $10862 = 0, $10863 = 0, $10864 = 0, $10865 = 0, $10866 = 0, $10867 = 0, $10868 = 0, $10869 = 0, $1087 = 0, $10870 = 0, $10871 = 0, $10872 = 0, $10873 = 0, $10874 = 0, $10875 = 0, $10876 = 0, $10877 = 0, $10878 = 0, $10879 = 0;
 var $1088 = 0, $10880 = 0, $10881 = 0, $10882 = 0, $10883 = 0, $10884 = 0, $10885 = 0, $10886 = 0, $10887 = 0, $10888 = 0.0, $10889 = 0, $1089 = 0.0, $10890 = 0, $10891 = 0, $10892 = 0, $10893 = 0, $10894 = 0, $10895 = 0, $10896 = 0, $10897 = 0;
 var $10898 = 0, $10899 = 0, $109 = 0.0, $1090 = 0.0, $10900 = 0, $10901 = 0, $10902 = 0, $10903 = 0, $10904 = 0, $10905 = 0, $10906 = 0, $10907 = 0, $10908 = 0, $10909 = 0, $1091 = 0, $10910 = 0, $10911 = 0, $10912 = 0, $10913 = 0, $10914 = 0;
 var $10915 = 0, $10916 = 0, $10917 = 0, $10918 = 0, $10919 = 0, $1092 = 0, $10920 = 0, $10921 = 0, $10922 = 0, $10923 = 0, $10924 = 0, $10925 = 0, $10926 = 0, $10927 = 0, $10928 = 0, $10929 = 0, $1093 = 0.0, $10930 = 0, $10931 = 0, $10932 = 0;
 var $10933 = 0, $10934 = 0, $10935 = 0, $10936 = 0.0, $10937 = 0, $10938 = 0.0, $10939 = 0.0, $1094 = 0.0, $10940 = 0, $10941 = 0.0, $10942 = 0, $10943 = 0.0, $10944 = 0.0, $10945 = 0, $10946 = 0.0, $10947 = 0.0, $10948 = 0, $10949 = 0.0, $1095 = 0, $10950 = 0.0;
 var $10951 = 0, $10952 = 0.0, $10953 = 0, $10954 = 0.0, $10955 = 0.0, $10956 = 0, $10957 = 0.0, $10958 = 0.0, $10959 = 0.0, $1096 = 0, $10960 = 0.0, $10961 = 0.0, $10962 = 0, $10963 = 0.0, $10964 = 0.0, $10965 = 0.0, $10966 = 0.0, $10967 = 0.0, $10968 = 0.0, $10969 = 0;
 var $1097 = 0.0, $10970 = 0.0, $10971 = 0, $10972 = 0.0, $10973 = 0.0, $10974 = 0, $10975 = 0.0, $10976 = 0.0, $10977 = 0, $10978 = 0.0, $10979 = 0.0, $1098 = 0.0, $10980 = 0, $10981 = 0.0, $10982 = 0.0, $10983 = 0, $10984 = 0.0, $10985 = 0, $10986 = 0.0, $10987 = 0;
 var $10988 = 0.0, $10989 = 0.0, $1099 = 0, $10990 = 0, $10991 = 0.0, $10992 = 0, $10993 = 0.0, $10994 = 0.0, $10995 = 0.0, $10996 = 0, $10997 = 0.0, $10998 = 0, $10999 = 0.0, $11 = 0.0, $110 = 0.0, $1100 = 0, $11000 = 0, $11001 = 0.0, $11002 = 0.0, $11003 = 0.0;
 var $11004 = 0, $11005 = 0, $11006 = 0.0, $11007 = 0, $11008 = 0.0, $11009 = 0.0, $1101 = 0, $11010 = 0, $11011 = 0.0, $11012 = 0, $11013 = 0.0, $11014 = 0.0, $11015 = 0.0, $11016 = 0, $11017 = 0, $11018 = 0.0, $11019 = 0.0, $1102 = 0, $11020 = 0.0, $11021 = 0.0;
 var $11022 = 0, $11023 = 0.0, $11024 = 0.0, $11025 = 0.0, $11026 = 0.0, $11027 = 0.0, $11028 = 0, $11029 = 0.0, $1103 = 0, $11030 = 0.0, $11031 = 0, $11032 = 0.0, $11033 = 0.0, $11034 = 0.0, $11035 = 0.0, $11036 = 0.0, $11037 = 0, $11038 = 0.0, $11039 = 0.0, $1104 = 0.0;
 var $11040 = 0.0, $11041 = 0, $11042 = 0.0, $11043 = 0.0, $11044 = 0.0, $11045 = 0.0, $11046 = 0.0, $11047 = 0, $11048 = 0.0, $11049 = 0.0, $1105 = 0, $11050 = 0, $11051 = 0, $11052 = 0.0, $11053 = 0.0, $11054 = 0, $11055 = 0, $11056 = 0.0, $11057 = 0.0, $11058 = 0;
 var $11059 = 0, $1106 = 0, $11060 = 0.0, $11061 = 0.0, $11062 = 0, $11063 = 0, $11064 = 0.0, $11065 = 0.0, $11066 = 0, $11067 = 0, $11068 = 0.0, $11069 = 0.0, $1107 = 0, $11070 = 0, $11071 = 0, $11072 = 0.0, $11073 = 0.0, $11074 = 0, $11075 = 0, $11076 = 0.0;
 var $11077 = 0.0, $11078 = 0, $11079 = 0, $1108 = 0, $11080 = 0.0, $11081 = 0.0, $11082 = 0, $11083 = 0, $11084 = 0.0, $11085 = 0.0, $11086 = 0, $11087 = 0, $11088 = 0.0, $11089 = 0.0, $1109 = 0, $11090 = 0, $11091 = 0, $11092 = 0.0, $11093 = 0.0, $11094 = 0;
 var $11095 = 0, $11096 = 0, $11097 = 0.0, $11098 = 0.0, $11099 = 0, $111 = 0, $1110 = 0, $11100 = 0, $11101 = 0.0, $11102 = 0.0, $11103 = 0.0, $11104 = 0, $11105 = 0, $11106 = 0.0, $11107 = 0.0, $11108 = 0, $11109 = 0.0, $1111 = 0, $11110 = 0.0, $11111 = 0.0;
 var $11112 = 0.0, $11113 = 0.0, $11114 = 0.0, $11115 = 0, $11116 = 0, $11117 = 0.0, $11118 = 0, $11119 = 0.0, $1112 = 0, $11120 = 0.0, $11121 = 0.0, $11122 = 0.0, $11123 = 0.0, $11124 = 0.0, $11125 = 0.0, $11126 = 0.0, $11127 = 0, $11128 = 0.0, $11129 = 0.0, $1113 = 0;
 var $11130 = 0, $11131 = 0.0, $11132 = 0.0, $11133 = 0, $11134 = 0, $11135 = 0, $11136 = 0, $11137 = 0, $11138 = 0, $11139 = 0, $1114 = 0, $11140 = 0, $11141 = 0, $11142 = 0, $11143 = 0, $11144 = 0, $11145 = 0, $11146 = 0, $11147 = 0, $11148 = 0;
 var $11149 = 0, $1115 = 0, $11150 = 0, $11151 = 0, $11152 = 0, $11153 = 0, $11154 = 0.0, $11155 = 0, $11156 = 0, $11157 = 0.0, $11158 = 0.0, $11159 = 0.0, $1116 = 0, $11160 = 0, $11161 = 0, $11162 = 0, $11163 = 0.0, $11164 = 0, $11165 = 0, $11166 = 0.0;
 var $11167 = 0.0, $11168 = 0.0, $11169 = 0, $1117 = 0, $11170 = 0, $11171 = 0, $11172 = 0, $11173 = 0, $11174 = 0, $11175 = 0, $11176 = 0, $11177 = 0, $11178 = 0, $11179 = 0, $1118 = 0, $11180 = 0.0, $11181 = 0, $11182 = 0, $11183 = 0, $11184 = 0.0;
 var $11185 = 0, $11186 = 0, $11187 = 0, $11188 = 0.0, $11189 = 0, $1119 = 0, $11190 = 0, $11191 = 0.0, $11192 = 0.0, $11193 = 0, $11194 = 0.0, $11195 = 0.0, $11196 = 0, $11197 = 0.0, $11198 = 0.0, $11199 = 0.0, $112 = 0.0, $1120 = 0, $11200 = 0.0, $11201 = 0.0;
 var $11202 = 0.0, $11203 = 0.0, $11204 = 0, $11205 = 0.0, $11206 = 0.0, $11207 = 0.0, $11208 = 0.0, $11209 = 0, $1121 = 0, $11210 = 0.0, $11211 = 0.0, $11212 = 0, $11213 = 0, $11214 = 0.0, $11215 = 0.0, $11216 = 0.0, $11217 = 0, $11218 = 0.0, $11219 = 0.0, $1122 = 0;
 var $11220 = 0, $11221 = 0, $11222 = 0.0, $11223 = 0.0, $11224 = 0.0, $11225 = 0, $11226 = 0.0, $11227 = 0.0, $11228 = 0, $11229 = 0, $1123 = 0, $11230 = 0.0, $11231 = 0.0, $11232 = 0.0, $11233 = 0.0, $11234 = 0, $11235 = 0.0, $11236 = 0.0, $11237 = 0, $11238 = 0;
 var $11239 = 0.0, $1124 = 0, $11240 = 0.0, $11241 = 0.0, $11242 = 0.0, $11243 = 0, $11244 = 0.0, $11245 = 0.0, $11246 = 0, $11247 = 0, $11248 = 0.0, $11249 = 0.0, $1125 = 0, $11250 = 0.0, $11251 = 0.0, $11252 = 0.0, $11253 = 0.0, $11254 = 0.0, $11255 = 0, $11256 = 0.0;
 var $11257 = 0, $11258 = 0.0, $11259 = 0.0, $1126 = 0, $11260 = 0.0, $11261 = 0, $11262 = 0.0, $11263 = 0.0, $11264 = 0, $11265 = 0.0, $11266 = 0, $11267 = 0.0, $11268 = 0.0, $11269 = 0.0, $1127 = 0, $11270 = 0, $11271 = 0.0, $11272 = 0.0, $11273 = 0.0, $11274 = 0.0;
 var $11275 = 0.0, $11276 = 0, $11277 = 0.0, $11278 = 0.0, $11279 = 0, $1128 = 0, $11280 = 0, $11281 = 0.0, $11282 = 0.0, $11283 = 0, $11284 = 0, $11285 = 0.0, $11286 = 0.0, $11287 = 0, $11288 = 0, $11289 = 0.0, $1129 = 0, $11290 = 0.0, $11291 = 0, $11292 = 0;
 var $11293 = 0.0, $11294 = 0.0, $11295 = 0, $11296 = 0, $11297 = 0.0, $11298 = 0.0, $11299 = 0, $113 = 0.0, $1130 = 0, $11300 = 0, $11301 = 0.0, $11302 = 0.0, $11303 = 0, $11304 = 0, $11305 = 0.0, $11306 = 0.0, $11307 = 0, $11308 = 0, $11309 = 0, $1131 = 0;
 var $11310 = 0, $11311 = 0, $11312 = 0.0, $11313 = 0, $11314 = 0, $11315 = 0, $11316 = 0, $11317 = 0, $11318 = 0, $11319 = 0, $1132 = 0, $11320 = 0, $11321 = 0, $11322 = 0, $11323 = 0, $11324 = 0, $11325 = 0, $11326 = 0, $11327 = 0, $11328 = 0;
 var $11329 = 0, $1133 = 0, $11330 = 0, $11331 = 0, $11332 = 0, $11333 = 0, $11334 = 0, $11335 = 0, $11336 = 0, $11337 = 0, $11338 = 0, $11339 = 0, $1134 = 0.0, $11340 = 0, $11341 = 0, $11342 = 0.0, $11343 = 0, $11344 = 0, $11345 = 0, $11346 = 0;
 var $11347 = 0, $11348 = 0, $11349 = 0, $1135 = 0, $11350 = 0, $11351 = 0, $11352 = 0, $11353 = 0, $11354 = 0, $11355 = 0, $11356 = 0, $11357 = 0, $11358 = 0, $11359 = 0, $1136 = 0, $11360 = 0, $11361 = 0, $11362 = 0, $11363 = 0, $11364 = 0;
 var $11365 = 0, $11366 = 0, $11367 = 0, $11368 = 0, $11369 = 0, $1137 = 0, $11370 = 0, $11371 = 0, $11372 = 0.0, $11373 = 0, $11374 = 0, $11375 = 0, $11376 = 0, $11377 = 0, $11378 = 0, $11379 = 0, $1138 = 0, $11380 = 0, $11381 = 0, $11382 = 0;
 var $11383 = 0, $11384 = 0, $11385 = 0, $11386 = 0, $11387 = 0, $11388 = 0, $11389 = 0, $1139 = 0, $11390 = 0, $11391 = 0, $11392 = 0, $11393 = 0, $11394 = 0, $11395 = 0, $11396 = 0, $11397 = 0, $11398 = 0, $11399 = 0, $114 = 0.0, $1140 = 0;
 var $11400 = 0, $11401 = 0, $11402 = 0.0, $11403 = 0, $11404 = 0, $11405 = 0, $11406 = 0, $11407 = 0, $11408 = 0, $11409 = 0, $1141 = 0, $11410 = 0, $11411 = 0, $11412 = 0, $11413 = 0, $11414 = 0, $11415 = 0, $11416 = 0, $11417 = 0, $11418 = 0;
 var $11419 = 0, $1142 = 0, $11420 = 0, $11421 = 0, $11422 = 0, $11423 = 0, $11424 = 0, $11425 = 0, $11426 = 0, $11427 = 0, $11428 = 0, $11429 = 0, $1143 = 0, $11430 = 0, $11431 = 0, $11432 = 0.0, $11433 = 0, $11434 = 0, $11435 = 0, $11436 = 0;
 var $11437 = 0, $11438 = 0, $11439 = 0, $1144 = 0, $11440 = 0, $11441 = 0, $11442 = 0, $11443 = 0, $11444 = 0, $11445 = 0, $11446 = 0, $11447 = 0, $11448 = 0, $11449 = 0, $1145 = 0, $11450 = 0, $11451 = 0, $11452 = 0, $11453 = 0, $11454 = 0;
 var $11455 = 0, $11456 = 0, $11457 = 0, $11458 = 0, $11459 = 0, $1146 = 0, $11460 = 0, $11461 = 0, $11462 = 0.0, $11463 = 0, $11464 = 0, $11465 = 0, $11466 = 0, $11467 = 0, $11468 = 0, $11469 = 0, $1147 = 0, $11470 = 0, $11471 = 0, $11472 = 0;
 var $11473 = 0, $11474 = 0, $11475 = 0, $11476 = 0, $11477 = 0, $11478 = 0, $11479 = 0, $1148 = 0, $11480 = 0, $11481 = 0, $11482 = 0, $11483 = 0, $11484 = 0, $11485 = 0, $11486 = 0, $11487 = 0, $11488 = 0, $11489 = 0, $1149 = 0, $11490 = 0;
 var $11491 = 0, $11492 = 0, $11493 = 0, $11494 = 0, $11495 = 0, $11496 = 0, $11497 = 0, $11498 = 0, $11499 = 0, $115 = 0.0, $1150 = 0, $11500 = 0, $11501 = 0, $11502 = 0, $11503 = 0, $11504 = 0, $11505 = 0, $11506 = 0, $11507 = 0, $11508 = 0;
 var $11509 = 0, $1151 = 0, $11510 = 0.0, $11511 = 0.0, $11512 = 0, $11513 = 0.0, $11514 = 0.0, $11515 = 0, $11516 = 0.0, $11517 = 0, $11518 = 0.0, $11519 = 0.0, $1152 = 0, $11520 = 0.0, $11521 = 0, $11522 = 0.0, $11523 = 0, $11524 = 0.0, $11525 = 0.0, $11526 = 0;
 var $11527 = 0.0, $11528 = 0, $11529 = 0.0, $1153 = 0, $11530 = 0.0, $11531 = 0.0, $11532 = 0, $11533 = 0.0, $11534 = 0, $11535 = 0.0, $11536 = 0.0, $11537 = 0, $11538 = 0.0, $11539 = 0, $1154 = 0, $11540 = 0.0, $11541 = 0.0, $11542 = 0.0, $11543 = 0, $11544 = 0.0;
 var $11545 = 0, $11546 = 0.0, $11547 = 0.0, $11548 = 0.0, $11549 = 0, $1155 = 0, $11550 = 0.0, $11551 = 0, $11552 = 0.0, $11553 = 0.0, $11554 = 0.0, $11555 = 0, $11556 = 0.0, $11557 = 0.0, $11558 = 0.0, $11559 = 0.0, $1156 = 0, $11560 = 0.0, $11561 = 0.0, $11562 = 0;
 var $11563 = 0.0, $11564 = 0, $11565 = 0, $11566 = 0.0, $11567 = 0, $11568 = 0.0, $11569 = 0.0, $1157 = 0, $11570 = 0, $11571 = 0, $11572 = 0.0, $11573 = 0, $11574 = 0.0, $11575 = 0.0, $11576 = 0, $11577 = 0.0, $11578 = 0, $11579 = 0.0, $1158 = 0, $11580 = 0;
 var $11581 = 0.0, $11582 = 0, $11583 = 0.0, $11584 = 0, $11585 = 0.0, $11586 = 0, $11587 = 0.0, $11588 = 0, $11589 = 0.0, $1159 = 0, $11590 = 0, $11591 = 0.0, $11592 = 0, $11593 = 0.0, $11594 = 0.0, $11595 = 0, $11596 = 0, $11597 = 0.0, $11598 = 0.0, $11599 = 0;
 var $116 = 0, $1160 = 0, $11600 = 0, $11601 = 0.0, $11602 = 0.0, $11603 = 0, $11604 = 0, $11605 = 0.0, $11606 = 0.0, $11607 = 0, $11608 = 0, $11609 = 0.0, $1161 = 0, $11610 = 0.0, $11611 = 0, $11612 = 0, $11613 = 0.0, $11614 = 0.0, $11615 = 0, $11616 = 0;
 var $11617 = 0.0, $11618 = 0.0, $11619 = 0, $1162 = 0, $11620 = 0, $11621 = 0.0, $11622 = 0.0, $11623 = 0, $11624 = 0, $11625 = 0.0, $11626 = 0.0, $11627 = 0, $11628 = 0, $11629 = 0.0, $1163 = 0, $11630 = 0.0, $11631 = 0, $11632 = 0, $11633 = 0.0, $11634 = 0.0;
 var $11635 = 0, $11636 = 0, $11637 = 0.0, $11638 = 0.0, $11639 = 0, $1164 = 0.0, $11640 = 0, $11641 = 0, $11642 = 0.0, $11643 = 0.0, $11644 = 0.0, $11645 = 0, $11646 = 0, $11647 = 0.0, $11648 = 0.0, $11649 = 0, $1165 = 0, $11650 = 0, $11651 = 0.0, $11652 = 0.0;
 var $11653 = 0.0, $11654 = 0, $11655 = 0.0, $11656 = 0.0, $11657 = 0.0, $11658 = 0.0, $11659 = 0.0, $1166 = 0, $11660 = 0, $11661 = 0, $11662 = 0.0, $11663 = 0.0, $11664 = 0, $11665 = 0.0, $11666 = 0.0, $11667 = 0.0, $11668 = 0.0, $11669 = 0.0, $1167 = 0, $11670 = 0.0;
 var $11671 = 0.0, $11672 = 0, $11673 = 0.0, $11674 = 0.0, $11675 = 0, $11676 = 0.0, $11677 = 0.0, $11678 = 0, $11679 = 0, $1168 = 0, $11680 = 0, $11681 = 0, $11682 = 0, $11683 = 0, $11684 = 0, $11685 = 0, $11686 = 0, $11687 = 0, $11688 = 0, $11689 = 0;
 var $1169 = 0, $11690 = 0, $11691 = 0, $11692 = 0, $11693 = 0, $11694 = 0, $11695 = 0, $11696 = 0, $11697 = 0, $11698 = 0, $11699 = 0.0, $117 = 0, $1170 = 0, $11700 = 0, $11701 = 0, $11702 = 0.0, $11703 = 0.0, $11704 = 0.0, $11705 = 0, $11706 = 0;
 var $11707 = 0, $11708 = 0.0, $11709 = 0, $1171 = 0, $11710 = 0, $11711 = 0.0, $11712 = 0.0, $11713 = 0.0, $11714 = 0, $11715 = 0, $11716 = 0, $11717 = 0, $11718 = 0, $11719 = 0, $1172 = 0, $11720 = 0, $11721 = 0, $11722 = 0, $11723 = 0, $11724 = 0;
 var $11725 = 0.0, $11726 = 0, $11727 = 0, $11728 = 0, $11729 = 0.0, $1173 = 0, $11730 = 0, $11731 = 0, $11732 = 0, $11733 = 0.0, $11734 = 0, $11735 = 0, $11736 = 0.0, $11737 = 0.0, $11738 = 0, $11739 = 0.0, $1174 = 0, $11740 = 0.0, $11741 = 0, $11742 = 0.0;
 var $11743 = 0.0, $11744 = 0.0, $11745 = 0.0, $11746 = 0.0, $11747 = 0.0, $11748 = 0.0, $11749 = 0, $1175 = 0, $11750 = 0.0, $11751 = 0.0, $11752 = 0.0, $11753 = 0.0, $11754 = 0, $11755 = 0.0, $11756 = 0.0, $11757 = 0, $11758 = 0, $11759 = 0.0, $1176 = 0, $11760 = 0.0;
 var $11761 = 0.0, $11762 = 0, $11763 = 0.0, $11764 = 0.0, $11765 = 0, $11766 = 0, $11767 = 0.0, $11768 = 0.0, $11769 = 0.0, $1177 = 0, $11770 = 0, $11771 = 0.0, $11772 = 0.0, $11773 = 0, $11774 = 0, $11775 = 0.0, $11776 = 0.0, $11777 = 0.0, $11778 = 0.0, $11779 = 0;
 var $1178 = 0, $11780 = 0.0, $11781 = 0.0, $11782 = 0, $11783 = 0, $11784 = 0.0, $11785 = 0.0, $11786 = 0.0, $11787 = 0.0, $11788 = 0, $11789 = 0.0, $1179 = 0, $11790 = 0.0, $11791 = 0, $11792 = 0, $11793 = 0.0, $11794 = 0.0, $11795 = 0.0, $11796 = 0.0, $11797 = 0.0;
 var $11798 = 0.0, $11799 = 0.0, $118 = 0.0, $1180 = 0, $11800 = 0, $11801 = 0.0, $11802 = 0, $11803 = 0.0, $11804 = 0.0, $11805 = 0.0, $11806 = 0, $11807 = 0, $11808 = 0.0, $11809 = 0.0, $1181 = 0, $11810 = 0.0, $11811 = 0.0, $11812 = 0, $11813 = 0.0, $11814 = 0;
 var $11815 = 0.0, $11816 = 0.0, $11817 = 0.0, $11818 = 0.0, $11819 = 0.0, $1182 = 0, $11820 = 0.0, $11821 = 0, $11822 = 0.0, $11823 = 0.0, $11824 = 0, $11825 = 0, $11826 = 0.0, $11827 = 0.0, $11828 = 0, $11829 = 0, $1183 = 0, $11830 = 0.0, $11831 = 0.0, $11832 = 0;
 var $11833 = 0, $11834 = 0.0, $11835 = 0.0, $11836 = 0, $11837 = 0, $11838 = 0.0, $11839 = 0.0, $1184 = 0, $11840 = 0, $11841 = 0, $11842 = 0.0, $11843 = 0.0, $11844 = 0, $11845 = 0, $11846 = 0.0, $11847 = 0.0, $11848 = 0, $11849 = 0, $1185 = 0, $11850 = 0.0;
 var $11851 = 0.0, $11852 = 0, $11853 = 0, $11854 = 0, $11855 = 0, $11856 = 0, $11857 = 0.0, $11858 = 0, $11859 = 0, $1186 = 0, $11860 = 0, $11861 = 0, $11862 = 0, $11863 = 0, $11864 = 0, $11865 = 0, $11866 = 0, $11867 = 0, $11868 = 0, $11869 = 0;
 var $1187 = 0, $11870 = 0, $11871 = 0, $11872 = 0, $11873 = 0, $11874 = 0, $11875 = 0, $11876 = 0, $11877 = 0, $11878 = 0, $11879 = 0, $1188 = 0, $11880 = 0, $11881 = 0, $11882 = 0, $11883 = 0, $11884 = 0, $11885 = 0, $11886 = 0, $11887 = 0.0;
 var $11888 = 0, $11889 = 0, $1189 = 0, $11890 = 0, $11891 = 0, $11892 = 0, $11893 = 0, $11894 = 0, $11895 = 0, $11896 = 0, $11897 = 0, $11898 = 0, $11899 = 0, $119 = 0.0, $1190 = 0, $11900 = 0, $11901 = 0, $11902 = 0, $11903 = 0, $11904 = 0;
 var $11905 = 0, $11906 = 0, $11907 = 0, $11908 = 0, $11909 = 0, $1191 = 0, $11910 = 0, $11911 = 0, $11912 = 0, $11913 = 0, $11914 = 0, $11915 = 0, $11916 = 0, $11917 = 0.0, $11918 = 0, $11919 = 0, $1192 = 0, $11920 = 0, $11921 = 0, $11922 = 0;
 var $11923 = 0, $11924 = 0, $11925 = 0, $11926 = 0, $11927 = 0, $11928 = 0, $11929 = 0, $1193 = 0, $11930 = 0, $11931 = 0, $11932 = 0, $11933 = 0, $11934 = 0, $11935 = 0, $11936 = 0, $11937 = 0, $11938 = 0, $11939 = 0, $1194 = 0.0, $11940 = 0;
 var $11941 = 0, $11942 = 0, $11943 = 0, $11944 = 0, $11945 = 0, $11946 = 0, $11947 = 0.0, $11948 = 0, $11949 = 0, $1195 = 0, $11950 = 0, $11951 = 0, $11952 = 0, $11953 = 0, $11954 = 0, $11955 = 0, $11956 = 0, $11957 = 0, $11958 = 0, $11959 = 0;
 var $1196 = 0, $11960 = 0, $11961 = 0, $11962 = 0, $11963 = 0, $11964 = 0, $11965 = 0, $11966 = 0, $11967 = 0, $11968 = 0, $11969 = 0, $1197 = 0, $11970 = 0, $11971 = 0, $11972 = 0, $11973 = 0, $11974 = 0, $11975 = 0, $11976 = 0, $11977 = 0.0;
 var $11978 = 0, $11979 = 0, $1198 = 0, $11980 = 0, $11981 = 0, $11982 = 0, $11983 = 0, $11984 = 0, $11985 = 0, $11986 = 0, $11987 = 0, $11988 = 0, $11989 = 0, $1199 = 0, $11990 = 0, $11991 = 0, $11992 = 0, $11993 = 0, $11994 = 0, $11995 = 0;
 var $11996 = 0, $11997 = 0, $11998 = 0, $11999 = 0, $12 = 0, $120 = 0.0, $1200 = 0, $12000 = 0, $12001 = 0, $12002 = 0, $12003 = 0, $12004 = 0, $12005 = 0, $12006 = 0, $12007 = 0.0, $12008 = 0, $12009 = 0, $1201 = 0, $12010 = 0, $12011 = 0;
 var $12012 = 0, $12013 = 0, $12014 = 0, $12015 = 0, $12016 = 0, $12017 = 0, $12018 = 0, $12019 = 0, $1202 = 0, $12020 = 0, $12021 = 0, $12022 = 0, $12023 = 0, $12024 = 0, $12025 = 0, $12026 = 0, $12027 = 0, $12028 = 0, $12029 = 0, $1203 = 0;
 var $12030 = 0, $12031 = 0, $12032 = 0, $12033 = 0, $12034 = 0, $12035 = 0, $12036 = 0, $12037 = 0, $12038 = 0, $12039 = 0, $1204 = 0, $12040 = 0, $12041 = 0, $12042 = 0, $12043 = 0, $12044 = 0, $12045 = 0, $12046 = 0, $12047 = 0, $12048 = 0;
 var $12049 = 0, $1205 = 0, $12050 = 0, $12051 = 0, $12052 = 0, $12053 = 0, $12054 = 0, $12055 = 0.0, $12056 = 0.0, $12057 = 0, $12058 = 0.0, $12059 = 0.0, $1206 = 0, $12060 = 0, $12061 = 0.0, $12062 = 0, $12063 = 0.0, $12064 = 0.0, $12065 = 0.0, $12066 = 0;
 var $12067 = 0.0, $12068 = 0, $12069 = 0.0, $1207 = 0, $12070 = 0.0, $12071 = 0, $12072 = 0.0, $12073 = 0, $12074 = 0.0, $12075 = 0.0, $12076 = 0.0, $12077 = 0, $12078 = 0.0, $12079 = 0.0, $1208 = 0, $12080 = 0.0, $12081 = 0.0, $12082 = 0.0, $12083 = 0, $12084 = 0.0;
 var $12085 = 0.0, $12086 = 0, $12087 = 0, $12088 = 0.0, $12089 = 0, $1209 = 0, $12090 = 0, $12091 = 0.0, $12092 = 0, $12093 = 0, $12094 = 0.0, $12095 = 0, $12096 = 0, $12097 = 0.0, $12098 = 0, $12099 = 0.0, $121 = 0.0, $1210 = 0, $12100 = 0, $12101 = 0.0;
 var $12102 = 0, $12103 = 0.0, $12104 = 0, $12105 = 0.0, $12106 = 0, $12107 = 0.0, $12108 = 0.0, $12109 = 0, $1211 = 0, $12110 = 0, $12111 = 0.0, $12112 = 0.0, $12113 = 0, $12114 = 0, $12115 = 0.0, $12116 = 0.0, $12117 = 0, $12118 = 0, $12119 = 0.0, $1212 = 0;
 var $12120 = 0.0, $12121 = 0, $12122 = 0, $12123 = 0.0, $12124 = 0.0, $12125 = 0, $12126 = 0, $12127 = 0.0, $12128 = 0.0, $12129 = 0, $1213 = 0, $12130 = 0, $12131 = 0.0, $12132 = 0.0, $12133 = 0, $12134 = 0, $12135 = 0.0, $12136 = 0.0, $12137 = 0, $12138 = 0;
 var $12139 = 0.0, $1214 = 0, $12140 = 0.0, $12141 = 0, $12142 = 0, $12143 = 0.0, $12144 = 0.0, $12145 = 0, $12146 = 0, $12147 = 0, $12148 = 0.0, $12149 = 0.0, $1215 = 0, $12150 = 0, $12151 = 0.0, $12152 = 0.0, $12153 = 0.0, $12154 = 0.0, $12155 = 0, $12156 = 0.0;
 var $12157 = 0.0, $12158 = 0, $12159 = 0.0, $1216 = 0, $12160 = 0.0, $12161 = 0.0, $12162 = 0.0, $12163 = 0, $12164 = 0, $12165 = 0.0, $12166 = 0.0, $12167 = 0.0, $12168 = 0.0, $12169 = 0, $1217 = 0, $12170 = 0.0, $12171 = 0, $12172 = 0.0, $12173 = 0.0, $12174 = 0.0;
 var $12175 = 0.0, $12176 = 0, $12177 = 0, $12178 = 0.0, $12179 = 0.0, $1218 = 0, $12180 = 0.0, $12181 = 0.0, $12182 = 0, $12183 = 0.0, $12184 = 0.0, $12185 = 0, $12186 = 0.0, $12187 = 0.0, $12188 = 0.0, $12189 = 0.0, $1219 = 0, $12190 = 0, $12191 = 0.0, $12192 = 0.0;
 var $12193 = 0.0, $12194 = 0.0, $12195 = 0, $12196 = 0.0, $12197 = 0, $12198 = 0.0, $12199 = 0.0, $122 = 0, $1220 = 0, $12200 = 0.0, $12201 = 0.0, $12202 = 0.0, $12203 = 0.0, $12204 = 0.0, $12205 = 0, $12206 = 0, $12207 = 0.0, $12208 = 0.0, $12209 = 0.0, $1221 = 0;
 var $12210 = 0.0, $12211 = 0, $12212 = 0.0, $12213 = 0.0, $12214 = 0, $12215 = 0.0, $12216 = 0.0, $12217 = 0.0, $12218 = 0, $12219 = 0.0, $1222 = 0, $12220 = 0.0, $12221 = 0.0, $12222 = 0.0, $12223 = 0, $12224 = 0.0, $12225 = 0, $12226 = 0.0, $12227 = 0.0, $12228 = 0.0;
 var $12229 = 0.0, $1223 = 0, $12230 = 0.0, $12231 = 0.0, $12232 = 0.0, $12233 = 0.0, $12234 = 0.0, $12235 = 0, $12236 = 0.0, $12237 = 0.0, $12238 = 0, $12239 = 0.0, $1224 = 0.0, $12240 = 0.0, $12241 = 0, $12242 = 0, $12243 = 0, $12244 = 0, $12245 = 0, $12246 = 0;
 var $12247 = 0, $12248 = 0, $12249 = 0, $1225 = 0, $12250 = 0, $12251 = 0, $12252 = 0, $12253 = 0, $12254 = 0, $12255 = 0, $12256 = 0, $12257 = 0, $12258 = 0, $12259 = 0, $1226 = 0, $12260 = 0, $12261 = 0, $12262 = 0.0, $12263 = 0, $12264 = 0;
 var $12265 = 0.0, $12266 = 0.0, $12267 = 0.0, $12268 = 0, $12269 = 0, $1227 = 0, $12270 = 0, $12271 = 0.0, $12272 = 0, $12273 = 0, $12274 = 0.0, $12275 = 0.0, $12276 = 0.0, $12277 = 0, $12278 = 0, $12279 = 0, $1228 = 0, $12280 = 0, $12281 = 0, $12282 = 0;
 var $12283 = 0, $12284 = 0, $12285 = 0, $12286 = 0, $12287 = 0, $12288 = 0.0, $12289 = 0, $1229 = 0, $12290 = 0, $12291 = 0, $12292 = 0.0, $12293 = 0, $12294 = 0, $12295 = 0, $12296 = 0.0, $12297 = 0, $12298 = 0, $12299 = 0.0, $123 = 0.0, $1230 = 0;
 var $12300 = 0.0, $12301 = 0, $12302 = 0.0, $12303 = 0.0, $12304 = 0, $12305 = 0.0, $12306 = 0.0, $12307 = 0.0, $12308 = 0.0, $12309 = 0, $1231 = 0, $12310 = 0.0, $12311 = 0.0, $12312 = 0.0, $12313 = 0.0, $12314 = 0.0, $12315 = 0, $12316 = 0.0, $12317 = 0.0, $12318 = 0.0;
 var $12319 = 0, $1232 = 0, $12320 = 0.0, $12321 = 0, $12322 = 0.0, $12323 = 0.0, $12324 = 0.0, $12325 = 0.0, $12326 = 0, $12327 = 0.0, $12328 = 0, $12329 = 0.0, $1233 = 0, $12330 = 0.0, $12331 = 0.0, $12332 = 0, $12333 = 0.0, $12334 = 0.0, $12335 = 0.0, $12336 = 0;
 var $12337 = 0.0, $12338 = 0.0, $12339 = 0.0, $1234 = 0, $12340 = 0.0, $12341 = 0, $12342 = 0.0, $12343 = 0.0, $12344 = 0, $12345 = 0.0, $12346 = 0.0, $12347 = 0, $12348 = 0.0, $12349 = 0, $1235 = 0, $12350 = 0.0, $12351 = 0.0, $12352 = 0.0, $12353 = 0, $12354 = 0.0;
 var $12355 = 0, $12356 = 0.0, $12357 = 0.0, $12358 = 0.0, $12359 = 0, $1236 = 0, $12360 = 0.0, $12361 = 0.0, $12362 = 0, $12363 = 0.0, $12364 = 0, $12365 = 0.0, $12366 = 0.0, $12367 = 0.0, $12368 = 0, $12369 = 0.0, $1237 = 0, $12370 = 0.0, $12371 = 0.0, $12372 = 0.0;
 var $12373 = 0.0, $12374 = 0, $12375 = 0, $12376 = 0.0, $12377 = 0.0, $12378 = 0.0, $12379 = 0.0, $1238 = 0, $12380 = 0.0, $12381 = 0.0, $12382 = 0.0, $12383 = 0, $12384 = 0.0, $12385 = 0, $12386 = 0.0, $12387 = 0.0, $12388 = 0.0, $12389 = 0, $1239 = 0, $12390 = 0.0;
 var $12391 = 0, $12392 = 0.0, $12393 = 0.0, $12394 = 0.0, $12395 = 0.0, $12396 = 0.0, $12397 = 0, $12398 = 0.0, $12399 = 0, $124 = 0, $1240 = 0, $12400 = 0.0, $12401 = 0.0, $12402 = 0.0, $12403 = 0.0, $12404 = 0.0, $12405 = 0, $12406 = 0.0, $12407 = 0.0, $12408 = 0.0;
 var $12409 = 0.0, $1241 = 0, $12410 = 0, $12411 = 0.0, $12412 = 0.0, $12413 = 0.0, $12414 = 0.0, $12415 = 0.0, $12416 = 0, $12417 = 0.0, $12418 = 0.0, $12419 = 0, $1242 = 0, $12420 = 0.0, $12421 = 0.0, $12422 = 0, $12423 = 0, $12424 = 0.0, $12425 = 0.0, $12426 = 0;
 var $12427 = 0, $12428 = 0.0, $12429 = 0.0, $1243 = 0, $12430 = 0, $12431 = 0, $12432 = 0.0, $12433 = 0.0, $12434 = 0, $12435 = 0, $12436 = 0.0, $12437 = 0.0, $12438 = 0, $12439 = 0, $1244 = 0, $12440 = 0.0, $12441 = 0.0, $12442 = 0, $12443 = 0, $12444 = 0.0;
 var $12445 = 0.0, $12446 = 0, $12447 = 0, $12448 = 0.0, $12449 = 0.0, $1245 = 0, $12450 = 0, $12451 = 0, $12452 = 0, $12453 = 0, $12454 = 0, $12455 = 0.0, $12456 = 0, $12457 = 0, $12458 = 0, $12459 = 0, $1246 = 0, $12460 = 0, $12461 = 0, $12462 = 0;
 var $12463 = 0, $12464 = 0, $12465 = 0, $12466 = 0, $12467 = 0, $12468 = 0, $12469 = 0, $1247 = 0, $12470 = 0, $12471 = 0, $12472 = 0, $12473 = 0, $12474 = 0, $12475 = 0, $12476 = 0, $12477 = 0, $12478 = 0, $12479 = 0, $1248 = 0, $12480 = 0;
 var $12481 = 0, $12482 = 0, $12483 = 0, $12484 = 0, $12485 = 0.0, $12486 = 0, $12487 = 0, $12488 = 0, $12489 = 0, $1249 = 0, $12490 = 0, $12491 = 0, $12492 = 0, $12493 = 0, $12494 = 0, $12495 = 0, $12496 = 0, $12497 = 0, $12498 = 0, $12499 = 0;
 var $125 = 0.0, $1250 = 0, $12500 = 0, $12501 = 0, $12502 = 0, $12503 = 0, $12504 = 0, $12505 = 0, $12506 = 0, $12507 = 0, $12508 = 0, $12509 = 0, $1251 = 0, $12510 = 0, $12511 = 0, $12512 = 0, $12513 = 0, $12514 = 0, $12515 = 0.0, $12516 = 0;
 var $12517 = 0, $12518 = 0, $12519 = 0, $1252 = 0, $12520 = 0, $12521 = 0, $12522 = 0, $12523 = 0, $12524 = 0, $12525 = 0, $12526 = 0, $12527 = 0, $12528 = 0, $12529 = 0, $1253 = 0, $12530 = 0, $12531 = 0, $12532 = 0, $12533 = 0, $12534 = 0;
 var $12535 = 0, $12536 = 0, $12537 = 0, $12538 = 0, $12539 = 0, $1254 = 0.0, $12540 = 0, $12541 = 0, $12542 = 0, $12543 = 0, $12544 = 0, $12545 = 0.0, $12546 = 0, $12547 = 0, $12548 = 0, $12549 = 0, $1255 = 0, $12550 = 0, $12551 = 0, $12552 = 0;
 var $12553 = 0, $12554 = 0, $12555 = 0, $12556 = 0, $12557 = 0, $12558 = 0, $12559 = 0, $1256 = 0, $12560 = 0, $12561 = 0, $12562 = 0, $12563 = 0, $12564 = 0, $12565 = 0, $12566 = 0, $12567 = 0, $12568 = 0, $12569 = 0, $1257 = 0, $12570 = 0;
 var $12571 = 0, $12572 = 0, $12573 = 0, $12574 = 0, $12575 = 0.0, $12576 = 0, $12577 = 0, $12578 = 0, $12579 = 0, $1258 = 0, $12580 = 0, $12581 = 0, $12582 = 0, $12583 = 0, $12584 = 0, $12585 = 0, $12586 = 0, $12587 = 0, $12588 = 0, $12589 = 0;
 var $1259 = 0, $12590 = 0, $12591 = 0, $12592 = 0, $12593 = 0, $12594 = 0, $12595 = 0, $12596 = 0, $12597 = 0, $12598 = 0, $12599 = 0, $126 = 0.0, $1260 = 0, $12600 = 0, $12601 = 0, $12602 = 0, $12603 = 0, $12604 = 0, $12605 = 0.0, $12606 = 0;
 var $12607 = 0, $12608 = 0, $12609 = 0, $1261 = 0, $12610 = 0, $12611 = 0, $12612 = 0, $12613 = 0, $12614 = 0, $12615 = 0, $12616 = 0, $12617 = 0, $12618 = 0, $12619 = 0, $1262 = 0, $12620 = 0, $12621 = 0, $12622 = 0, $12623 = 0, $12624 = 0;
 var $12625 = 0, $12626 = 0, $12627 = 0, $12628 = 0, $12629 = 0, $1263 = 0, $12630 = 0, $12631 = 0, $12632 = 0, $12633 = 0, $12634 = 0, $12635 = 0, $12636 = 0, $12637 = 0, $12638 = 0, $12639 = 0, $1264 = 0, $12640 = 0, $12641 = 0, $12642 = 0;
 var $12643 = 0, $12644 = 0, $12645 = 0, $12646 = 0, $12647 = 0, $12648 = 0, $12649 = 0, $1265 = 0, $12650 = 0, $12651 = 0, $12652 = 0, $12653 = 0.0, $12654 = 0, $12655 = 0.0, $12656 = 0.0, $12657 = 0, $12658 = 0.0, $12659 = 0.0, $1266 = 0, $12660 = 0;
 var $12661 = 0.0, $12662 = 0, $12663 = 0.0, $12664 = 0.0, $12665 = 0, $12666 = 0.0, $12667 = 0.0, $12668 = 0.0, $12669 = 0.0, $1267 = 0, $12670 = 0.0, $12671 = 0, $12672 = 0.0, $12673 = 0.0, $12674 = 0.0, $12675 = 0.0, $12676 = 0.0, $12677 = 0.0, $12678 = 0, $12679 = 0.0;
 var $1268 = 0, $12680 = 0.0, $12681 = 0, $12682 = 0, $12683 = 0.0, $12684 = 0, $12685 = 0, $12686 = 0.0, $12687 = 0, $12688 = 0, $12689 = 0.0, $1269 = 0, $12690 = 0, $12691 = 0, $12692 = 0.0, $12693 = 0, $12694 = 0.0, $12695 = 0, $12696 = 0.0, $12697 = 0;
 var $12698 = 0.0, $12699 = 0, $127 = 0.0, $1270 = 0, $12700 = 0.0, $12701 = 0, $12702 = 0.0, $12703 = 0.0, $12704 = 0.0, $12705 = 0, $12706 = 0, $12707 = 0.0, $12708 = 0.0, $12709 = 0.0, $1271 = 0, $12710 = 0.0, $12711 = 0.0, $12712 = 0.0, $12713 = 0.0, $12714 = 0;
 var $12715 = 0.0, $12716 = 0.0, $12717 = 0, $12718 = 0, $12719 = 0.0, $1272 = 0, $12720 = 0.0, $12721 = 0, $12722 = 0, $12723 = 0.0, $12724 = 0.0, $12725 = 0, $12726 = 0, $12727 = 0.0, $12728 = 0.0, $12729 = 0, $1273 = 0, $12730 = 0, $12731 = 0.0, $12732 = 0.0;
 var $12733 = 0, $12734 = 0, $12735 = 0.0, $12736 = 0.0, $12737 = 0, $12738 = 0, $12739 = 0.0, $1274 = 0, $12740 = 0.0, $12741 = 0, $12742 = 0, $12743 = 0.0, $12744 = 0.0, $12745 = 0, $12746 = 0, $12747 = 0.0, $12748 = 0.0, $12749 = 0, $1275 = 0, $12750 = 0;
 var $12751 = 0.0, $12752 = 0.0, $12753 = 0, $12754 = 0, $12755 = 0, $12756 = 0.0, $12757 = 0.0, $12758 = 0, $12759 = 0.0, $1276 = 0, $12760 = 0.0, $12761 = 0.0, $12762 = 0.0, $12763 = 0, $12764 = 0.0, $12765 = 0, $12766 = 0.0, $12767 = 0.0, $12768 = 0.0, $12769 = 0.0;
 var $1277 = 0, $12770 = 0, $12771 = 0, $12772 = 0.0, $12773 = 0.0, $12774 = 0, $12775 = 0.0, $12776 = 0.0, $12777 = 0, $12778 = 0.0, $12779 = 0.0, $1278 = 0, $12780 = 0.0, $12781 = 0.0, $12782 = 0.0, $12783 = 0.0, $12784 = 0, $12785 = 0, $12786 = 0.0, $12787 = 0.0;
 var $12788 = 0.0, $12789 = 0.0, $1279 = 0, $12790 = 0, $12791 = 0.0, $12792 = 0, $12793 = 0.0, $12794 = 0.0, $12795 = 0.0, $12796 = 0.0, $12797 = 0, $12798 = 0.0, $12799 = 0.0, $128 = 0, $1280 = 0, $12800 = 0, $12801 = 0.0, $12802 = 0.0, $12803 = 0, $12804 = 0.0;
 var $12805 = 0.0, $12806 = 0.0, $12807 = 0.0, $12808 = 0.0, $12809 = 0.0, $1281 = 0, $12810 = 0.0, $12811 = 0.0, $12812 = 0.0, $12813 = 0, $12814 = 0, $12815 = 0.0, $12816 = 0.0, $12817 = 0.0, $12818 = 0.0, $12819 = 0, $1282 = 0, $12820 = 0.0, $12821 = 0, $12822 = 0.0;
 var $12823 = 0.0, $12824 = 0.0, $12825 = 0, $12826 = 0.0, $12827 = 0.0, $12828 = 0, $12829 = 0.0, $1283 = 0, $12830 = 0.0, $12831 = 0, $12832 = 0.0, $12833 = 0.0, $12834 = 0.0, $12835 = 0.0, $12836 = 0.0, $12837 = 0.0, $12838 = 0.0, $12839 = 0.0, $1284 = 0, $12840 = 0.0;
 var $12841 = 0.0, $12842 = 0.0, $12843 = 0, $12844 = 0.0, $12845 = 0.0, $12846 = 0, $12847 = 0.0, $12848 = 0.0, $12849 = 0, $1285 = 0, $12850 = 0, $12851 = 0, $12852 = 0, $12853 = 0, $12854 = 0, $12855 = 0, $12856 = 0, $12857 = 0, $12858 = 0, $12859 = 0;
 var $1286 = 0, $12860 = 0, $12861 = 0, $12862 = 0, $12863 = 0, $12864 = 0, $12865 = 0, $12866 = 0, $12867 = 0, $12868 = 0, $12869 = 0, $1287 = 0, $12870 = 0.0, $12871 = 0, $12872 = 0, $12873 = 0.0, $12874 = 0.0, $12875 = 0.0, $12876 = 0, $12877 = 0;
 var $12878 = 0, $12879 = 0.0, $1288 = 0, $12880 = 0, $12881 = 0, $12882 = 0.0, $12883 = 0.0, $12884 = 0.0, $12885 = 0, $12886 = 0, $12887 = 0, $12888 = 0, $12889 = 0, $1289 = 0, $12890 = 0, $12891 = 0, $12892 = 0, $12893 = 0, $12894 = 0, $12895 = 0;
 var $12896 = 0.0, $12897 = 0, $12898 = 0, $12899 = 0, $129 = 0, $1290 = 0, $12900 = 0.0, $12901 = 0, $12902 = 0, $12903 = 0, $12904 = 0.0, $12905 = 0, $12906 = 0, $12907 = 0.0, $12908 = 0.0, $12909 = 0, $1291 = 0, $12910 = 0.0, $12911 = 0.0, $12912 = 0;
 var $12913 = 0.0, $12914 = 0.0, $12915 = 0.0, $12916 = 0.0, $12917 = 0, $12918 = 0.0, $12919 = 0.0, $1292 = 0, $12920 = 0.0, $12921 = 0.0, $12922 = 0.0, $12923 = 0, $12924 = 0.0, $12925 = 0.0, $12926 = 0.0, $12927 = 0, $12928 = 0.0, $12929 = 0, $1293 = 0, $12930 = 0.0;
 var $12931 = 0.0, $12932 = 0.0, $12933 = 0.0, $12934 = 0, $12935 = 0.0, $12936 = 0, $12937 = 0.0, $12938 = 0.0, $12939 = 0.0, $1294 = 0, $12940 = 0, $12941 = 0.0, $12942 = 0, $12943 = 0.0, $12944 = 0.0, $12945 = 0, $12946 = 0.0, $12947 = 0, $12948 = 0.0, $12949 = 0.0;
 var $1295 = 0, $12950 = 0.0, $12951 = 0.0, $12952 = 0.0, $12953 = 0.0, $12954 = 0, $12955 = 0, $12956 = 0.0, $12957 = 0.0, $12958 = 0.0, $12959 = 0, $1296 = 0, $12960 = 0.0, $12961 = 0.0, $12962 = 0, $12963 = 0.0, $12964 = 0.0, $12965 = 0.0, $12966 = 0.0, $12967 = 0;
 var $12968 = 0, $12969 = 0.0, $1297 = 0, $12970 = 0, $12971 = 0.0, $12972 = 0.0, $12973 = 0, $12974 = 0.0, $12975 = 0.0, $12976 = 0.0, $12977 = 0.0, $12978 = 0.0, $12979 = 0.0, $1298 = 0, $12980 = 0.0, $12981 = 0.0, $12982 = 0, $12983 = 0, $12984 = 0.0, $12985 = 0;
 var $12986 = 0.0, $12987 = 0.0, $12988 = 0.0, $12989 = 0.0, $1299 = 0, $12990 = 0.0, $12991 = 0, $12992 = 0.0, $12993 = 0.0, $12994 = 0.0, $12995 = 0.0, $12996 = 0.0, $12997 = 0, $12998 = 0.0, $12999 = 0, $13 = 0.0, $130 = 0.0, $1300 = 0, $13000 = 0.0, $13001 = 0.0;
 var $13002 = 0.0, $13003 = 0.0, $13004 = 0.0, $13005 = 0, $13006 = 0.0, $13007 = 0, $13008 = 0.0, $13009 = 0.0, $1301 = 0, $13010 = 0.0, $13011 = 0.0, $13012 = 0.0, $13013 = 0, $13014 = 0, $13015 = 0.0, $13016 = 0.0, $13017 = 0.0, $13018 = 0.0, $13019 = 0, $1302 = 0;
 var $13020 = 0.0, $13021 = 0.0, $13022 = 0.0, $13023 = 0.0, $13024 = 0.0, $13025 = 0.0, $13026 = 0.0, $13027 = 0, $13028 = 0.0, $13029 = 0.0, $1303 = 0, $13030 = 0, $13031 = 0, $13032 = 0.0, $13033 = 0.0, $13034 = 0, $13035 = 0, $13036 = 0.0, $13037 = 0.0, $13038 = 0;
 var $13039 = 0, $1304 = 0.0, $13040 = 0.0, $13041 = 0.0, $13042 = 0, $13043 = 0, $13044 = 0.0, $13045 = 0.0, $13046 = 0, $13047 = 0, $13048 = 0.0, $13049 = 0.0, $1305 = 0.0, $13050 = 0, $13051 = 0, $13052 = 0.0, $13053 = 0.0, $13054 = 0, $13055 = 0, $13056 = 0.0;
 var $13057 = 0.0, $13058 = 0, $13059 = 0, $1306 = 0.0, $13060 = 0, $13061 = 0, $13062 = 0, $13063 = 0.0, $13064 = 0, $13065 = 0, $13066 = 0, $13067 = 0, $13068 = 0, $13069 = 0, $1307 = 0.0, $13070 = 0, $13071 = 0, $13072 = 0, $13073 = 0, $13074 = 0;
 var $13075 = 0, $13076 = 0, $13077 = 0, $13078 = 0, $13079 = 0, $1308 = 0.0, $13080 = 0, $13081 = 0, $13082 = 0, $13083 = 0, $13084 = 0, $13085 = 0, $13086 = 0, $13087 = 0, $13088 = 0, $13089 = 0, $1309 = 0.0, $13090 = 0, $13091 = 0, $13092 = 0;
 var $13093 = 0.0, $13094 = 0, $13095 = 0, $13096 = 0, $13097 = 0, $13098 = 0, $13099 = 0, $131 = 0, $1310 = 0, $13100 = 0, $13101 = 0, $13102 = 0, $13103 = 0, $13104 = 0, $13105 = 0, $13106 = 0, $13107 = 0, $13108 = 0, $13109 = 0, $1311 = 0.0;
 var $13110 = 0, $13111 = 0, $13112 = 0, $13113 = 0, $13114 = 0, $13115 = 0, $13116 = 0, $13117 = 0, $13118 = 0, $13119 = 0, $1312 = 0.0, $13120 = 0, $13121 = 0, $13122 = 0, $13123 = 0.0, $13124 = 0, $13125 = 0, $13126 = 0, $13127 = 0, $13128 = 0;
 var $13129 = 0, $1313 = 0, $13130 = 0, $13131 = 0, $13132 = 0, $13133 = 0, $13134 = 0, $13135 = 0, $13136 = 0, $13137 = 0, $13138 = 0, $13139 = 0, $1314 = 0, $13140 = 0, $13141 = 0, $13142 = 0, $13143 = 0, $13144 = 0, $13145 = 0, $13146 = 0;
 var $13147 = 0, $13148 = 0, $13149 = 0, $1315 = 0.0, $13150 = 0, $13151 = 0, $13152 = 0, $13153 = 0.0, $13154 = 0, $13155 = 0, $13156 = 0, $13157 = 0, $13158 = 0, $13159 = 0, $1316 = 0, $13160 = 0, $13161 = 0, $13162 = 0, $13163 = 0, $13164 = 0;
 var $13165 = 0, $13166 = 0, $13167 = 0, $13168 = 0, $13169 = 0, $1317 = 0, $13170 = 0, $13171 = 0, $13172 = 0, $13173 = 0, $13174 = 0, $13175 = 0, $13176 = 0, $13177 = 0, $13178 = 0, $13179 = 0, $1318 = 0.0, $13180 = 0, $13181 = 0, $13182 = 0;
 var $13183 = 0.0, $13184 = 0, $13185 = 0, $13186 = 0, $13187 = 0, $13188 = 0, $13189 = 0, $1319 = 0, $13190 = 0, $13191 = 0, $13192 = 0, $13193 = 0, $13194 = 0, $13195 = 0, $13196 = 0, $13197 = 0, $13198 = 0, $13199 = 0, $132 = 0.0, $1320 = 0;
 var $13200 = 0, $13201 = 0, $13202 = 0, $13203 = 0, $13204 = 0, $13205 = 0, $13206 = 0, $13207 = 0, $13208 = 0, $13209 = 0, $1321 = 0.0, $13210 = 0, $13211 = 0, $13212 = 0, $13213 = 0.0, $13214 = 0, $13215 = 0, $13216 = 0, $13217 = 0, $13218 = 0;
 var $13219 = 0, $1322 = 0, $13220 = 0, $13221 = 0, $13222 = 0, $13223 = 0, $13224 = 0, $13225 = 0, $13226 = 0, $13227 = 0, $13228 = 0, $13229 = 0, $1323 = 0, $13230 = 0, $13231 = 0, $13232 = 0, $13233 = 0, $13234 = 0, $13235 = 0, $13236 = 0;
 var $13237 = 0, $13238 = 0, $13239 = 0, $1324 = 0.0, $13240 = 0, $13241 = 0, $13242 = 0, $13243 = 0, $13244 = 0, $13245 = 0, $13246 = 0, $13247 = 0, $13248 = 0, $13249 = 0, $1325 = 0, $13250 = 0, $13251 = 0, $13252 = 0, $13253 = 0, $13254 = 0;
 var $13255 = 0, $13256 = 0, $13257 = 0, $13258 = 0, $13259 = 0, $1326 = 0.0, $13260 = 0, $13261 = 0.0, $13262 = 0, $13263 = 0.0, $13264 = 0.0, $13265 = 0.0, $13266 = 0, $13267 = 0.0, $13268 = 0.0, $13269 = 0, $1327 = 0.0, $13270 = 0.0, $13271 = 0.0, $13272 = 0;
 var $13273 = 0.0, $13274 = 0.0, $13275 = 0, $13276 = 0.0, $13277 = 0.0, $13278 = 0, $13279 = 0.0, $1328 = 0, $13280 = 0.0, $13281 = 0.0, $13282 = 0.0, $13283 = 0.0, $13284 = 0.0, $13285 = 0, $13286 = 0.0, $13287 = 0, $13288 = 0.0, $13289 = 0, $1329 = 0, $13290 = 0;
 var $13291 = 0.0, $13292 = 0, $13293 = 0.0, $13294 = 0, $13295 = 0, $13296 = 0.0, $13297 = 0, $13298 = 0.0, $13299 = 0.0, $133 = 0.0, $1330 = 0.0, $13300 = 0, $13301 = 0.0, $13302 = 0.0, $13303 = 0.0, $13304 = 0.0, $13305 = 0.0, $13306 = 0, $13307 = 0, $13308 = 0.0;
 var $13309 = 0.0, $1331 = 0.0, $13310 = 0.0, $13311 = 0.0, $13312 = 0, $13313 = 0.0, $13314 = 0.0, $13315 = 0.0, $13316 = 0.0, $13317 = 0.0, $13318 = 0, $13319 = 0, $1332 = 0, $13320 = 0.0, $13321 = 0.0, $13322 = 0.0, $13323 = 0.0, $13324 = 0, $13325 = 0.0, $13326 = 0.0;
 var $13327 = 0.0, $13328 = 0.0, $13329 = 0.0, $1333 = 0, $13330 = 0, $13331 = 0, $13332 = 0.0, $13333 = 0.0, $13334 = 0.0, $13335 = 0.0, $13336 = 0.0, $13337 = 0, $13338 = 0.0, $13339 = 0.0, $1334 = 0.0, $13340 = 0.0, $13341 = 0.0, $13342 = 0.0, $13343 = 0, $13344 = 0.0;
 var $13345 = 0.0, $13346 = 0, $13347 = 0, $13348 = 0.0, $13349 = 0.0, $1335 = 0.0, $13350 = 0, $13351 = 0, $13352 = 0.0, $13353 = 0.0, $13354 = 0, $13355 = 0, $13356 = 0.0, $13357 = 0.0, $13358 = 0, $13359 = 0, $1336 = 0, $13360 = 0.0, $13361 = 0.0, $13362 = 0;
 var $13363 = 0, $13364 = 0.0, $13365 = 0.0, $13366 = 0, $13367 = 0, $13368 = 0.0, $13369 = 0.0, $1337 = 0, $13370 = 0, $13371 = 0, $13372 = 0.0, $13373 = 0.0, $13374 = 0, $13375 = 0, $13376 = 0.0, $13377 = 0.0, $13378 = 0, $13379 = 0, $1338 = 0.0, $13380 = 0.0;
 var $13381 = 0.0, $13382 = 0, $13383 = 0, $13384 = 0, $13385 = 0.0, $13386 = 0.0, $13387 = 0, $13388 = 0, $13389 = 0.0, $1339 = 0.0, $13390 = 0.0, $13391 = 0, $13392 = 0, $13393 = 0.0, $13394 = 0.0, $13395 = 0, $13396 = 0.0, $13397 = 0.0, $13398 = 0.0, $13399 = 0.0;
 var $134 = 0, $1340 = 0, $13400 = 0.0, $13401 = 0, $13402 = 0, $13403 = 0.0, $13404 = 0, $13405 = 0.0, $13406 = 0.0, $13407 = 0.0, $13408 = 0.0, $13409 = 0.0, $1341 = 0, $13410 = 0.0, $13411 = 0.0, $13412 = 0, $13413 = 0.0, $13414 = 0.0, $13415 = 0, $13416 = 0.0;
 var $13417 = 0.0, $13418 = 0, $13419 = 0, $1342 = 0.0, $13420 = 0, $13421 = 0, $13422 = 0, $13423 = 0, $13424 = 0, $13425 = 0, $13426 = 0, $13427 = 0, $13428 = 0, $13429 = 0, $1343 = 0.0, $13430 = 0, $13431 = 0, $13432 = 0, $13433 = 0, $13434 = 0;
 var $13435 = 0, $13436 = 0, $13437 = 0, $13438 = 0, $13439 = 0.0, $1344 = 0, $13440 = 0, $13441 = 0, $13442 = 0.0, $13443 = 0.0, $13444 = 0.0, $13445 = 0, $13446 = 0, $13447 = 0, $13448 = 0.0, $13449 = 0, $1345 = 0, $13450 = 0, $13451 = 0.0, $13452 = 0.0;
 var $13453 = 0.0, $13454 = 0, $13455 = 0, $13456 = 0, $13457 = 0, $13458 = 0, $13459 = 0, $1346 = 0.0, $13460 = 0, $13461 = 0, $13462 = 0, $13463 = 0, $13464 = 0, $13465 = 0.0, $13466 = 0, $13467 = 0, $13468 = 0, $13469 = 0.0, $1347 = 0.0, $13470 = 0;
 var $13471 = 0, $13472 = 0, $13473 = 0.0, $13474 = 0, $13475 = 0, $13476 = 0.0, $13477 = 0.0, $13478 = 0, $13479 = 0.0, $1348 = 0, $13480 = 0.0, $13481 = 0, $13482 = 0.0, $13483 = 0.0, $13484 = 0.0, $13485 = 0.0, $13486 = 0, $13487 = 0.0, $13488 = 0, $13489 = 0.0;
 var $1349 = 0, $13490 = 0.0, $13491 = 0.0, $13492 = 0.0, $13493 = 0, $13494 = 0.0, $13495 = 0.0, $13496 = 0.0, $13497 = 0.0, $13498 = 0, $13499 = 0, $135 = 0.0, $1350 = 0, $13500 = 0.0, $13501 = 0.0, $13502 = 0.0, $13503 = 0.0, $13504 = 0, $13505 = 0, $13506 = 0.0;
 var $13507 = 0.0, $13508 = 0.0, $13509 = 0, $1351 = 0.0, $13510 = 0.0, $13511 = 0.0, $13512 = 0, $13513 = 0.0, $13514 = 0.0, $13515 = 0.0, $13516 = 0.0, $13517 = 0, $13518 = 0.0, $13519 = 0.0, $1352 = 0, $13520 = 0, $13521 = 0, $13522 = 0.0, $13523 = 0, $13524 = 0.0;
 var $13525 = 0.0, $13526 = 0.0, $13527 = 0.0, $13528 = 0.0, $13529 = 0, $1353 = 0.0, $13530 = 0, $13531 = 0.0, $13532 = 0, $13533 = 0.0, $13534 = 0.0, $13535 = 0.0, $13536 = 0.0, $13537 = 0, $13538 = 0.0, $13539 = 0.0, $1354 = 0, $13540 = 0.0, $13541 = 0.0, $13542 = 0.0;
 var $13543 = 0, $13544 = 0, $13545 = 0.0, $13546 = 0, $13547 = 0.0, $13548 = 0.0, $13549 = 0, $1355 = 0, $13550 = 0.0, $13551 = 0.0, $13552 = 0.0, $13553 = 0.0, $13554 = 0.0, $13555 = 0.0, $13556 = 0.0, $13557 = 0.0, $13558 = 0, $13559 = 0.0, $1356 = 0, $13560 = 0.0;
 var $13561 = 0, $13562 = 0, $13563 = 0.0, $13564 = 0.0, $13565 = 0, $13566 = 0, $13567 = 0.0, $13568 = 0.0, $13569 = 0, $1357 = 0.0, $13570 = 0, $13571 = 0.0, $13572 = 0.0, $13573 = 0, $13574 = 0, $13575 = 0.0, $13576 = 0.0, $13577 = 0, $13578 = 0, $13579 = 0.0;
 var $1358 = 0.0, $13580 = 0.0, $13581 = 0, $13582 = 0, $13583 = 0.0, $13584 = 0.0, $13585 = 0, $13586 = 0, $13587 = 0.0, $13588 = 0.0, $13589 = 0, $1359 = 0.0, $13590 = 0, $13591 = 0, $13592 = 0, $13593 = 0, $13594 = 0.0, $13595 = 0, $13596 = 0, $13597 = 0;
 var $13598 = 0, $13599 = 0, $136 = 0.0, $1360 = 0.0, $13600 = 0, $13601 = 0, $13602 = 0, $13603 = 0, $13604 = 0, $13605 = 0, $13606 = 0, $13607 = 0, $13608 = 0, $13609 = 0, $1361 = 0.0, $13610 = 0, $13611 = 0, $13612 = 0, $13613 = 0, $13614 = 0;
 var $13615 = 0, $13616 = 0, $13617 = 0, $13618 = 0, $13619 = 0, $1362 = 0.0, $13620 = 0, $13621 = 0, $13622 = 0, $13623 = 0, $13624 = 0.0, $13625 = 0, $13626 = 0, $13627 = 0, $13628 = 0, $13629 = 0, $1363 = 0.0, $13630 = 0, $13631 = 0, $13632 = 0;
 var $13633 = 0, $13634 = 0, $13635 = 0, $13636 = 0, $13637 = 0, $13638 = 0, $13639 = 0, $1364 = 0.0, $13640 = 0, $13641 = 0, $13642 = 0, $13643 = 0, $13644 = 0, $13645 = 0, $13646 = 0, $13647 = 0, $13648 = 0, $13649 = 0, $1365 = 0.0, $13650 = 0;
 var $13651 = 0, $13652 = 0, $13653 = 0, $13654 = 0.0, $13655 = 0, $13656 = 0, $13657 = 0, $13658 = 0, $13659 = 0, $1366 = 0.0, $13660 = 0, $13661 = 0, $13662 = 0, $13663 = 0, $13664 = 0, $13665 = 0, $13666 = 0, $13667 = 0, $13668 = 0, $13669 = 0;
 var $1367 = 0, $13670 = 0, $13671 = 0, $13672 = 0, $13673 = 0, $13674 = 0, $13675 = 0, $13676 = 0, $13677 = 0, $13678 = 0, $13679 = 0, $1368 = 0, $13680 = 0, $13681 = 0, $13682 = 0, $13683 = 0, $13684 = 0.0, $13685 = 0, $13686 = 0, $13687 = 0;
 var $13688 = 0, $13689 = 0, $1369 = 0.0, $13690 = 0, $13691 = 0, $13692 = 0, $13693 = 0, $13694 = 0, $13695 = 0, $13696 = 0, $13697 = 0, $13698 = 0, $13699 = 0, $137 = 0.0, $1370 = 0.0, $13700 = 0, $13701 = 0, $13702 = 0, $13703 = 0, $13704 = 0;
 var $13705 = 0, $13706 = 0, $13707 = 0, $13708 = 0, $13709 = 0, $1371 = 0, $13710 = 0, $13711 = 0, $13712 = 0, $13713 = 0, $13714 = 0.0, $13715 = 0, $13716 = 0, $13717 = 0, $13718 = 0, $13719 = 0, $1372 = 0, $13720 = 0, $13721 = 0, $13722 = 0;
 var $13723 = 0, $13724 = 0, $13725 = 0, $13726 = 0, $13727 = 0, $13728 = 0, $13729 = 0, $1373 = 0.0, $13730 = 0, $13731 = 0, $13732 = 0, $13733 = 0, $13734 = 0, $13735 = 0, $13736 = 0, $13737 = 0, $13738 = 0, $13739 = 0, $1374 = 0.0, $13740 = 0;
 var $13741 = 0, $13742 = 0, $13743 = 0, $13744 = 0.0, $13745 = 0, $13746 = 0, $13747 = 0, $13748 = 0, $13749 = 0, $1375 = 0, $13750 = 0, $13751 = 0, $13752 = 0, $13753 = 0, $13754 = 0, $13755 = 0, $13756 = 0, $13757 = 0, $13758 = 0, $13759 = 0;
 var $1376 = 0.0, $13760 = 0, $13761 = 0, $13762 = 0, $13763 = 0, $13764 = 0, $13765 = 0, $13766 = 0, $13767 = 0, $13768 = 0, $13769 = 0, $1377 = 0, $13770 = 0, $13771 = 0, $13772 = 0, $13773 = 0, $13774 = 0, $13775 = 0, $13776 = 0, $13777 = 0;
 var $13778 = 0, $13779 = 0, $1378 = 0.0, $13780 = 0, $13781 = 0, $13782 = 0, $13783 = 0, $13784 = 0, $13785 = 0, $13786 = 0, $13787 = 0, $13788 = 0, $13789 = 0, $1379 = 0.0, $13790 = 0, $13791 = 0, $13792 = 0.0, $13793 = 0, $13794 = 0.0, $13795 = 0.0;
 var $13796 = 0.0, $13797 = 0, $13798 = 0.0, $13799 = 0.0, $138 = 0.0, $1380 = 0, $13800 = 0, $13801 = 0.0, $13802 = 0.0, $13803 = 0, $13804 = 0.0, $13805 = 0.0, $13806 = 0.0, $13807 = 0.0, $13808 = 0.0, $13809 = 0.0, $1381 = 0.0, $13810 = 0.0, $13811 = 0, $13812 = 0.0;
 var $13813 = 0, $13814 = 0, $13815 = 0.0, $13816 = 0, $13817 = 0.0, $13818 = 0.0, $13819 = 0, $1382 = 0.0, $13820 = 0, $13821 = 0.0, $13822 = 0, $13823 = 0.0, $13824 = 0.0, $13825 = 0, $13826 = 0.0, $13827 = 0.0, $13828 = 0.0, $13829 = 0, $1383 = 0, $13830 = 0;
 var $13831 = 0.0, $13832 = 0.0, $13833 = 0.0, $13834 = 0.0, $13835 = 0, $13836 = 0.0, $13837 = 0.0, $13838 = 0.0, $13839 = 0.0, $1384 = 0.0, $13840 = 0.0, $13841 = 0, $13842 = 0, $13843 = 0.0, $13844 = 0, $13845 = 0.0, $13846 = 0.0, $13847 = 0, $13848 = 0.0, $13849 = 0.0;
 var $1385 = 0, $13850 = 0.0, $13851 = 0.0, $13852 = 0.0, $13853 = 0, $13854 = 0, $13855 = 0.0, $13856 = 0, $13857 = 0.0, $13858 = 0.0, $13859 = 0, $1386 = 0, $13860 = 0.0, $13861 = 0.0, $13862 = 0.0, $13863 = 0.0, $13864 = 0.0, $13865 = 0, $13866 = 0, $13867 = 0.0;
 var $13868 = 0, $13869 = 0.0, $1387 = 0.0, $13870 = 0.0, $13871 = 0.0, $13872 = 0, $13873 = 0.0, $13874 = 0.0, $13875 = 0.0, $13876 = 0.0, $13877 = 0.0, $13878 = 0, $13879 = 0.0, $1388 = 0.0, $13880 = 0.0, $13881 = 0, $13882 = 0, $13883 = 0.0, $13884 = 0.0, $13885 = 0;
 var $13886 = 0, $13887 = 0.0, $13888 = 0.0, $13889 = 0, $1389 = 0, $13890 = 0, $13891 = 0.0, $13892 = 0.0, $13893 = 0, $13894 = 0, $13895 = 0.0, $13896 = 0.0, $13897 = 0, $13898 = 0, $13899 = 0.0, $139 = 0.0, $1390 = 0, $13900 = 0.0, $13901 = 0, $13902 = 0;
 var $13903 = 0.0, $13904 = 0.0, $13905 = 0, $13906 = 0, $13907 = 0.0, $13908 = 0.0, $13909 = 0, $1391 = 0.0, $13910 = 0, $13911 = 0.0, $13912 = 0.0, $13913 = 0, $13914 = 0, $13915 = 0.0, $13916 = 0.0, $13917 = 0, $13918 = 0, $13919 = 0, $1392 = 0.0, $13920 = 0.0;
 var $13921 = 0.0, $13922 = 0, $13923 = 0.0, $13924 = 0, $13925 = 0, $13926 = 0, $13927 = 0, $13928 = 0.0, $13929 = 0.0, $1393 = 0, $13930 = 0, $13931 = 0, $13932 = 0, $13933 = 0.0, $13934 = 0.0, $13935 = 0.0, $13936 = 0.0, $13937 = 0.0, $13938 = 0.0, $13939 = 0.0;
 var $1394 = 0, $13940 = 0.0, $13941 = 0.0, $13942 = 0.0, $13943 = 0, $13944 = 0.0, $13945 = 0.0, $13946 = 0, $13947 = 0.0, $13948 = 0.0, $13949 = 0, $1395 = 0, $13950 = 0, $13951 = 0, $13952 = 0, $13953 = 0, $13954 = 0, $13955 = 0, $13956 = 0, $13957 = 0;
 var $13958 = 0, $13959 = 0, $1396 = 0, $13960 = 0, $13961 = 0, $13962 = 0, $13963 = 0, $13964 = 0, $13965 = 0, $13966 = 0, $13967 = 0, $13968 = 0, $13969 = 0, $1397 = 0, $13970 = 0.0, $13971 = 0, $13972 = 0, $13973 = 0.0, $13974 = 0.0, $13975 = 0.0;
 var $13976 = 0, $13977 = 0, $13978 = 0, $13979 = 0.0, $1398 = 0, $13980 = 0, $13981 = 0, $13982 = 0.0, $13983 = 0.0, $13984 = 0.0, $13985 = 0, $13986 = 0, $13987 = 0, $13988 = 0, $13989 = 0, $1399 = 0, $13990 = 0, $13991 = 0, $13992 = 0, $13993 = 0;
 var $13994 = 0, $13995 = 0, $13996 = 0.0, $13997 = 0, $13998 = 0, $13999 = 0, $14 = 0, $140 = 0, $1400 = 0, $14000 = 0.0, $14001 = 0, $14002 = 0, $14003 = 0, $14004 = 0.0, $14005 = 0, $14006 = 0, $14007 = 0.0, $14008 = 0.0, $14009 = 0, $1401 = 0;
 var $14010 = 0.0, $14011 = 0.0, $14012 = 0, $14013 = 0.0, $14014 = 0.0, $14015 = 0, $14016 = 0.0, $14017 = 0.0, $14018 = 0.0, $14019 = 0.0, $1402 = 0, $14020 = 0, $14021 = 0.0, $14022 = 0, $14023 = 0.0, $14024 = 0.0, $14025 = 0.0, $14026 = 0.0, $14027 = 0, $14028 = 0.0;
 var $14029 = 0.0, $1403 = 0, $14030 = 0.0, $14031 = 0.0, $14032 = 0, $14033 = 0.0, $14034 = 0.0, $14035 = 0, $14036 = 0.0, $14037 = 0.0, $14038 = 0, $14039 = 0.0, $1404 = 0, $14040 = 0.0, $14041 = 0.0, $14042 = 0, $14043 = 0.0, $14044 = 0.0, $14045 = 0, $14046 = 0.0;
 var $14047 = 0.0, $14048 = 0.0, $14049 = 0, $1405 = 0, $14050 = 0, $14051 = 0.0, $14052 = 0.0, $14053 = 0.0, $14054 = 0.0, $14055 = 0.0, $14056 = 0.0, $14057 = 0, $14058 = 0, $14059 = 0.0, $1406 = 0, $14060 = 0.0, $14061 = 0.0, $14062 = 0.0, $14063 = 0.0, $14064 = 0.0;
 var $14065 = 0.0, $14066 = 0, $14067 = 0, $14068 = 0.0, $14069 = 0.0, $1407 = 0, $14070 = 0.0, $14071 = 0.0, $14072 = 0.0, $14073 = 0.0, $14074 = 0, $14075 = 0.0, $14076 = 0, $14077 = 0.0, $14078 = 0.0, $14079 = 0.0, $1408 = 0, $14080 = 0, $14081 = 0, $14082 = 0.0;
 var $14083 = 0.0, $14084 = 0.0, $14085 = 0.0, $14086 = 0.0, $14087 = 0.0, $14088 = 0.0, $14089 = 0, $1409 = 0, $14090 = 0.0, $14091 = 0, $14092 = 0.0, $14093 = 0.0, $14094 = 0.0, $14095 = 0, $14096 = 0.0, $14097 = 0.0, $14098 = 0, $14099 = 0, $141 = 0, $1410 = 0;
 var $14100 = 0.0, $14101 = 0.0, $14102 = 0, $14103 = 0, $14104 = 0.0, $14105 = 0.0, $14106 = 0, $14107 = 0, $14108 = 0.0, $14109 = 0.0, $1411 = 0, $14110 = 0, $14111 = 0, $14112 = 0.0, $14113 = 0.0, $14114 = 0, $14115 = 0, $14116 = 0.0, $14117 = 0.0, $14118 = 0;
 var $14119 = 0, $1412 = 0, $14120 = 0.0, $14121 = 0.0, $14122 = 0, $14123 = 0, $14124 = 0.0, $14125 = 0.0, $14126 = 0, $14127 = 0, $14128 = 0, $14129 = 0, $1413 = 0, $14130 = 0, $14131 = 0.0, $14132 = 0, $14133 = 0, $14134 = 0, $14135 = 0, $14136 = 0;
 var $14137 = 0, $14138 = 0, $14139 = 0, $1414 = 0, $14140 = 0, $14141 = 0, $14142 = 0, $14143 = 0, $14144 = 0, $14145 = 0, $14146 = 0, $14147 = 0, $14148 = 0, $14149 = 0, $1415 = 0.0, $14150 = 0, $14151 = 0, $14152 = 0, $14153 = 0, $14154 = 0;
 var $14155 = 0, $14156 = 0, $14157 = 0, $14158 = 0, $14159 = 0, $1416 = 0, $14160 = 0, $14161 = 0.0, $14162 = 0, $14163 = 0, $14164 = 0, $14165 = 0, $14166 = 0, $14167 = 0, $14168 = 0, $14169 = 0, $1417 = 0, $14170 = 0, $14171 = 0, $14172 = 0;
 var $14173 = 0, $14174 = 0, $14175 = 0, $14176 = 0, $14177 = 0, $14178 = 0, $14179 = 0, $1418 = 0.0, $14180 = 0, $14181 = 0, $14182 = 0, $14183 = 0, $14184 = 0, $14185 = 0, $14186 = 0, $14187 = 0, $14188 = 0, $14189 = 0, $1419 = 0.0, $14190 = 0;
 var $14191 = 0.0, $14192 = 0, $14193 = 0, $14194 = 0, $14195 = 0, $14196 = 0, $14197 = 0, $14198 = 0, $14199 = 0, $142 = 0.0, $1420 = 0.0, $14200 = 0, $14201 = 0, $14202 = 0, $14203 = 0, $14204 = 0, $14205 = 0, $14206 = 0, $14207 = 0, $14208 = 0;
 var $14209 = 0, $1421 = 0, $14210 = 0, $14211 = 0, $14212 = 0, $14213 = 0, $14214 = 0, $14215 = 0, $14216 = 0, $14217 = 0, $14218 = 0, $14219 = 0, $1422 = 0, $14220 = 0, $14221 = 0.0, $14222 = 0, $14223 = 0, $14224 = 0, $14225 = 0, $14226 = 0;
 var $14227 = 0, $14228 = 0, $14229 = 0, $1423 = 0, $14230 = 0, $14231 = 0, $14232 = 0, $14233 = 0, $14234 = 0, $14235 = 0, $14236 = 0, $14237 = 0, $14238 = 0, $14239 = 0, $1424 = 0.0, $14240 = 0, $14241 = 0, $14242 = 0, $14243 = 0, $14244 = 0;
 var $14245 = 0, $14246 = 0, $14247 = 0, $14248 = 0, $14249 = 0, $1425 = 0, $14250 = 0, $14251 = 0.0, $14252 = 0, $14253 = 0, $14254 = 0, $14255 = 0, $14256 = 0, $14257 = 0, $14258 = 0, $14259 = 0, $1426 = 0, $14260 = 0, $14261 = 0, $14262 = 0;
 var $14263 = 0, $14264 = 0, $14265 = 0, $14266 = 0, $14267 = 0, $14268 = 0, $14269 = 0, $1427 = 0.0, $14270 = 0, $14271 = 0, $14272 = 0, $14273 = 0, $14274 = 0, $14275 = 0, $14276 = 0, $14277 = 0, $14278 = 0, $14279 = 0, $1428 = 0.0, $14280 = 0;
 var $14281 = 0.0, $14282 = 0, $14283 = 0, $14284 = 0, $14285 = 0, $14286 = 0, $14287 = 0, $14288 = 0, $14289 = 0, $1429 = 0.0, $14290 = 0, $14291 = 0, $14292 = 0, $14293 = 0, $14294 = 0, $14295 = 0, $14296 = 0, $14297 = 0, $14298 = 0, $14299 = 0;
 var $143 = 0.0, $1430 = 0, $14300 = 0, $14301 = 0, $14302 = 0, $14303 = 0, $14304 = 0, $14305 = 0, $14306 = 0, $14307 = 0, $14308 = 0, $14309 = 0, $1431 = 0, $14310 = 0, $14311 = 0, $14312 = 0, $14313 = 0, $14314 = 0, $14315 = 0, $14316 = 0;
 var $14317 = 0, $14318 = 0, $14319 = 0, $1432 = 0, $14320 = 0, $14321 = 0, $14322 = 0, $14323 = 0, $14324 = 0, $14325 = 0, $14326 = 0, $14327 = 0, $14328 = 0, $14329 = 0, $1433 = 0, $14330 = 0.0, $14331 = 0, $14332 = 0, $14333 = 0, $14334 = 0.0;
 var $14335 = 0, $14336 = 0.0, $14337 = 0, $14338 = 0, $14339 = 0, $1434 = 0, $14340 = 0, $14341 = 0.0, $14342 = 0, $14343 = 0, $14344 = 0, $14345 = 0.0, $14346 = 0.0, $14347 = 0.0, $14348 = 0.0, $14349 = 0.0, $1435 = 0, $14350 = 0, $14351 = 0.0, $14352 = 0;
 var $14353 = 0.0, $14354 = 0.0, $14355 = 0, $14356 = 0.0, $14357 = 0.0, $14358 = 0, $14359 = 0.0, $1436 = 0, $14360 = 0.0, $14361 = 0.0, $14362 = 0.0, $14363 = 0.0, $14364 = 0, $14365 = 0, $14366 = 0.0, $14367 = 0.0, $14368 = 0.0, $14369 = 0.0, $1437 = 0, $14370 = 0.0;
 var $14371 = 0, $14372 = 0.0, $14373 = 0.0, $14374 = 0.0, $14375 = 0.0, $14376 = 0.0, $14377 = 0, $14378 = 0.0, $14379 = 0, $1438 = 0, $14380 = 0.0, $14381 = 0.0, $14382 = 0, $14383 = 0.0, $14384 = 0.0, $14385 = 0, $14386 = 0.0, $14387 = 0.0, $14388 = 0.0, $14389 = 0.0;
 var $1439 = 0, $14390 = 0.0, $14391 = 0, $14392 = 0.0, $14393 = 0.0, $14394 = 0.0, $14395 = 0.0, $14396 = 0.0, $14397 = 0.0, $14398 = 0.0, $14399 = 0.0, $144 = 0.0, $1440 = 0, $14400 = 0, $14401 = 0.0, $14402 = 0.0, $14403 = 0.0, $14404 = 0.0, $14405 = 0.0, $14406 = 0;
 var $14407 = 0.0, $14408 = 0, $14409 = 0.0, $1441 = 0.0, $14410 = 0.0, $14411 = 0, $14412 = 0.0, $14413 = 0.0, $14414 = 0, $14415 = 0.0, $14416 = 0.0, $14417 = 0.0, $14418 = 0.0, $14419 = 0, $1442 = 0, $14420 = 0.0, $14421 = 0.0, $14422 = 0.0, $14423 = 0.0, $14424 = 0.0;
 var $14425 = 0.0, $14426 = 0.0, $14427 = 0.0, $14428 = 0.0, $14429 = 0.0, $1443 = 0, $14430 = 0, $14431 = 0.0, $14432 = 0.0, $14433 = 0, $14434 = 0.0, $14435 = 0.0, $14436 = 0, $14437 = 0, $14438 = 0, $14439 = 0, $1444 = 0, $14440 = 0, $14441 = 0, $14442 = 0;
 var $14443 = 0, $14444 = 0, $14445 = 0, $14446 = 0, $14447 = 0, $14448 = 0, $14449 = 0, $1445 = 0.0, $14450 = 0, $14451 = 0, $14452 = 0, $14453 = 0, $14454 = 0, $14455 = 0, $14456 = 0, $14457 = 0.0, $14458 = 0, $14459 = 0, $1446 = 0, $14460 = 0.0;
 var $14461 = 0.0, $14462 = 0.0, $14463 = 0, $14464 = 0, $14465 = 0, $14466 = 0.0, $14467 = 0, $14468 = 0, $14469 = 0.0, $1447 = 0, $14470 = 0.0, $14471 = 0.0, $14472 = 0, $14473 = 0, $14474 = 0, $14475 = 0, $14476 = 0, $14477 = 0, $14478 = 0, $14479 = 0;
 var $1448 = 0, $14480 = 0, $14481 = 0, $14482 = 0, $14483 = 0.0, $14484 = 0, $14485 = 0, $14486 = 0, $14487 = 0.0, $14488 = 0, $14489 = 0, $1449 = 0.0, $14490 = 0, $14491 = 0.0, $14492 = 0, $14493 = 0, $14494 = 0.0, $14495 = 0.0, $14496 = 0, $14497 = 0.0;
 var $14498 = 0.0, $14499 = 0, $145 = 0.0, $1450 = 0, $14500 = 0.0, $14501 = 0, $14502 = 0.0, $14503 = 0.0, $14504 = 0, $14505 = 0.0, $14506 = 0, $14507 = 0.0, $14508 = 0.0, $14509 = 0, $1451 = 0, $14510 = 0.0, $14511 = 0, $14512 = 0.0, $14513 = 0.0, $14514 = 0;
 var $14515 = 0.0, $14516 = 0.0, $14517 = 0, $14518 = 0.0, $14519 = 0.0, $1452 = 0.0, $14520 = 0.0, $14521 = 0.0, $14522 = 0, $14523 = 0.0, $14524 = 0.0, $14525 = 0.0, $14526 = 0.0, $14527 = 0.0, $14528 = 0, $14529 = 0.0, $1453 = 0.0, $14530 = 0.0, $14531 = 0.0, $14532 = 0;
 var $14533 = 0.0, $14534 = 0.0, $14535 = 0.0, $14536 = 0.0, $14537 = 0.0, $14538 = 0.0, $14539 = 0, $1454 = 0, $14540 = 0.0, $14541 = 0.0, $14542 = 0, $14543 = 0, $14544 = 0.0, $14545 = 0, $14546 = 0.0, $14547 = 0.0, $14548 = 0, $14549 = 0.0, $1455 = 0.0, $14550 = 0.0;
 var $14551 = 0.0, $14552 = 0.0, $14553 = 0, $14554 = 0.0, $14555 = 0, $14556 = 0.0, $14557 = 0.0, $14558 = 0.0, $14559 = 0, $1456 = 0.0, $14560 = 0, $14561 = 0.0, $14562 = 0.0, $14563 = 0.0, $14564 = 0.0, $14565 = 0.0, $14566 = 0.0, $14567 = 0.0, $14568 = 0, $14569 = 0.0;
 var $1457 = 0.0, $14570 = 0, $14571 = 0.0, $14572 = 0.0, $14573 = 0.0, $14574 = 0, $14575 = 0.0, $14576 = 0.0, $14577 = 0, $14578 = 0.0, $14579 = 0.0, $1458 = 0, $14580 = 0.0, $14581 = 0.0, $14582 = 0.0, $14583 = 0, $14584 = 0.0, $14585 = 0, $14586 = 0.0, $14587 = 0.0;
 var $14588 = 0.0, $14589 = 0, $1459 = 0.0, $14590 = 0.0, $14591 = 0.0, $14592 = 0.0, $14593 = 0, $14594 = 0.0, $14595 = 0.0, $14596 = 0.0, $14597 = 0.0, $14598 = 0, $14599 = 0.0, $146 = 0, $1460 = 0, $14600 = 0.0, $14601 = 0, $14602 = 0, $14603 = 0.0, $14604 = 0;
 var $14605 = 0.0, $14606 = 0.0, $14607 = 0, $14608 = 0.0, $14609 = 0.0, $1461 = 0.0, $14610 = 0.0, $14611 = 0.0, $14612 = 0.0, $14613 = 0.0, $14614 = 0.0, $14615 = 0, $14616 = 0.0, $14617 = 0.0, $14618 = 0.0, $14619 = 0.0, $1462 = 0.0, $14620 = 0.0, $14621 = 0.0, $14622 = 0;
 var $14623 = 0.0, $14624 = 0.0, $14625 = 0, $14626 = 0, $14627 = 0.0, $14628 = 0.0, $14629 = 0.0, $1463 = 0.0, $14630 = 0.0, $14631 = 0.0, $14632 = 0.0, $14633 = 0.0, $14634 = 0.0, $14635 = 0, $14636 = 0.0, $14637 = 0.0, $14638 = 0, $14639 = 0.0, $1464 = 0.0, $14640 = 0.0;
 var $14641 = 0.0, $14642 = 0.0, $14643 = 0, $14644 = 0.0, $14645 = 0.0, $14646 = 0.0, $14647 = 0.0, $14648 = 0.0, $14649 = 0, $1465 = 0.0, $14650 = 0.0, $14651 = 0.0, $14652 = 0, $14653 = 0, $14654 = 0.0, $14655 = 0.0, $14656 = 0.0, $14657 = 0, $14658 = 0.0, $14659 = 0.0;
 var $1466 = 0.0, $14660 = 0.0, $14661 = 0.0, $14662 = 0.0, $14663 = 0.0, $14664 = 0, $14665 = 0.0, $14666 = 0.0, $14667 = 0.0, $14668 = 0.0, $14669 = 0.0, $1467 = 0, $14670 = 0, $14671 = 0.0, $14672 = 0.0, $14673 = 0, $14674 = 0.0, $14675 = 0.0, $14676 = 0.0, $14677 = 0.0;
 var $14678 = 0, $14679 = 0.0, $1468 = 0, $14680 = 0.0, $14681 = 0.0, $14682 = 0.0, $14683 = 0, $14684 = 0.0, $14685 = 0.0, $14686 = 0.0, $14687 = 0.0, $14688 = 0.0, $14689 = 0, $1469 = 0, $14690 = 0.0, $14691 = 0.0, $14692 = 0, $14693 = 0, $14694 = 0.0, $14695 = 0.0;
 var $14696 = 0, $14697 = 0, $14698 = 0.0, $14699 = 0.0, $147 = 0.0, $1470 = 0.0, $14700 = 0, $14701 = 0, $14702 = 0.0, $14703 = 0.0, $14704 = 0, $14705 = 0, $14706 = 0.0, $14707 = 0.0, $14708 = 0, $14709 = 0, $1471 = 0.0, $14710 = 0.0, $14711 = 0.0, $14712 = 0;
 var $14713 = 0, $14714 = 0.0, $14715 = 0.0, $14716 = 0, $14717 = 0, $14718 = 0.0, $14719 = 0.0, $1472 = 0, $14720 = 0, $14721 = 0, $14722 = 0.0, $14723 = 0.0, $14724 = 0, $14725 = 0, $14726 = 0.0, $14727 = 0.0, $14728 = 0, $14729 = 0, $1473 = 0.0, $14730 = 0.0;
 var $14731 = 0.0, $14732 = 0, $14733 = 0, $14734 = 0.0, $14735 = 0.0, $14736 = 0, $14737 = 0, $14738 = 0, $14739 = 0, $1474 = 0.0, $14740 = 0, $14741 = 0.0, $14742 = 0, $14743 = 0, $14744 = 0, $14745 = 0, $14746 = 0, $14747 = 0, $14748 = 0, $14749 = 0;
 var $1475 = 0.0, $14750 = 0, $14751 = 0, $14752 = 0, $14753 = 0, $14754 = 0, $14755 = 0, $14756 = 0, $14757 = 0, $14758 = 0, $14759 = 0, $1476 = 0.0, $14760 = 0, $14761 = 0, $14762 = 0, $14763 = 0, $14764 = 0, $14765 = 0, $14766 = 0, $14767 = 0;
 var $14768 = 0, $14769 = 0, $1477 = 0, $14770 = 0, $14771 = 0.0, $14772 = 0, $14773 = 0, $14774 = 0, $14775 = 0, $14776 = 0, $14777 = 0, $14778 = 0, $14779 = 0, $1478 = 0.0, $14780 = 0, $14781 = 0, $14782 = 0, $14783 = 0, $14784 = 0, $14785 = 0;
 var $14786 = 0, $14787 = 0, $14788 = 0, $14789 = 0, $1479 = 0, $14790 = 0, $14791 = 0, $14792 = 0, $14793 = 0, $14794 = 0, $14795 = 0, $14796 = 0, $14797 = 0, $14798 = 0, $14799 = 0, $148 = 0, $1480 = 0.0, $14800 = 0, $14801 = 0.0, $14802 = 0;
 var $14803 = 0, $14804 = 0, $14805 = 0, $14806 = 0, $14807 = 0, $14808 = 0, $14809 = 0, $1481 = 0.0, $14810 = 0, $14811 = 0, $14812 = 0, $14813 = 0, $14814 = 0, $14815 = 0, $14816 = 0, $14817 = 0, $14818 = 0, $14819 = 0, $1482 = 0.0, $14820 = 0;
 var $14821 = 0, $14822 = 0, $14823 = 0, $14824 = 0, $14825 = 0, $14826 = 0, $14827 = 0, $14828 = 0, $14829 = 0, $1483 = 0.0, $14830 = 0, $14831 = 0.0, $14832 = 0, $14833 = 0, $14834 = 0, $14835 = 0, $14836 = 0, $14837 = 0, $14838 = 0, $14839 = 0;
 var $1484 = 0, $14840 = 0, $14841 = 0, $14842 = 0, $14843 = 0, $14844 = 0, $14845 = 0, $14846 = 0, $14847 = 0, $14848 = 0, $14849 = 0, $1485 = 0, $14850 = 0, $14851 = 0, $14852 = 0, $14853 = 0, $14854 = 0, $14855 = 0, $14856 = 0, $14857 = 0;
 var $14858 = 0, $14859 = 0, $1486 = 0.0, $14860 = 0, $14861 = 0.0, $14862 = 0, $14863 = 0, $14864 = 0, $14865 = 0, $14866 = 0, $14867 = 0, $14868 = 0, $14869 = 0, $1487 = 0.0, $14870 = 0, $14871 = 0, $14872 = 0, $14873 = 0, $14874 = 0, $14875 = 0;
 var $14876 = 0, $14877 = 0, $14878 = 0, $14879 = 0, $1488 = 0.0, $14880 = 0, $14881 = 0, $14882 = 0, $14883 = 0, $14884 = 0, $14885 = 0, $14886 = 0, $14887 = 0, $14888 = 0, $14889 = 0, $1489 = 0.0, $14890 = 0, $14891 = 0.0, $14892 = 0, $14893 = 0;
 var $14894 = 0, $14895 = 0, $14896 = 0, $14897 = 0, $14898 = 0, $14899 = 0, $149 = 0.0, $1490 = 0, $14900 = 0, $14901 = 0, $14902 = 0, $14903 = 0, $14904 = 0, $14905 = 0, $14906 = 0, $14907 = 0, $14908 = 0, $14909 = 0, $1491 = 0.0, $14910 = 0;
 var $14911 = 0, $14912 = 0, $14913 = 0, $14914 = 0, $14915 = 0, $14916 = 0, $14917 = 0, $14918 = 0, $14919 = 0, $1492 = 0.0, $14920 = 0, $14921 = 0, $14922 = 0, $14923 = 0, $14924 = 0, $14925 = 0, $14926 = 0, $14927 = 0, $14928 = 0, $14929 = 0;
 var $1493 = 0, $14930 = 0, $14931 = 0, $14932 = 0, $14933 = 0, $14934 = 0, $14935 = 0, $14936 = 0, $14937 = 0, $14938 = 0.0, $14939 = 0, $1494 = 0.0, $14940 = 0, $14941 = 0, $14942 = 0.0, $14943 = 0, $14944 = 0.0, $14945 = 0, $14946 = 0, $14947 = 0;
 var $14948 = 0.0, $14949 = 0.0, $1495 = 0.0, $14950 = 0.0, $14951 = 0, $14952 = 0.0, $14953 = 0.0, $14954 = 0, $14955 = 0.0, $14956 = 0.0, $14957 = 0, $14958 = 0.0, $14959 = 0.0, $1496 = 0.0, $14960 = 0, $14961 = 0.0, $14962 = 0.0, $14963 = 0, $14964 = 0.0, $14965 = 0.0;
 var $14966 = 0.0, $14967 = 0.0, $14968 = 0.0, $14969 = 0, $1497 = 0.0, $14970 = 0, $14971 = 0.0, $14972 = 0.0, $14973 = 0.0, $14974 = 0.0, $14975 = 0.0, $14976 = 0, $14977 = 0.0, $14978 = 0.0, $14979 = 0.0, $1498 = 0, $14980 = 0, $14981 = 0.0, $14982 = 0.0, $14983 = 0;
 var $14984 = 0.0, $14985 = 0.0, $14986 = 0, $14987 = 0.0, $14988 = 0.0, $14989 = 0, $1499 = 0, $14990 = 0.0, $14991 = 0.0, $14992 = 0, $14993 = 0.0, $14994 = 0.0, $14995 = 0.0, $14996 = 0.0, $14997 = 0.0, $14998 = 0, $14999 = 0.0, $15 = 0.0, $150 = 0.0, $1500 = 0.0;
 var $15000 = 0.0, $15001 = 0.0, $15002 = 0.0, $15003 = 0.0, $15004 = 0.0, $15005 = 0.0, $15006 = 0.0, $15007 = 0, $15008 = 0.0, $15009 = 0.0, $1501 = 0.0, $15010 = 0.0, $15011 = 0, $15012 = 0.0, $15013 = 0.0, $15014 = 0, $15015 = 0.0, $15016 = 0.0, $15017 = 0, $15018 = 0.0;
 var $15019 = 0.0, $1502 = 0.0, $15020 = 0, $15021 = 0.0, $15022 = 0.0, $15023 = 0, $15024 = 0.0, $15025 = 0.0, $15026 = 0.0, $15027 = 0.0, $15028 = 0, $15029 = 0.0, $1503 = 0.0, $15030 = 0.0, $15031 = 0.0, $15032 = 0.0, $15033 = 0.0, $15034 = 0.0, $15035 = 0.0, $15036 = 0.0;
 var $15037 = 0.0, $15038 = 0.0, $15039 = 0, $1504 = 0, $15040 = 0.0, $15041 = 0.0, $15042 = 0, $15043 = 0.0, $15044 = 0.0, $15045 = 0, $15046 = 0, $15047 = 0, $15048 = 0, $15049 = 0, $1505 = 0.0, $15050 = 0, $15051 = 0, $15052 = 0, $15053 = 0, $15054 = 0;
 var $15055 = 0, $15056 = 0, $15057 = 0, $15058 = 0, $15059 = 0, $1506 = 0, $15060 = 0, $15061 = 0, $15062 = 0, $15063 = 0, $15064 = 0, $15065 = 0, $15066 = 0.0, $15067 = 0, $15068 = 0, $15069 = 0.0, $1507 = 0.0, $15070 = 0.0, $15071 = 0.0, $15072 = 0;
 var $15073 = 0, $15074 = 0, $15075 = 0.0, $15076 = 0, $15077 = 0, $15078 = 0.0, $15079 = 0.0, $1508 = 0.0, $15080 = 0.0, $15081 = 0, $15082 = 0, $15083 = 0, $15084 = 0, $15085 = 0, $15086 = 0, $15087 = 0, $15088 = 0, $15089 = 0, $1509 = 0.0, $15090 = 0;
 var $15091 = 0, $15092 = 0.0, $15093 = 0, $15094 = 0, $15095 = 0, $15096 = 0.0, $15097 = 0, $15098 = 0, $15099 = 0, $151 = 0.0, $1510 = 0.0, $15100 = 0.0, $15101 = 0, $15102 = 0, $15103 = 0.0, $15104 = 0.0, $15105 = 0, $15106 = 0.0, $15107 = 0.0, $15108 = 0;
 var $15109 = 0.0, $1511 = 0, $15110 = 0, $15111 = 0.0, $15112 = 0.0, $15113 = 0, $15114 = 0.0, $15115 = 0, $15116 = 0.0, $15117 = 0.0, $15118 = 0, $15119 = 0.0, $1512 = 0.0, $15120 = 0, $15121 = 0.0, $15122 = 0.0, $15123 = 0, $15124 = 0.0, $15125 = 0.0, $15126 = 0;
 var $15127 = 0.0, $15128 = 0.0, $15129 = 0.0, $1513 = 0.0, $15130 = 0.0, $15131 = 0, $15132 = 0.0, $15133 = 0.0, $15134 = 0.0, $15135 = 0.0, $15136 = 0.0, $15137 = 0, $15138 = 0.0, $15139 = 0.0, $1514 = 0.0, $15140 = 0.0, $15141 = 0, $15142 = 0.0, $15143 = 0.0, $15144 = 0.0;
 var $15145 = 0.0, $15146 = 0.0, $15147 = 0.0, $15148 = 0, $15149 = 0.0, $1515 = 0.0, $15150 = 0.0, $15151 = 0, $15152 = 0, $15153 = 0.0, $15154 = 0.0, $15155 = 0.0, $15156 = 0, $15157 = 0.0, $15158 = 0, $15159 = 0.0, $1516 = 0, $15160 = 0.0, $15161 = 0.0, $15162 = 0;
 var $15163 = 0.0, $15164 = 0, $15165 = 0.0, $15166 = 0.0, $15167 = 0.0, $15168 = 0, $15169 = 0, $1517 = 0.0, $15170 = 0.0, $15171 = 0.0, $15172 = 0.0, $15173 = 0.0, $15174 = 0.0, $15175 = 0.0, $15176 = 0.0, $15177 = 0, $15178 = 0.0, $15179 = 0, $1518 = 0.0, $15180 = 0.0;
 var $15181 = 0.0, $15182 = 0.0, $15183 = 0, $15184 = 0, $15185 = 0.0, $15186 = 0.0, $15187 = 0.0, $15188 = 0.0, $15189 = 0.0, $1519 = 0, $15190 = 0.0, $15191 = 0.0, $15192 = 0, $15193 = 0.0, $15194 = 0, $15195 = 0.0, $15196 = 0.0, $15197 = 0.0, $15198 = 0, $15199 = 0.0;
 var $152 = 0, $1520 = 0.0, $15200 = 0.0, $15201 = 0.0, $15202 = 0, $15203 = 0.0, $15204 = 0.0, $15205 = 0.0, $15206 = 0.0, $15207 = 0, $15208 = 0.0, $15209 = 0.0, $1521 = 0.0, $15210 = 0, $15211 = 0, $15212 = 0.0, $15213 = 0, $15214 = 0.0, $15215 = 0.0, $15216 = 0;
 var $15217 = 0.0, $15218 = 0.0, $15219 = 0.0, $1522 = 0.0, $15220 = 0.0, $15221 = 0.0, $15222 = 0.0, $15223 = 0.0, $15224 = 0, $15225 = 0.0, $15226 = 0.0, $15227 = 0.0, $15228 = 0.0, $15229 = 0.0, $1523 = 0.0, $15230 = 0.0, $15231 = 0, $15232 = 0.0, $15233 = 0.0, $15234 = 0;
 var $15235 = 0.0, $15236 = 0.0, $15237 = 0.0, $15238 = 0, $15239 = 0.0, $1524 = 0.0, $15240 = 0.0, $15241 = 0, $15242 = 0.0, $15243 = 0.0, $15244 = 0.0, $15245 = 0.0, $15246 = 0.0, $15247 = 0, $15248 = 0.0, $15249 = 0.0, $1525 = 0.0, $15250 = 0.0, $15251 = 0.0, $15252 = 0;
 var $15253 = 0.0, $15254 = 0.0, $15255 = 0, $15256 = 0.0, $15257 = 0.0, $15258 = 0.0, $15259 = 0.0, $1526 = 0.0, $15260 = 0.0, $15261 = 0, $15262 = 0, $15263 = 0.0, $15264 = 0.0, $15265 = 0.0, $15266 = 0.0, $15267 = 0, $15268 = 0.0, $15269 = 0.0, $1527 = 0, $15270 = 0.0;
 var $15271 = 0.0, $15272 = 0, $15273 = 0.0, $15274 = 0.0, $15275 = 0.0, $15276 = 0.0, $15277 = 0.0, $15278 = 0.0, $15279 = 0, $1528 = 0, $15280 = 0, $15281 = 0.0, $15282 = 0.0, $15283 = 0.0, $15284 = 0, $15285 = 0.0, $15286 = 0.0, $15287 = 0.0, $15288 = 0.0, $15289 = 0.0;
 var $1529 = 0.0, $15290 = 0, $15291 = 0.0, $15292 = 0.0, $15293 = 0.0, $15294 = 0.0, $15295 = 0.0, $15296 = 0.0, $15297 = 0.0, $15298 = 0, $15299 = 0.0, $153 = 0, $1530 = 0.0, $15300 = 0.0, $15301 = 0, $15302 = 0, $15303 = 0.0, $15304 = 0.0, $15305 = 0, $15306 = 0;
 var $15307 = 0.0, $15308 = 0.0, $15309 = 0, $1531 = 0.0, $15310 = 0, $15311 = 0.0, $15312 = 0.0, $15313 = 0, $15314 = 0, $15315 = 0.0, $15316 = 0.0, $15317 = 0, $15318 = 0, $15319 = 0.0, $1532 = 0.0, $15320 = 0.0, $15321 = 0, $15322 = 0, $15323 = 0.0, $15324 = 0.0;
 var $15325 = 0, $15326 = 0, $15327 = 0.0, $15328 = 0.0, $15329 = 0, $1533 = 0, $15330 = 0, $15331 = 0.0, $15332 = 0.0, $15333 = 0, $15334 = 0, $15335 = 0.0, $15336 = 0.0, $15337 = 0, $15338 = 0, $15339 = 0.0, $1534 = 0.0, $15340 = 0.0, $15341 = 0, $15342 = 0;
 var $15343 = 0.0, $15344 = 0.0, $15345 = 0, $15346 = 0, $15347 = 0, $15348 = 0, $15349 = 0, $1535 = 0, $15350 = 0.0, $15351 = 0, $15352 = 0, $15353 = 0, $15354 = 0, $15355 = 0, $15356 = 0, $15357 = 0, $15358 = 0, $15359 = 0, $1536 = 0.0, $15360 = 0;
 var $15361 = 0, $15362 = 0, $15363 = 0, $15364 = 0, $15365 = 0, $15366 = 0, $15367 = 0, $15368 = 0, $15369 = 0, $1537 = 0.0, $15370 = 0, $15371 = 0, $15372 = 0, $15373 = 0, $15374 = 0, $15375 = 0, $15376 = 0, $15377 = 0, $15378 = 0, $15379 = 0;
 var $1538 = 0.0, $15380 = 0.0, $15381 = 0, $15382 = 0, $15383 = 0, $15384 = 0, $15385 = 0, $15386 = 0, $15387 = 0, $15388 = 0, $15389 = 0, $1539 = 0, $15390 = 0, $15391 = 0, $15392 = 0, $15393 = 0, $15394 = 0, $15395 = 0, $15396 = 0, $15397 = 0;
 var $15398 = 0, $15399 = 0, $154 = 0.0, $1540 = 0.0, $15400 = 0, $15401 = 0, $15402 = 0, $15403 = 0, $15404 = 0, $15405 = 0, $15406 = 0, $15407 = 0, $15408 = 0, $15409 = 0, $1541 = 0.0, $15410 = 0.0, $15411 = 0, $15412 = 0, $15413 = 0, $15414 = 0;
 var $15415 = 0, $15416 = 0, $15417 = 0, $15418 = 0, $15419 = 0, $1542 = 0.0, $15420 = 0, $15421 = 0, $15422 = 0, $15423 = 0, $15424 = 0, $15425 = 0, $15426 = 0, $15427 = 0, $15428 = 0, $15429 = 0, $1543 = 0.0, $15430 = 0, $15431 = 0, $15432 = 0;
 var $15433 = 0, $15434 = 0, $15435 = 0, $15436 = 0, $15437 = 0, $15438 = 0, $15439 = 0, $1544 = 0, $15440 = 0.0, $15441 = 0, $15442 = 0, $15443 = 0, $15444 = 0, $15445 = 0, $15446 = 0, $15447 = 0, $15448 = 0, $15449 = 0, $1545 = 0.0, $15450 = 0;
 var $15451 = 0, $15452 = 0, $15453 = 0, $15454 = 0, $15455 = 0, $15456 = 0, $15457 = 0, $15458 = 0, $15459 = 0, $1546 = 0.0, $15460 = 0, $15461 = 0, $15462 = 0, $15463 = 0, $15464 = 0, $15465 = 0, $15466 = 0, $15467 = 0, $15468 = 0, $15469 = 0;
 var $1547 = 0, $15470 = 0.0, $15471 = 0, $15472 = 0, $15473 = 0, $15474 = 0, $15475 = 0, $15476 = 0, $15477 = 0, $15478 = 0, $15479 = 0, $1548 = 0.0, $15480 = 0, $15481 = 0, $15482 = 0, $15483 = 0, $15484 = 0, $15485 = 0, $15486 = 0, $15487 = 0;
 var $15488 = 0, $15489 = 0, $1549 = 0.0, $15490 = 0, $15491 = 0, $15492 = 0, $15493 = 0, $15494 = 0, $15495 = 0, $15496 = 0, $15497 = 0, $15498 = 0, $15499 = 0, $155 = 0.0, $1550 = 0.0, $15500 = 0.0, $15501 = 0, $15502 = 0, $15503 = 0, $15504 = 0;
 var $15505 = 0, $15506 = 0, $15507 = 0, $15508 = 0, $15509 = 0, $1551 = 0.0, $15510 = 0, $15511 = 0, $15512 = 0, $15513 = 0, $15514 = 0, $15515 = 0, $15516 = 0, $15517 = 0, $15518 = 0, $15519 = 0, $1552 = 0.0, $15520 = 0, $15521 = 0, $15522 = 0;
 var $15523 = 0, $15524 = 0, $15525 = 0, $15526 = 0, $15527 = 0, $15528 = 0, $15529 = 0, $1553 = 0.0, $15530 = 0, $15531 = 0, $15532 = 0, $15533 = 0, $15534 = 0, $15535 = 0, $15536 = 0, $15537 = 0, $15538 = 0, $15539 = 0, $1554 = 0.0, $15540 = 0;
 var $15541 = 0, $15542 = 0, $15543 = 0, $15544 = 0, $15545 = 0, $15546 = 0, $15547 = 0.0, $15548 = 0.0, $15549 = 0, $1555 = 0.0, $15550 = 0, $15551 = 0, $15552 = 0, $15553 = 0.0, $15554 = 0, $15555 = 0.0, $15556 = 0.0, $15557 = 0, $15558 = 0, $15559 = 0;
 var $1556 = 0.0, $15560 = 0.0, $15561 = 0.0, $15562 = 0.0, $15563 = 0.0, $15564 = 0.0, $15565 = 0.0, $15566 = 0.0, $15567 = 0.0, $15568 = 0.0, $15569 = 0.0, $1557 = 0, $15570 = 0, $15571 = 0.0, $15572 = 0.0, $15573 = 0, $15574 = 0.0, $15575 = 0.0, $15576 = 0, $15577 = 0;
 var $15578 = 0, $15579 = 0, $1558 = 0.0, $15580 = 0, $15581 = 0, $15582 = 0, $15583 = 0, $15584 = 0, $15585 = 0, $15586 = 0, $15587 = 0, $15588 = 0, $15589 = 0, $1559 = 0.0, $15590 = 0, $15591 = 0, $15592 = 0, $15593 = 0, $15594 = 0, $15595 = 0;
 var $15596 = 0, $15597 = 0.0, $15598 = 0, $15599 = 0, $156 = 0.0, $1560 = 0, $15600 = 0.0, $15601 = 0.0, $15602 = 0.0, $15603 = 0, $15604 = 0, $15605 = 0, $15606 = 0.0, $15607 = 0, $15608 = 0, $15609 = 0.0, $1561 = 0.0, $15610 = 0.0, $15611 = 0.0, $15612 = 0;
 var $15613 = 0, $15614 = 0, $15615 = 0, $15616 = 0, $15617 = 0, $15618 = 0, $15619 = 0, $1562 = 0.0, $15620 = 0, $15621 = 0, $15622 = 0, $15623 = 0.0, $15624 = 0, $15625 = 0, $15626 = 0, $15627 = 0.0, $15628 = 0, $15629 = 0, $1563 = 0, $15630 = 0;
 var $15631 = 0.0, $15632 = 0, $15633 = 0, $15634 = 0.0, $15635 = 0.0, $15636 = 0, $15637 = 0.0, $15638 = 0.0, $15639 = 0, $1564 = 0, $15640 = 0.0, $15641 = 0, $15642 = 0.0, $15643 = 0.0, $15644 = 0, $15645 = 0.0, $15646 = 0, $15647 = 0.0, $15648 = 0.0, $15649 = 0;
 var $1565 = 0, $15650 = 0.0, $15651 = 0, $15652 = 0.0, $15653 = 0.0, $15654 = 0, $15655 = 0.0, $15656 = 0.0, $15657 = 0, $15658 = 0.0, $15659 = 0.0, $1566 = 0, $15660 = 0.0, $15661 = 0.0, $15662 = 0, $15663 = 0.0, $15664 = 0.0, $15665 = 0.0, $15666 = 0.0, $15667 = 0.0;
 var $15668 = 0, $15669 = 0.0, $1567 = 0, $15670 = 0.0, $15671 = 0.0, $15672 = 0, $15673 = 0.0, $15674 = 0.0, $15675 = 0.0, $15676 = 0.0, $15677 = 0.0, $15678 = 0.0, $15679 = 0, $1568 = 0, $15680 = 0.0, $15681 = 0.0, $15682 = 0, $15683 = 0, $15684 = 0.0, $15685 = 0.0;
 var $15686 = 0.0, $15687 = 0, $15688 = 0.0, $15689 = 0, $1569 = 0, $15690 = 0.0, $15691 = 0.0, $15692 = 0.0, $15693 = 0, $15694 = 0.0, $15695 = 0, $15696 = 0.0, $15697 = 0.0, $15698 = 0.0, $15699 = 0, $157 = 0, $1570 = 0, $15700 = 0.0, $15701 = 0.0, $15702 = 0;
 var $15703 = 0.0, $15704 = 0.0, $15705 = 0.0, $15706 = 0.0, $15707 = 0.0, $15708 = 0, $15709 = 0.0, $1571 = 0, $15710 = 0, $15711 = 0.0, $15712 = 0.0, $15713 = 0.0, $15714 = 0, $15715 = 0, $15716 = 0.0, $15717 = 0.0, $15718 = 0.0, $15719 = 0.0, $1572 = 0, $15720 = 0.0;
 var $15721 = 0.0, $15722 = 0.0, $15723 = 0, $15724 = 0.0, $15725 = 0, $15726 = 0.0, $15727 = 0.0, $15728 = 0.0, $15729 = 0, $1573 = 0, $15730 = 0, $15731 = 0.0, $15732 = 0.0, $15733 = 0.0, $15734 = 0.0, $15735 = 0.0, $15736 = 0.0, $15737 = 0.0, $15738 = 0, $15739 = 0.0;
 var $1574 = 0, $15740 = 0.0, $15741 = 0, $15742 = 0, $15743 = 0.0, $15744 = 0, $15745 = 0.0, $15746 = 0.0, $15747 = 0, $15748 = 0.0, $15749 = 0.0, $1575 = 0, $15750 = 0.0, $15751 = 0.0, $15752 = 0.0, $15753 = 0.0, $15754 = 0.0, $15755 = 0, $15756 = 0.0, $15757 = 0.0;
 var $15758 = 0.0, $15759 = 0.0, $1576 = 0, $15760 = 0.0, $15761 = 0.0, $15762 = 0, $15763 = 0.0, $15764 = 0.0, $15765 = 0, $15766 = 0.0, $15767 = 0.0, $15768 = 0.0, $15769 = 0, $1577 = 0, $15770 = 0.0, $15771 = 0.0, $15772 = 0, $15773 = 0.0, $15774 = 0.0, $15775 = 0.0;
 var $15776 = 0.0, $15777 = 0.0, $15778 = 0, $15779 = 0.0, $1578 = 0, $15780 = 0.0, $15781 = 0.0, $15782 = 0.0, $15783 = 0, $15784 = 0.0, $15785 = 0.0, $15786 = 0, $15787 = 0.0, $15788 = 0.0, $15789 = 0.0, $1579 = 0, $15790 = 0.0, $15791 = 0.0, $15792 = 0, $15793 = 0;
 var $15794 = 0.0, $15795 = 0.0, $15796 = 0.0, $15797 = 0.0, $15798 = 0, $15799 = 0.0, $158 = 0.0, $1580 = 0, $15800 = 0.0, $15801 = 0.0, $15802 = 0.0, $15803 = 0, $15804 = 0.0, $15805 = 0.0, $15806 = 0.0, $15807 = 0.0, $15808 = 0.0, $15809 = 0.0, $1581 = 0, $15810 = 0;
 var $15811 = 0, $15812 = 0.0, $15813 = 0.0, $15814 = 0.0, $15815 = 0, $15816 = 0.0, $15817 = 0.0, $15818 = 0.0, $15819 = 0.0, $1582 = 0, $15820 = 0, $15821 = 0.0, $15822 = 0.0, $15823 = 0.0, $15824 = 0.0, $15825 = 0.0, $15826 = 0.0, $15827 = 0.0, $15828 = 0.0, $15829 = 0;
 var $1583 = 0, $15830 = 0.0, $15831 = 0.0, $15832 = 0, $15833 = 0, $15834 = 0.0, $15835 = 0.0, $15836 = 0, $15837 = 0, $15838 = 0.0, $15839 = 0.0, $1584 = 0.0, $15840 = 0, $15841 = 0, $15842 = 0.0, $15843 = 0.0, $15844 = 0, $15845 = 0, $15846 = 0.0, $15847 = 0.0;
 var $15848 = 0, $15849 = 0, $1585 = 0, $15850 = 0.0, $15851 = 0.0, $15852 = 0, $15853 = 0, $15854 = 0.0, $15855 = 0.0, $15856 = 0, $15857 = 0, $15858 = 0.0, $15859 = 0.0, $1586 = 0, $15860 = 0, $15861 = 0, $15862 = 0.0, $15863 = 0.0, $15864 = 0, $15865 = 0;
 var $15866 = 0.0, $15867 = 0.0, $15868 = 0, $15869 = 0, $1587 = 0.0, $15870 = 0.0, $15871 = 0.0, $15872 = 0, $15873 = 0, $15874 = 0.0, $15875 = 0.0, $15876 = 0, $15877 = 0, $15878 = 0, $15879 = 0, $1588 = 0.0, $15880 = 0, $15881 = 0.0, $15882 = 0, $15883 = 0;
 var $15884 = 0, $15885 = 0, $15886 = 0, $15887 = 0, $15888 = 0, $15889 = 0, $1589 = 0.0, $15890 = 0, $15891 = 0, $15892 = 0, $15893 = 0, $15894 = 0, $15895 = 0, $15896 = 0, $15897 = 0, $15898 = 0, $15899 = 0, $159 = 0.0, $1590 = 0, $15900 = 0;
 var $15901 = 0, $15902 = 0, $15903 = 0, $15904 = 0, $15905 = 0, $15906 = 0, $15907 = 0, $15908 = 0, $15909 = 0, $1591 = 0, $15910 = 0, $15911 = 0.0, $15912 = 0, $15913 = 0, $15914 = 0, $15915 = 0, $15916 = 0, $15917 = 0, $15918 = 0, $15919 = 0;
 var $1592 = 0, $15920 = 0, $15921 = 0, $15922 = 0, $15923 = 0, $15924 = 0, $15925 = 0, $15926 = 0, $15927 = 0, $15928 = 0, $15929 = 0, $1593 = 0.0, $15930 = 0, $15931 = 0, $15932 = 0, $15933 = 0, $15934 = 0, $15935 = 0, $15936 = 0, $15937 = 0;
 var $15938 = 0, $15939 = 0, $1594 = 0, $15940 = 0, $15941 = 0.0, $15942 = 0, $15943 = 0, $15944 = 0, $15945 = 0, $15946 = 0, $15947 = 0, $15948 = 0, $15949 = 0, $1595 = 0, $15950 = 0, $15951 = 0, $15952 = 0, $15953 = 0, $15954 = 0, $15955 = 0;
 var $15956 = 0, $15957 = 0, $15958 = 0, $15959 = 0, $1596 = 0.0, $15960 = 0, $15961 = 0, $15962 = 0, $15963 = 0, $15964 = 0, $15965 = 0, $15966 = 0, $15967 = 0, $15968 = 0, $15969 = 0, $1597 = 0.0, $15970 = 0, $15971 = 0.0, $15972 = 0, $15973 = 0;
 var $15974 = 0, $15975 = 0, $15976 = 0, $15977 = 0, $15978 = 0, $15979 = 0, $1598 = 0.0, $15980 = 0, $15981 = 0, $15982 = 0, $15983 = 0, $15984 = 0, $15985 = 0, $15986 = 0, $15987 = 0, $15988 = 0, $15989 = 0, $1599 = 0, $15990 = 0, $15991 = 0;
 var $15992 = 0, $15993 = 0, $15994 = 0, $15995 = 0, $15996 = 0, $15997 = 0, $15998 = 0, $15999 = 0, $16 = 0.0, $160 = 0.0, $1600 = 0, $16000 = 0, $16001 = 0.0, $16002 = 0, $16003 = 0, $16004 = 0, $16005 = 0, $16006 = 0, $16007 = 0, $16008 = 0;
 var $16009 = 0, $1601 = 0, $16010 = 0, $16011 = 0, $16012 = 0, $16013 = 0, $16014 = 0, $16015 = 0, $16016 = 0, $16017 = 0, $16018 = 0, $16019 = 0, $1602 = 0, $16020 = 0, $16021 = 0, $16022 = 0, $16023 = 0, $16024 = 0, $16025 = 0, $16026 = 0;
 var $16027 = 0, $16028 = 0, $16029 = 0, $1603 = 0, $16030 = 0, $16031 = 0.0, $16032 = 0, $16033 = 0, $16034 = 0, $16035 = 0, $16036 = 0, $16037 = 0, $16038 = 0, $16039 = 0, $1604 = 0, $16040 = 0, $16041 = 0, $16042 = 0, $16043 = 0, $16044 = 0;
 var $16045 = 0, $16046 = 0, $16047 = 0, $16048 = 0, $16049 = 0, $1605 = 0, $16050 = 0, $16051 = 0, $16052 = 0, $16053 = 0, $16054 = 0, $16055 = 0, $16056 = 0, $16057 = 0, $16058 = 0, $16059 = 0, $1606 = 0, $16060 = 0, $16061 = 0, $16062 = 0;
 var $16063 = 0, $16064 = 0, $16065 = 0, $16066 = 0, $16067 = 0, $16068 = 0, $16069 = 0, $1607 = 0, $16070 = 0, $16071 = 0, $16072 = 0, $16073 = 0, $16074 = 0, $16075 = 0, $16076 = 0, $16077 = 0, $16078 = 0, $16079 = 0, $1608 = 0, $16080 = 0;
 var $16081 = 0, $16082 = 0, $16083 = 0, $16084 = 0, $16085 = 0, $1609 = 0, $161 = 0.0, $1610 = 0.0, $1611 = 0, $1612 = 0, $1613 = 0, $1614 = 0.0, $1615 = 0, $1616 = 0, $1617 = 0, $1618 = 0.0, $1619 = 0, $162 = 0.0, $1620 = 0, $1621 = 0.0;
 var $1622 = 0.0, $1623 = 0, $1624 = 0.0, $1625 = 0.0, $1626 = 0, $1627 = 0.0, $1628 = 0.0, $1629 = 0.0, $163 = 0.0, $1630 = 0.0, $1631 = 0, $1632 = 0.0, $1633 = 0.0, $1634 = 0.0, $1635 = 0.0, $1636 = 0.0, $1637 = 0, $1638 = 0.0, $1639 = 0.0, $164 = 0.0;
 var $1640 = 0.0, $1641 = 0, $1642 = 0.0, $1643 = 0, $1644 = 0.0, $1645 = 0.0, $1646 = 0.0, $1647 = 0.0, $1648 = 0, $1649 = 0.0, $165 = 0.0, $1650 = 0, $1651 = 0.0, $1652 = 0.0, $1653 = 0.0, $1654 = 0, $1655 = 0.0, $1656 = 0, $1657 = 0.0, $1658 = 0.0;
 var $1659 = 0.0, $166 = 0, $1660 = 0.0, $1661 = 0.0, $1662 = 0, $1663 = 0.0, $1664 = 0, $1665 = 0.0, $1666 = 0.0, $1667 = 0.0, $1668 = 0, $1669 = 0, $167 = 0, $1670 = 0.0, $1671 = 0.0, $1672 = 0.0, $1673 = 0, $1674 = 0.0, $1675 = 0.0, $1676 = 0.0;
 var $1677 = 0.0, $1678 = 0, $1679 = 0.0, $168 = 0.0, $1680 = 0.0, $1681 = 0, $1682 = 0, $1683 = 0.0, $1684 = 0.0, $1685 = 0.0, $1686 = 0.0, $1687 = 0.0, $1688 = 0.0, $1689 = 0.0, $169 = 0.0, $1690 = 0, $1691 = 0.0, $1692 = 0, $1693 = 0.0, $1694 = 0.0;
 var $1695 = 0.0, $1696 = 0, $1697 = 0.0, $1698 = 0.0, $1699 = 0, $17 = 0, $170 = 0.0, $1700 = 0.0, $1701 = 0.0, $1702 = 0.0, $1703 = 0.0, $1704 = 0.0, $1705 = 0, $1706 = 0.0, $1707 = 0, $1708 = 0.0, $1709 = 0.0, $171 = 0.0, $1710 = 0.0, $1711 = 0;
 var $1712 = 0.0, $1713 = 0.0, $1714 = 0.0, $1715 = 0.0, $1716 = 0, $1717 = 0.0, $1718 = 0.0, $1719 = 0, $172 = 0.0, $1720 = 0.0, $1721 = 0.0, $1722 = 0.0, $1723 = 0.0, $1724 = 0, $1725 = 0.0, $1726 = 0.0, $1727 = 0, $1728 = 0.0, $1729 = 0.0, $173 = 0.0;
 var $1730 = 0.0, $1731 = 0.0, $1732 = 0, $1733 = 0.0, $1734 = 0.0, $1735 = 0.0, $1736 = 0.0, $1737 = 0.0, $1738 = 0, $1739 = 0.0, $174 = 0.0, $1740 = 0.0, $1741 = 0, $1742 = 0.0, $1743 = 0.0, $1744 = 0, $1745 = 0, $1746 = 0.0, $1747 = 0.0, $1748 = 0;
 var $1749 = 0, $175 = 0.0, $1750 = 0.0, $1751 = 0.0, $1752 = 0, $1753 = 0, $1754 = 0.0, $1755 = 0.0, $1756 = 0, $1757 = 0, $1758 = 0.0, $1759 = 0.0, $176 = 0.0, $1760 = 0, $1761 = 0, $1762 = 0.0, $1763 = 0.0, $1764 = 0, $1765 = 0, $1766 = 0.0;
 var $1767 = 0.0, $1768 = 0, $1769 = 0, $177 = 0.0, $1770 = 0.0, $1771 = 0.0, $1772 = 0, $1773 = 0, $1774 = 0, $1775 = 0, $1776 = 0, $1777 = 0.0, $1778 = 0, $1779 = 0, $178 = 0.0, $1780 = 0, $1781 = 0, $1782 = 0, $1783 = 0, $1784 = 0;
 var $1785 = 0, $1786 = 0, $1787 = 0, $1788 = 0, $1789 = 0, $179 = 0, $1790 = 0, $1791 = 0, $1792 = 0, $1793 = 0, $1794 = 0, $1795 = 0, $1796 = 0, $1797 = 0, $1798 = 0, $1799 = 0, $18 = 0.0, $180 = 0, $1800 = 0, $1801 = 0;
 var $1802 = 0, $1803 = 0, $1804 = 0, $1805 = 0, $1806 = 0, $1807 = 0.0, $1808 = 0, $1809 = 0, $181 = 0.0, $1810 = 0, $1811 = 0, $1812 = 0, $1813 = 0, $1814 = 0, $1815 = 0, $1816 = 0, $1817 = 0, $1818 = 0, $1819 = 0, $182 = 0.0;
 var $1820 = 0, $1821 = 0, $1822 = 0, $1823 = 0, $1824 = 0, $1825 = 0, $1826 = 0, $1827 = 0, $1828 = 0, $1829 = 0, $183 = 0.0, $1830 = 0, $1831 = 0, $1832 = 0, $1833 = 0, $1834 = 0, $1835 = 0, $1836 = 0, $1837 = 0.0, $1838 = 0;
 var $1839 = 0, $184 = 0.0, $1840 = 0, $1841 = 0, $1842 = 0, $1843 = 0, $1844 = 0, $1845 = 0, $1846 = 0, $1847 = 0, $1848 = 0, $1849 = 0, $185 = 0.0, $1850 = 0, $1851 = 0, $1852 = 0, $1853 = 0, $1854 = 0, $1855 = 0, $1856 = 0;
 var $1857 = 0, $1858 = 0, $1859 = 0, $186 = 0.0, $1860 = 0, $1861 = 0, $1862 = 0, $1863 = 0, $1864 = 0, $1865 = 0, $1866 = 0, $1867 = 0.0, $1868 = 0, $1869 = 0, $187 = 0.0, $1870 = 0, $1871 = 0, $1872 = 0, $1873 = 0, $1874 = 0;
 var $1875 = 0, $1876 = 0, $1877 = 0, $1878 = 0, $1879 = 0, $188 = 0, $1880 = 0, $1881 = 0, $1882 = 0, $1883 = 0, $1884 = 0, $1885 = 0, $1886 = 0, $1887 = 0, $1888 = 0, $1889 = 0, $189 = 0.0, $1890 = 0, $1891 = 0, $1892 = 0;
 var $1893 = 0, $1894 = 0, $1895 = 0, $1896 = 0, $1897 = 0.0, $1898 = 0, $1899 = 0, $19 = 0.0, $190 = 0.0, $1900 = 0, $1901 = 0, $1902 = 0, $1903 = 0, $1904 = 0, $1905 = 0, $1906 = 0, $1907 = 0, $1908 = 0, $1909 = 0, $191 = 0.0;
 var $1910 = 0, $1911 = 0, $1912 = 0, $1913 = 0, $1914 = 0, $1915 = 0, $1916 = 0, $1917 = 0, $1918 = 0, $1919 = 0, $192 = 0.0, $1920 = 0, $1921 = 0, $1922 = 0, $1923 = 0, $1924 = 0, $1925 = 0, $1926 = 0, $1927 = 0.0, $1928 = 0;
 var $1929 = 0, $193 = 0, $1930 = 0, $1931 = 0, $1932 = 0, $1933 = 0, $1934 = 0, $1935 = 0, $1936 = 0, $1937 = 0, $1938 = 0, $1939 = 0, $194 = 0, $1940 = 0, $1941 = 0, $1942 = 0, $1943 = 0, $1944 = 0, $1945 = 0, $1946 = 0;
 var $1947 = 0, $1948 = 0, $1949 = 0, $195 = 0, $1950 = 0, $1951 = 0, $1952 = 0, $1953 = 0, $1954 = 0, $1955 = 0, $1956 = 0, $1957 = 0, $1958 = 0, $1959 = 0, $196 = 0.0, $1960 = 0, $1961 = 0, $1962 = 0, $1963 = 0, $1964 = 0;
 var $1965 = 0, $1966 = 0, $1967 = 0, $1968 = 0, $1969 = 0, $197 = 0.0, $1970 = 0, $1971 = 0, $1972 = 0, $1973 = 0, $1974 = 0, $1975 = 0, $1976 = 0, $1977 = 0, $1978 = 0.0, $1979 = 0, $198 = 0, $1980 = 0, $1981 = 0, $1982 = 0.0;
 var $1983 = 0, $1984 = 0.0, $1985 = 0, $1986 = 0, $1987 = 0, $1988 = 0.0, $1989 = 0.0, $199 = 0.0, $1990 = 0.0, $1991 = 0, $1992 = 0.0, $1993 = 0, $1994 = 0.0, $1995 = 0.0, $1996 = 0.0, $1997 = 0.0, $1998 = 0, $1999 = 0.0, $2 = 0, $20 = 0;
 var $200 = 0, $2000 = 0, $2001 = 0.0, $2002 = 0.0, $2003 = 0.0, $2004 = 0.0, $2005 = 0.0, $2006 = 0.0, $2007 = 0, $2008 = 0, $2009 = 0.0, $201 = 0, $2010 = 0.0, $2011 = 0.0, $2012 = 0.0, $2013 = 0, $2014 = 0.0, $2015 = 0.0, $2016 = 0.0, $2017 = 0;
 var $2018 = 0.0, $2019 = 0, $202 = 0.0, $2020 = 0.0, $2021 = 0.0, $2022 = 0.0, $2023 = 0.0, $2024 = 0, $2025 = 0.0, $2026 = 0, $2027 = 0.0, $2028 = 0.0, $2029 = 0.0, $203 = 0.0, $2030 = 0.0, $2031 = 0.0, $2032 = 0.0, $2033 = 0, $2034 = 0.0, $2035 = 0.0;
 var $2036 = 0.0, $2037 = 0.0, $2038 = 0.0, $2039 = 0.0, $204 = 0.0, $2040 = 0.0, $2041 = 0, $2042 = 0.0, $2043 = 0.0, $2044 = 0.0, $2045 = 0, $2046 = 0.0, $2047 = 0, $2048 = 0.0, $2049 = 0.0, $205 = 0.0, $2050 = 0.0, $2051 = 0.0, $2052 = 0, $2053 = 0.0;
 var $2054 = 0, $2055 = 0.0, $2056 = 0.0, $2057 = 0.0, $2058 = 0.0, $2059 = 0.0, $206 = 0.0, $2060 = 0, $2061 = 0.0, $2062 = 0.0, $2063 = 0.0, $2064 = 0.0, $2065 = 0.0, $2066 = 0.0, $2067 = 0.0, $2068 = 0.0, $2069 = 0.0, $207 = 0, $2070 = 0, $2071 = 0.0;
 var $2072 = 0.0, $2073 = 0, $2074 = 0.0, $2075 = 0.0, $2076 = 0, $2077 = 0, $2078 = 0, $2079 = 0, $208 = 0.0, $2080 = 0, $2081 = 0, $2082 = 0, $2083 = 0, $2084 = 0, $2085 = 0, $2086 = 0, $2087 = 0, $2088 = 0, $2089 = 0, $209 = 0.0;
 var $2090 = 0, $2091 = 0, $2092 = 0, $2093 = 0, $2094 = 0, $2095 = 0, $2096 = 0, $2097 = 0.0, $2098 = 0, $2099 = 0, $21 = 0.0, $210 = 0, $2100 = 0.0, $2101 = 0.0, $2102 = 0.0, $2103 = 0, $2104 = 0, $2105 = 0, $2106 = 0.0, $2107 = 0;
 var $2108 = 0, $2109 = 0.0, $211 = 0.0, $2110 = 0.0, $2111 = 0.0, $2112 = 0, $2113 = 0, $2114 = 0, $2115 = 0, $2116 = 0, $2117 = 0, $2118 = 0, $2119 = 0, $212 = 0.0, $2120 = 0, $2121 = 0, $2122 = 0, $2123 = 0.0, $2124 = 0, $2125 = 0;
 var $2126 = 0, $2127 = 0.0, $2128 = 0, $2129 = 0, $213 = 0, $2130 = 0, $2131 = 0.0, $2132 = 0, $2133 = 0, $2134 = 0.0, $2135 = 0.0, $2136 = 0, $2137 = 0.0, $2138 = 0.0, $2139 = 0, $214 = 0.0, $2140 = 0.0, $2141 = 0.0, $2142 = 0, $2143 = 0.0;
 var $2144 = 0.0, $2145 = 0, $2146 = 0.0, $2147 = 0.0, $2148 = 0.0, $2149 = 0, $215 = 0, $2150 = 0.0, $2151 = 0.0, $2152 = 0.0, $2153 = 0.0, $2154 = 0.0, $2155 = 0.0, $2156 = 0.0, $2157 = 0, $2158 = 0.0, $2159 = 0.0, $216 = 0, $2160 = 0.0, $2161 = 0.0;
 var $2162 = 0.0, $2163 = 0.0, $2164 = 0, $2165 = 0.0, $2166 = 0.0, $2167 = 0, $2168 = 0, $2169 = 0.0, $217 = 0, $2170 = 0.0, $2171 = 0.0, $2172 = 0, $2173 = 0.0, $2174 = 0.0, $2175 = 0.0, $2176 = 0.0, $2177 = 0.0, $2178 = 0, $2179 = 0.0, $218 = 0;
 var $2180 = 0.0, $2181 = 0.0, $2182 = 0.0, $2183 = 0.0, $2184 = 0.0, $2185 = 0, $2186 = 0, $2187 = 0.0, $2188 = 0.0, $2189 = 0.0, $219 = 0, $2190 = 0, $2191 = 0.0, $2192 = 0.0, $2193 = 0.0, $2194 = 0.0, $2195 = 0.0, $2196 = 0, $2197 = 0.0, $2198 = 0.0;
 var $2199 = 0.0, $22 = 0.0, $220 = 0, $2200 = 0.0, $2201 = 0, $2202 = 0, $2203 = 0.0, $2204 = 0.0, $2205 = 0.0, $2206 = 0.0, $2207 = 0.0, $2208 = 0.0, $2209 = 0, $221 = 0, $2210 = 0.0, $2211 = 0.0, $2212 = 0.0, $2213 = 0.0, $2214 = 0.0, $2215 = 0;
 var $2216 = 0.0, $2217 = 0.0, $2218 = 0.0, $2219 = 0.0, $222 = 0, $2220 = 0.0, $2221 = 0.0, $2222 = 0.0, $2223 = 0, $2224 = 0, $2225 = 0.0, $2226 = 0.0, $2227 = 0.0, $2228 = 0.0, $2229 = 0, $223 = 0, $2230 = 0.0, $2231 = 0.0, $2232 = 0.0, $2233 = 0.0;
 var $2234 = 0.0, $2235 = 0.0, $2236 = 0.0, $2237 = 0, $2238 = 0.0, $2239 = 0.0, $224 = 0, $2240 = 0.0, $2241 = 0.0, $2242 = 0.0, $2243 = 0.0, $2244 = 0.0, $2245 = 0, $2246 = 0, $2247 = 0.0, $2248 = 0.0, $2249 = 0.0, $225 = 0, $2250 = 0.0, $2251 = 0.0;
 var $2252 = 0.0, $2253 = 0.0, $2254 = 0.0, $2255 = 0.0, $2256 = 0.0, $2257 = 0.0, $2258 = 0.0, $2259 = 0.0, $226 = 0, $2260 = 0.0, $2261 = 0.0, $2262 = 0, $2263 = 0.0, $2264 = 0.0, $2265 = 0, $2266 = 0, $2267 = 0.0, $2268 = 0.0, $2269 = 0, $227 = 0;
 var $2270 = 0, $2271 = 0.0, $2272 = 0.0, $2273 = 0, $2274 = 0, $2275 = 0.0, $2276 = 0.0, $2277 = 0, $2278 = 0, $2279 = 0.0, $228 = 0, $2280 = 0.0, $2281 = 0, $2282 = 0, $2283 = 0.0, $2284 = 0.0, $2285 = 0, $2286 = 0, $2287 = 0.0, $2288 = 0.0;
 var $2289 = 0, $229 = 0, $2290 = 0, $2291 = 0.0, $2292 = 0.0, $2293 = 0, $2294 = 0, $2295 = 0.0, $2296 = 0, $2297 = 0.0, $2298 = 0.0, $2299 = 0, $23 = 0, $230 = 0, $2300 = 0.0, $2301 = 0, $2302 = 0.0, $2303 = 0.0, $2304 = 0, $2305 = 0.0;
 var $2306 = 0.0, $2307 = 0, $2308 = 0.0, $2309 = 0.0, $231 = 0, $2310 = 0, $2311 = 0.0, $2312 = 0, $2313 = 0.0, $2314 = 0.0, $2315 = 0, $2316 = 0.0, $2317 = 0, $2318 = 0.0, $2319 = 0.0, $232 = 0, $2320 = 0, $2321 = 0.0, $2322 = 0, $2323 = 0.0;
 var $2324 = 0.0, $2325 = 0.0, $2326 = 0, $2327 = 0.0, $2328 = 0, $2329 = 0.0, $233 = 0, $2330 = 0.0, $2331 = 0.0, $2332 = 0.0, $2333 = 0, $2334 = 0.0, $2335 = 0.0, $2336 = 0.0, $2337 = 0, $2338 = 0.0, $2339 = 0.0, $234 = 0, $2340 = 0.0, $2341 = 0;
 var $2342 = 0.0, $2343 = 0.0, $2344 = 0.0, $2345 = 0.0, $2346 = 0, $2347 = 0.0, $2348 = 0.0, $2349 = 0.0, $235 = 0, $2350 = 0.0, $2351 = 0.0, $2352 = 0.0, $2353 = 0.0, $2354 = 0, $2355 = 0.0, $2356 = 0.0, $2357 = 0.0, $2358 = 0.0, $2359 = 0, $236 = 0;
 var $2360 = 0.0, $2361 = 0.0, $2362 = 0.0, $2363 = 0, $2364 = 0.0, $2365 = 0.0, $2366 = 0.0, $2367 = 0.0, $2368 = 0.0, $2369 = 0.0, $237 = 0.0, $2370 = 0.0, $2371 = 0.0, $2372 = 0, $2373 = 0, $2374 = 0.0, $2375 = 0.0, $2376 = 0.0, $2377 = 0.0, $2378 = 0.0;
 var $2379 = 0.0, $238 = 0, $2380 = 0.0, $2381 = 0, $2382 = 0.0, $2383 = 0.0, $2384 = 0.0, $2385 = 0.0, $2386 = 0, $2387 = 0, $2388 = 0.0, $2389 = 0.0, $239 = 0, $2390 = 0.0, $2391 = 0.0, $2392 = 0, $2393 = 0.0, $2394 = 0, $2395 = 0.0, $2396 = 0.0;
 var $2397 = 0.0, $2398 = 0, $2399 = 0, $24 = 0.0, $240 = 0.0, $2400 = 0.0, $2401 = 0.0, $2402 = 0.0, $2403 = 0.0, $2404 = 0, $2405 = 0.0, $2406 = 0, $2407 = 0.0, $2408 = 0.0, $2409 = 0.0, $241 = 0.0, $2410 = 0, $2411 = 0, $2412 = 0.0, $2413 = 0.0;
 var $2414 = 0.0, $2415 = 0.0, $2416 = 0, $2417 = 0.0, $2418 = 0, $2419 = 0.0, $242 = 0.0, $2420 = 0.0, $2421 = 0.0, $2422 = 0, $2423 = 0, $2424 = 0.0, $2425 = 0.0, $2426 = 0.0, $2427 = 0.0, $2428 = 0.0, $2429 = 0.0, $243 = 0, $2430 = 0.0, $2431 = 0;
 var $2432 = 0.0, $2433 = 0.0, $2434 = 0.0, $2435 = 0.0, $2436 = 0, $2437 = 0.0, $2438 = 0.0, $2439 = 0.0, $244 = 0, $2440 = 0.0, $2441 = 0.0, $2442 = 0.0, $2443 = 0.0, $2444 = 0, $2445 = 0.0, $2446 = 0.0, $2447 = 0.0, $2448 = 0.0, $2449 = 0, $245 = 0;
 var $2450 = 0.0, $2451 = 0.0, $2452 = 0.0, $2453 = 0, $2454 = 0.0, $2455 = 0.0, $2456 = 0.0, $2457 = 0.0, $2458 = 0, $2459 = 0.0, $246 = 0.0, $2460 = 0.0, $2461 = 0.0, $2462 = 0.0, $2463 = 0, $2464 = 0, $2465 = 0.0, $2466 = 0, $2467 = 0.0, $2468 = 0.0;
 var $2469 = 0, $247 = 0, $2470 = 0.0, $2471 = 0.0, $2472 = 0, $2473 = 0, $2474 = 0.0, $2475 = 0.0, $2476 = 0, $2477 = 0, $2478 = 0.0, $2479 = 0, $248 = 0, $2480 = 0.0, $2481 = 0.0, $2482 = 0, $2483 = 0.0, $2484 = 0, $2485 = 0.0, $2486 = 0.0;
 var $2487 = 0, $2488 = 0.0, $2489 = 0.0, $249 = 0.0, $2490 = 0, $2491 = 0.0, $2492 = 0.0, $2493 = 0, $2494 = 0.0, $2495 = 0, $2496 = 0.0, $2497 = 0.0, $2498 = 0, $2499 = 0.0, $25 = 0, $250 = 0.0, $2500 = 0, $2501 = 0.0, $2502 = 0.0, $2503 = 0;
 var $2504 = 0.0, $2505 = 0, $2506 = 0.0, $2507 = 0.0, $2508 = 0.0, $2509 = 0, $251 = 0.0, $2510 = 0.0, $2511 = 0, $2512 = 0.0, $2513 = 0.0, $2514 = 0.0, $2515 = 0.0, $2516 = 0, $2517 = 0.0, $2518 = 0.0, $2519 = 0.0, $252 = 0, $2520 = 0, $2521 = 0.0;
 var $2522 = 0.0, $2523 = 0.0, $2524 = 0, $2525 = 0.0, $2526 = 0.0, $2527 = 0.0, $2528 = 0.0, $2529 = 0, $253 = 0, $2530 = 0.0, $2531 = 0.0, $2532 = 0.0, $2533 = 0.0, $2534 = 0.0, $2535 = 0.0, $2536 = 0.0, $2537 = 0, $2538 = 0.0, $2539 = 0.0, $254 = 0;
 var $2540 = 0.0, $2541 = 0.0, $2542 = 0, $2543 = 0.0, $2544 = 0.0, $2545 = 0.0, $2546 = 0, $2547 = 0.0, $2548 = 0.0, $2549 = 0.0, $255 = 0, $2550 = 0.0, $2551 = 0.0, $2552 = 0.0, $2553 = 0.0, $2554 = 0.0, $2555 = 0, $2556 = 0, $2557 = 0.0, $2558 = 0.0;
 var $2559 = 0.0, $256 = 0, $2560 = 0.0, $2561 = 0.0, $2562 = 0.0, $2563 = 0.0, $2564 = 0, $2565 = 0.0, $2566 = 0.0, $2567 = 0.0, $2568 = 0.0, $2569 = 0, $257 = 0, $2570 = 0, $2571 = 0.0, $2572 = 0.0, $2573 = 0.0, $2574 = 0.0, $2575 = 0, $2576 = 0.0;
 var $2577 = 0, $2578 = 0.0, $2579 = 0.0, $258 = 0, $2580 = 0.0, $2581 = 0, $2582 = 0, $2583 = 0.0, $2584 = 0.0, $2585 = 0.0, $2586 = 0.0, $2587 = 0, $2588 = 0.0, $2589 = 0, $259 = 0, $2590 = 0.0, $2591 = 0.0, $2592 = 0.0, $2593 = 0, $2594 = 0;
 var $2595 = 0.0, $2596 = 0.0, $2597 = 0.0, $2598 = 0.0, $2599 = 0, $26 = 0.0, $260 = 0, $2600 = 0.0, $2601 = 0, $2602 = 0.0, $2603 = 0.0, $2604 = 0.0, $2605 = 0, $2606 = 0, $2607 = 0.0, $2608 = 0.0, $2609 = 0.0, $261 = 0, $2610 = 0.0, $2611 = 0.0;
 var $2612 = 0.0, $2613 = 0.0, $2614 = 0, $2615 = 0.0, $2616 = 0.0, $2617 = 0.0, $2618 = 0.0, $2619 = 0, $262 = 0, $2620 = 0.0, $2621 = 0.0, $2622 = 0.0, $2623 = 0, $2624 = 0.0, $2625 = 0.0, $2626 = 0.0, $2627 = 0.0, $2628 = 0.0, $2629 = 0.0, $263 = 0.0;
 var $2630 = 0.0, $2631 = 0.0, $2632 = 0, $2633 = 0, $2634 = 0.0, $2635 = 0.0, $2636 = 0.0, $2637 = 0.0, $2638 = 0.0, $2639 = 0.0, $264 = 0, $2640 = 0.0, $2641 = 0, $2642 = 0.0, $2643 = 0.0, $2644 = 0.0, $2645 = 0.0, $2646 = 0, $2647 = 0, $2648 = 0.0;
 var $2649 = 0, $265 = 0, $2650 = 0.0, $2651 = 0, $2652 = 0.0, $2653 = 0.0, $2654 = 0, $2655 = 0, $2656 = 0.0, $2657 = 0.0, $2658 = 0, $2659 = 0, $266 = 0, $2660 = 0.0, $2661 = 0, $2662 = 0.0, $2663 = 0.0, $2664 = 0, $2665 = 0.0, $2666 = 0;
 var $2667 = 0.0, $2668 = 0.0, $2669 = 0, $267 = 0.0, $2670 = 0.0, $2671 = 0.0, $2672 = 0, $2673 = 0.0, $2674 = 0.0, $2675 = 0, $2676 = 0.0, $2677 = 0, $2678 = 0.0, $2679 = 0.0, $268 = 0, $2680 = 0, $2681 = 0.0, $2682 = 0, $2683 = 0.0, $2684 = 0.0;
 var $2685 = 0, $2686 = 0.0, $2687 = 0, $2688 = 0.0, $2689 = 0.0, $269 = 0, $2690 = 0.0, $2691 = 0, $2692 = 0.0, $2693 = 0, $2694 = 0.0, $2695 = 0.0, $2696 = 0.0, $2697 = 0.0, $2698 = 0, $2699 = 0.0, $27 = 0.0, $270 = 0, $2700 = 0.0, $2701 = 0.0;
 var $2702 = 0, $2703 = 0.0, $2704 = 0.0, $2705 = 0.0, $2706 = 0, $2707 = 0.0, $2708 = 0.0, $2709 = 0.0, $271 = 0.0, $2710 = 0.0, $2711 = 0.0, $2712 = 0.0, $2713 = 0.0, $2714 = 0, $2715 = 0.0, $2716 = 0.0, $2717 = 0.0, $2718 = 0.0, $2719 = 0, $272 = 0;
 var $2720 = 0.0, $2721 = 0.0, $2722 = 0.0, $2723 = 0.0, $2724 = 0, $2725 = 0.0, $2726 = 0.0, $2727 = 0.0, $2728 = 0, $2729 = 0.0, $273 = 0, $2730 = 0.0, $2731 = 0.0, $2732 = 0.0, $2733 = 0.0, $2734 = 0.0, $2735 = 0.0, $2736 = 0.0, $2737 = 0, $2738 = 0;
 var $2739 = 0.0, $274 = 0.0, $2740 = 0.0, $2741 = 0.0, $2742 = 0.0, $2743 = 0.0, $2744 = 0.0, $2745 = 0.0, $2746 = 0, $2747 = 0.0, $2748 = 0.0, $2749 = 0.0, $275 = 0, $2750 = 0.0, $2751 = 0, $2752 = 0, $2753 = 0.0, $2754 = 0.0, $2755 = 0.0, $2756 = 0.0;
 var $2757 = 0, $2758 = 0.0, $2759 = 0, $276 = 0.0, $2760 = 0.0, $2761 = 0.0, $2762 = 0.0, $2763 = 0, $2764 = 0, $2765 = 0.0, $2766 = 0.0, $2767 = 0.0, $2768 = 0.0, $2769 = 0, $277 = 0.0, $2770 = 0.0, $2771 = 0, $2772 = 0.0, $2773 = 0.0, $2774 = 0.0;
 var $2775 = 0, $2776 = 0, $2777 = 0.0, $2778 = 0.0, $2779 = 0.0, $278 = 0, $2780 = 0.0, $2781 = 0, $2782 = 0.0, $2783 = 0, $2784 = 0.0, $2785 = 0.0, $2786 = 0.0, $2787 = 0, $2788 = 0.0, $2789 = 0.0, $279 = 0.0, $2790 = 0.0, $2791 = 0, $2792 = 0.0;
 var $2793 = 0.0, $2794 = 0.0, $2795 = 0.0, $2796 = 0, $2797 = 0.0, $2798 = 0.0, $2799 = 0.0, $28 = 0, $280 = 0, $2800 = 0.0, $2801 = 0, $2802 = 0.0, $2803 = 0.0, $2804 = 0.0, $2805 = 0, $2806 = 0.0, $2807 = 0.0, $2808 = 0.0, $2809 = 0.0, $281 = 0.0;
 var $2810 = 0.0, $2811 = 0.0, $2812 = 0.0, $2813 = 0.0, $2814 = 0, $2815 = 0, $2816 = 0.0, $2817 = 0.0, $2818 = 0.0, $2819 = 0.0, $282 = 0.0, $2820 = 0.0, $2821 = 0.0, $2822 = 0.0, $2823 = 0, $2824 = 0.0, $2825 = 0.0, $2826 = 0.0, $2827 = 0.0, $2828 = 0;
 var $2829 = 0, $283 = 0, $2830 = 0.0, $2831 = 0, $2832 = 0.0, $2833 = 0, $2834 = 0, $2835 = 0.0, $2836 = 0, $2837 = 0.0, $2838 = 0.0, $2839 = 0, $284 = 0.0, $2840 = 0, $2841 = 0.0, $2842 = 0.0, $2843 = 0, $2844 = 0, $2845 = 0.0, $2846 = 0.0;
 var $2847 = 0, $2848 = 0, $2849 = 0.0, $285 = 0.0, $2850 = 0, $2851 = 0.0, $2852 = 0.0, $2853 = 0.0, $2854 = 0, $2855 = 0.0, $2856 = 0.0, $2857 = 0, $2858 = 0.0, $2859 = 0.0, $286 = 0, $2860 = 0, $2861 = 0.0, $2862 = 0.0, $2863 = 0, $2864 = 0.0;
 var $2865 = 0.0, $2866 = 0, $2867 = 0.0, $2868 = 0.0, $2869 = 0.0, $287 = 0.0, $2870 = 0.0, $2871 = 0.0, $2872 = 0.0, $2873 = 0.0, $2874 = 0, $2875 = 0.0, $2876 = 0, $2877 = 0, $2878 = 0.0, $2879 = 0, $288 = 0.0, $2880 = 0.0, $2881 = 0, $2882 = 0.0;
 var $2883 = 0, $2884 = 0, $2885 = 0.0, $2886 = 0, $2887 = 0.0, $2888 = 0.0, $2889 = 0, $289 = 0, $2890 = 0.0, $2891 = 0.0, $2892 = 0.0, $2893 = 0.0, $2894 = 0.0, $2895 = 0, $2896 = 0, $2897 = 0.0, $2898 = 0.0, $2899 = 0.0, $29 = 0.0, $290 = 0.0;
 var $2900 = 0.0, $2901 = 0, $2902 = 0.0, $2903 = 0.0, $2904 = 0.0, $2905 = 0.0, $2906 = 0.0, $2907 = 0, $2908 = 0, $2909 = 0.0, $291 = 0, $2910 = 0.0, $2911 = 0.0, $2912 = 0.0, $2913 = 0, $2914 = 0.0, $2915 = 0.0, $2916 = 0.0, $2917 = 0.0, $2918 = 0.0;
 var $2919 = 0, $292 = 0.0, $2920 = 0, $2921 = 0.0, $2922 = 0.0, $2923 = 0.0, $2924 = 0.0, $2925 = 0.0, $2926 = 0, $2927 = 0.0, $2928 = 0.0, $2929 = 0.0, $293 = 0.0, $2930 = 0.0, $2931 = 0.0, $2932 = 0, $2933 = 0.0, $2934 = 0.0, $2935 = 0, $2936 = 0;
 var $2937 = 0.0, $2938 = 0.0, $2939 = 0, $294 = 0, $2940 = 0, $2941 = 0.0, $2942 = 0.0, $2943 = 0, $2944 = 0, $2945 = 0.0, $2946 = 0.0, $2947 = 0, $2948 = 0, $2949 = 0.0, $295 = 0.0, $2950 = 0.0, $2951 = 0, $2952 = 0, $2953 = 0.0, $2954 = 0.0;
 var $2955 = 0, $2956 = 0, $2957 = 0.0, $2958 = 0.0, $2959 = 0, $296 = 0, $2960 = 0, $2961 = 0.0, $2962 = 0.0, $2963 = 0, $2964 = 0, $2965 = 0.0, $2966 = 0.0, $2967 = 0, $2968 = 0, $2969 = 0.0, $297 = 0.0, $2970 = 0.0, $2971 = 0, $2972 = 0;
 var $2973 = 0, $2974 = 0.0, $2975 = 0, $2976 = 0.0, $2977 = 0.0, $2978 = 0, $2979 = 0, $298 = 0.0, $2980 = 0, $2981 = 0, $2982 = 0.0, $2983 = 0.0, $2984 = 0, $2985 = 0, $2986 = 0, $2987 = 0.0, $2988 = 0.0, $2989 = 0.0, $299 = 0, $2990 = 0.0;
 var $2991 = 0.0, $2992 = 0.0, $2993 = 0.0, $2994 = 0.0, $2995 = 0.0, $2996 = 0.0, $2997 = 0, $2998 = 0.0, $2999 = 0.0, $3 = 0, $30 = 0, $300 = 0.0, $3000 = 0, $3001 = 0.0, $3002 = 0.0, $3003 = 0, $3004 = 0, $3005 = 0, $3006 = 0, $3007 = 0;
 var $3008 = 0, $3009 = 0, $301 = 0, $3010 = 0, $3011 = 0, $3012 = 0, $3013 = 0, $3014 = 0, $3015 = 0, $3016 = 0, $3017 = 0, $3018 = 0, $3019 = 0, $302 = 0.0, $3020 = 0, $3021 = 0, $3022 = 0, $3023 = 0, $3024 = 0.0, $3025 = 0;
 var $3026 = 0, $3027 = 0.0, $3028 = 0.0, $3029 = 0.0, $303 = 0.0, $3030 = 0, $3031 = 0, $3032 = 0, $3033 = 0.0, $3034 = 0, $3035 = 0, $3036 = 0.0, $3037 = 0.0, $3038 = 0.0, $3039 = 0, $304 = 0.0, $3040 = 0, $3041 = 0, $3042 = 0, $3043 = 0;
 var $3044 = 0, $3045 = 0, $3046 = 0, $3047 = 0, $3048 = 0, $3049 = 0, $305 = 0, $3050 = 0.0, $3051 = 0, $3052 = 0, $3053 = 0, $3054 = 0.0, $3055 = 0, $3056 = 0, $3057 = 0, $3058 = 0.0, $3059 = 0, $306 = 0.0, $3060 = 0, $3061 = 0.0;
 var $3062 = 0.0, $3063 = 0, $3064 = 0.0, $3065 = 0.0, $3066 = 0, $3067 = 0.0, $3068 = 0.0, $3069 = 0.0, $307 = 0, $3070 = 0.0, $3071 = 0.0, $3072 = 0.0, $3073 = 0, $3074 = 0.0, $3075 = 0.0, $3076 = 0.0, $3077 = 0, $3078 = 0.0, $3079 = 0.0, $308 = 0.0;
 var $3080 = 0, $3081 = 0.0, $3082 = 0.0, $3083 = 0.0, $3084 = 0, $3085 = 0.0, $3086 = 0.0, $3087 = 0, $3088 = 0.0, $3089 = 0.0, $309 = 0.0, $3090 = 0.0, $3091 = 0.0, $3092 = 0, $3093 = 0.0, $3094 = 0.0, $3095 = 0, $3096 = 0, $3097 = 0.0, $3098 = 0.0;
 var $3099 = 0.0, $31 = 0.0, $310 = 0.0, $3100 = 0.0, $3101 = 0, $3102 = 0.0, $3103 = 0.0, $3104 = 0, $3105 = 0.0, $3106 = 0.0, $3107 = 0, $3108 = 0.0, $3109 = 0.0, $311 = 0.0, $3110 = 0.0, $3111 = 0, $3112 = 0.0, $3113 = 0.0, $3114 = 0, $3115 = 0.0;
 var $3116 = 0.0, $3117 = 0.0, $3118 = 0, $3119 = 0, $312 = 0, $3120 = 0.0, $3121 = 0.0, $3122 = 0.0, $3123 = 0.0, $3124 = 0.0, $3125 = 0.0, $3126 = 0, $3127 = 0.0, $3128 = 0, $3129 = 0.0, $313 = 0.0, $3130 = 0.0, $3131 = 0.0, $3132 = 0, $3133 = 0.0;
 var $3134 = 0.0, $3135 = 0, $3136 = 0.0, $3137 = 0.0, $3138 = 0.0, $3139 = 0.0, $314 = 0.0, $3140 = 0.0, $3141 = 0, $3142 = 0.0, $3143 = 0, $3144 = 0.0, $3145 = 0.0, $3146 = 0.0, $3147 = 0, $3148 = 0.0, $3149 = 0.0, $315 = 0.0, $3150 = 0, $3151 = 0;
 var $3152 = 0.0, $3153 = 0.0, $3154 = 0, $3155 = 0, $3156 = 0.0, $3157 = 0.0, $3158 = 0, $3159 = 0, $316 = 0, $3160 = 0.0, $3161 = 0.0, $3162 = 0, $3163 = 0, $3164 = 0.0, $3165 = 0.0, $3166 = 0, $3167 = 0, $3168 = 0.0, $3169 = 0.0, $317 = 0.0;
 var $3170 = 0, $3171 = 0, $3172 = 0.0, $3173 = 0.0, $3174 = 0, $3175 = 0, $3176 = 0.0, $3177 = 0.0, $3178 = 0, $3179 = 0, $318 = 0.0, $3180 = 0, $3181 = 0, $3182 = 0, $3183 = 0.0, $3184 = 0, $3185 = 0, $3186 = 0, $3187 = 0, $3188 = 0;
 var $3189 = 0, $319 = 0.0, $3190 = 0, $3191 = 0, $3192 = 0, $3193 = 0, $3194 = 0, $3195 = 0, $3196 = 0, $3197 = 0, $3198 = 0, $3199 = 0, $32 = 0.0, $320 = 0, $3200 = 0, $3201 = 0, $3202 = 0, $3203 = 0, $3204 = 0, $3205 = 0;
 var $3206 = 0, $3207 = 0, $3208 = 0, $3209 = 0, $321 = 0.0, $3210 = 0, $3211 = 0, $3212 = 0, $3213 = 0.0, $3214 = 0, $3215 = 0, $3216 = 0, $3217 = 0, $3218 = 0, $3219 = 0, $322 = 0.0, $3220 = 0, $3221 = 0, $3222 = 0, $3223 = 0;
 var $3224 = 0, $3225 = 0, $3226 = 0, $3227 = 0, $3228 = 0, $3229 = 0, $323 = 0.0, $3230 = 0, $3231 = 0, $3232 = 0, $3233 = 0, $3234 = 0, $3235 = 0, $3236 = 0, $3237 = 0, $3238 = 0, $3239 = 0, $324 = 0.0, $3240 = 0, $3241 = 0;
 var $3242 = 0, $3243 = 0.0, $3244 = 0, $3245 = 0, $3246 = 0, $3247 = 0, $3248 = 0, $3249 = 0, $325 = 0, $3250 = 0, $3251 = 0, $3252 = 0, $3253 = 0, $3254 = 0, $3255 = 0, $3256 = 0, $3257 = 0, $3258 = 0, $3259 = 0, $326 = 0.0;
 var $3260 = 0, $3261 = 0, $3262 = 0, $3263 = 0, $3264 = 0, $3265 = 0, $3266 = 0, $3267 = 0, $3268 = 0, $3269 = 0, $327 = 0.0, $3270 = 0, $3271 = 0, $3272 = 0, $3273 = 0.0, $3274 = 0, $3275 = 0, $3276 = 0, $3277 = 0, $3278 = 0;
 var $3279 = 0, $328 = 0.0, $3280 = 0, $3281 = 0, $3282 = 0, $3283 = 0, $3284 = 0, $3285 = 0, $3286 = 0, $3287 = 0, $3288 = 0, $3289 = 0, $329 = 0.0, $3290 = 0, $3291 = 0, $3292 = 0, $3293 = 0, $3294 = 0, $3295 = 0, $3296 = 0;
 var $3297 = 0, $3298 = 0, $3299 = 0, $33 = 0, $330 = 0.0, $3300 = 0, $3301 = 0, $3302 = 0, $3303 = 0.0, $3304 = 0, $3305 = 0, $3306 = 0, $3307 = 0, $3308 = 0, $3309 = 0, $331 = 0.0, $3310 = 0, $3311 = 0, $3312 = 0, $3313 = 0;
 var $3314 = 0, $3315 = 0, $3316 = 0, $3317 = 0, $3318 = 0, $3319 = 0, $332 = 0.0, $3320 = 0, $3321 = 0, $3322 = 0, $3323 = 0, $3324 = 0, $3325 = 0, $3326 = 0, $3327 = 0, $3328 = 0, $3329 = 0, $333 = 0, $3330 = 0, $3331 = 0;
 var $3332 = 0, $3333 = 0.0, $3334 = 0, $3335 = 0, $3336 = 0, $3337 = 0, $3338 = 0, $3339 = 0, $334 = 0.0, $3340 = 0, $3341 = 0, $3342 = 0, $3343 = 0, $3344 = 0, $3345 = 0, $3346 = 0, $3347 = 0, $3348 = 0, $3349 = 0, $335 = 0.0;
 var $3350 = 0, $3351 = 0, $3352 = 0, $3353 = 0, $3354 = 0, $3355 = 0, $3356 = 0, $3357 = 0, $3358 = 0, $3359 = 0, $336 = 0.0, $3360 = 0, $3361 = 0, $3362 = 0, $3363 = 0, $3364 = 0, $3365 = 0, $3366 = 0, $3367 = 0, $3368 = 0;
 var $3369 = 0, $337 = 0.0, $3370 = 0, $3371 = 0, $3372 = 0, $3373 = 0, $3374 = 0, $3375 = 0, $3376 = 0, $3377 = 0, $3378 = 0, $3379 = 0, $338 = 0, $3380 = 0, $3381 = 0.0, $3382 = 0, $3383 = 0.0, $3384 = 0.0, $3385 = 0.0, $3386 = 0;
 var $3387 = 0.0, $3388 = 0.0, $3389 = 0, $339 = 0.0, $3390 = 0.0, $3391 = 0.0, $3392 = 0, $3393 = 0.0, $3394 = 0.0, $3395 = 0.0, $3396 = 0.0, $3397 = 0.0, $3398 = 0.0, $3399 = 0.0, $34 = 0.0, $340 = 0.0, $3400 = 0, $3401 = 0.0, $3402 = 0, $3403 = 0;
 var $3404 = 0.0, $3405 = 0, $3406 = 0, $3407 = 0.0, $3408 = 0, $3409 = 0.0, $341 = 0.0, $3410 = 0.0, $3411 = 0, $3412 = 0.0, $3413 = 0.0, $3414 = 0, $3415 = 0.0, $3416 = 0.0, $3417 = 0.0, $3418 = 0, $3419 = 0, $342 = 0, $3420 = 0.0, $3421 = 0.0;
 var $3422 = 0.0, $3423 = 0.0, $3424 = 0, $3425 = 0.0, $3426 = 0.0, $3427 = 0.0, $3428 = 0.0, $3429 = 0.0, $343 = 0.0, $3430 = 0, $3431 = 0, $3432 = 0.0, $3433 = 0, $3434 = 0.0, $3435 = 0.0, $3436 = 0, $3437 = 0.0, $3438 = 0.0, $3439 = 0.0, $344 = 0.0;
 var $3440 = 0.0, $3441 = 0.0, $3442 = 0, $3443 = 0, $3444 = 0.0, $3445 = 0.0, $3446 = 0.0, $3447 = 0.0, $3448 = 0, $3449 = 0.0, $345 = 0.0, $3450 = 0, $3451 = 0.0, $3452 = 0.0, $3453 = 0.0, $3454 = 0, $3455 = 0, $3456 = 0.0, $3457 = 0.0, $3458 = 0.0;
 var $3459 = 0.0, $346 = 0.0, $3460 = 0.0, $3461 = 0, $3462 = 0.0, $3463 = 0, $3464 = 0.0, $3465 = 0.0, $3466 = 0.0, $3467 = 0, $3468 = 0.0, $3469 = 0.0, $347 = 0.0, $3470 = 0, $3471 = 0, $3472 = 0.0, $3473 = 0.0, $3474 = 0, $3475 = 0, $3476 = 0.0;
 var $3477 = 0.0, $3478 = 0, $3479 = 0, $348 = 0.0, $3480 = 0.0, $3481 = 0.0, $3482 = 0, $3483 = 0, $3484 = 0.0, $3485 = 0.0, $3486 = 0, $3487 = 0, $3488 = 0.0, $3489 = 0.0, $349 = 0.0, $3490 = 0, $3491 = 0, $3492 = 0.0, $3493 = 0.0, $3494 = 0;
 var $3495 = 0, $3496 = 0.0, $3497 = 0.0, $3498 = 0, $3499 = 0, $35 = 0, $350 = 0.0, $3500 = 0.0, $3501 = 0.0, $3502 = 0, $3503 = 0, $3504 = 0.0, $3505 = 0.0, $3506 = 0, $3507 = 0, $3508 = 0, $3509 = 0.0, $351 = 0, $3510 = 0.0, $3511 = 0;
 var $3512 = 0, $3513 = 0.0, $3514 = 0.0, $3515 = 0, $3516 = 0, $3517 = 0.0, $3518 = 0.0, $3519 = 0, $352 = 0, $3520 = 0.0, $3521 = 0.0, $3522 = 0.0, $3523 = 0.0, $3524 = 0.0, $3525 = 0, $3526 = 0, $3527 = 0.0, $3528 = 0, $3529 = 0.0, $353 = 0.0;
 var $3530 = 0.0, $3531 = 0.0, $3532 = 0.0, $3533 = 0.0, $3534 = 0.0, $3535 = 0.0, $3536 = 0, $3537 = 0.0, $3538 = 0.0, $3539 = 0, $354 = 0.0, $3540 = 0.0, $3541 = 0.0, $3542 = 0, $3543 = 0, $3544 = 0, $3545 = 0, $3546 = 0, $3547 = 0, $3548 = 0;
 var $3549 = 0, $355 = 0.0, $3550 = 0, $3551 = 0, $3552 = 0, $3553 = 0, $3554 = 0, $3555 = 0, $3556 = 0, $3557 = 0, $3558 = 0, $3559 = 0, $356 = 0.0, $3560 = 0, $3561 = 0, $3562 = 0, $3563 = 0.0, $3564 = 0, $3565 = 0, $3566 = 0.0;
 var $3567 = 0.0, $3568 = 0.0, $3569 = 0, $357 = 0.0, $3570 = 0, $3571 = 0, $3572 = 0.0, $3573 = 0, $3574 = 0, $3575 = 0.0, $3576 = 0.0, $3577 = 0.0, $3578 = 0, $3579 = 0, $358 = 0.0, $3580 = 0, $3581 = 0, $3582 = 0, $3583 = 0, $3584 = 0;
 var $3585 = 0, $3586 = 0, $3587 = 0, $3588 = 0, $3589 = 0.0, $359 = 0.0, $3590 = 0, $3591 = 0, $3592 = 0, $3593 = 0.0, $3594 = 0, $3595 = 0, $3596 = 0, $3597 = 0.0, $3598 = 0, $3599 = 0, $36 = 0.0, $360 = 0, $3600 = 0.0, $3601 = 0.0;
 var $3602 = 0, $3603 = 0.0, $3604 = 0.0, $3605 = 0, $3606 = 0.0, $3607 = 0.0, $3608 = 0, $3609 = 0.0, $361 = 0.0, $3610 = 0.0, $3611 = 0.0, $3612 = 0.0, $3613 = 0, $3614 = 0.0, $3615 = 0.0, $3616 = 0.0, $3617 = 0, $3618 = 0.0, $3619 = 0.0, $362 = 0.0;
 var $3620 = 0, $3621 = 0.0, $3622 = 0.0, $3623 = 0.0, $3624 = 0.0, $3625 = 0, $3626 = 0.0, $3627 = 0.0, $3628 = 0, $3629 = 0.0, $363 = 0.0, $3630 = 0.0, $3631 = 0, $3632 = 0, $3633 = 0.0, $3634 = 0.0, $3635 = 0.0, $3636 = 0.0, $3637 = 0, $3638 = 0.0;
 var $3639 = 0.0, $364 = 0.0, $3640 = 0, $3641 = 0.0, $3642 = 0.0, $3643 = 0, $3644 = 0.0, $3645 = 0.0, $3646 = 0.0, $3647 = 0.0, $3648 = 0, $3649 = 0, $365 = 0, $3650 = 0.0, $3651 = 0.0, $3652 = 0.0, $3653 = 0.0, $3654 = 0.0, $3655 = 0.0, $3656 = 0.0;
 var $3657 = 0, $3658 = 0, $3659 = 0.0, $366 = 0, $3660 = 0.0, $3661 = 0.0, $3662 = 0.0, $3663 = 0, $3664 = 0.0, $3665 = 0, $3666 = 0.0, $3667 = 0.0, $3668 = 0.0, $3669 = 0.0, $367 = 0.0, $3670 = 0.0, $3671 = 0, $3672 = 0, $3673 = 0.0, $3674 = 0.0;
 var $3675 = 0.0, $3676 = 0.0, $3677 = 0.0, $3678 = 0.0, $3679 = 0.0, $368 = 0, $3680 = 0, $3681 = 0.0, $3682 = 0, $3683 = 0.0, $3684 = 0.0, $3685 = 0.0, $3686 = 0, $3687 = 0.0, $3688 = 0.0, $3689 = 0, $369 = 0.0, $3690 = 0, $3691 = 0.0, $3692 = 0.0;
 var $3693 = 0, $3694 = 0, $3695 = 0.0, $3696 = 0.0, $3697 = 0, $3698 = 0, $3699 = 0.0, $37 = 0.0, $370 = 0.0, $3700 = 0.0, $3701 = 0, $3702 = 0, $3703 = 0.0, $3704 = 0.0, $3705 = 0, $3706 = 0, $3707 = 0.0, $3708 = 0.0, $3709 = 0, $371 = 0;
 var $3710 = 0, $3711 = 0.0, $3712 = 0.0, $3713 = 0, $3714 = 0, $3715 = 0.0, $3716 = 0.0, $3717 = 0, $3718 = 0, $3719 = 0, $372 = 0.0, $3720 = 0, $3721 = 0, $3722 = 0.0, $3723 = 0, $3724 = 0, $3725 = 0, $3726 = 0, $3727 = 0, $3728 = 0;
 var $3729 = 0, $373 = 0.0, $3730 = 0, $3731 = 0, $3732 = 0, $3733 = 0, $3734 = 0, $3735 = 0, $3736 = 0, $3737 = 0, $3738 = 0, $3739 = 0, $374 = 0.0, $3740 = 0, $3741 = 0, $3742 = 0, $3743 = 0, $3744 = 0, $3745 = 0, $3746 = 0;
 var $3747 = 0, $3748 = 0, $3749 = 0, $375 = 0.0, $3750 = 0, $3751 = 0, $3752 = 0.0, $3753 = 0, $3754 = 0, $3755 = 0, $3756 = 0, $3757 = 0, $3758 = 0, $3759 = 0, $376 = 0.0, $3760 = 0, $3761 = 0, $3762 = 0, $3763 = 0, $3764 = 0;
 var $3765 = 0, $3766 = 0, $3767 = 0, $3768 = 0, $3769 = 0, $377 = 0, $3770 = 0, $3771 = 0, $3772 = 0, $3773 = 0, $3774 = 0, $3775 = 0, $3776 = 0, $3777 = 0, $3778 = 0, $3779 = 0, $378 = 0, $3780 = 0, $3781 = 0, $3782 = 0.0;
 var $3783 = 0, $3784 = 0, $3785 = 0, $3786 = 0, $3787 = 0, $3788 = 0, $3789 = 0, $379 = 0.0, $3790 = 0, $3791 = 0, $3792 = 0, $3793 = 0, $3794 = 0, $3795 = 0, $3796 = 0, $3797 = 0, $3798 = 0, $3799 = 0, $38 = 0, $380 = 0.0;
 var $3800 = 0, $3801 = 0, $3802 = 0, $3803 = 0, $3804 = 0, $3805 = 0, $3806 = 0, $3807 = 0, $3808 = 0, $3809 = 0, $381 = 0.0, $3810 = 0, $3811 = 0, $3812 = 0.0, $3813 = 0, $3814 = 0, $3815 = 0, $3816 = 0, $3817 = 0, $3818 = 0;
 var $3819 = 0, $382 = 0.0, $3820 = 0, $3821 = 0, $3822 = 0, $3823 = 0, $3824 = 0, $3825 = 0, $3826 = 0, $3827 = 0, $3828 = 0, $3829 = 0, $383 = 0, $3830 = 0, $3831 = 0, $3832 = 0, $3833 = 0, $3834 = 0, $3835 = 0, $3836 = 0;
 var $3837 = 0, $3838 = 0, $3839 = 0, $384 = 0.0, $3840 = 0, $3841 = 0, $3842 = 0.0, $3843 = 0, $3844 = 0, $3845 = 0, $3846 = 0, $3847 = 0, $3848 = 0, $3849 = 0, $385 = 0, $3850 = 0, $3851 = 0, $3852 = 0, $3853 = 0, $3854 = 0;
 var $3855 = 0, $3856 = 0, $3857 = 0, $3858 = 0, $3859 = 0, $386 = 0.0, $3860 = 0, $3861 = 0, $3862 = 0, $3863 = 0, $3864 = 0, $3865 = 0, $3866 = 0, $3867 = 0, $3868 = 0, $3869 = 0, $387 = 0.0, $3870 = 0, $3871 = 0, $3872 = 0.0;
 var $3873 = 0, $3874 = 0, $3875 = 0, $3876 = 0, $3877 = 0, $3878 = 0, $3879 = 0, $388 = 0.0, $3880 = 0, $3881 = 0, $3882 = 0, $3883 = 0, $3884 = 0, $3885 = 0, $3886 = 0, $3887 = 0, $3888 = 0, $3889 = 0, $389 = 0, $3890 = 0;
 var $3891 = 0, $3892 = 0, $3893 = 0, $3894 = 0, $3895 = 0, $3896 = 0, $3897 = 0, $3898 = 0, $3899 = 0, $39 = 0.0, $390 = 0, $3900 = 0, $3901 = 0, $3902 = 0, $3903 = 0, $3904 = 0, $3905 = 0, $3906 = 0, $3907 = 0, $3908 = 0;
 var $3909 = 0, $391 = 0.0, $3910 = 0, $3911 = 0, $3912 = 0, $3913 = 0, $3914 = 0, $3915 = 0, $3916 = 0, $3917 = 0, $3918 = 0, $3919 = 0, $392 = 0, $3920 = 0.0, $3921 = 0, $3922 = 0.0, $3923 = 0.0, $3924 = 0, $3925 = 0.0, $3926 = 0;
 var $3927 = 0.0, $3928 = 0.0, $3929 = 0, $393 = 0.0, $3930 = 0.0, $3931 = 0.0, $3932 = 0, $3933 = 0.0, $3934 = 0.0, $3935 = 0, $3936 = 0.0, $3937 = 0.0, $3938 = 0.0, $3939 = 0.0, $394 = 0.0, $3940 = 0, $3941 = 0.0, $3942 = 0, $3943 = 0.0, $3944 = 0.0;
 var $3945 = 0.0, $3946 = 0, $3947 = 0.0, $3948 = 0.0, $3949 = 0.0, $395 = 0, $3950 = 0.0, $3951 = 0.0, $3952 = 0.0, $3953 = 0, $3954 = 0.0, $3955 = 0, $3956 = 0, $3957 = 0.0, $3958 = 0.0, $3959 = 0.0, $396 = 0.0, $3960 = 0.0, $3961 = 0, $3962 = 0;
 var $3963 = 0.0, $3964 = 0.0, $3965 = 0.0, $3966 = 0.0, $3967 = 0, $3968 = 0.0, $3969 = 0, $397 = 0.0, $3970 = 0.0, $3971 = 0, $3972 = 0.0, $3973 = 0.0, $3974 = 0, $3975 = 0.0, $3976 = 0, $3977 = 0.0, $3978 = 0.0, $3979 = 0.0, $398 = 0.0, $3980 = 0;
 var $3981 = 0.0, $3982 = 0, $3983 = 0.0, $3984 = 0, $3985 = 0.0, $3986 = 0.0, $3987 = 0.0, $3988 = 0, $3989 = 0, $399 = 0.0, $3990 = 0.0, $3991 = 0, $3992 = 0.0, $3993 = 0.0, $3994 = 0, $3995 = 0.0, $3996 = 0, $3997 = 0.0, $3998 = 0.0, $3999 = 0.0;
 var $4 = 0, $40 = 0.0, $400 = 0.0, $4000 = 0, $4001 = 0, $4002 = 0.0, $4003 = 0.0, $4004 = 0.0, $4005 = 0.0, $4006 = 0, $4007 = 0.0, $4008 = 0.0, $4009 = 0.0, $401 = 0, $4010 = 0.0, $4011 = 0.0, $4012 = 0, $4013 = 0.0, $4014 = 0.0, $4015 = 0;
 var $4016 = 0.0, $4017 = 0.0, $4018 = 0.0, $4019 = 0.0, $402 = 0, $4020 = 0.0, $4021 = 0, $4022 = 0, $4023 = 0.0, $4024 = 0.0, $4025 = 0.0, $4026 = 0.0, $4027 = 0.0, $4028 = 0.0, $4029 = 0.0, $403 = 0.0, $4030 = 0.0, $4031 = 0, $4032 = 0.0, $4033 = 0.0;
 var $4034 = 0, $4035 = 0, $4036 = 0.0, $4037 = 0.0, $4038 = 0, $4039 = 0, $404 = 0.0, $4040 = 0.0, $4041 = 0.0, $4042 = 0, $4043 = 0, $4044 = 0.0, $4045 = 0.0, $4046 = 0, $4047 = 0, $4048 = 0.0, $4049 = 0.0, $405 = 0.0, $4050 = 0, $4051 = 0;
 var $4052 = 0.0, $4053 = 0.0, $4054 = 0, $4055 = 0, $4056 = 0.0, $4057 = 0.0, $4058 = 0, $4059 = 0, $406 = 0, $4060 = 0.0, $4061 = 0.0, $4062 = 0, $4063 = 0, $4064 = 0.0, $4065 = 0.0, $4066 = 0, $4067 = 0, $4068 = 0.0, $4069 = 0.0, $407 = 0.0;
 var $4070 = 0, $4071 = 0, $4072 = 0.0, $4073 = 0.0, $4074 = 0, $4075 = 0, $4076 = 0.0, $4077 = 0.0, $4078 = 0, $4079 = 0, $408 = 0.0, $4080 = 0, $4081 = 0.0, $4082 = 0.0, $4083 = 0, $4084 = 0, $4085 = 0.0, $4086 = 0.0, $4087 = 0.0, $4088 = 0;
 var $4089 = 0, $409 = 0.0, $4090 = 0.0, $4091 = 0.0, $4092 = 0, $4093 = 0.0, $4094 = 0.0, $4095 = 0.0, $4096 = 0.0, $4097 = 0.0, $4098 = 0.0, $4099 = 0, $41 = 0.0, $410 = 0.0, $4100 = 0, $4101 = 0.0, $4102 = 0, $4103 = 0.0, $4104 = 0.0, $4105 = 0.0;
 var $4106 = 0.0, $4107 = 0.0, $4108 = 0.0, $4109 = 0.0, $411 = 0.0, $4110 = 0.0, $4111 = 0, $4112 = 0.0, $4113 = 0.0, $4114 = 0, $4115 = 0.0, $4116 = 0.0, $4117 = 0, $4118 = 0, $4119 = 0, $412 = 0.0, $4120 = 0, $4121 = 0, $4122 = 0, $4123 = 0;
 var $4124 = 0, $4125 = 0, $4126 = 0, $4127 = 0, $4128 = 0, $4129 = 0, $413 = 0.0, $4130 = 0, $4131 = 0, $4132 = 0, $4133 = 0, $4134 = 0, $4135 = 0, $4136 = 0, $4137 = 0, $4138 = 0.0, $4139 = 0, $414 = 0.0, $4140 = 0, $4141 = 0.0;
 var $4142 = 0.0, $4143 = 0.0, $4144 = 0, $4145 = 0, $4146 = 0, $4147 = 0.0, $4148 = 0, $4149 = 0, $415 = 0, $4150 = 0.0, $4151 = 0.0, $4152 = 0.0, $4153 = 0, $4154 = 0, $4155 = 0, $4156 = 0, $4157 = 0, $4158 = 0, $4159 = 0, $416 = 0;
 var $4160 = 0, $4161 = 0, $4162 = 0, $4163 = 0, $4164 = 0.0, $4165 = 0, $4166 = 0, $4167 = 0, $4168 = 0.0, $4169 = 0, $417 = 0.0, $4170 = 0, $4171 = 0, $4172 = 0.0, $4173 = 0, $4174 = 0, $4175 = 0.0, $4176 = 0.0, $4177 = 0, $4178 = 0.0;
 var $4179 = 0.0, $418 = 0.0, $4180 = 0, $4181 = 0.0, $4182 = 0.0, $4183 = 0.0, $4184 = 0.0, $4185 = 0.0, $4186 = 0.0, $4187 = 0.0, $4188 = 0, $4189 = 0.0, $419 = 0.0, $4190 = 0.0, $4191 = 0, $4192 = 0.0, $4193 = 0.0, $4194 = 0.0, $4195 = 0.0, $4196 = 0;
 var $4197 = 0, $4198 = 0.0, $4199 = 0, $42 = 0.0, $420 = 0.0, $4200 = 0.0, $4201 = 0.0, $4202 = 0.0, $4203 = 0.0, $4204 = 0, $4205 = 0, $4206 = 0.0, $4207 = 0, $4208 = 0.0, $4209 = 0.0, $421 = 0.0, $4210 = 0.0, $4211 = 0.0, $4212 = 0, $4213 = 0;
 var $4214 = 0.0, $4215 = 0.0, $4216 = 0.0, $4217 = 0.0, $4218 = 0, $4219 = 0.0, $422 = 0.0, $4220 = 0.0, $4221 = 0, $4222 = 0, $4223 = 0.0, $4224 = 0.0, $4225 = 0.0, $4226 = 0.0, $4227 = 0, $4228 = 0.0, $4229 = 0.0, $423 = 0.0, $4230 = 0, $4231 = 0;
 var $4232 = 0.0, $4233 = 0, $4234 = 0.0, $4235 = 0.0, $4236 = 0.0, $4237 = 0.0, $4238 = 0.0, $4239 = 0, $424 = 0.0, $4240 = 0.0, $4241 = 0.0, $4242 = 0.0, $4243 = 0.0, $4244 = 0.0, $4245 = 0, $4246 = 0, $4247 = 0.0, $4248 = 0.0, $4249 = 0.0, $425 = 0.0;
 var $4250 = 0.0, $4251 = 0, $4252 = 0.0, $4253 = 0, $4254 = 0.0, $4255 = 0.0, $4256 = 0.0, $4257 = 0.0, $4258 = 0.0, $4259 = 0.0, $426 = 0.0, $4260 = 0, $4261 = 0.0, $4262 = 0.0, $4263 = 0, $4264 = 0, $4265 = 0.0, $4266 = 0.0, $4267 = 0, $4268 = 0;
 var $4269 = 0.0, $427 = 0.0, $4270 = 0.0, $4271 = 0, $4272 = 0, $4273 = 0.0, $4274 = 0.0, $4275 = 0, $4276 = 0, $4277 = 0.0, $4278 = 0.0, $4279 = 0, $428 = 0, $4280 = 0, $4281 = 0.0, $4282 = 0.0, $4283 = 0, $4284 = 0, $4285 = 0.0, $4286 = 0.0;
 var $4287 = 0, $4288 = 0, $4289 = 0.0, $429 = 0, $4290 = 0.0, $4291 = 0, $4292 = 0, $4293 = 0, $4294 = 0, $4295 = 0, $4296 = 0.0, $4297 = 0, $4298 = 0, $4299 = 0, $43 = 0, $430 = 0.0, $4300 = 0, $4301 = 0, $4302 = 0, $4303 = 0;
 var $4304 = 0, $4305 = 0, $4306 = 0, $4307 = 0, $4308 = 0, $4309 = 0, $431 = 0.0, $4310 = 0, $4311 = 0, $4312 = 0, $4313 = 0, $4314 = 0, $4315 = 0, $4316 = 0, $4317 = 0, $4318 = 0, $4319 = 0, $432 = 0.0, $4320 = 0, $4321 = 0;
 var $4322 = 0, $4323 = 0, $4324 = 0, $4325 = 0, $4326 = 0.0, $4327 = 0, $4328 = 0, $4329 = 0, $433 = 0.0, $4330 = 0, $4331 = 0, $4332 = 0, $4333 = 0, $4334 = 0, $4335 = 0, $4336 = 0, $4337 = 0, $4338 = 0, $4339 = 0, $434 = 0.0;
 var $4340 = 0, $4341 = 0, $4342 = 0, $4343 = 0, $4344 = 0, $4345 = 0, $4346 = 0, $4347 = 0, $4348 = 0, $4349 = 0, $435 = 0.0, $4350 = 0, $4351 = 0, $4352 = 0, $4353 = 0, $4354 = 0, $4355 = 0, $4356 = 0.0, $4357 = 0, $4358 = 0;
 var $4359 = 0, $436 = 0.0, $4360 = 0, $4361 = 0, $4362 = 0, $4363 = 0, $4364 = 0, $4365 = 0, $4366 = 0, $4367 = 0, $4368 = 0, $4369 = 0, $437 = 0, $4370 = 0, $4371 = 0, $4372 = 0, $4373 = 0, $4374 = 0, $4375 = 0, $4376 = 0;
 var $4377 = 0, $4378 = 0, $4379 = 0, $438 = 0.0, $4380 = 0, $4381 = 0, $4382 = 0, $4383 = 0, $4384 = 0, $4385 = 0, $4386 = 0.0, $4387 = 0, $4388 = 0, $4389 = 0, $439 = 0.0, $4390 = 0, $4391 = 0, $4392 = 0, $4393 = 0, $4394 = 0;
 var $4395 = 0, $4396 = 0, $4397 = 0, $4398 = 0, $4399 = 0, $44 = 0.0, $440 = 0.0, $4400 = 0, $4401 = 0, $4402 = 0, $4403 = 0, $4404 = 0, $4405 = 0, $4406 = 0, $4407 = 0, $4408 = 0, $4409 = 0, $441 = 0.0, $4410 = 0, $4411 = 0;
 var $4412 = 0, $4413 = 0, $4414 = 0, $4415 = 0, $4416 = 0.0, $4417 = 0, $4418 = 0, $4419 = 0, $442 = 0, $4420 = 0, $4421 = 0, $4422 = 0, $4423 = 0, $4424 = 0, $4425 = 0, $4426 = 0, $4427 = 0, $4428 = 0, $4429 = 0, $443 = 0;
 var $4430 = 0, $4431 = 0, $4432 = 0, $4433 = 0, $4434 = 0, $4435 = 0, $4436 = 0, $4437 = 0, $4438 = 0, $4439 = 0, $444 = 0.0, $4440 = 0, $4441 = 0, $4442 = 0, $4443 = 0, $4444 = 0, $4445 = 0, $4446 = 0.0, $4447 = 0, $4448 = 0;
 var $4449 = 0, $445 = 0, $4450 = 0, $4451 = 0, $4452 = 0, $4453 = 0, $4454 = 0, $4455 = 0, $4456 = 0, $4457 = 0, $4458 = 0, $4459 = 0, $446 = 0.0, $4460 = 0, $4461 = 0, $4462 = 0, $4463 = 0, $4464 = 0, $4465 = 0, $4466 = 0;
 var $4467 = 0, $4468 = 0, $4469 = 0, $447 = 0.0, $4470 = 0, $4471 = 0, $4472 = 0, $4473 = 0, $4474 = 0, $4475 = 0, $4476 = 0, $4477 = 0, $4478 = 0, $4479 = 0, $448 = 0, $4480 = 0, $4481 = 0, $4482 = 0, $4483 = 0, $4484 = 0;
 var $4485 = 0, $4486 = 0, $4487 = 0, $4488 = 0, $4489 = 0, $449 = 0.0, $4490 = 0, $4491 = 0, $4492 = 0, $4493 = 0, $4494 = 0.0, $4495 = 0.0, $4496 = 0, $4497 = 0.0, $4498 = 0.0, $4499 = 0, $45 = 0, $450 = 0.0, $4500 = 0.0, $4501 = 0;
 var $4502 = 0.0, $4503 = 0.0, $4504 = 0.0, $4505 = 0, $4506 = 0.0, $4507 = 0, $4508 = 0.0, $4509 = 0.0, $451 = 0, $4510 = 0, $4511 = 0.0, $4512 = 0, $4513 = 0.0, $4514 = 0.0, $4515 = 0.0, $4516 = 0, $4517 = 0.0, $4518 = 0, $4519 = 0.0, $452 = 0;
 var $4520 = 0.0, $4521 = 0, $4522 = 0.0, $4523 = 0, $4524 = 0.0, $4525 = 0.0, $4526 = 0.0, $4527 = 0, $4528 = 0.0, $4529 = 0, $453 = 0.0, $4530 = 0.0, $4531 = 0.0, $4532 = 0.0, $4533 = 0, $4534 = 0.0, $4535 = 0, $4536 = 0.0, $4537 = 0.0, $4538 = 0.0;
 var $4539 = 0, $454 = 0.0, $4540 = 0.0, $4541 = 0.0, $4542 = 0.0, $4543 = 0.0, $4544 = 0.0, $4545 = 0.0, $4546 = 0, $4547 = 0.0, $4548 = 0, $4549 = 0, $455 = 0, $4550 = 0.0, $4551 = 0, $4552 = 0.0, $4553 = 0.0, $4554 = 0, $4555 = 0, $4556 = 0.0;
 var $4557 = 0, $4558 = 0.0, $4559 = 0.0, $456 = 0, $4560 = 0, $4561 = 0.0, $4562 = 0, $4563 = 0.0, $4564 = 0, $4565 = 0.0, $4566 = 0, $4567 = 0.0, $4568 = 0, $4569 = 0.0, $457 = 0.0, $4570 = 0, $4571 = 0.0, $4572 = 0, $4573 = 0.0, $4574 = 0;
 var $4575 = 0.0, $4576 = 0, $4577 = 0.0, $4578 = 0.0, $4579 = 0, $458 = 0, $4580 = 0, $4581 = 0.0, $4582 = 0.0, $4583 = 0, $4584 = 0, $4585 = 0.0, $4586 = 0.0, $4587 = 0, $4588 = 0, $4589 = 0.0, $459 = 0.0, $4590 = 0.0, $4591 = 0, $4592 = 0;
 var $4593 = 0.0, $4594 = 0.0, $4595 = 0, $4596 = 0, $4597 = 0.0, $4598 = 0.0, $4599 = 0, $46 = 0.0, $460 = 0.0, $4600 = 0, $4601 = 0.0, $4602 = 0.0, $4603 = 0, $4604 = 0, $4605 = 0.0, $4606 = 0.0, $4607 = 0, $4608 = 0, $4609 = 0.0, $461 = 0;
 var $4610 = 0.0, $4611 = 0, $4612 = 0, $4613 = 0.0, $4614 = 0.0, $4615 = 0, $4616 = 0, $4617 = 0.0, $4618 = 0.0, $4619 = 0, $462 = 0.0, $4620 = 0, $4621 = 0.0, $4622 = 0.0, $4623 = 0, $4624 = 0, $4625 = 0, $4626 = 0.0, $4627 = 0.0, $4628 = 0.0;
 var $4629 = 0, $463 = 0, $4630 = 0, $4631 = 0.0, $4632 = 0.0, $4633 = 0, $4634 = 0, $4635 = 0.0, $4636 = 0.0, $4637 = 0.0, $4638 = 0, $4639 = 0.0, $464 = 0.0, $4640 = 0.0, $4641 = 0.0, $4642 = 0.0, $4643 = 0.0, $4644 = 0, $4645 = 0, $4646 = 0.0;
 var $4647 = 0.0, $4648 = 0, $4649 = 0.0, $465 = 0.0, $4650 = 0.0, $4651 = 0.0, $4652 = 0.0, $4653 = 0.0, $4654 = 0.0, $4655 = 0.0, $4656 = 0, $4657 = 0.0, $4658 = 0.0, $4659 = 0, $466 = 0, $4660 = 0.0, $4661 = 0.0, $4662 = 0, $4663 = 0, $4664 = 0;
 var $4665 = 0, $4666 = 0, $4667 = 0, $4668 = 0, $4669 = 0, $467 = 0.0, $4670 = 0, $4671 = 0, $4672 = 0, $4673 = 0, $4674 = 0, $4675 = 0, $4676 = 0, $4677 = 0, $4678 = 0, $4679 = 0, $468 = 0.0, $4680 = 0, $4681 = 0, $4682 = 0;
 var $4683 = 0.0, $4684 = 0, $4685 = 0, $4686 = 0.0, $4687 = 0.0, $4688 = 0.0, $4689 = 0, $469 = 0, $4690 = 0, $4691 = 0, $4692 = 0.0, $4693 = 0, $4694 = 0, $4695 = 0.0, $4696 = 0.0, $4697 = 0.0, $4698 = 0, $4699 = 0, $47 = 0.0, $470 = 0.0;
 var $4700 = 0, $4701 = 0, $4702 = 0, $4703 = 0, $4704 = 0, $4705 = 0, $4706 = 0, $4707 = 0, $4708 = 0, $4709 = 0.0, $471 = 0.0, $4710 = 0, $4711 = 0, $4712 = 0, $4713 = 0.0, $4714 = 0, $4715 = 0, $4716 = 0, $4717 = 0.0, $4718 = 0;
 var $4719 = 0, $472 = 0, $4720 = 0.0, $4721 = 0.0, $4722 = 0, $4723 = 0.0, $4724 = 0.0, $4725 = 0, $4726 = 0.0, $4727 = 0.0, $4728 = 0.0, $4729 = 0.0, $473 = 0.0, $4730 = 0.0, $4731 = 0.0, $4732 = 0.0, $4733 = 0, $4734 = 0.0, $4735 = 0.0, $4736 = 0;
 var $4737 = 0.0, $4738 = 0.0, $4739 = 0.0, $474 = 0, $4740 = 0.0, $4741 = 0, $4742 = 0, $4743 = 0.0, $4744 = 0.0, $4745 = 0.0, $4746 = 0, $4747 = 0.0, $4748 = 0.0, $4749 = 0, $475 = 0.0, $4750 = 0, $4751 = 0.0, $4752 = 0.0, $4753 = 0.0, $4754 = 0;
 var $4755 = 0.0, $4756 = 0.0, $4757 = 0, $4758 = 0, $4759 = 0.0, $476 = 0.0, $4760 = 0, $4761 = 0.0, $4762 = 0.0, $4763 = 0.0, $4764 = 0.0, $4765 = 0.0, $4766 = 0, $4767 = 0, $4768 = 0.0, $4769 = 0, $477 = 0, $4770 = 0.0, $4771 = 0.0, $4772 = 0.0;
 var $4773 = 0.0, $4774 = 0.0, $4775 = 0, $4776 = 0, $4777 = 0.0, $4778 = 0.0, $4779 = 0.0, $478 = 0.0, $4780 = 0.0, $4781 = 0, $4782 = 0.0, $4783 = 0, $4784 = 0.0, $4785 = 0.0, $4786 = 0.0, $4787 = 0.0, $4788 = 0.0, $4789 = 0.0, $479 = 0, $4790 = 0;
 var $4791 = 0, $4792 = 0.0, $4793 = 0.0, $4794 = 0.0, $4795 = 0.0, $4796 = 0, $4797 = 0.0, $4798 = 0, $4799 = 0.0, $48 = 0.0, $480 = 0.0, $4800 = 0.0, $4801 = 0.0, $4802 = 0.0, $4803 = 0.0, $4804 = 0.0, $4805 = 0, $4806 = 0.0, $4807 = 0.0, $4808 = 0;
 var $4809 = 0, $481 = 0.0, $4810 = 0.0, $4811 = 0.0, $4812 = 0, $4813 = 0, $4814 = 0.0, $4815 = 0.0, $4816 = 0, $4817 = 0, $4818 = 0.0, $4819 = 0.0, $482 = 0, $4820 = 0, $4821 = 0, $4822 = 0.0, $4823 = 0.0, $4824 = 0, $4825 = 0, $4826 = 0.0;
 var $4827 = 0.0, $4828 = 0, $4829 = 0, $483 = 0.0, $4830 = 0.0, $4831 = 0.0, $4832 = 0, $4833 = 0, $4834 = 0.0, $4835 = 0.0, $4836 = 0, $4837 = 0, $4838 = 0, $4839 = 0, $484 = 0, $4840 = 0, $4841 = 0.0, $4842 = 0, $4843 = 0, $4844 = 0;
 var $4845 = 0, $4846 = 0, $4847 = 0, $4848 = 0, $4849 = 0, $485 = 0.0, $4850 = 0, $4851 = 0, $4852 = 0, $4853 = 0, $4854 = 0, $4855 = 0, $4856 = 0, $4857 = 0, $4858 = 0, $4859 = 0, $486 = 0.0, $4860 = 0, $4861 = 0, $4862 = 0;
 var $4863 = 0, $4864 = 0, $4865 = 0, $4866 = 0, $4867 = 0, $4868 = 0, $4869 = 0, $487 = 0.0, $4870 = 0, $4871 = 0.0, $4872 = 0, $4873 = 0, $4874 = 0, $4875 = 0, $4876 = 0, $4877 = 0, $4878 = 0, $4879 = 0, $488 = 0, $4880 = 0;
 var $4881 = 0, $4882 = 0, $4883 = 0, $4884 = 0, $4885 = 0, $4886 = 0, $4887 = 0, $4888 = 0, $4889 = 0, $489 = 0.0, $4890 = 0, $4891 = 0, $4892 = 0, $4893 = 0, $4894 = 0, $4895 = 0, $4896 = 0, $4897 = 0, $4898 = 0, $4899 = 0;
 var $49 = 0, $490 = 0, $4900 = 0, $4901 = 0.0, $4902 = 0, $4903 = 0, $4904 = 0, $4905 = 0, $4906 = 0, $4907 = 0, $4908 = 0, $4909 = 0, $491 = 0.0, $4910 = 0, $4911 = 0, $4912 = 0, $4913 = 0, $4914 = 0, $4915 = 0, $4916 = 0;
 var $4917 = 0, $4918 = 0, $4919 = 0, $492 = 0.0, $4920 = 0, $4921 = 0, $4922 = 0, $4923 = 0, $4924 = 0, $4925 = 0, $4926 = 0, $4927 = 0, $4928 = 0, $4929 = 0, $493 = 0.0, $4930 = 0, $4931 = 0.0, $4932 = 0, $4933 = 0, $4934 = 0;
 var $4935 = 0, $4936 = 0, $4937 = 0, $4938 = 0, $4939 = 0, $494 = 0.0, $4940 = 0, $4941 = 0, $4942 = 0, $4943 = 0, $4944 = 0, $4945 = 0, $4946 = 0, $4947 = 0, $4948 = 0, $4949 = 0, $495 = 0, $4950 = 0, $4951 = 0, $4952 = 0;
 var $4953 = 0, $4954 = 0, $4955 = 0, $4956 = 0, $4957 = 0, $4958 = 0, $4959 = 0, $496 = 0.0, $4960 = 0, $4961 = 0.0, $4962 = 0, $4963 = 0, $4964 = 0, $4965 = 0, $4966 = 0, $4967 = 0, $4968 = 0, $4969 = 0, $497 = 0.0, $4970 = 0;
 var $4971 = 0, $4972 = 0, $4973 = 0, $4974 = 0, $4975 = 0, $4976 = 0, $4977 = 0, $4978 = 0, $4979 = 0, $498 = 0.0, $4980 = 0, $4981 = 0, $4982 = 0, $4983 = 0, $4984 = 0, $4985 = 0, $4986 = 0, $4987 = 0, $4988 = 0, $4989 = 0;
 var $499 = 0, $4990 = 0, $4991 = 0.0, $4992 = 0, $4993 = 0, $4994 = 0, $4995 = 0, $4996 = 0, $4997 = 0, $4998 = 0, $4999 = 0, $5 = 0, $50 = 0.0, $500 = 0.0, $5000 = 0, $5001 = 0, $5002 = 0, $5003 = 0, $5004 = 0, $5005 = 0;
 var $5006 = 0, $5007 = 0, $5008 = 0, $5009 = 0, $501 = 0.0, $5010 = 0, $5011 = 0, $5012 = 0, $5013 = 0, $5014 = 0, $5015 = 0, $5016 = 0, $5017 = 0, $5018 = 0, $5019 = 0, $502 = 0.0, $5020 = 0, $5021 = 0, $5022 = 0, $5023 = 0;
 var $5024 = 0, $5025 = 0, $5026 = 0, $5027 = 0, $5028 = 0, $5029 = 0, $503 = 0, $5030 = 0, $5031 = 0, $5032 = 0, $5033 = 0, $5034 = 0, $5035 = 0, $5036 = 0, $5037 = 0, $5038 = 0, $5039 = 0.0, $504 = 0.0, $5040 = 0.0, $5041 = 0;
 var $5042 = 0.0, $5043 = 0.0, $5044 = 0, $5045 = 0.0, $5046 = 0, $5047 = 0.0, $5048 = 0.0, $5049 = 0.0, $505 = 0.0, $5050 = 0, $5051 = 0.0, $5052 = 0, $5053 = 0.0, $5054 = 0.0, $5055 = 0, $5056 = 0.0, $5057 = 0, $5058 = 0.0, $5059 = 0.0, $506 = 0.0;
 var $5060 = 0.0, $5061 = 0, $5062 = 0.0, $5063 = 0.0, $5064 = 0.0, $5065 = 0.0, $5066 = 0.0, $5067 = 0, $5068 = 0.0, $5069 = 0.0, $507 = 0.0, $5070 = 0, $5071 = 0, $5072 = 0.0, $5073 = 0, $5074 = 0, $5075 = 0.0, $5076 = 0, $5077 = 0, $5078 = 0.0;
 var $5079 = 0, $508 = 0, $5080 = 0, $5081 = 0.0, $5082 = 0, $5083 = 0.0, $5084 = 0, $5085 = 0.0, $5086 = 0, $5087 = 0.0, $5088 = 0, $5089 = 0.0, $509 = 0.0, $5090 = 0, $5091 = 0.0, $5092 = 0.0, $5093 = 0, $5094 = 0, $5095 = 0.0, $5096 = 0.0;
 var $5097 = 0, $5098 = 0, $5099 = 0.0, $51 = 0, $510 = 0.0, $5100 = 0.0, $5101 = 0, $5102 = 0, $5103 = 0.0, $5104 = 0.0, $5105 = 0, $5106 = 0, $5107 = 0.0, $5108 = 0.0, $5109 = 0, $511 = 0.0, $5110 = 0, $5111 = 0.0, $5112 = 0.0, $5113 = 0;
 var $5114 = 0, $5115 = 0.0, $5116 = 0.0, $5117 = 0, $5118 = 0, $5119 = 0.0, $512 = 0.0, $5120 = 0.0, $5121 = 0, $5122 = 0, $5123 = 0.0, $5124 = 0.0, $5125 = 0, $5126 = 0, $5127 = 0.0, $5128 = 0.0, $5129 = 0, $513 = 0.0, $5130 = 0, $5131 = 0;
 var $5132 = 0.0, $5133 = 0.0, $5134 = 0, $5135 = 0.0, $5136 = 0.0, $5137 = 0.0, $5138 = 0.0, $5139 = 0, $514 = 0.0, $5140 = 0.0, $5141 = 0.0, $5142 = 0, $5143 = 0.0, $5144 = 0.0, $5145 = 0.0, $5146 = 0.0, $5147 = 0, $5148 = 0, $5149 = 0.0, $515 = 0.0;
 var $5150 = 0, $5151 = 0.0, $5152 = 0.0, $5153 = 0, $5154 = 0.0, $5155 = 0.0, $5156 = 0.0, $5157 = 0.0, $5158 = 0.0, $5159 = 0.0, $516 = 0, $5160 = 0, $5161 = 0, $5162 = 0.0, $5163 = 0.0, $5164 = 0.0, $5165 = 0.0, $5166 = 0, $5167 = 0.0, $5168 = 0.0;
 var $5169 = 0, $517 = 0.0, $5170 = 0.0, $5171 = 0.0, $5172 = 0.0, $5173 = 0.0, $5174 = 0, $5175 = 0.0, $5176 = 0, $5177 = 0.0, $5178 = 0.0, $5179 = 0, $518 = 0.0, $5180 = 0.0, $5181 = 0.0, $5182 = 0.0, $5183 = 0.0, $5184 = 0.0, $5185 = 0.0, $5186 = 0.0;
 var $5187 = 0.0, $5188 = 0.0, $5189 = 0, $519 = 0.0, $5190 = 0, $5191 = 0.0, $5192 = 0.0, $5193 = 0.0, $5194 = 0.0, $5195 = 0, $5196 = 0.0, $5197 = 0.0, $5198 = 0, $5199 = 0.0, $52 = 0.0, $520 = 0.0, $5200 = 0.0, $5201 = 0.0, $5202 = 0, $5203 = 0.0;
 var $5204 = 0, $5205 = 0.0, $5206 = 0.0, $5207 = 0, $5208 = 0.0, $5209 = 0.0, $521 = 0, $5210 = 0.0, $5211 = 0.0, $5212 = 0.0, $5213 = 0.0, $5214 = 0.0, $5215 = 0.0, $5216 = 0.0, $5217 = 0.0, $5218 = 0.0, $5219 = 0, $522 = 0.0, $5220 = 0.0, $5221 = 0.0;
 var $5222 = 0, $5223 = 0.0, $5224 = 0.0, $5225 = 0, $5226 = 0, $5227 = 0, $5228 = 0, $5229 = 0, $523 = 0.0, $5230 = 0, $5231 = 0, $5232 = 0, $5233 = 0, $5234 = 0, $5235 = 0, $5236 = 0, $5237 = 0, $5238 = 0, $5239 = 0, $524 = 0.0;
 var $5240 = 0, $5241 = 0, $5242 = 0, $5243 = 0, $5244 = 0, $5245 = 0, $5246 = 0.0, $5247 = 0, $5248 = 0, $5249 = 0.0, $525 = 0, $5250 = 0.0, $5251 = 0.0, $5252 = 0, $5253 = 0, $5254 = 0, $5255 = 0.0, $5256 = 0, $5257 = 0, $5258 = 0.0;
 var $5259 = 0.0, $526 = 0.0, $5260 = 0.0, $5261 = 0, $5262 = 0, $5263 = 0, $5264 = 0, $5265 = 0, $5266 = 0, $5267 = 0, $5268 = 0, $5269 = 0, $527 = 0.0, $5270 = 0, $5271 = 0, $5272 = 0.0, $5273 = 0, $5274 = 0, $5275 = 0, $5276 = 0.0;
 var $5277 = 0, $5278 = 0, $5279 = 0, $528 = 0.0, $5280 = 0.0, $5281 = 0, $5282 = 0, $5283 = 0.0, $5284 = 0.0, $5285 = 0, $5286 = 0.0, $5287 = 0.0, $5288 = 0, $5289 = 0.0, $529 = 0.0, $5290 = 0.0, $5291 = 0.0, $5292 = 0.0, $5293 = 0, $5294 = 0.0;
 var $5295 = 0.0, $5296 = 0.0, $5297 = 0.0, $5298 = 0.0, $5299 = 0, $53 = 0.0, $530 = 0.0, $5300 = 0.0, $5301 = 0.0, $5302 = 0.0, $5303 = 0, $5304 = 0.0, $5305 = 0, $5306 = 0.0, $5307 = 0.0, $5308 = 0.0, $5309 = 0.0, $531 = 0.0, $5310 = 0, $5311 = 0.0;
 var $5312 = 0, $5313 = 0.0, $5314 = 0.0, $5315 = 0.0, $5316 = 0, $5317 = 0.0, $5318 = 0.0, $5319 = 0.0, $532 = 0.0, $5320 = 0, $5321 = 0.0, $5322 = 0.0, $5323 = 0, $5324 = 0.0, $5325 = 0.0, $5326 = 0.0, $5327 = 0.0, $5328 = 0, $5329 = 0, $533 = 0.0;
 var $5330 = 0.0, $5331 = 0, $5332 = 0.0, $5333 = 0.0, $5334 = 0.0, $5335 = 0.0, $5336 = 0.0, $5337 = 0, $5338 = 0.0, $5339 = 0, $534 = 0, $5340 = 0.0, $5341 = 0.0, $5342 = 0.0, $5343 = 0, $5344 = 0.0, $5345 = 0.0, $5346 = 0, $5347 = 0.0, $5348 = 0;
 var $5349 = 0.0, $535 = 0, $5350 = 0.0, $5351 = 0.0, $5352 = 0, $5353 = 0.0, $5354 = 0.0, $5355 = 0.0, $5356 = 0.0, $5357 = 0.0, $5358 = 0, $5359 = 0.0, $536 = 0.0, $5360 = 0.0, $5361 = 0, $5362 = 0.0, $5363 = 0, $5364 = 0.0, $5365 = 0.0, $5366 = 0.0;
 var $5367 = 0, $5368 = 0.0, $5369 = 0.0, $537 = 0.0, $5370 = 0.0, $5371 = 0.0, $5372 = 0.0, $5373 = 0, $5374 = 0.0, $5375 = 0.0, $5376 = 0.0, $5377 = 0.0, $5378 = 0, $5379 = 0.0, $538 = 0.0, $5380 = 0.0, $5381 = 0, $5382 = 0.0, $5383 = 0.0, $5384 = 0.0;
 var $5385 = 0.0, $5386 = 0, $5387 = 0.0, $5388 = 0.0, $5389 = 0, $539 = 0, $5390 = 0, $5391 = 0.0, $5392 = 0.0, $5393 = 0.0, $5394 = 0.0, $5395 = 0, $5396 = 0.0, $5397 = 0.0, $5398 = 0.0, $5399 = 0.0, $54 = 0.0, $540 = 0.0, $5400 = 0.0, $5401 = 0.0;
 var $5402 = 0.0, $5403 = 0, $5404 = 0.0, $5405 = 0.0, $5406 = 0, $5407 = 0, $5408 = 0.0, $5409 = 0.0, $541 = 0.0, $5410 = 0, $5411 = 0, $5412 = 0.0, $5413 = 0.0, $5414 = 0, $5415 = 0, $5416 = 0.0, $5417 = 0.0, $5418 = 0, $5419 = 0, $542 = 0.0;
 var $5420 = 0.0, $5421 = 0.0, $5422 = 0, $5423 = 0, $5424 = 0.0, $5425 = 0.0, $5426 = 0, $5427 = 0, $5428 = 0.0, $5429 = 0.0, $543 = 0.0, $5430 = 0, $5431 = 0, $5432 = 0.0, $5433 = 0.0, $5434 = 0, $5435 = 0, $5436 = 0, $5437 = 0, $5438 = 0;
 var $5439 = 0.0, $544 = 0.0, $5440 = 0, $5441 = 0, $5442 = 0, $5443 = 0, $5444 = 0, $5445 = 0, $5446 = 0, $5447 = 0, $5448 = 0, $5449 = 0, $545 = 0.0, $5450 = 0, $5451 = 0, $5452 = 0, $5453 = 0, $5454 = 0, $5455 = 0, $5456 = 0;
 var $5457 = 0, $5458 = 0, $5459 = 0, $546 = 0.0, $5460 = 0, $5461 = 0, $5462 = 0, $5463 = 0, $5464 = 0, $5465 = 0, $5466 = 0, $5467 = 0, $5468 = 0, $5469 = 0.0, $547 = 0.0, $5470 = 0, $5471 = 0, $5472 = 0, $5473 = 0, $5474 = 0;
 var $5475 = 0, $5476 = 0, $5477 = 0, $5478 = 0, $5479 = 0, $548 = 0, $5480 = 0, $5481 = 0, $5482 = 0, $5483 = 0, $5484 = 0, $5485 = 0, $5486 = 0, $5487 = 0, $5488 = 0, $5489 = 0, $549 = 0, $5490 = 0, $5491 = 0, $5492 = 0;
 var $5493 = 0, $5494 = 0, $5495 = 0, $5496 = 0, $5497 = 0, $5498 = 0, $5499 = 0.0, $55 = 0.0, $550 = 0.0, $5500 = 0, $5501 = 0, $5502 = 0, $5503 = 0, $5504 = 0, $5505 = 0, $5506 = 0, $5507 = 0, $5508 = 0, $5509 = 0, $551 = 0.0;
 var $5510 = 0, $5511 = 0, $5512 = 0, $5513 = 0, $5514 = 0, $5515 = 0, $5516 = 0, $5517 = 0, $5518 = 0, $5519 = 0, $552 = 0.0, $5520 = 0, $5521 = 0, $5522 = 0, $5523 = 0, $5524 = 0, $5525 = 0, $5526 = 0, $5527 = 0, $5528 = 0;
 var $5529 = 0.0, $553 = 0.0, $5530 = 0, $5531 = 0, $5532 = 0, $5533 = 0, $5534 = 0, $5535 = 0, $5536 = 0, $5537 = 0, $5538 = 0, $5539 = 0, $554 = 0, $5540 = 0, $5541 = 0, $5542 = 0, $5543 = 0, $5544 = 0, $5545 = 0, $5546 = 0;
 var $5547 = 0, $5548 = 0, $5549 = 0, $555 = 0.0, $5550 = 0, $5551 = 0, $5552 = 0, $5553 = 0, $5554 = 0, $5555 = 0, $5556 = 0, $5557 = 0, $5558 = 0, $5559 = 0.0, $556 = 0, $5560 = 0, $5561 = 0, $5562 = 0, $5563 = 0, $5564 = 0;
 var $5565 = 0, $5566 = 0, $5567 = 0, $5568 = 0, $5569 = 0, $557 = 0.0, $5570 = 0, $5571 = 0, $5572 = 0, $5573 = 0, $5574 = 0, $5575 = 0, $5576 = 0, $5577 = 0, $5578 = 0, $5579 = 0, $558 = 0.0, $5580 = 0, $5581 = 0, $5582 = 0;
 var $5583 = 0, $5584 = 0, $5585 = 0, $5586 = 0, $5587 = 0, $5588 = 0, $5589 = 0.0, $559 = 0.0, $5590 = 0, $5591 = 0, $5592 = 0, $5593 = 0, $5594 = 0, $5595 = 0, $5596 = 0, $5597 = 0, $5598 = 0, $5599 = 0, $56 = 0, $560 = 0;
 var $5600 = 0, $5601 = 0, $5602 = 0, $5603 = 0, $5604 = 0, $5605 = 0, $5606 = 0, $5607 = 0, $5608 = 0, $5609 = 0, $561 = 0, $5610 = 0, $5611 = 0, $5612 = 0, $5613 = 0, $5614 = 0, $5615 = 0, $5616 = 0, $5617 = 0, $5618 = 0;
 var $5619 = 0, $562 = 0.0, $5620 = 0, $5621 = 0, $5622 = 0, $5623 = 0, $5624 = 0, $5625 = 0, $5626 = 0, $5627 = 0, $5628 = 0, $5629 = 0, $563 = 0.0, $5630 = 0, $5631 = 0, $5632 = 0, $5633 = 0, $5634 = 0, $5635 = 0, $5636 = 0;
 var $5637 = 0.0, $5638 = 0, $5639 = 0.0, $564 = 0.0, $5640 = 0.0, $5641 = 0, $5642 = 0.0, $5643 = 0.0, $5644 = 0, $5645 = 0.0, $5646 = 0, $5647 = 0.0, $5648 = 0.0, $5649 = 0, $565 = 0.0, $5650 = 0.0, $5651 = 0.0, $5652 = 0.0, $5653 = 0.0, $5654 = 0.0;
 var $5655 = 0, $5656 = 0.0, $5657 = 0.0, $5658 = 0.0, $5659 = 0.0, $566 = 0, $5660 = 0.0, $5661 = 0.0, $5662 = 0, $5663 = 0.0, $5664 = 0.0, $5665 = 0, $5666 = 0, $5667 = 0.0, $5668 = 0, $5669 = 0, $567 = 0.0, $5670 = 0.0, $5671 = 0, $5672 = 0;
 var $5673 = 0.0, $5674 = 0, $5675 = 0, $5676 = 0.0, $5677 = 0, $5678 = 0.0, $5679 = 0, $568 = 0, $5680 = 0.0, $5681 = 0, $5682 = 0.0, $5683 = 0, $5684 = 0.0, $5685 = 0, $5686 = 0.0, $5687 = 0.0, $5688 = 0.0, $5689 = 0, $569 = 0.0, $5690 = 0;
 var $5691 = 0.0, $5692 = 0.0, $5693 = 0.0, $5694 = 0.0, $5695 = 0.0, $5696 = 0.0, $5697 = 0.0, $5698 = 0, $5699 = 0.0, $57 = 0.0, $570 = 0.0, $5700 = 0.0, $5701 = 0, $5702 = 0, $5703 = 0.0, $5704 = 0.0, $5705 = 0, $5706 = 0, $5707 = 0.0, $5708 = 0.0;
 var $5709 = 0, $571 = 0.0, $5710 = 0, $5711 = 0.0, $5712 = 0.0, $5713 = 0, $5714 = 0, $5715 = 0.0, $5716 = 0.0, $5717 = 0, $5718 = 0, $5719 = 0.0, $572 = 0, $5720 = 0.0, $5721 = 0, $5722 = 0, $5723 = 0.0, $5724 = 0.0, $5725 = 0, $5726 = 0;
 var $5727 = 0.0, $5728 = 0.0, $5729 = 0, $573 = 0, $5730 = 0, $5731 = 0.0, $5732 = 0.0, $5733 = 0, $5734 = 0, $5735 = 0.0, $5736 = 0.0, $5737 = 0, $5738 = 0, $5739 = 0, $574 = 0.0, $5740 = 0.0, $5741 = 0.0, $5742 = 0, $5743 = 0.0, $5744 = 0.0;
 var $5745 = 0.0, $5746 = 0.0, $5747 = 0, $5748 = 0.0, $5749 = 0, $575 = 0.0, $5750 = 0.0, $5751 = 0.0, $5752 = 0.0, $5753 = 0.0, $5754 = 0, $5755 = 0, $5756 = 0.0, $5757 = 0.0, $5758 = 0.0, $5759 = 0.0, $576 = 0.0, $5760 = 0, $5761 = 0.0, $5762 = 0.0;
 var $5763 = 0, $5764 = 0.0, $5765 = 0.0, $5766 = 0.0, $5767 = 0.0, $5768 = 0, $5769 = 0, $577 = 0.0, $5770 = 0.0, $5771 = 0.0, $5772 = 0.0, $5773 = 0.0, $5774 = 0, $5775 = 0.0, $5776 = 0, $5777 = 0.0, $5778 = 0.0, $5779 = 0.0, $578 = 0, $5780 = 0.0;
 var $5781 = 0, $5782 = 0.0, $5783 = 0.0, $5784 = 0.0, $5785 = 0.0, $5786 = 0, $5787 = 0.0, $5788 = 0.0, $5789 = 0, $579 = 0.0, $5790 = 0.0, $5791 = 0.0, $5792 = 0.0, $5793 = 0.0, $5794 = 0.0, $5795 = 0.0, $5796 = 0.0, $5797 = 0, $5798 = 0, $5799 = 0.0;
 var $58 = 0.0, $580 = 0, $5800 = 0.0, $5801 = 0.0, $5802 = 0.0, $5803 = 0, $5804 = 0.0, $5805 = 0, $5806 = 0.0, $5807 = 0.0, $5808 = 0.0, $5809 = 0, $581 = 0.0, $5810 = 0.0, $5811 = 0.0, $5812 = 0.0, $5813 = 0.0, $5814 = 0, $5815 = 0.0, $5816 = 0.0;
 var $5817 = 0, $5818 = 0.0, $5819 = 0.0, $582 = 0.0, $5820 = 0.0, $5821 = 0.0, $5822 = 0.0, $5823 = 0.0, $5824 = 0.0, $5825 = 0.0, $5826 = 0.0, $5827 = 0, $5828 = 0.0, $5829 = 0.0, $583 = 0.0, $5830 = 0, $5831 = 0.0, $5832 = 0.0, $5833 = 0, $5834 = 0;
 var $5835 = 0, $5836 = 0, $5837 = 0, $5838 = 0, $5839 = 0, $584 = 0, $5840 = 0, $5841 = 0, $5842 = 0, $5843 = 0, $5844 = 0, $5845 = 0, $5846 = 0, $5847 = 0, $5848 = 0, $5849 = 0, $585 = 0.0, $5850 = 0, $5851 = 0, $5852 = 0;
 var $5853 = 0, $5854 = 0.0, $5855 = 0, $5856 = 0, $5857 = 0.0, $5858 = 0.0, $5859 = 0.0, $586 = 0.0, $5860 = 0, $5861 = 0, $5862 = 0, $5863 = 0.0, $5864 = 0, $5865 = 0, $5866 = 0.0, $5867 = 0.0, $5868 = 0.0, $5869 = 0, $587 = 0.0, $5870 = 0;
 var $5871 = 0, $5872 = 0, $5873 = 0, $5874 = 0, $5875 = 0, $5876 = 0, $5877 = 0, $5878 = 0, $5879 = 0, $588 = 0, $5880 = 0.0, $5881 = 0, $5882 = 0, $5883 = 0, $5884 = 0.0, $5885 = 0, $5886 = 0, $5887 = 0, $5888 = 0.0, $5889 = 0;
 var $589 = 0.0, $5890 = 0, $5891 = 0.0, $5892 = 0.0, $5893 = 0, $5894 = 0.0, $5895 = 0.0, $5896 = 0, $5897 = 0.0, $5898 = 0.0, $5899 = 0.0, $59 = 0.0, $590 = 0.0, $5900 = 0.0, $5901 = 0, $5902 = 0.0, $5903 = 0.0, $5904 = 0.0, $5905 = 0.0, $5906 = 0.0;
 var $5907 = 0, $5908 = 0.0, $5909 = 0.0, $591 = 0.0, $5910 = 0.0, $5911 = 0, $5912 = 0.0, $5913 = 0, $5914 = 0.0, $5915 = 0.0, $5916 = 0.0, $5917 = 0.0, $5918 = 0, $5919 = 0.0, $592 = 0.0, $5920 = 0, $5921 = 0.0, $5922 = 0.0, $5923 = 0.0, $5924 = 0;
 var $5925 = 0.0, $5926 = 0, $5927 = 0.0, $5928 = 0.0, $5929 = 0, $593 = 0, $5930 = 0.0, $5931 = 0, $5932 = 0.0, $5933 = 0.0, $5934 = 0.0, $5935 = 0.0, $5936 = 0.0, $5937 = 0.0, $5938 = 0, $5939 = 0, $594 = 0.0, $5940 = 0.0, $5941 = 0.0, $5942 = 0.0;
 var $5943 = 0, $5944 = 0.0, $5945 = 0.0, $5946 = 0, $5947 = 0.0, $5948 = 0.0, $5949 = 0.0, $595 = 0.0, $5950 = 0.0, $5951 = 0, $5952 = 0, $5953 = 0.0, $5954 = 0.0, $5955 = 0.0, $5956 = 0.0, $5957 = 0, $5958 = 0.0, $5959 = 0, $596 = 0.0, $5960 = 0.0;
 var $5961 = 0.0, $5962 = 0.0, $5963 = 0.0, $5964 = 0.0, $5965 = 0.0, $5966 = 0, $5967 = 0, $5968 = 0.0, $5969 = 0.0, $597 = 0.0, $5970 = 0.0, $5971 = 0.0, $5972 = 0, $5973 = 0.0, $5974 = 0, $5975 = 0.0, $5976 = 0.0, $5977 = 0.0, $5978 = 0.0, $5979 = 0.0;
 var $598 = 0, $5980 = 0.0, $5981 = 0, $5982 = 0.0, $5983 = 0.0, $5984 = 0.0, $5985 = 0.0, $5986 = 0, $5987 = 0.0, $5988 = 0.0, $5989 = 0, $599 = 0.0, $5990 = 0.0, $5991 = 0.0, $5992 = 0.0, $5993 = 0.0, $5994 = 0, $5995 = 0.0, $5996 = 0.0, $5997 = 0;
 var $5998 = 0.0, $5999 = 0.0, $6 = 0, $60 = 0, $600 = 0.0, $6000 = 0.0, $6001 = 0.0, $6002 = 0, $6003 = 0.0, $6004 = 0.0, $6005 = 0.0, $6006 = 0.0, $6007 = 0.0, $6008 = 0, $6009 = 0.0, $601 = 0.0, $6010 = 0.0, $6011 = 0, $6012 = 0.0, $6013 = 0.0;
 var $6014 = 0, $6015 = 0, $6016 = 0.0, $6017 = 0.0, $6018 = 0, $6019 = 0, $602 = 0.0, $6020 = 0.0, $6021 = 0.0, $6022 = 0, $6023 = 0, $6024 = 0.0, $6025 = 0.0, $6026 = 0, $6027 = 0, $6028 = 0.0, $6029 = 0.0, $603 = 0.0, $6030 = 0, $6031 = 0;
 var $6032 = 0.0, $6033 = 0.0, $6034 = 0, $6035 = 0, $6036 = 0.0, $6037 = 0.0, $6038 = 0, $6039 = 0, $604 = 0.0, $6040 = 0.0, $6041 = 0.0, $6042 = 0, $6043 = 0, $6044 = 0, $6045 = 0, $6046 = 0, $6047 = 0.0, $6048 = 0, $6049 = 0, $605 = 0.0;
 var $6050 = 0, $6051 = 0, $6052 = 0, $6053 = 0, $6054 = 0, $6055 = 0, $6056 = 0, $6057 = 0, $6058 = 0, $6059 = 0, $606 = 0, $6060 = 0, $6061 = 0, $6062 = 0, $6063 = 0, $6064 = 0, $6065 = 0, $6066 = 0, $6067 = 0, $6068 = 0;
 var $6069 = 0, $607 = 0.0, $6070 = 0, $6071 = 0, $6072 = 0, $6073 = 0, $6074 = 0, $6075 = 0, $6076 = 0, $6077 = 0.0, $6078 = 0, $6079 = 0, $608 = 0.0, $6080 = 0, $6081 = 0, $6082 = 0, $6083 = 0, $6084 = 0, $6085 = 0, $6086 = 0;
 var $6087 = 0, $6088 = 0, $6089 = 0, $609 = 0.0, $6090 = 0, $6091 = 0, $6092 = 0, $6093 = 0, $6094 = 0, $6095 = 0, $6096 = 0, $6097 = 0, $6098 = 0, $6099 = 0, $61 = 0.0, $610 = 0.0, $6100 = 0, $6101 = 0, $6102 = 0, $6103 = 0;
 var $6104 = 0, $6105 = 0, $6106 = 0, $6107 = 0.0, $6108 = 0, $6109 = 0, $611 = 0, $6110 = 0, $6111 = 0, $6112 = 0, $6113 = 0, $6114 = 0, $6115 = 0, $6116 = 0, $6117 = 0, $6118 = 0, $6119 = 0, $612 = 0, $6120 = 0, $6121 = 0;
 var $6122 = 0, $6123 = 0, $6124 = 0, $6125 = 0, $6126 = 0, $6127 = 0, $6128 = 0, $6129 = 0, $613 = 0.0, $6130 = 0, $6131 = 0, $6132 = 0, $6133 = 0, $6134 = 0, $6135 = 0, $6136 = 0, $6137 = 0.0, $6138 = 0, $6139 = 0, $614 = 0.0;
 var $6140 = 0, $6141 = 0, $6142 = 0, $6143 = 0, $6144 = 0, $6145 = 0, $6146 = 0, $6147 = 0, $6148 = 0, $6149 = 0, $615 = 0.0, $6150 = 0, $6151 = 0, $6152 = 0, $6153 = 0, $6154 = 0, $6155 = 0, $6156 = 0, $6157 = 0, $6158 = 0;
 var $6159 = 0, $616 = 0, $6160 = 0, $6161 = 0, $6162 = 0, $6163 = 0, $6164 = 0, $6165 = 0, $6166 = 0, $6167 = 0.0, $6168 = 0, $6169 = 0, $617 = 0.0, $6170 = 0, $6171 = 0, $6172 = 0, $6173 = 0, $6174 = 0, $6175 = 0, $6176 = 0;
 var $6177 = 0, $6178 = 0, $6179 = 0, $618 = 0.0, $6180 = 0, $6181 = 0, $6182 = 0, $6183 = 0, $6184 = 0, $6185 = 0, $6186 = 0, $6187 = 0, $6188 = 0, $6189 = 0, $619 = 0.0, $6190 = 0, $6191 = 0, $6192 = 0, $6193 = 0, $6194 = 0;
 var $6195 = 0, $6196 = 0, $6197 = 0.0, $6198 = 0, $6199 = 0, $62 = 0.0, $620 = 0.0, $6200 = 0, $6201 = 0, $6202 = 0, $6203 = 0, $6204 = 0, $6205 = 0, $6206 = 0, $6207 = 0, $6208 = 0, $6209 = 0, $621 = 0.0, $6210 = 0, $6211 = 0;
 var $6212 = 0, $6213 = 0, $6214 = 0, $6215 = 0, $6216 = 0, $6217 = 0, $6218 = 0, $6219 = 0, $622 = 0.0, $6220 = 0, $6221 = 0, $6222 = 0, $6223 = 0, $6224 = 0, $6225 = 0, $6226 = 0, $6227 = 0, $6228 = 0, $6229 = 0, $623 = 0.0;
 var $6230 = 0, $6231 = 0, $6232 = 0, $6233 = 0, $6234 = 0, $6235 = 0, $6236 = 0, $6237 = 0, $6238 = 0, $6239 = 0, $624 = 0.0, $6240 = 0, $6241 = 0, $6242 = 0, $6243 = 0, $6244 = 0, $6245 = 0.0, $6246 = 0, $6247 = 0.0, $6248 = 0.0;
 var $6249 = 0.0, $625 = 0, $6250 = 0, $6251 = 0.0, $6252 = 0.0, $6253 = 0, $6254 = 0.0, $6255 = 0.0, $6256 = 0, $6257 = 0.0, $6258 = 0.0, $6259 = 0, $626 = 0, $6260 = 0.0, $6261 = 0.0, $6262 = 0, $6263 = 0.0, $6264 = 0.0, $6265 = 0.0, $6266 = 0.0;
 var $6267 = 0.0, $6268 = 0.0, $6269 = 0, $627 = 0.0, $6270 = 0.0, $6271 = 0, $6272 = 0.0, $6273 = 0, $6274 = 0, $6275 = 0.0, $6276 = 0, $6277 = 0.0, $6278 = 0, $6279 = 0, $628 = 0.0, $6280 = 0.0, $6281 = 0, $6282 = 0.0, $6283 = 0.0, $6284 = 0;
 var $6285 = 0.0, $6286 = 0.0, $6287 = 0.0, $6288 = 0.0, $6289 = 0.0, $629 = 0.0, $6290 = 0, $6291 = 0, $6292 = 0.0, $6293 = 0.0, $6294 = 0.0, $6295 = 0.0, $6296 = 0, $6297 = 0.0, $6298 = 0.0, $6299 = 0.0, $63 = 0.0, $630 = 0, $6300 = 0.0, $6301 = 0.0;
 var $6302 = 0, $6303 = 0, $6304 = 0.0, $6305 = 0.0, $6306 = 0.0, $6307 = 0.0, $6308 = 0, $6309 = 0.0, $631 = 0, $6310 = 0.0, $6311 = 0.0, $6312 = 0.0, $6313 = 0.0, $6314 = 0, $6315 = 0, $6316 = 0.0, $6317 = 0.0, $6318 = 0.0, $6319 = 0.0, $632 = 0.0;
 var $6320 = 0.0, $6321 = 0, $6322 = 0.0, $6323 = 0.0, $6324 = 0.0, $6325 = 0.0, $6326 = 0.0, $6327 = 0, $6328 = 0.0, $6329 = 0.0, $633 = 0.0, $6330 = 0, $6331 = 0, $6332 = 0.0, $6333 = 0.0, $6334 = 0, $6335 = 0, $6336 = 0.0, $6337 = 0.0, $6338 = 0;
 var $6339 = 0, $634 = 0.0, $6340 = 0.0, $6341 = 0.0, $6342 = 0, $6343 = 0, $6344 = 0.0, $6345 = 0.0, $6346 = 0, $6347 = 0, $6348 = 0.0, $6349 = 0.0, $635 = 0.0, $6350 = 0, $6351 = 0, $6352 = 0.0, $6353 = 0.0, $6354 = 0, $6355 = 0, $6356 = 0.0;
 var $6357 = 0.0, $6358 = 0, $6359 = 0, $636 = 0.0, $6360 = 0.0, $6361 = 0.0, $6362 = 0, $6363 = 0, $6364 = 0.0, $6365 = 0.0, $6366 = 0, $6367 = 0, $6368 = 0, $6369 = 0.0, $637 = 0, $6370 = 0.0, $6371 = 0, $6372 = 0, $6373 = 0.0, $6374 = 0.0;
 var $6375 = 0, $6376 = 0, $6377 = 0.0, $6378 = 0.0, $6379 = 0, $638 = 0.0, $6380 = 0.0, $6381 = 0.0, $6382 = 0.0, $6383 = 0.0, $6384 = 0.0, $6385 = 0, $6386 = 0, $6387 = 0.0, $6388 = 0, $6389 = 0.0, $639 = 0.0, $6390 = 0.0, $6391 = 0.0, $6392 = 0.0;
 var $6393 = 0.0, $6394 = 0.0, $6395 = 0.0, $6396 = 0, $6397 = 0.0, $6398 = 0.0, $6399 = 0, $64 = 0, $640 = 0, $6400 = 0.0, $6401 = 0.0, $6402 = 0, $6403 = 0, $6404 = 0, $6405 = 0, $6406 = 0, $6407 = 0, $6408 = 0, $6409 = 0, $641 = 0;
 var $6410 = 0, $6411 = 0, $6412 = 0, $6413 = 0, $6414 = 0, $6415 = 0, $6416 = 0, $6417 = 0, $6418 = 0, $6419 = 0, $642 = 0.0, $6420 = 0, $6421 = 0, $6422 = 0, $6423 = 0.0, $6424 = 0, $6425 = 0, $6426 = 0.0, $6427 = 0.0, $6428 = 0.0;
 var $6429 = 0, $643 = 0, $6430 = 0, $6431 = 0, $6432 = 0.0, $6433 = 0, $6434 = 0, $6435 = 0.0, $6436 = 0.0, $6437 = 0.0, $6438 = 0, $6439 = 0, $644 = 0, $6440 = 0, $6441 = 0, $6442 = 0, $6443 = 0, $6444 = 0, $6445 = 0, $6446 = 0;
 var $6447 = 0, $6448 = 0, $6449 = 0.0, $645 = 0.0, $6450 = 0, $6451 = 0, $6452 = 0, $6453 = 0.0, $6454 = 0, $6455 = 0, $6456 = 0, $6457 = 0.0, $6458 = 0, $6459 = 0, $646 = 0, $6460 = 0.0, $6461 = 0.0, $6462 = 0, $6463 = 0.0, $6464 = 0.0;
 var $6465 = 0, $6466 = 0.0, $6467 = 0.0, $6468 = 0.0, $6469 = 0.0, $647 = 0, $6470 = 0, $6471 = 0.0, $6472 = 0.0, $6473 = 0.0, $6474 = 0, $6475 = 0.0, $6476 = 0.0, $6477 = 0, $6478 = 0.0, $6479 = 0.0, $648 = 0.0, $6480 = 0.0, $6481 = 0.0, $6482 = 0;
 var $6483 = 0, $6484 = 0.0, $6485 = 0.0, $6486 = 0.0, $6487 = 0.0, $6488 = 0, $6489 = 0, $649 = 0, $6490 = 0.0, $6491 = 0.0, $6492 = 0.0, $6493 = 0, $6494 = 0.0, $6495 = 0.0, $6496 = 0, $6497 = 0.0, $6498 = 0.0, $6499 = 0.0, $65 = 0.0, $650 = 0;
 var $6500 = 0.0, $6501 = 0, $6502 = 0.0, $6503 = 0.0, $6504 = 0, $6505 = 0, $6506 = 0.0, $6507 = 0, $6508 = 0.0, $6509 = 0.0, $651 = 0.0, $6510 = 0.0, $6511 = 0.0, $6512 = 0.0, $6513 = 0, $6514 = 0, $6515 = 0.0, $6516 = 0.0, $6517 = 0.0, $6518 = 0.0;
 var $6519 = 0, $652 = 0, $6520 = 0.0, $6521 = 0, $6522 = 0.0, $6523 = 0.0, $6524 = 0.0, $6525 = 0.0, $6526 = 0.0, $6527 = 0, $6528 = 0, $6529 = 0.0, $653 = 0.0, $6530 = 0, $6531 = 0.0, $6532 = 0.0, $6533 = 0, $6534 = 0.0, $6535 = 0.0, $6536 = 0.0;
 var $6537 = 0.0, $6538 = 0.0, $6539 = 0.0, $654 = 0.0, $6540 = 0.0, $6541 = 0.0, $6542 = 0, $6543 = 0.0, $6544 = 0.0, $6545 = 0, $6546 = 0, $6547 = 0.0, $6548 = 0.0, $6549 = 0, $655 = 0, $6550 = 0, $6551 = 0.0, $6552 = 0.0, $6553 = 0, $6554 = 0;
 var $6555 = 0.0, $6556 = 0.0, $6557 = 0, $6558 = 0, $6559 = 0.0, $656 = 0, $6560 = 0.0, $6561 = 0, $6562 = 0, $6563 = 0.0, $6564 = 0.0, $6565 = 0, $6566 = 0, $6567 = 0.0, $6568 = 0.0, $6569 = 0, $657 = 0.0, $6570 = 0, $6571 = 0.0, $6572 = 0.0;
 var $6573 = 0, $6574 = 0, $6575 = 0, $6576 = 0, $6577 = 0, $6578 = 0.0, $6579 = 0, $658 = 0.0, $6580 = 0, $6581 = 0, $6582 = 0, $6583 = 0, $6584 = 0, $6585 = 0, $6586 = 0, $6587 = 0, $6588 = 0, $6589 = 0, $659 = 0, $6590 = 0;
 var $6591 = 0, $6592 = 0, $6593 = 0, $6594 = 0, $6595 = 0, $6596 = 0, $6597 = 0, $6598 = 0, $6599 = 0, $66 = 0.0, $660 = 0, $6600 = 0, $6601 = 0, $6602 = 0, $6603 = 0, $6604 = 0, $6605 = 0, $6606 = 0, $6607 = 0, $6608 = 0.0;
 var $6609 = 0, $661 = 0.0, $6610 = 0, $6611 = 0, $6612 = 0, $6613 = 0, $6614 = 0, $6615 = 0, $6616 = 0, $6617 = 0, $6618 = 0, $6619 = 0, $662 = 0.0, $6620 = 0, $6621 = 0, $6622 = 0, $6623 = 0, $6624 = 0, $6625 = 0, $6626 = 0;
 var $6627 = 0, $6628 = 0, $6629 = 0, $663 = 0, $6630 = 0, $6631 = 0, $6632 = 0, $6633 = 0, $6634 = 0, $6635 = 0, $6636 = 0, $6637 = 0, $6638 = 0.0, $6639 = 0, $664 = 0, $6640 = 0, $6641 = 0, $6642 = 0, $6643 = 0, $6644 = 0;
 var $6645 = 0, $6646 = 0, $6647 = 0, $6648 = 0, $6649 = 0, $665 = 0.0, $6650 = 0, $6651 = 0, $6652 = 0, $6653 = 0, $6654 = 0, $6655 = 0, $6656 = 0, $6657 = 0, $6658 = 0, $6659 = 0, $666 = 0.0, $6660 = 0, $6661 = 0, $6662 = 0;
 var $6663 = 0, $6664 = 0, $6665 = 0, $6666 = 0, $6667 = 0, $6668 = 0.0, $6669 = 0, $667 = 0, $6670 = 0, $6671 = 0, $6672 = 0, $6673 = 0, $6674 = 0, $6675 = 0, $6676 = 0, $6677 = 0, $6678 = 0, $6679 = 0, $668 = 0, $6680 = 0;
 var $6681 = 0, $6682 = 0, $6683 = 0, $6684 = 0, $6685 = 0, $6686 = 0, $6687 = 0, $6688 = 0, $6689 = 0, $669 = 0.0, $6690 = 0, $6691 = 0, $6692 = 0, $6693 = 0, $6694 = 0, $6695 = 0, $6696 = 0, $6697 = 0, $6698 = 0.0, $6699 = 0;
 var $67 = 0.0, $670 = 0.0, $6700 = 0, $6701 = 0, $6702 = 0, $6703 = 0, $6704 = 0, $6705 = 0, $6706 = 0, $6707 = 0, $6708 = 0, $6709 = 0, $671 = 0, $6710 = 0, $6711 = 0, $6712 = 0, $6713 = 0, $6714 = 0, $6715 = 0, $6716 = 0;
 var $6717 = 0, $6718 = 0, $6719 = 0, $672 = 0, $6720 = 0, $6721 = 0, $6722 = 0, $6723 = 0, $6724 = 0, $6725 = 0, $6726 = 0, $6727 = 0, $6728 = 0.0, $6729 = 0, $673 = 0.0, $6730 = 0, $6731 = 0, $6732 = 0, $6733 = 0, $6734 = 0;
 var $6735 = 0, $6736 = 0, $6737 = 0, $6738 = 0, $6739 = 0, $674 = 0.0, $6740 = 0, $6741 = 0, $6742 = 0, $6743 = 0, $6744 = 0, $6745 = 0, $6746 = 0, $6747 = 0, $6748 = 0, $6749 = 0, $675 = 0, $6750 = 0, $6751 = 0, $6752 = 0;
 var $6753 = 0, $6754 = 0, $6755 = 0, $6756 = 0, $6757 = 0, $6758 = 0, $6759 = 0, $676 = 0, $6760 = 0, $6761 = 0, $6762 = 0, $6763 = 0, $6764 = 0, $6765 = 0, $6766 = 0, $6767 = 0, $6768 = 0, $6769 = 0, $677 = 0, $6770 = 0;
 var $6771 = 0, $6772 = 0, $6773 = 0, $6774 = 0, $6775 = 0, $6776 = 0.0, $6777 = 0, $6778 = 0.0, $6779 = 0.0, $678 = 0.0, $6780 = 0.0, $6781 = 0, $6782 = 0.0, $6783 = 0.0, $6784 = 0, $6785 = 0.0, $6786 = 0.0, $6787 = 0, $6788 = 0.0, $6789 = 0.0;
 var $679 = 0, $6790 = 0.0, $6791 = 0.0, $6792 = 0.0, $6793 = 0.0, $6794 = 0.0, $6795 = 0, $6796 = 0.0, $6797 = 0, $6798 = 0, $6799 = 0.0, $68 = 0.0, $680 = 0.0, $6800 = 0, $6801 = 0.0, $6802 = 0.0, $6803 = 0, $6804 = 0, $6805 = 0.0, $6806 = 0;
 var $6807 = 0, $6808 = 0.0, $6809 = 0.0, $681 = 0, $6810 = 0.0, $6811 = 0.0, $6812 = 0.0, $6813 = 0, $6814 = 0, $6815 = 0.0, $6816 = 0.0, $6817 = 0.0, $6818 = 0.0, $6819 = 0, $682 = 0, $6820 = 0.0, $6821 = 0.0, $6822 = 0.0, $6823 = 0.0, $6824 = 0.0;
 var $6825 = 0, $6826 = 0, $6827 = 0.0, $6828 = 0, $6829 = 0.0, $683 = 0, $6830 = 0.0, $6831 = 0, $6832 = 0.0, $6833 = 0.0, $6834 = 0.0, $6835 = 0.0, $6836 = 0.0, $6837 = 0, $6838 = 0, $6839 = 0.0, $684 = 0.0, $6840 = 0.0, $6841 = 0.0, $6842 = 0.0;
 var $6843 = 0, $6844 = 0.0, $6845 = 0, $6846 = 0.0, $6847 = 0.0, $6848 = 0.0, $6849 = 0, $685 = 0.0, $6850 = 0, $6851 = 0.0, $6852 = 0, $6853 = 0.0, $6854 = 0.0, $6855 = 0.0, $6856 = 0, $6857 = 0.0, $6858 = 0.0, $6859 = 0.0, $686 = 0.0, $6860 = 0.0;
 var $6861 = 0.0, $6862 = 0, $6863 = 0.0, $6864 = 0.0, $6865 = 0, $6866 = 0, $6867 = 0.0, $6868 = 0.0, $6869 = 0, $687 = 0.0, $6870 = 0, $6871 = 0.0, $6872 = 0.0, $6873 = 0, $6874 = 0, $6875 = 0.0, $6876 = 0.0, $6877 = 0, $6878 = 0, $6879 = 0.0;
 var $688 = 0.0, $6880 = 0.0, $6881 = 0, $6882 = 0, $6883 = 0.0, $6884 = 0.0, $6885 = 0, $6886 = 0, $6887 = 0.0, $6888 = 0.0, $6889 = 0, $689 = 0.0, $6890 = 0, $6891 = 0.0, $6892 = 0.0, $6893 = 0, $6894 = 0, $6895 = 0.0, $6896 = 0.0, $6897 = 0;
 var $6898 = 0, $6899 = 0.0, $69 = 0.0, $690 = 0.0, $6900 = 0.0, $6901 = 0, $6902 = 0, $6903 = 0, $6904 = 0.0, $6905 = 0.0, $6906 = 0, $6907 = 0.0, $6908 = 0, $6909 = 0, $691 = 0.0, $6910 = 0, $6911 = 0, $6912 = 0.0, $6913 = 0.0, $6914 = 0;
 var $6915 = 0, $6916 = 0, $6917 = 0.0, $6918 = 0.0, $6919 = 0.0, $692 = 0.0, $6920 = 0.0, $6921 = 0.0, $6922 = 0.0, $6923 = 0.0, $6924 = 0.0, $6925 = 0.0, $6926 = 0.0, $6927 = 0, $6928 = 0.0, $6929 = 0.0, $693 = 0.0, $6930 = 0, $6931 = 0.0, $6932 = 0.0;
 var $6933 = 0, $6934 = 0, $6935 = 0, $6936 = 0, $6937 = 0, $6938 = 0, $6939 = 0, $694 = 0, $6940 = 0, $6941 = 0, $6942 = 0, $6943 = 0, $6944 = 0, $6945 = 0, $6946 = 0, $6947 = 0, $6948 = 0, $6949 = 0, $695 = 0, $6950 = 0;
 var $6951 = 0, $6952 = 0, $6953 = 0, $6954 = 0.0, $6955 = 0, $6956 = 0, $6957 = 0.0, $6958 = 0.0, $6959 = 0.0, $696 = 0.0, $6960 = 0, $6961 = 0, $6962 = 0, $6963 = 0.0, $6964 = 0, $6965 = 0, $6966 = 0.0, $6967 = 0.0, $6968 = 0.0, $6969 = 0;
 var $697 = 0.0, $6970 = 0, $6971 = 0, $6972 = 0, $6973 = 0, $6974 = 0, $6975 = 0, $6976 = 0, $6977 = 0, $6978 = 0, $6979 = 0, $698 = 0, $6980 = 0.0, $6981 = 0, $6982 = 0, $6983 = 0, $6984 = 0.0, $6985 = 0, $6986 = 0, $6987 = 0;
 var $6988 = 0.0, $6989 = 0, $699 = 0, $6990 = 0, $6991 = 0.0, $6992 = 0.0, $6993 = 0, $6994 = 0.0, $6995 = 0.0, $6996 = 0, $6997 = 0.0, $6998 = 0.0, $6999 = 0, $7 = 0, $70 = 0, $700 = 0.0, $7000 = 0.0, $7001 = 0.0, $7002 = 0.0, $7003 = 0.0;
 var $7004 = 0, $7005 = 0.0, $7006 = 0, $7007 = 0.0, $7008 = 0.0, $7009 = 0.0, $701 = 0.0, $7010 = 0.0, $7011 = 0, $7012 = 0.0, $7013 = 0, $7014 = 0.0, $7015 = 0.0, $7016 = 0.0, $7017 = 0.0, $7018 = 0.0, $7019 = 0, $702 = 0, $7020 = 0.0, $7021 = 0.0;
 var $7022 = 0, $7023 = 0.0, $7024 = 0.0, $7025 = 0.0, $7026 = 0, $7027 = 0, $7028 = 0.0, $7029 = 0.0, $703 = 0.0, $7030 = 0.0, $7031 = 0.0, $7032 = 0.0, $7033 = 0, $7034 = 0, $7035 = 0.0, $7036 = 0.0, $7037 = 0.0, $7038 = 0.0, $7039 = 0.0, $704 = 0;
 var $7040 = 0.0, $7041 = 0, $7042 = 0, $7043 = 0.0, $7044 = 0.0, $7045 = 0.0, $7046 = 0.0, $7047 = 0.0, $7048 = 0.0, $7049 = 0.0, $705 = 0.0, $7050 = 0, $7051 = 0, $7052 = 0.0, $7053 = 0.0, $7054 = 0.0, $7055 = 0.0, $7056 = 0.0, $7057 = 0.0, $7058 = 0;
 var $7059 = 0.0, $706 = 0.0, $7060 = 0, $7061 = 0.0, $7062 = 0.0, $7063 = 0.0, $7064 = 0, $7065 = 0, $7066 = 0.0, $7067 = 0.0, $7068 = 0.0, $7069 = 0.0, $707 = 0, $7070 = 0, $7071 = 0.0, $7072 = 0, $7073 = 0.0, $7074 = 0.0, $7075 = 0.0, $7076 = 0.0;
 var $7077 = 0.0, $7078 = 0.0, $7079 = 0, $708 = 0.0, $7080 = 0.0, $7081 = 0.0, $7082 = 0, $7083 = 0, $7084 = 0.0, $7085 = 0.0, $7086 = 0, $7087 = 0, $7088 = 0.0, $7089 = 0.0, $709 = 0.0, $7090 = 0, $7091 = 0, $7092 = 0.0, $7093 = 0.0, $7094 = 0;
 var $7095 = 0, $7096 = 0.0, $7097 = 0.0, $7098 = 0, $7099 = 0, $71 = 0.0, $710 = 0, $7100 = 0.0, $7101 = 0.0, $7102 = 0, $7103 = 0, $7104 = 0.0, $7105 = 0.0, $7106 = 0, $7107 = 0, $7108 = 0.0, $7109 = 0.0, $711 = 0.0, $7110 = 0, $7111 = 0;
 var $7112 = 0, $7113 = 0, $7114 = 0, $7115 = 0.0, $7116 = 0, $7117 = 0, $7118 = 0, $7119 = 0, $712 = 0, $7120 = 0, $7121 = 0, $7122 = 0, $7123 = 0, $7124 = 0, $7125 = 0, $7126 = 0, $7127 = 0, $7128 = 0, $7129 = 0, $713 = 0;
 var $7130 = 0, $7131 = 0, $7132 = 0, $7133 = 0, $7134 = 0, $7135 = 0, $7136 = 0, $7137 = 0, $7138 = 0, $7139 = 0, $714 = 0.0, $7140 = 0, $7141 = 0, $7142 = 0, $7143 = 0, $7144 = 0, $7145 = 0.0, $7146 = 0, $7147 = 0, $7148 = 0;
 var $7149 = 0, $715 = 0.0, $7150 = 0, $7151 = 0, $7152 = 0, $7153 = 0, $7154 = 0, $7155 = 0, $7156 = 0, $7157 = 0, $7158 = 0, $7159 = 0, $716 = 0, $7160 = 0, $7161 = 0, $7162 = 0, $7163 = 0, $7164 = 0, $7165 = 0, $7166 = 0;
 var $7167 = 0, $7168 = 0, $7169 = 0, $717 = 0, $7170 = 0, $7171 = 0, $7172 = 0, $7173 = 0, $7174 = 0, $7175 = 0.0, $7176 = 0, $7177 = 0, $7178 = 0, $7179 = 0, $718 = 0.0, $7180 = 0, $7181 = 0, $7182 = 0, $7183 = 0, $7184 = 0;
 var $7185 = 0, $7186 = 0, $7187 = 0, $7188 = 0, $7189 = 0, $719 = 0.0, $7190 = 0, $7191 = 0, $7192 = 0, $7193 = 0, $7194 = 0, $7195 = 0, $7196 = 0, $7197 = 0, $7198 = 0, $7199 = 0, $72 = 0.0, $720 = 0, $7200 = 0, $7201 = 0;
 var $7202 = 0, $7203 = 0, $7204 = 0, $7205 = 0.0, $7206 = 0, $7207 = 0, $7208 = 0, $7209 = 0, $721 = 0, $7210 = 0, $7211 = 0, $7212 = 0, $7213 = 0, $7214 = 0, $7215 = 0, $7216 = 0, $7217 = 0, $7218 = 0, $7219 = 0, $722 = 0;
 var $7220 = 0, $7221 = 0, $7222 = 0, $7223 = 0, $7224 = 0, $7225 = 0, $7226 = 0, $7227 = 0, $7228 = 0, $7229 = 0, $723 = 0, $7230 = 0, $7231 = 0, $7232 = 0, $7233 = 0, $7234 = 0, $7235 = 0.0, $7236 = 0, $7237 = 0, $7238 = 0;
 var $7239 = 0, $724 = 0, $7240 = 0, $7241 = 0, $7242 = 0, $7243 = 0, $7244 = 0, $7245 = 0, $7246 = 0, $7247 = 0, $7248 = 0, $7249 = 0, $725 = 0, $7250 = 0, $7251 = 0, $7252 = 0, $7253 = 0, $7254 = 0, $7255 = 0, $7256 = 0;
 var $7257 = 0, $7258 = 0, $7259 = 0, $726 = 0, $7260 = 0, $7261 = 0, $7262 = 0, $7263 = 0, $7264 = 0, $7265 = 0.0, $7266 = 0, $7267 = 0, $7268 = 0, $7269 = 0, $727 = 0, $7270 = 0, $7271 = 0, $7272 = 0, $7273 = 0, $7274 = 0;
 var $7275 = 0, $7276 = 0, $7277 = 0, $7278 = 0, $7279 = 0, $728 = 0, $7280 = 0, $7281 = 0, $7282 = 0, $7283 = 0, $7284 = 0, $7285 = 0, $7286 = 0, $7287 = 0, $7288 = 0, $7289 = 0, $729 = 0, $7290 = 0, $7291 = 0, $7292 = 0;
 var $7293 = 0, $7294 = 0, $7295 = 0, $7296 = 0, $7297 = 0, $7298 = 0, $7299 = 0, $73 = 0.0, $730 = 0, $7300 = 0, $7301 = 0, $7302 = 0, $7303 = 0, $7304 = 0, $7305 = 0, $7306 = 0, $7307 = 0, $7308 = 0, $7309 = 0, $731 = 0;
 var $7310 = 0, $7311 = 0, $7312 = 0, $7313 = 0, $7314 = 0.0, $7315 = 0, $7316 = 0, $7317 = 0, $7318 = 0.0, $7319 = 0, $732 = 0, $7320 = 0.0, $7321 = 0, $7322 = 0, $7323 = 0, $7324 = 0, $7325 = 0.0, $7326 = 0, $7327 = 0, $7328 = 0;
 var $7329 = 0.0, $733 = 0, $7330 = 0.0, $7331 = 0.0, $7332 = 0.0, $7333 = 0.0, $7334 = 0, $7335 = 0.0, $7336 = 0, $7337 = 0.0, $7338 = 0.0, $7339 = 0, $734 = 0, $7340 = 0.0, $7341 = 0.0, $7342 = 0, $7343 = 0.0, $7344 = 0.0, $7345 = 0.0, $7346 = 0.0;
 var $7347 = 0.0, $7348 = 0, $7349 = 0, $735 = 0, $7350 = 0.0, $7351 = 0.0, $7352 = 0.0, $7353 = 0.0, $7354 = 0.0, $7355 = 0, $7356 = 0.0, $7357 = 0.0, $7358 = 0.0, $7359 = 0.0, $736 = 0, $7360 = 0.0, $7361 = 0, $7362 = 0.0, $7363 = 0, $7364 = 0.0;
 var $7365 = 0.0, $7366 = 0, $7367 = 0.0, $7368 = 0.0, $7369 = 0, $737 = 0, $7370 = 0.0, $7371 = 0.0, $7372 = 0.0, $7373 = 0.0, $7374 = 0.0, $7375 = 0, $7376 = 0.0, $7377 = 0.0, $7378 = 0.0, $7379 = 0.0, $738 = 0, $7380 = 0.0, $7381 = 0.0, $7382 = 0.0;
 var $7383 = 0.0, $7384 = 0, $7385 = 0.0, $7386 = 0.0, $7387 = 0.0, $7388 = 0.0, $7389 = 0.0, $739 = 0, $7390 = 0, $7391 = 0.0, $7392 = 0, $7393 = 0.0, $7394 = 0.0, $7395 = 0, $7396 = 0.0, $7397 = 0.0, $7398 = 0, $7399 = 0.0, $74 = 0.0, $740 = 0;
 var $7400 = 0.0, $7401 = 0.0, $7402 = 0.0, $7403 = 0, $7404 = 0.0, $7405 = 0.0, $7406 = 0.0, $7407 = 0.0, $7408 = 0.0, $7409 = 0.0, $741 = 0, $7410 = 0.0, $7411 = 0.0, $7412 = 0.0, $7413 = 0.0, $7414 = 0, $7415 = 0.0, $7416 = 0.0, $7417 = 0, $7418 = 0.0;
 var $7419 = 0.0, $742 = 0.0, $7420 = 0, $7421 = 0, $7422 = 0, $7423 = 0, $7424 = 0, $7425 = 0, $7426 = 0, $7427 = 0, $7428 = 0, $7429 = 0, $743 = 0, $7430 = 0, $7431 = 0, $7432 = 0, $7433 = 0, $7434 = 0, $7435 = 0, $7436 = 0;
 var $7437 = 0, $7438 = 0, $7439 = 0, $744 = 0, $7440 = 0, $7441 = 0.0, $7442 = 0, $7443 = 0, $7444 = 0.0, $7445 = 0.0, $7446 = 0.0, $7447 = 0, $7448 = 0, $7449 = 0, $745 = 0.0, $7450 = 0.0, $7451 = 0, $7452 = 0, $7453 = 0.0, $7454 = 0.0;
 var $7455 = 0.0, $7456 = 0, $7457 = 0, $7458 = 0, $7459 = 0, $746 = 0.0, $7460 = 0, $7461 = 0, $7462 = 0, $7463 = 0, $7464 = 0, $7465 = 0, $7466 = 0, $7467 = 0.0, $7468 = 0, $7469 = 0, $747 = 0.0, $7470 = 0, $7471 = 0.0, $7472 = 0;
 var $7473 = 0, $7474 = 0, $7475 = 0.0, $7476 = 0, $7477 = 0, $7478 = 0.0, $7479 = 0.0, $748 = 0, $7480 = 0, $7481 = 0.0, $7482 = 0.0, $7483 = 0, $7484 = 0.0, $7485 = 0, $7486 = 0.0, $7487 = 0.0, $7488 = 0, $7489 = 0.0, $749 = 0, $7490 = 0;
 var $7491 = 0.0, $7492 = 0.0, $7493 = 0, $7494 = 0.0, $7495 = 0, $7496 = 0.0, $7497 = 0.0, $7498 = 0, $7499 = 0.0, $75 = 0.0, $750 = 0, $7500 = 0.0, $7501 = 0, $7502 = 0.0, $7503 = 0.0, $7504 = 0.0, $7505 = 0.0, $7506 = 0, $7507 = 0.0, $7508 = 0.0;
 var $7509 = 0.0, $751 = 0.0, $7510 = 0.0, $7511 = 0.0, $7512 = 0, $7513 = 0.0, $7514 = 0, $7515 = 0.0, $7516 = 0.0, $7517 = 0.0, $7518 = 0.0, $7519 = 0.0, $752 = 0, $7520 = 0.0, $7521 = 0.0, $7522 = 0.0, $7523 = 0, $7524 = 0.0, $7525 = 0.0, $7526 = 0;
 var $7527 = 0, $7528 = 0.0, $7529 = 0.0, $753 = 0, $7530 = 0.0, $7531 = 0, $7532 = 0.0, $7533 = 0, $7534 = 0.0, $7535 = 0.0, $7536 = 0.0, $7537 = 0, $7538 = 0.0, $7539 = 0, $754 = 0.0, $7540 = 0.0, $7541 = 0.0, $7542 = 0.0, $7543 = 0, $7544 = 0;
 var $7545 = 0.0, $7546 = 0.0, $7547 = 0.0, $7548 = 0.0, $7549 = 0, $755 = 0.0, $7550 = 0.0, $7551 = 0, $7552 = 0.0, $7553 = 0.0, $7554 = 0.0, $7555 = 0.0, $7556 = 0.0, $7557 = 0.0, $7558 = 0, $7559 = 0, $756 = 0.0, $7560 = 0.0, $7561 = 0.0, $7562 = 0.0;
 var $7563 = 0.0, $7564 = 0, $7565 = 0.0, $7566 = 0, $7567 = 0.0, $7568 = 0.0, $7569 = 0.0, $757 = 0, $7570 = 0.0, $7571 = 0.0, $7572 = 0.0, $7573 = 0, $7574 = 0.0, $7575 = 0.0, $7576 = 0.0, $7577 = 0, $7578 = 0.0, $7579 = 0.0, $758 = 0, $7580 = 0.0;
 var $7581 = 0.0, $7582 = 0, $7583 = 0.0, $7584 = 0.0, $7585 = 0, $7586 = 0, $7587 = 0.0, $7588 = 0.0, $7589 = 0.0, $759 = 0, $7590 = 0.0, $7591 = 0, $7592 = 0.0, $7593 = 0, $7594 = 0.0, $7595 = 0.0, $7596 = 0.0, $7597 = 0.0, $7598 = 0.0, $7599 = 0;
 var $76 = 0, $760 = 0, $7600 = 0.0, $7601 = 0.0, $7602 = 0.0, $7603 = 0.0, $7604 = 0.0, $7605 = 0.0, $7606 = 0, $7607 = 0.0, $7608 = 0.0, $7609 = 0, $761 = 0, $7610 = 0.0, $7611 = 0.0, $7612 = 0.0, $7613 = 0, $7614 = 0.0, $7615 = 0.0, $7616 = 0.0;
 var $7617 = 0.0, $7618 = 0.0, $7619 = 0, $762 = 0, $7620 = 0.0, $7621 = 0.0, $7622 = 0, $7623 = 0, $7624 = 0.0, $7625 = 0.0, $7626 = 0.0, $7627 = 0.0, $7628 = 0.0, $7629 = 0.0, $763 = 0, $7630 = 0.0, $7631 = 0.0, $7632 = 0.0, $7633 = 0, $7634 = 0.0;
 var $7635 = 0.0, $7636 = 0, $7637 = 0, $7638 = 0.0, $7639 = 0.0, $764 = 0, $7640 = 0.0, $7641 = 0.0, $7642 = 0.0, $7643 = 0.0, $7644 = 0, $7645 = 0.0, $7646 = 0.0, $7647 = 0.0, $7648 = 0.0, $7649 = 0, $765 = 0, $7650 = 0.0, $7651 = 0.0, $7652 = 0.0;
 var $7653 = 0.0, $7654 = 0, $7655 = 0, $7656 = 0.0, $7657 = 0.0, $7658 = 0.0, $7659 = 0, $766 = 0, $7660 = 0.0, $7661 = 0.0, $7662 = 0.0, $7663 = 0.0, $7664 = 0.0, $7665 = 0.0, $7666 = 0.0, $7667 = 0.0, $7668 = 0, $7669 = 0.0, $767 = 0, $7670 = 0.0;
 var $7671 = 0.0, $7672 = 0.0, $7673 = 0, $7674 = 0.0, $7675 = 0.0, $7676 = 0, $7677 = 0, $7678 = 0.0, $7679 = 0.0, $768 = 0.0, $7680 = 0, $7681 = 0, $7682 = 0.0, $7683 = 0.0, $7684 = 0, $7685 = 0, $7686 = 0.0, $7687 = 0.0, $7688 = 0, $7689 = 0;
 var $769 = 0, $7690 = 0.0, $7691 = 0.0, $7692 = 0, $7693 = 0, $7694 = 0.0, $7695 = 0.0, $7696 = 0, $7697 = 0, $7698 = 0.0, $7699 = 0.0, $77 = 0.0, $770 = 0, $7700 = 0, $7701 = 0, $7702 = 0.0, $7703 = 0.0, $7704 = 0, $7705 = 0, $7706 = 0.0;
 var $7707 = 0.0, $7708 = 0, $7709 = 0, $771 = 0, $7710 = 0.0, $7711 = 0.0, $7712 = 0, $7713 = 0, $7714 = 0.0, $7715 = 0.0, $7716 = 0, $7717 = 0, $7718 = 0.0, $7719 = 0.0, $772 = 0.0, $7720 = 0, $7721 = 0, $7722 = 0, $7723 = 0, $7724 = 0;
 var $7725 = 0.0, $7726 = 0, $7727 = 0, $7728 = 0, $7729 = 0, $773 = 0, $7730 = 0, $7731 = 0, $7732 = 0, $7733 = 0, $7734 = 0, $7735 = 0, $7736 = 0, $7737 = 0, $7738 = 0, $7739 = 0, $774 = 0, $7740 = 0, $7741 = 0, $7742 = 0;
 var $7743 = 0, $7744 = 0, $7745 = 0, $7746 = 0, $7747 = 0, $7748 = 0, $7749 = 0, $775 = 0, $7750 = 0, $7751 = 0, $7752 = 0, $7753 = 0, $7754 = 0, $7755 = 0.0, $7756 = 0, $7757 = 0, $7758 = 0, $7759 = 0, $776 = 0.0, $7760 = 0;
 var $7761 = 0, $7762 = 0, $7763 = 0, $7764 = 0, $7765 = 0, $7766 = 0, $7767 = 0, $7768 = 0, $7769 = 0, $777 = 0, $7770 = 0, $7771 = 0, $7772 = 0, $7773 = 0, $7774 = 0, $7775 = 0, $7776 = 0, $7777 = 0, $7778 = 0, $7779 = 0;
 var $778 = 0, $7780 = 0, $7781 = 0, $7782 = 0, $7783 = 0, $7784 = 0, $7785 = 0.0, $7786 = 0, $7787 = 0, $7788 = 0, $7789 = 0, $779 = 0.0, $7790 = 0, $7791 = 0, $7792 = 0, $7793 = 0, $7794 = 0, $7795 = 0, $7796 = 0, $7797 = 0;
 var $7798 = 0, $7799 = 0, $78 = 0.0, $780 = 0.0, $7800 = 0, $7801 = 0, $7802 = 0, $7803 = 0, $7804 = 0, $7805 = 0, $7806 = 0, $7807 = 0, $7808 = 0, $7809 = 0, $781 = 0, $7810 = 0, $7811 = 0, $7812 = 0, $7813 = 0, $7814 = 0;
 var $7815 = 0.0, $7816 = 0, $7817 = 0, $7818 = 0, $7819 = 0, $782 = 0.0, $7820 = 0, $7821 = 0, $7822 = 0, $7823 = 0, $7824 = 0, $7825 = 0, $7826 = 0, $7827 = 0, $7828 = 0, $7829 = 0, $783 = 0.0, $7830 = 0, $7831 = 0, $7832 = 0;
 var $7833 = 0, $7834 = 0, $7835 = 0, $7836 = 0, $7837 = 0, $7838 = 0, $7839 = 0, $784 = 0.0, $7840 = 0, $7841 = 0, $7842 = 0, $7843 = 0, $7844 = 0, $7845 = 0.0, $7846 = 0, $7847 = 0, $7848 = 0, $7849 = 0, $785 = 0, $7850 = 0;
 var $7851 = 0, $7852 = 0, $7853 = 0, $7854 = 0, $7855 = 0, $7856 = 0, $7857 = 0, $7858 = 0, $7859 = 0, $786 = 0.0, $7860 = 0, $7861 = 0, $7862 = 0, $7863 = 0, $7864 = 0, $7865 = 0, $7866 = 0, $7867 = 0, $7868 = 0, $7869 = 0;
 var $787 = 0, $7870 = 0, $7871 = 0, $7872 = 0, $7873 = 0, $7874 = 0, $7875 = 0.0, $7876 = 0, $7877 = 0, $7878 = 0, $7879 = 0, $788 = 0.0, $7880 = 0, $7881 = 0, $7882 = 0, $7883 = 0, $7884 = 0, $7885 = 0, $7886 = 0, $7887 = 0;
 var $7888 = 0, $7889 = 0, $789 = 0.0, $7890 = 0, $7891 = 0, $7892 = 0, $7893 = 0, $7894 = 0, $7895 = 0, $7896 = 0, $7897 = 0, $7898 = 0, $7899 = 0, $79 = 0.0, $790 = 0.0, $7900 = 0, $7901 = 0, $7902 = 0, $7903 = 0, $7904 = 0;
 var $7905 = 0, $7906 = 0, $7907 = 0, $7908 = 0, $7909 = 0, $791 = 0.0, $7910 = 0, $7911 = 0, $7912 = 0, $7913 = 0, $7914 = 0, $7915 = 0, $7916 = 0, $7917 = 0, $7918 = 0, $7919 = 0, $792 = 0.0, $7920 = 0, $7921 = 0, $7922 = 0.0;
 var $7923 = 0, $7924 = 0, $7925 = 0, $7926 = 0.0, $7927 = 0, $7928 = 0.0, $7929 = 0, $793 = 0.0, $7930 = 0, $7931 = 0, $7932 = 0.0, $7933 = 0.0, $7934 = 0.0, $7935 = 0, $7936 = 0.0, $7937 = 0.0, $7938 = 0, $7939 = 0.0, $794 = 0, $7940 = 0.0;
 var $7941 = 0, $7942 = 0.0, $7943 = 0.0, $7944 = 0, $7945 = 0.0, $7946 = 0.0, $7947 = 0, $7948 = 0.0, $7949 = 0.0, $795 = 0, $7950 = 0.0, $7951 = 0.0, $7952 = 0.0, $7953 = 0, $7954 = 0, $7955 = 0.0, $7956 = 0.0, $7957 = 0.0, $7958 = 0.0, $7959 = 0.0;
 var $796 = 0, $7960 = 0, $7961 = 0.0, $7962 = 0.0, $7963 = 0.0, $7964 = 0, $7965 = 0.0, $7966 = 0.0, $7967 = 0, $7968 = 0.0, $7969 = 0.0, $797 = 0.0, $7970 = 0, $7971 = 0.0, $7972 = 0.0, $7973 = 0, $7974 = 0.0, $7975 = 0.0, $7976 = 0, $7977 = 0.0;
 var $7978 = 0.0, $7979 = 0.0, $798 = 0.0, $7980 = 0.0, $7981 = 0.0, $7982 = 0, $7983 = 0.0, $7984 = 0.0, $7985 = 0.0, $7986 = 0.0, $7987 = 0.0, $7988 = 0.0, $7989 = 0.0, $799 = 0, $7990 = 0.0, $7991 = 0, $7992 = 0.0, $7993 = 0.0, $7994 = 0.0, $7995 = 0;
 var $7996 = 0.0, $7997 = 0.0, $7998 = 0, $7999 = 0.0, $8 = 0.0, $80 = 0, $800 = 0.0, $8000 = 0.0, $8001 = 0, $8002 = 0.0, $8003 = 0.0, $8004 = 0, $8005 = 0.0, $8006 = 0.0, $8007 = 0, $8008 = 0.0, $8009 = 0.0, $801 = 0.0, $8010 = 0.0, $8011 = 0.0;
 var $8012 = 0, $8013 = 0.0, $8014 = 0.0, $8015 = 0.0, $8016 = 0.0, $8017 = 0.0, $8018 = 0.0, $8019 = 0.0, $802 = 0.0, $8020 = 0.0, $8021 = 0.0, $8022 = 0.0, $8023 = 0, $8024 = 0.0, $8025 = 0.0, $8026 = 0, $8027 = 0.0, $8028 = 0.0, $8029 = 0, $803 = 0.0;
 var $8030 = 0, $8031 = 0, $8032 = 0, $8033 = 0, $8034 = 0, $8035 = 0, $8036 = 0, $8037 = 0, $8038 = 0, $8039 = 0, $804 = 0, $8040 = 0, $8041 = 0, $8042 = 0, $8043 = 0, $8044 = 0, $8045 = 0, $8046 = 0, $8047 = 0, $8048 = 0;
 var $8049 = 0, $805 = 0.0, $8050 = 0.0, $8051 = 0, $8052 = 0, $8053 = 0.0, $8054 = 0.0, $8055 = 0.0, $8056 = 0, $8057 = 0, $8058 = 0, $8059 = 0.0, $806 = 0.0, $8060 = 0, $8061 = 0, $8062 = 0.0, $8063 = 0.0, $8064 = 0.0, $8065 = 0, $8066 = 0;
 var $8067 = 0, $8068 = 0, $8069 = 0, $807 = 0, $8070 = 0, $8071 = 0, $8072 = 0, $8073 = 0, $8074 = 0, $8075 = 0, $8076 = 0.0, $8077 = 0, $8078 = 0, $8079 = 0, $808 = 0.0, $8080 = 0.0, $8081 = 0, $8082 = 0, $8083 = 0, $8084 = 0.0;
 var $8085 = 0, $8086 = 0, $8087 = 0.0, $8088 = 0.0, $8089 = 0, $809 = 0.0, $8090 = 0.0, $8091 = 0.0, $8092 = 0, $8093 = 0.0, $8094 = 0, $8095 = 0.0, $8096 = 0.0, $8097 = 0, $8098 = 0.0, $8099 = 0, $81 = 0.0, $810 = 0.0, $8100 = 0.0, $8101 = 0.0;
 var $8102 = 0, $8103 = 0.0, $8104 = 0, $8105 = 0.0, $8106 = 0.0, $8107 = 0, $8108 = 0.0, $8109 = 0.0, $811 = 0.0, $8110 = 0, $8111 = 0.0, $8112 = 0.0, $8113 = 0.0, $8114 = 0.0, $8115 = 0, $8116 = 0.0, $8117 = 0.0, $8118 = 0.0, $8119 = 0.0, $812 = 0;
 var $8120 = 0.0, $8121 = 0, $8122 = 0.0, $8123 = 0, $8124 = 0.0, $8125 = 0.0, $8126 = 0.0, $8127 = 0.0, $8128 = 0.0, $8129 = 0.0, $813 = 0, $8130 = 0.0, $8131 = 0.0, $8132 = 0, $8133 = 0.0, $8134 = 0.0, $8135 = 0, $8136 = 0, $8137 = 0.0, $8138 = 0;
 var $8139 = 0.0, $814 = 0.0, $8140 = 0.0, $8141 = 0, $8142 = 0.0, $8143 = 0, $8144 = 0.0, $8145 = 0.0, $8146 = 0.0, $8147 = 0, $8148 = 0.0, $8149 = 0.0, $815 = 0.0, $8150 = 0.0, $8151 = 0.0, $8152 = 0, $8153 = 0.0, $8154 = 0.0, $8155 = 0, $8156 = 0.0;
 var $8157 = 0.0, $8158 = 0.0, $8159 = 0.0, $816 = 0.0, $8160 = 0.0, $8161 = 0, $8162 = 0.0, $8163 = 0, $8164 = 0.0, $8165 = 0.0, $8166 = 0.0, $8167 = 0, $8168 = 0.0, $8169 = 0.0, $817 = 0.0, $8170 = 0, $8171 = 0.0, $8172 = 0.0, $8173 = 0.0, $8174 = 0.0;
 var $8175 = 0.0, $8176 = 0, $8177 = 0.0, $8178 = 0, $8179 = 0.0, $818 = 0, $8180 = 0.0, $8181 = 0.0, $8182 = 0, $8183 = 0.0, $8184 = 0.0, $8185 = 0.0, $8186 = 0, $8187 = 0.0, $8188 = 0.0, $8189 = 0.0, $819 = 0.0, $8190 = 0.0, $8191 = 0, $8192 = 0.0;
 var $8193 = 0.0, $8194 = 0, $8195 = 0, $8196 = 0.0, $8197 = 0, $8198 = 0.0, $8199 = 0.0, $82 = 0.0, $820 = 0, $8200 = 0, $8201 = 0.0, $8202 = 0.0, $8203 = 0.0, $8204 = 0.0, $8205 = 0.0, $8206 = 0.0, $8207 = 0.0, $8208 = 0, $8209 = 0.0, $821 = 0.0;
 var $8210 = 0.0, $8211 = 0.0, $8212 = 0.0, $8213 = 0.0, $8214 = 0.0, $8215 = 0, $8216 = 0.0, $8217 = 0.0, $8218 = 0, $8219 = 0.0, $822 = 0.0, $8220 = 0.0, $8221 = 0.0, $8222 = 0, $8223 = 0.0, $8224 = 0.0, $8225 = 0.0, $8226 = 0.0, $8227 = 0.0, $8228 = 0;
 var $8229 = 0.0, $823 = 0.0, $8230 = 0.0, $8231 = 0, $8232 = 0, $8233 = 0.0, $8234 = 0.0, $8235 = 0.0, $8236 = 0.0, $8237 = 0.0, $8238 = 0.0, $8239 = 0.0, $824 = 0.0, $8240 = 0.0, $8241 = 0.0, $8242 = 0, $8243 = 0.0, $8244 = 0.0, $8245 = 0, $8246 = 0;
 var $8247 = 0.0, $8248 = 0.0, $8249 = 0.0, $825 = 0, $8250 = 0.0, $8251 = 0.0, $8252 = 0.0, $8253 = 0, $8254 = 0.0, $8255 = 0.0, $8256 = 0.0, $8257 = 0.0, $8258 = 0, $8259 = 0.0, $826 = 0, $8260 = 0.0, $8261 = 0.0, $8262 = 0.0, $8263 = 0, $8264 = 0;
 var $8265 = 0.0, $8266 = 0.0, $8267 = 0.0, $8268 = 0.0, $8269 = 0.0, $827 = 0.0, $8270 = 0.0, $8271 = 0.0, $8272 = 0, $8273 = 0.0, $8274 = 0.0, $8275 = 0.0, $8276 = 0.0, $8277 = 0, $8278 = 0.0, $8279 = 0.0, $828 = 0.0, $8280 = 0.0, $8281 = 0.0, $8282 = 0;
 var $8283 = 0.0, $8284 = 0.0, $8285 = 0, $8286 = 0, $8287 = 0.0, $8288 = 0.0, $8289 = 0, $829 = 0.0, $8290 = 0, $8291 = 0.0, $8292 = 0.0, $8293 = 0, $8294 = 0, $8295 = 0.0, $8296 = 0.0, $8297 = 0, $8298 = 0, $8299 = 0.0, $83 = 0.0, $830 = 0.0;
 var $8300 = 0.0, $8301 = 0, $8302 = 0, $8303 = 0.0, $8304 = 0.0, $8305 = 0, $8306 = 0, $8307 = 0.0, $8308 = 0.0, $8309 = 0, $831 = 0, $8310 = 0, $8311 = 0.0, $8312 = 0.0, $8313 = 0, $8314 = 0, $8315 = 0.0, $8316 = 0.0, $8317 = 0, $8318 = 0;
 var $8319 = 0.0, $832 = 0.0, $8320 = 0.0, $8321 = 0, $8322 = 0, $8323 = 0.0, $8324 = 0.0, $8325 = 0, $8326 = 0, $8327 = 0.0, $8328 = 0.0, $8329 = 0, $833 = 0.0, $8330 = 0, $8331 = 0, $8332 = 0, $8333 = 0, $8334 = 0.0, $8335 = 0, $8336 = 0;
 var $8337 = 0, $8338 = 0, $8339 = 0, $834 = 0, $8340 = 0, $8341 = 0, $8342 = 0, $8343 = 0, $8344 = 0, $8345 = 0, $8346 = 0, $8347 = 0, $8348 = 0, $8349 = 0, $835 = 0.0, $8350 = 0, $8351 = 0, $8352 = 0, $8353 = 0, $8354 = 0;
 var $8355 = 0, $8356 = 0, $8357 = 0, $8358 = 0, $8359 = 0, $836 = 0.0, $8360 = 0, $8361 = 0, $8362 = 0, $8363 = 0, $8364 = 0.0, $8365 = 0, $8366 = 0, $8367 = 0, $8368 = 0, $8369 = 0, $837 = 0.0, $8370 = 0, $8371 = 0, $8372 = 0;
 var $8373 = 0, $8374 = 0, $8375 = 0, $8376 = 0, $8377 = 0, $8378 = 0, $8379 = 0, $838 = 0.0, $8380 = 0, $8381 = 0, $8382 = 0, $8383 = 0, $8384 = 0, $8385 = 0, $8386 = 0, $8387 = 0, $8388 = 0, $8389 = 0, $839 = 0, $8390 = 0;
 var $8391 = 0, $8392 = 0, $8393 = 0, $8394 = 0.0, $8395 = 0, $8396 = 0, $8397 = 0, $8398 = 0, $8399 = 0, $84 = 0.0, $840 = 0.0, $8400 = 0, $8401 = 0, $8402 = 0, $8403 = 0, $8404 = 0, $8405 = 0, $8406 = 0, $8407 = 0, $8408 = 0;
 var $8409 = 0, $841 = 0.0, $8410 = 0, $8411 = 0, $8412 = 0, $8413 = 0, $8414 = 0, $8415 = 0, $8416 = 0, $8417 = 0, $8418 = 0, $8419 = 0, $842 = 0.0, $8420 = 0, $8421 = 0, $8422 = 0, $8423 = 0, $8424 = 0.0, $8425 = 0, $8426 = 0;
 var $8427 = 0, $8428 = 0, $8429 = 0, $843 = 0.0, $8430 = 0, $8431 = 0, $8432 = 0, $8433 = 0, $8434 = 0, $8435 = 0, $8436 = 0, $8437 = 0, $8438 = 0, $8439 = 0, $844 = 0, $8440 = 0, $8441 = 0, $8442 = 0, $8443 = 0, $8444 = 0;
 var $8445 = 0, $8446 = 0, $8447 = 0, $8448 = 0, $8449 = 0, $845 = 0.0, $8450 = 0, $8451 = 0, $8452 = 0, $8453 = 0, $8454 = 0.0, $8455 = 0, $8456 = 0, $8457 = 0, $8458 = 0, $8459 = 0, $846 = 0, $8460 = 0, $8461 = 0, $8462 = 0;
 var $8463 = 0, $8464 = 0, $8465 = 0, $8466 = 0, $8467 = 0, $8468 = 0, $8469 = 0, $847 = 0.0, $8470 = 0, $8471 = 0, $8472 = 0, $8473 = 0, $8474 = 0, $8475 = 0, $8476 = 0, $8477 = 0, $8478 = 0, $8479 = 0, $848 = 0.0, $8480 = 0;
 var $8481 = 0, $8482 = 0, $8483 = 0, $8484 = 0.0, $8485 = 0, $8486 = 0, $8487 = 0, $8488 = 0, $8489 = 0, $849 = 0.0, $8490 = 0, $8491 = 0, $8492 = 0, $8493 = 0, $8494 = 0, $8495 = 0, $8496 = 0, $8497 = 0, $8498 = 0, $8499 = 0;
 var $85 = 0.0, $850 = 0.0, $8500 = 0, $8501 = 0, $8502 = 0, $8503 = 0, $8504 = 0, $8505 = 0, $8506 = 0, $8507 = 0, $8508 = 0, $8509 = 0, $851 = 0.0, $8510 = 0, $8511 = 0, $8512 = 0, $8513 = 0, $8514 = 0, $8515 = 0, $8516 = 0;
 var $8517 = 0, $8518 = 0, $8519 = 0, $852 = 0.0, $8520 = 0, $8521 = 0, $8522 = 0, $8523 = 0, $8524 = 0, $8525 = 0, $8526 = 0, $8527 = 0, $8528 = 0, $8529 = 0, $853 = 0.0, $8530 = 0, $8531 = 0.0, $8532 = 0.0, $8533 = 0, $8534 = 0;
 var $8535 = 0, $8536 = 0, $8537 = 0.0, $8538 = 0, $8539 = 0.0, $854 = 0, $8540 = 0.0, $8541 = 0, $8542 = 0, $8543 = 0, $8544 = 0.0, $8545 = 0.0, $8546 = 0.0, $8547 = 0.0, $8548 = 0.0, $8549 = 0.0, $855 = 0, $8550 = 0.0, $8551 = 0.0, $8552 = 0.0;
 var $8553 = 0.0, $8554 = 0, $8555 = 0.0, $8556 = 0.0, $8557 = 0, $8558 = 0.0, $8559 = 0.0, $856 = 0.0, $8560 = 0, $8561 = 0, $8562 = 0, $8563 = 0, $8564 = 0, $8565 = 0, $8566 = 0, $8567 = 0, $8568 = 0, $8569 = 0, $857 = 0.0, $8570 = 0;
 var $8571 = 0, $8572 = 0, $8573 = 0, $8574 = 0, $8575 = 0, $8576 = 0, $8577 = 0, $8578 = 0, $8579 = 0, $858 = 0.0, $8580 = 0, $8581 = 0.0, $8582 = 0, $8583 = 0, $8584 = 0.0, $8585 = 0.0, $8586 = 0.0, $8587 = 0, $8588 = 0, $8589 = 0;
 var $859 = 0.0, $8590 = 0.0, $8591 = 0, $8592 = 0, $8593 = 0.0, $8594 = 0.0, $8595 = 0.0, $8596 = 0, $8597 = 0, $8598 = 0, $8599 = 0, $86 = 0.0, $860 = 0, $8600 = 0, $8601 = 0, $8602 = 0, $8603 = 0, $8604 = 0, $8605 = 0, $8606 = 0;
 var $8607 = 0.0, $8608 = 0, $8609 = 0, $861 = 0.0, $8610 = 0, $8611 = 0.0, $8612 = 0, $8613 = 0, $8614 = 0, $8615 = 0.0, $8616 = 0, $8617 = 0, $8618 = 0.0, $8619 = 0.0, $862 = 0.0, $8620 = 0, $8621 = 0.0, $8622 = 0.0, $8623 = 0, $8624 = 0.0;
 var $8625 = 0, $8626 = 0.0, $8627 = 0.0, $8628 = 0, $8629 = 0.0, $863 = 0, $8630 = 0, $8631 = 0.0, $8632 = 0.0, $8633 = 0, $8634 = 0.0, $8635 = 0, $8636 = 0.0, $8637 = 0.0, $8638 = 0, $8639 = 0.0, $864 = 0.0, $8640 = 0.0, $8641 = 0, $8642 = 0.0;
 var $8643 = 0.0, $8644 = 0.0, $8645 = 0.0, $8646 = 0, $8647 = 0.0, $8648 = 0.0, $8649 = 0.0, $865 = 0.0, $8650 = 0.0, $8651 = 0.0, $8652 = 0, $8653 = 0.0, $8654 = 0.0, $8655 = 0.0, $8656 = 0, $8657 = 0.0, $8658 = 0.0, $8659 = 0.0, $866 = 0.0, $8660 = 0.0;
 var $8661 = 0.0, $8662 = 0.0, $8663 = 0, $8664 = 0.0, $8665 = 0.0, $8666 = 0, $8667 = 0, $8668 = 0.0, $8669 = 0, $867 = 0, $8670 = 0.0, $8671 = 0.0, $8672 = 0, $8673 = 0.0, $8674 = 0.0, $8675 = 0.0, $8676 = 0.0, $8677 = 0, $8678 = 0.0, $8679 = 0;
 var $868 = 0.0, $8680 = 0.0, $8681 = 0.0, $8682 = 0.0, $8683 = 0, $8684 = 0, $8685 = 0.0, $8686 = 0, $8687 = 0.0, $8688 = 0.0, $8689 = 0, $869 = 0.0, $8690 = 0.0, $8691 = 0.0, $8692 = 0.0, $8693 = 0.0, $8694 = 0.0, $8695 = 0.0, $8696 = 0.0, $8697 = 0.0;
 var $8698 = 0, $8699 = 0, $87 = 0.0, $870 = 0.0, $8700 = 0.0, $8701 = 0.0, $8702 = 0.0, $8703 = 0.0, $8704 = 0, $8705 = 0.0, $8706 = 0, $8707 = 0.0, $8708 = 0.0, $8709 = 0.0, $871 = 0.0, $8710 = 0.0, $8711 = 0.0, $8712 = 0.0, $8713 = 0, $8714 = 0.0;
 var $8715 = 0.0, $8716 = 0.0, $8717 = 0, $8718 = 0.0, $8719 = 0.0, $872 = 0, $8720 = 0, $8721 = 0.0, $8722 = 0.0, $8723 = 0.0, $8724 = 0.0, $8725 = 0, $8726 = 0, $8727 = 0.0, $8728 = 0, $8729 = 0.0, $873 = 0.0, $8730 = 0.0, $8731 = 0, $8732 = 0.0;
 var $8733 = 0.0, $8734 = 0.0, $8735 = 0.0, $8736 = 0.0, $8737 = 0.0, $8738 = 0.0, $8739 = 0, $874 = 0, $8740 = 0.0, $8741 = 0.0, $8742 = 0.0, $8743 = 0.0, $8744 = 0.0, $8745 = 0.0, $8746 = 0, $8747 = 0.0, $8748 = 0.0, $8749 = 0, $875 = 0.0, $8750 = 0;
 var $8751 = 0.0, $8752 = 0.0, $8753 = 0.0, $8754 = 0.0, $8755 = 0.0, $8756 = 0.0, $8757 = 0.0, $8758 = 0.0, $8759 = 0, $876 = 0.0, $8760 = 0.0, $8761 = 0.0, $8762 = 0, $8763 = 0, $8764 = 0.0, $8765 = 0.0, $8766 = 0.0, $8767 = 0.0, $8768 = 0, $8769 = 0.0;
 var $877 = 0.0, $8770 = 0.0, $8771 = 0.0, $8772 = 0.0, $8773 = 0.0, $8774 = 0.0, $8775 = 0.0, $8776 = 0, $8777 = 0, $8778 = 0.0, $8779 = 0.0, $878 = 0.0, $8780 = 0.0, $8781 = 0, $8782 = 0.0, $8783 = 0.0, $8784 = 0.0, $8785 = 0.0, $8786 = 0.0, $8787 = 0.0;
 var $8788 = 0.0, $8789 = 0, $879 = 0.0, $8790 = 0.0, $8791 = 0.0, $8792 = 0.0, $8793 = 0.0, $8794 = 0, $8795 = 0, $8796 = 0.0, $8797 = 0.0, $8798 = 0.0, $8799 = 0, $88 = 0.0, $880 = 0.0, $8800 = 0.0, $8801 = 0.0, $8802 = 0.0, $8803 = 0.0, $8804 = 0;
 var $8805 = 0.0, $8806 = 0.0, $8807 = 0.0, $8808 = 0.0, $8809 = 0.0, $881 = 0.0, $8810 = 0.0, $8811 = 0.0, $8812 = 0.0, $8813 = 0, $8814 = 0.0, $8815 = 0.0, $8816 = 0, $8817 = 0, $8818 = 0.0, $8819 = 0.0, $882 = 0.0, $8820 = 0, $8821 = 0, $8822 = 0.0;
 var $8823 = 0.0, $8824 = 0, $8825 = 0, $8826 = 0.0, $8827 = 0.0, $8828 = 0, $8829 = 0, $883 = 0.0, $8830 = 0.0, $8831 = 0.0, $8832 = 0, $8833 = 0, $8834 = 0.0, $8835 = 0.0, $8836 = 0, $8837 = 0, $8838 = 0.0, $8839 = 0.0, $884 = 0, $8840 = 0;
 var $8841 = 0, $8842 = 0.0, $8843 = 0.0, $8844 = 0, $8845 = 0, $8846 = 0.0, $8847 = 0.0, $8848 = 0, $8849 = 0, $885 = 0.0, $8850 = 0.0, $8851 = 0.0, $8852 = 0, $8853 = 0, $8854 = 0.0, $8855 = 0.0, $8856 = 0, $8857 = 0, $8858 = 0.0, $8859 = 0.0;
 var $886 = 0.0, $8860 = 0, $8861 = 0, $8862 = 0, $8863 = 0, $8864 = 0, $8865 = 0.0, $8866 = 0, $8867 = 0, $8868 = 0, $8869 = 0, $887 = 0, $8870 = 0, $8871 = 0, $8872 = 0, $8873 = 0, $8874 = 0, $8875 = 0, $8876 = 0, $8877 = 0;
 var $8878 = 0, $8879 = 0, $888 = 0.0, $8880 = 0, $8881 = 0, $8882 = 0, $8883 = 0, $8884 = 0, $8885 = 0, $8886 = 0, $8887 = 0, $8888 = 0, $8889 = 0, $889 = 0.0, $8890 = 0, $8891 = 0, $8892 = 0, $8893 = 0, $8894 = 0, $8895 = 0.0;
 var $8896 = 0, $8897 = 0, $8898 = 0, $8899 = 0, $89 = 0, $890 = 0, $8900 = 0, $8901 = 0, $8902 = 0, $8903 = 0, $8904 = 0, $8905 = 0, $8906 = 0, $8907 = 0, $8908 = 0, $8909 = 0, $891 = 0, $8910 = 0, $8911 = 0, $8912 = 0;
 var $8913 = 0, $8914 = 0, $8915 = 0, $8916 = 0, $8917 = 0, $8918 = 0, $8919 = 0, $892 = 0, $8920 = 0, $8921 = 0, $8922 = 0, $8923 = 0, $8924 = 0, $8925 = 0.0, $8926 = 0, $8927 = 0, $8928 = 0, $8929 = 0, $893 = 0, $8930 = 0;
 var $8931 = 0, $8932 = 0, $8933 = 0, $8934 = 0, $8935 = 0, $8936 = 0, $8937 = 0, $8938 = 0, $8939 = 0, $894 = 0, $8940 = 0, $8941 = 0, $8942 = 0, $8943 = 0, $8944 = 0, $8945 = 0, $8946 = 0, $8947 = 0, $8948 = 0, $8949 = 0;
 var $895 = 0, $8950 = 0, $8951 = 0, $8952 = 0, $8953 = 0, $8954 = 0, $8955 = 0.0, $8956 = 0, $8957 = 0, $8958 = 0, $8959 = 0, $896 = 0, $8960 = 0, $8961 = 0, $8962 = 0, $8963 = 0, $8964 = 0, $8965 = 0, $8966 = 0, $8967 = 0;
 var $8968 = 0, $8969 = 0, $897 = 0, $8970 = 0, $8971 = 0, $8972 = 0, $8973 = 0, $8974 = 0, $8975 = 0, $8976 = 0, $8977 = 0, $8978 = 0, $8979 = 0, $898 = 0, $8980 = 0, $8981 = 0, $8982 = 0, $8983 = 0, $8984 = 0, $8985 = 0.0;
 var $8986 = 0, $8987 = 0, $8988 = 0, $8989 = 0, $899 = 0, $8990 = 0, $8991 = 0, $8992 = 0, $8993 = 0, $8994 = 0, $8995 = 0, $8996 = 0, $8997 = 0, $8998 = 0, $8999 = 0, $9 = 0, $90 = 0, $900 = 0, $9000 = 0, $9001 = 0;
 var $9002 = 0, $9003 = 0, $9004 = 0, $9005 = 0, $9006 = 0, $9007 = 0, $9008 = 0, $9009 = 0, $901 = 0, $9010 = 0, $9011 = 0, $9012 = 0, $9013 = 0, $9014 = 0, $9015 = 0.0, $9016 = 0, $9017 = 0, $9018 = 0, $9019 = 0, $902 = 0;
 var $9020 = 0, $9021 = 0, $9022 = 0, $9023 = 0, $9024 = 0, $9025 = 0, $9026 = 0, $9027 = 0, $9028 = 0, $9029 = 0, $903 = 0, $9030 = 0, $9031 = 0, $9032 = 0, $9033 = 0, $9034 = 0, $9035 = 0, $9036 = 0, $9037 = 0, $9038 = 0;
 var $9039 = 0, $904 = 0, $9040 = 0, $9041 = 0, $9042 = 0, $9043 = 0, $9044 = 0, $9045 = 0, $9046 = 0, $9047 = 0, $9048 = 0, $9049 = 0, $905 = 0, $9050 = 0, $9051 = 0, $9052 = 0, $9053 = 0, $9054 = 0, $9055 = 0, $9056 = 0;
 var $9057 = 0, $9058 = 0, $9059 = 0, $906 = 0, $9060 = 0, $9061 = 0, $9062 = 0, $9063 = 0, $9064 = 0.0, $9065 = 0.0, $9066 = 0, $9067 = 0, $9068 = 0, $9069 = 0, $907 = 0, $9070 = 0.0, $9071 = 0, $9072 = 0.0, $9073 = 0, $9074 = 0;
 var $9075 = 0, $9076 = 0.0, $9077 = 0.0, $9078 = 0.0, $9079 = 0.0, $908 = 0, $9080 = 0.0, $9081 = 0.0, $9082 = 0.0, $9083 = 0.0, $9084 = 0.0, $9085 = 0.0, $9086 = 0, $9087 = 0.0, $9088 = 0.0, $9089 = 0, $909 = 0, $9090 = 0.0, $9091 = 0.0, $9092 = 0;
 var $9093 = 0, $9094 = 0, $9095 = 0, $9096 = 0, $9097 = 0, $9098 = 0, $9099 = 0, $91 = 0.0, $910 = 0, $9100 = 0, $9101 = 0, $9102 = 0, $9103 = 0, $9104 = 0, $9105 = 0, $9106 = 0, $9107 = 0, $9108 = 0, $9109 = 0, $911 = 0.0;
 var $9110 = 0, $9111 = 0, $9112 = 0, $9113 = 0.0, $9114 = 0, $9115 = 0, $9116 = 0.0, $9117 = 0.0, $9118 = 0.0, $9119 = 0, $912 = 0, $9120 = 0, $9121 = 0, $9122 = 0.0, $9123 = 0, $9124 = 0, $9125 = 0.0, $9126 = 0.0, $9127 = 0.0, $9128 = 0;
 var $9129 = 0, $913 = 0, $9130 = 0, $9131 = 0, $9132 = 0, $9133 = 0, $9134 = 0, $9135 = 0, $9136 = 0, $9137 = 0, $9138 = 0, $9139 = 0.0, $914 = 0.0, $9140 = 0, $9141 = 0, $9142 = 0, $9143 = 0.0, $9144 = 0, $9145 = 0, $9146 = 0;
 var $9147 = 0.0, $9148 = 0, $9149 = 0, $915 = 0.0, $9150 = 0.0, $9151 = 0.0, $9152 = 0, $9153 = 0.0, $9154 = 0.0, $9155 = 0, $9156 = 0.0, $9157 = 0.0, $9158 = 0, $9159 = 0.0, $916 = 0.0, $9160 = 0.0, $9161 = 0, $9162 = 0.0, $9163 = 0.0, $9164 = 0.0;
 var $9165 = 0, $9166 = 0.0, $9167 = 0.0, $9168 = 0.0, $9169 = 0.0, $917 = 0, $9170 = 0.0, $9171 = 0.0, $9172 = 0.0, $9173 = 0, $9174 = 0.0, $9175 = 0.0, $9176 = 0, $9177 = 0.0, $9178 = 0.0, $9179 = 0.0, $918 = 0, $9180 = 0.0, $9181 = 0.0, $9182 = 0.0;
 var $9183 = 0, $9184 = 0, $9185 = 0.0, $9186 = 0.0, $9187 = 0.0, $9188 = 0.0, $9189 = 0, $919 = 0, $9190 = 0.0, $9191 = 0.0, $9192 = 0.0, $9193 = 0.0, $9194 = 0, $9195 = 0.0, $9196 = 0.0, $9197 = 0.0, $9198 = 0.0, $9199 = 0.0, $92 = 0.0, $920 = 0.0;
 var $9200 = 0.0, $9201 = 0, $9202 = 0, $9203 = 0.0, $9204 = 0.0, $9205 = 0.0, $9206 = 0, $9207 = 0.0, $9208 = 0.0, $9209 = 0.0, $921 = 0, $9210 = 0.0, $9211 = 0, $9212 = 0.0, $9213 = 0.0, $9214 = 0.0, $9215 = 0.0, $9216 = 0.0, $9217 = 0, $9218 = 0;
 var $9219 = 0.0, $922 = 0, $9220 = 0.0, $9221 = 0.0, $9222 = 0.0, $9223 = 0.0, $9224 = 0.0, $9225 = 0, $9226 = 0.0, $9227 = 0.0, $9228 = 0.0, $9229 = 0.0, $923 = 0.0, $9230 = 0.0, $9231 = 0.0, $9232 = 0.0, $9233 = 0, $9234 = 0.0, $9235 = 0.0, $9236 = 0.0;
 var $9237 = 0.0, $9238 = 0.0, $9239 = 0, $924 = 0.0, $9240 = 0, $9241 = 0.0, $9242 = 0.0, $9243 = 0.0, $9244 = 0.0, $9245 = 0, $9246 = 0.0, $9247 = 0.0, $9248 = 0.0, $9249 = 0.0, $925 = 0.0, $9250 = 0.0, $9251 = 0.0, $9252 = 0.0, $9253 = 0, $9254 = 0.0;
 var $9255 = 0.0, $9256 = 0.0, $9257 = 0.0, $9258 = 0.0, $9259 = 0.0, $926 = 0, $9260 = 0.0, $9261 = 0, $9262 = 0.0, $9263 = 0.0, $9264 = 0.0, $9265 = 0.0, $9266 = 0.0, $9267 = 0.0, $9268 = 0.0, $9269 = 0.0, $927 = 0, $9270 = 0.0, $9271 = 0.0, $9272 = 0;
 var $9273 = 0.0, $9274 = 0.0, $9275 = 0.0, $9276 = 0.0, $9277 = 0.0, $9278 = 0, $9279 = 0.0, $928 = 0, $9280 = 0.0, $9281 = 0, $9282 = 0, $9283 = 0.0, $9284 = 0.0, $9285 = 0, $9286 = 0, $9287 = 0.0, $9288 = 0.0, $9289 = 0, $929 = 0, $9290 = 0;
 var $9291 = 0.0, $9292 = 0.0, $9293 = 0, $9294 = 0, $9295 = 0.0, $9296 = 0.0, $9297 = 0, $9298 = 0, $9299 = 0.0, $93 = 0.0, $930 = 0, $9300 = 0.0, $9301 = 0, $9302 = 0, $9303 = 0.0, $9304 = 0.0, $9305 = 0, $9306 = 0, $9307 = 0.0, $9308 = 0.0;
 var $9309 = 0, $931 = 0, $9310 = 0, $9311 = 0.0, $9312 = 0, $9313 = 0.0, $9314 = 0.0, $9315 = 0, $9316 = 0.0, $9317 = 0, $9318 = 0.0, $9319 = 0.0, $932 = 0, $9320 = 0, $9321 = 0.0, $9322 = 0.0, $9323 = 0, $9324 = 0.0, $9325 = 0.0, $9326 = 0;
 var $9327 = 0.0, $9328 = 0, $9329 = 0.0, $933 = 0, $9330 = 0.0, $9331 = 0, $9332 = 0.0, $9333 = 0, $9334 = 0.0, $9335 = 0.0, $9336 = 0, $9337 = 0.0, $9338 = 0, $9339 = 0.0, $934 = 0, $9340 = 0.0, $9341 = 0.0, $9342 = 0, $9343 = 0.0, $9344 = 0;
 var $9345 = 0.0, $9346 = 0.0, $9347 = 0.0, $9348 = 0.0, $9349 = 0, $935 = 0, $9350 = 0.0, $9351 = 0.0, $9352 = 0.0, $9353 = 0, $9354 = 0.0, $9355 = 0.0, $9356 = 0.0, $9357 = 0, $9358 = 0.0, $9359 = 0.0, $936 = 0, $9360 = 0.0, $9361 = 0.0, $9362 = 0;
 var $9363 = 0.0, $9364 = 0.0, $9365 = 0.0, $9366 = 0, $9367 = 0.0, $9368 = 0.0, $9369 = 0.0, $937 = 0.0, $9370 = 0.0, $9371 = 0.0, $9372 = 0.0, $9373 = 0.0, $9374 = 0.0, $9375 = 0, $9376 = 0.0, $9377 = 0.0, $9378 = 0.0, $9379 = 0, $938 = 0, $9380 = 0.0;
 var $9381 = 0.0, $9382 = 0.0, $9383 = 0.0, $9384 = 0.0, $9385 = 0.0, $9386 = 0.0, $9387 = 0.0, $9388 = 0, $9389 = 0, $939 = 0, $9390 = 0.0, $9391 = 0.0, $9392 = 0.0, $9393 = 0.0, $9394 = 0.0, $9395 = 0.0, $9396 = 0.0, $9397 = 0, $9398 = 0.0, $9399 = 0.0;
 var $94 = 0.0, $940 = 0, $9400 = 0.0, $9401 = 0.0, $9402 = 0, $9403 = 0, $9404 = 0.0, $9405 = 0.0, $9406 = 0.0, $9407 = 0.0, $9408 = 0, $9409 = 0.0, $941 = 0.0, $9410 = 0, $9411 = 0.0, $9412 = 0.0, $9413 = 0.0, $9414 = 0, $9415 = 0, $9416 = 0.0;
 var $9417 = 0.0, $9418 = 0.0, $9419 = 0.0, $942 = 0, $9420 = 0, $9421 = 0.0, $9422 = 0, $9423 = 0.0, $9424 = 0.0, $9425 = 0.0, $9426 = 0, $9427 = 0, $9428 = 0.0, $9429 = 0.0, $943 = 0, $9430 = 0.0, $9431 = 0.0, $9432 = 0, $9433 = 0.0, $9434 = 0;
 var $9435 = 0.0, $9436 = 0.0, $9437 = 0.0, $9438 = 0, $9439 = 0, $944 = 0, $9440 = 0.0, $9441 = 0.0, $9442 = 0.0, $9443 = 0, $9444 = 0.0, $9445 = 0.0, $9446 = 0.0, $9447 = 0.0, $9448 = 0.0, $9449 = 0.0, $945 = 0.0, $9450 = 0.0, $9451 = 0.0, $9452 = 0;
 var $9453 = 0.0, $9454 = 0.0, $9455 = 0.0, $9456 = 0, $9457 = 0.0, $9458 = 0.0, $9459 = 0.0, $946 = 0, $9460 = 0.0, $9461 = 0.0, $9462 = 0.0, $9463 = 0.0, $9464 = 0.0, $9465 = 0, $9466 = 0, $9467 = 0.0, $9468 = 0.0, $9469 = 0.0, $947 = 0, $9470 = 0.0;
 var $9471 = 0.0, $9472 = 0.0, $9473 = 0.0, $9474 = 0, $9475 = 0.0, $9476 = 0.0, $9477 = 0.0, $9478 = 0.0, $9479 = 0, $948 = 0.0, $9480 = 0, $9481 = 0.0, $9482 = 0, $9483 = 0.0, $9484 = 0.0, $9485 = 0, $9486 = 0.0, $9487 = 0.0, $9488 = 0, $9489 = 0;
 var $949 = 0.0, $9490 = 0.0, $9491 = 0.0, $9492 = 0, $9493 = 0, $9494 = 0.0, $9495 = 0, $9496 = 0.0, $9497 = 0.0, $9498 = 0, $9499 = 0.0, $95 = 0.0, $950 = 0, $9500 = 0, $9501 = 0.0, $9502 = 0.0, $9503 = 0, $9504 = 0.0, $9505 = 0.0, $9506 = 0;
 var $9507 = 0.0, $9508 = 0.0, $9509 = 0, $951 = 0.0, $9510 = 0.0, $9511 = 0, $9512 = 0.0, $9513 = 0.0, $9514 = 0, $9515 = 0.0, $9516 = 0, $9517 = 0.0, $9518 = 0.0, $9519 = 0, $952 = 0.0, $9520 = 0.0, $9521 = 0, $9522 = 0.0, $9523 = 0.0, $9524 = 0.0;
 var $9525 = 0, $9526 = 0.0, $9527 = 0, $9528 = 0.0, $9529 = 0.0, $953 = 0, $9530 = 0.0, $9531 = 0.0, $9532 = 0, $9533 = 0.0, $9534 = 0.0, $9535 = 0.0, $9536 = 0, $9537 = 0.0, $9538 = 0.0, $9539 = 0.0, $954 = 0.0, $9540 = 0, $9541 = 0.0, $9542 = 0.0;
 var $9543 = 0.0, $9544 = 0.0, $9545 = 0, $9546 = 0.0, $9547 = 0.0, $9548 = 0.0, $9549 = 0.0, $955 = 0.0, $9550 = 0.0, $9551 = 0.0, $9552 = 0.0, $9553 = 0, $9554 = 0.0, $9555 = 0.0, $9556 = 0.0, $9557 = 0.0, $9558 = 0, $9559 = 0.0, $956 = 0.0, $9560 = 0.0;
 var $9561 = 0.0, $9562 = 0, $9563 = 0.0, $9564 = 0.0, $9565 = 0.0, $9566 = 0.0, $9567 = 0.0, $9568 = 0.0, $9569 = 0.0, $957 = 0.0, $9570 = 0.0, $9571 = 0, $9572 = 0, $9573 = 0.0, $9574 = 0.0, $9575 = 0.0, $9576 = 0, $9577 = 0.0, $9578 = 0.0, $9579 = 0.0;
 var $958 = 0, $9580 = 0.0, $9581 = 0.0, $9582 = 0.0, $9583 = 0.0, $9584 = 0.0, $9585 = 0, $9586 = 0, $9587 = 0.0, $9588 = 0.0, $9589 = 0.0, $959 = 0.0, $9590 = 0.0, $9591 = 0, $9592 = 0.0, $9593 = 0, $9594 = 0.0, $9595 = 0.0, $9596 = 0.0, $9597 = 0;
 var $9598 = 0, $9599 = 0.0, $96 = 0.0, $960 = 0.0, $9600 = 0.0, $9601 = 0.0, $9602 = 0.0, $9603 = 0, $9604 = 0.0, $9605 = 0, $9606 = 0.0, $9607 = 0.0, $9608 = 0.0, $9609 = 0, $961 = 0.0, $9610 = 0, $9611 = 0.0, $9612 = 0.0, $9613 = 0.0, $9614 = 0.0;
 var $9615 = 0, $9616 = 0.0, $9617 = 0, $9618 = 0.0, $9619 = 0.0, $962 = 0.0, $9620 = 0.0, $9621 = 0, $9622 = 0, $9623 = 0.0, $9624 = 0.0, $9625 = 0.0, $9626 = 0.0, $9627 = 0.0, $9628 = 0.0, $9629 = 0.0, $963 = 0.0, $9630 = 0, $9631 = 0.0, $9632 = 0.0;
 var $9633 = 0.0, $9634 = 0.0, $9635 = 0, $9636 = 0.0, $9637 = 0.0, $9638 = 0.0, $9639 = 0, $964 = 0, $9640 = 0.0, $9641 = 0.0, $9642 = 0.0, $9643 = 0.0, $9644 = 0.0, $9645 = 0.0, $9646 = 0.0, $9647 = 0.0, $9648 = 0, $9649 = 0, $965 = 0.0, $9650 = 0.0;
 var $9651 = 0.0, $9652 = 0.0, $9653 = 0, $9654 = 0.0, $9655 = 0.0, $9656 = 0.0, $9657 = 0.0, $9658 = 0.0, $9659 = 0.0, $966 = 0.0, $9660 = 0.0, $9661 = 0.0, $9662 = 0, $9663 = 0, $9664 = 0.0, $9665 = 0, $9666 = 0.0, $9667 = 0, $9668 = 0.0, $9669 = 0.0;
 var $967 = 0.0, $9670 = 0, $9671 = 0, $9672 = 0.0, $9673 = 0.0, $9674 = 0, $9675 = 0, $9676 = 0.0, $9677 = 0, $9678 = 0.0, $9679 = 0.0, $968 = 0, $9680 = 0, $9681 = 0.0, $9682 = 0, $9683 = 0.0, $9684 = 0.0, $9685 = 0, $9686 = 0.0, $9687 = 0.0;
 var $9688 = 0, $9689 = 0.0, $969 = 0.0, $9690 = 0.0, $9691 = 0, $9692 = 0.0, $9693 = 0, $9694 = 0.0, $9695 = 0.0, $9696 = 0, $9697 = 0.0, $9698 = 0, $9699 = 0.0, $97 = 0.0, $970 = 0, $9700 = 0.0, $9701 = 0, $9702 = 0.0, $9703 = 0, $9704 = 0.0;
 var $9705 = 0.0, $9706 = 0.0, $9707 = 0, $9708 = 0.0, $9709 = 0, $971 = 0.0, $9710 = 0.0, $9711 = 0.0, $9712 = 0.0, $9713 = 0.0, $9714 = 0, $9715 = 0.0, $9716 = 0.0, $9717 = 0.0, $9718 = 0, $9719 = 0.0, $972 = 0.0, $9720 = 0.0, $9721 = 0.0, $9722 = 0;
 var $9723 = 0.0, $9724 = 0.0, $9725 = 0.0, $9726 = 0.0, $9727 = 0, $9728 = 0.0, $9729 = 0.0, $973 = 0.0, $9730 = 0.0, $9731 = 0.0, $9732 = 0.0, $9733 = 0.0, $9734 = 0.0, $9735 = 0, $9736 = 0.0, $9737 = 0.0, $9738 = 0.0, $9739 = 0.0, $974 = 0.0, $9740 = 0;
 var $9741 = 0, $9742 = 0.0, $9743 = 0.0, $9744 = 0.0, $9745 = 0.0, $9746 = 0.0, $9747 = 0.0, $9748 = 0.0, $9749 = 0.0, $975 = 0, $9750 = 0.0, $9751 = 0.0, $9752 = 0.0, $9753 = 0, $9754 = 0, $9755 = 0.0, $9756 = 0.0, $9757 = 0.0, $9758 = 0, $9759 = 0.0;
 var $976 = 0.0, $9760 = 0.0, $9761 = 0.0, $9762 = 0.0, $9763 = 0.0, $9764 = 0.0, $9765 = 0.0, $9766 = 0.0, $9767 = 0, $9768 = 0, $9769 = 0.0, $977 = 0, $9770 = 0.0, $9771 = 0.0, $9772 = 0.0, $9773 = 0, $9774 = 0.0, $9775 = 0, $9776 = 0.0, $9777 = 0.0;
 var $9778 = 0.0, $9779 = 0, $978 = 0.0, $9780 = 0, $9781 = 0.0, $9782 = 0.0, $9783 = 0.0, $9784 = 0.0, $9785 = 0, $9786 = 0.0, $9787 = 0, $9788 = 0.0, $9789 = 0.0, $979 = 0.0, $9790 = 0.0, $9791 = 0, $9792 = 0, $9793 = 0.0, $9794 = 0.0, $9795 = 0.0;
 var $9796 = 0.0, $9797 = 0, $9798 = 0.0, $9799 = 0, $98 = 0.0, $980 = 0.0, $9800 = 0.0, $9801 = 0.0, $9802 = 0.0, $9803 = 0, $9804 = 0, $9805 = 0.0, $9806 = 0.0, $9807 = 0.0, $9808 = 0, $9809 = 0.0, $981 = 0, $9810 = 0.0, $9811 = 0.0, $9812 = 0.0;
 var $9813 = 0.0, $9814 = 0.0, $9815 = 0.0, $9816 = 0.0, $9817 = 0, $9818 = 0, $9819 = 0.0, $982 = 0.0, $9820 = 0.0, $9821 = 0.0, $9822 = 0.0, $9823 = 0.0, $9824 = 0.0, $9825 = 0.0, $9826 = 0.0, $9827 = 0.0, $9828 = 0.0, $9829 = 0.0, $983 = 0.0, $9830 = 0;
 var $9831 = 0, $9832 = 0.0, $9833 = 0.0, $9834 = 0.0, $9835 = 0, $9836 = 0.0, $9837 = 0.0, $9838 = 0.0, $9839 = 0.0, $984 = 0.0, $9840 = 0.0, $9841 = 0.0, $9842 = 0.0, $9843 = 0.0, $9844 = 0, $9845 = 0, $9846 = 0.0, $9847 = 0, $9848 = 0.0, $9849 = 0;
 var $985 = 0, $9850 = 0, $9851 = 0.0, $9852 = 0, $9853 = 0.0, $9854 = 0.0, $9855 = 0, $9856 = 0, $9857 = 0.0, $9858 = 0.0, $9859 = 0, $986 = 0.0, $9860 = 0, $9861 = 0.0, $9862 = 0.0, $9863 = 0, $9864 = 0, $9865 = 0.0, $9866 = 0, $9867 = 0.0;
 var $9868 = 0.0, $9869 = 0.0, $987 = 0.0, $9870 = 0, $9871 = 0.0, $9872 = 0.0, $9873 = 0, $9874 = 0.0, $9875 = 0.0, $9876 = 0, $9877 = 0.0, $9878 = 0.0, $9879 = 0, $988 = 0.0, $9880 = 0.0, $9881 = 0.0, $9882 = 0, $9883 = 0.0, $9884 = 0.0, $9885 = 0.0;
 var $9886 = 0.0, $9887 = 0.0, $9888 = 0.0, $9889 = 0.0, $989 = 0.0, $9890 = 0, $9891 = 0.0, $9892 = 0, $9893 = 0, $9894 = 0.0, $9895 = 0, $9896 = 0.0, $9897 = 0, $9898 = 0.0, $9899 = 0, $99 = 0.0, $990 = 0, $9900 = 0, $9901 = 0.0, $9902 = 0.0;
 var $9903 = 0.0, $9904 = 0.0, $9905 = 0, $9906 = 0.0, $9907 = 0, $9908 = 0.0, $9909 = 0.0, $991 = 0.0, $9910 = 0.0, $9911 = 0, $9912 = 0, $9913 = 0.0, $9914 = 0.0, $9915 = 0.0, $9916 = 0.0, $9917 = 0, $9918 = 0.0, $9919 = 0.0, $992 = 0.0, $9920 = 0.0;
 var $9921 = 0.0, $9922 = 0.0, $9923 = 0, $9924 = 0, $9925 = 0.0, $9926 = 0.0, $9927 = 0.0, $9928 = 0.0, $9929 = 0, $993 = 0, $9930 = 0.0, $9931 = 0.0, $9932 = 0.0, $9933 = 0.0, $9934 = 0.0, $9935 = 0, $9936 = 0, $9937 = 0.0, $9938 = 0.0, $9939 = 0.0;
 var $994 = 0, $9940 = 0.0, $9941 = 0.0, $9942 = 0, $9943 = 0.0, $9944 = 0.0, $9945 = 0.0, $9946 = 0.0, $9947 = 0.0, $9948 = 0, $9949 = 0.0, $995 = 0.0, $9950 = 0.0, $9951 = 0, $9952 = 0, $9953 = 0.0, $9954 = 0.0, $9955 = 0, $9956 = 0, $9957 = 0.0;
 var $9958 = 0.0, $9959 = 0, $996 = 0, $9960 = 0, $9961 = 0.0, $9962 = 0.0, $9963 = 0, $9964 = 0, $9965 = 0.0, $9966 = 0.0, $9967 = 0, $9968 = 0, $9969 = 0.0, $997 = 0.0, $9970 = 0.0, $9971 = 0, $9972 = 0, $9973 = 0.0, $9974 = 0.0, $9975 = 0;
 var $9976 = 0, $9977 = 0.0, $9978 = 0.0, $9979 = 0, $998 = 0.0, $9980 = 0, $9981 = 0.0, $9982 = 0.0, $9983 = 0, $9984 = 0, $9985 = 0.0, $9986 = 0.0, $9987 = 0, $9988 = 0, $9989 = 0, $999 = 0.0, $9990 = 0.0, $9991 = 0, $9992 = 0.0, $9993 = 0.0;
 var $9994 = 0, $9995 = 0, $9996 = 0, $9997 = 0, $9998 = 0.0, $9999 = 0.0, $bgotonextstatement = 0, $bgotonextstatement102 = 0, $bgotonextstatement112 = 0, $bgotonextstatement151 = 0, $bgotonextstatement161 = 0, $bgotonextstatement171 = 0, $bgotonextstatement181 = 0, $bgotonextstatement191 = 0, $bgotonextstatement201 = 0, $bgotonextstatement21 = 0, $bgotonextstatement211 = 0, $bgotonextstatement221 = 0, $bgotonextstatement231 = 0, $bgotonextstatement32 = 0;
 var $bgotonextstatement4 = 0, $bgotonextstatement42 = 0, $bgotonextstatement52 = 0, $bgotonextstatement62 = 0, $bgotonextstatement72 = 0, $bgotonextstatement82 = 0, $bgotonextstatement92 = 0, $cj3array = 0, $cj3array141 = 0, $cj3array23 = 0, $cj3array6 = 0, $cj4array = 0, $cj5array = 0, $cj5array104 = 0, $cj5array114 = 0, $cj5array123 = 0, $cj5array13 = 0, $cj5array132 = 0, $cj5array153 = 0, $cj5array163 = 0;
 var $cj5array173 = 0, $cj5array183 = 0, $cj5array193 = 0, $cj5array203 = 0, $cj5array213 = 0, $cj5array223 = 0, $cj5array233 = 0, $cj5array242 = 0, $cj5array251 = 0, $cj5array34 = 0, $cj5array44 = 0, $cj5array54 = 0, $cj5array64 = 0, $cj5array74 = 0, $cj5array84 = 0, $cj5array94 = 0, $evalcond = 0, $evalcond109 = 0, $evalcond11 = 0, $evalcond119 = 0;
 var $evalcond128 = 0, $evalcond137 = 0, $evalcond146 = 0, $evalcond150 = 0, $evalcond158 = 0, $evalcond168 = 0, $evalcond178 = 0, $evalcond18 = 0, $evalcond188 = 0, $evalcond198 = 0, $evalcond2 = 0, $evalcond208 = 0, $evalcond218 = 0, $evalcond228 = 0, $evalcond238 = 0, $evalcond247 = 0, $evalcond256 = 0, $evalcond28 = 0, $evalcond3 = 0, $evalcond31 = 0;
 var $evalcond39 = 0, $evalcond49 = 0, $evalcond59 = 0, $evalcond69 = 0, $evalcond79 = 0, $evalcond89 = 0, $evalcond99 = 0, $iij3 = 0, $iij310 = 0, $iij3145 = 0, $iij327 = 0, $iij4 = 0, $iij5 = 0, $iij5108 = 0, $iij5118 = 0, $iij5127 = 0, $iij5136 = 0, $iij5157 = 0, $iij5167 = 0, $iij517 = 0;
 var $iij5177 = 0, $iij5187 = 0, $iij5197 = 0, $iij5207 = 0, $iij5217 = 0, $iij5227 = 0, $iij5237 = 0, $iij5246 = 0, $iij5255 = 0, $iij538 = 0, $iij548 = 0, $iij558 = 0, $iij568 = 0, $iij578 = 0, $iij588 = 0, $iij598 = 0, $ij3 = 0, $ij3144 = 0, $ij326 = 0, $ij39 = 0;
 var $ij4 = 0, $ij5 = 0, $ij5107 = 0, $ij5117 = 0, $ij5126 = 0, $ij5135 = 0, $ij5156 = 0, $ij516 = 0, $ij5166 = 0, $ij5176 = 0, $ij5186 = 0, $ij5196 = 0, $ij5206 = 0, $ij5216 = 0, $ij5226 = 0, $ij5236 = 0, $ij5245 = 0, $ij5254 = 0, $ij537 = 0, $ij547 = 0;
 var $ij557 = 0, $ij567 = 0, $ij577 = 0, $ij587 = 0, $ij597 = 0, $j3array = 0, $j3array140 = 0, $j3array22 = 0, $j3array5 = 0, $j3eval = 0, $j3eval1 = 0, $j3valid = 0, $j3valid143 = 0, $j3valid25 = 0, $j3valid8 = 0, $j4array = 0, $j4valid = 0, $j5array = 0, $j5array103 = 0, $j5array113 = 0;
 var $j5array12 = 0, $j5array122 = 0, $j5array131 = 0, $j5array152 = 0, $j5array162 = 0, $j5array172 = 0, $j5array182 = 0, $j5array192 = 0, $j5array202 = 0, $j5array212 = 0, $j5array222 = 0, $j5array232 = 0, $j5array241 = 0, $j5array250 = 0, $j5array33 = 0, $j5array43 = 0, $j5array53 = 0, $j5array63 = 0, $j5array73 = 0, $j5array83 = 0;
 var $j5array93 = 0, $j5eval = 0, $j5eval147 = 0, $j5eval148 = 0, $j5eval149 = 0, $j5eval29 = 0, $j5eval30 = 0, $j5valid = 0, $j5valid106 = 0, $j5valid116 = 0, $j5valid125 = 0, $j5valid134 = 0, $j5valid15 = 0, $j5valid155 = 0, $j5valid165 = 0, $j5valid175 = 0, $j5valid185 = 0, $j5valid195 = 0, $j5valid205 = 0, $j5valid215 = 0;
 var $j5valid225 = 0, $j5valid235 = 0, $j5valid244 = 0, $j5valid253 = 0, $j5valid36 = 0, $j5valid46 = 0, $j5valid56 = 0, $j5valid66 = 0, $j5valid76 = 0, $j5valid86 = 0, $j5valid96 = 0, $rotationiter = 0, $sj3array = 0, $sj3array142 = 0, $sj3array24 = 0, $sj3array7 = 0, $sj4array = 0, $sj5array = 0, $sj5array105 = 0, $sj5array115 = 0;
 var $sj5array124 = 0, $sj5array133 = 0, $sj5array14 = 0, $sj5array154 = 0, $sj5array164 = 0, $sj5array174 = 0, $sj5array184 = 0, $sj5array194 = 0, $sj5array204 = 0, $sj5array214 = 0, $sj5array224 = 0, $sj5array234 = 0, $sj5array243 = 0, $sj5array252 = 0, $sj5array35 = 0, $sj5array45 = 0, $sj5array55 = 0, $sj5array65 = 0, $sj5array75 = 0, $sj5array85 = 0;
 var $sj5array95 = 0, $vfree = 0, $vfree101 = 0, $vfree111 = 0, $vfree121 = 0, $vfree130 = 0, $vfree139 = 0, $vfree160 = 0, $vfree170 = 0, $vfree180 = 0, $vfree190 = 0, $vfree20 = 0, $vfree200 = 0, $vfree210 = 0, $vfree220 = 0, $vfree230 = 0, $vfree240 = 0, $vfree249 = 0, $vfree258 = 0, $vfree41 = 0;
 var $vfree51 = 0, $vfree61 = 0, $vfree71 = 0, $vfree81 = 0, $vfree91 = 0, $vinfos = 0, $vinfos100 = 0, $vinfos110 = 0, $vinfos120 = 0, $vinfos129 = 0, $vinfos138 = 0, $vinfos159 = 0, $vinfos169 = 0, $vinfos179 = 0, $vinfos189 = 0, $vinfos19 = 0, $vinfos199 = 0, $vinfos209 = 0, $vinfos219 = 0, $vinfos229 = 0;
 var $vinfos239 = 0, $vinfos248 = 0, $vinfos257 = 0, $vinfos40 = 0, $vinfos50 = 0, $vinfos60 = 0, $vinfos70 = 0, $vinfos80 = 0, $vinfos90 = 0, $x100 = 0.0, $x101 = 0.0, $x102 = 0.0, $x103 = 0.0, $x104 = 0.0, $x105 = 0.0, $x106 = 0.0, $x107 = 0.0, $x108 = 0.0, $x109 = 0.0, $x110 = 0.0;
 var $x111 = 0.0, $x112 = 0.0, $x113 = 0.0, $x114 = 0.0, $x115 = 0.0, $x116 = 0.0, $x117 = 0.0, $x118 = 0.0, $x119 = 0.0, $x120 = 0.0, $x121 = 0.0, $x122 = 0.0, $x123 = 0, $x124 = 0.0, $x125 = 0.0, $x126 = 0.0, $x127 = 0.0, $x128 = 0.0, $x129 = 0.0, $x130 = 0.0;
 var $x131 = 0.0, $x132 = 0.0, $x133 = 0, $x134 = 0.0, $x135 = 0.0, $x136 = 0.0, $x137 = 0.0, $x138 = 0.0, $x139 = 0.0, $x140 = 0.0, $x141 = 0.0, $x142 = 0.0, $x143 = 0, $x144 = 0, $x145 = 0.0, $x146 = 0.0, $x147 = 0.0, $x148 = 0.0, $x149 = 0.0, $x150 = 0.0;
 var $x151 = 0.0, $x152 = 0.0, $x153 = 0.0, $x154 = 0.0, $x155 = 0.0, $x156 = 0.0, $x157 = 0.0, $x158 = 0.0, $x159 = 0.0, $x160 = 0.0, $x161 = 0.0, $x162 = 0.0, $x163 = 0.0, $x164 = 0.0, $x165 = 0.0, $x166 = 0.0, $x167 = 0.0, $x168 = 0.0, $x169 = 0.0, $x170 = 0.0;
 var $x171 = 0.0, $x172 = 0.0, $x173 = 0.0, $x174 = 0.0, $x175 = 0.0, $x176 = 0.0, $x177 = 0.0, $x178 = 0.0, $x179 = 0.0, $x180 = 0.0, $x181 = 0.0, $x182 = 0.0, $x183 = 0.0, $x184 = 0.0, $x185 = 0.0, $x186 = 0.0, $x187 = 0.0, $x188 = 0.0, $x189 = 0.0, $x190 = 0.0;
 var $x191 = 0.0, $x192 = 0.0, $x193 = 0.0, $x194 = 0, $x195 = 0, $x196 = 0.0, $x197 = 0.0, $x198 = 0.0, $x199 = 0.0, $x200 = 0.0, $x201 = 0.0, $x202 = 0.0, $x203 = 0.0, $x204 = 0.0, $x205 = 0.0, $x206 = 0.0, $x207 = 0.0, $x208 = 0.0, $x209 = 0.0, $x210 = 0.0;
 var $x211 = 0.0, $x212 = 0.0, $x213 = 0.0, $x214 = 0.0, $x215 = 0.0, $x216 = 0.0, $x217 = 0.0, $x218 = 0.0, $x219 = 0.0, $x220 = 0.0, $x221 = 0.0, $x222 = 0.0, $x223 = 0.0, $x224 = 0.0, $x225 = 0.0, $x226 = 0.0, $x227 = 0.0, $x228 = 0.0, $x229 = 0.0, $x230 = 0.0;
 var $x231 = 0.0, $x232 = 0.0, $x233 = 0.0, $x234 = 0.0, $x235 = 0.0, $x236 = 0.0, $x237 = 0.0, $x238 = 0.0, $x239 = 0.0, $x240 = 0.0, $x241 = 0.0, $x242 = 0.0, $x243 = 0.0, $x244 = 0.0, $x245 = 0.0, $x246 = 0.0, $x247 = 0.0, $x248 = 0.0, $x249 = 0.0, $x250 = 0.0;
 var $x251 = 0.0, $x252 = 0.0, $x253 = 0.0, $x254 = 0.0, $x255 = 0.0, $x256 = 0.0, $x257 = 0.0, $x258 = 0.0, $x259 = 0.0, $x260 = 0, $x261 = 0, $x262 = 0.0, $x263 = 0.0, $x264 = 0.0, $x265 = 0.0, $x266 = 0.0, $x267 = 0.0, $x268 = 0, $x269 = 0, $x270 = 0;
 var $x271 = 0.0, $x272 = 0.0, $x273 = 0.0, $x274 = 0.0, $x275 = 0.0, $x276 = 0.0, $x277 = 0.0, $x278 = 0.0, $x279 = 0.0, $x280 = 0.0, $x281 = 0.0, $x282 = 0, $x283 = 0, $x284 = 0.0, $x285 = 0.0, $x286 = 0.0, $x287 = 0.0, $x288 = 0.0, $x289 = 0.0, $x290 = 0.0;
 var $x291 = 0.0, $x292 = 0.0, $x293 = 0.0, $x294 = 0, $x295 = 0, $x296 = 0.0, $x297 = 0.0, $x298 = 0.0, $x299 = 0.0, $x300 = 0.0, $x301 = 0.0, $x302 = 0.0, $x303 = 0.0, $x304 = 0.0, $x305 = 0.0, $x306 = 0, $x307 = 0, $x308 = 0.0, $x309 = 0.0, $x310 = 0.0;
 var $x311 = 0.0, $x312 = 0.0, $x313 = 0.0, $x314 = 0.0, $x315 = 0.0, $x316 = 0.0, $x317 = 0.0, $x318 = 0.0, $x319 = 0.0, $x320 = 0.0, $x321 = 0.0, $x322 = 0.0, $x323 = 0.0, $x324 = 0.0, $x325 = 0.0, $x326 = 0.0, $x327 = 0.0, $x328 = 0.0, $x329 = 0.0, $x330 = 0.0;
 var $x331 = 0.0, $x332 = 0.0, $x333 = 0.0, $x334 = 0.0, $x335 = 0.0, $x336 = 0.0, $x337 = 0.0, $x338 = 0.0, $x339 = 0.0, $x340 = 0.0, $x341 = 0.0, $x342 = 0.0, $x343 = 0.0, $x344 = 0.0, $x345 = 0.0, $x346 = 0.0, $x347 = 0.0, $x348 = 0.0, $x349 = 0.0, $x350 = 0.0;
 var $x351 = 0.0, $x352 = 0.0, $x353 = 0.0, $x354 = 0.0, $x355 = 0.0, $x356 = 0.0, $x357 = 0, $x358 = 0, $x359 = 0.0, $x360 = 0.0, $x361 = 0.0, $x362 = 0.0, $x363 = 0.0, $x364 = 0.0, $x365 = 0.0, $x366 = 0.0, $x367 = 0.0, $x368 = 0.0, $x369 = 0.0, $x370 = 0.0;
 var $x371 = 0.0, $x372 = 0.0, $x373 = 0.0, $x374 = 0.0, $x375 = 0.0, $x376 = 0.0, $x377 = 0.0, $x378 = 0.0, $x379 = 0.0, $x380 = 0.0, $x381 = 0.0, $x382 = 0.0, $x383 = 0.0, $x384 = 0.0, $x385 = 0.0, $x386 = 0.0, $x387 = 0.0, $x388 = 0.0, $x389 = 0.0, $x390 = 0.0;
 var $x391 = 0.0, $x392 = 0.0, $x393 = 0.0, $x394 = 0.0, $x395 = 0.0, $x396 = 0.0, $x397 = 0.0, $x398 = 0.0, $x399 = 0.0, $x400 = 0.0, $x401 = 0.0, $x402 = 0.0, $x403 = 0.0, $x404 = 0.0, $x405 = 0.0, $x406 = 0.0, $x407 = 0.0, $x408 = 0.0, $x409 = 0.0, $x410 = 0.0;
 var $x411 = 0.0, $x412 = 0.0, $x413 = 0.0, $x414 = 0.0, $x415 = 0.0, $x416 = 0.0, $x417 = 0.0, $x418 = 0.0, $x419 = 0.0, $x420 = 0.0, $x421 = 0.0, $x422 = 0.0, $x423 = 0, $x424 = 0, $x425 = 0.0, $x426 = 0.0, $x427 = 0.0, $x428 = 0.0, $x429 = 0.0, $x430 = 0.0;
 var $x431 = 0, $x432 = 0, $x433 = 0, $x434 = 0.0, $x435 = 0.0, $x436 = 0.0, $x437 = 0.0, $x438 = 0.0, $x439 = 0.0, $x440 = 0.0, $x441 = 0.0, $x442 = 0.0, $x443 = 0.0, $x444 = 0.0, $x445 = 0, $x446 = 0, $x447 = 0.0, $x448 = 0.0, $x449 = 0.0, $x450 = 0.0;
 var $x451 = 0.0, $x452 = 0.0, $x453 = 0.0, $x454 = 0.0, $x455 = 0.0, $x456 = 0.0, $x457 = 0, $x458 = 0, $x459 = 0.0, $x460 = 0.0, $x461 = 0.0, $x462 = 0.0, $x463 = 0.0, $x464 = 0.0, $x465 = 0.0, $x466 = 0.0, $x467 = 0.0, $x468 = 0.0, $x83 = 0.0, $x84 = 0.0;
 var $x85 = 0.0, $x86 = 0.0, $x87 = 0.0, $x88 = 0.0, $x89 = 0.0, $x90 = 0.0, $x91 = 0.0, $x92 = 0.0, $x93 = 0.0, $x94 = 0.0, $x95 = 0.0, $x96 = 0.0, $x97 = 0.0, $x98 = 0.0, $x99 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 7216|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $j4array = sp + 6208|0;
 $cj4array = sp + 6192|0;
 $sj4array = sp + 6176|0;
 $j4valid = sp + 7208|0;
 $j3eval = sp + 6160|0;
 $j3eval1 = sp + 6048|0;
 $evalcond = sp + 5896|0;
 $j3array = sp + 5880|0;
 $cj3array = sp + 5864|0;
 $sj3array = sp + 5848|0;
 $j3valid = sp + 7204|0;
 $x123 = sp + 5832|0;
 $evalcond2 = sp + 5816|0;
 $j5array = sp + 5808|0;
 $cj5array = sp + 5800|0;
 $sj5array = sp + 5792|0;
 $j5valid = sp + 7203|0;
 $evalcond3 = sp + 5720|0;
 $vinfos = sp + 7108|0;
 $vfree = sp + 7088|0;
 $j3array5 = sp + 5648|0;
 $cj3array6 = sp + 5632|0;
 $sj3array7 = sp + 5616|0;
 $j3valid8 = sp + 7200|0;
 $x133 = sp + 5600|0;
 $evalcond11 = sp + 5584|0;
 $j5array12 = sp + 5576|0;
 $cj5array13 = sp + 5568|0;
 $sj5array14 = sp + 5560|0;
 $j5valid15 = sp + 7199|0;
 $evalcond18 = sp + 5488|0;
 $vinfos19 = sp + 7060|0;
 $vfree20 = sp + 7048|0;
 $j3array22 = sp + 5424|0;
 $cj3array23 = sp + 5416|0;
 $sj3array24 = sp + 5408|0;
 $j3valid25 = sp + 7197|0;
 $x143 = sp + 5392|0;
 $x144 = sp + 5368|0;
 $evalcond28 = sp + 5304|0;
 $j5eval = sp + 5240|0;
 $j5eval29 = sp + 5120|0;
 $j5eval30 = sp + 4992|0;
 $evalcond31 = sp + 4792|0;
 $j5array33 = sp + 4752|0;
 $cj5array34 = sp + 4744|0;
 $sj5array35 = sp + 4736|0;
 $j5valid36 = sp + 7195|0;
 $x194 = sp + 4720|0;
 $x195 = sp + 4704|0;
 $evalcond39 = sp + 4640|0;
 $vinfos40 = sp + 7020|0;
 $vfree41 = sp + 7008|0;
 $j5array43 = sp + 4568|0;
 $cj5array44 = sp + 4560|0;
 $sj5array45 = sp + 4552|0;
 $j5valid46 = sp + 7193|0;
 $evalcond49 = sp + 4488|0;
 $vinfos50 = sp + 6988|0;
 $vfree51 = sp + 6976|0;
 $j5array53 = sp + 4400|0;
 $cj5array54 = sp + 4392|0;
 $sj5array55 = sp + 4384|0;
 $j5valid56 = sp + 7191|0;
 $evalcond59 = sp + 4320|0;
 $vinfos60 = sp + 6956|0;
 $vfree61 = sp + 6944|0;
 $j5array63 = sp + 4240|0;
 $cj5array64 = sp + 4232|0;
 $sj5array65 = sp + 4224|0;
 $j5valid66 = sp + 7189|0;
 $evalcond69 = sp + 4160|0;
 $vinfos70 = sp + 6924|0;
 $vfree71 = sp + 6912|0;
 $j5array73 = sp + 4096|0;
 $cj5array74 = sp + 4088|0;
 $sj5array75 = sp + 4080|0;
 $j5valid76 = sp + 7187|0;
 $evalcond79 = sp + 4008|0;
 $vinfos80 = sp + 6892|0;
 $vfree81 = sp + 6880|0;
 $j5array83 = sp + 3920|0;
 $cj5array84 = sp + 3912|0;
 $sj5array85 = sp + 3904|0;
 $j5valid86 = sp + 7185|0;
 $evalcond89 = sp + 3832|0;
 $vinfos90 = sp + 6860|0;
 $vfree91 = sp + 6848|0;
 $j5array93 = sp + 3736|0;
 $cj5array94 = sp + 3728|0;
 $sj5array95 = sp + 3720|0;
 $j5valid96 = sp + 7183|0;
 $evalcond99 = sp + 3656|0;
 $vinfos100 = sp + 6828|0;
 $vfree101 = sp + 6816|0;
 $j5array103 = sp + 3592|0;
 $cj5array104 = sp + 3584|0;
 $sj5array105 = sp + 3576|0;
 $j5valid106 = sp + 7181|0;
 $x260 = sp + 3560|0;
 $x261 = sp + 3544|0;
 $evalcond109 = sp + 3480|0;
 $vinfos110 = sp + 6796|0;
 $vfree111 = sp + 6784|0;
 $j5array113 = sp + 3432|0;
 $cj5array114 = sp + 3424|0;
 $sj5array115 = sp + 3416|0;
 $j5valid116 = sp + 7179|0;
 $x268 = sp + 3400|0;
 $x269 = sp + 3376|0;
 $x270 = sp + 3360|0;
 $evalcond119 = sp + 3264|0;
 $vinfos120 = sp + 6764|0;
 $vfree121 = sp + 6752|0;
 $j5array122 = sp + 3176|0;
 $cj5array123 = sp + 3168|0;
 $sj5array124 = sp + 3160|0;
 $j5valid125 = sp + 7178|0;
 $x282 = sp + 3144|0;
 $x283 = sp + 3120|0;
 $evalcond128 = sp + 3024|0;
 $vinfos129 = sp + 6732|0;
 $vfree130 = sp + 6720|0;
 $j5array131 = sp + 2936|0;
 $cj5array132 = sp + 2928|0;
 $sj5array133 = sp + 2920|0;
 $j5valid134 = sp + 7177|0;
 $x294 = sp + 2904|0;
 $x295 = sp + 2888|0;
 $evalcond137 = sp + 2792|0;
 $vinfos138 = sp + 6700|0;
 $vfree139 = sp + 6688|0;
 $j3array140 = sp + 2704|0;
 $cj3array141 = sp + 2696|0;
 $sj3array142 = sp + 2688|0;
 $j3valid143 = sp + 7176|0;
 $x306 = sp + 2672|0;
 $x307 = sp + 2656|0;
 $evalcond146 = sp + 2592|0;
 $j5eval147 = sp + 2528|0;
 $j5eval148 = sp + 2408|0;
 $j5eval149 = sp + 2280|0;
 $evalcond150 = sp + 2080|0;
 $j5array152 = sp + 2040|0;
 $cj5array153 = sp + 2032|0;
 $sj5array154 = sp + 2024|0;
 $j5valid155 = sp + 7174|0;
 $x357 = sp + 2008|0;
 $x358 = sp + 1992|0;
 $evalcond158 = sp + 1928|0;
 $vinfos159 = sp + 6660|0;
 $vfree160 = sp + 6648|0;
 $j5array162 = sp + 1856|0;
 $cj5array163 = sp + 1848|0;
 $sj5array164 = sp + 1840|0;
 $j5valid165 = sp + 7172|0;
 $evalcond168 = sp + 1776|0;
 $vinfos169 = sp + 6628|0;
 $vfree170 = sp + 6616|0;
 $j5array172 = sp + 1688|0;
 $cj5array173 = sp + 1680|0;
 $sj5array174 = sp + 1672|0;
 $j5valid175 = sp + 7170|0;
 $evalcond178 = sp + 1608|0;
 $vinfos179 = sp + 6596|0;
 $vfree180 = sp + 6584|0;
 $j5array182 = sp + 1528|0;
 $cj5array183 = sp + 1520|0;
 $sj5array184 = sp + 1512|0;
 $j5valid185 = sp + 7168|0;
 $evalcond188 = sp + 1448|0;
 $vinfos189 = sp + 6564|0;
 $vfree190 = sp + 6552|0;
 $j5array192 = sp + 1384|0;
 $cj5array193 = sp + 1376|0;
 $sj5array194 = sp + 1368|0;
 $j5valid195 = sp + 7166|0;
 $evalcond198 = sp + 1296|0;
 $vinfos199 = sp + 6532|0;
 $vfree200 = sp + 6520|0;
 $j5array202 = sp + 1208|0;
 $cj5array203 = sp + 1200|0;
 $sj5array204 = sp + 1192|0;
 $j5valid205 = sp + 7164|0;
 $evalcond208 = sp + 1120|0;
 $vinfos209 = sp + 6500|0;
 $vfree210 = sp + 6488|0;
 $j5array212 = sp + 1024|0;
 $cj5array213 = sp + 1016|0;
 $sj5array214 = sp + 1008|0;
 $j5valid215 = sp + 7162|0;
 $evalcond218 = sp + 944|0;
 $vinfos219 = sp + 6468|0;
 $vfree220 = sp + 6456|0;
 $j5array222 = sp + 880|0;
 $cj5array223 = sp + 872|0;
 $sj5array224 = sp + 864|0;
 $j5valid225 = sp + 7160|0;
 $x423 = sp + 848|0;
 $x424 = sp + 832|0;
 $evalcond228 = sp + 768|0;
 $vinfos229 = sp + 6436|0;
 $vfree230 = sp + 6424|0;
 $j5array232 = sp + 720|0;
 $cj5array233 = sp + 712|0;
 $sj5array234 = sp + 704|0;
 $j5valid235 = sp + 7158|0;
 $x431 = sp + 688|0;
 $x432 = sp + 664|0;
 $x433 = sp + 648|0;
 $evalcond238 = sp + 552|0;
 $vinfos239 = sp + 6404|0;
 $vfree240 = sp + 6392|0;
 $j5array241 = sp + 464|0;
 $cj5array242 = sp + 456|0;
 $sj5array243 = sp + 448|0;
 $j5valid244 = sp + 7157|0;
 $x445 = sp + 432|0;
 $x446 = sp + 408|0;
 $evalcond247 = sp + 312|0;
 $vinfos248 = sp + 6372|0;
 $vfree249 = sp + 6360|0;
 $j5array250 = sp + 224|0;
 $cj5array251 = sp + 216|0;
 $sj5array252 = sp + 208|0;
 $j5valid253 = sp + 7156|0;
 $x457 = sp + 192|0;
 $x458 = sp + 176|0;
 $evalcond256 = sp + 80|0;
 $vinfos257 = sp + 6340|0;
 $vfree258 = sp + 6328|0;
 $0 = $this;
 $1 = $solutions;
 $4 = $0;
 $rotationiter = 0;
 L1: while(1) {
  $5 = $rotationiter;
  $6 = ($5|0)<(1);
  if (!($6)) {
   label = 1873;
   break;
  }
  $7 = ((($4)) + 8|0);
  $8 = +HEAPF64[$7>>3];
  $9 = ((($4)) + 248|0);
  $10 = +HEAPF64[$9>>3];
  $11 = $8 * $10;
  $x83 = $11;
  $12 = ((($4)) + 8|0);
  $13 = +HEAPF64[$12>>3];
  $14 = ((($4)) + 272|0);
  $15 = +HEAPF64[$14>>3];
  $16 = $13 * $15;
  $x84 = $16;
  $17 = ((($4)) + 56|0);
  $18 = +HEAPF64[$17>>3];
  $19 = 1.0 * $18;
  $x85 = $19;
  $20 = ((($4)) + 16|0);
  $21 = +HEAPF64[$20>>3];
  $22 = 1.0 * $21;
  $x86 = $22;
  $23 = ((($4)) + 344|0);
  $24 = +HEAPF64[$23>>3];
  $25 = ((($4)) + 16|0);
  $26 = +HEAPF64[$25>>3];
  $27 = $24 * $26;
  $x87 = $27;
  $28 = ((($4)) + 48|0);
  $29 = +HEAPF64[$28>>3];
  $30 = ((($4)) + 96|0);
  $31 = +HEAPF64[$30>>3];
  $32 = $29 * $31;
  $x88 = $32;
  $33 = ((($4)) + 8|0);
  $34 = +HEAPF64[$33>>3];
  $35 = ((($4)) + 296|0);
  $36 = +HEAPF64[$35>>3];
  $37 = $34 * $36;
  $x89 = $37;
  $38 = ((($4)) + 96|0);
  $39 = +HEAPF64[$38>>3];
  $40 = -1.0 * $39;
  $41 = $x85;
  $42 = $40 * $41;
  $43 = ((($4)) + 48|0);
  $44 = +HEAPF64[$43>>3];
  $45 = ((($4)) + 88|0);
  $46 = +HEAPF64[$45>>3];
  $47 = $44 * $46;
  $48 = $42 + $47;
  $x90 = $48;
  $49 = ((($4)) + 88|0);
  $50 = +HEAPF64[$49>>3];
  $51 = ((($4)) + 56|0);
  $52 = +HEAPF64[$51>>3];
  $53 = $50 * $52;
  $54 = $x88;
  $55 = $53 + $54;
  $x91 = $55;
  $56 = ((($4)) + 8|0);
  $57 = +HEAPF64[$56>>3];
  $58 = $x90;
  $59 = $57 * $58;
  $x92 = $59;
  $60 = ((($4)) + 16|0);
  $61 = +HEAPF64[$60>>3];
  $62 = $x90;
  $63 = $61 * $62;
  $x93 = $63;
  $64 = ((($4)) + 16|0);
  $65 = +HEAPF64[$64>>3];
  $66 = $x91;
  $67 = $65 * $66;
  $x94 = $67;
  $68 = $x88;
  $69 = -1.0 * $68;
  $70 = ((($4)) + 88|0);
  $71 = +HEAPF64[$70>>3];
  $72 = -1.0 * $71;
  $73 = $x85;
  $74 = $72 * $73;
  $75 = $69 + $74;
  $x95 = $75;
  $76 = ((($4)) + 320|0);
  $77 = +HEAPF64[$76>>3];
  $78 = $x93;
  $79 = $77 * $78;
  $80 = ((($4)) + 392|0);
  $81 = +HEAPF64[$80>>3];
  $82 = $x95;
  $83 = $81 * $82;
  $84 = $79 + $83;
  $85 = $x83;
  $86 = $x90;
  $87 = $85 * $86;
  $88 = $84 + $87;
  $89 = ((($4)) + 240|0);
  HEAPF64[$89>>3] = $88;
  $90 = ((($4)) + 416|0);
  $91 = +HEAPF64[$90>>3];
  $92 = $x95;
  $93 = $91 * $92;
  $94 = $x87;
  $95 = $x90;
  $96 = $94 * $95;
  $97 = $93 + $96;
  $98 = $x84;
  $99 = $x90;
  $100 = $98 * $99;
  $101 = $97 + $100;
  $102 = ((($4)) + 264|0);
  HEAPF64[$102>>3] = $101;
  $103 = ((($4)) + 368|0);
  $104 = +HEAPF64[$103>>3];
  $105 = $x93;
  $106 = $104 * $105;
  $107 = $x89;
  $108 = $x90;
  $109 = $107 * $108;
  $110 = $106 + $109;
  $111 = ((($4)) + 440|0);
  $112 = +HEAPF64[$111>>3];
  $113 = $x95;
  $114 = $112 * $113;
  $115 = $110 + $114;
  $116 = ((($4)) + 288|0);
  HEAPF64[$116>>3] = $115;
  $117 = ((($4)) + 248|0);
  $118 = +HEAPF64[$117>>3];
  $119 = -1.0 * $118;
  $120 = $x86;
  $121 = $119 * $120;
  $122 = ((($4)) + 8|0);
  $123 = +HEAPF64[$122>>3];
  $124 = ((($4)) + 320|0);
  $125 = +HEAPF64[$124>>3];
  $126 = $123 * $125;
  $127 = $121 + $126;
  $128 = ((($4)) + 312|0);
  HEAPF64[$128>>3] = $127;
  $129 = ((($4)) + 8|0);
  $130 = +HEAPF64[$129>>3];
  $131 = ((($4)) + 344|0);
  $132 = +HEAPF64[$131>>3];
  $133 = $130 * $132;
  $134 = ((($4)) + 272|0);
  $135 = +HEAPF64[$134>>3];
  $136 = -1.0 * $135;
  $137 = $x86;
  $138 = $136 * $137;
  $139 = $133 + $138;
  $140 = ((($4)) + 336|0);
  HEAPF64[$140>>3] = $139;
  $141 = ((($4)) + 296|0);
  $142 = +HEAPF64[$141>>3];
  $143 = -1.0 * $142;
  $144 = $x86;
  $145 = $143 * $144;
  $146 = ((($4)) + 8|0);
  $147 = +HEAPF64[$146>>3];
  $148 = ((($4)) + 368|0);
  $149 = +HEAPF64[$148>>3];
  $150 = $147 * $149;
  $151 = $145 + $150;
  $152 = ((($4)) + 360|0);
  HEAPF64[$152>>3] = $151;
  $153 = ((($4)) + 320|0);
  $154 = +HEAPF64[$153>>3];
  $155 = $x94;
  $156 = $154 * $155;
  $157 = ((($4)) + 392|0);
  $158 = +HEAPF64[$157>>3];
  $159 = $x90;
  $160 = $158 * $159;
  $161 = $156 + $160;
  $162 = $x83;
  $163 = $x91;
  $164 = $162 * $163;
  $165 = $161 + $164;
  $166 = ((($4)) + 384|0);
  HEAPF64[$166>>3] = $165;
  $167 = ((($4)) + 416|0);
  $168 = +HEAPF64[$167>>3];
  $169 = $x90;
  $170 = $168 * $169;
  $171 = $x87;
  $172 = $x91;
  $173 = $171 * $172;
  $174 = $170 + $173;
  $175 = $x84;
  $176 = $x91;
  $177 = $175 * $176;
  $178 = $174 + $177;
  $179 = ((($4)) + 408|0);
  HEAPF64[$179>>3] = $178;
  $180 = ((($4)) + 368|0);
  $181 = +HEAPF64[$180>>3];
  $182 = $x94;
  $183 = $181 * $182;
  $184 = $x89;
  $185 = $x91;
  $186 = $184 * $185;
  $187 = $183 + $186;
  $188 = ((($4)) + 440|0);
  $189 = +HEAPF64[$188>>3];
  $190 = $x90;
  $191 = $189 * $190;
  $192 = $187 + $191;
  $193 = ((($4)) + 432|0);
  HEAPF64[$193>>3] = $192;
  ;HEAP8[$j4valid>>0]=0|0;HEAP8[$j4valid+1>>0]=0|0;
  $194 = ((($4)) + 550|0);
  HEAP8[$194>>0] = 2;
  $195 = ((($4)) + 432|0);
  $196 = +HEAPF64[$195>>3];
  HEAPF64[$cj4array>>3] = $196;
  $197 = +HEAPF64[$cj4array>>3];
  $198 = $197 >= -1.0000020000000001;
  if ($198) {
   $199 = +HEAPF64[$cj4array>>3];
   $200 = $199 <= 1.0000020000000001;
   if ($200) {
    $201 = ((($j4valid)) + 1|0);
    HEAP8[$201>>0] = 1;
    HEAP8[$j4valid>>0] = 1;
    $202 = +HEAPF64[$cj4array>>3];
    $203 = (+__Z6IKacosd($202));
    HEAPF64[$j4array>>3] = $203;
    $204 = +HEAPF64[$j4array>>3];
    $205 = (+__Z5IKsind($204));
    HEAPF64[$sj4array>>3] = $205;
    $206 = +HEAPF64[$cj4array>>3];
    $207 = ((($cj4array)) + 8|0);
    HEAPF64[$207>>3] = $206;
    $208 = +HEAPF64[$j4array>>3];
    $209 = -$208;
    $210 = ((($j4array)) + 8|0);
    HEAPF64[$210>>3] = $209;
    $211 = +HEAPF64[$sj4array>>3];
    $212 = -$211;
    $213 = ((($sj4array)) + 8|0);
    HEAPF64[$213>>3] = $212;
   } else {
    label = 6;
   }
  } else {
   label = 6;
  }
  if ((label|0) == 6) {
   label = 0;
   $214 = +HEAPF64[$cj4array>>3];
   $215 = (__Z5isnanIdENSt3__19enable_ifIXsr3std13is_arithmeticIT_EE5valueEbE4typeES2_($214)|0);
   if ($215) {
    HEAP8[$j4valid>>0] = 1;
    HEAPF64[$cj4array>>3] = 1.0;
    HEAPF64[$sj4array>>3] = 0.0;
    HEAPF64[$j4array>>3] = 0.0;
   }
  }
  $ij4 = 0;
  while(1) {
   $216 = $ij4;
   $217 = ($216|0)<(2);
   if (!($217)) {
    break;
   }
   $218 = $ij4;
   $219 = (($j4valid) + ($218)|0);
   $220 = HEAP8[$219>>0]|0;
   $221 = $220&1;
   L14: do {
    if ($221) {
     $222 = $ij4;
     $223 = $222&255;
     $224 = ((($4)) + 548|0);
     HEAP8[$224>>0] = $223;
     $225 = ((($4)) + 548|0);
     $226 = ((($225)) + 1|0);
     HEAP8[$226>>0] = -1;
     $227 = $ij4;
     $228 = (($227) + 1)|0;
     $iij4 = $228;
     while(1) {
      $229 = $iij4;
      $230 = ($229|0)<(2);
      if (!($230)) {
       break;
      }
      $231 = $iij4;
      $232 = (($j4valid) + ($231)|0);
      $233 = HEAP8[$232>>0]|0;
      $234 = $233&1;
      if ($234) {
       $235 = $ij4;
       $236 = (($cj4array) + ($235<<3)|0);
       $237 = +HEAPF64[$236>>3];
       $238 = $iij4;
       $239 = (($cj4array) + ($238<<3)|0);
       $240 = +HEAPF64[$239>>3];
       $241 = $237 - $240;
       $242 = (+__Z5IKabsd($241));
       $243 = $242 < 9.9999999999999995E-7;
       if ($243) {
        $244 = $ij4;
        $245 = (($sj4array) + ($244<<3)|0);
        $246 = +HEAPF64[$245>>3];
        $247 = $iij4;
        $248 = (($sj4array) + ($247<<3)|0);
        $249 = +HEAPF64[$248>>3];
        $250 = $246 - $249;
        $251 = (+__Z5IKabsd($250));
        $252 = $251 < 9.9999999999999995E-7;
        if ($252) {
         label = 16;
         break;
        }
       }
      }
      $259 = $iij4;
      $260 = (($259) + 1)|0;
      $iij4 = $260;
     }
     if ((label|0) == 16) {
      label = 0;
      $253 = $iij4;
      $254 = (($j4valid) + ($253)|0);
      HEAP8[$254>>0] = 0;
      $255 = $iij4;
      $256 = $255&255;
      $257 = ((($4)) + 548|0);
      $258 = ((($257)) + 1|0);
      HEAP8[$258>>0] = $256;
     }
     $261 = $ij4;
     $262 = (($j4array) + ($261<<3)|0);
     $263 = +HEAPF64[$262>>3];
     $264 = ((($4)) + 160|0);
     HEAPF64[$264>>3] = $263;
     $265 = $ij4;
     $266 = (($cj4array) + ($265<<3)|0);
     $267 = +HEAPF64[$266>>3];
     $268 = ((($4)) + 168|0);
     HEAPF64[$268>>3] = $267;
     $269 = $ij4;
     $270 = (($sj4array) + ($269<<3)|0);
     $271 = +HEAPF64[$270>>3];
     $272 = ((($4)) + 176|0);
     HEAPF64[$272>>3] = $271;
     $273 = ((($4)) + 8|0);
     $274 = +HEAPF64[$273>>3];
     $275 = ((($4)) + 248|0);
     $276 = +HEAPF64[$275>>3];
     $277 = $274 * $276;
     $x96 = $277;
     $278 = ((($4)) + 8|0);
     $279 = +HEAPF64[$278>>3];
     $280 = ((($4)) + 272|0);
     $281 = +HEAPF64[$280>>3];
     $282 = $279 * $281;
     $x97 = $282;
     $283 = ((($4)) + 56|0);
     $284 = +HEAPF64[$283>>3];
     $285 = 1.0 * $284;
     $x98 = $285;
     $286 = ((($4)) + 16|0);
     $287 = +HEAPF64[$286>>3];
     $288 = 1.0 * $287;
     $x99 = $288;
     $289 = ((($4)) + 344|0);
     $290 = +HEAPF64[$289>>3];
     $291 = ((($4)) + 16|0);
     $292 = +HEAPF64[$291>>3];
     $293 = $290 * $292;
     $x100 = $293;
     $294 = ((($4)) + 48|0);
     $295 = +HEAPF64[$294>>3];
     $296 = ((($4)) + 96|0);
     $297 = +HEAPF64[$296>>3];
     $298 = $295 * $297;
     $x101 = $298;
     $299 = ((($4)) + 8|0);
     $300 = +HEAPF64[$299>>3];
     $301 = ((($4)) + 296|0);
     $302 = +HEAPF64[$301>>3];
     $303 = $300 * $302;
     $x102 = $303;
     $304 = $x90;
     $x103 = $304;
     $305 = ((($4)) + 88|0);
     $306 = +HEAPF64[$305>>3];
     $307 = ((($4)) + 56|0);
     $308 = +HEAPF64[$307>>3];
     $309 = $306 * $308;
     $310 = $x101;
     $311 = $309 + $310;
     $x104 = $311;
     $312 = ((($4)) + 8|0);
     $313 = +HEAPF64[$312>>3];
     $314 = $x103;
     $315 = $313 * $314;
     $x105 = $315;
     $316 = ((($4)) + 16|0);
     $317 = +HEAPF64[$316>>3];
     $318 = $x103;
     $319 = $317 * $318;
     $x106 = $319;
     $320 = ((($4)) + 16|0);
     $321 = +HEAPF64[$320>>3];
     $322 = $x104;
     $323 = $321 * $322;
     $x107 = $323;
     $324 = $x95;
     $x108 = $324;
     $325 = ((($4)) + 320|0);
     $326 = +HEAPF64[$325>>3];
     $327 = $x106;
     $328 = $326 * $327;
     $329 = $x103;
     $330 = $x96;
     $331 = $329 * $330;
     $332 = $328 + $331;
     $333 = ((($4)) + 392|0);
     $334 = +HEAPF64[$333>>3];
     $335 = $x108;
     $336 = $334 * $335;
     $337 = $332 + $336;
     $338 = ((($4)) + 240|0);
     HEAPF64[$338>>3] = $337;
     $339 = $x103;
     $340 = $x97;
     $341 = $339 * $340;
     $342 = ((($4)) + 416|0);
     $343 = +HEAPF64[$342>>3];
     $344 = $x108;
     $345 = $343 * $344;
     $346 = $341 + $345;
     $347 = $x100;
     $348 = $x103;
     $349 = $347 * $348;
     $350 = $346 + $349;
     $351 = ((($4)) + 264|0);
     HEAPF64[$351>>3] = $350;
     $352 = ((($4)) + 440|0);
     $353 = +HEAPF64[$352>>3];
     $354 = $x108;
     $355 = $353 * $354;
     $356 = $x102;
     $357 = $x103;
     $358 = $356 * $357;
     $359 = $355 + $358;
     $360 = ((($4)) + 368|0);
     $361 = +HEAPF64[$360>>3];
     $362 = $x106;
     $363 = $361 * $362;
     $364 = $359 + $363;
     $365 = ((($4)) + 288|0);
     HEAPF64[$365>>3] = $364;
     $366 = ((($4)) + 8|0);
     $367 = +HEAPF64[$366>>3];
     $368 = ((($4)) + 320|0);
     $369 = +HEAPF64[$368>>3];
     $370 = $367 * $369;
     $371 = ((($4)) + 248|0);
     $372 = +HEAPF64[$371>>3];
     $373 = -1.0 * $372;
     $374 = $x99;
     $375 = $373 * $374;
     $376 = $370 + $375;
     $377 = ((($4)) + 312|0);
     HEAPF64[$377>>3] = $376;
     $378 = ((($4)) + 272|0);
     $379 = +HEAPF64[$378>>3];
     $380 = -1.0 * $379;
     $381 = $x99;
     $382 = $380 * $381;
     $383 = ((($4)) + 8|0);
     $384 = +HEAPF64[$383>>3];
     $385 = ((($4)) + 344|0);
     $386 = +HEAPF64[$385>>3];
     $387 = $384 * $386;
     $388 = $382 + $387;
     $389 = ((($4)) + 336|0);
     HEAPF64[$389>>3] = $388;
     $390 = ((($4)) + 8|0);
     $391 = +HEAPF64[$390>>3];
     $392 = ((($4)) + 368|0);
     $393 = +HEAPF64[$392>>3];
     $394 = $391 * $393;
     $395 = ((($4)) + 296|0);
     $396 = +HEAPF64[$395>>3];
     $397 = -1.0 * $396;
     $398 = $x99;
     $399 = $397 * $398;
     $400 = $394 + $399;
     $401 = ((($4)) + 360|0);
     HEAPF64[$401>>3] = $400;
     $402 = ((($4)) + 320|0);
     $403 = +HEAPF64[$402>>3];
     $404 = $x107;
     $405 = $403 * $404;
     $406 = ((($4)) + 392|0);
     $407 = +HEAPF64[$406>>3];
     $408 = $x103;
     $409 = $407 * $408;
     $410 = $405 + $409;
     $411 = $x104;
     $412 = $x96;
     $413 = $411 * $412;
     $414 = $410 + $413;
     $415 = ((($4)) + 384|0);
     HEAPF64[$415>>3] = $414;
     $416 = ((($4)) + 416|0);
     $417 = +HEAPF64[$416>>3];
     $418 = $x103;
     $419 = $417 * $418;
     $420 = $x104;
     $421 = $x97;
     $422 = $420 * $421;
     $423 = $419 + $422;
     $424 = $x100;
     $425 = $x104;
     $426 = $424 * $425;
     $427 = $423 + $426;
     $428 = ((($4)) + 408|0);
     HEAPF64[$428>>3] = $427;
     $429 = ((($4)) + 440|0);
     $430 = +HEAPF64[$429>>3];
     $431 = $x103;
     $432 = $430 * $431;
     $433 = $x102;
     $434 = $x104;
     $435 = $433 * $434;
     $436 = $432 + $435;
     $437 = ((($4)) + 368|0);
     $438 = +HEAPF64[$437>>3];
     $439 = $x107;
     $440 = $438 * $439;
     $441 = $436 + $440;
     $442 = ((($4)) + 432|0);
     HEAPF64[$442>>3] = $441;
     $443 = ((($4)) + 176|0);
     $444 = +HEAPF64[$443>>3];
     HEAPF64[$j3eval>>3] = $444;
     $445 = ((($4)) + 176|0);
     $446 = +HEAPF64[$445>>3];
     $447 = (+__Z6IKsignd($446));
     $448 = ((($j3eval)) + 8|0);
     HEAPF64[$448>>3] = $447;
     $449 = +HEAPF64[$j3eval>>3];
     $450 = (+__Z5IKabsd($449));
     $451 = $450 < 9.9999999999999995E-7;
     if (!($451)) {
      $452 = ((($j3eval)) + 8|0);
      $453 = +HEAPF64[$452>>3];
      $454 = (+__Z5IKabsd($453));
      $455 = $454 < 9.9999999999999995E-7;
      if (!($455)) {
       ;HEAP8[$j3valid143>>0]=0|0;
       $9062 = ((($4)) + 547|0);
       HEAP8[$9062>>0] = 1;
       $9063 = ((($4)) + 176|0);
       $9064 = +HEAPF64[$9063>>3];
       $9065 = (+__Z6IKsignd($9064));
       __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x306,$9065,-1);
       $9066 = ((($x306)) + 8|0);
       $9067 = HEAP8[$9066>>0]|0;
       $9068 = $9067&1;
       if (!($9068)) {
        break;
       }
       $9069 = ((($4)) + 360|0);
       $9070 = +HEAPF64[$9069>>3];
       $9071 = ((($4)) + 288|0);
       $9072 = +HEAPF64[$9071>>3];
       __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x307,$9070,$9072,1.9999999999999999E-6);
       $9073 = ((($x307)) + 8|0);
       $9074 = HEAP8[$9073>>0]|0;
       $9075 = $9074&1;
       if (!($9075)) {
        break;
       }
       $9076 = +HEAPF64[$x306>>3];
       $9077 = 1.5707963267949001 * $9076;
       $9078 = -1.5707963267949001 + $9077;
       $9079 = +HEAPF64[$x307>>3];
       $9080 = $9078 + $9079;
       HEAPF64[$j3array140>>3] = $9080;
       $9081 = +HEAPF64[$j3array140>>3];
       $9082 = (+__Z5IKsind($9081));
       HEAPF64[$sj3array142>>3] = $9082;
       $9083 = +HEAPF64[$j3array140>>3];
       $9084 = (+__Z5IKcosd($9083));
       HEAPF64[$cj3array141>>3] = $9084;
       $9085 = +HEAPF64[$j3array140>>3];
       $9086 = $9085 > 3.14159265358979;
       $9087 = +HEAPF64[$j3array140>>3];
       if ($9086) {
        $9088 = $9087 - 6.2831853071795898;
        HEAPF64[$j3array140>>3] = $9088;
       } else {
        $9089 = $9087 < -3.14159265358979;
        if ($9089) {
         $9090 = +HEAPF64[$j3array140>>3];
         $9091 = $9090 + 6.2831853071795898;
         HEAPF64[$j3array140>>3] = $9091;
        }
       }
       HEAP8[$j3valid143>>0] = 1;
       $ij3144 = 0;
       while(1) {
        $9092 = $ij3144;
        $9093 = ($9092|0)<(1);
        if (!($9093)) {
         break L14;
        }
        $9094 = $ij3144;
        $9095 = (($j3valid143) + ($9094)|0);
        $9096 = HEAP8[$9095>>0]|0;
        $9097 = $9096&1;
        L39: do {
         if ($9097) {
          $9098 = $ij3144;
          $9099 = $9098&255;
          $9100 = ((($4)) + 545|0);
          HEAP8[$9100>>0] = $9099;
          $9101 = ((($4)) + 545|0);
          $9102 = ((($9101)) + 1|0);
          HEAP8[$9102>>0] = -1;
          $9103 = $ij3144;
          $9104 = (($9103) + 1)|0;
          $iij3145 = $9104;
          L41: while(1) {
           $9105 = $iij3145;
           $9106 = ($9105|0)<(1);
           if (!($9106)) {
            break;
           }
           $9107 = $iij3145;
           $9108 = (($j3valid143) + ($9107)|0);
           $9109 = HEAP8[$9108>>0]|0;
           $9110 = $9109&1;
           do {
            if ($9110) {
             $9111 = $ij3144;
             $9112 = (($cj3array141) + ($9111<<3)|0);
             $9113 = +HEAPF64[$9112>>3];
             $9114 = $iij3145;
             $9115 = (($cj3array141) + ($9114<<3)|0);
             $9116 = +HEAPF64[$9115>>3];
             $9117 = $9113 - $9116;
             $9118 = (+__Z5IKabsd($9117));
             $9119 = $9118 < 9.9999999999999995E-7;
             if (!($9119)) {
              break;
             }
             $9120 = $ij3144;
             $9121 = (($sj3array142) + ($9120<<3)|0);
             $9122 = +HEAPF64[$9121>>3];
             $9123 = $iij3145;
             $9124 = (($sj3array142) + ($9123<<3)|0);
             $9125 = +HEAPF64[$9124>>3];
             $9126 = $9122 - $9125;
             $9127 = (+__Z5IKabsd($9126));
             $9128 = $9127 < 9.9999999999999995E-7;
             if ($9128) {
              label = 1053;
              break L41;
             }
            }
           } while(0);
           $9135 = $iij3145;
           $9136 = (($9135) + 1)|0;
           $iij3145 = $9136;
          }
          if ((label|0) == 1053) {
           label = 0;
           $9129 = $iij3145;
           $9130 = (($j3valid143) + ($9129)|0);
           HEAP8[$9130>>0] = 0;
           $9131 = $iij3145;
           $9132 = $9131&255;
           $9133 = ((($4)) + 545|0);
           $9134 = ((($9133)) + 1|0);
           HEAP8[$9134>>0] = $9132;
          }
          $9137 = $ij3144;
          $9138 = (($j3array140) + ($9137<<3)|0);
          $9139 = +HEAPF64[$9138>>3];
          $9140 = ((($4)) + 120|0);
          HEAPF64[$9140>>3] = $9139;
          $9141 = $ij3144;
          $9142 = (($cj3array141) + ($9141<<3)|0);
          $9143 = +HEAPF64[$9142>>3];
          $9144 = ((($4)) + 128|0);
          HEAPF64[$9144>>3] = $9143;
          $9145 = $ij3144;
          $9146 = (($sj3array142) + ($9145<<3)|0);
          $9147 = +HEAPF64[$9146>>3];
          $9148 = ((($4)) + 136|0);
          HEAPF64[$9148>>3] = $9147;
          $9149 = ((($4)) + 120|0);
          $9150 = +HEAPF64[$9149>>3];
          $9151 = (+__Z5IKcosd($9150));
          $x308 = $9151;
          $9152 = ((($4)) + 120|0);
          $9153 = +HEAPF64[$9152>>3];
          $9154 = (+__Z5IKsind($9153));
          $x309 = $9154;
          $9155 = ((($4)) + 176|0);
          $9156 = +HEAPF64[$9155>>3];
          $9157 = 1.0 * $9156;
          $x310 = $9157;
          $9158 = ((($4)) + 168|0);
          $9159 = +HEAPF64[$9158>>3];
          $9160 = 1.0 * $9159;
          $x311 = $9160;
          $9161 = ((($4)) + 288|0);
          $9162 = +HEAPF64[$9161>>3];
          $9163 = $x308;
          $9164 = $9162 * $9163;
          $x312 = $9164;
          $9165 = ((($4)) + 360|0);
          $9166 = +HEAPF64[$9165>>3];
          $9167 = $x309;
          $9168 = $9166 * $9167;
          $x313 = $9168;
          $9169 = $x308;
          $9170 = -1.0 * $9169;
          $9171 = $x310;
          $9172 = $9170 * $9171;
          $9173 = ((($4)) + 288|0);
          $9174 = +HEAPF64[$9173>>3];
          $9175 = $9172 + $9174;
          HEAPF64[$evalcond146>>3] = $9175;
          $9176 = ((($4)) + 360|0);
          $9177 = +HEAPF64[$9176>>3];
          $9178 = $x309;
          $9179 = -1.0 * $9178;
          $9180 = $x310;
          $9181 = $9179 * $9180;
          $9182 = $9177 + $9181;
          $9183 = ((($evalcond146)) + 8|0);
          HEAPF64[$9183>>3] = $9182;
          $9184 = ((($4)) + 288|0);
          $9185 = +HEAPF64[$9184>>3];
          $9186 = -1.0 * $9185;
          $9187 = $x309;
          $9188 = $9186 * $9187;
          $9189 = ((($4)) + 360|0);
          $9190 = +HEAPF64[$9189>>3];
          $9191 = $x308;
          $9192 = $9190 * $9191;
          $9193 = $9188 + $9192;
          $9194 = ((($evalcond146)) + 16|0);
          HEAPF64[$9194>>3] = $9193;
          $9195 = $x313;
          $9196 = $x312;
          $9197 = $9195 + $9196;
          $9198 = $x310;
          $9199 = -1.0 * $9198;
          $9200 = $9197 + $9199;
          $9201 = ((($evalcond146)) + 24|0);
          HEAPF64[$9201>>3] = $9200;
          $9202 = ((($4)) + 168|0);
          $9203 = +HEAPF64[$9202>>3];
          $9204 = $x312;
          $9205 = $9203 * $9204;
          $9206 = ((($4)) + 168|0);
          $9207 = +HEAPF64[$9206>>3];
          $9208 = $x313;
          $9209 = $9207 * $9208;
          $9210 = $9205 + $9209;
          $9211 = ((($4)) + 432|0);
          $9212 = +HEAPF64[$9211>>3];
          $9213 = -1.0 * $9212;
          $9214 = $x310;
          $9215 = $9213 * $9214;
          $9216 = $9210 + $9215;
          $9217 = ((($evalcond146)) + 32|0);
          HEAPF64[$9217>>3] = $9216;
          $9218 = ((($4)) + 312|0);
          $9219 = +HEAPF64[$9218>>3];
          $9220 = -1.0 * $9219;
          $9221 = $x309;
          $9222 = $9220 * $9221;
          $9223 = $x310;
          $9224 = $9222 * $9223;
          $9225 = ((($4)) + 240|0);
          $9226 = +HEAPF64[$9225>>3];
          $9227 = -1.0 * $9226;
          $9228 = $x308;
          $9229 = $9227 * $9228;
          $9230 = $x310;
          $9231 = $9229 * $9230;
          $9232 = $9224 + $9231;
          $9233 = ((($4)) + 384|0);
          $9234 = +HEAPF64[$9233>>3];
          $9235 = -1.0 * $9234;
          $9236 = $x311;
          $9237 = $9235 * $9236;
          $9238 = $9232 + $9237;
          $9239 = ((($evalcond146)) + 40|0);
          HEAPF64[$9239>>3] = $9238;
          $9240 = ((($4)) + 408|0);
          $9241 = +HEAPF64[$9240>>3];
          $9242 = -1.0 * $9241;
          $9243 = $x311;
          $9244 = $9242 * $9243;
          $9245 = ((($4)) + 336|0);
          $9246 = +HEAPF64[$9245>>3];
          $9247 = -1.0 * $9246;
          $9248 = $x309;
          $9249 = $9247 * $9248;
          $9250 = $x310;
          $9251 = $9249 * $9250;
          $9252 = $9244 + $9251;
          $9253 = ((($4)) + 264|0);
          $9254 = +HEAPF64[$9253>>3];
          $9255 = -1.0 * $9254;
          $9256 = $x308;
          $9257 = $9255 * $9256;
          $9258 = $x310;
          $9259 = $9257 * $9258;
          $9260 = $9252 + $9259;
          $9261 = ((($evalcond146)) + 48|0);
          HEAPF64[$9261>>3] = $9260;
          $9262 = $x310;
          $9263 = -1.0 * $9262;
          $9264 = $x313;
          $9265 = $9263 * $9264;
          $9266 = 1.0 + $9265;
          $9267 = $x310;
          $9268 = -1.0 * $9267;
          $9269 = $x312;
          $9270 = $9268 * $9269;
          $9271 = $9266 + $9270;
          $9272 = ((($4)) + 432|0);
          $9273 = +HEAPF64[$9272>>3];
          $9274 = -1.0 * $9273;
          $9275 = $x311;
          $9276 = $9274 * $9275;
          $9277 = $9271 + $9276;
          $9278 = ((($evalcond146)) + 56|0);
          HEAPF64[$9278>>3] = $9277;
          $9279 = +HEAPF64[$evalcond146>>3];
          $9280 = (+__Z5IKabsd($9279));
          $9281 = $9280 > 5.0000000000000004E-6;
          if (!($9281)) {
           $9282 = ((($evalcond146)) + 8|0);
           $9283 = +HEAPF64[$9282>>3];
           $9284 = (+__Z5IKabsd($9283));
           $9285 = $9284 > 5.0000000000000004E-6;
           if (!($9285)) {
            $9286 = ((($evalcond146)) + 16|0);
            $9287 = +HEAPF64[$9286>>3];
            $9288 = (+__Z5IKabsd($9287));
            $9289 = $9288 > 5.0000000000000004E-6;
            if (!($9289)) {
             $9290 = ((($evalcond146)) + 24|0);
             $9291 = +HEAPF64[$9290>>3];
             $9292 = (+__Z5IKabsd($9291));
             $9293 = $9292 > 5.0000000000000004E-6;
             if ($9293) {
              break;
             }
             $9294 = ((($evalcond146)) + 32|0);
             $9295 = +HEAPF64[$9294>>3];
             $9296 = (+__Z5IKabsd($9295));
             $9297 = $9296 > 5.0000000000000004E-6;
             if ($9297) {
              break;
             }
             $9298 = ((($evalcond146)) + 40|0);
             $9299 = +HEAPF64[$9298>>3];
             $9300 = (+__Z5IKabsd($9299));
             $9301 = $9300 > 5.0000000000000004E-6;
             if ($9301) {
              break;
             }
             $9302 = ((($evalcond146)) + 48|0);
             $9303 = +HEAPF64[$9302>>3];
             $9304 = (+__Z5IKabsd($9303));
             $9305 = $9304 > 5.0000000000000004E-6;
             if ($9305) {
              break;
             }
             $9306 = ((($evalcond146)) + 56|0);
             $9307 = +HEAPF64[$9306>>3];
             $9308 = (+__Z5IKabsd($9307));
             $9309 = $9308 > 5.0000000000000004E-6;
             if ($9309) {
              break;
             }
             $9310 = ((($4)) + 8|0);
             $9311 = +HEAPF64[$9310>>3];
             $9312 = ((($4)) + 248|0);
             $9313 = +HEAPF64[$9312>>3];
             $9314 = $9311 * $9313;
             $x314 = $9314;
             $9315 = ((($4)) + 8|0);
             $9316 = +HEAPF64[$9315>>3];
             $9317 = ((($4)) + 272|0);
             $9318 = +HEAPF64[$9317>>3];
             $9319 = $9316 * $9318;
             $x315 = $9319;
             $9320 = ((($4)) + 56|0);
             $9321 = +HEAPF64[$9320>>3];
             $9322 = 1.0 * $9321;
             $x316 = $9322;
             $9323 = ((($4)) + 16|0);
             $9324 = +HEAPF64[$9323>>3];
             $9325 = 1.0 * $9324;
             $x317 = $9325;
             $9326 = ((($4)) + 344|0);
             $9327 = +HEAPF64[$9326>>3];
             $9328 = ((($4)) + 16|0);
             $9329 = +HEAPF64[$9328>>3];
             $9330 = $9327 * $9329;
             $x318 = $9330;
             $9331 = ((($4)) + 48|0);
             $9332 = +HEAPF64[$9331>>3];
             $9333 = ((($4)) + 96|0);
             $9334 = +HEAPF64[$9333>>3];
             $9335 = $9332 * $9334;
             $x319 = $9335;
             $9336 = ((($4)) + 8|0);
             $9337 = +HEAPF64[$9336>>3];
             $9338 = ((($4)) + 296|0);
             $9339 = +HEAPF64[$9338>>3];
             $9340 = $9337 * $9339;
             $x320 = $9340;
             $9341 = $x90;
             $x321 = $9341;
             $9342 = ((($4)) + 88|0);
             $9343 = +HEAPF64[$9342>>3];
             $9344 = ((($4)) + 56|0);
             $9345 = +HEAPF64[$9344>>3];
             $9346 = $9343 * $9345;
             $9347 = $x319;
             $9348 = $9346 + $9347;
             $x322 = $9348;
             $9349 = ((($4)) + 8|0);
             $9350 = +HEAPF64[$9349>>3];
             $9351 = $x321;
             $9352 = $9350 * $9351;
             $x323 = $9352;
             $9353 = ((($4)) + 16|0);
             $9354 = +HEAPF64[$9353>>3];
             $9355 = $x321;
             $9356 = $9354 * $9355;
             $x324 = $9356;
             $9357 = ((($4)) + 16|0);
             $9358 = +HEAPF64[$9357>>3];
             $9359 = $x322;
             $9360 = $9358 * $9359;
             $x325 = $9360;
             $9361 = $x95;
             $x326 = $9361;
             $9362 = ((($4)) + 392|0);
             $9363 = +HEAPF64[$9362>>3];
             $9364 = $x326;
             $9365 = $9363 * $9364;
             $9366 = ((($4)) + 320|0);
             $9367 = +HEAPF64[$9366>>3];
             $9368 = $x324;
             $9369 = $9367 * $9368;
             $9370 = $9365 + $9369;
             $9371 = $x314;
             $9372 = $x321;
             $9373 = $9371 * $9372;
             $9374 = $9370 + $9373;
             $9375 = ((($4)) + 240|0);
             HEAPF64[$9375>>3] = $9374;
             $9376 = $x318;
             $9377 = $x321;
             $9378 = $9376 * $9377;
             $9379 = ((($4)) + 416|0);
             $9380 = +HEAPF64[$9379>>3];
             $9381 = $x326;
             $9382 = $9380 * $9381;
             $9383 = $9378 + $9382;
             $9384 = $x315;
             $9385 = $x321;
             $9386 = $9384 * $9385;
             $9387 = $9383 + $9386;
             $9388 = ((($4)) + 264|0);
             HEAPF64[$9388>>3] = $9387;
             $9389 = ((($4)) + 368|0);
             $9390 = +HEAPF64[$9389>>3];
             $9391 = $x324;
             $9392 = $9390 * $9391;
             $9393 = $x320;
             $9394 = $x321;
             $9395 = $9393 * $9394;
             $9396 = $9392 + $9395;
             $9397 = ((($4)) + 440|0);
             $9398 = +HEAPF64[$9397>>3];
             $9399 = $x326;
             $9400 = $9398 * $9399;
             $9401 = $9396 + $9400;
             $9402 = ((($4)) + 288|0);
             HEAPF64[$9402>>3] = $9401;
             $9403 = ((($4)) + 248|0);
             $9404 = +HEAPF64[$9403>>3];
             $9405 = -1.0 * $9404;
             $9406 = $x317;
             $9407 = $9405 * $9406;
             $9408 = ((($4)) + 8|0);
             $9409 = +HEAPF64[$9408>>3];
             $9410 = ((($4)) + 320|0);
             $9411 = +HEAPF64[$9410>>3];
             $9412 = $9409 * $9411;
             $9413 = $9407 + $9412;
             $9414 = ((($4)) + 312|0);
             HEAPF64[$9414>>3] = $9413;
             $9415 = ((($4)) + 272|0);
             $9416 = +HEAPF64[$9415>>3];
             $9417 = -1.0 * $9416;
             $9418 = $x317;
             $9419 = $9417 * $9418;
             $9420 = ((($4)) + 8|0);
             $9421 = +HEAPF64[$9420>>3];
             $9422 = ((($4)) + 344|0);
             $9423 = +HEAPF64[$9422>>3];
             $9424 = $9421 * $9423;
             $9425 = $9419 + $9424;
             $9426 = ((($4)) + 336|0);
             HEAPF64[$9426>>3] = $9425;
             $9427 = ((($4)) + 296|0);
             $9428 = +HEAPF64[$9427>>3];
             $9429 = -1.0 * $9428;
             $9430 = $x317;
             $9431 = $9429 * $9430;
             $9432 = ((($4)) + 8|0);
             $9433 = +HEAPF64[$9432>>3];
             $9434 = ((($4)) + 368|0);
             $9435 = +HEAPF64[$9434>>3];
             $9436 = $9433 * $9435;
             $9437 = $9431 + $9436;
             $9438 = ((($4)) + 360|0);
             HEAPF64[$9438>>3] = $9437;
             $9439 = ((($4)) + 392|0);
             $9440 = +HEAPF64[$9439>>3];
             $9441 = $x321;
             $9442 = $9440 * $9441;
             $9443 = ((($4)) + 320|0);
             $9444 = +HEAPF64[$9443>>3];
             $9445 = $x325;
             $9446 = $9444 * $9445;
             $9447 = $9442 + $9446;
             $9448 = $x314;
             $9449 = $x322;
             $9450 = $9448 * $9449;
             $9451 = $9447 + $9450;
             $9452 = ((($4)) + 384|0);
             HEAPF64[$9452>>3] = $9451;
             $9453 = $x318;
             $9454 = $x322;
             $9455 = $9453 * $9454;
             $9456 = ((($4)) + 416|0);
             $9457 = +HEAPF64[$9456>>3];
             $9458 = $x321;
             $9459 = $9457 * $9458;
             $9460 = $9455 + $9459;
             $9461 = $x315;
             $9462 = $x322;
             $9463 = $9461 * $9462;
             $9464 = $9460 + $9463;
             $9465 = ((($4)) + 408|0);
             HEAPF64[$9465>>3] = $9464;
             $9466 = ((($4)) + 368|0);
             $9467 = +HEAPF64[$9466>>3];
             $9468 = $x325;
             $9469 = $9467 * $9468;
             $9470 = $x320;
             $9471 = $x322;
             $9472 = $9470 * $9471;
             $9473 = $9469 + $9472;
             $9474 = ((($4)) + 440|0);
             $9475 = +HEAPF64[$9474>>3];
             $9476 = $x321;
             $9477 = $9475 * $9476;
             $9478 = $9473 + $9477;
             $9479 = ((($4)) + 432|0);
             HEAPF64[$9479>>3] = $9478;
             $9480 = ((($4)) + 176|0);
             $9481 = +HEAPF64[$9480>>3];
             HEAPF64[$j5eval147>>3] = $9481;
             $9482 = ((($4)) + 176|0);
             $9483 = +HEAPF64[$9482>>3];
             $9484 = (+__Z6IKsignd($9483));
             $9485 = ((($j5eval147)) + 8|0);
             HEAPF64[$9485>>3] = $9484;
             $9486 = +HEAPF64[$j5eval147>>3];
             $9487 = (+__Z5IKabsd($9486));
             $9488 = $9487 < 9.9999999999999995E-7;
             do {
              if (!($9488)) {
               $9489 = ((($j5eval147)) + 8|0);
               $9490 = +HEAPF64[$9489>>3];
               $9491 = (+__Z5IKabsd($9490));
               $9492 = $9491 < 9.9999999999999995E-7;
               if ($9492) {
                break;
               }
               ;HEAP8[$j5valid253>>0]=0|0;
               $15545 = ((($4)) + 553|0);
               HEAP8[$15545>>0] = 1;
               $15546 = ((($4)) + 176|0);
               $15547 = +HEAPF64[$15546>>3];
               $15548 = (+__Z6IKsignd($15547));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x457,$15548,-1);
               $15549 = ((($x457)) + 8|0);
               $15550 = HEAP8[$15549>>0]|0;
               $15551 = $15550&1;
               if (!($15551)) {
                break L39;
               }
               $15552 = ((($4)) + 408|0);
               $15553 = +HEAPF64[$15552>>3];
               $15554 = ((($4)) + 384|0);
               $15555 = +HEAPF64[$15554>>3];
               $15556 = -1.0 * $15555;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x458,$15553,$15556,1.9999999999999999E-6);
               $15557 = ((($x458)) + 8|0);
               $15558 = HEAP8[$15557>>0]|0;
               $15559 = $15558&1;
               if (!($15559)) {
                break L39;
               }
               $15560 = +HEAPF64[$x457>>3];
               $15561 = 1.5707963267949001 * $15560;
               $15562 = -1.5707963267949001 + $15561;
               $15563 = +HEAPF64[$x458>>3];
               $15564 = $15562 + $15563;
               HEAPF64[$j5array250>>3] = $15564;
               $15565 = +HEAPF64[$j5array250>>3];
               $15566 = (+__Z5IKsind($15565));
               HEAPF64[$sj5array252>>3] = $15566;
               $15567 = +HEAPF64[$j5array250>>3];
               $15568 = (+__Z5IKcosd($15567));
               HEAPF64[$cj5array251>>3] = $15568;
               $15569 = +HEAPF64[$j5array250>>3];
               $15570 = $15569 > 3.14159265358979;
               $15571 = +HEAPF64[$j5array250>>3];
               do {
                if ($15570) {
                 $15572 = $15571 - 6.2831853071795898;
                 HEAPF64[$j5array250>>3] = $15572;
                } else {
                 $15573 = $15571 < -3.14159265358979;
                 if (!($15573)) {
                  break;
                 }
                 $15574 = +HEAPF64[$j5array250>>3];
                 $15575 = $15574 + 6.2831853071795898;
                 HEAPF64[$j5array250>>3] = $15575;
                }
               } while(0);
               HEAP8[$j5valid253>>0] = 1;
               $ij5254 = 0;
               while(1) {
                $15576 = $ij5254;
                $15577 = ($15576|0)<(1);
                if (!($15577)) {
                 break L39;
                }
                $15578 = $ij5254;
                $15579 = (($j5valid253) + ($15578)|0);
                $15580 = HEAP8[$15579>>0]|0;
                $15581 = $15580&1;
                do {
                 if ($15581) {
                  $15582 = $ij5254;
                  $15583 = $15582&255;
                  $15584 = ((($4)) + 551|0);
                  HEAP8[$15584>>0] = $15583;
                  $15585 = ((($4)) + 551|0);
                  $15586 = ((($15585)) + 1|0);
                  HEAP8[$15586>>0] = -1;
                  $15587 = $ij5254;
                  $15588 = (($15587) + 1)|0;
                  $iij5255 = $15588;
                  L74: while(1) {
                   $15589 = $iij5255;
                   $15590 = ($15589|0)<(1);
                   if (!($15590)) {
                    break;
                   }
                   $15591 = $iij5255;
                   $15592 = (($j5valid253) + ($15591)|0);
                   $15593 = HEAP8[$15592>>0]|0;
                   $15594 = $15593&1;
                   do {
                    if ($15594) {
                     $15595 = $ij5254;
                     $15596 = (($cj5array251) + ($15595<<3)|0);
                     $15597 = +HEAPF64[$15596>>3];
                     $15598 = $iij5255;
                     $15599 = (($cj5array251) + ($15598<<3)|0);
                     $15600 = +HEAPF64[$15599>>3];
                     $15601 = $15597 - $15600;
                     $15602 = (+__Z5IKabsd($15601));
                     $15603 = $15602 < 9.9999999999999995E-7;
                     if (!($15603)) {
                      break;
                     }
                     $15604 = $ij5254;
                     $15605 = (($sj5array252) + ($15604<<3)|0);
                     $15606 = +HEAPF64[$15605>>3];
                     $15607 = $iij5255;
                     $15608 = (($sj5array252) + ($15607<<3)|0);
                     $15609 = +HEAPF64[$15608>>3];
                     $15610 = $15606 - $15609;
                     $15611 = (+__Z5IKabsd($15610));
                     $15612 = $15611 < 9.9999999999999995E-7;
                     if ($15612) {
                      label = 1818;
                      break L74;
                     }
                    }
                   } while(0);
                   $15619 = $iij5255;
                   $15620 = (($15619) + 1)|0;
                   $iij5255 = $15620;
                  }
                  if ((label|0) == 1818) {
                   label = 0;
                   $15613 = $iij5255;
                   $15614 = (($j5valid253) + ($15613)|0);
                   HEAP8[$15614>>0] = 0;
                   $15615 = $iij5255;
                   $15616 = $15615&255;
                   $15617 = ((($4)) + 551|0);
                   $15618 = ((($15617)) + 1|0);
                   HEAP8[$15618>>0] = $15616;
                  }
                  $15621 = $ij5254;
                  $15622 = (($j5array250) + ($15621<<3)|0);
                  $15623 = +HEAPF64[$15622>>3];
                  $15624 = ((($4)) + 200|0);
                  HEAPF64[$15624>>3] = $15623;
                  $15625 = $ij5254;
                  $15626 = (($cj5array251) + ($15625<<3)|0);
                  $15627 = +HEAPF64[$15626>>3];
                  $15628 = ((($4)) + 208|0);
                  HEAPF64[$15628>>3] = $15627;
                  $15629 = $ij5254;
                  $15630 = (($sj5array252) + ($15629<<3)|0);
                  $15631 = +HEAPF64[$15630>>3];
                  $15632 = ((($4)) + 216|0);
                  HEAPF64[$15632>>3] = $15631;
                  $15633 = ((($4)) + 200|0);
                  $15634 = +HEAPF64[$15633>>3];
                  $15635 = (+__Z5IKsind($15634));
                  $x459 = $15635;
                  $15636 = ((($4)) + 200|0);
                  $15637 = +HEAPF64[$15636>>3];
                  $15638 = (+__Z5IKcosd($15637));
                  $x460 = $15638;
                  $15639 = ((($4)) + 128|0);
                  $15640 = +HEAPF64[$15639>>3];
                  $15641 = ((($4)) + 240|0);
                  $15642 = +HEAPF64[$15641>>3];
                  $15643 = $15640 * $15642;
                  $x461 = $15643;
                  $15644 = ((($4)) + 128|0);
                  $15645 = +HEAPF64[$15644>>3];
                  $15646 = ((($4)) + 168|0);
                  $15647 = +HEAPF64[$15646>>3];
                  $15648 = $15645 * $15647;
                  $x462 = $15648;
                  $15649 = ((($4)) + 168|0);
                  $15650 = +HEAPF64[$15649>>3];
                  $15651 = ((($4)) + 136|0);
                  $15652 = +HEAPF64[$15651>>3];
                  $15653 = $15650 * $15652;
                  $x463 = $15653;
                  $15654 = ((($4)) + 136|0);
                  $15655 = +HEAPF64[$15654>>3];
                  $15656 = 1.0 * $15655;
                  $x464 = $15656;
                  $15657 = ((($4)) + 176|0);
                  $15658 = +HEAPF64[$15657>>3];
                  $15659 = 1.0 * $15658;
                  $x465 = $15659;
                  $15660 = $x460;
                  $15661 = 1.0 * $15660;
                  $x466 = $15661;
                  $15662 = ((($4)) + 136|0);
                  $15663 = +HEAPF64[$15662>>3];
                  $15664 = $x459;
                  $15665 = $15663 * $15664;
                  $x467 = $15665;
                  $15666 = $x459;
                  $15667 = 1.0 * $15666;
                  $x468 = $15667;
                  $15668 = ((($4)) + 176|0);
                  $15669 = +HEAPF64[$15668>>3];
                  $15670 = $x460;
                  $15671 = $15669 * $15670;
                  $15672 = ((($4)) + 384|0);
                  $15673 = +HEAPF64[$15672>>3];
                  $15674 = $15671 + $15673;
                  HEAPF64[$evalcond256>>3] = $15674;
                  $15675 = $x459;
                  $15676 = -1.0 * $15675;
                  $15677 = $x465;
                  $15678 = $15676 * $15677;
                  $15679 = ((($4)) + 408|0);
                  $15680 = +HEAPF64[$15679>>3];
                  $15681 = $15678 + $15680;
                  $15682 = ((($evalcond256)) + 8|0);
                  HEAPF64[$15682>>3] = $15681;
                  $15683 = ((($4)) + 168|0);
                  $15684 = +HEAPF64[$15683>>3];
                  $15685 = $x459;
                  $15686 = $15684 * $15685;
                  $15687 = ((($4)) + 336|0);
                  $15688 = +HEAPF64[$15687>>3];
                  $15689 = ((($4)) + 136|0);
                  $15690 = +HEAPF64[$15689>>3];
                  $15691 = $15688 * $15690;
                  $15692 = $15686 + $15691;
                  $15693 = ((($4)) + 128|0);
                  $15694 = +HEAPF64[$15693>>3];
                  $15695 = ((($4)) + 264|0);
                  $15696 = +HEAPF64[$15695>>3];
                  $15697 = $15694 * $15696;
                  $15698 = $15692 + $15697;
                  $15699 = ((($evalcond256)) + 16|0);
                  HEAPF64[$15699>>3] = $15698;
                  $15700 = $x468;
                  $15701 = -1.0 * $15700;
                  $15702 = ((($4)) + 240|0);
                  $15703 = +HEAPF64[$15702>>3];
                  $15704 = -1.0 * $15703;
                  $15705 = $x464;
                  $15706 = $15704 * $15705;
                  $15707 = $15701 + $15706;
                  $15708 = ((($4)) + 128|0);
                  $15709 = +HEAPF64[$15708>>3];
                  $15710 = ((($4)) + 312|0);
                  $15711 = +HEAPF64[$15710>>3];
                  $15712 = $15709 * $15711;
                  $15713 = $15707 + $15712;
                  $15714 = ((($evalcond256)) + 24|0);
                  HEAPF64[$15714>>3] = $15713;
                  $15715 = ((($4)) + 264|0);
                  $15716 = +HEAPF64[$15715>>3];
                  $15717 = -1.0 * $15716;
                  $15718 = $x464;
                  $15719 = $15717 * $15718;
                  $15720 = $x466;
                  $15721 = -1.0 * $15720;
                  $15722 = $15719 + $15721;
                  $15723 = ((($4)) + 128|0);
                  $15724 = +HEAPF64[$15723>>3];
                  $15725 = ((($4)) + 336|0);
                  $15726 = +HEAPF64[$15725>>3];
                  $15727 = $15724 * $15726;
                  $15728 = $15722 + $15727;
                  $15729 = ((($evalcond256)) + 32|0);
                  HEAPF64[$15729>>3] = $15728;
                  $15730 = ((($4)) + 136|0);
                  $15731 = +HEAPF64[$15730>>3];
                  $15732 = $x460;
                  $15733 = $15731 * $15732;
                  $15734 = $x459;
                  $15735 = $x462;
                  $15736 = $15734 * $15735;
                  $15737 = $15733 + $15736;
                  $15738 = ((($4)) + 264|0);
                  $15739 = +HEAPF64[$15738>>3];
                  $15740 = $15737 + $15739;
                  $15741 = ((($evalcond256)) + 40|0);
                  HEAPF64[$15741>>3] = $15740;
                  $15742 = ((($4)) + 312|0);
                  $15743 = +HEAPF64[$15742>>3];
                  $15744 = ((($4)) + 136|0);
                  $15745 = +HEAPF64[$15744>>3];
                  $15746 = $15743 * $15745;
                  $15747 = ((($4)) + 168|0);
                  $15748 = +HEAPF64[$15747>>3];
                  $15749 = -1.0 * $15748;
                  $15750 = $x466;
                  $15751 = $15749 * $15750;
                  $15752 = $15746 + $15751;
                  $15753 = $x461;
                  $15754 = $15752 + $15753;
                  $15755 = ((($evalcond256)) + 48|0);
                  HEAPF64[$15755>>3] = $15754;
                  $15756 = $x462;
                  $15757 = -1.0 * $15756;
                  $15758 = $x466;
                  $15759 = $15757 * $15758;
                  $15760 = $x467;
                  $15761 = $15759 + $15760;
                  $15762 = ((($4)) + 240|0);
                  $15763 = +HEAPF64[$15762>>3];
                  $15764 = $15761 + $15763;
                  $15765 = ((($evalcond256)) + 56|0);
                  HEAPF64[$15765>>3] = $15764;
                  $15766 = $x459;
                  $15767 = $x463;
                  $15768 = $15766 * $15767;
                  $15769 = ((($4)) + 336|0);
                  $15770 = +HEAPF64[$15769>>3];
                  $15771 = $15768 + $15770;
                  $15772 = ((($4)) + 128|0);
                  $15773 = +HEAPF64[$15772>>3];
                  $15774 = -1.0 * $15773;
                  $15775 = $x466;
                  $15776 = $15774 * $15775;
                  $15777 = $15771 + $15776;
                  $15778 = ((($evalcond256)) + 64|0);
                  HEAPF64[$15778>>3] = $15777;
                  $15779 = $x463;
                  $15780 = -1.0 * $15779;
                  $15781 = $x466;
                  $15782 = $15780 * $15781;
                  $15783 = ((($4)) + 312|0);
                  $15784 = +HEAPF64[$15783>>3];
                  $15785 = $15782 + $15784;
                  $15786 = ((($4)) + 128|0);
                  $15787 = +HEAPF64[$15786>>3];
                  $15788 = -1.0 * $15787;
                  $15789 = $x468;
                  $15790 = $15788 * $15789;
                  $15791 = $15785 + $15790;
                  $15792 = ((($evalcond256)) + 72|0);
                  HEAPF64[$15792>>3] = $15791;
                  $15793 = ((($4)) + 408|0);
                  $15794 = +HEAPF64[$15793>>3];
                  $15795 = -1.0 * $15794;
                  $15796 = $x465;
                  $15797 = $15795 * $15796;
                  $15798 = ((($4)) + 336|0);
                  $15799 = +HEAPF64[$15798>>3];
                  $15800 = $x463;
                  $15801 = $15799 * $15800;
                  $15802 = $15797 + $15801;
                  $15803 = ((($4)) + 264|0);
                  $15804 = +HEAPF64[$15803>>3];
                  $15805 = $x462;
                  $15806 = $15804 * $15805;
                  $15807 = $15802 + $15806;
                  $15808 = $x459;
                  $15809 = $15807 + $15808;
                  $15810 = ((($evalcond256)) + 80|0);
                  HEAPF64[$15810>>3] = $15809;
                  $15811 = ((($4)) + 168|0);
                  $15812 = +HEAPF64[$15811>>3];
                  $15813 = $x461;
                  $15814 = $15812 * $15813;
                  $15815 = ((($4)) + 312|0);
                  $15816 = +HEAPF64[$15815>>3];
                  $15817 = $x463;
                  $15818 = $15816 * $15817;
                  $15819 = $15814 + $15818;
                  $15820 = ((($4)) + 384|0);
                  $15821 = +HEAPF64[$15820>>3];
                  $15822 = -1.0 * $15821;
                  $15823 = $x465;
                  $15824 = $15822 * $15823;
                  $15825 = $15819 + $15824;
                  $15826 = $x466;
                  $15827 = -1.0 * $15826;
                  $15828 = $15825 + $15827;
                  $15829 = ((($evalcond256)) + 88|0);
                  HEAPF64[$15829>>3] = $15828;
                  $15830 = +HEAPF64[$evalcond256>>3];
                  $15831 = (+__Z5IKabsd($15830));
                  $15832 = $15831 > 5.0000000000000004E-6;
                  if ($15832) {
                   break;
                  }
                  $15833 = ((($evalcond256)) + 8|0);
                  $15834 = +HEAPF64[$15833>>3];
                  $15835 = (+__Z5IKabsd($15834));
                  $15836 = $15835 > 5.0000000000000004E-6;
                  if ($15836) {
                   break;
                  }
                  $15837 = ((($evalcond256)) + 16|0);
                  $15838 = +HEAPF64[$15837>>3];
                  $15839 = (+__Z5IKabsd($15838));
                  $15840 = $15839 > 5.0000000000000004E-6;
                  if ($15840) {
                   break;
                  }
                  $15841 = ((($evalcond256)) + 24|0);
                  $15842 = +HEAPF64[$15841>>3];
                  $15843 = (+__Z5IKabsd($15842));
                  $15844 = $15843 > 5.0000000000000004E-6;
                  if ($15844) {
                   break;
                  }
                  $15845 = ((($evalcond256)) + 32|0);
                  $15846 = +HEAPF64[$15845>>3];
                  $15847 = (+__Z5IKabsd($15846));
                  $15848 = $15847 > 5.0000000000000004E-6;
                  if ($15848) {
                   break;
                  }
                  $15849 = ((($evalcond256)) + 40|0);
                  $15850 = +HEAPF64[$15849>>3];
                  $15851 = (+__Z5IKabsd($15850));
                  $15852 = $15851 > 5.0000000000000004E-6;
                  if ($15852) {
                   break;
                  }
                  $15853 = ((($evalcond256)) + 48|0);
                  $15854 = +HEAPF64[$15853>>3];
                  $15855 = (+__Z5IKabsd($15854));
                  $15856 = $15855 > 5.0000000000000004E-6;
                  if ($15856) {
                   break;
                  }
                  $15857 = ((($evalcond256)) + 56|0);
                  $15858 = +HEAPF64[$15857>>3];
                  $15859 = (+__Z5IKabsd($15858));
                  $15860 = $15859 > 5.0000000000000004E-6;
                  if ($15860) {
                   break;
                  }
                  $15861 = ((($evalcond256)) + 64|0);
                  $15862 = +HEAPF64[$15861>>3];
                  $15863 = (+__Z5IKabsd($15862));
                  $15864 = $15863 > 5.0000000000000004E-6;
                  if ($15864) {
                   break;
                  }
                  $15865 = ((($evalcond256)) + 72|0);
                  $15866 = +HEAPF64[$15865>>3];
                  $15867 = (+__Z5IKabsd($15866));
                  $15868 = $15867 > 5.0000000000000004E-6;
                  if ($15868) {
                   break;
                  }
                  $15869 = ((($evalcond256)) + 80|0);
                  $15870 = +HEAPF64[$15869>>3];
                  $15871 = (+__Z5IKabsd($15870));
                  $15872 = $15871 > 5.0000000000000004E-6;
                  if ($15872) {
                   break;
                  }
                  $15873 = ((($evalcond256)) + 88|0);
                  $15874 = +HEAPF64[$15873>>3];
                  $15875 = (+__Z5IKabsd($15874));
                  $15876 = $15875 > 5.0000000000000004E-6;
                  if ($15876) {
                   break;
                  }
                  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos257,6);
                  __THREW__ = 0;
                  $15877 = (invoke_iii(416,($vinfos257|0),0)|0);
                  $15878 = __THREW__; __THREW__ = 0;
                  $15879 = $15878&1;
                  if ($15879) {
                   label = 1867;
                   break L1;
                  }
                  $15880 = ((($15877)) + 17|0);
                  HEAP8[$15880>>0] = 1;
                  $15881 = +HEAPF64[$4>>3];
                  __THREW__ = 0;
                  $15882 = (invoke_iii(416,($vinfos257|0),0)|0);
                  $15883 = __THREW__; __THREW__ = 0;
                  $15884 = $15883&1;
                  if ($15884) {
                   label = 1867;
                   break L1;
                  }
                  $15885 = ((($15882)) + 8|0);
                  HEAPF64[$15885>>3] = $15881;
                  $15886 = ((($4)) + 536|0);
                  $15887 = HEAP8[$15886>>0]|0;
                  __THREW__ = 0;
                  $15888 = (invoke_iii(416,($vinfos257|0),0)|0);
                  $15889 = __THREW__; __THREW__ = 0;
                  $15890 = $15889&1;
                  if ($15890) {
                   label = 1867;
                   break L1;
                  }
                  $15891 = ((($15888)) + 19|0);
                  HEAP8[$15891>>0] = $15887;
                  $15892 = ((($4)) + 536|0);
                  $15893 = ((($15892)) + 1|0);
                  $15894 = HEAP8[$15893>>0]|0;
                  __THREW__ = 0;
                  $15895 = (invoke_iii(416,($vinfos257|0),0)|0);
                  $15896 = __THREW__; __THREW__ = 0;
                  $15897 = $15896&1;
                  if ($15897) {
                   label = 1867;
                   break L1;
                  }
                  $15898 = ((($15895)) + 19|0);
                  $15899 = ((($15898)) + 1|0);
                  HEAP8[$15899>>0] = $15894;
                  $15900 = ((($4)) + 538|0);
                  $15901 = HEAP8[$15900>>0]|0;
                  __THREW__ = 0;
                  $15902 = (invoke_iii(416,($vinfos257|0),0)|0);
                  $15903 = __THREW__; __THREW__ = 0;
                  $15904 = $15903&1;
                  if ($15904) {
                   label = 1867;
                   break L1;
                  }
                  $15905 = ((($15902)) + 18|0);
                  HEAP8[$15905>>0] = $15901;
                  __THREW__ = 0;
                  $15906 = (invoke_iii(416,($vinfos257|0),1)|0);
                  $15907 = __THREW__; __THREW__ = 0;
                  $15908 = $15907&1;
                  if ($15908) {
                   label = 1867;
                   break L1;
                  }
                  $15909 = ((($15906)) + 17|0);
                  HEAP8[$15909>>0] = 1;
                  $15910 = ((($4)) + 40|0);
                  $15911 = +HEAPF64[$15910>>3];
                  __THREW__ = 0;
                  $15912 = (invoke_iii(416,($vinfos257|0),1)|0);
                  $15913 = __THREW__; __THREW__ = 0;
                  $15914 = $15913&1;
                  if ($15914) {
                   label = 1867;
                   break L1;
                  }
                  $15915 = ((($15912)) + 8|0);
                  HEAPF64[$15915>>3] = $15911;
                  $15916 = ((($4)) + 539|0);
                  $15917 = HEAP8[$15916>>0]|0;
                  __THREW__ = 0;
                  $15918 = (invoke_iii(416,($vinfos257|0),1)|0);
                  $15919 = __THREW__; __THREW__ = 0;
                  $15920 = $15919&1;
                  if ($15920) {
                   label = 1867;
                   break L1;
                  }
                  $15921 = ((($15918)) + 19|0);
                  HEAP8[$15921>>0] = $15917;
                  $15922 = ((($4)) + 539|0);
                  $15923 = ((($15922)) + 1|0);
                  $15924 = HEAP8[$15923>>0]|0;
                  __THREW__ = 0;
                  $15925 = (invoke_iii(416,($vinfos257|0),1)|0);
                  $15926 = __THREW__; __THREW__ = 0;
                  $15927 = $15926&1;
                  if ($15927) {
                   label = 1867;
                   break L1;
                  }
                  $15928 = ((($15925)) + 19|0);
                  $15929 = ((($15928)) + 1|0);
                  HEAP8[$15929>>0] = $15924;
                  $15930 = ((($4)) + 541|0);
                  $15931 = HEAP8[$15930>>0]|0;
                  __THREW__ = 0;
                  $15932 = (invoke_iii(416,($vinfos257|0),1)|0);
                  $15933 = __THREW__; __THREW__ = 0;
                  $15934 = $15933&1;
                  if ($15934) {
                   label = 1867;
                   break L1;
                  }
                  $15935 = ((($15932)) + 18|0);
                  HEAP8[$15935>>0] = $15931;
                  __THREW__ = 0;
                  $15936 = (invoke_iii(416,($vinfos257|0),2)|0);
                  $15937 = __THREW__; __THREW__ = 0;
                  $15938 = $15937&1;
                  if ($15938) {
                   label = 1867;
                   break L1;
                  }
                  $15939 = ((($15936)) + 17|0);
                  HEAP8[$15939>>0] = 1;
                  $15940 = ((($4)) + 80|0);
                  $15941 = +HEAPF64[$15940>>3];
                  __THREW__ = 0;
                  $15942 = (invoke_iii(416,($vinfos257|0),2)|0);
                  $15943 = __THREW__; __THREW__ = 0;
                  $15944 = $15943&1;
                  if ($15944) {
                   label = 1867;
                   break L1;
                  }
                  $15945 = ((($15942)) + 8|0);
                  HEAPF64[$15945>>3] = $15941;
                  $15946 = ((($4)) + 542|0);
                  $15947 = HEAP8[$15946>>0]|0;
                  __THREW__ = 0;
                  $15948 = (invoke_iii(416,($vinfos257|0),2)|0);
                  $15949 = __THREW__; __THREW__ = 0;
                  $15950 = $15949&1;
                  if ($15950) {
                   label = 1867;
                   break L1;
                  }
                  $15951 = ((($15948)) + 19|0);
                  HEAP8[$15951>>0] = $15947;
                  $15952 = ((($4)) + 542|0);
                  $15953 = ((($15952)) + 1|0);
                  $15954 = HEAP8[$15953>>0]|0;
                  __THREW__ = 0;
                  $15955 = (invoke_iii(416,($vinfos257|0),2)|0);
                  $15956 = __THREW__; __THREW__ = 0;
                  $15957 = $15956&1;
                  if ($15957) {
                   label = 1867;
                   break L1;
                  }
                  $15958 = ((($15955)) + 19|0);
                  $15959 = ((($15958)) + 1|0);
                  HEAP8[$15959>>0] = $15954;
                  $15960 = ((($4)) + 544|0);
                  $15961 = HEAP8[$15960>>0]|0;
                  __THREW__ = 0;
                  $15962 = (invoke_iii(416,($vinfos257|0),2)|0);
                  $15963 = __THREW__; __THREW__ = 0;
                  $15964 = $15963&1;
                  if ($15964) {
                   label = 1867;
                   break L1;
                  }
                  $15965 = ((($15962)) + 18|0);
                  HEAP8[$15965>>0] = $15961;
                  __THREW__ = 0;
                  $15966 = (invoke_iii(416,($vinfos257|0),3)|0);
                  $15967 = __THREW__; __THREW__ = 0;
                  $15968 = $15967&1;
                  if ($15968) {
                   label = 1867;
                   break L1;
                  }
                  $15969 = ((($15966)) + 17|0);
                  HEAP8[$15969>>0] = 1;
                  $15970 = ((($4)) + 120|0);
                  $15971 = +HEAPF64[$15970>>3];
                  __THREW__ = 0;
                  $15972 = (invoke_iii(416,($vinfos257|0),3)|0);
                  $15973 = __THREW__; __THREW__ = 0;
                  $15974 = $15973&1;
                  if ($15974) {
                   label = 1867;
                   break L1;
                  }
                  $15975 = ((($15972)) + 8|0);
                  HEAPF64[$15975>>3] = $15971;
                  $15976 = ((($4)) + 545|0);
                  $15977 = HEAP8[$15976>>0]|0;
                  __THREW__ = 0;
                  $15978 = (invoke_iii(416,($vinfos257|0),3)|0);
                  $15979 = __THREW__; __THREW__ = 0;
                  $15980 = $15979&1;
                  if ($15980) {
                   label = 1867;
                   break L1;
                  }
                  $15981 = ((($15978)) + 19|0);
                  HEAP8[$15981>>0] = $15977;
                  $15982 = ((($4)) + 545|0);
                  $15983 = ((($15982)) + 1|0);
                  $15984 = HEAP8[$15983>>0]|0;
                  __THREW__ = 0;
                  $15985 = (invoke_iii(416,($vinfos257|0),3)|0);
                  $15986 = __THREW__; __THREW__ = 0;
                  $15987 = $15986&1;
                  if ($15987) {
                   label = 1867;
                   break L1;
                  }
                  $15988 = ((($15985)) + 19|0);
                  $15989 = ((($15988)) + 1|0);
                  HEAP8[$15989>>0] = $15984;
                  $15990 = ((($4)) + 547|0);
                  $15991 = HEAP8[$15990>>0]|0;
                  __THREW__ = 0;
                  $15992 = (invoke_iii(416,($vinfos257|0),3)|0);
                  $15993 = __THREW__; __THREW__ = 0;
                  $15994 = $15993&1;
                  if ($15994) {
                   label = 1867;
                   break L1;
                  }
                  $15995 = ((($15992)) + 18|0);
                  HEAP8[$15995>>0] = $15991;
                  __THREW__ = 0;
                  $15996 = (invoke_iii(416,($vinfos257|0),4)|0);
                  $15997 = __THREW__; __THREW__ = 0;
                  $15998 = $15997&1;
                  if ($15998) {
                   label = 1867;
                   break L1;
                  }
                  $15999 = ((($15996)) + 17|0);
                  HEAP8[$15999>>0] = 1;
                  $16000 = ((($4)) + 160|0);
                  $16001 = +HEAPF64[$16000>>3];
                  __THREW__ = 0;
                  $16002 = (invoke_iii(416,($vinfos257|0),4)|0);
                  $16003 = __THREW__; __THREW__ = 0;
                  $16004 = $16003&1;
                  if ($16004) {
                   label = 1867;
                   break L1;
                  }
                  $16005 = ((($16002)) + 8|0);
                  HEAPF64[$16005>>3] = $16001;
                  $16006 = ((($4)) + 548|0);
                  $16007 = HEAP8[$16006>>0]|0;
                  __THREW__ = 0;
                  $16008 = (invoke_iii(416,($vinfos257|0),4)|0);
                  $16009 = __THREW__; __THREW__ = 0;
                  $16010 = $16009&1;
                  if ($16010) {
                   label = 1867;
                   break L1;
                  }
                  $16011 = ((($16008)) + 19|0);
                  HEAP8[$16011>>0] = $16007;
                  $16012 = ((($4)) + 548|0);
                  $16013 = ((($16012)) + 1|0);
                  $16014 = HEAP8[$16013>>0]|0;
                  __THREW__ = 0;
                  $16015 = (invoke_iii(416,($vinfos257|0),4)|0);
                  $16016 = __THREW__; __THREW__ = 0;
                  $16017 = $16016&1;
                  if ($16017) {
                   label = 1867;
                   break L1;
                  }
                  $16018 = ((($16015)) + 19|0);
                  $16019 = ((($16018)) + 1|0);
                  HEAP8[$16019>>0] = $16014;
                  $16020 = ((($4)) + 550|0);
                  $16021 = HEAP8[$16020>>0]|0;
                  __THREW__ = 0;
                  $16022 = (invoke_iii(416,($vinfos257|0),4)|0);
                  $16023 = __THREW__; __THREW__ = 0;
                  $16024 = $16023&1;
                  if ($16024) {
                   label = 1867;
                   break L1;
                  }
                  $16025 = ((($16022)) + 18|0);
                  HEAP8[$16025>>0] = $16021;
                  __THREW__ = 0;
                  $16026 = (invoke_iii(416,($vinfos257|0),5)|0);
                  $16027 = __THREW__; __THREW__ = 0;
                  $16028 = $16027&1;
                  if ($16028) {
                   label = 1867;
                   break L1;
                  }
                  $16029 = ((($16026)) + 17|0);
                  HEAP8[$16029>>0] = 1;
                  $16030 = ((($4)) + 200|0);
                  $16031 = +HEAPF64[$16030>>3];
                  __THREW__ = 0;
                  $16032 = (invoke_iii(416,($vinfos257|0),5)|0);
                  $16033 = __THREW__; __THREW__ = 0;
                  $16034 = $16033&1;
                  if ($16034) {
                   label = 1867;
                   break L1;
                  }
                  $16035 = ((($16032)) + 8|0);
                  HEAPF64[$16035>>3] = $16031;
                  $16036 = ((($4)) + 551|0);
                  $16037 = HEAP8[$16036>>0]|0;
                  __THREW__ = 0;
                  $16038 = (invoke_iii(416,($vinfos257|0),5)|0);
                  $16039 = __THREW__; __THREW__ = 0;
                  $16040 = $16039&1;
                  if ($16040) {
                   label = 1867;
                   break L1;
                  }
                  $16041 = ((($16038)) + 19|0);
                  HEAP8[$16041>>0] = $16037;
                  $16042 = ((($4)) + 551|0);
                  $16043 = ((($16042)) + 1|0);
                  $16044 = HEAP8[$16043>>0]|0;
                  __THREW__ = 0;
                  $16045 = (invoke_iii(416,($vinfos257|0),5)|0);
                  $16046 = __THREW__; __THREW__ = 0;
                  $16047 = $16046&1;
                  if ($16047) {
                   label = 1867;
                   break L1;
                  }
                  $16048 = ((($16045)) + 19|0);
                  $16049 = ((($16048)) + 1|0);
                  HEAP8[$16049>>0] = $16044;
                  $16050 = ((($4)) + 553|0);
                  $16051 = HEAP8[$16050>>0]|0;
                  __THREW__ = 0;
                  $16052 = (invoke_iii(416,($vinfos257|0),5)|0);
                  $16053 = __THREW__; __THREW__ = 0;
                  $16054 = $16053&1;
                  if ($16054) {
                   label = 1867;
                   break L1;
                  }
                  $16055 = ((($16052)) + 18|0);
                  HEAP8[$16055>>0] = $16051;
                  __THREW__ = 0;
                  invoke_vii(417,($vfree258|0),0);
                  $16056 = __THREW__; __THREW__ = 0;
                  $16057 = $16056&1;
                  if ($16057) {
                   label = 1867;
                   break L1;
                  }
                  $16058 = $1;
                  $16059 = HEAP32[$16058>>2]|0;
                  $16060 = ((($16059)) + 8|0);
                  $16061 = HEAP32[$16060>>2]|0;
                  __THREW__ = 0;
                  (invoke_iiii($16061|0,($16058|0),($vinfos257|0),($vfree258|0))|0);
                  $16062 = __THREW__; __THREW__ = 0;
                  $16063 = $16062&1;
                  if ($16063) {
                   label = 1868;
                   break L1;
                  }
                  __THREW__ = 0;
                  invoke_vi(371,($vfree258|0));
                  $16064 = __THREW__; __THREW__ = 0;
                  $16065 = $16064&1;
                  if ($16065) {
                   label = 1867;
                   break L1;
                  }
                  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos257);
                 }
                } while(0);
                $16066 = $ij5254;
                $16067 = (($16066) + 1)|0;
                $ij5254 = $16067;
               }
              }
             } while(0);
             $9493 = ((($4)) + 8|0);
             $9494 = +HEAPF64[$9493>>3];
             $9495 = ((($4)) + 248|0);
             $9496 = +HEAPF64[$9495>>3];
             $9497 = $9494 * $9496;
             $x327 = $9497;
             $9498 = ((($4)) + 8|0);
             $9499 = +HEAPF64[$9498>>3];
             $9500 = ((($4)) + 272|0);
             $9501 = +HEAPF64[$9500>>3];
             $9502 = $9499 * $9501;
             $x328 = $9502;
             $9503 = ((($4)) + 56|0);
             $9504 = +HEAPF64[$9503>>3];
             $9505 = 1.0 * $9504;
             $x329 = $9505;
             $9506 = ((($4)) + 16|0);
             $9507 = +HEAPF64[$9506>>3];
             $9508 = 1.0 * $9507;
             $x330 = $9508;
             $9509 = ((($4)) + 344|0);
             $9510 = +HEAPF64[$9509>>3];
             $9511 = ((($4)) + 16|0);
             $9512 = +HEAPF64[$9511>>3];
             $9513 = $9510 * $9512;
             $x331 = $9513;
             $9514 = ((($4)) + 48|0);
             $9515 = +HEAPF64[$9514>>3];
             $9516 = ((($4)) + 96|0);
             $9517 = +HEAPF64[$9516>>3];
             $9518 = $9515 * $9517;
             $x332 = $9518;
             $9519 = ((($4)) + 8|0);
             $9520 = +HEAPF64[$9519>>3];
             $9521 = ((($4)) + 296|0);
             $9522 = +HEAPF64[$9521>>3];
             $9523 = $9520 * $9522;
             $x333 = $9523;
             $9524 = $x90;
             $x334 = $9524;
             $9525 = ((($4)) + 88|0);
             $9526 = +HEAPF64[$9525>>3];
             $9527 = ((($4)) + 56|0);
             $9528 = +HEAPF64[$9527>>3];
             $9529 = $9526 * $9528;
             $9530 = $x332;
             $9531 = $9529 + $9530;
             $x335 = $9531;
             $9532 = ((($4)) + 8|0);
             $9533 = +HEAPF64[$9532>>3];
             $9534 = $x334;
             $9535 = $9533 * $9534;
             $x336 = $9535;
             $9536 = ((($4)) + 16|0);
             $9537 = +HEAPF64[$9536>>3];
             $9538 = $x334;
             $9539 = $9537 * $9538;
             $x337 = $9539;
             $9540 = ((($4)) + 16|0);
             $9541 = +HEAPF64[$9540>>3];
             $9542 = $x335;
             $9543 = $9541 * $9542;
             $x338 = $9543;
             $9544 = $x95;
             $x339 = $9544;
             $9545 = ((($4)) + 392|0);
             $9546 = +HEAPF64[$9545>>3];
             $9547 = $x339;
             $9548 = $9546 * $9547;
             $9549 = $x327;
             $9550 = $x334;
             $9551 = $9549 * $9550;
             $9552 = $9548 + $9551;
             $9553 = ((($4)) + 320|0);
             $9554 = +HEAPF64[$9553>>3];
             $9555 = $x337;
             $9556 = $9554 * $9555;
             $9557 = $9552 + $9556;
             $9558 = ((($4)) + 240|0);
             HEAPF64[$9558>>3] = $9557;
             $9559 = $x331;
             $9560 = $x334;
             $9561 = $9559 * $9560;
             $9562 = ((($4)) + 416|0);
             $9563 = +HEAPF64[$9562>>3];
             $9564 = $x339;
             $9565 = $9563 * $9564;
             $9566 = $9561 + $9565;
             $9567 = $x328;
             $9568 = $x334;
             $9569 = $9567 * $9568;
             $9570 = $9566 + $9569;
             $9571 = ((($4)) + 264|0);
             HEAPF64[$9571>>3] = $9570;
             $9572 = ((($4)) + 440|0);
             $9573 = +HEAPF64[$9572>>3];
             $9574 = $x339;
             $9575 = $9573 * $9574;
             $9576 = ((($4)) + 368|0);
             $9577 = +HEAPF64[$9576>>3];
             $9578 = $x337;
             $9579 = $9577 * $9578;
             $9580 = $9575 + $9579;
             $9581 = $x333;
             $9582 = $x334;
             $9583 = $9581 * $9582;
             $9584 = $9580 + $9583;
             $9585 = ((($4)) + 288|0);
             HEAPF64[$9585>>3] = $9584;
             $9586 = ((($4)) + 248|0);
             $9587 = +HEAPF64[$9586>>3];
             $9588 = -1.0 * $9587;
             $9589 = $x330;
             $9590 = $9588 * $9589;
             $9591 = ((($4)) + 8|0);
             $9592 = +HEAPF64[$9591>>3];
             $9593 = ((($4)) + 320|0);
             $9594 = +HEAPF64[$9593>>3];
             $9595 = $9592 * $9594;
             $9596 = $9590 + $9595;
             $9597 = ((($4)) + 312|0);
             HEAPF64[$9597>>3] = $9596;
             $9598 = ((($4)) + 272|0);
             $9599 = +HEAPF64[$9598>>3];
             $9600 = -1.0 * $9599;
             $9601 = $x330;
             $9602 = $9600 * $9601;
             $9603 = ((($4)) + 8|0);
             $9604 = +HEAPF64[$9603>>3];
             $9605 = ((($4)) + 344|0);
             $9606 = +HEAPF64[$9605>>3];
             $9607 = $9604 * $9606;
             $9608 = $9602 + $9607;
             $9609 = ((($4)) + 336|0);
             HEAPF64[$9609>>3] = $9608;
             $9610 = ((($4)) + 296|0);
             $9611 = +HEAPF64[$9610>>3];
             $9612 = -1.0 * $9611;
             $9613 = $x330;
             $9614 = $9612 * $9613;
             $9615 = ((($4)) + 8|0);
             $9616 = +HEAPF64[$9615>>3];
             $9617 = ((($4)) + 368|0);
             $9618 = +HEAPF64[$9617>>3];
             $9619 = $9616 * $9618;
             $9620 = $9614 + $9619;
             $9621 = ((($4)) + 360|0);
             HEAPF64[$9621>>3] = $9620;
             $9622 = ((($4)) + 392|0);
             $9623 = +HEAPF64[$9622>>3];
             $9624 = $x334;
             $9625 = $9623 * $9624;
             $9626 = $x327;
             $9627 = $x335;
             $9628 = $9626 * $9627;
             $9629 = $9625 + $9628;
             $9630 = ((($4)) + 320|0);
             $9631 = +HEAPF64[$9630>>3];
             $9632 = $x338;
             $9633 = $9631 * $9632;
             $9634 = $9629 + $9633;
             $9635 = ((($4)) + 384|0);
             HEAPF64[$9635>>3] = $9634;
             $9636 = $x331;
             $9637 = $x335;
             $9638 = $9636 * $9637;
             $9639 = ((($4)) + 416|0);
             $9640 = +HEAPF64[$9639>>3];
             $9641 = $x334;
             $9642 = $9640 * $9641;
             $9643 = $9638 + $9642;
             $9644 = $x328;
             $9645 = $x335;
             $9646 = $9644 * $9645;
             $9647 = $9643 + $9646;
             $9648 = ((($4)) + 408|0);
             HEAPF64[$9648>>3] = $9647;
             $9649 = ((($4)) + 440|0);
             $9650 = +HEAPF64[$9649>>3];
             $9651 = $x334;
             $9652 = $9650 * $9651;
             $9653 = ((($4)) + 368|0);
             $9654 = +HEAPF64[$9653>>3];
             $9655 = $x338;
             $9656 = $9654 * $9655;
             $9657 = $9652 + $9656;
             $9658 = $x333;
             $9659 = $x335;
             $9660 = $9658 * $9659;
             $9661 = $9657 + $9660;
             $9662 = ((($4)) + 432|0);
             HEAPF64[$9662>>3] = $9661;
             $9663 = ((($4)) + 136|0);
             $9664 = +HEAPF64[$9663>>3];
             HEAPF64[$j5eval148>>3] = $9664;
             $9665 = ((($4)) + 176|0);
             $9666 = +HEAPF64[$9665>>3];
             $9667 = ((($j5eval148)) + 8|0);
             HEAPF64[$9667>>3] = $9666;
             $9668 = +HEAPF64[$j5eval148>>3];
             $9669 = (+__Z5IKabsd($9668));
             $9670 = $9669 < 9.9999999999999995E-7;
             do {
              if (!($9670)) {
               $9671 = ((($j5eval148)) + 8|0);
               $9672 = +HEAPF64[$9671>>3];
               $9673 = (+__Z5IKabsd($9672));
               $9674 = $9673 < 9.9999999999999995E-7;
               if ($9674) {
                break;
               }
               ;HEAP8[$j5valid244>>0]=0|0;
               $14936 = ((($4)) + 553|0);
               HEAP8[$14936>>0] = 1;
               $14937 = ((($4)) + 176|0);
               $14938 = +HEAPF64[$14937>>3];
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x445,$14938,-1);
               $14939 = ((($x445)) + 8|0);
               $14940 = HEAP8[$14939>>0]|0;
               $14941 = $14940&1;
               if (!($14941)) {
                break L39;
               }
               $14942 = +HEAPF64[$x445>>3];
               $x444 = $14942;
               $14943 = ((($4)) + 136|0);
               $14944 = +HEAPF64[$14943>>3];
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x446,$14944,-1);
               $14945 = ((($x446)) + 8|0);
               $14946 = HEAP8[$14945>>0]|0;
               $14947 = $14946&1;
               if (!($14947)) {
                break L39;
               }
               $14948 = $x444;
               $14949 = +HEAPF64[$x446>>3];
               $14950 = $14948 * $14949;
               $14951 = ((($4)) + 128|0);
               $14952 = +HEAPF64[$14951>>3];
               $14953 = -1.0 * $14952;
               $14954 = ((($4)) + 168|0);
               $14955 = +HEAPF64[$14954>>3];
               $14956 = $14953 * $14955;
               $14957 = ((($4)) + 384|0);
               $14958 = +HEAPF64[$14957>>3];
               $14959 = $14956 * $14958;
               $14960 = ((($4)) + 240|0);
               $14961 = +HEAPF64[$14960>>3];
               $14962 = -1.0 * $14961;
               $14963 = ((($4)) + 176|0);
               $14964 = +HEAPF64[$14963>>3];
               $14965 = $14962 * $14964;
               $14966 = $14959 + $14965;
               $14967 = $14950 * $14966;
               $14968 = (+__Z5IKabsd($14967));
               $14969 = $14968 < 1.9999999999999999E-6;
               do {
                if ($14969) {
                 $14970 = ((($4)) + 384|0);
                 $14971 = +HEAPF64[$14970>>3];
                 $14972 = -1.0 * $14971;
                 $14973 = $x444;
                 $14974 = $14972 * $14973;
                 $14975 = (+__Z5IKabsd($14974));
                 $14976 = $14975 < 1.9999999999999999E-6;
                 if (!($14976)) {
                  break;
                 }
                 $14977 = $x444;
                 $14978 = +HEAPF64[$x446>>3];
                 $14979 = $14977 * $14978;
                 $14980 = ((($4)) + 128|0);
                 $14981 = +HEAPF64[$14980>>3];
                 $14982 = -1.0 * $14981;
                 $14983 = ((($4)) + 168|0);
                 $14984 = +HEAPF64[$14983>>3];
                 $14985 = $14982 * $14984;
                 $14986 = ((($4)) + 384|0);
                 $14987 = +HEAPF64[$14986>>3];
                 $14988 = $14985 * $14987;
                 $14989 = ((($4)) + 240|0);
                 $14990 = +HEAPF64[$14989>>3];
                 $14991 = -1.0 * $14990;
                 $14992 = ((($4)) + 176|0);
                 $14993 = +HEAPF64[$14992>>3];
                 $14994 = $14991 * $14993;
                 $14995 = $14988 + $14994;
                 $14996 = $14979 * $14995;
                 $14997 = (+__Z5IKsqrd($14996));
                 $14998 = ((($4)) + 384|0);
                 $14999 = +HEAPF64[$14998>>3];
                 $15000 = -1.0 * $14999;
                 $15001 = $x444;
                 $15002 = $15000 * $15001;
                 $15003 = (+__Z5IKsqrd($15002));
                 $15004 = $14997 + $15003;
                 $15005 = $15004 - 1.0;
                 $15006 = (+__Z5IKabsd($15005));
                 $15007 = $15006 <= 1.9999999999999999E-6;
                 if ($15007) {
                  break L39;
                 }
                }
               } while(0);
               $15008 = $x444;
               $15009 = +HEAPF64[$x446>>3];
               $15010 = $15008 * $15009;
               $15011 = ((($4)) + 128|0);
               $15012 = +HEAPF64[$15011>>3];
               $15013 = -1.0 * $15012;
               $15014 = ((($4)) + 168|0);
               $15015 = +HEAPF64[$15014>>3];
               $15016 = $15013 * $15015;
               $15017 = ((($4)) + 384|0);
               $15018 = +HEAPF64[$15017>>3];
               $15019 = $15016 * $15018;
               $15020 = ((($4)) + 240|0);
               $15021 = +HEAPF64[$15020>>3];
               $15022 = -1.0 * $15021;
               $15023 = ((($4)) + 176|0);
               $15024 = +HEAPF64[$15023>>3];
               $15025 = $15022 * $15024;
               $15026 = $15019 + $15025;
               $15027 = $15010 * $15026;
               $15028 = ((($4)) + 384|0);
               $15029 = +HEAPF64[$15028>>3];
               $15030 = -1.0 * $15029;
               $15031 = $x444;
               $15032 = $15030 * $15031;
               $15033 = (+__Z7IKatan2dd($15027,$15032));
               HEAPF64[$j5array241>>3] = $15033;
               $15034 = +HEAPF64[$j5array241>>3];
               $15035 = (+__Z5IKsind($15034));
               HEAPF64[$sj5array243>>3] = $15035;
               $15036 = +HEAPF64[$j5array241>>3];
               $15037 = (+__Z5IKcosd($15036));
               HEAPF64[$cj5array242>>3] = $15037;
               $15038 = +HEAPF64[$j5array241>>3];
               $15039 = $15038 > 3.14159265358979;
               $15040 = +HEAPF64[$j5array241>>3];
               do {
                if ($15039) {
                 $15041 = $15040 - 6.2831853071795898;
                 HEAPF64[$j5array241>>3] = $15041;
                } else {
                 $15042 = $15040 < -3.14159265358979;
                 if (!($15042)) {
                  break;
                 }
                 $15043 = +HEAPF64[$j5array241>>3];
                 $15044 = $15043 + 6.2831853071795898;
                 HEAPF64[$j5array241>>3] = $15044;
                }
               } while(0);
               HEAP8[$j5valid244>>0] = 1;
               $ij5245 = 0;
               while(1) {
                $15045 = $ij5245;
                $15046 = ($15045|0)<(1);
                if (!($15046)) {
                 break L39;
                }
                $15047 = $ij5245;
                $15048 = (($j5valid244) + ($15047)|0);
                $15049 = HEAP8[$15048>>0]|0;
                $15050 = $15049&1;
                do {
                 if ($15050) {
                  $15051 = $ij5245;
                  $15052 = $15051&255;
                  $15053 = ((($4)) + 551|0);
                  HEAP8[$15053>>0] = $15052;
                  $15054 = ((($4)) + 551|0);
                  $15055 = ((($15054)) + 1|0);
                  HEAP8[$15055>>0] = -1;
                  $15056 = $ij5245;
                  $15057 = (($15056) + 1)|0;
                  $iij5246 = $15057;
                  L150: while(1) {
                   $15058 = $iij5246;
                   $15059 = ($15058|0)<(1);
                   if (!($15059)) {
                    break;
                   }
                   $15060 = $iij5246;
                   $15061 = (($j5valid244) + ($15060)|0);
                   $15062 = HEAP8[$15061>>0]|0;
                   $15063 = $15062&1;
                   do {
                    if ($15063) {
                     $15064 = $ij5245;
                     $15065 = (($cj5array242) + ($15064<<3)|0);
                     $15066 = +HEAPF64[$15065>>3];
                     $15067 = $iij5246;
                     $15068 = (($cj5array242) + ($15067<<3)|0);
                     $15069 = +HEAPF64[$15068>>3];
                     $15070 = $15066 - $15069;
                     $15071 = (+__Z5IKabsd($15070));
                     $15072 = $15071 < 9.9999999999999995E-7;
                     if (!($15072)) {
                      break;
                     }
                     $15073 = $ij5245;
                     $15074 = (($sj5array243) + ($15073<<3)|0);
                     $15075 = +HEAPF64[$15074>>3];
                     $15076 = $iij5246;
                     $15077 = (($sj5array243) + ($15076<<3)|0);
                     $15078 = +HEAPF64[$15077>>3];
                     $15079 = $15075 - $15078;
                     $15080 = (+__Z5IKabsd($15079));
                     $15081 = $15080 < 9.9999999999999995E-7;
                     if ($15081) {
                      label = 1752;
                      break L150;
                     }
                    }
                   } while(0);
                   $15088 = $iij5246;
                   $15089 = (($15088) + 1)|0;
                   $iij5246 = $15089;
                  }
                  if ((label|0) == 1752) {
                   label = 0;
                   $15082 = $iij5246;
                   $15083 = (($j5valid244) + ($15082)|0);
                   HEAP8[$15083>>0] = 0;
                   $15084 = $iij5246;
                   $15085 = $15084&255;
                   $15086 = ((($4)) + 551|0);
                   $15087 = ((($15086)) + 1|0);
                   HEAP8[$15087>>0] = $15085;
                  }
                  $15090 = $ij5245;
                  $15091 = (($j5array241) + ($15090<<3)|0);
                  $15092 = +HEAPF64[$15091>>3];
                  $15093 = ((($4)) + 200|0);
                  HEAPF64[$15093>>3] = $15092;
                  $15094 = $ij5245;
                  $15095 = (($cj5array242) + ($15094<<3)|0);
                  $15096 = +HEAPF64[$15095>>3];
                  $15097 = ((($4)) + 208|0);
                  HEAPF64[$15097>>3] = $15096;
                  $15098 = $ij5245;
                  $15099 = (($sj5array243) + ($15098<<3)|0);
                  $15100 = +HEAPF64[$15099>>3];
                  $15101 = ((($4)) + 216|0);
                  HEAPF64[$15101>>3] = $15100;
                  $15102 = ((($4)) + 200|0);
                  $15103 = +HEAPF64[$15102>>3];
                  $15104 = (+__Z5IKsind($15103));
                  $x447 = $15104;
                  $15105 = ((($4)) + 200|0);
                  $15106 = +HEAPF64[$15105>>3];
                  $15107 = (+__Z5IKcosd($15106));
                  $x448 = $15107;
                  $15108 = ((($4)) + 128|0);
                  $15109 = +HEAPF64[$15108>>3];
                  $15110 = ((($4)) + 240|0);
                  $15111 = +HEAPF64[$15110>>3];
                  $15112 = $15109 * $15111;
                  $x449 = $15112;
                  $15113 = ((($4)) + 128|0);
                  $15114 = +HEAPF64[$15113>>3];
                  $15115 = ((($4)) + 168|0);
                  $15116 = +HEAPF64[$15115>>3];
                  $15117 = $15114 * $15116;
                  $x450 = $15117;
                  $15118 = ((($4)) + 168|0);
                  $15119 = +HEAPF64[$15118>>3];
                  $15120 = ((($4)) + 136|0);
                  $15121 = +HEAPF64[$15120>>3];
                  $15122 = $15119 * $15121;
                  $x451 = $15122;
                  $15123 = ((($4)) + 136|0);
                  $15124 = +HEAPF64[$15123>>3];
                  $15125 = 1.0 * $15124;
                  $x452 = $15125;
                  $15126 = ((($4)) + 176|0);
                  $15127 = +HEAPF64[$15126>>3];
                  $15128 = 1.0 * $15127;
                  $x453 = $15128;
                  $15129 = $x448;
                  $15130 = 1.0 * $15129;
                  $x454 = $15130;
                  $15131 = ((($4)) + 136|0);
                  $15132 = +HEAPF64[$15131>>3];
                  $15133 = $x447;
                  $15134 = $15132 * $15133;
                  $x455 = $15134;
                  $15135 = $x447;
                  $15136 = 1.0 * $15135;
                  $x456 = $15136;
                  $15137 = ((($4)) + 176|0);
                  $15138 = +HEAPF64[$15137>>3];
                  $15139 = $x448;
                  $15140 = $15138 * $15139;
                  $15141 = ((($4)) + 384|0);
                  $15142 = +HEAPF64[$15141>>3];
                  $15143 = $15140 + $15142;
                  HEAPF64[$evalcond247>>3] = $15143;
                  $15144 = $x447;
                  $15145 = -1.0 * $15144;
                  $15146 = $x453;
                  $15147 = $15145 * $15146;
                  $15148 = ((($4)) + 408|0);
                  $15149 = +HEAPF64[$15148>>3];
                  $15150 = $15147 + $15149;
                  $15151 = ((($evalcond247)) + 8|0);
                  HEAPF64[$15151>>3] = $15150;
                  $15152 = ((($4)) + 168|0);
                  $15153 = +HEAPF64[$15152>>3];
                  $15154 = $x447;
                  $15155 = $15153 * $15154;
                  $15156 = ((($4)) + 336|0);
                  $15157 = +HEAPF64[$15156>>3];
                  $15158 = ((($4)) + 136|0);
                  $15159 = +HEAPF64[$15158>>3];
                  $15160 = $15157 * $15159;
                  $15161 = $15155 + $15160;
                  $15162 = ((($4)) + 128|0);
                  $15163 = +HEAPF64[$15162>>3];
                  $15164 = ((($4)) + 264|0);
                  $15165 = +HEAPF64[$15164>>3];
                  $15166 = $15163 * $15165;
                  $15167 = $15161 + $15166;
                  $15168 = ((($evalcond247)) + 16|0);
                  HEAPF64[$15168>>3] = $15167;
                  $15169 = ((($4)) + 240|0);
                  $15170 = +HEAPF64[$15169>>3];
                  $15171 = -1.0 * $15170;
                  $15172 = $x452;
                  $15173 = $15171 * $15172;
                  $15174 = $x456;
                  $15175 = -1.0 * $15174;
                  $15176 = $15173 + $15175;
                  $15177 = ((($4)) + 128|0);
                  $15178 = +HEAPF64[$15177>>3];
                  $15179 = ((($4)) + 312|0);
                  $15180 = +HEAPF64[$15179>>3];
                  $15181 = $15178 * $15180;
                  $15182 = $15176 + $15181;
                  $15183 = ((($evalcond247)) + 24|0);
                  HEAPF64[$15183>>3] = $15182;
                  $15184 = ((($4)) + 264|0);
                  $15185 = +HEAPF64[$15184>>3];
                  $15186 = -1.0 * $15185;
                  $15187 = $x452;
                  $15188 = $15186 * $15187;
                  $15189 = $x454;
                  $15190 = -1.0 * $15189;
                  $15191 = $15188 + $15190;
                  $15192 = ((($4)) + 128|0);
                  $15193 = +HEAPF64[$15192>>3];
                  $15194 = ((($4)) + 336|0);
                  $15195 = +HEAPF64[$15194>>3];
                  $15196 = $15193 * $15195;
                  $15197 = $15191 + $15196;
                  $15198 = ((($evalcond247)) + 32|0);
                  HEAPF64[$15198>>3] = $15197;
                  $15199 = $x447;
                  $15200 = $x450;
                  $15201 = $15199 * $15200;
                  $15202 = ((($4)) + 136|0);
                  $15203 = +HEAPF64[$15202>>3];
                  $15204 = $x448;
                  $15205 = $15203 * $15204;
                  $15206 = $15201 + $15205;
                  $15207 = ((($4)) + 264|0);
                  $15208 = +HEAPF64[$15207>>3];
                  $15209 = $15206 + $15208;
                  $15210 = ((($evalcond247)) + 40|0);
                  HEAPF64[$15210>>3] = $15209;
                  $15211 = ((($4)) + 312|0);
                  $15212 = +HEAPF64[$15211>>3];
                  $15213 = ((($4)) + 136|0);
                  $15214 = +HEAPF64[$15213>>3];
                  $15215 = $15212 * $15214;
                  $15216 = ((($4)) + 168|0);
                  $15217 = +HEAPF64[$15216>>3];
                  $15218 = -1.0 * $15217;
                  $15219 = $x454;
                  $15220 = $15218 * $15219;
                  $15221 = $15215 + $15220;
                  $15222 = $x449;
                  $15223 = $15221 + $15222;
                  $15224 = ((($evalcond247)) + 48|0);
                  HEAPF64[$15224>>3] = $15223;
                  $15225 = $x455;
                  $15226 = $x450;
                  $15227 = -1.0 * $15226;
                  $15228 = $x454;
                  $15229 = $15227 * $15228;
                  $15230 = $15225 + $15229;
                  $15231 = ((($4)) + 240|0);
                  $15232 = +HEAPF64[$15231>>3];
                  $15233 = $15230 + $15232;
                  $15234 = ((($evalcond247)) + 56|0);
                  HEAPF64[$15234>>3] = $15233;
                  $15235 = $x447;
                  $15236 = $x451;
                  $15237 = $15235 * $15236;
                  $15238 = ((($4)) + 336|0);
                  $15239 = +HEAPF64[$15238>>3];
                  $15240 = $15237 + $15239;
                  $15241 = ((($4)) + 128|0);
                  $15242 = +HEAPF64[$15241>>3];
                  $15243 = -1.0 * $15242;
                  $15244 = $x454;
                  $15245 = $15243 * $15244;
                  $15246 = $15240 + $15245;
                  $15247 = ((($evalcond247)) + 64|0);
                  HEAPF64[$15247>>3] = $15246;
                  $15248 = $x451;
                  $15249 = -1.0 * $15248;
                  $15250 = $x454;
                  $15251 = $15249 * $15250;
                  $15252 = ((($4)) + 312|0);
                  $15253 = +HEAPF64[$15252>>3];
                  $15254 = $15251 + $15253;
                  $15255 = ((($4)) + 128|0);
                  $15256 = +HEAPF64[$15255>>3];
                  $15257 = -1.0 * $15256;
                  $15258 = $x456;
                  $15259 = $15257 * $15258;
                  $15260 = $15254 + $15259;
                  $15261 = ((($evalcond247)) + 72|0);
                  HEAPF64[$15261>>3] = $15260;
                  $15262 = ((($4)) + 408|0);
                  $15263 = +HEAPF64[$15262>>3];
                  $15264 = -1.0 * $15263;
                  $15265 = $x453;
                  $15266 = $15264 * $15265;
                  $15267 = ((($4)) + 336|0);
                  $15268 = +HEAPF64[$15267>>3];
                  $15269 = $x451;
                  $15270 = $15268 * $15269;
                  $15271 = $15266 + $15270;
                  $15272 = ((($4)) + 264|0);
                  $15273 = +HEAPF64[$15272>>3];
                  $15274 = $x450;
                  $15275 = $15273 * $15274;
                  $15276 = $15271 + $15275;
                  $15277 = $x447;
                  $15278 = $15276 + $15277;
                  $15279 = ((($evalcond247)) + 80|0);
                  HEAPF64[$15279>>3] = $15278;
                  $15280 = ((($4)) + 312|0);
                  $15281 = +HEAPF64[$15280>>3];
                  $15282 = $x451;
                  $15283 = $15281 * $15282;
                  $15284 = ((($4)) + 384|0);
                  $15285 = +HEAPF64[$15284>>3];
                  $15286 = -1.0 * $15285;
                  $15287 = $x453;
                  $15288 = $15286 * $15287;
                  $15289 = $15283 + $15288;
                  $15290 = ((($4)) + 168|0);
                  $15291 = +HEAPF64[$15290>>3];
                  $15292 = $x449;
                  $15293 = $15291 * $15292;
                  $15294 = $15289 + $15293;
                  $15295 = $x454;
                  $15296 = -1.0 * $15295;
                  $15297 = $15294 + $15296;
                  $15298 = ((($evalcond247)) + 88|0);
                  HEAPF64[$15298>>3] = $15297;
                  $15299 = +HEAPF64[$evalcond247>>3];
                  $15300 = (+__Z5IKabsd($15299));
                  $15301 = $15300 > 5.0000000000000004E-6;
                  if ($15301) {
                   break;
                  }
                  $15302 = ((($evalcond247)) + 8|0);
                  $15303 = +HEAPF64[$15302>>3];
                  $15304 = (+__Z5IKabsd($15303));
                  $15305 = $15304 > 5.0000000000000004E-6;
                  if ($15305) {
                   break;
                  }
                  $15306 = ((($evalcond247)) + 16|0);
                  $15307 = +HEAPF64[$15306>>3];
                  $15308 = (+__Z5IKabsd($15307));
                  $15309 = $15308 > 5.0000000000000004E-6;
                  if ($15309) {
                   break;
                  }
                  $15310 = ((($evalcond247)) + 24|0);
                  $15311 = +HEAPF64[$15310>>3];
                  $15312 = (+__Z5IKabsd($15311));
                  $15313 = $15312 > 5.0000000000000004E-6;
                  if ($15313) {
                   break;
                  }
                  $15314 = ((($evalcond247)) + 32|0);
                  $15315 = +HEAPF64[$15314>>3];
                  $15316 = (+__Z5IKabsd($15315));
                  $15317 = $15316 > 5.0000000000000004E-6;
                  if ($15317) {
                   break;
                  }
                  $15318 = ((($evalcond247)) + 40|0);
                  $15319 = +HEAPF64[$15318>>3];
                  $15320 = (+__Z5IKabsd($15319));
                  $15321 = $15320 > 5.0000000000000004E-6;
                  if ($15321) {
                   break;
                  }
                  $15322 = ((($evalcond247)) + 48|0);
                  $15323 = +HEAPF64[$15322>>3];
                  $15324 = (+__Z5IKabsd($15323));
                  $15325 = $15324 > 5.0000000000000004E-6;
                  if ($15325) {
                   break;
                  }
                  $15326 = ((($evalcond247)) + 56|0);
                  $15327 = +HEAPF64[$15326>>3];
                  $15328 = (+__Z5IKabsd($15327));
                  $15329 = $15328 > 5.0000000000000004E-6;
                  if ($15329) {
                   break;
                  }
                  $15330 = ((($evalcond247)) + 64|0);
                  $15331 = +HEAPF64[$15330>>3];
                  $15332 = (+__Z5IKabsd($15331));
                  $15333 = $15332 > 5.0000000000000004E-6;
                  if ($15333) {
                   break;
                  }
                  $15334 = ((($evalcond247)) + 72|0);
                  $15335 = +HEAPF64[$15334>>3];
                  $15336 = (+__Z5IKabsd($15335));
                  $15337 = $15336 > 5.0000000000000004E-6;
                  if ($15337) {
                   break;
                  }
                  $15338 = ((($evalcond247)) + 80|0);
                  $15339 = +HEAPF64[$15338>>3];
                  $15340 = (+__Z5IKabsd($15339));
                  $15341 = $15340 > 5.0000000000000004E-6;
                  if ($15341) {
                   break;
                  }
                  $15342 = ((($evalcond247)) + 88|0);
                  $15343 = +HEAPF64[$15342>>3];
                  $15344 = (+__Z5IKabsd($15343));
                  $15345 = $15344 > 5.0000000000000004E-6;
                  if ($15345) {
                   break;
                  }
                  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos248,6);
                  __THREW__ = 0;
                  $15346 = (invoke_iii(416,($vinfos248|0),0)|0);
                  $15347 = __THREW__; __THREW__ = 0;
                  $15348 = $15347&1;
                  if ($15348) {
                   label = 1801;
                   break L1;
                  }
                  $15349 = ((($15346)) + 17|0);
                  HEAP8[$15349>>0] = 1;
                  $15350 = +HEAPF64[$4>>3];
                  __THREW__ = 0;
                  $15351 = (invoke_iii(416,($vinfos248|0),0)|0);
                  $15352 = __THREW__; __THREW__ = 0;
                  $15353 = $15352&1;
                  if ($15353) {
                   label = 1801;
                   break L1;
                  }
                  $15354 = ((($15351)) + 8|0);
                  HEAPF64[$15354>>3] = $15350;
                  $15355 = ((($4)) + 536|0);
                  $15356 = HEAP8[$15355>>0]|0;
                  __THREW__ = 0;
                  $15357 = (invoke_iii(416,($vinfos248|0),0)|0);
                  $15358 = __THREW__; __THREW__ = 0;
                  $15359 = $15358&1;
                  if ($15359) {
                   label = 1801;
                   break L1;
                  }
                  $15360 = ((($15357)) + 19|0);
                  HEAP8[$15360>>0] = $15356;
                  $15361 = ((($4)) + 536|0);
                  $15362 = ((($15361)) + 1|0);
                  $15363 = HEAP8[$15362>>0]|0;
                  __THREW__ = 0;
                  $15364 = (invoke_iii(416,($vinfos248|0),0)|0);
                  $15365 = __THREW__; __THREW__ = 0;
                  $15366 = $15365&1;
                  if ($15366) {
                   label = 1801;
                   break L1;
                  }
                  $15367 = ((($15364)) + 19|0);
                  $15368 = ((($15367)) + 1|0);
                  HEAP8[$15368>>0] = $15363;
                  $15369 = ((($4)) + 538|0);
                  $15370 = HEAP8[$15369>>0]|0;
                  __THREW__ = 0;
                  $15371 = (invoke_iii(416,($vinfos248|0),0)|0);
                  $15372 = __THREW__; __THREW__ = 0;
                  $15373 = $15372&1;
                  if ($15373) {
                   label = 1801;
                   break L1;
                  }
                  $15374 = ((($15371)) + 18|0);
                  HEAP8[$15374>>0] = $15370;
                  __THREW__ = 0;
                  $15375 = (invoke_iii(416,($vinfos248|0),1)|0);
                  $15376 = __THREW__; __THREW__ = 0;
                  $15377 = $15376&1;
                  if ($15377) {
                   label = 1801;
                   break L1;
                  }
                  $15378 = ((($15375)) + 17|0);
                  HEAP8[$15378>>0] = 1;
                  $15379 = ((($4)) + 40|0);
                  $15380 = +HEAPF64[$15379>>3];
                  __THREW__ = 0;
                  $15381 = (invoke_iii(416,($vinfos248|0),1)|0);
                  $15382 = __THREW__; __THREW__ = 0;
                  $15383 = $15382&1;
                  if ($15383) {
                   label = 1801;
                   break L1;
                  }
                  $15384 = ((($15381)) + 8|0);
                  HEAPF64[$15384>>3] = $15380;
                  $15385 = ((($4)) + 539|0);
                  $15386 = HEAP8[$15385>>0]|0;
                  __THREW__ = 0;
                  $15387 = (invoke_iii(416,($vinfos248|0),1)|0);
                  $15388 = __THREW__; __THREW__ = 0;
                  $15389 = $15388&1;
                  if ($15389) {
                   label = 1801;
                   break L1;
                  }
                  $15390 = ((($15387)) + 19|0);
                  HEAP8[$15390>>0] = $15386;
                  $15391 = ((($4)) + 539|0);
                  $15392 = ((($15391)) + 1|0);
                  $15393 = HEAP8[$15392>>0]|0;
                  __THREW__ = 0;
                  $15394 = (invoke_iii(416,($vinfos248|0),1)|0);
                  $15395 = __THREW__; __THREW__ = 0;
                  $15396 = $15395&1;
                  if ($15396) {
                   label = 1801;
                   break L1;
                  }
                  $15397 = ((($15394)) + 19|0);
                  $15398 = ((($15397)) + 1|0);
                  HEAP8[$15398>>0] = $15393;
                  $15399 = ((($4)) + 541|0);
                  $15400 = HEAP8[$15399>>0]|0;
                  __THREW__ = 0;
                  $15401 = (invoke_iii(416,($vinfos248|0),1)|0);
                  $15402 = __THREW__; __THREW__ = 0;
                  $15403 = $15402&1;
                  if ($15403) {
                   label = 1801;
                   break L1;
                  }
                  $15404 = ((($15401)) + 18|0);
                  HEAP8[$15404>>0] = $15400;
                  __THREW__ = 0;
                  $15405 = (invoke_iii(416,($vinfos248|0),2)|0);
                  $15406 = __THREW__; __THREW__ = 0;
                  $15407 = $15406&1;
                  if ($15407) {
                   label = 1801;
                   break L1;
                  }
                  $15408 = ((($15405)) + 17|0);
                  HEAP8[$15408>>0] = 1;
                  $15409 = ((($4)) + 80|0);
                  $15410 = +HEAPF64[$15409>>3];
                  __THREW__ = 0;
                  $15411 = (invoke_iii(416,($vinfos248|0),2)|0);
                  $15412 = __THREW__; __THREW__ = 0;
                  $15413 = $15412&1;
                  if ($15413) {
                   label = 1801;
                   break L1;
                  }
                  $15414 = ((($15411)) + 8|0);
                  HEAPF64[$15414>>3] = $15410;
                  $15415 = ((($4)) + 542|0);
                  $15416 = HEAP8[$15415>>0]|0;
                  __THREW__ = 0;
                  $15417 = (invoke_iii(416,($vinfos248|0),2)|0);
                  $15418 = __THREW__; __THREW__ = 0;
                  $15419 = $15418&1;
                  if ($15419) {
                   label = 1801;
                   break L1;
                  }
                  $15420 = ((($15417)) + 19|0);
                  HEAP8[$15420>>0] = $15416;
                  $15421 = ((($4)) + 542|0);
                  $15422 = ((($15421)) + 1|0);
                  $15423 = HEAP8[$15422>>0]|0;
                  __THREW__ = 0;
                  $15424 = (invoke_iii(416,($vinfos248|0),2)|0);
                  $15425 = __THREW__; __THREW__ = 0;
                  $15426 = $15425&1;
                  if ($15426) {
                   label = 1801;
                   break L1;
                  }
                  $15427 = ((($15424)) + 19|0);
                  $15428 = ((($15427)) + 1|0);
                  HEAP8[$15428>>0] = $15423;
                  $15429 = ((($4)) + 544|0);
                  $15430 = HEAP8[$15429>>0]|0;
                  __THREW__ = 0;
                  $15431 = (invoke_iii(416,($vinfos248|0),2)|0);
                  $15432 = __THREW__; __THREW__ = 0;
                  $15433 = $15432&1;
                  if ($15433) {
                   label = 1801;
                   break L1;
                  }
                  $15434 = ((($15431)) + 18|0);
                  HEAP8[$15434>>0] = $15430;
                  __THREW__ = 0;
                  $15435 = (invoke_iii(416,($vinfos248|0),3)|0);
                  $15436 = __THREW__; __THREW__ = 0;
                  $15437 = $15436&1;
                  if ($15437) {
                   label = 1801;
                   break L1;
                  }
                  $15438 = ((($15435)) + 17|0);
                  HEAP8[$15438>>0] = 1;
                  $15439 = ((($4)) + 120|0);
                  $15440 = +HEAPF64[$15439>>3];
                  __THREW__ = 0;
                  $15441 = (invoke_iii(416,($vinfos248|0),3)|0);
                  $15442 = __THREW__; __THREW__ = 0;
                  $15443 = $15442&1;
                  if ($15443) {
                   label = 1801;
                   break L1;
                  }
                  $15444 = ((($15441)) + 8|0);
                  HEAPF64[$15444>>3] = $15440;
                  $15445 = ((($4)) + 545|0);
                  $15446 = HEAP8[$15445>>0]|0;
                  __THREW__ = 0;
                  $15447 = (invoke_iii(416,($vinfos248|0),3)|0);
                  $15448 = __THREW__; __THREW__ = 0;
                  $15449 = $15448&1;
                  if ($15449) {
                   label = 1801;
                   break L1;
                  }
                  $15450 = ((($15447)) + 19|0);
                  HEAP8[$15450>>0] = $15446;
                  $15451 = ((($4)) + 545|0);
                  $15452 = ((($15451)) + 1|0);
                  $15453 = HEAP8[$15452>>0]|0;
                  __THREW__ = 0;
                  $15454 = (invoke_iii(416,($vinfos248|0),3)|0);
                  $15455 = __THREW__; __THREW__ = 0;
                  $15456 = $15455&1;
                  if ($15456) {
                   label = 1801;
                   break L1;
                  }
                  $15457 = ((($15454)) + 19|0);
                  $15458 = ((($15457)) + 1|0);
                  HEAP8[$15458>>0] = $15453;
                  $15459 = ((($4)) + 547|0);
                  $15460 = HEAP8[$15459>>0]|0;
                  __THREW__ = 0;
                  $15461 = (invoke_iii(416,($vinfos248|0),3)|0);
                  $15462 = __THREW__; __THREW__ = 0;
                  $15463 = $15462&1;
                  if ($15463) {
                   label = 1801;
                   break L1;
                  }
                  $15464 = ((($15461)) + 18|0);
                  HEAP8[$15464>>0] = $15460;
                  __THREW__ = 0;
                  $15465 = (invoke_iii(416,($vinfos248|0),4)|0);
                  $15466 = __THREW__; __THREW__ = 0;
                  $15467 = $15466&1;
                  if ($15467) {
                   label = 1801;
                   break L1;
                  }
                  $15468 = ((($15465)) + 17|0);
                  HEAP8[$15468>>0] = 1;
                  $15469 = ((($4)) + 160|0);
                  $15470 = +HEAPF64[$15469>>3];
                  __THREW__ = 0;
                  $15471 = (invoke_iii(416,($vinfos248|0),4)|0);
                  $15472 = __THREW__; __THREW__ = 0;
                  $15473 = $15472&1;
                  if ($15473) {
                   label = 1801;
                   break L1;
                  }
                  $15474 = ((($15471)) + 8|0);
                  HEAPF64[$15474>>3] = $15470;
                  $15475 = ((($4)) + 548|0);
                  $15476 = HEAP8[$15475>>0]|0;
                  __THREW__ = 0;
                  $15477 = (invoke_iii(416,($vinfos248|0),4)|0);
                  $15478 = __THREW__; __THREW__ = 0;
                  $15479 = $15478&1;
                  if ($15479) {
                   label = 1801;
                   break L1;
                  }
                  $15480 = ((($15477)) + 19|0);
                  HEAP8[$15480>>0] = $15476;
                  $15481 = ((($4)) + 548|0);
                  $15482 = ((($15481)) + 1|0);
                  $15483 = HEAP8[$15482>>0]|0;
                  __THREW__ = 0;
                  $15484 = (invoke_iii(416,($vinfos248|0),4)|0);
                  $15485 = __THREW__; __THREW__ = 0;
                  $15486 = $15485&1;
                  if ($15486) {
                   label = 1801;
                   break L1;
                  }
                  $15487 = ((($15484)) + 19|0);
                  $15488 = ((($15487)) + 1|0);
                  HEAP8[$15488>>0] = $15483;
                  $15489 = ((($4)) + 550|0);
                  $15490 = HEAP8[$15489>>0]|0;
                  __THREW__ = 0;
                  $15491 = (invoke_iii(416,($vinfos248|0),4)|0);
                  $15492 = __THREW__; __THREW__ = 0;
                  $15493 = $15492&1;
                  if ($15493) {
                   label = 1801;
                   break L1;
                  }
                  $15494 = ((($15491)) + 18|0);
                  HEAP8[$15494>>0] = $15490;
                  __THREW__ = 0;
                  $15495 = (invoke_iii(416,($vinfos248|0),5)|0);
                  $15496 = __THREW__; __THREW__ = 0;
                  $15497 = $15496&1;
                  if ($15497) {
                   label = 1801;
                   break L1;
                  }
                  $15498 = ((($15495)) + 17|0);
                  HEAP8[$15498>>0] = 1;
                  $15499 = ((($4)) + 200|0);
                  $15500 = +HEAPF64[$15499>>3];
                  __THREW__ = 0;
                  $15501 = (invoke_iii(416,($vinfos248|0),5)|0);
                  $15502 = __THREW__; __THREW__ = 0;
                  $15503 = $15502&1;
                  if ($15503) {
                   label = 1801;
                   break L1;
                  }
                  $15504 = ((($15501)) + 8|0);
                  HEAPF64[$15504>>3] = $15500;
                  $15505 = ((($4)) + 551|0);
                  $15506 = HEAP8[$15505>>0]|0;
                  __THREW__ = 0;
                  $15507 = (invoke_iii(416,($vinfos248|0),5)|0);
                  $15508 = __THREW__; __THREW__ = 0;
                  $15509 = $15508&1;
                  if ($15509) {
                   label = 1801;
                   break L1;
                  }
                  $15510 = ((($15507)) + 19|0);
                  HEAP8[$15510>>0] = $15506;
                  $15511 = ((($4)) + 551|0);
                  $15512 = ((($15511)) + 1|0);
                  $15513 = HEAP8[$15512>>0]|0;
                  __THREW__ = 0;
                  $15514 = (invoke_iii(416,($vinfos248|0),5)|0);
                  $15515 = __THREW__; __THREW__ = 0;
                  $15516 = $15515&1;
                  if ($15516) {
                   label = 1801;
                   break L1;
                  }
                  $15517 = ((($15514)) + 19|0);
                  $15518 = ((($15517)) + 1|0);
                  HEAP8[$15518>>0] = $15513;
                  $15519 = ((($4)) + 553|0);
                  $15520 = HEAP8[$15519>>0]|0;
                  __THREW__ = 0;
                  $15521 = (invoke_iii(416,($vinfos248|0),5)|0);
                  $15522 = __THREW__; __THREW__ = 0;
                  $15523 = $15522&1;
                  if ($15523) {
                   label = 1801;
                   break L1;
                  }
                  $15524 = ((($15521)) + 18|0);
                  HEAP8[$15524>>0] = $15520;
                  __THREW__ = 0;
                  invoke_vii(417,($vfree249|0),0);
                  $15525 = __THREW__; __THREW__ = 0;
                  $15526 = $15525&1;
                  if ($15526) {
                   label = 1801;
                   break L1;
                  }
                  $15527 = $1;
                  $15528 = HEAP32[$15527>>2]|0;
                  $15529 = ((($15528)) + 8|0);
                  $15530 = HEAP32[$15529>>2]|0;
                  __THREW__ = 0;
                  (invoke_iiii($15530|0,($15527|0),($vinfos248|0),($vfree249|0))|0);
                  $15531 = __THREW__; __THREW__ = 0;
                  $15532 = $15531&1;
                  if ($15532) {
                   label = 1802;
                   break L1;
                  }
                  __THREW__ = 0;
                  invoke_vi(371,($vfree249|0));
                  $15533 = __THREW__; __THREW__ = 0;
                  $15534 = $15533&1;
                  if ($15534) {
                   label = 1801;
                   break L1;
                  }
                  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos248);
                 }
                } while(0);
                $15535 = $ij5245;
                $15536 = (($15535) + 1)|0;
                $ij5245 = $15536;
               }
              }
             } while(0);
             $9675 = ((($4)) + 8|0);
             $9676 = +HEAPF64[$9675>>3];
             $9677 = ((($4)) + 248|0);
             $9678 = +HEAPF64[$9677>>3];
             $9679 = $9676 * $9678;
             $x340 = $9679;
             $9680 = ((($4)) + 8|0);
             $9681 = +HEAPF64[$9680>>3];
             $9682 = ((($4)) + 272|0);
             $9683 = +HEAPF64[$9682>>3];
             $9684 = $9681 * $9683;
             $x341 = $9684;
             $9685 = ((($4)) + 56|0);
             $9686 = +HEAPF64[$9685>>3];
             $9687 = 1.0 * $9686;
             $x342 = $9687;
             $9688 = ((($4)) + 16|0);
             $9689 = +HEAPF64[$9688>>3];
             $9690 = 1.0 * $9689;
             $x343 = $9690;
             $9691 = ((($4)) + 344|0);
             $9692 = +HEAPF64[$9691>>3];
             $9693 = ((($4)) + 16|0);
             $9694 = +HEAPF64[$9693>>3];
             $9695 = $9692 * $9694;
             $x344 = $9695;
             $9696 = ((($4)) + 48|0);
             $9697 = +HEAPF64[$9696>>3];
             $9698 = ((($4)) + 96|0);
             $9699 = +HEAPF64[$9698>>3];
             $9700 = $9697 * $9699;
             $x345 = $9700;
             $9701 = ((($4)) + 8|0);
             $9702 = +HEAPF64[$9701>>3];
             $9703 = ((($4)) + 296|0);
             $9704 = +HEAPF64[$9703>>3];
             $9705 = $9702 * $9704;
             $x346 = $9705;
             $9706 = $x90;
             $x347 = $9706;
             $9707 = ((($4)) + 88|0);
             $9708 = +HEAPF64[$9707>>3];
             $9709 = ((($4)) + 56|0);
             $9710 = +HEAPF64[$9709>>3];
             $9711 = $9708 * $9710;
             $9712 = $x345;
             $9713 = $9711 + $9712;
             $x348 = $9713;
             $9714 = ((($4)) + 8|0);
             $9715 = +HEAPF64[$9714>>3];
             $9716 = $x347;
             $9717 = $9715 * $9716;
             $x349 = $9717;
             $9718 = ((($4)) + 16|0);
             $9719 = +HEAPF64[$9718>>3];
             $9720 = $x347;
             $9721 = $9719 * $9720;
             $x350 = $9721;
             $9722 = ((($4)) + 16|0);
             $9723 = +HEAPF64[$9722>>3];
             $9724 = $x348;
             $9725 = $9723 * $9724;
             $x351 = $9725;
             $9726 = $x95;
             $x352 = $9726;
             $9727 = ((($4)) + 320|0);
             $9728 = +HEAPF64[$9727>>3];
             $9729 = $x350;
             $9730 = $9728 * $9729;
             $9731 = $x340;
             $9732 = $x347;
             $9733 = $9731 * $9732;
             $9734 = $9730 + $9733;
             $9735 = ((($4)) + 392|0);
             $9736 = +HEAPF64[$9735>>3];
             $9737 = $x352;
             $9738 = $9736 * $9737;
             $9739 = $9734 + $9738;
             $9740 = ((($4)) + 240|0);
             HEAPF64[$9740>>3] = $9739;
             $9741 = ((($4)) + 416|0);
             $9742 = +HEAPF64[$9741>>3];
             $9743 = $x352;
             $9744 = $9742 * $9743;
             $9745 = $x344;
             $9746 = $x347;
             $9747 = $9745 * $9746;
             $9748 = $9744 + $9747;
             $9749 = $x341;
             $9750 = $x347;
             $9751 = $9749 * $9750;
             $9752 = $9748 + $9751;
             $9753 = ((($4)) + 264|0);
             HEAPF64[$9753>>3] = $9752;
             $9754 = ((($4)) + 368|0);
             $9755 = +HEAPF64[$9754>>3];
             $9756 = $x350;
             $9757 = $9755 * $9756;
             $9758 = ((($4)) + 440|0);
             $9759 = +HEAPF64[$9758>>3];
             $9760 = $x352;
             $9761 = $9759 * $9760;
             $9762 = $9757 + $9761;
             $9763 = $x346;
             $9764 = $x347;
             $9765 = $9763 * $9764;
             $9766 = $9762 + $9765;
             $9767 = ((($4)) + 288|0);
             HEAPF64[$9767>>3] = $9766;
             $9768 = ((($4)) + 248|0);
             $9769 = +HEAPF64[$9768>>3];
             $9770 = -1.0 * $9769;
             $9771 = $x343;
             $9772 = $9770 * $9771;
             $9773 = ((($4)) + 8|0);
             $9774 = +HEAPF64[$9773>>3];
             $9775 = ((($4)) + 320|0);
             $9776 = +HEAPF64[$9775>>3];
             $9777 = $9774 * $9776;
             $9778 = $9772 + $9777;
             $9779 = ((($4)) + 312|0);
             HEAPF64[$9779>>3] = $9778;
             $9780 = ((($4)) + 272|0);
             $9781 = +HEAPF64[$9780>>3];
             $9782 = -1.0 * $9781;
             $9783 = $x343;
             $9784 = $9782 * $9783;
             $9785 = ((($4)) + 8|0);
             $9786 = +HEAPF64[$9785>>3];
             $9787 = ((($4)) + 344|0);
             $9788 = +HEAPF64[$9787>>3];
             $9789 = $9786 * $9788;
             $9790 = $9784 + $9789;
             $9791 = ((($4)) + 336|0);
             HEAPF64[$9791>>3] = $9790;
             $9792 = ((($4)) + 296|0);
             $9793 = +HEAPF64[$9792>>3];
             $9794 = -1.0 * $9793;
             $9795 = $x343;
             $9796 = $9794 * $9795;
             $9797 = ((($4)) + 8|0);
             $9798 = +HEAPF64[$9797>>3];
             $9799 = ((($4)) + 368|0);
             $9800 = +HEAPF64[$9799>>3];
             $9801 = $9798 * $9800;
             $9802 = $9796 + $9801;
             $9803 = ((($4)) + 360|0);
             HEAPF64[$9803>>3] = $9802;
             $9804 = ((($4)) + 320|0);
             $9805 = +HEAPF64[$9804>>3];
             $9806 = $x351;
             $9807 = $9805 * $9806;
             $9808 = ((($4)) + 392|0);
             $9809 = +HEAPF64[$9808>>3];
             $9810 = $x347;
             $9811 = $9809 * $9810;
             $9812 = $9807 + $9811;
             $9813 = $x340;
             $9814 = $x348;
             $9815 = $9813 * $9814;
             $9816 = $9812 + $9815;
             $9817 = ((($4)) + 384|0);
             HEAPF64[$9817>>3] = $9816;
             $9818 = ((($4)) + 416|0);
             $9819 = +HEAPF64[$9818>>3];
             $9820 = $x347;
             $9821 = $9819 * $9820;
             $9822 = $x344;
             $9823 = $x348;
             $9824 = $9822 * $9823;
             $9825 = $9821 + $9824;
             $9826 = $x341;
             $9827 = $x348;
             $9828 = $9826 * $9827;
             $9829 = $9825 + $9828;
             $9830 = ((($4)) + 408|0);
             HEAPF64[$9830>>3] = $9829;
             $9831 = ((($4)) + 368|0);
             $9832 = +HEAPF64[$9831>>3];
             $9833 = $x351;
             $9834 = $9832 * $9833;
             $9835 = ((($4)) + 440|0);
             $9836 = +HEAPF64[$9835>>3];
             $9837 = $x347;
             $9838 = $9836 * $9837;
             $9839 = $9834 + $9838;
             $9840 = $x346;
             $9841 = $x348;
             $9842 = $9840 * $9841;
             $9843 = $9839 + $9842;
             $9844 = ((($4)) + 432|0);
             HEAPF64[$9844>>3] = $9843;
             $9845 = ((($4)) + 128|0);
             $9846 = +HEAPF64[$9845>>3];
             HEAPF64[$j5eval149>>3] = $9846;
             $9847 = ((($4)) + 168|0);
             $9848 = +HEAPF64[$9847>>3];
             $9849 = ((($j5eval149)) + 8|0);
             HEAPF64[$9849>>3] = $9848;
             $9850 = ((($4)) + 176|0);
             $9851 = +HEAPF64[$9850>>3];
             $9852 = ((($j5eval149)) + 16|0);
             HEAPF64[$9852>>3] = $9851;
             $9853 = +HEAPF64[$j5eval149>>3];
             $9854 = (+__Z5IKabsd($9853));
             $9855 = $9854 < 9.9999999999999995E-7;
             do {
              if (!($9855)) {
               $9856 = ((($j5eval149)) + 8|0);
               $9857 = +HEAPF64[$9856>>3];
               $9858 = (+__Z5IKabsd($9857));
               $9859 = $9858 < 9.9999999999999995E-7;
               if ($9859) {
                break;
               }
               $9860 = ((($j5eval149)) + 16|0);
               $9861 = +HEAPF64[$9860>>3];
               $9862 = (+__Z5IKabsd($9861));
               $9863 = $9862 < 9.9999999999999995E-7;
               if ($9863) {
                break;
               }
               ;HEAP8[$j5valid235>>0]=0|0;
               $14328 = ((($4)) + 553|0);
               HEAP8[$14328>>0] = 1;
               $14329 = ((($4)) + 176|0);
               $14330 = +HEAPF64[$14329>>3];
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x431,$14330,-1);
               $14331 = ((($x431)) + 8|0);
               $14332 = HEAP8[$14331>>0]|0;
               $14333 = $14332&1;
               if (!($14333)) {
                break L39;
               }
               $14334 = +HEAPF64[$x431>>3];
               $x430 = $14334;
               $14335 = ((($4)) + 128|0);
               $14336 = +HEAPF64[$14335>>3];
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x432,$14336,-1);
               $14337 = ((($x432)) + 8|0);
               $14338 = HEAP8[$14337>>0]|0;
               $14339 = $14338&1;
               if (!($14339)) {
                break L39;
               }
               $14340 = ((($4)) + 168|0);
               $14341 = +HEAPF64[$14340>>3];
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x433,$14341,-1);
               $14342 = ((($x433)) + 8|0);
               $14343 = HEAP8[$14342>>0]|0;
               $14344 = $14343&1;
               if (!($14344)) {
                break L39;
               }
               $14345 = $x430;
               $14346 = +HEAPF64[$x432>>3];
               $14347 = $14345 * $14346;
               $14348 = +HEAPF64[$x433>>3];
               $14349 = $14347 * $14348;
               $14350 = ((($4)) + 384|0);
               $14351 = +HEAPF64[$14350>>3];
               $14352 = ((($4)) + 136|0);
               $14353 = +HEAPF64[$14352>>3];
               $14354 = $14351 * $14353;
               $14355 = ((($4)) + 264|0);
               $14356 = +HEAPF64[$14355>>3];
               $14357 = -1.0 * $14356;
               $14358 = ((($4)) + 176|0);
               $14359 = +HEAPF64[$14358>>3];
               $14360 = $14357 * $14359;
               $14361 = $14354 + $14360;
               $14362 = $14349 * $14361;
               $14363 = (+__Z5IKabsd($14362));
               $14364 = $14363 < 1.9999999999999999E-6;
               do {
                if ($14364) {
                 $14365 = ((($4)) + 384|0);
                 $14366 = +HEAPF64[$14365>>3];
                 $14367 = -1.0 * $14366;
                 $14368 = $x430;
                 $14369 = $14367 * $14368;
                 $14370 = (+__Z5IKabsd($14369));
                 $14371 = $14370 < 1.9999999999999999E-6;
                 if (!($14371)) {
                  break;
                 }
                 $14372 = $x430;
                 $14373 = +HEAPF64[$x432>>3];
                 $14374 = $14372 * $14373;
                 $14375 = +HEAPF64[$x433>>3];
                 $14376 = $14374 * $14375;
                 $14377 = ((($4)) + 384|0);
                 $14378 = +HEAPF64[$14377>>3];
                 $14379 = ((($4)) + 136|0);
                 $14380 = +HEAPF64[$14379>>3];
                 $14381 = $14378 * $14380;
                 $14382 = ((($4)) + 264|0);
                 $14383 = +HEAPF64[$14382>>3];
                 $14384 = -1.0 * $14383;
                 $14385 = ((($4)) + 176|0);
                 $14386 = +HEAPF64[$14385>>3];
                 $14387 = $14384 * $14386;
                 $14388 = $14381 + $14387;
                 $14389 = $14376 * $14388;
                 $14390 = (+__Z5IKsqrd($14389));
                 $14391 = ((($4)) + 384|0);
                 $14392 = +HEAPF64[$14391>>3];
                 $14393 = -1.0 * $14392;
                 $14394 = $x430;
                 $14395 = $14393 * $14394;
                 $14396 = (+__Z5IKsqrd($14395));
                 $14397 = $14390 + $14396;
                 $14398 = $14397 - 1.0;
                 $14399 = (+__Z5IKabsd($14398));
                 $14400 = $14399 <= 1.9999999999999999E-6;
                 if ($14400) {
                  break L39;
                 }
                }
               } while(0);
               $14401 = $x430;
               $14402 = +HEAPF64[$x432>>3];
               $14403 = $14401 * $14402;
               $14404 = +HEAPF64[$x433>>3];
               $14405 = $14403 * $14404;
               $14406 = ((($4)) + 384|0);
               $14407 = +HEAPF64[$14406>>3];
               $14408 = ((($4)) + 136|0);
               $14409 = +HEAPF64[$14408>>3];
               $14410 = $14407 * $14409;
               $14411 = ((($4)) + 264|0);
               $14412 = +HEAPF64[$14411>>3];
               $14413 = -1.0 * $14412;
               $14414 = ((($4)) + 176|0);
               $14415 = +HEAPF64[$14414>>3];
               $14416 = $14413 * $14415;
               $14417 = $14410 + $14416;
               $14418 = $14405 * $14417;
               $14419 = ((($4)) + 384|0);
               $14420 = +HEAPF64[$14419>>3];
               $14421 = -1.0 * $14420;
               $14422 = $x430;
               $14423 = $14421 * $14422;
               $14424 = (+__Z7IKatan2dd($14418,$14423));
               HEAPF64[$j5array232>>3] = $14424;
               $14425 = +HEAPF64[$j5array232>>3];
               $14426 = (+__Z5IKsind($14425));
               HEAPF64[$sj5array234>>3] = $14426;
               $14427 = +HEAPF64[$j5array232>>3];
               $14428 = (+__Z5IKcosd($14427));
               HEAPF64[$cj5array233>>3] = $14428;
               $14429 = +HEAPF64[$j5array232>>3];
               $14430 = $14429 > 3.14159265358979;
               $14431 = +HEAPF64[$j5array232>>3];
               do {
                if ($14430) {
                 $14432 = $14431 - 6.2831853071795898;
                 HEAPF64[$j5array232>>3] = $14432;
                } else {
                 $14433 = $14431 < -3.14159265358979;
                 if (!($14433)) {
                  break;
                 }
                 $14434 = +HEAPF64[$j5array232>>3];
                 $14435 = $14434 + 6.2831853071795898;
                 HEAPF64[$j5array232>>3] = $14435;
                }
               } while(0);
               HEAP8[$j5valid235>>0] = 1;
               $ij5236 = 0;
               while(1) {
                $14436 = $ij5236;
                $14437 = ($14436|0)<(1);
                if (!($14437)) {
                 break L39;
                }
                $14438 = $ij5236;
                $14439 = (($j5valid235) + ($14438)|0);
                $14440 = HEAP8[$14439>>0]|0;
                $14441 = $14440&1;
                do {
                 if ($14441) {
                  $14442 = $ij5236;
                  $14443 = $14442&255;
                  $14444 = ((($4)) + 551|0);
                  HEAP8[$14444>>0] = $14443;
                  $14445 = ((($4)) + 551|0);
                  $14446 = ((($14445)) + 1|0);
                  HEAP8[$14446>>0] = -1;
                  $14447 = $ij5236;
                  $14448 = (($14447) + 1)|0;
                  $iij5237 = $14448;
                  L228: while(1) {
                   $14449 = $iij5237;
                   $14450 = ($14449|0)<(1);
                   if (!($14450)) {
                    break;
                   }
                   $14451 = $iij5237;
                   $14452 = (($j5valid235) + ($14451)|0);
                   $14453 = HEAP8[$14452>>0]|0;
                   $14454 = $14453&1;
                   do {
                    if ($14454) {
                     $14455 = $ij5236;
                     $14456 = (($cj5array233) + ($14455<<3)|0);
                     $14457 = +HEAPF64[$14456>>3];
                     $14458 = $iij5237;
                     $14459 = (($cj5array233) + ($14458<<3)|0);
                     $14460 = +HEAPF64[$14459>>3];
                     $14461 = $14457 - $14460;
                     $14462 = (+__Z5IKabsd($14461));
                     $14463 = $14462 < 9.9999999999999995E-7;
                     if (!($14463)) {
                      break;
                     }
                     $14464 = $ij5236;
                     $14465 = (($sj5array234) + ($14464<<3)|0);
                     $14466 = +HEAPF64[$14465>>3];
                     $14467 = $iij5237;
                     $14468 = (($sj5array234) + ($14467<<3)|0);
                     $14469 = +HEAPF64[$14468>>3];
                     $14470 = $14466 - $14469;
                     $14471 = (+__Z5IKabsd($14470));
                     $14472 = $14471 < 9.9999999999999995E-7;
                     if ($14472) {
                      label = 1683;
                      break L228;
                     }
                    }
                   } while(0);
                   $14479 = $iij5237;
                   $14480 = (($14479) + 1)|0;
                   $iij5237 = $14480;
                  }
                  if ((label|0) == 1683) {
                   label = 0;
                   $14473 = $iij5237;
                   $14474 = (($j5valid235) + ($14473)|0);
                   HEAP8[$14474>>0] = 0;
                   $14475 = $iij5237;
                   $14476 = $14475&255;
                   $14477 = ((($4)) + 551|0);
                   $14478 = ((($14477)) + 1|0);
                   HEAP8[$14478>>0] = $14476;
                  }
                  $14481 = $ij5236;
                  $14482 = (($j5array232) + ($14481<<3)|0);
                  $14483 = +HEAPF64[$14482>>3];
                  $14484 = ((($4)) + 200|0);
                  HEAPF64[$14484>>3] = $14483;
                  $14485 = $ij5236;
                  $14486 = (($cj5array233) + ($14485<<3)|0);
                  $14487 = +HEAPF64[$14486>>3];
                  $14488 = ((($4)) + 208|0);
                  HEAPF64[$14488>>3] = $14487;
                  $14489 = $ij5236;
                  $14490 = (($sj5array234) + ($14489<<3)|0);
                  $14491 = +HEAPF64[$14490>>3];
                  $14492 = ((($4)) + 216|0);
                  HEAPF64[$14492>>3] = $14491;
                  $14493 = ((($4)) + 200|0);
                  $14494 = +HEAPF64[$14493>>3];
                  $14495 = (+__Z5IKsind($14494));
                  $x434 = $14495;
                  $14496 = ((($4)) + 200|0);
                  $14497 = +HEAPF64[$14496>>3];
                  $14498 = (+__Z5IKcosd($14497));
                  $x435 = $14498;
                  $14499 = ((($4)) + 128|0);
                  $14500 = +HEAPF64[$14499>>3];
                  $14501 = ((($4)) + 240|0);
                  $14502 = +HEAPF64[$14501>>3];
                  $14503 = $14500 * $14502;
                  $x436 = $14503;
                  $14504 = ((($4)) + 128|0);
                  $14505 = +HEAPF64[$14504>>3];
                  $14506 = ((($4)) + 168|0);
                  $14507 = +HEAPF64[$14506>>3];
                  $14508 = $14505 * $14507;
                  $x437 = $14508;
                  $14509 = ((($4)) + 168|0);
                  $14510 = +HEAPF64[$14509>>3];
                  $14511 = ((($4)) + 136|0);
                  $14512 = +HEAPF64[$14511>>3];
                  $14513 = $14510 * $14512;
                  $x438 = $14513;
                  $14514 = ((($4)) + 136|0);
                  $14515 = +HEAPF64[$14514>>3];
                  $14516 = 1.0 * $14515;
                  $x439 = $14516;
                  $14517 = ((($4)) + 176|0);
                  $14518 = +HEAPF64[$14517>>3];
                  $14519 = 1.0 * $14518;
                  $x440 = $14519;
                  $14520 = $x435;
                  $14521 = 1.0 * $14520;
                  $x441 = $14521;
                  $14522 = ((($4)) + 136|0);
                  $14523 = +HEAPF64[$14522>>3];
                  $14524 = $x434;
                  $14525 = $14523 * $14524;
                  $x442 = $14525;
                  $14526 = $x434;
                  $14527 = 1.0 * $14526;
                  $x443 = $14527;
                  $14528 = ((($4)) + 176|0);
                  $14529 = +HEAPF64[$14528>>3];
                  $14530 = $x435;
                  $14531 = $14529 * $14530;
                  $14532 = ((($4)) + 384|0);
                  $14533 = +HEAPF64[$14532>>3];
                  $14534 = $14531 + $14533;
                  HEAPF64[$evalcond238>>3] = $14534;
                  $14535 = $x434;
                  $14536 = -1.0 * $14535;
                  $14537 = $x440;
                  $14538 = $14536 * $14537;
                  $14539 = ((($4)) + 408|0);
                  $14540 = +HEAPF64[$14539>>3];
                  $14541 = $14538 + $14540;
                  $14542 = ((($evalcond238)) + 8|0);
                  HEAPF64[$14542>>3] = $14541;
                  $14543 = ((($4)) + 336|0);
                  $14544 = +HEAPF64[$14543>>3];
                  $14545 = ((($4)) + 136|0);
                  $14546 = +HEAPF64[$14545>>3];
                  $14547 = $14544 * $14546;
                  $14548 = ((($4)) + 168|0);
                  $14549 = +HEAPF64[$14548>>3];
                  $14550 = $x434;
                  $14551 = $14549 * $14550;
                  $14552 = $14547 + $14551;
                  $14553 = ((($4)) + 128|0);
                  $14554 = +HEAPF64[$14553>>3];
                  $14555 = ((($4)) + 264|0);
                  $14556 = +HEAPF64[$14555>>3];
                  $14557 = $14554 * $14556;
                  $14558 = $14552 + $14557;
                  $14559 = ((($evalcond238)) + 16|0);
                  HEAPF64[$14559>>3] = $14558;
                  $14560 = ((($4)) + 240|0);
                  $14561 = +HEAPF64[$14560>>3];
                  $14562 = -1.0 * $14561;
                  $14563 = $x439;
                  $14564 = $14562 * $14563;
                  $14565 = $x443;
                  $14566 = -1.0 * $14565;
                  $14567 = $14564 + $14566;
                  $14568 = ((($4)) + 128|0);
                  $14569 = +HEAPF64[$14568>>3];
                  $14570 = ((($4)) + 312|0);
                  $14571 = +HEAPF64[$14570>>3];
                  $14572 = $14569 * $14571;
                  $14573 = $14567 + $14572;
                  $14574 = ((($evalcond238)) + 24|0);
                  HEAPF64[$14574>>3] = $14573;
                  $14575 = $x441;
                  $14576 = -1.0 * $14575;
                  $14577 = ((($4)) + 264|0);
                  $14578 = +HEAPF64[$14577>>3];
                  $14579 = -1.0 * $14578;
                  $14580 = $x439;
                  $14581 = $14579 * $14580;
                  $14582 = $14576 + $14581;
                  $14583 = ((($4)) + 128|0);
                  $14584 = +HEAPF64[$14583>>3];
                  $14585 = ((($4)) + 336|0);
                  $14586 = +HEAPF64[$14585>>3];
                  $14587 = $14584 * $14586;
                  $14588 = $14582 + $14587;
                  $14589 = ((($evalcond238)) + 32|0);
                  HEAPF64[$14589>>3] = $14588;
                  $14590 = $x434;
                  $14591 = $x437;
                  $14592 = $14590 * $14591;
                  $14593 = ((($4)) + 136|0);
                  $14594 = +HEAPF64[$14593>>3];
                  $14595 = $x435;
                  $14596 = $14594 * $14595;
                  $14597 = $14592 + $14596;
                  $14598 = ((($4)) + 264|0);
                  $14599 = +HEAPF64[$14598>>3];
                  $14600 = $14597 + $14599;
                  $14601 = ((($evalcond238)) + 40|0);
                  HEAPF64[$14601>>3] = $14600;
                  $14602 = ((($4)) + 312|0);
                  $14603 = +HEAPF64[$14602>>3];
                  $14604 = ((($4)) + 136|0);
                  $14605 = +HEAPF64[$14604>>3];
                  $14606 = $14603 * $14605;
                  $14607 = ((($4)) + 168|0);
                  $14608 = +HEAPF64[$14607>>3];
                  $14609 = -1.0 * $14608;
                  $14610 = $x441;
                  $14611 = $14609 * $14610;
                  $14612 = $14606 + $14611;
                  $14613 = $x436;
                  $14614 = $14612 + $14613;
                  $14615 = ((($evalcond238)) + 48|0);
                  HEAPF64[$14615>>3] = $14614;
                  $14616 = $x437;
                  $14617 = -1.0 * $14616;
                  $14618 = $x441;
                  $14619 = $14617 * $14618;
                  $14620 = $x442;
                  $14621 = $14619 + $14620;
                  $14622 = ((($4)) + 240|0);
                  $14623 = +HEAPF64[$14622>>3];
                  $14624 = $14621 + $14623;
                  $14625 = ((($evalcond238)) + 56|0);
                  HEAPF64[$14625>>3] = $14624;
                  $14626 = ((($4)) + 128|0);
                  $14627 = +HEAPF64[$14626>>3];
                  $14628 = -1.0 * $14627;
                  $14629 = $x441;
                  $14630 = $14628 * $14629;
                  $14631 = $x434;
                  $14632 = $x438;
                  $14633 = $14631 * $14632;
                  $14634 = $14630 + $14633;
                  $14635 = ((($4)) + 336|0);
                  $14636 = +HEAPF64[$14635>>3];
                  $14637 = $14634 + $14636;
                  $14638 = ((($evalcond238)) + 64|0);
                  HEAPF64[$14638>>3] = $14637;
                  $14639 = $x438;
                  $14640 = -1.0 * $14639;
                  $14641 = $x441;
                  $14642 = $14640 * $14641;
                  $14643 = ((($4)) + 128|0);
                  $14644 = +HEAPF64[$14643>>3];
                  $14645 = -1.0 * $14644;
                  $14646 = $x443;
                  $14647 = $14645 * $14646;
                  $14648 = $14642 + $14647;
                  $14649 = ((($4)) + 312|0);
                  $14650 = +HEAPF64[$14649>>3];
                  $14651 = $14648 + $14650;
                  $14652 = ((($evalcond238)) + 72|0);
                  HEAPF64[$14652>>3] = $14651;
                  $14653 = ((($4)) + 264|0);
                  $14654 = +HEAPF64[$14653>>3];
                  $14655 = $x437;
                  $14656 = $14654 * $14655;
                  $14657 = ((($4)) + 336|0);
                  $14658 = +HEAPF64[$14657>>3];
                  $14659 = $x438;
                  $14660 = $14658 * $14659;
                  $14661 = $14656 + $14660;
                  $14662 = $x434;
                  $14663 = $14661 + $14662;
                  $14664 = ((($4)) + 408|0);
                  $14665 = +HEAPF64[$14664>>3];
                  $14666 = -1.0 * $14665;
                  $14667 = $x440;
                  $14668 = $14666 * $14667;
                  $14669 = $14663 + $14668;
                  $14670 = ((($evalcond238)) + 80|0);
                  HEAPF64[$14670>>3] = $14669;
                  $14671 = $x441;
                  $14672 = -1.0 * $14671;
                  $14673 = ((($4)) + 168|0);
                  $14674 = +HEAPF64[$14673>>3];
                  $14675 = $x436;
                  $14676 = $14674 * $14675;
                  $14677 = $14672 + $14676;
                  $14678 = ((($4)) + 312|0);
                  $14679 = +HEAPF64[$14678>>3];
                  $14680 = $x438;
                  $14681 = $14679 * $14680;
                  $14682 = $14677 + $14681;
                  $14683 = ((($4)) + 384|0);
                  $14684 = +HEAPF64[$14683>>3];
                  $14685 = -1.0 * $14684;
                  $14686 = $x440;
                  $14687 = $14685 * $14686;
                  $14688 = $14682 + $14687;
                  $14689 = ((($evalcond238)) + 88|0);
                  HEAPF64[$14689>>3] = $14688;
                  $14690 = +HEAPF64[$evalcond238>>3];
                  $14691 = (+__Z5IKabsd($14690));
                  $14692 = $14691 > 5.0000000000000004E-6;
                  if ($14692) {
                   break;
                  }
                  $14693 = ((($evalcond238)) + 8|0);
                  $14694 = +HEAPF64[$14693>>3];
                  $14695 = (+__Z5IKabsd($14694));
                  $14696 = $14695 > 5.0000000000000004E-6;
                  if ($14696) {
                   break;
                  }
                  $14697 = ((($evalcond238)) + 16|0);
                  $14698 = +HEAPF64[$14697>>3];
                  $14699 = (+__Z5IKabsd($14698));
                  $14700 = $14699 > 5.0000000000000004E-6;
                  if ($14700) {
                   break;
                  }
                  $14701 = ((($evalcond238)) + 24|0);
                  $14702 = +HEAPF64[$14701>>3];
                  $14703 = (+__Z5IKabsd($14702));
                  $14704 = $14703 > 5.0000000000000004E-6;
                  if ($14704) {
                   break;
                  }
                  $14705 = ((($evalcond238)) + 32|0);
                  $14706 = +HEAPF64[$14705>>3];
                  $14707 = (+__Z5IKabsd($14706));
                  $14708 = $14707 > 5.0000000000000004E-6;
                  if ($14708) {
                   break;
                  }
                  $14709 = ((($evalcond238)) + 40|0);
                  $14710 = +HEAPF64[$14709>>3];
                  $14711 = (+__Z5IKabsd($14710));
                  $14712 = $14711 > 5.0000000000000004E-6;
                  if ($14712) {
                   break;
                  }
                  $14713 = ((($evalcond238)) + 48|0);
                  $14714 = +HEAPF64[$14713>>3];
                  $14715 = (+__Z5IKabsd($14714));
                  $14716 = $14715 > 5.0000000000000004E-6;
                  if ($14716) {
                   break;
                  }
                  $14717 = ((($evalcond238)) + 56|0);
                  $14718 = +HEAPF64[$14717>>3];
                  $14719 = (+__Z5IKabsd($14718));
                  $14720 = $14719 > 5.0000000000000004E-6;
                  if ($14720) {
                   break;
                  }
                  $14721 = ((($evalcond238)) + 64|0);
                  $14722 = +HEAPF64[$14721>>3];
                  $14723 = (+__Z5IKabsd($14722));
                  $14724 = $14723 > 5.0000000000000004E-6;
                  if ($14724) {
                   break;
                  }
                  $14725 = ((($evalcond238)) + 72|0);
                  $14726 = +HEAPF64[$14725>>3];
                  $14727 = (+__Z5IKabsd($14726));
                  $14728 = $14727 > 5.0000000000000004E-6;
                  if ($14728) {
                   break;
                  }
                  $14729 = ((($evalcond238)) + 80|0);
                  $14730 = +HEAPF64[$14729>>3];
                  $14731 = (+__Z5IKabsd($14730));
                  $14732 = $14731 > 5.0000000000000004E-6;
                  if ($14732) {
                   break;
                  }
                  $14733 = ((($evalcond238)) + 88|0);
                  $14734 = +HEAPF64[$14733>>3];
                  $14735 = (+__Z5IKabsd($14734));
                  $14736 = $14735 > 5.0000000000000004E-6;
                  if ($14736) {
                   break;
                  }
                  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos239,6);
                  __THREW__ = 0;
                  $14737 = (invoke_iii(416,($vinfos239|0),0)|0);
                  $14738 = __THREW__; __THREW__ = 0;
                  $14739 = $14738&1;
                  if ($14739) {
                   label = 1732;
                   break L1;
                  }
                  $14740 = ((($14737)) + 17|0);
                  HEAP8[$14740>>0] = 1;
                  $14741 = +HEAPF64[$4>>3];
                  __THREW__ = 0;
                  $14742 = (invoke_iii(416,($vinfos239|0),0)|0);
                  $14743 = __THREW__; __THREW__ = 0;
                  $14744 = $14743&1;
                  if ($14744) {
                   label = 1732;
                   break L1;
                  }
                  $14745 = ((($14742)) + 8|0);
                  HEAPF64[$14745>>3] = $14741;
                  $14746 = ((($4)) + 536|0);
                  $14747 = HEAP8[$14746>>0]|0;
                  __THREW__ = 0;
                  $14748 = (invoke_iii(416,($vinfos239|0),0)|0);
                  $14749 = __THREW__; __THREW__ = 0;
                  $14750 = $14749&1;
                  if ($14750) {
                   label = 1732;
                   break L1;
                  }
                  $14751 = ((($14748)) + 19|0);
                  HEAP8[$14751>>0] = $14747;
                  $14752 = ((($4)) + 536|0);
                  $14753 = ((($14752)) + 1|0);
                  $14754 = HEAP8[$14753>>0]|0;
                  __THREW__ = 0;
                  $14755 = (invoke_iii(416,($vinfos239|0),0)|0);
                  $14756 = __THREW__; __THREW__ = 0;
                  $14757 = $14756&1;
                  if ($14757) {
                   label = 1732;
                   break L1;
                  }
                  $14758 = ((($14755)) + 19|0);
                  $14759 = ((($14758)) + 1|0);
                  HEAP8[$14759>>0] = $14754;
                  $14760 = ((($4)) + 538|0);
                  $14761 = HEAP8[$14760>>0]|0;
                  __THREW__ = 0;
                  $14762 = (invoke_iii(416,($vinfos239|0),0)|0);
                  $14763 = __THREW__; __THREW__ = 0;
                  $14764 = $14763&1;
                  if ($14764) {
                   label = 1732;
                   break L1;
                  }
                  $14765 = ((($14762)) + 18|0);
                  HEAP8[$14765>>0] = $14761;
                  __THREW__ = 0;
                  $14766 = (invoke_iii(416,($vinfos239|0),1)|0);
                  $14767 = __THREW__; __THREW__ = 0;
                  $14768 = $14767&1;
                  if ($14768) {
                   label = 1732;
                   break L1;
                  }
                  $14769 = ((($14766)) + 17|0);
                  HEAP8[$14769>>0] = 1;
                  $14770 = ((($4)) + 40|0);
                  $14771 = +HEAPF64[$14770>>3];
                  __THREW__ = 0;
                  $14772 = (invoke_iii(416,($vinfos239|0),1)|0);
                  $14773 = __THREW__; __THREW__ = 0;
                  $14774 = $14773&1;
                  if ($14774) {
                   label = 1732;
                   break L1;
                  }
                  $14775 = ((($14772)) + 8|0);
                  HEAPF64[$14775>>3] = $14771;
                  $14776 = ((($4)) + 539|0);
                  $14777 = HEAP8[$14776>>0]|0;
                  __THREW__ = 0;
                  $14778 = (invoke_iii(416,($vinfos239|0),1)|0);
                  $14779 = __THREW__; __THREW__ = 0;
                  $14780 = $14779&1;
                  if ($14780) {
                   label = 1732;
                   break L1;
                  }
                  $14781 = ((($14778)) + 19|0);
                  HEAP8[$14781>>0] = $14777;
                  $14782 = ((($4)) + 539|0);
                  $14783 = ((($14782)) + 1|0);
                  $14784 = HEAP8[$14783>>0]|0;
                  __THREW__ = 0;
                  $14785 = (invoke_iii(416,($vinfos239|0),1)|0);
                  $14786 = __THREW__; __THREW__ = 0;
                  $14787 = $14786&1;
                  if ($14787) {
                   label = 1732;
                   break L1;
                  }
                  $14788 = ((($14785)) + 19|0);
                  $14789 = ((($14788)) + 1|0);
                  HEAP8[$14789>>0] = $14784;
                  $14790 = ((($4)) + 541|0);
                  $14791 = HEAP8[$14790>>0]|0;
                  __THREW__ = 0;
                  $14792 = (invoke_iii(416,($vinfos239|0),1)|0);
                  $14793 = __THREW__; __THREW__ = 0;
                  $14794 = $14793&1;
                  if ($14794) {
                   label = 1732;
                   break L1;
                  }
                  $14795 = ((($14792)) + 18|0);
                  HEAP8[$14795>>0] = $14791;
                  __THREW__ = 0;
                  $14796 = (invoke_iii(416,($vinfos239|0),2)|0);
                  $14797 = __THREW__; __THREW__ = 0;
                  $14798 = $14797&1;
                  if ($14798) {
                   label = 1732;
                   break L1;
                  }
                  $14799 = ((($14796)) + 17|0);
                  HEAP8[$14799>>0] = 1;
                  $14800 = ((($4)) + 80|0);
                  $14801 = +HEAPF64[$14800>>3];
                  __THREW__ = 0;
                  $14802 = (invoke_iii(416,($vinfos239|0),2)|0);
                  $14803 = __THREW__; __THREW__ = 0;
                  $14804 = $14803&1;
                  if ($14804) {
                   label = 1732;
                   break L1;
                  }
                  $14805 = ((($14802)) + 8|0);
                  HEAPF64[$14805>>3] = $14801;
                  $14806 = ((($4)) + 542|0);
                  $14807 = HEAP8[$14806>>0]|0;
                  __THREW__ = 0;
                  $14808 = (invoke_iii(416,($vinfos239|0),2)|0);
                  $14809 = __THREW__; __THREW__ = 0;
                  $14810 = $14809&1;
                  if ($14810) {
                   label = 1732;
                   break L1;
                  }
                  $14811 = ((($14808)) + 19|0);
                  HEAP8[$14811>>0] = $14807;
                  $14812 = ((($4)) + 542|0);
                  $14813 = ((($14812)) + 1|0);
                  $14814 = HEAP8[$14813>>0]|0;
                  __THREW__ = 0;
                  $14815 = (invoke_iii(416,($vinfos239|0),2)|0);
                  $14816 = __THREW__; __THREW__ = 0;
                  $14817 = $14816&1;
                  if ($14817) {
                   label = 1732;
                   break L1;
                  }
                  $14818 = ((($14815)) + 19|0);
                  $14819 = ((($14818)) + 1|0);
                  HEAP8[$14819>>0] = $14814;
                  $14820 = ((($4)) + 544|0);
                  $14821 = HEAP8[$14820>>0]|0;
                  __THREW__ = 0;
                  $14822 = (invoke_iii(416,($vinfos239|0),2)|0);
                  $14823 = __THREW__; __THREW__ = 0;
                  $14824 = $14823&1;
                  if ($14824) {
                   label = 1732;
                   break L1;
                  }
                  $14825 = ((($14822)) + 18|0);
                  HEAP8[$14825>>0] = $14821;
                  __THREW__ = 0;
                  $14826 = (invoke_iii(416,($vinfos239|0),3)|0);
                  $14827 = __THREW__; __THREW__ = 0;
                  $14828 = $14827&1;
                  if ($14828) {
                   label = 1732;
                   break L1;
                  }
                  $14829 = ((($14826)) + 17|0);
                  HEAP8[$14829>>0] = 1;
                  $14830 = ((($4)) + 120|0);
                  $14831 = +HEAPF64[$14830>>3];
                  __THREW__ = 0;
                  $14832 = (invoke_iii(416,($vinfos239|0),3)|0);
                  $14833 = __THREW__; __THREW__ = 0;
                  $14834 = $14833&1;
                  if ($14834) {
                   label = 1732;
                   break L1;
                  }
                  $14835 = ((($14832)) + 8|0);
                  HEAPF64[$14835>>3] = $14831;
                  $14836 = ((($4)) + 545|0);
                  $14837 = HEAP8[$14836>>0]|0;
                  __THREW__ = 0;
                  $14838 = (invoke_iii(416,($vinfos239|0),3)|0);
                  $14839 = __THREW__; __THREW__ = 0;
                  $14840 = $14839&1;
                  if ($14840) {
                   label = 1732;
                   break L1;
                  }
                  $14841 = ((($14838)) + 19|0);
                  HEAP8[$14841>>0] = $14837;
                  $14842 = ((($4)) + 545|0);
                  $14843 = ((($14842)) + 1|0);
                  $14844 = HEAP8[$14843>>0]|0;
                  __THREW__ = 0;
                  $14845 = (invoke_iii(416,($vinfos239|0),3)|0);
                  $14846 = __THREW__; __THREW__ = 0;
                  $14847 = $14846&1;
                  if ($14847) {
                   label = 1732;
                   break L1;
                  }
                  $14848 = ((($14845)) + 19|0);
                  $14849 = ((($14848)) + 1|0);
                  HEAP8[$14849>>0] = $14844;
                  $14850 = ((($4)) + 547|0);
                  $14851 = HEAP8[$14850>>0]|0;
                  __THREW__ = 0;
                  $14852 = (invoke_iii(416,($vinfos239|0),3)|0);
                  $14853 = __THREW__; __THREW__ = 0;
                  $14854 = $14853&1;
                  if ($14854) {
                   label = 1732;
                   break L1;
                  }
                  $14855 = ((($14852)) + 18|0);
                  HEAP8[$14855>>0] = $14851;
                  __THREW__ = 0;
                  $14856 = (invoke_iii(416,($vinfos239|0),4)|0);
                  $14857 = __THREW__; __THREW__ = 0;
                  $14858 = $14857&1;
                  if ($14858) {
                   label = 1732;
                   break L1;
                  }
                  $14859 = ((($14856)) + 17|0);
                  HEAP8[$14859>>0] = 1;
                  $14860 = ((($4)) + 160|0);
                  $14861 = +HEAPF64[$14860>>3];
                  __THREW__ = 0;
                  $14862 = (invoke_iii(416,($vinfos239|0),4)|0);
                  $14863 = __THREW__; __THREW__ = 0;
                  $14864 = $14863&1;
                  if ($14864) {
                   label = 1732;
                   break L1;
                  }
                  $14865 = ((($14862)) + 8|0);
                  HEAPF64[$14865>>3] = $14861;
                  $14866 = ((($4)) + 548|0);
                  $14867 = HEAP8[$14866>>0]|0;
                  __THREW__ = 0;
                  $14868 = (invoke_iii(416,($vinfos239|0),4)|0);
                  $14869 = __THREW__; __THREW__ = 0;
                  $14870 = $14869&1;
                  if ($14870) {
                   label = 1732;
                   break L1;
                  }
                  $14871 = ((($14868)) + 19|0);
                  HEAP8[$14871>>0] = $14867;
                  $14872 = ((($4)) + 548|0);
                  $14873 = ((($14872)) + 1|0);
                  $14874 = HEAP8[$14873>>0]|0;
                  __THREW__ = 0;
                  $14875 = (invoke_iii(416,($vinfos239|0),4)|0);
                  $14876 = __THREW__; __THREW__ = 0;
                  $14877 = $14876&1;
                  if ($14877) {
                   label = 1732;
                   break L1;
                  }
                  $14878 = ((($14875)) + 19|0);
                  $14879 = ((($14878)) + 1|0);
                  HEAP8[$14879>>0] = $14874;
                  $14880 = ((($4)) + 550|0);
                  $14881 = HEAP8[$14880>>0]|0;
                  __THREW__ = 0;
                  $14882 = (invoke_iii(416,($vinfos239|0),4)|0);
                  $14883 = __THREW__; __THREW__ = 0;
                  $14884 = $14883&1;
                  if ($14884) {
                   label = 1732;
                   break L1;
                  }
                  $14885 = ((($14882)) + 18|0);
                  HEAP8[$14885>>0] = $14881;
                  __THREW__ = 0;
                  $14886 = (invoke_iii(416,($vinfos239|0),5)|0);
                  $14887 = __THREW__; __THREW__ = 0;
                  $14888 = $14887&1;
                  if ($14888) {
                   label = 1732;
                   break L1;
                  }
                  $14889 = ((($14886)) + 17|0);
                  HEAP8[$14889>>0] = 1;
                  $14890 = ((($4)) + 200|0);
                  $14891 = +HEAPF64[$14890>>3];
                  __THREW__ = 0;
                  $14892 = (invoke_iii(416,($vinfos239|0),5)|0);
                  $14893 = __THREW__; __THREW__ = 0;
                  $14894 = $14893&1;
                  if ($14894) {
                   label = 1732;
                   break L1;
                  }
                  $14895 = ((($14892)) + 8|0);
                  HEAPF64[$14895>>3] = $14891;
                  $14896 = ((($4)) + 551|0);
                  $14897 = HEAP8[$14896>>0]|0;
                  __THREW__ = 0;
                  $14898 = (invoke_iii(416,($vinfos239|0),5)|0);
                  $14899 = __THREW__; __THREW__ = 0;
                  $14900 = $14899&1;
                  if ($14900) {
                   label = 1732;
                   break L1;
                  }
                  $14901 = ((($14898)) + 19|0);
                  HEAP8[$14901>>0] = $14897;
                  $14902 = ((($4)) + 551|0);
                  $14903 = ((($14902)) + 1|0);
                  $14904 = HEAP8[$14903>>0]|0;
                  __THREW__ = 0;
                  $14905 = (invoke_iii(416,($vinfos239|0),5)|0);
                  $14906 = __THREW__; __THREW__ = 0;
                  $14907 = $14906&1;
                  if ($14907) {
                   label = 1732;
                   break L1;
                  }
                  $14908 = ((($14905)) + 19|0);
                  $14909 = ((($14908)) + 1|0);
                  HEAP8[$14909>>0] = $14904;
                  $14910 = ((($4)) + 553|0);
                  $14911 = HEAP8[$14910>>0]|0;
                  __THREW__ = 0;
                  $14912 = (invoke_iii(416,($vinfos239|0),5)|0);
                  $14913 = __THREW__; __THREW__ = 0;
                  $14914 = $14913&1;
                  if ($14914) {
                   label = 1732;
                   break L1;
                  }
                  $14915 = ((($14912)) + 18|0);
                  HEAP8[$14915>>0] = $14911;
                  __THREW__ = 0;
                  invoke_vii(417,($vfree240|0),0);
                  $14916 = __THREW__; __THREW__ = 0;
                  $14917 = $14916&1;
                  if ($14917) {
                   label = 1732;
                   break L1;
                  }
                  $14918 = $1;
                  $14919 = HEAP32[$14918>>2]|0;
                  $14920 = ((($14919)) + 8|0);
                  $14921 = HEAP32[$14920>>2]|0;
                  __THREW__ = 0;
                  (invoke_iiii($14921|0,($14918|0),($vinfos239|0),($vfree240|0))|0);
                  $14922 = __THREW__; __THREW__ = 0;
                  $14923 = $14922&1;
                  if ($14923) {
                   label = 1733;
                   break L1;
                  }
                  __THREW__ = 0;
                  invoke_vi(371,($vfree240|0));
                  $14924 = __THREW__; __THREW__ = 0;
                  $14925 = $14924&1;
                  if ($14925) {
                   label = 1732;
                   break L1;
                  }
                  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos239);
                 }
                } while(0);
                $14926 = $ij5236;
                $14927 = (($14926) + 1)|0;
                $ij5236 = $14927;
               }
              }
             } while(0);
             $bgotonextstatement151 = 1;
             $9864 = ((($4)) + 432|0);
             $9865 = +HEAPF64[$9864>>3];
             $9866 = ((($4)) + 168|0);
             $9867 = +HEAPF64[$9866>>3];
             $9868 = -1.0 * $9867;
             $9869 = $9865 + $9868;
             $x353 = $9869;
             $9870 = ((($4)) + 176|0);
             $9871 = +HEAPF64[$9870>>3];
             $9872 = -1.0 * $9871;
             $9873 = ((($4)) + 360|0);
             $9874 = +HEAPF64[$9873>>3];
             $9875 = $9872 + $9874;
             $x354 = $9875;
             $9876 = ((($4)) + 168|0);
             $9877 = +HEAPF64[$9876>>3];
             $9878 = 1.0 * $9877;
             $x355 = $9878;
             $9879 = ((($4)) + 176|0);
             $9880 = +HEAPF64[$9879>>3];
             $9881 = 1.0 * $9880;
             $x356 = $9881;
             $9882 = ((($4)) + 120|0);
             $9883 = +HEAPF64[$9882>>3];
             $9884 = -1.5707963267949001 + $9883;
             $9885 = (+__Z5IKabsd($9884));
             $9886 = 3.14159265358979 + $9885;
             $9887 = (+__Z6IKfmoddd($9886,6.2831853071795898));
             $9888 = -3.14159265358979 + $9887;
             HEAPF64[$evalcond150>>3] = $9888;
             $9889 = $x353;
             $9890 = ((($evalcond150)) + 8|0);
             HEAPF64[$9890>>3] = $9889;
             $9891 = $x353;
             $9892 = ((($evalcond150)) + 16|0);
             HEAPF64[$9892>>3] = $9891;
             $9893 = ((($4)) + 288|0);
             $9894 = +HEAPF64[$9893>>3];
             $9895 = ((($evalcond150)) + 24|0);
             HEAPF64[$9895>>3] = $9894;
             $9896 = $x354;
             $9897 = ((($evalcond150)) + 32|0);
             HEAPF64[$9897>>3] = $9896;
             $9898 = $x354;
             $9899 = ((($evalcond150)) + 40|0);
             HEAPF64[$9899>>3] = $9898;
             $9900 = ((($4)) + 432|0);
             $9901 = +HEAPF64[$9900>>3];
             $9902 = -1.0 * $9901;
             $9903 = $x356;
             $9904 = $9902 * $9903;
             $9905 = ((($4)) + 168|0);
             $9906 = +HEAPF64[$9905>>3];
             $9907 = ((($4)) + 360|0);
             $9908 = +HEAPF64[$9907>>3];
             $9909 = $9906 * $9908;
             $9910 = $9904 + $9909;
             $9911 = ((($evalcond150)) + 48|0);
             HEAPF64[$9911>>3] = $9910;
             $9912 = ((($4)) + 312|0);
             $9913 = +HEAPF64[$9912>>3];
             $9914 = -1.0 * $9913;
             $9915 = $x356;
             $9916 = $9914 * $9915;
             $9917 = ((($4)) + 384|0);
             $9918 = +HEAPF64[$9917>>3];
             $9919 = -1.0 * $9918;
             $9920 = $x355;
             $9921 = $9919 * $9920;
             $9922 = $9916 + $9921;
             $9923 = ((($evalcond150)) + 56|0);
             HEAPF64[$9923>>3] = $9922;
             $9924 = ((($4)) + 336|0);
             $9925 = +HEAPF64[$9924>>3];
             $9926 = -1.0 * $9925;
             $9927 = $x356;
             $9928 = $9926 * $9927;
             $9929 = ((($4)) + 408|0);
             $9930 = +HEAPF64[$9929>>3];
             $9931 = -1.0 * $9930;
             $9932 = $x355;
             $9933 = $9931 * $9932;
             $9934 = $9928 + $9933;
             $9935 = ((($evalcond150)) + 64|0);
             HEAPF64[$9935>>3] = $9934;
             $9936 = ((($4)) + 432|0);
             $9937 = +HEAPF64[$9936>>3];
             $9938 = -1.0 * $9937;
             $9939 = $x355;
             $9940 = $9938 * $9939;
             $9941 = 1.0 + $9940;
             $9942 = ((($4)) + 360|0);
             $9943 = +HEAPF64[$9942>>3];
             $9944 = -1.0 * $9943;
             $9945 = $x356;
             $9946 = $9944 * $9945;
             $9947 = $9941 + $9946;
             $9948 = ((($evalcond150)) + 72|0);
             HEAPF64[$9948>>3] = $9947;
             $9949 = +HEAPF64[$evalcond150>>3];
             $9950 = (+__Z5IKabsd($9949));
             $9951 = $9950 < 9.9999999999999995E-7;
             L285: do {
              if ($9951) {
               $9952 = ((($evalcond150)) + 8|0);
               $9953 = +HEAPF64[$9952>>3];
               $9954 = (+__Z5IKabsd($9953));
               $9955 = $9954 < 9.9999999999999995E-7;
               if (!($9955)) {
                break;
               }
               $9956 = ((($evalcond150)) + 16|0);
               $9957 = +HEAPF64[$9956>>3];
               $9958 = (+__Z5IKabsd($9957));
               $9959 = $9958 < 9.9999999999999995E-7;
               if (!($9959)) {
                break;
               }
               $9960 = ((($evalcond150)) + 24|0);
               $9961 = +HEAPF64[$9960>>3];
               $9962 = (+__Z5IKabsd($9961));
               $9963 = $9962 < 9.9999999999999995E-7;
               if (!($9963)) {
                break;
               }
               $9964 = ((($evalcond150)) + 32|0);
               $9965 = +HEAPF64[$9964>>3];
               $9966 = (+__Z5IKabsd($9965));
               $9967 = $9966 < 9.9999999999999995E-7;
               if (!($9967)) {
                break;
               }
               $9968 = ((($evalcond150)) + 40|0);
               $9969 = +HEAPF64[$9968>>3];
               $9970 = (+__Z5IKabsd($9969));
               $9971 = $9970 < 9.9999999999999995E-7;
               if (!($9971)) {
                break;
               }
               $9972 = ((($evalcond150)) + 48|0);
               $9973 = +HEAPF64[$9972>>3];
               $9974 = (+__Z5IKabsd($9973));
               $9975 = $9974 < 9.9999999999999995E-7;
               if (!($9975)) {
                break;
               }
               $9976 = ((($evalcond150)) + 56|0);
               $9977 = +HEAPF64[$9976>>3];
               $9978 = (+__Z5IKabsd($9977));
               $9979 = $9978 < 9.9999999999999995E-7;
               if (!($9979)) {
                break;
               }
               $9980 = ((($evalcond150)) + 64|0);
               $9981 = +HEAPF64[$9980>>3];
               $9982 = (+__Z5IKabsd($9981));
               $9983 = $9982 < 9.9999999999999995E-7;
               if (!($9983)) {
                break;
               }
               $9984 = ((($evalcond150)) + 72|0);
               $9985 = +HEAPF64[$9984>>3];
               $9986 = (+__Z5IKabsd($9985));
               $9987 = $9986 < 9.9999999999999995E-7;
               if (!($9987)) {
                break;
               }
               $bgotonextstatement151 = 0;
               ;HEAP8[$j5valid155>>0]=0|0;
               $9988 = ((($4)) + 553|0);
               HEAP8[$9988>>0] = 1;
               $9989 = ((($4)) + 408|0);
               $9990 = +HEAPF64[$9989>>3];
               $9991 = ((($4)) + 384|0);
               $9992 = +HEAPF64[$9991>>3];
               $9993 = -1.0 * $9992;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x357,$9990,$9993,1.9999999999999999E-6);
               $9994 = ((($x357)) + 8|0);
               $9995 = HEAP8[$9994>>0]|0;
               $9996 = $9995&1;
               if (!($9996)) {
                break;
               }
               $9997 = ((($4)) + 360|0);
               $9998 = +HEAPF64[$9997>>3];
               $9999 = (+__Z6IKsignd($9998));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x358,$9999,-1);
               $10000 = ((($x358)) + 8|0);
               $10001 = HEAP8[$10000>>0]|0;
               $10002 = $10001&1;
               if (!($10002)) {
                break;
               }
               $10003 = +HEAPF64[$x357>>3];
               $10004 = -1.5707963267949001 + $10003;
               $10005 = +HEAPF64[$x358>>3];
               $10006 = 1.5707963267949001 * $10005;
               $10007 = $10004 + $10006;
               HEAPF64[$j5array152>>3] = $10007;
               $10008 = +HEAPF64[$j5array152>>3];
               $10009 = (+__Z5IKsind($10008));
               HEAPF64[$sj5array154>>3] = $10009;
               $10010 = +HEAPF64[$j5array152>>3];
               $10011 = (+__Z5IKcosd($10010));
               HEAPF64[$cj5array153>>3] = $10011;
               $10012 = +HEAPF64[$j5array152>>3];
               $10013 = $10012 > 3.14159265358979;
               $10014 = +HEAPF64[$j5array152>>3];
               do {
                if ($10013) {
                 $10015 = $10014 - 6.2831853071795898;
                 HEAPF64[$j5array152>>3] = $10015;
                } else {
                 $10016 = $10014 < -3.14159265358979;
                 if (!($10016)) {
                  break;
                 }
                 $10017 = +HEAPF64[$j5array152>>3];
                 $10018 = $10017 + 6.2831853071795898;
                 HEAPF64[$j5array152>>3] = $10018;
                }
               } while(0);
               HEAP8[$j5valid155>>0] = 1;
               $ij5156 = 0;
               while(1) {
                $10019 = $ij5156;
                $10020 = ($10019|0)<(1);
                if (!($10020)) {
                 break L285;
                }
                $10021 = $ij5156;
                $10022 = (($j5valid155) + ($10021)|0);
                $10023 = HEAP8[$10022>>0]|0;
                $10024 = $10023&1;
                do {
                 if ($10024) {
                  $10025 = $ij5156;
                  $10026 = $10025&255;
                  $10027 = ((($4)) + 551|0);
                  HEAP8[$10027>>0] = $10026;
                  $10028 = ((($4)) + 551|0);
                  $10029 = ((($10028)) + 1|0);
                  HEAP8[$10029>>0] = -1;
                  $10030 = $ij5156;
                  $10031 = (($10030) + 1)|0;
                  $iij5157 = $10031;
                  L308: while(1) {
                   $10032 = $iij5157;
                   $10033 = ($10032|0)<(1);
                   if (!($10033)) {
                    break;
                   }
                   $10034 = $iij5157;
                   $10035 = (($j5valid155) + ($10034)|0);
                   $10036 = HEAP8[$10035>>0]|0;
                   $10037 = $10036&1;
                   do {
                    if ($10037) {
                     $10038 = $ij5156;
                     $10039 = (($cj5array153) + ($10038<<3)|0);
                     $10040 = +HEAPF64[$10039>>3];
                     $10041 = $iij5157;
                     $10042 = (($cj5array153) + ($10041<<3)|0);
                     $10043 = +HEAPF64[$10042>>3];
                     $10044 = $10040 - $10043;
                     $10045 = (+__Z5IKabsd($10044));
                     $10046 = $10045 < 9.9999999999999995E-7;
                     if (!($10046)) {
                      break;
                     }
                     $10047 = $ij5156;
                     $10048 = (($sj5array154) + ($10047<<3)|0);
                     $10049 = +HEAPF64[$10048>>3];
                     $10050 = $iij5157;
                     $10051 = (($sj5array154) + ($10050<<3)|0);
                     $10052 = +HEAPF64[$10051>>3];
                     $10053 = $10049 - $10052;
                     $10054 = (+__Z5IKabsd($10053));
                     $10055 = $10054 < 9.9999999999999995E-7;
                     if ($10055) {
                      label = 1094;
                      break L308;
                     }
                    }
                   } while(0);
                   $10062 = $iij5157;
                   $10063 = (($10062) + 1)|0;
                   $iij5157 = $10063;
                  }
                  if ((label|0) == 1094) {
                   label = 0;
                   $10056 = $iij5157;
                   $10057 = (($j5valid155) + ($10056)|0);
                   HEAP8[$10057>>0] = 0;
                   $10058 = $iij5157;
                   $10059 = $10058&255;
                   $10060 = ((($4)) + 551|0);
                   $10061 = ((($10060)) + 1|0);
                   HEAP8[$10061>>0] = $10059;
                  }
                  $10064 = $ij5156;
                  $10065 = (($j5array152) + ($10064<<3)|0);
                  $10066 = +HEAPF64[$10065>>3];
                  $10067 = ((($4)) + 200|0);
                  HEAPF64[$10067>>3] = $10066;
                  $10068 = $ij5156;
                  $10069 = (($cj5array153) + ($10068<<3)|0);
                  $10070 = +HEAPF64[$10069>>3];
                  $10071 = ((($4)) + 208|0);
                  HEAPF64[$10071>>3] = $10070;
                  $10072 = $ij5156;
                  $10073 = (($sj5array154) + ($10072<<3)|0);
                  $10074 = +HEAPF64[$10073>>3];
                  $10075 = ((($4)) + 216|0);
                  HEAPF64[$10075>>3] = $10074;
                  $10076 = ((($4)) + 200|0);
                  $10077 = +HEAPF64[$10076>>3];
                  $10078 = (+__Z5IKsind($10077));
                  $x359 = $10078;
                  $10079 = ((($4)) + 200|0);
                  $10080 = +HEAPF64[$10079>>3];
                  $10081 = (+__Z5IKcosd($10080));
                  $x360 = $10081;
                  $10082 = ((($4)) + 360|0);
                  $10083 = +HEAPF64[$10082>>3];
                  $10084 = 1.0 * $10083;
                  $x361 = $10084;
                  $10085 = $x360;
                  $10086 = 1.0 * $10085;
                  $x362 = $10086;
                  $10087 = $x359;
                  $10088 = 1.0 * $10087;
                  $x363 = $10088;
                  $10089 = ((($4)) + 384|0);
                  $10090 = +HEAPF64[$10089>>3];
                  $10091 = ((($4)) + 360|0);
                  $10092 = +HEAPF64[$10091>>3];
                  $10093 = $x360;
                  $10094 = $10092 * $10093;
                  $10095 = $10090 + $10094;
                  HEAPF64[$evalcond158>>3] = $10095;
                  $10096 = ((($4)) + 432|0);
                  $10097 = +HEAPF64[$10096>>3];
                  $10098 = $x359;
                  $10099 = $10097 * $10098;
                  $10100 = ((($4)) + 336|0);
                  $10101 = +HEAPF64[$10100>>3];
                  $10102 = $10099 + $10101;
                  $10103 = ((($evalcond158)) + 8|0);
                  HEAPF64[$10103>>3] = $10102;
                  $10104 = $x359;
                  $10105 = -1.0 * $10104;
                  $10106 = $x361;
                  $10107 = $10105 * $10106;
                  $10108 = ((($4)) + 408|0);
                  $10109 = +HEAPF64[$10108>>3];
                  $10110 = $10107 + $10109;
                  $10111 = ((($evalcond158)) + 16|0);
                  HEAPF64[$10111>>3] = $10110;
                  $10112 = ((($4)) + 432|0);
                  $10113 = +HEAPF64[$10112>>3];
                  $10114 = -1.0 * $10113;
                  $10115 = $x362;
                  $10116 = $10114 * $10115;
                  $10117 = ((($4)) + 312|0);
                  $10118 = +HEAPF64[$10117>>3];
                  $10119 = $10116 + $10118;
                  $10120 = ((($evalcond158)) + 24|0);
                  HEAPF64[$10120>>3] = $10119;
                  $10121 = $x363;
                  $10122 = -1.0 * $10121;
                  $10123 = ((($4)) + 240|0);
                  $10124 = +HEAPF64[$10123>>3];
                  $10125 = -1.0 * $10124;
                  $10126 = $10122 + $10125;
                  $10127 = ((($evalcond158)) + 32|0);
                  HEAPF64[$10127>>3] = $10126;
                  $10128 = $x362;
                  $10129 = -1.0 * $10128;
                  $10130 = ((($4)) + 264|0);
                  $10131 = +HEAPF64[$10130>>3];
                  $10132 = -1.0 * $10131;
                  $10133 = $10129 + $10132;
                  $10134 = ((($evalcond158)) + 40|0);
                  HEAPF64[$10134>>3] = $10133;
                  $10135 = $x359;
                  $10136 = ((($4)) + 336|0);
                  $10137 = +HEAPF64[$10136>>3];
                  $10138 = ((($4)) + 432|0);
                  $10139 = +HEAPF64[$10138>>3];
                  $10140 = $10137 * $10139;
                  $10141 = $10135 + $10140;
                  $10142 = ((($4)) + 408|0);
                  $10143 = +HEAPF64[$10142>>3];
                  $10144 = -1.0 * $10143;
                  $10145 = $x361;
                  $10146 = $10144 * $10145;
                  $10147 = $10141 + $10146;
                  $10148 = ((($evalcond158)) + 48|0);
                  HEAPF64[$10148>>3] = $10147;
                  $10149 = ((($4)) + 384|0);
                  $10150 = +HEAPF64[$10149>>3];
                  $10151 = -1.0 * $10150;
                  $10152 = $x361;
                  $10153 = $10151 * $10152;
                  $10154 = $x362;
                  $10155 = -1.0 * $10154;
                  $10156 = $10153 + $10155;
                  $10157 = ((($4)) + 312|0);
                  $10158 = +HEAPF64[$10157>>3];
                  $10159 = ((($4)) + 432|0);
                  $10160 = +HEAPF64[$10159>>3];
                  $10161 = $10158 * $10160;
                  $10162 = $10156 + $10161;
                  $10163 = ((($evalcond158)) + 56|0);
                  HEAPF64[$10163>>3] = $10162;
                  $10164 = +HEAPF64[$evalcond158>>3];
                  $10165 = (+__Z5IKabsd($10164));
                  $10166 = $10165 > 5.0000000000000004E-6;
                  if ($10166) {
                   break;
                  }
                  $10167 = ((($evalcond158)) + 8|0);
                  $10168 = +HEAPF64[$10167>>3];
                  $10169 = (+__Z5IKabsd($10168));
                  $10170 = $10169 > 5.0000000000000004E-6;
                  if ($10170) {
                   break;
                  }
                  $10171 = ((($evalcond158)) + 16|0);
                  $10172 = +HEAPF64[$10171>>3];
                  $10173 = (+__Z5IKabsd($10172));
                  $10174 = $10173 > 5.0000000000000004E-6;
                  if ($10174) {
                   break;
                  }
                  $10175 = ((($evalcond158)) + 24|0);
                  $10176 = +HEAPF64[$10175>>3];
                  $10177 = (+__Z5IKabsd($10176));
                  $10178 = $10177 > 5.0000000000000004E-6;
                  if ($10178) {
                   break;
                  }
                  $10179 = ((($evalcond158)) + 32|0);
                  $10180 = +HEAPF64[$10179>>3];
                  $10181 = (+__Z5IKabsd($10180));
                  $10182 = $10181 > 5.0000000000000004E-6;
                  if ($10182) {
                   break;
                  }
                  $10183 = ((($evalcond158)) + 40|0);
                  $10184 = +HEAPF64[$10183>>3];
                  $10185 = (+__Z5IKabsd($10184));
                  $10186 = $10185 > 5.0000000000000004E-6;
                  if ($10186) {
                   break;
                  }
                  $10187 = ((($evalcond158)) + 48|0);
                  $10188 = +HEAPF64[$10187>>3];
                  $10189 = (+__Z5IKabsd($10188));
                  $10190 = $10189 > 5.0000000000000004E-6;
                  if ($10190) {
                   break;
                  }
                  $10191 = ((($evalcond158)) + 56|0);
                  $10192 = +HEAPF64[$10191>>3];
                  $10193 = (+__Z5IKabsd($10192));
                  $10194 = $10193 > 5.0000000000000004E-6;
                  if ($10194) {
                   break;
                  }
                  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos159,6);
                  __THREW__ = 0;
                  $10195 = (invoke_iii(416,($vinfos159|0),0)|0);
                  $10196 = __THREW__; __THREW__ = 0;
                  $10197 = $10196&1;
                  if ($10197) {
                   label = 1139;
                   break L1;
                  }
                  $10198 = ((($10195)) + 17|0);
                  HEAP8[$10198>>0] = 1;
                  $10199 = +HEAPF64[$4>>3];
                  __THREW__ = 0;
                  $10200 = (invoke_iii(416,($vinfos159|0),0)|0);
                  $10201 = __THREW__; __THREW__ = 0;
                  $10202 = $10201&1;
                  if ($10202) {
                   label = 1139;
                   break L1;
                  }
                  $10203 = ((($10200)) + 8|0);
                  HEAPF64[$10203>>3] = $10199;
                  $10204 = ((($4)) + 536|0);
                  $10205 = HEAP8[$10204>>0]|0;
                  __THREW__ = 0;
                  $10206 = (invoke_iii(416,($vinfos159|0),0)|0);
                  $10207 = __THREW__; __THREW__ = 0;
                  $10208 = $10207&1;
                  if ($10208) {
                   label = 1139;
                   break L1;
                  }
                  $10209 = ((($10206)) + 19|0);
                  HEAP8[$10209>>0] = $10205;
                  $10210 = ((($4)) + 536|0);
                  $10211 = ((($10210)) + 1|0);
                  $10212 = HEAP8[$10211>>0]|0;
                  __THREW__ = 0;
                  $10213 = (invoke_iii(416,($vinfos159|0),0)|0);
                  $10214 = __THREW__; __THREW__ = 0;
                  $10215 = $10214&1;
                  if ($10215) {
                   label = 1139;
                   break L1;
                  }
                  $10216 = ((($10213)) + 19|0);
                  $10217 = ((($10216)) + 1|0);
                  HEAP8[$10217>>0] = $10212;
                  $10218 = ((($4)) + 538|0);
                  $10219 = HEAP8[$10218>>0]|0;
                  __THREW__ = 0;
                  $10220 = (invoke_iii(416,($vinfos159|0),0)|0);
                  $10221 = __THREW__; __THREW__ = 0;
                  $10222 = $10221&1;
                  if ($10222) {
                   label = 1139;
                   break L1;
                  }
                  $10223 = ((($10220)) + 18|0);
                  HEAP8[$10223>>0] = $10219;
                  __THREW__ = 0;
                  $10224 = (invoke_iii(416,($vinfos159|0),1)|0);
                  $10225 = __THREW__; __THREW__ = 0;
                  $10226 = $10225&1;
                  if ($10226) {
                   label = 1139;
                   break L1;
                  }
                  $10227 = ((($10224)) + 17|0);
                  HEAP8[$10227>>0] = 1;
                  $10228 = ((($4)) + 40|0);
                  $10229 = +HEAPF64[$10228>>3];
                  __THREW__ = 0;
                  $10230 = (invoke_iii(416,($vinfos159|0),1)|0);
                  $10231 = __THREW__; __THREW__ = 0;
                  $10232 = $10231&1;
                  if ($10232) {
                   label = 1139;
                   break L1;
                  }
                  $10233 = ((($10230)) + 8|0);
                  HEAPF64[$10233>>3] = $10229;
                  $10234 = ((($4)) + 539|0);
                  $10235 = HEAP8[$10234>>0]|0;
                  __THREW__ = 0;
                  $10236 = (invoke_iii(416,($vinfos159|0),1)|0);
                  $10237 = __THREW__; __THREW__ = 0;
                  $10238 = $10237&1;
                  if ($10238) {
                   label = 1139;
                   break L1;
                  }
                  $10239 = ((($10236)) + 19|0);
                  HEAP8[$10239>>0] = $10235;
                  $10240 = ((($4)) + 539|0);
                  $10241 = ((($10240)) + 1|0);
                  $10242 = HEAP8[$10241>>0]|0;
                  __THREW__ = 0;
                  $10243 = (invoke_iii(416,($vinfos159|0),1)|0);
                  $10244 = __THREW__; __THREW__ = 0;
                  $10245 = $10244&1;
                  if ($10245) {
                   label = 1139;
                   break L1;
                  }
                  $10246 = ((($10243)) + 19|0);
                  $10247 = ((($10246)) + 1|0);
                  HEAP8[$10247>>0] = $10242;
                  $10248 = ((($4)) + 541|0);
                  $10249 = HEAP8[$10248>>0]|0;
                  __THREW__ = 0;
                  $10250 = (invoke_iii(416,($vinfos159|0),1)|0);
                  $10251 = __THREW__; __THREW__ = 0;
                  $10252 = $10251&1;
                  if ($10252) {
                   label = 1139;
                   break L1;
                  }
                  $10253 = ((($10250)) + 18|0);
                  HEAP8[$10253>>0] = $10249;
                  __THREW__ = 0;
                  $10254 = (invoke_iii(416,($vinfos159|0),2)|0);
                  $10255 = __THREW__; __THREW__ = 0;
                  $10256 = $10255&1;
                  if ($10256) {
                   label = 1139;
                   break L1;
                  }
                  $10257 = ((($10254)) + 17|0);
                  HEAP8[$10257>>0] = 1;
                  $10258 = ((($4)) + 80|0);
                  $10259 = +HEAPF64[$10258>>3];
                  __THREW__ = 0;
                  $10260 = (invoke_iii(416,($vinfos159|0),2)|0);
                  $10261 = __THREW__; __THREW__ = 0;
                  $10262 = $10261&1;
                  if ($10262) {
                   label = 1139;
                   break L1;
                  }
                  $10263 = ((($10260)) + 8|0);
                  HEAPF64[$10263>>3] = $10259;
                  $10264 = ((($4)) + 542|0);
                  $10265 = HEAP8[$10264>>0]|0;
                  __THREW__ = 0;
                  $10266 = (invoke_iii(416,($vinfos159|0),2)|0);
                  $10267 = __THREW__; __THREW__ = 0;
                  $10268 = $10267&1;
                  if ($10268) {
                   label = 1139;
                   break L1;
                  }
                  $10269 = ((($10266)) + 19|0);
                  HEAP8[$10269>>0] = $10265;
                  $10270 = ((($4)) + 542|0);
                  $10271 = ((($10270)) + 1|0);
                  $10272 = HEAP8[$10271>>0]|0;
                  __THREW__ = 0;
                  $10273 = (invoke_iii(416,($vinfos159|0),2)|0);
                  $10274 = __THREW__; __THREW__ = 0;
                  $10275 = $10274&1;
                  if ($10275) {
                   label = 1139;
                   break L1;
                  }
                  $10276 = ((($10273)) + 19|0);
                  $10277 = ((($10276)) + 1|0);
                  HEAP8[$10277>>0] = $10272;
                  $10278 = ((($4)) + 544|0);
                  $10279 = HEAP8[$10278>>0]|0;
                  __THREW__ = 0;
                  $10280 = (invoke_iii(416,($vinfos159|0),2)|0);
                  $10281 = __THREW__; __THREW__ = 0;
                  $10282 = $10281&1;
                  if ($10282) {
                   label = 1139;
                   break L1;
                  }
                  $10283 = ((($10280)) + 18|0);
                  HEAP8[$10283>>0] = $10279;
                  __THREW__ = 0;
                  $10284 = (invoke_iii(416,($vinfos159|0),3)|0);
                  $10285 = __THREW__; __THREW__ = 0;
                  $10286 = $10285&1;
                  if ($10286) {
                   label = 1139;
                   break L1;
                  }
                  $10287 = ((($10284)) + 17|0);
                  HEAP8[$10287>>0] = 1;
                  $10288 = ((($4)) + 120|0);
                  $10289 = +HEAPF64[$10288>>3];
                  __THREW__ = 0;
                  $10290 = (invoke_iii(416,($vinfos159|0),3)|0);
                  $10291 = __THREW__; __THREW__ = 0;
                  $10292 = $10291&1;
                  if ($10292) {
                   label = 1139;
                   break L1;
                  }
                  $10293 = ((($10290)) + 8|0);
                  HEAPF64[$10293>>3] = $10289;
                  $10294 = ((($4)) + 545|0);
                  $10295 = HEAP8[$10294>>0]|0;
                  __THREW__ = 0;
                  $10296 = (invoke_iii(416,($vinfos159|0),3)|0);
                  $10297 = __THREW__; __THREW__ = 0;
                  $10298 = $10297&1;
                  if ($10298) {
                   label = 1139;
                   break L1;
                  }
                  $10299 = ((($10296)) + 19|0);
                  HEAP8[$10299>>0] = $10295;
                  $10300 = ((($4)) + 545|0);
                  $10301 = ((($10300)) + 1|0);
                  $10302 = HEAP8[$10301>>0]|0;
                  __THREW__ = 0;
                  $10303 = (invoke_iii(416,($vinfos159|0),3)|0);
                  $10304 = __THREW__; __THREW__ = 0;
                  $10305 = $10304&1;
                  if ($10305) {
                   label = 1139;
                   break L1;
                  }
                  $10306 = ((($10303)) + 19|0);
                  $10307 = ((($10306)) + 1|0);
                  HEAP8[$10307>>0] = $10302;
                  $10308 = ((($4)) + 547|0);
                  $10309 = HEAP8[$10308>>0]|0;
                  __THREW__ = 0;
                  $10310 = (invoke_iii(416,($vinfos159|0),3)|0);
                  $10311 = __THREW__; __THREW__ = 0;
                  $10312 = $10311&1;
                  if ($10312) {
                   label = 1139;
                   break L1;
                  }
                  $10313 = ((($10310)) + 18|0);
                  HEAP8[$10313>>0] = $10309;
                  __THREW__ = 0;
                  $10314 = (invoke_iii(416,($vinfos159|0),4)|0);
                  $10315 = __THREW__; __THREW__ = 0;
                  $10316 = $10315&1;
                  if ($10316) {
                   label = 1139;
                   break L1;
                  }
                  $10317 = ((($10314)) + 17|0);
                  HEAP8[$10317>>0] = 1;
                  $10318 = ((($4)) + 160|0);
                  $10319 = +HEAPF64[$10318>>3];
                  __THREW__ = 0;
                  $10320 = (invoke_iii(416,($vinfos159|0),4)|0);
                  $10321 = __THREW__; __THREW__ = 0;
                  $10322 = $10321&1;
                  if ($10322) {
                   label = 1139;
                   break L1;
                  }
                  $10323 = ((($10320)) + 8|0);
                  HEAPF64[$10323>>3] = $10319;
                  $10324 = ((($4)) + 548|0);
                  $10325 = HEAP8[$10324>>0]|0;
                  __THREW__ = 0;
                  $10326 = (invoke_iii(416,($vinfos159|0),4)|0);
                  $10327 = __THREW__; __THREW__ = 0;
                  $10328 = $10327&1;
                  if ($10328) {
                   label = 1139;
                   break L1;
                  }
                  $10329 = ((($10326)) + 19|0);
                  HEAP8[$10329>>0] = $10325;
                  $10330 = ((($4)) + 548|0);
                  $10331 = ((($10330)) + 1|0);
                  $10332 = HEAP8[$10331>>0]|0;
                  __THREW__ = 0;
                  $10333 = (invoke_iii(416,($vinfos159|0),4)|0);
                  $10334 = __THREW__; __THREW__ = 0;
                  $10335 = $10334&1;
                  if ($10335) {
                   label = 1139;
                   break L1;
                  }
                  $10336 = ((($10333)) + 19|0);
                  $10337 = ((($10336)) + 1|0);
                  HEAP8[$10337>>0] = $10332;
                  $10338 = ((($4)) + 550|0);
                  $10339 = HEAP8[$10338>>0]|0;
                  __THREW__ = 0;
                  $10340 = (invoke_iii(416,($vinfos159|0),4)|0);
                  $10341 = __THREW__; __THREW__ = 0;
                  $10342 = $10341&1;
                  if ($10342) {
                   label = 1139;
                   break L1;
                  }
                  $10343 = ((($10340)) + 18|0);
                  HEAP8[$10343>>0] = $10339;
                  __THREW__ = 0;
                  $10344 = (invoke_iii(416,($vinfos159|0),5)|0);
                  $10345 = __THREW__; __THREW__ = 0;
                  $10346 = $10345&1;
                  if ($10346) {
                   label = 1139;
                   break L1;
                  }
                  $10347 = ((($10344)) + 17|0);
                  HEAP8[$10347>>0] = 1;
                  $10348 = ((($4)) + 200|0);
                  $10349 = +HEAPF64[$10348>>3];
                  __THREW__ = 0;
                  $10350 = (invoke_iii(416,($vinfos159|0),5)|0);
                  $10351 = __THREW__; __THREW__ = 0;
                  $10352 = $10351&1;
                  if ($10352) {
                   label = 1139;
                   break L1;
                  }
                  $10353 = ((($10350)) + 8|0);
                  HEAPF64[$10353>>3] = $10349;
                  $10354 = ((($4)) + 551|0);
                  $10355 = HEAP8[$10354>>0]|0;
                  __THREW__ = 0;
                  $10356 = (invoke_iii(416,($vinfos159|0),5)|0);
                  $10357 = __THREW__; __THREW__ = 0;
                  $10358 = $10357&1;
                  if ($10358) {
                   label = 1139;
                   break L1;
                  }
                  $10359 = ((($10356)) + 19|0);
                  HEAP8[$10359>>0] = $10355;
                  $10360 = ((($4)) + 551|0);
                  $10361 = ((($10360)) + 1|0);
                  $10362 = HEAP8[$10361>>0]|0;
                  __THREW__ = 0;
                  $10363 = (invoke_iii(416,($vinfos159|0),5)|0);
                  $10364 = __THREW__; __THREW__ = 0;
                  $10365 = $10364&1;
                  if ($10365) {
                   label = 1139;
                   break L1;
                  }
                  $10366 = ((($10363)) + 19|0);
                  $10367 = ((($10366)) + 1|0);
                  HEAP8[$10367>>0] = $10362;
                  $10368 = ((($4)) + 553|0);
                  $10369 = HEAP8[$10368>>0]|0;
                  __THREW__ = 0;
                  $10370 = (invoke_iii(416,($vinfos159|0),5)|0);
                  $10371 = __THREW__; __THREW__ = 0;
                  $10372 = $10371&1;
                  if ($10372) {
                   label = 1139;
                   break L1;
                  }
                  $10373 = ((($10370)) + 18|0);
                  HEAP8[$10373>>0] = $10369;
                  __THREW__ = 0;
                  invoke_vii(417,($vfree160|0),0);
                  $10374 = __THREW__; __THREW__ = 0;
                  $10375 = $10374&1;
                  if ($10375) {
                   label = 1139;
                   break L1;
                  }
                  $10376 = $1;
                  $10377 = HEAP32[$10376>>2]|0;
                  $10378 = ((($10377)) + 8|0);
                  $10379 = HEAP32[$10378>>2]|0;
                  __THREW__ = 0;
                  (invoke_iiii($10379|0,($10376|0),($vinfos159|0),($vfree160|0))|0);
                  $10380 = __THREW__; __THREW__ = 0;
                  $10381 = $10380&1;
                  if ($10381) {
                   label = 1140;
                   break L1;
                  }
                  __THREW__ = 0;
                  invoke_vi(371,($vfree160|0));
                  $10382 = __THREW__; __THREW__ = 0;
                  $10383 = $10382&1;
                  if ($10383) {
                   label = 1139;
                   break L1;
                  }
                  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos159);
                 }
                } while(0);
                $10384 = $ij5156;
                $10385 = (($10384) + 1)|0;
                $ij5156 = $10385;
               }
              }
             } while(0);
             $10394 = $bgotonextstatement151;
             $10395 = $10394&1;
             if (!($10395)) {
              break;
             }
             $bgotonextstatement161 = 1;
             $10396 = ((($4)) + 432|0);
             $10397 = +HEAPF64[$10396>>3];
             $10398 = ((($4)) + 168|0);
             $10399 = +HEAPF64[$10398>>3];
             $10400 = -1.0 * $10399;
             $10401 = $10397 + $10400;
             $x364 = $10401;
             $10402 = ((($4)) + 168|0);
             $10403 = +HEAPF64[$10402>>3];
             $10404 = 1.0 * $10403;
             $x365 = $10404;
             $10405 = ((($4)) + 176|0);
             $10406 = +HEAPF64[$10405>>3];
             $10407 = 1.0 * $10406;
             $x366 = $10407;
             $10408 = ((($4)) + 120|0);
             $10409 = +HEAPF64[$10408>>3];
             $10410 = 1.5707963267949001 + $10409;
             $10411 = (+__Z5IKabsd($10410));
             $10412 = 3.14159265358979 + $10411;
             $10413 = (+__Z6IKfmoddd($10412,6.2831853071795898));
             $10414 = -3.14159265358979 + $10413;
             HEAPF64[$evalcond150>>3] = $10414;
             $10415 = $x364;
             $10416 = ((($evalcond150)) + 8|0);
             HEAPF64[$10416>>3] = $10415;
             $10417 = $x364;
             $10418 = ((($evalcond150)) + 16|0);
             HEAPF64[$10418>>3] = $10417;
             $10419 = ((($4)) + 288|0);
             $10420 = +HEAPF64[$10419>>3];
             $10421 = ((($evalcond150)) + 24|0);
             HEAPF64[$10421>>3] = $10420;
             $10422 = ((($4)) + 176|0);
             $10423 = +HEAPF64[$10422>>3];
             $10424 = ((($4)) + 360|0);
             $10425 = +HEAPF64[$10424>>3];
             $10426 = $10423 + $10425;
             $10427 = ((($evalcond150)) + 32|0);
             HEAPF64[$10427>>3] = $10426;
             $10428 = $x366;
             $10429 = -1.0 * $10428;
             $10430 = ((($4)) + 360|0);
             $10431 = +HEAPF64[$10430>>3];
             $10432 = -1.0 * $10431;
             $10433 = $10429 + $10432;
             $10434 = ((($evalcond150)) + 40|0);
             HEAPF64[$10434>>3] = $10433;
             $10435 = ((($4)) + 432|0);
             $10436 = +HEAPF64[$10435>>3];
             $10437 = -1.0 * $10436;
             $10438 = $x366;
             $10439 = $10437 * $10438;
             $10440 = ((($4)) + 360|0);
             $10441 = +HEAPF64[$10440>>3];
             $10442 = -1.0 * $10441;
             $10443 = $x365;
             $10444 = $10442 * $10443;
             $10445 = $10439 + $10444;
             $10446 = ((($evalcond150)) + 48|0);
             HEAPF64[$10446>>3] = $10445;
             $10447 = ((($4)) + 384|0);
             $10448 = +HEAPF64[$10447>>3];
             $10449 = -1.0 * $10448;
             $10450 = $x365;
             $10451 = $10449 * $10450;
             $10452 = ((($4)) + 312|0);
             $10453 = +HEAPF64[$10452>>3];
             $10454 = ((($4)) + 176|0);
             $10455 = +HEAPF64[$10454>>3];
             $10456 = $10453 * $10455;
             $10457 = $10451 + $10456;
             $10458 = ((($evalcond150)) + 56|0);
             HEAPF64[$10458>>3] = $10457;
             $10459 = ((($4)) + 336|0);
             $10460 = +HEAPF64[$10459>>3];
             $10461 = ((($4)) + 176|0);
             $10462 = +HEAPF64[$10461>>3];
             $10463 = $10460 * $10462;
             $10464 = ((($4)) + 408|0);
             $10465 = +HEAPF64[$10464>>3];
             $10466 = -1.0 * $10465;
             $10467 = $x365;
             $10468 = $10466 * $10467;
             $10469 = $10463 + $10468;
             $10470 = ((($evalcond150)) + 64|0);
             HEAPF64[$10470>>3] = $10469;
             $10471 = ((($4)) + 360|0);
             $10472 = +HEAPF64[$10471>>3];
             $10473 = ((($4)) + 176|0);
             $10474 = +HEAPF64[$10473>>3];
             $10475 = $10472 * $10474;
             $10476 = 1.0 + $10475;
             $10477 = ((($4)) + 432|0);
             $10478 = +HEAPF64[$10477>>3];
             $10479 = -1.0 * $10478;
             $10480 = $x365;
             $10481 = $10479 * $10480;
             $10482 = $10476 + $10481;
             $10483 = ((($evalcond150)) + 72|0);
             HEAPF64[$10483>>3] = $10482;
             $10484 = +HEAPF64[$evalcond150>>3];
             $10485 = (+__Z5IKabsd($10484));
             $10486 = $10485 < 9.9999999999999995E-7;
             L362: do {
              if ($10486) {
               $10487 = ((($evalcond150)) + 8|0);
               $10488 = +HEAPF64[$10487>>3];
               $10489 = (+__Z5IKabsd($10488));
               $10490 = $10489 < 9.9999999999999995E-7;
               if (!($10490)) {
                break;
               }
               $10491 = ((($evalcond150)) + 16|0);
               $10492 = +HEAPF64[$10491>>3];
               $10493 = (+__Z5IKabsd($10492));
               $10494 = $10493 < 9.9999999999999995E-7;
               if (!($10494)) {
                break;
               }
               $10495 = ((($evalcond150)) + 24|0);
               $10496 = +HEAPF64[$10495>>3];
               $10497 = (+__Z5IKabsd($10496));
               $10498 = $10497 < 9.9999999999999995E-7;
               if (!($10498)) {
                break;
               }
               $10499 = ((($evalcond150)) + 32|0);
               $10500 = +HEAPF64[$10499>>3];
               $10501 = (+__Z5IKabsd($10500));
               $10502 = $10501 < 9.9999999999999995E-7;
               if (!($10502)) {
                break;
               }
               $10503 = ((($evalcond150)) + 40|0);
               $10504 = +HEAPF64[$10503>>3];
               $10505 = (+__Z5IKabsd($10504));
               $10506 = $10505 < 9.9999999999999995E-7;
               if (!($10506)) {
                break;
               }
               $10507 = ((($evalcond150)) + 48|0);
               $10508 = +HEAPF64[$10507>>3];
               $10509 = (+__Z5IKabsd($10508));
               $10510 = $10509 < 9.9999999999999995E-7;
               if (!($10510)) {
                break;
               }
               $10511 = ((($evalcond150)) + 56|0);
               $10512 = +HEAPF64[$10511>>3];
               $10513 = (+__Z5IKabsd($10512));
               $10514 = $10513 < 9.9999999999999995E-7;
               if (!($10514)) {
                break;
               }
               $10515 = ((($evalcond150)) + 64|0);
               $10516 = +HEAPF64[$10515>>3];
               $10517 = (+__Z5IKabsd($10516));
               $10518 = $10517 < 9.9999999999999995E-7;
               if (!($10518)) {
                break;
               }
               $10519 = ((($evalcond150)) + 72|0);
               $10520 = +HEAPF64[$10519>>3];
               $10521 = (+__Z5IKabsd($10520));
               $10522 = $10521 < 9.9999999999999995E-7;
               if (!($10522)) {
                break;
               }
               $bgotonextstatement161 = 0;
               ;HEAP8[$j5valid165>>0]=0|0;
               $10523 = ((($4)) + 553|0);
               HEAP8[$10523>>0] = 1;
               $10524 = ((($4)) + 240|0);
               $10525 = +HEAPF64[$10524>>3];
               $10526 = (+__Z5IKabsd($10525));
               $10527 = $10526 < 1.9999999999999999E-6;
               do {
                if ($10527) {
                 $10528 = ((($4)) + 264|0);
                 $10529 = +HEAPF64[$10528>>3];
                 $10530 = (+__Z5IKabsd($10529));
                 $10531 = $10530 < 1.9999999999999999E-6;
                 if (!($10531)) {
                  break;
                 }
                 $10532 = ((($4)) + 240|0);
                 $10533 = +HEAPF64[$10532>>3];
                 $10534 = (+__Z5IKsqrd($10533));
                 $10535 = ((($4)) + 264|0);
                 $10536 = +HEAPF64[$10535>>3];
                 $10537 = (+__Z5IKsqrd($10536));
                 $10538 = $10534 + $10537;
                 $10539 = $10538 - 1.0;
                 $10540 = (+__Z5IKabsd($10539));
                 $10541 = $10540 <= 1.9999999999999999E-6;
                 if ($10541) {
                  break L362;
                 }
                }
               } while(0);
               $10542 = ((($4)) + 240|0);
               $10543 = +HEAPF64[$10542>>3];
               $10544 = ((($4)) + 264|0);
               $10545 = +HEAPF64[$10544>>3];
               $10546 = (+__Z7IKatan2dd($10543,$10545));
               HEAPF64[$j5array162>>3] = $10546;
               $10547 = +HEAPF64[$j5array162>>3];
               $10548 = (+__Z5IKsind($10547));
               HEAPF64[$sj5array164>>3] = $10548;
               $10549 = +HEAPF64[$j5array162>>3];
               $10550 = (+__Z5IKcosd($10549));
               HEAPF64[$cj5array163>>3] = $10550;
               $10551 = +HEAPF64[$j5array162>>3];
               $10552 = $10551 > 3.14159265358979;
               $10553 = +HEAPF64[$j5array162>>3];
               do {
                if ($10552) {
                 $10554 = $10553 - 6.2831853071795898;
                 HEAPF64[$j5array162>>3] = $10554;
                } else {
                 $10555 = $10553 < -3.14159265358979;
                 if (!($10555)) {
                  break;
                 }
                 $10556 = +HEAPF64[$j5array162>>3];
                 $10557 = $10556 + 6.2831853071795898;
                 HEAPF64[$j5array162>>3] = $10557;
                }
               } while(0);
               HEAP8[$j5valid165>>0] = 1;
               $ij5166 = 0;
               while(1) {
                $10558 = $ij5166;
                $10559 = ($10558|0)<(1);
                if (!($10559)) {
                 break L362;
                }
                $10560 = $ij5166;
                $10561 = (($j5valid165) + ($10560)|0);
                $10562 = HEAP8[$10561>>0]|0;
                $10563 = $10562&1;
                do {
                 if ($10563) {
                  $10564 = $ij5166;
                  $10565 = $10564&255;
                  $10566 = ((($4)) + 551|0);
                  HEAP8[$10566>>0] = $10565;
                  $10567 = ((($4)) + 551|0);
                  $10568 = ((($10567)) + 1|0);
                  HEAP8[$10568>>0] = -1;
                  $10569 = $ij5166;
                  $10570 = (($10569) + 1)|0;
                  $iij5167 = $10570;
                  L387: while(1) {
                   $10571 = $iij5167;
                   $10572 = ($10571|0)<(1);
                   if (!($10572)) {
                    break;
                   }
                   $10573 = $iij5167;
                   $10574 = (($j5valid165) + ($10573)|0);
                   $10575 = HEAP8[$10574>>0]|0;
                   $10576 = $10575&1;
                   do {
                    if ($10576) {
                     $10577 = $ij5166;
                     $10578 = (($cj5array163) + ($10577<<3)|0);
                     $10579 = +HEAPF64[$10578>>3];
                     $10580 = $iij5167;
                     $10581 = (($cj5array163) + ($10580<<3)|0);
                     $10582 = +HEAPF64[$10581>>3];
                     $10583 = $10579 - $10582;
                     $10584 = (+__Z5IKabsd($10583));
                     $10585 = $10584 < 9.9999999999999995E-7;
                     if (!($10585)) {
                      break;
                     }
                     $10586 = $ij5166;
                     $10587 = (($sj5array164) + ($10586<<3)|0);
                     $10588 = +HEAPF64[$10587>>3];
                     $10589 = $iij5167;
                     $10590 = (($sj5array164) + ($10589<<3)|0);
                     $10591 = +HEAPF64[$10590>>3];
                     $10592 = $10588 - $10591;
                     $10593 = (+__Z5IKabsd($10592));
                     $10594 = $10593 < 9.9999999999999995E-7;
                     if ($10594) {
                      label = 1168;
                      break L387;
                     }
                    }
                   } while(0);
                   $10601 = $iij5167;
                   $10602 = (($10601) + 1)|0;
                   $iij5167 = $10602;
                  }
                  if ((label|0) == 1168) {
                   label = 0;
                   $10595 = $iij5167;
                   $10596 = (($j5valid165) + ($10595)|0);
                   HEAP8[$10596>>0] = 0;
                   $10597 = $iij5167;
                   $10598 = $10597&255;
                   $10599 = ((($4)) + 551|0);
                   $10600 = ((($10599)) + 1|0);
                   HEAP8[$10600>>0] = $10598;
                  }
                  $10603 = $ij5166;
                  $10604 = (($j5array162) + ($10603<<3)|0);
                  $10605 = +HEAPF64[$10604>>3];
                  $10606 = ((($4)) + 200|0);
                  HEAPF64[$10606>>3] = $10605;
                  $10607 = $ij5166;
                  $10608 = (($cj5array163) + ($10607<<3)|0);
                  $10609 = +HEAPF64[$10608>>3];
                  $10610 = ((($4)) + 208|0);
                  HEAPF64[$10610>>3] = $10609;
                  $10611 = $ij5166;
                  $10612 = (($sj5array164) + ($10611<<3)|0);
                  $10613 = +HEAPF64[$10612>>3];
                  $10614 = ((($4)) + 216|0);
                  HEAPF64[$10614>>3] = $10613;
                  $10615 = ((($4)) + 200|0);
                  $10616 = +HEAPF64[$10615>>3];
                  $10617 = (+__Z5IKsind($10616));
                  $x367 = $10617;
                  $10618 = ((($4)) + 200|0);
                  $10619 = +HEAPF64[$10618>>3];
                  $10620 = (+__Z5IKcosd($10619));
                  $x368 = $10620;
                  $10621 = ((($4)) + 336|0);
                  $10622 = +HEAPF64[$10621>>3];
                  $10623 = 1.0 * $10622;
                  $x369 = $10623;
                  $10624 = ((($4)) + 312|0);
                  $10625 = +HEAPF64[$10624>>3];
                  $10626 = 1.0 * $10625;
                  $x370 = $10626;
                  $10627 = $x368;
                  $10628 = 1.0 * $10627;
                  $x371 = $10628;
                  $10629 = ((($4)) + 408|0);
                  $10630 = +HEAPF64[$10629>>3];
                  $10631 = ((($4)) + 360|0);
                  $10632 = +HEAPF64[$10631>>3];
                  $10633 = $x367;
                  $10634 = $10632 * $10633;
                  $10635 = $10630 + $10634;
                  HEAPF64[$evalcond168>>3] = $10635;
                  $10636 = $x367;
                  $10637 = -1.0 * $10636;
                  $10638 = ((($4)) + 240|0);
                  $10639 = +HEAPF64[$10638>>3];
                  $10640 = $10637 + $10639;
                  $10641 = ((($evalcond168)) + 8|0);
                  HEAPF64[$10641>>3] = $10640;
                  $10642 = $x371;
                  $10643 = -1.0 * $10642;
                  $10644 = ((($4)) + 264|0);
                  $10645 = +HEAPF64[$10644>>3];
                  $10646 = $10643 + $10645;
                  $10647 = ((($evalcond168)) + 16|0);
                  HEAPF64[$10647>>3] = $10646;
                  $10648 = ((($4)) + 360|0);
                  $10649 = +HEAPF64[$10648>>3];
                  $10650 = -1.0 * $10649;
                  $10651 = $x371;
                  $10652 = $10650 * $10651;
                  $10653 = ((($4)) + 384|0);
                  $10654 = +HEAPF64[$10653>>3];
                  $10655 = $10652 + $10654;
                  $10656 = ((($evalcond168)) + 24|0);
                  HEAPF64[$10656>>3] = $10655;
                  $10657 = ((($4)) + 432|0);
                  $10658 = +HEAPF64[$10657>>3];
                  $10659 = $x367;
                  $10660 = $10658 * $10659;
                  $10661 = $x369;
                  $10662 = -1.0 * $10661;
                  $10663 = $10660 + $10662;
                  $10664 = ((($evalcond168)) + 32|0);
                  HEAPF64[$10664>>3] = $10663;
                  $10665 = $x370;
                  $10666 = -1.0 * $10665;
                  $10667 = ((($4)) + 432|0);
                  $10668 = +HEAPF64[$10667>>3];
                  $10669 = -1.0 * $10668;
                  $10670 = $x371;
                  $10671 = $10669 * $10670;
                  $10672 = $10666 + $10671;
                  $10673 = ((($evalcond168)) + 40|0);
                  HEAPF64[$10673>>3] = $10672;
                  $10674 = ((($4)) + 432|0);
                  $10675 = +HEAPF64[$10674>>3];
                  $10676 = -1.0 * $10675;
                  $10677 = $x369;
                  $10678 = $10676 * $10677;
                  $10679 = $x367;
                  $10680 = $10678 + $10679;
                  $10681 = ((($4)) + 360|0);
                  $10682 = +HEAPF64[$10681>>3];
                  $10683 = ((($4)) + 408|0);
                  $10684 = +HEAPF64[$10683>>3];
                  $10685 = $10682 * $10684;
                  $10686 = $10680 + $10685;
                  $10687 = ((($evalcond168)) + 48|0);
                  HEAPF64[$10687>>3] = $10686;
                  $10688 = $x371;
                  $10689 = -1.0 * $10688;
                  $10690 = ((($4)) + 432|0);
                  $10691 = +HEAPF64[$10690>>3];
                  $10692 = -1.0 * $10691;
                  $10693 = $x370;
                  $10694 = $10692 * $10693;
                  $10695 = $10689 + $10694;
                  $10696 = ((($4)) + 360|0);
                  $10697 = +HEAPF64[$10696>>3];
                  $10698 = ((($4)) + 384|0);
                  $10699 = +HEAPF64[$10698>>3];
                  $10700 = $10697 * $10699;
                  $10701 = $10695 + $10700;
                  $10702 = ((($evalcond168)) + 56|0);
                  HEAPF64[$10702>>3] = $10701;
                  $10703 = +HEAPF64[$evalcond168>>3];
                  $10704 = (+__Z5IKabsd($10703));
                  $10705 = $10704 > 5.0000000000000004E-6;
                  if ($10705) {
                   break;
                  }
                  $10706 = ((($evalcond168)) + 8|0);
                  $10707 = +HEAPF64[$10706>>3];
                  $10708 = (+__Z5IKabsd($10707));
                  $10709 = $10708 > 5.0000000000000004E-6;
                  if ($10709) {
                   break;
                  }
                  $10710 = ((($evalcond168)) + 16|0);
                  $10711 = +HEAPF64[$10710>>3];
                  $10712 = (+__Z5IKabsd($10711));
                  $10713 = $10712 > 5.0000000000000004E-6;
                  if ($10713) {
                   break;
                  }
                  $10714 = ((($evalcond168)) + 24|0);
                  $10715 = +HEAPF64[$10714>>3];
                  $10716 = (+__Z5IKabsd($10715));
                  $10717 = $10716 > 5.0000000000000004E-6;
                  if ($10717) {
                   break;
                  }
                  $10718 = ((($evalcond168)) + 32|0);
                  $10719 = +HEAPF64[$10718>>3];
                  $10720 = (+__Z5IKabsd($10719));
                  $10721 = $10720 > 5.0000000000000004E-6;
                  if ($10721) {
                   break;
                  }
                  $10722 = ((($evalcond168)) + 40|0);
                  $10723 = +HEAPF64[$10722>>3];
                  $10724 = (+__Z5IKabsd($10723));
                  $10725 = $10724 > 5.0000000000000004E-6;
                  if ($10725) {
                   break;
                  }
                  $10726 = ((($evalcond168)) + 48|0);
                  $10727 = +HEAPF64[$10726>>3];
                  $10728 = (+__Z5IKabsd($10727));
                  $10729 = $10728 > 5.0000000000000004E-6;
                  if ($10729) {
                   break;
                  }
                  $10730 = ((($evalcond168)) + 56|0);
                  $10731 = +HEAPF64[$10730>>3];
                  $10732 = (+__Z5IKabsd($10731));
                  $10733 = $10732 > 5.0000000000000004E-6;
                  if ($10733) {
                   break;
                  }
                  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos169,6);
                  __THREW__ = 0;
                  $10734 = (invoke_iii(416,($vinfos169|0),0)|0);
                  $10735 = __THREW__; __THREW__ = 0;
                  $10736 = $10735&1;
                  if ($10736) {
                   label = 1213;
                   break L1;
                  }
                  $10737 = ((($10734)) + 17|0);
                  HEAP8[$10737>>0] = 1;
                  $10738 = +HEAPF64[$4>>3];
                  __THREW__ = 0;
                  $10739 = (invoke_iii(416,($vinfos169|0),0)|0);
                  $10740 = __THREW__; __THREW__ = 0;
                  $10741 = $10740&1;
                  if ($10741) {
                   label = 1213;
                   break L1;
                  }
                  $10742 = ((($10739)) + 8|0);
                  HEAPF64[$10742>>3] = $10738;
                  $10743 = ((($4)) + 536|0);
                  $10744 = HEAP8[$10743>>0]|0;
                  __THREW__ = 0;
                  $10745 = (invoke_iii(416,($vinfos169|0),0)|0);
                  $10746 = __THREW__; __THREW__ = 0;
                  $10747 = $10746&1;
                  if ($10747) {
                   label = 1213;
                   break L1;
                  }
                  $10748 = ((($10745)) + 19|0);
                  HEAP8[$10748>>0] = $10744;
                  $10749 = ((($4)) + 536|0);
                  $10750 = ((($10749)) + 1|0);
                  $10751 = HEAP8[$10750>>0]|0;
                  __THREW__ = 0;
                  $10752 = (invoke_iii(416,($vinfos169|0),0)|0);
                  $10753 = __THREW__; __THREW__ = 0;
                  $10754 = $10753&1;
                  if ($10754) {
                   label = 1213;
                   break L1;
                  }
                  $10755 = ((($10752)) + 19|0);
                  $10756 = ((($10755)) + 1|0);
                  HEAP8[$10756>>0] = $10751;
                  $10757 = ((($4)) + 538|0);
                  $10758 = HEAP8[$10757>>0]|0;
                  __THREW__ = 0;
                  $10759 = (invoke_iii(416,($vinfos169|0),0)|0);
                  $10760 = __THREW__; __THREW__ = 0;
                  $10761 = $10760&1;
                  if ($10761) {
                   label = 1213;
                   break L1;
                  }
                  $10762 = ((($10759)) + 18|0);
                  HEAP8[$10762>>0] = $10758;
                  __THREW__ = 0;
                  $10763 = (invoke_iii(416,($vinfos169|0),1)|0);
                  $10764 = __THREW__; __THREW__ = 0;
                  $10765 = $10764&1;
                  if ($10765) {
                   label = 1213;
                   break L1;
                  }
                  $10766 = ((($10763)) + 17|0);
                  HEAP8[$10766>>0] = 1;
                  $10767 = ((($4)) + 40|0);
                  $10768 = +HEAPF64[$10767>>3];
                  __THREW__ = 0;
                  $10769 = (invoke_iii(416,($vinfos169|0),1)|0);
                  $10770 = __THREW__; __THREW__ = 0;
                  $10771 = $10770&1;
                  if ($10771) {
                   label = 1213;
                   break L1;
                  }
                  $10772 = ((($10769)) + 8|0);
                  HEAPF64[$10772>>3] = $10768;
                  $10773 = ((($4)) + 539|0);
                  $10774 = HEAP8[$10773>>0]|0;
                  __THREW__ = 0;
                  $10775 = (invoke_iii(416,($vinfos169|0),1)|0);
                  $10776 = __THREW__; __THREW__ = 0;
                  $10777 = $10776&1;
                  if ($10777) {
                   label = 1213;
                   break L1;
                  }
                  $10778 = ((($10775)) + 19|0);
                  HEAP8[$10778>>0] = $10774;
                  $10779 = ((($4)) + 539|0);
                  $10780 = ((($10779)) + 1|0);
                  $10781 = HEAP8[$10780>>0]|0;
                  __THREW__ = 0;
                  $10782 = (invoke_iii(416,($vinfos169|0),1)|0);
                  $10783 = __THREW__; __THREW__ = 0;
                  $10784 = $10783&1;
                  if ($10784) {
                   label = 1213;
                   break L1;
                  }
                  $10785 = ((($10782)) + 19|0);
                  $10786 = ((($10785)) + 1|0);
                  HEAP8[$10786>>0] = $10781;
                  $10787 = ((($4)) + 541|0);
                  $10788 = HEAP8[$10787>>0]|0;
                  __THREW__ = 0;
                  $10789 = (invoke_iii(416,($vinfos169|0),1)|0);
                  $10790 = __THREW__; __THREW__ = 0;
                  $10791 = $10790&1;
                  if ($10791) {
                   label = 1213;
                   break L1;
                  }
                  $10792 = ((($10789)) + 18|0);
                  HEAP8[$10792>>0] = $10788;
                  __THREW__ = 0;
                  $10793 = (invoke_iii(416,($vinfos169|0),2)|0);
                  $10794 = __THREW__; __THREW__ = 0;
                  $10795 = $10794&1;
                  if ($10795) {
                   label = 1213;
                   break L1;
                  }
                  $10796 = ((($10793)) + 17|0);
                  HEAP8[$10796>>0] = 1;
                  $10797 = ((($4)) + 80|0);
                  $10798 = +HEAPF64[$10797>>3];
                  __THREW__ = 0;
                  $10799 = (invoke_iii(416,($vinfos169|0),2)|0);
                  $10800 = __THREW__; __THREW__ = 0;
                  $10801 = $10800&1;
                  if ($10801) {
                   label = 1213;
                   break L1;
                  }
                  $10802 = ((($10799)) + 8|0);
                  HEAPF64[$10802>>3] = $10798;
                  $10803 = ((($4)) + 542|0);
                  $10804 = HEAP8[$10803>>0]|0;
                  __THREW__ = 0;
                  $10805 = (invoke_iii(416,($vinfos169|0),2)|0);
                  $10806 = __THREW__; __THREW__ = 0;
                  $10807 = $10806&1;
                  if ($10807) {
                   label = 1213;
                   break L1;
                  }
                  $10808 = ((($10805)) + 19|0);
                  HEAP8[$10808>>0] = $10804;
                  $10809 = ((($4)) + 542|0);
                  $10810 = ((($10809)) + 1|0);
                  $10811 = HEAP8[$10810>>0]|0;
                  __THREW__ = 0;
                  $10812 = (invoke_iii(416,($vinfos169|0),2)|0);
                  $10813 = __THREW__; __THREW__ = 0;
                  $10814 = $10813&1;
                  if ($10814) {
                   label = 1213;
                   break L1;
                  }
                  $10815 = ((($10812)) + 19|0);
                  $10816 = ((($10815)) + 1|0);
                  HEAP8[$10816>>0] = $10811;
                  $10817 = ((($4)) + 544|0);
                  $10818 = HEAP8[$10817>>0]|0;
                  __THREW__ = 0;
                  $10819 = (invoke_iii(416,($vinfos169|0),2)|0);
                  $10820 = __THREW__; __THREW__ = 0;
                  $10821 = $10820&1;
                  if ($10821) {
                   label = 1213;
                   break L1;
                  }
                  $10822 = ((($10819)) + 18|0);
                  HEAP8[$10822>>0] = $10818;
                  __THREW__ = 0;
                  $10823 = (invoke_iii(416,($vinfos169|0),3)|0);
                  $10824 = __THREW__; __THREW__ = 0;
                  $10825 = $10824&1;
                  if ($10825) {
                   label = 1213;
                   break L1;
                  }
                  $10826 = ((($10823)) + 17|0);
                  HEAP8[$10826>>0] = 1;
                  $10827 = ((($4)) + 120|0);
                  $10828 = +HEAPF64[$10827>>3];
                  __THREW__ = 0;
                  $10829 = (invoke_iii(416,($vinfos169|0),3)|0);
                  $10830 = __THREW__; __THREW__ = 0;
                  $10831 = $10830&1;
                  if ($10831) {
                   label = 1213;
                   break L1;
                  }
                  $10832 = ((($10829)) + 8|0);
                  HEAPF64[$10832>>3] = $10828;
                  $10833 = ((($4)) + 545|0);
                  $10834 = HEAP8[$10833>>0]|0;
                  __THREW__ = 0;
                  $10835 = (invoke_iii(416,($vinfos169|0),3)|0);
                  $10836 = __THREW__; __THREW__ = 0;
                  $10837 = $10836&1;
                  if ($10837) {
                   label = 1213;
                   break L1;
                  }
                  $10838 = ((($10835)) + 19|0);
                  HEAP8[$10838>>0] = $10834;
                  $10839 = ((($4)) + 545|0);
                  $10840 = ((($10839)) + 1|0);
                  $10841 = HEAP8[$10840>>0]|0;
                  __THREW__ = 0;
                  $10842 = (invoke_iii(416,($vinfos169|0),3)|0);
                  $10843 = __THREW__; __THREW__ = 0;
                  $10844 = $10843&1;
                  if ($10844) {
                   label = 1213;
                   break L1;
                  }
                  $10845 = ((($10842)) + 19|0);
                  $10846 = ((($10845)) + 1|0);
                  HEAP8[$10846>>0] = $10841;
                  $10847 = ((($4)) + 547|0);
                  $10848 = HEAP8[$10847>>0]|0;
                  __THREW__ = 0;
                  $10849 = (invoke_iii(416,($vinfos169|0),3)|0);
                  $10850 = __THREW__; __THREW__ = 0;
                  $10851 = $10850&1;
                  if ($10851) {
                   label = 1213;
                   break L1;
                  }
                  $10852 = ((($10849)) + 18|0);
                  HEAP8[$10852>>0] = $10848;
                  __THREW__ = 0;
                  $10853 = (invoke_iii(416,($vinfos169|0),4)|0);
                  $10854 = __THREW__; __THREW__ = 0;
                  $10855 = $10854&1;
                  if ($10855) {
                   label = 1213;
                   break L1;
                  }
                  $10856 = ((($10853)) + 17|0);
                  HEAP8[$10856>>0] = 1;
                  $10857 = ((($4)) + 160|0);
                  $10858 = +HEAPF64[$10857>>3];
                  __THREW__ = 0;
                  $10859 = (invoke_iii(416,($vinfos169|0),4)|0);
                  $10860 = __THREW__; __THREW__ = 0;
                  $10861 = $10860&1;
                  if ($10861) {
                   label = 1213;
                   break L1;
                  }
                  $10862 = ((($10859)) + 8|0);
                  HEAPF64[$10862>>3] = $10858;
                  $10863 = ((($4)) + 548|0);
                  $10864 = HEAP8[$10863>>0]|0;
                  __THREW__ = 0;
                  $10865 = (invoke_iii(416,($vinfos169|0),4)|0);
                  $10866 = __THREW__; __THREW__ = 0;
                  $10867 = $10866&1;
                  if ($10867) {
                   label = 1213;
                   break L1;
                  }
                  $10868 = ((($10865)) + 19|0);
                  HEAP8[$10868>>0] = $10864;
                  $10869 = ((($4)) + 548|0);
                  $10870 = ((($10869)) + 1|0);
                  $10871 = HEAP8[$10870>>0]|0;
                  __THREW__ = 0;
                  $10872 = (invoke_iii(416,($vinfos169|0),4)|0);
                  $10873 = __THREW__; __THREW__ = 0;
                  $10874 = $10873&1;
                  if ($10874) {
                   label = 1213;
                   break L1;
                  }
                  $10875 = ((($10872)) + 19|0);
                  $10876 = ((($10875)) + 1|0);
                  HEAP8[$10876>>0] = $10871;
                  $10877 = ((($4)) + 550|0);
                  $10878 = HEAP8[$10877>>0]|0;
                  __THREW__ = 0;
                  $10879 = (invoke_iii(416,($vinfos169|0),4)|0);
                  $10880 = __THREW__; __THREW__ = 0;
                  $10881 = $10880&1;
                  if ($10881) {
                   label = 1213;
                   break L1;
                  }
                  $10882 = ((($10879)) + 18|0);
                  HEAP8[$10882>>0] = $10878;
                  __THREW__ = 0;
                  $10883 = (invoke_iii(416,($vinfos169|0),5)|0);
                  $10884 = __THREW__; __THREW__ = 0;
                  $10885 = $10884&1;
                  if ($10885) {
                   label = 1213;
                   break L1;
                  }
                  $10886 = ((($10883)) + 17|0);
                  HEAP8[$10886>>0] = 1;
                  $10887 = ((($4)) + 200|0);
                  $10888 = +HEAPF64[$10887>>3];
                  __THREW__ = 0;
                  $10889 = (invoke_iii(416,($vinfos169|0),5)|0);
                  $10890 = __THREW__; __THREW__ = 0;
                  $10891 = $10890&1;
                  if ($10891) {
                   label = 1213;
                   break L1;
                  }
                  $10892 = ((($10889)) + 8|0);
                  HEAPF64[$10892>>3] = $10888;
                  $10893 = ((($4)) + 551|0);
                  $10894 = HEAP8[$10893>>0]|0;
                  __THREW__ = 0;
                  $10895 = (invoke_iii(416,($vinfos169|0),5)|0);
                  $10896 = __THREW__; __THREW__ = 0;
                  $10897 = $10896&1;
                  if ($10897) {
                   label = 1213;
                   break L1;
                  }
                  $10898 = ((($10895)) + 19|0);
                  HEAP8[$10898>>0] = $10894;
                  $10899 = ((($4)) + 551|0);
                  $10900 = ((($10899)) + 1|0);
                  $10901 = HEAP8[$10900>>0]|0;
                  __THREW__ = 0;
                  $10902 = (invoke_iii(416,($vinfos169|0),5)|0);
                  $10903 = __THREW__; __THREW__ = 0;
                  $10904 = $10903&1;
                  if ($10904) {
                   label = 1213;
                   break L1;
                  }
                  $10905 = ((($10902)) + 19|0);
                  $10906 = ((($10905)) + 1|0);
                  HEAP8[$10906>>0] = $10901;
                  $10907 = ((($4)) + 553|0);
                  $10908 = HEAP8[$10907>>0]|0;
                  __THREW__ = 0;
                  $10909 = (invoke_iii(416,($vinfos169|0),5)|0);
                  $10910 = __THREW__; __THREW__ = 0;
                  $10911 = $10910&1;
                  if ($10911) {
                   label = 1213;
                   break L1;
                  }
                  $10912 = ((($10909)) + 18|0);
                  HEAP8[$10912>>0] = $10908;
                  __THREW__ = 0;
                  invoke_vii(417,($vfree170|0),0);
                  $10913 = __THREW__; __THREW__ = 0;
                  $10914 = $10913&1;
                  if ($10914) {
                   label = 1213;
                   break L1;
                  }
                  $10915 = $1;
                  $10916 = HEAP32[$10915>>2]|0;
                  $10917 = ((($10916)) + 8|0);
                  $10918 = HEAP32[$10917>>2]|0;
                  __THREW__ = 0;
                  (invoke_iiii($10918|0,($10915|0),($vinfos169|0),($vfree170|0))|0);
                  $10919 = __THREW__; __THREW__ = 0;
                  $10920 = $10919&1;
                  if ($10920) {
                   label = 1214;
                   break L1;
                  }
                  __THREW__ = 0;
                  invoke_vi(371,($vfree170|0));
                  $10921 = __THREW__; __THREW__ = 0;
                  $10922 = $10921&1;
                  if ($10922) {
                   label = 1213;
                   break L1;
                  }
                  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos169);
                 }
                } while(0);
                $10923 = $ij5166;
                $10924 = (($10923) + 1)|0;
                $ij5166 = $10924;
               }
              }
             } while(0);
             $10933 = $bgotonextstatement161;
             $10934 = $10933&1;
             if (!($10934)) {
              break;
             }
             $bgotonextstatement171 = 1;
             $10935 = ((($4)) + 360|0);
             $10936 = +HEAPF64[$10935>>3];
             $10937 = ((($4)) + 136|0);
             $10938 = +HEAPF64[$10937>>3];
             $10939 = $10936 * $10938;
             $x372 = $10939;
             $10940 = ((($4)) + 336|0);
             $10941 = +HEAPF64[$10940>>3];
             $10942 = ((($4)) + 136|0);
             $10943 = +HEAPF64[$10942>>3];
             $10944 = $10941 * $10943;
             $x373 = $10944;
             $10945 = ((($4)) + 136|0);
             $10946 = +HEAPF64[$10945>>3];
             $10947 = 1.0 * $10946;
             $x374 = $10947;
             $10948 = ((($4)) + 128|0);
             $10949 = +HEAPF64[$10948>>3];
             $10950 = 1.0 * $10949;
             $x375 = $10950;
             $10951 = ((($4)) + 128|0);
             $10952 = +HEAPF64[$10951>>3];
             $10953 = ((($4)) + 360|0);
             $10954 = +HEAPF64[$10953>>3];
             $10955 = $10952 * $10954;
             $10956 = ((($4)) + 288|0);
             $10957 = +HEAPF64[$10956>>3];
             $10958 = -1.0 * $10957;
             $10959 = $x374;
             $10960 = $10958 * $10959;
             $10961 = $10955 + $10960;
             $x376 = $10961;
             $10962 = ((($4)) + 160|0);
             $10963 = +HEAPF64[$10962>>3];
             $10964 = -1.5707963267949001 + $10963;
             $10965 = (+__Z5IKabsd($10964));
             $10966 = 3.14159265358979 + $10965;
             $10967 = (+__Z6IKfmoddd($10966,6.2831853071795898));
             $10968 = -3.14159265358979 + $10967;
             HEAPF64[$evalcond150>>3] = $10968;
             $10969 = ((($4)) + 432|0);
             $10970 = +HEAPF64[$10969>>3];
             $10971 = ((($evalcond150)) + 8|0);
             HEAPF64[$10971>>3] = $10970;
             $10972 = $x375;
             $10973 = -1.0 * $10972;
             $10974 = ((($4)) + 288|0);
             $10975 = +HEAPF64[$10974>>3];
             $10976 = $10973 + $10975;
             $10977 = ((($evalcond150)) + 16|0);
             HEAPF64[$10977>>3] = $10976;
             $10978 = $x374;
             $10979 = -1.0 * $10978;
             $10980 = ((($4)) + 360|0);
             $10981 = +HEAPF64[$10980>>3];
             $10982 = $10979 + $10981;
             $10983 = ((($evalcond150)) + 24|0);
             HEAPF64[$10983>>3] = $10982;
             $10984 = $x376;
             $10985 = ((($evalcond150)) + 32|0);
             HEAPF64[$10985>>3] = $10984;
             $10986 = $x376;
             $10987 = ((($evalcond150)) + 40|0);
             HEAPF64[$10987>>3] = $10986;
             $10988 = $x372;
             $10989 = -1.0 + $10988;
             $10990 = ((($4)) + 128|0);
             $10991 = +HEAPF64[$10990>>3];
             $10992 = ((($4)) + 288|0);
             $10993 = +HEAPF64[$10992>>3];
             $10994 = $10991 * $10993;
             $10995 = $10989 + $10994;
             $10996 = ((($evalcond150)) + 48|0);
             HEAPF64[$10996>>3] = $10995;
             $10997 = $x373;
             $10998 = ((($4)) + 128|0);
             $10999 = +HEAPF64[$10998>>3];
             $11000 = ((($4)) + 264|0);
             $11001 = +HEAPF64[$11000>>3];
             $11002 = $10999 * $11001;
             $11003 = $10997 + $11002;
             $11004 = ((($evalcond150)) + 56|0);
             HEAPF64[$11004>>3] = $11003;
             $11005 = ((($4)) + 312|0);
             $11006 = +HEAPF64[$11005>>3];
             $11007 = ((($4)) + 136|0);
             $11008 = +HEAPF64[$11007>>3];
             $11009 = $11006 * $11008;
             $11010 = ((($4)) + 128|0);
             $11011 = +HEAPF64[$11010>>3];
             $11012 = ((($4)) + 240|0);
             $11013 = +HEAPF64[$11012>>3];
             $11014 = $11011 * $11013;
             $11015 = $11009 + $11014;
             $11016 = ((($evalcond150)) + 64|0);
             HEAPF64[$11016>>3] = $11015;
             $11017 = ((($4)) + 240|0);
             $11018 = +HEAPF64[$11017>>3];
             $11019 = -1.0 * $11018;
             $11020 = $x375;
             $11021 = $11019 * $11020;
             $11022 = ((($4)) + 312|0);
             $11023 = +HEAPF64[$11022>>3];
             $11024 = -1.0 * $11023;
             $11025 = $x374;
             $11026 = $11024 * $11025;
             $11027 = $11021 + $11026;
             $11028 = ((($evalcond150)) + 72|0);
             HEAPF64[$11028>>3] = $11027;
             $11029 = $x373;
             $11030 = -1.0 * $11029;
             $11031 = ((($4)) + 264|0);
             $11032 = +HEAPF64[$11031>>3];
             $11033 = -1.0 * $11032;
             $11034 = $x375;
             $11035 = $11033 * $11034;
             $11036 = $11030 + $11035;
             $11037 = ((($evalcond150)) + 80|0);
             HEAPF64[$11037>>3] = $11036;
             $11038 = $x372;
             $11039 = -1.0 * $11038;
             $11040 = 1.0 + $11039;
             $11041 = ((($4)) + 288|0);
             $11042 = +HEAPF64[$11041>>3];
             $11043 = -1.0 * $11042;
             $11044 = $x375;
             $11045 = $11043 * $11044;
             $11046 = $11040 + $11045;
             $11047 = ((($evalcond150)) + 88|0);
             HEAPF64[$11047>>3] = $11046;
             $11048 = +HEAPF64[$evalcond150>>3];
             $11049 = (+__Z5IKabsd($11048));
             $11050 = $11049 < 9.9999999999999995E-7;
             L441: do {
              if ($11050) {
               $11051 = ((($evalcond150)) + 8|0);
               $11052 = +HEAPF64[$11051>>3];
               $11053 = (+__Z5IKabsd($11052));
               $11054 = $11053 < 9.9999999999999995E-7;
               if (!($11054)) {
                break;
               }
               $11055 = ((($evalcond150)) + 16|0);
               $11056 = +HEAPF64[$11055>>3];
               $11057 = (+__Z5IKabsd($11056));
               $11058 = $11057 < 9.9999999999999995E-7;
               if (!($11058)) {
                break;
               }
               $11059 = ((($evalcond150)) + 24|0);
               $11060 = +HEAPF64[$11059>>3];
               $11061 = (+__Z5IKabsd($11060));
               $11062 = $11061 < 9.9999999999999995E-7;
               if (!($11062)) {
                break;
               }
               $11063 = ((($evalcond150)) + 32|0);
               $11064 = +HEAPF64[$11063>>3];
               $11065 = (+__Z5IKabsd($11064));
               $11066 = $11065 < 9.9999999999999995E-7;
               if (!($11066)) {
                break;
               }
               $11067 = ((($evalcond150)) + 40|0);
               $11068 = +HEAPF64[$11067>>3];
               $11069 = (+__Z5IKabsd($11068));
               $11070 = $11069 < 9.9999999999999995E-7;
               if (!($11070)) {
                break;
               }
               $11071 = ((($evalcond150)) + 48|0);
               $11072 = +HEAPF64[$11071>>3];
               $11073 = (+__Z5IKabsd($11072));
               $11074 = $11073 < 9.9999999999999995E-7;
               if (!($11074)) {
                break;
               }
               $11075 = ((($evalcond150)) + 56|0);
               $11076 = +HEAPF64[$11075>>3];
               $11077 = (+__Z5IKabsd($11076));
               $11078 = $11077 < 9.9999999999999995E-7;
               if (!($11078)) {
                break;
               }
               $11079 = ((($evalcond150)) + 64|0);
               $11080 = +HEAPF64[$11079>>3];
               $11081 = (+__Z5IKabsd($11080));
               $11082 = $11081 < 9.9999999999999995E-7;
               if (!($11082)) {
                break;
               }
               $11083 = ((($evalcond150)) + 72|0);
               $11084 = +HEAPF64[$11083>>3];
               $11085 = (+__Z5IKabsd($11084));
               $11086 = $11085 < 9.9999999999999995E-7;
               if (!($11086)) {
                break;
               }
               $11087 = ((($evalcond150)) + 80|0);
               $11088 = +HEAPF64[$11087>>3];
               $11089 = (+__Z5IKabsd($11088));
               $11090 = $11089 < 9.9999999999999995E-7;
               if (!($11090)) {
                break;
               }
               $11091 = ((($evalcond150)) + 88|0);
               $11092 = +HEAPF64[$11091>>3];
               $11093 = (+__Z5IKabsd($11092));
               $11094 = $11093 < 9.9999999999999995E-7;
               if (!($11094)) {
                break;
               }
               $bgotonextstatement171 = 0;
               ;HEAP8[$j5valid175>>0]=0|0;
               $11095 = ((($4)) + 553|0);
               HEAP8[$11095>>0] = 1;
               $11096 = ((($4)) + 408|0);
               $11097 = +HEAPF64[$11096>>3];
               $11098 = (+__Z5IKabsd($11097));
               $11099 = $11098 < 1.9999999999999999E-6;
               do {
                if ($11099) {
                 $11100 = ((($4)) + 384|0);
                 $11101 = +HEAPF64[$11100>>3];
                 $11102 = -1.0 * $11101;
                 $11103 = (+__Z5IKabsd($11102));
                 $11104 = $11103 < 1.9999999999999999E-6;
                 if (!($11104)) {
                  break;
                 }
                 $11105 = ((($4)) + 408|0);
                 $11106 = +HEAPF64[$11105>>3];
                 $11107 = (+__Z5IKsqrd($11106));
                 $11108 = ((($4)) + 384|0);
                 $11109 = +HEAPF64[$11108>>3];
                 $11110 = -1.0 * $11109;
                 $11111 = (+__Z5IKsqrd($11110));
                 $11112 = $11107 + $11111;
                 $11113 = $11112 - 1.0;
                 $11114 = (+__Z5IKabsd($11113));
                 $11115 = $11114 <= 1.9999999999999999E-6;
                 if ($11115) {
                  break L441;
                 }
                }
               } while(0);
               $11116 = ((($4)) + 408|0);
               $11117 = +HEAPF64[$11116>>3];
               $11118 = ((($4)) + 384|0);
               $11119 = +HEAPF64[$11118>>3];
               $11120 = -1.0 * $11119;
               $11121 = (+__Z7IKatan2dd($11117,$11120));
               HEAPF64[$j5array172>>3] = $11121;
               $11122 = +HEAPF64[$j5array172>>3];
               $11123 = (+__Z5IKsind($11122));
               HEAPF64[$sj5array174>>3] = $11123;
               $11124 = +HEAPF64[$j5array172>>3];
               $11125 = (+__Z5IKcosd($11124));
               HEAPF64[$cj5array173>>3] = $11125;
               $11126 = +HEAPF64[$j5array172>>3];
               $11127 = $11126 > 3.14159265358979;
               $11128 = +HEAPF64[$j5array172>>3];
               do {
                if ($11127) {
                 $11129 = $11128 - 6.2831853071795898;
                 HEAPF64[$j5array172>>3] = $11129;
                } else {
                 $11130 = $11128 < -3.14159265358979;
                 if (!($11130)) {
                  break;
                 }
                 $11131 = +HEAPF64[$j5array172>>3];
                 $11132 = $11131 + 6.2831853071795898;
                 HEAPF64[$j5array172>>3] = $11132;
                }
               } while(0);
               HEAP8[$j5valid175>>0] = 1;
               $ij5176 = 0;
               while(1) {
                $11133 = $ij5176;
                $11134 = ($11133|0)<(1);
                if (!($11134)) {
                 break L441;
                }
                $11135 = $ij5176;
                $11136 = (($j5valid175) + ($11135)|0);
                $11137 = HEAP8[$11136>>0]|0;
                $11138 = $11137&1;
                do {
                 if ($11138) {
                  $11139 = $ij5176;
                  $11140 = $11139&255;
                  $11141 = ((($4)) + 551|0);
                  HEAP8[$11141>>0] = $11140;
                  $11142 = ((($4)) + 551|0);
                  $11143 = ((($11142)) + 1|0);
                  HEAP8[$11143>>0] = -1;
                  $11144 = $ij5176;
                  $11145 = (($11144) + 1)|0;
                  $iij5177 = $11145;
                  L468: while(1) {
                   $11146 = $iij5177;
                   $11147 = ($11146|0)<(1);
                   if (!($11147)) {
                    break;
                   }
                   $11148 = $iij5177;
                   $11149 = (($j5valid175) + ($11148)|0);
                   $11150 = HEAP8[$11149>>0]|0;
                   $11151 = $11150&1;
                   do {
                    if ($11151) {
                     $11152 = $ij5176;
                     $11153 = (($cj5array173) + ($11152<<3)|0);
                     $11154 = +HEAPF64[$11153>>3];
                     $11155 = $iij5177;
                     $11156 = (($cj5array173) + ($11155<<3)|0);
                     $11157 = +HEAPF64[$11156>>3];
                     $11158 = $11154 - $11157;
                     $11159 = (+__Z5IKabsd($11158));
                     $11160 = $11159 < 9.9999999999999995E-7;
                     if (!($11160)) {
                      break;
                     }
                     $11161 = $ij5176;
                     $11162 = (($sj5array174) + ($11161<<3)|0);
                     $11163 = +HEAPF64[$11162>>3];
                     $11164 = $iij5177;
                     $11165 = (($sj5array174) + ($11164<<3)|0);
                     $11166 = +HEAPF64[$11165>>3];
                     $11167 = $11163 - $11166;
                     $11168 = (+__Z5IKabsd($11167));
                     $11169 = $11168 < 9.9999999999999995E-7;
                     if ($11169) {
                      label = 1244;
                      break L468;
                     }
                    }
                   } while(0);
                   $11176 = $iij5177;
                   $11177 = (($11176) + 1)|0;
                   $iij5177 = $11177;
                  }
                  if ((label|0) == 1244) {
                   label = 0;
                   $11170 = $iij5177;
                   $11171 = (($j5valid175) + ($11170)|0);
                   HEAP8[$11171>>0] = 0;
                   $11172 = $iij5177;
                   $11173 = $11172&255;
                   $11174 = ((($4)) + 551|0);
                   $11175 = ((($11174)) + 1|0);
                   HEAP8[$11175>>0] = $11173;
                  }
                  $11178 = $ij5176;
                  $11179 = (($j5array172) + ($11178<<3)|0);
                  $11180 = +HEAPF64[$11179>>3];
                  $11181 = ((($4)) + 200|0);
                  HEAPF64[$11181>>3] = $11180;
                  $11182 = $ij5176;
                  $11183 = (($cj5array173) + ($11182<<3)|0);
                  $11184 = +HEAPF64[$11183>>3];
                  $11185 = ((($4)) + 208|0);
                  HEAPF64[$11185>>3] = $11184;
                  $11186 = $ij5176;
                  $11187 = (($sj5array174) + ($11186<<3)|0);
                  $11188 = +HEAPF64[$11187>>3];
                  $11189 = ((($4)) + 216|0);
                  HEAPF64[$11189>>3] = $11188;
                  $11190 = ((($4)) + 200|0);
                  $11191 = +HEAPF64[$11190>>3];
                  $11192 = (+__Z5IKcosd($11191));
                  $x377 = $11192;
                  $11193 = ((($4)) + 200|0);
                  $11194 = +HEAPF64[$11193>>3];
                  $11195 = (+__Z5IKsind($11194));
                  $x378 = $11195;
                  $11196 = ((($4)) + 360|0);
                  $11197 = +HEAPF64[$11196>>3];
                  $11198 = 1.0 * $11197;
                  $x379 = $11198;
                  $11199 = $x378;
                  $11200 = 1.0 * $11199;
                  $x380 = $11200;
                  $11201 = $x377;
                  $11202 = 1.0 * $11201;
                  $x381 = $11202;
                  $11203 = $x377;
                  $11204 = ((($4)) + 384|0);
                  $11205 = +HEAPF64[$11204>>3];
                  $11206 = $11203 + $11205;
                  HEAPF64[$evalcond178>>3] = $11206;
                  $11207 = $x380;
                  $11208 = -1.0 * $11207;
                  $11209 = ((($4)) + 408|0);
                  $11210 = +HEAPF64[$11209>>3];
                  $11211 = $11208 + $11210;
                  $11212 = ((($evalcond178)) + 8|0);
                  HEAPF64[$11212>>3] = $11211;
                  $11213 = ((($4)) + 360|0);
                  $11214 = +HEAPF64[$11213>>3];
                  $11215 = $x377;
                  $11216 = $11214 * $11215;
                  $11217 = ((($4)) + 264|0);
                  $11218 = +HEAPF64[$11217>>3];
                  $11219 = $11216 + $11218;
                  $11220 = ((($evalcond178)) + 16|0);
                  HEAPF64[$11220>>3] = $11219;
                  $11221 = ((($4)) + 360|0);
                  $11222 = +HEAPF64[$11221>>3];
                  $11223 = $x378;
                  $11224 = $11222 * $11223;
                  $11225 = ((($4)) + 240|0);
                  $11226 = +HEAPF64[$11225>>3];
                  $11227 = $11224 + $11226;
                  $11228 = ((($evalcond178)) + 24|0);
                  HEAPF64[$11228>>3] = $11227;
                  $11229 = ((($4)) + 288|0);
                  $11230 = +HEAPF64[$11229>>3];
                  $11231 = -1.0 * $11230;
                  $11232 = $x381;
                  $11233 = $11231 * $11232;
                  $11234 = ((($4)) + 336|0);
                  $11235 = +HEAPF64[$11234>>3];
                  $11236 = $11233 + $11235;
                  $11237 = ((($evalcond178)) + 32|0);
                  HEAPF64[$11237>>3] = $11236;
                  $11238 = ((($4)) + 288|0);
                  $11239 = +HEAPF64[$11238>>3];
                  $11240 = -1.0 * $11239;
                  $11241 = $x380;
                  $11242 = $11240 * $11241;
                  $11243 = ((($4)) + 312|0);
                  $11244 = +HEAPF64[$11243>>3];
                  $11245 = $11242 + $11244;
                  $11246 = ((($evalcond178)) + 40|0);
                  HEAPF64[$11246>>3] = $11245;
                  $11247 = ((($4)) + 240|0);
                  $11248 = +HEAPF64[$11247>>3];
                  $11249 = -1.0 * $11248;
                  $11250 = $x379;
                  $11251 = $11249 * $11250;
                  $11252 = $x380;
                  $11253 = -1.0 * $11252;
                  $11254 = $11251 + $11253;
                  $11255 = ((($4)) + 288|0);
                  $11256 = +HEAPF64[$11255>>3];
                  $11257 = ((($4)) + 312|0);
                  $11258 = +HEAPF64[$11257>>3];
                  $11259 = $11256 * $11258;
                  $11260 = $11254 + $11259;
                  $11261 = ((($evalcond178)) + 48|0);
                  HEAPF64[$11261>>3] = $11260;
                  $11262 = $x381;
                  $11263 = -1.0 * $11262;
                  $11264 = ((($4)) + 288|0);
                  $11265 = +HEAPF64[$11264>>3];
                  $11266 = ((($4)) + 336|0);
                  $11267 = +HEAPF64[$11266>>3];
                  $11268 = $11265 * $11267;
                  $11269 = $11263 + $11268;
                  $11270 = ((($4)) + 264|0);
                  $11271 = +HEAPF64[$11270>>3];
                  $11272 = -1.0 * $11271;
                  $11273 = $x379;
                  $11274 = $11272 * $11273;
                  $11275 = $11269 + $11274;
                  $11276 = ((($evalcond178)) + 56|0);
                  HEAPF64[$11276>>3] = $11275;
                  $11277 = +HEAPF64[$evalcond178>>3];
                  $11278 = (+__Z5IKabsd($11277));
                  $11279 = $11278 > 5.0000000000000004E-6;
                  if ($11279) {
                   break;
                  }
                  $11280 = ((($evalcond178)) + 8|0);
                  $11281 = +HEAPF64[$11280>>3];
                  $11282 = (+__Z5IKabsd($11281));
                  $11283 = $11282 > 5.0000000000000004E-6;
                  if ($11283) {
                   break;
                  }
                  $11284 = ((($evalcond178)) + 16|0);
                  $11285 = +HEAPF64[$11284>>3];
                  $11286 = (+__Z5IKabsd($11285));
                  $11287 = $11286 > 5.0000000000000004E-6;
                  if ($11287) {
                   break;
                  }
                  $11288 = ((($evalcond178)) + 24|0);
                  $11289 = +HEAPF64[$11288>>3];
                  $11290 = (+__Z5IKabsd($11289));
                  $11291 = $11290 > 5.0000000000000004E-6;
                  if ($11291) {
                   break;
                  }
                  $11292 = ((($evalcond178)) + 32|0);
                  $11293 = +HEAPF64[$11292>>3];
                  $11294 = (+__Z5IKabsd($11293));
                  $11295 = $11294 > 5.0000000000000004E-6;
                  if ($11295) {
                   break;
                  }
                  $11296 = ((($evalcond178)) + 40|0);
                  $11297 = +HEAPF64[$11296>>3];
                  $11298 = (+__Z5IKabsd($11297));
                  $11299 = $11298 > 5.0000000000000004E-6;
                  if ($11299) {
                   break;
                  }
                  $11300 = ((($evalcond178)) + 48|0);
                  $11301 = +HEAPF64[$11300>>3];
                  $11302 = (+__Z5IKabsd($11301));
                  $11303 = $11302 > 5.0000000000000004E-6;
                  if ($11303) {
                   break;
                  }
                  $11304 = ((($evalcond178)) + 56|0);
                  $11305 = +HEAPF64[$11304>>3];
                  $11306 = (+__Z5IKabsd($11305));
                  $11307 = $11306 > 5.0000000000000004E-6;
                  if ($11307) {
                   break;
                  }
                  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos179,6);
                  __THREW__ = 0;
                  $11308 = (invoke_iii(416,($vinfos179|0),0)|0);
                  $11309 = __THREW__; __THREW__ = 0;
                  $11310 = $11309&1;
                  if ($11310) {
                   label = 1289;
                   break L1;
                  }
                  $11311 = ((($11308)) + 17|0);
                  HEAP8[$11311>>0] = 1;
                  $11312 = +HEAPF64[$4>>3];
                  __THREW__ = 0;
                  $11313 = (invoke_iii(416,($vinfos179|0),0)|0);
                  $11314 = __THREW__; __THREW__ = 0;
                  $11315 = $11314&1;
                  if ($11315) {
                   label = 1289;
                   break L1;
                  }
                  $11316 = ((($11313)) + 8|0);
                  HEAPF64[$11316>>3] = $11312;
                  $11317 = ((($4)) + 536|0);
                  $11318 = HEAP8[$11317>>0]|0;
                  __THREW__ = 0;
                  $11319 = (invoke_iii(416,($vinfos179|0),0)|0);
                  $11320 = __THREW__; __THREW__ = 0;
                  $11321 = $11320&1;
                  if ($11321) {
                   label = 1289;
                   break L1;
                  }
                  $11322 = ((($11319)) + 19|0);
                  HEAP8[$11322>>0] = $11318;
                  $11323 = ((($4)) + 536|0);
                  $11324 = ((($11323)) + 1|0);
                  $11325 = HEAP8[$11324>>0]|0;
                  __THREW__ = 0;
                  $11326 = (invoke_iii(416,($vinfos179|0),0)|0);
                  $11327 = __THREW__; __THREW__ = 0;
                  $11328 = $11327&1;
                  if ($11328) {
                   label = 1289;
                   break L1;
                  }
                  $11329 = ((($11326)) + 19|0);
                  $11330 = ((($11329)) + 1|0);
                  HEAP8[$11330>>0] = $11325;
                  $11331 = ((($4)) + 538|0);
                  $11332 = HEAP8[$11331>>0]|0;
                  __THREW__ = 0;
                  $11333 = (invoke_iii(416,($vinfos179|0),0)|0);
                  $11334 = __THREW__; __THREW__ = 0;
                  $11335 = $11334&1;
                  if ($11335) {
                   label = 1289;
                   break L1;
                  }
                  $11336 = ((($11333)) + 18|0);
                  HEAP8[$11336>>0] = $11332;
                  __THREW__ = 0;
                  $11337 = (invoke_iii(416,($vinfos179|0),1)|0);
                  $11338 = __THREW__; __THREW__ = 0;
                  $11339 = $11338&1;
                  if ($11339) {
                   label = 1289;
                   break L1;
                  }
                  $11340 = ((($11337)) + 17|0);
                  HEAP8[$11340>>0] = 1;
                  $11341 = ((($4)) + 40|0);
                  $11342 = +HEAPF64[$11341>>3];
                  __THREW__ = 0;
                  $11343 = (invoke_iii(416,($vinfos179|0),1)|0);
                  $11344 = __THREW__; __THREW__ = 0;
                  $11345 = $11344&1;
                  if ($11345) {
                   label = 1289;
                   break L1;
                  }
                  $11346 = ((($11343)) + 8|0);
                  HEAPF64[$11346>>3] = $11342;
                  $11347 = ((($4)) + 539|0);
                  $11348 = HEAP8[$11347>>0]|0;
                  __THREW__ = 0;
                  $11349 = (invoke_iii(416,($vinfos179|0),1)|0);
                  $11350 = __THREW__; __THREW__ = 0;
                  $11351 = $11350&1;
                  if ($11351) {
                   label = 1289;
                   break L1;
                  }
                  $11352 = ((($11349)) + 19|0);
                  HEAP8[$11352>>0] = $11348;
                  $11353 = ((($4)) + 539|0);
                  $11354 = ((($11353)) + 1|0);
                  $11355 = HEAP8[$11354>>0]|0;
                  __THREW__ = 0;
                  $11356 = (invoke_iii(416,($vinfos179|0),1)|0);
                  $11357 = __THREW__; __THREW__ = 0;
                  $11358 = $11357&1;
                  if ($11358) {
                   label = 1289;
                   break L1;
                  }
                  $11359 = ((($11356)) + 19|0);
                  $11360 = ((($11359)) + 1|0);
                  HEAP8[$11360>>0] = $11355;
                  $11361 = ((($4)) + 541|0);
                  $11362 = HEAP8[$11361>>0]|0;
                  __THREW__ = 0;
                  $11363 = (invoke_iii(416,($vinfos179|0),1)|0);
                  $11364 = __THREW__; __THREW__ = 0;
                  $11365 = $11364&1;
                  if ($11365) {
                   label = 1289;
                   break L1;
                  }
                  $11366 = ((($11363)) + 18|0);
                  HEAP8[$11366>>0] = $11362;
                  __THREW__ = 0;
                  $11367 = (invoke_iii(416,($vinfos179|0),2)|0);
                  $11368 = __THREW__; __THREW__ = 0;
                  $11369 = $11368&1;
                  if ($11369) {
                   label = 1289;
                   break L1;
                  }
                  $11370 = ((($11367)) + 17|0);
                  HEAP8[$11370>>0] = 1;
                  $11371 = ((($4)) + 80|0);
                  $11372 = +HEAPF64[$11371>>3];
                  __THREW__ = 0;
                  $11373 = (invoke_iii(416,($vinfos179|0),2)|0);
                  $11374 = __THREW__; __THREW__ = 0;
                  $11375 = $11374&1;
                  if ($11375) {
                   label = 1289;
                   break L1;
                  }
                  $11376 = ((($11373)) + 8|0);
                  HEAPF64[$11376>>3] = $11372;
                  $11377 = ((($4)) + 542|0);
                  $11378 = HEAP8[$11377>>0]|0;
                  __THREW__ = 0;
                  $11379 = (invoke_iii(416,($vinfos179|0),2)|0);
                  $11380 = __THREW__; __THREW__ = 0;
                  $11381 = $11380&1;
                  if ($11381) {
                   label = 1289;
                   break L1;
                  }
                  $11382 = ((($11379)) + 19|0);
                  HEAP8[$11382>>0] = $11378;
                  $11383 = ((($4)) + 542|0);
                  $11384 = ((($11383)) + 1|0);
                  $11385 = HEAP8[$11384>>0]|0;
                  __THREW__ = 0;
                  $11386 = (invoke_iii(416,($vinfos179|0),2)|0);
                  $11387 = __THREW__; __THREW__ = 0;
                  $11388 = $11387&1;
                  if ($11388) {
                   label = 1289;
                   break L1;
                  }
                  $11389 = ((($11386)) + 19|0);
                  $11390 = ((($11389)) + 1|0);
                  HEAP8[$11390>>0] = $11385;
                  $11391 = ((($4)) + 544|0);
                  $11392 = HEAP8[$11391>>0]|0;
                  __THREW__ = 0;
                  $11393 = (invoke_iii(416,($vinfos179|0),2)|0);
                  $11394 = __THREW__; __THREW__ = 0;
                  $11395 = $11394&1;
                  if ($11395) {
                   label = 1289;
                   break L1;
                  }
                  $11396 = ((($11393)) + 18|0);
                  HEAP8[$11396>>0] = $11392;
                  __THREW__ = 0;
                  $11397 = (invoke_iii(416,($vinfos179|0),3)|0);
                  $11398 = __THREW__; __THREW__ = 0;
                  $11399 = $11398&1;
                  if ($11399) {
                   label = 1289;
                   break L1;
                  }
                  $11400 = ((($11397)) + 17|0);
                  HEAP8[$11400>>0] = 1;
                  $11401 = ((($4)) + 120|0);
                  $11402 = +HEAPF64[$11401>>3];
                  __THREW__ = 0;
                  $11403 = (invoke_iii(416,($vinfos179|0),3)|0);
                  $11404 = __THREW__; __THREW__ = 0;
                  $11405 = $11404&1;
                  if ($11405) {
                   label = 1289;
                   break L1;
                  }
                  $11406 = ((($11403)) + 8|0);
                  HEAPF64[$11406>>3] = $11402;
                  $11407 = ((($4)) + 545|0);
                  $11408 = HEAP8[$11407>>0]|0;
                  __THREW__ = 0;
                  $11409 = (invoke_iii(416,($vinfos179|0),3)|0);
                  $11410 = __THREW__; __THREW__ = 0;
                  $11411 = $11410&1;
                  if ($11411) {
                   label = 1289;
                   break L1;
                  }
                  $11412 = ((($11409)) + 19|0);
                  HEAP8[$11412>>0] = $11408;
                  $11413 = ((($4)) + 545|0);
                  $11414 = ((($11413)) + 1|0);
                  $11415 = HEAP8[$11414>>0]|0;
                  __THREW__ = 0;
                  $11416 = (invoke_iii(416,($vinfos179|0),3)|0);
                  $11417 = __THREW__; __THREW__ = 0;
                  $11418 = $11417&1;
                  if ($11418) {
                   label = 1289;
                   break L1;
                  }
                  $11419 = ((($11416)) + 19|0);
                  $11420 = ((($11419)) + 1|0);
                  HEAP8[$11420>>0] = $11415;
                  $11421 = ((($4)) + 547|0);
                  $11422 = HEAP8[$11421>>0]|0;
                  __THREW__ = 0;
                  $11423 = (invoke_iii(416,($vinfos179|0),3)|0);
                  $11424 = __THREW__; __THREW__ = 0;
                  $11425 = $11424&1;
                  if ($11425) {
                   label = 1289;
                   break L1;
                  }
                  $11426 = ((($11423)) + 18|0);
                  HEAP8[$11426>>0] = $11422;
                  __THREW__ = 0;
                  $11427 = (invoke_iii(416,($vinfos179|0),4)|0);
                  $11428 = __THREW__; __THREW__ = 0;
                  $11429 = $11428&1;
                  if ($11429) {
                   label = 1289;
                   break L1;
                  }
                  $11430 = ((($11427)) + 17|0);
                  HEAP8[$11430>>0] = 1;
                  $11431 = ((($4)) + 160|0);
                  $11432 = +HEAPF64[$11431>>3];
                  __THREW__ = 0;
                  $11433 = (invoke_iii(416,($vinfos179|0),4)|0);
                  $11434 = __THREW__; __THREW__ = 0;
                  $11435 = $11434&1;
                  if ($11435) {
                   label = 1289;
                   break L1;
                  }
                  $11436 = ((($11433)) + 8|0);
                  HEAPF64[$11436>>3] = $11432;
                  $11437 = ((($4)) + 548|0);
                  $11438 = HEAP8[$11437>>0]|0;
                  __THREW__ = 0;
                  $11439 = (invoke_iii(416,($vinfos179|0),4)|0);
                  $11440 = __THREW__; __THREW__ = 0;
                  $11441 = $11440&1;
                  if ($11441) {
                   label = 1289;
                   break L1;
                  }
                  $11442 = ((($11439)) + 19|0);
                  HEAP8[$11442>>0] = $11438;
                  $11443 = ((($4)) + 548|0);
                  $11444 = ((($11443)) + 1|0);
                  $11445 = HEAP8[$11444>>0]|0;
                  __THREW__ = 0;
                  $11446 = (invoke_iii(416,($vinfos179|0),4)|0);
                  $11447 = __THREW__; __THREW__ = 0;
                  $11448 = $11447&1;
                  if ($11448) {
                   label = 1289;
                   break L1;
                  }
                  $11449 = ((($11446)) + 19|0);
                  $11450 = ((($11449)) + 1|0);
                  HEAP8[$11450>>0] = $11445;
                  $11451 = ((($4)) + 550|0);
                  $11452 = HEAP8[$11451>>0]|0;
                  __THREW__ = 0;
                  $11453 = (invoke_iii(416,($vinfos179|0),4)|0);
                  $11454 = __THREW__; __THREW__ = 0;
                  $11455 = $11454&1;
                  if ($11455) {
                   label = 1289;
                   break L1;
                  }
                  $11456 = ((($11453)) + 18|0);
                  HEAP8[$11456>>0] = $11452;
                  __THREW__ = 0;
                  $11457 = (invoke_iii(416,($vinfos179|0),5)|0);
                  $11458 = __THREW__; __THREW__ = 0;
                  $11459 = $11458&1;
                  if ($11459) {
                   label = 1289;
                   break L1;
                  }
                  $11460 = ((($11457)) + 17|0);
                  HEAP8[$11460>>0] = 1;
                  $11461 = ((($4)) + 200|0);
                  $11462 = +HEAPF64[$11461>>3];
                  __THREW__ = 0;
                  $11463 = (invoke_iii(416,($vinfos179|0),5)|0);
                  $11464 = __THREW__; __THREW__ = 0;
                  $11465 = $11464&1;
                  if ($11465) {
                   label = 1289;
                   break L1;
                  }
                  $11466 = ((($11463)) + 8|0);
                  HEAPF64[$11466>>3] = $11462;
                  $11467 = ((($4)) + 551|0);
                  $11468 = HEAP8[$11467>>0]|0;
                  __THREW__ = 0;
                  $11469 = (invoke_iii(416,($vinfos179|0),5)|0);
                  $11470 = __THREW__; __THREW__ = 0;
                  $11471 = $11470&1;
                  if ($11471) {
                   label = 1289;
                   break L1;
                  }
                  $11472 = ((($11469)) + 19|0);
                  HEAP8[$11472>>0] = $11468;
                  $11473 = ((($4)) + 551|0);
                  $11474 = ((($11473)) + 1|0);
                  $11475 = HEAP8[$11474>>0]|0;
                  __THREW__ = 0;
                  $11476 = (invoke_iii(416,($vinfos179|0),5)|0);
                  $11477 = __THREW__; __THREW__ = 0;
                  $11478 = $11477&1;
                  if ($11478) {
                   label = 1289;
                   break L1;
                  }
                  $11479 = ((($11476)) + 19|0);
                  $11480 = ((($11479)) + 1|0);
                  HEAP8[$11480>>0] = $11475;
                  $11481 = ((($4)) + 553|0);
                  $11482 = HEAP8[$11481>>0]|0;
                  __THREW__ = 0;
                  $11483 = (invoke_iii(416,($vinfos179|0),5)|0);
                  $11484 = __THREW__; __THREW__ = 0;
                  $11485 = $11484&1;
                  if ($11485) {
                   label = 1289;
                   break L1;
                  }
                  $11486 = ((($11483)) + 18|0);
                  HEAP8[$11486>>0] = $11482;
                  __THREW__ = 0;
                  invoke_vii(417,($vfree180|0),0);
                  $11487 = __THREW__; __THREW__ = 0;
                  $11488 = $11487&1;
                  if ($11488) {
                   label = 1289;
                   break L1;
                  }
                  $11489 = $1;
                  $11490 = HEAP32[$11489>>2]|0;
                  $11491 = ((($11490)) + 8|0);
                  $11492 = HEAP32[$11491>>2]|0;
                  __THREW__ = 0;
                  (invoke_iiii($11492|0,($11489|0),($vinfos179|0),($vfree180|0))|0);
                  $11493 = __THREW__; __THREW__ = 0;
                  $11494 = $11493&1;
                  if ($11494) {
                   label = 1290;
                   break L1;
                  }
                  __THREW__ = 0;
                  invoke_vi(371,($vfree180|0));
                  $11495 = __THREW__; __THREW__ = 0;
                  $11496 = $11495&1;
                  if ($11496) {
                   label = 1289;
                   break L1;
                  }
                  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos179);
                 }
                } while(0);
                $11497 = $ij5176;
                $11498 = (($11497) + 1)|0;
                $ij5176 = $11498;
               }
              }
             } while(0);
             $11507 = $bgotonextstatement171;
             $11508 = $11507&1;
             if (!($11508)) {
              break;
             }
             $bgotonextstatement181 = 1;
             $11509 = ((($4)) + 288|0);
             $11510 = +HEAPF64[$11509>>3];
             $11511 = -1.0 * $11510;
             $11512 = ((($4)) + 136|0);
             $11513 = +HEAPF64[$11512>>3];
             $11514 = $11511 * $11513;
             $11515 = ((($4)) + 128|0);
             $11516 = +HEAPF64[$11515>>3];
             $11517 = ((($4)) + 360|0);
             $11518 = +HEAPF64[$11517>>3];
             $11519 = $11516 * $11518;
             $11520 = $11514 + $11519;
             $x382 = $11520;
             $11521 = ((($4)) + 312|0);
             $11522 = +HEAPF64[$11521>>3];
             $11523 = ((($4)) + 136|0);
             $11524 = +HEAPF64[$11523>>3];
             $11525 = $11522 * $11524;
             $11526 = ((($4)) + 128|0);
             $11527 = +HEAPF64[$11526>>3];
             $11528 = ((($4)) + 240|0);
             $11529 = +HEAPF64[$11528>>3];
             $11530 = $11527 * $11529;
             $11531 = $11525 + $11530;
             $x383 = $11531;
             $11532 = ((($4)) + 336|0);
             $11533 = +HEAPF64[$11532>>3];
             $11534 = ((($4)) + 136|0);
             $11535 = +HEAPF64[$11534>>3];
             $11536 = $11533 * $11535;
             $11537 = ((($4)) + 128|0);
             $11538 = +HEAPF64[$11537>>3];
             $11539 = ((($4)) + 264|0);
             $11540 = +HEAPF64[$11539>>3];
             $11541 = $11538 * $11540;
             $11542 = $11536 + $11541;
             $x384 = $11542;
             $11543 = ((($4)) + 360|0);
             $11544 = +HEAPF64[$11543>>3];
             $11545 = ((($4)) + 136|0);
             $11546 = +HEAPF64[$11545>>3];
             $11547 = $11544 * $11546;
             $11548 = 1.0 + $11547;
             $11549 = ((($4)) + 128|0);
             $11550 = +HEAPF64[$11549>>3];
             $11551 = ((($4)) + 288|0);
             $11552 = +HEAPF64[$11551>>3];
             $11553 = $11550 * $11552;
             $11554 = $11548 + $11553;
             $x385 = $11554;
             $11555 = ((($4)) + 160|0);
             $11556 = +HEAPF64[$11555>>3];
             $11557 = 1.5707963267949001 + $11556;
             $11558 = (+__Z5IKabsd($11557));
             $11559 = 3.14159265358979 + $11558;
             $11560 = (+__Z6IKfmoddd($11559,6.2831853071795898));
             $11561 = -3.14159265358979 + $11560;
             HEAPF64[$evalcond150>>3] = $11561;
             $11562 = ((($4)) + 432|0);
             $11563 = +HEAPF64[$11562>>3];
             $11564 = ((($evalcond150)) + 8|0);
             HEAPF64[$11564>>3] = $11563;
             $11565 = ((($4)) + 128|0);
             $11566 = +HEAPF64[$11565>>3];
             $11567 = ((($4)) + 288|0);
             $11568 = +HEAPF64[$11567>>3];
             $11569 = $11566 + $11568;
             $11570 = ((($evalcond150)) + 16|0);
             HEAPF64[$11570>>3] = $11569;
             $11571 = ((($4)) + 136|0);
             $11572 = +HEAPF64[$11571>>3];
             $11573 = ((($4)) + 360|0);
             $11574 = +HEAPF64[$11573>>3];
             $11575 = $11572 + $11574;
             $11576 = ((($evalcond150)) + 24|0);
             HEAPF64[$11576>>3] = $11575;
             $11577 = $x382;
             $11578 = ((($evalcond150)) + 32|0);
             HEAPF64[$11578>>3] = $11577;
             $11579 = $x382;
             $11580 = ((($evalcond150)) + 40|0);
             HEAPF64[$11580>>3] = $11579;
             $11581 = $x385;
             $11582 = ((($evalcond150)) + 48|0);
             HEAPF64[$11582>>3] = $11581;
             $11583 = $x384;
             $11584 = ((($evalcond150)) + 56|0);
             HEAPF64[$11584>>3] = $11583;
             $11585 = $x383;
             $11586 = ((($evalcond150)) + 64|0);
             HEAPF64[$11586>>3] = $11585;
             $11587 = $x383;
             $11588 = ((($evalcond150)) + 72|0);
             HEAPF64[$11588>>3] = $11587;
             $11589 = $x384;
             $11590 = ((($evalcond150)) + 80|0);
             HEAPF64[$11590>>3] = $11589;
             $11591 = $x385;
             $11592 = ((($evalcond150)) + 88|0);
             HEAPF64[$11592>>3] = $11591;
             $11593 = +HEAPF64[$evalcond150>>3];
             $11594 = (+__Z5IKabsd($11593));
             $11595 = $11594 < 9.9999999999999995E-7;
             L522: do {
              if ($11595) {
               $11596 = ((($evalcond150)) + 8|0);
               $11597 = +HEAPF64[$11596>>3];
               $11598 = (+__Z5IKabsd($11597));
               $11599 = $11598 < 9.9999999999999995E-7;
               if (!($11599)) {
                break;
               }
               $11600 = ((($evalcond150)) + 16|0);
               $11601 = +HEAPF64[$11600>>3];
               $11602 = (+__Z5IKabsd($11601));
               $11603 = $11602 < 9.9999999999999995E-7;
               if (!($11603)) {
                break;
               }
               $11604 = ((($evalcond150)) + 24|0);
               $11605 = +HEAPF64[$11604>>3];
               $11606 = (+__Z5IKabsd($11605));
               $11607 = $11606 < 9.9999999999999995E-7;
               if (!($11607)) {
                break;
               }
               $11608 = ((($evalcond150)) + 32|0);
               $11609 = +HEAPF64[$11608>>3];
               $11610 = (+__Z5IKabsd($11609));
               $11611 = $11610 < 9.9999999999999995E-7;
               if (!($11611)) {
                break;
               }
               $11612 = ((($evalcond150)) + 40|0);
               $11613 = +HEAPF64[$11612>>3];
               $11614 = (+__Z5IKabsd($11613));
               $11615 = $11614 < 9.9999999999999995E-7;
               if (!($11615)) {
                break;
               }
               $11616 = ((($evalcond150)) + 48|0);
               $11617 = +HEAPF64[$11616>>3];
               $11618 = (+__Z5IKabsd($11617));
               $11619 = $11618 < 9.9999999999999995E-7;
               if (!($11619)) {
                break;
               }
               $11620 = ((($evalcond150)) + 56|0);
               $11621 = +HEAPF64[$11620>>3];
               $11622 = (+__Z5IKabsd($11621));
               $11623 = $11622 < 9.9999999999999995E-7;
               if (!($11623)) {
                break;
               }
               $11624 = ((($evalcond150)) + 64|0);
               $11625 = +HEAPF64[$11624>>3];
               $11626 = (+__Z5IKabsd($11625));
               $11627 = $11626 < 9.9999999999999995E-7;
               if (!($11627)) {
                break;
               }
               $11628 = ((($evalcond150)) + 72|0);
               $11629 = +HEAPF64[$11628>>3];
               $11630 = (+__Z5IKabsd($11629));
               $11631 = $11630 < 9.9999999999999995E-7;
               if (!($11631)) {
                break;
               }
               $11632 = ((($evalcond150)) + 80|0);
               $11633 = +HEAPF64[$11632>>3];
               $11634 = (+__Z5IKabsd($11633));
               $11635 = $11634 < 9.9999999999999995E-7;
               if (!($11635)) {
                break;
               }
               $11636 = ((($evalcond150)) + 88|0);
               $11637 = +HEAPF64[$11636>>3];
               $11638 = (+__Z5IKabsd($11637));
               $11639 = $11638 < 9.9999999999999995E-7;
               if (!($11639)) {
                break;
               }
               $bgotonextstatement181 = 0;
               ;HEAP8[$j5valid185>>0]=0|0;
               $11640 = ((($4)) + 553|0);
               HEAP8[$11640>>0] = 1;
               $11641 = ((($4)) + 408|0);
               $11642 = +HEAPF64[$11641>>3];
               $11643 = -1.0 * $11642;
               $11644 = (+__Z5IKabsd($11643));
               $11645 = $11644 < 1.9999999999999999E-6;
               do {
                if ($11645) {
                 $11646 = ((($4)) + 384|0);
                 $11647 = +HEAPF64[$11646>>3];
                 $11648 = (+__Z5IKabsd($11647));
                 $11649 = $11648 < 1.9999999999999999E-6;
                 if (!($11649)) {
                  break;
                 }
                 $11650 = ((($4)) + 408|0);
                 $11651 = +HEAPF64[$11650>>3];
                 $11652 = -1.0 * $11651;
                 $11653 = (+__Z5IKsqrd($11652));
                 $11654 = ((($4)) + 384|0);
                 $11655 = +HEAPF64[$11654>>3];
                 $11656 = (+__Z5IKsqrd($11655));
                 $11657 = $11653 + $11656;
                 $11658 = $11657 - 1.0;
                 $11659 = (+__Z5IKabsd($11658));
                 $11660 = $11659 <= 1.9999999999999999E-6;
                 if ($11660) {
                  break L522;
                 }
                }
               } while(0);
               $11661 = ((($4)) + 408|0);
               $11662 = +HEAPF64[$11661>>3];
               $11663 = -1.0 * $11662;
               $11664 = ((($4)) + 384|0);
               $11665 = +HEAPF64[$11664>>3];
               $11666 = (+__Z7IKatan2dd($11663,$11665));
               HEAPF64[$j5array182>>3] = $11666;
               $11667 = +HEAPF64[$j5array182>>3];
               $11668 = (+__Z5IKsind($11667));
               HEAPF64[$sj5array184>>3] = $11668;
               $11669 = +HEAPF64[$j5array182>>3];
               $11670 = (+__Z5IKcosd($11669));
               HEAPF64[$cj5array183>>3] = $11670;
               $11671 = +HEAPF64[$j5array182>>3];
               $11672 = $11671 > 3.14159265358979;
               $11673 = +HEAPF64[$j5array182>>3];
               do {
                if ($11672) {
                 $11674 = $11673 - 6.2831853071795898;
                 HEAPF64[$j5array182>>3] = $11674;
                } else {
                 $11675 = $11673 < -3.14159265358979;
                 if (!($11675)) {
                  break;
                 }
                 $11676 = +HEAPF64[$j5array182>>3];
                 $11677 = $11676 + 6.2831853071795898;
                 HEAPF64[$j5array182>>3] = $11677;
                }
               } while(0);
               HEAP8[$j5valid185>>0] = 1;
               $ij5186 = 0;
               while(1) {
                $11678 = $ij5186;
                $11679 = ($11678|0)<(1);
                if (!($11679)) {
                 break L522;
                }
                $11680 = $ij5186;
                $11681 = (($j5valid185) + ($11680)|0);
                $11682 = HEAP8[$11681>>0]|0;
                $11683 = $11682&1;
                do {
                 if ($11683) {
                  $11684 = $ij5186;
                  $11685 = $11684&255;
                  $11686 = ((($4)) + 551|0);
                  HEAP8[$11686>>0] = $11685;
                  $11687 = ((($4)) + 551|0);
                  $11688 = ((($11687)) + 1|0);
                  HEAP8[$11688>>0] = -1;
                  $11689 = $ij5186;
                  $11690 = (($11689) + 1)|0;
                  $iij5187 = $11690;
                  L549: while(1) {
                   $11691 = $iij5187;
                   $11692 = ($11691|0)<(1);
                   if (!($11692)) {
                    break;
                   }
                   $11693 = $iij5187;
                   $11694 = (($j5valid185) + ($11693)|0);
                   $11695 = HEAP8[$11694>>0]|0;
                   $11696 = $11695&1;
                   do {
                    if ($11696) {
                     $11697 = $ij5186;
                     $11698 = (($cj5array183) + ($11697<<3)|0);
                     $11699 = +HEAPF64[$11698>>3];
                     $11700 = $iij5187;
                     $11701 = (($cj5array183) + ($11700<<3)|0);
                     $11702 = +HEAPF64[$11701>>3];
                     $11703 = $11699 - $11702;
                     $11704 = (+__Z5IKabsd($11703));
                     $11705 = $11704 < 9.9999999999999995E-7;
                     if (!($11705)) {
                      break;
                     }
                     $11706 = $ij5186;
                     $11707 = (($sj5array184) + ($11706<<3)|0);
                     $11708 = +HEAPF64[$11707>>3];
                     $11709 = $iij5187;
                     $11710 = (($sj5array184) + ($11709<<3)|0);
                     $11711 = +HEAPF64[$11710>>3];
                     $11712 = $11708 - $11711;
                     $11713 = (+__Z5IKabsd($11712));
                     $11714 = $11713 < 9.9999999999999995E-7;
                     if ($11714) {
                      label = 1320;
                      break L549;
                     }
                    }
                   } while(0);
                   $11721 = $iij5187;
                   $11722 = (($11721) + 1)|0;
                   $iij5187 = $11722;
                  }
                  if ((label|0) == 1320) {
                   label = 0;
                   $11715 = $iij5187;
                   $11716 = (($j5valid185) + ($11715)|0);
                   HEAP8[$11716>>0] = 0;
                   $11717 = $iij5187;
                   $11718 = $11717&255;
                   $11719 = ((($4)) + 551|0);
                   $11720 = ((($11719)) + 1|0);
                   HEAP8[$11720>>0] = $11718;
                  }
                  $11723 = $ij5186;
                  $11724 = (($j5array182) + ($11723<<3)|0);
                  $11725 = +HEAPF64[$11724>>3];
                  $11726 = ((($4)) + 200|0);
                  HEAPF64[$11726>>3] = $11725;
                  $11727 = $ij5186;
                  $11728 = (($cj5array183) + ($11727<<3)|0);
                  $11729 = +HEAPF64[$11728>>3];
                  $11730 = ((($4)) + 208|0);
                  HEAPF64[$11730>>3] = $11729;
                  $11731 = $ij5186;
                  $11732 = (($sj5array184) + ($11731<<3)|0);
                  $11733 = +HEAPF64[$11732>>3];
                  $11734 = ((($4)) + 216|0);
                  HEAPF64[$11734>>3] = $11733;
                  $11735 = ((($4)) + 200|0);
                  $11736 = +HEAPF64[$11735>>3];
                  $11737 = (+__Z5IKcosd($11736));
                  $x386 = $11737;
                  $11738 = ((($4)) + 200|0);
                  $11739 = +HEAPF64[$11738>>3];
                  $11740 = (+__Z5IKsind($11739));
                  $x387 = $11740;
                  $11741 = ((($4)) + 288|0);
                  $11742 = +HEAPF64[$11741>>3];
                  $11743 = 1.0 * $11742;
                  $x388 = $11743;
                  $11744 = $x386;
                  $11745 = 1.0 * $11744;
                  $x389 = $11745;
                  $11746 = $x387;
                  $11747 = 1.0 * $11746;
                  $x390 = $11747;
                  $11748 = $x387;
                  $11749 = ((($4)) + 408|0);
                  $11750 = +HEAPF64[$11749>>3];
                  $11751 = $11748 + $11750;
                  HEAPF64[$evalcond188>>3] = $11751;
                  $11752 = $x389;
                  $11753 = -1.0 * $11752;
                  $11754 = ((($4)) + 384|0);
                  $11755 = +HEAPF64[$11754>>3];
                  $11756 = $11753 + $11755;
                  $11757 = ((($evalcond188)) + 8|0);
                  HEAPF64[$11757>>3] = $11756;
                  $11758 = ((($4)) + 288|0);
                  $11759 = +HEAPF64[$11758>>3];
                  $11760 = $x386;
                  $11761 = $11759 * $11760;
                  $11762 = ((($4)) + 336|0);
                  $11763 = +HEAPF64[$11762>>3];
                  $11764 = $11761 + $11763;
                  $11765 = ((($evalcond188)) + 16|0);
                  HEAPF64[$11765>>3] = $11764;
                  $11766 = ((($4)) + 288|0);
                  $11767 = +HEAPF64[$11766>>3];
                  $11768 = $x387;
                  $11769 = $11767 * $11768;
                  $11770 = ((($4)) + 312|0);
                  $11771 = +HEAPF64[$11770>>3];
                  $11772 = $11769 + $11771;
                  $11773 = ((($evalcond188)) + 24|0);
                  HEAPF64[$11773>>3] = $11772;
                  $11774 = ((($4)) + 360|0);
                  $11775 = +HEAPF64[$11774>>3];
                  $11776 = -1.0 * $11775;
                  $11777 = $x389;
                  $11778 = $11776 * $11777;
                  $11779 = ((($4)) + 264|0);
                  $11780 = +HEAPF64[$11779>>3];
                  $11781 = $11778 + $11780;
                  $11782 = ((($evalcond188)) + 32|0);
                  HEAPF64[$11782>>3] = $11781;
                  $11783 = ((($4)) + 360|0);
                  $11784 = +HEAPF64[$11783>>3];
                  $11785 = -1.0 * $11784;
                  $11786 = $x390;
                  $11787 = $11785 * $11786;
                  $11788 = ((($4)) + 240|0);
                  $11789 = +HEAPF64[$11788>>3];
                  $11790 = $11787 + $11789;
                  $11791 = ((($evalcond188)) + 40|0);
                  HEAPF64[$11791>>3] = $11790;
                  $11792 = ((($4)) + 312|0);
                  $11793 = +HEAPF64[$11792>>3];
                  $11794 = -1.0 * $11793;
                  $11795 = $x388;
                  $11796 = $11794 * $11795;
                  $11797 = $x390;
                  $11798 = -1.0 * $11797;
                  $11799 = $11796 + $11798;
                  $11800 = ((($4)) + 240|0);
                  $11801 = +HEAPF64[$11800>>3];
                  $11802 = ((($4)) + 360|0);
                  $11803 = +HEAPF64[$11802>>3];
                  $11804 = $11801 * $11803;
                  $11805 = $11799 + $11804;
                  $11806 = ((($evalcond188)) + 48|0);
                  HEAPF64[$11806>>3] = $11805;
                  $11807 = ((($4)) + 336|0);
                  $11808 = +HEAPF64[$11807>>3];
                  $11809 = -1.0 * $11808;
                  $11810 = $x388;
                  $11811 = $11809 * $11810;
                  $11812 = ((($4)) + 264|0);
                  $11813 = +HEAPF64[$11812>>3];
                  $11814 = ((($4)) + 360|0);
                  $11815 = +HEAPF64[$11814>>3];
                  $11816 = $11813 * $11815;
                  $11817 = $11811 + $11816;
                  $11818 = $x389;
                  $11819 = -1.0 * $11818;
                  $11820 = $11817 + $11819;
                  $11821 = ((($evalcond188)) + 56|0);
                  HEAPF64[$11821>>3] = $11820;
                  $11822 = +HEAPF64[$evalcond188>>3];
                  $11823 = (+__Z5IKabsd($11822));
                  $11824 = $11823 > 5.0000000000000004E-6;
                  if ($11824) {
                   break;
                  }
                  $11825 = ((($evalcond188)) + 8|0);
                  $11826 = +HEAPF64[$11825>>3];
                  $11827 = (+__Z5IKabsd($11826));
                  $11828 = $11827 > 5.0000000000000004E-6;
                  if ($11828) {
                   break;
                  }
                  $11829 = ((($evalcond188)) + 16|0);
                  $11830 = +HEAPF64[$11829>>3];
                  $11831 = (+__Z5IKabsd($11830));
                  $11832 = $11831 > 5.0000000000000004E-6;
                  if ($11832) {
                   break;
                  }
                  $11833 = ((($evalcond188)) + 24|0);
                  $11834 = +HEAPF64[$11833>>3];
                  $11835 = (+__Z5IKabsd($11834));
                  $11836 = $11835 > 5.0000000000000004E-6;
                  if ($11836) {
                   break;
                  }
                  $11837 = ((($evalcond188)) + 32|0);
                  $11838 = +HEAPF64[$11837>>3];
                  $11839 = (+__Z5IKabsd($11838));
                  $11840 = $11839 > 5.0000000000000004E-6;
                  if ($11840) {
                   break;
                  }
                  $11841 = ((($evalcond188)) + 40|0);
                  $11842 = +HEAPF64[$11841>>3];
                  $11843 = (+__Z5IKabsd($11842));
                  $11844 = $11843 > 5.0000000000000004E-6;
                  if ($11844) {
                   break;
                  }
                  $11845 = ((($evalcond188)) + 48|0);
                  $11846 = +HEAPF64[$11845>>3];
                  $11847 = (+__Z5IKabsd($11846));
                  $11848 = $11847 > 5.0000000000000004E-6;
                  if ($11848) {
                   break;
                  }
                  $11849 = ((($evalcond188)) + 56|0);
                  $11850 = +HEAPF64[$11849>>3];
                  $11851 = (+__Z5IKabsd($11850));
                  $11852 = $11851 > 5.0000000000000004E-6;
                  if ($11852) {
                   break;
                  }
                  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos189,6);
                  __THREW__ = 0;
                  $11853 = (invoke_iii(416,($vinfos189|0),0)|0);
                  $11854 = __THREW__; __THREW__ = 0;
                  $11855 = $11854&1;
                  if ($11855) {
                   label = 1365;
                   break L1;
                  }
                  $11856 = ((($11853)) + 17|0);
                  HEAP8[$11856>>0] = 1;
                  $11857 = +HEAPF64[$4>>3];
                  __THREW__ = 0;
                  $11858 = (invoke_iii(416,($vinfos189|0),0)|0);
                  $11859 = __THREW__; __THREW__ = 0;
                  $11860 = $11859&1;
                  if ($11860) {
                   label = 1365;
                   break L1;
                  }
                  $11861 = ((($11858)) + 8|0);
                  HEAPF64[$11861>>3] = $11857;
                  $11862 = ((($4)) + 536|0);
                  $11863 = HEAP8[$11862>>0]|0;
                  __THREW__ = 0;
                  $11864 = (invoke_iii(416,($vinfos189|0),0)|0);
                  $11865 = __THREW__; __THREW__ = 0;
                  $11866 = $11865&1;
                  if ($11866) {
                   label = 1365;
                   break L1;
                  }
                  $11867 = ((($11864)) + 19|0);
                  HEAP8[$11867>>0] = $11863;
                  $11868 = ((($4)) + 536|0);
                  $11869 = ((($11868)) + 1|0);
                  $11870 = HEAP8[$11869>>0]|0;
                  __THREW__ = 0;
                  $11871 = (invoke_iii(416,($vinfos189|0),0)|0);
                  $11872 = __THREW__; __THREW__ = 0;
                  $11873 = $11872&1;
                  if ($11873) {
                   label = 1365;
                   break L1;
                  }
                  $11874 = ((($11871)) + 19|0);
                  $11875 = ((($11874)) + 1|0);
                  HEAP8[$11875>>0] = $11870;
                  $11876 = ((($4)) + 538|0);
                  $11877 = HEAP8[$11876>>0]|0;
                  __THREW__ = 0;
                  $11878 = (invoke_iii(416,($vinfos189|0),0)|0);
                  $11879 = __THREW__; __THREW__ = 0;
                  $11880 = $11879&1;
                  if ($11880) {
                   label = 1365;
                   break L1;
                  }
                  $11881 = ((($11878)) + 18|0);
                  HEAP8[$11881>>0] = $11877;
                  __THREW__ = 0;
                  $11882 = (invoke_iii(416,($vinfos189|0),1)|0);
                  $11883 = __THREW__; __THREW__ = 0;
                  $11884 = $11883&1;
                  if ($11884) {
                   label = 1365;
                   break L1;
                  }
                  $11885 = ((($11882)) + 17|0);
                  HEAP8[$11885>>0] = 1;
                  $11886 = ((($4)) + 40|0);
                  $11887 = +HEAPF64[$11886>>3];
                  __THREW__ = 0;
                  $11888 = (invoke_iii(416,($vinfos189|0),1)|0);
                  $11889 = __THREW__; __THREW__ = 0;
                  $11890 = $11889&1;
                  if ($11890) {
                   label = 1365;
                   break L1;
                  }
                  $11891 = ((($11888)) + 8|0);
                  HEAPF64[$11891>>3] = $11887;
                  $11892 = ((($4)) + 539|0);
                  $11893 = HEAP8[$11892>>0]|0;
                  __THREW__ = 0;
                  $11894 = (invoke_iii(416,($vinfos189|0),1)|0);
                  $11895 = __THREW__; __THREW__ = 0;
                  $11896 = $11895&1;
                  if ($11896) {
                   label = 1365;
                   break L1;
                  }
                  $11897 = ((($11894)) + 19|0);
                  HEAP8[$11897>>0] = $11893;
                  $11898 = ((($4)) + 539|0);
                  $11899 = ((($11898)) + 1|0);
                  $11900 = HEAP8[$11899>>0]|0;
                  __THREW__ = 0;
                  $11901 = (invoke_iii(416,($vinfos189|0),1)|0);
                  $11902 = __THREW__; __THREW__ = 0;
                  $11903 = $11902&1;
                  if ($11903) {
                   label = 1365;
                   break L1;
                  }
                  $11904 = ((($11901)) + 19|0);
                  $11905 = ((($11904)) + 1|0);
                  HEAP8[$11905>>0] = $11900;
                  $11906 = ((($4)) + 541|0);
                  $11907 = HEAP8[$11906>>0]|0;
                  __THREW__ = 0;
                  $11908 = (invoke_iii(416,($vinfos189|0),1)|0);
                  $11909 = __THREW__; __THREW__ = 0;
                  $11910 = $11909&1;
                  if ($11910) {
                   label = 1365;
                   break L1;
                  }
                  $11911 = ((($11908)) + 18|0);
                  HEAP8[$11911>>0] = $11907;
                  __THREW__ = 0;
                  $11912 = (invoke_iii(416,($vinfos189|0),2)|0);
                  $11913 = __THREW__; __THREW__ = 0;
                  $11914 = $11913&1;
                  if ($11914) {
                   label = 1365;
                   break L1;
                  }
                  $11915 = ((($11912)) + 17|0);
                  HEAP8[$11915>>0] = 1;
                  $11916 = ((($4)) + 80|0);
                  $11917 = +HEAPF64[$11916>>3];
                  __THREW__ = 0;
                  $11918 = (invoke_iii(416,($vinfos189|0),2)|0);
                  $11919 = __THREW__; __THREW__ = 0;
                  $11920 = $11919&1;
                  if ($11920) {
                   label = 1365;
                   break L1;
                  }
                  $11921 = ((($11918)) + 8|0);
                  HEAPF64[$11921>>3] = $11917;
                  $11922 = ((($4)) + 542|0);
                  $11923 = HEAP8[$11922>>0]|0;
                  __THREW__ = 0;
                  $11924 = (invoke_iii(416,($vinfos189|0),2)|0);
                  $11925 = __THREW__; __THREW__ = 0;
                  $11926 = $11925&1;
                  if ($11926) {
                   label = 1365;
                   break L1;
                  }
                  $11927 = ((($11924)) + 19|0);
                  HEAP8[$11927>>0] = $11923;
                  $11928 = ((($4)) + 542|0);
                  $11929 = ((($11928)) + 1|0);
                  $11930 = HEAP8[$11929>>0]|0;
                  __THREW__ = 0;
                  $11931 = (invoke_iii(416,($vinfos189|0),2)|0);
                  $11932 = __THREW__; __THREW__ = 0;
                  $11933 = $11932&1;
                  if ($11933) {
                   label = 1365;
                   break L1;
                  }
                  $11934 = ((($11931)) + 19|0);
                  $11935 = ((($11934)) + 1|0);
                  HEAP8[$11935>>0] = $11930;
                  $11936 = ((($4)) + 544|0);
                  $11937 = HEAP8[$11936>>0]|0;
                  __THREW__ = 0;
                  $11938 = (invoke_iii(416,($vinfos189|0),2)|0);
                  $11939 = __THREW__; __THREW__ = 0;
                  $11940 = $11939&1;
                  if ($11940) {
                   label = 1365;
                   break L1;
                  }
                  $11941 = ((($11938)) + 18|0);
                  HEAP8[$11941>>0] = $11937;
                  __THREW__ = 0;
                  $11942 = (invoke_iii(416,($vinfos189|0),3)|0);
                  $11943 = __THREW__; __THREW__ = 0;
                  $11944 = $11943&1;
                  if ($11944) {
                   label = 1365;
                   break L1;
                  }
                  $11945 = ((($11942)) + 17|0);
                  HEAP8[$11945>>0] = 1;
                  $11946 = ((($4)) + 120|0);
                  $11947 = +HEAPF64[$11946>>3];
                  __THREW__ = 0;
                  $11948 = (invoke_iii(416,($vinfos189|0),3)|0);
                  $11949 = __THREW__; __THREW__ = 0;
                  $11950 = $11949&1;
                  if ($11950) {
                   label = 1365;
                   break L1;
                  }
                  $11951 = ((($11948)) + 8|0);
                  HEAPF64[$11951>>3] = $11947;
                  $11952 = ((($4)) + 545|0);
                  $11953 = HEAP8[$11952>>0]|0;
                  __THREW__ = 0;
                  $11954 = (invoke_iii(416,($vinfos189|0),3)|0);
                  $11955 = __THREW__; __THREW__ = 0;
                  $11956 = $11955&1;
                  if ($11956) {
                   label = 1365;
                   break L1;
                  }
                  $11957 = ((($11954)) + 19|0);
                  HEAP8[$11957>>0] = $11953;
                  $11958 = ((($4)) + 545|0);
                  $11959 = ((($11958)) + 1|0);
                  $11960 = HEAP8[$11959>>0]|0;
                  __THREW__ = 0;
                  $11961 = (invoke_iii(416,($vinfos189|0),3)|0);
                  $11962 = __THREW__; __THREW__ = 0;
                  $11963 = $11962&1;
                  if ($11963) {
                   label = 1365;
                   break L1;
                  }
                  $11964 = ((($11961)) + 19|0);
                  $11965 = ((($11964)) + 1|0);
                  HEAP8[$11965>>0] = $11960;
                  $11966 = ((($4)) + 547|0);
                  $11967 = HEAP8[$11966>>0]|0;
                  __THREW__ = 0;
                  $11968 = (invoke_iii(416,($vinfos189|0),3)|0);
                  $11969 = __THREW__; __THREW__ = 0;
                  $11970 = $11969&1;
                  if ($11970) {
                   label = 1365;
                   break L1;
                  }
                  $11971 = ((($11968)) + 18|0);
                  HEAP8[$11971>>0] = $11967;
                  __THREW__ = 0;
                  $11972 = (invoke_iii(416,($vinfos189|0),4)|0);
                  $11973 = __THREW__; __THREW__ = 0;
                  $11974 = $11973&1;
                  if ($11974) {
                   label = 1365;
                   break L1;
                  }
                  $11975 = ((($11972)) + 17|0);
                  HEAP8[$11975>>0] = 1;
                  $11976 = ((($4)) + 160|0);
                  $11977 = +HEAPF64[$11976>>3];
                  __THREW__ = 0;
                  $11978 = (invoke_iii(416,($vinfos189|0),4)|0);
                  $11979 = __THREW__; __THREW__ = 0;
                  $11980 = $11979&1;
                  if ($11980) {
                   label = 1365;
                   break L1;
                  }
                  $11981 = ((($11978)) + 8|0);
                  HEAPF64[$11981>>3] = $11977;
                  $11982 = ((($4)) + 548|0);
                  $11983 = HEAP8[$11982>>0]|0;
                  __THREW__ = 0;
                  $11984 = (invoke_iii(416,($vinfos189|0),4)|0);
                  $11985 = __THREW__; __THREW__ = 0;
                  $11986 = $11985&1;
                  if ($11986) {
                   label = 1365;
                   break L1;
                  }
                  $11987 = ((($11984)) + 19|0);
                  HEAP8[$11987>>0] = $11983;
                  $11988 = ((($4)) + 548|0);
                  $11989 = ((($11988)) + 1|0);
                  $11990 = HEAP8[$11989>>0]|0;
                  __THREW__ = 0;
                  $11991 = (invoke_iii(416,($vinfos189|0),4)|0);
                  $11992 = __THREW__; __THREW__ = 0;
                  $11993 = $11992&1;
                  if ($11993) {
                   label = 1365;
                   break L1;
                  }
                  $11994 = ((($11991)) + 19|0);
                  $11995 = ((($11994)) + 1|0);
                  HEAP8[$11995>>0] = $11990;
                  $11996 = ((($4)) + 550|0);
                  $11997 = HEAP8[$11996>>0]|0;
                  __THREW__ = 0;
                  $11998 = (invoke_iii(416,($vinfos189|0),4)|0);
                  $11999 = __THREW__; __THREW__ = 0;
                  $12000 = $11999&1;
                  if ($12000) {
                   label = 1365;
                   break L1;
                  }
                  $12001 = ((($11998)) + 18|0);
                  HEAP8[$12001>>0] = $11997;
                  __THREW__ = 0;
                  $12002 = (invoke_iii(416,($vinfos189|0),5)|0);
                  $12003 = __THREW__; __THREW__ = 0;
                  $12004 = $12003&1;
                  if ($12004) {
                   label = 1365;
                   break L1;
                  }
                  $12005 = ((($12002)) + 17|0);
                  HEAP8[$12005>>0] = 1;
                  $12006 = ((($4)) + 200|0);
                  $12007 = +HEAPF64[$12006>>3];
                  __THREW__ = 0;
                  $12008 = (invoke_iii(416,($vinfos189|0),5)|0);
                  $12009 = __THREW__; __THREW__ = 0;
                  $12010 = $12009&1;
                  if ($12010) {
                   label = 1365;
                   break L1;
                  }
                  $12011 = ((($12008)) + 8|0);
                  HEAPF64[$12011>>3] = $12007;
                  $12012 = ((($4)) + 551|0);
                  $12013 = HEAP8[$12012>>0]|0;
                  __THREW__ = 0;
                  $12014 = (invoke_iii(416,($vinfos189|0),5)|0);
                  $12015 = __THREW__; __THREW__ = 0;
                  $12016 = $12015&1;
                  if ($12016) {
                   label = 1365;
                   break L1;
                  }
                  $12017 = ((($12014)) + 19|0);
                  HEAP8[$12017>>0] = $12013;
                  $12018 = ((($4)) + 551|0);
                  $12019 = ((($12018)) + 1|0);
                  $12020 = HEAP8[$12019>>0]|0;
                  __THREW__ = 0;
                  $12021 = (invoke_iii(416,($vinfos189|0),5)|0);
                  $12022 = __THREW__; __THREW__ = 0;
                  $12023 = $12022&1;
                  if ($12023) {
                   label = 1365;
                   break L1;
                  }
                  $12024 = ((($12021)) + 19|0);
                  $12025 = ((($12024)) + 1|0);
                  HEAP8[$12025>>0] = $12020;
                  $12026 = ((($4)) + 553|0);
                  $12027 = HEAP8[$12026>>0]|0;
                  __THREW__ = 0;
                  $12028 = (invoke_iii(416,($vinfos189|0),5)|0);
                  $12029 = __THREW__; __THREW__ = 0;
                  $12030 = $12029&1;
                  if ($12030) {
                   label = 1365;
                   break L1;
                  }
                  $12031 = ((($12028)) + 18|0);
                  HEAP8[$12031>>0] = $12027;
                  __THREW__ = 0;
                  invoke_vii(417,($vfree190|0),0);
                  $12032 = __THREW__; __THREW__ = 0;
                  $12033 = $12032&1;
                  if ($12033) {
                   label = 1365;
                   break L1;
                  }
                  $12034 = $1;
                  $12035 = HEAP32[$12034>>2]|0;
                  $12036 = ((($12035)) + 8|0);
                  $12037 = HEAP32[$12036>>2]|0;
                  __THREW__ = 0;
                  (invoke_iiii($12037|0,($12034|0),($vinfos189|0),($vfree190|0))|0);
                  $12038 = __THREW__; __THREW__ = 0;
                  $12039 = $12038&1;
                  if ($12039) {
                   label = 1366;
                   break L1;
                  }
                  __THREW__ = 0;
                  invoke_vi(371,($vfree190|0));
                  $12040 = __THREW__; __THREW__ = 0;
                  $12041 = $12040&1;
                  if ($12041) {
                   label = 1365;
                   break L1;
                  }
                  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos189);
                 }
                } while(0);
                $12042 = $ij5186;
                $12043 = (($12042) + 1)|0;
                $ij5186 = $12043;
               }
              }
             } while(0);
             $12052 = $bgotonextstatement181;
             $12053 = $12052&1;
             if (!($12053)) {
              break;
             }
             $bgotonextstatement191 = 1;
             $12054 = ((($4)) + 288|0);
             $12055 = +HEAPF64[$12054>>3];
             $12056 = -1.0 * $12055;
             $12057 = ((($4)) + 136|0);
             $12058 = +HEAPF64[$12057>>3];
             $12059 = $12056 * $12058;
             $12060 = ((($4)) + 128|0);
             $12061 = +HEAPF64[$12060>>3];
             $12062 = ((($4)) + 360|0);
             $12063 = +HEAPF64[$12062>>3];
             $12064 = $12061 * $12063;
             $12065 = $12059 + $12064;
             $x391 = $12065;
             $12066 = ((($4)) + 360|0);
             $12067 = +HEAPF64[$12066>>3];
             $12068 = ((($4)) + 136|0);
             $12069 = +HEAPF64[$12068>>3];
             $12070 = $12067 * $12069;
             $12071 = ((($4)) + 128|0);
             $12072 = +HEAPF64[$12071>>3];
             $12073 = ((($4)) + 288|0);
             $12074 = +HEAPF64[$12073>>3];
             $12075 = $12072 * $12074;
             $12076 = $12070 + $12075;
             $x392 = $12076;
             $12077 = ((($4)) + 160|0);
             $12078 = +HEAPF64[$12077>>3];
             $12079 = (+__Z5IKabsd($12078));
             $12080 = 3.14159265358979 + $12079;
             $12081 = (+__Z6IKfmoddd($12080,6.2831853071795898));
             $12082 = -3.14159265358979 + $12081;
             HEAPF64[$evalcond150>>3] = $12082;
             $12083 = ((($4)) + 432|0);
             $12084 = +HEAPF64[$12083>>3];
             $12085 = -1.0 + $12084;
             $12086 = ((($evalcond150)) + 8|0);
             HEAPF64[$12086>>3] = $12085;
             $12087 = ((($4)) + 384|0);
             $12088 = +HEAPF64[$12087>>3];
             $12089 = ((($evalcond150)) + 16|0);
             HEAPF64[$12089>>3] = $12088;
             $12090 = ((($4)) + 288|0);
             $12091 = +HEAPF64[$12090>>3];
             $12092 = ((($evalcond150)) + 24|0);
             HEAPF64[$12092>>3] = $12091;
             $12093 = ((($4)) + 360|0);
             $12094 = +HEAPF64[$12093>>3];
             $12095 = ((($evalcond150)) + 32|0);
             HEAPF64[$12095>>3] = $12094;
             $12096 = ((($4)) + 408|0);
             $12097 = +HEAPF64[$12096>>3];
             $12098 = ((($evalcond150)) + 40|0);
             HEAPF64[$12098>>3] = $12097;
             $12099 = $x391;
             $12100 = ((($evalcond150)) + 48|0);
             HEAPF64[$12100>>3] = $12099;
             $12101 = $x391;
             $12102 = ((($evalcond150)) + 56|0);
             HEAPF64[$12102>>3] = $12101;
             $12103 = $x392;
             $12104 = ((($evalcond150)) + 64|0);
             HEAPF64[$12104>>3] = $12103;
             $12105 = $x392;
             $12106 = ((($evalcond150)) + 72|0);
             HEAPF64[$12106>>3] = $12105;
             $12107 = +HEAPF64[$evalcond150>>3];
             $12108 = (+__Z5IKabsd($12107));
             $12109 = $12108 < 9.9999999999999995E-7;
             L603: do {
              if ($12109) {
               $12110 = ((($evalcond150)) + 8|0);
               $12111 = +HEAPF64[$12110>>3];
               $12112 = (+__Z5IKabsd($12111));
               $12113 = $12112 < 9.9999999999999995E-7;
               if (!($12113)) {
                break;
               }
               $12114 = ((($evalcond150)) + 16|0);
               $12115 = +HEAPF64[$12114>>3];
               $12116 = (+__Z5IKabsd($12115));
               $12117 = $12116 < 9.9999999999999995E-7;
               if (!($12117)) {
                break;
               }
               $12118 = ((($evalcond150)) + 24|0);
               $12119 = +HEAPF64[$12118>>3];
               $12120 = (+__Z5IKabsd($12119));
               $12121 = $12120 < 9.9999999999999995E-7;
               if (!($12121)) {
                break;
               }
               $12122 = ((($evalcond150)) + 32|0);
               $12123 = +HEAPF64[$12122>>3];
               $12124 = (+__Z5IKabsd($12123));
               $12125 = $12124 < 9.9999999999999995E-7;
               if (!($12125)) {
                break;
               }
               $12126 = ((($evalcond150)) + 40|0);
               $12127 = +HEAPF64[$12126>>3];
               $12128 = (+__Z5IKabsd($12127));
               $12129 = $12128 < 9.9999999999999995E-7;
               if (!($12129)) {
                break;
               }
               $12130 = ((($evalcond150)) + 48|0);
               $12131 = +HEAPF64[$12130>>3];
               $12132 = (+__Z5IKabsd($12131));
               $12133 = $12132 < 9.9999999999999995E-7;
               if (!($12133)) {
                break;
               }
               $12134 = ((($evalcond150)) + 56|0);
               $12135 = +HEAPF64[$12134>>3];
               $12136 = (+__Z5IKabsd($12135));
               $12137 = $12136 < 9.9999999999999995E-7;
               if (!($12137)) {
                break;
               }
               $12138 = ((($evalcond150)) + 64|0);
               $12139 = +HEAPF64[$12138>>3];
               $12140 = (+__Z5IKabsd($12139));
               $12141 = $12140 < 9.9999999999999995E-7;
               if (!($12141)) {
                break;
               }
               $12142 = ((($evalcond150)) + 72|0);
               $12143 = +HEAPF64[$12142>>3];
               $12144 = (+__Z5IKabsd($12143));
               $12145 = $12144 < 9.9999999999999995E-7;
               if (!($12145)) {
                break;
               }
               $bgotonextstatement191 = 0;
               ;HEAP8[$j5valid195>>0]=0|0;
               $12146 = ((($4)) + 553|0);
               HEAP8[$12146>>0] = 1;
               $12147 = ((($4)) + 264|0);
               $12148 = +HEAPF64[$12147>>3];
               $12149 = 1.0 * $12148;
               $x393 = $12149;
               $12150 = ((($4)) + 128|0);
               $12151 = +HEAPF64[$12150>>3];
               $12152 = -1.0 * $12151;
               $12153 = $x393;
               $12154 = $12152 * $12153;
               $12155 = ((($4)) + 240|0);
               $12156 = +HEAPF64[$12155>>3];
               $12157 = -1.0 * $12156;
               $12158 = ((($4)) + 136|0);
               $12159 = +HEAPF64[$12158>>3];
               $12160 = $12157 * $12159;
               $12161 = $12154 + $12160;
               $12162 = (+__Z5IKabsd($12161));
               $12163 = $12162 < 1.9999999999999999E-6;
               do {
                if ($12163) {
                 $12164 = ((($4)) + 136|0);
                 $12165 = +HEAPF64[$12164>>3];
                 $12166 = -1.0 * $12165;
                 $12167 = $x393;
                 $12168 = $12166 * $12167;
                 $12169 = ((($4)) + 128|0);
                 $12170 = +HEAPF64[$12169>>3];
                 $12171 = ((($4)) + 240|0);
                 $12172 = +HEAPF64[$12171>>3];
                 $12173 = $12170 * $12172;
                 $12174 = $12168 + $12173;
                 $12175 = (+__Z5IKabsd($12174));
                 $12176 = $12175 < 1.9999999999999999E-6;
                 if (!($12176)) {
                  break;
                 }
                 $12177 = ((($4)) + 128|0);
                 $12178 = +HEAPF64[$12177>>3];
                 $12179 = -1.0 * $12178;
                 $12180 = $x393;
                 $12181 = $12179 * $12180;
                 $12182 = ((($4)) + 240|0);
                 $12183 = +HEAPF64[$12182>>3];
                 $12184 = -1.0 * $12183;
                 $12185 = ((($4)) + 136|0);
                 $12186 = +HEAPF64[$12185>>3];
                 $12187 = $12184 * $12186;
                 $12188 = $12181 + $12187;
                 $12189 = (+__Z5IKsqrd($12188));
                 $12190 = ((($4)) + 136|0);
                 $12191 = +HEAPF64[$12190>>3];
                 $12192 = -1.0 * $12191;
                 $12193 = $x393;
                 $12194 = $12192 * $12193;
                 $12195 = ((($4)) + 128|0);
                 $12196 = +HEAPF64[$12195>>3];
                 $12197 = ((($4)) + 240|0);
                 $12198 = +HEAPF64[$12197>>3];
                 $12199 = $12196 * $12198;
                 $12200 = $12194 + $12199;
                 $12201 = (+__Z5IKsqrd($12200));
                 $12202 = $12189 + $12201;
                 $12203 = $12202 - 1.0;
                 $12204 = (+__Z5IKabsd($12203));
                 $12205 = $12204 <= 1.9999999999999999E-6;
                 if ($12205) {
                  break L603;
                 }
                }
               } while(0);
               $12206 = ((($4)) + 128|0);
               $12207 = +HEAPF64[$12206>>3];
               $12208 = -1.0 * $12207;
               $12209 = $x393;
               $12210 = $12208 * $12209;
               $12211 = ((($4)) + 240|0);
               $12212 = +HEAPF64[$12211>>3];
               $12213 = -1.0 * $12212;
               $12214 = ((($4)) + 136|0);
               $12215 = +HEAPF64[$12214>>3];
               $12216 = $12213 * $12215;
               $12217 = $12210 + $12216;
               $12218 = ((($4)) + 136|0);
               $12219 = +HEAPF64[$12218>>3];
               $12220 = -1.0 * $12219;
               $12221 = $x393;
               $12222 = $12220 * $12221;
               $12223 = ((($4)) + 128|0);
               $12224 = +HEAPF64[$12223>>3];
               $12225 = ((($4)) + 240|0);
               $12226 = +HEAPF64[$12225>>3];
               $12227 = $12224 * $12226;
               $12228 = $12222 + $12227;
               $12229 = (+__Z7IKatan2dd($12217,$12228));
               HEAPF64[$j5array192>>3] = $12229;
               $12230 = +HEAPF64[$j5array192>>3];
               $12231 = (+__Z5IKsind($12230));
               HEAPF64[$sj5array194>>3] = $12231;
               $12232 = +HEAPF64[$j5array192>>3];
               $12233 = (+__Z5IKcosd($12232));
               HEAPF64[$cj5array193>>3] = $12233;
               $12234 = +HEAPF64[$j5array192>>3];
               $12235 = $12234 > 3.14159265358979;
               $12236 = +HEAPF64[$j5array192>>3];
               do {
                if ($12235) {
                 $12237 = $12236 - 6.2831853071795898;
                 HEAPF64[$j5array192>>3] = $12237;
                } else {
                 $12238 = $12236 < -3.14159265358979;
                 if (!($12238)) {
                  break;
                 }
                 $12239 = +HEAPF64[$j5array192>>3];
                 $12240 = $12239 + 6.2831853071795898;
                 HEAPF64[$j5array192>>3] = $12240;
                }
               } while(0);
               HEAP8[$j5valid195>>0] = 1;
               $ij5196 = 0;
               while(1) {
                $12241 = $ij5196;
                $12242 = ($12241|0)<(1);
                if (!($12242)) {
                 break L603;
                }
                $12243 = $ij5196;
                $12244 = (($j5valid195) + ($12243)|0);
                $12245 = HEAP8[$12244>>0]|0;
                $12246 = $12245&1;
                do {
                 if ($12246) {
                  $12247 = $ij5196;
                  $12248 = $12247&255;
                  $12249 = ((($4)) + 551|0);
                  HEAP8[$12249>>0] = $12248;
                  $12250 = ((($4)) + 551|0);
                  $12251 = ((($12250)) + 1|0);
                  HEAP8[$12251>>0] = -1;
                  $12252 = $ij5196;
                  $12253 = (($12252) + 1)|0;
                  $iij5197 = $12253;
                  L628: while(1) {
                   $12254 = $iij5197;
                   $12255 = ($12254|0)<(1);
                   if (!($12255)) {
                    break;
                   }
                   $12256 = $iij5197;
                   $12257 = (($j5valid195) + ($12256)|0);
                   $12258 = HEAP8[$12257>>0]|0;
                   $12259 = $12258&1;
                   do {
                    if ($12259) {
                     $12260 = $ij5196;
                     $12261 = (($cj5array193) + ($12260<<3)|0);
                     $12262 = +HEAPF64[$12261>>3];
                     $12263 = $iij5197;
                     $12264 = (($cj5array193) + ($12263<<3)|0);
                     $12265 = +HEAPF64[$12264>>3];
                     $12266 = $12262 - $12265;
                     $12267 = (+__Z5IKabsd($12266));
                     $12268 = $12267 < 9.9999999999999995E-7;
                     if (!($12268)) {
                      break;
                     }
                     $12269 = $ij5196;
                     $12270 = (($sj5array194) + ($12269<<3)|0);
                     $12271 = +HEAPF64[$12270>>3];
                     $12272 = $iij5197;
                     $12273 = (($sj5array194) + ($12272<<3)|0);
                     $12274 = +HEAPF64[$12273>>3];
                     $12275 = $12271 - $12274;
                     $12276 = (+__Z5IKabsd($12275));
                     $12277 = $12276 < 9.9999999999999995E-7;
                     if ($12277) {
                      label = 1394;
                      break L628;
                     }
                    }
                   } while(0);
                   $12284 = $iij5197;
                   $12285 = (($12284) + 1)|0;
                   $iij5197 = $12285;
                  }
                  if ((label|0) == 1394) {
                   label = 0;
                   $12278 = $iij5197;
                   $12279 = (($j5valid195) + ($12278)|0);
                   HEAP8[$12279>>0] = 0;
                   $12280 = $iij5197;
                   $12281 = $12280&255;
                   $12282 = ((($4)) + 551|0);
                   $12283 = ((($12282)) + 1|0);
                   HEAP8[$12283>>0] = $12281;
                  }
                  $12286 = $ij5196;
                  $12287 = (($j5array192) + ($12286<<3)|0);
                  $12288 = +HEAPF64[$12287>>3];
                  $12289 = ((($4)) + 200|0);
                  HEAPF64[$12289>>3] = $12288;
                  $12290 = $ij5196;
                  $12291 = (($cj5array193) + ($12290<<3)|0);
                  $12292 = +HEAPF64[$12291>>3];
                  $12293 = ((($4)) + 208|0);
                  HEAPF64[$12293>>3] = $12292;
                  $12294 = $ij5196;
                  $12295 = (($sj5array194) + ($12294<<3)|0);
                  $12296 = +HEAPF64[$12295>>3];
                  $12297 = ((($4)) + 216|0);
                  HEAPF64[$12297>>3] = $12296;
                  $12298 = ((($4)) + 200|0);
                  $12299 = +HEAPF64[$12298>>3];
                  $12300 = (+__Z5IKsind($12299));
                  $x394 = $12300;
                  $12301 = ((($4)) + 200|0);
                  $12302 = +HEAPF64[$12301>>3];
                  $12303 = (+__Z5IKcosd($12302));
                  $x395 = $12303;
                  $12304 = ((($4)) + 136|0);
                  $12305 = +HEAPF64[$12304>>3];
                  $12306 = 1.0 * $12305;
                  $x396 = $12306;
                  $12307 = $x395;
                  $12308 = 1.0 * $12307;
                  $x397 = $12308;
                  $12309 = ((($4)) + 136|0);
                  $12310 = +HEAPF64[$12309>>3];
                  $12311 = $x394;
                  $12312 = $12310 * $12311;
                  $x398 = $12312;
                  $12313 = $x394;
                  $12314 = 1.0 * $12313;
                  $x399 = $12314;
                  $12315 = ((($4)) + 128|0);
                  $12316 = +HEAPF64[$12315>>3];
                  $12317 = $x397;
                  $12318 = $12316 * $12317;
                  $x400 = $12318;
                  $12319 = ((($4)) + 336|0);
                  $12320 = +HEAPF64[$12319>>3];
                  $12321 = ((($4)) + 136|0);
                  $12322 = +HEAPF64[$12321>>3];
                  $12323 = $12320 * $12322;
                  $12324 = $x394;
                  $12325 = $12323 + $12324;
                  $12326 = ((($4)) + 128|0);
                  $12327 = +HEAPF64[$12326>>3];
                  $12328 = ((($4)) + 264|0);
                  $12329 = +HEAPF64[$12328>>3];
                  $12330 = $12327 * $12329;
                  $12331 = $12325 + $12330;
                  HEAPF64[$evalcond198>>3] = $12331;
                  $12332 = ((($4)) + 136|0);
                  $12333 = +HEAPF64[$12332>>3];
                  $12334 = $x395;
                  $12335 = $12333 * $12334;
                  $12336 = ((($4)) + 128|0);
                  $12337 = +HEAPF64[$12336>>3];
                  $12338 = $x394;
                  $12339 = $12337 * $12338;
                  $12340 = $12335 + $12339;
                  $12341 = ((($4)) + 264|0);
                  $12342 = +HEAPF64[$12341>>3];
                  $12343 = $12340 + $12342;
                  $12344 = ((($evalcond198)) + 8|0);
                  HEAPF64[$12344>>3] = $12343;
                  $12345 = $x397;
                  $12346 = -1.0 * $12345;
                  $12347 = ((($4)) + 312|0);
                  $12348 = +HEAPF64[$12347>>3];
                  $12349 = ((($4)) + 136|0);
                  $12350 = +HEAPF64[$12349>>3];
                  $12351 = $12348 * $12350;
                  $12352 = $12346 + $12351;
                  $12353 = ((($4)) + 128|0);
                  $12354 = +HEAPF64[$12353>>3];
                  $12355 = ((($4)) + 240|0);
                  $12356 = +HEAPF64[$12355>>3];
                  $12357 = $12354 * $12356;
                  $12358 = $12352 + $12357;
                  $12359 = ((($evalcond198)) + 16|0);
                  HEAPF64[$12359>>3] = $12358;
                  $12360 = $x399;
                  $12361 = -1.0 * $12360;
                  $12362 = ((($4)) + 128|0);
                  $12363 = +HEAPF64[$12362>>3];
                  $12364 = ((($4)) + 312|0);
                  $12365 = +HEAPF64[$12364>>3];
                  $12366 = $12363 * $12365;
                  $12367 = $12361 + $12366;
                  $12368 = ((($4)) + 240|0);
                  $12369 = +HEAPF64[$12368>>3];
                  $12370 = -1.0 * $12369;
                  $12371 = $x396;
                  $12372 = $12370 * $12371;
                  $12373 = $12367 + $12372;
                  $12374 = ((($evalcond198)) + 24|0);
                  HEAPF64[$12374>>3] = $12373;
                  $12375 = ((($4)) + 264|0);
                  $12376 = +HEAPF64[$12375>>3];
                  $12377 = -1.0 * $12376;
                  $12378 = $x396;
                  $12379 = $12377 * $12378;
                  $12380 = $x397;
                  $12381 = -1.0 * $12380;
                  $12382 = $12379 + $12381;
                  $12383 = ((($4)) + 128|0);
                  $12384 = +HEAPF64[$12383>>3];
                  $12385 = ((($4)) + 336|0);
                  $12386 = +HEAPF64[$12385>>3];
                  $12387 = $12384 * $12386;
                  $12388 = $12382 + $12387;
                  $12389 = ((($evalcond198)) + 32|0);
                  HEAPF64[$12389>>3] = $12388;
                  $12390 = $x398;
                  $12391 = ((($4)) + 240|0);
                  $12392 = +HEAPF64[$12391>>3];
                  $12393 = $12390 + $12392;
                  $12394 = $x400;
                  $12395 = -1.0 * $12394;
                  $12396 = $12393 + $12395;
                  $12397 = ((($evalcond198)) + 40|0);
                  HEAPF64[$12397>>3] = $12396;
                  $12398 = $x398;
                  $12399 = ((($4)) + 336|0);
                  $12400 = +HEAPF64[$12399>>3];
                  $12401 = $12398 + $12400;
                  $12402 = $x400;
                  $12403 = -1.0 * $12402;
                  $12404 = $12401 + $12403;
                  $12405 = ((($evalcond198)) + 48|0);
                  HEAPF64[$12405>>3] = $12404;
                  $12406 = $x395;
                  $12407 = -1.0 * $12406;
                  $12408 = $x396;
                  $12409 = $12407 * $12408;
                  $12410 = ((($4)) + 128|0);
                  $12411 = +HEAPF64[$12410>>3];
                  $12412 = -1.0 * $12411;
                  $12413 = $x399;
                  $12414 = $12412 * $12413;
                  $12415 = $12409 + $12414;
                  $12416 = ((($4)) + 312|0);
                  $12417 = +HEAPF64[$12416>>3];
                  $12418 = $12415 + $12417;
                  $12419 = ((($evalcond198)) + 56|0);
                  HEAPF64[$12419>>3] = $12418;
                  $12420 = +HEAPF64[$evalcond198>>3];
                  $12421 = (+__Z5IKabsd($12420));
                  $12422 = $12421 > 5.0000000000000004E-6;
                  if ($12422) {
                   break;
                  }
                  $12423 = ((($evalcond198)) + 8|0);
                  $12424 = +HEAPF64[$12423>>3];
                  $12425 = (+__Z5IKabsd($12424));
                  $12426 = $12425 > 5.0000000000000004E-6;
                  if ($12426) {
                   break;
                  }
                  $12427 = ((($evalcond198)) + 16|0);
                  $12428 = +HEAPF64[$12427>>3];
                  $12429 = (+__Z5IKabsd($12428));
                  $12430 = $12429 > 5.0000000000000004E-6;
                  if ($12430) {
                   break;
                  }
                  $12431 = ((($evalcond198)) + 24|0);
                  $12432 = +HEAPF64[$12431>>3];
                  $12433 = (+__Z5IKabsd($12432));
                  $12434 = $12433 > 5.0000000000000004E-6;
                  if ($12434) {
                   break;
                  }
                  $12435 = ((($evalcond198)) + 32|0);
                  $12436 = +HEAPF64[$12435>>3];
                  $12437 = (+__Z5IKabsd($12436));
                  $12438 = $12437 > 5.0000000000000004E-6;
                  if ($12438) {
                   break;
                  }
                  $12439 = ((($evalcond198)) + 40|0);
                  $12440 = +HEAPF64[$12439>>3];
                  $12441 = (+__Z5IKabsd($12440));
                  $12442 = $12441 > 5.0000000000000004E-6;
                  if ($12442) {
                   break;
                  }
                  $12443 = ((($evalcond198)) + 48|0);
                  $12444 = +HEAPF64[$12443>>3];
                  $12445 = (+__Z5IKabsd($12444));
                  $12446 = $12445 > 5.0000000000000004E-6;
                  if ($12446) {
                   break;
                  }
                  $12447 = ((($evalcond198)) + 56|0);
                  $12448 = +HEAPF64[$12447>>3];
                  $12449 = (+__Z5IKabsd($12448));
                  $12450 = $12449 > 5.0000000000000004E-6;
                  if ($12450) {
                   break;
                  }
                  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos199,6);
                  __THREW__ = 0;
                  $12451 = (invoke_iii(416,($vinfos199|0),0)|0);
                  $12452 = __THREW__; __THREW__ = 0;
                  $12453 = $12452&1;
                  if ($12453) {
                   label = 1439;
                   break L1;
                  }
                  $12454 = ((($12451)) + 17|0);
                  HEAP8[$12454>>0] = 1;
                  $12455 = +HEAPF64[$4>>3];
                  __THREW__ = 0;
                  $12456 = (invoke_iii(416,($vinfos199|0),0)|0);
                  $12457 = __THREW__; __THREW__ = 0;
                  $12458 = $12457&1;
                  if ($12458) {
                   label = 1439;
                   break L1;
                  }
                  $12459 = ((($12456)) + 8|0);
                  HEAPF64[$12459>>3] = $12455;
                  $12460 = ((($4)) + 536|0);
                  $12461 = HEAP8[$12460>>0]|0;
                  __THREW__ = 0;
                  $12462 = (invoke_iii(416,($vinfos199|0),0)|0);
                  $12463 = __THREW__; __THREW__ = 0;
                  $12464 = $12463&1;
                  if ($12464) {
                   label = 1439;
                   break L1;
                  }
                  $12465 = ((($12462)) + 19|0);
                  HEAP8[$12465>>0] = $12461;
                  $12466 = ((($4)) + 536|0);
                  $12467 = ((($12466)) + 1|0);
                  $12468 = HEAP8[$12467>>0]|0;
                  __THREW__ = 0;
                  $12469 = (invoke_iii(416,($vinfos199|0),0)|0);
                  $12470 = __THREW__; __THREW__ = 0;
                  $12471 = $12470&1;
                  if ($12471) {
                   label = 1439;
                   break L1;
                  }
                  $12472 = ((($12469)) + 19|0);
                  $12473 = ((($12472)) + 1|0);
                  HEAP8[$12473>>0] = $12468;
                  $12474 = ((($4)) + 538|0);
                  $12475 = HEAP8[$12474>>0]|0;
                  __THREW__ = 0;
                  $12476 = (invoke_iii(416,($vinfos199|0),0)|0);
                  $12477 = __THREW__; __THREW__ = 0;
                  $12478 = $12477&1;
                  if ($12478) {
                   label = 1439;
                   break L1;
                  }
                  $12479 = ((($12476)) + 18|0);
                  HEAP8[$12479>>0] = $12475;
                  __THREW__ = 0;
                  $12480 = (invoke_iii(416,($vinfos199|0),1)|0);
                  $12481 = __THREW__; __THREW__ = 0;
                  $12482 = $12481&1;
                  if ($12482) {
                   label = 1439;
                   break L1;
                  }
                  $12483 = ((($12480)) + 17|0);
                  HEAP8[$12483>>0] = 1;
                  $12484 = ((($4)) + 40|0);
                  $12485 = +HEAPF64[$12484>>3];
                  __THREW__ = 0;
                  $12486 = (invoke_iii(416,($vinfos199|0),1)|0);
                  $12487 = __THREW__; __THREW__ = 0;
                  $12488 = $12487&1;
                  if ($12488) {
                   label = 1439;
                   break L1;
                  }
                  $12489 = ((($12486)) + 8|0);
                  HEAPF64[$12489>>3] = $12485;
                  $12490 = ((($4)) + 539|0);
                  $12491 = HEAP8[$12490>>0]|0;
                  __THREW__ = 0;
                  $12492 = (invoke_iii(416,($vinfos199|0),1)|0);
                  $12493 = __THREW__; __THREW__ = 0;
                  $12494 = $12493&1;
                  if ($12494) {
                   label = 1439;
                   break L1;
                  }
                  $12495 = ((($12492)) + 19|0);
                  HEAP8[$12495>>0] = $12491;
                  $12496 = ((($4)) + 539|0);
                  $12497 = ((($12496)) + 1|0);
                  $12498 = HEAP8[$12497>>0]|0;
                  __THREW__ = 0;
                  $12499 = (invoke_iii(416,($vinfos199|0),1)|0);
                  $12500 = __THREW__; __THREW__ = 0;
                  $12501 = $12500&1;
                  if ($12501) {
                   label = 1439;
                   break L1;
                  }
                  $12502 = ((($12499)) + 19|0);
                  $12503 = ((($12502)) + 1|0);
                  HEAP8[$12503>>0] = $12498;
                  $12504 = ((($4)) + 541|0);
                  $12505 = HEAP8[$12504>>0]|0;
                  __THREW__ = 0;
                  $12506 = (invoke_iii(416,($vinfos199|0),1)|0);
                  $12507 = __THREW__; __THREW__ = 0;
                  $12508 = $12507&1;
                  if ($12508) {
                   label = 1439;
                   break L1;
                  }
                  $12509 = ((($12506)) + 18|0);
                  HEAP8[$12509>>0] = $12505;
                  __THREW__ = 0;
                  $12510 = (invoke_iii(416,($vinfos199|0),2)|0);
                  $12511 = __THREW__; __THREW__ = 0;
                  $12512 = $12511&1;
                  if ($12512) {
                   label = 1439;
                   break L1;
                  }
                  $12513 = ((($12510)) + 17|0);
                  HEAP8[$12513>>0] = 1;
                  $12514 = ((($4)) + 80|0);
                  $12515 = +HEAPF64[$12514>>3];
                  __THREW__ = 0;
                  $12516 = (invoke_iii(416,($vinfos199|0),2)|0);
                  $12517 = __THREW__; __THREW__ = 0;
                  $12518 = $12517&1;
                  if ($12518) {
                   label = 1439;
                   break L1;
                  }
                  $12519 = ((($12516)) + 8|0);
                  HEAPF64[$12519>>3] = $12515;
                  $12520 = ((($4)) + 542|0);
                  $12521 = HEAP8[$12520>>0]|0;
                  __THREW__ = 0;
                  $12522 = (invoke_iii(416,($vinfos199|0),2)|0);
                  $12523 = __THREW__; __THREW__ = 0;
                  $12524 = $12523&1;
                  if ($12524) {
                   label = 1439;
                   break L1;
                  }
                  $12525 = ((($12522)) + 19|0);
                  HEAP8[$12525>>0] = $12521;
                  $12526 = ((($4)) + 542|0);
                  $12527 = ((($12526)) + 1|0);
                  $12528 = HEAP8[$12527>>0]|0;
                  __THREW__ = 0;
                  $12529 = (invoke_iii(416,($vinfos199|0),2)|0);
                  $12530 = __THREW__; __THREW__ = 0;
                  $12531 = $12530&1;
                  if ($12531) {
                   label = 1439;
                   break L1;
                  }
                  $12532 = ((($12529)) + 19|0);
                  $12533 = ((($12532)) + 1|0);
                  HEAP8[$12533>>0] = $12528;
                  $12534 = ((($4)) + 544|0);
                  $12535 = HEAP8[$12534>>0]|0;
                  __THREW__ = 0;
                  $12536 = (invoke_iii(416,($vinfos199|0),2)|0);
                  $12537 = __THREW__; __THREW__ = 0;
                  $12538 = $12537&1;
                  if ($12538) {
                   label = 1439;
                   break L1;
                  }
                  $12539 = ((($12536)) + 18|0);
                  HEAP8[$12539>>0] = $12535;
                  __THREW__ = 0;
                  $12540 = (invoke_iii(416,($vinfos199|0),3)|0);
                  $12541 = __THREW__; __THREW__ = 0;
                  $12542 = $12541&1;
                  if ($12542) {
                   label = 1439;
                   break L1;
                  }
                  $12543 = ((($12540)) + 17|0);
                  HEAP8[$12543>>0] = 1;
                  $12544 = ((($4)) + 120|0);
                  $12545 = +HEAPF64[$12544>>3];
                  __THREW__ = 0;
                  $12546 = (invoke_iii(416,($vinfos199|0),3)|0);
                  $12547 = __THREW__; __THREW__ = 0;
                  $12548 = $12547&1;
                  if ($12548) {
                   label = 1439;
                   break L1;
                  }
                  $12549 = ((($12546)) + 8|0);
                  HEAPF64[$12549>>3] = $12545;
                  $12550 = ((($4)) + 545|0);
                  $12551 = HEAP8[$12550>>0]|0;
                  __THREW__ = 0;
                  $12552 = (invoke_iii(416,($vinfos199|0),3)|0);
                  $12553 = __THREW__; __THREW__ = 0;
                  $12554 = $12553&1;
                  if ($12554) {
                   label = 1439;
                   break L1;
                  }
                  $12555 = ((($12552)) + 19|0);
                  HEAP8[$12555>>0] = $12551;
                  $12556 = ((($4)) + 545|0);
                  $12557 = ((($12556)) + 1|0);
                  $12558 = HEAP8[$12557>>0]|0;
                  __THREW__ = 0;
                  $12559 = (invoke_iii(416,($vinfos199|0),3)|0);
                  $12560 = __THREW__; __THREW__ = 0;
                  $12561 = $12560&1;
                  if ($12561) {
                   label = 1439;
                   break L1;
                  }
                  $12562 = ((($12559)) + 19|0);
                  $12563 = ((($12562)) + 1|0);
                  HEAP8[$12563>>0] = $12558;
                  $12564 = ((($4)) + 547|0);
                  $12565 = HEAP8[$12564>>0]|0;
                  __THREW__ = 0;
                  $12566 = (invoke_iii(416,($vinfos199|0),3)|0);
                  $12567 = __THREW__; __THREW__ = 0;
                  $12568 = $12567&1;
                  if ($12568) {
                   label = 1439;
                   break L1;
                  }
                  $12569 = ((($12566)) + 18|0);
                  HEAP8[$12569>>0] = $12565;
                  __THREW__ = 0;
                  $12570 = (invoke_iii(416,($vinfos199|0),4)|0);
                  $12571 = __THREW__; __THREW__ = 0;
                  $12572 = $12571&1;
                  if ($12572) {
                   label = 1439;
                   break L1;
                  }
                  $12573 = ((($12570)) + 17|0);
                  HEAP8[$12573>>0] = 1;
                  $12574 = ((($4)) + 160|0);
                  $12575 = +HEAPF64[$12574>>3];
                  __THREW__ = 0;
                  $12576 = (invoke_iii(416,($vinfos199|0),4)|0);
                  $12577 = __THREW__; __THREW__ = 0;
                  $12578 = $12577&1;
                  if ($12578) {
                   label = 1439;
                   break L1;
                  }
                  $12579 = ((($12576)) + 8|0);
                  HEAPF64[$12579>>3] = $12575;
                  $12580 = ((($4)) + 548|0);
                  $12581 = HEAP8[$12580>>0]|0;
                  __THREW__ = 0;
                  $12582 = (invoke_iii(416,($vinfos199|0),4)|0);
                  $12583 = __THREW__; __THREW__ = 0;
                  $12584 = $12583&1;
                  if ($12584) {
                   label = 1439;
                   break L1;
                  }
                  $12585 = ((($12582)) + 19|0);
                  HEAP8[$12585>>0] = $12581;
                  $12586 = ((($4)) + 548|0);
                  $12587 = ((($12586)) + 1|0);
                  $12588 = HEAP8[$12587>>0]|0;
                  __THREW__ = 0;
                  $12589 = (invoke_iii(416,($vinfos199|0),4)|0);
                  $12590 = __THREW__; __THREW__ = 0;
                  $12591 = $12590&1;
                  if ($12591) {
                   label = 1439;
                   break L1;
                  }
                  $12592 = ((($12589)) + 19|0);
                  $12593 = ((($12592)) + 1|0);
                  HEAP8[$12593>>0] = $12588;
                  $12594 = ((($4)) + 550|0);
                  $12595 = HEAP8[$12594>>0]|0;
                  __THREW__ = 0;
                  $12596 = (invoke_iii(416,($vinfos199|0),4)|0);
                  $12597 = __THREW__; __THREW__ = 0;
                  $12598 = $12597&1;
                  if ($12598) {
                   label = 1439;
                   break L1;
                  }
                  $12599 = ((($12596)) + 18|0);
                  HEAP8[$12599>>0] = $12595;
                  __THREW__ = 0;
                  $12600 = (invoke_iii(416,($vinfos199|0),5)|0);
                  $12601 = __THREW__; __THREW__ = 0;
                  $12602 = $12601&1;
                  if ($12602) {
                   label = 1439;
                   break L1;
                  }
                  $12603 = ((($12600)) + 17|0);
                  HEAP8[$12603>>0] = 1;
                  $12604 = ((($4)) + 200|0);
                  $12605 = +HEAPF64[$12604>>3];
                  __THREW__ = 0;
                  $12606 = (invoke_iii(416,($vinfos199|0),5)|0);
                  $12607 = __THREW__; __THREW__ = 0;
                  $12608 = $12607&1;
                  if ($12608) {
                   label = 1439;
                   break L1;
                  }
                  $12609 = ((($12606)) + 8|0);
                  HEAPF64[$12609>>3] = $12605;
                  $12610 = ((($4)) + 551|0);
                  $12611 = HEAP8[$12610>>0]|0;
                  __THREW__ = 0;
                  $12612 = (invoke_iii(416,($vinfos199|0),5)|0);
                  $12613 = __THREW__; __THREW__ = 0;
                  $12614 = $12613&1;
                  if ($12614) {
                   label = 1439;
                   break L1;
                  }
                  $12615 = ((($12612)) + 19|0);
                  HEAP8[$12615>>0] = $12611;
                  $12616 = ((($4)) + 551|0);
                  $12617 = ((($12616)) + 1|0);
                  $12618 = HEAP8[$12617>>0]|0;
                  __THREW__ = 0;
                  $12619 = (invoke_iii(416,($vinfos199|0),5)|0);
                  $12620 = __THREW__; __THREW__ = 0;
                  $12621 = $12620&1;
                  if ($12621) {
                   label = 1439;
                   break L1;
                  }
                  $12622 = ((($12619)) + 19|0);
                  $12623 = ((($12622)) + 1|0);
                  HEAP8[$12623>>0] = $12618;
                  $12624 = ((($4)) + 553|0);
                  $12625 = HEAP8[$12624>>0]|0;
                  __THREW__ = 0;
                  $12626 = (invoke_iii(416,($vinfos199|0),5)|0);
                  $12627 = __THREW__; __THREW__ = 0;
                  $12628 = $12627&1;
                  if ($12628) {
                   label = 1439;
                   break L1;
                  }
                  $12629 = ((($12626)) + 18|0);
                  HEAP8[$12629>>0] = $12625;
                  __THREW__ = 0;
                  invoke_vii(417,($vfree200|0),0);
                  $12630 = __THREW__; __THREW__ = 0;
                  $12631 = $12630&1;
                  if ($12631) {
                   label = 1439;
                   break L1;
                  }
                  $12632 = $1;
                  $12633 = HEAP32[$12632>>2]|0;
                  $12634 = ((($12633)) + 8|0);
                  $12635 = HEAP32[$12634>>2]|0;
                  __THREW__ = 0;
                  (invoke_iiii($12635|0,($12632|0),($vinfos199|0),($vfree200|0))|0);
                  $12636 = __THREW__; __THREW__ = 0;
                  $12637 = $12636&1;
                  if ($12637) {
                   label = 1440;
                   break L1;
                  }
                  __THREW__ = 0;
                  invoke_vi(371,($vfree200|0));
                  $12638 = __THREW__; __THREW__ = 0;
                  $12639 = $12638&1;
                  if ($12639) {
                   label = 1439;
                   break L1;
                  }
                  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos199);
                 }
                } while(0);
                $12640 = $ij5196;
                $12641 = (($12640) + 1)|0;
                $ij5196 = $12641;
               }
              }
             } while(0);
             $12650 = $bgotonextstatement191;
             $12651 = $12650&1;
             if (!($12651)) {
              break;
             }
             $bgotonextstatement201 = 1;
             $12652 = ((($4)) + 360|0);
             $12653 = +HEAPF64[$12652>>3];
             $12654 = ((($4)) + 136|0);
             $12655 = +HEAPF64[$12654>>3];
             $12656 = $12653 * $12655;
             $x401 = $12656;
             $12657 = ((($4)) + 288|0);
             $12658 = +HEAPF64[$12657>>3];
             $12659 = 1.0 * $12658;
             $x402 = $12659;
             $12660 = ((($4)) + 128|0);
             $12661 = +HEAPF64[$12660>>3];
             $12662 = ((($4)) + 360|0);
             $12663 = +HEAPF64[$12662>>3];
             $12664 = $12661 * $12663;
             $12665 = ((($4)) + 136|0);
             $12666 = +HEAPF64[$12665>>3];
             $12667 = -1.0 * $12666;
             $12668 = $x402;
             $12669 = $12667 * $12668;
             $12670 = $12664 + $12669;
             $x403 = $12670;
             $12671 = ((($4)) + 160|0);
             $12672 = +HEAPF64[$12671>>3];
             $12673 = -3.14159265358979 + $12672;
             $12674 = (+__Z5IKabsd($12673));
             $12675 = 3.14159265358979 + $12674;
             $12676 = (+__Z6IKfmoddd($12675,6.2831853071795898));
             $12677 = -3.14159265358979 + $12676;
             HEAPF64[$evalcond150>>3] = $12677;
             $12678 = ((($4)) + 432|0);
             $12679 = +HEAPF64[$12678>>3];
             $12680 = 1.0 + $12679;
             $12681 = ((($evalcond150)) + 8|0);
             HEAPF64[$12681>>3] = $12680;
             $12682 = ((($4)) + 384|0);
             $12683 = +HEAPF64[$12682>>3];
             $12684 = ((($evalcond150)) + 16|0);
             HEAPF64[$12684>>3] = $12683;
             $12685 = ((($4)) + 288|0);
             $12686 = +HEAPF64[$12685>>3];
             $12687 = ((($evalcond150)) + 24|0);
             HEAPF64[$12687>>3] = $12686;
             $12688 = ((($4)) + 360|0);
             $12689 = +HEAPF64[$12688>>3];
             $12690 = ((($evalcond150)) + 32|0);
             HEAPF64[$12690>>3] = $12689;
             $12691 = ((($4)) + 408|0);
             $12692 = +HEAPF64[$12691>>3];
             $12693 = ((($evalcond150)) + 40|0);
             HEAPF64[$12693>>3] = $12692;
             $12694 = $x403;
             $12695 = ((($evalcond150)) + 48|0);
             HEAPF64[$12695>>3] = $12694;
             $12696 = $x403;
             $12697 = ((($evalcond150)) + 56|0);
             HEAPF64[$12697>>3] = $12696;
             $12698 = $x401;
             $12699 = ((($4)) + 128|0);
             $12700 = +HEAPF64[$12699>>3];
             $12701 = ((($4)) + 288|0);
             $12702 = +HEAPF64[$12701>>3];
             $12703 = $12700 * $12702;
             $12704 = $12698 + $12703;
             $12705 = ((($evalcond150)) + 64|0);
             HEAPF64[$12705>>3] = $12704;
             $12706 = ((($4)) + 128|0);
             $12707 = +HEAPF64[$12706>>3];
             $12708 = -1.0 * $12707;
             $12709 = $x402;
             $12710 = $12708 * $12709;
             $12711 = $x401;
             $12712 = -1.0 * $12711;
             $12713 = $12710 + $12712;
             $12714 = ((($evalcond150)) + 72|0);
             HEAPF64[$12714>>3] = $12713;
             $12715 = +HEAPF64[$evalcond150>>3];
             $12716 = (+__Z5IKabsd($12715));
             $12717 = $12716 < 9.9999999999999995E-7;
             L682: do {
              if ($12717) {
               $12718 = ((($evalcond150)) + 8|0);
               $12719 = +HEAPF64[$12718>>3];
               $12720 = (+__Z5IKabsd($12719));
               $12721 = $12720 < 9.9999999999999995E-7;
               if (!($12721)) {
                break;
               }
               $12722 = ((($evalcond150)) + 16|0);
               $12723 = +HEAPF64[$12722>>3];
               $12724 = (+__Z5IKabsd($12723));
               $12725 = $12724 < 9.9999999999999995E-7;
               if (!($12725)) {
                break;
               }
               $12726 = ((($evalcond150)) + 24|0);
               $12727 = +HEAPF64[$12726>>3];
               $12728 = (+__Z5IKabsd($12727));
               $12729 = $12728 < 9.9999999999999995E-7;
               if (!($12729)) {
                break;
               }
               $12730 = ((($evalcond150)) + 32|0);
               $12731 = +HEAPF64[$12730>>3];
               $12732 = (+__Z5IKabsd($12731));
               $12733 = $12732 < 9.9999999999999995E-7;
               if (!($12733)) {
                break;
               }
               $12734 = ((($evalcond150)) + 40|0);
               $12735 = +HEAPF64[$12734>>3];
               $12736 = (+__Z5IKabsd($12735));
               $12737 = $12736 < 9.9999999999999995E-7;
               if (!($12737)) {
                break;
               }
               $12738 = ((($evalcond150)) + 48|0);
               $12739 = +HEAPF64[$12738>>3];
               $12740 = (+__Z5IKabsd($12739));
               $12741 = $12740 < 9.9999999999999995E-7;
               if (!($12741)) {
                break;
               }
               $12742 = ((($evalcond150)) + 56|0);
               $12743 = +HEAPF64[$12742>>3];
               $12744 = (+__Z5IKabsd($12743));
               $12745 = $12744 < 9.9999999999999995E-7;
               if (!($12745)) {
                break;
               }
               $12746 = ((($evalcond150)) + 64|0);
               $12747 = +HEAPF64[$12746>>3];
               $12748 = (+__Z5IKabsd($12747));
               $12749 = $12748 < 9.9999999999999995E-7;
               if (!($12749)) {
                break;
               }
               $12750 = ((($evalcond150)) + 72|0);
               $12751 = +HEAPF64[$12750>>3];
               $12752 = (+__Z5IKabsd($12751));
               $12753 = $12752 < 9.9999999999999995E-7;
               if (!($12753)) {
                break;
               }
               $bgotonextstatement201 = 0;
               ;HEAP8[$j5valid205>>0]=0|0;
               $12754 = ((($4)) + 553|0);
               HEAP8[$12754>>0] = 1;
               $12755 = ((($4)) + 136|0);
               $12756 = +HEAPF64[$12755>>3];
               $12757 = 1.0 * $12756;
               $x404 = $12757;
               $12758 = ((($4)) + 240|0);
               $12759 = +HEAPF64[$12758>>3];
               $12760 = -1.0 * $12759;
               $12761 = $x404;
               $12762 = $12760 * $12761;
               $12763 = ((($4)) + 128|0);
               $12764 = +HEAPF64[$12763>>3];
               $12765 = ((($4)) + 264|0);
               $12766 = +HEAPF64[$12765>>3];
               $12767 = $12764 * $12766;
               $12768 = $12762 + $12767;
               $12769 = (+__Z5IKabsd($12768));
               $12770 = $12769 < 1.9999999999999999E-6;
               do {
                if ($12770) {
                 $12771 = ((($4)) + 128|0);
                 $12772 = +HEAPF64[$12771>>3];
                 $12773 = -1.0 * $12772;
                 $12774 = ((($4)) + 240|0);
                 $12775 = +HEAPF64[$12774>>3];
                 $12776 = $12773 * $12775;
                 $12777 = ((($4)) + 264|0);
                 $12778 = +HEAPF64[$12777>>3];
                 $12779 = -1.0 * $12778;
                 $12780 = $x404;
                 $12781 = $12779 * $12780;
                 $12782 = $12776 + $12781;
                 $12783 = (+__Z5IKabsd($12782));
                 $12784 = $12783 < 1.9999999999999999E-6;
                 if (!($12784)) {
                  break;
                 }
                 $12785 = ((($4)) + 240|0);
                 $12786 = +HEAPF64[$12785>>3];
                 $12787 = -1.0 * $12786;
                 $12788 = $x404;
                 $12789 = $12787 * $12788;
                 $12790 = ((($4)) + 128|0);
                 $12791 = +HEAPF64[$12790>>3];
                 $12792 = ((($4)) + 264|0);
                 $12793 = +HEAPF64[$12792>>3];
                 $12794 = $12791 * $12793;
                 $12795 = $12789 + $12794;
                 $12796 = (+__Z5IKsqrd($12795));
                 $12797 = ((($4)) + 128|0);
                 $12798 = +HEAPF64[$12797>>3];
                 $12799 = -1.0 * $12798;
                 $12800 = ((($4)) + 240|0);
                 $12801 = +HEAPF64[$12800>>3];
                 $12802 = $12799 * $12801;
                 $12803 = ((($4)) + 264|0);
                 $12804 = +HEAPF64[$12803>>3];
                 $12805 = -1.0 * $12804;
                 $12806 = $x404;
                 $12807 = $12805 * $12806;
                 $12808 = $12802 + $12807;
                 $12809 = (+__Z5IKsqrd($12808));
                 $12810 = $12796 + $12809;
                 $12811 = $12810 - 1.0;
                 $12812 = (+__Z5IKabsd($12811));
                 $12813 = $12812 <= 1.9999999999999999E-6;
                 if ($12813) {
                  break L682;
                 }
                }
               } while(0);
               $12814 = ((($4)) + 240|0);
               $12815 = +HEAPF64[$12814>>3];
               $12816 = -1.0 * $12815;
               $12817 = $x404;
               $12818 = $12816 * $12817;
               $12819 = ((($4)) + 128|0);
               $12820 = +HEAPF64[$12819>>3];
               $12821 = ((($4)) + 264|0);
               $12822 = +HEAPF64[$12821>>3];
               $12823 = $12820 * $12822;
               $12824 = $12818 + $12823;
               $12825 = ((($4)) + 128|0);
               $12826 = +HEAPF64[$12825>>3];
               $12827 = -1.0 * $12826;
               $12828 = ((($4)) + 240|0);
               $12829 = +HEAPF64[$12828>>3];
               $12830 = $12827 * $12829;
               $12831 = ((($4)) + 264|0);
               $12832 = +HEAPF64[$12831>>3];
               $12833 = -1.0 * $12832;
               $12834 = $x404;
               $12835 = $12833 * $12834;
               $12836 = $12830 + $12835;
               $12837 = (+__Z7IKatan2dd($12824,$12836));
               HEAPF64[$j5array202>>3] = $12837;
               $12838 = +HEAPF64[$j5array202>>3];
               $12839 = (+__Z5IKsind($12838));
               HEAPF64[$sj5array204>>3] = $12839;
               $12840 = +HEAPF64[$j5array202>>3];
               $12841 = (+__Z5IKcosd($12840));
               HEAPF64[$cj5array203>>3] = $12841;
               $12842 = +HEAPF64[$j5array202>>3];
               $12843 = $12842 > 3.14159265358979;
               $12844 = +HEAPF64[$j5array202>>3];
               do {
                if ($12843) {
                 $12845 = $12844 - 6.2831853071795898;
                 HEAPF64[$j5array202>>3] = $12845;
                } else {
                 $12846 = $12844 < -3.14159265358979;
                 if (!($12846)) {
                  break;
                 }
                 $12847 = +HEAPF64[$j5array202>>3];
                 $12848 = $12847 + 6.2831853071795898;
                 HEAPF64[$j5array202>>3] = $12848;
                }
               } while(0);
               HEAP8[$j5valid205>>0] = 1;
               $ij5206 = 0;
               while(1) {
                $12849 = $ij5206;
                $12850 = ($12849|0)<(1);
                if (!($12850)) {
                 break L682;
                }
                $12851 = $ij5206;
                $12852 = (($j5valid205) + ($12851)|0);
                $12853 = HEAP8[$12852>>0]|0;
                $12854 = $12853&1;
                do {
                 if ($12854) {
                  $12855 = $ij5206;
                  $12856 = $12855&255;
                  $12857 = ((($4)) + 551|0);
                  HEAP8[$12857>>0] = $12856;
                  $12858 = ((($4)) + 551|0);
                  $12859 = ((($12858)) + 1|0);
                  HEAP8[$12859>>0] = -1;
                  $12860 = $ij5206;
                  $12861 = (($12860) + 1)|0;
                  $iij5207 = $12861;
                  L707: while(1) {
                   $12862 = $iij5207;
                   $12863 = ($12862|0)<(1);
                   if (!($12863)) {
                    break;
                   }
                   $12864 = $iij5207;
                   $12865 = (($j5valid205) + ($12864)|0);
                   $12866 = HEAP8[$12865>>0]|0;
                   $12867 = $12866&1;
                   do {
                    if ($12867) {
                     $12868 = $ij5206;
                     $12869 = (($cj5array203) + ($12868<<3)|0);
                     $12870 = +HEAPF64[$12869>>3];
                     $12871 = $iij5207;
                     $12872 = (($cj5array203) + ($12871<<3)|0);
                     $12873 = +HEAPF64[$12872>>3];
                     $12874 = $12870 - $12873;
                     $12875 = (+__Z5IKabsd($12874));
                     $12876 = $12875 < 9.9999999999999995E-7;
                     if (!($12876)) {
                      break;
                     }
                     $12877 = $ij5206;
                     $12878 = (($sj5array204) + ($12877<<3)|0);
                     $12879 = +HEAPF64[$12878>>3];
                     $12880 = $iij5207;
                     $12881 = (($sj5array204) + ($12880<<3)|0);
                     $12882 = +HEAPF64[$12881>>3];
                     $12883 = $12879 - $12882;
                     $12884 = (+__Z5IKabsd($12883));
                     $12885 = $12884 < 9.9999999999999995E-7;
                     if ($12885) {
                      label = 1468;
                      break L707;
                     }
                    }
                   } while(0);
                   $12892 = $iij5207;
                   $12893 = (($12892) + 1)|0;
                   $iij5207 = $12893;
                  }
                  if ((label|0) == 1468) {
                   label = 0;
                   $12886 = $iij5207;
                   $12887 = (($j5valid205) + ($12886)|0);
                   HEAP8[$12887>>0] = 0;
                   $12888 = $iij5207;
                   $12889 = $12888&255;
                   $12890 = ((($4)) + 551|0);
                   $12891 = ((($12890)) + 1|0);
                   HEAP8[$12891>>0] = $12889;
                  }
                  $12894 = $ij5206;
                  $12895 = (($j5array202) + ($12894<<3)|0);
                  $12896 = +HEAPF64[$12895>>3];
                  $12897 = ((($4)) + 200|0);
                  HEAPF64[$12897>>3] = $12896;
                  $12898 = $ij5206;
                  $12899 = (($cj5array203) + ($12898<<3)|0);
                  $12900 = +HEAPF64[$12899>>3];
                  $12901 = ((($4)) + 208|0);
                  HEAPF64[$12901>>3] = $12900;
                  $12902 = $ij5206;
                  $12903 = (($sj5array204) + ($12902<<3)|0);
                  $12904 = +HEAPF64[$12903>>3];
                  $12905 = ((($4)) + 216|0);
                  HEAPF64[$12905>>3] = $12904;
                  $12906 = ((($4)) + 200|0);
                  $12907 = +HEAPF64[$12906>>3];
                  $12908 = (+__Z5IKsind($12907));
                  $x405 = $12908;
                  $12909 = ((($4)) + 200|0);
                  $12910 = +HEAPF64[$12909>>3];
                  $12911 = (+__Z5IKcosd($12910));
                  $x406 = $12911;
                  $12912 = ((($4)) + 136|0);
                  $12913 = +HEAPF64[$12912>>3];
                  $12914 = 1.0 * $12913;
                  $x407 = $12914;
                  $12915 = $x405;
                  $12916 = 1.0 * $12915;
                  $x408 = $12916;
                  $12917 = ((($4)) + 136|0);
                  $12918 = +HEAPF64[$12917>>3];
                  $12919 = $x406;
                  $12920 = $12918 * $12919;
                  $x409 = $12920;
                  $12921 = $x406;
                  $12922 = 1.0 * $12921;
                  $x410 = $12922;
                  $12923 = ((($4)) + 128|0);
                  $12924 = +HEAPF64[$12923>>3];
                  $12925 = $x408;
                  $12926 = $12924 * $12925;
                  $x411 = $12926;
                  $12927 = ((($4)) + 312|0);
                  $12928 = +HEAPF64[$12927>>3];
                  $12929 = ((($4)) + 136|0);
                  $12930 = +HEAPF64[$12929>>3];
                  $12931 = $12928 * $12930;
                  $12932 = $x406;
                  $12933 = $12931 + $12932;
                  $12934 = ((($4)) + 128|0);
                  $12935 = +HEAPF64[$12934>>3];
                  $12936 = ((($4)) + 240|0);
                  $12937 = +HEAPF64[$12936>>3];
                  $12938 = $12935 * $12937;
                  $12939 = $12933 + $12938;
                  HEAPF64[$evalcond208>>3] = $12939;
                  $12940 = ((($4)) + 336|0);
                  $12941 = +HEAPF64[$12940>>3];
                  $12942 = ((($4)) + 136|0);
                  $12943 = +HEAPF64[$12942>>3];
                  $12944 = $12941 * $12943;
                  $12945 = ((($4)) + 128|0);
                  $12946 = +HEAPF64[$12945>>3];
                  $12947 = ((($4)) + 264|0);
                  $12948 = +HEAPF64[$12947>>3];
                  $12949 = $12946 * $12948;
                  $12950 = $12944 + $12949;
                  $12951 = $x408;
                  $12952 = -1.0 * $12951;
                  $12953 = $12950 + $12952;
                  $12954 = ((($evalcond208)) + 8|0);
                  HEAPF64[$12954>>3] = $12953;
                  $12955 = ((($4)) + 136|0);
                  $12956 = +HEAPF64[$12955>>3];
                  $12957 = $x405;
                  $12958 = $12956 * $12957;
                  $12959 = ((($4)) + 240|0);
                  $12960 = +HEAPF64[$12959>>3];
                  $12961 = $12958 + $12960;
                  $12962 = ((($4)) + 128|0);
                  $12963 = +HEAPF64[$12962>>3];
                  $12964 = $x406;
                  $12965 = $12963 * $12964;
                  $12966 = $12961 + $12965;
                  $12967 = ((($evalcond208)) + 16|0);
                  HEAPF64[$12967>>3] = $12966;
                  $12968 = ((($4)) + 128|0);
                  $12969 = +HEAPF64[$12968>>3];
                  $12970 = ((($4)) + 312|0);
                  $12971 = +HEAPF64[$12970>>3];
                  $12972 = $12969 * $12971;
                  $12973 = ((($4)) + 240|0);
                  $12974 = +HEAPF64[$12973>>3];
                  $12975 = -1.0 * $12974;
                  $12976 = $x407;
                  $12977 = $12975 * $12976;
                  $12978 = $12972 + $12977;
                  $12979 = $x408;
                  $12980 = -1.0 * $12979;
                  $12981 = $12978 + $12980;
                  $12982 = ((($evalcond208)) + 24|0);
                  HEAPF64[$12982>>3] = $12981;
                  $12983 = ((($4)) + 128|0);
                  $12984 = +HEAPF64[$12983>>3];
                  $12985 = ((($4)) + 336|0);
                  $12986 = +HEAPF64[$12985>>3];
                  $12987 = $12984 * $12986;
                  $12988 = $x410;
                  $12989 = -1.0 * $12988;
                  $12990 = $12987 + $12989;
                  $12991 = ((($4)) + 264|0);
                  $12992 = +HEAPF64[$12991>>3];
                  $12993 = -1.0 * $12992;
                  $12994 = $x407;
                  $12995 = $12993 * $12994;
                  $12996 = $12990 + $12995;
                  $12997 = ((($evalcond208)) + 32|0);
                  HEAPF64[$12997>>3] = $12996;
                  $12998 = $x409;
                  $12999 = ((($4)) + 264|0);
                  $13000 = +HEAPF64[$12999>>3];
                  $13001 = $12998 + $13000;
                  $13002 = $x411;
                  $13003 = -1.0 * $13002;
                  $13004 = $13001 + $13003;
                  $13005 = ((($evalcond208)) + 40|0);
                  HEAPF64[$13005>>3] = $13004;
                  $13006 = $x409;
                  $13007 = ((($4)) + 312|0);
                  $13008 = +HEAPF64[$13007>>3];
                  $13009 = $13006 + $13008;
                  $13010 = $x411;
                  $13011 = -1.0 * $13010;
                  $13012 = $13009 + $13011;
                  $13013 = ((($evalcond208)) + 48|0);
                  HEAPF64[$13013>>3] = $13012;
                  $13014 = ((($4)) + 128|0);
                  $13015 = +HEAPF64[$13014>>3];
                  $13016 = -1.0 * $13015;
                  $13017 = $x410;
                  $13018 = $13016 * $13017;
                  $13019 = ((($4)) + 336|0);
                  $13020 = +HEAPF64[$13019>>3];
                  $13021 = $13018 + $13020;
                  $13022 = $x405;
                  $13023 = -1.0 * $13022;
                  $13024 = $x407;
                  $13025 = $13023 * $13024;
                  $13026 = $13021 + $13025;
                  $13027 = ((($evalcond208)) + 56|0);
                  HEAPF64[$13027>>3] = $13026;
                  $13028 = +HEAPF64[$evalcond208>>3];
                  $13029 = (+__Z5IKabsd($13028));
                  $13030 = $13029 > 5.0000000000000004E-6;
                  if ($13030) {
                   break;
                  }
                  $13031 = ((($evalcond208)) + 8|0);
                  $13032 = +HEAPF64[$13031>>3];
                  $13033 = (+__Z5IKabsd($13032));
                  $13034 = $13033 > 5.0000000000000004E-6;
                  if ($13034) {
                   break;
                  }
                  $13035 = ((($evalcond208)) + 16|0);
                  $13036 = +HEAPF64[$13035>>3];
                  $13037 = (+__Z5IKabsd($13036));
                  $13038 = $13037 > 5.0000000000000004E-6;
                  if ($13038) {
                   break;
                  }
                  $13039 = ((($evalcond208)) + 24|0);
                  $13040 = +HEAPF64[$13039>>3];
                  $13041 = (+__Z5IKabsd($13040));
                  $13042 = $13041 > 5.0000000000000004E-6;
                  if ($13042) {
                   break;
                  }
                  $13043 = ((($evalcond208)) + 32|0);
                  $13044 = +HEAPF64[$13043>>3];
                  $13045 = (+__Z5IKabsd($13044));
                  $13046 = $13045 > 5.0000000000000004E-6;
                  if ($13046) {
                   break;
                  }
                  $13047 = ((($evalcond208)) + 40|0);
                  $13048 = +HEAPF64[$13047>>3];
                  $13049 = (+__Z5IKabsd($13048));
                  $13050 = $13049 > 5.0000000000000004E-6;
                  if ($13050) {
                   break;
                  }
                  $13051 = ((($evalcond208)) + 48|0);
                  $13052 = +HEAPF64[$13051>>3];
                  $13053 = (+__Z5IKabsd($13052));
                  $13054 = $13053 > 5.0000000000000004E-6;
                  if ($13054) {
                   break;
                  }
                  $13055 = ((($evalcond208)) + 56|0);
                  $13056 = +HEAPF64[$13055>>3];
                  $13057 = (+__Z5IKabsd($13056));
                  $13058 = $13057 > 5.0000000000000004E-6;
                  if ($13058) {
                   break;
                  }
                  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos209,6);
                  __THREW__ = 0;
                  $13059 = (invoke_iii(416,($vinfos209|0),0)|0);
                  $13060 = __THREW__; __THREW__ = 0;
                  $13061 = $13060&1;
                  if ($13061) {
                   label = 1513;
                   break L1;
                  }
                  $13062 = ((($13059)) + 17|0);
                  HEAP8[$13062>>0] = 1;
                  $13063 = +HEAPF64[$4>>3];
                  __THREW__ = 0;
                  $13064 = (invoke_iii(416,($vinfos209|0),0)|0);
                  $13065 = __THREW__; __THREW__ = 0;
                  $13066 = $13065&1;
                  if ($13066) {
                   label = 1513;
                   break L1;
                  }
                  $13067 = ((($13064)) + 8|0);
                  HEAPF64[$13067>>3] = $13063;
                  $13068 = ((($4)) + 536|0);
                  $13069 = HEAP8[$13068>>0]|0;
                  __THREW__ = 0;
                  $13070 = (invoke_iii(416,($vinfos209|0),0)|0);
                  $13071 = __THREW__; __THREW__ = 0;
                  $13072 = $13071&1;
                  if ($13072) {
                   label = 1513;
                   break L1;
                  }
                  $13073 = ((($13070)) + 19|0);
                  HEAP8[$13073>>0] = $13069;
                  $13074 = ((($4)) + 536|0);
                  $13075 = ((($13074)) + 1|0);
                  $13076 = HEAP8[$13075>>0]|0;
                  __THREW__ = 0;
                  $13077 = (invoke_iii(416,($vinfos209|0),0)|0);
                  $13078 = __THREW__; __THREW__ = 0;
                  $13079 = $13078&1;
                  if ($13079) {
                   label = 1513;
                   break L1;
                  }
                  $13080 = ((($13077)) + 19|0);
                  $13081 = ((($13080)) + 1|0);
                  HEAP8[$13081>>0] = $13076;
                  $13082 = ((($4)) + 538|0);
                  $13083 = HEAP8[$13082>>0]|0;
                  __THREW__ = 0;
                  $13084 = (invoke_iii(416,($vinfos209|0),0)|0);
                  $13085 = __THREW__; __THREW__ = 0;
                  $13086 = $13085&1;
                  if ($13086) {
                   label = 1513;
                   break L1;
                  }
                  $13087 = ((($13084)) + 18|0);
                  HEAP8[$13087>>0] = $13083;
                  __THREW__ = 0;
                  $13088 = (invoke_iii(416,($vinfos209|0),1)|0);
                  $13089 = __THREW__; __THREW__ = 0;
                  $13090 = $13089&1;
                  if ($13090) {
                   label = 1513;
                   break L1;
                  }
                  $13091 = ((($13088)) + 17|0);
                  HEAP8[$13091>>0] = 1;
                  $13092 = ((($4)) + 40|0);
                  $13093 = +HEAPF64[$13092>>3];
                  __THREW__ = 0;
                  $13094 = (invoke_iii(416,($vinfos209|0),1)|0);
                  $13095 = __THREW__; __THREW__ = 0;
                  $13096 = $13095&1;
                  if ($13096) {
                   label = 1513;
                   break L1;
                  }
                  $13097 = ((($13094)) + 8|0);
                  HEAPF64[$13097>>3] = $13093;
                  $13098 = ((($4)) + 539|0);
                  $13099 = HEAP8[$13098>>0]|0;
                  __THREW__ = 0;
                  $13100 = (invoke_iii(416,($vinfos209|0),1)|0);
                  $13101 = __THREW__; __THREW__ = 0;
                  $13102 = $13101&1;
                  if ($13102) {
                   label = 1513;
                   break L1;
                  }
                  $13103 = ((($13100)) + 19|0);
                  HEAP8[$13103>>0] = $13099;
                  $13104 = ((($4)) + 539|0);
                  $13105 = ((($13104)) + 1|0);
                  $13106 = HEAP8[$13105>>0]|0;
                  __THREW__ = 0;
                  $13107 = (invoke_iii(416,($vinfos209|0),1)|0);
                  $13108 = __THREW__; __THREW__ = 0;
                  $13109 = $13108&1;
                  if ($13109) {
                   label = 1513;
                   break L1;
                  }
                  $13110 = ((($13107)) + 19|0);
                  $13111 = ((($13110)) + 1|0);
                  HEAP8[$13111>>0] = $13106;
                  $13112 = ((($4)) + 541|0);
                  $13113 = HEAP8[$13112>>0]|0;
                  __THREW__ = 0;
                  $13114 = (invoke_iii(416,($vinfos209|0),1)|0);
                  $13115 = __THREW__; __THREW__ = 0;
                  $13116 = $13115&1;
                  if ($13116) {
                   label = 1513;
                   break L1;
                  }
                  $13117 = ((($13114)) + 18|0);
                  HEAP8[$13117>>0] = $13113;
                  __THREW__ = 0;
                  $13118 = (invoke_iii(416,($vinfos209|0),2)|0);
                  $13119 = __THREW__; __THREW__ = 0;
                  $13120 = $13119&1;
                  if ($13120) {
                   label = 1513;
                   break L1;
                  }
                  $13121 = ((($13118)) + 17|0);
                  HEAP8[$13121>>0] = 1;
                  $13122 = ((($4)) + 80|0);
                  $13123 = +HEAPF64[$13122>>3];
                  __THREW__ = 0;
                  $13124 = (invoke_iii(416,($vinfos209|0),2)|0);
                  $13125 = __THREW__; __THREW__ = 0;
                  $13126 = $13125&1;
                  if ($13126) {
                   label = 1513;
                   break L1;
                  }
                  $13127 = ((($13124)) + 8|0);
                  HEAPF64[$13127>>3] = $13123;
                  $13128 = ((($4)) + 542|0);
                  $13129 = HEAP8[$13128>>0]|0;
                  __THREW__ = 0;
                  $13130 = (invoke_iii(416,($vinfos209|0),2)|0);
                  $13131 = __THREW__; __THREW__ = 0;
                  $13132 = $13131&1;
                  if ($13132) {
                   label = 1513;
                   break L1;
                  }
                  $13133 = ((($13130)) + 19|0);
                  HEAP8[$13133>>0] = $13129;
                  $13134 = ((($4)) + 542|0);
                  $13135 = ((($13134)) + 1|0);
                  $13136 = HEAP8[$13135>>0]|0;
                  __THREW__ = 0;
                  $13137 = (invoke_iii(416,($vinfos209|0),2)|0);
                  $13138 = __THREW__; __THREW__ = 0;
                  $13139 = $13138&1;
                  if ($13139) {
                   label = 1513;
                   break L1;
                  }
                  $13140 = ((($13137)) + 19|0);
                  $13141 = ((($13140)) + 1|0);
                  HEAP8[$13141>>0] = $13136;
                  $13142 = ((($4)) + 544|0);
                  $13143 = HEAP8[$13142>>0]|0;
                  __THREW__ = 0;
                  $13144 = (invoke_iii(416,($vinfos209|0),2)|0);
                  $13145 = __THREW__; __THREW__ = 0;
                  $13146 = $13145&1;
                  if ($13146) {
                   label = 1513;
                   break L1;
                  }
                  $13147 = ((($13144)) + 18|0);
                  HEAP8[$13147>>0] = $13143;
                  __THREW__ = 0;
                  $13148 = (invoke_iii(416,($vinfos209|0),3)|0);
                  $13149 = __THREW__; __THREW__ = 0;
                  $13150 = $13149&1;
                  if ($13150) {
                   label = 1513;
                   break L1;
                  }
                  $13151 = ((($13148)) + 17|0);
                  HEAP8[$13151>>0] = 1;
                  $13152 = ((($4)) + 120|0);
                  $13153 = +HEAPF64[$13152>>3];
                  __THREW__ = 0;
                  $13154 = (invoke_iii(416,($vinfos209|0),3)|0);
                  $13155 = __THREW__; __THREW__ = 0;
                  $13156 = $13155&1;
                  if ($13156) {
                   label = 1513;
                   break L1;
                  }
                  $13157 = ((($13154)) + 8|0);
                  HEAPF64[$13157>>3] = $13153;
                  $13158 = ((($4)) + 545|0);
                  $13159 = HEAP8[$13158>>0]|0;
                  __THREW__ = 0;
                  $13160 = (invoke_iii(416,($vinfos209|0),3)|0);
                  $13161 = __THREW__; __THREW__ = 0;
                  $13162 = $13161&1;
                  if ($13162) {
                   label = 1513;
                   break L1;
                  }
                  $13163 = ((($13160)) + 19|0);
                  HEAP8[$13163>>0] = $13159;
                  $13164 = ((($4)) + 545|0);
                  $13165 = ((($13164)) + 1|0);
                  $13166 = HEAP8[$13165>>0]|0;
                  __THREW__ = 0;
                  $13167 = (invoke_iii(416,($vinfos209|0),3)|0);
                  $13168 = __THREW__; __THREW__ = 0;
                  $13169 = $13168&1;
                  if ($13169) {
                   label = 1513;
                   break L1;
                  }
                  $13170 = ((($13167)) + 19|0);
                  $13171 = ((($13170)) + 1|0);
                  HEAP8[$13171>>0] = $13166;
                  $13172 = ((($4)) + 547|0);
                  $13173 = HEAP8[$13172>>0]|0;
                  __THREW__ = 0;
                  $13174 = (invoke_iii(416,($vinfos209|0),3)|0);
                  $13175 = __THREW__; __THREW__ = 0;
                  $13176 = $13175&1;
                  if ($13176) {
                   label = 1513;
                   break L1;
                  }
                  $13177 = ((($13174)) + 18|0);
                  HEAP8[$13177>>0] = $13173;
                  __THREW__ = 0;
                  $13178 = (invoke_iii(416,($vinfos209|0),4)|0);
                  $13179 = __THREW__; __THREW__ = 0;
                  $13180 = $13179&1;
                  if ($13180) {
                   label = 1513;
                   break L1;
                  }
                  $13181 = ((($13178)) + 17|0);
                  HEAP8[$13181>>0] = 1;
                  $13182 = ((($4)) + 160|0);
                  $13183 = +HEAPF64[$13182>>3];
                  __THREW__ = 0;
                  $13184 = (invoke_iii(416,($vinfos209|0),4)|0);
                  $13185 = __THREW__; __THREW__ = 0;
                  $13186 = $13185&1;
                  if ($13186) {
                   label = 1513;
                   break L1;
                  }
                  $13187 = ((($13184)) + 8|0);
                  HEAPF64[$13187>>3] = $13183;
                  $13188 = ((($4)) + 548|0);
                  $13189 = HEAP8[$13188>>0]|0;
                  __THREW__ = 0;
                  $13190 = (invoke_iii(416,($vinfos209|0),4)|0);
                  $13191 = __THREW__; __THREW__ = 0;
                  $13192 = $13191&1;
                  if ($13192) {
                   label = 1513;
                   break L1;
                  }
                  $13193 = ((($13190)) + 19|0);
                  HEAP8[$13193>>0] = $13189;
                  $13194 = ((($4)) + 548|0);
                  $13195 = ((($13194)) + 1|0);
                  $13196 = HEAP8[$13195>>0]|0;
                  __THREW__ = 0;
                  $13197 = (invoke_iii(416,($vinfos209|0),4)|0);
                  $13198 = __THREW__; __THREW__ = 0;
                  $13199 = $13198&1;
                  if ($13199) {
                   label = 1513;
                   break L1;
                  }
                  $13200 = ((($13197)) + 19|0);
                  $13201 = ((($13200)) + 1|0);
                  HEAP8[$13201>>0] = $13196;
                  $13202 = ((($4)) + 550|0);
                  $13203 = HEAP8[$13202>>0]|0;
                  __THREW__ = 0;
                  $13204 = (invoke_iii(416,($vinfos209|0),4)|0);
                  $13205 = __THREW__; __THREW__ = 0;
                  $13206 = $13205&1;
                  if ($13206) {
                   label = 1513;
                   break L1;
                  }
                  $13207 = ((($13204)) + 18|0);
                  HEAP8[$13207>>0] = $13203;
                  __THREW__ = 0;
                  $13208 = (invoke_iii(416,($vinfos209|0),5)|0);
                  $13209 = __THREW__; __THREW__ = 0;
                  $13210 = $13209&1;
                  if ($13210) {
                   label = 1513;
                   break L1;
                  }
                  $13211 = ((($13208)) + 17|0);
                  HEAP8[$13211>>0] = 1;
                  $13212 = ((($4)) + 200|0);
                  $13213 = +HEAPF64[$13212>>3];
                  __THREW__ = 0;
                  $13214 = (invoke_iii(416,($vinfos209|0),5)|0);
                  $13215 = __THREW__; __THREW__ = 0;
                  $13216 = $13215&1;
                  if ($13216) {
                   label = 1513;
                   break L1;
                  }
                  $13217 = ((($13214)) + 8|0);
                  HEAPF64[$13217>>3] = $13213;
                  $13218 = ((($4)) + 551|0);
                  $13219 = HEAP8[$13218>>0]|0;
                  __THREW__ = 0;
                  $13220 = (invoke_iii(416,($vinfos209|0),5)|0);
                  $13221 = __THREW__; __THREW__ = 0;
                  $13222 = $13221&1;
                  if ($13222) {
                   label = 1513;
                   break L1;
                  }
                  $13223 = ((($13220)) + 19|0);
                  HEAP8[$13223>>0] = $13219;
                  $13224 = ((($4)) + 551|0);
                  $13225 = ((($13224)) + 1|0);
                  $13226 = HEAP8[$13225>>0]|0;
                  __THREW__ = 0;
                  $13227 = (invoke_iii(416,($vinfos209|0),5)|0);
                  $13228 = __THREW__; __THREW__ = 0;
                  $13229 = $13228&1;
                  if ($13229) {
                   label = 1513;
                   break L1;
                  }
                  $13230 = ((($13227)) + 19|0);
                  $13231 = ((($13230)) + 1|0);
                  HEAP8[$13231>>0] = $13226;
                  $13232 = ((($4)) + 553|0);
                  $13233 = HEAP8[$13232>>0]|0;
                  __THREW__ = 0;
                  $13234 = (invoke_iii(416,($vinfos209|0),5)|0);
                  $13235 = __THREW__; __THREW__ = 0;
                  $13236 = $13235&1;
                  if ($13236) {
                   label = 1513;
                   break L1;
                  }
                  $13237 = ((($13234)) + 18|0);
                  HEAP8[$13237>>0] = $13233;
                  __THREW__ = 0;
                  invoke_vii(417,($vfree210|0),0);
                  $13238 = __THREW__; __THREW__ = 0;
                  $13239 = $13238&1;
                  if ($13239) {
                   label = 1513;
                   break L1;
                  }
                  $13240 = $1;
                  $13241 = HEAP32[$13240>>2]|0;
                  $13242 = ((($13241)) + 8|0);
                  $13243 = HEAP32[$13242>>2]|0;
                  __THREW__ = 0;
                  (invoke_iiii($13243|0,($13240|0),($vinfos209|0),($vfree210|0))|0);
                  $13244 = __THREW__; __THREW__ = 0;
                  $13245 = $13244&1;
                  if ($13245) {
                   label = 1514;
                   break L1;
                  }
                  __THREW__ = 0;
                  invoke_vi(371,($vfree210|0));
                  $13246 = __THREW__; __THREW__ = 0;
                  $13247 = $13246&1;
                  if ($13247) {
                   label = 1513;
                   break L1;
                  }
                  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos209);
                 }
                } while(0);
                $13248 = $ij5206;
                $13249 = (($13248) + 1)|0;
                $ij5206 = $13249;
               }
              }
             } while(0);
             $13258 = $bgotonextstatement201;
             $13259 = $13258&1;
             if (!($13259)) {
              break;
             }
             $bgotonextstatement211 = 1;
             $13260 = ((($4)) + 432|0);
             $13261 = +HEAPF64[$13260>>3];
             $13262 = ((($4)) + 168|0);
             $13263 = +HEAPF64[$13262>>3];
             $13264 = -1.0 * $13263;
             $13265 = $13261 + $13264;
             $x412 = $13265;
             $13266 = ((($4)) + 176|0);
             $13267 = +HEAPF64[$13266>>3];
             $13268 = -1.0 * $13267;
             $13269 = ((($4)) + 288|0);
             $13270 = +HEAPF64[$13269>>3];
             $13271 = $13268 + $13270;
             $x413 = $13271;
             $13272 = ((($4)) + 168|0);
             $13273 = +HEAPF64[$13272>>3];
             $13274 = 1.0 * $13273;
             $x414 = $13274;
             $13275 = ((($4)) + 176|0);
             $13276 = +HEAPF64[$13275>>3];
             $13277 = 1.0 * $13276;
             $x415 = $13277;
             $13278 = ((($4)) + 120|0);
             $13279 = +HEAPF64[$13278>>3];
             $13280 = (+__Z5IKabsd($13279));
             $13281 = 3.14159265358979 + $13280;
             $13282 = (+__Z6IKfmoddd($13281,6.2831853071795898));
             $13283 = -3.14159265358979 + $13282;
             HEAPF64[$evalcond150>>3] = $13283;
             $13284 = $x412;
             $13285 = ((($evalcond150)) + 8|0);
             HEAPF64[$13285>>3] = $13284;
             $13286 = $x412;
             $13287 = ((($evalcond150)) + 16|0);
             HEAPF64[$13287>>3] = $13286;
             $13288 = $x413;
             $13289 = ((($evalcond150)) + 24|0);
             HEAPF64[$13289>>3] = $13288;
             $13290 = ((($4)) + 360|0);
             $13291 = +HEAPF64[$13290>>3];
             $13292 = ((($evalcond150)) + 32|0);
             HEAPF64[$13292>>3] = $13291;
             $13293 = $x413;
             $13294 = ((($evalcond150)) + 40|0);
             HEAPF64[$13294>>3] = $13293;
             $13295 = ((($4)) + 168|0);
             $13296 = +HEAPF64[$13295>>3];
             $13297 = ((($4)) + 288|0);
             $13298 = +HEAPF64[$13297>>3];
             $13299 = $13296 * $13298;
             $13300 = ((($4)) + 432|0);
             $13301 = +HEAPF64[$13300>>3];
             $13302 = -1.0 * $13301;
             $13303 = $x415;
             $13304 = $13302 * $13303;
             $13305 = $13299 + $13304;
             $13306 = ((($evalcond150)) + 48|0);
             HEAPF64[$13306>>3] = $13305;
             $13307 = ((($4)) + 384|0);
             $13308 = +HEAPF64[$13307>>3];
             $13309 = -1.0 * $13308;
             $13310 = $x414;
             $13311 = $13309 * $13310;
             $13312 = ((($4)) + 240|0);
             $13313 = +HEAPF64[$13312>>3];
             $13314 = -1.0 * $13313;
             $13315 = $x415;
             $13316 = $13314 * $13315;
             $13317 = $13311 + $13316;
             $13318 = ((($evalcond150)) + 56|0);
             HEAPF64[$13318>>3] = $13317;
             $13319 = ((($4)) + 408|0);
             $13320 = +HEAPF64[$13319>>3];
             $13321 = -1.0 * $13320;
             $13322 = $x414;
             $13323 = $13321 * $13322;
             $13324 = ((($4)) + 264|0);
             $13325 = +HEAPF64[$13324>>3];
             $13326 = -1.0 * $13325;
             $13327 = $x415;
             $13328 = $13326 * $13327;
             $13329 = $13323 + $13328;
             $13330 = ((($evalcond150)) + 64|0);
             HEAPF64[$13330>>3] = $13329;
             $13331 = ((($4)) + 288|0);
             $13332 = +HEAPF64[$13331>>3];
             $13333 = -1.0 * $13332;
             $13334 = $x415;
             $13335 = $13333 * $13334;
             $13336 = 1.0 + $13335;
             $13337 = ((($4)) + 432|0);
             $13338 = +HEAPF64[$13337>>3];
             $13339 = -1.0 * $13338;
             $13340 = $x414;
             $13341 = $13339 * $13340;
             $13342 = $13336 + $13341;
             $13343 = ((($evalcond150)) + 72|0);
             HEAPF64[$13343>>3] = $13342;
             $13344 = +HEAPF64[$evalcond150>>3];
             $13345 = (+__Z5IKabsd($13344));
             $13346 = $13345 < 9.9999999999999995E-7;
             L761: do {
              if ($13346) {
               $13347 = ((($evalcond150)) + 8|0);
               $13348 = +HEAPF64[$13347>>3];
               $13349 = (+__Z5IKabsd($13348));
               $13350 = $13349 < 9.9999999999999995E-7;
               if (!($13350)) {
                break;
               }
               $13351 = ((($evalcond150)) + 16|0);
               $13352 = +HEAPF64[$13351>>3];
               $13353 = (+__Z5IKabsd($13352));
               $13354 = $13353 < 9.9999999999999995E-7;
               if (!($13354)) {
                break;
               }
               $13355 = ((($evalcond150)) + 24|0);
               $13356 = +HEAPF64[$13355>>3];
               $13357 = (+__Z5IKabsd($13356));
               $13358 = $13357 < 9.9999999999999995E-7;
               if (!($13358)) {
                break;
               }
               $13359 = ((($evalcond150)) + 32|0);
               $13360 = +HEAPF64[$13359>>3];
               $13361 = (+__Z5IKabsd($13360));
               $13362 = $13361 < 9.9999999999999995E-7;
               if (!($13362)) {
                break;
               }
               $13363 = ((($evalcond150)) + 40|0);
               $13364 = +HEAPF64[$13363>>3];
               $13365 = (+__Z5IKabsd($13364));
               $13366 = $13365 < 9.9999999999999995E-7;
               if (!($13366)) {
                break;
               }
               $13367 = ((($evalcond150)) + 48|0);
               $13368 = +HEAPF64[$13367>>3];
               $13369 = (+__Z5IKabsd($13368));
               $13370 = $13369 < 9.9999999999999995E-7;
               if (!($13370)) {
                break;
               }
               $13371 = ((($evalcond150)) + 56|0);
               $13372 = +HEAPF64[$13371>>3];
               $13373 = (+__Z5IKabsd($13372));
               $13374 = $13373 < 9.9999999999999995E-7;
               if (!($13374)) {
                break;
               }
               $13375 = ((($evalcond150)) + 64|0);
               $13376 = +HEAPF64[$13375>>3];
               $13377 = (+__Z5IKabsd($13376));
               $13378 = $13377 < 9.9999999999999995E-7;
               if (!($13378)) {
                break;
               }
               $13379 = ((($evalcond150)) + 72|0);
               $13380 = +HEAPF64[$13379>>3];
               $13381 = (+__Z5IKabsd($13380));
               $13382 = $13381 < 9.9999999999999995E-7;
               if (!($13382)) {
                break;
               }
               $bgotonextstatement211 = 0;
               ;HEAP8[$j5valid215>>0]=0|0;
               $13383 = ((($4)) + 553|0);
               HEAP8[$13383>>0] = 1;
               $13384 = ((($4)) + 312|0);
               $13385 = +HEAPF64[$13384>>3];
               $13386 = (+__Z5IKabsd($13385));
               $13387 = $13386 < 1.9999999999999999E-6;
               do {
                if ($13387) {
                 $13388 = ((($4)) + 336|0);
                 $13389 = +HEAPF64[$13388>>3];
                 $13390 = (+__Z5IKabsd($13389));
                 $13391 = $13390 < 1.9999999999999999E-6;
                 if (!($13391)) {
                  break;
                 }
                 $13392 = ((($4)) + 312|0);
                 $13393 = +HEAPF64[$13392>>3];
                 $13394 = (+__Z5IKsqrd($13393));
                 $13395 = ((($4)) + 336|0);
                 $13396 = +HEAPF64[$13395>>3];
                 $13397 = (+__Z5IKsqrd($13396));
                 $13398 = $13394 + $13397;
                 $13399 = $13398 - 1.0;
                 $13400 = (+__Z5IKabsd($13399));
                 $13401 = $13400 <= 1.9999999999999999E-6;
                 if ($13401) {
                  break L761;
                 }
                }
               } while(0);
               $13402 = ((($4)) + 312|0);
               $13403 = +HEAPF64[$13402>>3];
               $13404 = ((($4)) + 336|0);
               $13405 = +HEAPF64[$13404>>3];
               $13406 = (+__Z7IKatan2dd($13403,$13405));
               HEAPF64[$j5array212>>3] = $13406;
               $13407 = +HEAPF64[$j5array212>>3];
               $13408 = (+__Z5IKsind($13407));
               HEAPF64[$sj5array214>>3] = $13408;
               $13409 = +HEAPF64[$j5array212>>3];
               $13410 = (+__Z5IKcosd($13409));
               HEAPF64[$cj5array213>>3] = $13410;
               $13411 = +HEAPF64[$j5array212>>3];
               $13412 = $13411 > 3.14159265358979;
               $13413 = +HEAPF64[$j5array212>>3];
               do {
                if ($13412) {
                 $13414 = $13413 - 6.2831853071795898;
                 HEAPF64[$j5array212>>3] = $13414;
                } else {
                 $13415 = $13413 < -3.14159265358979;
                 if (!($13415)) {
                  break;
                 }
                 $13416 = +HEAPF64[$j5array212>>3];
                 $13417 = $13416 + 6.2831853071795898;
                 HEAPF64[$j5array212>>3] = $13417;
                }
               } while(0);
               HEAP8[$j5valid215>>0] = 1;
               $ij5216 = 0;
               while(1) {
                $13418 = $ij5216;
                $13419 = ($13418|0)<(1);
                if (!($13419)) {
                 break L761;
                }
                $13420 = $ij5216;
                $13421 = (($j5valid215) + ($13420)|0);
                $13422 = HEAP8[$13421>>0]|0;
                $13423 = $13422&1;
                do {
                 if ($13423) {
                  $13424 = $ij5216;
                  $13425 = $13424&255;
                  $13426 = ((($4)) + 551|0);
                  HEAP8[$13426>>0] = $13425;
                  $13427 = ((($4)) + 551|0);
                  $13428 = ((($13427)) + 1|0);
                  HEAP8[$13428>>0] = -1;
                  $13429 = $ij5216;
                  $13430 = (($13429) + 1)|0;
                  $iij5217 = $13430;
                  L786: while(1) {
                   $13431 = $iij5217;
                   $13432 = ($13431|0)<(1);
                   if (!($13432)) {
                    break;
                   }
                   $13433 = $iij5217;
                   $13434 = (($j5valid215) + ($13433)|0);
                   $13435 = HEAP8[$13434>>0]|0;
                   $13436 = $13435&1;
                   do {
                    if ($13436) {
                     $13437 = $ij5216;
                     $13438 = (($cj5array213) + ($13437<<3)|0);
                     $13439 = +HEAPF64[$13438>>3];
                     $13440 = $iij5217;
                     $13441 = (($cj5array213) + ($13440<<3)|0);
                     $13442 = +HEAPF64[$13441>>3];
                     $13443 = $13439 - $13442;
                     $13444 = (+__Z5IKabsd($13443));
                     $13445 = $13444 < 9.9999999999999995E-7;
                     if (!($13445)) {
                      break;
                     }
                     $13446 = $ij5216;
                     $13447 = (($sj5array214) + ($13446<<3)|0);
                     $13448 = +HEAPF64[$13447>>3];
                     $13449 = $iij5217;
                     $13450 = (($sj5array214) + ($13449<<3)|0);
                     $13451 = +HEAPF64[$13450>>3];
                     $13452 = $13448 - $13451;
                     $13453 = (+__Z5IKabsd($13452));
                     $13454 = $13453 < 9.9999999999999995E-7;
                     if ($13454) {
                      label = 1542;
                      break L786;
                     }
                    }
                   } while(0);
                   $13461 = $iij5217;
                   $13462 = (($13461) + 1)|0;
                   $iij5217 = $13462;
                  }
                  if ((label|0) == 1542) {
                   label = 0;
                   $13455 = $iij5217;
                   $13456 = (($j5valid215) + ($13455)|0);
                   HEAP8[$13456>>0] = 0;
                   $13457 = $iij5217;
                   $13458 = $13457&255;
                   $13459 = ((($4)) + 551|0);
                   $13460 = ((($13459)) + 1|0);
                   HEAP8[$13460>>0] = $13458;
                  }
                  $13463 = $ij5216;
                  $13464 = (($j5array212) + ($13463<<3)|0);
                  $13465 = +HEAPF64[$13464>>3];
                  $13466 = ((($4)) + 200|0);
                  HEAPF64[$13466>>3] = $13465;
                  $13467 = $ij5216;
                  $13468 = (($cj5array213) + ($13467<<3)|0);
                  $13469 = +HEAPF64[$13468>>3];
                  $13470 = ((($4)) + 208|0);
                  HEAPF64[$13470>>3] = $13469;
                  $13471 = $ij5216;
                  $13472 = (($sj5array214) + ($13471<<3)|0);
                  $13473 = +HEAPF64[$13472>>3];
                  $13474 = ((($4)) + 216|0);
                  HEAPF64[$13474>>3] = $13473;
                  $13475 = ((($4)) + 200|0);
                  $13476 = +HEAPF64[$13475>>3];
                  $13477 = (+__Z5IKcosd($13476));
                  $x416 = $13477;
                  $13478 = ((($4)) + 200|0);
                  $13479 = +HEAPF64[$13478>>3];
                  $13480 = (+__Z5IKsind($13479));
                  $x417 = $13480;
                  $13481 = ((($4)) + 288|0);
                  $13482 = +HEAPF64[$13481>>3];
                  $13483 = 1.0 * $13482;
                  $x418 = $13483;
                  $13484 = $x416;
                  $13485 = 1.0 * $13484;
                  $x419 = $13485;
                  $13486 = ((($4)) + 384|0);
                  $13487 = +HEAPF64[$13486>>3];
                  $13488 = ((($4)) + 288|0);
                  $13489 = +HEAPF64[$13488>>3];
                  $13490 = $x416;
                  $13491 = $13489 * $13490;
                  $13492 = $13487 + $13491;
                  HEAPF64[$evalcond218>>3] = $13492;
                  $13493 = ((($4)) + 312|0);
                  $13494 = +HEAPF64[$13493>>3];
                  $13495 = $x417;
                  $13496 = -1.0 * $13495;
                  $13497 = $13494 + $13496;
                  $13498 = ((($evalcond218)) + 8|0);
                  HEAPF64[$13498>>3] = $13497;
                  $13499 = ((($4)) + 336|0);
                  $13500 = +HEAPF64[$13499>>3];
                  $13501 = $x419;
                  $13502 = -1.0 * $13501;
                  $13503 = $13500 + $13502;
                  $13504 = ((($evalcond218)) + 16|0);
                  HEAPF64[$13504>>3] = $13503;
                  $13505 = ((($4)) + 432|0);
                  $13506 = +HEAPF64[$13505>>3];
                  $13507 = $x417;
                  $13508 = $13506 * $13507;
                  $13509 = ((($4)) + 264|0);
                  $13510 = +HEAPF64[$13509>>3];
                  $13511 = $13508 + $13510;
                  $13512 = ((($evalcond218)) + 24|0);
                  HEAPF64[$13512>>3] = $13511;
                  $13513 = $x417;
                  $13514 = -1.0 * $13513;
                  $13515 = $x418;
                  $13516 = $13514 * $13515;
                  $13517 = ((($4)) + 408|0);
                  $13518 = +HEAPF64[$13517>>3];
                  $13519 = $13516 + $13518;
                  $13520 = ((($evalcond218)) + 32|0);
                  HEAPF64[$13520>>3] = $13519;
                  $13521 = ((($4)) + 240|0);
                  $13522 = +HEAPF64[$13521>>3];
                  $13523 = ((($4)) + 432|0);
                  $13524 = +HEAPF64[$13523>>3];
                  $13525 = -1.0 * $13524;
                  $13526 = $x419;
                  $13527 = $13525 * $13526;
                  $13528 = $13522 + $13527;
                  $13529 = ((($evalcond218)) + 40|0);
                  HEAPF64[$13529>>3] = $13528;
                  $13530 = ((($4)) + 264|0);
                  $13531 = +HEAPF64[$13530>>3];
                  $13532 = ((($4)) + 432|0);
                  $13533 = +HEAPF64[$13532>>3];
                  $13534 = $13531 * $13533;
                  $13535 = $x417;
                  $13536 = $13534 + $13535;
                  $13537 = ((($4)) + 408|0);
                  $13538 = +HEAPF64[$13537>>3];
                  $13539 = -1.0 * $13538;
                  $13540 = $x418;
                  $13541 = $13539 * $13540;
                  $13542 = $13536 + $13541;
                  $13543 = ((($evalcond218)) + 48|0);
                  HEAPF64[$13543>>3] = $13542;
                  $13544 = ((($4)) + 240|0);
                  $13545 = +HEAPF64[$13544>>3];
                  $13546 = ((($4)) + 432|0);
                  $13547 = +HEAPF64[$13546>>3];
                  $13548 = $13545 * $13547;
                  $13549 = ((($4)) + 384|0);
                  $13550 = +HEAPF64[$13549>>3];
                  $13551 = -1.0 * $13550;
                  $13552 = $x418;
                  $13553 = $13551 * $13552;
                  $13554 = $13548 + $13553;
                  $13555 = $x419;
                  $13556 = -1.0 * $13555;
                  $13557 = $13554 + $13556;
                  $13558 = ((($evalcond218)) + 56|0);
                  HEAPF64[$13558>>3] = $13557;
                  $13559 = +HEAPF64[$evalcond218>>3];
                  $13560 = (+__Z5IKabsd($13559));
                  $13561 = $13560 > 5.0000000000000004E-6;
                  if ($13561) {
                   break;
                  }
                  $13562 = ((($evalcond218)) + 8|0);
                  $13563 = +HEAPF64[$13562>>3];
                  $13564 = (+__Z5IKabsd($13563));
                  $13565 = $13564 > 5.0000000000000004E-6;
                  if ($13565) {
                   break;
                  }
                  $13566 = ((($evalcond218)) + 16|0);
                  $13567 = +HEAPF64[$13566>>3];
                  $13568 = (+__Z5IKabsd($13567));
                  $13569 = $13568 > 5.0000000000000004E-6;
                  if ($13569) {
                   break;
                  }
                  $13570 = ((($evalcond218)) + 24|0);
                  $13571 = +HEAPF64[$13570>>3];
                  $13572 = (+__Z5IKabsd($13571));
                  $13573 = $13572 > 5.0000000000000004E-6;
                  if ($13573) {
                   break;
                  }
                  $13574 = ((($evalcond218)) + 32|0);
                  $13575 = +HEAPF64[$13574>>3];
                  $13576 = (+__Z5IKabsd($13575));
                  $13577 = $13576 > 5.0000000000000004E-6;
                  if ($13577) {
                   break;
                  }
                  $13578 = ((($evalcond218)) + 40|0);
                  $13579 = +HEAPF64[$13578>>3];
                  $13580 = (+__Z5IKabsd($13579));
                  $13581 = $13580 > 5.0000000000000004E-6;
                  if ($13581) {
                   break;
                  }
                  $13582 = ((($evalcond218)) + 48|0);
                  $13583 = +HEAPF64[$13582>>3];
                  $13584 = (+__Z5IKabsd($13583));
                  $13585 = $13584 > 5.0000000000000004E-6;
                  if ($13585) {
                   break;
                  }
                  $13586 = ((($evalcond218)) + 56|0);
                  $13587 = +HEAPF64[$13586>>3];
                  $13588 = (+__Z5IKabsd($13587));
                  $13589 = $13588 > 5.0000000000000004E-6;
                  if ($13589) {
                   break;
                  }
                  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos219,6);
                  __THREW__ = 0;
                  $13590 = (invoke_iii(416,($vinfos219|0),0)|0);
                  $13591 = __THREW__; __THREW__ = 0;
                  $13592 = $13591&1;
                  if ($13592) {
                   label = 1587;
                   break L1;
                  }
                  $13593 = ((($13590)) + 17|0);
                  HEAP8[$13593>>0] = 1;
                  $13594 = +HEAPF64[$4>>3];
                  __THREW__ = 0;
                  $13595 = (invoke_iii(416,($vinfos219|0),0)|0);
                  $13596 = __THREW__; __THREW__ = 0;
                  $13597 = $13596&1;
                  if ($13597) {
                   label = 1587;
                   break L1;
                  }
                  $13598 = ((($13595)) + 8|0);
                  HEAPF64[$13598>>3] = $13594;
                  $13599 = ((($4)) + 536|0);
                  $13600 = HEAP8[$13599>>0]|0;
                  __THREW__ = 0;
                  $13601 = (invoke_iii(416,($vinfos219|0),0)|0);
                  $13602 = __THREW__; __THREW__ = 0;
                  $13603 = $13602&1;
                  if ($13603) {
                   label = 1587;
                   break L1;
                  }
                  $13604 = ((($13601)) + 19|0);
                  HEAP8[$13604>>0] = $13600;
                  $13605 = ((($4)) + 536|0);
                  $13606 = ((($13605)) + 1|0);
                  $13607 = HEAP8[$13606>>0]|0;
                  __THREW__ = 0;
                  $13608 = (invoke_iii(416,($vinfos219|0),0)|0);
                  $13609 = __THREW__; __THREW__ = 0;
                  $13610 = $13609&1;
                  if ($13610) {
                   label = 1587;
                   break L1;
                  }
                  $13611 = ((($13608)) + 19|0);
                  $13612 = ((($13611)) + 1|0);
                  HEAP8[$13612>>0] = $13607;
                  $13613 = ((($4)) + 538|0);
                  $13614 = HEAP8[$13613>>0]|0;
                  __THREW__ = 0;
                  $13615 = (invoke_iii(416,($vinfos219|0),0)|0);
                  $13616 = __THREW__; __THREW__ = 0;
                  $13617 = $13616&1;
                  if ($13617) {
                   label = 1587;
                   break L1;
                  }
                  $13618 = ((($13615)) + 18|0);
                  HEAP8[$13618>>0] = $13614;
                  __THREW__ = 0;
                  $13619 = (invoke_iii(416,($vinfos219|0),1)|0);
                  $13620 = __THREW__; __THREW__ = 0;
                  $13621 = $13620&1;
                  if ($13621) {
                   label = 1587;
                   break L1;
                  }
                  $13622 = ((($13619)) + 17|0);
                  HEAP8[$13622>>0] = 1;
                  $13623 = ((($4)) + 40|0);
                  $13624 = +HEAPF64[$13623>>3];
                  __THREW__ = 0;
                  $13625 = (invoke_iii(416,($vinfos219|0),1)|0);
                  $13626 = __THREW__; __THREW__ = 0;
                  $13627 = $13626&1;
                  if ($13627) {
                   label = 1587;
                   break L1;
                  }
                  $13628 = ((($13625)) + 8|0);
                  HEAPF64[$13628>>3] = $13624;
                  $13629 = ((($4)) + 539|0);
                  $13630 = HEAP8[$13629>>0]|0;
                  __THREW__ = 0;
                  $13631 = (invoke_iii(416,($vinfos219|0),1)|0);
                  $13632 = __THREW__; __THREW__ = 0;
                  $13633 = $13632&1;
                  if ($13633) {
                   label = 1587;
                   break L1;
                  }
                  $13634 = ((($13631)) + 19|0);
                  HEAP8[$13634>>0] = $13630;
                  $13635 = ((($4)) + 539|0);
                  $13636 = ((($13635)) + 1|0);
                  $13637 = HEAP8[$13636>>0]|0;
                  __THREW__ = 0;
                  $13638 = (invoke_iii(416,($vinfos219|0),1)|0);
                  $13639 = __THREW__; __THREW__ = 0;
                  $13640 = $13639&1;
                  if ($13640) {
                   label = 1587;
                   break L1;
                  }
                  $13641 = ((($13638)) + 19|0);
                  $13642 = ((($13641)) + 1|0);
                  HEAP8[$13642>>0] = $13637;
                  $13643 = ((($4)) + 541|0);
                  $13644 = HEAP8[$13643>>0]|0;
                  __THREW__ = 0;
                  $13645 = (invoke_iii(416,($vinfos219|0),1)|0);
                  $13646 = __THREW__; __THREW__ = 0;
                  $13647 = $13646&1;
                  if ($13647) {
                   label = 1587;
                   break L1;
                  }
                  $13648 = ((($13645)) + 18|0);
                  HEAP8[$13648>>0] = $13644;
                  __THREW__ = 0;
                  $13649 = (invoke_iii(416,($vinfos219|0),2)|0);
                  $13650 = __THREW__; __THREW__ = 0;
                  $13651 = $13650&1;
                  if ($13651) {
                   label = 1587;
                   break L1;
                  }
                  $13652 = ((($13649)) + 17|0);
                  HEAP8[$13652>>0] = 1;
                  $13653 = ((($4)) + 80|0);
                  $13654 = +HEAPF64[$13653>>3];
                  __THREW__ = 0;
                  $13655 = (invoke_iii(416,($vinfos219|0),2)|0);
                  $13656 = __THREW__; __THREW__ = 0;
                  $13657 = $13656&1;
                  if ($13657) {
                   label = 1587;
                   break L1;
                  }
                  $13658 = ((($13655)) + 8|0);
                  HEAPF64[$13658>>3] = $13654;
                  $13659 = ((($4)) + 542|0);
                  $13660 = HEAP8[$13659>>0]|0;
                  __THREW__ = 0;
                  $13661 = (invoke_iii(416,($vinfos219|0),2)|0);
                  $13662 = __THREW__; __THREW__ = 0;
                  $13663 = $13662&1;
                  if ($13663) {
                   label = 1587;
                   break L1;
                  }
                  $13664 = ((($13661)) + 19|0);
                  HEAP8[$13664>>0] = $13660;
                  $13665 = ((($4)) + 542|0);
                  $13666 = ((($13665)) + 1|0);
                  $13667 = HEAP8[$13666>>0]|0;
                  __THREW__ = 0;
                  $13668 = (invoke_iii(416,($vinfos219|0),2)|0);
                  $13669 = __THREW__; __THREW__ = 0;
                  $13670 = $13669&1;
                  if ($13670) {
                   label = 1587;
                   break L1;
                  }
                  $13671 = ((($13668)) + 19|0);
                  $13672 = ((($13671)) + 1|0);
                  HEAP8[$13672>>0] = $13667;
                  $13673 = ((($4)) + 544|0);
                  $13674 = HEAP8[$13673>>0]|0;
                  __THREW__ = 0;
                  $13675 = (invoke_iii(416,($vinfos219|0),2)|0);
                  $13676 = __THREW__; __THREW__ = 0;
                  $13677 = $13676&1;
                  if ($13677) {
                   label = 1587;
                   break L1;
                  }
                  $13678 = ((($13675)) + 18|0);
                  HEAP8[$13678>>0] = $13674;
                  __THREW__ = 0;
                  $13679 = (invoke_iii(416,($vinfos219|0),3)|0);
                  $13680 = __THREW__; __THREW__ = 0;
                  $13681 = $13680&1;
                  if ($13681) {
                   label = 1587;
                   break L1;
                  }
                  $13682 = ((($13679)) + 17|0);
                  HEAP8[$13682>>0] = 1;
                  $13683 = ((($4)) + 120|0);
                  $13684 = +HEAPF64[$13683>>3];
                  __THREW__ = 0;
                  $13685 = (invoke_iii(416,($vinfos219|0),3)|0);
                  $13686 = __THREW__; __THREW__ = 0;
                  $13687 = $13686&1;
                  if ($13687) {
                   label = 1587;
                   break L1;
                  }
                  $13688 = ((($13685)) + 8|0);
                  HEAPF64[$13688>>3] = $13684;
                  $13689 = ((($4)) + 545|0);
                  $13690 = HEAP8[$13689>>0]|0;
                  __THREW__ = 0;
                  $13691 = (invoke_iii(416,($vinfos219|0),3)|0);
                  $13692 = __THREW__; __THREW__ = 0;
                  $13693 = $13692&1;
                  if ($13693) {
                   label = 1587;
                   break L1;
                  }
                  $13694 = ((($13691)) + 19|0);
                  HEAP8[$13694>>0] = $13690;
                  $13695 = ((($4)) + 545|0);
                  $13696 = ((($13695)) + 1|0);
                  $13697 = HEAP8[$13696>>0]|0;
                  __THREW__ = 0;
                  $13698 = (invoke_iii(416,($vinfos219|0),3)|0);
                  $13699 = __THREW__; __THREW__ = 0;
                  $13700 = $13699&1;
                  if ($13700) {
                   label = 1587;
                   break L1;
                  }
                  $13701 = ((($13698)) + 19|0);
                  $13702 = ((($13701)) + 1|0);
                  HEAP8[$13702>>0] = $13697;
                  $13703 = ((($4)) + 547|0);
                  $13704 = HEAP8[$13703>>0]|0;
                  __THREW__ = 0;
                  $13705 = (invoke_iii(416,($vinfos219|0),3)|0);
                  $13706 = __THREW__; __THREW__ = 0;
                  $13707 = $13706&1;
                  if ($13707) {
                   label = 1587;
                   break L1;
                  }
                  $13708 = ((($13705)) + 18|0);
                  HEAP8[$13708>>0] = $13704;
                  __THREW__ = 0;
                  $13709 = (invoke_iii(416,($vinfos219|0),4)|0);
                  $13710 = __THREW__; __THREW__ = 0;
                  $13711 = $13710&1;
                  if ($13711) {
                   label = 1587;
                   break L1;
                  }
                  $13712 = ((($13709)) + 17|0);
                  HEAP8[$13712>>0] = 1;
                  $13713 = ((($4)) + 160|0);
                  $13714 = +HEAPF64[$13713>>3];
                  __THREW__ = 0;
                  $13715 = (invoke_iii(416,($vinfos219|0),4)|0);
                  $13716 = __THREW__; __THREW__ = 0;
                  $13717 = $13716&1;
                  if ($13717) {
                   label = 1587;
                   break L1;
                  }
                  $13718 = ((($13715)) + 8|0);
                  HEAPF64[$13718>>3] = $13714;
                  $13719 = ((($4)) + 548|0);
                  $13720 = HEAP8[$13719>>0]|0;
                  __THREW__ = 0;
                  $13721 = (invoke_iii(416,($vinfos219|0),4)|0);
                  $13722 = __THREW__; __THREW__ = 0;
                  $13723 = $13722&1;
                  if ($13723) {
                   label = 1587;
                   break L1;
                  }
                  $13724 = ((($13721)) + 19|0);
                  HEAP8[$13724>>0] = $13720;
                  $13725 = ((($4)) + 548|0);
                  $13726 = ((($13725)) + 1|0);
                  $13727 = HEAP8[$13726>>0]|0;
                  __THREW__ = 0;
                  $13728 = (invoke_iii(416,($vinfos219|0),4)|0);
                  $13729 = __THREW__; __THREW__ = 0;
                  $13730 = $13729&1;
                  if ($13730) {
                   label = 1587;
                   break L1;
                  }
                  $13731 = ((($13728)) + 19|0);
                  $13732 = ((($13731)) + 1|0);
                  HEAP8[$13732>>0] = $13727;
                  $13733 = ((($4)) + 550|0);
                  $13734 = HEAP8[$13733>>0]|0;
                  __THREW__ = 0;
                  $13735 = (invoke_iii(416,($vinfos219|0),4)|0);
                  $13736 = __THREW__; __THREW__ = 0;
                  $13737 = $13736&1;
                  if ($13737) {
                   label = 1587;
                   break L1;
                  }
                  $13738 = ((($13735)) + 18|0);
                  HEAP8[$13738>>0] = $13734;
                  __THREW__ = 0;
                  $13739 = (invoke_iii(416,($vinfos219|0),5)|0);
                  $13740 = __THREW__; __THREW__ = 0;
                  $13741 = $13740&1;
                  if ($13741) {
                   label = 1587;
                   break L1;
                  }
                  $13742 = ((($13739)) + 17|0);
                  HEAP8[$13742>>0] = 1;
                  $13743 = ((($4)) + 200|0);
                  $13744 = +HEAPF64[$13743>>3];
                  __THREW__ = 0;
                  $13745 = (invoke_iii(416,($vinfos219|0),5)|0);
                  $13746 = __THREW__; __THREW__ = 0;
                  $13747 = $13746&1;
                  if ($13747) {
                   label = 1587;
                   break L1;
                  }
                  $13748 = ((($13745)) + 8|0);
                  HEAPF64[$13748>>3] = $13744;
                  $13749 = ((($4)) + 551|0);
                  $13750 = HEAP8[$13749>>0]|0;
                  __THREW__ = 0;
                  $13751 = (invoke_iii(416,($vinfos219|0),5)|0);
                  $13752 = __THREW__; __THREW__ = 0;
                  $13753 = $13752&1;
                  if ($13753) {
                   label = 1587;
                   break L1;
                  }
                  $13754 = ((($13751)) + 19|0);
                  HEAP8[$13754>>0] = $13750;
                  $13755 = ((($4)) + 551|0);
                  $13756 = ((($13755)) + 1|0);
                  $13757 = HEAP8[$13756>>0]|0;
                  __THREW__ = 0;
                  $13758 = (invoke_iii(416,($vinfos219|0),5)|0);
                  $13759 = __THREW__; __THREW__ = 0;
                  $13760 = $13759&1;
                  if ($13760) {
                   label = 1587;
                   break L1;
                  }
                  $13761 = ((($13758)) + 19|0);
                  $13762 = ((($13761)) + 1|0);
                  HEAP8[$13762>>0] = $13757;
                  $13763 = ((($4)) + 553|0);
                  $13764 = HEAP8[$13763>>0]|0;
                  __THREW__ = 0;
                  $13765 = (invoke_iii(416,($vinfos219|0),5)|0);
                  $13766 = __THREW__; __THREW__ = 0;
                  $13767 = $13766&1;
                  if ($13767) {
                   label = 1587;
                   break L1;
                  }
                  $13768 = ((($13765)) + 18|0);
                  HEAP8[$13768>>0] = $13764;
                  __THREW__ = 0;
                  invoke_vii(417,($vfree220|0),0);
                  $13769 = __THREW__; __THREW__ = 0;
                  $13770 = $13769&1;
                  if ($13770) {
                   label = 1587;
                   break L1;
                  }
                  $13771 = $1;
                  $13772 = HEAP32[$13771>>2]|0;
                  $13773 = ((($13772)) + 8|0);
                  $13774 = HEAP32[$13773>>2]|0;
                  __THREW__ = 0;
                  (invoke_iiii($13774|0,($13771|0),($vinfos219|0),($vfree220|0))|0);
                  $13775 = __THREW__; __THREW__ = 0;
                  $13776 = $13775&1;
                  if ($13776) {
                   label = 1588;
                   break L1;
                  }
                  __THREW__ = 0;
                  invoke_vi(371,($vfree220|0));
                  $13777 = __THREW__; __THREW__ = 0;
                  $13778 = $13777&1;
                  if ($13778) {
                   label = 1587;
                   break L1;
                  }
                  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos219);
                 }
                } while(0);
                $13779 = $ij5216;
                $13780 = (($13779) + 1)|0;
                $ij5216 = $13780;
               }
              }
             } while(0);
             $13789 = $bgotonextstatement211;
             $13790 = $13789&1;
             if (!($13790)) {
              break;
             }
             $bgotonextstatement221 = 1;
             $13791 = ((($4)) + 432|0);
             $13792 = +HEAPF64[$13791>>3];
             $13793 = ((($4)) + 168|0);
             $13794 = +HEAPF64[$13793>>3];
             $13795 = -1.0 * $13794;
             $13796 = $13792 + $13795;
             $x420 = $13796;
             $13797 = ((($4)) + 168|0);
             $13798 = +HEAPF64[$13797>>3];
             $13799 = 1.0 * $13798;
             $x421 = $13799;
             $13800 = ((($4)) + 176|0);
             $13801 = +HEAPF64[$13800>>3];
             $13802 = 1.0 * $13801;
             $x422 = $13802;
             $13803 = ((($4)) + 120|0);
             $13804 = +HEAPF64[$13803>>3];
             $13805 = -3.14159265358979 + $13804;
             $13806 = (+__Z5IKabsd($13805));
             $13807 = 3.14159265358979 + $13806;
             $13808 = (+__Z6IKfmoddd($13807,6.2831853071795898));
             $13809 = -3.14159265358979 + $13808;
             HEAPF64[$evalcond150>>3] = $13809;
             $13810 = $x420;
             $13811 = ((($evalcond150)) + 8|0);
             HEAPF64[$13811>>3] = $13810;
             $13812 = $x420;
             $13813 = ((($evalcond150)) + 16|0);
             HEAPF64[$13813>>3] = $13812;
             $13814 = ((($4)) + 176|0);
             $13815 = +HEAPF64[$13814>>3];
             $13816 = ((($4)) + 288|0);
             $13817 = +HEAPF64[$13816>>3];
             $13818 = $13815 + $13817;
             $13819 = ((($evalcond150)) + 24|0);
             HEAPF64[$13819>>3] = $13818;
             $13820 = ((($4)) + 360|0);
             $13821 = +HEAPF64[$13820>>3];
             $13822 = ((($evalcond150)) + 32|0);
             HEAPF64[$13822>>3] = $13821;
             $13823 = $x422;
             $13824 = -1.0 * $13823;
             $13825 = ((($4)) + 288|0);
             $13826 = +HEAPF64[$13825>>3];
             $13827 = -1.0 * $13826;
             $13828 = $13824 + $13827;
             $13829 = ((($evalcond150)) + 40|0);
             HEAPF64[$13829>>3] = $13828;
             $13830 = ((($4)) + 432|0);
             $13831 = +HEAPF64[$13830>>3];
             $13832 = -1.0 * $13831;
             $13833 = $x422;
             $13834 = $13832 * $13833;
             $13835 = ((($4)) + 288|0);
             $13836 = +HEAPF64[$13835>>3];
             $13837 = -1.0 * $13836;
             $13838 = $x421;
             $13839 = $13837 * $13838;
             $13840 = $13834 + $13839;
             $13841 = ((($evalcond150)) + 48|0);
             HEAPF64[$13841>>3] = $13840;
             $13842 = ((($4)) + 240|0);
             $13843 = +HEAPF64[$13842>>3];
             $13844 = ((($4)) + 176|0);
             $13845 = +HEAPF64[$13844>>3];
             $13846 = $13843 * $13845;
             $13847 = ((($4)) + 384|0);
             $13848 = +HEAPF64[$13847>>3];
             $13849 = -1.0 * $13848;
             $13850 = $x421;
             $13851 = $13849 * $13850;
             $13852 = $13846 + $13851;
             $13853 = ((($evalcond150)) + 56|0);
             HEAPF64[$13853>>3] = $13852;
             $13854 = ((($4)) + 264|0);
             $13855 = +HEAPF64[$13854>>3];
             $13856 = ((($4)) + 176|0);
             $13857 = +HEAPF64[$13856>>3];
             $13858 = $13855 * $13857;
             $13859 = ((($4)) + 408|0);
             $13860 = +HEAPF64[$13859>>3];
             $13861 = -1.0 * $13860;
             $13862 = $x421;
             $13863 = $13861 * $13862;
             $13864 = $13858 + $13863;
             $13865 = ((($evalcond150)) + 64|0);
             HEAPF64[$13865>>3] = $13864;
             $13866 = ((($4)) + 288|0);
             $13867 = +HEAPF64[$13866>>3];
             $13868 = ((($4)) + 176|0);
             $13869 = +HEAPF64[$13868>>3];
             $13870 = $13867 * $13869;
             $13871 = 1.0 + $13870;
             $13872 = ((($4)) + 432|0);
             $13873 = +HEAPF64[$13872>>3];
             $13874 = -1.0 * $13873;
             $13875 = $x421;
             $13876 = $13874 * $13875;
             $13877 = $13871 + $13876;
             $13878 = ((($evalcond150)) + 72|0);
             HEAPF64[$13878>>3] = $13877;
             $13879 = +HEAPF64[$evalcond150>>3];
             $13880 = (+__Z5IKabsd($13879));
             $13881 = $13880 < 9.9999999999999995E-7;
             L840: do {
              if ($13881) {
               $13882 = ((($evalcond150)) + 8|0);
               $13883 = +HEAPF64[$13882>>3];
               $13884 = (+__Z5IKabsd($13883));
               $13885 = $13884 < 9.9999999999999995E-7;
               if (!($13885)) {
                break;
               }
               $13886 = ((($evalcond150)) + 16|0);
               $13887 = +HEAPF64[$13886>>3];
               $13888 = (+__Z5IKabsd($13887));
               $13889 = $13888 < 9.9999999999999995E-7;
               if (!($13889)) {
                break;
               }
               $13890 = ((($evalcond150)) + 24|0);
               $13891 = +HEAPF64[$13890>>3];
               $13892 = (+__Z5IKabsd($13891));
               $13893 = $13892 < 9.9999999999999995E-7;
               if (!($13893)) {
                break;
               }
               $13894 = ((($evalcond150)) + 32|0);
               $13895 = +HEAPF64[$13894>>3];
               $13896 = (+__Z5IKabsd($13895));
               $13897 = $13896 < 9.9999999999999995E-7;
               if (!($13897)) {
                break;
               }
               $13898 = ((($evalcond150)) + 40|0);
               $13899 = +HEAPF64[$13898>>3];
               $13900 = (+__Z5IKabsd($13899));
               $13901 = $13900 < 9.9999999999999995E-7;
               if (!($13901)) {
                break;
               }
               $13902 = ((($evalcond150)) + 48|0);
               $13903 = +HEAPF64[$13902>>3];
               $13904 = (+__Z5IKabsd($13903));
               $13905 = $13904 < 9.9999999999999995E-7;
               if (!($13905)) {
                break;
               }
               $13906 = ((($evalcond150)) + 56|0);
               $13907 = +HEAPF64[$13906>>3];
               $13908 = (+__Z5IKabsd($13907));
               $13909 = $13908 < 9.9999999999999995E-7;
               if (!($13909)) {
                break;
               }
               $13910 = ((($evalcond150)) + 64|0);
               $13911 = +HEAPF64[$13910>>3];
               $13912 = (+__Z5IKabsd($13911));
               $13913 = $13912 < 9.9999999999999995E-7;
               if (!($13913)) {
                break;
               }
               $13914 = ((($evalcond150)) + 72|0);
               $13915 = +HEAPF64[$13914>>3];
               $13916 = (+__Z5IKabsd($13915));
               $13917 = $13916 < 9.9999999999999995E-7;
               if (!($13917)) {
                break;
               }
               $bgotonextstatement221 = 0;
               ;HEAP8[$j5valid225>>0]=0|0;
               $13918 = ((($4)) + 553|0);
               HEAP8[$13918>>0] = 1;
               $13919 = ((($4)) + 408|0);
               $13920 = +HEAPF64[$13919>>3];
               $13921 = -1.0 * $13920;
               $13922 = ((($4)) + 384|0);
               $13923 = +HEAPF64[$13922>>3];
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x423,$13921,$13923,1.9999999999999999E-6);
               $13924 = ((($x423)) + 8|0);
               $13925 = HEAP8[$13924>>0]|0;
               $13926 = $13925&1;
               if (!($13926)) {
                break;
               }
               $13927 = ((($4)) + 288|0);
               $13928 = +HEAPF64[$13927>>3];
               $13929 = (+__Z6IKsignd($13928));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x424,$13929,-1);
               $13930 = ((($x424)) + 8|0);
               $13931 = HEAP8[$13930>>0]|0;
               $13932 = $13931&1;
               if (!($13932)) {
                break;
               }
               $13933 = +HEAPF64[$x423>>3];
               $13934 = -1.5707963267949001 + $13933;
               $13935 = +HEAPF64[$x424>>3];
               $13936 = 1.5707963267949001 * $13935;
               $13937 = $13934 + $13936;
               HEAPF64[$j5array222>>3] = $13937;
               $13938 = +HEAPF64[$j5array222>>3];
               $13939 = (+__Z5IKsind($13938));
               HEAPF64[$sj5array224>>3] = $13939;
               $13940 = +HEAPF64[$j5array222>>3];
               $13941 = (+__Z5IKcosd($13940));
               HEAPF64[$cj5array223>>3] = $13941;
               $13942 = +HEAPF64[$j5array222>>3];
               $13943 = $13942 > 3.14159265358979;
               $13944 = +HEAPF64[$j5array222>>3];
               do {
                if ($13943) {
                 $13945 = $13944 - 6.2831853071795898;
                 HEAPF64[$j5array222>>3] = $13945;
                } else {
                 $13946 = $13944 < -3.14159265358979;
                 if (!($13946)) {
                  break;
                 }
                 $13947 = +HEAPF64[$j5array222>>3];
                 $13948 = $13947 + 6.2831853071795898;
                 HEAPF64[$j5array222>>3] = $13948;
                }
               } while(0);
               HEAP8[$j5valid225>>0] = 1;
               $ij5226 = 0;
               while(1) {
                $13949 = $ij5226;
                $13950 = ($13949|0)<(1);
                if (!($13950)) {
                 break L840;
                }
                $13951 = $ij5226;
                $13952 = (($j5valid225) + ($13951)|0);
                $13953 = HEAP8[$13952>>0]|0;
                $13954 = $13953&1;
                do {
                 if ($13954) {
                  $13955 = $ij5226;
                  $13956 = $13955&255;
                  $13957 = ((($4)) + 551|0);
                  HEAP8[$13957>>0] = $13956;
                  $13958 = ((($4)) + 551|0);
                  $13959 = ((($13958)) + 1|0);
                  HEAP8[$13959>>0] = -1;
                  $13960 = $ij5226;
                  $13961 = (($13960) + 1)|0;
                  $iij5227 = $13961;
                  L863: while(1) {
                   $13962 = $iij5227;
                   $13963 = ($13962|0)<(1);
                   if (!($13963)) {
                    break;
                   }
                   $13964 = $iij5227;
                   $13965 = (($j5valid225) + ($13964)|0);
                   $13966 = HEAP8[$13965>>0]|0;
                   $13967 = $13966&1;
                   do {
                    if ($13967) {
                     $13968 = $ij5226;
                     $13969 = (($cj5array223) + ($13968<<3)|0);
                     $13970 = +HEAPF64[$13969>>3];
                     $13971 = $iij5227;
                     $13972 = (($cj5array223) + ($13971<<3)|0);
                     $13973 = +HEAPF64[$13972>>3];
                     $13974 = $13970 - $13973;
                     $13975 = (+__Z5IKabsd($13974));
                     $13976 = $13975 < 9.9999999999999995E-7;
                     if (!($13976)) {
                      break;
                     }
                     $13977 = $ij5226;
                     $13978 = (($sj5array224) + ($13977<<3)|0);
                     $13979 = +HEAPF64[$13978>>3];
                     $13980 = $iij5227;
                     $13981 = (($sj5array224) + ($13980<<3)|0);
                     $13982 = +HEAPF64[$13981>>3];
                     $13983 = $13979 - $13982;
                     $13984 = (+__Z5IKabsd($13983));
                     $13985 = $13984 < 9.9999999999999995E-7;
                     if ($13985) {
                      label = 1615;
                      break L863;
                     }
                    }
                   } while(0);
                   $13992 = $iij5227;
                   $13993 = (($13992) + 1)|0;
                   $iij5227 = $13993;
                  }
                  if ((label|0) == 1615) {
                   label = 0;
                   $13986 = $iij5227;
                   $13987 = (($j5valid225) + ($13986)|0);
                   HEAP8[$13987>>0] = 0;
                   $13988 = $iij5227;
                   $13989 = $13988&255;
                   $13990 = ((($4)) + 551|0);
                   $13991 = ((($13990)) + 1|0);
                   HEAP8[$13991>>0] = $13989;
                  }
                  $13994 = $ij5226;
                  $13995 = (($j5array222) + ($13994<<3)|0);
                  $13996 = +HEAPF64[$13995>>3];
                  $13997 = ((($4)) + 200|0);
                  HEAPF64[$13997>>3] = $13996;
                  $13998 = $ij5226;
                  $13999 = (($cj5array223) + ($13998<<3)|0);
                  $14000 = +HEAPF64[$13999>>3];
                  $14001 = ((($4)) + 208|0);
                  HEAPF64[$14001>>3] = $14000;
                  $14002 = $ij5226;
                  $14003 = (($sj5array224) + ($14002<<3)|0);
                  $14004 = +HEAPF64[$14003>>3];
                  $14005 = ((($4)) + 216|0);
                  HEAPF64[$14005>>3] = $14004;
                  $14006 = ((($4)) + 200|0);
                  $14007 = +HEAPF64[$14006>>3];
                  $14008 = (+__Z5IKsind($14007));
                  $x425 = $14008;
                  $14009 = ((($4)) + 200|0);
                  $14010 = +HEAPF64[$14009>>3];
                  $14011 = (+__Z5IKcosd($14010));
                  $x426 = $14011;
                  $14012 = ((($4)) + 240|0);
                  $14013 = +HEAPF64[$14012>>3];
                  $14014 = 1.0 * $14013;
                  $x427 = $14014;
                  $14015 = ((($4)) + 264|0);
                  $14016 = +HEAPF64[$14015>>3];
                  $14017 = 1.0 * $14016;
                  $x428 = $14017;
                  $14018 = $x426;
                  $14019 = 1.0 * $14018;
                  $x429 = $14019;
                  $14020 = ((($4)) + 408|0);
                  $14021 = +HEAPF64[$14020>>3];
                  $14022 = ((($4)) + 288|0);
                  $14023 = +HEAPF64[$14022>>3];
                  $14024 = $x425;
                  $14025 = $14023 * $14024;
                  $14026 = $14021 + $14025;
                  HEAPF64[$evalcond228>>3] = $14026;
                  $14027 = ((($4)) + 288|0);
                  $14028 = +HEAPF64[$14027>>3];
                  $14029 = -1.0 * $14028;
                  $14030 = $x429;
                  $14031 = $14029 * $14030;
                  $14032 = ((($4)) + 384|0);
                  $14033 = +HEAPF64[$14032>>3];
                  $14034 = $14031 + $14033;
                  $14035 = ((($evalcond228)) + 8|0);
                  HEAPF64[$14035>>3] = $14034;
                  $14036 = $x425;
                  $14037 = -1.0 * $14036;
                  $14038 = ((($4)) + 312|0);
                  $14039 = +HEAPF64[$14038>>3];
                  $14040 = -1.0 * $14039;
                  $14041 = $14037 + $14040;
                  $14042 = ((($evalcond228)) + 16|0);
                  HEAPF64[$14042>>3] = $14041;
                  $14043 = $x429;
                  $14044 = -1.0 * $14043;
                  $14045 = ((($4)) + 336|0);
                  $14046 = +HEAPF64[$14045>>3];
                  $14047 = -1.0 * $14046;
                  $14048 = $14044 + $14047;
                  $14049 = ((($evalcond228)) + 24|0);
                  HEAPF64[$14049>>3] = $14048;
                  $14050 = ((($4)) + 432|0);
                  $14051 = +HEAPF64[$14050>>3];
                  $14052 = $x425;
                  $14053 = $14051 * $14052;
                  $14054 = $x428;
                  $14055 = -1.0 * $14054;
                  $14056 = $14053 + $14055;
                  $14057 = ((($evalcond228)) + 32|0);
                  HEAPF64[$14057>>3] = $14056;
                  $14058 = ((($4)) + 432|0);
                  $14059 = +HEAPF64[$14058>>3];
                  $14060 = -1.0 * $14059;
                  $14061 = $x429;
                  $14062 = $14060 * $14061;
                  $14063 = $x427;
                  $14064 = -1.0 * $14063;
                  $14065 = $14062 + $14064;
                  $14066 = ((($evalcond228)) + 40|0);
                  HEAPF64[$14066>>3] = $14065;
                  $14067 = ((($4)) + 432|0);
                  $14068 = +HEAPF64[$14067>>3];
                  $14069 = -1.0 * $14068;
                  $14070 = $x428;
                  $14071 = $14069 * $14070;
                  $14072 = $x425;
                  $14073 = $14071 + $14072;
                  $14074 = ((($4)) + 288|0);
                  $14075 = +HEAPF64[$14074>>3];
                  $14076 = ((($4)) + 408|0);
                  $14077 = +HEAPF64[$14076>>3];
                  $14078 = $14075 * $14077;
                  $14079 = $14073 + $14078;
                  $14080 = ((($evalcond228)) + 48|0);
                  HEAPF64[$14080>>3] = $14079;
                  $14081 = ((($4)) + 432|0);
                  $14082 = +HEAPF64[$14081>>3];
                  $14083 = -1.0 * $14082;
                  $14084 = $x427;
                  $14085 = $14083 * $14084;
                  $14086 = $x429;
                  $14087 = -1.0 * $14086;
                  $14088 = $14085 + $14087;
                  $14089 = ((($4)) + 288|0);
                  $14090 = +HEAPF64[$14089>>3];
                  $14091 = ((($4)) + 384|0);
                  $14092 = +HEAPF64[$14091>>3];
                  $14093 = $14090 * $14092;
                  $14094 = $14088 + $14093;
                  $14095 = ((($evalcond228)) + 56|0);
                  HEAPF64[$14095>>3] = $14094;
                  $14096 = +HEAPF64[$evalcond228>>3];
                  $14097 = (+__Z5IKabsd($14096));
                  $14098 = $14097 > 5.0000000000000004E-6;
                  if ($14098) {
                   break;
                  }
                  $14099 = ((($evalcond228)) + 8|0);
                  $14100 = +HEAPF64[$14099>>3];
                  $14101 = (+__Z5IKabsd($14100));
                  $14102 = $14101 > 5.0000000000000004E-6;
                  if ($14102) {
                   break;
                  }
                  $14103 = ((($evalcond228)) + 16|0);
                  $14104 = +HEAPF64[$14103>>3];
                  $14105 = (+__Z5IKabsd($14104));
                  $14106 = $14105 > 5.0000000000000004E-6;
                  if ($14106) {
                   break;
                  }
                  $14107 = ((($evalcond228)) + 24|0);
                  $14108 = +HEAPF64[$14107>>3];
                  $14109 = (+__Z5IKabsd($14108));
                  $14110 = $14109 > 5.0000000000000004E-6;
                  if ($14110) {
                   break;
                  }
                  $14111 = ((($evalcond228)) + 32|0);
                  $14112 = +HEAPF64[$14111>>3];
                  $14113 = (+__Z5IKabsd($14112));
                  $14114 = $14113 > 5.0000000000000004E-6;
                  if ($14114) {
                   break;
                  }
                  $14115 = ((($evalcond228)) + 40|0);
                  $14116 = +HEAPF64[$14115>>3];
                  $14117 = (+__Z5IKabsd($14116));
                  $14118 = $14117 > 5.0000000000000004E-6;
                  if ($14118) {
                   break;
                  }
                  $14119 = ((($evalcond228)) + 48|0);
                  $14120 = +HEAPF64[$14119>>3];
                  $14121 = (+__Z5IKabsd($14120));
                  $14122 = $14121 > 5.0000000000000004E-6;
                  if ($14122) {
                   break;
                  }
                  $14123 = ((($evalcond228)) + 56|0);
                  $14124 = +HEAPF64[$14123>>3];
                  $14125 = (+__Z5IKabsd($14124));
                  $14126 = $14125 > 5.0000000000000004E-6;
                  if ($14126) {
                   break;
                  }
                  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos229,6);
                  __THREW__ = 0;
                  $14127 = (invoke_iii(416,($vinfos229|0),0)|0);
                  $14128 = __THREW__; __THREW__ = 0;
                  $14129 = $14128&1;
                  if ($14129) {
                   label = 1660;
                   break L1;
                  }
                  $14130 = ((($14127)) + 17|0);
                  HEAP8[$14130>>0] = 1;
                  $14131 = +HEAPF64[$4>>3];
                  __THREW__ = 0;
                  $14132 = (invoke_iii(416,($vinfos229|0),0)|0);
                  $14133 = __THREW__; __THREW__ = 0;
                  $14134 = $14133&1;
                  if ($14134) {
                   label = 1660;
                   break L1;
                  }
                  $14135 = ((($14132)) + 8|0);
                  HEAPF64[$14135>>3] = $14131;
                  $14136 = ((($4)) + 536|0);
                  $14137 = HEAP8[$14136>>0]|0;
                  __THREW__ = 0;
                  $14138 = (invoke_iii(416,($vinfos229|0),0)|0);
                  $14139 = __THREW__; __THREW__ = 0;
                  $14140 = $14139&1;
                  if ($14140) {
                   label = 1660;
                   break L1;
                  }
                  $14141 = ((($14138)) + 19|0);
                  HEAP8[$14141>>0] = $14137;
                  $14142 = ((($4)) + 536|0);
                  $14143 = ((($14142)) + 1|0);
                  $14144 = HEAP8[$14143>>0]|0;
                  __THREW__ = 0;
                  $14145 = (invoke_iii(416,($vinfos229|0),0)|0);
                  $14146 = __THREW__; __THREW__ = 0;
                  $14147 = $14146&1;
                  if ($14147) {
                   label = 1660;
                   break L1;
                  }
                  $14148 = ((($14145)) + 19|0);
                  $14149 = ((($14148)) + 1|0);
                  HEAP8[$14149>>0] = $14144;
                  $14150 = ((($4)) + 538|0);
                  $14151 = HEAP8[$14150>>0]|0;
                  __THREW__ = 0;
                  $14152 = (invoke_iii(416,($vinfos229|0),0)|0);
                  $14153 = __THREW__; __THREW__ = 0;
                  $14154 = $14153&1;
                  if ($14154) {
                   label = 1660;
                   break L1;
                  }
                  $14155 = ((($14152)) + 18|0);
                  HEAP8[$14155>>0] = $14151;
                  __THREW__ = 0;
                  $14156 = (invoke_iii(416,($vinfos229|0),1)|0);
                  $14157 = __THREW__; __THREW__ = 0;
                  $14158 = $14157&1;
                  if ($14158) {
                   label = 1660;
                   break L1;
                  }
                  $14159 = ((($14156)) + 17|0);
                  HEAP8[$14159>>0] = 1;
                  $14160 = ((($4)) + 40|0);
                  $14161 = +HEAPF64[$14160>>3];
                  __THREW__ = 0;
                  $14162 = (invoke_iii(416,($vinfos229|0),1)|0);
                  $14163 = __THREW__; __THREW__ = 0;
                  $14164 = $14163&1;
                  if ($14164) {
                   label = 1660;
                   break L1;
                  }
                  $14165 = ((($14162)) + 8|0);
                  HEAPF64[$14165>>3] = $14161;
                  $14166 = ((($4)) + 539|0);
                  $14167 = HEAP8[$14166>>0]|0;
                  __THREW__ = 0;
                  $14168 = (invoke_iii(416,($vinfos229|0),1)|0);
                  $14169 = __THREW__; __THREW__ = 0;
                  $14170 = $14169&1;
                  if ($14170) {
                   label = 1660;
                   break L1;
                  }
                  $14171 = ((($14168)) + 19|0);
                  HEAP8[$14171>>0] = $14167;
                  $14172 = ((($4)) + 539|0);
                  $14173 = ((($14172)) + 1|0);
                  $14174 = HEAP8[$14173>>0]|0;
                  __THREW__ = 0;
                  $14175 = (invoke_iii(416,($vinfos229|0),1)|0);
                  $14176 = __THREW__; __THREW__ = 0;
                  $14177 = $14176&1;
                  if ($14177) {
                   label = 1660;
                   break L1;
                  }
                  $14178 = ((($14175)) + 19|0);
                  $14179 = ((($14178)) + 1|0);
                  HEAP8[$14179>>0] = $14174;
                  $14180 = ((($4)) + 541|0);
                  $14181 = HEAP8[$14180>>0]|0;
                  __THREW__ = 0;
                  $14182 = (invoke_iii(416,($vinfos229|0),1)|0);
                  $14183 = __THREW__; __THREW__ = 0;
                  $14184 = $14183&1;
                  if ($14184) {
                   label = 1660;
                   break L1;
                  }
                  $14185 = ((($14182)) + 18|0);
                  HEAP8[$14185>>0] = $14181;
                  __THREW__ = 0;
                  $14186 = (invoke_iii(416,($vinfos229|0),2)|0);
                  $14187 = __THREW__; __THREW__ = 0;
                  $14188 = $14187&1;
                  if ($14188) {
                   label = 1660;
                   break L1;
                  }
                  $14189 = ((($14186)) + 17|0);
                  HEAP8[$14189>>0] = 1;
                  $14190 = ((($4)) + 80|0);
                  $14191 = +HEAPF64[$14190>>3];
                  __THREW__ = 0;
                  $14192 = (invoke_iii(416,($vinfos229|0),2)|0);
                  $14193 = __THREW__; __THREW__ = 0;
                  $14194 = $14193&1;
                  if ($14194) {
                   label = 1660;
                   break L1;
                  }
                  $14195 = ((($14192)) + 8|0);
                  HEAPF64[$14195>>3] = $14191;
                  $14196 = ((($4)) + 542|0);
                  $14197 = HEAP8[$14196>>0]|0;
                  __THREW__ = 0;
                  $14198 = (invoke_iii(416,($vinfos229|0),2)|0);
                  $14199 = __THREW__; __THREW__ = 0;
                  $14200 = $14199&1;
                  if ($14200) {
                   label = 1660;
                   break L1;
                  }
                  $14201 = ((($14198)) + 19|0);
                  HEAP8[$14201>>0] = $14197;
                  $14202 = ((($4)) + 542|0);
                  $14203 = ((($14202)) + 1|0);
                  $14204 = HEAP8[$14203>>0]|0;
                  __THREW__ = 0;
                  $14205 = (invoke_iii(416,($vinfos229|0),2)|0);
                  $14206 = __THREW__; __THREW__ = 0;
                  $14207 = $14206&1;
                  if ($14207) {
                   label = 1660;
                   break L1;
                  }
                  $14208 = ((($14205)) + 19|0);
                  $14209 = ((($14208)) + 1|0);
                  HEAP8[$14209>>0] = $14204;
                  $14210 = ((($4)) + 544|0);
                  $14211 = HEAP8[$14210>>0]|0;
                  __THREW__ = 0;
                  $14212 = (invoke_iii(416,($vinfos229|0),2)|0);
                  $14213 = __THREW__; __THREW__ = 0;
                  $14214 = $14213&1;
                  if ($14214) {
                   label = 1660;
                   break L1;
                  }
                  $14215 = ((($14212)) + 18|0);
                  HEAP8[$14215>>0] = $14211;
                  __THREW__ = 0;
                  $14216 = (invoke_iii(416,($vinfos229|0),3)|0);
                  $14217 = __THREW__; __THREW__ = 0;
                  $14218 = $14217&1;
                  if ($14218) {
                   label = 1660;
                   break L1;
                  }
                  $14219 = ((($14216)) + 17|0);
                  HEAP8[$14219>>0] = 1;
                  $14220 = ((($4)) + 120|0);
                  $14221 = +HEAPF64[$14220>>3];
                  __THREW__ = 0;
                  $14222 = (invoke_iii(416,($vinfos229|0),3)|0);
                  $14223 = __THREW__; __THREW__ = 0;
                  $14224 = $14223&1;
                  if ($14224) {
                   label = 1660;
                   break L1;
                  }
                  $14225 = ((($14222)) + 8|0);
                  HEAPF64[$14225>>3] = $14221;
                  $14226 = ((($4)) + 545|0);
                  $14227 = HEAP8[$14226>>0]|0;
                  __THREW__ = 0;
                  $14228 = (invoke_iii(416,($vinfos229|0),3)|0);
                  $14229 = __THREW__; __THREW__ = 0;
                  $14230 = $14229&1;
                  if ($14230) {
                   label = 1660;
                   break L1;
                  }
                  $14231 = ((($14228)) + 19|0);
                  HEAP8[$14231>>0] = $14227;
                  $14232 = ((($4)) + 545|0);
                  $14233 = ((($14232)) + 1|0);
                  $14234 = HEAP8[$14233>>0]|0;
                  __THREW__ = 0;
                  $14235 = (invoke_iii(416,($vinfos229|0),3)|0);
                  $14236 = __THREW__; __THREW__ = 0;
                  $14237 = $14236&1;
                  if ($14237) {
                   label = 1660;
                   break L1;
                  }
                  $14238 = ((($14235)) + 19|0);
                  $14239 = ((($14238)) + 1|0);
                  HEAP8[$14239>>0] = $14234;
                  $14240 = ((($4)) + 547|0);
                  $14241 = HEAP8[$14240>>0]|0;
                  __THREW__ = 0;
                  $14242 = (invoke_iii(416,($vinfos229|0),3)|0);
                  $14243 = __THREW__; __THREW__ = 0;
                  $14244 = $14243&1;
                  if ($14244) {
                   label = 1660;
                   break L1;
                  }
                  $14245 = ((($14242)) + 18|0);
                  HEAP8[$14245>>0] = $14241;
                  __THREW__ = 0;
                  $14246 = (invoke_iii(416,($vinfos229|0),4)|0);
                  $14247 = __THREW__; __THREW__ = 0;
                  $14248 = $14247&1;
                  if ($14248) {
                   label = 1660;
                   break L1;
                  }
                  $14249 = ((($14246)) + 17|0);
                  HEAP8[$14249>>0] = 1;
                  $14250 = ((($4)) + 160|0);
                  $14251 = +HEAPF64[$14250>>3];
                  __THREW__ = 0;
                  $14252 = (invoke_iii(416,($vinfos229|0),4)|0);
                  $14253 = __THREW__; __THREW__ = 0;
                  $14254 = $14253&1;
                  if ($14254) {
                   label = 1660;
                   break L1;
                  }
                  $14255 = ((($14252)) + 8|0);
                  HEAPF64[$14255>>3] = $14251;
                  $14256 = ((($4)) + 548|0);
                  $14257 = HEAP8[$14256>>0]|0;
                  __THREW__ = 0;
                  $14258 = (invoke_iii(416,($vinfos229|0),4)|0);
                  $14259 = __THREW__; __THREW__ = 0;
                  $14260 = $14259&1;
                  if ($14260) {
                   label = 1660;
                   break L1;
                  }
                  $14261 = ((($14258)) + 19|0);
                  HEAP8[$14261>>0] = $14257;
                  $14262 = ((($4)) + 548|0);
                  $14263 = ((($14262)) + 1|0);
                  $14264 = HEAP8[$14263>>0]|0;
                  __THREW__ = 0;
                  $14265 = (invoke_iii(416,($vinfos229|0),4)|0);
                  $14266 = __THREW__; __THREW__ = 0;
                  $14267 = $14266&1;
                  if ($14267) {
                   label = 1660;
                   break L1;
                  }
                  $14268 = ((($14265)) + 19|0);
                  $14269 = ((($14268)) + 1|0);
                  HEAP8[$14269>>0] = $14264;
                  $14270 = ((($4)) + 550|0);
                  $14271 = HEAP8[$14270>>0]|0;
                  __THREW__ = 0;
                  $14272 = (invoke_iii(416,($vinfos229|0),4)|0);
                  $14273 = __THREW__; __THREW__ = 0;
                  $14274 = $14273&1;
                  if ($14274) {
                   label = 1660;
                   break L1;
                  }
                  $14275 = ((($14272)) + 18|0);
                  HEAP8[$14275>>0] = $14271;
                  __THREW__ = 0;
                  $14276 = (invoke_iii(416,($vinfos229|0),5)|0);
                  $14277 = __THREW__; __THREW__ = 0;
                  $14278 = $14277&1;
                  if ($14278) {
                   label = 1660;
                   break L1;
                  }
                  $14279 = ((($14276)) + 17|0);
                  HEAP8[$14279>>0] = 1;
                  $14280 = ((($4)) + 200|0);
                  $14281 = +HEAPF64[$14280>>3];
                  __THREW__ = 0;
                  $14282 = (invoke_iii(416,($vinfos229|0),5)|0);
                  $14283 = __THREW__; __THREW__ = 0;
                  $14284 = $14283&1;
                  if ($14284) {
                   label = 1660;
                   break L1;
                  }
                  $14285 = ((($14282)) + 8|0);
                  HEAPF64[$14285>>3] = $14281;
                  $14286 = ((($4)) + 551|0);
                  $14287 = HEAP8[$14286>>0]|0;
                  __THREW__ = 0;
                  $14288 = (invoke_iii(416,($vinfos229|0),5)|0);
                  $14289 = __THREW__; __THREW__ = 0;
                  $14290 = $14289&1;
                  if ($14290) {
                   label = 1660;
                   break L1;
                  }
                  $14291 = ((($14288)) + 19|0);
                  HEAP8[$14291>>0] = $14287;
                  $14292 = ((($4)) + 551|0);
                  $14293 = ((($14292)) + 1|0);
                  $14294 = HEAP8[$14293>>0]|0;
                  __THREW__ = 0;
                  $14295 = (invoke_iii(416,($vinfos229|0),5)|0);
                  $14296 = __THREW__; __THREW__ = 0;
                  $14297 = $14296&1;
                  if ($14297) {
                   label = 1660;
                   break L1;
                  }
                  $14298 = ((($14295)) + 19|0);
                  $14299 = ((($14298)) + 1|0);
                  HEAP8[$14299>>0] = $14294;
                  $14300 = ((($4)) + 553|0);
                  $14301 = HEAP8[$14300>>0]|0;
                  __THREW__ = 0;
                  $14302 = (invoke_iii(416,($vinfos229|0),5)|0);
                  $14303 = __THREW__; __THREW__ = 0;
                  $14304 = $14303&1;
                  if ($14304) {
                   label = 1660;
                   break L1;
                  }
                  $14305 = ((($14302)) + 18|0);
                  HEAP8[$14305>>0] = $14301;
                  __THREW__ = 0;
                  invoke_vii(417,($vfree230|0),0);
                  $14306 = __THREW__; __THREW__ = 0;
                  $14307 = $14306&1;
                  if ($14307) {
                   label = 1660;
                   break L1;
                  }
                  $14308 = $1;
                  $14309 = HEAP32[$14308>>2]|0;
                  $14310 = ((($14309)) + 8|0);
                  $14311 = HEAP32[$14310>>2]|0;
                  __THREW__ = 0;
                  (invoke_iiii($14311|0,($14308|0),($vinfos229|0),($vfree230|0))|0);
                  $14312 = __THREW__; __THREW__ = 0;
                  $14313 = $14312&1;
                  if ($14313) {
                   label = 1661;
                   break L1;
                  }
                  __THREW__ = 0;
                  invoke_vi(371,($vfree230|0));
                  $14314 = __THREW__; __THREW__ = 0;
                  $14315 = $14314&1;
                  if ($14315) {
                   label = 1660;
                   break L1;
                  }
                  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos229);
                 }
                } while(0);
                $14316 = $ij5226;
                $14317 = (($14316) + 1)|0;
                $ij5226 = $14317;
               }
              }
             } while(0);
             $14326 = $bgotonextstatement221;
             $14327 = $14326&1;
             if (!($14327)) {
              break;
             }
             $bgotonextstatement231 = 1;
             $bgotonextstatement231 = 0;
            }
           }
          }
         }
        } while(0);
        $16076 = $ij3144;
        $16077 = (($16076) + 1)|0;
        $ij3144 = $16077;
       }
      }
     }
     $456 = ((($4)) + 8|0);
     $457 = +HEAPF64[$456>>3];
     $458 = ((($4)) + 248|0);
     $459 = +HEAPF64[$458>>3];
     $460 = $457 * $459;
     $x109 = $460;
     $461 = ((($4)) + 8|0);
     $462 = +HEAPF64[$461>>3];
     $463 = ((($4)) + 272|0);
     $464 = +HEAPF64[$463>>3];
     $465 = $462 * $464;
     $x110 = $465;
     $466 = ((($4)) + 56|0);
     $467 = +HEAPF64[$466>>3];
     $468 = 1.0 * $467;
     $x111 = $468;
     $469 = ((($4)) + 16|0);
     $470 = +HEAPF64[$469>>3];
     $471 = 1.0 * $470;
     $x112 = $471;
     $472 = ((($4)) + 344|0);
     $473 = +HEAPF64[$472>>3];
     $474 = ((($4)) + 16|0);
     $475 = +HEAPF64[$474>>3];
     $476 = $473 * $475;
     $x113 = $476;
     $477 = ((($4)) + 48|0);
     $478 = +HEAPF64[$477>>3];
     $479 = ((($4)) + 96|0);
     $480 = +HEAPF64[$479>>3];
     $481 = $478 * $480;
     $x114 = $481;
     $482 = ((($4)) + 8|0);
     $483 = +HEAPF64[$482>>3];
     $484 = ((($4)) + 296|0);
     $485 = +HEAPF64[$484>>3];
     $486 = $483 * $485;
     $x115 = $486;
     $487 = $x90;
     $x116 = $487;
     $488 = ((($4)) + 88|0);
     $489 = +HEAPF64[$488>>3];
     $490 = ((($4)) + 56|0);
     $491 = +HEAPF64[$490>>3];
     $492 = $489 * $491;
     $493 = $x114;
     $494 = $492 + $493;
     $x117 = $494;
     $495 = ((($4)) + 8|0);
     $496 = +HEAPF64[$495>>3];
     $497 = $x116;
     $498 = $496 * $497;
     $x118 = $498;
     $499 = ((($4)) + 16|0);
     $500 = +HEAPF64[$499>>3];
     $501 = $x116;
     $502 = $500 * $501;
     $x119 = $502;
     $503 = ((($4)) + 16|0);
     $504 = +HEAPF64[$503>>3];
     $505 = $x117;
     $506 = $504 * $505;
     $x120 = $506;
     $507 = $x95;
     $x121 = $507;
     $508 = ((($4)) + 320|0);
     $509 = +HEAPF64[$508>>3];
     $510 = $x119;
     $511 = $509 * $510;
     $512 = $x109;
     $513 = $x116;
     $514 = $512 * $513;
     $515 = $511 + $514;
     $516 = ((($4)) + 392|0);
     $517 = +HEAPF64[$516>>3];
     $518 = $x121;
     $519 = $517 * $518;
     $520 = $515 + $519;
     $521 = ((($4)) + 240|0);
     HEAPF64[$521>>3] = $520;
     $522 = $x110;
     $523 = $x116;
     $524 = $522 * $523;
     $525 = ((($4)) + 416|0);
     $526 = +HEAPF64[$525>>3];
     $527 = $x121;
     $528 = $526 * $527;
     $529 = $524 + $528;
     $530 = $x113;
     $531 = $x116;
     $532 = $530 * $531;
     $533 = $529 + $532;
     $534 = ((($4)) + 264|0);
     HEAPF64[$534>>3] = $533;
     $535 = ((($4)) + 440|0);
     $536 = +HEAPF64[$535>>3];
     $537 = $x121;
     $538 = $536 * $537;
     $539 = ((($4)) + 368|0);
     $540 = +HEAPF64[$539>>3];
     $541 = $x119;
     $542 = $540 * $541;
     $543 = $538 + $542;
     $544 = $x115;
     $545 = $x116;
     $546 = $544 * $545;
     $547 = $543 + $546;
     $548 = ((($4)) + 288|0);
     HEAPF64[$548>>3] = $547;
     $549 = ((($4)) + 248|0);
     $550 = +HEAPF64[$549>>3];
     $551 = -1.0 * $550;
     $552 = $x112;
     $553 = $551 * $552;
     $554 = ((($4)) + 8|0);
     $555 = +HEAPF64[$554>>3];
     $556 = ((($4)) + 320|0);
     $557 = +HEAPF64[$556>>3];
     $558 = $555 * $557;
     $559 = $553 + $558;
     $560 = ((($4)) + 312|0);
     HEAPF64[$560>>3] = $559;
     $561 = ((($4)) + 272|0);
     $562 = +HEAPF64[$561>>3];
     $563 = -1.0 * $562;
     $564 = $x112;
     $565 = $563 * $564;
     $566 = ((($4)) + 8|0);
     $567 = +HEAPF64[$566>>3];
     $568 = ((($4)) + 344|0);
     $569 = +HEAPF64[$568>>3];
     $570 = $567 * $569;
     $571 = $565 + $570;
     $572 = ((($4)) + 336|0);
     HEAPF64[$572>>3] = $571;
     $573 = ((($4)) + 296|0);
     $574 = +HEAPF64[$573>>3];
     $575 = -1.0 * $574;
     $576 = $x112;
     $577 = $575 * $576;
     $578 = ((($4)) + 8|0);
     $579 = +HEAPF64[$578>>3];
     $580 = ((($4)) + 368|0);
     $581 = +HEAPF64[$580>>3];
     $582 = $579 * $581;
     $583 = $577 + $582;
     $584 = ((($4)) + 360|0);
     HEAPF64[$584>>3] = $583;
     $585 = $x109;
     $586 = $x117;
     $587 = $585 * $586;
     $588 = ((($4)) + 392|0);
     $589 = +HEAPF64[$588>>3];
     $590 = $x116;
     $591 = $589 * $590;
     $592 = $587 + $591;
     $593 = ((($4)) + 320|0);
     $594 = +HEAPF64[$593>>3];
     $595 = $x120;
     $596 = $594 * $595;
     $597 = $592 + $596;
     $598 = ((($4)) + 384|0);
     HEAPF64[$598>>3] = $597;
     $599 = $x110;
     $600 = $x117;
     $601 = $599 * $600;
     $602 = $x113;
     $603 = $x117;
     $604 = $602 * $603;
     $605 = $601 + $604;
     $606 = ((($4)) + 416|0);
     $607 = +HEAPF64[$606>>3];
     $608 = $x116;
     $609 = $607 * $608;
     $610 = $605 + $609;
     $611 = ((($4)) + 408|0);
     HEAPF64[$611>>3] = $610;
     $612 = ((($4)) + 440|0);
     $613 = +HEAPF64[$612>>3];
     $614 = $x116;
     $615 = $613 * $614;
     $616 = ((($4)) + 368|0);
     $617 = +HEAPF64[$616>>3];
     $618 = $x120;
     $619 = $617 * $618;
     $620 = $615 + $619;
     $621 = $x115;
     $622 = $x117;
     $623 = $621 * $622;
     $624 = $620 + $623;
     $625 = ((($4)) + 432|0);
     HEAPF64[$625>>3] = $624;
     $626 = ((($4)) + 176|0);
     $627 = +HEAPF64[$626>>3];
     HEAPF64[$j3eval1>>3] = $627;
     $628 = +HEAPF64[$j3eval1>>3];
     $629 = (+__Z5IKabsd($628));
     $630 = $629 < 9.9999999999999995E-7;
     if ($630) {
      $bgotonextstatement = 1;
      $631 = ((($4)) + 160|0);
      $632 = +HEAPF64[$631>>3];
      $633 = (+__Z5IKabsd($632));
      $634 = 3.14159265358979 + $633;
      $635 = (+__Z6IKfmoddd($634,6.2831853071795898));
      $636 = -3.14159265358979 + $635;
      HEAPF64[$evalcond>>3] = $636;
      $637 = ((($4)) + 432|0);
      $638 = +HEAPF64[$637>>3];
      $639 = -1.0 + $638;
      $640 = ((($evalcond)) + 8|0);
      HEAPF64[$640>>3] = $639;
      $641 = ((($4)) + 384|0);
      $642 = +HEAPF64[$641>>3];
      $643 = ((($evalcond)) + 16|0);
      HEAPF64[$643>>3] = $642;
      $644 = ((($4)) + 288|0);
      $645 = +HEAPF64[$644>>3];
      $646 = ((($evalcond)) + 24|0);
      HEAPF64[$646>>3] = $645;
      $647 = ((($4)) + 360|0);
      $648 = +HEAPF64[$647>>3];
      $649 = ((($evalcond)) + 32|0);
      HEAPF64[$649>>3] = $648;
      $650 = ((($4)) + 408|0);
      $651 = +HEAPF64[$650>>3];
      $652 = ((($evalcond)) + 40|0);
      HEAPF64[$652>>3] = $651;
      $653 = +HEAPF64[$evalcond>>3];
      $654 = (+__Z5IKabsd($653));
      $655 = $654 < 9.9999999999999995E-7;
      L921: do {
       if ($655) {
        $656 = ((($evalcond)) + 8|0);
        $657 = +HEAPF64[$656>>3];
        $658 = (+__Z5IKabsd($657));
        $659 = $658 < 9.9999999999999995E-7;
        if ($659) {
         $660 = ((($evalcond)) + 16|0);
         $661 = +HEAPF64[$660>>3];
         $662 = (+__Z5IKabsd($661));
         $663 = $662 < 9.9999999999999995E-7;
         if ($663) {
          $664 = ((($evalcond)) + 24|0);
          $665 = +HEAPF64[$664>>3];
          $666 = (+__Z5IKabsd($665));
          $667 = $666 < 9.9999999999999995E-7;
          if ($667) {
           $668 = ((($evalcond)) + 32|0);
           $669 = +HEAPF64[$668>>3];
           $670 = (+__Z5IKabsd($669));
           $671 = $670 < 9.9999999999999995E-7;
           if ($671) {
            $672 = ((($evalcond)) + 40|0);
            $673 = +HEAPF64[$672>>3];
            $674 = (+__Z5IKabsd($673));
            $675 = $674 < 9.9999999999999995E-7;
            if ($675) {
             $bgotonextstatement = 0;
             ;HEAP8[$j3valid>>0]=0|0;HEAP8[$j3valid+1>>0]=0|0;
             $676 = ((($4)) + 547|0);
             HEAP8[$676>>0] = 2;
             $677 = ((($4)) + 288|0);
             $678 = +HEAPF64[$677>>3];
             $679 = ((($4)) + 360|0);
             $680 = +HEAPF64[$679>>3];
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x123,$678,$680,1.9999999999999999E-6);
             $681 = ((($x123)) + 8|0);
             $682 = HEAP8[$681>>0]|0;
             $683 = $682&1;
             if ($683) {
              $684 = +HEAPF64[$x123>>3];
              $x122 = $684;
              $685 = $x122;
              $686 = -1.0 * $685;
              HEAPF64[$j3array>>3] = $686;
              $687 = +HEAPF64[$j3array>>3];
              $688 = (+__Z5IKsind($687));
              HEAPF64[$sj3array>>3] = $688;
              $689 = +HEAPF64[$j3array>>3];
              $690 = (+__Z5IKcosd($689));
              HEAPF64[$cj3array>>3] = $690;
              $691 = $x122;
              $692 = -1.0 * $691;
              $693 = 3.14159265358979 + $692;
              $694 = ((($j3array)) + 8|0);
              HEAPF64[$694>>3] = $693;
              $695 = ((($j3array)) + 8|0);
              $696 = +HEAPF64[$695>>3];
              $697 = (+__Z5IKsind($696));
              $698 = ((($sj3array)) + 8|0);
              HEAPF64[$698>>3] = $697;
              $699 = ((($j3array)) + 8|0);
              $700 = +HEAPF64[$699>>3];
              $701 = (+__Z5IKcosd($700));
              $702 = ((($cj3array)) + 8|0);
              HEAPF64[$702>>3] = $701;
              $703 = +HEAPF64[$j3array>>3];
              $704 = $703 > 3.14159265358979;
              $705 = +HEAPF64[$j3array>>3];
              do {
               if ($704) {
                $706 = $705 - 6.2831853071795898;
                HEAPF64[$j3array>>3] = $706;
               } else {
                $707 = $705 < -3.14159265358979;
                if (!($707)) {
                 break;
                }
                $708 = +HEAPF64[$j3array>>3];
                $709 = $708 + 6.2831853071795898;
                HEAPF64[$j3array>>3] = $709;
               }
              } while(0);
              HEAP8[$j3valid>>0] = 1;
              $710 = ((($j3array)) + 8|0);
              $711 = +HEAPF64[$710>>3];
              $712 = $711 > 3.14159265358979;
              $713 = ((($j3array)) + 8|0);
              $714 = +HEAPF64[$713>>3];
              do {
               if ($712) {
                $715 = $714 - 6.2831853071795898;
                HEAPF64[$713>>3] = $715;
               } else {
                $716 = $714 < -3.14159265358979;
                if (!($716)) {
                 break;
                }
                $717 = ((($j3array)) + 8|0);
                $718 = +HEAPF64[$717>>3];
                $719 = $718 + 6.2831853071795898;
                HEAPF64[$717>>3] = $719;
               }
              } while(0);
              $720 = ((($j3valid)) + 1|0);
              HEAP8[$720>>0] = 1;
              $ij3 = 0;
              while(1) {
               $721 = $ij3;
               $722 = ($721|0)<(2);
               if (!($722)) {
                break L921;
               }
               $723 = $ij3;
               $724 = (($j3valid) + ($723)|0);
               $725 = HEAP8[$724>>0]|0;
               $726 = $725&1;
               L942: do {
                if ($726) {
                 $727 = $ij3;
                 $728 = $727&255;
                 $729 = ((($4)) + 545|0);
                 HEAP8[$729>>0] = $728;
                 $730 = ((($4)) + 545|0);
                 $731 = ((($730)) + 1|0);
                 HEAP8[$731>>0] = -1;
                 $732 = $ij3;
                 $733 = (($732) + 1)|0;
                 $iij3 = $733;
                 L944: while(1) {
                  $734 = $iij3;
                  $735 = ($734|0)<(2);
                  if (!($735)) {
                   break;
                  }
                  $736 = $iij3;
                  $737 = (($j3valid) + ($736)|0);
                  $738 = HEAP8[$737>>0]|0;
                  $739 = $738&1;
                  do {
                   if ($739) {
                    $740 = $ij3;
                    $741 = (($cj3array) + ($740<<3)|0);
                    $742 = +HEAPF64[$741>>3];
                    $743 = $iij3;
                    $744 = (($cj3array) + ($743<<3)|0);
                    $745 = +HEAPF64[$744>>3];
                    $746 = $742 - $745;
                    $747 = (+__Z5IKabsd($746));
                    $748 = $747 < 9.9999999999999995E-7;
                    if (!($748)) {
                     break;
                    }
                    $749 = $ij3;
                    $750 = (($sj3array) + ($749<<3)|0);
                    $751 = +HEAPF64[$750>>3];
                    $752 = $iij3;
                    $753 = (($sj3array) + ($752<<3)|0);
                    $754 = +HEAPF64[$753>>3];
                    $755 = $751 - $754;
                    $756 = (+__Z5IKabsd($755));
                    $757 = $756 < 9.9999999999999995E-7;
                    if ($757) {
                     label = 44;
                     break L944;
                    }
                   }
                  } while(0);
                  $764 = $iij3;
                  $765 = (($764) + 1)|0;
                  $iij3 = $765;
                 }
                 if ((label|0) == 44) {
                  label = 0;
                  $758 = $iij3;
                  $759 = (($j3valid) + ($758)|0);
                  HEAP8[$759>>0] = 0;
                  $760 = $iij3;
                  $761 = $760&255;
                  $762 = ((($4)) + 545|0);
                  $763 = ((($762)) + 1|0);
                  HEAP8[$763>>0] = $761;
                 }
                 $766 = $ij3;
                 $767 = (($j3array) + ($766<<3)|0);
                 $768 = +HEAPF64[$767>>3];
                 $769 = ((($4)) + 120|0);
                 HEAPF64[$769>>3] = $768;
                 $770 = $ij3;
                 $771 = (($cj3array) + ($770<<3)|0);
                 $772 = +HEAPF64[$771>>3];
                 $773 = ((($4)) + 128|0);
                 HEAPF64[$773>>3] = $772;
                 $774 = $ij3;
                 $775 = (($sj3array) + ($774<<3)|0);
                 $776 = +HEAPF64[$775>>3];
                 $777 = ((($4)) + 136|0);
                 HEAPF64[$777>>3] = $776;
                 $778 = ((($4)) + 288|0);
                 $779 = +HEAPF64[$778>>3];
                 $780 = -1.0 * $779;
                 $781 = ((($4)) + 120|0);
                 $782 = +HEAPF64[$781>>3];
                 $783 = (+__Z5IKsind($782));
                 $784 = $780 * $783;
                 $785 = ((($4)) + 360|0);
                 $786 = +HEAPF64[$785>>3];
                 $787 = ((($4)) + 120|0);
                 $788 = +HEAPF64[$787>>3];
                 $789 = (+__Z5IKcosd($788));
                 $790 = $786 * $789;
                 $791 = $784 + $790;
                 HEAPF64[$evalcond2>>3] = $791;
                 $792 = +HEAPF64[$evalcond2>>3];
                 $793 = (+__Z5IKabsd($792));
                 $794 = $793 > 5.0000000000000004E-6;
                 if ($794) {
                  break;
                 }
                 ;HEAP8[$j5valid>>0]=0|0;
                 $795 = ((($4)) + 553|0);
                 HEAP8[$795>>0] = 1;
                 $796 = ((($4)) + 264|0);
                 $797 = +HEAPF64[$796>>3];
                 $798 = 1.0 * $797;
                 $x124 = $798;
                 $799 = ((($4)) + 128|0);
                 $800 = +HEAPF64[$799>>3];
                 $801 = -1.0 * $800;
                 $802 = $x124;
                 $803 = $801 * $802;
                 $804 = ((($4)) + 240|0);
                 $805 = +HEAPF64[$804>>3];
                 $806 = -1.0 * $805;
                 $807 = ((($4)) + 136|0);
                 $808 = +HEAPF64[$807>>3];
                 $809 = $806 * $808;
                 $810 = $803 + $809;
                 $811 = (+__Z5IKabsd($810));
                 $812 = $811 < 1.9999999999999999E-6;
                 do {
                  if ($812) {
                   $813 = ((($4)) + 136|0);
                   $814 = +HEAPF64[$813>>3];
                   $815 = -1.0 * $814;
                   $816 = $x124;
                   $817 = $815 * $816;
                   $818 = ((($4)) + 128|0);
                   $819 = +HEAPF64[$818>>3];
                   $820 = ((($4)) + 240|0);
                   $821 = +HEAPF64[$820>>3];
                   $822 = $819 * $821;
                   $823 = $817 + $822;
                   $824 = (+__Z5IKabsd($823));
                   $825 = $824 < 1.9999999999999999E-6;
                   if (!($825)) {
                    break;
                   }
                   $826 = ((($4)) + 128|0);
                   $827 = +HEAPF64[$826>>3];
                   $828 = -1.0 * $827;
                   $829 = $x124;
                   $830 = $828 * $829;
                   $831 = ((($4)) + 240|0);
                   $832 = +HEAPF64[$831>>3];
                   $833 = -1.0 * $832;
                   $834 = ((($4)) + 136|0);
                   $835 = +HEAPF64[$834>>3];
                   $836 = $833 * $835;
                   $837 = $830 + $836;
                   $838 = (+__Z5IKsqrd($837));
                   $839 = ((($4)) + 136|0);
                   $840 = +HEAPF64[$839>>3];
                   $841 = -1.0 * $840;
                   $842 = $x124;
                   $843 = $841 * $842;
                   $844 = ((($4)) + 128|0);
                   $845 = +HEAPF64[$844>>3];
                   $846 = ((($4)) + 240|0);
                   $847 = +HEAPF64[$846>>3];
                   $848 = $845 * $847;
                   $849 = $843 + $848;
                   $850 = (+__Z5IKsqrd($849));
                   $851 = $838 + $850;
                   $852 = $851 - 1.0;
                   $853 = (+__Z5IKabsd($852));
                   $854 = $853 <= 1.9999999999999999E-6;
                   if ($854) {
                    break L942;
                   }
                  }
                 } while(0);
                 $855 = ((($4)) + 128|0);
                 $856 = +HEAPF64[$855>>3];
                 $857 = -1.0 * $856;
                 $858 = $x124;
                 $859 = $857 * $858;
                 $860 = ((($4)) + 240|0);
                 $861 = +HEAPF64[$860>>3];
                 $862 = -1.0 * $861;
                 $863 = ((($4)) + 136|0);
                 $864 = +HEAPF64[$863>>3];
                 $865 = $862 * $864;
                 $866 = $859 + $865;
                 $867 = ((($4)) + 136|0);
                 $868 = +HEAPF64[$867>>3];
                 $869 = -1.0 * $868;
                 $870 = $x124;
                 $871 = $869 * $870;
                 $872 = ((($4)) + 128|0);
                 $873 = +HEAPF64[$872>>3];
                 $874 = ((($4)) + 240|0);
                 $875 = +HEAPF64[$874>>3];
                 $876 = $873 * $875;
                 $877 = $871 + $876;
                 $878 = (+__Z7IKatan2dd($866,$877));
                 HEAPF64[$j5array>>3] = $878;
                 $879 = +HEAPF64[$j5array>>3];
                 $880 = (+__Z5IKsind($879));
                 HEAPF64[$sj5array>>3] = $880;
                 $881 = +HEAPF64[$j5array>>3];
                 $882 = (+__Z5IKcosd($881));
                 HEAPF64[$cj5array>>3] = $882;
                 $883 = +HEAPF64[$j5array>>3];
                 $884 = $883 > 3.14159265358979;
                 $885 = +HEAPF64[$j5array>>3];
                 do {
                  if ($884) {
                   $886 = $885 - 6.2831853071795898;
                   HEAPF64[$j5array>>3] = $886;
                  } else {
                   $887 = $885 < -3.14159265358979;
                   if (!($887)) {
                    break;
                   }
                   $888 = +HEAPF64[$j5array>>3];
                   $889 = $888 + 6.2831853071795898;
                   HEAPF64[$j5array>>3] = $889;
                  }
                 } while(0);
                 HEAP8[$j5valid>>0] = 1;
                 $ij5 = 0;
                 while(1) {
                  $890 = $ij5;
                  $891 = ($890|0)<(1);
                  if (!($891)) {
                   break L942;
                  }
                  $892 = $ij5;
                  $893 = (($j5valid) + ($892)|0);
                  $894 = HEAP8[$893>>0]|0;
                  $895 = $894&1;
                  do {
                   if ($895) {
                    $896 = $ij5;
                    $897 = $896&255;
                    $898 = ((($4)) + 551|0);
                    HEAP8[$898>>0] = $897;
                    $899 = ((($4)) + 551|0);
                    $900 = ((($899)) + 1|0);
                    HEAP8[$900>>0] = -1;
                    $901 = $ij5;
                    $902 = (($901) + 1)|0;
                    $iij5 = $902;
                    L969: while(1) {
                     $903 = $iij5;
                     $904 = ($903|0)<(1);
                     if (!($904)) {
                      break;
                     }
                     $905 = $iij5;
                     $906 = (($j5valid) + ($905)|0);
                     $907 = HEAP8[$906>>0]|0;
                     $908 = $907&1;
                     do {
                      if ($908) {
                       $909 = $ij5;
                       $910 = (($cj5array) + ($909<<3)|0);
                       $911 = +HEAPF64[$910>>3];
                       $912 = $iij5;
                       $913 = (($cj5array) + ($912<<3)|0);
                       $914 = +HEAPF64[$913>>3];
                       $915 = $911 - $914;
                       $916 = (+__Z5IKabsd($915));
                       $917 = $916 < 9.9999999999999995E-7;
                       if (!($917)) {
                        break;
                       }
                       $918 = $ij5;
                       $919 = (($sj5array) + ($918<<3)|0);
                       $920 = +HEAPF64[$919>>3];
                       $921 = $iij5;
                       $922 = (($sj5array) + ($921<<3)|0);
                       $923 = +HEAPF64[$922>>3];
                       $924 = $920 - $923;
                       $925 = (+__Z5IKabsd($924));
                       $926 = $925 < 9.9999999999999995E-7;
                       if ($926) {
                        label = 62;
                        break L969;
                       }
                      }
                     } while(0);
                     $933 = $iij5;
                     $934 = (($933) + 1)|0;
                     $iij5 = $934;
                    }
                    if ((label|0) == 62) {
                     label = 0;
                     $927 = $iij5;
                     $928 = (($j5valid) + ($927)|0);
                     HEAP8[$928>>0] = 0;
                     $929 = $iij5;
                     $930 = $929&255;
                     $931 = ((($4)) + 551|0);
                     $932 = ((($931)) + 1|0);
                     HEAP8[$932>>0] = $930;
                    }
                    $935 = $ij5;
                    $936 = (($j5array) + ($935<<3)|0);
                    $937 = +HEAPF64[$936>>3];
                    $938 = ((($4)) + 200|0);
                    HEAPF64[$938>>3] = $937;
                    $939 = $ij5;
                    $940 = (($cj5array) + ($939<<3)|0);
                    $941 = +HEAPF64[$940>>3];
                    $942 = ((($4)) + 208|0);
                    HEAPF64[$942>>3] = $941;
                    $943 = $ij5;
                    $944 = (($sj5array) + ($943<<3)|0);
                    $945 = +HEAPF64[$944>>3];
                    $946 = ((($4)) + 216|0);
                    HEAPF64[$946>>3] = $945;
                    $947 = ((($4)) + 200|0);
                    $948 = +HEAPF64[$947>>3];
                    $949 = (+__Z5IKsind($948));
                    $x125 = $949;
                    $950 = ((($4)) + 200|0);
                    $951 = +HEAPF64[$950>>3];
                    $952 = (+__Z5IKcosd($951));
                    $x126 = $952;
                    $953 = ((($4)) + 136|0);
                    $954 = +HEAPF64[$953>>3];
                    $955 = 1.0 * $954;
                    $x127 = $955;
                    $956 = $x126;
                    $957 = 1.0 * $956;
                    $x128 = $957;
                    $958 = ((($4)) + 136|0);
                    $959 = +HEAPF64[$958>>3];
                    $960 = $x125;
                    $961 = $959 * $960;
                    $x129 = $961;
                    $962 = $x125;
                    $963 = 1.0 * $962;
                    $x130 = $963;
                    $964 = ((($4)) + 128|0);
                    $965 = +HEAPF64[$964>>3];
                    $966 = $x128;
                    $967 = $965 * $966;
                    $x131 = $967;
                    $968 = ((($4)) + 336|0);
                    $969 = +HEAPF64[$968>>3];
                    $970 = ((($4)) + 136|0);
                    $971 = +HEAPF64[$970>>3];
                    $972 = $969 * $971;
                    $973 = $x125;
                    $974 = $972 + $973;
                    $975 = ((($4)) + 128|0);
                    $976 = +HEAPF64[$975>>3];
                    $977 = ((($4)) + 264|0);
                    $978 = +HEAPF64[$977>>3];
                    $979 = $976 * $978;
                    $980 = $974 + $979;
                    HEAPF64[$evalcond3>>3] = $980;
                    $981 = ((($4)) + 128|0);
                    $982 = +HEAPF64[$981>>3];
                    $983 = $x125;
                    $984 = $982 * $983;
                    $985 = ((($4)) + 136|0);
                    $986 = +HEAPF64[$985>>3];
                    $987 = $x126;
                    $988 = $986 * $987;
                    $989 = $984 + $988;
                    $990 = ((($4)) + 264|0);
                    $991 = +HEAPF64[$990>>3];
                    $992 = $989 + $991;
                    $993 = ((($evalcond3)) + 8|0);
                    HEAPF64[$993>>3] = $992;
                    $994 = ((($4)) + 312|0);
                    $995 = +HEAPF64[$994>>3];
                    $996 = ((($4)) + 136|0);
                    $997 = +HEAPF64[$996>>3];
                    $998 = $995 * $997;
                    $999 = $x128;
                    $1000 = -1.0 * $999;
                    $1001 = $998 + $1000;
                    $1002 = ((($4)) + 128|0);
                    $1003 = +HEAPF64[$1002>>3];
                    $1004 = ((($4)) + 240|0);
                    $1005 = +HEAPF64[$1004>>3];
                    $1006 = $1003 * $1005;
                    $1007 = $1001 + $1006;
                    $1008 = ((($evalcond3)) + 16|0);
                    HEAPF64[$1008>>3] = $1007;
                    $1009 = ((($4)) + 240|0);
                    $1010 = +HEAPF64[$1009>>3];
                    $1011 = -1.0 * $1010;
                    $1012 = $x127;
                    $1013 = $1011 * $1012;
                    $1014 = $x130;
                    $1015 = -1.0 * $1014;
                    $1016 = $1013 + $1015;
                    $1017 = ((($4)) + 128|0);
                    $1018 = +HEAPF64[$1017>>3];
                    $1019 = ((($4)) + 312|0);
                    $1020 = +HEAPF64[$1019>>3];
                    $1021 = $1018 * $1020;
                    $1022 = $1016 + $1021;
                    $1023 = ((($evalcond3)) + 24|0);
                    HEAPF64[$1023>>3] = $1022;
                    $1024 = ((($4)) + 264|0);
                    $1025 = +HEAPF64[$1024>>3];
                    $1026 = -1.0 * $1025;
                    $1027 = $x127;
                    $1028 = $1026 * $1027;
                    $1029 = $x128;
                    $1030 = -1.0 * $1029;
                    $1031 = $1028 + $1030;
                    $1032 = ((($4)) + 128|0);
                    $1033 = +HEAPF64[$1032>>3];
                    $1034 = ((($4)) + 336|0);
                    $1035 = +HEAPF64[$1034>>3];
                    $1036 = $1033 * $1035;
                    $1037 = $1031 + $1036;
                    $1038 = ((($evalcond3)) + 32|0);
                    HEAPF64[$1038>>3] = $1037;
                    $1039 = $x129;
                    $1040 = $x131;
                    $1041 = -1.0 * $1040;
                    $1042 = $1039 + $1041;
                    $1043 = ((($4)) + 240|0);
                    $1044 = +HEAPF64[$1043>>3];
                    $1045 = $1042 + $1044;
                    $1046 = ((($evalcond3)) + 40|0);
                    HEAPF64[$1046>>3] = $1045;
                    $1047 = $x129;
                    $1048 = $x131;
                    $1049 = -1.0 * $1048;
                    $1050 = $1047 + $1049;
                    $1051 = ((($4)) + 336|0);
                    $1052 = +HEAPF64[$1051>>3];
                    $1053 = $1050 + $1052;
                    $1054 = ((($evalcond3)) + 48|0);
                    HEAPF64[$1054>>3] = $1053;
                    $1055 = $x126;
                    $1056 = -1.0 * $1055;
                    $1057 = $x127;
                    $1058 = $1056 * $1057;
                    $1059 = ((($4)) + 128|0);
                    $1060 = +HEAPF64[$1059>>3];
                    $1061 = -1.0 * $1060;
                    $1062 = $x130;
                    $1063 = $1061 * $1062;
                    $1064 = $1058 + $1063;
                    $1065 = ((($4)) + 312|0);
                    $1066 = +HEAPF64[$1065>>3];
                    $1067 = $1064 + $1066;
                    $1068 = ((($evalcond3)) + 56|0);
                    HEAPF64[$1068>>3] = $1067;
                    $1069 = +HEAPF64[$evalcond3>>3];
                    $1070 = (+__Z5IKabsd($1069));
                    $1071 = $1070 > 5.0000000000000004E-6;
                    if ($1071) {
                     break;
                    }
                    $1072 = ((($evalcond3)) + 8|0);
                    $1073 = +HEAPF64[$1072>>3];
                    $1074 = (+__Z5IKabsd($1073));
                    $1075 = $1074 > 5.0000000000000004E-6;
                    if ($1075) {
                     break;
                    }
                    $1076 = ((($evalcond3)) + 16|0);
                    $1077 = +HEAPF64[$1076>>3];
                    $1078 = (+__Z5IKabsd($1077));
                    $1079 = $1078 > 5.0000000000000004E-6;
                    if ($1079) {
                     break;
                    }
                    $1080 = ((($evalcond3)) + 24|0);
                    $1081 = +HEAPF64[$1080>>3];
                    $1082 = (+__Z5IKabsd($1081));
                    $1083 = $1082 > 5.0000000000000004E-6;
                    if ($1083) {
                     break;
                    }
                    $1084 = ((($evalcond3)) + 32|0);
                    $1085 = +HEAPF64[$1084>>3];
                    $1086 = (+__Z5IKabsd($1085));
                    $1087 = $1086 > 5.0000000000000004E-6;
                    if ($1087) {
                     break;
                    }
                    $1088 = ((($evalcond3)) + 40|0);
                    $1089 = +HEAPF64[$1088>>3];
                    $1090 = (+__Z5IKabsd($1089));
                    $1091 = $1090 > 5.0000000000000004E-6;
                    if ($1091) {
                     break;
                    }
                    $1092 = ((($evalcond3)) + 48|0);
                    $1093 = +HEAPF64[$1092>>3];
                    $1094 = (+__Z5IKabsd($1093));
                    $1095 = $1094 > 5.0000000000000004E-6;
                    if ($1095) {
                     break;
                    }
                    $1096 = ((($evalcond3)) + 56|0);
                    $1097 = +HEAPF64[$1096>>3];
                    $1098 = (+__Z5IKabsd($1097));
                    $1099 = $1098 > 5.0000000000000004E-6;
                    if ($1099) {
                     break;
                    }
                    __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos,6);
                    __THREW__ = 0;
                    $1100 = (invoke_iii(416,($vinfos|0),0)|0);
                    $1101 = __THREW__; __THREW__ = 0;
                    $1102 = $1101&1;
                    if ($1102) {
                     label = 107;
                     break L1;
                    }
                    $1103 = ((($1100)) + 17|0);
                    HEAP8[$1103>>0] = 1;
                    $1104 = +HEAPF64[$4>>3];
                    __THREW__ = 0;
                    $1105 = (invoke_iii(416,($vinfos|0),0)|0);
                    $1106 = __THREW__; __THREW__ = 0;
                    $1107 = $1106&1;
                    if ($1107) {
                     label = 107;
                     break L1;
                    }
                    $1108 = ((($1105)) + 8|0);
                    HEAPF64[$1108>>3] = $1104;
                    $1109 = ((($4)) + 536|0);
                    $1110 = HEAP8[$1109>>0]|0;
                    __THREW__ = 0;
                    $1111 = (invoke_iii(416,($vinfos|0),0)|0);
                    $1112 = __THREW__; __THREW__ = 0;
                    $1113 = $1112&1;
                    if ($1113) {
                     label = 107;
                     break L1;
                    }
                    $1114 = ((($1111)) + 19|0);
                    HEAP8[$1114>>0] = $1110;
                    $1115 = ((($4)) + 536|0);
                    $1116 = ((($1115)) + 1|0);
                    $1117 = HEAP8[$1116>>0]|0;
                    __THREW__ = 0;
                    $1118 = (invoke_iii(416,($vinfos|0),0)|0);
                    $1119 = __THREW__; __THREW__ = 0;
                    $1120 = $1119&1;
                    if ($1120) {
                     label = 107;
                     break L1;
                    }
                    $1121 = ((($1118)) + 19|0);
                    $1122 = ((($1121)) + 1|0);
                    HEAP8[$1122>>0] = $1117;
                    $1123 = ((($4)) + 538|0);
                    $1124 = HEAP8[$1123>>0]|0;
                    __THREW__ = 0;
                    $1125 = (invoke_iii(416,($vinfos|0),0)|0);
                    $1126 = __THREW__; __THREW__ = 0;
                    $1127 = $1126&1;
                    if ($1127) {
                     label = 107;
                     break L1;
                    }
                    $1128 = ((($1125)) + 18|0);
                    HEAP8[$1128>>0] = $1124;
                    __THREW__ = 0;
                    $1129 = (invoke_iii(416,($vinfos|0),1)|0);
                    $1130 = __THREW__; __THREW__ = 0;
                    $1131 = $1130&1;
                    if ($1131) {
                     label = 107;
                     break L1;
                    }
                    $1132 = ((($1129)) + 17|0);
                    HEAP8[$1132>>0] = 1;
                    $1133 = ((($4)) + 40|0);
                    $1134 = +HEAPF64[$1133>>3];
                    __THREW__ = 0;
                    $1135 = (invoke_iii(416,($vinfos|0),1)|0);
                    $1136 = __THREW__; __THREW__ = 0;
                    $1137 = $1136&1;
                    if ($1137) {
                     label = 107;
                     break L1;
                    }
                    $1138 = ((($1135)) + 8|0);
                    HEAPF64[$1138>>3] = $1134;
                    $1139 = ((($4)) + 539|0);
                    $1140 = HEAP8[$1139>>0]|0;
                    __THREW__ = 0;
                    $1141 = (invoke_iii(416,($vinfos|0),1)|0);
                    $1142 = __THREW__; __THREW__ = 0;
                    $1143 = $1142&1;
                    if ($1143) {
                     label = 107;
                     break L1;
                    }
                    $1144 = ((($1141)) + 19|0);
                    HEAP8[$1144>>0] = $1140;
                    $1145 = ((($4)) + 539|0);
                    $1146 = ((($1145)) + 1|0);
                    $1147 = HEAP8[$1146>>0]|0;
                    __THREW__ = 0;
                    $1148 = (invoke_iii(416,($vinfos|0),1)|0);
                    $1149 = __THREW__; __THREW__ = 0;
                    $1150 = $1149&1;
                    if ($1150) {
                     label = 107;
                     break L1;
                    }
                    $1151 = ((($1148)) + 19|0);
                    $1152 = ((($1151)) + 1|0);
                    HEAP8[$1152>>0] = $1147;
                    $1153 = ((($4)) + 541|0);
                    $1154 = HEAP8[$1153>>0]|0;
                    __THREW__ = 0;
                    $1155 = (invoke_iii(416,($vinfos|0),1)|0);
                    $1156 = __THREW__; __THREW__ = 0;
                    $1157 = $1156&1;
                    if ($1157) {
                     label = 107;
                     break L1;
                    }
                    $1158 = ((($1155)) + 18|0);
                    HEAP8[$1158>>0] = $1154;
                    __THREW__ = 0;
                    $1159 = (invoke_iii(416,($vinfos|0),2)|0);
                    $1160 = __THREW__; __THREW__ = 0;
                    $1161 = $1160&1;
                    if ($1161) {
                     label = 107;
                     break L1;
                    }
                    $1162 = ((($1159)) + 17|0);
                    HEAP8[$1162>>0] = 1;
                    $1163 = ((($4)) + 80|0);
                    $1164 = +HEAPF64[$1163>>3];
                    __THREW__ = 0;
                    $1165 = (invoke_iii(416,($vinfos|0),2)|0);
                    $1166 = __THREW__; __THREW__ = 0;
                    $1167 = $1166&1;
                    if ($1167) {
                     label = 107;
                     break L1;
                    }
                    $1168 = ((($1165)) + 8|0);
                    HEAPF64[$1168>>3] = $1164;
                    $1169 = ((($4)) + 542|0);
                    $1170 = HEAP8[$1169>>0]|0;
                    __THREW__ = 0;
                    $1171 = (invoke_iii(416,($vinfos|0),2)|0);
                    $1172 = __THREW__; __THREW__ = 0;
                    $1173 = $1172&1;
                    if ($1173) {
                     label = 107;
                     break L1;
                    }
                    $1174 = ((($1171)) + 19|0);
                    HEAP8[$1174>>0] = $1170;
                    $1175 = ((($4)) + 542|0);
                    $1176 = ((($1175)) + 1|0);
                    $1177 = HEAP8[$1176>>0]|0;
                    __THREW__ = 0;
                    $1178 = (invoke_iii(416,($vinfos|0),2)|0);
                    $1179 = __THREW__; __THREW__ = 0;
                    $1180 = $1179&1;
                    if ($1180) {
                     label = 107;
                     break L1;
                    }
                    $1181 = ((($1178)) + 19|0);
                    $1182 = ((($1181)) + 1|0);
                    HEAP8[$1182>>0] = $1177;
                    $1183 = ((($4)) + 544|0);
                    $1184 = HEAP8[$1183>>0]|0;
                    __THREW__ = 0;
                    $1185 = (invoke_iii(416,($vinfos|0),2)|0);
                    $1186 = __THREW__; __THREW__ = 0;
                    $1187 = $1186&1;
                    if ($1187) {
                     label = 107;
                     break L1;
                    }
                    $1188 = ((($1185)) + 18|0);
                    HEAP8[$1188>>0] = $1184;
                    __THREW__ = 0;
                    $1189 = (invoke_iii(416,($vinfos|0),3)|0);
                    $1190 = __THREW__; __THREW__ = 0;
                    $1191 = $1190&1;
                    if ($1191) {
                     label = 107;
                     break L1;
                    }
                    $1192 = ((($1189)) + 17|0);
                    HEAP8[$1192>>0] = 1;
                    $1193 = ((($4)) + 120|0);
                    $1194 = +HEAPF64[$1193>>3];
                    __THREW__ = 0;
                    $1195 = (invoke_iii(416,($vinfos|0),3)|0);
                    $1196 = __THREW__; __THREW__ = 0;
                    $1197 = $1196&1;
                    if ($1197) {
                     label = 107;
                     break L1;
                    }
                    $1198 = ((($1195)) + 8|0);
                    HEAPF64[$1198>>3] = $1194;
                    $1199 = ((($4)) + 545|0);
                    $1200 = HEAP8[$1199>>0]|0;
                    __THREW__ = 0;
                    $1201 = (invoke_iii(416,($vinfos|0),3)|0);
                    $1202 = __THREW__; __THREW__ = 0;
                    $1203 = $1202&1;
                    if ($1203) {
                     label = 107;
                     break L1;
                    }
                    $1204 = ((($1201)) + 19|0);
                    HEAP8[$1204>>0] = $1200;
                    $1205 = ((($4)) + 545|0);
                    $1206 = ((($1205)) + 1|0);
                    $1207 = HEAP8[$1206>>0]|0;
                    __THREW__ = 0;
                    $1208 = (invoke_iii(416,($vinfos|0),3)|0);
                    $1209 = __THREW__; __THREW__ = 0;
                    $1210 = $1209&1;
                    if ($1210) {
                     label = 107;
                     break L1;
                    }
                    $1211 = ((($1208)) + 19|0);
                    $1212 = ((($1211)) + 1|0);
                    HEAP8[$1212>>0] = $1207;
                    $1213 = ((($4)) + 547|0);
                    $1214 = HEAP8[$1213>>0]|0;
                    __THREW__ = 0;
                    $1215 = (invoke_iii(416,($vinfos|0),3)|0);
                    $1216 = __THREW__; __THREW__ = 0;
                    $1217 = $1216&1;
                    if ($1217) {
                     label = 107;
                     break L1;
                    }
                    $1218 = ((($1215)) + 18|0);
                    HEAP8[$1218>>0] = $1214;
                    __THREW__ = 0;
                    $1219 = (invoke_iii(416,($vinfos|0),4)|0);
                    $1220 = __THREW__; __THREW__ = 0;
                    $1221 = $1220&1;
                    if ($1221) {
                     label = 107;
                     break L1;
                    }
                    $1222 = ((($1219)) + 17|0);
                    HEAP8[$1222>>0] = 1;
                    $1223 = ((($4)) + 160|0);
                    $1224 = +HEAPF64[$1223>>3];
                    __THREW__ = 0;
                    $1225 = (invoke_iii(416,($vinfos|0),4)|0);
                    $1226 = __THREW__; __THREW__ = 0;
                    $1227 = $1226&1;
                    if ($1227) {
                     label = 107;
                     break L1;
                    }
                    $1228 = ((($1225)) + 8|0);
                    HEAPF64[$1228>>3] = $1224;
                    $1229 = ((($4)) + 548|0);
                    $1230 = HEAP8[$1229>>0]|0;
                    __THREW__ = 0;
                    $1231 = (invoke_iii(416,($vinfos|0),4)|0);
                    $1232 = __THREW__; __THREW__ = 0;
                    $1233 = $1232&1;
                    if ($1233) {
                     label = 107;
                     break L1;
                    }
                    $1234 = ((($1231)) + 19|0);
                    HEAP8[$1234>>0] = $1230;
                    $1235 = ((($4)) + 548|0);
                    $1236 = ((($1235)) + 1|0);
                    $1237 = HEAP8[$1236>>0]|0;
                    __THREW__ = 0;
                    $1238 = (invoke_iii(416,($vinfos|0),4)|0);
                    $1239 = __THREW__; __THREW__ = 0;
                    $1240 = $1239&1;
                    if ($1240) {
                     label = 107;
                     break L1;
                    }
                    $1241 = ((($1238)) + 19|0);
                    $1242 = ((($1241)) + 1|0);
                    HEAP8[$1242>>0] = $1237;
                    $1243 = ((($4)) + 550|0);
                    $1244 = HEAP8[$1243>>0]|0;
                    __THREW__ = 0;
                    $1245 = (invoke_iii(416,($vinfos|0),4)|0);
                    $1246 = __THREW__; __THREW__ = 0;
                    $1247 = $1246&1;
                    if ($1247) {
                     label = 107;
                     break L1;
                    }
                    $1248 = ((($1245)) + 18|0);
                    HEAP8[$1248>>0] = $1244;
                    __THREW__ = 0;
                    $1249 = (invoke_iii(416,($vinfos|0),5)|0);
                    $1250 = __THREW__; __THREW__ = 0;
                    $1251 = $1250&1;
                    if ($1251) {
                     label = 107;
                     break L1;
                    }
                    $1252 = ((($1249)) + 17|0);
                    HEAP8[$1252>>0] = 1;
                    $1253 = ((($4)) + 200|0);
                    $1254 = +HEAPF64[$1253>>3];
                    __THREW__ = 0;
                    $1255 = (invoke_iii(416,($vinfos|0),5)|0);
                    $1256 = __THREW__; __THREW__ = 0;
                    $1257 = $1256&1;
                    if ($1257) {
                     label = 107;
                     break L1;
                    }
                    $1258 = ((($1255)) + 8|0);
                    HEAPF64[$1258>>3] = $1254;
                    $1259 = ((($4)) + 551|0);
                    $1260 = HEAP8[$1259>>0]|0;
                    __THREW__ = 0;
                    $1261 = (invoke_iii(416,($vinfos|0),5)|0);
                    $1262 = __THREW__; __THREW__ = 0;
                    $1263 = $1262&1;
                    if ($1263) {
                     label = 107;
                     break L1;
                    }
                    $1264 = ((($1261)) + 19|0);
                    HEAP8[$1264>>0] = $1260;
                    $1265 = ((($4)) + 551|0);
                    $1266 = ((($1265)) + 1|0);
                    $1267 = HEAP8[$1266>>0]|0;
                    __THREW__ = 0;
                    $1268 = (invoke_iii(416,($vinfos|0),5)|0);
                    $1269 = __THREW__; __THREW__ = 0;
                    $1270 = $1269&1;
                    if ($1270) {
                     label = 107;
                     break L1;
                    }
                    $1271 = ((($1268)) + 19|0);
                    $1272 = ((($1271)) + 1|0);
                    HEAP8[$1272>>0] = $1267;
                    $1273 = ((($4)) + 553|0);
                    $1274 = HEAP8[$1273>>0]|0;
                    __THREW__ = 0;
                    $1275 = (invoke_iii(416,($vinfos|0),5)|0);
                    $1276 = __THREW__; __THREW__ = 0;
                    $1277 = $1276&1;
                    if ($1277) {
                     label = 107;
                     break L1;
                    }
                    $1278 = ((($1275)) + 18|0);
                    HEAP8[$1278>>0] = $1274;
                    __THREW__ = 0;
                    invoke_vii(417,($vfree|0),0);
                    $1279 = __THREW__; __THREW__ = 0;
                    $1280 = $1279&1;
                    if ($1280) {
                     label = 107;
                     break L1;
                    }
                    $1281 = $1;
                    $1282 = HEAP32[$1281>>2]|0;
                    $1283 = ((($1282)) + 8|0);
                    $1284 = HEAP32[$1283>>2]|0;
                    __THREW__ = 0;
                    (invoke_iiii($1284|0,($1281|0),($vinfos|0),($vfree|0))|0);
                    $1285 = __THREW__; __THREW__ = 0;
                    $1286 = $1285&1;
                    if ($1286) {
                     label = 108;
                     break L1;
                    }
                    __THREW__ = 0;
                    invoke_vi(371,($vfree|0));
                    $1287 = __THREW__; __THREW__ = 0;
                    $1288 = $1287&1;
                    if ($1288) {
                     label = 107;
                     break L1;
                    }
                    __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos);
                   }
                  } while(0);
                  $1289 = $ij5;
                  $1290 = (($1289) + 1)|0;
                  $ij5 = $1290;
                 }
                }
               } while(0);
               $1299 = $ij3;
               $1300 = (($1299) + 1)|0;
               $ij3 = $1300;
              }
             }
            }
           }
          }
         }
        }
       }
      } while(0);
      $1301 = $bgotonextstatement;
      $1302 = $1301&1;
      if (!($1302)) {
       break;
      }
      $bgotonextstatement4 = 1;
      $1303 = ((($4)) + 160|0);
      $1304 = +HEAPF64[$1303>>3];
      $1305 = -3.14159265358979 + $1304;
      $1306 = (+__Z5IKabsd($1305));
      $1307 = 3.14159265358979 + $1306;
      $1308 = (+__Z6IKfmoddd($1307,6.2831853071795898));
      $1309 = -3.14159265358979 + $1308;
      HEAPF64[$evalcond>>3] = $1309;
      $1310 = ((($4)) + 432|0);
      $1311 = +HEAPF64[$1310>>3];
      $1312 = 1.0 + $1311;
      $1313 = ((($evalcond)) + 8|0);
      HEAPF64[$1313>>3] = $1312;
      $1314 = ((($4)) + 384|0);
      $1315 = +HEAPF64[$1314>>3];
      $1316 = ((($evalcond)) + 16|0);
      HEAPF64[$1316>>3] = $1315;
      $1317 = ((($4)) + 288|0);
      $1318 = +HEAPF64[$1317>>3];
      $1319 = ((($evalcond)) + 24|0);
      HEAPF64[$1319>>3] = $1318;
      $1320 = ((($4)) + 360|0);
      $1321 = +HEAPF64[$1320>>3];
      $1322 = ((($evalcond)) + 32|0);
      HEAPF64[$1322>>3] = $1321;
      $1323 = ((($4)) + 408|0);
      $1324 = +HEAPF64[$1323>>3];
      $1325 = ((($evalcond)) + 40|0);
      HEAPF64[$1325>>3] = $1324;
      $1326 = +HEAPF64[$evalcond>>3];
      $1327 = (+__Z5IKabsd($1326));
      $1328 = $1327 < 9.9999999999999995E-7;
      L1024: do {
       if ($1328) {
        $1329 = ((($evalcond)) + 8|0);
        $1330 = +HEAPF64[$1329>>3];
        $1331 = (+__Z5IKabsd($1330));
        $1332 = $1331 < 9.9999999999999995E-7;
        if ($1332) {
         $1333 = ((($evalcond)) + 16|0);
         $1334 = +HEAPF64[$1333>>3];
         $1335 = (+__Z5IKabsd($1334));
         $1336 = $1335 < 9.9999999999999995E-7;
         if ($1336) {
          $1337 = ((($evalcond)) + 24|0);
          $1338 = +HEAPF64[$1337>>3];
          $1339 = (+__Z5IKabsd($1338));
          $1340 = $1339 < 9.9999999999999995E-7;
          if ($1340) {
           $1341 = ((($evalcond)) + 32|0);
           $1342 = +HEAPF64[$1341>>3];
           $1343 = (+__Z5IKabsd($1342));
           $1344 = $1343 < 9.9999999999999995E-7;
           if ($1344) {
            $1345 = ((($evalcond)) + 40|0);
            $1346 = +HEAPF64[$1345>>3];
            $1347 = (+__Z5IKabsd($1346));
            $1348 = $1347 < 9.9999999999999995E-7;
            if ($1348) {
             $bgotonextstatement4 = 0;
             ;HEAP8[$j3valid8>>0]=0|0;HEAP8[$j3valid8+1>>0]=0|0;
             $1349 = ((($4)) + 547|0);
             HEAP8[$1349>>0] = 2;
             $1350 = ((($4)) + 288|0);
             $1351 = +HEAPF64[$1350>>3];
             $1352 = ((($4)) + 360|0);
             $1353 = +HEAPF64[$1352>>3];
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x133,$1351,$1353,1.9999999999999999E-6);
             $1354 = ((($x133)) + 8|0);
             $1355 = HEAP8[$1354>>0]|0;
             $1356 = $1355&1;
             if ($1356) {
              $1357 = +HEAPF64[$x133>>3];
              $x132 = $1357;
              $1358 = $x132;
              $1359 = -1.0 * $1358;
              HEAPF64[$j3array5>>3] = $1359;
              $1360 = +HEAPF64[$j3array5>>3];
              $1361 = (+__Z5IKsind($1360));
              HEAPF64[$sj3array7>>3] = $1361;
              $1362 = +HEAPF64[$j3array5>>3];
              $1363 = (+__Z5IKcosd($1362));
              HEAPF64[$cj3array6>>3] = $1363;
              $1364 = $x132;
              $1365 = -1.0 * $1364;
              $1366 = 3.14159265358979 + $1365;
              $1367 = ((($j3array5)) + 8|0);
              HEAPF64[$1367>>3] = $1366;
              $1368 = ((($j3array5)) + 8|0);
              $1369 = +HEAPF64[$1368>>3];
              $1370 = (+__Z5IKsind($1369));
              $1371 = ((($sj3array7)) + 8|0);
              HEAPF64[$1371>>3] = $1370;
              $1372 = ((($j3array5)) + 8|0);
              $1373 = +HEAPF64[$1372>>3];
              $1374 = (+__Z5IKcosd($1373));
              $1375 = ((($cj3array6)) + 8|0);
              HEAPF64[$1375>>3] = $1374;
              $1376 = +HEAPF64[$j3array5>>3];
              $1377 = $1376 > 3.14159265358979;
              $1378 = +HEAPF64[$j3array5>>3];
              do {
               if ($1377) {
                $1379 = $1378 - 6.2831853071795898;
                HEAPF64[$j3array5>>3] = $1379;
               } else {
                $1380 = $1378 < -3.14159265358979;
                if (!($1380)) {
                 break;
                }
                $1381 = +HEAPF64[$j3array5>>3];
                $1382 = $1381 + 6.2831853071795898;
                HEAPF64[$j3array5>>3] = $1382;
               }
              } while(0);
              HEAP8[$j3valid8>>0] = 1;
              $1383 = ((($j3array5)) + 8|0);
              $1384 = +HEAPF64[$1383>>3];
              $1385 = $1384 > 3.14159265358979;
              $1386 = ((($j3array5)) + 8|0);
              $1387 = +HEAPF64[$1386>>3];
              do {
               if ($1385) {
                $1388 = $1387 - 6.2831853071795898;
                HEAPF64[$1386>>3] = $1388;
               } else {
                $1389 = $1387 < -3.14159265358979;
                if (!($1389)) {
                 break;
                }
                $1390 = ((($j3array5)) + 8|0);
                $1391 = +HEAPF64[$1390>>3];
                $1392 = $1391 + 6.2831853071795898;
                HEAPF64[$1390>>3] = $1392;
               }
              } while(0);
              $1393 = ((($j3valid8)) + 1|0);
              HEAP8[$1393>>0] = 1;
              $ij39 = 0;
              while(1) {
               $1394 = $ij39;
               $1395 = ($1394|0)<(2);
               if (!($1395)) {
                break L1024;
               }
               $1396 = $ij39;
               $1397 = (($j3valid8) + ($1396)|0);
               $1398 = HEAP8[$1397>>0]|0;
               $1399 = $1398&1;
               L1045: do {
                if ($1399) {
                 $1400 = $ij39;
                 $1401 = $1400&255;
                 $1402 = ((($4)) + 545|0);
                 HEAP8[$1402>>0] = $1401;
                 $1403 = ((($4)) + 545|0);
                 $1404 = ((($1403)) + 1|0);
                 HEAP8[$1404>>0] = -1;
                 $1405 = $ij39;
                 $1406 = (($1405) + 1)|0;
                 $iij310 = $1406;
                 L1047: while(1) {
                  $1407 = $iij310;
                  $1408 = ($1407|0)<(2);
                  if (!($1408)) {
                   break;
                  }
                  $1409 = $iij310;
                  $1410 = (($j3valid8) + ($1409)|0);
                  $1411 = HEAP8[$1410>>0]|0;
                  $1412 = $1411&1;
                  do {
                   if ($1412) {
                    $1413 = $ij39;
                    $1414 = (($cj3array6) + ($1413<<3)|0);
                    $1415 = +HEAPF64[$1414>>3];
                    $1416 = $iij310;
                    $1417 = (($cj3array6) + ($1416<<3)|0);
                    $1418 = +HEAPF64[$1417>>3];
                    $1419 = $1415 - $1418;
                    $1420 = (+__Z5IKabsd($1419));
                    $1421 = $1420 < 9.9999999999999995E-7;
                    if (!($1421)) {
                     break;
                    }
                    $1422 = $ij39;
                    $1423 = (($sj3array7) + ($1422<<3)|0);
                    $1424 = +HEAPF64[$1423>>3];
                    $1425 = $iij310;
                    $1426 = (($sj3array7) + ($1425<<3)|0);
                    $1427 = +HEAPF64[$1426>>3];
                    $1428 = $1424 - $1427;
                    $1429 = (+__Z5IKabsd($1428));
                    $1430 = $1429 < 9.9999999999999995E-7;
                    if ($1430) {
                     label = 135;
                     break L1047;
                    }
                   }
                  } while(0);
                  $1437 = $iij310;
                  $1438 = (($1437) + 1)|0;
                  $iij310 = $1438;
                 }
                 if ((label|0) == 135) {
                  label = 0;
                  $1431 = $iij310;
                  $1432 = (($j3valid8) + ($1431)|0);
                  HEAP8[$1432>>0] = 0;
                  $1433 = $iij310;
                  $1434 = $1433&255;
                  $1435 = ((($4)) + 545|0);
                  $1436 = ((($1435)) + 1|0);
                  HEAP8[$1436>>0] = $1434;
                 }
                 $1439 = $ij39;
                 $1440 = (($j3array5) + ($1439<<3)|0);
                 $1441 = +HEAPF64[$1440>>3];
                 $1442 = ((($4)) + 120|0);
                 HEAPF64[$1442>>3] = $1441;
                 $1443 = $ij39;
                 $1444 = (($cj3array6) + ($1443<<3)|0);
                 $1445 = +HEAPF64[$1444>>3];
                 $1446 = ((($4)) + 128|0);
                 HEAPF64[$1446>>3] = $1445;
                 $1447 = $ij39;
                 $1448 = (($sj3array7) + ($1447<<3)|0);
                 $1449 = +HEAPF64[$1448>>3];
                 $1450 = ((($4)) + 136|0);
                 HEAPF64[$1450>>3] = $1449;
                 $1451 = ((($4)) + 288|0);
                 $1452 = +HEAPF64[$1451>>3];
                 $1453 = -1.0 * $1452;
                 $1454 = ((($4)) + 120|0);
                 $1455 = +HEAPF64[$1454>>3];
                 $1456 = (+__Z5IKsind($1455));
                 $1457 = $1453 * $1456;
                 $1458 = ((($4)) + 360|0);
                 $1459 = +HEAPF64[$1458>>3];
                 $1460 = ((($4)) + 120|0);
                 $1461 = +HEAPF64[$1460>>3];
                 $1462 = (+__Z5IKcosd($1461));
                 $1463 = $1459 * $1462;
                 $1464 = $1457 + $1463;
                 HEAPF64[$evalcond11>>3] = $1464;
                 $1465 = +HEAPF64[$evalcond11>>3];
                 $1466 = (+__Z5IKabsd($1465));
                 $1467 = $1466 > 5.0000000000000004E-6;
                 if ($1467) {
                  break;
                 }
                 ;HEAP8[$j5valid15>>0]=0|0;
                 $1468 = ((($4)) + 553|0);
                 HEAP8[$1468>>0] = 1;
                 $1469 = ((($4)) + 136|0);
                 $1470 = +HEAPF64[$1469>>3];
                 $1471 = 1.0 * $1470;
                 $x134 = $1471;
                 $1472 = ((($4)) + 240|0);
                 $1473 = +HEAPF64[$1472>>3];
                 $1474 = -1.0 * $1473;
                 $1475 = $x134;
                 $1476 = $1474 * $1475;
                 $1477 = ((($4)) + 128|0);
                 $1478 = +HEAPF64[$1477>>3];
                 $1479 = ((($4)) + 264|0);
                 $1480 = +HEAPF64[$1479>>3];
                 $1481 = $1478 * $1480;
                 $1482 = $1476 + $1481;
                 $1483 = (+__Z5IKabsd($1482));
                 $1484 = $1483 < 1.9999999999999999E-6;
                 do {
                  if ($1484) {
                   $1485 = ((($4)) + 264|0);
                   $1486 = +HEAPF64[$1485>>3];
                   $1487 = -1.0 * $1486;
                   $1488 = $x134;
                   $1489 = $1487 * $1488;
                   $1490 = ((($4)) + 128|0);
                   $1491 = +HEAPF64[$1490>>3];
                   $1492 = -1.0 * $1491;
                   $1493 = ((($4)) + 240|0);
                   $1494 = +HEAPF64[$1493>>3];
                   $1495 = $1492 * $1494;
                   $1496 = $1489 + $1495;
                   $1497 = (+__Z5IKabsd($1496));
                   $1498 = $1497 < 1.9999999999999999E-6;
                   if (!($1498)) {
                    break;
                   }
                   $1499 = ((($4)) + 240|0);
                   $1500 = +HEAPF64[$1499>>3];
                   $1501 = -1.0 * $1500;
                   $1502 = $x134;
                   $1503 = $1501 * $1502;
                   $1504 = ((($4)) + 128|0);
                   $1505 = +HEAPF64[$1504>>3];
                   $1506 = ((($4)) + 264|0);
                   $1507 = +HEAPF64[$1506>>3];
                   $1508 = $1505 * $1507;
                   $1509 = $1503 + $1508;
                   $1510 = (+__Z5IKsqrd($1509));
                   $1511 = ((($4)) + 264|0);
                   $1512 = +HEAPF64[$1511>>3];
                   $1513 = -1.0 * $1512;
                   $1514 = $x134;
                   $1515 = $1513 * $1514;
                   $1516 = ((($4)) + 128|0);
                   $1517 = +HEAPF64[$1516>>3];
                   $1518 = -1.0 * $1517;
                   $1519 = ((($4)) + 240|0);
                   $1520 = +HEAPF64[$1519>>3];
                   $1521 = $1518 * $1520;
                   $1522 = $1515 + $1521;
                   $1523 = (+__Z5IKsqrd($1522));
                   $1524 = $1510 + $1523;
                   $1525 = $1524 - 1.0;
                   $1526 = (+__Z5IKabsd($1525));
                   $1527 = $1526 <= 1.9999999999999999E-6;
                   if ($1527) {
                    break L1045;
                   }
                  }
                 } while(0);
                 $1528 = ((($4)) + 240|0);
                 $1529 = +HEAPF64[$1528>>3];
                 $1530 = -1.0 * $1529;
                 $1531 = $x134;
                 $1532 = $1530 * $1531;
                 $1533 = ((($4)) + 128|0);
                 $1534 = +HEAPF64[$1533>>3];
                 $1535 = ((($4)) + 264|0);
                 $1536 = +HEAPF64[$1535>>3];
                 $1537 = $1534 * $1536;
                 $1538 = $1532 + $1537;
                 $1539 = ((($4)) + 264|0);
                 $1540 = +HEAPF64[$1539>>3];
                 $1541 = -1.0 * $1540;
                 $1542 = $x134;
                 $1543 = $1541 * $1542;
                 $1544 = ((($4)) + 128|0);
                 $1545 = +HEAPF64[$1544>>3];
                 $1546 = -1.0 * $1545;
                 $1547 = ((($4)) + 240|0);
                 $1548 = +HEAPF64[$1547>>3];
                 $1549 = $1546 * $1548;
                 $1550 = $1543 + $1549;
                 $1551 = (+__Z7IKatan2dd($1538,$1550));
                 HEAPF64[$j5array12>>3] = $1551;
                 $1552 = +HEAPF64[$j5array12>>3];
                 $1553 = (+__Z5IKsind($1552));
                 HEAPF64[$sj5array14>>3] = $1553;
                 $1554 = +HEAPF64[$j5array12>>3];
                 $1555 = (+__Z5IKcosd($1554));
                 HEAPF64[$cj5array13>>3] = $1555;
                 $1556 = +HEAPF64[$j5array12>>3];
                 $1557 = $1556 > 3.14159265358979;
                 $1558 = +HEAPF64[$j5array12>>3];
                 do {
                  if ($1557) {
                   $1559 = $1558 - 6.2831853071795898;
                   HEAPF64[$j5array12>>3] = $1559;
                  } else {
                   $1560 = $1558 < -3.14159265358979;
                   if (!($1560)) {
                    break;
                   }
                   $1561 = +HEAPF64[$j5array12>>3];
                   $1562 = $1561 + 6.2831853071795898;
                   HEAPF64[$j5array12>>3] = $1562;
                  }
                 } while(0);
                 HEAP8[$j5valid15>>0] = 1;
                 $ij516 = 0;
                 while(1) {
                  $1563 = $ij516;
                  $1564 = ($1563|0)<(1);
                  if (!($1564)) {
                   break L1045;
                  }
                  $1565 = $ij516;
                  $1566 = (($j5valid15) + ($1565)|0);
                  $1567 = HEAP8[$1566>>0]|0;
                  $1568 = $1567&1;
                  do {
                   if ($1568) {
                    $1569 = $ij516;
                    $1570 = $1569&255;
                    $1571 = ((($4)) + 551|0);
                    HEAP8[$1571>>0] = $1570;
                    $1572 = ((($4)) + 551|0);
                    $1573 = ((($1572)) + 1|0);
                    HEAP8[$1573>>0] = -1;
                    $1574 = $ij516;
                    $1575 = (($1574) + 1)|0;
                    $iij517 = $1575;
                    L1072: while(1) {
                     $1576 = $iij517;
                     $1577 = ($1576|0)<(1);
                     if (!($1577)) {
                      break;
                     }
                     $1578 = $iij517;
                     $1579 = (($j5valid15) + ($1578)|0);
                     $1580 = HEAP8[$1579>>0]|0;
                     $1581 = $1580&1;
                     do {
                      if ($1581) {
                       $1582 = $ij516;
                       $1583 = (($cj5array13) + ($1582<<3)|0);
                       $1584 = +HEAPF64[$1583>>3];
                       $1585 = $iij517;
                       $1586 = (($cj5array13) + ($1585<<3)|0);
                       $1587 = +HEAPF64[$1586>>3];
                       $1588 = $1584 - $1587;
                       $1589 = (+__Z5IKabsd($1588));
                       $1590 = $1589 < 9.9999999999999995E-7;
                       if (!($1590)) {
                        break;
                       }
                       $1591 = $ij516;
                       $1592 = (($sj5array14) + ($1591<<3)|0);
                       $1593 = +HEAPF64[$1592>>3];
                       $1594 = $iij517;
                       $1595 = (($sj5array14) + ($1594<<3)|0);
                       $1596 = +HEAPF64[$1595>>3];
                       $1597 = $1593 - $1596;
                       $1598 = (+__Z5IKabsd($1597));
                       $1599 = $1598 < 9.9999999999999995E-7;
                       if ($1599) {
                        label = 153;
                        break L1072;
                       }
                      }
                     } while(0);
                     $1606 = $iij517;
                     $1607 = (($1606) + 1)|0;
                     $iij517 = $1607;
                    }
                    if ((label|0) == 153) {
                     label = 0;
                     $1600 = $iij517;
                     $1601 = (($j5valid15) + ($1600)|0);
                     HEAP8[$1601>>0] = 0;
                     $1602 = $iij517;
                     $1603 = $1602&255;
                     $1604 = ((($4)) + 551|0);
                     $1605 = ((($1604)) + 1|0);
                     HEAP8[$1605>>0] = $1603;
                    }
                    $1608 = $ij516;
                    $1609 = (($j5array12) + ($1608<<3)|0);
                    $1610 = +HEAPF64[$1609>>3];
                    $1611 = ((($4)) + 200|0);
                    HEAPF64[$1611>>3] = $1610;
                    $1612 = $ij516;
                    $1613 = (($cj5array13) + ($1612<<3)|0);
                    $1614 = +HEAPF64[$1613>>3];
                    $1615 = ((($4)) + 208|0);
                    HEAPF64[$1615>>3] = $1614;
                    $1616 = $ij516;
                    $1617 = (($sj5array14) + ($1616<<3)|0);
                    $1618 = +HEAPF64[$1617>>3];
                    $1619 = ((($4)) + 216|0);
                    HEAPF64[$1619>>3] = $1618;
                    $1620 = ((($4)) + 200|0);
                    $1621 = +HEAPF64[$1620>>3];
                    $1622 = (+__Z5IKsind($1621));
                    $x135 = $1622;
                    $1623 = ((($4)) + 200|0);
                    $1624 = +HEAPF64[$1623>>3];
                    $1625 = (+__Z5IKcosd($1624));
                    $x136 = $1625;
                    $1626 = ((($4)) + 136|0);
                    $1627 = +HEAPF64[$1626>>3];
                    $1628 = 1.0 * $1627;
                    $x137 = $1628;
                    $1629 = $x135;
                    $1630 = 1.0 * $1629;
                    $x138 = $1630;
                    $1631 = ((($4)) + 136|0);
                    $1632 = +HEAPF64[$1631>>3];
                    $1633 = $x136;
                    $1634 = $1632 * $1633;
                    $x139 = $1634;
                    $1635 = $x136;
                    $1636 = 1.0 * $1635;
                    $x140 = $1636;
                    $1637 = ((($4)) + 128|0);
                    $1638 = +HEAPF64[$1637>>3];
                    $1639 = $x138;
                    $1640 = $1638 * $1639;
                    $x141 = $1640;
                    $1641 = ((($4)) + 312|0);
                    $1642 = +HEAPF64[$1641>>3];
                    $1643 = ((($4)) + 136|0);
                    $1644 = +HEAPF64[$1643>>3];
                    $1645 = $1642 * $1644;
                    $1646 = $x136;
                    $1647 = $1645 + $1646;
                    $1648 = ((($4)) + 128|0);
                    $1649 = +HEAPF64[$1648>>3];
                    $1650 = ((($4)) + 240|0);
                    $1651 = +HEAPF64[$1650>>3];
                    $1652 = $1649 * $1651;
                    $1653 = $1647 + $1652;
                    HEAPF64[$evalcond18>>3] = $1653;
                    $1654 = ((($4)) + 336|0);
                    $1655 = +HEAPF64[$1654>>3];
                    $1656 = ((($4)) + 136|0);
                    $1657 = +HEAPF64[$1656>>3];
                    $1658 = $1655 * $1657;
                    $1659 = $x138;
                    $1660 = -1.0 * $1659;
                    $1661 = $1658 + $1660;
                    $1662 = ((($4)) + 128|0);
                    $1663 = +HEAPF64[$1662>>3];
                    $1664 = ((($4)) + 264|0);
                    $1665 = +HEAPF64[$1664>>3];
                    $1666 = $1663 * $1665;
                    $1667 = $1661 + $1666;
                    $1668 = ((($evalcond18)) + 8|0);
                    HEAPF64[$1668>>3] = $1667;
                    $1669 = ((($4)) + 128|0);
                    $1670 = +HEAPF64[$1669>>3];
                    $1671 = $x136;
                    $1672 = $1670 * $1671;
                    $1673 = ((($4)) + 136|0);
                    $1674 = +HEAPF64[$1673>>3];
                    $1675 = $x135;
                    $1676 = $1674 * $1675;
                    $1677 = $1672 + $1676;
                    $1678 = ((($4)) + 240|0);
                    $1679 = +HEAPF64[$1678>>3];
                    $1680 = $1677 + $1679;
                    $1681 = ((($evalcond18)) + 16|0);
                    HEAPF64[$1681>>3] = $1680;
                    $1682 = ((($4)) + 240|0);
                    $1683 = +HEAPF64[$1682>>3];
                    $1684 = -1.0 * $1683;
                    $1685 = $x137;
                    $1686 = $1684 * $1685;
                    $1687 = $x138;
                    $1688 = -1.0 * $1687;
                    $1689 = $1686 + $1688;
                    $1690 = ((($4)) + 128|0);
                    $1691 = +HEAPF64[$1690>>3];
                    $1692 = ((($4)) + 312|0);
                    $1693 = +HEAPF64[$1692>>3];
                    $1694 = $1691 * $1693;
                    $1695 = $1689 + $1694;
                    $1696 = ((($evalcond18)) + 24|0);
                    HEAPF64[$1696>>3] = $1695;
                    $1697 = $x140;
                    $1698 = -1.0 * $1697;
                    $1699 = ((($4)) + 264|0);
                    $1700 = +HEAPF64[$1699>>3];
                    $1701 = -1.0 * $1700;
                    $1702 = $x137;
                    $1703 = $1701 * $1702;
                    $1704 = $1698 + $1703;
                    $1705 = ((($4)) + 128|0);
                    $1706 = +HEAPF64[$1705>>3];
                    $1707 = ((($4)) + 336|0);
                    $1708 = +HEAPF64[$1707>>3];
                    $1709 = $1706 * $1708;
                    $1710 = $1704 + $1709;
                    $1711 = ((($evalcond18)) + 32|0);
                    HEAPF64[$1711>>3] = $1710;
                    $1712 = $x141;
                    $1713 = -1.0 * $1712;
                    $1714 = $x139;
                    $1715 = $1713 + $1714;
                    $1716 = ((($4)) + 264|0);
                    $1717 = +HEAPF64[$1716>>3];
                    $1718 = $1715 + $1717;
                    $1719 = ((($evalcond18)) + 40|0);
                    HEAPF64[$1719>>3] = $1718;
                    $1720 = $x141;
                    $1721 = -1.0 * $1720;
                    $1722 = $x139;
                    $1723 = $1721 + $1722;
                    $1724 = ((($4)) + 312|0);
                    $1725 = +HEAPF64[$1724>>3];
                    $1726 = $1723 + $1725;
                    $1727 = ((($evalcond18)) + 48|0);
                    HEAPF64[$1727>>3] = $1726;
                    $1728 = $x135;
                    $1729 = -1.0 * $1728;
                    $1730 = $x137;
                    $1731 = $1729 * $1730;
                    $1732 = ((($4)) + 128|0);
                    $1733 = +HEAPF64[$1732>>3];
                    $1734 = -1.0 * $1733;
                    $1735 = $x140;
                    $1736 = $1734 * $1735;
                    $1737 = $1731 + $1736;
                    $1738 = ((($4)) + 336|0);
                    $1739 = +HEAPF64[$1738>>3];
                    $1740 = $1737 + $1739;
                    $1741 = ((($evalcond18)) + 56|0);
                    HEAPF64[$1741>>3] = $1740;
                    $1742 = +HEAPF64[$evalcond18>>3];
                    $1743 = (+__Z5IKabsd($1742));
                    $1744 = $1743 > 5.0000000000000004E-6;
                    if ($1744) {
                     break;
                    }
                    $1745 = ((($evalcond18)) + 8|0);
                    $1746 = +HEAPF64[$1745>>3];
                    $1747 = (+__Z5IKabsd($1746));
                    $1748 = $1747 > 5.0000000000000004E-6;
                    if ($1748) {
                     break;
                    }
                    $1749 = ((($evalcond18)) + 16|0);
                    $1750 = +HEAPF64[$1749>>3];
                    $1751 = (+__Z5IKabsd($1750));
                    $1752 = $1751 > 5.0000000000000004E-6;
                    if ($1752) {
                     break;
                    }
                    $1753 = ((($evalcond18)) + 24|0);
                    $1754 = +HEAPF64[$1753>>3];
                    $1755 = (+__Z5IKabsd($1754));
                    $1756 = $1755 > 5.0000000000000004E-6;
                    if ($1756) {
                     break;
                    }
                    $1757 = ((($evalcond18)) + 32|0);
                    $1758 = +HEAPF64[$1757>>3];
                    $1759 = (+__Z5IKabsd($1758));
                    $1760 = $1759 > 5.0000000000000004E-6;
                    if ($1760) {
                     break;
                    }
                    $1761 = ((($evalcond18)) + 40|0);
                    $1762 = +HEAPF64[$1761>>3];
                    $1763 = (+__Z5IKabsd($1762));
                    $1764 = $1763 > 5.0000000000000004E-6;
                    if ($1764) {
                     break;
                    }
                    $1765 = ((($evalcond18)) + 48|0);
                    $1766 = +HEAPF64[$1765>>3];
                    $1767 = (+__Z5IKabsd($1766));
                    $1768 = $1767 > 5.0000000000000004E-6;
                    if ($1768) {
                     break;
                    }
                    $1769 = ((($evalcond18)) + 56|0);
                    $1770 = +HEAPF64[$1769>>3];
                    $1771 = (+__Z5IKabsd($1770));
                    $1772 = $1771 > 5.0000000000000004E-6;
                    if ($1772) {
                     break;
                    }
                    __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos19,6);
                    __THREW__ = 0;
                    $1773 = (invoke_iii(416,($vinfos19|0),0)|0);
                    $1774 = __THREW__; __THREW__ = 0;
                    $1775 = $1774&1;
                    if ($1775) {
                     label = 198;
                     break L1;
                    }
                    $1776 = ((($1773)) + 17|0);
                    HEAP8[$1776>>0] = 1;
                    $1777 = +HEAPF64[$4>>3];
                    __THREW__ = 0;
                    $1778 = (invoke_iii(416,($vinfos19|0),0)|0);
                    $1779 = __THREW__; __THREW__ = 0;
                    $1780 = $1779&1;
                    if ($1780) {
                     label = 198;
                     break L1;
                    }
                    $1781 = ((($1778)) + 8|0);
                    HEAPF64[$1781>>3] = $1777;
                    $1782 = ((($4)) + 536|0);
                    $1783 = HEAP8[$1782>>0]|0;
                    __THREW__ = 0;
                    $1784 = (invoke_iii(416,($vinfos19|0),0)|0);
                    $1785 = __THREW__; __THREW__ = 0;
                    $1786 = $1785&1;
                    if ($1786) {
                     label = 198;
                     break L1;
                    }
                    $1787 = ((($1784)) + 19|0);
                    HEAP8[$1787>>0] = $1783;
                    $1788 = ((($4)) + 536|0);
                    $1789 = ((($1788)) + 1|0);
                    $1790 = HEAP8[$1789>>0]|0;
                    __THREW__ = 0;
                    $1791 = (invoke_iii(416,($vinfos19|0),0)|0);
                    $1792 = __THREW__; __THREW__ = 0;
                    $1793 = $1792&1;
                    if ($1793) {
                     label = 198;
                     break L1;
                    }
                    $1794 = ((($1791)) + 19|0);
                    $1795 = ((($1794)) + 1|0);
                    HEAP8[$1795>>0] = $1790;
                    $1796 = ((($4)) + 538|0);
                    $1797 = HEAP8[$1796>>0]|0;
                    __THREW__ = 0;
                    $1798 = (invoke_iii(416,($vinfos19|0),0)|0);
                    $1799 = __THREW__; __THREW__ = 0;
                    $1800 = $1799&1;
                    if ($1800) {
                     label = 198;
                     break L1;
                    }
                    $1801 = ((($1798)) + 18|0);
                    HEAP8[$1801>>0] = $1797;
                    __THREW__ = 0;
                    $1802 = (invoke_iii(416,($vinfos19|0),1)|0);
                    $1803 = __THREW__; __THREW__ = 0;
                    $1804 = $1803&1;
                    if ($1804) {
                     label = 198;
                     break L1;
                    }
                    $1805 = ((($1802)) + 17|0);
                    HEAP8[$1805>>0] = 1;
                    $1806 = ((($4)) + 40|0);
                    $1807 = +HEAPF64[$1806>>3];
                    __THREW__ = 0;
                    $1808 = (invoke_iii(416,($vinfos19|0),1)|0);
                    $1809 = __THREW__; __THREW__ = 0;
                    $1810 = $1809&1;
                    if ($1810) {
                     label = 198;
                     break L1;
                    }
                    $1811 = ((($1808)) + 8|0);
                    HEAPF64[$1811>>3] = $1807;
                    $1812 = ((($4)) + 539|0);
                    $1813 = HEAP8[$1812>>0]|0;
                    __THREW__ = 0;
                    $1814 = (invoke_iii(416,($vinfos19|0),1)|0);
                    $1815 = __THREW__; __THREW__ = 0;
                    $1816 = $1815&1;
                    if ($1816) {
                     label = 198;
                     break L1;
                    }
                    $1817 = ((($1814)) + 19|0);
                    HEAP8[$1817>>0] = $1813;
                    $1818 = ((($4)) + 539|0);
                    $1819 = ((($1818)) + 1|0);
                    $1820 = HEAP8[$1819>>0]|0;
                    __THREW__ = 0;
                    $1821 = (invoke_iii(416,($vinfos19|0),1)|0);
                    $1822 = __THREW__; __THREW__ = 0;
                    $1823 = $1822&1;
                    if ($1823) {
                     label = 198;
                     break L1;
                    }
                    $1824 = ((($1821)) + 19|0);
                    $1825 = ((($1824)) + 1|0);
                    HEAP8[$1825>>0] = $1820;
                    $1826 = ((($4)) + 541|0);
                    $1827 = HEAP8[$1826>>0]|0;
                    __THREW__ = 0;
                    $1828 = (invoke_iii(416,($vinfos19|0),1)|0);
                    $1829 = __THREW__; __THREW__ = 0;
                    $1830 = $1829&1;
                    if ($1830) {
                     label = 198;
                     break L1;
                    }
                    $1831 = ((($1828)) + 18|0);
                    HEAP8[$1831>>0] = $1827;
                    __THREW__ = 0;
                    $1832 = (invoke_iii(416,($vinfos19|0),2)|0);
                    $1833 = __THREW__; __THREW__ = 0;
                    $1834 = $1833&1;
                    if ($1834) {
                     label = 198;
                     break L1;
                    }
                    $1835 = ((($1832)) + 17|0);
                    HEAP8[$1835>>0] = 1;
                    $1836 = ((($4)) + 80|0);
                    $1837 = +HEAPF64[$1836>>3];
                    __THREW__ = 0;
                    $1838 = (invoke_iii(416,($vinfos19|0),2)|0);
                    $1839 = __THREW__; __THREW__ = 0;
                    $1840 = $1839&1;
                    if ($1840) {
                     label = 198;
                     break L1;
                    }
                    $1841 = ((($1838)) + 8|0);
                    HEAPF64[$1841>>3] = $1837;
                    $1842 = ((($4)) + 542|0);
                    $1843 = HEAP8[$1842>>0]|0;
                    __THREW__ = 0;
                    $1844 = (invoke_iii(416,($vinfos19|0),2)|0);
                    $1845 = __THREW__; __THREW__ = 0;
                    $1846 = $1845&1;
                    if ($1846) {
                     label = 198;
                     break L1;
                    }
                    $1847 = ((($1844)) + 19|0);
                    HEAP8[$1847>>0] = $1843;
                    $1848 = ((($4)) + 542|0);
                    $1849 = ((($1848)) + 1|0);
                    $1850 = HEAP8[$1849>>0]|0;
                    __THREW__ = 0;
                    $1851 = (invoke_iii(416,($vinfos19|0),2)|0);
                    $1852 = __THREW__; __THREW__ = 0;
                    $1853 = $1852&1;
                    if ($1853) {
                     label = 198;
                     break L1;
                    }
                    $1854 = ((($1851)) + 19|0);
                    $1855 = ((($1854)) + 1|0);
                    HEAP8[$1855>>0] = $1850;
                    $1856 = ((($4)) + 544|0);
                    $1857 = HEAP8[$1856>>0]|0;
                    __THREW__ = 0;
                    $1858 = (invoke_iii(416,($vinfos19|0),2)|0);
                    $1859 = __THREW__; __THREW__ = 0;
                    $1860 = $1859&1;
                    if ($1860) {
                     label = 198;
                     break L1;
                    }
                    $1861 = ((($1858)) + 18|0);
                    HEAP8[$1861>>0] = $1857;
                    __THREW__ = 0;
                    $1862 = (invoke_iii(416,($vinfos19|0),3)|0);
                    $1863 = __THREW__; __THREW__ = 0;
                    $1864 = $1863&1;
                    if ($1864) {
                     label = 198;
                     break L1;
                    }
                    $1865 = ((($1862)) + 17|0);
                    HEAP8[$1865>>0] = 1;
                    $1866 = ((($4)) + 120|0);
                    $1867 = +HEAPF64[$1866>>3];
                    __THREW__ = 0;
                    $1868 = (invoke_iii(416,($vinfos19|0),3)|0);
                    $1869 = __THREW__; __THREW__ = 0;
                    $1870 = $1869&1;
                    if ($1870) {
                     label = 198;
                     break L1;
                    }
                    $1871 = ((($1868)) + 8|0);
                    HEAPF64[$1871>>3] = $1867;
                    $1872 = ((($4)) + 545|0);
                    $1873 = HEAP8[$1872>>0]|0;
                    __THREW__ = 0;
                    $1874 = (invoke_iii(416,($vinfos19|0),3)|0);
                    $1875 = __THREW__; __THREW__ = 0;
                    $1876 = $1875&1;
                    if ($1876) {
                     label = 198;
                     break L1;
                    }
                    $1877 = ((($1874)) + 19|0);
                    HEAP8[$1877>>0] = $1873;
                    $1878 = ((($4)) + 545|0);
                    $1879 = ((($1878)) + 1|0);
                    $1880 = HEAP8[$1879>>0]|0;
                    __THREW__ = 0;
                    $1881 = (invoke_iii(416,($vinfos19|0),3)|0);
                    $1882 = __THREW__; __THREW__ = 0;
                    $1883 = $1882&1;
                    if ($1883) {
                     label = 198;
                     break L1;
                    }
                    $1884 = ((($1881)) + 19|0);
                    $1885 = ((($1884)) + 1|0);
                    HEAP8[$1885>>0] = $1880;
                    $1886 = ((($4)) + 547|0);
                    $1887 = HEAP8[$1886>>0]|0;
                    __THREW__ = 0;
                    $1888 = (invoke_iii(416,($vinfos19|0),3)|0);
                    $1889 = __THREW__; __THREW__ = 0;
                    $1890 = $1889&1;
                    if ($1890) {
                     label = 198;
                     break L1;
                    }
                    $1891 = ((($1888)) + 18|0);
                    HEAP8[$1891>>0] = $1887;
                    __THREW__ = 0;
                    $1892 = (invoke_iii(416,($vinfos19|0),4)|0);
                    $1893 = __THREW__; __THREW__ = 0;
                    $1894 = $1893&1;
                    if ($1894) {
                     label = 198;
                     break L1;
                    }
                    $1895 = ((($1892)) + 17|0);
                    HEAP8[$1895>>0] = 1;
                    $1896 = ((($4)) + 160|0);
                    $1897 = +HEAPF64[$1896>>3];
                    __THREW__ = 0;
                    $1898 = (invoke_iii(416,($vinfos19|0),4)|0);
                    $1899 = __THREW__; __THREW__ = 0;
                    $1900 = $1899&1;
                    if ($1900) {
                     label = 198;
                     break L1;
                    }
                    $1901 = ((($1898)) + 8|0);
                    HEAPF64[$1901>>3] = $1897;
                    $1902 = ((($4)) + 548|0);
                    $1903 = HEAP8[$1902>>0]|0;
                    __THREW__ = 0;
                    $1904 = (invoke_iii(416,($vinfos19|0),4)|0);
                    $1905 = __THREW__; __THREW__ = 0;
                    $1906 = $1905&1;
                    if ($1906) {
                     label = 198;
                     break L1;
                    }
                    $1907 = ((($1904)) + 19|0);
                    HEAP8[$1907>>0] = $1903;
                    $1908 = ((($4)) + 548|0);
                    $1909 = ((($1908)) + 1|0);
                    $1910 = HEAP8[$1909>>0]|0;
                    __THREW__ = 0;
                    $1911 = (invoke_iii(416,($vinfos19|0),4)|0);
                    $1912 = __THREW__; __THREW__ = 0;
                    $1913 = $1912&1;
                    if ($1913) {
                     label = 198;
                     break L1;
                    }
                    $1914 = ((($1911)) + 19|0);
                    $1915 = ((($1914)) + 1|0);
                    HEAP8[$1915>>0] = $1910;
                    $1916 = ((($4)) + 550|0);
                    $1917 = HEAP8[$1916>>0]|0;
                    __THREW__ = 0;
                    $1918 = (invoke_iii(416,($vinfos19|0),4)|0);
                    $1919 = __THREW__; __THREW__ = 0;
                    $1920 = $1919&1;
                    if ($1920) {
                     label = 198;
                     break L1;
                    }
                    $1921 = ((($1918)) + 18|0);
                    HEAP8[$1921>>0] = $1917;
                    __THREW__ = 0;
                    $1922 = (invoke_iii(416,($vinfos19|0),5)|0);
                    $1923 = __THREW__; __THREW__ = 0;
                    $1924 = $1923&1;
                    if ($1924) {
                     label = 198;
                     break L1;
                    }
                    $1925 = ((($1922)) + 17|0);
                    HEAP8[$1925>>0] = 1;
                    $1926 = ((($4)) + 200|0);
                    $1927 = +HEAPF64[$1926>>3];
                    __THREW__ = 0;
                    $1928 = (invoke_iii(416,($vinfos19|0),5)|0);
                    $1929 = __THREW__; __THREW__ = 0;
                    $1930 = $1929&1;
                    if ($1930) {
                     label = 198;
                     break L1;
                    }
                    $1931 = ((($1928)) + 8|0);
                    HEAPF64[$1931>>3] = $1927;
                    $1932 = ((($4)) + 551|0);
                    $1933 = HEAP8[$1932>>0]|0;
                    __THREW__ = 0;
                    $1934 = (invoke_iii(416,($vinfos19|0),5)|0);
                    $1935 = __THREW__; __THREW__ = 0;
                    $1936 = $1935&1;
                    if ($1936) {
                     label = 198;
                     break L1;
                    }
                    $1937 = ((($1934)) + 19|0);
                    HEAP8[$1937>>0] = $1933;
                    $1938 = ((($4)) + 551|0);
                    $1939 = ((($1938)) + 1|0);
                    $1940 = HEAP8[$1939>>0]|0;
                    __THREW__ = 0;
                    $1941 = (invoke_iii(416,($vinfos19|0),5)|0);
                    $1942 = __THREW__; __THREW__ = 0;
                    $1943 = $1942&1;
                    if ($1943) {
                     label = 198;
                     break L1;
                    }
                    $1944 = ((($1941)) + 19|0);
                    $1945 = ((($1944)) + 1|0);
                    HEAP8[$1945>>0] = $1940;
                    $1946 = ((($4)) + 553|0);
                    $1947 = HEAP8[$1946>>0]|0;
                    __THREW__ = 0;
                    $1948 = (invoke_iii(416,($vinfos19|0),5)|0);
                    $1949 = __THREW__; __THREW__ = 0;
                    $1950 = $1949&1;
                    if ($1950) {
                     label = 198;
                     break L1;
                    }
                    $1951 = ((($1948)) + 18|0);
                    HEAP8[$1951>>0] = $1947;
                    __THREW__ = 0;
                    invoke_vii(417,($vfree20|0),0);
                    $1952 = __THREW__; __THREW__ = 0;
                    $1953 = $1952&1;
                    if ($1953) {
                     label = 198;
                     break L1;
                    }
                    $1954 = $1;
                    $1955 = HEAP32[$1954>>2]|0;
                    $1956 = ((($1955)) + 8|0);
                    $1957 = HEAP32[$1956>>2]|0;
                    __THREW__ = 0;
                    (invoke_iiii($1957|0,($1954|0),($vinfos19|0),($vfree20|0))|0);
                    $1958 = __THREW__; __THREW__ = 0;
                    $1959 = $1958&1;
                    if ($1959) {
                     label = 199;
                     break L1;
                    }
                    __THREW__ = 0;
                    invoke_vi(371,($vfree20|0));
                    $1960 = __THREW__; __THREW__ = 0;
                    $1961 = $1960&1;
                    if ($1961) {
                     label = 198;
                     break L1;
                    }
                    __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos19);
                   }
                  } while(0);
                  $1962 = $ij516;
                  $1963 = (($1962) + 1)|0;
                  $ij516 = $1963;
                 }
                }
               } while(0);
               $1972 = $ij39;
               $1973 = (($1972) + 1)|0;
               $ij39 = $1973;
              }
             }
            }
           }
          }
         }
        }
       }
      } while(0);
      $1974 = $bgotonextstatement4;
      $1975 = $1974&1;
      if (!($1975)) {
       break;
      }
      $bgotonextstatement21 = 1;
      $bgotonextstatement21 = 0;
      break;
     }
     ;HEAP8[$j3valid25>>0]=0|0;
     $1976 = ((($4)) + 547|0);
     HEAP8[$1976>>0] = 1;
     $1977 = ((($4)) + 176|0);
     $1978 = +HEAPF64[$1977>>3];
     __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x143,$1978,-1);
     $1979 = ((($x143)) + 8|0);
     $1980 = HEAP8[$1979>>0]|0;
     $1981 = $1980&1;
     if ($1981) {
      $1982 = +HEAPF64[$x143>>3];
      $x142 = $1982;
      $1983 = ((($4)) + 360|0);
      $1984 = +HEAPF64[$1983>>3];
      __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x144,$1984,-1);
      $1985 = ((($x144)) + 8|0);
      $1986 = HEAP8[$1985>>0]|0;
      $1987 = $1986&1;
      if ($1987) {
       $1988 = $x142;
       $1989 = +HEAPF64[$x144>>3];
       $1990 = $1988 * $1989;
       $1991 = ((($4)) + 168|0);
       $1992 = +HEAPF64[$1991>>3];
       $1993 = ((($4)) + 168|0);
       $1994 = +HEAPF64[$1993>>3];
       $1995 = $1992 * $1994;
       $1996 = -1.0 * $1995;
       $1997 = 1.0 + $1996;
       $1998 = ((($4)) + 288|0);
       $1999 = +HEAPF64[$1998>>3];
       $2000 = ((($4)) + 288|0);
       $2001 = +HEAPF64[$2000>>3];
       $2002 = $1999 * $2001;
       $2003 = -1.0 * $2002;
       $2004 = $1997 + $2003;
       $2005 = $1990 * $2004;
       $2006 = (+__Z5IKabsd($2005));
       $2007 = $2006 < 1.9999999999999999E-6;
       if ($2007) {
        $2008 = ((($4)) + 288|0);
        $2009 = +HEAPF64[$2008>>3];
        $2010 = $x142;
        $2011 = $2009 * $2010;
        $2012 = (+__Z5IKabsd($2011));
        $2013 = $2012 < 1.9999999999999999E-6;
        if ($2013) {
         $2014 = $x142;
         $2015 = +HEAPF64[$x144>>3];
         $2016 = $2014 * $2015;
         $2017 = ((($4)) + 168|0);
         $2018 = +HEAPF64[$2017>>3];
         $2019 = ((($4)) + 168|0);
         $2020 = +HEAPF64[$2019>>3];
         $2021 = $2018 * $2020;
         $2022 = -1.0 * $2021;
         $2023 = 1.0 + $2022;
         $2024 = ((($4)) + 288|0);
         $2025 = +HEAPF64[$2024>>3];
         $2026 = ((($4)) + 288|0);
         $2027 = +HEAPF64[$2026>>3];
         $2028 = $2025 * $2027;
         $2029 = -1.0 * $2028;
         $2030 = $2023 + $2029;
         $2031 = $2016 * $2030;
         $2032 = (+__Z5IKsqrd($2031));
         $2033 = ((($4)) + 288|0);
         $2034 = +HEAPF64[$2033>>3];
         $2035 = $x142;
         $2036 = $2034 * $2035;
         $2037 = (+__Z5IKsqrd($2036));
         $2038 = $2032 + $2037;
         $2039 = $2038 - 1.0;
         $2040 = (+__Z5IKabsd($2039));
         $2041 = $2040 <= 1.9999999999999999E-6;
         if ($2041) {
          break;
         }
        }
       }
       $2042 = $x142;
       $2043 = +HEAPF64[$x144>>3];
       $2044 = $2042 * $2043;
       $2045 = ((($4)) + 168|0);
       $2046 = +HEAPF64[$2045>>3];
       $2047 = ((($4)) + 168|0);
       $2048 = +HEAPF64[$2047>>3];
       $2049 = $2046 * $2048;
       $2050 = -1.0 * $2049;
       $2051 = 1.0 + $2050;
       $2052 = ((($4)) + 288|0);
       $2053 = +HEAPF64[$2052>>3];
       $2054 = ((($4)) + 288|0);
       $2055 = +HEAPF64[$2054>>3];
       $2056 = $2053 * $2055;
       $2057 = -1.0 * $2056;
       $2058 = $2051 + $2057;
       $2059 = $2044 * $2058;
       $2060 = ((($4)) + 288|0);
       $2061 = +HEAPF64[$2060>>3];
       $2062 = $x142;
       $2063 = $2061 * $2062;
       $2064 = (+__Z7IKatan2dd($2059,$2063));
       HEAPF64[$j3array22>>3] = $2064;
       $2065 = +HEAPF64[$j3array22>>3];
       $2066 = (+__Z5IKsind($2065));
       HEAPF64[$sj3array24>>3] = $2066;
       $2067 = +HEAPF64[$j3array22>>3];
       $2068 = (+__Z5IKcosd($2067));
       HEAPF64[$cj3array23>>3] = $2068;
       $2069 = +HEAPF64[$j3array22>>3];
       $2070 = $2069 > 3.14159265358979;
       $2071 = +HEAPF64[$j3array22>>3];
       if ($2070) {
        $2072 = $2071 - 6.2831853071795898;
        HEAPF64[$j3array22>>3] = $2072;
       } else {
        $2073 = $2071 < -3.14159265358979;
        if ($2073) {
         $2074 = +HEAPF64[$j3array22>>3];
         $2075 = $2074 + 6.2831853071795898;
         HEAPF64[$j3array22>>3] = $2075;
        }
       }
       HEAP8[$j3valid25>>0] = 1;
       $ij326 = 0;
       while(1) {
        $2076 = $ij326;
        $2077 = ($2076|0)<(1);
        if (!($2077)) {
         break L14;
        }
        $2078 = $ij326;
        $2079 = (($j3valid25) + ($2078)|0);
        $2080 = HEAP8[$2079>>0]|0;
        $2081 = $2080&1;
        L1142: do {
         if ($2081) {
          $2082 = $ij326;
          $2083 = $2082&255;
          $2084 = ((($4)) + 545|0);
          HEAP8[$2084>>0] = $2083;
          $2085 = ((($4)) + 545|0);
          $2086 = ((($2085)) + 1|0);
          HEAP8[$2086>>0] = -1;
          $2087 = $ij326;
          $2088 = (($2087) + 1)|0;
          $iij327 = $2088;
          L1144: while(1) {
           $2089 = $iij327;
           $2090 = ($2089|0)<(1);
           if (!($2090)) {
            break;
           }
           $2091 = $iij327;
           $2092 = (($j3valid25) + ($2091)|0);
           $2093 = HEAP8[$2092>>0]|0;
           $2094 = $2093&1;
           do {
            if ($2094) {
             $2095 = $ij326;
             $2096 = (($cj3array23) + ($2095<<3)|0);
             $2097 = +HEAPF64[$2096>>3];
             $2098 = $iij327;
             $2099 = (($cj3array23) + ($2098<<3)|0);
             $2100 = +HEAPF64[$2099>>3];
             $2101 = $2097 - $2100;
             $2102 = (+__Z5IKabsd($2101));
             $2103 = $2102 < 9.9999999999999995E-7;
             if (!($2103)) {
              break;
             }
             $2104 = $ij326;
             $2105 = (($sj3array24) + ($2104<<3)|0);
             $2106 = +HEAPF64[$2105>>3];
             $2107 = $iij327;
             $2108 = (($sj3array24) + ($2107<<3)|0);
             $2109 = +HEAPF64[$2108>>3];
             $2110 = $2106 - $2109;
             $2111 = (+__Z5IKabsd($2110));
             $2112 = $2111 < 9.9999999999999995E-7;
             if ($2112) {
              label = 221;
              break L1144;
             }
            }
           } while(0);
           $2119 = $iij327;
           $2120 = (($2119) + 1)|0;
           $iij327 = $2120;
          }
          if ((label|0) == 221) {
           label = 0;
           $2113 = $iij327;
           $2114 = (($j3valid25) + ($2113)|0);
           HEAP8[$2114>>0] = 0;
           $2115 = $iij327;
           $2116 = $2115&255;
           $2117 = ((($4)) + 545|0);
           $2118 = ((($2117)) + 1|0);
           HEAP8[$2118>>0] = $2116;
          }
          $2121 = $ij326;
          $2122 = (($j3array22) + ($2121<<3)|0);
          $2123 = +HEAPF64[$2122>>3];
          $2124 = ((($4)) + 120|0);
          HEAPF64[$2124>>3] = $2123;
          $2125 = $ij326;
          $2126 = (($cj3array23) + ($2125<<3)|0);
          $2127 = +HEAPF64[$2126>>3];
          $2128 = ((($4)) + 128|0);
          HEAPF64[$2128>>3] = $2127;
          $2129 = $ij326;
          $2130 = (($sj3array24) + ($2129<<3)|0);
          $2131 = +HEAPF64[$2130>>3];
          $2132 = ((($4)) + 136|0);
          HEAPF64[$2132>>3] = $2131;
          $2133 = ((($4)) + 120|0);
          $2134 = +HEAPF64[$2133>>3];
          $2135 = (+__Z5IKcosd($2134));
          $x145 = $2135;
          $2136 = ((($4)) + 120|0);
          $2137 = +HEAPF64[$2136>>3];
          $2138 = (+__Z5IKsind($2137));
          $x146 = $2138;
          $2139 = ((($4)) + 176|0);
          $2140 = +HEAPF64[$2139>>3];
          $2141 = 1.0 * $2140;
          $x147 = $2141;
          $2142 = ((($4)) + 168|0);
          $2143 = +HEAPF64[$2142>>3];
          $2144 = 1.0 * $2143;
          $x148 = $2144;
          $2145 = ((($4)) + 288|0);
          $2146 = +HEAPF64[$2145>>3];
          $2147 = $x145;
          $2148 = $2146 * $2147;
          $x149 = $2148;
          $2149 = ((($4)) + 360|0);
          $2150 = +HEAPF64[$2149>>3];
          $2151 = $x146;
          $2152 = $2150 * $2151;
          $x150 = $2152;
          $2153 = $x145;
          $2154 = -1.0 * $2153;
          $2155 = $x147;
          $2156 = $2154 * $2155;
          $2157 = ((($4)) + 288|0);
          $2158 = +HEAPF64[$2157>>3];
          $2159 = $2156 + $2158;
          HEAPF64[$evalcond28>>3] = $2159;
          $2160 = $x146;
          $2161 = -1.0 * $2160;
          $2162 = $x147;
          $2163 = $2161 * $2162;
          $2164 = ((($4)) + 360|0);
          $2165 = +HEAPF64[$2164>>3];
          $2166 = $2163 + $2165;
          $2167 = ((($evalcond28)) + 8|0);
          HEAPF64[$2167>>3] = $2166;
          $2168 = ((($4)) + 360|0);
          $2169 = +HEAPF64[$2168>>3];
          $2170 = $x145;
          $2171 = $2169 * $2170;
          $2172 = ((($4)) + 288|0);
          $2173 = +HEAPF64[$2172>>3];
          $2174 = -1.0 * $2173;
          $2175 = $x146;
          $2176 = $2174 * $2175;
          $2177 = $2171 + $2176;
          $2178 = ((($evalcond28)) + 16|0);
          HEAPF64[$2178>>3] = $2177;
          $2179 = $x147;
          $2180 = -1.0 * $2179;
          $2181 = $x150;
          $2182 = $2180 + $2181;
          $2183 = $x149;
          $2184 = $2182 + $2183;
          $2185 = ((($evalcond28)) + 24|0);
          HEAPF64[$2185>>3] = $2184;
          $2186 = ((($4)) + 168|0);
          $2187 = +HEAPF64[$2186>>3];
          $2188 = $x150;
          $2189 = $2187 * $2188;
          $2190 = ((($4)) + 432|0);
          $2191 = +HEAPF64[$2190>>3];
          $2192 = -1.0 * $2191;
          $2193 = $x147;
          $2194 = $2192 * $2193;
          $2195 = $2189 + $2194;
          $2196 = ((($4)) + 168|0);
          $2197 = +HEAPF64[$2196>>3];
          $2198 = $x149;
          $2199 = $2197 * $2198;
          $2200 = $2195 + $2199;
          $2201 = ((($evalcond28)) + 32|0);
          HEAPF64[$2201>>3] = $2200;
          $2202 = ((($4)) + 312|0);
          $2203 = +HEAPF64[$2202>>3];
          $2204 = -1.0 * $2203;
          $2205 = $x146;
          $2206 = $2204 * $2205;
          $2207 = $x147;
          $2208 = $2206 * $2207;
          $2209 = ((($4)) + 384|0);
          $2210 = +HEAPF64[$2209>>3];
          $2211 = -1.0 * $2210;
          $2212 = $x148;
          $2213 = $2211 * $2212;
          $2214 = $2208 + $2213;
          $2215 = ((($4)) + 240|0);
          $2216 = +HEAPF64[$2215>>3];
          $2217 = -1.0 * $2216;
          $2218 = $x145;
          $2219 = $2217 * $2218;
          $2220 = $x147;
          $2221 = $2219 * $2220;
          $2222 = $2214 + $2221;
          $2223 = ((($evalcond28)) + 40|0);
          HEAPF64[$2223>>3] = $2222;
          $2224 = ((($4)) + 408|0);
          $2225 = +HEAPF64[$2224>>3];
          $2226 = -1.0 * $2225;
          $2227 = $x148;
          $2228 = $2226 * $2227;
          $2229 = ((($4)) + 336|0);
          $2230 = +HEAPF64[$2229>>3];
          $2231 = -1.0 * $2230;
          $2232 = $x146;
          $2233 = $2231 * $2232;
          $2234 = $x147;
          $2235 = $2233 * $2234;
          $2236 = $2228 + $2235;
          $2237 = ((($4)) + 264|0);
          $2238 = +HEAPF64[$2237>>3];
          $2239 = -1.0 * $2238;
          $2240 = $x145;
          $2241 = $2239 * $2240;
          $2242 = $x147;
          $2243 = $2241 * $2242;
          $2244 = $2236 + $2243;
          $2245 = ((($evalcond28)) + 48|0);
          HEAPF64[$2245>>3] = $2244;
          $2246 = ((($4)) + 432|0);
          $2247 = +HEAPF64[$2246>>3];
          $2248 = -1.0 * $2247;
          $2249 = $x148;
          $2250 = $2248 * $2249;
          $2251 = 1.0 + $2250;
          $2252 = $x147;
          $2253 = -1.0 * $2252;
          $2254 = $x149;
          $2255 = $2253 * $2254;
          $2256 = $2251 + $2255;
          $2257 = $x147;
          $2258 = -1.0 * $2257;
          $2259 = $x150;
          $2260 = $2258 * $2259;
          $2261 = $2256 + $2260;
          $2262 = ((($evalcond28)) + 56|0);
          HEAPF64[$2262>>3] = $2261;
          $2263 = +HEAPF64[$evalcond28>>3];
          $2264 = (+__Z5IKabsd($2263));
          $2265 = $2264 > 5.0000000000000004E-6;
          if (!($2265)) {
           $2266 = ((($evalcond28)) + 8|0);
           $2267 = +HEAPF64[$2266>>3];
           $2268 = (+__Z5IKabsd($2267));
           $2269 = $2268 > 5.0000000000000004E-6;
           if (!($2269)) {
            $2270 = ((($evalcond28)) + 16|0);
            $2271 = +HEAPF64[$2270>>3];
            $2272 = (+__Z5IKabsd($2271));
            $2273 = $2272 > 5.0000000000000004E-6;
            if (!($2273)) {
             $2274 = ((($evalcond28)) + 24|0);
             $2275 = +HEAPF64[$2274>>3];
             $2276 = (+__Z5IKabsd($2275));
             $2277 = $2276 > 5.0000000000000004E-6;
             if ($2277) {
              break;
             }
             $2278 = ((($evalcond28)) + 32|0);
             $2279 = +HEAPF64[$2278>>3];
             $2280 = (+__Z5IKabsd($2279));
             $2281 = $2280 > 5.0000000000000004E-6;
             if ($2281) {
              break;
             }
             $2282 = ((($evalcond28)) + 40|0);
             $2283 = +HEAPF64[$2282>>3];
             $2284 = (+__Z5IKabsd($2283));
             $2285 = $2284 > 5.0000000000000004E-6;
             if ($2285) {
              break;
             }
             $2286 = ((($evalcond28)) + 48|0);
             $2287 = +HEAPF64[$2286>>3];
             $2288 = (+__Z5IKabsd($2287));
             $2289 = $2288 > 5.0000000000000004E-6;
             if ($2289) {
              break;
             }
             $2290 = ((($evalcond28)) + 56|0);
             $2291 = +HEAPF64[$2290>>3];
             $2292 = (+__Z5IKabsd($2291));
             $2293 = $2292 > 5.0000000000000004E-6;
             if ($2293) {
              break;
             }
             $2294 = ((($4)) + 8|0);
             $2295 = +HEAPF64[$2294>>3];
             $2296 = ((($4)) + 248|0);
             $2297 = +HEAPF64[$2296>>3];
             $2298 = $2295 * $2297;
             $x151 = $2298;
             $2299 = ((($4)) + 8|0);
             $2300 = +HEAPF64[$2299>>3];
             $2301 = ((($4)) + 272|0);
             $2302 = +HEAPF64[$2301>>3];
             $2303 = $2300 * $2302;
             $x152 = $2303;
             $2304 = ((($4)) + 56|0);
             $2305 = +HEAPF64[$2304>>3];
             $2306 = 1.0 * $2305;
             $x153 = $2306;
             $2307 = ((($4)) + 16|0);
             $2308 = +HEAPF64[$2307>>3];
             $2309 = 1.0 * $2308;
             $x154 = $2309;
             $2310 = ((($4)) + 344|0);
             $2311 = +HEAPF64[$2310>>3];
             $2312 = ((($4)) + 16|0);
             $2313 = +HEAPF64[$2312>>3];
             $2314 = $2311 * $2313;
             $x155 = $2314;
             $2315 = ((($4)) + 48|0);
             $2316 = +HEAPF64[$2315>>3];
             $2317 = ((($4)) + 96|0);
             $2318 = +HEAPF64[$2317>>3];
             $2319 = $2316 * $2318;
             $x156 = $2319;
             $2320 = ((($4)) + 8|0);
             $2321 = +HEAPF64[$2320>>3];
             $2322 = ((($4)) + 296|0);
             $2323 = +HEAPF64[$2322>>3];
             $2324 = $2321 * $2323;
             $x157 = $2324;
             $2325 = $x90;
             $x158 = $2325;
             $2326 = ((($4)) + 88|0);
             $2327 = +HEAPF64[$2326>>3];
             $2328 = ((($4)) + 56|0);
             $2329 = +HEAPF64[$2328>>3];
             $2330 = $2327 * $2329;
             $2331 = $x156;
             $2332 = $2330 + $2331;
             $x159 = $2332;
             $2333 = ((($4)) + 8|0);
             $2334 = +HEAPF64[$2333>>3];
             $2335 = $x158;
             $2336 = $2334 * $2335;
             $x160 = $2336;
             $2337 = ((($4)) + 16|0);
             $2338 = +HEAPF64[$2337>>3];
             $2339 = $x158;
             $2340 = $2338 * $2339;
             $x161 = $2340;
             $2341 = ((($4)) + 16|0);
             $2342 = +HEAPF64[$2341>>3];
             $2343 = $x159;
             $2344 = $2342 * $2343;
             $x162 = $2344;
             $2345 = $x95;
             $x163 = $2345;
             $2346 = ((($4)) + 392|0);
             $2347 = +HEAPF64[$2346>>3];
             $2348 = $x163;
             $2349 = $2347 * $2348;
             $2350 = $x151;
             $2351 = $x158;
             $2352 = $2350 * $2351;
             $2353 = $2349 + $2352;
             $2354 = ((($4)) + 320|0);
             $2355 = +HEAPF64[$2354>>3];
             $2356 = $x161;
             $2357 = $2355 * $2356;
             $2358 = $2353 + $2357;
             $2359 = ((($4)) + 240|0);
             HEAPF64[$2359>>3] = $2358;
             $2360 = $x152;
             $2361 = $x158;
             $2362 = $2360 * $2361;
             $2363 = ((($4)) + 416|0);
             $2364 = +HEAPF64[$2363>>3];
             $2365 = $x163;
             $2366 = $2364 * $2365;
             $2367 = $2362 + $2366;
             $2368 = $x155;
             $2369 = $x158;
             $2370 = $2368 * $2369;
             $2371 = $2367 + $2370;
             $2372 = ((($4)) + 264|0);
             HEAPF64[$2372>>3] = $2371;
             $2373 = ((($4)) + 440|0);
             $2374 = +HEAPF64[$2373>>3];
             $2375 = $x163;
             $2376 = $2374 * $2375;
             $2377 = $x157;
             $2378 = $x158;
             $2379 = $2377 * $2378;
             $2380 = $2376 + $2379;
             $2381 = ((($4)) + 368|0);
             $2382 = +HEAPF64[$2381>>3];
             $2383 = $x161;
             $2384 = $2382 * $2383;
             $2385 = $2380 + $2384;
             $2386 = ((($4)) + 288|0);
             HEAPF64[$2386>>3] = $2385;
             $2387 = ((($4)) + 248|0);
             $2388 = +HEAPF64[$2387>>3];
             $2389 = -1.0 * $2388;
             $2390 = $x154;
             $2391 = $2389 * $2390;
             $2392 = ((($4)) + 8|0);
             $2393 = +HEAPF64[$2392>>3];
             $2394 = ((($4)) + 320|0);
             $2395 = +HEAPF64[$2394>>3];
             $2396 = $2393 * $2395;
             $2397 = $2391 + $2396;
             $2398 = ((($4)) + 312|0);
             HEAPF64[$2398>>3] = $2397;
             $2399 = ((($4)) + 272|0);
             $2400 = +HEAPF64[$2399>>3];
             $2401 = -1.0 * $2400;
             $2402 = $x154;
             $2403 = $2401 * $2402;
             $2404 = ((($4)) + 8|0);
             $2405 = +HEAPF64[$2404>>3];
             $2406 = ((($4)) + 344|0);
             $2407 = +HEAPF64[$2406>>3];
             $2408 = $2405 * $2407;
             $2409 = $2403 + $2408;
             $2410 = ((($4)) + 336|0);
             HEAPF64[$2410>>3] = $2409;
             $2411 = ((($4)) + 296|0);
             $2412 = +HEAPF64[$2411>>3];
             $2413 = -1.0 * $2412;
             $2414 = $x154;
             $2415 = $2413 * $2414;
             $2416 = ((($4)) + 8|0);
             $2417 = +HEAPF64[$2416>>3];
             $2418 = ((($4)) + 368|0);
             $2419 = +HEAPF64[$2418>>3];
             $2420 = $2417 * $2419;
             $2421 = $2415 + $2420;
             $2422 = ((($4)) + 360|0);
             HEAPF64[$2422>>3] = $2421;
             $2423 = ((($4)) + 392|0);
             $2424 = +HEAPF64[$2423>>3];
             $2425 = $x158;
             $2426 = $2424 * $2425;
             $2427 = $x151;
             $2428 = $x159;
             $2429 = $2427 * $2428;
             $2430 = $2426 + $2429;
             $2431 = ((($4)) + 320|0);
             $2432 = +HEAPF64[$2431>>3];
             $2433 = $x162;
             $2434 = $2432 * $2433;
             $2435 = $2430 + $2434;
             $2436 = ((($4)) + 384|0);
             HEAPF64[$2436>>3] = $2435;
             $2437 = $x152;
             $2438 = $x159;
             $2439 = $2437 * $2438;
             $2440 = $x155;
             $2441 = $x159;
             $2442 = $2440 * $2441;
             $2443 = $2439 + $2442;
             $2444 = ((($4)) + 416|0);
             $2445 = +HEAPF64[$2444>>3];
             $2446 = $x158;
             $2447 = $2445 * $2446;
             $2448 = $2443 + $2447;
             $2449 = ((($4)) + 408|0);
             HEAPF64[$2449>>3] = $2448;
             $2450 = $x157;
             $2451 = $x159;
             $2452 = $2450 * $2451;
             $2453 = ((($4)) + 368|0);
             $2454 = +HEAPF64[$2453>>3];
             $2455 = $x162;
             $2456 = $2454 * $2455;
             $2457 = $2452 + $2456;
             $2458 = ((($4)) + 440|0);
             $2459 = +HEAPF64[$2458>>3];
             $2460 = $x158;
             $2461 = $2459 * $2460;
             $2462 = $2457 + $2461;
             $2463 = ((($4)) + 432|0);
             HEAPF64[$2463>>3] = $2462;
             $2464 = ((($4)) + 176|0);
             $2465 = +HEAPF64[$2464>>3];
             HEAPF64[$j5eval>>3] = $2465;
             $2466 = ((($4)) + 176|0);
             $2467 = +HEAPF64[$2466>>3];
             $2468 = (+__Z6IKsignd($2467));
             $2469 = ((($j5eval)) + 8|0);
             HEAPF64[$2469>>3] = $2468;
             $2470 = +HEAPF64[$j5eval>>3];
             $2471 = (+__Z5IKabsd($2470));
             $2472 = $2471 < 9.9999999999999995E-7;
             do {
              if (!($2472)) {
               $2473 = ((($j5eval)) + 8|0);
               $2474 = +HEAPF64[$2473>>3];
               $2475 = (+__Z5IKabsd($2474));
               $2476 = $2475 < 9.9999999999999995E-7;
               if ($2476) {
                break;
               }
               ;HEAP8[$j5valid134>>0]=0|0;
               $8529 = ((($4)) + 553|0);
               HEAP8[$8529>>0] = 1;
               $8530 = ((($4)) + 176|0);
               $8531 = +HEAPF64[$8530>>3];
               $8532 = (+__Z6IKsignd($8531));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x294,$8532,-1);
               $8533 = ((($x294)) + 8|0);
               $8534 = HEAP8[$8533>>0]|0;
               $8535 = $8534&1;
               if (!($8535)) {
                break L1142;
               }
               $8536 = ((($4)) + 408|0);
               $8537 = +HEAPF64[$8536>>3];
               $8538 = ((($4)) + 384|0);
               $8539 = +HEAPF64[$8538>>3];
               $8540 = -1.0 * $8539;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x295,$8537,$8540,1.9999999999999999E-6);
               $8541 = ((($x295)) + 8|0);
               $8542 = HEAP8[$8541>>0]|0;
               $8543 = $8542&1;
               if (!($8543)) {
                break L1142;
               }
               $8544 = +HEAPF64[$x294>>3];
               $8545 = 1.5707963267949001 * $8544;
               $8546 = -1.5707963267949001 + $8545;
               $8547 = +HEAPF64[$x295>>3];
               $8548 = $8546 + $8547;
               HEAPF64[$j5array131>>3] = $8548;
               $8549 = +HEAPF64[$j5array131>>3];
               $8550 = (+__Z5IKsind($8549));
               HEAPF64[$sj5array133>>3] = $8550;
               $8551 = +HEAPF64[$j5array131>>3];
               $8552 = (+__Z5IKcosd($8551));
               HEAPF64[$cj5array132>>3] = $8552;
               $8553 = +HEAPF64[$j5array131>>3];
               $8554 = $8553 > 3.14159265358979;
               $8555 = +HEAPF64[$j5array131>>3];
               do {
                if ($8554) {
                 $8556 = $8555 - 6.2831853071795898;
                 HEAPF64[$j5array131>>3] = $8556;
                } else {
                 $8557 = $8555 < -3.14159265358979;
                 if (!($8557)) {
                  break;
                 }
                 $8558 = +HEAPF64[$j5array131>>3];
                 $8559 = $8558 + 6.2831853071795898;
                 HEAPF64[$j5array131>>3] = $8559;
                }
               } while(0);
               HEAP8[$j5valid134>>0] = 1;
               $ij5135 = 0;
               while(1) {
                $8560 = $ij5135;
                $8561 = ($8560|0)<(1);
                if (!($8561)) {
                 break L1142;
                }
                $8562 = $ij5135;
                $8563 = (($j5valid134) + ($8562)|0);
                $8564 = HEAP8[$8563>>0]|0;
                $8565 = $8564&1;
                do {
                 if ($8565) {
                  $8566 = $ij5135;
                  $8567 = $8566&255;
                  $8568 = ((($4)) + 551|0);
                  HEAP8[$8568>>0] = $8567;
                  $8569 = ((($4)) + 551|0);
                  $8570 = ((($8569)) + 1|0);
                  HEAP8[$8570>>0] = -1;
                  $8571 = $ij5135;
                  $8572 = (($8571) + 1)|0;
                  $iij5136 = $8572;
                  L1177: while(1) {
                   $8573 = $iij5136;
                   $8574 = ($8573|0)<(1);
                   if (!($8574)) {
                    break;
                   }
                   $8575 = $iij5136;
                   $8576 = (($j5valid134) + ($8575)|0);
                   $8577 = HEAP8[$8576>>0]|0;
                   $8578 = $8577&1;
                   do {
                    if ($8578) {
                     $8579 = $ij5135;
                     $8580 = (($cj5array132) + ($8579<<3)|0);
                     $8581 = +HEAPF64[$8580>>3];
                     $8582 = $iij5136;
                     $8583 = (($cj5array132) + ($8582<<3)|0);
                     $8584 = +HEAPF64[$8583>>3];
                     $8585 = $8581 - $8584;
                     $8586 = (+__Z5IKabsd($8585));
                     $8587 = $8586 < 9.9999999999999995E-7;
                     if (!($8587)) {
                      break;
                     }
                     $8588 = $ij5135;
                     $8589 = (($sj5array133) + ($8588<<3)|0);
                     $8590 = +HEAPF64[$8589>>3];
                     $8591 = $iij5136;
                     $8592 = (($sj5array133) + ($8591<<3)|0);
                     $8593 = +HEAPF64[$8592>>3];
                     $8594 = $8590 - $8593;
                     $8595 = (+__Z5IKabsd($8594));
                     $8596 = $8595 < 9.9999999999999995E-7;
                     if ($8596) {
                      label = 986;
                      break L1177;
                     }
                    }
                   } while(0);
                   $8603 = $iij5136;
                   $8604 = (($8603) + 1)|0;
                   $iij5136 = $8604;
                  }
                  if ((label|0) == 986) {
                   label = 0;
                   $8597 = $iij5136;
                   $8598 = (($j5valid134) + ($8597)|0);
                   HEAP8[$8598>>0] = 0;
                   $8599 = $iij5136;
                   $8600 = $8599&255;
                   $8601 = ((($4)) + 551|0);
                   $8602 = ((($8601)) + 1|0);
                   HEAP8[$8602>>0] = $8600;
                  }
                  $8605 = $ij5135;
                  $8606 = (($j5array131) + ($8605<<3)|0);
                  $8607 = +HEAPF64[$8606>>3];
                  $8608 = ((($4)) + 200|0);
                  HEAPF64[$8608>>3] = $8607;
                  $8609 = $ij5135;
                  $8610 = (($cj5array132) + ($8609<<3)|0);
                  $8611 = +HEAPF64[$8610>>3];
                  $8612 = ((($4)) + 208|0);
                  HEAPF64[$8612>>3] = $8611;
                  $8613 = $ij5135;
                  $8614 = (($sj5array133) + ($8613<<3)|0);
                  $8615 = +HEAPF64[$8614>>3];
                  $8616 = ((($4)) + 216|0);
                  HEAPF64[$8616>>3] = $8615;
                  $8617 = ((($4)) + 200|0);
                  $8618 = +HEAPF64[$8617>>3];
                  $8619 = (+__Z5IKsind($8618));
                  $x296 = $8619;
                  $8620 = ((($4)) + 200|0);
                  $8621 = +HEAPF64[$8620>>3];
                  $8622 = (+__Z5IKcosd($8621));
                  $x297 = $8622;
                  $8623 = ((($4)) + 128|0);
                  $8624 = +HEAPF64[$8623>>3];
                  $8625 = ((($4)) + 240|0);
                  $8626 = +HEAPF64[$8625>>3];
                  $8627 = $8624 * $8626;
                  $x298 = $8627;
                  $8628 = ((($4)) + 128|0);
                  $8629 = +HEAPF64[$8628>>3];
                  $8630 = ((($4)) + 168|0);
                  $8631 = +HEAPF64[$8630>>3];
                  $8632 = $8629 * $8631;
                  $x299 = $8632;
                  $8633 = ((($4)) + 168|0);
                  $8634 = +HEAPF64[$8633>>3];
                  $8635 = ((($4)) + 136|0);
                  $8636 = +HEAPF64[$8635>>3];
                  $8637 = $8634 * $8636;
                  $x300 = $8637;
                  $8638 = ((($4)) + 136|0);
                  $8639 = +HEAPF64[$8638>>3];
                  $8640 = 1.0 * $8639;
                  $x301 = $8640;
                  $8641 = ((($4)) + 176|0);
                  $8642 = +HEAPF64[$8641>>3];
                  $8643 = 1.0 * $8642;
                  $x302 = $8643;
                  $8644 = $x297;
                  $8645 = 1.0 * $8644;
                  $x303 = $8645;
                  $8646 = ((($4)) + 136|0);
                  $8647 = +HEAPF64[$8646>>3];
                  $8648 = $x296;
                  $8649 = $8647 * $8648;
                  $x304 = $8649;
                  $8650 = $x296;
                  $8651 = 1.0 * $8650;
                  $x305 = $8651;
                  $8652 = ((($4)) + 176|0);
                  $8653 = +HEAPF64[$8652>>3];
                  $8654 = $x297;
                  $8655 = $8653 * $8654;
                  $8656 = ((($4)) + 384|0);
                  $8657 = +HEAPF64[$8656>>3];
                  $8658 = $8655 + $8657;
                  HEAPF64[$evalcond137>>3] = $8658;
                  $8659 = $x296;
                  $8660 = -1.0 * $8659;
                  $8661 = $x302;
                  $8662 = $8660 * $8661;
                  $8663 = ((($4)) + 408|0);
                  $8664 = +HEAPF64[$8663>>3];
                  $8665 = $8662 + $8664;
                  $8666 = ((($evalcond137)) + 8|0);
                  HEAPF64[$8666>>3] = $8665;
                  $8667 = ((($4)) + 336|0);
                  $8668 = +HEAPF64[$8667>>3];
                  $8669 = ((($4)) + 136|0);
                  $8670 = +HEAPF64[$8669>>3];
                  $8671 = $8668 * $8670;
                  $8672 = ((($4)) + 168|0);
                  $8673 = +HEAPF64[$8672>>3];
                  $8674 = $x296;
                  $8675 = $8673 * $8674;
                  $8676 = $8671 + $8675;
                  $8677 = ((($4)) + 128|0);
                  $8678 = +HEAPF64[$8677>>3];
                  $8679 = ((($4)) + 264|0);
                  $8680 = +HEAPF64[$8679>>3];
                  $8681 = $8678 * $8680;
                  $8682 = $8676 + $8681;
                  $8683 = ((($evalcond137)) + 16|0);
                  HEAPF64[$8683>>3] = $8682;
                  $8684 = ((($4)) + 128|0);
                  $8685 = +HEAPF64[$8684>>3];
                  $8686 = ((($4)) + 312|0);
                  $8687 = +HEAPF64[$8686>>3];
                  $8688 = $8685 * $8687;
                  $8689 = ((($4)) + 240|0);
                  $8690 = +HEAPF64[$8689>>3];
                  $8691 = -1.0 * $8690;
                  $8692 = $x301;
                  $8693 = $8691 * $8692;
                  $8694 = $8688 + $8693;
                  $8695 = $x305;
                  $8696 = -1.0 * $8695;
                  $8697 = $8694 + $8696;
                  $8698 = ((($evalcond137)) + 24|0);
                  HEAPF64[$8698>>3] = $8697;
                  $8699 = ((($4)) + 264|0);
                  $8700 = +HEAPF64[$8699>>3];
                  $8701 = -1.0 * $8700;
                  $8702 = $x301;
                  $8703 = $8701 * $8702;
                  $8704 = ((($4)) + 128|0);
                  $8705 = +HEAPF64[$8704>>3];
                  $8706 = ((($4)) + 336|0);
                  $8707 = +HEAPF64[$8706>>3];
                  $8708 = $8705 * $8707;
                  $8709 = $8703 + $8708;
                  $8710 = $x303;
                  $8711 = -1.0 * $8710;
                  $8712 = $8709 + $8711;
                  $8713 = ((($evalcond137)) + 32|0);
                  HEAPF64[$8713>>3] = $8712;
                  $8714 = $x296;
                  $8715 = $x299;
                  $8716 = $8714 * $8715;
                  $8717 = ((($4)) + 264|0);
                  $8718 = +HEAPF64[$8717>>3];
                  $8719 = $8716 + $8718;
                  $8720 = ((($4)) + 136|0);
                  $8721 = +HEAPF64[$8720>>3];
                  $8722 = $x297;
                  $8723 = $8721 * $8722;
                  $8724 = $8719 + $8723;
                  $8725 = ((($evalcond137)) + 40|0);
                  HEAPF64[$8725>>3] = $8724;
                  $8726 = ((($4)) + 312|0);
                  $8727 = +HEAPF64[$8726>>3];
                  $8728 = ((($4)) + 136|0);
                  $8729 = +HEAPF64[$8728>>3];
                  $8730 = $8727 * $8729;
                  $8731 = ((($4)) + 168|0);
                  $8732 = +HEAPF64[$8731>>3];
                  $8733 = -1.0 * $8732;
                  $8734 = $x303;
                  $8735 = $8733 * $8734;
                  $8736 = $8730 + $8735;
                  $8737 = $x298;
                  $8738 = $8736 + $8737;
                  $8739 = ((($evalcond137)) + 48|0);
                  HEAPF64[$8739>>3] = $8738;
                  $8740 = $x304;
                  $8741 = $x299;
                  $8742 = -1.0 * $8741;
                  $8743 = $x303;
                  $8744 = $8742 * $8743;
                  $8745 = $8740 + $8744;
                  $8746 = ((($4)) + 240|0);
                  $8747 = +HEAPF64[$8746>>3];
                  $8748 = $8745 + $8747;
                  $8749 = ((($evalcond137)) + 56|0);
                  HEAPF64[$8749>>3] = $8748;
                  $8750 = ((($4)) + 128|0);
                  $8751 = +HEAPF64[$8750>>3];
                  $8752 = -1.0 * $8751;
                  $8753 = $x303;
                  $8754 = $8752 * $8753;
                  $8755 = $x296;
                  $8756 = $x300;
                  $8757 = $8755 * $8756;
                  $8758 = $8754 + $8757;
                  $8759 = ((($4)) + 336|0);
                  $8760 = +HEAPF64[$8759>>3];
                  $8761 = $8758 + $8760;
                  $8762 = ((($evalcond137)) + 64|0);
                  HEAPF64[$8762>>3] = $8761;
                  $8763 = ((($4)) + 128|0);
                  $8764 = +HEAPF64[$8763>>3];
                  $8765 = -1.0 * $8764;
                  $8766 = $x305;
                  $8767 = $8765 * $8766;
                  $8768 = ((($4)) + 312|0);
                  $8769 = +HEAPF64[$8768>>3];
                  $8770 = $8767 + $8769;
                  $8771 = $x300;
                  $8772 = -1.0 * $8771;
                  $8773 = $x303;
                  $8774 = $8772 * $8773;
                  $8775 = $8770 + $8774;
                  $8776 = ((($evalcond137)) + 72|0);
                  HEAPF64[$8776>>3] = $8775;
                  $8777 = ((($4)) + 336|0);
                  $8778 = +HEAPF64[$8777>>3];
                  $8779 = $x300;
                  $8780 = $8778 * $8779;
                  $8781 = ((($4)) + 408|0);
                  $8782 = +HEAPF64[$8781>>3];
                  $8783 = -1.0 * $8782;
                  $8784 = $x302;
                  $8785 = $8783 * $8784;
                  $8786 = $8780 + $8785;
                  $8787 = $x296;
                  $8788 = $8786 + $8787;
                  $8789 = ((($4)) + 264|0);
                  $8790 = +HEAPF64[$8789>>3];
                  $8791 = $x299;
                  $8792 = $8790 * $8791;
                  $8793 = $8788 + $8792;
                  $8794 = ((($evalcond137)) + 80|0);
                  HEAPF64[$8794>>3] = $8793;
                  $8795 = ((($4)) + 312|0);
                  $8796 = +HEAPF64[$8795>>3];
                  $8797 = $x300;
                  $8798 = $8796 * $8797;
                  $8799 = ((($4)) + 168|0);
                  $8800 = +HEAPF64[$8799>>3];
                  $8801 = $x298;
                  $8802 = $8800 * $8801;
                  $8803 = $8798 + $8802;
                  $8804 = ((($4)) + 384|0);
                  $8805 = +HEAPF64[$8804>>3];
                  $8806 = -1.0 * $8805;
                  $8807 = $x302;
                  $8808 = $8806 * $8807;
                  $8809 = $8803 + $8808;
                  $8810 = $x303;
                  $8811 = -1.0 * $8810;
                  $8812 = $8809 + $8811;
                  $8813 = ((($evalcond137)) + 88|0);
                  HEAPF64[$8813>>3] = $8812;
                  $8814 = +HEAPF64[$evalcond137>>3];
                  $8815 = (+__Z5IKabsd($8814));
                  $8816 = $8815 > 5.0000000000000004E-6;
                  if ($8816) {
                   break;
                  }
                  $8817 = ((($evalcond137)) + 8|0);
                  $8818 = +HEAPF64[$8817>>3];
                  $8819 = (+__Z5IKabsd($8818));
                  $8820 = $8819 > 5.0000000000000004E-6;
                  if ($8820) {
                   break;
                  }
                  $8821 = ((($evalcond137)) + 16|0);
                  $8822 = +HEAPF64[$8821>>3];
                  $8823 = (+__Z5IKabsd($8822));
                  $8824 = $8823 > 5.0000000000000004E-6;
                  if ($8824) {
                   break;
                  }
                  $8825 = ((($evalcond137)) + 24|0);
                  $8826 = +HEAPF64[$8825>>3];
                  $8827 = (+__Z5IKabsd($8826));
                  $8828 = $8827 > 5.0000000000000004E-6;
                  if ($8828) {
                   break;
                  }
                  $8829 = ((($evalcond137)) + 32|0);
                  $8830 = +HEAPF64[$8829>>3];
                  $8831 = (+__Z5IKabsd($8830));
                  $8832 = $8831 > 5.0000000000000004E-6;
                  if ($8832) {
                   break;
                  }
                  $8833 = ((($evalcond137)) + 40|0);
                  $8834 = +HEAPF64[$8833>>3];
                  $8835 = (+__Z5IKabsd($8834));
                  $8836 = $8835 > 5.0000000000000004E-6;
                  if ($8836) {
                   break;
                  }
                  $8837 = ((($evalcond137)) + 48|0);
                  $8838 = +HEAPF64[$8837>>3];
                  $8839 = (+__Z5IKabsd($8838));
                  $8840 = $8839 > 5.0000000000000004E-6;
                  if ($8840) {
                   break;
                  }
                  $8841 = ((($evalcond137)) + 56|0);
                  $8842 = +HEAPF64[$8841>>3];
                  $8843 = (+__Z5IKabsd($8842));
                  $8844 = $8843 > 5.0000000000000004E-6;
                  if ($8844) {
                   break;
                  }
                  $8845 = ((($evalcond137)) + 64|0);
                  $8846 = +HEAPF64[$8845>>3];
                  $8847 = (+__Z5IKabsd($8846));
                  $8848 = $8847 > 5.0000000000000004E-6;
                  if ($8848) {
                   break;
                  }
                  $8849 = ((($evalcond137)) + 72|0);
                  $8850 = +HEAPF64[$8849>>3];
                  $8851 = (+__Z5IKabsd($8850));
                  $8852 = $8851 > 5.0000000000000004E-6;
                  if ($8852) {
                   break;
                  }
                  $8853 = ((($evalcond137)) + 80|0);
                  $8854 = +HEAPF64[$8853>>3];
                  $8855 = (+__Z5IKabsd($8854));
                  $8856 = $8855 > 5.0000000000000004E-6;
                  if ($8856) {
                   break;
                  }
                  $8857 = ((($evalcond137)) + 88|0);
                  $8858 = +HEAPF64[$8857>>3];
                  $8859 = (+__Z5IKabsd($8858));
                  $8860 = $8859 > 5.0000000000000004E-6;
                  if ($8860) {
                   break;
                  }
                  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos138,6);
                  __THREW__ = 0;
                  $8861 = (invoke_iii(416,($vinfos138|0),0)|0);
                  $8862 = __THREW__; __THREW__ = 0;
                  $8863 = $8862&1;
                  if ($8863) {
                   label = 1035;
                   break L1;
                  }
                  $8864 = ((($8861)) + 17|0);
                  HEAP8[$8864>>0] = 1;
                  $8865 = +HEAPF64[$4>>3];
                  __THREW__ = 0;
                  $8866 = (invoke_iii(416,($vinfos138|0),0)|0);
                  $8867 = __THREW__; __THREW__ = 0;
                  $8868 = $8867&1;
                  if ($8868) {
                   label = 1035;
                   break L1;
                  }
                  $8869 = ((($8866)) + 8|0);
                  HEAPF64[$8869>>3] = $8865;
                  $8870 = ((($4)) + 536|0);
                  $8871 = HEAP8[$8870>>0]|0;
                  __THREW__ = 0;
                  $8872 = (invoke_iii(416,($vinfos138|0),0)|0);
                  $8873 = __THREW__; __THREW__ = 0;
                  $8874 = $8873&1;
                  if ($8874) {
                   label = 1035;
                   break L1;
                  }
                  $8875 = ((($8872)) + 19|0);
                  HEAP8[$8875>>0] = $8871;
                  $8876 = ((($4)) + 536|0);
                  $8877 = ((($8876)) + 1|0);
                  $8878 = HEAP8[$8877>>0]|0;
                  __THREW__ = 0;
                  $8879 = (invoke_iii(416,($vinfos138|0),0)|0);
                  $8880 = __THREW__; __THREW__ = 0;
                  $8881 = $8880&1;
                  if ($8881) {
                   label = 1035;
                   break L1;
                  }
                  $8882 = ((($8879)) + 19|0);
                  $8883 = ((($8882)) + 1|0);
                  HEAP8[$8883>>0] = $8878;
                  $8884 = ((($4)) + 538|0);
                  $8885 = HEAP8[$8884>>0]|0;
                  __THREW__ = 0;
                  $8886 = (invoke_iii(416,($vinfos138|0),0)|0);
                  $8887 = __THREW__; __THREW__ = 0;
                  $8888 = $8887&1;
                  if ($8888) {
                   label = 1035;
                   break L1;
                  }
                  $8889 = ((($8886)) + 18|0);
                  HEAP8[$8889>>0] = $8885;
                  __THREW__ = 0;
                  $8890 = (invoke_iii(416,($vinfos138|0),1)|0);
                  $8891 = __THREW__; __THREW__ = 0;
                  $8892 = $8891&1;
                  if ($8892) {
                   label = 1035;
                   break L1;
                  }
                  $8893 = ((($8890)) + 17|0);
                  HEAP8[$8893>>0] = 1;
                  $8894 = ((($4)) + 40|0);
                  $8895 = +HEAPF64[$8894>>3];
                  __THREW__ = 0;
                  $8896 = (invoke_iii(416,($vinfos138|0),1)|0);
                  $8897 = __THREW__; __THREW__ = 0;
                  $8898 = $8897&1;
                  if ($8898) {
                   label = 1035;
                   break L1;
                  }
                  $8899 = ((($8896)) + 8|0);
                  HEAPF64[$8899>>3] = $8895;
                  $8900 = ((($4)) + 539|0);
                  $8901 = HEAP8[$8900>>0]|0;
                  __THREW__ = 0;
                  $8902 = (invoke_iii(416,($vinfos138|0),1)|0);
                  $8903 = __THREW__; __THREW__ = 0;
                  $8904 = $8903&1;
                  if ($8904) {
                   label = 1035;
                   break L1;
                  }
                  $8905 = ((($8902)) + 19|0);
                  HEAP8[$8905>>0] = $8901;
                  $8906 = ((($4)) + 539|0);
                  $8907 = ((($8906)) + 1|0);
                  $8908 = HEAP8[$8907>>0]|0;
                  __THREW__ = 0;
                  $8909 = (invoke_iii(416,($vinfos138|0),1)|0);
                  $8910 = __THREW__; __THREW__ = 0;
                  $8911 = $8910&1;
                  if ($8911) {
                   label = 1035;
                   break L1;
                  }
                  $8912 = ((($8909)) + 19|0);
                  $8913 = ((($8912)) + 1|0);
                  HEAP8[$8913>>0] = $8908;
                  $8914 = ((($4)) + 541|0);
                  $8915 = HEAP8[$8914>>0]|0;
                  __THREW__ = 0;
                  $8916 = (invoke_iii(416,($vinfos138|0),1)|0);
                  $8917 = __THREW__; __THREW__ = 0;
                  $8918 = $8917&1;
                  if ($8918) {
                   label = 1035;
                   break L1;
                  }
                  $8919 = ((($8916)) + 18|0);
                  HEAP8[$8919>>0] = $8915;
                  __THREW__ = 0;
                  $8920 = (invoke_iii(416,($vinfos138|0),2)|0);
                  $8921 = __THREW__; __THREW__ = 0;
                  $8922 = $8921&1;
                  if ($8922) {
                   label = 1035;
                   break L1;
                  }
                  $8923 = ((($8920)) + 17|0);
                  HEAP8[$8923>>0] = 1;
                  $8924 = ((($4)) + 80|0);
                  $8925 = +HEAPF64[$8924>>3];
                  __THREW__ = 0;
                  $8926 = (invoke_iii(416,($vinfos138|0),2)|0);
                  $8927 = __THREW__; __THREW__ = 0;
                  $8928 = $8927&1;
                  if ($8928) {
                   label = 1035;
                   break L1;
                  }
                  $8929 = ((($8926)) + 8|0);
                  HEAPF64[$8929>>3] = $8925;
                  $8930 = ((($4)) + 542|0);
                  $8931 = HEAP8[$8930>>0]|0;
                  __THREW__ = 0;
                  $8932 = (invoke_iii(416,($vinfos138|0),2)|0);
                  $8933 = __THREW__; __THREW__ = 0;
                  $8934 = $8933&1;
                  if ($8934) {
                   label = 1035;
                   break L1;
                  }
                  $8935 = ((($8932)) + 19|0);
                  HEAP8[$8935>>0] = $8931;
                  $8936 = ((($4)) + 542|0);
                  $8937 = ((($8936)) + 1|0);
                  $8938 = HEAP8[$8937>>0]|0;
                  __THREW__ = 0;
                  $8939 = (invoke_iii(416,($vinfos138|0),2)|0);
                  $8940 = __THREW__; __THREW__ = 0;
                  $8941 = $8940&1;
                  if ($8941) {
                   label = 1035;
                   break L1;
                  }
                  $8942 = ((($8939)) + 19|0);
                  $8943 = ((($8942)) + 1|0);
                  HEAP8[$8943>>0] = $8938;
                  $8944 = ((($4)) + 544|0);
                  $8945 = HEAP8[$8944>>0]|0;
                  __THREW__ = 0;
                  $8946 = (invoke_iii(416,($vinfos138|0),2)|0);
                  $8947 = __THREW__; __THREW__ = 0;
                  $8948 = $8947&1;
                  if ($8948) {
                   label = 1035;
                   break L1;
                  }
                  $8949 = ((($8946)) + 18|0);
                  HEAP8[$8949>>0] = $8945;
                  __THREW__ = 0;
                  $8950 = (invoke_iii(416,($vinfos138|0),3)|0);
                  $8951 = __THREW__; __THREW__ = 0;
                  $8952 = $8951&1;
                  if ($8952) {
                   label = 1035;
                   break L1;
                  }
                  $8953 = ((($8950)) + 17|0);
                  HEAP8[$8953>>0] = 1;
                  $8954 = ((($4)) + 120|0);
                  $8955 = +HEAPF64[$8954>>3];
                  __THREW__ = 0;
                  $8956 = (invoke_iii(416,($vinfos138|0),3)|0);
                  $8957 = __THREW__; __THREW__ = 0;
                  $8958 = $8957&1;
                  if ($8958) {
                   label = 1035;
                   break L1;
                  }
                  $8959 = ((($8956)) + 8|0);
                  HEAPF64[$8959>>3] = $8955;
                  $8960 = ((($4)) + 545|0);
                  $8961 = HEAP8[$8960>>0]|0;
                  __THREW__ = 0;
                  $8962 = (invoke_iii(416,($vinfos138|0),3)|0);
                  $8963 = __THREW__; __THREW__ = 0;
                  $8964 = $8963&1;
                  if ($8964) {
                   label = 1035;
                   break L1;
                  }
                  $8965 = ((($8962)) + 19|0);
                  HEAP8[$8965>>0] = $8961;
                  $8966 = ((($4)) + 545|0);
                  $8967 = ((($8966)) + 1|0);
                  $8968 = HEAP8[$8967>>0]|0;
                  __THREW__ = 0;
                  $8969 = (invoke_iii(416,($vinfos138|0),3)|0);
                  $8970 = __THREW__; __THREW__ = 0;
                  $8971 = $8970&1;
                  if ($8971) {
                   label = 1035;
                   break L1;
                  }
                  $8972 = ((($8969)) + 19|0);
                  $8973 = ((($8972)) + 1|0);
                  HEAP8[$8973>>0] = $8968;
                  $8974 = ((($4)) + 547|0);
                  $8975 = HEAP8[$8974>>0]|0;
                  __THREW__ = 0;
                  $8976 = (invoke_iii(416,($vinfos138|0),3)|0);
                  $8977 = __THREW__; __THREW__ = 0;
                  $8978 = $8977&1;
                  if ($8978) {
                   label = 1035;
                   break L1;
                  }
                  $8979 = ((($8976)) + 18|0);
                  HEAP8[$8979>>0] = $8975;
                  __THREW__ = 0;
                  $8980 = (invoke_iii(416,($vinfos138|0),4)|0);
                  $8981 = __THREW__; __THREW__ = 0;
                  $8982 = $8981&1;
                  if ($8982) {
                   label = 1035;
                   break L1;
                  }
                  $8983 = ((($8980)) + 17|0);
                  HEAP8[$8983>>0] = 1;
                  $8984 = ((($4)) + 160|0);
                  $8985 = +HEAPF64[$8984>>3];
                  __THREW__ = 0;
                  $8986 = (invoke_iii(416,($vinfos138|0),4)|0);
                  $8987 = __THREW__; __THREW__ = 0;
                  $8988 = $8987&1;
                  if ($8988) {
                   label = 1035;
                   break L1;
                  }
                  $8989 = ((($8986)) + 8|0);
                  HEAPF64[$8989>>3] = $8985;
                  $8990 = ((($4)) + 548|0);
                  $8991 = HEAP8[$8990>>0]|0;
                  __THREW__ = 0;
                  $8992 = (invoke_iii(416,($vinfos138|0),4)|0);
                  $8993 = __THREW__; __THREW__ = 0;
                  $8994 = $8993&1;
                  if ($8994) {
                   label = 1035;
                   break L1;
                  }
                  $8995 = ((($8992)) + 19|0);
                  HEAP8[$8995>>0] = $8991;
                  $8996 = ((($4)) + 548|0);
                  $8997 = ((($8996)) + 1|0);
                  $8998 = HEAP8[$8997>>0]|0;
                  __THREW__ = 0;
                  $8999 = (invoke_iii(416,($vinfos138|0),4)|0);
                  $9000 = __THREW__; __THREW__ = 0;
                  $9001 = $9000&1;
                  if ($9001) {
                   label = 1035;
                   break L1;
                  }
                  $9002 = ((($8999)) + 19|0);
                  $9003 = ((($9002)) + 1|0);
                  HEAP8[$9003>>0] = $8998;
                  $9004 = ((($4)) + 550|0);
                  $9005 = HEAP8[$9004>>0]|0;
                  __THREW__ = 0;
                  $9006 = (invoke_iii(416,($vinfos138|0),4)|0);
                  $9007 = __THREW__; __THREW__ = 0;
                  $9008 = $9007&1;
                  if ($9008) {
                   label = 1035;
                   break L1;
                  }
                  $9009 = ((($9006)) + 18|0);
                  HEAP8[$9009>>0] = $9005;
                  __THREW__ = 0;
                  $9010 = (invoke_iii(416,($vinfos138|0),5)|0);
                  $9011 = __THREW__; __THREW__ = 0;
                  $9012 = $9011&1;
                  if ($9012) {
                   label = 1035;
                   break L1;
                  }
                  $9013 = ((($9010)) + 17|0);
                  HEAP8[$9013>>0] = 1;
                  $9014 = ((($4)) + 200|0);
                  $9015 = +HEAPF64[$9014>>3];
                  __THREW__ = 0;
                  $9016 = (invoke_iii(416,($vinfos138|0),5)|0);
                  $9017 = __THREW__; __THREW__ = 0;
                  $9018 = $9017&1;
                  if ($9018) {
                   label = 1035;
                   break L1;
                  }
                  $9019 = ((($9016)) + 8|0);
                  HEAPF64[$9019>>3] = $9015;
                  $9020 = ((($4)) + 551|0);
                  $9021 = HEAP8[$9020>>0]|0;
                  __THREW__ = 0;
                  $9022 = (invoke_iii(416,($vinfos138|0),5)|0);
                  $9023 = __THREW__; __THREW__ = 0;
                  $9024 = $9023&1;
                  if ($9024) {
                   label = 1035;
                   break L1;
                  }
                  $9025 = ((($9022)) + 19|0);
                  HEAP8[$9025>>0] = $9021;
                  $9026 = ((($4)) + 551|0);
                  $9027 = ((($9026)) + 1|0);
                  $9028 = HEAP8[$9027>>0]|0;
                  __THREW__ = 0;
                  $9029 = (invoke_iii(416,($vinfos138|0),5)|0);
                  $9030 = __THREW__; __THREW__ = 0;
                  $9031 = $9030&1;
                  if ($9031) {
                   label = 1035;
                   break L1;
                  }
                  $9032 = ((($9029)) + 19|0);
                  $9033 = ((($9032)) + 1|0);
                  HEAP8[$9033>>0] = $9028;
                  $9034 = ((($4)) + 553|0);
                  $9035 = HEAP8[$9034>>0]|0;
                  __THREW__ = 0;
                  $9036 = (invoke_iii(416,($vinfos138|0),5)|0);
                  $9037 = __THREW__; __THREW__ = 0;
                  $9038 = $9037&1;
                  if ($9038) {
                   label = 1035;
                   break L1;
                  }
                  $9039 = ((($9036)) + 18|0);
                  HEAP8[$9039>>0] = $9035;
                  __THREW__ = 0;
                  invoke_vii(417,($vfree139|0),0);
                  $9040 = __THREW__; __THREW__ = 0;
                  $9041 = $9040&1;
                  if ($9041) {
                   label = 1035;
                   break L1;
                  }
                  $9042 = $1;
                  $9043 = HEAP32[$9042>>2]|0;
                  $9044 = ((($9043)) + 8|0);
                  $9045 = HEAP32[$9044>>2]|0;
                  __THREW__ = 0;
                  (invoke_iiii($9045|0,($9042|0),($vinfos138|0),($vfree139|0))|0);
                  $9046 = __THREW__; __THREW__ = 0;
                  $9047 = $9046&1;
                  if ($9047) {
                   label = 1036;
                   break L1;
                  }
                  __THREW__ = 0;
                  invoke_vi(371,($vfree139|0));
                  $9048 = __THREW__; __THREW__ = 0;
                  $9049 = $9048&1;
                  if ($9049) {
                   label = 1035;
                   break L1;
                  }
                  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos138);
                 }
                } while(0);
                $9050 = $ij5135;
                $9051 = (($9050) + 1)|0;
                $ij5135 = $9051;
               }
              }
             } while(0);
             $2477 = ((($4)) + 8|0);
             $2478 = +HEAPF64[$2477>>3];
             $2479 = ((($4)) + 248|0);
             $2480 = +HEAPF64[$2479>>3];
             $2481 = $2478 * $2480;
             $x164 = $2481;
             $2482 = ((($4)) + 8|0);
             $2483 = +HEAPF64[$2482>>3];
             $2484 = ((($4)) + 272|0);
             $2485 = +HEAPF64[$2484>>3];
             $2486 = $2483 * $2485;
             $x165 = $2486;
             $2487 = ((($4)) + 56|0);
             $2488 = +HEAPF64[$2487>>3];
             $2489 = 1.0 * $2488;
             $x166 = $2489;
             $2490 = ((($4)) + 16|0);
             $2491 = +HEAPF64[$2490>>3];
             $2492 = 1.0 * $2491;
             $x167 = $2492;
             $2493 = ((($4)) + 344|0);
             $2494 = +HEAPF64[$2493>>3];
             $2495 = ((($4)) + 16|0);
             $2496 = +HEAPF64[$2495>>3];
             $2497 = $2494 * $2496;
             $x168 = $2497;
             $2498 = ((($4)) + 48|0);
             $2499 = +HEAPF64[$2498>>3];
             $2500 = ((($4)) + 96|0);
             $2501 = +HEAPF64[$2500>>3];
             $2502 = $2499 * $2501;
             $x169 = $2502;
             $2503 = ((($4)) + 8|0);
             $2504 = +HEAPF64[$2503>>3];
             $2505 = ((($4)) + 296|0);
             $2506 = +HEAPF64[$2505>>3];
             $2507 = $2504 * $2506;
             $x170 = $2507;
             $2508 = $x90;
             $x171 = $2508;
             $2509 = ((($4)) + 88|0);
             $2510 = +HEAPF64[$2509>>3];
             $2511 = ((($4)) + 56|0);
             $2512 = +HEAPF64[$2511>>3];
             $2513 = $2510 * $2512;
             $2514 = $x169;
             $2515 = $2513 + $2514;
             $x172 = $2515;
             $2516 = ((($4)) + 8|0);
             $2517 = +HEAPF64[$2516>>3];
             $2518 = $x171;
             $2519 = $2517 * $2518;
             $x173 = $2519;
             $2520 = ((($4)) + 16|0);
             $2521 = +HEAPF64[$2520>>3];
             $2522 = $x171;
             $2523 = $2521 * $2522;
             $x174 = $2523;
             $2524 = ((($4)) + 16|0);
             $2525 = +HEAPF64[$2524>>3];
             $2526 = $x172;
             $2527 = $2525 * $2526;
             $x175 = $2527;
             $2528 = $x95;
             $x176 = $2528;
             $2529 = ((($4)) + 392|0);
             $2530 = +HEAPF64[$2529>>3];
             $2531 = $x176;
             $2532 = $2530 * $2531;
             $2533 = $x164;
             $2534 = $x171;
             $2535 = $2533 * $2534;
             $2536 = $2532 + $2535;
             $2537 = ((($4)) + 320|0);
             $2538 = +HEAPF64[$2537>>3];
             $2539 = $x174;
             $2540 = $2538 * $2539;
             $2541 = $2536 + $2540;
             $2542 = ((($4)) + 240|0);
             HEAPF64[$2542>>3] = $2541;
             $2543 = $x168;
             $2544 = $x171;
             $2545 = $2543 * $2544;
             $2546 = ((($4)) + 416|0);
             $2547 = +HEAPF64[$2546>>3];
             $2548 = $x176;
             $2549 = $2547 * $2548;
             $2550 = $2545 + $2549;
             $2551 = $x165;
             $2552 = $x171;
             $2553 = $2551 * $2552;
             $2554 = $2550 + $2553;
             $2555 = ((($4)) + 264|0);
             HEAPF64[$2555>>3] = $2554;
             $2556 = ((($4)) + 440|0);
             $2557 = +HEAPF64[$2556>>3];
             $2558 = $x176;
             $2559 = $2557 * $2558;
             $2560 = $x170;
             $2561 = $x171;
             $2562 = $2560 * $2561;
             $2563 = $2559 + $2562;
             $2564 = ((($4)) + 368|0);
             $2565 = +HEAPF64[$2564>>3];
             $2566 = $x174;
             $2567 = $2565 * $2566;
             $2568 = $2563 + $2567;
             $2569 = ((($4)) + 288|0);
             HEAPF64[$2569>>3] = $2568;
             $2570 = ((($4)) + 248|0);
             $2571 = +HEAPF64[$2570>>3];
             $2572 = -1.0 * $2571;
             $2573 = $x167;
             $2574 = $2572 * $2573;
             $2575 = ((($4)) + 8|0);
             $2576 = +HEAPF64[$2575>>3];
             $2577 = ((($4)) + 320|0);
             $2578 = +HEAPF64[$2577>>3];
             $2579 = $2576 * $2578;
             $2580 = $2574 + $2579;
             $2581 = ((($4)) + 312|0);
             HEAPF64[$2581>>3] = $2580;
             $2582 = ((($4)) + 272|0);
             $2583 = +HEAPF64[$2582>>3];
             $2584 = -1.0 * $2583;
             $2585 = $x167;
             $2586 = $2584 * $2585;
             $2587 = ((($4)) + 8|0);
             $2588 = +HEAPF64[$2587>>3];
             $2589 = ((($4)) + 344|0);
             $2590 = +HEAPF64[$2589>>3];
             $2591 = $2588 * $2590;
             $2592 = $2586 + $2591;
             $2593 = ((($4)) + 336|0);
             HEAPF64[$2593>>3] = $2592;
             $2594 = ((($4)) + 296|0);
             $2595 = +HEAPF64[$2594>>3];
             $2596 = -1.0 * $2595;
             $2597 = $x167;
             $2598 = $2596 * $2597;
             $2599 = ((($4)) + 8|0);
             $2600 = +HEAPF64[$2599>>3];
             $2601 = ((($4)) + 368|0);
             $2602 = +HEAPF64[$2601>>3];
             $2603 = $2600 * $2602;
             $2604 = $2598 + $2603;
             $2605 = ((($4)) + 360|0);
             HEAPF64[$2605>>3] = $2604;
             $2606 = ((($4)) + 392|0);
             $2607 = +HEAPF64[$2606>>3];
             $2608 = $x171;
             $2609 = $2607 * $2608;
             $2610 = $x164;
             $2611 = $x172;
             $2612 = $2610 * $2611;
             $2613 = $2609 + $2612;
             $2614 = ((($4)) + 320|0);
             $2615 = +HEAPF64[$2614>>3];
             $2616 = $x175;
             $2617 = $2615 * $2616;
             $2618 = $2613 + $2617;
             $2619 = ((($4)) + 384|0);
             HEAPF64[$2619>>3] = $2618;
             $2620 = $x168;
             $2621 = $x172;
             $2622 = $2620 * $2621;
             $2623 = ((($4)) + 416|0);
             $2624 = +HEAPF64[$2623>>3];
             $2625 = $x171;
             $2626 = $2624 * $2625;
             $2627 = $2622 + $2626;
             $2628 = $x165;
             $2629 = $x172;
             $2630 = $2628 * $2629;
             $2631 = $2627 + $2630;
             $2632 = ((($4)) + 408|0);
             HEAPF64[$2632>>3] = $2631;
             $2633 = ((($4)) + 440|0);
             $2634 = +HEAPF64[$2633>>3];
             $2635 = $x171;
             $2636 = $2634 * $2635;
             $2637 = $x170;
             $2638 = $x172;
             $2639 = $2637 * $2638;
             $2640 = $2636 + $2639;
             $2641 = ((($4)) + 368|0);
             $2642 = +HEAPF64[$2641>>3];
             $2643 = $x175;
             $2644 = $2642 * $2643;
             $2645 = $2640 + $2644;
             $2646 = ((($4)) + 432|0);
             HEAPF64[$2646>>3] = $2645;
             $2647 = ((($4)) + 136|0);
             $2648 = +HEAPF64[$2647>>3];
             HEAPF64[$j5eval29>>3] = $2648;
             $2649 = ((($4)) + 176|0);
             $2650 = +HEAPF64[$2649>>3];
             $2651 = ((($j5eval29)) + 8|0);
             HEAPF64[$2651>>3] = $2650;
             $2652 = +HEAPF64[$j5eval29>>3];
             $2653 = (+__Z5IKabsd($2652));
             $2654 = $2653 < 9.9999999999999995E-7;
             do {
              if (!($2654)) {
               $2655 = ((($j5eval29)) + 8|0);
               $2656 = +HEAPF64[$2655>>3];
               $2657 = (+__Z5IKabsd($2656));
               $2658 = $2657 < 9.9999999999999995E-7;
               if ($2658) {
                break;
               }
               ;HEAP8[$j5valid125>>0]=0|0;
               $7920 = ((($4)) + 553|0);
               HEAP8[$7920>>0] = 1;
               $7921 = ((($4)) + 176|0);
               $7922 = +HEAPF64[$7921>>3];
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x282,$7922,-1);
               $7923 = ((($x282)) + 8|0);
               $7924 = HEAP8[$7923>>0]|0;
               $7925 = $7924&1;
               if (!($7925)) {
                break L1142;
               }
               $7926 = +HEAPF64[$x282>>3];
               $x281 = $7926;
               $7927 = ((($4)) + 136|0);
               $7928 = +HEAPF64[$7927>>3];
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x283,$7928,-1);
               $7929 = ((($x283)) + 8|0);
               $7930 = HEAP8[$7929>>0]|0;
               $7931 = $7930&1;
               if (!($7931)) {
                break L1142;
               }
               $7932 = $x281;
               $7933 = +HEAPF64[$x283>>3];
               $7934 = $7932 * $7933;
               $7935 = ((($4)) + 128|0);
               $7936 = +HEAPF64[$7935>>3];
               $7937 = -1.0 * $7936;
               $7938 = ((($4)) + 168|0);
               $7939 = +HEAPF64[$7938>>3];
               $7940 = $7937 * $7939;
               $7941 = ((($4)) + 384|0);
               $7942 = +HEAPF64[$7941>>3];
               $7943 = $7940 * $7942;
               $7944 = ((($4)) + 240|0);
               $7945 = +HEAPF64[$7944>>3];
               $7946 = -1.0 * $7945;
               $7947 = ((($4)) + 176|0);
               $7948 = +HEAPF64[$7947>>3];
               $7949 = $7946 * $7948;
               $7950 = $7943 + $7949;
               $7951 = $7934 * $7950;
               $7952 = (+__Z5IKabsd($7951));
               $7953 = $7952 < 1.9999999999999999E-6;
               do {
                if ($7953) {
                 $7954 = ((($4)) + 384|0);
                 $7955 = +HEAPF64[$7954>>3];
                 $7956 = -1.0 * $7955;
                 $7957 = $x281;
                 $7958 = $7956 * $7957;
                 $7959 = (+__Z5IKabsd($7958));
                 $7960 = $7959 < 1.9999999999999999E-6;
                 if (!($7960)) {
                  break;
                 }
                 $7961 = $x281;
                 $7962 = +HEAPF64[$x283>>3];
                 $7963 = $7961 * $7962;
                 $7964 = ((($4)) + 128|0);
                 $7965 = +HEAPF64[$7964>>3];
                 $7966 = -1.0 * $7965;
                 $7967 = ((($4)) + 168|0);
                 $7968 = +HEAPF64[$7967>>3];
                 $7969 = $7966 * $7968;
                 $7970 = ((($4)) + 384|0);
                 $7971 = +HEAPF64[$7970>>3];
                 $7972 = $7969 * $7971;
                 $7973 = ((($4)) + 240|0);
                 $7974 = +HEAPF64[$7973>>3];
                 $7975 = -1.0 * $7974;
                 $7976 = ((($4)) + 176|0);
                 $7977 = +HEAPF64[$7976>>3];
                 $7978 = $7975 * $7977;
                 $7979 = $7972 + $7978;
                 $7980 = $7963 * $7979;
                 $7981 = (+__Z5IKsqrd($7980));
                 $7982 = ((($4)) + 384|0);
                 $7983 = +HEAPF64[$7982>>3];
                 $7984 = -1.0 * $7983;
                 $7985 = $x281;
                 $7986 = $7984 * $7985;
                 $7987 = (+__Z5IKsqrd($7986));
                 $7988 = $7981 + $7987;
                 $7989 = $7988 - 1.0;
                 $7990 = (+__Z5IKabsd($7989));
                 $7991 = $7990 <= 1.9999999999999999E-6;
                 if ($7991) {
                  break L1142;
                 }
                }
               } while(0);
               $7992 = $x281;
               $7993 = +HEAPF64[$x283>>3];
               $7994 = $7992 * $7993;
               $7995 = ((($4)) + 128|0);
               $7996 = +HEAPF64[$7995>>3];
               $7997 = -1.0 * $7996;
               $7998 = ((($4)) + 168|0);
               $7999 = +HEAPF64[$7998>>3];
               $8000 = $7997 * $7999;
               $8001 = ((($4)) + 384|0);
               $8002 = +HEAPF64[$8001>>3];
               $8003 = $8000 * $8002;
               $8004 = ((($4)) + 240|0);
               $8005 = +HEAPF64[$8004>>3];
               $8006 = -1.0 * $8005;
               $8007 = ((($4)) + 176|0);
               $8008 = +HEAPF64[$8007>>3];
               $8009 = $8006 * $8008;
               $8010 = $8003 + $8009;
               $8011 = $7994 * $8010;
               $8012 = ((($4)) + 384|0);
               $8013 = +HEAPF64[$8012>>3];
               $8014 = -1.0 * $8013;
               $8015 = $x281;
               $8016 = $8014 * $8015;
               $8017 = (+__Z7IKatan2dd($8011,$8016));
               HEAPF64[$j5array122>>3] = $8017;
               $8018 = +HEAPF64[$j5array122>>3];
               $8019 = (+__Z5IKsind($8018));
               HEAPF64[$sj5array124>>3] = $8019;
               $8020 = +HEAPF64[$j5array122>>3];
               $8021 = (+__Z5IKcosd($8020));
               HEAPF64[$cj5array123>>3] = $8021;
               $8022 = +HEAPF64[$j5array122>>3];
               $8023 = $8022 > 3.14159265358979;
               $8024 = +HEAPF64[$j5array122>>3];
               do {
                if ($8023) {
                 $8025 = $8024 - 6.2831853071795898;
                 HEAPF64[$j5array122>>3] = $8025;
                } else {
                 $8026 = $8024 < -3.14159265358979;
                 if (!($8026)) {
                  break;
                 }
                 $8027 = +HEAPF64[$j5array122>>3];
                 $8028 = $8027 + 6.2831853071795898;
                 HEAPF64[$j5array122>>3] = $8028;
                }
               } while(0);
               HEAP8[$j5valid125>>0] = 1;
               $ij5126 = 0;
               while(1) {
                $8029 = $ij5126;
                $8030 = ($8029|0)<(1);
                if (!($8030)) {
                 break L1142;
                }
                $8031 = $ij5126;
                $8032 = (($j5valid125) + ($8031)|0);
                $8033 = HEAP8[$8032>>0]|0;
                $8034 = $8033&1;
                do {
                 if ($8034) {
                  $8035 = $ij5126;
                  $8036 = $8035&255;
                  $8037 = ((($4)) + 551|0);
                  HEAP8[$8037>>0] = $8036;
                  $8038 = ((($4)) + 551|0);
                  $8039 = ((($8038)) + 1|0);
                  HEAP8[$8039>>0] = -1;
                  $8040 = $ij5126;
                  $8041 = (($8040) + 1)|0;
                  $iij5127 = $8041;
                  L1253: while(1) {
                   $8042 = $iij5127;
                   $8043 = ($8042|0)<(1);
                   if (!($8043)) {
                    break;
                   }
                   $8044 = $iij5127;
                   $8045 = (($j5valid125) + ($8044)|0);
                   $8046 = HEAP8[$8045>>0]|0;
                   $8047 = $8046&1;
                   do {
                    if ($8047) {
                     $8048 = $ij5126;
                     $8049 = (($cj5array123) + ($8048<<3)|0);
                     $8050 = +HEAPF64[$8049>>3];
                     $8051 = $iij5127;
                     $8052 = (($cj5array123) + ($8051<<3)|0);
                     $8053 = +HEAPF64[$8052>>3];
                     $8054 = $8050 - $8053;
                     $8055 = (+__Z5IKabsd($8054));
                     $8056 = $8055 < 9.9999999999999995E-7;
                     if (!($8056)) {
                      break;
                     }
                     $8057 = $ij5126;
                     $8058 = (($sj5array124) + ($8057<<3)|0);
                     $8059 = +HEAPF64[$8058>>3];
                     $8060 = $iij5127;
                     $8061 = (($sj5array124) + ($8060<<3)|0);
                     $8062 = +HEAPF64[$8061>>3];
                     $8063 = $8059 - $8062;
                     $8064 = (+__Z5IKabsd($8063));
                     $8065 = $8064 < 9.9999999999999995E-7;
                     if ($8065) {
                      label = 920;
                      break L1253;
                     }
                    }
                   } while(0);
                   $8072 = $iij5127;
                   $8073 = (($8072) + 1)|0;
                   $iij5127 = $8073;
                  }
                  if ((label|0) == 920) {
                   label = 0;
                   $8066 = $iij5127;
                   $8067 = (($j5valid125) + ($8066)|0);
                   HEAP8[$8067>>0] = 0;
                   $8068 = $iij5127;
                   $8069 = $8068&255;
                   $8070 = ((($4)) + 551|0);
                   $8071 = ((($8070)) + 1|0);
                   HEAP8[$8071>>0] = $8069;
                  }
                  $8074 = $ij5126;
                  $8075 = (($j5array122) + ($8074<<3)|0);
                  $8076 = +HEAPF64[$8075>>3];
                  $8077 = ((($4)) + 200|0);
                  HEAPF64[$8077>>3] = $8076;
                  $8078 = $ij5126;
                  $8079 = (($cj5array123) + ($8078<<3)|0);
                  $8080 = +HEAPF64[$8079>>3];
                  $8081 = ((($4)) + 208|0);
                  HEAPF64[$8081>>3] = $8080;
                  $8082 = $ij5126;
                  $8083 = (($sj5array124) + ($8082<<3)|0);
                  $8084 = +HEAPF64[$8083>>3];
                  $8085 = ((($4)) + 216|0);
                  HEAPF64[$8085>>3] = $8084;
                  $8086 = ((($4)) + 200|0);
                  $8087 = +HEAPF64[$8086>>3];
                  $8088 = (+__Z5IKsind($8087));
                  $x284 = $8088;
                  $8089 = ((($4)) + 200|0);
                  $8090 = +HEAPF64[$8089>>3];
                  $8091 = (+__Z5IKcosd($8090));
                  $x285 = $8091;
                  $8092 = ((($4)) + 128|0);
                  $8093 = +HEAPF64[$8092>>3];
                  $8094 = ((($4)) + 240|0);
                  $8095 = +HEAPF64[$8094>>3];
                  $8096 = $8093 * $8095;
                  $x286 = $8096;
                  $8097 = ((($4)) + 128|0);
                  $8098 = +HEAPF64[$8097>>3];
                  $8099 = ((($4)) + 168|0);
                  $8100 = +HEAPF64[$8099>>3];
                  $8101 = $8098 * $8100;
                  $x287 = $8101;
                  $8102 = ((($4)) + 168|0);
                  $8103 = +HEAPF64[$8102>>3];
                  $8104 = ((($4)) + 136|0);
                  $8105 = +HEAPF64[$8104>>3];
                  $8106 = $8103 * $8105;
                  $x288 = $8106;
                  $8107 = ((($4)) + 136|0);
                  $8108 = +HEAPF64[$8107>>3];
                  $8109 = 1.0 * $8108;
                  $x289 = $8109;
                  $8110 = ((($4)) + 176|0);
                  $8111 = +HEAPF64[$8110>>3];
                  $8112 = 1.0 * $8111;
                  $x290 = $8112;
                  $8113 = $x285;
                  $8114 = 1.0 * $8113;
                  $x291 = $8114;
                  $8115 = ((($4)) + 136|0);
                  $8116 = +HEAPF64[$8115>>3];
                  $8117 = $x284;
                  $8118 = $8116 * $8117;
                  $x292 = $8118;
                  $8119 = $x284;
                  $8120 = 1.0 * $8119;
                  $x293 = $8120;
                  $8121 = ((($4)) + 384|0);
                  $8122 = +HEAPF64[$8121>>3];
                  $8123 = ((($4)) + 176|0);
                  $8124 = +HEAPF64[$8123>>3];
                  $8125 = $x285;
                  $8126 = $8124 * $8125;
                  $8127 = $8122 + $8126;
                  HEAPF64[$evalcond128>>3] = $8127;
                  $8128 = $x284;
                  $8129 = -1.0 * $8128;
                  $8130 = $x290;
                  $8131 = $8129 * $8130;
                  $8132 = ((($4)) + 408|0);
                  $8133 = +HEAPF64[$8132>>3];
                  $8134 = $8131 + $8133;
                  $8135 = ((($evalcond128)) + 8|0);
                  HEAPF64[$8135>>3] = $8134;
                  $8136 = ((($4)) + 336|0);
                  $8137 = +HEAPF64[$8136>>3];
                  $8138 = ((($4)) + 136|0);
                  $8139 = +HEAPF64[$8138>>3];
                  $8140 = $8137 * $8139;
                  $8141 = ((($4)) + 128|0);
                  $8142 = +HEAPF64[$8141>>3];
                  $8143 = ((($4)) + 264|0);
                  $8144 = +HEAPF64[$8143>>3];
                  $8145 = $8142 * $8144;
                  $8146 = $8140 + $8145;
                  $8147 = ((($4)) + 168|0);
                  $8148 = +HEAPF64[$8147>>3];
                  $8149 = $x284;
                  $8150 = $8148 * $8149;
                  $8151 = $8146 + $8150;
                  $8152 = ((($evalcond128)) + 16|0);
                  HEAPF64[$8152>>3] = $8151;
                  $8153 = $x293;
                  $8154 = -1.0 * $8153;
                  $8155 = ((($4)) + 240|0);
                  $8156 = +HEAPF64[$8155>>3];
                  $8157 = -1.0 * $8156;
                  $8158 = $x289;
                  $8159 = $8157 * $8158;
                  $8160 = $8154 + $8159;
                  $8161 = ((($4)) + 128|0);
                  $8162 = +HEAPF64[$8161>>3];
                  $8163 = ((($4)) + 312|0);
                  $8164 = +HEAPF64[$8163>>3];
                  $8165 = $8162 * $8164;
                  $8166 = $8160 + $8165;
                  $8167 = ((($evalcond128)) + 24|0);
                  HEAPF64[$8167>>3] = $8166;
                  $8168 = $x291;
                  $8169 = -1.0 * $8168;
                  $8170 = ((($4)) + 264|0);
                  $8171 = +HEAPF64[$8170>>3];
                  $8172 = -1.0 * $8171;
                  $8173 = $x289;
                  $8174 = $8172 * $8173;
                  $8175 = $8169 + $8174;
                  $8176 = ((($4)) + 128|0);
                  $8177 = +HEAPF64[$8176>>3];
                  $8178 = ((($4)) + 336|0);
                  $8179 = +HEAPF64[$8178>>3];
                  $8180 = $8177 * $8179;
                  $8181 = $8175 + $8180;
                  $8182 = ((($evalcond128)) + 32|0);
                  HEAPF64[$8182>>3] = $8181;
                  $8183 = $x284;
                  $8184 = $x287;
                  $8185 = $8183 * $8184;
                  $8186 = ((($4)) + 136|0);
                  $8187 = +HEAPF64[$8186>>3];
                  $8188 = $x285;
                  $8189 = $8187 * $8188;
                  $8190 = $8185 + $8189;
                  $8191 = ((($4)) + 264|0);
                  $8192 = +HEAPF64[$8191>>3];
                  $8193 = $8190 + $8192;
                  $8194 = ((($evalcond128)) + 40|0);
                  HEAPF64[$8194>>3] = $8193;
                  $8195 = ((($4)) + 312|0);
                  $8196 = +HEAPF64[$8195>>3];
                  $8197 = ((($4)) + 136|0);
                  $8198 = +HEAPF64[$8197>>3];
                  $8199 = $8196 * $8198;
                  $8200 = ((($4)) + 168|0);
                  $8201 = +HEAPF64[$8200>>3];
                  $8202 = -1.0 * $8201;
                  $8203 = $x291;
                  $8204 = $8202 * $8203;
                  $8205 = $8199 + $8204;
                  $8206 = $x286;
                  $8207 = $8205 + $8206;
                  $8208 = ((($evalcond128)) + 48|0);
                  HEAPF64[$8208>>3] = $8207;
                  $8209 = $x292;
                  $8210 = $x287;
                  $8211 = -1.0 * $8210;
                  $8212 = $x291;
                  $8213 = $8211 * $8212;
                  $8214 = $8209 + $8213;
                  $8215 = ((($4)) + 240|0);
                  $8216 = +HEAPF64[$8215>>3];
                  $8217 = $8214 + $8216;
                  $8218 = ((($evalcond128)) + 56|0);
                  HEAPF64[$8218>>3] = $8217;
                  $8219 = $x284;
                  $8220 = $x288;
                  $8221 = $8219 * $8220;
                  $8222 = ((($4)) + 128|0);
                  $8223 = +HEAPF64[$8222>>3];
                  $8224 = -1.0 * $8223;
                  $8225 = $x291;
                  $8226 = $8224 * $8225;
                  $8227 = $8221 + $8226;
                  $8228 = ((($4)) + 336|0);
                  $8229 = +HEAPF64[$8228>>3];
                  $8230 = $8227 + $8229;
                  $8231 = ((($evalcond128)) + 64|0);
                  HEAPF64[$8231>>3] = $8230;
                  $8232 = ((($4)) + 128|0);
                  $8233 = +HEAPF64[$8232>>3];
                  $8234 = -1.0 * $8233;
                  $8235 = $x293;
                  $8236 = $8234 * $8235;
                  $8237 = $x288;
                  $8238 = -1.0 * $8237;
                  $8239 = $x291;
                  $8240 = $8238 * $8239;
                  $8241 = $8236 + $8240;
                  $8242 = ((($4)) + 312|0);
                  $8243 = +HEAPF64[$8242>>3];
                  $8244 = $8241 + $8243;
                  $8245 = ((($evalcond128)) + 72|0);
                  HEAPF64[$8245>>3] = $8244;
                  $8246 = ((($4)) + 408|0);
                  $8247 = +HEAPF64[$8246>>3];
                  $8248 = -1.0 * $8247;
                  $8249 = $x290;
                  $8250 = $8248 * $8249;
                  $8251 = $x284;
                  $8252 = $8250 + $8251;
                  $8253 = ((($4)) + 336|0);
                  $8254 = +HEAPF64[$8253>>3];
                  $8255 = $x288;
                  $8256 = $8254 * $8255;
                  $8257 = $8252 + $8256;
                  $8258 = ((($4)) + 264|0);
                  $8259 = +HEAPF64[$8258>>3];
                  $8260 = $x287;
                  $8261 = $8259 * $8260;
                  $8262 = $8257 + $8261;
                  $8263 = ((($evalcond128)) + 80|0);
                  HEAPF64[$8263>>3] = $8262;
                  $8264 = ((($4)) + 384|0);
                  $8265 = +HEAPF64[$8264>>3];
                  $8266 = -1.0 * $8265;
                  $8267 = $x290;
                  $8268 = $8266 * $8267;
                  $8269 = $x291;
                  $8270 = -1.0 * $8269;
                  $8271 = $8268 + $8270;
                  $8272 = ((($4)) + 168|0);
                  $8273 = +HEAPF64[$8272>>3];
                  $8274 = $x286;
                  $8275 = $8273 * $8274;
                  $8276 = $8271 + $8275;
                  $8277 = ((($4)) + 312|0);
                  $8278 = +HEAPF64[$8277>>3];
                  $8279 = $x288;
                  $8280 = $8278 * $8279;
                  $8281 = $8276 + $8280;
                  $8282 = ((($evalcond128)) + 88|0);
                  HEAPF64[$8282>>3] = $8281;
                  $8283 = +HEAPF64[$evalcond128>>3];
                  $8284 = (+__Z5IKabsd($8283));
                  $8285 = $8284 > 5.0000000000000004E-6;
                  if ($8285) {
                   break;
                  }
                  $8286 = ((($evalcond128)) + 8|0);
                  $8287 = +HEAPF64[$8286>>3];
                  $8288 = (+__Z5IKabsd($8287));
                  $8289 = $8288 > 5.0000000000000004E-6;
                  if ($8289) {
                   break;
                  }
                  $8290 = ((($evalcond128)) + 16|0);
                  $8291 = +HEAPF64[$8290>>3];
                  $8292 = (+__Z5IKabsd($8291));
                  $8293 = $8292 > 5.0000000000000004E-6;
                  if ($8293) {
                   break;
                  }
                  $8294 = ((($evalcond128)) + 24|0);
                  $8295 = +HEAPF64[$8294>>3];
                  $8296 = (+__Z5IKabsd($8295));
                  $8297 = $8296 > 5.0000000000000004E-6;
                  if ($8297) {
                   break;
                  }
                  $8298 = ((($evalcond128)) + 32|0);
                  $8299 = +HEAPF64[$8298>>3];
                  $8300 = (+__Z5IKabsd($8299));
                  $8301 = $8300 > 5.0000000000000004E-6;
                  if ($8301) {
                   break;
                  }
                  $8302 = ((($evalcond128)) + 40|0);
                  $8303 = +HEAPF64[$8302>>3];
                  $8304 = (+__Z5IKabsd($8303));
                  $8305 = $8304 > 5.0000000000000004E-6;
                  if ($8305) {
                   break;
                  }
                  $8306 = ((($evalcond128)) + 48|0);
                  $8307 = +HEAPF64[$8306>>3];
                  $8308 = (+__Z5IKabsd($8307));
                  $8309 = $8308 > 5.0000000000000004E-6;
                  if ($8309) {
                   break;
                  }
                  $8310 = ((($evalcond128)) + 56|0);
                  $8311 = +HEAPF64[$8310>>3];
                  $8312 = (+__Z5IKabsd($8311));
                  $8313 = $8312 > 5.0000000000000004E-6;
                  if ($8313) {
                   break;
                  }
                  $8314 = ((($evalcond128)) + 64|0);
                  $8315 = +HEAPF64[$8314>>3];
                  $8316 = (+__Z5IKabsd($8315));
                  $8317 = $8316 > 5.0000000000000004E-6;
                  if ($8317) {
                   break;
                  }
                  $8318 = ((($evalcond128)) + 72|0);
                  $8319 = +HEAPF64[$8318>>3];
                  $8320 = (+__Z5IKabsd($8319));
                  $8321 = $8320 > 5.0000000000000004E-6;
                  if ($8321) {
                   break;
                  }
                  $8322 = ((($evalcond128)) + 80|0);
                  $8323 = +HEAPF64[$8322>>3];
                  $8324 = (+__Z5IKabsd($8323));
                  $8325 = $8324 > 5.0000000000000004E-6;
                  if ($8325) {
                   break;
                  }
                  $8326 = ((($evalcond128)) + 88|0);
                  $8327 = +HEAPF64[$8326>>3];
                  $8328 = (+__Z5IKabsd($8327));
                  $8329 = $8328 > 5.0000000000000004E-6;
                  if ($8329) {
                   break;
                  }
                  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos129,6);
                  __THREW__ = 0;
                  $8330 = (invoke_iii(416,($vinfos129|0),0)|0);
                  $8331 = __THREW__; __THREW__ = 0;
                  $8332 = $8331&1;
                  if ($8332) {
                   label = 969;
                   break L1;
                  }
                  $8333 = ((($8330)) + 17|0);
                  HEAP8[$8333>>0] = 1;
                  $8334 = +HEAPF64[$4>>3];
                  __THREW__ = 0;
                  $8335 = (invoke_iii(416,($vinfos129|0),0)|0);
                  $8336 = __THREW__; __THREW__ = 0;
                  $8337 = $8336&1;
                  if ($8337) {
                   label = 969;
                   break L1;
                  }
                  $8338 = ((($8335)) + 8|0);
                  HEAPF64[$8338>>3] = $8334;
                  $8339 = ((($4)) + 536|0);
                  $8340 = HEAP8[$8339>>0]|0;
                  __THREW__ = 0;
                  $8341 = (invoke_iii(416,($vinfos129|0),0)|0);
                  $8342 = __THREW__; __THREW__ = 0;
                  $8343 = $8342&1;
                  if ($8343) {
                   label = 969;
                   break L1;
                  }
                  $8344 = ((($8341)) + 19|0);
                  HEAP8[$8344>>0] = $8340;
                  $8345 = ((($4)) + 536|0);
                  $8346 = ((($8345)) + 1|0);
                  $8347 = HEAP8[$8346>>0]|0;
                  __THREW__ = 0;
                  $8348 = (invoke_iii(416,($vinfos129|0),0)|0);
                  $8349 = __THREW__; __THREW__ = 0;
                  $8350 = $8349&1;
                  if ($8350) {
                   label = 969;
                   break L1;
                  }
                  $8351 = ((($8348)) + 19|0);
                  $8352 = ((($8351)) + 1|0);
                  HEAP8[$8352>>0] = $8347;
                  $8353 = ((($4)) + 538|0);
                  $8354 = HEAP8[$8353>>0]|0;
                  __THREW__ = 0;
                  $8355 = (invoke_iii(416,($vinfos129|0),0)|0);
                  $8356 = __THREW__; __THREW__ = 0;
                  $8357 = $8356&1;
                  if ($8357) {
                   label = 969;
                   break L1;
                  }
                  $8358 = ((($8355)) + 18|0);
                  HEAP8[$8358>>0] = $8354;
                  __THREW__ = 0;
                  $8359 = (invoke_iii(416,($vinfos129|0),1)|0);
                  $8360 = __THREW__; __THREW__ = 0;
                  $8361 = $8360&1;
                  if ($8361) {
                   label = 969;
                   break L1;
                  }
                  $8362 = ((($8359)) + 17|0);
                  HEAP8[$8362>>0] = 1;
                  $8363 = ((($4)) + 40|0);
                  $8364 = +HEAPF64[$8363>>3];
                  __THREW__ = 0;
                  $8365 = (invoke_iii(416,($vinfos129|0),1)|0);
                  $8366 = __THREW__; __THREW__ = 0;
                  $8367 = $8366&1;
                  if ($8367) {
                   label = 969;
                   break L1;
                  }
                  $8368 = ((($8365)) + 8|0);
                  HEAPF64[$8368>>3] = $8364;
                  $8369 = ((($4)) + 539|0);
                  $8370 = HEAP8[$8369>>0]|0;
                  __THREW__ = 0;
                  $8371 = (invoke_iii(416,($vinfos129|0),1)|0);
                  $8372 = __THREW__; __THREW__ = 0;
                  $8373 = $8372&1;
                  if ($8373) {
                   label = 969;
                   break L1;
                  }
                  $8374 = ((($8371)) + 19|0);
                  HEAP8[$8374>>0] = $8370;
                  $8375 = ((($4)) + 539|0);
                  $8376 = ((($8375)) + 1|0);
                  $8377 = HEAP8[$8376>>0]|0;
                  __THREW__ = 0;
                  $8378 = (invoke_iii(416,($vinfos129|0),1)|0);
                  $8379 = __THREW__; __THREW__ = 0;
                  $8380 = $8379&1;
                  if ($8380) {
                   label = 969;
                   break L1;
                  }
                  $8381 = ((($8378)) + 19|0);
                  $8382 = ((($8381)) + 1|0);
                  HEAP8[$8382>>0] = $8377;
                  $8383 = ((($4)) + 541|0);
                  $8384 = HEAP8[$8383>>0]|0;
                  __THREW__ = 0;
                  $8385 = (invoke_iii(416,($vinfos129|0),1)|0);
                  $8386 = __THREW__; __THREW__ = 0;
                  $8387 = $8386&1;
                  if ($8387) {
                   label = 969;
                   break L1;
                  }
                  $8388 = ((($8385)) + 18|0);
                  HEAP8[$8388>>0] = $8384;
                  __THREW__ = 0;
                  $8389 = (invoke_iii(416,($vinfos129|0),2)|0);
                  $8390 = __THREW__; __THREW__ = 0;
                  $8391 = $8390&1;
                  if ($8391) {
                   label = 969;
                   break L1;
                  }
                  $8392 = ((($8389)) + 17|0);
                  HEAP8[$8392>>0] = 1;
                  $8393 = ((($4)) + 80|0);
                  $8394 = +HEAPF64[$8393>>3];
                  __THREW__ = 0;
                  $8395 = (invoke_iii(416,($vinfos129|0),2)|0);
                  $8396 = __THREW__; __THREW__ = 0;
                  $8397 = $8396&1;
                  if ($8397) {
                   label = 969;
                   break L1;
                  }
                  $8398 = ((($8395)) + 8|0);
                  HEAPF64[$8398>>3] = $8394;
                  $8399 = ((($4)) + 542|0);
                  $8400 = HEAP8[$8399>>0]|0;
                  __THREW__ = 0;
                  $8401 = (invoke_iii(416,($vinfos129|0),2)|0);
                  $8402 = __THREW__; __THREW__ = 0;
                  $8403 = $8402&1;
                  if ($8403) {
                   label = 969;
                   break L1;
                  }
                  $8404 = ((($8401)) + 19|0);
                  HEAP8[$8404>>0] = $8400;
                  $8405 = ((($4)) + 542|0);
                  $8406 = ((($8405)) + 1|0);
                  $8407 = HEAP8[$8406>>0]|0;
                  __THREW__ = 0;
                  $8408 = (invoke_iii(416,($vinfos129|0),2)|0);
                  $8409 = __THREW__; __THREW__ = 0;
                  $8410 = $8409&1;
                  if ($8410) {
                   label = 969;
                   break L1;
                  }
                  $8411 = ((($8408)) + 19|0);
                  $8412 = ((($8411)) + 1|0);
                  HEAP8[$8412>>0] = $8407;
                  $8413 = ((($4)) + 544|0);
                  $8414 = HEAP8[$8413>>0]|0;
                  __THREW__ = 0;
                  $8415 = (invoke_iii(416,($vinfos129|0),2)|0);
                  $8416 = __THREW__; __THREW__ = 0;
                  $8417 = $8416&1;
                  if ($8417) {
                   label = 969;
                   break L1;
                  }
                  $8418 = ((($8415)) + 18|0);
                  HEAP8[$8418>>0] = $8414;
                  __THREW__ = 0;
                  $8419 = (invoke_iii(416,($vinfos129|0),3)|0);
                  $8420 = __THREW__; __THREW__ = 0;
                  $8421 = $8420&1;
                  if ($8421) {
                   label = 969;
                   break L1;
                  }
                  $8422 = ((($8419)) + 17|0);
                  HEAP8[$8422>>0] = 1;
                  $8423 = ((($4)) + 120|0);
                  $8424 = +HEAPF64[$8423>>3];
                  __THREW__ = 0;
                  $8425 = (invoke_iii(416,($vinfos129|0),3)|0);
                  $8426 = __THREW__; __THREW__ = 0;
                  $8427 = $8426&1;
                  if ($8427) {
                   label = 969;
                   break L1;
                  }
                  $8428 = ((($8425)) + 8|0);
                  HEAPF64[$8428>>3] = $8424;
                  $8429 = ((($4)) + 545|0);
                  $8430 = HEAP8[$8429>>0]|0;
                  __THREW__ = 0;
                  $8431 = (invoke_iii(416,($vinfos129|0),3)|0);
                  $8432 = __THREW__; __THREW__ = 0;
                  $8433 = $8432&1;
                  if ($8433) {
                   label = 969;
                   break L1;
                  }
                  $8434 = ((($8431)) + 19|0);
                  HEAP8[$8434>>0] = $8430;
                  $8435 = ((($4)) + 545|0);
                  $8436 = ((($8435)) + 1|0);
                  $8437 = HEAP8[$8436>>0]|0;
                  __THREW__ = 0;
                  $8438 = (invoke_iii(416,($vinfos129|0),3)|0);
                  $8439 = __THREW__; __THREW__ = 0;
                  $8440 = $8439&1;
                  if ($8440) {
                   label = 969;
                   break L1;
                  }
                  $8441 = ((($8438)) + 19|0);
                  $8442 = ((($8441)) + 1|0);
                  HEAP8[$8442>>0] = $8437;
                  $8443 = ((($4)) + 547|0);
                  $8444 = HEAP8[$8443>>0]|0;
                  __THREW__ = 0;
                  $8445 = (invoke_iii(416,($vinfos129|0),3)|0);
                  $8446 = __THREW__; __THREW__ = 0;
                  $8447 = $8446&1;
                  if ($8447) {
                   label = 969;
                   break L1;
                  }
                  $8448 = ((($8445)) + 18|0);
                  HEAP8[$8448>>0] = $8444;
                  __THREW__ = 0;
                  $8449 = (invoke_iii(416,($vinfos129|0),4)|0);
                  $8450 = __THREW__; __THREW__ = 0;
                  $8451 = $8450&1;
                  if ($8451) {
                   label = 969;
                   break L1;
                  }
                  $8452 = ((($8449)) + 17|0);
                  HEAP8[$8452>>0] = 1;
                  $8453 = ((($4)) + 160|0);
                  $8454 = +HEAPF64[$8453>>3];
                  __THREW__ = 0;
                  $8455 = (invoke_iii(416,($vinfos129|0),4)|0);
                  $8456 = __THREW__; __THREW__ = 0;
                  $8457 = $8456&1;
                  if ($8457) {
                   label = 969;
                   break L1;
                  }
                  $8458 = ((($8455)) + 8|0);
                  HEAPF64[$8458>>3] = $8454;
                  $8459 = ((($4)) + 548|0);
                  $8460 = HEAP8[$8459>>0]|0;
                  __THREW__ = 0;
                  $8461 = (invoke_iii(416,($vinfos129|0),4)|0);
                  $8462 = __THREW__; __THREW__ = 0;
                  $8463 = $8462&1;
                  if ($8463) {
                   label = 969;
                   break L1;
                  }
                  $8464 = ((($8461)) + 19|0);
                  HEAP8[$8464>>0] = $8460;
                  $8465 = ((($4)) + 548|0);
                  $8466 = ((($8465)) + 1|0);
                  $8467 = HEAP8[$8466>>0]|0;
                  __THREW__ = 0;
                  $8468 = (invoke_iii(416,($vinfos129|0),4)|0);
                  $8469 = __THREW__; __THREW__ = 0;
                  $8470 = $8469&1;
                  if ($8470) {
                   label = 969;
                   break L1;
                  }
                  $8471 = ((($8468)) + 19|0);
                  $8472 = ((($8471)) + 1|0);
                  HEAP8[$8472>>0] = $8467;
                  $8473 = ((($4)) + 550|0);
                  $8474 = HEAP8[$8473>>0]|0;
                  __THREW__ = 0;
                  $8475 = (invoke_iii(416,($vinfos129|0),4)|0);
                  $8476 = __THREW__; __THREW__ = 0;
                  $8477 = $8476&1;
                  if ($8477) {
                   label = 969;
                   break L1;
                  }
                  $8478 = ((($8475)) + 18|0);
                  HEAP8[$8478>>0] = $8474;
                  __THREW__ = 0;
                  $8479 = (invoke_iii(416,($vinfos129|0),5)|0);
                  $8480 = __THREW__; __THREW__ = 0;
                  $8481 = $8480&1;
                  if ($8481) {
                   label = 969;
                   break L1;
                  }
                  $8482 = ((($8479)) + 17|0);
                  HEAP8[$8482>>0] = 1;
                  $8483 = ((($4)) + 200|0);
                  $8484 = +HEAPF64[$8483>>3];
                  __THREW__ = 0;
                  $8485 = (invoke_iii(416,($vinfos129|0),5)|0);
                  $8486 = __THREW__; __THREW__ = 0;
                  $8487 = $8486&1;
                  if ($8487) {
                   label = 969;
                   break L1;
                  }
                  $8488 = ((($8485)) + 8|0);
                  HEAPF64[$8488>>3] = $8484;
                  $8489 = ((($4)) + 551|0);
                  $8490 = HEAP8[$8489>>0]|0;
                  __THREW__ = 0;
                  $8491 = (invoke_iii(416,($vinfos129|0),5)|0);
                  $8492 = __THREW__; __THREW__ = 0;
                  $8493 = $8492&1;
                  if ($8493) {
                   label = 969;
                   break L1;
                  }
                  $8494 = ((($8491)) + 19|0);
                  HEAP8[$8494>>0] = $8490;
                  $8495 = ((($4)) + 551|0);
                  $8496 = ((($8495)) + 1|0);
                  $8497 = HEAP8[$8496>>0]|0;
                  __THREW__ = 0;
                  $8498 = (invoke_iii(416,($vinfos129|0),5)|0);
                  $8499 = __THREW__; __THREW__ = 0;
                  $8500 = $8499&1;
                  if ($8500) {
                   label = 969;
                   break L1;
                  }
                  $8501 = ((($8498)) + 19|0);
                  $8502 = ((($8501)) + 1|0);
                  HEAP8[$8502>>0] = $8497;
                  $8503 = ((($4)) + 553|0);
                  $8504 = HEAP8[$8503>>0]|0;
                  __THREW__ = 0;
                  $8505 = (invoke_iii(416,($vinfos129|0),5)|0);
                  $8506 = __THREW__; __THREW__ = 0;
                  $8507 = $8506&1;
                  if ($8507) {
                   label = 969;
                   break L1;
                  }
                  $8508 = ((($8505)) + 18|0);
                  HEAP8[$8508>>0] = $8504;
                  __THREW__ = 0;
                  invoke_vii(417,($vfree130|0),0);
                  $8509 = __THREW__; __THREW__ = 0;
                  $8510 = $8509&1;
                  if ($8510) {
                   label = 969;
                   break L1;
                  }
                  $8511 = $1;
                  $8512 = HEAP32[$8511>>2]|0;
                  $8513 = ((($8512)) + 8|0);
                  $8514 = HEAP32[$8513>>2]|0;
                  __THREW__ = 0;
                  (invoke_iiii($8514|0,($8511|0),($vinfos129|0),($vfree130|0))|0);
                  $8515 = __THREW__; __THREW__ = 0;
                  $8516 = $8515&1;
                  if ($8516) {
                   label = 970;
                   break L1;
                  }
                  __THREW__ = 0;
                  invoke_vi(371,($vfree130|0));
                  $8517 = __THREW__; __THREW__ = 0;
                  $8518 = $8517&1;
                  if ($8518) {
                   label = 969;
                   break L1;
                  }
                  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos129);
                 }
                } while(0);
                $8519 = $ij5126;
                $8520 = (($8519) + 1)|0;
                $ij5126 = $8520;
               }
              }
             } while(0);
             $2659 = ((($4)) + 8|0);
             $2660 = +HEAPF64[$2659>>3];
             $2661 = ((($4)) + 248|0);
             $2662 = +HEAPF64[$2661>>3];
             $2663 = $2660 * $2662;
             $x177 = $2663;
             $2664 = ((($4)) + 8|0);
             $2665 = +HEAPF64[$2664>>3];
             $2666 = ((($4)) + 272|0);
             $2667 = +HEAPF64[$2666>>3];
             $2668 = $2665 * $2667;
             $x178 = $2668;
             $2669 = ((($4)) + 56|0);
             $2670 = +HEAPF64[$2669>>3];
             $2671 = 1.0 * $2670;
             $x179 = $2671;
             $2672 = ((($4)) + 16|0);
             $2673 = +HEAPF64[$2672>>3];
             $2674 = 1.0 * $2673;
             $x180 = $2674;
             $2675 = ((($4)) + 344|0);
             $2676 = +HEAPF64[$2675>>3];
             $2677 = ((($4)) + 16|0);
             $2678 = +HEAPF64[$2677>>3];
             $2679 = $2676 * $2678;
             $x181 = $2679;
             $2680 = ((($4)) + 48|0);
             $2681 = +HEAPF64[$2680>>3];
             $2682 = ((($4)) + 96|0);
             $2683 = +HEAPF64[$2682>>3];
             $2684 = $2681 * $2683;
             $x182 = $2684;
             $2685 = ((($4)) + 8|0);
             $2686 = +HEAPF64[$2685>>3];
             $2687 = ((($4)) + 296|0);
             $2688 = +HEAPF64[$2687>>3];
             $2689 = $2686 * $2688;
             $x183 = $2689;
             $2690 = $x90;
             $x184 = $2690;
             $2691 = ((($4)) + 88|0);
             $2692 = +HEAPF64[$2691>>3];
             $2693 = ((($4)) + 56|0);
             $2694 = +HEAPF64[$2693>>3];
             $2695 = $2692 * $2694;
             $2696 = $x182;
             $2697 = $2695 + $2696;
             $x185 = $2697;
             $2698 = ((($4)) + 8|0);
             $2699 = +HEAPF64[$2698>>3];
             $2700 = $x184;
             $2701 = $2699 * $2700;
             $x186 = $2701;
             $2702 = ((($4)) + 16|0);
             $2703 = +HEAPF64[$2702>>3];
             $2704 = $x184;
             $2705 = $2703 * $2704;
             $x187 = $2705;
             $2706 = ((($4)) + 16|0);
             $2707 = +HEAPF64[$2706>>3];
             $2708 = $x185;
             $2709 = $2707 * $2708;
             $x188 = $2709;
             $2710 = $x95;
             $x189 = $2710;
             $2711 = $x177;
             $2712 = $x184;
             $2713 = $2711 * $2712;
             $2714 = ((($4)) + 392|0);
             $2715 = +HEAPF64[$2714>>3];
             $2716 = $x189;
             $2717 = $2715 * $2716;
             $2718 = $2713 + $2717;
             $2719 = ((($4)) + 320|0);
             $2720 = +HEAPF64[$2719>>3];
             $2721 = $x187;
             $2722 = $2720 * $2721;
             $2723 = $2718 + $2722;
             $2724 = ((($4)) + 240|0);
             HEAPF64[$2724>>3] = $2723;
             $2725 = $x178;
             $2726 = $x184;
             $2727 = $2725 * $2726;
             $2728 = ((($4)) + 416|0);
             $2729 = +HEAPF64[$2728>>3];
             $2730 = $x189;
             $2731 = $2729 * $2730;
             $2732 = $2727 + $2731;
             $2733 = $x181;
             $2734 = $x184;
             $2735 = $2733 * $2734;
             $2736 = $2732 + $2735;
             $2737 = ((($4)) + 264|0);
             HEAPF64[$2737>>3] = $2736;
             $2738 = ((($4)) + 368|0);
             $2739 = +HEAPF64[$2738>>3];
             $2740 = $x187;
             $2741 = $2739 * $2740;
             $2742 = $x183;
             $2743 = $x184;
             $2744 = $2742 * $2743;
             $2745 = $2741 + $2744;
             $2746 = ((($4)) + 440|0);
             $2747 = +HEAPF64[$2746>>3];
             $2748 = $x189;
             $2749 = $2747 * $2748;
             $2750 = $2745 + $2749;
             $2751 = ((($4)) + 288|0);
             HEAPF64[$2751>>3] = $2750;
             $2752 = ((($4)) + 248|0);
             $2753 = +HEAPF64[$2752>>3];
             $2754 = -1.0 * $2753;
             $2755 = $x180;
             $2756 = $2754 * $2755;
             $2757 = ((($4)) + 8|0);
             $2758 = +HEAPF64[$2757>>3];
             $2759 = ((($4)) + 320|0);
             $2760 = +HEAPF64[$2759>>3];
             $2761 = $2758 * $2760;
             $2762 = $2756 + $2761;
             $2763 = ((($4)) + 312|0);
             HEAPF64[$2763>>3] = $2762;
             $2764 = ((($4)) + 272|0);
             $2765 = +HEAPF64[$2764>>3];
             $2766 = -1.0 * $2765;
             $2767 = $x180;
             $2768 = $2766 * $2767;
             $2769 = ((($4)) + 8|0);
             $2770 = +HEAPF64[$2769>>3];
             $2771 = ((($4)) + 344|0);
             $2772 = +HEAPF64[$2771>>3];
             $2773 = $2770 * $2772;
             $2774 = $2768 + $2773;
             $2775 = ((($4)) + 336|0);
             HEAPF64[$2775>>3] = $2774;
             $2776 = ((($4)) + 296|0);
             $2777 = +HEAPF64[$2776>>3];
             $2778 = -1.0 * $2777;
             $2779 = $x180;
             $2780 = $2778 * $2779;
             $2781 = ((($4)) + 8|0);
             $2782 = +HEAPF64[$2781>>3];
             $2783 = ((($4)) + 368|0);
             $2784 = +HEAPF64[$2783>>3];
             $2785 = $2782 * $2784;
             $2786 = $2780 + $2785;
             $2787 = ((($4)) + 360|0);
             HEAPF64[$2787>>3] = $2786;
             $2788 = $x177;
             $2789 = $x185;
             $2790 = $2788 * $2789;
             $2791 = ((($4)) + 392|0);
             $2792 = +HEAPF64[$2791>>3];
             $2793 = $x184;
             $2794 = $2792 * $2793;
             $2795 = $2790 + $2794;
             $2796 = ((($4)) + 320|0);
             $2797 = +HEAPF64[$2796>>3];
             $2798 = $x188;
             $2799 = $2797 * $2798;
             $2800 = $2795 + $2799;
             $2801 = ((($4)) + 384|0);
             HEAPF64[$2801>>3] = $2800;
             $2802 = $x178;
             $2803 = $x185;
             $2804 = $2802 * $2803;
             $2805 = ((($4)) + 416|0);
             $2806 = +HEAPF64[$2805>>3];
             $2807 = $x184;
             $2808 = $2806 * $2807;
             $2809 = $2804 + $2808;
             $2810 = $x181;
             $2811 = $x185;
             $2812 = $2810 * $2811;
             $2813 = $2809 + $2812;
             $2814 = ((($4)) + 408|0);
             HEAPF64[$2814>>3] = $2813;
             $2815 = ((($4)) + 368|0);
             $2816 = +HEAPF64[$2815>>3];
             $2817 = $x188;
             $2818 = $2816 * $2817;
             $2819 = $x183;
             $2820 = $x185;
             $2821 = $2819 * $2820;
             $2822 = $2818 + $2821;
             $2823 = ((($4)) + 440|0);
             $2824 = +HEAPF64[$2823>>3];
             $2825 = $x184;
             $2826 = $2824 * $2825;
             $2827 = $2822 + $2826;
             $2828 = ((($4)) + 432|0);
             HEAPF64[$2828>>3] = $2827;
             $2829 = ((($4)) + 128|0);
             $2830 = +HEAPF64[$2829>>3];
             HEAPF64[$j5eval30>>3] = $2830;
             $2831 = ((($4)) + 168|0);
             $2832 = +HEAPF64[$2831>>3];
             $2833 = ((($j5eval30)) + 8|0);
             HEAPF64[$2833>>3] = $2832;
             $2834 = ((($4)) + 176|0);
             $2835 = +HEAPF64[$2834>>3];
             $2836 = ((($j5eval30)) + 16|0);
             HEAPF64[$2836>>3] = $2835;
             $2837 = +HEAPF64[$j5eval30>>3];
             $2838 = (+__Z5IKabsd($2837));
             $2839 = $2838 < 9.9999999999999995E-7;
             do {
              if (!($2839)) {
               $2840 = ((($j5eval30)) + 8|0);
               $2841 = +HEAPF64[$2840>>3];
               $2842 = (+__Z5IKabsd($2841));
               $2843 = $2842 < 9.9999999999999995E-7;
               if ($2843) {
                break;
               }
               $2844 = ((($j5eval30)) + 16|0);
               $2845 = +HEAPF64[$2844>>3];
               $2846 = (+__Z5IKabsd($2845));
               $2847 = $2846 < 9.9999999999999995E-7;
               if ($2847) {
                break;
               }
               ;HEAP8[$j5valid116>>0]=0|0;
               $7312 = ((($4)) + 553|0);
               HEAP8[$7312>>0] = 1;
               $7313 = ((($4)) + 176|0);
               $7314 = +HEAPF64[$7313>>3];
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x268,$7314,-1);
               $7315 = ((($x268)) + 8|0);
               $7316 = HEAP8[$7315>>0]|0;
               $7317 = $7316&1;
               if (!($7317)) {
                break L1142;
               }
               $7318 = +HEAPF64[$x268>>3];
               $x267 = $7318;
               $7319 = ((($4)) + 128|0);
               $7320 = +HEAPF64[$7319>>3];
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x269,$7320,-1);
               $7321 = ((($x269)) + 8|0);
               $7322 = HEAP8[$7321>>0]|0;
               $7323 = $7322&1;
               if (!($7323)) {
                break L1142;
               }
               $7324 = ((($4)) + 168|0);
               $7325 = +HEAPF64[$7324>>3];
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x270,$7325,-1);
               $7326 = ((($x270)) + 8|0);
               $7327 = HEAP8[$7326>>0]|0;
               $7328 = $7327&1;
               if (!($7328)) {
                break L1142;
               }
               $7329 = $x267;
               $7330 = +HEAPF64[$x269>>3];
               $7331 = $7329 * $7330;
               $7332 = +HEAPF64[$x270>>3];
               $7333 = $7331 * $7332;
               $7334 = ((($4)) + 384|0);
               $7335 = +HEAPF64[$7334>>3];
               $7336 = ((($4)) + 136|0);
               $7337 = +HEAPF64[$7336>>3];
               $7338 = $7335 * $7337;
               $7339 = ((($4)) + 264|0);
               $7340 = +HEAPF64[$7339>>3];
               $7341 = -1.0 * $7340;
               $7342 = ((($4)) + 176|0);
               $7343 = +HEAPF64[$7342>>3];
               $7344 = $7341 * $7343;
               $7345 = $7338 + $7344;
               $7346 = $7333 * $7345;
               $7347 = (+__Z5IKabsd($7346));
               $7348 = $7347 < 1.9999999999999999E-6;
               do {
                if ($7348) {
                 $7349 = ((($4)) + 384|0);
                 $7350 = +HEAPF64[$7349>>3];
                 $7351 = -1.0 * $7350;
                 $7352 = $x267;
                 $7353 = $7351 * $7352;
                 $7354 = (+__Z5IKabsd($7353));
                 $7355 = $7354 < 1.9999999999999999E-6;
                 if (!($7355)) {
                  break;
                 }
                 $7356 = $x267;
                 $7357 = +HEAPF64[$x269>>3];
                 $7358 = $7356 * $7357;
                 $7359 = +HEAPF64[$x270>>3];
                 $7360 = $7358 * $7359;
                 $7361 = ((($4)) + 384|0);
                 $7362 = +HEAPF64[$7361>>3];
                 $7363 = ((($4)) + 136|0);
                 $7364 = +HEAPF64[$7363>>3];
                 $7365 = $7362 * $7364;
                 $7366 = ((($4)) + 264|0);
                 $7367 = +HEAPF64[$7366>>3];
                 $7368 = -1.0 * $7367;
                 $7369 = ((($4)) + 176|0);
                 $7370 = +HEAPF64[$7369>>3];
                 $7371 = $7368 * $7370;
                 $7372 = $7365 + $7371;
                 $7373 = $7360 * $7372;
                 $7374 = (+__Z5IKsqrd($7373));
                 $7375 = ((($4)) + 384|0);
                 $7376 = +HEAPF64[$7375>>3];
                 $7377 = -1.0 * $7376;
                 $7378 = $x267;
                 $7379 = $7377 * $7378;
                 $7380 = (+__Z5IKsqrd($7379));
                 $7381 = $7374 + $7380;
                 $7382 = $7381 - 1.0;
                 $7383 = (+__Z5IKabsd($7382));
                 $7384 = $7383 <= 1.9999999999999999E-6;
                 if ($7384) {
                  break L1142;
                 }
                }
               } while(0);
               $7385 = $x267;
               $7386 = +HEAPF64[$x269>>3];
               $7387 = $7385 * $7386;
               $7388 = +HEAPF64[$x270>>3];
               $7389 = $7387 * $7388;
               $7390 = ((($4)) + 384|0);
               $7391 = +HEAPF64[$7390>>3];
               $7392 = ((($4)) + 136|0);
               $7393 = +HEAPF64[$7392>>3];
               $7394 = $7391 * $7393;
               $7395 = ((($4)) + 264|0);
               $7396 = +HEAPF64[$7395>>3];
               $7397 = -1.0 * $7396;
               $7398 = ((($4)) + 176|0);
               $7399 = +HEAPF64[$7398>>3];
               $7400 = $7397 * $7399;
               $7401 = $7394 + $7400;
               $7402 = $7389 * $7401;
               $7403 = ((($4)) + 384|0);
               $7404 = +HEAPF64[$7403>>3];
               $7405 = -1.0 * $7404;
               $7406 = $x267;
               $7407 = $7405 * $7406;
               $7408 = (+__Z7IKatan2dd($7402,$7407));
               HEAPF64[$j5array113>>3] = $7408;
               $7409 = +HEAPF64[$j5array113>>3];
               $7410 = (+__Z5IKsind($7409));
               HEAPF64[$sj5array115>>3] = $7410;
               $7411 = +HEAPF64[$j5array113>>3];
               $7412 = (+__Z5IKcosd($7411));
               HEAPF64[$cj5array114>>3] = $7412;
               $7413 = +HEAPF64[$j5array113>>3];
               $7414 = $7413 > 3.14159265358979;
               $7415 = +HEAPF64[$j5array113>>3];
               do {
                if ($7414) {
                 $7416 = $7415 - 6.2831853071795898;
                 HEAPF64[$j5array113>>3] = $7416;
                } else {
                 $7417 = $7415 < -3.14159265358979;
                 if (!($7417)) {
                  break;
                 }
                 $7418 = +HEAPF64[$j5array113>>3];
                 $7419 = $7418 + 6.2831853071795898;
                 HEAPF64[$j5array113>>3] = $7419;
                }
               } while(0);
               HEAP8[$j5valid116>>0] = 1;
               $ij5117 = 0;
               while(1) {
                $7420 = $ij5117;
                $7421 = ($7420|0)<(1);
                if (!($7421)) {
                 break L1142;
                }
                $7422 = $ij5117;
                $7423 = (($j5valid116) + ($7422)|0);
                $7424 = HEAP8[$7423>>0]|0;
                $7425 = $7424&1;
                do {
                 if ($7425) {
                  $7426 = $ij5117;
                  $7427 = $7426&255;
                  $7428 = ((($4)) + 551|0);
                  HEAP8[$7428>>0] = $7427;
                  $7429 = ((($4)) + 551|0);
                  $7430 = ((($7429)) + 1|0);
                  HEAP8[$7430>>0] = -1;
                  $7431 = $ij5117;
                  $7432 = (($7431) + 1)|0;
                  $iij5118 = $7432;
                  L1331: while(1) {
                   $7433 = $iij5118;
                   $7434 = ($7433|0)<(1);
                   if (!($7434)) {
                    break;
                   }
                   $7435 = $iij5118;
                   $7436 = (($j5valid116) + ($7435)|0);
                   $7437 = HEAP8[$7436>>0]|0;
                   $7438 = $7437&1;
                   do {
                    if ($7438) {
                     $7439 = $ij5117;
                     $7440 = (($cj5array114) + ($7439<<3)|0);
                     $7441 = +HEAPF64[$7440>>3];
                     $7442 = $iij5118;
                     $7443 = (($cj5array114) + ($7442<<3)|0);
                     $7444 = +HEAPF64[$7443>>3];
                     $7445 = $7441 - $7444;
                     $7446 = (+__Z5IKabsd($7445));
                     $7447 = $7446 < 9.9999999999999995E-7;
                     if (!($7447)) {
                      break;
                     }
                     $7448 = $ij5117;
                     $7449 = (($sj5array115) + ($7448<<3)|0);
                     $7450 = +HEAPF64[$7449>>3];
                     $7451 = $iij5118;
                     $7452 = (($sj5array115) + ($7451<<3)|0);
                     $7453 = +HEAPF64[$7452>>3];
                     $7454 = $7450 - $7453;
                     $7455 = (+__Z5IKabsd($7454));
                     $7456 = $7455 < 9.9999999999999995E-7;
                     if ($7456) {
                      label = 851;
                      break L1331;
                     }
                    }
                   } while(0);
                   $7463 = $iij5118;
                   $7464 = (($7463) + 1)|0;
                   $iij5118 = $7464;
                  }
                  if ((label|0) == 851) {
                   label = 0;
                   $7457 = $iij5118;
                   $7458 = (($j5valid116) + ($7457)|0);
                   HEAP8[$7458>>0] = 0;
                   $7459 = $iij5118;
                   $7460 = $7459&255;
                   $7461 = ((($4)) + 551|0);
                   $7462 = ((($7461)) + 1|0);
                   HEAP8[$7462>>0] = $7460;
                  }
                  $7465 = $ij5117;
                  $7466 = (($j5array113) + ($7465<<3)|0);
                  $7467 = +HEAPF64[$7466>>3];
                  $7468 = ((($4)) + 200|0);
                  HEAPF64[$7468>>3] = $7467;
                  $7469 = $ij5117;
                  $7470 = (($cj5array114) + ($7469<<3)|0);
                  $7471 = +HEAPF64[$7470>>3];
                  $7472 = ((($4)) + 208|0);
                  HEAPF64[$7472>>3] = $7471;
                  $7473 = $ij5117;
                  $7474 = (($sj5array115) + ($7473<<3)|0);
                  $7475 = +HEAPF64[$7474>>3];
                  $7476 = ((($4)) + 216|0);
                  HEAPF64[$7476>>3] = $7475;
                  $7477 = ((($4)) + 200|0);
                  $7478 = +HEAPF64[$7477>>3];
                  $7479 = (+__Z5IKsind($7478));
                  $x271 = $7479;
                  $7480 = ((($4)) + 200|0);
                  $7481 = +HEAPF64[$7480>>3];
                  $7482 = (+__Z5IKcosd($7481));
                  $x272 = $7482;
                  $7483 = ((($4)) + 128|0);
                  $7484 = +HEAPF64[$7483>>3];
                  $7485 = ((($4)) + 240|0);
                  $7486 = +HEAPF64[$7485>>3];
                  $7487 = $7484 * $7486;
                  $x273 = $7487;
                  $7488 = ((($4)) + 128|0);
                  $7489 = +HEAPF64[$7488>>3];
                  $7490 = ((($4)) + 168|0);
                  $7491 = +HEAPF64[$7490>>3];
                  $7492 = $7489 * $7491;
                  $x274 = $7492;
                  $7493 = ((($4)) + 168|0);
                  $7494 = +HEAPF64[$7493>>3];
                  $7495 = ((($4)) + 136|0);
                  $7496 = +HEAPF64[$7495>>3];
                  $7497 = $7494 * $7496;
                  $x275 = $7497;
                  $7498 = ((($4)) + 136|0);
                  $7499 = +HEAPF64[$7498>>3];
                  $7500 = 1.0 * $7499;
                  $x276 = $7500;
                  $7501 = ((($4)) + 176|0);
                  $7502 = +HEAPF64[$7501>>3];
                  $7503 = 1.0 * $7502;
                  $x277 = $7503;
                  $7504 = $x272;
                  $7505 = 1.0 * $7504;
                  $x278 = $7505;
                  $7506 = ((($4)) + 136|0);
                  $7507 = +HEAPF64[$7506>>3];
                  $7508 = $x271;
                  $7509 = $7507 * $7508;
                  $x279 = $7509;
                  $7510 = $x271;
                  $7511 = 1.0 * $7510;
                  $x280 = $7511;
                  $7512 = ((($4)) + 384|0);
                  $7513 = +HEAPF64[$7512>>3];
                  $7514 = ((($4)) + 176|0);
                  $7515 = +HEAPF64[$7514>>3];
                  $7516 = $x272;
                  $7517 = $7515 * $7516;
                  $7518 = $7513 + $7517;
                  HEAPF64[$evalcond119>>3] = $7518;
                  $7519 = $x271;
                  $7520 = -1.0 * $7519;
                  $7521 = $x277;
                  $7522 = $7520 * $7521;
                  $7523 = ((($4)) + 408|0);
                  $7524 = +HEAPF64[$7523>>3];
                  $7525 = $7522 + $7524;
                  $7526 = ((($evalcond119)) + 8|0);
                  HEAPF64[$7526>>3] = $7525;
                  $7527 = ((($4)) + 168|0);
                  $7528 = +HEAPF64[$7527>>3];
                  $7529 = $x271;
                  $7530 = $7528 * $7529;
                  $7531 = ((($4)) + 336|0);
                  $7532 = +HEAPF64[$7531>>3];
                  $7533 = ((($4)) + 136|0);
                  $7534 = +HEAPF64[$7533>>3];
                  $7535 = $7532 * $7534;
                  $7536 = $7530 + $7535;
                  $7537 = ((($4)) + 128|0);
                  $7538 = +HEAPF64[$7537>>3];
                  $7539 = ((($4)) + 264|0);
                  $7540 = +HEAPF64[$7539>>3];
                  $7541 = $7538 * $7540;
                  $7542 = $7536 + $7541;
                  $7543 = ((($evalcond119)) + 16|0);
                  HEAPF64[$7543>>3] = $7542;
                  $7544 = ((($4)) + 240|0);
                  $7545 = +HEAPF64[$7544>>3];
                  $7546 = -1.0 * $7545;
                  $7547 = $x276;
                  $7548 = $7546 * $7547;
                  $7549 = ((($4)) + 128|0);
                  $7550 = +HEAPF64[$7549>>3];
                  $7551 = ((($4)) + 312|0);
                  $7552 = +HEAPF64[$7551>>3];
                  $7553 = $7550 * $7552;
                  $7554 = $7548 + $7553;
                  $7555 = $x280;
                  $7556 = -1.0 * $7555;
                  $7557 = $7554 + $7556;
                  $7558 = ((($evalcond119)) + 24|0);
                  HEAPF64[$7558>>3] = $7557;
                  $7559 = ((($4)) + 264|0);
                  $7560 = +HEAPF64[$7559>>3];
                  $7561 = -1.0 * $7560;
                  $7562 = $x276;
                  $7563 = $7561 * $7562;
                  $7564 = ((($4)) + 128|0);
                  $7565 = +HEAPF64[$7564>>3];
                  $7566 = ((($4)) + 336|0);
                  $7567 = +HEAPF64[$7566>>3];
                  $7568 = $7565 * $7567;
                  $7569 = $7563 + $7568;
                  $7570 = $x278;
                  $7571 = -1.0 * $7570;
                  $7572 = $7569 + $7571;
                  $7573 = ((($evalcond119)) + 32|0);
                  HEAPF64[$7573>>3] = $7572;
                  $7574 = $x271;
                  $7575 = $x274;
                  $7576 = $7574 * $7575;
                  $7577 = ((($4)) + 136|0);
                  $7578 = +HEAPF64[$7577>>3];
                  $7579 = $x272;
                  $7580 = $7578 * $7579;
                  $7581 = $7576 + $7580;
                  $7582 = ((($4)) + 264|0);
                  $7583 = +HEAPF64[$7582>>3];
                  $7584 = $7581 + $7583;
                  $7585 = ((($evalcond119)) + 40|0);
                  HEAPF64[$7585>>3] = $7584;
                  $7586 = ((($4)) + 168|0);
                  $7587 = +HEAPF64[$7586>>3];
                  $7588 = -1.0 * $7587;
                  $7589 = $x278;
                  $7590 = $7588 * $7589;
                  $7591 = ((($4)) + 312|0);
                  $7592 = +HEAPF64[$7591>>3];
                  $7593 = ((($4)) + 136|0);
                  $7594 = +HEAPF64[$7593>>3];
                  $7595 = $7592 * $7594;
                  $7596 = $7590 + $7595;
                  $7597 = $x273;
                  $7598 = $7596 + $7597;
                  $7599 = ((($evalcond119)) + 48|0);
                  HEAPF64[$7599>>3] = $7598;
                  $7600 = $x274;
                  $7601 = -1.0 * $7600;
                  $7602 = $x278;
                  $7603 = $7601 * $7602;
                  $7604 = $x279;
                  $7605 = $7603 + $7604;
                  $7606 = ((($4)) + 240|0);
                  $7607 = +HEAPF64[$7606>>3];
                  $7608 = $7605 + $7607;
                  $7609 = ((($evalcond119)) + 56|0);
                  HEAPF64[$7609>>3] = $7608;
                  $7610 = $x271;
                  $7611 = $x275;
                  $7612 = $7610 * $7611;
                  $7613 = ((($4)) + 128|0);
                  $7614 = +HEAPF64[$7613>>3];
                  $7615 = -1.0 * $7614;
                  $7616 = $x278;
                  $7617 = $7615 * $7616;
                  $7618 = $7612 + $7617;
                  $7619 = ((($4)) + 336|0);
                  $7620 = +HEAPF64[$7619>>3];
                  $7621 = $7618 + $7620;
                  $7622 = ((($evalcond119)) + 64|0);
                  HEAPF64[$7622>>3] = $7621;
                  $7623 = ((($4)) + 128|0);
                  $7624 = +HEAPF64[$7623>>3];
                  $7625 = -1.0 * $7624;
                  $7626 = $x280;
                  $7627 = $7625 * $7626;
                  $7628 = $x275;
                  $7629 = -1.0 * $7628;
                  $7630 = $x278;
                  $7631 = $7629 * $7630;
                  $7632 = $7627 + $7631;
                  $7633 = ((($4)) + 312|0);
                  $7634 = +HEAPF64[$7633>>3];
                  $7635 = $7632 + $7634;
                  $7636 = ((($evalcond119)) + 72|0);
                  HEAPF64[$7636>>3] = $7635;
                  $7637 = ((($4)) + 408|0);
                  $7638 = +HEAPF64[$7637>>3];
                  $7639 = -1.0 * $7638;
                  $7640 = $x277;
                  $7641 = $7639 * $7640;
                  $7642 = $x271;
                  $7643 = $7641 + $7642;
                  $7644 = ((($4)) + 264|0);
                  $7645 = +HEAPF64[$7644>>3];
                  $7646 = $x274;
                  $7647 = $7645 * $7646;
                  $7648 = $7643 + $7647;
                  $7649 = ((($4)) + 336|0);
                  $7650 = +HEAPF64[$7649>>3];
                  $7651 = $x275;
                  $7652 = $7650 * $7651;
                  $7653 = $7648 + $7652;
                  $7654 = ((($evalcond119)) + 80|0);
                  HEAPF64[$7654>>3] = $7653;
                  $7655 = ((($4)) + 168|0);
                  $7656 = +HEAPF64[$7655>>3];
                  $7657 = $x273;
                  $7658 = $7656 * $7657;
                  $7659 = ((($4)) + 384|0);
                  $7660 = +HEAPF64[$7659>>3];
                  $7661 = -1.0 * $7660;
                  $7662 = $x277;
                  $7663 = $7661 * $7662;
                  $7664 = $7658 + $7663;
                  $7665 = $x278;
                  $7666 = -1.0 * $7665;
                  $7667 = $7664 + $7666;
                  $7668 = ((($4)) + 312|0);
                  $7669 = +HEAPF64[$7668>>3];
                  $7670 = $x275;
                  $7671 = $7669 * $7670;
                  $7672 = $7667 + $7671;
                  $7673 = ((($evalcond119)) + 88|0);
                  HEAPF64[$7673>>3] = $7672;
                  $7674 = +HEAPF64[$evalcond119>>3];
                  $7675 = (+__Z5IKabsd($7674));
                  $7676 = $7675 > 5.0000000000000004E-6;
                  if ($7676) {
                   break;
                  }
                  $7677 = ((($evalcond119)) + 8|0);
                  $7678 = +HEAPF64[$7677>>3];
                  $7679 = (+__Z5IKabsd($7678));
                  $7680 = $7679 > 5.0000000000000004E-6;
                  if ($7680) {
                   break;
                  }
                  $7681 = ((($evalcond119)) + 16|0);
                  $7682 = +HEAPF64[$7681>>3];
                  $7683 = (+__Z5IKabsd($7682));
                  $7684 = $7683 > 5.0000000000000004E-6;
                  if ($7684) {
                   break;
                  }
                  $7685 = ((($evalcond119)) + 24|0);
                  $7686 = +HEAPF64[$7685>>3];
                  $7687 = (+__Z5IKabsd($7686));
                  $7688 = $7687 > 5.0000000000000004E-6;
                  if ($7688) {
                   break;
                  }
                  $7689 = ((($evalcond119)) + 32|0);
                  $7690 = +HEAPF64[$7689>>3];
                  $7691 = (+__Z5IKabsd($7690));
                  $7692 = $7691 > 5.0000000000000004E-6;
                  if ($7692) {
                   break;
                  }
                  $7693 = ((($evalcond119)) + 40|0);
                  $7694 = +HEAPF64[$7693>>3];
                  $7695 = (+__Z5IKabsd($7694));
                  $7696 = $7695 > 5.0000000000000004E-6;
                  if ($7696) {
                   break;
                  }
                  $7697 = ((($evalcond119)) + 48|0);
                  $7698 = +HEAPF64[$7697>>3];
                  $7699 = (+__Z5IKabsd($7698));
                  $7700 = $7699 > 5.0000000000000004E-6;
                  if ($7700) {
                   break;
                  }
                  $7701 = ((($evalcond119)) + 56|0);
                  $7702 = +HEAPF64[$7701>>3];
                  $7703 = (+__Z5IKabsd($7702));
                  $7704 = $7703 > 5.0000000000000004E-6;
                  if ($7704) {
                   break;
                  }
                  $7705 = ((($evalcond119)) + 64|0);
                  $7706 = +HEAPF64[$7705>>3];
                  $7707 = (+__Z5IKabsd($7706));
                  $7708 = $7707 > 5.0000000000000004E-6;
                  if ($7708) {
                   break;
                  }
                  $7709 = ((($evalcond119)) + 72|0);
                  $7710 = +HEAPF64[$7709>>3];
                  $7711 = (+__Z5IKabsd($7710));
                  $7712 = $7711 > 5.0000000000000004E-6;
                  if ($7712) {
                   break;
                  }
                  $7713 = ((($evalcond119)) + 80|0);
                  $7714 = +HEAPF64[$7713>>3];
                  $7715 = (+__Z5IKabsd($7714));
                  $7716 = $7715 > 5.0000000000000004E-6;
                  if ($7716) {
                   break;
                  }
                  $7717 = ((($evalcond119)) + 88|0);
                  $7718 = +HEAPF64[$7717>>3];
                  $7719 = (+__Z5IKabsd($7718));
                  $7720 = $7719 > 5.0000000000000004E-6;
                  if ($7720) {
                   break;
                  }
                  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos120,6);
                  __THREW__ = 0;
                  $7721 = (invoke_iii(416,($vinfos120|0),0)|0);
                  $7722 = __THREW__; __THREW__ = 0;
                  $7723 = $7722&1;
                  if ($7723) {
                   label = 900;
                   break L1;
                  }
                  $7724 = ((($7721)) + 17|0);
                  HEAP8[$7724>>0] = 1;
                  $7725 = +HEAPF64[$4>>3];
                  __THREW__ = 0;
                  $7726 = (invoke_iii(416,($vinfos120|0),0)|0);
                  $7727 = __THREW__; __THREW__ = 0;
                  $7728 = $7727&1;
                  if ($7728) {
                   label = 900;
                   break L1;
                  }
                  $7729 = ((($7726)) + 8|0);
                  HEAPF64[$7729>>3] = $7725;
                  $7730 = ((($4)) + 536|0);
                  $7731 = HEAP8[$7730>>0]|0;
                  __THREW__ = 0;
                  $7732 = (invoke_iii(416,($vinfos120|0),0)|0);
                  $7733 = __THREW__; __THREW__ = 0;
                  $7734 = $7733&1;
                  if ($7734) {
                   label = 900;
                   break L1;
                  }
                  $7735 = ((($7732)) + 19|0);
                  HEAP8[$7735>>0] = $7731;
                  $7736 = ((($4)) + 536|0);
                  $7737 = ((($7736)) + 1|0);
                  $7738 = HEAP8[$7737>>0]|0;
                  __THREW__ = 0;
                  $7739 = (invoke_iii(416,($vinfos120|0),0)|0);
                  $7740 = __THREW__; __THREW__ = 0;
                  $7741 = $7740&1;
                  if ($7741) {
                   label = 900;
                   break L1;
                  }
                  $7742 = ((($7739)) + 19|0);
                  $7743 = ((($7742)) + 1|0);
                  HEAP8[$7743>>0] = $7738;
                  $7744 = ((($4)) + 538|0);
                  $7745 = HEAP8[$7744>>0]|0;
                  __THREW__ = 0;
                  $7746 = (invoke_iii(416,($vinfos120|0),0)|0);
                  $7747 = __THREW__; __THREW__ = 0;
                  $7748 = $7747&1;
                  if ($7748) {
                   label = 900;
                   break L1;
                  }
                  $7749 = ((($7746)) + 18|0);
                  HEAP8[$7749>>0] = $7745;
                  __THREW__ = 0;
                  $7750 = (invoke_iii(416,($vinfos120|0),1)|0);
                  $7751 = __THREW__; __THREW__ = 0;
                  $7752 = $7751&1;
                  if ($7752) {
                   label = 900;
                   break L1;
                  }
                  $7753 = ((($7750)) + 17|0);
                  HEAP8[$7753>>0] = 1;
                  $7754 = ((($4)) + 40|0);
                  $7755 = +HEAPF64[$7754>>3];
                  __THREW__ = 0;
                  $7756 = (invoke_iii(416,($vinfos120|0),1)|0);
                  $7757 = __THREW__; __THREW__ = 0;
                  $7758 = $7757&1;
                  if ($7758) {
                   label = 900;
                   break L1;
                  }
                  $7759 = ((($7756)) + 8|0);
                  HEAPF64[$7759>>3] = $7755;
                  $7760 = ((($4)) + 539|0);
                  $7761 = HEAP8[$7760>>0]|0;
                  __THREW__ = 0;
                  $7762 = (invoke_iii(416,($vinfos120|0),1)|0);
                  $7763 = __THREW__; __THREW__ = 0;
                  $7764 = $7763&1;
                  if ($7764) {
                   label = 900;
                   break L1;
                  }
                  $7765 = ((($7762)) + 19|0);
                  HEAP8[$7765>>0] = $7761;
                  $7766 = ((($4)) + 539|0);
                  $7767 = ((($7766)) + 1|0);
                  $7768 = HEAP8[$7767>>0]|0;
                  __THREW__ = 0;
                  $7769 = (invoke_iii(416,($vinfos120|0),1)|0);
                  $7770 = __THREW__; __THREW__ = 0;
                  $7771 = $7770&1;
                  if ($7771) {
                   label = 900;
                   break L1;
                  }
                  $7772 = ((($7769)) + 19|0);
                  $7773 = ((($7772)) + 1|0);
                  HEAP8[$7773>>0] = $7768;
                  $7774 = ((($4)) + 541|0);
                  $7775 = HEAP8[$7774>>0]|0;
                  __THREW__ = 0;
                  $7776 = (invoke_iii(416,($vinfos120|0),1)|0);
                  $7777 = __THREW__; __THREW__ = 0;
                  $7778 = $7777&1;
                  if ($7778) {
                   label = 900;
                   break L1;
                  }
                  $7779 = ((($7776)) + 18|0);
                  HEAP8[$7779>>0] = $7775;
                  __THREW__ = 0;
                  $7780 = (invoke_iii(416,($vinfos120|0),2)|0);
                  $7781 = __THREW__; __THREW__ = 0;
                  $7782 = $7781&1;
                  if ($7782) {
                   label = 900;
                   break L1;
                  }
                  $7783 = ((($7780)) + 17|0);
                  HEAP8[$7783>>0] = 1;
                  $7784 = ((($4)) + 80|0);
                  $7785 = +HEAPF64[$7784>>3];
                  __THREW__ = 0;
                  $7786 = (invoke_iii(416,($vinfos120|0),2)|0);
                  $7787 = __THREW__; __THREW__ = 0;
                  $7788 = $7787&1;
                  if ($7788) {
                   label = 900;
                   break L1;
                  }
                  $7789 = ((($7786)) + 8|0);
                  HEAPF64[$7789>>3] = $7785;
                  $7790 = ((($4)) + 542|0);
                  $7791 = HEAP8[$7790>>0]|0;
                  __THREW__ = 0;
                  $7792 = (invoke_iii(416,($vinfos120|0),2)|0);
                  $7793 = __THREW__; __THREW__ = 0;
                  $7794 = $7793&1;
                  if ($7794) {
                   label = 900;
                   break L1;
                  }
                  $7795 = ((($7792)) + 19|0);
                  HEAP8[$7795>>0] = $7791;
                  $7796 = ((($4)) + 542|0);
                  $7797 = ((($7796)) + 1|0);
                  $7798 = HEAP8[$7797>>0]|0;
                  __THREW__ = 0;
                  $7799 = (invoke_iii(416,($vinfos120|0),2)|0);
                  $7800 = __THREW__; __THREW__ = 0;
                  $7801 = $7800&1;
                  if ($7801) {
                   label = 900;
                   break L1;
                  }
                  $7802 = ((($7799)) + 19|0);
                  $7803 = ((($7802)) + 1|0);
                  HEAP8[$7803>>0] = $7798;
                  $7804 = ((($4)) + 544|0);
                  $7805 = HEAP8[$7804>>0]|0;
                  __THREW__ = 0;
                  $7806 = (invoke_iii(416,($vinfos120|0),2)|0);
                  $7807 = __THREW__; __THREW__ = 0;
                  $7808 = $7807&1;
                  if ($7808) {
                   label = 900;
                   break L1;
                  }
                  $7809 = ((($7806)) + 18|0);
                  HEAP8[$7809>>0] = $7805;
                  __THREW__ = 0;
                  $7810 = (invoke_iii(416,($vinfos120|0),3)|0);
                  $7811 = __THREW__; __THREW__ = 0;
                  $7812 = $7811&1;
                  if ($7812) {
                   label = 900;
                   break L1;
                  }
                  $7813 = ((($7810)) + 17|0);
                  HEAP8[$7813>>0] = 1;
                  $7814 = ((($4)) + 120|0);
                  $7815 = +HEAPF64[$7814>>3];
                  __THREW__ = 0;
                  $7816 = (invoke_iii(416,($vinfos120|0),3)|0);
                  $7817 = __THREW__; __THREW__ = 0;
                  $7818 = $7817&1;
                  if ($7818) {
                   label = 900;
                   break L1;
                  }
                  $7819 = ((($7816)) + 8|0);
                  HEAPF64[$7819>>3] = $7815;
                  $7820 = ((($4)) + 545|0);
                  $7821 = HEAP8[$7820>>0]|0;
                  __THREW__ = 0;
                  $7822 = (invoke_iii(416,($vinfos120|0),3)|0);
                  $7823 = __THREW__; __THREW__ = 0;
                  $7824 = $7823&1;
                  if ($7824) {
                   label = 900;
                   break L1;
                  }
                  $7825 = ((($7822)) + 19|0);
                  HEAP8[$7825>>0] = $7821;
                  $7826 = ((($4)) + 545|0);
                  $7827 = ((($7826)) + 1|0);
                  $7828 = HEAP8[$7827>>0]|0;
                  __THREW__ = 0;
                  $7829 = (invoke_iii(416,($vinfos120|0),3)|0);
                  $7830 = __THREW__; __THREW__ = 0;
                  $7831 = $7830&1;
                  if ($7831) {
                   label = 900;
                   break L1;
                  }
                  $7832 = ((($7829)) + 19|0);
                  $7833 = ((($7832)) + 1|0);
                  HEAP8[$7833>>0] = $7828;
                  $7834 = ((($4)) + 547|0);
                  $7835 = HEAP8[$7834>>0]|0;
                  __THREW__ = 0;
                  $7836 = (invoke_iii(416,($vinfos120|0),3)|0);
                  $7837 = __THREW__; __THREW__ = 0;
                  $7838 = $7837&1;
                  if ($7838) {
                   label = 900;
                   break L1;
                  }
                  $7839 = ((($7836)) + 18|0);
                  HEAP8[$7839>>0] = $7835;
                  __THREW__ = 0;
                  $7840 = (invoke_iii(416,($vinfos120|0),4)|0);
                  $7841 = __THREW__; __THREW__ = 0;
                  $7842 = $7841&1;
                  if ($7842) {
                   label = 900;
                   break L1;
                  }
                  $7843 = ((($7840)) + 17|0);
                  HEAP8[$7843>>0] = 1;
                  $7844 = ((($4)) + 160|0);
                  $7845 = +HEAPF64[$7844>>3];
                  __THREW__ = 0;
                  $7846 = (invoke_iii(416,($vinfos120|0),4)|0);
                  $7847 = __THREW__; __THREW__ = 0;
                  $7848 = $7847&1;
                  if ($7848) {
                   label = 900;
                   break L1;
                  }
                  $7849 = ((($7846)) + 8|0);
                  HEAPF64[$7849>>3] = $7845;
                  $7850 = ((($4)) + 548|0);
                  $7851 = HEAP8[$7850>>0]|0;
                  __THREW__ = 0;
                  $7852 = (invoke_iii(416,($vinfos120|0),4)|0);
                  $7853 = __THREW__; __THREW__ = 0;
                  $7854 = $7853&1;
                  if ($7854) {
                   label = 900;
                   break L1;
                  }
                  $7855 = ((($7852)) + 19|0);
                  HEAP8[$7855>>0] = $7851;
                  $7856 = ((($4)) + 548|0);
                  $7857 = ((($7856)) + 1|0);
                  $7858 = HEAP8[$7857>>0]|0;
                  __THREW__ = 0;
                  $7859 = (invoke_iii(416,($vinfos120|0),4)|0);
                  $7860 = __THREW__; __THREW__ = 0;
                  $7861 = $7860&1;
                  if ($7861) {
                   label = 900;
                   break L1;
                  }
                  $7862 = ((($7859)) + 19|0);
                  $7863 = ((($7862)) + 1|0);
                  HEAP8[$7863>>0] = $7858;
                  $7864 = ((($4)) + 550|0);
                  $7865 = HEAP8[$7864>>0]|0;
                  __THREW__ = 0;
                  $7866 = (invoke_iii(416,($vinfos120|0),4)|0);
                  $7867 = __THREW__; __THREW__ = 0;
                  $7868 = $7867&1;
                  if ($7868) {
                   label = 900;
                   break L1;
                  }
                  $7869 = ((($7866)) + 18|0);
                  HEAP8[$7869>>0] = $7865;
                  __THREW__ = 0;
                  $7870 = (invoke_iii(416,($vinfos120|0),5)|0);
                  $7871 = __THREW__; __THREW__ = 0;
                  $7872 = $7871&1;
                  if ($7872) {
                   label = 900;
                   break L1;
                  }
                  $7873 = ((($7870)) + 17|0);
                  HEAP8[$7873>>0] = 1;
                  $7874 = ((($4)) + 200|0);
                  $7875 = +HEAPF64[$7874>>3];
                  __THREW__ = 0;
                  $7876 = (invoke_iii(416,($vinfos120|0),5)|0);
                  $7877 = __THREW__; __THREW__ = 0;
                  $7878 = $7877&1;
                  if ($7878) {
                   label = 900;
                   break L1;
                  }
                  $7879 = ((($7876)) + 8|0);
                  HEAPF64[$7879>>3] = $7875;
                  $7880 = ((($4)) + 551|0);
                  $7881 = HEAP8[$7880>>0]|0;
                  __THREW__ = 0;
                  $7882 = (invoke_iii(416,($vinfos120|0),5)|0);
                  $7883 = __THREW__; __THREW__ = 0;
                  $7884 = $7883&1;
                  if ($7884) {
                   label = 900;
                   break L1;
                  }
                  $7885 = ((($7882)) + 19|0);
                  HEAP8[$7885>>0] = $7881;
                  $7886 = ((($4)) + 551|0);
                  $7887 = ((($7886)) + 1|0);
                  $7888 = HEAP8[$7887>>0]|0;
                  __THREW__ = 0;
                  $7889 = (invoke_iii(416,($vinfos120|0),5)|0);
                  $7890 = __THREW__; __THREW__ = 0;
                  $7891 = $7890&1;
                  if ($7891) {
                   label = 900;
                   break L1;
                  }
                  $7892 = ((($7889)) + 19|0);
                  $7893 = ((($7892)) + 1|0);
                  HEAP8[$7893>>0] = $7888;
                  $7894 = ((($4)) + 553|0);
                  $7895 = HEAP8[$7894>>0]|0;
                  __THREW__ = 0;
                  $7896 = (invoke_iii(416,($vinfos120|0),5)|0);
                  $7897 = __THREW__; __THREW__ = 0;
                  $7898 = $7897&1;
                  if ($7898) {
                   label = 900;
                   break L1;
                  }
                  $7899 = ((($7896)) + 18|0);
                  HEAP8[$7899>>0] = $7895;
                  __THREW__ = 0;
                  invoke_vii(417,($vfree121|0),0);
                  $7900 = __THREW__; __THREW__ = 0;
                  $7901 = $7900&1;
                  if ($7901) {
                   label = 900;
                   break L1;
                  }
                  $7902 = $1;
                  $7903 = HEAP32[$7902>>2]|0;
                  $7904 = ((($7903)) + 8|0);
                  $7905 = HEAP32[$7904>>2]|0;
                  __THREW__ = 0;
                  (invoke_iiii($7905|0,($7902|0),($vinfos120|0),($vfree121|0))|0);
                  $7906 = __THREW__; __THREW__ = 0;
                  $7907 = $7906&1;
                  if ($7907) {
                   label = 901;
                   break L1;
                  }
                  __THREW__ = 0;
                  invoke_vi(371,($vfree121|0));
                  $7908 = __THREW__; __THREW__ = 0;
                  $7909 = $7908&1;
                  if ($7909) {
                   label = 900;
                   break L1;
                  }
                  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos120);
                 }
                } while(0);
                $7910 = $ij5117;
                $7911 = (($7910) + 1)|0;
                $ij5117 = $7911;
               }
              }
             } while(0);
             $bgotonextstatement32 = 1;
             $2848 = ((($4)) + 432|0);
             $2849 = +HEAPF64[$2848>>3];
             $2850 = ((($4)) + 168|0);
             $2851 = +HEAPF64[$2850>>3];
             $2852 = -1.0 * $2851;
             $2853 = $2849 + $2852;
             $x190 = $2853;
             $2854 = ((($4)) + 176|0);
             $2855 = +HEAPF64[$2854>>3];
             $2856 = -1.0 * $2855;
             $2857 = ((($4)) + 360|0);
             $2858 = +HEAPF64[$2857>>3];
             $2859 = $2856 + $2858;
             $x191 = $2859;
             $2860 = ((($4)) + 168|0);
             $2861 = +HEAPF64[$2860>>3];
             $2862 = 1.0 * $2861;
             $x192 = $2862;
             $2863 = ((($4)) + 176|0);
             $2864 = +HEAPF64[$2863>>3];
             $2865 = 1.0 * $2864;
             $x193 = $2865;
             $2866 = ((($4)) + 120|0);
             $2867 = +HEAPF64[$2866>>3];
             $2868 = -1.5707963267949001 + $2867;
             $2869 = (+__Z5IKabsd($2868));
             $2870 = 3.14159265358979 + $2869;
             $2871 = (+__Z6IKfmoddd($2870,6.2831853071795898));
             $2872 = -3.14159265358979 + $2871;
             HEAPF64[$evalcond31>>3] = $2872;
             $2873 = $x190;
             $2874 = ((($evalcond31)) + 8|0);
             HEAPF64[$2874>>3] = $2873;
             $2875 = $x190;
             $2876 = ((($evalcond31)) + 16|0);
             HEAPF64[$2876>>3] = $2875;
             $2877 = ((($4)) + 288|0);
             $2878 = +HEAPF64[$2877>>3];
             $2879 = ((($evalcond31)) + 24|0);
             HEAPF64[$2879>>3] = $2878;
             $2880 = $x191;
             $2881 = ((($evalcond31)) + 32|0);
             HEAPF64[$2881>>3] = $2880;
             $2882 = $x191;
             $2883 = ((($evalcond31)) + 40|0);
             HEAPF64[$2883>>3] = $2882;
             $2884 = ((($4)) + 168|0);
             $2885 = +HEAPF64[$2884>>3];
             $2886 = ((($4)) + 360|0);
             $2887 = +HEAPF64[$2886>>3];
             $2888 = $2885 * $2887;
             $2889 = ((($4)) + 432|0);
             $2890 = +HEAPF64[$2889>>3];
             $2891 = -1.0 * $2890;
             $2892 = $x193;
             $2893 = $2891 * $2892;
             $2894 = $2888 + $2893;
             $2895 = ((($evalcond31)) + 48|0);
             HEAPF64[$2895>>3] = $2894;
             $2896 = ((($4)) + 384|0);
             $2897 = +HEAPF64[$2896>>3];
             $2898 = -1.0 * $2897;
             $2899 = $x192;
             $2900 = $2898 * $2899;
             $2901 = ((($4)) + 312|0);
             $2902 = +HEAPF64[$2901>>3];
             $2903 = -1.0 * $2902;
             $2904 = $x193;
             $2905 = $2903 * $2904;
             $2906 = $2900 + $2905;
             $2907 = ((($evalcond31)) + 56|0);
             HEAPF64[$2907>>3] = $2906;
             $2908 = ((($4)) + 408|0);
             $2909 = +HEAPF64[$2908>>3];
             $2910 = -1.0 * $2909;
             $2911 = $x192;
             $2912 = $2910 * $2911;
             $2913 = ((($4)) + 336|0);
             $2914 = +HEAPF64[$2913>>3];
             $2915 = -1.0 * $2914;
             $2916 = $x193;
             $2917 = $2915 * $2916;
             $2918 = $2912 + $2917;
             $2919 = ((($evalcond31)) + 64|0);
             HEAPF64[$2919>>3] = $2918;
             $2920 = ((($4)) + 432|0);
             $2921 = +HEAPF64[$2920>>3];
             $2922 = -1.0 * $2921;
             $2923 = $x192;
             $2924 = $2922 * $2923;
             $2925 = 1.0 + $2924;
             $2926 = ((($4)) + 360|0);
             $2927 = +HEAPF64[$2926>>3];
             $2928 = -1.0 * $2927;
             $2929 = $x193;
             $2930 = $2928 * $2929;
             $2931 = $2925 + $2930;
             $2932 = ((($evalcond31)) + 72|0);
             HEAPF64[$2932>>3] = $2931;
             $2933 = +HEAPF64[$evalcond31>>3];
             $2934 = (+__Z5IKabsd($2933));
             $2935 = $2934 < 9.9999999999999995E-7;
             L1388: do {
              if ($2935) {
               $2936 = ((($evalcond31)) + 8|0);
               $2937 = +HEAPF64[$2936>>3];
               $2938 = (+__Z5IKabsd($2937));
               $2939 = $2938 < 9.9999999999999995E-7;
               if (!($2939)) {
                break;
               }
               $2940 = ((($evalcond31)) + 16|0);
               $2941 = +HEAPF64[$2940>>3];
               $2942 = (+__Z5IKabsd($2941));
               $2943 = $2942 < 9.9999999999999995E-7;
               if (!($2943)) {
                break;
               }
               $2944 = ((($evalcond31)) + 24|0);
               $2945 = +HEAPF64[$2944>>3];
               $2946 = (+__Z5IKabsd($2945));
               $2947 = $2946 < 9.9999999999999995E-7;
               if (!($2947)) {
                break;
               }
               $2948 = ((($evalcond31)) + 32|0);
               $2949 = +HEAPF64[$2948>>3];
               $2950 = (+__Z5IKabsd($2949));
               $2951 = $2950 < 9.9999999999999995E-7;
               if (!($2951)) {
                break;
               }
               $2952 = ((($evalcond31)) + 40|0);
               $2953 = +HEAPF64[$2952>>3];
               $2954 = (+__Z5IKabsd($2953));
               $2955 = $2954 < 9.9999999999999995E-7;
               if (!($2955)) {
                break;
               }
               $2956 = ((($evalcond31)) + 48|0);
               $2957 = +HEAPF64[$2956>>3];
               $2958 = (+__Z5IKabsd($2957));
               $2959 = $2958 < 9.9999999999999995E-7;
               if (!($2959)) {
                break;
               }
               $2960 = ((($evalcond31)) + 56|0);
               $2961 = +HEAPF64[$2960>>3];
               $2962 = (+__Z5IKabsd($2961));
               $2963 = $2962 < 9.9999999999999995E-7;
               if (!($2963)) {
                break;
               }
               $2964 = ((($evalcond31)) + 64|0);
               $2965 = +HEAPF64[$2964>>3];
               $2966 = (+__Z5IKabsd($2965));
               $2967 = $2966 < 9.9999999999999995E-7;
               if (!($2967)) {
                break;
               }
               $2968 = ((($evalcond31)) + 72|0);
               $2969 = +HEAPF64[$2968>>3];
               $2970 = (+__Z5IKabsd($2969));
               $2971 = $2970 < 9.9999999999999995E-7;
               if (!($2971)) {
                break;
               }
               $bgotonextstatement32 = 0;
               ;HEAP8[$j5valid36>>0]=0|0;
               $2972 = ((($4)) + 553|0);
               HEAP8[$2972>>0] = 1;
               $2973 = ((($4)) + 408|0);
               $2974 = +HEAPF64[$2973>>3];
               $2975 = ((($4)) + 384|0);
               $2976 = +HEAPF64[$2975>>3];
               $2977 = -1.0 * $2976;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x194,$2974,$2977,1.9999999999999999E-6);
               $2978 = ((($x194)) + 8|0);
               $2979 = HEAP8[$2978>>0]|0;
               $2980 = $2979&1;
               if (!($2980)) {
                break;
               }
               $2981 = ((($4)) + 360|0);
               $2982 = +HEAPF64[$2981>>3];
               $2983 = (+__Z6IKsignd($2982));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x195,$2983,-1);
               $2984 = ((($x195)) + 8|0);
               $2985 = HEAP8[$2984>>0]|0;
               $2986 = $2985&1;
               if (!($2986)) {
                break;
               }
               $2987 = +HEAPF64[$x194>>3];
               $2988 = -1.5707963267949001 + $2987;
               $2989 = +HEAPF64[$x195>>3];
               $2990 = 1.5707963267949001 * $2989;
               $2991 = $2988 + $2990;
               HEAPF64[$j5array33>>3] = $2991;
               $2992 = +HEAPF64[$j5array33>>3];
               $2993 = (+__Z5IKsind($2992));
               HEAPF64[$sj5array35>>3] = $2993;
               $2994 = +HEAPF64[$j5array33>>3];
               $2995 = (+__Z5IKcosd($2994));
               HEAPF64[$cj5array34>>3] = $2995;
               $2996 = +HEAPF64[$j5array33>>3];
               $2997 = $2996 > 3.14159265358979;
               $2998 = +HEAPF64[$j5array33>>3];
               do {
                if ($2997) {
                 $2999 = $2998 - 6.2831853071795898;
                 HEAPF64[$j5array33>>3] = $2999;
                } else {
                 $3000 = $2998 < -3.14159265358979;
                 if (!($3000)) {
                  break;
                 }
                 $3001 = +HEAPF64[$j5array33>>3];
                 $3002 = $3001 + 6.2831853071795898;
                 HEAPF64[$j5array33>>3] = $3002;
                }
               } while(0);
               HEAP8[$j5valid36>>0] = 1;
               $ij537 = 0;
               while(1) {
                $3003 = $ij537;
                $3004 = ($3003|0)<(1);
                if (!($3004)) {
                 break L1388;
                }
                $3005 = $ij537;
                $3006 = (($j5valid36) + ($3005)|0);
                $3007 = HEAP8[$3006>>0]|0;
                $3008 = $3007&1;
                do {
                 if ($3008) {
                  $3009 = $ij537;
                  $3010 = $3009&255;
                  $3011 = ((($4)) + 551|0);
                  HEAP8[$3011>>0] = $3010;
                  $3012 = ((($4)) + 551|0);
                  $3013 = ((($3012)) + 1|0);
                  HEAP8[$3013>>0] = -1;
                  $3014 = $ij537;
                  $3015 = (($3014) + 1)|0;
                  $iij538 = $3015;
                  L1411: while(1) {
                   $3016 = $iij538;
                   $3017 = ($3016|0)<(1);
                   if (!($3017)) {
                    break;
                   }
                   $3018 = $iij538;
                   $3019 = (($j5valid36) + ($3018)|0);
                   $3020 = HEAP8[$3019>>0]|0;
                   $3021 = $3020&1;
                   do {
                    if ($3021) {
                     $3022 = $ij537;
                     $3023 = (($cj5array34) + ($3022<<3)|0);
                     $3024 = +HEAPF64[$3023>>3];
                     $3025 = $iij538;
                     $3026 = (($cj5array34) + ($3025<<3)|0);
                     $3027 = +HEAPF64[$3026>>3];
                     $3028 = $3024 - $3027;
                     $3029 = (+__Z5IKabsd($3028));
                     $3030 = $3029 < 9.9999999999999995E-7;
                     if (!($3030)) {
                      break;
                     }
                     $3031 = $ij537;
                     $3032 = (($sj5array35) + ($3031<<3)|0);
                     $3033 = +HEAPF64[$3032>>3];
                     $3034 = $iij538;
                     $3035 = (($sj5array35) + ($3034<<3)|0);
                     $3036 = +HEAPF64[$3035>>3];
                     $3037 = $3033 - $3036;
                     $3038 = (+__Z5IKabsd($3037));
                     $3039 = $3038 < 9.9999999999999995E-7;
                     if ($3039) {
                      label = 262;
                      break L1411;
                     }
                    }
                   } while(0);
                   $3046 = $iij538;
                   $3047 = (($3046) + 1)|0;
                   $iij538 = $3047;
                  }
                  if ((label|0) == 262) {
                   label = 0;
                   $3040 = $iij538;
                   $3041 = (($j5valid36) + ($3040)|0);
                   HEAP8[$3041>>0] = 0;
                   $3042 = $iij538;
                   $3043 = $3042&255;
                   $3044 = ((($4)) + 551|0);
                   $3045 = ((($3044)) + 1|0);
                   HEAP8[$3045>>0] = $3043;
                  }
                  $3048 = $ij537;
                  $3049 = (($j5array33) + ($3048<<3)|0);
                  $3050 = +HEAPF64[$3049>>3];
                  $3051 = ((($4)) + 200|0);
                  HEAPF64[$3051>>3] = $3050;
                  $3052 = $ij537;
                  $3053 = (($cj5array34) + ($3052<<3)|0);
                  $3054 = +HEAPF64[$3053>>3];
                  $3055 = ((($4)) + 208|0);
                  HEAPF64[$3055>>3] = $3054;
                  $3056 = $ij537;
                  $3057 = (($sj5array35) + ($3056<<3)|0);
                  $3058 = +HEAPF64[$3057>>3];
                  $3059 = ((($4)) + 216|0);
                  HEAPF64[$3059>>3] = $3058;
                  $3060 = ((($4)) + 200|0);
                  $3061 = +HEAPF64[$3060>>3];
                  $3062 = (+__Z5IKsind($3061));
                  $x196 = $3062;
                  $3063 = ((($4)) + 200|0);
                  $3064 = +HEAPF64[$3063>>3];
                  $3065 = (+__Z5IKcosd($3064));
                  $x197 = $3065;
                  $3066 = ((($4)) + 360|0);
                  $3067 = +HEAPF64[$3066>>3];
                  $3068 = 1.0 * $3067;
                  $x198 = $3068;
                  $3069 = $x197;
                  $3070 = 1.0 * $3069;
                  $x199 = $3070;
                  $3071 = $x196;
                  $3072 = 1.0 * $3071;
                  $x200 = $3072;
                  $3073 = ((($4)) + 360|0);
                  $3074 = +HEAPF64[$3073>>3];
                  $3075 = $x197;
                  $3076 = $3074 * $3075;
                  $3077 = ((($4)) + 384|0);
                  $3078 = +HEAPF64[$3077>>3];
                  $3079 = $3076 + $3078;
                  HEAPF64[$evalcond39>>3] = $3079;
                  $3080 = ((($4)) + 432|0);
                  $3081 = +HEAPF64[$3080>>3];
                  $3082 = $x196;
                  $3083 = $3081 * $3082;
                  $3084 = ((($4)) + 336|0);
                  $3085 = +HEAPF64[$3084>>3];
                  $3086 = $3083 + $3085;
                  $3087 = ((($evalcond39)) + 8|0);
                  HEAPF64[$3087>>3] = $3086;
                  $3088 = $x196;
                  $3089 = -1.0 * $3088;
                  $3090 = $x198;
                  $3091 = $3089 * $3090;
                  $3092 = ((($4)) + 408|0);
                  $3093 = +HEAPF64[$3092>>3];
                  $3094 = $3091 + $3093;
                  $3095 = ((($evalcond39)) + 16|0);
                  HEAPF64[$3095>>3] = $3094;
                  $3096 = ((($4)) + 432|0);
                  $3097 = +HEAPF64[$3096>>3];
                  $3098 = -1.0 * $3097;
                  $3099 = $x199;
                  $3100 = $3098 * $3099;
                  $3101 = ((($4)) + 312|0);
                  $3102 = +HEAPF64[$3101>>3];
                  $3103 = $3100 + $3102;
                  $3104 = ((($evalcond39)) + 24|0);
                  HEAPF64[$3104>>3] = $3103;
                  $3105 = $x200;
                  $3106 = -1.0 * $3105;
                  $3107 = ((($4)) + 240|0);
                  $3108 = +HEAPF64[$3107>>3];
                  $3109 = -1.0 * $3108;
                  $3110 = $3106 + $3109;
                  $3111 = ((($evalcond39)) + 32|0);
                  HEAPF64[$3111>>3] = $3110;
                  $3112 = $x199;
                  $3113 = -1.0 * $3112;
                  $3114 = ((($4)) + 264|0);
                  $3115 = +HEAPF64[$3114>>3];
                  $3116 = -1.0 * $3115;
                  $3117 = $3113 + $3116;
                  $3118 = ((($evalcond39)) + 40|0);
                  HEAPF64[$3118>>3] = $3117;
                  $3119 = ((($4)) + 408|0);
                  $3120 = +HEAPF64[$3119>>3];
                  $3121 = -1.0 * $3120;
                  $3122 = $x198;
                  $3123 = $3121 * $3122;
                  $3124 = $x196;
                  $3125 = $3123 + $3124;
                  $3126 = ((($4)) + 336|0);
                  $3127 = +HEAPF64[$3126>>3];
                  $3128 = ((($4)) + 432|0);
                  $3129 = +HEAPF64[$3128>>3];
                  $3130 = $3127 * $3129;
                  $3131 = $3125 + $3130;
                  $3132 = ((($evalcond39)) + 48|0);
                  HEAPF64[$3132>>3] = $3131;
                  $3133 = $x199;
                  $3134 = -1.0 * $3133;
                  $3135 = ((($4)) + 384|0);
                  $3136 = +HEAPF64[$3135>>3];
                  $3137 = -1.0 * $3136;
                  $3138 = $x198;
                  $3139 = $3137 * $3138;
                  $3140 = $3134 + $3139;
                  $3141 = ((($4)) + 312|0);
                  $3142 = +HEAPF64[$3141>>3];
                  $3143 = ((($4)) + 432|0);
                  $3144 = +HEAPF64[$3143>>3];
                  $3145 = $3142 * $3144;
                  $3146 = $3140 + $3145;
                  $3147 = ((($evalcond39)) + 56|0);
                  HEAPF64[$3147>>3] = $3146;
                  $3148 = +HEAPF64[$evalcond39>>3];
                  $3149 = (+__Z5IKabsd($3148));
                  $3150 = $3149 > 5.0000000000000004E-6;
                  if ($3150) {
                   break;
                  }
                  $3151 = ((($evalcond39)) + 8|0);
                  $3152 = +HEAPF64[$3151>>3];
                  $3153 = (+__Z5IKabsd($3152));
                  $3154 = $3153 > 5.0000000000000004E-6;
                  if ($3154) {
                   break;
                  }
                  $3155 = ((($evalcond39)) + 16|0);
                  $3156 = +HEAPF64[$3155>>3];
                  $3157 = (+__Z5IKabsd($3156));
                  $3158 = $3157 > 5.0000000000000004E-6;
                  if ($3158) {
                   break;
                  }
                  $3159 = ((($evalcond39)) + 24|0);
                  $3160 = +HEAPF64[$3159>>3];
                  $3161 = (+__Z5IKabsd($3160));
                  $3162 = $3161 > 5.0000000000000004E-6;
                  if ($3162) {
                   break;
                  }
                  $3163 = ((($evalcond39)) + 32|0);
                  $3164 = +HEAPF64[$3163>>3];
                  $3165 = (+__Z5IKabsd($3164));
                  $3166 = $3165 > 5.0000000000000004E-6;
                  if ($3166) {
                   break;
                  }
                  $3167 = ((($evalcond39)) + 40|0);
                  $3168 = +HEAPF64[$3167>>3];
                  $3169 = (+__Z5IKabsd($3168));
                  $3170 = $3169 > 5.0000000000000004E-6;
                  if ($3170) {
                   break;
                  }
                  $3171 = ((($evalcond39)) + 48|0);
                  $3172 = +HEAPF64[$3171>>3];
                  $3173 = (+__Z5IKabsd($3172));
                  $3174 = $3173 > 5.0000000000000004E-6;
                  if ($3174) {
                   break;
                  }
                  $3175 = ((($evalcond39)) + 56|0);
                  $3176 = +HEAPF64[$3175>>3];
                  $3177 = (+__Z5IKabsd($3176));
                  $3178 = $3177 > 5.0000000000000004E-6;
                  if ($3178) {
                   break;
                  }
                  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos40,6);
                  __THREW__ = 0;
                  $3179 = (invoke_iii(416,($vinfos40|0),0)|0);
                  $3180 = __THREW__; __THREW__ = 0;
                  $3181 = $3180&1;
                  if ($3181) {
                   label = 307;
                   break L1;
                  }
                  $3182 = ((($3179)) + 17|0);
                  HEAP8[$3182>>0] = 1;
                  $3183 = +HEAPF64[$4>>3];
                  __THREW__ = 0;
                  $3184 = (invoke_iii(416,($vinfos40|0),0)|0);
                  $3185 = __THREW__; __THREW__ = 0;
                  $3186 = $3185&1;
                  if ($3186) {
                   label = 307;
                   break L1;
                  }
                  $3187 = ((($3184)) + 8|0);
                  HEAPF64[$3187>>3] = $3183;
                  $3188 = ((($4)) + 536|0);
                  $3189 = HEAP8[$3188>>0]|0;
                  __THREW__ = 0;
                  $3190 = (invoke_iii(416,($vinfos40|0),0)|0);
                  $3191 = __THREW__; __THREW__ = 0;
                  $3192 = $3191&1;
                  if ($3192) {
                   label = 307;
                   break L1;
                  }
                  $3193 = ((($3190)) + 19|0);
                  HEAP8[$3193>>0] = $3189;
                  $3194 = ((($4)) + 536|0);
                  $3195 = ((($3194)) + 1|0);
                  $3196 = HEAP8[$3195>>0]|0;
                  __THREW__ = 0;
                  $3197 = (invoke_iii(416,($vinfos40|0),0)|0);
                  $3198 = __THREW__; __THREW__ = 0;
                  $3199 = $3198&1;
                  if ($3199) {
                   label = 307;
                   break L1;
                  }
                  $3200 = ((($3197)) + 19|0);
                  $3201 = ((($3200)) + 1|0);
                  HEAP8[$3201>>0] = $3196;
                  $3202 = ((($4)) + 538|0);
                  $3203 = HEAP8[$3202>>0]|0;
                  __THREW__ = 0;
                  $3204 = (invoke_iii(416,($vinfos40|0),0)|0);
                  $3205 = __THREW__; __THREW__ = 0;
                  $3206 = $3205&1;
                  if ($3206) {
                   label = 307;
                   break L1;
                  }
                  $3207 = ((($3204)) + 18|0);
                  HEAP8[$3207>>0] = $3203;
                  __THREW__ = 0;
                  $3208 = (invoke_iii(416,($vinfos40|0),1)|0);
                  $3209 = __THREW__; __THREW__ = 0;
                  $3210 = $3209&1;
                  if ($3210) {
                   label = 307;
                   break L1;
                  }
                  $3211 = ((($3208)) + 17|0);
                  HEAP8[$3211>>0] = 1;
                  $3212 = ((($4)) + 40|0);
                  $3213 = +HEAPF64[$3212>>3];
                  __THREW__ = 0;
                  $3214 = (invoke_iii(416,($vinfos40|0),1)|0);
                  $3215 = __THREW__; __THREW__ = 0;
                  $3216 = $3215&1;
                  if ($3216) {
                   label = 307;
                   break L1;
                  }
                  $3217 = ((($3214)) + 8|0);
                  HEAPF64[$3217>>3] = $3213;
                  $3218 = ((($4)) + 539|0);
                  $3219 = HEAP8[$3218>>0]|0;
                  __THREW__ = 0;
                  $3220 = (invoke_iii(416,($vinfos40|0),1)|0);
                  $3221 = __THREW__; __THREW__ = 0;
                  $3222 = $3221&1;
                  if ($3222) {
                   label = 307;
                   break L1;
                  }
                  $3223 = ((($3220)) + 19|0);
                  HEAP8[$3223>>0] = $3219;
                  $3224 = ((($4)) + 539|0);
                  $3225 = ((($3224)) + 1|0);
                  $3226 = HEAP8[$3225>>0]|0;
                  __THREW__ = 0;
                  $3227 = (invoke_iii(416,($vinfos40|0),1)|0);
                  $3228 = __THREW__; __THREW__ = 0;
                  $3229 = $3228&1;
                  if ($3229) {
                   label = 307;
                   break L1;
                  }
                  $3230 = ((($3227)) + 19|0);
                  $3231 = ((($3230)) + 1|0);
                  HEAP8[$3231>>0] = $3226;
                  $3232 = ((($4)) + 541|0);
                  $3233 = HEAP8[$3232>>0]|0;
                  __THREW__ = 0;
                  $3234 = (invoke_iii(416,($vinfos40|0),1)|0);
                  $3235 = __THREW__; __THREW__ = 0;
                  $3236 = $3235&1;
                  if ($3236) {
                   label = 307;
                   break L1;
                  }
                  $3237 = ((($3234)) + 18|0);
                  HEAP8[$3237>>0] = $3233;
                  __THREW__ = 0;
                  $3238 = (invoke_iii(416,($vinfos40|0),2)|0);
                  $3239 = __THREW__; __THREW__ = 0;
                  $3240 = $3239&1;
                  if ($3240) {
                   label = 307;
                   break L1;
                  }
                  $3241 = ((($3238)) + 17|0);
                  HEAP8[$3241>>0] = 1;
                  $3242 = ((($4)) + 80|0);
                  $3243 = +HEAPF64[$3242>>3];
                  __THREW__ = 0;
                  $3244 = (invoke_iii(416,($vinfos40|0),2)|0);
                  $3245 = __THREW__; __THREW__ = 0;
                  $3246 = $3245&1;
                  if ($3246) {
                   label = 307;
                   break L1;
                  }
                  $3247 = ((($3244)) + 8|0);
                  HEAPF64[$3247>>3] = $3243;
                  $3248 = ((($4)) + 542|0);
                  $3249 = HEAP8[$3248>>0]|0;
                  __THREW__ = 0;
                  $3250 = (invoke_iii(416,($vinfos40|0),2)|0);
                  $3251 = __THREW__; __THREW__ = 0;
                  $3252 = $3251&1;
                  if ($3252) {
                   label = 307;
                   break L1;
                  }
                  $3253 = ((($3250)) + 19|0);
                  HEAP8[$3253>>0] = $3249;
                  $3254 = ((($4)) + 542|0);
                  $3255 = ((($3254)) + 1|0);
                  $3256 = HEAP8[$3255>>0]|0;
                  __THREW__ = 0;
                  $3257 = (invoke_iii(416,($vinfos40|0),2)|0);
                  $3258 = __THREW__; __THREW__ = 0;
                  $3259 = $3258&1;
                  if ($3259) {
                   label = 307;
                   break L1;
                  }
                  $3260 = ((($3257)) + 19|0);
                  $3261 = ((($3260)) + 1|0);
                  HEAP8[$3261>>0] = $3256;
                  $3262 = ((($4)) + 544|0);
                  $3263 = HEAP8[$3262>>0]|0;
                  __THREW__ = 0;
                  $3264 = (invoke_iii(416,($vinfos40|0),2)|0);
                  $3265 = __THREW__; __THREW__ = 0;
                  $3266 = $3265&1;
                  if ($3266) {
                   label = 307;
                   break L1;
                  }
                  $3267 = ((($3264)) + 18|0);
                  HEAP8[$3267>>0] = $3263;
                  __THREW__ = 0;
                  $3268 = (invoke_iii(416,($vinfos40|0),3)|0);
                  $3269 = __THREW__; __THREW__ = 0;
                  $3270 = $3269&1;
                  if ($3270) {
                   label = 307;
                   break L1;
                  }
                  $3271 = ((($3268)) + 17|0);
                  HEAP8[$3271>>0] = 1;
                  $3272 = ((($4)) + 120|0);
                  $3273 = +HEAPF64[$3272>>3];
                  __THREW__ = 0;
                  $3274 = (invoke_iii(416,($vinfos40|0),3)|0);
                  $3275 = __THREW__; __THREW__ = 0;
                  $3276 = $3275&1;
                  if ($3276) {
                   label = 307;
                   break L1;
                  }
                  $3277 = ((($3274)) + 8|0);
                  HEAPF64[$3277>>3] = $3273;
                  $3278 = ((($4)) + 545|0);
                  $3279 = HEAP8[$3278>>0]|0;
                  __THREW__ = 0;
                  $3280 = (invoke_iii(416,($vinfos40|0),3)|0);
                  $3281 = __THREW__; __THREW__ = 0;
                  $3282 = $3281&1;
                  if ($3282) {
                   label = 307;
                   break L1;
                  }
                  $3283 = ((($3280)) + 19|0);
                  HEAP8[$3283>>0] = $3279;
                  $3284 = ((($4)) + 545|0);
                  $3285 = ((($3284)) + 1|0);
                  $3286 = HEAP8[$3285>>0]|0;
                  __THREW__ = 0;
                  $3287 = (invoke_iii(416,($vinfos40|0),3)|0);
                  $3288 = __THREW__; __THREW__ = 0;
                  $3289 = $3288&1;
                  if ($3289) {
                   label = 307;
                   break L1;
                  }
                  $3290 = ((($3287)) + 19|0);
                  $3291 = ((($3290)) + 1|0);
                  HEAP8[$3291>>0] = $3286;
                  $3292 = ((($4)) + 547|0);
                  $3293 = HEAP8[$3292>>0]|0;
                  __THREW__ = 0;
                  $3294 = (invoke_iii(416,($vinfos40|0),3)|0);
                  $3295 = __THREW__; __THREW__ = 0;
                  $3296 = $3295&1;
                  if ($3296) {
                   label = 307;
                   break L1;
                  }
                  $3297 = ((($3294)) + 18|0);
                  HEAP8[$3297>>0] = $3293;
                  __THREW__ = 0;
                  $3298 = (invoke_iii(416,($vinfos40|0),4)|0);
                  $3299 = __THREW__; __THREW__ = 0;
                  $3300 = $3299&1;
                  if ($3300) {
                   label = 307;
                   break L1;
                  }
                  $3301 = ((($3298)) + 17|0);
                  HEAP8[$3301>>0] = 1;
                  $3302 = ((($4)) + 160|0);
                  $3303 = +HEAPF64[$3302>>3];
                  __THREW__ = 0;
                  $3304 = (invoke_iii(416,($vinfos40|0),4)|0);
                  $3305 = __THREW__; __THREW__ = 0;
                  $3306 = $3305&1;
                  if ($3306) {
                   label = 307;
                   break L1;
                  }
                  $3307 = ((($3304)) + 8|0);
                  HEAPF64[$3307>>3] = $3303;
                  $3308 = ((($4)) + 548|0);
                  $3309 = HEAP8[$3308>>0]|0;
                  __THREW__ = 0;
                  $3310 = (invoke_iii(416,($vinfos40|0),4)|0);
                  $3311 = __THREW__; __THREW__ = 0;
                  $3312 = $3311&1;
                  if ($3312) {
                   label = 307;
                   break L1;
                  }
                  $3313 = ((($3310)) + 19|0);
                  HEAP8[$3313>>0] = $3309;
                  $3314 = ((($4)) + 548|0);
                  $3315 = ((($3314)) + 1|0);
                  $3316 = HEAP8[$3315>>0]|0;
                  __THREW__ = 0;
                  $3317 = (invoke_iii(416,($vinfos40|0),4)|0);
                  $3318 = __THREW__; __THREW__ = 0;
                  $3319 = $3318&1;
                  if ($3319) {
                   label = 307;
                   break L1;
                  }
                  $3320 = ((($3317)) + 19|0);
                  $3321 = ((($3320)) + 1|0);
                  HEAP8[$3321>>0] = $3316;
                  $3322 = ((($4)) + 550|0);
                  $3323 = HEAP8[$3322>>0]|0;
                  __THREW__ = 0;
                  $3324 = (invoke_iii(416,($vinfos40|0),4)|0);
                  $3325 = __THREW__; __THREW__ = 0;
                  $3326 = $3325&1;
                  if ($3326) {
                   label = 307;
                   break L1;
                  }
                  $3327 = ((($3324)) + 18|0);
                  HEAP8[$3327>>0] = $3323;
                  __THREW__ = 0;
                  $3328 = (invoke_iii(416,($vinfos40|0),5)|0);
                  $3329 = __THREW__; __THREW__ = 0;
                  $3330 = $3329&1;
                  if ($3330) {
                   label = 307;
                   break L1;
                  }
                  $3331 = ((($3328)) + 17|0);
                  HEAP8[$3331>>0] = 1;
                  $3332 = ((($4)) + 200|0);
                  $3333 = +HEAPF64[$3332>>3];
                  __THREW__ = 0;
                  $3334 = (invoke_iii(416,($vinfos40|0),5)|0);
                  $3335 = __THREW__; __THREW__ = 0;
                  $3336 = $3335&1;
                  if ($3336) {
                   label = 307;
                   break L1;
                  }
                  $3337 = ((($3334)) + 8|0);
                  HEAPF64[$3337>>3] = $3333;
                  $3338 = ((($4)) + 551|0);
                  $3339 = HEAP8[$3338>>0]|0;
                  __THREW__ = 0;
                  $3340 = (invoke_iii(416,($vinfos40|0),5)|0);
                  $3341 = __THREW__; __THREW__ = 0;
                  $3342 = $3341&1;
                  if ($3342) {
                   label = 307;
                   break L1;
                  }
                  $3343 = ((($3340)) + 19|0);
                  HEAP8[$3343>>0] = $3339;
                  $3344 = ((($4)) + 551|0);
                  $3345 = ((($3344)) + 1|0);
                  $3346 = HEAP8[$3345>>0]|0;
                  __THREW__ = 0;
                  $3347 = (invoke_iii(416,($vinfos40|0),5)|0);
                  $3348 = __THREW__; __THREW__ = 0;
                  $3349 = $3348&1;
                  if ($3349) {
                   label = 307;
                   break L1;
                  }
                  $3350 = ((($3347)) + 19|0);
                  $3351 = ((($3350)) + 1|0);
                  HEAP8[$3351>>0] = $3346;
                  $3352 = ((($4)) + 553|0);
                  $3353 = HEAP8[$3352>>0]|0;
                  __THREW__ = 0;
                  $3354 = (invoke_iii(416,($vinfos40|0),5)|0);
                  $3355 = __THREW__; __THREW__ = 0;
                  $3356 = $3355&1;
                  if ($3356) {
                   label = 307;
                   break L1;
                  }
                  $3357 = ((($3354)) + 18|0);
                  HEAP8[$3357>>0] = $3353;
                  __THREW__ = 0;
                  invoke_vii(417,($vfree41|0),0);
                  $3358 = __THREW__; __THREW__ = 0;
                  $3359 = $3358&1;
                  if ($3359) {
                   label = 307;
                   break L1;
                  }
                  $3360 = $1;
                  $3361 = HEAP32[$3360>>2]|0;
                  $3362 = ((($3361)) + 8|0);
                  $3363 = HEAP32[$3362>>2]|0;
                  __THREW__ = 0;
                  (invoke_iiii($3363|0,($3360|0),($vinfos40|0),($vfree41|0))|0);
                  $3364 = __THREW__; __THREW__ = 0;
                  $3365 = $3364&1;
                  if ($3365) {
                   label = 308;
                   break L1;
                  }
                  __THREW__ = 0;
                  invoke_vi(371,($vfree41|0));
                  $3366 = __THREW__; __THREW__ = 0;
                  $3367 = $3366&1;
                  if ($3367) {
                   label = 307;
                   break L1;
                  }
                  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos40);
                 }
                } while(0);
                $3368 = $ij537;
                $3369 = (($3368) + 1)|0;
                $ij537 = $3369;
               }
              }
             } while(0);
             $3378 = $bgotonextstatement32;
             $3379 = $3378&1;
             if (!($3379)) {
              break;
             }
             $bgotonextstatement42 = 1;
             $3380 = ((($4)) + 432|0);
             $3381 = +HEAPF64[$3380>>3];
             $3382 = ((($4)) + 168|0);
             $3383 = +HEAPF64[$3382>>3];
             $3384 = -1.0 * $3383;
             $3385 = $3381 + $3384;
             $x201 = $3385;
             $3386 = ((($4)) + 168|0);
             $3387 = +HEAPF64[$3386>>3];
             $3388 = 1.0 * $3387;
             $x202 = $3388;
             $3389 = ((($4)) + 176|0);
             $3390 = +HEAPF64[$3389>>3];
             $3391 = 1.0 * $3390;
             $x203 = $3391;
             $3392 = ((($4)) + 120|0);
             $3393 = +HEAPF64[$3392>>3];
             $3394 = 1.5707963267949001 + $3393;
             $3395 = (+__Z5IKabsd($3394));
             $3396 = 3.14159265358979 + $3395;
             $3397 = (+__Z6IKfmoddd($3396,6.2831853071795898));
             $3398 = -3.14159265358979 + $3397;
             HEAPF64[$evalcond31>>3] = $3398;
             $3399 = $x201;
             $3400 = ((($evalcond31)) + 8|0);
             HEAPF64[$3400>>3] = $3399;
             $3401 = $x201;
             $3402 = ((($evalcond31)) + 16|0);
             HEAPF64[$3402>>3] = $3401;
             $3403 = ((($4)) + 288|0);
             $3404 = +HEAPF64[$3403>>3];
             $3405 = ((($evalcond31)) + 24|0);
             HEAPF64[$3405>>3] = $3404;
             $3406 = ((($4)) + 176|0);
             $3407 = +HEAPF64[$3406>>3];
             $3408 = ((($4)) + 360|0);
             $3409 = +HEAPF64[$3408>>3];
             $3410 = $3407 + $3409;
             $3411 = ((($evalcond31)) + 32|0);
             HEAPF64[$3411>>3] = $3410;
             $3412 = $x203;
             $3413 = -1.0 * $3412;
             $3414 = ((($4)) + 360|0);
             $3415 = +HEAPF64[$3414>>3];
             $3416 = -1.0 * $3415;
             $3417 = $3413 + $3416;
             $3418 = ((($evalcond31)) + 40|0);
             HEAPF64[$3418>>3] = $3417;
             $3419 = ((($4)) + 432|0);
             $3420 = +HEAPF64[$3419>>3];
             $3421 = -1.0 * $3420;
             $3422 = $x203;
             $3423 = $3421 * $3422;
             $3424 = ((($4)) + 360|0);
             $3425 = +HEAPF64[$3424>>3];
             $3426 = -1.0 * $3425;
             $3427 = $x202;
             $3428 = $3426 * $3427;
             $3429 = $3423 + $3428;
             $3430 = ((($evalcond31)) + 48|0);
             HEAPF64[$3430>>3] = $3429;
             $3431 = ((($4)) + 312|0);
             $3432 = +HEAPF64[$3431>>3];
             $3433 = ((($4)) + 176|0);
             $3434 = +HEAPF64[$3433>>3];
             $3435 = $3432 * $3434;
             $3436 = ((($4)) + 384|0);
             $3437 = +HEAPF64[$3436>>3];
             $3438 = -1.0 * $3437;
             $3439 = $x202;
             $3440 = $3438 * $3439;
             $3441 = $3435 + $3440;
             $3442 = ((($evalcond31)) + 56|0);
             HEAPF64[$3442>>3] = $3441;
             $3443 = ((($4)) + 408|0);
             $3444 = +HEAPF64[$3443>>3];
             $3445 = -1.0 * $3444;
             $3446 = $x202;
             $3447 = $3445 * $3446;
             $3448 = ((($4)) + 336|0);
             $3449 = +HEAPF64[$3448>>3];
             $3450 = ((($4)) + 176|0);
             $3451 = +HEAPF64[$3450>>3];
             $3452 = $3449 * $3451;
             $3453 = $3447 + $3452;
             $3454 = ((($evalcond31)) + 64|0);
             HEAPF64[$3454>>3] = $3453;
             $3455 = ((($4)) + 432|0);
             $3456 = +HEAPF64[$3455>>3];
             $3457 = -1.0 * $3456;
             $3458 = $x202;
             $3459 = $3457 * $3458;
             $3460 = 1.0 + $3459;
             $3461 = ((($4)) + 360|0);
             $3462 = +HEAPF64[$3461>>3];
             $3463 = ((($4)) + 176|0);
             $3464 = +HEAPF64[$3463>>3];
             $3465 = $3462 * $3464;
             $3466 = $3460 + $3465;
             $3467 = ((($evalcond31)) + 72|0);
             HEAPF64[$3467>>3] = $3466;
             $3468 = +HEAPF64[$evalcond31>>3];
             $3469 = (+__Z5IKabsd($3468));
             $3470 = $3469 < 9.9999999999999995E-7;
             L1465: do {
              if ($3470) {
               $3471 = ((($evalcond31)) + 8|0);
               $3472 = +HEAPF64[$3471>>3];
               $3473 = (+__Z5IKabsd($3472));
               $3474 = $3473 < 9.9999999999999995E-7;
               if (!($3474)) {
                break;
               }
               $3475 = ((($evalcond31)) + 16|0);
               $3476 = +HEAPF64[$3475>>3];
               $3477 = (+__Z5IKabsd($3476));
               $3478 = $3477 < 9.9999999999999995E-7;
               if (!($3478)) {
                break;
               }
               $3479 = ((($evalcond31)) + 24|0);
               $3480 = +HEAPF64[$3479>>3];
               $3481 = (+__Z5IKabsd($3480));
               $3482 = $3481 < 9.9999999999999995E-7;
               if (!($3482)) {
                break;
               }
               $3483 = ((($evalcond31)) + 32|0);
               $3484 = +HEAPF64[$3483>>3];
               $3485 = (+__Z5IKabsd($3484));
               $3486 = $3485 < 9.9999999999999995E-7;
               if (!($3486)) {
                break;
               }
               $3487 = ((($evalcond31)) + 40|0);
               $3488 = +HEAPF64[$3487>>3];
               $3489 = (+__Z5IKabsd($3488));
               $3490 = $3489 < 9.9999999999999995E-7;
               if (!($3490)) {
                break;
               }
               $3491 = ((($evalcond31)) + 48|0);
               $3492 = +HEAPF64[$3491>>3];
               $3493 = (+__Z5IKabsd($3492));
               $3494 = $3493 < 9.9999999999999995E-7;
               if (!($3494)) {
                break;
               }
               $3495 = ((($evalcond31)) + 56|0);
               $3496 = +HEAPF64[$3495>>3];
               $3497 = (+__Z5IKabsd($3496));
               $3498 = $3497 < 9.9999999999999995E-7;
               if (!($3498)) {
                break;
               }
               $3499 = ((($evalcond31)) + 64|0);
               $3500 = +HEAPF64[$3499>>3];
               $3501 = (+__Z5IKabsd($3500));
               $3502 = $3501 < 9.9999999999999995E-7;
               if (!($3502)) {
                break;
               }
               $3503 = ((($evalcond31)) + 72|0);
               $3504 = +HEAPF64[$3503>>3];
               $3505 = (+__Z5IKabsd($3504));
               $3506 = $3505 < 9.9999999999999995E-7;
               if (!($3506)) {
                break;
               }
               $bgotonextstatement42 = 0;
               ;HEAP8[$j5valid46>>0]=0|0;
               $3507 = ((($4)) + 553|0);
               HEAP8[$3507>>0] = 1;
               $3508 = ((($4)) + 240|0);
               $3509 = +HEAPF64[$3508>>3];
               $3510 = (+__Z5IKabsd($3509));
               $3511 = $3510 < 1.9999999999999999E-6;
               do {
                if ($3511) {
                 $3512 = ((($4)) + 264|0);
                 $3513 = +HEAPF64[$3512>>3];
                 $3514 = (+__Z5IKabsd($3513));
                 $3515 = $3514 < 1.9999999999999999E-6;
                 if (!($3515)) {
                  break;
                 }
                 $3516 = ((($4)) + 240|0);
                 $3517 = +HEAPF64[$3516>>3];
                 $3518 = (+__Z5IKsqrd($3517));
                 $3519 = ((($4)) + 264|0);
                 $3520 = +HEAPF64[$3519>>3];
                 $3521 = (+__Z5IKsqrd($3520));
                 $3522 = $3518 + $3521;
                 $3523 = $3522 - 1.0;
                 $3524 = (+__Z5IKabsd($3523));
                 $3525 = $3524 <= 1.9999999999999999E-6;
                 if ($3525) {
                  break L1465;
                 }
                }
               } while(0);
               $3526 = ((($4)) + 240|0);
               $3527 = +HEAPF64[$3526>>3];
               $3528 = ((($4)) + 264|0);
               $3529 = +HEAPF64[$3528>>3];
               $3530 = (+__Z7IKatan2dd($3527,$3529));
               HEAPF64[$j5array43>>3] = $3530;
               $3531 = +HEAPF64[$j5array43>>3];
               $3532 = (+__Z5IKsind($3531));
               HEAPF64[$sj5array45>>3] = $3532;
               $3533 = +HEAPF64[$j5array43>>3];
               $3534 = (+__Z5IKcosd($3533));
               HEAPF64[$cj5array44>>3] = $3534;
               $3535 = +HEAPF64[$j5array43>>3];
               $3536 = $3535 > 3.14159265358979;
               $3537 = +HEAPF64[$j5array43>>3];
               do {
                if ($3536) {
                 $3538 = $3537 - 6.2831853071795898;
                 HEAPF64[$j5array43>>3] = $3538;
                } else {
                 $3539 = $3537 < -3.14159265358979;
                 if (!($3539)) {
                  break;
                 }
                 $3540 = +HEAPF64[$j5array43>>3];
                 $3541 = $3540 + 6.2831853071795898;
                 HEAPF64[$j5array43>>3] = $3541;
                }
               } while(0);
               HEAP8[$j5valid46>>0] = 1;
               $ij547 = 0;
               while(1) {
                $3542 = $ij547;
                $3543 = ($3542|0)<(1);
                if (!($3543)) {
                 break L1465;
                }
                $3544 = $ij547;
                $3545 = (($j5valid46) + ($3544)|0);
                $3546 = HEAP8[$3545>>0]|0;
                $3547 = $3546&1;
                do {
                 if ($3547) {
                  $3548 = $ij547;
                  $3549 = $3548&255;
                  $3550 = ((($4)) + 551|0);
                  HEAP8[$3550>>0] = $3549;
                  $3551 = ((($4)) + 551|0);
                  $3552 = ((($3551)) + 1|0);
                  HEAP8[$3552>>0] = -1;
                  $3553 = $ij547;
                  $3554 = (($3553) + 1)|0;
                  $iij548 = $3554;
                  L1490: while(1) {
                   $3555 = $iij548;
                   $3556 = ($3555|0)<(1);
                   if (!($3556)) {
                    break;
                   }
                   $3557 = $iij548;
                   $3558 = (($j5valid46) + ($3557)|0);
                   $3559 = HEAP8[$3558>>0]|0;
                   $3560 = $3559&1;
                   do {
                    if ($3560) {
                     $3561 = $ij547;
                     $3562 = (($cj5array44) + ($3561<<3)|0);
                     $3563 = +HEAPF64[$3562>>3];
                     $3564 = $iij548;
                     $3565 = (($cj5array44) + ($3564<<3)|0);
                     $3566 = +HEAPF64[$3565>>3];
                     $3567 = $3563 - $3566;
                     $3568 = (+__Z5IKabsd($3567));
                     $3569 = $3568 < 9.9999999999999995E-7;
                     if (!($3569)) {
                      break;
                     }
                     $3570 = $ij547;
                     $3571 = (($sj5array45) + ($3570<<3)|0);
                     $3572 = +HEAPF64[$3571>>3];
                     $3573 = $iij548;
                     $3574 = (($sj5array45) + ($3573<<3)|0);
                     $3575 = +HEAPF64[$3574>>3];
                     $3576 = $3572 - $3575;
                     $3577 = (+__Z5IKabsd($3576));
                     $3578 = $3577 < 9.9999999999999995E-7;
                     if ($3578) {
                      label = 336;
                      break L1490;
                     }
                    }
                   } while(0);
                   $3585 = $iij548;
                   $3586 = (($3585) + 1)|0;
                   $iij548 = $3586;
                  }
                  if ((label|0) == 336) {
                   label = 0;
                   $3579 = $iij548;
                   $3580 = (($j5valid46) + ($3579)|0);
                   HEAP8[$3580>>0] = 0;
                   $3581 = $iij548;
                   $3582 = $3581&255;
                   $3583 = ((($4)) + 551|0);
                   $3584 = ((($3583)) + 1|0);
                   HEAP8[$3584>>0] = $3582;
                  }
                  $3587 = $ij547;
                  $3588 = (($j5array43) + ($3587<<3)|0);
                  $3589 = +HEAPF64[$3588>>3];
                  $3590 = ((($4)) + 200|0);
                  HEAPF64[$3590>>3] = $3589;
                  $3591 = $ij547;
                  $3592 = (($cj5array44) + ($3591<<3)|0);
                  $3593 = +HEAPF64[$3592>>3];
                  $3594 = ((($4)) + 208|0);
                  HEAPF64[$3594>>3] = $3593;
                  $3595 = $ij547;
                  $3596 = (($sj5array45) + ($3595<<3)|0);
                  $3597 = +HEAPF64[$3596>>3];
                  $3598 = ((($4)) + 216|0);
                  HEAPF64[$3598>>3] = $3597;
                  $3599 = ((($4)) + 200|0);
                  $3600 = +HEAPF64[$3599>>3];
                  $3601 = (+__Z5IKsind($3600));
                  $x204 = $3601;
                  $3602 = ((($4)) + 200|0);
                  $3603 = +HEAPF64[$3602>>3];
                  $3604 = (+__Z5IKcosd($3603));
                  $x205 = $3604;
                  $3605 = ((($4)) + 336|0);
                  $3606 = +HEAPF64[$3605>>3];
                  $3607 = 1.0 * $3606;
                  $x206 = $3607;
                  $3608 = ((($4)) + 312|0);
                  $3609 = +HEAPF64[$3608>>3];
                  $3610 = 1.0 * $3609;
                  $x207 = $3610;
                  $3611 = $x205;
                  $3612 = 1.0 * $3611;
                  $x208 = $3612;
                  $3613 = ((($4)) + 360|0);
                  $3614 = +HEAPF64[$3613>>3];
                  $3615 = $x204;
                  $3616 = $3614 * $3615;
                  $3617 = ((($4)) + 408|0);
                  $3618 = +HEAPF64[$3617>>3];
                  $3619 = $3616 + $3618;
                  HEAPF64[$evalcond49>>3] = $3619;
                  $3620 = ((($4)) + 240|0);
                  $3621 = +HEAPF64[$3620>>3];
                  $3622 = $x204;
                  $3623 = -1.0 * $3622;
                  $3624 = $3621 + $3623;
                  $3625 = ((($evalcond49)) + 8|0);
                  HEAPF64[$3625>>3] = $3624;
                  $3626 = $x208;
                  $3627 = -1.0 * $3626;
                  $3628 = ((($4)) + 264|0);
                  $3629 = +HEAPF64[$3628>>3];
                  $3630 = $3627 + $3629;
                  $3631 = ((($evalcond49)) + 16|0);
                  HEAPF64[$3631>>3] = $3630;
                  $3632 = ((($4)) + 360|0);
                  $3633 = +HEAPF64[$3632>>3];
                  $3634 = -1.0 * $3633;
                  $3635 = $x208;
                  $3636 = $3634 * $3635;
                  $3637 = ((($4)) + 384|0);
                  $3638 = +HEAPF64[$3637>>3];
                  $3639 = $3636 + $3638;
                  $3640 = ((($evalcond49)) + 24|0);
                  HEAPF64[$3640>>3] = $3639;
                  $3641 = $x206;
                  $3642 = -1.0 * $3641;
                  $3643 = ((($4)) + 432|0);
                  $3644 = +HEAPF64[$3643>>3];
                  $3645 = $x204;
                  $3646 = $3644 * $3645;
                  $3647 = $3642 + $3646;
                  $3648 = ((($evalcond49)) + 32|0);
                  HEAPF64[$3648>>3] = $3647;
                  $3649 = ((($4)) + 432|0);
                  $3650 = +HEAPF64[$3649>>3];
                  $3651 = -1.0 * $3650;
                  $3652 = $x208;
                  $3653 = $3651 * $3652;
                  $3654 = $x207;
                  $3655 = -1.0 * $3654;
                  $3656 = $3653 + $3655;
                  $3657 = ((($evalcond49)) + 40|0);
                  HEAPF64[$3657>>3] = $3656;
                  $3658 = ((($4)) + 432|0);
                  $3659 = +HEAPF64[$3658>>3];
                  $3660 = -1.0 * $3659;
                  $3661 = $x206;
                  $3662 = $3660 * $3661;
                  $3663 = ((($4)) + 360|0);
                  $3664 = +HEAPF64[$3663>>3];
                  $3665 = ((($4)) + 408|0);
                  $3666 = +HEAPF64[$3665>>3];
                  $3667 = $3664 * $3666;
                  $3668 = $3662 + $3667;
                  $3669 = $x204;
                  $3670 = $3668 + $3669;
                  $3671 = ((($evalcond49)) + 48|0);
                  HEAPF64[$3671>>3] = $3670;
                  $3672 = ((($4)) + 432|0);
                  $3673 = +HEAPF64[$3672>>3];
                  $3674 = -1.0 * $3673;
                  $3675 = $x207;
                  $3676 = $3674 * $3675;
                  $3677 = $x208;
                  $3678 = -1.0 * $3677;
                  $3679 = $3676 + $3678;
                  $3680 = ((($4)) + 360|0);
                  $3681 = +HEAPF64[$3680>>3];
                  $3682 = ((($4)) + 384|0);
                  $3683 = +HEAPF64[$3682>>3];
                  $3684 = $3681 * $3683;
                  $3685 = $3679 + $3684;
                  $3686 = ((($evalcond49)) + 56|0);
                  HEAPF64[$3686>>3] = $3685;
                  $3687 = +HEAPF64[$evalcond49>>3];
                  $3688 = (+__Z5IKabsd($3687));
                  $3689 = $3688 > 5.0000000000000004E-6;
                  if ($3689) {
                   break;
                  }
                  $3690 = ((($evalcond49)) + 8|0);
                  $3691 = +HEAPF64[$3690>>3];
                  $3692 = (+__Z5IKabsd($3691));
                  $3693 = $3692 > 5.0000000000000004E-6;
                  if ($3693) {
                   break;
                  }
                  $3694 = ((($evalcond49)) + 16|0);
                  $3695 = +HEAPF64[$3694>>3];
                  $3696 = (+__Z5IKabsd($3695));
                  $3697 = $3696 > 5.0000000000000004E-6;
                  if ($3697) {
                   break;
                  }
                  $3698 = ((($evalcond49)) + 24|0);
                  $3699 = +HEAPF64[$3698>>3];
                  $3700 = (+__Z5IKabsd($3699));
                  $3701 = $3700 > 5.0000000000000004E-6;
                  if ($3701) {
                   break;
                  }
                  $3702 = ((($evalcond49)) + 32|0);
                  $3703 = +HEAPF64[$3702>>3];
                  $3704 = (+__Z5IKabsd($3703));
                  $3705 = $3704 > 5.0000000000000004E-6;
                  if ($3705) {
                   break;
                  }
                  $3706 = ((($evalcond49)) + 40|0);
                  $3707 = +HEAPF64[$3706>>3];
                  $3708 = (+__Z5IKabsd($3707));
                  $3709 = $3708 > 5.0000000000000004E-6;
                  if ($3709) {
                   break;
                  }
                  $3710 = ((($evalcond49)) + 48|0);
                  $3711 = +HEAPF64[$3710>>3];
                  $3712 = (+__Z5IKabsd($3711));
                  $3713 = $3712 > 5.0000000000000004E-6;
                  if ($3713) {
                   break;
                  }
                  $3714 = ((($evalcond49)) + 56|0);
                  $3715 = +HEAPF64[$3714>>3];
                  $3716 = (+__Z5IKabsd($3715));
                  $3717 = $3716 > 5.0000000000000004E-6;
                  if ($3717) {
                   break;
                  }
                  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos50,6);
                  __THREW__ = 0;
                  $3718 = (invoke_iii(416,($vinfos50|0),0)|0);
                  $3719 = __THREW__; __THREW__ = 0;
                  $3720 = $3719&1;
                  if ($3720) {
                   label = 381;
                   break L1;
                  }
                  $3721 = ((($3718)) + 17|0);
                  HEAP8[$3721>>0] = 1;
                  $3722 = +HEAPF64[$4>>3];
                  __THREW__ = 0;
                  $3723 = (invoke_iii(416,($vinfos50|0),0)|0);
                  $3724 = __THREW__; __THREW__ = 0;
                  $3725 = $3724&1;
                  if ($3725) {
                   label = 381;
                   break L1;
                  }
                  $3726 = ((($3723)) + 8|0);
                  HEAPF64[$3726>>3] = $3722;
                  $3727 = ((($4)) + 536|0);
                  $3728 = HEAP8[$3727>>0]|0;
                  __THREW__ = 0;
                  $3729 = (invoke_iii(416,($vinfos50|0),0)|0);
                  $3730 = __THREW__; __THREW__ = 0;
                  $3731 = $3730&1;
                  if ($3731) {
                   label = 381;
                   break L1;
                  }
                  $3732 = ((($3729)) + 19|0);
                  HEAP8[$3732>>0] = $3728;
                  $3733 = ((($4)) + 536|0);
                  $3734 = ((($3733)) + 1|0);
                  $3735 = HEAP8[$3734>>0]|0;
                  __THREW__ = 0;
                  $3736 = (invoke_iii(416,($vinfos50|0),0)|0);
                  $3737 = __THREW__; __THREW__ = 0;
                  $3738 = $3737&1;
                  if ($3738) {
                   label = 381;
                   break L1;
                  }
                  $3739 = ((($3736)) + 19|0);
                  $3740 = ((($3739)) + 1|0);
                  HEAP8[$3740>>0] = $3735;
                  $3741 = ((($4)) + 538|0);
                  $3742 = HEAP8[$3741>>0]|0;
                  __THREW__ = 0;
                  $3743 = (invoke_iii(416,($vinfos50|0),0)|0);
                  $3744 = __THREW__; __THREW__ = 0;
                  $3745 = $3744&1;
                  if ($3745) {
                   label = 381;
                   break L1;
                  }
                  $3746 = ((($3743)) + 18|0);
                  HEAP8[$3746>>0] = $3742;
                  __THREW__ = 0;
                  $3747 = (invoke_iii(416,($vinfos50|0),1)|0);
                  $3748 = __THREW__; __THREW__ = 0;
                  $3749 = $3748&1;
                  if ($3749) {
                   label = 381;
                   break L1;
                  }
                  $3750 = ((($3747)) + 17|0);
                  HEAP8[$3750>>0] = 1;
                  $3751 = ((($4)) + 40|0);
                  $3752 = +HEAPF64[$3751>>3];
                  __THREW__ = 0;
                  $3753 = (invoke_iii(416,($vinfos50|0),1)|0);
                  $3754 = __THREW__; __THREW__ = 0;
                  $3755 = $3754&1;
                  if ($3755) {
                   label = 381;
                   break L1;
                  }
                  $3756 = ((($3753)) + 8|0);
                  HEAPF64[$3756>>3] = $3752;
                  $3757 = ((($4)) + 539|0);
                  $3758 = HEAP8[$3757>>0]|0;
                  __THREW__ = 0;
                  $3759 = (invoke_iii(416,($vinfos50|0),1)|0);
                  $3760 = __THREW__; __THREW__ = 0;
                  $3761 = $3760&1;
                  if ($3761) {
                   label = 381;
                   break L1;
                  }
                  $3762 = ((($3759)) + 19|0);
                  HEAP8[$3762>>0] = $3758;
                  $3763 = ((($4)) + 539|0);
                  $3764 = ((($3763)) + 1|0);
                  $3765 = HEAP8[$3764>>0]|0;
                  __THREW__ = 0;
                  $3766 = (invoke_iii(416,($vinfos50|0),1)|0);
                  $3767 = __THREW__; __THREW__ = 0;
                  $3768 = $3767&1;
                  if ($3768) {
                   label = 381;
                   break L1;
                  }
                  $3769 = ((($3766)) + 19|0);
                  $3770 = ((($3769)) + 1|0);
                  HEAP8[$3770>>0] = $3765;
                  $3771 = ((($4)) + 541|0);
                  $3772 = HEAP8[$3771>>0]|0;
                  __THREW__ = 0;
                  $3773 = (invoke_iii(416,($vinfos50|0),1)|0);
                  $3774 = __THREW__; __THREW__ = 0;
                  $3775 = $3774&1;
                  if ($3775) {
                   label = 381;
                   break L1;
                  }
                  $3776 = ((($3773)) + 18|0);
                  HEAP8[$3776>>0] = $3772;
                  __THREW__ = 0;
                  $3777 = (invoke_iii(416,($vinfos50|0),2)|0);
                  $3778 = __THREW__; __THREW__ = 0;
                  $3779 = $3778&1;
                  if ($3779) {
                   label = 381;
                   break L1;
                  }
                  $3780 = ((($3777)) + 17|0);
                  HEAP8[$3780>>0] = 1;
                  $3781 = ((($4)) + 80|0);
                  $3782 = +HEAPF64[$3781>>3];
                  __THREW__ = 0;
                  $3783 = (invoke_iii(416,($vinfos50|0),2)|0);
                  $3784 = __THREW__; __THREW__ = 0;
                  $3785 = $3784&1;
                  if ($3785) {
                   label = 381;
                   break L1;
                  }
                  $3786 = ((($3783)) + 8|0);
                  HEAPF64[$3786>>3] = $3782;
                  $3787 = ((($4)) + 542|0);
                  $3788 = HEAP8[$3787>>0]|0;
                  __THREW__ = 0;
                  $3789 = (invoke_iii(416,($vinfos50|0),2)|0);
                  $3790 = __THREW__; __THREW__ = 0;
                  $3791 = $3790&1;
                  if ($3791) {
                   label = 381;
                   break L1;
                  }
                  $3792 = ((($3789)) + 19|0);
                  HEAP8[$3792>>0] = $3788;
                  $3793 = ((($4)) + 542|0);
                  $3794 = ((($3793)) + 1|0);
                  $3795 = HEAP8[$3794>>0]|0;
                  __THREW__ = 0;
                  $3796 = (invoke_iii(416,($vinfos50|0),2)|0);
                  $3797 = __THREW__; __THREW__ = 0;
                  $3798 = $3797&1;
                  if ($3798) {
                   label = 381;
                   break L1;
                  }
                  $3799 = ((($3796)) + 19|0);
                  $3800 = ((($3799)) + 1|0);
                  HEAP8[$3800>>0] = $3795;
                  $3801 = ((($4)) + 544|0);
                  $3802 = HEAP8[$3801>>0]|0;
                  __THREW__ = 0;
                  $3803 = (invoke_iii(416,($vinfos50|0),2)|0);
                  $3804 = __THREW__; __THREW__ = 0;
                  $3805 = $3804&1;
                  if ($3805) {
                   label = 381;
                   break L1;
                  }
                  $3806 = ((($3803)) + 18|0);
                  HEAP8[$3806>>0] = $3802;
                  __THREW__ = 0;
                  $3807 = (invoke_iii(416,($vinfos50|0),3)|0);
                  $3808 = __THREW__; __THREW__ = 0;
                  $3809 = $3808&1;
                  if ($3809) {
                   label = 381;
                   break L1;
                  }
                  $3810 = ((($3807)) + 17|0);
                  HEAP8[$3810>>0] = 1;
                  $3811 = ((($4)) + 120|0);
                  $3812 = +HEAPF64[$3811>>3];
                  __THREW__ = 0;
                  $3813 = (invoke_iii(416,($vinfos50|0),3)|0);
                  $3814 = __THREW__; __THREW__ = 0;
                  $3815 = $3814&1;
                  if ($3815) {
                   label = 381;
                   break L1;
                  }
                  $3816 = ((($3813)) + 8|0);
                  HEAPF64[$3816>>3] = $3812;
                  $3817 = ((($4)) + 545|0);
                  $3818 = HEAP8[$3817>>0]|0;
                  __THREW__ = 0;
                  $3819 = (invoke_iii(416,($vinfos50|0),3)|0);
                  $3820 = __THREW__; __THREW__ = 0;
                  $3821 = $3820&1;
                  if ($3821) {
                   label = 381;
                   break L1;
                  }
                  $3822 = ((($3819)) + 19|0);
                  HEAP8[$3822>>0] = $3818;
                  $3823 = ((($4)) + 545|0);
                  $3824 = ((($3823)) + 1|0);
                  $3825 = HEAP8[$3824>>0]|0;
                  __THREW__ = 0;
                  $3826 = (invoke_iii(416,($vinfos50|0),3)|0);
                  $3827 = __THREW__; __THREW__ = 0;
                  $3828 = $3827&1;
                  if ($3828) {
                   label = 381;
                   break L1;
                  }
                  $3829 = ((($3826)) + 19|0);
                  $3830 = ((($3829)) + 1|0);
                  HEAP8[$3830>>0] = $3825;
                  $3831 = ((($4)) + 547|0);
                  $3832 = HEAP8[$3831>>0]|0;
                  __THREW__ = 0;
                  $3833 = (invoke_iii(416,($vinfos50|0),3)|0);
                  $3834 = __THREW__; __THREW__ = 0;
                  $3835 = $3834&1;
                  if ($3835) {
                   label = 381;
                   break L1;
                  }
                  $3836 = ((($3833)) + 18|0);
                  HEAP8[$3836>>0] = $3832;
                  __THREW__ = 0;
                  $3837 = (invoke_iii(416,($vinfos50|0),4)|0);
                  $3838 = __THREW__; __THREW__ = 0;
                  $3839 = $3838&1;
                  if ($3839) {
                   label = 381;
                   break L1;
                  }
                  $3840 = ((($3837)) + 17|0);
                  HEAP8[$3840>>0] = 1;
                  $3841 = ((($4)) + 160|0);
                  $3842 = +HEAPF64[$3841>>3];
                  __THREW__ = 0;
                  $3843 = (invoke_iii(416,($vinfos50|0),4)|0);
                  $3844 = __THREW__; __THREW__ = 0;
                  $3845 = $3844&1;
                  if ($3845) {
                   label = 381;
                   break L1;
                  }
                  $3846 = ((($3843)) + 8|0);
                  HEAPF64[$3846>>3] = $3842;
                  $3847 = ((($4)) + 548|0);
                  $3848 = HEAP8[$3847>>0]|0;
                  __THREW__ = 0;
                  $3849 = (invoke_iii(416,($vinfos50|0),4)|0);
                  $3850 = __THREW__; __THREW__ = 0;
                  $3851 = $3850&1;
                  if ($3851) {
                   label = 381;
                   break L1;
                  }
                  $3852 = ((($3849)) + 19|0);
                  HEAP8[$3852>>0] = $3848;
                  $3853 = ((($4)) + 548|0);
                  $3854 = ((($3853)) + 1|0);
                  $3855 = HEAP8[$3854>>0]|0;
                  __THREW__ = 0;
                  $3856 = (invoke_iii(416,($vinfos50|0),4)|0);
                  $3857 = __THREW__; __THREW__ = 0;
                  $3858 = $3857&1;
                  if ($3858) {
                   label = 381;
                   break L1;
                  }
                  $3859 = ((($3856)) + 19|0);
                  $3860 = ((($3859)) + 1|0);
                  HEAP8[$3860>>0] = $3855;
                  $3861 = ((($4)) + 550|0);
                  $3862 = HEAP8[$3861>>0]|0;
                  __THREW__ = 0;
                  $3863 = (invoke_iii(416,($vinfos50|0),4)|0);
                  $3864 = __THREW__; __THREW__ = 0;
                  $3865 = $3864&1;
                  if ($3865) {
                   label = 381;
                   break L1;
                  }
                  $3866 = ((($3863)) + 18|0);
                  HEAP8[$3866>>0] = $3862;
                  __THREW__ = 0;
                  $3867 = (invoke_iii(416,($vinfos50|0),5)|0);
                  $3868 = __THREW__; __THREW__ = 0;
                  $3869 = $3868&1;
                  if ($3869) {
                   label = 381;
                   break L1;
                  }
                  $3870 = ((($3867)) + 17|0);
                  HEAP8[$3870>>0] = 1;
                  $3871 = ((($4)) + 200|0);
                  $3872 = +HEAPF64[$3871>>3];
                  __THREW__ = 0;
                  $3873 = (invoke_iii(416,($vinfos50|0),5)|0);
                  $3874 = __THREW__; __THREW__ = 0;
                  $3875 = $3874&1;
                  if ($3875) {
                   label = 381;
                   break L1;
                  }
                  $3876 = ((($3873)) + 8|0);
                  HEAPF64[$3876>>3] = $3872;
                  $3877 = ((($4)) + 551|0);
                  $3878 = HEAP8[$3877>>0]|0;
                  __THREW__ = 0;
                  $3879 = (invoke_iii(416,($vinfos50|0),5)|0);
                  $3880 = __THREW__; __THREW__ = 0;
                  $3881 = $3880&1;
                  if ($3881) {
                   label = 381;
                   break L1;
                  }
                  $3882 = ((($3879)) + 19|0);
                  HEAP8[$3882>>0] = $3878;
                  $3883 = ((($4)) + 551|0);
                  $3884 = ((($3883)) + 1|0);
                  $3885 = HEAP8[$3884>>0]|0;
                  __THREW__ = 0;
                  $3886 = (invoke_iii(416,($vinfos50|0),5)|0);
                  $3887 = __THREW__; __THREW__ = 0;
                  $3888 = $3887&1;
                  if ($3888) {
                   label = 381;
                   break L1;
                  }
                  $3889 = ((($3886)) + 19|0);
                  $3890 = ((($3889)) + 1|0);
                  HEAP8[$3890>>0] = $3885;
                  $3891 = ((($4)) + 553|0);
                  $3892 = HEAP8[$3891>>0]|0;
                  __THREW__ = 0;
                  $3893 = (invoke_iii(416,($vinfos50|0),5)|0);
                  $3894 = __THREW__; __THREW__ = 0;
                  $3895 = $3894&1;
                  if ($3895) {
                   label = 381;
                   break L1;
                  }
                  $3896 = ((($3893)) + 18|0);
                  HEAP8[$3896>>0] = $3892;
                  __THREW__ = 0;
                  invoke_vii(417,($vfree51|0),0);
                  $3897 = __THREW__; __THREW__ = 0;
                  $3898 = $3897&1;
                  if ($3898) {
                   label = 381;
                   break L1;
                  }
                  $3899 = $1;
                  $3900 = HEAP32[$3899>>2]|0;
                  $3901 = ((($3900)) + 8|0);
                  $3902 = HEAP32[$3901>>2]|0;
                  __THREW__ = 0;
                  (invoke_iiii($3902|0,($3899|0),($vinfos50|0),($vfree51|0))|0);
                  $3903 = __THREW__; __THREW__ = 0;
                  $3904 = $3903&1;
                  if ($3904) {
                   label = 382;
                   break L1;
                  }
                  __THREW__ = 0;
                  invoke_vi(371,($vfree51|0));
                  $3905 = __THREW__; __THREW__ = 0;
                  $3906 = $3905&1;
                  if ($3906) {
                   label = 381;
                   break L1;
                  }
                  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos50);
                 }
                } while(0);
                $3907 = $ij547;
                $3908 = (($3907) + 1)|0;
                $ij547 = $3908;
               }
              }
             } while(0);
             $3917 = $bgotonextstatement42;
             $3918 = $3917&1;
             if (!($3918)) {
              break;
             }
             $bgotonextstatement52 = 1;
             $3919 = ((($4)) + 360|0);
             $3920 = +HEAPF64[$3919>>3];
             $3921 = ((($4)) + 136|0);
             $3922 = +HEAPF64[$3921>>3];
             $3923 = $3920 * $3922;
             $x209 = $3923;
             $3924 = ((($4)) + 336|0);
             $3925 = +HEAPF64[$3924>>3];
             $3926 = ((($4)) + 136|0);
             $3927 = +HEAPF64[$3926>>3];
             $3928 = $3925 * $3927;
             $x210 = $3928;
             $3929 = ((($4)) + 136|0);
             $3930 = +HEAPF64[$3929>>3];
             $3931 = 1.0 * $3930;
             $x211 = $3931;
             $3932 = ((($4)) + 128|0);
             $3933 = +HEAPF64[$3932>>3];
             $3934 = 1.0 * $3933;
             $x212 = $3934;
             $3935 = ((($4)) + 288|0);
             $3936 = +HEAPF64[$3935>>3];
             $3937 = -1.0 * $3936;
             $3938 = $x211;
             $3939 = $3937 * $3938;
             $3940 = ((($4)) + 128|0);
             $3941 = +HEAPF64[$3940>>3];
             $3942 = ((($4)) + 360|0);
             $3943 = +HEAPF64[$3942>>3];
             $3944 = $3941 * $3943;
             $3945 = $3939 + $3944;
             $x213 = $3945;
             $3946 = ((($4)) + 160|0);
             $3947 = +HEAPF64[$3946>>3];
             $3948 = -1.5707963267949001 + $3947;
             $3949 = (+__Z5IKabsd($3948));
             $3950 = 3.14159265358979 + $3949;
             $3951 = (+__Z6IKfmoddd($3950,6.2831853071795898));
             $3952 = -3.14159265358979 + $3951;
             HEAPF64[$evalcond31>>3] = $3952;
             $3953 = ((($4)) + 432|0);
             $3954 = +HEAPF64[$3953>>3];
             $3955 = ((($evalcond31)) + 8|0);
             HEAPF64[$3955>>3] = $3954;
             $3956 = ((($4)) + 288|0);
             $3957 = +HEAPF64[$3956>>3];
             $3958 = $x212;
             $3959 = -1.0 * $3958;
             $3960 = $3957 + $3959;
             $3961 = ((($evalcond31)) + 16|0);
             HEAPF64[$3961>>3] = $3960;
             $3962 = ((($4)) + 360|0);
             $3963 = +HEAPF64[$3962>>3];
             $3964 = $x211;
             $3965 = -1.0 * $3964;
             $3966 = $3963 + $3965;
             $3967 = ((($evalcond31)) + 24|0);
             HEAPF64[$3967>>3] = $3966;
             $3968 = $x213;
             $3969 = ((($evalcond31)) + 32|0);
             HEAPF64[$3969>>3] = $3968;
             $3970 = $x213;
             $3971 = ((($evalcond31)) + 40|0);
             HEAPF64[$3971>>3] = $3970;
             $3972 = $x209;
             $3973 = -1.0 + $3972;
             $3974 = ((($4)) + 128|0);
             $3975 = +HEAPF64[$3974>>3];
             $3976 = ((($4)) + 288|0);
             $3977 = +HEAPF64[$3976>>3];
             $3978 = $3975 * $3977;
             $3979 = $3973 + $3978;
             $3980 = ((($evalcond31)) + 48|0);
             HEAPF64[$3980>>3] = $3979;
             $3981 = $x210;
             $3982 = ((($4)) + 128|0);
             $3983 = +HEAPF64[$3982>>3];
             $3984 = ((($4)) + 264|0);
             $3985 = +HEAPF64[$3984>>3];
             $3986 = $3983 * $3985;
             $3987 = $3981 + $3986;
             $3988 = ((($evalcond31)) + 56|0);
             HEAPF64[$3988>>3] = $3987;
             $3989 = ((($4)) + 312|0);
             $3990 = +HEAPF64[$3989>>3];
             $3991 = ((($4)) + 136|0);
             $3992 = +HEAPF64[$3991>>3];
             $3993 = $3990 * $3992;
             $3994 = ((($4)) + 128|0);
             $3995 = +HEAPF64[$3994>>3];
             $3996 = ((($4)) + 240|0);
             $3997 = +HEAPF64[$3996>>3];
             $3998 = $3995 * $3997;
             $3999 = $3993 + $3998;
             $4000 = ((($evalcond31)) + 64|0);
             HEAPF64[$4000>>3] = $3999;
             $4001 = ((($4)) + 312|0);
             $4002 = +HEAPF64[$4001>>3];
             $4003 = -1.0 * $4002;
             $4004 = $x211;
             $4005 = $4003 * $4004;
             $4006 = ((($4)) + 240|0);
             $4007 = +HEAPF64[$4006>>3];
             $4008 = -1.0 * $4007;
             $4009 = $x212;
             $4010 = $4008 * $4009;
             $4011 = $4005 + $4010;
             $4012 = ((($evalcond31)) + 72|0);
             HEAPF64[$4012>>3] = $4011;
             $4013 = $x210;
             $4014 = -1.0 * $4013;
             $4015 = ((($4)) + 264|0);
             $4016 = +HEAPF64[$4015>>3];
             $4017 = -1.0 * $4016;
             $4018 = $x212;
             $4019 = $4017 * $4018;
             $4020 = $4014 + $4019;
             $4021 = ((($evalcond31)) + 80|0);
             HEAPF64[$4021>>3] = $4020;
             $4022 = ((($4)) + 288|0);
             $4023 = +HEAPF64[$4022>>3];
             $4024 = -1.0 * $4023;
             $4025 = $x212;
             $4026 = $4024 * $4025;
             $4027 = 1.0 + $4026;
             $4028 = $x209;
             $4029 = -1.0 * $4028;
             $4030 = $4027 + $4029;
             $4031 = ((($evalcond31)) + 88|0);
             HEAPF64[$4031>>3] = $4030;
             $4032 = +HEAPF64[$evalcond31>>3];
             $4033 = (+__Z5IKabsd($4032));
             $4034 = $4033 < 9.9999999999999995E-7;
             L1544: do {
              if ($4034) {
               $4035 = ((($evalcond31)) + 8|0);
               $4036 = +HEAPF64[$4035>>3];
               $4037 = (+__Z5IKabsd($4036));
               $4038 = $4037 < 9.9999999999999995E-7;
               if (!($4038)) {
                break;
               }
               $4039 = ((($evalcond31)) + 16|0);
               $4040 = +HEAPF64[$4039>>3];
               $4041 = (+__Z5IKabsd($4040));
               $4042 = $4041 < 9.9999999999999995E-7;
               if (!($4042)) {
                break;
               }
               $4043 = ((($evalcond31)) + 24|0);
               $4044 = +HEAPF64[$4043>>3];
               $4045 = (+__Z5IKabsd($4044));
               $4046 = $4045 < 9.9999999999999995E-7;
               if (!($4046)) {
                break;
               }
               $4047 = ((($evalcond31)) + 32|0);
               $4048 = +HEAPF64[$4047>>3];
               $4049 = (+__Z5IKabsd($4048));
               $4050 = $4049 < 9.9999999999999995E-7;
               if (!($4050)) {
                break;
               }
               $4051 = ((($evalcond31)) + 40|0);
               $4052 = +HEAPF64[$4051>>3];
               $4053 = (+__Z5IKabsd($4052));
               $4054 = $4053 < 9.9999999999999995E-7;
               if (!($4054)) {
                break;
               }
               $4055 = ((($evalcond31)) + 48|0);
               $4056 = +HEAPF64[$4055>>3];
               $4057 = (+__Z5IKabsd($4056));
               $4058 = $4057 < 9.9999999999999995E-7;
               if (!($4058)) {
                break;
               }
               $4059 = ((($evalcond31)) + 56|0);
               $4060 = +HEAPF64[$4059>>3];
               $4061 = (+__Z5IKabsd($4060));
               $4062 = $4061 < 9.9999999999999995E-7;
               if (!($4062)) {
                break;
               }
               $4063 = ((($evalcond31)) + 64|0);
               $4064 = +HEAPF64[$4063>>3];
               $4065 = (+__Z5IKabsd($4064));
               $4066 = $4065 < 9.9999999999999995E-7;
               if (!($4066)) {
                break;
               }
               $4067 = ((($evalcond31)) + 72|0);
               $4068 = +HEAPF64[$4067>>3];
               $4069 = (+__Z5IKabsd($4068));
               $4070 = $4069 < 9.9999999999999995E-7;
               if (!($4070)) {
                break;
               }
               $4071 = ((($evalcond31)) + 80|0);
               $4072 = +HEAPF64[$4071>>3];
               $4073 = (+__Z5IKabsd($4072));
               $4074 = $4073 < 9.9999999999999995E-7;
               if (!($4074)) {
                break;
               }
               $4075 = ((($evalcond31)) + 88|0);
               $4076 = +HEAPF64[$4075>>3];
               $4077 = (+__Z5IKabsd($4076));
               $4078 = $4077 < 9.9999999999999995E-7;
               if (!($4078)) {
                break;
               }
               $bgotonextstatement52 = 0;
               ;HEAP8[$j5valid56>>0]=0|0;
               $4079 = ((($4)) + 553|0);
               HEAP8[$4079>>0] = 1;
               $4080 = ((($4)) + 408|0);
               $4081 = +HEAPF64[$4080>>3];
               $4082 = (+__Z5IKabsd($4081));
               $4083 = $4082 < 1.9999999999999999E-6;
               do {
                if ($4083) {
                 $4084 = ((($4)) + 384|0);
                 $4085 = +HEAPF64[$4084>>3];
                 $4086 = -1.0 * $4085;
                 $4087 = (+__Z5IKabsd($4086));
                 $4088 = $4087 < 1.9999999999999999E-6;
                 if (!($4088)) {
                  break;
                 }
                 $4089 = ((($4)) + 408|0);
                 $4090 = +HEAPF64[$4089>>3];
                 $4091 = (+__Z5IKsqrd($4090));
                 $4092 = ((($4)) + 384|0);
                 $4093 = +HEAPF64[$4092>>3];
                 $4094 = -1.0 * $4093;
                 $4095 = (+__Z5IKsqrd($4094));
                 $4096 = $4091 + $4095;
                 $4097 = $4096 - 1.0;
                 $4098 = (+__Z5IKabsd($4097));
                 $4099 = $4098 <= 1.9999999999999999E-6;
                 if ($4099) {
                  break L1544;
                 }
                }
               } while(0);
               $4100 = ((($4)) + 408|0);
               $4101 = +HEAPF64[$4100>>3];
               $4102 = ((($4)) + 384|0);
               $4103 = +HEAPF64[$4102>>3];
               $4104 = -1.0 * $4103;
               $4105 = (+__Z7IKatan2dd($4101,$4104));
               HEAPF64[$j5array53>>3] = $4105;
               $4106 = +HEAPF64[$j5array53>>3];
               $4107 = (+__Z5IKsind($4106));
               HEAPF64[$sj5array55>>3] = $4107;
               $4108 = +HEAPF64[$j5array53>>3];
               $4109 = (+__Z5IKcosd($4108));
               HEAPF64[$cj5array54>>3] = $4109;
               $4110 = +HEAPF64[$j5array53>>3];
               $4111 = $4110 > 3.14159265358979;
               $4112 = +HEAPF64[$j5array53>>3];
               do {
                if ($4111) {
                 $4113 = $4112 - 6.2831853071795898;
                 HEAPF64[$j5array53>>3] = $4113;
                } else {
                 $4114 = $4112 < -3.14159265358979;
                 if (!($4114)) {
                  break;
                 }
                 $4115 = +HEAPF64[$j5array53>>3];
                 $4116 = $4115 + 6.2831853071795898;
                 HEAPF64[$j5array53>>3] = $4116;
                }
               } while(0);
               HEAP8[$j5valid56>>0] = 1;
               $ij557 = 0;
               while(1) {
                $4117 = $ij557;
                $4118 = ($4117|0)<(1);
                if (!($4118)) {
                 break L1544;
                }
                $4119 = $ij557;
                $4120 = (($j5valid56) + ($4119)|0);
                $4121 = HEAP8[$4120>>0]|0;
                $4122 = $4121&1;
                do {
                 if ($4122) {
                  $4123 = $ij557;
                  $4124 = $4123&255;
                  $4125 = ((($4)) + 551|0);
                  HEAP8[$4125>>0] = $4124;
                  $4126 = ((($4)) + 551|0);
                  $4127 = ((($4126)) + 1|0);
                  HEAP8[$4127>>0] = -1;
                  $4128 = $ij557;
                  $4129 = (($4128) + 1)|0;
                  $iij558 = $4129;
                  L1571: while(1) {
                   $4130 = $iij558;
                   $4131 = ($4130|0)<(1);
                   if (!($4131)) {
                    break;
                   }
                   $4132 = $iij558;
                   $4133 = (($j5valid56) + ($4132)|0);
                   $4134 = HEAP8[$4133>>0]|0;
                   $4135 = $4134&1;
                   do {
                    if ($4135) {
                     $4136 = $ij557;
                     $4137 = (($cj5array54) + ($4136<<3)|0);
                     $4138 = +HEAPF64[$4137>>3];
                     $4139 = $iij558;
                     $4140 = (($cj5array54) + ($4139<<3)|0);
                     $4141 = +HEAPF64[$4140>>3];
                     $4142 = $4138 - $4141;
                     $4143 = (+__Z5IKabsd($4142));
                     $4144 = $4143 < 9.9999999999999995E-7;
                     if (!($4144)) {
                      break;
                     }
                     $4145 = $ij557;
                     $4146 = (($sj5array55) + ($4145<<3)|0);
                     $4147 = +HEAPF64[$4146>>3];
                     $4148 = $iij558;
                     $4149 = (($sj5array55) + ($4148<<3)|0);
                     $4150 = +HEAPF64[$4149>>3];
                     $4151 = $4147 - $4150;
                     $4152 = (+__Z5IKabsd($4151));
                     $4153 = $4152 < 9.9999999999999995E-7;
                     if ($4153) {
                      label = 412;
                      break L1571;
                     }
                    }
                   } while(0);
                   $4160 = $iij558;
                   $4161 = (($4160) + 1)|0;
                   $iij558 = $4161;
                  }
                  if ((label|0) == 412) {
                   label = 0;
                   $4154 = $iij558;
                   $4155 = (($j5valid56) + ($4154)|0);
                   HEAP8[$4155>>0] = 0;
                   $4156 = $iij558;
                   $4157 = $4156&255;
                   $4158 = ((($4)) + 551|0);
                   $4159 = ((($4158)) + 1|0);
                   HEAP8[$4159>>0] = $4157;
                  }
                  $4162 = $ij557;
                  $4163 = (($j5array53) + ($4162<<3)|0);
                  $4164 = +HEAPF64[$4163>>3];
                  $4165 = ((($4)) + 200|0);
                  HEAPF64[$4165>>3] = $4164;
                  $4166 = $ij557;
                  $4167 = (($cj5array54) + ($4166<<3)|0);
                  $4168 = +HEAPF64[$4167>>3];
                  $4169 = ((($4)) + 208|0);
                  HEAPF64[$4169>>3] = $4168;
                  $4170 = $ij557;
                  $4171 = (($sj5array55) + ($4170<<3)|0);
                  $4172 = +HEAPF64[$4171>>3];
                  $4173 = ((($4)) + 216|0);
                  HEAPF64[$4173>>3] = $4172;
                  $4174 = ((($4)) + 200|0);
                  $4175 = +HEAPF64[$4174>>3];
                  $4176 = (+__Z5IKcosd($4175));
                  $x214 = $4176;
                  $4177 = ((($4)) + 200|0);
                  $4178 = +HEAPF64[$4177>>3];
                  $4179 = (+__Z5IKsind($4178));
                  $x215 = $4179;
                  $4180 = ((($4)) + 360|0);
                  $4181 = +HEAPF64[$4180>>3];
                  $4182 = 1.0 * $4181;
                  $x216 = $4182;
                  $4183 = $x215;
                  $4184 = 1.0 * $4183;
                  $x217 = $4184;
                  $4185 = $x214;
                  $4186 = 1.0 * $4185;
                  $x218 = $4186;
                  $4187 = $x214;
                  $4188 = ((($4)) + 384|0);
                  $4189 = +HEAPF64[$4188>>3];
                  $4190 = $4187 + $4189;
                  HEAPF64[$evalcond59>>3] = $4190;
                  $4191 = ((($4)) + 408|0);
                  $4192 = +HEAPF64[$4191>>3];
                  $4193 = $x217;
                  $4194 = -1.0 * $4193;
                  $4195 = $4192 + $4194;
                  $4196 = ((($evalcond59)) + 8|0);
                  HEAPF64[$4196>>3] = $4195;
                  $4197 = ((($4)) + 264|0);
                  $4198 = +HEAPF64[$4197>>3];
                  $4199 = ((($4)) + 360|0);
                  $4200 = +HEAPF64[$4199>>3];
                  $4201 = $x214;
                  $4202 = $4200 * $4201;
                  $4203 = $4198 + $4202;
                  $4204 = ((($evalcond59)) + 16|0);
                  HEAPF64[$4204>>3] = $4203;
                  $4205 = ((($4)) + 240|0);
                  $4206 = +HEAPF64[$4205>>3];
                  $4207 = ((($4)) + 360|0);
                  $4208 = +HEAPF64[$4207>>3];
                  $4209 = $x215;
                  $4210 = $4208 * $4209;
                  $4211 = $4206 + $4210;
                  $4212 = ((($evalcond59)) + 24|0);
                  HEAPF64[$4212>>3] = $4211;
                  $4213 = ((($4)) + 288|0);
                  $4214 = +HEAPF64[$4213>>3];
                  $4215 = -1.0 * $4214;
                  $4216 = $x218;
                  $4217 = $4215 * $4216;
                  $4218 = ((($4)) + 336|0);
                  $4219 = +HEAPF64[$4218>>3];
                  $4220 = $4217 + $4219;
                  $4221 = ((($evalcond59)) + 32|0);
                  HEAPF64[$4221>>3] = $4220;
                  $4222 = ((($4)) + 288|0);
                  $4223 = +HEAPF64[$4222>>3];
                  $4224 = -1.0 * $4223;
                  $4225 = $x217;
                  $4226 = $4224 * $4225;
                  $4227 = ((($4)) + 312|0);
                  $4228 = +HEAPF64[$4227>>3];
                  $4229 = $4226 + $4228;
                  $4230 = ((($evalcond59)) + 40|0);
                  HEAPF64[$4230>>3] = $4229;
                  $4231 = ((($4)) + 288|0);
                  $4232 = +HEAPF64[$4231>>3];
                  $4233 = ((($4)) + 312|0);
                  $4234 = +HEAPF64[$4233>>3];
                  $4235 = $4232 * $4234;
                  $4236 = $x217;
                  $4237 = -1.0 * $4236;
                  $4238 = $4235 + $4237;
                  $4239 = ((($4)) + 240|0);
                  $4240 = +HEAPF64[$4239>>3];
                  $4241 = -1.0 * $4240;
                  $4242 = $x216;
                  $4243 = $4241 * $4242;
                  $4244 = $4238 + $4243;
                  $4245 = ((($evalcond59)) + 48|0);
                  HEAPF64[$4245>>3] = $4244;
                  $4246 = ((($4)) + 264|0);
                  $4247 = +HEAPF64[$4246>>3];
                  $4248 = -1.0 * $4247;
                  $4249 = $x216;
                  $4250 = $4248 * $4249;
                  $4251 = ((($4)) + 288|0);
                  $4252 = +HEAPF64[$4251>>3];
                  $4253 = ((($4)) + 336|0);
                  $4254 = +HEAPF64[$4253>>3];
                  $4255 = $4252 * $4254;
                  $4256 = $4250 + $4255;
                  $4257 = $x218;
                  $4258 = -1.0 * $4257;
                  $4259 = $4256 + $4258;
                  $4260 = ((($evalcond59)) + 56|0);
                  HEAPF64[$4260>>3] = $4259;
                  $4261 = +HEAPF64[$evalcond59>>3];
                  $4262 = (+__Z5IKabsd($4261));
                  $4263 = $4262 > 5.0000000000000004E-6;
                  if ($4263) {
                   break;
                  }
                  $4264 = ((($evalcond59)) + 8|0);
                  $4265 = +HEAPF64[$4264>>3];
                  $4266 = (+__Z5IKabsd($4265));
                  $4267 = $4266 > 5.0000000000000004E-6;
                  if ($4267) {
                   break;
                  }
                  $4268 = ((($evalcond59)) + 16|0);
                  $4269 = +HEAPF64[$4268>>3];
                  $4270 = (+__Z5IKabsd($4269));
                  $4271 = $4270 > 5.0000000000000004E-6;
                  if ($4271) {
                   break;
                  }
                  $4272 = ((($evalcond59)) + 24|0);
                  $4273 = +HEAPF64[$4272>>3];
                  $4274 = (+__Z5IKabsd($4273));
                  $4275 = $4274 > 5.0000000000000004E-6;
                  if ($4275) {
                   break;
                  }
                  $4276 = ((($evalcond59)) + 32|0);
                  $4277 = +HEAPF64[$4276>>3];
                  $4278 = (+__Z5IKabsd($4277));
                  $4279 = $4278 > 5.0000000000000004E-6;
                  if ($4279) {
                   break;
                  }
                  $4280 = ((($evalcond59)) + 40|0);
                  $4281 = +HEAPF64[$4280>>3];
                  $4282 = (+__Z5IKabsd($4281));
                  $4283 = $4282 > 5.0000000000000004E-6;
                  if ($4283) {
                   break;
                  }
                  $4284 = ((($evalcond59)) + 48|0);
                  $4285 = +HEAPF64[$4284>>3];
                  $4286 = (+__Z5IKabsd($4285));
                  $4287 = $4286 > 5.0000000000000004E-6;
                  if ($4287) {
                   break;
                  }
                  $4288 = ((($evalcond59)) + 56|0);
                  $4289 = +HEAPF64[$4288>>3];
                  $4290 = (+__Z5IKabsd($4289));
                  $4291 = $4290 > 5.0000000000000004E-6;
                  if ($4291) {
                   break;
                  }
                  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos60,6);
                  __THREW__ = 0;
                  $4292 = (invoke_iii(416,($vinfos60|0),0)|0);
                  $4293 = __THREW__; __THREW__ = 0;
                  $4294 = $4293&1;
                  if ($4294) {
                   label = 457;
                   break L1;
                  }
                  $4295 = ((($4292)) + 17|0);
                  HEAP8[$4295>>0] = 1;
                  $4296 = +HEAPF64[$4>>3];
                  __THREW__ = 0;
                  $4297 = (invoke_iii(416,($vinfos60|0),0)|0);
                  $4298 = __THREW__; __THREW__ = 0;
                  $4299 = $4298&1;
                  if ($4299) {
                   label = 457;
                   break L1;
                  }
                  $4300 = ((($4297)) + 8|0);
                  HEAPF64[$4300>>3] = $4296;
                  $4301 = ((($4)) + 536|0);
                  $4302 = HEAP8[$4301>>0]|0;
                  __THREW__ = 0;
                  $4303 = (invoke_iii(416,($vinfos60|0),0)|0);
                  $4304 = __THREW__; __THREW__ = 0;
                  $4305 = $4304&1;
                  if ($4305) {
                   label = 457;
                   break L1;
                  }
                  $4306 = ((($4303)) + 19|0);
                  HEAP8[$4306>>0] = $4302;
                  $4307 = ((($4)) + 536|0);
                  $4308 = ((($4307)) + 1|0);
                  $4309 = HEAP8[$4308>>0]|0;
                  __THREW__ = 0;
                  $4310 = (invoke_iii(416,($vinfos60|0),0)|0);
                  $4311 = __THREW__; __THREW__ = 0;
                  $4312 = $4311&1;
                  if ($4312) {
                   label = 457;
                   break L1;
                  }
                  $4313 = ((($4310)) + 19|0);
                  $4314 = ((($4313)) + 1|0);
                  HEAP8[$4314>>0] = $4309;
                  $4315 = ((($4)) + 538|0);
                  $4316 = HEAP8[$4315>>0]|0;
                  __THREW__ = 0;
                  $4317 = (invoke_iii(416,($vinfos60|0),0)|0);
                  $4318 = __THREW__; __THREW__ = 0;
                  $4319 = $4318&1;
                  if ($4319) {
                   label = 457;
                   break L1;
                  }
                  $4320 = ((($4317)) + 18|0);
                  HEAP8[$4320>>0] = $4316;
                  __THREW__ = 0;
                  $4321 = (invoke_iii(416,($vinfos60|0),1)|0);
                  $4322 = __THREW__; __THREW__ = 0;
                  $4323 = $4322&1;
                  if ($4323) {
                   label = 457;
                   break L1;
                  }
                  $4324 = ((($4321)) + 17|0);
                  HEAP8[$4324>>0] = 1;
                  $4325 = ((($4)) + 40|0);
                  $4326 = +HEAPF64[$4325>>3];
                  __THREW__ = 0;
                  $4327 = (invoke_iii(416,($vinfos60|0),1)|0);
                  $4328 = __THREW__; __THREW__ = 0;
                  $4329 = $4328&1;
                  if ($4329) {
                   label = 457;
                   break L1;
                  }
                  $4330 = ((($4327)) + 8|0);
                  HEAPF64[$4330>>3] = $4326;
                  $4331 = ((($4)) + 539|0);
                  $4332 = HEAP8[$4331>>0]|0;
                  __THREW__ = 0;
                  $4333 = (invoke_iii(416,($vinfos60|0),1)|0);
                  $4334 = __THREW__; __THREW__ = 0;
                  $4335 = $4334&1;
                  if ($4335) {
                   label = 457;
                   break L1;
                  }
                  $4336 = ((($4333)) + 19|0);
                  HEAP8[$4336>>0] = $4332;
                  $4337 = ((($4)) + 539|0);
                  $4338 = ((($4337)) + 1|0);
                  $4339 = HEAP8[$4338>>0]|0;
                  __THREW__ = 0;
                  $4340 = (invoke_iii(416,($vinfos60|0),1)|0);
                  $4341 = __THREW__; __THREW__ = 0;
                  $4342 = $4341&1;
                  if ($4342) {
                   label = 457;
                   break L1;
                  }
                  $4343 = ((($4340)) + 19|0);
                  $4344 = ((($4343)) + 1|0);
                  HEAP8[$4344>>0] = $4339;
                  $4345 = ((($4)) + 541|0);
                  $4346 = HEAP8[$4345>>0]|0;
                  __THREW__ = 0;
                  $4347 = (invoke_iii(416,($vinfos60|0),1)|0);
                  $4348 = __THREW__; __THREW__ = 0;
                  $4349 = $4348&1;
                  if ($4349) {
                   label = 457;
                   break L1;
                  }
                  $4350 = ((($4347)) + 18|0);
                  HEAP8[$4350>>0] = $4346;
                  __THREW__ = 0;
                  $4351 = (invoke_iii(416,($vinfos60|0),2)|0);
                  $4352 = __THREW__; __THREW__ = 0;
                  $4353 = $4352&1;
                  if ($4353) {
                   label = 457;
                   break L1;
                  }
                  $4354 = ((($4351)) + 17|0);
                  HEAP8[$4354>>0] = 1;
                  $4355 = ((($4)) + 80|0);
                  $4356 = +HEAPF64[$4355>>3];
                  __THREW__ = 0;
                  $4357 = (invoke_iii(416,($vinfos60|0),2)|0);
                  $4358 = __THREW__; __THREW__ = 0;
                  $4359 = $4358&1;
                  if ($4359) {
                   label = 457;
                   break L1;
                  }
                  $4360 = ((($4357)) + 8|0);
                  HEAPF64[$4360>>3] = $4356;
                  $4361 = ((($4)) + 542|0);
                  $4362 = HEAP8[$4361>>0]|0;
                  __THREW__ = 0;
                  $4363 = (invoke_iii(416,($vinfos60|0),2)|0);
                  $4364 = __THREW__; __THREW__ = 0;
                  $4365 = $4364&1;
                  if ($4365) {
                   label = 457;
                   break L1;
                  }
                  $4366 = ((($4363)) + 19|0);
                  HEAP8[$4366>>0] = $4362;
                  $4367 = ((($4)) + 542|0);
                  $4368 = ((($4367)) + 1|0);
                  $4369 = HEAP8[$4368>>0]|0;
                  __THREW__ = 0;
                  $4370 = (invoke_iii(416,($vinfos60|0),2)|0);
                  $4371 = __THREW__; __THREW__ = 0;
                  $4372 = $4371&1;
                  if ($4372) {
                   label = 457;
                   break L1;
                  }
                  $4373 = ((($4370)) + 19|0);
                  $4374 = ((($4373)) + 1|0);
                  HEAP8[$4374>>0] = $4369;
                  $4375 = ((($4)) + 544|0);
                  $4376 = HEAP8[$4375>>0]|0;
                  __THREW__ = 0;
                  $4377 = (invoke_iii(416,($vinfos60|0),2)|0);
                  $4378 = __THREW__; __THREW__ = 0;
                  $4379 = $4378&1;
                  if ($4379) {
                   label = 457;
                   break L1;
                  }
                  $4380 = ((($4377)) + 18|0);
                  HEAP8[$4380>>0] = $4376;
                  __THREW__ = 0;
                  $4381 = (invoke_iii(416,($vinfos60|0),3)|0);
                  $4382 = __THREW__; __THREW__ = 0;
                  $4383 = $4382&1;
                  if ($4383) {
                   label = 457;
                   break L1;
                  }
                  $4384 = ((($4381)) + 17|0);
                  HEAP8[$4384>>0] = 1;
                  $4385 = ((($4)) + 120|0);
                  $4386 = +HEAPF64[$4385>>3];
                  __THREW__ = 0;
                  $4387 = (invoke_iii(416,($vinfos60|0),3)|0);
                  $4388 = __THREW__; __THREW__ = 0;
                  $4389 = $4388&1;
                  if ($4389) {
                   label = 457;
                   break L1;
                  }
                  $4390 = ((($4387)) + 8|0);
                  HEAPF64[$4390>>3] = $4386;
                  $4391 = ((($4)) + 545|0);
                  $4392 = HEAP8[$4391>>0]|0;
                  __THREW__ = 0;
                  $4393 = (invoke_iii(416,($vinfos60|0),3)|0);
                  $4394 = __THREW__; __THREW__ = 0;
                  $4395 = $4394&1;
                  if ($4395) {
                   label = 457;
                   break L1;
                  }
                  $4396 = ((($4393)) + 19|0);
                  HEAP8[$4396>>0] = $4392;
                  $4397 = ((($4)) + 545|0);
                  $4398 = ((($4397)) + 1|0);
                  $4399 = HEAP8[$4398>>0]|0;
                  __THREW__ = 0;
                  $4400 = (invoke_iii(416,($vinfos60|0),3)|0);
                  $4401 = __THREW__; __THREW__ = 0;
                  $4402 = $4401&1;
                  if ($4402) {
                   label = 457;
                   break L1;
                  }
                  $4403 = ((($4400)) + 19|0);
                  $4404 = ((($4403)) + 1|0);
                  HEAP8[$4404>>0] = $4399;
                  $4405 = ((($4)) + 547|0);
                  $4406 = HEAP8[$4405>>0]|0;
                  __THREW__ = 0;
                  $4407 = (invoke_iii(416,($vinfos60|0),3)|0);
                  $4408 = __THREW__; __THREW__ = 0;
                  $4409 = $4408&1;
                  if ($4409) {
                   label = 457;
                   break L1;
                  }
                  $4410 = ((($4407)) + 18|0);
                  HEAP8[$4410>>0] = $4406;
                  __THREW__ = 0;
                  $4411 = (invoke_iii(416,($vinfos60|0),4)|0);
                  $4412 = __THREW__; __THREW__ = 0;
                  $4413 = $4412&1;
                  if ($4413) {
                   label = 457;
                   break L1;
                  }
                  $4414 = ((($4411)) + 17|0);
                  HEAP8[$4414>>0] = 1;
                  $4415 = ((($4)) + 160|0);
                  $4416 = +HEAPF64[$4415>>3];
                  __THREW__ = 0;
                  $4417 = (invoke_iii(416,($vinfos60|0),4)|0);
                  $4418 = __THREW__; __THREW__ = 0;
                  $4419 = $4418&1;
                  if ($4419) {
                   label = 457;
                   break L1;
                  }
                  $4420 = ((($4417)) + 8|0);
                  HEAPF64[$4420>>3] = $4416;
                  $4421 = ((($4)) + 548|0);
                  $4422 = HEAP8[$4421>>0]|0;
                  __THREW__ = 0;
                  $4423 = (invoke_iii(416,($vinfos60|0),4)|0);
                  $4424 = __THREW__; __THREW__ = 0;
                  $4425 = $4424&1;
                  if ($4425) {
                   label = 457;
                   break L1;
                  }
                  $4426 = ((($4423)) + 19|0);
                  HEAP8[$4426>>0] = $4422;
                  $4427 = ((($4)) + 548|0);
                  $4428 = ((($4427)) + 1|0);
                  $4429 = HEAP8[$4428>>0]|0;
                  __THREW__ = 0;
                  $4430 = (invoke_iii(416,($vinfos60|0),4)|0);
                  $4431 = __THREW__; __THREW__ = 0;
                  $4432 = $4431&1;
                  if ($4432) {
                   label = 457;
                   break L1;
                  }
                  $4433 = ((($4430)) + 19|0);
                  $4434 = ((($4433)) + 1|0);
                  HEAP8[$4434>>0] = $4429;
                  $4435 = ((($4)) + 550|0);
                  $4436 = HEAP8[$4435>>0]|0;
                  __THREW__ = 0;
                  $4437 = (invoke_iii(416,($vinfos60|0),4)|0);
                  $4438 = __THREW__; __THREW__ = 0;
                  $4439 = $4438&1;
                  if ($4439) {
                   label = 457;
                   break L1;
                  }
                  $4440 = ((($4437)) + 18|0);
                  HEAP8[$4440>>0] = $4436;
                  __THREW__ = 0;
                  $4441 = (invoke_iii(416,($vinfos60|0),5)|0);
                  $4442 = __THREW__; __THREW__ = 0;
                  $4443 = $4442&1;
                  if ($4443) {
                   label = 457;
                   break L1;
                  }
                  $4444 = ((($4441)) + 17|0);
                  HEAP8[$4444>>0] = 1;
                  $4445 = ((($4)) + 200|0);
                  $4446 = +HEAPF64[$4445>>3];
                  __THREW__ = 0;
                  $4447 = (invoke_iii(416,($vinfos60|0),5)|0);
                  $4448 = __THREW__; __THREW__ = 0;
                  $4449 = $4448&1;
                  if ($4449) {
                   label = 457;
                   break L1;
                  }
                  $4450 = ((($4447)) + 8|0);
                  HEAPF64[$4450>>3] = $4446;
                  $4451 = ((($4)) + 551|0);
                  $4452 = HEAP8[$4451>>0]|0;
                  __THREW__ = 0;
                  $4453 = (invoke_iii(416,($vinfos60|0),5)|0);
                  $4454 = __THREW__; __THREW__ = 0;
                  $4455 = $4454&1;
                  if ($4455) {
                   label = 457;
                   break L1;
                  }
                  $4456 = ((($4453)) + 19|0);
                  HEAP8[$4456>>0] = $4452;
                  $4457 = ((($4)) + 551|0);
                  $4458 = ((($4457)) + 1|0);
                  $4459 = HEAP8[$4458>>0]|0;
                  __THREW__ = 0;
                  $4460 = (invoke_iii(416,($vinfos60|0),5)|0);
                  $4461 = __THREW__; __THREW__ = 0;
                  $4462 = $4461&1;
                  if ($4462) {
                   label = 457;
                   break L1;
                  }
                  $4463 = ((($4460)) + 19|0);
                  $4464 = ((($4463)) + 1|0);
                  HEAP8[$4464>>0] = $4459;
                  $4465 = ((($4)) + 553|0);
                  $4466 = HEAP8[$4465>>0]|0;
                  __THREW__ = 0;
                  $4467 = (invoke_iii(416,($vinfos60|0),5)|0);
                  $4468 = __THREW__; __THREW__ = 0;
                  $4469 = $4468&1;
                  if ($4469) {
                   label = 457;
                   break L1;
                  }
                  $4470 = ((($4467)) + 18|0);
                  HEAP8[$4470>>0] = $4466;
                  __THREW__ = 0;
                  invoke_vii(417,($vfree61|0),0);
                  $4471 = __THREW__; __THREW__ = 0;
                  $4472 = $4471&1;
                  if ($4472) {
                   label = 457;
                   break L1;
                  }
                  $4473 = $1;
                  $4474 = HEAP32[$4473>>2]|0;
                  $4475 = ((($4474)) + 8|0);
                  $4476 = HEAP32[$4475>>2]|0;
                  __THREW__ = 0;
                  (invoke_iiii($4476|0,($4473|0),($vinfos60|0),($vfree61|0))|0);
                  $4477 = __THREW__; __THREW__ = 0;
                  $4478 = $4477&1;
                  if ($4478) {
                   label = 458;
                   break L1;
                  }
                  __THREW__ = 0;
                  invoke_vi(371,($vfree61|0));
                  $4479 = __THREW__; __THREW__ = 0;
                  $4480 = $4479&1;
                  if ($4480) {
                   label = 457;
                   break L1;
                  }
                  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos60);
                 }
                } while(0);
                $4481 = $ij557;
                $4482 = (($4481) + 1)|0;
                $ij557 = $4482;
               }
              }
             } while(0);
             $4491 = $bgotonextstatement52;
             $4492 = $4491&1;
             if (!($4492)) {
              break;
             }
             $bgotonextstatement62 = 1;
             $4493 = ((($4)) + 288|0);
             $4494 = +HEAPF64[$4493>>3];
             $4495 = -1.0 * $4494;
             $4496 = ((($4)) + 136|0);
             $4497 = +HEAPF64[$4496>>3];
             $4498 = $4495 * $4497;
             $4499 = ((($4)) + 128|0);
             $4500 = +HEAPF64[$4499>>3];
             $4501 = ((($4)) + 360|0);
             $4502 = +HEAPF64[$4501>>3];
             $4503 = $4500 * $4502;
             $4504 = $4498 + $4503;
             $x219 = $4504;
             $4505 = ((($4)) + 312|0);
             $4506 = +HEAPF64[$4505>>3];
             $4507 = ((($4)) + 136|0);
             $4508 = +HEAPF64[$4507>>3];
             $4509 = $4506 * $4508;
             $4510 = ((($4)) + 128|0);
             $4511 = +HEAPF64[$4510>>3];
             $4512 = ((($4)) + 240|0);
             $4513 = +HEAPF64[$4512>>3];
             $4514 = $4511 * $4513;
             $4515 = $4509 + $4514;
             $x220 = $4515;
             $4516 = ((($4)) + 336|0);
             $4517 = +HEAPF64[$4516>>3];
             $4518 = ((($4)) + 136|0);
             $4519 = +HEAPF64[$4518>>3];
             $4520 = $4517 * $4519;
             $4521 = ((($4)) + 128|0);
             $4522 = +HEAPF64[$4521>>3];
             $4523 = ((($4)) + 264|0);
             $4524 = +HEAPF64[$4523>>3];
             $4525 = $4522 * $4524;
             $4526 = $4520 + $4525;
             $x221 = $4526;
             $4527 = ((($4)) + 360|0);
             $4528 = +HEAPF64[$4527>>3];
             $4529 = ((($4)) + 136|0);
             $4530 = +HEAPF64[$4529>>3];
             $4531 = $4528 * $4530;
             $4532 = 1.0 + $4531;
             $4533 = ((($4)) + 128|0);
             $4534 = +HEAPF64[$4533>>3];
             $4535 = ((($4)) + 288|0);
             $4536 = +HEAPF64[$4535>>3];
             $4537 = $4534 * $4536;
             $4538 = $4532 + $4537;
             $x222 = $4538;
             $4539 = ((($4)) + 160|0);
             $4540 = +HEAPF64[$4539>>3];
             $4541 = 1.5707963267949001 + $4540;
             $4542 = (+__Z5IKabsd($4541));
             $4543 = 3.14159265358979 + $4542;
             $4544 = (+__Z6IKfmoddd($4543,6.2831853071795898));
             $4545 = -3.14159265358979 + $4544;
             HEAPF64[$evalcond31>>3] = $4545;
             $4546 = ((($4)) + 432|0);
             $4547 = +HEAPF64[$4546>>3];
             $4548 = ((($evalcond31)) + 8|0);
             HEAPF64[$4548>>3] = $4547;
             $4549 = ((($4)) + 128|0);
             $4550 = +HEAPF64[$4549>>3];
             $4551 = ((($4)) + 288|0);
             $4552 = +HEAPF64[$4551>>3];
             $4553 = $4550 + $4552;
             $4554 = ((($evalcond31)) + 16|0);
             HEAPF64[$4554>>3] = $4553;
             $4555 = ((($4)) + 136|0);
             $4556 = +HEAPF64[$4555>>3];
             $4557 = ((($4)) + 360|0);
             $4558 = +HEAPF64[$4557>>3];
             $4559 = $4556 + $4558;
             $4560 = ((($evalcond31)) + 24|0);
             HEAPF64[$4560>>3] = $4559;
             $4561 = $x219;
             $4562 = ((($evalcond31)) + 32|0);
             HEAPF64[$4562>>3] = $4561;
             $4563 = $x219;
             $4564 = ((($evalcond31)) + 40|0);
             HEAPF64[$4564>>3] = $4563;
             $4565 = $x222;
             $4566 = ((($evalcond31)) + 48|0);
             HEAPF64[$4566>>3] = $4565;
             $4567 = $x221;
             $4568 = ((($evalcond31)) + 56|0);
             HEAPF64[$4568>>3] = $4567;
             $4569 = $x220;
             $4570 = ((($evalcond31)) + 64|0);
             HEAPF64[$4570>>3] = $4569;
             $4571 = $x220;
             $4572 = ((($evalcond31)) + 72|0);
             HEAPF64[$4572>>3] = $4571;
             $4573 = $x221;
             $4574 = ((($evalcond31)) + 80|0);
             HEAPF64[$4574>>3] = $4573;
             $4575 = $x222;
             $4576 = ((($evalcond31)) + 88|0);
             HEAPF64[$4576>>3] = $4575;
             $4577 = +HEAPF64[$evalcond31>>3];
             $4578 = (+__Z5IKabsd($4577));
             $4579 = $4578 < 9.9999999999999995E-7;
             L1625: do {
              if ($4579) {
               $4580 = ((($evalcond31)) + 8|0);
               $4581 = +HEAPF64[$4580>>3];
               $4582 = (+__Z5IKabsd($4581));
               $4583 = $4582 < 9.9999999999999995E-7;
               if (!($4583)) {
                break;
               }
               $4584 = ((($evalcond31)) + 16|0);
               $4585 = +HEAPF64[$4584>>3];
               $4586 = (+__Z5IKabsd($4585));
               $4587 = $4586 < 9.9999999999999995E-7;
               if (!($4587)) {
                break;
               }
               $4588 = ((($evalcond31)) + 24|0);
               $4589 = +HEAPF64[$4588>>3];
               $4590 = (+__Z5IKabsd($4589));
               $4591 = $4590 < 9.9999999999999995E-7;
               if (!($4591)) {
                break;
               }
               $4592 = ((($evalcond31)) + 32|0);
               $4593 = +HEAPF64[$4592>>3];
               $4594 = (+__Z5IKabsd($4593));
               $4595 = $4594 < 9.9999999999999995E-7;
               if (!($4595)) {
                break;
               }
               $4596 = ((($evalcond31)) + 40|0);
               $4597 = +HEAPF64[$4596>>3];
               $4598 = (+__Z5IKabsd($4597));
               $4599 = $4598 < 9.9999999999999995E-7;
               if (!($4599)) {
                break;
               }
               $4600 = ((($evalcond31)) + 48|0);
               $4601 = +HEAPF64[$4600>>3];
               $4602 = (+__Z5IKabsd($4601));
               $4603 = $4602 < 9.9999999999999995E-7;
               if (!($4603)) {
                break;
               }
               $4604 = ((($evalcond31)) + 56|0);
               $4605 = +HEAPF64[$4604>>3];
               $4606 = (+__Z5IKabsd($4605));
               $4607 = $4606 < 9.9999999999999995E-7;
               if (!($4607)) {
                break;
               }
               $4608 = ((($evalcond31)) + 64|0);
               $4609 = +HEAPF64[$4608>>3];
               $4610 = (+__Z5IKabsd($4609));
               $4611 = $4610 < 9.9999999999999995E-7;
               if (!($4611)) {
                break;
               }
               $4612 = ((($evalcond31)) + 72|0);
               $4613 = +HEAPF64[$4612>>3];
               $4614 = (+__Z5IKabsd($4613));
               $4615 = $4614 < 9.9999999999999995E-7;
               if (!($4615)) {
                break;
               }
               $4616 = ((($evalcond31)) + 80|0);
               $4617 = +HEAPF64[$4616>>3];
               $4618 = (+__Z5IKabsd($4617));
               $4619 = $4618 < 9.9999999999999995E-7;
               if (!($4619)) {
                break;
               }
               $4620 = ((($evalcond31)) + 88|0);
               $4621 = +HEAPF64[$4620>>3];
               $4622 = (+__Z5IKabsd($4621));
               $4623 = $4622 < 9.9999999999999995E-7;
               if (!($4623)) {
                break;
               }
               $bgotonextstatement62 = 0;
               ;HEAP8[$j5valid66>>0]=0|0;
               $4624 = ((($4)) + 553|0);
               HEAP8[$4624>>0] = 1;
               $4625 = ((($4)) + 408|0);
               $4626 = +HEAPF64[$4625>>3];
               $4627 = -1.0 * $4626;
               $4628 = (+__Z5IKabsd($4627));
               $4629 = $4628 < 1.9999999999999999E-6;
               do {
                if ($4629) {
                 $4630 = ((($4)) + 384|0);
                 $4631 = +HEAPF64[$4630>>3];
                 $4632 = (+__Z5IKabsd($4631));
                 $4633 = $4632 < 1.9999999999999999E-6;
                 if (!($4633)) {
                  break;
                 }
                 $4634 = ((($4)) + 408|0);
                 $4635 = +HEAPF64[$4634>>3];
                 $4636 = -1.0 * $4635;
                 $4637 = (+__Z5IKsqrd($4636));
                 $4638 = ((($4)) + 384|0);
                 $4639 = +HEAPF64[$4638>>3];
                 $4640 = (+__Z5IKsqrd($4639));
                 $4641 = $4637 + $4640;
                 $4642 = $4641 - 1.0;
                 $4643 = (+__Z5IKabsd($4642));
                 $4644 = $4643 <= 1.9999999999999999E-6;
                 if ($4644) {
                  break L1625;
                 }
                }
               } while(0);
               $4645 = ((($4)) + 408|0);
               $4646 = +HEAPF64[$4645>>3];
               $4647 = -1.0 * $4646;
               $4648 = ((($4)) + 384|0);
               $4649 = +HEAPF64[$4648>>3];
               $4650 = (+__Z7IKatan2dd($4647,$4649));
               HEAPF64[$j5array63>>3] = $4650;
               $4651 = +HEAPF64[$j5array63>>3];
               $4652 = (+__Z5IKsind($4651));
               HEAPF64[$sj5array65>>3] = $4652;
               $4653 = +HEAPF64[$j5array63>>3];
               $4654 = (+__Z5IKcosd($4653));
               HEAPF64[$cj5array64>>3] = $4654;
               $4655 = +HEAPF64[$j5array63>>3];
               $4656 = $4655 > 3.14159265358979;
               $4657 = +HEAPF64[$j5array63>>3];
               do {
                if ($4656) {
                 $4658 = $4657 - 6.2831853071795898;
                 HEAPF64[$j5array63>>3] = $4658;
                } else {
                 $4659 = $4657 < -3.14159265358979;
                 if (!($4659)) {
                  break;
                 }
                 $4660 = +HEAPF64[$j5array63>>3];
                 $4661 = $4660 + 6.2831853071795898;
                 HEAPF64[$j5array63>>3] = $4661;
                }
               } while(0);
               HEAP8[$j5valid66>>0] = 1;
               $ij567 = 0;
               while(1) {
                $4662 = $ij567;
                $4663 = ($4662|0)<(1);
                if (!($4663)) {
                 break L1625;
                }
                $4664 = $ij567;
                $4665 = (($j5valid66) + ($4664)|0);
                $4666 = HEAP8[$4665>>0]|0;
                $4667 = $4666&1;
                do {
                 if ($4667) {
                  $4668 = $ij567;
                  $4669 = $4668&255;
                  $4670 = ((($4)) + 551|0);
                  HEAP8[$4670>>0] = $4669;
                  $4671 = ((($4)) + 551|0);
                  $4672 = ((($4671)) + 1|0);
                  HEAP8[$4672>>0] = -1;
                  $4673 = $ij567;
                  $4674 = (($4673) + 1)|0;
                  $iij568 = $4674;
                  L1652: while(1) {
                   $4675 = $iij568;
                   $4676 = ($4675|0)<(1);
                   if (!($4676)) {
                    break;
                   }
                   $4677 = $iij568;
                   $4678 = (($j5valid66) + ($4677)|0);
                   $4679 = HEAP8[$4678>>0]|0;
                   $4680 = $4679&1;
                   do {
                    if ($4680) {
                     $4681 = $ij567;
                     $4682 = (($cj5array64) + ($4681<<3)|0);
                     $4683 = +HEAPF64[$4682>>3];
                     $4684 = $iij568;
                     $4685 = (($cj5array64) + ($4684<<3)|0);
                     $4686 = +HEAPF64[$4685>>3];
                     $4687 = $4683 - $4686;
                     $4688 = (+__Z5IKabsd($4687));
                     $4689 = $4688 < 9.9999999999999995E-7;
                     if (!($4689)) {
                      break;
                     }
                     $4690 = $ij567;
                     $4691 = (($sj5array65) + ($4690<<3)|0);
                     $4692 = +HEAPF64[$4691>>3];
                     $4693 = $iij568;
                     $4694 = (($sj5array65) + ($4693<<3)|0);
                     $4695 = +HEAPF64[$4694>>3];
                     $4696 = $4692 - $4695;
                     $4697 = (+__Z5IKabsd($4696));
                     $4698 = $4697 < 9.9999999999999995E-7;
                     if ($4698) {
                      label = 488;
                      break L1652;
                     }
                    }
                   } while(0);
                   $4705 = $iij568;
                   $4706 = (($4705) + 1)|0;
                   $iij568 = $4706;
                  }
                  if ((label|0) == 488) {
                   label = 0;
                   $4699 = $iij568;
                   $4700 = (($j5valid66) + ($4699)|0);
                   HEAP8[$4700>>0] = 0;
                   $4701 = $iij568;
                   $4702 = $4701&255;
                   $4703 = ((($4)) + 551|0);
                   $4704 = ((($4703)) + 1|0);
                   HEAP8[$4704>>0] = $4702;
                  }
                  $4707 = $ij567;
                  $4708 = (($j5array63) + ($4707<<3)|0);
                  $4709 = +HEAPF64[$4708>>3];
                  $4710 = ((($4)) + 200|0);
                  HEAPF64[$4710>>3] = $4709;
                  $4711 = $ij567;
                  $4712 = (($cj5array64) + ($4711<<3)|0);
                  $4713 = +HEAPF64[$4712>>3];
                  $4714 = ((($4)) + 208|0);
                  HEAPF64[$4714>>3] = $4713;
                  $4715 = $ij567;
                  $4716 = (($sj5array65) + ($4715<<3)|0);
                  $4717 = +HEAPF64[$4716>>3];
                  $4718 = ((($4)) + 216|0);
                  HEAPF64[$4718>>3] = $4717;
                  $4719 = ((($4)) + 200|0);
                  $4720 = +HEAPF64[$4719>>3];
                  $4721 = (+__Z5IKcosd($4720));
                  $x223 = $4721;
                  $4722 = ((($4)) + 200|0);
                  $4723 = +HEAPF64[$4722>>3];
                  $4724 = (+__Z5IKsind($4723));
                  $x224 = $4724;
                  $4725 = ((($4)) + 288|0);
                  $4726 = +HEAPF64[$4725>>3];
                  $4727 = 1.0 * $4726;
                  $x225 = $4727;
                  $4728 = $x223;
                  $4729 = 1.0 * $4728;
                  $x226 = $4729;
                  $4730 = $x224;
                  $4731 = 1.0 * $4730;
                  $x227 = $4731;
                  $4732 = $x224;
                  $4733 = ((($4)) + 408|0);
                  $4734 = +HEAPF64[$4733>>3];
                  $4735 = $4732 + $4734;
                  HEAPF64[$evalcond69>>3] = $4735;
                  $4736 = ((($4)) + 384|0);
                  $4737 = +HEAPF64[$4736>>3];
                  $4738 = $x226;
                  $4739 = -1.0 * $4738;
                  $4740 = $4737 + $4739;
                  $4741 = ((($evalcond69)) + 8|0);
                  HEAPF64[$4741>>3] = $4740;
                  $4742 = ((($4)) + 288|0);
                  $4743 = +HEAPF64[$4742>>3];
                  $4744 = $x223;
                  $4745 = $4743 * $4744;
                  $4746 = ((($4)) + 336|0);
                  $4747 = +HEAPF64[$4746>>3];
                  $4748 = $4745 + $4747;
                  $4749 = ((($evalcond69)) + 16|0);
                  HEAPF64[$4749>>3] = $4748;
                  $4750 = ((($4)) + 288|0);
                  $4751 = +HEAPF64[$4750>>3];
                  $4752 = $x224;
                  $4753 = $4751 * $4752;
                  $4754 = ((($4)) + 312|0);
                  $4755 = +HEAPF64[$4754>>3];
                  $4756 = $4753 + $4755;
                  $4757 = ((($evalcond69)) + 24|0);
                  HEAPF64[$4757>>3] = $4756;
                  $4758 = ((($4)) + 264|0);
                  $4759 = +HEAPF64[$4758>>3];
                  $4760 = ((($4)) + 360|0);
                  $4761 = +HEAPF64[$4760>>3];
                  $4762 = -1.0 * $4761;
                  $4763 = $x226;
                  $4764 = $4762 * $4763;
                  $4765 = $4759 + $4764;
                  $4766 = ((($evalcond69)) + 32|0);
                  HEAPF64[$4766>>3] = $4765;
                  $4767 = ((($4)) + 240|0);
                  $4768 = +HEAPF64[$4767>>3];
                  $4769 = ((($4)) + 360|0);
                  $4770 = +HEAPF64[$4769>>3];
                  $4771 = -1.0 * $4770;
                  $4772 = $x227;
                  $4773 = $4771 * $4772;
                  $4774 = $4768 + $4773;
                  $4775 = ((($evalcond69)) + 40|0);
                  HEAPF64[$4775>>3] = $4774;
                  $4776 = ((($4)) + 312|0);
                  $4777 = +HEAPF64[$4776>>3];
                  $4778 = -1.0 * $4777;
                  $4779 = $x225;
                  $4780 = $4778 * $4779;
                  $4781 = ((($4)) + 240|0);
                  $4782 = +HEAPF64[$4781>>3];
                  $4783 = ((($4)) + 360|0);
                  $4784 = +HEAPF64[$4783>>3];
                  $4785 = $4782 * $4784;
                  $4786 = $4780 + $4785;
                  $4787 = $x227;
                  $4788 = -1.0 * $4787;
                  $4789 = $4786 + $4788;
                  $4790 = ((($evalcond69)) + 48|0);
                  HEAPF64[$4790>>3] = $4789;
                  $4791 = ((($4)) + 336|0);
                  $4792 = +HEAPF64[$4791>>3];
                  $4793 = -1.0 * $4792;
                  $4794 = $x225;
                  $4795 = $4793 * $4794;
                  $4796 = ((($4)) + 264|0);
                  $4797 = +HEAPF64[$4796>>3];
                  $4798 = ((($4)) + 360|0);
                  $4799 = +HEAPF64[$4798>>3];
                  $4800 = $4797 * $4799;
                  $4801 = $4795 + $4800;
                  $4802 = $x226;
                  $4803 = -1.0 * $4802;
                  $4804 = $4801 + $4803;
                  $4805 = ((($evalcond69)) + 56|0);
                  HEAPF64[$4805>>3] = $4804;
                  $4806 = +HEAPF64[$evalcond69>>3];
                  $4807 = (+__Z5IKabsd($4806));
                  $4808 = $4807 > 5.0000000000000004E-6;
                  if ($4808) {
                   break;
                  }
                  $4809 = ((($evalcond69)) + 8|0);
                  $4810 = +HEAPF64[$4809>>3];
                  $4811 = (+__Z5IKabsd($4810));
                  $4812 = $4811 > 5.0000000000000004E-6;
                  if ($4812) {
                   break;
                  }
                  $4813 = ((($evalcond69)) + 16|0);
                  $4814 = +HEAPF64[$4813>>3];
                  $4815 = (+__Z5IKabsd($4814));
                  $4816 = $4815 > 5.0000000000000004E-6;
                  if ($4816) {
                   break;
                  }
                  $4817 = ((($evalcond69)) + 24|0);
                  $4818 = +HEAPF64[$4817>>3];
                  $4819 = (+__Z5IKabsd($4818));
                  $4820 = $4819 > 5.0000000000000004E-6;
                  if ($4820) {
                   break;
                  }
                  $4821 = ((($evalcond69)) + 32|0);
                  $4822 = +HEAPF64[$4821>>3];
                  $4823 = (+__Z5IKabsd($4822));
                  $4824 = $4823 > 5.0000000000000004E-6;
                  if ($4824) {
                   break;
                  }
                  $4825 = ((($evalcond69)) + 40|0);
                  $4826 = +HEAPF64[$4825>>3];
                  $4827 = (+__Z5IKabsd($4826));
                  $4828 = $4827 > 5.0000000000000004E-6;
                  if ($4828) {
                   break;
                  }
                  $4829 = ((($evalcond69)) + 48|0);
                  $4830 = +HEAPF64[$4829>>3];
                  $4831 = (+__Z5IKabsd($4830));
                  $4832 = $4831 > 5.0000000000000004E-6;
                  if ($4832) {
                   break;
                  }
                  $4833 = ((($evalcond69)) + 56|0);
                  $4834 = +HEAPF64[$4833>>3];
                  $4835 = (+__Z5IKabsd($4834));
                  $4836 = $4835 > 5.0000000000000004E-6;
                  if ($4836) {
                   break;
                  }
                  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos70,6);
                  __THREW__ = 0;
                  $4837 = (invoke_iii(416,($vinfos70|0),0)|0);
                  $4838 = __THREW__; __THREW__ = 0;
                  $4839 = $4838&1;
                  if ($4839) {
                   label = 533;
                   break L1;
                  }
                  $4840 = ((($4837)) + 17|0);
                  HEAP8[$4840>>0] = 1;
                  $4841 = +HEAPF64[$4>>3];
                  __THREW__ = 0;
                  $4842 = (invoke_iii(416,($vinfos70|0),0)|0);
                  $4843 = __THREW__; __THREW__ = 0;
                  $4844 = $4843&1;
                  if ($4844) {
                   label = 533;
                   break L1;
                  }
                  $4845 = ((($4842)) + 8|0);
                  HEAPF64[$4845>>3] = $4841;
                  $4846 = ((($4)) + 536|0);
                  $4847 = HEAP8[$4846>>0]|0;
                  __THREW__ = 0;
                  $4848 = (invoke_iii(416,($vinfos70|0),0)|0);
                  $4849 = __THREW__; __THREW__ = 0;
                  $4850 = $4849&1;
                  if ($4850) {
                   label = 533;
                   break L1;
                  }
                  $4851 = ((($4848)) + 19|0);
                  HEAP8[$4851>>0] = $4847;
                  $4852 = ((($4)) + 536|0);
                  $4853 = ((($4852)) + 1|0);
                  $4854 = HEAP8[$4853>>0]|0;
                  __THREW__ = 0;
                  $4855 = (invoke_iii(416,($vinfos70|0),0)|0);
                  $4856 = __THREW__; __THREW__ = 0;
                  $4857 = $4856&1;
                  if ($4857) {
                   label = 533;
                   break L1;
                  }
                  $4858 = ((($4855)) + 19|0);
                  $4859 = ((($4858)) + 1|0);
                  HEAP8[$4859>>0] = $4854;
                  $4860 = ((($4)) + 538|0);
                  $4861 = HEAP8[$4860>>0]|0;
                  __THREW__ = 0;
                  $4862 = (invoke_iii(416,($vinfos70|0),0)|0);
                  $4863 = __THREW__; __THREW__ = 0;
                  $4864 = $4863&1;
                  if ($4864) {
                   label = 533;
                   break L1;
                  }
                  $4865 = ((($4862)) + 18|0);
                  HEAP8[$4865>>0] = $4861;
                  __THREW__ = 0;
                  $4866 = (invoke_iii(416,($vinfos70|0),1)|0);
                  $4867 = __THREW__; __THREW__ = 0;
                  $4868 = $4867&1;
                  if ($4868) {
                   label = 533;
                   break L1;
                  }
                  $4869 = ((($4866)) + 17|0);
                  HEAP8[$4869>>0] = 1;
                  $4870 = ((($4)) + 40|0);
                  $4871 = +HEAPF64[$4870>>3];
                  __THREW__ = 0;
                  $4872 = (invoke_iii(416,($vinfos70|0),1)|0);
                  $4873 = __THREW__; __THREW__ = 0;
                  $4874 = $4873&1;
                  if ($4874) {
                   label = 533;
                   break L1;
                  }
                  $4875 = ((($4872)) + 8|0);
                  HEAPF64[$4875>>3] = $4871;
                  $4876 = ((($4)) + 539|0);
                  $4877 = HEAP8[$4876>>0]|0;
                  __THREW__ = 0;
                  $4878 = (invoke_iii(416,($vinfos70|0),1)|0);
                  $4879 = __THREW__; __THREW__ = 0;
                  $4880 = $4879&1;
                  if ($4880) {
                   label = 533;
                   break L1;
                  }
                  $4881 = ((($4878)) + 19|0);
                  HEAP8[$4881>>0] = $4877;
                  $4882 = ((($4)) + 539|0);
                  $4883 = ((($4882)) + 1|0);
                  $4884 = HEAP8[$4883>>0]|0;
                  __THREW__ = 0;
                  $4885 = (invoke_iii(416,($vinfos70|0),1)|0);
                  $4886 = __THREW__; __THREW__ = 0;
                  $4887 = $4886&1;
                  if ($4887) {
                   label = 533;
                   break L1;
                  }
                  $4888 = ((($4885)) + 19|0);
                  $4889 = ((($4888)) + 1|0);
                  HEAP8[$4889>>0] = $4884;
                  $4890 = ((($4)) + 541|0);
                  $4891 = HEAP8[$4890>>0]|0;
                  __THREW__ = 0;
                  $4892 = (invoke_iii(416,($vinfos70|0),1)|0);
                  $4893 = __THREW__; __THREW__ = 0;
                  $4894 = $4893&1;
                  if ($4894) {
                   label = 533;
                   break L1;
                  }
                  $4895 = ((($4892)) + 18|0);
                  HEAP8[$4895>>0] = $4891;
                  __THREW__ = 0;
                  $4896 = (invoke_iii(416,($vinfos70|0),2)|0);
                  $4897 = __THREW__; __THREW__ = 0;
                  $4898 = $4897&1;
                  if ($4898) {
                   label = 533;
                   break L1;
                  }
                  $4899 = ((($4896)) + 17|0);
                  HEAP8[$4899>>0] = 1;
                  $4900 = ((($4)) + 80|0);
                  $4901 = +HEAPF64[$4900>>3];
                  __THREW__ = 0;
                  $4902 = (invoke_iii(416,($vinfos70|0),2)|0);
                  $4903 = __THREW__; __THREW__ = 0;
                  $4904 = $4903&1;
                  if ($4904) {
                   label = 533;
                   break L1;
                  }
                  $4905 = ((($4902)) + 8|0);
                  HEAPF64[$4905>>3] = $4901;
                  $4906 = ((($4)) + 542|0);
                  $4907 = HEAP8[$4906>>0]|0;
                  __THREW__ = 0;
                  $4908 = (invoke_iii(416,($vinfos70|0),2)|0);
                  $4909 = __THREW__; __THREW__ = 0;
                  $4910 = $4909&1;
                  if ($4910) {
                   label = 533;
                   break L1;
                  }
                  $4911 = ((($4908)) + 19|0);
                  HEAP8[$4911>>0] = $4907;
                  $4912 = ((($4)) + 542|0);
                  $4913 = ((($4912)) + 1|0);
                  $4914 = HEAP8[$4913>>0]|0;
                  __THREW__ = 0;
                  $4915 = (invoke_iii(416,($vinfos70|0),2)|0);
                  $4916 = __THREW__; __THREW__ = 0;
                  $4917 = $4916&1;
                  if ($4917) {
                   label = 533;
                   break L1;
                  }
                  $4918 = ((($4915)) + 19|0);
                  $4919 = ((($4918)) + 1|0);
                  HEAP8[$4919>>0] = $4914;
                  $4920 = ((($4)) + 544|0);
                  $4921 = HEAP8[$4920>>0]|0;
                  __THREW__ = 0;
                  $4922 = (invoke_iii(416,($vinfos70|0),2)|0);
                  $4923 = __THREW__; __THREW__ = 0;
                  $4924 = $4923&1;
                  if ($4924) {
                   label = 533;
                   break L1;
                  }
                  $4925 = ((($4922)) + 18|0);
                  HEAP8[$4925>>0] = $4921;
                  __THREW__ = 0;
                  $4926 = (invoke_iii(416,($vinfos70|0),3)|0);
                  $4927 = __THREW__; __THREW__ = 0;
                  $4928 = $4927&1;
                  if ($4928) {
                   label = 533;
                   break L1;
                  }
                  $4929 = ((($4926)) + 17|0);
                  HEAP8[$4929>>0] = 1;
                  $4930 = ((($4)) + 120|0);
                  $4931 = +HEAPF64[$4930>>3];
                  __THREW__ = 0;
                  $4932 = (invoke_iii(416,($vinfos70|0),3)|0);
                  $4933 = __THREW__; __THREW__ = 0;
                  $4934 = $4933&1;
                  if ($4934) {
                   label = 533;
                   break L1;
                  }
                  $4935 = ((($4932)) + 8|0);
                  HEAPF64[$4935>>3] = $4931;
                  $4936 = ((($4)) + 545|0);
                  $4937 = HEAP8[$4936>>0]|0;
                  __THREW__ = 0;
                  $4938 = (invoke_iii(416,($vinfos70|0),3)|0);
                  $4939 = __THREW__; __THREW__ = 0;
                  $4940 = $4939&1;
                  if ($4940) {
                   label = 533;
                   break L1;
                  }
                  $4941 = ((($4938)) + 19|0);
                  HEAP8[$4941>>0] = $4937;
                  $4942 = ((($4)) + 545|0);
                  $4943 = ((($4942)) + 1|0);
                  $4944 = HEAP8[$4943>>0]|0;
                  __THREW__ = 0;
                  $4945 = (invoke_iii(416,($vinfos70|0),3)|0);
                  $4946 = __THREW__; __THREW__ = 0;
                  $4947 = $4946&1;
                  if ($4947) {
                   label = 533;
                   break L1;
                  }
                  $4948 = ((($4945)) + 19|0);
                  $4949 = ((($4948)) + 1|0);
                  HEAP8[$4949>>0] = $4944;
                  $4950 = ((($4)) + 547|0);
                  $4951 = HEAP8[$4950>>0]|0;
                  __THREW__ = 0;
                  $4952 = (invoke_iii(416,($vinfos70|0),3)|0);
                  $4953 = __THREW__; __THREW__ = 0;
                  $4954 = $4953&1;
                  if ($4954) {
                   label = 533;
                   break L1;
                  }
                  $4955 = ((($4952)) + 18|0);
                  HEAP8[$4955>>0] = $4951;
                  __THREW__ = 0;
                  $4956 = (invoke_iii(416,($vinfos70|0),4)|0);
                  $4957 = __THREW__; __THREW__ = 0;
                  $4958 = $4957&1;
                  if ($4958) {
                   label = 533;
                   break L1;
                  }
                  $4959 = ((($4956)) + 17|0);
                  HEAP8[$4959>>0] = 1;
                  $4960 = ((($4)) + 160|0);
                  $4961 = +HEAPF64[$4960>>3];
                  __THREW__ = 0;
                  $4962 = (invoke_iii(416,($vinfos70|0),4)|0);
                  $4963 = __THREW__; __THREW__ = 0;
                  $4964 = $4963&1;
                  if ($4964) {
                   label = 533;
                   break L1;
                  }
                  $4965 = ((($4962)) + 8|0);
                  HEAPF64[$4965>>3] = $4961;
                  $4966 = ((($4)) + 548|0);
                  $4967 = HEAP8[$4966>>0]|0;
                  __THREW__ = 0;
                  $4968 = (invoke_iii(416,($vinfos70|0),4)|0);
                  $4969 = __THREW__; __THREW__ = 0;
                  $4970 = $4969&1;
                  if ($4970) {
                   label = 533;
                   break L1;
                  }
                  $4971 = ((($4968)) + 19|0);
                  HEAP8[$4971>>0] = $4967;
                  $4972 = ((($4)) + 548|0);
                  $4973 = ((($4972)) + 1|0);
                  $4974 = HEAP8[$4973>>0]|0;
                  __THREW__ = 0;
                  $4975 = (invoke_iii(416,($vinfos70|0),4)|0);
                  $4976 = __THREW__; __THREW__ = 0;
                  $4977 = $4976&1;
                  if ($4977) {
                   label = 533;
                   break L1;
                  }
                  $4978 = ((($4975)) + 19|0);
                  $4979 = ((($4978)) + 1|0);
                  HEAP8[$4979>>0] = $4974;
                  $4980 = ((($4)) + 550|0);
                  $4981 = HEAP8[$4980>>0]|0;
                  __THREW__ = 0;
                  $4982 = (invoke_iii(416,($vinfos70|0),4)|0);
                  $4983 = __THREW__; __THREW__ = 0;
                  $4984 = $4983&1;
                  if ($4984) {
                   label = 533;
                   break L1;
                  }
                  $4985 = ((($4982)) + 18|0);
                  HEAP8[$4985>>0] = $4981;
                  __THREW__ = 0;
                  $4986 = (invoke_iii(416,($vinfos70|0),5)|0);
                  $4987 = __THREW__; __THREW__ = 0;
                  $4988 = $4987&1;
                  if ($4988) {
                   label = 533;
                   break L1;
                  }
                  $4989 = ((($4986)) + 17|0);
                  HEAP8[$4989>>0] = 1;
                  $4990 = ((($4)) + 200|0);
                  $4991 = +HEAPF64[$4990>>3];
                  __THREW__ = 0;
                  $4992 = (invoke_iii(416,($vinfos70|0),5)|0);
                  $4993 = __THREW__; __THREW__ = 0;
                  $4994 = $4993&1;
                  if ($4994) {
                   label = 533;
                   break L1;
                  }
                  $4995 = ((($4992)) + 8|0);
                  HEAPF64[$4995>>3] = $4991;
                  $4996 = ((($4)) + 551|0);
                  $4997 = HEAP8[$4996>>0]|0;
                  __THREW__ = 0;
                  $4998 = (invoke_iii(416,($vinfos70|0),5)|0);
                  $4999 = __THREW__; __THREW__ = 0;
                  $5000 = $4999&1;
                  if ($5000) {
                   label = 533;
                   break L1;
                  }
                  $5001 = ((($4998)) + 19|0);
                  HEAP8[$5001>>0] = $4997;
                  $5002 = ((($4)) + 551|0);
                  $5003 = ((($5002)) + 1|0);
                  $5004 = HEAP8[$5003>>0]|0;
                  __THREW__ = 0;
                  $5005 = (invoke_iii(416,($vinfos70|0),5)|0);
                  $5006 = __THREW__; __THREW__ = 0;
                  $5007 = $5006&1;
                  if ($5007) {
                   label = 533;
                   break L1;
                  }
                  $5008 = ((($5005)) + 19|0);
                  $5009 = ((($5008)) + 1|0);
                  HEAP8[$5009>>0] = $5004;
                  $5010 = ((($4)) + 553|0);
                  $5011 = HEAP8[$5010>>0]|0;
                  __THREW__ = 0;
                  $5012 = (invoke_iii(416,($vinfos70|0),5)|0);
                  $5013 = __THREW__; __THREW__ = 0;
                  $5014 = $5013&1;
                  if ($5014) {
                   label = 533;
                   break L1;
                  }
                  $5015 = ((($5012)) + 18|0);
                  HEAP8[$5015>>0] = $5011;
                  __THREW__ = 0;
                  invoke_vii(417,($vfree71|0),0);
                  $5016 = __THREW__; __THREW__ = 0;
                  $5017 = $5016&1;
                  if ($5017) {
                   label = 533;
                   break L1;
                  }
                  $5018 = $1;
                  $5019 = HEAP32[$5018>>2]|0;
                  $5020 = ((($5019)) + 8|0);
                  $5021 = HEAP32[$5020>>2]|0;
                  __THREW__ = 0;
                  (invoke_iiii($5021|0,($5018|0),($vinfos70|0),($vfree71|0))|0);
                  $5022 = __THREW__; __THREW__ = 0;
                  $5023 = $5022&1;
                  if ($5023) {
                   label = 534;
                   break L1;
                  }
                  __THREW__ = 0;
                  invoke_vi(371,($vfree71|0));
                  $5024 = __THREW__; __THREW__ = 0;
                  $5025 = $5024&1;
                  if ($5025) {
                   label = 533;
                   break L1;
                  }
                  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos70);
                 }
                } while(0);
                $5026 = $ij567;
                $5027 = (($5026) + 1)|0;
                $ij567 = $5027;
               }
              }
             } while(0);
             $5036 = $bgotonextstatement62;
             $5037 = $5036&1;
             if (!($5037)) {
              break;
             }
             $bgotonextstatement72 = 1;
             $5038 = ((($4)) + 288|0);
             $5039 = +HEAPF64[$5038>>3];
             $5040 = -1.0 * $5039;
             $5041 = ((($4)) + 136|0);
             $5042 = +HEAPF64[$5041>>3];
             $5043 = $5040 * $5042;
             $5044 = ((($4)) + 128|0);
             $5045 = +HEAPF64[$5044>>3];
             $5046 = ((($4)) + 360|0);
             $5047 = +HEAPF64[$5046>>3];
             $5048 = $5045 * $5047;
             $5049 = $5043 + $5048;
             $x228 = $5049;
             $5050 = ((($4)) + 360|0);
             $5051 = +HEAPF64[$5050>>3];
             $5052 = ((($4)) + 136|0);
             $5053 = +HEAPF64[$5052>>3];
             $5054 = $5051 * $5053;
             $5055 = ((($4)) + 128|0);
             $5056 = +HEAPF64[$5055>>3];
             $5057 = ((($4)) + 288|0);
             $5058 = +HEAPF64[$5057>>3];
             $5059 = $5056 * $5058;
             $5060 = $5054 + $5059;
             $x229 = $5060;
             $5061 = ((($4)) + 160|0);
             $5062 = +HEAPF64[$5061>>3];
             $5063 = (+__Z5IKabsd($5062));
             $5064 = 3.14159265358979 + $5063;
             $5065 = (+__Z6IKfmoddd($5064,6.2831853071795898));
             $5066 = -3.14159265358979 + $5065;
             HEAPF64[$evalcond31>>3] = $5066;
             $5067 = ((($4)) + 432|0);
             $5068 = +HEAPF64[$5067>>3];
             $5069 = -1.0 + $5068;
             $5070 = ((($evalcond31)) + 8|0);
             HEAPF64[$5070>>3] = $5069;
             $5071 = ((($4)) + 384|0);
             $5072 = +HEAPF64[$5071>>3];
             $5073 = ((($evalcond31)) + 16|0);
             HEAPF64[$5073>>3] = $5072;
             $5074 = ((($4)) + 288|0);
             $5075 = +HEAPF64[$5074>>3];
             $5076 = ((($evalcond31)) + 24|0);
             HEAPF64[$5076>>3] = $5075;
             $5077 = ((($4)) + 360|0);
             $5078 = +HEAPF64[$5077>>3];
             $5079 = ((($evalcond31)) + 32|0);
             HEAPF64[$5079>>3] = $5078;
             $5080 = ((($4)) + 408|0);
             $5081 = +HEAPF64[$5080>>3];
             $5082 = ((($evalcond31)) + 40|0);
             HEAPF64[$5082>>3] = $5081;
             $5083 = $x228;
             $5084 = ((($evalcond31)) + 48|0);
             HEAPF64[$5084>>3] = $5083;
             $5085 = $x228;
             $5086 = ((($evalcond31)) + 56|0);
             HEAPF64[$5086>>3] = $5085;
             $5087 = $x229;
             $5088 = ((($evalcond31)) + 64|0);
             HEAPF64[$5088>>3] = $5087;
             $5089 = $x229;
             $5090 = ((($evalcond31)) + 72|0);
             HEAPF64[$5090>>3] = $5089;
             $5091 = +HEAPF64[$evalcond31>>3];
             $5092 = (+__Z5IKabsd($5091));
             $5093 = $5092 < 9.9999999999999995E-7;
             L1706: do {
              if ($5093) {
               $5094 = ((($evalcond31)) + 8|0);
               $5095 = +HEAPF64[$5094>>3];
               $5096 = (+__Z5IKabsd($5095));
               $5097 = $5096 < 9.9999999999999995E-7;
               if (!($5097)) {
                break;
               }
               $5098 = ((($evalcond31)) + 16|0);
               $5099 = +HEAPF64[$5098>>3];
               $5100 = (+__Z5IKabsd($5099));
               $5101 = $5100 < 9.9999999999999995E-7;
               if (!($5101)) {
                break;
               }
               $5102 = ((($evalcond31)) + 24|0);
               $5103 = +HEAPF64[$5102>>3];
               $5104 = (+__Z5IKabsd($5103));
               $5105 = $5104 < 9.9999999999999995E-7;
               if (!($5105)) {
                break;
               }
               $5106 = ((($evalcond31)) + 32|0);
               $5107 = +HEAPF64[$5106>>3];
               $5108 = (+__Z5IKabsd($5107));
               $5109 = $5108 < 9.9999999999999995E-7;
               if (!($5109)) {
                break;
               }
               $5110 = ((($evalcond31)) + 40|0);
               $5111 = +HEAPF64[$5110>>3];
               $5112 = (+__Z5IKabsd($5111));
               $5113 = $5112 < 9.9999999999999995E-7;
               if (!($5113)) {
                break;
               }
               $5114 = ((($evalcond31)) + 48|0);
               $5115 = +HEAPF64[$5114>>3];
               $5116 = (+__Z5IKabsd($5115));
               $5117 = $5116 < 9.9999999999999995E-7;
               if (!($5117)) {
                break;
               }
               $5118 = ((($evalcond31)) + 56|0);
               $5119 = +HEAPF64[$5118>>3];
               $5120 = (+__Z5IKabsd($5119));
               $5121 = $5120 < 9.9999999999999995E-7;
               if (!($5121)) {
                break;
               }
               $5122 = ((($evalcond31)) + 64|0);
               $5123 = +HEAPF64[$5122>>3];
               $5124 = (+__Z5IKabsd($5123));
               $5125 = $5124 < 9.9999999999999995E-7;
               if (!($5125)) {
                break;
               }
               $5126 = ((($evalcond31)) + 72|0);
               $5127 = +HEAPF64[$5126>>3];
               $5128 = (+__Z5IKabsd($5127));
               $5129 = $5128 < 9.9999999999999995E-7;
               if (!($5129)) {
                break;
               }
               $bgotonextstatement72 = 0;
               ;HEAP8[$j5valid76>>0]=0|0;
               $5130 = ((($4)) + 553|0);
               HEAP8[$5130>>0] = 1;
               $5131 = ((($4)) + 264|0);
               $5132 = +HEAPF64[$5131>>3];
               $5133 = 1.0 * $5132;
               $x230 = $5133;
               $5134 = ((($4)) + 128|0);
               $5135 = +HEAPF64[$5134>>3];
               $5136 = -1.0 * $5135;
               $5137 = $x230;
               $5138 = $5136 * $5137;
               $5139 = ((($4)) + 240|0);
               $5140 = +HEAPF64[$5139>>3];
               $5141 = -1.0 * $5140;
               $5142 = ((($4)) + 136|0);
               $5143 = +HEAPF64[$5142>>3];
               $5144 = $5141 * $5143;
               $5145 = $5138 + $5144;
               $5146 = (+__Z5IKabsd($5145));
               $5147 = $5146 < 1.9999999999999999E-6;
               do {
                if ($5147) {
                 $5148 = ((($4)) + 128|0);
                 $5149 = +HEAPF64[$5148>>3];
                 $5150 = ((($4)) + 240|0);
                 $5151 = +HEAPF64[$5150>>3];
                 $5152 = $5149 * $5151;
                 $5153 = ((($4)) + 136|0);
                 $5154 = +HEAPF64[$5153>>3];
                 $5155 = -1.0 * $5154;
                 $5156 = $x230;
                 $5157 = $5155 * $5156;
                 $5158 = $5152 + $5157;
                 $5159 = (+__Z5IKabsd($5158));
                 $5160 = $5159 < 1.9999999999999999E-6;
                 if (!($5160)) {
                  break;
                 }
                 $5161 = ((($4)) + 128|0);
                 $5162 = +HEAPF64[$5161>>3];
                 $5163 = -1.0 * $5162;
                 $5164 = $x230;
                 $5165 = $5163 * $5164;
                 $5166 = ((($4)) + 240|0);
                 $5167 = +HEAPF64[$5166>>3];
                 $5168 = -1.0 * $5167;
                 $5169 = ((($4)) + 136|0);
                 $5170 = +HEAPF64[$5169>>3];
                 $5171 = $5168 * $5170;
                 $5172 = $5165 + $5171;
                 $5173 = (+__Z5IKsqrd($5172));
                 $5174 = ((($4)) + 128|0);
                 $5175 = +HEAPF64[$5174>>3];
                 $5176 = ((($4)) + 240|0);
                 $5177 = +HEAPF64[$5176>>3];
                 $5178 = $5175 * $5177;
                 $5179 = ((($4)) + 136|0);
                 $5180 = +HEAPF64[$5179>>3];
                 $5181 = -1.0 * $5180;
                 $5182 = $x230;
                 $5183 = $5181 * $5182;
                 $5184 = $5178 + $5183;
                 $5185 = (+__Z5IKsqrd($5184));
                 $5186 = $5173 + $5185;
                 $5187 = $5186 - 1.0;
                 $5188 = (+__Z5IKabsd($5187));
                 $5189 = $5188 <= 1.9999999999999999E-6;
                 if ($5189) {
                  break L1706;
                 }
                }
               } while(0);
               $5190 = ((($4)) + 128|0);
               $5191 = +HEAPF64[$5190>>3];
               $5192 = -1.0 * $5191;
               $5193 = $x230;
               $5194 = $5192 * $5193;
               $5195 = ((($4)) + 240|0);
               $5196 = +HEAPF64[$5195>>3];
               $5197 = -1.0 * $5196;
               $5198 = ((($4)) + 136|0);
               $5199 = +HEAPF64[$5198>>3];
               $5200 = $5197 * $5199;
               $5201 = $5194 + $5200;
               $5202 = ((($4)) + 128|0);
               $5203 = +HEAPF64[$5202>>3];
               $5204 = ((($4)) + 240|0);
               $5205 = +HEAPF64[$5204>>3];
               $5206 = $5203 * $5205;
               $5207 = ((($4)) + 136|0);
               $5208 = +HEAPF64[$5207>>3];
               $5209 = -1.0 * $5208;
               $5210 = $x230;
               $5211 = $5209 * $5210;
               $5212 = $5206 + $5211;
               $5213 = (+__Z7IKatan2dd($5201,$5212));
               HEAPF64[$j5array73>>3] = $5213;
               $5214 = +HEAPF64[$j5array73>>3];
               $5215 = (+__Z5IKsind($5214));
               HEAPF64[$sj5array75>>3] = $5215;
               $5216 = +HEAPF64[$j5array73>>3];
               $5217 = (+__Z5IKcosd($5216));
               HEAPF64[$cj5array74>>3] = $5217;
               $5218 = +HEAPF64[$j5array73>>3];
               $5219 = $5218 > 3.14159265358979;
               $5220 = +HEAPF64[$j5array73>>3];
               do {
                if ($5219) {
                 $5221 = $5220 - 6.2831853071795898;
                 HEAPF64[$j5array73>>3] = $5221;
                } else {
                 $5222 = $5220 < -3.14159265358979;
                 if (!($5222)) {
                  break;
                 }
                 $5223 = +HEAPF64[$j5array73>>3];
                 $5224 = $5223 + 6.2831853071795898;
                 HEAPF64[$j5array73>>3] = $5224;
                }
               } while(0);
               HEAP8[$j5valid76>>0] = 1;
               $ij577 = 0;
               while(1) {
                $5225 = $ij577;
                $5226 = ($5225|0)<(1);
                if (!($5226)) {
                 break L1706;
                }
                $5227 = $ij577;
                $5228 = (($j5valid76) + ($5227)|0);
                $5229 = HEAP8[$5228>>0]|0;
                $5230 = $5229&1;
                do {
                 if ($5230) {
                  $5231 = $ij577;
                  $5232 = $5231&255;
                  $5233 = ((($4)) + 551|0);
                  HEAP8[$5233>>0] = $5232;
                  $5234 = ((($4)) + 551|0);
                  $5235 = ((($5234)) + 1|0);
                  HEAP8[$5235>>0] = -1;
                  $5236 = $ij577;
                  $5237 = (($5236) + 1)|0;
                  $iij578 = $5237;
                  L1731: while(1) {
                   $5238 = $iij578;
                   $5239 = ($5238|0)<(1);
                   if (!($5239)) {
                    break;
                   }
                   $5240 = $iij578;
                   $5241 = (($j5valid76) + ($5240)|0);
                   $5242 = HEAP8[$5241>>0]|0;
                   $5243 = $5242&1;
                   do {
                    if ($5243) {
                     $5244 = $ij577;
                     $5245 = (($cj5array74) + ($5244<<3)|0);
                     $5246 = +HEAPF64[$5245>>3];
                     $5247 = $iij578;
                     $5248 = (($cj5array74) + ($5247<<3)|0);
                     $5249 = +HEAPF64[$5248>>3];
                     $5250 = $5246 - $5249;
                     $5251 = (+__Z5IKabsd($5250));
                     $5252 = $5251 < 9.9999999999999995E-7;
                     if (!($5252)) {
                      break;
                     }
                     $5253 = $ij577;
                     $5254 = (($sj5array75) + ($5253<<3)|0);
                     $5255 = +HEAPF64[$5254>>3];
                     $5256 = $iij578;
                     $5257 = (($sj5array75) + ($5256<<3)|0);
                     $5258 = +HEAPF64[$5257>>3];
                     $5259 = $5255 - $5258;
                     $5260 = (+__Z5IKabsd($5259));
                     $5261 = $5260 < 9.9999999999999995E-7;
                     if ($5261) {
                      label = 562;
                      break L1731;
                     }
                    }
                   } while(0);
                   $5268 = $iij578;
                   $5269 = (($5268) + 1)|0;
                   $iij578 = $5269;
                  }
                  if ((label|0) == 562) {
                   label = 0;
                   $5262 = $iij578;
                   $5263 = (($j5valid76) + ($5262)|0);
                   HEAP8[$5263>>0] = 0;
                   $5264 = $iij578;
                   $5265 = $5264&255;
                   $5266 = ((($4)) + 551|0);
                   $5267 = ((($5266)) + 1|0);
                   HEAP8[$5267>>0] = $5265;
                  }
                  $5270 = $ij577;
                  $5271 = (($j5array73) + ($5270<<3)|0);
                  $5272 = +HEAPF64[$5271>>3];
                  $5273 = ((($4)) + 200|0);
                  HEAPF64[$5273>>3] = $5272;
                  $5274 = $ij577;
                  $5275 = (($cj5array74) + ($5274<<3)|0);
                  $5276 = +HEAPF64[$5275>>3];
                  $5277 = ((($4)) + 208|0);
                  HEAPF64[$5277>>3] = $5276;
                  $5278 = $ij577;
                  $5279 = (($sj5array75) + ($5278<<3)|0);
                  $5280 = +HEAPF64[$5279>>3];
                  $5281 = ((($4)) + 216|0);
                  HEAPF64[$5281>>3] = $5280;
                  $5282 = ((($4)) + 200|0);
                  $5283 = +HEAPF64[$5282>>3];
                  $5284 = (+__Z5IKsind($5283));
                  $x231 = $5284;
                  $5285 = ((($4)) + 200|0);
                  $5286 = +HEAPF64[$5285>>3];
                  $5287 = (+__Z5IKcosd($5286));
                  $x232 = $5287;
                  $5288 = ((($4)) + 136|0);
                  $5289 = +HEAPF64[$5288>>3];
                  $5290 = 1.0 * $5289;
                  $x233 = $5290;
                  $5291 = $x232;
                  $5292 = 1.0 * $5291;
                  $x234 = $5292;
                  $5293 = ((($4)) + 136|0);
                  $5294 = +HEAPF64[$5293>>3];
                  $5295 = $x231;
                  $5296 = $5294 * $5295;
                  $x235 = $5296;
                  $5297 = $x231;
                  $5298 = 1.0 * $5297;
                  $x236 = $5298;
                  $5299 = ((($4)) + 128|0);
                  $5300 = +HEAPF64[$5299>>3];
                  $5301 = $x234;
                  $5302 = $5300 * $5301;
                  $x237 = $5302;
                  $5303 = ((($4)) + 336|0);
                  $5304 = +HEAPF64[$5303>>3];
                  $5305 = ((($4)) + 136|0);
                  $5306 = +HEAPF64[$5305>>3];
                  $5307 = $5304 * $5306;
                  $5308 = $x231;
                  $5309 = $5307 + $5308;
                  $5310 = ((($4)) + 128|0);
                  $5311 = +HEAPF64[$5310>>3];
                  $5312 = ((($4)) + 264|0);
                  $5313 = +HEAPF64[$5312>>3];
                  $5314 = $5311 * $5313;
                  $5315 = $5309 + $5314;
                  HEAPF64[$evalcond79>>3] = $5315;
                  $5316 = ((($4)) + 128|0);
                  $5317 = +HEAPF64[$5316>>3];
                  $5318 = $x231;
                  $5319 = $5317 * $5318;
                  $5320 = ((($4)) + 264|0);
                  $5321 = +HEAPF64[$5320>>3];
                  $5322 = $5319 + $5321;
                  $5323 = ((($4)) + 136|0);
                  $5324 = +HEAPF64[$5323>>3];
                  $5325 = $x232;
                  $5326 = $5324 * $5325;
                  $5327 = $5322 + $5326;
                  $5328 = ((($evalcond79)) + 8|0);
                  HEAPF64[$5328>>3] = $5327;
                  $5329 = ((($4)) + 312|0);
                  $5330 = +HEAPF64[$5329>>3];
                  $5331 = ((($4)) + 136|0);
                  $5332 = +HEAPF64[$5331>>3];
                  $5333 = $5330 * $5332;
                  $5334 = $x234;
                  $5335 = -1.0 * $5334;
                  $5336 = $5333 + $5335;
                  $5337 = ((($4)) + 128|0);
                  $5338 = +HEAPF64[$5337>>3];
                  $5339 = ((($4)) + 240|0);
                  $5340 = +HEAPF64[$5339>>3];
                  $5341 = $5338 * $5340;
                  $5342 = $5336 + $5341;
                  $5343 = ((($evalcond79)) + 16|0);
                  HEAPF64[$5343>>3] = $5342;
                  $5344 = $x236;
                  $5345 = -1.0 * $5344;
                  $5346 = ((($4)) + 128|0);
                  $5347 = +HEAPF64[$5346>>3];
                  $5348 = ((($4)) + 312|0);
                  $5349 = +HEAPF64[$5348>>3];
                  $5350 = $5347 * $5349;
                  $5351 = $5345 + $5350;
                  $5352 = ((($4)) + 240|0);
                  $5353 = +HEAPF64[$5352>>3];
                  $5354 = -1.0 * $5353;
                  $5355 = $x233;
                  $5356 = $5354 * $5355;
                  $5357 = $5351 + $5356;
                  $5358 = ((($evalcond79)) + 24|0);
                  HEAPF64[$5358>>3] = $5357;
                  $5359 = $x234;
                  $5360 = -1.0 * $5359;
                  $5361 = ((($4)) + 128|0);
                  $5362 = +HEAPF64[$5361>>3];
                  $5363 = ((($4)) + 336|0);
                  $5364 = +HEAPF64[$5363>>3];
                  $5365 = $5362 * $5364;
                  $5366 = $5360 + $5365;
                  $5367 = ((($4)) + 264|0);
                  $5368 = +HEAPF64[$5367>>3];
                  $5369 = -1.0 * $5368;
                  $5370 = $x233;
                  $5371 = $5369 * $5370;
                  $5372 = $5366 + $5371;
                  $5373 = ((($evalcond79)) + 32|0);
                  HEAPF64[$5373>>3] = $5372;
                  $5374 = $x237;
                  $5375 = -1.0 * $5374;
                  $5376 = $x235;
                  $5377 = $5375 + $5376;
                  $5378 = ((($4)) + 240|0);
                  $5379 = +HEAPF64[$5378>>3];
                  $5380 = $5377 + $5379;
                  $5381 = ((($evalcond79)) + 40|0);
                  HEAPF64[$5381>>3] = $5380;
                  $5382 = $x237;
                  $5383 = -1.0 * $5382;
                  $5384 = $x235;
                  $5385 = $5383 + $5384;
                  $5386 = ((($4)) + 336|0);
                  $5387 = +HEAPF64[$5386>>3];
                  $5388 = $5385 + $5387;
                  $5389 = ((($evalcond79)) + 48|0);
                  HEAPF64[$5389>>3] = $5388;
                  $5390 = ((($4)) + 128|0);
                  $5391 = +HEAPF64[$5390>>3];
                  $5392 = -1.0 * $5391;
                  $5393 = $x236;
                  $5394 = $5392 * $5393;
                  $5395 = ((($4)) + 312|0);
                  $5396 = +HEAPF64[$5395>>3];
                  $5397 = $5394 + $5396;
                  $5398 = $x232;
                  $5399 = -1.0 * $5398;
                  $5400 = $x233;
                  $5401 = $5399 * $5400;
                  $5402 = $5397 + $5401;
                  $5403 = ((($evalcond79)) + 56|0);
                  HEAPF64[$5403>>3] = $5402;
                  $5404 = +HEAPF64[$evalcond79>>3];
                  $5405 = (+__Z5IKabsd($5404));
                  $5406 = $5405 > 5.0000000000000004E-6;
                  if ($5406) {
                   break;
                  }
                  $5407 = ((($evalcond79)) + 8|0);
                  $5408 = +HEAPF64[$5407>>3];
                  $5409 = (+__Z5IKabsd($5408));
                  $5410 = $5409 > 5.0000000000000004E-6;
                  if ($5410) {
                   break;
                  }
                  $5411 = ((($evalcond79)) + 16|0);
                  $5412 = +HEAPF64[$5411>>3];
                  $5413 = (+__Z5IKabsd($5412));
                  $5414 = $5413 > 5.0000000000000004E-6;
                  if ($5414) {
                   break;
                  }
                  $5415 = ((($evalcond79)) + 24|0);
                  $5416 = +HEAPF64[$5415>>3];
                  $5417 = (+__Z5IKabsd($5416));
                  $5418 = $5417 > 5.0000000000000004E-6;
                  if ($5418) {
                   break;
                  }
                  $5419 = ((($evalcond79)) + 32|0);
                  $5420 = +HEAPF64[$5419>>3];
                  $5421 = (+__Z5IKabsd($5420));
                  $5422 = $5421 > 5.0000000000000004E-6;
                  if ($5422) {
                   break;
                  }
                  $5423 = ((($evalcond79)) + 40|0);
                  $5424 = +HEAPF64[$5423>>3];
                  $5425 = (+__Z5IKabsd($5424));
                  $5426 = $5425 > 5.0000000000000004E-6;
                  if ($5426) {
                   break;
                  }
                  $5427 = ((($evalcond79)) + 48|0);
                  $5428 = +HEAPF64[$5427>>3];
                  $5429 = (+__Z5IKabsd($5428));
                  $5430 = $5429 > 5.0000000000000004E-6;
                  if ($5430) {
                   break;
                  }
                  $5431 = ((($evalcond79)) + 56|0);
                  $5432 = +HEAPF64[$5431>>3];
                  $5433 = (+__Z5IKabsd($5432));
                  $5434 = $5433 > 5.0000000000000004E-6;
                  if ($5434) {
                   break;
                  }
                  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos80,6);
                  __THREW__ = 0;
                  $5435 = (invoke_iii(416,($vinfos80|0),0)|0);
                  $5436 = __THREW__; __THREW__ = 0;
                  $5437 = $5436&1;
                  if ($5437) {
                   label = 607;
                   break L1;
                  }
                  $5438 = ((($5435)) + 17|0);
                  HEAP8[$5438>>0] = 1;
                  $5439 = +HEAPF64[$4>>3];
                  __THREW__ = 0;
                  $5440 = (invoke_iii(416,($vinfos80|0),0)|0);
                  $5441 = __THREW__; __THREW__ = 0;
                  $5442 = $5441&1;
                  if ($5442) {
                   label = 607;
                   break L1;
                  }
                  $5443 = ((($5440)) + 8|0);
                  HEAPF64[$5443>>3] = $5439;
                  $5444 = ((($4)) + 536|0);
                  $5445 = HEAP8[$5444>>0]|0;
                  __THREW__ = 0;
                  $5446 = (invoke_iii(416,($vinfos80|0),0)|0);
                  $5447 = __THREW__; __THREW__ = 0;
                  $5448 = $5447&1;
                  if ($5448) {
                   label = 607;
                   break L1;
                  }
                  $5449 = ((($5446)) + 19|0);
                  HEAP8[$5449>>0] = $5445;
                  $5450 = ((($4)) + 536|0);
                  $5451 = ((($5450)) + 1|0);
                  $5452 = HEAP8[$5451>>0]|0;
                  __THREW__ = 0;
                  $5453 = (invoke_iii(416,($vinfos80|0),0)|0);
                  $5454 = __THREW__; __THREW__ = 0;
                  $5455 = $5454&1;
                  if ($5455) {
                   label = 607;
                   break L1;
                  }
                  $5456 = ((($5453)) + 19|0);
                  $5457 = ((($5456)) + 1|0);
                  HEAP8[$5457>>0] = $5452;
                  $5458 = ((($4)) + 538|0);
                  $5459 = HEAP8[$5458>>0]|0;
                  __THREW__ = 0;
                  $5460 = (invoke_iii(416,($vinfos80|0),0)|0);
                  $5461 = __THREW__; __THREW__ = 0;
                  $5462 = $5461&1;
                  if ($5462) {
                   label = 607;
                   break L1;
                  }
                  $5463 = ((($5460)) + 18|0);
                  HEAP8[$5463>>0] = $5459;
                  __THREW__ = 0;
                  $5464 = (invoke_iii(416,($vinfos80|0),1)|0);
                  $5465 = __THREW__; __THREW__ = 0;
                  $5466 = $5465&1;
                  if ($5466) {
                   label = 607;
                   break L1;
                  }
                  $5467 = ((($5464)) + 17|0);
                  HEAP8[$5467>>0] = 1;
                  $5468 = ((($4)) + 40|0);
                  $5469 = +HEAPF64[$5468>>3];
                  __THREW__ = 0;
                  $5470 = (invoke_iii(416,($vinfos80|0),1)|0);
                  $5471 = __THREW__; __THREW__ = 0;
                  $5472 = $5471&1;
                  if ($5472) {
                   label = 607;
                   break L1;
                  }
                  $5473 = ((($5470)) + 8|0);
                  HEAPF64[$5473>>3] = $5469;
                  $5474 = ((($4)) + 539|0);
                  $5475 = HEAP8[$5474>>0]|0;
                  __THREW__ = 0;
                  $5476 = (invoke_iii(416,($vinfos80|0),1)|0);
                  $5477 = __THREW__; __THREW__ = 0;
                  $5478 = $5477&1;
                  if ($5478) {
                   label = 607;
                   break L1;
                  }
                  $5479 = ((($5476)) + 19|0);
                  HEAP8[$5479>>0] = $5475;
                  $5480 = ((($4)) + 539|0);
                  $5481 = ((($5480)) + 1|0);
                  $5482 = HEAP8[$5481>>0]|0;
                  __THREW__ = 0;
                  $5483 = (invoke_iii(416,($vinfos80|0),1)|0);
                  $5484 = __THREW__; __THREW__ = 0;
                  $5485 = $5484&1;
                  if ($5485) {
                   label = 607;
                   break L1;
                  }
                  $5486 = ((($5483)) + 19|0);
                  $5487 = ((($5486)) + 1|0);
                  HEAP8[$5487>>0] = $5482;
                  $5488 = ((($4)) + 541|0);
                  $5489 = HEAP8[$5488>>0]|0;
                  __THREW__ = 0;
                  $5490 = (invoke_iii(416,($vinfos80|0),1)|0);
                  $5491 = __THREW__; __THREW__ = 0;
                  $5492 = $5491&1;
                  if ($5492) {
                   label = 607;
                   break L1;
                  }
                  $5493 = ((($5490)) + 18|0);
                  HEAP8[$5493>>0] = $5489;
                  __THREW__ = 0;
                  $5494 = (invoke_iii(416,($vinfos80|0),2)|0);
                  $5495 = __THREW__; __THREW__ = 0;
                  $5496 = $5495&1;
                  if ($5496) {
                   label = 607;
                   break L1;
                  }
                  $5497 = ((($5494)) + 17|0);
                  HEAP8[$5497>>0] = 1;
                  $5498 = ((($4)) + 80|0);
                  $5499 = +HEAPF64[$5498>>3];
                  __THREW__ = 0;
                  $5500 = (invoke_iii(416,($vinfos80|0),2)|0);
                  $5501 = __THREW__; __THREW__ = 0;
                  $5502 = $5501&1;
                  if ($5502) {
                   label = 607;
                   break L1;
                  }
                  $5503 = ((($5500)) + 8|0);
                  HEAPF64[$5503>>3] = $5499;
                  $5504 = ((($4)) + 542|0);
                  $5505 = HEAP8[$5504>>0]|0;
                  __THREW__ = 0;
                  $5506 = (invoke_iii(416,($vinfos80|0),2)|0);
                  $5507 = __THREW__; __THREW__ = 0;
                  $5508 = $5507&1;
                  if ($5508) {
                   label = 607;
                   break L1;
                  }
                  $5509 = ((($5506)) + 19|0);
                  HEAP8[$5509>>0] = $5505;
                  $5510 = ((($4)) + 542|0);
                  $5511 = ((($5510)) + 1|0);
                  $5512 = HEAP8[$5511>>0]|0;
                  __THREW__ = 0;
                  $5513 = (invoke_iii(416,($vinfos80|0),2)|0);
                  $5514 = __THREW__; __THREW__ = 0;
                  $5515 = $5514&1;
                  if ($5515) {
                   label = 607;
                   break L1;
                  }
                  $5516 = ((($5513)) + 19|0);
                  $5517 = ((($5516)) + 1|0);
                  HEAP8[$5517>>0] = $5512;
                  $5518 = ((($4)) + 544|0);
                  $5519 = HEAP8[$5518>>0]|0;
                  __THREW__ = 0;
                  $5520 = (invoke_iii(416,($vinfos80|0),2)|0);
                  $5521 = __THREW__; __THREW__ = 0;
                  $5522 = $5521&1;
                  if ($5522) {
                   label = 607;
                   break L1;
                  }
                  $5523 = ((($5520)) + 18|0);
                  HEAP8[$5523>>0] = $5519;
                  __THREW__ = 0;
                  $5524 = (invoke_iii(416,($vinfos80|0),3)|0);
                  $5525 = __THREW__; __THREW__ = 0;
                  $5526 = $5525&1;
                  if ($5526) {
                   label = 607;
                   break L1;
                  }
                  $5527 = ((($5524)) + 17|0);
                  HEAP8[$5527>>0] = 1;
                  $5528 = ((($4)) + 120|0);
                  $5529 = +HEAPF64[$5528>>3];
                  __THREW__ = 0;
                  $5530 = (invoke_iii(416,($vinfos80|0),3)|0);
                  $5531 = __THREW__; __THREW__ = 0;
                  $5532 = $5531&1;
                  if ($5532) {
                   label = 607;
                   break L1;
                  }
                  $5533 = ((($5530)) + 8|0);
                  HEAPF64[$5533>>3] = $5529;
                  $5534 = ((($4)) + 545|0);
                  $5535 = HEAP8[$5534>>0]|0;
                  __THREW__ = 0;
                  $5536 = (invoke_iii(416,($vinfos80|0),3)|0);
                  $5537 = __THREW__; __THREW__ = 0;
                  $5538 = $5537&1;
                  if ($5538) {
                   label = 607;
                   break L1;
                  }
                  $5539 = ((($5536)) + 19|0);
                  HEAP8[$5539>>0] = $5535;
                  $5540 = ((($4)) + 545|0);
                  $5541 = ((($5540)) + 1|0);
                  $5542 = HEAP8[$5541>>0]|0;
                  __THREW__ = 0;
                  $5543 = (invoke_iii(416,($vinfos80|0),3)|0);
                  $5544 = __THREW__; __THREW__ = 0;
                  $5545 = $5544&1;
                  if ($5545) {
                   label = 607;
                   break L1;
                  }
                  $5546 = ((($5543)) + 19|0);
                  $5547 = ((($5546)) + 1|0);
                  HEAP8[$5547>>0] = $5542;
                  $5548 = ((($4)) + 547|0);
                  $5549 = HEAP8[$5548>>0]|0;
                  __THREW__ = 0;
                  $5550 = (invoke_iii(416,($vinfos80|0),3)|0);
                  $5551 = __THREW__; __THREW__ = 0;
                  $5552 = $5551&1;
                  if ($5552) {
                   label = 607;
                   break L1;
                  }
                  $5553 = ((($5550)) + 18|0);
                  HEAP8[$5553>>0] = $5549;
                  __THREW__ = 0;
                  $5554 = (invoke_iii(416,($vinfos80|0),4)|0);
                  $5555 = __THREW__; __THREW__ = 0;
                  $5556 = $5555&1;
                  if ($5556) {
                   label = 607;
                   break L1;
                  }
                  $5557 = ((($5554)) + 17|0);
                  HEAP8[$5557>>0] = 1;
                  $5558 = ((($4)) + 160|0);
                  $5559 = +HEAPF64[$5558>>3];
                  __THREW__ = 0;
                  $5560 = (invoke_iii(416,($vinfos80|0),4)|0);
                  $5561 = __THREW__; __THREW__ = 0;
                  $5562 = $5561&1;
                  if ($5562) {
                   label = 607;
                   break L1;
                  }
                  $5563 = ((($5560)) + 8|0);
                  HEAPF64[$5563>>3] = $5559;
                  $5564 = ((($4)) + 548|0);
                  $5565 = HEAP8[$5564>>0]|0;
                  __THREW__ = 0;
                  $5566 = (invoke_iii(416,($vinfos80|0),4)|0);
                  $5567 = __THREW__; __THREW__ = 0;
                  $5568 = $5567&1;
                  if ($5568) {
                   label = 607;
                   break L1;
                  }
                  $5569 = ((($5566)) + 19|0);
                  HEAP8[$5569>>0] = $5565;
                  $5570 = ((($4)) + 548|0);
                  $5571 = ((($5570)) + 1|0);
                  $5572 = HEAP8[$5571>>0]|0;
                  __THREW__ = 0;
                  $5573 = (invoke_iii(416,($vinfos80|0),4)|0);
                  $5574 = __THREW__; __THREW__ = 0;
                  $5575 = $5574&1;
                  if ($5575) {
                   label = 607;
                   break L1;
                  }
                  $5576 = ((($5573)) + 19|0);
                  $5577 = ((($5576)) + 1|0);
                  HEAP8[$5577>>0] = $5572;
                  $5578 = ((($4)) + 550|0);
                  $5579 = HEAP8[$5578>>0]|0;
                  __THREW__ = 0;
                  $5580 = (invoke_iii(416,($vinfos80|0),4)|0);
                  $5581 = __THREW__; __THREW__ = 0;
                  $5582 = $5581&1;
                  if ($5582) {
                   label = 607;
                   break L1;
                  }
                  $5583 = ((($5580)) + 18|0);
                  HEAP8[$5583>>0] = $5579;
                  __THREW__ = 0;
                  $5584 = (invoke_iii(416,($vinfos80|0),5)|0);
                  $5585 = __THREW__; __THREW__ = 0;
                  $5586 = $5585&1;
                  if ($5586) {
                   label = 607;
                   break L1;
                  }
                  $5587 = ((($5584)) + 17|0);
                  HEAP8[$5587>>0] = 1;
                  $5588 = ((($4)) + 200|0);
                  $5589 = +HEAPF64[$5588>>3];
                  __THREW__ = 0;
                  $5590 = (invoke_iii(416,($vinfos80|0),5)|0);
                  $5591 = __THREW__; __THREW__ = 0;
                  $5592 = $5591&1;
                  if ($5592) {
                   label = 607;
                   break L1;
                  }
                  $5593 = ((($5590)) + 8|0);
                  HEAPF64[$5593>>3] = $5589;
                  $5594 = ((($4)) + 551|0);
                  $5595 = HEAP8[$5594>>0]|0;
                  __THREW__ = 0;
                  $5596 = (invoke_iii(416,($vinfos80|0),5)|0);
                  $5597 = __THREW__; __THREW__ = 0;
                  $5598 = $5597&1;
                  if ($5598) {
                   label = 607;
                   break L1;
                  }
                  $5599 = ((($5596)) + 19|0);
                  HEAP8[$5599>>0] = $5595;
                  $5600 = ((($4)) + 551|0);
                  $5601 = ((($5600)) + 1|0);
                  $5602 = HEAP8[$5601>>0]|0;
                  __THREW__ = 0;
                  $5603 = (invoke_iii(416,($vinfos80|0),5)|0);
                  $5604 = __THREW__; __THREW__ = 0;
                  $5605 = $5604&1;
                  if ($5605) {
                   label = 607;
                   break L1;
                  }
                  $5606 = ((($5603)) + 19|0);
                  $5607 = ((($5606)) + 1|0);
                  HEAP8[$5607>>0] = $5602;
                  $5608 = ((($4)) + 553|0);
                  $5609 = HEAP8[$5608>>0]|0;
                  __THREW__ = 0;
                  $5610 = (invoke_iii(416,($vinfos80|0),5)|0);
                  $5611 = __THREW__; __THREW__ = 0;
                  $5612 = $5611&1;
                  if ($5612) {
                   label = 607;
                   break L1;
                  }
                  $5613 = ((($5610)) + 18|0);
                  HEAP8[$5613>>0] = $5609;
                  __THREW__ = 0;
                  invoke_vii(417,($vfree81|0),0);
                  $5614 = __THREW__; __THREW__ = 0;
                  $5615 = $5614&1;
                  if ($5615) {
                   label = 607;
                   break L1;
                  }
                  $5616 = $1;
                  $5617 = HEAP32[$5616>>2]|0;
                  $5618 = ((($5617)) + 8|0);
                  $5619 = HEAP32[$5618>>2]|0;
                  __THREW__ = 0;
                  (invoke_iiii($5619|0,($5616|0),($vinfos80|0),($vfree81|0))|0);
                  $5620 = __THREW__; __THREW__ = 0;
                  $5621 = $5620&1;
                  if ($5621) {
                   label = 608;
                   break L1;
                  }
                  __THREW__ = 0;
                  invoke_vi(371,($vfree81|0));
                  $5622 = __THREW__; __THREW__ = 0;
                  $5623 = $5622&1;
                  if ($5623) {
                   label = 607;
                   break L1;
                  }
                  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos80);
                 }
                } while(0);
                $5624 = $ij577;
                $5625 = (($5624) + 1)|0;
                $ij577 = $5625;
               }
              }
             } while(0);
             $5634 = $bgotonextstatement72;
             $5635 = $5634&1;
             if (!($5635)) {
              break;
             }
             $bgotonextstatement82 = 1;
             $5636 = ((($4)) + 360|0);
             $5637 = +HEAPF64[$5636>>3];
             $5638 = ((($4)) + 136|0);
             $5639 = +HEAPF64[$5638>>3];
             $5640 = $5637 * $5639;
             $x238 = $5640;
             $5641 = ((($4)) + 288|0);
             $5642 = +HEAPF64[$5641>>3];
             $5643 = 1.0 * $5642;
             $x239 = $5643;
             $5644 = ((($4)) + 128|0);
             $5645 = +HEAPF64[$5644>>3];
             $5646 = ((($4)) + 360|0);
             $5647 = +HEAPF64[$5646>>3];
             $5648 = $5645 * $5647;
             $5649 = ((($4)) + 136|0);
             $5650 = +HEAPF64[$5649>>3];
             $5651 = -1.0 * $5650;
             $5652 = $x239;
             $5653 = $5651 * $5652;
             $5654 = $5648 + $5653;
             $x240 = $5654;
             $5655 = ((($4)) + 160|0);
             $5656 = +HEAPF64[$5655>>3];
             $5657 = -3.14159265358979 + $5656;
             $5658 = (+__Z5IKabsd($5657));
             $5659 = 3.14159265358979 + $5658;
             $5660 = (+__Z6IKfmoddd($5659,6.2831853071795898));
             $5661 = -3.14159265358979 + $5660;
             HEAPF64[$evalcond31>>3] = $5661;
             $5662 = ((($4)) + 432|0);
             $5663 = +HEAPF64[$5662>>3];
             $5664 = 1.0 + $5663;
             $5665 = ((($evalcond31)) + 8|0);
             HEAPF64[$5665>>3] = $5664;
             $5666 = ((($4)) + 384|0);
             $5667 = +HEAPF64[$5666>>3];
             $5668 = ((($evalcond31)) + 16|0);
             HEAPF64[$5668>>3] = $5667;
             $5669 = ((($4)) + 288|0);
             $5670 = +HEAPF64[$5669>>3];
             $5671 = ((($evalcond31)) + 24|0);
             HEAPF64[$5671>>3] = $5670;
             $5672 = ((($4)) + 360|0);
             $5673 = +HEAPF64[$5672>>3];
             $5674 = ((($evalcond31)) + 32|0);
             HEAPF64[$5674>>3] = $5673;
             $5675 = ((($4)) + 408|0);
             $5676 = +HEAPF64[$5675>>3];
             $5677 = ((($evalcond31)) + 40|0);
             HEAPF64[$5677>>3] = $5676;
             $5678 = $x240;
             $5679 = ((($evalcond31)) + 48|0);
             HEAPF64[$5679>>3] = $5678;
             $5680 = $x240;
             $5681 = ((($evalcond31)) + 56|0);
             HEAPF64[$5681>>3] = $5680;
             $5682 = $x238;
             $5683 = ((($4)) + 128|0);
             $5684 = +HEAPF64[$5683>>3];
             $5685 = ((($4)) + 288|0);
             $5686 = +HEAPF64[$5685>>3];
             $5687 = $5684 * $5686;
             $5688 = $5682 + $5687;
             $5689 = ((($evalcond31)) + 64|0);
             HEAPF64[$5689>>3] = $5688;
             $5690 = ((($4)) + 128|0);
             $5691 = +HEAPF64[$5690>>3];
             $5692 = -1.0 * $5691;
             $5693 = $x239;
             $5694 = $5692 * $5693;
             $5695 = $x238;
             $5696 = -1.0 * $5695;
             $5697 = $5694 + $5696;
             $5698 = ((($evalcond31)) + 72|0);
             HEAPF64[$5698>>3] = $5697;
             $5699 = +HEAPF64[$evalcond31>>3];
             $5700 = (+__Z5IKabsd($5699));
             $5701 = $5700 < 9.9999999999999995E-7;
             L1785: do {
              if ($5701) {
               $5702 = ((($evalcond31)) + 8|0);
               $5703 = +HEAPF64[$5702>>3];
               $5704 = (+__Z5IKabsd($5703));
               $5705 = $5704 < 9.9999999999999995E-7;
               if (!($5705)) {
                break;
               }
               $5706 = ((($evalcond31)) + 16|0);
               $5707 = +HEAPF64[$5706>>3];
               $5708 = (+__Z5IKabsd($5707));
               $5709 = $5708 < 9.9999999999999995E-7;
               if (!($5709)) {
                break;
               }
               $5710 = ((($evalcond31)) + 24|0);
               $5711 = +HEAPF64[$5710>>3];
               $5712 = (+__Z5IKabsd($5711));
               $5713 = $5712 < 9.9999999999999995E-7;
               if (!($5713)) {
                break;
               }
               $5714 = ((($evalcond31)) + 32|0);
               $5715 = +HEAPF64[$5714>>3];
               $5716 = (+__Z5IKabsd($5715));
               $5717 = $5716 < 9.9999999999999995E-7;
               if (!($5717)) {
                break;
               }
               $5718 = ((($evalcond31)) + 40|0);
               $5719 = +HEAPF64[$5718>>3];
               $5720 = (+__Z5IKabsd($5719));
               $5721 = $5720 < 9.9999999999999995E-7;
               if (!($5721)) {
                break;
               }
               $5722 = ((($evalcond31)) + 48|0);
               $5723 = +HEAPF64[$5722>>3];
               $5724 = (+__Z5IKabsd($5723));
               $5725 = $5724 < 9.9999999999999995E-7;
               if (!($5725)) {
                break;
               }
               $5726 = ((($evalcond31)) + 56|0);
               $5727 = +HEAPF64[$5726>>3];
               $5728 = (+__Z5IKabsd($5727));
               $5729 = $5728 < 9.9999999999999995E-7;
               if (!($5729)) {
                break;
               }
               $5730 = ((($evalcond31)) + 64|0);
               $5731 = +HEAPF64[$5730>>3];
               $5732 = (+__Z5IKabsd($5731));
               $5733 = $5732 < 9.9999999999999995E-7;
               if (!($5733)) {
                break;
               }
               $5734 = ((($evalcond31)) + 72|0);
               $5735 = +HEAPF64[$5734>>3];
               $5736 = (+__Z5IKabsd($5735));
               $5737 = $5736 < 9.9999999999999995E-7;
               if (!($5737)) {
                break;
               }
               $bgotonextstatement82 = 0;
               ;HEAP8[$j5valid86>>0]=0|0;
               $5738 = ((($4)) + 553|0);
               HEAP8[$5738>>0] = 1;
               $5739 = ((($4)) + 136|0);
               $5740 = +HEAPF64[$5739>>3];
               $5741 = 1.0 * $5740;
               $x241 = $5741;
               $5742 = ((($4)) + 240|0);
               $5743 = +HEAPF64[$5742>>3];
               $5744 = -1.0 * $5743;
               $5745 = $x241;
               $5746 = $5744 * $5745;
               $5747 = ((($4)) + 128|0);
               $5748 = +HEAPF64[$5747>>3];
               $5749 = ((($4)) + 264|0);
               $5750 = +HEAPF64[$5749>>3];
               $5751 = $5748 * $5750;
               $5752 = $5746 + $5751;
               $5753 = (+__Z5IKabsd($5752));
               $5754 = $5753 < 1.9999999999999999E-6;
               do {
                if ($5754) {
                 $5755 = ((($4)) + 264|0);
                 $5756 = +HEAPF64[$5755>>3];
                 $5757 = -1.0 * $5756;
                 $5758 = $x241;
                 $5759 = $5757 * $5758;
                 $5760 = ((($4)) + 128|0);
                 $5761 = +HEAPF64[$5760>>3];
                 $5762 = -1.0 * $5761;
                 $5763 = ((($4)) + 240|0);
                 $5764 = +HEAPF64[$5763>>3];
                 $5765 = $5762 * $5764;
                 $5766 = $5759 + $5765;
                 $5767 = (+__Z5IKabsd($5766));
                 $5768 = $5767 < 1.9999999999999999E-6;
                 if (!($5768)) {
                  break;
                 }
                 $5769 = ((($4)) + 240|0);
                 $5770 = +HEAPF64[$5769>>3];
                 $5771 = -1.0 * $5770;
                 $5772 = $x241;
                 $5773 = $5771 * $5772;
                 $5774 = ((($4)) + 128|0);
                 $5775 = +HEAPF64[$5774>>3];
                 $5776 = ((($4)) + 264|0);
                 $5777 = +HEAPF64[$5776>>3];
                 $5778 = $5775 * $5777;
                 $5779 = $5773 + $5778;
                 $5780 = (+__Z5IKsqrd($5779));
                 $5781 = ((($4)) + 264|0);
                 $5782 = +HEAPF64[$5781>>3];
                 $5783 = -1.0 * $5782;
                 $5784 = $x241;
                 $5785 = $5783 * $5784;
                 $5786 = ((($4)) + 128|0);
                 $5787 = +HEAPF64[$5786>>3];
                 $5788 = -1.0 * $5787;
                 $5789 = ((($4)) + 240|0);
                 $5790 = +HEAPF64[$5789>>3];
                 $5791 = $5788 * $5790;
                 $5792 = $5785 + $5791;
                 $5793 = (+__Z5IKsqrd($5792));
                 $5794 = $5780 + $5793;
                 $5795 = $5794 - 1.0;
                 $5796 = (+__Z5IKabsd($5795));
                 $5797 = $5796 <= 1.9999999999999999E-6;
                 if ($5797) {
                  break L1785;
                 }
                }
               } while(0);
               $5798 = ((($4)) + 240|0);
               $5799 = +HEAPF64[$5798>>3];
               $5800 = -1.0 * $5799;
               $5801 = $x241;
               $5802 = $5800 * $5801;
               $5803 = ((($4)) + 128|0);
               $5804 = +HEAPF64[$5803>>3];
               $5805 = ((($4)) + 264|0);
               $5806 = +HEAPF64[$5805>>3];
               $5807 = $5804 * $5806;
               $5808 = $5802 + $5807;
               $5809 = ((($4)) + 264|0);
               $5810 = +HEAPF64[$5809>>3];
               $5811 = -1.0 * $5810;
               $5812 = $x241;
               $5813 = $5811 * $5812;
               $5814 = ((($4)) + 128|0);
               $5815 = +HEAPF64[$5814>>3];
               $5816 = -1.0 * $5815;
               $5817 = ((($4)) + 240|0);
               $5818 = +HEAPF64[$5817>>3];
               $5819 = $5816 * $5818;
               $5820 = $5813 + $5819;
               $5821 = (+__Z7IKatan2dd($5808,$5820));
               HEAPF64[$j5array83>>3] = $5821;
               $5822 = +HEAPF64[$j5array83>>3];
               $5823 = (+__Z5IKsind($5822));
               HEAPF64[$sj5array85>>3] = $5823;
               $5824 = +HEAPF64[$j5array83>>3];
               $5825 = (+__Z5IKcosd($5824));
               HEAPF64[$cj5array84>>3] = $5825;
               $5826 = +HEAPF64[$j5array83>>3];
               $5827 = $5826 > 3.14159265358979;
               $5828 = +HEAPF64[$j5array83>>3];
               do {
                if ($5827) {
                 $5829 = $5828 - 6.2831853071795898;
                 HEAPF64[$j5array83>>3] = $5829;
                } else {
                 $5830 = $5828 < -3.14159265358979;
                 if (!($5830)) {
                  break;
                 }
                 $5831 = +HEAPF64[$j5array83>>3];
                 $5832 = $5831 + 6.2831853071795898;
                 HEAPF64[$j5array83>>3] = $5832;
                }
               } while(0);
               HEAP8[$j5valid86>>0] = 1;
               $ij587 = 0;
               while(1) {
                $5833 = $ij587;
                $5834 = ($5833|0)<(1);
                if (!($5834)) {
                 break L1785;
                }
                $5835 = $ij587;
                $5836 = (($j5valid86) + ($5835)|0);
                $5837 = HEAP8[$5836>>0]|0;
                $5838 = $5837&1;
                do {
                 if ($5838) {
                  $5839 = $ij587;
                  $5840 = $5839&255;
                  $5841 = ((($4)) + 551|0);
                  HEAP8[$5841>>0] = $5840;
                  $5842 = ((($4)) + 551|0);
                  $5843 = ((($5842)) + 1|0);
                  HEAP8[$5843>>0] = -1;
                  $5844 = $ij587;
                  $5845 = (($5844) + 1)|0;
                  $iij588 = $5845;
                  L1810: while(1) {
                   $5846 = $iij588;
                   $5847 = ($5846|0)<(1);
                   if (!($5847)) {
                    break;
                   }
                   $5848 = $iij588;
                   $5849 = (($j5valid86) + ($5848)|0);
                   $5850 = HEAP8[$5849>>0]|0;
                   $5851 = $5850&1;
                   do {
                    if ($5851) {
                     $5852 = $ij587;
                     $5853 = (($cj5array84) + ($5852<<3)|0);
                     $5854 = +HEAPF64[$5853>>3];
                     $5855 = $iij588;
                     $5856 = (($cj5array84) + ($5855<<3)|0);
                     $5857 = +HEAPF64[$5856>>3];
                     $5858 = $5854 - $5857;
                     $5859 = (+__Z5IKabsd($5858));
                     $5860 = $5859 < 9.9999999999999995E-7;
                     if (!($5860)) {
                      break;
                     }
                     $5861 = $ij587;
                     $5862 = (($sj5array85) + ($5861<<3)|0);
                     $5863 = +HEAPF64[$5862>>3];
                     $5864 = $iij588;
                     $5865 = (($sj5array85) + ($5864<<3)|0);
                     $5866 = +HEAPF64[$5865>>3];
                     $5867 = $5863 - $5866;
                     $5868 = (+__Z5IKabsd($5867));
                     $5869 = $5868 < 9.9999999999999995E-7;
                     if ($5869) {
                      label = 636;
                      break L1810;
                     }
                    }
                   } while(0);
                   $5876 = $iij588;
                   $5877 = (($5876) + 1)|0;
                   $iij588 = $5877;
                  }
                  if ((label|0) == 636) {
                   label = 0;
                   $5870 = $iij588;
                   $5871 = (($j5valid86) + ($5870)|0);
                   HEAP8[$5871>>0] = 0;
                   $5872 = $iij588;
                   $5873 = $5872&255;
                   $5874 = ((($4)) + 551|0);
                   $5875 = ((($5874)) + 1|0);
                   HEAP8[$5875>>0] = $5873;
                  }
                  $5878 = $ij587;
                  $5879 = (($j5array83) + ($5878<<3)|0);
                  $5880 = +HEAPF64[$5879>>3];
                  $5881 = ((($4)) + 200|0);
                  HEAPF64[$5881>>3] = $5880;
                  $5882 = $ij587;
                  $5883 = (($cj5array84) + ($5882<<3)|0);
                  $5884 = +HEAPF64[$5883>>3];
                  $5885 = ((($4)) + 208|0);
                  HEAPF64[$5885>>3] = $5884;
                  $5886 = $ij587;
                  $5887 = (($sj5array85) + ($5886<<3)|0);
                  $5888 = +HEAPF64[$5887>>3];
                  $5889 = ((($4)) + 216|0);
                  HEAPF64[$5889>>3] = $5888;
                  $5890 = ((($4)) + 200|0);
                  $5891 = +HEAPF64[$5890>>3];
                  $5892 = (+__Z5IKsind($5891));
                  $x242 = $5892;
                  $5893 = ((($4)) + 200|0);
                  $5894 = +HEAPF64[$5893>>3];
                  $5895 = (+__Z5IKcosd($5894));
                  $x243 = $5895;
                  $5896 = ((($4)) + 136|0);
                  $5897 = +HEAPF64[$5896>>3];
                  $5898 = 1.0 * $5897;
                  $x244 = $5898;
                  $5899 = $x242;
                  $5900 = 1.0 * $5899;
                  $x245 = $5900;
                  $5901 = ((($4)) + 136|0);
                  $5902 = +HEAPF64[$5901>>3];
                  $5903 = $x243;
                  $5904 = $5902 * $5903;
                  $x246 = $5904;
                  $5905 = $x243;
                  $5906 = 1.0 * $5905;
                  $x247 = $5906;
                  $5907 = ((($4)) + 128|0);
                  $5908 = +HEAPF64[$5907>>3];
                  $5909 = $x245;
                  $5910 = $5908 * $5909;
                  $x248 = $5910;
                  $5911 = ((($4)) + 312|0);
                  $5912 = +HEAPF64[$5911>>3];
                  $5913 = ((($4)) + 136|0);
                  $5914 = +HEAPF64[$5913>>3];
                  $5915 = $5912 * $5914;
                  $5916 = $x243;
                  $5917 = $5915 + $5916;
                  $5918 = ((($4)) + 128|0);
                  $5919 = +HEAPF64[$5918>>3];
                  $5920 = ((($4)) + 240|0);
                  $5921 = +HEAPF64[$5920>>3];
                  $5922 = $5919 * $5921;
                  $5923 = $5917 + $5922;
                  HEAPF64[$evalcond89>>3] = $5923;
                  $5924 = ((($4)) + 336|0);
                  $5925 = +HEAPF64[$5924>>3];
                  $5926 = ((($4)) + 136|0);
                  $5927 = +HEAPF64[$5926>>3];
                  $5928 = $5925 * $5927;
                  $5929 = ((($4)) + 128|0);
                  $5930 = +HEAPF64[$5929>>3];
                  $5931 = ((($4)) + 264|0);
                  $5932 = +HEAPF64[$5931>>3];
                  $5933 = $5930 * $5932;
                  $5934 = $5928 + $5933;
                  $5935 = $x245;
                  $5936 = -1.0 * $5935;
                  $5937 = $5934 + $5936;
                  $5938 = ((($evalcond89)) + 8|0);
                  HEAPF64[$5938>>3] = $5937;
                  $5939 = ((($4)) + 136|0);
                  $5940 = +HEAPF64[$5939>>3];
                  $5941 = $x242;
                  $5942 = $5940 * $5941;
                  $5943 = ((($4)) + 240|0);
                  $5944 = +HEAPF64[$5943>>3];
                  $5945 = $5942 + $5944;
                  $5946 = ((($4)) + 128|0);
                  $5947 = +HEAPF64[$5946>>3];
                  $5948 = $x243;
                  $5949 = $5947 * $5948;
                  $5950 = $5945 + $5949;
                  $5951 = ((($evalcond89)) + 16|0);
                  HEAPF64[$5951>>3] = $5950;
                  $5952 = ((($4)) + 240|0);
                  $5953 = +HEAPF64[$5952>>3];
                  $5954 = -1.0 * $5953;
                  $5955 = $x244;
                  $5956 = $5954 * $5955;
                  $5957 = ((($4)) + 128|0);
                  $5958 = +HEAPF64[$5957>>3];
                  $5959 = ((($4)) + 312|0);
                  $5960 = +HEAPF64[$5959>>3];
                  $5961 = $5958 * $5960;
                  $5962 = $5956 + $5961;
                  $5963 = $x245;
                  $5964 = -1.0 * $5963;
                  $5965 = $5962 + $5964;
                  $5966 = ((($evalcond89)) + 24|0);
                  HEAPF64[$5966>>3] = $5965;
                  $5967 = ((($4)) + 264|0);
                  $5968 = +HEAPF64[$5967>>3];
                  $5969 = -1.0 * $5968;
                  $5970 = $x244;
                  $5971 = $5969 * $5970;
                  $5972 = ((($4)) + 128|0);
                  $5973 = +HEAPF64[$5972>>3];
                  $5974 = ((($4)) + 336|0);
                  $5975 = +HEAPF64[$5974>>3];
                  $5976 = $5973 * $5975;
                  $5977 = $5971 + $5976;
                  $5978 = $x247;
                  $5979 = -1.0 * $5978;
                  $5980 = $5977 + $5979;
                  $5981 = ((($evalcond89)) + 32|0);
                  HEAPF64[$5981>>3] = $5980;
                  $5982 = $x246;
                  $5983 = $x248;
                  $5984 = -1.0 * $5983;
                  $5985 = $5982 + $5984;
                  $5986 = ((($4)) + 264|0);
                  $5987 = +HEAPF64[$5986>>3];
                  $5988 = $5985 + $5987;
                  $5989 = ((($evalcond89)) + 40|0);
                  HEAPF64[$5989>>3] = $5988;
                  $5990 = $x246;
                  $5991 = $x248;
                  $5992 = -1.0 * $5991;
                  $5993 = $5990 + $5992;
                  $5994 = ((($4)) + 312|0);
                  $5995 = +HEAPF64[$5994>>3];
                  $5996 = $5993 + $5995;
                  $5997 = ((($evalcond89)) + 48|0);
                  HEAPF64[$5997>>3] = $5996;
                  $5998 = $x242;
                  $5999 = -1.0 * $5998;
                  $6000 = $x244;
                  $6001 = $5999 * $6000;
                  $6002 = ((($4)) + 128|0);
                  $6003 = +HEAPF64[$6002>>3];
                  $6004 = -1.0 * $6003;
                  $6005 = $x247;
                  $6006 = $6004 * $6005;
                  $6007 = $6001 + $6006;
                  $6008 = ((($4)) + 336|0);
                  $6009 = +HEAPF64[$6008>>3];
                  $6010 = $6007 + $6009;
                  $6011 = ((($evalcond89)) + 56|0);
                  HEAPF64[$6011>>3] = $6010;
                  $6012 = +HEAPF64[$evalcond89>>3];
                  $6013 = (+__Z5IKabsd($6012));
                  $6014 = $6013 > 5.0000000000000004E-6;
                  if ($6014) {
                   break;
                  }
                  $6015 = ((($evalcond89)) + 8|0);
                  $6016 = +HEAPF64[$6015>>3];
                  $6017 = (+__Z5IKabsd($6016));
                  $6018 = $6017 > 5.0000000000000004E-6;
                  if ($6018) {
                   break;
                  }
                  $6019 = ((($evalcond89)) + 16|0);
                  $6020 = +HEAPF64[$6019>>3];
                  $6021 = (+__Z5IKabsd($6020));
                  $6022 = $6021 > 5.0000000000000004E-6;
                  if ($6022) {
                   break;
                  }
                  $6023 = ((($evalcond89)) + 24|0);
                  $6024 = +HEAPF64[$6023>>3];
                  $6025 = (+__Z5IKabsd($6024));
                  $6026 = $6025 > 5.0000000000000004E-6;
                  if ($6026) {
                   break;
                  }
                  $6027 = ((($evalcond89)) + 32|0);
                  $6028 = +HEAPF64[$6027>>3];
                  $6029 = (+__Z5IKabsd($6028));
                  $6030 = $6029 > 5.0000000000000004E-6;
                  if ($6030) {
                   break;
                  }
                  $6031 = ((($evalcond89)) + 40|0);
                  $6032 = +HEAPF64[$6031>>3];
                  $6033 = (+__Z5IKabsd($6032));
                  $6034 = $6033 > 5.0000000000000004E-6;
                  if ($6034) {
                   break;
                  }
                  $6035 = ((($evalcond89)) + 48|0);
                  $6036 = +HEAPF64[$6035>>3];
                  $6037 = (+__Z5IKabsd($6036));
                  $6038 = $6037 > 5.0000000000000004E-6;
                  if ($6038) {
                   break;
                  }
                  $6039 = ((($evalcond89)) + 56|0);
                  $6040 = +HEAPF64[$6039>>3];
                  $6041 = (+__Z5IKabsd($6040));
                  $6042 = $6041 > 5.0000000000000004E-6;
                  if ($6042) {
                   break;
                  }
                  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos90,6);
                  __THREW__ = 0;
                  $6043 = (invoke_iii(416,($vinfos90|0),0)|0);
                  $6044 = __THREW__; __THREW__ = 0;
                  $6045 = $6044&1;
                  if ($6045) {
                   label = 681;
                   break L1;
                  }
                  $6046 = ((($6043)) + 17|0);
                  HEAP8[$6046>>0] = 1;
                  $6047 = +HEAPF64[$4>>3];
                  __THREW__ = 0;
                  $6048 = (invoke_iii(416,($vinfos90|0),0)|0);
                  $6049 = __THREW__; __THREW__ = 0;
                  $6050 = $6049&1;
                  if ($6050) {
                   label = 681;
                   break L1;
                  }
                  $6051 = ((($6048)) + 8|0);
                  HEAPF64[$6051>>3] = $6047;
                  $6052 = ((($4)) + 536|0);
                  $6053 = HEAP8[$6052>>0]|0;
                  __THREW__ = 0;
                  $6054 = (invoke_iii(416,($vinfos90|0),0)|0);
                  $6055 = __THREW__; __THREW__ = 0;
                  $6056 = $6055&1;
                  if ($6056) {
                   label = 681;
                   break L1;
                  }
                  $6057 = ((($6054)) + 19|0);
                  HEAP8[$6057>>0] = $6053;
                  $6058 = ((($4)) + 536|0);
                  $6059 = ((($6058)) + 1|0);
                  $6060 = HEAP8[$6059>>0]|0;
                  __THREW__ = 0;
                  $6061 = (invoke_iii(416,($vinfos90|0),0)|0);
                  $6062 = __THREW__; __THREW__ = 0;
                  $6063 = $6062&1;
                  if ($6063) {
                   label = 681;
                   break L1;
                  }
                  $6064 = ((($6061)) + 19|0);
                  $6065 = ((($6064)) + 1|0);
                  HEAP8[$6065>>0] = $6060;
                  $6066 = ((($4)) + 538|0);
                  $6067 = HEAP8[$6066>>0]|0;
                  __THREW__ = 0;
                  $6068 = (invoke_iii(416,($vinfos90|0),0)|0);
                  $6069 = __THREW__; __THREW__ = 0;
                  $6070 = $6069&1;
                  if ($6070) {
                   label = 681;
                   break L1;
                  }
                  $6071 = ((($6068)) + 18|0);
                  HEAP8[$6071>>0] = $6067;
                  __THREW__ = 0;
                  $6072 = (invoke_iii(416,($vinfos90|0),1)|0);
                  $6073 = __THREW__; __THREW__ = 0;
                  $6074 = $6073&1;
                  if ($6074) {
                   label = 681;
                   break L1;
                  }
                  $6075 = ((($6072)) + 17|0);
                  HEAP8[$6075>>0] = 1;
                  $6076 = ((($4)) + 40|0);
                  $6077 = +HEAPF64[$6076>>3];
                  __THREW__ = 0;
                  $6078 = (invoke_iii(416,($vinfos90|0),1)|0);
                  $6079 = __THREW__; __THREW__ = 0;
                  $6080 = $6079&1;
                  if ($6080) {
                   label = 681;
                   break L1;
                  }
                  $6081 = ((($6078)) + 8|0);
                  HEAPF64[$6081>>3] = $6077;
                  $6082 = ((($4)) + 539|0);
                  $6083 = HEAP8[$6082>>0]|0;
                  __THREW__ = 0;
                  $6084 = (invoke_iii(416,($vinfos90|0),1)|0);
                  $6085 = __THREW__; __THREW__ = 0;
                  $6086 = $6085&1;
                  if ($6086) {
                   label = 681;
                   break L1;
                  }
                  $6087 = ((($6084)) + 19|0);
                  HEAP8[$6087>>0] = $6083;
                  $6088 = ((($4)) + 539|0);
                  $6089 = ((($6088)) + 1|0);
                  $6090 = HEAP8[$6089>>0]|0;
                  __THREW__ = 0;
                  $6091 = (invoke_iii(416,($vinfos90|0),1)|0);
                  $6092 = __THREW__; __THREW__ = 0;
                  $6093 = $6092&1;
                  if ($6093) {
                   label = 681;
                   break L1;
                  }
                  $6094 = ((($6091)) + 19|0);
                  $6095 = ((($6094)) + 1|0);
                  HEAP8[$6095>>0] = $6090;
                  $6096 = ((($4)) + 541|0);
                  $6097 = HEAP8[$6096>>0]|0;
                  __THREW__ = 0;
                  $6098 = (invoke_iii(416,($vinfos90|0),1)|0);
                  $6099 = __THREW__; __THREW__ = 0;
                  $6100 = $6099&1;
                  if ($6100) {
                   label = 681;
                   break L1;
                  }
                  $6101 = ((($6098)) + 18|0);
                  HEAP8[$6101>>0] = $6097;
                  __THREW__ = 0;
                  $6102 = (invoke_iii(416,($vinfos90|0),2)|0);
                  $6103 = __THREW__; __THREW__ = 0;
                  $6104 = $6103&1;
                  if ($6104) {
                   label = 681;
                   break L1;
                  }
                  $6105 = ((($6102)) + 17|0);
                  HEAP8[$6105>>0] = 1;
                  $6106 = ((($4)) + 80|0);
                  $6107 = +HEAPF64[$6106>>3];
                  __THREW__ = 0;
                  $6108 = (invoke_iii(416,($vinfos90|0),2)|0);
                  $6109 = __THREW__; __THREW__ = 0;
                  $6110 = $6109&1;
                  if ($6110) {
                   label = 681;
                   break L1;
                  }
                  $6111 = ((($6108)) + 8|0);
                  HEAPF64[$6111>>3] = $6107;
                  $6112 = ((($4)) + 542|0);
                  $6113 = HEAP8[$6112>>0]|0;
                  __THREW__ = 0;
                  $6114 = (invoke_iii(416,($vinfos90|0),2)|0);
                  $6115 = __THREW__; __THREW__ = 0;
                  $6116 = $6115&1;
                  if ($6116) {
                   label = 681;
                   break L1;
                  }
                  $6117 = ((($6114)) + 19|0);
                  HEAP8[$6117>>0] = $6113;
                  $6118 = ((($4)) + 542|0);
                  $6119 = ((($6118)) + 1|0);
                  $6120 = HEAP8[$6119>>0]|0;
                  __THREW__ = 0;
                  $6121 = (invoke_iii(416,($vinfos90|0),2)|0);
                  $6122 = __THREW__; __THREW__ = 0;
                  $6123 = $6122&1;
                  if ($6123) {
                   label = 681;
                   break L1;
                  }
                  $6124 = ((($6121)) + 19|0);
                  $6125 = ((($6124)) + 1|0);
                  HEAP8[$6125>>0] = $6120;
                  $6126 = ((($4)) + 544|0);
                  $6127 = HEAP8[$6126>>0]|0;
                  __THREW__ = 0;
                  $6128 = (invoke_iii(416,($vinfos90|0),2)|0);
                  $6129 = __THREW__; __THREW__ = 0;
                  $6130 = $6129&1;
                  if ($6130) {
                   label = 681;
                   break L1;
                  }
                  $6131 = ((($6128)) + 18|0);
                  HEAP8[$6131>>0] = $6127;
                  __THREW__ = 0;
                  $6132 = (invoke_iii(416,($vinfos90|0),3)|0);
                  $6133 = __THREW__; __THREW__ = 0;
                  $6134 = $6133&1;
                  if ($6134) {
                   label = 681;
                   break L1;
                  }
                  $6135 = ((($6132)) + 17|0);
                  HEAP8[$6135>>0] = 1;
                  $6136 = ((($4)) + 120|0);
                  $6137 = +HEAPF64[$6136>>3];
                  __THREW__ = 0;
                  $6138 = (invoke_iii(416,($vinfos90|0),3)|0);
                  $6139 = __THREW__; __THREW__ = 0;
                  $6140 = $6139&1;
                  if ($6140) {
                   label = 681;
                   break L1;
                  }
                  $6141 = ((($6138)) + 8|0);
                  HEAPF64[$6141>>3] = $6137;
                  $6142 = ((($4)) + 545|0);
                  $6143 = HEAP8[$6142>>0]|0;
                  __THREW__ = 0;
                  $6144 = (invoke_iii(416,($vinfos90|0),3)|0);
                  $6145 = __THREW__; __THREW__ = 0;
                  $6146 = $6145&1;
                  if ($6146) {
                   label = 681;
                   break L1;
                  }
                  $6147 = ((($6144)) + 19|0);
                  HEAP8[$6147>>0] = $6143;
                  $6148 = ((($4)) + 545|0);
                  $6149 = ((($6148)) + 1|0);
                  $6150 = HEAP8[$6149>>0]|0;
                  __THREW__ = 0;
                  $6151 = (invoke_iii(416,($vinfos90|0),3)|0);
                  $6152 = __THREW__; __THREW__ = 0;
                  $6153 = $6152&1;
                  if ($6153) {
                   label = 681;
                   break L1;
                  }
                  $6154 = ((($6151)) + 19|0);
                  $6155 = ((($6154)) + 1|0);
                  HEAP8[$6155>>0] = $6150;
                  $6156 = ((($4)) + 547|0);
                  $6157 = HEAP8[$6156>>0]|0;
                  __THREW__ = 0;
                  $6158 = (invoke_iii(416,($vinfos90|0),3)|0);
                  $6159 = __THREW__; __THREW__ = 0;
                  $6160 = $6159&1;
                  if ($6160) {
                   label = 681;
                   break L1;
                  }
                  $6161 = ((($6158)) + 18|0);
                  HEAP8[$6161>>0] = $6157;
                  __THREW__ = 0;
                  $6162 = (invoke_iii(416,($vinfos90|0),4)|0);
                  $6163 = __THREW__; __THREW__ = 0;
                  $6164 = $6163&1;
                  if ($6164) {
                   label = 681;
                   break L1;
                  }
                  $6165 = ((($6162)) + 17|0);
                  HEAP8[$6165>>0] = 1;
                  $6166 = ((($4)) + 160|0);
                  $6167 = +HEAPF64[$6166>>3];
                  __THREW__ = 0;
                  $6168 = (invoke_iii(416,($vinfos90|0),4)|0);
                  $6169 = __THREW__; __THREW__ = 0;
                  $6170 = $6169&1;
                  if ($6170) {
                   label = 681;
                   break L1;
                  }
                  $6171 = ((($6168)) + 8|0);
                  HEAPF64[$6171>>3] = $6167;
                  $6172 = ((($4)) + 548|0);
                  $6173 = HEAP8[$6172>>0]|0;
                  __THREW__ = 0;
                  $6174 = (invoke_iii(416,($vinfos90|0),4)|0);
                  $6175 = __THREW__; __THREW__ = 0;
                  $6176 = $6175&1;
                  if ($6176) {
                   label = 681;
                   break L1;
                  }
                  $6177 = ((($6174)) + 19|0);
                  HEAP8[$6177>>0] = $6173;
                  $6178 = ((($4)) + 548|0);
                  $6179 = ((($6178)) + 1|0);
                  $6180 = HEAP8[$6179>>0]|0;
                  __THREW__ = 0;
                  $6181 = (invoke_iii(416,($vinfos90|0),4)|0);
                  $6182 = __THREW__; __THREW__ = 0;
                  $6183 = $6182&1;
                  if ($6183) {
                   label = 681;
                   break L1;
                  }
                  $6184 = ((($6181)) + 19|0);
                  $6185 = ((($6184)) + 1|0);
                  HEAP8[$6185>>0] = $6180;
                  $6186 = ((($4)) + 550|0);
                  $6187 = HEAP8[$6186>>0]|0;
                  __THREW__ = 0;
                  $6188 = (invoke_iii(416,($vinfos90|0),4)|0);
                  $6189 = __THREW__; __THREW__ = 0;
                  $6190 = $6189&1;
                  if ($6190) {
                   label = 681;
                   break L1;
                  }
                  $6191 = ((($6188)) + 18|0);
                  HEAP8[$6191>>0] = $6187;
                  __THREW__ = 0;
                  $6192 = (invoke_iii(416,($vinfos90|0),5)|0);
                  $6193 = __THREW__; __THREW__ = 0;
                  $6194 = $6193&1;
                  if ($6194) {
                   label = 681;
                   break L1;
                  }
                  $6195 = ((($6192)) + 17|0);
                  HEAP8[$6195>>0] = 1;
                  $6196 = ((($4)) + 200|0);
                  $6197 = +HEAPF64[$6196>>3];
                  __THREW__ = 0;
                  $6198 = (invoke_iii(416,($vinfos90|0),5)|0);
                  $6199 = __THREW__; __THREW__ = 0;
                  $6200 = $6199&1;
                  if ($6200) {
                   label = 681;
                   break L1;
                  }
                  $6201 = ((($6198)) + 8|0);
                  HEAPF64[$6201>>3] = $6197;
                  $6202 = ((($4)) + 551|0);
                  $6203 = HEAP8[$6202>>0]|0;
                  __THREW__ = 0;
                  $6204 = (invoke_iii(416,($vinfos90|0),5)|0);
                  $6205 = __THREW__; __THREW__ = 0;
                  $6206 = $6205&1;
                  if ($6206) {
                   label = 681;
                   break L1;
                  }
                  $6207 = ((($6204)) + 19|0);
                  HEAP8[$6207>>0] = $6203;
                  $6208 = ((($4)) + 551|0);
                  $6209 = ((($6208)) + 1|0);
                  $6210 = HEAP8[$6209>>0]|0;
                  __THREW__ = 0;
                  $6211 = (invoke_iii(416,($vinfos90|0),5)|0);
                  $6212 = __THREW__; __THREW__ = 0;
                  $6213 = $6212&1;
                  if ($6213) {
                   label = 681;
                   break L1;
                  }
                  $6214 = ((($6211)) + 19|0);
                  $6215 = ((($6214)) + 1|0);
                  HEAP8[$6215>>0] = $6210;
                  $6216 = ((($4)) + 553|0);
                  $6217 = HEAP8[$6216>>0]|0;
                  __THREW__ = 0;
                  $6218 = (invoke_iii(416,($vinfos90|0),5)|0);
                  $6219 = __THREW__; __THREW__ = 0;
                  $6220 = $6219&1;
                  if ($6220) {
                   label = 681;
                   break L1;
                  }
                  $6221 = ((($6218)) + 18|0);
                  HEAP8[$6221>>0] = $6217;
                  __THREW__ = 0;
                  invoke_vii(417,($vfree91|0),0);
                  $6222 = __THREW__; __THREW__ = 0;
                  $6223 = $6222&1;
                  if ($6223) {
                   label = 681;
                   break L1;
                  }
                  $6224 = $1;
                  $6225 = HEAP32[$6224>>2]|0;
                  $6226 = ((($6225)) + 8|0);
                  $6227 = HEAP32[$6226>>2]|0;
                  __THREW__ = 0;
                  (invoke_iiii($6227|0,($6224|0),($vinfos90|0),($vfree91|0))|0);
                  $6228 = __THREW__; __THREW__ = 0;
                  $6229 = $6228&1;
                  if ($6229) {
                   label = 682;
                   break L1;
                  }
                  __THREW__ = 0;
                  invoke_vi(371,($vfree91|0));
                  $6230 = __THREW__; __THREW__ = 0;
                  $6231 = $6230&1;
                  if ($6231) {
                   label = 681;
                   break L1;
                  }
                  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos90);
                 }
                } while(0);
                $6232 = $ij587;
                $6233 = (($6232) + 1)|0;
                $ij587 = $6233;
               }
              }
             } while(0);
             $6242 = $bgotonextstatement82;
             $6243 = $6242&1;
             if (!($6243)) {
              break;
             }
             $bgotonextstatement92 = 1;
             $6244 = ((($4)) + 432|0);
             $6245 = +HEAPF64[$6244>>3];
             $6246 = ((($4)) + 168|0);
             $6247 = +HEAPF64[$6246>>3];
             $6248 = -1.0 * $6247;
             $6249 = $6245 + $6248;
             $x249 = $6249;
             $6250 = ((($4)) + 176|0);
             $6251 = +HEAPF64[$6250>>3];
             $6252 = -1.0 * $6251;
             $6253 = ((($4)) + 288|0);
             $6254 = +HEAPF64[$6253>>3];
             $6255 = $6252 + $6254;
             $x250 = $6255;
             $6256 = ((($4)) + 168|0);
             $6257 = +HEAPF64[$6256>>3];
             $6258 = 1.0 * $6257;
             $x251 = $6258;
             $6259 = ((($4)) + 176|0);
             $6260 = +HEAPF64[$6259>>3];
             $6261 = 1.0 * $6260;
             $x252 = $6261;
             $6262 = ((($4)) + 120|0);
             $6263 = +HEAPF64[$6262>>3];
             $6264 = (+__Z5IKabsd($6263));
             $6265 = 3.14159265358979 + $6264;
             $6266 = (+__Z6IKfmoddd($6265,6.2831853071795898));
             $6267 = -3.14159265358979 + $6266;
             HEAPF64[$evalcond31>>3] = $6267;
             $6268 = $x249;
             $6269 = ((($evalcond31)) + 8|0);
             HEAPF64[$6269>>3] = $6268;
             $6270 = $x249;
             $6271 = ((($evalcond31)) + 16|0);
             HEAPF64[$6271>>3] = $6270;
             $6272 = $x250;
             $6273 = ((($evalcond31)) + 24|0);
             HEAPF64[$6273>>3] = $6272;
             $6274 = ((($4)) + 360|0);
             $6275 = +HEAPF64[$6274>>3];
             $6276 = ((($evalcond31)) + 32|0);
             HEAPF64[$6276>>3] = $6275;
             $6277 = $x250;
             $6278 = ((($evalcond31)) + 40|0);
             HEAPF64[$6278>>3] = $6277;
             $6279 = ((($4)) + 168|0);
             $6280 = +HEAPF64[$6279>>3];
             $6281 = ((($4)) + 288|0);
             $6282 = +HEAPF64[$6281>>3];
             $6283 = $6280 * $6282;
             $6284 = ((($4)) + 432|0);
             $6285 = +HEAPF64[$6284>>3];
             $6286 = -1.0 * $6285;
             $6287 = $x252;
             $6288 = $6286 * $6287;
             $6289 = $6283 + $6288;
             $6290 = ((($evalcond31)) + 48|0);
             HEAPF64[$6290>>3] = $6289;
             $6291 = ((($4)) + 384|0);
             $6292 = +HEAPF64[$6291>>3];
             $6293 = -1.0 * $6292;
             $6294 = $x251;
             $6295 = $6293 * $6294;
             $6296 = ((($4)) + 240|0);
             $6297 = +HEAPF64[$6296>>3];
             $6298 = -1.0 * $6297;
             $6299 = $x252;
             $6300 = $6298 * $6299;
             $6301 = $6295 + $6300;
             $6302 = ((($evalcond31)) + 56|0);
             HEAPF64[$6302>>3] = $6301;
             $6303 = ((($4)) + 408|0);
             $6304 = +HEAPF64[$6303>>3];
             $6305 = -1.0 * $6304;
             $6306 = $x251;
             $6307 = $6305 * $6306;
             $6308 = ((($4)) + 264|0);
             $6309 = +HEAPF64[$6308>>3];
             $6310 = -1.0 * $6309;
             $6311 = $x252;
             $6312 = $6310 * $6311;
             $6313 = $6307 + $6312;
             $6314 = ((($evalcond31)) + 64|0);
             HEAPF64[$6314>>3] = $6313;
             $6315 = ((($4)) + 432|0);
             $6316 = +HEAPF64[$6315>>3];
             $6317 = -1.0 * $6316;
             $6318 = $x251;
             $6319 = $6317 * $6318;
             $6320 = 1.0 + $6319;
             $6321 = ((($4)) + 288|0);
             $6322 = +HEAPF64[$6321>>3];
             $6323 = -1.0 * $6322;
             $6324 = $x252;
             $6325 = $6323 * $6324;
             $6326 = $6320 + $6325;
             $6327 = ((($evalcond31)) + 72|0);
             HEAPF64[$6327>>3] = $6326;
             $6328 = +HEAPF64[$evalcond31>>3];
             $6329 = (+__Z5IKabsd($6328));
             $6330 = $6329 < 9.9999999999999995E-7;
             L1864: do {
              if ($6330) {
               $6331 = ((($evalcond31)) + 8|0);
               $6332 = +HEAPF64[$6331>>3];
               $6333 = (+__Z5IKabsd($6332));
               $6334 = $6333 < 9.9999999999999995E-7;
               if (!($6334)) {
                break;
               }
               $6335 = ((($evalcond31)) + 16|0);
               $6336 = +HEAPF64[$6335>>3];
               $6337 = (+__Z5IKabsd($6336));
               $6338 = $6337 < 9.9999999999999995E-7;
               if (!($6338)) {
                break;
               }
               $6339 = ((($evalcond31)) + 24|0);
               $6340 = +HEAPF64[$6339>>3];
               $6341 = (+__Z5IKabsd($6340));
               $6342 = $6341 < 9.9999999999999995E-7;
               if (!($6342)) {
                break;
               }
               $6343 = ((($evalcond31)) + 32|0);
               $6344 = +HEAPF64[$6343>>3];
               $6345 = (+__Z5IKabsd($6344));
               $6346 = $6345 < 9.9999999999999995E-7;
               if (!($6346)) {
                break;
               }
               $6347 = ((($evalcond31)) + 40|0);
               $6348 = +HEAPF64[$6347>>3];
               $6349 = (+__Z5IKabsd($6348));
               $6350 = $6349 < 9.9999999999999995E-7;
               if (!($6350)) {
                break;
               }
               $6351 = ((($evalcond31)) + 48|0);
               $6352 = +HEAPF64[$6351>>3];
               $6353 = (+__Z5IKabsd($6352));
               $6354 = $6353 < 9.9999999999999995E-7;
               if (!($6354)) {
                break;
               }
               $6355 = ((($evalcond31)) + 56|0);
               $6356 = +HEAPF64[$6355>>3];
               $6357 = (+__Z5IKabsd($6356));
               $6358 = $6357 < 9.9999999999999995E-7;
               if (!($6358)) {
                break;
               }
               $6359 = ((($evalcond31)) + 64|0);
               $6360 = +HEAPF64[$6359>>3];
               $6361 = (+__Z5IKabsd($6360));
               $6362 = $6361 < 9.9999999999999995E-7;
               if (!($6362)) {
                break;
               }
               $6363 = ((($evalcond31)) + 72|0);
               $6364 = +HEAPF64[$6363>>3];
               $6365 = (+__Z5IKabsd($6364));
               $6366 = $6365 < 9.9999999999999995E-7;
               if (!($6366)) {
                break;
               }
               $bgotonextstatement92 = 0;
               ;HEAP8[$j5valid96>>0]=0|0;
               $6367 = ((($4)) + 553|0);
               HEAP8[$6367>>0] = 1;
               $6368 = ((($4)) + 312|0);
               $6369 = +HEAPF64[$6368>>3];
               $6370 = (+__Z5IKabsd($6369));
               $6371 = $6370 < 1.9999999999999999E-6;
               do {
                if ($6371) {
                 $6372 = ((($4)) + 336|0);
                 $6373 = +HEAPF64[$6372>>3];
                 $6374 = (+__Z5IKabsd($6373));
                 $6375 = $6374 < 1.9999999999999999E-6;
                 if (!($6375)) {
                  break;
                 }
                 $6376 = ((($4)) + 312|0);
                 $6377 = +HEAPF64[$6376>>3];
                 $6378 = (+__Z5IKsqrd($6377));
                 $6379 = ((($4)) + 336|0);
                 $6380 = +HEAPF64[$6379>>3];
                 $6381 = (+__Z5IKsqrd($6380));
                 $6382 = $6378 + $6381;
                 $6383 = $6382 - 1.0;
                 $6384 = (+__Z5IKabsd($6383));
                 $6385 = $6384 <= 1.9999999999999999E-6;
                 if ($6385) {
                  break L1864;
                 }
                }
               } while(0);
               $6386 = ((($4)) + 312|0);
               $6387 = +HEAPF64[$6386>>3];
               $6388 = ((($4)) + 336|0);
               $6389 = +HEAPF64[$6388>>3];
               $6390 = (+__Z7IKatan2dd($6387,$6389));
               HEAPF64[$j5array93>>3] = $6390;
               $6391 = +HEAPF64[$j5array93>>3];
               $6392 = (+__Z5IKsind($6391));
               HEAPF64[$sj5array95>>3] = $6392;
               $6393 = +HEAPF64[$j5array93>>3];
               $6394 = (+__Z5IKcosd($6393));
               HEAPF64[$cj5array94>>3] = $6394;
               $6395 = +HEAPF64[$j5array93>>3];
               $6396 = $6395 > 3.14159265358979;
               $6397 = +HEAPF64[$j5array93>>3];
               do {
                if ($6396) {
                 $6398 = $6397 - 6.2831853071795898;
                 HEAPF64[$j5array93>>3] = $6398;
                } else {
                 $6399 = $6397 < -3.14159265358979;
                 if (!($6399)) {
                  break;
                 }
                 $6400 = +HEAPF64[$j5array93>>3];
                 $6401 = $6400 + 6.2831853071795898;
                 HEAPF64[$j5array93>>3] = $6401;
                }
               } while(0);
               HEAP8[$j5valid96>>0] = 1;
               $ij597 = 0;
               while(1) {
                $6402 = $ij597;
                $6403 = ($6402|0)<(1);
                if (!($6403)) {
                 break L1864;
                }
                $6404 = $ij597;
                $6405 = (($j5valid96) + ($6404)|0);
                $6406 = HEAP8[$6405>>0]|0;
                $6407 = $6406&1;
                do {
                 if ($6407) {
                  $6408 = $ij597;
                  $6409 = $6408&255;
                  $6410 = ((($4)) + 551|0);
                  HEAP8[$6410>>0] = $6409;
                  $6411 = ((($4)) + 551|0);
                  $6412 = ((($6411)) + 1|0);
                  HEAP8[$6412>>0] = -1;
                  $6413 = $ij597;
                  $6414 = (($6413) + 1)|0;
                  $iij598 = $6414;
                  L1889: while(1) {
                   $6415 = $iij598;
                   $6416 = ($6415|0)<(1);
                   if (!($6416)) {
                    break;
                   }
                   $6417 = $iij598;
                   $6418 = (($j5valid96) + ($6417)|0);
                   $6419 = HEAP8[$6418>>0]|0;
                   $6420 = $6419&1;
                   do {
                    if ($6420) {
                     $6421 = $ij597;
                     $6422 = (($cj5array94) + ($6421<<3)|0);
                     $6423 = +HEAPF64[$6422>>3];
                     $6424 = $iij598;
                     $6425 = (($cj5array94) + ($6424<<3)|0);
                     $6426 = +HEAPF64[$6425>>3];
                     $6427 = $6423 - $6426;
                     $6428 = (+__Z5IKabsd($6427));
                     $6429 = $6428 < 9.9999999999999995E-7;
                     if (!($6429)) {
                      break;
                     }
                     $6430 = $ij597;
                     $6431 = (($sj5array95) + ($6430<<3)|0);
                     $6432 = +HEAPF64[$6431>>3];
                     $6433 = $iij598;
                     $6434 = (($sj5array95) + ($6433<<3)|0);
                     $6435 = +HEAPF64[$6434>>3];
                     $6436 = $6432 - $6435;
                     $6437 = (+__Z5IKabsd($6436));
                     $6438 = $6437 < 9.9999999999999995E-7;
                     if ($6438) {
                      label = 710;
                      break L1889;
                     }
                    }
                   } while(0);
                   $6445 = $iij598;
                   $6446 = (($6445) + 1)|0;
                   $iij598 = $6446;
                  }
                  if ((label|0) == 710) {
                   label = 0;
                   $6439 = $iij598;
                   $6440 = (($j5valid96) + ($6439)|0);
                   HEAP8[$6440>>0] = 0;
                   $6441 = $iij598;
                   $6442 = $6441&255;
                   $6443 = ((($4)) + 551|0);
                   $6444 = ((($6443)) + 1|0);
                   HEAP8[$6444>>0] = $6442;
                  }
                  $6447 = $ij597;
                  $6448 = (($j5array93) + ($6447<<3)|0);
                  $6449 = +HEAPF64[$6448>>3];
                  $6450 = ((($4)) + 200|0);
                  HEAPF64[$6450>>3] = $6449;
                  $6451 = $ij597;
                  $6452 = (($cj5array94) + ($6451<<3)|0);
                  $6453 = +HEAPF64[$6452>>3];
                  $6454 = ((($4)) + 208|0);
                  HEAPF64[$6454>>3] = $6453;
                  $6455 = $ij597;
                  $6456 = (($sj5array95) + ($6455<<3)|0);
                  $6457 = +HEAPF64[$6456>>3];
                  $6458 = ((($4)) + 216|0);
                  HEAPF64[$6458>>3] = $6457;
                  $6459 = ((($4)) + 200|0);
                  $6460 = +HEAPF64[$6459>>3];
                  $6461 = (+__Z5IKcosd($6460));
                  $x253 = $6461;
                  $6462 = ((($4)) + 200|0);
                  $6463 = +HEAPF64[$6462>>3];
                  $6464 = (+__Z5IKsind($6463));
                  $x254 = $6464;
                  $6465 = ((($4)) + 288|0);
                  $6466 = +HEAPF64[$6465>>3];
                  $6467 = 1.0 * $6466;
                  $x255 = $6467;
                  $6468 = $x253;
                  $6469 = 1.0 * $6468;
                  $x256 = $6469;
                  $6470 = ((($4)) + 288|0);
                  $6471 = +HEAPF64[$6470>>3];
                  $6472 = $x253;
                  $6473 = $6471 * $6472;
                  $6474 = ((($4)) + 384|0);
                  $6475 = +HEAPF64[$6474>>3];
                  $6476 = $6473 + $6475;
                  HEAPF64[$evalcond99>>3] = $6476;
                  $6477 = ((($4)) + 312|0);
                  $6478 = +HEAPF64[$6477>>3];
                  $6479 = $x254;
                  $6480 = -1.0 * $6479;
                  $6481 = $6478 + $6480;
                  $6482 = ((($evalcond99)) + 8|0);
                  HEAPF64[$6482>>3] = $6481;
                  $6483 = ((($4)) + 336|0);
                  $6484 = +HEAPF64[$6483>>3];
                  $6485 = $x256;
                  $6486 = -1.0 * $6485;
                  $6487 = $6484 + $6486;
                  $6488 = ((($evalcond99)) + 16|0);
                  HEAPF64[$6488>>3] = $6487;
                  $6489 = ((($4)) + 432|0);
                  $6490 = +HEAPF64[$6489>>3];
                  $6491 = $x254;
                  $6492 = $6490 * $6491;
                  $6493 = ((($4)) + 264|0);
                  $6494 = +HEAPF64[$6493>>3];
                  $6495 = $6492 + $6494;
                  $6496 = ((($evalcond99)) + 24|0);
                  HEAPF64[$6496>>3] = $6495;
                  $6497 = $x254;
                  $6498 = -1.0 * $6497;
                  $6499 = $x255;
                  $6500 = $6498 * $6499;
                  $6501 = ((($4)) + 408|0);
                  $6502 = +HEAPF64[$6501>>3];
                  $6503 = $6500 + $6502;
                  $6504 = ((($evalcond99)) + 32|0);
                  HEAPF64[$6504>>3] = $6503;
                  $6505 = ((($4)) + 240|0);
                  $6506 = +HEAPF64[$6505>>3];
                  $6507 = ((($4)) + 432|0);
                  $6508 = +HEAPF64[$6507>>3];
                  $6509 = -1.0 * $6508;
                  $6510 = $x256;
                  $6511 = $6509 * $6510;
                  $6512 = $6506 + $6511;
                  $6513 = ((($evalcond99)) + 40|0);
                  HEAPF64[$6513>>3] = $6512;
                  $6514 = ((($4)) + 408|0);
                  $6515 = +HEAPF64[$6514>>3];
                  $6516 = -1.0 * $6515;
                  $6517 = $x255;
                  $6518 = $6516 * $6517;
                  $6519 = ((($4)) + 264|0);
                  $6520 = +HEAPF64[$6519>>3];
                  $6521 = ((($4)) + 432|0);
                  $6522 = +HEAPF64[$6521>>3];
                  $6523 = $6520 * $6522;
                  $6524 = $6518 + $6523;
                  $6525 = $x254;
                  $6526 = $6524 + $6525;
                  $6527 = ((($evalcond99)) + 48|0);
                  HEAPF64[$6527>>3] = $6526;
                  $6528 = ((($4)) + 240|0);
                  $6529 = +HEAPF64[$6528>>3];
                  $6530 = ((($4)) + 432|0);
                  $6531 = +HEAPF64[$6530>>3];
                  $6532 = $6529 * $6531;
                  $6533 = ((($4)) + 384|0);
                  $6534 = +HEAPF64[$6533>>3];
                  $6535 = -1.0 * $6534;
                  $6536 = $x255;
                  $6537 = $6535 * $6536;
                  $6538 = $6532 + $6537;
                  $6539 = $x256;
                  $6540 = -1.0 * $6539;
                  $6541 = $6538 + $6540;
                  $6542 = ((($evalcond99)) + 56|0);
                  HEAPF64[$6542>>3] = $6541;
                  $6543 = +HEAPF64[$evalcond99>>3];
                  $6544 = (+__Z5IKabsd($6543));
                  $6545 = $6544 > 5.0000000000000004E-6;
                  if ($6545) {
                   break;
                  }
                  $6546 = ((($evalcond99)) + 8|0);
                  $6547 = +HEAPF64[$6546>>3];
                  $6548 = (+__Z5IKabsd($6547));
                  $6549 = $6548 > 5.0000000000000004E-6;
                  if ($6549) {
                   break;
                  }
                  $6550 = ((($evalcond99)) + 16|0);
                  $6551 = +HEAPF64[$6550>>3];
                  $6552 = (+__Z5IKabsd($6551));
                  $6553 = $6552 > 5.0000000000000004E-6;
                  if ($6553) {
                   break;
                  }
                  $6554 = ((($evalcond99)) + 24|0);
                  $6555 = +HEAPF64[$6554>>3];
                  $6556 = (+__Z5IKabsd($6555));
                  $6557 = $6556 > 5.0000000000000004E-6;
                  if ($6557) {
                   break;
                  }
                  $6558 = ((($evalcond99)) + 32|0);
                  $6559 = +HEAPF64[$6558>>3];
                  $6560 = (+__Z5IKabsd($6559));
                  $6561 = $6560 > 5.0000000000000004E-6;
                  if ($6561) {
                   break;
                  }
                  $6562 = ((($evalcond99)) + 40|0);
                  $6563 = +HEAPF64[$6562>>3];
                  $6564 = (+__Z5IKabsd($6563));
                  $6565 = $6564 > 5.0000000000000004E-6;
                  if ($6565) {
                   break;
                  }
                  $6566 = ((($evalcond99)) + 48|0);
                  $6567 = +HEAPF64[$6566>>3];
                  $6568 = (+__Z5IKabsd($6567));
                  $6569 = $6568 > 5.0000000000000004E-6;
                  if ($6569) {
                   break;
                  }
                  $6570 = ((($evalcond99)) + 56|0);
                  $6571 = +HEAPF64[$6570>>3];
                  $6572 = (+__Z5IKabsd($6571));
                  $6573 = $6572 > 5.0000000000000004E-6;
                  if ($6573) {
                   break;
                  }
                  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos100,6);
                  __THREW__ = 0;
                  $6574 = (invoke_iii(416,($vinfos100|0),0)|0);
                  $6575 = __THREW__; __THREW__ = 0;
                  $6576 = $6575&1;
                  if ($6576) {
                   label = 755;
                   break L1;
                  }
                  $6577 = ((($6574)) + 17|0);
                  HEAP8[$6577>>0] = 1;
                  $6578 = +HEAPF64[$4>>3];
                  __THREW__ = 0;
                  $6579 = (invoke_iii(416,($vinfos100|0),0)|0);
                  $6580 = __THREW__; __THREW__ = 0;
                  $6581 = $6580&1;
                  if ($6581) {
                   label = 755;
                   break L1;
                  }
                  $6582 = ((($6579)) + 8|0);
                  HEAPF64[$6582>>3] = $6578;
                  $6583 = ((($4)) + 536|0);
                  $6584 = HEAP8[$6583>>0]|0;
                  __THREW__ = 0;
                  $6585 = (invoke_iii(416,($vinfos100|0),0)|0);
                  $6586 = __THREW__; __THREW__ = 0;
                  $6587 = $6586&1;
                  if ($6587) {
                   label = 755;
                   break L1;
                  }
                  $6588 = ((($6585)) + 19|0);
                  HEAP8[$6588>>0] = $6584;
                  $6589 = ((($4)) + 536|0);
                  $6590 = ((($6589)) + 1|0);
                  $6591 = HEAP8[$6590>>0]|0;
                  __THREW__ = 0;
                  $6592 = (invoke_iii(416,($vinfos100|0),0)|0);
                  $6593 = __THREW__; __THREW__ = 0;
                  $6594 = $6593&1;
                  if ($6594) {
                   label = 755;
                   break L1;
                  }
                  $6595 = ((($6592)) + 19|0);
                  $6596 = ((($6595)) + 1|0);
                  HEAP8[$6596>>0] = $6591;
                  $6597 = ((($4)) + 538|0);
                  $6598 = HEAP8[$6597>>0]|0;
                  __THREW__ = 0;
                  $6599 = (invoke_iii(416,($vinfos100|0),0)|0);
                  $6600 = __THREW__; __THREW__ = 0;
                  $6601 = $6600&1;
                  if ($6601) {
                   label = 755;
                   break L1;
                  }
                  $6602 = ((($6599)) + 18|0);
                  HEAP8[$6602>>0] = $6598;
                  __THREW__ = 0;
                  $6603 = (invoke_iii(416,($vinfos100|0),1)|0);
                  $6604 = __THREW__; __THREW__ = 0;
                  $6605 = $6604&1;
                  if ($6605) {
                   label = 755;
                   break L1;
                  }
                  $6606 = ((($6603)) + 17|0);
                  HEAP8[$6606>>0] = 1;
                  $6607 = ((($4)) + 40|0);
                  $6608 = +HEAPF64[$6607>>3];
                  __THREW__ = 0;
                  $6609 = (invoke_iii(416,($vinfos100|0),1)|0);
                  $6610 = __THREW__; __THREW__ = 0;
                  $6611 = $6610&1;
                  if ($6611) {
                   label = 755;
                   break L1;
                  }
                  $6612 = ((($6609)) + 8|0);
                  HEAPF64[$6612>>3] = $6608;
                  $6613 = ((($4)) + 539|0);
                  $6614 = HEAP8[$6613>>0]|0;
                  __THREW__ = 0;
                  $6615 = (invoke_iii(416,($vinfos100|0),1)|0);
                  $6616 = __THREW__; __THREW__ = 0;
                  $6617 = $6616&1;
                  if ($6617) {
                   label = 755;
                   break L1;
                  }
                  $6618 = ((($6615)) + 19|0);
                  HEAP8[$6618>>0] = $6614;
                  $6619 = ((($4)) + 539|0);
                  $6620 = ((($6619)) + 1|0);
                  $6621 = HEAP8[$6620>>0]|0;
                  __THREW__ = 0;
                  $6622 = (invoke_iii(416,($vinfos100|0),1)|0);
                  $6623 = __THREW__; __THREW__ = 0;
                  $6624 = $6623&1;
                  if ($6624) {
                   label = 755;
                   break L1;
                  }
                  $6625 = ((($6622)) + 19|0);
                  $6626 = ((($6625)) + 1|0);
                  HEAP8[$6626>>0] = $6621;
                  $6627 = ((($4)) + 541|0);
                  $6628 = HEAP8[$6627>>0]|0;
                  __THREW__ = 0;
                  $6629 = (invoke_iii(416,($vinfos100|0),1)|0);
                  $6630 = __THREW__; __THREW__ = 0;
                  $6631 = $6630&1;
                  if ($6631) {
                   label = 755;
                   break L1;
                  }
                  $6632 = ((($6629)) + 18|0);
                  HEAP8[$6632>>0] = $6628;
                  __THREW__ = 0;
                  $6633 = (invoke_iii(416,($vinfos100|0),2)|0);
                  $6634 = __THREW__; __THREW__ = 0;
                  $6635 = $6634&1;
                  if ($6635) {
                   label = 755;
                   break L1;
                  }
                  $6636 = ((($6633)) + 17|0);
                  HEAP8[$6636>>0] = 1;
                  $6637 = ((($4)) + 80|0);
                  $6638 = +HEAPF64[$6637>>3];
                  __THREW__ = 0;
                  $6639 = (invoke_iii(416,($vinfos100|0),2)|0);
                  $6640 = __THREW__; __THREW__ = 0;
                  $6641 = $6640&1;
                  if ($6641) {
                   label = 755;
                   break L1;
                  }
                  $6642 = ((($6639)) + 8|0);
                  HEAPF64[$6642>>3] = $6638;
                  $6643 = ((($4)) + 542|0);
                  $6644 = HEAP8[$6643>>0]|0;
                  __THREW__ = 0;
                  $6645 = (invoke_iii(416,($vinfos100|0),2)|0);
                  $6646 = __THREW__; __THREW__ = 0;
                  $6647 = $6646&1;
                  if ($6647) {
                   label = 755;
                   break L1;
                  }
                  $6648 = ((($6645)) + 19|0);
                  HEAP8[$6648>>0] = $6644;
                  $6649 = ((($4)) + 542|0);
                  $6650 = ((($6649)) + 1|0);
                  $6651 = HEAP8[$6650>>0]|0;
                  __THREW__ = 0;
                  $6652 = (invoke_iii(416,($vinfos100|0),2)|0);
                  $6653 = __THREW__; __THREW__ = 0;
                  $6654 = $6653&1;
                  if ($6654) {
                   label = 755;
                   break L1;
                  }
                  $6655 = ((($6652)) + 19|0);
                  $6656 = ((($6655)) + 1|0);
                  HEAP8[$6656>>0] = $6651;
                  $6657 = ((($4)) + 544|0);
                  $6658 = HEAP8[$6657>>0]|0;
                  __THREW__ = 0;
                  $6659 = (invoke_iii(416,($vinfos100|0),2)|0);
                  $6660 = __THREW__; __THREW__ = 0;
                  $6661 = $6660&1;
                  if ($6661) {
                   label = 755;
                   break L1;
                  }
                  $6662 = ((($6659)) + 18|0);
                  HEAP8[$6662>>0] = $6658;
                  __THREW__ = 0;
                  $6663 = (invoke_iii(416,($vinfos100|0),3)|0);
                  $6664 = __THREW__; __THREW__ = 0;
                  $6665 = $6664&1;
                  if ($6665) {
                   label = 755;
                   break L1;
                  }
                  $6666 = ((($6663)) + 17|0);
                  HEAP8[$6666>>0] = 1;
                  $6667 = ((($4)) + 120|0);
                  $6668 = +HEAPF64[$6667>>3];
                  __THREW__ = 0;
                  $6669 = (invoke_iii(416,($vinfos100|0),3)|0);
                  $6670 = __THREW__; __THREW__ = 0;
                  $6671 = $6670&1;
                  if ($6671) {
                   label = 755;
                   break L1;
                  }
                  $6672 = ((($6669)) + 8|0);
                  HEAPF64[$6672>>3] = $6668;
                  $6673 = ((($4)) + 545|0);
                  $6674 = HEAP8[$6673>>0]|0;
                  __THREW__ = 0;
                  $6675 = (invoke_iii(416,($vinfos100|0),3)|0);
                  $6676 = __THREW__; __THREW__ = 0;
                  $6677 = $6676&1;
                  if ($6677) {
                   label = 755;
                   break L1;
                  }
                  $6678 = ((($6675)) + 19|0);
                  HEAP8[$6678>>0] = $6674;
                  $6679 = ((($4)) + 545|0);
                  $6680 = ((($6679)) + 1|0);
                  $6681 = HEAP8[$6680>>0]|0;
                  __THREW__ = 0;
                  $6682 = (invoke_iii(416,($vinfos100|0),3)|0);
                  $6683 = __THREW__; __THREW__ = 0;
                  $6684 = $6683&1;
                  if ($6684) {
                   label = 755;
                   break L1;
                  }
                  $6685 = ((($6682)) + 19|0);
                  $6686 = ((($6685)) + 1|0);
                  HEAP8[$6686>>0] = $6681;
                  $6687 = ((($4)) + 547|0);
                  $6688 = HEAP8[$6687>>0]|0;
                  __THREW__ = 0;
                  $6689 = (invoke_iii(416,($vinfos100|0),3)|0);
                  $6690 = __THREW__; __THREW__ = 0;
                  $6691 = $6690&1;
                  if ($6691) {
                   label = 755;
                   break L1;
                  }
                  $6692 = ((($6689)) + 18|0);
                  HEAP8[$6692>>0] = $6688;
                  __THREW__ = 0;
                  $6693 = (invoke_iii(416,($vinfos100|0),4)|0);
                  $6694 = __THREW__; __THREW__ = 0;
                  $6695 = $6694&1;
                  if ($6695) {
                   label = 755;
                   break L1;
                  }
                  $6696 = ((($6693)) + 17|0);
                  HEAP8[$6696>>0] = 1;
                  $6697 = ((($4)) + 160|0);
                  $6698 = +HEAPF64[$6697>>3];
                  __THREW__ = 0;
                  $6699 = (invoke_iii(416,($vinfos100|0),4)|0);
                  $6700 = __THREW__; __THREW__ = 0;
                  $6701 = $6700&1;
                  if ($6701) {
                   label = 755;
                   break L1;
                  }
                  $6702 = ((($6699)) + 8|0);
                  HEAPF64[$6702>>3] = $6698;
                  $6703 = ((($4)) + 548|0);
                  $6704 = HEAP8[$6703>>0]|0;
                  __THREW__ = 0;
                  $6705 = (invoke_iii(416,($vinfos100|0),4)|0);
                  $6706 = __THREW__; __THREW__ = 0;
                  $6707 = $6706&1;
                  if ($6707) {
                   label = 755;
                   break L1;
                  }
                  $6708 = ((($6705)) + 19|0);
                  HEAP8[$6708>>0] = $6704;
                  $6709 = ((($4)) + 548|0);
                  $6710 = ((($6709)) + 1|0);
                  $6711 = HEAP8[$6710>>0]|0;
                  __THREW__ = 0;
                  $6712 = (invoke_iii(416,($vinfos100|0),4)|0);
                  $6713 = __THREW__; __THREW__ = 0;
                  $6714 = $6713&1;
                  if ($6714) {
                   label = 755;
                   break L1;
                  }
                  $6715 = ((($6712)) + 19|0);
                  $6716 = ((($6715)) + 1|0);
                  HEAP8[$6716>>0] = $6711;
                  $6717 = ((($4)) + 550|0);
                  $6718 = HEAP8[$6717>>0]|0;
                  __THREW__ = 0;
                  $6719 = (invoke_iii(416,($vinfos100|0),4)|0);
                  $6720 = __THREW__; __THREW__ = 0;
                  $6721 = $6720&1;
                  if ($6721) {
                   label = 755;
                   break L1;
                  }
                  $6722 = ((($6719)) + 18|0);
                  HEAP8[$6722>>0] = $6718;
                  __THREW__ = 0;
                  $6723 = (invoke_iii(416,($vinfos100|0),5)|0);
                  $6724 = __THREW__; __THREW__ = 0;
                  $6725 = $6724&1;
                  if ($6725) {
                   label = 755;
                   break L1;
                  }
                  $6726 = ((($6723)) + 17|0);
                  HEAP8[$6726>>0] = 1;
                  $6727 = ((($4)) + 200|0);
                  $6728 = +HEAPF64[$6727>>3];
                  __THREW__ = 0;
                  $6729 = (invoke_iii(416,($vinfos100|0),5)|0);
                  $6730 = __THREW__; __THREW__ = 0;
                  $6731 = $6730&1;
                  if ($6731) {
                   label = 755;
                   break L1;
                  }
                  $6732 = ((($6729)) + 8|0);
                  HEAPF64[$6732>>3] = $6728;
                  $6733 = ((($4)) + 551|0);
                  $6734 = HEAP8[$6733>>0]|0;
                  __THREW__ = 0;
                  $6735 = (invoke_iii(416,($vinfos100|0),5)|0);
                  $6736 = __THREW__; __THREW__ = 0;
                  $6737 = $6736&1;
                  if ($6737) {
                   label = 755;
                   break L1;
                  }
                  $6738 = ((($6735)) + 19|0);
                  HEAP8[$6738>>0] = $6734;
                  $6739 = ((($4)) + 551|0);
                  $6740 = ((($6739)) + 1|0);
                  $6741 = HEAP8[$6740>>0]|0;
                  __THREW__ = 0;
                  $6742 = (invoke_iii(416,($vinfos100|0),5)|0);
                  $6743 = __THREW__; __THREW__ = 0;
                  $6744 = $6743&1;
                  if ($6744) {
                   label = 755;
                   break L1;
                  }
                  $6745 = ((($6742)) + 19|0);
                  $6746 = ((($6745)) + 1|0);
                  HEAP8[$6746>>0] = $6741;
                  $6747 = ((($4)) + 553|0);
                  $6748 = HEAP8[$6747>>0]|0;
                  __THREW__ = 0;
                  $6749 = (invoke_iii(416,($vinfos100|0),5)|0);
                  $6750 = __THREW__; __THREW__ = 0;
                  $6751 = $6750&1;
                  if ($6751) {
                   label = 755;
                   break L1;
                  }
                  $6752 = ((($6749)) + 18|0);
                  HEAP8[$6752>>0] = $6748;
                  __THREW__ = 0;
                  invoke_vii(417,($vfree101|0),0);
                  $6753 = __THREW__; __THREW__ = 0;
                  $6754 = $6753&1;
                  if ($6754) {
                   label = 755;
                   break L1;
                  }
                  $6755 = $1;
                  $6756 = HEAP32[$6755>>2]|0;
                  $6757 = ((($6756)) + 8|0);
                  $6758 = HEAP32[$6757>>2]|0;
                  __THREW__ = 0;
                  (invoke_iiii($6758|0,($6755|0),($vinfos100|0),($vfree101|0))|0);
                  $6759 = __THREW__; __THREW__ = 0;
                  $6760 = $6759&1;
                  if ($6760) {
                   label = 756;
                   break L1;
                  }
                  __THREW__ = 0;
                  invoke_vi(371,($vfree101|0));
                  $6761 = __THREW__; __THREW__ = 0;
                  $6762 = $6761&1;
                  if ($6762) {
                   label = 755;
                   break L1;
                  }
                  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos100);
                 }
                } while(0);
                $6763 = $ij597;
                $6764 = (($6763) + 1)|0;
                $ij597 = $6764;
               }
              }
             } while(0);
             $6773 = $bgotonextstatement92;
             $6774 = $6773&1;
             if (!($6774)) {
              break;
             }
             $bgotonextstatement102 = 1;
             $6775 = ((($4)) + 432|0);
             $6776 = +HEAPF64[$6775>>3];
             $6777 = ((($4)) + 168|0);
             $6778 = +HEAPF64[$6777>>3];
             $6779 = -1.0 * $6778;
             $6780 = $6776 + $6779;
             $x257 = $6780;
             $6781 = ((($4)) + 168|0);
             $6782 = +HEAPF64[$6781>>3];
             $6783 = 1.0 * $6782;
             $x258 = $6783;
             $6784 = ((($4)) + 176|0);
             $6785 = +HEAPF64[$6784>>3];
             $6786 = 1.0 * $6785;
             $x259 = $6786;
             $6787 = ((($4)) + 120|0);
             $6788 = +HEAPF64[$6787>>3];
             $6789 = -3.14159265358979 + $6788;
             $6790 = (+__Z5IKabsd($6789));
             $6791 = 3.14159265358979 + $6790;
             $6792 = (+__Z6IKfmoddd($6791,6.2831853071795898));
             $6793 = -3.14159265358979 + $6792;
             HEAPF64[$evalcond31>>3] = $6793;
             $6794 = $x257;
             $6795 = ((($evalcond31)) + 8|0);
             HEAPF64[$6795>>3] = $6794;
             $6796 = $x257;
             $6797 = ((($evalcond31)) + 16|0);
             HEAPF64[$6797>>3] = $6796;
             $6798 = ((($4)) + 176|0);
             $6799 = +HEAPF64[$6798>>3];
             $6800 = ((($4)) + 288|0);
             $6801 = +HEAPF64[$6800>>3];
             $6802 = $6799 + $6801;
             $6803 = ((($evalcond31)) + 24|0);
             HEAPF64[$6803>>3] = $6802;
             $6804 = ((($4)) + 360|0);
             $6805 = +HEAPF64[$6804>>3];
             $6806 = ((($evalcond31)) + 32|0);
             HEAPF64[$6806>>3] = $6805;
             $6807 = ((($4)) + 288|0);
             $6808 = +HEAPF64[$6807>>3];
             $6809 = -1.0 * $6808;
             $6810 = $x259;
             $6811 = -1.0 * $6810;
             $6812 = $6809 + $6811;
             $6813 = ((($evalcond31)) + 40|0);
             HEAPF64[$6813>>3] = $6812;
             $6814 = ((($4)) + 432|0);
             $6815 = +HEAPF64[$6814>>3];
             $6816 = -1.0 * $6815;
             $6817 = $x259;
             $6818 = $6816 * $6817;
             $6819 = ((($4)) + 288|0);
             $6820 = +HEAPF64[$6819>>3];
             $6821 = -1.0 * $6820;
             $6822 = $x258;
             $6823 = $6821 * $6822;
             $6824 = $6818 + $6823;
             $6825 = ((($evalcond31)) + 48|0);
             HEAPF64[$6825>>3] = $6824;
             $6826 = ((($4)) + 240|0);
             $6827 = +HEAPF64[$6826>>3];
             $6828 = ((($4)) + 176|0);
             $6829 = +HEAPF64[$6828>>3];
             $6830 = $6827 * $6829;
             $6831 = ((($4)) + 384|0);
             $6832 = +HEAPF64[$6831>>3];
             $6833 = -1.0 * $6832;
             $6834 = $x258;
             $6835 = $6833 * $6834;
             $6836 = $6830 + $6835;
             $6837 = ((($evalcond31)) + 56|0);
             HEAPF64[$6837>>3] = $6836;
             $6838 = ((($4)) + 408|0);
             $6839 = +HEAPF64[$6838>>3];
             $6840 = -1.0 * $6839;
             $6841 = $x258;
             $6842 = $6840 * $6841;
             $6843 = ((($4)) + 264|0);
             $6844 = +HEAPF64[$6843>>3];
             $6845 = ((($4)) + 176|0);
             $6846 = +HEAPF64[$6845>>3];
             $6847 = $6844 * $6846;
             $6848 = $6842 + $6847;
             $6849 = ((($evalcond31)) + 64|0);
             HEAPF64[$6849>>3] = $6848;
             $6850 = ((($4)) + 288|0);
             $6851 = +HEAPF64[$6850>>3];
             $6852 = ((($4)) + 176|0);
             $6853 = +HEAPF64[$6852>>3];
             $6854 = $6851 * $6853;
             $6855 = 1.0 + $6854;
             $6856 = ((($4)) + 432|0);
             $6857 = +HEAPF64[$6856>>3];
             $6858 = -1.0 * $6857;
             $6859 = $x258;
             $6860 = $6858 * $6859;
             $6861 = $6855 + $6860;
             $6862 = ((($evalcond31)) + 72|0);
             HEAPF64[$6862>>3] = $6861;
             $6863 = +HEAPF64[$evalcond31>>3];
             $6864 = (+__Z5IKabsd($6863));
             $6865 = $6864 < 9.9999999999999995E-7;
             L1943: do {
              if ($6865) {
               $6866 = ((($evalcond31)) + 8|0);
               $6867 = +HEAPF64[$6866>>3];
               $6868 = (+__Z5IKabsd($6867));
               $6869 = $6868 < 9.9999999999999995E-7;
               if (!($6869)) {
                break;
               }
               $6870 = ((($evalcond31)) + 16|0);
               $6871 = +HEAPF64[$6870>>3];
               $6872 = (+__Z5IKabsd($6871));
               $6873 = $6872 < 9.9999999999999995E-7;
               if (!($6873)) {
                break;
               }
               $6874 = ((($evalcond31)) + 24|0);
               $6875 = +HEAPF64[$6874>>3];
               $6876 = (+__Z5IKabsd($6875));
               $6877 = $6876 < 9.9999999999999995E-7;
               if (!($6877)) {
                break;
               }
               $6878 = ((($evalcond31)) + 32|0);
               $6879 = +HEAPF64[$6878>>3];
               $6880 = (+__Z5IKabsd($6879));
               $6881 = $6880 < 9.9999999999999995E-7;
               if (!($6881)) {
                break;
               }
               $6882 = ((($evalcond31)) + 40|0);
               $6883 = +HEAPF64[$6882>>3];
               $6884 = (+__Z5IKabsd($6883));
               $6885 = $6884 < 9.9999999999999995E-7;
               if (!($6885)) {
                break;
               }
               $6886 = ((($evalcond31)) + 48|0);
               $6887 = +HEAPF64[$6886>>3];
               $6888 = (+__Z5IKabsd($6887));
               $6889 = $6888 < 9.9999999999999995E-7;
               if (!($6889)) {
                break;
               }
               $6890 = ((($evalcond31)) + 56|0);
               $6891 = +HEAPF64[$6890>>3];
               $6892 = (+__Z5IKabsd($6891));
               $6893 = $6892 < 9.9999999999999995E-7;
               if (!($6893)) {
                break;
               }
               $6894 = ((($evalcond31)) + 64|0);
               $6895 = +HEAPF64[$6894>>3];
               $6896 = (+__Z5IKabsd($6895));
               $6897 = $6896 < 9.9999999999999995E-7;
               if (!($6897)) {
                break;
               }
               $6898 = ((($evalcond31)) + 72|0);
               $6899 = +HEAPF64[$6898>>3];
               $6900 = (+__Z5IKabsd($6899));
               $6901 = $6900 < 9.9999999999999995E-7;
               if (!($6901)) {
                break;
               }
               $bgotonextstatement102 = 0;
               ;HEAP8[$j5valid106>>0]=0|0;
               $6902 = ((($4)) + 553|0);
               HEAP8[$6902>>0] = 1;
               $6903 = ((($4)) + 408|0);
               $6904 = +HEAPF64[$6903>>3];
               $6905 = -1.0 * $6904;
               $6906 = ((($4)) + 384|0);
               $6907 = +HEAPF64[$6906>>3];
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x260,$6905,$6907,1.9999999999999999E-6);
               $6908 = ((($x260)) + 8|0);
               $6909 = HEAP8[$6908>>0]|0;
               $6910 = $6909&1;
               if (!($6910)) {
                break;
               }
               $6911 = ((($4)) + 288|0);
               $6912 = +HEAPF64[$6911>>3];
               $6913 = (+__Z6IKsignd($6912));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x261,$6913,-1);
               $6914 = ((($x261)) + 8|0);
               $6915 = HEAP8[$6914>>0]|0;
               $6916 = $6915&1;
               if (!($6916)) {
                break;
               }
               $6917 = +HEAPF64[$x260>>3];
               $6918 = -1.5707963267949001 + $6917;
               $6919 = +HEAPF64[$x261>>3];
               $6920 = 1.5707963267949001 * $6919;
               $6921 = $6918 + $6920;
               HEAPF64[$j5array103>>3] = $6921;
               $6922 = +HEAPF64[$j5array103>>3];
               $6923 = (+__Z5IKsind($6922));
               HEAPF64[$sj5array105>>3] = $6923;
               $6924 = +HEAPF64[$j5array103>>3];
               $6925 = (+__Z5IKcosd($6924));
               HEAPF64[$cj5array104>>3] = $6925;
               $6926 = +HEAPF64[$j5array103>>3];
               $6927 = $6926 > 3.14159265358979;
               $6928 = +HEAPF64[$j5array103>>3];
               do {
                if ($6927) {
                 $6929 = $6928 - 6.2831853071795898;
                 HEAPF64[$j5array103>>3] = $6929;
                } else {
                 $6930 = $6928 < -3.14159265358979;
                 if (!($6930)) {
                  break;
                 }
                 $6931 = +HEAPF64[$j5array103>>3];
                 $6932 = $6931 + 6.2831853071795898;
                 HEAPF64[$j5array103>>3] = $6932;
                }
               } while(0);
               HEAP8[$j5valid106>>0] = 1;
               $ij5107 = 0;
               while(1) {
                $6933 = $ij5107;
                $6934 = ($6933|0)<(1);
                if (!($6934)) {
                 break L1943;
                }
                $6935 = $ij5107;
                $6936 = (($j5valid106) + ($6935)|0);
                $6937 = HEAP8[$6936>>0]|0;
                $6938 = $6937&1;
                do {
                 if ($6938) {
                  $6939 = $ij5107;
                  $6940 = $6939&255;
                  $6941 = ((($4)) + 551|0);
                  HEAP8[$6941>>0] = $6940;
                  $6942 = ((($4)) + 551|0);
                  $6943 = ((($6942)) + 1|0);
                  HEAP8[$6943>>0] = -1;
                  $6944 = $ij5107;
                  $6945 = (($6944) + 1)|0;
                  $iij5108 = $6945;
                  L1966: while(1) {
                   $6946 = $iij5108;
                   $6947 = ($6946|0)<(1);
                   if (!($6947)) {
                    break;
                   }
                   $6948 = $iij5108;
                   $6949 = (($j5valid106) + ($6948)|0);
                   $6950 = HEAP8[$6949>>0]|0;
                   $6951 = $6950&1;
                   do {
                    if ($6951) {
                     $6952 = $ij5107;
                     $6953 = (($cj5array104) + ($6952<<3)|0);
                     $6954 = +HEAPF64[$6953>>3];
                     $6955 = $iij5108;
                     $6956 = (($cj5array104) + ($6955<<3)|0);
                     $6957 = +HEAPF64[$6956>>3];
                     $6958 = $6954 - $6957;
                     $6959 = (+__Z5IKabsd($6958));
                     $6960 = $6959 < 9.9999999999999995E-7;
                     if (!($6960)) {
                      break;
                     }
                     $6961 = $ij5107;
                     $6962 = (($sj5array105) + ($6961<<3)|0);
                     $6963 = +HEAPF64[$6962>>3];
                     $6964 = $iij5108;
                     $6965 = (($sj5array105) + ($6964<<3)|0);
                     $6966 = +HEAPF64[$6965>>3];
                     $6967 = $6963 - $6966;
                     $6968 = (+__Z5IKabsd($6967));
                     $6969 = $6968 < 9.9999999999999995E-7;
                     if ($6969) {
                      label = 783;
                      break L1966;
                     }
                    }
                   } while(0);
                   $6976 = $iij5108;
                   $6977 = (($6976) + 1)|0;
                   $iij5108 = $6977;
                  }
                  if ((label|0) == 783) {
                   label = 0;
                   $6970 = $iij5108;
                   $6971 = (($j5valid106) + ($6970)|0);
                   HEAP8[$6971>>0] = 0;
                   $6972 = $iij5108;
                   $6973 = $6972&255;
                   $6974 = ((($4)) + 551|0);
                   $6975 = ((($6974)) + 1|0);
                   HEAP8[$6975>>0] = $6973;
                  }
                  $6978 = $ij5107;
                  $6979 = (($j5array103) + ($6978<<3)|0);
                  $6980 = +HEAPF64[$6979>>3];
                  $6981 = ((($4)) + 200|0);
                  HEAPF64[$6981>>3] = $6980;
                  $6982 = $ij5107;
                  $6983 = (($cj5array104) + ($6982<<3)|0);
                  $6984 = +HEAPF64[$6983>>3];
                  $6985 = ((($4)) + 208|0);
                  HEAPF64[$6985>>3] = $6984;
                  $6986 = $ij5107;
                  $6987 = (($sj5array105) + ($6986<<3)|0);
                  $6988 = +HEAPF64[$6987>>3];
                  $6989 = ((($4)) + 216|0);
                  HEAPF64[$6989>>3] = $6988;
                  $6990 = ((($4)) + 200|0);
                  $6991 = +HEAPF64[$6990>>3];
                  $6992 = (+__Z5IKsind($6991));
                  $x262 = $6992;
                  $6993 = ((($4)) + 200|0);
                  $6994 = +HEAPF64[$6993>>3];
                  $6995 = (+__Z5IKcosd($6994));
                  $x263 = $6995;
                  $6996 = ((($4)) + 240|0);
                  $6997 = +HEAPF64[$6996>>3];
                  $6998 = 1.0 * $6997;
                  $x264 = $6998;
                  $6999 = ((($4)) + 264|0);
                  $7000 = +HEAPF64[$6999>>3];
                  $7001 = 1.0 * $7000;
                  $x265 = $7001;
                  $7002 = $x263;
                  $7003 = 1.0 * $7002;
                  $x266 = $7003;
                  $7004 = ((($4)) + 408|0);
                  $7005 = +HEAPF64[$7004>>3];
                  $7006 = ((($4)) + 288|0);
                  $7007 = +HEAPF64[$7006>>3];
                  $7008 = $x262;
                  $7009 = $7007 * $7008;
                  $7010 = $7005 + $7009;
                  HEAPF64[$evalcond109>>3] = $7010;
                  $7011 = ((($4)) + 384|0);
                  $7012 = +HEAPF64[$7011>>3];
                  $7013 = ((($4)) + 288|0);
                  $7014 = +HEAPF64[$7013>>3];
                  $7015 = -1.0 * $7014;
                  $7016 = $x266;
                  $7017 = $7015 * $7016;
                  $7018 = $7012 + $7017;
                  $7019 = ((($evalcond109)) + 8|0);
                  HEAPF64[$7019>>3] = $7018;
                  $7020 = $x262;
                  $7021 = -1.0 * $7020;
                  $7022 = ((($4)) + 312|0);
                  $7023 = +HEAPF64[$7022>>3];
                  $7024 = -1.0 * $7023;
                  $7025 = $7021 + $7024;
                  $7026 = ((($evalcond109)) + 16|0);
                  HEAPF64[$7026>>3] = $7025;
                  $7027 = ((($4)) + 336|0);
                  $7028 = +HEAPF64[$7027>>3];
                  $7029 = -1.0 * $7028;
                  $7030 = $x266;
                  $7031 = -1.0 * $7030;
                  $7032 = $7029 + $7031;
                  $7033 = ((($evalcond109)) + 24|0);
                  HEAPF64[$7033>>3] = $7032;
                  $7034 = ((($4)) + 432|0);
                  $7035 = +HEAPF64[$7034>>3];
                  $7036 = $x262;
                  $7037 = $7035 * $7036;
                  $7038 = $x265;
                  $7039 = -1.0 * $7038;
                  $7040 = $7037 + $7039;
                  $7041 = ((($evalcond109)) + 32|0);
                  HEAPF64[$7041>>3] = $7040;
                  $7042 = ((($4)) + 432|0);
                  $7043 = +HEAPF64[$7042>>3];
                  $7044 = -1.0 * $7043;
                  $7045 = $x266;
                  $7046 = $7044 * $7045;
                  $7047 = $x264;
                  $7048 = -1.0 * $7047;
                  $7049 = $7046 + $7048;
                  $7050 = ((($evalcond109)) + 40|0);
                  HEAPF64[$7050>>3] = $7049;
                  $7051 = ((($4)) + 432|0);
                  $7052 = +HEAPF64[$7051>>3];
                  $7053 = -1.0 * $7052;
                  $7054 = $x265;
                  $7055 = $7053 * $7054;
                  $7056 = $x262;
                  $7057 = $7055 + $7056;
                  $7058 = ((($4)) + 288|0);
                  $7059 = +HEAPF64[$7058>>3];
                  $7060 = ((($4)) + 408|0);
                  $7061 = +HEAPF64[$7060>>3];
                  $7062 = $7059 * $7061;
                  $7063 = $7057 + $7062;
                  $7064 = ((($evalcond109)) + 48|0);
                  HEAPF64[$7064>>3] = $7063;
                  $7065 = ((($4)) + 432|0);
                  $7066 = +HEAPF64[$7065>>3];
                  $7067 = -1.0 * $7066;
                  $7068 = $x264;
                  $7069 = $7067 * $7068;
                  $7070 = ((($4)) + 288|0);
                  $7071 = +HEAPF64[$7070>>3];
                  $7072 = ((($4)) + 384|0);
                  $7073 = +HEAPF64[$7072>>3];
                  $7074 = $7071 * $7073;
                  $7075 = $7069 + $7074;
                  $7076 = $x266;
                  $7077 = -1.0 * $7076;
                  $7078 = $7075 + $7077;
                  $7079 = ((($evalcond109)) + 56|0);
                  HEAPF64[$7079>>3] = $7078;
                  $7080 = +HEAPF64[$evalcond109>>3];
                  $7081 = (+__Z5IKabsd($7080));
                  $7082 = $7081 > 5.0000000000000004E-6;
                  if ($7082) {
                   break;
                  }
                  $7083 = ((($evalcond109)) + 8|0);
                  $7084 = +HEAPF64[$7083>>3];
                  $7085 = (+__Z5IKabsd($7084));
                  $7086 = $7085 > 5.0000000000000004E-6;
                  if ($7086) {
                   break;
                  }
                  $7087 = ((($evalcond109)) + 16|0);
                  $7088 = +HEAPF64[$7087>>3];
                  $7089 = (+__Z5IKabsd($7088));
                  $7090 = $7089 > 5.0000000000000004E-6;
                  if ($7090) {
                   break;
                  }
                  $7091 = ((($evalcond109)) + 24|0);
                  $7092 = +HEAPF64[$7091>>3];
                  $7093 = (+__Z5IKabsd($7092));
                  $7094 = $7093 > 5.0000000000000004E-6;
                  if ($7094) {
                   break;
                  }
                  $7095 = ((($evalcond109)) + 32|0);
                  $7096 = +HEAPF64[$7095>>3];
                  $7097 = (+__Z5IKabsd($7096));
                  $7098 = $7097 > 5.0000000000000004E-6;
                  if ($7098) {
                   break;
                  }
                  $7099 = ((($evalcond109)) + 40|0);
                  $7100 = +HEAPF64[$7099>>3];
                  $7101 = (+__Z5IKabsd($7100));
                  $7102 = $7101 > 5.0000000000000004E-6;
                  if ($7102) {
                   break;
                  }
                  $7103 = ((($evalcond109)) + 48|0);
                  $7104 = +HEAPF64[$7103>>3];
                  $7105 = (+__Z5IKabsd($7104));
                  $7106 = $7105 > 5.0000000000000004E-6;
                  if ($7106) {
                   break;
                  }
                  $7107 = ((($evalcond109)) + 56|0);
                  $7108 = +HEAPF64[$7107>>3];
                  $7109 = (+__Z5IKabsd($7108));
                  $7110 = $7109 > 5.0000000000000004E-6;
                  if ($7110) {
                   break;
                  }
                  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos110,6);
                  __THREW__ = 0;
                  $7111 = (invoke_iii(416,($vinfos110|0),0)|0);
                  $7112 = __THREW__; __THREW__ = 0;
                  $7113 = $7112&1;
                  if ($7113) {
                   label = 828;
                   break L1;
                  }
                  $7114 = ((($7111)) + 17|0);
                  HEAP8[$7114>>0] = 1;
                  $7115 = +HEAPF64[$4>>3];
                  __THREW__ = 0;
                  $7116 = (invoke_iii(416,($vinfos110|0),0)|0);
                  $7117 = __THREW__; __THREW__ = 0;
                  $7118 = $7117&1;
                  if ($7118) {
                   label = 828;
                   break L1;
                  }
                  $7119 = ((($7116)) + 8|0);
                  HEAPF64[$7119>>3] = $7115;
                  $7120 = ((($4)) + 536|0);
                  $7121 = HEAP8[$7120>>0]|0;
                  __THREW__ = 0;
                  $7122 = (invoke_iii(416,($vinfos110|0),0)|0);
                  $7123 = __THREW__; __THREW__ = 0;
                  $7124 = $7123&1;
                  if ($7124) {
                   label = 828;
                   break L1;
                  }
                  $7125 = ((($7122)) + 19|0);
                  HEAP8[$7125>>0] = $7121;
                  $7126 = ((($4)) + 536|0);
                  $7127 = ((($7126)) + 1|0);
                  $7128 = HEAP8[$7127>>0]|0;
                  __THREW__ = 0;
                  $7129 = (invoke_iii(416,($vinfos110|0),0)|0);
                  $7130 = __THREW__; __THREW__ = 0;
                  $7131 = $7130&1;
                  if ($7131) {
                   label = 828;
                   break L1;
                  }
                  $7132 = ((($7129)) + 19|0);
                  $7133 = ((($7132)) + 1|0);
                  HEAP8[$7133>>0] = $7128;
                  $7134 = ((($4)) + 538|0);
                  $7135 = HEAP8[$7134>>0]|0;
                  __THREW__ = 0;
                  $7136 = (invoke_iii(416,($vinfos110|0),0)|0);
                  $7137 = __THREW__; __THREW__ = 0;
                  $7138 = $7137&1;
                  if ($7138) {
                   label = 828;
                   break L1;
                  }
                  $7139 = ((($7136)) + 18|0);
                  HEAP8[$7139>>0] = $7135;
                  __THREW__ = 0;
                  $7140 = (invoke_iii(416,($vinfos110|0),1)|0);
                  $7141 = __THREW__; __THREW__ = 0;
                  $7142 = $7141&1;
                  if ($7142) {
                   label = 828;
                   break L1;
                  }
                  $7143 = ((($7140)) + 17|0);
                  HEAP8[$7143>>0] = 1;
                  $7144 = ((($4)) + 40|0);
                  $7145 = +HEAPF64[$7144>>3];
                  __THREW__ = 0;
                  $7146 = (invoke_iii(416,($vinfos110|0),1)|0);
                  $7147 = __THREW__; __THREW__ = 0;
                  $7148 = $7147&1;
                  if ($7148) {
                   label = 828;
                   break L1;
                  }
                  $7149 = ((($7146)) + 8|0);
                  HEAPF64[$7149>>3] = $7145;
                  $7150 = ((($4)) + 539|0);
                  $7151 = HEAP8[$7150>>0]|0;
                  __THREW__ = 0;
                  $7152 = (invoke_iii(416,($vinfos110|0),1)|0);
                  $7153 = __THREW__; __THREW__ = 0;
                  $7154 = $7153&1;
                  if ($7154) {
                   label = 828;
                   break L1;
                  }
                  $7155 = ((($7152)) + 19|0);
                  HEAP8[$7155>>0] = $7151;
                  $7156 = ((($4)) + 539|0);
                  $7157 = ((($7156)) + 1|0);
                  $7158 = HEAP8[$7157>>0]|0;
                  __THREW__ = 0;
                  $7159 = (invoke_iii(416,($vinfos110|0),1)|0);
                  $7160 = __THREW__; __THREW__ = 0;
                  $7161 = $7160&1;
                  if ($7161) {
                   label = 828;
                   break L1;
                  }
                  $7162 = ((($7159)) + 19|0);
                  $7163 = ((($7162)) + 1|0);
                  HEAP8[$7163>>0] = $7158;
                  $7164 = ((($4)) + 541|0);
                  $7165 = HEAP8[$7164>>0]|0;
                  __THREW__ = 0;
                  $7166 = (invoke_iii(416,($vinfos110|0),1)|0);
                  $7167 = __THREW__; __THREW__ = 0;
                  $7168 = $7167&1;
                  if ($7168) {
                   label = 828;
                   break L1;
                  }
                  $7169 = ((($7166)) + 18|0);
                  HEAP8[$7169>>0] = $7165;
                  __THREW__ = 0;
                  $7170 = (invoke_iii(416,($vinfos110|0),2)|0);
                  $7171 = __THREW__; __THREW__ = 0;
                  $7172 = $7171&1;
                  if ($7172) {
                   label = 828;
                   break L1;
                  }
                  $7173 = ((($7170)) + 17|0);
                  HEAP8[$7173>>0] = 1;
                  $7174 = ((($4)) + 80|0);
                  $7175 = +HEAPF64[$7174>>3];
                  __THREW__ = 0;
                  $7176 = (invoke_iii(416,($vinfos110|0),2)|0);
                  $7177 = __THREW__; __THREW__ = 0;
                  $7178 = $7177&1;
                  if ($7178) {
                   label = 828;
                   break L1;
                  }
                  $7179 = ((($7176)) + 8|0);
                  HEAPF64[$7179>>3] = $7175;
                  $7180 = ((($4)) + 542|0);
                  $7181 = HEAP8[$7180>>0]|0;
                  __THREW__ = 0;
                  $7182 = (invoke_iii(416,($vinfos110|0),2)|0);
                  $7183 = __THREW__; __THREW__ = 0;
                  $7184 = $7183&1;
                  if ($7184) {
                   label = 828;
                   break L1;
                  }
                  $7185 = ((($7182)) + 19|0);
                  HEAP8[$7185>>0] = $7181;
                  $7186 = ((($4)) + 542|0);
                  $7187 = ((($7186)) + 1|0);
                  $7188 = HEAP8[$7187>>0]|0;
                  __THREW__ = 0;
                  $7189 = (invoke_iii(416,($vinfos110|0),2)|0);
                  $7190 = __THREW__; __THREW__ = 0;
                  $7191 = $7190&1;
                  if ($7191) {
                   label = 828;
                   break L1;
                  }
                  $7192 = ((($7189)) + 19|0);
                  $7193 = ((($7192)) + 1|0);
                  HEAP8[$7193>>0] = $7188;
                  $7194 = ((($4)) + 544|0);
                  $7195 = HEAP8[$7194>>0]|0;
                  __THREW__ = 0;
                  $7196 = (invoke_iii(416,($vinfos110|0),2)|0);
                  $7197 = __THREW__; __THREW__ = 0;
                  $7198 = $7197&1;
                  if ($7198) {
                   label = 828;
                   break L1;
                  }
                  $7199 = ((($7196)) + 18|0);
                  HEAP8[$7199>>0] = $7195;
                  __THREW__ = 0;
                  $7200 = (invoke_iii(416,($vinfos110|0),3)|0);
                  $7201 = __THREW__; __THREW__ = 0;
                  $7202 = $7201&1;
                  if ($7202) {
                   label = 828;
                   break L1;
                  }
                  $7203 = ((($7200)) + 17|0);
                  HEAP8[$7203>>0] = 1;
                  $7204 = ((($4)) + 120|0);
                  $7205 = +HEAPF64[$7204>>3];
                  __THREW__ = 0;
                  $7206 = (invoke_iii(416,($vinfos110|0),3)|0);
                  $7207 = __THREW__; __THREW__ = 0;
                  $7208 = $7207&1;
                  if ($7208) {
                   label = 828;
                   break L1;
                  }
                  $7209 = ((($7206)) + 8|0);
                  HEAPF64[$7209>>3] = $7205;
                  $7210 = ((($4)) + 545|0);
                  $7211 = HEAP8[$7210>>0]|0;
                  __THREW__ = 0;
                  $7212 = (invoke_iii(416,($vinfos110|0),3)|0);
                  $7213 = __THREW__; __THREW__ = 0;
                  $7214 = $7213&1;
                  if ($7214) {
                   label = 828;
                   break L1;
                  }
                  $7215 = ((($7212)) + 19|0);
                  HEAP8[$7215>>0] = $7211;
                  $7216 = ((($4)) + 545|0);
                  $7217 = ((($7216)) + 1|0);
                  $7218 = HEAP8[$7217>>0]|0;
                  __THREW__ = 0;
                  $7219 = (invoke_iii(416,($vinfos110|0),3)|0);
                  $7220 = __THREW__; __THREW__ = 0;
                  $7221 = $7220&1;
                  if ($7221) {
                   label = 828;
                   break L1;
                  }
                  $7222 = ((($7219)) + 19|0);
                  $7223 = ((($7222)) + 1|0);
                  HEAP8[$7223>>0] = $7218;
                  $7224 = ((($4)) + 547|0);
                  $7225 = HEAP8[$7224>>0]|0;
                  __THREW__ = 0;
                  $7226 = (invoke_iii(416,($vinfos110|0),3)|0);
                  $7227 = __THREW__; __THREW__ = 0;
                  $7228 = $7227&1;
                  if ($7228) {
                   label = 828;
                   break L1;
                  }
                  $7229 = ((($7226)) + 18|0);
                  HEAP8[$7229>>0] = $7225;
                  __THREW__ = 0;
                  $7230 = (invoke_iii(416,($vinfos110|0),4)|0);
                  $7231 = __THREW__; __THREW__ = 0;
                  $7232 = $7231&1;
                  if ($7232) {
                   label = 828;
                   break L1;
                  }
                  $7233 = ((($7230)) + 17|0);
                  HEAP8[$7233>>0] = 1;
                  $7234 = ((($4)) + 160|0);
                  $7235 = +HEAPF64[$7234>>3];
                  __THREW__ = 0;
                  $7236 = (invoke_iii(416,($vinfos110|0),4)|0);
                  $7237 = __THREW__; __THREW__ = 0;
                  $7238 = $7237&1;
                  if ($7238) {
                   label = 828;
                   break L1;
                  }
                  $7239 = ((($7236)) + 8|0);
                  HEAPF64[$7239>>3] = $7235;
                  $7240 = ((($4)) + 548|0);
                  $7241 = HEAP8[$7240>>0]|0;
                  __THREW__ = 0;
                  $7242 = (invoke_iii(416,($vinfos110|0),4)|0);
                  $7243 = __THREW__; __THREW__ = 0;
                  $7244 = $7243&1;
                  if ($7244) {
                   label = 828;
                   break L1;
                  }
                  $7245 = ((($7242)) + 19|0);
                  HEAP8[$7245>>0] = $7241;
                  $7246 = ((($4)) + 548|0);
                  $7247 = ((($7246)) + 1|0);
                  $7248 = HEAP8[$7247>>0]|0;
                  __THREW__ = 0;
                  $7249 = (invoke_iii(416,($vinfos110|0),4)|0);
                  $7250 = __THREW__; __THREW__ = 0;
                  $7251 = $7250&1;
                  if ($7251) {
                   label = 828;
                   break L1;
                  }
                  $7252 = ((($7249)) + 19|0);
                  $7253 = ((($7252)) + 1|0);
                  HEAP8[$7253>>0] = $7248;
                  $7254 = ((($4)) + 550|0);
                  $7255 = HEAP8[$7254>>0]|0;
                  __THREW__ = 0;
                  $7256 = (invoke_iii(416,($vinfos110|0),4)|0);
                  $7257 = __THREW__; __THREW__ = 0;
                  $7258 = $7257&1;
                  if ($7258) {
                   label = 828;
                   break L1;
                  }
                  $7259 = ((($7256)) + 18|0);
                  HEAP8[$7259>>0] = $7255;
                  __THREW__ = 0;
                  $7260 = (invoke_iii(416,($vinfos110|0),5)|0);
                  $7261 = __THREW__; __THREW__ = 0;
                  $7262 = $7261&1;
                  if ($7262) {
                   label = 828;
                   break L1;
                  }
                  $7263 = ((($7260)) + 17|0);
                  HEAP8[$7263>>0] = 1;
                  $7264 = ((($4)) + 200|0);
                  $7265 = +HEAPF64[$7264>>3];
                  __THREW__ = 0;
                  $7266 = (invoke_iii(416,($vinfos110|0),5)|0);
                  $7267 = __THREW__; __THREW__ = 0;
                  $7268 = $7267&1;
                  if ($7268) {
                   label = 828;
                   break L1;
                  }
                  $7269 = ((($7266)) + 8|0);
                  HEAPF64[$7269>>3] = $7265;
                  $7270 = ((($4)) + 551|0);
                  $7271 = HEAP8[$7270>>0]|0;
                  __THREW__ = 0;
                  $7272 = (invoke_iii(416,($vinfos110|0),5)|0);
                  $7273 = __THREW__; __THREW__ = 0;
                  $7274 = $7273&1;
                  if ($7274) {
                   label = 828;
                   break L1;
                  }
                  $7275 = ((($7272)) + 19|0);
                  HEAP8[$7275>>0] = $7271;
                  $7276 = ((($4)) + 551|0);
                  $7277 = ((($7276)) + 1|0);
                  $7278 = HEAP8[$7277>>0]|0;
                  __THREW__ = 0;
                  $7279 = (invoke_iii(416,($vinfos110|0),5)|0);
                  $7280 = __THREW__; __THREW__ = 0;
                  $7281 = $7280&1;
                  if ($7281) {
                   label = 828;
                   break L1;
                  }
                  $7282 = ((($7279)) + 19|0);
                  $7283 = ((($7282)) + 1|0);
                  HEAP8[$7283>>0] = $7278;
                  $7284 = ((($4)) + 553|0);
                  $7285 = HEAP8[$7284>>0]|0;
                  __THREW__ = 0;
                  $7286 = (invoke_iii(416,($vinfos110|0),5)|0);
                  $7287 = __THREW__; __THREW__ = 0;
                  $7288 = $7287&1;
                  if ($7288) {
                   label = 828;
                   break L1;
                  }
                  $7289 = ((($7286)) + 18|0);
                  HEAP8[$7289>>0] = $7285;
                  __THREW__ = 0;
                  invoke_vii(417,($vfree111|0),0);
                  $7290 = __THREW__; __THREW__ = 0;
                  $7291 = $7290&1;
                  if ($7291) {
                   label = 828;
                   break L1;
                  }
                  $7292 = $1;
                  $7293 = HEAP32[$7292>>2]|0;
                  $7294 = ((($7293)) + 8|0);
                  $7295 = HEAP32[$7294>>2]|0;
                  __THREW__ = 0;
                  (invoke_iiii($7295|0,($7292|0),($vinfos110|0),($vfree111|0))|0);
                  $7296 = __THREW__; __THREW__ = 0;
                  $7297 = $7296&1;
                  if ($7297) {
                   label = 829;
                   break L1;
                  }
                  __THREW__ = 0;
                  invoke_vi(371,($vfree111|0));
                  $7298 = __THREW__; __THREW__ = 0;
                  $7299 = $7298&1;
                  if ($7299) {
                   label = 828;
                   break L1;
                  }
                  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos110);
                 }
                } while(0);
                $7300 = $ij5107;
                $7301 = (($7300) + 1)|0;
                $ij5107 = $7301;
               }
              }
             } while(0);
             $7310 = $bgotonextstatement102;
             $7311 = $7310&1;
             if (!($7311)) {
              break;
             }
             $bgotonextstatement112 = 1;
             $bgotonextstatement112 = 0;
            }
           }
          }
         }
        } while(0);
        $9060 = $ij326;
        $9061 = (($9060) + 1)|0;
        $ij326 = $9061;
       }
      }
     }
    }
   } while(0);
   $16078 = $ij4;
   $16079 = (($16078) + 1)|0;
   $ij4 = $16079;
  }
  $16080 = $rotationiter;
  $16081 = (($16080) + 1)|0;
  $rotationiter = $16081;
 }
 switch (label|0) {
  case 107: {
   $1291 = ___cxa_find_matching_catch()|0;
   $1292 = tempRet0;
   $2 = $1291;
   $3 = $1292;
   label = 109;
   break;
  }
  case 108: {
   $1293 = ___cxa_find_matching_catch()|0;
   $1294 = tempRet0;
   $2 = $1293;
   $3 = $1294;
   __THREW__ = 0;
   invoke_vi(371,($vfree|0));
   $1295 = __THREW__; __THREW__ = 0;
   $1296 = $1295&1;
   if ($1296) {
    $16084 = ___cxa_find_matching_catch(0|0)|0;
    $16085 = tempRet0;
    ___clang_call_terminate($16084);
    // unreachable;
   } else {
    label = 109;
   }
   break;
  }
  case 198: {
   $1964 = ___cxa_find_matching_catch()|0;
   $1965 = tempRet0;
   $2 = $1964;
   $3 = $1965;
   label = 200;
   break;
  }
  case 199: {
   $1966 = ___cxa_find_matching_catch()|0;
   $1967 = tempRet0;
   $2 = $1966;
   $3 = $1967;
   __THREW__ = 0;
   invoke_vi(371,($vfree20|0));
   $1968 = __THREW__; __THREW__ = 0;
   $1969 = $1968&1;
   if ($1969) {
    $16084 = ___cxa_find_matching_catch(0|0)|0;
    $16085 = tempRet0;
    ___clang_call_terminate($16084);
    // unreachable;
   } else {
    label = 200;
   }
   break;
  }
  case 307: {
   $3370 = ___cxa_find_matching_catch()|0;
   $3371 = tempRet0;
   $2 = $3370;
   $3 = $3371;
   label = 309;
   break;
  }
  case 308: {
   $3372 = ___cxa_find_matching_catch()|0;
   $3373 = tempRet0;
   $2 = $3372;
   $3 = $3373;
   __THREW__ = 0;
   invoke_vi(371,($vfree41|0));
   $3374 = __THREW__; __THREW__ = 0;
   $3375 = $3374&1;
   if ($3375) {
    $16084 = ___cxa_find_matching_catch(0|0)|0;
    $16085 = tempRet0;
    ___clang_call_terminate($16084);
    // unreachable;
   } else {
    label = 309;
   }
   break;
  }
  case 381: {
   $3909 = ___cxa_find_matching_catch()|0;
   $3910 = tempRet0;
   $2 = $3909;
   $3 = $3910;
   label = 383;
   break;
  }
  case 382: {
   $3911 = ___cxa_find_matching_catch()|0;
   $3912 = tempRet0;
   $2 = $3911;
   $3 = $3912;
   __THREW__ = 0;
   invoke_vi(371,($vfree51|0));
   $3913 = __THREW__; __THREW__ = 0;
   $3914 = $3913&1;
   if ($3914) {
    $16084 = ___cxa_find_matching_catch(0|0)|0;
    $16085 = tempRet0;
    ___clang_call_terminate($16084);
    // unreachable;
   } else {
    label = 383;
   }
   break;
  }
  case 457: {
   $4483 = ___cxa_find_matching_catch()|0;
   $4484 = tempRet0;
   $2 = $4483;
   $3 = $4484;
   label = 459;
   break;
  }
  case 458: {
   $4485 = ___cxa_find_matching_catch()|0;
   $4486 = tempRet0;
   $2 = $4485;
   $3 = $4486;
   __THREW__ = 0;
   invoke_vi(371,($vfree61|0));
   $4487 = __THREW__; __THREW__ = 0;
   $4488 = $4487&1;
   if ($4488) {
    $16084 = ___cxa_find_matching_catch(0|0)|0;
    $16085 = tempRet0;
    ___clang_call_terminate($16084);
    // unreachable;
   } else {
    label = 459;
   }
   break;
  }
  case 533: {
   $5028 = ___cxa_find_matching_catch()|0;
   $5029 = tempRet0;
   $2 = $5028;
   $3 = $5029;
   label = 535;
   break;
  }
  case 534: {
   $5030 = ___cxa_find_matching_catch()|0;
   $5031 = tempRet0;
   $2 = $5030;
   $3 = $5031;
   __THREW__ = 0;
   invoke_vi(371,($vfree71|0));
   $5032 = __THREW__; __THREW__ = 0;
   $5033 = $5032&1;
   if ($5033) {
    $16084 = ___cxa_find_matching_catch(0|0)|0;
    $16085 = tempRet0;
    ___clang_call_terminate($16084);
    // unreachable;
   } else {
    label = 535;
   }
   break;
  }
  case 607: {
   $5626 = ___cxa_find_matching_catch()|0;
   $5627 = tempRet0;
   $2 = $5626;
   $3 = $5627;
   label = 609;
   break;
  }
  case 608: {
   $5628 = ___cxa_find_matching_catch()|0;
   $5629 = tempRet0;
   $2 = $5628;
   $3 = $5629;
   __THREW__ = 0;
   invoke_vi(371,($vfree81|0));
   $5630 = __THREW__; __THREW__ = 0;
   $5631 = $5630&1;
   if ($5631) {
    $16084 = ___cxa_find_matching_catch(0|0)|0;
    $16085 = tempRet0;
    ___clang_call_terminate($16084);
    // unreachable;
   } else {
    label = 609;
   }
   break;
  }
  case 681: {
   $6234 = ___cxa_find_matching_catch()|0;
   $6235 = tempRet0;
   $2 = $6234;
   $3 = $6235;
   label = 683;
   break;
  }
  case 682: {
   $6236 = ___cxa_find_matching_catch()|0;
   $6237 = tempRet0;
   $2 = $6236;
   $3 = $6237;
   __THREW__ = 0;
   invoke_vi(371,($vfree91|0));
   $6238 = __THREW__; __THREW__ = 0;
   $6239 = $6238&1;
   if ($6239) {
    $16084 = ___cxa_find_matching_catch(0|0)|0;
    $16085 = tempRet0;
    ___clang_call_terminate($16084);
    // unreachable;
   } else {
    label = 683;
   }
   break;
  }
  case 755: {
   $6765 = ___cxa_find_matching_catch()|0;
   $6766 = tempRet0;
   $2 = $6765;
   $3 = $6766;
   label = 757;
   break;
  }
  case 756: {
   $6767 = ___cxa_find_matching_catch()|0;
   $6768 = tempRet0;
   $2 = $6767;
   $3 = $6768;
   __THREW__ = 0;
   invoke_vi(371,($vfree101|0));
   $6769 = __THREW__; __THREW__ = 0;
   $6770 = $6769&1;
   if ($6770) {
    $16084 = ___cxa_find_matching_catch(0|0)|0;
    $16085 = tempRet0;
    ___clang_call_terminate($16084);
    // unreachable;
   } else {
    label = 757;
   }
   break;
  }
  case 828: {
   $7302 = ___cxa_find_matching_catch()|0;
   $7303 = tempRet0;
   $2 = $7302;
   $3 = $7303;
   label = 830;
   break;
  }
  case 829: {
   $7304 = ___cxa_find_matching_catch()|0;
   $7305 = tempRet0;
   $2 = $7304;
   $3 = $7305;
   __THREW__ = 0;
   invoke_vi(371,($vfree111|0));
   $7306 = __THREW__; __THREW__ = 0;
   $7307 = $7306&1;
   if ($7307) {
    $16084 = ___cxa_find_matching_catch(0|0)|0;
    $16085 = tempRet0;
    ___clang_call_terminate($16084);
    // unreachable;
   } else {
    label = 830;
   }
   break;
  }
  case 900: {
   $7912 = ___cxa_find_matching_catch()|0;
   $7913 = tempRet0;
   $2 = $7912;
   $3 = $7913;
   label = 902;
   break;
  }
  case 901: {
   $7914 = ___cxa_find_matching_catch()|0;
   $7915 = tempRet0;
   $2 = $7914;
   $3 = $7915;
   __THREW__ = 0;
   invoke_vi(371,($vfree121|0));
   $7916 = __THREW__; __THREW__ = 0;
   $7917 = $7916&1;
   if ($7917) {
    $16084 = ___cxa_find_matching_catch(0|0)|0;
    $16085 = tempRet0;
    ___clang_call_terminate($16084);
    // unreachable;
   } else {
    label = 902;
   }
   break;
  }
  case 969: {
   $8521 = ___cxa_find_matching_catch()|0;
   $8522 = tempRet0;
   $2 = $8521;
   $3 = $8522;
   label = 971;
   break;
  }
  case 970: {
   $8523 = ___cxa_find_matching_catch()|0;
   $8524 = tempRet0;
   $2 = $8523;
   $3 = $8524;
   __THREW__ = 0;
   invoke_vi(371,($vfree130|0));
   $8525 = __THREW__; __THREW__ = 0;
   $8526 = $8525&1;
   if ($8526) {
    $16084 = ___cxa_find_matching_catch(0|0)|0;
    $16085 = tempRet0;
    ___clang_call_terminate($16084);
    // unreachable;
   } else {
    label = 971;
   }
   break;
  }
  case 1035: {
   $9052 = ___cxa_find_matching_catch()|0;
   $9053 = tempRet0;
   $2 = $9052;
   $3 = $9053;
   label = 1037;
   break;
  }
  case 1036: {
   $9054 = ___cxa_find_matching_catch()|0;
   $9055 = tempRet0;
   $2 = $9054;
   $3 = $9055;
   __THREW__ = 0;
   invoke_vi(371,($vfree139|0));
   $9056 = __THREW__; __THREW__ = 0;
   $9057 = $9056&1;
   if ($9057) {
    $16084 = ___cxa_find_matching_catch(0|0)|0;
    $16085 = tempRet0;
    ___clang_call_terminate($16084);
    // unreachable;
   } else {
    label = 1037;
   }
   break;
  }
  case 1139: {
   $10386 = ___cxa_find_matching_catch()|0;
   $10387 = tempRet0;
   $2 = $10386;
   $3 = $10387;
   label = 1141;
   break;
  }
  case 1140: {
   $10388 = ___cxa_find_matching_catch()|0;
   $10389 = tempRet0;
   $2 = $10388;
   $3 = $10389;
   __THREW__ = 0;
   invoke_vi(371,($vfree160|0));
   $10390 = __THREW__; __THREW__ = 0;
   $10391 = $10390&1;
   if ($10391) {
    $16084 = ___cxa_find_matching_catch(0|0)|0;
    $16085 = tempRet0;
    ___clang_call_terminate($16084);
    // unreachable;
   } else {
    label = 1141;
   }
   break;
  }
  case 1213: {
   $10925 = ___cxa_find_matching_catch()|0;
   $10926 = tempRet0;
   $2 = $10925;
   $3 = $10926;
   label = 1215;
   break;
  }
  case 1214: {
   $10927 = ___cxa_find_matching_catch()|0;
   $10928 = tempRet0;
   $2 = $10927;
   $3 = $10928;
   __THREW__ = 0;
   invoke_vi(371,($vfree170|0));
   $10929 = __THREW__; __THREW__ = 0;
   $10930 = $10929&1;
   if ($10930) {
    $16084 = ___cxa_find_matching_catch(0|0)|0;
    $16085 = tempRet0;
    ___clang_call_terminate($16084);
    // unreachable;
   } else {
    label = 1215;
   }
   break;
  }
  case 1289: {
   $11499 = ___cxa_find_matching_catch()|0;
   $11500 = tempRet0;
   $2 = $11499;
   $3 = $11500;
   label = 1291;
   break;
  }
  case 1290: {
   $11501 = ___cxa_find_matching_catch()|0;
   $11502 = tempRet0;
   $2 = $11501;
   $3 = $11502;
   __THREW__ = 0;
   invoke_vi(371,($vfree180|0));
   $11503 = __THREW__; __THREW__ = 0;
   $11504 = $11503&1;
   if ($11504) {
    $16084 = ___cxa_find_matching_catch(0|0)|0;
    $16085 = tempRet0;
    ___clang_call_terminate($16084);
    // unreachable;
   } else {
    label = 1291;
   }
   break;
  }
  case 1365: {
   $12044 = ___cxa_find_matching_catch()|0;
   $12045 = tempRet0;
   $2 = $12044;
   $3 = $12045;
   label = 1367;
   break;
  }
  case 1366: {
   $12046 = ___cxa_find_matching_catch()|0;
   $12047 = tempRet0;
   $2 = $12046;
   $3 = $12047;
   __THREW__ = 0;
   invoke_vi(371,($vfree190|0));
   $12048 = __THREW__; __THREW__ = 0;
   $12049 = $12048&1;
   if ($12049) {
    $16084 = ___cxa_find_matching_catch(0|0)|0;
    $16085 = tempRet0;
    ___clang_call_terminate($16084);
    // unreachable;
   } else {
    label = 1367;
   }
   break;
  }
  case 1439: {
   $12642 = ___cxa_find_matching_catch()|0;
   $12643 = tempRet0;
   $2 = $12642;
   $3 = $12643;
   label = 1441;
   break;
  }
  case 1440: {
   $12644 = ___cxa_find_matching_catch()|0;
   $12645 = tempRet0;
   $2 = $12644;
   $3 = $12645;
   __THREW__ = 0;
   invoke_vi(371,($vfree200|0));
   $12646 = __THREW__; __THREW__ = 0;
   $12647 = $12646&1;
   if ($12647) {
    $16084 = ___cxa_find_matching_catch(0|0)|0;
    $16085 = tempRet0;
    ___clang_call_terminate($16084);
    // unreachable;
   } else {
    label = 1441;
   }
   break;
  }
  case 1513: {
   $13250 = ___cxa_find_matching_catch()|0;
   $13251 = tempRet0;
   $2 = $13250;
   $3 = $13251;
   label = 1515;
   break;
  }
  case 1514: {
   $13252 = ___cxa_find_matching_catch()|0;
   $13253 = tempRet0;
   $2 = $13252;
   $3 = $13253;
   __THREW__ = 0;
   invoke_vi(371,($vfree210|0));
   $13254 = __THREW__; __THREW__ = 0;
   $13255 = $13254&1;
   if ($13255) {
    $16084 = ___cxa_find_matching_catch(0|0)|0;
    $16085 = tempRet0;
    ___clang_call_terminate($16084);
    // unreachable;
   } else {
    label = 1515;
   }
   break;
  }
  case 1587: {
   $13781 = ___cxa_find_matching_catch()|0;
   $13782 = tempRet0;
   $2 = $13781;
   $3 = $13782;
   label = 1589;
   break;
  }
  case 1588: {
   $13783 = ___cxa_find_matching_catch()|0;
   $13784 = tempRet0;
   $2 = $13783;
   $3 = $13784;
   __THREW__ = 0;
   invoke_vi(371,($vfree220|0));
   $13785 = __THREW__; __THREW__ = 0;
   $13786 = $13785&1;
   if ($13786) {
    $16084 = ___cxa_find_matching_catch(0|0)|0;
    $16085 = tempRet0;
    ___clang_call_terminate($16084);
    // unreachable;
   } else {
    label = 1589;
   }
   break;
  }
  case 1660: {
   $14318 = ___cxa_find_matching_catch()|0;
   $14319 = tempRet0;
   $2 = $14318;
   $3 = $14319;
   label = 1662;
   break;
  }
  case 1661: {
   $14320 = ___cxa_find_matching_catch()|0;
   $14321 = tempRet0;
   $2 = $14320;
   $3 = $14321;
   __THREW__ = 0;
   invoke_vi(371,($vfree230|0));
   $14322 = __THREW__; __THREW__ = 0;
   $14323 = $14322&1;
   if ($14323) {
    $16084 = ___cxa_find_matching_catch(0|0)|0;
    $16085 = tempRet0;
    ___clang_call_terminate($16084);
    // unreachable;
   } else {
    label = 1662;
   }
   break;
  }
  case 1732: {
   $14928 = ___cxa_find_matching_catch()|0;
   $14929 = tempRet0;
   $2 = $14928;
   $3 = $14929;
   label = 1734;
   break;
  }
  case 1733: {
   $14930 = ___cxa_find_matching_catch()|0;
   $14931 = tempRet0;
   $2 = $14930;
   $3 = $14931;
   __THREW__ = 0;
   invoke_vi(371,($vfree240|0));
   $14932 = __THREW__; __THREW__ = 0;
   $14933 = $14932&1;
   if ($14933) {
    $16084 = ___cxa_find_matching_catch(0|0)|0;
    $16085 = tempRet0;
    ___clang_call_terminate($16084);
    // unreachable;
   } else {
    label = 1734;
   }
   break;
  }
  case 1801: {
   $15537 = ___cxa_find_matching_catch()|0;
   $15538 = tempRet0;
   $2 = $15537;
   $3 = $15538;
   label = 1803;
   break;
  }
  case 1802: {
   $15539 = ___cxa_find_matching_catch()|0;
   $15540 = tempRet0;
   $2 = $15539;
   $3 = $15540;
   __THREW__ = 0;
   invoke_vi(371,($vfree249|0));
   $15541 = __THREW__; __THREW__ = 0;
   $15542 = $15541&1;
   if ($15542) {
    $16084 = ___cxa_find_matching_catch(0|0)|0;
    $16085 = tempRet0;
    ___clang_call_terminate($16084);
    // unreachable;
   } else {
    label = 1803;
   }
   break;
  }
  case 1867: {
   $16068 = ___cxa_find_matching_catch()|0;
   $16069 = tempRet0;
   $2 = $16068;
   $3 = $16069;
   label = 1869;
   break;
  }
  case 1868: {
   $16070 = ___cxa_find_matching_catch()|0;
   $16071 = tempRet0;
   $2 = $16070;
   $3 = $16071;
   __THREW__ = 0;
   invoke_vi(371,($vfree258|0));
   $16072 = __THREW__; __THREW__ = 0;
   $16073 = $16072&1;
   if ($16073) {
    $16084 = ___cxa_find_matching_catch(0|0)|0;
    $16085 = tempRet0;
    ___clang_call_terminate($16084);
    // unreachable;
   } else {
    label = 1869;
   }
   break;
  }
  case 1873: {
   STACKTOP = sp;return;
   break;
  }
 }
 switch (label|0) {
  case 109: {
   __THREW__ = 0;
   invoke_vi(372,($vinfos|0));
   $1297 = __THREW__; __THREW__ = 0;
   $1298 = $1297&1;
   if ($1298) {
    $16084 = ___cxa_find_matching_catch(0|0)|0;
    $16085 = tempRet0;
    ___clang_call_terminate($16084);
    // unreachable;
   } else {
    $16082 = $2;
    $16083 = $3;
    ___resumeException($16082|0);
    // unreachable;
   }
   break;
  }
  case 200: {
   __THREW__ = 0;
   invoke_vi(372,($vinfos19|0));
   $1970 = __THREW__; __THREW__ = 0;
   $1971 = $1970&1;
   if ($1971) {
    $16084 = ___cxa_find_matching_catch(0|0)|0;
    $16085 = tempRet0;
    ___clang_call_terminate($16084);
    // unreachable;
   } else {
    $16082 = $2;
    $16083 = $3;
    ___resumeException($16082|0);
    // unreachable;
   }
   break;
  }
  case 309: {
   __THREW__ = 0;
   invoke_vi(372,($vinfos40|0));
   $3376 = __THREW__; __THREW__ = 0;
   $3377 = $3376&1;
   if ($3377) {
    $16084 = ___cxa_find_matching_catch(0|0)|0;
    $16085 = tempRet0;
    ___clang_call_terminate($16084);
    // unreachable;
   } else {
    $16082 = $2;
    $16083 = $3;
    ___resumeException($16082|0);
    // unreachable;
   }
   break;
  }
  case 383: {
   __THREW__ = 0;
   invoke_vi(372,($vinfos50|0));
   $3915 = __THREW__; __THREW__ = 0;
   $3916 = $3915&1;
   if ($3916) {
    $16084 = ___cxa_find_matching_catch(0|0)|0;
    $16085 = tempRet0;
    ___clang_call_terminate($16084);
    // unreachable;
   } else {
    $16082 = $2;
    $16083 = $3;
    ___resumeException($16082|0);
    // unreachable;
   }
   break;
  }
  case 459: {
   __THREW__ = 0;
   invoke_vi(372,($vinfos60|0));
   $4489 = __THREW__; __THREW__ = 0;
   $4490 = $4489&1;
   if ($4490) {
    $16084 = ___cxa_find_matching_catch(0|0)|0;
    $16085 = tempRet0;
    ___clang_call_terminate($16084);
    // unreachable;
   } else {
    $16082 = $2;
    $16083 = $3;
    ___resumeException($16082|0);
    // unreachable;
   }
   break;
  }
  case 535: {
   __THREW__ = 0;
   invoke_vi(372,($vinfos70|0));
   $5034 = __THREW__; __THREW__ = 0;
   $5035 = $5034&1;
   if ($5035) {
    $16084 = ___cxa_find_matching_catch(0|0)|0;
    $16085 = tempRet0;
    ___clang_call_terminate($16084);
    // unreachable;
   } else {
    $16082 = $2;
    $16083 = $3;
    ___resumeException($16082|0);
    // unreachable;
   }
   break;
  }
  case 609: {
   __THREW__ = 0;
   invoke_vi(372,($vinfos80|0));
   $5632 = __THREW__; __THREW__ = 0;
   $5633 = $5632&1;
   if ($5633) {
    $16084 = ___cxa_find_matching_catch(0|0)|0;
    $16085 = tempRet0;
    ___clang_call_terminate($16084);
    // unreachable;
   } else {
    $16082 = $2;
    $16083 = $3;
    ___resumeException($16082|0);
    // unreachable;
   }
   break;
  }
  case 683: {
   __THREW__ = 0;
   invoke_vi(372,($vinfos90|0));
   $6240 = __THREW__; __THREW__ = 0;
   $6241 = $6240&1;
   if ($6241) {
    $16084 = ___cxa_find_matching_catch(0|0)|0;
    $16085 = tempRet0;
    ___clang_call_terminate($16084);
    // unreachable;
   } else {
    $16082 = $2;
    $16083 = $3;
    ___resumeException($16082|0);
    // unreachable;
   }
   break;
  }
  case 757: {
   __THREW__ = 0;
   invoke_vi(372,($vinfos100|0));
   $6771 = __THREW__; __THREW__ = 0;
   $6772 = $6771&1;
   if ($6772) {
    $16084 = ___cxa_find_matching_catch(0|0)|0;
    $16085 = tempRet0;
    ___clang_call_terminate($16084);
    // unreachable;
   } else {
    $16082 = $2;
    $16083 = $3;
    ___resumeException($16082|0);
    // unreachable;
   }
   break;
  }
  case 830: {
   __THREW__ = 0;
   invoke_vi(372,($vinfos110|0));
   $7308 = __THREW__; __THREW__ = 0;
   $7309 = $7308&1;
   if ($7309) {
    $16084 = ___cxa_find_matching_catch(0|0)|0;
    $16085 = tempRet0;
    ___clang_call_terminate($16084);
    // unreachable;
   } else {
    $16082 = $2;
    $16083 = $3;
    ___resumeException($16082|0);
    // unreachable;
   }
   break;
  }
  case 902: {
   __THREW__ = 0;
   invoke_vi(372,($vinfos120|0));
   $7918 = __THREW__; __THREW__ = 0;
   $7919 = $7918&1;
   if ($7919) {
    $16084 = ___cxa_find_matching_catch(0|0)|0;
    $16085 = tempRet0;
    ___clang_call_terminate($16084);
    // unreachable;
   } else {
    $16082 = $2;
    $16083 = $3;
    ___resumeException($16082|0);
    // unreachable;
   }
   break;
  }
  case 971: {
   __THREW__ = 0;
   invoke_vi(372,($vinfos129|0));
   $8527 = __THREW__; __THREW__ = 0;
   $8528 = $8527&1;
   if ($8528) {
    $16084 = ___cxa_find_matching_catch(0|0)|0;
    $16085 = tempRet0;
    ___clang_call_terminate($16084);
    // unreachable;
   } else {
    $16082 = $2;
    $16083 = $3;
    ___resumeException($16082|0);
    // unreachable;
   }
   break;
  }
  case 1037: {
   __THREW__ = 0;
   invoke_vi(372,($vinfos138|0));
   $9058 = __THREW__; __THREW__ = 0;
   $9059 = $9058&1;
   if ($9059) {
    $16084 = ___cxa_find_matching_catch(0|0)|0;
    $16085 = tempRet0;
    ___clang_call_terminate($16084);
    // unreachable;
   } else {
    $16082 = $2;
    $16083 = $3;
    ___resumeException($16082|0);
    // unreachable;
   }
   break;
  }
  case 1141: {
   __THREW__ = 0;
   invoke_vi(372,($vinfos159|0));
   $10392 = __THREW__; __THREW__ = 0;
   $10393 = $10392&1;
   if ($10393) {
    $16084 = ___cxa_find_matching_catch(0|0)|0;
    $16085 = tempRet0;
    ___clang_call_terminate($16084);
    // unreachable;
   } else {
    $16082 = $2;
    $16083 = $3;
    ___resumeException($16082|0);
    // unreachable;
   }
   break;
  }
  case 1215: {
   __THREW__ = 0;
   invoke_vi(372,($vinfos169|0));
   $10931 = __THREW__; __THREW__ = 0;
   $10932 = $10931&1;
   if ($10932) {
    $16084 = ___cxa_find_matching_catch(0|0)|0;
    $16085 = tempRet0;
    ___clang_call_terminate($16084);
    // unreachable;
   } else {
    $16082 = $2;
    $16083 = $3;
    ___resumeException($16082|0);
    // unreachable;
   }
   break;
  }
  case 1291: {
   __THREW__ = 0;
   invoke_vi(372,($vinfos179|0));
   $11505 = __THREW__; __THREW__ = 0;
   $11506 = $11505&1;
   if ($11506) {
    $16084 = ___cxa_find_matching_catch(0|0)|0;
    $16085 = tempRet0;
    ___clang_call_terminate($16084);
    // unreachable;
   } else {
    $16082 = $2;
    $16083 = $3;
    ___resumeException($16082|0);
    // unreachable;
   }
   break;
  }
  case 1367: {
   __THREW__ = 0;
   invoke_vi(372,($vinfos189|0));
   $12050 = __THREW__; __THREW__ = 0;
   $12051 = $12050&1;
   if ($12051) {
    $16084 = ___cxa_find_matching_catch(0|0)|0;
    $16085 = tempRet0;
    ___clang_call_terminate($16084);
    // unreachable;
   } else {
    $16082 = $2;
    $16083 = $3;
    ___resumeException($16082|0);
    // unreachable;
   }
   break;
  }
  case 1441: {
   __THREW__ = 0;
   invoke_vi(372,($vinfos199|0));
   $12648 = __THREW__; __THREW__ = 0;
   $12649 = $12648&1;
   if ($12649) {
    $16084 = ___cxa_find_matching_catch(0|0)|0;
    $16085 = tempRet0;
    ___clang_call_terminate($16084);
    // unreachable;
   } else {
    $16082 = $2;
    $16083 = $3;
    ___resumeException($16082|0);
    // unreachable;
   }
   break;
  }
  case 1515: {
   __THREW__ = 0;
   invoke_vi(372,($vinfos209|0));
   $13256 = __THREW__; __THREW__ = 0;
   $13257 = $13256&1;
   if ($13257) {
    $16084 = ___cxa_find_matching_catch(0|0)|0;
    $16085 = tempRet0;
    ___clang_call_terminate($16084);
    // unreachable;
   } else {
    $16082 = $2;
    $16083 = $3;
    ___resumeException($16082|0);
    // unreachable;
   }
   break;
  }
  case 1589: {
   __THREW__ = 0;
   invoke_vi(372,($vinfos219|0));
   $13787 = __THREW__; __THREW__ = 0;
   $13788 = $13787&1;
   if ($13788) {
    $16084 = ___cxa_find_matching_catch(0|0)|0;
    $16085 = tempRet0;
    ___clang_call_terminate($16084);
    // unreachable;
   } else {
    $16082 = $2;
    $16083 = $3;
    ___resumeException($16082|0);
    // unreachable;
   }
   break;
  }
  case 1662: {
   __THREW__ = 0;
   invoke_vi(372,($vinfos229|0));
   $14324 = __THREW__; __THREW__ = 0;
   $14325 = $14324&1;
   if ($14325) {
    $16084 = ___cxa_find_matching_catch(0|0)|0;
    $16085 = tempRet0;
    ___clang_call_terminate($16084);
    // unreachable;
   } else {
    $16082 = $2;
    $16083 = $3;
    ___resumeException($16082|0);
    // unreachable;
   }
   break;
  }
  case 1734: {
   __THREW__ = 0;
   invoke_vi(372,($vinfos239|0));
   $14934 = __THREW__; __THREW__ = 0;
   $14935 = $14934&1;
   if ($14935) {
    $16084 = ___cxa_find_matching_catch(0|0)|0;
    $16085 = tempRet0;
    ___clang_call_terminate($16084);
    // unreachable;
   } else {
    $16082 = $2;
    $16083 = $3;
    ___resumeException($16082|0);
    // unreachable;
   }
   break;
  }
  case 1803: {
   __THREW__ = 0;
   invoke_vi(372,($vinfos248|0));
   $15543 = __THREW__; __THREW__ = 0;
   $15544 = $15543&1;
   if ($15544) {
    $16084 = ___cxa_find_matching_catch(0|0)|0;
    $16085 = tempRet0;
    ___clang_call_terminate($16084);
    // unreachable;
   } else {
    $16082 = $2;
    $16083 = $3;
    ___resumeException($16082|0);
    // unreachable;
   }
   break;
  }
  case 1869: {
   __THREW__ = 0;
   invoke_vi(372,($vinfos257|0));
   $16074 = __THREW__; __THREW__ = 0;
   $16075 = $16074&1;
   if ($16075) {
    $16084 = ___cxa_find_matching_catch(0|0)|0;
    $16085 = tempRet0;
    ___clang_call_terminate($16084);
    // unreachable;
   } else {
    $16082 = $2;
    $16083 = $3;
    ___resumeException($16082|0);
    // unreachable;
   }
   break;
  }
 }
}
function __Z6IKacosd($f) {
 $f = +$f;
 var $$expand_i1_val = 0, $$expand_i1_val3 = 0, $$pre_trunc = 0, $0 = 0.0, $1 = 0.0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0.0, $55 = 0, $56 = 0.0, $57 = 0, $58 = 0.0, $59 = 0.0, $6 = 0.0;
 var $60 = 0.0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $7 = 0, $8 = 0.0, $9 = 0, $or$cond = 0, $ss = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ss = sp + 40|0;
 $4 = sp + 16|0;
 $5 = sp + 184|0;
 $1 = $f;
 $6 = $1;
 $7 = $6 > -1.0000020000000001;
 $8 = $1;
 $9 = $8 < 1.0000020000000001;
 $or$cond = $7 & $9;
 if ($or$cond) {
  $54 = $1;
  $55 = $54 <= -1.0;
  if ($55) {
   $0 = 3.14159265358979;
   $60 = $0;
   STACKTOP = sp;return (+$60);
  }
  $56 = $1;
  $57 = $56 >= 1.0;
  if ($57) {
   $0 = 0.0;
   $60 = $0;
   STACKTOP = sp;return (+$60);
  } else {
   $58 = $1;
   $59 = (+Math_acos((+$58)));
   $0 = $59;
   $60 = $0;
   STACKTOP = sp;return (+$60);
  }
 }
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEC1Ej($ss,24);
 $10 = ((($ss)) + 8|0);
 __THREW__ = 0;
 $11 = (invoke_iii(410,($10|0),(872|0))|0);
 $12 = __THREW__; __THREW__ = 0;
 $13 = $12&1;
 if ($13) {
  label = 14;
 } else {
  __THREW__ = 0;
  $14 = (invoke_iii(410,($11|0),(896|0))|0);
  $15 = __THREW__; __THREW__ = 0;
  $16 = $15&1;
  if ($16) {
   label = 14;
  } else {
   __THREW__ = 0;
   $17 = (invoke_iii(410,($14|0),(936|0))|0);
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   if ($19) {
    label = 14;
   } else {
    __THREW__ = 0;
    $20 = (invoke_iii(411,($17|0),163)|0);
    $21 = __THREW__; __THREW__ = 0;
    $22 = $21&1;
    if ($22) {
     label = 14;
    } else {
     __THREW__ = 0;
     $23 = (invoke_iii(410,($20|0),(15056|0))|0);
     $24 = __THREW__; __THREW__ = 0;
     $25 = $24&1;
     if ($25) {
      label = 14;
     } else {
      __THREW__ = 0;
      $26 = (invoke_iii(410,($23|0),(1488|0))|0);
      $27 = __THREW__; __THREW__ = 0;
      $28 = $27&1;
      if ($28) {
       label = 14;
      } else {
       __THREW__ = 0;
       $29 = (invoke_iii(410,($26|0),(952|0))|0);
       $30 = __THREW__; __THREW__ = 0;
       $31 = $30&1;
       if ($31) {
        label = 14;
       } else {
        __THREW__ = 0;
        $32 = (invoke_iii(410,($29|0),(1496|0))|0);
        $33 = __THREW__; __THREW__ = 0;
        $34 = $33&1;
        if ($34) {
         label = 14;
        } else {
         __THREW__ = 0;
         (invoke_iii(410,($32|0),(984|0))|0);
         $35 = __THREW__; __THREW__ = 0;
         $36 = $35&1;
         if ($36) {
          label = 14;
         } else {
          $37 = (___cxa_allocate_exception(8)|0);
          $$expand_i1_val = 1;
          HEAP8[$5>>0] = $$expand_i1_val;
          __THREW__ = 0;
          invoke_vii(412,($4|0),($ss|0));
          $38 = __THREW__; __THREW__ = 0;
          $39 = $38&1;
          if ($39) {
           $45 = ___cxa_find_matching_catch()|0;
           $46 = tempRet0;
           $2 = $45;
           $3 = $46;
          } else {
           __THREW__ = 0;
           invoke_vii(413,($37|0),($4|0));
           $40 = __THREW__; __THREW__ = 0;
           $41 = $40&1;
           if (!($41)) {
            $$expand_i1_val3 = 0;
            HEAP8[$5>>0] = $$expand_i1_val3;
            __THREW__ = 0;
            invoke_viii(414,($37|0),(2056|0),(62|0));
            $42 = __THREW__; __THREW__ = 0;
           }
           $47 = ___cxa_find_matching_catch()|0;
           $48 = tempRet0;
           $2 = $47;
           $3 = $48;
           __THREW__ = 0;
           invoke_vi(415,($4|0));
           $49 = __THREW__; __THREW__ = 0;
           $50 = $49&1;
           if ($50) {
            $63 = ___cxa_find_matching_catch(0|0)|0;
            $64 = tempRet0;
            ___clang_call_terminate($63);
            // unreachable;
           }
          }
          $$pre_trunc = HEAP8[$5>>0]|0;
          $51 = $$pre_trunc&1;
          if ($51) {
           ___cxa_free_exception(($37|0));
          }
         }
        }
       }
      }
     }
    }
   }
  }
 }
 if ((label|0) == 14) {
  $43 = ___cxa_find_matching_catch()|0;
  $44 = tempRet0;
  $2 = $43;
  $3 = $44;
 }
 __THREW__ = 0;
 invoke_vi(35,($ss|0));
 $52 = __THREW__; __THREW__ = 0;
 $53 = $52&1;
 if ($53) {
  $63 = ___cxa_find_matching_catch(0|0)|0;
  $64 = tempRet0;
  ___clang_call_terminate($63);
  // unreachable;
 } else {
  $61 = $2;
  $62 = $3;
  ___resumeException($61|0);
  // unreachable;
 }
 return +(0.0);
}
function __Z5isnanIdENSt3__19enable_ifIXsr3std13is_arithmeticIT_EE5valueEbE4typeES2_($__lcpp_x) {
 $__lcpp_x = +$__lcpp_x;
 var $0 = 0.0, $1 = 0.0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__lcpp_x;
 $1 = $0;
 $2 = (__Z14__libcpp_isnanIdEbT_($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __Z5IKsqrd($f) {
 $f = +$f;
 var $0 = 0.0, $1 = 0.0, $2 = 0.0, $3 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $f;
 $1 = $0;
 $2 = $0;
 $3 = $1 * $2;
 STACKTOP = sp;return (+$3);
}
function __Z7IKatan2dd($fy,$fx) {
 $fy = +$fy;
 $fx = +$fx;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $0 = 0.0, $1 = 0.0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0.0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0.0, $56 = 0.0, $57 = 0.0, $58 = 0.0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $7 = 0.0, $8 = 0, $9 = 0.0, $ss = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ss = sp + 48|0;
 $5 = sp + 24|0;
 $6 = sp + 192|0;
 $1 = $fy;
 $2 = $fx;
 $7 = $1;
 $8 = (__Z5isnanIdENSt3__19enable_ifIXsr3std13is_arithmeticIT_EE5valueEbE4typeES2_($7)|0);
 $9 = $2;
 $10 = (__Z5isnanIdENSt3__19enable_ifIXsr3std13is_arithmeticIT_EE5valueEbE4typeES2_($9)|0);
 if (!($8)) {
  if ($10) {
   $0 = 0.0;
   $58 = $0;
   STACKTOP = sp;return (+$58);
  } else {
   $55 = $1;
   $56 = $2;
   $57 = (+Math_atan2((+$55),(+$56)));
   $0 = $57;
   $58 = $0;
   STACKTOP = sp;return (+$58);
  }
 }
 if (!($10)) {
  $0 = 1.5707963267949001;
  $58 = $0;
  STACKTOP = sp;return (+$58);
 }
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEC1Ej($ss,24);
 $11 = ((($ss)) + 8|0);
 __THREW__ = 0;
 $12 = (invoke_iii(410,($11|0),(872|0))|0);
 $13 = __THREW__; __THREW__ = 0;
 $14 = $13&1;
 if ($14) {
  label = 15;
 } else {
  __THREW__ = 0;
  $15 = (invoke_iii(410,($12|0),(896|0))|0);
  $16 = __THREW__; __THREW__ = 0;
  $17 = $16&1;
  if ($17) {
   label = 15;
  } else {
   __THREW__ = 0;
   $18 = (invoke_iii(410,($15|0),(936|0))|0);
   $19 = __THREW__; __THREW__ = 0;
   $20 = $19&1;
   if ($20) {
    label = 15;
   } else {
    __THREW__ = 0;
    $21 = (invoke_iii(411,($18|0),194)|0);
    $22 = __THREW__; __THREW__ = 0;
    $23 = $22&1;
    if ($23) {
     label = 15;
    } else {
     __THREW__ = 0;
     $24 = (invoke_iii(410,($21|0),(15056|0))|0);
     $25 = __THREW__; __THREW__ = 0;
     $26 = $25&1;
     if ($26) {
      label = 15;
     } else {
      __THREW__ = 0;
      $27 = (invoke_iii(410,($24|0),(944|0))|0);
      $28 = __THREW__; __THREW__ = 0;
      $29 = $28&1;
      if ($29) {
       label = 15;
      } else {
       __THREW__ = 0;
       $30 = (invoke_iii(410,($27|0),(952|0))|0);
       $31 = __THREW__; __THREW__ = 0;
       $32 = $31&1;
       if ($32) {
        label = 15;
       } else {
        __THREW__ = 0;
        $33 = (invoke_iii(410,($30|0),(968|0))|0);
        $34 = __THREW__; __THREW__ = 0;
        $35 = $34&1;
        if ($35) {
         label = 15;
        } else {
         __THREW__ = 0;
         (invoke_iii(410,($33|0),(984|0))|0);
         $36 = __THREW__; __THREW__ = 0;
         $37 = $36&1;
         if ($37) {
          label = 15;
         } else {
          $38 = (___cxa_allocate_exception(8)|0);
          $$expand_i1_val = 1;
          HEAP8[$6>>0] = $$expand_i1_val;
          __THREW__ = 0;
          invoke_vii(412,($5|0),($ss|0));
          $39 = __THREW__; __THREW__ = 0;
          $40 = $39&1;
          if ($40) {
           $46 = ___cxa_find_matching_catch()|0;
           $47 = tempRet0;
           $3 = $46;
           $4 = $47;
          } else {
           __THREW__ = 0;
           invoke_vii(413,($38|0),($5|0));
           $41 = __THREW__; __THREW__ = 0;
           $42 = $41&1;
           if (!($42)) {
            $$expand_i1_val2 = 0;
            HEAP8[$6>>0] = $$expand_i1_val2;
            __THREW__ = 0;
            invoke_viii(414,($38|0),(2056|0),(62|0));
            $43 = __THREW__; __THREW__ = 0;
           }
           $48 = ___cxa_find_matching_catch()|0;
           $49 = tempRet0;
           $3 = $48;
           $4 = $49;
           __THREW__ = 0;
           invoke_vi(415,($5|0));
           $50 = __THREW__; __THREW__ = 0;
           $51 = $50&1;
           if ($51) {
            $61 = ___cxa_find_matching_catch(0|0)|0;
            $62 = tempRet0;
            ___clang_call_terminate($61);
            // unreachable;
           }
          }
          $$pre_trunc = HEAP8[$6>>0]|0;
          $52 = $$pre_trunc&1;
          if ($52) {
           ___cxa_free_exception(($38|0));
          }
         }
        }
       }
      }
     }
    }
   }
  }
 }
 if ((label|0) == 15) {
  $44 = ___cxa_find_matching_catch()|0;
  $45 = tempRet0;
  $3 = $44;
  $4 = $45;
 }
 __THREW__ = 0;
 invoke_vi(35,($ss|0));
 $53 = __THREW__; __THREW__ = 0;
 $54 = $53&1;
 if ($54) {
  $61 = ___cxa_find_matching_catch(0|0)|0;
  $62 = tempRet0;
  ___clang_call_terminate($61);
  // unreachable;
 } else {
  $59 = $3;
  $60 = $4;
  ___resumeException($59|0);
  // unreachable;
 }
 return +(0.0);
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $4 = $0;
 __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ev($4);
 $5 = $1;
 $6 = ($5>>>0)>(0);
 if (!($6)) {
  STACKTOP = sp;return;
 }
 $7 = $1;
 __THREW__ = 0;
 invoke_vii(395,($4|0),($7|0));
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if (!($9)) {
  $10 = $1;
  __THREW__ = 0;
  invoke_vii(418,($4|0),($10|0));
  $11 = __THREW__; __THREW__ = 0;
  $12 = $11&1;
  if (!($12)) {
   STACKTOP = sp;return;
  }
 }
 $13 = ___cxa_find_matching_catch()|0;
 $14 = tempRet0;
 $2 = $13;
 $3 = $14;
 __THREW__ = 0;
 invoke_vi(397,($4|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 if ($16) {
  $19 = ___cxa_find_matching_catch(0|0)|0;
  $20 = tempRet0;
  ___clang_call_terminate($19);
  // unreachable;
 } else {
  $17 = $2;
  $18 = $3;
  ___resumeException($17|0);
  // unreachable;
 }
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = HEAP32[$2>>2]|0;
 $5 = (($4) + (($3*24)|0)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $4 = $0;
 __ZNSt3__113__vector_baseIiNS_9allocatorIiEEEC2Ev($4);
 $5 = $1;
 $6 = ($5>>>0)>(0);
 if (!($6)) {
  STACKTOP = sp;return;
 }
 $7 = $1;
 __THREW__ = 0;
 invoke_vii(398,($4|0),($7|0));
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if (!($9)) {
  $10 = $1;
  __THREW__ = 0;
  invoke_vii(419,($4|0),($10|0));
  $11 = __THREW__; __THREW__ = 0;
  $12 = $11&1;
  if (!($12)) {
   STACKTOP = sp;return;
  }
 }
 $13 = ___cxa_find_matching_catch()|0;
 $14 = tempRet0;
 $2 = $13;
 $3 = $14;
 __THREW__ = 0;
 invoke_vi(400,($4|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 if ($16) {
  $19 = ___cxa_find_matching_catch(0|0)|0;
  $20 = tempRet0;
  ___clang_call_terminate($19);
  // unreachable;
 } else {
  $17 = $2;
  $18 = $3;
  ___resumeException($17|0);
  // unreachable;
 }
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__annotator = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__annotator = sp + 12|0;
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = (__ZNSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv($2)|0);
 $__a = $3;
 while(1) {
  __ZNSt3__16vectorIiNS_9allocatorIiEEE24__RAII_IncreaseAnnotatorC2ERKS3_j($__annotator,$2,1);
  $4 = $__a;
  $5 = ((($2)) + 4|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (__ZNSt3__116__to_raw_pointerIiEEPT_S2_($6)|0);
  __ZNSt3__116allocator_traitsINS_9allocatorIiEEE9constructIiEEvRS2_PT_($4,$7);
  $8 = ((($2)) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = ((($9)) + 4|0);
  HEAP32[$8>>2] = $10;
  $11 = $1;
  $12 = (($11) + -1)|0;
  $1 = $12;
  __ZNSt3__16vectorIiNS_9allocatorIiEEE24__RAII_IncreaseAnnotator6__doneEv($__annotator);
  $13 = $1;
  $14 = ($13>>>0)>(0);
  if (!($14)) {
   break;
  }
 }
 STACKTOP = sp;return;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIiEEE9constructIiEEvRS2_PT_($__a,$__p) {
 $__a = $__a|0;
 $__p = $__p|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__p;
 $2 = $1;
 HEAP32[$2>>2] = 0;
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__annotator = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__annotator = sp + 12|0;
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = (__ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE7__allocEv($2)|0);
 $__a = $3;
 while(1) {
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE24__RAII_IncreaseAnnotatorC2ERKS6_j($__annotator,$2,1);
  $4 = $__a;
  $5 = ((($2)) + 4|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (__ZNSt3__116__to_raw_pointerIN6ikfast23IkSingleDOFSolutionBaseIdEEEEPT_S5_($6)|0);
  __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE9constructIS4_EEvRS5_PT_($4,$7);
  $8 = ((($2)) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = ((($9)) + 24|0);
  HEAP32[$8>>2] = $10;
  $11 = $1;
  $12 = (($11) + -1)|0;
  $1 = $12;
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE24__RAII_IncreaseAnnotator6__doneEv($__annotator);
  $13 = $1;
  $14 = ($13>>>0)>(0);
  if (!($14)) {
   break;
  }
 }
 STACKTOP = sp;return;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE9constructIS4_EEvRS5_PT_($__a,$__p) {
 $__a = $__a|0;
 $__p = $__p|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__p;
 $2 = $1;
 __ZN6ikfast23IkSingleDOFSolutionBaseIdEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN6ikfast23IkSingleDOFSolutionBaseIdEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 HEAPF64[$1>>3] = 0.0;
 $2 = ((($1)) + 8|0);
 HEAPF64[$2>>3] = 0.0;
 $3 = ((($1)) + 16|0);
 HEAP8[$3>>0] = -1;
 $4 = ((($1)) + 18|0);
 HEAP8[$4>>0] = 1;
 $5 = ((($1)) + 19|0);
 $6 = ((($5)) + 4|0);
 HEAP8[$6>>0] = -1;
 $7 = ((($1)) + 19|0);
 $8 = ((($7)) + 3|0);
 HEAP8[$8>>0] = -1;
 $9 = ((($1)) + 19|0);
 $10 = ((($9)) + 2|0);
 HEAP8[$10>>0] = -1;
 $11 = ((($1)) + 19|0);
 $12 = ((($11)) + 1|0);
 HEAP8[$12>>0] = -1;
 $13 = ((($1)) + 19|0);
 HEAP8[$13>>0] = -1;
 STACKTOP = sp;return;
}
function __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEC1Ej($this,$__wch) {
 $this = $this|0;
 $__wch = $__wch|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__wch;
 $4 = $0;
 $5 = ((($4)) + 64|0);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEEC2Ev($5);
 $6 = 1204;
 HEAP32[$4>>2] = $6;
 $7 = ((($4)) + 64|0);
 $8 = 1244;
 HEAP32[$7>>2] = $8;
 $9 = ((($4)) + 8|0);
 $10 = 1224;
 HEAP32[$9>>2] = $10;
 $11 = ((($4)) + 12|0);
 __THREW__ = 0;
 $12 = 1004;
 invoke_viii(420,($4|0),($12|0),($11|0));
 $13 = __THREW__; __THREW__ = 0;
 $14 = $13&1;
 if ($14) {
  $24 = ___cxa_find_matching_catch()|0;
  $25 = tempRet0;
  $2 = $24;
  $3 = $25;
 } else {
  $15 = 1204;
  HEAP32[$4>>2] = $15;
  $16 = ((($4)) + 64|0);
  $17 = 1244;
  HEAP32[$16>>2] = $17;
  $18 = ((($4)) + 8|0);
  $19 = 1224;
  HEAP32[$18>>2] = $19;
  $20 = ((($4)) + 12|0);
  $21 = $1;
  __THREW__ = 0;
  invoke_vii(421,($20|0),($21|0));
  $22 = __THREW__; __THREW__ = 0;
  $23 = $22&1;
  if (!($23)) {
   STACKTOP = sp;return;
  }
  $26 = ___cxa_find_matching_catch()|0;
  $27 = tempRet0;
  $2 = $26;
  $3 = $27;
  __THREW__ = 0;
  $28 = __THREW__; __THREW__ = 0;
  $29 = $28&1;
  if ($29) {
   $35 = ___cxa_find_matching_catch(0|0)|0;
   $36 = tempRet0;
   ___clang_call_terminate($35);
   // unreachable;
  }
 }
 $30 = ((($4)) + 64|0);
 __THREW__ = 0;
 invoke_vi(86,($30|0));
 $31 = __THREW__; __THREW__ = 0;
 $32 = $31&1;
 if ($32) {
  $35 = ___cxa_find_matching_catch(0|0)|0;
  $36 = tempRet0;
  ___clang_call_terminate($35);
  // unreachable;
 } else {
  $33 = $2;
  $34 = $3;
  ___resumeException($33|0);
  // unreachable;
 }
}
function __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($__os,$__str) {
 $__os = $__os|0;
 $__str = $__str|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__os;
 $1 = $__str;
 $2 = $0;
 $3 = $1;
 $4 = $1;
 $5 = (__ZNSt3__111char_traitsIcE6lengthEPKc($4)|0);
 $6 = (__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($2,$3,$5)|0);
 STACKTOP = sp;return ($6|0);
}
function __ZNKSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 12|0);
 __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($agg$result,$2);
 STACKTOP = sp;return;
}
function __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 __THREW__ = 0;
 invoke_vii(422,($3|0),(1000|0));
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if (!($5)) {
  $6 = ((($3)) + 64|0);
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
  STACKTOP = sp;return;
 }
 $7 = ___cxa_find_matching_catch()|0;
 $8 = tempRet0;
 $1 = $7;
 $2 = $8;
 $9 = ((($3)) + 64|0);
 __THREW__ = 0;
 invoke_vi(86,($9|0));
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if ($11) {
  $14 = ___cxa_find_matching_catch(0|0)|0;
  $15 = tempRet0;
  ___clang_call_terminate($14);
  // unreachable;
 } else {
  $12 = $1;
  $13 = $2;
  ___resumeException($12|0);
  // unreachable;
 }
}
function __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this,$vtt) {
 $this = $this|0;
 $vtt = $vtt|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $vtt;
 $4 = $0;
 $5 = $1;
 $6 = HEAP32[$5>>2]|0;
 HEAP32[$4>>2] = $6;
 $7 = ((($5)) + 32|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = HEAP32[$4>>2]|0;
 $10 = ((($9)) + -12|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($4) + ($11)|0);
 HEAP32[$12>>2] = $8;
 $13 = ((($5)) + 36|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ((($4)) + 8|0);
 HEAP32[$15>>2] = $14;
 $16 = ((($4)) + 12|0);
 __THREW__ = 0;
 invoke_vi(21,($16|0));
 $17 = __THREW__; __THREW__ = 0;
 $18 = $17&1;
 if (!($18)) {
  STACKTOP = sp;return;
 }
 $19 = ___cxa_find_matching_catch()|0;
 $20 = tempRet0;
 $2 = $19;
 $3 = $20;
 __THREW__ = 0;
 $21 = __THREW__; __THREW__ = 0;
 $22 = $21&1;
 if ($22) {
  $25 = ___cxa_find_matching_catch(0|0)|0;
  $26 = tempRet0;
  ___clang_call_terminate($25);
  // unreachable;
 } else {
  $23 = $2;
  $24 = $3;
  ___resumeException($23|0);
  // unreachable;
 }
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 $4 = 1048;
 HEAP32[$3>>2] = $4;
 $5 = ((($3)) + 32|0);
 __THREW__ = 0;
 invoke_vi(415,($5|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($3);
  STACKTOP = sp;return;
 }
 $8 = ___cxa_find_matching_catch()|0;
 $9 = tempRet0;
 $1 = $8;
 $2 = $9;
 __THREW__ = 0;
 invoke_vi(88,($3|0));
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if ($11) {
  $14 = ___cxa_find_matching_catch(0|0)|0;
  $15 = tempRet0;
  ___clang_call_terminate($14);
  // unreachable;
 } else {
  $12 = $1;
  $13 = $2;
  ___resumeException($12|0);
  // unreachable;
 }
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 __THREW__ = 0;
 invoke_vi(21,($3|0));
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if ($5) {
  $6 = ___cxa_find_matching_catch()|0;
  $7 = tempRet0;
  $1 = $6;
  $2 = $7;
  __ZdlPv($3);
  $8 = $1;
  $9 = $2;
  ___resumeException($8|0);
  // unreachable;
 } else {
  __ZdlPv($3);
  STACKTOP = sp;return;
 }
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekoffExNS_8ios_base7seekdirEj($agg$result,$this,$0,$1,$__way,$__wch) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 $__way = $__way|0;
 $__wch = $__wch|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $__noff = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $3 = sp + 8|0;
 $__noff = sp;
 $2 = $this;
 $6 = $3;
 $7 = $6;
 HEAP32[$7>>2] = $0;
 $8 = (($6) + 4)|0;
 $9 = $8;
 HEAP32[$9>>2] = $1;
 $4 = $__way;
 $5 = $__wch;
 $10 = $2;
 $11 = ((($10)) + 44|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv($10)|0);
 $14 = ($12>>>0)<($13>>>0);
 if ($14) {
  $15 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv($10)|0);
  $16 = ((($10)) + 44|0);
  HEAP32[$16>>2] = $15;
 }
 $17 = $5;
 $18 = $17 & 24;
 $19 = ($18|0)==(0);
 if ($19) {
  __ZNSt3__14fposI11__mbstate_tEC2Ex($agg$result,-1,-1);
  STACKTOP = sp;return;
 }
 $20 = $5;
 $21 = $20 & 24;
 $22 = ($21|0)==(24);
 $23 = $4;
 $24 = ($23|0)==(1);
 $or$cond = $22 & $24;
 if ($or$cond) {
  __ZNSt3__14fposI11__mbstate_tEC2Ex($agg$result,-1,-1);
  STACKTOP = sp;return;
 }
 $25 = $4;
 do {
  if ((($25|0) == 0)) {
   $26 = $__noff;
   $27 = $26;
   HEAP32[$27>>2] = 0;
   $28 = (($26) + 4)|0;
   $29 = $28;
   HEAP32[$29>>2] = 0;
  } else if ((($25|0) == 2)) {
   $55 = ((($10)) + 44|0);
   $56 = HEAP32[$55>>2]|0;
   $57 = ((($10)) + 32|0);
   $58 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4dataEv($57)|0);
   $59 = $56;
   $60 = $58;
   $61 = (($59) - ($60))|0;
   $62 = ($61|0)<(0);
   $63 = $62 << 31 >> 31;
   $64 = $__noff;
   $65 = $64;
   HEAP32[$65>>2] = $61;
   $66 = (($64) + 4)|0;
   $67 = $66;
   HEAP32[$67>>2] = $63;
  } else if ((($25|0) == 1)) {
   $30 = $5;
   $31 = $30 & 8;
   $32 = ($31|0)!=(0);
   if ($32) {
    $33 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4gptrEv($10)|0);
    $34 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5ebackEv($10)|0);
    $35 = $33;
    $36 = $34;
    $37 = (($35) - ($36))|0;
    $38 = ($37|0)<(0);
    $39 = $38 << 31 >> 31;
    $40 = $__noff;
    $41 = $40;
    HEAP32[$41>>2] = $37;
    $42 = (($40) + 4)|0;
    $43 = $42;
    HEAP32[$43>>2] = $39;
    break;
   } else {
    $44 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv($10)|0);
    $45 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5pbaseEv($10)|0);
    $46 = $44;
    $47 = $45;
    $48 = (($46) - ($47))|0;
    $49 = ($48|0)<(0);
    $50 = $49 << 31 >> 31;
    $51 = $__noff;
    $52 = $51;
    HEAP32[$52>>2] = $48;
    $53 = (($51) + 4)|0;
    $54 = $53;
    HEAP32[$54>>2] = $50;
    break;
   }
  } else {
   __ZNSt3__14fposI11__mbstate_tEC2Ex($agg$result,-1,-1);
   STACKTOP = sp;return;
  }
 } while(0);
 $68 = $3;
 $69 = $68;
 $70 = HEAP32[$69>>2]|0;
 $71 = (($68) + 4)|0;
 $72 = $71;
 $73 = HEAP32[$72>>2]|0;
 $74 = $__noff;
 $75 = $74;
 $76 = HEAP32[$75>>2]|0;
 $77 = (($74) + 4)|0;
 $78 = $77;
 $79 = HEAP32[$78>>2]|0;
 $80 = (_i64Add(($76|0),($79|0),($70|0),($73|0))|0);
 $81 = tempRet0;
 $82 = $__noff;
 $83 = $82;
 HEAP32[$83>>2] = $80;
 $84 = (($82) + 4)|0;
 $85 = $84;
 HEAP32[$85>>2] = $81;
 $86 = $__noff;
 $87 = $86;
 $88 = HEAP32[$87>>2]|0;
 $89 = (($86) + 4)|0;
 $90 = $89;
 $91 = HEAP32[$90>>2]|0;
 $92 = ($91|0)<(0);
 if (!($92)) {
  $93 = ((($10)) + 44|0);
  $94 = HEAP32[$93>>2]|0;
  $95 = ((($10)) + 32|0);
  $96 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4dataEv($95)|0);
  $97 = $94;
  $98 = $96;
  $99 = (($97) - ($98))|0;
  $100 = ($99|0)<(0);
  $101 = $100 << 31 >> 31;
  $102 = $__noff;
  $103 = $102;
  $104 = HEAP32[$103>>2]|0;
  $105 = (($102) + 4)|0;
  $106 = $105;
  $107 = HEAP32[$106>>2]|0;
  $108 = ($101|0)<($107|0);
  $109 = ($99>>>0)<($104>>>0);
  $110 = ($101|0)==($107|0);
  $111 = $110 & $109;
  $112 = $108 | $111;
  if (!($112)) {
   $113 = $__noff;
   $114 = $113;
   $115 = HEAP32[$114>>2]|0;
   $116 = (($113) + 4)|0;
   $117 = $116;
   $118 = HEAP32[$117>>2]|0;
   $119 = ($115|0)!=(0);
   $120 = ($118|0)!=(0);
   $121 = $119 | $120;
   if ($121) {
    $122 = $5;
    $123 = $122 & 8;
    $124 = ($123|0)!=(0);
    if ($124) {
     $125 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4gptrEv($10)|0);
     $126 = ($125|0)==(0|0);
     if ($126) {
      __ZNSt3__14fposI11__mbstate_tEC2Ex($agg$result,-1,-1);
      STACKTOP = sp;return;
     }
    }
    $127 = $5;
    $128 = $127 & 16;
    $129 = ($128|0)!=(0);
    if ($129) {
     $130 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv($10)|0);
     $131 = ($130|0)==(0|0);
     if ($131) {
      __ZNSt3__14fposI11__mbstate_tEC2Ex($agg$result,-1,-1);
      STACKTOP = sp;return;
     }
    }
   }
   $132 = $5;
   $133 = $132 & 8;
   $134 = ($133|0)!=(0);
   if ($134) {
    $135 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5ebackEv($10)|0);
    $136 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5ebackEv($10)|0);
    $137 = $__noff;
    $138 = $137;
    $139 = HEAP32[$138>>2]|0;
    $140 = (($137) + 4)|0;
    $141 = $140;
    $142 = HEAP32[$141>>2]|0;
    $143 = (($136) + ($139)|0);
    $144 = ((($10)) + 44|0);
    $145 = HEAP32[$144>>2]|0;
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4setgEPcS4_S4_($10,$135,$143,$145);
   }
   $146 = $5;
   $147 = $146 & 16;
   $148 = ($147|0)!=(0);
   if ($148) {
    $149 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5pbaseEv($10)|0);
    $150 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5epptrEv($10)|0);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4setpEPcS4_($10,$149,$150);
    $151 = $__noff;
    $152 = $151;
    $153 = HEAP32[$152>>2]|0;
    $154 = (($151) + 4)|0;
    $155 = $154;
    $156 = HEAP32[$155>>2]|0;
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5pbumpEi($10,$153);
   }
   $157 = $__noff;
   $158 = $157;
   $159 = HEAP32[$158>>2]|0;
   $160 = (($157) + 4)|0;
   $161 = $160;
   $162 = HEAP32[$161>>2]|0;
   __ZNSt3__14fposI11__mbstate_tEC2Ex($agg$result,$159,$162);
   STACKTOP = sp;return;
  }
 }
 __ZNSt3__14fposI11__mbstate_tEC2Ex($agg$result,-1,-1);
 STACKTOP = sp;return;
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekposENS_4fposI11__mbstate_tEEj($agg$result,$this,$__sp,$__wch) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__sp = $__sp|0;
 $__wch = $__wch|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__wch;
 $2 = $0;
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($3)) + 16|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (__ZNKSt3__14fposI11__mbstate_tEcvxEv($__sp)|0);
 $7 = tempRet0;
 $8 = $1;
 FUNCTION_TABLE_viiiiii[$5 & 511]($agg$result,$2,$6,$7,0,$8);
 STACKTOP = sp;return;
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9underflowEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $1;
 $3 = ((($2)) + 44|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv($2)|0);
 $6 = ($4>>>0)<($5>>>0);
 if ($6) {
  $7 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv($2)|0);
  $8 = ((($2)) + 44|0);
  HEAP32[$8>>2] = $7;
 }
 $9 = ((($2)) + 48|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = $10 & 8;
 $12 = ($11|0)!=(0);
 if ($12) {
  $13 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5egptrEv($2)|0);
  $14 = ((($2)) + 44|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = ($13>>>0)<($15>>>0);
  if ($16) {
   $17 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5ebackEv($2)|0);
   $18 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4gptrEv($2)|0);
   $19 = ((($2)) + 44|0);
   $20 = HEAP32[$19>>2]|0;
   __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4setgEPcS4_S4_($2,$17,$18,$20);
  }
  $21 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4gptrEv($2)|0);
  $22 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5egptrEv($2)|0);
  $23 = ($21>>>0)<($22>>>0);
  if ($23) {
   $24 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4gptrEv($2)|0);
   $25 = HEAP8[$24>>0]|0;
   $26 = (__ZNSt3__111char_traitsIcE11to_int_typeEc($25)|0);
   $0 = $26;
   $28 = $0;
   STACKTOP = sp;return ($28|0);
  }
 }
 $27 = (__ZNSt3__111char_traitsIcE3eofEv()|0);
 $0 = $27;
 $28 = $0;
 STACKTOP = sp;return ($28|0);
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9pbackfailEi($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__c;
 $3 = $1;
 $4 = ((($3)) + 44|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv($3)|0);
 $7 = ($5>>>0)<($6>>>0);
 if ($7) {
  $8 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv($3)|0);
  $9 = ((($3)) + 44|0);
  HEAP32[$9>>2] = $8;
 }
 $10 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5ebackEv($3)|0);
 $11 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4gptrEv($3)|0);
 $12 = ($10>>>0)<($11>>>0);
 do {
  if ($12) {
   $13 = $2;
   $14 = (__ZNSt3__111char_traitsIcE3eofEv()|0);
   $15 = (__ZNSt3__111char_traitsIcE11eq_int_typeEii($13,$14)|0);
   if ($15) {
    $16 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5ebackEv($3)|0);
    $17 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4gptrEv($3)|0);
    $18 = ((($17)) + -1|0);
    $19 = ((($3)) + 44|0);
    $20 = HEAP32[$19>>2]|0;
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4setgEPcS4_S4_($3,$16,$18,$20);
    $21 = $2;
    $22 = (__ZNSt3__111char_traitsIcE7not_eofEi($21)|0);
    $0 = $22;
    $43 = $0;
    STACKTOP = sp;return ($43|0);
   }
   $23 = ((($3)) + 48|0);
   $24 = HEAP32[$23>>2]|0;
   $25 = $24 & 16;
   $26 = ($25|0)!=(0);
   if (!($26)) {
    $27 = $2;
    $28 = (__ZNSt3__111char_traitsIcE12to_char_typeEi($27)|0);
    $29 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4gptrEv($3)|0);
    $30 = ((($29)) + -1|0);
    $31 = HEAP8[$30>>0]|0;
    $32 = (__ZNSt3__111char_traitsIcE2eqEcc($28,$31)|0);
    if (!($32)) {
     break;
    }
   }
   $33 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5ebackEv($3)|0);
   $34 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4gptrEv($3)|0);
   $35 = ((($34)) + -1|0);
   $36 = ((($3)) + 44|0);
   $37 = HEAP32[$36>>2]|0;
   __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4setgEPcS4_S4_($3,$33,$35,$37);
   $38 = $2;
   $39 = (__ZNSt3__111char_traitsIcE12to_char_typeEi($38)|0);
   $40 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4gptrEv($3)|0);
   HEAP8[$40>>0] = $39;
   $41 = $2;
   $0 = $41;
   $43 = $0;
   STACKTOP = sp;return ($43|0);
  }
 } while(0);
 $42 = (__ZNSt3__111char_traitsIcE3eofEv()|0);
 $0 = $42;
 $43 = $0;
 STACKTOP = sp;return ($43|0);
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE8overflowEi($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $__hm = 0, $__ninp = 0, $__nout = 0, $__p = 0, $__p1 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $6 = sp + 4|0;
 $1 = $this;
 $2 = $__c;
 $7 = $1;
 $8 = $2;
 $9 = (__ZNSt3__111char_traitsIcE3eofEv()|0);
 $10 = (__ZNSt3__111char_traitsIcE11eq_int_typeEii($8,$9)|0);
 if ($10) {
  $92 = $2;
  $93 = (__ZNSt3__111char_traitsIcE7not_eofEi($92)|0);
  $0 = $93;
  $94 = $0;
  STACKTOP = sp;return ($94|0);
 }
 $11 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4gptrEv($7)|0);
 $12 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5ebackEv($7)|0);
 $13 = $11;
 $14 = $12;
 $15 = (($13) - ($14))|0;
 $__ninp = $15;
 $16 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv($7)|0);
 $17 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5epptrEv($7)|0);
 $18 = ($16|0)==($17|0);
 do {
  if ($18) {
   $19 = ((($7)) + 48|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = $20 & 16;
   $22 = ($21|0)!=(0);
   if (!($22)) {
    $23 = (__ZNSt3__111char_traitsIcE3eofEv()|0);
    $0 = $23;
    $94 = $0;
    STACKTOP = sp;return ($94|0);
   }
   __THREW__ = 0;
   $24 = (invoke_ii(423,($7|0))|0);
   $25 = __THREW__; __THREW__ = 0;
   $26 = $25&1;
   if (!($26)) {
    __THREW__ = 0;
    $27 = (invoke_ii(424,($7|0))|0);
    $28 = __THREW__; __THREW__ = 0;
    $29 = $28&1;
    if (!($29)) {
     $30 = $24;
     $31 = $27;
     $32 = (($30) - ($31))|0;
     $__nout = $32;
     $33 = ((($7)) + 44|0);
     $34 = HEAP32[$33>>2]|0;
     __THREW__ = 0;
     $35 = (invoke_ii(424,($7|0))|0);
     $36 = __THREW__; __THREW__ = 0;
     $37 = $36&1;
     if (!($37)) {
      $38 = $34;
      $39 = $35;
      $40 = (($38) - ($39))|0;
      $__hm = $40;
      $41 = ((($7)) + 32|0);
      __THREW__ = 0;
      invoke_vii(425,($41|0),0);
      $42 = __THREW__; __THREW__ = 0;
      $43 = $42&1;
      if (!($43)) {
       $44 = ((($7)) + 32|0);
       $45 = ((($7)) + 32|0);
       $46 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE8capacityEv($45)|0);
       __THREW__ = 0;
       invoke_vii(426,($44|0),($46|0));
       $47 = __THREW__; __THREW__ = 0;
       $48 = $47&1;
       if (!($48)) {
        $49 = ((($7)) + 32|0);
        $50 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4dataEv($49)|0);
        $__p = $50;
        $51 = $__p;
        $52 = $__p;
        $53 = ((($7)) + 32|0);
        $54 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4sizeEv($53)|0);
        $55 = (($52) + ($54)|0);
        __THREW__ = 0;
        invoke_viii(427,($7|0),($51|0),($55|0));
        $56 = __THREW__; __THREW__ = 0;
        $57 = $56&1;
        if (!($57)) {
         $58 = $__nout;
         __THREW__ = 0;
         invoke_vii(428,($7|0),($58|0));
         $59 = __THREW__; __THREW__ = 0;
         $60 = $59&1;
         if (!($60)) {
          __THREW__ = 0;
          $61 = (invoke_ii(424,($7|0))|0);
          $62 = __THREW__; __THREW__ = 0;
          $63 = $62&1;
          if (!($63)) {
           $64 = $__hm;
           $65 = (($61) + ($64)|0);
           $66 = ((($7)) + 44|0);
           HEAP32[$66>>2] = $65;
           break;
          }
         }
        }
       }
      }
     }
    }
   }
   $67 = ___cxa_find_matching_catch(0|0)|0;
   $68 = tempRet0;
   $3 = $67;
   $4 = $68;
   $69 = $3;
   (___cxa_begin_catch(($69|0))|0);
   $70 = (__ZNSt3__111char_traitsIcE3eofEv()|0);
   $0 = $70;
   $5 = 1;
   ___cxa_end_catch();
   $94 = $0;
   STACKTOP = sp;return ($94|0);
  }
 } while(0);
 $71 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv($7)|0);
 $72 = ((($71)) + 1|0);
 HEAP32[$6>>2] = $72;
 $73 = ((($7)) + 44|0);
 $74 = (__ZNSt3__13maxIPcEERKT_S4_S4_($6,$73)|0);
 $75 = HEAP32[$74>>2]|0;
 $76 = ((($7)) + 44|0);
 HEAP32[$76>>2] = $75;
 $77 = ((($7)) + 48|0);
 $78 = HEAP32[$77>>2]|0;
 $79 = $78 & 8;
 $80 = ($79|0)!=(0);
 if ($80) {
  $81 = ((($7)) + 32|0);
  $82 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4dataEv($81)|0);
  $__p1 = $82;
  $83 = $__p1;
  $84 = $__p1;
  $85 = $__ninp;
  $86 = (($84) + ($85)|0);
  $87 = ((($7)) + 44|0);
  $88 = HEAP32[$87>>2]|0;
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4setgEPcS4_S4_($7,$83,$86,$88);
 }
 $89 = $2;
 $90 = $89&255;
 $91 = (__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5sputcEc($7,$90)|0);
 $0 = $91;
 $94 = $0;
 STACKTOP = sp;return ($94|0);
}
function __ZNSt3__111char_traitsIcE3eofEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -1;
}
function __ZNSt3__111char_traitsIcE11eq_int_typeEii($__c1,$__c2) {
 $__c1 = $__c1|0;
 $__c2 = $__c2|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__c1;
 $1 = $__c2;
 $2 = $0;
 $3 = $1;
 $4 = ($2|0)==($3|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNSt3__13maxIPcEERKT_S4_S4_($__a,$__b) {
 $__a = $__a|0;
 $__b = $__b|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__a;
 $1 = $__b;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy>>0]=HEAP8[$2>>0]|0;
 $5 = (__ZNSt3__13maxIPcNS_6__lessIS1_S1_EEEERKT_S6_S6_T0_($3,$4,$$byval_copy)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNSt3__111char_traitsIcE7not_eofEi($__c) {
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__c;
 $1 = $0;
 $2 = (__ZNSt3__111char_traitsIcE3eofEv()|0);
 $3 = (__ZNSt3__111char_traitsIcE11eq_int_typeEii($1,$2)|0);
 if ($3) {
  $4 = (__ZNSt3__111char_traitsIcE3eofEv()|0);
  $5 = $4 ^ -1;
  $7 = $5;
  STACKTOP = sp;return ($7|0);
 } else {
  $6 = $0;
  $7 = $6;
  STACKTOP = sp;return ($7|0);
 }
 return (0)|0;
}
function __ZNSt3__111char_traitsIcE11to_int_typeEc($__c) {
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__c;
 $1 = $0;
 $2 = $1&255;
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__13maxIPcNS_6__lessIS1_S1_EEEERKT_S6_S6_T0_($__a,$__b,$__comp) {
 $__a = $__a|0;
 $__b = $__b|0;
 $__comp = $__comp|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__b;
 $2 = $0;
 $3 = $1;
 $4 = (__ZNKSt3__16__lessIPcS1_EclERKS1_S4_($__comp,$2,$3)|0);
 $5 = $1;
 $6 = $0;
 $7 = $4 ? $5 : $6;
 STACKTOP = sp;return ($7|0);
}
function __ZNKSt3__16__lessIPcS1_EclERKS1_S4_($this,$__x,$__y) {
 $this = $this|0;
 $__x = $__x|0;
 $__y = $__y|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__x;
 $2 = $__y;
 $3 = $1;
 $4 = HEAP32[$3>>2]|0;
 $5 = $2;
 $6 = HEAP32[$5>>2]|0;
 $7 = ($4>>>0)<($6>>>0);
 STACKTOP = sp;return ($7|0);
}
function __ZNSt3__111char_traitsIcE12to_char_typeEi($__c) {
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__c;
 $1 = $0;
 $2 = $1&255;
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__111char_traitsIcE2eqEcc($__c1,$__c2) {
 $__c1 = $__c1|0;
 $__c2 = $__c2|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__c1;
 $1 = $__c2;
 $2 = $0;
 $3 = $2 << 24 >> 24;
 $4 = $1;
 $5 = $4 << 24 >> 24;
 $6 = ($3|0)==($5|0);
 STACKTOP = sp;return ($6|0);
}
function __ZNKSt3__14fposI11__mbstate_tEcvxEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 8|0);
 $3 = $2;
 $4 = $3;
 $5 = HEAP32[$4>>2]|0;
 $6 = (($3) + 4)|0;
 $7 = $6;
 $8 = HEAP32[$7>>2]|0;
 tempRet0 = ($8);
 STACKTOP = sp;return ($5|0);
}
function __ZNSt3__14fposI11__mbstate_tEC2Ex($this,$0,$1) {
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $3 = sp;
 $2 = $this;
 $4 = $3;
 $5 = $4;
 HEAP32[$5>>2] = $0;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = $1;
 $8 = $2;
 ;HEAP32[$8>>2]=0|0;HEAP32[$8+4>>2]=0|0;
 $9 = ((($8)) + 8|0);
 $10 = $3;
 $11 = $10;
 $12 = HEAP32[$11>>2]|0;
 $13 = (($10) + 4)|0;
 $14 = $13;
 $15 = HEAP32[$14>>2]|0;
 $16 = $9;
 $17 = $16;
 HEAP32[$17>>2] = $12;
 $18 = (($16) + 4)|0;
 $19 = $18;
 HEAP32[$19>>2] = $15;
 STACKTOP = sp;return;
}
function __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 __THREW__ = 0;
 invoke_vi(35,($3|0));
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if ($5) {
  $6 = ___cxa_find_matching_catch()|0;
  $7 = tempRet0;
  $1 = $6;
  $2 = $7;
  __ZdlPv($3);
  $8 = $1;
  $9 = $2;
  ___resumeException($8|0);
  // unreachable;
 } else {
  __ZdlPv($3);
  STACKTOP = sp;return;
 }
}
function __ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + -8|0);
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($2);
 STACKTOP = sp;return;
}
function __ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + -8|0);
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($2);
 STACKTOP = sp;return;
}
function __ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + -12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (($1) + ($4)|0);
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($5);
 STACKTOP = sp;return;
}
function __ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + -12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (($1) + ($4)|0);
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($5);
 STACKTOP = sp;return;
}
function __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 6|0;
 $2 = sp + 5|0;
 $3 = sp + 4|0;
 $0 = $this;
 $4 = $0;
 $5 = ((($4)) + 48|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $6 & 16;
 $8 = ($7|0)!=(0);
 if ($8) {
  $9 = ((($4)) + 44|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv($4)|0);
  $12 = ($10>>>0)<($11>>>0);
  if ($12) {
   $13 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv($4)|0);
   $14 = ((($4)) + 44|0);
   HEAP32[$14>>2] = $13;
  }
  $15 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5pbaseEv($4)|0);
  $16 = ((($4)) + 44|0);
  $17 = HEAP32[$16>>2]|0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IPcEET_S8_RKS4_($agg$result,$15,$17,$1);
  STACKTOP = sp;return;
 }
 $18 = ((($4)) + 48|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = $19 & 8;
 $21 = ($20|0)!=(0);
 if ($21) {
  $22 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5ebackEv($4)|0);
  $23 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5egptrEv($4)|0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IPcEET_S8_RKS4_($agg$result,$22,$23,$2);
  STACKTOP = sp;return;
 } else {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS4_($agg$result,$3);
  STACKTOP = sp;return;
 }
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IPcEET_S8_RKS4_($this,$__first,$__last,$__a) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 $__a = $__a|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 17|0;
 $4 = sp + 16|0;
 $0 = $this;
 $1 = $__first;
 $2 = $__last;
 $3 = $__a;
 $5 = $0;
 ;HEAP8[$$byval_copy>>0]=HEAP8[$4>>0]|0;
 __ZNSt3__117__compressed_pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repES5_EC2ES5_($5,$$byval_copy);
 $6 = $1;
 $7 = $2;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_($5,$6,$7);
 STACKTOP = sp;return;
}
function __ZNSt3__117__compressed_pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repES5_EC2ES5_($this,$__t2) {
 $this = $this|0;
 $__t2 = $__t2|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 5|0;
 $1 = sp + 4|0;
 $0 = $this;
 $2 = $0;
 (__ZNSt3__17forwardINS_9allocatorIcEEEERT_RNS_16remove_referenceIS3_E4typeE($__t2)|0);
 ;HEAP8[$$byval_copy>>0]=HEAP8[$1>>0]|0;
 __ZNSt3__128__libcpp_compressed_pair_impINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repES5_Lj2EEC2ES5_($2,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNSt3__17forwardINS_9allocatorIcEEEERT_RNS_16remove_referenceIS3_E4typeE($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repES5_Lj2EEC2ES5_($this,$__t2) {
 $this = $this|0;
 $__t2 = $__t2|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 (__ZNSt3__17forwardINS_9allocatorIcEEEERT_RNS_16remove_referenceIS3_E4typeE($__t2)|0);
 STACKTOP = sp;return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__cap = 0, $__p = 0, $__sz = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $3 = sp + 24|0;
 $0 = $this;
 $1 = $__first;
 $2 = $__last;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = (__ZNSt3__18distanceIPcEENS_15iterator_traitsIT_E15difference_typeES3_S3_($5,$6)|0);
 $__sz = $7;
 $8 = $__sz;
 $9 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE8max_sizeEv($4)|0);
 $10 = ($8>>>0)>($9>>>0);
 if ($10) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($4);
  // unreachable;
 }
 $11 = $__sz;
 $12 = ($11>>>0)<(11);
 $13 = $__sz;
 if ($12) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE16__set_short_sizeEj($4,$13);
  $14 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE19__get_short_pointerEv($4)|0);
  $__p = $14;
 } else {
  $15 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE11__recommendEj($13)|0);
  $__cap = $15;
  $16 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7__allocEv($4)|0);
  $17 = $__cap;
  $18 = (($17) + 1)|0;
  $19 = (__ZNSt3__116allocator_traitsINS_9allocatorIcEEE8allocateERS2_j($16,$18)|0);
  $__p = $19;
  $20 = $__p;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE18__set_long_pointerEPc($4,$20);
  $21 = $__cap;
  $22 = (($21) + 1)|0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE14__set_long_capEj($4,$22);
  $23 = $__sz;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE15__set_long_sizeEj($4,$23);
 }
 while(1) {
  $24 = $1;
  $25 = $2;
  $26 = ($24|0)!=($25|0);
  $27 = $__p;
  if (!($26)) {
   break;
  }
  $28 = $1;
  __ZNSt3__111char_traitsIcE6assignERcRKc($27,$28);
  $29 = $1;
  $30 = ((($29)) + 1|0);
  $1 = $30;
  $31 = $__p;
  $32 = ((($31)) + 1|0);
  $__p = $32;
 }
 HEAP8[$3>>0] = 0;
 __ZNSt3__111char_traitsIcE6assignERcRKc($27,$3);
 STACKTOP = sp;return;
}
function __ZNSt3__18distanceIPcEENS_15iterator_traitsIT_E15difference_typeES3_S3_($__first,$__last) {
 $__first = $__first|0;
 $__last = $__last|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__first;
 $1 = $__last;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy>>0]=HEAP8[$2>>0]|0;
 $5 = (__ZNSt3__110__distanceIPcEENS_15iterator_traitsIT_E15difference_typeES3_S3_NS_26random_access_iterator_tagE($3,$4,$$byval_copy)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIcEEE8allocateERS2_j($__a,$__n) {
 $__a = $__a|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = (__ZNSt3__19allocatorIcE8allocateEjPKv($2,$3,0)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNSt3__111char_traitsIcE6assignERcRKc($__c1,$__c2) {
 $__c1 = $__c1|0;
 $__c2 = $__c2|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__c1;
 $1 = $__c2;
 $2 = $1;
 $3 = HEAP8[$2>>0]|0;
 $4 = $0;
 HEAP8[$4>>0] = $3;
 STACKTOP = sp;return;
}
function __ZNSt3__19allocatorIcE8allocateEjPKv($this,$__n,$0) {
 $this = $this|0;
 $__n = $__n|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__n;
 $3 = $0;
 $4 = $2;
 $5 = $4;
 $6 = (__ZNSt3__110__allocateEj($5)|0);
 STACKTOP = sp;return ($6|0);
}
function __ZNSt3__110__distanceIPcEENS_15iterator_traitsIT_E15difference_typeES3_S3_NS_26random_access_iterator_tagE($__first,$__last,$0) {
 $__first = $__first|0;
 $__last = $__last|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $__first;
 $2 = $__last;
 $3 = $2;
 $4 = $1;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 STACKTOP = sp;return ($7|0);
}
function __ZNSt3__111char_traitsIcE6lengthEPKc($__s) {
 $__s = $__s|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__s;
 $1 = $0;
 $2 = (_strlen(($1|0))|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($__os,$__str,$__len) {
 $__os = $__os|0;
 $__str = $__str|0;
 $__len = $__len|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $9 = 0, $__s = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 36|0;
 $__s = sp + 16|0;
 $5 = sp + 4|0;
 $6 = sp;
 $0 = $__os;
 $1 = $__str;
 $2 = $__len;
 $7 = $0;
 __THREW__ = 0;
 invoke_vii(429,($__s|0),($7|0));
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 L1: do {
  if ($9) {
   label = 9;
  } else {
   __THREW__ = 0;
   $10 = (invoke_ii(430,($__s|0))|0);
   $11 = __THREW__; __THREW__ = 0;
   $12 = $11&1;
   do {
    if (!($12)) {
     if ($10) {
      $13 = $0;
      __ZNSt3__119ostreambuf_iteratorIcNS_11char_traitsIcEEEC2ERNS_13basic_ostreamIcS2_EE($5,$13);
      $14 = $1;
      $15 = $0;
      $16 = HEAP32[$15>>2]|0;
      $17 = ((($16)) + -12|0);
      $18 = HEAP32[$17>>2]|0;
      $19 = (($15) + ($18)|0);
      __THREW__ = 0;
      $20 = (invoke_ii(431,($19|0))|0);
      $21 = __THREW__; __THREW__ = 0;
      $22 = $21&1;
      if ($22) {
       break;
      }
      $23 = $20 & 176;
      $24 = ($23|0)==(32);
      $25 = $1;
      $26 = $2;
      $27 = (($25) + ($26)|0);
      $28 = $24 ? $27 : $25;
      $29 = $1;
      $30 = $2;
      $31 = (($29) + ($30)|0);
      $32 = $0;
      $33 = HEAP32[$32>>2]|0;
      $34 = ((($33)) + -12|0);
      $35 = HEAP32[$34>>2]|0;
      $36 = (($32) + ($35)|0);
      $37 = $0;
      $38 = HEAP32[$37>>2]|0;
      $39 = ((($38)) + -12|0);
      $40 = HEAP32[$39>>2]|0;
      $41 = (($37) + ($40)|0);
      __THREW__ = 0;
      $42 = (invoke_ii(432,($41|0))|0);
      $43 = __THREW__; __THREW__ = 0;
      $44 = $43&1;
      if ($44) {
       break;
      }
      __THREW__ = 0;
      ;HEAP32[$$byval_copy>>2]=HEAP32[$5>>2]|0;
      $45 = (invoke_iiiiiii(433,($$byval_copy|0),($14|0),($28|0),($31|0),($36|0),($42|0))|0);
      $46 = __THREW__; __THREW__ = 0;
      $47 = $46&1;
      if ($47) {
       break;
      }
      HEAP32[$6>>2] = $45;
      $48 = (__ZNKSt3__119ostreambuf_iteratorIcNS_11char_traitsIcEEE6failedEv($6)|0);
      if ($48) {
       $49 = $0;
       $50 = HEAP32[$49>>2]|0;
       $51 = ((($50)) + -12|0);
       $52 = HEAP32[$51>>2]|0;
       $53 = (($49) + ($52)|0);
       __THREW__ = 0;
       invoke_vii(434,($53|0),5);
       $54 = __THREW__; __THREW__ = 0;
       $55 = $54&1;
       if ($55) {
        break;
       }
      }
     }
     __THREW__ = 0;
     invoke_vi(435,($__s|0));
     $62 = __THREW__; __THREW__ = 0;
     $63 = $62&1;
     if ($63) {
      label = 9;
      break L1;
     }
     $72 = $0;
     STACKTOP = sp;return ($72|0);
    }
   } while(0);
   $58 = ___cxa_find_matching_catch(0|0)|0;
   $59 = tempRet0;
   $3 = $58;
   $4 = $59;
   __THREW__ = 0;
   invoke_vi(435,($__s|0));
   $60 = __THREW__; __THREW__ = 0;
   $61 = $60&1;
   if ($61) {
    $79 = ___cxa_find_matching_catch(0|0)|0;
    $80 = tempRet0;
    ___clang_call_terminate($79);
    // unreachable;
   }
  }
 } while(0);
 if ((label|0) == 9) {
  $56 = ___cxa_find_matching_catch(0|0)|0;
  $57 = tempRet0;
  $3 = $56;
  $4 = $57;
 }
 $64 = $3;
 (___cxa_begin_catch(($64|0))|0);
 $65 = $0;
 $66 = HEAP32[$65>>2]|0;
 $67 = ((($66)) + -12|0);
 $68 = HEAP32[$67>>2]|0;
 $69 = (($65) + ($68)|0);
 __THREW__ = 0;
 invoke_vi(436,($69|0));
 $70 = __THREW__; __THREW__ = 0;
 $71 = $70&1;
 if (!($71)) {
  ___cxa_end_catch();
  $72 = $0;
  STACKTOP = sp;return ($72|0);
 }
 $73 = ___cxa_find_matching_catch()|0;
 $74 = tempRet0;
 $3 = $73;
 $4 = $74;
 __THREW__ = 0;
 invoke_v(437);
 $75 = __THREW__; __THREW__ = 0;
 $76 = $75&1;
 if ($76) {
  $79 = ___cxa_find_matching_catch(0|0)|0;
  $80 = tempRet0;
  ___clang_call_terminate($79);
  // unreachable;
 } else {
  $77 = $3;
  $78 = $4;
  ___resumeException($77|0);
  // unreachable;
 }
 return (0)|0;
}
function __ZNSt3__119ostreambuf_iteratorIcNS_11char_traitsIcEEEC2ERNS_13basic_ostreamIcS2_EE($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__s;
 $4 = $0;
 $5 = $1;
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + -12|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (($5) + ($8)|0);
 __THREW__ = 0;
 $10 = (invoke_ii(438,($9|0))|0);
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 if ($12) {
  $13 = ___cxa_find_matching_catch()|0;
  $14 = tempRet0;
  $2 = $13;
  $3 = $14;
  $15 = $2;
  ___cxa_call_unexpected(($15|0));
  // unreachable;
 } else {
  HEAP32[$4>>2] = $10;
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__18ios_base5flagsEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($__s,$__ob,$__op,$__oe,$__iob,$__fl) {
 $__s = $__s|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $9 = 0, $__np = 0, $__ns = 0, $__sp = 0, $__sz = 0, $cleanup$dest = 0, $switch = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 68|0;
 $6 = sp + 48|0;
 $7 = sp + 32|0;
 $__sp = sp + 20|0;
 $10 = sp + 8|0;
 $12 = sp;
 $1 = $__ob;
 $2 = $__op;
 $3 = $__oe;
 $4 = $__iob;
 $5 = $__fl;
 $13 = HEAP32[$__s>>2]|0;
 $14 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$6>>2] = $14;
 $15 = (__ZNKSt3__19nullptr_tcvPT_INS_15basic_streambufIcNS_11char_traitsIcEEEEEEv($6)|0);
 $16 = ($13|0)==($15|0);
 if ($16) {
  ;HEAP32[$0>>2]=HEAP32[$__s>>2]|0;
  $83 = HEAP32[$0>>2]|0;
  STACKTOP = sp;return ($83|0);
 }
 $17 = $3;
 $18 = $1;
 $19 = $17;
 $20 = $18;
 $21 = (($19) - ($20))|0;
 $__sz = $21;
 $22 = $4;
 $23 = (__ZNKSt3__18ios_base5widthEv($22)|0);
 $__ns = $23;
 $24 = $__ns;
 $25 = $__sz;
 $26 = ($24|0)>($25|0);
 if ($26) {
  $27 = $__sz;
  $28 = $__ns;
  $29 = (($28) - ($27))|0;
  $__ns = $29;
 } else {
  $__ns = 0;
 }
 $30 = $2;
 $31 = $1;
 $32 = $30;
 $33 = $31;
 $34 = (($32) - ($33))|0;
 $__np = $34;
 $35 = $__np;
 $36 = ($35|0)>(0);
 if ($36) {
  $37 = HEAP32[$__s>>2]|0;
  $38 = $1;
  $39 = $__np;
  $40 = (__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5sputnEPKci($37,$38,$39)|0);
  $41 = $__np;
  $42 = ($40|0)!=($41|0);
  if ($42) {
   $43 = (__ZNSt3__115__get_nullptr_tEv()|0);
   HEAP32[$7>>2] = $43;
   $44 = (__ZNKSt3__19nullptr_tcvPT_INS_15basic_streambufIcNS_11char_traitsIcEEEEEEv($7)|0);
   HEAP32[$__s>>2] = $44;
   ;HEAP32[$0>>2]=HEAP32[$__s>>2]|0;
   $83 = HEAP32[$0>>2]|0;
   STACKTOP = sp;return ($83|0);
  }
 }
 $45 = $__ns;
 $46 = ($45|0)>(0);
 L14: do {
  if ($46) {
   $47 = $__ns;
   $48 = $5;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2Ejc($__sp,$47,$48);
   $49 = HEAP32[$__s>>2]|0;
   $50 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4dataEv($__sp)|0);
   $51 = $__ns;
   __THREW__ = 0;
   $52 = (invoke_iiii(439,($49|0),($50|0),($51|0))|0);
   $53 = __THREW__; __THREW__ = 0;
   $54 = $53&1;
   do {
    if (!($54)) {
     $55 = $__ns;
     $56 = ($52|0)!=($55|0);
     if ($56) {
      __THREW__ = 0;
      $57 = (invoke_i(404)|0);
      $58 = __THREW__; __THREW__ = 0;
      $59 = $58&1;
      if ($59) {
       break;
      }
      HEAP32[$10>>2] = $57;
      __THREW__ = 0;
      $60 = (invoke_ii(440,($10|0))|0);
      $61 = __THREW__; __THREW__ = 0;
      $62 = $61&1;
      if ($62) {
       break;
      }
      HEAP32[$__s>>2] = $60;
      ;HEAP32[$0>>2]=HEAP32[$__s>>2]|0;
      $11 = 1;
     } else {
      $11 = 0;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sp);
     $cleanup$dest = $11;
     $switch = ($cleanup$dest>>>0)<(1);
     if ($switch) {
      break L14;
     }
     $83 = HEAP32[$0>>2]|0;
     STACKTOP = sp;return ($83|0);
    }
   } while(0);
   $63 = ___cxa_find_matching_catch()|0;
   $64 = tempRet0;
   $8 = $63;
   $9 = $64;
   __THREW__ = 0;
   invoke_vi(415,($__sp|0));
   $65 = __THREW__; __THREW__ = 0;
   $66 = $65&1;
   if ($66) {
    $86 = ___cxa_find_matching_catch(0|0)|0;
    $87 = tempRet0;
    ___clang_call_terminate($86);
    // unreachable;
   } else {
    $84 = $8;
    $85 = $9;
    ___resumeException($84|0);
    // unreachable;
   }
  }
 } while(0);
 $67 = $3;
 $68 = $2;
 $69 = $67;
 $70 = $68;
 $71 = (($69) - ($70))|0;
 $__np = $71;
 $72 = $__np;
 $73 = ($72|0)>(0);
 if ($73) {
  $74 = HEAP32[$__s>>2]|0;
  $75 = $2;
  $76 = $__np;
  $77 = (__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5sputnEPKci($74,$75,$76)|0);
  $78 = $__np;
  $79 = ($77|0)!=($78|0);
  if ($79) {
   $80 = (__ZNSt3__115__get_nullptr_tEv()|0);
   HEAP32[$12>>2] = $80;
   $81 = (__ZNKSt3__19nullptr_tcvPT_INS_15basic_streambufIcNS_11char_traitsIcEEEEEEv($12)|0);
   HEAP32[$__s>>2] = $81;
   ;HEAP32[$0>>2]=HEAP32[$__s>>2]|0;
   $83 = HEAP32[$0>>2]|0;
   STACKTOP = sp;return ($83|0);
  }
 }
 $82 = $4;
 (__ZNSt3__18ios_base5widthEi($82,0)|0);
 ;HEAP32[$0>>2]=HEAP32[$__s>>2]|0;
 $83 = HEAP32[$0>>2]|0;
 STACKTOP = sp;return ($83|0);
}
function __ZNKSt3__119ostreambuf_iteratorIcNS_11char_traitsIcEEE6failedEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__19nullptr_tcvPT_INS_15basic_streambufIcNS_11char_traitsIcEEEEEEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return (0|0);
}
function __ZNKSt3__18ios_base5widthEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 12|0);
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__18ios_base5widthEi($this,$__wide) {
 $this = $this|0;
 $__wide = $__wide|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $__r = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__wide;
 $2 = $0;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $__r = $4;
 $5 = $1;
 $6 = ((($2)) + 12|0);
 HEAP32[$6>>2] = $5;
 $7 = $__r;
 STACKTOP = sp;return ($7|0);
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEC2Ej($this,$__wch) {
 $this = $this|0;
 $__wch = $__wch|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $4 = sp;
 $0 = $this;
 $1 = $__wch;
 $5 = $0;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($5);
 $6 = 1048;
 HEAP32[$5>>2] = $6;
 $7 = ((($5)) + 32|0);
 __THREW__ = 0;
 invoke_vi(441,($7|0));
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if ($9) {
  $19 = ___cxa_find_matching_catch()|0;
  $20 = tempRet0;
  $2 = $19;
  $3 = $20;
 } else {
  $10 = ((($5)) + 44|0);
  HEAP32[$10>>2] = 0;
  $11 = ((($5)) + 48|0);
  $12 = $1;
  HEAP32[$11>>2] = $12;
  __THREW__ = 0;
  invoke_vi(441,($4|0));
  $13 = __THREW__; __THREW__ = 0;
  $14 = $13&1;
  do {
   if ($14) {
    label = 7;
   } else {
    __THREW__ = 0;
    invoke_vii(442,($5|0),($4|0));
    $15 = __THREW__; __THREW__ = 0;
    $16 = $15&1;
    if ($16) {
     $23 = ___cxa_find_matching_catch()|0;
     $24 = tempRet0;
     $2 = $23;
     $3 = $24;
     __THREW__ = 0;
     invoke_vi(415,($4|0));
     $25 = __THREW__; __THREW__ = 0;
     $26 = $25&1;
     if (!($26)) {
      break;
     }
     $33 = ___cxa_find_matching_catch(0|0)|0;
     $34 = tempRet0;
     ___clang_call_terminate($33);
     // unreachable;
    } else {
     __THREW__ = 0;
     invoke_vi(415,($4|0));
     $17 = __THREW__; __THREW__ = 0;
     $18 = $17&1;
     if ($18) {
      label = 7;
      break;
     }
     STACKTOP = sp;return;
    }
   }
  } while(0);
  if ((label|0) == 7) {
   $21 = ___cxa_find_matching_catch()|0;
   $22 = tempRet0;
   $2 = $21;
   $3 = $22;
  }
  __THREW__ = 0;
  invoke_vi(415,($7|0));
  $27 = __THREW__; __THREW__ = 0;
  $28 = $27&1;
  if ($28) {
   $33 = ___cxa_find_matching_catch(0|0)|0;
   $34 = tempRet0;
   ___clang_call_terminate($33);
   // unreachable;
  }
 }
 __THREW__ = 0;
 invoke_vi(88,($5|0));
 $29 = __THREW__; __THREW__ = 0;
 $30 = $29&1;
 if ($30) {
  $33 = ___cxa_find_matching_catch(0|0)|0;
  $34 = tempRet0;
  ___clang_call_terminate($33);
  // unreachable;
 } else {
  $31 = $2;
  $32 = $3;
  ___resumeException($31|0);
  // unreachable;
 }
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__sz = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__s;
 $2 = $0;
 $3 = ((($2)) + 32|0);
 $4 = $1;
 (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($3,$4)|0);
 $5 = ((($2)) + 44|0);
 HEAP32[$5>>2] = 0;
 $6 = ((($2)) + 48|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = $7 & 8;
 $9 = ($8|0)!=(0);
 if ($9) {
  $10 = ((($2)) + 32|0);
  $11 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4dataEv($10)|0);
  $12 = ((($2)) + 32|0);
  $13 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4sizeEv($12)|0);
  $14 = (($11) + ($13)|0);
  $15 = ((($2)) + 44|0);
  HEAP32[$15>>2] = $14;
  $16 = ((($2)) + 32|0);
  $17 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4dataEv($16)|0);
  $18 = ((($2)) + 32|0);
  $19 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4dataEv($18)|0);
  $20 = ((($2)) + 44|0);
  $21 = HEAP32[$20>>2]|0;
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4setgEPcS4_S4_($2,$17,$19,$21);
 }
 $22 = ((($2)) + 48|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = $23 & 16;
 $25 = ($24|0)!=(0);
 if (!($25)) {
  STACKTOP = sp;return;
 }
 $26 = ((($2)) + 32|0);
 $27 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4sizeEv($26)|0);
 $__sz = $27;
 $28 = ((($2)) + 32|0);
 $29 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4dataEv($28)|0);
 $30 = $__sz;
 $31 = (($29) + ($30)|0);
 $32 = ((($2)) + 44|0);
 HEAP32[$32>>2] = $31;
 $33 = ((($2)) + 32|0);
 $34 = ((($2)) + 32|0);
 $35 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE8capacityEv($34)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEj($33,$35);
 $36 = ((($2)) + 32|0);
 $37 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4dataEv($36)|0);
 $38 = ((($2)) + 32|0);
 $39 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4dataEv($38)|0);
 $40 = ((($2)) + 32|0);
 $41 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4sizeEv($40)|0);
 $42 = (($39) + ($41)|0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4setpEPcS4_($2,$37,$42);
 $43 = ((($2)) + 48|0);
 $44 = HEAP32[$43>>2]|0;
 $45 = $44 & 3;
 $46 = ($45|0)!=(0);
 if (!($46)) {
  STACKTOP = sp;return;
 }
 $47 = $__sz;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5pbumpEi($2,$47);
 STACKTOP = sp;return;
}
function __Z14__libcpp_isnanIdEbT_($__lcpp_x) {
 $__lcpp_x = +$__lcpp_x;
 var $0 = 0.0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0.0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__lcpp_x;
 $3 = $0;
 __THREW__ = 0;
 $4 = (invoke_id(386,(+$3))|0);
 $5 = tempRet0;
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if ($7) {
  $14 = ___cxa_find_matching_catch()|0;
  $15 = tempRet0;
  $1 = $14;
  $2 = $15;
  $16 = $1;
  ___cxa_call_unexpected(($16|0));
  // unreachable;
 } else {
  $8 = $5 & 2147483647;
  $9 = ($8>>>0)>(2146435072);
  $10 = ($4>>>0)>(0);
  $11 = ($8|0)==(2146435072);
  $12 = $11 & $10;
  $13 = $9 | $12;
  STACKTOP = sp;return ($13|0);
 }
 return (0)|0;
}
function __Z13IKatan2Simpledd($fy,$fx) {
 $fy = +$fy;
 $fx = +$fx;
 var $0 = 0.0, $1 = 0.0, $2 = 0.0, $3 = 0.0, $4 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $fy;
 $1 = $fx;
 $2 = $0;
 $3 = $1;
 $4 = (+Math_atan2((+$2),(+$3)));
 STACKTOP = sp;return (+$4);
}
function __ZNSt3__123__libcpp_numeric_limitsIdLb1EE9quiet_NaNEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return +nan;
}
function _strtoull_l($s,$p,$base,$loc) {
 $s = $s|0;
 $p = $p|0;
 $base = $base|0;
 $loc = $loc|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strtoull($s,$p,$base)|0);
 $1 = tempRet0;
 tempRet0 = ($1);
 return ($0|0);
}
function _strtoll_l($s,$p,$base,$loc) {
 $s = $s|0;
 $p = $p|0;
 $base = $base|0;
 $loc = $loc|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strtoll($s,$p,$base)|0);
 $1 = tempRet0;
 tempRet0 = ($1);
 return ($0|0);
}
function _isdigit_l($c,$l) {
 $c = $c|0;
 $l = $l|0;
 var $0 = 0, $isdigit = 0, $isdigittmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isdigittmp = (($c) + -48)|0;
 $isdigit = ($isdigittmp>>>0)<(10);
 $0 = $isdigit&1;
 return ($0|0);
}
function _isxdigit_l($c,$l) {
 $c = $c|0;
 $l = $l|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_isxdigit($c)|0);
 return ($0|0);
}
function _mbrlen($s,$n,$st) {
 $s = $s|0;
 $n = $n|0;
 $st = $st|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($st|0)!=(0|0);
 $1 = $0 ? $st : 1776;
 $2 = (_mbrtowc(0,$s,$n,$1)|0);
 return ($2|0);
}
function _mbrtowc($wc,$src,$n,$st) {
 $wc = $wc|0;
 $src = $src|0;
 $n = $n|0;
 $st = $st|0;
 var $$0 = 0, $$023 = 0, $$1 = 0, $$lcssa = 0, $$lcssa34 = 0, $$st = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $c$04 = 0, $c$1 = 0, $c$2 = 0, $s$05 = 0, $s$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 HEAP32[$0>>2] = $wc;
 $1 = ($st|0)==(0|0);
 $$st = $1 ? 1784 : $st;
 $2 = HEAP32[$$st>>2]|0;
 $3 = ($src|0)==(0|0);
 L1: do {
  if ($3) {
   $4 = ($2|0)==(0);
   if ($4) {
    $$0 = 0;
    STACKTOP = sp;return ($$0|0);
   }
  } else {
   $5 = ($wc|0)==(0|0);
   if ($5) {
    HEAP32[$0>>2] = $0;
    $11 = $0;
   } else {
    $11 = $wc;
   }
   $6 = ($n|0)==(0);
   if ($6) {
    $$0 = -2;
    STACKTOP = sp;return ($$0|0);
   }
   $7 = ($2|0)==(0);
   do {
    if ($7) {
     $8 = HEAP8[$src>>0]|0;
     $9 = $8&255;
     $10 = ($8<<24>>24)>(-1);
     if ($10) {
      HEAP32[$11>>2] = $9;
      $12 = ($8<<24>>24)!=(0);
      $13 = $12&1;
      $$0 = $13;
      STACKTOP = sp;return ($$0|0);
     } else {
      $14 = (($9) + -194)|0;
      $15 = ($14>>>0)>(50);
      if ($15) {
       break L1;
      }
      $16 = ((($src)) + 1|0);
      $17 = (1568 + ($14<<2)|0);
      $18 = HEAP32[$17>>2]|0;
      $19 = (($n) + -1)|0;
      $20 = ($19|0)==(0);
      if ($20) {
       $c$2 = $18;
       break;
      } else {
       $$023 = $19;$c$04 = $18;$s$05 = $16;
       label = 11;
       break;
      }
     }
    } else {
     $$023 = $n;$c$04 = $2;$s$05 = $src;
     label = 11;
    }
   } while(0);
   L18: do {
    if ((label|0) == 11) {
     $21 = HEAP8[$s$05>>0]|0;
     $22 = $21&255;
     $23 = $22 >>> 3;
     $24 = (($23) + -16)|0;
     $25 = $c$04 >> 26;
     $26 = (($23) + ($25))|0;
     $27 = $24 | $26;
     $28 = ($27>>>0)>(7);
     if ($28) {
      break L1;
     } else {
      $$1 = $$023;$32 = $21;$c$1 = $c$04;$s$1 = $s$05;
     }
     while(1) {
      $29 = $c$1 << 6;
      $30 = ((($s$1)) + 1|0);
      $31 = $32&255;
      $33 = (($31) + -128)|0;
      $34 = $33 | $29;
      $35 = (($$1) + -1)|0;
      $36 = ($34|0)<(0);
      if (!($36)) {
       $$lcssa = $34;$$lcssa34 = $35;
       break;
      }
      $38 = ($35|0)==(0);
      if ($38) {
       $c$2 = $34;
       break L18;
      }
      $39 = HEAP8[$30>>0]|0;
      $40 = $39 & -64;
      $41 = ($40<<24>>24)==(-128);
      if ($41) {
       $$1 = $35;$32 = $39;$c$1 = $34;$s$1 = $30;
      } else {
       break L1;
      }
     }
     HEAP32[$$st>>2] = 0;
     HEAP32[$11>>2] = $$lcssa;
     $37 = (($n) - ($$lcssa34))|0;
     $$0 = $37;
     STACKTOP = sp;return ($$0|0);
    }
   } while(0);
   HEAP32[$$st>>2] = $c$2;
   $$0 = -2;
   STACKTOP = sp;return ($$0|0);
  }
 } while(0);
 HEAP32[$$st>>2] = 0;
 $42 = (___errno_location()|0);
 HEAP32[$42>>2] = 84;
 $$0 = -1;
 STACKTOP = sp;return ($$0|0);
}
function _mbsinit($st) {
 $st = $st|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($st|0)==(0|0);
 if ($0) {
  $4 = 1;
 } else {
  $1 = HEAP32[$st>>2]|0;
  $2 = ($1|0)==(0);
  $4 = $2;
 }
 $3 = $4&1;
 return ($3|0);
}
function _mbsnrtowcs($wcs,$src,$n,$wn,$st) {
 $wcs = $wcs|0;
 $src = $src|0;
 $n = $n|0;
 $wn = $wn|0;
 $st = $st|0;
 var $$02$ = 0, $$021 = 0, $$0218 = 0, $$1 = 0, $$13 = 0, $$216 = 0, $$24 = 0, $$313 = 0, $$cast = 0, $$lcssa = 0, $$lcssa57 = 0, $$pr$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cnt$019 = 0, $cnt$1 = 0, $cnt$214 = 0, $cnt$214$lcssa = 0, $cnt$3 = 0, $or$cond = 0, $or$cond17 = 0, $s = 0, $wbuf = 0, $wcs$ = 0;
 var $wn$ = 0, $ws$020 = 0, $ws$020$lcssa56 = 0, $ws$09 = 0, $ws$1 = 0, $ws$215 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1040|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $wbuf = sp + 8|0;
 $s = sp;
 $0 = HEAP32[$src>>2]|0;
 HEAP32[$s>>2] = $0;
 $1 = ($wcs|0)!=(0|0);
 $wn$ = $1 ? $wn : 256;
 $wcs$ = $1 ? $wcs : $wbuf;
 $$cast = $0;
 $2 = ($0|0)!=(0);
 $3 = ($wn$|0)!=(0);
 $or$cond17 = $3 & $2;
 L1: do {
  if ($or$cond17) {
   $$021 = $n;$$0218 = $wn$;$37 = $$cast;$cnt$019 = 0;$ws$020 = $wcs$;
   while(1) {
    $4 = $$021 >>> 2;
    $5 = ($4>>>0)>=($$0218>>>0);
    $6 = ($$021>>>0)>(131);
    $7 = $6 | $5;
    if (!($7)) {
     $$1 = $$021;$$24 = $$0218;$18 = $37;$cnt$1 = $cnt$019;$ws$09 = $ws$020;
     break L1;
    }
    $$02$ = $5 ? $$0218 : $4;
    $8 = (($$021) - ($$02$))|0;
    $9 = (_mbsrtowcs($ws$020,$s,$$02$,$st)|0);
    $10 = ($9|0)==(-1);
    if ($10) {
     $$lcssa57 = $8;$ws$020$lcssa56 = $ws$020;
     break;
    }
    $11 = ($ws$020|0)==($wbuf|0);
    $12 = (($ws$020) + ($9<<2)|0);
    $13 = $11 ? 0 : $9;
    $$13 = (($$0218) - ($13))|0;
    $ws$1 = $11 ? $ws$020 : $12;
    $14 = (($9) + ($cnt$019))|0;
    $15 = HEAP32[$s>>2]|0;
    $16 = ($15|0)!=(0|0);
    $17 = ($$0218|0)!=($13|0);
    $or$cond = $17 & $16;
    if ($or$cond) {
     $$021 = $8;$$0218 = $$13;$37 = $15;$cnt$019 = $14;$ws$020 = $ws$1;
    } else {
     $$1 = $8;$$24 = $$13;$18 = $15;$cnt$1 = $14;$ws$09 = $ws$1;
     break L1;
    }
   }
   $$pr$pre = HEAP32[$s>>2]|0;
   $$1 = $$lcssa57;$$24 = 0;$18 = $$pr$pre;$cnt$1 = -1;$ws$09 = $ws$020$lcssa56;
  } else {
   $$1 = $n;$$24 = $wn$;$18 = $$cast;$cnt$1 = 0;$ws$09 = $wcs$;
  }
 } while(0);
 $19 = ($18|0)==(0|0);
 L8: do {
  if ($19) {
   $cnt$3 = $cnt$1;
  } else {
   $20 = ($$24|0)!=(0);
   $21 = ($$1|0)!=(0);
   $22 = $20 & $21;
   if ($22) {
    $$216 = $$1;$$313 = $$24;$23 = $18;$cnt$214 = $cnt$1;$ws$215 = $ws$09;
    while(1) {
     $24 = (_mbrtowc($ws$215,$23,$$216,$st)|0);
     $25 = (($24) + 2)|0;
     $26 = ($25>>>0)<(3);
     if ($26) {
      $$lcssa = $24;$cnt$214$lcssa = $cnt$214;
      break;
     }
     $27 = HEAP32[$s>>2]|0;
     $28 = (($27) + ($24)|0);
     HEAP32[$s>>2] = $28;
     $29 = (($$216) - ($24))|0;
     $30 = ((($ws$215)) + 4|0);
     $31 = (($$313) + -1)|0;
     $32 = (($cnt$214) + 1)|0;
     $33 = ($31|0)!=(0);
     $34 = ($$216|0)!=($24|0);
     $35 = $33 & $34;
     if ($35) {
      $$216 = $29;$$313 = $31;$23 = $28;$cnt$214 = $32;$ws$215 = $30;
     } else {
      $cnt$3 = $32;
      break L8;
     }
    }
    if ((($$lcssa|0) == 0)) {
     HEAP32[$s>>2] = 0;
     $cnt$3 = $cnt$214$lcssa;
     break;
    } else if ((($$lcssa|0) == -1)) {
     $cnt$3 = -1;
     break;
    } else {
     HEAP32[$st>>2] = 0;
     $cnt$3 = $cnt$214$lcssa;
     break;
    }
   } else {
    $cnt$3 = $cnt$1;
   }
  }
 } while(0);
 if (!($1)) {
  STACKTOP = sp;return ($cnt$3|0);
 }
 $36 = HEAP32[$s>>2]|0;
 HEAP32[$src>>2] = $36;
 STACKTOP = sp;return ($cnt$3|0);
}
function _mbsrtowcs($ws,$src,$wn,$st) {
 $ws = $ws|0;
 $src = $src|0;
 $wn = $wn|0;
 $st = $st|0;
 var $$0 = 0, $$02$ph = 0, $$0219 = 0, $$03 = 0, $$1 = 0, $$1$lcssa = 0, $$14$lcssa = 0, $$1415 = 0, $$2 = 0, $$2$lcssa = 0, $$25 = 0, $$25$lcssa = 0, $$3 = 0, $$36 = 0, $$4 = 0, $$434 = 0, $$47$ph = 0, $$4718 = 0, $$48 = 0, $$5 = 0;
 var $$5$lcssa = 0, $$6 = 0, $$6$lcssa = 0, $$7 = 0, $$8 = 0, $$833 = 0, $$in = 0, $$lcssa102 = 0, $$lcssa90 = 0, $$lcssa94 = 0, $$lcssa96 = 0, $$lcssa97 = 0, $$lcssa98 = 0, $$old1 = 0, $$pre$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0;
 var $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0;
 var $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $c$2 = 0, $c$4 = 0, $c$5 = 0, $c$6 = 0, $or$cond = 0, $s$0 = 0, $s$1$lcssa = 0, $s$10 = 0, $s$1035 = 0, $s$109 = 0, $s$116 = 0, $s$2 = 0, $s$2$lcssa = 0, $s$3 = 0, $s$4 = 0, $s$5$lcssa = 0, $s$5$ph = 0;
 var $s$520 = 0, $s$6 = 0, $s$6$lcssa = 0, $s$7 = 0, $s$7$lcssa = 0, $s$8 = 0, $s$9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$src>>2]|0;
 $1 = ($st|0)==(0|0);
 if ($1) {
  label = 5;
 } else {
  $2 = HEAP32[$st>>2]|0;
  $3 = ($2|0)==(0);
  if ($3) {
   label = 5;
  } else {
   $4 = ($ws|0)==(0|0);
   if ($4) {
    $$36 = $wn;$c$2 = $2;$s$3 = $0;
    label = 16;
   } else {
    HEAP32[$st>>2] = 0;
    $$3 = $ws;$$7 = $wn;$c$4 = $2;$s$8 = $0;
    label = 37;
   }
  }
 }
 if ((label|0) == 5) {
  $5 = ($ws|0)==(0|0);
  if ($5) {
   $$03 = $wn;$s$0 = $0;
   label = 7;
  } else {
   $$02$ph = $ws;$$47$ph = $wn;$s$5$ph = $0;
   label = 6;
  }
 }
 L7: while(1) {
  if ((label|0) == 6) {
   label = 0;
   $6 = ($$47$ph|0)==(0);
   if ($6) {
    $s$5$lcssa = $s$5$ph;
    label = 26;
    break;
   } else {
    $$0219 = $$02$ph;$$4718 = $$47$ph;$s$520 = $s$5$ph;
   }
   while(1) {
    $63 = HEAP8[$s$520>>0]|0;
    $64 = $63&255;
    $65 = (($64) + -1)|0;
    $66 = ($65>>>0)<(127);
    do {
     if ($66) {
      $67 = $s$520;
      $68 = $67 & 3;
      $69 = ($68|0)==(0);
      $70 = ($$4718>>>0)>(4);
      $or$cond = $70 & $69;
      if ($or$cond) {
       $$1 = $$0219;$$5 = $$4718;$s$6 = $s$520;
       while(1) {
        $71 = HEAP32[$s$6>>2]|0;
        $72 = (($71) + -16843009)|0;
        $73 = $72 | $71;
        $74 = $73 & -2139062144;
        $75 = ($74|0)==(0);
        if (!($75)) {
         $$1$lcssa = $$1;$$5$lcssa = $$5;$$lcssa94 = $71;$s$6$lcssa = $s$6;
         label = 32;
         break;
        }
        $76 = ((($s$6)) + 1|0);
        $77 = $71 & 255;
        $78 = ((($$1)) + 4|0);
        HEAP32[$$1>>2] = $77;
        $79 = ((($s$6)) + 2|0);
        $80 = HEAP8[$76>>0]|0;
        $81 = $80&255;
        $82 = ((($$1)) + 8|0);
        HEAP32[$78>>2] = $81;
        $83 = ((($s$6)) + 3|0);
        $84 = HEAP8[$79>>0]|0;
        $85 = $84&255;
        $86 = ((($$1)) + 12|0);
        HEAP32[$82>>2] = $85;
        $87 = ((($s$6)) + 4|0);
        $88 = HEAP8[$83>>0]|0;
        $89 = $88&255;
        $90 = ((($$1)) + 16|0);
        HEAP32[$86>>2] = $89;
        $91 = (($$5) + -4)|0;
        $$old1 = ($91>>>0)>(4);
        if ($$old1) {
         $$1 = $90;$$5 = $91;$s$6 = $87;
        } else {
         $$lcssa96 = $87;$$lcssa97 = $90;$$lcssa98 = $91;
         label = 31;
         break;
        }
       }
       if ((label|0) == 31) {
        label = 0;
        $$pre$pre = HEAP8[$$lcssa96>>0]|0;
        $$2 = $$lcssa97;$$6 = $$lcssa98;$94 = $$pre$pre;$s$7 = $$lcssa96;
        break;
       }
       else if ((label|0) == 32) {
        label = 0;
        $92 = $$lcssa94&255;
        $$2 = $$1$lcssa;$$6 = $$5$lcssa;$94 = $92;$s$7 = $s$6$lcssa;
        break;
       }
      } else {
       $$2 = $$0219;$$6 = $$4718;$94 = $63;$s$7 = $s$520;
      }
     } else {
      $$2 = $$0219;$$6 = $$4718;$94 = $63;$s$7 = $s$520;
     }
    } while(0);
    $93 = $94&255;
    $95 = (($93) + -1)|0;
    $96 = ($95>>>0)<(127);
    if (!($96)) {
     $$2$lcssa = $$2;$$6$lcssa = $$6;$$lcssa102 = $93;$s$7$lcssa = $s$7;
     break;
    }
    $97 = ((($s$7)) + 1|0);
    $98 = ((($$2)) + 4|0);
    HEAP32[$$2>>2] = $93;
    $99 = (($$6) + -1)|0;
    $100 = ($99|0)==(0);
    if ($100) {
     $s$5$lcssa = $97;
     label = 26;
     break L7;
    } else {
     $$0219 = $98;$$4718 = $99;$s$520 = $97;
    }
   }
   $101 = (($$lcssa102) + -194)|0;
   $102 = ($101>>>0)>(50);
   if ($102) {
    $$434 = $$2$lcssa;$$833 = $$6$lcssa;$s$1035 = $s$7$lcssa;
    label = 48;
    break;
   }
   $103 = ((($s$7$lcssa)) + 1|0);
   $104 = (1568 + ($101<<2)|0);
   $105 = HEAP32[$104>>2]|0;
   $$3 = $$2$lcssa;$$7 = $$6$lcssa;$c$4 = $105;$s$8 = $103;
   label = 37;
   continue;
  }
  else if ((label|0) == 7) {
   label = 0;
   $7 = HEAP8[$s$0>>0]|0;
   $8 = $7&255;
   $9 = (($8) + -1)|0;
   $10 = ($9>>>0)<(127);
   if ($10) {
    $11 = $s$0;
    $12 = $11 & 3;
    $13 = ($12|0)==(0);
    if ($13) {
     $14 = HEAP32[$s$0>>2]|0;
     $15 = (($14) + -16843009)|0;
     $16 = $15 | $14;
     $17 = $16 & -2139062144;
     $18 = ($17|0)==(0);
     if ($18) {
      $$1415 = $$03;$s$116 = $s$0;
      while(1) {
       $19 = ((($s$116)) + 4|0);
       $20 = (($$1415) + -4)|0;
       $21 = HEAP32[$19>>2]|0;
       $22 = (($21) + -16843009)|0;
       $23 = $22 | $21;
       $24 = $23 & -2139062144;
       $25 = ($24|0)==(0);
       if ($25) {
        $$1415 = $20;$s$116 = $19;
       } else {
        $$14$lcssa = $20;$$in = $21;$s$1$lcssa = $19;
        break;
       }
      }
     } else {
      $$14$lcssa = $$03;$$in = $14;$s$1$lcssa = $s$0;
     }
     $26 = $$in&255;
     $$25 = $$14$lcssa;$28 = $26;$s$2 = $s$1$lcssa;
    } else {
     $$25 = $$03;$28 = $7;$s$2 = $s$0;
    }
   } else {
    $$25 = $$03;$28 = $7;$s$2 = $s$0;
   }
   $27 = $28&255;
   $29 = (($27) + -1)|0;
   $30 = ($29>>>0)<(127);
   if ($30) {
    $31 = ((($s$2)) + 1|0);
    $32 = (($$25) + -1)|0;
    $$03 = $32;$s$0 = $31;
    label = 7;
    continue;
   } else {
    $$25$lcssa = $$25;$$lcssa90 = $27;$s$2$lcssa = $s$2;
   }
   $33 = (($$lcssa90) + -194)|0;
   $34 = ($33>>>0)>(50);
   if ($34) {
    $$434 = $ws;$$833 = $$25$lcssa;$s$1035 = $s$2$lcssa;
    label = 48;
    break;
   }
   $35 = ((($s$2$lcssa)) + 1|0);
   $36 = (1568 + ($33<<2)|0);
   $37 = HEAP32[$36>>2]|0;
   $$36 = $$25$lcssa;$c$2 = $37;$s$3 = $35;
   label = 16;
   continue;
  }
  else if ((label|0) == 16) {
   label = 0;
   $38 = HEAP8[$s$3>>0]|0;
   $39 = $38&255;
   $40 = $39 >>> 3;
   $41 = (($40) + -16)|0;
   $42 = $c$2 >> 26;
   $43 = (($40) + ($42))|0;
   $44 = $41 | $43;
   $45 = ($44>>>0)>(7);
   if ($45) {
    label = 17;
    break;
   }
   $47 = ((($s$3)) + 1|0);
   $48 = $c$2 & 33554432;
   $49 = ($48|0)==(0);
   if ($49) {
    $s$4 = $47;
   } else {
    $50 = HEAP8[$47>>0]|0;
    $51 = $50 & -64;
    $52 = ($51<<24>>24)==(-128);
    if (!($52)) {
     label = 20;
     break;
    }
    $54 = ((($s$3)) + 2|0);
    $55 = $c$2 & 524288;
    $56 = ($55|0)==(0);
    if ($56) {
     $s$4 = $54;
    } else {
     $57 = HEAP8[$54>>0]|0;
     $58 = $57 & -64;
     $59 = ($58<<24>>24)==(-128);
     if (!($59)) {
      label = 23;
      break;
     }
     $61 = ((($s$3)) + 3|0);
     $s$4 = $61;
    }
   }
   $62 = (($$36) + -1)|0;
   $$03 = $62;$s$0 = $s$4;
   label = 7;
   continue;
  }
  else if ((label|0) == 37) {
   label = 0;
   $106 = HEAP8[$s$8>>0]|0;
   $107 = $106&255;
   $108 = $107 >>> 3;
   $109 = (($108) + -16)|0;
   $110 = $c$4 >> 26;
   $111 = (($108) + ($110))|0;
   $112 = $109 | $111;
   $113 = ($112>>>0)>(7);
   if ($113) {
    label = 38;
    break;
   }
   $115 = $c$4 << 6;
   $116 = ((($s$8)) + 1|0);
   $117 = (($107) + -128)|0;
   $118 = $117 | $115;
   $119 = ($118|0)<(0);
   if ($119) {
    $120 = HEAP8[$116>>0]|0;
    $121 = $120&255;
    $122 = $121 & 192;
    $123 = ($122|0)==(128);
    if (!($123)) {
     label = 41;
     break;
    }
    $125 = $118 << 6;
    $126 = ((($s$8)) + 2|0);
    $127 = (($121) + -128)|0;
    $128 = $127 | $125;
    $129 = ($128|0)<(0);
    if ($129) {
     $130 = HEAP8[$126>>0]|0;
     $131 = $130&255;
     $132 = $131 & 192;
     $133 = ($132|0)==(128);
     if (!($133)) {
      label = 44;
      break;
     }
     $135 = $128 << 6;
     $136 = ((($s$8)) + 3|0);
     $137 = (($131) + -128)|0;
     $138 = $137 | $135;
     $c$5 = $138;$s$9 = $136;
    } else {
     $c$5 = $128;$s$9 = $126;
    }
   } else {
    $c$5 = $118;$s$9 = $116;
   }
   $139 = ((($$3)) + 4|0);
   HEAP32[$$3>>2] = $c$5;
   $140 = (($$7) + -1)|0;
   $$02$ph = $139;$$47$ph = $140;$s$5$ph = $s$9;
   label = 6;
   continue;
  }
 }
 if ((label|0) == 17) {
  $46 = ((($s$3)) + -1|0);
  $$4 = $ws;$$8 = $$36;$c$6 = $c$2;$s$10 = $46;
  label = 47;
 }
 else if ((label|0) == 20) {
  $53 = ((($s$3)) + -1|0);
  $$4 = $ws;$$8 = $$36;$c$6 = $c$2;$s$10 = $53;
  label = 47;
 }
 else if ((label|0) == 23) {
  $60 = ((($s$3)) + -1|0);
  $$4 = $ws;$$8 = $$36;$c$6 = $c$2;$s$10 = $60;
  label = 47;
 }
 else if ((label|0) == 26) {
  HEAP32[$src>>2] = $s$5$lcssa;
  $$0 = $wn;
  return ($$0|0);
 }
 else if ((label|0) == 38) {
  $114 = ((($s$8)) + -1|0);
  $$4 = $$3;$$8 = $$7;$c$6 = $c$4;$s$10 = $114;
  label = 47;
 }
 else if ((label|0) == 41) {
  $124 = ((($s$8)) + -1|0);
  $$48 = $$3;$s$109 = $124;
 }
 else if ((label|0) == 44) {
  $134 = ((($s$8)) + -1|0);
  $$48 = $$3;$s$109 = $134;
 }
 if ((label|0) == 47) {
  $141 = ($c$6|0)==(0);
  if ($141) {
   $$434 = $$4;$$833 = $$8;$s$1035 = $s$10;
   label = 48;
  } else {
   $$48 = $$4;$s$109 = $s$10;
  }
 }
 if ((label|0) == 48) {
  $142 = HEAP8[$s$1035>>0]|0;
  $143 = ($142<<24>>24)==(0);
  if ($143) {
   $144 = ($$434|0)==(0|0);
   if (!($144)) {
    HEAP32[$$434>>2] = 0;
    HEAP32[$src>>2] = 0;
   }
   $145 = (($wn) - ($$833))|0;
   $$0 = $145;
   return ($$0|0);
  } else {
   $$48 = $$434;$s$109 = $s$1035;
  }
 }
 $146 = (___errno_location()|0);
 HEAP32[$146>>2] = 84;
 $147 = ($$48|0)==(0|0);
 if ($147) {
  $$0 = -1;
  return ($$0|0);
 }
 HEAP32[$src>>2] = $s$109;
 $$0 = -1;
 return ($$0|0);
}
function _mbtowc($wc,$src,$n) {
 $wc = $wc|0;
 $src = $src|0;
 $n = $n|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 HEAP32[$0>>2] = $wc;
 $1 = ($src|0)==(0|0);
 if ($1) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $2 = ($n|0)==(0);
 do {
  if (!($2)) {
   $3 = ($wc|0)==(0|0);
   if ($3) {
    HEAP32[$0>>2] = $0;
    $7 = $0;
   } else {
    $7 = $wc;
   }
   $4 = HEAP8[$src>>0]|0;
   $5 = $4&255;
   $6 = ($4<<24>>24)>(-1);
   if ($6) {
    HEAP32[$7>>2] = $5;
    $8 = ($4<<24>>24)!=(0);
    $9 = $8&1;
    $$0 = $9;
    STACKTOP = sp;return ($$0|0);
   }
   $10 = (($5) + -194)|0;
   $11 = ($10>>>0)>(50);
   if (!($11)) {
    $12 = ((($src)) + 1|0);
    $13 = (1568 + ($10<<2)|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = ($n>>>0)<(4);
    if ($15) {
     $16 = ($n*6)|0;
     $17 = (($16) + -6)|0;
     $18 = -2147483648 >>> $17;
     $19 = $14 & $18;
     $20 = ($19|0)==(0);
     if (!($20)) {
      break;
     }
    }
    $21 = HEAP8[$12>>0]|0;
    $22 = $21&255;
    $23 = $22 >>> 3;
    $24 = (($23) + -16)|0;
    $25 = $14 >> 26;
    $26 = (($23) + ($25))|0;
    $27 = $24 | $26;
    $28 = ($27>>>0)>(7);
    if (!($28)) {
     $29 = $14 << 6;
     $30 = (($22) + -128)|0;
     $31 = $30 | $29;
     $32 = ($31|0)<(0);
     if (!($32)) {
      HEAP32[$7>>2] = $31;
      $$0 = 2;
      STACKTOP = sp;return ($$0|0);
     }
     $33 = ((($src)) + 2|0);
     $34 = HEAP8[$33>>0]|0;
     $35 = $34&255;
     $36 = $35 & 192;
     $37 = ($36|0)==(128);
     if ($37) {
      $38 = $31 << 6;
      $39 = (($35) + -128)|0;
      $40 = $39 | $38;
      $41 = ($40|0)<(0);
      if (!($41)) {
       HEAP32[$7>>2] = $40;
       $$0 = 3;
       STACKTOP = sp;return ($$0|0);
      }
      $42 = ((($src)) + 3|0);
      $43 = HEAP8[$42>>0]|0;
      $44 = $43&255;
      $45 = $44 & 192;
      $46 = ($45|0)==(128);
      if ($46) {
       $47 = $40 << 6;
       $48 = (($44) + -128)|0;
       $49 = $48 | $47;
       HEAP32[$7>>2] = $49;
       $$0 = 4;
       STACKTOP = sp;return ($$0|0);
      }
     }
    }
   }
  }
 } while(0);
 $50 = (___errno_location()|0);
 HEAP32[$50>>2] = 84;
 $$0 = -1;
 STACKTOP = sp;return ($$0|0);
}
function _wcsnrtombs($dst,$wcs,$wn,$n,$st) {
 $dst = $dst|0;
 $wcs = $wcs|0;
 $wn = $wn|0;
 $n = $n|0;
 $st = $st|0;
 var $$02$$0 = 0, $$021 = 0, $$0218 = 0, $$1 = 0, $$13 = 0, $$216 = 0, $$24 = 0, $$313 = 0, $$cast = 0, $$lcssa = 0, $$lcssa57 = 0, $$pr$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $buf = 0, $cnt$019 = 0, $cnt$1 = 0, $cnt$214 = 0, $cnt$214$lcssa = 0, $cnt$3 = 0, $dst$ = 0, $n$ = 0, $or$cond = 0;
 var $or$cond17 = 0, $s$020 = 0, $s$020$lcssa56 = 0, $s$09 = 0, $s$1 = 0, $s$215 = 0, $ws = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $buf = sp + 8|0;
 $ws = sp;
 $0 = HEAP32[$wcs>>2]|0;
 HEAP32[$ws>>2] = $0;
 $1 = ($dst|0)!=(0|0);
 $n$ = $1 ? $n : 256;
 $dst$ = $1 ? $dst : $buf;
 $$cast = $0;
 $2 = ($0|0)!=(0);
 $3 = ($n$|0)!=(0);
 $or$cond17 = $3 & $2;
 L1: do {
  if ($or$cond17) {
   $$021 = $wn;$$0218 = $n$;$38 = $$cast;$cnt$019 = 0;$s$020 = $dst$;
   while(1) {
    $4 = ($$021>>>0)>=($$0218>>>0);
    $5 = ($$021>>>0)>(32);
    $6 = $4 | $5;
    if (!($6)) {
     $$1 = $$021;$$24 = $$0218;$17 = $38;$cnt$1 = $cnt$019;$s$09 = $s$020;
     break L1;
    }
    $$02$$0 = $4 ? $$0218 : $$021;
    $7 = (($$021) - ($$02$$0))|0;
    $8 = (_wcsrtombs($s$020,$ws,$$02$$0,0)|0);
    $9 = ($8|0)==(-1);
    if ($9) {
     $$lcssa57 = $7;$s$020$lcssa56 = $s$020;
     break;
    }
    $10 = ($s$020|0)==($buf|0);
    $11 = (($s$020) + ($8)|0);
    $12 = $10 ? 0 : $8;
    $$13 = (($$0218) - ($12))|0;
    $s$1 = $10 ? $s$020 : $11;
    $13 = (($8) + ($cnt$019))|0;
    $14 = HEAP32[$ws>>2]|0;
    $15 = ($14|0)!=(0|0);
    $16 = ($$0218|0)!=($12|0);
    $or$cond = $16 & $15;
    if ($or$cond) {
     $$021 = $7;$$0218 = $$13;$38 = $14;$cnt$019 = $13;$s$020 = $s$1;
    } else {
     $$1 = $7;$$24 = $$13;$17 = $14;$cnt$1 = $13;$s$09 = $s$1;
     break L1;
    }
   }
   $$pr$pre = HEAP32[$ws>>2]|0;
   $$1 = $$lcssa57;$$24 = 0;$17 = $$pr$pre;$cnt$1 = -1;$s$09 = $s$020$lcssa56;
  } else {
   $$1 = $wn;$$24 = $n$;$17 = $$cast;$cnt$1 = 0;$s$09 = $dst$;
  }
 } while(0);
 $18 = ($17|0)==(0|0);
 L8: do {
  if ($18) {
   $cnt$3 = $cnt$1;
  } else {
   $19 = ($$24|0)!=(0);
   $20 = ($$1|0)!=(0);
   $21 = $19 & $20;
   if ($21) {
    $$216 = $$1;$$313 = $$24;$23 = $17;$cnt$214 = $cnt$1;$s$215 = $s$09;
    while(1) {
     $22 = HEAP32[$23>>2]|0;
     $24 = (_wcrtomb($s$215,$22,0)|0);
     $25 = (($24) + 1)|0;
     $26 = ($25>>>0)<(2);
     if ($26) {
      $$lcssa = $24;$cnt$214$lcssa = $cnt$214;
      break;
     }
     $28 = HEAP32[$ws>>2]|0;
     $29 = ((($28)) + 4|0);
     HEAP32[$ws>>2] = $29;
     $30 = (($$216) + -1)|0;
     $31 = (($s$215) + ($24)|0);
     $32 = (($$313) - ($24))|0;
     $33 = (($cnt$214) + 1)|0;
     $34 = ($$313|0)!=($24|0);
     $35 = ($30|0)!=(0);
     $36 = $34 & $35;
     if ($36) {
      $$216 = $30;$$313 = $32;$23 = $29;$cnt$214 = $33;$s$215 = $31;
     } else {
      $cnt$3 = $33;
      break L8;
     }
    }
    $27 = ($$lcssa|0)==(0);
    if ($27) {
     HEAP32[$ws>>2] = 0;
     $cnt$3 = $cnt$214$lcssa;
    } else {
     $cnt$3 = -1;
    }
   } else {
    $cnt$3 = $cnt$1;
   }
  }
 } while(0);
 if (!($1)) {
  STACKTOP = sp;return ($cnt$3|0);
 }
 $37 = HEAP32[$ws>>2]|0;
 HEAP32[$wcs>>2] = $37;
 STACKTOP = sp;return ($cnt$3|0);
}
function _wcsrtombs($s,$ws,$n,$st) {
 $s = $s|0;
 $ws = $ws|0;
 $n = $n|0;
 $st = $st|0;
 var $$0 = 0, $$01$lcssa = 0, $$0129 = 0, $$0129$lcssa = 0, $$0218 = 0, $$1 = 0, $$13 = 0, $$223 = 0, $$223$lcssa = 0, $$24$lcssa = 0, $$2428 = 0, $$2428$lcssa = 0, $$3 = 0, $$35 = 0, $$422 = 0, $$422$lcssa = 0, $$422$lcssa82 = 0, $$5 = 0, $$pn = 0, $$pre = 0;
 var $$pre43 = 0, $$pre44 = 0, $$pre45 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $buf = 0, $ws2$019 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $buf = sp;
 $0 = ($s|0)==(0|0);
 if ($0) {
  $2 = HEAP32[$ws>>2]|0;
  $3 = HEAP32[$2>>2]|0;
  $4 = ($3|0)==(0);
  if ($4) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  } else {
   $$0218 = 0;$5 = $3;$ws2$019 = $2;
  }
  while(1) {
   $6 = ($5>>>0)>(127);
   if ($6) {
    $7 = (_wcrtomb($buf,$5,0)|0);
    $8 = ($7|0)==(-1);
    if ($8) {
     $$0 = -1;
     label = 26;
     break;
    } else {
     $$pn = $7;
    }
   } else {
    $$pn = 1;
   }
   $$13 = (($$pn) + ($$0218))|0;
   $9 = ((($ws2$019)) + 4|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = ($10|0)==(0);
   if ($11) {
    $$0 = $$13;
    label = 26;
    break;
   } else {
    $$0218 = $$13;$5 = $10;$ws2$019 = $9;
   }
  }
  if ((label|0) == 26) {
   STACKTOP = sp;return ($$0|0);
  }
 }
 $1 = ($n>>>0)>(3);
 L14: do {
  if ($1) {
   $$pre = HEAP32[$ws>>2]|0;
   $$0129 = $s;$$2428 = $n;$14 = $$pre;
   while(1) {
    $13 = HEAP32[$14>>2]|0;
    $15 = (($13) + -1)|0;
    $16 = ($15>>>0)>(126);
    if ($16) {
     $17 = ($13|0)==(0);
     if ($17) {
      $$0129$lcssa = $$0129;$$2428$lcssa = $$2428;
      break;
     }
     $19 = (_wcrtomb($$0129,$13,0)|0);
     $20 = ($19|0)==(-1);
     if ($20) {
      $$0 = -1;
      label = 26;
      break;
     }
     $21 = (($$0129) + ($19)|0);
     $22 = (($$2428) - ($19))|0;
     $$1 = $21;$$35 = $22;$27 = $14;
    } else {
     $23 = $13&255;
     $24 = ((($$0129)) + 1|0);
     HEAP8[$$0129>>0] = $23;
     $25 = (($$2428) + -1)|0;
     $$pre43 = HEAP32[$ws>>2]|0;
     $$1 = $24;$$35 = $25;$27 = $$pre43;
    }
    $26 = ((($27)) + 4|0);
    HEAP32[$ws>>2] = $26;
    $28 = ($$35>>>0)>(3);
    if ($28) {
     $$0129 = $$1;$$2428 = $$35;$14 = $26;
    } else {
     $$01$lcssa = $$1;$$24$lcssa = $$35;
     break L14;
    }
   }
   if ((label|0) == 26) {
    STACKTOP = sp;return ($$0|0);
   }
   HEAP8[$$0129$lcssa>>0] = 0;
   HEAP32[$ws>>2] = 0;
   $18 = (($n) - ($$2428$lcssa))|0;
   $$0 = $18;
   STACKTOP = sp;return ($$0|0);
  } else {
   $$01$lcssa = $s;$$24$lcssa = $n;
  }
 } while(0);
 $12 = ($$24$lcssa|0)==(0);
 if ($12) {
  $$0 = $n;
  STACKTOP = sp;return ($$0|0);
 }
 $$pre44 = HEAP32[$ws>>2]|0;
 $$223 = $$01$lcssa;$$422 = $$24$lcssa;$30 = $$pre44;
 while(1) {
  $29 = HEAP32[$30>>2]|0;
  $31 = (($29) + -1)|0;
  $32 = ($31>>>0)>(126);
  if ($32) {
   $33 = ($29|0)==(0);
   if ($33) {
    $$223$lcssa = $$223;$$422$lcssa = $$422;
    label = 19;
    break;
   }
   $35 = (_wcrtomb($buf,$29,0)|0);
   $36 = ($35|0)==(-1);
   if ($36) {
    $$0 = -1;
    label = 26;
    break;
   }
   $37 = ($$422>>>0)<($35>>>0);
   if ($37) {
    $$422$lcssa82 = $$422;
    label = 22;
    break;
   }
   $39 = HEAP32[$30>>2]|0;
   (_wcrtomb($$223,$39,0)|0);
   $40 = (($$223) + ($35)|0);
   $41 = (($$422) - ($35))|0;
   $$3 = $40;$$5 = $41;$46 = $30;
  } else {
   $42 = $29&255;
   $43 = ((($$223)) + 1|0);
   HEAP8[$$223>>0] = $42;
   $44 = (($$422) + -1)|0;
   $$pre45 = HEAP32[$ws>>2]|0;
   $$3 = $43;$$5 = $44;$46 = $$pre45;
  }
  $45 = ((($46)) + 4|0);
  HEAP32[$ws>>2] = $45;
  $47 = ($$5|0)==(0);
  if ($47) {
   $$0 = $n;
   label = 26;
   break;
  } else {
   $$223 = $$3;$$422 = $$5;$30 = $45;
  }
 }
 if ((label|0) == 19) {
  HEAP8[$$223$lcssa>>0] = 0;
  HEAP32[$ws>>2] = 0;
  $34 = (($n) - ($$422$lcssa))|0;
  $$0 = $34;
  STACKTOP = sp;return ($$0|0);
 }
 else if ((label|0) == 22) {
  $38 = (($n) - ($$422$lcssa82))|0;
  $$0 = $38;
  STACKTOP = sp;return ($$0|0);
 }
 else if ((label|0) == 26) {
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function ___string_read($f,$buf,$len) {
 $f = $f|0;
 $buf = $buf|0;
 $len = $len|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $k$0 = 0, $k$0$len = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 84|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($len) + 256)|0;
 $3 = (_memchr($1,0,$2)|0);
 $4 = ($3|0)==(0|0);
 $5 = $3;
 $6 = $1;
 $7 = (($5) - ($6))|0;
 $k$0 = $4 ? $2 : $7;
 $8 = ($k$0>>>0)<($len>>>0);
 $k$0$len = $8 ? $k$0 : $len;
 _memcpy(($buf|0),($1|0),($k$0$len|0))|0;
 $9 = (($1) + ($k$0$len)|0);
 $10 = ((($f)) + 4|0);
 HEAP32[$10>>2] = $9;
 $11 = (($1) + ($k$0)|0);
 $12 = ((($f)) + 8|0);
 HEAP32[$12>>2] = $11;
 HEAP32[$0>>2] = $11;
 return ($k$0$len|0);
}
function _sscanf($s,$fmt,$varargs) {
 $s = $s|0;
 $fmt = $fmt|0;
 $varargs = $varargs|0;
 var $0 = 0, $ap = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ap = sp;
 HEAP32[$ap>>2] = $varargs;
 $0 = (_vsscanf($s,$fmt,$ap)|0);
 STACKTOP = sp;return ($0|0);
}
function _vasprintf($s,$fmt,$ap) {
 $s = $s|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ap2 = 0, $vacopy_currentptr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ap2 = sp;
 $0 = (_malloc(240)|0);
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $$0 = -1;
  } else {
   $vacopy_currentptr = HEAP32[$ap>>2]|0;
   HEAP32[$ap2>>2] = $vacopy_currentptr;
   $2 = (_vsnprintf($0,240,$fmt,$ap2)|0);
   $3 = ($2>>>0)<(240);
   if ($3) {
    $4 = (($2) + 1)|0;
    $5 = (_realloc($0,$4)|0);
    $6 = ($5|0)!=(0|0);
    $7 = $6 ? $5 : $0;
    HEAP32[$s>>2] = $7;
    $$0 = $2;
    break;
   }
   _free($0);
   $8 = ($2|0)<(0);
   if ($8) {
    $$0 = -1;
   } else {
    $9 = (($2) + 1)|0;
    $10 = (_malloc($9)|0);
    HEAP32[$s>>2] = $10;
    $11 = ($10|0)==(0|0);
    if ($11) {
     $$0 = -1;
    } else {
     $12 = (_vsnprintf($10,$9,$fmt,$ap)|0);
     $$0 = $12;
    }
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function _MUSL_vfscanf($f,$fmt,$ap) {
 $f = $f|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $$ = 0, $$10 = 0, $$11 = 0, $$12 = 0, $$9 = 0, $$lcssa = 0, $$lcssa38 = 0, $$lcssa520 = 0, $$not = 0, $$old4 = 0, $$pre = 0, $$pre$phi224Z2D = 0, $$pre208 = 0, $$pre210 = 0, $$pre212 = 0, $$pre214 = 0, $$pre216 = 0, $$pre220 = 0, $$pre222 = 0, $$pre223 = 0;
 var $$size$0 = 0, $$width$0 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0;
 var $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0;
 var $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0;
 var $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0;
 var $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0;
 var $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0;
 var $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0;
 var $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0;
 var $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0;
 var $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0;
 var $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0.0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0.0, $348 = 0;
 var $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $alloc$0 = 0, $alloc$0203 = 0, $alloc$1 = 0, $alloc$2 = 0, $ap2$i = 0, $arglist_current = 0, $arglist_current2 = 0, $arglist_next = 0, $arglist_next3 = 0, $base$0 = 0, $c$0100 = 0, $dest$0 = 0, $expanded = 0, $expanded10 = 0, $expanded11 = 0, $expanded13 = 0, $expanded14 = 0;
 var $expanded15 = 0, $expanded4 = 0, $expanded6 = 0, $expanded7 = 0, $expanded8 = 0, $factor = 0, $factor16 = 0, $i$0$i = 0, $i$0$ph = 0, $i$0$ph$lcssa = 0, $i$0$ph20 = 0, $i$0$ph20$lcssa = 0, $i$0$ph20$us105 = 0, $i$1$lcssa = 0, $i$2 = 0, $i$2$ph = 0, $i$2$ph$phi = 0, $i$3 = 0, $i$4 = 0, $invert$0 = 0;
 var $isdigit = 0, $isdigit7 = 0, $isdigit795 = 0, $isdigittmp = 0, $isdigittmp6 = 0, $isdigittmp694 = 0, $k$0$ph = 0, $k$1$ph = 0, $matches$0$ = 0, $matches$0110 = 0, $matches$0110$lcssa = 0, $matches$0110501 = 0, $matches$1 = 0, $matches$2 = 0, $matches$3 = 0, $not$ = 0, $or$cond$us = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond8 = 0;
 var $p$0116 = 0, $p$1 = 0, $p$1$lcssa = 0, $p$10 = 0, $p$11 = 0, $p$2 = 0, $p$3$lcssa = 0, $p$396 = 0, $p$4 = 0, $p$5 = 0, $p$6 = 0, $p$7 = 0, $p$7$ph = 0, $p$8 = 0, $p$9 = 0, $pos$0115 = 0, $pos$1 = 0, $pos$2 = 0, $s$0108 = 0, $s$0108$lcssa = 0;
 var $s$1 = 0, $s$2$ph = 0, $s$3 = 0, $s$4 = 0, $s$5 = 0, $s$6 = 0, $s$7 = 0, $s$8 = 0, $scanset = 0, $size$0 = 0, $st = 0, $vacopy_currentptr = 0, $wc = 0, $wcs$0109 = 0, $wcs$0109$lcssa = 0, $wcs$1 = 0, $wcs$2 = 0, $wcs$3$ph = 0, $wcs$3$ph$lcssa = 0, $wcs$3$ph138 = 0;
 var $wcs$4 = 0, $wcs$5 = 0, $wcs$6 = 0, $wcs$7 = 0, $wcs$8 = 0, $wcs$9 = 0, $width$0$lcssa = 0, $width$097 = 0, $width$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ap2$i = sp + 16|0;
 $st = sp + 8|0;
 $scanset = sp + 33|0;
 $wc = sp;
 $0 = sp + 32|0;
 $1 = HEAP8[$fmt>>0]|0;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $matches$3 = 0;
  STACKTOP = sp;return ($matches$3|0);
 }
 $3 = ((($f)) + 4|0);
 $4 = ((($f)) + 100|0);
 $5 = ((($f)) + 108|0);
 $6 = ((($f)) + 8|0);
 $7 = ((($scanset)) + 10|0);
 $8 = ((($scanset)) + 33|0);
 $9 = ((($st)) + 4|0);
 $10 = ((($scanset)) + 46|0);
 $11 = ((($scanset)) + 94|0);
 $13 = $1;$matches$0110 = 0;$p$0116 = $fmt;$pos$0115 = 0;$s$0108 = 0;$wcs$0109 = 0;
 L4: while(1) {
  $12 = $13&255;
  $14 = (_isspace($12)|0);
  $15 = ($14|0)==(0);
  L6: do {
   if ($15) {
    $42 = HEAP8[$p$0116>>0]|0;
    $43 = ($42<<24>>24)==(37);
    L8: do {
     if ($43) {
      $44 = ((($p$0116)) + 1|0);
      $45 = HEAP8[$44>>0]|0;
      do {
       if ((($45<<24>>24) == 37)) {
        break L8;
       } else if ((($45<<24>>24) == 42)) {
        $66 = ((($p$0116)) + 2|0);
        $dest$0 = 0;$p$2 = $66;
       } else {
        $67 = $45&255;
        $isdigittmp = (($67) + -48)|0;
        $isdigit = ($isdigittmp>>>0)<(10);
        if ($isdigit) {
         $68 = ((($p$0116)) + 2|0);
         $69 = HEAP8[$68>>0]|0;
         $70 = ($69<<24>>24)==(36);
         if ($70) {
          $vacopy_currentptr = HEAP32[$ap>>2]|0;
          HEAP32[$ap2$i>>2] = $vacopy_currentptr;
          $i$0$i = $isdigittmp;
          while(1) {
           $71 = ($i$0$i>>>0)>(1);
           $arglist_current = HEAP32[$ap2$i>>2]|0;
           $72 = $arglist_current;
           $73 = ((0) + 4|0);
           $expanded4 = $73;
           $expanded = (($expanded4) - 1)|0;
           $74 = (($72) + ($expanded))|0;
           $75 = ((0) + 4|0);
           $expanded8 = $75;
           $expanded7 = (($expanded8) - 1)|0;
           $expanded6 = $expanded7 ^ -1;
           $76 = $74 & $expanded6;
           $77 = $76;
           $78 = HEAP32[$77>>2]|0;
           $arglist_next = ((($77)) + 4|0);
           HEAP32[$ap2$i>>2] = $arglist_next;
           $79 = (($i$0$i) + -1)|0;
           if ($71) {
            $i$0$i = $79;
           } else {
            $$lcssa = $78;
            break;
           }
          }
          $80 = ((($p$0116)) + 3|0);
          $dest$0 = $$lcssa;$p$2 = $80;
          break;
         }
        }
        $arglist_current2 = HEAP32[$ap>>2]|0;
        $81 = $arglist_current2;
        $82 = ((0) + 4|0);
        $expanded11 = $82;
        $expanded10 = (($expanded11) - 1)|0;
        $83 = (($81) + ($expanded10))|0;
        $84 = ((0) + 4|0);
        $expanded15 = $84;
        $expanded14 = (($expanded15) - 1)|0;
        $expanded13 = $expanded14 ^ -1;
        $85 = $83 & $expanded13;
        $86 = $85;
        $87 = HEAP32[$86>>2]|0;
        $arglist_next3 = ((($86)) + 4|0);
        HEAP32[$ap>>2] = $arglist_next3;
        $dest$0 = $87;$p$2 = $44;
       }
      } while(0);
      $88 = HEAP8[$p$2>>0]|0;
      $89 = $88&255;
      $isdigittmp694 = (($89) + -48)|0;
      $isdigit795 = ($isdigittmp694>>>0)<(10);
      if ($isdigit795) {
       $93 = $89;$p$396 = $p$2;$width$097 = 0;
       while(1) {
        $90 = ($width$097*10)|0;
        $91 = (($90) + -48)|0;
        $92 = (($91) + ($93))|0;
        $94 = ((($p$396)) + 1|0);
        $95 = HEAP8[$94>>0]|0;
        $96 = $95&255;
        $isdigittmp6 = (($96) + -48)|0;
        $isdigit7 = ($isdigittmp6>>>0)<(10);
        if ($isdigit7) {
         $93 = $96;$p$396 = $94;$width$097 = $92;
        } else {
         $$lcssa38 = $95;$p$3$lcssa = $94;$width$0$lcssa = $92;
         break;
        }
       }
      } else {
       $$lcssa38 = $88;$p$3$lcssa = $p$2;$width$0$lcssa = 0;
      }
      $97 = ($$lcssa38<<24>>24)==(109);
      if ($97) {
       $98 = ($dest$0|0)!=(0|0);
       $99 = $98&1;
       $100 = ((($p$3$lcssa)) + 1|0);
       $$pre208 = HEAP8[$100>>0]|0;
       $103 = $$pre208;$alloc$0 = $99;$p$4 = $100;$s$1 = 0;$wcs$1 = 0;
      } else {
       $103 = $$lcssa38;$alloc$0 = 0;$p$4 = $p$3$lcssa;$s$1 = $s$0108;$wcs$1 = $wcs$0109;
      }
      $101 = ((($p$4)) + 1|0);
      $102 = $103&255;
      switch ($102|0) {
      case 108:  {
       $107 = HEAP8[$101>>0]|0;
       $108 = ($107<<24>>24)==(108);
       $109 = ((($p$4)) + 2|0);
       $$11 = $108 ? $109 : $101;
       $$12 = $108 ? 3 : 1;
       $p$5 = $$11;$size$0 = $$12;
       break;
      }
      case 116: case 122:  {
       $p$5 = $101;$size$0 = 1;
       break;
      }
      case 76:  {
       $p$5 = $101;$size$0 = 2;
       break;
      }
      case 110: case 112: case 67: case 83: case 91: case 99: case 115: case 88: case 71: case 70: case 69: case 65: case 103: case 102: case 101: case 97: case 120: case 117: case 111: case 105: case 100:  {
       $p$5 = $p$4;$size$0 = 0;
       break;
      }
      case 106:  {
       $p$5 = $101;$size$0 = 3;
       break;
      }
      case 104:  {
       $104 = HEAP8[$101>>0]|0;
       $105 = ($104<<24>>24)==(104);
       $106 = ((($p$4)) + 2|0);
       $$9 = $105 ? $106 : $101;
       $$10 = $105 ? -2 : -1;
       $p$5 = $$9;$size$0 = $$10;
       break;
      }
      default: {
       $alloc$0203 = $alloc$0;$matches$0110501 = $matches$0110;$s$6 = $s$1;$wcs$7 = $wcs$1;
       label = 164;
       break L4;
      }
      }
      $110 = HEAP8[$p$5>>0]|0;
      $111 = $110&255;
      $112 = $111 & 47;
      $113 = ($112|0)==(3);
      $114 = $111 | 32;
      $$ = $113 ? $114 : $111;
      $$size$0 = $113 ? 1 : $size$0;
      if ((($$|0) == 99)) {
       $115 = ($width$0$lcssa|0)<(1);
       $$width$0 = $115 ? 1 : $width$0$lcssa;
       $pos$1 = $pos$0115;$width$1 = $$width$0;
      } else if ((($$|0) == 110)) {
       $116 = ($pos$0115|0)<(0);
       $117 = $116 << 31 >> 31;
       $118 = ($dest$0|0)==(0|0);
       if ($118) {
        $matches$1 = $matches$0110;$p$11 = $p$5;$pos$2 = $pos$0115;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
       }
       switch ($$size$0|0) {
       case 0:  {
        HEAP32[$dest$0>>2] = $pos$0115;
        $matches$1 = $matches$0110;$p$11 = $p$5;$pos$2 = $pos$0115;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
        break;
       }
       case 1:  {
        HEAP32[$dest$0>>2] = $pos$0115;
        $matches$1 = $matches$0110;$p$11 = $p$5;$pos$2 = $pos$0115;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
        break;
       }
       case 3:  {
        $121 = $dest$0;
        $122 = $121;
        HEAP32[$122>>2] = $pos$0115;
        $123 = (($121) + 4)|0;
        $124 = $123;
        HEAP32[$124>>2] = $117;
        $matches$1 = $matches$0110;$p$11 = $p$5;$pos$2 = $pos$0115;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
        break;
       }
       case -2:  {
        $119 = $pos$0115&255;
        HEAP8[$dest$0>>0] = $119;
        $matches$1 = $matches$0110;$p$11 = $p$5;$pos$2 = $pos$0115;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
        break;
       }
       case -1:  {
        $120 = $pos$0115&65535;
        HEAP16[$dest$0>>1] = $120;
        $matches$1 = $matches$0110;$p$11 = $p$5;$pos$2 = $pos$0115;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
        break;
       }
       default: {
        $matches$1 = $matches$0110;$p$11 = $p$5;$pos$2 = $pos$0115;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
       }
       }
      } else if ((($$|0) == 91)) {
       $pos$1 = $pos$0115;$width$1 = $width$0$lcssa;
      } else {
       ___shlim($f,0);
       while(1) {
        $125 = HEAP32[$3>>2]|0;
        $126 = HEAP32[$4>>2]|0;
        $127 = ($125>>>0)<($126>>>0);
        if ($127) {
         $128 = ((($125)) + 1|0);
         HEAP32[$3>>2] = $128;
         $129 = HEAP8[$125>>0]|0;
         $130 = $129&255;
         $132 = $130;
        } else {
         $131 = (___shgetc($f)|0);
         $132 = $131;
        }
        $133 = (_isspace($132)|0);
        $134 = ($133|0)==(0);
        if ($134) {
         break;
        }
       }
       $135 = HEAP32[$4>>2]|0;
       $136 = ($135|0)==(0|0);
       $$pre210 = HEAP32[$3>>2]|0;
       if ($136) {
        $140 = $$pre210;
       } else {
        $137 = ((($$pre210)) + -1|0);
        HEAP32[$3>>2] = $137;
        $140 = $137;
       }
       $138 = HEAP32[$5>>2]|0;
       $139 = HEAP32[$6>>2]|0;
       $141 = $140;
       $142 = $139;
       $143 = (($138) + ($pos$0115))|0;
       $144 = (($143) + ($141))|0;
       $145 = (($144) - ($142))|0;
       $pos$1 = $145;$width$1 = $width$0$lcssa;
      }
      ___shlim($f,$width$1);
      $146 = HEAP32[$3>>2]|0;
      $147 = HEAP32[$4>>2]|0;
      $148 = ($146>>>0)<($147>>>0);
      if ($148) {
       $149 = ((($146)) + 1|0);
       HEAP32[$3>>2] = $149;
       $152 = $147;
      } else {
       $150 = (___shgetc($f)|0);
       $151 = ($150|0)<(0);
       if ($151) {
        $alloc$0203 = $alloc$0;$matches$0110501 = $matches$0110;$s$6 = $s$1;$wcs$7 = $wcs$1;
        label = 164;
        break L4;
       }
       $$pre212 = HEAP32[$4>>2]|0;
       $152 = $$pre212;
      }
      $153 = ($152|0)==(0|0);
      if (!($153)) {
       $154 = HEAP32[$3>>2]|0;
       $155 = ((($154)) + -1|0);
       HEAP32[$3>>2] = $155;
      }
      L65: do {
       switch ($$|0) {
       case 111:  {
        $base$0 = 8;
        label = 146;
        break;
       }
       case 117: case 100:  {
        $base$0 = 10;
        label = 146;
        break;
       }
       case 105:  {
        $base$0 = 0;
        label = 146;
        break;
       }
       case 91: case 99: case 115:  {
        $156 = ($$|0)==(99);
        $157 = $$ & 239;
        $158 = ($157|0)==(99);
        L70: do {
         if ($158) {
          $159 = ($$|0)==(115);
          _memset(($scanset|0),-1,257)|0;
          HEAP8[$scanset>>0] = 0;
          if ($159) {
           HEAP8[$8>>0] = 0;
           ;HEAP8[$7>>0]=0|0;HEAP8[$7+1>>0]=0|0;HEAP8[$7+2>>0]=0|0;HEAP8[$7+3>>0]=0|0;HEAP8[$7+4>>0]=0|0;
           $p$9 = $p$5;
          } else {
           $p$9 = $p$5;
          }
         } else {
          $160 = ((($p$5)) + 1|0);
          $161 = HEAP8[$160>>0]|0;
          $162 = ($161<<24>>24)==(94);
          $163 = ((($p$5)) + 2|0);
          $invert$0 = $162&1;
          $164 = $162 ? $160 : $p$5;
          $p$6 = $162 ? $163 : $160;
          $165 = $162&1;
          _memset(($scanset|0),($165|0),257)|0;
          HEAP8[$scanset>>0] = 0;
          $166 = HEAP8[$p$6>>0]|0;
          if ((($166<<24>>24) == 45)) {
           $167 = ((($164)) + 2|0);
           $168 = $invert$0 ^ 1;
           $169 = $168&255;
           HEAP8[$10>>0] = $169;
           $$pre$phi224Z2D = $169;$p$7$ph = $167;
          } else if ((($166<<24>>24) == 93)) {
           $170 = ((($164)) + 2|0);
           $171 = $invert$0 ^ 1;
           $172 = $171&255;
           HEAP8[$11>>0] = $172;
           $$pre$phi224Z2D = $172;$p$7$ph = $170;
          } else {
           $$pre222 = $invert$0 ^ 1;
           $$pre223 = $$pre222&255;
           $$pre$phi224Z2D = $$pre223;$p$7$ph = $p$6;
          }
          $p$7 = $p$7$ph;
          while(1) {
           $173 = HEAP8[$p$7>>0]|0;
           if ((($173<<24>>24) == 45)) {
            $174 = ((($p$7)) + 1|0);
            $175 = HEAP8[$174>>0]|0;
            if ((($175<<24>>24) == 93) | (($175<<24>>24) == 0)) {
             $186 = 45;$p$8 = $p$7;
            } else {
             $176 = ((($p$7)) + -1|0);
             $177 = HEAP8[$176>>0]|0;
             $178 = ($177&255)<($175&255);
             if ($178) {
              $179 = $177&255;
              $c$0100 = $179;
              while(1) {
               $180 = (($c$0100) + 1)|0;
               $181 = (($scanset) + ($180)|0);
               HEAP8[$181>>0] = $$pre$phi224Z2D;
               $182 = HEAP8[$174>>0]|0;
               $183 = $182&255;
               $184 = ($180|0)<($183|0);
               if ($184) {
                $c$0100 = $180;
               } else {
                $186 = $182;$p$8 = $174;
                break;
               }
              }
             } else {
              $186 = $175;$p$8 = $174;
             }
            }
           } else if ((($173<<24>>24) == 0)) {
            $alloc$0203 = $alloc$0;$matches$0110501 = $matches$0110;$s$6 = $s$1;$wcs$7 = $wcs$1;
            label = 164;
            break L4;
           } else if ((($173<<24>>24) == 93)) {
            $p$9 = $p$7;
            break L70;
           } else {
            $186 = $173;$p$8 = $p$7;
           }
           $185 = $186&255;
           $187 = (($185) + 1)|0;
           $188 = (($scanset) + ($187)|0);
           HEAP8[$188>>0] = $$pre$phi224Z2D;
           $189 = ((($p$8)) + 1|0);
           $p$7 = $189;
          }
         }
        } while(0);
        $190 = (($width$1) + 1)|0;
        $191 = $156 ? $190 : 31;
        $192 = ($$size$0|0)==(1);
        $193 = ($alloc$0|0)!=(0);
        L89: do {
         if ($192) {
          if ($193) {
           $194 = $191 << 2;
           $195 = (_malloc($194)|0);
           $196 = ($195|0)==(0|0);
           if ($196) {
            $alloc$0203 = $alloc$0;$matches$0110501 = $matches$0110;$s$6 = 0;$wcs$7 = $195;
            label = 164;
            break L4;
           } else {
            $wcs$2 = $195;
           }
          } else {
           $wcs$2 = $dest$0;
          }
          HEAP32[$st>>2] = 0;
          HEAP32[$9>>2] = 0;
          $i$0$ph = 0;$k$0$ph = $191;$wcs$3$ph = $wcs$2;
          L124: while(1) {
           $197 = ($wcs$3$ph|0)==(0|0);
           if ($197) {
            $198 = ($i$0$ph|0)==($k$0$ph|0);
            $or$cond$us = $193 & $198;
            while(1) {
             $201 = HEAP32[$3>>2]|0;
             $211 = HEAP32[$4>>2]|0;
             $212 = ($201>>>0)<($211>>>0);
             if ($212) {
              $200 = ((($201)) + 1|0);
              HEAP32[$3>>2] = $200;
              $202 = HEAP8[$201>>0]|0;
              $203 = $202&255;
              $205 = $203;
             } else {
              $199 = (___shgetc($f)|0);
              $205 = $199;
             }
             $204 = (($205) + 1)|0;
             $206 = (($scanset) + ($204)|0);
             $207 = HEAP8[$206>>0]|0;
             $208 = ($207<<24>>24)==(0);
             if ($208) {
              $i$0$ph20$lcssa = $i$0$ph;$wcs$3$ph138 = 0;
              break L124;
             }
             $209 = $205&255;
             HEAP8[$0>>0] = $209;
             $210 = (_mbrtowc($wc,$0,1,$st)|0);
             if ((($210|0) == -2)) {
              continue;
             } else if ((($210|0) == -1)) {
              $alloc$0203 = $alloc$0;$matches$0110501 = $matches$0110;$s$6 = 0;$wcs$7 = 0;
              label = 164;
              break L4;
             }
             if ($or$cond$us) {
              $i$1$lcssa = $i$0$ph;
              break;
             }
            }
           } else {
            if ($193) {
             $i$0$ph20$us105 = $i$0$ph;
            } else {
             $i$0$ph$lcssa = $i$0$ph;$wcs$3$ph$lcssa = $wcs$3$ph;
             label = 86;
             break;
            }
            while(1) {
             while(1) {
              $215 = HEAP32[$3>>2]|0;
              $229 = HEAP32[$4>>2]|0;
              $230 = ($215>>>0)<($229>>>0);
              if ($230) {
               $214 = ((($215)) + 1|0);
               HEAP32[$3>>2] = $214;
               $216 = HEAP8[$215>>0]|0;
               $217 = $216&255;
               $219 = $217;
              } else {
               $213 = (___shgetc($f)|0);
               $219 = $213;
              }
              $218 = (($219) + 1)|0;
              $220 = (($scanset) + ($218)|0);
              $221 = HEAP8[$220>>0]|0;
              $222 = ($221<<24>>24)==(0);
              if ($222) {
               $i$0$ph20$lcssa = $i$0$ph20$us105;$wcs$3$ph138 = $wcs$3$ph;
               break L124;
              }
              $223 = $219&255;
              HEAP8[$0>>0] = $223;
              $224 = (_mbrtowc($wc,$0,1,$st)|0);
              if ((($224|0) == -1)) {
               $alloc$0203 = $alloc$0;$matches$0110501 = $matches$0110;$s$6 = 0;$wcs$7 = $wcs$3$ph;
               label = 164;
               break L4;
              } else if (!((($224|0) == -2))) {
               break;
              }
             }
             $225 = HEAP32[$wc>>2]|0;
             $226 = (($i$0$ph20$us105) + 1)|0;
             $227 = (($wcs$3$ph) + ($i$0$ph20$us105<<2)|0);
             HEAP32[$227>>2] = $225;
             $228 = ($226|0)==($k$0$ph|0);
             if ($228) {
              $i$1$lcssa = $k$0$ph;
              break;
             } else {
              $i$0$ph20$us105 = $226;
             }
            }
           }
           $factor = $k$0$ph << 1;
           $248 = $factor | 1;
           $249 = $248 << 2;
           $250 = (_realloc($wcs$3$ph,$249)|0);
           $251 = ($250|0)==(0|0);
           if ($251) {
            $alloc$0203 = $alloc$0;$matches$0110501 = $matches$0110;$s$6 = 0;$wcs$7 = $wcs$3$ph;
            label = 164;
            break L4;
           }
           $i$0$ph = $i$1$lcssa;$k$0$ph = $248;$wcs$3$ph = $250;
          }
          L149: do {
           if ((label|0) == 86) {
            label = 0;
            $i$0$ph20 = $i$0$ph$lcssa;
            while(1) {
             while(1) {
              $231 = HEAP32[$3>>2]|0;
              $232 = HEAP32[$4>>2]|0;
              $233 = ($231>>>0)<($232>>>0);
              if ($233) {
               $234 = ((($231)) + 1|0);
               HEAP32[$3>>2] = $234;
               $235 = HEAP8[$231>>0]|0;
               $236 = $235&255;
               $239 = $236;
              } else {
               $237 = (___shgetc($f)|0);
               $239 = $237;
              }
              $238 = (($239) + 1)|0;
              $240 = (($scanset) + ($238)|0);
              $241 = HEAP8[$240>>0]|0;
              $242 = ($241<<24>>24)==(0);
              if ($242) {
               $i$0$ph20$lcssa = $i$0$ph20;$wcs$3$ph138 = $wcs$3$ph$lcssa;
               break L149;
              }
              $243 = $239&255;
              HEAP8[$0>>0] = $243;
              $244 = (_mbrtowc($wc,$0,1,$st)|0);
              if ((($244|0) == -1)) {
               $alloc$0203 = 0;$matches$0110501 = $matches$0110;$s$6 = 0;$wcs$7 = $wcs$3$ph$lcssa;
               label = 164;
               break L4;
              } else if (!((($244|0) == -2))) {
               break;
              }
             }
             $245 = HEAP32[$wc>>2]|0;
             $246 = (($i$0$ph20) + 1)|0;
             $247 = (($wcs$3$ph$lcssa) + ($i$0$ph20<<2)|0);
             HEAP32[$247>>2] = $245;
             $i$0$ph20 = $246;
            }
           }
          } while(0);
          $252 = (_mbsinit($st)|0);
          $253 = ($252|0)==(0);
          if ($253) {
           $alloc$0203 = $alloc$0;$matches$0110501 = $matches$0110;$s$6 = 0;$wcs$7 = $wcs$3$ph138;
           label = 164;
           break L4;
          } else {
           $i$4 = $i$0$ph20$lcssa;$s$3 = 0;$wcs$4 = $wcs$3$ph138;
          }
         } else {
          if ($193) {
           $254 = (_malloc($191)|0);
           $255 = ($254|0)==(0|0);
           if ($255) {
            $alloc$0203 = $alloc$0;$matches$0110501 = $matches$0110;$s$6 = 0;$wcs$7 = 0;
            label = 164;
            break L4;
           } else {
            $i$2$ph = 0;$k$1$ph = $191;$s$2$ph = $254;
           }
           while(1) {
            $i$2 = $i$2$ph;
            while(1) {
             $256 = HEAP32[$3>>2]|0;
             $257 = HEAP32[$4>>2]|0;
             $258 = ($256>>>0)<($257>>>0);
             if ($258) {
              $259 = ((($256)) + 1|0);
              HEAP32[$3>>2] = $259;
              $260 = HEAP8[$256>>0]|0;
              $261 = $260&255;
              $264 = $261;
             } else {
              $262 = (___shgetc($f)|0);
              $264 = $262;
             }
             $263 = (($264) + 1)|0;
             $265 = (($scanset) + ($263)|0);
             $266 = HEAP8[$265>>0]|0;
             $267 = ($266<<24>>24)==(0);
             if ($267) {
              $i$4 = $i$2;$s$3 = $s$2$ph;$wcs$4 = 0;
              break L89;
             }
             $268 = $264&255;
             $269 = (($i$2) + 1)|0;
             $270 = (($s$2$ph) + ($i$2)|0);
             HEAP8[$270>>0] = $268;
             $271 = ($269|0)==($k$1$ph|0);
             if ($271) {
              break;
             } else {
              $i$2 = $269;
             }
            }
            $factor16 = $k$1$ph << 1;
            $272 = $factor16 | 1;
            $273 = (_realloc($s$2$ph,$272)|0);
            $274 = ($273|0)==(0|0);
            if ($274) {
             $alloc$0203 = $alloc$0;$matches$0110501 = $matches$0110;$s$6 = $s$2$ph;$wcs$7 = 0;
             label = 164;
             break L4;
            } else {
             $i$2$ph$phi = $k$1$ph;$k$1$ph = $272;$s$2$ph = $273;$i$2$ph = $i$2$ph$phi;
            }
           }
          }
          $275 = ($dest$0|0)==(0|0);
          if ($275) {
           $293 = $152;
           while(1) {
            $291 = HEAP32[$3>>2]|0;
            $292 = ($291>>>0)<($293>>>0);
            if ($292) {
             $294 = ((($291)) + 1|0);
             HEAP32[$3>>2] = $294;
             $295 = HEAP8[$291>>0]|0;
             $296 = $295&255;
             $299 = $296;
            } else {
             $297 = (___shgetc($f)|0);
             $299 = $297;
            }
            $298 = (($299) + 1)|0;
            $300 = (($scanset) + ($298)|0);
            $301 = HEAP8[$300>>0]|0;
            $302 = ($301<<24>>24)==(0);
            if ($302) {
             $i$4 = 0;$s$3 = 0;$wcs$4 = 0;
             break L89;
            }
            $$pre216 = HEAP32[$4>>2]|0;
            $293 = $$pre216;
           }
          } else {
           $278 = $152;$i$3 = 0;
           while(1) {
            $276 = HEAP32[$3>>2]|0;
            $277 = ($276>>>0)<($278>>>0);
            if ($277) {
             $279 = ((($276)) + 1|0);
             HEAP32[$3>>2] = $279;
             $280 = HEAP8[$276>>0]|0;
             $281 = $280&255;
             $284 = $281;
            } else {
             $282 = (___shgetc($f)|0);
             $284 = $282;
            }
            $283 = (($284) + 1)|0;
            $285 = (($scanset) + ($283)|0);
            $286 = HEAP8[$285>>0]|0;
            $287 = ($286<<24>>24)==(0);
            if ($287) {
             $i$4 = $i$3;$s$3 = $dest$0;$wcs$4 = 0;
             break L89;
            }
            $288 = $284&255;
            $289 = (($i$3) + 1)|0;
            $290 = (($dest$0) + ($i$3)|0);
            HEAP8[$290>>0] = $288;
            $$pre214 = HEAP32[$4>>2]|0;
            $278 = $$pre214;$i$3 = $289;
           }
          }
         }
        } while(0);
        $303 = HEAP32[$4>>2]|0;
        $304 = ($303|0)==(0|0);
        $$pre220 = HEAP32[$3>>2]|0;
        if ($304) {
         $308 = $$pre220;
        } else {
         $305 = ((($$pre220)) + -1|0);
         HEAP32[$3>>2] = $305;
         $308 = $305;
        }
        $306 = HEAP32[$5>>2]|0;
        $307 = HEAP32[$6>>2]|0;
        $309 = $308;
        $310 = $307;
        $311 = (($309) - ($310))|0;
        $312 = (($311) + ($306))|0;
        $313 = ($312|0)==(0);
        if ($313) {
         $alloc$2 = $alloc$0;$matches$2 = $matches$0110;$s$8 = $s$3;$wcs$9 = $wcs$4;
         break L4;
        }
        $$not = $156 ^ 1;
        $314 = ($312|0)==($width$1|0);
        $or$cond8 = $314 | $$not;
        if (!($or$cond8)) {
         $alloc$2 = $alloc$0;$matches$2 = $matches$0110;$s$8 = $s$3;$wcs$9 = $wcs$4;
         break L4;
        }
        do {
         if ($193) {
          if ($192) {
           HEAP32[$dest$0>>2] = $wcs$4;
           break;
          } else {
           HEAP32[$dest$0>>2] = $s$3;
           break;
          }
         }
        } while(0);
        if ($156) {
         $p$10 = $p$9;$s$4 = $s$3;$wcs$5 = $wcs$4;
        } else {
         $315 = ($wcs$4|0)==(0|0);
         if (!($315)) {
          $316 = (($wcs$4) + ($i$4<<2)|0);
          HEAP32[$316>>2] = 0;
         }
         $317 = ($s$3|0)==(0|0);
         if ($317) {
          $p$10 = $p$9;$s$4 = 0;$wcs$5 = $wcs$4;
         } else {
          $318 = (($s$3) + ($i$4)|0);
          HEAP8[$318>>0] = 0;
          $p$10 = $p$9;$s$4 = $s$3;$wcs$5 = $wcs$4;
         }
        }
        break;
       }
       case 71: case 103: case 70: case 102: case 69: case 101: case 65: case 97:  {
        $338 = (+___floatscan($f,$$size$0,0));
        $339 = HEAP32[$5>>2]|0;
        $340 = HEAP32[$3>>2]|0;
        $341 = HEAP32[$6>>2]|0;
        $342 = $340;
        $343 = $341;
        $344 = (($343) - ($342))|0;
        $345 = ($339|0)==($344|0);
        if ($345) {
         $alloc$2 = $alloc$0;$matches$2 = $matches$0110;$s$8 = $s$1;$wcs$9 = $wcs$1;
         break L4;
        }
        $346 = ($dest$0|0)==(0|0);
        if ($346) {
         $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
        } else {
         if ((($$size$0|0) == 0)) {
          $347 = $338;
          HEAPF32[$dest$0>>2] = $347;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L65;
         } else if ((($$size$0|0) == 1)) {
          HEAPF64[$dest$0>>3] = $338;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L65;
         } else if ((($$size$0|0) == 2)) {
          HEAPF64[$dest$0>>3] = $338;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L65;
         } else {
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L65;
         }
        }
        break;
       }
       case 120: case 88: case 112:  {
        $base$0 = 16;
        label = 146;
        break;
       }
       default: {
        $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
       }
       }
      } while(0);
      L186: do {
       if ((label|0) == 146) {
        label = 0;
        $319 = (___intscan($f,$base$0,0,-1,-1)|0);
        $320 = tempRet0;
        $321 = HEAP32[$5>>2]|0;
        $322 = HEAP32[$3>>2]|0;
        $323 = HEAP32[$6>>2]|0;
        $324 = $322;
        $325 = $323;
        $326 = (($325) - ($324))|0;
        $327 = ($321|0)==($326|0);
        if ($327) {
         $alloc$2 = $alloc$0;$matches$2 = $matches$0110;$s$8 = $s$1;$wcs$9 = $wcs$1;
         break L4;
        }
        $328 = ($$|0)==(112);
        $329 = ($dest$0|0)!=(0|0);
        $or$cond3 = $329 & $328;
        if ($or$cond3) {
         $330 = $319;
         HEAP32[$dest$0>>2] = $330;
         $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
         break;
        }
        $331 = ($dest$0|0)==(0|0);
        if ($331) {
         $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
        } else {
         switch ($$size$0|0) {
         case 3:  {
          $334 = $dest$0;
          $335 = $334;
          HEAP32[$335>>2] = $319;
          $336 = (($334) + 4)|0;
          $337 = $336;
          HEAP32[$337>>2] = $320;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L186;
          break;
         }
         case -2:  {
          $332 = $319&255;
          HEAP8[$dest$0>>0] = $332;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L186;
          break;
         }
         case -1:  {
          $333 = $319&65535;
          HEAP16[$dest$0>>1] = $333;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L186;
          break;
         }
         case 0:  {
          HEAP32[$dest$0>>2] = $319;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L186;
          break;
         }
         case 1:  {
          HEAP32[$dest$0>>2] = $319;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L186;
          break;
         }
         default: {
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L186;
         }
         }
        }
       }
      } while(0);
      $348 = HEAP32[$5>>2]|0;
      $349 = HEAP32[$3>>2]|0;
      $350 = HEAP32[$6>>2]|0;
      $351 = $349;
      $352 = $350;
      $353 = (($348) + ($pos$1))|0;
      $354 = (($353) + ($351))|0;
      $355 = (($354) - ($352))|0;
      $not$ = ($dest$0|0)!=(0|0);
      $356 = $not$&1;
      $matches$0$ = (($356) + ($matches$0110))|0;
      $matches$1 = $matches$0$;$p$11 = $p$10;$pos$2 = $355;$s$5 = $s$4;$wcs$6 = $wcs$5;
      break L6;
     }
    } while(0);
    $46 = $43&1;
    $47 = (($p$0116) + ($46)|0);
    ___shlim($f,0);
    $48 = HEAP32[$3>>2]|0;
    $49 = HEAP32[$4>>2]|0;
    $50 = ($48>>>0)<($49>>>0);
    if ($50) {
     $51 = ((($48)) + 1|0);
     HEAP32[$3>>2] = $51;
     $52 = HEAP8[$48>>0]|0;
     $53 = $52&255;
     $57 = $53;
    } else {
     $54 = (___shgetc($f)|0);
     $57 = $54;
    }
    $55 = HEAP8[$47>>0]|0;
    $56 = $55&255;
    $58 = ($57|0)==($56|0);
    if (!($58)) {
     $$lcssa520 = $57;$matches$0110$lcssa = $matches$0110;$s$0108$lcssa = $s$0108;$wcs$0109$lcssa = $wcs$0109;
     label = 19;
     break L4;
    }
    $65 = (($pos$0115) + 1)|0;
    $matches$1 = $matches$0110;$p$11 = $47;$pos$2 = $65;$s$5 = $s$0108;$wcs$6 = $wcs$0109;
   } else {
    $p$1 = $p$0116;
    while(1) {
     $16 = ((($p$1)) + 1|0);
     $17 = HEAP8[$16>>0]|0;
     $18 = $17&255;
     $19 = (_isspace($18)|0);
     $20 = ($19|0)==(0);
     if ($20) {
      $p$1$lcssa = $p$1;
      break;
     } else {
      $p$1 = $16;
     }
    }
    ___shlim($f,0);
    while(1) {
     $21 = HEAP32[$3>>2]|0;
     $22 = HEAP32[$4>>2]|0;
     $23 = ($21>>>0)<($22>>>0);
     if ($23) {
      $24 = ((($21)) + 1|0);
      HEAP32[$3>>2] = $24;
      $25 = HEAP8[$21>>0]|0;
      $26 = $25&255;
      $28 = $26;
     } else {
      $27 = (___shgetc($f)|0);
      $28 = $27;
     }
     $29 = (_isspace($28)|0);
     $30 = ($29|0)==(0);
     if ($30) {
      break;
     }
    }
    $31 = HEAP32[$4>>2]|0;
    $32 = ($31|0)==(0|0);
    $$pre = HEAP32[$3>>2]|0;
    if ($32) {
     $36 = $$pre;
    } else {
     $33 = ((($$pre)) + -1|0);
     HEAP32[$3>>2] = $33;
     $36 = $33;
    }
    $34 = HEAP32[$5>>2]|0;
    $35 = HEAP32[$6>>2]|0;
    $37 = $36;
    $38 = $35;
    $39 = (($34) + ($pos$0115))|0;
    $40 = (($39) + ($37))|0;
    $41 = (($40) - ($38))|0;
    $matches$1 = $matches$0110;$p$11 = $p$1$lcssa;$pos$2 = $41;$s$5 = $s$0108;$wcs$6 = $wcs$0109;
   }
  } while(0);
  $357 = ((($p$11)) + 1|0);
  $358 = HEAP8[$357>>0]|0;
  $359 = ($358<<24>>24)==(0);
  if ($359) {
   $matches$3 = $matches$1;
   label = 168;
   break;
  } else {
   $13 = $358;$matches$0110 = $matches$1;$p$0116 = $357;$pos$0115 = $pos$2;$s$0108 = $s$5;$wcs$0109 = $wcs$6;
  }
 }
 if ((label|0) == 19) {
  $59 = HEAP32[$4>>2]|0;
  $60 = ($59|0)==(0|0);
  if (!($60)) {
   $61 = HEAP32[$3>>2]|0;
   $62 = ((($61)) + -1|0);
   HEAP32[$3>>2] = $62;
  }
  $63 = ($$lcssa520|0)>(-1);
  $64 = ($matches$0110$lcssa|0)!=(0);
  $or$cond5 = $64 | $63;
  if ($or$cond5) {
   $matches$3 = $matches$0110$lcssa;
   STACKTOP = sp;return ($matches$3|0);
  } else {
   $alloc$1 = 0;$s$7 = $s$0108$lcssa;$wcs$8 = $wcs$0109$lcssa;
   label = 165;
  }
 }
 else if ((label|0) == 164) {
  $$old4 = ($matches$0110501|0)==(0);
  if ($$old4) {
   $alloc$1 = $alloc$0203;$s$7 = $s$6;$wcs$8 = $wcs$7;
   label = 165;
  } else {
   $alloc$2 = $alloc$0203;$matches$2 = $matches$0110501;$s$8 = $s$6;$wcs$9 = $wcs$7;
  }
 }
 else if ((label|0) == 168) {
  STACKTOP = sp;return ($matches$3|0);
 }
 if ((label|0) == 165) {
  $alloc$2 = $alloc$1;$matches$2 = -1;$s$8 = $s$7;$wcs$9 = $wcs$8;
 }
 $360 = ($alloc$2|0)==(0);
 if ($360) {
  $matches$3 = $matches$2;
  STACKTOP = sp;return ($matches$3|0);
 }
 _free($s$8);
 _free($wcs$9);
 $matches$3 = $matches$2;
 STACKTOP = sp;return ($matches$3|0);
}
function _vsscanf($s,$fmt,$ap) {
 $s = $s|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $f = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $f = sp;
 dest=$f; stop=dest+112|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $0 = ((($f)) + 32|0);
 HEAP32[$0>>2] = 443;
 $1 = ((($f)) + 44|0);
 HEAP32[$1>>2] = $s;
 $2 = ((($f)) + 76|0);
 HEAP32[$2>>2] = -1;
 $3 = ((($f)) + 84|0);
 HEAP32[$3>>2] = $s;
 $4 = (_MUSL_vfscanf($f,$fmt,$ap)|0);
 STACKTOP = sp;return ($4|0);
}
function _wcslen($s) {
 $s = $s|0;
 var $$0 = 0, $$0$lcssa = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $s;
 while(1) {
  $0 = HEAP32[$$0>>2]|0;
  $1 = ($0|0)==(0);
  $2 = ((($$0)) + 4|0);
  if ($1) {
   $$0$lcssa = $$0;
   break;
  } else {
   $$0 = $2;
  }
 }
 $3 = $$0$lcssa;
 $4 = $s;
 $5 = (($3) - ($4))|0;
 $6 = $5 >> 2;
 return ($6|0);
}
function _wmemcpy($d,$s,$n) {
 $d = $d|0;
 $s = $s|0;
 $n = $n|0;
 var $$014 = 0, $$023 = 0, $$05 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($n|0)==(0);
 if ($0) {
  return ($d|0);
 } else {
  $$014 = $n;$$023 = $s;$$05 = $d;
 }
 while(1) {
  $1 = (($$014) + -1)|0;
  $2 = ((($$023)) + 4|0);
  $3 = HEAP32[$$023>>2]|0;
  $4 = ((($$05)) + 4|0);
  HEAP32[$$05>>2] = $3;
  $5 = ($1|0)==(0);
  if ($5) {
   break;
  } else {
   $$014 = $1;$$023 = $2;$$05 = $4;
  }
 }
 return ($d|0);
}
function _wmemmove($d,$s,$n) {
 $d = $d|0;
 $s = $s|0;
 $n = $n|0;
 var $$025 = 0, $$07 = 0, $$16 = 0, $$in = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $d;
 $1 = $s;
 $2 = (($0) - ($1))|0;
 $3 = $2 >> 2;
 $4 = ($3>>>0)<($n>>>0);
 $5 = ($n|0)==(0);
 if ($4) {
  if ($5) {
   return ($d|0);
  } else {
   $$in = $n;
  }
  while(1) {
   $6 = (($$in) + -1)|0;
   $7 = (($s) + ($6<<2)|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = (($d) + ($6<<2)|0);
   HEAP32[$9>>2] = $8;
   $10 = ($6|0)==(0);
   if ($10) {
    break;
   } else {
    $$in = $6;
   }
  }
  return ($d|0);
 } else {
  if ($5) {
   return ($d|0);
  } else {
   $$025 = $s;$$07 = $d;$$16 = $n;
  }
  while(1) {
   $11 = (($$16) + -1)|0;
   $12 = ((($$025)) + 4|0);
   $13 = HEAP32[$$025>>2]|0;
   $14 = ((($$07)) + 4|0);
   HEAP32[$$07>>2] = $13;
   $15 = ($11|0)==(0);
   if ($15) {
    break;
   } else {
    $$025 = $12;$$07 = $14;$$16 = $11;
   }
  }
  return ($d|0);
 }
 return (0)|0;
}
function _wmemset($d,$c,$n) {
 $d = $d|0;
 $c = $c|0;
 $n = $n|0;
 var $$012 = 0, $$03 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($n|0)==(0);
 if ($0) {
  return ($d|0);
 } else {
  $$012 = $n;$$03 = $d;
 }
 while(1) {
  $1 = (($$012) + -1)|0;
  $2 = ((($$03)) + 4|0);
  HEAP32[$$03>>2] = $c;
  $3 = ($1|0)==(0);
  if ($3) {
   break;
  } else {
   $$012 = $1;$$03 = $2;
  }
 }
 return ($d|0);
}
function _do_read($f,$buf,$len) {
 $f = $f|0;
 $buf = $buf|0;
 $len = $len|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___string_read($f,$buf,$len)|0);
 return ($0|0);
}
function _abort_message($format,$varargs) {
 $format = $format|0;
 $varargs = $varargs|0;
 var $0 = 0, $list = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $list = sp;
 HEAP32[$list>>2] = $varargs;
 $0 = HEAP32[_stderr>>2]|0;
 (_vfprintf(($0|0),($format|0),($list|0))|0);
 (_fputc(10,($0|0))|0);
 _abort();
 // unreachable;
}
function __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___assert_fail((2608|0),(2640|0),1164,(2728|0));
 // unreachable;
}
function __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___assert_fail((2752|0),(2776|0),303,(2728|0));
 // unreachable;
}
function ___cxa_get_globals_fast() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $0 = (_pthread_once((2872|0),(444|0))|0);
 $1 = ($0|0)==(0);
 if ($1) {
  $2 = HEAP32[2864>>2]|0;
  $3 = (_pthread_getspecific(($2|0))|0);
  STACKTOP = sp;return ($3|0);
 } else {
  _abort_message(2880,$vararg_buffer);
  // unreachable;
 }
 return (0)|0;
}
function __Znwj($size) {
 $size = $size|0;
 var $$lcssa = 0, $$size = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($size|0)==(0);
 $$size = $0 ? 1 : $size;
 $1 = (_malloc($$size)|0);
 $2 = ($1|0)==(0|0);
 L1: do {
  if ($2) {
   while(1) {
    $3 = (__ZSt15get_new_handlerv()|0);
    $4 = ($3|0)==(0|0);
    if ($4) {
     break;
    }
    FUNCTION_TABLE_v[$3 & 1023]();
    $5 = (_malloc($$size)|0);
    $6 = ($5|0)==(0|0);
    if (!($6)) {
     $$lcssa = $5;
     break L1;
    }
   }
   $7 = (___cxa_allocate_exception(4)|0);
   HEAP32[$7>>2] = (1808);
   ___cxa_throw(($7|0),(1840|0),(56|0));
   // unreachable;
  } else {
   $$lcssa = $1;
  }
 } while(0);
 return ($$lcssa|0);
}
function __ZdlPv($ptr) {
 $ptr = $ptr|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($ptr);
 return;
}
function __ZdaPv($ptr) {
 $ptr = $ptr|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($ptr);
 return;
}
function __ZNSt9bad_allocC2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (1808);
 return;
}
function __ZNSt9bad_allocD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt9bad_allocD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt9bad_alloc4whatEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (2936|0);
}
function __ZSt11__terminatePFvvE($func) {
 $func = $func|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 __THREW__ = 0;
 invoke_v($func|0);
 $0 = __THREW__; __THREW__ = 0;
 $1 = $0&1;
 if (!($1)) {
  __THREW__ = 0;
  invoke_vii(445,(2952|0),($vararg_buffer|0));
  $2 = __THREW__; __THREW__ = 0;
 }
 $3 = ___cxa_find_matching_catch(0|0)|0;
 $4 = tempRet0;
 (___cxa_begin_catch(($3|0))|0);
 __THREW__ = 0;
 invoke_vii(445,(2992|0),($vararg_buffer1|0));
 $5 = __THREW__; __THREW__ = 0;
 $6 = ___cxa_find_matching_catch(0|0)|0;
 $7 = tempRet0;
 __THREW__ = 0;
 invoke_v(437);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if ($9) {
  $10 = ___cxa_find_matching_catch(0|0)|0;
  $11 = tempRet0;
  ___clang_call_terminate($10);
  // unreachable;
 } else {
  ___clang_call_terminate($6);
  // unreachable;
 }
}
function __ZSt9terminatev() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __THREW__ = 0;
 $0 = (invoke_i(446)|0);
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $21 = ___cxa_find_matching_catch(0|0)|0;
  $22 = tempRet0;
  ___clang_call_terminate($21);
  // unreachable;
 }
 $3 = ($0|0)==(0|0);
 if (!($3)) {
  $4 = HEAP32[$0>>2]|0;
  $5 = ($4|0)==(0|0);
  if (!($5)) {
   $6 = ((($4)) + 48|0);
   $7 = $6;
   $8 = $7;
   $9 = HEAP32[$8>>2]|0;
   $10 = (($7) + 4)|0;
   $11 = $10;
   $12 = HEAP32[$11>>2]|0;
   $13 = $9 & -256;
   $14 = ($13|0)==(1126902528);
   $15 = ($12|0)==(1129074247);
   $16 = $14 & $15;
   if ($16) {
    $17 = ((($4)) + 12|0);
    $18 = HEAP32[$17>>2]|0;
    __ZSt11__terminatePFvvE($18);
    // unreachable;
   }
  }
 }
 $19 = HEAP32[448]|0;HEAP32[448] = (($19+0)|0);
 $20 = $19;
 __ZSt11__terminatePFvvE($20);
 // unreachable;
}
function __ZSt15get_new_handlerv() {
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[1856>>2]|0;HEAP32[1856>>2] = (($0+0)|0);
 $1 = $0;
 return ($1|0);
}
function __ZNSt9exceptionD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt11logic_errorD2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (1896);
 $0 = ((($this)) + 4|0);
 __ZN12_GLOBAL__N_114__libcpp_nmstrD2Ev($0);
 return;
}
function __ZNSt11logic_errorD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt11logic_errorD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt11logic_error4whatEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNSt13runtime_errorD2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (1920);
 $0 = ((($this)) + 4|0);
 __ZN12_GLOBAL__N_114__libcpp_nmstrD2Ev($0);
 return;
}
function __ZNSt13runtime_errorD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt13runtime_errorD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt13runtime_error4whatEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNSt12out_of_rangeD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt11logic_errorD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt9type_infoD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt8bad_castC2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (2080);
 return;
}
function __ZNSt8bad_castD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt8bad_castD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt8bad_cast4whatEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (3048|0);
}
function __ZN10__cxxabiv116__shim_type_infoD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNK10__cxxabiv116__shim_type_info5noop1Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNK10__cxxabiv116__shim_type_info5noop2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN10__cxxabiv117__class_type_infoD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZN10__cxxabiv120__si_class_type_infoD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZN10__cxxabiv121__vmi_class_type_infoD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv($this,$thrown_type,$adjustedPtr) {
 $this = $this|0;
 $thrown_type = $thrown_type|0;
 $adjustedPtr = $adjustedPtr|0;
 var $$0 = 0, $$1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $info = 0, dest = 0;
 var label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $info = sp;
 $0 = ($this|0)==($thrown_type|0);
 if ($0) {
  $$1 = 1;
 } else {
  $1 = ($thrown_type|0)==(0|0);
  if ($1) {
   $$1 = 0;
  } else {
   $2 = (___dynamic_cast($thrown_type,2192,2248,0)|0);
   $3 = ($2|0)==(0|0);
   if ($3) {
    $$1 = 0;
   } else {
    dest=$info; stop=dest+56|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
    HEAP32[$info>>2] = $2;
    $4 = ((($info)) + 8|0);
    HEAP32[$4>>2] = $this;
    $5 = ((($info)) + 12|0);
    HEAP32[$5>>2] = -1;
    $6 = ((($info)) + 48|0);
    HEAP32[$6>>2] = 1;
    $7 = HEAP32[$2>>2]|0;
    $8 = ((($7)) + 28|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = HEAP32[$adjustedPtr>>2]|0;
    FUNCTION_TABLE_viiii[$9 & 127]($2,$info,$10,1);
    $11 = ((($info)) + 24|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = ($12|0)==(1);
    if ($13) {
     $14 = ((($info)) + 16|0);
     $15 = HEAP32[$14>>2]|0;
     HEAP32[$adjustedPtr>>2] = $15;
     $$0 = 1;
    } else {
     $$0 = 0;
    }
    $$1 = $$0;
   }
  }
 }
 STACKTOP = sp;return ($$1|0);
}
function __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 do {
  if ($2) {
   HEAP32[$0>>2] = $adjustedPtr;
   $3 = ((($info)) + 24|0);
   HEAP32[$3>>2] = $path_below;
   $4 = ((($info)) + 36|0);
   HEAP32[$4>>2] = 1;
  } else {
   $5 = ($1|0)==($adjustedPtr|0);
   if (!($5)) {
    $9 = ((($info)) + 36|0);
    $10 = HEAP32[$9>>2]|0;
    $11 = (($10) + 1)|0;
    HEAP32[$9>>2] = $11;
    $12 = ((($info)) + 24|0);
    HEAP32[$12>>2] = 2;
    $13 = ((($info)) + 54|0);
    HEAP8[$13>>0] = 1;
    break;
   }
   $6 = ((($info)) + 24|0);
   $7 = HEAP32[$6>>2]|0;
   $8 = ($7|0)==(2);
   if ($8) {
    HEAP32[$6>>2] = $path_below;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0,$info,$adjustedPtr,$path_below);
 }
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0,$info,$adjustedPtr,$path_below);
 } else {
  $3 = ((($this)) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = HEAP32[$4>>2]|0;
  $6 = ((($5)) + 28|0);
  $7 = HEAP32[$6>>2]|0;
  FUNCTION_TABLE_viiii[$7 & 127]($4,$info,$adjustedPtr,$path_below);
 }
 return;
}
function __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $offset_to_base$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 >> 8;
 $3 = $1 & 1;
 $4 = ($3|0)==(0);
 if ($4) {
  $offset_to_base$0 = $2;
 } else {
  $5 = HEAP32[$adjustedPtr>>2]|0;
  $6 = (($5) + ($2)|0);
  $7 = HEAP32[$6>>2]|0;
  $offset_to_base$0 = $7;
 }
 $8 = HEAP32[$this>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($9)) + 28|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($adjustedPtr) + ($offset_to_base$0)|0);
 $13 = $1 & 2;
 $14 = ($13|0)!=(0);
 $15 = $14 ? $path_below : 2;
 FUNCTION_TABLE_viiii[$11 & 127]($8,$info,$12,$15);
 return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 L1: do {
  if ($2) {
   __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0,$info,$adjustedPtr,$path_below);
  } else {
   $3 = ((($this)) + 16|0);
   $4 = ((($this)) + 12|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = (((($this)) + 16|0) + ($5<<3)|0);
   __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($3,$info,$adjustedPtr,$path_below);
   $7 = ($5|0)>(1);
   if ($7) {
    $8 = ((($this)) + 24|0);
    $9 = ((($info)) + 54|0);
    $p$0 = $8;
    while(1) {
     __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($p$0,$info,$adjustedPtr,$path_below);
     $10 = HEAP8[$9>>0]|0;
     $11 = ($10<<24>>24)==(0);
     if (!($11)) {
      break L1;
     }
     $12 = ((($p$0)) + 8|0);
     $13 = ($12>>>0)<($6>>>0);
     if ($13) {
      $p$0 = $12;
     } else {
      break;
     }
    }
   }
  }
 } while(0);
 return;
}
function ___dynamic_cast($static_ptr,$static_type,$dst_type,$src2dst_offset) {
 $static_ptr = $static_ptr|0;
 $static_type = $static_type|0;
 $dst_type = $dst_type|0;
 $src2dst_offset = $src2dst_offset|0;
 var $$ = 0, $$8 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $dst_ptr$0 = 0, $info = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond7 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $info = sp;
 $0 = HEAP32[$static_ptr>>2]|0;
 $1 = ((($0)) + -8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = $2;
 $4 = (($static_ptr) + ($3)|0);
 $5 = ((($0)) + -4|0);
 $6 = HEAP32[$5>>2]|0;
 HEAP32[$info>>2] = $dst_type;
 $7 = ((($info)) + 4|0);
 HEAP32[$7>>2] = $static_ptr;
 $8 = ((($info)) + 8|0);
 HEAP32[$8>>2] = $static_type;
 $9 = ((($info)) + 12|0);
 HEAP32[$9>>2] = $src2dst_offset;
 $10 = ((($info)) + 16|0);
 $11 = ((($info)) + 20|0);
 $12 = ((($info)) + 24|0);
 $13 = ((($info)) + 28|0);
 $14 = ((($info)) + 32|0);
 $15 = ((($info)) + 40|0);
 $16 = ($6|0)==($dst_type|0);
 dest=$10; stop=dest+36|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));HEAP16[$10+36>>1]=0|0;HEAP8[$10+38>>0]=0|0;
 do {
  if ($16) {
   $17 = ((($info)) + 48|0);
   HEAP32[$17>>2] = 1;
   $18 = HEAP32[$dst_type>>2]|0;
   $19 = ((($18)) + 20|0);
   $20 = HEAP32[$19>>2]|0;
   FUNCTION_TABLE_viiiiii[$20 & 511]($dst_type,$info,$4,$4,1,0);
   $21 = HEAP32[$12>>2]|0;
   $22 = ($21|0)==(1);
   $$ = $22 ? $4 : 0;
   $dst_ptr$0 = $$;
  } else {
   $23 = ((($info)) + 36|0);
   $24 = HEAP32[$6>>2]|0;
   $25 = ((($24)) + 24|0);
   $26 = HEAP32[$25>>2]|0;
   FUNCTION_TABLE_viiiii[$26 & 127]($6,$info,$4,1,0);
   $27 = HEAP32[$23>>2]|0;
   if ((($27|0) == 0)) {
    $28 = HEAP32[$15>>2]|0;
    $29 = ($28|0)==(1);
    $30 = HEAP32[$13>>2]|0;
    $31 = ($30|0)==(1);
    $or$cond = $29 & $31;
    $32 = HEAP32[$14>>2]|0;
    $33 = ($32|0)==(1);
    $or$cond3 = $or$cond & $33;
    $34 = HEAP32[$11>>2]|0;
    $$8 = $or$cond3 ? $34 : 0;
    $dst_ptr$0 = $$8;
    break;
   } else if (!((($27|0) == 1))) {
    $dst_ptr$0 = 0;
    break;
   }
   $35 = HEAP32[$12>>2]|0;
   $36 = ($35|0)==(1);
   if (!($36)) {
    $37 = HEAP32[$15>>2]|0;
    $38 = ($37|0)==(0);
    $39 = HEAP32[$13>>2]|0;
    $40 = ($39|0)==(1);
    $or$cond5 = $38 & $40;
    $41 = HEAP32[$14>>2]|0;
    $42 = ($41|0)==(1);
    $or$cond7 = $or$cond5 & $42;
    if (!($or$cond7)) {
     $dst_ptr$0 = 0;
     break;
    }
   }
   $43 = HEAP32[$10>>2]|0;
   $dst_ptr$0 = $43;
  }
 } while(0);
 STACKTOP = sp;return ($dst_ptr$0|0);
}
function __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i($this,$info,$dst_ptr,$current_ptr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 53|0);
 HEAP8[$0>>0] = 1;
 $1 = ((($info)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==($current_ptr|0);
 do {
  if ($3) {
   $4 = ((($info)) + 52|0);
   HEAP8[$4>>0] = 1;
   $5 = ((($info)) + 16|0);
   $6 = HEAP32[$5>>2]|0;
   $7 = ($6|0)==(0|0);
   if ($7) {
    HEAP32[$5>>2] = $dst_ptr;
    $8 = ((($info)) + 24|0);
    HEAP32[$8>>2] = $path_below;
    $9 = ((($info)) + 36|0);
    HEAP32[$9>>2] = 1;
    $10 = ((($info)) + 48|0);
    $11 = HEAP32[$10>>2]|0;
    $12 = ($11|0)==(1);
    $13 = ($path_below|0)==(1);
    $or$cond = $12 & $13;
    if (!($or$cond)) {
     break;
    }
    $14 = ((($info)) + 54|0);
    HEAP8[$14>>0] = 1;
    break;
   }
   $15 = ($6|0)==($dst_ptr|0);
   if (!($15)) {
    $25 = ((($info)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (($26) + 1)|0;
    HEAP32[$25>>2] = $27;
    $28 = ((($info)) + 54|0);
    HEAP8[$28>>0] = 1;
    break;
   }
   $16 = ((($info)) + 24|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ($17|0)==(2);
   if ($18) {
    HEAP32[$16>>2] = $path_below;
    $22 = $path_below;
   } else {
    $22 = $17;
   }
   $19 = ((($info)) + 48|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ($20|0)==(1);
   $23 = ($22|0)==(1);
   $or$cond1 = $21 & $23;
   if ($or$cond1) {
    $24 = ((($info)) + 54|0);
    HEAP8[$24>>0] = 1;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $does_dst_type_point_to_our_static_type$0$off0$lcssa = 0, $does_dst_type_point_to_our_static_type$0$off023 = 0, $does_dst_type_point_to_our_static_type$1$off0 = 0, $is_dst_type_derived_from_static_type$0$off025 = 0, $is_dst_type_derived_from_static_type$1$off0 = 0, $is_dst_type_derived_from_static_type$2$off0 = 0;
 var $p$024 = 0, $p2$0 = 0, $p2$1 = 0, $p2$2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 L1: do {
  if ($2) {
   $3 = ((($info)) + 4|0);
   $4 = HEAP32[$3>>2]|0;
   $5 = ($4|0)==($current_ptr|0);
   if ($5) {
    $6 = ((($info)) + 28|0);
    $7 = HEAP32[$6>>2]|0;
    $8 = ($7|0)==(1);
    if (!($8)) {
     HEAP32[$6>>2] = $path_below;
    }
   }
  } else {
   $9 = HEAP32[$info>>2]|0;
   $10 = ($this|0)==($9|0);
   if (!($10)) {
    $57 = ((($this)) + 16|0);
    $58 = ((($this)) + 12|0);
    $59 = HEAP32[$58>>2]|0;
    $60 = (((($this)) + 16|0) + ($59<<3)|0);
    __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($57,$info,$current_ptr,$path_below,$use_strcmp);
    $61 = ((($this)) + 24|0);
    $62 = ($59|0)>(1);
    if (!($62)) {
     break;
    }
    $63 = ((($this)) + 8|0);
    $64 = HEAP32[$63>>2]|0;
    $65 = $64 & 2;
    $66 = ($65|0)==(0);
    if ($66) {
     $67 = ((($info)) + 36|0);
     $68 = HEAP32[$67>>2]|0;
     $69 = ($68|0)==(1);
     if (!($69)) {
      $75 = $64 & 1;
      $76 = ($75|0)==(0);
      if ($76) {
       $79 = ((($info)) + 54|0);
       $p2$2 = $61;
       while(1) {
        $88 = HEAP8[$79>>0]|0;
        $89 = ($88<<24>>24)==(0);
        if (!($89)) {
         break L1;
        }
        $90 = HEAP32[$67>>2]|0;
        $91 = ($90|0)==(1);
        if ($91) {
         break L1;
        }
        __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$2,$info,$current_ptr,$path_below,$use_strcmp);
        $92 = ((($p2$2)) + 8|0);
        $93 = ($92>>>0)<($60>>>0);
        if ($93) {
         $p2$2 = $92;
        } else {
         break L1;
        }
       }
      }
      $77 = ((($info)) + 24|0);
      $78 = ((($info)) + 54|0);
      $p2$1 = $61;
      while(1) {
       $80 = HEAP8[$78>>0]|0;
       $81 = ($80<<24>>24)==(0);
       if (!($81)) {
        break L1;
       }
       $82 = HEAP32[$67>>2]|0;
       $83 = ($82|0)==(1);
       if ($83) {
        $84 = HEAP32[$77>>2]|0;
        $85 = ($84|0)==(1);
        if ($85) {
         break L1;
        }
       }
       __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$1,$info,$current_ptr,$path_below,$use_strcmp);
       $86 = ((($p2$1)) + 8|0);
       $87 = ($86>>>0)<($60>>>0);
       if ($87) {
        $p2$1 = $86;
       } else {
        break L1;
       }
      }
     }
    }
    $70 = ((($info)) + 54|0);
    $p2$0 = $61;
    while(1) {
     $71 = HEAP8[$70>>0]|0;
     $72 = ($71<<24>>24)==(0);
     if (!($72)) {
      break L1;
     }
     __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$0,$info,$current_ptr,$path_below,$use_strcmp);
     $73 = ((($p2$0)) + 8|0);
     $74 = ($73>>>0)<($60>>>0);
     if ($74) {
      $p2$0 = $73;
     } else {
      break L1;
     }
    }
   }
   $11 = ((($info)) + 16|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = ($12|0)==($current_ptr|0);
   if (!($13)) {
    $14 = ((($info)) + 20|0);
    $15 = HEAP32[$14>>2]|0;
    $16 = ($15|0)==($current_ptr|0);
    if (!($16)) {
     $19 = ((($info)) + 32|0);
     HEAP32[$19>>2] = $path_below;
     $20 = ((($info)) + 44|0);
     $21 = HEAP32[$20>>2]|0;
     $22 = ($21|0)==(4);
     if ($22) {
      break;
     }
     $23 = ((($this)) + 12|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = (((($this)) + 16|0) + ($24<<3)|0);
     $26 = ((($info)) + 52|0);
     $27 = ((($info)) + 53|0);
     $28 = ((($info)) + 54|0);
     $29 = ((($this)) + 8|0);
     $30 = ((($info)) + 24|0);
     $31 = ($24|0)>(0);
     L34: do {
      if ($31) {
       $32 = ((($this)) + 16|0);
       $does_dst_type_point_to_our_static_type$0$off023 = 0;$is_dst_type_derived_from_static_type$0$off025 = 0;$p$024 = $32;
       while(1) {
        HEAP8[$26>>0] = 0;
        HEAP8[$27>>0] = 0;
        __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($p$024,$info,$current_ptr,$current_ptr,1,$use_strcmp);
        $33 = HEAP8[$28>>0]|0;
        $34 = ($33<<24>>24)==(0);
        if (!($34)) {
         $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$0$off023;$is_dst_type_derived_from_static_type$2$off0 = $is_dst_type_derived_from_static_type$0$off025;
         label = 20;
         break L34;
        }
        $35 = HEAP8[$27>>0]|0;
        $36 = ($35<<24>>24)==(0);
        do {
         if ($36) {
          $does_dst_type_point_to_our_static_type$1$off0 = $does_dst_type_point_to_our_static_type$0$off023;$is_dst_type_derived_from_static_type$1$off0 = $is_dst_type_derived_from_static_type$0$off025;
         } else {
          $37 = HEAP8[$26>>0]|0;
          $38 = ($37<<24>>24)==(0);
          if ($38) {
           $44 = HEAP32[$29>>2]|0;
           $45 = $44 & 1;
           $46 = ($45|0)==(0);
           if ($46) {
            $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$0$off023;$is_dst_type_derived_from_static_type$2$off0 = 1;
            label = 20;
            break L34;
           } else {
            $does_dst_type_point_to_our_static_type$1$off0 = $does_dst_type_point_to_our_static_type$0$off023;$is_dst_type_derived_from_static_type$1$off0 = 1;
            break;
           }
          }
          $39 = HEAP32[$30>>2]|0;
          $40 = ($39|0)==(1);
          if ($40) {
           break L34;
          }
          $41 = HEAP32[$29>>2]|0;
          $42 = $41 & 2;
          $43 = ($42|0)==(0);
          if ($43) {
           break L34;
          } else {
           $does_dst_type_point_to_our_static_type$1$off0 = 1;$is_dst_type_derived_from_static_type$1$off0 = 1;
          }
         }
        } while(0);
        $47 = ((($p$024)) + 8|0);
        $48 = ($47>>>0)<($25>>>0);
        if ($48) {
         $does_dst_type_point_to_our_static_type$0$off023 = $does_dst_type_point_to_our_static_type$1$off0;$is_dst_type_derived_from_static_type$0$off025 = $is_dst_type_derived_from_static_type$1$off0;$p$024 = $47;
        } else {
         $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$1$off0;$is_dst_type_derived_from_static_type$2$off0 = $is_dst_type_derived_from_static_type$1$off0;
         label = 20;
         break;
        }
       }
      } else {
       $does_dst_type_point_to_our_static_type$0$off0$lcssa = 0;$is_dst_type_derived_from_static_type$2$off0 = 0;
       label = 20;
      }
     } while(0);
     do {
      if ((label|0) == 20) {
       if ($does_dst_type_point_to_our_static_type$0$off0$lcssa) {
        label = 24;
       } else {
        HEAP32[$14>>2] = $current_ptr;
        $49 = ((($info)) + 40|0);
        $50 = HEAP32[$49>>2]|0;
        $51 = (($50) + 1)|0;
        HEAP32[$49>>2] = $51;
        $52 = ((($info)) + 36|0);
        $53 = HEAP32[$52>>2]|0;
        $54 = ($53|0)==(1);
        if ($54) {
         $55 = HEAP32[$30>>2]|0;
         $56 = ($55|0)==(2);
         if ($56) {
          HEAP8[$28>>0] = 1;
          if ($is_dst_type_derived_from_static_type$2$off0) {
           break;
          }
         } else {
          label = 24;
         }
        } else {
         label = 24;
        }
       }
       if ((label|0) == 24) {
        if ($is_dst_type_derived_from_static_type$2$off0) {
         break;
        }
       }
       HEAP32[$20>>2] = 4;
       break L1;
      }
     } while(0);
     HEAP32[$20>>2] = 3;
     break;
    }
   }
   $17 = ($path_below|0)==(1);
   if ($17) {
    $18 = ((($info)) + 32|0);
    HEAP32[$18>>2] = 1;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $offset_to_base$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 >> 8;
 $3 = $1 & 1;
 $4 = ($3|0)==(0);
 if ($4) {
  $offset_to_base$0 = $2;
 } else {
  $5 = HEAP32[$current_ptr>>2]|0;
  $6 = (($5) + ($2)|0);
  $7 = HEAP32[$6>>2]|0;
  $offset_to_base$0 = $7;
 }
 $8 = HEAP32[$this>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($9)) + 20|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($current_ptr) + ($offset_to_base$0)|0);
 $13 = $1 & 2;
 $14 = ($13|0)!=(0);
 $15 = $14 ? $path_below : 2;
 FUNCTION_TABLE_viiiiii[$11 & 511]($8,$info,$dst_ptr,$12,$15,$use_strcmp);
 return;
}
function __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $offset_to_base$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 >> 8;
 $3 = $1 & 1;
 $4 = ($3|0)==(0);
 if ($4) {
  $offset_to_base$0 = $2;
 } else {
  $5 = HEAP32[$current_ptr>>2]|0;
  $6 = (($5) + ($2)|0);
  $7 = HEAP32[$6>>2]|0;
  $offset_to_base$0 = $7;
 }
 $8 = HEAP32[$this>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($9)) + 24|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($current_ptr) + ($offset_to_base$0)|0);
 $13 = $1 & 2;
 $14 = ($13|0)!=(0);
 $15 = $14 ? $path_below : 2;
 FUNCTION_TABLE_viiiii[$11 & 127]($8,$info,$12,$15,$use_strcmp);
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $is_dst_type_derived_from_static_type$0$off01 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 L1: do {
  if ($2) {
   $3 = ((($info)) + 4|0);
   $4 = HEAP32[$3>>2]|0;
   $5 = ($4|0)==($current_ptr|0);
   if ($5) {
    $6 = ((($info)) + 28|0);
    $7 = HEAP32[$6>>2]|0;
    $8 = ($7|0)==(1);
    if (!($8)) {
     HEAP32[$6>>2] = $path_below;
    }
   }
  } else {
   $9 = HEAP32[$info>>2]|0;
   $10 = ($this|0)==($9|0);
   if (!($10)) {
    $43 = ((($this)) + 8|0);
    $44 = HEAP32[$43>>2]|0;
    $45 = HEAP32[$44>>2]|0;
    $46 = ((($45)) + 24|0);
    $47 = HEAP32[$46>>2]|0;
    FUNCTION_TABLE_viiiii[$47 & 127]($44,$info,$current_ptr,$path_below,$use_strcmp);
    break;
   }
   $11 = ((($info)) + 16|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = ($12|0)==($current_ptr|0);
   if (!($13)) {
    $14 = ((($info)) + 20|0);
    $15 = HEAP32[$14>>2]|0;
    $16 = ($15|0)==($current_ptr|0);
    if (!($16)) {
     $19 = ((($info)) + 32|0);
     HEAP32[$19>>2] = $path_below;
     $20 = ((($info)) + 44|0);
     $21 = HEAP32[$20>>2]|0;
     $22 = ($21|0)==(4);
     if ($22) {
      break;
     }
     $23 = ((($info)) + 52|0);
     HEAP8[$23>>0] = 0;
     $24 = ((($info)) + 53|0);
     HEAP8[$24>>0] = 0;
     $25 = ((($this)) + 8|0);
     $26 = HEAP32[$25>>2]|0;
     $27 = HEAP32[$26>>2]|0;
     $28 = ((($27)) + 20|0);
     $29 = HEAP32[$28>>2]|0;
     FUNCTION_TABLE_viiiiii[$29 & 511]($26,$info,$current_ptr,$current_ptr,1,$use_strcmp);
     $30 = HEAP8[$24>>0]|0;
     $31 = ($30<<24>>24)==(0);
     if ($31) {
      $is_dst_type_derived_from_static_type$0$off01 = 0;
      label = 13;
     } else {
      $32 = HEAP8[$23>>0]|0;
      $not$ = ($32<<24>>24)==(0);
      if ($not$) {
       $is_dst_type_derived_from_static_type$0$off01 = 1;
       label = 13;
      }
     }
     do {
      if ((label|0) == 13) {
       HEAP32[$14>>2] = $current_ptr;
       $33 = ((($info)) + 40|0);
       $34 = HEAP32[$33>>2]|0;
       $35 = (($34) + 1)|0;
       HEAP32[$33>>2] = $35;
       $36 = ((($info)) + 36|0);
       $37 = HEAP32[$36>>2]|0;
       $38 = ($37|0)==(1);
       if ($38) {
        $39 = ((($info)) + 24|0);
        $40 = HEAP32[$39>>2]|0;
        $41 = ($40|0)==(2);
        if ($41) {
         $42 = ((($info)) + 54|0);
         HEAP8[$42>>0] = 1;
         if ($is_dst_type_derived_from_static_type$0$off01) {
          break;
         }
        } else {
         label = 16;
        }
       } else {
        label = 16;
       }
       if ((label|0) == 16) {
        if ($is_dst_type_derived_from_static_type$0$off01) {
         break;
        }
       }
       HEAP32[$20>>2] = 4;
       break L1;
      }
     } while(0);
     HEAP32[$20>>2] = 3;
     break;
    }
   }
   $17 = ($path_below|0)==(1);
   if ($17) {
    $18 = ((($info)) + 32|0);
    HEAP32[$18>>2] = 1;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 do {
  if ($2) {
   $3 = ((($info)) + 4|0);
   $4 = HEAP32[$3>>2]|0;
   $5 = ($4|0)==($current_ptr|0);
   if ($5) {
    $6 = ((($info)) + 28|0);
    $7 = HEAP32[$6>>2]|0;
    $8 = ($7|0)==(1);
    if (!($8)) {
     HEAP32[$6>>2] = $path_below;
    }
   }
  } else {
   $9 = HEAP32[$info>>2]|0;
   $10 = ($this|0)==($9|0);
   if ($10) {
    $11 = ((($info)) + 16|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = ($12|0)==($current_ptr|0);
    if (!($13)) {
     $14 = ((($info)) + 20|0);
     $15 = HEAP32[$14>>2]|0;
     $16 = ($15|0)==($current_ptr|0);
     if (!($16)) {
      $19 = ((($info)) + 32|0);
      HEAP32[$19>>2] = $path_below;
      HEAP32[$14>>2] = $current_ptr;
      $20 = ((($info)) + 40|0);
      $21 = HEAP32[$20>>2]|0;
      $22 = (($21) + 1)|0;
      HEAP32[$20>>2] = $22;
      $23 = ((($info)) + 36|0);
      $24 = HEAP32[$23>>2]|0;
      $25 = ($24|0)==(1);
      if ($25) {
       $26 = ((($info)) + 24|0);
       $27 = HEAP32[$26>>2]|0;
       $28 = ($27|0)==(2);
       if ($28) {
        $29 = ((($info)) + 54|0);
        HEAP8[$29>>0] = 1;
       }
      }
      $30 = ((($info)) + 44|0);
      HEAP32[$30>>2] = 4;
      break;
     }
    }
    $17 = ($path_below|0)==(1);
    if ($17) {
     $18 = ((($info)) + 32|0);
     HEAP32[$18>>2] = 1;
    }
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0,$info,$dst_ptr,$current_ptr,$path_below);
 } else {
  $3 = ((($info)) + 52|0);
  $4 = HEAP8[$3>>0]|0;
  $5 = ((($info)) + 53|0);
  $6 = HEAP8[$5>>0]|0;
  $7 = ((($this)) + 16|0);
  $8 = ((($this)) + 12|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (((($this)) + 16|0) + ($9<<3)|0);
  HEAP8[$3>>0] = 0;
  HEAP8[$5>>0] = 0;
  __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($7,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp);
  $11 = ($9|0)>(1);
  L4: do {
   if ($11) {
    $12 = ((($this)) + 24|0);
    $13 = ((($info)) + 24|0);
    $14 = ((($this)) + 8|0);
    $15 = ((($info)) + 54|0);
    $p$0 = $12;
    while(1) {
     $16 = HEAP8[$15>>0]|0;
     $17 = ($16<<24>>24)==(0);
     if (!($17)) {
      break L4;
     }
     $18 = HEAP8[$3>>0]|0;
     $19 = ($18<<24>>24)==(0);
     if ($19) {
      $25 = HEAP8[$5>>0]|0;
      $26 = ($25<<24>>24)==(0);
      if (!($26)) {
       $27 = HEAP32[$14>>2]|0;
       $28 = $27 & 1;
       $29 = ($28|0)==(0);
       if ($29) {
        break L4;
       }
      }
     } else {
      $20 = HEAP32[$13>>2]|0;
      $21 = ($20|0)==(1);
      if ($21) {
       break L4;
      }
      $22 = HEAP32[$14>>2]|0;
      $23 = $22 & 2;
      $24 = ($23|0)==(0);
      if ($24) {
       break L4;
      }
     }
     HEAP8[$3>>0] = 0;
     HEAP8[$5>>0] = 0;
     __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($p$0,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp);
     $30 = ((($p$0)) + 8|0);
     $31 = ($30>>>0)<($10>>>0);
     if ($31) {
      $p$0 = $30;
     } else {
      break;
     }
    }
   }
  } while(0);
  HEAP8[$3>>0] = $4;
  HEAP8[$5>>0] = $6;
 }
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0,$info,$dst_ptr,$current_ptr,$path_below);
 } else {
  $3 = ((($this)) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = HEAP32[$4>>2]|0;
  $6 = ((($5)) + 20|0);
  $7 = HEAP32[$6>>2]|0;
  FUNCTION_TABLE_viiiiii[$7 & 511]($4,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp);
 }
 return;
}
function __ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0,$info,$dst_ptr,$current_ptr,$path_below);
 }
 return;
}
function ___cxa_can_catch($catchType,$excpType,$thrown) {
 $catchType = $catchType|0;
 $excpType = $excpType|0;
 $thrown = $thrown|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $temp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $temp = sp;
 $0 = HEAP32[$thrown>>2]|0;
 HEAP32[$temp>>2] = $0;
 $1 = HEAP32[$catchType>>2]|0;
 $2 = ((($1)) + 16|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (FUNCTION_TABLE_iiii[$3 & 1023]($catchType,$excpType,$temp)|0);
 $5 = $4&1;
 if ($4) {
  $6 = HEAP32[$temp>>2]|0;
  HEAP32[$thrown>>2] = $6;
 }
 STACKTOP = sp;return ($5|0);
}
function ___cxa_is_pointer_type($type) {
 $type = $type|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($type|0)==(0|0);
 if ($0) {
  $3 = 0;
 } else {
  $1 = (___dynamic_cast($type,2192,2360,0)|0);
  $phitmp = ($1|0)!=(0|0);
  $3 = $phitmp;
 }
 $2 = $3&1;
 return ($2|0);
}
function __ZSt17__throw_bad_allocv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___cxa_allocate_exception(4)|0);
 __ZNSt9bad_allocC2Ev($0);
 ___cxa_throw(($0|0),(1840|0),(56|0));
 // unreachable;
}
function __ZL25default_terminate_handlerv() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $thrown_object = 0, $vararg_buffer = 0, $vararg_buffer10 = 0, $vararg_buffer3 = 0, $vararg_buffer7 = 0, $vararg_ptr1 = 0;
 var $vararg_ptr2 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer10 = sp + 32|0;
 $vararg_buffer7 = sp + 24|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $thrown_object = sp + 36|0;
 $0 = (___cxa_get_globals_fast()|0);
 $1 = ($0|0)==(0|0);
 if (!($1)) {
  $2 = HEAP32[$0>>2]|0;
  $3 = ($2|0)==(0|0);
  if (!($3)) {
   $4 = ((($2)) + 80|0);
   $5 = ((($2)) + 48|0);
   $6 = $5;
   $7 = $6;
   $8 = HEAP32[$7>>2]|0;
   $9 = (($6) + 4)|0;
   $10 = $9;
   $11 = HEAP32[$10>>2]|0;
   $12 = $8 & -256;
   $13 = ($12|0)==(1126902528);
   $14 = ($11|0)==(1129074247);
   $15 = $13 & $14;
   if (!($15)) {
    HEAP32[$vararg_buffer7>>2] = 3328;
    _abort_message(3272,$vararg_buffer7);
    // unreachable;
   }
   $16 = ($8|0)==(1126902529);
   $17 = ($11|0)==(1129074247);
   $18 = $16 & $17;
   if ($18) {
    $19 = ((($2)) + 44|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = $20;
   } else {
    $21 = $4;
   }
   HEAP32[$thrown_object>>2] = $21;
   $22 = HEAP32[$2>>2]|0;
   $23 = ((($22)) + 4|0);
   $24 = HEAP32[$23>>2]|0;
   $25 = HEAP32[1880>>2]|0;
   $26 = ((($25)) + 16|0);
   $27 = HEAP32[$26>>2]|0;
   $28 = (FUNCTION_TABLE_iiii[$27 & 1023](1880,$22,$thrown_object)|0);
   if ($28) {
    $29 = HEAP32[$thrown_object>>2]|0;
    $30 = HEAP32[$29>>2]|0;
    $31 = ((($30)) + 8|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = (FUNCTION_TABLE_ii[$32 & 1023]($29)|0);
    HEAP32[$vararg_buffer>>2] = 3328;
    $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
    HEAP32[$vararg_ptr1>>2] = $24;
    $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
    HEAP32[$vararg_ptr2>>2] = $33;
    _abort_message(3176,$vararg_buffer);
    // unreachable;
   } else {
    HEAP32[$vararg_buffer3>>2] = 3328;
    $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
    HEAP32[$vararg_ptr6>>2] = $24;
    _abort_message(3224,$vararg_buffer3);
    // unreachable;
   }
  }
 }
 _abort_message(3312,$vararg_buffer10);
 // unreachable;
}
function __ZN10__cxxabiv112_GLOBAL__N_110construct_Ev() {
 var $0 = 0, $1 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $0 = (_pthread_key_create((2864|0),(447|0))|0);
 $1 = ($0|0)==(0);
 if ($1) {
  STACKTOP = sp;return;
 } else {
  _abort_message(3064,$vararg_buffer);
  // unreachable;
 }
}
function __ZN12_GLOBAL__N_114__libcpp_nmstrD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -4|0);
 $2 = HEAP32[$1>>2]|0;HEAP32[$1>>2] = (($2+-1)|0);
 $3 = (($2) + -1)|0;
 $4 = ($3|0)<(0);
 if ($4) {
  $5 = HEAP32[$this>>2]|0;
  $6 = ((($5)) + -12|0);
  __ZdlPv($6);
 }
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv($p) {
 $p = $p|0;
 var $0 = 0, $1 = 0, $2 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 _free($p);
 $0 = HEAP32[2864>>2]|0;
 $1 = (_pthread_setspecific(($0|0),(0|0))|0);
 $2 = ($1|0)==(0);
 if ($2) {
  STACKTOP = sp;return;
 } else {
  _abort_message(3120,$vararg_buffer);
  // unreachable;
 }
}
function _isspace($c) {
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($c|0)==(32);
 $1 = (($c) + -9)|0;
 $2 = ($1>>>0)<(5);
 $3 = $0 | $2;
 $4 = $3&1;
 return ($4|0);
}
function _isxdigit($c) {
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $isdigit = 0, $isdigittmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isdigittmp = (($c) + -48)|0;
 $isdigit = ($isdigittmp>>>0)<(10);
 if ($isdigit) {
  $4 = 1;
  $3 = $4&1;
  return ($3|0);
 }
 $0 = $c | 32;
 $1 = (($0) + -97)|0;
 $2 = ($1>>>0)<(6);
 $4 = $2;
 $3 = $4&1;
 return ($3|0);
}
function ___intscan($f,$base,$pok,$0,$1) {
 $f = $f|0;
 $base = $base|0;
 $pok = $pok|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$1 = 0, $$122 = 0, $$123 = 0, $$base21 = 0, $$lcssa = 0, $$lcssa130 = 0, $$lcssa131 = 0, $$lcssa132 = 0, $$lcssa133 = 0, $$lcssa134 = 0, $$lcssa135 = 0, $$sum = 0, $$sum14 = 0, $$sum1445 = 0, $$sum15 = 0, $$sum16 = 0, $$sum17 = 0, $$sum18 = 0, $$sum1865 = 0, $$sum19 = 0;
 var $$sum20 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0;
 var $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0;
 var $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0;
 var $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0;
 var $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0;
 var $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0;
 var $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0;
 var $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $c$0 = 0, $c$1 = 0, $c$124 = 0, $c$2$be = 0, $c$2$be$lcssa = 0, $c$2$lcssa = 0, $c$3$be = 0, $c$3$lcssa = 0, $c$371 = 0;
 var $c$4$be = 0, $c$4$be$lcssa = 0, $c$4$lcssa = 0, $c$5$be = 0, $c$6$be = 0, $c$6$be$lcssa = 0, $c$6$lcssa = 0, $c$7$be = 0, $c$753 = 0, $c$8 = 0, $c$9$be = 0, $neg$0 = 0, $or$cond = 0, $or$cond12 = 0, $or$cond40 = 0, $or$cond5 = 0, $or$cond7 = 0, $x$082 = 0, $x$146 = 0, $x$266 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($base>>>0)>(36);
 if ($2) {
  $5 = (___errno_location()|0);
  HEAP32[$5>>2] = 22;
  $282 = 0;$283 = 0;
  tempRet0 = ($282);
  return ($283|0);
 }
 $3 = ((($f)) + 4|0);
 $4 = ((($f)) + 100|0);
 while(1) {
  $6 = HEAP32[$3>>2]|0;
  $7 = HEAP32[$4>>2]|0;
  $8 = ($6>>>0)<($7>>>0);
  if ($8) {
   $9 = ((($6)) + 1|0);
   HEAP32[$3>>2] = $9;
   $10 = HEAP8[$6>>0]|0;
   $11 = $10&255;
   $13 = $11;
  } else {
   $12 = (___shgetc($f)|0);
   $13 = $12;
  }
  $14 = (_isspace($13)|0);
  $15 = ($14|0)==(0);
  if ($15) {
   $$lcssa135 = $13;
   break;
  }
 }
 $16 = ($$lcssa135|0)==(45);
 do {
  if ((($$lcssa135|0) == 43) | (($$lcssa135|0) == 45)) {
   $17 = $16 << 31 >> 31;
   $18 = HEAP32[$3>>2]|0;
   $19 = HEAP32[$4>>2]|0;
   $20 = ($18>>>0)<($19>>>0);
   if ($20) {
    $21 = ((($18)) + 1|0);
    HEAP32[$3>>2] = $21;
    $22 = HEAP8[$18>>0]|0;
    $23 = $22&255;
    $c$0 = $23;$neg$0 = $17;
    break;
   } else {
    $24 = (___shgetc($f)|0);
    $c$0 = $24;$neg$0 = $17;
    break;
   }
  } else {
   $c$0 = $$lcssa135;$neg$0 = 0;
  }
 } while(0);
 $25 = ($base|0)==(0);
 $26 = $base & -17;
 $27 = ($26|0)==(0);
 $28 = ($c$0|0)==(48);
 $or$cond5 = $27 & $28;
 do {
  if ($or$cond5) {
   $29 = HEAP32[$3>>2]|0;
   $30 = HEAP32[$4>>2]|0;
   $31 = ($29>>>0)<($30>>>0);
   if ($31) {
    $32 = ((($29)) + 1|0);
    HEAP32[$3>>2] = $32;
    $33 = HEAP8[$29>>0]|0;
    $34 = $33&255;
    $37 = $34;
   } else {
    $35 = (___shgetc($f)|0);
    $37 = $35;
   }
   $36 = $37 | 32;
   $38 = ($36|0)==(120);
   if (!($38)) {
    if ($25) {
     $$123 = 8;$c$124 = $37;
     label = 46;
     break;
    } else {
     $$1 = $base;$c$1 = $37;
     label = 32;
     break;
    }
   }
   $39 = HEAP32[$3>>2]|0;
   $40 = HEAP32[$4>>2]|0;
   $41 = ($39>>>0)<($40>>>0);
   if ($41) {
    $42 = ((($39)) + 1|0);
    HEAP32[$3>>2] = $42;
    $43 = HEAP8[$39>>0]|0;
    $44 = $43&255;
    $46 = $44;
   } else {
    $45 = (___shgetc($f)|0);
    $46 = $45;
   }
   $$sum20 = (($46) + 1)|0;
   $47 = (3344 + ($$sum20)|0);
   $48 = HEAP8[$47>>0]|0;
   $49 = ($48&255)>(15);
   if ($49) {
    $50 = HEAP32[$4>>2]|0;
    $51 = ($50|0)==(0|0);
    if (!($51)) {
     $52 = HEAP32[$3>>2]|0;
     $53 = ((($52)) + -1|0);
     HEAP32[$3>>2] = $53;
    }
    $54 = ($pok|0)==(0);
    if ($54) {
     ___shlim($f,0);
     $282 = 0;$283 = 0;
     tempRet0 = ($282);
     return ($283|0);
    }
    if ($51) {
     $282 = 0;$283 = 0;
     tempRet0 = ($282);
     return ($283|0);
    }
    $55 = HEAP32[$3>>2]|0;
    $56 = ((($55)) + -1|0);
    HEAP32[$3>>2] = $56;
    $282 = 0;$283 = 0;
    tempRet0 = ($282);
    return ($283|0);
   } else {
    $$123 = 16;$c$124 = $46;
    label = 46;
   }
  } else {
   $$base21 = $25 ? 10 : $base;
   $$sum = (($c$0) + 1)|0;
   $57 = (3344 + ($$sum)|0);
   $58 = HEAP8[$57>>0]|0;
   $59 = $58&255;
   $60 = ($59>>>0)<($$base21>>>0);
   if ($60) {
    $$1 = $$base21;$c$1 = $c$0;
    label = 32;
   } else {
    $61 = HEAP32[$4>>2]|0;
    $62 = ($61|0)==(0|0);
    if (!($62)) {
     $63 = HEAP32[$3>>2]|0;
     $64 = ((($63)) + -1|0);
     HEAP32[$3>>2] = $64;
    }
    ___shlim($f,0);
    $65 = (___errno_location()|0);
    HEAP32[$65>>2] = 22;
    $282 = 0;$283 = 0;
    tempRet0 = ($282);
    return ($283|0);
   }
  }
 } while(0);
 if ((label|0) == 32) {
  $66 = ($$1|0)==(10);
  if ($66) {
   $67 = (($c$1) + -48)|0;
   $68 = ($67>>>0)<(10);
   if ($68) {
    $71 = $67;$x$082 = 0;
    while(1) {
     $69 = ($x$082*10)|0;
     $70 = (($69) + ($71))|0;
     $72 = HEAP32[$3>>2]|0;
     $73 = HEAP32[$4>>2]|0;
     $74 = ($72>>>0)<($73>>>0);
     if ($74) {
      $75 = ((($72)) + 1|0);
      HEAP32[$3>>2] = $75;
      $76 = HEAP8[$72>>0]|0;
      $77 = $76&255;
      $c$2$be = $77;
     } else {
      $78 = (___shgetc($f)|0);
      $c$2$be = $78;
     }
     $79 = (($c$2$be) + -48)|0;
     $80 = ($79>>>0)<(10);
     $81 = ($70>>>0)<(429496729);
     $82 = $80 & $81;
     if ($82) {
      $71 = $79;$x$082 = $70;
     } else {
      $$lcssa134 = $70;$c$2$be$lcssa = $c$2$be;
      break;
     }
    }
    $284 = $$lcssa134;$285 = 0;$c$2$lcssa = $c$2$be$lcssa;
   } else {
    $284 = 0;$285 = 0;$c$2$lcssa = $c$1;
   }
   $83 = (($c$2$lcssa) + -48)|0;
   $84 = ($83>>>0)<(10);
   if ($84) {
    $85 = $284;$86 = $285;$89 = $83;$c$371 = $c$2$lcssa;
    while(1) {
     $87 = (___muldi3(($85|0),($86|0),10,0)|0);
     $88 = tempRet0;
     $90 = ($89|0)<(0);
     $91 = $90 << 31 >> 31;
     $92 = $89 ^ -1;
     $93 = $91 ^ -1;
     $94 = ($88>>>0)>($93>>>0);
     $95 = ($87>>>0)>($92>>>0);
     $96 = ($88|0)==($93|0);
     $97 = $96 & $95;
     $98 = $94 | $97;
     if ($98) {
      $$lcssa = $89;$286 = $85;$287 = $86;$c$3$lcssa = $c$371;
      break;
     }
     $99 = (_i64Add(($87|0),($88|0),($89|0),($91|0))|0);
     $100 = tempRet0;
     $101 = HEAP32[$3>>2]|0;
     $102 = HEAP32[$4>>2]|0;
     $103 = ($101>>>0)<($102>>>0);
     if ($103) {
      $104 = ((($101)) + 1|0);
      HEAP32[$3>>2] = $104;
      $105 = HEAP8[$101>>0]|0;
      $106 = $105&255;
      $c$3$be = $106;
     } else {
      $107 = (___shgetc($f)|0);
      $c$3$be = $107;
     }
     $108 = (($c$3$be) + -48)|0;
     $109 = ($108>>>0)<(10);
     $110 = ($100>>>0)<(429496729);
     $111 = ($99>>>0)<(2576980378);
     $112 = ($100|0)==(429496729);
     $113 = $112 & $111;
     $114 = $110 | $113;
     $or$cond7 = $109 & $114;
     if ($or$cond7) {
      $85 = $99;$86 = $100;$89 = $108;$c$371 = $c$3$be;
     } else {
      $$lcssa = $108;$286 = $99;$287 = $100;$c$3$lcssa = $c$3$be;
      break;
     }
    }
    $115 = ($$lcssa>>>0)>(9);
    if ($115) {
     $255 = $287;$257 = $286;
    } else {
     $$122 = 10;$288 = $286;$289 = $287;$c$8 = $c$3$lcssa;
     label = 72;
    }
   } else {
    $255 = $285;$257 = $284;
   }
  } else {
   $$123 = $$1;$c$124 = $c$1;
   label = 46;
  }
 }
 L69: do {
  if ((label|0) == 46) {
   $116 = (($$123) + -1)|0;
   $117 = $116 & $$123;
   $118 = ($117|0)==(0);
   if ($118) {
    $123 = ($$123*23)|0;
    $124 = $123 >>> 5;
    $125 = $124 & 7;
    $126 = (3608 + ($125)|0);
    $127 = HEAP8[$126>>0]|0;
    $128 = $127 << 24 >> 24;
    $$sum1445 = (($c$124) + 1)|0;
    $129 = (3344 + ($$sum1445)|0);
    $130 = HEAP8[$129>>0]|0;
    $131 = $130&255;
    $132 = ($131>>>0)<($$123>>>0);
    if ($132) {
     $135 = $131;$x$146 = 0;
     while(1) {
      $133 = $x$146 << $128;
      $134 = $135 | $133;
      $136 = HEAP32[$3>>2]|0;
      $137 = HEAP32[$4>>2]|0;
      $138 = ($136>>>0)<($137>>>0);
      if ($138) {
       $139 = ((($136)) + 1|0);
       HEAP32[$3>>2] = $139;
       $140 = HEAP8[$136>>0]|0;
       $141 = $140&255;
       $c$4$be = $141;
      } else {
       $142 = (___shgetc($f)|0);
       $c$4$be = $142;
      }
      $$sum14 = (($c$4$be) + 1)|0;
      $143 = (3344 + ($$sum14)|0);
      $144 = HEAP8[$143>>0]|0;
      $145 = $144&255;
      $146 = ($145>>>0)<($$123>>>0);
      $147 = ($134>>>0)<(134217728);
      $148 = $147 & $146;
      if ($148) {
       $135 = $145;$x$146 = $134;
      } else {
       $$lcssa130 = $134;$$lcssa131 = $144;$c$4$be$lcssa = $c$4$be;
       break;
      }
     }
     $152 = $$lcssa131;$154 = 0;$156 = $$lcssa130;$c$4$lcssa = $c$4$be$lcssa;
    } else {
     $152 = $130;$154 = 0;$156 = 0;$c$4$lcssa = $c$124;
    }
    $149 = (_bitshift64Lshr(-1,-1,($128|0))|0);
    $150 = tempRet0;
    $151 = $152&255;
    $153 = ($151>>>0)>=($$123>>>0);
    $155 = ($154>>>0)>($150>>>0);
    $157 = ($156>>>0)>($149>>>0);
    $158 = ($154|0)==($150|0);
    $159 = $158 & $157;
    $160 = $155 | $159;
    $or$cond40 = $153 | $160;
    if ($or$cond40) {
     $$122 = $$123;$288 = $156;$289 = $154;$c$8 = $c$4$lcssa;
     label = 72;
     break;
    } else {
     $161 = $156;$162 = $154;$166 = $152;
    }
    while(1) {
     $163 = (_bitshift64Shl(($161|0),($162|0),($128|0))|0);
     $164 = tempRet0;
     $165 = $166&255;
     $167 = $165 | $163;
     $168 = HEAP32[$3>>2]|0;
     $169 = HEAP32[$4>>2]|0;
     $170 = ($168>>>0)<($169>>>0);
     if ($170) {
      $171 = ((($168)) + 1|0);
      HEAP32[$3>>2] = $171;
      $172 = HEAP8[$168>>0]|0;
      $173 = $172&255;
      $c$5$be = $173;
     } else {
      $174 = (___shgetc($f)|0);
      $c$5$be = $174;
     }
     $$sum15 = (($c$5$be) + 1)|0;
     $175 = (3344 + ($$sum15)|0);
     $176 = HEAP8[$175>>0]|0;
     $177 = $176&255;
     $178 = ($177>>>0)>=($$123>>>0);
     $179 = ($164>>>0)>($150>>>0);
     $180 = ($167>>>0)>($149>>>0);
     $181 = ($164|0)==($150|0);
     $182 = $181 & $180;
     $183 = $179 | $182;
     $or$cond = $178 | $183;
     if ($or$cond) {
      $$122 = $$123;$288 = $167;$289 = $164;$c$8 = $c$5$be;
      label = 72;
      break L69;
     } else {
      $161 = $167;$162 = $164;$166 = $176;
     }
    }
   }
   $$sum1865 = (($c$124) + 1)|0;
   $119 = (3344 + ($$sum1865)|0);
   $120 = HEAP8[$119>>0]|0;
   $121 = $120&255;
   $122 = ($121>>>0)<($$123>>>0);
   if ($122) {
    $186 = $121;$x$266 = 0;
    while(1) {
     $184 = Math_imul($x$266, $$123)|0;
     $185 = (($186) + ($184))|0;
     $187 = HEAP32[$3>>2]|0;
     $188 = HEAP32[$4>>2]|0;
     $189 = ($187>>>0)<($188>>>0);
     if ($189) {
      $190 = ((($187)) + 1|0);
      HEAP32[$3>>2] = $190;
      $191 = HEAP8[$187>>0]|0;
      $192 = $191&255;
      $c$6$be = $192;
     } else {
      $193 = (___shgetc($f)|0);
      $c$6$be = $193;
     }
     $$sum18 = (($c$6$be) + 1)|0;
     $194 = (3344 + ($$sum18)|0);
     $195 = HEAP8[$194>>0]|0;
     $196 = $195&255;
     $197 = ($196>>>0)<($$123>>>0);
     $198 = ($185>>>0)<(119304647);
     $199 = $198 & $197;
     if ($199) {
      $186 = $196;$x$266 = $185;
     } else {
      $$lcssa132 = $185;$$lcssa133 = $195;$c$6$be$lcssa = $c$6$be;
      break;
     }
    }
    $201 = $$lcssa133;$290 = $$lcssa132;$291 = 0;$c$6$lcssa = $c$6$be$lcssa;
   } else {
    $201 = $120;$290 = 0;$291 = 0;$c$6$lcssa = $c$124;
   }
   $200 = $201&255;
   $202 = ($200>>>0)<($$123>>>0);
   if ($202) {
    $203 = (___udivdi3(-1,-1,($$123|0),0)|0);
    $204 = tempRet0;
    $205 = $291;$207 = $290;$215 = $201;$c$753 = $c$6$lcssa;
    while(1) {
     $206 = ($205>>>0)>($204>>>0);
     $208 = ($207>>>0)>($203>>>0);
     $209 = ($205|0)==($204|0);
     $210 = $209 & $208;
     $211 = $206 | $210;
     if ($211) {
      $$122 = $$123;$288 = $207;$289 = $205;$c$8 = $c$753;
      label = 72;
      break L69;
     }
     $212 = (___muldi3(($207|0),($205|0),($$123|0),0)|0);
     $213 = tempRet0;
     $214 = $215&255;
     $216 = $214 ^ -1;
     $217 = ($213>>>0)>(4294967295);
     $218 = ($212>>>0)>($216>>>0);
     $219 = ($213|0)==(-1);
     $220 = $219 & $218;
     $221 = $217 | $220;
     if ($221) {
      $$122 = $$123;$288 = $207;$289 = $205;$c$8 = $c$753;
      label = 72;
      break L69;
     }
     $222 = (_i64Add(($214|0),0,($212|0),($213|0))|0);
     $223 = tempRet0;
     $224 = HEAP32[$3>>2]|0;
     $225 = HEAP32[$4>>2]|0;
     $226 = ($224>>>0)<($225>>>0);
     if ($226) {
      $227 = ((($224)) + 1|0);
      HEAP32[$3>>2] = $227;
      $228 = HEAP8[$224>>0]|0;
      $229 = $228&255;
      $c$7$be = $229;
     } else {
      $230 = (___shgetc($f)|0);
      $c$7$be = $230;
     }
     $$sum19 = (($c$7$be) + 1)|0;
     $231 = (3344 + ($$sum19)|0);
     $232 = HEAP8[$231>>0]|0;
     $233 = $232&255;
     $234 = ($233>>>0)<($$123>>>0);
     if ($234) {
      $205 = $223;$207 = $222;$215 = $232;$c$753 = $c$7$be;
     } else {
      $$122 = $$123;$288 = $222;$289 = $223;$c$8 = $c$7$be;
      label = 72;
      break;
     }
    }
   } else {
    $$122 = $$123;$288 = $290;$289 = $291;$c$8 = $c$6$lcssa;
    label = 72;
   }
  }
 } while(0);
 if ((label|0) == 72) {
  $$sum16 = (($c$8) + 1)|0;
  $235 = (3344 + ($$sum16)|0);
  $236 = HEAP8[$235>>0]|0;
  $237 = $236&255;
  $238 = ($237>>>0)<($$122>>>0);
  if ($238) {
   while(1) {
    $239 = HEAP32[$3>>2]|0;
    $240 = HEAP32[$4>>2]|0;
    $241 = ($239>>>0)<($240>>>0);
    if ($241) {
     $242 = ((($239)) + 1|0);
     HEAP32[$3>>2] = $242;
     $243 = HEAP8[$239>>0]|0;
     $244 = $243&255;
     $c$9$be = $244;
    } else {
     $245 = (___shgetc($f)|0);
     $c$9$be = $245;
    }
    $$sum17 = (($c$9$be) + 1)|0;
    $246 = (3344 + ($$sum17)|0);
    $247 = HEAP8[$246>>0]|0;
    $248 = $247&255;
    $249 = ($248>>>0)<($$122>>>0);
    if (!($249)) {
     break;
    }
   }
   $250 = (___errno_location()|0);
   HEAP32[$250>>2] = 34;
   $255 = $1;$257 = $0;
  } else {
   $255 = $289;$257 = $288;
  }
 }
 $251 = HEAP32[$4>>2]|0;
 $252 = ($251|0)==(0|0);
 if (!($252)) {
  $253 = HEAP32[$3>>2]|0;
  $254 = ((($253)) + -1|0);
  HEAP32[$3>>2] = $254;
 }
 $256 = ($255>>>0)<($1>>>0);
 $258 = ($257>>>0)<($0>>>0);
 $259 = ($255|0)==($1|0);
 $260 = $259 & $258;
 $261 = $256 | $260;
 if (!($261)) {
  $262 = $0 & 1;
  $263 = ($262|0)!=(0);
  $264 = (0)!=(0);
  $265 = $263 | $264;
  $266 = ($neg$0|0)!=(0);
  $or$cond12 = $265 | $266;
  if (!($or$cond12)) {
   $267 = (___errno_location()|0);
   HEAP32[$267>>2] = 34;
   $268 = (_i64Add(($0|0),($1|0),-1,-1)|0);
   $269 = tempRet0;
   $282 = $269;$283 = $268;
   tempRet0 = ($282);
   return ($283|0);
  }
  $270 = ($255>>>0)>($1>>>0);
  $271 = ($257>>>0)>($0>>>0);
  $272 = ($255|0)==($1|0);
  $273 = $272 & $271;
  $274 = $270 | $273;
  if ($274) {
   $275 = (___errno_location()|0);
   HEAP32[$275>>2] = 34;
   $282 = $1;$283 = $0;
   tempRet0 = ($282);
   return ($283|0);
  }
 }
 $276 = ($neg$0|0)<(0);
 $277 = $276 << 31 >> 31;
 $278 = $257 ^ $neg$0;
 $279 = $255 ^ $277;
 $280 = (_i64Subtract(($278|0),($279|0),($neg$0|0),($277|0))|0);
 $281 = tempRet0;
 $282 = $281;$283 = $280;
 tempRet0 = ($282);
 return ($283|0);
}
function ___floatscan($f,$prec,$pok) {
 $f = $f|0;
 $prec = $prec|0;
 $pok = $pok|0;
 var $$$i = 0, $$0 = 0.0, $$0$i25 = 0.0, $$010$i = 0, $$07$i = 0, $$0710$i = 0, $$0711$i = 0, $$09$i = 0, $$1$be$i = 0, $$1$ph$i = 0, $$11$i = 0, $$18$i = 0, $$2$i = 0, $$3$be$i = 0, $$3$lcssa$i = 0, $$3121$i = 0, $$in = 0, $$k$0$i = 0, $$lcssa = 0, $$lcssa288 = 0;
 var $$lcssa289 = 0, $$lcssa308 = 0, $$lcssa308$lcssa = 0, $$lcssa309 = 0, $$lcssa309$lcssa = 0, $$lcssa322 = 0, $$lcssa323 = 0, $$lcssa333 = 0, $$lcssa50$i = 0, $$lnz$0$i = 0, $$neg32$i = 0, $$not$i = 0, $$old8 = 0, $$pn$i = 0.0, $$pre$i = 0, $$pre$i17 = 0, $$pre$phi42$iZ2D = 0.0, $$pre41$i = 0.0, $$promoted = 0, $$promoted$i = 0;
 var $$promoted185 = 0, $$sink$off0$us$i = 0, $$sink$off0$us93$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0;
 var $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0;
 var $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0.0, $177 = 0.0, $178 = 0.0, $179 = 0.0, $18 = 0, $180 = 0, $181 = 0, $182 = 0.0, $183 = 0.0, $184 = 0, $185 = 0;
 var $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0;
 var $203 = 0.0, $204 = 0.0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0;
 var $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0;
 var $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0.0, $253 = 0.0, $254 = 0, $255 = 0, $256 = 0, $257 = 0;
 var $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0.0, $262 = 0.0, $263 = 0.0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0.0, $275 = 0.0;
 var $276 = 0.0, $277 = 0, $278 = 0, $279 = 0.0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0;
 var $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0.0, $304 = 0.0, $305 = 0.0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0;
 var $311 = 0.0, $312 = 0.0, $313 = 0.0, $314 = 0.0, $315 = 0.0, $316 = 0.0, $317 = 0, $318 = 0, $319 = 0.0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0;
 var $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0;
 var $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0;
 var $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0;
 var $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0;
 var $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0.0, $419 = 0.0;
 var $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0.0, $436 = 0.0, $437 = 0.0;
 var $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0.0, $448 = 0.0, $449 = 0.0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0;
 var $456 = 0, $457 = 0, $458 = 0, $459 = 0.0, $46 = 0, $460 = 0.0, $461 = 0.0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0.0;
 var $474 = 0, $475 = 0.0, $476 = 0.0, $477 = 0, $478 = 0.0, $479 = 0, $48 = 0.0, $480 = 0.0, $481 = 0.0, $482 = 0, $483 = 0, $484 = 0, $485 = 0.0, $486 = 0.0, $487 = 0, $488 = 0, $489 = 0, $49 = 0.0, $490 = 0, $491 = 0;
 var $492 = 0.0, $493 = 0.0, $494 = 0.0, $495 = 0, $496 = 0, $497 = 0, $498 = 0.0, $499 = 0.0, $5 = 0, $50 = 0.0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0;
 var $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0;
 var $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0;
 var $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0;
 var $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0;
 var $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0;
 var $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0;
 var $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0;
 var $636 = 0, $637 = 0.0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0.0, $643 = 0.0, $644 = 0.0, $645 = 0, $646 = 0.0, $647 = 0.0, $648 = 0.0, $649 = 0.0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0;
 var $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0.0, $661 = 0.0, $662 = 0.0, $663 = 0, $664 = 0.0, $665 = 0.0, $666 = 0, $667 = 0, $668 = 0, $669 = 0.0, $67 = 0, $670 = 0.0, $671 = 0.0;
 var $672 = 0.0, $673 = 0, $674 = 0, $675 = 0.0, $676 = 0, $677 = 0.0, $678 = 0.0, $679 = 0.0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0.0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0.0, $69 = 0;
 var $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0.0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0.0, $702 = 0, $703 = 0, $704 = 0.0, $705 = 0.0, $706 = 0, $707 = 0;
 var $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0;
 var $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0;
 var $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $a$0$lcssa177$i = 0, $a$0101$i = 0, $a$1$i = 0, $a$1$i$lcssa = 0, $a$2$ph38$i = 0, $a$3$i = 0;
 var $a$3$i$lcssa300 = 0, $a$3$i301 = 0, $a$3$ph$i = 0, $a$3$ph183$i = 0, $a$478$i = 0, $a$5$i = 0, $a$5$i$lcssa = 0, $a$5$i$lcssa$lcssa = 0, $bias$0$i = 0.0, $bias$0$i23 = 0.0, $bits$0$ph = 0, $brmerge = 0, $brmerge$i26 = 0, $brmerge187 = 0, $c$0 = 0, $c$0$i = 0, $c$1$lcssa = 0, $c$1$ph$i = 0, $c$185 = 0, $c$2 = 0;
 var $c$2$i = 0, $c$2$lcssa$i = 0, $c$4 = 0, $c$4$1 = 0, $c$6 = 0, $carry$0103$i = 0, $carry1$0$us$i = 0, $carry1$0$us89$i = 0, $carry1$1$lcssa$lcssa$i = 0, $carry1$1$us$i = 0, $carry1$1$us$i$lcssa = 0, $carry1$1$us94$i = 0, $carry1$1$us94$i$lcssa = 0, $carry3$081$i = 0, $cond$i = 0, $d$0$i = 0, $denormal$0$i = 0, $denormal$1$i = 0, $denormal$2$i = 0, $e2$0$ph$i = 0;
 var $e2$0$us$i = 0, $e2$0$us84$i = 0, $e2$1$i = 0, $e2$1$i298 = 0, $e2$1$ph$i = 0, $e2$1$ph182$i = 0, $e2$2$i = 0, $e2$3$i = 0, $emin$0$ph = 0, $exitcond$i = 0, $frac$0$i = 0.0, $frac$1$i = 0.0, $frac$2$i = 0.0, $gotdig$0$i = 0, $gotdig$0$i$lcssa294 = 0, $gotdig$0$i12 = 0, $gotdig$0$i12$lcssa331 = 0, $gotdig$2$i = 0, $gotdig$2$i$lcssa = 0, $gotdig$2$i13 = 0;
 var $gotdig$3$i = 0, $gotdig$3$lcssa$i = 0, $gotdig$3117$i = 0, $gotdig$3117$i$lcssa = 0, $gotdig$4$i = 0, $gotrad$0$i = 0, $gotrad$0$i$lcssa = 0, $gotrad$0$i14 = 0, $gotrad$1$i = 0, $gotrad$1$lcssa$i = 0, $gotrad$1118$i = 0, $gotrad$2$i = 0, $gottail$0$i = 0, $gottail$1$i = 0, $gottail$2$i = 0, $i$0$lcssa = 0, $i$084 = 0, $i$1 = 0, $i$4 = 0, $i$4$lcssa = 0;
 var $j$0$lcssa$i = 0, $j$0120$i = 0, $j$0120$i$lcssa = 0, $j$067$i = 0, $j$068$i = 0, $j$069$i = 0, $j$2$i = 0, $j$3110$i = 0, $k$0$lcssa$i = 0, $k$0119$i = 0, $k$0119$i$lcssa = 0, $k$063$i = 0, $k$064$i = 0, $k$065$i = 0, $k$2$i = 0, $k$3$i = 0, $k$4102$i = 0, $k$5$in$us$i = 0, $k$5$in$us88$i = 0, $k$5$us$i = 0;
 var $k$5$us90$i = 0, $k$5$z$2$us$i = 0, $k$5$z$2$us96$i = 0, $k$679$i = 0, $lnz$0$lcssa$i = 0, $lnz$0116$i = 0, $lnz$0116$i$lcssa = 0, $lnz$057$i = 0, $lnz$058$i = 0, $lnz$059$i = 0, $lnz$2$i = 0, $notlhs = 0, $notrhs = 0, $or$cond = 0, $or$cond$i = 0, $or$cond$i16 = 0, $or$cond13$i = 0, $or$cond15$i = 0, $or$cond16$i = 0, $or$cond17$us$i = 0;
 var $or$cond17$us95$i = 0, $or$cond19$i = 0, $or$cond20$i = 0, $or$cond216$i = 0, $or$cond3$i = 0, $or$cond4$i = 0, $or$cond5 = 0, $or$cond6$i = 0, $or$cond7 = 0, $or$cond8$i = 0, $or$cond9$i = 0, $or$cond9$not = 0, $rp$0$lcssa178$i = 0, $rp$0100$i = 0, $rp$1$i18 = 0, $rp$1$i18$lcssa = 0, $rp$2$ph36$i = 0, $rp$3$ph$i = 0, $rp$3$ph34$i = 0, $rp$477$i = 0;
 var $rp$5$i = 0, $rp$5$i$lcssa = 0, $rp$5$i$lcssa$lcssa = 0, $scale$0$i = 0.0, $scale$1$i = 0.0, $scale$2$i = 0.0, $sign$0 = 0, $storemerge$i = 0, $sum$i = 0, $x$0$i = 0, $x$0$i$lcssa = 0, $x$1$i = 0, $x$2$i = 0, $x$3$lcssa$i = 0, $x$324$i = 0, $x$4$lcssa$i = 0, $x$419$i = 0, $x$5$i = 0, $x$6$i = 0, $x$i = 0;
 var $y$0$i = 0.0, $y$0$i$lcssa = 0.0, $y$1$i = 0.0, $y$1$i22 = 0.0, $y$2$i = 0.0, $y$2$i24 = 0.0, $y$3$i = 0.0, $y$3$lcssa$i = 0.0, $y$320$i = 0.0, $y$4$i = 0.0, $y$5$i = 0.0, $z$0$i = 0, $z$1$ph37$i = 0, $z$1$us$i = 0, $z$1$us85$i = 0, $z$2$us$i = 0, $z$2$us87$i = 0, $z$3$lcssa$lcssa$i = 0, $z$3$us$i = 0, $z$3$us$i$lcssa = 0;
 var $z$3$us97$i = 0, $z$3$us97$i$lcssa = 0, $z$4$i = 0, $z$5$ph$i = 0, $z$7$1$i = 0, $z$7$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $x$i = sp;
 if ((($prec|0) == 2)) {
  $bits$0$ph = 53;$emin$0$ph = -1074;
 } else if ((($prec|0) == 0)) {
  $bits$0$ph = 24;$emin$0$ph = -149;
 } else if ((($prec|0) == 1)) {
  $bits$0$ph = 53;$emin$0$ph = -1074;
 } else {
  $$0 = 0.0;
  STACKTOP = sp;return (+$$0);
 }
 $0 = ((($f)) + 4|0);
 $1 = ((($f)) + 100|0);
 while(1) {
  $2 = HEAP32[$0>>2]|0;
  $3 = HEAP32[$1>>2]|0;
  $4 = ($2>>>0)<($3>>>0);
  if ($4) {
   $5 = ((($2)) + 1|0);
   HEAP32[$0>>2] = $5;
   $6 = HEAP8[$2>>0]|0;
   $7 = $6&255;
   $9 = $7;
  } else {
   $8 = (___shgetc($f)|0);
   $9 = $8;
  }
  $10 = (_isspace($9)|0);
  $11 = ($10|0)==(0);
  if ($11) {
   $$lcssa333 = $9;
   break;
  }
 }
 $12 = ($$lcssa333|0)==(45);
 do {
  if ((($$lcssa333|0) == 43) | (($$lcssa333|0) == 45)) {
   $13 = $12&1;
   $14 = $13 << 1;
   $15 = (1 - ($14))|0;
   $16 = HEAP32[$0>>2]|0;
   $17 = HEAP32[$1>>2]|0;
   $18 = ($16>>>0)<($17>>>0);
   if ($18) {
    $19 = ((($16)) + 1|0);
    HEAP32[$0>>2] = $19;
    $20 = HEAP8[$16>>0]|0;
    $21 = $20&255;
    $c$0 = $21;$sign$0 = $15;
    break;
   } else {
    $22 = (___shgetc($f)|0);
    $c$0 = $22;$sign$0 = $15;
    break;
   }
  } else {
   $c$0 = $$lcssa333;$sign$0 = 1;
  }
 } while(0);
 $c$185 = $c$0;$i$084 = 0;
 while(1) {
  $23 = $c$185 | 32;
  $24 = (3624 + ($i$084)|0);
  $25 = HEAP8[$24>>0]|0;
  $26 = $25 << 24 >> 24;
  $27 = ($23|0)==($26|0);
  if (!($27)) {
   $c$1$lcssa = $c$185;$i$0$lcssa = $i$084;
   break;
  }
  $28 = ($i$084>>>0)<(7);
  do {
   if ($28) {
    $29 = HEAP32[$0>>2]|0;
    $30 = HEAP32[$1>>2]|0;
    $31 = ($29>>>0)<($30>>>0);
    if ($31) {
     $32 = ((($29)) + 1|0);
     HEAP32[$0>>2] = $32;
     $33 = HEAP8[$29>>0]|0;
     $34 = $33&255;
     $c$2 = $34;
     break;
    } else {
     $35 = (___shgetc($f)|0);
     $c$2 = $35;
     break;
    }
   } else {
    $c$2 = $c$185;
   }
  } while(0);
  $36 = (($i$084) + 1)|0;
  $37 = ($36>>>0)<(8);
  if ($37) {
   $c$185 = $c$2;$i$084 = $36;
  } else {
   $c$1$lcssa = $c$2;$i$0$lcssa = $36;
   break;
  }
 }
 do {
  if ((($i$0$lcssa|0) == 3)) {
   label = 23;
  } else if (!((($i$0$lcssa|0) == 8))) {
   $38 = ($i$0$lcssa>>>0)>(3);
   $39 = ($pok|0)!=(0);
   $or$cond5 = $39 & $38;
   if ($or$cond5) {
    $40 = ($i$0$lcssa|0)==(8);
    if ($40) {
     break;
    } else {
     label = 23;
     break;
    }
   }
   $51 = ($i$0$lcssa|0)==(0);
   do {
    if ($51) {
     $52 = $c$1$lcssa | 32;
     $53 = ($52|0)==(110);
     if ($53) {
      $54 = HEAP32[$0>>2]|0;
      $55 = HEAP32[$1>>2]|0;
      $56 = ($54>>>0)<($55>>>0);
      if ($56) {
       $57 = ((($54)) + 1|0);
       HEAP32[$0>>2] = $57;
       $58 = HEAP8[$54>>0]|0;
       $59 = $58&255;
       $c$4 = $59;
      } else {
       $60 = (___shgetc($f)|0);
       $c$4 = $60;
      }
      $61 = $c$4 | 32;
      $62 = ($61|0)==(97);
      if (!($62)) {
       break;
      }
      $712 = HEAP32[$0>>2]|0;
      $713 = HEAP32[$1>>2]|0;
      $714 = ($712>>>0)<($713>>>0);
      if ($714) {
       $716 = ((($712)) + 1|0);
       HEAP32[$0>>2] = $716;
       $717 = HEAP8[$712>>0]|0;
       $718 = $717&255;
       $c$4$1 = $718;
      } else {
       $715 = (___shgetc($f)|0);
       $c$4$1 = $715;
      }
      $719 = $c$4$1 | 32;
      $720 = ($719|0)==(110);
      if (!($720)) {
       break;
      }
      $63 = HEAP32[$0>>2]|0;
      $64 = HEAP32[$1>>2]|0;
      $65 = ($63>>>0)<($64>>>0);
      if ($65) {
       $66 = ((($63)) + 1|0);
       HEAP32[$0>>2] = $66;
       $67 = HEAP8[$63>>0]|0;
       $68 = $67&255;
       $70 = $68;
      } else {
       $69 = (___shgetc($f)|0);
       $70 = $69;
      }
      $71 = ($70|0)==(40);
      if ($71) {
       $i$4 = 1;
      } else {
       $72 = HEAP32[$1>>2]|0;
       $73 = ($72|0)==(0|0);
       if ($73) {
        $$0 = nan;
        STACKTOP = sp;return (+$$0);
       }
       $74 = HEAP32[$0>>2]|0;
       $75 = ((($74)) + -1|0);
       HEAP32[$0>>2] = $75;
       $$0 = nan;
       STACKTOP = sp;return (+$$0);
      }
      while(1) {
       $76 = HEAP32[$0>>2]|0;
       $77 = HEAP32[$1>>2]|0;
       $78 = ($76>>>0)<($77>>>0);
       if ($78) {
        $79 = ((($76)) + 1|0);
        HEAP32[$0>>2] = $79;
        $80 = HEAP8[$76>>0]|0;
        $81 = $80&255;
        $84 = $81;
       } else {
        $82 = (___shgetc($f)|0);
        $84 = $82;
       }
       $83 = (($84) + -48)|0;
       $85 = ($83>>>0)<(10);
       $86 = (($84) + -65)|0;
       $87 = ($86>>>0)<(26);
       $or$cond = $85 | $87;
       if (!($or$cond)) {
        $88 = (($84) + -97)|0;
        $89 = ($88>>>0)<(26);
        $90 = ($84|0)==(95);
        $or$cond7 = $90 | $89;
        if (!($or$cond7)) {
         $$lcssa289 = $84;$i$4$lcssa = $i$4;
         break;
        }
       }
       $102 = (($i$4) + 1)|0;
       $i$4 = $102;
      }
      $91 = ($$lcssa289|0)==(41);
      if ($91) {
       $$0 = nan;
       STACKTOP = sp;return (+$$0);
      }
      $92 = HEAP32[$1>>2]|0;
      $93 = ($92|0)==(0|0);
      if (!($93)) {
       $94 = HEAP32[$0>>2]|0;
       $95 = ((($94)) + -1|0);
       HEAP32[$0>>2] = $95;
      }
      if (!($39)) {
       $97 = (___errno_location()|0);
       HEAP32[$97>>2] = 22;
       ___shlim($f,0);
       $$0 = 0.0;
       STACKTOP = sp;return (+$$0);
      }
      $96 = ($i$4$lcssa|0)==(0);
      $brmerge187 = $96 | $93;
      if ($brmerge187) {
       $$0 = nan;
       STACKTOP = sp;return (+$$0);
      }
      $$promoted185 = HEAP32[$0>>2]|0;
      $$in = $i$4$lcssa;$100 = $$promoted185;
      while(1) {
       $98 = (($$in) + -1)|0;
       $99 = ((($100)) + -1|0);
       $101 = ($98|0)==(0);
       if ($101) {
        $$lcssa288 = $99;
        break;
       } else {
        $$in = $98;$100 = $99;
       }
      }
      HEAP32[$0>>2] = $$lcssa288;
      $$0 = nan;
      STACKTOP = sp;return (+$$0);
     }
     $108 = ($c$1$lcssa|0)==(48);
     do {
      if ($108) {
       $109 = HEAP32[$0>>2]|0;
       $110 = HEAP32[$1>>2]|0;
       $111 = ($109>>>0)<($110>>>0);
       if ($111) {
        $112 = ((($109)) + 1|0);
        HEAP32[$0>>2] = $112;
        $113 = HEAP8[$109>>0]|0;
        $114 = $113&255;
        $117 = $114;
       } else {
        $115 = (___shgetc($f)|0);
        $117 = $115;
       }
       $116 = $117 | 32;
       $118 = ($116|0)==(120);
       if (!($118)) {
        $320 = HEAP32[$1>>2]|0;
        $321 = ($320|0)==(0|0);
        if ($321) {
         $c$6 = 48;
         break;
        }
        $322 = HEAP32[$0>>2]|0;
        $323 = ((($322)) + -1|0);
        HEAP32[$0>>2] = $323;
        $c$6 = 48;
        break;
       }
       $119 = HEAP32[$0>>2]|0;
       $120 = HEAP32[$1>>2]|0;
       $121 = ($119>>>0)<($120>>>0);
       if ($121) {
        $122 = ((($119)) + 1|0);
        HEAP32[$0>>2] = $122;
        $123 = HEAP8[$119>>0]|0;
        $124 = $123&255;
        $c$0$i = $124;$gotdig$0$i = 0;
       } else {
        $125 = (___shgetc($f)|0);
        $c$0$i = $125;$gotdig$0$i = 0;
       }
       while(1) {
        if ((($c$0$i|0) == 46)) {
         $gotdig$0$i$lcssa294 = $gotdig$0$i;
         label = 71;
         break;
        } else if (!((($c$0$i|0) == 48))) {
         $162 = 0;$164 = 0;$721 = 0;$722 = 0;$c$2$i = $c$0$i;$gotdig$2$i = $gotdig$0$i;$gotrad$0$i = 0;$gottail$0$i = 0;$scale$0$i = 1.0;$x$0$i = 0;$y$0$i = 0.0;
         break;
        }
        $126 = HEAP32[$0>>2]|0;
        $127 = HEAP32[$1>>2]|0;
        $128 = ($126>>>0)<($127>>>0);
        if ($128) {
         $129 = ((($126)) + 1|0);
         HEAP32[$0>>2] = $129;
         $130 = HEAP8[$126>>0]|0;
         $131 = $130&255;
         $c$0$i = $131;$gotdig$0$i = 1;
         continue;
        } else {
         $132 = (___shgetc($f)|0);
         $c$0$i = $132;$gotdig$0$i = 1;
         continue;
        }
       }
       if ((label|0) == 71) {
        $133 = HEAP32[$0>>2]|0;
        $134 = HEAP32[$1>>2]|0;
        $135 = ($133>>>0)<($134>>>0);
        if ($135) {
         $136 = ((($133)) + 1|0);
         HEAP32[$0>>2] = $136;
         $137 = HEAP8[$133>>0]|0;
         $138 = $137&255;
         $c$1$ph$i = $138;
        } else {
         $139 = (___shgetc($f)|0);
         $c$1$ph$i = $139;
        }
        $140 = ($c$1$ph$i|0)==(48);
        if ($140) {
         $148 = 0;$149 = 0;
         while(1) {
          $141 = HEAP32[$0>>2]|0;
          $142 = HEAP32[$1>>2]|0;
          $143 = ($141>>>0)<($142>>>0);
          if ($143) {
           $144 = ((($141)) + 1|0);
           HEAP32[$0>>2] = $144;
           $145 = HEAP8[$141>>0]|0;
           $146 = $145&255;
           $152 = $146;
          } else {
           $147 = (___shgetc($f)|0);
           $152 = $147;
          }
          $150 = (_i64Add(($148|0),($149|0),-1,-1)|0);
          $151 = tempRet0;
          $153 = ($152|0)==(48);
          if ($153) {
           $148 = $150;$149 = $151;
          } else {
           $162 = 0;$164 = 0;$721 = $150;$722 = $151;$c$2$i = $152;$gotdig$2$i = 1;$gotrad$0$i = 1;$gottail$0$i = 0;$scale$0$i = 1.0;$x$0$i = 0;$y$0$i = 0.0;
           break;
          }
         }
        } else {
         $162 = 0;$164 = 0;$721 = 0;$722 = 0;$c$2$i = $c$1$ph$i;$gotdig$2$i = $gotdig$0$i$lcssa294;$gotrad$0$i = 1;$gottail$0$i = 0;$scale$0$i = 1.0;$x$0$i = 0;$y$0$i = 0.0;
        }
       }
       while(1) {
        $154 = (($c$2$i) + -48)|0;
        $155 = ($154>>>0)<(10);
        $$pre$i = $c$2$i | 32;
        if ($155) {
         label = 83;
        } else {
         $156 = (($$pre$i) + -97)|0;
         $157 = ($156>>>0)<(6);
         $158 = ($c$2$i|0)==(46);
         $or$cond6$i = $158 | $157;
         if (!($or$cond6$i)) {
          $206 = $721;$207 = $164;$209 = $722;$210 = $162;$c$2$lcssa$i = $c$2$i;$gotdig$2$i$lcssa = $gotdig$2$i;$gotrad$0$i$lcssa = $gotrad$0$i;$x$0$i$lcssa = $x$0$i;$y$0$i$lcssa = $y$0$i;
          break;
         }
         if ($158) {
          $159 = ($gotrad$0$i|0)==(0);
          if ($159) {
           $723 = $164;$724 = $162;$725 = $164;$726 = $162;$gotdig$3$i = $gotdig$2$i;$gotrad$1$i = 1;$gottail$2$i = $gottail$0$i;$scale$2$i = $scale$0$i;$x$2$i = $x$0$i;$y$2$i = $y$0$i;
          } else {
           $206 = $721;$207 = $164;$209 = $722;$210 = $162;$c$2$lcssa$i = 46;$gotdig$2$i$lcssa = $gotdig$2$i;$gotrad$0$i$lcssa = $gotrad$0$i;$x$0$i$lcssa = $x$0$i;$y$0$i$lcssa = $y$0$i;
           break;
          }
         } else {
          label = 83;
         }
        }
        if ((label|0) == 83) {
         label = 0;
         $160 = ($c$2$i|0)>(57);
         $161 = (($$pre$i) + -87)|0;
         $d$0$i = $160 ? $161 : $154;
         $163 = ($162|0)<(0);
         $165 = ($164>>>0)<(8);
         $166 = ($162|0)==(0);
         $167 = $166 & $165;
         $168 = $163 | $167;
         do {
          if ($168) {
           $169 = $x$0$i << 4;
           $170 = (($d$0$i) + ($169))|0;
           $gottail$1$i = $gottail$0$i;$scale$1$i = $scale$0$i;$x$1$i = $170;$y$1$i = $y$0$i;
          } else {
           $171 = ($162|0)<(0);
           $172 = ($164>>>0)<(14);
           $173 = ($162|0)==(0);
           $174 = $173 & $172;
           $175 = $171 | $174;
           if ($175) {
            $176 = (+($d$0$i|0));
            $177 = $scale$0$i * 0.0625;
            $178 = $177 * $176;
            $179 = $y$0$i + $178;
            $gottail$1$i = $gottail$0$i;$scale$1$i = $177;$x$1$i = $x$0$i;$y$1$i = $179;
            break;
           }
           $180 = ($d$0$i|0)==(0);
           $181 = ($gottail$0$i|0)!=(0);
           $or$cond$i = $181 | $180;
           if ($or$cond$i) {
            $gottail$1$i = $gottail$0$i;$scale$1$i = $scale$0$i;$x$1$i = $x$0$i;$y$1$i = $y$0$i;
           } else {
            $182 = $scale$0$i * 0.5;
            $183 = $y$0$i + $182;
            $gottail$1$i = 1;$scale$1$i = $scale$0$i;$x$1$i = $x$0$i;$y$1$i = $183;
           }
          }
         } while(0);
         $184 = (_i64Add(($164|0),($162|0),1,0)|0);
         $185 = tempRet0;
         $723 = $721;$724 = $722;$725 = $184;$726 = $185;$gotdig$3$i = 1;$gotrad$1$i = $gotrad$0$i;$gottail$2$i = $gottail$1$i;$scale$2$i = $scale$1$i;$x$2$i = $x$1$i;$y$2$i = $y$1$i;
        }
        $186 = HEAP32[$0>>2]|0;
        $187 = HEAP32[$1>>2]|0;
        $188 = ($186>>>0)<($187>>>0);
        if ($188) {
         $189 = ((($186)) + 1|0);
         HEAP32[$0>>2] = $189;
         $190 = HEAP8[$186>>0]|0;
         $191 = $190&255;
         $162 = $726;$164 = $725;$721 = $723;$722 = $724;$c$2$i = $191;$gotdig$2$i = $gotdig$3$i;$gotrad$0$i = $gotrad$1$i;$gottail$0$i = $gottail$2$i;$scale$0$i = $scale$2$i;$x$0$i = $x$2$i;$y$0$i = $y$2$i;
         continue;
        } else {
         $192 = (___shgetc($f)|0);
         $162 = $726;$164 = $725;$721 = $723;$722 = $724;$c$2$i = $192;$gotdig$2$i = $gotdig$3$i;$gotrad$0$i = $gotrad$1$i;$gottail$0$i = $gottail$2$i;$scale$0$i = $scale$2$i;$x$0$i = $x$2$i;$y$0$i = $y$2$i;
         continue;
        }
       }
       $193 = ($gotdig$2$i$lcssa|0)==(0);
       if ($193) {
        $194 = HEAP32[$1>>2]|0;
        $195 = ($194|0)==(0|0);
        if (!($195)) {
         $196 = HEAP32[$0>>2]|0;
         $197 = ((($196)) + -1|0);
         HEAP32[$0>>2] = $197;
        }
        $198 = ($pok|0)==(0);
        if ($198) {
         ___shlim($f,0);
        } else {
         if (!($195)) {
          $199 = HEAP32[$0>>2]|0;
          $200 = ((($199)) + -1|0);
          HEAP32[$0>>2] = $200;
          $201 = ($gotrad$0$i$lcssa|0)==(0);
          if (!($201)) {
           $202 = ((($199)) + -2|0);
           HEAP32[$0>>2] = $202;
          }
         }
        }
        $203 = (+($sign$0|0));
        $204 = $203 * 0.0;
        $$0 = $204;
        STACKTOP = sp;return (+$$0);
       }
       $205 = ($gotrad$0$i$lcssa|0)==(0);
       $208 = $205 ? $207 : $206;
       $211 = $205 ? $210 : $209;
       $212 = ($210|0)<(0);
       $213 = ($207>>>0)<(8);
       $214 = ($210|0)==(0);
       $215 = $214 & $213;
       $216 = $212 | $215;
       if ($216) {
        $218 = $207;$219 = $210;$x$324$i = $x$0$i$lcssa;
        while(1) {
         $217 = $x$324$i << 4;
         $220 = (_i64Add(($218|0),($219|0),1,0)|0);
         $221 = tempRet0;
         $222 = ($221|0)<(0);
         $223 = ($220>>>0)<(8);
         $224 = ($221|0)==(0);
         $225 = $224 & $223;
         $226 = $222 | $225;
         if ($226) {
          $218 = $220;$219 = $221;$x$324$i = $217;
         } else {
          $x$3$lcssa$i = $217;
          break;
         }
        }
       } else {
        $x$3$lcssa$i = $x$0$i$lcssa;
       }
       $227 = $c$2$lcssa$i | 32;
       $228 = ($227|0)==(112);
       do {
        if ($228) {
         $229 = (_scanexp($f,$pok)|0);
         $230 = tempRet0;
         $231 = ($229|0)==(0);
         $232 = ($230|0)==(-2147483648);
         $233 = $231 & $232;
         if ($233) {
          $234 = ($pok|0)==(0);
          if ($234) {
           ___shlim($f,0);
           $$0 = 0.0;
           STACKTOP = sp;return (+$$0);
          } else {
           $235 = HEAP32[$1>>2]|0;
           $236 = ($235|0)==(0|0);
           if ($236) {
            $247 = 0;$248 = 0;
            break;
           }
           $237 = HEAP32[$0>>2]|0;
           $238 = ((($237)) + -1|0);
           HEAP32[$0>>2] = $238;
           $247 = 0;$248 = 0;
           break;
          }
         } else {
          $247 = $229;$248 = $230;
         }
        } else {
         $239 = HEAP32[$1>>2]|0;
         $240 = ($239|0)==(0|0);
         if ($240) {
          $247 = 0;$248 = 0;
         } else {
          $241 = HEAP32[$0>>2]|0;
          $242 = ((($241)) + -1|0);
          HEAP32[$0>>2] = $242;
          $247 = 0;$248 = 0;
         }
        }
       } while(0);
       $243 = (_bitshift64Shl(($208|0),($211|0),2)|0);
       $244 = tempRet0;
       $245 = (_i64Add(($243|0),($244|0),-32,-1)|0);
       $246 = tempRet0;
       $249 = (_i64Add(($245|0),($246|0),($247|0),($248|0))|0);
       $250 = tempRet0;
       $251 = ($x$3$lcssa$i|0)==(0);
       if ($251) {
        $252 = (+($sign$0|0));
        $253 = $252 * 0.0;
        $$0 = $253;
        STACKTOP = sp;return (+$$0);
       }
       $254 = (0 - ($emin$0$ph))|0;
       $255 = ($250|0)>(0);
       $256 = ($249>>>0)>($254>>>0);
       $257 = ($250|0)==(0);
       $258 = $257 & $256;
       $259 = $255 | $258;
       if ($259) {
        $260 = (___errno_location()|0);
        HEAP32[$260>>2] = 34;
        $261 = (+($sign$0|0));
        $262 = $261 * 1.7976931348623157E+308;
        $263 = $262 * 1.7976931348623157E+308;
        $$0 = $263;
        STACKTOP = sp;return (+$$0);
       }
       $264 = (($emin$0$ph) + -106)|0;
       $265 = ($264|0)<(0);
       $266 = $265 << 31 >> 31;
       $267 = ($250|0)<($266|0);
       $268 = ($249>>>0)<($264>>>0);
       $269 = ($250|0)==($266|0);
       $270 = $269 & $268;
       $271 = $267 | $270;
       if ($271) {
        $273 = (___errno_location()|0);
        HEAP32[$273>>2] = 34;
        $274 = (+($sign$0|0));
        $275 = $274 * 2.2250738585072014E-308;
        $276 = $275 * 2.2250738585072014E-308;
        $$0 = $276;
        STACKTOP = sp;return (+$$0);
       }
       $272 = ($x$3$lcssa$i|0)>(-1);
       if ($272) {
        $282 = $249;$283 = $250;$x$419$i = $x$3$lcssa$i;$y$320$i = $y$0$i$lcssa;
        while(1) {
         $277 = !($y$320$i >= 0.5);
         $278 = $x$419$i << 1;
         $279 = $y$320$i + -1.0;
         $280 = $277&1;
         $281 = $280 | $278;
         $x$5$i = $281 ^ 1;
         $$pn$i = $277 ? $y$320$i : $279;
         $y$4$i = $y$320$i + $$pn$i;
         $284 = (_i64Add(($282|0),($283|0),-1,-1)|0);
         $285 = tempRet0;
         $286 = ($281|0)>(-1);
         if ($286) {
          $282 = $284;$283 = $285;$x$419$i = $x$5$i;$y$320$i = $y$4$i;
         } else {
          $291 = $284;$292 = $285;$x$4$lcssa$i = $x$5$i;$y$3$lcssa$i = $y$4$i;
          break;
         }
        }
       } else {
        $291 = $249;$292 = $250;$x$4$lcssa$i = $x$3$lcssa$i;$y$3$lcssa$i = $y$0$i$lcssa;
       }
       $287 = ($emin$0$ph|0)<(0);
       $288 = $287 << 31 >> 31;
       $289 = (_i64Subtract(32,0,($emin$0$ph|0),($288|0))|0);
       $290 = tempRet0;
       $293 = (_i64Add(($291|0),($292|0),($289|0),($290|0))|0);
       $294 = tempRet0;
       $295 = (0)>($294|0);
       $296 = ($bits$0$ph>>>0)>($293>>>0);
       $297 = (0)==($294|0);
       $298 = $297 & $296;
       $299 = $295 | $298;
       if ($299) {
        $300 = ($293|0)<(0);
        if ($300) {
         $$0710$i = 0;
         label = 124;
        } else {
         $$07$i = $293;
         label = 122;
        }
       } else {
        $$07$i = $bits$0$ph;
        label = 122;
       }
       do {
        if ((label|0) == 122) {
         $301 = ($$07$i|0)<(53);
         if ($301) {
          $$0710$i = $$07$i;
          label = 124;
          break;
         }
         $$pre41$i = (+($sign$0|0));
         $$0711$i = $$07$i;$$pre$phi42$iZ2D = $$pre41$i;$bias$0$i = 0.0;
        }
       } while(0);
       if ((label|0) == 124) {
        $302 = (84 - ($$0710$i))|0;
        $303 = (+_scalbn(1.0,$302));
        $304 = (+($sign$0|0));
        $305 = (+_copysignl($303,$304));
        $$0711$i = $$0710$i;$$pre$phi42$iZ2D = $304;$bias$0$i = $305;
       }
       $306 = ($$0711$i|0)<(32);
       $307 = $y$3$lcssa$i != 0.0;
       $or$cond4$i = $307 & $306;
       $308 = $x$4$lcssa$i & 1;
       $309 = ($308|0)==(0);
       $or$cond9$i = $309 & $or$cond4$i;
       $310 = $or$cond9$i&1;
       $x$6$i = (($310) + ($x$4$lcssa$i))|0;
       $y$5$i = $or$cond9$i ? 0.0 : $y$3$lcssa$i;
       $311 = (+($x$6$i>>>0));
       $312 = $$pre$phi42$iZ2D * $311;
       $313 = $bias$0$i + $312;
       $314 = $$pre$phi42$iZ2D * $y$5$i;
       $315 = $314 + $313;
       $316 = $315 - $bias$0$i;
       $317 = $316 != 0.0;
       if (!($317)) {
        $318 = (___errno_location()|0);
        HEAP32[$318>>2] = 34;
       }
       $319 = (+_scalbnl($316,$291));
       $$0 = $319;
       STACKTOP = sp;return (+$$0);
      } else {
       $c$6 = $c$1$lcssa;
      }
     } while(0);
     $sum$i = (($emin$0$ph) + ($bits$0$ph))|0;
     $324 = (0 - ($sum$i))|0;
     $$09$i = $c$6;$gotdig$0$i12 = 0;
     while(1) {
      if ((($$09$i|0) == 46)) {
       $gotdig$0$i12$lcssa331 = $gotdig$0$i12;
       label = 135;
       break;
      } else if (!((($$09$i|0) == 48))) {
       $$2$i = $$09$i;$727 = 0;$728 = 0;$gotdig$2$i13 = $gotdig$0$i12;$gotrad$0$i14 = 0;
       break;
      }
      $325 = HEAP32[$0>>2]|0;
      $326 = HEAP32[$1>>2]|0;
      $327 = ($325>>>0)<($326>>>0);
      if ($327) {
       $328 = ((($325)) + 1|0);
       HEAP32[$0>>2] = $328;
       $329 = HEAP8[$325>>0]|0;
       $330 = $329&255;
       $$09$i = $330;$gotdig$0$i12 = 1;
       continue;
      } else {
       $331 = (___shgetc($f)|0);
       $$09$i = $331;$gotdig$0$i12 = 1;
       continue;
      }
     }
     if ((label|0) == 135) {
      $332 = HEAP32[$0>>2]|0;
      $333 = HEAP32[$1>>2]|0;
      $334 = ($332>>>0)<($333>>>0);
      if ($334) {
       $335 = ((($332)) + 1|0);
       HEAP32[$0>>2] = $335;
       $336 = HEAP8[$332>>0]|0;
       $337 = $336&255;
       $$1$ph$i = $337;
      } else {
       $338 = (___shgetc($f)|0);
       $$1$ph$i = $338;
      }
      $339 = ($$1$ph$i|0)==(48);
      if ($339) {
       $340 = 0;$341 = 0;
       while(1) {
        $342 = (_i64Add(($340|0),($341|0),-1,-1)|0);
        $343 = tempRet0;
        $344 = HEAP32[$0>>2]|0;
        $345 = HEAP32[$1>>2]|0;
        $346 = ($344>>>0)<($345>>>0);
        if ($346) {
         $347 = ((($344)) + 1|0);
         HEAP32[$0>>2] = $347;
         $348 = HEAP8[$344>>0]|0;
         $349 = $348&255;
         $$1$be$i = $349;
        } else {
         $350 = (___shgetc($f)|0);
         $$1$be$i = $350;
        }
        $351 = ($$1$be$i|0)==(48);
        if ($351) {
         $340 = $342;$341 = $343;
        } else {
         $$2$i = $$1$be$i;$727 = $342;$728 = $343;$gotdig$2$i13 = 1;$gotrad$0$i14 = 1;
         break;
        }
       }
      } else {
       $$2$i = $$1$ph$i;$727 = 0;$728 = 0;$gotdig$2$i13 = $gotdig$0$i12$lcssa331;$gotrad$0$i14 = 1;
      }
     }
     HEAP32[$x$i>>2] = 0;
     $352 = (($$2$i) + -48)|0;
     $353 = ($352>>>0)<(10);
     $354 = ($$2$i|0)==(46);
     $355 = $354 | $353;
     L214: do {
      if ($355) {
       $356 = ((($x$i)) + 496|0);
       $$3121$i = $$2$i;$359 = 0;$360 = 0;$729 = $354;$730 = $352;$731 = $727;$732 = $728;$gotdig$3117$i = $gotdig$2$i13;$gotrad$1118$i = $gotrad$0$i14;$j$0120$i = 0;$k$0119$i = 0;$lnz$0116$i = 0;
       L216: while(1) {
        do {
         if ($729) {
          $cond$i = ($gotrad$1118$i|0)==(0);
          if ($cond$i) {
           $733 = $359;$734 = $360;$735 = $359;$736 = $360;$gotdig$4$i = $gotdig$3117$i;$gotrad$2$i = 1;$j$2$i = $j$0120$i;$k$2$i = $k$0119$i;$lnz$2$i = $lnz$0116$i;
          } else {
           $737 = $731;$738 = $732;$739 = $359;$740 = $360;$gotdig$3117$i$lcssa = $gotdig$3117$i;$j$0120$i$lcssa = $j$0120$i;$k$0119$i$lcssa = $k$0119$i;$lnz$0116$i$lcssa = $lnz$0116$i;
           break L216;
          }
         } else {
          $358 = ($k$0119$i|0)<(125);
          $361 = (_i64Add(($359|0),($360|0),1,0)|0);
          $362 = tempRet0;
          $363 = ($$3121$i|0)!=(48);
          if (!($358)) {
           if (!($363)) {
            $733 = $731;$734 = $732;$735 = $361;$736 = $362;$gotdig$4$i = $gotdig$3117$i;$gotrad$2$i = $gotrad$1118$i;$j$2$i = $j$0120$i;$k$2$i = $k$0119$i;$lnz$2$i = $lnz$0116$i;
            break;
           }
           $373 = HEAP32[$356>>2]|0;
           $374 = $373 | 1;
           HEAP32[$356>>2] = $374;
           $733 = $731;$734 = $732;$735 = $361;$736 = $362;$gotdig$4$i = $gotdig$3117$i;$gotrad$2$i = $gotrad$1118$i;$j$2$i = $j$0120$i;$k$2$i = $k$0119$i;$lnz$2$i = $lnz$0116$i;
           break;
          }
          $$lnz$0$i = $363 ? $361 : $lnz$0116$i;
          $364 = ($j$0120$i|0)==(0);
          $365 = (($x$i) + ($k$0119$i<<2)|0);
          if ($364) {
           $storemerge$i = $730;
          } else {
           $366 = HEAP32[$365>>2]|0;
           $367 = ($366*10)|0;
           $368 = (($$3121$i) + -48)|0;
           $369 = (($368) + ($367))|0;
           $storemerge$i = $369;
          }
          HEAP32[$365>>2] = $storemerge$i;
          $370 = (($j$0120$i) + 1)|0;
          $371 = ($370|0)==(9);
          $372 = $371&1;
          $$k$0$i = (($372) + ($k$0119$i))|0;
          $$11$i = $371 ? 0 : $370;
          $733 = $731;$734 = $732;$735 = $361;$736 = $362;$gotdig$4$i = 1;$gotrad$2$i = $gotrad$1118$i;$j$2$i = $$11$i;$k$2$i = $$k$0$i;$lnz$2$i = $$lnz$0$i;
         }
        } while(0);
        $375 = HEAP32[$0>>2]|0;
        $376 = HEAP32[$1>>2]|0;
        $377 = ($375>>>0)<($376>>>0);
        if ($377) {
         $378 = ((($375)) + 1|0);
         HEAP32[$0>>2] = $378;
         $379 = HEAP8[$375>>0]|0;
         $380 = $379&255;
         $$3$be$i = $380;
        } else {
         $381 = (___shgetc($f)|0);
         $$3$be$i = $381;
        }
        $382 = (($$3$be$i) + -48)|0;
        $383 = ($382>>>0)<(10);
        $384 = ($$3$be$i|0)==(46);
        $385 = $384 | $383;
        if ($385) {
         $$3121$i = $$3$be$i;$359 = $735;$360 = $736;$729 = $384;$730 = $382;$731 = $733;$732 = $734;$gotdig$3117$i = $gotdig$4$i;$gotrad$1118$i = $gotrad$2$i;$j$0120$i = $j$2$i;$k$0119$i = $k$2$i;$lnz$0116$i = $lnz$2$i;
        } else {
         $$3$lcssa$i = $$3$be$i;$387 = $733;$388 = $735;$390 = $734;$391 = $736;$gotdig$3$lcssa$i = $gotdig$4$i;$gotrad$1$lcssa$i = $gotrad$2$i;$j$0$lcssa$i = $j$2$i;$k$0$lcssa$i = $k$2$i;$lnz$0$lcssa$i = $lnz$2$i;
         label = 158;
         break L214;
        }
       }
       $357 = ($gotdig$3117$i$lcssa|0)!=(0);
       $741 = $739;$742 = $740;$743 = $737;$744 = $738;$745 = $357;$j$069$i = $j$0120$i$lcssa;$k$065$i = $k$0119$i$lcssa;$lnz$059$i = $lnz$0116$i$lcssa;
       label = 166;
      } else {
       $$3$lcssa$i = $$2$i;$387 = $727;$388 = 0;$390 = $728;$391 = 0;$gotdig$3$lcssa$i = $gotdig$2$i13;$gotrad$1$lcssa$i = $gotrad$0$i14;$j$0$lcssa$i = 0;$k$0$lcssa$i = 0;$lnz$0$lcssa$i = 0;
       label = 158;
      }
     } while(0);
     do {
      if ((label|0) == 158) {
       $386 = ($gotrad$1$lcssa$i|0)==(0);
       $389 = $386 ? $388 : $387;
       $392 = $386 ? $391 : $390;
       $393 = ($gotdig$3$lcssa$i|0)!=(0);
       $394 = $$3$lcssa$i | 32;
       $395 = ($394|0)==(101);
       $or$cond13$i = $395 & $393;
       if (!($or$cond13$i)) {
        $410 = ($$3$lcssa$i|0)>(-1);
        if ($410) {
         $741 = $388;$742 = $391;$743 = $389;$744 = $392;$745 = $393;$j$069$i = $j$0$lcssa$i;$k$065$i = $k$0$lcssa$i;$lnz$059$i = $lnz$0$lcssa$i;
         label = 166;
         break;
        } else {
         $746 = $388;$747 = $391;$748 = $393;$749 = $389;$750 = $392;$j$068$i = $j$0$lcssa$i;$k$064$i = $k$0$lcssa$i;$lnz$058$i = $lnz$0$lcssa$i;
         label = 168;
         break;
        }
       }
       $396 = (_scanexp($f,$pok)|0);
       $397 = tempRet0;
       $398 = ($396|0)==(0);
       $399 = ($397|0)==(-2147483648);
       $400 = $398 & $399;
       if ($400) {
        $401 = ($pok|0)==(0);
        if ($401) {
         ___shlim($f,0);
         $$0$i25 = 0.0;
         break;
        }
        $402 = HEAP32[$1>>2]|0;
        $403 = ($402|0)==(0|0);
        if ($403) {
         $406 = 0;$407 = 0;
        } else {
         $404 = HEAP32[$0>>2]|0;
         $405 = ((($404)) + -1|0);
         HEAP32[$0>>2] = $405;
         $406 = 0;$407 = 0;
        }
       } else {
        $406 = $396;$407 = $397;
       }
       $408 = (_i64Add(($406|0),($407|0),($389|0),($392|0))|0);
       $409 = tempRet0;
       $420 = $408;$422 = $388;$423 = $409;$425 = $391;$j$067$i = $j$0$lcssa$i;$k$063$i = $k$0$lcssa$i;$lnz$057$i = $lnz$0$lcssa$i;
       label = 170;
      }
     } while(0);
     if ((label|0) == 166) {
      $411 = HEAP32[$1>>2]|0;
      $412 = ($411|0)==(0|0);
      if ($412) {
       $746 = $741;$747 = $742;$748 = $745;$749 = $743;$750 = $744;$j$068$i = $j$069$i;$k$064$i = $k$065$i;$lnz$058$i = $lnz$059$i;
       label = 168;
      } else {
       $413 = HEAP32[$0>>2]|0;
       $414 = ((($413)) + -1|0);
       HEAP32[$0>>2] = $414;
       if ($745) {
        $420 = $743;$422 = $741;$423 = $744;$425 = $742;$j$067$i = $j$069$i;$k$063$i = $k$065$i;$lnz$057$i = $lnz$059$i;
        label = 170;
       } else {
        label = 169;
       }
      }
     }
     if ((label|0) == 168) {
      if ($748) {
       $420 = $749;$422 = $746;$423 = $750;$425 = $747;$j$067$i = $j$068$i;$k$063$i = $k$064$i;$lnz$057$i = $lnz$058$i;
       label = 170;
      } else {
       label = 169;
      }
     }
     do {
      if ((label|0) == 169) {
       $415 = (___errno_location()|0);
       HEAP32[$415>>2] = 22;
       ___shlim($f,0);
       $$0$i25 = 0.0;
      }
      else if ((label|0) == 170) {
       $416 = HEAP32[$x$i>>2]|0;
       $417 = ($416|0)==(0);
       if ($417) {
        $418 = (+($sign$0|0));
        $419 = $418 * 0.0;
        $$0$i25 = $419;
        break;
       }
       $421 = ($420|0)==($422|0);
       $424 = ($423|0)==($425|0);
       $426 = $421 & $424;
       $427 = ($425|0)<(0);
       $428 = ($422>>>0)<(10);
       $429 = ($425|0)==(0);
       $430 = $429 & $428;
       $431 = $427 | $430;
       $or$cond$i16 = $431 & $426;
       if ($or$cond$i16) {
        $432 = ($bits$0$ph>>>0)>(30);
        $433 = $416 >>> $bits$0$ph;
        $434 = ($433|0)==(0);
        $or$cond15$i = $432 | $434;
        if ($or$cond15$i) {
         $435 = (+($sign$0|0));
         $436 = (+($416>>>0));
         $437 = $435 * $436;
         $$0$i25 = $437;
         break;
        }
       }
       $438 = (($emin$0$ph|0) / -2)&-1;
       $439 = ($438|0)<(0);
       $440 = $439 << 31 >> 31;
       $441 = ($423|0)>($440|0);
       $442 = ($420>>>0)>($438>>>0);
       $443 = ($423|0)==($440|0);
       $444 = $443 & $442;
       $445 = $441 | $444;
       if ($445) {
        $446 = (___errno_location()|0);
        HEAP32[$446>>2] = 34;
        $447 = (+($sign$0|0));
        $448 = $447 * 1.7976931348623157E+308;
        $449 = $448 * 1.7976931348623157E+308;
        $$0$i25 = $449;
        break;
       }
       $450 = (($emin$0$ph) + -106)|0;
       $451 = ($450|0)<(0);
       $452 = $451 << 31 >> 31;
       $453 = ($423|0)<($452|0);
       $454 = ($420>>>0)<($450>>>0);
       $455 = ($423|0)==($452|0);
       $456 = $455 & $454;
       $457 = $453 | $456;
       if ($457) {
        $458 = (___errno_location()|0);
        HEAP32[$458>>2] = 34;
        $459 = (+($sign$0|0));
        $460 = $459 * 2.2250738585072014E-308;
        $461 = $460 * 2.2250738585072014E-308;
        $$0$i25 = $461;
        break;
       }
       $462 = ($j$067$i|0)==(0);
       if ($462) {
        $k$3$i = $k$063$i;
       } else {
        $463 = ($j$067$i|0)<(9);
        if ($463) {
         $464 = (($x$i) + ($k$063$i<<2)|0);
         $$promoted$i = HEAP32[$464>>2]|0;
         $466 = $$promoted$i;$j$3110$i = $j$067$i;
         while(1) {
          $465 = ($466*10)|0;
          $467 = (($j$3110$i) + 1)|0;
          $exitcond$i = ($467|0)==(9);
          if ($exitcond$i) {
           $$lcssa323 = $465;
           break;
          } else {
           $466 = $465;$j$3110$i = $467;
          }
         }
         HEAP32[$464>>2] = $$lcssa323;
        }
        $468 = (($k$063$i) + 1)|0;
        $k$3$i = $468;
       }
       $469 = ($lnz$057$i|0)<(9);
       if ($469) {
        $470 = ($lnz$057$i|0)<=($420|0);
        $471 = ($420|0)<(18);
        $or$cond3$i = $470 & $471;
        if ($or$cond3$i) {
         $472 = ($420|0)==(9);
         if ($472) {
          $473 = (+($sign$0|0));
          $474 = HEAP32[$x$i>>2]|0;
          $475 = (+($474>>>0));
          $476 = $473 * $475;
          $$0$i25 = $476;
          break;
         }
         $477 = ($420|0)<(9);
         if ($477) {
          $478 = (+($sign$0|0));
          $479 = HEAP32[$x$i>>2]|0;
          $480 = (+($479>>>0));
          $481 = $478 * $480;
          $482 = (8 - ($420))|0;
          $483 = (3640 + ($482<<2)|0);
          $484 = HEAP32[$483>>2]|0;
          $485 = (+($484|0));
          $486 = $481 / $485;
          $$0$i25 = $486;
          break;
         }
         $$neg32$i = (($bits$0$ph) + 27)|0;
         $487 = Math_imul($420, -3)|0;
         $488 = (($$neg32$i) + ($487))|0;
         $489 = ($488|0)>(30);
         $$pre$i17 = HEAP32[$x$i>>2]|0;
         $490 = $$pre$i17 >>> $488;
         $491 = ($490|0)==(0);
         $or$cond216$i = $489 | $491;
         if ($or$cond216$i) {
          $492 = (+($sign$0|0));
          $493 = (+($$pre$i17>>>0));
          $494 = $492 * $493;
          $495 = (($420) + -10)|0;
          $496 = (3640 + ($495<<2)|0);
          $497 = HEAP32[$496>>2]|0;
          $498 = (+($497|0));
          $499 = $494 * $498;
          $$0$i25 = $499;
          break;
         }
        }
       }
       $500 = (($420|0) % 9)&-1;
       $501 = ($500|0)==(0);
       if ($501) {
        $a$2$ph38$i = 0;$e2$0$ph$i = 0;$rp$2$ph36$i = $420;$z$1$ph37$i = $k$3$i;
       } else {
        $502 = ($420|0)>(-1);
        $503 = (($500) + 9)|0;
        $504 = $502 ? $500 : $503;
        $505 = (8 - ($504))|0;
        $506 = (3640 + ($505<<2)|0);
        $507 = HEAP32[$506>>2]|0;
        $508 = ($k$3$i|0)==(0);
        if ($508) {
         $a$0$lcssa177$i = 0;$rp$0$lcssa178$i = $420;$z$0$i = 0;
        } else {
         $509 = (1000000000 / ($507|0))&-1;
         $a$0101$i = 0;$carry$0103$i = 0;$k$4102$i = 0;$rp$0100$i = $420;
         while(1) {
          $510 = (($x$i) + ($k$4102$i<<2)|0);
          $511 = HEAP32[$510>>2]|0;
          $512 = (($511>>>0) % ($507>>>0))&-1;
          $513 = (($511>>>0) / ($507>>>0))&-1;
          $514 = (($513) + ($carry$0103$i))|0;
          HEAP32[$510>>2] = $514;
          $515 = Math_imul($512, $509)|0;
          $516 = ($k$4102$i|0)==($a$0101$i|0);
          $517 = ($514|0)==(0);
          $or$cond16$i = $516 & $517;
          $518 = (($k$4102$i) + 1)|0;
          $519 = $518 & 127;
          $520 = (($rp$0100$i) + -9)|0;
          $rp$1$i18 = $or$cond16$i ? $520 : $rp$0100$i;
          $a$1$i = $or$cond16$i ? $519 : $a$0101$i;
          $521 = ($518|0)==($k$3$i|0);
          if ($521) {
           $$lcssa322 = $515;$a$1$i$lcssa = $a$1$i;$rp$1$i18$lcssa = $rp$1$i18;
           break;
          } else {
           $a$0101$i = $a$1$i;$carry$0103$i = $515;$k$4102$i = $518;$rp$0100$i = $rp$1$i18;
          }
         }
         $522 = ($$lcssa322|0)==(0);
         if ($522) {
          $a$0$lcssa177$i = $a$1$i$lcssa;$rp$0$lcssa178$i = $rp$1$i18$lcssa;$z$0$i = $k$3$i;
         } else {
          $523 = (($k$3$i) + 1)|0;
          $524 = (($x$i) + ($k$3$i<<2)|0);
          HEAP32[$524>>2] = $$lcssa322;
          $a$0$lcssa177$i = $a$1$i$lcssa;$rp$0$lcssa178$i = $rp$1$i18$lcssa;$z$0$i = $523;
         }
        }
        $525 = (9 - ($504))|0;
        $526 = (($525) + ($rp$0$lcssa178$i))|0;
        $a$2$ph38$i = $a$0$lcssa177$i;$e2$0$ph$i = 0;$rp$2$ph36$i = $526;$z$1$ph37$i = $z$0$i;
       }
       L296: while(1) {
        $527 = ($rp$2$ph36$i|0)<(18);
        $528 = (($x$i) + ($a$2$ph38$i<<2)|0);
        if ($527) {
         $e2$0$us$i = $e2$0$ph$i;$z$1$us$i = $z$1$ph37$i;
         while(1) {
          $530 = (($z$1$us$i) + 127)|0;
          $carry1$0$us$i = 0;$k$5$in$us$i = $530;$z$2$us$i = $z$1$us$i;
          while(1) {
           $k$5$us$i = $k$5$in$us$i & 127;
           $531 = (($x$i) + ($k$5$us$i<<2)|0);
           $532 = HEAP32[$531>>2]|0;
           $533 = (_bitshift64Shl(($532|0),0,29)|0);
           $534 = tempRet0;
           $535 = (_i64Add(($533|0),($534|0),($carry1$0$us$i|0),0)|0);
           $536 = tempRet0;
           $537 = ($536>>>0)>(0);
           $538 = ($535>>>0)>(1000000000);
           $539 = ($536|0)==(0);
           $540 = $539 & $538;
           $541 = $537 | $540;
           if ($541) {
            $542 = (___udivdi3(($535|0),($536|0),1000000000,0)|0);
            $543 = tempRet0;
            $544 = (___uremdi3(($535|0),($536|0),1000000000,0)|0);
            $545 = tempRet0;
            $$sink$off0$us$i = $544;$carry1$1$us$i = $542;
           } else {
            $$sink$off0$us$i = $535;$carry1$1$us$i = 0;
           }
           HEAP32[$531>>2] = $$sink$off0$us$i;
           $546 = (($z$2$us$i) + 127)|0;
           $547 = $546 & 127;
           $548 = ($k$5$us$i|0)!=($547|0);
           $549 = ($k$5$us$i|0)==($a$2$ph38$i|0);
           $or$cond17$us$i = $548 | $549;
           $550 = ($$sink$off0$us$i|0)==(0);
           $k$5$z$2$us$i = $550 ? $k$5$us$i : $z$2$us$i;
           $z$3$us$i = $or$cond17$us$i ? $z$2$us$i : $k$5$z$2$us$i;
           $551 = (($k$5$us$i) + -1)|0;
           if ($549) {
            $carry1$1$us$i$lcssa = $carry1$1$us$i;$z$3$us$i$lcssa = $z$3$us$i;
            break;
           } else {
            $carry1$0$us$i = $carry1$1$us$i;$k$5$in$us$i = $551;$z$2$us$i = $z$3$us$i;
           }
          }
          $552 = (($e2$0$us$i) + -29)|0;
          $553 = ($carry1$1$us$i$lcssa|0)==(0);
          if ($553) {
           $e2$0$us$i = $552;$z$1$us$i = $z$3$us$i$lcssa;
          } else {
           $$lcssa50$i = $552;$carry1$1$lcssa$lcssa$i = $carry1$1$us$i$lcssa;$z$3$lcssa$lcssa$i = $z$3$us$i$lcssa;
           break;
          }
         }
        } else {
         $529 = ($rp$2$ph36$i|0)==(18);
         if ($529) {
          $e2$0$us84$i = $e2$0$ph$i;$z$1$us85$i = $z$1$ph37$i;
         } else {
          $a$3$ph$i = $a$2$ph38$i;$e2$1$ph$i = $e2$0$ph$i;$rp$3$ph34$i = $rp$2$ph36$i;$z$5$ph$i = $z$1$ph37$i;
          break;
         }
         while(1) {
          $554 = HEAP32[$528>>2]|0;
          $555 = ($554>>>0)<(9007199);
          if (!($555)) {
           $a$3$ph$i = $a$2$ph38$i;$e2$1$ph$i = $e2$0$us84$i;$rp$3$ph34$i = 18;$z$5$ph$i = $z$1$us85$i;
           break L296;
          }
          $556 = (($z$1$us85$i) + 127)|0;
          $carry1$0$us89$i = 0;$k$5$in$us88$i = $556;$z$2$us87$i = $z$1$us85$i;
          while(1) {
           $k$5$us90$i = $k$5$in$us88$i & 127;
           $557 = (($x$i) + ($k$5$us90$i<<2)|0);
           $558 = HEAP32[$557>>2]|0;
           $559 = (_bitshift64Shl(($558|0),0,29)|0);
           $560 = tempRet0;
           $561 = (_i64Add(($559|0),($560|0),($carry1$0$us89$i|0),0)|0);
           $562 = tempRet0;
           $563 = ($562>>>0)>(0);
           $564 = ($561>>>0)>(1000000000);
           $565 = ($562|0)==(0);
           $566 = $565 & $564;
           $567 = $563 | $566;
           if ($567) {
            $568 = (___udivdi3(($561|0),($562|0),1000000000,0)|0);
            $569 = tempRet0;
            $570 = (___uremdi3(($561|0),($562|0),1000000000,0)|0);
            $571 = tempRet0;
            $$sink$off0$us93$i = $570;$carry1$1$us94$i = $568;
           } else {
            $$sink$off0$us93$i = $561;$carry1$1$us94$i = 0;
           }
           HEAP32[$557>>2] = $$sink$off0$us93$i;
           $572 = (($z$2$us87$i) + 127)|0;
           $573 = $572 & 127;
           $574 = ($k$5$us90$i|0)!=($573|0);
           $575 = ($k$5$us90$i|0)==($a$2$ph38$i|0);
           $or$cond17$us95$i = $574 | $575;
           $576 = ($$sink$off0$us93$i|0)==(0);
           $k$5$z$2$us96$i = $576 ? $k$5$us90$i : $z$2$us87$i;
           $z$3$us97$i = $or$cond17$us95$i ? $z$2$us87$i : $k$5$z$2$us96$i;
           $577 = (($k$5$us90$i) + -1)|0;
           if ($575) {
            $carry1$1$us94$i$lcssa = $carry1$1$us94$i;$z$3$us97$i$lcssa = $z$3$us97$i;
            break;
           } else {
            $carry1$0$us89$i = $carry1$1$us94$i;$k$5$in$us88$i = $577;$z$2$us87$i = $z$3$us97$i;
           }
          }
          $578 = (($e2$0$us84$i) + -29)|0;
          $579 = ($carry1$1$us94$i$lcssa|0)==(0);
          if ($579) {
           $e2$0$us84$i = $578;$z$1$us85$i = $z$3$us97$i$lcssa;
          } else {
           $$lcssa50$i = $578;$carry1$1$lcssa$lcssa$i = $carry1$1$us94$i$lcssa;$z$3$lcssa$lcssa$i = $z$3$us97$i$lcssa;
           break;
          }
         }
        }
        $580 = (($rp$2$ph36$i) + 9)|0;
        $581 = (($a$2$ph38$i) + 127)|0;
        $582 = $581 & 127;
        $583 = ($582|0)==($z$3$lcssa$lcssa$i|0);
        if ($583) {
         $584 = (($z$3$lcssa$lcssa$i) + 127)|0;
         $585 = $584 & 127;
         $586 = (($x$i) + ($585<<2)|0);
         $587 = HEAP32[$586>>2]|0;
         $588 = (($z$3$lcssa$lcssa$i) + 126)|0;
         $589 = $588 & 127;
         $590 = (($x$i) + ($589<<2)|0);
         $591 = HEAP32[$590>>2]|0;
         $592 = $591 | $587;
         HEAP32[$590>>2] = $592;
         $z$4$i = $585;
        } else {
         $z$4$i = $z$3$lcssa$lcssa$i;
        }
        $593 = (($x$i) + ($582<<2)|0);
        HEAP32[$593>>2] = $carry1$1$lcssa$lcssa$i;
        $a$2$ph38$i = $582;$e2$0$ph$i = $$lcssa50$i;$rp$2$ph36$i = $580;$z$1$ph37$i = $z$4$i;
       }
       L321: while(1) {
        $624 = (($z$5$ph$i) + 1)|0;
        $621 = $624 & 127;
        $625 = (($z$5$ph$i) + 127)|0;
        $626 = $625 & 127;
        $627 = (($x$i) + ($626<<2)|0);
        $a$3$ph183$i = $a$3$ph$i;$e2$1$ph182$i = $e2$1$ph$i;$rp$3$ph$i = $rp$3$ph34$i;
        while(1) {
         $628 = ($rp$3$ph$i|0)==(18);
         $629 = ($rp$3$ph$i|0)>(27);
         $$18$i = $629 ? 9 : 1;
         $$not$i = $628 ^ 1;
         $a$3$i = $a$3$ph183$i;$e2$1$i = $e2$1$ph182$i;
         while(1) {
          $594 = $a$3$i & 127;
          $595 = ($594|0)==($z$5$ph$i|0);
          do {
           if ($595) {
            label = 220;
           } else {
            $596 = (($x$i) + ($594<<2)|0);
            $597 = HEAP32[$596>>2]|0;
            $598 = ($597>>>0)<(9007199);
            if ($598) {
             label = 220;
             break;
            }
            $599 = ($597>>>0)>(9007199);
            if ($599) {
             break;
            }
            $600 = (($a$3$i) + 1)|0;
            $601 = $600 & 127;
            $602 = ($601|0)==($z$5$ph$i|0);
            if ($602) {
             label = 220;
             break;
            }
            $708 = (($x$i) + ($601<<2)|0);
            $709 = HEAP32[$708>>2]|0;
            $710 = ($709>>>0)<(254740991);
            if ($710) {
             label = 220;
             break;
            }
            $711 = ($709>>>0)>(254740991);
            $brmerge$i26 = $711 | $$not$i;
            if (!($brmerge$i26)) {
             $635 = $594;$a$3$i301 = $a$3$i;$e2$1$i298 = $e2$1$i;$z$7$i = $z$5$ph$i;
             break L321;
            }
           }
          } while(0);
          if ((label|0) == 220) {
           label = 0;
           if ($628) {
            label = 221;
            break L321;
           }
          }
          $603 = (($e2$1$i) + ($$18$i))|0;
          $604 = ($a$3$i|0)==($z$5$ph$i|0);
          if ($604) {
           $a$3$i = $z$5$ph$i;$e2$1$i = $603;
          } else {
           $$lcssa308 = $603;$a$3$i$lcssa300 = $a$3$i;
           break;
          }
         }
         $605 = 1 << $$18$i;
         $606 = (($605) + -1)|0;
         $607 = 1000000000 >>> $$18$i;
         $a$478$i = $a$3$i$lcssa300;$carry3$081$i = 0;$k$679$i = $a$3$i$lcssa300;$rp$477$i = $rp$3$ph$i;
         while(1) {
          $608 = (($x$i) + ($k$679$i<<2)|0);
          $609 = HEAP32[$608>>2]|0;
          $610 = $609 & $606;
          $611 = $609 >>> $$18$i;
          $612 = (($611) + ($carry3$081$i))|0;
          HEAP32[$608>>2] = $612;
          $613 = Math_imul($610, $607)|0;
          $614 = ($k$679$i|0)==($a$478$i|0);
          $615 = ($612|0)==(0);
          $or$cond19$i = $614 & $615;
          $616 = (($k$679$i) + 1)|0;
          $617 = $616 & 127;
          $618 = (($rp$477$i) + -9)|0;
          $rp$5$i = $or$cond19$i ? $618 : $rp$477$i;
          $a$5$i = $or$cond19$i ? $617 : $a$478$i;
          $619 = ($617|0)==($z$5$ph$i|0);
          if ($619) {
           $$lcssa309 = $613;$a$5$i$lcssa = $a$5$i;$rp$5$i$lcssa = $rp$5$i;
           break;
          } else {
           $a$478$i = $a$5$i;$carry3$081$i = $613;$k$679$i = $617;$rp$477$i = $rp$5$i;
          }
         }
         $620 = ($$lcssa309|0)==(0);
         if ($620) {
          $a$3$ph183$i = $a$5$i$lcssa;$e2$1$ph182$i = $$lcssa308;$rp$3$ph$i = $rp$5$i$lcssa;
          continue;
         }
         $622 = ($621|0)==($a$5$i$lcssa|0);
         if (!($622)) {
          $$lcssa308$lcssa = $$lcssa308;$$lcssa309$lcssa = $$lcssa309;$a$5$i$lcssa$lcssa = $a$5$i$lcssa;$rp$5$i$lcssa$lcssa = $rp$5$i$lcssa;
          break;
         }
         $630 = HEAP32[$627>>2]|0;
         $631 = $630 | 1;
         HEAP32[$627>>2] = $631;
         $a$3$ph183$i = $a$5$i$lcssa;$e2$1$ph182$i = $$lcssa308;$rp$3$ph$i = $rp$5$i$lcssa;
        }
        $623 = (($x$i) + ($z$5$ph$i<<2)|0);
        HEAP32[$623>>2] = $$lcssa309$lcssa;
        $a$3$ph$i = $a$5$i$lcssa$lcssa;$e2$1$ph$i = $$lcssa308$lcssa;$rp$3$ph34$i = $rp$5$i$lcssa$lcssa;$z$5$ph$i = $621;
       }
       if ((label|0) == 221) {
        if ($595) {
         $632 = (($621) + -1)|0;
         $633 = (($x$i) + ($632<<2)|0);
         HEAP32[$633>>2] = 0;
         $635 = $z$5$ph$i;$a$3$i301 = $a$3$i;$e2$1$i298 = $e2$1$i;$z$7$i = $621;
        } else {
         $635 = $594;$a$3$i301 = $a$3$i;$e2$1$i298 = $e2$1$i;$z$7$i = $z$5$ph$i;
        }
       }
       $634 = (($x$i) + ($635<<2)|0);
       $636 = HEAP32[$634>>2]|0;
       $637 = (+($636>>>0));
       $638 = (($a$3$i301) + 1)|0;
       $639 = $638 & 127;
       $640 = ($639|0)==($z$7$i|0);
       if ($640) {
        $697 = (($a$3$i301) + 2)|0;
        $698 = $697 & 127;
        $699 = (($698) + -1)|0;
        $700 = (($x$i) + ($699<<2)|0);
        HEAP32[$700>>2] = 0;
        $z$7$1$i = $698;
       } else {
        $z$7$1$i = $z$7$i;
       }
       $701 = $637 * 1.0E+9;
       $702 = (($x$i) + ($639<<2)|0);
       $703 = HEAP32[$702>>2]|0;
       $704 = (+($703>>>0));
       $705 = $701 + $704;
       $661 = (+($sign$0|0));
       $643 = $661 * $705;
       $681 = (($e2$1$i298) + 53)|0;
       $687 = (($681) - ($emin$0$ph))|0;
       $688 = ($687|0)<($bits$0$ph|0);
       $706 = ($687|0)<(0);
       $$$i = $706 ? 0 : $687;
       $denormal$0$i = $688&1;
       $$010$i = $688 ? $$$i : $bits$0$ph;
       $707 = ($$010$i|0)<(53);
       if ($707) {
        $641 = (105 - ($$010$i))|0;
        $642 = (+_scalbn(1.0,$641));
        $644 = (+_copysignl($642,$643));
        $645 = (53 - ($$010$i))|0;
        $646 = (+_scalbn(1.0,$645));
        $647 = (+_fmodl($643,$646));
        $648 = $643 - $647;
        $649 = $644 + $648;
        $bias$0$i23 = $644;$frac$0$i = $647;$y$1$i22 = $649;
       } else {
        $bias$0$i23 = 0.0;$frac$0$i = 0.0;$y$1$i22 = $643;
       }
       $650 = (($a$3$i301) + 2)|0;
       $651 = $650 & 127;
       $652 = ($651|0)==($z$7$1$i|0);
       do {
        if ($652) {
         $frac$2$i = $frac$0$i;
        } else {
         $653 = (($x$i) + ($651<<2)|0);
         $654 = HEAP32[$653>>2]|0;
         $655 = ($654>>>0)<(500000000);
         do {
          if ($655) {
           $656 = ($654|0)==(0);
           if ($656) {
            $657 = (($a$3$i301) + 3)|0;
            $658 = $657 & 127;
            $659 = ($658|0)==($z$7$1$i|0);
            if ($659) {
             $frac$1$i = $frac$0$i;
             break;
            }
           }
           $660 = $661 * 0.25;
           $662 = $660 + $frac$0$i;
           $frac$1$i = $662;
          } else {
           $663 = ($654>>>0)>(500000000);
           if ($663) {
            $664 = $661 * 0.75;
            $665 = $664 + $frac$0$i;
            $frac$1$i = $665;
            break;
           }
           $666 = (($a$3$i301) + 3)|0;
           $667 = $666 & 127;
           $668 = ($667|0)==($z$7$1$i|0);
           if ($668) {
            $669 = $661 * 0.5;
            $670 = $669 + $frac$0$i;
            $frac$1$i = $670;
            break;
           } else {
            $671 = $661 * 0.75;
            $672 = $671 + $frac$0$i;
            $frac$1$i = $672;
            break;
           }
          }
         } while(0);
         $673 = (53 - ($$010$i))|0;
         $674 = ($673|0)>(1);
         if (!($674)) {
          $frac$2$i = $frac$1$i;
          break;
         }
         $675 = (+_fmodl($frac$1$i,1.0));
         $676 = $675 != 0.0;
         if ($676) {
          $frac$2$i = $frac$1$i;
          break;
         }
         $677 = $frac$1$i + 1.0;
         $frac$2$i = $677;
        }
       } while(0);
       $678 = $y$1$i22 + $frac$2$i;
       $679 = $678 - $bias$0$i23;
       $680 = $681 & 2147483647;
       $682 = (-2 - ($sum$i))|0;
       $683 = ($680|0)>($682|0);
       do {
        if ($683) {
         $684 = (+Math_abs((+$679)));
         $685 = !($684 >= 9007199254740992.0);
         if ($685) {
          $denormal$2$i = $denormal$0$i;$e2$2$i = $e2$1$i298;$y$2$i24 = $679;
         } else {
          $686 = ($$010$i|0)==($687|0);
          $or$cond20$i = $688 & $686;
          $denormal$1$i = $or$cond20$i ? 0 : $denormal$0$i;
          $689 = $679 * 0.5;
          $690 = (($e2$1$i298) + 1)|0;
          $denormal$2$i = $denormal$1$i;$e2$2$i = $690;$y$2$i24 = $689;
         }
         $691 = (($e2$2$i) + 50)|0;
         $692 = ($691|0)>($324|0);
         if (!($692)) {
          $693 = ($denormal$2$i|0)!=(0);
          $694 = $frac$2$i != 0.0;
          $or$cond8$i = $694 & $693;
          if (!($or$cond8$i)) {
           $e2$3$i = $e2$2$i;$y$3$i = $y$2$i24;
           break;
          }
         }
         $695 = (___errno_location()|0);
         HEAP32[$695>>2] = 34;
         $e2$3$i = $e2$2$i;$y$3$i = $y$2$i24;
        } else {
         $e2$3$i = $e2$1$i298;$y$3$i = $679;
        }
       } while(0);
       $696 = (+_scalbnl($y$3$i,$e2$3$i));
       $$0$i25 = $696;
      }
     } while(0);
     $$0 = $$0$i25;
     STACKTOP = sp;return (+$$0);
    }
   } while(0);
   $103 = HEAP32[$1>>2]|0;
   $104 = ($103|0)==(0|0);
   if (!($104)) {
    $105 = HEAP32[$0>>2]|0;
    $106 = ((($105)) + -1|0);
    HEAP32[$0>>2] = $106;
   }
   $107 = (___errno_location()|0);
   HEAP32[$107>>2] = 22;
   ___shlim($f,0);
   $$0 = 0.0;
   STACKTOP = sp;return (+$$0);
  }
 } while(0);
 if ((label|0) == 23) {
  $41 = HEAP32[$1>>2]|0;
  $42 = ($41|0)==(0|0);
  if (!($42)) {
   $43 = HEAP32[$0>>2]|0;
   $44 = ((($43)) + -1|0);
   HEAP32[$0>>2] = $44;
  }
  $notlhs = ($pok|0)==(0);
  $notrhs = ($i$0$lcssa>>>0)<(4);
  $or$cond9$not = $notrhs | $notlhs;
  $brmerge = $or$cond9$not | $42;
  if (!($brmerge)) {
   $$promoted = HEAP32[$0>>2]|0;
   $46 = $$promoted;$i$1 = $i$0$lcssa;
   while(1) {
    $45 = ((($46)) + -1|0);
    $47 = (($i$1) + -1)|0;
    $$old8 = ($47>>>0)>(3);
    if ($$old8) {
     $46 = $45;$i$1 = $47;
    } else {
     $$lcssa = $45;
     break;
    }
   }
   HEAP32[$0>>2] = $$lcssa;
  }
 }
 $48 = (+($sign$0|0));
 $49 = $48 * inf;
 $50 = $49;
 $$0 = $50;
 STACKTOP = sp;return (+$$0);
}
function ___shlim($f,$lim) {
 $f = $f|0;
 $lim = $lim|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 104|0);
 HEAP32[$0>>2] = $lim;
 $1 = ((($f)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($f)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $2;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = ((($f)) + 108|0);
 HEAP32[$8>>2] = $7;
 $9 = ($lim|0)!=(0);
 $10 = ($7|0)>($lim|0);
 $or$cond = $9 & $10;
 if ($or$cond) {
  $11 = (($4) + ($lim)|0);
  $12 = ((($f)) + 100|0);
  HEAP32[$12>>2] = $11;
  return;
 } else {
  $13 = ((($f)) + 100|0);
  HEAP32[$13>>2] = $5;
  return;
 }
}
function ___shgetc($f) {
 $f = $f|0;
 var $$0 = 0, $$phi$trans$insert = 0, $$phi$trans$insert3 = 0, $$pre = 0, $$pre4 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 104|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0);
 if ($2) {
  label = 3;
 } else {
  $3 = ((($f)) + 108|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = ($4|0)<($1|0);
  if ($5) {
   label = 3;
  }
 }
 if ((label|0) == 3) {
  $6 = (___uflow($f)|0);
  $7 = ($6|0)<(0);
  if (!($7)) {
   $9 = HEAP32[$0>>2]|0;
   $10 = ($9|0)==(0);
   $$phi$trans$insert = ((($f)) + 8|0);
   if ($10) {
    $$pre = HEAP32[$$phi$trans$insert>>2]|0;
    $11 = $$pre;
    $26 = $$pre;$41 = $11;
    label = 9;
   } else {
    $12 = HEAP32[$$phi$trans$insert>>2]|0;
    $13 = ((($f)) + 4|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = $12;
    $16 = $14;
    $17 = (($15) - ($16))|0;
    $18 = ((($f)) + 108|0);
    $19 = HEAP32[$18>>2]|0;
    $20 = (($9) - ($19))|0;
    $21 = (($20) + -1)|0;
    $22 = ($17|0)>($21|0);
    if ($22) {
     $23 = (($14) + ($21)|0);
     $24 = ((($f)) + 100|0);
     HEAP32[$24>>2] = $23;
     $27 = $12;
    } else {
     $26 = $15;$41 = $12;
     label = 9;
    }
   }
   if ((label|0) == 9) {
    $25 = ((($f)) + 100|0);
    HEAP32[$25>>2] = $26;
    $27 = $41;
   }
   $28 = ($27|0)==(0|0);
   $$phi$trans$insert3 = ((($f)) + 4|0);
   $$pre4 = HEAP32[$$phi$trans$insert3>>2]|0;
   if (!($28)) {
    $29 = $27;
    $30 = $$pre4;
    $31 = ((($f)) + 108|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = (($29) + 1)|0;
    $34 = (($33) - ($30))|0;
    $35 = (($34) + ($32))|0;
    HEAP32[$31>>2] = $35;
   }
   $36 = ((($$pre4)) + -1|0);
   $37 = HEAP8[$36>>0]|0;
   $38 = $37&255;
   $39 = ($38|0)==($6|0);
   if ($39) {
    $$0 = $6;
    return ($$0|0);
   }
   $40 = $6&255;
   HEAP8[$36>>0] = $40;
   $$0 = $6;
   return ($$0|0);
  }
 }
 $8 = ((($f)) + 100|0);
 HEAP32[$8>>2] = 0;
 $$0 = -1;
 return ($$0|0);
}
function _copysign($x,$y) {
 $x = +$x;
 $y = +$y;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $x;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 HEAPF64[tempDoublePtr>>3] = $y;$2 = HEAP32[tempDoublePtr>>2]|0;
 $3 = HEAP32[tempDoublePtr+4>>2]|0;
 $4 = $1 & 2147483647;
 $5 = $3 & -2147483648;
 $6 = $5 | $4;
 HEAP32[tempDoublePtr>>2] = $0;HEAP32[tempDoublePtr+4>>2] = $6;$7 = +HEAPF64[tempDoublePtr>>3];
 return (+$7);
}
function _copysignl($x,$y) {
 $x = +$x;
 $y = +$y;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_copysign($x,$y));
 return (+$0);
}
function _fmod($x,$y) {
 $x = +$x;
 $y = +$y;
 var $$0 = 0.0, $$lcssa7 = 0, $$x = 0.0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0.0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0;
 var $15 = 0, $150 = 0.0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0.0, $24 = 0.0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0.0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0.0;
 var $ex$0$lcssa = 0, $ex$026 = 0, $ex$1 = 0, $ex$2$lcssa = 0, $ex$212 = 0, $ex$3$lcssa = 0, $ex$39 = 0, $ey$0$lcssa = 0, $ey$020 = 0, $ey$1$ph = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $x;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 HEAPF64[tempDoublePtr>>3] = $y;$2 = HEAP32[tempDoublePtr>>2]|0;
 $3 = HEAP32[tempDoublePtr+4>>2]|0;
 $4 = (_bitshift64Lshr(($0|0),($1|0),52)|0);
 $5 = tempRet0;
 $6 = $4 & 2047;
 $7 = (_bitshift64Lshr(($2|0),($3|0),52)|0);
 $8 = tempRet0;
 $9 = $7 & 2047;
 $10 = $1 & -2147483648;
 $11 = (_bitshift64Shl(($2|0),($3|0),1)|0);
 $12 = tempRet0;
 $13 = ($11|0)==(0);
 $14 = ($12|0)==(0);
 $15 = $13 & $14;
 if (!($15)) {
  $16 = $3 & 2147483647;
  $17 = ($16>>>0)>(2146435072);
  $18 = ($2>>>0)>(0);
  $19 = ($16|0)==(2146435072);
  $20 = $19 & $18;
  $21 = $17 | $20;
  $22 = ($6|0)==(2047);
  $or$cond = $21 | $22;
  if (!($or$cond)) {
   $25 = (_bitshift64Shl(($0|0),($1|0),1)|0);
   $26 = tempRet0;
   $27 = ($26>>>0)>($12>>>0);
   $28 = ($25>>>0)>($11>>>0);
   $29 = ($26|0)==($12|0);
   $30 = $29 & $28;
   $31 = $27 | $30;
   if (!($31)) {
    $32 = ($25|0)==($11|0);
    $33 = ($26|0)==($12|0);
    $34 = $32 & $33;
    $35 = $x * 0.0;
    $$x = $34 ? $35 : $x;
    return (+$$x);
   }
   $36 = ($6|0)==(0);
   if ($36) {
    $37 = (_bitshift64Shl(($0|0),($1|0),12)|0);
    $38 = tempRet0;
    $39 = ($38|0)>(-1);
    $40 = ($37>>>0)>(4294967295);
    $41 = ($38|0)==(-1);
    $42 = $41 & $40;
    $43 = $39 | $42;
    if ($43) {
     $45 = $37;$46 = $38;$ex$026 = 0;
     while(1) {
      $44 = (($ex$026) + -1)|0;
      $47 = (_bitshift64Shl(($45|0),($46|0),1)|0);
      $48 = tempRet0;
      $49 = ($48|0)>(-1);
      $50 = ($47>>>0)>(4294967295);
      $51 = ($48|0)==(-1);
      $52 = $51 & $50;
      $53 = $49 | $52;
      if ($53) {
       $45 = $47;$46 = $48;$ex$026 = $44;
      } else {
       $ex$0$lcssa = $44;
       break;
      }
     }
    } else {
     $ex$0$lcssa = 0;
    }
    $54 = (1 - ($ex$0$lcssa))|0;
    $55 = (_bitshift64Shl(($0|0),($1|0),($54|0))|0);
    $56 = tempRet0;
    $83 = $55;$84 = $56;$ex$1 = $ex$0$lcssa;
   } else {
    $57 = $1 & 1048575;
    $58 = $57 | 1048576;
    $83 = $0;$84 = $58;$ex$1 = $6;
   }
   $59 = ($9|0)==(0);
   if ($59) {
    $60 = (_bitshift64Shl(($2|0),($3|0),12)|0);
    $61 = tempRet0;
    $62 = ($61|0)>(-1);
    $63 = ($60>>>0)>(4294967295);
    $64 = ($61|0)==(-1);
    $65 = $64 & $63;
    $66 = $62 | $65;
    if ($66) {
     $68 = $60;$69 = $61;$ey$020 = 0;
     while(1) {
      $67 = (($ey$020) + -1)|0;
      $70 = (_bitshift64Shl(($68|0),($69|0),1)|0);
      $71 = tempRet0;
      $72 = ($71|0)>(-1);
      $73 = ($70>>>0)>(4294967295);
      $74 = ($71|0)==(-1);
      $75 = $74 & $73;
      $76 = $72 | $75;
      if ($76) {
       $68 = $70;$69 = $71;$ey$020 = $67;
      } else {
       $ey$0$lcssa = $67;
       break;
      }
     }
    } else {
     $ey$0$lcssa = 0;
    }
    $77 = (1 - ($ey$0$lcssa))|0;
    $78 = (_bitshift64Shl(($2|0),($3|0),($77|0))|0);
    $79 = tempRet0;
    $85 = $78;$86 = $79;$ey$1$ph = $ey$0$lcssa;
   } else {
    $80 = $3 & 1048575;
    $81 = $80 | 1048576;
    $85 = $2;$86 = $81;$ey$1$ph = $9;
   }
   $82 = ($ex$1|0)>($ey$1$ph|0);
   $87 = (_i64Subtract(($83|0),($84|0),($85|0),($86|0))|0);
   $88 = tempRet0;
   $89 = ($88|0)>(-1);
   $90 = ($87>>>0)>(4294967295);
   $91 = ($88|0)==(-1);
   $92 = $91 & $90;
   $93 = $89 | $92;
   L23: do {
    if ($82) {
     $152 = $93;$153 = $87;$154 = $88;$94 = $83;$96 = $84;$ex$212 = $ex$1;
     while(1) {
      if ($152) {
       $95 = ($94|0)==($85|0);
       $97 = ($96|0)==($86|0);
       $98 = $95 & $97;
       if ($98) {
        break;
       } else {
        $100 = $153;$101 = $154;
       }
      } else {
       $100 = $94;$101 = $96;
      }
      $102 = (_bitshift64Shl(($100|0),($101|0),1)|0);
      $103 = tempRet0;
      $104 = (($ex$212) + -1)|0;
      $105 = ($104|0)>($ey$1$ph|0);
      $106 = (_i64Subtract(($102|0),($103|0),($85|0),($86|0))|0);
      $107 = tempRet0;
      $108 = ($107|0)>(-1);
      $109 = ($106>>>0)>(4294967295);
      $110 = ($107|0)==(-1);
      $111 = $110 & $109;
      $112 = $108 | $111;
      if ($105) {
       $152 = $112;$153 = $106;$154 = $107;$94 = $102;$96 = $103;$ex$212 = $104;
      } else {
       $$lcssa7 = $112;$113 = $102;$115 = $103;$155 = $106;$156 = $107;$ex$2$lcssa = $104;
       break L23;
      }
     }
     $99 = $x * 0.0;
     $$0 = $99;
     return (+$$0);
    } else {
     $$lcssa7 = $93;$113 = $83;$115 = $84;$155 = $87;$156 = $88;$ex$2$lcssa = $ex$1;
    }
   } while(0);
   if ($$lcssa7) {
    $114 = ($113|0)==($85|0);
    $116 = ($115|0)==($86|0);
    $117 = $114 & $116;
    if ($117) {
     $125 = $x * 0.0;
     $$0 = $125;
     return (+$$0);
    } else {
     $118 = $156;$120 = $155;
    }
   } else {
    $118 = $115;$120 = $113;
   }
   $119 = ($118>>>0)<(1048576);
   $121 = ($120>>>0)<(0);
   $122 = ($118|0)==(1048576);
   $123 = $122 & $121;
   $124 = $119 | $123;
   if ($124) {
    $126 = $120;$127 = $118;$ex$39 = $ex$2$lcssa;
    while(1) {
     $128 = (_bitshift64Shl(($126|0),($127|0),1)|0);
     $129 = tempRet0;
     $130 = (($ex$39) + -1)|0;
     $131 = ($129>>>0)<(1048576);
     $132 = ($128>>>0)<(0);
     $133 = ($129|0)==(1048576);
     $134 = $133 & $132;
     $135 = $131 | $134;
     if ($135) {
      $126 = $128;$127 = $129;$ex$39 = $130;
     } else {
      $137 = $128;$138 = $129;$ex$3$lcssa = $130;
      break;
     }
    }
   } else {
    $137 = $120;$138 = $118;$ex$3$lcssa = $ex$2$lcssa;
   }
   $136 = ($ex$3$lcssa|0)>(0);
   if ($136) {
    $139 = (_i64Add(($137|0),($138|0),0,-1048576)|0);
    $140 = tempRet0;
    $141 = (_bitshift64Shl(($ex$3$lcssa|0),0,52)|0);
    $142 = tempRet0;
    $143 = $139 | $141;
    $144 = $140 | $142;
    $149 = $144;$151 = $143;
   } else {
    $145 = (1 - ($ex$3$lcssa))|0;
    $146 = (_bitshift64Lshr(($137|0),($138|0),($145|0))|0);
    $147 = tempRet0;
    $149 = $147;$151 = $146;
   }
   $148 = $149 | $10;
   HEAP32[tempDoublePtr>>2] = $151;HEAP32[tempDoublePtr+4>>2] = $148;$150 = +HEAPF64[tempDoublePtr>>3];
   $$0 = $150;
   return (+$$0);
  }
 }
 $23 = $x * $y;
 $24 = $23 / $23;
 $$0 = $24;
 return (+$$0);
}
function _fmodl($x,$y) {
 $x = +$x;
 $y = +$y;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_fmod($x,$y));
 return (+$0);
}
function _frexp($x,$e) {
 $x = +$x;
 $e = $e|0;
 var $$0 = 0.0, $$01 = 0.0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0.0, $7 = 0.0, $8 = 0, $9 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $x;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 $2 = (_bitshift64Lshr(($0|0),($1|0),52)|0);
 $3 = tempRet0;
 $4 = $2 & 2047;
 if ((($4|0) == 0)) {
  $5 = $x != 0.0;
  if ($5) {
   $6 = $x * 1.8446744073709552E+19;
   $7 = (+_frexp($6,$e));
   $8 = HEAP32[$e>>2]|0;
   $9 = (($8) + -64)|0;
   $$01 = $7;$storemerge = $9;
  } else {
   $$01 = $x;$storemerge = 0;
  }
  HEAP32[$e>>2] = $storemerge;
  $$0 = $$01;
  return (+$$0);
 } else if ((($4|0) == 2047)) {
  $$0 = $x;
  return (+$$0);
 } else {
  $10 = (($4) + -1022)|0;
  HEAP32[$e>>2] = $10;
  $11 = $1 & -2146435073;
  $12 = $11 | 1071644672;
  HEAP32[tempDoublePtr>>2] = $0;HEAP32[tempDoublePtr+4>>2] = $12;$13 = +HEAPF64[tempDoublePtr>>3];
  $$0 = $13;
  return (+$$0);
 }
 return +(0.0);
}
function _frexpl($x,$e) {
 $x = +$x;
 $e = $e|0;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_frexp($x,$e));
 return (+$0);
}
function _scalbn($x,$n) {
 $x = +$x;
 $n = $n|0;
 var $$ = 0, $$0 = 0, $$1 = 0, $0 = 0, $1 = 0.0, $10 = 0, $11 = 0.0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0.0, $18 = 0.0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0.0, $9 = 0, $y$0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($n|0)>(1023);
 if ($0) {
  $1 = $x * 8.9884656743115795E+307;
  $2 = (($n) + -1023)|0;
  $3 = ($2|0)>(1023);
  if ($3) {
   $4 = $1 * 8.9884656743115795E+307;
   $5 = (($n) + -2046)|0;
   $6 = ($5|0)>(1023);
   $$ = $6 ? 1023 : $5;
   $$0 = $$;$y$0 = $4;
  } else {
   $$0 = $2;$y$0 = $1;
  }
 } else {
  $7 = ($n|0)<(-1022);
  if ($7) {
   $8 = $x * 2.2250738585072014E-308;
   $9 = (($n) + 1022)|0;
   $10 = ($9|0)<(-1022);
   if ($10) {
    $11 = $8 * 2.2250738585072014E-308;
    $12 = (($n) + 2044)|0;
    $13 = ($12|0)<(-1022);
    $$1 = $13 ? -1022 : $12;
    $$0 = $$1;$y$0 = $11;
   } else {
    $$0 = $9;$y$0 = $8;
   }
  } else {
   $$0 = $n;$y$0 = $x;
  }
 }
 $14 = (($$0) + 1023)|0;
 $15 = (_bitshift64Shl(($14|0),0,52)|0);
 $16 = tempRet0;
 HEAP32[tempDoublePtr>>2] = $15;HEAP32[tempDoublePtr+4>>2] = $16;$17 = +HEAPF64[tempDoublePtr>>3];
 $18 = $y$0 * $17;
 return (+$18);
}
function _scalbnl($x,$n) {
 $x = +$x;
 $n = $n|0;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_scalbn($x,$n));
 return (+$0);
}
function _wctomb($s,$wc) {
 $s = $s|0;
 $wc = $wc|0;
 var $$0 = 0, $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($s|0)==(0|0);
 if ($0) {
  $$0 = 0;
 } else {
  $1 = (_wcrtomb($s,$wc,0)|0);
  $$0 = $1;
 }
 return ($$0|0);
}
function _wcrtomb($s,$wc,$st) {
 $s = $s|0;
 $wc = $wc|0;
 $st = $st|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($s|0)==(0|0);
 if ($0) {
  $$0 = 1;
  return ($$0|0);
 }
 $1 = ($wc>>>0)<(128);
 if ($1) {
  $2 = $wc&255;
  HEAP8[$s>>0] = $2;
  $$0 = 1;
  return ($$0|0);
 }
 $3 = ($wc>>>0)<(2048);
 if ($3) {
  $4 = $wc >>> 6;
  $5 = $4 | 192;
  $6 = $5&255;
  $7 = ((($s)) + 1|0);
  HEAP8[$s>>0] = $6;
  $8 = $wc & 63;
  $9 = $8 | 128;
  $10 = $9&255;
  HEAP8[$7>>0] = $10;
  $$0 = 2;
  return ($$0|0);
 }
 $11 = ($wc>>>0)<(55296);
 $12 = $wc & -8192;
 $13 = ($12|0)==(57344);
 $or$cond = $11 | $13;
 if ($or$cond) {
  $14 = $wc >>> 12;
  $15 = $14 | 224;
  $16 = $15&255;
  $17 = ((($s)) + 1|0);
  HEAP8[$s>>0] = $16;
  $18 = $wc >>> 6;
  $19 = $18 & 63;
  $20 = $19 | 128;
  $21 = $20&255;
  $22 = ((($s)) + 2|0);
  HEAP8[$17>>0] = $21;
  $23 = $wc & 63;
  $24 = $23 | 128;
  $25 = $24&255;
  HEAP8[$22>>0] = $25;
  $$0 = 3;
  return ($$0|0);
 }
 $26 = (($wc) + -65536)|0;
 $27 = ($26>>>0)<(1048576);
 if ($27) {
  $28 = $wc >>> 18;
  $29 = $28 | 240;
  $30 = $29&255;
  $31 = ((($s)) + 1|0);
  HEAP8[$s>>0] = $30;
  $32 = $wc >>> 12;
  $33 = $32 & 63;
  $34 = $33 | 128;
  $35 = $34&255;
  $36 = ((($s)) + 2|0);
  HEAP8[$31>>0] = $35;
  $37 = $wc >>> 6;
  $38 = $37 & 63;
  $39 = $38 | 128;
  $40 = $39&255;
  $41 = ((($s)) + 3|0);
  HEAP8[$36>>0] = $40;
  $42 = $wc & 63;
  $43 = $42 | 128;
  $44 = $43&255;
  HEAP8[$41>>0] = $44;
  $$0 = 4;
  return ($$0|0);
 } else {
  $45 = (___errno_location()|0);
  HEAP32[$45>>2] = 84;
  $$0 = -1;
  return ($$0|0);
 }
 return (0)|0;
}
function ___toread($f) {
 $f = $f|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 74|0);
 $1 = HEAP8[$0>>0]|0;
 $2 = $1 << 24 >> 24;
 $3 = (($2) + 255)|0;
 $4 = $3 | $2;
 $5 = $4&255;
 HEAP8[$0>>0] = $5;
 $6 = ((($f)) + 20|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($f)) + 44|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($7>>>0)>($9>>>0);
 if ($10) {
  $11 = ((($f)) + 36|0);
  $12 = HEAP32[$11>>2]|0;
  (FUNCTION_TABLE_iiii[$12 & 1023]($f,0,0)|0);
 }
 $13 = ((($f)) + 16|0);
 HEAP32[$13>>2] = 0;
 $14 = ((($f)) + 28|0);
 HEAP32[$14>>2] = 0;
 HEAP32[$6>>2] = 0;
 $15 = HEAP32[$f>>2]|0;
 $16 = $15 & 20;
 $17 = ($16|0)==(0);
 if ($17) {
  $21 = HEAP32[$8>>2]|0;
  $22 = ((($f)) + 8|0);
  HEAP32[$22>>2] = $21;
  $23 = ((($f)) + 4|0);
  HEAP32[$23>>2] = $21;
  $$0 = 0;
  return ($$0|0);
 }
 $18 = $15 & 4;
 $19 = ($18|0)==(0);
 if ($19) {
  $$0 = -1;
  return ($$0|0);
 }
 $20 = $15 | 32;
 HEAP32[$f>>2] = $20;
 $$0 = -1;
 return ($$0|0);
}
function ___towrite($f) {
 $f = $f|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 74|0);
 $1 = HEAP8[$0>>0]|0;
 $2 = $1 << 24 >> 24;
 $3 = (($2) + 255)|0;
 $4 = $3 | $2;
 $5 = $4&255;
 HEAP8[$0>>0] = $5;
 $6 = HEAP32[$f>>2]|0;
 $7 = $6 & 8;
 $8 = ($7|0)==(0);
 if ($8) {
  $10 = ((($f)) + 8|0);
  HEAP32[$10>>2] = 0;
  $11 = ((($f)) + 4|0);
  HEAP32[$11>>2] = 0;
  $12 = ((($f)) + 44|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = ((($f)) + 28|0);
  HEAP32[$14>>2] = $13;
  $15 = ((($f)) + 20|0);
  HEAP32[$15>>2] = $13;
  $16 = $13;
  $17 = ((($f)) + 48|0);
  $18 = HEAP32[$17>>2]|0;
  $19 = (($16) + ($18)|0);
  $20 = ((($f)) + 16|0);
  HEAP32[$20>>2] = $19;
  $$0 = 0;
  return ($$0|0);
 } else {
  $9 = $6 | 32;
  HEAP32[$f>>2] = $9;
  $$0 = -1;
  return ($$0|0);
 }
 return (0)|0;
}
function ___uflow($f) {
 $f = $f|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $c = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $c = sp;
 $0 = ((($f)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 if ($2) {
  $3 = (___toread($f)|0);
  $4 = ($3|0)==(0);
  if ($4) {
   label = 3;
  } else {
   $$0 = -1;
  }
 } else {
  label = 3;
 }
 if ((label|0) == 3) {
  $5 = ((($f)) + 32|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (FUNCTION_TABLE_iiii[$6 & 1023]($f,$c,1)|0);
  $8 = ($7|0)==(1);
  if ($8) {
   $9 = HEAP8[$c>>0]|0;
   $10 = $9&255;
   $$0 = $10;
  } else {
   $$0 = -1;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function ___fwritex($s,$l,$f) {
 $s = $s|0;
 $l = $l|0;
 $f = $f|0;
 var $$0 = 0, $$01 = 0, $$02 = 0, $$pre = 0, $$pre6 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i$0 = 0, $i$0$lcssa10 = 0;
 var $i$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 do {
  if ($2) {
   $3 = (___towrite($f)|0);
   $4 = ($3|0)==(0);
   if ($4) {
    $$pre = HEAP32[$0>>2]|0;
    $7 = $$pre;
    break;
   } else {
    $$0 = 0;
    return ($$0|0);
   }
  } else {
   $7 = $1;
  }
 } while(0);
 $5 = ((($f)) + 20|0);
 $6 = HEAP32[$5>>2]|0;
 $8 = $7;
 $9 = $6;
 $10 = (($8) - ($9))|0;
 $11 = ($10>>>0)<($l>>>0);
 if ($11) {
  $12 = ((($f)) + 36|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = (FUNCTION_TABLE_iiii[$13 & 1023]($f,$s,$l)|0);
  $$0 = $14;
  return ($$0|0);
 }
 $15 = ((($f)) + 75|0);
 $16 = HEAP8[$15>>0]|0;
 $17 = ($16<<24>>24)>(-1);
 L11: do {
  if ($17) {
   $i$0 = $l;
   while(1) {
    $18 = ($i$0|0)==(0);
    if ($18) {
     $$01 = $l;$$02 = $s;$29 = $6;$i$1 = 0;
     break L11;
    }
    $19 = (($i$0) + -1)|0;
    $20 = (($s) + ($19)|0);
    $21 = HEAP8[$20>>0]|0;
    $22 = ($21<<24>>24)==(10);
    if ($22) {
     $i$0$lcssa10 = $i$0;
     break;
    } else {
     $i$0 = $19;
    }
   }
   $23 = ((($f)) + 36|0);
   $24 = HEAP32[$23>>2]|0;
   $25 = (FUNCTION_TABLE_iiii[$24 & 1023]($f,$s,$i$0$lcssa10)|0);
   $26 = ($25>>>0)<($i$0$lcssa10>>>0);
   if ($26) {
    $$0 = $i$0$lcssa10;
    return ($$0|0);
   } else {
    $27 = (($s) + ($i$0$lcssa10)|0);
    $28 = (($l) - ($i$0$lcssa10))|0;
    $$pre6 = HEAP32[$5>>2]|0;
    $$01 = $28;$$02 = $27;$29 = $$pre6;$i$1 = $i$0$lcssa10;
    break;
   }
  } else {
   $$01 = $l;$$02 = $s;$29 = $6;$i$1 = 0;
  }
 } while(0);
 _memcpy(($29|0),($$02|0),($$01|0))|0;
 $30 = HEAP32[$5>>2]|0;
 $31 = (($30) + ($$01)|0);
 HEAP32[$5>>2] = $31;
 $32 = (($i$1) + ($$01))|0;
 $$0 = $32;
 return ($$0|0);
}
function _snprintf($s,$n,$fmt,$varargs) {
 $s = $s|0;
 $n = $n|0;
 $fmt = $fmt|0;
 $varargs = $varargs|0;
 var $0 = 0, $ap = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ap = sp;
 HEAP32[$ap>>2] = $varargs;
 $0 = (_vsnprintf($s,$n,$fmt,$ap)|0);
 STACKTOP = sp;return ($0|0);
}
function _MUSL_vfprintf($f,$fmt,$ap) {
 $f = $f|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $$ = 0, $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $ap2 = 0, $internal_buf = 0, $nl_arg = 0, $nl_type = 0, $ret$1 = 0, $vacopy_currentptr = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ap2 = sp + 120|0;
 $nl_type = sp + 80|0;
 $nl_arg = sp;
 $internal_buf = sp + 136|0;
 dest=$nl_type; stop=dest+40|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $vacopy_currentptr = HEAP32[$ap>>2]|0;
 HEAP32[$ap2>>2] = $vacopy_currentptr;
 $0 = (_printf_core(0,$fmt,$ap2,$nl_arg,$nl_type)|0);
 $1 = ($0|0)<(0);
 if ($1) {
  $$0 = -1;
  STACKTOP = sp;return ($$0|0);
 }
 $2 = ((($f)) + 48|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0);
 if ($4) {
  $6 = ((($f)) + 44|0);
  $7 = HEAP32[$6>>2]|0;
  HEAP32[$6>>2] = $internal_buf;
  $8 = ((($f)) + 28|0);
  HEAP32[$8>>2] = $internal_buf;
  $9 = ((($f)) + 20|0);
  HEAP32[$9>>2] = $internal_buf;
  HEAP32[$2>>2] = 80;
  $10 = ((($internal_buf)) + 80|0);
  $11 = ((($f)) + 16|0);
  HEAP32[$11>>2] = $10;
  $12 = (_printf_core($f,$fmt,$ap2,$nl_arg,$nl_type)|0);
  $13 = ($7|0)==(0|0);
  if ($13) {
   $ret$1 = $12;
  } else {
   $14 = ((($f)) + 36|0);
   $15 = HEAP32[$14>>2]|0;
   (FUNCTION_TABLE_iiii[$15 & 1023]($f,0,0)|0);
   $16 = HEAP32[$9>>2]|0;
   $17 = ($16|0)==(0|0);
   $$ = $17 ? -1 : $12;
   HEAP32[$6>>2] = $7;
   HEAP32[$2>>2] = 0;
   HEAP32[$11>>2] = 0;
   HEAP32[$8>>2] = 0;
   HEAP32[$9>>2] = 0;
   $ret$1 = $$;
  }
 } else {
  $5 = (_printf_core($f,$fmt,$ap2,$nl_arg,$nl_type)|0);
  $ret$1 = $5;
 }
 $$0 = $ret$1;
 STACKTOP = sp;return ($$0|0);
}
function _vsnprintf($s,$n,$fmt,$ap) {
 $s = $s|0;
 $n = $n|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $$$02 = 0, $$0 = 0, $$01 = 0, $$02 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $b = 0, $f = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $b = sp + 112|0;
 $f = sp;
 dest=$f; src=3672; stop=dest+112|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
 $0 = (($n) + -1)|0;
 $1 = ($0>>>0)>(2147483646);
 if ($1) {
  $2 = ($n|0)==(0);
  if ($2) {
   $$01 = $b;$$02 = 1;
  } else {
   $3 = (___errno_location()|0);
   HEAP32[$3>>2] = 75;
   $$0 = -1;
   STACKTOP = sp;return ($$0|0);
  }
 } else {
  $$01 = $s;$$02 = $n;
 }
 $4 = $$01;
 $5 = (-2 - ($4))|0;
 $6 = ($$02>>>0)>($5>>>0);
 $$$02 = $6 ? $5 : $$02;
 $7 = ((($f)) + 48|0);
 HEAP32[$7>>2] = $$$02;
 $8 = ((($f)) + 20|0);
 HEAP32[$8>>2] = $$01;
 $9 = ((($f)) + 44|0);
 HEAP32[$9>>2] = $$01;
 $10 = (($$01) + ($$$02)|0);
 $11 = ((($f)) + 16|0);
 HEAP32[$11>>2] = $10;
 $12 = ((($f)) + 28|0);
 HEAP32[$12>>2] = $10;
 $13 = (_MUSL_vfprintf($f,$fmt,$ap)|0);
 $14 = ($$$02|0)==(0);
 if ($14) {
  $$0 = $13;
  STACKTOP = sp;return ($$0|0);
 }
 $15 = HEAP32[$8>>2]|0;
 $16 = HEAP32[$11>>2]|0;
 $17 = ($15|0)==($16|0);
 $18 = $17 << 31 >> 31;
 $19 = (($15) + ($18)|0);
 HEAP8[$19>>0] = 0;
 $$0 = $13;
 STACKTOP = sp;return ($$0|0);
}
function _atof($s) {
 $s = $s|0;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_strtod($s,0));
 return (+$0);
}
function _strtod($s,$p) {
 $s = $s|0;
 $p = $p|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $f$i = 0, dest = 0, label = 0;
 var sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $f$i = sp;
 dest=$f$i; stop=dest+112|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $0 = ((($f$i)) + 4|0);
 HEAP32[$0>>2] = $s;
 $1 = ((($f$i)) + 8|0);
 HEAP32[$1>>2] = (-1);
 $2 = ((($f$i)) + 44|0);
 HEAP32[$2>>2] = $s;
 $3 = ((($f$i)) + 76|0);
 HEAP32[$3>>2] = -1;
 ___shlim($f$i,0);
 $4 = (+___floatscan($f$i,1,1));
 $5 = ((($f$i)) + 108|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = HEAP32[$0>>2]|0;
 $8 = HEAP32[$1>>2]|0;
 $9 = $7;
 $10 = $8;
 $11 = (($9) - ($10))|0;
 $12 = (($11) + ($6))|0;
 $13 = ($p|0)==(0|0);
 if ($13) {
  STACKTOP = sp;return (+$4);
 }
 $14 = ($12|0)!=(0);
 $15 = (($s) + ($12)|0);
 $16 = $14 ? $15 : $s;
 HEAP32[$p>>2] = $16;
 STACKTOP = sp;return (+$4);
}
function _strtold_l($s,$p,$loc) {
 $s = $s|0;
 $p = $p|0;
 $loc = $loc|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $f$i$i = 0, dest = 0, label = 0;
 var sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $f$i$i = sp;
 dest=$f$i$i; stop=dest+112|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $0 = ((($f$i$i)) + 4|0);
 HEAP32[$0>>2] = $s;
 $1 = ((($f$i$i)) + 8|0);
 HEAP32[$1>>2] = (-1);
 $2 = ((($f$i$i)) + 44|0);
 HEAP32[$2>>2] = $s;
 $3 = ((($f$i$i)) + 76|0);
 HEAP32[$3>>2] = -1;
 ___shlim($f$i$i,0);
 $4 = (+___floatscan($f$i$i,2,1));
 $5 = ((($f$i$i)) + 108|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = HEAP32[$0>>2]|0;
 $8 = HEAP32[$1>>2]|0;
 $9 = $7;
 $10 = $8;
 $11 = (($9) - ($10))|0;
 $12 = (($11) + ($6))|0;
 $13 = ($p|0)==(0|0);
 if ($13) {
  STACKTOP = sp;return (+$4);
 }
 $14 = ($12|0)!=(0);
 $15 = (($s) + ($12)|0);
 $16 = $14 ? $15 : $s;
 HEAP32[$p>>2] = $16;
 STACKTOP = sp;return (+$4);
}
function _strtoull($s,$p,$base) {
 $s = $s|0;
 $p = $p|0;
 $base = $base|0;
 var $$sink$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $f$i = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $f$i = sp;
 HEAP32[$f$i>>2] = 0;
 $0 = ((($f$i)) + 4|0);
 HEAP32[$0>>2] = $s;
 $1 = ((($f$i)) + 44|0);
 HEAP32[$1>>2] = $s;
 $2 = ($s|0)<(0|0);
 $3 = ((($s)) + 2147483647|0);
 $$sink$i = $2 ? (-1) : $3;
 $4 = ((($f$i)) + 8|0);
 HEAP32[$4>>2] = $$sink$i;
 $5 = ((($f$i)) + 76|0);
 HEAP32[$5>>2] = -1;
 ___shlim($f$i,0);
 $6 = (___intscan($f$i,$base,1,-1,-1)|0);
 $7 = tempRet0;
 $8 = ($p|0)==(0|0);
 if ($8) {
  tempRet0 = ($7);
  STACKTOP = sp;return ($6|0);
 }
 $9 = ((($f$i)) + 108|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAP32[$0>>2]|0;
 $12 = HEAP32[$4>>2]|0;
 $13 = $11;
 $14 = $12;
 $15 = (($13) + ($10))|0;
 $16 = (($15) - ($14))|0;
 $17 = (($s) + ($16)|0);
 HEAP32[$p>>2] = $17;
 tempRet0 = ($7);
 STACKTOP = sp;return ($6|0);
}
function _strtoll($s,$p,$base) {
 $s = $s|0;
 $p = $p|0;
 $base = $base|0;
 var $$sink$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $f$i = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $f$i = sp;
 HEAP32[$f$i>>2] = 0;
 $0 = ((($f$i)) + 4|0);
 HEAP32[$0>>2] = $s;
 $1 = ((($f$i)) + 44|0);
 HEAP32[$1>>2] = $s;
 $2 = ($s|0)<(0|0);
 $3 = ((($s)) + 2147483647|0);
 $$sink$i = $2 ? (-1) : $3;
 $4 = ((($f$i)) + 8|0);
 HEAP32[$4>>2] = $$sink$i;
 $5 = ((($f$i)) + 76|0);
 HEAP32[$5>>2] = -1;
 ___shlim($f$i,0);
 $6 = (___intscan($f$i,$base,1,0,-2147483648)|0);
 $7 = tempRet0;
 $8 = ($p|0)==(0|0);
 if ($8) {
  tempRet0 = ($7);
  STACKTOP = sp;return ($6|0);
 }
 $9 = ((($f$i)) + 108|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAP32[$0>>2]|0;
 $12 = HEAP32[$4>>2]|0;
 $13 = $11;
 $14 = $12;
 $15 = (($13) + ($10))|0;
 $16 = (($15) - ($14))|0;
 $17 = (($s) + ($16)|0);
 HEAP32[$p>>2] = $17;
 tempRet0 = ($7);
 STACKTOP = sp;return ($6|0);
}
function _memchr($src,$c,$n) {
 $src = $src|0;
 $c = $c|0;
 $n = $n|0;
 var $$0$lcssa = 0, $$0$lcssa44 = 0, $$019 = 0, $$1$lcssa = 0, $$110 = 0, $$110$lcssa = 0, $$24 = 0, $$3 = 0, $$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond18 = 0, $s$0$lcssa = 0, $s$0$lcssa43 = 0, $s$020 = 0, $s$15 = 0, $s$2 = 0, $w$0$lcssa = 0, $w$011 = 0, $w$011$lcssa = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $c & 255;
 $1 = $src;
 $2 = $1 & 3;
 $3 = ($2|0)!=(0);
 $4 = ($n|0)!=(0);
 $or$cond18 = $4 & $3;
 L1: do {
  if ($or$cond18) {
   $5 = $c&255;
   $$019 = $n;$s$020 = $src;
   while(1) {
    $6 = HEAP8[$s$020>>0]|0;
    $7 = ($6<<24>>24)==($5<<24>>24);
    if ($7) {
     $$0$lcssa44 = $$019;$s$0$lcssa43 = $s$020;
     label = 6;
     break L1;
    }
    $8 = ((($s$020)) + 1|0);
    $9 = (($$019) + -1)|0;
    $10 = $8;
    $11 = $10 & 3;
    $12 = ($11|0)!=(0);
    $13 = ($9|0)!=(0);
    $or$cond = $13 & $12;
    if ($or$cond) {
     $$019 = $9;$s$020 = $8;
    } else {
     $$0$lcssa = $9;$$lcssa = $13;$s$0$lcssa = $8;
     label = 5;
     break;
    }
   }
  } else {
   $$0$lcssa = $n;$$lcssa = $4;$s$0$lcssa = $src;
   label = 5;
  }
 } while(0);
 if ((label|0) == 5) {
  if ($$lcssa) {
   $$0$lcssa44 = $$0$lcssa;$s$0$lcssa43 = $s$0$lcssa;
   label = 6;
  } else {
   $$3 = 0;$s$2 = $s$0$lcssa;
  }
 }
 L8: do {
  if ((label|0) == 6) {
   $14 = HEAP8[$s$0$lcssa43>>0]|0;
   $15 = $c&255;
   $16 = ($14<<24>>24)==($15<<24>>24);
   if ($16) {
    $$3 = $$0$lcssa44;$s$2 = $s$0$lcssa43;
   } else {
    $17 = Math_imul($0, 16843009)|0;
    $18 = ($$0$lcssa44>>>0)>(3);
    L11: do {
     if ($18) {
      $$110 = $$0$lcssa44;$w$011 = $s$0$lcssa43;
      while(1) {
       $19 = HEAP32[$w$011>>2]|0;
       $20 = $19 ^ $17;
       $21 = (($20) + -16843009)|0;
       $22 = $20 & -2139062144;
       $23 = $22 ^ -2139062144;
       $24 = $23 & $21;
       $25 = ($24|0)==(0);
       if (!($25)) {
        $$110$lcssa = $$110;$w$011$lcssa = $w$011;
        break;
       }
       $26 = ((($w$011)) + 4|0);
       $27 = (($$110) + -4)|0;
       $28 = ($27>>>0)>(3);
       if ($28) {
        $$110 = $27;$w$011 = $26;
       } else {
        $$1$lcssa = $27;$w$0$lcssa = $26;
        label = 11;
        break L11;
       }
      }
      $$24 = $$110$lcssa;$s$15 = $w$011$lcssa;
     } else {
      $$1$lcssa = $$0$lcssa44;$w$0$lcssa = $s$0$lcssa43;
      label = 11;
     }
    } while(0);
    if ((label|0) == 11) {
     $29 = ($$1$lcssa|0)==(0);
     if ($29) {
      $$3 = 0;$s$2 = $w$0$lcssa;
      break;
     } else {
      $$24 = $$1$lcssa;$s$15 = $w$0$lcssa;
     }
    }
    while(1) {
     $30 = HEAP8[$s$15>>0]|0;
     $31 = ($30<<24>>24)==($15<<24>>24);
     if ($31) {
      $$3 = $$24;$s$2 = $s$15;
      break L8;
     }
     $32 = ((($s$15)) + 1|0);
     $33 = (($$24) + -1)|0;
     $34 = ($33|0)==(0);
     if ($34) {
      $$3 = 0;$s$2 = $32;
      break;
     } else {
      $$24 = $33;$s$15 = $32;
     }
    }
   }
  }
 } while(0);
 $35 = ($$3|0)!=(0);
 $36 = $35 ? $s$2 : 0;
 return ($36|0);
}
function _scanexp($f,$pok) {
 $f = $f|0;
 $pok = $pok|0;
 var $$lcssa22 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $c$0 = 0, $c$1$be = 0, $c$1$be$lcssa = 0, $c$112 = 0, $c$2$be = 0, $c$2$lcssa = 0, $c$27 = 0, $c$3$be = 0, $neg$0 = 0, $or$cond3 = 0, $x$013 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($f)) + 100|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($1>>>0)<($3>>>0);
 if ($4) {
  $5 = ((($1)) + 1|0);
  HEAP32[$0>>2] = $5;
  $6 = HEAP8[$1>>0]|0;
  $7 = $6&255;
  $9 = $7;
 } else {
  $8 = (___shgetc($f)|0);
  $9 = $8;
 }
 $10 = ($9|0)==(45);
 if ((($9|0) == 43) | (($9|0) == 45)) {
  $11 = $10&1;
  $12 = HEAP32[$0>>2]|0;
  $13 = HEAP32[$2>>2]|0;
  $14 = ($12>>>0)<($13>>>0);
  if ($14) {
   $15 = ((($12)) + 1|0);
   HEAP32[$0>>2] = $15;
   $16 = HEAP8[$12>>0]|0;
   $17 = $16&255;
   $20 = $17;
  } else {
   $18 = (___shgetc($f)|0);
   $20 = $18;
  }
  $19 = (($20) + -48)|0;
  $21 = ($19>>>0)>(9);
  $22 = ($pok|0)!=(0);
  $or$cond3 = $22 & $21;
  if ($or$cond3) {
   $23 = HEAP32[$2>>2]|0;
   $24 = ($23|0)==(0|0);
   if ($24) {
    $c$0 = $20;$neg$0 = $11;
   } else {
    $25 = HEAP32[$0>>2]|0;
    $26 = ((($25)) + -1|0);
    HEAP32[$0>>2] = $26;
    $c$0 = $20;$neg$0 = $11;
   }
  } else {
   $c$0 = $20;$neg$0 = $11;
  }
 } else {
  $c$0 = $9;$neg$0 = 0;
 }
 $27 = (($c$0) + -48)|0;
 $28 = ($27>>>0)>(9);
 if ($28) {
  $29 = HEAP32[$2>>2]|0;
  $30 = ($29|0)==(0|0);
  if ($30) {
   $98 = -2147483648;$99 = 0;
   tempRet0 = ($98);
   return ($99|0);
  }
  $31 = HEAP32[$0>>2]|0;
  $32 = ((($31)) + -1|0);
  HEAP32[$0>>2] = $32;
  $98 = -2147483648;$99 = 0;
  tempRet0 = ($98);
  return ($99|0);
 } else {
  $c$112 = $c$0;$x$013 = 0;
 }
 while(1) {
  $33 = ($x$013*10)|0;
  $34 = (($c$112) + -48)|0;
  $35 = (($34) + ($33))|0;
  $36 = HEAP32[$0>>2]|0;
  $37 = HEAP32[$2>>2]|0;
  $38 = ($36>>>0)<($37>>>0);
  if ($38) {
   $39 = ((($36)) + 1|0);
   HEAP32[$0>>2] = $39;
   $40 = HEAP8[$36>>0]|0;
   $41 = $40&255;
   $c$1$be = $41;
  } else {
   $42 = (___shgetc($f)|0);
   $c$1$be = $42;
  }
  $43 = (($c$1$be) + -48)|0;
  $44 = ($43>>>0)<(10);
  $45 = ($35|0)<(214748364);
  $46 = $44 & $45;
  if ($46) {
   $c$112 = $c$1$be;$x$013 = $35;
  } else {
   $$lcssa22 = $35;$c$1$be$lcssa = $c$1$be;
   break;
  }
 }
 $47 = ($$lcssa22|0)<(0);
 $48 = $47 << 31 >> 31;
 $49 = (($c$1$be$lcssa) + -48)|0;
 $50 = ($49>>>0)<(10);
 if ($50) {
  $53 = $$lcssa22;$54 = $48;$c$27 = $c$1$be$lcssa;
  while(1) {
   $55 = (___muldi3(($53|0),($54|0),10,0)|0);
   $56 = tempRet0;
   $57 = ($c$27|0)<(0);
   $58 = $57 << 31 >> 31;
   $59 = (_i64Add(($c$27|0),($58|0),-48,-1)|0);
   $60 = tempRet0;
   $61 = (_i64Add(($59|0),($60|0),($55|0),($56|0))|0);
   $62 = tempRet0;
   $63 = HEAP32[$0>>2]|0;
   $64 = HEAP32[$2>>2]|0;
   $65 = ($63>>>0)<($64>>>0);
   if ($65) {
    $66 = ((($63)) + 1|0);
    HEAP32[$0>>2] = $66;
    $67 = HEAP8[$63>>0]|0;
    $68 = $67&255;
    $c$2$be = $68;
   } else {
    $69 = (___shgetc($f)|0);
    $c$2$be = $69;
   }
   $70 = (($c$2$be) + -48)|0;
   $71 = ($70>>>0)<(10);
   $72 = ($62|0)<(21474836);
   $73 = ($61>>>0)<(2061584302);
   $74 = ($62|0)==(21474836);
   $75 = $74 & $73;
   $76 = $72 | $75;
   $77 = $71 & $76;
   if ($77) {
    $53 = $61;$54 = $62;$c$27 = $c$2$be;
   } else {
    $92 = $61;$93 = $62;$c$2$lcssa = $c$2$be;
    break;
   }
  }
 } else {
  $92 = $$lcssa22;$93 = $48;$c$2$lcssa = $c$1$be$lcssa;
 }
 $51 = (($c$2$lcssa) + -48)|0;
 $52 = ($51>>>0)<(10);
 if ($52) {
  while(1) {
   $78 = HEAP32[$0>>2]|0;
   $79 = HEAP32[$2>>2]|0;
   $80 = ($78>>>0)<($79>>>0);
   if ($80) {
    $81 = ((($78)) + 1|0);
    HEAP32[$0>>2] = $81;
    $82 = HEAP8[$78>>0]|0;
    $83 = $82&255;
    $c$3$be = $83;
   } else {
    $84 = (___shgetc($f)|0);
    $c$3$be = $84;
   }
   $85 = (($c$3$be) + -48)|0;
   $86 = ($85>>>0)<(10);
   if (!($86)) {
    break;
   }
  }
 }
 $87 = HEAP32[$2>>2]|0;
 $88 = ($87|0)==(0|0);
 if (!($88)) {
  $89 = HEAP32[$0>>2]|0;
  $90 = ((($89)) + -1|0);
  HEAP32[$0>>2] = $90;
 }
 $91 = ($neg$0|0)!=(0);
 $94 = (_i64Subtract(0,0,($92|0),($93|0))|0);
 $95 = tempRet0;
 $96 = $91 ? $94 : $92;
 $97 = $91 ? $95 : $93;
 $98 = $97;$99 = $96;
 tempRet0 = ($98);
 return ($99|0);
}
function _printf_core($f,$fmt,$ap,$nl_arg,$nl_type) {
 $f = $f|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 $nl_arg = $nl_arg|0;
 $nl_type = $nl_type|0;
 var $$ = 0, $$$i = 0, $$0 = 0, $$0$i = 0, $$0$lcssa$i = 0, $$0$lcssa$i$i = 0, $$0$lcssa$i104$i = 0, $$0$lcssa$i128$i = 0, $$0$lcssa$i143$i = 0, $$0$lcssa$i39$i = 0, $$0$lcssa$i46 = 0, $$0$lcssa$i46$i = 0, $$0$lcssa$i48$i = 0, $$0$lcssa$i51 = 0, $$0$lcssa$i53 = 0, $$0$lcssa$i56$i = 0, $$0$lcssa$i61 = 0, $$0$lcssa$i63$i = 0, $$0$lcssa$i68 = 0, $$0$lcssa$i69$i = 0;
 var $$0$lcssa$i75 = 0, $$0$lcssa$i76$i = 0, $$0$lcssa$i84$i = 0, $$0$lcssa$i85 = 0, $$0$lcssa$i97$i = 0, $$01$i = 0, $$01$i$i = 0, $$01$i102$i = 0, $$01$i126$i = 0, $$01$i141$i = 0, $$01$i37$i = 0, $$01$i44 = 0, $$01$i44$i = 0, $$01$i54$i = 0, $$01$i59 = 0, $$01$i61$i = 0, $$01$i66 = 0, $$01$i67$i = 0, $$01$i73 = 0, $$01$i74$i = 0;
 var $$01$i83 = 0, $$01$i95$i = 0, $$01$lcssa$off0$i = 0, $$01$lcssa$off0$i$i = 0, $$01$lcssa$off0$i85$i = 0, $$012$i = 0, $$013$i = 0, $$03$i48 = 0, $$05$i = 0, $$05$i$i = 0, $$05$i79$i = 0, $$07$i = 0.0, $$1$i = 0.0, $$1$lcssa$i$i = 0, $$1$lcssa$i112$i = 0, $$114$i = 0, $$12$i = 0, $$12$i$i = 0, $$12$i110$i = 0, $$12$i119$i = 0;
 var $$12$i134$i = 0, $$12$i134$i$lcssa = 0, $$12$i87$i = 0, $$2$i = 0.0, $$2$us$i = 0.0, $$2$us$us$i = 0.0, $$20$i = 0.0, $$21$i = 0, $$210$$22$i = 0, $$210$$24$i = 0, $$210$i = 0, $$23$i = 0, $$24 = 0, $$25 = 0, $$3$i = 0.0, $$31$i = 0, $$311$i = 0, $$4$i = 0.0, $$412$lcssa$i = 0, $$412184$i = 0;
 var $$5196$i = 0, $$92 = 0, $$a$3$i = 0, $$a$3$us$i = 0, $$a$3$us303$i = 0, $$a$3$us304$i = 0, $$a$3305$i = 0, $$a$3306$i = 0, $$fl$4 = 0, $$l10n$0 = 0, $$lcssa106 = 0, $$lcssa275$i = 0, $$lcssa450 = 0, $$lcssa451 = 0, $$lcssa455 = 0, $$lcssa457 = 0, $$lcssa458 = 0, $$lcssa459 = 0, $$lcssa460 = 0, $$lcssa461 = 0;
 var $$lcssa463 = 0, $$lcssa464 = 0, $$lcssa470 = 0, $$lcssa474 = 0, $$lcssa476 = 0, $$lcssa479 = 0, $$lcssa480 = 0, $$lcssa483 = 0.0, $$lcssa484 = 0, $$lcssa487 = 0, $$lcssa491 = 0, $$mask$i = 0, $$mask$i38 = 0, $$mask1$i = 0, $$mask1$i37 = 0, $$neg151$i = 0, $$neg152$i = 0, $$p$$i = 0, $$p$5 = 0, $$p$i = 0;
 var $$pn$i = 0, $$pr$i = 0, $$pr146$i = 0, $$pre = 0, $$pre$i = 0, $$pre$phi302$iZ2D = 0, $$pre270 = 0, $$pre300$i = 0, $$pre301$i = 0, $$sum$i = 0, $$sum15$i = 0, $$sum16$i = 0, $$z$3$i = 0, $$z$4$i = 0, $$z$4$us$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0;
 var $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0;
 var $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0;
 var $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0;
 var $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0, $1071 = 0, $1072 = 0, $1073 = 0;
 var $1074 = 0, $1075 = 0, $1076 = 0, $1077 = 0, $1078 = 0, $1079 = 0, $108 = 0, $1080 = 0, $1081 = 0, $1082 = 0, $1083 = 0, $1084 = 0, $1085 = 0, $1086 = 0, $1087 = 0, $1088 = 0, $1089 = 0, $109 = 0, $1090 = 0, $1091 = 0;
 var $1092 = 0, $1093 = 0, $1094 = 0, $1095 = 0, $1096 = 0, $1097 = 0, $1098 = 0, $1099 = 0, $11 = 0, $110 = 0, $1100 = 0, $1101 = 0, $1102 = 0, $1103 = 0, $1104 = 0, $1105 = 0, $1106 = 0, $1107 = 0, $1108 = 0, $1109 = 0;
 var $111 = 0, $1110 = 0, $1111 = 0, $1112 = 0, $1113 = 0, $1114 = 0, $1115 = 0, $1116 = 0, $1117 = 0, $1118 = 0, $1119 = 0, $112 = 0, $1120 = 0, $1121 = 0, $1122 = 0, $1123 = 0, $1124 = 0, $1125 = 0, $1126 = 0, $1127 = 0;
 var $1128 = 0, $1129 = 0, $113 = 0, $1130 = 0, $1131 = 0, $1132 = 0, $1133 = 0, $1134 = 0, $1135 = 0, $1136 = 0, $1137 = 0, $1138 = 0, $1139 = 0, $114 = 0, $1140 = 0, $1141 = 0, $1142 = 0, $1143 = 0, $1144 = 0, $1145 = 0;
 var $1146 = 0, $1147 = 0, $1148 = 0, $1149 = 0, $115 = 0, $1150 = 0, $1151 = 0, $1152 = 0, $1153 = 0, $1154 = 0.0, $1155 = 0, $1156 = 0, $1157 = 0, $1158 = 0, $1159 = 0, $116 = 0, $1160 = 0, $1161 = 0.0, $1162 = 0, $1163 = 0;
 var $1164 = 0, $1165 = 0, $1166 = 0, $1167 = 0, $1168 = 0, $1169 = 0, $1169$phi = 0, $117 = 0, $1170 = 0, $1170$phi = 0, $1171 = 0, $1172 = 0, $1173 = 0, $1174 = 0, $1175 = 0, $1176 = 0, $1177 = 0, $1178 = 0, $1179 = 0, $118 = 0;
 var $1180 = 0, $1181 = 0, $1182 = 0, $1183 = 0, $1184 = 0, $1185 = 0, $1186 = 0, $1187 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0;
 var $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0;
 var $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0;
 var $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0;
 var $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0;
 var $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0;
 var $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0;
 var $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0.0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0.0, $253 = 0, $254 = 0, $255 = 0;
 var $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0;
 var $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0;
 var $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0;
 var $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0;
 var $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0;
 var $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0;
 var $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0;
 var $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0;
 var $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0;
 var $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0.0, $431 = 0, $432 = 0.0, $433 = 0, $434 = 0, $435 = 0;
 var $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0;
 var $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0.0;
 var $472 = 0.0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0.0, $488 = 0, $489 = 0, $49 = 0;
 var $490 = 0, $491 = 0.0, $492 = 0.0, $493 = 0.0, $494 = 0.0, $495 = 0.0, $496 = 0.0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0;
 var $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0;
 var $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0;
 var $544 = 0.0, $545 = 0.0, $546 = 0.0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0.0, $56 = 0, $560 = 0.0, $561 = 0.0;
 var $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0.0, $575 = 0.0, $576 = 0.0, $577 = 0, $578 = 0, $579 = 0, $58 = 0;
 var $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0;
 var $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0;
 var $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0.0, $632 = 0, $633 = 0;
 var $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0.0, $64 = 0, $640 = 0.0, $641 = 0.0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0;
 var $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0;
 var $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0;
 var $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0;
 var $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0;
 var $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0;
 var $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0;
 var $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0;
 var $779 = 0, $78 = 0, $780 = 0.0, $781 = 0.0, $782 = 0, $783 = 0.0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0;
 var $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0;
 var $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0;
 var $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0;
 var $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0;
 var $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0;
 var $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0;
 var $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0;
 var $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0;
 var $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0;
 var $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0;
 var $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0;
 var $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $a$0 = 0, $a$1 = 0, $a$1$lcssa$i = 0, $a$1253$i = 0, $a$2 = 0, $a$2$ph$i = 0, $a$3$lcssa$i = 0, $a$3240$i = 0, $a$3240$us$i = 0, $a$5$lcssa$i = 0, $a$5215$i = 0, $a$6$i = 0, $a$7$i = 0, $a$8$ph$i = 0, $arglist_current = 0;
 var $arglist_current11 = 0, $arglist_current14 = 0, $arglist_current17 = 0, $arglist_current2 = 0, $arglist_current20 = 0, $arglist_current23 = 0, $arglist_current26 = 0, $arglist_current29 = 0, $arglist_current32 = 0, $arglist_current35 = 0, $arglist_current38 = 0, $arglist_current41 = 0, $arglist_current44 = 0, $arglist_current47 = 0, $arglist_current5 = 0, $arglist_current50 = 0, $arglist_current53 = 0, $arglist_current56 = 0, $arglist_current59 = 0, $arglist_current62 = 0;
 var $arglist_current8 = 0, $arglist_next = 0, $arglist_next12 = 0, $arglist_next15 = 0, $arglist_next18 = 0, $arglist_next21 = 0, $arglist_next24 = 0, $arglist_next27 = 0, $arglist_next3 = 0, $arglist_next30 = 0, $arglist_next33 = 0, $arglist_next36 = 0, $arglist_next39 = 0, $arglist_next42 = 0, $arglist_next45 = 0, $arglist_next48 = 0, $arglist_next51 = 0, $arglist_next54 = 0, $arglist_next57 = 0, $arglist_next6 = 0;
 var $arglist_next60 = 0, $arglist_next63 = 0, $arglist_next9 = 0, $argpos$0 = 0, $big$i = 0, $buf = 0, $buf$i = 0, $carry$0246$i = 0, $carry3$0234$i = 0, $carry3$0234$us$i = 0, $cnt$0 = 0, $cnt$1 = 0, $cnt$1$lcssa = 0, $d$0$i = 0, $d$0245$i = 0, $d$0247$i = 0, $d$1233$i = 0, $d$1233$us$i = 0, $d$2$lcssa$i = 0, $d$2214$i = 0;
 var $d$3$i = 0, $d$4191$i = 0, $d$5183$i = 0, $d$6195$i = 0, $e$0229$i = 0, $e$1$i = 0, $e$2210$i = 0, $e$3$i = 0, $e$4$ph$i = 0, $e2$i = 0, $ebuf0$i = 0, $estr$0$i = 0, $estr$1$lcssa$i = 0, $estr$1$ph$i = 0, $estr$1201$i = 0, $estr$2$i = 0, $exitcond$i = 0, $expanded = 0, $expanded101 = 0, $expanded102 = 0;
 var $expanded103 = 0, $expanded105 = 0, $expanded106 = 0, $expanded108 = 0, $expanded109 = 0, $expanded110 = 0, $expanded112 = 0, $expanded113 = 0, $expanded115 = 0, $expanded116 = 0, $expanded117 = 0, $expanded119 = 0, $expanded120 = 0, $expanded122 = 0, $expanded123 = 0, $expanded124 = 0, $expanded126 = 0, $expanded127 = 0, $expanded129 = 0, $expanded130 = 0;
 var $expanded131 = 0, $expanded133 = 0, $expanded134 = 0, $expanded136 = 0, $expanded137 = 0, $expanded138 = 0, $expanded140 = 0, $expanded141 = 0, $expanded143 = 0, $expanded144 = 0, $expanded145 = 0, $expanded147 = 0, $expanded148 = 0, $expanded150 = 0, $expanded151 = 0, $expanded152 = 0, $expanded154 = 0, $expanded155 = 0, $expanded157 = 0, $expanded158 = 0;
 var $expanded159 = 0, $expanded161 = 0, $expanded162 = 0, $expanded164 = 0, $expanded165 = 0, $expanded166 = 0, $expanded168 = 0, $expanded169 = 0, $expanded171 = 0, $expanded172 = 0, $expanded173 = 0, $expanded175 = 0, $expanded176 = 0, $expanded178 = 0, $expanded179 = 0, $expanded180 = 0, $expanded182 = 0, $expanded183 = 0, $expanded185 = 0, $expanded186 = 0;
 var $expanded187 = 0, $expanded189 = 0, $expanded190 = 0, $expanded192 = 0, $expanded193 = 0, $expanded194 = 0, $expanded196 = 0, $expanded197 = 0, $expanded199 = 0, $expanded200 = 0, $expanded201 = 0, $expanded203 = 0, $expanded204 = 0, $expanded206 = 0, $expanded207 = 0, $expanded208 = 0, $expanded210 = 0, $expanded211 = 0, $expanded213 = 0, $expanded214 = 0;
 var $expanded215 = 0, $expanded64 = 0, $expanded66 = 0, $expanded67 = 0, $expanded68 = 0, $expanded70 = 0, $expanded71 = 0, $expanded73 = 0, $expanded74 = 0, $expanded75 = 0, $expanded77 = 0, $expanded78 = 0, $expanded80 = 0, $expanded81 = 0, $expanded82 = 0, $expanded84 = 0, $expanded85 = 0, $expanded87 = 0, $expanded88 = 0, $expanded89 = 0;
 var $expanded91 = 0, $expanded92 = 0, $expanded94 = 0, $expanded95 = 0, $expanded96 = 0, $expanded98 = 0, $expanded99 = 0, $fl$0110 = 0, $fl$0170 = 0, $fl$1 = 0, $fl$1$ = 0, $fl$3 = 0, $fl$4 = 0, $fl$6 = 0, $i$0$lcssa = 0, $i$0$lcssa273 = 0, $i$0175 = 0, $i$0228$i = 0, $i$03$i = 0, $i$03$i30 = 0;
 var $i$1$lcssa$i = 0, $i$1186 = 0, $i$1222$i = 0, $i$2162 = 0, $i$2162$lcssa = 0, $i$2209$i = 0, $i$3160 = 0, $i$3205$i = 0, $isdigit = 0, $isdigit$i = 0, $isdigit$i32 = 0, $isdigit10 = 0, $isdigit12 = 0, $isdigit2$i = 0, $isdigit2$i28 = 0, $isdigittmp = 0, $isdigittmp$ = 0, $isdigittmp$i = 0, $isdigittmp$i31 = 0, $isdigittmp1$i = 0;
 var $isdigittmp1$i27 = 0, $isdigittmp11 = 0, $isdigittmp4$i = 0, $isdigittmp4$i29 = 0, $isdigittmp9 = 0, $j$0$i = 0, $j$0221$i = 0, $j$0223$i = 0, $j$1206$i = 0, $j$2$i = 0, $l$0 = 0, $l$0$i = 0, $l$1$i = 0, $l$1174 = 0, $l$2 = 0, $l10n$0 = 0, $l10n$0$lcssa = 0, $l10n$0$phi = 0, $l10n$1 = 0, $l10n$2 = 0;
 var $l10n$3 = 0, $mb = 0, $notlhs$us$us$i = 0, $notrhs$i = 0, $or$cond = 0, $or$cond$i = 0, $or$cond$i$i = 0, $or$cond$i100$i = 0, $or$cond$i35$i = 0, $or$cond$i42$i = 0, $or$cond$i52$i = 0, $or$cond$i57 = 0, $or$cond$i59$i = 0, $or$cond$i64 = 0, $or$cond$i71 = 0, $or$cond$i72$i = 0, $or$cond$i79 = 0, $or$cond$i81 = 0, $or$cond$i93$i = 0, $or$cond15 = 0;
 var $or$cond19 = 0, $or$cond22 = 0, $or$cond29$i = 0, $or$cond332 = 0, $or$cond6$i = 0, $p$0 = 0, $p$1 = 0, $p$2 = 0, $p$2$ = 0, $p$3 = 0, $p$4272 = 0, $p$5 = 0, $pad$i = 0, $pl$0 = 0, $pl$0$i = 0, $pl$1 = 0, $pl$1$i = 0, $pl$2 = 0, $prefix$0 = 0, $prefix$0$$i = 0;
 var $prefix$0$i = 0, $prefix$1 = 0, $prefix$2 = 0, $r$0$a$8$i = 0, $re$1179$i = 0, $round$0178$i = 0.0, $round6$1$i = 0.0, $s$0$i = 0, $s$0$us$i = 0, $s$0$us$us$i = 0, $s$1$i = 0, $s$1$lcssa$i = 0, $s$1$us$i = 0, $s$1$us$us$i = 0, $s1$0$i = 0, $s7$0188$i = 0, $s7$1$i = 0, $s8$0$lcssa$i = 0, $s8$0180$i = 0, $s9$0$i = 0;
 var $s9$1192$i = 0, $s9$2$i = 0, $sext = 0, $sext93 = 0, $small$0$i = 0.0, $small$1$i = 0.0, $st$0 = 0, $st$0$lcssa456 = 0, $storemerge = 0, $storemerge13 = 0, $storemerge8108 = 0, $storemerge8169 = 0, $t$0 = 0, $t$1 = 0, $w$$i = 0, $w$0 = 0, $w$1 = 0, $w$2 = 0, $w$30$i = 0, $wc = 0;
 var $ws$0176 = 0, $ws$1187 = 0, $y$03$i = 0, $y$03$i$i = 0, $y$03$i109$i = 0, $y$03$i118$i = 0, $y$03$i133$i = 0, $y$03$i86$i = 0, $z$0$i = 0, $z$0$lcssa = 0, $z$0163 = 0, $z$1 = 0, $z$1$lcssa$i = 0, $z$1252$i = 0, $z$2 = 0, $z$2$i = 0, $z$2$i$lcssa = 0, $z$3$lcssa$i = 0, $z$3239$i = 0, $z$3239$us$i = 0;
 var $z$4$i = 0, $z$4$us$i = 0, $z$6$$i = 0, $z$6$i = 0, $z$6$i$lcssa = 0, $z$6$ph$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 864|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $big$i = sp + 16|0;
 $e2$i = sp + 8|0;
 $buf$i = sp + 836|0;
 $0 = $buf$i;
 $ebuf0$i = sp + 824|0;
 $pad$i = sp + 568|0;
 $buf = sp + 528|0;
 $wc = sp;
 $mb = sp + 520|0;
 $1 = ($f|0)!=(0|0);
 $2 = ((($buf)) + 40|0);
 $3 = $2;
 $4 = ((($buf)) + 39|0);
 $5 = ((($wc)) + 4|0);
 $6 = $wc;
 $7 = ((($ebuf0$i)) + 12|0);
 $8 = ((($ebuf0$i)) + 11|0);
 $9 = $7;
 $10 = (($9) - ($0))|0;
 $11 = (-2 - ($0))|0;
 $12 = (($9) + 2)|0;
 $13 = ((($big$i)) + 288|0);
 $14 = ((($buf$i)) + 9|0);
 $15 = $14;
 $16 = ((($buf$i)) + 8|0);
 $1169 = 0;$1170 = 0;$23 = $fmt;$cnt$0 = 0;$l$0 = 0;$l10n$0 = 0;
 L1: while(1) {
  $17 = ($cnt$0|0)>(-1);
  do {
   if ($17) {
    $18 = (2147483647 - ($cnt$0))|0;
    $19 = ($l$0|0)>($18|0);
    if ($19) {
     $20 = (___errno_location()|0);
     HEAP32[$20>>2] = 75;
     $cnt$1 = -1;
     break;
    } else {
     $21 = (($l$0) + ($cnt$0))|0;
     $cnt$1 = $21;
     break;
    }
   } else {
    $cnt$1 = $cnt$0;
   }
  } while(0);
  $22 = HEAP8[$23>>0]|0;
  $24 = ($22<<24>>24)==(0);
  if ($24) {
   $cnt$1$lcssa = $cnt$1;$l10n$0$lcssa = $l10n$0;
   label = 344;
   break;
  } else {
   $1171 = $22;$26 = $23;
  }
  while(1) {
   if ((($1171<<24>>24) == 37)) {
    $28 = $26;$z$0163 = $26;
    label = 9;
    break;
   } else if ((($1171<<24>>24) == 0)) {
    $$lcssa106 = $26;$z$0$lcssa = $26;
    break;
   }
   $25 = ((($26)) + 1|0);
   $$pre = HEAP8[$25>>0]|0;
   $1171 = $$pre;$26 = $25;
  }
  L12: do {
   if ((label|0) == 9) {
    while(1) {
     label = 0;
     $27 = ((($28)) + 1|0);
     $29 = HEAP8[$27>>0]|0;
     $30 = ($29<<24>>24)==(37);
     if (!($30)) {
      $$lcssa106 = $28;$z$0$lcssa = $z$0163;
      break L12;
     }
     $31 = ((($z$0163)) + 1|0);
     $32 = ((($28)) + 2|0);
     $33 = HEAP8[$32>>0]|0;
     $34 = ($33<<24>>24)==(37);
     if ($34) {
      $28 = $32;$z$0163 = $31;
      label = 9;
     } else {
      $$lcssa106 = $32;$z$0$lcssa = $31;
      break;
     }
    }
   }
  } while(0);
  $35 = $z$0$lcssa;
  $36 = $23;
  $37 = (($35) - ($36))|0;
  if ($1) {
   (___fwritex($23,$37,$f)|0);
  }
  $38 = ($z$0$lcssa|0)==($23|0);
  if (!($38)) {
   $l10n$0$phi = $l10n$0;$1170$phi = $1170;$1169$phi = $1169;$23 = $$lcssa106;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$0$phi;$1170 = $1170$phi;$1169 = $1169$phi;
   continue;
  }
  $39 = ((($$lcssa106)) + 1|0);
  $40 = HEAP8[$39>>0]|0;
  $41 = $40 << 24 >> 24;
  $isdigittmp = (($41) + -48)|0;
  $isdigit = ($isdigittmp>>>0)<(10);
  if ($isdigit) {
   $42 = ((($$lcssa106)) + 2|0);
   $43 = HEAP8[$42>>0]|0;
   $44 = ($43<<24>>24)==(36);
   $45 = ((($$lcssa106)) + 3|0);
   $$92 = $44 ? $45 : $39;
   $$l10n$0 = $44 ? 1 : $l10n$0;
   $isdigittmp$ = $44 ? $isdigittmp : -1;
   $$pre270 = HEAP8[$$92>>0]|0;
   $47 = $$pre270;$argpos$0 = $isdigittmp$;$l10n$1 = $$l10n$0;$storemerge = $$92;
  } else {
   $47 = $40;$argpos$0 = -1;$l10n$1 = $l10n$0;$storemerge = $39;
  }
  $46 = $47 << 24 >> 24;
  $48 = $46 & -32;
  $49 = ($48|0)==(32);
  L24: do {
   if ($49) {
    $51 = $46;$56 = $47;$fl$0170 = 0;$storemerge8169 = $storemerge;
    while(1) {
     $50 = (($51) + -32)|0;
     $52 = 1 << $50;
     $53 = $52 & 75913;
     $54 = ($53|0)==(0);
     if ($54) {
      $65 = $56;$fl$0110 = $fl$0170;$storemerge8108 = $storemerge8169;
      break L24;
     }
     $55 = $56 << 24 >> 24;
     $57 = (($55) + -32)|0;
     $58 = 1 << $57;
     $59 = $58 | $fl$0170;
     $60 = ((($storemerge8169)) + 1|0);
     $61 = HEAP8[$60>>0]|0;
     $62 = $61 << 24 >> 24;
     $63 = $62 & -32;
     $64 = ($63|0)==(32);
     if ($64) {
      $51 = $62;$56 = $61;$fl$0170 = $59;$storemerge8169 = $60;
     } else {
      $65 = $61;$fl$0110 = $59;$storemerge8108 = $60;
      break;
     }
    }
   } else {
    $65 = $47;$fl$0110 = 0;$storemerge8108 = $storemerge;
   }
  } while(0);
  $66 = ($65<<24>>24)==(42);
  do {
   if ($66) {
    $67 = ((($storemerge8108)) + 1|0);
    $68 = HEAP8[$67>>0]|0;
    $69 = $68 << 24 >> 24;
    $isdigittmp11 = (($69) + -48)|0;
    $isdigit12 = ($isdigittmp11>>>0)<(10);
    if ($isdigit12) {
     $70 = ((($storemerge8108)) + 2|0);
     $71 = HEAP8[$70>>0]|0;
     $72 = ($71<<24>>24)==(36);
     if ($72) {
      $73 = (($nl_type) + ($isdigittmp11<<2)|0);
      HEAP32[$73>>2] = 10;
      $74 = HEAP8[$67>>0]|0;
      $75 = $74 << 24 >> 24;
      $76 = (($75) + -48)|0;
      $77 = (($nl_arg) + ($76<<3)|0);
      $78 = $77;
      $79 = $78;
      $80 = HEAP32[$79>>2]|0;
      $81 = (($78) + 4)|0;
      $82 = $81;
      $83 = HEAP32[$82>>2]|0;
      $84 = ((($storemerge8108)) + 3|0);
      $l10n$2 = 1;$storemerge13 = $84;$w$0 = $80;
     } else {
      label = 23;
     }
    } else {
     label = 23;
    }
    if ((label|0) == 23) {
     label = 0;
     $85 = ($l10n$1|0)==(0);
     if (!($85)) {
      $$0 = -1;
      label = 363;
      break L1;
     }
     if (!($1)) {
      $105 = $67;$fl$1 = $fl$0110;$l10n$3 = 0;$w$1 = 0;
      break;
     }
     $arglist_current = HEAP32[$ap>>2]|0;
     $86 = $arglist_current;
     $87 = ((0) + 4|0);
     $expanded64 = $87;
     $expanded = (($expanded64) - 1)|0;
     $88 = (($86) + ($expanded))|0;
     $89 = ((0) + 4|0);
     $expanded68 = $89;
     $expanded67 = (($expanded68) - 1)|0;
     $expanded66 = $expanded67 ^ -1;
     $90 = $88 & $expanded66;
     $91 = $90;
     $92 = HEAP32[$91>>2]|0;
     $arglist_next = ((($91)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next;
     $l10n$2 = 0;$storemerge13 = $67;$w$0 = $92;
    }
    $93 = ($w$0|0)<(0);
    if ($93) {
     $94 = $fl$0110 | 8192;
     $95 = (0 - ($w$0))|0;
     $105 = $storemerge13;$fl$1 = $94;$l10n$3 = $l10n$2;$w$1 = $95;
    } else {
     $105 = $storemerge13;$fl$1 = $fl$0110;$l10n$3 = $l10n$2;$w$1 = $w$0;
    }
   } else {
    $96 = $65 << 24 >> 24;
    $isdigittmp1$i = (($96) + -48)|0;
    $isdigit2$i = ($isdigittmp1$i>>>0)<(10);
    if ($isdigit2$i) {
     $100 = $storemerge8108;$i$03$i = 0;$isdigittmp4$i = $isdigittmp1$i;
     while(1) {
      $97 = ($i$03$i*10)|0;
      $98 = (($97) + ($isdigittmp4$i))|0;
      $99 = ((($100)) + 1|0);
      $101 = HEAP8[$99>>0]|0;
      $102 = $101 << 24 >> 24;
      $isdigittmp$i = (($102) + -48)|0;
      $isdigit$i = ($isdigittmp$i>>>0)<(10);
      if ($isdigit$i) {
       $100 = $99;$i$03$i = $98;$isdigittmp4$i = $isdigittmp$i;
      } else {
       $$lcssa450 = $98;$$lcssa451 = $99;
       break;
      }
     }
     $103 = ($$lcssa450|0)<(0);
     if ($103) {
      $$0 = -1;
      label = 363;
      break L1;
     } else {
      $105 = $$lcssa451;$fl$1 = $fl$0110;$l10n$3 = $l10n$1;$w$1 = $$lcssa450;
     }
    } else {
     $105 = $storemerge8108;$fl$1 = $fl$0110;$l10n$3 = $l10n$1;$w$1 = 0;
    }
   }
  } while(0);
  $104 = HEAP8[$105>>0]|0;
  $106 = ($104<<24>>24)==(46);
  L45: do {
   if ($106) {
    $107 = ((($105)) + 1|0);
    $108 = HEAP8[$107>>0]|0;
    $109 = ($108<<24>>24)==(42);
    if (!($109)) {
     $136 = $108 << 24 >> 24;
     $isdigittmp1$i27 = (($136) + -48)|0;
     $isdigit2$i28 = ($isdigittmp1$i27>>>0)<(10);
     if ($isdigit2$i28) {
      $140 = $107;$i$03$i30 = 0;$isdigittmp4$i29 = $isdigittmp1$i27;
     } else {
      $1172 = $107;$p$0 = 0;
      break;
     }
     while(1) {
      $137 = ($i$03$i30*10)|0;
      $138 = (($137) + ($isdigittmp4$i29))|0;
      $139 = ((($140)) + 1|0);
      $141 = HEAP8[$139>>0]|0;
      $142 = $141 << 24 >> 24;
      $isdigittmp$i31 = (($142) + -48)|0;
      $isdigit$i32 = ($isdigittmp$i31>>>0)<(10);
      if ($isdigit$i32) {
       $140 = $139;$i$03$i30 = $138;$isdigittmp4$i29 = $isdigittmp$i31;
      } else {
       $1172 = $139;$p$0 = $138;
       break L45;
      }
     }
    }
    $110 = ((($105)) + 2|0);
    $111 = HEAP8[$110>>0]|0;
    $112 = $111 << 24 >> 24;
    $isdigittmp9 = (($112) + -48)|0;
    $isdigit10 = ($isdigittmp9>>>0)<(10);
    if ($isdigit10) {
     $113 = ((($105)) + 3|0);
     $114 = HEAP8[$113>>0]|0;
     $115 = ($114<<24>>24)==(36);
     if ($115) {
      $116 = (($nl_type) + ($isdigittmp9<<2)|0);
      HEAP32[$116>>2] = 10;
      $117 = HEAP8[$110>>0]|0;
      $118 = $117 << 24 >> 24;
      $119 = (($118) + -48)|0;
      $120 = (($nl_arg) + ($119<<3)|0);
      $121 = $120;
      $122 = $121;
      $123 = HEAP32[$122>>2]|0;
      $124 = (($121) + 4)|0;
      $125 = $124;
      $126 = HEAP32[$125>>2]|0;
      $127 = ((($105)) + 4|0);
      $1172 = $127;$p$0 = $123;
      break;
     }
    }
    $128 = ($l10n$3|0)==(0);
    if (!($128)) {
     $$0 = -1;
     label = 363;
     break L1;
    }
    if ($1) {
     $arglist_current2 = HEAP32[$ap>>2]|0;
     $129 = $arglist_current2;
     $130 = ((0) + 4|0);
     $expanded71 = $130;
     $expanded70 = (($expanded71) - 1)|0;
     $131 = (($129) + ($expanded70))|0;
     $132 = ((0) + 4|0);
     $expanded75 = $132;
     $expanded74 = (($expanded75) - 1)|0;
     $expanded73 = $expanded74 ^ -1;
     $133 = $131 & $expanded73;
     $134 = $133;
     $135 = HEAP32[$134>>2]|0;
     $arglist_next3 = ((($134)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next3;
     $1172 = $110;$p$0 = $135;
    } else {
     $1172 = $110;$p$0 = 0;
    }
   } else {
    $1172 = $105;$p$0 = -1;
   }
  } while(0);
  $144 = $1172;$st$0 = 0;
  while(1) {
   $143 = HEAP8[$144>>0]|0;
   $145 = $143 << 24 >> 24;
   $146 = (($145) + -65)|0;
   $147 = ($146>>>0)>(57);
   if ($147) {
    $$0 = -1;
    label = 363;
    break L1;
   }
   $148 = ((($144)) + 1|0);
   $149 = ((3784 + (($st$0*58)|0)|0) + ($146)|0);
   $150 = HEAP8[$149>>0]|0;
   $151 = $150&255;
   $152 = (($151) + -1)|0;
   $153 = ($152>>>0)<(8);
   if ($153) {
    $144 = $148;$st$0 = $151;
   } else {
    $$lcssa455 = $144;$$lcssa457 = $148;$$lcssa458 = $150;$$lcssa459 = $151;$st$0$lcssa456 = $st$0;
    break;
   }
  }
  $154 = ($$lcssa458<<24>>24)==(0);
  if ($154) {
   $$0 = -1;
   label = 363;
   break;
  }
  $155 = ($$lcssa458<<24>>24)==(19);
  $156 = ($argpos$0|0)>(-1);
  L64: do {
   if ($155) {
    if ($156) {
     $$0 = -1;
     label = 363;
     break L1;
    } else {
     $1173 = $1169;$1174 = $1170;
     label = 62;
    }
   } else {
    if ($156) {
     $157 = (($nl_type) + ($argpos$0<<2)|0);
     HEAP32[$157>>2] = $$lcssa459;
     $158 = (($nl_arg) + ($argpos$0<<3)|0);
     $159 = HEAP32[$158>>2]|0;
     $160 = ((($158)) + 4|0);
     $161 = HEAP32[$160>>2]|0;
     $1173 = $161;$1174 = $159;
     label = 62;
     break;
    }
    if (!($1)) {
     $$0 = 0;
     label = 363;
     break L1;
    }
    $162 = ($$lcssa458&255)>(20);
    if ($162) {
     $264 = $1170;$291 = $1169;
    } else {
     do {
      switch ($$lcssa459|0) {
      case 11:  {
       $arglist_current11 = HEAP32[$ap>>2]|0;
       $180 = $arglist_current11;
       $181 = ((0) + 4|0);
       $expanded92 = $181;
       $expanded91 = (($expanded92) - 1)|0;
       $182 = (($180) + ($expanded91))|0;
       $183 = ((0) + 4|0);
       $expanded96 = $183;
       $expanded95 = (($expanded96) - 1)|0;
       $expanded94 = $expanded95 ^ -1;
       $184 = $182 & $expanded94;
       $185 = $184;
       $186 = HEAP32[$185>>2]|0;
       $arglist_next12 = ((($185)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next12;
       $264 = $186;$291 = 0;
       break L64;
       break;
      }
      case 9:  {
       $arglist_current5 = HEAP32[$ap>>2]|0;
       $163 = $arglist_current5;
       $164 = ((0) + 4|0);
       $expanded78 = $164;
       $expanded77 = (($expanded78) - 1)|0;
       $165 = (($163) + ($expanded77))|0;
       $166 = ((0) + 4|0);
       $expanded82 = $166;
       $expanded81 = (($expanded82) - 1)|0;
       $expanded80 = $expanded81 ^ -1;
       $167 = $165 & $expanded80;
       $168 = $167;
       $169 = HEAP32[$168>>2]|0;
       $arglist_next6 = ((($168)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next6;
       $170 = $169;
       $264 = $170;$291 = $1169;
       break L64;
       break;
      }
      case 13:  {
       $arglist_current17 = HEAP32[$ap>>2]|0;
       $199 = $arglist_current17;
       $200 = ((0) + 4|0);
       $expanded106 = $200;
       $expanded105 = (($expanded106) - 1)|0;
       $201 = (($199) + ($expanded105))|0;
       $202 = ((0) + 4|0);
       $expanded110 = $202;
       $expanded109 = (($expanded110) - 1)|0;
       $expanded108 = $expanded109 ^ -1;
       $203 = $201 & $expanded108;
       $204 = $203;
       $205 = HEAP32[$204>>2]|0;
       $arglist_next18 = ((($204)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next18;
       $206 = $205&65535;
       $207 = $206 << 16 >> 16;
       $208 = ($207|0)<(0);
       $209 = $208 << 31 >> 31;
       $sext93 = $205 << 16;
       $210 = $sext93 >> 16;
       $264 = $210;$291 = $209;
       break L64;
       break;
      }
      case 14:  {
       $arglist_current20 = HEAP32[$ap>>2]|0;
       $211 = $arglist_current20;
       $212 = ((0) + 4|0);
       $expanded113 = $212;
       $expanded112 = (($expanded113) - 1)|0;
       $213 = (($211) + ($expanded112))|0;
       $214 = ((0) + 4|0);
       $expanded117 = $214;
       $expanded116 = (($expanded117) - 1)|0;
       $expanded115 = $expanded116 ^ -1;
       $215 = $213 & $expanded115;
       $216 = $215;
       $217 = HEAP32[$216>>2]|0;
       $arglist_next21 = ((($216)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next21;
       $$mask1$i37 = $217 & 65535;
       $264 = $$mask1$i37;$291 = 0;
       break L64;
       break;
      }
      case 18:  {
       $arglist_current32 = HEAP32[$ap>>2]|0;
       $246 = $arglist_current32;
       $247 = ((0) + 8|0);
       $expanded141 = $247;
       $expanded140 = (($expanded141) - 1)|0;
       $248 = (($246) + ($expanded140))|0;
       $249 = ((0) + 8|0);
       $expanded145 = $249;
       $expanded144 = (($expanded145) - 1)|0;
       $expanded143 = $expanded144 ^ -1;
       $250 = $248 & $expanded143;
       $251 = $250;
       $252 = +HEAPF64[$251>>3];
       $arglist_next33 = ((($251)) + 8|0);
       HEAP32[$ap>>2] = $arglist_next33;
       HEAPF64[tempDoublePtr>>3] = $252;$253 = HEAP32[tempDoublePtr>>2]|0;
       $254 = HEAP32[tempDoublePtr+4>>2]|0;
       $264 = $253;$291 = $254;
       break L64;
       break;
      }
      case 12:  {
       $arglist_current14 = HEAP32[$ap>>2]|0;
       $187 = $arglist_current14;
       $188 = ((0) + 8|0);
       $expanded99 = $188;
       $expanded98 = (($expanded99) - 1)|0;
       $189 = (($187) + ($expanded98))|0;
       $190 = ((0) + 8|0);
       $expanded103 = $190;
       $expanded102 = (($expanded103) - 1)|0;
       $expanded101 = $expanded102 ^ -1;
       $191 = $189 & $expanded101;
       $192 = $191;
       $193 = $192;
       $194 = $193;
       $195 = HEAP32[$194>>2]|0;
       $196 = (($193) + 4)|0;
       $197 = $196;
       $198 = HEAP32[$197>>2]|0;
       $arglist_next15 = ((($192)) + 8|0);
       HEAP32[$ap>>2] = $arglist_next15;
       $264 = $195;$291 = $198;
       break L64;
       break;
      }
      case 16:  {
       $arglist_current26 = HEAP32[$ap>>2]|0;
       $230 = $arglist_current26;
       $231 = ((0) + 4|0);
       $expanded127 = $231;
       $expanded126 = (($expanded127) - 1)|0;
       $232 = (($230) + ($expanded126))|0;
       $233 = ((0) + 4|0);
       $expanded131 = $233;
       $expanded130 = (($expanded131) - 1)|0;
       $expanded129 = $expanded130 ^ -1;
       $234 = $232 & $expanded129;
       $235 = $234;
       $236 = HEAP32[$235>>2]|0;
       $arglist_next27 = ((($235)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next27;
       $$mask$i38 = $236 & 255;
       $264 = $$mask$i38;$291 = 0;
       break L64;
       break;
      }
      case 17:  {
       $arglist_current29 = HEAP32[$ap>>2]|0;
       $237 = $arglist_current29;
       $238 = ((0) + 8|0);
       $expanded134 = $238;
       $expanded133 = (($expanded134) - 1)|0;
       $239 = (($237) + ($expanded133))|0;
       $240 = ((0) + 8|0);
       $expanded138 = $240;
       $expanded137 = (($expanded138) - 1)|0;
       $expanded136 = $expanded137 ^ -1;
       $241 = $239 & $expanded136;
       $242 = $241;
       $243 = +HEAPF64[$242>>3];
       $arglist_next30 = ((($242)) + 8|0);
       HEAP32[$ap>>2] = $arglist_next30;
       HEAPF64[tempDoublePtr>>3] = $243;$244 = HEAP32[tempDoublePtr>>2]|0;
       $245 = HEAP32[tempDoublePtr+4>>2]|0;
       $264 = $244;$291 = $245;
       break L64;
       break;
      }
      case 10:  {
       $arglist_current8 = HEAP32[$ap>>2]|0;
       $171 = $arglist_current8;
       $172 = ((0) + 4|0);
       $expanded85 = $172;
       $expanded84 = (($expanded85) - 1)|0;
       $173 = (($171) + ($expanded84))|0;
       $174 = ((0) + 4|0);
       $expanded89 = $174;
       $expanded88 = (($expanded89) - 1)|0;
       $expanded87 = $expanded88 ^ -1;
       $175 = $173 & $expanded87;
       $176 = $175;
       $177 = HEAP32[$176>>2]|0;
       $arglist_next9 = ((($176)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next9;
       $178 = ($177|0)<(0);
       $179 = $178 << 31 >> 31;
       $264 = $177;$291 = $179;
       break L64;
       break;
      }
      case 15:  {
       $arglist_current23 = HEAP32[$ap>>2]|0;
       $218 = $arglist_current23;
       $219 = ((0) + 4|0);
       $expanded120 = $219;
       $expanded119 = (($expanded120) - 1)|0;
       $220 = (($218) + ($expanded119))|0;
       $221 = ((0) + 4|0);
       $expanded124 = $221;
       $expanded123 = (($expanded124) - 1)|0;
       $expanded122 = $expanded123 ^ -1;
       $222 = $220 & $expanded122;
       $223 = $222;
       $224 = HEAP32[$223>>2]|0;
       $arglist_next24 = ((($223)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next24;
       $225 = $224&255;
       $226 = $225 << 24 >> 24;
       $227 = ($226|0)<(0);
       $228 = $227 << 31 >> 31;
       $sext = $224 << 24;
       $229 = $sext >> 24;
       $264 = $229;$291 = $228;
       break L64;
       break;
      }
      default: {
       $264 = $1170;$291 = $1169;
       break L64;
      }
      }
     } while(0);
    }
   }
  } while(0);
  if ((label|0) == 62) {
   label = 0;
   if ($1) {
    $264 = $1174;$291 = $1173;
   } else {
    $1169 = $1173;$1170 = $1174;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
    continue;
   }
  }
  $255 = HEAP8[$$lcssa455>>0]|0;
  $256 = $255 << 24 >> 24;
  $257 = ($st$0$lcssa456|0)!=(0);
  $258 = $256 & 15;
  $259 = ($258|0)==(3);
  $or$cond15 = $257 & $259;
  $260 = $256 & -33;
  $t$0 = $or$cond15 ? $260 : $256;
  $261 = $fl$1 & 8192;
  $262 = ($261|0)==(0);
  $263 = $fl$1 & -65537;
  $fl$1$ = $262 ? $fl$1 : $263;
  L86: do {
   switch ($t$0|0) {
   case 65: case 71: case 70: case 69: case 97: case 103: case 102: case 101:  {
    HEAP32[tempDoublePtr>>2] = $264;HEAP32[tempDoublePtr+4>>2] = $291;$430 = +HEAPF64[tempDoublePtr>>3];
    HEAP32[$e2$i>>2] = 0;
    $431 = ($291|0)<(0);
    if ($431) {
     $432 = -$430;
     $$07$i = $432;$pl$0$i = 1;$prefix$0$i = 4288;
    } else {
     $433 = $fl$1$ & 2048;
     $434 = ($433|0)==(0);
     if ($434) {
      $435 = $fl$1$ & 1;
      $436 = ($435|0)==(0);
      $$$i = $436 ? (4289) : (4294);
      $$07$i = $430;$pl$0$i = $435;$prefix$0$i = $$$i;
     } else {
      $$07$i = $430;$pl$0$i = 1;$prefix$0$i = (4291);
     }
    }
    HEAPF64[tempDoublePtr>>3] = $$07$i;$437 = HEAP32[tempDoublePtr>>2]|0;
    $438 = HEAP32[tempDoublePtr+4>>2]|0;
    $439 = $438 & 2146435072;
    $440 = ($439>>>0)<(2146435072);
    $441 = (0)<(0);
    $442 = ($439|0)==(2146435072);
    $443 = $442 & $441;
    $444 = $440 | $443;
    do {
     if ($444) {
      $471 = (+_frexpl($$07$i,$e2$i));
      $472 = $471 * 2.0;
      $473 = $472 != 0.0;
      if ($473) {
       $474 = HEAP32[$e2$i>>2]|0;
       $475 = (($474) + -1)|0;
       HEAP32[$e2$i>>2] = $475;
      }
      $476 = $t$0 | 32;
      $477 = ($476|0)==(97);
      if ($477) {
       $478 = $t$0 & 32;
       $479 = ($478|0)==(0);
       $480 = ((($prefix$0$i)) + 9|0);
       $prefix$0$$i = $479 ? $prefix$0$i : $480;
       $481 = $pl$0$i | 2;
       $482 = ($p$0>>>0)>(11);
       $483 = (12 - ($p$0))|0;
       $484 = ($483|0)==(0);
       $485 = $482 | $484;
       do {
        if ($485) {
         $$1$i = $472;
        } else {
         $re$1179$i = $483;$round$0178$i = 8.0;
         while(1) {
          $486 = (($re$1179$i) + -1)|0;
          $487 = $round$0178$i * 16.0;
          $488 = ($486|0)==(0);
          if ($488) {
           $$lcssa483 = $487;
           break;
          } else {
           $re$1179$i = $486;$round$0178$i = $487;
          }
         }
         $489 = HEAP8[$prefix$0$$i>>0]|0;
         $490 = ($489<<24>>24)==(45);
         if ($490) {
          $491 = -$472;
          $492 = $491 - $$lcssa483;
          $493 = $$lcssa483 + $492;
          $494 = -$493;
          $$1$i = $494;
          break;
         } else {
          $495 = $472 + $$lcssa483;
          $496 = $495 - $$lcssa483;
          $$1$i = $496;
          break;
         }
        }
       } while(0);
       $497 = HEAP32[$e2$i>>2]|0;
       $498 = ($497|0)<(0);
       $499 = (0 - ($497))|0;
       $500 = $498 ? $499 : $497;
       $501 = ($500|0)<(0);
       if ($501) {
        $502 = ($500|0)<(0);
        $503 = $502 << 31 >> 31;
        $$05$i$i = $7;$504 = $500;$505 = $503;
        while(1) {
         $506 = (___uremdi3(($504|0),($505|0),10,0)|0);
         $507 = tempRet0;
         $508 = $506 | 48;
         $509 = $508&255;
         $510 = ((($$05$i$i)) + -1|0);
         HEAP8[$510>>0] = $509;
         $511 = (___udivdi3(($504|0),($505|0),10,0)|0);
         $512 = tempRet0;
         $513 = ($505>>>0)>(9);
         $514 = ($504>>>0)>(4294967295);
         $515 = ($505|0)==(9);
         $516 = $515 & $514;
         $517 = $513 | $516;
         if ($517) {
          $$05$i$i = $510;$504 = $511;$505 = $512;
         } else {
          $$lcssa484 = $510;$1183 = $511;$1184 = $512;
          break;
         }
        }
        $$0$lcssa$i48$i = $$lcssa484;$$01$lcssa$off0$i$i = $1183;
       } else {
        $$0$lcssa$i48$i = $7;$$01$lcssa$off0$i$i = $500;
       }
       $518 = ($$01$lcssa$off0$i$i|0)==(0);
       if ($518) {
        $$1$lcssa$i$i = $$0$lcssa$i48$i;
       } else {
        $$12$i$i = $$0$lcssa$i48$i;$y$03$i$i = $$01$lcssa$off0$i$i;
        while(1) {
         $519 = (($y$03$i$i>>>0) % 10)&-1;
         $520 = $519 | 48;
         $521 = $520&255;
         $522 = ((($$12$i$i)) + -1|0);
         HEAP8[$522>>0] = $521;
         $523 = (($y$03$i$i>>>0) / 10)&-1;
         $524 = ($y$03$i$i>>>0)<(10);
         if ($524) {
          $$1$lcssa$i$i = $522;
          break;
         } else {
          $$12$i$i = $522;$y$03$i$i = $523;
         }
        }
       }
       $525 = ($$1$lcssa$i$i|0)==($7|0);
       if ($525) {
        HEAP8[$8>>0] = 48;
        $estr$0$i = $8;
       } else {
        $estr$0$i = $$1$lcssa$i$i;
       }
       $526 = HEAP32[$e2$i>>2]|0;
       $527 = $526 >> 31;
       $528 = $527 & 2;
       $529 = (($528) + 43)|0;
       $530 = $529&255;
       $531 = ((($estr$0$i)) + -1|0);
       HEAP8[$531>>0] = $530;
       $532 = (($t$0) + 15)|0;
       $533 = $532&255;
       $534 = ((($estr$0$i)) + -2|0);
       HEAP8[$534>>0] = $533;
       $535 = $fl$1$ & 8;
       $536 = ($535|0)==(0);
       if ($536) {
        $notrhs$i = ($p$0|0)<(1);
        if ($notrhs$i) {
         $$2$us$us$i = $$1$i;$s$0$us$us$i = $buf$i;
         while(1) {
          $537 = (~~(($$2$us$us$i)));
          $538 = (4248 + ($537)|0);
          $539 = HEAP8[$538>>0]|0;
          $540 = $539&255;
          $541 = $540 | $478;
          $542 = $541&255;
          $543 = ((($s$0$us$us$i)) + 1|0);
          HEAP8[$s$0$us$us$i>>0] = $542;
          $544 = (+($537|0));
          $545 = $$2$us$us$i - $544;
          $546 = $545 * 16.0;
          $547 = $543;
          $548 = (($547) - ($0))|0;
          $549 = ($548|0)!=(1);
          $notlhs$us$us$i = $546 == 0.0;
          $or$cond$i79 = $549 | $notlhs$us$us$i;
          if ($or$cond$i79) {
           $s$1$us$us$i = $543;
          } else {
           $550 = ((($s$0$us$us$i)) + 2|0);
           HEAP8[$543>>0] = 46;
           $s$1$us$us$i = $550;
          }
          $551 = $546 != 0.0;
          if ($551) {
           $$2$us$us$i = $546;$s$0$us$us$i = $s$1$us$us$i;
          } else {
           $s$1$lcssa$i = $s$1$us$us$i;
           break;
          }
         }
        } else {
         $$2$us$i = $$1$i;$s$0$us$i = $buf$i;
         while(1) {
          $552 = (~~(($$2$us$i)));
          $553 = (4248 + ($552)|0);
          $554 = HEAP8[$553>>0]|0;
          $555 = $554&255;
          $556 = $555 | $478;
          $557 = $556&255;
          $558 = ((($s$0$us$i)) + 1|0);
          HEAP8[$s$0$us$i>>0] = $557;
          $559 = (+($552|0));
          $560 = $$2$us$i - $559;
          $561 = $560 * 16.0;
          $562 = $558;
          $563 = (($562) - ($0))|0;
          $564 = ($563|0)==(1);
          if ($564) {
           $565 = ((($s$0$us$i)) + 2|0);
           HEAP8[$558>>0] = 46;
           $s$1$us$i = $565;
          } else {
           $s$1$us$i = $558;
          }
          $566 = $561 != 0.0;
          if ($566) {
           $$2$us$i = $561;$s$0$us$i = $s$1$us$i;
          } else {
           $s$1$lcssa$i = $s$1$us$i;
           break;
          }
         }
        }
       } else {
        $$2$i = $$1$i;$s$0$i = $buf$i;
        while(1) {
         $567 = (~~(($$2$i)));
         $568 = (4248 + ($567)|0);
         $569 = HEAP8[$568>>0]|0;
         $570 = $569&255;
         $571 = $570 | $478;
         $572 = $571&255;
         $573 = ((($s$0$i)) + 1|0);
         HEAP8[$s$0$i>>0] = $572;
         $574 = (+($567|0));
         $575 = $$2$i - $574;
         $576 = $575 * 16.0;
         $577 = $573;
         $578 = (($577) - ($0))|0;
         $579 = ($578|0)==(1);
         if ($579) {
          $580 = ((($s$0$i)) + 2|0);
          HEAP8[$573>>0] = 46;
          $s$1$i = $580;
         } else {
          $s$1$i = $573;
         }
         $581 = $576 != 0.0;
         if ($581) {
          $$2$i = $576;$s$0$i = $s$1$i;
         } else {
          $s$1$lcssa$i = $s$1$i;
          break;
         }
        }
       }
       $582 = ($p$0|0)!=(0);
       $$pre300$i = $s$1$lcssa$i;
       $583 = (($11) + ($$pre300$i))|0;
       $584 = ($583|0)<($p$0|0);
       $or$cond332 = $582 & $584;
       $585 = $534;
       $586 = (($12) + ($p$0))|0;
       $587 = (($586) - ($585))|0;
       $588 = $534;
       $589 = (($10) - ($588))|0;
       $590 = (($589) + ($$pre300$i))|0;
       $l$0$i = $or$cond332 ? $587 : $590;
       $591 = (($l$0$i) + ($481))|0;
       $592 = $fl$1$ & 73728;
       $593 = ($592|0)==(0);
       $594 = ($w$1|0)>($591|0);
       $or$cond$i52$i = $593 & $594;
       if ($or$cond$i52$i) {
        $595 = (($w$1) - ($591))|0;
        $596 = ($595>>>0)>(256);
        $597 = $596 ? 256 : $595;
        _memset(($pad$i|0),32,($597|0))|0;
        $598 = ($595>>>0)>(255);
        if ($598) {
         $$01$i54$i = $595;
         while(1) {
          (___fwritex($pad$i,256,$f)|0);
          $599 = (($$01$i54$i) + -256)|0;
          $600 = ($599>>>0)>(255);
          if ($600) {
           $$01$i54$i = $599;
          } else {
           break;
          }
         }
         $601 = $595 & 255;
         $$0$lcssa$i56$i = $601;
        } else {
         $$0$lcssa$i56$i = $595;
        }
        (___fwritex($pad$i,$$0$lcssa$i56$i,$f)|0);
       }
       (___fwritex($prefix$0$$i,$481,$f)|0);
       $602 = ($592|0)==(65536);
       $or$cond$i59$i = $602 & $594;
       if ($or$cond$i59$i) {
        $603 = (($w$1) - ($591))|0;
        $604 = ($603>>>0)>(256);
        $605 = $604 ? 256 : $603;
        _memset(($pad$i|0),48,($605|0))|0;
        $606 = ($603>>>0)>(255);
        if ($606) {
         $$01$i61$i = $603;
         while(1) {
          (___fwritex($pad$i,256,$f)|0);
          $607 = (($$01$i61$i) + -256)|0;
          $608 = ($607>>>0)>(255);
          if ($608) {
           $$01$i61$i = $607;
          } else {
           break;
          }
         }
         $609 = $603 & 255;
         $$0$lcssa$i63$i = $609;
        } else {
         $$0$lcssa$i63$i = $603;
        }
        (___fwritex($pad$i,$$0$lcssa$i63$i,$f)|0);
       }
       $610 = (($$pre300$i) - ($0))|0;
       (___fwritex($buf$i,$610,$f)|0);
       $611 = $534;
       $612 = (($9) - ($611))|0;
       $613 = (($l$0$i) - ($612))|0;
       $614 = (($613) - ($610))|0;
       $615 = ($614|0)>(0);
       if ($615) {
        $616 = ($614>>>0)>(256);
        $617 = $616 ? 256 : $614;
        _memset(($pad$i|0),48,($617|0))|0;
        $618 = ($614>>>0)>(255);
        if ($618) {
         $$01$i67$i = $614;
         while(1) {
          (___fwritex($pad$i,256,$f)|0);
          $619 = (($$01$i67$i) + -256)|0;
          $620 = ($619>>>0)>(255);
          if ($620) {
           $$01$i67$i = $619;
          } else {
           break;
          }
         }
         $621 = $614 & 255;
         $$0$lcssa$i69$i = $621;
        } else {
         $$0$lcssa$i69$i = $614;
        }
        (___fwritex($pad$i,$$0$lcssa$i69$i,$f)|0);
       }
       (___fwritex($534,$612,$f)|0);
       $622 = ($592|0)==(8192);
       $or$cond$i72$i = $622 & $594;
       if ($or$cond$i72$i) {
        $623 = (($w$1) - ($591))|0;
        $624 = ($623>>>0)>(256);
        $625 = $624 ? 256 : $623;
        _memset(($pad$i|0),32,($625|0))|0;
        $626 = ($623>>>0)>(255);
        if ($626) {
         $$01$i74$i = $623;
         while(1) {
          (___fwritex($pad$i,256,$f)|0);
          $627 = (($$01$i74$i) + -256)|0;
          $628 = ($627>>>0)>(255);
          if ($628) {
           $$01$i74$i = $627;
          } else {
           break;
          }
         }
         $629 = $623 & 255;
         $$0$lcssa$i76$i = $629;
        } else {
         $$0$lcssa$i76$i = $623;
        }
        (___fwritex($pad$i,$$0$lcssa$i76$i,$f)|0);
       }
       $w$$i = $594 ? $w$1 : $591;
       $$0$i = $w$$i;
       break;
      }
      $630 = ($p$0|0)<(0);
      $$p$i = $630 ? 6 : $p$0;
      if ($473) {
       $631 = $472 * 268435456.0;
       $632 = HEAP32[$e2$i>>2]|0;
       $633 = (($632) + -28)|0;
       HEAP32[$e2$i>>2] = $633;
       $$3$i = $631;$634 = $633;
      } else {
       $$pre$i = HEAP32[$e2$i>>2]|0;
       $$3$i = $472;$634 = $$pre$i;
      }
      $635 = ($634|0)<(0);
      $$31$i = $635 ? $big$i : $13;
      $636 = $$31$i;
      $$4$i = $$3$i;$z$0$i = $$31$i;
      while(1) {
       $637 = (~~(($$4$i))>>>0);
       HEAP32[$z$0$i>>2] = $637;
       $638 = ((($z$0$i)) + 4|0);
       $639 = (+($637>>>0));
       $640 = $$4$i - $639;
       $641 = $640 * 1.0E+9;
       $642 = $641 != 0.0;
       if ($642) {
        $$4$i = $641;$z$0$i = $638;
       } else {
        $$lcssa460 = $638;
        break;
       }
      }
      $$pr$i = HEAP32[$e2$i>>2]|0;
      $643 = ($$pr$i|0)>(0);
      if ($643) {
       $644 = $$pr$i;$a$1253$i = $$31$i;$z$1252$i = $$lcssa460;
       while(1) {
        $645 = ($644|0)>(29);
        $646 = $645 ? 29 : $644;
        $d$0245$i = ((($z$1252$i)) + -4|0);
        $647 = ($d$0245$i>>>0)<($a$1253$i>>>0);
        do {
         if ($647) {
          $a$2$ph$i = $a$1253$i;
         } else {
          $carry$0246$i = 0;$d$0247$i = $d$0245$i;
          while(1) {
           $648 = HEAP32[$d$0247$i>>2]|0;
           $649 = (_bitshift64Shl(($648|0),0,($646|0))|0);
           $650 = tempRet0;
           $651 = (_i64Add(($649|0),($650|0),($carry$0246$i|0),0)|0);
           $652 = tempRet0;
           $653 = (___uremdi3(($651|0),($652|0),1000000000,0)|0);
           $654 = tempRet0;
           HEAP32[$d$0247$i>>2] = $653;
           $655 = (___udivdi3(($651|0),($652|0),1000000000,0)|0);
           $656 = tempRet0;
           $d$0$i = ((($d$0247$i)) + -4|0);
           $657 = ($d$0$i>>>0)<($a$1253$i>>>0);
           if ($657) {
            $$lcssa461 = $655;
            break;
           } else {
            $carry$0246$i = $655;$d$0247$i = $d$0$i;
           }
          }
          $658 = ($$lcssa461|0)==(0);
          if ($658) {
           $a$2$ph$i = $a$1253$i;
           break;
          }
          $659 = ((($a$1253$i)) + -4|0);
          HEAP32[$659>>2] = $$lcssa461;
          $a$2$ph$i = $659;
         }
        } while(0);
        $z$2$i = $z$1252$i;
        while(1) {
         $660 = ($z$2$i>>>0)>($a$2$ph$i>>>0);
         if (!($660)) {
          $z$2$i$lcssa = $z$2$i;
          break;
         }
         $661 = ((($z$2$i)) + -4|0);
         $662 = HEAP32[$661>>2]|0;
         $663 = ($662|0)==(0);
         if ($663) {
          $z$2$i = $661;
         } else {
          $z$2$i$lcssa = $z$2$i;
          break;
         }
        }
        $664 = HEAP32[$e2$i>>2]|0;
        $665 = (($664) - ($646))|0;
        HEAP32[$e2$i>>2] = $665;
        $666 = ($665|0)>(0);
        if ($666) {
         $644 = $665;$a$1253$i = $a$2$ph$i;$z$1252$i = $z$2$i$lcssa;
        } else {
         $$pr146$i = $665;$a$1$lcssa$i = $a$2$ph$i;$z$1$lcssa$i = $z$2$i$lcssa;
         break;
        }
       }
      } else {
       $$pr146$i = $$pr$i;$a$1$lcssa$i = $$31$i;$z$1$lcssa$i = $$lcssa460;
      }
      $667 = ($$pr146$i|0)<(0);
      L195: do {
       if ($667) {
        $668 = (($$p$i) + 25)|0;
        $669 = (($668|0) / 9)&-1;
        $670 = (($669) + 1)|0;
        $671 = ($476|0)==(102);
        if (!($671)) {
         $704 = $$pr146$i;$a$3240$i = $a$1$lcssa$i;$z$3239$i = $z$1$lcssa$i;
         while(1) {
          $703 = (0 - ($704))|0;
          $705 = ($703|0)>(9);
          $706 = $705 ? 9 : $703;
          $707 = ($a$3240$i>>>0)<($z$3239$i>>>0);
          do {
           if ($707) {
            $711 = 1 << $706;
            $712 = (($711) + -1)|0;
            $713 = 1000000000 >>> $706;
            $carry3$0234$i = 0;$d$1233$i = $a$3240$i;
            while(1) {
             $714 = HEAP32[$d$1233$i>>2]|0;
             $715 = $714 & $712;
             $716 = $714 >>> $706;
             $717 = (($716) + ($carry3$0234$i))|0;
             HEAP32[$d$1233$i>>2] = $717;
             $718 = Math_imul($715, $713)|0;
             $719 = ((($d$1233$i)) + 4|0);
             $720 = ($719>>>0)<($z$3239$i>>>0);
             if ($720) {
              $carry3$0234$i = $718;$d$1233$i = $719;
             } else {
              $$lcssa463 = $718;
              break;
             }
            }
            $721 = HEAP32[$a$3240$i>>2]|0;
            $722 = ($721|0)==(0);
            $723 = ((($a$3240$i)) + 4|0);
            $$a$3$i = $722 ? $723 : $a$3240$i;
            $724 = ($$lcssa463|0)==(0);
            if ($724) {
             $$a$3306$i = $$a$3$i;$z$4$i = $z$3239$i;
             break;
            }
            $725 = ((($z$3239$i)) + 4|0);
            HEAP32[$z$3239$i>>2] = $$lcssa463;
            $$a$3306$i = $$a$3$i;$z$4$i = $725;
           } else {
            $708 = HEAP32[$a$3240$i>>2]|0;
            $709 = ($708|0)==(0);
            $710 = ((($a$3240$i)) + 4|0);
            $$a$3305$i = $709 ? $710 : $a$3240$i;
            $$a$3306$i = $$a$3305$i;$z$4$i = $z$3239$i;
           }
          } while(0);
          $726 = $z$4$i;
          $727 = $$a$3306$i;
          $728 = (($726) - ($727))|0;
          $729 = $728 >> 2;
          $730 = ($729|0)>($670|0);
          $731 = (($$a$3306$i) + ($670<<2)|0);
          $$z$4$i = $730 ? $731 : $z$4$i;
          $732 = HEAP32[$e2$i>>2]|0;
          $733 = (($732) + ($706))|0;
          HEAP32[$e2$i>>2] = $733;
          $734 = ($733|0)<(0);
          if ($734) {
           $704 = $733;$a$3240$i = $$a$3306$i;$z$3239$i = $$z$4$i;
          } else {
           $a$3$lcssa$i = $$a$3306$i;$z$3$lcssa$i = $$z$4$i;
           break L195;
          }
         }
        }
        $672 = (($$31$i) + ($670<<2)|0);
        $674 = $$pr146$i;$a$3240$us$i = $a$1$lcssa$i;$z$3239$us$i = $z$1$lcssa$i;
        while(1) {
         $673 = (0 - ($674))|0;
         $675 = ($673|0)>(9);
         $676 = $675 ? 9 : $673;
         $677 = ($a$3240$us$i>>>0)<($z$3239$us$i>>>0);
         do {
          if ($677) {
           $702 = 1 << $676;
           $695 = (($702) + -1)|0;
           $699 = 1000000000 >>> $676;
           $carry3$0234$us$i = 0;$d$1233$us$i = $a$3240$us$i;
           while(1) {
            $693 = HEAP32[$d$1233$us$i>>2]|0;
            $694 = $693 & $695;
            $696 = $693 >>> $676;
            $697 = (($696) + ($carry3$0234$us$i))|0;
            HEAP32[$d$1233$us$i>>2] = $697;
            $698 = Math_imul($694, $699)|0;
            $700 = ((($d$1233$us$i)) + 4|0);
            $701 = ($700>>>0)<($z$3239$us$i>>>0);
            if ($701) {
             $carry3$0234$us$i = $698;$d$1233$us$i = $700;
            } else {
             $$lcssa464 = $698;
             break;
            }
           }
           $681 = HEAP32[$a$3240$us$i>>2]|0;
           $682 = ($681|0)==(0);
           $683 = ((($a$3240$us$i)) + 4|0);
           $$a$3$us$i = $682 ? $683 : $a$3240$us$i;
           $684 = ($$lcssa464|0)==(0);
           if ($684) {
            $$a$3$us304$i = $$a$3$us$i;$z$4$us$i = $z$3239$us$i;
            break;
           }
           $685 = ((($z$3239$us$i)) + 4|0);
           HEAP32[$z$3239$us$i>>2] = $$lcssa464;
           $$a$3$us304$i = $$a$3$us$i;$z$4$us$i = $685;
          } else {
           $678 = HEAP32[$a$3240$us$i>>2]|0;
           $679 = ($678|0)==(0);
           $680 = ((($a$3240$us$i)) + 4|0);
           $$a$3$us303$i = $679 ? $680 : $a$3240$us$i;
           $$a$3$us304$i = $$a$3$us303$i;$z$4$us$i = $z$3239$us$i;
          }
         } while(0);
         $686 = $z$4$us$i;
         $687 = (($686) - ($636))|0;
         $688 = $687 >> 2;
         $689 = ($688|0)>($670|0);
         $$z$4$us$i = $689 ? $672 : $z$4$us$i;
         $690 = HEAP32[$e2$i>>2]|0;
         $691 = (($690) + ($676))|0;
         HEAP32[$e2$i>>2] = $691;
         $692 = ($691|0)<(0);
         if ($692) {
          $674 = $691;$a$3240$us$i = $$a$3$us304$i;$z$3239$us$i = $$z$4$us$i;
         } else {
          $a$3$lcssa$i = $$a$3$us304$i;$z$3$lcssa$i = $$z$4$us$i;
          break;
         }
        }
       } else {
        $a$3$lcssa$i = $a$1$lcssa$i;$z$3$lcssa$i = $z$1$lcssa$i;
       }
      } while(0);
      $735 = ($a$3$lcssa$i>>>0)<($z$3$lcssa$i>>>0);
      do {
       if ($735) {
        $736 = $a$3$lcssa$i;
        $737 = (($636) - ($736))|0;
        $738 = $737 >> 2;
        $739 = ($738*9)|0;
        $740 = HEAP32[$a$3$lcssa$i>>2]|0;
        $741 = ($740>>>0)<(10);
        if ($741) {
         $e$1$i = $739;
         break;
        } else {
         $e$0229$i = $739;$i$0228$i = 10;
        }
        while(1) {
         $742 = ($i$0228$i*10)|0;
         $743 = (($e$0229$i) + 1)|0;
         $744 = ($740>>>0)<($742>>>0);
         if ($744) {
          $e$1$i = $743;
          break;
         } else {
          $e$0229$i = $743;$i$0228$i = $742;
         }
        }
       } else {
        $e$1$i = 0;
       }
      } while(0);
      $745 = ($476|0)!=(102);
      $746 = $745 ? $e$1$i : 0;
      $747 = (($$p$i) - ($746))|0;
      $748 = ($476|0)==(103);
      $749 = ($$p$i|0)!=(0);
      $750 = $749 & $748;
      $$neg151$i = $750 << 31 >> 31;
      $751 = (($747) + ($$neg151$i))|0;
      $752 = $z$3$lcssa$i;
      $753 = (($752) - ($636))|0;
      $754 = $753 >> 2;
      $755 = ($754*9)|0;
      $756 = (($755) + -9)|0;
      $757 = ($751|0)<($756|0);
      if ($757) {
       $758 = (($751) + 9216)|0;
       $759 = (($758|0) / 9)&-1;
       $$sum$i = (($759) + -1023)|0;
       $760 = (($$31$i) + ($$sum$i<<2)|0);
       $761 = (($758|0) % 9)&-1;
       $j$0221$i = (($761) + 1)|0;
       $762 = ($j$0221$i|0)<(9);
       if ($762) {
        $i$1222$i = 10;$j$0223$i = $j$0221$i;
        while(1) {
         $763 = ($i$1222$i*10)|0;
         $j$0$i = (($j$0223$i) + 1)|0;
         $exitcond$i = ($j$0$i|0)==(9);
         if ($exitcond$i) {
          $i$1$lcssa$i = $763;
          break;
         } else {
          $i$1222$i = $763;$j$0223$i = $j$0$i;
         }
        }
       } else {
        $i$1$lcssa$i = 10;
       }
       $764 = HEAP32[$760>>2]|0;
       $765 = (($764>>>0) % ($i$1$lcssa$i>>>0))&-1;
       $766 = ($765|0)==(0);
       if ($766) {
        $$sum15$i = (($759) + -1022)|0;
        $767 = (($$31$i) + ($$sum15$i<<2)|0);
        $768 = ($767|0)==($z$3$lcssa$i|0);
        if ($768) {
         $a$7$i = $a$3$lcssa$i;$d$3$i = $760;$e$3$i = $e$1$i;
        } else {
         label = 221;
        }
       } else {
        label = 221;
       }
       do {
        if ((label|0) == 221) {
         label = 0;
         $769 = (($764>>>0) / ($i$1$lcssa$i>>>0))&-1;
         $770 = $769 & 1;
         $771 = ($770|0)==(0);
         $$20$i = $771 ? 9007199254740992.0 : 9007199254740994.0;
         $772 = (($i$1$lcssa$i|0) / 2)&-1;
         $773 = ($765>>>0)<($772>>>0);
         do {
          if ($773) {
           $small$0$i = 0.5;
          } else {
           $774 = ($765|0)==($772|0);
           if ($774) {
            $$sum16$i = (($759) + -1022)|0;
            $775 = (($$31$i) + ($$sum16$i<<2)|0);
            $776 = ($775|0)==($z$3$lcssa$i|0);
            if ($776) {
             $small$0$i = 1.0;
             break;
            }
           }
           $small$0$i = 1.5;
          }
         } while(0);
         $777 = ($pl$0$i|0)==(0);
         do {
          if ($777) {
           $round6$1$i = $$20$i;$small$1$i = $small$0$i;
          } else {
           $778 = HEAP8[$prefix$0$i>>0]|0;
           $779 = ($778<<24>>24)==(45);
           if (!($779)) {
            $round6$1$i = $$20$i;$small$1$i = $small$0$i;
            break;
           }
           $780 = -$$20$i;
           $781 = -$small$0$i;
           $round6$1$i = $780;$small$1$i = $781;
          }
         } while(0);
         $782 = (($764) - ($765))|0;
         HEAP32[$760>>2] = $782;
         $783 = $round6$1$i + $small$1$i;
         $784 = $783 != $round6$1$i;
         if (!($784)) {
          $a$7$i = $a$3$lcssa$i;$d$3$i = $760;$e$3$i = $e$1$i;
          break;
         }
         $785 = (($782) + ($i$1$lcssa$i))|0;
         HEAP32[$760>>2] = $785;
         $786 = ($785>>>0)>(999999999);
         if ($786) {
          $a$5215$i = $a$3$lcssa$i;$d$2214$i = $760;
          while(1) {
           $787 = ((($d$2214$i)) + -4|0);
           HEAP32[$d$2214$i>>2] = 0;
           $788 = ($787>>>0)<($a$5215$i>>>0);
           if ($788) {
            $789 = ((($a$5215$i)) + -4|0);
            HEAP32[$789>>2] = 0;
            $a$6$i = $789;
           } else {
            $a$6$i = $a$5215$i;
           }
           $790 = HEAP32[$787>>2]|0;
           $791 = (($790) + 1)|0;
           HEAP32[$787>>2] = $791;
           $792 = ($791>>>0)>(999999999);
           if ($792) {
            $a$5215$i = $a$6$i;$d$2214$i = $787;
           } else {
            $a$5$lcssa$i = $a$6$i;$d$2$lcssa$i = $787;
            break;
           }
          }
         } else {
          $a$5$lcssa$i = $a$3$lcssa$i;$d$2$lcssa$i = $760;
         }
         $793 = $a$5$lcssa$i;
         $794 = (($636) - ($793))|0;
         $795 = $794 >> 2;
         $796 = ($795*9)|0;
         $797 = HEAP32[$a$5$lcssa$i>>2]|0;
         $798 = ($797>>>0)<(10);
         if ($798) {
          $a$7$i = $a$5$lcssa$i;$d$3$i = $d$2$lcssa$i;$e$3$i = $796;
          break;
         } else {
          $e$2210$i = $796;$i$2209$i = 10;
         }
         while(1) {
          $799 = ($i$2209$i*10)|0;
          $800 = (($e$2210$i) + 1)|0;
          $801 = ($797>>>0)<($799>>>0);
          if ($801) {
           $a$7$i = $a$5$lcssa$i;$d$3$i = $d$2$lcssa$i;$e$3$i = $800;
           break;
          } else {
           $e$2210$i = $800;$i$2209$i = $799;
          }
         }
        }
       } while(0);
       $802 = ((($d$3$i)) + 4|0);
       $803 = ($z$3$lcssa$i>>>0)>($802>>>0);
       $$z$3$i = $803 ? $802 : $z$3$lcssa$i;
       $a$8$ph$i = $a$7$i;$e$4$ph$i = $e$3$i;$z$6$ph$i = $$z$3$i;
      } else {
       $a$8$ph$i = $a$3$lcssa$i;$e$4$ph$i = $e$1$i;$z$6$ph$i = $z$3$lcssa$i;
      }
      $804 = (0 - ($e$4$ph$i))|0;
      $z$6$i = $z$6$ph$i;
      while(1) {
       $805 = ($z$6$i>>>0)>($a$8$ph$i>>>0);
       if (!($805)) {
        $$lcssa275$i = 0;$z$6$i$lcssa = $z$6$i;
        break;
       }
       $806 = ((($z$6$i)) + -4|0);
       $807 = HEAP32[$806>>2]|0;
       $808 = ($807|0)==(0);
       if ($808) {
        $z$6$i = $806;
       } else {
        $$lcssa275$i = 1;$z$6$i$lcssa = $z$6$i;
        break;
       }
      }
      do {
       if ($748) {
        $809 = $749&1;
        $810 = $809 ^ 1;
        $$p$$i = (($810) + ($$p$i))|0;
        $811 = ($$p$$i|0)>($e$4$ph$i|0);
        $812 = ($e$4$ph$i|0)>(-5);
        $or$cond6$i = $811 & $812;
        if ($or$cond6$i) {
         $813 = (($t$0) + -1)|0;
         $$neg152$i = (($$p$$i) + -1)|0;
         $814 = (($$neg152$i) - ($e$4$ph$i))|0;
         $$013$i = $813;$$210$i = $814;
        } else {
         $815 = (($t$0) + -2)|0;
         $816 = (($$p$$i) + -1)|0;
         $$013$i = $815;$$210$i = $816;
        }
        $817 = $fl$1$ & 8;
        $818 = ($817|0)==(0);
        if (!($818)) {
         $$114$i = $$013$i;$$311$i = $$210$i;$$pre$phi302$iZ2D = $817;
         break;
        }
        do {
         if ($$lcssa275$i) {
          $819 = ((($z$6$i$lcssa)) + -4|0);
          $820 = HEAP32[$819>>2]|0;
          $821 = ($820|0)==(0);
          if ($821) {
           $j$2$i = 9;
           break;
          }
          $822 = (($820>>>0) % 10)&-1;
          $823 = ($822|0)==(0);
          if ($823) {
           $i$3205$i = 10;$j$1206$i = 0;
          } else {
           $j$2$i = 0;
           break;
          }
          while(1) {
           $824 = ($i$3205$i*10)|0;
           $825 = (($j$1206$i) + 1)|0;
           $826 = (($820>>>0) % ($824>>>0))&-1;
           $827 = ($826|0)==(0);
           if ($827) {
            $i$3205$i = $824;$j$1206$i = $825;
           } else {
            $j$2$i = $825;
            break;
           }
          }
         } else {
          $j$2$i = 9;
         }
        } while(0);
        $828 = $$013$i | 32;
        $829 = ($828|0)==(102);
        $830 = $z$6$i$lcssa;
        $831 = (($830) - ($636))|0;
        $832 = $831 >> 2;
        $833 = ($832*9)|0;
        $834 = (($833) + -9)|0;
        if ($829) {
         $835 = (($834) - ($j$2$i))|0;
         $836 = ($835|0)<(0);
         $$21$i = $836 ? 0 : $835;
         $837 = ($$210$i|0)<($$21$i|0);
         $$210$$22$i = $837 ? $$210$i : $$21$i;
         $$114$i = $$013$i;$$311$i = $$210$$22$i;$$pre$phi302$iZ2D = 0;
         break;
        } else {
         $838 = (($834) + ($e$4$ph$i))|0;
         $839 = (($838) - ($j$2$i))|0;
         $840 = ($839|0)<(0);
         $$23$i = $840 ? 0 : $839;
         $841 = ($$210$i|0)<($$23$i|0);
         $$210$$24$i = $841 ? $$210$i : $$23$i;
         $$114$i = $$013$i;$$311$i = $$210$$24$i;$$pre$phi302$iZ2D = 0;
         break;
        }
       } else {
        $$pre301$i = $fl$1$ & 8;
        $$114$i = $t$0;$$311$i = $$p$i;$$pre$phi302$iZ2D = $$pre301$i;
       }
      } while(0);
      $842 = $$311$i | $$pre$phi302$iZ2D;
      $843 = ($842|0)!=(0);
      $844 = $843&1;
      $845 = $$114$i | 32;
      $846 = ($845|0)==(102);
      if ($846) {
       $847 = ($e$4$ph$i|0)>(0);
       $848 = $847 ? $e$4$ph$i : 0;
       $$pn$i = $848;$estr$2$i = 0;
      } else {
       $849 = ($e$4$ph$i|0)<(0);
       $850 = $849 ? $804 : $e$4$ph$i;
       $851 = ($850|0)<(0);
       if ($851) {
        $852 = ($850|0)<(0);
        $853 = $852 << 31 >> 31;
        $$05$i79$i = $7;$854 = $850;$855 = $853;
        while(1) {
         $856 = (___uremdi3(($854|0),($855|0),10,0)|0);
         $857 = tempRet0;
         $858 = $856 | 48;
         $859 = $858&255;
         $860 = ((($$05$i79$i)) + -1|0);
         HEAP8[$860>>0] = $859;
         $861 = (___udivdi3(($854|0),($855|0),10,0)|0);
         $862 = tempRet0;
         $863 = ($855>>>0)>(9);
         $864 = ($854>>>0)>(4294967295);
         $865 = ($855|0)==(9);
         $866 = $865 & $864;
         $867 = $863 | $866;
         if ($867) {
          $$05$i79$i = $860;$854 = $861;$855 = $862;
         } else {
          $$lcssa470 = $860;$1185 = $861;$1186 = $862;
          break;
         }
        }
        $$0$lcssa$i84$i = $$lcssa470;$$01$lcssa$off0$i85$i = $1185;
       } else {
        $$0$lcssa$i84$i = $7;$$01$lcssa$off0$i85$i = $850;
       }
       $868 = ($$01$lcssa$off0$i85$i|0)==(0);
       if ($868) {
        $estr$1$ph$i = $$0$lcssa$i84$i;
       } else {
        $$12$i87$i = $$0$lcssa$i84$i;$y$03$i86$i = $$01$lcssa$off0$i85$i;
        while(1) {
         $869 = (($y$03$i86$i>>>0) % 10)&-1;
         $870 = $869 | 48;
         $871 = $870&255;
         $872 = ((($$12$i87$i)) + -1|0);
         HEAP8[$872>>0] = $871;
         $873 = (($y$03$i86$i>>>0) / 10)&-1;
         $874 = ($y$03$i86$i>>>0)<(10);
         if ($874) {
          $estr$1$ph$i = $872;
          break;
         } else {
          $$12$i87$i = $872;$y$03$i86$i = $873;
         }
        }
       }
       $875 = $estr$1$ph$i;
       $876 = (($9) - ($875))|0;
       $877 = ($876|0)<(2);
       if ($877) {
        $estr$1201$i = $estr$1$ph$i;
        while(1) {
         $878 = ((($estr$1201$i)) + -1|0);
         HEAP8[$878>>0] = 48;
         $879 = $878;
         $880 = (($9) - ($879))|0;
         $881 = ($880|0)<(2);
         if ($881) {
          $estr$1201$i = $878;
         } else {
          $estr$1$lcssa$i = $878;
          break;
         }
        }
       } else {
        $estr$1$lcssa$i = $estr$1$ph$i;
       }
       $882 = $e$4$ph$i >> 31;
       $883 = $882 & 2;
       $884 = (($883) + 43)|0;
       $885 = $884&255;
       $886 = ((($estr$1$lcssa$i)) + -1|0);
       HEAP8[$886>>0] = $885;
       $887 = $$114$i&255;
       $888 = ((($estr$1$lcssa$i)) + -2|0);
       HEAP8[$888>>0] = $887;
       $889 = $888;
       $890 = (($9) - ($889))|0;
       $$pn$i = $890;$estr$2$i = $888;
      }
      $891 = (($pl$0$i) + 1)|0;
      $892 = (($891) + ($$311$i))|0;
      $l$1$i = (($892) + ($844))|0;
      $893 = (($l$1$i) + ($$pn$i))|0;
      $894 = $fl$1$ & 73728;
      $895 = ($894|0)==(0);
      $896 = ($w$1|0)>($893|0);
      $or$cond$i93$i = $895 & $896;
      if ($or$cond$i93$i) {
       $897 = (($w$1) - ($893))|0;
       $898 = ($897>>>0)>(256);
       $899 = $898 ? 256 : $897;
       _memset(($pad$i|0),32,($899|0))|0;
       $900 = ($897>>>0)>(255);
       if ($900) {
        $$01$i95$i = $897;
        while(1) {
         (___fwritex($pad$i,256,$f)|0);
         $901 = (($$01$i95$i) + -256)|0;
         $902 = ($901>>>0)>(255);
         if ($902) {
          $$01$i95$i = $901;
         } else {
          break;
         }
        }
        $903 = $897 & 255;
        $$0$lcssa$i97$i = $903;
       } else {
        $$0$lcssa$i97$i = $897;
       }
       (___fwritex($pad$i,$$0$lcssa$i97$i,$f)|0);
      }
      (___fwritex($prefix$0$i,$pl$0$i,$f)|0);
      $904 = ($894|0)==(65536);
      $or$cond$i100$i = $904 & $896;
      if ($or$cond$i100$i) {
       $905 = (($w$1) - ($893))|0;
       $906 = ($905>>>0)>(256);
       $907 = $906 ? 256 : $905;
       _memset(($pad$i|0),48,($907|0))|0;
       $908 = ($905>>>0)>(255);
       if ($908) {
        $$01$i102$i = $905;
        while(1) {
         (___fwritex($pad$i,256,$f)|0);
         $909 = (($$01$i102$i) + -256)|0;
         $910 = ($909>>>0)>(255);
         if ($910) {
          $$01$i102$i = $909;
         } else {
          break;
         }
        }
        $911 = $905 & 255;
        $$0$lcssa$i104$i = $911;
       } else {
        $$0$lcssa$i104$i = $905;
       }
       (___fwritex($pad$i,$$0$lcssa$i104$i,$f)|0);
      }
      if ($846) {
       $912 = ($a$8$ph$i>>>0)>($$31$i>>>0);
       $r$0$a$8$i = $912 ? $$31$i : $a$8$ph$i;
       $d$4191$i = $r$0$a$8$i;
       while(1) {
        $913 = HEAP32[$d$4191$i>>2]|0;
        $914 = ($913|0)==(0);
        if ($914) {
         $$1$lcssa$i112$i = $14;
        } else {
         $$12$i110$i = $14;$y$03$i109$i = $913;
         while(1) {
          $915 = (($y$03$i109$i>>>0) % 10)&-1;
          $916 = $915 | 48;
          $917 = $916&255;
          $918 = ((($$12$i110$i)) + -1|0);
          HEAP8[$918>>0] = $917;
          $919 = (($y$03$i109$i>>>0) / 10)&-1;
          $920 = ($y$03$i109$i>>>0)<(10);
          if ($920) {
           $$1$lcssa$i112$i = $918;
           break;
          } else {
           $$12$i110$i = $918;$y$03$i109$i = $919;
          }
         }
        }
        $921 = ($d$4191$i|0)==($r$0$a$8$i|0);
        do {
         if ($921) {
          $925 = ($$1$lcssa$i112$i|0)==($14|0);
          if (!($925)) {
           $s7$1$i = $$1$lcssa$i112$i;
           break;
          }
          HEAP8[$16>>0] = 48;
          $s7$1$i = $16;
         } else {
          $922 = ($$1$lcssa$i112$i>>>0)>($buf$i>>>0);
          if ($922) {
           $s7$0188$i = $$1$lcssa$i112$i;
          } else {
           $s7$1$i = $$1$lcssa$i112$i;
           break;
          }
          while(1) {
           $923 = ((($s7$0188$i)) + -1|0);
           HEAP8[$923>>0] = 48;
           $924 = ($923>>>0)>($buf$i>>>0);
           if ($924) {
            $s7$0188$i = $923;
           } else {
            $s7$1$i = $923;
            break;
           }
          }
         }
        } while(0);
        $926 = $s7$1$i;
        $927 = (($15) - ($926))|0;
        (___fwritex($s7$1$i,$927,$f)|0);
        $928 = ((($d$4191$i)) + 4|0);
        $929 = ($928>>>0)>($$31$i>>>0);
        if ($929) {
         $$lcssa479 = $928;
         break;
        } else {
         $d$4191$i = $928;
        }
       }
       $930 = ($842|0)==(0);
       if (!($930)) {
        (___fwritex(4344,1,$f)|0);
       }
       $931 = ($$lcssa479>>>0)<($z$6$i$lcssa>>>0);
       $932 = ($$311$i|0)>(0);
       $933 = $932 & $931;
       if ($933) {
        $$412184$i = $$311$i;$d$5183$i = $$lcssa479;
        while(1) {
         $934 = HEAP32[$d$5183$i>>2]|0;
         $935 = ($934|0)==(0);
         if ($935) {
          $s8$0180$i = $14;
          label = 289;
         } else {
          $$12$i119$i = $14;$y$03$i118$i = $934;
          while(1) {
           $936 = (($y$03$i118$i>>>0) % 10)&-1;
           $937 = $936 | 48;
           $938 = $937&255;
           $939 = ((($$12$i119$i)) + -1|0);
           HEAP8[$939>>0] = $938;
           $940 = (($y$03$i118$i>>>0) / 10)&-1;
           $941 = ($y$03$i118$i>>>0)<(10);
           if ($941) {
            $$lcssa480 = $939;
            break;
           } else {
            $$12$i119$i = $939;$y$03$i118$i = $940;
           }
          }
          $942 = ($$lcssa480>>>0)>($buf$i>>>0);
          if ($942) {
           $s8$0180$i = $$lcssa480;
           label = 289;
          } else {
           $s8$0$lcssa$i = $$lcssa480;
          }
         }
         if ((label|0) == 289) {
          while(1) {
           label = 0;
           $943 = ((($s8$0180$i)) + -1|0);
           HEAP8[$943>>0] = 48;
           $944 = ($943>>>0)>($buf$i>>>0);
           if ($944) {
            $s8$0180$i = $943;
            label = 289;
           } else {
            $s8$0$lcssa$i = $943;
            break;
           }
          }
         }
         $945 = ($$412184$i|0)>(9);
         $946 = $945 ? 9 : $$412184$i;
         (___fwritex($s8$0$lcssa$i,$946,$f)|0);
         $947 = ((($d$5183$i)) + 4|0);
         $948 = (($$412184$i) + -9)|0;
         $949 = ($947>>>0)<($z$6$i$lcssa>>>0);
         $950 = $945 & $949;
         if ($950) {
          $$412184$i = $948;$d$5183$i = $947;
         } else {
          $$412$lcssa$i = $948;
          break;
         }
        }
       } else {
        $$412$lcssa$i = $$311$i;
       }
       $951 = ($$412$lcssa$i|0)>(0);
       if ($951) {
        $952 = ($$412$lcssa$i>>>0)>(256);
        $953 = $952 ? 256 : $$412$lcssa$i;
        _memset(($pad$i|0),48,($953|0))|0;
        $954 = ($$412$lcssa$i>>>0)>(255);
        if ($954) {
         $$01$i126$i = $$412$lcssa$i;
         while(1) {
          (___fwritex($pad$i,256,$f)|0);
          $955 = (($$01$i126$i) + -256)|0;
          $956 = ($955>>>0)>(255);
          if ($956) {
           $$01$i126$i = $955;
          } else {
           break;
          }
         }
         $957 = $$412$lcssa$i & 255;
         $$0$lcssa$i128$i = $957;
        } else {
         $$0$lcssa$i128$i = $$412$lcssa$i;
        }
        (___fwritex($pad$i,$$0$lcssa$i128$i,$f)|0);
       }
      } else {
       $958 = ((($a$8$ph$i)) + 4|0);
       $z$6$$i = $$lcssa275$i ? $z$6$i$lcssa : $958;
       $959 = ($$311$i|0)>(-1);
       do {
        if ($959) {
         $960 = ($$pre$phi302$iZ2D|0)==(0);
         $$5196$i = $$311$i;$d$6195$i = $a$8$ph$i;
         while(1) {
          $961 = HEAP32[$d$6195$i>>2]|0;
          $962 = ($961|0)==(0);
          if ($962) {
           label = 303;
          } else {
           $$12$i134$i = $14;$y$03$i133$i = $961;
           while(1) {
            $963 = (($y$03$i133$i>>>0) % 10)&-1;
            $964 = $963 | 48;
            $965 = $964&255;
            $966 = ((($$12$i134$i)) + -1|0);
            HEAP8[$966>>0] = $965;
            $967 = (($y$03$i133$i>>>0) / 10)&-1;
            $968 = ($y$03$i133$i>>>0)<(10);
            if ($968) {
             $$12$i134$i$lcssa = $$12$i134$i;$$lcssa474 = $966;
             break;
            } else {
             $$12$i134$i = $966;$y$03$i133$i = $967;
            }
           }
           $969 = ($$lcssa474|0)==($14|0);
           if ($969) {
            label = 303;
           } else {
            $1187 = $$12$i134$i$lcssa;$s9$0$i = $$lcssa474;
           }
          }
          if ((label|0) == 303) {
           label = 0;
           HEAP8[$16>>0] = 48;
           $1187 = $14;$s9$0$i = $16;
          }
          $970 = ($d$6195$i|0)==($a$8$ph$i|0);
          do {
           if ($970) {
            (___fwritex($s9$0$i,1,$f)|0);
            $974 = ($$5196$i|0)<(1);
            $or$cond29$i = $960 & $974;
            if ($or$cond29$i) {
             $s9$2$i = $1187;
             break;
            }
            (___fwritex(4344,1,$f)|0);
            $s9$2$i = $1187;
           } else {
            $971 = ($s9$0$i>>>0)>($buf$i>>>0);
            if ($971) {
             $s9$1192$i = $s9$0$i;
            } else {
             $s9$2$i = $s9$0$i;
             break;
            }
            while(1) {
             $972 = ((($s9$1192$i)) + -1|0);
             HEAP8[$972>>0] = 48;
             $973 = ($972>>>0)>($buf$i>>>0);
             if ($973) {
              $s9$1192$i = $972;
             } else {
              $s9$2$i = $972;
              break;
             }
            }
           }
          } while(0);
          $975 = $s9$2$i;
          $976 = (($15) - ($975))|0;
          $977 = ($$5196$i|0)>($976|0);
          $978 = $977 ? $976 : $$5196$i;
          (___fwritex($s9$2$i,$978,$f)|0);
          $979 = (($$5196$i) - ($976))|0;
          $980 = ((($d$6195$i)) + 4|0);
          $981 = ($980>>>0)<($z$6$$i>>>0);
          $982 = ($979|0)>(-1);
          $983 = $981 & $982;
          if ($983) {
           $$5196$i = $979;$d$6195$i = $980;
          } else {
           $$lcssa476 = $979;
           break;
          }
         }
         $984 = ($$lcssa476|0)>(0);
         if (!($984)) {
          break;
         }
         $985 = ($$lcssa476>>>0)>(256);
         $986 = $985 ? 256 : $$lcssa476;
         _memset(($pad$i|0),48,($986|0))|0;
         $987 = ($$lcssa476>>>0)>(255);
         if ($987) {
          $$01$i141$i = $$lcssa476;
          while(1) {
           (___fwritex($pad$i,256,$f)|0);
           $988 = (($$01$i141$i) + -256)|0;
           $989 = ($988>>>0)>(255);
           if ($989) {
            $$01$i141$i = $988;
           } else {
            break;
           }
          }
          $990 = $$lcssa476 & 255;
          $$0$lcssa$i143$i = $990;
         } else {
          $$0$lcssa$i143$i = $$lcssa476;
         }
         (___fwritex($pad$i,$$0$lcssa$i143$i,$f)|0);
        } else {
        }
       } while(0);
       $991 = $estr$2$i;
       $992 = (($9) - ($991))|0;
       (___fwritex($estr$2$i,$992,$f)|0);
      }
      $993 = ($894|0)==(8192);
      $or$cond$i$i = $993 & $896;
      if ($or$cond$i$i) {
       $994 = (($w$1) - ($893))|0;
       $995 = ($994>>>0)>(256);
       $996 = $995 ? 256 : $994;
       _memset(($pad$i|0),32,($996|0))|0;
       $997 = ($994>>>0)>(255);
       if ($997) {
        $$01$i$i = $994;
        while(1) {
         (___fwritex($pad$i,256,$f)|0);
         $998 = (($$01$i$i) + -256)|0;
         $999 = ($998>>>0)>(255);
         if ($999) {
          $$01$i$i = $998;
         } else {
          break;
         }
        }
        $1000 = $994 & 255;
        $$0$lcssa$i$i = $1000;
       } else {
        $$0$lcssa$i$i = $994;
       }
       (___fwritex($pad$i,$$0$lcssa$i$i,$f)|0);
      }
      $w$30$i = $896 ? $w$1 : $893;
      $$0$i = $w$30$i;
     } else {
      $445 = $t$0 & 32;
      $446 = ($445|0)!=(0);
      $447 = $446 ? 4312 : 4320;
      $448 = ($$07$i != $$07$i) | (0.0 != 0.0);
      $449 = $446 ? 4328 : 4336;
      $pl$1$i = $448 ? 0 : $pl$0$i;
      $s1$0$i = $448 ? $449 : $447;
      $450 = (($pl$1$i) + 3)|0;
      $451 = $fl$1$ & 8192;
      $452 = ($451|0)==(0);
      $453 = ($w$1|0)>($450|0);
      $or$cond$i35$i = $452 & $453;
      if ($or$cond$i35$i) {
       $454 = (($w$1) - ($450))|0;
       $455 = ($454>>>0)>(256);
       $456 = $455 ? 256 : $454;
       _memset(($pad$i|0),32,($456|0))|0;
       $457 = ($454>>>0)>(255);
       if ($457) {
        $$01$i37$i = $454;
        while(1) {
         (___fwritex($pad$i,256,$f)|0);
         $458 = (($$01$i37$i) + -256)|0;
         $459 = ($458>>>0)>(255);
         if ($459) {
          $$01$i37$i = $458;
         } else {
          break;
         }
        }
        $460 = $454 & 255;
        $$0$lcssa$i39$i = $460;
       } else {
        $$0$lcssa$i39$i = $454;
       }
       (___fwritex($pad$i,$$0$lcssa$i39$i,$f)|0);
      }
      (___fwritex($prefix$0$i,$pl$1$i,$f)|0);
      (___fwritex($s1$0$i,3,$f)|0);
      $461 = $fl$1$ & 73728;
      $462 = ($461|0)==(8192);
      $or$cond$i42$i = $462 & $453;
      if ($or$cond$i42$i) {
       $463 = (($w$1) - ($450))|0;
       $464 = ($463>>>0)>(256);
       $465 = $464 ? 256 : $463;
       _memset(($pad$i|0),32,($465|0))|0;
       $466 = ($463>>>0)>(255);
       if ($466) {
        $$01$i44$i = $463;
        while(1) {
         (___fwritex($pad$i,256,$f)|0);
         $467 = (($$01$i44$i) + -256)|0;
         $468 = ($467>>>0)>(255);
         if ($468) {
          $$01$i44$i = $467;
         } else {
          break;
         }
        }
        $469 = $463 & 255;
        $$0$lcssa$i46$i = $469;
       } else {
        $$0$lcssa$i46$i = $463;
       }
       (___fwritex($pad$i,$$0$lcssa$i46$i,$f)|0);
      }
      $470 = $453 ? $w$1 : $450;
      $$0$i = $470;
     }
    } while(0);
    $1169 = $291;$1170 = $264;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $$0$i;$l10n$0 = $l10n$3;
    continue L1;
    break;
   }
   case 117:  {
    $336 = $291;$338 = $264;$pl$0 = 0;$prefix$0 = 4264;
    label = 84;
    break;
   }
   case 110:  {
    switch ($st$0$lcssa456|0) {
    case 2:  {
     $267 = ($cnt$1|0)<(0);
     $268 = $267 << 31 >> 31;
     $269 = $264;
     $270 = $269;
     $271 = $270;
     HEAP32[$271>>2] = $cnt$1;
     $272 = (($270) + 4)|0;
     $273 = $272;
     HEAP32[$273>>2] = $268;
     $1169 = $291;$1170 = $264;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 3:  {
     $274 = $cnt$1&65535;
     $275 = $264;
     HEAP16[$275>>1] = $274;
     $1169 = $291;$1170 = $264;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 4:  {
     $276 = $cnt$1&255;
     $277 = $264;
     HEAP8[$277>>0] = $276;
     $1169 = $291;$1170 = $264;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 6:  {
     $278 = $264;
     HEAP32[$278>>2] = $cnt$1;
     $1169 = $291;$1170 = $264;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 7:  {
     $279 = ($cnt$1|0)<(0);
     $280 = $279 << 31 >> 31;
     $281 = $264;
     $282 = $281;
     $283 = $282;
     HEAP32[$283>>2] = $cnt$1;
     $284 = (($282) + 4)|0;
     $285 = $284;
     HEAP32[$285>>2] = $280;
     $1169 = $291;$1170 = $264;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 0:  {
     $265 = $264;
     HEAP32[$265>>2] = $cnt$1;
     $1169 = $291;$1170 = $264;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 1:  {
     $266 = $264;
     HEAP32[$266>>2] = $cnt$1;
     $1169 = $291;$1170 = $264;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    default: {
     $1169 = $291;$1170 = $264;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
    }
    }
    break;
   }
   case 105: case 100:  {
    $329 = ($291|0)<(0);
    if ($329) {
     $330 = (_i64Subtract(0,0,($264|0),($291|0))|0);
     $331 = tempRet0;
     $336 = $331;$338 = $330;$pl$0 = 1;$prefix$0 = 4264;
     label = 84;
     break L86;
    }
    $332 = $fl$1$ & 2048;
    $333 = ($332|0)==(0);
    if ($333) {
     $334 = $fl$1$ & 1;
     $335 = ($334|0)==(0);
     $$ = $335 ? 4264 : (4266);
     $336 = $291;$338 = $264;$pl$0 = $334;$prefix$0 = $$;
     label = 84;
    } else {
     $336 = $291;$338 = $264;$pl$0 = 1;$prefix$0 = (4265);
     label = 84;
    }
    break;
   }
   case 112:  {
    $286 = ($p$0>>>0)>(8);
    $287 = $286 ? $p$0 : 8;
    $288 = $fl$1$ | 8;
    $fl$3 = $288;$p$1 = $287;$t$1 = 120;
    label = 73;
    break;
   }
   case 67:  {
    HEAP32[$wc>>2] = $264;
    HEAP32[$5>>2] = 0;
    $1179 = $wc;$1180 = $6;$p$4272 = -1;
    label = 97;
    break;
   }
   case 83:  {
    $391 = $264;
    $392 = ($p$0|0)==(0);
    if ($392) {
     $1181 = $264;$1182 = $391;$i$0$lcssa273 = 0;
     label = 102;
    } else {
     $1179 = $391;$1180 = $264;$p$4272 = $p$0;
     label = 97;
    }
    break;
   }
   case 88: case 120:  {
    $fl$3 = $fl$1$;$p$1 = $p$0;$t$1 = $t$0;
    label = 73;
    break;
   }
   case 111:  {
    $312 = ($264|0)==(0);
    $313 = ($291|0)==(0);
    $314 = $312 & $313;
    if ($314) {
     $$0$lcssa$i51 = $2;
    } else {
     $$03$i48 = $2;$316 = $264;$320 = $291;
     while(1) {
      $315 = $316 & 7;
      $317 = $315 | 48;
      $318 = $317&255;
      $319 = ((($$03$i48)) + -1|0);
      HEAP8[$319>>0] = $318;
      $321 = (_bitshift64Lshr(($316|0),($320|0),3)|0);
      $322 = tempRet0;
      $323 = ($321|0)==(0);
      $324 = ($322|0)==(0);
      $325 = $323 & $324;
      if ($325) {
       $$0$lcssa$i51 = $319;
       break;
      } else {
       $$03$i48 = $319;$316 = $321;$320 = $322;
      }
     }
    }
    $326 = $fl$1$ & 8;
    $327 = ($326|0)==(0);
    $or$cond19 = $327 | $314;
    $$24 = $or$cond19 ? 4264 : (4269);
    $328 = $or$cond19&1;
    $$25 = $328 ^ 1;
    $366 = $264;$368 = $291;$a$0 = $$0$lcssa$i51;$fl$4 = $fl$1$;$p$2 = $p$0;$pl$1 = $$25;$prefix$1 = $$24;
    label = 89;
    break;
   }
   case 99:  {
    $378 = $264&255;
    HEAP8[$4>>0] = $378;
    $1175 = $291;$1176 = $264;$a$2 = $4;$fl$6 = $263;$p$5 = 1;$pl$2 = 0;$prefix$2 = 4264;$z$2 = $2;
    break;
   }
   case 109:  {
    $379 = (___errno_location()|0);
    $380 = HEAP32[$379>>2]|0;
    $381 = (_strerror(($380|0))|0);
    $a$1 = $381;
    label = 94;
    break;
   }
   case 115:  {
    $382 = $264;
    $383 = ($264|0)!=(0);
    $384 = $383 ? $382 : 4280;
    $a$1 = $384;
    label = 94;
    break;
   }
   default: {
    $1175 = $291;$1176 = $264;$a$2 = $23;$fl$6 = $fl$1$;$p$5 = $p$0;$pl$2 = 0;$prefix$2 = 4264;$z$2 = $2;
   }
   }
  } while(0);
  if ((label|0) == 73) {
   label = 0;
   $289 = $t$1 & 32;
   $290 = ($264|0)==(0);
   $292 = ($291|0)==(0);
   $293 = $290 & $292;
   if ($293) {
    $366 = $264;$368 = $291;$a$0 = $2;$fl$4 = $fl$3;$p$2 = $p$1;$pl$1 = 0;$prefix$1 = 4264;
    label = 89;
   } else {
    $$012$i = $2;$295 = $264;$302 = $291;
    while(1) {
     $294 = $295 & 15;
     $296 = (4248 + ($294)|0);
     $297 = HEAP8[$296>>0]|0;
     $298 = $297&255;
     $299 = $298 | $289;
     $300 = $299&255;
     $301 = ((($$012$i)) + -1|0);
     HEAP8[$301>>0] = $300;
     $303 = (_bitshift64Lshr(($295|0),($302|0),4)|0);
     $304 = tempRet0;
     $305 = ($303|0)==(0);
     $306 = ($304|0)==(0);
     $307 = $305 & $306;
     if ($307) {
      $$lcssa491 = $301;
      break;
     } else {
      $$012$i = $301;$295 = $303;$302 = $304;
     }
    }
    $308 = $fl$3 & 8;
    $309 = ($308|0)==(0);
    if ($309) {
     $366 = $264;$368 = $291;$a$0 = $$lcssa491;$fl$4 = $fl$3;$p$2 = $p$1;$pl$1 = 0;$prefix$1 = 4264;
     label = 89;
    } else {
     $310 = $t$1 >> 4;
     $311 = (4264 + ($310)|0);
     $366 = $264;$368 = $291;$a$0 = $$lcssa491;$fl$4 = $fl$3;$p$2 = $p$1;$pl$1 = 2;$prefix$1 = $311;
     label = 89;
    }
   }
  }
  else if ((label|0) == 84) {
   label = 0;
   $337 = ($336>>>0)>(0);
   $339 = ($338>>>0)>(4294967295);
   $340 = ($336|0)==(0);
   $341 = $340 & $339;
   $342 = $337 | $341;
   if ($342) {
    $$05$i = $2;$343 = $338;$344 = $336;
    while(1) {
     $345 = (___uremdi3(($343|0),($344|0),10,0)|0);
     $346 = tempRet0;
     $347 = $345 | 48;
     $348 = $347&255;
     $349 = ((($$05$i)) + -1|0);
     HEAP8[$349>>0] = $348;
     $350 = (___udivdi3(($343|0),($344|0),10,0)|0);
     $351 = tempRet0;
     $352 = ($344>>>0)>(9);
     $353 = ($343>>>0)>(4294967295);
     $354 = ($344|0)==(9);
     $355 = $354 & $353;
     $356 = $352 | $355;
     if ($356) {
      $$05$i = $349;$343 = $350;$344 = $351;
     } else {
      $$lcssa487 = $349;$1177 = $350;$1178 = $351;
      break;
     }
    }
    $$0$lcssa$i53 = $$lcssa487;$$01$lcssa$off0$i = $1177;
   } else {
    $$0$lcssa$i53 = $2;$$01$lcssa$off0$i = $338;
   }
   $357 = ($$01$lcssa$off0$i|0)==(0);
   if ($357) {
    $366 = $338;$368 = $336;$a$0 = $$0$lcssa$i53;$fl$4 = $fl$1$;$p$2 = $p$0;$pl$1 = $pl$0;$prefix$1 = $prefix$0;
    label = 89;
   } else {
    $$12$i = $$0$lcssa$i53;$y$03$i = $$01$lcssa$off0$i;
    while(1) {
     $358 = (($y$03$i>>>0) % 10)&-1;
     $359 = $358 | 48;
     $360 = $359&255;
     $361 = ((($$12$i)) + -1|0);
     HEAP8[$361>>0] = $360;
     $362 = (($y$03$i>>>0) / 10)&-1;
     $363 = ($y$03$i>>>0)<(10);
     if ($363) {
      $366 = $338;$368 = $336;$a$0 = $361;$fl$4 = $fl$1$;$p$2 = $p$0;$pl$1 = $pl$0;$prefix$1 = $prefix$0;
      label = 89;
      break;
     } else {
      $$12$i = $361;$y$03$i = $362;
     }
    }
   }
  }
  else if ((label|0) == 94) {
   label = 0;
   $385 = (_memchr($a$1,0,$p$0)|0);
   $386 = ($385|0)==(0|0);
   $387 = $385;
   $388 = $a$1;
   $389 = (($387) - ($388))|0;
   $390 = (($a$1) + ($p$0)|0);
   $z$1 = $386 ? $390 : $385;
   $p$3 = $386 ? $p$0 : $389;
   $1175 = $291;$1176 = $264;$a$2 = $a$1;$fl$6 = $263;$p$5 = $p$3;$pl$2 = 0;$prefix$2 = 4264;$z$2 = $z$1;
  }
  else if ((label|0) == 97) {
   label = 0;
   $i$0175 = 0;$l$1174 = 0;$ws$0176 = $1179;
   while(1) {
    $393 = HEAP32[$ws$0176>>2]|0;
    $394 = ($393|0)==(0);
    if ($394) {
     $i$0$lcssa = $i$0175;$l$2 = $l$1174;
     break;
    }
    $395 = (_wctomb($mb,$393)|0);
    $396 = ($395|0)<(0);
    $397 = (($p$4272) - ($i$0175))|0;
    $398 = ($395>>>0)>($397>>>0);
    $or$cond22 = $396 | $398;
    if ($or$cond22) {
     $i$0$lcssa = $i$0175;$l$2 = $395;
     break;
    }
    $399 = ((($ws$0176)) + 4|0);
    $400 = (($395) + ($i$0175))|0;
    $401 = ($p$4272>>>0)>($400>>>0);
    if ($401) {
     $i$0175 = $400;$l$1174 = $395;$ws$0176 = $399;
    } else {
     $i$0$lcssa = $400;$l$2 = $395;
     break;
    }
   }
   $402 = ($l$2|0)<(0);
   if ($402) {
    $$0 = -1;
    label = 363;
    break;
   } else {
    $1181 = $1180;$1182 = $1179;$i$0$lcssa273 = $i$0$lcssa;
    label = 102;
   }
  }
  if ((label|0) == 89) {
   label = 0;
   $364 = ($p$2|0)>(-1);
   $365 = $fl$4 & -65537;
   $$fl$4 = $364 ? $365 : $fl$4;
   $367 = ($366|0)!=(0);
   $369 = ($368|0)!=(0);
   $370 = $367 | $369;
   $371 = ($p$2|0)!=(0);
   $or$cond = $370 | $371;
   if ($or$cond) {
    $372 = $a$0;
    $373 = (($3) - ($372))|0;
    $374 = $370&1;
    $375 = $374 ^ 1;
    $376 = (($375) + ($373))|0;
    $377 = ($p$2|0)>($376|0);
    $p$2$ = $377 ? $p$2 : $376;
    $1175 = $368;$1176 = $366;$a$2 = $a$0;$fl$6 = $$fl$4;$p$5 = $p$2$;$pl$2 = $pl$1;$prefix$2 = $prefix$1;$z$2 = $2;
   } else {
    $1175 = $368;$1176 = $366;$a$2 = $2;$fl$6 = $$fl$4;$p$5 = 0;$pl$2 = $pl$1;$prefix$2 = $prefix$1;$z$2 = $2;
   }
  }
  else if ((label|0) == 102) {
   label = 0;
   $403 = $fl$1$ & 73728;
   $404 = ($403|0)==(0);
   $405 = ($w$1|0)>($i$0$lcssa273|0);
   $or$cond$i64 = $404 & $405;
   if ($or$cond$i64) {
    $406 = (($w$1) - ($i$0$lcssa273))|0;
    $407 = ($406>>>0)>(256);
    $408 = $407 ? 256 : $406;
    _memset(($pad$i|0),32,($408|0))|0;
    $409 = ($406>>>0)>(255);
    if ($409) {
     $$01$i66 = $406;
     while(1) {
      (___fwritex($pad$i,256,$f)|0);
      $410 = (($$01$i66) + -256)|0;
      $411 = ($410>>>0)>(255);
      if ($411) {
       $$01$i66 = $410;
      } else {
       break;
      }
     }
     $412 = $406 & 255;
     $$0$lcssa$i68 = $412;
    } else {
     $$0$lcssa$i68 = $406;
    }
    (___fwritex($pad$i,$$0$lcssa$i68,$f)|0);
   }
   $413 = ($i$0$lcssa273|0)==(0);
   L463: do {
    if (!($413)) {
     $i$1186 = 0;$ws$1187 = $1182;
     while(1) {
      $414 = HEAP32[$ws$1187>>2]|0;
      $415 = ($414|0)==(0);
      if ($415) {
       break L463;
      }
      $416 = (_wctomb($mb,$414)|0);
      $417 = (($416) + ($i$1186))|0;
      $418 = ($417|0)>($i$0$lcssa273|0);
      if ($418) {
       break L463;
      }
      $419 = ((($ws$1187)) + 4|0);
      (___fwritex($mb,$416,$f)|0);
      $420 = ($417>>>0)<($i$0$lcssa273>>>0);
      if ($420) {
       $i$1186 = $417;$ws$1187 = $419;
      } else {
       break;
      }
     }
    }
   } while(0);
   $421 = ($403|0)==(8192);
   $or$cond$i71 = $421 & $405;
   if ($or$cond$i71) {
    $422 = (($w$1) - ($i$0$lcssa273))|0;
    $423 = ($422>>>0)>(256);
    $424 = $423 ? 256 : $422;
    _memset(($pad$i|0),32,($424|0))|0;
    $425 = ($422>>>0)>(255);
    if ($425) {
     $$01$i73 = $422;
     while(1) {
      (___fwritex($pad$i,256,$f)|0);
      $426 = (($$01$i73) + -256)|0;
      $427 = ($426>>>0)>(255);
      if ($427) {
       $$01$i73 = $426;
      } else {
       break;
      }
     }
     $428 = $422 & 255;
     $$0$lcssa$i75 = $428;
    } else {
     $$0$lcssa$i75 = $422;
    }
    (___fwritex($pad$i,$$0$lcssa$i75,$f)|0);
   }
   $429 = $405 ? $w$1 : $i$0$lcssa273;
   $1169 = $291;$1170 = $1181;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $429;$l10n$0 = $l10n$3;
   continue;
  }
  $1001 = $z$2;
  $1002 = $a$2;
  $1003 = (($1001) - ($1002))|0;
  $1004 = ($p$5|0)<($1003|0);
  $$p$5 = $1004 ? $1003 : $p$5;
  $1005 = (($pl$2) + ($$p$5))|0;
  $1006 = ($w$1|0)<($1005|0);
  $w$2 = $1006 ? $1005 : $w$1;
  $1007 = $fl$6 & 73728;
  $1008 = ($1007|0)==(0);
  $1009 = ($w$2|0)>($1005|0);
  $or$cond$i81 = $1008 & $1009;
  if ($or$cond$i81) {
   $1010 = (($w$2) - ($1005))|0;
   $1011 = ($1010>>>0)>(256);
   $1012 = $1011 ? 256 : $1010;
   _memset(($pad$i|0),32,($1012|0))|0;
   $1013 = ($1010>>>0)>(255);
   if ($1013) {
    $$01$i83 = $1010;
    while(1) {
     (___fwritex($pad$i,256,$f)|0);
     $1014 = (($$01$i83) + -256)|0;
     $1015 = ($1014>>>0)>(255);
     if ($1015) {
      $$01$i83 = $1014;
     } else {
      break;
     }
    }
    $1016 = $1010 & 255;
    $$0$lcssa$i85 = $1016;
   } else {
    $$0$lcssa$i85 = $1010;
   }
   (___fwritex($pad$i,$$0$lcssa$i85,$f)|0);
  }
  (___fwritex($prefix$2,$pl$2,$f)|0);
  $1017 = ($1007|0)==(65536);
  $or$cond$i57 = $1017 & $1009;
  if ($or$cond$i57) {
   $1018 = (($w$2) - ($1005))|0;
   $1019 = ($1018>>>0)>(256);
   $1020 = $1019 ? 256 : $1018;
   _memset(($pad$i|0),48,($1020|0))|0;
   $1021 = ($1018>>>0)>(255);
   if ($1021) {
    $$01$i59 = $1018;
    while(1) {
     (___fwritex($pad$i,256,$f)|0);
     $1022 = (($$01$i59) + -256)|0;
     $1023 = ($1022>>>0)>(255);
     if ($1023) {
      $$01$i59 = $1022;
     } else {
      break;
     }
    }
    $1024 = $1018 & 255;
    $$0$lcssa$i61 = $1024;
   } else {
    $$0$lcssa$i61 = $1018;
   }
   (___fwritex($pad$i,$$0$lcssa$i61,$f)|0);
  }
  $1025 = ($$p$5|0)>($1003|0);
  if ($1025) {
   $1026 = (($$p$5) - ($1003))|0;
   $1027 = ($1026>>>0)>(256);
   $1028 = $1027 ? 256 : $1026;
   _memset(($pad$i|0),48,($1028|0))|0;
   $1029 = ($1026>>>0)>(255);
   if ($1029) {
    $$01$i44 = $1026;
    while(1) {
     (___fwritex($pad$i,256,$f)|0);
     $1030 = (($$01$i44) + -256)|0;
     $1031 = ($1030>>>0)>(255);
     if ($1031) {
      $$01$i44 = $1030;
     } else {
      break;
     }
    }
    $1032 = $1026 & 255;
    $$0$lcssa$i46 = $1032;
   } else {
    $$0$lcssa$i46 = $1026;
   }
   (___fwritex($pad$i,$$0$lcssa$i46,$f)|0);
  }
  (___fwritex($a$2,$1003,$f)|0);
  $1033 = ($1007|0)==(8192);
  $or$cond$i = $1033 & $1009;
  if ($or$cond$i) {
   $1034 = (($w$2) - ($1005))|0;
   $1035 = ($1034>>>0)>(256);
   $1036 = $1035 ? 256 : $1034;
   _memset(($pad$i|0),32,($1036|0))|0;
   $1037 = ($1034>>>0)>(255);
   if ($1037) {
    $$01$i = $1034;
    while(1) {
     (___fwritex($pad$i,256,$f)|0);
     $1038 = (($$01$i) + -256)|0;
     $1039 = ($1038>>>0)>(255);
     if ($1039) {
      $$01$i = $1038;
     } else {
      break;
     }
    }
    $1040 = $1034 & 255;
    $$0$lcssa$i = $1040;
   } else {
    $$0$lcssa$i = $1034;
   }
   (___fwritex($pad$i,$$0$lcssa$i,$f)|0);
  }
  $1169 = $1175;$1170 = $1176;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $w$2;$l10n$0 = $l10n$3;
 }
 if ((label|0) == 344) {
  $1041 = ($f|0)==(0|0);
  if (!($1041)) {
   $$0 = $cnt$1$lcssa;
   STACKTOP = sp;return ($$0|0);
  }
  $1042 = ($l10n$0$lcssa|0)==(0);
  if ($1042) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  } else {
   $i$2162 = 1;
  }
  while(1) {
   $1043 = (($nl_type) + ($i$2162<<2)|0);
   $1044 = HEAP32[$1043>>2]|0;
   $1045 = ($1044|0)==(0);
   if ($1045) {
    $i$2162$lcssa = $i$2162;
    break;
   }
   $1047 = (($nl_arg) + ($i$2162<<3)|0);
   $1048 = ($1044>>>0)>(20);
   L530: do {
    if (!($1048)) {
     do {
      switch ($1044|0) {
      case 11:  {
       $arglist_current41 = HEAP32[$ap>>2]|0;
       $1069 = $arglist_current41;
       $1070 = ((0) + 4|0);
       $expanded162 = $1070;
       $expanded161 = (($expanded162) - 1)|0;
       $1071 = (($1069) + ($expanded161))|0;
       $1072 = ((0) + 4|0);
       $expanded166 = $1072;
       $expanded165 = (($expanded166) - 1)|0;
       $expanded164 = $expanded165 ^ -1;
       $1073 = $1071 & $expanded164;
       $1074 = $1073;
       $1075 = HEAP32[$1074>>2]|0;
       $arglist_next42 = ((($1074)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next42;
       $1076 = $1047;
       $1077 = $1076;
       HEAP32[$1077>>2] = $1075;
       $1078 = (($1076) + 4)|0;
       $1079 = $1078;
       HEAP32[$1079>>2] = 0;
       break L530;
       break;
      }
      case 12:  {
       $arglist_current44 = HEAP32[$ap>>2]|0;
       $1080 = $arglist_current44;
       $1081 = ((0) + 8|0);
       $expanded169 = $1081;
       $expanded168 = (($expanded169) - 1)|0;
       $1082 = (($1080) + ($expanded168))|0;
       $1083 = ((0) + 8|0);
       $expanded173 = $1083;
       $expanded172 = (($expanded173) - 1)|0;
       $expanded171 = $expanded172 ^ -1;
       $1084 = $1082 & $expanded171;
       $1085 = $1084;
       $1086 = $1085;
       $1087 = $1086;
       $1088 = HEAP32[$1087>>2]|0;
       $1089 = (($1086) + 4)|0;
       $1090 = $1089;
       $1091 = HEAP32[$1090>>2]|0;
       $arglist_next45 = ((($1085)) + 8|0);
       HEAP32[$ap>>2] = $arglist_next45;
       $1092 = $1047;
       $1093 = $1092;
       HEAP32[$1093>>2] = $1088;
       $1094 = (($1092) + 4)|0;
       $1095 = $1094;
       HEAP32[$1095>>2] = $1091;
       break L530;
       break;
      }
      case 13:  {
       $arglist_current47 = HEAP32[$ap>>2]|0;
       $1096 = $arglist_current47;
       $1097 = ((0) + 4|0);
       $expanded176 = $1097;
       $expanded175 = (($expanded176) - 1)|0;
       $1098 = (($1096) + ($expanded175))|0;
       $1099 = ((0) + 4|0);
       $expanded180 = $1099;
       $expanded179 = (($expanded180) - 1)|0;
       $expanded178 = $expanded179 ^ -1;
       $1100 = $1098 & $expanded178;
       $1101 = $1100;
       $1102 = HEAP32[$1101>>2]|0;
       $arglist_next48 = ((($1101)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next48;
       $1103 = $1102&65535;
       $1104 = $1103 << 16 >> 16;
       $1105 = ($1104|0)<(0);
       $1106 = $1105 << 31 >> 31;
       $1107 = $1047;
       $1108 = $1107;
       HEAP32[$1108>>2] = $1104;
       $1109 = (($1107) + 4)|0;
       $1110 = $1109;
       HEAP32[$1110>>2] = $1106;
       break L530;
       break;
      }
      case 14:  {
       $arglist_current50 = HEAP32[$ap>>2]|0;
       $1111 = $arglist_current50;
       $1112 = ((0) + 4|0);
       $expanded183 = $1112;
       $expanded182 = (($expanded183) - 1)|0;
       $1113 = (($1111) + ($expanded182))|0;
       $1114 = ((0) + 4|0);
       $expanded187 = $1114;
       $expanded186 = (($expanded187) - 1)|0;
       $expanded185 = $expanded186 ^ -1;
       $1115 = $1113 & $expanded185;
       $1116 = $1115;
       $1117 = HEAP32[$1116>>2]|0;
       $arglist_next51 = ((($1116)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next51;
       $$mask1$i = $1117 & 65535;
       $1118 = $1047;
       $1119 = $1118;
       HEAP32[$1119>>2] = $$mask1$i;
       $1120 = (($1118) + 4)|0;
       $1121 = $1120;
       HEAP32[$1121>>2] = 0;
       break L530;
       break;
      }
      case 15:  {
       $arglist_current53 = HEAP32[$ap>>2]|0;
       $1122 = $arglist_current53;
       $1123 = ((0) + 4|0);
       $expanded190 = $1123;
       $expanded189 = (($expanded190) - 1)|0;
       $1124 = (($1122) + ($expanded189))|0;
       $1125 = ((0) + 4|0);
       $expanded194 = $1125;
       $expanded193 = (($expanded194) - 1)|0;
       $expanded192 = $expanded193 ^ -1;
       $1126 = $1124 & $expanded192;
       $1127 = $1126;
       $1128 = HEAP32[$1127>>2]|0;
       $arglist_next54 = ((($1127)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next54;
       $1129 = $1128&255;
       $1130 = $1129 << 24 >> 24;
       $1131 = ($1130|0)<(0);
       $1132 = $1131 << 31 >> 31;
       $1133 = $1047;
       $1134 = $1133;
       HEAP32[$1134>>2] = $1130;
       $1135 = (($1133) + 4)|0;
       $1136 = $1135;
       HEAP32[$1136>>2] = $1132;
       break L530;
       break;
      }
      case 16:  {
       $arglist_current56 = HEAP32[$ap>>2]|0;
       $1137 = $arglist_current56;
       $1138 = ((0) + 4|0);
       $expanded197 = $1138;
       $expanded196 = (($expanded197) - 1)|0;
       $1139 = (($1137) + ($expanded196))|0;
       $1140 = ((0) + 4|0);
       $expanded201 = $1140;
       $expanded200 = (($expanded201) - 1)|0;
       $expanded199 = $expanded200 ^ -1;
       $1141 = $1139 & $expanded199;
       $1142 = $1141;
       $1143 = HEAP32[$1142>>2]|0;
       $arglist_next57 = ((($1142)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next57;
       $$mask$i = $1143 & 255;
       $1144 = $1047;
       $1145 = $1144;
       HEAP32[$1145>>2] = $$mask$i;
       $1146 = (($1144) + 4)|0;
       $1147 = $1146;
       HEAP32[$1147>>2] = 0;
       break L530;
       break;
      }
      case 17:  {
       $arglist_current59 = HEAP32[$ap>>2]|0;
       $1148 = $arglist_current59;
       $1149 = ((0) + 8|0);
       $expanded204 = $1149;
       $expanded203 = (($expanded204) - 1)|0;
       $1150 = (($1148) + ($expanded203))|0;
       $1151 = ((0) + 8|0);
       $expanded208 = $1151;
       $expanded207 = (($expanded208) - 1)|0;
       $expanded206 = $expanded207 ^ -1;
       $1152 = $1150 & $expanded206;
       $1153 = $1152;
       $1154 = +HEAPF64[$1153>>3];
       $arglist_next60 = ((($1153)) + 8|0);
       HEAP32[$ap>>2] = $arglist_next60;
       HEAPF64[$1047>>3] = $1154;
       break L530;
       break;
      }
      case 18:  {
       $arglist_current62 = HEAP32[$ap>>2]|0;
       $1155 = $arglist_current62;
       $1156 = ((0) + 8|0);
       $expanded211 = $1156;
       $expanded210 = (($expanded211) - 1)|0;
       $1157 = (($1155) + ($expanded210))|0;
       $1158 = ((0) + 8|0);
       $expanded215 = $1158;
       $expanded214 = (($expanded215) - 1)|0;
       $expanded213 = $expanded214 ^ -1;
       $1159 = $1157 & $expanded213;
       $1160 = $1159;
       $1161 = +HEAPF64[$1160>>3];
       $arglist_next63 = ((($1160)) + 8|0);
       HEAP32[$ap>>2] = $arglist_next63;
       HEAPF64[$1047>>3] = $1161;
       break L530;
       break;
      }
      case 9:  {
       $arglist_current35 = HEAP32[$ap>>2]|0;
       $1049 = $arglist_current35;
       $1050 = ((0) + 4|0);
       $expanded148 = $1050;
       $expanded147 = (($expanded148) - 1)|0;
       $1051 = (($1049) + ($expanded147))|0;
       $1052 = ((0) + 4|0);
       $expanded152 = $1052;
       $expanded151 = (($expanded152) - 1)|0;
       $expanded150 = $expanded151 ^ -1;
       $1053 = $1051 & $expanded150;
       $1054 = $1053;
       $1055 = HEAP32[$1054>>2]|0;
       $arglist_next36 = ((($1054)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next36;
       HEAP32[$1047>>2] = $1055;
       break L530;
       break;
      }
      case 10:  {
       $arglist_current38 = HEAP32[$ap>>2]|0;
       $1056 = $arglist_current38;
       $1057 = ((0) + 4|0);
       $expanded155 = $1057;
       $expanded154 = (($expanded155) - 1)|0;
       $1058 = (($1056) + ($expanded154))|0;
       $1059 = ((0) + 4|0);
       $expanded159 = $1059;
       $expanded158 = (($expanded159) - 1)|0;
       $expanded157 = $expanded158 ^ -1;
       $1060 = $1058 & $expanded157;
       $1061 = $1060;
       $1062 = HEAP32[$1061>>2]|0;
       $arglist_next39 = ((($1061)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next39;
       $1063 = ($1062|0)<(0);
       $1064 = $1063 << 31 >> 31;
       $1065 = $1047;
       $1066 = $1065;
       HEAP32[$1066>>2] = $1062;
       $1067 = (($1065) + 4)|0;
       $1068 = $1067;
       HEAP32[$1068>>2] = $1064;
       break L530;
       break;
      }
      default: {
       break L530;
      }
      }
     } while(0);
    }
   } while(0);
   $1162 = (($i$2162) + 1)|0;
   $1163 = ($1162|0)<(10);
   if ($1163) {
    $i$2162 = $1162;
   } else {
    $$0 = 1;
    label = 363;
    break;
   }
  }
  if ((label|0) == 363) {
   STACKTOP = sp;return ($$0|0);
  }
  $1046 = ($i$2162$lcssa|0)<(10);
  if ($1046) {
   $i$3160 = $i$2162$lcssa;
  } else {
   $$0 = 1;
   STACKTOP = sp;return ($$0|0);
  }
  while(1) {
   $1166 = (($nl_type) + ($i$3160<<2)|0);
   $1167 = HEAP32[$1166>>2]|0;
   $1168 = ($1167|0)==(0);
   $1164 = (($i$3160) + 1)|0;
   if (!($1168)) {
    $$0 = -1;
    label = 363;
    break;
   }
   $1165 = ($1164|0)<(10);
   if ($1165) {
    $i$3160 = $1164;
   } else {
    $$0 = 1;
    label = 363;
    break;
   }
  }
  if ((label|0) == 363) {
   STACKTOP = sp;return ($$0|0);
  }
 }
 else if ((label|0) == 363) {
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function _sn_write($f,$s,$l) {
 $f = $f|0;
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $l$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($f)) + 20|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $1;
 $5 = $3;
 $6 = (($4) - ($5))|0;
 $7 = ($6>>>0)>($l>>>0);
 $l$ = $7 ? $l : $6;
 _memcpy(($3|0),($s|0),($l$|0))|0;
 $8 = HEAP32[$2>>2]|0;
 $9 = (($8) + ($l$)|0);
 HEAP32[$2>>2] = $9;
 return ($l|0);
}
function _malloc($bytes) {
 $bytes = $bytes|0;
 var $$3$i = 0, $$lcssa = 0, $$lcssa211 = 0, $$lcssa215 = 0, $$lcssa216 = 0, $$lcssa217 = 0, $$lcssa219 = 0, $$lcssa222 = 0, $$lcssa224 = 0, $$lcssa226 = 0, $$lcssa228 = 0, $$lcssa230 = 0, $$lcssa232 = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i22$i = 0, $$pre$i25 = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i23$iZ2D = 0;
 var $$pre$phi$i26Z2D = 0, $$pre$phi$iZ2D = 0, $$pre$phi58$i$iZ2D = 0, $$pre$phiZ2D = 0, $$pre105 = 0, $$pre106 = 0, $$pre14$i$i = 0, $$pre43$i = 0, $$pre56$i$i = 0, $$pre57$i$i = 0, $$pre8$i = 0, $$rsize$0$i = 0, $$rsize$3$i = 0, $$sum = 0, $$sum$i$i = 0, $$sum$i$i$i = 0, $$sum$i13$i = 0, $$sum$i14$i = 0, $$sum$i17$i = 0, $$sum$i19$i = 0;
 var $$sum$i2334 = 0, $$sum$i32 = 0, $$sum$i35 = 0, $$sum1 = 0, $$sum1$i = 0, $$sum1$i$i = 0, $$sum1$i15$i = 0, $$sum1$i20$i = 0, $$sum1$i24 = 0, $$sum10 = 0, $$sum10$i = 0, $$sum10$i$i = 0, $$sum11$i = 0, $$sum11$i$i = 0, $$sum1112 = 0, $$sum112$i = 0, $$sum113$i = 0, $$sum114$i = 0, $$sum115$i = 0, $$sum116$i = 0;
 var $$sum117$i = 0, $$sum118$i = 0, $$sum119$i = 0, $$sum12$i = 0, $$sum12$i$i = 0, $$sum120$i = 0, $$sum121$i = 0, $$sum122$i = 0, $$sum123$i = 0, $$sum124$i = 0, $$sum125$i = 0, $$sum13$i = 0, $$sum13$i$i = 0, $$sum14$i$i = 0, $$sum15$i = 0, $$sum15$i$i = 0, $$sum16$i = 0, $$sum16$i$i = 0, $$sum17$i = 0, $$sum17$i$i = 0;
 var $$sum18$i = 0, $$sum1819$i$i = 0, $$sum2 = 0, $$sum2$i = 0, $$sum2$i$i = 0, $$sum2$i$i$i = 0, $$sum2$i16$i = 0, $$sum2$i18$i = 0, $$sum2$i21$i = 0, $$sum20$i$i = 0, $$sum21$i$i = 0, $$sum22$i$i = 0, $$sum23$i$i = 0, $$sum24$i$i = 0, $$sum25$i$i = 0, $$sum27$i$i = 0, $$sum28$i$i = 0, $$sum29$i$i = 0, $$sum3$i = 0, $$sum3$i27 = 0;
 var $$sum30$i$i = 0, $$sum3132$i$i = 0, $$sum34$i$i = 0, $$sum3536$i$i = 0, $$sum3738$i$i = 0, $$sum39$i$i = 0, $$sum4 = 0, $$sum4$i = 0, $$sum4$i$i = 0, $$sum4$i28 = 0, $$sum40$i$i = 0, $$sum41$i$i = 0, $$sum42$i$i = 0, $$sum5$i = 0, $$sum5$i$i = 0, $$sum56 = 0, $$sum6$i = 0, $$sum67$i$i = 0, $$sum7$i = 0, $$sum8$i = 0;
 var $$sum9 = 0, $$sum9$i = 0, $$sum9$i$i = 0, $$tsize$1$i = 0, $$v$0$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0;
 var $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0;
 var $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0;
 var $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0;
 var $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;
 var $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0;
 var $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0;
 var $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0;
 var $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0;
 var $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0;
 var $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0;
 var $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0;
 var $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0;
 var $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0;
 var $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0;
 var $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0;
 var $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0;
 var $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0;
 var $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0;
 var $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0;
 var $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0;
 var $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0;
 var $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0;
 var $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0;
 var $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0;
 var $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0;
 var $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0;
 var $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0;
 var $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0;
 var $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0;
 var $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0;
 var $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0;
 var $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0;
 var $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0;
 var $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0;
 var $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0;
 var $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0;
 var $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0;
 var $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0;
 var $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0;
 var $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0;
 var $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0;
 var $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0;
 var $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0;
 var $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0;
 var $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0;
 var $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0;
 var $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0;
 var $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0;
 var $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0;
 var $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0;
 var $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0;
 var $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0;
 var $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $F$0$i$i = 0, $F1$0$i = 0, $F4$0 = 0, $F4$0$i$i = 0;
 var $F5$0$i = 0, $I1$0$i$i = 0, $I7$0$i = 0, $I7$0$i$i = 0, $K12$029$i = 0, $K2$07$i$i = 0, $K8$051$i$i = 0, $R$0$i = 0, $R$0$i$i = 0, $R$0$i$i$lcssa = 0, $R$0$i$lcssa = 0, $R$0$i18 = 0, $R$0$i18$lcssa = 0, $R$1$i = 0, $R$1$i$i = 0, $R$1$i20 = 0, $RP$0$i = 0, $RP$0$i$i = 0, $RP$0$i$i$lcssa = 0, $RP$0$i$lcssa = 0;
 var $RP$0$i17 = 0, $RP$0$i17$lcssa = 0, $T$0$lcssa$i = 0, $T$0$lcssa$i$i = 0, $T$0$lcssa$i25$i = 0, $T$028$i = 0, $T$028$i$lcssa = 0, $T$050$i$i = 0, $T$050$i$i$lcssa = 0, $T$06$i$i = 0, $T$06$i$i$lcssa = 0, $br$0$ph$i = 0, $cond$i = 0, $cond$i$i = 0, $cond$i21 = 0, $exitcond$i$i = 0, $i$02$i$i = 0, $idx$0$i = 0, $mem$0 = 0, $nb$0 = 0;
 var $not$$i = 0, $not$$i$i = 0, $not$$i26$i = 0, $oldfirst$0$i$i = 0, $or$cond$i = 0, $or$cond$i30 = 0, $or$cond1$i = 0, $or$cond19$i = 0, $or$cond2$i = 0, $or$cond3$i = 0, $or$cond5$i = 0, $or$cond57$i = 0, $or$cond6$i = 0, $or$cond8$i = 0, $or$cond9$i = 0, $qsize$0$i$i = 0, $rsize$0$i = 0, $rsize$0$i$lcssa = 0, $rsize$0$i15 = 0, $rsize$1$i = 0;
 var $rsize$2$i = 0, $rsize$3$lcssa$i = 0, $rsize$331$i = 0, $rst$0$i = 0, $rst$1$i = 0, $sizebits$0$i = 0, $sp$0$i$i = 0, $sp$0$i$i$i = 0, $sp$084$i = 0, $sp$084$i$lcssa = 0, $sp$183$i = 0, $sp$183$i$lcssa = 0, $ssize$0$$i = 0, $ssize$0$i = 0, $ssize$1$ph$i = 0, $ssize$2$i = 0, $t$0$i = 0, $t$0$i14 = 0, $t$1$i = 0, $t$2$ph$i = 0;
 var $t$2$v$3$i = 0, $t$230$i = 0, $tbase$255$i = 0, $tsize$0$ph$i = 0, $tsize$0323944$i = 0, $tsize$1$i = 0, $tsize$254$i = 0, $v$0$i = 0, $v$0$i$lcssa = 0, $v$0$i16 = 0, $v$1$i = 0, $v$2$i = 0, $v$3$lcssa$i = 0, $v$3$ph$i = 0, $v$332$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($bytes>>>0)<(245);
 do {
  if ($0) {
   $1 = ($bytes>>>0)<(11);
   $2 = (($bytes) + 11)|0;
   $3 = $2 & -8;
   $4 = $1 ? 16 : $3;
   $5 = $4 >>> 3;
   $6 = HEAP32[4352>>2]|0;
   $7 = $6 >>> $5;
   $8 = $7 & 3;
   $9 = ($8|0)==(0);
   if (!($9)) {
    $10 = $7 & 1;
    $11 = $10 ^ 1;
    $12 = (($11) + ($5))|0;
    $13 = $12 << 1;
    $14 = (4392 + ($13<<2)|0);
    $$sum10 = (($13) + 2)|0;
    $15 = (4392 + ($$sum10<<2)|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = ((($16)) + 8|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ($14|0)==($18|0);
    do {
     if ($19) {
      $20 = 1 << $12;
      $21 = $20 ^ -1;
      $22 = $6 & $21;
      HEAP32[4352>>2] = $22;
     } else {
      $23 = HEAP32[(4368)>>2]|0;
      $24 = ($18>>>0)<($23>>>0);
      if ($24) {
       _abort();
       // unreachable;
      }
      $25 = ((($18)) + 12|0);
      $26 = HEAP32[$25>>2]|0;
      $27 = ($26|0)==($16|0);
      if ($27) {
       HEAP32[$25>>2] = $14;
       HEAP32[$15>>2] = $18;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $28 = $12 << 3;
    $29 = $28 | 3;
    $30 = ((($16)) + 4|0);
    HEAP32[$30>>2] = $29;
    $$sum1112 = $28 | 4;
    $31 = (($16) + ($$sum1112)|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = $32 | 1;
    HEAP32[$31>>2] = $33;
    $mem$0 = $17;
    return ($mem$0|0);
   }
   $34 = HEAP32[(4360)>>2]|0;
   $35 = ($4>>>0)>($34>>>0);
   if ($35) {
    $36 = ($7|0)==(0);
    if (!($36)) {
     $37 = $7 << $5;
     $38 = 2 << $5;
     $39 = (0 - ($38))|0;
     $40 = $38 | $39;
     $41 = $37 & $40;
     $42 = (0 - ($41))|0;
     $43 = $41 & $42;
     $44 = (($43) + -1)|0;
     $45 = $44 >>> 12;
     $46 = $45 & 16;
     $47 = $44 >>> $46;
     $48 = $47 >>> 5;
     $49 = $48 & 8;
     $50 = $49 | $46;
     $51 = $47 >>> $49;
     $52 = $51 >>> 2;
     $53 = $52 & 4;
     $54 = $50 | $53;
     $55 = $51 >>> $53;
     $56 = $55 >>> 1;
     $57 = $56 & 2;
     $58 = $54 | $57;
     $59 = $55 >>> $57;
     $60 = $59 >>> 1;
     $61 = $60 & 1;
     $62 = $58 | $61;
     $63 = $59 >>> $61;
     $64 = (($62) + ($63))|0;
     $65 = $64 << 1;
     $66 = (4392 + ($65<<2)|0);
     $$sum4 = (($65) + 2)|0;
     $67 = (4392 + ($$sum4<<2)|0);
     $68 = HEAP32[$67>>2]|0;
     $69 = ((($68)) + 8|0);
     $70 = HEAP32[$69>>2]|0;
     $71 = ($66|0)==($70|0);
     do {
      if ($71) {
       $72 = 1 << $64;
       $73 = $72 ^ -1;
       $74 = $6 & $73;
       HEAP32[4352>>2] = $74;
       $88 = $34;
      } else {
       $75 = HEAP32[(4368)>>2]|0;
       $76 = ($70>>>0)<($75>>>0);
       if ($76) {
        _abort();
        // unreachable;
       }
       $77 = ((($70)) + 12|0);
       $78 = HEAP32[$77>>2]|0;
       $79 = ($78|0)==($68|0);
       if ($79) {
        HEAP32[$77>>2] = $66;
        HEAP32[$67>>2] = $70;
        $$pre = HEAP32[(4360)>>2]|0;
        $88 = $$pre;
        break;
       } else {
        _abort();
        // unreachable;
       }
      }
     } while(0);
     $80 = $64 << 3;
     $81 = (($80) - ($4))|0;
     $82 = $4 | 3;
     $83 = ((($68)) + 4|0);
     HEAP32[$83>>2] = $82;
     $84 = (($68) + ($4)|0);
     $85 = $81 | 1;
     $$sum56 = $4 | 4;
     $86 = (($68) + ($$sum56)|0);
     HEAP32[$86>>2] = $85;
     $87 = (($68) + ($80)|0);
     HEAP32[$87>>2] = $81;
     $89 = ($88|0)==(0);
     if (!($89)) {
      $90 = HEAP32[(4372)>>2]|0;
      $91 = $88 >>> 3;
      $92 = $91 << 1;
      $93 = (4392 + ($92<<2)|0);
      $94 = HEAP32[4352>>2]|0;
      $95 = 1 << $91;
      $96 = $94 & $95;
      $97 = ($96|0)==(0);
      if ($97) {
       $98 = $94 | $95;
       HEAP32[4352>>2] = $98;
       $$pre105 = (($92) + 2)|0;
       $$pre106 = (4392 + ($$pre105<<2)|0);
       $$pre$phiZ2D = $$pre106;$F4$0 = $93;
      } else {
       $$sum9 = (($92) + 2)|0;
       $99 = (4392 + ($$sum9<<2)|0);
       $100 = HEAP32[$99>>2]|0;
       $101 = HEAP32[(4368)>>2]|0;
       $102 = ($100>>>0)<($101>>>0);
       if ($102) {
        _abort();
        // unreachable;
       } else {
        $$pre$phiZ2D = $99;$F4$0 = $100;
       }
      }
      HEAP32[$$pre$phiZ2D>>2] = $90;
      $103 = ((($F4$0)) + 12|0);
      HEAP32[$103>>2] = $90;
      $104 = ((($90)) + 8|0);
      HEAP32[$104>>2] = $F4$0;
      $105 = ((($90)) + 12|0);
      HEAP32[$105>>2] = $93;
     }
     HEAP32[(4360)>>2] = $81;
     HEAP32[(4372)>>2] = $84;
     $mem$0 = $69;
     return ($mem$0|0);
    }
    $106 = HEAP32[(4356)>>2]|0;
    $107 = ($106|0)==(0);
    if ($107) {
     $nb$0 = $4;
    } else {
     $108 = (0 - ($106))|0;
     $109 = $106 & $108;
     $110 = (($109) + -1)|0;
     $111 = $110 >>> 12;
     $112 = $111 & 16;
     $113 = $110 >>> $112;
     $114 = $113 >>> 5;
     $115 = $114 & 8;
     $116 = $115 | $112;
     $117 = $113 >>> $115;
     $118 = $117 >>> 2;
     $119 = $118 & 4;
     $120 = $116 | $119;
     $121 = $117 >>> $119;
     $122 = $121 >>> 1;
     $123 = $122 & 2;
     $124 = $120 | $123;
     $125 = $121 >>> $123;
     $126 = $125 >>> 1;
     $127 = $126 & 1;
     $128 = $124 | $127;
     $129 = $125 >>> $127;
     $130 = (($128) + ($129))|0;
     $131 = (4656 + ($130<<2)|0);
     $132 = HEAP32[$131>>2]|0;
     $133 = ((($132)) + 4|0);
     $134 = HEAP32[$133>>2]|0;
     $135 = $134 & -8;
     $136 = (($135) - ($4))|0;
     $rsize$0$i = $136;$t$0$i = $132;$v$0$i = $132;
     while(1) {
      $137 = ((($t$0$i)) + 16|0);
      $138 = HEAP32[$137>>2]|0;
      $139 = ($138|0)==(0|0);
      if ($139) {
       $140 = ((($t$0$i)) + 20|0);
       $141 = HEAP32[$140>>2]|0;
       $142 = ($141|0)==(0|0);
       if ($142) {
        $rsize$0$i$lcssa = $rsize$0$i;$v$0$i$lcssa = $v$0$i;
        break;
       } else {
        $144 = $141;
       }
      } else {
       $144 = $138;
      }
      $143 = ((($144)) + 4|0);
      $145 = HEAP32[$143>>2]|0;
      $146 = $145 & -8;
      $147 = (($146) - ($4))|0;
      $148 = ($147>>>0)<($rsize$0$i>>>0);
      $$rsize$0$i = $148 ? $147 : $rsize$0$i;
      $$v$0$i = $148 ? $144 : $v$0$i;
      $rsize$0$i = $$rsize$0$i;$t$0$i = $144;$v$0$i = $$v$0$i;
     }
     $149 = HEAP32[(4368)>>2]|0;
     $150 = ($v$0$i$lcssa>>>0)<($149>>>0);
     if ($150) {
      _abort();
      // unreachable;
     }
     $151 = (($v$0$i$lcssa) + ($4)|0);
     $152 = ($v$0$i$lcssa>>>0)<($151>>>0);
     if (!($152)) {
      _abort();
      // unreachable;
     }
     $153 = ((($v$0$i$lcssa)) + 24|0);
     $154 = HEAP32[$153>>2]|0;
     $155 = ((($v$0$i$lcssa)) + 12|0);
     $156 = HEAP32[$155>>2]|0;
     $157 = ($156|0)==($v$0$i$lcssa|0);
     do {
      if ($157) {
       $167 = ((($v$0$i$lcssa)) + 20|0);
       $168 = HEAP32[$167>>2]|0;
       $169 = ($168|0)==(0|0);
       if ($169) {
        $170 = ((($v$0$i$lcssa)) + 16|0);
        $171 = HEAP32[$170>>2]|0;
        $172 = ($171|0)==(0|0);
        if ($172) {
         $R$1$i = 0;
         break;
        } else {
         $R$0$i = $171;$RP$0$i = $170;
        }
       } else {
        $R$0$i = $168;$RP$0$i = $167;
       }
       while(1) {
        $173 = ((($R$0$i)) + 20|0);
        $174 = HEAP32[$173>>2]|0;
        $175 = ($174|0)==(0|0);
        if (!($175)) {
         $R$0$i = $174;$RP$0$i = $173;
         continue;
        }
        $176 = ((($R$0$i)) + 16|0);
        $177 = HEAP32[$176>>2]|0;
        $178 = ($177|0)==(0|0);
        if ($178) {
         $R$0$i$lcssa = $R$0$i;$RP$0$i$lcssa = $RP$0$i;
         break;
        } else {
         $R$0$i = $177;$RP$0$i = $176;
        }
       }
       $179 = ($RP$0$i$lcssa>>>0)<($149>>>0);
       if ($179) {
        _abort();
        // unreachable;
       } else {
        HEAP32[$RP$0$i$lcssa>>2] = 0;
        $R$1$i = $R$0$i$lcssa;
        break;
       }
      } else {
       $158 = ((($v$0$i$lcssa)) + 8|0);
       $159 = HEAP32[$158>>2]|0;
       $160 = ($159>>>0)<($149>>>0);
       if ($160) {
        _abort();
        // unreachable;
       }
       $161 = ((($159)) + 12|0);
       $162 = HEAP32[$161>>2]|0;
       $163 = ($162|0)==($v$0$i$lcssa|0);
       if (!($163)) {
        _abort();
        // unreachable;
       }
       $164 = ((($156)) + 8|0);
       $165 = HEAP32[$164>>2]|0;
       $166 = ($165|0)==($v$0$i$lcssa|0);
       if ($166) {
        HEAP32[$161>>2] = $156;
        HEAP32[$164>>2] = $159;
        $R$1$i = $156;
        break;
       } else {
        _abort();
        // unreachable;
       }
      }
     } while(0);
     $180 = ($154|0)==(0|0);
     do {
      if (!($180)) {
       $181 = ((($v$0$i$lcssa)) + 28|0);
       $182 = HEAP32[$181>>2]|0;
       $183 = (4656 + ($182<<2)|0);
       $184 = HEAP32[$183>>2]|0;
       $185 = ($v$0$i$lcssa|0)==($184|0);
       if ($185) {
        HEAP32[$183>>2] = $R$1$i;
        $cond$i = ($R$1$i|0)==(0|0);
        if ($cond$i) {
         $186 = 1 << $182;
         $187 = $186 ^ -1;
         $188 = HEAP32[(4356)>>2]|0;
         $189 = $188 & $187;
         HEAP32[(4356)>>2] = $189;
         break;
        }
       } else {
        $190 = HEAP32[(4368)>>2]|0;
        $191 = ($154>>>0)<($190>>>0);
        if ($191) {
         _abort();
         // unreachable;
        }
        $192 = ((($154)) + 16|0);
        $193 = HEAP32[$192>>2]|0;
        $194 = ($193|0)==($v$0$i$lcssa|0);
        if ($194) {
         HEAP32[$192>>2] = $R$1$i;
        } else {
         $195 = ((($154)) + 20|0);
         HEAP32[$195>>2] = $R$1$i;
        }
        $196 = ($R$1$i|0)==(0|0);
        if ($196) {
         break;
        }
       }
       $197 = HEAP32[(4368)>>2]|0;
       $198 = ($R$1$i>>>0)<($197>>>0);
       if ($198) {
        _abort();
        // unreachable;
       }
       $199 = ((($R$1$i)) + 24|0);
       HEAP32[$199>>2] = $154;
       $200 = ((($v$0$i$lcssa)) + 16|0);
       $201 = HEAP32[$200>>2]|0;
       $202 = ($201|0)==(0|0);
       do {
        if (!($202)) {
         $203 = ($201>>>0)<($197>>>0);
         if ($203) {
          _abort();
          // unreachable;
         } else {
          $204 = ((($R$1$i)) + 16|0);
          HEAP32[$204>>2] = $201;
          $205 = ((($201)) + 24|0);
          HEAP32[$205>>2] = $R$1$i;
          break;
         }
        }
       } while(0);
       $206 = ((($v$0$i$lcssa)) + 20|0);
       $207 = HEAP32[$206>>2]|0;
       $208 = ($207|0)==(0|0);
       if (!($208)) {
        $209 = HEAP32[(4368)>>2]|0;
        $210 = ($207>>>0)<($209>>>0);
        if ($210) {
         _abort();
         // unreachable;
        } else {
         $211 = ((($R$1$i)) + 20|0);
         HEAP32[$211>>2] = $207;
         $212 = ((($207)) + 24|0);
         HEAP32[$212>>2] = $R$1$i;
         break;
        }
       }
      }
     } while(0);
     $213 = ($rsize$0$i$lcssa>>>0)<(16);
     if ($213) {
      $214 = (($rsize$0$i$lcssa) + ($4))|0;
      $215 = $214 | 3;
      $216 = ((($v$0$i$lcssa)) + 4|0);
      HEAP32[$216>>2] = $215;
      $$sum4$i = (($214) + 4)|0;
      $217 = (($v$0$i$lcssa) + ($$sum4$i)|0);
      $218 = HEAP32[$217>>2]|0;
      $219 = $218 | 1;
      HEAP32[$217>>2] = $219;
     } else {
      $220 = $4 | 3;
      $221 = ((($v$0$i$lcssa)) + 4|0);
      HEAP32[$221>>2] = $220;
      $222 = $rsize$0$i$lcssa | 1;
      $$sum$i35 = $4 | 4;
      $223 = (($v$0$i$lcssa) + ($$sum$i35)|0);
      HEAP32[$223>>2] = $222;
      $$sum1$i = (($rsize$0$i$lcssa) + ($4))|0;
      $224 = (($v$0$i$lcssa) + ($$sum1$i)|0);
      HEAP32[$224>>2] = $rsize$0$i$lcssa;
      $225 = HEAP32[(4360)>>2]|0;
      $226 = ($225|0)==(0);
      if (!($226)) {
       $227 = HEAP32[(4372)>>2]|0;
       $228 = $225 >>> 3;
       $229 = $228 << 1;
       $230 = (4392 + ($229<<2)|0);
       $231 = HEAP32[4352>>2]|0;
       $232 = 1 << $228;
       $233 = $231 & $232;
       $234 = ($233|0)==(0);
       if ($234) {
        $235 = $231 | $232;
        HEAP32[4352>>2] = $235;
        $$pre$i = (($229) + 2)|0;
        $$pre8$i = (4392 + ($$pre$i<<2)|0);
        $$pre$phi$iZ2D = $$pre8$i;$F1$0$i = $230;
       } else {
        $$sum3$i = (($229) + 2)|0;
        $236 = (4392 + ($$sum3$i<<2)|0);
        $237 = HEAP32[$236>>2]|0;
        $238 = HEAP32[(4368)>>2]|0;
        $239 = ($237>>>0)<($238>>>0);
        if ($239) {
         _abort();
         // unreachable;
        } else {
         $$pre$phi$iZ2D = $236;$F1$0$i = $237;
        }
       }
       HEAP32[$$pre$phi$iZ2D>>2] = $227;
       $240 = ((($F1$0$i)) + 12|0);
       HEAP32[$240>>2] = $227;
       $241 = ((($227)) + 8|0);
       HEAP32[$241>>2] = $F1$0$i;
       $242 = ((($227)) + 12|0);
       HEAP32[$242>>2] = $230;
      }
      HEAP32[(4360)>>2] = $rsize$0$i$lcssa;
      HEAP32[(4372)>>2] = $151;
     }
     $243 = ((($v$0$i$lcssa)) + 8|0);
     $mem$0 = $243;
     return ($mem$0|0);
    }
   } else {
    $nb$0 = $4;
   }
  } else {
   $244 = ($bytes>>>0)>(4294967231);
   if ($244) {
    $nb$0 = -1;
   } else {
    $245 = (($bytes) + 11)|0;
    $246 = $245 & -8;
    $247 = HEAP32[(4356)>>2]|0;
    $248 = ($247|0)==(0);
    if ($248) {
     $nb$0 = $246;
    } else {
     $249 = (0 - ($246))|0;
     $250 = $245 >>> 8;
     $251 = ($250|0)==(0);
     if ($251) {
      $idx$0$i = 0;
     } else {
      $252 = ($246>>>0)>(16777215);
      if ($252) {
       $idx$0$i = 31;
      } else {
       $253 = (($250) + 1048320)|0;
       $254 = $253 >>> 16;
       $255 = $254 & 8;
       $256 = $250 << $255;
       $257 = (($256) + 520192)|0;
       $258 = $257 >>> 16;
       $259 = $258 & 4;
       $260 = $259 | $255;
       $261 = $256 << $259;
       $262 = (($261) + 245760)|0;
       $263 = $262 >>> 16;
       $264 = $263 & 2;
       $265 = $260 | $264;
       $266 = (14 - ($265))|0;
       $267 = $261 << $264;
       $268 = $267 >>> 15;
       $269 = (($266) + ($268))|0;
       $270 = $269 << 1;
       $271 = (($269) + 7)|0;
       $272 = $246 >>> $271;
       $273 = $272 & 1;
       $274 = $273 | $270;
       $idx$0$i = $274;
      }
     }
     $275 = (4656 + ($idx$0$i<<2)|0);
     $276 = HEAP32[$275>>2]|0;
     $277 = ($276|0)==(0|0);
     L9: do {
      if ($277) {
       $rsize$2$i = $249;$t$1$i = 0;$v$2$i = 0;
       label = 86;
      } else {
       $278 = ($idx$0$i|0)==(31);
       $279 = $idx$0$i >>> 1;
       $280 = (25 - ($279))|0;
       $281 = $278 ? 0 : $280;
       $282 = $246 << $281;
       $rsize$0$i15 = $249;$rst$0$i = 0;$sizebits$0$i = $282;$t$0$i14 = $276;$v$0$i16 = 0;
       while(1) {
        $283 = ((($t$0$i14)) + 4|0);
        $284 = HEAP32[$283>>2]|0;
        $285 = $284 & -8;
        $286 = (($285) - ($246))|0;
        $287 = ($286>>>0)<($rsize$0$i15>>>0);
        if ($287) {
         $288 = ($285|0)==($246|0);
         if ($288) {
          $rsize$331$i = $286;$t$230$i = $t$0$i14;$v$332$i = $t$0$i14;
          label = 90;
          break L9;
         } else {
          $rsize$1$i = $286;$v$1$i = $t$0$i14;
         }
        } else {
         $rsize$1$i = $rsize$0$i15;$v$1$i = $v$0$i16;
        }
        $289 = ((($t$0$i14)) + 20|0);
        $290 = HEAP32[$289>>2]|0;
        $291 = $sizebits$0$i >>> 31;
        $292 = (((($t$0$i14)) + 16|0) + ($291<<2)|0);
        $293 = HEAP32[$292>>2]|0;
        $294 = ($290|0)==(0|0);
        $295 = ($290|0)==($293|0);
        $or$cond19$i = $294 | $295;
        $rst$1$i = $or$cond19$i ? $rst$0$i : $290;
        $296 = ($293|0)==(0|0);
        $297 = $sizebits$0$i << 1;
        if ($296) {
         $rsize$2$i = $rsize$1$i;$t$1$i = $rst$1$i;$v$2$i = $v$1$i;
         label = 86;
         break;
        } else {
         $rsize$0$i15 = $rsize$1$i;$rst$0$i = $rst$1$i;$sizebits$0$i = $297;$t$0$i14 = $293;$v$0$i16 = $v$1$i;
        }
       }
      }
     } while(0);
     if ((label|0) == 86) {
      $298 = ($t$1$i|0)==(0|0);
      $299 = ($v$2$i|0)==(0|0);
      $or$cond$i = $298 & $299;
      if ($or$cond$i) {
       $300 = 2 << $idx$0$i;
       $301 = (0 - ($300))|0;
       $302 = $300 | $301;
       $303 = $247 & $302;
       $304 = ($303|0)==(0);
       if ($304) {
        $nb$0 = $246;
        break;
       }
       $305 = (0 - ($303))|0;
       $306 = $303 & $305;
       $307 = (($306) + -1)|0;
       $308 = $307 >>> 12;
       $309 = $308 & 16;
       $310 = $307 >>> $309;
       $311 = $310 >>> 5;
       $312 = $311 & 8;
       $313 = $312 | $309;
       $314 = $310 >>> $312;
       $315 = $314 >>> 2;
       $316 = $315 & 4;
       $317 = $313 | $316;
       $318 = $314 >>> $316;
       $319 = $318 >>> 1;
       $320 = $319 & 2;
       $321 = $317 | $320;
       $322 = $318 >>> $320;
       $323 = $322 >>> 1;
       $324 = $323 & 1;
       $325 = $321 | $324;
       $326 = $322 >>> $324;
       $327 = (($325) + ($326))|0;
       $328 = (4656 + ($327<<2)|0);
       $329 = HEAP32[$328>>2]|0;
       $t$2$ph$i = $329;$v$3$ph$i = 0;
      } else {
       $t$2$ph$i = $t$1$i;$v$3$ph$i = $v$2$i;
      }
      $330 = ($t$2$ph$i|0)==(0|0);
      if ($330) {
       $rsize$3$lcssa$i = $rsize$2$i;$v$3$lcssa$i = $v$3$ph$i;
      } else {
       $rsize$331$i = $rsize$2$i;$t$230$i = $t$2$ph$i;$v$332$i = $v$3$ph$i;
       label = 90;
      }
     }
     if ((label|0) == 90) {
      while(1) {
       label = 0;
       $331 = ((($t$230$i)) + 4|0);
       $332 = HEAP32[$331>>2]|0;
       $333 = $332 & -8;
       $334 = (($333) - ($246))|0;
       $335 = ($334>>>0)<($rsize$331$i>>>0);
       $$rsize$3$i = $335 ? $334 : $rsize$331$i;
       $t$2$v$3$i = $335 ? $t$230$i : $v$332$i;
       $336 = ((($t$230$i)) + 16|0);
       $337 = HEAP32[$336>>2]|0;
       $338 = ($337|0)==(0|0);
       if (!($338)) {
        $rsize$331$i = $$rsize$3$i;$t$230$i = $337;$v$332$i = $t$2$v$3$i;
        label = 90;
        continue;
       }
       $339 = ((($t$230$i)) + 20|0);
       $340 = HEAP32[$339>>2]|0;
       $341 = ($340|0)==(0|0);
       if ($341) {
        $rsize$3$lcssa$i = $$rsize$3$i;$v$3$lcssa$i = $t$2$v$3$i;
        break;
       } else {
        $rsize$331$i = $$rsize$3$i;$t$230$i = $340;$v$332$i = $t$2$v$3$i;
        label = 90;
       }
      }
     }
     $342 = ($v$3$lcssa$i|0)==(0|0);
     if ($342) {
      $nb$0 = $246;
     } else {
      $343 = HEAP32[(4360)>>2]|0;
      $344 = (($343) - ($246))|0;
      $345 = ($rsize$3$lcssa$i>>>0)<($344>>>0);
      if ($345) {
       $346 = HEAP32[(4368)>>2]|0;
       $347 = ($v$3$lcssa$i>>>0)<($346>>>0);
       if ($347) {
        _abort();
        // unreachable;
       }
       $348 = (($v$3$lcssa$i) + ($246)|0);
       $349 = ($v$3$lcssa$i>>>0)<($348>>>0);
       if (!($349)) {
        _abort();
        // unreachable;
       }
       $350 = ((($v$3$lcssa$i)) + 24|0);
       $351 = HEAP32[$350>>2]|0;
       $352 = ((($v$3$lcssa$i)) + 12|0);
       $353 = HEAP32[$352>>2]|0;
       $354 = ($353|0)==($v$3$lcssa$i|0);
       do {
        if ($354) {
         $364 = ((($v$3$lcssa$i)) + 20|0);
         $365 = HEAP32[$364>>2]|0;
         $366 = ($365|0)==(0|0);
         if ($366) {
          $367 = ((($v$3$lcssa$i)) + 16|0);
          $368 = HEAP32[$367>>2]|0;
          $369 = ($368|0)==(0|0);
          if ($369) {
           $R$1$i20 = 0;
           break;
          } else {
           $R$0$i18 = $368;$RP$0$i17 = $367;
          }
         } else {
          $R$0$i18 = $365;$RP$0$i17 = $364;
         }
         while(1) {
          $370 = ((($R$0$i18)) + 20|0);
          $371 = HEAP32[$370>>2]|0;
          $372 = ($371|0)==(0|0);
          if (!($372)) {
           $R$0$i18 = $371;$RP$0$i17 = $370;
           continue;
          }
          $373 = ((($R$0$i18)) + 16|0);
          $374 = HEAP32[$373>>2]|0;
          $375 = ($374|0)==(0|0);
          if ($375) {
           $R$0$i18$lcssa = $R$0$i18;$RP$0$i17$lcssa = $RP$0$i17;
           break;
          } else {
           $R$0$i18 = $374;$RP$0$i17 = $373;
          }
         }
         $376 = ($RP$0$i17$lcssa>>>0)<($346>>>0);
         if ($376) {
          _abort();
          // unreachable;
         } else {
          HEAP32[$RP$0$i17$lcssa>>2] = 0;
          $R$1$i20 = $R$0$i18$lcssa;
          break;
         }
        } else {
         $355 = ((($v$3$lcssa$i)) + 8|0);
         $356 = HEAP32[$355>>2]|0;
         $357 = ($356>>>0)<($346>>>0);
         if ($357) {
          _abort();
          // unreachable;
         }
         $358 = ((($356)) + 12|0);
         $359 = HEAP32[$358>>2]|0;
         $360 = ($359|0)==($v$3$lcssa$i|0);
         if (!($360)) {
          _abort();
          // unreachable;
         }
         $361 = ((($353)) + 8|0);
         $362 = HEAP32[$361>>2]|0;
         $363 = ($362|0)==($v$3$lcssa$i|0);
         if ($363) {
          HEAP32[$358>>2] = $353;
          HEAP32[$361>>2] = $356;
          $R$1$i20 = $353;
          break;
         } else {
          _abort();
          // unreachable;
         }
        }
       } while(0);
       $377 = ($351|0)==(0|0);
       do {
        if (!($377)) {
         $378 = ((($v$3$lcssa$i)) + 28|0);
         $379 = HEAP32[$378>>2]|0;
         $380 = (4656 + ($379<<2)|0);
         $381 = HEAP32[$380>>2]|0;
         $382 = ($v$3$lcssa$i|0)==($381|0);
         if ($382) {
          HEAP32[$380>>2] = $R$1$i20;
          $cond$i21 = ($R$1$i20|0)==(0|0);
          if ($cond$i21) {
           $383 = 1 << $379;
           $384 = $383 ^ -1;
           $385 = HEAP32[(4356)>>2]|0;
           $386 = $385 & $384;
           HEAP32[(4356)>>2] = $386;
           break;
          }
         } else {
          $387 = HEAP32[(4368)>>2]|0;
          $388 = ($351>>>0)<($387>>>0);
          if ($388) {
           _abort();
           // unreachable;
          }
          $389 = ((($351)) + 16|0);
          $390 = HEAP32[$389>>2]|0;
          $391 = ($390|0)==($v$3$lcssa$i|0);
          if ($391) {
           HEAP32[$389>>2] = $R$1$i20;
          } else {
           $392 = ((($351)) + 20|0);
           HEAP32[$392>>2] = $R$1$i20;
          }
          $393 = ($R$1$i20|0)==(0|0);
          if ($393) {
           break;
          }
         }
         $394 = HEAP32[(4368)>>2]|0;
         $395 = ($R$1$i20>>>0)<($394>>>0);
         if ($395) {
          _abort();
          // unreachable;
         }
         $396 = ((($R$1$i20)) + 24|0);
         HEAP32[$396>>2] = $351;
         $397 = ((($v$3$lcssa$i)) + 16|0);
         $398 = HEAP32[$397>>2]|0;
         $399 = ($398|0)==(0|0);
         do {
          if (!($399)) {
           $400 = ($398>>>0)<($394>>>0);
           if ($400) {
            _abort();
            // unreachable;
           } else {
            $401 = ((($R$1$i20)) + 16|0);
            HEAP32[$401>>2] = $398;
            $402 = ((($398)) + 24|0);
            HEAP32[$402>>2] = $R$1$i20;
            break;
           }
          }
         } while(0);
         $403 = ((($v$3$lcssa$i)) + 20|0);
         $404 = HEAP32[$403>>2]|0;
         $405 = ($404|0)==(0|0);
         if (!($405)) {
          $406 = HEAP32[(4368)>>2]|0;
          $407 = ($404>>>0)<($406>>>0);
          if ($407) {
           _abort();
           // unreachable;
          } else {
           $408 = ((($R$1$i20)) + 20|0);
           HEAP32[$408>>2] = $404;
           $409 = ((($404)) + 24|0);
           HEAP32[$409>>2] = $R$1$i20;
           break;
          }
         }
        }
       } while(0);
       $410 = ($rsize$3$lcssa$i>>>0)<(16);
       L85: do {
        if ($410) {
         $411 = (($rsize$3$lcssa$i) + ($246))|0;
         $412 = $411 | 3;
         $413 = ((($v$3$lcssa$i)) + 4|0);
         HEAP32[$413>>2] = $412;
         $$sum18$i = (($411) + 4)|0;
         $414 = (($v$3$lcssa$i) + ($$sum18$i)|0);
         $415 = HEAP32[$414>>2]|0;
         $416 = $415 | 1;
         HEAP32[$414>>2] = $416;
        } else {
         $417 = $246 | 3;
         $418 = ((($v$3$lcssa$i)) + 4|0);
         HEAP32[$418>>2] = $417;
         $419 = $rsize$3$lcssa$i | 1;
         $$sum$i2334 = $246 | 4;
         $420 = (($v$3$lcssa$i) + ($$sum$i2334)|0);
         HEAP32[$420>>2] = $419;
         $$sum1$i24 = (($rsize$3$lcssa$i) + ($246))|0;
         $421 = (($v$3$lcssa$i) + ($$sum1$i24)|0);
         HEAP32[$421>>2] = $rsize$3$lcssa$i;
         $422 = $rsize$3$lcssa$i >>> 3;
         $423 = ($rsize$3$lcssa$i>>>0)<(256);
         if ($423) {
          $424 = $422 << 1;
          $425 = (4392 + ($424<<2)|0);
          $426 = HEAP32[4352>>2]|0;
          $427 = 1 << $422;
          $428 = $426 & $427;
          $429 = ($428|0)==(0);
          if ($429) {
           $430 = $426 | $427;
           HEAP32[4352>>2] = $430;
           $$pre$i25 = (($424) + 2)|0;
           $$pre43$i = (4392 + ($$pre$i25<<2)|0);
           $$pre$phi$i26Z2D = $$pre43$i;$F5$0$i = $425;
          } else {
           $$sum17$i = (($424) + 2)|0;
           $431 = (4392 + ($$sum17$i<<2)|0);
           $432 = HEAP32[$431>>2]|0;
           $433 = HEAP32[(4368)>>2]|0;
           $434 = ($432>>>0)<($433>>>0);
           if ($434) {
            _abort();
            // unreachable;
           } else {
            $$pre$phi$i26Z2D = $431;$F5$0$i = $432;
           }
          }
          HEAP32[$$pre$phi$i26Z2D>>2] = $348;
          $435 = ((($F5$0$i)) + 12|0);
          HEAP32[$435>>2] = $348;
          $$sum15$i = (($246) + 8)|0;
          $436 = (($v$3$lcssa$i) + ($$sum15$i)|0);
          HEAP32[$436>>2] = $F5$0$i;
          $$sum16$i = (($246) + 12)|0;
          $437 = (($v$3$lcssa$i) + ($$sum16$i)|0);
          HEAP32[$437>>2] = $425;
          break;
         }
         $438 = $rsize$3$lcssa$i >>> 8;
         $439 = ($438|0)==(0);
         if ($439) {
          $I7$0$i = 0;
         } else {
          $440 = ($rsize$3$lcssa$i>>>0)>(16777215);
          if ($440) {
           $I7$0$i = 31;
          } else {
           $441 = (($438) + 1048320)|0;
           $442 = $441 >>> 16;
           $443 = $442 & 8;
           $444 = $438 << $443;
           $445 = (($444) + 520192)|0;
           $446 = $445 >>> 16;
           $447 = $446 & 4;
           $448 = $447 | $443;
           $449 = $444 << $447;
           $450 = (($449) + 245760)|0;
           $451 = $450 >>> 16;
           $452 = $451 & 2;
           $453 = $448 | $452;
           $454 = (14 - ($453))|0;
           $455 = $449 << $452;
           $456 = $455 >>> 15;
           $457 = (($454) + ($456))|0;
           $458 = $457 << 1;
           $459 = (($457) + 7)|0;
           $460 = $rsize$3$lcssa$i >>> $459;
           $461 = $460 & 1;
           $462 = $461 | $458;
           $I7$0$i = $462;
          }
         }
         $463 = (4656 + ($I7$0$i<<2)|0);
         $$sum2$i = (($246) + 28)|0;
         $464 = (($v$3$lcssa$i) + ($$sum2$i)|0);
         HEAP32[$464>>2] = $I7$0$i;
         $$sum3$i27 = (($246) + 16)|0;
         $465 = (($v$3$lcssa$i) + ($$sum3$i27)|0);
         $$sum4$i28 = (($246) + 20)|0;
         $466 = (($v$3$lcssa$i) + ($$sum4$i28)|0);
         HEAP32[$466>>2] = 0;
         HEAP32[$465>>2] = 0;
         $467 = HEAP32[(4356)>>2]|0;
         $468 = 1 << $I7$0$i;
         $469 = $467 & $468;
         $470 = ($469|0)==(0);
         if ($470) {
          $471 = $467 | $468;
          HEAP32[(4356)>>2] = $471;
          HEAP32[$463>>2] = $348;
          $$sum5$i = (($246) + 24)|0;
          $472 = (($v$3$lcssa$i) + ($$sum5$i)|0);
          HEAP32[$472>>2] = $463;
          $$sum6$i = (($246) + 12)|0;
          $473 = (($v$3$lcssa$i) + ($$sum6$i)|0);
          HEAP32[$473>>2] = $348;
          $$sum7$i = (($246) + 8)|0;
          $474 = (($v$3$lcssa$i) + ($$sum7$i)|0);
          HEAP32[$474>>2] = $348;
          break;
         }
         $475 = HEAP32[$463>>2]|0;
         $476 = ((($475)) + 4|0);
         $477 = HEAP32[$476>>2]|0;
         $478 = $477 & -8;
         $479 = ($478|0)==($rsize$3$lcssa$i|0);
         L103: do {
          if ($479) {
           $T$0$lcssa$i = $475;
          } else {
           $480 = ($I7$0$i|0)==(31);
           $481 = $I7$0$i >>> 1;
           $482 = (25 - ($481))|0;
           $483 = $480 ? 0 : $482;
           $484 = $rsize$3$lcssa$i << $483;
           $K12$029$i = $484;$T$028$i = $475;
           while(1) {
            $491 = $K12$029$i >>> 31;
            $492 = (((($T$028$i)) + 16|0) + ($491<<2)|0);
            $487 = HEAP32[$492>>2]|0;
            $493 = ($487|0)==(0|0);
            if ($493) {
             $$lcssa232 = $492;$T$028$i$lcssa = $T$028$i;
             break;
            }
            $485 = $K12$029$i << 1;
            $486 = ((($487)) + 4|0);
            $488 = HEAP32[$486>>2]|0;
            $489 = $488 & -8;
            $490 = ($489|0)==($rsize$3$lcssa$i|0);
            if ($490) {
             $T$0$lcssa$i = $487;
             break L103;
            } else {
             $K12$029$i = $485;$T$028$i = $487;
            }
           }
           $494 = HEAP32[(4368)>>2]|0;
           $495 = ($$lcssa232>>>0)<($494>>>0);
           if ($495) {
            _abort();
            // unreachable;
           } else {
            HEAP32[$$lcssa232>>2] = $348;
            $$sum11$i = (($246) + 24)|0;
            $496 = (($v$3$lcssa$i) + ($$sum11$i)|0);
            HEAP32[$496>>2] = $T$028$i$lcssa;
            $$sum12$i = (($246) + 12)|0;
            $497 = (($v$3$lcssa$i) + ($$sum12$i)|0);
            HEAP32[$497>>2] = $348;
            $$sum13$i = (($246) + 8)|0;
            $498 = (($v$3$lcssa$i) + ($$sum13$i)|0);
            HEAP32[$498>>2] = $348;
            break L85;
           }
          }
         } while(0);
         $499 = ((($T$0$lcssa$i)) + 8|0);
         $500 = HEAP32[$499>>2]|0;
         $501 = HEAP32[(4368)>>2]|0;
         $502 = ($500>>>0)>=($501>>>0);
         $not$$i = ($T$0$lcssa$i>>>0)>=($501>>>0);
         $503 = $502 & $not$$i;
         if ($503) {
          $504 = ((($500)) + 12|0);
          HEAP32[$504>>2] = $348;
          HEAP32[$499>>2] = $348;
          $$sum8$i = (($246) + 8)|0;
          $505 = (($v$3$lcssa$i) + ($$sum8$i)|0);
          HEAP32[$505>>2] = $500;
          $$sum9$i = (($246) + 12)|0;
          $506 = (($v$3$lcssa$i) + ($$sum9$i)|0);
          HEAP32[$506>>2] = $T$0$lcssa$i;
          $$sum10$i = (($246) + 24)|0;
          $507 = (($v$3$lcssa$i) + ($$sum10$i)|0);
          HEAP32[$507>>2] = 0;
          break;
         } else {
          _abort();
          // unreachable;
         }
        }
       } while(0);
       $508 = ((($v$3$lcssa$i)) + 8|0);
       $mem$0 = $508;
       return ($mem$0|0);
      } else {
       $nb$0 = $246;
      }
     }
    }
   }
  }
 } while(0);
 $509 = HEAP32[(4360)>>2]|0;
 $510 = ($509>>>0)<($nb$0>>>0);
 if (!($510)) {
  $511 = (($509) - ($nb$0))|0;
  $512 = HEAP32[(4372)>>2]|0;
  $513 = ($511>>>0)>(15);
  if ($513) {
   $514 = (($512) + ($nb$0)|0);
   HEAP32[(4372)>>2] = $514;
   HEAP32[(4360)>>2] = $511;
   $515 = $511 | 1;
   $$sum2 = (($nb$0) + 4)|0;
   $516 = (($512) + ($$sum2)|0);
   HEAP32[$516>>2] = $515;
   $517 = (($512) + ($509)|0);
   HEAP32[$517>>2] = $511;
   $518 = $nb$0 | 3;
   $519 = ((($512)) + 4|0);
   HEAP32[$519>>2] = $518;
  } else {
   HEAP32[(4360)>>2] = 0;
   HEAP32[(4372)>>2] = 0;
   $520 = $509 | 3;
   $521 = ((($512)) + 4|0);
   HEAP32[$521>>2] = $520;
   $$sum1 = (($509) + 4)|0;
   $522 = (($512) + ($$sum1)|0);
   $523 = HEAP32[$522>>2]|0;
   $524 = $523 | 1;
   HEAP32[$522>>2] = $524;
  }
  $525 = ((($512)) + 8|0);
  $mem$0 = $525;
  return ($mem$0|0);
 }
 $526 = HEAP32[(4364)>>2]|0;
 $527 = ($526>>>0)>($nb$0>>>0);
 if ($527) {
  $528 = (($526) - ($nb$0))|0;
  HEAP32[(4364)>>2] = $528;
  $529 = HEAP32[(4376)>>2]|0;
  $530 = (($529) + ($nb$0)|0);
  HEAP32[(4376)>>2] = $530;
  $531 = $528 | 1;
  $$sum = (($nb$0) + 4)|0;
  $532 = (($529) + ($$sum)|0);
  HEAP32[$532>>2] = $531;
  $533 = $nb$0 | 3;
  $534 = ((($529)) + 4|0);
  HEAP32[$534>>2] = $533;
  $535 = ((($529)) + 8|0);
  $mem$0 = $535;
  return ($mem$0|0);
 }
 $536 = HEAP32[4824>>2]|0;
 $537 = ($536|0)==(0);
 do {
  if ($537) {
   $538 = (_sysconf(30)|0);
   $539 = (($538) + -1)|0;
   $540 = $539 & $538;
   $541 = ($540|0)==(0);
   if ($541) {
    HEAP32[(4832)>>2] = $538;
    HEAP32[(4828)>>2] = $538;
    HEAP32[(4836)>>2] = -1;
    HEAP32[(4840)>>2] = -1;
    HEAP32[(4844)>>2] = 0;
    HEAP32[(4796)>>2] = 0;
    $542 = (_time((0|0))|0);
    $543 = $542 & -16;
    $544 = $543 ^ 1431655768;
    HEAP32[4824>>2] = $544;
    break;
   } else {
    _abort();
    // unreachable;
   }
  }
 } while(0);
 $545 = (($nb$0) + 48)|0;
 $546 = HEAP32[(4832)>>2]|0;
 $547 = (($nb$0) + 47)|0;
 $548 = (($546) + ($547))|0;
 $549 = (0 - ($546))|0;
 $550 = $548 & $549;
 $551 = ($550>>>0)>($nb$0>>>0);
 if (!($551)) {
  $mem$0 = 0;
  return ($mem$0|0);
 }
 $552 = HEAP32[(4792)>>2]|0;
 $553 = ($552|0)==(0);
 if (!($553)) {
  $554 = HEAP32[(4784)>>2]|0;
  $555 = (($554) + ($550))|0;
  $556 = ($555>>>0)<=($554>>>0);
  $557 = ($555>>>0)>($552>>>0);
  $or$cond1$i = $556 | $557;
  if ($or$cond1$i) {
   $mem$0 = 0;
   return ($mem$0|0);
  }
 }
 $558 = HEAP32[(4796)>>2]|0;
 $559 = $558 & 4;
 $560 = ($559|0)==(0);
 L258: do {
  if ($560) {
   $561 = HEAP32[(4376)>>2]|0;
   $562 = ($561|0)==(0|0);
   L260: do {
    if ($562) {
     label = 174;
    } else {
     $sp$0$i$i = (4800);
     while(1) {
      $563 = HEAP32[$sp$0$i$i>>2]|0;
      $564 = ($563>>>0)>($561>>>0);
      if (!($564)) {
       $565 = ((($sp$0$i$i)) + 4|0);
       $566 = HEAP32[$565>>2]|0;
       $567 = (($563) + ($566)|0);
       $568 = ($567>>>0)>($561>>>0);
       if ($568) {
        $$lcssa228 = $sp$0$i$i;$$lcssa230 = $565;
        break;
       }
      }
      $569 = ((($sp$0$i$i)) + 8|0);
      $570 = HEAP32[$569>>2]|0;
      $571 = ($570|0)==(0|0);
      if ($571) {
       label = 174;
       break L260;
      } else {
       $sp$0$i$i = $570;
      }
     }
     $594 = HEAP32[(4364)>>2]|0;
     $595 = (($548) - ($594))|0;
     $596 = $595 & $549;
     $597 = ($596>>>0)<(2147483647);
     if ($597) {
      $598 = (_sbrk(($596|0))|0);
      $599 = HEAP32[$$lcssa228>>2]|0;
      $600 = HEAP32[$$lcssa230>>2]|0;
      $601 = (($599) + ($600)|0);
      $602 = ($598|0)==($601|0);
      $$3$i = $602 ? $596 : 0;
      if ($602) {
       $603 = ($598|0)==((-1)|0);
       if ($603) {
        $tsize$0323944$i = $$3$i;
       } else {
        $tbase$255$i = $598;$tsize$254$i = $$3$i;
        label = 194;
        break L258;
       }
      } else {
       $br$0$ph$i = $598;$ssize$1$ph$i = $596;$tsize$0$ph$i = $$3$i;
       label = 184;
      }
     } else {
      $tsize$0323944$i = 0;
     }
    }
   } while(0);
   do {
    if ((label|0) == 174) {
     $572 = (_sbrk(0)|0);
     $573 = ($572|0)==((-1)|0);
     if ($573) {
      $tsize$0323944$i = 0;
     } else {
      $574 = $572;
      $575 = HEAP32[(4828)>>2]|0;
      $576 = (($575) + -1)|0;
      $577 = $576 & $574;
      $578 = ($577|0)==(0);
      if ($578) {
       $ssize$0$i = $550;
      } else {
       $579 = (($576) + ($574))|0;
       $580 = (0 - ($575))|0;
       $581 = $579 & $580;
       $582 = (($550) - ($574))|0;
       $583 = (($582) + ($581))|0;
       $ssize$0$i = $583;
      }
      $584 = HEAP32[(4784)>>2]|0;
      $585 = (($584) + ($ssize$0$i))|0;
      $586 = ($ssize$0$i>>>0)>($nb$0>>>0);
      $587 = ($ssize$0$i>>>0)<(2147483647);
      $or$cond$i30 = $586 & $587;
      if ($or$cond$i30) {
       $588 = HEAP32[(4792)>>2]|0;
       $589 = ($588|0)==(0);
       if (!($589)) {
        $590 = ($585>>>0)<=($584>>>0);
        $591 = ($585>>>0)>($588>>>0);
        $or$cond2$i = $590 | $591;
        if ($or$cond2$i) {
         $tsize$0323944$i = 0;
         break;
        }
       }
       $592 = (_sbrk(($ssize$0$i|0))|0);
       $593 = ($592|0)==($572|0);
       $ssize$0$$i = $593 ? $ssize$0$i : 0;
       if ($593) {
        $tbase$255$i = $572;$tsize$254$i = $ssize$0$$i;
        label = 194;
        break L258;
       } else {
        $br$0$ph$i = $592;$ssize$1$ph$i = $ssize$0$i;$tsize$0$ph$i = $ssize$0$$i;
        label = 184;
       }
      } else {
       $tsize$0323944$i = 0;
      }
     }
    }
   } while(0);
   L280: do {
    if ((label|0) == 184) {
     $604 = (0 - ($ssize$1$ph$i))|0;
     $605 = ($br$0$ph$i|0)!=((-1)|0);
     $606 = ($ssize$1$ph$i>>>0)<(2147483647);
     $or$cond5$i = $606 & $605;
     $607 = ($545>>>0)>($ssize$1$ph$i>>>0);
     $or$cond6$i = $607 & $or$cond5$i;
     do {
      if ($or$cond6$i) {
       $608 = HEAP32[(4832)>>2]|0;
       $609 = (($547) - ($ssize$1$ph$i))|0;
       $610 = (($609) + ($608))|0;
       $611 = (0 - ($608))|0;
       $612 = $610 & $611;
       $613 = ($612>>>0)<(2147483647);
       if ($613) {
        $614 = (_sbrk(($612|0))|0);
        $615 = ($614|0)==((-1)|0);
        if ($615) {
         (_sbrk(($604|0))|0);
         $tsize$0323944$i = $tsize$0$ph$i;
         break L280;
        } else {
         $616 = (($612) + ($ssize$1$ph$i))|0;
         $ssize$2$i = $616;
         break;
        }
       } else {
        $ssize$2$i = $ssize$1$ph$i;
       }
      } else {
       $ssize$2$i = $ssize$1$ph$i;
      }
     } while(0);
     $617 = ($br$0$ph$i|0)==((-1)|0);
     if ($617) {
      $tsize$0323944$i = $tsize$0$ph$i;
     } else {
      $tbase$255$i = $br$0$ph$i;$tsize$254$i = $ssize$2$i;
      label = 194;
      break L258;
     }
    }
   } while(0);
   $618 = HEAP32[(4796)>>2]|0;
   $619 = $618 | 4;
   HEAP32[(4796)>>2] = $619;
   $tsize$1$i = $tsize$0323944$i;
   label = 191;
  } else {
   $tsize$1$i = 0;
   label = 191;
  }
 } while(0);
 if ((label|0) == 191) {
  $620 = ($550>>>0)<(2147483647);
  if ($620) {
   $621 = (_sbrk(($550|0))|0);
   $622 = (_sbrk(0)|0);
   $623 = ($621|0)!=((-1)|0);
   $624 = ($622|0)!=((-1)|0);
   $or$cond3$i = $623 & $624;
   $625 = ($621>>>0)<($622>>>0);
   $or$cond8$i = $625 & $or$cond3$i;
   if ($or$cond8$i) {
    $626 = $622;
    $627 = $621;
    $628 = (($626) - ($627))|0;
    $629 = (($nb$0) + 40)|0;
    $630 = ($628>>>0)>($629>>>0);
    $$tsize$1$i = $630 ? $628 : $tsize$1$i;
    if ($630) {
     $tbase$255$i = $621;$tsize$254$i = $$tsize$1$i;
     label = 194;
    }
   }
  }
 }
 if ((label|0) == 194) {
  $631 = HEAP32[(4784)>>2]|0;
  $632 = (($631) + ($tsize$254$i))|0;
  HEAP32[(4784)>>2] = $632;
  $633 = HEAP32[(4788)>>2]|0;
  $634 = ($632>>>0)>($633>>>0);
  if ($634) {
   HEAP32[(4788)>>2] = $632;
  }
  $635 = HEAP32[(4376)>>2]|0;
  $636 = ($635|0)==(0|0);
  L299: do {
   if ($636) {
    $637 = HEAP32[(4368)>>2]|0;
    $638 = ($637|0)==(0|0);
    $639 = ($tbase$255$i>>>0)<($637>>>0);
    $or$cond9$i = $638 | $639;
    if ($or$cond9$i) {
     HEAP32[(4368)>>2] = $tbase$255$i;
    }
    HEAP32[(4800)>>2] = $tbase$255$i;
    HEAP32[(4804)>>2] = $tsize$254$i;
    HEAP32[(4812)>>2] = 0;
    $640 = HEAP32[4824>>2]|0;
    HEAP32[(4388)>>2] = $640;
    HEAP32[(4384)>>2] = -1;
    $i$02$i$i = 0;
    while(1) {
     $641 = $i$02$i$i << 1;
     $642 = (4392 + ($641<<2)|0);
     $$sum$i$i = (($641) + 3)|0;
     $643 = (4392 + ($$sum$i$i<<2)|0);
     HEAP32[$643>>2] = $642;
     $$sum1$i$i = (($641) + 2)|0;
     $644 = (4392 + ($$sum1$i$i<<2)|0);
     HEAP32[$644>>2] = $642;
     $645 = (($i$02$i$i) + 1)|0;
     $exitcond$i$i = ($645|0)==(32);
     if ($exitcond$i$i) {
      break;
     } else {
      $i$02$i$i = $645;
     }
    }
    $646 = (($tsize$254$i) + -40)|0;
    $647 = ((($tbase$255$i)) + 8|0);
    $648 = $647;
    $649 = $648 & 7;
    $650 = ($649|0)==(0);
    $651 = (0 - ($648))|0;
    $652 = $651 & 7;
    $653 = $650 ? 0 : $652;
    $654 = (($tbase$255$i) + ($653)|0);
    $655 = (($646) - ($653))|0;
    HEAP32[(4376)>>2] = $654;
    HEAP32[(4364)>>2] = $655;
    $656 = $655 | 1;
    $$sum$i13$i = (($653) + 4)|0;
    $657 = (($tbase$255$i) + ($$sum$i13$i)|0);
    HEAP32[$657>>2] = $656;
    $$sum2$i$i = (($tsize$254$i) + -36)|0;
    $658 = (($tbase$255$i) + ($$sum2$i$i)|0);
    HEAP32[$658>>2] = 40;
    $659 = HEAP32[(4840)>>2]|0;
    HEAP32[(4380)>>2] = $659;
   } else {
    $sp$084$i = (4800);
    while(1) {
     $660 = HEAP32[$sp$084$i>>2]|0;
     $661 = ((($sp$084$i)) + 4|0);
     $662 = HEAP32[$661>>2]|0;
     $663 = (($660) + ($662)|0);
     $664 = ($tbase$255$i|0)==($663|0);
     if ($664) {
      $$lcssa222 = $660;$$lcssa224 = $661;$$lcssa226 = $662;$sp$084$i$lcssa = $sp$084$i;
      label = 204;
      break;
     }
     $665 = ((($sp$084$i)) + 8|0);
     $666 = HEAP32[$665>>2]|0;
     $667 = ($666|0)==(0|0);
     if ($667) {
      break;
     } else {
      $sp$084$i = $666;
     }
    }
    if ((label|0) == 204) {
     $668 = ((($sp$084$i$lcssa)) + 12|0);
     $669 = HEAP32[$668>>2]|0;
     $670 = $669 & 8;
     $671 = ($670|0)==(0);
     if ($671) {
      $672 = ($635>>>0)>=($$lcssa222>>>0);
      $673 = ($635>>>0)<($tbase$255$i>>>0);
      $or$cond57$i = $673 & $672;
      if ($or$cond57$i) {
       $674 = (($$lcssa226) + ($tsize$254$i))|0;
       HEAP32[$$lcssa224>>2] = $674;
       $675 = HEAP32[(4364)>>2]|0;
       $676 = (($675) + ($tsize$254$i))|0;
       $677 = ((($635)) + 8|0);
       $678 = $677;
       $679 = $678 & 7;
       $680 = ($679|0)==(0);
       $681 = (0 - ($678))|0;
       $682 = $681 & 7;
       $683 = $680 ? 0 : $682;
       $684 = (($635) + ($683)|0);
       $685 = (($676) - ($683))|0;
       HEAP32[(4376)>>2] = $684;
       HEAP32[(4364)>>2] = $685;
       $686 = $685 | 1;
       $$sum$i17$i = (($683) + 4)|0;
       $687 = (($635) + ($$sum$i17$i)|0);
       HEAP32[$687>>2] = $686;
       $$sum2$i18$i = (($676) + 4)|0;
       $688 = (($635) + ($$sum2$i18$i)|0);
       HEAP32[$688>>2] = 40;
       $689 = HEAP32[(4840)>>2]|0;
       HEAP32[(4380)>>2] = $689;
       break;
      }
     }
    }
    $690 = HEAP32[(4368)>>2]|0;
    $691 = ($tbase$255$i>>>0)<($690>>>0);
    if ($691) {
     HEAP32[(4368)>>2] = $tbase$255$i;
     $755 = $tbase$255$i;
    } else {
     $755 = $690;
    }
    $692 = (($tbase$255$i) + ($tsize$254$i)|0);
    $sp$183$i = (4800);
    while(1) {
     $693 = HEAP32[$sp$183$i>>2]|0;
     $694 = ($693|0)==($692|0);
     if ($694) {
      $$lcssa219 = $sp$183$i;$sp$183$i$lcssa = $sp$183$i;
      label = 212;
      break;
     }
     $695 = ((($sp$183$i)) + 8|0);
     $696 = HEAP32[$695>>2]|0;
     $697 = ($696|0)==(0|0);
     if ($697) {
      $sp$0$i$i$i = (4800);
      break;
     } else {
      $sp$183$i = $696;
     }
    }
    if ((label|0) == 212) {
     $698 = ((($sp$183$i$lcssa)) + 12|0);
     $699 = HEAP32[$698>>2]|0;
     $700 = $699 & 8;
     $701 = ($700|0)==(0);
     if ($701) {
      HEAP32[$$lcssa219>>2] = $tbase$255$i;
      $702 = ((($sp$183$i$lcssa)) + 4|0);
      $703 = HEAP32[$702>>2]|0;
      $704 = (($703) + ($tsize$254$i))|0;
      HEAP32[$702>>2] = $704;
      $705 = ((($tbase$255$i)) + 8|0);
      $706 = $705;
      $707 = $706 & 7;
      $708 = ($707|0)==(0);
      $709 = (0 - ($706))|0;
      $710 = $709 & 7;
      $711 = $708 ? 0 : $710;
      $712 = (($tbase$255$i) + ($711)|0);
      $$sum112$i = (($tsize$254$i) + 8)|0;
      $713 = (($tbase$255$i) + ($$sum112$i)|0);
      $714 = $713;
      $715 = $714 & 7;
      $716 = ($715|0)==(0);
      $717 = (0 - ($714))|0;
      $718 = $717 & 7;
      $719 = $716 ? 0 : $718;
      $$sum113$i = (($719) + ($tsize$254$i))|0;
      $720 = (($tbase$255$i) + ($$sum113$i)|0);
      $721 = $720;
      $722 = $712;
      $723 = (($721) - ($722))|0;
      $$sum$i19$i = (($711) + ($nb$0))|0;
      $724 = (($tbase$255$i) + ($$sum$i19$i)|0);
      $725 = (($723) - ($nb$0))|0;
      $726 = $nb$0 | 3;
      $$sum1$i20$i = (($711) + 4)|0;
      $727 = (($tbase$255$i) + ($$sum1$i20$i)|0);
      HEAP32[$727>>2] = $726;
      $728 = ($720|0)==($635|0);
      L324: do {
       if ($728) {
        $729 = HEAP32[(4364)>>2]|0;
        $730 = (($729) + ($725))|0;
        HEAP32[(4364)>>2] = $730;
        HEAP32[(4376)>>2] = $724;
        $731 = $730 | 1;
        $$sum42$i$i = (($$sum$i19$i) + 4)|0;
        $732 = (($tbase$255$i) + ($$sum42$i$i)|0);
        HEAP32[$732>>2] = $731;
       } else {
        $733 = HEAP32[(4372)>>2]|0;
        $734 = ($720|0)==($733|0);
        if ($734) {
         $735 = HEAP32[(4360)>>2]|0;
         $736 = (($735) + ($725))|0;
         HEAP32[(4360)>>2] = $736;
         HEAP32[(4372)>>2] = $724;
         $737 = $736 | 1;
         $$sum40$i$i = (($$sum$i19$i) + 4)|0;
         $738 = (($tbase$255$i) + ($$sum40$i$i)|0);
         HEAP32[$738>>2] = $737;
         $$sum41$i$i = (($736) + ($$sum$i19$i))|0;
         $739 = (($tbase$255$i) + ($$sum41$i$i)|0);
         HEAP32[$739>>2] = $736;
         break;
        }
        $$sum2$i21$i = (($tsize$254$i) + 4)|0;
        $$sum114$i = (($$sum2$i21$i) + ($719))|0;
        $740 = (($tbase$255$i) + ($$sum114$i)|0);
        $741 = HEAP32[$740>>2]|0;
        $742 = $741 & 3;
        $743 = ($742|0)==(1);
        if ($743) {
         $744 = $741 & -8;
         $745 = $741 >>> 3;
         $746 = ($741>>>0)<(256);
         L332: do {
          if ($746) {
           $$sum3738$i$i = $719 | 8;
           $$sum124$i = (($$sum3738$i$i) + ($tsize$254$i))|0;
           $747 = (($tbase$255$i) + ($$sum124$i)|0);
           $748 = HEAP32[$747>>2]|0;
           $$sum39$i$i = (($tsize$254$i) + 12)|0;
           $$sum125$i = (($$sum39$i$i) + ($719))|0;
           $749 = (($tbase$255$i) + ($$sum125$i)|0);
           $750 = HEAP32[$749>>2]|0;
           $751 = $745 << 1;
           $752 = (4392 + ($751<<2)|0);
           $753 = ($748|0)==($752|0);
           do {
            if (!($753)) {
             $754 = ($748>>>0)<($755>>>0);
             if ($754) {
              _abort();
              // unreachable;
             }
             $756 = ((($748)) + 12|0);
             $757 = HEAP32[$756>>2]|0;
             $758 = ($757|0)==($720|0);
             if ($758) {
              break;
             }
             _abort();
             // unreachable;
            }
           } while(0);
           $759 = ($750|0)==($748|0);
           if ($759) {
            $760 = 1 << $745;
            $761 = $760 ^ -1;
            $762 = HEAP32[4352>>2]|0;
            $763 = $762 & $761;
            HEAP32[4352>>2] = $763;
            break;
           }
           $764 = ($750|0)==($752|0);
           do {
            if ($764) {
             $$pre57$i$i = ((($750)) + 8|0);
             $$pre$phi58$i$iZ2D = $$pre57$i$i;
            } else {
             $765 = ($750>>>0)<($755>>>0);
             if ($765) {
              _abort();
              // unreachable;
             }
             $766 = ((($750)) + 8|0);
             $767 = HEAP32[$766>>2]|0;
             $768 = ($767|0)==($720|0);
             if ($768) {
              $$pre$phi58$i$iZ2D = $766;
              break;
             }
             _abort();
             // unreachable;
            }
           } while(0);
           $769 = ((($748)) + 12|0);
           HEAP32[$769>>2] = $750;
           HEAP32[$$pre$phi58$i$iZ2D>>2] = $748;
          } else {
           $$sum34$i$i = $719 | 24;
           $$sum115$i = (($$sum34$i$i) + ($tsize$254$i))|0;
           $770 = (($tbase$255$i) + ($$sum115$i)|0);
           $771 = HEAP32[$770>>2]|0;
           $$sum5$i$i = (($tsize$254$i) + 12)|0;
           $$sum116$i = (($$sum5$i$i) + ($719))|0;
           $772 = (($tbase$255$i) + ($$sum116$i)|0);
           $773 = HEAP32[$772>>2]|0;
           $774 = ($773|0)==($720|0);
           do {
            if ($774) {
             $$sum67$i$i = $719 | 16;
             $$sum122$i = (($$sum2$i21$i) + ($$sum67$i$i))|0;
             $784 = (($tbase$255$i) + ($$sum122$i)|0);
             $785 = HEAP32[$784>>2]|0;
             $786 = ($785|0)==(0|0);
             if ($786) {
              $$sum123$i = (($$sum67$i$i) + ($tsize$254$i))|0;
              $787 = (($tbase$255$i) + ($$sum123$i)|0);
              $788 = HEAP32[$787>>2]|0;
              $789 = ($788|0)==(0|0);
              if ($789) {
               $R$1$i$i = 0;
               break;
              } else {
               $R$0$i$i = $788;$RP$0$i$i = $787;
              }
             } else {
              $R$0$i$i = $785;$RP$0$i$i = $784;
             }
             while(1) {
              $790 = ((($R$0$i$i)) + 20|0);
              $791 = HEAP32[$790>>2]|0;
              $792 = ($791|0)==(0|0);
              if (!($792)) {
               $R$0$i$i = $791;$RP$0$i$i = $790;
               continue;
              }
              $793 = ((($R$0$i$i)) + 16|0);
              $794 = HEAP32[$793>>2]|0;
              $795 = ($794|0)==(0|0);
              if ($795) {
               $R$0$i$i$lcssa = $R$0$i$i;$RP$0$i$i$lcssa = $RP$0$i$i;
               break;
              } else {
               $R$0$i$i = $794;$RP$0$i$i = $793;
              }
             }
             $796 = ($RP$0$i$i$lcssa>>>0)<($755>>>0);
             if ($796) {
              _abort();
              // unreachable;
             } else {
              HEAP32[$RP$0$i$i$lcssa>>2] = 0;
              $R$1$i$i = $R$0$i$i$lcssa;
              break;
             }
            } else {
             $$sum3536$i$i = $719 | 8;
             $$sum117$i = (($$sum3536$i$i) + ($tsize$254$i))|0;
             $775 = (($tbase$255$i) + ($$sum117$i)|0);
             $776 = HEAP32[$775>>2]|0;
             $777 = ($776>>>0)<($755>>>0);
             if ($777) {
              _abort();
              // unreachable;
             }
             $778 = ((($776)) + 12|0);
             $779 = HEAP32[$778>>2]|0;
             $780 = ($779|0)==($720|0);
             if (!($780)) {
              _abort();
              // unreachable;
             }
             $781 = ((($773)) + 8|0);
             $782 = HEAP32[$781>>2]|0;
             $783 = ($782|0)==($720|0);
             if ($783) {
              HEAP32[$778>>2] = $773;
              HEAP32[$781>>2] = $776;
              $R$1$i$i = $773;
              break;
             } else {
              _abort();
              // unreachable;
             }
            }
           } while(0);
           $797 = ($771|0)==(0|0);
           if ($797) {
            break;
           }
           $$sum30$i$i = (($tsize$254$i) + 28)|0;
           $$sum118$i = (($$sum30$i$i) + ($719))|0;
           $798 = (($tbase$255$i) + ($$sum118$i)|0);
           $799 = HEAP32[$798>>2]|0;
           $800 = (4656 + ($799<<2)|0);
           $801 = HEAP32[$800>>2]|0;
           $802 = ($720|0)==($801|0);
           do {
            if ($802) {
             HEAP32[$800>>2] = $R$1$i$i;
             $cond$i$i = ($R$1$i$i|0)==(0|0);
             if (!($cond$i$i)) {
              break;
             }
             $803 = 1 << $799;
             $804 = $803 ^ -1;
             $805 = HEAP32[(4356)>>2]|0;
             $806 = $805 & $804;
             HEAP32[(4356)>>2] = $806;
             break L332;
            } else {
             $807 = HEAP32[(4368)>>2]|0;
             $808 = ($771>>>0)<($807>>>0);
             if ($808) {
              _abort();
              // unreachable;
             }
             $809 = ((($771)) + 16|0);
             $810 = HEAP32[$809>>2]|0;
             $811 = ($810|0)==($720|0);
             if ($811) {
              HEAP32[$809>>2] = $R$1$i$i;
             } else {
              $812 = ((($771)) + 20|0);
              HEAP32[$812>>2] = $R$1$i$i;
             }
             $813 = ($R$1$i$i|0)==(0|0);
             if ($813) {
              break L332;
             }
            }
           } while(0);
           $814 = HEAP32[(4368)>>2]|0;
           $815 = ($R$1$i$i>>>0)<($814>>>0);
           if ($815) {
            _abort();
            // unreachable;
           }
           $816 = ((($R$1$i$i)) + 24|0);
           HEAP32[$816>>2] = $771;
           $$sum3132$i$i = $719 | 16;
           $$sum119$i = (($$sum3132$i$i) + ($tsize$254$i))|0;
           $817 = (($tbase$255$i) + ($$sum119$i)|0);
           $818 = HEAP32[$817>>2]|0;
           $819 = ($818|0)==(0|0);
           do {
            if (!($819)) {
             $820 = ($818>>>0)<($814>>>0);
             if ($820) {
              _abort();
              // unreachable;
             } else {
              $821 = ((($R$1$i$i)) + 16|0);
              HEAP32[$821>>2] = $818;
              $822 = ((($818)) + 24|0);
              HEAP32[$822>>2] = $R$1$i$i;
              break;
             }
            }
           } while(0);
           $$sum120$i = (($$sum2$i21$i) + ($$sum3132$i$i))|0;
           $823 = (($tbase$255$i) + ($$sum120$i)|0);
           $824 = HEAP32[$823>>2]|0;
           $825 = ($824|0)==(0|0);
           if ($825) {
            break;
           }
           $826 = HEAP32[(4368)>>2]|0;
           $827 = ($824>>>0)<($826>>>0);
           if ($827) {
            _abort();
            // unreachable;
           } else {
            $828 = ((($R$1$i$i)) + 20|0);
            HEAP32[$828>>2] = $824;
            $829 = ((($824)) + 24|0);
            HEAP32[$829>>2] = $R$1$i$i;
            break;
           }
          }
         } while(0);
         $$sum9$i$i = $744 | $719;
         $$sum121$i = (($$sum9$i$i) + ($tsize$254$i))|0;
         $830 = (($tbase$255$i) + ($$sum121$i)|0);
         $831 = (($744) + ($725))|0;
         $oldfirst$0$i$i = $830;$qsize$0$i$i = $831;
        } else {
         $oldfirst$0$i$i = $720;$qsize$0$i$i = $725;
        }
        $832 = ((($oldfirst$0$i$i)) + 4|0);
        $833 = HEAP32[$832>>2]|0;
        $834 = $833 & -2;
        HEAP32[$832>>2] = $834;
        $835 = $qsize$0$i$i | 1;
        $$sum10$i$i = (($$sum$i19$i) + 4)|0;
        $836 = (($tbase$255$i) + ($$sum10$i$i)|0);
        HEAP32[$836>>2] = $835;
        $$sum11$i$i = (($qsize$0$i$i) + ($$sum$i19$i))|0;
        $837 = (($tbase$255$i) + ($$sum11$i$i)|0);
        HEAP32[$837>>2] = $qsize$0$i$i;
        $838 = $qsize$0$i$i >>> 3;
        $839 = ($qsize$0$i$i>>>0)<(256);
        if ($839) {
         $840 = $838 << 1;
         $841 = (4392 + ($840<<2)|0);
         $842 = HEAP32[4352>>2]|0;
         $843 = 1 << $838;
         $844 = $842 & $843;
         $845 = ($844|0)==(0);
         do {
          if ($845) {
           $846 = $842 | $843;
           HEAP32[4352>>2] = $846;
           $$pre$i22$i = (($840) + 2)|0;
           $$pre56$i$i = (4392 + ($$pre$i22$i<<2)|0);
           $$pre$phi$i23$iZ2D = $$pre56$i$i;$F4$0$i$i = $841;
          } else {
           $$sum29$i$i = (($840) + 2)|0;
           $847 = (4392 + ($$sum29$i$i<<2)|0);
           $848 = HEAP32[$847>>2]|0;
           $849 = HEAP32[(4368)>>2]|0;
           $850 = ($848>>>0)<($849>>>0);
           if (!($850)) {
            $$pre$phi$i23$iZ2D = $847;$F4$0$i$i = $848;
            break;
           }
           _abort();
           // unreachable;
          }
         } while(0);
         HEAP32[$$pre$phi$i23$iZ2D>>2] = $724;
         $851 = ((($F4$0$i$i)) + 12|0);
         HEAP32[$851>>2] = $724;
         $$sum27$i$i = (($$sum$i19$i) + 8)|0;
         $852 = (($tbase$255$i) + ($$sum27$i$i)|0);
         HEAP32[$852>>2] = $F4$0$i$i;
         $$sum28$i$i = (($$sum$i19$i) + 12)|0;
         $853 = (($tbase$255$i) + ($$sum28$i$i)|0);
         HEAP32[$853>>2] = $841;
         break;
        }
        $854 = $qsize$0$i$i >>> 8;
        $855 = ($854|0)==(0);
        do {
         if ($855) {
          $I7$0$i$i = 0;
         } else {
          $856 = ($qsize$0$i$i>>>0)>(16777215);
          if ($856) {
           $I7$0$i$i = 31;
           break;
          }
          $857 = (($854) + 1048320)|0;
          $858 = $857 >>> 16;
          $859 = $858 & 8;
          $860 = $854 << $859;
          $861 = (($860) + 520192)|0;
          $862 = $861 >>> 16;
          $863 = $862 & 4;
          $864 = $863 | $859;
          $865 = $860 << $863;
          $866 = (($865) + 245760)|0;
          $867 = $866 >>> 16;
          $868 = $867 & 2;
          $869 = $864 | $868;
          $870 = (14 - ($869))|0;
          $871 = $865 << $868;
          $872 = $871 >>> 15;
          $873 = (($870) + ($872))|0;
          $874 = $873 << 1;
          $875 = (($873) + 7)|0;
          $876 = $qsize$0$i$i >>> $875;
          $877 = $876 & 1;
          $878 = $877 | $874;
          $I7$0$i$i = $878;
         }
        } while(0);
        $879 = (4656 + ($I7$0$i$i<<2)|0);
        $$sum12$i$i = (($$sum$i19$i) + 28)|0;
        $880 = (($tbase$255$i) + ($$sum12$i$i)|0);
        HEAP32[$880>>2] = $I7$0$i$i;
        $$sum13$i$i = (($$sum$i19$i) + 16)|0;
        $881 = (($tbase$255$i) + ($$sum13$i$i)|0);
        $$sum14$i$i = (($$sum$i19$i) + 20)|0;
        $882 = (($tbase$255$i) + ($$sum14$i$i)|0);
        HEAP32[$882>>2] = 0;
        HEAP32[$881>>2] = 0;
        $883 = HEAP32[(4356)>>2]|0;
        $884 = 1 << $I7$0$i$i;
        $885 = $883 & $884;
        $886 = ($885|0)==(0);
        if ($886) {
         $887 = $883 | $884;
         HEAP32[(4356)>>2] = $887;
         HEAP32[$879>>2] = $724;
         $$sum15$i$i = (($$sum$i19$i) + 24)|0;
         $888 = (($tbase$255$i) + ($$sum15$i$i)|0);
         HEAP32[$888>>2] = $879;
         $$sum16$i$i = (($$sum$i19$i) + 12)|0;
         $889 = (($tbase$255$i) + ($$sum16$i$i)|0);
         HEAP32[$889>>2] = $724;
         $$sum17$i$i = (($$sum$i19$i) + 8)|0;
         $890 = (($tbase$255$i) + ($$sum17$i$i)|0);
         HEAP32[$890>>2] = $724;
         break;
        }
        $891 = HEAP32[$879>>2]|0;
        $892 = ((($891)) + 4|0);
        $893 = HEAP32[$892>>2]|0;
        $894 = $893 & -8;
        $895 = ($894|0)==($qsize$0$i$i|0);
        L418: do {
         if ($895) {
          $T$0$lcssa$i25$i = $891;
         } else {
          $896 = ($I7$0$i$i|0)==(31);
          $897 = $I7$0$i$i >>> 1;
          $898 = (25 - ($897))|0;
          $899 = $896 ? 0 : $898;
          $900 = $qsize$0$i$i << $899;
          $K8$051$i$i = $900;$T$050$i$i = $891;
          while(1) {
           $907 = $K8$051$i$i >>> 31;
           $908 = (((($T$050$i$i)) + 16|0) + ($907<<2)|0);
           $903 = HEAP32[$908>>2]|0;
           $909 = ($903|0)==(0|0);
           if ($909) {
            $$lcssa = $908;$T$050$i$i$lcssa = $T$050$i$i;
            break;
           }
           $901 = $K8$051$i$i << 1;
           $902 = ((($903)) + 4|0);
           $904 = HEAP32[$902>>2]|0;
           $905 = $904 & -8;
           $906 = ($905|0)==($qsize$0$i$i|0);
           if ($906) {
            $T$0$lcssa$i25$i = $903;
            break L418;
           } else {
            $K8$051$i$i = $901;$T$050$i$i = $903;
           }
          }
          $910 = HEAP32[(4368)>>2]|0;
          $911 = ($$lcssa>>>0)<($910>>>0);
          if ($911) {
           _abort();
           // unreachable;
          } else {
           HEAP32[$$lcssa>>2] = $724;
           $$sum23$i$i = (($$sum$i19$i) + 24)|0;
           $912 = (($tbase$255$i) + ($$sum23$i$i)|0);
           HEAP32[$912>>2] = $T$050$i$i$lcssa;
           $$sum24$i$i = (($$sum$i19$i) + 12)|0;
           $913 = (($tbase$255$i) + ($$sum24$i$i)|0);
           HEAP32[$913>>2] = $724;
           $$sum25$i$i = (($$sum$i19$i) + 8)|0;
           $914 = (($tbase$255$i) + ($$sum25$i$i)|0);
           HEAP32[$914>>2] = $724;
           break L324;
          }
         }
        } while(0);
        $915 = ((($T$0$lcssa$i25$i)) + 8|0);
        $916 = HEAP32[$915>>2]|0;
        $917 = HEAP32[(4368)>>2]|0;
        $918 = ($916>>>0)>=($917>>>0);
        $not$$i26$i = ($T$0$lcssa$i25$i>>>0)>=($917>>>0);
        $919 = $918 & $not$$i26$i;
        if ($919) {
         $920 = ((($916)) + 12|0);
         HEAP32[$920>>2] = $724;
         HEAP32[$915>>2] = $724;
         $$sum20$i$i = (($$sum$i19$i) + 8)|0;
         $921 = (($tbase$255$i) + ($$sum20$i$i)|0);
         HEAP32[$921>>2] = $916;
         $$sum21$i$i = (($$sum$i19$i) + 12)|0;
         $922 = (($tbase$255$i) + ($$sum21$i$i)|0);
         HEAP32[$922>>2] = $T$0$lcssa$i25$i;
         $$sum22$i$i = (($$sum$i19$i) + 24)|0;
         $923 = (($tbase$255$i) + ($$sum22$i$i)|0);
         HEAP32[$923>>2] = 0;
         break;
        } else {
         _abort();
         // unreachable;
        }
       }
      } while(0);
      $$sum1819$i$i = $711 | 8;
      $924 = (($tbase$255$i) + ($$sum1819$i$i)|0);
      $mem$0 = $924;
      return ($mem$0|0);
     } else {
      $sp$0$i$i$i = (4800);
     }
    }
    while(1) {
     $925 = HEAP32[$sp$0$i$i$i>>2]|0;
     $926 = ($925>>>0)>($635>>>0);
     if (!($926)) {
      $927 = ((($sp$0$i$i$i)) + 4|0);
      $928 = HEAP32[$927>>2]|0;
      $929 = (($925) + ($928)|0);
      $930 = ($929>>>0)>($635>>>0);
      if ($930) {
       $$lcssa215 = $925;$$lcssa216 = $928;$$lcssa217 = $929;
       break;
      }
     }
     $931 = ((($sp$0$i$i$i)) + 8|0);
     $932 = HEAP32[$931>>2]|0;
     $sp$0$i$i$i = $932;
    }
    $$sum$i14$i = (($$lcssa216) + -47)|0;
    $$sum1$i15$i = (($$lcssa216) + -39)|0;
    $933 = (($$lcssa215) + ($$sum1$i15$i)|0);
    $934 = $933;
    $935 = $934 & 7;
    $936 = ($935|0)==(0);
    $937 = (0 - ($934))|0;
    $938 = $937 & 7;
    $939 = $936 ? 0 : $938;
    $$sum2$i16$i = (($$sum$i14$i) + ($939))|0;
    $940 = (($$lcssa215) + ($$sum2$i16$i)|0);
    $941 = ((($635)) + 16|0);
    $942 = ($940>>>0)<($941>>>0);
    $943 = $942 ? $635 : $940;
    $944 = ((($943)) + 8|0);
    $945 = (($tsize$254$i) + -40)|0;
    $946 = ((($tbase$255$i)) + 8|0);
    $947 = $946;
    $948 = $947 & 7;
    $949 = ($948|0)==(0);
    $950 = (0 - ($947))|0;
    $951 = $950 & 7;
    $952 = $949 ? 0 : $951;
    $953 = (($tbase$255$i) + ($952)|0);
    $954 = (($945) - ($952))|0;
    HEAP32[(4376)>>2] = $953;
    HEAP32[(4364)>>2] = $954;
    $955 = $954 | 1;
    $$sum$i$i$i = (($952) + 4)|0;
    $956 = (($tbase$255$i) + ($$sum$i$i$i)|0);
    HEAP32[$956>>2] = $955;
    $$sum2$i$i$i = (($tsize$254$i) + -36)|0;
    $957 = (($tbase$255$i) + ($$sum2$i$i$i)|0);
    HEAP32[$957>>2] = 40;
    $958 = HEAP32[(4840)>>2]|0;
    HEAP32[(4380)>>2] = $958;
    $959 = ((($943)) + 4|0);
    HEAP32[$959>>2] = 27;
    ;HEAP32[$944>>2]=HEAP32[(4800)>>2]|0;HEAP32[$944+4>>2]=HEAP32[(4800)+4>>2]|0;HEAP32[$944+8>>2]=HEAP32[(4800)+8>>2]|0;HEAP32[$944+12>>2]=HEAP32[(4800)+12>>2]|0;
    HEAP32[(4800)>>2] = $tbase$255$i;
    HEAP32[(4804)>>2] = $tsize$254$i;
    HEAP32[(4812)>>2] = 0;
    HEAP32[(4808)>>2] = $944;
    $960 = ((($943)) + 28|0);
    HEAP32[$960>>2] = 7;
    $961 = ((($943)) + 32|0);
    $962 = ($961>>>0)<($$lcssa217>>>0);
    if ($962) {
     $964 = $960;
     while(1) {
      $963 = ((($964)) + 4|0);
      HEAP32[$963>>2] = 7;
      $965 = ((($964)) + 8|0);
      $966 = ($965>>>0)<($$lcssa217>>>0);
      if ($966) {
       $964 = $963;
      } else {
       break;
      }
     }
    }
    $967 = ($943|0)==($635|0);
    if (!($967)) {
     $968 = $943;
     $969 = $635;
     $970 = (($968) - ($969))|0;
     $971 = HEAP32[$959>>2]|0;
     $972 = $971 & -2;
     HEAP32[$959>>2] = $972;
     $973 = $970 | 1;
     $974 = ((($635)) + 4|0);
     HEAP32[$974>>2] = $973;
     HEAP32[$943>>2] = $970;
     $975 = $970 >>> 3;
     $976 = ($970>>>0)<(256);
     if ($976) {
      $977 = $975 << 1;
      $978 = (4392 + ($977<<2)|0);
      $979 = HEAP32[4352>>2]|0;
      $980 = 1 << $975;
      $981 = $979 & $980;
      $982 = ($981|0)==(0);
      if ($982) {
       $983 = $979 | $980;
       HEAP32[4352>>2] = $983;
       $$pre$i$i = (($977) + 2)|0;
       $$pre14$i$i = (4392 + ($$pre$i$i<<2)|0);
       $$pre$phi$i$iZ2D = $$pre14$i$i;$F$0$i$i = $978;
      } else {
       $$sum4$i$i = (($977) + 2)|0;
       $984 = (4392 + ($$sum4$i$i<<2)|0);
       $985 = HEAP32[$984>>2]|0;
       $986 = HEAP32[(4368)>>2]|0;
       $987 = ($985>>>0)<($986>>>0);
       if ($987) {
        _abort();
        // unreachable;
       } else {
        $$pre$phi$i$iZ2D = $984;$F$0$i$i = $985;
       }
      }
      HEAP32[$$pre$phi$i$iZ2D>>2] = $635;
      $988 = ((($F$0$i$i)) + 12|0);
      HEAP32[$988>>2] = $635;
      $989 = ((($635)) + 8|0);
      HEAP32[$989>>2] = $F$0$i$i;
      $990 = ((($635)) + 12|0);
      HEAP32[$990>>2] = $978;
      break;
     }
     $991 = $970 >>> 8;
     $992 = ($991|0)==(0);
     if ($992) {
      $I1$0$i$i = 0;
     } else {
      $993 = ($970>>>0)>(16777215);
      if ($993) {
       $I1$0$i$i = 31;
      } else {
       $994 = (($991) + 1048320)|0;
       $995 = $994 >>> 16;
       $996 = $995 & 8;
       $997 = $991 << $996;
       $998 = (($997) + 520192)|0;
       $999 = $998 >>> 16;
       $1000 = $999 & 4;
       $1001 = $1000 | $996;
       $1002 = $997 << $1000;
       $1003 = (($1002) + 245760)|0;
       $1004 = $1003 >>> 16;
       $1005 = $1004 & 2;
       $1006 = $1001 | $1005;
       $1007 = (14 - ($1006))|0;
       $1008 = $1002 << $1005;
       $1009 = $1008 >>> 15;
       $1010 = (($1007) + ($1009))|0;
       $1011 = $1010 << 1;
       $1012 = (($1010) + 7)|0;
       $1013 = $970 >>> $1012;
       $1014 = $1013 & 1;
       $1015 = $1014 | $1011;
       $I1$0$i$i = $1015;
      }
     }
     $1016 = (4656 + ($I1$0$i$i<<2)|0);
     $1017 = ((($635)) + 28|0);
     HEAP32[$1017>>2] = $I1$0$i$i;
     $1018 = ((($635)) + 20|0);
     HEAP32[$1018>>2] = 0;
     HEAP32[$941>>2] = 0;
     $1019 = HEAP32[(4356)>>2]|0;
     $1020 = 1 << $I1$0$i$i;
     $1021 = $1019 & $1020;
     $1022 = ($1021|0)==(0);
     if ($1022) {
      $1023 = $1019 | $1020;
      HEAP32[(4356)>>2] = $1023;
      HEAP32[$1016>>2] = $635;
      $1024 = ((($635)) + 24|0);
      HEAP32[$1024>>2] = $1016;
      $1025 = ((($635)) + 12|0);
      HEAP32[$1025>>2] = $635;
      $1026 = ((($635)) + 8|0);
      HEAP32[$1026>>2] = $635;
      break;
     }
     $1027 = HEAP32[$1016>>2]|0;
     $1028 = ((($1027)) + 4|0);
     $1029 = HEAP32[$1028>>2]|0;
     $1030 = $1029 & -8;
     $1031 = ($1030|0)==($970|0);
     L459: do {
      if ($1031) {
       $T$0$lcssa$i$i = $1027;
      } else {
       $1032 = ($I1$0$i$i|0)==(31);
       $1033 = $I1$0$i$i >>> 1;
       $1034 = (25 - ($1033))|0;
       $1035 = $1032 ? 0 : $1034;
       $1036 = $970 << $1035;
       $K2$07$i$i = $1036;$T$06$i$i = $1027;
       while(1) {
        $1043 = $K2$07$i$i >>> 31;
        $1044 = (((($T$06$i$i)) + 16|0) + ($1043<<2)|0);
        $1039 = HEAP32[$1044>>2]|0;
        $1045 = ($1039|0)==(0|0);
        if ($1045) {
         $$lcssa211 = $1044;$T$06$i$i$lcssa = $T$06$i$i;
         break;
        }
        $1037 = $K2$07$i$i << 1;
        $1038 = ((($1039)) + 4|0);
        $1040 = HEAP32[$1038>>2]|0;
        $1041 = $1040 & -8;
        $1042 = ($1041|0)==($970|0);
        if ($1042) {
         $T$0$lcssa$i$i = $1039;
         break L459;
        } else {
         $K2$07$i$i = $1037;$T$06$i$i = $1039;
        }
       }
       $1046 = HEAP32[(4368)>>2]|0;
       $1047 = ($$lcssa211>>>0)<($1046>>>0);
       if ($1047) {
        _abort();
        // unreachable;
       } else {
        HEAP32[$$lcssa211>>2] = $635;
        $1048 = ((($635)) + 24|0);
        HEAP32[$1048>>2] = $T$06$i$i$lcssa;
        $1049 = ((($635)) + 12|0);
        HEAP32[$1049>>2] = $635;
        $1050 = ((($635)) + 8|0);
        HEAP32[$1050>>2] = $635;
        break L299;
       }
      }
     } while(0);
     $1051 = ((($T$0$lcssa$i$i)) + 8|0);
     $1052 = HEAP32[$1051>>2]|0;
     $1053 = HEAP32[(4368)>>2]|0;
     $1054 = ($1052>>>0)>=($1053>>>0);
     $not$$i$i = ($T$0$lcssa$i$i>>>0)>=($1053>>>0);
     $1055 = $1054 & $not$$i$i;
     if ($1055) {
      $1056 = ((($1052)) + 12|0);
      HEAP32[$1056>>2] = $635;
      HEAP32[$1051>>2] = $635;
      $1057 = ((($635)) + 8|0);
      HEAP32[$1057>>2] = $1052;
      $1058 = ((($635)) + 12|0);
      HEAP32[$1058>>2] = $T$0$lcssa$i$i;
      $1059 = ((($635)) + 24|0);
      HEAP32[$1059>>2] = 0;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   }
  } while(0);
  $1060 = HEAP32[(4364)>>2]|0;
  $1061 = ($1060>>>0)>($nb$0>>>0);
  if ($1061) {
   $1062 = (($1060) - ($nb$0))|0;
   HEAP32[(4364)>>2] = $1062;
   $1063 = HEAP32[(4376)>>2]|0;
   $1064 = (($1063) + ($nb$0)|0);
   HEAP32[(4376)>>2] = $1064;
   $1065 = $1062 | 1;
   $$sum$i32 = (($nb$0) + 4)|0;
   $1066 = (($1063) + ($$sum$i32)|0);
   HEAP32[$1066>>2] = $1065;
   $1067 = $nb$0 | 3;
   $1068 = ((($1063)) + 4|0);
   HEAP32[$1068>>2] = $1067;
   $1069 = ((($1063)) + 8|0);
   $mem$0 = $1069;
   return ($mem$0|0);
  }
 }
 $1070 = (___errno_location()|0);
 HEAP32[$1070>>2] = 12;
 $mem$0 = 0;
 return ($mem$0|0);
}
function _free($mem) {
 $mem = $mem|0;
 var $$lcssa = 0, $$pre = 0, $$pre$phi59Z2D = 0, $$pre$phi61Z2D = 0, $$pre$phiZ2D = 0, $$pre57 = 0, $$pre58 = 0, $$pre60 = 0, $$sum = 0, $$sum11 = 0, $$sum12 = 0, $$sum13 = 0, $$sum14 = 0, $$sum1718 = 0, $$sum19 = 0, $$sum2 = 0, $$sum20 = 0, $$sum22 = 0, $$sum23 = 0, $$sum24 = 0;
 var $$sum25 = 0, $$sum26 = 0, $$sum27 = 0, $$sum28 = 0, $$sum29 = 0, $$sum3 = 0, $$sum30 = 0, $$sum31 = 0, $$sum5 = 0, $$sum67 = 0, $$sum8 = 0, $$sum9 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;
 var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0;
 var $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0;
 var $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0;
 var $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0;
 var $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0;
 var $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0;
 var $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0;
 var $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0;
 var $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0;
 var $321 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $F16$0 = 0, $I18$0 = 0, $K19$052 = 0, $R$0 = 0, $R$0$lcssa = 0, $R$1 = 0;
 var $R7$0 = 0, $R7$0$lcssa = 0, $R7$1 = 0, $RP$0 = 0, $RP$0$lcssa = 0, $RP9$0 = 0, $RP9$0$lcssa = 0, $T$0$lcssa = 0, $T$051 = 0, $T$051$lcssa = 0, $cond = 0, $cond47 = 0, $not$ = 0, $p$0 = 0, $psize$0 = 0, $psize$1 = 0, $sp$0$i = 0, $sp$0$in$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($mem|0)==(0|0);
 if ($0) {
  return;
 }
 $1 = ((($mem)) + -8|0);
 $2 = HEAP32[(4368)>>2]|0;
 $3 = ($1>>>0)<($2>>>0);
 if ($3) {
  _abort();
  // unreachable;
 }
 $4 = ((($mem)) + -4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $5 & 3;
 $7 = ($6|0)==(1);
 if ($7) {
  _abort();
  // unreachable;
 }
 $8 = $5 & -8;
 $$sum = (($8) + -8)|0;
 $9 = (($mem) + ($$sum)|0);
 $10 = $5 & 1;
 $11 = ($10|0)==(0);
 do {
  if ($11) {
   $12 = HEAP32[$1>>2]|0;
   $13 = ($6|0)==(0);
   if ($13) {
    return;
   }
   $$sum2 = (-8 - ($12))|0;
   $14 = (($mem) + ($$sum2)|0);
   $15 = (($12) + ($8))|0;
   $16 = ($14>>>0)<($2>>>0);
   if ($16) {
    _abort();
    // unreachable;
   }
   $17 = HEAP32[(4372)>>2]|0;
   $18 = ($14|0)==($17|0);
   if ($18) {
    $$sum3 = (($8) + -4)|0;
    $103 = (($mem) + ($$sum3)|0);
    $104 = HEAP32[$103>>2]|0;
    $105 = $104 & 3;
    $106 = ($105|0)==(3);
    if (!($106)) {
     $p$0 = $14;$psize$0 = $15;
     break;
    }
    HEAP32[(4360)>>2] = $15;
    $107 = $104 & -2;
    HEAP32[$103>>2] = $107;
    $108 = $15 | 1;
    $$sum20 = (($$sum2) + 4)|0;
    $109 = (($mem) + ($$sum20)|0);
    HEAP32[$109>>2] = $108;
    HEAP32[$9>>2] = $15;
    return;
   }
   $19 = $12 >>> 3;
   $20 = ($12>>>0)<(256);
   if ($20) {
    $$sum30 = (($$sum2) + 8)|0;
    $21 = (($mem) + ($$sum30)|0);
    $22 = HEAP32[$21>>2]|0;
    $$sum31 = (($$sum2) + 12)|0;
    $23 = (($mem) + ($$sum31)|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = $19 << 1;
    $26 = (4392 + ($25<<2)|0);
    $27 = ($22|0)==($26|0);
    if (!($27)) {
     $28 = ($22>>>0)<($2>>>0);
     if ($28) {
      _abort();
      // unreachable;
     }
     $29 = ((($22)) + 12|0);
     $30 = HEAP32[$29>>2]|0;
     $31 = ($30|0)==($14|0);
     if (!($31)) {
      _abort();
      // unreachable;
     }
    }
    $32 = ($24|0)==($22|0);
    if ($32) {
     $33 = 1 << $19;
     $34 = $33 ^ -1;
     $35 = HEAP32[4352>>2]|0;
     $36 = $35 & $34;
     HEAP32[4352>>2] = $36;
     $p$0 = $14;$psize$0 = $15;
     break;
    }
    $37 = ($24|0)==($26|0);
    if ($37) {
     $$pre60 = ((($24)) + 8|0);
     $$pre$phi61Z2D = $$pre60;
    } else {
     $38 = ($24>>>0)<($2>>>0);
     if ($38) {
      _abort();
      // unreachable;
     }
     $39 = ((($24)) + 8|0);
     $40 = HEAP32[$39>>2]|0;
     $41 = ($40|0)==($14|0);
     if ($41) {
      $$pre$phi61Z2D = $39;
     } else {
      _abort();
      // unreachable;
     }
    }
    $42 = ((($22)) + 12|0);
    HEAP32[$42>>2] = $24;
    HEAP32[$$pre$phi61Z2D>>2] = $22;
    $p$0 = $14;$psize$0 = $15;
    break;
   }
   $$sum22 = (($$sum2) + 24)|0;
   $43 = (($mem) + ($$sum22)|0);
   $44 = HEAP32[$43>>2]|0;
   $$sum23 = (($$sum2) + 12)|0;
   $45 = (($mem) + ($$sum23)|0);
   $46 = HEAP32[$45>>2]|0;
   $47 = ($46|0)==($14|0);
   do {
    if ($47) {
     $$sum25 = (($$sum2) + 20)|0;
     $57 = (($mem) + ($$sum25)|0);
     $58 = HEAP32[$57>>2]|0;
     $59 = ($58|0)==(0|0);
     if ($59) {
      $$sum24 = (($$sum2) + 16)|0;
      $60 = (($mem) + ($$sum24)|0);
      $61 = HEAP32[$60>>2]|0;
      $62 = ($61|0)==(0|0);
      if ($62) {
       $R$1 = 0;
       break;
      } else {
       $R$0 = $61;$RP$0 = $60;
      }
     } else {
      $R$0 = $58;$RP$0 = $57;
     }
     while(1) {
      $63 = ((($R$0)) + 20|0);
      $64 = HEAP32[$63>>2]|0;
      $65 = ($64|0)==(0|0);
      if (!($65)) {
       $R$0 = $64;$RP$0 = $63;
       continue;
      }
      $66 = ((($R$0)) + 16|0);
      $67 = HEAP32[$66>>2]|0;
      $68 = ($67|0)==(0|0);
      if ($68) {
       $R$0$lcssa = $R$0;$RP$0$lcssa = $RP$0;
       break;
      } else {
       $R$0 = $67;$RP$0 = $66;
      }
     }
     $69 = ($RP$0$lcssa>>>0)<($2>>>0);
     if ($69) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$RP$0$lcssa>>2] = 0;
      $R$1 = $R$0$lcssa;
      break;
     }
    } else {
     $$sum29 = (($$sum2) + 8)|0;
     $48 = (($mem) + ($$sum29)|0);
     $49 = HEAP32[$48>>2]|0;
     $50 = ($49>>>0)<($2>>>0);
     if ($50) {
      _abort();
      // unreachable;
     }
     $51 = ((($49)) + 12|0);
     $52 = HEAP32[$51>>2]|0;
     $53 = ($52|0)==($14|0);
     if (!($53)) {
      _abort();
      // unreachable;
     }
     $54 = ((($46)) + 8|0);
     $55 = HEAP32[$54>>2]|0;
     $56 = ($55|0)==($14|0);
     if ($56) {
      HEAP32[$51>>2] = $46;
      HEAP32[$54>>2] = $49;
      $R$1 = $46;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $70 = ($44|0)==(0|0);
   if ($70) {
    $p$0 = $14;$psize$0 = $15;
   } else {
    $$sum26 = (($$sum2) + 28)|0;
    $71 = (($mem) + ($$sum26)|0);
    $72 = HEAP32[$71>>2]|0;
    $73 = (4656 + ($72<<2)|0);
    $74 = HEAP32[$73>>2]|0;
    $75 = ($14|0)==($74|0);
    if ($75) {
     HEAP32[$73>>2] = $R$1;
     $cond = ($R$1|0)==(0|0);
     if ($cond) {
      $76 = 1 << $72;
      $77 = $76 ^ -1;
      $78 = HEAP32[(4356)>>2]|0;
      $79 = $78 & $77;
      HEAP32[(4356)>>2] = $79;
      $p$0 = $14;$psize$0 = $15;
      break;
     }
    } else {
     $80 = HEAP32[(4368)>>2]|0;
     $81 = ($44>>>0)<($80>>>0);
     if ($81) {
      _abort();
      // unreachable;
     }
     $82 = ((($44)) + 16|0);
     $83 = HEAP32[$82>>2]|0;
     $84 = ($83|0)==($14|0);
     if ($84) {
      HEAP32[$82>>2] = $R$1;
     } else {
      $85 = ((($44)) + 20|0);
      HEAP32[$85>>2] = $R$1;
     }
     $86 = ($R$1|0)==(0|0);
     if ($86) {
      $p$0 = $14;$psize$0 = $15;
      break;
     }
    }
    $87 = HEAP32[(4368)>>2]|0;
    $88 = ($R$1>>>0)<($87>>>0);
    if ($88) {
     _abort();
     // unreachable;
    }
    $89 = ((($R$1)) + 24|0);
    HEAP32[$89>>2] = $44;
    $$sum27 = (($$sum2) + 16)|0;
    $90 = (($mem) + ($$sum27)|0);
    $91 = HEAP32[$90>>2]|0;
    $92 = ($91|0)==(0|0);
    do {
     if (!($92)) {
      $93 = ($91>>>0)<($87>>>0);
      if ($93) {
       _abort();
       // unreachable;
      } else {
       $94 = ((($R$1)) + 16|0);
       HEAP32[$94>>2] = $91;
       $95 = ((($91)) + 24|0);
       HEAP32[$95>>2] = $R$1;
       break;
      }
     }
    } while(0);
    $$sum28 = (($$sum2) + 20)|0;
    $96 = (($mem) + ($$sum28)|0);
    $97 = HEAP32[$96>>2]|0;
    $98 = ($97|0)==(0|0);
    if ($98) {
     $p$0 = $14;$psize$0 = $15;
    } else {
     $99 = HEAP32[(4368)>>2]|0;
     $100 = ($97>>>0)<($99>>>0);
     if ($100) {
      _abort();
      // unreachable;
     } else {
      $101 = ((($R$1)) + 20|0);
      HEAP32[$101>>2] = $97;
      $102 = ((($97)) + 24|0);
      HEAP32[$102>>2] = $R$1;
      $p$0 = $14;$psize$0 = $15;
      break;
     }
    }
   }
  } else {
   $p$0 = $1;$psize$0 = $8;
  }
 } while(0);
 $110 = ($p$0>>>0)<($9>>>0);
 if (!($110)) {
  _abort();
  // unreachable;
 }
 $$sum19 = (($8) + -4)|0;
 $111 = (($mem) + ($$sum19)|0);
 $112 = HEAP32[$111>>2]|0;
 $113 = $112 & 1;
 $114 = ($113|0)==(0);
 if ($114) {
  _abort();
  // unreachable;
 }
 $115 = $112 & 2;
 $116 = ($115|0)==(0);
 if ($116) {
  $117 = HEAP32[(4376)>>2]|0;
  $118 = ($9|0)==($117|0);
  if ($118) {
   $119 = HEAP32[(4364)>>2]|0;
   $120 = (($119) + ($psize$0))|0;
   HEAP32[(4364)>>2] = $120;
   HEAP32[(4376)>>2] = $p$0;
   $121 = $120 | 1;
   $122 = ((($p$0)) + 4|0);
   HEAP32[$122>>2] = $121;
   $123 = HEAP32[(4372)>>2]|0;
   $124 = ($p$0|0)==($123|0);
   if (!($124)) {
    return;
   }
   HEAP32[(4372)>>2] = 0;
   HEAP32[(4360)>>2] = 0;
   return;
  }
  $125 = HEAP32[(4372)>>2]|0;
  $126 = ($9|0)==($125|0);
  if ($126) {
   $127 = HEAP32[(4360)>>2]|0;
   $128 = (($127) + ($psize$0))|0;
   HEAP32[(4360)>>2] = $128;
   HEAP32[(4372)>>2] = $p$0;
   $129 = $128 | 1;
   $130 = ((($p$0)) + 4|0);
   HEAP32[$130>>2] = $129;
   $131 = (($p$0) + ($128)|0);
   HEAP32[$131>>2] = $128;
   return;
  }
  $132 = $112 & -8;
  $133 = (($132) + ($psize$0))|0;
  $134 = $112 >>> 3;
  $135 = ($112>>>0)<(256);
  do {
   if ($135) {
    $136 = (($mem) + ($8)|0);
    $137 = HEAP32[$136>>2]|0;
    $$sum1718 = $8 | 4;
    $138 = (($mem) + ($$sum1718)|0);
    $139 = HEAP32[$138>>2]|0;
    $140 = $134 << 1;
    $141 = (4392 + ($140<<2)|0);
    $142 = ($137|0)==($141|0);
    if (!($142)) {
     $143 = HEAP32[(4368)>>2]|0;
     $144 = ($137>>>0)<($143>>>0);
     if ($144) {
      _abort();
      // unreachable;
     }
     $145 = ((($137)) + 12|0);
     $146 = HEAP32[$145>>2]|0;
     $147 = ($146|0)==($9|0);
     if (!($147)) {
      _abort();
      // unreachable;
     }
    }
    $148 = ($139|0)==($137|0);
    if ($148) {
     $149 = 1 << $134;
     $150 = $149 ^ -1;
     $151 = HEAP32[4352>>2]|0;
     $152 = $151 & $150;
     HEAP32[4352>>2] = $152;
     break;
    }
    $153 = ($139|0)==($141|0);
    if ($153) {
     $$pre58 = ((($139)) + 8|0);
     $$pre$phi59Z2D = $$pre58;
    } else {
     $154 = HEAP32[(4368)>>2]|0;
     $155 = ($139>>>0)<($154>>>0);
     if ($155) {
      _abort();
      // unreachable;
     }
     $156 = ((($139)) + 8|0);
     $157 = HEAP32[$156>>2]|0;
     $158 = ($157|0)==($9|0);
     if ($158) {
      $$pre$phi59Z2D = $156;
     } else {
      _abort();
      // unreachable;
     }
    }
    $159 = ((($137)) + 12|0);
    HEAP32[$159>>2] = $139;
    HEAP32[$$pre$phi59Z2D>>2] = $137;
   } else {
    $$sum5 = (($8) + 16)|0;
    $160 = (($mem) + ($$sum5)|0);
    $161 = HEAP32[$160>>2]|0;
    $$sum67 = $8 | 4;
    $162 = (($mem) + ($$sum67)|0);
    $163 = HEAP32[$162>>2]|0;
    $164 = ($163|0)==($9|0);
    do {
     if ($164) {
      $$sum9 = (($8) + 12)|0;
      $175 = (($mem) + ($$sum9)|0);
      $176 = HEAP32[$175>>2]|0;
      $177 = ($176|0)==(0|0);
      if ($177) {
       $$sum8 = (($8) + 8)|0;
       $178 = (($mem) + ($$sum8)|0);
       $179 = HEAP32[$178>>2]|0;
       $180 = ($179|0)==(0|0);
       if ($180) {
        $R7$1 = 0;
        break;
       } else {
        $R7$0 = $179;$RP9$0 = $178;
       }
      } else {
       $R7$0 = $176;$RP9$0 = $175;
      }
      while(1) {
       $181 = ((($R7$0)) + 20|0);
       $182 = HEAP32[$181>>2]|0;
       $183 = ($182|0)==(0|0);
       if (!($183)) {
        $R7$0 = $182;$RP9$0 = $181;
        continue;
       }
       $184 = ((($R7$0)) + 16|0);
       $185 = HEAP32[$184>>2]|0;
       $186 = ($185|0)==(0|0);
       if ($186) {
        $R7$0$lcssa = $R7$0;$RP9$0$lcssa = $RP9$0;
        break;
       } else {
        $R7$0 = $185;$RP9$0 = $184;
       }
      }
      $187 = HEAP32[(4368)>>2]|0;
      $188 = ($RP9$0$lcssa>>>0)<($187>>>0);
      if ($188) {
       _abort();
       // unreachable;
      } else {
       HEAP32[$RP9$0$lcssa>>2] = 0;
       $R7$1 = $R7$0$lcssa;
       break;
      }
     } else {
      $165 = (($mem) + ($8)|0);
      $166 = HEAP32[$165>>2]|0;
      $167 = HEAP32[(4368)>>2]|0;
      $168 = ($166>>>0)<($167>>>0);
      if ($168) {
       _abort();
       // unreachable;
      }
      $169 = ((($166)) + 12|0);
      $170 = HEAP32[$169>>2]|0;
      $171 = ($170|0)==($9|0);
      if (!($171)) {
       _abort();
       // unreachable;
      }
      $172 = ((($163)) + 8|0);
      $173 = HEAP32[$172>>2]|0;
      $174 = ($173|0)==($9|0);
      if ($174) {
       HEAP32[$169>>2] = $163;
       HEAP32[$172>>2] = $166;
       $R7$1 = $163;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $189 = ($161|0)==(0|0);
    if (!($189)) {
     $$sum12 = (($8) + 20)|0;
     $190 = (($mem) + ($$sum12)|0);
     $191 = HEAP32[$190>>2]|0;
     $192 = (4656 + ($191<<2)|0);
     $193 = HEAP32[$192>>2]|0;
     $194 = ($9|0)==($193|0);
     if ($194) {
      HEAP32[$192>>2] = $R7$1;
      $cond47 = ($R7$1|0)==(0|0);
      if ($cond47) {
       $195 = 1 << $191;
       $196 = $195 ^ -1;
       $197 = HEAP32[(4356)>>2]|0;
       $198 = $197 & $196;
       HEAP32[(4356)>>2] = $198;
       break;
      }
     } else {
      $199 = HEAP32[(4368)>>2]|0;
      $200 = ($161>>>0)<($199>>>0);
      if ($200) {
       _abort();
       // unreachable;
      }
      $201 = ((($161)) + 16|0);
      $202 = HEAP32[$201>>2]|0;
      $203 = ($202|0)==($9|0);
      if ($203) {
       HEAP32[$201>>2] = $R7$1;
      } else {
       $204 = ((($161)) + 20|0);
       HEAP32[$204>>2] = $R7$1;
      }
      $205 = ($R7$1|0)==(0|0);
      if ($205) {
       break;
      }
     }
     $206 = HEAP32[(4368)>>2]|0;
     $207 = ($R7$1>>>0)<($206>>>0);
     if ($207) {
      _abort();
      // unreachable;
     }
     $208 = ((($R7$1)) + 24|0);
     HEAP32[$208>>2] = $161;
     $$sum13 = (($8) + 8)|0;
     $209 = (($mem) + ($$sum13)|0);
     $210 = HEAP32[$209>>2]|0;
     $211 = ($210|0)==(0|0);
     do {
      if (!($211)) {
       $212 = ($210>>>0)<($206>>>0);
       if ($212) {
        _abort();
        // unreachable;
       } else {
        $213 = ((($R7$1)) + 16|0);
        HEAP32[$213>>2] = $210;
        $214 = ((($210)) + 24|0);
        HEAP32[$214>>2] = $R7$1;
        break;
       }
      }
     } while(0);
     $$sum14 = (($8) + 12)|0;
     $215 = (($mem) + ($$sum14)|0);
     $216 = HEAP32[$215>>2]|0;
     $217 = ($216|0)==(0|0);
     if (!($217)) {
      $218 = HEAP32[(4368)>>2]|0;
      $219 = ($216>>>0)<($218>>>0);
      if ($219) {
       _abort();
       // unreachable;
      } else {
       $220 = ((($R7$1)) + 20|0);
       HEAP32[$220>>2] = $216;
       $221 = ((($216)) + 24|0);
       HEAP32[$221>>2] = $R7$1;
       break;
      }
     }
    }
   }
  } while(0);
  $222 = $133 | 1;
  $223 = ((($p$0)) + 4|0);
  HEAP32[$223>>2] = $222;
  $224 = (($p$0) + ($133)|0);
  HEAP32[$224>>2] = $133;
  $225 = HEAP32[(4372)>>2]|0;
  $226 = ($p$0|0)==($225|0);
  if ($226) {
   HEAP32[(4360)>>2] = $133;
   return;
  } else {
   $psize$1 = $133;
  }
 } else {
  $227 = $112 & -2;
  HEAP32[$111>>2] = $227;
  $228 = $psize$0 | 1;
  $229 = ((($p$0)) + 4|0);
  HEAP32[$229>>2] = $228;
  $230 = (($p$0) + ($psize$0)|0);
  HEAP32[$230>>2] = $psize$0;
  $psize$1 = $psize$0;
 }
 $231 = $psize$1 >>> 3;
 $232 = ($psize$1>>>0)<(256);
 if ($232) {
  $233 = $231 << 1;
  $234 = (4392 + ($233<<2)|0);
  $235 = HEAP32[4352>>2]|0;
  $236 = 1 << $231;
  $237 = $235 & $236;
  $238 = ($237|0)==(0);
  if ($238) {
   $239 = $235 | $236;
   HEAP32[4352>>2] = $239;
   $$pre = (($233) + 2)|0;
   $$pre57 = (4392 + ($$pre<<2)|0);
   $$pre$phiZ2D = $$pre57;$F16$0 = $234;
  } else {
   $$sum11 = (($233) + 2)|0;
   $240 = (4392 + ($$sum11<<2)|0);
   $241 = HEAP32[$240>>2]|0;
   $242 = HEAP32[(4368)>>2]|0;
   $243 = ($241>>>0)<($242>>>0);
   if ($243) {
    _abort();
    // unreachable;
   } else {
    $$pre$phiZ2D = $240;$F16$0 = $241;
   }
  }
  HEAP32[$$pre$phiZ2D>>2] = $p$0;
  $244 = ((($F16$0)) + 12|0);
  HEAP32[$244>>2] = $p$0;
  $245 = ((($p$0)) + 8|0);
  HEAP32[$245>>2] = $F16$0;
  $246 = ((($p$0)) + 12|0);
  HEAP32[$246>>2] = $234;
  return;
 }
 $247 = $psize$1 >>> 8;
 $248 = ($247|0)==(0);
 if ($248) {
  $I18$0 = 0;
 } else {
  $249 = ($psize$1>>>0)>(16777215);
  if ($249) {
   $I18$0 = 31;
  } else {
   $250 = (($247) + 1048320)|0;
   $251 = $250 >>> 16;
   $252 = $251 & 8;
   $253 = $247 << $252;
   $254 = (($253) + 520192)|0;
   $255 = $254 >>> 16;
   $256 = $255 & 4;
   $257 = $256 | $252;
   $258 = $253 << $256;
   $259 = (($258) + 245760)|0;
   $260 = $259 >>> 16;
   $261 = $260 & 2;
   $262 = $257 | $261;
   $263 = (14 - ($262))|0;
   $264 = $258 << $261;
   $265 = $264 >>> 15;
   $266 = (($263) + ($265))|0;
   $267 = $266 << 1;
   $268 = (($266) + 7)|0;
   $269 = $psize$1 >>> $268;
   $270 = $269 & 1;
   $271 = $270 | $267;
   $I18$0 = $271;
  }
 }
 $272 = (4656 + ($I18$0<<2)|0);
 $273 = ((($p$0)) + 28|0);
 HEAP32[$273>>2] = $I18$0;
 $274 = ((($p$0)) + 16|0);
 $275 = ((($p$0)) + 20|0);
 HEAP32[$275>>2] = 0;
 HEAP32[$274>>2] = 0;
 $276 = HEAP32[(4356)>>2]|0;
 $277 = 1 << $I18$0;
 $278 = $276 & $277;
 $279 = ($278|0)==(0);
 L199: do {
  if ($279) {
   $280 = $276 | $277;
   HEAP32[(4356)>>2] = $280;
   HEAP32[$272>>2] = $p$0;
   $281 = ((($p$0)) + 24|0);
   HEAP32[$281>>2] = $272;
   $282 = ((($p$0)) + 12|0);
   HEAP32[$282>>2] = $p$0;
   $283 = ((($p$0)) + 8|0);
   HEAP32[$283>>2] = $p$0;
  } else {
   $284 = HEAP32[$272>>2]|0;
   $285 = ((($284)) + 4|0);
   $286 = HEAP32[$285>>2]|0;
   $287 = $286 & -8;
   $288 = ($287|0)==($psize$1|0);
   L202: do {
    if ($288) {
     $T$0$lcssa = $284;
    } else {
     $289 = ($I18$0|0)==(31);
     $290 = $I18$0 >>> 1;
     $291 = (25 - ($290))|0;
     $292 = $289 ? 0 : $291;
     $293 = $psize$1 << $292;
     $K19$052 = $293;$T$051 = $284;
     while(1) {
      $300 = $K19$052 >>> 31;
      $301 = (((($T$051)) + 16|0) + ($300<<2)|0);
      $296 = HEAP32[$301>>2]|0;
      $302 = ($296|0)==(0|0);
      if ($302) {
       $$lcssa = $301;$T$051$lcssa = $T$051;
       break;
      }
      $294 = $K19$052 << 1;
      $295 = ((($296)) + 4|0);
      $297 = HEAP32[$295>>2]|0;
      $298 = $297 & -8;
      $299 = ($298|0)==($psize$1|0);
      if ($299) {
       $T$0$lcssa = $296;
       break L202;
      } else {
       $K19$052 = $294;$T$051 = $296;
      }
     }
     $303 = HEAP32[(4368)>>2]|0;
     $304 = ($$lcssa>>>0)<($303>>>0);
     if ($304) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$$lcssa>>2] = $p$0;
      $305 = ((($p$0)) + 24|0);
      HEAP32[$305>>2] = $T$051$lcssa;
      $306 = ((($p$0)) + 12|0);
      HEAP32[$306>>2] = $p$0;
      $307 = ((($p$0)) + 8|0);
      HEAP32[$307>>2] = $p$0;
      break L199;
     }
    }
   } while(0);
   $308 = ((($T$0$lcssa)) + 8|0);
   $309 = HEAP32[$308>>2]|0;
   $310 = HEAP32[(4368)>>2]|0;
   $311 = ($309>>>0)>=($310>>>0);
   $not$ = ($T$0$lcssa>>>0)>=($310>>>0);
   $312 = $311 & $not$;
   if ($312) {
    $313 = ((($309)) + 12|0);
    HEAP32[$313>>2] = $p$0;
    HEAP32[$308>>2] = $p$0;
    $314 = ((($p$0)) + 8|0);
    HEAP32[$314>>2] = $309;
    $315 = ((($p$0)) + 12|0);
    HEAP32[$315>>2] = $T$0$lcssa;
    $316 = ((($p$0)) + 24|0);
    HEAP32[$316>>2] = 0;
    break;
   } else {
    _abort();
    // unreachable;
   }
  }
 } while(0);
 $317 = HEAP32[(4384)>>2]|0;
 $318 = (($317) + -1)|0;
 HEAP32[(4384)>>2] = $318;
 $319 = ($318|0)==(0);
 if ($319) {
  $sp$0$in$i = (4808);
 } else {
  return;
 }
 while(1) {
  $sp$0$i = HEAP32[$sp$0$in$i>>2]|0;
  $320 = ($sp$0$i|0)==(0|0);
  $321 = ((($sp$0$i)) + 8|0);
  if ($320) {
   break;
  } else {
   $sp$0$in$i = $321;
  }
 }
 HEAP32[(4384)>>2] = -1;
 return;
}
function _realloc($oldmem,$bytes) {
 $oldmem = $oldmem|0;
 $bytes = $bytes|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $mem$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($oldmem|0)==(0|0);
 if ($0) {
  $1 = (_malloc($bytes)|0);
  $mem$0 = $1;
  return ($mem$0|0);
 }
 $2 = ($bytes>>>0)>(4294967231);
 if ($2) {
  $3 = (___errno_location()|0);
  HEAP32[$3>>2] = 12;
  $mem$0 = 0;
  return ($mem$0|0);
 }
 $4 = ($bytes>>>0)<(11);
 $5 = (($bytes) + 11)|0;
 $6 = $5 & -8;
 $7 = $4 ? 16 : $6;
 $8 = ((($oldmem)) + -8|0);
 $9 = (_try_realloc_chunk($8,$7)|0);
 $10 = ($9|0)==(0|0);
 if (!($10)) {
  $11 = ((($9)) + 8|0);
  $mem$0 = $11;
  return ($mem$0|0);
 }
 $12 = (_malloc($bytes)|0);
 $13 = ($12|0)==(0|0);
 if ($13) {
  $mem$0 = 0;
  return ($mem$0|0);
 }
 $14 = ((($oldmem)) + -4|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = $15 & -8;
 $17 = $15 & 3;
 $18 = ($17|0)==(0);
 $19 = $18 ? 8 : 4;
 $20 = (($16) - ($19))|0;
 $21 = ($20>>>0)<($bytes>>>0);
 $22 = $21 ? $20 : $bytes;
 _memcpy(($12|0),($oldmem|0),($22|0))|0;
 _free($oldmem);
 $mem$0 = $12;
 return ($mem$0|0);
}
function _try_realloc_chunk($p,$nb) {
 $p = $p|0;
 $nb = $nb|0;
 var $$pre = 0, $$pre$phiZ2D = 0, $$sum = 0, $$sum11 = 0, $$sum12 = 0, $$sum13 = 0, $$sum14 = 0, $$sum15 = 0, $$sum16 = 0, $$sum17 = 0, $$sum19 = 0, $$sum2 = 0, $$sum20 = 0, $$sum22 = 0, $$sum23 = 0, $$sum2728 = 0, $$sum3 = 0, $$sum4 = 0, $$sum5 = 0, $$sum78 = 0;
 var $$sum910 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0;
 var $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0;
 var $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0;
 var $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0;
 var $17 = 0, $170 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $R$0 = 0, $R$0$lcssa = 0, $R$1 = 0, $RP$0 = 0, $RP$0$lcssa = 0, $cond = 0, $newp$0 = 0, $notlhs = 0;
 var $notrhs = 0, $or$cond$not = 0, $or$cond30 = 0, $storemerge = 0, $storemerge21 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($p)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 & -8;
 $3 = (($p) + ($2)|0);
 $4 = HEAP32[(4368)>>2]|0;
 $5 = $1 & 3;
 $notlhs = ($p>>>0)>=($4>>>0);
 $notrhs = ($5|0)!=(1);
 $or$cond$not = $notrhs & $notlhs;
 $6 = ($p>>>0)<($3>>>0);
 $or$cond30 = $or$cond$not & $6;
 if (!($or$cond30)) {
  _abort();
  // unreachable;
 }
 $$sum2728 = $2 | 4;
 $7 = (($p) + ($$sum2728)|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = $8 & 1;
 $10 = ($9|0)==(0);
 if ($10) {
  _abort();
  // unreachable;
 }
 $11 = ($5|0)==(0);
 if ($11) {
  $12 = ($nb>>>0)<(256);
  if ($12) {
   $newp$0 = 0;
   return ($newp$0|0);
  }
  $13 = (($nb) + 4)|0;
  $14 = ($2>>>0)<($13>>>0);
  if (!($14)) {
   $15 = (($2) - ($nb))|0;
   $16 = HEAP32[(4832)>>2]|0;
   $17 = $16 << 1;
   $18 = ($15>>>0)>($17>>>0);
   if (!($18)) {
    $newp$0 = $p;
    return ($newp$0|0);
   }
  }
  $newp$0 = 0;
  return ($newp$0|0);
 }
 $19 = ($2>>>0)<($nb>>>0);
 if (!($19)) {
  $20 = (($2) - ($nb))|0;
  $21 = ($20>>>0)>(15);
  if (!($21)) {
   $newp$0 = $p;
   return ($newp$0|0);
  }
  $22 = (($p) + ($nb)|0);
  $23 = $1 & 1;
  $24 = $23 | $nb;
  $25 = $24 | 2;
  HEAP32[$0>>2] = $25;
  $$sum23 = (($nb) + 4)|0;
  $26 = (($p) + ($$sum23)|0);
  $27 = $20 | 3;
  HEAP32[$26>>2] = $27;
  $28 = HEAP32[$7>>2]|0;
  $29 = $28 | 1;
  HEAP32[$7>>2] = $29;
  _dispose_chunk($22,$20);
  $newp$0 = $p;
  return ($newp$0|0);
 }
 $30 = HEAP32[(4376)>>2]|0;
 $31 = ($3|0)==($30|0);
 if ($31) {
  $32 = HEAP32[(4364)>>2]|0;
  $33 = (($32) + ($2))|0;
  $34 = ($33>>>0)>($nb>>>0);
  if (!($34)) {
   $newp$0 = 0;
   return ($newp$0|0);
  }
  $35 = (($33) - ($nb))|0;
  $36 = (($p) + ($nb)|0);
  $37 = $1 & 1;
  $38 = $37 | $nb;
  $39 = $38 | 2;
  HEAP32[$0>>2] = $39;
  $$sum22 = (($nb) + 4)|0;
  $40 = (($p) + ($$sum22)|0);
  $41 = $35 | 1;
  HEAP32[$40>>2] = $41;
  HEAP32[(4376)>>2] = $36;
  HEAP32[(4364)>>2] = $35;
  $newp$0 = $p;
  return ($newp$0|0);
 }
 $42 = HEAP32[(4372)>>2]|0;
 $43 = ($3|0)==($42|0);
 if ($43) {
  $44 = HEAP32[(4360)>>2]|0;
  $45 = (($44) + ($2))|0;
  $46 = ($45>>>0)<($nb>>>0);
  if ($46) {
   $newp$0 = 0;
   return ($newp$0|0);
  }
  $47 = (($45) - ($nb))|0;
  $48 = ($47>>>0)>(15);
  if ($48) {
   $49 = (($p) + ($nb)|0);
   $50 = (($p) + ($45)|0);
   $51 = $1 & 1;
   $52 = $51 | $nb;
   $53 = $52 | 2;
   HEAP32[$0>>2] = $53;
   $$sum19 = (($nb) + 4)|0;
   $54 = (($p) + ($$sum19)|0);
   $55 = $47 | 1;
   HEAP32[$54>>2] = $55;
   HEAP32[$50>>2] = $47;
   $$sum20 = (($45) + 4)|0;
   $56 = (($p) + ($$sum20)|0);
   $57 = HEAP32[$56>>2]|0;
   $58 = $57 & -2;
   HEAP32[$56>>2] = $58;
   $storemerge = $49;$storemerge21 = $47;
  } else {
   $59 = $1 & 1;
   $60 = $59 | $45;
   $61 = $60 | 2;
   HEAP32[$0>>2] = $61;
   $$sum17 = (($45) + 4)|0;
   $62 = (($p) + ($$sum17)|0);
   $63 = HEAP32[$62>>2]|0;
   $64 = $63 | 1;
   HEAP32[$62>>2] = $64;
   $storemerge = 0;$storemerge21 = 0;
  }
  HEAP32[(4360)>>2] = $storemerge21;
  HEAP32[(4372)>>2] = $storemerge;
  $newp$0 = $p;
  return ($newp$0|0);
 }
 $65 = $8 & 2;
 $66 = ($65|0)==(0);
 if (!($66)) {
  $newp$0 = 0;
  return ($newp$0|0);
 }
 $67 = $8 & -8;
 $68 = (($67) + ($2))|0;
 $69 = ($68>>>0)<($nb>>>0);
 if ($69) {
  $newp$0 = 0;
  return ($newp$0|0);
 }
 $70 = (($68) - ($nb))|0;
 $71 = $8 >>> 3;
 $72 = ($8>>>0)<(256);
 do {
  if ($72) {
   $$sum15 = (($2) + 8)|0;
   $73 = (($p) + ($$sum15)|0);
   $74 = HEAP32[$73>>2]|0;
   $$sum16 = (($2) + 12)|0;
   $75 = (($p) + ($$sum16)|0);
   $76 = HEAP32[$75>>2]|0;
   $77 = $71 << 1;
   $78 = (4392 + ($77<<2)|0);
   $79 = ($74|0)==($78|0);
   if (!($79)) {
    $80 = ($74>>>0)<($4>>>0);
    if ($80) {
     _abort();
     // unreachable;
    }
    $81 = ((($74)) + 12|0);
    $82 = HEAP32[$81>>2]|0;
    $83 = ($82|0)==($3|0);
    if (!($83)) {
     _abort();
     // unreachable;
    }
   }
   $84 = ($76|0)==($74|0);
   if ($84) {
    $85 = 1 << $71;
    $86 = $85 ^ -1;
    $87 = HEAP32[4352>>2]|0;
    $88 = $87 & $86;
    HEAP32[4352>>2] = $88;
    break;
   }
   $89 = ($76|0)==($78|0);
   if ($89) {
    $$pre = ((($76)) + 8|0);
    $$pre$phiZ2D = $$pre;
   } else {
    $90 = ($76>>>0)<($4>>>0);
    if ($90) {
     _abort();
     // unreachable;
    }
    $91 = ((($76)) + 8|0);
    $92 = HEAP32[$91>>2]|0;
    $93 = ($92|0)==($3|0);
    if ($93) {
     $$pre$phiZ2D = $91;
    } else {
     _abort();
     // unreachable;
    }
   }
   $94 = ((($74)) + 12|0);
   HEAP32[$94>>2] = $76;
   HEAP32[$$pre$phiZ2D>>2] = $74;
  } else {
   $$sum = (($2) + 24)|0;
   $95 = (($p) + ($$sum)|0);
   $96 = HEAP32[$95>>2]|0;
   $$sum2 = (($2) + 12)|0;
   $97 = (($p) + ($$sum2)|0);
   $98 = HEAP32[$97>>2]|0;
   $99 = ($98|0)==($3|0);
   do {
    if ($99) {
     $$sum4 = (($2) + 20)|0;
     $109 = (($p) + ($$sum4)|0);
     $110 = HEAP32[$109>>2]|0;
     $111 = ($110|0)==(0|0);
     if ($111) {
      $$sum3 = (($2) + 16)|0;
      $112 = (($p) + ($$sum3)|0);
      $113 = HEAP32[$112>>2]|0;
      $114 = ($113|0)==(0|0);
      if ($114) {
       $R$1 = 0;
       break;
      } else {
       $R$0 = $113;$RP$0 = $112;
      }
     } else {
      $R$0 = $110;$RP$0 = $109;
     }
     while(1) {
      $115 = ((($R$0)) + 20|0);
      $116 = HEAP32[$115>>2]|0;
      $117 = ($116|0)==(0|0);
      if (!($117)) {
       $R$0 = $116;$RP$0 = $115;
       continue;
      }
      $118 = ((($R$0)) + 16|0);
      $119 = HEAP32[$118>>2]|0;
      $120 = ($119|0)==(0|0);
      if ($120) {
       $R$0$lcssa = $R$0;$RP$0$lcssa = $RP$0;
       break;
      } else {
       $R$0 = $119;$RP$0 = $118;
      }
     }
     $121 = ($RP$0$lcssa>>>0)<($4>>>0);
     if ($121) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$RP$0$lcssa>>2] = 0;
      $R$1 = $R$0$lcssa;
      break;
     }
    } else {
     $$sum14 = (($2) + 8)|0;
     $100 = (($p) + ($$sum14)|0);
     $101 = HEAP32[$100>>2]|0;
     $102 = ($101>>>0)<($4>>>0);
     if ($102) {
      _abort();
      // unreachable;
     }
     $103 = ((($101)) + 12|0);
     $104 = HEAP32[$103>>2]|0;
     $105 = ($104|0)==($3|0);
     if (!($105)) {
      _abort();
      // unreachable;
     }
     $106 = ((($98)) + 8|0);
     $107 = HEAP32[$106>>2]|0;
     $108 = ($107|0)==($3|0);
     if ($108) {
      HEAP32[$103>>2] = $98;
      HEAP32[$106>>2] = $101;
      $R$1 = $98;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $122 = ($96|0)==(0|0);
   if (!($122)) {
    $$sum11 = (($2) + 28)|0;
    $123 = (($p) + ($$sum11)|0);
    $124 = HEAP32[$123>>2]|0;
    $125 = (4656 + ($124<<2)|0);
    $126 = HEAP32[$125>>2]|0;
    $127 = ($3|0)==($126|0);
    if ($127) {
     HEAP32[$125>>2] = $R$1;
     $cond = ($R$1|0)==(0|0);
     if ($cond) {
      $128 = 1 << $124;
      $129 = $128 ^ -1;
      $130 = HEAP32[(4356)>>2]|0;
      $131 = $130 & $129;
      HEAP32[(4356)>>2] = $131;
      break;
     }
    } else {
     $132 = HEAP32[(4368)>>2]|0;
     $133 = ($96>>>0)<($132>>>0);
     if ($133) {
      _abort();
      // unreachable;
     }
     $134 = ((($96)) + 16|0);
     $135 = HEAP32[$134>>2]|0;
     $136 = ($135|0)==($3|0);
     if ($136) {
      HEAP32[$134>>2] = $R$1;
     } else {
      $137 = ((($96)) + 20|0);
      HEAP32[$137>>2] = $R$1;
     }
     $138 = ($R$1|0)==(0|0);
     if ($138) {
      break;
     }
    }
    $139 = HEAP32[(4368)>>2]|0;
    $140 = ($R$1>>>0)<($139>>>0);
    if ($140) {
     _abort();
     // unreachable;
    }
    $141 = ((($R$1)) + 24|0);
    HEAP32[$141>>2] = $96;
    $$sum12 = (($2) + 16)|0;
    $142 = (($p) + ($$sum12)|0);
    $143 = HEAP32[$142>>2]|0;
    $144 = ($143|0)==(0|0);
    do {
     if (!($144)) {
      $145 = ($143>>>0)<($139>>>0);
      if ($145) {
       _abort();
       // unreachable;
      } else {
       $146 = ((($R$1)) + 16|0);
       HEAP32[$146>>2] = $143;
       $147 = ((($143)) + 24|0);
       HEAP32[$147>>2] = $R$1;
       break;
      }
     }
    } while(0);
    $$sum13 = (($2) + 20)|0;
    $148 = (($p) + ($$sum13)|0);
    $149 = HEAP32[$148>>2]|0;
    $150 = ($149|0)==(0|0);
    if (!($150)) {
     $151 = HEAP32[(4368)>>2]|0;
     $152 = ($149>>>0)<($151>>>0);
     if ($152) {
      _abort();
      // unreachable;
     } else {
      $153 = ((($R$1)) + 20|0);
      HEAP32[$153>>2] = $149;
      $154 = ((($149)) + 24|0);
      HEAP32[$154>>2] = $R$1;
      break;
     }
    }
   }
  }
 } while(0);
 $155 = ($70>>>0)<(16);
 if ($155) {
  $156 = $1 & 1;
  $157 = $68 | $156;
  $158 = $157 | 2;
  HEAP32[$0>>2] = $158;
  $$sum910 = $68 | 4;
  $159 = (($p) + ($$sum910)|0);
  $160 = HEAP32[$159>>2]|0;
  $161 = $160 | 1;
  HEAP32[$159>>2] = $161;
  $newp$0 = $p;
  return ($newp$0|0);
 } else {
  $162 = (($p) + ($nb)|0);
  $163 = $1 & 1;
  $164 = $163 | $nb;
  $165 = $164 | 2;
  HEAP32[$0>>2] = $165;
  $$sum5 = (($nb) + 4)|0;
  $166 = (($p) + ($$sum5)|0);
  $167 = $70 | 3;
  HEAP32[$166>>2] = $167;
  $$sum78 = $68 | 4;
  $168 = (($p) + ($$sum78)|0);
  $169 = HEAP32[$168>>2]|0;
  $170 = $169 | 1;
  HEAP32[$168>>2] = $170;
  _dispose_chunk($162,$70);
  $newp$0 = $p;
  return ($newp$0|0);
 }
 return (0)|0;
}
function _dispose_chunk($p,$psize) {
 $p = $p|0;
 $psize = $psize|0;
 var $$0 = 0, $$02 = 0, $$1 = 0, $$lcssa = 0, $$pre = 0, $$pre$phi50Z2D = 0, $$pre$phi52Z2D = 0, $$pre$phiZ2D = 0, $$pre48 = 0, $$pre49 = 0, $$pre51 = 0, $$sum = 0, $$sum1 = 0, $$sum10 = 0, $$sum11 = 0, $$sum12 = 0, $$sum13 = 0, $$sum14 = 0, $$sum16 = 0, $$sum17 = 0;
 var $$sum18 = 0, $$sum19 = 0, $$sum2 = 0, $$sum20 = 0, $$sum21 = 0, $$sum22 = 0, $$sum23 = 0, $$sum24 = 0, $$sum25 = 0, $$sum3 = 0, $$sum4 = 0, $$sum5 = 0, $$sum7 = 0, $$sum8 = 0, $$sum9 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0;
 var $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0;
 var $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0;
 var $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0;
 var $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0;
 var $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0;
 var $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0;
 var $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0;
 var $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0;
 var $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0;
 var $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0;
 var $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $F16$0 = 0, $I19$0 = 0, $K20$043 = 0, $R$0 = 0, $R$0$lcssa = 0, $R$1 = 0, $R7$0 = 0, $R7$0$lcssa = 0, $R7$1 = 0, $RP$0 = 0, $RP$0$lcssa = 0, $RP9$0 = 0, $RP9$0$lcssa = 0, $T$0$lcssa = 0, $T$042 = 0, $T$042$lcssa = 0, $cond = 0;
 var $cond39 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($p) + ($psize)|0);
 $1 = ((($p)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = $2 & 1;
 $4 = ($3|0)==(0);
 do {
  if ($4) {
   $5 = HEAP32[$p>>2]|0;
   $6 = $2 & 3;
   $7 = ($6|0)==(0);
   if ($7) {
    return;
   }
   $8 = (0 - ($5))|0;
   $9 = (($p) + ($8)|0);
   $10 = (($5) + ($psize))|0;
   $11 = HEAP32[(4368)>>2]|0;
   $12 = ($9>>>0)<($11>>>0);
   if ($12) {
    _abort();
    // unreachable;
   }
   $13 = HEAP32[(4372)>>2]|0;
   $14 = ($9|0)==($13|0);
   if ($14) {
    $$sum = (($psize) + 4)|0;
    $99 = (($p) + ($$sum)|0);
    $100 = HEAP32[$99>>2]|0;
    $101 = $100 & 3;
    $102 = ($101|0)==(3);
    if (!($102)) {
     $$0 = $9;$$02 = $10;
     break;
    }
    HEAP32[(4360)>>2] = $10;
    $103 = $100 & -2;
    HEAP32[$99>>2] = $103;
    $104 = $10 | 1;
    $$sum14 = (4 - ($5))|0;
    $105 = (($p) + ($$sum14)|0);
    HEAP32[$105>>2] = $104;
    HEAP32[$0>>2] = $10;
    return;
   }
   $15 = $5 >>> 3;
   $16 = ($5>>>0)<(256);
   if ($16) {
    $$sum24 = (8 - ($5))|0;
    $17 = (($p) + ($$sum24)|0);
    $18 = HEAP32[$17>>2]|0;
    $$sum25 = (12 - ($5))|0;
    $19 = (($p) + ($$sum25)|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = $15 << 1;
    $22 = (4392 + ($21<<2)|0);
    $23 = ($18|0)==($22|0);
    if (!($23)) {
     $24 = ($18>>>0)<($11>>>0);
     if ($24) {
      _abort();
      // unreachable;
     }
     $25 = ((($18)) + 12|0);
     $26 = HEAP32[$25>>2]|0;
     $27 = ($26|0)==($9|0);
     if (!($27)) {
      _abort();
      // unreachable;
     }
    }
    $28 = ($20|0)==($18|0);
    if ($28) {
     $29 = 1 << $15;
     $30 = $29 ^ -1;
     $31 = HEAP32[4352>>2]|0;
     $32 = $31 & $30;
     HEAP32[4352>>2] = $32;
     $$0 = $9;$$02 = $10;
     break;
    }
    $33 = ($20|0)==($22|0);
    if ($33) {
     $$pre51 = ((($20)) + 8|0);
     $$pre$phi52Z2D = $$pre51;
    } else {
     $34 = ($20>>>0)<($11>>>0);
     if ($34) {
      _abort();
      // unreachable;
     }
     $35 = ((($20)) + 8|0);
     $36 = HEAP32[$35>>2]|0;
     $37 = ($36|0)==($9|0);
     if ($37) {
      $$pre$phi52Z2D = $35;
     } else {
      _abort();
      // unreachable;
     }
    }
    $38 = ((($18)) + 12|0);
    HEAP32[$38>>2] = $20;
    HEAP32[$$pre$phi52Z2D>>2] = $18;
    $$0 = $9;$$02 = $10;
    break;
   }
   $$sum16 = (24 - ($5))|0;
   $39 = (($p) + ($$sum16)|0);
   $40 = HEAP32[$39>>2]|0;
   $$sum17 = (12 - ($5))|0;
   $41 = (($p) + ($$sum17)|0);
   $42 = HEAP32[$41>>2]|0;
   $43 = ($42|0)==($9|0);
   do {
    if ($43) {
     $$sum18 = (16 - ($5))|0;
     $$sum19 = (($$sum18) + 4)|0;
     $53 = (($p) + ($$sum19)|0);
     $54 = HEAP32[$53>>2]|0;
     $55 = ($54|0)==(0|0);
     if ($55) {
      $56 = (($p) + ($$sum18)|0);
      $57 = HEAP32[$56>>2]|0;
      $58 = ($57|0)==(0|0);
      if ($58) {
       $R$1 = 0;
       break;
      } else {
       $R$0 = $57;$RP$0 = $56;
      }
     } else {
      $R$0 = $54;$RP$0 = $53;
     }
     while(1) {
      $59 = ((($R$0)) + 20|0);
      $60 = HEAP32[$59>>2]|0;
      $61 = ($60|0)==(0|0);
      if (!($61)) {
       $R$0 = $60;$RP$0 = $59;
       continue;
      }
      $62 = ((($R$0)) + 16|0);
      $63 = HEAP32[$62>>2]|0;
      $64 = ($63|0)==(0|0);
      if ($64) {
       $R$0$lcssa = $R$0;$RP$0$lcssa = $RP$0;
       break;
      } else {
       $R$0 = $63;$RP$0 = $62;
      }
     }
     $65 = ($RP$0$lcssa>>>0)<($11>>>0);
     if ($65) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$RP$0$lcssa>>2] = 0;
      $R$1 = $R$0$lcssa;
      break;
     }
    } else {
     $$sum23 = (8 - ($5))|0;
     $44 = (($p) + ($$sum23)|0);
     $45 = HEAP32[$44>>2]|0;
     $46 = ($45>>>0)<($11>>>0);
     if ($46) {
      _abort();
      // unreachable;
     }
     $47 = ((($45)) + 12|0);
     $48 = HEAP32[$47>>2]|0;
     $49 = ($48|0)==($9|0);
     if (!($49)) {
      _abort();
      // unreachable;
     }
     $50 = ((($42)) + 8|0);
     $51 = HEAP32[$50>>2]|0;
     $52 = ($51|0)==($9|0);
     if ($52) {
      HEAP32[$47>>2] = $42;
      HEAP32[$50>>2] = $45;
      $R$1 = $42;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $66 = ($40|0)==(0|0);
   if ($66) {
    $$0 = $9;$$02 = $10;
   } else {
    $$sum20 = (28 - ($5))|0;
    $67 = (($p) + ($$sum20)|0);
    $68 = HEAP32[$67>>2]|0;
    $69 = (4656 + ($68<<2)|0);
    $70 = HEAP32[$69>>2]|0;
    $71 = ($9|0)==($70|0);
    if ($71) {
     HEAP32[$69>>2] = $R$1;
     $cond = ($R$1|0)==(0|0);
     if ($cond) {
      $72 = 1 << $68;
      $73 = $72 ^ -1;
      $74 = HEAP32[(4356)>>2]|0;
      $75 = $74 & $73;
      HEAP32[(4356)>>2] = $75;
      $$0 = $9;$$02 = $10;
      break;
     }
    } else {
     $76 = HEAP32[(4368)>>2]|0;
     $77 = ($40>>>0)<($76>>>0);
     if ($77) {
      _abort();
      // unreachable;
     }
     $78 = ((($40)) + 16|0);
     $79 = HEAP32[$78>>2]|0;
     $80 = ($79|0)==($9|0);
     if ($80) {
      HEAP32[$78>>2] = $R$1;
     } else {
      $81 = ((($40)) + 20|0);
      HEAP32[$81>>2] = $R$1;
     }
     $82 = ($R$1|0)==(0|0);
     if ($82) {
      $$0 = $9;$$02 = $10;
      break;
     }
    }
    $83 = HEAP32[(4368)>>2]|0;
    $84 = ($R$1>>>0)<($83>>>0);
    if ($84) {
     _abort();
     // unreachable;
    }
    $85 = ((($R$1)) + 24|0);
    HEAP32[$85>>2] = $40;
    $$sum21 = (16 - ($5))|0;
    $86 = (($p) + ($$sum21)|0);
    $87 = HEAP32[$86>>2]|0;
    $88 = ($87|0)==(0|0);
    do {
     if (!($88)) {
      $89 = ($87>>>0)<($83>>>0);
      if ($89) {
       _abort();
       // unreachable;
      } else {
       $90 = ((($R$1)) + 16|0);
       HEAP32[$90>>2] = $87;
       $91 = ((($87)) + 24|0);
       HEAP32[$91>>2] = $R$1;
       break;
      }
     }
    } while(0);
    $$sum22 = (($$sum21) + 4)|0;
    $92 = (($p) + ($$sum22)|0);
    $93 = HEAP32[$92>>2]|0;
    $94 = ($93|0)==(0|0);
    if ($94) {
     $$0 = $9;$$02 = $10;
    } else {
     $95 = HEAP32[(4368)>>2]|0;
     $96 = ($93>>>0)<($95>>>0);
     if ($96) {
      _abort();
      // unreachable;
     } else {
      $97 = ((($R$1)) + 20|0);
      HEAP32[$97>>2] = $93;
      $98 = ((($93)) + 24|0);
      HEAP32[$98>>2] = $R$1;
      $$0 = $9;$$02 = $10;
      break;
     }
    }
   }
  } else {
   $$0 = $p;$$02 = $psize;
  }
 } while(0);
 $106 = HEAP32[(4368)>>2]|0;
 $107 = ($0>>>0)<($106>>>0);
 if ($107) {
  _abort();
  // unreachable;
 }
 $$sum1 = (($psize) + 4)|0;
 $108 = (($p) + ($$sum1)|0);
 $109 = HEAP32[$108>>2]|0;
 $110 = $109 & 2;
 $111 = ($110|0)==(0);
 if ($111) {
  $112 = HEAP32[(4376)>>2]|0;
  $113 = ($0|0)==($112|0);
  if ($113) {
   $114 = HEAP32[(4364)>>2]|0;
   $115 = (($114) + ($$02))|0;
   HEAP32[(4364)>>2] = $115;
   HEAP32[(4376)>>2] = $$0;
   $116 = $115 | 1;
   $117 = ((($$0)) + 4|0);
   HEAP32[$117>>2] = $116;
   $118 = HEAP32[(4372)>>2]|0;
   $119 = ($$0|0)==($118|0);
   if (!($119)) {
    return;
   }
   HEAP32[(4372)>>2] = 0;
   HEAP32[(4360)>>2] = 0;
   return;
  }
  $120 = HEAP32[(4372)>>2]|0;
  $121 = ($0|0)==($120|0);
  if ($121) {
   $122 = HEAP32[(4360)>>2]|0;
   $123 = (($122) + ($$02))|0;
   HEAP32[(4360)>>2] = $123;
   HEAP32[(4372)>>2] = $$0;
   $124 = $123 | 1;
   $125 = ((($$0)) + 4|0);
   HEAP32[$125>>2] = $124;
   $126 = (($$0) + ($123)|0);
   HEAP32[$126>>2] = $123;
   return;
  }
  $127 = $109 & -8;
  $128 = (($127) + ($$02))|0;
  $129 = $109 >>> 3;
  $130 = ($109>>>0)<(256);
  do {
   if ($130) {
    $$sum12 = (($psize) + 8)|0;
    $131 = (($p) + ($$sum12)|0);
    $132 = HEAP32[$131>>2]|0;
    $$sum13 = (($psize) + 12)|0;
    $133 = (($p) + ($$sum13)|0);
    $134 = HEAP32[$133>>2]|0;
    $135 = $129 << 1;
    $136 = (4392 + ($135<<2)|0);
    $137 = ($132|0)==($136|0);
    if (!($137)) {
     $138 = ($132>>>0)<($106>>>0);
     if ($138) {
      _abort();
      // unreachable;
     }
     $139 = ((($132)) + 12|0);
     $140 = HEAP32[$139>>2]|0;
     $141 = ($140|0)==($0|0);
     if (!($141)) {
      _abort();
      // unreachable;
     }
    }
    $142 = ($134|0)==($132|0);
    if ($142) {
     $143 = 1 << $129;
     $144 = $143 ^ -1;
     $145 = HEAP32[4352>>2]|0;
     $146 = $145 & $144;
     HEAP32[4352>>2] = $146;
     break;
    }
    $147 = ($134|0)==($136|0);
    if ($147) {
     $$pre49 = ((($134)) + 8|0);
     $$pre$phi50Z2D = $$pre49;
    } else {
     $148 = ($134>>>0)<($106>>>0);
     if ($148) {
      _abort();
      // unreachable;
     }
     $149 = ((($134)) + 8|0);
     $150 = HEAP32[$149>>2]|0;
     $151 = ($150|0)==($0|0);
     if ($151) {
      $$pre$phi50Z2D = $149;
     } else {
      _abort();
      // unreachable;
     }
    }
    $152 = ((($132)) + 12|0);
    HEAP32[$152>>2] = $134;
    HEAP32[$$pre$phi50Z2D>>2] = $132;
   } else {
    $$sum2 = (($psize) + 24)|0;
    $153 = (($p) + ($$sum2)|0);
    $154 = HEAP32[$153>>2]|0;
    $$sum3 = (($psize) + 12)|0;
    $155 = (($p) + ($$sum3)|0);
    $156 = HEAP32[$155>>2]|0;
    $157 = ($156|0)==($0|0);
    do {
     if ($157) {
      $$sum5 = (($psize) + 20)|0;
      $167 = (($p) + ($$sum5)|0);
      $168 = HEAP32[$167>>2]|0;
      $169 = ($168|0)==(0|0);
      if ($169) {
       $$sum4 = (($psize) + 16)|0;
       $170 = (($p) + ($$sum4)|0);
       $171 = HEAP32[$170>>2]|0;
       $172 = ($171|0)==(0|0);
       if ($172) {
        $R7$1 = 0;
        break;
       } else {
        $R7$0 = $171;$RP9$0 = $170;
       }
      } else {
       $R7$0 = $168;$RP9$0 = $167;
      }
      while(1) {
       $173 = ((($R7$0)) + 20|0);
       $174 = HEAP32[$173>>2]|0;
       $175 = ($174|0)==(0|0);
       if (!($175)) {
        $R7$0 = $174;$RP9$0 = $173;
        continue;
       }
       $176 = ((($R7$0)) + 16|0);
       $177 = HEAP32[$176>>2]|0;
       $178 = ($177|0)==(0|0);
       if ($178) {
        $R7$0$lcssa = $R7$0;$RP9$0$lcssa = $RP9$0;
        break;
       } else {
        $R7$0 = $177;$RP9$0 = $176;
       }
      }
      $179 = ($RP9$0$lcssa>>>0)<($106>>>0);
      if ($179) {
       _abort();
       // unreachable;
      } else {
       HEAP32[$RP9$0$lcssa>>2] = 0;
       $R7$1 = $R7$0$lcssa;
       break;
      }
     } else {
      $$sum11 = (($psize) + 8)|0;
      $158 = (($p) + ($$sum11)|0);
      $159 = HEAP32[$158>>2]|0;
      $160 = ($159>>>0)<($106>>>0);
      if ($160) {
       _abort();
       // unreachable;
      }
      $161 = ((($159)) + 12|0);
      $162 = HEAP32[$161>>2]|0;
      $163 = ($162|0)==($0|0);
      if (!($163)) {
       _abort();
       // unreachable;
      }
      $164 = ((($156)) + 8|0);
      $165 = HEAP32[$164>>2]|0;
      $166 = ($165|0)==($0|0);
      if ($166) {
       HEAP32[$161>>2] = $156;
       HEAP32[$164>>2] = $159;
       $R7$1 = $156;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $180 = ($154|0)==(0|0);
    if (!($180)) {
     $$sum8 = (($psize) + 28)|0;
     $181 = (($p) + ($$sum8)|0);
     $182 = HEAP32[$181>>2]|0;
     $183 = (4656 + ($182<<2)|0);
     $184 = HEAP32[$183>>2]|0;
     $185 = ($0|0)==($184|0);
     if ($185) {
      HEAP32[$183>>2] = $R7$1;
      $cond39 = ($R7$1|0)==(0|0);
      if ($cond39) {
       $186 = 1 << $182;
       $187 = $186 ^ -1;
       $188 = HEAP32[(4356)>>2]|0;
       $189 = $188 & $187;
       HEAP32[(4356)>>2] = $189;
       break;
      }
     } else {
      $190 = HEAP32[(4368)>>2]|0;
      $191 = ($154>>>0)<($190>>>0);
      if ($191) {
       _abort();
       // unreachable;
      }
      $192 = ((($154)) + 16|0);
      $193 = HEAP32[$192>>2]|0;
      $194 = ($193|0)==($0|0);
      if ($194) {
       HEAP32[$192>>2] = $R7$1;
      } else {
       $195 = ((($154)) + 20|0);
       HEAP32[$195>>2] = $R7$1;
      }
      $196 = ($R7$1|0)==(0|0);
      if ($196) {
       break;
      }
     }
     $197 = HEAP32[(4368)>>2]|0;
     $198 = ($R7$1>>>0)<($197>>>0);
     if ($198) {
      _abort();
      // unreachable;
     }
     $199 = ((($R7$1)) + 24|0);
     HEAP32[$199>>2] = $154;
     $$sum9 = (($psize) + 16)|0;
     $200 = (($p) + ($$sum9)|0);
     $201 = HEAP32[$200>>2]|0;
     $202 = ($201|0)==(0|0);
     do {
      if (!($202)) {
       $203 = ($201>>>0)<($197>>>0);
       if ($203) {
        _abort();
        // unreachable;
       } else {
        $204 = ((($R7$1)) + 16|0);
        HEAP32[$204>>2] = $201;
        $205 = ((($201)) + 24|0);
        HEAP32[$205>>2] = $R7$1;
        break;
       }
      }
     } while(0);
     $$sum10 = (($psize) + 20)|0;
     $206 = (($p) + ($$sum10)|0);
     $207 = HEAP32[$206>>2]|0;
     $208 = ($207|0)==(0|0);
     if (!($208)) {
      $209 = HEAP32[(4368)>>2]|0;
      $210 = ($207>>>0)<($209>>>0);
      if ($210) {
       _abort();
       // unreachable;
      } else {
       $211 = ((($R7$1)) + 20|0);
       HEAP32[$211>>2] = $207;
       $212 = ((($207)) + 24|0);
       HEAP32[$212>>2] = $R7$1;
       break;
      }
     }
    }
   }
  } while(0);
  $213 = $128 | 1;
  $214 = ((($$0)) + 4|0);
  HEAP32[$214>>2] = $213;
  $215 = (($$0) + ($128)|0);
  HEAP32[$215>>2] = $128;
  $216 = HEAP32[(4372)>>2]|0;
  $217 = ($$0|0)==($216|0);
  if ($217) {
   HEAP32[(4360)>>2] = $128;
   return;
  } else {
   $$1 = $128;
  }
 } else {
  $218 = $109 & -2;
  HEAP32[$108>>2] = $218;
  $219 = $$02 | 1;
  $220 = ((($$0)) + 4|0);
  HEAP32[$220>>2] = $219;
  $221 = (($$0) + ($$02)|0);
  HEAP32[$221>>2] = $$02;
  $$1 = $$02;
 }
 $222 = $$1 >>> 3;
 $223 = ($$1>>>0)<(256);
 if ($223) {
  $224 = $222 << 1;
  $225 = (4392 + ($224<<2)|0);
  $226 = HEAP32[4352>>2]|0;
  $227 = 1 << $222;
  $228 = $226 & $227;
  $229 = ($228|0)==(0);
  if ($229) {
   $230 = $226 | $227;
   HEAP32[4352>>2] = $230;
   $$pre = (($224) + 2)|0;
   $$pre48 = (4392 + ($$pre<<2)|0);
   $$pre$phiZ2D = $$pre48;$F16$0 = $225;
  } else {
   $$sum7 = (($224) + 2)|0;
   $231 = (4392 + ($$sum7<<2)|0);
   $232 = HEAP32[$231>>2]|0;
   $233 = HEAP32[(4368)>>2]|0;
   $234 = ($232>>>0)<($233>>>0);
   if ($234) {
    _abort();
    // unreachable;
   } else {
    $$pre$phiZ2D = $231;$F16$0 = $232;
   }
  }
  HEAP32[$$pre$phiZ2D>>2] = $$0;
  $235 = ((($F16$0)) + 12|0);
  HEAP32[$235>>2] = $$0;
  $236 = ((($$0)) + 8|0);
  HEAP32[$236>>2] = $F16$0;
  $237 = ((($$0)) + 12|0);
  HEAP32[$237>>2] = $225;
  return;
 }
 $238 = $$1 >>> 8;
 $239 = ($238|0)==(0);
 if ($239) {
  $I19$0 = 0;
 } else {
  $240 = ($$1>>>0)>(16777215);
  if ($240) {
   $I19$0 = 31;
  } else {
   $241 = (($238) + 1048320)|0;
   $242 = $241 >>> 16;
   $243 = $242 & 8;
   $244 = $238 << $243;
   $245 = (($244) + 520192)|0;
   $246 = $245 >>> 16;
   $247 = $246 & 4;
   $248 = $247 | $243;
   $249 = $244 << $247;
   $250 = (($249) + 245760)|0;
   $251 = $250 >>> 16;
   $252 = $251 & 2;
   $253 = $248 | $252;
   $254 = (14 - ($253))|0;
   $255 = $249 << $252;
   $256 = $255 >>> 15;
   $257 = (($254) + ($256))|0;
   $258 = $257 << 1;
   $259 = (($257) + 7)|0;
   $260 = $$1 >>> $259;
   $261 = $260 & 1;
   $262 = $261 | $258;
   $I19$0 = $262;
  }
 }
 $263 = (4656 + ($I19$0<<2)|0);
 $264 = ((($$0)) + 28|0);
 HEAP32[$264>>2] = $I19$0;
 $265 = ((($$0)) + 16|0);
 $266 = ((($$0)) + 20|0);
 HEAP32[$266>>2] = 0;
 HEAP32[$265>>2] = 0;
 $267 = HEAP32[(4356)>>2]|0;
 $268 = 1 << $I19$0;
 $269 = $267 & $268;
 $270 = ($269|0)==(0);
 if ($270) {
  $271 = $267 | $268;
  HEAP32[(4356)>>2] = $271;
  HEAP32[$263>>2] = $$0;
  $272 = ((($$0)) + 24|0);
  HEAP32[$272>>2] = $263;
  $273 = ((($$0)) + 12|0);
  HEAP32[$273>>2] = $$0;
  $274 = ((($$0)) + 8|0);
  HEAP32[$274>>2] = $$0;
  return;
 }
 $275 = HEAP32[$263>>2]|0;
 $276 = ((($275)) + 4|0);
 $277 = HEAP32[$276>>2]|0;
 $278 = $277 & -8;
 $279 = ($278|0)==($$1|0);
 L191: do {
  if ($279) {
   $T$0$lcssa = $275;
  } else {
   $280 = ($I19$0|0)==(31);
   $281 = $I19$0 >>> 1;
   $282 = (25 - ($281))|0;
   $283 = $280 ? 0 : $282;
   $284 = $$1 << $283;
   $K20$043 = $284;$T$042 = $275;
   while(1) {
    $291 = $K20$043 >>> 31;
    $292 = (((($T$042)) + 16|0) + ($291<<2)|0);
    $287 = HEAP32[$292>>2]|0;
    $293 = ($287|0)==(0|0);
    if ($293) {
     $$lcssa = $292;$T$042$lcssa = $T$042;
     break;
    }
    $285 = $K20$043 << 1;
    $286 = ((($287)) + 4|0);
    $288 = HEAP32[$286>>2]|0;
    $289 = $288 & -8;
    $290 = ($289|0)==($$1|0);
    if ($290) {
     $T$0$lcssa = $287;
     break L191;
    } else {
     $K20$043 = $285;$T$042 = $287;
    }
   }
   $294 = HEAP32[(4368)>>2]|0;
   $295 = ($$lcssa>>>0)<($294>>>0);
   if ($295) {
    _abort();
    // unreachable;
   }
   HEAP32[$$lcssa>>2] = $$0;
   $296 = ((($$0)) + 24|0);
   HEAP32[$296>>2] = $T$042$lcssa;
   $297 = ((($$0)) + 12|0);
   HEAP32[$297>>2] = $$0;
   $298 = ((($$0)) + 8|0);
   HEAP32[$298>>2] = $$0;
   return;
  }
 } while(0);
 $299 = ((($T$0$lcssa)) + 8|0);
 $300 = HEAP32[$299>>2]|0;
 $301 = HEAP32[(4368)>>2]|0;
 $302 = ($300>>>0)>=($301>>>0);
 $not$ = ($T$0$lcssa>>>0)>=($301>>>0);
 $303 = $302 & $not$;
 if (!($303)) {
  _abort();
  // unreachable;
 }
 $304 = ((($300)) + 12|0);
 HEAP32[$304>>2] = $$0;
 HEAP32[$299>>2] = $$0;
 $305 = ((($$0)) + 8|0);
 HEAP32[$305>>2] = $300;
 $306 = ((($$0)) + 12|0);
 HEAP32[$306>>2] = $T$0$lcssa;
 $307 = ((($$0)) + 24|0);
 HEAP32[$307>>2] = 0;
 return;
}
function __ZNSt11logic_errorC2EPKc($this,$msg) {
 $this = $this|0;
 $msg = $msg|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (1896);
 $0 = ((($this)) + 4|0);
 __THREW__ = 0;
 invoke_vii(448,($0|0),($msg|0));
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $3 = ___cxa_find_matching_catch()|0;
  $4 = tempRet0;
  ___resumeException($3|0);
  // unreachable;
 } else {
  return;
 }
}
function __ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($this,$msg) {
 $this = $this|0;
 $msg = $msg|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (1920);
 $0 = ((($this)) + 4|0);
 $1 = HEAP8[$msg>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 $4 = ((($msg)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($msg)) + 1|0);
 $7 = $3 ? $6 : $5;
 __THREW__ = 0;
 invoke_vii(448,($0|0),($7|0));
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if ($9) {
  $10 = ___cxa_find_matching_catch()|0;
  $11 = tempRet0;
  ___resumeException($10|0);
  // unreachable;
 } else {
  return;
 }
}
function __ZNSt13runtime_errorC2EPKc($this,$msg) {
 $this = $this|0;
 $msg = $msg|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (1920);
 $0 = ((($this)) + 4|0);
 __THREW__ = 0;
 invoke_vii(448,($0|0),($msg|0));
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $3 = ___cxa_find_matching_catch()|0;
  $4 = tempRet0;
  ___resumeException($3|0);
  // unreachable;
 } else {
  return;
 }
}
function __ZNSt3__118__libcpp_refstringC2EPKc($this,$msg) {
 $this = $this|0;
 $msg = $msg|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strlen(($msg|0))|0);
 $1 = (($0) + 13)|0;
 $2 = (__Znwj($1)|0);
 HEAP32[$2>>2] = $0;
 $3 = ((($2)) + 4|0);
 HEAP32[$3>>2] = $0;
 $4 = ((($2)) + 8|0);
 HEAP32[$4>>2] = 0;
 $5 = ((($2)) + 12|0);
 $6 = (($0) + 1)|0;
 _memcpy(($5|0),($msg|0),($6|0))|0;
 HEAP32[$this>>2] = $5;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = 0;
 $0 = ((($this)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($this)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS4_($this,$__a) {
 $this = $this|0;
 $__a = $__a|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = 0;
 $0 = ((($this)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($this)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($this,$__str) {
 $this = $this|0;
 $__str = $__str|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$__str>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  ;HEAP32[$this>>2]=HEAP32[$__str>>2]|0;HEAP32[$this+4>>2]=HEAP32[$__str+4>>2]|0;HEAP32[$this+8>>2]=HEAP32[$__str+8>>2]|0;
 } else {
  $3 = ((($__str)) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = ((($__str)) + 4|0);
  $6 = HEAP32[$5>>2]|0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($this,$4,$6);
 }
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($this,$__s,$__sz) {
 $this = $this|0;
 $__s = $__s|0;
 $__sz = $__sz|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__sz>>>0)>(4294967279);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = ($__sz>>>0)<(11);
 if ($1) {
  $2 = $__sz << 1;
  $3 = $2&255;
  HEAP8[$this>>0] = $3;
  $4 = ((($this)) + 1|0);
  $__p$0 = $4;
 } else {
  $5 = (($__sz) + 16)|0;
  $6 = $5 & -16;
  $7 = (__Znwj($6)|0);
  $8 = ((($this)) + 8|0);
  HEAP32[$8>>2] = $7;
  $9 = $6 | 1;
  HEAP32[$this>>2] = $9;
  $10 = ((($this)) + 4|0);
  HEAP32[$10>>2] = $__sz;
  $__p$0 = $7;
 }
 _memcpy(($__p$0|0),($__s|0),($__sz|0))|0;
 $11 = (($__p$0) + ($__sz)|0);
 HEAP8[$11>>0] = 0;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7__allocEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ($this|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2Ejc($this,$__n,$__c) {
 $this = $this|0;
 $__n = $__n|0;
 $__c = $__c|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($this,$__n,$__c);
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($this,$__n,$__c) {
 $this = $this|0;
 $__n = $__n|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__n>>>0)>(4294967279);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = ($__n>>>0)<(11);
 if ($1) {
  $2 = $__n << 1;
  $3 = $2&255;
  HEAP8[$this>>0] = $3;
  $4 = ((($this)) + 1|0);
  $__p$0 = $4;
 } else {
  $5 = (($__n) + 16)|0;
  $6 = $5 & -16;
  $7 = (__Znwj($6)|0);
  $8 = ((($this)) + 8|0);
  HEAP32[$8>>2] = $7;
  $9 = $6 | 1;
  HEAP32[$this>>2] = $9;
  $10 = ((($this)) + 4|0);
  HEAP32[$10>>2] = $__n;
  $__p$0 = $7;
 }
 _memset(($__p$0|0),($__c|0),($__n|0))|0;
 $11 = (($__p$0) + ($__n)|0);
 HEAP8[$11>>0] = 0;
 return;
}
function __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4sizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $5 = $0&255;
  $6 = $5 >>> 1;
  $7 = $6;
 } else {
  $3 = ((($this)) + 4|0);
  $4 = HEAP32[$3>>2]|0;
  $7 = $4;
 }
 return ($7|0);
}
function __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4dataEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $5 = ((($this)) + 1|0);
  $6 = $5;
 } else {
  $3 = ((($this)) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  $6 = $4;
 }
 return ($6|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if (!($2)) {
  $3 = ((($this)) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  __ZdlPv($4);
 }
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($this,$__str) {
 $this = $this|0;
 $__str = $__str|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($this|0)==($__str|0);
 if (!($0)) {
  $1 = HEAP8[$__str>>0]|0;
  $2 = $1 & 1;
  $3 = ($2<<24>>24)==(0);
  $4 = ((($__str)) + 8|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = ((($__str)) + 1|0);
  $7 = $3 ? $6 : $5;
  $8 = ((($__str)) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = $1&255;
  $11 = $10 >>> 1;
  $12 = $3 ? $11 : $9;
  (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($this,$7,$12)|0);
 }
 return ($this|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strlen(($__s|0))|0);
 $1 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($this,$__s,$0)|0);
 return ($1|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE15__set_long_sizeEj($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 HEAP32[$0>>2] = $__s;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE19__get_short_pointerEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 1|0);
 return ($0|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE16__set_short_sizeEj($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__s << 1;
 $1 = $0&255;
 HEAP8[$this>>0] = $1;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $6 = 10;$9 = $0;
 } else {
  $3 = HEAP32[$this>>2]|0;
  $4 = $3 & -2;
  $phitmp$i = (($4) + -1)|0;
  $5 = $3&255;
  $6 = $phitmp$i;$9 = $5;
 }
 $7 = ($6>>>0)<($__n>>>0);
 $8 = $9 & 1;
 $10 = ($8<<24>>24)==(0);
 do {
  if ($7) {
   if ($10) {
    $24 = $9&255;
    $25 = $24 >>> 1;
    $27 = $25;
   } else {
    $22 = ((($this)) + 4|0);
    $23 = HEAP32[$22>>2]|0;
    $27 = $23;
   }
   $26 = (($__n) - ($6))|0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this,$6,$26,$27,0,$27,$__n,$__s);
  } else {
   if ($10) {
    $13 = ((($this)) + 1|0);
    $14 = $13;
   } else {
    $11 = ((($this)) + 8|0);
    $12 = HEAP32[$11>>2]|0;
    $14 = $12;
   }
   _memmove(($14|0),($__s|0),($__n|0))|0;
   $15 = (($14) + ($__n)|0);
   HEAP8[$15>>0] = 0;
   $16 = HEAP8[$this>>0]|0;
   $17 = $16 & 1;
   $18 = ($17<<24>>24)==(0);
   if ($18) {
    $20 = $__n << 1;
    $21 = $20&255;
    HEAP8[$this>>0] = $21;
    break;
   } else {
    $19 = ((($this)) + 4|0);
    HEAP32[$19>>2] = $__n;
    break;
   }
  }
 } while(0);
 return ($this|0);
}
function __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE8max_sizeEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -17;
}
function __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE8capacityEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $5 = 10;
 } else {
  $3 = HEAP32[$this>>2]|0;
  $4 = $3 & -2;
  $phitmp = (($4) + -1)|0;
  $5 = $phitmp;
 }
 return ($5|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($this,$__n,$__c) {
 $this = $this|0;
 $__n = $__n|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $5 = $0&255;
  $6 = $5 >>> 1;
  $7 = $6;
 } else {
  $3 = ((($this)) + 4|0);
  $4 = HEAP32[$3>>2]|0;
  $7 = $4;
 }
 $8 = ($7>>>0)<($__n>>>0);
 do {
  if ($8) {
   $9 = (($__n) - ($7))|0;
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEjc($this,$9,$__c)|0);
  } else {
   if ($2) {
    $14 = (((($this)) + 1|0) + ($__n)|0);
    HEAP8[$14>>0] = 0;
    $15 = $__n << 1;
    $16 = $15&255;
    HEAP8[$this>>0] = $16;
    break;
   } else {
    $10 = ((($this)) + 8|0);
    $11 = HEAP32[$10>>2]|0;
    $12 = (($11) + ($__n)|0);
    HEAP8[$12>>0] = 0;
    $13 = ((($this)) + 4|0);
    HEAP32[$13>>2] = $__n;
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEjc($this,$__n,$__c) {
 $this = $this|0;
 $__n = $__n|0;
 $__c = $__c|0;
 var $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__n|0)==(0);
 if (!($0)) {
  $1 = HEAP8[$this>>0]|0;
  $2 = $1 & 1;
  $3 = ($2<<24>>24)==(0);
  if ($3) {
   $16 = 10;$8 = $1;
  } else {
   $4 = HEAP32[$this>>2]|0;
   $5 = $4 & -2;
   $phitmp$i = (($5) + -1)|0;
   $6 = $4&255;
   $16 = $phitmp$i;$8 = $6;
  }
  $7 = $8 & 1;
  $9 = ($7<<24>>24)==(0);
  if ($9) {
   $12 = $8&255;
   $13 = $12 >>> 1;
   $15 = $13;
  } else {
   $10 = ((($this)) + 4|0);
   $11 = HEAP32[$10>>2]|0;
   $15 = $11;
  }
  $14 = (($16) - ($15))|0;
  $17 = ($14>>>0)<($__n>>>0);
  if ($17) {
   $18 = (($__n) - ($16))|0;
   $19 = (($18) + ($15))|0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this,$16,$19,$15,$15,0,0);
   $$pre = HEAP8[$this>>0]|0;
   $21 = $$pre;
  } else {
   $21 = $8;
  }
  $20 = $21 & 1;
  $22 = ($20<<24>>24)==(0);
  if ($22) {
   $25 = ((($this)) + 1|0);
   $27 = $25;
  } else {
   $23 = ((($this)) + 8|0);
   $24 = HEAP32[$23>>2]|0;
   $27 = $24;
  }
  $26 = (($27) + ($15)|0);
  _memset(($26|0),($__c|0),($__n|0))|0;
  $28 = (($15) + ($__n))|0;
  $29 = HEAP8[$this>>0]|0;
  $30 = $29 & 1;
  $31 = ($30<<24>>24)==(0);
  if ($31) {
   $33 = $28 << 1;
   $34 = $33&255;
   HEAP8[$this>>0] = $34;
  } else {
   $32 = ((($this)) + 4|0);
   HEAP32[$32>>2] = $28;
  }
  $35 = (($27) + ($28)|0);
  HEAP8[$35>>0] = 0;
 }
 return ($this|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($this,$__n,0);
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($this,$__res_arg) {
 $this = $this|0;
 $__res_arg = $__res_arg|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_data$0 = 0, $__new_data$1 = 0, $__now_long$0$off0 = 0, $__p$0 = 0, $__was_long$0$off0 = 0, $phitmp$i = 0;
 var $phitmp$i2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__res_arg>>>0)>(4294967279);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = HEAP8[$this>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $22 = 10;$8 = $1;
 } else {
  $4 = HEAP32[$this>>2]|0;
  $5 = $4 & -2;
  $phitmp$i = (($5) + -1)|0;
  $6 = $4&255;
  $22 = $phitmp$i;$8 = $6;
 }
 $7 = $8 & 1;
 $9 = ($7<<24>>24)==(0);
 if ($9) {
  $12 = $8&255;
  $13 = $12 >>> 1;
  $14 = $13;
 } else {
  $10 = ((($this)) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $14 = $11;
 }
 $15 = ($14>>>0)>($__res_arg>>>0);
 $16 = $15 ? $14 : $__res_arg;
 $17 = ($16>>>0)<(11);
 if ($17) {
  $20 = 10;
 } else {
  $18 = (($16) + 16)|0;
  $19 = $18 & -16;
  $phitmp$i2 = (($19) + -1)|0;
  $20 = $phitmp$i2;
 }
 $21 = ($20|0)==($22|0);
 L14: do {
  if (!($21)) {
   $23 = ($20|0)==(10);
   do {
    if ($23) {
     $24 = ((($this)) + 1|0);
     $25 = ((($this)) + 8|0);
     $26 = HEAP32[$25>>2]|0;
     $__new_data$1 = $24;$__now_long$0$off0 = 0;$__p$0 = $26;$__was_long$0$off0 = 1;
    } else {
     $27 = ($20>>>0)>($22>>>0);
     $28 = (($20) + 1)|0;
     if ($27) {
      $29 = (__Znwj($28)|0);
      $__new_data$0 = $29;
     } else {
      __THREW__ = 0;
      $30 = (invoke_ii(449,($28|0))|0);
      $31 = __THREW__; __THREW__ = 0;
      $32 = $31&1;
      if ($32) {
       $33 = ___cxa_find_matching_catch(0|0)|0;
       $34 = tempRet0;
       (___cxa_begin_catch(($33|0))|0);
       ___cxa_end_catch();
       break L14;
      } else {
       $__new_data$0 = $30;
      }
     }
     $35 = $8 & 1;
     $36 = ($35<<24>>24)==(0);
     if ($36) {
      $39 = ((($this)) + 1|0);
      $__new_data$1 = $__new_data$0;$__now_long$0$off0 = 1;$__p$0 = $39;$__was_long$0$off0 = 0;
      break;
     } else {
      $37 = ((($this)) + 8|0);
      $38 = HEAP32[$37>>2]|0;
      $__new_data$1 = $__new_data$0;$__now_long$0$off0 = 1;$__p$0 = $38;$__was_long$0$off0 = 1;
      break;
     }
    }
   } while(0);
   $40 = $8 & 1;
   $41 = ($40<<24>>24)==(0);
   if ($41) {
    $44 = $8&255;
    $45 = $44 >>> 1;
    $47 = $45;
   } else {
    $42 = ((($this)) + 4|0);
    $43 = HEAP32[$42>>2]|0;
    $47 = $43;
   }
   $46 = (($47) + 1)|0;
   _memcpy(($__new_data$1|0),($__p$0|0),($46|0))|0;
   if ($__was_long$0$off0) {
    __ZdlPv($__p$0);
   }
   if ($__now_long$0$off0) {
    $48 = (($20) + 1)|0;
    $49 = $48 | 1;
    HEAP32[$this>>2] = $49;
    $50 = ((($this)) + 4|0);
    HEAP32[$50>>2] = $14;
    $51 = ((($this)) + 8|0);
    HEAP32[$51>>2] = $__new_data$1;
    break;
   } else {
    $52 = $14 << 1;
    $53 = $52&255;
    HEAP8[$this>>0] = $53;
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE11__recommendEj($__s) {
 $__s = $__s|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__s>>>0)<(11);
 if ($0) {
  $3 = 10;
 } else {
  $1 = (($__s) + 16)|0;
  $2 = $1 & -16;
  $phitmp = (($2) + -1)|0;
  $3 = $phitmp;
 }
 return ($3|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE14__set_long_capEj($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__s | 1;
 HEAP32[$this>>2] = $0;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE18__set_long_pointerEPc($this,$__p) {
 $this = $this|0;
 $__p = $__p|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 HEAP32[$0>>2] = $__p;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strlen(($__s|0))|0);
 $1 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($this,$__s,$0)|0);
 return ($1|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$pn = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__cap$0 = 0, $__p$0 = 0, $__p$0$sum$pre$phiZZZ2D = 0, $__sz$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)!=(0);
 if ($2) {
  $5 = HEAP32[$this>>2]|0;
  $6 = $5 & -2;
  $7 = (($6) + -1)|0;
  $8 = ((($this)) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $__cap$0 = $7;$__sz$0 = $9;
 } else {
  $3 = $0&255;
  $4 = $3 >>> 1;
  $__cap$0 = 10;$__sz$0 = $4;
 }
 $10 = ($__sz$0|0)==($__cap$0|0);
 if ($10) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this,$__cap$0,1,$__cap$0,$__cap$0,0,0);
  $11 = HEAP8[$this>>0]|0;
  $12 = $11 & 1;
  $13 = ($12<<24>>24)==(0);
  if ($13) {
   label = 7;
  } else {
   label = 8;
  }
 } else {
  if ($2) {
   label = 8;
  } else {
   label = 7;
  }
 }
 if ((label|0) == 7) {
  $14 = ((($this)) + 1|0);
  $15 = $__sz$0 << 1;
  $16 = (($15) + 2)|0;
  $17 = $16&255;
  HEAP8[$this>>0] = $17;
  $$pre = (($__sz$0) + 1)|0;
  $$pn = $14;$__p$0$sum$pre$phiZZZ2D = $$pre;
 }
 else if ((label|0) == 8) {
  $18 = ((($this)) + 8|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = (($__sz$0) + 1)|0;
  $21 = ((($this)) + 4|0);
  HEAP32[$21>>2] = $20;
  $$pn = $19;$__p$0$sum$pre$phiZZZ2D = $20;
 }
 $__p$0 = (($$pn) + ($__sz$0)|0);
 HEAP8[$__p$0>>0] = $__c;
 $22 = (($$pn) + ($__p$0$sum$pre$phiZZZ2D)|0);
 HEAP8[$22>>0] = 0;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $15 = 10;$7 = $0;
 } else {
  $3 = HEAP32[$this>>2]|0;
  $4 = $3 & -2;
  $phitmp$i = (($4) + -1)|0;
  $5 = $3&255;
  $15 = $phitmp$i;$7 = $5;
 }
 $6 = $7 & 1;
 $8 = ($6<<24>>24)==(0);
 if ($8) {
  $11 = $7&255;
  $12 = $11 >>> 1;
  $14 = $12;
 } else {
  $9 = ((($this)) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $14 = $10;
 }
 $13 = (($15) - ($14))|0;
 $16 = ($13>>>0)<($__n>>>0);
 if ($16) {
  $33 = (($__n) - ($15))|0;
  $34 = (($33) + ($14))|0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this,$15,$34,$14,$14,0,$__n,$__s);
 } else {
  $17 = ($__n|0)==(0);
  if (!($17)) {
   $18 = $7 & 1;
   $19 = ($18<<24>>24)==(0);
   if ($19) {
    $22 = ((($this)) + 1|0);
    $24 = $22;
   } else {
    $20 = ((($this)) + 8|0);
    $21 = HEAP32[$20>>2]|0;
    $24 = $21;
   }
   $23 = (($24) + ($14)|0);
   _memcpy(($23|0),($__s|0),($__n|0))|0;
   $25 = (($14) + ($__n))|0;
   $26 = HEAP8[$this>>0]|0;
   $27 = $26 & 1;
   $28 = ($27<<24>>24)==(0);
   if ($28) {
    $30 = $25 << 1;
    $31 = $30&255;
    HEAP8[$this>>0] = $31;
   } else {
    $29 = ((($this)) + 4|0);
    HEAP32[$29>>2] = $25;
   }
   $32 = (($24) + ($25)|0);
   HEAP8[$32>>0] = 0;
  }
 }
 return ($this|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_del,$__n_add,$__p_new_stuff) {
 $this = $this|0;
 $__old_cap = $__old_cap|0;
 $__delta_cap = $__delta_cap|0;
 $__old_sz = $__old_sz|0;
 $__n_copy = $__n_copy|0;
 $__n_del = $__n_del|0;
 $__n_add = $__n_add|0;
 $__p_new_stuff = $__p_new_stuff|0;
 var $$sum = 0, $$sum1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (-18 - ($__old_cap))|0;
 $1 = ($0>>>0)<($__delta_cap>>>0);
 if ($1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $2 = HEAP8[$this>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = ((($this)) + 1|0);
  $20 = $7;
 } else {
  $5 = ((($this)) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $20 = $6;
 }
 $8 = ($__old_cap>>>0)<(2147483623);
 if ($8) {
  $9 = (($__delta_cap) + ($__old_cap))|0;
  $10 = $__old_cap << 1;
  $11 = ($9>>>0)<($10>>>0);
  $12 = $11 ? $10 : $9;
  $13 = ($12>>>0)<(11);
  $14 = (($12) + 16)|0;
  $15 = $14 & -16;
  $16 = $13 ? 11 : $15;
  $17 = $16;
 } else {
  $17 = -17;
 }
 $18 = (__Znwj($17)|0);
 $19 = ($__n_copy|0)==(0);
 if (!($19)) {
  _memcpy(($18|0),($20|0),($__n_copy|0))|0;
 }
 $21 = ($__n_add|0)==(0);
 if (!($21)) {
  $22 = (($18) + ($__n_copy)|0);
  _memcpy(($22|0),($__p_new_stuff|0),($__n_add|0))|0;
 }
 $23 = (($__old_sz) - ($__n_del))|0;
 $24 = ($23|0)==($__n_copy|0);
 if (!($24)) {
  $25 = (($23) - ($__n_copy))|0;
  $$sum = (($__n_add) + ($__n_copy))|0;
  $26 = (($18) + ($$sum)|0);
  $$sum1 = (($__n_del) + ($__n_copy))|0;
  $27 = (($20) + ($$sum1)|0);
  _memcpy(($26|0),($27|0),($25|0))|0;
 }
 $28 = ($__old_cap|0)==(10);
 if (!($28)) {
  __ZdlPv($20);
 }
 $29 = ((($this)) + 8|0);
 HEAP32[$29>>2] = $18;
 $30 = $17 | 1;
 HEAP32[$this>>2] = $30;
 $31 = (($23) + ($__n_add))|0;
 $32 = ((($this)) + 4|0);
 HEAP32[$32>>2] = $31;
 $33 = (($18) + ($31)|0);
 HEAP8[$33>>0] = 0;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_del,$__n_add) {
 $this = $this|0;
 $__old_cap = $__old_cap|0;
 $__delta_cap = $__delta_cap|0;
 $__old_sz = $__old_sz|0;
 $__n_copy = $__n_copy|0;
 $__n_del = $__n_del|0;
 $__n_add = $__n_add|0;
 var $$sum = 0, $$sum1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (-17 - ($__old_cap))|0;
 $1 = ($0>>>0)<($__delta_cap>>>0);
 if ($1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $2 = HEAP8[$this>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = ((($this)) + 1|0);
  $20 = $7;
 } else {
  $5 = ((($this)) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $20 = $6;
 }
 $8 = ($__old_cap>>>0)<(2147483623);
 if ($8) {
  $9 = (($__delta_cap) + ($__old_cap))|0;
  $10 = $__old_cap << 1;
  $11 = ($9>>>0)<($10>>>0);
  $12 = $11 ? $10 : $9;
  $13 = ($12>>>0)<(11);
  $14 = (($12) + 16)|0;
  $15 = $14 & -16;
  $16 = $13 ? 11 : $15;
  $17 = $16;
 } else {
  $17 = -17;
 }
 $18 = (__Znwj($17)|0);
 $19 = ($__n_copy|0)==(0);
 if (!($19)) {
  _memcpy(($18|0),($20|0),($__n_copy|0))|0;
 }
 $21 = (($__old_sz) - ($__n_del))|0;
 $22 = ($21|0)==($__n_copy|0);
 if (!($22)) {
  $23 = (($21) - ($__n_copy))|0;
  $$sum = (($__n_add) + ($__n_copy))|0;
  $24 = (($18) + ($$sum)|0);
  $$sum1 = (($__n_del) + ($__n_copy))|0;
  $25 = (($20) + ($$sum1)|0);
  _memcpy(($24|0),($25|0),($23|0))|0;
 }
 $26 = ($__old_cap|0)==(10);
 if (!($26)) {
  __ZdlPv($20);
 }
 $27 = ((($this)) + 8|0);
 HEAP32[$27>>2] = $18;
 $28 = $17 | 1;
 HEAP32[$this>>2] = $28;
 return;
}
function __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE13get_allocatorEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($this,$__s,$__sz) {
 $this = $this|0;
 $__s = $__s|0;
 $__sz = $__sz|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__sz>>>0)>(1073741807);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = ($__sz>>>0)<(2);
 if ($1) {
  $2 = $__sz << 1;
  $3 = $2&255;
  HEAP8[$this>>0] = $3;
  $4 = ((($this)) + 4|0);
  $__p$0 = $4;
 } else {
  $5 = (($__sz) + 4)|0;
  $6 = $5 & -4;
  $7 = $6 << 2;
  $8 = (__Znwj($7)|0);
  $9 = ((($this)) + 8|0);
  HEAP32[$9>>2] = $8;
  $10 = $6 | 1;
  HEAP32[$this>>2] = $10;
  $11 = ((($this)) + 4|0);
  HEAP32[$11>>2] = $__sz;
  $__p$0 = $8;
 }
 (_wmemcpy($__p$0,$__s,$__sz)|0);
 $12 = (($__p$0) + ($__sz<<2)|0);
 HEAP32[$12>>2] = 0;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($this,$__n,$__c) {
 $this = $this|0;
 $__n = $__n|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__n>>>0)>(1073741807);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = ($__n>>>0)<(2);
 if ($1) {
  $2 = $__n << 1;
  $3 = $2&255;
  HEAP8[$this>>0] = $3;
  $4 = ((($this)) + 4|0);
  $__p$0 = $4;
 } else {
  $5 = (($__n) + 4)|0;
  $6 = $5 & -4;
  $7 = $6 << 2;
  $8 = (__Znwj($7)|0);
  $9 = ((($this)) + 8|0);
  HEAP32[$9>>2] = $8;
  $10 = $6 | 1;
  HEAP32[$this>>2] = $10;
  $11 = ((($this)) + 4|0);
  HEAP32[$11>>2] = $__n;
  $__p$0 = $8;
 }
 (_wmemset($__p$0,$__c,$__n)|0);
 $12 = (($__p$0) + ($__n<<2)|0);
 HEAP32[$12>>2] = 0;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if (!($2)) {
  $3 = ((($this)) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  __ZdlPv($4);
 }
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_wcslen($__s)|0);
 $1 = (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj($this,$__s,$0)|0);
 return ($1|0);
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $6 = 1;$9 = $0;
 } else {
  $3 = HEAP32[$this>>2]|0;
  $4 = $3 & -2;
  $phitmp$i = (($4) + -1)|0;
  $5 = $3&255;
  $6 = $phitmp$i;$9 = $5;
 }
 $7 = ($6>>>0)<($__n>>>0);
 $8 = $9 & 1;
 $10 = ($8<<24>>24)==(0);
 do {
  if ($7) {
   if ($10) {
    $24 = $9&255;
    $25 = $24 >>> 1;
    $27 = $25;
   } else {
    $22 = ((($this)) + 4|0);
    $23 = HEAP32[$22>>2]|0;
    $27 = $23;
   }
   $26 = (($__n) - ($6))|0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw($this,$6,$26,$27,0,$27,$__n,$__s);
  } else {
   if ($10) {
    $13 = ((($this)) + 4|0);
    $14 = $13;
   } else {
    $11 = ((($this)) + 8|0);
    $12 = HEAP32[$11>>2]|0;
    $14 = $12;
   }
   (_wmemmove($14,$__s,$__n)|0);
   $15 = (($14) + ($__n<<2)|0);
   HEAP32[$15>>2] = 0;
   $16 = HEAP8[$this>>0]|0;
   $17 = $16 & 1;
   $18 = ($17<<24>>24)==(0);
   if ($18) {
    $20 = $__n << 1;
    $21 = $20&255;
    HEAP8[$this>>0] = $21;
    break;
   } else {
    $19 = ((($this)) + 4|0);
    HEAP32[$19>>2] = $__n;
    break;
   }
  }
 } while(0);
 return ($this|0);
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($this,$__res_arg) {
 $this = $this|0;
 $__res_arg = $__res_arg|0;
 var $$sink = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_data$1 = 0, $__now_long$0$off0 = 0, $__p$0 = 0, $__was_long$0$off0 = 0;
 var $phitmp$i = 0, $phitmp$i2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__res_arg>>>0)>(1073741807);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = HEAP8[$this>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $22 = 1;$8 = $1;
 } else {
  $4 = HEAP32[$this>>2]|0;
  $5 = $4 & -2;
  $phitmp$i = (($5) + -1)|0;
  $6 = $4&255;
  $22 = $phitmp$i;$8 = $6;
 }
 $7 = $8 & 1;
 $9 = ($7<<24>>24)==(0);
 if ($9) {
  $12 = $8&255;
  $13 = $12 >>> 1;
  $14 = $13;
 } else {
  $10 = ((($this)) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $14 = $11;
 }
 $15 = ($14>>>0)>($__res_arg>>>0);
 $16 = $15 ? $14 : $__res_arg;
 $17 = ($16>>>0)<(2);
 if ($17) {
  $20 = 1;
 } else {
  $18 = (($16) + 4)|0;
  $19 = $18 & -4;
  $phitmp$i2 = (($19) + -1)|0;
  $20 = $phitmp$i2;
 }
 $21 = ($20|0)==($22|0);
 L14: do {
  if (!($21)) {
   $23 = ($20|0)==(1);
   do {
    if ($23) {
     $24 = ((($this)) + 4|0);
     $25 = ((($this)) + 8|0);
     $26 = HEAP32[$25>>2]|0;
     $__new_data$1 = $24;$__now_long$0$off0 = 0;$__p$0 = $26;$__was_long$0$off0 = 1;
    } else {
     $27 = ($20>>>0)>($22>>>0);
     $28 = $20 << 2;
     $29 = (($28) + 4)|0;
     if ($27) {
      $30 = (__Znwj($29)|0);
      $$sink = $30;
     } else {
      __THREW__ = 0;
      $31 = (invoke_ii(449,($29|0))|0);
      $32 = __THREW__; __THREW__ = 0;
      $33 = $32&1;
      if ($33) {
       $34 = ___cxa_find_matching_catch(0|0)|0;
       $35 = tempRet0;
       (___cxa_begin_catch(($34|0))|0);
       ___cxa_end_catch();
       break L14;
      } else {
       $$sink = $31;
      }
     }
     $36 = $8 & 1;
     $37 = ($36<<24>>24)==(0);
     if ($37) {
      $40 = ((($this)) + 4|0);
      $__new_data$1 = $$sink;$__now_long$0$off0 = 1;$__p$0 = $40;$__was_long$0$off0 = 0;
      break;
     } else {
      $38 = ((($this)) + 8|0);
      $39 = HEAP32[$38>>2]|0;
      $__new_data$1 = $$sink;$__now_long$0$off0 = 1;$__p$0 = $39;$__was_long$0$off0 = 1;
      break;
     }
    }
   } while(0);
   $41 = $8 & 1;
   $42 = ($41<<24>>24)==(0);
   if ($42) {
    $45 = $8&255;
    $46 = $45 >>> 1;
    $48 = $46;
   } else {
    $43 = ((($this)) + 4|0);
    $44 = HEAP32[$43>>2]|0;
    $48 = $44;
   }
   $47 = (($48) + 1)|0;
   (_wmemcpy($__new_data$1,$__p$0,$47)|0);
   if ($__was_long$0$off0) {
    __ZdlPv($__p$0);
   }
   if ($__now_long$0$off0) {
    $49 = (($20) + 1)|0;
    $50 = $49 | 1;
    HEAP32[$this>>2] = $50;
    $51 = ((($this)) + 4|0);
    HEAP32[$51>>2] = $14;
    $52 = ((($this)) + 8|0);
    HEAP32[$52>>2] = $__new_data$1;
    break;
   } else {
    $53 = $14 << 1;
    $54 = $53&255;
    HEAP8[$this>>0] = $54;
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$pn = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__cap$0 = 0, $__p$0 = 0, $__p$0$sum$pre$phiZZZ2D = 0, $__sz$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)!=(0);
 if ($2) {
  $5 = HEAP32[$this>>2]|0;
  $6 = $5 & -2;
  $7 = (($6) + -1)|0;
  $8 = ((($this)) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $__cap$0 = $7;$__sz$0 = $9;
 } else {
  $3 = $0&255;
  $4 = $3 >>> 1;
  $__cap$0 = 1;$__sz$0 = $4;
 }
 $10 = ($__sz$0|0)==($__cap$0|0);
 if ($10) {
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this,$__cap$0,1,$__cap$0,$__cap$0,0,0);
  $11 = HEAP8[$this>>0]|0;
  $12 = $11 & 1;
  $13 = ($12<<24>>24)==(0);
  if ($13) {
   label = 7;
  } else {
   label = 8;
  }
 } else {
  if ($2) {
   label = 8;
  } else {
   label = 7;
  }
 }
 if ((label|0) == 7) {
  $14 = ((($this)) + 4|0);
  $15 = $__sz$0 << 1;
  $16 = (($15) + 2)|0;
  $17 = $16&255;
  HEAP8[$this>>0] = $17;
  $$pre = (($__sz$0) + 1)|0;
  $$pn = $14;$__p$0$sum$pre$phiZZZ2D = $$pre;
 }
 else if ((label|0) == 8) {
  $18 = ((($this)) + 8|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = (($__sz$0) + 1)|0;
  $21 = ((($this)) + 4|0);
  HEAP32[$21>>2] = $20;
  $$pn = $19;$__p$0$sum$pre$phiZZZ2D = $20;
 }
 $__p$0 = (($$pn) + ($__sz$0<<2)|0);
 HEAP32[$__p$0>>2] = $__c;
 $22 = (($$pn) + ($__p$0$sum$pre$phiZZZ2D<<2)|0);
 HEAP32[$22>>2] = 0;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_del,$__n_add,$__p_new_stuff) {
 $this = $this|0;
 $__old_cap = $__old_cap|0;
 $__delta_cap = $__delta_cap|0;
 $__old_sz = $__old_sz|0;
 $__n_copy = $__n_copy|0;
 $__n_del = $__n_del|0;
 $__n_add = $__n_add|0;
 $__p_new_stuff = $__p_new_stuff|0;
 var $$sum = 0, $$sum1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (1073741806 - ($__old_cap))|0;
 $1 = ($0>>>0)<($__delta_cap>>>0);
 if ($1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $2 = HEAP8[$this>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = ((($this)) + 4|0);
  $21 = $7;
 } else {
  $5 = ((($this)) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $21 = $6;
 }
 $8 = ($__old_cap>>>0)<(536870887);
 if ($8) {
  $9 = (($__delta_cap) + ($__old_cap))|0;
  $10 = $__old_cap << 1;
  $11 = ($9>>>0)<($10>>>0);
  $12 = $11 ? $10 : $9;
  $13 = ($12>>>0)<(2);
  $14 = (($12) + 4)|0;
  $15 = $14 & -4;
  $16 = $13 ? 2 : $15;
  $18 = $16;
 } else {
  $18 = 1073741807;
 }
 $17 = $18 << 2;
 $19 = (__Znwj($17)|0);
 $20 = ($__n_copy|0)==(0);
 if (!($20)) {
  (_wmemcpy($19,$21,$__n_copy)|0);
 }
 $22 = ($__n_add|0)==(0);
 if (!($22)) {
  $23 = (($19) + ($__n_copy<<2)|0);
  (_wmemcpy($23,$__p_new_stuff,$__n_add)|0);
 }
 $24 = (($__old_sz) - ($__n_del))|0;
 $25 = ($24|0)==($__n_copy|0);
 if (!($25)) {
  $26 = (($24) - ($__n_copy))|0;
  $$sum = (($__n_add) + ($__n_copy))|0;
  $27 = (($19) + ($$sum<<2)|0);
  $$sum1 = (($__n_del) + ($__n_copy))|0;
  $28 = (($21) + ($$sum1<<2)|0);
  (_wmemcpy($27,$28,$26)|0);
 }
 $29 = ($__old_cap|0)==(1);
 if (!($29)) {
  __ZdlPv($21);
 }
 $30 = ((($this)) + 8|0);
 HEAP32[$30>>2] = $19;
 $31 = $18 | 1;
 HEAP32[$this>>2] = $31;
 $32 = (($24) + ($__n_add))|0;
 $33 = ((($this)) + 4|0);
 HEAP32[$33>>2] = $32;
 $34 = (($19) + ($32<<2)|0);
 HEAP32[$34>>2] = 0;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_del,$__n_add) {
 $this = $this|0;
 $__old_cap = $__old_cap|0;
 $__delta_cap = $__delta_cap|0;
 $__old_sz = $__old_sz|0;
 $__n_copy = $__n_copy|0;
 $__n_del = $__n_del|0;
 $__n_add = $__n_add|0;
 var $$sum = 0, $$sum1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (1073741807 - ($__old_cap))|0;
 $1 = ($0>>>0)<($__delta_cap>>>0);
 if ($1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $2 = HEAP8[$this>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = ((($this)) + 4|0);
  $21 = $7;
 } else {
  $5 = ((($this)) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $21 = $6;
 }
 $8 = ($__old_cap>>>0)<(536870887);
 if ($8) {
  $9 = (($__delta_cap) + ($__old_cap))|0;
  $10 = $__old_cap << 1;
  $11 = ($9>>>0)<($10>>>0);
  $12 = $11 ? $10 : $9;
  $13 = ($12>>>0)<(2);
  $14 = (($12) + 4)|0;
  $15 = $14 & -4;
  $16 = $13 ? 2 : $15;
  $18 = $16;
 } else {
  $18 = 1073741807;
 }
 $17 = $18 << 2;
 $19 = (__Znwj($17)|0);
 $20 = ($__n_copy|0)==(0);
 if (!($20)) {
  (_wmemcpy($19,$21,$__n_copy)|0);
 }
 $22 = (($__old_sz) - ($__n_del))|0;
 $23 = ($22|0)==($__n_copy|0);
 if (!($23)) {
  $24 = (($22) - ($__n_copy))|0;
  $$sum = (($__n_add) + ($__n_copy))|0;
  $25 = (($19) + ($$sum<<2)|0);
  $$sum1 = (($__n_del) + ($__n_copy))|0;
  $26 = (($21) + ($$sum1<<2)|0);
  (_wmemcpy($25,$26,$24)|0);
 }
 $27 = ($__old_cap|0)==(1);
 if (!($27)) {
  __ZdlPv($21);
 }
 $28 = ((($this)) + 8|0);
 HEAP32[$28>>2] = $19;
 $29 = $18 | 1;
 HEAP32[$this>>2] = $29;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$04 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $__p$0$ph = 0, $__p$03 = 0, $scevgep2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__first;
 $1 = $__last;
 $2 = (($1) - ($0))|0;
 $3 = ($2>>>0)>(4294967279);
 if ($3) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $4 = ($2>>>0)<(11);
 if ($4) {
  $5 = $2 << 1;
  $6 = $5&255;
  HEAP8[$this>>0] = $6;
  $7 = ((($this)) + 1|0);
  $__p$0$ph = $7;
 } else {
  $8 = (($2) + 16)|0;
  $9 = $8 & -16;
  $10 = (__Znwj($9)|0);
  $11 = ((($this)) + 8|0);
  HEAP32[$11>>2] = $10;
  $12 = $9 | 1;
  HEAP32[$this>>2] = $12;
  $13 = ((($this)) + 4|0);
  HEAP32[$13>>2] = $2;
  $__p$0$ph = $10;
 }
 $14 = $__last;
 $15 = (($14) - ($0))|0;
 $16 = ($__first|0)==($__last|0);
 if (!($16)) {
  $$04 = $__first;$__p$03 = $__p$0$ph;
  while(1) {
   $17 = HEAP8[$$04>>0]|0;
   HEAP8[$__p$03>>0] = $17;
   $18 = ((($$04)) + 1|0);
   $19 = ((($__p$03)) + 1|0);
   $20 = ($18|0)==($__last|0);
   if ($20) {
    break;
   } else {
    $$04 = $18;$__p$03 = $19;
   }
  }
 }
 $scevgep2 = (($__p$0$ph) + ($15)|0);
 HEAP8[$scevgep2>>0] = 0;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$04 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0$ph = 0, $__p$03 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__first;
 $1 = $__last;
 $2 = (($1) - ($0))|0;
 $3 = $2 >> 2;
 $4 = ($3>>>0)>(1073741807);
 if ($4) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $5 = ($3>>>0)<(2);
 if ($5) {
  $6 = $2 >>> 1;
  $7 = $6&255;
  HEAP8[$this>>0] = $7;
  $8 = ((($this)) + 4|0);
  $__p$0$ph = $8;
 } else {
  $9 = (($3) + 4)|0;
  $10 = $9 & -4;
  $11 = $10 << 2;
  $12 = (__Znwj($11)|0);
  $13 = ((($this)) + 8|0);
  HEAP32[$13>>2] = $12;
  $14 = $10 | 1;
  HEAP32[$this>>2] = $14;
  $15 = ((($this)) + 4|0);
  HEAP32[$15>>2] = $3;
  $__p$0$ph = $12;
 }
 $16 = $__last;
 $17 = (($16) - ($0))|0;
 $18 = $17 >>> 2;
 $19 = ($__first|0)==($__last|0);
 if (!($19)) {
  $$04 = $__first;$__p$03 = $__p$0$ph;
  while(1) {
   $20 = HEAP32[$$04>>2]|0;
   HEAP32[$__p$03>>2] = $20;
   $21 = ((($$04)) + 4|0);
   $22 = ((($__p$03)) + 4|0);
   $23 = ($21|0)==($__last|0);
   if ($23) {
    break;
   } else {
    $$04 = $21;$__p$03 = $22;
   }
  }
 }
 $scevgep = (($__p$0$ph) + ($18<<2)|0);
 HEAP32[$scevgep>>2] = 0;
 return;
}
function __ZNSt3__18ios_base5clearEj($this,$state) {
 $this = $this|0;
 $state = $state|0;
 var $$state = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $1 = ((($this)) + 24|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0|0);
 $4 = $3&1;
 $$state = $4 | $state;
 $5 = ((($this)) + 16|0);
 HEAP32[$5>>2] = $$state;
 $6 = $3&1;
 $7 = $6 | $state;
 $8 = ((($this)) + 20|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = $7 & $9;
 $11 = ($10|0)==(0);
 if ($11) {
  STACKTOP = sp;return;
 }
 $12 = (___cxa_allocate_exception(16)|0);
 (__ZNSt3__117iostream_categoryEv()|0);
 HEAP32[$0>>2] = 1;
 $13 = ((($0)) + 4|0);
 HEAP32[$13>>2] = (5488);
 __THREW__ = 0;
 invoke_viii(450,($12|0),(5496|0),($0|0));
 $14 = __THREW__; __THREW__ = 0;
 $15 = $14&1;
 if ($15) {
  $16 = ___cxa_find_matching_catch()|0;
  $17 = tempRet0;
  ___cxa_free_exception(($12|0));
  ___resumeException($16|0);
  // unreachable;
 } else {
  ___cxa_throw(($12|0),(5000|0),(95|0));
  // unreachable;
 }
}
function __ZNSt3__19basic_iosIcNS_11char_traitsIcEEE8setstateEj($this,$__state) {
 $this = $this|0;
 $__state = $__state|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 | $__state;
 __ZNSt3__18ios_base5clearEj($this,$2);
 return;
}
function __ZNSt3__18ios_baseD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (4960);
 __THREW__ = 0;
 invoke_vii(451,($this|0),0);
 $0 = __THREW__; __THREW__ = 0;
 $1 = $0&1;
 if ($1) {
  $11 = ___cxa_find_matching_catch(0|0)|0;
  $12 = tempRet0;
  ___clang_call_terminate($11);
  // unreachable;
 } else {
  $2 = ((($this)) + 28|0);
  __ZNSt3__16localeD2Ev($2);
  $3 = ((($this)) + 32|0);
  $4 = HEAP32[$3>>2]|0;
  _free($4);
  $5 = ((($this)) + 36|0);
  $6 = HEAP32[$5>>2]|0;
  _free($6);
  $7 = ((($this)) + 48|0);
  $8 = HEAP32[$7>>2]|0;
  _free($8);
  $9 = ((($this)) + 60|0);
  $10 = HEAP32[$9>>2]|0;
  _free($10);
  return;
 }
}
function __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__18ios_baseD2Ev($this);
 return;
}
function __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__18ios_baseD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__19basic_iosIcNS_11char_traitsIcEEE5rdbufEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 24|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNSt3__18ios_base16__call_callbacksENS0_5eventE($this,$ev) {
 $this = $this|0;
 $ev = $ev|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i$01 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 40|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 32|0);
 $3 = ((($this)) + 36|0);
 $4 = ($1|0)==(0);
 if (!($4)) {
  $i$01 = $1;
  while(1) {
   $5 = (($i$01) + -1)|0;
   $6 = HEAP32[$2>>2]|0;
   $7 = (($6) + ($5<<2)|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = HEAP32[$3>>2]|0;
   $10 = (($9) + ($5<<2)|0);
   $11 = HEAP32[$10>>2]|0;
   FUNCTION_TABLE_viii[$8 & 1023]($ev,$this,$11);
   $12 = ($5|0)==(0);
   if ($12) {
    break;
   } else {
    $i$01 = $5;
   }
  }
 }
 return;
}
function __ZNKSt3__19basic_iosIcNS_11char_traitsIcEEE4fillEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $1 = ((($this)) + 76|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(-1);
 do {
  if ($3) {
   $4 = (__ZNKSt3__18ios_base6getlocEv($this)|0);
   HEAP32[$0>>2] = $4;
   __THREW__ = 0;
   $5 = (invoke_iii(452,($0|0),(6760|0))|0);
   $6 = __THREW__; __THREW__ = 0;
   $7 = $6&1;
   if (!($7)) {
    $8 = HEAP32[$5>>2]|0;
    $9 = ((($8)) + 28|0);
    $10 = HEAP32[$9>>2]|0;
    __THREW__ = 0;
    $11 = (invoke_iii($10|0,($5|0),32)|0);
    $12 = __THREW__; __THREW__ = 0;
    $13 = $12&1;
    if (!($13)) {
     __ZNSt3__16localeD2Ev($0);
     $16 = $11 << 24 >> 24;
     HEAP32[$1>>2] = $16;
     $18 = $16;
     break;
    }
   }
   $14 = ___cxa_find_matching_catch()|0;
   $15 = tempRet0;
   __ZNSt3__16localeD2Ev($0);
   ___resumeException($14|0);
   // unreachable;
  } else {
   $18 = $2;
  }
 } while(0);
 $17 = $18&255;
 STACKTOP = sp;return ($17|0);
}
function __ZNKSt3__18ios_base6getlocEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $1 = ((($this)) + 28|0);
 __ZNSt3__16localeC2ERKS0_($0,$1);
 $2 = HEAP32[$0>>2]|0;
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__19basic_iosIcNS_11char_traitsIcEEEC2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (4856);
 return;
}
function __ZNSt3__18ios_base4initEPv($this,$sb) {
 $this = $this|0;
 $sb = $sb|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $not$ = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 24|0);
 HEAP32[$0>>2] = $sb;
 $not$ = ($sb|0)==(0|0);
 $1 = $not$&1;
 $2 = ((($this)) + 16|0);
 HEAP32[$2>>2] = $1;
 $3 = ((($this)) + 20|0);
 HEAP32[$3>>2] = 0;
 $4 = ((($this)) + 4|0);
 HEAP32[$4>>2] = 4098;
 $5 = ((($this)) + 12|0);
 HEAP32[$5>>2] = 0;
 $6 = ((($this)) + 8|0);
 HEAP32[$6>>2] = 6;
 $7 = ((($this)) + 32|0);
 $8 = ((($this)) + 28|0);
 dest=$7; stop=dest+40|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 __ZNSt3__16localeC2Ev($8);
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (4872);
 $0 = ((($this)) + 4|0);
 __ZNSt3__16localeD2Ev($0);
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (4872);
 $0 = ((($this)) + 4|0);
 __ZNSt3__16localeD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5sputcEc($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 24|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 28|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($1|0)==($3|0);
 if ($4) {
  $5 = HEAP32[$this>>2]|0;
  $6 = ((($5)) + 52|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = $__c&255;
  $9 = (FUNCTION_TABLE_iii[$7 & 1023]($this,$8)|0);
  $$0 = $9;
 } else {
  $10 = ((($1)) + 1|0);
  HEAP32[$0>>2] = $10;
  HEAP8[$1>>0] = $__c;
  $11 = $__c&255;
  $$0 = $11;
 }
 return ($$0|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5sputnEPKci($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + 48|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (FUNCTION_TABLE_iiii[$2 & 1023]($this,$__s,$__n)|0);
 return ($3|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (4872);
 $0 = ((($this)) + 4|0);
 __ZNSt3__16localeC2Ev($0);
 $1 = ((($this)) + 8|0);
 ;HEAP32[$1>>2]=0|0;HEAP32[$1+4>>2]=0|0;HEAP32[$1+8>>2]=0|0;HEAP32[$1+12>>2]=0|0;HEAP32[$1+16>>2]=0|0;HEAP32[$1+20>>2]=0|0;
 return;
}
function __ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5ebackEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4gptrEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5egptrEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4setgEPcS4_S4_($this,$__gbeg,$__gnext,$__gend) {
 $this = $this|0;
 $__gbeg = $__gbeg|0;
 $__gnext = $__gnext|0;
 $__gend = $__gend|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 HEAP32[$0>>2] = $__gbeg;
 $1 = ((($this)) + 12|0);
 HEAP32[$1>>2] = $__gnext;
 $2 = ((($this)) + 16|0);
 HEAP32[$2>>2] = $__gend;
 return;
}
function __ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5pbaseEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 20|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 24|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5epptrEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 28|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5pbumpEi($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 24|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + ($__n)|0);
 HEAP32[$0>>2] = $2;
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4setpEPcS4_($this,$__pbeg,$__pend) {
 $this = $this|0;
 $__pbeg = $__pbeg|0;
 $__pend = $__pend|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 24|0);
 HEAP32[$0>>2] = $__pbeg;
 $1 = ((($this)) + 20|0);
 HEAP32[$1>>2] = $__pbeg;
 $2 = ((($this)) + 28|0);
 HEAP32[$2>>2] = $__pend;
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPci($this,$0,$1) {
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ($this|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj($agg$result,$this,$0,$1,$2,$3) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = $agg$result;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = ((($agg$result)) + 8|0);
 $9 = $8;
 $10 = $9;
 HEAP32[$10>>2] = -1;
 $11 = (($9) + 4)|0;
 $12 = $11;
 HEAP32[$12>>2] = -1;
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj($agg$result,$this,$0,$1) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $agg$result;
 $3 = $2;
 HEAP32[$3>>2] = 0;
 $4 = (($2) + 4)|0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = ((($agg$result)) + 8|0);
 $7 = $6;
 $8 = $7;
 HEAP32[$8>>2] = -1;
 $9 = (($7) + 4)|0;
 $10 = $9;
 HEAP32[$10>>2] = -1;
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $$01 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0$lcssa = 0, $__i$02 = 0;
 var $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 $1 = ((($this)) + 16|0);
 $2 = ($__n|0)>(0);
 L1: do {
  if ($2) {
   $$01 = $__s;$__i$02 = 0;
   while(1) {
    $3 = HEAP32[$0>>2]|0;
    $4 = HEAP32[$1>>2]|0;
    $5 = ($3>>>0)<($4>>>0);
    if ($5) {
     $6 = ((($3)) + 1|0);
     HEAP32[$0>>2] = $6;
     $7 = HEAP8[$3>>0]|0;
     $storemerge = $7;
    } else {
     $8 = HEAP32[$this>>2]|0;
     $9 = ((($8)) + 40|0);
     $10 = HEAP32[$9>>2]|0;
     $11 = (FUNCTION_TABLE_ii[$10 & 1023]($this)|0);
     $12 = ($11|0)==(-1);
     if ($12) {
      $__i$0$lcssa = $__i$02;
      break L1;
     }
     $13 = $11&255;
     $storemerge = $13;
    }
    HEAP8[$$01>>0] = $storemerge;
    $14 = (($__i$02) + 1)|0;
    $15 = ((($$01)) + 1|0);
    $16 = ($14|0)<($__n|0);
    if ($16) {
     $$01 = $15;$__i$02 = $14;
    } else {
     $__i$0$lcssa = $14;
     break;
    }
   }
  } else {
   $__i$0$lcssa = 0;
  }
 } while(0);
 return ($__i$0$lcssa|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9underflowEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -1;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv($this) {
 $this = $this|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + 36|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (FUNCTION_TABLE_ii[$2 & 1023]($this)|0);
 $4 = ($3|0)==(-1);
 if ($4) {
  $$0 = -1;
 } else {
  $5 = ((($this)) + 12|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = ((($6)) + 1|0);
  HEAP32[$5>>2] = $7;
  $8 = HEAP8[$6>>0]|0;
  $9 = $8&255;
  $$0 = $9;
 }
 return ($$0|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -1;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $$02 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0$lcssa = 0;
 var $__i$01 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 24|0);
 $1 = ((($this)) + 28|0);
 $2 = ($__n|0)>(0);
 L1: do {
  if ($2) {
   $$02 = $__s;$__i$01 = 0;
   while(1) {
    $3 = HEAP32[$0>>2]|0;
    $4 = HEAP32[$1>>2]|0;
    $5 = ($3>>>0)<($4>>>0);
    if ($5) {
     $6 = HEAP8[$$02>>0]|0;
     $7 = ((($3)) + 1|0);
     HEAP32[$0>>2] = $7;
     HEAP8[$3>>0] = $6;
    } else {
     $8 = HEAP32[$this>>2]|0;
     $9 = ((($8)) + 52|0);
     $10 = HEAP32[$9>>2]|0;
     $11 = HEAP8[$$02>>0]|0;
     $12 = $11&255;
     $13 = (FUNCTION_TABLE_iii[$10 & 1023]($this,$12)|0);
     $14 = ($13|0)==(-1);
     if ($14) {
      $__i$0$lcssa = $__i$01;
      break L1;
     }
    }
    $15 = ((($$02)) + 1|0);
    $16 = (($__i$01) + 1)|0;
    $17 = ($16|0)<($__n|0);
    if ($17) {
     $$02 = $15;$__i$01 = $16;
    } else {
     $__i$0$lcssa = $16;
     break;
    }
   }
  } else {
   $__i$0$lcssa = 0;
  }
 } while(0);
 return ($__i$0$lcssa|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8overflowEi($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -1;
}
function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 __ZNSt3__18ios_baseD2Ev($0);
 return;
}
function __ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $$sum = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $$sum = (($2) + 8)|0;
 $3 = (($this) + ($$sum)|0);
 __ZNSt3__18ios_baseD2Ev($3);
 return;
}
function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 __ZNSt3__18ios_baseD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($this) + ($2)|0);
 __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($3);
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($this) {
 $this = $this|0;
 var $$0 = 0, $$sum = 0, $$sum1 = 0, $$sum2 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__s = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__s = sp;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $$sum = (($2) + 24)|0;
 $3 = (($this) + ($$sum)|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0|0);
 L1: do {
  if (!($5)) {
   __THREW__ = 0;
   invoke_vii(429,($__s|0),($this|0));
   $6 = __THREW__; __THREW__ = 0;
   $7 = $6&1;
   L3: do {
    if ($7) {
     $31 = ___cxa_find_matching_catch(0|0)|0;
     $32 = tempRet0;
     $$0 = $31;
    } else {
     $8 = HEAP8[$__s>>0]|0;
     $9 = ($8<<24>>24)==(0);
     do {
      if (!($9)) {
       $10 = HEAP32[$this>>2]|0;
       $11 = ((($10)) + -12|0);
       $12 = HEAP32[$11>>2]|0;
       $$sum1 = (($12) + 24)|0;
       $13 = (($this) + ($$sum1)|0);
       $14 = HEAP32[$13>>2]|0;
       $15 = HEAP32[$14>>2]|0;
       $16 = ((($15)) + 24|0);
       $17 = HEAP32[$16>>2]|0;
       __THREW__ = 0;
       $18 = (invoke_ii($17|0,($14|0))|0);
       $19 = __THREW__; __THREW__ = 0;
       $20 = $19&1;
       if (!($20)) {
        $21 = ($18|0)==(-1);
        if (!($21)) {
         break;
        }
        $22 = HEAP32[$this>>2]|0;
        $23 = ((($22)) + -12|0);
        $24 = HEAP32[$23>>2]|0;
        $25 = (($this) + ($24)|0);
        $$sum2 = (($24) + 16)|0;
        $26 = (($this) + ($$sum2)|0);
        $27 = HEAP32[$26>>2]|0;
        $28 = $27 | 1;
        __THREW__ = 0;
        invoke_vii(453,($25|0),($28|0));
        $29 = __THREW__; __THREW__ = 0;
        $30 = $29&1;
        if (!($30)) {
         break;
        }
       }
       $33 = ___cxa_find_matching_catch(0|0)|0;
       $34 = tempRet0;
       __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
       $$0 = $33;
       break L3;
      }
     } while(0);
     __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
     break L1;
    }
   } while(0);
   (___cxa_begin_catch(($$0|0))|0);
   $35 = HEAP32[$this>>2]|0;
   $36 = ((($35)) + -12|0);
   $37 = HEAP32[$36>>2]|0;
   $38 = (($this) + ($37)|0);
   __THREW__ = 0;
   invoke_vi(436,($38|0));
   $39 = __THREW__; __THREW__ = 0;
   $40 = $39&1;
   if (!($40)) {
    ___cxa_end_catch();
    break;
   }
   $41 = ___cxa_find_matching_catch()|0;
   $42 = tempRet0;
   __THREW__ = 0;
   invoke_v(437);
   $43 = __THREW__; __THREW__ = 0;
   $44 = $43&1;
   if ($44) {
    $45 = ___cxa_find_matching_catch(0|0)|0;
    $46 = tempRet0;
    ___clang_call_terminate($45);
    // unreachable;
   } else {
    ___resumeException($41|0);
    // unreachable;
   }
  }
 } while(0);
 STACKTOP = sp;return ($this|0);
}
function __ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 | 1;
 HEAP32[$0>>2] = $2;
 $3 = ((($this)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $4 & 1;
 $6 = ($5|0)==(0);
 if ($6) {
  return;
 } else {
  ___cxa_rethrow();
  // unreachable;
 }
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 __ZNSt3__18ios_baseD2Ev($0);
 return;
}
function __ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $$sum = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $$sum = (($2) + 4)|0;
 $3 = (($this) + ($$sum)|0);
 __ZNSt3__18ios_baseD2Ev($3);
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 __ZNSt3__18ios_baseD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($this) + ($2)|0);
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($3);
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($this,$__os) {
 $this = $this|0;
 $__os = $__os|0;
 var $$sum = 0, $$sum1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$this>>0] = 0;
 $0 = ((($this)) + 4|0);
 HEAP32[$0>>2] = $__os;
 $1 = HEAP32[$__os>>2]|0;
 $2 = ((($1)) + -12|0);
 $3 = HEAP32[$2>>2]|0;
 $$sum = (($3) + 16)|0;
 $4 = (($__os) + ($$sum)|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)==(0);
 if ($6) {
  $$sum1 = (($3) + 72)|0;
  $7 = (($__os) + ($$sum1)|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = ($8|0)==(0|0);
  if (!($9)) {
   (__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($8)|0);
  }
  HEAP8[$this>>0] = 1;
 }
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($this) {
 $this = $this|0;
 var $$sum = 0, $$sum1 = 0, $$sum2 = 0, $$sum3 = 0, $$sum4 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + -12|0);
 $4 = HEAP32[$3>>2]|0;
 $$sum = (($4) + 24)|0;
 $5 = (($1) + ($$sum)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)==(0|0);
 do {
  if (!($7)) {
   $$sum1 = (($4) + 16)|0;
   $8 = (($1) + ($$sum1)|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = ($9|0)==(0);
   if ($10) {
    $$sum2 = (($4) + 4)|0;
    $11 = (($1) + ($$sum2)|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = $12 & 8192;
    $14 = ($13|0)==(0);
    if (!($14)) {
     $15 = (__ZSt18uncaught_exceptionv()|0);
     if (!($15)) {
      $16 = HEAP32[$0>>2]|0;
      $17 = HEAP32[$16>>2]|0;
      $18 = ((($17)) + -12|0);
      $19 = HEAP32[$18>>2]|0;
      $$sum3 = (($19) + 24)|0;
      $20 = (($16) + ($$sum3)|0);
      $21 = HEAP32[$20>>2]|0;
      $22 = HEAP32[$21>>2]|0;
      $23 = ((($22)) + 24|0);
      $24 = HEAP32[$23>>2]|0;
      __THREW__ = 0;
      $25 = (invoke_ii($24|0,($21|0))|0);
      $26 = __THREW__; __THREW__ = 0;
      $27 = $26&1;
      if (!($27)) {
       $28 = ($25|0)==(-1);
       if (!($28)) {
        break;
       }
       $29 = HEAP32[$0>>2]|0;
       $30 = HEAP32[$29>>2]|0;
       $31 = ((($30)) + -12|0);
       $32 = HEAP32[$31>>2]|0;
       $33 = (($29) + ($32)|0);
       $$sum4 = (($32) + 16)|0;
       $34 = (($29) + ($$sum4)|0);
       $35 = HEAP32[$34>>2]|0;
       $36 = $35 | 1;
       __THREW__ = 0;
       invoke_vii(453,($33|0),($36|0));
       $37 = __THREW__; __THREW__ = 0;
       $38 = $37&1;
       if (!($38)) {
        break;
       }
      }
      $39 = ___cxa_find_matching_catch(0|0)|0;
      $40 = tempRet0;
      (___cxa_begin_catch(($39|0))|0);
      __THREW__ = 0;
      invoke_v(437);
      $41 = __THREW__; __THREW__ = 0;
      $42 = $41&1;
      if ($42) {
       $43 = ___cxa_find_matching_catch(0|0)|0;
       $44 = tempRet0;
       ___clang_call_terminate($43);
       // unreachable;
      }
     }
    }
   }
  }
 } while(0);
 return;
}
function __ZNKSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentrycvbEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = ($0<<24>>24)!=(0);
 return ($1|0);
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$0 = 0, $$1 = 0, $$byval_copy = 0, $$pre$phi6Z2D = 0, $$pre$phi8Z2D = 0, $$pre$phiZ2D = 0, $$sum = 0, $$sum$i = 0, $$sum4 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $8 = 0, $9 = 0, $__s = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 24|0;
 $0 = sp + 20|0;
 $1 = sp + 16|0;
 $__s = sp + 8|0;
 $2 = sp;
 __THREW__ = 0;
 invoke_vii(429,($__s|0),($this|0));
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 L1: do {
  if ($4) {
   $55 = ___cxa_find_matching_catch(0|0)|0;
   $56 = tempRet0;
   $$1 = $55;$$pre$phi6Z2D = $this;$$pre$phiZ2D = $this;
   label = 19;
  } else {
   $5 = HEAP8[$__s>>0]|0;
   $6 = ($5<<24>>24)==(0);
   do {
    if (!($6)) {
     $7 = HEAP32[$this>>2]|0;
     $8 = ((($7)) + -12|0);
     $9 = HEAP32[$8>>2]|0;
     $10 = (($this) + ($9)|0);
     $11 = (__ZNKSt3__18ios_base6getlocEv($10)|0);
     HEAP32[$2>>2] = $11;
     __THREW__ = 0;
     $12 = (invoke_iii(452,($2|0),(5896|0))|0);
     $13 = __THREW__; __THREW__ = 0;
     $14 = $13&1;
     if ($14) {
      $59 = ___cxa_find_matching_catch(0|0)|0;
      $60 = tempRet0;
      __ZNSt3__16localeD2Ev($2);
      $$0 = $59;
     } else {
      __ZNSt3__16localeD2Ev($2);
      $15 = HEAP32[$this>>2]|0;
      $16 = ((($15)) + -12|0);
      $17 = HEAP32[$16>>2]|0;
      $$sum$i = (($17) + 24)|0;
      $18 = (($this) + ($$sum$i)|0);
      $19 = HEAP32[$18>>2]|0;
      $20 = (($this) + ($17)|0);
      $$sum = (($17) + 76)|0;
      $21 = (($this) + ($$sum)|0);
      $22 = HEAP32[$21>>2]|0;
      $23 = ($22|0)==(-1);
      do {
       if ($23) {
        $24 = (__ZNKSt3__18ios_base6getlocEv($20)|0);
        HEAP32[$1>>2] = $24;
        __THREW__ = 0;
        $25 = (invoke_iii(452,($1|0),(6760|0))|0);
        $26 = __THREW__; __THREW__ = 0;
        $27 = $26&1;
        if (!($27)) {
         $28 = HEAP32[$25>>2]|0;
         $29 = ((($28)) + 28|0);
         $30 = HEAP32[$29>>2]|0;
         __THREW__ = 0;
         $31 = (invoke_iii($30|0,($25|0),32)|0);
         $32 = __THREW__; __THREW__ = 0;
         $33 = $32&1;
         if (!($33)) {
          __ZNSt3__16localeD2Ev($1);
          $36 = $31 << 24 >> 24;
          HEAP32[$21>>2] = $36;
          $$pre$phi8Z2D = $20;$38 = $36;
          label = 10;
          break;
         }
        }
        $34 = ___cxa_find_matching_catch(0|0)|0;
        $35 = tempRet0;
        __ZNSt3__16localeD2Ev($1);
        $eh$lpad$body$indexZ2D = $34;
       } else {
        $$pre$phi8Z2D = $20;$38 = $22;
        label = 10;
       }
      } while(0);
      if ((label|0) == 10) {
       $37 = $38&255;
       $39 = HEAP32[$12>>2]|0;
       $40 = ((($39)) + 16|0);
       $41 = HEAP32[$40>>2]|0;
       HEAP32[$0>>2] = $19;
       __THREW__ = 0;
       ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
       $42 = (invoke_iiiiii($41|0,($12|0),($$byval_copy|0),($$pre$phi8Z2D|0),($37|0),($__n|0))|0);
       $43 = __THREW__; __THREW__ = 0;
       $44 = $43&1;
       if (!($44)) {
        $45 = ($42|0)==(0|0);
        if (!($45)) {
         break;
        }
        $46 = HEAP32[$this>>2]|0;
        $47 = ((($46)) + -12|0);
        $48 = HEAP32[$47>>2]|0;
        $49 = (($this) + ($48)|0);
        $$sum4 = (($48) + 16)|0;
        $50 = (($this) + ($$sum4)|0);
        $51 = HEAP32[$50>>2]|0;
        $52 = $51 | 5;
        __THREW__ = 0;
        invoke_vii(453,($49|0),($52|0));
        $53 = __THREW__; __THREW__ = 0;
        $54 = $53&1;
        if (!($54)) {
         break;
        }
       }
       $57 = ___cxa_find_matching_catch(0|0)|0;
       $58 = tempRet0;
       $eh$lpad$body$indexZ2D = $57;
      }
      $$0 = $eh$lpad$body$indexZ2D;
     }
     __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
     $$1 = $$0;$$pre$phi6Z2D = $this;$$pre$phiZ2D = $this;
     label = 19;
     break L1;
    }
   } while(0);
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
  }
 } while(0);
 do {
  if ((label|0) == 19) {
   (___cxa_begin_catch(($$1|0))|0);
   $61 = HEAP32[$$pre$phiZ2D>>2]|0;
   $62 = ((($61)) + -12|0);
   $63 = HEAP32[$62>>2]|0;
   $64 = (($$pre$phi6Z2D) + ($63)|0);
   __THREW__ = 0;
   invoke_vi(436,($64|0));
   $65 = __THREW__; __THREW__ = 0;
   $66 = $65&1;
   if (!($66)) {
    ___cxa_end_catch();
    break;
   }
   $67 = ___cxa_find_matching_catch()|0;
   $68 = tempRet0;
   __THREW__ = 0;
   invoke_v(437);
   $69 = __THREW__; __THREW__ = 0;
   $70 = $69&1;
   if ($70) {
    $71 = ___cxa_find_matching_catch(0|0)|0;
    $72 = tempRet0;
    ___clang_call_terminate($71);
    // unreachable;
   } else {
    ___resumeException($67|0);
    // unreachable;
   }
  }
 } while(0);
 STACKTOP = sp;return ($this|0);
}
function __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEEC2EPNS_15basic_streambufIcS2_EE($this,$vtt,$__sb) {
 $this = $this|0;
 $vtt = $vtt|0;
 $__sb = $__sb|0;
 var $$cast = 0, $$cast$i = 0, $$cast$i1 = 0, $$sum$i = 0, $$sum1$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($vtt)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 HEAP32[$this>>2] = $1;
 $2 = ((($vtt)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $$cast$i = $1;
 $4 = ((($$cast$i)) + -12|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (($this) + ($5)|0);
 HEAP32[$6>>2] = $3;
 $7 = ((($this)) + 4|0);
 HEAP32[$7>>2] = 0;
 $8 = HEAP32[$this>>2]|0;
 $9 = ((($8)) + -12|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = (($this) + ($10)|0);
 __ZNSt3__18ios_base4initEPv($11,$__sb);
 $$sum$i = (($10) + 72)|0;
 $12 = (($this) + ($$sum$i)|0);
 HEAP32[$12>>2] = 0;
 $$sum1$i = (($10) + 76)|0;
 $13 = (($this) + ($$sum1$i)|0);
 HEAP32[$13>>2] = -1;
 $14 = ((($this)) + 8|0);
 $15 = ((($vtt)) + 12|0);
 $16 = HEAP32[$15>>2]|0;
 HEAP32[$14>>2] = $16;
 $17 = ((($vtt)) + 16|0);
 $18 = HEAP32[$17>>2]|0;
 $$cast$i1 = $16;
 $19 = ((($$cast$i1)) + -12|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = (($14) + ($20)|0);
 HEAP32[$21>>2] = $18;
 $22 = HEAP32[$vtt>>2]|0;
 HEAP32[$this>>2] = $22;
 $23 = ((($vtt)) + 20|0);
 $24 = HEAP32[$23>>2]|0;
 $$cast = $22;
 $25 = ((($$cast)) + -12|0);
 $26 = HEAP32[$25>>2]|0;
 $27 = (($this) + ($26)|0);
 HEAP32[$27>>2] = $24;
 $28 = ((($vtt)) + 24|0);
 $29 = HEAP32[$28>>2]|0;
 HEAP32[$14>>2] = $29;
 return;
}
function __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev($this,$vtt) {
 $this = $this|0;
 $vtt = $vtt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 __ZNSt3__18ios_baseD2Ev($0);
 return;
}
function __ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + -8|0);
 $1 = ((($0)) + 12|0);
 __ZNSt3__18ios_baseD2Ev($1);
 return;
}
function __ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $$sum = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $$sum = (($2) + 12)|0;
 $3 = (($this) + ($$sum)|0);
 __ZNSt3__18ios_baseD2Ev($3);
 return;
}
function __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 __ZNSt3__18ios_baseD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + -8|0);
 __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($0);
 return;
}
function __ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($this) + ($2)|0);
 __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($3);
 return;
}
function __ZNKSt3__119__iostream_category4nameEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (5512|0);
}
function __ZNKSt3__119__iostream_category7messageEi($agg$result,$this,$ev) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $ev = $ev|0;
 var $0 = 0, $1 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($ev|0)!=(1);
 $1 = ($ev|0)<(257);
 $or$cond = $0 & $1;
 if ($or$cond) {
  __ZNKSt3__112__do_message7messageEi($agg$result,$this,$ev);
 } else {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result,5528,35);
 }
 return;
}
function __ZNSt3__117iostream_categoryEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[5568>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((5568|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   HEAP32[5488>>2] = (5408);
   ___cxa_guard_release((5568|0));
  }
 }
 return (5488|0);
}
function __ZNSt3__18ios_base7failureC2EPKcRKNS_10error_codeE($this,$msg,$ec) {
 $this = $this|0;
 $msg = $msg|0;
 $ec = $ec|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $tmpcast$byval_copy = sp + 8|0;
 $0 = sp;
 $1 = $ec;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $4 = (($1) + 4)|0;
 $5 = $4;
 $6 = HEAP32[$5>>2]|0;
 $7 = $0;
 $8 = $7;
 HEAP32[$8>>2] = $3;
 $9 = (($7) + 4)|0;
 $10 = $9;
 HEAP32[$10>>2] = $6;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$0>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$0+4>>2]|0;
 __ZNSt3__112system_errorC2ENS_10error_codeEPKc($this,$tmpcast$byval_copy,$msg);
 HEAP32[$this>>2] = (4936);
 STACKTOP = sp;return;
}
function __ZNSt3__18ios_base7failureD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112system_errorD2Ev($this);
 return;
}
function __ZNSt3__18ios_base7failureD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112system_errorD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt3__18ios_baseD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__18ios_baseD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt3__119__iostream_categoryD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNSt3__17collateIcED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__16locale5facetD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17collateIcED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17collateIcE10do_compareEPKcS3_S3_S3_($this,$__lo1,$__hi1,$__lo2,$__hi2) {
 $this = $this|0;
 $__lo1 = $__lo1|0;
 $__hi1 = $__hi1|0;
 $__lo2 = $__lo2|0;
 $__hi2 = $__hi2|0;
 var $$0 = 0, $$018 = 0, $$02$lcssa = 0, $$027 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__lo2|0)==($__hi2|0);
 L1: do {
  if ($0) {
   $$02$lcssa = $__lo1;
   label = 6;
  } else {
   $$018 = $__lo2;$$027 = $__lo1;
   while(1) {
    $1 = ($$027|0)==($__hi1|0);
    if ($1) {
     $$0 = -1;
     break L1;
    }
    $2 = HEAP8[$$027>>0]|0;
    $3 = HEAP8[$$018>>0]|0;
    $4 = ($2<<24>>24)<($3<<24>>24);
    if ($4) {
     $$0 = -1;
     break L1;
    }
    $5 = ($3<<24>>24)<($2<<24>>24);
    if ($5) {
     $$0 = 1;
     break L1;
    }
    $6 = ((($$027)) + 1|0);
    $7 = ((($$018)) + 1|0);
    $8 = ($7|0)==($__hi2|0);
    if ($8) {
     $$02$lcssa = $6;
     label = 6;
     break;
    } else {
     $$018 = $7;$$027 = $6;
    }
   }
  }
 } while(0);
 if ((label|0) == 6) {
  $9 = ($$02$lcssa|0)!=($__hi1|0);
  $10 = $9&1;
  $$0 = $10;
 }
 return ($$0|0);
}
function __ZNKSt3__17collateIcE12do_transformEPKcS3_($agg$result,$this,$__lo,$__hi) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__lo = $__lo|0;
 $__hi = $__hi|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($agg$result,$__lo,$__hi);
 return;
}
function __ZNKSt3__17collateIcE7do_hashEPKcS3_($this,$__lo,$__hi) {
 $this = $this|0;
 $__lo = $__lo|0;
 $__hi = $__hi|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__h$0$lcssa = 0, $__h$02 = 0, $__p$01 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__lo|0)==($__hi|0);
 if ($0) {
  $__h$0$lcssa = 0;
 } else {
  $__h$02 = 0;$__p$01 = $__lo;
  while(1) {
   $1 = $__h$02 << 4;
   $2 = HEAP8[$__p$01>>0]|0;
   $3 = $2 << 24 >> 24;
   $4 = (($3) + ($1))|0;
   $5 = $4 & -268435456;
   $6 = $5 >>> 24;
   $7 = $6 | $5;
   $8 = $7 ^ $4;
   $9 = ((($__p$01)) + 1|0);
   $10 = ($9|0)==($__hi|0);
   if ($10) {
    $__h$0$lcssa = $8;
    break;
   } else {
    $__h$02 = $8;$__p$01 = $9;
   }
  }
 }
 return ($__h$0$lcssa|0);
}
function __ZNSt3__17collateIwED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17collateIwED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17collateIwE10do_compareEPKwS3_S3_S3_($this,$__lo1,$__hi1,$__lo2,$__hi2) {
 $this = $this|0;
 $__lo1 = $__lo1|0;
 $__hi1 = $__hi1|0;
 $__lo2 = $__lo2|0;
 $__hi2 = $__hi2|0;
 var $$0 = 0, $$018 = 0, $$02$lcssa = 0, $$027 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__lo2|0)==($__hi2|0);
 L1: do {
  if ($0) {
   $$02$lcssa = $__lo1;
   label = 6;
  } else {
   $$018 = $__lo2;$$027 = $__lo1;
   while(1) {
    $1 = ($$027|0)==($__hi1|0);
    if ($1) {
     $$0 = -1;
     break L1;
    }
    $2 = HEAP32[$$027>>2]|0;
    $3 = HEAP32[$$018>>2]|0;
    $4 = ($2|0)<($3|0);
    if ($4) {
     $$0 = -1;
     break L1;
    }
    $5 = ($3|0)<($2|0);
    if ($5) {
     $$0 = 1;
     break L1;
    }
    $6 = ((($$027)) + 4|0);
    $7 = ((($$018)) + 4|0);
    $8 = ($7|0)==($__hi2|0);
    if ($8) {
     $$02$lcssa = $6;
     label = 6;
     break;
    } else {
     $$018 = $7;$$027 = $6;
    }
   }
  }
 } while(0);
 if ((label|0) == 6) {
  $9 = ($$02$lcssa|0)!=($__hi1|0);
  $10 = $9&1;
  $$0 = $10;
 }
 return ($$0|0);
}
function __ZNKSt3__17collateIwE12do_transformEPKwS3_($agg$result,$this,$__lo,$__hi) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__lo = $__lo|0;
 $__hi = $__hi|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($agg$result,$__lo,$__hi);
 return;
}
function __ZNKSt3__17collateIwE7do_hashEPKwS3_($this,$__lo,$__hi) {
 $this = $this|0;
 $__lo = $__lo|0;
 $__hi = $__hi|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__h$0$lcssa = 0, $__h$02 = 0, $__p$01 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__lo|0)==($__hi|0);
 if ($0) {
  $__h$0$lcssa = 0;
 } else {
  $__h$02 = 0;$__p$01 = $__lo;
  while(1) {
   $1 = $__h$02 << 4;
   $2 = HEAP32[$__p$01>>2]|0;
   $3 = (($2) + ($1))|0;
   $4 = $3 & -268435456;
   $5 = $4 >>> 24;
   $6 = $5 | $4;
   $7 = $6 ^ $3;
   $8 = ((($__p$01)) + 4|0);
   $9 = ($8|0)==($__hi|0);
   if ($9) {
    $__h$0$lcssa = $7;
    break;
   } else {
    $__h$02 = $7;$__p$01 = $8;
   }
  }
 }
 return ($__h$0$lcssa|0);
}
function __ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0 = 0, $$02 = 0, $$03 = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy2 = 0, $$sroa$01$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__lv = 0, $__names = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy2 = sp + 60|0;
 $$byval_copy1 = sp + 56|0;
 $$byval_copy = sp + 52|0;
 $__lv = sp + 48|0;
 $0 = sp + 44|0;
 $1 = sp + 40|0;
 $2 = sp + 36|0;
 $3 = sp + 32|0;
 $__names = sp + 8|0;
 $4 = sp;
 $5 = ((($__iob)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $6 & 1;
 $8 = ($7|0)==(0);
 L1: do {
  if ($8) {
   HEAP32[$__lv>>2] = -1;
   $9 = HEAP32[$this>>2]|0;
   $10 = ((($9)) + 16|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = HEAP32[$__b>>2]|0;
   HEAP32[$0>>2] = $12;
   $13 = HEAP32[$__e>>2]|0;
   HEAP32[$1>>2] = $13;
   ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
   ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
   $14 = (FUNCTION_TABLE_iiiiiii[$11 & 511]($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__lv)|0);
   HEAP32[$__b>>2] = $14;
   $15 = HEAP32[$__lv>>2]|0;
   if ((($15|0) == 1)) {
    HEAP8[$__v>>0] = 1;
    $$sroa$01$0 = $14;
    break;
   } else if ((($15|0) == 0)) {
    HEAP8[$__v>>0] = 0;
    $$sroa$01$0 = $14;
    break;
   } else {
    HEAP8[$__v>>0] = 1;
    HEAP32[$__err>>2] = 4;
    $$sroa$01$0 = $14;
    break;
   }
  } else {
   $16 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
   HEAP32[$2>>2] = $16;
   __THREW__ = 0;
   $17 = (invoke_iii(452,($2|0),(6760|0))|0);
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   do {
    if ($19) {
     $44 = ___cxa_find_matching_catch()|0;
     $45 = tempRet0;
     (__ZNSt3__114__shared_count16__release_sharedEv($16)|0);
     $$0 = $44;$$03 = $45;
    } else {
     (__ZNSt3__114__shared_count16__release_sharedEv($16)|0);
     $20 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
     HEAP32[$3>>2] = $20;
     __THREW__ = 0;
     $21 = (invoke_iii(452,($3|0),(6904|0))|0);
     $22 = __THREW__; __THREW__ = 0;
     $23 = $22&1;
     if ($23) {
      $46 = ___cxa_find_matching_catch()|0;
      $47 = tempRet0;
      (__ZNSt3__114__shared_count16__release_sharedEv($20)|0);
      $$0 = $46;$$03 = $47;
      break;
     }
     (__ZNSt3__114__shared_count16__release_sharedEv($20)|0);
     $24 = HEAP32[$21>>2]|0;
     $25 = ((($24)) + 24|0);
     $26 = HEAP32[$25>>2]|0;
     __THREW__ = 0;
     invoke_vii($26|0,($__names|0),($21|0));
     $27 = __THREW__; __THREW__ = 0;
     $28 = $27&1;
     if ($28) {
      $$02 = $__names;
     } else {
      $29 = ((($__names)) + 12|0);
      $30 = HEAP32[$21>>2]|0;
      $31 = ((($30)) + 28|0);
      $32 = HEAP32[$31>>2]|0;
      __THREW__ = 0;
      invoke_vii($32|0,($29|0),($21|0));
      $33 = __THREW__; __THREW__ = 0;
      $34 = $33&1;
      if ($34) {
       $$02 = $29;
      } else {
       $35 = HEAP32[$__e>>2]|0;
       HEAP32[$4>>2] = $35;
       $36 = ((($__names)) + 24|0);
       __THREW__ = 0;
       ;HEAP32[$$byval_copy2>>2]=HEAP32[$4>>2]|0;
       $37 = (invoke_iiiiiiii(454,($__b|0),($$byval_copy2|0),($__names|0),($36|0),($17|0),($__err|0),1)|0);
       $38 = __THREW__; __THREW__ = 0;
       $39 = $38&1;
       if ($39) {
        $54 = ___cxa_find_matching_catch()|0;
        $55 = tempRet0;
        $56 = ((($__names)) + 12|0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($56);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__names);
        $$0 = $54;$$03 = $55;
        break;
       } else {
        $40 = ($37|0)==($__names|0);
        $41 = $40&1;
        HEAP8[$__v>>0] = $41;
        $42 = HEAP32[$__b>>2]|0;
        $43 = ((($__names)) + 12|0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__names);
        $$sroa$01$0 = $42;
        break L1;
       }
      }
     }
     $48 = ___cxa_find_matching_catch()|0;
     $49 = tempRet0;
     $50 = ($__names|0)==($$02|0);
     if ($50) {
      $$0 = $48;$$03 = $49;
     } else {
      $52 = $$02;
      while(1) {
       $51 = ((($52)) + -12|0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($51);
       $53 = ($51|0)==($__names|0);
       if ($53) {
        $$0 = $48;$$03 = $49;
        break;
       } else {
        $52 = $51;
       }
      }
     }
    }
   } while(0);
   ___resumeException($$0|0);
   // unreachable;
  }
 } while(0);
 STACKTOP = sp;return ($$sroa$01$0|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0 = 0, $$0$i$i = 0, $$01 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i10 = 0, $$pre$i2$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0;
 var $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0;
 var $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0;
 var $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0;
 var $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0;
 var $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i26 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $__atoms = sp + 208|0;
 $__grouping = sp + 196|0;
 $0 = sp + 192|0;
 $__buf = sp + 180|0;
 $__a_end = sp + 176|0;
 $__g = sp + 16|0;
 $__g_end = sp + 8|0;
 $__dc = sp + 4|0;
 HEAP32[$__grouping>>2] = 0;
 $1 = ((($__grouping)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__grouping)) + 8|0);
 HEAP32[$2>>2] = 0;
 __THREW__ = 0;
 $3 = (invoke_ii(455,($__iob|0))|0);
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 do {
  if ($5) {
   $87 = ___cxa_find_matching_catch()|0;
   $88 = tempRet0;
   $$0 = $87;$$01 = $88;
  } else {
   HEAP32[$0>>2] = $3;
   __THREW__ = 0;
   $6 = (invoke_iii(452,($0|0),(6760|0))|0);
   $7 = __THREW__; __THREW__ = 0;
   $8 = $7&1;
   if (!($8)) {
    $9 = HEAP32[$6>>2]|0;
    $10 = ((($9)) + 32|0);
    $11 = HEAP32[$10>>2]|0;
    __THREW__ = 0;
    (invoke_iiiii($11|0,($6|0),(5728|0),((5754)|0),($__atoms|0))|0);
    $12 = __THREW__; __THREW__ = 0;
    $13 = $12&1;
    if (!($13)) {
     (__ZNSt3__114__shared_count16__release_sharedEv($3)|0);
     HEAP32[$__buf>>2] = 0;
     $14 = ((($__buf)) + 4|0);
     HEAP32[$14>>2] = 0;
     $15 = ((($__buf)) + 8|0);
     HEAP32[$15>>2] = 0;
     $16 = HEAP8[$__buf>>0]|0;
     $17 = $16 & 1;
     $18 = ($17<<24>>24)==(0);
     if ($18) {
      $21 = 10;
     } else {
      $19 = HEAP32[$__buf>>2]|0;
      $20 = $19 & -2;
      $phitmp$i = (($20) + -1)|0;
      $21 = $phitmp$i;
     }
     __THREW__ = 0;
     invoke_viii(456,($__buf|0),($21|0),0);
     $22 = __THREW__; __THREW__ = 0;
     $23 = $22&1;
     L10: do {
      if ($23) {
       label = 30;
      } else {
       $24 = HEAP8[$__buf>>0]|0;
       $25 = $24 & 1;
       $26 = ($25<<24>>24)==(0);
       $27 = ((($__buf)) + 8|0);
       $28 = HEAP32[$27>>2]|0;
       $29 = ((($__buf)) + 1|0);
       $30 = $26 ? $29 : $28;
       HEAP32[$__a_end>>2] = $30;
       HEAP32[$__g_end>>2] = $__g;
       HEAP32[$__dc>>2] = 0;
       $31 = ((($__buf)) + 4|0);
       $$pre = HEAP32[$__b>>2]|0;
       $$pre$i$i$i10 = $$pre;$__a$0 = $30;
       L12: while(1) {
        $32 = ($$pre$i$i$i10|0)==(0|0);
        if ($32) {
         $$pre$i$i$i = 0;
        } else {
         $33 = ((($$pre$i$i$i10)) + 12|0);
         $34 = HEAP32[$33>>2]|0;
         $35 = ((($$pre$i$i$i10)) + 16|0);
         $36 = HEAP32[$35>>2]|0;
         $37 = ($34|0)==($36|0);
         if ($37) {
          $38 = HEAP32[$$pre$i$i$i10>>2]|0;
          $39 = ((($38)) + 36|0);
          $40 = HEAP32[$39>>2]|0;
          __THREW__ = 0;
          $41 = (invoke_ii($40|0,($$pre$i$i$i10|0))|0);
          $42 = __THREW__; __THREW__ = 0;
          $43 = $42&1;
          if ($43) {
           label = 29;
           break;
          }
          $44 = ($41|0)==(-1);
          if ($44) {
           HEAP32[$__b>>2] = 0;
           $$pre$i$i$i = 0;
          } else {
           $$pre$i$i$i = $$pre$i$i$i10;
          }
         } else {
          $$pre$i$i$i = $$pre$i$i$i10;
         }
        }
        $45 = ($$pre$i$i$i|0)==(0|0);
        $46 = HEAP32[$__e>>2]|0;
        $47 = ($46|0)==(0|0);
        do {
         if ($47) {
          label = 19;
         } else {
          $48 = ((($46)) + 12|0);
          $49 = HEAP32[$48>>2]|0;
          $50 = ((($46)) + 16|0);
          $51 = HEAP32[$50>>2]|0;
          $52 = ($49|0)==($51|0);
          if (!($52)) {
           if ($45) {
            $169 = $46;
            break;
           } else {
            $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $46;$__a$2 = $__a$0;
            break L12;
           }
          }
          $53 = HEAP32[$46>>2]|0;
          $54 = ((($53)) + 36|0);
          $55 = HEAP32[$54>>2]|0;
          __THREW__ = 0;
          $56 = (invoke_ii($55|0,($46|0))|0);
          $57 = __THREW__; __THREW__ = 0;
          $58 = $57&1;
          if ($58) {
           label = 29;
           break L12;
          }
          $59 = ($56|0)==(-1);
          if ($59) {
           HEAP32[$__e>>2] = 0;
           label = 19;
           break;
          } else {
           if ($45) {
            $169 = $46;
            break;
           } else {
            $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $46;$__a$2 = $__a$0;
            break L12;
           }
          }
         }
        } while(0);
        if ((label|0) == 19) {
         label = 0;
         if ($45) {
          $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
          break;
         } else {
          $169 = 0;
         }
        }
        $60 = HEAP32[$__a_end>>2]|0;
        $61 = HEAP8[$__buf>>0]|0;
        $62 = $61 & 1;
        $63 = ($62<<24>>24)==(0);
        $64 = HEAP32[$31>>2]|0;
        $65 = $61&255;
        $66 = $65 >>> 1;
        $67 = $63 ? $66 : $64;
        $68 = (($__a$0) + ($67)|0);
        $69 = ($60|0)==($68|0);
        if ($69) {
         $70 = $67 << 1;
         __THREW__ = 0;
         invoke_viii(456,($__buf|0),($70|0),0);
         $71 = __THREW__; __THREW__ = 0;
         $72 = $71&1;
         if ($72) {
          label = 29;
          break;
         }
         $73 = HEAP8[$__buf>>0]|0;
         $74 = $73 & 1;
         $75 = ($74<<24>>24)==(0);
         if ($75) {
          $78 = 10;
         } else {
          $76 = HEAP32[$__buf>>2]|0;
          $77 = $76 & -2;
          $phitmp$i26 = (($77) + -1)|0;
          $78 = $phitmp$i26;
         }
         __THREW__ = 0;
         invoke_viii(456,($__buf|0),($78|0),0);
         $79 = __THREW__; __THREW__ = 0;
         $80 = $79&1;
         if ($80) {
          label = 29;
          break;
         }
         $81 = HEAP8[$__buf>>0]|0;
         $82 = $81 & 1;
         $83 = ($82<<24>>24)==(0);
         $84 = HEAP32[$27>>2]|0;
         $85 = $83 ? $29 : $84;
         $86 = (($85) + ($67)|0);
         HEAP32[$__a_end>>2] = $86;
         $__a$1 = $85;
        } else {
         $__a$1 = $__a$0;
        }
        $95 = ((($$pre$i$i$i)) + 12|0);
        $96 = HEAP32[$95>>2]|0;
        $97 = ((($$pre$i$i$i)) + 16|0);
        $98 = HEAP32[$97>>2]|0;
        $99 = ($96|0)==($98|0);
        if ($99) {
         $100 = HEAP32[$$pre$i$i$i>>2]|0;
         $101 = ((($100)) + 36|0);
         $102 = HEAP32[$101>>2]|0;
         __THREW__ = 0;
         $103 = (invoke_ii($102|0,($$pre$i$i$i|0))|0);
         $104 = __THREW__; __THREW__ = 0;
         $105 = $104&1;
         if ($105) {
          label = 29;
          break;
         } else {
          $$0$i$i = $103;
         }
        } else {
         $106 = HEAP8[$96>>0]|0;
         $107 = $106&255;
         $$0$i$i = $107;
        }
        $108 = $$0$i$i&255;
        $109 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($108,16,$__a$1,$__a_end,$__dc,0,$__grouping,$__g,$__g_end,$__atoms)|0);
        $110 = ($109|0)==(0);
        if (!($110)) {
         $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $169;$__a$2 = $__a$1;
         break;
        }
        $111 = HEAP32[$95>>2]|0;
        $112 = HEAP32[$97>>2]|0;
        $113 = ($111|0)==($112|0);
        if ($113) {
         $114 = HEAP32[$$pre$i$i$i>>2]|0;
         $115 = ((($114)) + 40|0);
         $116 = HEAP32[$115>>2]|0;
         __THREW__ = 0;
         (invoke_ii($116|0,($$pre$i$i$i|0))|0);
         $117 = __THREW__; __THREW__ = 0;
         $118 = $117&1;
         if ($118) {
          label = 29;
          break;
         } else {
          $$pre$i$i$i10 = $$pre$i$i$i;$__a$0 = $__a$1;
          continue;
         }
        } else {
         $119 = ((($111)) + 1|0);
         HEAP32[$95>>2] = $119;
         $$pre$i$i$i10 = $$pre$i$i$i;$__a$0 = $__a$1;
         continue;
        }
       }
       if ((label|0) == 29) {
        $91 = ___cxa_find_matching_catch()|0;
        $92 = tempRet0;
        $lpad$phi$index = $91;$lpad$phi$index2 = $92;
        break;
       }
       $120 = HEAP32[$__a_end>>2]|0;
       $121 = $120;
       $122 = $__a$2;
       $123 = (($121) - ($122))|0;
       __THREW__ = 0;
       invoke_viii(456,($__buf|0),($123|0),0);
       $124 = __THREW__; __THREW__ = 0;
       $125 = $124&1;
       if ($125) {
        label = 30;
       } else {
        $126 = HEAP8[$__buf>>0]|0;
        $127 = HEAP32[$27>>2]|0;
        __THREW__ = 0;
        $128 = (invoke_i(457)|0);
        $129 = __THREW__; __THREW__ = 0;
        $130 = $129&1;
        if ($130) {
         label = 30;
        } else {
         $131 = $126 & 1;
         $132 = ($131<<24>>24)==(0);
         $133 = $132 ? $29 : $127;
         __THREW__ = 0;
         HEAP32[$vararg_buffer>>2] = $__v;
         $134 = (invoke_iiiii(458,($133|0),($128|0),(9720|0),($vararg_buffer|0))|0);
         $135 = __THREW__; __THREW__ = 0;
         $136 = $135&1;
         if ($136) {
          label = 30;
         } else {
          $137 = ($134|0)==(1);
          if (!($137)) {
           HEAP32[$__err>>2] = 4;
          }
          $138 = ($$pre$i$i$i$lcssa|0)==(0|0);
          if ($138) {
           $151 = 0;
          } else {
           $139 = ((($$pre$i$i$i$lcssa)) + 12|0);
           $140 = HEAP32[$139>>2]|0;
           $141 = ((($$pre$i$i$i$lcssa)) + 16|0);
           $142 = HEAP32[$141>>2]|0;
           $143 = ($140|0)==($142|0);
           if ($143) {
            $144 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
            $145 = ((($144)) + 36|0);
            $146 = HEAP32[$145>>2]|0;
            __THREW__ = 0;
            $147 = (invoke_ii($146|0,($$pre$i$i$i$lcssa|0))|0);
            $148 = __THREW__; __THREW__ = 0;
            $149 = $148&1;
            if ($149) {
             label = 30;
             break;
            }
            $150 = ($147|0)==(-1);
            if ($150) {
             HEAP32[$__b>>2] = 0;
             $151 = 0;
            } else {
             $151 = $$pre$i$i$i$lcssa;
            }
           } else {
            $151 = $$pre$i$i$i$lcssa;
           }
          }
          $152 = ($151|0)==(0|0);
          $153 = ($$pre$i2$i$i|0)==(0|0);
          do {
           if ($153) {
            label = 55;
           } else {
            $154 = ((($$pre$i2$i$i)) + 12|0);
            $155 = HEAP32[$154>>2]|0;
            $156 = ((($$pre$i2$i$i)) + 16|0);
            $157 = HEAP32[$156>>2]|0;
            $158 = ($155|0)==($157|0);
            if ($158) {
             $159 = HEAP32[$$pre$i2$i$i>>2]|0;
             $160 = ((($159)) + 36|0);
             $161 = HEAP32[$160>>2]|0;
             __THREW__ = 0;
             $162 = (invoke_ii($161|0,($$pre$i2$i$i|0))|0);
             $163 = __THREW__; __THREW__ = 0;
             $164 = $163&1;
             if ($164) {
              label = 30;
              break L10;
             }
             $165 = ($162|0)==(-1);
             if ($165) {
              HEAP32[$__e>>2] = 0;
              label = 55;
              break;
             }
            }
            if (!($152)) {
             label = 56;
            }
           }
          } while(0);
          if ((label|0) == 55) {
           if ($152) {
            label = 56;
           }
          }
          if ((label|0) == 56) {
           $166 = HEAP32[$__err>>2]|0;
           $167 = $166 | 2;
           HEAP32[$__err>>2] = $167;
          }
          $168 = HEAP32[$__b>>2]|0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
          STACKTOP = sp;return ($168|0);
         }
        }
       }
      }
     } while(0);
     if ((label|0) == 30) {
      $93 = ___cxa_find_matching_catch()|0;
      $94 = tempRet0;
      $lpad$phi$index = $93;$lpad$phi$index2 = $94;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
     $$0 = $lpad$phi$index;$$01 = $lpad$phi$index2;
     break;
    }
   }
   $89 = ___cxa_find_matching_catch()|0;
   $90 = tempRet0;
   (__ZNSt3__114__shared_count16__release_sharedEv($3)|0);
   $$0 = $89;$$01 = $90;
  }
 } while(0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($$0|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($__ct,$__base,$__a,$__a_end,$__dc,$__thousands_sep,$__grouping,$__g,$__g_end,$__atoms) {
 $__ct = $__ct|0;
 $__base = $__base|0;
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__dc = $__dc|0;
 $__thousands_sep = $__thousands_sep|0;
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__atoms = $__atoms|0;
 var $$0 = 0, $$0$i2 = 0, $$0$lcssa$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__a_end>>2]|0;
 $1 = ($0|0)==($__a|0);
 do {
  if ($1) {
   $2 = ((($__atoms)) + 24|0);
   $3 = HEAP8[$2>>0]|0;
   $4 = ($3<<24>>24)==($__ct<<24>>24);
   if (!($4)) {
    $5 = ((($__atoms)) + 25|0);
    $6 = HEAP8[$5>>0]|0;
    $7 = ($6<<24>>24)==($__ct<<24>>24);
    if (!($7)) {
     label = 5;
     break;
    }
   }
   $8 = $4 ? 43 : 45;
   $9 = ((($__a)) + 1|0);
   HEAP32[$__a_end>>2] = $9;
   HEAP8[$__a>>0] = $8;
   HEAP32[$__dc>>2] = 0;
   $$0 = 0;
  } else {
   label = 5;
  }
 } while(0);
 do {
  if ((label|0) == 5) {
   $10 = HEAP8[$__grouping>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   $13 = ((($__grouping)) + 4|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = $10&255;
   $16 = $15 >>> 1;
   $17 = $12 ? $16 : $14;
   $18 = ($17|0)!=(0);
   $19 = ($__ct<<24>>24)==($__thousands_sep<<24>>24);
   $or$cond = $19 & $18;
   if ($or$cond) {
    $20 = HEAP32[$__g_end>>2]|0;
    $21 = $20;
    $22 = $__g;
    $23 = (($21) - ($22))|0;
    $24 = ($23|0)<(160);
    if (!($24)) {
     $$0 = 0;
     break;
    }
    $25 = HEAP32[$__dc>>2]|0;
    $26 = ((($20)) + 4|0);
    HEAP32[$__g_end>>2] = $26;
    HEAP32[$20>>2] = $25;
    HEAP32[$__dc>>2] = 0;
    $$0 = 0;
    break;
   }
   $27 = ((($__atoms)) + 26|0);
   $$0$i2 = $__atoms;
   while(1) {
    $28 = HEAP8[$$0$i2>>0]|0;
    $29 = ($28<<24>>24)==($__ct<<24>>24);
    if ($29) {
     $$0$lcssa$i = $$0$i2;
     break;
    }
    $30 = ((($$0$i2)) + 1|0);
    $31 = ($30|0)==($27|0);
    if ($31) {
     $$0$lcssa$i = $27;
     break;
    } else {
     $$0$i2 = $30;
    }
   }
   $32 = $$0$lcssa$i;
   $33 = $__atoms;
   $34 = (($32) - ($33))|0;
   $35 = ($34|0)>(23);
   if ($35) {
    $$0 = -1;
   } else {
    if ((($__base|0) == 10) | (($__base|0) == 8)) {
     $36 = ($34|0)<($__base|0);
     if (!($36)) {
      $$0 = -1;
      break;
     }
    } else if ((($__base|0) == 16)) {
     $37 = ($34|0)<(22);
     if (!($37)) {
      if ($1) {
       $$0 = -1;
       break;
      }
      $38 = $0;
      $39 = $__a;
      $40 = (($38) - ($39))|0;
      $41 = ($40|0)<(3);
      if (!($41)) {
       $$0 = -1;
       break;
      }
      $42 = ((($0)) + -1|0);
      $43 = HEAP8[$42>>0]|0;
      $44 = ($43<<24>>24)==(48);
      if (!($44)) {
       $$0 = -1;
       break;
      }
      HEAP32[$__dc>>2] = 0;
      $45 = (5728 + ($34)|0);
      $46 = HEAP8[$45>>0]|0;
      $47 = ((($0)) + 1|0);
      HEAP32[$__a_end>>2] = $47;
      HEAP8[$0>>0] = $46;
      $$0 = 0;
      break;
     }
    }
    $48 = (5728 + ($34)|0);
    $49 = HEAP8[$48>>0]|0;
    $50 = ((($0)) + 1|0);
    HEAP32[$__a_end>>2] = $50;
    HEAP8[$0>>0] = $49;
    $51 = HEAP32[$__dc>>2]|0;
    $52 = (($51) + 1)|0;
    HEAP32[$__dc>>2] = $52;
    $$0 = 0;
   }
  }
 } while(0);
 return ($$0|0);
}
function __ZNSt3__16__clocEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[9728>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((9728|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    $4 = (invoke_iiii(459,2147483647,(9736|0),(0|0))|0);
    $5 = __THREW__; __THREW__ = 0;
    $6 = $5&1;
    if ($6) {
     $8 = ___cxa_find_matching_catch()|0;
     $9 = tempRet0;
     ___cxa_guard_abort((9728|0));
     ___resumeException($8|0);
     // unreachable;
    } else {
     HEAP32[9744>>2] = $4;
     ___cxa_guard_release((9728|0));
     break;
    }
   }
  }
 } while(0);
 $7 = HEAP32[9744>>2]|0;
 return ($7|0);
}
function __ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0 = 0, $$02 = 0, $$03 = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy2 = 0, $$sroa$01$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__lv = 0, $__names = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy2 = sp + 60|0;
 $$byval_copy1 = sp + 56|0;
 $$byval_copy = sp + 52|0;
 $__lv = sp + 48|0;
 $0 = sp + 44|0;
 $1 = sp + 40|0;
 $2 = sp + 36|0;
 $3 = sp + 32|0;
 $__names = sp + 8|0;
 $4 = sp;
 $5 = ((($__iob)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $6 & 1;
 $8 = ($7|0)==(0);
 L1: do {
  if ($8) {
   HEAP32[$__lv>>2] = -1;
   $9 = HEAP32[$this>>2]|0;
   $10 = ((($9)) + 16|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = HEAP32[$__b>>2]|0;
   HEAP32[$0>>2] = $12;
   $13 = HEAP32[$__e>>2]|0;
   HEAP32[$1>>2] = $13;
   ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
   ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
   $14 = (FUNCTION_TABLE_iiiiiii[$11 & 511]($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__lv)|0);
   HEAP32[$__b>>2] = $14;
   $15 = HEAP32[$__lv>>2]|0;
   if ((($15|0) == 1)) {
    HEAP8[$__v>>0] = 1;
    $$sroa$01$0 = $14;
    break;
   } else if ((($15|0) == 0)) {
    HEAP8[$__v>>0] = 0;
    $$sroa$01$0 = $14;
    break;
   } else {
    HEAP8[$__v>>0] = 1;
    HEAP32[$__err>>2] = 4;
    $$sroa$01$0 = $14;
    break;
   }
  } else {
   $16 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
   HEAP32[$2>>2] = $16;
   __THREW__ = 0;
   $17 = (invoke_iii(452,($2|0),(6752|0))|0);
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   do {
    if ($19) {
     $44 = ___cxa_find_matching_catch()|0;
     $45 = tempRet0;
     (__ZNSt3__114__shared_count16__release_sharedEv($16)|0);
     $$0 = $44;$$03 = $45;
    } else {
     (__ZNSt3__114__shared_count16__release_sharedEv($16)|0);
     $20 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
     HEAP32[$3>>2] = $20;
     __THREW__ = 0;
     $21 = (invoke_iii(452,($3|0),(6912|0))|0);
     $22 = __THREW__; __THREW__ = 0;
     $23 = $22&1;
     if ($23) {
      $46 = ___cxa_find_matching_catch()|0;
      $47 = tempRet0;
      (__ZNSt3__114__shared_count16__release_sharedEv($20)|0);
      $$0 = $46;$$03 = $47;
      break;
     }
     (__ZNSt3__114__shared_count16__release_sharedEv($20)|0);
     $24 = HEAP32[$21>>2]|0;
     $25 = ((($24)) + 24|0);
     $26 = HEAP32[$25>>2]|0;
     __THREW__ = 0;
     invoke_vii($26|0,($__names|0),($21|0));
     $27 = __THREW__; __THREW__ = 0;
     $28 = $27&1;
     if ($28) {
      $$02 = $__names;
     } else {
      $29 = ((($__names)) + 12|0);
      $30 = HEAP32[$21>>2]|0;
      $31 = ((($30)) + 28|0);
      $32 = HEAP32[$31>>2]|0;
      __THREW__ = 0;
      invoke_vii($32|0,($29|0),($21|0));
      $33 = __THREW__; __THREW__ = 0;
      $34 = $33&1;
      if ($34) {
       $$02 = $29;
      } else {
       $35 = HEAP32[$__e>>2]|0;
       HEAP32[$4>>2] = $35;
       $36 = ((($__names)) + 24|0);
       __THREW__ = 0;
       ;HEAP32[$$byval_copy2>>2]=HEAP32[$4>>2]|0;
       $37 = (invoke_iiiiiiii(460,($__b|0),($$byval_copy2|0),($__names|0),($36|0),($17|0),($__err|0),1)|0);
       $38 = __THREW__; __THREW__ = 0;
       $39 = $38&1;
       if ($39) {
        $54 = ___cxa_find_matching_catch()|0;
        $55 = tempRet0;
        $56 = ((($__names)) + 12|0);
        __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($56);
        __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__names);
        $$0 = $54;$$03 = $55;
        break;
       } else {
        $40 = ($37|0)==($__names|0);
        $41 = $40&1;
        HEAP8[$__v>>0] = $41;
        $42 = HEAP32[$__b>>2]|0;
        $43 = ((($__names)) + 12|0);
        __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($43);
        __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__names);
        $$sroa$01$0 = $42;
        break L1;
       }
      }
     }
     $48 = ___cxa_find_matching_catch()|0;
     $49 = tempRet0;
     $50 = ($__names|0)==($$02|0);
     if ($50) {
      $$0 = $48;$$03 = $49;
     } else {
      $52 = $$02;
      while(1) {
       $51 = ((($52)) + -12|0);
       __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($51);
       $53 = ($51|0)==($__names|0);
       if ($53) {
        $$0 = $48;$$03 = $49;
        break;
       } else {
        $52 = $51;
       }
      }
     }
    }
   } while(0);
   ___resumeException($$0|0);
   // unreachable;
  }
 } while(0);
 STACKTOP = sp;return ($$sroa$01$0|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i9 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i15 = 0, $$01 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i11 = 0, $$pre$i3$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;
 var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i30 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 320|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $__atoms = sp + 208|0;
 $__grouping = sp + 196|0;
 $0 = sp + 192|0;
 $__buf = sp + 180|0;
 $__a_end = sp + 176|0;
 $__g = sp + 16|0;
 $__g_end = sp + 8|0;
 $__dc = sp + 4|0;
 HEAP32[$__grouping>>2] = 0;
 $1 = ((($__grouping)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__grouping)) + 8|0);
 HEAP32[$2>>2] = 0;
 __THREW__ = 0;
 $3 = (invoke_ii(455,($__iob|0))|0);
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 do {
  if ($5) {
   $88 = ___cxa_find_matching_catch()|0;
   $89 = tempRet0;
   $$0 = $88;$$01 = $89;
  } else {
   HEAP32[$0>>2] = $3;
   __THREW__ = 0;
   $6 = (invoke_iii(452,($0|0),(6752|0))|0);
   $7 = __THREW__; __THREW__ = 0;
   $8 = $7&1;
   if (!($8)) {
    $9 = HEAP32[$6>>2]|0;
    $10 = ((($9)) + 48|0);
    $11 = HEAP32[$10>>2]|0;
    __THREW__ = 0;
    (invoke_iiiii($11|0,($6|0),(5728|0),((5754)|0),($__atoms|0))|0);
    $12 = __THREW__; __THREW__ = 0;
    $13 = $12&1;
    if (!($13)) {
     (__ZNSt3__114__shared_count16__release_sharedEv($3)|0);
     HEAP32[$__buf>>2] = 0;
     $14 = ((($__buf)) + 4|0);
     HEAP32[$14>>2] = 0;
     $15 = ((($__buf)) + 8|0);
     HEAP32[$15>>2] = 0;
     $16 = HEAP8[$__buf>>0]|0;
     $17 = $16 & 1;
     $18 = ($17<<24>>24)==(0);
     if ($18) {
      $21 = 10;
     } else {
      $19 = HEAP32[$__buf>>2]|0;
      $20 = $19 & -2;
      $phitmp$i = (($20) + -1)|0;
      $21 = $phitmp$i;
     }
     __THREW__ = 0;
     invoke_viii(456,($__buf|0),($21|0),0);
     $22 = __THREW__; __THREW__ = 0;
     $23 = $22&1;
     L9: do {
      if ($23) {
       label = 31;
      } else {
       $24 = HEAP8[$__buf>>0]|0;
       $25 = $24 & 1;
       $26 = ($25<<24>>24)==(0);
       $27 = ((($__buf)) + 8|0);
       $28 = HEAP32[$27>>2]|0;
       $29 = ((($__buf)) + 1|0);
       $30 = $26 ? $29 : $28;
       HEAP32[$__a_end>>2] = $30;
       HEAP32[$__g_end>>2] = $__g;
       HEAP32[$__dc>>2] = 0;
       $31 = ((($__buf)) + 4|0);
       $$pre = HEAP32[$__b>>2]|0;
       $$pre$i$i$i11 = $$pre;$__a$0 = $30;
       L11: while(1) {
        $32 = ($$pre$i$i$i11|0)==(0|0);
        if ($32) {
         $$pre$i$i$i = 0;$168 = 1;
        } else {
         $33 = ((($$pre$i$i$i11)) + 12|0);
         $34 = HEAP32[$33>>2]|0;
         $35 = ((($$pre$i$i$i11)) + 16|0);
         $36 = HEAP32[$35>>2]|0;
         $37 = ($34|0)==($36|0);
         if ($37) {
          $38 = HEAP32[$$pre$i$i$i11>>2]|0;
          $39 = ((($38)) + 36|0);
          $40 = HEAP32[$39>>2]|0;
          __THREW__ = 0;
          $41 = (invoke_ii($40|0,($$pre$i$i$i11|0))|0);
          $42 = __THREW__; __THREW__ = 0;
          $43 = $42&1;
          if ($43) {
           label = 30;
           break;
          } else {
           $$0$i$i$i$i9 = $41;
          }
         } else {
          $44 = HEAP32[$34>>2]|0;
          $$0$i$i$i$i9 = $44;
         }
         $45 = ($$0$i$i$i$i9|0)==(-1);
         if ($45) {
          HEAP32[$__b>>2] = 0;
          $$pre$i$i$i = 0;$168 = 1;
         } else {
          $$pre$i$i$i = $$pre$i$i$i11;$168 = 0;
         }
        }
        $46 = HEAP32[$__e>>2]|0;
        $47 = ($46|0)==(0|0);
        do {
         if ($47) {
          label = 20;
         } else {
          $48 = ((($46)) + 12|0);
          $49 = HEAP32[$48>>2]|0;
          $50 = ((($46)) + 16|0);
          $51 = HEAP32[$50>>2]|0;
          $52 = ($49|0)==($51|0);
          if ($52) {
           $53 = HEAP32[$46>>2]|0;
           $54 = ((($53)) + 36|0);
           $55 = HEAP32[$54>>2]|0;
           __THREW__ = 0;
           $56 = (invoke_ii($55|0,($46|0))|0);
           $57 = __THREW__; __THREW__ = 0;
           $58 = $57&1;
           if ($58) {
            label = 30;
            break L11;
           } else {
            $$0$i$i1$i$i15 = $56;
           }
          } else {
           $59 = HEAP32[$49>>2]|0;
           $$0$i$i1$i$i15 = $59;
          }
          $60 = ($$0$i$i1$i$i15|0)==(-1);
          if ($60) {
           HEAP32[$__e>>2] = 0;
           label = 20;
           break;
          } else {
           if ($168) {
            $169 = $46;
            break;
           } else {
            $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $46;$__a$2 = $__a$0;
            break L11;
           }
          }
         }
        } while(0);
        if ((label|0) == 20) {
         label = 0;
         if ($168) {
          $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
          break;
         } else {
          $169 = 0;
         }
        }
        $61 = HEAP32[$__a_end>>2]|0;
        $62 = HEAP8[$__buf>>0]|0;
        $63 = $62 & 1;
        $64 = ($63<<24>>24)==(0);
        $65 = HEAP32[$31>>2]|0;
        $66 = $62&255;
        $67 = $66 >>> 1;
        $68 = $64 ? $67 : $65;
        $69 = (($__a$0) + ($68)|0);
        $70 = ($61|0)==($69|0);
        if ($70) {
         $71 = $68 << 1;
         __THREW__ = 0;
         invoke_viii(456,($__buf|0),($71|0),0);
         $72 = __THREW__; __THREW__ = 0;
         $73 = $72&1;
         if ($73) {
          label = 30;
          break;
         }
         $74 = HEAP8[$__buf>>0]|0;
         $75 = $74 & 1;
         $76 = ($75<<24>>24)==(0);
         if ($76) {
          $79 = 10;
         } else {
          $77 = HEAP32[$__buf>>2]|0;
          $78 = $77 & -2;
          $phitmp$i30 = (($78) + -1)|0;
          $79 = $phitmp$i30;
         }
         __THREW__ = 0;
         invoke_viii(456,($__buf|0),($79|0),0);
         $80 = __THREW__; __THREW__ = 0;
         $81 = $80&1;
         if ($81) {
          label = 30;
          break;
         }
         $82 = HEAP8[$__buf>>0]|0;
         $83 = $82 & 1;
         $84 = ($83<<24>>24)==(0);
         $85 = HEAP32[$27>>2]|0;
         $86 = $84 ? $29 : $85;
         $87 = (($86) + ($68)|0);
         HEAP32[$__a_end>>2] = $87;
         $__a$1 = $86;
        } else {
         $__a$1 = $__a$0;
        }
        $96 = ((($$pre$i$i$i)) + 12|0);
        $97 = HEAP32[$96>>2]|0;
        $98 = ((($$pre$i$i$i)) + 16|0);
        $99 = HEAP32[$98>>2]|0;
        $100 = ($97|0)==($99|0);
        if ($100) {
         $101 = HEAP32[$$pre$i$i$i>>2]|0;
         $102 = ((($101)) + 36|0);
         $103 = HEAP32[$102>>2]|0;
         __THREW__ = 0;
         $104 = (invoke_ii($103|0,($$pre$i$i$i|0))|0);
         $105 = __THREW__; __THREW__ = 0;
         $106 = $105&1;
         if ($106) {
          label = 30;
          break;
         } else {
          $$0$i$i = $104;
         }
        } else {
         $107 = HEAP32[$97>>2]|0;
         $$0$i$i = $107;
        }
        $108 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,16,$__a$1,$__a_end,$__dc,0,$__grouping,$__g,$__g_end,$__atoms)|0);
        $109 = ($108|0)==(0);
        if (!($109)) {
         $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $169;$__a$2 = $__a$1;
         break;
        }
        $110 = HEAP32[$96>>2]|0;
        $111 = HEAP32[$98>>2]|0;
        $112 = ($110|0)==($111|0);
        if ($112) {
         $113 = HEAP32[$$pre$i$i$i>>2]|0;
         $114 = ((($113)) + 40|0);
         $115 = HEAP32[$114>>2]|0;
         __THREW__ = 0;
         (invoke_ii($115|0,($$pre$i$i$i|0))|0);
         $116 = __THREW__; __THREW__ = 0;
         $117 = $116&1;
         if ($117) {
          label = 30;
          break;
         } else {
          $$pre$i$i$i11 = $$pre$i$i$i;$__a$0 = $__a$1;
          continue;
         }
        } else {
         $118 = ((($110)) + 4|0);
         HEAP32[$96>>2] = $118;
         $$pre$i$i$i11 = $$pre$i$i$i;$__a$0 = $__a$1;
         continue;
        }
       }
       if ((label|0) == 30) {
        $92 = ___cxa_find_matching_catch()|0;
        $93 = tempRet0;
        $lpad$phi$index = $92;$lpad$phi$index2 = $93;
        break;
       }
       $119 = HEAP32[$__a_end>>2]|0;
       $120 = $119;
       $121 = $__a$2;
       $122 = (($120) - ($121))|0;
       __THREW__ = 0;
       invoke_viii(456,($__buf|0),($122|0),0);
       $123 = __THREW__; __THREW__ = 0;
       $124 = $123&1;
       if ($124) {
        label = 31;
       } else {
        $125 = HEAP8[$__buf>>0]|0;
        $126 = HEAP32[$27>>2]|0;
        __THREW__ = 0;
        $127 = (invoke_i(457)|0);
        $128 = __THREW__; __THREW__ = 0;
        $129 = $128&1;
        if ($129) {
         label = 31;
        } else {
         $130 = $125 & 1;
         $131 = ($130<<24>>24)==(0);
         $132 = $131 ? $29 : $126;
         __THREW__ = 0;
         HEAP32[$vararg_buffer>>2] = $__v;
         $133 = (invoke_iiiii(458,($132|0),($127|0),(9720|0),($vararg_buffer|0))|0);
         $134 = __THREW__; __THREW__ = 0;
         $135 = $134&1;
         if ($135) {
          label = 31;
         } else {
          $136 = ($133|0)==(1);
          if (!($136)) {
           HEAP32[$__err>>2] = 4;
          }
          $137 = ($$pre$i$i$i$lcssa|0)==(0|0);
          if ($137) {
           $170 = 1;
          } else {
           $138 = ((($$pre$i$i$i$lcssa)) + 12|0);
           $139 = HEAP32[$138>>2]|0;
           $140 = ((($$pre$i$i$i$lcssa)) + 16|0);
           $141 = HEAP32[$140>>2]|0;
           $142 = ($139|0)==($141|0);
           if ($142) {
            $143 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
            $144 = ((($143)) + 36|0);
            $145 = HEAP32[$144>>2]|0;
            __THREW__ = 0;
            $146 = (invoke_ii($145|0,($$pre$i$i$i$lcssa|0))|0);
            $147 = __THREW__; __THREW__ = 0;
            $148 = $147&1;
            if ($148) {
             label = 31;
             break;
            } else {
             $$0$i$i$i$i = $146;
            }
           } else {
            $149 = HEAP32[$139>>2]|0;
            $$0$i$i$i$i = $149;
           }
           $150 = ($$0$i$i$i$i|0)==(-1);
           if ($150) {
            HEAP32[$__b>>2] = 0;
            $170 = 1;
           } else {
            $170 = 0;
           }
          }
          $151 = ($$pre$i3$i$i|0)==(0|0);
          do {
           if ($151) {
            label = 57;
           } else {
            $152 = ((($$pre$i3$i$i)) + 12|0);
            $153 = HEAP32[$152>>2]|0;
            $154 = ((($$pre$i3$i$i)) + 16|0);
            $155 = HEAP32[$154>>2]|0;
            $156 = ($153|0)==($155|0);
            if ($156) {
             $157 = HEAP32[$$pre$i3$i$i>>2]|0;
             $158 = ((($157)) + 36|0);
             $159 = HEAP32[$158>>2]|0;
             __THREW__ = 0;
             $160 = (invoke_ii($159|0,($$pre$i3$i$i|0))|0);
             $161 = __THREW__; __THREW__ = 0;
             $162 = $161&1;
             if ($162) {
              label = 31;
              break L9;
             } else {
              $$0$i$i1$i$i = $160;
             }
            } else {
             $163 = HEAP32[$153>>2]|0;
             $$0$i$i1$i$i = $163;
            }
            $164 = ($$0$i$i1$i$i|0)==(-1);
            if ($164) {
             HEAP32[$__e>>2] = 0;
             label = 57;
             break;
            } else {
             if ($170) {
              break;
             } else {
              label = 59;
              break;
             }
            }
           }
          } while(0);
          if ((label|0) == 57) {
           if ($170) {
            label = 59;
           }
          }
          if ((label|0) == 59) {
           $165 = HEAP32[$__err>>2]|0;
           $166 = $165 | 2;
           HEAP32[$__err>>2] = $166;
          }
          $167 = HEAP32[$__b>>2]|0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
          STACKTOP = sp;return ($167|0);
         }
        }
       }
      }
     } while(0);
     if ((label|0) == 31) {
      $94 = ___cxa_find_matching_catch()|0;
      $95 = tempRet0;
      $lpad$phi$index = $94;$lpad$phi$index2 = $95;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
     $$0 = $lpad$phi$index;$$01 = $lpad$phi$index2;
     break;
    }
   }
   $90 = ___cxa_find_matching_catch()|0;
   $91 = tempRet0;
   (__ZNSt3__114__shared_count16__release_sharedEv($3)|0);
   $$0 = $90;$$01 = $91;
  }
 } while(0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($$0|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($__ct,$__base,$__a,$__a_end,$__dc,$__thousands_sep,$__grouping,$__g,$__g_end,$__atoms) {
 $__ct = $__ct|0;
 $__base = $__base|0;
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__dc = $__dc|0;
 $__thousands_sep = $__thousands_sep|0;
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__atoms = $__atoms|0;
 var $$0 = 0, $$0$i2 = 0, $$0$lcssa$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__a_end>>2]|0;
 $1 = ($0|0)==($__a|0);
 do {
  if ($1) {
   $2 = ((($__atoms)) + 96|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = ($3|0)==($__ct|0);
   if (!($4)) {
    $5 = ((($__atoms)) + 100|0);
    $6 = HEAP32[$5>>2]|0;
    $7 = ($6|0)==($__ct|0);
    if (!($7)) {
     label = 5;
     break;
    }
   }
   $8 = $4 ? 43 : 45;
   $9 = ((($__a)) + 1|0);
   HEAP32[$__a_end>>2] = $9;
   HEAP8[$__a>>0] = $8;
   HEAP32[$__dc>>2] = 0;
   $$0 = 0;
  } else {
   label = 5;
  }
 } while(0);
 do {
  if ((label|0) == 5) {
   $10 = HEAP8[$__grouping>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   $13 = ((($__grouping)) + 4|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = $10&255;
   $16 = $15 >>> 1;
   $17 = $12 ? $16 : $14;
   $18 = ($17|0)!=(0);
   $19 = ($__ct|0)==($__thousands_sep|0);
   $or$cond = $19 & $18;
   if ($or$cond) {
    $20 = HEAP32[$__g_end>>2]|0;
    $21 = $20;
    $22 = $__g;
    $23 = (($21) - ($22))|0;
    $24 = ($23|0)<(160);
    if (!($24)) {
     $$0 = 0;
     break;
    }
    $25 = HEAP32[$__dc>>2]|0;
    $26 = ((($20)) + 4|0);
    HEAP32[$__g_end>>2] = $26;
    HEAP32[$20>>2] = $25;
    HEAP32[$__dc>>2] = 0;
    $$0 = 0;
    break;
   }
   $27 = ((($__atoms)) + 104|0);
   $$0$i2 = $__atoms;
   while(1) {
    $28 = HEAP32[$$0$i2>>2]|0;
    $29 = ($28|0)==($__ct|0);
    if ($29) {
     $$0$lcssa$i = $$0$i2;
     break;
    }
    $30 = ((($$0$i2)) + 4|0);
    $31 = ($30|0)==($27|0);
    if ($31) {
     $$0$lcssa$i = $27;
     break;
    } else {
     $$0$i2 = $30;
    }
   }
   $32 = $$0$lcssa$i;
   $33 = $__atoms;
   $34 = (($32) - ($33))|0;
   $35 = $34 >> 2;
   $36 = ($34|0)>(92);
   if ($36) {
    $$0 = -1;
   } else {
    if ((($__base|0) == 16)) {
     $38 = ($34|0)<(88);
     if (!($38)) {
      if ($1) {
       $$0 = -1;
       break;
      }
      $39 = $0;
      $40 = $__a;
      $41 = (($39) - ($40))|0;
      $42 = ($41|0)<(3);
      if (!($42)) {
       $$0 = -1;
       break;
      }
      $43 = ((($0)) + -1|0);
      $44 = HEAP8[$43>>0]|0;
      $45 = ($44<<24>>24)==(48);
      if (!($45)) {
       $$0 = -1;
       break;
      }
      HEAP32[$__dc>>2] = 0;
      $46 = (5728 + ($35)|0);
      $47 = HEAP8[$46>>0]|0;
      $48 = ((($0)) + 1|0);
      HEAP32[$__a_end>>2] = $48;
      HEAP8[$0>>0] = $47;
      $$0 = 0;
      break;
     }
    } else if ((($__base|0) == 10) | (($__base|0) == 8)) {
     $37 = ($35|0)<($__base|0);
     if (!($37)) {
      $$0 = -1;
      break;
     }
    }
    $49 = (5728 + ($35)|0);
    $50 = HEAP8[$49>>0]|0;
    $51 = ((($0)) + 1|0);
    HEAP32[$__a_end>>2] = $51;
    HEAP8[$0>>0] = $50;
    $52 = HEAP32[$__dc>>2]|0;
    $53 = (($52) + 1)|0;
    HEAP32[$__dc>>2] = $53;
    $$0 = 0;
   }
  }
 } while(0);
 return ($$0|0);
}
function __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($agg$result,$__iob,$__atoms,$__thousands_sep) {
 $agg$result = $agg$result|0;
 $__iob = $__iob|0;
 $__atoms = $__atoms|0;
 $__thousands_sep = $__thousands_sep|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__loc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__loc = sp;
 $0 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $0;
 __THREW__ = 0;
 $1 = (invoke_iii(452,($__loc|0),(6760|0))|0);
 $2 = __THREW__; __THREW__ = 0;
 $3 = $2&1;
 if (!($3)) {
  $4 = HEAP32[$1>>2]|0;
  $5 = ((($4)) + 32|0);
  $6 = HEAP32[$5>>2]|0;
  __THREW__ = 0;
  (invoke_iiiii($6|0,($1|0),(5728|0),((5754)|0),($__atoms|0))|0);
  $7 = __THREW__; __THREW__ = 0;
  $8 = $7&1;
  if (!($8)) {
   __THREW__ = 0;
   $9 = (invoke_iii(452,($__loc|0),(6904|0))|0);
   $10 = __THREW__; __THREW__ = 0;
   $11 = $10&1;
   if (!($11)) {
    $12 = HEAP32[$9>>2]|0;
    $13 = ((($12)) + 16|0);
    $14 = HEAP32[$13>>2]|0;
    __THREW__ = 0;
    $15 = (invoke_ii($14|0,($9|0))|0);
    $16 = __THREW__; __THREW__ = 0;
    $17 = $16&1;
    if (!($17)) {
     HEAP8[$__thousands_sep>>0] = $15;
     $18 = HEAP32[$9>>2]|0;
     $19 = ((($18)) + 20|0);
     $20 = HEAP32[$19>>2]|0;
     __THREW__ = 0;
     invoke_vii($20|0,($agg$result|0),($9|0));
     $21 = __THREW__; __THREW__ = 0;
     $22 = $21&1;
     if (!($22)) {
      (__ZNSt3__114__shared_count16__release_sharedEv($0)|0);
      STACKTOP = sp;return;
     }
    }
   }
  }
 }
 $23 = ___cxa_find_matching_catch()|0;
 $24 = tempRet0;
 (__ZNSt3__114__shared_count16__release_sharedEv($0)|0);
 ___resumeException($23|0);
 // unreachable;
}
function __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($agg$result,$__iob,$__atoms,$__decimal_point,$__thousands_sep) {
 $agg$result = $agg$result|0;
 $__iob = $__iob|0;
 $__atoms = $__atoms|0;
 $__decimal_point = $__decimal_point|0;
 $__thousands_sep = $__thousands_sep|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__loc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__loc = sp;
 $0 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $0;
 __THREW__ = 0;
 $1 = (invoke_iii(452,($__loc|0),(6760|0))|0);
 $2 = __THREW__; __THREW__ = 0;
 $3 = $2&1;
 if (!($3)) {
  $4 = HEAP32[$1>>2]|0;
  $5 = ((($4)) + 32|0);
  $6 = HEAP32[$5>>2]|0;
  __THREW__ = 0;
  (invoke_iiiii($6|0,($1|0),(5728|0),((5760)|0),($__atoms|0))|0);
  $7 = __THREW__; __THREW__ = 0;
  $8 = $7&1;
  if (!($8)) {
   __THREW__ = 0;
   $9 = (invoke_iii(452,($__loc|0),(6904|0))|0);
   $10 = __THREW__; __THREW__ = 0;
   $11 = $10&1;
   if (!($11)) {
    $12 = HEAP32[$9>>2]|0;
    $13 = ((($12)) + 12|0);
    $14 = HEAP32[$13>>2]|0;
    __THREW__ = 0;
    $15 = (invoke_ii($14|0,($9|0))|0);
    $16 = __THREW__; __THREW__ = 0;
    $17 = $16&1;
    if (!($17)) {
     HEAP8[$__decimal_point>>0] = $15;
     $18 = HEAP32[$9>>2]|0;
     $19 = ((($18)) + 16|0);
     $20 = HEAP32[$19>>2]|0;
     __THREW__ = 0;
     $21 = (invoke_ii($20|0,($9|0))|0);
     $22 = __THREW__; __THREW__ = 0;
     $23 = $22&1;
     if (!($23)) {
      HEAP8[$__thousands_sep>>0] = $21;
      $24 = HEAP32[$9>>2]|0;
      $25 = ((($24)) + 20|0);
      $26 = HEAP32[$25>>2]|0;
      __THREW__ = 0;
      invoke_vii($26|0,($agg$result|0),($9|0));
      $27 = __THREW__; __THREW__ = 0;
      $28 = $27&1;
      if (!($28)) {
       (__ZNSt3__114__shared_count16__release_sharedEv($0)|0);
       STACKTOP = sp;return;
      }
     }
    }
   }
  }
 }
 $29 = ___cxa_find_matching_catch()|0;
 $30 = tempRet0;
 (__ZNSt3__114__shared_count16__release_sharedEv($0)|0);
 ___resumeException($29|0);
 // unreachable;
}
function __ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($__ct,$__in_units,$__exp,$__a,$__a_end,$__decimal_point,$__thousands_sep,$__grouping,$__g,$__g_end,$__dc,$__atoms) {
 $__ct = $__ct|0;
 $__in_units = $__in_units|0;
 $__exp = $__exp|0;
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__decimal_point = $__decimal_point|0;
 $__thousands_sep = $__thousands_sep|0;
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__dc = $__dc|0;
 $__atoms = $__atoms|0;
 var $$0 = 0, $$0$i3 = 0, $$0$lcssa$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__ct<<24>>24)==($__decimal_point<<24>>24);
 do {
  if ($0) {
   $1 = HEAP8[$__in_units>>0]|0;
   $2 = ($1<<24>>24)==(0);
   if ($2) {
    $$0 = -1;
   } else {
    HEAP8[$__in_units>>0] = 0;
    $3 = HEAP32[$__a_end>>2]|0;
    $4 = ((($3)) + 1|0);
    HEAP32[$__a_end>>2] = $4;
    HEAP8[$3>>0] = 46;
    $5 = HEAP8[$__grouping>>0]|0;
    $6 = $5 & 1;
    $7 = ($6<<24>>24)==(0);
    $8 = ((($__grouping)) + 4|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = $5&255;
    $11 = $10 >>> 1;
    $12 = $7 ? $11 : $9;
    $13 = ($12|0)==(0);
    if ($13) {
     $$0 = 0;
    } else {
     $14 = HEAP32[$__g_end>>2]|0;
     $15 = $14;
     $16 = $__g;
     $17 = (($15) - ($16))|0;
     $18 = ($17|0)<(160);
     if ($18) {
      $19 = HEAP32[$__dc>>2]|0;
      $20 = ((($14)) + 4|0);
      HEAP32[$__g_end>>2] = $20;
      HEAP32[$14>>2] = $19;
      $$0 = 0;
     } else {
      $$0 = 0;
     }
    }
   }
  } else {
   $21 = ($__ct<<24>>24)==($__thousands_sep<<24>>24);
   if ($21) {
    $22 = HEAP8[$__grouping>>0]|0;
    $23 = $22 & 1;
    $24 = ($23<<24>>24)==(0);
    $25 = ((($__grouping)) + 4|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = $22&255;
    $28 = $27 >>> 1;
    $29 = $24 ? $28 : $26;
    $30 = ($29|0)==(0);
    if (!($30)) {
     $31 = HEAP8[$__in_units>>0]|0;
     $32 = ($31<<24>>24)==(0);
     if ($32) {
      $$0 = -1;
      break;
     }
     $33 = HEAP32[$__g_end>>2]|0;
     $34 = $33;
     $35 = $__g;
     $36 = (($34) - ($35))|0;
     $37 = ($36|0)<(160);
     if (!($37)) {
      $$0 = 0;
      break;
     }
     $38 = HEAP32[$__dc>>2]|0;
     $39 = ((($33)) + 4|0);
     HEAP32[$__g_end>>2] = $39;
     HEAP32[$33>>2] = $38;
     HEAP32[$__dc>>2] = 0;
     $$0 = 0;
     break;
    }
   }
   $40 = ((($__atoms)) + 32|0);
   $$0$i3 = $__atoms;
   while(1) {
    $41 = HEAP8[$$0$i3>>0]|0;
    $42 = ($41<<24>>24)==($__ct<<24>>24);
    if ($42) {
     $$0$lcssa$i = $$0$i3;
     break;
    }
    $43 = ((($$0$i3)) + 1|0);
    $44 = ($43|0)==($40|0);
    if ($44) {
     $$0$lcssa$i = $40;
     break;
    } else {
     $$0$i3 = $43;
    }
   }
   $45 = $$0$lcssa$i;
   $46 = $__atoms;
   $47 = (($45) - ($46))|0;
   $48 = ($47|0)>(31);
   if ($48) {
    $$0 = -1;
   } else {
    $49 = (5728 + ($47)|0);
    $50 = HEAP8[$49>>0]|0;
    if ((($47|0) == 24) | (($47|0) == 25)) {
     $51 = HEAP32[$__a_end>>2]|0;
     $52 = ($51|0)==($__a|0);
     if (!($52)) {
      $53 = ((($51)) + -1|0);
      $54 = HEAP8[$53>>0]|0;
      $55 = $54&255;
      $56 = $55 & 95;
      $57 = HEAP8[$__exp>>0]|0;
      $58 = $57&255;
      $59 = $58 & 127;
      $60 = ($56|0)==($59|0);
      if (!($60)) {
       $$0 = -1;
       break;
      }
     }
     $61 = ((($51)) + 1|0);
     HEAP32[$__a_end>>2] = $61;
     HEAP8[$51>>0] = $50;
     $$0 = 0;
     break;
    } else if ((($47|0) == 23) | (($47|0) == 22)) {
     HEAP8[$__exp>>0] = 80;
     $62 = HEAP32[$__a_end>>2]|0;
     $63 = ((($62)) + 1|0);
     HEAP32[$__a_end>>2] = $63;
     HEAP8[$62>>0] = $50;
     $$0 = 0;
     break;
    } else {
     $64 = $50&255;
     $65 = $64 & 95;
     $66 = HEAP8[$__exp>>0]|0;
     $67 = $66 << 24 >> 24;
     $68 = ($65|0)==($67|0);
     if ($68) {
      $69 = $65 | 128;
      $70 = $69&255;
      HEAP8[$__exp>>0] = $70;
      $71 = HEAP8[$__in_units>>0]|0;
      $72 = ($71<<24>>24)==(0);
      if (!($72)) {
       HEAP8[$__in_units>>0] = 0;
       $73 = HEAP8[$__grouping>>0]|0;
       $74 = $73 & 1;
       $75 = ($74<<24>>24)==(0);
       $76 = ((($__grouping)) + 4|0);
       $77 = HEAP32[$76>>2]|0;
       $78 = $73&255;
       $79 = $78 >>> 1;
       $80 = $75 ? $79 : $77;
       $81 = ($80|0)==(0);
       if (!($81)) {
        $82 = HEAP32[$__g_end>>2]|0;
        $83 = $82;
        $84 = $__g;
        $85 = (($83) - ($84))|0;
        $86 = ($85|0)<(160);
        if ($86) {
         $87 = HEAP32[$__dc>>2]|0;
         $88 = ((($82)) + 4|0);
         HEAP32[$__g_end>>2] = $88;
         HEAP32[$82>>2] = $87;
        }
       }
      }
     }
     $89 = HEAP32[$__a_end>>2]|0;
     $90 = ((($89)) + 1|0);
     HEAP32[$__a_end>>2] = $90;
     HEAP8[$89>>0] = $50;
     $91 = ($47|0)>(21);
     if ($91) {
      $$0 = 0;
      break;
     }
     $92 = HEAP32[$__dc>>2]|0;
     $93 = (($92) + 1)|0;
     HEAP32[$__dc>>2] = $93;
     $$0 = 0;
     break;
    }
   }
  }
 } while(0);
 return ($$0|0);
}
function __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($agg$result,$__iob,$__atoms,$__thousands_sep) {
 $agg$result = $agg$result|0;
 $__iob = $__iob|0;
 $__atoms = $__atoms|0;
 $__thousands_sep = $__thousands_sep|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__loc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__loc = sp;
 $0 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $0;
 __THREW__ = 0;
 $1 = (invoke_iii(452,($__loc|0),(6752|0))|0);
 $2 = __THREW__; __THREW__ = 0;
 $3 = $2&1;
 if (!($3)) {
  $4 = HEAP32[$1>>2]|0;
  $5 = ((($4)) + 48|0);
  $6 = HEAP32[$5>>2]|0;
  __THREW__ = 0;
  (invoke_iiiii($6|0,($1|0),(5728|0),((5754)|0),($__atoms|0))|0);
  $7 = __THREW__; __THREW__ = 0;
  $8 = $7&1;
  if (!($8)) {
   __THREW__ = 0;
   $9 = (invoke_iii(452,($__loc|0),(6912|0))|0);
   $10 = __THREW__; __THREW__ = 0;
   $11 = $10&1;
   if (!($11)) {
    $12 = HEAP32[$9>>2]|0;
    $13 = ((($12)) + 16|0);
    $14 = HEAP32[$13>>2]|0;
    __THREW__ = 0;
    $15 = (invoke_ii($14|0,($9|0))|0);
    $16 = __THREW__; __THREW__ = 0;
    $17 = $16&1;
    if (!($17)) {
     HEAP32[$__thousands_sep>>2] = $15;
     $18 = HEAP32[$9>>2]|0;
     $19 = ((($18)) + 20|0);
     $20 = HEAP32[$19>>2]|0;
     __THREW__ = 0;
     invoke_vii($20|0,($agg$result|0),($9|0));
     $21 = __THREW__; __THREW__ = 0;
     $22 = $21&1;
     if (!($22)) {
      (__ZNSt3__114__shared_count16__release_sharedEv($0)|0);
      STACKTOP = sp;return;
     }
    }
   }
  }
 }
 $23 = ___cxa_find_matching_catch()|0;
 $24 = tempRet0;
 (__ZNSt3__114__shared_count16__release_sharedEv($0)|0);
 ___resumeException($23|0);
 // unreachable;
}
function __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($agg$result,$__iob,$__atoms,$__decimal_point,$__thousands_sep) {
 $agg$result = $agg$result|0;
 $__iob = $__iob|0;
 $__atoms = $__atoms|0;
 $__decimal_point = $__decimal_point|0;
 $__thousands_sep = $__thousands_sep|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__loc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__loc = sp;
 $0 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $0;
 __THREW__ = 0;
 $1 = (invoke_iii(452,($__loc|0),(6752|0))|0);
 $2 = __THREW__; __THREW__ = 0;
 $3 = $2&1;
 if (!($3)) {
  $4 = HEAP32[$1>>2]|0;
  $5 = ((($4)) + 48|0);
  $6 = HEAP32[$5>>2]|0;
  __THREW__ = 0;
  (invoke_iiiii($6|0,($1|0),(5728|0),((5760)|0),($__atoms|0))|0);
  $7 = __THREW__; __THREW__ = 0;
  $8 = $7&1;
  if (!($8)) {
   __THREW__ = 0;
   $9 = (invoke_iii(452,($__loc|0),(6912|0))|0);
   $10 = __THREW__; __THREW__ = 0;
   $11 = $10&1;
   if (!($11)) {
    $12 = HEAP32[$9>>2]|0;
    $13 = ((($12)) + 12|0);
    $14 = HEAP32[$13>>2]|0;
    __THREW__ = 0;
    $15 = (invoke_ii($14|0,($9|0))|0);
    $16 = __THREW__; __THREW__ = 0;
    $17 = $16&1;
    if (!($17)) {
     HEAP32[$__decimal_point>>2] = $15;
     $18 = HEAP32[$9>>2]|0;
     $19 = ((($18)) + 16|0);
     $20 = HEAP32[$19>>2]|0;
     __THREW__ = 0;
     $21 = (invoke_ii($20|0,($9|0))|0);
     $22 = __THREW__; __THREW__ = 0;
     $23 = $22&1;
     if (!($23)) {
      HEAP32[$__thousands_sep>>2] = $21;
      $24 = HEAP32[$9>>2]|0;
      $25 = ((($24)) + 20|0);
      $26 = HEAP32[$25>>2]|0;
      __THREW__ = 0;
      invoke_vii($26|0,($agg$result|0),($9|0));
      $27 = __THREW__; __THREW__ = 0;
      $28 = $27&1;
      if (!($28)) {
       (__ZNSt3__114__shared_count16__release_sharedEv($0)|0);
       STACKTOP = sp;return;
      }
     }
    }
   }
  }
 }
 $29 = ___cxa_find_matching_catch()|0;
 $30 = tempRet0;
 (__ZNSt3__114__shared_count16__release_sharedEv($0)|0);
 ___resumeException($29|0);
 // unreachable;
}
function __ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($__ct,$__in_units,$__exp,$__a,$__a_end,$__decimal_point,$__thousands_sep,$__grouping,$__g,$__g_end,$__dc,$__atoms) {
 $__ct = $__ct|0;
 $__in_units = $__in_units|0;
 $__exp = $__exp|0;
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__decimal_point = $__decimal_point|0;
 $__thousands_sep = $__thousands_sep|0;
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__dc = $__dc|0;
 $__atoms = $__atoms|0;
 var $$0 = 0, $$0$i3 = 0, $$0$lcssa$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__ct|0)==($__decimal_point|0);
 do {
  if ($0) {
   $1 = HEAP8[$__in_units>>0]|0;
   $2 = ($1<<24>>24)==(0);
   if ($2) {
    $$0 = -1;
   } else {
    HEAP8[$__in_units>>0] = 0;
    $3 = HEAP32[$__a_end>>2]|0;
    $4 = ((($3)) + 1|0);
    HEAP32[$__a_end>>2] = $4;
    HEAP8[$3>>0] = 46;
    $5 = HEAP8[$__grouping>>0]|0;
    $6 = $5 & 1;
    $7 = ($6<<24>>24)==(0);
    $8 = ((($__grouping)) + 4|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = $5&255;
    $11 = $10 >>> 1;
    $12 = $7 ? $11 : $9;
    $13 = ($12|0)==(0);
    if ($13) {
     $$0 = 0;
    } else {
     $14 = HEAP32[$__g_end>>2]|0;
     $15 = $14;
     $16 = $__g;
     $17 = (($15) - ($16))|0;
     $18 = ($17|0)<(160);
     if ($18) {
      $19 = HEAP32[$__dc>>2]|0;
      $20 = ((($14)) + 4|0);
      HEAP32[$__g_end>>2] = $20;
      HEAP32[$14>>2] = $19;
      $$0 = 0;
     } else {
      $$0 = 0;
     }
    }
   }
  } else {
   $21 = ($__ct|0)==($__thousands_sep|0);
   if ($21) {
    $22 = HEAP8[$__grouping>>0]|0;
    $23 = $22 & 1;
    $24 = ($23<<24>>24)==(0);
    $25 = ((($__grouping)) + 4|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = $22&255;
    $28 = $27 >>> 1;
    $29 = $24 ? $28 : $26;
    $30 = ($29|0)==(0);
    if (!($30)) {
     $31 = HEAP8[$__in_units>>0]|0;
     $32 = ($31<<24>>24)==(0);
     if ($32) {
      $$0 = -1;
      break;
     }
     $33 = HEAP32[$__g_end>>2]|0;
     $34 = $33;
     $35 = $__g;
     $36 = (($34) - ($35))|0;
     $37 = ($36|0)<(160);
     if (!($37)) {
      $$0 = 0;
      break;
     }
     $38 = HEAP32[$__dc>>2]|0;
     $39 = ((($33)) + 4|0);
     HEAP32[$__g_end>>2] = $39;
     HEAP32[$33>>2] = $38;
     HEAP32[$__dc>>2] = 0;
     $$0 = 0;
     break;
    }
   }
   $40 = ((($__atoms)) + 128|0);
   $$0$i3 = $__atoms;
   while(1) {
    $41 = HEAP32[$$0$i3>>2]|0;
    $42 = ($41|0)==($__ct|0);
    if ($42) {
     $$0$lcssa$i = $$0$i3;
     break;
    }
    $43 = ((($$0$i3)) + 4|0);
    $44 = ($43|0)==($40|0);
    if ($44) {
     $$0$lcssa$i = $40;
     break;
    } else {
     $$0$i3 = $43;
    }
   }
   $45 = $$0$lcssa$i;
   $46 = $__atoms;
   $47 = (($45) - ($46))|0;
   $48 = $47 >> 2;
   $49 = ($47|0)>(124);
   if ($49) {
    $$0 = -1;
   } else {
    $50 = (5728 + ($48)|0);
    $51 = HEAP8[$50>>0]|0;
    if ((($48|0) == 24) | (($48|0) == 25)) {
     $52 = HEAP32[$__a_end>>2]|0;
     $53 = ($52|0)==($__a|0);
     if (!($53)) {
      $54 = ((($52)) + -1|0);
      $55 = HEAP8[$54>>0]|0;
      $56 = $55&255;
      $57 = $56 & 95;
      $58 = HEAP8[$__exp>>0]|0;
      $59 = $58&255;
      $60 = $59 & 127;
      $61 = ($57|0)==($60|0);
      if (!($61)) {
       $$0 = -1;
       break;
      }
     }
     $62 = ((($52)) + 1|0);
     HEAP32[$__a_end>>2] = $62;
     HEAP8[$52>>0] = $51;
     $$0 = 0;
     break;
    } else if ((($48|0) == 23) | (($48|0) == 22)) {
     HEAP8[$__exp>>0] = 80;
    } else {
     $63 = $51&255;
     $64 = $63 & 95;
     $65 = HEAP8[$__exp>>0]|0;
     $66 = $65 << 24 >> 24;
     $67 = ($64|0)==($66|0);
     if ($67) {
      $68 = $64 | 128;
      $69 = $68&255;
      HEAP8[$__exp>>0] = $69;
      $70 = HEAP8[$__in_units>>0]|0;
      $71 = ($70<<24>>24)==(0);
      if (!($71)) {
       HEAP8[$__in_units>>0] = 0;
       $72 = HEAP8[$__grouping>>0]|0;
       $73 = $72 & 1;
       $74 = ($73<<24>>24)==(0);
       $75 = ((($__grouping)) + 4|0);
       $76 = HEAP32[$75>>2]|0;
       $77 = $72&255;
       $78 = $77 >>> 1;
       $79 = $74 ? $78 : $76;
       $80 = ($79|0)==(0);
       if (!($80)) {
        $81 = HEAP32[$__g_end>>2]|0;
        $82 = $81;
        $83 = $__g;
        $84 = (($82) - ($83))|0;
        $85 = ($84|0)<(160);
        if ($85) {
         $86 = HEAP32[$__dc>>2]|0;
         $87 = ((($81)) + 4|0);
         HEAP32[$__g_end>>2] = $87;
         HEAP32[$81>>2] = $86;
        }
       }
      }
     }
    }
    $88 = HEAP32[$__a_end>>2]|0;
    $89 = ((($88)) + 1|0);
    HEAP32[$__a_end>>2] = $89;
    HEAP8[$88>>0] = $51;
    $90 = ($47|0)>(84);
    if ($90) {
     $$0 = 0;
    } else {
     $91 = HEAP32[$__dc>>2]|0;
     $92 = (($91) + 1)|0;
     HEAP32[$__dc>>2] = $92;
     $$0 = 0;
    }
   }
  }
 } while(0);
 return ($$0|0);
}
function __ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$0 = 0, $$01 = 0, $$byval_copy = 0, $$ph = 0, $$pre = 0, $$pre$phi6Z2D = 0, $$pre2 = 0, $$pre2$val = 0, $$pre2$val7 = 0, $$pre5 = 0, $$sroa$0$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $__nm = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 20|0;
 $0 = sp + 16|0;
 $1 = sp + 12|0;
 $__nm = sp;
 $2 = ((($__iob)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 & 1;
 $5 = ($4|0)==(0);
 L1: do {
  if ($5) {
   $6 = HEAP32[$this>>2]|0;
   $7 = ((($6)) + 24|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = HEAP32[$__s>>2]|0;
   HEAP32[$0>>2] = $9;
   $10 = $__v&1;
   ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
   $11 = (FUNCTION_TABLE_iiiiii[$8 & 1023]($this,$$byval_copy,$__iob,$__fl,$10)|0);
   $$sroa$0$0 = $11;
  } else {
   $12 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
   HEAP32[$1>>2] = $12;
   __THREW__ = 0;
   $13 = (invoke_iii(452,($1|0),(6904|0))|0);
   $14 = __THREW__; __THREW__ = 0;
   $15 = $14&1;
   L3: do {
    if ($15) {
     $65 = ___cxa_find_matching_catch()|0;
     $66 = tempRet0;
     (__ZNSt3__114__shared_count16__release_sharedEv($12)|0);
     $$0 = $66;$$01 = $65;
    } else {
     (__ZNSt3__114__shared_count16__release_sharedEv($12)|0);
     $16 = HEAP32[$13>>2]|0;
     if ($__v) {
      $17 = ((($16)) + 24|0);
      $18 = HEAP32[$17>>2]|0;
      FUNCTION_TABLE_vii[$18 & 1023]($__nm,$13);
     } else {
      $19 = ((($16)) + 28|0);
      $20 = HEAP32[$19>>2]|0;
      FUNCTION_TABLE_vii[$20 & 1023]($__nm,$13);
     }
     $21 = HEAP8[$__nm>>0]|0;
     $22 = $21 & 1;
     $23 = ($22<<24>>24)==(0);
     $24 = ((($__nm)) + 8|0);
     $25 = HEAP32[$24>>2]|0;
     $$pre5 = ((($__nm)) + 1|0);
     $26 = ((($__nm)) + 1|0);
     $$pre2 = ((($__nm)) + 8|0);
     $$pre$phi6Z2D = $23 ? $26 : $$pre5;
     $$ph = $23 ? $26 : $25;
     $27 = ((($__nm)) + 4|0);
     $28 = $21 & 1;
     $29 = ($28<<24>>24)==(0);
     $$pre2$val7 = HEAP32[$$pre2>>2]|0;
     $30 = HEAP32[$27>>2]|0;
     $31 = $21&255;
     $32 = $31 >>> 1;
     $33 = $29 ? $$pre$phi6Z2D : $$pre2$val7;
     $34 = $29 ? $32 : $30;
     $35 = (($33) + ($34)|0);
     $36 = ($$ph|0)==($35|0);
     L10: do {
      if (!($36)) {
       $38 = $$ph;
       L11: while(1) {
        $37 = HEAP8[$38>>0]|0;
        $39 = HEAP32[$__s>>2]|0;
        $40 = ($39|0)==(0|0);
        do {
         if (!($40)) {
          $41 = ((($39)) + 24|0);
          $42 = HEAP32[$41>>2]|0;
          $43 = ((($39)) + 28|0);
          $44 = HEAP32[$43>>2]|0;
          $45 = ($42|0)==($44|0);
          if (!($45)) {
           $46 = ((($42)) + 1|0);
           HEAP32[$41>>2] = $46;
           HEAP8[$42>>0] = $37;
           break;
          }
          $47 = HEAP32[$39>>2]|0;
          $48 = ((($47)) + 52|0);
          $49 = HEAP32[$48>>2]|0;
          $50 = $37&255;
          __THREW__ = 0;
          $51 = (invoke_iii($49|0,($39|0),($50|0))|0);
          $52 = __THREW__; __THREW__ = 0;
          $53 = $52&1;
          if ($53) {
           break L11;
          }
          $54 = ($51|0)==(-1);
          if ($54) {
           HEAP32[$__s>>2] = 0;
          }
         }
        } while(0);
        $55 = ((($38)) + 1|0);
        $$pre = HEAP8[$__nm>>0]|0;
        $56 = $$pre & 1;
        $57 = ($56<<24>>24)==(0);
        $$pre2$val = HEAP32[$$pre2>>2]|0;
        $58 = HEAP32[$27>>2]|0;
        $59 = $$pre&255;
        $60 = $59 >>> 1;
        $61 = $57 ? $$pre$phi6Z2D : $$pre2$val;
        $62 = $57 ? $60 : $58;
        $63 = (($61) + ($62)|0);
        $64 = ($55|0)==($63|0);
        if ($64) {
         break L10;
        } else {
         $38 = $55;
        }
       }
       $67 = ___cxa_find_matching_catch()|0;
       $68 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nm);
       $$0 = $68;$$01 = $67;
       break L3;
      }
     } while(0);
     $69 = HEAP32[$__s>>2]|0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nm);
     $$sroa$0$0 = $69;
     break L1;
    }
   } while(0);
   ___resumeException($$01|0);
   // unreachable;
  }
 } while(0);
 STACKTOP = sp;return ($$sroa$0$0|0);
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0;
 var $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 20|0;
 $vararg_buffer = sp;
 $__fmt = sp + 60|0;
 $__nar = sp + 48|0;
 $__o = sp + 24|0;
 $__op = sp + 16|0;
 $__oe = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt>>0]=HEAP8[9752>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[9752+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[9752+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[9752+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[9752+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[9752+5>>0]|0;
 $2 = ((($__fmt)) + 1|0);
 $3 = ((($__iob)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($2,9760,1,$4);
 $5 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $__v;
 $6 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,12,$5,$__fmt,$vararg_buffer)|0);
 $7 = (($__nar) + ($6)|0);
 $8 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$7,$__iob)|0);
 $9 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $9;
 __THREW__ = 0;
 invoke_viiiiiii(461,($__nar|0),($8|0),($7|0),($__o|0),($__op|0),($__oe|0),($0|0));
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if ($11) {
  $16 = ___cxa_find_matching_catch()|0;
  $17 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($9)|0);
  ___resumeException($16|0);
  // unreachable;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($9)|0);
  $12 = HEAP32[$__s>>2]|0;
  HEAP32[$1>>2] = $12;
  $13 = HEAP32[$__op>>2]|0;
  $14 = HEAP32[$__oe>>2]|0;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
  $15 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$13,$14,$__iob,$__fl)|0);
  STACKTOP = sp;return ($15|0);
 }
 return (0)|0;
}
function __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmtp,$__len,$__signd,$__flags) {
 $__fmtp = $__fmtp|0;
 $__len = $__len|0;
 $__signd = $__signd|0;
 $__flags = $__flags|0;
 var $$0 = 0, $$012 = 0, $$1$lcssa = 0, $$1$ph = 0, $$13 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__flags & 2048;
 $1 = ($0|0)==(0);
 if ($1) {
  $$0 = $__fmtp;
 } else {
  $2 = ((($__fmtp)) + 1|0);
  HEAP8[$__fmtp>>0] = 43;
  $$0 = $2;
 }
 $3 = $__flags & 512;
 $4 = ($3|0)==(0);
 if ($4) {
  $$1$ph = $$0;
 } else {
  $5 = ((($$0)) + 1|0);
  HEAP8[$$0>>0] = 35;
  $$1$ph = $5;
 }
 $6 = HEAP8[$__len>>0]|0;
 $7 = ($6<<24>>24)==(0);
 if ($7) {
  $$1$lcssa = $$1$ph;
 } else {
  $$012 = $__len;$$13 = $$1$ph;$10 = $6;
  while(1) {
   $8 = ((($$012)) + 1|0);
   $9 = ((($$13)) + 1|0);
   HEAP8[$$13>>0] = $10;
   $11 = HEAP8[$8>>0]|0;
   $12 = ($11<<24>>24)==(0);
   if ($12) {
    $$1$lcssa = $9;
    break;
   } else {
    $$012 = $8;$$13 = $9;$10 = $11;
   }
  }
 }
 $13 = $__flags & 74;
 do {
  if ((($13|0) == 64)) {
   HEAP8[$$1$lcssa>>0] = 111;
  } else if ((($13|0) == 8)) {
   $14 = $__flags & 16384;
   $15 = ($14|0)==(0);
   if ($15) {
    HEAP8[$$1$lcssa>>0] = 120;
    break;
   } else {
    HEAP8[$$1$lcssa>>0] = 88;
    break;
   }
  } else {
   if ($__signd) {
    HEAP8[$$1$lcssa>>0] = 100;
    break;
   } else {
    HEAP8[$$1$lcssa>>0] = 117;
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nb,$__ne,$__iob) {
 $__nb = $__nb|0;
 $__ne = $__ne|0;
 $__iob = $__iob|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($__iob)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 & 176;
 do {
  if ((($2|0) == 16)) {
   $3 = HEAP8[$__nb>>0]|0;
   if ((($3<<24>>24) == 43) | (($3<<24>>24) == 45)) {
    $4 = ((($__nb)) + 1|0);
    $$0 = $4;
    break;
   }
   $5 = $__ne;
   $6 = $__nb;
   $7 = (($5) - ($6))|0;
   $8 = ($7|0)>(1);
   $9 = ($3<<24>>24)==(48);
   $or$cond = $8 & $9;
   if ($or$cond) {
    $10 = ((($__nb)) + 1|0);
    $11 = HEAP8[$10>>0]|0;
    if ((($11<<24>>24) == 88) | (($11<<24>>24) == 120)) {
     $12 = ((($__nb)) + 2|0);
     $$0 = $12;
    } else {
     label = 7;
    }
   } else {
    label = 7;
   }
  } else if ((($2|0) == 32)) {
   $$0 = $__ne;
  } else {
   label = 7;
  }
 } while(0);
 if ((label|0) == 7) {
  $$0 = $__nb;
 }
 return ($$0|0);
}
function __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nb,$__np,$__ne,$__ob,$__op,$__oe,$__loc) {
 $__nb = $__nb|0;
 $__np = $__np|0;
 $__ne = $__ne|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__loc = $__loc|0;
 var $$01$i$i10 = 0, $$01$i$i414 = 0, $$__dg$0 = 0, $$pre = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;
 var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0;
 var $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dc$011 = 0;
 var $__dc$1 = 0, $__dg$012 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__p$013 = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $or$cond = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__grouping = sp;
 $0 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6760)|0);
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6904)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 FUNCTION_TABLE_vii[$4 & 1023]($__grouping,$1);
 $5 = HEAP8[$__grouping>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 $8 = ((($__grouping)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = $5&255;
 $11 = $10 >>> 1;
 $12 = $7 ? $11 : $9;
 $13 = ($12|0)==(0);
 L1: do {
  if ($13) {
   $14 = HEAP32[$0>>2]|0;
   $15 = ((($14)) + 32|0);
   $16 = HEAP32[$15>>2]|0;
   __THREW__ = 0;
   (invoke_iiiii($16|0,($0|0),($__nb|0),($__ne|0),($__ob|0))|0);
   $17 = __THREW__; __THREW__ = 0;
   $18 = $17&1;
   if ($18) {
    label = 5;
   } else {
    $19 = $__ne;
    $20 = $__nb;
    $21 = (($19) - ($20))|0;
    $22 = (($__ob) + ($21)|0);
    HEAP32[$__oe>>2] = $22;
    $$pre$phiZ2D = $20;$133 = $22;
    label = 29;
   }
  } else {
   HEAP32[$__oe>>2] = $__ob;
   $27 = HEAP8[$__nb>>0]|0;
   if ((($27<<24>>24) == 43) | (($27<<24>>24) == 45)) {
    $28 = HEAP32[$0>>2]|0;
    $29 = ((($28)) + 28|0);
    $30 = HEAP32[$29>>2]|0;
    __THREW__ = 0;
    $31 = (invoke_iii($30|0,($0|0),($27|0))|0);
    $32 = __THREW__; __THREW__ = 0;
    $33 = $32&1;
    if ($33) {
     label = 5;
     break;
    }
    $34 = ((($__nb)) + 1|0);
    $35 = HEAP32[$__oe>>2]|0;
    $36 = ((($35)) + 1|0);
    HEAP32[$__oe>>2] = $36;
    HEAP8[$35>>0] = $31;
    $__nf$0 = $34;
   } else {
    $__nf$0 = $__nb;
   }
   $37 = $__ne;
   $38 = $__nf$0;
   $39 = (($37) - ($38))|0;
   $40 = ($39|0)>(1);
   if ($40) {
    $41 = HEAP8[$__nf$0>>0]|0;
    $42 = ($41<<24>>24)==(48);
    if ($42) {
     $43 = ((($__nf$0)) + 1|0);
     $44 = HEAP8[$43>>0]|0;
     if ((($44<<24>>24) == 88) | (($44<<24>>24) == 120)) {
      $45 = HEAP32[$0>>2]|0;
      $46 = ((($45)) + 28|0);
      $47 = HEAP32[$46>>2]|0;
      __THREW__ = 0;
      $48 = (invoke_iii($47|0,($0|0),48)|0);
      $49 = __THREW__; __THREW__ = 0;
      $50 = $49&1;
      if ($50) {
       label = 5;
       break;
      }
      $51 = HEAP32[$__oe>>2]|0;
      $52 = ((($51)) + 1|0);
      HEAP32[$__oe>>2] = $52;
      HEAP8[$51>>0] = $48;
      $53 = HEAP8[$43>>0]|0;
      $54 = HEAP32[$0>>2]|0;
      $55 = ((($54)) + 28|0);
      $56 = HEAP32[$55>>2]|0;
      __THREW__ = 0;
      $57 = (invoke_iii($56|0,($0|0),($53|0))|0);
      $58 = __THREW__; __THREW__ = 0;
      $59 = $58&1;
      if ($59) {
       label = 5;
       break;
      }
      $60 = ((($__nf$0)) + 2|0);
      $61 = HEAP32[$__oe>>2]|0;
      $62 = ((($61)) + 1|0);
      HEAP32[$__oe>>2] = $62;
      HEAP8[$61>>0] = $57;
      $__nf$1 = $60;
     } else {
      $__nf$1 = $__nf$0;
     }
    } else {
     $__nf$1 = $__nf$0;
    }
   } else {
    $__nf$1 = $__nf$0;
   }
   $63 = ($__nf$1|0)==($__ne|0);
   if (!($63)) {
    $64 = ((($__ne)) + -1|0);
    $65 = ($__nf$1>>>0)<($64>>>0);
    if ($65) {
     $$01$i$i414 = $__nf$1;$68 = $64;
     while(1) {
      $66 = HEAP8[$$01$i$i414>>0]|0;
      $67 = HEAP8[$68>>0]|0;
      HEAP8[$$01$i$i414>>0] = $67;
      HEAP8[$68>>0] = $66;
      $69 = ((($$01$i$i414)) + 1|0);
      $70 = ((($68)) + -1|0);
      $71 = ($69>>>0)<($70>>>0);
      if ($71) {
       $$01$i$i414 = $69;$68 = $70;
      } else {
       break;
      }
     }
    }
   }
   $72 = HEAP32[$1>>2]|0;
   $73 = ((($72)) + 16|0);
   $74 = HEAP32[$73>>2]|0;
   __THREW__ = 0;
   $75 = (invoke_ii($74|0,($1|0))|0);
   $76 = __THREW__; __THREW__ = 0;
   $77 = $76&1;
   if ($77) {
    label = 5;
   } else {
    $78 = ((($__grouping)) + 8|0);
    $79 = ((($__grouping)) + 1|0);
    $80 = ($__nf$1>>>0)<($__ne>>>0);
    L20: do {
     if ($80) {
      $__dc$011 = 0;$__dg$012 = 0;$__p$013 = $__nf$1;
      while(1) {
       $81 = HEAP8[$__grouping>>0]|0;
       $82 = $81 & 1;
       $83 = ($82<<24>>24)==(0);
       $84 = HEAP32[$78>>2]|0;
       $85 = $83 ? $79 : $84;
       $86 = (($85) + ($__dg$012)|0);
       $87 = HEAP8[$86>>0]|0;
       $88 = ($87<<24>>24)!=(0);
       $89 = $87 << 24 >> 24;
       $90 = ($__dc$011|0)==($89|0);
       $or$cond = $88 & $90;
       if ($or$cond) {
        $91 = HEAP32[$__oe>>2]|0;
        $92 = ((($91)) + 1|0);
        HEAP32[$__oe>>2] = $92;
        HEAP8[$91>>0] = $75;
        $93 = HEAP8[$__grouping>>0]|0;
        $94 = $93 & 1;
        $95 = ($94<<24>>24)==(0);
        $96 = HEAP32[$8>>2]|0;
        $97 = $93&255;
        $98 = $97 >>> 1;
        $99 = $95 ? $98 : $96;
        $100 = (($99) + -1)|0;
        $101 = ($__dg$012>>>0)<($100>>>0);
        $102 = $101&1;
        $$__dg$0 = (($102) + ($__dg$012))|0;
        $__dc$1 = 0;$__dg$1 = $$__dg$0;
       } else {
        $__dc$1 = $__dc$011;$__dg$1 = $__dg$012;
       }
       $103 = HEAP8[$__p$013>>0]|0;
       $104 = HEAP32[$0>>2]|0;
       $105 = ((($104)) + 28|0);
       $106 = HEAP32[$105>>2]|0;
       __THREW__ = 0;
       $107 = (invoke_iii($106|0,($0|0),($103|0))|0);
       $108 = __THREW__; __THREW__ = 0;
       $109 = $108&1;
       if ($109) {
        break;
       }
       $110 = HEAP32[$__oe>>2]|0;
       $111 = ((($110)) + 1|0);
       HEAP32[$__oe>>2] = $111;
       HEAP8[$110>>0] = $107;
       $112 = (($__dc$1) + 1)|0;
       $113 = ((($__p$013)) + 1|0);
       $114 = ($113>>>0)<($__ne>>>0);
       if ($114) {
        $__dc$011 = $112;$__dg$012 = $__dg$1;$__p$013 = $113;
       } else {
        break L20;
       }
      }
      $23 = ___cxa_find_matching_catch()|0;
      $24 = tempRet0;
      $lpad$phi$index = $23;$lpad$phi$index2 = $24;
      break L1;
     }
    } while(0);
    $115 = $__nf$1;
    $116 = $__nb;
    $117 = (($115) - ($116))|0;
    $118 = (($__ob) + ($117)|0);
    $119 = HEAP32[$__oe>>2]|0;
    $120 = ($118|0)==($119|0);
    if ($120) {
     $$pre$phiZ2D = $116;$133 = $118;
     label = 29;
    } else {
     $121 = ((($119)) + -1|0);
     $122 = ($118>>>0)<($121>>>0);
     if ($122) {
      $$01$i$i10 = $118;$125 = $121;
      while(1) {
       $123 = HEAP8[$$01$i$i10>>0]|0;
       $124 = HEAP8[$125>>0]|0;
       HEAP8[$$01$i$i10>>0] = $124;
       HEAP8[$125>>0] = $123;
       $126 = ((($$01$i$i10)) + 1|0);
       $127 = ((($125)) + -1|0);
       $128 = ($126>>>0)<($127>>>0);
       if ($128) {
        $$01$i$i10 = $126;$125 = $127;
       } else {
        break;
       }
      }
     }
     $$pre = HEAP32[$__oe>>2]|0;
     $$pre$phiZ2D = $116;$133 = $$pre;
     label = 29;
    }
   }
  }
 } while(0);
 if ((label|0) == 5) {
  $25 = ___cxa_find_matching_catch()|0;
  $26 = tempRet0;
  $lpad$phi$index = $25;$lpad$phi$index2 = $26;
 }
 else if ((label|0) == 29) {
  $129 = ($__np|0)==($__ne|0);
  $130 = $__np;
  $131 = (($130) - ($$pre$phiZ2D))|0;
  $132 = (($__ob) + ($131)|0);
  $storemerge = $129 ? $133 : $132;
  HEAP32[$__op>>2] = $storemerge;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
  STACKTOP = sp;return;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx($this,$__s,$__iob,$__fl,$0,$1) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 32|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 78|0;
 $__o = sp + 36|0;
 $__op = sp + 28|0;
 $__oe = sp + 24|0;
 $2 = sp + 20|0;
 $3 = sp + 16|0;
 $4 = $__fmt;
 $5 = $4;
 HEAP32[$5>>2] = 37;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = ((($__fmt)) + 1|0);
 $9 = ((($__iob)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($8,9768,1,$10);
 $11 = (__ZNSt3__16__clocEv()|0);
 $12 = $vararg_buffer;
 $13 = $12;
 HEAP32[$13>>2] = $0;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $1;
 $16 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,22,$11,$__fmt,$vararg_buffer)|0);
 $17 = (($__nar) + ($16)|0);
 $18 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$17,$__iob)|0);
 $19 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$2>>2] = $19;
 __THREW__ = 0;
 invoke_viiiiiii(461,($__nar|0),($18|0),($17|0),($__o|0),($__op|0),($__oe|0),($2|0));
 $20 = __THREW__; __THREW__ = 0;
 $21 = $20&1;
 if ($21) {
  $26 = ___cxa_find_matching_catch()|0;
  $27 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($19)|0);
  ___resumeException($26|0);
  // unreachable;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($19)|0);
  $22 = HEAP32[$__s>>2]|0;
  HEAP32[$3>>2] = $22;
  $23 = HEAP32[$__op>>2]|0;
  $24 = HEAP32[$__oe>>2]|0;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;
  $25 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$23,$24,$__iob,$__fl)|0);
  STACKTOP = sp;return ($25|0);
 }
 return (0)|0;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0;
 var $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 20|0;
 $vararg_buffer = sp;
 $__fmt = sp + 60|0;
 $__nar = sp + 48|0;
 $__o = sp + 24|0;
 $__op = sp + 16|0;
 $__oe = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt>>0]=HEAP8[9752>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[9752+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[9752+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[9752+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[9752+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[9752+5>>0]|0;
 $2 = ((($__fmt)) + 1|0);
 $3 = ((($__iob)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($2,9760,0,$4);
 $5 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $__v;
 $6 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,12,$5,$__fmt,$vararg_buffer)|0);
 $7 = (($__nar) + ($6)|0);
 $8 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$7,$__iob)|0);
 $9 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $9;
 __THREW__ = 0;
 invoke_viiiiiii(461,($__nar|0),($8|0),($7|0),($__o|0),($__op|0),($__oe|0),($0|0));
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if ($11) {
  $16 = ___cxa_find_matching_catch()|0;
  $17 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($9)|0);
  ___resumeException($16|0);
  // unreachable;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($9)|0);
  $12 = HEAP32[$__s>>2]|0;
  HEAP32[$1>>2] = $12;
  $13 = HEAP32[$__op>>2]|0;
  $14 = HEAP32[$__oe>>2]|0;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
  $15 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$13,$14,$__iob,$__fl)|0);
  STACKTOP = sp;return ($15|0);
 }
 return (0)|0;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy($this,$__s,$__iob,$__fl,$0,$1) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 32|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 79|0;
 $__o = sp + 36|0;
 $__op = sp + 28|0;
 $__oe = sp + 24|0;
 $2 = sp + 20|0;
 $3 = sp + 16|0;
 $4 = $__fmt;
 $5 = $4;
 HEAP32[$5>>2] = 37;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = ((($__fmt)) + 1|0);
 $9 = ((($__iob)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($8,9768,0,$10);
 $11 = (__ZNSt3__16__clocEv()|0);
 $12 = $vararg_buffer;
 $13 = $12;
 HEAP32[$13>>2] = $0;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $1;
 $16 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,23,$11,$__fmt,$vararg_buffer)|0);
 $17 = (($__nar) + ($16)|0);
 $18 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$17,$__iob)|0);
 $19 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$2>>2] = $19;
 __THREW__ = 0;
 invoke_viiiiiii(461,($__nar|0),($18|0),($17|0),($__o|0),($__op|0),($__oe|0),($2|0));
 $20 = __THREW__; __THREW__ = 0;
 $21 = $20&1;
 if ($21) {
  $26 = ___cxa_find_matching_catch()|0;
  $27 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($19)|0);
  ___resumeException($26|0);
  // unreachable;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($19)|0);
  $22 = HEAP32[$__s>>2]|0;
  HEAP32[$3>>2] = $22;
  $23 = HEAP32[$__op>>2]|0;
  $24 = HEAP32[$__oe>>2]|0;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;
  $25 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$23,$24,$__iob,$__fl)|0);
  STACKTOP = sp;return ($25|0);
 }
 return (0)|0;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = +$__v;
 var $$0 = 0, $$02 = 0, $$112 = 0, $$1311 = 0, $$byval_copy = 0, $$pre = 0, $$pre8 = 0, $$pre9 = 0, $$pre9$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0, $vararg_ptr12 = 0;
 var $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 84|0;
 $vararg_buffer9 = sp + 48|0;
 $vararg_buffer5 = sp + 32|0;
 $vararg_buffer2 = sp + 24|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 146|0;
 $__nb = sp + 80|0;
 $__o = sp + 88|0;
 $__op = sp + 76|0;
 $__oe = sp + 72|0;
 $0 = sp + 68|0;
 $1 = sp + 64|0;
 $2 = $__fmt;
 $3 = $2;
 HEAP32[$3>>2] = 37;
 $4 = (($2) + 4)|0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = ((($__fmt)) + 1|0);
 $7 = ((($__iob)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (__ZNSt3__114__num_put_base14__format_floatEPcPKcj($6,9776,$8)|0);
 HEAP32[$__nb>>2] = $__nar;
 $10 = (__ZNSt3__16__clocEv()|0);
 if ($9) {
  $11 = ((($__iob)) + 8|0);
  $12 = HEAP32[$11>>2]|0;
  HEAP32[$vararg_buffer>>2] = $12;
  $vararg_ptr1 = ((($vararg_buffer)) + 8|0);
  HEAPF64[$vararg_ptr1>>3] = $__v;
  $13 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer)|0);
  $__nc$0 = $13;
 } else {
  HEAPF64[$vararg_buffer2>>3] = $__v;
  $14 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer2)|0);
  $__nc$0 = $14;
 }
 $15 = ($__nc$0|0)>(29);
 L5: do {
  if ($15) {
   __THREW__ = 0;
   $16 = (invoke_i(457)|0);
   $17 = __THREW__; __THREW__ = 0;
   $18 = $17&1;
   if ($9) {
    if (!($18)) {
     $19 = ((($__iob)) + 8|0);
     $20 = HEAP32[$19>>2]|0;
     __THREW__ = 0;
     HEAP32[$vararg_buffer5>>2] = $20;
     $vararg_ptr8 = ((($vararg_buffer5)) + 8|0);
     HEAPF64[$vararg_ptr8>>3] = $__v;
     $21 = (invoke_iiiii(462,($__nb|0),($16|0),($__fmt|0),($vararg_buffer5|0))|0);
     $22 = __THREW__; __THREW__ = 0;
     $23 = $22&1;
     if (!($23)) {
      $__nc$1 = $21;
      label = 12;
     }
    }
   } else {
    if (!($18)) {
     $26 = ((($__iob)) + 8|0);
     $27 = HEAP32[$26>>2]|0;
     __THREW__ = 0;
     HEAP32[$vararg_buffer9>>2] = $27;
     $vararg_ptr12 = ((($vararg_buffer9)) + 8|0);
     HEAPF64[$vararg_ptr12>>3] = $__v;
     $28 = (invoke_iiiii(462,($__nb|0),($16|0),($__fmt|0),($vararg_buffer9|0))|0);
     $29 = __THREW__; __THREW__ = 0;
     $30 = $29&1;
     if (!($30)) {
      $__nc$1 = $28;
      label = 12;
     }
    }
   }
   do {
    if ((label|0) == 12) {
     $31 = HEAP32[$__nb>>2]|0;
     $32 = ($31|0)==(0|0);
     if ($32) {
      __THREW__ = 0;
      invoke_v(463);
      $33 = __THREW__; __THREW__ = 0;
      $34 = $33&1;
      if ($34) {
       break;
      }
      $$pre = HEAP32[$__nb>>2]|0;
      $35 = $$pre;
     } else {
      $35 = $31;
     }
     $36 = $35;
     $38 = $35;$64 = $36;$__nc$2 = $__nc$1;
     label = 16;
     break L5;
    }
   } while(0);
   $24 = ___cxa_find_matching_catch()|0;
   $25 = tempRet0;
   $$112 = $24;$$1311 = $25;
  } else {
   $$pre8 = HEAP32[$__nb>>2]|0;
   $38 = $$pre8;$64 = 0;$__nc$2 = $__nc$0;
   label = 16;
  }
 } while(0);
 if ((label|0) == 16) {
  $37 = (($38) + ($__nc$2)|0);
  $39 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($38,$37,$__iob)|0);
  $40 = ($38|0)==($__nar|0);
  do {
   if ($40) {
    $52 = $__nar;$61 = 0;$__ob$0 = $__o;
    label = 22;
   } else {
    $41 = $__nc$2 << 1;
    $42 = (_malloc($41)|0);
    $43 = ($42|0)==(0|0);
    if ($43) {
     __THREW__ = 0;
     invoke_v(463);
     $44 = __THREW__; __THREW__ = 0;
     $45 = $44&1;
     if ($45) {
      $74 = 0;
      label = 20;
      break;
     }
     $$pre9$pre = HEAP32[$__nb>>2]|0;
     $$pre9 = $$pre9$pre;
    } else {
     $$pre9 = $38;
    }
    $48 = $42;
    $52 = $$pre9;$61 = $48;$__ob$0 = $42;
    label = 22;
   }
  } while(0);
  do {
   if ((label|0) == 22) {
    __THREW__ = 0;
    $49 = (invoke_ii(455,($__iob|0))|0);
    $50 = __THREW__; __THREW__ = 0;
    $51 = $50&1;
    if ($51) {
     $74 = $61;
     label = 20;
    } else {
     HEAP32[$0>>2] = $49;
     __THREW__ = 0;
     invoke_viiiiiii(464,($52|0),($39|0),($37|0),($__ob$0|0),($__op|0),($__oe|0),($0|0));
     $53 = __THREW__; __THREW__ = 0;
     $54 = $53&1;
     if ($54) {
      $67 = ___cxa_find_matching_catch()|0;
      $68 = tempRet0;
      (__ZNSt3__114__shared_count16__release_sharedEv($49)|0);
      $$0 = $67;$$02 = $68;$69 = $61;
      break;
     }
     (__ZNSt3__114__shared_count16__release_sharedEv($49)|0);
     $55 = HEAP32[$__s>>2]|0;
     HEAP32[$1>>2] = $55;
     $56 = HEAP32[$__op>>2]|0;
     $57 = HEAP32[$__oe>>2]|0;
     __THREW__ = 0;
     ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
     $58 = (invoke_iiiiiii(433,($$byval_copy|0),($__ob$0|0),($56|0),($57|0),($__iob|0),($__fl|0))|0);
     $59 = __THREW__; __THREW__ = 0;
     $60 = $59&1;
     if ($60) {
      $74 = $61;
      label = 20;
     } else {
      HEAP32[$__s>>2] = $58;
      $62 = ($61|0)==(0);
      if (!($62)) {
       $63 = $61;
       _free($63);
      }
      $65 = ($64|0)==(0);
      if (!($65)) {
       $66 = $64;
       _free($66);
      }
      STACKTOP = sp;return ($58|0);
     }
    }
   }
  } while(0);
  if ((label|0) == 20) {
   $46 = ___cxa_find_matching_catch()|0;
   $47 = tempRet0;
   $$0 = $46;$$02 = $47;$69 = $74;
  }
  $70 = ($69|0)==(0);
  if (!($70)) {
   $71 = $69;
   _free($71);
  }
  $72 = ($64|0)==(0);
  if ($72) {
   $$112 = $$0;$$1311 = $$02;
  } else {
   $73 = $64;
   _free($73);
   $$112 = $$0;$$1311 = $$02;
  }
 }
 ___resumeException($$112|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__114__num_put_base14__format_floatEPcPKcj($__fmtp,$__len,$__flags) {
 $__fmtp = $__fmtp|0;
 $__len = $__len|0;
 $__flags = $__flags|0;
 var $$0 = 0, $$012 = 0, $$1 = 0, $$2$lcssa = 0, $$2$ph = 0, $$23 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $specify_precision$0$off0$ph = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__flags & 2048;
 $1 = ($0|0)==(0);
 if ($1) {
  $$0 = $__fmtp;
 } else {
  $2 = ((($__fmtp)) + 1|0);
  HEAP8[$__fmtp>>0] = 43;
  $$0 = $2;
 }
 $3 = $__flags & 1024;
 $4 = ($3|0)==(0);
 if ($4) {
  $$1 = $$0;
 } else {
  $5 = ((($$0)) + 1|0);
  HEAP8[$$0>>0] = 35;
  $$1 = $5;
 }
 $6 = $__flags & 260;
 $7 = $__flags >>> 14;
 $8 = ($6|0)==(260);
 if ($8) {
  $$2$ph = $$1;$specify_precision$0$off0$ph = 0;
 } else {
  $9 = ((($$1)) + 1|0);
  HEAP8[$$1>>0] = 46;
  $10 = ((($$1)) + 2|0);
  HEAP8[$9>>0] = 42;
  $$2$ph = $10;$specify_precision$0$off0$ph = 1;
 }
 $11 = HEAP8[$__len>>0]|0;
 $12 = ($11<<24>>24)==(0);
 if ($12) {
  $$2$lcssa = $$2$ph;
 } else {
  $$012 = $__len;$$23 = $$2$ph;$15 = $11;
  while(1) {
   $13 = ((($$012)) + 1|0);
   $14 = ((($$23)) + 1|0);
   HEAP8[$$23>>0] = $15;
   $16 = HEAP8[$13>>0]|0;
   $17 = ($16<<24>>24)==(0);
   if ($17) {
    $$2$lcssa = $14;
    break;
   } else {
    $$012 = $13;$$23 = $14;$15 = $16;
   }
  }
 }
 do {
  if ((($6|0) == 256)) {
   $20 = $7 & 1;
   $21 = ($20|0)==(0);
   if ($21) {
    HEAP8[$$2$lcssa>>0] = 101;
    break;
   } else {
    HEAP8[$$2$lcssa>>0] = 69;
    break;
   }
  } else if ((($6|0) == 4)) {
   $18 = $7 & 1;
   $19 = ($18|0)==(0);
   if ($19) {
    HEAP8[$$2$lcssa>>0] = 102;
    break;
   } else {
    HEAP8[$$2$lcssa>>0] = 70;
    break;
   }
  } else {
   $22 = $7 & 1;
   $23 = ($22|0)!=(0);
   if ($8) {
    if ($23) {
     HEAP8[$$2$lcssa>>0] = 65;
     break;
    } else {
     HEAP8[$$2$lcssa>>0] = 97;
     break;
    }
   } else {
    if ($23) {
     HEAP8[$$2$lcssa>>0] = 71;
     break;
    } else {
     HEAP8[$$2$lcssa>>0] = 103;
     break;
    }
   }
  }
 } while(0);
 return ($specify_precision$0$off0$ph|0);
}
function __ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nb,$__np,$__ne,$__ob,$__op,$__oe,$__loc) {
 $__nb = $__nb|0;
 $__np = $__np|0;
 $__ne = $__ne|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__loc = $__loc|0;
 var $$01$i$i46 = 0, $$01$i$i641 = 0, $$__dg$0 = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0;
 var $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0;
 var $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0;
 var $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $__dc$043 = 0, $__dc$1 = 0, $__dg$044 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__nf$240 = 0, $__nf$240$lcssa = 0, $__nf$3 = 0, $__ns$052 = 0, $__ns$148 = 0, $__ns$2 = 0, $__p$045 = 0, $lpad$phi$index = 0, $lpad$phi$index5 = 0, $or$cond = 0, $storemerge = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__grouping = sp;
 $0 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6760)|0);
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6904)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 FUNCTION_TABLE_vii[$4 & 1023]($__grouping,$1);
 HEAP32[$__oe>>2] = $__ob;
 $5 = HEAP8[$__nb>>0]|0;
 if ((($5<<24>>24) == 43) | (($5<<24>>24) == 45)) {
  $6 = HEAP32[$0>>2]|0;
  $7 = ((($6)) + 28|0);
  $8 = HEAP32[$7>>2]|0;
  __THREW__ = 0;
  $9 = (invoke_iii($8|0,($0|0),($5|0))|0);
  $10 = __THREW__; __THREW__ = 0;
  $11 = $10&1;
  if ($11) {
   label = 8;
  } else {
   $12 = ((($__nb)) + 1|0);
   $13 = HEAP32[$__oe>>2]|0;
   $14 = ((($13)) + 1|0);
   HEAP32[$__oe>>2] = $14;
   HEAP8[$13>>0] = $9;
   $__nf$0 = $12;
   label = 10;
  }
 } else {
  $__nf$0 = $__nb;
  label = 10;
 }
 L4: do {
  if ((label|0) == 10) {
   $25 = $__ne;
   $26 = $__nf$0;
   $27 = (($25) - ($26))|0;
   $28 = ($27|0)>(1);
   L6: do {
    if ($28) {
     $30 = HEAP8[$__nf$0>>0]|0;
     $31 = ($30<<24>>24)==(48);
     if ($31) {
      $32 = ((($__nf$0)) + 1|0);
      $33 = HEAP8[$32>>0]|0;
      if ((($33<<24>>24) == 88) | (($33<<24>>24) == 120)) {
       $34 = HEAP32[$0>>2]|0;
       $35 = ((($34)) + 28|0);
       $36 = HEAP32[$35>>2]|0;
       __THREW__ = 0;
       $37 = (invoke_iii($36|0,($0|0),48)|0);
       $38 = __THREW__; __THREW__ = 0;
       $39 = $38&1;
       if ($39) {
        label = 8;
        break L4;
       }
       $40 = HEAP32[$__oe>>2]|0;
       $41 = ((($40)) + 1|0);
       HEAP32[$__oe>>2] = $41;
       HEAP8[$40>>0] = $37;
       $42 = ((($__nf$0)) + 2|0);
       $43 = HEAP8[$32>>0]|0;
       $44 = HEAP32[$0>>2]|0;
       $45 = ((($44)) + 28|0);
       $46 = HEAP32[$45>>2]|0;
       __THREW__ = 0;
       $47 = (invoke_iii($46|0,($0|0),($43|0))|0);
       $48 = __THREW__; __THREW__ = 0;
       $49 = $48&1;
       if ($49) {
        label = 8;
        break L4;
       }
       $50 = HEAP32[$__oe>>2]|0;
       $51 = ((($50)) + 1|0);
       HEAP32[$__oe>>2] = $51;
       HEAP8[$50>>0] = $47;
       $52 = ($42>>>0)<($__ne>>>0);
       if ($52) {
        $__ns$052 = $42;
        while(1) {
         $53 = HEAP8[$__ns$052>>0]|0;
         __THREW__ = 0;
         $54 = (invoke_i(457)|0);
         $55 = __THREW__; __THREW__ = 0;
         $56 = $55&1;
         if ($56) {
          break;
         }
         $57 = $53 << 24 >> 24;
         __THREW__ = 0;
         $58 = (invoke_iii(465,($57|0),($54|0))|0);
         $59 = __THREW__; __THREW__ = 0;
         $60 = $59&1;
         if ($60) {
          break;
         }
         $61 = ($58|0)==(0);
         if ($61) {
          $__nf$1 = $42;$__ns$2 = $__ns$052;
          break L6;
         }
         $62 = ((($__ns$052)) + 1|0);
         $63 = ($62>>>0)<($__ne>>>0);
         if ($63) {
          $__ns$052 = $62;
         } else {
          $__nf$1 = $42;$__ns$2 = $62;
          break L6;
         }
        }
        $21 = ___cxa_find_matching_catch()|0;
        $22 = tempRet0;
        $lpad$phi$index = $21;$lpad$phi$index5 = $22;
        break L4;
       } else {
        $__nf$1 = $42;$__ns$2 = $42;
       }
      } else {
       label = 11;
      }
     } else {
      label = 11;
     }
    } else {
     label = 11;
    }
   } while(0);
   L18: do {
    if ((label|0) == 11) {
     $29 = ($__nf$0>>>0)<($__ne>>>0);
     if ($29) {
      $__ns$148 = $__nf$0;
      while(1) {
       $64 = HEAP8[$__ns$148>>0]|0;
       __THREW__ = 0;
       $65 = (invoke_i(457)|0);
       $66 = __THREW__; __THREW__ = 0;
       $67 = $66&1;
       if ($67) {
        break;
       }
       $68 = $64 << 24 >> 24;
       __THREW__ = 0;
       $69 = (invoke_iii(466,($68|0),($65|0))|0);
       $70 = __THREW__; __THREW__ = 0;
       $71 = $70&1;
       if ($71) {
        break;
       }
       $72 = ($69|0)==(0);
       if ($72) {
        $__nf$1 = $__nf$0;$__ns$2 = $__ns$148;
        break L18;
       }
       $73 = ((($__ns$148)) + 1|0);
       $74 = ($73>>>0)<($__ne>>>0);
       if ($74) {
        $__ns$148 = $73;
       } else {
        $__nf$1 = $__nf$0;$__ns$2 = $73;
        break L18;
       }
      }
      $19 = ___cxa_find_matching_catch()|0;
      $20 = tempRet0;
      $lpad$phi$index = $19;$lpad$phi$index5 = $20;
      break L4;
     } else {
      $__nf$1 = $__nf$0;$__ns$2 = $__nf$0;
     }
    }
   } while(0);
   $75 = HEAP8[$__grouping>>0]|0;
   $76 = $75 & 1;
   $77 = ($76<<24>>24)==(0);
   $78 = ((($__grouping)) + 4|0);
   $79 = HEAP32[$78>>2]|0;
   $80 = $75&255;
   $81 = $80 >>> 1;
   $82 = $77 ? $81 : $79;
   $83 = ($82|0)==(0);
   if ($83) {
    $84 = HEAP32[$__oe>>2]|0;
    $85 = HEAP32[$0>>2]|0;
    $86 = ((($85)) + 32|0);
    $87 = HEAP32[$86>>2]|0;
    __THREW__ = 0;
    (invoke_iiiii($87|0,($0|0),($__nf$1|0),($__ns$2|0),($84|0))|0);
    $88 = __THREW__; __THREW__ = 0;
    $89 = $88&1;
    if ($89) {
     label = 8;
     break;
    }
    $90 = $__ns$2;
    $91 = $__nf$1;
    $92 = (($90) - ($91))|0;
    $93 = HEAP32[$__oe>>2]|0;
    $94 = (($93) + ($92)|0);
    HEAP32[$__oe>>2] = $94;
    $$pre$phiZ2D = $0;
   } else {
    $95 = ($__nf$1|0)==($__ns$2|0);
    if (!($95)) {
     $96 = ((($__ns$2)) + -1|0);
     $97 = ($__nf$1>>>0)<($96>>>0);
     if ($97) {
      $$01$i$i46 = $__nf$1;$100 = $96;
      while(1) {
       $98 = HEAP8[$$01$i$i46>>0]|0;
       $99 = HEAP8[$100>>0]|0;
       HEAP8[$$01$i$i46>>0] = $99;
       HEAP8[$100>>0] = $98;
       $101 = ((($$01$i$i46)) + 1|0);
       $102 = ((($100)) + -1|0);
       $103 = ($101>>>0)<($102>>>0);
       if ($103) {
        $$01$i$i46 = $101;$100 = $102;
       } else {
        break;
       }
      }
     }
    }
    $104 = HEAP32[$1>>2]|0;
    $105 = ((($104)) + 16|0);
    $106 = HEAP32[$105>>2]|0;
    __THREW__ = 0;
    $107 = (invoke_ii($106|0,($1|0))|0);
    $108 = __THREW__; __THREW__ = 0;
    $109 = $108&1;
    if ($109) {
     label = 8;
     break;
    }
    $110 = ((($__grouping)) + 8|0);
    $111 = ((($__grouping)) + 1|0);
    $112 = ($__nf$1>>>0)<($__ns$2>>>0);
    L37: do {
     if ($112) {
      $__dc$043 = 0;$__dg$044 = 0;$__p$045 = $__nf$1;
      while(1) {
       $113 = HEAP8[$__grouping>>0]|0;
       $114 = $113 & 1;
       $115 = ($114<<24>>24)==(0);
       $116 = HEAP32[$110>>2]|0;
       $117 = $115 ? $111 : $116;
       $118 = (($117) + ($__dg$044)|0);
       $119 = HEAP8[$118>>0]|0;
       $120 = ($119<<24>>24)>(0);
       $121 = $119 << 24 >> 24;
       $122 = ($__dc$043|0)==($121|0);
       $or$cond = $120 & $122;
       if ($or$cond) {
        $123 = HEAP32[$__oe>>2]|0;
        $124 = ((($123)) + 1|0);
        HEAP32[$__oe>>2] = $124;
        HEAP8[$123>>0] = $107;
        $125 = HEAP8[$__grouping>>0]|0;
        $126 = $125 & 1;
        $127 = ($126<<24>>24)==(0);
        $128 = HEAP32[$78>>2]|0;
        $129 = $125&255;
        $130 = $129 >>> 1;
        $131 = $127 ? $130 : $128;
        $132 = (($131) + -1)|0;
        $133 = ($__dg$044>>>0)<($132>>>0);
        $134 = $133&1;
        $$__dg$0 = (($134) + ($__dg$044))|0;
        $__dc$1 = 0;$__dg$1 = $$__dg$0;
       } else {
        $__dc$1 = $__dc$043;$__dg$1 = $__dg$044;
       }
       $135 = HEAP8[$__p$045>>0]|0;
       $136 = HEAP32[$0>>2]|0;
       $137 = ((($136)) + 28|0);
       $138 = HEAP32[$137>>2]|0;
       __THREW__ = 0;
       $139 = (invoke_iii($138|0,($0|0),($135|0))|0);
       $140 = __THREW__; __THREW__ = 0;
       $141 = $140&1;
       if ($141) {
        break;
       }
       $142 = HEAP32[$__oe>>2]|0;
       $143 = ((($142)) + 1|0);
       HEAP32[$__oe>>2] = $143;
       HEAP8[$142>>0] = $139;
       $144 = (($__dc$1) + 1)|0;
       $145 = ((($__p$045)) + 1|0);
       $146 = ($145>>>0)<($__ns$2>>>0);
       if ($146) {
        $__dc$043 = $144;$__dg$044 = $__dg$1;$__p$045 = $145;
       } else {
        break L37;
       }
      }
      $17 = ___cxa_find_matching_catch()|0;
      $18 = tempRet0;
      $lpad$phi$index = $17;$lpad$phi$index5 = $18;
      break L4;
     }
    } while(0);
    $147 = $__nf$1;
    $148 = $__nb;
    $149 = (($147) - ($148))|0;
    $150 = (($__ob) + ($149)|0);
    $151 = HEAP32[$__oe>>2]|0;
    $152 = ($150|0)==($151|0);
    if ($152) {
     $$pre$phiZ2D = $0;
    } else {
     $153 = ((($151)) + -1|0);
     $154 = ($150>>>0)<($153>>>0);
     if ($154) {
      $$01$i$i641 = $150;$158 = $153;
      while(1) {
       $156 = HEAP8[$$01$i$i641>>0]|0;
       $157 = HEAP8[$158>>0]|0;
       HEAP8[$$01$i$i641>>0] = $157;
       HEAP8[$158>>0] = $156;
       $159 = ((($$01$i$i641)) + 1|0);
       $160 = ((($158)) + -1|0);
       $161 = ($159>>>0)<($160>>>0);
       if ($161) {
        $$01$i$i641 = $159;$158 = $160;
       } else {
        $$pre$phiZ2D = $0;
        break;
       }
      }
     } else {
      $$pre$phiZ2D = $0;
     }
    }
   }
   $155 = ($__ns$2>>>0)<($__ne>>>0);
   L50: do {
    if ($155) {
     $__nf$240 = $__ns$2;
     while(1) {
      $162 = HEAP8[$__nf$240>>0]|0;
      $163 = ($162<<24>>24)==(46);
      if ($163) {
       $__nf$240$lcssa = $__nf$240;
       break;
      }
      $173 = HEAP32[$$pre$phiZ2D>>2]|0;
      $174 = ((($173)) + 28|0);
      $175 = HEAP32[$174>>2]|0;
      __THREW__ = 0;
      $176 = (invoke_iii($175|0,($0|0),($162|0))|0);
      $177 = __THREW__; __THREW__ = 0;
      $178 = $177&1;
      if ($178) {
       label = 4;
       break;
      }
      $179 = HEAP32[$__oe>>2]|0;
      $180 = ((($179)) + 1|0);
      HEAP32[$__oe>>2] = $180;
      HEAP8[$179>>0] = $176;
      $181 = ((($__nf$240)) + 1|0);
      $182 = ($181>>>0)<($__ne>>>0);
      if ($182) {
       $__nf$240 = $181;
      } else {
       $__nf$3 = $181;
       break L50;
      }
     }
     if ((label|0) == 4) {
      $15 = ___cxa_find_matching_catch()|0;
      $16 = tempRet0;
      $lpad$phi$index = $15;$lpad$phi$index5 = $16;
      break L4;
     }
     $164 = HEAP32[$1>>2]|0;
     $165 = ((($164)) + 12|0);
     $166 = HEAP32[$165>>2]|0;
     __THREW__ = 0;
     $167 = (invoke_ii($166|0,($1|0))|0);
     $168 = __THREW__; __THREW__ = 0;
     $169 = $168&1;
     if ($169) {
      label = 8;
      break L4;
     }
     $170 = HEAP32[$__oe>>2]|0;
     $171 = ((($170)) + 1|0);
     HEAP32[$__oe>>2] = $171;
     HEAP8[$170>>0] = $167;
     $172 = ((($__nf$240$lcssa)) + 1|0);
     $__nf$3 = $172;
    } else {
     $__nf$3 = $__ns$2;
    }
   } while(0);
   $183 = HEAP32[$__oe>>2]|0;
   $184 = HEAP32[$0>>2]|0;
   $185 = ((($184)) + 32|0);
   $186 = HEAP32[$185>>2]|0;
   __THREW__ = 0;
   (invoke_iiiii($186|0,($0|0),($__nf$3|0),($__ne|0),($183|0))|0);
   $187 = __THREW__; __THREW__ = 0;
   $188 = $187&1;
   if ($188) {
    label = 8;
   } else {
    $189 = $__nf$3;
    $190 = (($25) - ($189))|0;
    $191 = HEAP32[$__oe>>2]|0;
    $192 = (($191) + ($190)|0);
    HEAP32[$__oe>>2] = $192;
    $193 = ($__np|0)==($__ne|0);
    $194 = $__np;
    $195 = $__nb;
    $196 = (($194) - ($195))|0;
    $197 = (($__ob) + ($196)|0);
    $storemerge = $193 ? $192 : $197;
    HEAP32[$__op>>2] = $storemerge;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 8) {
  $23 = ___cxa_find_matching_catch()|0;
  $24 = tempRet0;
  $lpad$phi$index = $23;$lpad$phi$index5 = $24;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = +$__v;
 var $$0 = 0, $$02 = 0, $$112 = 0, $$1311 = 0, $$byval_copy = 0, $$pre = 0, $$pre8 = 0, $$pre9 = 0, $$pre9$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 76|0;
 $vararg_buffer9 = sp + 48|0;
 $vararg_buffer5 = sp + 32|0;
 $vararg_buffer2 = sp + 24|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 138|0;
 $__nb = sp + 72|0;
 $__o = sp + 80|0;
 $__op = sp + 68|0;
 $__oe = sp + 64|0;
 $0 = sp + 60|0;
 $1 = sp + 56|0;
 $2 = $__fmt;
 $3 = $2;
 HEAP32[$3>>2] = 37;
 $4 = (($2) + 4)|0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = ((($__fmt)) + 1|0);
 $7 = ((($__iob)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (__ZNSt3__114__num_put_base14__format_floatEPcPKcj($6,9784,$8)|0);
 HEAP32[$__nb>>2] = $__nar;
 $10 = (__ZNSt3__16__clocEv()|0);
 if ($9) {
  $11 = ((($__iob)) + 8|0);
  $12 = HEAP32[$11>>2]|0;
  HEAP32[$vararg_buffer>>2] = $12;
  $vararg_ptr1 = ((($vararg_buffer)) + 8|0);
  HEAPF64[$vararg_ptr1>>3] = $__v;
  $13 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer)|0);
  $__nc$0 = $13;
 } else {
  HEAPF64[$vararg_buffer2>>3] = $__v;
  $14 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer2)|0);
  $__nc$0 = $14;
 }
 $15 = ($__nc$0|0)>(29);
 L5: do {
  if ($15) {
   __THREW__ = 0;
   $16 = (invoke_i(457)|0);
   $17 = __THREW__; __THREW__ = 0;
   $18 = $17&1;
   if ($9) {
    if (!($18)) {
     $19 = ((($__iob)) + 8|0);
     $20 = HEAP32[$19>>2]|0;
     __THREW__ = 0;
     HEAP32[$vararg_buffer5>>2] = $20;
     $vararg_ptr8 = ((($vararg_buffer5)) + 8|0);
     HEAPF64[$vararg_ptr8>>3] = $__v;
     $21 = (invoke_iiiii(462,($__nb|0),($16|0),($__fmt|0),($vararg_buffer5|0))|0);
     $22 = __THREW__; __THREW__ = 0;
     $23 = $22&1;
     if (!($23)) {
      $__nc$1 = $21;
      label = 12;
     }
    }
   } else {
    if (!($18)) {
     __THREW__ = 0;
     HEAPF64[$vararg_buffer9>>3] = $__v;
     $26 = (invoke_iiiii(462,($__nb|0),($16|0),($__fmt|0),($vararg_buffer9|0))|0);
     $27 = __THREW__; __THREW__ = 0;
     $28 = $27&1;
     if (!($28)) {
      $__nc$1 = $26;
      label = 12;
     }
    }
   }
   do {
    if ((label|0) == 12) {
     $29 = HEAP32[$__nb>>2]|0;
     $30 = ($29|0)==(0|0);
     if ($30) {
      __THREW__ = 0;
      invoke_v(463);
      $31 = __THREW__; __THREW__ = 0;
      $32 = $31&1;
      if ($32) {
       break;
      }
      $$pre = HEAP32[$__nb>>2]|0;
      $33 = $$pre;
     } else {
      $33 = $29;
     }
     $34 = $33;
     $36 = $33;$62 = $34;$__nc$2 = $__nc$1;
     label = 16;
     break L5;
    }
   } while(0);
   $24 = ___cxa_find_matching_catch()|0;
   $25 = tempRet0;
   $$112 = $24;$$1311 = $25;
  } else {
   $$pre8 = HEAP32[$__nb>>2]|0;
   $36 = $$pre8;$62 = 0;$__nc$2 = $__nc$0;
   label = 16;
  }
 } while(0);
 if ((label|0) == 16) {
  $35 = (($36) + ($__nc$2)|0);
  $37 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($36,$35,$__iob)|0);
  $38 = ($36|0)==($__nar|0);
  do {
   if ($38) {
    $50 = $__nar;$59 = 0;$__ob$0 = $__o;
    label = 22;
   } else {
    $39 = $__nc$2 << 1;
    $40 = (_malloc($39)|0);
    $41 = ($40|0)==(0|0);
    if ($41) {
     __THREW__ = 0;
     invoke_v(463);
     $42 = __THREW__; __THREW__ = 0;
     $43 = $42&1;
     if ($43) {
      $72 = 0;
      label = 20;
      break;
     }
     $$pre9$pre = HEAP32[$__nb>>2]|0;
     $$pre9 = $$pre9$pre;
    } else {
     $$pre9 = $36;
    }
    $46 = $40;
    $50 = $$pre9;$59 = $46;$__ob$0 = $40;
    label = 22;
   }
  } while(0);
  do {
   if ((label|0) == 22) {
    __THREW__ = 0;
    $47 = (invoke_ii(455,($__iob|0))|0);
    $48 = __THREW__; __THREW__ = 0;
    $49 = $48&1;
    if ($49) {
     $72 = $59;
     label = 20;
    } else {
     HEAP32[$0>>2] = $47;
     __THREW__ = 0;
     invoke_viiiiiii(464,($50|0),($37|0),($35|0),($__ob$0|0),($__op|0),($__oe|0),($0|0));
     $51 = __THREW__; __THREW__ = 0;
     $52 = $51&1;
     if ($52) {
      $65 = ___cxa_find_matching_catch()|0;
      $66 = tempRet0;
      (__ZNSt3__114__shared_count16__release_sharedEv($47)|0);
      $$0 = $65;$$02 = $66;$67 = $59;
      break;
     }
     (__ZNSt3__114__shared_count16__release_sharedEv($47)|0);
     $53 = HEAP32[$__s>>2]|0;
     HEAP32[$1>>2] = $53;
     $54 = HEAP32[$__op>>2]|0;
     $55 = HEAP32[$__oe>>2]|0;
     __THREW__ = 0;
     ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
     $56 = (invoke_iiiiiii(433,($$byval_copy|0),($__ob$0|0),($54|0),($55|0),($__iob|0),($__fl|0))|0);
     $57 = __THREW__; __THREW__ = 0;
     $58 = $57&1;
     if ($58) {
      $72 = $59;
      label = 20;
     } else {
      HEAP32[$__s>>2] = $56;
      $60 = ($59|0)==(0);
      if (!($60)) {
       $61 = $59;
       _free($61);
      }
      $63 = ($62|0)==(0);
      if (!($63)) {
       $64 = $62;
       _free($64);
      }
      STACKTOP = sp;return ($56|0);
     }
    }
   }
  } while(0);
  if ((label|0) == 20) {
   $44 = ___cxa_find_matching_catch()|0;
   $45 = tempRet0;
   $$0 = $44;$$02 = $45;$67 = $72;
  }
  $68 = ($67|0)==(0);
  if (!($68)) {
   $69 = $67;
   _free($69);
  }
  $70 = ($62|0)==(0);
  if ($70) {
   $$112 = $$0;$$1311 = $$02;
  } else {
   $71 = $62;
   _free($71);
   $$112 = $$0;$$1311 = $$02;
  }
 }
 ___resumeException($$112|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__op$0 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 12|0;
 $vararg_buffer = sp;
 $__fmt = sp + 76|0;
 $__nar = sp + 56|0;
 $__o = sp + 16|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt>>0]=HEAP8[9792>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[9792+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[9792+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[9792+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[9792+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[9792+5>>0]|0;
 $2 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $__v;
 $3 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,20,$2,$__fmt,$vararg_buffer)|0);
 $4 = (($__nar) + ($3)|0);
 $5 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$4,$__iob)|0);
 $6 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $6;
 __THREW__ = 0;
 $7 = (invoke_iii(452,($0|0),(6760|0))|0);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if ($9) {
  $21 = ___cxa_find_matching_catch()|0;
  $22 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($6)|0);
  ___resumeException($21|0);
  // unreachable;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($6)|0);
  $10 = HEAP32[$7>>2]|0;
  $11 = ((($10)) + 32|0);
  $12 = HEAP32[$11>>2]|0;
  (FUNCTION_TABLE_iiiii[$12 & 1023]($7,$__nar,$4,$__o)|0);
  $13 = (($__o) + ($3)|0);
  $14 = ($5|0)==($4|0);
  $15 = $__nar;
  $16 = $5;
  $17 = (($16) - ($15))|0;
  $18 = (($__o) + ($17)|0);
  $__op$0 = $14 ? $13 : $18;
  $19 = HEAP32[$__s>>2]|0;
  HEAP32[$1>>2] = $19;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
  $20 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$__op$0,$13,$__iob,$__fl)|0);
  STACKTOP = sp;return ($20|0);
 }
 return (0)|0;
}
function __ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$0 = 0, $$0$i$i = 0, $$01 = 0, $$byval_copy = 0, $$ph = 0, $$pre = 0, $$pre$phi4Z2D = 0, $$pre2 = 0, $$pre2$val = 0, $$pre2$val5 = 0, $$pre3 = 0, $$sroa$0$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__nm = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 20|0;
 $0 = sp + 16|0;
 $1 = sp + 12|0;
 $__nm = sp;
 $2 = ((($__iob)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 & 1;
 $5 = ($4|0)==(0);
 L1: do {
  if ($5) {
   $6 = HEAP32[$this>>2]|0;
   $7 = ((($6)) + 24|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = HEAP32[$__s>>2]|0;
   HEAP32[$0>>2] = $9;
   $10 = $__v&1;
   ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
   $11 = (FUNCTION_TABLE_iiiiii[$8 & 1023]($this,$$byval_copy,$__iob,$__fl,$10)|0);
   $$sroa$0$0 = $11;
  } else {
   $12 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
   HEAP32[$1>>2] = $12;
   __THREW__ = 0;
   $13 = (invoke_iii(452,($1|0),(6912|0))|0);
   $14 = __THREW__; __THREW__ = 0;
   $15 = $14&1;
   L4: do {
    if ($15) {
     $63 = ___cxa_find_matching_catch()|0;
     $64 = tempRet0;
     (__ZNSt3__114__shared_count16__release_sharedEv($12)|0);
     $$0 = $64;$$01 = $63;
    } else {
     (__ZNSt3__114__shared_count16__release_sharedEv($12)|0);
     $16 = HEAP32[$13>>2]|0;
     if ($__v) {
      $17 = ((($16)) + 24|0);
      $18 = HEAP32[$17>>2]|0;
      FUNCTION_TABLE_vii[$18 & 1023]($__nm,$13);
     } else {
      $19 = ((($16)) + 28|0);
      $20 = HEAP32[$19>>2]|0;
      FUNCTION_TABLE_vii[$20 & 1023]($__nm,$13);
     }
     $21 = HEAP8[$__nm>>0]|0;
     $22 = $21 & 1;
     $23 = ($22<<24>>24)==(0);
     $24 = ((($__nm)) + 8|0);
     $25 = HEAP32[$24>>2]|0;
     $$pre3 = ((($__nm)) + 4|0);
     $26 = ((($__nm)) + 4|0);
     $$pre2 = ((($__nm)) + 8|0);
     $$pre$phi4Z2D = $23 ? $26 : $$pre3;
     $$ph = $23 ? $26 : $25;
     $27 = $21 & 1;
     $28 = ($27<<24>>24)==(0);
     $$pre2$val5 = HEAP32[$$pre2>>2]|0;
     $29 = HEAP32[$$pre$phi4Z2D>>2]|0;
     $30 = $21&255;
     $31 = $30 >>> 1;
     $32 = $28 ? $$pre$phi4Z2D : $$pre2$val5;
     $33 = $28 ? $31 : $29;
     $34 = (($32) + ($33<<2)|0);
     $35 = ($$ph|0)==($34|0);
     L10: do {
      if (!($35)) {
       $37 = $$ph;
       while(1) {
        $36 = HEAP32[$37>>2]|0;
        $38 = HEAP32[$__s>>2]|0;
        $39 = ($38|0)==(0|0);
        if (!($39)) {
         $40 = ((($38)) + 24|0);
         $41 = HEAP32[$40>>2]|0;
         $42 = ((($38)) + 28|0);
         $43 = HEAP32[$42>>2]|0;
         $44 = ($41|0)==($43|0);
         if ($44) {
          $45 = HEAP32[$38>>2]|0;
          $46 = ((($45)) + 52|0);
          $47 = HEAP32[$46>>2]|0;
          __THREW__ = 0;
          $48 = (invoke_iii($47|0,($38|0),($36|0))|0);
          $49 = __THREW__; __THREW__ = 0;
          $50 = $49&1;
          if ($50) {
           break;
          } else {
           $$0$i$i = $48;
          }
         } else {
          $51 = ((($41)) + 4|0);
          HEAP32[$40>>2] = $51;
          HEAP32[$41>>2] = $36;
          $$0$i$i = $36;
         }
         $52 = ($$0$i$i|0)==(-1);
         if ($52) {
          HEAP32[$__s>>2] = 0;
         }
        }
        $53 = ((($37)) + 4|0);
        $$pre = HEAP8[$__nm>>0]|0;
        $54 = $$pre & 1;
        $55 = ($54<<24>>24)==(0);
        $$pre2$val = HEAP32[$$pre2>>2]|0;
        $56 = HEAP32[$$pre$phi4Z2D>>2]|0;
        $57 = $$pre&255;
        $58 = $57 >>> 1;
        $59 = $55 ? $$pre$phi4Z2D : $$pre2$val;
        $60 = $55 ? $58 : $56;
        $61 = (($59) + ($60<<2)|0);
        $62 = ($53|0)==($61|0);
        if ($62) {
         break L10;
        } else {
         $37 = $53;
        }
       }
       $65 = ___cxa_find_matching_catch()|0;
       $66 = tempRet0;
       __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__nm);
       $$0 = $66;$$01 = $65;
       break L4;
      }
     } while(0);
     $67 = HEAP32[$__s>>2]|0;
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__nm);
     $$sroa$0$0 = $67;
     break L1;
    }
   } while(0);
   ___resumeException($$01|0);
   // unreachable;
  }
 } while(0);
 STACKTOP = sp;return ($$sroa$0$0|0);
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0;
 var $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 104|0;
 $vararg_buffer = sp;
 $__fmt = sp + 120|0;
 $__nar = sp + 108|0;
 $__o = sp + 20|0;
 $__op = sp + 16|0;
 $__oe = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt>>0]=HEAP8[9752>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[9752+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[9752+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[9752+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[9752+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[9752+5>>0]|0;
 $2 = ((($__fmt)) + 1|0);
 $3 = ((($__iob)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($2,9760,1,$4);
 $5 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $__v;
 $6 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,12,$5,$__fmt,$vararg_buffer)|0);
 $7 = (($__nar) + ($6)|0);
 $8 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$7,$__iob)|0);
 $9 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $9;
 __THREW__ = 0;
 invoke_viiiiiii(467,($__nar|0),($8|0),($7|0),($__o|0),($__op|0),($__oe|0),($0|0));
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if ($11) {
  $16 = ___cxa_find_matching_catch()|0;
  $17 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($9)|0);
  ___resumeException($16|0);
  // unreachable;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($9)|0);
  $12 = HEAP32[$__s>>2]|0;
  HEAP32[$1>>2] = $12;
  $13 = HEAP32[$__op>>2]|0;
  $14 = HEAP32[$__oe>>2]|0;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
  $15 = (__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$13,$14,$__iob,$__fl)|0);
  STACKTOP = sp;return ($15|0);
 }
 return (0)|0;
}
function __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nb,$__np,$__ne,$__ob,$__op,$__oe,$__loc) {
 $__nb = $__nb|0;
 $__np = $__np|0;
 $__ne = $__ne|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__loc = $__loc|0;
 var $$01$i$i413 = 0, $$01$i$i9 = 0, $$__dg$0 = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dc$010 = 0, $__dc$1 = 0;
 var $__dg$011 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__p$012 = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $or$cond = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__grouping = sp;
 $0 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6752)|0);
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6912)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 FUNCTION_TABLE_vii[$4 & 1023]($__grouping,$1);
 $5 = HEAP8[$__grouping>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 $8 = ((($__grouping)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = $5&255;
 $11 = $10 >>> 1;
 $12 = $7 ? $11 : $9;
 $13 = ($12|0)==(0);
 L1: do {
  if ($13) {
   $14 = HEAP32[$0>>2]|0;
   $15 = ((($14)) + 48|0);
   $16 = HEAP32[$15>>2]|0;
   __THREW__ = 0;
   (invoke_iiiii($16|0,($0|0),($__nb|0),($__ne|0),($__ob|0))|0);
   $17 = __THREW__; __THREW__ = 0;
   $18 = $17&1;
   if ($18) {
    label = 5;
   } else {
    $19 = $__ne;
    $20 = $__nb;
    $21 = (($19) - ($20))|0;
    $22 = (($__ob) + ($21<<2)|0);
    HEAP32[$__oe>>2] = $22;
    $$pre$phiZ2D = $20;$133 = $22;
    label = 28;
   }
  } else {
   HEAP32[$__oe>>2] = $__ob;
   $27 = HEAP8[$__nb>>0]|0;
   if ((($27<<24>>24) == 43) | (($27<<24>>24) == 45)) {
    $28 = HEAP32[$0>>2]|0;
    $29 = ((($28)) + 44|0);
    $30 = HEAP32[$29>>2]|0;
    __THREW__ = 0;
    $31 = (invoke_iii($30|0,($0|0),($27|0))|0);
    $32 = __THREW__; __THREW__ = 0;
    $33 = $32&1;
    if ($33) {
     label = 5;
     break;
    }
    $34 = ((($__nb)) + 1|0);
    $35 = HEAP32[$__oe>>2]|0;
    $36 = ((($35)) + 4|0);
    HEAP32[$__oe>>2] = $36;
    HEAP32[$35>>2] = $31;
    $__nf$0 = $34;
   } else {
    $__nf$0 = $__nb;
   }
   $37 = $__ne;
   $38 = $__nf$0;
   $39 = (($37) - ($38))|0;
   $40 = ($39|0)>(1);
   if ($40) {
    $41 = HEAP8[$__nf$0>>0]|0;
    $42 = ($41<<24>>24)==(48);
    if ($42) {
     $43 = ((($__nf$0)) + 1|0);
     $44 = HEAP8[$43>>0]|0;
     if ((($44<<24>>24) == 88) | (($44<<24>>24) == 120)) {
      $45 = HEAP32[$0>>2]|0;
      $46 = ((($45)) + 44|0);
      $47 = HEAP32[$46>>2]|0;
      __THREW__ = 0;
      $48 = (invoke_iii($47|0,($0|0),48)|0);
      $49 = __THREW__; __THREW__ = 0;
      $50 = $49&1;
      if ($50) {
       label = 5;
       break;
      }
      $51 = HEAP32[$__oe>>2]|0;
      $52 = ((($51)) + 4|0);
      HEAP32[$__oe>>2] = $52;
      HEAP32[$51>>2] = $48;
      $53 = HEAP8[$43>>0]|0;
      $54 = HEAP32[$0>>2]|0;
      $55 = ((($54)) + 44|0);
      $56 = HEAP32[$55>>2]|0;
      __THREW__ = 0;
      $57 = (invoke_iii($56|0,($0|0),($53|0))|0);
      $58 = __THREW__; __THREW__ = 0;
      $59 = $58&1;
      if ($59) {
       label = 5;
       break;
      }
      $60 = ((($__nf$0)) + 2|0);
      $61 = HEAP32[$__oe>>2]|0;
      $62 = ((($61)) + 4|0);
      HEAP32[$__oe>>2] = $62;
      HEAP32[$61>>2] = $57;
      $__nf$1 = $60;
     } else {
      $__nf$1 = $__nf$0;
     }
    } else {
     $__nf$1 = $__nf$0;
    }
   } else {
    $__nf$1 = $__nf$0;
   }
   $63 = ($__nf$1|0)==($__ne|0);
   if (!($63)) {
    $64 = ((($__ne)) + -1|0);
    $65 = ($__nf$1>>>0)<($64>>>0);
    if ($65) {
     $$01$i$i413 = $__nf$1;$68 = $64;
     while(1) {
      $66 = HEAP8[$$01$i$i413>>0]|0;
      $67 = HEAP8[$68>>0]|0;
      HEAP8[$$01$i$i413>>0] = $67;
      HEAP8[$68>>0] = $66;
      $69 = ((($$01$i$i413)) + 1|0);
      $70 = ((($68)) + -1|0);
      $71 = ($69>>>0)<($70>>>0);
      if ($71) {
       $$01$i$i413 = $69;$68 = $70;
      } else {
       break;
      }
     }
    }
   }
   $72 = HEAP32[$1>>2]|0;
   $73 = ((($72)) + 16|0);
   $74 = HEAP32[$73>>2]|0;
   __THREW__ = 0;
   $75 = (invoke_ii($74|0,($1|0))|0);
   $76 = __THREW__; __THREW__ = 0;
   $77 = $76&1;
   if ($77) {
    label = 5;
   } else {
    $78 = ((($__grouping)) + 8|0);
    $79 = ((($__grouping)) + 1|0);
    $80 = ($__nf$1>>>0)<($__ne>>>0);
    L20: do {
     if ($80) {
      $__dc$010 = 0;$__dg$011 = 0;$__p$012 = $__nf$1;
      while(1) {
       $81 = HEAP8[$__grouping>>0]|0;
       $82 = $81 & 1;
       $83 = ($82<<24>>24)==(0);
       $84 = HEAP32[$78>>2]|0;
       $85 = $83 ? $79 : $84;
       $86 = (($85) + ($__dg$011)|0);
       $87 = HEAP8[$86>>0]|0;
       $88 = ($87<<24>>24)!=(0);
       $89 = $87 << 24 >> 24;
       $90 = ($__dc$010|0)==($89|0);
       $or$cond = $88 & $90;
       if ($or$cond) {
        $91 = HEAP32[$__oe>>2]|0;
        $92 = ((($91)) + 4|0);
        HEAP32[$__oe>>2] = $92;
        HEAP32[$91>>2] = $75;
        $93 = HEAP8[$__grouping>>0]|0;
        $94 = $93 & 1;
        $95 = ($94<<24>>24)==(0);
        $96 = HEAP32[$8>>2]|0;
        $97 = $93&255;
        $98 = $97 >>> 1;
        $99 = $95 ? $98 : $96;
        $100 = (($99) + -1)|0;
        $101 = ($__dg$011>>>0)<($100>>>0);
        $102 = $101&1;
        $$__dg$0 = (($102) + ($__dg$011))|0;
        $__dc$1 = 0;$__dg$1 = $$__dg$0;
       } else {
        $__dc$1 = $__dc$010;$__dg$1 = $__dg$011;
       }
       $103 = HEAP8[$__p$012>>0]|0;
       $104 = HEAP32[$0>>2]|0;
       $105 = ((($104)) + 44|0);
       $106 = HEAP32[$105>>2]|0;
       __THREW__ = 0;
       $107 = (invoke_iii($106|0,($0|0),($103|0))|0);
       $108 = __THREW__; __THREW__ = 0;
       $109 = $108&1;
       if ($109) {
        break;
       }
       $110 = HEAP32[$__oe>>2]|0;
       $111 = ((($110)) + 4|0);
       HEAP32[$__oe>>2] = $111;
       HEAP32[$110>>2] = $107;
       $112 = (($__dc$1) + 1)|0;
       $113 = ((($__p$012)) + 1|0);
       $114 = ($113>>>0)<($__ne>>>0);
       if ($114) {
        $__dc$010 = $112;$__dg$011 = $__dg$1;$__p$012 = $113;
       } else {
        break L20;
       }
      }
      $23 = ___cxa_find_matching_catch()|0;
      $24 = tempRet0;
      $lpad$phi$index = $23;$lpad$phi$index2 = $24;
      break L1;
     }
    } while(0);
    $115 = $__nf$1;
    $116 = $__nb;
    $117 = (($115) - ($116))|0;
    $118 = (($__ob) + ($117<<2)|0);
    $119 = HEAP32[$__oe>>2]|0;
    $120 = ($118|0)==($119|0);
    if ($120) {
     $$pre$phiZ2D = $116;$133 = $118;
     label = 28;
    } else {
     $121 = ((($119)) + -4|0);
     $122 = ($118>>>0)<($121>>>0);
     if ($122) {
      $$01$i$i9 = $118;$125 = $121;
      while(1) {
       $123 = HEAP32[$$01$i$i9>>2]|0;
       $124 = HEAP32[$125>>2]|0;
       HEAP32[$$01$i$i9>>2] = $124;
       HEAP32[$125>>2] = $123;
       $126 = ((($$01$i$i9)) + 4|0);
       $127 = ((($125)) + -4|0);
       $128 = ($126>>>0)<($127>>>0);
       if ($128) {
        $$01$i$i9 = $126;$125 = $127;
       } else {
        $$pre$phiZ2D = $116;$133 = $119;
        label = 28;
        break;
       }
      }
     } else {
      $$pre$phiZ2D = $116;$133 = $119;
      label = 28;
     }
    }
   }
  }
 } while(0);
 if ((label|0) == 5) {
  $25 = ___cxa_find_matching_catch()|0;
  $26 = tempRet0;
  $lpad$phi$index = $25;$lpad$phi$index2 = $26;
 }
 else if ((label|0) == 28) {
  $129 = ($__np|0)==($__ne|0);
  $130 = $__np;
  $131 = (($130) - ($$pre$phiZ2D))|0;
  $132 = (($__ob) + ($131<<2)|0);
  $storemerge = $129 ? $133 : $132;
  HEAP32[$__op>>2] = $storemerge;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
  STACKTOP = sp;return;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx($this,$__s,$__iob,$__fl,$0,$1) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 196|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 200|0;
 $__o = sp + 32|0;
 $__op = sp + 28|0;
 $__oe = sp + 24|0;
 $2 = sp + 20|0;
 $3 = sp + 16|0;
 $4 = $__fmt;
 $5 = $4;
 HEAP32[$5>>2] = 37;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = ((($__fmt)) + 1|0);
 $9 = ((($__iob)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($8,9768,1,$10);
 $11 = (__ZNSt3__16__clocEv()|0);
 $12 = $vararg_buffer;
 $13 = $12;
 HEAP32[$13>>2] = $0;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $1;
 $16 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,22,$11,$__fmt,$vararg_buffer)|0);
 $17 = (($__nar) + ($16)|0);
 $18 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$17,$__iob)|0);
 $19 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$2>>2] = $19;
 __THREW__ = 0;
 invoke_viiiiiii(467,($__nar|0),($18|0),($17|0),($__o|0),($__op|0),($__oe|0),($2|0));
 $20 = __THREW__; __THREW__ = 0;
 $21 = $20&1;
 if ($21) {
  $26 = ___cxa_find_matching_catch()|0;
  $27 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($19)|0);
  ___resumeException($26|0);
  // unreachable;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($19)|0);
  $22 = HEAP32[$__s>>2]|0;
  HEAP32[$3>>2] = $22;
  $23 = HEAP32[$__op>>2]|0;
  $24 = HEAP32[$__oe>>2]|0;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;
  $25 = (__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$23,$24,$__iob,$__fl)|0);
  STACKTOP = sp;return ($25|0);
 }
 return (0)|0;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0;
 var $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 104|0;
 $vararg_buffer = sp;
 $__fmt = sp + 120|0;
 $__nar = sp + 108|0;
 $__o = sp + 20|0;
 $__op = sp + 16|0;
 $__oe = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt>>0]=HEAP8[9752>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[9752+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[9752+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[9752+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[9752+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[9752+5>>0]|0;
 $2 = ((($__fmt)) + 1|0);
 $3 = ((($__iob)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($2,9760,0,$4);
 $5 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $__v;
 $6 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,12,$5,$__fmt,$vararg_buffer)|0);
 $7 = (($__nar) + ($6)|0);
 $8 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$7,$__iob)|0);
 $9 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $9;
 __THREW__ = 0;
 invoke_viiiiiii(467,($__nar|0),($8|0),($7|0),($__o|0),($__op|0),($__oe|0),($0|0));
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if ($11) {
  $16 = ___cxa_find_matching_catch()|0;
  $17 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($9)|0);
  ___resumeException($16|0);
  // unreachable;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($9)|0);
  $12 = HEAP32[$__s>>2]|0;
  HEAP32[$1>>2] = $12;
  $13 = HEAP32[$__op>>2]|0;
  $14 = HEAP32[$__oe>>2]|0;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
  $15 = (__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$13,$14,$__iob,$__fl)|0);
  STACKTOP = sp;return ($15|0);
 }
 return (0)|0;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy($this,$__s,$__iob,$__fl,$0,$1) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 204|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 208|0;
 $__o = sp + 32|0;
 $__op = sp + 28|0;
 $__oe = sp + 24|0;
 $2 = sp + 20|0;
 $3 = sp + 16|0;
 $4 = $__fmt;
 $5 = $4;
 HEAP32[$5>>2] = 37;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = ((($__fmt)) + 1|0);
 $9 = ((($__iob)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($8,9768,0,$10);
 $11 = (__ZNSt3__16__clocEv()|0);
 $12 = $vararg_buffer;
 $13 = $12;
 HEAP32[$13>>2] = $0;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $1;
 $16 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,23,$11,$__fmt,$vararg_buffer)|0);
 $17 = (($__nar) + ($16)|0);
 $18 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$17,$__iob)|0);
 $19 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$2>>2] = $19;
 __THREW__ = 0;
 invoke_viiiiiii(467,($__nar|0),($18|0),($17|0),($__o|0),($__op|0),($__oe|0),($2|0));
 $20 = __THREW__; __THREW__ = 0;
 $21 = $20&1;
 if ($21) {
  $26 = ___cxa_find_matching_catch()|0;
  $27 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($19)|0);
  ___resumeException($26|0);
  // unreachable;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($19)|0);
  $22 = HEAP32[$__s>>2]|0;
  HEAP32[$3>>2] = $22;
  $23 = HEAP32[$__op>>2]|0;
  $24 = HEAP32[$__oe>>2]|0;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;
  $25 = (__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$23,$24,$__iob,$__fl)|0);
  STACKTOP = sp;return ($25|0);
 }
 return (0)|0;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = +$__v;
 var $$0 = 0, $$02 = 0, $$110 = 0, $$139 = 0, $$byval_copy = 0, $$pre = 0, $$pre6 = 0, $$pre7 = 0, $$pre7$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0, $vararg_ptr12 = 0;
 var $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 312|0;
 $vararg_buffer9 = sp + 48|0;
 $vararg_buffer5 = sp + 32|0;
 $vararg_buffer2 = sp + 24|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 316|0;
 $__nb = sp + 308|0;
 $__o = sp + 80|0;
 $__op = sp + 76|0;
 $__oe = sp + 72|0;
 $0 = sp + 68|0;
 $1 = sp + 64|0;
 $2 = $__fmt;
 $3 = $2;
 HEAP32[$3>>2] = 37;
 $4 = (($2) + 4)|0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = ((($__fmt)) + 1|0);
 $7 = ((($__iob)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (__ZNSt3__114__num_put_base14__format_floatEPcPKcj($6,9776,$8)|0);
 HEAP32[$__nb>>2] = $__nar;
 $10 = (__ZNSt3__16__clocEv()|0);
 if ($9) {
  $11 = ((($__iob)) + 8|0);
  $12 = HEAP32[$11>>2]|0;
  HEAP32[$vararg_buffer>>2] = $12;
  $vararg_ptr1 = ((($vararg_buffer)) + 8|0);
  HEAPF64[$vararg_ptr1>>3] = $__v;
  $13 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer)|0);
  $__nc$0 = $13;
 } else {
  HEAPF64[$vararg_buffer2>>3] = $__v;
  $14 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer2)|0);
  $__nc$0 = $14;
 }
 $15 = ($__nc$0|0)>(29);
 L5: do {
  if ($15) {
   __THREW__ = 0;
   $16 = (invoke_i(457)|0);
   $17 = __THREW__; __THREW__ = 0;
   $18 = $17&1;
   if ($9) {
    if (!($18)) {
     $19 = ((($__iob)) + 8|0);
     $20 = HEAP32[$19>>2]|0;
     __THREW__ = 0;
     HEAP32[$vararg_buffer5>>2] = $20;
     $vararg_ptr8 = ((($vararg_buffer5)) + 8|0);
     HEAPF64[$vararg_ptr8>>3] = $__v;
     $21 = (invoke_iiiii(462,($__nb|0),($16|0),($__fmt|0),($vararg_buffer5|0))|0);
     $22 = __THREW__; __THREW__ = 0;
     $23 = $22&1;
     if (!($23)) {
      $__nc$1 = $21;
      label = 12;
     }
    }
   } else {
    if (!($18)) {
     $26 = ((($__iob)) + 8|0);
     $27 = HEAP32[$26>>2]|0;
     __THREW__ = 0;
     HEAP32[$vararg_buffer9>>2] = $27;
     $vararg_ptr12 = ((($vararg_buffer9)) + 8|0);
     HEAPF64[$vararg_ptr12>>3] = $__v;
     $28 = (invoke_iiiii(462,($__nb|0),($16|0),($__fmt|0),($vararg_buffer9|0))|0);
     $29 = __THREW__; __THREW__ = 0;
     $30 = $29&1;
     if (!($30)) {
      $__nc$1 = $28;
      label = 12;
     }
    }
   }
   do {
    if ((label|0) == 12) {
     $31 = HEAP32[$__nb>>2]|0;
     $32 = ($31|0)==(0|0);
     if ($32) {
      __THREW__ = 0;
      invoke_v(463);
      $33 = __THREW__; __THREW__ = 0;
      $34 = $33&1;
      if ($34) {
       break;
      }
      $$pre = HEAP32[$__nb>>2]|0;
      $35 = $$pre;
     } else {
      $35 = $31;
     }
     $36 = $35;
     $38 = $35;$64 = $36;$__nc$2 = $__nc$1;
     label = 16;
     break L5;
    }
   } while(0);
   $24 = ___cxa_find_matching_catch()|0;
   $25 = tempRet0;
   $$110 = $24;$$139 = $25;
  } else {
   $$pre6 = HEAP32[$__nb>>2]|0;
   $38 = $$pre6;$64 = 0;$__nc$2 = $__nc$0;
   label = 16;
  }
 } while(0);
 if ((label|0) == 16) {
  $37 = (($38) + ($__nc$2)|0);
  $39 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($38,$37,$__iob)|0);
  $40 = ($38|0)==($__nar|0);
  do {
   if ($40) {
    $52 = $__nar;$61 = 0;$__ob$0 = $__o;
    label = 22;
   } else {
    $41 = $__nc$2 << 3;
    $42 = (_malloc($41)|0);
    $43 = ($42|0)==(0|0);
    if ($43) {
     __THREW__ = 0;
     invoke_v(463);
     $44 = __THREW__; __THREW__ = 0;
     $45 = $44&1;
     if ($45) {
      $74 = 0;
      label = 20;
      break;
     }
     $$pre7$pre = HEAP32[$__nb>>2]|0;
     $$pre7 = $$pre7$pre;
    } else {
     $$pre7 = $38;
    }
    $48 = $42;
    $52 = $$pre7;$61 = $48;$__ob$0 = $42;
    label = 22;
   }
  } while(0);
  do {
   if ((label|0) == 22) {
    __THREW__ = 0;
    $49 = (invoke_ii(455,($__iob|0))|0);
    $50 = __THREW__; __THREW__ = 0;
    $51 = $50&1;
    if ($51) {
     $74 = $61;
     label = 20;
    } else {
     HEAP32[$0>>2] = $49;
     __THREW__ = 0;
     invoke_viiiiiii(468,($52|0),($39|0),($37|0),($__ob$0|0),($__op|0),($__oe|0),($0|0));
     $53 = __THREW__; __THREW__ = 0;
     $54 = $53&1;
     if ($54) {
      $67 = ___cxa_find_matching_catch()|0;
      $68 = tempRet0;
      (__ZNSt3__114__shared_count16__release_sharedEv($49)|0);
      $$0 = $67;$$02 = $68;$69 = $61;
      break;
     }
     (__ZNSt3__114__shared_count16__release_sharedEv($49)|0);
     $55 = HEAP32[$__s>>2]|0;
     HEAP32[$1>>2] = $55;
     $56 = HEAP32[$__op>>2]|0;
     $57 = HEAP32[$__oe>>2]|0;
     __THREW__ = 0;
     ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
     $58 = (invoke_iiiiiii(469,($$byval_copy|0),($__ob$0|0),($56|0),($57|0),($__iob|0),($__fl|0))|0);
     $59 = __THREW__; __THREW__ = 0;
     $60 = $59&1;
     if ($60) {
      $74 = $61;
      label = 20;
     } else {
      HEAP32[$__s>>2] = $58;
      $62 = ($61|0)==(0);
      if (!($62)) {
       $63 = $61;
       _free($63);
      }
      $65 = ($64|0)==(0);
      if (!($65)) {
       $66 = $64;
       _free($66);
      }
      STACKTOP = sp;return ($58|0);
     }
    }
   }
  } while(0);
  if ((label|0) == 20) {
   $46 = ___cxa_find_matching_catch()|0;
   $47 = tempRet0;
   $$0 = $46;$$02 = $47;$69 = $74;
  }
  $70 = ($69|0)==(0);
  if (!($70)) {
   $71 = $69;
   _free($71);
  }
  $72 = ($64|0)==(0);
  if ($72) {
   $$110 = $$0;$$139 = $$02;
  } else {
   $73 = $64;
   _free($73);
   $$110 = $$0;$$139 = $$02;
  }
 }
 ___resumeException($$110|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nb,$__np,$__ne,$__ob,$__op,$__oe,$__loc) {
 $__nb = $__nb|0;
 $__np = $__np|0;
 $__ne = $__ne|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__loc = $__loc|0;
 var $$01$i$i50 = 0, $$01$i$i645 = 0, $$__dg$0 = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0;
 var $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0;
 var $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0;
 var $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $__dc$047 = 0, $__dc$1 = 0, $__dg$048 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__nf$243 = 0, $__nf$243$lcssa = 0, $__nf$3 = 0, $__ns$056 = 0, $__ns$152 = 0, $__ns$2 = 0, $__p$049 = 0, $lpad$phi$index = 0, $lpad$phi$index5 = 0, $or$cond = 0;
 var $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__grouping = sp;
 $0 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6752)|0);
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6912)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 FUNCTION_TABLE_vii[$4 & 1023]($__grouping,$1);
 HEAP32[$__oe>>2] = $__ob;
 $5 = HEAP8[$__nb>>0]|0;
 if ((($5<<24>>24) == 43) | (($5<<24>>24) == 45)) {
  $6 = HEAP32[$0>>2]|0;
  $7 = ((($6)) + 44|0);
  $8 = HEAP32[$7>>2]|0;
  __THREW__ = 0;
  $9 = (invoke_iii($8|0,($0|0),($5|0))|0);
  $10 = __THREW__; __THREW__ = 0;
  $11 = $10&1;
  if ($11) {
   label = 8;
  } else {
   $12 = ((($__nb)) + 1|0);
   $13 = HEAP32[$__oe>>2]|0;
   $14 = ((($13)) + 4|0);
   HEAP32[$__oe>>2] = $14;
   HEAP32[$13>>2] = $9;
   $__nf$0 = $12;
   label = 10;
  }
 } else {
  $__nf$0 = $__nb;
  label = 10;
 }
 L4: do {
  if ((label|0) == 10) {
   $25 = $__ne;
   $26 = $__nf$0;
   $27 = (($25) - ($26))|0;
   $28 = ($27|0)>(1);
   L6: do {
    if ($28) {
     $30 = HEAP8[$__nf$0>>0]|0;
     $31 = ($30<<24>>24)==(48);
     if ($31) {
      $32 = ((($__nf$0)) + 1|0);
      $33 = HEAP8[$32>>0]|0;
      if ((($33<<24>>24) == 88) | (($33<<24>>24) == 120)) {
       $34 = HEAP32[$0>>2]|0;
       $35 = ((($34)) + 44|0);
       $36 = HEAP32[$35>>2]|0;
       __THREW__ = 0;
       $37 = (invoke_iii($36|0,($0|0),48)|0);
       $38 = __THREW__; __THREW__ = 0;
       $39 = $38&1;
       if ($39) {
        label = 8;
        break L4;
       }
       $40 = HEAP32[$__oe>>2]|0;
       $41 = ((($40)) + 4|0);
       HEAP32[$__oe>>2] = $41;
       HEAP32[$40>>2] = $37;
       $42 = ((($__nf$0)) + 2|0);
       $43 = HEAP8[$32>>0]|0;
       $44 = HEAP32[$0>>2]|0;
       $45 = ((($44)) + 44|0);
       $46 = HEAP32[$45>>2]|0;
       __THREW__ = 0;
       $47 = (invoke_iii($46|0,($0|0),($43|0))|0);
       $48 = __THREW__; __THREW__ = 0;
       $49 = $48&1;
       if ($49) {
        label = 8;
        break L4;
       }
       $50 = HEAP32[$__oe>>2]|0;
       $51 = ((($50)) + 4|0);
       HEAP32[$__oe>>2] = $51;
       HEAP32[$50>>2] = $47;
       $52 = ($42>>>0)<($__ne>>>0);
       if ($52) {
        $__ns$056 = $42;
        while(1) {
         $53 = HEAP8[$__ns$056>>0]|0;
         __THREW__ = 0;
         $54 = (invoke_i(457)|0);
         $55 = __THREW__; __THREW__ = 0;
         $56 = $55&1;
         if ($56) {
          break;
         }
         $57 = $53 << 24 >> 24;
         __THREW__ = 0;
         $58 = (invoke_iii(465,($57|0),($54|0))|0);
         $59 = __THREW__; __THREW__ = 0;
         $60 = $59&1;
         if ($60) {
          break;
         }
         $61 = ($58|0)==(0);
         if ($61) {
          $__nf$1 = $42;$__ns$2 = $__ns$056;
          break L6;
         }
         $62 = ((($__ns$056)) + 1|0);
         $63 = ($62>>>0)<($__ne>>>0);
         if ($63) {
          $__ns$056 = $62;
         } else {
          $__nf$1 = $42;$__ns$2 = $62;
          break L6;
         }
        }
        $21 = ___cxa_find_matching_catch()|0;
        $22 = tempRet0;
        $lpad$phi$index = $21;$lpad$phi$index5 = $22;
        break L4;
       } else {
        $__nf$1 = $42;$__ns$2 = $42;
       }
      } else {
       label = 11;
      }
     } else {
      label = 11;
     }
    } else {
     label = 11;
    }
   } while(0);
   L18: do {
    if ((label|0) == 11) {
     $29 = ($__nf$0>>>0)<($__ne>>>0);
     if ($29) {
      $__ns$152 = $__nf$0;
      while(1) {
       $64 = HEAP8[$__ns$152>>0]|0;
       __THREW__ = 0;
       $65 = (invoke_i(457)|0);
       $66 = __THREW__; __THREW__ = 0;
       $67 = $66&1;
       if ($67) {
        break;
       }
       $68 = $64 << 24 >> 24;
       __THREW__ = 0;
       $69 = (invoke_iii(466,($68|0),($65|0))|0);
       $70 = __THREW__; __THREW__ = 0;
       $71 = $70&1;
       if ($71) {
        break;
       }
       $72 = ($69|0)==(0);
       if ($72) {
        $__nf$1 = $__nf$0;$__ns$2 = $__ns$152;
        break L18;
       }
       $73 = ((($__ns$152)) + 1|0);
       $74 = ($73>>>0)<($__ne>>>0);
       if ($74) {
        $__ns$152 = $73;
       } else {
        $__nf$1 = $__nf$0;$__ns$2 = $73;
        break L18;
       }
      }
      $19 = ___cxa_find_matching_catch()|0;
      $20 = tempRet0;
      $lpad$phi$index = $19;$lpad$phi$index5 = $20;
      break L4;
     } else {
      $__nf$1 = $__nf$0;$__ns$2 = $__nf$0;
     }
    }
   } while(0);
   $75 = HEAP8[$__grouping>>0]|0;
   $76 = $75 & 1;
   $77 = ($76<<24>>24)==(0);
   $78 = ((($__grouping)) + 4|0);
   $79 = HEAP32[$78>>2]|0;
   $80 = $75&255;
   $81 = $80 >>> 1;
   $82 = $77 ? $81 : $79;
   $83 = ($82|0)==(0);
   if ($83) {
    $84 = HEAP32[$__oe>>2]|0;
    $85 = HEAP32[$0>>2]|0;
    $86 = ((($85)) + 48|0);
    $87 = HEAP32[$86>>2]|0;
    __THREW__ = 0;
    (invoke_iiiii($87|0,($0|0),($__nf$1|0),($__ns$2|0),($84|0))|0);
    $88 = __THREW__; __THREW__ = 0;
    $89 = $88&1;
    if ($89) {
     label = 8;
     break;
    }
    $90 = $__ns$2;
    $91 = $__nf$1;
    $92 = (($90) - ($91))|0;
    $93 = HEAP32[$__oe>>2]|0;
    $94 = (($93) + ($92<<2)|0);
    HEAP32[$__oe>>2] = $94;
    $$pre$phiZ2D = $0;$198 = $94;
   } else {
    $95 = ($__nf$1|0)==($__ns$2|0);
    if (!($95)) {
     $96 = ((($__ns$2)) + -1|0);
     $97 = ($__nf$1>>>0)<($96>>>0);
     if ($97) {
      $$01$i$i50 = $__nf$1;$100 = $96;
      while(1) {
       $98 = HEAP8[$$01$i$i50>>0]|0;
       $99 = HEAP8[$100>>0]|0;
       HEAP8[$$01$i$i50>>0] = $99;
       HEAP8[$100>>0] = $98;
       $101 = ((($$01$i$i50)) + 1|0);
       $102 = ((($100)) + -1|0);
       $103 = ($101>>>0)<($102>>>0);
       if ($103) {
        $$01$i$i50 = $101;$100 = $102;
       } else {
        break;
       }
      }
     }
    }
    $104 = HEAP32[$1>>2]|0;
    $105 = ((($104)) + 16|0);
    $106 = HEAP32[$105>>2]|0;
    __THREW__ = 0;
    $107 = (invoke_ii($106|0,($1|0))|0);
    $108 = __THREW__; __THREW__ = 0;
    $109 = $108&1;
    if ($109) {
     label = 8;
     break;
    }
    $110 = ((($__grouping)) + 8|0);
    $111 = ((($__grouping)) + 1|0);
    $112 = ($__nf$1>>>0)<($__ns$2>>>0);
    L37: do {
     if ($112) {
      $__dc$047 = 0;$__dg$048 = 0;$__p$049 = $__nf$1;
      while(1) {
       $113 = HEAP8[$__grouping>>0]|0;
       $114 = $113 & 1;
       $115 = ($114<<24>>24)==(0);
       $116 = HEAP32[$110>>2]|0;
       $117 = $115 ? $111 : $116;
       $118 = (($117) + ($__dg$048)|0);
       $119 = HEAP8[$118>>0]|0;
       $120 = ($119<<24>>24)>(0);
       $121 = $119 << 24 >> 24;
       $122 = ($__dc$047|0)==($121|0);
       $or$cond = $120 & $122;
       if ($or$cond) {
        $123 = HEAP32[$__oe>>2]|0;
        $124 = ((($123)) + 4|0);
        HEAP32[$__oe>>2] = $124;
        HEAP32[$123>>2] = $107;
        $125 = HEAP8[$__grouping>>0]|0;
        $126 = $125 & 1;
        $127 = ($126<<24>>24)==(0);
        $128 = HEAP32[$78>>2]|0;
        $129 = $125&255;
        $130 = $129 >>> 1;
        $131 = $127 ? $130 : $128;
        $132 = (($131) + -1)|0;
        $133 = ($__dg$048>>>0)<($132>>>0);
        $134 = $133&1;
        $$__dg$0 = (($134) + ($__dg$048))|0;
        $__dc$1 = 0;$__dg$1 = $$__dg$0;
       } else {
        $__dc$1 = $__dc$047;$__dg$1 = $__dg$048;
       }
       $135 = HEAP8[$__p$049>>0]|0;
       $136 = HEAP32[$0>>2]|0;
       $137 = ((($136)) + 44|0);
       $138 = HEAP32[$137>>2]|0;
       __THREW__ = 0;
       $139 = (invoke_iii($138|0,($0|0),($135|0))|0);
       $140 = __THREW__; __THREW__ = 0;
       $141 = $140&1;
       if ($141) {
        break;
       }
       $142 = HEAP32[$__oe>>2]|0;
       $143 = ((($142)) + 4|0);
       HEAP32[$__oe>>2] = $143;
       HEAP32[$142>>2] = $139;
       $144 = (($__dc$1) + 1)|0;
       $145 = ((($__p$049)) + 1|0);
       $146 = ($145>>>0)<($__ns$2>>>0);
       if ($146) {
        $__dc$047 = $144;$__dg$048 = $__dg$1;$__p$049 = $145;
       } else {
        break L37;
       }
      }
      $17 = ___cxa_find_matching_catch()|0;
      $18 = tempRet0;
      $lpad$phi$index = $17;$lpad$phi$index5 = $18;
      break L4;
     }
    } while(0);
    $147 = $__nf$1;
    $148 = $__nb;
    $149 = (($147) - ($148))|0;
    $150 = (($__ob) + ($149<<2)|0);
    $151 = HEAP32[$__oe>>2]|0;
    $152 = ($150|0)==($151|0);
    if ($152) {
     $$pre$phiZ2D = $0;$198 = $150;
    } else {
     $153 = ((($151)) + -4|0);
     $154 = ($150>>>0)<($153>>>0);
     if ($154) {
      $$01$i$i645 = $150;$158 = $153;
      while(1) {
       $156 = HEAP32[$$01$i$i645>>2]|0;
       $157 = HEAP32[$158>>2]|0;
       HEAP32[$$01$i$i645>>2] = $157;
       HEAP32[$158>>2] = $156;
       $159 = ((($$01$i$i645)) + 4|0);
       $160 = ((($158)) + -4|0);
       $161 = ($159>>>0)<($160>>>0);
       if ($161) {
        $$01$i$i645 = $159;$158 = $160;
       } else {
        $$pre$phiZ2D = $0;$198 = $151;
        break;
       }
      }
     } else {
      $$pre$phiZ2D = $0;$198 = $151;
     }
    }
   }
   $155 = ($__ns$2>>>0)<($__ne>>>0);
   L50: do {
    if ($155) {
     $__nf$243 = $__ns$2;
     while(1) {
      $162 = HEAP8[$__nf$243>>0]|0;
      $163 = ($162<<24>>24)==(46);
      if ($163) {
       $__nf$243$lcssa = $__nf$243;
       break;
      }
      $173 = HEAP32[$$pre$phiZ2D>>2]|0;
      $174 = ((($173)) + 44|0);
      $175 = HEAP32[$174>>2]|0;
      __THREW__ = 0;
      $176 = (invoke_iii($175|0,($0|0),($162|0))|0);
      $177 = __THREW__; __THREW__ = 0;
      $178 = $177&1;
      if ($178) {
       label = 4;
       break;
      }
      $179 = HEAP32[$__oe>>2]|0;
      $180 = ((($179)) + 4|0);
      HEAP32[$__oe>>2] = $180;
      HEAP32[$179>>2] = $176;
      $181 = ((($__nf$243)) + 1|0);
      $182 = ($181>>>0)<($__ne>>>0);
      if ($182) {
       $__nf$243 = $181;
      } else {
       $186 = $180;$__nf$3 = $181;
       break L50;
      }
     }
     if ((label|0) == 4) {
      $15 = ___cxa_find_matching_catch()|0;
      $16 = tempRet0;
      $lpad$phi$index = $15;$lpad$phi$index5 = $16;
      break L4;
     }
     $164 = HEAP32[$1>>2]|0;
     $165 = ((($164)) + 12|0);
     $166 = HEAP32[$165>>2]|0;
     __THREW__ = 0;
     $167 = (invoke_ii($166|0,($1|0))|0);
     $168 = __THREW__; __THREW__ = 0;
     $169 = $168&1;
     if ($169) {
      label = 8;
      break L4;
     }
     $170 = HEAP32[$__oe>>2]|0;
     $171 = ((($170)) + 4|0);
     HEAP32[$__oe>>2] = $171;
     HEAP32[$170>>2] = $167;
     $172 = ((($__nf$243$lcssa)) + 1|0);
     $186 = $171;$__nf$3 = $172;
    } else {
     $186 = $198;$__nf$3 = $__ns$2;
    }
   } while(0);
   $183 = HEAP32[$0>>2]|0;
   $184 = ((($183)) + 48|0);
   $185 = HEAP32[$184>>2]|0;
   __THREW__ = 0;
   (invoke_iiiii($185|0,($0|0),($__nf$3|0),($__ne|0),($186|0))|0);
   $187 = __THREW__; __THREW__ = 0;
   $188 = $187&1;
   if ($188) {
    label = 8;
   } else {
    $189 = $__nf$3;
    $190 = (($25) - ($189))|0;
    $191 = HEAP32[$__oe>>2]|0;
    $192 = (($191) + ($190<<2)|0);
    HEAP32[$__oe>>2] = $192;
    $193 = ($__np|0)==($__ne|0);
    $194 = $__np;
    $195 = $__nb;
    $196 = (($194) - ($195))|0;
    $197 = (($__ob) + ($196<<2)|0);
    $storemerge = $193 ? $192 : $197;
    HEAP32[$__op>>2] = $storemerge;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 8) {
  $23 = ___cxa_find_matching_catch()|0;
  $24 = tempRet0;
  $lpad$phi$index = $23;$lpad$phi$index5 = $24;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = +$__v;
 var $$0 = 0, $$02 = 0, $$110 = 0, $$139 = 0, $$byval_copy = 0, $$pre = 0, $$pre6 = 0, $$pre7 = 0, $$pre7$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 304|0;
 $vararg_buffer9 = sp + 48|0;
 $vararg_buffer5 = sp + 32|0;
 $vararg_buffer2 = sp + 24|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 308|0;
 $__nb = sp + 300|0;
 $__o = sp + 72|0;
 $__op = sp + 68|0;
 $__oe = sp + 64|0;
 $0 = sp + 60|0;
 $1 = sp + 56|0;
 $2 = $__fmt;
 $3 = $2;
 HEAP32[$3>>2] = 37;
 $4 = (($2) + 4)|0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = ((($__fmt)) + 1|0);
 $7 = ((($__iob)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (__ZNSt3__114__num_put_base14__format_floatEPcPKcj($6,9784,$8)|0);
 HEAP32[$__nb>>2] = $__nar;
 $10 = (__ZNSt3__16__clocEv()|0);
 if ($9) {
  $11 = ((($__iob)) + 8|0);
  $12 = HEAP32[$11>>2]|0;
  HEAP32[$vararg_buffer>>2] = $12;
  $vararg_ptr1 = ((($vararg_buffer)) + 8|0);
  HEAPF64[$vararg_ptr1>>3] = $__v;
  $13 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer)|0);
  $__nc$0 = $13;
 } else {
  HEAPF64[$vararg_buffer2>>3] = $__v;
  $14 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer2)|0);
  $__nc$0 = $14;
 }
 $15 = ($__nc$0|0)>(29);
 L5: do {
  if ($15) {
   __THREW__ = 0;
   $16 = (invoke_i(457)|0);
   $17 = __THREW__; __THREW__ = 0;
   $18 = $17&1;
   if ($9) {
    if (!($18)) {
     $19 = ((($__iob)) + 8|0);
     $20 = HEAP32[$19>>2]|0;
     __THREW__ = 0;
     HEAP32[$vararg_buffer5>>2] = $20;
     $vararg_ptr8 = ((($vararg_buffer5)) + 8|0);
     HEAPF64[$vararg_ptr8>>3] = $__v;
     $21 = (invoke_iiiii(462,($__nb|0),($16|0),($__fmt|0),($vararg_buffer5|0))|0);
     $22 = __THREW__; __THREW__ = 0;
     $23 = $22&1;
     if (!($23)) {
      $__nc$1 = $21;
      label = 12;
     }
    }
   } else {
    if (!($18)) {
     __THREW__ = 0;
     HEAPF64[$vararg_buffer9>>3] = $__v;
     $26 = (invoke_iiiii(462,($__nb|0),($16|0),($__fmt|0),($vararg_buffer9|0))|0);
     $27 = __THREW__; __THREW__ = 0;
     $28 = $27&1;
     if (!($28)) {
      $__nc$1 = $26;
      label = 12;
     }
    }
   }
   do {
    if ((label|0) == 12) {
     $29 = HEAP32[$__nb>>2]|0;
     $30 = ($29|0)==(0|0);
     if ($30) {
      __THREW__ = 0;
      invoke_v(463);
      $31 = __THREW__; __THREW__ = 0;
      $32 = $31&1;
      if ($32) {
       break;
      }
      $$pre = HEAP32[$__nb>>2]|0;
      $33 = $$pre;
     } else {
      $33 = $29;
     }
     $34 = $33;
     $36 = $33;$62 = $34;$__nc$2 = $__nc$1;
     label = 16;
     break L5;
    }
   } while(0);
   $24 = ___cxa_find_matching_catch()|0;
   $25 = tempRet0;
   $$110 = $24;$$139 = $25;
  } else {
   $$pre6 = HEAP32[$__nb>>2]|0;
   $36 = $$pre6;$62 = 0;$__nc$2 = $__nc$0;
   label = 16;
  }
 } while(0);
 if ((label|0) == 16) {
  $35 = (($36) + ($__nc$2)|0);
  $37 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($36,$35,$__iob)|0);
  $38 = ($36|0)==($__nar|0);
  do {
   if ($38) {
    $50 = $__nar;$59 = 0;$__ob$0 = $__o;
    label = 22;
   } else {
    $39 = $__nc$2 << 3;
    $40 = (_malloc($39)|0);
    $41 = ($40|0)==(0|0);
    if ($41) {
     __THREW__ = 0;
     invoke_v(463);
     $42 = __THREW__; __THREW__ = 0;
     $43 = $42&1;
     if ($43) {
      $72 = 0;
      label = 20;
      break;
     }
     $$pre7$pre = HEAP32[$__nb>>2]|0;
     $$pre7 = $$pre7$pre;
    } else {
     $$pre7 = $36;
    }
    $46 = $40;
    $50 = $$pre7;$59 = $46;$__ob$0 = $40;
    label = 22;
   }
  } while(0);
  do {
   if ((label|0) == 22) {
    __THREW__ = 0;
    $47 = (invoke_ii(455,($__iob|0))|0);
    $48 = __THREW__; __THREW__ = 0;
    $49 = $48&1;
    if ($49) {
     $72 = $59;
     label = 20;
    } else {
     HEAP32[$0>>2] = $47;
     __THREW__ = 0;
     invoke_viiiiiii(468,($50|0),($37|0),($35|0),($__ob$0|0),($__op|0),($__oe|0),($0|0));
     $51 = __THREW__; __THREW__ = 0;
     $52 = $51&1;
     if ($52) {
      $65 = ___cxa_find_matching_catch()|0;
      $66 = tempRet0;
      (__ZNSt3__114__shared_count16__release_sharedEv($47)|0);
      $$0 = $65;$$02 = $66;$67 = $59;
      break;
     }
     (__ZNSt3__114__shared_count16__release_sharedEv($47)|0);
     $53 = HEAP32[$__s>>2]|0;
     HEAP32[$1>>2] = $53;
     $54 = HEAP32[$__op>>2]|0;
     $55 = HEAP32[$__oe>>2]|0;
     __THREW__ = 0;
     ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
     $56 = (invoke_iiiiiii(469,($$byval_copy|0),($__ob$0|0),($54|0),($55|0),($__iob|0),($__fl|0))|0);
     $57 = __THREW__; __THREW__ = 0;
     $58 = $57&1;
     if ($58) {
      $72 = $59;
      label = 20;
     } else {
      HEAP32[$__s>>2] = $56;
      $60 = ($59|0)==(0);
      if (!($60)) {
       $61 = $59;
       _free($61);
      }
      $63 = ($62|0)==(0);
      if (!($63)) {
       $64 = $62;
       _free($64);
      }
      STACKTOP = sp;return ($56|0);
     }
    }
   }
  } while(0);
  if ((label|0) == 20) {
   $44 = ___cxa_find_matching_catch()|0;
   $45 = tempRet0;
   $$0 = $44;$$02 = $45;$67 = $72;
  }
  $68 = ($67|0)==(0);
  if (!($68)) {
   $69 = $67;
   _free($69);
  }
  $70 = ($62|0)==(0);
  if ($70) {
   $$110 = $$0;$$139 = $$02;
  } else {
   $71 = $62;
   _free($71);
   $$110 = $$0;$$139 = $$02;
  }
 }
 ___resumeException($$110|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__op$0 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 160|0;
 $vararg_buffer = sp;
 $__fmt = sp + 184|0;
 $__nar = sp + 164|0;
 $__o = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt>>0]=HEAP8[9792>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[9792+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[9792+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[9792+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[9792+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[9792+5>>0]|0;
 $2 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $__v;
 $3 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,20,$2,$__fmt,$vararg_buffer)|0);
 $4 = (($__nar) + ($3)|0);
 $5 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$4,$__iob)|0);
 $6 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $6;
 __THREW__ = 0;
 $7 = (invoke_iii(452,($0|0),(6752|0))|0);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if ($9) {
  $21 = ___cxa_find_matching_catch()|0;
  $22 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($6)|0);
  ___resumeException($21|0);
  // unreachable;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($6)|0);
  $10 = HEAP32[$7>>2]|0;
  $11 = ((($10)) + 48|0);
  $12 = HEAP32[$11>>2]|0;
  (FUNCTION_TABLE_iiiii[$12 & 1023]($7,$__nar,$4,$__o)|0);
  $13 = (($__o) + ($3<<2)|0);
  $14 = ($5|0)==($4|0);
  $15 = $__nar;
  $16 = $5;
  $17 = (($16) - ($15))|0;
  $18 = (($__o) + ($17<<2)|0);
  $__op$0 = $14 ? $13 : $18;
  $19 = HEAP32[$__s>>2]|0;
  HEAP32[$1>>2] = $19;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
  $20 = (__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$__op$0,$13,$__iob,$__fl)|0);
  STACKTOP = sp;return ($20|0);
 }
 return (0)|0;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$__b,$__e,$__iob,$__err,$__tm,$__fmtb,$__fmte) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 $__fmtb = $__fmtb|0;
 $__fmte = $__fmte|0;
 var $$0$i$i = 0, $$0$i$i26 = 0, $$0$ph$be = 0, $$0$ph86 = 0, $$0$pn = 0, $$2 = 0, $$2$lcssa = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$lcssa = 0, $$lcssa94 = 0, $$lcssa95 = 0, $$pre$i$i$i17 = 0, $$pre$i$i$i8 = 0, $$pre$i2$i$i21 = 0, $$pre$i2$i$i2139 = 0, $$pre$i2$i$i2140 = 0, $$pre$pre = 0, $0 = 0, $1 = 0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__cmd$0 = 0, $__opt$0 = 0, $isascii1$i = 0, $isascii1$i24 = 0, $isascii1$i5 = 0;
 var $or$cond84 = 0, $sext = 0, $tmp$i$i23 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 16|0;
 $$byval_copy = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 $2 = sp;
 $3 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $3;
 __THREW__ = 0;
 $4 = (invoke_iii(452,($0|0),(6760|0))|0);
 $5 = __THREW__; __THREW__ = 0;
 $6 = $5&1;
 if ($6) {
  $38 = ___cxa_find_matching_catch()|0;
  $39 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($3)|0);
  ___resumeException($38|0);
  // unreachable;
 }
 (__ZNSt3__114__shared_count16__release_sharedEv($3)|0);
 HEAP32[$__err>>2] = 0;
 $7 = ((($4)) + 8|0);
 $8 = ($__fmtb|0)==($__fmte|0);
 $9 = HEAP32[$__b>>2]|0;
 L4: do {
  if ($8) {
   $$pre$i$i$i8 = $9;
  } else {
   $$0$ph86 = $__fmtb;$10 = $9;
   L5: while(1) {
    $11 = ($10|0)==(0|0);
    $12 = $10;
    if ($11) {
     $23 = 0;$63 = $12;
    } else {
     $13 = ((($10)) + 12|0);
     $14 = HEAP32[$13>>2]|0;
     $15 = ((($10)) + 16|0);
     $16 = HEAP32[$15>>2]|0;
     $17 = ($14|0)==($16|0);
     if ($17) {
      $18 = HEAP32[$10>>2]|0;
      $19 = ((($18)) + 36|0);
      $20 = HEAP32[$19>>2]|0;
      $21 = (FUNCTION_TABLE_ii[$20 & 1023]($10)|0);
      $22 = ($21|0)==(-1);
      if ($22) {
       HEAP32[$__b>>2] = 0;
       $23 = 0;$63 = 0;
      } else {
       $23 = $10;$63 = $12;
      }
     } else {
      $23 = $10;$63 = $12;
     }
    }
    $24 = ($23|0)==(0|0);
    $25 = HEAP32[$__e>>2]|0;
    $26 = ($25|0)==(0|0);
    $27 = $25;
    do {
     if ($26) {
      $194 = $27;
      label = 12;
     } else {
      $28 = ((($25)) + 12|0);
      $29 = HEAP32[$28>>2]|0;
      $30 = ((($25)) + 16|0);
      $31 = HEAP32[$30>>2]|0;
      $32 = ($29|0)==($31|0);
      if ($32) {
       $33 = HEAP32[$25>>2]|0;
       $34 = ((($33)) + 36|0);
       $35 = HEAP32[$34>>2]|0;
       $36 = (FUNCTION_TABLE_ii[$35 & 1023]($25)|0);
       $37 = ($36|0)==(-1);
       if ($37) {
        HEAP32[$__e>>2] = 0;
        $194 = 0;
        label = 12;
        break;
       }
      }
      if ($24) {
       $195 = $25;$64 = $27;
      } else {
       $$lcssa = $23;
       label = 13;
       break L5;
      }
     }
    } while(0);
    if ((label|0) == 12) {
     label = 0;
     if ($24) {
      $$lcssa = $23;
      label = 13;
      break;
     } else {
      $195 = 0;$64 = $194;
     }
    }
    $40 = HEAP8[$$0$ph86>>0]|0;
    $41 = HEAP32[$4>>2]|0;
    $42 = ((($41)) + 36|0);
    $43 = HEAP32[$42>>2]|0;
    $44 = (FUNCTION_TABLE_iiii[$43 & 1023]($4,$40,0)|0);
    $45 = ($44<<24>>24)==(37);
    L21: do {
     if ($45) {
      $46 = ((($$0$ph86)) + 1|0);
      $47 = ($46|0)==($__fmte|0);
      if ($47) {
       $$lcssa94 = $23;
       label = 17;
       break L5;
      }
      $48 = HEAP8[$46>>0]|0;
      $49 = HEAP32[$4>>2]|0;
      $50 = ((($49)) + 36|0);
      $51 = HEAP32[$50>>2]|0;
      $52 = (FUNCTION_TABLE_iiii[$51 & 1023]($4,$48,0)|0);
      if ((($52<<24>>24) == 48) | (($52<<24>>24) == 69)) {
       $53 = ((($$0$ph86)) + 2|0);
       $54 = ($53|0)==($__fmte|0);
       if ($54) {
        $$lcssa95 = $23;
        label = 20;
        break L5;
       }
       $55 = HEAP8[$53>>0]|0;
       $56 = HEAP32[$4>>2]|0;
       $57 = ((($56)) + 36|0);
       $58 = HEAP32[$57>>2]|0;
       $59 = (FUNCTION_TABLE_iiii[$58 & 1023]($4,$55,0)|0);
       $67 = $46;$__cmd$0 = $59;$__opt$0 = $52;
      } else {
       $67 = $$0$ph86;$__cmd$0 = $52;$__opt$0 = 0;
      }
      $60 = HEAP32[$this>>2]|0;
      $61 = ((($60)) + 36|0);
      $62 = HEAP32[$61>>2]|0;
      HEAP32[$1>>2] = $63;
      HEAP32[$2>>2] = $64;
      ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
      ;HEAP32[$$byval_copy1>>2]=HEAP32[$2>>2]|0;
      $65 = (FUNCTION_TABLE_iiiiiiiii[$62 & 511]($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,$__cmd$0,$__opt$0)|0);
      HEAP32[$__b>>2] = $65;
      $66 = ((($67)) + 2|0);
      $$0$ph$be = $66;
     } else {
      $71 = HEAP8[$$0$ph86>>0]|0;
      $isascii1$i = ($71<<24>>24)>(-1);
      if ($isascii1$i) {
       $72 = $71 << 24 >> 24;
       $73 = HEAP32[$7>>2]|0;
       $74 = (($73) + ($72<<1)|0);
       $75 = HEAP16[$74>>1]|0;
       $76 = $75 & 8192;
       $77 = ($76<<16>>16)==(0);
       if (!($77)) {
        $$0$pn = $$0$ph86;
        while(1) {
         $$2 = ((($$0$pn)) + 1|0);
         $78 = ($$2|0)==($__fmte|0);
         if ($78) {
          $$2$lcssa = $__fmte;
          break;
         }
         $79 = HEAP8[$$2>>0]|0;
         $isascii1$i5 = ($79<<24>>24)>(-1);
         if (!($isascii1$i5)) {
          $$2$lcssa = $$2;
          break;
         }
         $80 = $79 << 24 >> 24;
         $81 = (($73) + ($80<<1)|0);
         $82 = HEAP16[$81>>1]|0;
         $83 = $82 & 8192;
         $84 = ($83<<16>>16)==(0);
         if ($84) {
          $$2$lcssa = $$2;
          break;
         } else {
          $$0$pn = $$2;
         }
        }
        $$pre$i$i$i17 = $23;$$pre$i2$i$i21 = $195;$98 = $195;
        while(1) {
         $85 = ($$pre$i$i$i17|0)==(0|0);
         if ($85) {
          $96 = 0;
         } else {
          $86 = ((($$pre$i$i$i17)) + 12|0);
          $87 = HEAP32[$86>>2]|0;
          $88 = ((($$pre$i$i$i17)) + 16|0);
          $89 = HEAP32[$88>>2]|0;
          $90 = ($87|0)==($89|0);
          if ($90) {
           $91 = HEAP32[$$pre$i$i$i17>>2]|0;
           $92 = ((($91)) + 36|0);
           $93 = HEAP32[$92>>2]|0;
           $94 = (FUNCTION_TABLE_ii[$93 & 1023]($$pre$i$i$i17)|0);
           $95 = ($94|0)==(-1);
           if ($95) {
            HEAP32[$__b>>2] = 0;
            $96 = 0;
           } else {
            $96 = $$pre$i$i$i17;
           }
          } else {
           $96 = $$pre$i$i$i17;
          }
         }
         $97 = ($96|0)==(0|0);
         $99 = ($98|0)==(0|0);
         do {
          if ($99) {
           $$pre$i2$i$i2140 = $$pre$i2$i$i21;
           label = 39;
          } else {
           $100 = ((($98)) + 12|0);
           $101 = HEAP32[$100>>2]|0;
           $102 = ((($98)) + 16|0);
           $103 = HEAP32[$102>>2]|0;
           $104 = ($101|0)==($103|0);
           if (!($104)) {
            if ($97) {
             $$pre$i2$i$i2139 = $$pre$i2$i$i21;$196 = $98;
             break;
            } else {
             $$0$ph$be = $$2$lcssa;
             break L21;
            }
           }
           $105 = HEAP32[$98>>2]|0;
           $106 = ((($105)) + 36|0);
           $107 = HEAP32[$106>>2]|0;
           $108 = (FUNCTION_TABLE_ii[$107 & 1023]($98)|0);
           $109 = ($108|0)==(-1);
           if ($109) {
            HEAP32[$__e>>2] = 0;
            $$pre$i2$i$i2140 = 0;
            label = 39;
            break;
           } else {
            $110 = ($$pre$i2$i$i21|0)==(0|0);
            $tmp$i$i23 = $97 ^ $110;
            if ($tmp$i$i23) {
             $$pre$i2$i$i2139 = $$pre$i2$i$i21;$196 = $$pre$i2$i$i21;
             break;
            } else {
             $$0$ph$be = $$2$lcssa;
             break L21;
            }
           }
          }
         } while(0);
         if ((label|0) == 39) {
          label = 0;
          if ($97) {
           $$0$ph$be = $$2$lcssa;
           break L21;
          } else {
           $$pre$i2$i$i2139 = $$pre$i2$i$i2140;$196 = 0;
          }
         }
         $111 = ((($96)) + 12|0);
         $112 = HEAP32[$111>>2]|0;
         $113 = ((($96)) + 16|0);
         $114 = HEAP32[$113>>2]|0;
         $115 = ($112|0)==($114|0);
         if ($115) {
          $116 = HEAP32[$96>>2]|0;
          $117 = ((($116)) + 36|0);
          $118 = HEAP32[$117>>2]|0;
          $119 = (FUNCTION_TABLE_ii[$118 & 1023]($96)|0);
          $$0$i$i = $119;
         } else {
          $120 = HEAP8[$112>>0]|0;
          $121 = $120&255;
          $$0$i$i = $121;
         }
         $122 = $$0$i$i&255;
         $isascii1$i24 = ($122<<24>>24)>(-1);
         if (!($isascii1$i24)) {
          $$0$ph$be = $$2$lcssa;
          break L21;
         }
         $sext = $$0$i$i << 24;
         $123 = $sext >> 24;
         $124 = HEAP32[$7>>2]|0;
         $125 = (($124) + ($123<<1)|0);
         $126 = HEAP16[$125>>1]|0;
         $127 = $126 & 8192;
         $128 = ($127<<16>>16)==(0);
         if ($128) {
          $$0$ph$be = $$2$lcssa;
          break L21;
         }
         $129 = HEAP32[$111>>2]|0;
         $130 = HEAP32[$113>>2]|0;
         $131 = ($129|0)==($130|0);
         if ($131) {
          $132 = HEAP32[$96>>2]|0;
          $133 = ((($132)) + 40|0);
          $134 = HEAP32[$133>>2]|0;
          (FUNCTION_TABLE_ii[$134 & 1023]($96)|0);
          $$pre$i$i$i17 = $96;$$pre$i2$i$i21 = $$pre$i2$i$i2139;$98 = $196;
          continue;
         } else {
          $135 = ((($129)) + 1|0);
          HEAP32[$111>>2] = $135;
          $$pre$i$i$i17 = $96;$$pre$i2$i$i21 = $$pre$i2$i$i2139;$98 = $196;
          continue;
         }
        }
       }
      }
      $136 = ((($23)) + 12|0);
      $137 = HEAP32[$136>>2]|0;
      $138 = ((($23)) + 16|0);
      $139 = HEAP32[$138>>2]|0;
      $140 = ($137|0)==($139|0);
      if ($140) {
       $141 = HEAP32[$23>>2]|0;
       $142 = ((($141)) + 36|0);
       $143 = HEAP32[$142>>2]|0;
       $144 = (FUNCTION_TABLE_ii[$143 & 1023]($23)|0);
       $$0$i$i26 = $144;
      } else {
       $145 = HEAP8[$137>>0]|0;
       $146 = $145&255;
       $$0$i$i26 = $146;
      }
      $147 = $$0$i$i26&255;
      $148 = HEAP32[$4>>2]|0;
      $149 = ((($148)) + 12|0);
      $150 = HEAP32[$149>>2]|0;
      $151 = (FUNCTION_TABLE_iii[$150 & 1023]($4,$147)|0);
      $152 = HEAP8[$$0$ph86>>0]|0;
      $153 = HEAP32[$4>>2]|0;
      $154 = ((($153)) + 12|0);
      $155 = HEAP32[$154>>2]|0;
      $156 = (FUNCTION_TABLE_iii[$155 & 1023]($4,$152)|0);
      $157 = ($151<<24>>24)==($156<<24>>24);
      if (!($157)) {
       label = 57;
       break L5;
      }
      $158 = HEAP32[$136>>2]|0;
      $159 = HEAP32[$138>>2]|0;
      $160 = ($158|0)==($159|0);
      if ($160) {
       $161 = HEAP32[$23>>2]|0;
       $162 = ((($161)) + 40|0);
       $163 = HEAP32[$162>>2]|0;
       (FUNCTION_TABLE_ii[$163 & 1023]($23)|0);
      } else {
       $164 = ((($158)) + 1|0);
       HEAP32[$136>>2] = $164;
      }
      $165 = ((($$0$ph86)) + 1|0);
      $$0$ph$be = $165;
     }
    } while(0);
    $$pre$pre = HEAP32[$__err>>2]|0;
    $68 = ($$0$ph$be|0)!=($__fmte|0);
    $69 = ($$pre$pre|0)==(0);
    $or$cond84 = $68 & $69;
    $70 = HEAP32[$__b>>2]|0;
    if ($or$cond84) {
     $$0$ph86 = $$0$ph$be;$10 = $70;
    } else {
     $$pre$i$i$i8 = $70;
     break L4;
    }
   }
   if ((label|0) == 13) {
    HEAP32[$__err>>2] = 4;
    $$pre$i$i$i8 = $$lcssa;
    break;
   }
   else if ((label|0) == 17) {
    HEAP32[$__err>>2] = 4;
    $$pre$i$i$i8 = $$lcssa94;
    break;
   }
   else if ((label|0) == 20) {
    HEAP32[$__err>>2] = 4;
    $$pre$i$i$i8 = $$lcssa95;
    break;
   }
   else if ((label|0) == 57) {
    HEAP32[$__err>>2] = 4;
    $166 = HEAP32[$__b>>2]|0;
    $$pre$i$i$i8 = $166;
    break;
   }
  }
 } while(0);
 $167 = ($$pre$i$i$i8|0)==(0|0);
 if ($167) {
  $178 = 0;
 } else {
  $168 = ((($$pre$i$i$i8)) + 12|0);
  $169 = HEAP32[$168>>2]|0;
  $170 = ((($$pre$i$i$i8)) + 16|0);
  $171 = HEAP32[$170>>2]|0;
  $172 = ($169|0)==($171|0);
  if ($172) {
   $173 = HEAP32[$$pre$i$i$i8>>2]|0;
   $174 = ((($173)) + 36|0);
   $175 = HEAP32[$174>>2]|0;
   $176 = (FUNCTION_TABLE_ii[$175 & 1023]($$pre$i$i$i8)|0);
   $177 = ($176|0)==(-1);
   if ($177) {
    HEAP32[$__b>>2] = 0;
    $178 = 0;
   } else {
    $178 = $$pre$i$i$i8;
   }
  } else {
   $178 = $$pre$i$i$i8;
  }
 }
 $179 = ($178|0)==(0|0);
 $180 = HEAP32[$__e>>2]|0;
 $181 = ($180|0)==(0|0);
 do {
  if ($181) {
   label = 67;
  } else {
   $182 = ((($180)) + 12|0);
   $183 = HEAP32[$182>>2]|0;
   $184 = ((($180)) + 16|0);
   $185 = HEAP32[$184>>2]|0;
   $186 = ($183|0)==($185|0);
   if ($186) {
    $187 = HEAP32[$180>>2]|0;
    $188 = ((($187)) + 36|0);
    $189 = HEAP32[$188>>2]|0;
    $190 = (FUNCTION_TABLE_ii[$189 & 1023]($180)|0);
    $191 = ($190|0)==(-1);
    if ($191) {
     HEAP32[$__e>>2] = 0;
     label = 67;
     break;
    }
   }
   if (!($179)) {
    label = 68;
   }
  }
 } while(0);
 if ((label|0) == 67) {
  if ($179) {
   label = 68;
  }
 }
 if ((label|0) == 68) {
  $192 = HEAP32[$__err>>2]|0;
  $193 = $192 | 2;
  HEAP32[$__err>>2] = $193;
 }
 STACKTOP = sp;return ($178|0);
}
function __ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,9800,(9808))|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = ((($this)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($3)) + 20|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (FUNCTION_TABLE_ii[$5 & 1023]($2)|0);
 $7 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $7;
 $8 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $8;
 $9 = HEAP8[$6>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($6)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($6)) + 1|0);
 $15 = $11 ? $14 : $13;
 $16 = ((($6)) + 4|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = $9&255;
 $19 = $18 >>> 1;
 $20 = $11 ? $19 : $17;
 $21 = (($15) + ($20)|0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $22 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,$15,$21)|0);
 STACKTOP = sp;return ($22|0);
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $2;
 __THREW__ = 0;
 $3 = (invoke_iii(452,($0|0),(6760|0))|0);
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if ($5) {
  $9 = ___cxa_find_matching_catch()|0;
  $10 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
  ___resumeException($9|0);
  // unreachable;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
  $6 = ((($__tm)) + 24|0);
  $7 = HEAP32[$__e>>2]|0;
  HEAP32[$1>>2] = $7;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
  __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$6,$__b,$$byval_copy,$__err,$3);
  $8 = HEAP32[$__b>>2]|0;
  STACKTOP = sp;return ($8|0);
 }
 return (0)|0;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__w,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__w = $__w|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = ((($this)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (FUNCTION_TABLE_ii[$3 & 1023]($1)|0);
 $5 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $5;
 $6 = ((($4)) + 168|0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $7 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$4,$6,$__ct,$__err,0)|0);
 $8 = $7;
 $9 = $4;
 $10 = (($8) - ($9))|0;
 $11 = ($10|0)<(168);
 if ($11) {
  $12 = (($10|0) / 12)&-1;
  $13 = (($12|0) % 7)&-1;
  HEAP32[$__w>>2] = $13;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $2;
 __THREW__ = 0;
 $3 = (invoke_iii(452,($0|0),(6760|0))|0);
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if ($5) {
  $9 = ___cxa_find_matching_catch()|0;
  $10 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
  ___resumeException($9|0);
  // unreachable;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
  $6 = ((($__tm)) + 16|0);
  $7 = HEAP32[$__e>>2]|0;
  HEAP32[$1>>2] = $7;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
  __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$6,$__b,$$byval_copy,$__err,$3);
  $8 = HEAP32[$__b>>2]|0;
  STACKTOP = sp;return ($8|0);
 }
 return (0)|0;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = ((($this)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (FUNCTION_TABLE_ii[$4 & 1023]($1)|0);
 $6 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $6;
 $7 = ((($5)) + 288|0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $8 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$5,$7,$__ct,$__err,0)|0);
 $9 = $8;
 $10 = $5;
 $11 = (($9) - ($10))|0;
 $12 = ($11|0)<(288);
 if ($12) {
  $13 = (($11|0) / 12)&-1;
  $14 = (($13|0) % 12)&-1;
  HEAP32[$__m>>2] = $14;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $2;
 __THREW__ = 0;
 $3 = (invoke_iii(452,($0|0),(6760|0))|0);
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if ($5) {
  $9 = ___cxa_find_matching_catch()|0;
  $10 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
  ___resumeException($9|0);
  // unreachable;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
  $6 = ((($__tm)) + 20|0);
  $7 = HEAP32[$__e>>2]|0;
  HEAP32[$1>>2] = $7;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
  __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($this,$6,$__b,$$byval_copy,$__err,$3);
  $8 = HEAP32[$__b>>2]|0;
  STACKTOP = sp;return ($8|0);
 }
 return (0)|0;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__y,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__y = $__y|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$ = 0, $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__t$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,4)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = ($2|0)<(69);
  if ($6) {
   $7 = (($2) + 2000)|0;
   $__t$0 = $7;
  } else {
   $$off = (($2) + -69)|0;
   $8 = ($$off>>>0)<(31);
   $9 = (($2) + 1900)|0;
   $$ = $8 ? $9 : $2;
   $__t$0 = $$;
  }
  $10 = (($__t$0) + -1900)|0;
  HEAP32[$__y>>2] = $10;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc($this,$__b,$__e,$__iob,$__err,$__tm,$__fmt,$0) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $0 = $0|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy10 = 0, $$byval_copy11 = 0, $$byval_copy12 = 0, $$byval_copy13 = 0, $$byval_copy14 = 0, $$byval_copy15 = 0, $$byval_copy16 = 0, $$byval_copy17 = 0, $$byval_copy18 = 0, $$byval_copy19 = 0, $$byval_copy2 = 0, $$byval_copy20 = 0, $$byval_copy21 = 0, $$byval_copy22 = 0, $$byval_copy23 = 0, $$byval_copy24 = 0, $$byval_copy25 = 0, $$byval_copy26 = 0;
 var $$byval_copy27 = 0, $$byval_copy28 = 0, $$byval_copy29 = 0, $$byval_copy3 = 0, $$byval_copy30 = 0, $$byval_copy4 = 0, $$byval_copy5 = 0, $$byval_copy6 = 0, $$byval_copy7 = 0, $$byval_copy8 = 0, $$byval_copy9 = 0, $$sroa$07$0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy30 = sp + 248|0;
 $$byval_copy29 = sp + 244|0;
 $$byval_copy28 = sp + 240|0;
 $$byval_copy27 = sp + 236|0;
 $$byval_copy26 = sp + 232|0;
 $$byval_copy25 = sp + 228|0;
 $$byval_copy24 = sp + 224|0;
 $$byval_copy23 = sp + 220|0;
 $$byval_copy22 = sp + 216|0;
 $$byval_copy21 = sp + 212|0;
 $$byval_copy20 = sp + 208|0;
 $$byval_copy19 = sp + 204|0;
 $$byval_copy18 = sp + 200|0;
 $$byval_copy17 = sp + 196|0;
 $$byval_copy16 = sp + 192|0;
 $$byval_copy15 = sp + 188|0;
 $$byval_copy14 = sp + 184|0;
 $$byval_copy13 = sp + 180|0;
 $$byval_copy12 = sp + 176|0;
 $$byval_copy11 = sp + 172|0;
 $$byval_copy10 = sp + 168|0;
 $$byval_copy9 = sp + 164|0;
 $$byval_copy8 = sp + 160|0;
 $$byval_copy7 = sp + 156|0;
 $$byval_copy6 = sp + 152|0;
 $$byval_copy5 = sp + 148|0;
 $$byval_copy4 = sp + 144|0;
 $$byval_copy3 = sp + 140|0;
 $$byval_copy2 = sp + 136|0;
 $$byval_copy1 = sp + 132|0;
 $$byval_copy = sp + 128|0;
 $1 = sp + 124|0;
 $2 = sp + 120|0;
 $3 = sp + 116|0;
 $4 = sp + 112|0;
 $5 = sp + 108|0;
 $6 = sp + 104|0;
 $7 = sp + 100|0;
 $8 = sp + 96|0;
 $9 = sp + 92|0;
 $10 = sp + 88|0;
 $11 = sp + 84|0;
 $12 = sp + 80|0;
 $13 = sp + 76|0;
 $14 = sp + 72|0;
 $15 = sp + 68|0;
 $16 = sp + 64|0;
 $17 = sp + 60|0;
 $18 = sp + 56|0;
 $19 = sp + 52|0;
 $20 = sp + 48|0;
 $21 = sp + 44|0;
 $22 = sp + 40|0;
 $23 = sp + 36|0;
 $24 = sp + 32|0;
 $25 = sp + 28|0;
 $26 = sp + 24|0;
 $27 = sp + 20|0;
 $28 = sp + 16|0;
 $29 = sp + 12|0;
 $30 = sp + 8|0;
 $31 = sp + 4|0;
 $32 = sp;
 HEAP32[$__err>>2] = 0;
 $33 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$1>>2] = $33;
 __THREW__ = 0;
 $34 = (invoke_iii(452,($1|0),(6760|0))|0);
 $35 = __THREW__; __THREW__ = 0;
 $36 = $35&1;
 if ($36) {
  $38 = ___cxa_find_matching_catch()|0;
  $39 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($33)|0);
  ___resumeException($38|0);
  // unreachable;
 }
 (__ZNSt3__114__shared_count16__release_sharedEv($33)|0);
 $37 = $__fmt << 24 >> 24;
 do {
  switch ($37|0) {
  case 120:  {
   $98 = HEAP32[$this>>2]|0;
   $99 = ((($98)) + 20|0);
   $100 = HEAP32[$99>>2]|0;
   $101 = HEAP32[$__b>>2]|0;
   HEAP32[$26>>2] = $101;
   $102 = HEAP32[$__e>>2]|0;
   HEAP32[$27>>2] = $102;
   ;HEAP32[$$byval_copy24>>2]=HEAP32[$26>>2]|0;
   ;HEAP32[$$byval_copy25>>2]=HEAP32[$27>>2]|0;
   $103 = (FUNCTION_TABLE_iiiiiii[$100 & 511]($this,$$byval_copy24,$$byval_copy25,$__iob,$__err,$__tm)|0);
   $$sroa$07$0 = $103;
   break;
  }
  case 112:  {
   $84 = ((($__tm)) + 8|0);
   $85 = HEAP32[$__e>>2]|0;
   HEAP32[$17>>2] = $85;
   ;HEAP32[$$byval_copy15>>2]=HEAP32[$17>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE($this,$84,$__b,$$byval_copy15,$__err,$34);
   label = 28;
   break;
  }
  case 99:  {
   $44 = ((($this)) + 8|0);
   $45 = HEAP32[$44>>2]|0;
   $46 = ((($45)) + 12|0);
   $47 = HEAP32[$46>>2]|0;
   $48 = (FUNCTION_TABLE_ii[$47 & 1023]($44)|0);
   $49 = HEAP32[$__b>>2]|0;
   HEAP32[$4>>2] = $49;
   $50 = HEAP32[$__e>>2]|0;
   HEAP32[$5>>2] = $50;
   $51 = HEAP8[$48>>0]|0;
   $52 = $51 & 1;
   $53 = ($52<<24>>24)==(0);
   $54 = ((($48)) + 8|0);
   $55 = HEAP32[$54>>2]|0;
   $56 = ((($48)) + 1|0);
   $57 = $53 ? $56 : $55;
   $58 = ((($48)) + 4|0);
   $59 = HEAP32[$58>>2]|0;
   $60 = $51&255;
   $61 = $60 >>> 1;
   $62 = $53 ? $61 : $59;
   $63 = (($57) + ($62)|0);
   ;HEAP32[$$byval_copy2>>2]=HEAP32[$4>>2]|0;
   ;HEAP32[$$byval_copy3>>2]=HEAP32[$5>>2]|0;
   $64 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy2,$$byval_copy3,$__iob,$__err,$__tm,$57,$63)|0);
   HEAP32[$__b>>2] = $64;
   label = 28;
   break;
  }
  case 65: case 97:  {
   $40 = ((($__tm)) + 24|0);
   $41 = HEAP32[$__e>>2]|0;
   HEAP32[$2>>2] = $41;
   ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$40,$__b,$$byval_copy,$__err,$34);
   label = 28;
   break;
  }
  case 82:  {
   $89 = HEAP32[$__b>>2]|0;
   HEAP32[$20>>2] = $89;
   $90 = HEAP32[$__e>>2]|0;
   HEAP32[$21>>2] = $90;
   ;HEAP32[$$byval_copy18>>2]=HEAP32[$20>>2]|0;
   ;HEAP32[$$byval_copy19>>2]=HEAP32[$21>>2]|0;
   $91 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy18,$$byval_copy19,$__iob,$__err,$__tm,9840,(9845))|0);
   HEAP32[$__b>>2] = $91;
   label = 28;
   break;
  }
  case 83:  {
   $92 = HEAP32[$__e>>2]|0;
   HEAP32[$22>>2] = $92;
   ;HEAP32[$$byval_copy20>>2]=HEAP32[$22>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__tm,$__b,$$byval_copy20,$__err,$34);
   label = 28;
   break;
  }
  case 109:  {
   $79 = ((($__tm)) + 16|0);
   $80 = HEAP32[$__e>>2]|0;
   HEAP32[$14>>2] = $80;
   ;HEAP32[$$byval_copy12>>2]=HEAP32[$14>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE($this,$79,$__b,$$byval_copy12,$__err,$34);
   label = 28;
   break;
  }
  case 121:  {
   $125 = ((($__tm)) + 20|0);
   $126 = HEAP32[$__e>>2]|0;
   HEAP32[$30>>2] = $126;
   ;HEAP32[$$byval_copy28>>2]=HEAP32[$30>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($this,$125,$__b,$$byval_copy28,$__err,$34);
   label = 28;
   break;
  }
  case 88:  {
   $104 = ((($this)) + 8|0);
   $105 = HEAP32[$104>>2]|0;
   $106 = ((($105)) + 24|0);
   $107 = HEAP32[$106>>2]|0;
   $108 = (FUNCTION_TABLE_ii[$107 & 1023]($104)|0);
   $109 = HEAP32[$__b>>2]|0;
   HEAP32[$28>>2] = $109;
   $110 = HEAP32[$__e>>2]|0;
   HEAP32[$29>>2] = $110;
   $111 = HEAP8[$108>>0]|0;
   $112 = $111 & 1;
   $113 = ($112<<24>>24)==(0);
   $114 = ((($108)) + 8|0);
   $115 = HEAP32[$114>>2]|0;
   $116 = ((($108)) + 1|0);
   $117 = $113 ? $116 : $115;
   $118 = ((($108)) + 4|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = $111&255;
   $121 = $120 >>> 1;
   $122 = $113 ? $121 : $119;
   $123 = (($117) + ($122)|0);
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$28>>2]|0;
   ;HEAP32[$$byval_copy27>>2]=HEAP32[$29>>2]|0;
   $124 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy26,$$byval_copy27,$__iob,$__err,$__tm,$117,$123)|0);
   HEAP32[$__b>>2] = $124;
   label = 28;
   break;
  }
  case 114:  {
   $86 = HEAP32[$__b>>2]|0;
   HEAP32[$18>>2] = $86;
   $87 = HEAP32[$__e>>2]|0;
   HEAP32[$19>>2] = $87;
   ;HEAP32[$$byval_copy16>>2]=HEAP32[$18>>2]|0;
   ;HEAP32[$$byval_copy17>>2]=HEAP32[$19>>2]|0;
   $88 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy16,$$byval_copy17,$__iob,$__err,$__tm,9824,(9835))|0);
   HEAP32[$__b>>2] = $88;
   label = 28;
   break;
  }
  case 119:  {
   $96 = ((($__tm)) + 24|0);
   $97 = HEAP32[$__e>>2]|0;
   HEAP32[$25>>2] = $97;
   ;HEAP32[$$byval_copy23>>2]=HEAP32[$25>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE($this,$96,$__b,$$byval_copy23,$__err,$34);
   label = 28;
   break;
  }
  case 101: case 100:  {
   $65 = ((($__tm)) + 12|0);
   $66 = HEAP32[$__e>>2]|0;
   HEAP32[$6>>2] = $66;
   ;HEAP32[$$byval_copy4>>2]=HEAP32[$6>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE($this,$65,$__b,$$byval_copy4,$__err,$34);
   label = 28;
   break;
  }
  case 77:  {
   $81 = ((($__tm)) + 4|0);
   $82 = HEAP32[$__e>>2]|0;
   HEAP32[$15>>2] = $82;
   ;HEAP32[$$byval_copy13>>2]=HEAP32[$15>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE($this,$81,$__b,$$byval_copy13,$__err,$34);
   label = 28;
   break;
  }
  case 70:  {
   $70 = HEAP32[$__b>>2]|0;
   HEAP32[$9>>2] = $70;
   $71 = HEAP32[$__e>>2]|0;
   HEAP32[$10>>2] = $71;
   ;HEAP32[$$byval_copy7>>2]=HEAP32[$9>>2]|0;
   ;HEAP32[$$byval_copy8>>2]=HEAP32[$10>>2]|0;
   $72 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy7,$$byval_copy8,$__iob,$__err,$__tm,9816,(9824))|0);
   HEAP32[$__b>>2] = $72;
   label = 28;
   break;
  }
  case 84:  {
   $93 = HEAP32[$__b>>2]|0;
   HEAP32[$23>>2] = $93;
   $94 = HEAP32[$__e>>2]|0;
   HEAP32[$24>>2] = $94;
   ;HEAP32[$$byval_copy21>>2]=HEAP32[$23>>2]|0;
   ;HEAP32[$$byval_copy22>>2]=HEAP32[$24>>2]|0;
   $95 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy21,$$byval_copy22,$__iob,$__err,$__tm,9848,(9856))|0);
   HEAP32[$__b>>2] = $95;
   label = 28;
   break;
  }
  case 68:  {
   $67 = HEAP32[$__b>>2]|0;
   HEAP32[$7>>2] = $67;
   $68 = HEAP32[$__e>>2]|0;
   HEAP32[$8>>2] = $68;
   ;HEAP32[$$byval_copy5>>2]=HEAP32[$7>>2]|0;
   ;HEAP32[$$byval_copy6>>2]=HEAP32[$8>>2]|0;
   $69 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy5,$$byval_copy6,$__iob,$__err,$__tm,9808,(9816))|0);
   HEAP32[$__b>>2] = $69;
   label = 28;
   break;
  }
  case 104: case 66: case 98:  {
   $42 = ((($__tm)) + 16|0);
   $43 = HEAP32[$__e>>2]|0;
   HEAP32[$3>>2] = $43;
   ;HEAP32[$$byval_copy1>>2]=HEAP32[$3>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$42,$__b,$$byval_copy1,$__err,$34);
   label = 28;
   break;
  }
  case 89:  {
   $127 = ((($__tm)) + 20|0);
   $128 = HEAP32[$__e>>2]|0;
   HEAP32[$31>>2] = $128;
   ;HEAP32[$$byval_copy29>>2]=HEAP32[$31>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE($this,$127,$__b,$$byval_copy29,$__err,$34);
   label = 28;
   break;
  }
  case 37:  {
   $129 = HEAP32[$__e>>2]|0;
   HEAP32[$32>>2] = $129;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$32>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE($this,$__b,$$byval_copy30,$__err,$34);
   label = 28;
   break;
  }
  case 116: case 110:  {
   $83 = HEAP32[$__e>>2]|0;
   HEAP32[$16>>2] = $83;
   ;HEAP32[$$byval_copy14>>2]=HEAP32[$16>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE($this,$__b,$$byval_copy14,$__err,$34);
   label = 28;
   break;
  }
  case 72:  {
   $73 = ((($__tm)) + 8|0);
   $74 = HEAP32[$__e>>2]|0;
   HEAP32[$11>>2] = $74;
   ;HEAP32[$$byval_copy9>>2]=HEAP32[$11>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this,$73,$__b,$$byval_copy9,$__err,$34);
   label = 28;
   break;
  }
  case 73:  {
   $75 = ((($__tm)) + 8|0);
   $76 = HEAP32[$__e>>2]|0;
   HEAP32[$12>>2] = $76;
   ;HEAP32[$$byval_copy10>>2]=HEAP32[$12>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this,$75,$__b,$$byval_copy10,$__err,$34);
   label = 28;
   break;
  }
  case 106:  {
   $77 = ((($__tm)) + 28|0);
   $78 = HEAP32[$__e>>2]|0;
   HEAP32[$13>>2] = $78;
   ;HEAP32[$$byval_copy11>>2]=HEAP32[$13>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE($this,$77,$__b,$$byval_copy11,$__err,$34);
   label = 28;
   break;
  }
  default: {
   $130 = HEAP32[$__err>>2]|0;
   $131 = $130 | 4;
   HEAP32[$__err>>2] = $131;
   label = 28;
  }
  }
 } while(0);
 if ((label|0) == 28) {
  $132 = HEAP32[$__b>>2]|0;
  $$sroa$07$0 = $132;
 }
 STACKTOP = sp;return ($$sroa$07$0|0);
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__d,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__d = $__d|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $$off = (($2) + -1)|0;
 $6 = ($$off>>>0)<(31);
 $7 = $6 & $5;
 if ($7) {
  HEAP32[$__d>>2] = $2;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(24);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__h>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $$off = (($2) + -1)|0;
 $6 = ($$off>>>0)<(12);
 $7 = $6 & $5;
 if ($7) {
  HEAP32[$__h>>2] = $2;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__d,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__d = $__d|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,3)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(366);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__d>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(13);
 $or$cond = $6 & $5;
 if ($or$cond) {
  $7 = (($2) + -1)|0;
  HEAP32[$__m>>2] = $7;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(60);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__m>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE($this,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$0$i$i = 0, $$pre$i$i$i = 0, $$pre$i$i$i2 = 0, $$pre$i2$i$i6 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $9 = 0, $isascii1$i = 0, $sext = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($__ct)) + 8|0);
 L1: while(1) {
  $1 = HEAP32[$__b>>2]|0;
  $2 = ($1|0)==(0|0);
  do {
   if ($2) {
    $13 = 0;
   } else {
    $3 = ((($1)) + 12|0);
    $4 = HEAP32[$3>>2]|0;
    $5 = ((($1)) + 16|0);
    $6 = HEAP32[$5>>2]|0;
    $7 = ($4|0)==($6|0);
    if ($7) {
     $8 = HEAP32[$1>>2]|0;
     $9 = ((($8)) + 36|0);
     $10 = HEAP32[$9>>2]|0;
     $11 = (FUNCTION_TABLE_ii[$10 & 1023]($1)|0);
     $12 = ($11|0)==(-1);
     if ($12) {
      HEAP32[$__b>>2] = 0;
      $13 = 0;
      break;
     } else {
      $$pre$i$i$i = HEAP32[$__b>>2]|0;
      $13 = $$pre$i$i$i;
      break;
     }
    } else {
     $13 = $1;
    }
   }
  } while(0);
  $14 = ($13|0)==(0|0);
  $15 = HEAP32[$__e>>2]|0;
  $16 = ($15|0)==(0|0);
  do {
   if ($16) {
    label = 12;
   } else {
    $17 = ((($15)) + 12|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ((($15)) + 16|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = ($18|0)==($20|0);
    if (!($21)) {
     if ($14) {
      $83 = $15;
      break;
     } else {
      $$pre$i2$i$i6 = $15;
      break L1;
     }
    }
    $22 = HEAP32[$15>>2]|0;
    $23 = ((($22)) + 36|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = (FUNCTION_TABLE_ii[$24 & 1023]($15)|0);
    $26 = ($25|0)==(-1);
    if ($26) {
     HEAP32[$__e>>2] = 0;
     label = 12;
     break;
    } else {
     if ($14) {
      $83 = $15;
      break;
     } else {
      $$pre$i2$i$i6 = $15;
      break L1;
     }
    }
   }
  } while(0);
  if ((label|0) == 12) {
   label = 0;
   if ($14) {
    $$pre$i2$i$i6 = 0;
    break;
   } else {
    $83 = 0;
   }
  }
  $27 = HEAP32[$__b>>2]|0;
  $28 = ((($27)) + 12|0);
  $29 = HEAP32[$28>>2]|0;
  $30 = ((($27)) + 16|0);
  $31 = HEAP32[$30>>2]|0;
  $32 = ($29|0)==($31|0);
  if ($32) {
   $33 = HEAP32[$27>>2]|0;
   $34 = ((($33)) + 36|0);
   $35 = HEAP32[$34>>2]|0;
   $36 = (FUNCTION_TABLE_ii[$35 & 1023]($27)|0);
   $$0$i$i = $36;
  } else {
   $37 = HEAP8[$29>>0]|0;
   $38 = $37&255;
   $$0$i$i = $38;
  }
  $39 = $$0$i$i&255;
  $isascii1$i = ($39<<24>>24)>(-1);
  if (!($isascii1$i)) {
   $$pre$i2$i$i6 = $83;
   break;
  }
  $sext = $$0$i$i << 24;
  $40 = $sext >> 24;
  $41 = HEAP32[$0>>2]|0;
  $42 = (($41) + ($40<<1)|0);
  $43 = HEAP16[$42>>1]|0;
  $44 = $43 & 8192;
  $45 = ($44<<16>>16)==(0);
  if ($45) {
   $$pre$i2$i$i6 = $83;
   break;
  }
  $46 = HEAP32[$__b>>2]|0;
  $47 = ((($46)) + 12|0);
  $48 = HEAP32[$47>>2]|0;
  $49 = ((($46)) + 16|0);
  $50 = HEAP32[$49>>2]|0;
  $51 = ($48|0)==($50|0);
  if ($51) {
   $52 = HEAP32[$46>>2]|0;
   $53 = ((($52)) + 40|0);
   $54 = HEAP32[$53>>2]|0;
   (FUNCTION_TABLE_ii[$54 & 1023]($46)|0);
   continue;
  } else {
   $55 = ((($48)) + 1|0);
   HEAP32[$47>>2] = $55;
   continue;
  }
 }
 $56 = HEAP32[$__b>>2]|0;
 $57 = ($56|0)==(0|0);
 do {
  if ($57) {
   $68 = 0;
  } else {
   $58 = ((($56)) + 12|0);
   $59 = HEAP32[$58>>2]|0;
   $60 = ((($56)) + 16|0);
   $61 = HEAP32[$60>>2]|0;
   $62 = ($59|0)==($61|0);
   if ($62) {
    $63 = HEAP32[$56>>2]|0;
    $64 = ((($63)) + 36|0);
    $65 = HEAP32[$64>>2]|0;
    $66 = (FUNCTION_TABLE_ii[$65 & 1023]($56)|0);
    $67 = ($66|0)==(-1);
    if ($67) {
     HEAP32[$__b>>2] = 0;
     $68 = 0;
     break;
    } else {
     $$pre$i$i$i2 = HEAP32[$__b>>2]|0;
     $68 = $$pre$i$i$i2;
     break;
    }
   } else {
    $68 = $56;
   }
  }
 } while(0);
 $69 = ($68|0)==(0|0);
 $70 = ($$pre$i2$i$i6|0)==(0|0);
 do {
  if ($70) {
   label = 32;
  } else {
   $71 = ((($$pre$i2$i$i6)) + 12|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = ((($$pre$i2$i$i6)) + 16|0);
   $74 = HEAP32[$73>>2]|0;
   $75 = ($72|0)==($74|0);
   if ($75) {
    $76 = HEAP32[$$pre$i2$i$i6>>2]|0;
    $77 = ((($76)) + 36|0);
    $78 = HEAP32[$77>>2]|0;
    $79 = (FUNCTION_TABLE_ii[$78 & 1023]($$pre$i2$i$i6)|0);
    $80 = ($79|0)==(-1);
    if ($80) {
     HEAP32[$__e>>2] = 0;
     label = 32;
     break;
    }
   }
   if (!($69)) {
    label = 33;
   }
  }
 } while(0);
 if ((label|0) == 32) {
  if ($69) {
   label = 33;
  }
 }
 if ((label|0) == 33) {
  $81 = HEAP32[$__err>>2]|0;
  $82 = $81 | 2;
  HEAP32[$__err>>2] = $82;
 }
 return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = ((($this)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (FUNCTION_TABLE_ii[$4 & 1023]($1)|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = $6 & 1;
 $8 = ($7<<24>>24)==(0);
 if ($8) {
  $11 = $6&255;
  $12 = $11 >>> 1;
  $23 = $12;
 } else {
  $9 = ((($5)) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $23 = $10;
 }
 $13 = ((($5)) + 12|0);
 $14 = HEAP8[$13>>0]|0;
 $15 = $14 & 1;
 $16 = ($15<<24>>24)==(0);
 if ($16) {
  $19 = $14&255;
  $20 = $19 >>> 1;
  $22 = $20;
 } else {
  $17 = ((($5)) + 16|0);
  $18 = HEAP32[$17>>2]|0;
  $22 = $18;
 }
 $21 = (0 - ($22))|0;
 $24 = ($23|0)==($21|0);
 do {
  if ($24) {
   $25 = HEAP32[$__err>>2]|0;
   $26 = $25 | 4;
   HEAP32[$__err>>2] = $26;
  } else {
   $27 = HEAP32[$__e>>2]|0;
   HEAP32[$0>>2] = $27;
   $28 = ((($5)) + 24|0);
   ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
   $29 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$5,$28,$__ct,$__err,0)|0);
   $30 = ($29|0)==($5|0);
   $31 = HEAP32[$__h>>2]|0;
   $32 = ($31|0)==(12);
   $or$cond = $30 & $32;
   if ($or$cond) {
    HEAP32[$__h>>2] = 0;
    break;
   }
   $33 = $29;
   $34 = $5;
   $35 = (($33) - ($34))|0;
   $36 = ($35|0)==(12);
   $37 = ($31|0)<(12);
   $or$cond3 = $37 & $36;
   if ($or$cond3) {
    $38 = (($31) + 12)|0;
    HEAP32[$__h>>2] = $38;
   }
  }
 } while(0);
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__s,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__s = $__s|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(61);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__s>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__w,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__w = $__w|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,1)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(7);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__w>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__y,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__y = $__y|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,4)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = (($2) + -1900)|0;
  HEAP32[$__y>>2] = $6;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE($this,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i2 = 0, $$pre$i2$i$i611 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__b>>2]|0;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $12 = 0;
  } else {
   $2 = ((($0)) + 12|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = ((($0)) + 16|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = ($3|0)==($5|0);
   if ($6) {
    $7 = HEAP32[$0>>2]|0;
    $8 = ((($7)) + 36|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = (FUNCTION_TABLE_ii[$9 & 1023]($0)|0);
    $11 = ($10|0)==(-1);
    if ($11) {
     HEAP32[$__b>>2] = 0;
     $12 = 0;
     break;
    } else {
     $$pre$i$i$i = HEAP32[$__b>>2]|0;
     $12 = $$pre$i$i$i;
     break;
    }
   } else {
    $12 = $0;
   }
  }
 } while(0);
 $13 = ($12|0)==(0|0);
 $14 = HEAP32[$__e>>2]|0;
 $15 = ($14|0)==(0|0);
 do {
  if ($15) {
   label = 11;
  } else {
   $16 = ((($14)) + 12|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ((($14)) + 16|0);
   $19 = HEAP32[$18>>2]|0;
   $20 = ($17|0)==($19|0);
   if ($20) {
    $21 = HEAP32[$14>>2]|0;
    $22 = ((($21)) + 36|0);
    $23 = HEAP32[$22>>2]|0;
    $24 = (FUNCTION_TABLE_ii[$23 & 1023]($14)|0);
    $25 = ($24|0)==(-1);
    if ($25) {
     HEAP32[$__e>>2] = 0;
     label = 11;
     break;
    }
   }
   if ($13) {
    $$pre$i2$i$i611 = $14;
    label = 13;
   } else {
    label = 12;
   }
  }
 } while(0);
 if ((label|0) == 11) {
  if ($13) {
   label = 12;
  } else {
   $$pre$i2$i$i611 = 0;
   label = 13;
  }
 }
 L16: do {
  if ((label|0) == 12) {
   $26 = HEAP32[$__err>>2]|0;
   $27 = $26 | 6;
   HEAP32[$__err>>2] = $27;
  }
  else if ((label|0) == 13) {
   $28 = HEAP32[$__b>>2]|0;
   $29 = ((($28)) + 12|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = ((($28)) + 16|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = ($30|0)==($32|0);
   if ($33) {
    $34 = HEAP32[$28>>2]|0;
    $35 = ((($34)) + 36|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = (FUNCTION_TABLE_ii[$36 & 1023]($28)|0);
    $$0$i$i = $37;
   } else {
    $38 = HEAP8[$30>>0]|0;
    $39 = $38&255;
    $$0$i$i = $39;
   }
   $40 = $$0$i$i&255;
   $41 = HEAP32[$__ct>>2]|0;
   $42 = ((($41)) + 36|0);
   $43 = HEAP32[$42>>2]|0;
   $44 = (FUNCTION_TABLE_iiii[$43 & 1023]($__ct,$40,0)|0);
   $45 = ($44<<24>>24)==(37);
   if (!($45)) {
    $46 = HEAP32[$__err>>2]|0;
    $47 = $46 | 4;
    HEAP32[$__err>>2] = $47;
    break;
   }
   $48 = HEAP32[$__b>>2]|0;
   $49 = ((($48)) + 12|0);
   $50 = HEAP32[$49>>2]|0;
   $51 = ((($48)) + 16|0);
   $52 = HEAP32[$51>>2]|0;
   $53 = ($50|0)==($52|0);
   if ($53) {
    $55 = HEAP32[$48>>2]|0;
    $56 = ((($55)) + 40|0);
    $57 = HEAP32[$56>>2]|0;
    (FUNCTION_TABLE_ii[$57 & 1023]($48)|0);
    $$pre = HEAP32[$__b>>2]|0;
    $58 = ($$pre|0)==(0|0);
    if ($58) {
     $70 = 0;
    } else {
     $60 = $$pre;
     label = 21;
    }
   } else {
    $54 = ((($50)) + 1|0);
    HEAP32[$49>>2] = $54;
    $60 = $48;
    label = 21;
   }
   do {
    if ((label|0) == 21) {
     $59 = ((($60)) + 12|0);
     $61 = HEAP32[$59>>2]|0;
     $62 = ((($60)) + 16|0);
     $63 = HEAP32[$62>>2]|0;
     $64 = ($61|0)==($63|0);
     if ($64) {
      $65 = HEAP32[$60>>2]|0;
      $66 = ((($65)) + 36|0);
      $67 = HEAP32[$66>>2]|0;
      $68 = (FUNCTION_TABLE_ii[$67 & 1023]($60)|0);
      $69 = ($68|0)==(-1);
      if ($69) {
       HEAP32[$__b>>2] = 0;
       $70 = 0;
       break;
      } else {
       $$pre$i$i$i2 = HEAP32[$__b>>2]|0;
       $70 = $$pre$i$i$i2;
       break;
      }
     } else {
      $70 = $60;
     }
    }
   } while(0);
   $71 = ($70|0)==(0|0);
   $72 = ($$pre$i2$i$i611|0)==(0|0);
   do {
    if ($72) {
     label = 30;
    } else {
     $73 = ((($$pre$i2$i$i611)) + 12|0);
     $74 = HEAP32[$73>>2]|0;
     $75 = ((($$pre$i2$i$i611)) + 16|0);
     $76 = HEAP32[$75>>2]|0;
     $77 = ($74|0)==($76|0);
     if ($77) {
      $78 = HEAP32[$$pre$i2$i$i611>>2]|0;
      $79 = ((($78)) + 36|0);
      $80 = HEAP32[$79>>2]|0;
      $81 = (FUNCTION_TABLE_ii[$80 & 1023]($$pre$i2$i$i611)|0);
      $82 = ($81|0)==(-1);
      if ($82) {
       HEAP32[$__e>>2] = 0;
       label = 30;
       break;
      }
     }
     if ($71) {
      break L16;
     }
    }
   } while(0);
   if ((label|0) == 30) {
    if (!($71)) {
     break;
    }
   }
   $83 = HEAP32[$__err>>2]|0;
   $84 = $83 | 2;
   HEAP32[$__err>>2] = $84;
  }
 } while(0);
 return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$__b,$__e,$__iob,$__err,$__tm,$__fmtb,$__fmte) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 $__fmtb = $__fmtb|0;
 $__fmte = $__fmte|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i20 = 0, $$0$i$i$i$i5 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i11 = 0, $$0$i$i1$i$i26 = 0, $$0$i$i17 = 0, $$0$ph$be = 0, $$0$ph89 = 0, $$0$pn = 0, $$2 = 0, $$2$lcssa = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$lcssa = 0, $$lcssa97 = 0, $$lcssa98 = 0, $$ph = 0, $$pre$i$i$i22 = 0;
 var $$pre$i$i$i7 = 0, $$pre$i3$i$i13 = 0, $$pre$i3$i$i1344 = 0, $$pre$i3$i$i1345 = 0, $$pre$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;
 var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0;
 var $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0;
 var $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0;
 var $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0;
 var $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__cmd$0 = 0, $__opt$0 = 0, $or$cond87 = 0, $phitmp$i4$i$i14 = 0;
 var $tmp$i$i16 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 16|0;
 $$byval_copy = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 $2 = sp;
 $3 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $3;
 __THREW__ = 0;
 $4 = (invoke_iii(452,($0|0),(6752|0))|0);
 $5 = __THREW__; __THREW__ = 0;
 $6 = $5&1;
 if ($6) {
  $37 = ___cxa_find_matching_catch()|0;
  $38 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($3)|0);
  ___resumeException($37|0);
  // unreachable;
 }
 (__ZNSt3__114__shared_count16__release_sharedEv($3)|0);
 HEAP32[$__err>>2] = 0;
 $7 = ($__fmtb|0)==($__fmte|0);
 $8 = HEAP32[$__b>>2]|0;
 L4: do {
  if ($7) {
   $$pre$i$i$i22 = $8;
  } else {
   $$0$ph89 = $__fmtb;$9 = $8;
   L5: while(1) {
    $10 = ($9|0)==(0|0);
    $11 = $9;
    if ($10) {
     $130 = 0;$187 = 1;$62 = $11;
    } else {
     $12 = ((($9)) + 12|0);
     $13 = HEAP32[$12>>2]|0;
     $14 = ((($9)) + 16|0);
     $15 = HEAP32[$14>>2]|0;
     $16 = ($13|0)==($15|0);
     if ($16) {
      $17 = HEAP32[$9>>2]|0;
      $18 = ((($17)) + 36|0);
      $19 = HEAP32[$18>>2]|0;
      $20 = (FUNCTION_TABLE_ii[$19 & 1023]($9)|0);
      $$0$i$i$i$i = $20;
     } else {
      $21 = HEAP32[$13>>2]|0;
      $$0$i$i$i$i = $21;
     }
     $22 = ($$0$i$i$i$i|0)==(-1);
     if ($22) {
      HEAP32[$__b>>2] = 0;
      $130 = 0;$187 = 1;$62 = 0;
     } else {
      $130 = $9;$187 = 0;$62 = $11;
     }
    }
    $23 = HEAP32[$__e>>2]|0;
    $24 = ($23|0)==(0|0);
    $25 = $23;
    do {
     if ($24) {
      $$ph = $25;
      label = 15;
     } else {
      $26 = ((($23)) + 12|0);
      $27 = HEAP32[$26>>2]|0;
      $28 = ((($23)) + 16|0);
      $29 = HEAP32[$28>>2]|0;
      $30 = ($27|0)==($29|0);
      if ($30) {
       $31 = HEAP32[$23>>2]|0;
       $32 = ((($31)) + 36|0);
       $33 = HEAP32[$32>>2]|0;
       $34 = (FUNCTION_TABLE_ii[$33 & 1023]($23)|0);
       $$0$i$i1$i$i = $34;
      } else {
       $35 = HEAP32[$27>>2]|0;
       $$0$i$i1$i$i = $35;
      }
      $36 = ($$0$i$i1$i$i|0)==(-1);
      if ($36) {
       HEAP32[$__e>>2] = 0;
       $$ph = 0;
       label = 15;
       break;
      } else {
       if ($187) {
        $188 = $23;$63 = $25;
        break;
       } else {
        $$lcssa = $130;
        label = 17;
        break L5;
       }
      }
     }
    } while(0);
    if ((label|0) == 15) {
     label = 0;
     if ($187) {
      $$lcssa = $130;
      label = 17;
      break;
     } else {
      $188 = 0;$63 = $$ph;
     }
    }
    $39 = HEAP32[$$0$ph89>>2]|0;
    $40 = HEAP32[$4>>2]|0;
    $41 = ((($40)) + 52|0);
    $42 = HEAP32[$41>>2]|0;
    $43 = (FUNCTION_TABLE_iiii[$42 & 1023]($4,$39,0)|0);
    $44 = ($43<<24>>24)==(37);
    L27: do {
     if ($44) {
      $45 = ((($$0$ph89)) + 4|0);
      $46 = ($45|0)==($__fmte|0);
      if ($46) {
       $$lcssa97 = $130;
       label = 21;
       break L5;
      }
      $47 = HEAP32[$45>>2]|0;
      $48 = HEAP32[$4>>2]|0;
      $49 = ((($48)) + 52|0);
      $50 = HEAP32[$49>>2]|0;
      $51 = (FUNCTION_TABLE_iiii[$50 & 1023]($4,$47,0)|0);
      if ((($51<<24>>24) == 48) | (($51<<24>>24) == 69)) {
       $52 = ((($$0$ph89)) + 8|0);
       $53 = ($52|0)==($__fmte|0);
       if ($53) {
        $$lcssa98 = $130;
        label = 24;
        break L5;
       }
       $54 = HEAP32[$52>>2]|0;
       $55 = HEAP32[$4>>2]|0;
       $56 = ((($55)) + 52|0);
       $57 = HEAP32[$56>>2]|0;
       $58 = (FUNCTION_TABLE_iiii[$57 & 1023]($4,$54,0)|0);
       $66 = $45;$__cmd$0 = $58;$__opt$0 = $51;
      } else {
       $66 = $$0$ph89;$__cmd$0 = $51;$__opt$0 = 0;
      }
      $59 = HEAP32[$this>>2]|0;
      $60 = ((($59)) + 36|0);
      $61 = HEAP32[$60>>2]|0;
      HEAP32[$1>>2] = $62;
      HEAP32[$2>>2] = $63;
      ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
      ;HEAP32[$$byval_copy1>>2]=HEAP32[$2>>2]|0;
      $64 = (FUNCTION_TABLE_iiiiiiiii[$61 & 511]($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,$__cmd$0,$__opt$0)|0);
      HEAP32[$__b>>2] = $64;
      $65 = ((($66)) + 8|0);
      $$0$ph$be = $65;
     } else {
      $70 = HEAP32[$$0$ph89>>2]|0;
      $71 = HEAP32[$4>>2]|0;
      $72 = ((($71)) + 12|0);
      $73 = HEAP32[$72>>2]|0;
      $74 = (FUNCTION_TABLE_iiii[$73 & 1023]($4,8192,$70)|0);
      if ($74) {
       $$0$pn = $$0$ph89;
      } else {
       $129 = ((($130)) + 12|0);
       $131 = HEAP32[$129>>2]|0;
       $132 = ((($130)) + 16|0);
       $133 = HEAP32[$132>>2]|0;
       $134 = ($131|0)==($133|0);
       if ($134) {
        $135 = HEAP32[$130>>2]|0;
        $136 = ((($135)) + 36|0);
        $137 = HEAP32[$136>>2]|0;
        $138 = (FUNCTION_TABLE_ii[$137 & 1023]($130)|0);
        $$0$i$i17 = $138;
       } else {
        $139 = HEAP32[$131>>2]|0;
        $$0$i$i17 = $139;
       }
       $140 = HEAP32[$4>>2]|0;
       $141 = ((($140)) + 28|0);
       $142 = HEAP32[$141>>2]|0;
       $143 = (FUNCTION_TABLE_iii[$142 & 1023]($4,$$0$i$i17)|0);
       $144 = HEAP32[$$0$ph89>>2]|0;
       $145 = HEAP32[$4>>2]|0;
       $146 = ((($145)) + 28|0);
       $147 = HEAP32[$146>>2]|0;
       $148 = (FUNCTION_TABLE_iii[$147 & 1023]($4,$144)|0);
       $149 = ($143|0)==($148|0);
       if (!($149)) {
        label = 61;
        break L5;
       }
       $150 = HEAP32[$129>>2]|0;
       $151 = HEAP32[$132>>2]|0;
       $152 = ($150|0)==($151|0);
       if ($152) {
        $153 = HEAP32[$130>>2]|0;
        $154 = ((($153)) + 40|0);
        $155 = HEAP32[$154>>2]|0;
        (FUNCTION_TABLE_ii[$155 & 1023]($130)|0);
       } else {
        $156 = ((($150)) + 4|0);
        HEAP32[$129>>2] = $156;
       }
       $157 = ((($$0$ph89)) + 4|0);
       $$0$ph$be = $157;
       break;
      }
      while(1) {
       $$2 = ((($$0$pn)) + 4|0);
       $75 = ($$2|0)==($__fmte|0);
       if ($75) {
        $$2$lcssa = $__fmte;
        break;
       }
       $76 = HEAP32[$$2>>2]|0;
       $77 = HEAP32[$4>>2]|0;
       $78 = ((($77)) + 12|0);
       $79 = HEAP32[$78>>2]|0;
       $80 = (FUNCTION_TABLE_iiii[$79 & 1023]($4,8192,$76)|0);
       if ($80) {
        $$0$pn = $$2;
       } else {
        $$2$lcssa = $$2;
        break;
       }
      }
      $$pre$i$i$i7 = $130;$$pre$i3$i$i13 = $188;$93 = $188;
      while(1) {
       $81 = ($$pre$i$i$i7|0)==(0|0);
       if ($81) {
        $106 = 1;$108 = 0;
       } else {
        $82 = ((($$pre$i$i$i7)) + 12|0);
        $83 = HEAP32[$82>>2]|0;
        $84 = ((($$pre$i$i$i7)) + 16|0);
        $85 = HEAP32[$84>>2]|0;
        $86 = ($83|0)==($85|0);
        if ($86) {
         $87 = HEAP32[$$pre$i$i$i7>>2]|0;
         $88 = ((($87)) + 36|0);
         $89 = HEAP32[$88>>2]|0;
         $90 = (FUNCTION_TABLE_ii[$89 & 1023]($$pre$i$i$i7)|0);
         $$0$i$i$i$i5 = $90;
        } else {
         $91 = HEAP32[$83>>2]|0;
         $$0$i$i$i$i5 = $91;
        }
        $92 = ($$0$i$i$i$i5|0)==(-1);
        if ($92) {
         HEAP32[$__b>>2] = 0;
         $106 = 1;$108 = 0;
        } else {
         $106 = 0;$108 = $$pre$i$i$i7;
        }
       }
       $94 = ($93|0)==(0|0);
       do {
        if ($94) {
         $$pre$i3$i$i1345 = $$pre$i3$i$i13;
         label = 44;
        } else {
         $95 = ((($93)) + 12|0);
         $96 = HEAP32[$95>>2]|0;
         $97 = ((($93)) + 16|0);
         $98 = HEAP32[$97>>2]|0;
         $99 = ($96|0)==($98|0);
         if ($99) {
          $100 = HEAP32[$93>>2]|0;
          $101 = ((($100)) + 36|0);
          $102 = HEAP32[$101>>2]|0;
          $103 = (FUNCTION_TABLE_ii[$102 & 1023]($93)|0);
          $$0$i$i1$i$i11 = $103;
         } else {
          $104 = HEAP32[$96>>2]|0;
          $$0$i$i1$i$i11 = $104;
         }
         $105 = ($$0$i$i1$i$i11|0)==(-1);
         if ($105) {
          HEAP32[$__e>>2] = 0;
          $$pre$i3$i$i1345 = 0;
          label = 44;
          break;
         } else {
          $phitmp$i4$i$i14 = ($$pre$i3$i$i13|0)==(0|0);
          $tmp$i$i16 = $106 ^ $phitmp$i4$i$i14;
          if ($tmp$i$i16) {
           $$pre$i3$i$i1344 = $$pre$i3$i$i13;$189 = $$pre$i3$i$i13;
           break;
          } else {
           $$0$ph$be = $$2$lcssa;
           break L27;
          }
         }
        }
       } while(0);
       if ((label|0) == 44) {
        label = 0;
        if ($106) {
         $$0$ph$be = $$2$lcssa;
         break L27;
        } else {
         $$pre$i3$i$i1344 = $$pre$i3$i$i1345;$189 = 0;
        }
       }
       $107 = ((($108)) + 12|0);
       $109 = HEAP32[$107>>2]|0;
       $110 = ((($108)) + 16|0);
       $111 = HEAP32[$110>>2]|0;
       $112 = ($109|0)==($111|0);
       if ($112) {
        $113 = HEAP32[$108>>2]|0;
        $114 = ((($113)) + 36|0);
        $115 = HEAP32[$114>>2]|0;
        $116 = (FUNCTION_TABLE_ii[$115 & 1023]($108)|0);
        $$0$i$i = $116;
       } else {
        $117 = HEAP32[$109>>2]|0;
        $$0$i$i = $117;
       }
       $118 = HEAP32[$4>>2]|0;
       $119 = ((($118)) + 12|0);
       $120 = HEAP32[$119>>2]|0;
       $121 = (FUNCTION_TABLE_iiii[$120 & 1023]($4,8192,$$0$i$i)|0);
       if (!($121)) {
        $$0$ph$be = $$2$lcssa;
        break L27;
       }
       $122 = HEAP32[$107>>2]|0;
       $123 = HEAP32[$110>>2]|0;
       $124 = ($122|0)==($123|0);
       if ($124) {
        $125 = HEAP32[$108>>2]|0;
        $126 = ((($125)) + 40|0);
        $127 = HEAP32[$126>>2]|0;
        (FUNCTION_TABLE_ii[$127 & 1023]($108)|0);
        $$pre$i$i$i7 = $108;$$pre$i3$i$i13 = $$pre$i3$i$i1344;$93 = $189;
        continue;
       } else {
        $128 = ((($122)) + 4|0);
        HEAP32[$107>>2] = $128;
        $$pre$i$i$i7 = $108;$$pre$i3$i$i13 = $$pre$i3$i$i1344;$93 = $189;
        continue;
       }
      }
     }
    } while(0);
    $$pre$pre = HEAP32[$__err>>2]|0;
    $67 = ($$0$ph$be|0)!=($__fmte|0);
    $68 = ($$pre$pre|0)==(0);
    $or$cond87 = $67 & $68;
    $69 = HEAP32[$__b>>2]|0;
    if ($or$cond87) {
     $$0$ph89 = $$0$ph$be;$9 = $69;
    } else {
     $$pre$i$i$i22 = $69;
     break L4;
    }
   }
   if ((label|0) == 17) {
    HEAP32[$__err>>2] = 4;
    $$pre$i$i$i22 = $$lcssa;
    break;
   }
   else if ((label|0) == 21) {
    HEAP32[$__err>>2] = 4;
    $$pre$i$i$i22 = $$lcssa97;
    break;
   }
   else if ((label|0) == 24) {
    HEAP32[$__err>>2] = 4;
    $$pre$i$i$i22 = $$lcssa98;
    break;
   }
   else if ((label|0) == 61) {
    HEAP32[$__err>>2] = 4;
    $158 = HEAP32[$__b>>2]|0;
    $$pre$i$i$i22 = $158;
    break;
   }
  }
 } while(0);
 $159 = ($$pre$i$i$i22|0)==(0|0);
 if ($159) {
  $186 = 0;$190 = 1;
 } else {
  $160 = ((($$pre$i$i$i22)) + 12|0);
  $161 = HEAP32[$160>>2]|0;
  $162 = ((($$pre$i$i$i22)) + 16|0);
  $163 = HEAP32[$162>>2]|0;
  $164 = ($161|0)==($163|0);
  if ($164) {
   $165 = HEAP32[$$pre$i$i$i22>>2]|0;
   $166 = ((($165)) + 36|0);
   $167 = HEAP32[$166>>2]|0;
   $168 = (FUNCTION_TABLE_ii[$167 & 1023]($$pre$i$i$i22)|0);
   $$0$i$i$i$i20 = $168;
  } else {
   $169 = HEAP32[$161>>2]|0;
   $$0$i$i$i$i20 = $169;
  }
  $170 = ($$0$i$i$i$i20|0)==(-1);
  if ($170) {
   HEAP32[$__b>>2] = 0;
   $186 = 0;$190 = 1;
  } else {
   $186 = $$pre$i$i$i22;$190 = 0;
  }
 }
 $171 = HEAP32[$__e>>2]|0;
 $172 = ($171|0)==(0|0);
 do {
  if ($172) {
   label = 74;
  } else {
   $173 = ((($171)) + 12|0);
   $174 = HEAP32[$173>>2]|0;
   $175 = ((($171)) + 16|0);
   $176 = HEAP32[$175>>2]|0;
   $177 = ($174|0)==($176|0);
   if ($177) {
    $178 = HEAP32[$171>>2]|0;
    $179 = ((($178)) + 36|0);
    $180 = HEAP32[$179>>2]|0;
    $181 = (FUNCTION_TABLE_ii[$180 & 1023]($171)|0);
    $$0$i$i1$i$i26 = $181;
   } else {
    $182 = HEAP32[$174>>2]|0;
    $$0$i$i1$i$i26 = $182;
   }
   $183 = ($$0$i$i1$i$i26|0)==(-1);
   if ($183) {
    HEAP32[$__e>>2] = 0;
    label = 74;
    break;
   } else {
    if ($190) {
     break;
    } else {
     label = 76;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 74) {
  if ($190) {
   label = 76;
  }
 }
 if ((label|0) == 76) {
  $184 = HEAP32[$__err>>2]|0;
  $185 = $184 | 2;
  HEAP32[$__err>>2] = $185;
 }
 STACKTOP = sp;return ($186|0);
}
function __ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,9856,(9888))|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = ((($this)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($3)) + 20|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (FUNCTION_TABLE_ii[$5 & 1023]($2)|0);
 $7 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $7;
 $8 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $8;
 $9 = HEAP8[$6>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($6)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($6)) + 4|0);
 $15 = $11 ? $14 : $13;
 $16 = HEAP32[$14>>2]|0;
 $17 = $9&255;
 $18 = $17 >>> 1;
 $19 = $11 ? $18 : $16;
 $20 = (($15) + ($19<<2)|0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $21 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,$15,$20)|0);
 STACKTOP = sp;return ($21|0);
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $2;
 __THREW__ = 0;
 $3 = (invoke_iii(452,($0|0),(6752|0))|0);
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if ($5) {
  $9 = ___cxa_find_matching_catch()|0;
  $10 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
  ___resumeException($9|0);
  // unreachable;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
  $6 = ((($__tm)) + 24|0);
  $7 = HEAP32[$__e>>2]|0;
  HEAP32[$1>>2] = $7;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
  __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$6,$__b,$$byval_copy,$__err,$3);
  $8 = HEAP32[$__b>>2]|0;
  STACKTOP = sp;return ($8|0);
 }
 return (0)|0;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__w,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__w = $__w|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = ((($this)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (FUNCTION_TABLE_ii[$3 & 1023]($1)|0);
 $5 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $5;
 $6 = ((($4)) + 168|0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $7 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$4,$6,$__ct,$__err,0)|0);
 $8 = $7;
 $9 = $4;
 $10 = (($8) - ($9))|0;
 $11 = ($10|0)<(168);
 if ($11) {
  $12 = (($10|0) / 12)&-1;
  $13 = (($12|0) % 7)&-1;
  HEAP32[$__w>>2] = $13;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $2;
 __THREW__ = 0;
 $3 = (invoke_iii(452,($0|0),(6752|0))|0);
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if ($5) {
  $9 = ___cxa_find_matching_catch()|0;
  $10 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
  ___resumeException($9|0);
  // unreachable;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
  $6 = ((($__tm)) + 16|0);
  $7 = HEAP32[$__e>>2]|0;
  HEAP32[$1>>2] = $7;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
  __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$6,$__b,$$byval_copy,$__err,$3);
  $8 = HEAP32[$__b>>2]|0;
  STACKTOP = sp;return ($8|0);
 }
 return (0)|0;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = ((($this)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (FUNCTION_TABLE_ii[$4 & 1023]($1)|0);
 $6 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $6;
 $7 = ((($5)) + 288|0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $8 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$5,$7,$__ct,$__err,0)|0);
 $9 = $8;
 $10 = $5;
 $11 = (($9) - ($10))|0;
 $12 = ($11|0)<(288);
 if ($12) {
  $13 = (($11|0) / 12)&-1;
  $14 = (($13|0) % 12)&-1;
  HEAP32[$__m>>2] = $14;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $2;
 __THREW__ = 0;
 $3 = (invoke_iii(452,($0|0),(6752|0))|0);
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if ($5) {
  $9 = ___cxa_find_matching_catch()|0;
  $10 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
  ___resumeException($9|0);
  // unreachable;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
  $6 = ((($__tm)) + 20|0);
  $7 = HEAP32[$__e>>2]|0;
  HEAP32[$1>>2] = $7;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
  __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($this,$6,$__b,$$byval_copy,$__err,$3);
  $8 = HEAP32[$__b>>2]|0;
  STACKTOP = sp;return ($8|0);
 }
 return (0)|0;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__y,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__y = $__y|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$ = 0, $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__t$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,4)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = ($2|0)<(69);
  if ($6) {
   $7 = (($2) + 2000)|0;
   $__t$0 = $7;
  } else {
   $$off = (($2) + -69)|0;
   $8 = ($$off>>>0)<(31);
   $9 = (($2) + 1900)|0;
   $$ = $8 ? $9 : $2;
   $__t$0 = $$;
  }
  $10 = (($__t$0) + -1900)|0;
  HEAP32[$__y>>2] = $10;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc($this,$__b,$__e,$__iob,$__err,$__tm,$__fmt,$0) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $0 = $0|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy10 = 0, $$byval_copy11 = 0, $$byval_copy12 = 0, $$byval_copy13 = 0, $$byval_copy14 = 0, $$byval_copy15 = 0, $$byval_copy16 = 0, $$byval_copy17 = 0, $$byval_copy18 = 0, $$byval_copy19 = 0, $$byval_copy2 = 0, $$byval_copy20 = 0, $$byval_copy21 = 0, $$byval_copy22 = 0, $$byval_copy23 = 0, $$byval_copy24 = 0, $$byval_copy25 = 0, $$byval_copy26 = 0;
 var $$byval_copy27 = 0, $$byval_copy28 = 0, $$byval_copy29 = 0, $$byval_copy3 = 0, $$byval_copy30 = 0, $$byval_copy4 = 0, $$byval_copy5 = 0, $$byval_copy6 = 0, $$byval_copy7 = 0, $$byval_copy8 = 0, $$byval_copy9 = 0, $$sroa$07$0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy30 = sp + 248|0;
 $$byval_copy29 = sp + 244|0;
 $$byval_copy28 = sp + 240|0;
 $$byval_copy27 = sp + 236|0;
 $$byval_copy26 = sp + 232|0;
 $$byval_copy25 = sp + 228|0;
 $$byval_copy24 = sp + 224|0;
 $$byval_copy23 = sp + 220|0;
 $$byval_copy22 = sp + 216|0;
 $$byval_copy21 = sp + 212|0;
 $$byval_copy20 = sp + 208|0;
 $$byval_copy19 = sp + 204|0;
 $$byval_copy18 = sp + 200|0;
 $$byval_copy17 = sp + 196|0;
 $$byval_copy16 = sp + 192|0;
 $$byval_copy15 = sp + 188|0;
 $$byval_copy14 = sp + 184|0;
 $$byval_copy13 = sp + 180|0;
 $$byval_copy12 = sp + 176|0;
 $$byval_copy11 = sp + 172|0;
 $$byval_copy10 = sp + 168|0;
 $$byval_copy9 = sp + 164|0;
 $$byval_copy8 = sp + 160|0;
 $$byval_copy7 = sp + 156|0;
 $$byval_copy6 = sp + 152|0;
 $$byval_copy5 = sp + 148|0;
 $$byval_copy4 = sp + 144|0;
 $$byval_copy3 = sp + 140|0;
 $$byval_copy2 = sp + 136|0;
 $$byval_copy1 = sp + 132|0;
 $$byval_copy = sp + 128|0;
 $1 = sp + 124|0;
 $2 = sp + 120|0;
 $3 = sp + 116|0;
 $4 = sp + 112|0;
 $5 = sp + 108|0;
 $6 = sp + 104|0;
 $7 = sp + 100|0;
 $8 = sp + 96|0;
 $9 = sp + 92|0;
 $10 = sp + 88|0;
 $11 = sp + 84|0;
 $12 = sp + 80|0;
 $13 = sp + 76|0;
 $14 = sp + 72|0;
 $15 = sp + 68|0;
 $16 = sp + 64|0;
 $17 = sp + 60|0;
 $18 = sp + 56|0;
 $19 = sp + 52|0;
 $20 = sp + 48|0;
 $21 = sp + 44|0;
 $22 = sp + 40|0;
 $23 = sp + 36|0;
 $24 = sp + 32|0;
 $25 = sp + 28|0;
 $26 = sp + 24|0;
 $27 = sp + 20|0;
 $28 = sp + 16|0;
 $29 = sp + 12|0;
 $30 = sp + 8|0;
 $31 = sp + 4|0;
 $32 = sp;
 HEAP32[$__err>>2] = 0;
 $33 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$1>>2] = $33;
 __THREW__ = 0;
 $34 = (invoke_iii(452,($1|0),(6752|0))|0);
 $35 = __THREW__; __THREW__ = 0;
 $36 = $35&1;
 if ($36) {
  $38 = ___cxa_find_matching_catch()|0;
  $39 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($33)|0);
  ___resumeException($38|0);
  // unreachable;
 }
 (__ZNSt3__114__shared_count16__release_sharedEv($33)|0);
 $37 = $__fmt << 24 >> 24;
 do {
  switch ($37|0) {
  case 120:  {
   $97 = HEAP32[$this>>2]|0;
   $98 = ((($97)) + 20|0);
   $99 = HEAP32[$98>>2]|0;
   $100 = HEAP32[$__b>>2]|0;
   HEAP32[$26>>2] = $100;
   $101 = HEAP32[$__e>>2]|0;
   HEAP32[$27>>2] = $101;
   ;HEAP32[$$byval_copy24>>2]=HEAP32[$26>>2]|0;
   ;HEAP32[$$byval_copy25>>2]=HEAP32[$27>>2]|0;
   $102 = (FUNCTION_TABLE_iiiiiii[$99 & 511]($this,$$byval_copy24,$$byval_copy25,$__iob,$__err,$__tm)|0);
   $$sroa$07$0 = $102;
   break;
  }
  case 112:  {
   $83 = ((($__tm)) + 8|0);
   $84 = HEAP32[$__e>>2]|0;
   HEAP32[$17>>2] = $84;
   ;HEAP32[$$byval_copy15>>2]=HEAP32[$17>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE($this,$83,$__b,$$byval_copy15,$__err,$34);
   label = 28;
   break;
  }
  case 89:  {
   $125 = ((($__tm)) + 20|0);
   $126 = HEAP32[$__e>>2]|0;
   HEAP32[$31>>2] = $126;
   ;HEAP32[$$byval_copy29>>2]=HEAP32[$31>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE($this,$125,$__b,$$byval_copy29,$__err,$34);
   label = 28;
   break;
  }
  case 37:  {
   $127 = HEAP32[$__e>>2]|0;
   HEAP32[$32>>2] = $127;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$32>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE($this,$__b,$$byval_copy30,$__err,$34);
   label = 28;
   break;
  }
  case 99:  {
   $44 = ((($this)) + 8|0);
   $45 = HEAP32[$44>>2]|0;
   $46 = ((($45)) + 12|0);
   $47 = HEAP32[$46>>2]|0;
   $48 = (FUNCTION_TABLE_ii[$47 & 1023]($44)|0);
   $49 = HEAP32[$__b>>2]|0;
   HEAP32[$4>>2] = $49;
   $50 = HEAP32[$__e>>2]|0;
   HEAP32[$5>>2] = $50;
   $51 = HEAP8[$48>>0]|0;
   $52 = $51 & 1;
   $53 = ($52<<24>>24)==(0);
   $54 = ((($48)) + 8|0);
   $55 = HEAP32[$54>>2]|0;
   $56 = ((($48)) + 4|0);
   $57 = $53 ? $56 : $55;
   $58 = HEAP32[$56>>2]|0;
   $59 = $51&255;
   $60 = $59 >>> 1;
   $61 = $53 ? $60 : $58;
   $62 = (($57) + ($61<<2)|0);
   ;HEAP32[$$byval_copy2>>2]=HEAP32[$4>>2]|0;
   ;HEAP32[$$byval_copy3>>2]=HEAP32[$5>>2]|0;
   $63 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy2,$$byval_copy3,$__iob,$__err,$__tm,$57,$62)|0);
   HEAP32[$__b>>2] = $63;
   label = 28;
   break;
  }
  case 68:  {
   $66 = HEAP32[$__b>>2]|0;
   HEAP32[$7>>2] = $66;
   $67 = HEAP32[$__e>>2]|0;
   HEAP32[$8>>2] = $67;
   ;HEAP32[$$byval_copy5>>2]=HEAP32[$7>>2]|0;
   ;HEAP32[$$byval_copy6>>2]=HEAP32[$8>>2]|0;
   $68 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy5,$$byval_copy6,$__iob,$__err,$__tm,9888,(9920))|0);
   HEAP32[$__b>>2] = $68;
   label = 28;
   break;
  }
  case 65: case 97:  {
   $40 = ((($__tm)) + 24|0);
   $41 = HEAP32[$__e>>2]|0;
   HEAP32[$2>>2] = $41;
   ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$40,$__b,$$byval_copy,$__err,$34);
   label = 28;
   break;
  }
  case 82:  {
   $88 = HEAP32[$__b>>2]|0;
   HEAP32[$20>>2] = $88;
   $89 = HEAP32[$__e>>2]|0;
   HEAP32[$21>>2] = $89;
   ;HEAP32[$$byval_copy18>>2]=HEAP32[$20>>2]|0;
   ;HEAP32[$$byval_copy19>>2]=HEAP32[$21>>2]|0;
   $90 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy18,$$byval_copy19,$__iob,$__err,$__tm,10000,(10020))|0);
   HEAP32[$__b>>2] = $90;
   label = 28;
   break;
  }
  case 83:  {
   $91 = HEAP32[$__e>>2]|0;
   HEAP32[$22>>2] = $91;
   ;HEAP32[$$byval_copy20>>2]=HEAP32[$22>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__tm,$__b,$$byval_copy20,$__err,$34);
   label = 28;
   break;
  }
  case 106:  {
   $76 = ((($__tm)) + 28|0);
   $77 = HEAP32[$__e>>2]|0;
   HEAP32[$13>>2] = $77;
   ;HEAP32[$$byval_copy11>>2]=HEAP32[$13>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE($this,$76,$__b,$$byval_copy11,$__err,$34);
   label = 28;
   break;
  }
  case 88:  {
   $103 = ((($this)) + 8|0);
   $104 = HEAP32[$103>>2]|0;
   $105 = ((($104)) + 24|0);
   $106 = HEAP32[$105>>2]|0;
   $107 = (FUNCTION_TABLE_ii[$106 & 1023]($103)|0);
   $108 = HEAP32[$__b>>2]|0;
   HEAP32[$28>>2] = $108;
   $109 = HEAP32[$__e>>2]|0;
   HEAP32[$29>>2] = $109;
   $110 = HEAP8[$107>>0]|0;
   $111 = $110 & 1;
   $112 = ($111<<24>>24)==(0);
   $113 = ((($107)) + 8|0);
   $114 = HEAP32[$113>>2]|0;
   $115 = ((($107)) + 4|0);
   $116 = $112 ? $115 : $114;
   $117 = HEAP32[$115>>2]|0;
   $118 = $110&255;
   $119 = $118 >>> 1;
   $120 = $112 ? $119 : $117;
   $121 = (($116) + ($120<<2)|0);
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$28>>2]|0;
   ;HEAP32[$$byval_copy27>>2]=HEAP32[$29>>2]|0;
   $122 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy26,$$byval_copy27,$__iob,$__err,$__tm,$116,$121)|0);
   HEAP32[$__b>>2] = $122;
   label = 28;
   break;
  }
  case 121:  {
   $123 = ((($__tm)) + 20|0);
   $124 = HEAP32[$__e>>2]|0;
   HEAP32[$30>>2] = $124;
   ;HEAP32[$$byval_copy28>>2]=HEAP32[$30>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($this,$123,$__b,$$byval_copy28,$__err,$34);
   label = 28;
   break;
  }
  case 114:  {
   $85 = HEAP32[$__b>>2]|0;
   HEAP32[$18>>2] = $85;
   $86 = HEAP32[$__e>>2]|0;
   HEAP32[$19>>2] = $86;
   ;HEAP32[$$byval_copy16>>2]=HEAP32[$18>>2]|0;
   ;HEAP32[$$byval_copy17>>2]=HEAP32[$19>>2]|0;
   $87 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy16,$$byval_copy17,$__iob,$__err,$__tm,9952,(9996))|0);
   HEAP32[$__b>>2] = $87;
   label = 28;
   break;
  }
  case 119:  {
   $95 = ((($__tm)) + 24|0);
   $96 = HEAP32[$__e>>2]|0;
   HEAP32[$25>>2] = $96;
   ;HEAP32[$$byval_copy23>>2]=HEAP32[$25>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE($this,$95,$__b,$$byval_copy23,$__err,$34);
   label = 28;
   break;
  }
  case 101: case 100:  {
   $64 = ((($__tm)) + 12|0);
   $65 = HEAP32[$__e>>2]|0;
   HEAP32[$6>>2] = $65;
   ;HEAP32[$$byval_copy4>>2]=HEAP32[$6>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE($this,$64,$__b,$$byval_copy4,$__err,$34);
   label = 28;
   break;
  }
  case 77:  {
   $80 = ((($__tm)) + 4|0);
   $81 = HEAP32[$__e>>2]|0;
   HEAP32[$15>>2] = $81;
   ;HEAP32[$$byval_copy13>>2]=HEAP32[$15>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE($this,$80,$__b,$$byval_copy13,$__err,$34);
   label = 28;
   break;
  }
  case 72:  {
   $72 = ((($__tm)) + 8|0);
   $73 = HEAP32[$__e>>2]|0;
   HEAP32[$11>>2] = $73;
   ;HEAP32[$$byval_copy9>>2]=HEAP32[$11>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this,$72,$__b,$$byval_copy9,$__err,$34);
   label = 28;
   break;
  }
  case 73:  {
   $74 = ((($__tm)) + 8|0);
   $75 = HEAP32[$__e>>2]|0;
   HEAP32[$12>>2] = $75;
   ;HEAP32[$$byval_copy10>>2]=HEAP32[$12>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this,$74,$__b,$$byval_copy10,$__err,$34);
   label = 28;
   break;
  }
  case 84:  {
   $92 = HEAP32[$__b>>2]|0;
   HEAP32[$23>>2] = $92;
   $93 = HEAP32[$__e>>2]|0;
   HEAP32[$24>>2] = $93;
   ;HEAP32[$$byval_copy21>>2]=HEAP32[$23>>2]|0;
   ;HEAP32[$$byval_copy22>>2]=HEAP32[$24>>2]|0;
   $94 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy21,$$byval_copy22,$__iob,$__err,$__tm,10024,(10056))|0);
   HEAP32[$__b>>2] = $94;
   label = 28;
   break;
  }
  case 116: case 110:  {
   $82 = HEAP32[$__e>>2]|0;
   HEAP32[$16>>2] = $82;
   ;HEAP32[$$byval_copy14>>2]=HEAP32[$16>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE($this,$__b,$$byval_copy14,$__err,$34);
   label = 28;
   break;
  }
  case 104: case 66: case 98:  {
   $42 = ((($__tm)) + 16|0);
   $43 = HEAP32[$__e>>2]|0;
   HEAP32[$3>>2] = $43;
   ;HEAP32[$$byval_copy1>>2]=HEAP32[$3>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$42,$__b,$$byval_copy1,$__err,$34);
   label = 28;
   break;
  }
  case 70:  {
   $69 = HEAP32[$__b>>2]|0;
   HEAP32[$9>>2] = $69;
   $70 = HEAP32[$__e>>2]|0;
   HEAP32[$10>>2] = $70;
   ;HEAP32[$$byval_copy7>>2]=HEAP32[$9>>2]|0;
   ;HEAP32[$$byval_copy8>>2]=HEAP32[$10>>2]|0;
   $71 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy7,$$byval_copy8,$__iob,$__err,$__tm,9920,(9952))|0);
   HEAP32[$__b>>2] = $71;
   label = 28;
   break;
  }
  case 109:  {
   $78 = ((($__tm)) + 16|0);
   $79 = HEAP32[$__e>>2]|0;
   HEAP32[$14>>2] = $79;
   ;HEAP32[$$byval_copy12>>2]=HEAP32[$14>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE($this,$78,$__b,$$byval_copy12,$__err,$34);
   label = 28;
   break;
  }
  default: {
   $128 = HEAP32[$__err>>2]|0;
   $129 = $128 | 4;
   HEAP32[$__err>>2] = $129;
   label = 28;
  }
  }
 } while(0);
 if ((label|0) == 28) {
  $130 = HEAP32[$__b>>2]|0;
  $$sroa$07$0 = $130;
 }
 STACKTOP = sp;return ($$sroa$07$0|0);
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__d,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__d = $__d|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $$off = (($2) + -1)|0;
 $6 = ($$off>>>0)<(31);
 $7 = $6 & $5;
 if ($7) {
  HEAP32[$__d>>2] = $2;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(24);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__h>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $$off = (($2) + -1)|0;
 $6 = ($$off>>>0)<(12);
 $7 = $6 & $5;
 if ($7) {
  HEAP32[$__h>>2] = $2;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__d,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__d = $__d|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,3)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(366);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__d>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(13);
 $or$cond = $6 & $5;
 if ($or$cond) {
  $7 = (($2) + -1)|0;
  HEAP32[$__m>>2] = $7;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(60);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__m>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE($this,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre$i$i$i = 0, $$pre$i$i$i3 = 0, $$pre$i3$i$i9 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $9 = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 L1: while(1) {
  $0 = HEAP32[$__b>>2]|0;
  $1 = ($0|0)==(0|0);
  do {
   if ($1) {
    $78 = 1;
   } else {
    $2 = ((($0)) + 12|0);
    $3 = HEAP32[$2>>2]|0;
    $4 = ((($0)) + 16|0);
    $5 = HEAP32[$4>>2]|0;
    $6 = ($3|0)==($5|0);
    if ($6) {
     $7 = HEAP32[$0>>2]|0;
     $8 = ((($7)) + 36|0);
     $9 = HEAP32[$8>>2]|0;
     $10 = (FUNCTION_TABLE_ii[$9 & 1023]($0)|0);
     $$0$i$i$i$i = $10;
    } else {
     $11 = HEAP32[$3>>2]|0;
     $$0$i$i$i$i = $11;
    }
    $12 = ($$0$i$i$i$i|0)==(-1);
    if ($12) {
     HEAP32[$__b>>2] = 0;
     $78 = 1;
     break;
    } else {
     $$pre$i$i$i = HEAP32[$__b>>2]|0;
     $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
     $78 = $phitmp$i$i$i;
     break;
    }
   }
  } while(0);
  $13 = HEAP32[$__e>>2]|0;
  $14 = ($13|0)==(0|0);
  do {
   if ($14) {
    label = 15;
   } else {
    $15 = ((($13)) + 12|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = ((($13)) + 16|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ($16|0)==($18|0);
    if ($19) {
     $20 = HEAP32[$13>>2]|0;
     $21 = ((($20)) + 36|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (FUNCTION_TABLE_ii[$22 & 1023]($13)|0);
     $$0$i$i1$i$i = $23;
    } else {
     $24 = HEAP32[$16>>2]|0;
     $$0$i$i1$i$i = $24;
    }
    $25 = ($$0$i$i1$i$i|0)==(-1);
    if ($25) {
     HEAP32[$__e>>2] = 0;
     label = 15;
     break;
    } else {
     if ($78) {
      $79 = $13;
      break;
     } else {
      $$pre$i3$i$i9 = $13;
      break L1;
     }
    }
   }
  } while(0);
  if ((label|0) == 15) {
   label = 0;
   if ($78) {
    $$pre$i3$i$i9 = 0;
    break;
   } else {
    $79 = 0;
   }
  }
  $26 = HEAP32[$__b>>2]|0;
  $27 = ((($26)) + 12|0);
  $28 = HEAP32[$27>>2]|0;
  $29 = ((($26)) + 16|0);
  $30 = HEAP32[$29>>2]|0;
  $31 = ($28|0)==($30|0);
  if ($31) {
   $32 = HEAP32[$26>>2]|0;
   $33 = ((($32)) + 36|0);
   $34 = HEAP32[$33>>2]|0;
   $35 = (FUNCTION_TABLE_ii[$34 & 1023]($26)|0);
   $$0$i$i = $35;
  } else {
   $36 = HEAP32[$28>>2]|0;
   $$0$i$i = $36;
  }
  $37 = HEAP32[$__ct>>2]|0;
  $38 = ((($37)) + 12|0);
  $39 = HEAP32[$38>>2]|0;
  $40 = (FUNCTION_TABLE_iiii[$39 & 1023]($__ct,8192,$$0$i$i)|0);
  if (!($40)) {
   $$pre$i3$i$i9 = $79;
   break;
  }
  $41 = HEAP32[$__b>>2]|0;
  $42 = ((($41)) + 12|0);
  $43 = HEAP32[$42>>2]|0;
  $44 = ((($41)) + 16|0);
  $45 = HEAP32[$44>>2]|0;
  $46 = ($43|0)==($45|0);
  if ($46) {
   $47 = HEAP32[$41>>2]|0;
   $48 = ((($47)) + 40|0);
   $49 = HEAP32[$48>>2]|0;
   (FUNCTION_TABLE_ii[$49 & 1023]($41)|0);
   continue;
  } else {
   $50 = ((($43)) + 4|0);
   HEAP32[$42>>2] = $50;
   continue;
  }
 }
 $51 = HEAP32[$__b>>2]|0;
 $52 = ($51|0)==(0|0);
 do {
  if ($52) {
   $80 = 1;
  } else {
   $53 = ((($51)) + 12|0);
   $54 = HEAP32[$53>>2]|0;
   $55 = ((($51)) + 16|0);
   $56 = HEAP32[$55>>2]|0;
   $57 = ($54|0)==($56|0);
   if ($57) {
    $58 = HEAP32[$51>>2]|0;
    $59 = ((($58)) + 36|0);
    $60 = HEAP32[$59>>2]|0;
    $61 = (FUNCTION_TABLE_ii[$60 & 1023]($51)|0);
    $$0$i$i$i$i1 = $61;
   } else {
    $62 = HEAP32[$54>>2]|0;
    $$0$i$i$i$i1 = $62;
   }
   $63 = ($$0$i$i$i$i1|0)==(-1);
   if ($63) {
    HEAP32[$__b>>2] = 0;
    $80 = 1;
    break;
   } else {
    $$pre$i$i$i3 = HEAP32[$__b>>2]|0;
    $phitmp$i$i$i4 = ($$pre$i$i$i3|0)==(0|0);
    $80 = $phitmp$i$i$i4;
    break;
   }
  }
 } while(0);
 $64 = ($$pre$i3$i$i9|0)==(0|0);
 do {
  if ($64) {
   label = 37;
  } else {
   $65 = ((($$pre$i3$i$i9)) + 12|0);
   $66 = HEAP32[$65>>2]|0;
   $67 = ((($$pre$i3$i$i9)) + 16|0);
   $68 = HEAP32[$67>>2]|0;
   $69 = ($66|0)==($68|0);
   if ($69) {
    $70 = HEAP32[$$pre$i3$i$i9>>2]|0;
    $71 = ((($70)) + 36|0);
    $72 = HEAP32[$71>>2]|0;
    $73 = (FUNCTION_TABLE_ii[$72 & 1023]($$pre$i3$i$i9)|0);
    $$0$i$i1$i$i7 = $73;
   } else {
    $74 = HEAP32[$66>>2]|0;
    $$0$i$i1$i$i7 = $74;
   }
   $75 = ($$0$i$i1$i$i7|0)==(-1);
   if ($75) {
    HEAP32[$__e>>2] = 0;
    label = 37;
    break;
   } else {
    if ($80) {
     break;
    } else {
     label = 39;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 37) {
  if ($80) {
   label = 39;
  }
 }
 if ((label|0) == 39) {
  $76 = HEAP32[$__err>>2]|0;
  $77 = $76 | 2;
  HEAP32[$__err>>2] = $77;
 }
 return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = ((($this)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (FUNCTION_TABLE_ii[$4 & 1023]($1)|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = $6 & 1;
 $8 = ($7<<24>>24)==(0);
 if ($8) {
  $11 = $6&255;
  $12 = $11 >>> 1;
  $23 = $12;
 } else {
  $9 = ((($5)) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $23 = $10;
 }
 $13 = ((($5)) + 12|0);
 $14 = HEAP8[$13>>0]|0;
 $15 = $14 & 1;
 $16 = ($15<<24>>24)==(0);
 if ($16) {
  $19 = $14&255;
  $20 = $19 >>> 1;
  $22 = $20;
 } else {
  $17 = ((($5)) + 16|0);
  $18 = HEAP32[$17>>2]|0;
  $22 = $18;
 }
 $21 = (0 - ($22))|0;
 $24 = ($23|0)==($21|0);
 do {
  if ($24) {
   $25 = HEAP32[$__err>>2]|0;
   $26 = $25 | 4;
   HEAP32[$__err>>2] = $26;
  } else {
   $27 = HEAP32[$__e>>2]|0;
   HEAP32[$0>>2] = $27;
   $28 = ((($5)) + 24|0);
   ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
   $29 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$5,$28,$__ct,$__err,0)|0);
   $30 = ($29|0)==($5|0);
   $31 = HEAP32[$__h>>2]|0;
   $32 = ($31|0)==(12);
   $or$cond = $30 & $32;
   if ($or$cond) {
    HEAP32[$__h>>2] = 0;
    break;
   }
   $33 = $29;
   $34 = $5;
   $35 = (($33) - ($34))|0;
   $36 = ($35|0)==(12);
   $37 = ($31|0)<(12);
   $or$cond3 = $37 & $36;
   if ($or$cond3) {
    $38 = (($31) + 12)|0;
    HEAP32[$__h>>2] = $38;
   }
  }
 } while(0);
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__s,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__s = $__s|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(61);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__s>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__w,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__w = $__w|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,1)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(7);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__w>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__y,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__y = $__y|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,4)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = (($2) + -1900)|0;
  HEAP32[$__y>>2] = $6;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE($this,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i3 = 0, $$pre$i3$i$i915 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $9 = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__b>>2]|0;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $83 = 1;
  } else {
   $2 = ((($0)) + 12|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = ((($0)) + 16|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = ($3|0)==($5|0);
   if ($6) {
    $7 = HEAP32[$0>>2]|0;
    $8 = ((($7)) + 36|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = (FUNCTION_TABLE_ii[$9 & 1023]($0)|0);
    $$0$i$i$i$i = $10;
   } else {
    $11 = HEAP32[$3>>2]|0;
    $$0$i$i$i$i = $11;
   }
   $12 = ($$0$i$i$i$i|0)==(-1);
   if ($12) {
    HEAP32[$__b>>2] = 0;
    $83 = 1;
    break;
   } else {
    $$pre$i$i$i = HEAP32[$__b>>2]|0;
    $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
    $83 = $phitmp$i$i$i;
    break;
   }
  }
 } while(0);
 $13 = HEAP32[$__e>>2]|0;
 $14 = ($13|0)==(0|0);
 do {
  if ($14) {
   label = 14;
  } else {
   $15 = ((($13)) + 12|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = ((($13)) + 16|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = ($16|0)==($18|0);
   if ($19) {
    $20 = HEAP32[$13>>2]|0;
    $21 = ((($20)) + 36|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = (FUNCTION_TABLE_ii[$22 & 1023]($13)|0);
    $$0$i$i1$i$i = $23;
   } else {
    $24 = HEAP32[$16>>2]|0;
    $$0$i$i1$i$i = $24;
   }
   $25 = ($$0$i$i1$i$i|0)==(-1);
   if ($25) {
    HEAP32[$__e>>2] = 0;
    label = 14;
    break;
   } else {
    if ($83) {
     $$pre$i3$i$i915 = $13;
     label = 17;
     break;
    } else {
     label = 16;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 14) {
  if ($83) {
   label = 16;
  } else {
   $$pre$i3$i$i915 = 0;
   label = 17;
  }
 }
 L22: do {
  if ((label|0) == 16) {
   $26 = HEAP32[$__err>>2]|0;
   $27 = $26 | 6;
   HEAP32[$__err>>2] = $27;
  }
  else if ((label|0) == 17) {
   $28 = HEAP32[$__b>>2]|0;
   $29 = ((($28)) + 12|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = ((($28)) + 16|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = ($30|0)==($32|0);
   if ($33) {
    $34 = HEAP32[$28>>2]|0;
    $35 = ((($34)) + 36|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = (FUNCTION_TABLE_ii[$36 & 1023]($28)|0);
    $$0$i$i = $37;
   } else {
    $38 = HEAP32[$30>>2]|0;
    $$0$i$i = $38;
   }
   $39 = HEAP32[$__ct>>2]|0;
   $40 = ((($39)) + 52|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = (FUNCTION_TABLE_iiii[$41 & 1023]($__ct,$$0$i$i,0)|0);
   $43 = ($42<<24>>24)==(37);
   if (!($43)) {
    $44 = HEAP32[$__err>>2]|0;
    $45 = $44 | 4;
    HEAP32[$__err>>2] = $45;
    break;
   }
   $46 = HEAP32[$__b>>2]|0;
   $47 = ((($46)) + 12|0);
   $48 = HEAP32[$47>>2]|0;
   $49 = ((($46)) + 16|0);
   $50 = HEAP32[$49>>2]|0;
   $51 = ($48|0)==($50|0);
   if ($51) {
    $53 = HEAP32[$46>>2]|0;
    $54 = ((($53)) + 40|0);
    $55 = HEAP32[$54>>2]|0;
    (FUNCTION_TABLE_ii[$55 & 1023]($46)|0);
    $$pre = HEAP32[$__b>>2]|0;
    $56 = ($$pre|0)==(0|0);
    if ($56) {
     $84 = 1;
    } else {
     $58 = $$pre;
     label = 25;
    }
   } else {
    $52 = ((($48)) + 4|0);
    HEAP32[$47>>2] = $52;
    $58 = $46;
    label = 25;
   }
   do {
    if ((label|0) == 25) {
     $57 = ((($58)) + 12|0);
     $59 = HEAP32[$57>>2]|0;
     $60 = ((($58)) + 16|0);
     $61 = HEAP32[$60>>2]|0;
     $62 = ($59|0)==($61|0);
     if ($62) {
      $63 = HEAP32[$58>>2]|0;
      $64 = ((($63)) + 36|0);
      $65 = HEAP32[$64>>2]|0;
      $66 = (FUNCTION_TABLE_ii[$65 & 1023]($58)|0);
      $$0$i$i$i$i1 = $66;
     } else {
      $67 = HEAP32[$59>>2]|0;
      $$0$i$i$i$i1 = $67;
     }
     $68 = ($$0$i$i$i$i1|0)==(-1);
     if ($68) {
      HEAP32[$__b>>2] = 0;
      $84 = 1;
      break;
     } else {
      $$pre$i$i$i3 = HEAP32[$__b>>2]|0;
      $phitmp$i$i$i4 = ($$pre$i$i$i3|0)==(0|0);
      $84 = $phitmp$i$i$i4;
      break;
     }
    }
   } while(0);
   $69 = ($$pre$i3$i$i915|0)==(0|0);
   do {
    if ($69) {
     label = 37;
    } else {
     $70 = ((($$pre$i3$i$i915)) + 12|0);
     $71 = HEAP32[$70>>2]|0;
     $72 = ((($$pre$i3$i$i915)) + 16|0);
     $73 = HEAP32[$72>>2]|0;
     $74 = ($71|0)==($73|0);
     if ($74) {
      $75 = HEAP32[$$pre$i3$i$i915>>2]|0;
      $76 = ((($75)) + 36|0);
      $77 = HEAP32[$76>>2]|0;
      $78 = (FUNCTION_TABLE_ii[$77 & 1023]($$pre$i3$i$i915)|0);
      $$0$i$i1$i$i7 = $78;
     } else {
      $79 = HEAP32[$71>>2]|0;
      $$0$i$i1$i$i7 = $79;
     }
     $80 = ($$0$i$i1$i$i7|0)==(-1);
     if ($80) {
      HEAP32[$__e>>2] = 0;
      label = 37;
      break;
     } else {
      if ($84) {
       break L22;
      } else {
       break;
      }
     }
    }
   } while(0);
   if ((label|0) == 37) {
    if (!($84)) {
     break;
    }
   }
   $81 = HEAP32[$__err>>2]|0;
   $82 = $81 | 2;
   HEAP32[$__err>>2] = $82;
  }
 } while(0);
 return;
}
function __ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 __ZNSt3__110__time_putD2Ev($0);
 return;
}
function __ZNSt3__110__time_putD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 __THREW__ = 0;
 $1 = (invoke_i(457)|0);
 $2 = __THREW__; __THREW__ = 0;
 $3 = $2&1;
 do {
  if (!($3)) {
   $4 = ($0|0)==($1|0);
   if (!($4)) {
    $5 = HEAP32[$this>>2]|0;
    __THREW__ = 0;
    invoke_vi(470,($5|0));
    $6 = __THREW__; __THREW__ = 0;
    $7 = $6&1;
    if ($7) {
     break;
    }
   }
   return;
  }
 } while(0);
 $8 = ___cxa_find_matching_catch(0|0)|0;
 $9 = tempRet0;
 ___clang_call_terminate($8);
 // unreachable;
}
function __ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 __ZNSt3__110__time_putD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc($this,$__s,$0,$1,$__tm,$__fmt,$__mod) {
 $this = $this|0;
 $__s = $__s|0;
 $0 = $0|0;
 $1 = $1|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $__mod = $__mod|0;
 var $$$i = 0, $$0$i$i2 = 0, $$lcssa = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__nar = 0, $__ne = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__nar = sp + 4|0;
 $__ne = sp;
 $2 = ((($__nar)) + 100|0);
 HEAP32[$__ne>>2] = $2;
 $3 = ((($this)) + 8|0);
 __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc($3,$__nar,$__ne,$__tm,$__fmt,$__mod);
 $4 = HEAP32[$__ne>>2]|0;
 $5 = HEAP32[$__s>>2]|0;
 $6 = $5;
 $7 = ($__nar|0)==($4|0);
 if ($7) {
  $$lcssa = $6;
 } else {
  $$0$i$i2 = $__nar;$9 = $6;
  while(1) {
   $8 = HEAP8[$$0$i$i2>>0]|0;
   $10 = ($9|0)==(0|0);
   do {
    if ($10) {
     $25 = 0;
    } else {
     $11 = ((($9)) + 24|0);
     $12 = HEAP32[$11>>2]|0;
     $13 = ((($9)) + 28|0);
     $14 = HEAP32[$13>>2]|0;
     $15 = ($12|0)==($14|0);
     if ($15) {
      $17 = HEAP32[$9>>2]|0;
      $18 = ((($17)) + 52|0);
      $19 = HEAP32[$18>>2]|0;
      $20 = $8&255;
      $21 = (FUNCTION_TABLE_iii[$19 & 1023]($9,$20)|0);
      $22 = ($21|0)==(-1);
      $$$i = $22 ? 0 : $9;
      $25 = $$$i;
      break;
     } else {
      $16 = ((($12)) + 1|0);
      HEAP32[$11>>2] = $16;
      HEAP8[$12>>0] = $8;
      $25 = $9;
      break;
     }
    }
   } while(0);
   $23 = ((($$0$i$i2)) + 1|0);
   $24 = ($23|0)==($4|0);
   if ($24) {
    $$lcssa = $25;
    break;
   } else {
    $$0$i$i2 = $23;$9 = $25;
   }
  }
 }
 STACKTOP = sp;return ($$lcssa|0);
}
function __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc($this,$__nb,$__ne,$__tm,$__fmt,$__mod) {
 $this = $this|0;
 $__nb = $__nb|0;
 $__ne = $__ne|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $__mod = $__mod|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $fmt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $fmt = sp;
 HEAP8[$fmt>>0] = 37;
 $0 = ((($fmt)) + 1|0);
 HEAP8[$0>>0] = $__fmt;
 $1 = ((($fmt)) + 2|0);
 HEAP8[$1>>0] = $__mod;
 $2 = ((($fmt)) + 3|0);
 HEAP8[$2>>0] = 0;
 $3 = ($__mod<<24>>24)==(0);
 if (!($3)) {
  HEAP8[$0>>0] = $__mod;
  HEAP8[$1>>0] = $__fmt;
 }
 $4 = HEAP32[$__ne>>2]|0;
 $5 = $4;
 $6 = $__nb;
 $7 = (($5) - ($6))|0;
 $8 = HEAP32[$this>>2]|0;
 $9 = (_strftime_l(($__nb|0),($7|0),($fmt|0),($__tm|0),($8|0))|0);
 $10 = (($__nb) + ($9)|0);
 HEAP32[$__ne>>2] = $10;
 STACKTOP = sp;return;
}
function __ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 __ZNSt3__110__time_putD2Ev($0);
 return;
}
function __ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 __ZNSt3__110__time_putD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc($this,$__s,$0,$1,$__tm,$__fmt,$__mod) {
 $this = $this|0;
 $__s = $__s|0;
 $0 = $0|0;
 $1 = $1|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $__mod = $__mod|0;
 var $$$i = 0, $$0$i$i$i$i = 0, $$0$i$i2 = 0, $$lcssa = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__nar = 0, $__ne = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 416|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__nar = sp + 8|0;
 $__ne = sp;
 $2 = ((($__nar)) + 400|0);
 HEAP32[$__ne>>2] = $2;
 $3 = ((($this)) + 8|0);
 __ZNKSt3__110__time_put8__do_putEPwRS1_PK2tmcc($3,$__nar,$__ne,$__tm,$__fmt,$__mod);
 $4 = HEAP32[$__ne>>2]|0;
 $5 = HEAP32[$__s>>2]|0;
 $6 = $5;
 $7 = ($__nar|0)==($4|0);
 if ($7) {
  $$lcssa = $6;
 } else {
  $$0$i$i2 = $__nar;$9 = $6;
  while(1) {
   $8 = HEAP32[$$0$i$i2>>2]|0;
   $10 = ($9|0)==(0|0);
   if ($10) {
    $24 = 0;
   } else {
    $11 = ((($9)) + 24|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = ((($9)) + 28|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = ($12|0)==($14|0);
    if ($15) {
     $16 = HEAP32[$9>>2]|0;
     $17 = ((($16)) + 52|0);
     $18 = HEAP32[$17>>2]|0;
     $19 = (FUNCTION_TABLE_iii[$18 & 1023]($9,$8)|0);
     $$0$i$i$i$i = $19;
    } else {
     $20 = ((($12)) + 4|0);
     HEAP32[$11>>2] = $20;
     HEAP32[$12>>2] = $8;
     $$0$i$i$i$i = $8;
    }
    $21 = ($$0$i$i$i$i|0)==(-1);
    $$$i = $21 ? 0 : $9;
    $24 = $$$i;
   }
   $22 = ((($$0$i$i2)) + 4|0);
   $23 = ($22|0)==($4|0);
   if ($23) {
    $$lcssa = $24;
    break;
   } else {
    $$0$i$i2 = $22;$9 = $24;
   }
  }
 }
 STACKTOP = sp;return ($$lcssa|0);
}
function __ZNKSt3__110__time_put8__do_putEPwRS1_PK2tmcc($this,$__wb,$__we,$__tm,$__fmt,$__mod) {
 $this = $this|0;
 $__wb = $__wb|0;
 $__we = $__we|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $__mod = $__mod|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__nar = 0, $__nb = 0, $__ne = 0, $mb = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__nar = sp + 16|0;
 $__ne = sp + 12|0;
 $mb = sp;
 $__nb = sp + 8|0;
 $0 = ((($__nar)) + 100|0);
 HEAP32[$__ne>>2] = $0;
 __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc($this,$__nar,$__ne,$__tm,$__fmt,$__mod);
 $1 = $mb;
 $2 = $1;
 HEAP32[$2>>2] = 0;
 $3 = (($1) + 4)|0;
 $4 = $3;
 HEAP32[$4>>2] = 0;
 HEAP32[$__nb>>2] = $__nar;
 $5 = HEAP32[$__we>>2]|0;
 $6 = $5;
 $7 = $__wb;
 $8 = (($6) - ($7))|0;
 $9 = $8 >> 2;
 $10 = HEAP32[$this>>2]|0;
 $11 = (_uselocale(($10|0))|0);
 __THREW__ = 0;
 $12 = (invoke_iiiii(471,($__wb|0),($__nb|0),($9|0),($mb|0))|0);
 $13 = __THREW__; __THREW__ = 0;
 $14 = $13&1;
 if ($14) {
  $20 = ___cxa_find_matching_catch()|0;
  $21 = tempRet0;
  $22 = ($11|0)==(0|0);
  if (!($22)) {
   __THREW__ = 0;
   (invoke_ii(472,($11|0))|0);
   $23 = __THREW__; __THREW__ = 0;
   $24 = $23&1;
   if ($24) {
    $25 = ___cxa_find_matching_catch(0|0)|0;
    $26 = tempRet0;
    ___clang_call_terminate($25);
    // unreachable;
   }
  }
  ___resumeException($20|0);
  // unreachable;
 }
 $15 = ($11|0)==(0|0);
 if (!($15)) {
  __THREW__ = 0;
  (invoke_ii(472,($11|0))|0);
  $16 = __THREW__; __THREW__ = 0;
  $17 = $16&1;
  if ($17) {
   $18 = ___cxa_find_matching_catch(0|0)|0;
   $19 = tempRet0;
   ___clang_call_terminate($18);
   // unreachable;
  }
 }
 $27 = ($12|0)==(-1);
 if ($27) {
  __ZNSt3__121__throw_runtime_errorEPKc(10056);
  // unreachable;
 } else {
  $28 = (($__wb) + ($12<<2)|0);
  HEAP32[$__we>>2] = $28;
  STACKTOP = sp;return;
 }
}
function __ZNSt3__110moneypunctIcLb0EED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__110moneypunctIcLb0EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_decimal_pointEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 127;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_thousands_sepEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 127;
}
function __ZNKSt3__110moneypunctIcLb0EE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE14do_curr_symbolEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_positive_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_negative_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($agg$result,1,45);
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE14do_frac_digitsEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__110moneypunctIcLb0EE13do_pos_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE13do_neg_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNSt3__110moneypunctIcLb1EED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__110moneypunctIcLb1EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_decimal_pointEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 127;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_thousands_sepEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 127;
}
function __ZNKSt3__110moneypunctIcLb1EE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE14do_curr_symbolEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_positive_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_negative_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($agg$result,1,45);
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE14do_frac_digitsEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__110moneypunctIcLb1EE13do_pos_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE13do_neg_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNSt3__110moneypunctIwLb0EED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__110moneypunctIwLb0EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_decimal_pointEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_thousands_sepEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb0EE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE14do_curr_symbolEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_positive_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_negative_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($agg$result,1,45);
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE14do_frac_digitsEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__110moneypunctIwLb0EE13do_pos_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE13do_neg_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNSt3__110moneypunctIwLb1EED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__110moneypunctIwLb1EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_decimal_pointEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_thousands_sepEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb1EE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE14do_curr_symbolEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_positive_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_negative_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($agg$result,1,45);
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE14do_frac_digitsEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__110moneypunctIwLb1EE13do_pos_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE13do_neg_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe($this,$__b,$__e,$__intl,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$ = 0, $$0 = 0, $$0$lcssa$i = 0, $$01 = 0, $$113 = 0, $$114 = 0, $$1211 = 0, $$1212 = 0, $$byval_copy = 0, $$phi$trans$insert$pre$phiZZZZ2D = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre15 = 0, $$pre7 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0;
 var $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0;
 var $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0;
 var $14 = 0, $140 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__atoms = 0, $__loc = 0, $__nbuf = 0, $__nc$0 = 0, $__nc$1 = 0;
 var $__nc$2$lcssa = 0, $__nc$217 = 0, $__neg = 0, $__w$018 = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 24|0;
 $vararg_buffer = sp;
 $__wbuf = sp + 140|0;
 $__wb = sp + 16|0;
 $__wn = sp + 12|0;
 $__loc = sp + 8|0;
 $__neg = sp + 138|0;
 $0 = sp + 4|0;
 $__atoms = sp + 128|0;
 $__nbuf = sp + 28|0;
 $1 = $__wbuf;
 HEAP32[$__wb>>2] = $1;
 $2 = ((($__wb)) + 4|0);
 HEAP32[$2>>2] = (473);
 $3 = ((($__wbuf)) + 100|0);
 __THREW__ = 0;
 $4 = (invoke_ii(455,($__iob|0))|0);
 $5 = __THREW__; __THREW__ = 0;
 $6 = $5&1;
 if ($6) {
  $33 = ___cxa_find_matching_catch()|0;
  $34 = tempRet0;
  HEAP32[$__wb>>2] = 0;
  $$113 = $33;$$1211 = $34;$119 = 473;$120 = $__wbuf;
  label = 45;
 } else {
  HEAP32[$__loc>>2] = $4;
  __THREW__ = 0;
  $7 = (invoke_iii(452,($__loc|0),(6760|0))|0);
  $8 = __THREW__; __THREW__ = 0;
  $9 = $8&1;
  L3: do {
   if ($9) {
    label = 10;
   } else {
    HEAP8[$__neg>>0] = 0;
    $10 = HEAP32[$__e>>2]|0;
    HEAP32[$0>>2] = $10;
    $11 = ((($__iob)) + 4|0);
    $12 = HEAP32[$11>>2]|0;
    __THREW__ = 0;
    ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
    $13 = (invoke_iiiiiiiiiiii(474,($__b|0),($$byval_copy|0),($__intl|0),($__loc|0),($12|0),($__err|0),($__neg|0),($7|0),($__wb|0),($__wn|0),($3|0))|0);
    $14 = __THREW__; __THREW__ = 0;
    $15 = $14&1;
    if ($15) {
     label = 10;
    } else {
     L6: do {
      if ($13) {
       $16 = HEAP32[$7>>2]|0;
       $17 = ((($16)) + 32|0);
       $18 = HEAP32[$17>>2]|0;
       __THREW__ = 0;
       (invoke_iiiii($18|0,($7|0),(10080|0),((10090)|0),($__atoms|0))|0);
       $19 = __THREW__; __THREW__ = 0;
       $20 = $19&1;
       if ($20) {
        label = 10;
        break L3;
       }
       $21 = HEAP32[$__wn>>2]|0;
       $22 = HEAP32[$__wb>>2]|0;
       $23 = $21;
       $24 = $22;
       $25 = (($23) - ($24))|0;
       $26 = ($25|0)>(98);
       if ($26) {
        $27 = (($25) + 2)|0;
        $28 = (_malloc($27)|0);
        $29 = $28;
        $30 = ($28|0)==(0|0);
        if ($30) {
         __THREW__ = 0;
         invoke_v(463);
         $31 = __THREW__; __THREW__ = 0;
         $32 = $31&1;
         if ($32) {
          $39 = $29;
         } else {
          $73 = $29;$__nc$0 = 0;
          label = 13;
         }
        } else {
         $73 = $29;$__nc$0 = $28;
         label = 13;
        }
       } else {
        $73 = 0;$__nc$0 = $__nbuf;
        label = 13;
       }
       do {
        if ((label|0) == 13) {
         $42 = HEAP8[$__neg>>0]|0;
         $43 = ($42<<24>>24)==(0);
         if ($43) {
          $__nc$1 = $__nc$0;
         } else {
          $44 = ((($__nc$0)) + 1|0);
          HEAP8[$__nc$0>>0] = 45;
          $__nc$1 = $44;
         }
         $45 = ((($__atoms)) + 10|0);
         $46 = $__atoms;
         $47 = ($22>>>0)<($21>>>0);
         if ($47) {
          $48 = ((($__atoms)) + 1|0);
          $49 = ((($48)) + 1|0);
          $50 = ((($49)) + 1|0);
          $51 = ((($50)) + 1|0);
          $52 = ((($51)) + 1|0);
          $53 = ((($52)) + 1|0);
          $54 = ((($53)) + 1|0);
          $55 = ((($54)) + 1|0);
          $56 = ((($55)) + 1|0);
          $__nc$217 = $__nc$1;$__w$018 = $22;
          while(1) {
           $57 = HEAP8[$__w$018>>0]|0;
           $58 = HEAP8[$__atoms>>0]|0;
           $59 = ($58<<24>>24)==($57<<24>>24);
           do {
            if ($59) {
             $$0$lcssa$i = $__atoms;
            } else {
             $60 = HEAP8[$48>>0]|0;
             $61 = ($60<<24>>24)==($57<<24>>24);
             if ($61) {
              $$0$lcssa$i = $48;
             } else {
              $125 = HEAP8[$49>>0]|0;
              $126 = ($125<<24>>24)==($57<<24>>24);
              if ($126) {
               $$0$lcssa$i = $49;
              } else {
               $127 = HEAP8[$50>>0]|0;
               $128 = ($127<<24>>24)==($57<<24>>24);
               if ($128) {
                $$0$lcssa$i = $50;
               } else {
                $129 = HEAP8[$51>>0]|0;
                $130 = ($129<<24>>24)==($57<<24>>24);
                if ($130) {
                 $$0$lcssa$i = $51;
                } else {
                 $131 = HEAP8[$52>>0]|0;
                 $132 = ($131<<24>>24)==($57<<24>>24);
                 if ($132) {
                  $$0$lcssa$i = $52;
                  break;
                 }
                 $133 = HEAP8[$53>>0]|0;
                 $134 = ($133<<24>>24)==($57<<24>>24);
                 if ($134) {
                  $$0$lcssa$i = $53;
                  break;
                 }
                 $135 = HEAP8[$54>>0]|0;
                 $136 = ($135<<24>>24)==($57<<24>>24);
                 if ($136) {
                  $$0$lcssa$i = $54;
                  break;
                 }
                 $137 = HEAP8[$55>>0]|0;
                 $138 = ($137<<24>>24)==($57<<24>>24);
                 if ($138) {
                  $$0$lcssa$i = $55;
                  break;
                 }
                 $139 = HEAP8[$56>>0]|0;
                 $140 = ($139<<24>>24)==($57<<24>>24);
                 $$ = $140 ? $56 : $45;
                 $$0$lcssa$i = $$;
                }
               }
              }
             }
            }
           } while(0);
           $62 = $$0$lcssa$i;
           $63 = (($62) - ($46))|0;
           $64 = (10080 + ($63)|0);
           $65 = HEAP8[$64>>0]|0;
           HEAP8[$__nc$217>>0] = $65;
           $66 = ((($__w$018)) + 1|0);
           $67 = ((($__nc$217)) + 1|0);
           $$pre = HEAP32[$__wn>>2]|0;
           $68 = ($66>>>0)<($$pre>>>0);
           if ($68) {
            $__nc$217 = $67;$__w$018 = $66;
           } else {
            $__nc$2$lcssa = $67;
            break;
           }
          }
         } else {
          $__nc$2$lcssa = $__nc$1;
         }
         HEAP8[$__nc$2$lcssa>>0] = 0;
         HEAP32[$vararg_buffer>>2] = $__v;
         $69 = (_sscanf($__nbuf,10096,$vararg_buffer)|0);
         $70 = ($69|0)==(1);
         if (!($70)) {
          __THREW__ = 0;
          invoke_vi(475,(10104|0));
          $71 = __THREW__; __THREW__ = 0;
          $72 = $71&1;
          if ($72) {
           $39 = $73;
           break;
          }
         }
         $74 = ($73|0)==(0);
         if (!($74)) {
          $75 = $73;
          _free($75);
         }
         break L6;
        }
       } while(0);
       $37 = ___cxa_find_matching_catch()|0;
       $38 = tempRet0;
       $40 = ($39|0)==(0);
       if ($40) {
        $$0 = $37;$$01 = $38;$$phi$trans$insert$pre$phiZZZZ2D = $__wb;
        break L3;
       }
       $41 = $39;
       _free($41);
       $$0 = $37;$$01 = $38;$$phi$trans$insert$pre$phiZZZZ2D = $__wb;
       break L3;
      }
     } while(0);
     $76 = HEAP32[$__b>>2]|0;
     $77 = ($76|0)==(0|0);
     do {
      if ($77) {
       $90 = 0;
      } else {
       $78 = ((($76)) + 12|0);
       $79 = HEAP32[$78>>2]|0;
       $80 = ((($76)) + 16|0);
       $81 = HEAP32[$80>>2]|0;
       $82 = ($79|0)==($81|0);
       if ($82) {
        $83 = HEAP32[$76>>2]|0;
        $84 = ((($83)) + 36|0);
        $85 = HEAP32[$84>>2]|0;
        __THREW__ = 0;
        $86 = (invoke_ii($85|0,($76|0))|0);
        $87 = __THREW__; __THREW__ = 0;
        $88 = $87&1;
        if ($88) {
         label = 10;
         break L3;
        }
        $89 = ($86|0)==(-1);
        if ($89) {
         HEAP32[$__b>>2] = 0;
         $90 = 0;
         break;
        } else {
         $$pre$i$i$i = HEAP32[$__b>>2]|0;
         $90 = $$pre$i$i$i;
         break;
        }
       } else {
        $90 = $76;
       }
      }
     } while(0);
     $91 = ($90|0)==(0|0);
     $92 = HEAP32[$__e>>2]|0;
     $93 = ($92|0)==(0|0);
     do {
      if ($93) {
       label = 37;
      } else {
       $94 = ((($92)) + 12|0);
       $95 = HEAP32[$94>>2]|0;
       $96 = ((($92)) + 16|0);
       $97 = HEAP32[$96>>2]|0;
       $98 = ($95|0)==($97|0);
       if ($98) {
        $99 = HEAP32[$92>>2]|0;
        $100 = ((($99)) + 36|0);
        $101 = HEAP32[$100>>2]|0;
        __THREW__ = 0;
        $102 = (invoke_ii($101|0,($92|0))|0);
        $103 = __THREW__; __THREW__ = 0;
        $104 = $103&1;
        if ($104) {
         label = 10;
         break L3;
        }
        $105 = ($102|0)==(-1);
        if ($105) {
         HEAP32[$__e>>2] = 0;
         label = 37;
         break;
        }
       }
       if (!($91)) {
        label = 38;
       }
      }
     } while(0);
     if ((label|0) == 37) {
      if ($91) {
       label = 38;
      }
     }
     if ((label|0) == 38) {
      $106 = HEAP32[$__err>>2]|0;
      $107 = $106 | 2;
      HEAP32[$__err>>2] = $107;
     }
     $108 = HEAP32[$__b>>2]|0;
     $109 = HEAP32[$__loc>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($109)|0);
     $110 = HEAP32[$__wb>>2]|0;
     HEAP32[$__wb>>2] = 0;
     $111 = ($110|0)==(0|0);
     if (!($111)) {
      $112 = HEAP32[$2>>2]|0;
      __THREW__ = 0;
      invoke_vi($112|0,($110|0));
      $113 = __THREW__; __THREW__ = 0;
      $114 = $113&1;
      if ($114) {
       $115 = ___cxa_find_matching_catch(0|0)|0;
       $116 = tempRet0;
       ___clang_call_terminate($115);
       // unreachable;
      }
     }
     STACKTOP = sp;return ($108|0);
    }
   }
  } while(0);
  if ((label|0) == 10) {
   $35 = ___cxa_find_matching_catch()|0;
   $36 = tempRet0;
   $$0 = $35;$$01 = $36;$$phi$trans$insert$pre$phiZZZZ2D = $__wb;
  }
  $117 = HEAP32[$__loc>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($117)|0);
  $$pre7 = HEAP32[$$phi$trans$insert$pre$phiZZZZ2D>>2]|0;
  HEAP32[$$phi$trans$insert$pre$phiZZZZ2D>>2] = 0;
  $118 = ($$pre7|0)==(0|0);
  if ($118) {
   $$114 = $$0;$$1212 = $$01;
  } else {
   $$pre15 = HEAP32[$2>>2]|0;
   $$113 = $$0;$$1211 = $$01;$119 = $$pre15;$120 = $$pre7;
   label = 45;
  }
 }
 if ((label|0) == 45) {
  __THREW__ = 0;
  invoke_vi($119|0,($120|0));
  $121 = __THREW__; __THREW__ = 0;
  $122 = $121&1;
  if ($122) {
   $123 = ___cxa_find_matching_catch(0|0)|0;
   $124 = tempRet0;
   ___clang_call_terminate($123);
   // unreachable;
  } else {
   $$114 = $$113;$$1212 = $$1211;
  }
 }
 ___resumeException($$114|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__112__do_nothingEPv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_($__b,$__e,$__intl,$__loc,$__flags,$__err,$__neg,$__ct,$__wb,$__wn,$__we) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__loc = $__loc|0;
 $__flags = $__flags|0;
 $__err = $__err|0;
 $__neg = $__neg|0;
 $__ct = $__ct|0;
 $__wb = $__wb|0;
 $__wn = $__wn|0;
 $__we = $__we|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i114 = 0, $$0$i$i121 = 0, $$0$i$i130 = 0, $$0$i$i140 = 0, $$0$i$i157 = 0, $$0$i$i42 = 0, $$0$i$i45 = 0, $$0$i$i58 = 0, $$0$i$i65 = 0, $$0$i$i68 = 0, $$0$i$i75 = 0, $$0$i$i94 = 0, $$0$i$i97 = 0, $$in340 = 0, $$lcssa = 0, $$lcssa243 = 0, $$lcssa313 = 0, $$lcssa371 = 0;
 var $$ph = 0, $$phi$trans$insert = 0, $$phi$trans$insert274 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i104 = 0, $$pre$i$i$i144 = 0, $$pre$i$i$i161 = 0, $$pre$i$i$i32 = 0, $$pre$i$i$i48 = 0, $$pre$i$i$i80 = 0, $$pre$i2$i$i108 = 0, $$pre$i2$i$i148 = 0, $$pre$i2$i$i148256 = 0, $$pre$i2$i$i148258 = 0, $$pre$i2$i$i165268 = 0, $$pre$i2$i$i165269 = 0, $$pre$i2$i$i165345 = 0, $$pre$i2$i$i52 = 0, $$pre$i2$i$i52278 = 0;
 var $$pre$i2$i$i52280 = 0, $$pre$i2$i$i84264$ph = 0, $$pre$i2$i$i84264283 = 0, $$pre$i2$i$i84336 = 0, $$pre261 = 0, $$pre263 = 0, $$pre266 = 0, $$pre267 = 0, $$pre271 = 0, $$pre272 = 0, $$pre273 = 0, $$pre275 = 0, $$pre276 = 0, $$pre277 = 0, $$sum = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0;
 var $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0;
 var $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0;
 var $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0;
 var $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0;
 var $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0;
 var $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0;
 var $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0;
 var $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0;
 var $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0;
 var $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0;
 var $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0;
 var $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0;
 var $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0;
 var $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0;
 var $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0;
 var $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0;
 var $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0;
 var $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0;
 var $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0;
 var $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0;
 var $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0;
 var $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0;
 var $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0;
 var $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0;
 var $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0;
 var $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0;
 var $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0;
 var $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0;
 var $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0;
 var $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0;
 var $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0;
 var $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0;
 var $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0;
 var $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0;
 var $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0;
 var $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0;
 var $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0;
 var $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0;
 var $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0;
 var $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0;
 var $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0;
 var $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0;
 var $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $__dp = 0, $__et = 0, $__fd = 0, $__gb = 0, $__gbuf = 0, $__ge = 0, $__gn = 0, $__grp = 0, $__i$0 = 0, $__ng$0 = 0, $__ng$0$lcssa372 = 0, $__ng$1 = 0, $__nsn = 0, $__nsn$__trailing_sign$0 = 0, $__nsn$__trailing_sign$011 = 0, $__p$0353 = 0, $__pat = 0, $__psn = 0;
 var $__psn$__trailing_sign$0 = 0, $__psn$__trailing_sign$010 = 0, $__spaces = 0, $__sym = 0, $__trailing_sign$0$lcssa = 0, $__trailing_sign$0355 = 0, $__trailing_sign$1 = 0, $__ts = 0, $brmerge = 0, $cond = 0, $isascii1$i = 0, $isascii1$i138 = 0, $isascii1$i171 = 0, $isascii1$i61 = 0, $isascii1$i73 = 0, $lpad$phi$index = 0, $lpad$phi$index7 = 0, $or$cond = 0, $or$cond13 = 0, $or$cond7 = 0;
 var $or$cond9 = 0, $sext = 0, $sext210 = 0, $sext211 = 0, $sext212 = 0, $switch = 0, $tmp$i$i150 = 0, $tmp$i$i167 = 0, $tmp$i$i54 = 0, $tmp$i$i86 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 488|0;
 $__gbuf = sp + 88|0;
 $__gb = sp + 80|0;
 $__gn = sp + 72|0;
 $__ge = sp + 68|0;
 $__pat = sp + 496|0;
 $__dp = sp + 493|0;
 $__ts = sp + 492|0;
 $__grp = sp + 56|0;
 $__sym = sp + 44|0;
 $__psn = sp + 32|0;
 $__nsn = sp + 20|0;
 $__spaces = sp + 8|0;
 $__fd = sp + 4|0;
 $__et = sp;
 HEAP32[$0>>2] = $__we;
 $1 = $__gbuf;
 HEAP32[$__gb>>2] = $1;
 $2 = ((($__gb)) + 4|0);
 HEAP32[$2>>2] = (473);
 HEAP32[$__gn>>2] = $__gbuf;
 $3 = ((($__gbuf)) + 400|0);
 HEAP32[$__ge>>2] = $3;
 HEAP32[$__grp>>2] = 0;
 $4 = ((($__grp)) + 4|0);
 HEAP32[$4>>2] = 0;
 $5 = ((($__grp)) + 8|0);
 HEAP32[$5>>2] = 0;
 HEAP32[$__sym>>2] = 0;
 $6 = ((($__sym)) + 4|0);
 HEAP32[$6>>2] = 0;
 $7 = ((($__sym)) + 8|0);
 HEAP32[$7>>2] = 0;
 HEAP32[$__psn>>2] = 0;
 $8 = ((($__psn)) + 4|0);
 HEAP32[$8>>2] = 0;
 $9 = ((($__psn)) + 8|0);
 HEAP32[$9>>2] = 0;
 HEAP32[$__nsn>>2] = 0;
 $10 = ((($__nsn)) + 4|0);
 HEAP32[$10>>2] = 0;
 $11 = ((($__nsn)) + 8|0);
 HEAP32[$11>>2] = 0;
 HEAP32[$__spaces>>2] = 0;
 $12 = ((($__spaces)) + 4|0);
 HEAP32[$12>>2] = 0;
 $13 = ((($__spaces)) + 8|0);
 HEAP32[$13>>2] = 0;
 __THREW__ = 0;
 invoke_viiiiiiiiii(476,($__intl|0),($__loc|0),($__pat|0),($__dp|0),($__ts|0),($__grp|0),($__sym|0),($__psn|0),($__nsn|0),($__fd|0));
 $14 = __THREW__; __THREW__ = 0;
 $15 = $14&1;
 L1: do {
  if ($15) {
   $80 = ___cxa_find_matching_catch()|0;
   $81 = tempRet0;
   $lpad$phi$index = $80;$lpad$phi$index7 = $81;
  } else {
   $16 = HEAP32[$__wb>>2]|0;
   HEAP32[$__wn>>2] = $16;
   $17 = ((($__ct)) + 8|0);
   $18 = ((($__psn)) + 4|0);
   $19 = ((($__nsn)) + 4|0);
   $20 = ((($__nsn)) + 8|0);
   $21 = ((($__nsn)) + 1|0);
   $22 = ((($__psn)) + 8|0);
   $23 = ((($__psn)) + 1|0);
   $24 = $__flags & 512;
   $25 = ($24|0)!=(0);
   $26 = ((($__sym)) + 8|0);
   $27 = ((($__sym)) + 1|0);
   $28 = ((($__sym)) + 4|0);
   $29 = ((($__spaces)) + 4|0);
   $30 = ((($__spaces)) + 8|0);
   $31 = ((($__spaces)) + 1|0);
   $32 = ((($__pat)) + 3|0);
   $33 = ((($__grp)) + 4|0);
   $876 = $__gbuf;$__p$0353 = 0;$__trailing_sign$0355 = 0;
   L4: while(1) {
    $34 = HEAP32[$__b>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      $48 = 0;
     } else {
      $36 = ((($34)) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = ((($34)) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if ($40) {
       $41 = HEAP32[$34>>2]|0;
       $42 = ((($41)) + 36|0);
       $43 = HEAP32[$42>>2]|0;
       __THREW__ = 0;
       $44 = (invoke_ii($43|0,($34|0))|0);
       $45 = __THREW__; __THREW__ = 0;
       $46 = $45&1;
       if ($46) {
        label = 24;
        break L4;
       }
       $47 = ($44|0)==(-1);
       if ($47) {
        HEAP32[$__b>>2] = 0;
        $48 = 0;
        break;
       } else {
        $$pre$i$i$i32 = HEAP32[$__b>>2]|0;
        $48 = $$pre$i$i$i32;
        break;
       }
      } else {
       $48 = $34;
      }
     }
    } while(0);
    $49 = ($48|0)==(0|0);
    $50 = HEAP32[$__e>>2]|0;
    $51 = ($50|0)==(0|0);
    do {
     if ($51) {
      label = 15;
     } else {
      $52 = ((($50)) + 12|0);
      $53 = HEAP32[$52>>2]|0;
      $54 = ((($50)) + 16|0);
      $55 = HEAP32[$54>>2]|0;
      $56 = ($53|0)==($55|0);
      if (!($56)) {
       if ($49) {
        $877 = $50;
        break;
       } else {
        $$lcssa313 = $876;$__trailing_sign$0$lcssa = $__trailing_sign$0355;
        label = 235;
        break L4;
       }
      }
      $57 = HEAP32[$50>>2]|0;
      $58 = ((($57)) + 36|0);
      $59 = HEAP32[$58>>2]|0;
      __THREW__ = 0;
      $60 = (invoke_ii($59|0,($50|0))|0);
      $61 = __THREW__; __THREW__ = 0;
      $62 = $61&1;
      if ($62) {
       label = 24;
       break L4;
      }
      $63 = ($60|0)==(-1);
      if ($63) {
       HEAP32[$__e>>2] = 0;
       label = 15;
       break;
      } else {
       if ($49) {
        $877 = $50;
        break;
       } else {
        $$lcssa313 = $876;$__trailing_sign$0$lcssa = $__trailing_sign$0355;
        label = 235;
        break L4;
       }
      }
     }
    } while(0);
    if ((label|0) == 15) {
     label = 0;
     if ($49) {
      $$lcssa313 = $876;$__trailing_sign$0$lcssa = $__trailing_sign$0355;
      label = 235;
      break;
     } else {
      $877 = 0;
     }
    }
    $64 = (($__pat) + ($__p$0353)|0);
    $65 = HEAP8[$64>>0]|0;
    $66 = $65 << 24 >> 24;
    L26: do {
     switch ($66|0) {
     case 0:  {
      $130 = ($__p$0353|0)==(3);
      if ($130) {
       $878 = $876;$__trailing_sign$1 = $__trailing_sign$0355;
      } else {
       $$pre$i2$i$i52 = $877;$147 = $877;
       label = 42;
      }
      break;
     }
     case 1:  {
      $cond = ($__p$0353|0)==(3);
      if ($cond) {
       $878 = $876;$__trailing_sign$1 = $__trailing_sign$0355;
      } else {
       $89 = HEAP32[$__b>>2]|0;
       $90 = ((($89)) + 12|0);
       $91 = HEAP32[$90>>2]|0;
       $92 = ((($89)) + 16|0);
       $93 = HEAP32[$92>>2]|0;
       $94 = ($91|0)==($93|0);
       if ($94) {
        $95 = HEAP32[$89>>2]|0;
        $96 = ((($95)) + 36|0);
        $97 = HEAP32[$96>>2]|0;
        __THREW__ = 0;
        $98 = (invoke_ii($97|0,($89|0))|0);
        $99 = __THREW__; __THREW__ = 0;
        $100 = $99&1;
        if ($100) {
         label = 24;
         break L4;
        } else {
         $$0$i$i42 = $98;
        }
       } else {
        $101 = HEAP8[$91>>0]|0;
        $102 = $101&255;
        $$0$i$i42 = $102;
       }
       $103 = $$0$i$i42&255;
       $isascii1$i = ($103<<24>>24)>(-1);
       if (!($isascii1$i)) {
        label = 40;
        break L4;
       }
       $sext212 = $$0$i$i42 << 24;
       $104 = $sext212 >> 24;
       $105 = HEAP32[$17>>2]|0;
       $106 = (($105) + ($104<<1)|0);
       $107 = HEAP16[$106>>1]|0;
       $108 = $107 & 8192;
       $109 = ($108<<16>>16)==(0);
       if ($109) {
        label = 40;
        break L4;
       }
       $110 = HEAP32[$__b>>2]|0;
       $111 = ((($110)) + 12|0);
       $112 = HEAP32[$111>>2]|0;
       $113 = ((($110)) + 16|0);
       $114 = HEAP32[$113>>2]|0;
       $115 = ($112|0)==($114|0);
       if ($115) {
        $116 = HEAP32[$110>>2]|0;
        $117 = ((($116)) + 40|0);
        $118 = HEAP32[$117>>2]|0;
        __THREW__ = 0;
        $119 = (invoke_ii($118|0,($110|0))|0);
        $120 = __THREW__; __THREW__ = 0;
        $121 = $120&1;
        if ($121) {
         label = 24;
         break L4;
        } else {
         $$0$i$i45 = $119;
        }
       } else {
        $122 = ((($112)) + 1|0);
        HEAP32[$111>>2] = $122;
        $123 = HEAP8[$112>>0]|0;
        $124 = $123&255;
        $$0$i$i45 = $124;
       }
       $125 = $$0$i$i45&255;
       __THREW__ = 0;
       invoke_vii(425,($__spaces|0),($125|0));
       $126 = __THREW__; __THREW__ = 0;
       $127 = $126&1;
       if ($127) {
        label = 24;
        break L4;
       } else {
        $$pre$i2$i$i52 = $877;$147 = $877;
        label = 42;
       }
      }
      break;
     }
     case 4:  {
      $67 = HEAP8[$__ts>>0]|0;
      $$pre$i2$i$i148 = $877;$540 = $877;$595 = $876;$__ng$0 = 0;
      L41: while(1) {
       $524 = HEAP32[$__b>>2]|0;
       $525 = ($524|0)==(0|0);
       do {
        if ($525) {
         $538 = 0;
        } else {
         $526 = ((($524)) + 12|0);
         $527 = HEAP32[$526>>2]|0;
         $528 = ((($524)) + 16|0);
         $529 = HEAP32[$528>>2]|0;
         $530 = ($527|0)==($529|0);
         if ($530) {
          $531 = HEAP32[$524>>2]|0;
          $532 = ((($531)) + 36|0);
          $533 = HEAP32[$532>>2]|0;
          __THREW__ = 0;
          $534 = (invoke_ii($533|0,($524|0))|0);
          $535 = __THREW__; __THREW__ = 0;
          $536 = $535&1;
          if ($536) {
           label = 23;
           break L4;
          }
          $537 = ($534|0)==(-1);
          if ($537) {
           HEAP32[$__b>>2] = 0;
           $538 = 0;
           break;
          } else {
           $$pre$i$i$i144 = HEAP32[$__b>>2]|0;
           $538 = $$pre$i$i$i144;
           break;
          }
         } else {
          $538 = $524;
         }
        }
       } while(0);
       $539 = ($538|0)==(0|0);
       $541 = ($540|0)==(0|0);
       do {
        if ($541) {
         $$pre$i2$i$i148256 = $$pre$i2$i$i148;
         label = 156;
        } else {
         $542 = ((($540)) + 12|0);
         $543 = HEAP32[$542>>2]|0;
         $544 = ((($540)) + 16|0);
         $545 = HEAP32[$544>>2]|0;
         $546 = ($543|0)==($545|0);
         if (!($546)) {
          if ($539) {
           $$pre$i2$i$i148258 = $$pre$i2$i$i148;$882 = $540;
           break;
          } else {
           $$lcssa371 = $595;$$pre$i2$i$i108 = $$pre$i2$i$i148;$__ng$0$lcssa372 = $__ng$0;
           break L41;
          }
         }
         $547 = HEAP32[$540>>2]|0;
         $548 = ((($547)) + 36|0);
         $549 = HEAP32[$548>>2]|0;
         __THREW__ = 0;
         $550 = (invoke_ii($549|0,($540|0))|0);
         $551 = __THREW__; __THREW__ = 0;
         $552 = $551&1;
         if ($552) {
          label = 23;
          break L4;
         }
         $553 = ($550|0)==(-1);
         if ($553) {
          HEAP32[$__e>>2] = 0;
          $$pre$i2$i$i148256 = 0;
          label = 156;
          break;
         } else {
          $554 = ($$pre$i2$i$i148|0)==(0|0);
          $tmp$i$i150 = $539 ^ $554;
          if ($tmp$i$i150) {
           $$pre$i2$i$i148258 = $$pre$i2$i$i148;$882 = $$pre$i2$i$i148;
           break;
          } else {
           $$lcssa371 = $595;$$pre$i2$i$i108 = $$pre$i2$i$i148;$__ng$0$lcssa372 = $__ng$0;
           break L41;
          }
         }
        }
       } while(0);
       if ((label|0) == 156) {
        label = 0;
        if ($539) {
         $$lcssa371 = $595;$$pre$i2$i$i108 = $$pre$i2$i$i148256;$__ng$0$lcssa372 = $__ng$0;
         break;
        } else {
         $$pre$i2$i$i148258 = $$pre$i2$i$i148256;$882 = 0;
        }
       }
       $555 = HEAP32[$__b>>2]|0;
       $556 = ((($555)) + 12|0);
       $557 = HEAP32[$556>>2]|0;
       $558 = ((($555)) + 16|0);
       $559 = HEAP32[$558>>2]|0;
       $560 = ($557|0)==($559|0);
       if ($560) {
        $561 = HEAP32[$555>>2]|0;
        $562 = ((($561)) + 36|0);
        $563 = HEAP32[$562>>2]|0;
        __THREW__ = 0;
        $564 = (invoke_ii($563|0,($555|0))|0);
        $565 = __THREW__; __THREW__ = 0;
        $566 = $565&1;
        if ($566) {
         label = 23;
         break L4;
        } else {
         $$0$i$i140 = $564;
        }
       } else {
        $567 = HEAP8[$557>>0]|0;
        $568 = $567&255;
        $$0$i$i140 = $568;
       }
       $569 = $$0$i$i140&255;
       $isascii1$i138 = ($569<<24>>24)>(-1);
       if ($isascii1$i138) {
        $sext210 = $$0$i$i140 << 24;
        $570 = $sext210 >> 24;
        $571 = HEAP32[$17>>2]|0;
        $572 = (($571) + ($570<<1)|0);
        $573 = HEAP16[$572>>1]|0;
        $574 = $573 & 2048;
        $575 = ($574<<16>>16)==(0);
        if ($575) {
         label = 167;
        } else {
         $576 = HEAP32[$__wn>>2]|0;
         $577 = HEAP32[$0>>2]|0;
         $578 = ($576|0)==($577|0);
         if ($578) {
          __THREW__ = 0;
          invoke_viii(477,($__wb|0),($__wn|0),($0|0));
          $579 = __THREW__; __THREW__ = 0;
          $580 = $579&1;
          if ($580) {
           label = 23;
           break L4;
          }
          $$pre = HEAP32[$__wn>>2]|0;
          $582 = $$pre;
         } else {
          $582 = $576;
         }
         $581 = ((($582)) + 1|0);
         HEAP32[$__wn>>2] = $581;
         HEAP8[$582>>0] = $569;
         $583 = (($__ng$0) + 1)|0;
         $883 = $595;$__ng$1 = $583;
        }
       } else {
        label = 167;
       }
       if ((label|0) == 167) {
        label = 0;
        $584 = HEAP8[$__grp>>0]|0;
        $585 = $584 & 1;
        $586 = ($585<<24>>24)==(0);
        $587 = HEAP32[$33>>2]|0;
        $588 = $584&255;
        $589 = $588 >>> 1;
        $590 = $586 ? $589 : $587;
        $591 = ($590|0)!=(0);
        $592 = ($__ng$0|0)!=(0);
        $or$cond7 = $592 & $591;
        $593 = ($569<<24>>24)==($67<<24>>24);
        $or$cond13 = $593 & $or$cond7;
        if (!($or$cond13)) {
         $$lcssa371 = $595;$$pre$i2$i$i108 = $$pre$i2$i$i148258;$__ng$0$lcssa372 = $__ng$0;
         break;
        }
        $594 = HEAP32[$__ge>>2]|0;
        $596 = ($595|0)==($594|0);
        if ($596) {
         __THREW__ = 0;
         invoke_viii(478,($__gb|0),($__gn|0),($__ge|0));
         $597 = __THREW__; __THREW__ = 0;
         $598 = $597&1;
         if ($598) {
          label = 23;
          break L4;
         }
         $$pre261 = HEAP32[$__gn>>2]|0;
         $600 = $$pre261;
        } else {
         $600 = $595;
        }
        $599 = ((($600)) + 4|0);
        HEAP32[$__gn>>2] = $599;
        HEAP32[$600>>2] = $__ng$0;
        $883 = $599;$__ng$1 = 0;
       }
       $601 = HEAP32[$__b>>2]|0;
       $602 = ((($601)) + 12|0);
       $603 = HEAP32[$602>>2]|0;
       $604 = ((($601)) + 16|0);
       $605 = HEAP32[$604>>2]|0;
       $606 = ($603|0)==($605|0);
       if ($606) {
        $607 = HEAP32[$601>>2]|0;
        $608 = ((($607)) + 40|0);
        $609 = HEAP32[$608>>2]|0;
        __THREW__ = 0;
        (invoke_ii($609|0,($601|0))|0);
        $610 = __THREW__; __THREW__ = 0;
        $611 = $610&1;
        if ($611) {
         label = 23;
         break L4;
        } else {
         $$pre$i2$i$i148 = $$pre$i2$i$i148258;$540 = $882;$595 = $883;$__ng$0 = $__ng$1;
         continue;
        }
       } else {
        $612 = ((($603)) + 1|0);
        HEAP32[$602>>2] = $612;
        $$pre$i2$i$i148 = $$pre$i2$i$i148258;$540 = $882;$595 = $883;$__ng$0 = $__ng$1;
        continue;
       }
      }
      $613 = HEAP32[$__gb>>2]|0;
      $614 = ($613|0)!=($$lcssa371|0);
      $615 = ($__ng$0$lcssa372|0)!=(0);
      $or$cond9 = $615 & $614;
      if ($or$cond9) {
       $616 = HEAP32[$__ge>>2]|0;
       $617 = ($$lcssa371|0)==($616|0);
       if ($617) {
        __THREW__ = 0;
        invoke_viii(478,($__gb|0),($__gn|0),($__ge|0));
        $618 = __THREW__; __THREW__ = 0;
        $619 = $618&1;
        if ($619) {
         label = 24;
         break L4;
        }
        $$pre263 = HEAP32[$__gn>>2]|0;
        $621 = $$pre263;
       } else {
        $621 = $$lcssa371;
       }
       $620 = ((($621)) + 4|0);
       HEAP32[$__gn>>2] = $620;
       HEAP32[$621>>2] = $__ng$0$lcssa372;
       $884 = $620;
      } else {
       $884 = $$lcssa371;
      }
      $622 = HEAP32[$__fd>>2]|0;
      $623 = ($622|0)>(0);
      if ($623) {
       $624 = HEAP32[$__b>>2]|0;
       $625 = ($624|0)==(0|0);
       do {
        if ($625) {
         $638 = 0;
        } else {
         $626 = ((($624)) + 12|0);
         $627 = HEAP32[$626>>2]|0;
         $628 = ((($624)) + 16|0);
         $629 = HEAP32[$628>>2]|0;
         $630 = ($627|0)==($629|0);
         if ($630) {
          $631 = HEAP32[$624>>2]|0;
          $632 = ((($631)) + 36|0);
          $633 = HEAP32[$632>>2]|0;
          __THREW__ = 0;
          $634 = (invoke_ii($633|0,($624|0))|0);
          $635 = __THREW__; __THREW__ = 0;
          $636 = $635&1;
          if ($636) {
           label = 24;
           break L4;
          }
          $637 = ($634|0)==(-1);
          if ($637) {
           HEAP32[$__b>>2] = 0;
           $638 = 0;
           break;
          } else {
           $$pre$i$i$i104 = HEAP32[$__b>>2]|0;
           $638 = $$pre$i$i$i104;
           break;
          }
         } else {
          $638 = $624;
         }
        }
       } while(0);
       $639 = ($638|0)==(0|0);
       $640 = ($$pre$i2$i$i108|0)==(0|0);
       do {
        if ($640) {
         label = 193;
        } else {
         $641 = ((($$pre$i2$i$i108)) + 12|0);
         $642 = HEAP32[$641>>2]|0;
         $643 = ((($$pre$i2$i$i108)) + 16|0);
         $644 = HEAP32[$643>>2]|0;
         $645 = ($642|0)==($644|0);
         if ($645) {
          $646 = HEAP32[$$pre$i2$i$i108>>2]|0;
          $647 = ((($646)) + 36|0);
          $648 = HEAP32[$647>>2]|0;
          __THREW__ = 0;
          $649 = (invoke_ii($648|0,($$pre$i2$i$i108|0))|0);
          $650 = __THREW__; __THREW__ = 0;
          $651 = $650&1;
          if ($651) {
           label = 24;
           break L4;
          }
          $652 = ($649|0)==(-1);
          if ($652) {
           HEAP32[$__e>>2] = 0;
           label = 193;
           break;
          }
         }
         if ($639) {
          $885 = $$pre$i2$i$i108;
         } else {
          label = 198;
          break L4;
         }
        }
       } while(0);
       if ((label|0) == 193) {
        label = 0;
        if ($639) {
         label = 198;
         break L4;
        } else {
         $885 = 0;
        }
       }
       $653 = HEAP32[$__b>>2]|0;
       $654 = ((($653)) + 12|0);
       $655 = HEAP32[$654>>2]|0;
       $656 = ((($653)) + 16|0);
       $657 = HEAP32[$656>>2]|0;
       $658 = ($655|0)==($657|0);
       if ($658) {
        $659 = HEAP32[$653>>2]|0;
        $660 = ((($659)) + 36|0);
        $661 = HEAP32[$660>>2]|0;
        __THREW__ = 0;
        $662 = (invoke_ii($661|0,($653|0))|0);
        $663 = __THREW__; __THREW__ = 0;
        $664 = $663&1;
        if ($664) {
         label = 24;
         break L4;
        } else {
         $$0$i$i97 = $662;
        }
       } else {
        $665 = HEAP8[$655>>0]|0;
        $666 = $665&255;
        $$0$i$i97 = $666;
       }
       $667 = $$0$i$i97&255;
       $668 = HEAP8[$__dp>>0]|0;
       $669 = ($667<<24>>24)==($668<<24>>24);
       if (!($669)) {
        label = 198;
        break L4;
       }
       $672 = HEAP32[$__b>>2]|0;
       $673 = ((($672)) + 12|0);
       $674 = HEAP32[$673>>2]|0;
       $675 = ((($672)) + 16|0);
       $676 = HEAP32[$675>>2]|0;
       $677 = ($674|0)==($676|0);
       if ($677) {
        $678 = HEAP32[$672>>2]|0;
        $679 = ((($678)) + 40|0);
        $680 = HEAP32[$679>>2]|0;
        __THREW__ = 0;
        (invoke_ii($680|0,($672|0))|0);
        $681 = __THREW__; __THREW__ = 0;
        $682 = $681&1;
        if ($682) {
         label = 24;
         break L4;
        }
       } else {
        $683 = ((($674)) + 1|0);
        HEAP32[$673>>2] = $683;
       }
       $684 = ($622|0)>(0);
       if ($684) {
        $$pre$i2$i$i84336 = $885;$701 = $885;$762 = $622;
        while(1) {
         $685 = HEAP32[$__b>>2]|0;
         $686 = ($685|0)==(0|0);
         do {
          if ($686) {
           $699 = 0;
          } else {
           $687 = ((($685)) + 12|0);
           $688 = HEAP32[$687>>2]|0;
           $689 = ((($685)) + 16|0);
           $690 = HEAP32[$689>>2]|0;
           $691 = ($688|0)==($690|0);
           if ($691) {
            $692 = HEAP32[$685>>2]|0;
            $693 = ((($692)) + 36|0);
            $694 = HEAP32[$693>>2]|0;
            __THREW__ = 0;
            $695 = (invoke_ii($694|0,($685|0))|0);
            $696 = __THREW__; __THREW__ = 0;
            $697 = $696&1;
            if ($697) {
             label = 22;
             break L4;
            }
            $698 = ($695|0)==(-1);
            if ($698) {
             HEAP32[$__b>>2] = 0;
             $699 = 0;
             break;
            } else {
             $$pre$i$i$i80 = HEAP32[$__b>>2]|0;
             $699 = $$pre$i$i$i80;
             break;
            }
           } else {
            $699 = $685;
           }
          }
         } while(0);
         $700 = ($699|0)==(0|0);
         $702 = ($701|0)==(0|0);
         do {
          if ($702) {
           $$pre$i2$i$i84264$ph = $$pre$i2$i$i84336;
           label = 215;
          } else {
           $703 = ((($701)) + 12|0);
           $704 = HEAP32[$703>>2]|0;
           $705 = ((($701)) + 16|0);
           $706 = HEAP32[$705>>2]|0;
           $707 = ($704|0)==($706|0);
           if (!($707)) {
            if ($700) {
             $$pre$i2$i$i84264283 = $$pre$i2$i$i84336;$886 = $701;
             break;
            } else {
             label = 222;
             break L4;
            }
           }
           $708 = HEAP32[$701>>2]|0;
           $709 = ((($708)) + 36|0);
           $710 = HEAP32[$709>>2]|0;
           __THREW__ = 0;
           $711 = (invoke_ii($710|0,($701|0))|0);
           $712 = __THREW__; __THREW__ = 0;
           $713 = $712&1;
           if ($713) {
            label = 22;
            break L4;
           }
           $714 = ($711|0)==(-1);
           if ($714) {
            HEAP32[$__e>>2] = 0;
            $$pre$i2$i$i84264$ph = 0;
            label = 215;
            break;
           } else {
            $715 = ($$pre$i2$i$i84336|0)==(0|0);
            $tmp$i$i86 = $700 ^ $715;
            if ($tmp$i$i86) {
             $$pre$i2$i$i84264283 = $$pre$i2$i$i84336;$886 = $$pre$i2$i$i84336;
             break;
            } else {
             label = 222;
             break L4;
            }
           }
          }
         } while(0);
         if ((label|0) == 215) {
          label = 0;
          if ($700) {
           label = 222;
           break L4;
          } else {
           $$pre$i2$i$i84264283 = $$pre$i2$i$i84264$ph;$886 = 0;
          }
         }
         $716 = HEAP32[$__b>>2]|0;
         $717 = ((($716)) + 12|0);
         $718 = HEAP32[$717>>2]|0;
         $719 = ((($716)) + 16|0);
         $720 = HEAP32[$719>>2]|0;
         $721 = ($718|0)==($720|0);
         if ($721) {
          $722 = HEAP32[$716>>2]|0;
          $723 = ((($722)) + 36|0);
          $724 = HEAP32[$723>>2]|0;
          __THREW__ = 0;
          $725 = (invoke_ii($724|0,($716|0))|0);
          $726 = __THREW__; __THREW__ = 0;
          $727 = $726&1;
          if ($727) {
           label = 22;
           break L4;
          } else {
           $$0$i$i75 = $725;
          }
         } else {
          $728 = HEAP8[$718>>0]|0;
          $729 = $728&255;
          $$0$i$i75 = $729;
         }
         $730 = $$0$i$i75&255;
         $isascii1$i73 = ($730<<24>>24)>(-1);
         if (!($isascii1$i73)) {
          label = 222;
          break L4;
         }
         $sext = $$0$i$i75 << 24;
         $731 = $sext >> 24;
         $732 = HEAP32[$17>>2]|0;
         $733 = (($732) + ($731<<1)|0);
         $734 = HEAP16[$733>>1]|0;
         $735 = $734 & 2048;
         $736 = ($735<<16>>16)==(0);
         if ($736) {
          label = 222;
          break L4;
         }
         $739 = HEAP32[$__wn>>2]|0;
         $740 = HEAP32[$0>>2]|0;
         $741 = ($739|0)==($740|0);
         if ($741) {
          __THREW__ = 0;
          invoke_viii(477,($__wb|0),($__wn|0),($0|0));
          $742 = __THREW__; __THREW__ = 0;
          $743 = $742&1;
          if ($743) {
           label = 22;
           break L4;
          }
         }
         $744 = HEAP32[$__b>>2]|0;
         $745 = ((($744)) + 12|0);
         $746 = HEAP32[$745>>2]|0;
         $747 = ((($744)) + 16|0);
         $748 = HEAP32[$747>>2]|0;
         $749 = ($746|0)==($748|0);
         if ($749) {
          $750 = HEAP32[$744>>2]|0;
          $751 = ((($750)) + 36|0);
          $752 = HEAP32[$751>>2]|0;
          __THREW__ = 0;
          $753 = (invoke_ii($752|0,($744|0))|0);
          $754 = __THREW__; __THREW__ = 0;
          $755 = $754&1;
          if ($755) {
           label = 22;
           break L4;
          } else {
           $$0$i$i68 = $753;
          }
         } else {
          $756 = HEAP8[$746>>0]|0;
          $757 = $756&255;
          $$0$i$i68 = $757;
         }
         $758 = $$0$i$i68&255;
         $759 = HEAP32[$__wn>>2]|0;
         $760 = ((($759)) + 1|0);
         HEAP32[$__wn>>2] = $760;
         HEAP8[$759>>0] = $758;
         $761 = (($762) + -1)|0;
         HEAP32[$__fd>>2] = $761;
         $763 = HEAP32[$__b>>2]|0;
         $764 = ((($763)) + 12|0);
         $765 = HEAP32[$764>>2]|0;
         $766 = ((($763)) + 16|0);
         $767 = HEAP32[$766>>2]|0;
         $768 = ($765|0)==($767|0);
         if ($768) {
          $769 = HEAP32[$763>>2]|0;
          $770 = ((($769)) + 40|0);
          $771 = HEAP32[$770>>2]|0;
          __THREW__ = 0;
          (invoke_ii($771|0,($763|0))|0);
          $772 = __THREW__; __THREW__ = 0;
          $773 = $772&1;
          if ($773) {
           label = 22;
           break L4;
          }
         } else {
          $775 = ((($765)) + 1|0);
          HEAP32[$764>>2] = $775;
         }
         $774 = ($762|0)>(1);
         if ($774) {
          $$pre$i2$i$i84336 = $$pre$i2$i$i84264283;$701 = $886;$762 = $761;
         } else {
          break;
         }
        }
       }
      }
      $776 = HEAP32[$__wn>>2]|0;
      $777 = HEAP32[$__wb>>2]|0;
      $778 = ($776|0)==($777|0);
      if ($778) {
       label = 233;
       break L4;
      } else {
       $878 = $884;$__trailing_sign$1 = $__trailing_sign$0355;
      }
      break;
     }
     case 2:  {
      $376 = ($__trailing_sign$0355|0)!=(0|0);
      $377 = ($__p$0353>>>0)<(2);
      $or$cond = $377 | $376;
      if (!($or$cond)) {
       $378 = ($__p$0353|0)==(2);
       $379 = HEAP8[$32>>0]|0;
       $380 = ($379<<24>>24)!=(0);
       $381 = $378 & $380;
       $brmerge = $25 | $381;
       if (!($brmerge)) {
        $878 = $876;$__trailing_sign$1 = 0;
        break L26;
       }
      }
      $382 = HEAP8[$__sym>>0]|0;
      $383 = $382 & 1;
      $384 = ($383<<24>>24)==(0);
      $385 = HEAP32[$26>>2]|0;
      $386 = $384 ? $27 : $385;
      $387 = $386;
      $388 = ($__p$0353|0)==(0);
      L166: do {
       if ($388) {
        $$ph = $387;
       } else {
        $399 = (($__p$0353) + -1)|0;
        $400 = (($__pat) + ($399)|0);
        $401 = HEAP8[$400>>0]|0;
        $switch = ($401&255)<(2);
        if ($switch) {
         $402 = HEAP32[$28>>2]|0;
         $403 = $382&255;
         $404 = $403 >>> 1;
         $405 = $384 ? $404 : $402;
         $406 = (($386) + ($405)|0);
         $407 = HEAP32[$17>>2]|0;
         $408 = ($405|0)==(0);
         L169: do {
          if ($408) {
           $$lcssa = $387;
          } else {
           $410 = $386;$880 = $387;
           while(1) {
            $409 = HEAP8[$410>>0]|0;
            $isascii1$i171 = ($409<<24>>24)>(-1);
            if (!($isascii1$i171)) {
             $$lcssa = $880;
             break L169;
            }
            $411 = $409 << 24 >> 24;
            $412 = (($407) + ($411<<1)|0);
            $413 = HEAP16[$412>>1]|0;
            $414 = $413 & 8192;
            $415 = ($414<<16>>16)==(0);
            if ($415) {
             $$lcssa = $880;
             break L169;
            }
            $416 = ((($410)) + 1|0);
            $417 = $416;
            $418 = ($416|0)==($406|0);
            if ($418) {
             $$lcssa = $417;
             break;
            } else {
             $410 = $416;$880 = $417;
            }
           }
          }
         } while(0);
         $419 = (($$lcssa) - ($387))|0;
         $420 = HEAP8[$__spaces>>0]|0;
         $421 = $420 & 1;
         $422 = ($421<<24>>24)==(0);
         $423 = HEAP32[$29>>2]|0;
         $424 = $420&255;
         $425 = $424 >>> 1;
         $426 = $422 ? $425 : $423;
         $427 = ($426>>>0)<($419>>>0);
         if ($427) {
          $$ph = $387;
         } else {
          $428 = HEAP32[$30>>2]|0;
          $429 = $422 ? $31 : $428;
          $430 = (($429) + ($426)|0);
          $431 = ($$lcssa|0)==($387|0);
          if ($431) {
           $$ph = $$lcssa;
          } else {
           $$sum = (($426) - ($419))|0;
           $432 = (($429) + ($$sum)|0);
           $$in340 = $386;$434 = $432;
           while(1) {
            $433 = HEAP8[$434>>0]|0;
            $435 = HEAP8[$$in340>>0]|0;
            $436 = ($433<<24>>24)==($435<<24>>24);
            if (!($436)) {
             $$ph = $387;
             break L166;
            }
            $437 = ((($434)) + 1|0);
            $438 = ((($$in340)) + 1|0);
            $439 = ($437|0)==($430|0);
            if ($439) {
             $$ph = $$lcssa;
             break;
            } else {
             $$in340 = $438;$434 = $437;
            }
           }
          }
         }
        } else {
         $$ph = $387;
        }
       }
      } while(0);
      $389 = $382 & 1;
      $390 = ($389<<24>>24)==(0);
      $391 = HEAP32[$28>>2]|0;
      $392 = $382&255;
      $393 = $392 >>> 1;
      $394 = $390 ? $27 : $385;
      $395 = $390 ? $393 : $391;
      $396 = (($394) + ($395)|0);
      $397 = $$ph;
      $398 = ($397|0)==($396|0);
      L181: do {
       if ($398) {
        $$lcssa243 = $396;
       } else {
        $$pre$i2$i$i165345 = $877;$456 = $877;$487 = $397;
        while(1) {
         $440 = HEAP32[$__b>>2]|0;
         $441 = ($440|0)==(0|0);
         do {
          if ($441) {
           $454 = 0;
          } else {
           $442 = ((($440)) + 12|0);
           $443 = HEAP32[$442>>2]|0;
           $444 = ((($440)) + 16|0);
           $445 = HEAP32[$444>>2]|0;
           $446 = ($443|0)==($445|0);
           if ($446) {
            $447 = HEAP32[$440>>2]|0;
            $448 = ((($447)) + 36|0);
            $449 = HEAP32[$448>>2]|0;
            __THREW__ = 0;
            $450 = (invoke_ii($449|0,($440|0))|0);
            $451 = __THREW__; __THREW__ = 0;
            $452 = $451&1;
            if ($452) {
             label = 21;
             break L4;
            }
            $453 = ($450|0)==(-1);
            if ($453) {
             HEAP32[$__b>>2] = 0;
             $454 = 0;
             break;
            } else {
             $$pre$i$i$i161 = HEAP32[$__b>>2]|0;
             $454 = $$pre$i$i$i161;
             break;
            }
           } else {
            $454 = $440;
           }
          }
         } while(0);
         $455 = ($454|0)==(0|0);
         $457 = ($456|0)==(0|0);
         do {
          if ($457) {
           $$pre$i2$i$i165269 = $$pre$i2$i$i165345;
           label = 131;
          } else {
           $458 = ((($456)) + 12|0);
           $459 = HEAP32[$458>>2]|0;
           $460 = ((($456)) + 16|0);
           $461 = HEAP32[$460>>2]|0;
           $462 = ($459|0)==($461|0);
           if (!($462)) {
            if ($455) {
             $$pre$i2$i$i165268 = $$pre$i2$i$i165345;$881 = $456;
             break;
            } else {
             $$lcssa243 = $487;
             break L181;
            }
           }
           $463 = HEAP32[$456>>2]|0;
           $464 = ((($463)) + 36|0);
           $465 = HEAP32[$464>>2]|0;
           __THREW__ = 0;
           $466 = (invoke_ii($465|0,($456|0))|0);
           $467 = __THREW__; __THREW__ = 0;
           $468 = $467&1;
           if ($468) {
            label = 21;
            break L4;
           }
           $469 = ($466|0)==(-1);
           if ($469) {
            HEAP32[$__e>>2] = 0;
            $$pre$i2$i$i165269 = 0;
            label = 131;
            break;
           } else {
            $470 = ($$pre$i2$i$i165345|0)==(0|0);
            $tmp$i$i167 = $455 ^ $470;
            if ($tmp$i$i167) {
             $$pre$i2$i$i165268 = $$pre$i2$i$i165345;$881 = $$pre$i2$i$i165345;
             break;
            } else {
             $$lcssa243 = $487;
             break L181;
            }
           }
          }
         } while(0);
         if ((label|0) == 131) {
          label = 0;
          if ($455) {
           $$lcssa243 = $487;
           break L181;
          } else {
           $$pre$i2$i$i165268 = $$pre$i2$i$i165269;$881 = 0;
          }
         }
         $471 = HEAP32[$__b>>2]|0;
         $472 = ((($471)) + 12|0);
         $473 = HEAP32[$472>>2]|0;
         $474 = ((($471)) + 16|0);
         $475 = HEAP32[$474>>2]|0;
         $476 = ($473|0)==($475|0);
         if ($476) {
          $477 = HEAP32[$471>>2]|0;
          $478 = ((($477)) + 36|0);
          $479 = HEAP32[$478>>2]|0;
          __THREW__ = 0;
          $480 = (invoke_ii($479|0,($471|0))|0);
          $481 = __THREW__; __THREW__ = 0;
          $482 = $481&1;
          if ($482) {
           label = 21;
           break L4;
          } else {
           $$0$i$i157 = $480;
          }
         } else {
          $483 = HEAP8[$473>>0]|0;
          $484 = $483&255;
          $$0$i$i157 = $484;
         }
         $485 = $$0$i$i157&255;
         $486 = HEAP8[$487>>0]|0;
         $488 = ($485<<24>>24)==($486<<24>>24);
         if (!($488)) {
          $$lcssa243 = $487;
          break L181;
         }
         $489 = HEAP32[$__b>>2]|0;
         $490 = ((($489)) + 12|0);
         $491 = HEAP32[$490>>2]|0;
         $492 = ((($489)) + 16|0);
         $493 = HEAP32[$492>>2]|0;
         $494 = ($491|0)==($493|0);
         if ($494) {
          $495 = HEAP32[$489>>2]|0;
          $496 = ((($495)) + 40|0);
          $497 = HEAP32[$496>>2]|0;
          __THREW__ = 0;
          (invoke_ii($497|0,($489|0))|0);
          $498 = __THREW__; __THREW__ = 0;
          $499 = $498&1;
          if ($499) {
           label = 21;
           break L4;
          }
         } else {
          $500 = ((($491)) + 1|0);
          HEAP32[$490>>2] = $500;
         }
         $501 = ((($487)) + 1|0);
         $$pre266 = HEAP8[$__sym>>0]|0;
         $$pre267 = HEAP32[$26>>2]|0;
         $502 = $$pre266 & 1;
         $503 = ($502<<24>>24)==(0);
         $504 = HEAP32[$28>>2]|0;
         $505 = $$pre266&255;
         $506 = $505 >>> 1;
         $507 = $503 ? $27 : $$pre267;
         $508 = $503 ? $506 : $504;
         $509 = (($507) + ($508)|0);
         $510 = ($501|0)==($509|0);
         if ($510) {
          $$lcssa243 = $509;
          break;
         } else {
          $$pre$i2$i$i165345 = $$pre$i2$i$i165268;$456 = $881;$487 = $501;
         }
        }
       }
      } while(0);
      if ($25) {
       $511 = HEAP8[$__sym>>0]|0;
       $512 = $511 & 1;
       $513 = ($512<<24>>24)==(0);
       $514 = HEAP32[$26>>2]|0;
       $515 = HEAP32[$28>>2]|0;
       $516 = $511&255;
       $517 = $516 >>> 1;
       $518 = $513 ? $27 : $514;
       $519 = $513 ? $517 : $515;
       $520 = (($518) + ($519)|0);
       $521 = ($$lcssa243|0)==($520|0);
       if ($521) {
        $878 = $876;$__trailing_sign$1 = $__trailing_sign$0355;
       } else {
        label = 143;
        break L4;
       }
      } else {
       $878 = $876;$__trailing_sign$1 = $__trailing_sign$0355;
      }
      break;
     }
     case 3:  {
      $201 = HEAP8[$__psn>>0]|0;
      $202 = $201 & 1;
      $203 = ($202<<24>>24)==(0);
      $204 = HEAP32[$18>>2]|0;
      $205 = $201&255;
      $206 = $205 >>> 1;
      $207 = $203 ? $206 : $204;
      $208 = HEAP8[$__nsn>>0]|0;
      $209 = $208 & 1;
      $210 = ($209<<24>>24)==(0);
      $211 = HEAP32[$19>>2]|0;
      $212 = $208&255;
      $213 = $212 >>> 1;
      $214 = $210 ? $213 : $211;
      $215 = (0 - ($214))|0;
      $216 = ($207|0)==($215|0);
      if ($216) {
       $878 = $876;$__trailing_sign$1 = $__trailing_sign$0355;
      } else {
       $217 = ($207|0)==(0);
       if ($217) {
        $261 = HEAP32[$__b>>2]|0;
        $262 = ((($261)) + 12|0);
        $263 = HEAP32[$262>>2]|0;
        $264 = ((($261)) + 16|0);
        $265 = HEAP32[$264>>2]|0;
        $266 = ($263|0)==($265|0);
        if ($266) {
         $267 = HEAP32[$261>>2]|0;
         $268 = ((($267)) + 36|0);
         $269 = HEAP32[$268>>2]|0;
         __THREW__ = 0;
         $270 = (invoke_ii($269|0,($261|0))|0);
         $271 = __THREW__; __THREW__ = 0;
         $272 = $271&1;
         if ($272) {
          label = 24;
          break L4;
         }
         $$pre277 = HEAP8[$__nsn>>0]|0;
         $$0$i$i114 = $270;$277 = $$pre277;
        } else {
         $273 = HEAP8[$263>>0]|0;
         $274 = $273&255;
         $$0$i$i114 = $274;$277 = $208;
        }
        $275 = $$0$i$i114&255;
        $276 = $277 & 1;
        $278 = ($276<<24>>24)==(0);
        $279 = HEAP32[$20>>2]|0;
        $280 = $278 ? $21 : $279;
        $281 = HEAP8[$280>>0]|0;
        $282 = ($275<<24>>24)==($281<<24>>24);
        if (!($282)) {
         $878 = $876;$__trailing_sign$1 = $__trailing_sign$0355;
         break L26;
        }
        $283 = HEAP32[$__b>>2]|0;
        $284 = ((($283)) + 12|0);
        $285 = HEAP32[$284>>2]|0;
        $286 = ((($283)) + 16|0);
        $287 = HEAP32[$286>>2]|0;
        $288 = ($285|0)==($287|0);
        if ($288) {
         $289 = HEAP32[$283>>2]|0;
         $290 = ((($289)) + 40|0);
         $291 = HEAP32[$290>>2]|0;
         __THREW__ = 0;
         (invoke_ii($291|0,($283|0))|0);
         $292 = __THREW__; __THREW__ = 0;
         $293 = $292&1;
         if ($293) {
          label = 24;
          break L4;
         }
        } else {
         $294 = ((($285)) + 1|0);
         HEAP32[$284>>2] = $294;
        }
        HEAP8[$__neg>>0] = 1;
        $295 = HEAP8[$__nsn>>0]|0;
        $296 = $295 & 1;
        $297 = ($296<<24>>24)==(0);
        $298 = HEAP32[$19>>2]|0;
        $299 = $295&255;
        $300 = $299 >>> 1;
        $301 = $297 ? $300 : $298;
        $302 = ($301>>>0)>(1);
        $__nsn$__trailing_sign$0 = $302 ? $__nsn : $__trailing_sign$0355;
        $878 = $876;$__trailing_sign$1 = $__nsn$__trailing_sign$0;
        break L26;
       }
       $218 = ($214|0)==(0);
       $219 = HEAP32[$__b>>2]|0;
       $220 = ((($219)) + 12|0);
       $221 = HEAP32[$220>>2]|0;
       $222 = ((($219)) + 16|0);
       $223 = HEAP32[$222>>2]|0;
       $224 = ($221|0)==($223|0);
       if ($218) {
        if ($224) {
         $225 = HEAP32[$219>>2]|0;
         $226 = ((($225)) + 36|0);
         $227 = HEAP32[$226>>2]|0;
         __THREW__ = 0;
         $228 = (invoke_ii($227|0,($219|0))|0);
         $229 = __THREW__; __THREW__ = 0;
         $230 = $229&1;
         if ($230) {
          label = 24;
          break L4;
         }
         $$pre276 = HEAP8[$__psn>>0]|0;
         $$0$i$i94 = $228;$235 = $$pre276;
        } else {
         $231 = HEAP8[$221>>0]|0;
         $232 = $231&255;
         $$0$i$i94 = $232;$235 = $201;
        }
        $233 = $$0$i$i94&255;
        $234 = $235 & 1;
        $236 = ($234<<24>>24)==(0);
        $237 = HEAP32[$22>>2]|0;
        $238 = $236 ? $23 : $237;
        $239 = HEAP8[$238>>0]|0;
        $240 = ($233<<24>>24)==($239<<24>>24);
        if (!($240)) {
         HEAP8[$__neg>>0] = 1;
         $878 = $876;$__trailing_sign$1 = $__trailing_sign$0355;
         break L26;
        }
        $241 = HEAP32[$__b>>2]|0;
        $242 = ((($241)) + 12|0);
        $243 = HEAP32[$242>>2]|0;
        $244 = ((($241)) + 16|0);
        $245 = HEAP32[$244>>2]|0;
        $246 = ($243|0)==($245|0);
        if ($246) {
         $247 = HEAP32[$241>>2]|0;
         $248 = ((($247)) + 40|0);
         $249 = HEAP32[$248>>2]|0;
         __THREW__ = 0;
         (invoke_ii($249|0,($241|0))|0);
         $250 = __THREW__; __THREW__ = 0;
         $251 = $250&1;
         if ($251) {
          label = 24;
          break L4;
         }
        } else {
         $252 = ((($243)) + 1|0);
         HEAP32[$242>>2] = $252;
        }
        $253 = HEAP8[$__psn>>0]|0;
        $254 = $253 & 1;
        $255 = ($254<<24>>24)==(0);
        $256 = HEAP32[$18>>2]|0;
        $257 = $253&255;
        $258 = $257 >>> 1;
        $259 = $255 ? $258 : $256;
        $260 = ($259>>>0)>(1);
        $__psn$__trailing_sign$0 = $260 ? $__psn : $__trailing_sign$0355;
        $878 = $876;$__trailing_sign$1 = $__psn$__trailing_sign$0;
        break L26;
       }
       if ($224) {
        $303 = HEAP32[$219>>2]|0;
        $304 = ((($303)) + 36|0);
        $305 = HEAP32[$304>>2]|0;
        __THREW__ = 0;
        $306 = (invoke_ii($305|0,($219|0))|0);
        $307 = __THREW__; __THREW__ = 0;
        $308 = $307&1;
        if ($308) {
         label = 24;
         break L4;
        }
        $$pre271 = HEAP8[$__psn>>0]|0;
        $$pre272 = HEAP32[$__b>>2]|0;
        $$phi$trans$insert = ((($$pre272)) + 12|0);
        $$pre273 = HEAP32[$$phi$trans$insert>>2]|0;
        $$phi$trans$insert274 = ((($$pre272)) + 16|0);
        $$pre275 = HEAP32[$$phi$trans$insert274>>2]|0;
        $$0$i$i121 = $306;$313 = $$pre271;$320 = $$pre272;$321 = $$pre273;$323 = $$pre275;
       } else {
        $309 = HEAP8[$221>>0]|0;
        $310 = $309&255;
        $$0$i$i121 = $310;$313 = $201;$320 = $219;$321 = $221;$323 = $223;
       }
       $311 = $$0$i$i121&255;
       $312 = $313 & 1;
       $314 = ($312<<24>>24)==(0);
       $315 = HEAP32[$22>>2]|0;
       $316 = $314 ? $23 : $315;
       $317 = HEAP8[$316>>0]|0;
       $318 = ($311<<24>>24)==($317<<24>>24);
       $319 = ((($320)) + 12|0);
       $322 = ($321|0)==($323|0);
       if ($318) {
        if ($322) {
         $324 = HEAP32[$320>>2]|0;
         $325 = ((($324)) + 40|0);
         $326 = HEAP32[$325>>2]|0;
         __THREW__ = 0;
         (invoke_ii($326|0,($320|0))|0);
         $327 = __THREW__; __THREW__ = 0;
         $328 = $327&1;
         if ($328) {
          label = 24;
          break L4;
         }
        } else {
         $329 = ((($321)) + 1|0);
         HEAP32[$319>>2] = $329;
        }
        $330 = HEAP8[$__psn>>0]|0;
        $331 = $330 & 1;
        $332 = ($331<<24>>24)==(0);
        $333 = HEAP32[$18>>2]|0;
        $334 = $330&255;
        $335 = $334 >>> 1;
        $336 = $332 ? $335 : $333;
        $337 = ($336>>>0)>(1);
        $__psn$__trailing_sign$010 = $337 ? $__psn : $__trailing_sign$0355;
        $878 = $876;$__trailing_sign$1 = $__psn$__trailing_sign$010;
        break L26;
       }
       if ($322) {
        $338 = HEAP32[$320>>2]|0;
        $339 = ((($338)) + 36|0);
        $340 = HEAP32[$339>>2]|0;
        __THREW__ = 0;
        $341 = (invoke_ii($340|0,($320|0))|0);
        $342 = __THREW__; __THREW__ = 0;
        $343 = $342&1;
        if ($343) {
         label = 24;
         break L4;
        } else {
         $$0$i$i130 = $341;
        }
       } else {
        $344 = HEAP8[$321>>0]|0;
        $345 = $344&255;
        $$0$i$i130 = $345;
       }
       $346 = $$0$i$i130&255;
       $347 = HEAP8[$__nsn>>0]|0;
       $348 = $347 & 1;
       $349 = ($348<<24>>24)==(0);
       $350 = HEAP32[$20>>2]|0;
       $351 = $349 ? $21 : $350;
       $352 = HEAP8[$351>>0]|0;
       $353 = ($346<<24>>24)==($352<<24>>24);
       if (!($353)) {
        label = 104;
        break L4;
       }
       $354 = HEAP32[$__b>>2]|0;
       $355 = ((($354)) + 12|0);
       $356 = HEAP32[$355>>2]|0;
       $357 = ((($354)) + 16|0);
       $358 = HEAP32[$357>>2]|0;
       $359 = ($356|0)==($358|0);
       if ($359) {
        $360 = HEAP32[$354>>2]|0;
        $361 = ((($360)) + 40|0);
        $362 = HEAP32[$361>>2]|0;
        __THREW__ = 0;
        (invoke_ii($362|0,($354|0))|0);
        $363 = __THREW__; __THREW__ = 0;
        $364 = $363&1;
        if ($364) {
         label = 24;
         break L4;
        }
       } else {
        $365 = ((($356)) + 1|0);
        HEAP32[$355>>2] = $365;
       }
       HEAP8[$__neg>>0] = 1;
       $366 = HEAP8[$__nsn>>0]|0;
       $367 = $366 & 1;
       $368 = ($367<<24>>24)==(0);
       $369 = HEAP32[$19>>2]|0;
       $370 = $366&255;
       $371 = $370 >>> 1;
       $372 = $368 ? $371 : $369;
       $373 = ($372>>>0)>(1);
       $__nsn$__trailing_sign$011 = $373 ? $__nsn : $__trailing_sign$0355;
       $878 = $876;$__trailing_sign$1 = $__nsn$__trailing_sign$011;
      }
      break;
     }
     default: {
      $878 = $876;$__trailing_sign$1 = $__trailing_sign$0355;
     }
     }
    } while(0);
    L266: do {
     if ((label|0) == 42) {
      while(1) {
       label = 0;
       $131 = HEAP32[$__b>>2]|0;
       $132 = ($131|0)==(0|0);
       do {
        if ($132) {
         $145 = 0;
        } else {
         $133 = ((($131)) + 12|0);
         $134 = HEAP32[$133>>2]|0;
         $135 = ((($131)) + 16|0);
         $136 = HEAP32[$135>>2]|0;
         $137 = ($134|0)==($136|0);
         if ($137) {
          $138 = HEAP32[$131>>2]|0;
          $139 = ((($138)) + 36|0);
          $140 = HEAP32[$139>>2]|0;
          __THREW__ = 0;
          $141 = (invoke_ii($140|0,($131|0))|0);
          $142 = __THREW__; __THREW__ = 0;
          $143 = $142&1;
          if ($143) {
           label = 20;
           break L4;
          }
          $144 = ($141|0)==(-1);
          if ($144) {
           HEAP32[$__b>>2] = 0;
           $145 = 0;
           break;
          } else {
           $$pre$i$i$i48 = HEAP32[$__b>>2]|0;
           $145 = $$pre$i$i$i48;
           break;
          }
         } else {
          $145 = $131;
         }
        }
       } while(0);
       $146 = ($145|0)==(0|0);
       $148 = ($147|0)==(0|0);
       do {
        if ($148) {
         $$pre$i2$i$i52278 = $$pre$i2$i$i52;
         label = 54;
        } else {
         $149 = ((($147)) + 12|0);
         $150 = HEAP32[$149>>2]|0;
         $151 = ((($147)) + 16|0);
         $152 = HEAP32[$151>>2]|0;
         $153 = ($150|0)==($152|0);
         if (!($153)) {
          if ($146) {
           $$pre$i2$i$i52280 = $$pre$i2$i$i52;$879 = $147;
           break;
          } else {
           $878 = $876;$__trailing_sign$1 = $__trailing_sign$0355;
           break L266;
          }
         }
         $154 = HEAP32[$147>>2]|0;
         $155 = ((($154)) + 36|0);
         $156 = HEAP32[$155>>2]|0;
         __THREW__ = 0;
         $157 = (invoke_ii($156|0,($147|0))|0);
         $158 = __THREW__; __THREW__ = 0;
         $159 = $158&1;
         if ($159) {
          label = 20;
          break L4;
         }
         $160 = ($157|0)==(-1);
         if ($160) {
          HEAP32[$__e>>2] = 0;
          $$pre$i2$i$i52278 = 0;
          label = 54;
          break;
         } else {
          $161 = ($$pre$i2$i$i52|0)==(0|0);
          $tmp$i$i54 = $146 ^ $161;
          if ($tmp$i$i54) {
           $$pre$i2$i$i52280 = $$pre$i2$i$i52;$879 = $$pre$i2$i$i52;
           break;
          } else {
           $878 = $876;$__trailing_sign$1 = $__trailing_sign$0355;
           break L266;
          }
         }
        }
       } while(0);
       if ((label|0) == 54) {
        label = 0;
        if ($146) {
         $878 = $876;$__trailing_sign$1 = $__trailing_sign$0355;
         break L266;
        } else {
         $$pre$i2$i$i52280 = $$pre$i2$i$i52278;$879 = 0;
        }
       }
       $162 = HEAP32[$__b>>2]|0;
       $163 = ((($162)) + 12|0);
       $164 = HEAP32[$163>>2]|0;
       $165 = ((($162)) + 16|0);
       $166 = HEAP32[$165>>2]|0;
       $167 = ($164|0)==($166|0);
       if ($167) {
        $168 = HEAP32[$162>>2]|0;
        $169 = ((($168)) + 36|0);
        $170 = HEAP32[$169>>2]|0;
        __THREW__ = 0;
        $171 = (invoke_ii($170|0,($162|0))|0);
        $172 = __THREW__; __THREW__ = 0;
        $173 = $172&1;
        if ($173) {
         label = 20;
         break L4;
        } else {
         $$0$i$i58 = $171;
        }
       } else {
        $174 = HEAP8[$164>>0]|0;
        $175 = $174&255;
        $$0$i$i58 = $175;
       }
       $176 = $$0$i$i58&255;
       $isascii1$i61 = ($176<<24>>24)>(-1);
       if (!($isascii1$i61)) {
        $878 = $876;$__trailing_sign$1 = $__trailing_sign$0355;
        break L266;
       }
       $sext211 = $$0$i$i58 << 24;
       $177 = $sext211 >> 24;
       $178 = HEAP32[$17>>2]|0;
       $179 = (($178) + ($177<<1)|0);
       $180 = HEAP16[$179>>1]|0;
       $181 = $180 & 8192;
       $182 = ($181<<16>>16)==(0);
       if ($182) {
        $878 = $876;$__trailing_sign$1 = $__trailing_sign$0355;
        break L266;
       }
       $183 = HEAP32[$__b>>2]|0;
       $184 = ((($183)) + 12|0);
       $185 = HEAP32[$184>>2]|0;
       $186 = ((($183)) + 16|0);
       $187 = HEAP32[$186>>2]|0;
       $188 = ($185|0)==($187|0);
       if ($188) {
        $189 = HEAP32[$183>>2]|0;
        $190 = ((($189)) + 40|0);
        $191 = HEAP32[$190>>2]|0;
        __THREW__ = 0;
        $192 = (invoke_ii($191|0,($183|0))|0);
        $193 = __THREW__; __THREW__ = 0;
        $194 = $193&1;
        if ($194) {
         label = 20;
         break L4;
        } else {
         $$0$i$i65 = $192;
        }
       } else {
        $195 = ((($185)) + 1|0);
        HEAP32[$184>>2] = $195;
        $196 = HEAP8[$185>>0]|0;
        $197 = $196&255;
        $$0$i$i65 = $197;
       }
       $198 = $$0$i$i65&255;
       __THREW__ = 0;
       invoke_vii(425,($__spaces|0),($198|0));
       $199 = __THREW__; __THREW__ = 0;
       $200 = $199&1;
       if ($200) {
        label = 20;
        break L4;
       } else {
        $$pre$i2$i$i52 = $$pre$i2$i$i52280;$147 = $879;
        label = 42;
       }
      }
     }
    } while(0);
    $781 = (($__p$0353) + 1)|0;
    $782 = ($781>>>0)<(4);
    if ($782) {
     $876 = $878;$__p$0353 = $781;$__trailing_sign$0355 = $__trailing_sign$1;
    } else {
     $$lcssa313 = $878;$__trailing_sign$0$lcssa = $__trailing_sign$1;
     label = 235;
     break;
    }
   }
   L300:    switch (label|0) {
    case 20: {
     $70 = ___cxa_find_matching_catch()|0;
     $71 = tempRet0;
     $lpad$phi$index = $70;$lpad$phi$index7 = $71;
     break L1;
     break;
    }
    case 21: {
     $72 = ___cxa_find_matching_catch()|0;
     $73 = tempRet0;
     $lpad$phi$index = $72;$lpad$phi$index7 = $73;
     break L1;
     break;
    }
    case 22: {
     $74 = ___cxa_find_matching_catch()|0;
     $75 = tempRet0;
     $lpad$phi$index = $74;$lpad$phi$index7 = $75;
     break L1;
     break;
    }
    case 23: {
     $76 = ___cxa_find_matching_catch()|0;
     $77 = tempRet0;
     $lpad$phi$index = $76;$lpad$phi$index7 = $77;
     break L1;
     break;
    }
    case 24: {
     $78 = ___cxa_find_matching_catch()|0;
     $79 = tempRet0;
     $lpad$phi$index = $78;$lpad$phi$index7 = $79;
     break L1;
     break;
    }
    case 40: {
     $128 = HEAP32[$__err>>2]|0;
     $129 = $128 | 4;
     HEAP32[$__err>>2] = $129;
     $$0 = 0;
     break;
    }
    case 104: {
     $374 = HEAP32[$__err>>2]|0;
     $375 = $374 | 4;
     HEAP32[$__err>>2] = $375;
     $$0 = 0;
     break;
    }
    case 143: {
     $522 = HEAP32[$__err>>2]|0;
     $523 = $522 | 4;
     HEAP32[$__err>>2] = $523;
     $$0 = 0;
     break;
    }
    case 198: {
     $670 = HEAP32[$__err>>2]|0;
     $671 = $670 | 4;
     HEAP32[$__err>>2] = $671;
     $$0 = 0;
     break;
    }
    case 222: {
     $737 = HEAP32[$__err>>2]|0;
     $738 = $737 | 4;
     HEAP32[$__err>>2] = $738;
     $$0 = 0;
     break;
    }
    case 233: {
     $779 = HEAP32[$__err>>2]|0;
     $780 = $779 | 4;
     HEAP32[$__err>>2] = $780;
     $$0 = 0;
     break;
    }
    case 235: {
     $783 = ($__trailing_sign$0$lcssa|0)==(0|0);
     L310: do {
      if (!($783)) {
       $784 = ((($__trailing_sign$0$lcssa)) + 1|0);
       $785 = ((($__trailing_sign$0$lcssa)) + 8|0);
       $786 = ((($__trailing_sign$0$lcssa)) + 4|0);
       $__i$0 = 1;
       L312: while(1) {
        $787 = HEAP8[$__trailing_sign$0$lcssa>>0]|0;
        $788 = $787 & 1;
        $789 = ($788<<24>>24)==(0);
        if ($789) {
         $791 = $787&255;
         $792 = $791 >>> 1;
         $794 = $792;
        } else {
         $790 = HEAP32[$786>>2]|0;
         $794 = $790;
        }
        $793 = ($__i$0>>>0)<($794>>>0);
        if (!($793)) {
         break L310;
        }
        $795 = HEAP32[$__b>>2]|0;
        $796 = ($795|0)==(0|0);
        do {
         if ($796) {
          $809 = 0;
         } else {
          $797 = ((($795)) + 12|0);
          $798 = HEAP32[$797>>2]|0;
          $799 = ((($795)) + 16|0);
          $800 = HEAP32[$799>>2]|0;
          $801 = ($798|0)==($800|0);
          if ($801) {
           $802 = HEAP32[$795>>2]|0;
           $803 = ((($802)) + 36|0);
           $804 = HEAP32[$803>>2]|0;
           __THREW__ = 0;
           $805 = (invoke_ii($804|0,($795|0))|0);
           $806 = __THREW__; __THREW__ = 0;
           $807 = $806&1;
           if ($807) {
            label = 19;
            break L312;
           }
           $808 = ($805|0)==(-1);
           if ($808) {
            HEAP32[$__b>>2] = 0;
            $809 = 0;
            break;
           } else {
            $$pre$i$i$i = HEAP32[$__b>>2]|0;
            $809 = $$pre$i$i$i;
            break;
           }
          } else {
           $809 = $795;
          }
         }
        } while(0);
        $810 = ($809|0)==(0|0);
        $811 = HEAP32[$__e>>2]|0;
        $812 = ($811|0)==(0|0);
        do {
         if ($812) {
          label = 253;
         } else {
          $813 = ((($811)) + 12|0);
          $814 = HEAP32[$813>>2]|0;
          $815 = ((($811)) + 16|0);
          $816 = HEAP32[$815>>2]|0;
          $817 = ($814|0)==($816|0);
          if ($817) {
           $818 = HEAP32[$811>>2]|0;
           $819 = ((($818)) + 36|0);
           $820 = HEAP32[$819>>2]|0;
           __THREW__ = 0;
           $821 = (invoke_ii($820|0,($811|0))|0);
           $822 = __THREW__; __THREW__ = 0;
           $823 = $822&1;
           if ($823) {
            label = 19;
            break L312;
           }
           $824 = ($821|0)==(-1);
           if ($824) {
            HEAP32[$__e>>2] = 0;
            label = 253;
            break;
           }
          }
          if (!($810)) {
           label = 260;
           break L312;
          }
         }
        } while(0);
        if ((label|0) == 253) {
         label = 0;
         if ($810) {
          label = 260;
          break;
         }
        }
        $825 = HEAP32[$__b>>2]|0;
        $826 = ((($825)) + 12|0);
        $827 = HEAP32[$826>>2]|0;
        $828 = ((($825)) + 16|0);
        $829 = HEAP32[$828>>2]|0;
        $830 = ($827|0)==($829|0);
        if ($830) {
         $831 = HEAP32[$825>>2]|0;
         $832 = ((($831)) + 36|0);
         $833 = HEAP32[$832>>2]|0;
         __THREW__ = 0;
         $834 = (invoke_ii($833|0,($825|0))|0);
         $835 = __THREW__; __THREW__ = 0;
         $836 = $835&1;
         if ($836) {
          label = 19;
          break;
         } else {
          $$0$i$i = $834;
         }
        } else {
         $837 = HEAP8[$827>>0]|0;
         $838 = $837&255;
         $$0$i$i = $838;
        }
        $839 = $$0$i$i&255;
        $840 = HEAP8[$__trailing_sign$0$lcssa>>0]|0;
        $841 = $840 & 1;
        $842 = ($841<<24>>24)==(0);
        if ($842) {
         $845 = $784;
        } else {
         $843 = HEAP32[$785>>2]|0;
         $845 = $843;
        }
        $844 = (($845) + ($__i$0)|0);
        $846 = HEAP8[$844>>0]|0;
        $847 = ($839<<24>>24)==($846<<24>>24);
        if (!($847)) {
         label = 260;
         break;
        }
        $850 = (($__i$0) + 1)|0;
        $851 = HEAP32[$__b>>2]|0;
        $852 = ((($851)) + 12|0);
        $853 = HEAP32[$852>>2]|0;
        $854 = ((($851)) + 16|0);
        $855 = HEAP32[$854>>2]|0;
        $856 = ($853|0)==($855|0);
        if ($856) {
         $857 = HEAP32[$851>>2]|0;
         $858 = ((($857)) + 40|0);
         $859 = HEAP32[$858>>2]|0;
         __THREW__ = 0;
         (invoke_ii($859|0,($851|0))|0);
         $860 = __THREW__; __THREW__ = 0;
         $861 = $860&1;
         if ($861) {
          label = 19;
          break;
         } else {
          $__i$0 = $850;
          continue;
         }
        } else {
         $862 = ((($853)) + 1|0);
         HEAP32[$852>>2] = $862;
         $__i$0 = $850;
         continue;
        }
       }
       if ((label|0) == 19) {
        $68 = ___cxa_find_matching_catch()|0;
        $69 = tempRet0;
        $lpad$phi$index = $68;$lpad$phi$index7 = $69;
        break L1;
       }
       else if ((label|0) == 260) {
        $848 = HEAP32[$__err>>2]|0;
        $849 = $848 | 4;
        HEAP32[$__err>>2] = $849;
        $$0 = 0;
        break L300;
       }
      }
     } while(0);
     $863 = HEAP32[$__gb>>2]|0;
     $864 = ($863|0)==($$lcssa313|0);
     if ($864) {
      $$0 = 1;
     } else {
      HEAP32[$__et>>2] = 0;
      __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grp,$863,$$lcssa313,$__et);
      $865 = HEAP32[$__et>>2]|0;
      $866 = ($865|0)==(0);
      if ($866) {
       $$0 = 1;
      } else {
       $867 = HEAP32[$__err>>2]|0;
       $868 = $867 | 4;
       HEAP32[$__err>>2] = $868;
       $$0 = 0;
      }
     }
     break;
    }
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__spaces);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nsn);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__psn);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
   $869 = HEAP32[$__gb>>2]|0;
   HEAP32[$__gb>>2] = 0;
   $870 = ($869|0)==(0|0);
   if (!($870)) {
    $871 = HEAP32[$2>>2]|0;
    __THREW__ = 0;
    invoke_vi($871|0,($869|0));
    $872 = __THREW__; __THREW__ = 0;
    $873 = $872&1;
    if ($873) {
     $874 = ___cxa_find_matching_catch(0|0)|0;
     $875 = tempRet0;
     ___clang_call_terminate($874);
     // unreachable;
    }
   }
   STACKTOP = sp;return ($$0|0);
  }
 } while(0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__spaces);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nsn);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__psn);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
 $82 = HEAP32[$__gb>>2]|0;
 HEAP32[$__gb>>2] = 0;
 $83 = ($82|0)==(0|0);
 if (!($83)) {
  $84 = HEAP32[$2>>2]|0;
  __THREW__ = 0;
  invoke_vi($84|0,($82|0));
  $85 = __THREW__; __THREW__ = 0;
  $86 = $85&1;
  if ($86) {
   $87 = ___cxa_find_matching_catch(0|0)|0;
   $88 = tempRet0;
   ___clang_call_terminate($87);
   // unreachable;
  }
 }
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__121__throw_runtime_errorEPKc($msg) {
 $msg = $msg|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___cxa_allocate_exception(8)|0);
 __THREW__ = 0;
 invoke_vii(362,($0|0),($msg|0));
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $3 = ___cxa_find_matching_catch()|0;
  $4 = tempRet0;
  ___cxa_free_exception(($0|0));
  ___resumeException($3|0);
  // unreachable;
 } else {
  ___cxa_throw(($0|0),(2056|0),(62|0));
  // unreachable;
 }
}
function __ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE($this,$__b,$__e,$__intl,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$011 = 0, $$0110 = 0, $$012 = 0, $$019 = 0, $$byval_copy = 0, $$pre = 0, $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__loc = 0, $__neg = 0, $__w$0$lcssa = 0, $__w$013 = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 24|0;
 $__wbuf = sp + 32|0;
 $__wb = sp + 16|0;
 $__wn = sp + 8|0;
 $__loc = sp + 4|0;
 $__neg = sp + 28|0;
 $0 = sp;
 $1 = $__wbuf;
 HEAP32[$__wb>>2] = $1;
 $2 = ((($__wb)) + 4|0);
 HEAP32[$2>>2] = (473);
 $3 = ((($__wbuf)) + 100|0);
 __THREW__ = 0;
 $4 = (invoke_ii(455,($__iob|0))|0);
 $5 = __THREW__; __THREW__ = 0;
 $6 = $5&1;
 if ($6) {
  $34 = ___cxa_find_matching_catch()|0;
  $35 = tempRet0;
  HEAP32[$__wb>>2] = 0;
  $$011 = $34;$$019 = $35;$96 = $__wbuf;
  label = 36;
 } else {
  HEAP32[$__loc>>2] = $4;
  __THREW__ = 0;
  $7 = (invoke_iii(452,($__loc|0),(6760|0))|0);
  $8 = __THREW__; __THREW__ = 0;
  $9 = $8&1;
  L3: do {
   if (!($9)) {
    HEAP8[$__neg>>0] = 0;
    $10 = HEAP32[$__e>>2]|0;
    HEAP32[$0>>2] = $10;
    $11 = ((($__iob)) + 4|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = $10;
    __THREW__ = 0;
    ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
    $14 = (invoke_iiiiiiiiiiii(474,($__b|0),($$byval_copy|0),($__intl|0),($__loc|0),($12|0),($__err|0),($__neg|0),($7|0),($__wb|0),($__wn|0),($3|0))|0);
    $15 = __THREW__; __THREW__ = 0;
    $16 = $15&1;
    if (!($16)) {
     if ($14) {
      $17 = HEAP8[$__v>>0]|0;
      $18 = $17 & 1;
      $19 = ($18<<24>>24)==(0);
      if ($19) {
       $23 = ((($__v)) + 1|0);
       HEAP8[$23>>0] = 0;
       HEAP8[$__v>>0] = 0;
      } else {
       $20 = ((($__v)) + 8|0);
       $21 = HEAP32[$20>>2]|0;
       HEAP8[$21>>0] = 0;
       $22 = ((($__v)) + 4|0);
       HEAP32[$22>>2] = 0;
      }
      $24 = HEAP8[$__neg>>0]|0;
      $25 = ($24<<24>>24)==(0);
      if (!($25)) {
       $26 = HEAP32[$7>>2]|0;
       $27 = ((($26)) + 28|0);
       $28 = HEAP32[$27>>2]|0;
       __THREW__ = 0;
       $29 = (invoke_iii($28|0,($7|0),45)|0);
       $30 = __THREW__; __THREW__ = 0;
       $31 = $30&1;
       if ($31) {
        break;
       }
       __THREW__ = 0;
       invoke_vii(425,($__v|0),($29|0));
       $32 = __THREW__; __THREW__ = 0;
       $33 = $32&1;
       if ($33) {
        break;
       }
      }
      $36 = HEAP32[$7>>2]|0;
      $37 = ((($36)) + 28|0);
      $38 = HEAP32[$37>>2]|0;
      __THREW__ = 0;
      $39 = (invoke_iii($38|0,($7|0),48)|0);
      $40 = __THREW__; __THREW__ = 0;
      $41 = $40&1;
      if ($41) {
       break;
      }
      $42 = HEAP32[$__wb>>2]|0;
      $43 = HEAP32[$__wn>>2]|0;
      $44 = ((($43)) + -1|0);
      $45 = ($42>>>0)<($44>>>0);
      L17: do {
       if ($45) {
        $__w$013 = $42;
        while(1) {
         $46 = HEAP8[$__w$013>>0]|0;
         $47 = ($46<<24>>24)==($39<<24>>24);
         if (!($47)) {
          $__w$0$lcssa = $__w$013;
          break L17;
         }
         $48 = ((($__w$013)) + 1|0);
         $49 = ($48>>>0)<($44>>>0);
         if ($49) {
          $__w$013 = $48;
         } else {
          $__w$0$lcssa = $48;
          break;
         }
        }
       } else {
        $__w$0$lcssa = $42;
       }
      } while(0);
      __THREW__ = 0;
      (invoke_iiii(479,($__v|0),($__w$0$lcssa|0),($43|0))|0);
      $50 = __THREW__; __THREW__ = 0;
      $51 = $50&1;
      if ($51) {
       break;
      }
     }
     $52 = HEAP32[$__b>>2]|0;
     $53 = ($52|0)==(0|0);
     do {
      if ($53) {
       $66 = 0;
      } else {
       $54 = ((($52)) + 12|0);
       $55 = HEAP32[$54>>2]|0;
       $56 = ((($52)) + 16|0);
       $57 = HEAP32[$56>>2]|0;
       $58 = ($55|0)==($57|0);
       if ($58) {
        $59 = HEAP32[$52>>2]|0;
        $60 = ((($59)) + 36|0);
        $61 = HEAP32[$60>>2]|0;
        __THREW__ = 0;
        $62 = (invoke_ii($61|0,($52|0))|0);
        $63 = __THREW__; __THREW__ = 0;
        $64 = $63&1;
        if ($64) {
         break L3;
        }
        $65 = ($62|0)==(-1);
        if ($65) {
         HEAP32[$__b>>2] = 0;
         $66 = 0;
         break;
        } else {
         $$pre$i$i$i = HEAP32[$__b>>2]|0;
         $66 = $$pre$i$i$i;
         break;
        }
       } else {
        $66 = $52;
       }
      }
     } while(0);
     $67 = ($66|0)==(0|0);
     $68 = ($10|0)==(0);
     do {
      if ($68) {
       label = 29;
      } else {
       $69 = ((($13)) + 12|0);
       $70 = HEAP32[$69>>2]|0;
       $71 = ((($13)) + 16|0);
       $72 = HEAP32[$71>>2]|0;
       $73 = ($70|0)==($72|0);
       if ($73) {
        $74 = $10;
        $75 = HEAP32[$74>>2]|0;
        $76 = ((($75)) + 36|0);
        $77 = HEAP32[$76>>2]|0;
        __THREW__ = 0;
        $78 = (invoke_ii($77|0,($13|0))|0);
        $79 = __THREW__; __THREW__ = 0;
        $80 = $79&1;
        if ($80) {
         break L3;
        }
        $81 = ($78|0)==(-1);
        if ($81) {
         HEAP32[$__e>>2] = 0;
         label = 29;
         break;
        }
       }
       if (!($67)) {
        label = 30;
       }
      }
     } while(0);
     if ((label|0) == 29) {
      if ($67) {
       label = 30;
      }
     }
     if ((label|0) == 30) {
      $82 = HEAP32[$__err>>2]|0;
      $83 = $82 | 2;
      HEAP32[$__err>>2] = $83;
     }
     $84 = HEAP32[$__b>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($4)|0);
     $85 = HEAP32[$__wb>>2]|0;
     HEAP32[$__wb>>2] = 0;
     $86 = ($85|0)==(0|0);
     if (!($86)) {
      $87 = HEAP32[$2>>2]|0;
      __THREW__ = 0;
      invoke_vi($87|0,($85|0));
      $88 = __THREW__; __THREW__ = 0;
      $89 = $88&1;
      if ($89) {
       $90 = ___cxa_find_matching_catch(0|0)|0;
       $91 = tempRet0;
       ___clang_call_terminate($90);
       // unreachable;
      }
     }
     STACKTOP = sp;return ($84|0);
    }
   }
  } while(0);
  $92 = ___cxa_find_matching_catch()|0;
  $93 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($4)|0);
  $$pre = HEAP32[$__wb>>2]|0;
  HEAP32[$__wb>>2] = 0;
  $94 = ($$pre|0)==(0|0);
  if ($94) {
   $$0110 = $93;$$012 = $92;
  } else {
   $$011 = $92;$$019 = $93;$96 = $$pre;
   label = 36;
  }
 }
 if ((label|0) == 36) {
  $95 = HEAP32[$2>>2]|0;
  __THREW__ = 0;
  invoke_vi($95|0,($96|0));
  $97 = __THREW__; __THREW__ = 0;
  $98 = $97&1;
  if ($98) {
   $99 = ___cxa_find_matching_catch(0|0)|0;
   $100 = tempRet0;
   ___clang_call_terminate($99);
   // unreachable;
  } else {
   $$0110 = $$019;$$012 = $$011;
  }
 }
 ___resumeException($$012|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__111__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri($__intl,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__psn,$__nsn,$__fd) {
 $__intl = $__intl|0;
 $__loc = $__loc|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__psn = $__psn|0;
 $__nsn = $__nsn|0;
 $__fd = $__fd|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 100|0;
 $1 = sp + 88|0;
 $2 = sp + 76|0;
 $3 = sp + 64|0;
 $4 = sp + 52|0;
 $5 = sp + 48|0;
 $6 = sp + 36|0;
 $7 = sp + 24|0;
 $8 = sp + 12|0;
 $9 = sp;
 do {
  if ($__intl) {
   $10 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6344)|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = ((($11)) + 44|0);
   $13 = HEAP32[$12>>2]|0;
   FUNCTION_TABLE_vii[$13 & 1023]($0,$10);
   $14 = HEAP32[$0>>2]|0;
   HEAP8[$__pat>>0]=$14&255;HEAP8[$__pat+1>>0]=($14>>8)&255;HEAP8[$__pat+2>>0]=($14>>16)&255;HEAP8[$__pat+3>>0]=$14>>24;
   $15 = HEAP32[$10>>2]|0;
   $16 = ((($15)) + 32|0);
   $17 = HEAP32[$16>>2]|0;
   FUNCTION_TABLE_vii[$17 & 1023]($1,$10);
   $18 = HEAP8[$__nsn>>0]|0;
   $19 = $18 & 1;
   $20 = ($19<<24>>24)==(0);
   if ($20) {
    $24 = ((($__nsn)) + 1|0);
    HEAP8[$24>>0] = 0;
    HEAP8[$__nsn>>0] = 0;
   } else {
    $21 = ((($__nsn)) + 8|0);
    $22 = HEAP32[$21>>2]|0;
    HEAP8[$22>>0] = 0;
    $23 = ((($__nsn)) + 4|0);
    HEAP32[$23>>2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(480,($__nsn|0),0);
   $25 = __THREW__; __THREW__ = 0;
   $26 = $25&1;
   if ($26) {
    $27 = ___cxa_find_matching_catch(0|0)|0;
    $28 = tempRet0;
    ___clang_call_terminate($27);
    // unreachable;
   }
   ;HEAP32[$__nsn>>2]=HEAP32[$1>>2]|0;HEAP32[$__nsn+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$__nsn+8>>2]=HEAP32[$1+8>>2]|0;
   HEAP32[$1>>2] = 0;
   $29 = ((($1)) + 4|0);
   HEAP32[$29>>2] = 0;
   $30 = ((($1)) + 8|0);
   HEAP32[$30>>2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
   $31 = HEAP32[$10>>2]|0;
   $32 = ((($31)) + 28|0);
   $33 = HEAP32[$32>>2]|0;
   FUNCTION_TABLE_vii[$33 & 1023]($2,$10);
   $34 = HEAP8[$__psn>>0]|0;
   $35 = $34 & 1;
   $36 = ($35<<24>>24)==(0);
   if ($36) {
    $40 = ((($__psn)) + 1|0);
    HEAP8[$40>>0] = 0;
    HEAP8[$__psn>>0] = 0;
   } else {
    $37 = ((($__psn)) + 8|0);
    $38 = HEAP32[$37>>2]|0;
    HEAP8[$38>>0] = 0;
    $39 = ((($__psn)) + 4|0);
    HEAP32[$39>>2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(480,($__psn|0),0);
   $41 = __THREW__; __THREW__ = 0;
   $42 = $41&1;
   if ($42) {
    $43 = ___cxa_find_matching_catch(0|0)|0;
    $44 = tempRet0;
    ___clang_call_terminate($43);
    // unreachable;
   }
   ;HEAP32[$__psn>>2]=HEAP32[$2>>2]|0;HEAP32[$__psn+4>>2]=HEAP32[$2+4>>2]|0;HEAP32[$__psn+8>>2]=HEAP32[$2+8>>2]|0;
   HEAP32[$2>>2] = 0;
   $45 = ((($2)) + 4|0);
   HEAP32[$45>>2] = 0;
   $46 = ((($2)) + 8|0);
   HEAP32[$46>>2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
   $47 = HEAP32[$10>>2]|0;
   $48 = ((($47)) + 12|0);
   $49 = HEAP32[$48>>2]|0;
   $50 = (FUNCTION_TABLE_ii[$49 & 1023]($10)|0);
   HEAP8[$__dp>>0] = $50;
   $51 = HEAP32[$10>>2]|0;
   $52 = ((($51)) + 16|0);
   $53 = HEAP32[$52>>2]|0;
   $54 = (FUNCTION_TABLE_ii[$53 & 1023]($10)|0);
   HEAP8[$__ts>>0] = $54;
   $55 = HEAP32[$10>>2]|0;
   $56 = ((($55)) + 20|0);
   $57 = HEAP32[$56>>2]|0;
   FUNCTION_TABLE_vii[$57 & 1023]($3,$10);
   $58 = HEAP8[$__grp>>0]|0;
   $59 = $58 & 1;
   $60 = ($59<<24>>24)==(0);
   if ($60) {
    $64 = ((($__grp)) + 1|0);
    HEAP8[$64>>0] = 0;
    HEAP8[$__grp>>0] = 0;
   } else {
    $61 = ((($__grp)) + 8|0);
    $62 = HEAP32[$61>>2]|0;
    HEAP8[$62>>0] = 0;
    $63 = ((($__grp)) + 4|0);
    HEAP32[$63>>2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(480,($__grp|0),0);
   $65 = __THREW__; __THREW__ = 0;
   $66 = $65&1;
   if ($66) {
    $67 = ___cxa_find_matching_catch(0|0)|0;
    $68 = tempRet0;
    ___clang_call_terminate($67);
    // unreachable;
   }
   ;HEAP32[$__grp>>2]=HEAP32[$3>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$3+8>>2]|0;
   HEAP32[$3>>2] = 0;
   $69 = ((($3)) + 4|0);
   HEAP32[$69>>2] = 0;
   $70 = ((($3)) + 8|0);
   HEAP32[$70>>2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
   $71 = HEAP32[$10>>2]|0;
   $72 = ((($71)) + 24|0);
   $73 = HEAP32[$72>>2]|0;
   FUNCTION_TABLE_vii[$73 & 1023]($4,$10);
   $74 = HEAP8[$__sym>>0]|0;
   $75 = $74 & 1;
   $76 = ($75<<24>>24)==(0);
   if ($76) {
    $80 = ((($__sym)) + 1|0);
    HEAP8[$80>>0] = 0;
    HEAP8[$__sym>>0] = 0;
   } else {
    $77 = ((($__sym)) + 8|0);
    $78 = HEAP32[$77>>2]|0;
    HEAP8[$78>>0] = 0;
    $79 = ((($__sym)) + 4|0);
    HEAP32[$79>>2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(480,($__sym|0),0);
   $81 = __THREW__; __THREW__ = 0;
   $82 = $81&1;
   if ($82) {
    $83 = ___cxa_find_matching_catch(0|0)|0;
    $84 = tempRet0;
    ___clang_call_terminate($83);
    // unreachable;
   } else {
    ;HEAP32[$__sym>>2]=HEAP32[$4>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$4+8>>2]|0;
    HEAP32[$4>>2] = 0;
    $85 = ((($4)) + 4|0);
    HEAP32[$85>>2] = 0;
    $86 = ((($4)) + 8|0);
    HEAP32[$86>>2] = 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
    $87 = HEAP32[$10>>2]|0;
    $88 = ((($87)) + 36|0);
    $89 = HEAP32[$88>>2]|0;
    $90 = (FUNCTION_TABLE_ii[$89 & 1023]($10)|0);
    $storemerge = $90;
    break;
   }
  } else {
   $91 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6280)|0);
   $92 = HEAP32[$91>>2]|0;
   $93 = ((($92)) + 44|0);
   $94 = HEAP32[$93>>2]|0;
   FUNCTION_TABLE_vii[$94 & 1023]($5,$91);
   $95 = HEAP32[$5>>2]|0;
   HEAP8[$__pat>>0]=$95&255;HEAP8[$__pat+1>>0]=($95>>8)&255;HEAP8[$__pat+2>>0]=($95>>16)&255;HEAP8[$__pat+3>>0]=$95>>24;
   $96 = HEAP32[$91>>2]|0;
   $97 = ((($96)) + 32|0);
   $98 = HEAP32[$97>>2]|0;
   FUNCTION_TABLE_vii[$98 & 1023]($6,$91);
   $99 = HEAP8[$__nsn>>0]|0;
   $100 = $99 & 1;
   $101 = ($100<<24>>24)==(0);
   if ($101) {
    $105 = ((($__nsn)) + 1|0);
    HEAP8[$105>>0] = 0;
    HEAP8[$__nsn>>0] = 0;
   } else {
    $102 = ((($__nsn)) + 8|0);
    $103 = HEAP32[$102>>2]|0;
    HEAP8[$103>>0] = 0;
    $104 = ((($__nsn)) + 4|0);
    HEAP32[$104>>2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(480,($__nsn|0),0);
   $106 = __THREW__; __THREW__ = 0;
   $107 = $106&1;
   if ($107) {
    $108 = ___cxa_find_matching_catch(0|0)|0;
    $109 = tempRet0;
    ___clang_call_terminate($108);
    // unreachable;
   }
   ;HEAP32[$__nsn>>2]=HEAP32[$6>>2]|0;HEAP32[$__nsn+4>>2]=HEAP32[$6+4>>2]|0;HEAP32[$__nsn+8>>2]=HEAP32[$6+8>>2]|0;
   HEAP32[$6>>2] = 0;
   $110 = ((($6)) + 4|0);
   HEAP32[$110>>2] = 0;
   $111 = ((($6)) + 8|0);
   HEAP32[$111>>2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
   $112 = HEAP32[$91>>2]|0;
   $113 = ((($112)) + 28|0);
   $114 = HEAP32[$113>>2]|0;
   FUNCTION_TABLE_vii[$114 & 1023]($7,$91);
   $115 = HEAP8[$__psn>>0]|0;
   $116 = $115 & 1;
   $117 = ($116<<24>>24)==(0);
   if ($117) {
    $121 = ((($__psn)) + 1|0);
    HEAP8[$121>>0] = 0;
    HEAP8[$__psn>>0] = 0;
   } else {
    $118 = ((($__psn)) + 8|0);
    $119 = HEAP32[$118>>2]|0;
    HEAP8[$119>>0] = 0;
    $120 = ((($__psn)) + 4|0);
    HEAP32[$120>>2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(480,($__psn|0),0);
   $122 = __THREW__; __THREW__ = 0;
   $123 = $122&1;
   if ($123) {
    $124 = ___cxa_find_matching_catch(0|0)|0;
    $125 = tempRet0;
    ___clang_call_terminate($124);
    // unreachable;
   }
   ;HEAP32[$__psn>>2]=HEAP32[$7>>2]|0;HEAP32[$__psn+4>>2]=HEAP32[$7+4>>2]|0;HEAP32[$__psn+8>>2]=HEAP32[$7+8>>2]|0;
   HEAP32[$7>>2] = 0;
   $126 = ((($7)) + 4|0);
   HEAP32[$126>>2] = 0;
   $127 = ((($7)) + 8|0);
   HEAP32[$127>>2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
   $128 = HEAP32[$91>>2]|0;
   $129 = ((($128)) + 12|0);
   $130 = HEAP32[$129>>2]|0;
   $131 = (FUNCTION_TABLE_ii[$130 & 1023]($91)|0);
   HEAP8[$__dp>>0] = $131;
   $132 = HEAP32[$91>>2]|0;
   $133 = ((($132)) + 16|0);
   $134 = HEAP32[$133>>2]|0;
   $135 = (FUNCTION_TABLE_ii[$134 & 1023]($91)|0);
   HEAP8[$__ts>>0] = $135;
   $136 = HEAP32[$91>>2]|0;
   $137 = ((($136)) + 20|0);
   $138 = HEAP32[$137>>2]|0;
   FUNCTION_TABLE_vii[$138 & 1023]($8,$91);
   $139 = HEAP8[$__grp>>0]|0;
   $140 = $139 & 1;
   $141 = ($140<<24>>24)==(0);
   if ($141) {
    $145 = ((($__grp)) + 1|0);
    HEAP8[$145>>0] = 0;
    HEAP8[$__grp>>0] = 0;
   } else {
    $142 = ((($__grp)) + 8|0);
    $143 = HEAP32[$142>>2]|0;
    HEAP8[$143>>0] = 0;
    $144 = ((($__grp)) + 4|0);
    HEAP32[$144>>2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(480,($__grp|0),0);
   $146 = __THREW__; __THREW__ = 0;
   $147 = $146&1;
   if ($147) {
    $148 = ___cxa_find_matching_catch(0|0)|0;
    $149 = tempRet0;
    ___clang_call_terminate($148);
    // unreachable;
   }
   ;HEAP32[$__grp>>2]=HEAP32[$8>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$8+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$8+8>>2]|0;
   HEAP32[$8>>2] = 0;
   $150 = ((($8)) + 4|0);
   HEAP32[$150>>2] = 0;
   $151 = ((($8)) + 8|0);
   HEAP32[$151>>2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
   $152 = HEAP32[$91>>2]|0;
   $153 = ((($152)) + 24|0);
   $154 = HEAP32[$153>>2]|0;
   FUNCTION_TABLE_vii[$154 & 1023]($9,$91);
   $155 = HEAP8[$__sym>>0]|0;
   $156 = $155 & 1;
   $157 = ($156<<24>>24)==(0);
   if ($157) {
    $161 = ((($__sym)) + 1|0);
    HEAP8[$161>>0] = 0;
    HEAP8[$__sym>>0] = 0;
   } else {
    $158 = ((($__sym)) + 8|0);
    $159 = HEAP32[$158>>2]|0;
    HEAP8[$159>>0] = 0;
    $160 = ((($__sym)) + 4|0);
    HEAP32[$160>>2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(480,($__sym|0),0);
   $162 = __THREW__; __THREW__ = 0;
   $163 = $162&1;
   if ($163) {
    $164 = ___cxa_find_matching_catch(0|0)|0;
    $165 = tempRet0;
    ___clang_call_terminate($164);
    // unreachable;
   } else {
    ;HEAP32[$__sym>>2]=HEAP32[$9>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$9+8>>2]|0;
    HEAP32[$9>>2] = 0;
    $166 = ((($9)) + 4|0);
    HEAP32[$166>>2] = 0;
    $167 = ((($9)) + 8|0);
    HEAP32[$167>>2] = 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
    $168 = HEAP32[$91>>2]|0;
    $169 = ((($168)) + 36|0);
    $170 = HEAP32[$169>>2]|0;
    $171 = (FUNCTION_TABLE_ii[$170 & 1023]($91)|0);
    $storemerge = $171;
    break;
   }
  }
 } while(0);
 HEAP32[$__fd>>2] = $storemerge;
 STACKTOP = sp;return;
}
function __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$__g_end,$__err) {
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__err = $__err|0;
 var $$01$i$i22 = 0, $$__ig$0 = 0, $$lcssa = 0, $$not = 0, $$not16 = 0, $$pre = 0, $$pre11 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__ig$018 = 0, $__r$019 = 0;
 var $or$cond2 = 0, $or$cond2$lcssa = 0, $or$cond217 = 0, $or$cond220 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$__grouping>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 $3 = ((($__grouping)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $0&255;
 $6 = $5 >>> 1;
 $7 = $2 ? $6 : $4;
 $8 = ($7|0)==(0);
 L1: do {
  if (!($8)) {
   $9 = ($__g|0)==($__g_end|0);
   if ($9) {
    $19 = $0;$27 = $4;
   } else {
    $10 = ((($__g_end)) + -4|0);
    $11 = ($10>>>0)>($__g>>>0);
    if ($11) {
     $$01$i$i22 = $__g;$14 = $10;
     while(1) {
      $12 = HEAP32[$$01$i$i22>>2]|0;
      $13 = HEAP32[$14>>2]|0;
      HEAP32[$$01$i$i22>>2] = $13;
      HEAP32[$14>>2] = $12;
      $15 = ((($$01$i$i22)) + 4|0);
      $16 = ((($14)) + -4|0);
      $17 = ($15>>>0)<($16>>>0);
      if ($17) {
       $$01$i$i22 = $15;$14 = $16;
      } else {
       break;
      }
     }
    }
    $$pre = HEAP8[$__grouping>>0]|0;
    $$pre11 = HEAP32[$3>>2]|0;
    $19 = $$pre;$27 = $$pre11;
   }
   $18 = $19 & 1;
   $20 = ($18<<24>>24)==(0);
   $21 = ((($__grouping)) + 8|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ((($__grouping)) + 1|0);
   $24 = $20 ? $23 : $22;
   $25 = $19&255;
   $26 = $25 >>> 1;
   $28 = $20 ? $26 : $27;
   $29 = (($24) + ($28)|0);
   $30 = ((($__g_end)) + -4|0);
   $31 = $29;
   $32 = ($30>>>0)>($__g>>>0);
   $33 = HEAP8[$24>>0]|0;
   $$not16 = ($33<<24>>24)<(1);
   $34 = ($33<<24>>24)==(127);
   $or$cond217 = $$not16 | $34;
   L10: do {
    if ($32) {
     $36 = $33;$__ig$018 = $24;$__r$019 = $__g;$or$cond220 = $or$cond217;
     while(1) {
      if (!($or$cond220)) {
       $35 = $36 << 24 >> 24;
       $37 = HEAP32[$__r$019>>2]|0;
       $38 = ($35|0)==($37|0);
       if (!($38)) {
        break;
       }
      }
      $39 = $__ig$018;
      $40 = (($31) - ($39))|0;
      $41 = ($40|0)>(1);
      $42 = ((($__ig$018)) + 1|0);
      $$__ig$0 = $41 ? $42 : $__ig$018;
      $43 = ((($__r$019)) + 4|0);
      $44 = ($43>>>0)<($30>>>0);
      $45 = HEAP8[$$__ig$0>>0]|0;
      $$not = ($45<<24>>24)<(1);
      $46 = ($45<<24>>24)==(127);
      $or$cond2 = $$not | $46;
      if ($44) {
       $36 = $45;$__ig$018 = $$__ig$0;$__r$019 = $43;$or$cond220 = $or$cond2;
      } else {
       $$lcssa = $45;$or$cond2$lcssa = $or$cond2;
       break L10;
      }
     }
     HEAP32[$__err>>2] = 4;
     break L1;
    } else {
     $$lcssa = $33;$or$cond2$lcssa = $or$cond217;
    }
   } while(0);
   if (!($or$cond2$lcssa)) {
    $47 = $$lcssa << 24 >> 24;
    $48 = HEAP32[$30>>2]|0;
    $49 = (($48) + -1)|0;
    $50 = ($49>>>0)<($47>>>0);
    if (!($50)) {
     HEAP32[$__err>>2] = 4;
    }
   }
  }
 } while(0);
 return;
}
function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe($this,$__b,$__e,$__intl,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$ = 0, $$0 = 0, $$0$i$i$i$i = 0, $$0$i$i1$i$i = 0, $$0$lcssa$i = 0, $$01 = 0, $$112 = 0, $$113 = 0, $$1210 = 0, $$1211 = 0, $$byval_copy = 0, $$phi$trans$insert$pre$phiZZZZ2D = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre14 = 0, $$pre6 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0;
 var $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;
 var $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0;
 var $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $__atoms = 0, $__loc = 0, $__nbuf = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2$lcssa = 0, $__nc$216 = 0, $__neg = 0, $__w$017 = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, $phitmp$i$i$i = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 592|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 472|0;
 $vararg_buffer = sp;
 $__wbuf = sp + 72|0;
 $__wb = sp + 64|0;
 $__wn = sp + 56|0;
 $__loc = sp + 52|0;
 $__neg = sp + 576|0;
 $0 = sp + 48|0;
 $__atoms = sp + 8|0;
 $__nbuf = sp + 476|0;
 $1 = $__wbuf;
 HEAP32[$__wb>>2] = $1;
 $2 = ((($__wb)) + 4|0);
 HEAP32[$2>>2] = (473);
 $3 = ((($__wbuf)) + 400|0);
 __THREW__ = 0;
 $4 = (invoke_ii(455,($__iob|0))|0);
 $5 = __THREW__; __THREW__ = 0;
 $6 = $5&1;
 if ($6) {
  $34 = ___cxa_find_matching_catch()|0;
  $35 = tempRet0;
  HEAP32[$__wb>>2] = 0;
  $$112 = $34;$$1210 = $35;$121 = 473;$122 = $__wbuf;
  label = 47;
 } else {
  HEAP32[$__loc>>2] = $4;
  __THREW__ = 0;
  $7 = (invoke_iii(452,($__loc|0),(6752|0))|0);
  $8 = __THREW__; __THREW__ = 0;
  $9 = $8&1;
  L4: do {
   if ($9) {
    label = 10;
   } else {
    HEAP8[$__neg>>0] = 0;
    $10 = HEAP32[$__e>>2]|0;
    HEAP32[$0>>2] = $10;
    $11 = ((($__iob)) + 4|0);
    $12 = HEAP32[$11>>2]|0;
    __THREW__ = 0;
    ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
    $13 = (invoke_iiiiiiiiiiii(481,($__b|0),($$byval_copy|0),($__intl|0),($__loc|0),($12|0),($__err|0),($__neg|0),($7|0),($__wb|0),($__wn|0),($3|0))|0);
    $14 = __THREW__; __THREW__ = 0;
    $15 = $14&1;
    if ($15) {
     label = 10;
    } else {
     L7: do {
      if ($13) {
       $16 = HEAP32[$7>>2]|0;
       $17 = ((($16)) + 48|0);
       $18 = HEAP32[$17>>2]|0;
       __THREW__ = 0;
       (invoke_iiiii($18|0,($7|0),(10120|0),((10130)|0),($__atoms|0))|0);
       $19 = __THREW__; __THREW__ = 0;
       $20 = $19&1;
       if ($20) {
        label = 10;
        break L4;
       }
       $21 = HEAP32[$__wn>>2]|0;
       $22 = HEAP32[$__wb>>2]|0;
       $23 = $21;
       $24 = $22;
       $25 = (($23) - ($24))|0;
       $26 = ($25|0)>(392);
       if ($26) {
        $27 = $25 >> 2;
        $28 = (($27) + 2)|0;
        $29 = (_malloc($28)|0);
        $30 = $29;
        $31 = ($29|0)==(0|0);
        if ($31) {
         __THREW__ = 0;
         invoke_v(463);
         $32 = __THREW__; __THREW__ = 0;
         $33 = $32&1;
         if ($33) {
          $40 = $30;
         } else {
          $75 = $30;$__nc$0 = 0;
          label = 13;
         }
        } else {
         $75 = $30;$__nc$0 = $29;
         label = 13;
        }
       } else {
        $75 = 0;$__nc$0 = $__nbuf;
        label = 13;
       }
       do {
        if ((label|0) == 13) {
         $43 = HEAP8[$__neg>>0]|0;
         $44 = ($43<<24>>24)==(0);
         if ($44) {
          $__nc$1 = $__nc$0;
         } else {
          $45 = ((($__nc$0)) + 1|0);
          HEAP8[$__nc$0>>0] = 45;
          $__nc$1 = $45;
         }
         $46 = ((($__atoms)) + 40|0);
         $47 = $__atoms;
         $48 = ($22>>>0)<($21>>>0);
         if ($48) {
          $49 = ((($__atoms)) + 4|0);
          $50 = ((($49)) + 4|0);
          $51 = ((($50)) + 4|0);
          $52 = ((($51)) + 4|0);
          $53 = ((($52)) + 4|0);
          $54 = ((($53)) + 4|0);
          $55 = ((($54)) + 4|0);
          $56 = ((($55)) + 4|0);
          $57 = ((($56)) + 4|0);
          $__nc$216 = $__nc$1;$__w$017 = $22;
          while(1) {
           $58 = HEAP32[$__w$017>>2]|0;
           $59 = HEAP32[$__atoms>>2]|0;
           $60 = ($59|0)==($58|0);
           do {
            if ($60) {
             $$0$lcssa$i = $__atoms;
            } else {
             $61 = HEAP32[$49>>2]|0;
             $62 = ($61|0)==($58|0);
             if ($62) {
              $$0$lcssa$i = $49;
             } else {
              $127 = HEAP32[$50>>2]|0;
              $128 = ($127|0)==($58|0);
              if ($128) {
               $$0$lcssa$i = $50;
              } else {
               $129 = HEAP32[$51>>2]|0;
               $130 = ($129|0)==($58|0);
               if ($130) {
                $$0$lcssa$i = $51;
               } else {
                $131 = HEAP32[$52>>2]|0;
                $132 = ($131|0)==($58|0);
                if ($132) {
                 $$0$lcssa$i = $52;
                } else {
                 $133 = HEAP32[$53>>2]|0;
                 $134 = ($133|0)==($58|0);
                 if ($134) {
                  $$0$lcssa$i = $53;
                  break;
                 }
                 $135 = HEAP32[$54>>2]|0;
                 $136 = ($135|0)==($58|0);
                 if ($136) {
                  $$0$lcssa$i = $54;
                  break;
                 }
                 $137 = HEAP32[$55>>2]|0;
                 $138 = ($137|0)==($58|0);
                 if ($138) {
                  $$0$lcssa$i = $55;
                  break;
                 }
                 $139 = HEAP32[$56>>2]|0;
                 $140 = ($139|0)==($58|0);
                 if ($140) {
                  $$0$lcssa$i = $56;
                  break;
                 }
                 $141 = HEAP32[$57>>2]|0;
                 $142 = ($141|0)==($58|0);
                 $$ = $142 ? $57 : $46;
                 $$0$lcssa$i = $$;
                }
               }
              }
             }
            }
           } while(0);
           $63 = $$0$lcssa$i;
           $64 = (($63) - ($47))|0;
           $65 = $64 >> 2;
           $66 = (10120 + ($65)|0);
           $67 = HEAP8[$66>>0]|0;
           HEAP8[$__nc$216>>0] = $67;
           $68 = ((($__w$017)) + 4|0);
           $69 = ((($__nc$216)) + 1|0);
           $$pre = HEAP32[$__wn>>2]|0;
           $70 = ($68>>>0)<($$pre>>>0);
           if ($70) {
            $__nc$216 = $69;$__w$017 = $68;
           } else {
            $__nc$2$lcssa = $69;
            break;
           }
          }
         } else {
          $__nc$2$lcssa = $__nc$1;
         }
         HEAP8[$__nc$2$lcssa>>0] = 0;
         HEAP32[$vararg_buffer>>2] = $__v;
         $71 = (_sscanf($__nbuf,10096,$vararg_buffer)|0);
         $72 = ($71|0)==(1);
         if (!($72)) {
          __THREW__ = 0;
          invoke_vi(475,(10104|0));
          $73 = __THREW__; __THREW__ = 0;
          $74 = $73&1;
          if ($74) {
           $40 = $75;
           break;
          }
         }
         $76 = ($75|0)==(0);
         if (!($76)) {
          $77 = $75;
          _free($77);
         }
         break L7;
        }
       } while(0);
       $38 = ___cxa_find_matching_catch()|0;
       $39 = tempRet0;
       $41 = ($40|0)==(0);
       if ($41) {
        $$0 = $38;$$01 = $39;$$phi$trans$insert$pre$phiZZZZ2D = $__wb;
        break L4;
       }
       $42 = $40;
       _free($42);
       $$0 = $38;$$01 = $39;$$phi$trans$insert$pre$phiZZZZ2D = $__wb;
       break L4;
      }
     } while(0);
     $78 = HEAP32[$__b>>2]|0;
     $79 = ($78|0)==(0|0);
     do {
      if ($79) {
       $143 = 1;
      } else {
       $80 = ((($78)) + 12|0);
       $81 = HEAP32[$80>>2]|0;
       $82 = ((($78)) + 16|0);
       $83 = HEAP32[$82>>2]|0;
       $84 = ($81|0)==($83|0);
       if ($84) {
        $85 = HEAP32[$78>>2]|0;
        $86 = ((($85)) + 36|0);
        $87 = HEAP32[$86>>2]|0;
        __THREW__ = 0;
        $88 = (invoke_ii($87|0,($78|0))|0);
        $89 = __THREW__; __THREW__ = 0;
        $90 = $89&1;
        if ($90) {
         label = 10;
         break L4;
        } else {
         $$0$i$i$i$i = $88;
        }
       } else {
        $91 = HEAP32[$81>>2]|0;
        $$0$i$i$i$i = $91;
       }
       $92 = ($$0$i$i$i$i|0)==(-1);
       if ($92) {
        HEAP32[$__b>>2] = 0;
        $143 = 1;
        break;
       } else {
        $$pre$i$i$i = HEAP32[$__b>>2]|0;
        $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
        $143 = $phitmp$i$i$i;
        break;
       }
      }
     } while(0);
     $93 = HEAP32[$__e>>2]|0;
     $94 = ($93|0)==(0|0);
     do {
      if ($94) {
       label = 38;
      } else {
       $95 = ((($93)) + 12|0);
       $96 = HEAP32[$95>>2]|0;
       $97 = ((($93)) + 16|0);
       $98 = HEAP32[$97>>2]|0;
       $99 = ($96|0)==($98|0);
       if ($99) {
        $100 = HEAP32[$93>>2]|0;
        $101 = ((($100)) + 36|0);
        $102 = HEAP32[$101>>2]|0;
        __THREW__ = 0;
        $103 = (invoke_ii($102|0,($93|0))|0);
        $104 = __THREW__; __THREW__ = 0;
        $105 = $104&1;
        if ($105) {
         label = 10;
         break L4;
        } else {
         $$0$i$i1$i$i = $103;
        }
       } else {
        $106 = HEAP32[$96>>2]|0;
        $$0$i$i1$i$i = $106;
       }
       $107 = ($$0$i$i1$i$i|0)==(-1);
       if ($107) {
        HEAP32[$__e>>2] = 0;
        label = 38;
        break;
       } else {
        if ($143) {
         break;
        } else {
         label = 40;
         break;
        }
       }
      }
     } while(0);
     if ((label|0) == 38) {
      if ($143) {
       label = 40;
      }
     }
     if ((label|0) == 40) {
      $108 = HEAP32[$__err>>2]|0;
      $109 = $108 | 2;
      HEAP32[$__err>>2] = $109;
     }
     $110 = HEAP32[$__b>>2]|0;
     $111 = HEAP32[$__loc>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($111)|0);
     $112 = HEAP32[$__wb>>2]|0;
     HEAP32[$__wb>>2] = 0;
     $113 = ($112|0)==(0|0);
     if (!($113)) {
      $114 = HEAP32[$2>>2]|0;
      __THREW__ = 0;
      invoke_vi($114|0,($112|0));
      $115 = __THREW__; __THREW__ = 0;
      $116 = $115&1;
      if ($116) {
       $117 = ___cxa_find_matching_catch(0|0)|0;
       $118 = tempRet0;
       ___clang_call_terminate($117);
       // unreachable;
      }
     }
     STACKTOP = sp;return ($110|0);
    }
   }
  } while(0);
  if ((label|0) == 10) {
   $36 = ___cxa_find_matching_catch()|0;
   $37 = tempRet0;
   $$0 = $36;$$01 = $37;$$phi$trans$insert$pre$phiZZZZ2D = $__wb;
  }
  $119 = HEAP32[$__loc>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($119)|0);
  $$pre6 = HEAP32[$$phi$trans$insert$pre$phiZZZZ2D>>2]|0;
  HEAP32[$$phi$trans$insert$pre$phiZZZZ2D>>2] = 0;
  $120 = ($$pre6|0)==(0|0);
  if ($120) {
   $$113 = $$0;$$1211 = $$01;
  } else {
   $$pre14 = HEAP32[$2>>2]|0;
   $$112 = $$0;$$1210 = $$01;$121 = $$pre14;$122 = $$pre6;
   label = 47;
  }
 }
 if ((label|0) == 47) {
  __THREW__ = 0;
  invoke_vi($121|0,($122|0));
  $123 = __THREW__; __THREW__ = 0;
  $124 = $123&1;
  if ($124) {
   $125 = ___cxa_find_matching_catch(0|0)|0;
   $126 = tempRet0;
   ___clang_call_terminate($125);
   // unreachable;
  } else {
   $$113 = $$112;$$1211 = $$1210;
  }
 }
 ___resumeException($$113|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_($__b,$__e,$__intl,$__loc,$__flags,$__err,$__neg,$__ct,$__wb,$__wn,$__we) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__loc = $__loc|0;
 $__flags = $__flags|0;
 $__err = $__err|0;
 $__neg = $__neg|0;
 $__ct = $__ct|0;
 $__wb = $__wb|0;
 $__wn = $__wn|0;
 $__we = $__we|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i126 = 0, $$0$i$i$i$i158 = 0, $$0$i$i$i$i183 = 0, $$0$i$i$i$i30 = 0, $$0$i$i$i$i51 = 0, $$0$i$i$i$i92 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i132 = 0, $$0$i$i1$i$i164 = 0, $$0$i$i1$i$i189 = 0, $$0$i$i1$i$i36 = 0, $$0$i$i1$i$i57 = 0, $$0$i$i1$i$i98 = 0, $$0$i$i110 = 0, $$0$i$i119 = 0, $$0$i$i122 = 0, $$0$i$i144 = 0;
 var $$0$i$i155 = 0, $$0$i$i179 = 0, $$0$i$i45 = 0, $$0$i$i49 = 0, $$0$i$i66 = 0, $$0$i$i73 = 0, $$0$i$i78 = 0, $$0$i$i86 = 0, $$0$i$i89 = 0, $$in386 = 0, $$lcssa261 = 0, $$lcssa357 = 0, $$lcssa416 = 0, $$lcssa418 = 0, $$ph = 0, $$ph345 = 0, $$ph346 = 0, $$phi$trans$insert = 0, $$phi$trans$insert296 = 0, $$pre = 0;
 var $$pre$i$i$i = 0, $$pre$i$i$i128 = 0, $$pre$i$i$i160 = 0, $$pre$i$i$i185 = 0, $$pre$i$i$i32 = 0, $$pre$i$i$i53 = 0, $$pre$i$i$i94 = 0, $$pre$i3$i$i100282$ph = 0, $$pre$i3$i$i100282306 = 0, $$pre$i3$i$i100382 = 0, $$pre$i3$i$i134 = 0, $$pre$i3$i$i166 = 0, $$pre$i3$i$i166275 = 0, $$pre$i3$i$i166277 = 0, $$pre$i3$i$i191290 = 0, $$pre$i3$i$i191291 = 0, $$pre$i3$i$i191391 = 0, $$pre$i3$i$i59 = 0, $$pre$i3$i$i59300 = 0, $$pre$i3$i$i59302 = 0;
 var $$pre279 = 0, $$pre281 = 0, $$pre284 = 0, $$pre285 = 0, $$pre286 = 0, $$pre287 = 0, $$pre288 = 0, $$pre289 = 0, $$pre293 = 0, $$pre294 = 0, $$pre295 = 0, $$pre297 = 0, $$pre298 = 0, $$pre299 = 0, $$sum = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0;
 var $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0;
 var $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0;
 var $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0;
 var $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0;
 var $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0;
 var $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0;
 var $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0;
 var $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0;
 var $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0;
 var $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0;
 var $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0;
 var $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0;
 var $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0;
 var $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0;
 var $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0;
 var $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0;
 var $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0;
 var $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0;
 var $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0;
 var $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0;
 var $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0;
 var $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0;
 var $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0;
 var $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0;
 var $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0;
 var $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0;
 var $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0;
 var $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0;
 var $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0;
 var $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0;
 var $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0;
 var $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0;
 var $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0;
 var $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0;
 var $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0;
 var $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0;
 var $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0;
 var $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0;
 var $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0;
 var $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0;
 var $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0;
 var $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dp = 0, $__et = 0, $__fd = 0, $__gb = 0, $__gbuf = 0, $__ge = 0, $__gn = 0, $__grp = 0;
 var $__i$0 = 0, $__ng$0 = 0, $__ng$0$lcssa417 = 0, $__ng$1 = 0, $__nsn = 0, $__nsn$__trailing_sign$0 = 0, $__nsn$__trailing_sign$011 = 0, $__p$0397 = 0, $__pat = 0, $__psn = 0, $__psn$__trailing_sign$0 = 0, $__psn$__trailing_sign$010 = 0, $__spaces = 0, $__sym = 0, $__trailing_sign$0$lcssa = 0, $__trailing_sign$0399 = 0, $__trailing_sign$1 = 0, $__ts = 0, $brmerge = 0, $cond = 0;
 var $lpad$phi$index = 0, $lpad$phi$index8 = 0, $or$cond = 0, $or$cond13 = 0, $or$cond7 = 0, $or$cond9 = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i129 = 0, $phitmp$i$i$i161 = 0, $phitmp$i$i$i186 = 0, $phitmp$i$i$i33 = 0, $phitmp$i$i$i54 = 0, $phitmp$i$i$i95 = 0, $phitmp$i4$i$i101 = 0, $phitmp$i4$i$i167 = 0, $phitmp$i4$i$i192 = 0, $phitmp$i4$i$i60 = 0, $switch = 0, $tmp$i$i103 = 0, $tmp$i$i169 = 0;
 var $tmp$i$i194 = 0, $tmp$i$i62 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 496|0;
 $__gbuf = sp + 96|0;
 $__gb = sp + 88|0;
 $__gn = sp + 80|0;
 $__ge = sp + 76|0;
 $__pat = sp + 500|0;
 $__dp = sp + 72|0;
 $__ts = sp + 68|0;
 $__grp = sp + 56|0;
 $__sym = sp + 44|0;
 $__psn = sp + 32|0;
 $__nsn = sp + 20|0;
 $__spaces = sp + 8|0;
 $__fd = sp + 4|0;
 $__et = sp;
 HEAP32[$0>>2] = $__we;
 $1 = $__gbuf;
 HEAP32[$__gb>>2] = $1;
 $2 = ((($__gb)) + 4|0);
 HEAP32[$2>>2] = (473);
 HEAP32[$__gn>>2] = $__gbuf;
 $3 = ((($__gbuf)) + 400|0);
 HEAP32[$__ge>>2] = $3;
 HEAP32[$__grp>>2] = 0;
 $4 = ((($__grp)) + 4|0);
 HEAP32[$4>>2] = 0;
 $5 = ((($__grp)) + 8|0);
 HEAP32[$5>>2] = 0;
 HEAP32[$__sym>>2] = 0;
 $6 = ((($__sym)) + 4|0);
 HEAP32[$6>>2] = 0;
 $7 = ((($__sym)) + 8|0);
 HEAP32[$7>>2] = 0;
 HEAP32[$__psn>>2] = 0;
 $8 = ((($__psn)) + 4|0);
 HEAP32[$8>>2] = 0;
 $9 = ((($__psn)) + 8|0);
 HEAP32[$9>>2] = 0;
 HEAP32[$__nsn>>2] = 0;
 $10 = ((($__nsn)) + 4|0);
 HEAP32[$10>>2] = 0;
 $11 = ((($__nsn)) + 8|0);
 HEAP32[$11>>2] = 0;
 HEAP32[$__spaces>>2] = 0;
 $12 = ((($__spaces)) + 4|0);
 HEAP32[$12>>2] = 0;
 $13 = ((($__spaces)) + 8|0);
 HEAP32[$13>>2] = 0;
 __THREW__ = 0;
 invoke_viiiiiiiiii(482,($__intl|0),($__loc|0),($__pat|0),($__dp|0),($__ts|0),($__grp|0),($__sym|0),($__psn|0),($__nsn|0),($__fd|0));
 $14 = __THREW__; __THREW__ = 0;
 $15 = $14&1;
 L1: do {
  if ($15) {
   $77 = ___cxa_find_matching_catch()|0;
   $78 = tempRet0;
   $lpad$phi$index = $77;$lpad$phi$index8 = $78;
  } else {
   $16 = HEAP32[$__wb>>2]|0;
   HEAP32[$__wn>>2] = $16;
   $17 = ((($__psn)) + 4|0);
   $18 = ((($__nsn)) + 4|0);
   $19 = ((($__nsn)) + 8|0);
   $20 = ((($__psn)) + 8|0);
   $21 = $__flags & 512;
   $22 = ($21|0)!=(0);
   $23 = ((($__sym)) + 8|0);
   $24 = ((($__sym)) + 4|0);
   $25 = ((($__spaces)) + 4|0);
   $26 = ((($__spaces)) + 8|0);
   $27 = ((($__pat)) + 3|0);
   $28 = ((($__grp)) + 4|0);
   $863 = $__gbuf;$__p$0397 = 0;$__trailing_sign$0399 = 0;
   L4: while(1) {
    $29 = HEAP32[$__b>>2]|0;
    $30 = ($29|0)==(0|0);
    do {
     if ($30) {
      $864 = 1;
     } else {
      $31 = ((($29)) + 12|0);
      $32 = HEAP32[$31>>2]|0;
      $33 = ((($29)) + 16|0);
      $34 = HEAP32[$33>>2]|0;
      $35 = ($32|0)==($34|0);
      if ($35) {
       $36 = HEAP32[$29>>2]|0;
       $37 = ((($36)) + 36|0);
       $38 = HEAP32[$37>>2]|0;
       __THREW__ = 0;
       $39 = (invoke_ii($38|0,($29|0))|0);
       $40 = __THREW__; __THREW__ = 0;
       $41 = $40&1;
       if ($41) {
        label = 26;
        break L4;
       } else {
        $$0$i$i$i$i30 = $39;
       }
      } else {
       $42 = HEAP32[$32>>2]|0;
       $$0$i$i$i$i30 = $42;
      }
      $43 = ($$0$i$i$i$i30|0)==(-1);
      if ($43) {
       HEAP32[$__b>>2] = 0;
       $864 = 1;
       break;
      } else {
       $$pre$i$i$i32 = HEAP32[$__b>>2]|0;
       $phitmp$i$i$i33 = ($$pre$i$i$i32|0)==(0|0);
       $864 = $phitmp$i$i$i33;
       break;
      }
     }
    } while(0);
    $44 = HEAP32[$__e>>2]|0;
    $45 = ($44|0)==(0|0);
    do {
     if ($45) {
      label = 16;
     } else {
      $46 = ((($44)) + 12|0);
      $47 = HEAP32[$46>>2]|0;
      $48 = ((($44)) + 16|0);
      $49 = HEAP32[$48>>2]|0;
      $50 = ($47|0)==($49|0);
      if ($50) {
       $51 = HEAP32[$44>>2]|0;
       $52 = ((($51)) + 36|0);
       $53 = HEAP32[$52>>2]|0;
       __THREW__ = 0;
       $54 = (invoke_ii($53|0,($44|0))|0);
       $55 = __THREW__; __THREW__ = 0;
       $56 = $55&1;
       if ($56) {
        label = 26;
        break L4;
       } else {
        $$0$i$i1$i$i36 = $54;
       }
      } else {
       $57 = HEAP32[$47>>2]|0;
       $$0$i$i1$i$i36 = $57;
      }
      $58 = ($$0$i$i1$i$i36|0)==(-1);
      if ($58) {
       HEAP32[$__e>>2] = 0;
       label = 16;
       break;
      } else {
       if ($864) {
        $865 = $44;
        break;
       } else {
        $$lcssa357 = $863;$__trailing_sign$0$lcssa = $__trailing_sign$0399;
        label = 244;
        break L4;
       }
      }
     }
    } while(0);
    if ((label|0) == 16) {
     label = 0;
     if ($864) {
      $$lcssa357 = $863;$__trailing_sign$0$lcssa = $__trailing_sign$0399;
      label = 244;
      break;
     } else {
      $865 = 0;
     }
    }
    $59 = (($__pat) + ($__p$0397)|0);
    $60 = HEAP8[$59>>0]|0;
    $61 = $60 << 24 >> 24;
    L28: do {
     switch ($61|0) {
     case 2:  {
      $357 = ($__trailing_sign$0399|0)!=(0|0);
      $358 = ($__p$0397>>>0)<(2);
      $or$cond = $358 | $357;
      if (!($or$cond)) {
       $359 = ($__p$0397|0)==(2);
       $360 = HEAP8[$27>>0]|0;
       $361 = ($360<<24>>24)!=(0);
       $362 = $359 & $361;
       $brmerge = $22 | $362;
       if (!($brmerge)) {
        $866 = $863;$__trailing_sign$1 = 0;
        break L28;
       }
      }
      $363 = HEAP8[$__sym>>0]|0;
      $364 = $363 & 1;
      $365 = ($364<<24>>24)==(0);
      $366 = HEAP32[$23>>2]|0;
      $367 = $365 ? $24 : $366;
      $368 = $367;
      $369 = ($__p$0397|0)==(0);
      L33: do {
       if ($369) {
        $$ph = $366;$$ph345 = $363;$$ph346 = $368;
       } else {
        $380 = (($__p$0397) + -1)|0;
        $381 = (($__pat) + ($380)|0);
        $382 = HEAP8[$381>>0]|0;
        $switch = ($382&255)<(2);
        if ($switch) {
         $383 = $363 & 1;
         $384 = ($383<<24>>24)==(0);
         $385 = HEAP32[$24>>2]|0;
         $386 = $363&255;
         $387 = $386 >>> 1;
         $388 = $384 ? $24 : $366;
         $389 = $384 ? $387 : $385;
         $390 = (($388) + ($389<<2)|0);
         $391 = ($367|0)==($390|0);
         L36: do {
          if ($391) {
           $412 = $363;$414 = $366;$418 = $368;
          } else {
           $393 = $367;$868 = $368;
           while(1) {
            $392 = HEAP32[$393>>2]|0;
            $394 = HEAP32[$__ct>>2]|0;
            $395 = ((($394)) + 12|0);
            $396 = HEAP32[$395>>2]|0;
            __THREW__ = 0;
            $397 = (invoke_iiii($396|0,($__ct|0),8192,($392|0))|0);
            $398 = __THREW__; __THREW__ = 0;
            $399 = $398&1;
            if ($399) {
             label = 23;
             break L4;
            }
            if (!($397)) {
             $$lcssa418 = $868;
             break;
            }
            $400 = ((($393)) + 4|0);
            $401 = $400;
            $$pre284 = HEAP8[$__sym>>0]|0;
            $$pre285 = HEAP32[$23>>2]|0;
            $402 = $$pre284 & 1;
            $403 = ($402<<24>>24)==(0);
            $404 = HEAP32[$24>>2]|0;
            $405 = $$pre284&255;
            $406 = $405 >>> 1;
            $407 = $403 ? $24 : $$pre285;
            $408 = $403 ? $406 : $404;
            $409 = (($407) + ($408<<2)|0);
            $410 = ($400|0)==($409|0);
            if ($410) {
             $412 = $$pre284;$414 = $$pre285;$418 = $401;
             break L36;
            } else {
             $393 = $400;$868 = $401;
            }
           }
           $$pre286 = HEAP8[$__sym>>0]|0;
           $$pre287 = HEAP32[$23>>2]|0;
           $412 = $$pre286;$414 = $$pre287;$418 = $$lcssa418;
          }
         } while(0);
         $411 = $412 & 1;
         $413 = ($411<<24>>24)==(0);
         $415 = $413 ? $24 : $414;
         $416 = $415;
         $417 = (($418) - ($416))|0;
         $419 = $417 >> 2;
         $420 = HEAP8[$__spaces>>0]|0;
         $421 = $420 & 1;
         $422 = ($421<<24>>24)==(0);
         $423 = HEAP32[$25>>2]|0;
         $424 = $420&255;
         $425 = $424 >>> 1;
         $426 = $422 ? $425 : $423;
         $427 = ($426>>>0)<($419>>>0);
         if ($427) {
          $$ph = $414;$$ph345 = $412;$$ph346 = $416;
         } else {
          $428 = HEAP32[$26>>2]|0;
          $429 = $422 ? $25 : $428;
          $430 = (($429) + ($426<<2)|0);
          $431 = ($419|0)==(0);
          if ($431) {
           $$ph = $414;$$ph345 = $412;$$ph346 = $418;
          } else {
           $$sum = (($426) - ($419))|0;
           $432 = (($429) + ($$sum<<2)|0);
           $$in386 = $415;$434 = $432;
           while(1) {
            $433 = HEAP32[$434>>2]|0;
            $435 = HEAP32[$$in386>>2]|0;
            $436 = ($433|0)==($435|0);
            if (!($436)) {
             $$ph = $414;$$ph345 = $412;$$ph346 = $416;
             break L33;
            }
            $437 = ((($434)) + 4|0);
            $438 = ((($$in386)) + 4|0);
            $439 = ($437|0)==($430|0);
            if ($439) {
             $$ph = $414;$$ph345 = $412;$$ph346 = $418;
             break;
            } else {
             $$in386 = $438;$434 = $437;
            }
           }
          }
         }
        } else {
         $$ph = $366;$$ph345 = $363;$$ph346 = $368;
        }
       }
      } while(0);
      $370 = $$ph345 & 1;
      $371 = ($370<<24>>24)==(0);
      $372 = HEAP32[$24>>2]|0;
      $373 = $$ph345&255;
      $374 = $373 >>> 1;
      $375 = $371 ? $24 : $$ph;
      $376 = $371 ? $374 : $372;
      $377 = (($375) + ($376<<2)|0);
      $378 = $$ph346;
      $379 = ($378|0)==($377|0);
      L49: do {
       if ($379) {
        $$lcssa261 = $377;
       } else {
        $$pre$i3$i$i191391 = $865;$455 = $865;$485 = $378;
        while(1) {
         $440 = HEAP32[$__b>>2]|0;
         $441 = ($440|0)==(0|0);
         do {
          if ($441) {
           $470 = 1;
          } else {
           $442 = ((($440)) + 12|0);
           $443 = HEAP32[$442>>2]|0;
           $444 = ((($440)) + 16|0);
           $445 = HEAP32[$444>>2]|0;
           $446 = ($443|0)==($445|0);
           if ($446) {
            $447 = HEAP32[$440>>2]|0;
            $448 = ((($447)) + 36|0);
            $449 = HEAP32[$448>>2]|0;
            __THREW__ = 0;
            $450 = (invoke_ii($449|0,($440|0))|0);
            $451 = __THREW__; __THREW__ = 0;
            $452 = $451&1;
            if ($452) {
             label = 22;
             break L4;
            } else {
             $$0$i$i$i$i183 = $450;
            }
           } else {
            $453 = HEAP32[$443>>2]|0;
            $$0$i$i$i$i183 = $453;
           }
           $454 = ($$0$i$i$i$i183|0)==(-1);
           if ($454) {
            HEAP32[$__b>>2] = 0;
            $470 = 1;
            break;
           } else {
            $$pre$i$i$i185 = HEAP32[$__b>>2]|0;
            $phitmp$i$i$i186 = ($$pre$i$i$i185|0)==(0|0);
            $470 = $phitmp$i$i$i186;
            break;
           }
          }
         } while(0);
         $456 = ($455|0)==(0|0);
         do {
          if ($456) {
           $$pre$i3$i$i191291 = $$pre$i3$i$i191391;
           label = 136;
          } else {
           $457 = ((($455)) + 12|0);
           $458 = HEAP32[$457>>2]|0;
           $459 = ((($455)) + 16|0);
           $460 = HEAP32[$459>>2]|0;
           $461 = ($458|0)==($460|0);
           if ($461) {
            $462 = HEAP32[$455>>2]|0;
            $463 = ((($462)) + 36|0);
            $464 = HEAP32[$463>>2]|0;
            __THREW__ = 0;
            $465 = (invoke_ii($464|0,($455|0))|0);
            $466 = __THREW__; __THREW__ = 0;
            $467 = $466&1;
            if ($467) {
             label = 22;
             break L4;
            } else {
             $$0$i$i1$i$i189 = $465;
            }
           } else {
            $468 = HEAP32[$458>>2]|0;
            $$0$i$i1$i$i189 = $468;
           }
           $469 = ($$0$i$i1$i$i189|0)==(-1);
           if ($469) {
            HEAP32[$__e>>2] = 0;
            $$pre$i3$i$i191291 = 0;
            label = 136;
            break;
           } else {
            $phitmp$i4$i$i192 = ($$pre$i3$i$i191391|0)==(0|0);
            $tmp$i$i194 = $470 ^ $phitmp$i4$i$i192;
            if ($tmp$i$i194) {
             $$pre$i3$i$i191290 = $$pre$i3$i$i191391;$869 = $$pre$i3$i$i191391;
             break;
            } else {
             $$lcssa261 = $485;
             break L49;
            }
           }
          }
         } while(0);
         if ((label|0) == 136) {
          label = 0;
          if ($470) {
           $$lcssa261 = $485;
           break L49;
          } else {
           $$pre$i3$i$i191290 = $$pre$i3$i$i191291;$869 = 0;
          }
         }
         $471 = HEAP32[$__b>>2]|0;
         $472 = ((($471)) + 12|0);
         $473 = HEAP32[$472>>2]|0;
         $474 = ((($471)) + 16|0);
         $475 = HEAP32[$474>>2]|0;
         $476 = ($473|0)==($475|0);
         if ($476) {
          $477 = HEAP32[$471>>2]|0;
          $478 = ((($477)) + 36|0);
          $479 = HEAP32[$478>>2]|0;
          __THREW__ = 0;
          $480 = (invoke_ii($479|0,($471|0))|0);
          $481 = __THREW__; __THREW__ = 0;
          $482 = $481&1;
          if ($482) {
           label = 22;
           break L4;
          } else {
           $$0$i$i179 = $480;
          }
         } else {
          $483 = HEAP32[$473>>2]|0;
          $$0$i$i179 = $483;
         }
         $484 = HEAP32[$485>>2]|0;
         $486 = ($$0$i$i179|0)==($484|0);
         if (!($486)) {
          $$lcssa261 = $485;
          break L49;
         }
         $487 = HEAP32[$__b>>2]|0;
         $488 = ((($487)) + 12|0);
         $489 = HEAP32[$488>>2]|0;
         $490 = ((($487)) + 16|0);
         $491 = HEAP32[$490>>2]|0;
         $492 = ($489|0)==($491|0);
         if ($492) {
          $493 = HEAP32[$487>>2]|0;
          $494 = ((($493)) + 40|0);
          $495 = HEAP32[$494>>2]|0;
          __THREW__ = 0;
          (invoke_ii($495|0,($487|0))|0);
          $496 = __THREW__; __THREW__ = 0;
          $497 = $496&1;
          if ($497) {
           label = 22;
           break L4;
          }
         } else {
          $498 = ((($489)) + 4|0);
          HEAP32[$488>>2] = $498;
         }
         $499 = ((($485)) + 4|0);
         $$pre288 = HEAP8[$__sym>>0]|0;
         $$pre289 = HEAP32[$23>>2]|0;
         $500 = $$pre288 & 1;
         $501 = ($500<<24>>24)==(0);
         $502 = HEAP32[$24>>2]|0;
         $503 = $$pre288&255;
         $504 = $503 >>> 1;
         $505 = $501 ? $24 : $$pre289;
         $506 = $501 ? $504 : $502;
         $507 = (($505) + ($506<<2)|0);
         $508 = ($499|0)==($507|0);
         if ($508) {
          $$lcssa261 = $507;
          break;
         } else {
          $$pre$i3$i$i191391 = $$pre$i3$i$i191290;$455 = $869;$485 = $499;
         }
        }
       }
      } while(0);
      if ($22) {
       $509 = HEAP8[$__sym>>0]|0;
       $510 = $509 & 1;
       $511 = ($510<<24>>24)==(0);
       $512 = HEAP32[$23>>2]|0;
       $513 = HEAP32[$24>>2]|0;
       $514 = $509&255;
       $515 = $514 >>> 1;
       $516 = $511 ? $24 : $512;
       $517 = $511 ? $515 : $513;
       $518 = (($516) + ($517<<2)|0);
       $519 = ($$lcssa261|0)==($518|0);
       if ($519) {
        $866 = $863;$__trailing_sign$1 = $__trailing_sign$0399;
       } else {
        label = 148;
        break L4;
       }
      } else {
       $866 = $863;$__trailing_sign$1 = $__trailing_sign$0399;
      }
      break;
     }
     case 0:  {
      $123 = ($__p$0397|0)==(3);
      if ($123) {
       $866 = $863;$__trailing_sign$1 = $__trailing_sign$0399;
      } else {
       $$pre$i3$i$i59 = $865;$139 = $865;
       label = 44;
      }
      break;
     }
     case 1:  {
      $cond = ($__p$0397|0)==(3);
      if ($cond) {
       $866 = $863;$__trailing_sign$1 = $__trailing_sign$0399;
      } else {
       $86 = HEAP32[$__b>>2]|0;
       $87 = ((($86)) + 12|0);
       $88 = HEAP32[$87>>2]|0;
       $89 = ((($86)) + 16|0);
       $90 = HEAP32[$89>>2]|0;
       $91 = ($88|0)==($90|0);
       if ($91) {
        $92 = HEAP32[$86>>2]|0;
        $93 = ((($92)) + 36|0);
        $94 = HEAP32[$93>>2]|0;
        __THREW__ = 0;
        $95 = (invoke_ii($94|0,($86|0))|0);
        $96 = __THREW__; __THREW__ = 0;
        $97 = $96&1;
        if ($97) {
         label = 26;
         break L4;
        } else {
         $$0$i$i45 = $95;
        }
       } else {
        $98 = HEAP32[$88>>2]|0;
        $$0$i$i45 = $98;
       }
       $99 = HEAP32[$__ct>>2]|0;
       $100 = ((($99)) + 12|0);
       $101 = HEAP32[$100>>2]|0;
       __THREW__ = 0;
       $102 = (invoke_iiii($101|0,($__ct|0),8192,($$0$i$i45|0))|0);
       $103 = __THREW__; __THREW__ = 0;
       $104 = $103&1;
       if ($104) {
        label = 26;
        break L4;
       }
       if (!($102)) {
        label = 42;
        break L4;
       }
       $105 = HEAP32[$__b>>2]|0;
       $106 = ((($105)) + 12|0);
       $107 = HEAP32[$106>>2]|0;
       $108 = ((($105)) + 16|0);
       $109 = HEAP32[$108>>2]|0;
       $110 = ($107|0)==($109|0);
       if ($110) {
        $111 = HEAP32[$105>>2]|0;
        $112 = ((($111)) + 40|0);
        $113 = HEAP32[$112>>2]|0;
        __THREW__ = 0;
        $114 = (invoke_ii($113|0,($105|0))|0);
        $115 = __THREW__; __THREW__ = 0;
        $116 = $115&1;
        if ($116) {
         label = 26;
         break L4;
        } else {
         $$0$i$i49 = $114;
        }
       } else {
        $117 = ((($107)) + 4|0);
        HEAP32[$106>>2] = $117;
        $118 = HEAP32[$107>>2]|0;
        $$0$i$i49 = $118;
       }
       __THREW__ = 0;
       invoke_vii(483,($__spaces|0),($$0$i$i49|0));
       $119 = __THREW__; __THREW__ = 0;
       $120 = $119&1;
       if ($120) {
        label = 26;
        break L4;
       } else {
        $$pre$i3$i$i59 = $865;$139 = $865;
        label = 44;
       }
      }
      break;
     }
     case 4:  {
      $62 = HEAP32[$__ts>>2]|0;
      $$pre$i3$i$i166 = $865;$537 = $865;$591 = $863;$__ng$0 = 0;
      L99: while(1) {
       $522 = HEAP32[$__b>>2]|0;
       $523 = ($522|0)==(0|0);
       do {
        if ($523) {
         $552 = 1;
        } else {
         $524 = ((($522)) + 12|0);
         $525 = HEAP32[$524>>2]|0;
         $526 = ((($522)) + 16|0);
         $527 = HEAP32[$526>>2]|0;
         $528 = ($525|0)==($527|0);
         if ($528) {
          $529 = HEAP32[$522>>2]|0;
          $530 = ((($529)) + 36|0);
          $531 = HEAP32[$530>>2]|0;
          __THREW__ = 0;
          $532 = (invoke_ii($531|0,($522|0))|0);
          $533 = __THREW__; __THREW__ = 0;
          $534 = $533&1;
          if ($534) {
           label = 25;
           break L4;
          } else {
           $$0$i$i$i$i158 = $532;
          }
         } else {
          $535 = HEAP32[$525>>2]|0;
          $$0$i$i$i$i158 = $535;
         }
         $536 = ($$0$i$i$i$i158|0)==(-1);
         if ($536) {
          HEAP32[$__b>>2] = 0;
          $552 = 1;
          break;
         } else {
          $$pre$i$i$i160 = HEAP32[$__b>>2]|0;
          $phitmp$i$i$i161 = ($$pre$i$i$i160|0)==(0|0);
          $552 = $phitmp$i$i$i161;
          break;
         }
        }
       } while(0);
       $538 = ($537|0)==(0|0);
       do {
        if ($538) {
         $$pre$i3$i$i166275 = $$pre$i3$i$i166;
         label = 162;
        } else {
         $539 = ((($537)) + 12|0);
         $540 = HEAP32[$539>>2]|0;
         $541 = ((($537)) + 16|0);
         $542 = HEAP32[$541>>2]|0;
         $543 = ($540|0)==($542|0);
         if ($543) {
          $544 = HEAP32[$537>>2]|0;
          $545 = ((($544)) + 36|0);
          $546 = HEAP32[$545>>2]|0;
          __THREW__ = 0;
          $547 = (invoke_ii($546|0,($537|0))|0);
          $548 = __THREW__; __THREW__ = 0;
          $549 = $548&1;
          if ($549) {
           label = 25;
           break L4;
          } else {
           $$0$i$i1$i$i164 = $547;
          }
         } else {
          $550 = HEAP32[$540>>2]|0;
          $$0$i$i1$i$i164 = $550;
         }
         $551 = ($$0$i$i1$i$i164|0)==(-1);
         if ($551) {
          HEAP32[$__e>>2] = 0;
          $$pre$i3$i$i166275 = 0;
          label = 162;
          break;
         } else {
          $phitmp$i4$i$i167 = ($$pre$i3$i$i166|0)==(0|0);
          $tmp$i$i169 = $552 ^ $phitmp$i4$i$i167;
          if ($tmp$i$i169) {
           $$pre$i3$i$i166277 = $$pre$i3$i$i166;$870 = $$pre$i3$i$i166;
           break;
          } else {
           $$lcssa416 = $591;$$pre$i3$i$i134 = $$pre$i3$i$i166;$__ng$0$lcssa417 = $__ng$0;
           break L99;
          }
         }
        }
       } while(0);
       if ((label|0) == 162) {
        label = 0;
        if ($552) {
         $$lcssa416 = $591;$$pre$i3$i$i134 = $$pre$i3$i$i166275;$__ng$0$lcssa417 = $__ng$0;
         break;
        } else {
         $$pre$i3$i$i166277 = $$pre$i3$i$i166275;$870 = 0;
        }
       }
       $553 = HEAP32[$__b>>2]|0;
       $554 = ((($553)) + 12|0);
       $555 = HEAP32[$554>>2]|0;
       $556 = ((($553)) + 16|0);
       $557 = HEAP32[$556>>2]|0;
       $558 = ($555|0)==($557|0);
       if ($558) {
        $559 = HEAP32[$553>>2]|0;
        $560 = ((($559)) + 36|0);
        $561 = HEAP32[$560>>2]|0;
        __THREW__ = 0;
        $562 = (invoke_ii($561|0,($553|0))|0);
        $563 = __THREW__; __THREW__ = 0;
        $564 = $563&1;
        if ($564) {
         label = 25;
         break L4;
        } else {
         $$0$i$i155 = $562;
        }
       } else {
        $565 = HEAP32[$555>>2]|0;
        $$0$i$i155 = $565;
       }
       $566 = HEAP32[$__ct>>2]|0;
       $567 = ((($566)) + 12|0);
       $568 = HEAP32[$567>>2]|0;
       __THREW__ = 0;
       $569 = (invoke_iiii($568|0,($__ct|0),2048,($$0$i$i155|0))|0);
       $570 = __THREW__; __THREW__ = 0;
       $571 = $570&1;
       if ($571) {
        label = 25;
        break L4;
       }
       if ($569) {
        $572 = HEAP32[$__wn>>2]|0;
        $573 = HEAP32[$0>>2]|0;
        $574 = ($572|0)==($573|0);
        if ($574) {
         __THREW__ = 0;
         invoke_viii(484,($__wb|0),($__wn|0),($0|0));
         $575 = __THREW__; __THREW__ = 0;
         $576 = $575&1;
         if ($576) {
          label = 25;
          break L4;
         }
         $$pre279 = HEAP32[$__wn>>2]|0;
         $578 = $$pre279;
        } else {
         $578 = $572;
        }
        $577 = ((($578)) + 4|0);
        HEAP32[$__wn>>2] = $577;
        HEAP32[$578>>2] = $$0$i$i155;
        $579 = (($__ng$0) + 1)|0;
        $871 = $591;$__ng$1 = $579;
       } else {
        $580 = HEAP8[$__grp>>0]|0;
        $581 = $580 & 1;
        $582 = ($581<<24>>24)==(0);
        $583 = HEAP32[$28>>2]|0;
        $584 = $580&255;
        $585 = $584 >>> 1;
        $586 = $582 ? $585 : $583;
        $587 = ($586|0)!=(0);
        $588 = ($__ng$0|0)!=(0);
        $or$cond7 = $588 & $587;
        $589 = ($$0$i$i155|0)==($62|0);
        $or$cond13 = $589 & $or$cond7;
        if (!($or$cond13)) {
         $$lcssa416 = $591;$$pre$i3$i$i134 = $$pre$i3$i$i166277;$__ng$0$lcssa417 = $__ng$0;
         break;
        }
        $590 = HEAP32[$__ge>>2]|0;
        $592 = ($591|0)==($590|0);
        if ($592) {
         __THREW__ = 0;
         invoke_viii(478,($__gb|0),($__gn|0),($__ge|0));
         $593 = __THREW__; __THREW__ = 0;
         $594 = $593&1;
         if ($594) {
          label = 25;
          break L4;
         }
         $$pre = HEAP32[$__gn>>2]|0;
         $596 = $$pre;
        } else {
         $596 = $591;
        }
        $595 = ((($596)) + 4|0);
        HEAP32[$__gn>>2] = $595;
        HEAP32[$596>>2] = $__ng$0;
        $871 = $595;$__ng$1 = 0;
       }
       $597 = HEAP32[$__b>>2]|0;
       $598 = ((($597)) + 12|0);
       $599 = HEAP32[$598>>2]|0;
       $600 = ((($597)) + 16|0);
       $601 = HEAP32[$600>>2]|0;
       $602 = ($599|0)==($601|0);
       if ($602) {
        $603 = HEAP32[$597>>2]|0;
        $604 = ((($603)) + 40|0);
        $605 = HEAP32[$604>>2]|0;
        __THREW__ = 0;
        (invoke_ii($605|0,($597|0))|0);
        $606 = __THREW__; __THREW__ = 0;
        $607 = $606&1;
        if ($607) {
         label = 25;
         break L4;
        } else {
         $$pre$i3$i$i166 = $$pre$i3$i$i166277;$537 = $870;$591 = $871;$__ng$0 = $__ng$1;
         continue;
        }
       } else {
        $608 = ((($599)) + 4|0);
        HEAP32[$598>>2] = $608;
        $$pre$i3$i$i166 = $$pre$i3$i$i166277;$537 = $870;$591 = $871;$__ng$0 = $__ng$1;
        continue;
       }
      }
      $609 = HEAP32[$__gb>>2]|0;
      $610 = ($609|0)!=($$lcssa416|0);
      $611 = ($__ng$0$lcssa417|0)!=(0);
      $or$cond9 = $611 & $610;
      if ($or$cond9) {
       $612 = HEAP32[$__ge>>2]|0;
       $613 = ($$lcssa416|0)==($612|0);
       if ($613) {
        __THREW__ = 0;
        invoke_viii(478,($__gb|0),($__gn|0),($__ge|0));
        $614 = __THREW__; __THREW__ = 0;
        $615 = $614&1;
        if ($615) {
         label = 26;
         break L4;
        }
        $$pre281 = HEAP32[$__gn>>2]|0;
        $617 = $$pre281;
       } else {
        $617 = $$lcssa416;
       }
       $616 = ((($617)) + 4|0);
       HEAP32[$__gn>>2] = $616;
       HEAP32[$617>>2] = $__ng$0$lcssa417;
       $872 = $616;
      } else {
       $872 = $$lcssa416;
      }
      $618 = HEAP32[$__fd>>2]|0;
      $619 = ($618|0)>(0);
      if ($619) {
       $620 = HEAP32[$__b>>2]|0;
       $621 = ($620|0)==(0|0);
       do {
        if ($621) {
         $873 = 1;
        } else {
         $622 = ((($620)) + 12|0);
         $623 = HEAP32[$622>>2]|0;
         $624 = ((($620)) + 16|0);
         $625 = HEAP32[$624>>2]|0;
         $626 = ($623|0)==($625|0);
         if ($626) {
          $627 = HEAP32[$620>>2]|0;
          $628 = ((($627)) + 36|0);
          $629 = HEAP32[$628>>2]|0;
          __THREW__ = 0;
          $630 = (invoke_ii($629|0,($620|0))|0);
          $631 = __THREW__; __THREW__ = 0;
          $632 = $631&1;
          if ($632) {
           label = 26;
           break L4;
          } else {
           $$0$i$i$i$i126 = $630;
          }
         } else {
          $633 = HEAP32[$623>>2]|0;
          $$0$i$i$i$i126 = $633;
         }
         $634 = ($$0$i$i$i$i126|0)==(-1);
         if ($634) {
          HEAP32[$__b>>2] = 0;
          $873 = 1;
          break;
         } else {
          $$pre$i$i$i128 = HEAP32[$__b>>2]|0;
          $phitmp$i$i$i129 = ($$pre$i$i$i128|0)==(0|0);
          $873 = $phitmp$i$i$i129;
          break;
         }
        }
       } while(0);
       $635 = ($$pre$i3$i$i134|0)==(0|0);
       do {
        if ($635) {
         label = 200;
        } else {
         $636 = ((($$pre$i3$i$i134)) + 12|0);
         $637 = HEAP32[$636>>2]|0;
         $638 = ((($$pre$i3$i$i134)) + 16|0);
         $639 = HEAP32[$638>>2]|0;
         $640 = ($637|0)==($639|0);
         if ($640) {
          $641 = HEAP32[$$pre$i3$i$i134>>2]|0;
          $642 = ((($641)) + 36|0);
          $643 = HEAP32[$642>>2]|0;
          __THREW__ = 0;
          $644 = (invoke_ii($643|0,($$pre$i3$i$i134|0))|0);
          $645 = __THREW__; __THREW__ = 0;
          $646 = $645&1;
          if ($646) {
           label = 26;
           break L4;
          } else {
           $$0$i$i1$i$i132 = $644;
          }
         } else {
          $647 = HEAP32[$637>>2]|0;
          $$0$i$i1$i$i132 = $647;
         }
         $648 = ($$0$i$i1$i$i132|0)==(-1);
         if ($648) {
          HEAP32[$__e>>2] = 0;
          label = 200;
          break;
         } else {
          if ($873) {
           $874 = $$pre$i3$i$i134;
           break;
          } else {
           label = 206;
           break L4;
          }
         }
        }
       } while(0);
       if ((label|0) == 200) {
        label = 0;
        if ($873) {
         label = 206;
         break L4;
        } else {
         $874 = 0;
        }
       }
       $649 = HEAP32[$__b>>2]|0;
       $650 = ((($649)) + 12|0);
       $651 = HEAP32[$650>>2]|0;
       $652 = ((($649)) + 16|0);
       $653 = HEAP32[$652>>2]|0;
       $654 = ($651|0)==($653|0);
       if ($654) {
        $655 = HEAP32[$649>>2]|0;
        $656 = ((($655)) + 36|0);
        $657 = HEAP32[$656>>2]|0;
        __THREW__ = 0;
        $658 = (invoke_ii($657|0,($649|0))|0);
        $659 = __THREW__; __THREW__ = 0;
        $660 = $659&1;
        if ($660) {
         label = 26;
         break L4;
        } else {
         $$0$i$i119 = $658;
        }
       } else {
        $661 = HEAP32[$651>>2]|0;
        $$0$i$i119 = $661;
       }
       $662 = HEAP32[$__dp>>2]|0;
       $663 = ($$0$i$i119|0)==($662|0);
       if (!($663)) {
        label = 206;
        break L4;
       }
       $666 = HEAP32[$__b>>2]|0;
       $667 = ((($666)) + 12|0);
       $668 = HEAP32[$667>>2]|0;
       $669 = ((($666)) + 16|0);
       $670 = HEAP32[$669>>2]|0;
       $671 = ($668|0)==($670|0);
       if ($671) {
        $672 = HEAP32[$666>>2]|0;
        $673 = ((($672)) + 40|0);
        $674 = HEAP32[$673>>2]|0;
        __THREW__ = 0;
        (invoke_ii($674|0,($666|0))|0);
        $675 = __THREW__; __THREW__ = 0;
        $676 = $675&1;
        if ($676) {
         label = 26;
         break L4;
        }
       } else {
        $677 = ((($668)) + 4|0);
        HEAP32[$667>>2] = $677;
       }
       $678 = ($618|0)>(0);
       if ($678) {
        $$pre$i3$i$i100382 = $874;$694 = $874;$752 = $618;
        while(1) {
         $679 = HEAP32[$__b>>2]|0;
         $680 = ($679|0)==(0|0);
         do {
          if ($680) {
           $709 = 1;
          } else {
           $681 = ((($679)) + 12|0);
           $682 = HEAP32[$681>>2]|0;
           $683 = ((($679)) + 16|0);
           $684 = HEAP32[$683>>2]|0;
           $685 = ($682|0)==($684|0);
           if ($685) {
            $686 = HEAP32[$679>>2]|0;
            $687 = ((($686)) + 36|0);
            $688 = HEAP32[$687>>2]|0;
            __THREW__ = 0;
            $689 = (invoke_ii($688|0,($679|0))|0);
            $690 = __THREW__; __THREW__ = 0;
            $691 = $690&1;
            if ($691) {
             label = 24;
             break L4;
            } else {
             $$0$i$i$i$i92 = $689;
            }
           } else {
            $692 = HEAP32[$682>>2]|0;
            $$0$i$i$i$i92 = $692;
           }
           $693 = ($$0$i$i$i$i92|0)==(-1);
           if ($693) {
            HEAP32[$__b>>2] = 0;
            $709 = 1;
            break;
           } else {
            $$pre$i$i$i94 = HEAP32[$__b>>2]|0;
            $phitmp$i$i$i95 = ($$pre$i$i$i94|0)==(0|0);
            $709 = $phitmp$i$i$i95;
            break;
           }
          }
         } while(0);
         $695 = ($694|0)==(0|0);
         do {
          if ($695) {
           $$pre$i3$i$i100282$ph = $$pre$i3$i$i100382;
           label = 224;
          } else {
           $696 = ((($694)) + 12|0);
           $697 = HEAP32[$696>>2]|0;
           $698 = ((($694)) + 16|0);
           $699 = HEAP32[$698>>2]|0;
           $700 = ($697|0)==($699|0);
           if ($700) {
            $701 = HEAP32[$694>>2]|0;
            $702 = ((($701)) + 36|0);
            $703 = HEAP32[$702>>2]|0;
            __THREW__ = 0;
            $704 = (invoke_ii($703|0,($694|0))|0);
            $705 = __THREW__; __THREW__ = 0;
            $706 = $705&1;
            if ($706) {
             label = 24;
             break L4;
            } else {
             $$0$i$i1$i$i98 = $704;
            }
           } else {
            $707 = HEAP32[$697>>2]|0;
            $$0$i$i1$i$i98 = $707;
           }
           $708 = ($$0$i$i1$i$i98|0)==(-1);
           if ($708) {
            HEAP32[$__e>>2] = 0;
            $$pre$i3$i$i100282$ph = 0;
            label = 224;
            break;
           } else {
            $phitmp$i4$i$i101 = ($$pre$i3$i$i100382|0)==(0|0);
            $tmp$i$i103 = $709 ^ $phitmp$i4$i$i101;
            if ($tmp$i$i103) {
             $$pre$i3$i$i100282306 = $$pre$i3$i$i100382;$875 = $$pre$i3$i$i100382;
             break;
            } else {
             label = 231;
             break L4;
            }
           }
          }
         } while(0);
         if ((label|0) == 224) {
          label = 0;
          if ($709) {
           label = 231;
           break L4;
          } else {
           $$pre$i3$i$i100282306 = $$pre$i3$i$i100282$ph;$875 = 0;
          }
         }
         $710 = HEAP32[$__b>>2]|0;
         $711 = ((($710)) + 12|0);
         $712 = HEAP32[$711>>2]|0;
         $713 = ((($710)) + 16|0);
         $714 = HEAP32[$713>>2]|0;
         $715 = ($712|0)==($714|0);
         if ($715) {
          $716 = HEAP32[$710>>2]|0;
          $717 = ((($716)) + 36|0);
          $718 = HEAP32[$717>>2]|0;
          __THREW__ = 0;
          $719 = (invoke_ii($718|0,($710|0))|0);
          $720 = __THREW__; __THREW__ = 0;
          $721 = $720&1;
          if ($721) {
           label = 24;
           break L4;
          } else {
           $$0$i$i86 = $719;
          }
         } else {
          $722 = HEAP32[$712>>2]|0;
          $$0$i$i86 = $722;
         }
         $723 = HEAP32[$__ct>>2]|0;
         $724 = ((($723)) + 12|0);
         $725 = HEAP32[$724>>2]|0;
         __THREW__ = 0;
         $726 = (invoke_iiii($725|0,($__ct|0),2048,($$0$i$i86|0))|0);
         $727 = __THREW__; __THREW__ = 0;
         $728 = $727&1;
         if ($728) {
          label = 24;
          break L4;
         }
         if (!($726)) {
          label = 231;
          break L4;
         }
         $731 = HEAP32[$__wn>>2]|0;
         $732 = HEAP32[$0>>2]|0;
         $733 = ($731|0)==($732|0);
         if ($733) {
          __THREW__ = 0;
          invoke_viii(484,($__wb|0),($__wn|0),($0|0));
          $734 = __THREW__; __THREW__ = 0;
          $735 = $734&1;
          if ($735) {
           label = 24;
           break L4;
          }
         }
         $736 = HEAP32[$__b>>2]|0;
         $737 = ((($736)) + 12|0);
         $738 = HEAP32[$737>>2]|0;
         $739 = ((($736)) + 16|0);
         $740 = HEAP32[$739>>2]|0;
         $741 = ($738|0)==($740|0);
         if ($741) {
          $742 = HEAP32[$736>>2]|0;
          $743 = ((($742)) + 36|0);
          $744 = HEAP32[$743>>2]|0;
          __THREW__ = 0;
          $745 = (invoke_ii($744|0,($736|0))|0);
          $746 = __THREW__; __THREW__ = 0;
          $747 = $746&1;
          if ($747) {
           label = 24;
           break L4;
          } else {
           $$0$i$i78 = $745;
          }
         } else {
          $748 = HEAP32[$738>>2]|0;
          $$0$i$i78 = $748;
         }
         $749 = HEAP32[$__wn>>2]|0;
         $750 = ((($749)) + 4|0);
         HEAP32[$__wn>>2] = $750;
         HEAP32[$749>>2] = $$0$i$i78;
         $751 = (($752) + -1)|0;
         HEAP32[$__fd>>2] = $751;
         $753 = HEAP32[$__b>>2]|0;
         $754 = ((($753)) + 12|0);
         $755 = HEAP32[$754>>2]|0;
         $756 = ((($753)) + 16|0);
         $757 = HEAP32[$756>>2]|0;
         $758 = ($755|0)==($757|0);
         if ($758) {
          $759 = HEAP32[$753>>2]|0;
          $760 = ((($759)) + 40|0);
          $761 = HEAP32[$760>>2]|0;
          __THREW__ = 0;
          (invoke_ii($761|0,($753|0))|0);
          $762 = __THREW__; __THREW__ = 0;
          $763 = $762&1;
          if ($763) {
           label = 24;
           break L4;
          }
         } else {
          $765 = ((($755)) + 4|0);
          HEAP32[$754>>2] = $765;
         }
         $764 = ($752|0)>(1);
         if ($764) {
          $$pre$i3$i$i100382 = $$pre$i3$i$i100282306;$694 = $875;$752 = $751;
         } else {
          break;
         }
        }
       }
      }
      $766 = HEAP32[$__wn>>2]|0;
      $767 = HEAP32[$__wb>>2]|0;
      $768 = ($766|0)==($767|0);
      if ($768) {
       label = 242;
       break L4;
      } else {
       $866 = $872;$__trailing_sign$1 = $__trailing_sign$0399;
      }
      break;
     }
     case 3:  {
      $190 = HEAP8[$__psn>>0]|0;
      $191 = $190 & 1;
      $192 = ($191<<24>>24)==(0);
      $193 = HEAP32[$17>>2]|0;
      $194 = $190&255;
      $195 = $194 >>> 1;
      $196 = $192 ? $195 : $193;
      $197 = HEAP8[$__nsn>>0]|0;
      $198 = $197 & 1;
      $199 = ($198<<24>>24)==(0);
      $200 = HEAP32[$18>>2]|0;
      $201 = $197&255;
      $202 = $201 >>> 1;
      $203 = $199 ? $202 : $200;
      $204 = (0 - ($203))|0;
      $205 = ($196|0)==($204|0);
      if ($205) {
       $866 = $863;$__trailing_sign$1 = $__trailing_sign$0399;
      } else {
       $206 = ($196|0)==(0);
       if ($206) {
        $248 = HEAP32[$__b>>2]|0;
        $249 = ((($248)) + 12|0);
        $250 = HEAP32[$249>>2]|0;
        $251 = ((($248)) + 16|0);
        $252 = HEAP32[$251>>2]|0;
        $253 = ($250|0)==($252|0);
        if ($253) {
         $254 = HEAP32[$248>>2]|0;
         $255 = ((($254)) + 36|0);
         $256 = HEAP32[$255>>2]|0;
         __THREW__ = 0;
         $257 = (invoke_ii($256|0,($248|0))|0);
         $258 = __THREW__; __THREW__ = 0;
         $259 = $258&1;
         if ($259) {
          label = 26;
          break L4;
         }
         $$pre299 = HEAP8[$__nsn>>0]|0;
         $$0$i$i110 = $257;$262 = $$pre299;
        } else {
         $260 = HEAP32[$250>>2]|0;
         $$0$i$i110 = $260;$262 = $197;
        }
        $261 = $262 & 1;
        $263 = ($261<<24>>24)==(0);
        $264 = HEAP32[$19>>2]|0;
        $265 = $263 ? $18 : $264;
        $266 = HEAP32[$265>>2]|0;
        $267 = ($$0$i$i110|0)==($266|0);
        if (!($267)) {
         $866 = $863;$__trailing_sign$1 = $__trailing_sign$0399;
         break L28;
        }
        $268 = HEAP32[$__b>>2]|0;
        $269 = ((($268)) + 12|0);
        $270 = HEAP32[$269>>2]|0;
        $271 = ((($268)) + 16|0);
        $272 = HEAP32[$271>>2]|0;
        $273 = ($270|0)==($272|0);
        if ($273) {
         $274 = HEAP32[$268>>2]|0;
         $275 = ((($274)) + 40|0);
         $276 = HEAP32[$275>>2]|0;
         __THREW__ = 0;
         (invoke_ii($276|0,($268|0))|0);
         $277 = __THREW__; __THREW__ = 0;
         $278 = $277&1;
         if ($278) {
          label = 26;
          break L4;
         }
        } else {
         $279 = ((($270)) + 4|0);
         HEAP32[$269>>2] = $279;
        }
        HEAP8[$__neg>>0] = 1;
        $280 = HEAP8[$__nsn>>0]|0;
        $281 = $280 & 1;
        $282 = ($281<<24>>24)==(0);
        $283 = HEAP32[$18>>2]|0;
        $284 = $280&255;
        $285 = $284 >>> 1;
        $286 = $282 ? $285 : $283;
        $287 = ($286>>>0)>(1);
        $__nsn$__trailing_sign$0 = $287 ? $__nsn : $__trailing_sign$0399;
        $866 = $863;$__trailing_sign$1 = $__nsn$__trailing_sign$0;
        break L28;
       }
       $207 = ($203|0)==(0);
       $208 = HEAP32[$__b>>2]|0;
       $209 = ((($208)) + 12|0);
       $210 = HEAP32[$209>>2]|0;
       $211 = ((($208)) + 16|0);
       $212 = HEAP32[$211>>2]|0;
       $213 = ($210|0)==($212|0);
       if ($207) {
        if ($213) {
         $214 = HEAP32[$208>>2]|0;
         $215 = ((($214)) + 36|0);
         $216 = HEAP32[$215>>2]|0;
         __THREW__ = 0;
         $217 = (invoke_ii($216|0,($208|0))|0);
         $218 = __THREW__; __THREW__ = 0;
         $219 = $218&1;
         if ($219) {
          label = 26;
          break L4;
         }
         $$pre298 = HEAP8[$__psn>>0]|0;
         $$0$i$i89 = $217;$222 = $$pre298;
        } else {
         $220 = HEAP32[$210>>2]|0;
         $$0$i$i89 = $220;$222 = $190;
        }
        $221 = $222 & 1;
        $223 = ($221<<24>>24)==(0);
        $224 = HEAP32[$20>>2]|0;
        $225 = $223 ? $17 : $224;
        $226 = HEAP32[$225>>2]|0;
        $227 = ($$0$i$i89|0)==($226|0);
        if (!($227)) {
         HEAP8[$__neg>>0] = 1;
         $866 = $863;$__trailing_sign$1 = $__trailing_sign$0399;
         break L28;
        }
        $228 = HEAP32[$__b>>2]|0;
        $229 = ((($228)) + 12|0);
        $230 = HEAP32[$229>>2]|0;
        $231 = ((($228)) + 16|0);
        $232 = HEAP32[$231>>2]|0;
        $233 = ($230|0)==($232|0);
        if ($233) {
         $234 = HEAP32[$228>>2]|0;
         $235 = ((($234)) + 40|0);
         $236 = HEAP32[$235>>2]|0;
         __THREW__ = 0;
         (invoke_ii($236|0,($228|0))|0);
         $237 = __THREW__; __THREW__ = 0;
         $238 = $237&1;
         if ($238) {
          label = 26;
          break L4;
         }
        } else {
         $239 = ((($230)) + 4|0);
         HEAP32[$229>>2] = $239;
        }
        $240 = HEAP8[$__psn>>0]|0;
        $241 = $240 & 1;
        $242 = ($241<<24>>24)==(0);
        $243 = HEAP32[$17>>2]|0;
        $244 = $240&255;
        $245 = $244 >>> 1;
        $246 = $242 ? $245 : $243;
        $247 = ($246>>>0)>(1);
        $__psn$__trailing_sign$0 = $247 ? $__psn : $__trailing_sign$0399;
        $866 = $863;$__trailing_sign$1 = $__psn$__trailing_sign$0;
        break L28;
       }
       if ($213) {
        $288 = HEAP32[$208>>2]|0;
        $289 = ((($288)) + 36|0);
        $290 = HEAP32[$289>>2]|0;
        __THREW__ = 0;
        $291 = (invoke_ii($290|0,($208|0))|0);
        $292 = __THREW__; __THREW__ = 0;
        $293 = $292&1;
        if ($293) {
         label = 26;
         break L4;
        }
        $$pre293 = HEAP8[$__psn>>0]|0;
        $$pre294 = HEAP32[$__b>>2]|0;
        $$phi$trans$insert = ((($$pre294)) + 12|0);
        $$pre295 = HEAP32[$$phi$trans$insert>>2]|0;
        $$phi$trans$insert296 = ((($$pre294)) + 16|0);
        $$pre297 = HEAP32[$$phi$trans$insert296>>2]|0;
        $$0$i$i122 = $291;$296 = $$pre293;$303 = $$pre294;$304 = $$pre295;$306 = $$pre297;
       } else {
        $294 = HEAP32[$210>>2]|0;
        $$0$i$i122 = $294;$296 = $190;$303 = $208;$304 = $210;$306 = $212;
       }
       $295 = $296 & 1;
       $297 = ($295<<24>>24)==(0);
       $298 = HEAP32[$20>>2]|0;
       $299 = $297 ? $17 : $298;
       $300 = HEAP32[$299>>2]|0;
       $301 = ($$0$i$i122|0)==($300|0);
       $302 = ((($303)) + 12|0);
       $305 = ($304|0)==($306|0);
       if ($301) {
        if ($305) {
         $307 = HEAP32[$303>>2]|0;
         $308 = ((($307)) + 40|0);
         $309 = HEAP32[$308>>2]|0;
         __THREW__ = 0;
         (invoke_ii($309|0,($303|0))|0);
         $310 = __THREW__; __THREW__ = 0;
         $311 = $310&1;
         if ($311) {
          label = 26;
          break L4;
         }
        } else {
         $312 = ((($304)) + 4|0);
         HEAP32[$302>>2] = $312;
        }
        $313 = HEAP8[$__psn>>0]|0;
        $314 = $313 & 1;
        $315 = ($314<<24>>24)==(0);
        $316 = HEAP32[$17>>2]|0;
        $317 = $313&255;
        $318 = $317 >>> 1;
        $319 = $315 ? $318 : $316;
        $320 = ($319>>>0)>(1);
        $__psn$__trailing_sign$010 = $320 ? $__psn : $__trailing_sign$0399;
        $866 = $863;$__trailing_sign$1 = $__psn$__trailing_sign$010;
        break L28;
       }
       if ($305) {
        $321 = HEAP32[$303>>2]|0;
        $322 = ((($321)) + 36|0);
        $323 = HEAP32[$322>>2]|0;
        __THREW__ = 0;
        $324 = (invoke_ii($323|0,($303|0))|0);
        $325 = __THREW__; __THREW__ = 0;
        $326 = $325&1;
        if ($326) {
         label = 26;
         break L4;
        } else {
         $$0$i$i144 = $324;
        }
       } else {
        $327 = HEAP32[$304>>2]|0;
        $$0$i$i144 = $327;
       }
       $328 = HEAP8[$__nsn>>0]|0;
       $329 = $328 & 1;
       $330 = ($329<<24>>24)==(0);
       $331 = HEAP32[$19>>2]|0;
       $332 = $330 ? $18 : $331;
       $333 = HEAP32[$332>>2]|0;
       $334 = ($$0$i$i144|0)==($333|0);
       if (!($334)) {
        label = 107;
        break L4;
       }
       $335 = HEAP32[$__b>>2]|0;
       $336 = ((($335)) + 12|0);
       $337 = HEAP32[$336>>2]|0;
       $338 = ((($335)) + 16|0);
       $339 = HEAP32[$338>>2]|0;
       $340 = ($337|0)==($339|0);
       if ($340) {
        $341 = HEAP32[$335>>2]|0;
        $342 = ((($341)) + 40|0);
        $343 = HEAP32[$342>>2]|0;
        __THREW__ = 0;
        (invoke_ii($343|0,($335|0))|0);
        $344 = __THREW__; __THREW__ = 0;
        $345 = $344&1;
        if ($345) {
         label = 26;
         break L4;
        }
       } else {
        $346 = ((($337)) + 4|0);
        HEAP32[$336>>2] = $346;
       }
       HEAP8[$__neg>>0] = 1;
       $347 = HEAP8[$__nsn>>0]|0;
       $348 = $347 & 1;
       $349 = ($348<<24>>24)==(0);
       $350 = HEAP32[$18>>2]|0;
       $351 = $347&255;
       $352 = $351 >>> 1;
       $353 = $349 ? $352 : $350;
       $354 = ($353>>>0)>(1);
       $__nsn$__trailing_sign$011 = $354 ? $__nsn : $__trailing_sign$0399;
       $866 = $863;$__trailing_sign$1 = $__nsn$__trailing_sign$011;
      }
      break;
     }
     default: {
      $866 = $863;$__trailing_sign$1 = $__trailing_sign$0399;
     }
     }
    } while(0);
    L278: do {
     if ((label|0) == 44) {
      while(1) {
       label = 0;
       $124 = HEAP32[$__b>>2]|0;
       $125 = ($124|0)==(0|0);
       do {
        if ($125) {
         $154 = 1;
        } else {
         $126 = ((($124)) + 12|0);
         $127 = HEAP32[$126>>2]|0;
         $128 = ((($124)) + 16|0);
         $129 = HEAP32[$128>>2]|0;
         $130 = ($127|0)==($129|0);
         if ($130) {
          $131 = HEAP32[$124>>2]|0;
          $132 = ((($131)) + 36|0);
          $133 = HEAP32[$132>>2]|0;
          __THREW__ = 0;
          $134 = (invoke_ii($133|0,($124|0))|0);
          $135 = __THREW__; __THREW__ = 0;
          $136 = $135&1;
          if ($136) {
           label = 21;
           break L4;
          } else {
           $$0$i$i$i$i51 = $134;
          }
         } else {
          $137 = HEAP32[$127>>2]|0;
          $$0$i$i$i$i51 = $137;
         }
         $138 = ($$0$i$i$i$i51|0)==(-1);
         if ($138) {
          HEAP32[$__b>>2] = 0;
          $154 = 1;
          break;
         } else {
          $$pre$i$i$i53 = HEAP32[$__b>>2]|0;
          $phitmp$i$i$i54 = ($$pre$i$i$i53|0)==(0|0);
          $154 = $phitmp$i$i$i54;
          break;
         }
        }
       } while(0);
       $140 = ($139|0)==(0|0);
       do {
        if ($140) {
         $$pre$i3$i$i59300 = $$pre$i3$i$i59;
         label = 57;
        } else {
         $141 = ((($139)) + 12|0);
         $142 = HEAP32[$141>>2]|0;
         $143 = ((($139)) + 16|0);
         $144 = HEAP32[$143>>2]|0;
         $145 = ($142|0)==($144|0);
         if ($145) {
          $146 = HEAP32[$139>>2]|0;
          $147 = ((($146)) + 36|0);
          $148 = HEAP32[$147>>2]|0;
          __THREW__ = 0;
          $149 = (invoke_ii($148|0,($139|0))|0);
          $150 = __THREW__; __THREW__ = 0;
          $151 = $150&1;
          if ($151) {
           label = 21;
           break L4;
          } else {
           $$0$i$i1$i$i57 = $149;
          }
         } else {
          $152 = HEAP32[$142>>2]|0;
          $$0$i$i1$i$i57 = $152;
         }
         $153 = ($$0$i$i1$i$i57|0)==(-1);
         if ($153) {
          HEAP32[$__e>>2] = 0;
          $$pre$i3$i$i59300 = 0;
          label = 57;
          break;
         } else {
          $phitmp$i4$i$i60 = ($$pre$i3$i$i59|0)==(0|0);
          $tmp$i$i62 = $154 ^ $phitmp$i4$i$i60;
          if ($tmp$i$i62) {
           $$pre$i3$i$i59302 = $$pre$i3$i$i59;$867 = $$pre$i3$i$i59;
           break;
          } else {
           $866 = $863;$__trailing_sign$1 = $__trailing_sign$0399;
           break L278;
          }
         }
        }
       } while(0);
       if ((label|0) == 57) {
        label = 0;
        if ($154) {
         $866 = $863;$__trailing_sign$1 = $__trailing_sign$0399;
         break L278;
        } else {
         $$pre$i3$i$i59302 = $$pre$i3$i$i59300;$867 = 0;
        }
       }
       $155 = HEAP32[$__b>>2]|0;
       $156 = ((($155)) + 12|0);
       $157 = HEAP32[$156>>2]|0;
       $158 = ((($155)) + 16|0);
       $159 = HEAP32[$158>>2]|0;
       $160 = ($157|0)==($159|0);
       if ($160) {
        $161 = HEAP32[$155>>2]|0;
        $162 = ((($161)) + 36|0);
        $163 = HEAP32[$162>>2]|0;
        __THREW__ = 0;
        $164 = (invoke_ii($163|0,($155|0))|0);
        $165 = __THREW__; __THREW__ = 0;
        $166 = $165&1;
        if ($166) {
         label = 21;
         break L4;
        } else {
         $$0$i$i66 = $164;
        }
       } else {
        $167 = HEAP32[$157>>2]|0;
        $$0$i$i66 = $167;
       }
       $168 = HEAP32[$__ct>>2]|0;
       $169 = ((($168)) + 12|0);
       $170 = HEAP32[$169>>2]|0;
       __THREW__ = 0;
       $171 = (invoke_iiii($170|0,($__ct|0),8192,($$0$i$i66|0))|0);
       $172 = __THREW__; __THREW__ = 0;
       $173 = $172&1;
       if ($173) {
        label = 21;
        break L4;
       }
       if (!($171)) {
        $866 = $863;$__trailing_sign$1 = $__trailing_sign$0399;
        break L278;
       }
       $174 = HEAP32[$__b>>2]|0;
       $175 = ((($174)) + 12|0);
       $176 = HEAP32[$175>>2]|0;
       $177 = ((($174)) + 16|0);
       $178 = HEAP32[$177>>2]|0;
       $179 = ($176|0)==($178|0);
       if ($179) {
        $180 = HEAP32[$174>>2]|0;
        $181 = ((($180)) + 40|0);
        $182 = HEAP32[$181>>2]|0;
        __THREW__ = 0;
        $183 = (invoke_ii($182|0,($174|0))|0);
        $184 = __THREW__; __THREW__ = 0;
        $185 = $184&1;
        if ($185) {
         label = 21;
         break L4;
        } else {
         $$0$i$i73 = $183;
        }
       } else {
        $186 = ((($176)) + 4|0);
        HEAP32[$175>>2] = $186;
        $187 = HEAP32[$176>>2]|0;
        $$0$i$i73 = $187;
       }
       __THREW__ = 0;
       invoke_vii(483,($__spaces|0),($$0$i$i73|0));
       $188 = __THREW__; __THREW__ = 0;
       $189 = $188&1;
       if ($189) {
        label = 21;
        break L4;
       } else {
        $$pre$i3$i$i59 = $$pre$i3$i$i59302;$139 = $867;
        label = 44;
       }
      }
     }
    } while(0);
    $771 = (($__p$0397) + 1)|0;
    $772 = ($771>>>0)<(4);
    if ($772) {
     $863 = $866;$__p$0397 = $771;$__trailing_sign$0399 = $__trailing_sign$1;
    } else {
     $$lcssa357 = $866;$__trailing_sign$0$lcssa = $__trailing_sign$1;
     label = 244;
     break;
    }
   }
   L314:    switch (label|0) {
    case 21: {
     $65 = ___cxa_find_matching_catch()|0;
     $66 = tempRet0;
     $lpad$phi$index = $65;$lpad$phi$index8 = $66;
     break L1;
     break;
    }
    case 22: {
     $67 = ___cxa_find_matching_catch()|0;
     $68 = tempRet0;
     $lpad$phi$index = $67;$lpad$phi$index8 = $68;
     break L1;
     break;
    }
    case 23: {
     $69 = ___cxa_find_matching_catch()|0;
     $70 = tempRet0;
     $lpad$phi$index = $69;$lpad$phi$index8 = $70;
     break L1;
     break;
    }
    case 24: {
     $71 = ___cxa_find_matching_catch()|0;
     $72 = tempRet0;
     $lpad$phi$index = $71;$lpad$phi$index8 = $72;
     break L1;
     break;
    }
    case 25: {
     $73 = ___cxa_find_matching_catch()|0;
     $74 = tempRet0;
     $lpad$phi$index = $73;$lpad$phi$index8 = $74;
     break L1;
     break;
    }
    case 26: {
     $75 = ___cxa_find_matching_catch()|0;
     $76 = tempRet0;
     $lpad$phi$index = $75;$lpad$phi$index8 = $76;
     break L1;
     break;
    }
    case 42: {
     $121 = HEAP32[$__err>>2]|0;
     $122 = $121 | 4;
     HEAP32[$__err>>2] = $122;
     $$0 = 0;
     break;
    }
    case 107: {
     $355 = HEAP32[$__err>>2]|0;
     $356 = $355 | 4;
     HEAP32[$__err>>2] = $356;
     $$0 = 0;
     break;
    }
    case 148: {
     $520 = HEAP32[$__err>>2]|0;
     $521 = $520 | 4;
     HEAP32[$__err>>2] = $521;
     $$0 = 0;
     break;
    }
    case 206: {
     $664 = HEAP32[$__err>>2]|0;
     $665 = $664 | 4;
     HEAP32[$__err>>2] = $665;
     $$0 = 0;
     break;
    }
    case 231: {
     $729 = HEAP32[$__err>>2]|0;
     $730 = $729 | 4;
     HEAP32[$__err>>2] = $730;
     $$0 = 0;
     break;
    }
    case 242: {
     $769 = HEAP32[$__err>>2]|0;
     $770 = $769 | 4;
     HEAP32[$__err>>2] = $770;
     $$0 = 0;
     break;
    }
    case 244: {
     $773 = ($__trailing_sign$0$lcssa|0)==(0|0);
     L327: do {
      if (!($773)) {
       $774 = ((($__trailing_sign$0$lcssa)) + 4|0);
       $775 = ((($__trailing_sign$0$lcssa)) + 8|0);
       $__i$0 = 1;
       L329: while(1) {
        $776 = HEAP8[$__trailing_sign$0$lcssa>>0]|0;
        $777 = $776 & 1;
        $778 = ($777<<24>>24)==(0);
        if ($778) {
         $780 = $776&255;
         $781 = $780 >>> 1;
         $783 = $781;
        } else {
         $779 = HEAP32[$774>>2]|0;
         $783 = $779;
        }
        $782 = ($__i$0>>>0)<($783>>>0);
        if (!($782)) {
         break L327;
        }
        $784 = HEAP32[$__b>>2]|0;
        $785 = ($784|0)==(0|0);
        do {
         if ($785) {
          $876 = 1;
         } else {
          $786 = ((($784)) + 12|0);
          $787 = HEAP32[$786>>2]|0;
          $788 = ((($784)) + 16|0);
          $789 = HEAP32[$788>>2]|0;
          $790 = ($787|0)==($789|0);
          if ($790) {
           $791 = HEAP32[$784>>2]|0;
           $792 = ((($791)) + 36|0);
           $793 = HEAP32[$792>>2]|0;
           __THREW__ = 0;
           $794 = (invoke_ii($793|0,($784|0))|0);
           $795 = __THREW__; __THREW__ = 0;
           $796 = $795&1;
           if ($796) {
            label = 20;
            break L329;
           } else {
            $$0$i$i$i$i = $794;
           }
          } else {
           $797 = HEAP32[$787>>2]|0;
           $$0$i$i$i$i = $797;
          }
          $798 = ($$0$i$i$i$i|0)==(-1);
          if ($798) {
           HEAP32[$__b>>2] = 0;
           $876 = 1;
           break;
          } else {
           $$pre$i$i$i = HEAP32[$__b>>2]|0;
           $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
           $876 = $phitmp$i$i$i;
           break;
          }
         }
        } while(0);
        $799 = HEAP32[$__e>>2]|0;
        $800 = ($799|0)==(0|0);
        do {
         if ($800) {
          label = 263;
         } else {
          $801 = ((($799)) + 12|0);
          $802 = HEAP32[$801>>2]|0;
          $803 = ((($799)) + 16|0);
          $804 = HEAP32[$803>>2]|0;
          $805 = ($802|0)==($804|0);
          if ($805) {
           $806 = HEAP32[$799>>2]|0;
           $807 = ((($806)) + 36|0);
           $808 = HEAP32[$807>>2]|0;
           __THREW__ = 0;
           $809 = (invoke_ii($808|0,($799|0))|0);
           $810 = __THREW__; __THREW__ = 0;
           $811 = $810&1;
           if ($811) {
            label = 20;
            break L329;
           } else {
            $$0$i$i1$i$i = $809;
           }
          } else {
           $812 = HEAP32[$802>>2]|0;
           $$0$i$i1$i$i = $812;
          }
          $813 = ($$0$i$i1$i$i|0)==(-1);
          if ($813) {
           HEAP32[$__e>>2] = 0;
           label = 263;
           break;
          } else {
           if ($876) {
            break;
           } else {
            label = 271;
            break L329;
           }
          }
         }
        } while(0);
        if ((label|0) == 263) {
         label = 0;
         if ($876) {
          label = 271;
          break;
         }
        }
        $814 = HEAP32[$__b>>2]|0;
        $815 = ((($814)) + 12|0);
        $816 = HEAP32[$815>>2]|0;
        $817 = ((($814)) + 16|0);
        $818 = HEAP32[$817>>2]|0;
        $819 = ($816|0)==($818|0);
        if ($819) {
         $820 = HEAP32[$814>>2]|0;
         $821 = ((($820)) + 36|0);
         $822 = HEAP32[$821>>2]|0;
         __THREW__ = 0;
         $823 = (invoke_ii($822|0,($814|0))|0);
         $824 = __THREW__; __THREW__ = 0;
         $825 = $824&1;
         if ($825) {
          label = 20;
          break;
         } else {
          $$0$i$i = $823;
         }
        } else {
         $826 = HEAP32[$816>>2]|0;
         $$0$i$i = $826;
        }
        $827 = HEAP8[$__trailing_sign$0$lcssa>>0]|0;
        $828 = $827 & 1;
        $829 = ($828<<24>>24)==(0);
        if ($829) {
         $832 = $774;
        } else {
         $830 = HEAP32[$775>>2]|0;
         $832 = $830;
        }
        $831 = (($832) + ($__i$0<<2)|0);
        $833 = HEAP32[$831>>2]|0;
        $834 = ($$0$i$i|0)==($833|0);
        if (!($834)) {
         label = 271;
         break;
        }
        $837 = (($__i$0) + 1)|0;
        $838 = HEAP32[$__b>>2]|0;
        $839 = ((($838)) + 12|0);
        $840 = HEAP32[$839>>2]|0;
        $841 = ((($838)) + 16|0);
        $842 = HEAP32[$841>>2]|0;
        $843 = ($840|0)==($842|0);
        if ($843) {
         $844 = HEAP32[$838>>2]|0;
         $845 = ((($844)) + 40|0);
         $846 = HEAP32[$845>>2]|0;
         __THREW__ = 0;
         (invoke_ii($846|0,($838|0))|0);
         $847 = __THREW__; __THREW__ = 0;
         $848 = $847&1;
         if ($848) {
          label = 20;
          break;
         } else {
          $__i$0 = $837;
          continue;
         }
        } else {
         $849 = ((($840)) + 4|0);
         HEAP32[$839>>2] = $849;
         $__i$0 = $837;
         continue;
        }
       }
       if ((label|0) == 20) {
        $63 = ___cxa_find_matching_catch()|0;
        $64 = tempRet0;
        $lpad$phi$index = $63;$lpad$phi$index8 = $64;
        break L1;
       }
       else if ((label|0) == 271) {
        $835 = HEAP32[$__err>>2]|0;
        $836 = $835 | 4;
        HEAP32[$__err>>2] = $836;
        $$0 = 0;
        break L314;
       }
      }
     } while(0);
     $850 = HEAP32[$__gb>>2]|0;
     $851 = ($850|0)==($$lcssa357|0);
     if ($851) {
      $$0 = 1;
     } else {
      HEAP32[$__et>>2] = 0;
      __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grp,$850,$$lcssa357,$__et);
      $852 = HEAP32[$__et>>2]|0;
      $853 = ($852|0)==(0);
      if ($853) {
       $$0 = 1;
      } else {
       $854 = HEAP32[$__err>>2]|0;
       $855 = $854 | 4;
       HEAP32[$__err>>2] = $855;
       $$0 = 0;
      }
     }
     break;
    }
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__spaces);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__nsn);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__psn);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
   $856 = HEAP32[$__gb>>2]|0;
   HEAP32[$__gb>>2] = 0;
   $857 = ($856|0)==(0|0);
   if (!($857)) {
    $858 = HEAP32[$2>>2]|0;
    __THREW__ = 0;
    invoke_vi($858|0,($856|0));
    $859 = __THREW__; __THREW__ = 0;
    $860 = $859&1;
    if ($860) {
     $861 = ___cxa_find_matching_catch(0|0)|0;
     $862 = tempRet0;
     ___clang_call_terminate($861);
     // unreachable;
    }
   }
   STACKTOP = sp;return ($$0|0);
  }
 } while(0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__spaces);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__nsn);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__psn);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
 $79 = HEAP32[$__gb>>2]|0;
 HEAP32[$__gb>>2] = 0;
 $80 = ($79|0)==(0|0);
 if (!($80)) {
  $81 = HEAP32[$2>>2]|0;
  __THREW__ = 0;
  invoke_vi($81|0,($79|0));
  $82 = __THREW__; __THREW__ = 0;
  $83 = $82&1;
  if ($83) {
   $84 = ___cxa_find_matching_catch(0|0)|0;
   $85 = tempRet0;
   ___clang_call_terminate($84);
   // unreachable;
  }
 }
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE($this,$__b,$__e,$__intl,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i$i$i = 0, $$0$i$i1$i$i = 0, $$011 = 0, $$0110 = 0, $$012 = 0, $$019 = 0, $$byval_copy = 0, $$pre = 0, $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__loc = 0, $__neg = 0, $__w$0$lcssa = 0, $__w$013 = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, $phitmp$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 432|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 424|0;
 $__wbuf = sp + 24|0;
 $__wb = sp + 16|0;
 $__wn = sp + 8|0;
 $__loc = sp + 4|0;
 $__neg = sp + 428|0;
 $0 = sp;
 $1 = $__wbuf;
 HEAP32[$__wb>>2] = $1;
 $2 = ((($__wb)) + 4|0);
 HEAP32[$2>>2] = (473);
 $3 = ((($__wbuf)) + 400|0);
 __THREW__ = 0;
 $4 = (invoke_ii(455,($__iob|0))|0);
 $5 = __THREW__; __THREW__ = 0;
 $6 = $5&1;
 if ($6) {
  $33 = ___cxa_find_matching_catch()|0;
  $34 = tempRet0;
  HEAP32[$__wb>>2] = 0;
  $$011 = $33;$$019 = $34;$95 = $__wbuf;
  label = 38;
 } else {
  HEAP32[$__loc>>2] = $4;
  __THREW__ = 0;
  $7 = (invoke_iii(452,($__loc|0),(6752|0))|0);
  $8 = __THREW__; __THREW__ = 0;
  $9 = $8&1;
  L4: do {
   if (!($9)) {
    HEAP8[$__neg>>0] = 0;
    $10 = HEAP32[$__e>>2]|0;
    HEAP32[$0>>2] = $10;
    $11 = ((($__iob)) + 4|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = $10;
    __THREW__ = 0;
    ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
    $14 = (invoke_iiiiiiiiiiii(481,($__b|0),($$byval_copy|0),($__intl|0),($__loc|0),($12|0),($__err|0),($__neg|0),($7|0),($__wb|0),($__wn|0),($3|0))|0);
    $15 = __THREW__; __THREW__ = 0;
    $16 = $15&1;
    if (!($16)) {
     if ($14) {
      $17 = HEAP8[$__v>>0]|0;
      $18 = $17 & 1;
      $19 = ($18<<24>>24)==(0);
      if ($19) {
       HEAP8[$__v>>0] = 0;
      } else {
       $20 = ((($__v)) + 8|0);
       $21 = HEAP32[$20>>2]|0;
       HEAP32[$21>>2] = 0;
      }
      $22 = ((($__v)) + 4|0);
      HEAP32[$22>>2] = 0;
      $23 = HEAP8[$__neg>>0]|0;
      $24 = ($23<<24>>24)==(0);
      if (!($24)) {
       $25 = HEAP32[$7>>2]|0;
       $26 = ((($25)) + 44|0);
       $27 = HEAP32[$26>>2]|0;
       __THREW__ = 0;
       $28 = (invoke_iii($27|0,($7|0),45)|0);
       $29 = __THREW__; __THREW__ = 0;
       $30 = $29&1;
       if ($30) {
        break;
       }
       __THREW__ = 0;
       invoke_vii(483,($__v|0),($28|0));
       $31 = __THREW__; __THREW__ = 0;
       $32 = $31&1;
       if ($32) {
        break;
       }
      }
      $35 = HEAP32[$7>>2]|0;
      $36 = ((($35)) + 44|0);
      $37 = HEAP32[$36>>2]|0;
      __THREW__ = 0;
      $38 = (invoke_iii($37|0,($7|0),48)|0);
      $39 = __THREW__; __THREW__ = 0;
      $40 = $39&1;
      if ($40) {
       break;
      }
      $41 = HEAP32[$__wb>>2]|0;
      $42 = HEAP32[$__wn>>2]|0;
      $43 = ((($42)) + -4|0);
      $44 = ($41>>>0)<($43>>>0);
      L18: do {
       if ($44) {
        $__w$013 = $41;
        while(1) {
         $45 = HEAP32[$__w$013>>2]|0;
         $46 = ($45|0)==($38|0);
         if (!($46)) {
          $__w$0$lcssa = $__w$013;
          break L18;
         }
         $47 = ((($__w$013)) + 4|0);
         $48 = ($47>>>0)<($43>>>0);
         if ($48) {
          $__w$013 = $47;
         } else {
          $__w$0$lcssa = $47;
          break;
         }
        }
       } else {
        $__w$0$lcssa = $41;
       }
      } while(0);
      __THREW__ = 0;
      (invoke_iiii(485,($__v|0),($__w$0$lcssa|0),($42|0))|0);
      $49 = __THREW__; __THREW__ = 0;
      $50 = $49&1;
      if ($50) {
       break;
      }
     }
     $51 = HEAP32[$__b>>2]|0;
     $52 = ($51|0)==(0|0);
     do {
      if ($52) {
       $100 = 1;
      } else {
       $53 = ((($51)) + 12|0);
       $54 = HEAP32[$53>>2]|0;
       $55 = ((($51)) + 16|0);
       $56 = HEAP32[$55>>2]|0;
       $57 = ($54|0)==($56|0);
       if ($57) {
        $58 = HEAP32[$51>>2]|0;
        $59 = ((($58)) + 36|0);
        $60 = HEAP32[$59>>2]|0;
        __THREW__ = 0;
        $61 = (invoke_ii($60|0,($51|0))|0);
        $62 = __THREW__; __THREW__ = 0;
        $63 = $62&1;
        if ($63) {
         break L4;
        } else {
         $$0$i$i$i$i = $61;
        }
       } else {
        $64 = HEAP32[$54>>2]|0;
        $$0$i$i$i$i = $64;
       }
       $65 = ($$0$i$i$i$i|0)==(-1);
       if ($65) {
        HEAP32[$__b>>2] = 0;
        $100 = 1;
        break;
       } else {
        $$pre$i$i$i = HEAP32[$__b>>2]|0;
        $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
        $100 = $phitmp$i$i$i;
        break;
       }
      }
     } while(0);
     $66 = ($10|0)==(0);
     do {
      if ($66) {
       label = 30;
      } else {
       $67 = ((($13)) + 12|0);
       $68 = HEAP32[$67>>2]|0;
       $69 = ((($13)) + 16|0);
       $70 = HEAP32[$69>>2]|0;
       $71 = ($68|0)==($70|0);
       if ($71) {
        $72 = $10;
        $73 = HEAP32[$72>>2]|0;
        $74 = ((($73)) + 36|0);
        $75 = HEAP32[$74>>2]|0;
        __THREW__ = 0;
        $76 = (invoke_ii($75|0,($13|0))|0);
        $77 = __THREW__; __THREW__ = 0;
        $78 = $77&1;
        if ($78) {
         break L4;
        } else {
         $$0$i$i1$i$i = $76;
        }
       } else {
        $79 = HEAP32[$68>>2]|0;
        $$0$i$i1$i$i = $79;
       }
       $80 = ($$0$i$i1$i$i|0)==(-1);
       if ($80) {
        HEAP32[$__e>>2] = 0;
        label = 30;
        break;
       } else {
        if ($100) {
         break;
        } else {
         label = 32;
         break;
        }
       }
      }
     } while(0);
     if ((label|0) == 30) {
      if ($100) {
       label = 32;
      }
     }
     if ((label|0) == 32) {
      $81 = HEAP32[$__err>>2]|0;
      $82 = $81 | 2;
      HEAP32[$__err>>2] = $82;
     }
     $83 = HEAP32[$__b>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($4)|0);
     $84 = HEAP32[$__wb>>2]|0;
     HEAP32[$__wb>>2] = 0;
     $85 = ($84|0)==(0|0);
     if (!($85)) {
      $86 = HEAP32[$2>>2]|0;
      __THREW__ = 0;
      invoke_vi($86|0,($84|0));
      $87 = __THREW__; __THREW__ = 0;
      $88 = $87&1;
      if ($88) {
       $89 = ___cxa_find_matching_catch(0|0)|0;
       $90 = tempRet0;
       ___clang_call_terminate($89);
       // unreachable;
      }
     }
     STACKTOP = sp;return ($83|0);
    }
   }
  } while(0);
  $91 = ___cxa_find_matching_catch()|0;
  $92 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($4)|0);
  $$pre = HEAP32[$__wb>>2]|0;
  HEAP32[$__wb>>2] = 0;
  $93 = ($$pre|0)==(0|0);
  if ($93) {
   $$0110 = $92;$$012 = $91;
  } else {
   $$011 = $91;$$019 = $92;$95 = $$pre;
   label = 38;
  }
 }
 if ((label|0) == 38) {
  $94 = HEAP32[$2>>2]|0;
  __THREW__ = 0;
  invoke_vi($94|0,($95|0));
  $96 = __THREW__; __THREW__ = 0;
  $97 = $96&1;
  if ($97) {
   $98 = ___cxa_find_matching_catch(0|0)|0;
   $99 = tempRet0;
   ___clang_call_terminate($98);
   // unreachable;
  } else {
   $$0110 = $$019;$$012 = $$011;
  }
 }
 ___resumeException($$012|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__111__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri($__intl,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__psn,$__nsn,$__fd) {
 $__intl = $__intl|0;
 $__loc = $__loc|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__psn = $__psn|0;
 $__nsn = $__nsn|0;
 $__fd = $__fd|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 100|0;
 $1 = sp + 88|0;
 $2 = sp + 76|0;
 $3 = sp + 64|0;
 $4 = sp + 52|0;
 $5 = sp + 48|0;
 $6 = sp + 36|0;
 $7 = sp + 24|0;
 $8 = sp + 12|0;
 $9 = sp;
 do {
  if ($__intl) {
   $10 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6472)|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = ((($11)) + 44|0);
   $13 = HEAP32[$12>>2]|0;
   FUNCTION_TABLE_vii[$13 & 1023]($0,$10);
   $14 = HEAP32[$0>>2]|0;
   HEAP8[$__pat>>0]=$14&255;HEAP8[$__pat+1>>0]=($14>>8)&255;HEAP8[$__pat+2>>0]=($14>>16)&255;HEAP8[$__pat+3>>0]=$14>>24;
   $15 = HEAP32[$10>>2]|0;
   $16 = ((($15)) + 32|0);
   $17 = HEAP32[$16>>2]|0;
   FUNCTION_TABLE_vii[$17 & 1023]($1,$10);
   $18 = HEAP8[$__nsn>>0]|0;
   $19 = $18 & 1;
   $20 = ($19<<24>>24)==(0);
   if ($20) {
    HEAP8[$__nsn>>0] = 0;
   } else {
    $21 = ((($__nsn)) + 8|0);
    $22 = HEAP32[$21>>2]|0;
    HEAP32[$22>>2] = 0;
   }
   $23 = ((($__nsn)) + 4|0);
   HEAP32[$23>>2] = 0;
   __THREW__ = 0;
   invoke_vii(486,($__nsn|0),0);
   $24 = __THREW__; __THREW__ = 0;
   $25 = $24&1;
   if ($25) {
    $26 = ___cxa_find_matching_catch(0|0)|0;
    $27 = tempRet0;
    ___clang_call_terminate($26);
    // unreachable;
   }
   ;HEAP32[$__nsn>>2]=HEAP32[$1>>2]|0;HEAP32[$__nsn+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$__nsn+8>>2]=HEAP32[$1+8>>2]|0;
   HEAP32[$1>>2] = 0;
   $28 = ((($1)) + 4|0);
   HEAP32[$28>>2] = 0;
   $29 = ((($1)) + 8|0);
   HEAP32[$29>>2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($1);
   $30 = HEAP32[$10>>2]|0;
   $31 = ((($30)) + 28|0);
   $32 = HEAP32[$31>>2]|0;
   FUNCTION_TABLE_vii[$32 & 1023]($2,$10);
   $33 = HEAP8[$__psn>>0]|0;
   $34 = $33 & 1;
   $35 = ($34<<24>>24)==(0);
   if ($35) {
    HEAP8[$__psn>>0] = 0;
   } else {
    $36 = ((($__psn)) + 8|0);
    $37 = HEAP32[$36>>2]|0;
    HEAP32[$37>>2] = 0;
   }
   $38 = ((($__psn)) + 4|0);
   HEAP32[$38>>2] = 0;
   __THREW__ = 0;
   invoke_vii(486,($__psn|0),0);
   $39 = __THREW__; __THREW__ = 0;
   $40 = $39&1;
   if ($40) {
    $41 = ___cxa_find_matching_catch(0|0)|0;
    $42 = tempRet0;
    ___clang_call_terminate($41);
    // unreachable;
   }
   ;HEAP32[$__psn>>2]=HEAP32[$2>>2]|0;HEAP32[$__psn+4>>2]=HEAP32[$2+4>>2]|0;HEAP32[$__psn+8>>2]=HEAP32[$2+8>>2]|0;
   HEAP32[$2>>2] = 0;
   $43 = ((($2)) + 4|0);
   HEAP32[$43>>2] = 0;
   $44 = ((($2)) + 8|0);
   HEAP32[$44>>2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($2);
   $45 = HEAP32[$10>>2]|0;
   $46 = ((($45)) + 12|0);
   $47 = HEAP32[$46>>2]|0;
   $48 = (FUNCTION_TABLE_ii[$47 & 1023]($10)|0);
   HEAP32[$__dp>>2] = $48;
   $49 = HEAP32[$10>>2]|0;
   $50 = ((($49)) + 16|0);
   $51 = HEAP32[$50>>2]|0;
   $52 = (FUNCTION_TABLE_ii[$51 & 1023]($10)|0);
   HEAP32[$__ts>>2] = $52;
   $53 = HEAP32[$10>>2]|0;
   $54 = ((($53)) + 20|0);
   $55 = HEAP32[$54>>2]|0;
   FUNCTION_TABLE_vii[$55 & 1023]($3,$10);
   $56 = HEAP8[$__grp>>0]|0;
   $57 = $56 & 1;
   $58 = ($57<<24>>24)==(0);
   if ($58) {
    $62 = ((($__grp)) + 1|0);
    HEAP8[$62>>0] = 0;
    HEAP8[$__grp>>0] = 0;
   } else {
    $59 = ((($__grp)) + 8|0);
    $60 = HEAP32[$59>>2]|0;
    HEAP8[$60>>0] = 0;
    $61 = ((($__grp)) + 4|0);
    HEAP32[$61>>2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(480,($__grp|0),0);
   $63 = __THREW__; __THREW__ = 0;
   $64 = $63&1;
   if ($64) {
    $65 = ___cxa_find_matching_catch(0|0)|0;
    $66 = tempRet0;
    ___clang_call_terminate($65);
    // unreachable;
   }
   ;HEAP32[$__grp>>2]=HEAP32[$3>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$3+8>>2]|0;
   HEAP32[$3>>2] = 0;
   $67 = ((($3)) + 4|0);
   HEAP32[$67>>2] = 0;
   $68 = ((($3)) + 8|0);
   HEAP32[$68>>2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
   $69 = HEAP32[$10>>2]|0;
   $70 = ((($69)) + 24|0);
   $71 = HEAP32[$70>>2]|0;
   FUNCTION_TABLE_vii[$71 & 1023]($4,$10);
   $72 = HEAP8[$__sym>>0]|0;
   $73 = $72 & 1;
   $74 = ($73<<24>>24)==(0);
   if ($74) {
    HEAP8[$__sym>>0] = 0;
   } else {
    $75 = ((($__sym)) + 8|0);
    $76 = HEAP32[$75>>2]|0;
    HEAP32[$76>>2] = 0;
   }
   $77 = ((($__sym)) + 4|0);
   HEAP32[$77>>2] = 0;
   __THREW__ = 0;
   invoke_vii(486,($__sym|0),0);
   $78 = __THREW__; __THREW__ = 0;
   $79 = $78&1;
   if ($79) {
    $80 = ___cxa_find_matching_catch(0|0)|0;
    $81 = tempRet0;
    ___clang_call_terminate($80);
    // unreachable;
   } else {
    ;HEAP32[$__sym>>2]=HEAP32[$4>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$4+8>>2]|0;
    HEAP32[$4>>2] = 0;
    $82 = ((($4)) + 4|0);
    HEAP32[$82>>2] = 0;
    $83 = ((($4)) + 8|0);
    HEAP32[$83>>2] = 0;
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($4);
    $84 = HEAP32[$10>>2]|0;
    $85 = ((($84)) + 36|0);
    $86 = HEAP32[$85>>2]|0;
    $87 = (FUNCTION_TABLE_ii[$86 & 1023]($10)|0);
    $storemerge = $87;
    break;
   }
  } else {
   $88 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6408)|0);
   $89 = HEAP32[$88>>2]|0;
   $90 = ((($89)) + 44|0);
   $91 = HEAP32[$90>>2]|0;
   FUNCTION_TABLE_vii[$91 & 1023]($5,$88);
   $92 = HEAP32[$5>>2]|0;
   HEAP8[$__pat>>0]=$92&255;HEAP8[$__pat+1>>0]=($92>>8)&255;HEAP8[$__pat+2>>0]=($92>>16)&255;HEAP8[$__pat+3>>0]=$92>>24;
   $93 = HEAP32[$88>>2]|0;
   $94 = ((($93)) + 32|0);
   $95 = HEAP32[$94>>2]|0;
   FUNCTION_TABLE_vii[$95 & 1023]($6,$88);
   $96 = HEAP8[$__nsn>>0]|0;
   $97 = $96 & 1;
   $98 = ($97<<24>>24)==(0);
   if ($98) {
    HEAP8[$__nsn>>0] = 0;
   } else {
    $99 = ((($__nsn)) + 8|0);
    $100 = HEAP32[$99>>2]|0;
    HEAP32[$100>>2] = 0;
   }
   $101 = ((($__nsn)) + 4|0);
   HEAP32[$101>>2] = 0;
   __THREW__ = 0;
   invoke_vii(486,($__nsn|0),0);
   $102 = __THREW__; __THREW__ = 0;
   $103 = $102&1;
   if ($103) {
    $104 = ___cxa_find_matching_catch(0|0)|0;
    $105 = tempRet0;
    ___clang_call_terminate($104);
    // unreachable;
   }
   ;HEAP32[$__nsn>>2]=HEAP32[$6>>2]|0;HEAP32[$__nsn+4>>2]=HEAP32[$6+4>>2]|0;HEAP32[$__nsn+8>>2]=HEAP32[$6+8>>2]|0;
   HEAP32[$6>>2] = 0;
   $106 = ((($6)) + 4|0);
   HEAP32[$106>>2] = 0;
   $107 = ((($6)) + 8|0);
   HEAP32[$107>>2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($6);
   $108 = HEAP32[$88>>2]|0;
   $109 = ((($108)) + 28|0);
   $110 = HEAP32[$109>>2]|0;
   FUNCTION_TABLE_vii[$110 & 1023]($7,$88);
   $111 = HEAP8[$__psn>>0]|0;
   $112 = $111 & 1;
   $113 = ($112<<24>>24)==(0);
   if ($113) {
    HEAP8[$__psn>>0] = 0;
   } else {
    $114 = ((($__psn)) + 8|0);
    $115 = HEAP32[$114>>2]|0;
    HEAP32[$115>>2] = 0;
   }
   $116 = ((($__psn)) + 4|0);
   HEAP32[$116>>2] = 0;
   __THREW__ = 0;
   invoke_vii(486,($__psn|0),0);
   $117 = __THREW__; __THREW__ = 0;
   $118 = $117&1;
   if ($118) {
    $119 = ___cxa_find_matching_catch(0|0)|0;
    $120 = tempRet0;
    ___clang_call_terminate($119);
    // unreachable;
   }
   ;HEAP32[$__psn>>2]=HEAP32[$7>>2]|0;HEAP32[$__psn+4>>2]=HEAP32[$7+4>>2]|0;HEAP32[$__psn+8>>2]=HEAP32[$7+8>>2]|0;
   HEAP32[$7>>2] = 0;
   $121 = ((($7)) + 4|0);
   HEAP32[$121>>2] = 0;
   $122 = ((($7)) + 8|0);
   HEAP32[$122>>2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($7);
   $123 = HEAP32[$88>>2]|0;
   $124 = ((($123)) + 12|0);
   $125 = HEAP32[$124>>2]|0;
   $126 = (FUNCTION_TABLE_ii[$125 & 1023]($88)|0);
   HEAP32[$__dp>>2] = $126;
   $127 = HEAP32[$88>>2]|0;
   $128 = ((($127)) + 16|0);
   $129 = HEAP32[$128>>2]|0;
   $130 = (FUNCTION_TABLE_ii[$129 & 1023]($88)|0);
   HEAP32[$__ts>>2] = $130;
   $131 = HEAP32[$88>>2]|0;
   $132 = ((($131)) + 20|0);
   $133 = HEAP32[$132>>2]|0;
   FUNCTION_TABLE_vii[$133 & 1023]($8,$88);
   $134 = HEAP8[$__grp>>0]|0;
   $135 = $134 & 1;
   $136 = ($135<<24>>24)==(0);
   if ($136) {
    $140 = ((($__grp)) + 1|0);
    HEAP8[$140>>0] = 0;
    HEAP8[$__grp>>0] = 0;
   } else {
    $137 = ((($__grp)) + 8|0);
    $138 = HEAP32[$137>>2]|0;
    HEAP8[$138>>0] = 0;
    $139 = ((($__grp)) + 4|0);
    HEAP32[$139>>2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(480,($__grp|0),0);
   $141 = __THREW__; __THREW__ = 0;
   $142 = $141&1;
   if ($142) {
    $143 = ___cxa_find_matching_catch(0|0)|0;
    $144 = tempRet0;
    ___clang_call_terminate($143);
    // unreachable;
   }
   ;HEAP32[$__grp>>2]=HEAP32[$8>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$8+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$8+8>>2]|0;
   HEAP32[$8>>2] = 0;
   $145 = ((($8)) + 4|0);
   HEAP32[$145>>2] = 0;
   $146 = ((($8)) + 8|0);
   HEAP32[$146>>2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
   $147 = HEAP32[$88>>2]|0;
   $148 = ((($147)) + 24|0);
   $149 = HEAP32[$148>>2]|0;
   FUNCTION_TABLE_vii[$149 & 1023]($9,$88);
   $150 = HEAP8[$__sym>>0]|0;
   $151 = $150 & 1;
   $152 = ($151<<24>>24)==(0);
   if ($152) {
    HEAP8[$__sym>>0] = 0;
   } else {
    $153 = ((($__sym)) + 8|0);
    $154 = HEAP32[$153>>2]|0;
    HEAP32[$154>>2] = 0;
   }
   $155 = ((($__sym)) + 4|0);
   HEAP32[$155>>2] = 0;
   __THREW__ = 0;
   invoke_vii(486,($__sym|0),0);
   $156 = __THREW__; __THREW__ = 0;
   $157 = $156&1;
   if ($157) {
    $158 = ___cxa_find_matching_catch(0|0)|0;
    $159 = tempRet0;
    ___clang_call_terminate($158);
    // unreachable;
   } else {
    ;HEAP32[$__sym>>2]=HEAP32[$9>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$9+8>>2]|0;
    HEAP32[$9>>2] = 0;
    $160 = ((($9)) + 4|0);
    HEAP32[$160>>2] = 0;
    $161 = ((($9)) + 8|0);
    HEAP32[$161>>2] = 0;
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($9);
    $162 = HEAP32[$88>>2]|0;
    $163 = ((($162)) + 36|0);
    $164 = HEAP32[$163>>2]|0;
    $165 = (FUNCTION_TABLE_ii[$164 & 1023]($88)|0);
    $storemerge = $165;
    break;
   }
  }
 } while(0);
 HEAP32[$__fd>>2] = $storemerge;
 STACKTOP = sp;return;
}
function __ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce($this,$__s,$__intl,$__iob,$__fl,$__units) {
 $this = $this|0;
 $__s = $__s|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__units = +$__units;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $$2 = 0, $$23 = 0, $$byval_copy = 0, $$pre = 0, $$pre20 = 0, $$pre20$pre = 0, $$pre22 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__bb = 0, $__buf = 0, $__db$0 = 0, $__digits = 0, $__dp = 0, $__fd = 0, $__grp = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0;
 var $__me = 0, $__mi = 0, $__n$0 = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 400|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 76|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $__buf = sp + 288|0;
 $__bb = sp + 72|0;
 $__digits = sp + 188|0;
 $__loc = sp + 68|0;
 $__pat = sp + 184|0;
 $__dp = sp + 181|0;
 $__ts = sp + 180|0;
 $__grp = sp + 56|0;
 $__sym = sp + 44|0;
 $__sn = sp + 32|0;
 $__fd = sp + 28|0;
 $__mbuf = sp + 80|0;
 $__mi = sp + 24|0;
 $__me = sp + 20|0;
 $0 = sp + 16|0;
 HEAP32[$__bb>>2] = $__buf;
 HEAPF64[$vararg_buffer>>3] = $__units;
 $1 = (_snprintf($__buf,100,10136,$vararg_buffer)|0);
 $2 = ($1>>>0)>(99);
 do {
  if ($2) {
   __THREW__ = 0;
   $3 = (invoke_i(457)|0);
   $4 = __THREW__; __THREW__ = 0;
   $5 = $4&1;
   if ($5) {
    $137 = 0;$138 = 0;
    label = 7;
   } else {
    __THREW__ = 0;
    HEAPF64[$vararg_buffer1>>3] = $__units;
    $6 = (invoke_iiiii(462,($__bb|0),($3|0),(10136|0),($vararg_buffer1|0))|0);
    $7 = __THREW__; __THREW__ = 0;
    $8 = $7&1;
    if ($8) {
     $137 = 0;$138 = 0;
     label = 7;
    } else {
     $9 = HEAP32[$__bb>>2]|0;
     $10 = ($9|0)==(0|0);
     if ($10) {
      __THREW__ = 0;
      invoke_v(463);
      $11 = __THREW__; __THREW__ = 0;
      $12 = $11&1;
      if ($12) {
       $137 = 0;$138 = 0;
       label = 7;
       break;
      }
      $$pre = HEAP32[$__bb>>2]|0;
      $15 = $$pre;
     } else {
      $15 = $9;
     }
     $16 = $15;
     $17 = (_malloc($6)|0);
     $18 = $17;
     $19 = ($17|0)==(0|0);
     if ($19) {
      __THREW__ = 0;
      invoke_v(463);
      $20 = __THREW__; __THREW__ = 0;
      $21 = $20&1;
      if ($21) {
       $137 = $16;$138 = $18;
       label = 7;
      } else {
       $124 = $18;$127 = $16;$__db$0 = 0;$__n$0 = $6;
       label = 10;
      }
     } else {
      $124 = $18;$127 = $16;$__db$0 = $17;$__n$0 = $6;
      label = 10;
     }
    }
   }
  } else {
   $124 = 0;$127 = 0;$__db$0 = $__digits;$__n$0 = $1;
   label = 10;
  }
 } while(0);
 if ((label|0) == 10) {
  __THREW__ = 0;
  $22 = (invoke_ii(455,($__iob|0))|0);
  $23 = __THREW__; __THREW__ = 0;
  $24 = $23&1;
  if ($24) {
   $137 = $127;$138 = $124;
   label = 7;
  } else {
   HEAP32[$__loc>>2] = $22;
   __THREW__ = 0;
   $25 = (invoke_iii(452,($__loc|0),(6760|0))|0);
   $26 = __THREW__; __THREW__ = 0;
   $27 = $26&1;
   if ($27) {
    label = 22;
   } else {
    $28 = HEAP32[$__bb>>2]|0;
    $29 = (($28) + ($__n$0)|0);
    $30 = HEAP32[$25>>2]|0;
    $31 = ((($30)) + 32|0);
    $32 = HEAP32[$31>>2]|0;
    __THREW__ = 0;
    (invoke_iiiii($32|0,($25|0),($28|0),($29|0),($__db$0|0))|0);
    $33 = __THREW__; __THREW__ = 0;
    $34 = $33&1;
    if ($34) {
     label = 22;
    } else {
     $35 = ($__n$0|0)==(0);
     if ($35) {
      $45 = 0;
     } else {
      $36 = HEAP32[$__bb>>2]|0;
      $37 = HEAP8[$36>>0]|0;
      $38 = ($37<<24>>24)==(45);
      $45 = $38;
     }
     HEAP32[$__grp>>2] = 0;
     $39 = ((($__grp)) + 4|0);
     HEAP32[$39>>2] = 0;
     $40 = ((($__grp)) + 8|0);
     HEAP32[$40>>2] = 0;
     HEAP32[$__sym>>2] = 0;
     $41 = ((($__sym)) + 4|0);
     HEAP32[$41>>2] = 0;
     $42 = ((($__sym)) + 8|0);
     HEAP32[$42>>2] = 0;
     HEAP32[$__sn>>2] = 0;
     $43 = ((($__sn)) + 4|0);
     HEAP32[$43>>2] = 0;
     $44 = ((($__sn)) + 8|0);
     HEAP32[$44>>2] = 0;
     __THREW__ = 0;
     invoke_viiiiiiiiii(487,($__intl|0),($45|0),($__loc|0),($__pat|0),($__dp|0),($__ts|0),($__grp|0),($__sym|0),($__sn|0),($__fd|0));
     $46 = __THREW__; __THREW__ = 0;
     $47 = $46&1;
     if ($47) {
      $100 = ___cxa_find_matching_catch()|0;
      $101 = tempRet0;
      $$0 = $100;$$01 = $101;$$pre20 = $22;
     } else {
      $48 = HEAP32[$__fd>>2]|0;
      $49 = ($__n$0|0)>($48|0);
      if ($49) {
       $50 = (($__n$0) - ($48))|0;
       $51 = $50 << 1;
       $52 = HEAP8[$__sn>>0]|0;
       $53 = $52 & 1;
       $54 = ($53<<24>>24)==(0);
       $55 = ((($__sn)) + 4|0);
       $56 = HEAP32[$55>>2]|0;
       $57 = $52&255;
       $58 = $57 >>> 1;
       $59 = $54 ? $58 : $56;
       $60 = HEAP8[$__sym>>0]|0;
       $61 = $60 & 1;
       $62 = ($61<<24>>24)==(0);
       $63 = ((($__sym)) + 4|0);
       $64 = HEAP32[$63>>2]|0;
       $65 = $60&255;
       $66 = $65 >>> 1;
       $67 = $62 ? $66 : $64;
       $68 = $51 | 1;
       $69 = (($68) + ($48))|0;
       $70 = (($69) + ($59))|0;
       $71 = (($70) + ($67))|0;
       $91 = $71;
      } else {
       $72 = HEAP8[$__sn>>0]|0;
       $73 = $72 & 1;
       $74 = ($73<<24>>24)==(0);
       $75 = ((($__sn)) + 4|0);
       $76 = HEAP32[$75>>2]|0;
       $77 = $72&255;
       $78 = $77 >>> 1;
       $79 = $74 ? $78 : $76;
       $80 = HEAP8[$__sym>>0]|0;
       $81 = $80 & 1;
       $82 = ($81<<24>>24)==(0);
       $83 = ((($__sym)) + 4|0);
       $84 = HEAP32[$83>>2]|0;
       $85 = $80&255;
       $86 = $85 >>> 1;
       $87 = $82 ? $86 : $84;
       $88 = (($48) + 2)|0;
       $89 = (($88) + ($79))|0;
       $90 = (($89) + ($87))|0;
       $91 = $90;
      }
      $92 = ($91>>>0)>(100);
      if ($92) {
       $93 = (_malloc($91)|0);
       $94 = $93;
       $95 = ($93|0)==(0|0);
       if ($95) {
        __THREW__ = 0;
        invoke_v(463);
        $96 = __THREW__; __THREW__ = 0;
        $97 = $96&1;
        if ($97) {
         $104 = $94;
        } else {
         $120 = $94;$__mb$0 = 0;
         label = 26;
        }
       } else {
        $120 = $94;$__mb$0 = $93;
        label = 26;
       }
      } else {
       $120 = 0;$__mb$0 = $__mbuf;
       label = 26;
      }
      if ((label|0) == 26) {
       $107 = ((($__iob)) + 4|0);
       $108 = HEAP32[$107>>2]|0;
       $109 = (($__db$0) + ($__n$0)|0);
       $110 = HEAP8[$__dp>>0]|0;
       $111 = HEAP8[$__ts>>0]|0;
       __THREW__ = 0;
       invoke_viiiiiiiiiiiiiii(488,($__mb$0|0),($__mi|0),($__me|0),($108|0),($__db$0|0),($109|0),($25|0),($45|0),($__pat|0),($110|0),($111|0),($__grp|0),($__sym|0),($__sn|0),($48|0));
       $112 = __THREW__; __THREW__ = 0;
       $113 = $112&1;
       if ($113) {
        $104 = $120;
       } else {
        $114 = HEAP32[$__s>>2]|0;
        HEAP32[$0>>2] = $114;
        $115 = HEAP32[$__mi>>2]|0;
        $116 = HEAP32[$__me>>2]|0;
        __THREW__ = 0;
        ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
        $117 = (invoke_iiiiiii(433,($$byval_copy|0),($__mb$0|0),($115|0),($116|0),($__iob|0),($__fl|0))|0);
        $118 = __THREW__; __THREW__ = 0;
        $119 = $118&1;
        if ($119) {
         $104 = $120;
        } else {
         $121 = ($120|0)==(0);
         if ($121) {
          $123 = $22;
         } else {
          $122 = $120;
          _free($122);
          $$pre22 = HEAP32[$__loc>>2]|0;
          $123 = $$pre22;
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sn);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
         (__ZNSt3__114__shared_count16__release_sharedEv($123)|0);
         $125 = ($124|0)==(0);
         if (!($125)) {
          $126 = $124;
          _free($126);
         }
         $128 = ($127|0)==(0);
         if (!($128)) {
          $129 = $127;
          _free($129);
         }
         STACKTOP = sp;return ($117|0);
        }
       }
      }
      $102 = ___cxa_find_matching_catch()|0;
      $103 = tempRet0;
      $105 = ($104|0)==(0);
      if ($105) {
       $$0 = $102;$$01 = $103;$$pre20 = $22;
      } else {
       $106 = $104;
       _free($106);
       $$pre20$pre = HEAP32[$__loc>>2]|0;
       $$0 = $102;$$01 = $103;$$pre20 = $$pre20$pre;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sn);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
     $$1 = $$0;$$12 = $$01;$130 = $$pre20;
    }
   }
   if ((label|0) == 22) {
    $98 = ___cxa_find_matching_catch()|0;
    $99 = tempRet0;
    $$1 = $98;$$12 = $99;$130 = $22;
   }
   (__ZNSt3__114__shared_count16__release_sharedEv($130)|0);
   $$2 = $$1;$$23 = $$12;$131 = $124;$134 = $127;
  }
 }
 if ((label|0) == 7) {
  $13 = ___cxa_find_matching_catch()|0;
  $14 = tempRet0;
  $$2 = $13;$$23 = $14;$131 = $138;$134 = $137;
 }
 $132 = ($131|0)==(0);
 if (!($132)) {
  $133 = $131;
  _free($133);
 }
 $135 = ($134|0)==(0);
 if (!($135)) {
  $136 = $134;
  _free($136);
 }
 ___resumeException($$2|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri($__intl,$__neg,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd) {
 $__intl = $__intl|0;
 $__neg = $__neg|0;
 $__loc = $__loc|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__sn = $__sn|0;
 $__fd = $__fd|0;
 var $$pre$phi39Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0;
 var $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 108|0;
 $1 = sp + 96|0;
 $2 = sp + 92|0;
 $3 = sp + 80|0;
 $4 = sp + 68|0;
 $5 = sp + 56|0;
 $6 = sp + 52|0;
 $7 = sp + 40|0;
 $8 = sp + 36|0;
 $9 = sp + 24|0;
 $10 = sp + 12|0;
 $11 = sp;
 do {
  if ($__intl) {
   $12 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6344)|0);
   $13 = HEAP32[$12>>2]|0;
   do {
    if ($__neg) {
     $14 = ((($13)) + 44|0);
     $15 = HEAP32[$14>>2]|0;
     FUNCTION_TABLE_vii[$15 & 1023]($0,$12);
     $16 = HEAP32[$0>>2]|0;
     HEAP8[$__pat>>0]=$16&255;HEAP8[$__pat+1>>0]=($16>>8)&255;HEAP8[$__pat+2>>0]=($16>>16)&255;HEAP8[$__pat+3>>0]=$16>>24;
     $17 = HEAP32[$12>>2]|0;
     $18 = ((($17)) + 32|0);
     $19 = HEAP32[$18>>2]|0;
     FUNCTION_TABLE_vii[$19 & 1023]($1,$12);
     $20 = HEAP8[$__sn>>0]|0;
     $21 = $20 & 1;
     $22 = ($21<<24>>24)==(0);
     if ($22) {
      $26 = ((($__sn)) + 1|0);
      HEAP8[$26>>0] = 0;
      HEAP8[$__sn>>0] = 0;
     } else {
      $23 = ((($__sn)) + 8|0);
      $24 = HEAP32[$23>>2]|0;
      HEAP8[$24>>0] = 0;
      $25 = ((($__sn)) + 4|0);
      HEAP32[$25>>2] = 0;
     }
     __THREW__ = 0;
     invoke_vii(480,($__sn|0),0);
     $27 = __THREW__; __THREW__ = 0;
     $28 = $27&1;
     if ($28) {
      $29 = ___cxa_find_matching_catch(0|0)|0;
      $30 = tempRet0;
      ___clang_call_terminate($29);
      // unreachable;
     } else {
      ;HEAP32[$__sn>>2]=HEAP32[$1>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$1+8>>2]|0;
      HEAP32[$1>>2] = 0;
      $31 = ((($1)) + 4|0);
      HEAP32[$31>>2] = 0;
      $32 = ((($1)) + 8|0);
      HEAP32[$32>>2] = 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
      $$pre$phiZ2D = $12;
      break;
     }
    } else {
     $33 = ((($13)) + 40|0);
     $34 = HEAP32[$33>>2]|0;
     FUNCTION_TABLE_vii[$34 & 1023]($2,$12);
     $35 = HEAP32[$2>>2]|0;
     HEAP8[$__pat>>0]=$35&255;HEAP8[$__pat+1>>0]=($35>>8)&255;HEAP8[$__pat+2>>0]=($35>>16)&255;HEAP8[$__pat+3>>0]=$35>>24;
     $36 = HEAP32[$12>>2]|0;
     $37 = ((($36)) + 28|0);
     $38 = HEAP32[$37>>2]|0;
     FUNCTION_TABLE_vii[$38 & 1023]($3,$12);
     $39 = HEAP8[$__sn>>0]|0;
     $40 = $39 & 1;
     $41 = ($40<<24>>24)==(0);
     if ($41) {
      $45 = ((($__sn)) + 1|0);
      HEAP8[$45>>0] = 0;
      HEAP8[$__sn>>0] = 0;
     } else {
      $42 = ((($__sn)) + 8|0);
      $43 = HEAP32[$42>>2]|0;
      HEAP8[$43>>0] = 0;
      $44 = ((($__sn)) + 4|0);
      HEAP32[$44>>2] = 0;
     }
     __THREW__ = 0;
     invoke_vii(480,($__sn|0),0);
     $46 = __THREW__; __THREW__ = 0;
     $47 = $46&1;
     if ($47) {
      $48 = ___cxa_find_matching_catch(0|0)|0;
      $49 = tempRet0;
      ___clang_call_terminate($48);
      // unreachable;
     } else {
      ;HEAP32[$__sn>>2]=HEAP32[$3>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$3+8>>2]|0;
      HEAP32[$3>>2] = 0;
      $50 = ((($3)) + 4|0);
      HEAP32[$50>>2] = 0;
      $51 = ((($3)) + 8|0);
      HEAP32[$51>>2] = 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
      $$pre$phiZ2D = $12;
      break;
     }
    }
   } while(0);
   $52 = HEAP32[$12>>2]|0;
   $53 = ((($52)) + 12|0);
   $54 = HEAP32[$53>>2]|0;
   $55 = (FUNCTION_TABLE_ii[$54 & 1023]($12)|0);
   HEAP8[$__dp>>0] = $55;
   $56 = HEAP32[$12>>2]|0;
   $57 = ((($56)) + 16|0);
   $58 = HEAP32[$57>>2]|0;
   $59 = (FUNCTION_TABLE_ii[$58 & 1023]($12)|0);
   HEAP8[$__ts>>0] = $59;
   $60 = HEAP32[$$pre$phiZ2D>>2]|0;
   $61 = ((($60)) + 20|0);
   $62 = HEAP32[$61>>2]|0;
   FUNCTION_TABLE_vii[$62 & 1023]($4,$12);
   $63 = HEAP8[$__grp>>0]|0;
   $64 = $63 & 1;
   $65 = ($64<<24>>24)==(0);
   if ($65) {
    $69 = ((($__grp)) + 1|0);
    HEAP8[$69>>0] = 0;
    HEAP8[$__grp>>0] = 0;
   } else {
    $66 = ((($__grp)) + 8|0);
    $67 = HEAP32[$66>>2]|0;
    HEAP8[$67>>0] = 0;
    $68 = ((($__grp)) + 4|0);
    HEAP32[$68>>2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(480,($__grp|0),0);
   $70 = __THREW__; __THREW__ = 0;
   $71 = $70&1;
   if ($71) {
    $72 = ___cxa_find_matching_catch(0|0)|0;
    $73 = tempRet0;
    ___clang_call_terminate($72);
    // unreachable;
   }
   ;HEAP32[$__grp>>2]=HEAP32[$4>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$4+8>>2]|0;
   HEAP32[$4>>2] = 0;
   $74 = ((($4)) + 4|0);
   HEAP32[$74>>2] = 0;
   $75 = ((($4)) + 8|0);
   HEAP32[$75>>2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
   $76 = HEAP32[$$pre$phiZ2D>>2]|0;
   $77 = ((($76)) + 24|0);
   $78 = HEAP32[$77>>2]|0;
   FUNCTION_TABLE_vii[$78 & 1023]($5,$12);
   $79 = HEAP8[$__sym>>0]|0;
   $80 = $79 & 1;
   $81 = ($80<<24>>24)==(0);
   if ($81) {
    $85 = ((($__sym)) + 1|0);
    HEAP8[$85>>0] = 0;
    HEAP8[$__sym>>0] = 0;
   } else {
    $82 = ((($__sym)) + 8|0);
    $83 = HEAP32[$82>>2]|0;
    HEAP8[$83>>0] = 0;
    $84 = ((($__sym)) + 4|0);
    HEAP32[$84>>2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(480,($__sym|0),0);
   $86 = __THREW__; __THREW__ = 0;
   $87 = $86&1;
   if ($87) {
    $88 = ___cxa_find_matching_catch(0|0)|0;
    $89 = tempRet0;
    ___clang_call_terminate($88);
    // unreachable;
   } else {
    ;HEAP32[$__sym>>2]=HEAP32[$5>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$5+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$5+8>>2]|0;
    HEAP32[$5>>2] = 0;
    $90 = ((($5)) + 4|0);
    HEAP32[$90>>2] = 0;
    $91 = ((($5)) + 8|0);
    HEAP32[$91>>2] = 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
    $92 = HEAP32[$12>>2]|0;
    $93 = ((($92)) + 36|0);
    $94 = HEAP32[$93>>2]|0;
    $95 = (FUNCTION_TABLE_ii[$94 & 1023]($12)|0);
    $storemerge = $95;
    break;
   }
  } else {
   $96 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6280)|0);
   $97 = HEAP32[$96>>2]|0;
   do {
    if ($__neg) {
     $98 = ((($97)) + 44|0);
     $99 = HEAP32[$98>>2]|0;
     FUNCTION_TABLE_vii[$99 & 1023]($6,$96);
     $100 = HEAP32[$6>>2]|0;
     HEAP8[$__pat>>0]=$100&255;HEAP8[$__pat+1>>0]=($100>>8)&255;HEAP8[$__pat+2>>0]=($100>>16)&255;HEAP8[$__pat+3>>0]=$100>>24;
     $101 = HEAP32[$96>>2]|0;
     $102 = ((($101)) + 32|0);
     $103 = HEAP32[$102>>2]|0;
     FUNCTION_TABLE_vii[$103 & 1023]($7,$96);
     $104 = HEAP8[$__sn>>0]|0;
     $105 = $104 & 1;
     $106 = ($105<<24>>24)==(0);
     if ($106) {
      $110 = ((($__sn)) + 1|0);
      HEAP8[$110>>0] = 0;
      HEAP8[$__sn>>0] = 0;
     } else {
      $107 = ((($__sn)) + 8|0);
      $108 = HEAP32[$107>>2]|0;
      HEAP8[$108>>0] = 0;
      $109 = ((($__sn)) + 4|0);
      HEAP32[$109>>2] = 0;
     }
     __THREW__ = 0;
     invoke_vii(480,($__sn|0),0);
     $111 = __THREW__; __THREW__ = 0;
     $112 = $111&1;
     if ($112) {
      $113 = ___cxa_find_matching_catch(0|0)|0;
      $114 = tempRet0;
      ___clang_call_terminate($113);
      // unreachable;
     } else {
      ;HEAP32[$__sn>>2]=HEAP32[$7>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$7+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$7+8>>2]|0;
      HEAP32[$7>>2] = 0;
      $115 = ((($7)) + 4|0);
      HEAP32[$115>>2] = 0;
      $116 = ((($7)) + 8|0);
      HEAP32[$116>>2] = 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
      $$pre$phi39Z2D = $96;
      break;
     }
    } else {
     $117 = ((($97)) + 40|0);
     $118 = HEAP32[$117>>2]|0;
     FUNCTION_TABLE_vii[$118 & 1023]($8,$96);
     $119 = HEAP32[$8>>2]|0;
     HEAP8[$__pat>>0]=$119&255;HEAP8[$__pat+1>>0]=($119>>8)&255;HEAP8[$__pat+2>>0]=($119>>16)&255;HEAP8[$__pat+3>>0]=$119>>24;
     $120 = HEAP32[$96>>2]|0;
     $121 = ((($120)) + 28|0);
     $122 = HEAP32[$121>>2]|0;
     FUNCTION_TABLE_vii[$122 & 1023]($9,$96);
     $123 = HEAP8[$__sn>>0]|0;
     $124 = $123 & 1;
     $125 = ($124<<24>>24)==(0);
     if ($125) {
      $129 = ((($__sn)) + 1|0);
      HEAP8[$129>>0] = 0;
      HEAP8[$__sn>>0] = 0;
     } else {
      $126 = ((($__sn)) + 8|0);
      $127 = HEAP32[$126>>2]|0;
      HEAP8[$127>>0] = 0;
      $128 = ((($__sn)) + 4|0);
      HEAP32[$128>>2] = 0;
     }
     __THREW__ = 0;
     invoke_vii(480,($__sn|0),0);
     $130 = __THREW__; __THREW__ = 0;
     $131 = $130&1;
     if ($131) {
      $132 = ___cxa_find_matching_catch(0|0)|0;
      $133 = tempRet0;
      ___clang_call_terminate($132);
      // unreachable;
     } else {
      ;HEAP32[$__sn>>2]=HEAP32[$9>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$9+8>>2]|0;
      HEAP32[$9>>2] = 0;
      $134 = ((($9)) + 4|0);
      HEAP32[$134>>2] = 0;
      $135 = ((($9)) + 8|0);
      HEAP32[$135>>2] = 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
      $$pre$phi39Z2D = $96;
      break;
     }
    }
   } while(0);
   $136 = HEAP32[$96>>2]|0;
   $137 = ((($136)) + 12|0);
   $138 = HEAP32[$137>>2]|0;
   $139 = (FUNCTION_TABLE_ii[$138 & 1023]($96)|0);
   HEAP8[$__dp>>0] = $139;
   $140 = HEAP32[$96>>2]|0;
   $141 = ((($140)) + 16|0);
   $142 = HEAP32[$141>>2]|0;
   $143 = (FUNCTION_TABLE_ii[$142 & 1023]($96)|0);
   HEAP8[$__ts>>0] = $143;
   $144 = HEAP32[$$pre$phi39Z2D>>2]|0;
   $145 = ((($144)) + 20|0);
   $146 = HEAP32[$145>>2]|0;
   FUNCTION_TABLE_vii[$146 & 1023]($10,$96);
   $147 = HEAP8[$__grp>>0]|0;
   $148 = $147 & 1;
   $149 = ($148<<24>>24)==(0);
   if ($149) {
    $153 = ((($__grp)) + 1|0);
    HEAP8[$153>>0] = 0;
    HEAP8[$__grp>>0] = 0;
   } else {
    $150 = ((($__grp)) + 8|0);
    $151 = HEAP32[$150>>2]|0;
    HEAP8[$151>>0] = 0;
    $152 = ((($__grp)) + 4|0);
    HEAP32[$152>>2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(480,($__grp|0),0);
   $154 = __THREW__; __THREW__ = 0;
   $155 = $154&1;
   if ($155) {
    $156 = ___cxa_find_matching_catch(0|0)|0;
    $157 = tempRet0;
    ___clang_call_terminate($156);
    // unreachable;
   }
   ;HEAP32[$__grp>>2]=HEAP32[$10>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$10+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$10+8>>2]|0;
   HEAP32[$10>>2] = 0;
   $158 = ((($10)) + 4|0);
   HEAP32[$158>>2] = 0;
   $159 = ((($10)) + 8|0);
   HEAP32[$159>>2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
   $160 = HEAP32[$$pre$phi39Z2D>>2]|0;
   $161 = ((($160)) + 24|0);
   $162 = HEAP32[$161>>2]|0;
   FUNCTION_TABLE_vii[$162 & 1023]($11,$96);
   $163 = HEAP8[$__sym>>0]|0;
   $164 = $163 & 1;
   $165 = ($164<<24>>24)==(0);
   if ($165) {
    $169 = ((($__sym)) + 1|0);
    HEAP8[$169>>0] = 0;
    HEAP8[$__sym>>0] = 0;
   } else {
    $166 = ((($__sym)) + 8|0);
    $167 = HEAP32[$166>>2]|0;
    HEAP8[$167>>0] = 0;
    $168 = ((($__sym)) + 4|0);
    HEAP32[$168>>2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(480,($__sym|0),0);
   $170 = __THREW__; __THREW__ = 0;
   $171 = $170&1;
   if ($171) {
    $172 = ___cxa_find_matching_catch(0|0)|0;
    $173 = tempRet0;
    ___clang_call_terminate($172);
    // unreachable;
   } else {
    ;HEAP32[$__sym>>2]=HEAP32[$11>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$11+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$11+8>>2]|0;
    HEAP32[$11>>2] = 0;
    $174 = ((($11)) + 4|0);
    HEAP32[$174>>2] = 0;
    $175 = ((($11)) + 8|0);
    HEAP32[$175>>2] = 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
    $176 = HEAP32[$96>>2]|0;
    $177 = ((($176)) + 36|0);
    $178 = HEAP32[$177>>2]|0;
    $179 = (FUNCTION_TABLE_ii[$178 & 1023]($96)|0);
    $storemerge = $179;
    break;
   }
  }
 } while(0);
 HEAP32[$__fd>>2] = $storemerge;
 STACKTOP = sp;return;
}
function __ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i($__mb,$__mi,$__me,$__flags,$__db,$__de,$__ct,$__neg,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd) {
 $__mb = $__mb|0;
 $__mi = $__mi|0;
 $__me = $__me|0;
 $__flags = $__flags|0;
 $__db = $__db|0;
 $__de = $__de|0;
 $__ct = $__ct|0;
 $__neg = $__neg|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__sn = $__sn|0;
 $__fd = $__fd|0;
 var $$ = 0, $$$0 = 0, $$$027 = 0, $$0$i$i$lcssa = 0, $$0$i$i35 = 0, $$0$i$i9$lcssa = 0, $$0$i$i958 = 0, $$01$i$i56 = 0, $$062 = 0, $$2 = 0, $$lcssa = 0, $$lcssa34 = 0, $$op = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0;
 var $177 = 0, $178 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__d$0$lcssa = 0, $__d$0$lcssa26 = 0, $__d$036 = 0, $__d$142 = 0, $__d$2 = 0, $__d$351 = 0, $__f$043 = 0, $__f$146 = 0;
 var $__gl$0$ph = 0, $__gl$054 = 0, $__gl$1 = 0, $__ig$053 = 0, $__ig$1 = 0, $__ng$052 = 0, $__ng$1 = 0, $__p$061 = 0, $exitcond = 0, $isascii1$i = 0, $or$cond = 0, $scevgep$sum = 0, $scevgep29 = 0, $umax28 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$__me>>2] = $__mb;
 $0 = ((($__sn)) + 4|0);
 $1 = ((($__sn)) + 8|0);
 $2 = ((($__sn)) + 1|0);
 $3 = ((($__sym)) + 4|0);
 $4 = $__flags & 512;
 $5 = ($4|0)==(0);
 $6 = ((($__sym)) + 8|0);
 $7 = ((($__sym)) + 1|0);
 $8 = ((($__ct)) + 8|0);
 $9 = ($__fd|0)>(0);
 $10 = ((($__grp)) + 4|0);
 $11 = ((($__grp)) + 8|0);
 $12 = ((($__grp)) + 1|0);
 $13 = (($__fd) + 1)|0;
 $14 = (-2 - ($__fd))|0;
 $15 = ($__fd|0)<(0);
 $$op = $__fd ^ -1;
 $16 = $15 ? $$op : -1;
 $17 = (($14) - ($16))|0;
 $18 = ($__fd|0)>(0);
 $$062 = $__db;$__p$061 = 0;
 while(1) {
  $19 = (($__pat) + ($__p$061)|0);
  $20 = HEAP8[$19>>0]|0;
  $21 = $20 << 24 >> 24;
  switch ($21|0) {
  case 0:  {
   $22 = HEAP32[$__me>>2]|0;
   HEAP32[$__mi>>2] = $22;
   $$2 = $$062;
   break;
  }
  case 2:  {
   $43 = HEAP8[$__sym>>0]|0;
   $44 = $43 & 1;
   $45 = ($44<<24>>24)==(0);
   $46 = HEAP32[$3>>2]|0;
   $47 = $43&255;
   $48 = $47 >>> 1;
   $49 = $45 ? $48 : $46;
   $50 = ($49|0)==(0);
   $or$cond = $5 | $50;
   if ($or$cond) {
    $$2 = $$062;
   } else {
    $51 = HEAP32[$6>>2]|0;
    $52 = $45 ? $7 : $51;
    $53 = (($52) + ($49)|0);
    $54 = HEAP32[$__me>>2]|0;
    $55 = ($49|0)==(0);
    if ($55) {
     $$0$i$i9$lcssa = $54;
    } else {
     $$0$i$i958 = $54;$57 = $52;
     while(1) {
      $56 = HEAP8[$57>>0]|0;
      HEAP8[$$0$i$i958>>0] = $56;
      $58 = ((($57)) + 1|0);
      $59 = ((($$0$i$i958)) + 1|0);
      $60 = ($58|0)==($53|0);
      if ($60) {
       $$0$i$i9$lcssa = $59;
       break;
      } else {
       $$0$i$i958 = $59;$57 = $58;
      }
     }
    }
    HEAP32[$__me>>2] = $$0$i$i9$lcssa;
    $$2 = $$062;
   }
   break;
  }
  case 1:  {
   $23 = HEAP32[$__me>>2]|0;
   HEAP32[$__mi>>2] = $23;
   $24 = HEAP32[$__ct>>2]|0;
   $25 = ((($24)) + 28|0);
   $26 = HEAP32[$25>>2]|0;
   $27 = (FUNCTION_TABLE_iii[$26 & 1023]($__ct,32)|0);
   $28 = HEAP32[$__me>>2]|0;
   $29 = ((($28)) + 1|0);
   HEAP32[$__me>>2] = $29;
   HEAP8[$28>>0] = $27;
   $$2 = $$062;
   break;
  }
  case 3:  {
   $30 = HEAP8[$__sn>>0]|0;
   $31 = $30 & 1;
   $32 = ($31<<24>>24)==(0);
   $33 = HEAP32[$0>>2]|0;
   $34 = $30&255;
   $35 = $34 >>> 1;
   $36 = $32 ? $35 : $33;
   $37 = ($36|0)==(0);
   if ($37) {
    $$2 = $$062;
   } else {
    $38 = HEAP32[$1>>2]|0;
    $39 = $32 ? $2 : $38;
    $40 = HEAP8[$39>>0]|0;
    $41 = HEAP32[$__me>>2]|0;
    $42 = ((($41)) + 1|0);
    HEAP32[$__me>>2] = $42;
    HEAP8[$41>>0] = $40;
    $$2 = $$062;
   }
   break;
  }
  case 4:  {
   $61 = HEAP32[$__me>>2]|0;
   $62 = ((($$062)) + 1|0);
   $$$0 = $__neg ? $62 : $$062;
   $$$027 = $$$0;
   $63 = HEAP32[$8>>2]|0;
   $64 = ($$$0>>>0)<($__de>>>0);
   L15: do {
    if ($64) {
     $__d$036 = $$$0;
     while(1) {
      $65 = HEAP8[$__d$036>>0]|0;
      $isascii1$i = ($65<<24>>24)>(-1);
      if (!($isascii1$i)) {
       $__d$0$lcssa = $__d$036;
       break L15;
      }
      $66 = $65 << 24 >> 24;
      $67 = (($63) + ($66<<1)|0);
      $68 = HEAP16[$67>>1]|0;
      $69 = $68 & 2048;
      $70 = ($69<<16>>16)==(0);
      if ($70) {
       $__d$0$lcssa = $__d$036;
       break L15;
      }
      $71 = ((($__d$036)) + 1|0);
      $72 = ($71>>>0)<($__de>>>0);
      if ($72) {
       $__d$036 = $71;
      } else {
       $__d$0$lcssa = $71;
       break;
      }
     }
    } else {
     $__d$0$lcssa = $$$0;
    }
   } while(0);
   $__d$0$lcssa26 = $__d$0$lcssa;
   if ($9) {
    $73 = (-2 - ($__d$0$lcssa26))|0;
    $74 = ($__d$0$lcssa26>>>0)>($$$027>>>0);
    $75 = $74 ? $$$027 : $__d$0$lcssa26;
    $76 = $75 ^ -1;
    $77 = (($73) - ($76))|0;
    $78 = ($17>>>0)>($77>>>0);
    $umax28 = $78 ? $17 : $77;
    $79 = ($__d$0$lcssa>>>0)>($$$0>>>0);
    $80 = $79 & $18;
    if ($80) {
     $__d$142 = $__d$0$lcssa;$__f$043 = $__fd;
     while(1) {
      $81 = ((($__d$142)) + -1|0);
      $82 = HEAP8[$81>>0]|0;
      $83 = HEAP32[$__me>>2]|0;
      $84 = ((($83)) + 1|0);
      HEAP32[$__me>>2] = $84;
      HEAP8[$83>>0] = $82;
      $85 = (($__f$043) + -1)|0;
      $86 = ($81>>>0)>($$$0>>>0);
      $87 = ($__f$043|0)>(1);
      $88 = $86 & $87;
      if ($88) {
       $__d$142 = $81;$__f$043 = $85;
      } else {
       $$lcssa = $87;
       break;
      }
     }
    } else {
     $$lcssa = $18;
    }
    $89 = (($13) + ($umax28))|0;
    $scevgep$sum = (($umax28) + 1)|0;
    $scevgep29 = (($__d$0$lcssa) + ($scevgep$sum)|0);
    if ($$lcssa) {
     $90 = HEAP32[$__ct>>2]|0;
     $91 = ((($90)) + 28|0);
     $92 = HEAP32[$91>>2]|0;
     $93 = (FUNCTION_TABLE_iii[$92 & 1023]($__ct,48)|0);
     $97 = $93;
    } else {
     $97 = 0;
    }
    $94 = ($89|0)>(0);
    $95 = HEAP32[$__me>>2]|0;
    $96 = ((($95)) + 1|0);
    HEAP32[$__me>>2] = $96;
    if ($94) {
     $98 = $95;$__f$146 = $89;
     while(1) {
      HEAP8[$98>>0] = $97;
      $99 = (($__f$146) + -1)|0;
      $100 = ($__f$146|0)>(1);
      $101 = HEAP32[$__me>>2]|0;
      $102 = ((($101)) + 1|0);
      HEAP32[$__me>>2] = $102;
      if ($100) {
       $98 = $101;$__f$146 = $99;
      } else {
       $$lcssa34 = $101;
       break;
      }
     }
    } else {
     $$lcssa34 = $95;
    }
    HEAP8[$$lcssa34>>0] = $__dp;
    $__d$2 = $scevgep29;
   } else {
    $__d$2 = $__d$0$lcssa;
   }
   $103 = ($__d$2|0)==($$$0|0);
   if ($103) {
    $104 = HEAP32[$__ct>>2]|0;
    $105 = ((($104)) + 28|0);
    $106 = HEAP32[$105>>2]|0;
    $107 = (FUNCTION_TABLE_iii[$106 & 1023]($__ct,48)|0);
    $108 = HEAP32[$__me>>2]|0;
    $109 = ((($108)) + 1|0);
    HEAP32[$__me>>2] = $109;
    HEAP8[$108>>0] = $107;
   } else {
    $110 = HEAP8[$__grp>>0]|0;
    $111 = $110 & 1;
    $112 = ($111<<24>>24)==(0);
    $113 = HEAP32[$10>>2]|0;
    $114 = $110&255;
    $115 = $114 >>> 1;
    $116 = $112 ? $115 : $113;
    $117 = ($116|0)==(0);
    if ($117) {
     $__gl$0$ph = -1;
    } else {
     $118 = HEAP32[$11>>2]|0;
     $119 = $112 ? $12 : $118;
     $120 = HEAP8[$119>>0]|0;
     $121 = $120 << 24 >> 24;
     $__gl$0$ph = $121;
    }
    $122 = ($__d$2|0)==($$$0|0);
    if (!($122)) {
     $__d$351 = $__d$2;$__gl$054 = $__gl$0$ph;$__ig$053 = 0;$__ng$052 = 0;
     while(1) {
      $123 = ($__ng$052|0)==($__gl$054|0);
      if ($123) {
       $124 = HEAP32[$__me>>2]|0;
       $125 = ((($124)) + 1|0);
       HEAP32[$__me>>2] = $125;
       HEAP8[$124>>0] = $__ts;
       $126 = (($__ig$053) + 1)|0;
       $127 = HEAP8[$__grp>>0]|0;
       $128 = $127 & 1;
       $129 = ($128<<24>>24)==(0);
       $130 = HEAP32[$10>>2]|0;
       $131 = $127&255;
       $132 = $131 >>> 1;
       $133 = $129 ? $132 : $130;
       $134 = ($126>>>0)<($133>>>0);
       if ($134) {
        $135 = HEAP32[$11>>2]|0;
        $136 = $129 ? $12 : $135;
        $137 = (($136) + ($126)|0);
        $138 = HEAP8[$137>>0]|0;
        $139 = ($138<<24>>24)==(127);
        $140 = $138 << 24 >> 24;
        $$ = $139 ? -1 : $140;
        $__gl$1 = $$;$__ig$1 = $126;$__ng$1 = 0;
       } else {
        $__gl$1 = $__ng$052;$__ig$1 = $126;$__ng$1 = 0;
       }
      } else {
       $__gl$1 = $__gl$054;$__ig$1 = $__ig$053;$__ng$1 = $__ng$052;
      }
      $141 = ((($__d$351)) + -1|0);
      $142 = HEAP8[$141>>0]|0;
      $143 = HEAP32[$__me>>2]|0;
      $144 = ((($143)) + 1|0);
      HEAP32[$__me>>2] = $144;
      HEAP8[$143>>0] = $142;
      $145 = (($__ng$1) + 1)|0;
      $146 = ($141|0)==($$$0|0);
      if ($146) {
       break;
      } else {
       $__d$351 = $141;$__gl$054 = $__gl$1;$__ig$053 = $__ig$1;$__ng$052 = $145;
      }
     }
    }
   }
   $147 = HEAP32[$__me>>2]|0;
   $148 = ($61|0)==($147|0);
   if ($148) {
    $$2 = $$$0;
   } else {
    $149 = ((($147)) + -1|0);
    $150 = ($61>>>0)<($149>>>0);
    if ($150) {
     $$01$i$i56 = $61;$153 = $149;
     while(1) {
      $151 = HEAP8[$$01$i$i56>>0]|0;
      $152 = HEAP8[$153>>0]|0;
      HEAP8[$$01$i$i56>>0] = $152;
      HEAP8[$153>>0] = $151;
      $154 = ((($$01$i$i56)) + 1|0);
      $155 = ((($153)) + -1|0);
      $156 = ($154>>>0)<($155>>>0);
      if ($156) {
       $$01$i$i56 = $154;$153 = $155;
      } else {
       $$2 = $$$0;
       break;
      }
     }
    } else {
     $$2 = $$$0;
    }
   }
   break;
  }
  default: {
   $$2 = $$062;
  }
  }
  $157 = (($__p$061) + 1)|0;
  $exitcond = ($157|0)==(4);
  if ($exitcond) {
   break;
  } else {
   $$062 = $$2;$__p$061 = $157;
  }
 }
 $158 = HEAP8[$__sn>>0]|0;
 $159 = $158 & 1;
 $160 = ($159<<24>>24)==(0);
 $161 = HEAP32[$0>>2]|0;
 $162 = $158&255;
 $163 = $162 >>> 1;
 $164 = $160 ? $163 : $161;
 $165 = ($164>>>0)>(1);
 if ($165) {
  $166 = HEAP32[$1>>2]|0;
  $167 = $160 ? $2 : $166;
  $168 = (($167) + ($164)|0);
  $169 = HEAP32[$__me>>2]|0;
  $170 = ($164|0)==(1);
  if ($170) {
   $$0$i$i$lcssa = $169;
  } else {
   $171 = ((($167)) + 1|0);
   $$0$i$i35 = $169;$173 = $171;
   while(1) {
    $172 = HEAP8[$173>>0]|0;
    HEAP8[$$0$i$i35>>0] = $172;
    $174 = ((($$0$i$i35)) + 1|0);
    $175 = ((($173)) + 1|0);
    $176 = ($175|0)==($168|0);
    if ($176) {
     $$0$i$i$lcssa = $174;
     break;
    } else {
     $$0$i$i35 = $174;$173 = $175;
    }
   }
  }
  HEAP32[$__me>>2] = $$0$i$i$lcssa;
 }
 $177 = $__flags & 176;
 if ((($177|0) == 32)) {
  $178 = HEAP32[$__me>>2]|0;
  HEAP32[$__mi>>2] = $178;
 } else if (!((($177|0) == 16))) {
  HEAP32[$__mi>>2] = $__mb;
 }
 return;
}
function __ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE($this,$__s,$__intl,$__iob,$__fl,$__digits) {
 $this = $this|0;
 $__s = $__s|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__digits = $__digits|0;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $$byval_copy = 0, $$pre = 0, $$pre18 = 0, $$pre19 = 0, $$pre19$pre = 0, $$pre21 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $__dp = 0, $__fd = 0, $__grp = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 56|0;
 $__loc = sp + 52|0;
 $__pat = sp + 164|0;
 $__dp = sp + 161|0;
 $__ts = sp + 160|0;
 $__grp = sp + 40|0;
 $__sym = sp + 28|0;
 $__sn = sp + 16|0;
 $__fd = sp + 12|0;
 $__mbuf = sp + 60|0;
 $__mi = sp + 8|0;
 $__me = sp + 4|0;
 $0 = sp;
 $1 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $1;
 __THREW__ = 0;
 $2 = (invoke_iii(452,($__loc|0),(6760|0))|0);
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 do {
  if ($4) {
   label = 13;
  } else {
   $5 = HEAP8[$__digits>>0]|0;
   $6 = $5 & 1;
   $7 = ($6<<24>>24)==(0);
   $8 = ((($__digits)) + 4|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = $5&255;
   $11 = $10 >>> 1;
   $12 = $7 ? $11 : $9;
   $13 = ($12|0)==(0);
   if ($13) {
    $32 = 0;
   } else {
    $14 = ((($__digits)) + 8|0);
    $15 = HEAP32[$14>>2]|0;
    $16 = ((($__digits)) + 1|0);
    $17 = $7 ? $16 : $15;
    $18 = HEAP8[$17>>0]|0;
    $19 = HEAP32[$2>>2]|0;
    $20 = ((($19)) + 28|0);
    $21 = HEAP32[$20>>2]|0;
    __THREW__ = 0;
    $22 = (invoke_iii($21|0,($2|0),45)|0);
    $23 = __THREW__; __THREW__ = 0;
    $24 = $23&1;
    if ($24) {
     label = 13;
     break;
    }
    $25 = ($18<<24>>24)==($22<<24>>24);
    $32 = $25;
   }
   HEAP32[$__grp>>2] = 0;
   $26 = ((($__grp)) + 4|0);
   HEAP32[$26>>2] = 0;
   $27 = ((($__grp)) + 8|0);
   HEAP32[$27>>2] = 0;
   HEAP32[$__sym>>2] = 0;
   $28 = ((($__sym)) + 4|0);
   HEAP32[$28>>2] = 0;
   $29 = ((($__sym)) + 8|0);
   HEAP32[$29>>2] = 0;
   HEAP32[$__sn>>2] = 0;
   $30 = ((($__sn)) + 4|0);
   HEAP32[$30>>2] = 0;
   $31 = ((($__sn)) + 8|0);
   HEAP32[$31>>2] = 0;
   __THREW__ = 0;
   invoke_viiiiiiiiii(487,($__intl|0),($32|0),($__loc|0),($__pat|0),($__dp|0),($__ts|0),($__grp|0),($__sym|0),($__sn|0),($__fd|0));
   $33 = __THREW__; __THREW__ = 0;
   $34 = $33&1;
   if ($34) {
    $94 = ___cxa_find_matching_catch()|0;
    $95 = tempRet0;
    $$0 = $94;$$01 = $95;$$pre19 = $1;
   } else {
    $35 = HEAP8[$__digits>>0]|0;
    $36 = $35 & 1;
    $37 = ($36<<24>>24)==(0);
    $38 = HEAP32[$8>>2]|0;
    $39 = $35&255;
    $40 = $39 >>> 1;
    $41 = $37 ? $40 : $38;
    $42 = HEAP32[$__fd>>2]|0;
    $43 = ($41|0)>($42|0);
    if ($43) {
     $44 = (($41) - ($42))|0;
     $45 = $44 << 1;
     $46 = HEAP8[$__sn>>0]|0;
     $47 = $46 & 1;
     $48 = ($47<<24>>24)==(0);
     $49 = ((($__sn)) + 4|0);
     $50 = HEAP32[$49>>2]|0;
     $51 = $46&255;
     $52 = $51 >>> 1;
     $53 = $48 ? $52 : $50;
     $54 = HEAP8[$__sym>>0]|0;
     $55 = $54 & 1;
     $56 = ($55<<24>>24)==(0);
     $57 = ((($__sym)) + 4|0);
     $58 = HEAP32[$57>>2]|0;
     $59 = $54&255;
     $60 = $59 >>> 1;
     $61 = $56 ? $60 : $58;
     $62 = $45 | 1;
     $63 = (($62) + ($42))|0;
     $64 = (($63) + ($53))|0;
     $65 = (($64) + ($61))|0;
     $85 = $65;
    } else {
     $66 = HEAP8[$__sn>>0]|0;
     $67 = $66 & 1;
     $68 = ($67<<24>>24)==(0);
     $69 = ((($__sn)) + 4|0);
     $70 = HEAP32[$69>>2]|0;
     $71 = $66&255;
     $72 = $71 >>> 1;
     $73 = $68 ? $72 : $70;
     $74 = HEAP8[$__sym>>0]|0;
     $75 = $74 & 1;
     $76 = ($75<<24>>24)==(0);
     $77 = ((($__sym)) + 4|0);
     $78 = HEAP32[$77>>2]|0;
     $79 = $74&255;
     $80 = $79 >>> 1;
     $81 = $76 ? $80 : $78;
     $82 = (($42) + 2)|0;
     $83 = (($82) + ($73))|0;
     $84 = (($83) + ($81))|0;
     $85 = $84;
    }
    $86 = ($85>>>0)>(100);
    if ($86) {
     $87 = (_malloc($85)|0);
     $88 = $87;
     $89 = ($87|0)==(0|0);
     if ($89) {
      __THREW__ = 0;
      invoke_v(463);
      $90 = __THREW__; __THREW__ = 0;
      $91 = $90&1;
      if ($91) {
       $98 = $88;
      } else {
       $$pre = HEAP8[$__digits>>0]|0;
       $$pre18 = HEAP32[$8>>2]|0;
       $104 = $$pre;$112 = $$pre18;$125 = $88;$__mb$0 = 0;
       label = 17;
      }
     } else {
      $104 = $35;$112 = $38;$125 = $88;$__mb$0 = $87;
      label = 17;
     }
    } else {
     $104 = $35;$112 = $38;$125 = 0;$__mb$0 = $__mbuf;
     label = 17;
    }
    if ((label|0) == 17) {
     $101 = ((($__iob)) + 4|0);
     $102 = HEAP32[$101>>2]|0;
     $103 = $104 & 1;
     $105 = ($103<<24>>24)==(0);
     $106 = ((($__digits)) + 8|0);
     $107 = HEAP32[$106>>2]|0;
     $108 = ((($__digits)) + 1|0);
     $109 = $105 ? $108 : $107;
     $110 = $104&255;
     $111 = $110 >>> 1;
     $113 = $105 ? $111 : $112;
     $114 = (($109) + ($113)|0);
     $115 = HEAP8[$__dp>>0]|0;
     $116 = HEAP8[$__ts>>0]|0;
     __THREW__ = 0;
     invoke_viiiiiiiiiiiiiii(488,($__mb$0|0),($__mi|0),($__me|0),($102|0),($109|0),($114|0),($2|0),($32|0),($__pat|0),($115|0),($116|0),($__grp|0),($__sym|0),($__sn|0),($42|0));
     $117 = __THREW__; __THREW__ = 0;
     $118 = $117&1;
     if ($118) {
      $98 = $125;
     } else {
      $119 = HEAP32[$__s>>2]|0;
      HEAP32[$0>>2] = $119;
      $120 = HEAP32[$__mi>>2]|0;
      $121 = HEAP32[$__me>>2]|0;
      __THREW__ = 0;
      ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
      $122 = (invoke_iiiiiii(433,($$byval_copy|0),($__mb$0|0),($120|0),($121|0),($__iob|0),($__fl|0))|0);
      $123 = __THREW__; __THREW__ = 0;
      $124 = $123&1;
      if ($124) {
       $98 = $125;
      } else {
       $126 = ($125|0)==(0);
       if ($126) {
        $128 = $1;
       } else {
        $127 = $125;
        _free($127);
        $$pre21 = HEAP32[$__loc>>2]|0;
        $128 = $$pre21;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sn);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
       (__ZNSt3__114__shared_count16__release_sharedEv($128)|0);
       STACKTOP = sp;return ($122|0);
      }
     }
    }
    $96 = ___cxa_find_matching_catch()|0;
    $97 = tempRet0;
    $99 = ($98|0)==(0);
    if ($99) {
     $$0 = $96;$$01 = $97;$$pre19 = $1;
    } else {
     $100 = $98;
     _free($100);
     $$pre19$pre = HEAP32[$__loc>>2]|0;
     $$0 = $96;$$01 = $97;$$pre19 = $$pre19$pre;
    }
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sn);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
   $$1 = $$0;$$12 = $$01;$129 = $$pre19;
  }
 } while(0);
 if ((label|0) == 13) {
  $92 = ___cxa_find_matching_catch()|0;
  $93 = tempRet0;
  $$1 = $92;$$12 = $93;$129 = $1;
 }
 (__ZNSt3__114__shared_count16__release_sharedEv($129)|0);
 ___resumeException($$1|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe($this,$__s,$__intl,$__iob,$__fl,$__units) {
 $this = $this|0;
 $__s = $__s|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__units = +$__units;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $$2 = 0, $$23 = 0, $$byval_copy = 0, $$pre = 0, $$pre17 = 0, $$pre17$pre = 0, $$pre19 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__bb = 0, $__buf = 0, $__db$0 = 0, $__digits = 0, $__dp = 0, $__fd = 0, $__grp = 0, $__loc = 0;
 var $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__n$0 = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1008|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 892|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $__buf = sp + 900|0;
 $__bb = sp + 888|0;
 $__digits = sp + 488|0;
 $__loc = sp + 480|0;
 $__pat = sp + 896|0;
 $__dp = sp + 476|0;
 $__ts = sp + 472|0;
 $__grp = sp + 460|0;
 $__sym = sp + 448|0;
 $__sn = sp + 436|0;
 $__fd = sp + 432|0;
 $__mbuf = sp + 32|0;
 $__mi = sp + 24|0;
 $__me = sp + 20|0;
 $0 = sp + 16|0;
 HEAP32[$__bb>>2] = $__buf;
 HEAPF64[$vararg_buffer>>3] = $__units;
 $1 = (_snprintf($__buf,100,10136,$vararg_buffer)|0);
 $2 = ($1>>>0)>(99);
 do {
  if ($2) {
   __THREW__ = 0;
   $3 = (invoke_i(457)|0);
   $4 = __THREW__; __THREW__ = 0;
   $5 = $4&1;
   if ($5) {
    $139 = 0;$140 = 0;
    label = 7;
   } else {
    __THREW__ = 0;
    HEAPF64[$vararg_buffer1>>3] = $__units;
    $6 = (invoke_iiiii(462,($__bb|0),($3|0),(10136|0),($vararg_buffer1|0))|0);
    $7 = __THREW__; __THREW__ = 0;
    $8 = $7&1;
    if ($8) {
     $139 = 0;$140 = 0;
     label = 7;
    } else {
     $9 = HEAP32[$__bb>>2]|0;
     $10 = ($9|0)==(0|0);
     if ($10) {
      __THREW__ = 0;
      invoke_v(463);
      $11 = __THREW__; __THREW__ = 0;
      $12 = $11&1;
      if ($12) {
       $139 = 0;$140 = 0;
       label = 7;
       break;
      }
      $$pre = HEAP32[$__bb>>2]|0;
      $15 = $$pre;
     } else {
      $15 = $9;
     }
     $16 = $15;
     $17 = $6 << 2;
     $18 = (_malloc($17)|0);
     $19 = $18;
     $20 = ($18|0)==(0|0);
     if ($20) {
      __THREW__ = 0;
      invoke_v(463);
      $21 = __THREW__; __THREW__ = 0;
      $22 = $21&1;
      if ($22) {
       $139 = $16;$140 = $19;
       label = 7;
      } else {
       $126 = $19;$129 = $16;$__db$0 = 0;$__n$0 = $6;
       label = 10;
      }
     } else {
      $126 = $19;$129 = $16;$__db$0 = $18;$__n$0 = $6;
      label = 10;
     }
    }
   }
  } else {
   $126 = 0;$129 = 0;$__db$0 = $__digits;$__n$0 = $1;
   label = 10;
  }
 } while(0);
 if ((label|0) == 10) {
  __THREW__ = 0;
  $23 = (invoke_ii(455,($__iob|0))|0);
  $24 = __THREW__; __THREW__ = 0;
  $25 = $24&1;
  if ($25) {
   $139 = $129;$140 = $126;
   label = 7;
  } else {
   HEAP32[$__loc>>2] = $23;
   __THREW__ = 0;
   $26 = (invoke_iii(452,($__loc|0),(6752|0))|0);
   $27 = __THREW__; __THREW__ = 0;
   $28 = $27&1;
   if ($28) {
    label = 22;
   } else {
    $29 = HEAP32[$__bb>>2]|0;
    $30 = (($29) + ($__n$0)|0);
    $31 = HEAP32[$26>>2]|0;
    $32 = ((($31)) + 48|0);
    $33 = HEAP32[$32>>2]|0;
    __THREW__ = 0;
    (invoke_iiiii($33|0,($26|0),($29|0),($30|0),($__db$0|0))|0);
    $34 = __THREW__; __THREW__ = 0;
    $35 = $34&1;
    if ($35) {
     label = 22;
    } else {
     $36 = ($__n$0|0)==(0);
     if ($36) {
      $46 = 0;
     } else {
      $37 = HEAP32[$__bb>>2]|0;
      $38 = HEAP8[$37>>0]|0;
      $39 = ($38<<24>>24)==(45);
      $46 = $39;
     }
     HEAP32[$__grp>>2] = 0;
     $40 = ((($__grp)) + 4|0);
     HEAP32[$40>>2] = 0;
     $41 = ((($__grp)) + 8|0);
     HEAP32[$41>>2] = 0;
     HEAP32[$__sym>>2] = 0;
     $42 = ((($__sym)) + 4|0);
     HEAP32[$42>>2] = 0;
     $43 = ((($__sym)) + 8|0);
     HEAP32[$43>>2] = 0;
     HEAP32[$__sn>>2] = 0;
     $44 = ((($__sn)) + 4|0);
     HEAP32[$44>>2] = 0;
     $45 = ((($__sn)) + 8|0);
     HEAP32[$45>>2] = 0;
     __THREW__ = 0;
     invoke_viiiiiiiiii(489,($__intl|0),($46|0),($__loc|0),($__pat|0),($__dp|0),($__ts|0),($__grp|0),($__sym|0),($__sn|0),($__fd|0));
     $47 = __THREW__; __THREW__ = 0;
     $48 = $47&1;
     if ($48) {
      $102 = ___cxa_find_matching_catch()|0;
      $103 = tempRet0;
      $$0 = $102;$$01 = $103;$$pre17 = $23;
     } else {
      $49 = HEAP32[$__fd>>2]|0;
      $50 = ($__n$0|0)>($49|0);
      if ($50) {
       $51 = (($__n$0) - ($49))|0;
       $52 = $51 << 1;
       $53 = HEAP8[$__sn>>0]|0;
       $54 = $53 & 1;
       $55 = ($54<<24>>24)==(0);
       $56 = ((($__sn)) + 4|0);
       $57 = HEAP32[$56>>2]|0;
       $58 = $53&255;
       $59 = $58 >>> 1;
       $60 = $55 ? $59 : $57;
       $61 = HEAP8[$__sym>>0]|0;
       $62 = $61 & 1;
       $63 = ($62<<24>>24)==(0);
       $64 = ((($__sym)) + 4|0);
       $65 = HEAP32[$64>>2]|0;
       $66 = $61&255;
       $67 = $66 >>> 1;
       $68 = $63 ? $67 : $65;
       $69 = $52 | 1;
       $70 = (($69) + ($49))|0;
       $71 = (($70) + ($60))|0;
       $72 = (($71) + ($68))|0;
       $92 = $72;
      } else {
       $73 = HEAP8[$__sn>>0]|0;
       $74 = $73 & 1;
       $75 = ($74<<24>>24)==(0);
       $76 = ((($__sn)) + 4|0);
       $77 = HEAP32[$76>>2]|0;
       $78 = $73&255;
       $79 = $78 >>> 1;
       $80 = $75 ? $79 : $77;
       $81 = HEAP8[$__sym>>0]|0;
       $82 = $81 & 1;
       $83 = ($82<<24>>24)==(0);
       $84 = ((($__sym)) + 4|0);
       $85 = HEAP32[$84>>2]|0;
       $86 = $81&255;
       $87 = $86 >>> 1;
       $88 = $83 ? $87 : $85;
       $89 = (($49) + 2)|0;
       $90 = (($89) + ($80))|0;
       $91 = (($90) + ($88))|0;
       $92 = $91;
      }
      $93 = ($92>>>0)>(100);
      if ($93) {
       $94 = $92 << 2;
       $95 = (_malloc($94)|0);
       $96 = $95;
       $97 = ($95|0)==(0|0);
       if ($97) {
        __THREW__ = 0;
        invoke_v(463);
        $98 = __THREW__; __THREW__ = 0;
        $99 = $98&1;
        if ($99) {
         $106 = $96;
        } else {
         $122 = $96;$__mb$0 = 0;
         label = 26;
        }
       } else {
        $122 = $96;$__mb$0 = $95;
        label = 26;
       }
      } else {
       $122 = 0;$__mb$0 = $__mbuf;
       label = 26;
      }
      if ((label|0) == 26) {
       $109 = ((($__iob)) + 4|0);
       $110 = HEAP32[$109>>2]|0;
       $111 = (($__db$0) + ($__n$0<<2)|0);
       $112 = HEAP32[$__dp>>2]|0;
       $113 = HEAP32[$__ts>>2]|0;
       __THREW__ = 0;
       invoke_viiiiiiiiiiiiiii(490,($__mb$0|0),($__mi|0),($__me|0),($110|0),($__db$0|0),($111|0),($26|0),($46|0),($__pat|0),($112|0),($113|0),($__grp|0),($__sym|0),($__sn|0),($49|0));
       $114 = __THREW__; __THREW__ = 0;
       $115 = $114&1;
       if ($115) {
        $106 = $122;
       } else {
        $116 = HEAP32[$__s>>2]|0;
        HEAP32[$0>>2] = $116;
        $117 = HEAP32[$__mi>>2]|0;
        $118 = HEAP32[$__me>>2]|0;
        __THREW__ = 0;
        ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
        $119 = (invoke_iiiiiii(469,($$byval_copy|0),($__mb$0|0),($117|0),($118|0),($__iob|0),($__fl|0))|0);
        $120 = __THREW__; __THREW__ = 0;
        $121 = $120&1;
        if ($121) {
         $106 = $122;
        } else {
         $123 = ($122|0)==(0);
         if ($123) {
          $125 = $23;
         } else {
          $124 = $122;
          _free($124);
          $$pre19 = HEAP32[$__loc>>2]|0;
          $125 = $$pre19;
         }
         __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sn);
         __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
         (__ZNSt3__114__shared_count16__release_sharedEv($125)|0);
         $127 = ($126|0)==(0);
         if (!($127)) {
          $128 = $126;
          _free($128);
         }
         $130 = ($129|0)==(0);
         if (!($130)) {
          $131 = $129;
          _free($131);
         }
         STACKTOP = sp;return ($119|0);
        }
       }
      }
      $104 = ___cxa_find_matching_catch()|0;
      $105 = tempRet0;
      $107 = ($106|0)==(0);
      if ($107) {
       $$0 = $104;$$01 = $105;$$pre17 = $23;
      } else {
       $108 = $106;
       _free($108);
       $$pre17$pre = HEAP32[$__loc>>2]|0;
       $$0 = $104;$$01 = $105;$$pre17 = $$pre17$pre;
      }
     }
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sn);
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
     $$1 = $$0;$$12 = $$01;$132 = $$pre17;
    }
   }
   if ((label|0) == 22) {
    $100 = ___cxa_find_matching_catch()|0;
    $101 = tempRet0;
    $$1 = $100;$$12 = $101;$132 = $23;
   }
   (__ZNSt3__114__shared_count16__release_sharedEv($132)|0);
   $$2 = $$1;$$23 = $$12;$133 = $126;$136 = $129;
  }
 }
 if ((label|0) == 7) {
  $13 = ___cxa_find_matching_catch()|0;
  $14 = tempRet0;
  $$2 = $13;$$23 = $14;$133 = $140;$136 = $139;
 }
 $134 = ($133|0)==(0);
 if (!($134)) {
  $135 = $133;
  _free($135);
 }
 $137 = ($136|0)==(0);
 if (!($137)) {
  $138 = $136;
  _free($138);
 }
 ___resumeException($$2|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri($__intl,$__neg,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd) {
 $__intl = $__intl|0;
 $__neg = $__neg|0;
 $__loc = $__loc|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__sn = $__sn|0;
 $__fd = $__fd|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 108|0;
 $1 = sp + 96|0;
 $2 = sp + 92|0;
 $3 = sp + 80|0;
 $4 = sp + 68|0;
 $5 = sp + 56|0;
 $6 = sp + 52|0;
 $7 = sp + 40|0;
 $8 = sp + 36|0;
 $9 = sp + 24|0;
 $10 = sp + 12|0;
 $11 = sp;
 do {
  if ($__intl) {
   $12 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6472)|0);
   $13 = HEAP32[$12>>2]|0;
   do {
    if ($__neg) {
     $14 = ((($13)) + 44|0);
     $15 = HEAP32[$14>>2]|0;
     FUNCTION_TABLE_vii[$15 & 1023]($0,$12);
     $16 = HEAP32[$0>>2]|0;
     HEAP8[$__pat>>0]=$16&255;HEAP8[$__pat+1>>0]=($16>>8)&255;HEAP8[$__pat+2>>0]=($16>>16)&255;HEAP8[$__pat+3>>0]=$16>>24;
     $17 = HEAP32[$12>>2]|0;
     $18 = ((($17)) + 32|0);
     $19 = HEAP32[$18>>2]|0;
     FUNCTION_TABLE_vii[$19 & 1023]($1,$12);
     $20 = HEAP8[$__sn>>0]|0;
     $21 = $20 & 1;
     $22 = ($21<<24>>24)==(0);
     if ($22) {
      HEAP8[$__sn>>0] = 0;
     } else {
      $23 = ((($__sn)) + 8|0);
      $24 = HEAP32[$23>>2]|0;
      HEAP32[$24>>2] = 0;
     }
     $25 = ((($__sn)) + 4|0);
     HEAP32[$25>>2] = 0;
     __THREW__ = 0;
     invoke_vii(486,($__sn|0),0);
     $26 = __THREW__; __THREW__ = 0;
     $27 = $26&1;
     if ($27) {
      $28 = ___cxa_find_matching_catch(0|0)|0;
      $29 = tempRet0;
      ___clang_call_terminate($28);
      // unreachable;
     } else {
      ;HEAP32[$__sn>>2]=HEAP32[$1>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$1+8>>2]|0;
      HEAP32[$1>>2] = 0;
      $30 = ((($1)) + 4|0);
      HEAP32[$30>>2] = 0;
      $31 = ((($1)) + 8|0);
      HEAP32[$31>>2] = 0;
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($1);
      break;
     }
    } else {
     $32 = ((($13)) + 40|0);
     $33 = HEAP32[$32>>2]|0;
     FUNCTION_TABLE_vii[$33 & 1023]($2,$12);
     $34 = HEAP32[$2>>2]|0;
     HEAP8[$__pat>>0]=$34&255;HEAP8[$__pat+1>>0]=($34>>8)&255;HEAP8[$__pat+2>>0]=($34>>16)&255;HEAP8[$__pat+3>>0]=$34>>24;
     $35 = HEAP32[$12>>2]|0;
     $36 = ((($35)) + 28|0);
     $37 = HEAP32[$36>>2]|0;
     FUNCTION_TABLE_vii[$37 & 1023]($3,$12);
     $38 = HEAP8[$__sn>>0]|0;
     $39 = $38 & 1;
     $40 = ($39<<24>>24)==(0);
     if ($40) {
      HEAP8[$__sn>>0] = 0;
     } else {
      $41 = ((($__sn)) + 8|0);
      $42 = HEAP32[$41>>2]|0;
      HEAP32[$42>>2] = 0;
     }
     $43 = ((($__sn)) + 4|0);
     HEAP32[$43>>2] = 0;
     __THREW__ = 0;
     invoke_vii(486,($__sn|0),0);
     $44 = __THREW__; __THREW__ = 0;
     $45 = $44&1;
     if ($45) {
      $46 = ___cxa_find_matching_catch(0|0)|0;
      $47 = tempRet0;
      ___clang_call_terminate($46);
      // unreachable;
     } else {
      ;HEAP32[$__sn>>2]=HEAP32[$3>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$3+8>>2]|0;
      HEAP32[$3>>2] = 0;
      $48 = ((($3)) + 4|0);
      HEAP32[$48>>2] = 0;
      $49 = ((($3)) + 8|0);
      HEAP32[$49>>2] = 0;
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($3);
      break;
     }
    }
   } while(0);
   $50 = HEAP32[$12>>2]|0;
   $51 = ((($50)) + 12|0);
   $52 = HEAP32[$51>>2]|0;
   $53 = (FUNCTION_TABLE_ii[$52 & 1023]($12)|0);
   HEAP32[$__dp>>2] = $53;
   $54 = HEAP32[$12>>2]|0;
   $55 = ((($54)) + 16|0);
   $56 = HEAP32[$55>>2]|0;
   $57 = (FUNCTION_TABLE_ii[$56 & 1023]($12)|0);
   HEAP32[$__ts>>2] = $57;
   $58 = HEAP32[$12>>2]|0;
   $59 = ((($58)) + 20|0);
   $60 = HEAP32[$59>>2]|0;
   FUNCTION_TABLE_vii[$60 & 1023]($4,$12);
   $61 = HEAP8[$__grp>>0]|0;
   $62 = $61 & 1;
   $63 = ($62<<24>>24)==(0);
   if ($63) {
    $67 = ((($__grp)) + 1|0);
    HEAP8[$67>>0] = 0;
    HEAP8[$__grp>>0] = 0;
   } else {
    $64 = ((($__grp)) + 8|0);
    $65 = HEAP32[$64>>2]|0;
    HEAP8[$65>>0] = 0;
    $66 = ((($__grp)) + 4|0);
    HEAP32[$66>>2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(480,($__grp|0),0);
   $68 = __THREW__; __THREW__ = 0;
   $69 = $68&1;
   if ($69) {
    $70 = ___cxa_find_matching_catch(0|0)|0;
    $71 = tempRet0;
    ___clang_call_terminate($70);
    // unreachable;
   }
   ;HEAP32[$__grp>>2]=HEAP32[$4>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$4+8>>2]|0;
   HEAP32[$4>>2] = 0;
   $72 = ((($4)) + 4|0);
   HEAP32[$72>>2] = 0;
   $73 = ((($4)) + 8|0);
   HEAP32[$73>>2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
   $74 = HEAP32[$12>>2]|0;
   $75 = ((($74)) + 24|0);
   $76 = HEAP32[$75>>2]|0;
   FUNCTION_TABLE_vii[$76 & 1023]($5,$12);
   $77 = HEAP8[$__sym>>0]|0;
   $78 = $77 & 1;
   $79 = ($78<<24>>24)==(0);
   if ($79) {
    HEAP8[$__sym>>0] = 0;
   } else {
    $80 = ((($__sym)) + 8|0);
    $81 = HEAP32[$80>>2]|0;
    HEAP32[$81>>2] = 0;
   }
   $82 = ((($__sym)) + 4|0);
   HEAP32[$82>>2] = 0;
   __THREW__ = 0;
   invoke_vii(486,($__sym|0),0);
   $83 = __THREW__; __THREW__ = 0;
   $84 = $83&1;
   if ($84) {
    $85 = ___cxa_find_matching_catch(0|0)|0;
    $86 = tempRet0;
    ___clang_call_terminate($85);
    // unreachable;
   } else {
    ;HEAP32[$__sym>>2]=HEAP32[$5>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$5+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$5+8>>2]|0;
    HEAP32[$5>>2] = 0;
    $87 = ((($5)) + 4|0);
    HEAP32[$87>>2] = 0;
    $88 = ((($5)) + 8|0);
    HEAP32[$88>>2] = 0;
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($5);
    $89 = HEAP32[$12>>2]|0;
    $90 = ((($89)) + 36|0);
    $91 = HEAP32[$90>>2]|0;
    $92 = (FUNCTION_TABLE_ii[$91 & 1023]($12)|0);
    $storemerge = $92;
    break;
   }
  } else {
   $93 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6408)|0);
   $94 = HEAP32[$93>>2]|0;
   do {
    if ($__neg) {
     $95 = ((($94)) + 44|0);
     $96 = HEAP32[$95>>2]|0;
     FUNCTION_TABLE_vii[$96 & 1023]($6,$93);
     $97 = HEAP32[$6>>2]|0;
     HEAP8[$__pat>>0]=$97&255;HEAP8[$__pat+1>>0]=($97>>8)&255;HEAP8[$__pat+2>>0]=($97>>16)&255;HEAP8[$__pat+3>>0]=$97>>24;
     $98 = HEAP32[$93>>2]|0;
     $99 = ((($98)) + 32|0);
     $100 = HEAP32[$99>>2]|0;
     FUNCTION_TABLE_vii[$100 & 1023]($7,$93);
     $101 = HEAP8[$__sn>>0]|0;
     $102 = $101 & 1;
     $103 = ($102<<24>>24)==(0);
     if ($103) {
      HEAP8[$__sn>>0] = 0;
     } else {
      $104 = ((($__sn)) + 8|0);
      $105 = HEAP32[$104>>2]|0;
      HEAP32[$105>>2] = 0;
     }
     $106 = ((($__sn)) + 4|0);
     HEAP32[$106>>2] = 0;
     __THREW__ = 0;
     invoke_vii(486,($__sn|0),0);
     $107 = __THREW__; __THREW__ = 0;
     $108 = $107&1;
     if ($108) {
      $109 = ___cxa_find_matching_catch(0|0)|0;
      $110 = tempRet0;
      ___clang_call_terminate($109);
      // unreachable;
     } else {
      ;HEAP32[$__sn>>2]=HEAP32[$7>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$7+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$7+8>>2]|0;
      HEAP32[$7>>2] = 0;
      $111 = ((($7)) + 4|0);
      HEAP32[$111>>2] = 0;
      $112 = ((($7)) + 8|0);
      HEAP32[$112>>2] = 0;
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($7);
      break;
     }
    } else {
     $113 = ((($94)) + 40|0);
     $114 = HEAP32[$113>>2]|0;
     FUNCTION_TABLE_vii[$114 & 1023]($8,$93);
     $115 = HEAP32[$8>>2]|0;
     HEAP8[$__pat>>0]=$115&255;HEAP8[$__pat+1>>0]=($115>>8)&255;HEAP8[$__pat+2>>0]=($115>>16)&255;HEAP8[$__pat+3>>0]=$115>>24;
     $116 = HEAP32[$93>>2]|0;
     $117 = ((($116)) + 28|0);
     $118 = HEAP32[$117>>2]|0;
     FUNCTION_TABLE_vii[$118 & 1023]($9,$93);
     $119 = HEAP8[$__sn>>0]|0;
     $120 = $119 & 1;
     $121 = ($120<<24>>24)==(0);
     if ($121) {
      HEAP8[$__sn>>0] = 0;
     } else {
      $122 = ((($__sn)) + 8|0);
      $123 = HEAP32[$122>>2]|0;
      HEAP32[$123>>2] = 0;
     }
     $124 = ((($__sn)) + 4|0);
     HEAP32[$124>>2] = 0;
     __THREW__ = 0;
     invoke_vii(486,($__sn|0),0);
     $125 = __THREW__; __THREW__ = 0;
     $126 = $125&1;
     if ($126) {
      $127 = ___cxa_find_matching_catch(0|0)|0;
      $128 = tempRet0;
      ___clang_call_terminate($127);
      // unreachable;
     } else {
      ;HEAP32[$__sn>>2]=HEAP32[$9>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$9+8>>2]|0;
      HEAP32[$9>>2] = 0;
      $129 = ((($9)) + 4|0);
      HEAP32[$129>>2] = 0;
      $130 = ((($9)) + 8|0);
      HEAP32[$130>>2] = 0;
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($9);
      break;
     }
    }
   } while(0);
   $131 = HEAP32[$93>>2]|0;
   $132 = ((($131)) + 12|0);
   $133 = HEAP32[$132>>2]|0;
   $134 = (FUNCTION_TABLE_ii[$133 & 1023]($93)|0);
   HEAP32[$__dp>>2] = $134;
   $135 = HEAP32[$93>>2]|0;
   $136 = ((($135)) + 16|0);
   $137 = HEAP32[$136>>2]|0;
   $138 = (FUNCTION_TABLE_ii[$137 & 1023]($93)|0);
   HEAP32[$__ts>>2] = $138;
   $139 = HEAP32[$93>>2]|0;
   $140 = ((($139)) + 20|0);
   $141 = HEAP32[$140>>2]|0;
   FUNCTION_TABLE_vii[$141 & 1023]($10,$93);
   $142 = HEAP8[$__grp>>0]|0;
   $143 = $142 & 1;
   $144 = ($143<<24>>24)==(0);
   if ($144) {
    $148 = ((($__grp)) + 1|0);
    HEAP8[$148>>0] = 0;
    HEAP8[$__grp>>0] = 0;
   } else {
    $145 = ((($__grp)) + 8|0);
    $146 = HEAP32[$145>>2]|0;
    HEAP8[$146>>0] = 0;
    $147 = ((($__grp)) + 4|0);
    HEAP32[$147>>2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(480,($__grp|0),0);
   $149 = __THREW__; __THREW__ = 0;
   $150 = $149&1;
   if ($150) {
    $151 = ___cxa_find_matching_catch(0|0)|0;
    $152 = tempRet0;
    ___clang_call_terminate($151);
    // unreachable;
   }
   ;HEAP32[$__grp>>2]=HEAP32[$10>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$10+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$10+8>>2]|0;
   HEAP32[$10>>2] = 0;
   $153 = ((($10)) + 4|0);
   HEAP32[$153>>2] = 0;
   $154 = ((($10)) + 8|0);
   HEAP32[$154>>2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
   $155 = HEAP32[$93>>2]|0;
   $156 = ((($155)) + 24|0);
   $157 = HEAP32[$156>>2]|0;
   FUNCTION_TABLE_vii[$157 & 1023]($11,$93);
   $158 = HEAP8[$__sym>>0]|0;
   $159 = $158 & 1;
   $160 = ($159<<24>>24)==(0);
   if ($160) {
    HEAP8[$__sym>>0] = 0;
   } else {
    $161 = ((($__sym)) + 8|0);
    $162 = HEAP32[$161>>2]|0;
    HEAP32[$162>>2] = 0;
   }
   $163 = ((($__sym)) + 4|0);
   HEAP32[$163>>2] = 0;
   __THREW__ = 0;
   invoke_vii(486,($__sym|0),0);
   $164 = __THREW__; __THREW__ = 0;
   $165 = $164&1;
   if ($165) {
    $166 = ___cxa_find_matching_catch(0|0)|0;
    $167 = tempRet0;
    ___clang_call_terminate($166);
    // unreachable;
   } else {
    ;HEAP32[$__sym>>2]=HEAP32[$11>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$11+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$11+8>>2]|0;
    HEAP32[$11>>2] = 0;
    $168 = ((($11)) + 4|0);
    HEAP32[$168>>2] = 0;
    $169 = ((($11)) + 8|0);
    HEAP32[$169>>2] = 0;
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
    $170 = HEAP32[$93>>2]|0;
    $171 = ((($170)) + 36|0);
    $172 = HEAP32[$171>>2]|0;
    $173 = (FUNCTION_TABLE_ii[$172 & 1023]($93)|0);
    $storemerge = $173;
    break;
   }
  }
 } while(0);
 HEAP32[$__fd>>2] = $storemerge;
 STACKTOP = sp;return;
}
function __ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i($__mb,$__mi,$__me,$__flags,$__db,$__de,$__ct,$__neg,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd) {
 $__mb = $__mb|0;
 $__mi = $__mi|0;
 $__me = $__me|0;
 $__flags = $__flags|0;
 $__db = $__db|0;
 $__de = $__de|0;
 $__ct = $__ct|0;
 $__neg = $__neg|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__sn = $__sn|0;
 $__fd = $__fd|0;
 var $$ = 0, $$$0 = 0, $$0$i$i30 = 0, $$0$i$i954 = 0, $$01$i$i52 = 0, $$057 = 0, $$2 = 0, $$lcssa = 0, $$lcssa63 = 0, $$lcssa64 = 0, $$lcssa65 = 0, $$lcssa67 = 0, $$op = 0, $$pre29 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0;
 var $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0;
 var $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0;
 var $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0;
 var $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__d$0$lcssa = 0;
 var $__d$031 = 0, $__d$1$lcssa = 0, $__d$137 = 0, $__d$2 = 0, $__d$347 = 0, $__f$0$lcssa = 0, $__f$038 = 0, $__f$143 = 0, $__gl$0$ph = 0, $__gl$050 = 0, $__gl$1 = 0, $__ig$049 = 0, $__ig$1 = 0, $__me$promoted = 0, $__me$promoted66 = 0, $__ng$048 = 0, $__ng$1 = 0, $__p$056 = 0, $exitcond = 0, $or$cond = 0;
 var $scevgep$i = 0, $scevgep$i10 = 0, $scevgep$sum = 0, $scevgep26 = 0, $scevgep27$sum = 0, $scevgep28 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$__me>>2] = $__mb;
 $0 = ((($__sn)) + 4|0);
 $1 = ((($__sn)) + 8|0);
 $2 = ((($__sym)) + 4|0);
 $3 = $__flags & 512;
 $4 = ($3|0)==(0);
 $5 = ((($__sym)) + 8|0);
 $6 = ($__fd|0)>(0);
 $7 = ((($__grp)) + 4|0);
 $8 = ((($__grp)) + 8|0);
 $9 = ((($__grp)) + 1|0);
 $10 = ($__fd|0)>(0);
 $$057 = $__db;$__p$056 = 0;
 while(1) {
  $11 = (($__pat) + ($__p$056)|0);
  $12 = HEAP8[$11>>0]|0;
  $13 = $12 << 24 >> 24;
  switch ($13|0) {
  case 3:  {
   $22 = HEAP8[$__sn>>0]|0;
   $23 = $22 & 1;
   $24 = ($23<<24>>24)==(0);
   $25 = HEAP32[$0>>2]|0;
   $26 = $22&255;
   $27 = $26 >>> 1;
   $28 = $24 ? $27 : $25;
   $29 = ($28|0)==(0);
   if ($29) {
    $$2 = $$057;
   } else {
    $30 = HEAP32[$1>>2]|0;
    $31 = $24 ? $0 : $30;
    $32 = HEAP32[$31>>2]|0;
    $33 = HEAP32[$__me>>2]|0;
    $34 = ((($33)) + 4|0);
    HEAP32[$__me>>2] = $34;
    HEAP32[$33>>2] = $32;
    $$2 = $$057;
   }
   break;
  }
  case 0:  {
   $14 = HEAP32[$__me>>2]|0;
   HEAP32[$__mi>>2] = $14;
   $$2 = $$057;
   break;
  }
  case 1:  {
   $15 = HEAP32[$__me>>2]|0;
   HEAP32[$__mi>>2] = $15;
   $16 = HEAP32[$__ct>>2]|0;
   $17 = ((($16)) + 44|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = (FUNCTION_TABLE_iii[$18 & 1023]($__ct,32)|0);
   $20 = HEAP32[$__me>>2]|0;
   $21 = ((($20)) + 4|0);
   HEAP32[$__me>>2] = $21;
   HEAP32[$20>>2] = $19;
   $$2 = $$057;
   break;
  }
  case 4:  {
   $53 = HEAP32[$__me>>2]|0;
   $54 = ((($$057)) + 4|0);
   $$$0 = $__neg ? $54 : $$057;
   $55 = ($$$0>>>0)<($__de>>>0);
   L9: do {
    if ($55) {
     $__d$031 = $$$0;
     while(1) {
      $56 = HEAP32[$__d$031>>2]|0;
      $57 = HEAP32[$__ct>>2]|0;
      $58 = ((($57)) + 12|0);
      $59 = HEAP32[$58>>2]|0;
      $60 = (FUNCTION_TABLE_iiii[$59 & 1023]($__ct,2048,$56)|0);
      if (!($60)) {
       $__d$0$lcssa = $__d$031;
       break L9;
      }
      $61 = ((($__d$031)) + 4|0);
      $62 = ($61>>>0)<($__de>>>0);
      if ($62) {
       $__d$031 = $61;
      } else {
       $__d$0$lcssa = $61;
       break;
      }
     }
    } else {
     $__d$0$lcssa = $$$0;
    }
   } while(0);
   if ($6) {
    $63 = ($__d$0$lcssa>>>0)>($$$0>>>0);
    $64 = $63 & $10;
    if ($64) {
     $__me$promoted66 = HEAP32[$__me>>2]|0;
     $68 = $__me$promoted66;$__d$137 = $__d$0$lcssa;$__f$038 = $__fd;
     while(1) {
      $65 = ((($__d$137)) + -4|0);
      $66 = HEAP32[$65>>2]|0;
      $67 = ((($68)) + 4|0);
      HEAP32[$68>>2] = $66;
      $69 = (($__f$038) + -1)|0;
      $70 = ($65>>>0)>($$$0>>>0);
      $71 = ($__f$038|0)>(1);
      $72 = $70 & $71;
      if ($72) {
       $68 = $67;$__d$137 = $65;$__f$038 = $69;
      } else {
       $$lcssa63 = $65;$$lcssa64 = $69;$$lcssa65 = $71;$$lcssa67 = $67;
       break;
      }
     }
     HEAP32[$__me>>2] = $$lcssa67;
     $$lcssa = $$lcssa65;$__d$1$lcssa = $$lcssa63;$__f$0$lcssa = $$lcssa64;
    } else {
     $$lcssa = $10;$__d$1$lcssa = $__d$0$lcssa;$__f$0$lcssa = $__fd;
    }
    if ($$lcssa) {
     $73 = HEAP32[$__ct>>2]|0;
     $74 = ((($73)) + 44|0);
     $75 = HEAP32[$74>>2]|0;
     $76 = (FUNCTION_TABLE_iii[$75 & 1023]($__ct,48)|0);
     $83 = $76;
    } else {
     $83 = 0;
    }
    $__me$promoted = HEAP32[$__me>>2]|0;
    $77 = ($__f$0$lcssa|0)<(0);
    $$op = $__f$0$lcssa ^ -1;
    $78 = $77 ? $$op : -1;
    $79 = (($__f$0$lcssa) + ($78))|0;
    $80 = ($__f$0$lcssa|0)>(0);
    if ($80) {
     $82 = $__me$promoted;$__f$143 = $__f$0$lcssa;
     while(1) {
      $81 = ((($82)) + 4|0);
      HEAP32[$82>>2] = $83;
      $84 = (($__f$143) + -1)|0;
      $85 = ($__f$143|0)>(1);
      if ($85) {
       $82 = $81;$__f$143 = $84;
      } else {
       break;
      }
     }
    }
    $scevgep$sum = (($79) + 2)|0;
    $scevgep26 = (($__me$promoted) + ($scevgep$sum<<2)|0);
    $scevgep27$sum = (($79) + 1)|0;
    $scevgep28 = (($__me$promoted) + ($scevgep27$sum<<2)|0);
    HEAP32[$__me>>2] = $scevgep26;
    HEAP32[$scevgep28>>2] = $__dp;
    $__d$2 = $__d$1$lcssa;
   } else {
    $__d$2 = $__d$0$lcssa;
   }
   $86 = ($__d$2|0)==($$$0|0);
   if ($86) {
    $87 = HEAP32[$__ct>>2]|0;
    $88 = ((($87)) + 44|0);
    $89 = HEAP32[$88>>2]|0;
    $90 = (FUNCTION_TABLE_iii[$89 & 1023]($__ct,48)|0);
    $91 = HEAP32[$__me>>2]|0;
    $92 = ((($91)) + 4|0);
    HEAP32[$__me>>2] = $92;
    HEAP32[$91>>2] = $90;
    $130 = $92;
   } else {
    $93 = HEAP8[$__grp>>0]|0;
    $94 = $93 & 1;
    $95 = ($94<<24>>24)==(0);
    $96 = HEAP32[$7>>2]|0;
    $97 = $93&255;
    $98 = $97 >>> 1;
    $99 = $95 ? $98 : $96;
    $100 = ($99|0)==(0);
    if ($100) {
     $__gl$0$ph = -1;
    } else {
     $101 = HEAP32[$8>>2]|0;
     $102 = $95 ? $9 : $101;
     $103 = HEAP8[$102>>0]|0;
     $104 = $103 << 24 >> 24;
     $__gl$0$ph = $104;
    }
    $105 = ($__d$2|0)==($$$0|0);
    if (!($105)) {
     $__d$347 = $__d$2;$__gl$050 = $__gl$0$ph;$__ig$049 = 0;$__ng$048 = 0;
     while(1) {
      $106 = ($__ng$048|0)==($__gl$050|0);
      $107 = HEAP32[$__me>>2]|0;
      if ($106) {
       $108 = ((($107)) + 4|0);
       HEAP32[$__me>>2] = $108;
       HEAP32[$107>>2] = $__ts;
       $109 = (($__ig$049) + 1)|0;
       $110 = HEAP8[$__grp>>0]|0;
       $111 = $110 & 1;
       $112 = ($111<<24>>24)==(0);
       $113 = $110&255;
       $114 = $113 >>> 1;
       $115 = $112 ? $114 : $96;
       $116 = ($109>>>0)<($115>>>0);
       if ($116) {
        $117 = HEAP32[$8>>2]|0;
        $118 = $112 ? $9 : $117;
        $119 = (($118) + ($109)|0);
        $120 = HEAP8[$119>>0]|0;
        $121 = ($120<<24>>24)==(127);
        $122 = $120 << 24 >> 24;
        $$ = $121 ? -1 : $122;
        $126 = $108;$__gl$1 = $$;$__ig$1 = $109;$__ng$1 = 0;
       } else {
        $126 = $108;$__gl$1 = $__ng$048;$__ig$1 = $109;$__ng$1 = 0;
       }
      } else {
       $126 = $107;$__gl$1 = $__gl$050;$__ig$1 = $__ig$049;$__ng$1 = $__ng$048;
      }
      $123 = ((($__d$347)) + -4|0);
      $124 = HEAP32[$123>>2]|0;
      $125 = ((($126)) + 4|0);
      HEAP32[$__me>>2] = $125;
      HEAP32[$126>>2] = $124;
      $127 = (($__ng$1) + 1)|0;
      $128 = ($123|0)==($$$0|0);
      if ($128) {
       break;
      } else {
       $__d$347 = $123;$__gl$050 = $__gl$1;$__ig$049 = $__ig$1;$__ng$048 = $127;
      }
     }
    }
    $$pre29 = HEAP32[$__me>>2]|0;
    $130 = $$pre29;
   }
   $129 = ($53|0)==($130|0);
   if ($129) {
    $$2 = $$$0;
   } else {
    $131 = ((($130)) + -4|0);
    $132 = ($53>>>0)<($131>>>0);
    if ($132) {
     $$01$i$i52 = $53;$135 = $131;
     while(1) {
      $133 = HEAP32[$$01$i$i52>>2]|0;
      $134 = HEAP32[$135>>2]|0;
      HEAP32[$$01$i$i52>>2] = $134;
      HEAP32[$135>>2] = $133;
      $136 = ((($$01$i$i52)) + 4|0);
      $137 = ((($135)) + -4|0);
      $138 = ($136>>>0)<($137>>>0);
      if ($138) {
       $$01$i$i52 = $136;$135 = $137;
      } else {
       $$2 = $$$0;
       break;
      }
     }
    } else {
     $$2 = $$$0;
    }
   }
   break;
  }
  case 2:  {
   $35 = HEAP8[$__sym>>0]|0;
   $36 = $35 & 1;
   $37 = ($36<<24>>24)==(0);
   $38 = HEAP32[$2>>2]|0;
   $39 = $35&255;
   $40 = $39 >>> 1;
   $41 = $37 ? $40 : $38;
   $42 = ($41|0)==(0);
   $or$cond = $4 | $42;
   if ($or$cond) {
    $$2 = $$057;
   } else {
    $43 = HEAP32[$5>>2]|0;
    $44 = $37 ? $2 : $43;
    $45 = (($44) + ($41<<2)|0);
    $46 = HEAP32[$__me>>2]|0;
    $47 = ($41|0)==(0);
    if (!($47)) {
     $$0$i$i954 = $46;$49 = $44;
     while(1) {
      $48 = HEAP32[$49>>2]|0;
      HEAP32[$$0$i$i954>>2] = $48;
      $50 = ((($49)) + 4|0);
      $51 = ((($$0$i$i954)) + 4|0);
      $52 = ($50|0)==($45|0);
      if ($52) {
       break;
      } else {
       $$0$i$i954 = $51;$49 = $50;
      }
     }
    }
    $scevgep$i10 = (($46) + ($41<<2)|0);
    HEAP32[$__me>>2] = $scevgep$i10;
    $$2 = $$057;
   }
   break;
  }
  default: {
   $$2 = $$057;
  }
  }
  $139 = (($__p$056) + 1)|0;
  $exitcond = ($139|0)==(4);
  if ($exitcond) {
   break;
  } else {
   $$057 = $$2;$__p$056 = $139;
  }
 }
 $140 = HEAP8[$__sn>>0]|0;
 $141 = $140 & 1;
 $142 = ($141<<24>>24)==(0);
 $143 = HEAP32[$0>>2]|0;
 $144 = $140&255;
 $145 = $144 >>> 1;
 $146 = $142 ? $145 : $143;
 $147 = ($146>>>0)>(1);
 if ($147) {
  $148 = HEAP32[$1>>2]|0;
  $149 = $142 ? $0 : $148;
  $150 = ((($149)) + 4|0);
  $151 = (($149) + ($146<<2)|0);
  $152 = HEAP32[$__me>>2]|0;
  $153 = $150;
  $154 = $151;
  $155 = (($154) - ($153))|0;
  $156 = ($146|0)==(1);
  if (!($156)) {
   $$0$i$i30 = $152;$158 = $150;
   while(1) {
    $157 = HEAP32[$158>>2]|0;
    HEAP32[$$0$i$i30>>2] = $157;
    $159 = ((($158)) + 4|0);
    $160 = ((($$0$i$i30)) + 4|0);
    $161 = ($159|0)==($151|0);
    if ($161) {
     break;
    } else {
     $$0$i$i30 = $160;$158 = $159;
    }
   }
  }
  $162 = $155 >>> 2;
  $scevgep$i = (($152) + ($162<<2)|0);
  HEAP32[$__me>>2] = $scevgep$i;
 }
 $163 = $__flags & 176;
 if ((($163|0) == 32)) {
  $164 = HEAP32[$__me>>2]|0;
  HEAP32[$__mi>>2] = $164;
 } else if (!((($163|0) == 16))) {
  HEAP32[$__mi>>2] = $__mb;
 }
 return;
}
function __ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE($this,$__s,$__intl,$__iob,$__fl,$__digits) {
 $this = $this|0;
 $__s = $__s|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__digits = $__digits|0;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $$byval_copy = 0, $$pre = 0, $$pre17 = 0, $$pre18 = 0, $$pre18$pre = 0, $$pre20 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dp = 0;
 var $__fd = 0, $__grp = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 480|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 468|0;
 $__loc = sp + 464|0;
 $__pat = sp + 472|0;
 $__dp = sp + 460|0;
 $__ts = sp + 456|0;
 $__grp = sp + 444|0;
 $__sym = sp + 432|0;
 $__sn = sp + 420|0;
 $__fd = sp + 416|0;
 $__mbuf = sp + 16|0;
 $__mi = sp + 8|0;
 $__me = sp + 4|0;
 $0 = sp;
 $1 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $1;
 __THREW__ = 0;
 $2 = (invoke_iii(452,($__loc|0),(6752|0))|0);
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 do {
  if ($4) {
   label = 13;
  } else {
   $5 = HEAP8[$__digits>>0]|0;
   $6 = $5 & 1;
   $7 = ($6<<24>>24)==(0);
   $8 = ((($__digits)) + 4|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = $5&255;
   $11 = $10 >>> 1;
   $12 = $7 ? $11 : $9;
   $13 = ($12|0)==(0);
   if ($13) {
    $31 = 0;
   } else {
    $14 = ((($__digits)) + 8|0);
    $15 = HEAP32[$14>>2]|0;
    $16 = $7 ? $8 : $15;
    $17 = HEAP32[$16>>2]|0;
    $18 = HEAP32[$2>>2]|0;
    $19 = ((($18)) + 44|0);
    $20 = HEAP32[$19>>2]|0;
    __THREW__ = 0;
    $21 = (invoke_iii($20|0,($2|0),45)|0);
    $22 = __THREW__; __THREW__ = 0;
    $23 = $22&1;
    if ($23) {
     label = 13;
     break;
    }
    $24 = ($17|0)==($21|0);
    $31 = $24;
   }
   HEAP32[$__grp>>2] = 0;
   $25 = ((($__grp)) + 4|0);
   HEAP32[$25>>2] = 0;
   $26 = ((($__grp)) + 8|0);
   HEAP32[$26>>2] = 0;
   HEAP32[$__sym>>2] = 0;
   $27 = ((($__sym)) + 4|0);
   HEAP32[$27>>2] = 0;
   $28 = ((($__sym)) + 8|0);
   HEAP32[$28>>2] = 0;
   HEAP32[$__sn>>2] = 0;
   $29 = ((($__sn)) + 4|0);
   HEAP32[$29>>2] = 0;
   $30 = ((($__sn)) + 8|0);
   HEAP32[$30>>2] = 0;
   __THREW__ = 0;
   invoke_viiiiiiiiii(489,($__intl|0),($31|0),($__loc|0),($__pat|0),($__dp|0),($__ts|0),($__grp|0),($__sym|0),($__sn|0),($__fd|0));
   $32 = __THREW__; __THREW__ = 0;
   $33 = $32&1;
   if ($33) {
    $94 = ___cxa_find_matching_catch()|0;
    $95 = tempRet0;
    $$0 = $94;$$01 = $95;$$pre18 = $1;
   } else {
    $34 = HEAP8[$__digits>>0]|0;
    $35 = $34 & 1;
    $36 = ($35<<24>>24)==(0);
    $37 = HEAP32[$8>>2]|0;
    $38 = $34&255;
    $39 = $38 >>> 1;
    $40 = $36 ? $39 : $37;
    $41 = HEAP32[$__fd>>2]|0;
    $42 = ($40|0)>($41|0);
    if ($42) {
     $43 = (($40) - ($41))|0;
     $44 = $43 << 1;
     $45 = HEAP8[$__sn>>0]|0;
     $46 = $45 & 1;
     $47 = ($46<<24>>24)==(0);
     $48 = ((($__sn)) + 4|0);
     $49 = HEAP32[$48>>2]|0;
     $50 = $45&255;
     $51 = $50 >>> 1;
     $52 = $47 ? $51 : $49;
     $53 = HEAP8[$__sym>>0]|0;
     $54 = $53 & 1;
     $55 = ($54<<24>>24)==(0);
     $56 = ((($__sym)) + 4|0);
     $57 = HEAP32[$56>>2]|0;
     $58 = $53&255;
     $59 = $58 >>> 1;
     $60 = $55 ? $59 : $57;
     $61 = $44 | 1;
     $62 = (($61) + ($41))|0;
     $63 = (($62) + ($52))|0;
     $64 = (($63) + ($60))|0;
     $84 = $64;
    } else {
     $65 = HEAP8[$__sn>>0]|0;
     $66 = $65 & 1;
     $67 = ($66<<24>>24)==(0);
     $68 = ((($__sn)) + 4|0);
     $69 = HEAP32[$68>>2]|0;
     $70 = $65&255;
     $71 = $70 >>> 1;
     $72 = $67 ? $71 : $69;
     $73 = HEAP8[$__sym>>0]|0;
     $74 = $73 & 1;
     $75 = ($74<<24>>24)==(0);
     $76 = ((($__sym)) + 4|0);
     $77 = HEAP32[$76>>2]|0;
     $78 = $73&255;
     $79 = $78 >>> 1;
     $80 = $75 ? $79 : $77;
     $81 = (($41) + 2)|0;
     $82 = (($81) + ($72))|0;
     $83 = (($82) + ($80))|0;
     $84 = $83;
    }
    $85 = ($84>>>0)>(100);
    if ($85) {
     $86 = $84 << 2;
     $87 = (_malloc($86)|0);
     $88 = $87;
     $89 = ($87|0)==(0|0);
     if ($89) {
      __THREW__ = 0;
      invoke_v(463);
      $90 = __THREW__; __THREW__ = 0;
      $91 = $90&1;
      if ($91) {
       $98 = $88;
      } else {
       $$pre = HEAP8[$__digits>>0]|0;
       $$pre17 = HEAP32[$8>>2]|0;
       $104 = $$pre;$111 = $$pre17;$124 = $88;$__mb$0 = 0;
       label = 17;
      }
     } else {
      $104 = $34;$111 = $37;$124 = $88;$__mb$0 = $87;
      label = 17;
     }
    } else {
     $104 = $34;$111 = $37;$124 = 0;$__mb$0 = $__mbuf;
     label = 17;
    }
    if ((label|0) == 17) {
     $101 = ((($__iob)) + 4|0);
     $102 = HEAP32[$101>>2]|0;
     $103 = $104 & 1;
     $105 = ($103<<24>>24)==(0);
     $106 = ((($__digits)) + 8|0);
     $107 = HEAP32[$106>>2]|0;
     $108 = $105 ? $8 : $107;
     $109 = $104&255;
     $110 = $109 >>> 1;
     $112 = $105 ? $110 : $111;
     $113 = (($108) + ($112<<2)|0);
     $114 = HEAP32[$__dp>>2]|0;
     $115 = HEAP32[$__ts>>2]|0;
     __THREW__ = 0;
     invoke_viiiiiiiiiiiiiii(490,($__mb$0|0),($__mi|0),($__me|0),($102|0),($108|0),($113|0),($2|0),($31|0),($__pat|0),($114|0),($115|0),($__grp|0),($__sym|0),($__sn|0),($41|0));
     $116 = __THREW__; __THREW__ = 0;
     $117 = $116&1;
     if ($117) {
      $98 = $124;
     } else {
      $118 = HEAP32[$__s>>2]|0;
      HEAP32[$0>>2] = $118;
      $119 = HEAP32[$__mi>>2]|0;
      $120 = HEAP32[$__me>>2]|0;
      __THREW__ = 0;
      ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
      $121 = (invoke_iiiiiii(469,($$byval_copy|0),($__mb$0|0),($119|0),($120|0),($__iob|0),($__fl|0))|0);
      $122 = __THREW__; __THREW__ = 0;
      $123 = $122&1;
      if ($123) {
       $98 = $124;
      } else {
       $125 = ($124|0)==(0);
       if ($125) {
        $127 = $1;
       } else {
        $126 = $124;
        _free($126);
        $$pre20 = HEAP32[$__loc>>2]|0;
        $127 = $$pre20;
       }
       __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sn);
       __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
       (__ZNSt3__114__shared_count16__release_sharedEv($127)|0);
       STACKTOP = sp;return ($121|0);
      }
     }
    }
    $96 = ___cxa_find_matching_catch()|0;
    $97 = tempRet0;
    $99 = ($98|0)==(0);
    if ($99) {
     $$0 = $96;$$01 = $97;$$pre18 = $1;
    } else {
     $100 = $98;
     _free($100);
     $$pre18$pre = HEAP32[$__loc>>2]|0;
     $$0 = $96;$$01 = $97;$$pre18 = $$pre18$pre;
    }
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sn);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
   $$1 = $$0;$$12 = $$01;$128 = $$pre18;
  }
 } while(0);
 if ((label|0) == 13) {
  $92 = ___cxa_find_matching_catch()|0;
  $93 = tempRet0;
  $$1 = $92;$$12 = $93;$128 = $1;
 }
 (__ZNSt3__114__shared_count16__release_sharedEv($128)|0);
 ___resumeException($$1|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__18messagesIcED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__18messagesIcED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE($this,$__nm,$0) {
 $this = $this|0;
 $__nm = $__nm|0;
 $0 = $0|0;
 var $$ = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[$__nm>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 $4 = ((($__nm)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($__nm)) + 1|0);
 $7 = $3 ? $6 : $5;
 $8 = (_catopen(($7|0),1)|0);
 $9 = $8;
 $not$ = ($8|0)!=((-1)|0);
 $10 = $not$&1;
 $$ = $9 >>> $10;
 return ($$|0);
}
function __ZNKSt3__18messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($agg$result,$this,$__c,$__set,$__msgid,$__dflt) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__c = $__c|0;
 $__set = $__set|0;
 $__msgid = $__msgid|0;
 $__dflt = $__dflt|0;
 var $$0$i15 = 0, $$0$i817 = 0, $$02 = 0, $$03 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__ndflt = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__ndflt = sp;
 HEAP32[$__ndflt>>2] = 0;
 $0 = ((($__ndflt)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($__ndflt)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = HEAP8[$__dflt>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 $5 = ((($__dflt)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($__dflt)) + 1|0);
 $8 = $4 ? $7 : $6;
 $9 = ((($__dflt)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = $2&255;
 $12 = $11 >>> 1;
 $13 = $4 ? $12 : $10;
 $14 = (($8) + ($13)|0);
 $15 = ($13|0)>(0);
 L1: do {
  if ($15) {
   $$0$i817 = $8;
   while(1) {
    $16 = HEAP8[$$0$i817>>0]|0;
    __THREW__ = 0;
    invoke_vii(425,($__ndflt|0),($16|0));
    $17 = __THREW__; __THREW__ = 0;
    $18 = $17&1;
    if ($18) {
     break;
    }
    $19 = ((($$0$i817)) + 1|0);
    $20 = ($19>>>0)<($14>>>0);
    if ($20) {
     $$0$i817 = $19;
    } else {
     label = 4;
     break L1;
    }
   }
   $35 = ___cxa_find_matching_catch()|0;
   $36 = tempRet0;
   $lpad$phi$index = $35;$lpad$phi$index2 = $36;
   label = 7;
  } else {
   label = 4;
  }
 } while(0);
 L6: do {
  if ((label|0) == 4) {
   $21 = ($__c|0)==(-1);
   $22 = $__c << 1;
   $23 = $22;
   $24 = $21 ? (-1) : $23;
   $25 = HEAP8[$__ndflt>>0]|0;
   $26 = $25 & 1;
   $27 = ($26<<24>>24)==(0);
   $28 = ((($__ndflt)) + 8|0);
   $29 = HEAP32[$28>>2]|0;
   $30 = ((($__ndflt)) + 1|0);
   $31 = $27 ? $30 : $29;
   __THREW__ = 0;
   $32 = (invoke_iiiii(491,($24|0),($__set|0),($__msgid|0),($31|0))|0);
   $33 = __THREW__; __THREW__ = 0;
   $34 = $33&1;
   if ($34) {
    $37 = ___cxa_find_matching_catch()|0;
    $38 = tempRet0;
    $lpad$phi$index = $37;$lpad$phi$index2 = $38;
    label = 7;
    break;
   }
   HEAP32[$agg$result>>2] = 0;
   $39 = ((($agg$result)) + 4|0);
   HEAP32[$39>>2] = 0;
   $40 = ((($agg$result)) + 8|0);
   HEAP32[$40>>2] = 0;
   $41 = (_strlen(($32|0))|0);
   $42 = (($32) + ($41)|0);
   $43 = ($41|0)>(0);
   L11: do {
    if ($43) {
     $$0$i15 = $32;
     while(1) {
      $44 = HEAP8[$$0$i15>>0]|0;
      __THREW__ = 0;
      invoke_vii(425,($agg$result|0),($44|0));
      $45 = __THREW__; __THREW__ = 0;
      $46 = $45&1;
      if ($46) {
       break;
      }
      $47 = ((($$0$i15)) + 1|0);
      $48 = ($47>>>0)<($42>>>0);
      if ($48) {
       $$0$i15 = $47;
      } else {
       break L11;
      }
     }
     $49 = ___cxa_find_matching_catch()|0;
     $50 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
     $$02 = $49;$$03 = $50;
     break L6;
    }
   } while(0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__ndflt);
   STACKTOP = sp;return;
  }
 } while(0);
 if ((label|0) == 7) {
  $$02 = $lpad$phi$index;$$03 = $lpad$phi$index2;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__ndflt);
 ___resumeException($$02|0);
 // unreachable;
}
function __ZNKSt3__18messagesIcE8do_closeEi($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__c|0)==(-1);
 $1 = $__c << 1;
 $2 = $1;
 $3 = $0 ? (-1) : $2;
 (_catclose(($3|0))|0);
 return;
}
function __ZNSt3__18messagesIwED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__18messagesIwED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE($this,$__nm,$0) {
 $this = $this|0;
 $__nm = $__nm|0;
 $0 = $0|0;
 var $$ = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[$__nm>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 $4 = ((($__nm)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($__nm)) + 1|0);
 $7 = $3 ? $6 : $5;
 $8 = (_catopen(($7|0),1)|0);
 $9 = $8;
 $not$ = ($8|0)!=((-1)|0);
 $10 = $not$&1;
 $$ = $9 >>> $10;
 return ($$|0);
}
function __ZNKSt3__18messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE($agg$result,$this,$__c,$__set,$__msgid,$__dflt) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__c = $__c|0;
 $__set = $__set|0;
 $__msgid = $__msgid|0;
 $__dflt = $__dflt|0;
 var $$0$i1440 = 0, $$0$i35 = 0, $$1 = 0, $$14 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__bn$i = 0, $__bn$i12 = 0, $__buf$i = 0, $__buf$i11 = 0, $__mb$i = 0, $__mb$i10 = 0, $__ndflt = 0, $__nn$i = 0, $__p$0$i1638 = 0, $__p$0$i34 = 0, $__wn$i = 0, $lpad$phi$index = 0;
 var $lpad$phi$index10 = 0, $lpad$phi30$index = 0, $lpad$phi30$index3 = 0, $or$cond$i = 0, $or$cond$i15 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__mb$i10 = sp + 184|0;
 $__buf$i11 = sp + 192|0;
 $__bn$i12 = sp + 180|0;
 $__wn$i = sp + 176|0;
 $__mb$i = sp + 168|0;
 $__buf$i = sp + 40|0;
 $__bn$i = sp + 32|0;
 $__nn$i = sp + 28|0;
 $__ndflt = sp + 16|0;
 $0 = sp + 8|0;
 $1 = sp;
 HEAP32[$__ndflt>>2] = 0;
 $2 = ((($__ndflt)) + 4|0);
 HEAP32[$2>>2] = 0;
 $3 = ((($__ndflt)) + 8|0);
 HEAP32[$3>>2] = 0;
 $4 = ((($0)) + 4|0);
 HEAP32[$4>>2] = 0;
 HEAP32[$0>>2] = (7560);
 $5 = HEAP8[$__dflt>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 $8 = ((($__dflt)) + 8|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($__dflt)) + 4|0);
 $11 = $7 ? $10 : $9;
 $12 = HEAP32[$10>>2]|0;
 $13 = $5&255;
 $14 = $13 >>> 1;
 $15 = $7 ? $14 : $12;
 $16 = (($11) + ($15<<2)|0);
 $17 = ((($__buf$i11)) + 32|0);
 $18 = ($15|0)>(0);
 L1: do {
  if ($18) {
   $$0$i1440 = $11;
   L2: while(1) {
    HEAP32[$__wn$i>>2] = $$0$i1440;
    $19 = HEAP32[$0>>2]|0;
    $20 = ((($19)) + 12|0);
    $21 = HEAP32[$20>>2]|0;
    __THREW__ = 0;
    $22 = (invoke_iiiiiiiii($21|0,($0|0),($__mb$i10|0),($$0$i1440|0),($16|0),($__wn$i|0),($__buf$i11|0),($17|0),($__bn$i12|0))|0);
    $23 = __THREW__; __THREW__ = 0;
    $24 = $23&1;
    if ($24) {
     label = 12;
     break;
    }
    $25 = ($22|0)==(2);
    $26 = HEAP32[$__wn$i>>2]|0;
    $27 = ($26|0)==($$0$i1440|0);
    $or$cond$i15 = $25 | $27;
    if ($or$cond$i15) {
     label = 5;
     break;
    }
    $28 = HEAP32[$__bn$i12>>2]|0;
    $29 = ($__buf$i11>>>0)<($28>>>0);
    if ($29) {
     $__p$0$i1638 = $__buf$i11;
     while(1) {
      $33 = HEAP8[$__p$0$i1638>>0]|0;
      __THREW__ = 0;
      invoke_vii(425,($__ndflt|0),($33|0));
      $34 = __THREW__; __THREW__ = 0;
      $35 = $34&1;
      if ($35) {
       label = 11;
       break L2;
      }
      $36 = ((($__p$0$i1638)) + 1|0);
      $37 = HEAP32[$__bn$i12>>2]|0;
      $38 = ($36>>>0)<($37>>>0);
      if ($38) {
       $__p$0$i1638 = $36;
      } else {
       break;
      }
     }
    }
    $39 = HEAP32[$__wn$i>>2]|0;
    $40 = ($39>>>0)<($16>>>0);
    $41 = ($22|0)!=(2);
    $42 = $41 & $40;
    if ($42) {
     $$0$i1440 = $39;
    } else {
     label = 9;
     break L1;
    }
   }
   if ((label|0) == 5) {
    __THREW__ = 0;
    invoke_vi(475,(10056|0));
    $30 = __THREW__; __THREW__ = 0;
    $31 = ___cxa_find_matching_catch()|0;
    $32 = tempRet0;
    $lpad$phi30$index = $31;$lpad$phi30$index3 = $32;
   }
   else if ((label|0) == 11) {
    $59 = ___cxa_find_matching_catch()|0;
    $60 = tempRet0;
    $lpad$phi30$index = $59;$lpad$phi30$index3 = $60;
   }
   else if ((label|0) == 12) {
    $61 = ___cxa_find_matching_catch()|0;
    $62 = tempRet0;
    $lpad$phi30$index = $61;$lpad$phi30$index3 = $62;
   }
   $$1 = $lpad$phi30$index;$$14 = $lpad$phi30$index3;
  } else {
   label = 9;
  }
 } while(0);
 L16: do {
  if ((label|0) == 9) {
   $43 = ($__c|0)==(-1);
   $44 = $__c << 1;
   $45 = $44;
   $46 = $43 ? (-1) : $45;
   $47 = HEAP8[$__ndflt>>0]|0;
   $48 = $47 & 1;
   $49 = ($48<<24>>24)==(0);
   $50 = ((($__ndflt)) + 8|0);
   $51 = HEAP32[$50>>2]|0;
   $52 = ((($__ndflt)) + 1|0);
   $53 = $49 ? $52 : $51;
   __THREW__ = 0;
   $54 = (invoke_iiiii(491,($46|0),($__set|0),($__msgid|0),($53|0))|0);
   $55 = __THREW__; __THREW__ = 0;
   $56 = $55&1;
   if ($56) {
    $57 = ___cxa_find_matching_catch()|0;
    $58 = tempRet0;
    $$1 = $57;$$14 = $58;
    break;
   }
   HEAP32[$agg$result>>2] = 0;
   $63 = ((($agg$result)) + 4|0);
   HEAP32[$63>>2] = 0;
   $64 = ((($agg$result)) + 8|0);
   HEAP32[$64>>2] = 0;
   $65 = ((($1)) + 4|0);
   HEAP32[$65>>2] = 0;
   HEAP32[$1>>2] = (7664);
   $66 = (_strlen(($54|0))|0);
   $67 = (($54) + ($66)|0);
   $68 = $67;
   $69 = ((($__buf$i)) + 128|0);
   $70 = ($66|0)>(0);
   L21: do {
    if ($70) {
     $$0$i35 = $54;
     L22: while(1) {
      HEAP32[$__nn$i>>2] = $$0$i35;
      $71 = HEAP32[$1>>2]|0;
      $72 = ((($71)) + 16|0);
      $73 = HEAP32[$72>>2]|0;
      $74 = $$0$i35;
      $75 = (($68) - ($74))|0;
      $76 = ($75|0)>(32);
      $77 = ((($$0$i35)) + 32|0);
      $78 = $76 ? $77 : $67;
      __THREW__ = 0;
      $79 = (invoke_iiiiiiiii($73|0,($1|0),($__mb$i|0),($$0$i35|0),($78|0),($__nn$i|0),($__buf$i|0),($69|0),($__bn$i|0))|0);
      $80 = __THREW__; __THREW__ = 0;
      $81 = $80&1;
      if ($81) {
       label = 24;
       break;
      }
      $82 = ($79|0)==(2);
      $83 = HEAP32[$__nn$i>>2]|0;
      $84 = ($83|0)==($$0$i35|0);
      $or$cond$i = $82 | $84;
      if ($or$cond$i) {
       label = 18;
       break;
      }
      $85 = HEAP32[$__bn$i>>2]|0;
      $86 = ($__buf$i>>>0)<($85>>>0);
      if ($86) {
       $__p$0$i34 = $__buf$i;
       while(1) {
        $90 = HEAP32[$__p$0$i34>>2]|0;
        __THREW__ = 0;
        invoke_vii(483,($agg$result|0),($90|0));
        $91 = __THREW__; __THREW__ = 0;
        $92 = $91&1;
        if ($92) {
         label = 23;
         break L22;
        }
        $93 = ((($__p$0$i34)) + 4|0);
        $94 = HEAP32[$__bn$i>>2]|0;
        $95 = ($93>>>0)<($94>>>0);
        if ($95) {
         $__p$0$i34 = $93;
        } else {
         break;
        }
       }
      }
      $96 = HEAP32[$__nn$i>>2]|0;
      $97 = ($96>>>0)<($67>>>0);
      $98 = ($79|0)!=(2);
      $99 = $98 & $97;
      if ($99) {
       $$0$i35 = $96;
      } else {
       break L21;
      }
     }
     if ((label|0) == 18) {
      __THREW__ = 0;
      invoke_vi(475,(10056|0));
      $87 = __THREW__; __THREW__ = 0;
      $88 = ___cxa_find_matching_catch()|0;
      $89 = tempRet0;
      $lpad$phi$index = $88;$lpad$phi$index10 = $89;
     }
     else if ((label|0) == 23) {
      $100 = ___cxa_find_matching_catch()|0;
      $101 = tempRet0;
      $lpad$phi$index = $100;$lpad$phi$index10 = $101;
     }
     else if ((label|0) == 24) {
      $102 = ___cxa_find_matching_catch()|0;
      $103 = tempRet0;
      $lpad$phi$index = $102;$lpad$phi$index10 = $103;
     }
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($agg$result);
     $$1 = $lpad$phi$index;$$14 = $lpad$phi$index10;
     break L16;
    }
   } while(0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__ndflt);
   STACKTOP = sp;return;
  }
 } while(0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__ndflt);
 ___resumeException($$1|0);
 // unreachable;
}
function __ZNKSt3__18messagesIwE8do_closeEi($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__c|0)==(-1);
 $1 = $__c << 1;
 $2 = $1;
 $3 = $0 ? (-1) : $2;
 (_catclose(($3|0))|0);
 return;
}
function __ZNSt3__120__vector_base_commonILb1EEC2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___cxa_allocate_exception(8)|0);
 __THREW__ = 0;
 invoke_vii(492,($0|0),(10144|0));
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $3 = ___cxa_find_matching_catch()|0;
  $4 = tempRet0;
  ___cxa_free_exception(($0|0));
  ___resumeException($3|0);
  // unreachable;
 } else {
  HEAP32[$0>>2] = (1976);
  ___cxa_throw(($0|0),(2016|0),(59|0));
  // unreachable;
 }
}
function __ZNSt3__16locale5__impC2Ej($this,$refs) {
 $this = $this|0;
 $refs = $refs|0;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $$lcssa = 0, $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $9 = 0, $eh$lpad$body$index3Z2D = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($refs) + -1)|0;
 $1 = ((($this)) + 4|0);
 HEAP32[$1>>2] = $0;
 HEAP32[$this>>2] = (6728);
 $2 = ((($this)) + 8|0);
 __THREW__ = 0;
 invoke_vii(493,($2|0),28);
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if ($4) {
  $83 = ___cxa_find_matching_catch()|0;
  $84 = tempRet0;
  $$1 = $84;$$12 = $83;
 } else {
  $5 = ((($this)) + 144|0);
  __THREW__ = 0;
  invoke_viii(494,($5|0),(9736|0),1);
  $6 = __THREW__; __THREW__ = 0;
  $7 = $6&1;
  if ($7) {
   $85 = ___cxa_find_matching_catch()|0;
   $86 = tempRet0;
   $$0 = $86;$$01 = $85;
  } else {
   $8 = HEAP32[$2>>2]|0;
   $9 = ((($this)) + 12|0);
   $$pre$i$i$i = HEAP32[$9>>2]|0;
   $10 = ($$pre$i$i$i|0)==($8|0);
   if (!($10)) {
    $12 = $$pre$i$i$i;
    while(1) {
     $11 = ((($12)) + -4|0);
     $13 = ($11|0)==($8|0);
     if ($13) {
      $$lcssa = $11;
      break;
     } else {
      $12 = $11;
     }
    }
    HEAP32[$9>>2] = $$lcssa;
   }
   HEAP32[(10156)>>2] = 0;
   HEAP32[10152>>2] = (5584);
   __THREW__ = 0;
   invoke_vii(495,($this|0),(10152|0));
   $14 = __THREW__; __THREW__ = 0;
   $15 = $14&1;
   do {
    if ($15) {
     label = 42;
    } else {
     HEAP32[(10164)>>2] = 0;
     HEAP32[10160>>2] = (5624);
     __THREW__ = 0;
     invoke_vii(496,($this|0),(10160|0));
     $16 = __THREW__; __THREW__ = 0;
     $17 = $16&1;
     if ($17) {
      label = 42;
     } else {
      HEAP32[(10172)>>2] = 0;
      HEAP32[10168>>2] = (6776);
      HEAP32[(10176)>>2] = 0;
      HEAP8[(10180)>>0] = 0;
      $18 = (__ZNSt3__15ctypeIcE13classic_tableEv()|0);
      HEAP32[(10176)>>2] = $18;
      __THREW__ = 0;
      invoke_vii(497,($this|0),(10168|0));
      $19 = __THREW__; __THREW__ = 0;
      $20 = $19&1;
      if ($20) {
       label = 42;
      } else {
       HEAP32[(10188)>>2] = 0;
       HEAP32[10184>>2] = (7072);
       __THREW__ = 0;
       invoke_vii(498,($this|0),(10184|0));
       $21 = __THREW__; __THREW__ = 0;
       $22 = $21&1;
       if ($22) {
        label = 42;
       } else {
        HEAP32[(10196)>>2] = 0;
        HEAP32[10192>>2] = (7200);
        __THREW__ = 0;
        invoke_vii(499,($this|0),(10192|0));
        $23 = __THREW__; __THREW__ = 0;
        $24 = $23&1;
        if ($24) {
         label = 42;
        } else {
         __THREW__ = 0;
         invoke_vii(500,(10200|0),1);
         $25 = __THREW__; __THREW__ = 0;
         $26 = $25&1;
         if ($26) {
          label = 42;
         } else {
          __THREW__ = 0;
          invoke_vii(501,($this|0),(10200|0));
          $27 = __THREW__; __THREW__ = 0;
          $28 = $27&1;
          if ($28) {
           label = 42;
          } else {
           HEAP32[(10220)>>2] = 0;
           HEAP32[10216>>2] = (7320);
           __THREW__ = 0;
           invoke_vii(502,($this|0),(10216|0));
           $29 = __THREW__; __THREW__ = 0;
           $30 = $29&1;
           if ($30) {
            label = 42;
           } else {
            HEAP32[(10228)>>2] = 0;
            HEAP32[10224>>2] = (7440);
            __THREW__ = 0;
            invoke_vii(503,($this|0),(10224|0));
            $31 = __THREW__; __THREW__ = 0;
            $32 = $31&1;
            if ($32) {
             label = 42;
            } else {
             __ZNSt3__18numpunctIcEC2Ej(10232,1);
             __THREW__ = 0;
             invoke_vii(504,($this|0),(10232|0));
             $33 = __THREW__; __THREW__ = 0;
             $34 = $33&1;
             if ($34) {
              label = 42;
             } else {
              __ZNSt3__18numpunctIwEC2Ej(10256,1);
              __THREW__ = 0;
              invoke_vii(505,($this|0),(10256|0));
              $35 = __THREW__; __THREW__ = 0;
              $36 = $35&1;
              if ($36) {
               label = 42;
              } else {
               HEAP32[(10292)>>2] = 0;
               HEAP32[10288>>2] = (5664);
               __THREW__ = 0;
               invoke_vii(506,($this|0),(10288|0));
               $37 = __THREW__; __THREW__ = 0;
               $38 = $37&1;
               if ($38) {
                label = 42;
               } else {
                HEAP32[(10300)>>2] = 0;
                HEAP32[10296>>2] = (5776);
                __THREW__ = 0;
                invoke_vii(507,($this|0),(10296|0));
                $39 = __THREW__; __THREW__ = 0;
                $40 = $39&1;
                if ($40) {
                 label = 42;
                } else {
                 HEAP32[(10308)>>2] = 0;
                 HEAP32[10304>>2] = (5848);
                 __THREW__ = 0;
                 invoke_vii(508,($this|0),(10304|0));
                 $41 = __THREW__; __THREW__ = 0;
                 $42 = $41&1;
                 if ($42) {
                  label = 42;
                 } else {
                  HEAP32[(10316)>>2] = 0;
                  HEAP32[10312>>2] = (5912);
                  __THREW__ = 0;
                  invoke_vii(509,($this|0),(10312|0));
                  $43 = __THREW__; __THREW__ = 0;
                  $44 = $43&1;
                  if ($44) {
                   label = 42;
                   break;
                  }
                  HEAP32[(10324)>>2] = 0;
                  HEAP32[10320>>2] = (6232);
                  __THREW__ = 0;
                  invoke_vii(510,($this|0),(10320|0));
                  $45 = __THREW__; __THREW__ = 0;
                  $46 = $45&1;
                  if ($46) {
                   label = 42;
                   break;
                  }
                  HEAP32[(10332)>>2] = 0;
                  HEAP32[10328>>2] = (6296);
                  __THREW__ = 0;
                  invoke_vii(511,($this|0),(10328|0));
                  $47 = __THREW__; __THREW__ = 0;
                  $48 = $47&1;
                  if ($48) {
                   label = 42;
                   break;
                  }
                  HEAP32[(10340)>>2] = 0;
                  HEAP32[10336>>2] = (6360);
                  __THREW__ = 0;
                  invoke_vii(512,($this|0),(10336|0));
                  $49 = __THREW__; __THREW__ = 0;
                  $50 = $49&1;
                  if ($50) {
                   label = 42;
                   break;
                  }
                  HEAP32[(10348)>>2] = 0;
                  HEAP32[10344>>2] = (6424);
                  __THREW__ = 0;
                  invoke_vii(513,($this|0),(10344|0));
                  $51 = __THREW__; __THREW__ = 0;
                  $52 = $51&1;
                  if ($52) {
                   label = 42;
                   break;
                  }
                  HEAP32[(10356)>>2] = 0;
                  HEAP32[10352>>2] = (6488);
                  __THREW__ = 0;
                  invoke_vii(514,($this|0),(10352|0));
                  $53 = __THREW__; __THREW__ = 0;
                  $54 = $53&1;
                  if ($54) {
                   label = 42;
                   break;
                  }
                  HEAP32[(10364)>>2] = 0;
                  HEAP32[10360>>2] = (6528);
                  __THREW__ = 0;
                  invoke_vii(515,($this|0),(10360|0));
                  $55 = __THREW__; __THREW__ = 0;
                  $56 = $55&1;
                  if ($56) {
                   label = 42;
                   break;
                  }
                  HEAP32[(10372)>>2] = 0;
                  HEAP32[10368>>2] = (6568);
                  __THREW__ = 0;
                  invoke_vii(516,($this|0),(10368|0));
                  $57 = __THREW__; __THREW__ = 0;
                  $58 = $57&1;
                  if ($58) {
                   label = 42;
                   break;
                  }
                  HEAP32[(10380)>>2] = 0;
                  HEAP32[10376>>2] = (6608);
                  __THREW__ = 0;
                  invoke_vii(517,($this|0),(10376|0));
                  $59 = __THREW__; __THREW__ = 0;
                  $60 = $59&1;
                  if ($60) {
                   label = 42;
                   break;
                  }
                  HEAP32[(10388)>>2] = 0;
                  HEAP32[10384>>2] = (5976);
                  HEAP32[(10392)>>2] = (6024);
                  __THREW__ = 0;
                  invoke_vii(518,($this|0),(10384|0));
                  $61 = __THREW__; __THREW__ = 0;
                  $62 = $61&1;
                  if ($62) {
                   label = 42;
                   break;
                  }
                  HEAP32[(10404)>>2] = 0;
                  HEAP32[10400>>2] = (6072);
                  HEAP32[(10408)>>2] = (6120);
                  __THREW__ = 0;
                  invoke_vii(519,($this|0),(10400|0));
                  $63 = __THREW__; __THREW__ = 0;
                  $64 = $63&1;
                  if ($64) {
                   label = 42;
                   break;
                  }
                  HEAP32[(10420)>>2] = 0;
                  HEAP32[10416>>2] = (7008);
                  __THREW__ = 0;
                  $65 = (invoke_i(457)|0);
                  $66 = __THREW__; __THREW__ = 0;
                  $67 = $66&1;
                  if ($67) {
                   $68 = ___cxa_find_matching_catch()|0;
                   $69 = tempRet0;
                   $eh$lpad$body$index3Z2D = $69;$eh$lpad$body$indexZ2D = $68;
                   break;
                  }
                  HEAP32[(10424)>>2] = $65;
                  HEAP32[10416>>2] = (6168);
                  __THREW__ = 0;
                  invoke_vii(520,($this|0),(10416|0));
                  $70 = __THREW__; __THREW__ = 0;
                  $71 = $70&1;
                  if ($71) {
                   label = 42;
                   break;
                  }
                  HEAP32[(10436)>>2] = 0;
                  HEAP32[10432>>2] = (7008);
                  __THREW__ = 0;
                  $72 = (invoke_i(457)|0);
                  $73 = __THREW__; __THREW__ = 0;
                  $74 = $73&1;
                  if ($74) {
                   $75 = ___cxa_find_matching_catch()|0;
                   $76 = tempRet0;
                   $eh$lpad$body$index3Z2D = $76;$eh$lpad$body$indexZ2D = $75;
                   break;
                  }
                  HEAP32[(10440)>>2] = $72;
                  HEAP32[10432>>2] = (6200);
                  __THREW__ = 0;
                  invoke_vii(521,($this|0),(10432|0));
                  $77 = __THREW__; __THREW__ = 0;
                  $78 = $77&1;
                  if ($78) {
                   label = 42;
                   break;
                  }
                  HEAP32[(10452)>>2] = 0;
                  HEAP32[10448>>2] = (6648);
                  __THREW__ = 0;
                  invoke_vii(522,($this|0),(10448|0));
                  $79 = __THREW__; __THREW__ = 0;
                  $80 = $79&1;
                  if ($80) {
                   label = 42;
                   break;
                  }
                  HEAP32[(10460)>>2] = 0;
                  HEAP32[10456>>2] = (6688);
                  __THREW__ = 0;
                  invoke_vii(523,($this|0),(10456|0));
                  $81 = __THREW__; __THREW__ = 0;
                  $82 = $81&1;
                  if ($82) {
                   label = 42;
                   break;
                  }
                  return;
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
   } while(0);
   if ((label|0) == 42) {
    $87 = ___cxa_find_matching_catch()|0;
    $88 = tempRet0;
    $eh$lpad$body$index3Z2D = $88;$eh$lpad$body$indexZ2D = $87;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
   $$0 = $eh$lpad$body$index3Z2D;$$01 = $eh$lpad$body$indexZ2D;
  }
  __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($2);
  $$1 = $$0;$$12 = $$01;
 }
 ___resumeException($$12|0);
 // unreachable;
}
function __ZNSt3__16locale7classicEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[10464>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((10464|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    (invoke_i(524)|0);
    $4 = __THREW__; __THREW__ = 0;
    $5 = $4&1;
    if ($5) {
     $7 = ___cxa_find_matching_catch()|0;
     $8 = tempRet0;
     ___cxa_guard_abort((10464|0));
     ___resumeException($7|0);
     // unreachable;
    } else {
     HEAP32[10480>>2] = 10472;
     ___cxa_guard_release((10464|0));
     break;
    }
   }
  }
 } while(0);
 $6 = HEAP32[10480>>2]|0;
 return ($6|0);
}
function __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$id) {
 $this = $this|0;
 $f = $f|0;
 $id = $id|0;
 var $$pre = 0, $$pre2 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__114__shared_count12__add_sharedEv($f);
 $0 = ((($this)) + 8|0);
 $1 = ((($this)) + 12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$0>>2]|0;
 $4 = $2;
 $5 = $3;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 2;
 $8 = ($7>>>0)>($id>>>0);
 do {
  if ($8) {
   $16 = $3;
  } else {
   $9 = (($id) + 1)|0;
   __THREW__ = 0;
   invoke_vii(525,($0|0),($9|0));
   $10 = __THREW__; __THREW__ = 0;
   $11 = $10&1;
   if (!($11)) {
    $$pre = HEAP32[$0>>2]|0;
    $16 = $$pre;
    break;
   }
   $12 = ___cxa_find_matching_catch()|0;
   $13 = tempRet0;
   $14 = ($f|0)==(0|0);
   if (!($14)) {
    (__ZNSt3__114__shared_count16__release_sharedEv($f)|0);
   }
   ___resumeException($12|0);
   // unreachable;
  }
 } while(0);
 $15 = (($16) + ($id<<2)|0);
 $17 = HEAP32[$15>>2]|0;
 $18 = ($17|0)==(0|0);
 if ($18) {
  $20 = $16;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($17)|0);
  $$pre2 = HEAP32[$0>>2]|0;
  $20 = $$pre2;
 }
 $19 = (($20) + ($id<<2)|0);
 HEAP32[$19>>2] = $f;
 return;
}
function __ZNSt3__16locale5__impD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i$01 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (6728);
 $0 = ((($this)) + 8|0);
 $1 = ((($this)) + 12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$0>>2]|0;
 $4 = ($2|0)==($3|0);
 if (!($4)) {
  $6 = $3;$i$01 = 0;
  while(1) {
   $5 = (($6) + ($i$01<<2)|0);
   $7 = HEAP32[$5>>2]|0;
   $8 = ($7|0)==(0|0);
   if (!($8)) {
    (__ZNSt3__114__shared_count16__release_sharedEv($7)|0);
   }
   $9 = (($i$01) + 1)|0;
   $10 = HEAP32[$1>>2]|0;
   $11 = HEAP32[$0>>2]|0;
   $12 = $10;
   $13 = $11;
   $14 = (($12) - ($13))|0;
   $15 = $14 >> 2;
   $16 = ($9>>>0)<($15>>>0);
   if ($16) {
    $6 = $11;$i$01 = $9;
   } else {
    break;
   }
  }
 }
 $17 = ((($this)) + 144|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
 __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($0);
 return;
}
function __ZNSt3__16locale5__impD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__16locale5__impD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__16locale5__imp9use_facetEl($this,$id) {
 $this = $this|0;
 $id = $id|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNKSt3__16locale5__imp9has_facetEl($this,$id)|0);
 if ($0) {
  $2 = ((($this)) + 8|0);
  $3 = HEAP32[$2>>2]|0;
  $4 = (($3) + ($id<<2)|0);
  $5 = HEAP32[$4>>2]|0;
  return ($5|0);
 } else {
  $1 = (___cxa_allocate_exception(4)|0);
  __ZNSt8bad_castC2Ev($1);
  ___cxa_throw(($1|0),(2136|0),(66|0));
  // unreachable;
 }
 return (0)|0;
}
function __ZNSt3__16locale5__imp12make_classicEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__16locale5__impC2Ej(10488,1);
 HEAP32[10472>>2] = 10488;
 return (10472|0);
}
function __ZNSt3__16locale5__imp11make_globalEv() {
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale7classicEv()|0);
 $1 = HEAP32[$0>>2]|0;
 HEAP32[10648>>2] = $1;
 __ZNSt3__114__shared_count12__add_sharedEv($1);
 return (10648|0);
}
function __ZNSt3__16locale8__globalEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[10656>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((10656|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    (invoke_i(526)|0);
    $4 = __THREW__; __THREW__ = 0;
    $5 = $4&1;
    if ($5) {
     $7 = ___cxa_find_matching_catch()|0;
     $8 = tempRet0;
     ___cxa_guard_abort((10656|0));
     ___resumeException($7|0);
     // unreachable;
    } else {
     HEAP32[10664>>2] = 10648;
     ___cxa_guard_release((10656|0));
     break;
    }
   }
  }
 } while(0);
 $6 = HEAP32[10664>>2]|0;
 return ($6|0);
}
function __ZNSt3__16localeC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __THREW__ = 0;
 $0 = (invoke_i(527)|0);
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $4 = ___cxa_find_matching_catch(0|0)|0;
  $5 = tempRet0;
  ___clang_call_terminate($4);
  // unreachable;
 } else {
  $3 = HEAP32[$0>>2]|0;
  HEAP32[$this>>2] = $3;
  __ZNSt3__114__shared_count12__add_sharedEv($3);
  return;
 }
}
function __ZNSt3__16localeC2ERKS0_($this,$l) {
 $this = $this|0;
 $l = $l|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$l>>2]|0;
 HEAP32[$this>>2] = $0;
 __ZNSt3__114__shared_count12__add_sharedEv($0);
 return;
}
function __ZNSt3__16localeD2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($0)|0);
 return;
}
function __ZNSt3__16locale2id5__getEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $__p$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p$i = sp;
 $0 = HEAP32[$this>>2]|0;
 $1 = ($0|0)==(-1);
 if (!($1)) {
  HEAP32[$__p$i>>2] = $this;
  $2 = ((($__p$i)) + 4|0);
  HEAP32[$2>>2] = (528);
  $3 = ((($__p$i)) + 8|0);
  HEAP32[$3>>2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E($this,$__p$i,529);
 }
 $4 = ((($this)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (($5) + -1)|0;
 STACKTOP = sp;return ($6|0);
}
function __ZNKSt3__16locale9use_facetERNS0_2idE($this,$x) {
 $this = $this|0;
 $x = $x|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (__ZNSt3__16locale2id5__getEv($x)|0);
 $2 = (__ZNKSt3__16locale5__imp9use_facetEl($0,$1)|0);
 return ($2|0);
}
function __ZNSt3__16locale5facetD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNSt3__16locale5facet16__on_zero_sharedEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($this|0)==(0|0);
 if (!($0)) {
  $1 = HEAP32[$this>>2]|0;
  $2 = ((($1)) + 4|0);
  $3 = HEAP32[$2>>2]|0;
  FUNCTION_TABLE_vi[$3 & 1023]($this);
 }
 return;
}
function __ZNSt3__16locale2id6__initEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[6744>>2]|0;HEAP32[6744>>2] = (($0+1)|0);
 $1 = (($0) + 1)|0;
 $2 = ((($this)) + 4|0);
 HEAP32[$2>>2] = $1;
 return;
}
function __ZNSt3__15ctypeIwED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__15ctypeIwE5do_isEtw($this,$m,$c) {
 $this = $this|0;
 $m = $m|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii = ($c>>>0)<(128);
 if ($isascii) {
  $0 = (__ZNSt3__15ctypeIcE13classic_tableEv()|0);
  $1 = (($0) + ($c<<1)|0);
  $2 = HEAP16[$1>>1]|0;
  $3 = $2 & $m;
  $4 = ($3<<16>>16)!=(0);
  $5 = $4;
 } else {
  $5 = 0;
 }
 return ($5|0);
}
function __ZNSt3__15ctypeIcE13classic_tableEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __THREW__ = 0;
 $0 = (invoke_i(530)|0);
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $4 = ___cxa_find_matching_catch(0|0)|0;
  $5 = tempRet0;
  ___clang_call_terminate($4);
  // unreachable;
 } else {
  $3 = HEAP32[$0>>2]|0;
  return ($3|0);
 }
 return (0)|0;
}
function __ZNKSt3__15ctypeIwE5do_isEPKwS3_Pt($this,$low,$high,$vec) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $vec = $vec|0;
 var $$015 = 0, $$06 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii = 0, $low3 = 0, $scevgep = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $low3 = $low;
 $0 = $high;
 $1 = (($0) - ($low3))|0;
 $2 = $1 >>> 2;
 $3 = ($low|0)==($high|0);
 if (!($3)) {
  $$015 = $low;$$06 = $vec;
  while(1) {
   $4 = HEAP32[$$015>>2]|0;
   $isascii = ($4>>>0)<(128);
   if ($isascii) {
    $5 = (__ZNSt3__15ctypeIcE13classic_tableEv()|0);
    $6 = (($5) + ($4<<1)|0);
    $7 = HEAP16[$6>>1]|0;
    $8 = $7&65535;
    $10 = $8;
   } else {
    $10 = 0;
   }
   $9 = $10&65535;
   HEAP16[$$06>>1] = $9;
   $11 = ((($$015)) + 4|0);
   $12 = ((($$06)) + 2|0);
   $13 = ($11|0)==($high|0);
   if ($13) {
    break;
   } else {
    $$015 = $11;$$06 = $12;
   }
  }
 }
 $scevgep = (($low) + ($2<<2)|0);
 return ($scevgep|0);
}
function __ZNKSt3__15ctypeIwE10do_scan_isEtPKwS3_($this,$m,$low,$high) {
 $this = $this|0;
 $m = $m|0;
 $low = $low|0;
 $high = $high|0;
 var $$0$lcssa = 0, $$01 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 L1: do {
  if ($0) {
   $$0$lcssa = $high;
  } else {
   $$01 = $low;
   while(1) {
    $1 = HEAP32[$$01>>2]|0;
    $isascii = ($1>>>0)<(128);
    if ($isascii) {
     $2 = (__ZNSt3__15ctypeIcE13classic_tableEv()|0);
     $3 = (($2) + ($1<<1)|0);
     $4 = HEAP16[$3>>1]|0;
     $5 = $4 & $m;
     $6 = ($5<<16>>16)==(0);
     if (!($6)) {
      $$0$lcssa = $$01;
      break L1;
     }
    }
    $7 = ((($$01)) + 4|0);
    $8 = ($7|0)==($high|0);
    if ($8) {
     $$0$lcssa = $high;
     break;
    } else {
     $$01 = $7;
    }
   }
  }
 } while(0);
 return ($$0$lcssa|0);
}
function __ZNKSt3__15ctypeIwE11do_scan_notEtPKwS3_($this,$m,$low,$high) {
 $this = $this|0;
 $m = $m|0;
 $low = $low|0;
 $high = $high|0;
 var $$0$lcssa = 0, $$01 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 L1: do {
  if ($0) {
   $$0$lcssa = $high;
  } else {
   $$01 = $low;
   while(1) {
    $1 = HEAP32[$$01>>2]|0;
    $isascii = ($1>>>0)<(128);
    if (!($isascii)) {
     $$0$lcssa = $$01;
     break L1;
    }
    $2 = (__ZNSt3__15ctypeIcE13classic_tableEv()|0);
    $3 = (($2) + ($1<<1)|0);
    $4 = HEAP16[$3>>1]|0;
    $5 = $4 & $m;
    $6 = ($5<<16>>16)==(0);
    if ($6) {
     $$0$lcssa = $$01;
     break L1;
    }
    $7 = ((($$01)) + 4|0);
    $8 = ($7|0)==($high|0);
    if ($8) {
     $$0$lcssa = $high;
     break;
    } else {
     $$01 = $7;
    }
   }
  }
 } while(0);
 return ($$0$lcssa|0);
}
function __ZNKSt3__15ctypeIwE10do_toupperEw($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii = ($c>>>0)<(128);
 if ($isascii) {
  $0 = (__ZNSt3__15ctypeIcE21__classic_upper_tableEv()|0);
  $1 = (($0) + ($c<<2)|0);
  $2 = HEAP32[$1>>2]|0;
  $3 = $2;
 } else {
  $3 = $c;
 }
 return ($3|0);
}
function __ZNSt3__15ctypeIcE21__classic_upper_tableEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __THREW__ = 0;
 $0 = (invoke_i(531)|0);
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $4 = ___cxa_find_matching_catch(0|0)|0;
  $5 = tempRet0;
  ___clang_call_terminate($4);
  // unreachable;
 } else {
  $3 = HEAP32[$0>>2]|0;
  return ($3|0);
 }
 return (0)|0;
}
function __ZNKSt3__15ctypeIwE10do_toupperEPwPKw($this,$low,$high) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 var $$04 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii = 0, $low2 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $low2 = $low;
 $0 = $high;
 $1 = (($0) - ($low2))|0;
 $2 = $1 >>> 2;
 $3 = ($low|0)==($high|0);
 if (!($3)) {
  $$04 = $low;
  while(1) {
   $4 = HEAP32[$$04>>2]|0;
   $isascii = ($4>>>0)<(128);
   if ($isascii) {
    $5 = (__ZNSt3__15ctypeIcE21__classic_upper_tableEv()|0);
    $6 = (($5) + ($4<<2)|0);
    $7 = HEAP32[$6>>2]|0;
    $8 = $7;
   } else {
    $8 = $4;
   }
   HEAP32[$$04>>2] = $8;
   $9 = ((($$04)) + 4|0);
   $10 = ($9|0)==($high|0);
   if ($10) {
    break;
   } else {
    $$04 = $9;
   }
  }
 }
 $scevgep = (($low) + ($2<<2)|0);
 return ($scevgep|0);
}
function __ZNKSt3__15ctypeIwE10do_tolowerEw($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii = ($c>>>0)<(128);
 if ($isascii) {
  $0 = (__ZNSt3__15ctypeIcE21__classic_lower_tableEv()|0);
  $1 = (($0) + ($c<<2)|0);
  $2 = HEAP32[$1>>2]|0;
  $3 = $2;
 } else {
  $3 = $c;
 }
 return ($3|0);
}
function __ZNSt3__15ctypeIcE21__classic_lower_tableEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __THREW__ = 0;
 $0 = (invoke_i(532)|0);
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $4 = ___cxa_find_matching_catch(0|0)|0;
  $5 = tempRet0;
  ___clang_call_terminate($4);
  // unreachable;
 } else {
  $3 = HEAP32[$0>>2]|0;
  return ($3|0);
 }
 return (0)|0;
}
function __ZNKSt3__15ctypeIwE10do_tolowerEPwPKw($this,$low,$high) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 var $$04 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii = 0, $low2 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $low2 = $low;
 $0 = $high;
 $1 = (($0) - ($low2))|0;
 $2 = $1 >>> 2;
 $3 = ($low|0)==($high|0);
 if (!($3)) {
  $$04 = $low;
  while(1) {
   $4 = HEAP32[$$04>>2]|0;
   $isascii = ($4>>>0)<(128);
   if ($isascii) {
    $5 = (__ZNSt3__15ctypeIcE21__classic_lower_tableEv()|0);
    $6 = (($5) + ($4<<2)|0);
    $7 = HEAP32[$6>>2]|0;
    $8 = $7;
   } else {
    $8 = $4;
   }
   HEAP32[$$04>>2] = $8;
   $9 = ((($$04)) + 4|0);
   $10 = ($9|0)==($high|0);
   if ($10) {
    break;
   } else {
    $$04 = $9;
   }
  }
 }
 $scevgep = (($low) + ($2<<2)|0);
 return ($scevgep|0);
}
function __ZNKSt3__15ctypeIwE8do_widenEc($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $c << 24 >> 24;
 return ($0|0);
}
function __ZNKSt3__15ctypeIwE8do_widenEPKcS3_Pw($this,$low,$high,$dest) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $dest = $dest|0;
 var $$012 = 0, $$03 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 if (!($0)) {
  $$012 = $low;$$03 = $dest;
  while(1) {
   $1 = HEAP8[$$012>>0]|0;
   $2 = $1 << 24 >> 24;
   HEAP32[$$03>>2] = $2;
   $3 = ((($$012)) + 1|0);
   $4 = ((($$03)) + 4|0);
   $5 = ($3|0)==($high|0);
   if ($5) {
    break;
   } else {
    $$012 = $3;$$03 = $4;
   }
  }
 }
 return ($high|0);
}
function __ZNKSt3__15ctypeIwE9do_narrowEwc($this,$c,$dfault) {
 $this = $this|0;
 $c = $c|0;
 $dfault = $dfault|0;
 var $$0 = 0, $0 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii = ($c>>>0)<(128);
 $0 = $c&255;
 $$0 = $isascii ? $0 : $dfault;
 return ($$0|0);
}
function __ZNKSt3__15ctypeIwE9do_narrowEPKwS3_cPc($this,$low,$high,$dfault,$dest) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $dfault = $dfault|0;
 $dest = $dest|0;
 var $$015 = 0, $$06 = 0, $$dfault = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $isascii = 0, $low3 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $low3 = $low;
 $0 = $high;
 $1 = (($0) - ($low3))|0;
 $2 = $1 >>> 2;
 $3 = ($low|0)==($high|0);
 if (!($3)) {
  $$015 = $low;$$06 = $dest;
  while(1) {
   $4 = HEAP32[$$015>>2]|0;
   $isascii = ($4>>>0)<(128);
   $5 = $4&255;
   $$dfault = $isascii ? $5 : $dfault;
   HEAP8[$$06>>0] = $$dfault;
   $6 = ((($$015)) + 4|0);
   $7 = ((($$06)) + 1|0);
   $8 = ($6|0)==($high|0);
   if ($8) {
    break;
   } else {
    $$015 = $6;$$06 = $7;
   }
  }
 }
 $scevgep = (($low) + ($2<<2)|0);
 return ($scevgep|0);
}
function __ZNSt3__15ctypeIcED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (6776);
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 if (!($2)) {
  $3 = ((($this)) + 12|0);
  $4 = HEAP8[$3>>0]|0;
  $5 = ($4<<24>>24)==(0);
  if (!($5)) {
   __ZdaPv($1);
  }
 }
 return;
}
function __ZNSt3__15ctypeIcED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__15ctypeIcED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__15ctypeIcE10do_toupperEc($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii1 = ($c<<24>>24)>(-1);
 if ($isascii1) {
  $0 = $c&255;
  $1 = (__ZNSt3__15ctypeIcE21__classic_upper_tableEv()|0);
  $2 = (($1) + ($0<<2)|0);
  $3 = HEAP32[$2>>2]|0;
  $4 = $3&255;
  $5 = $4;
 } else {
  $5 = $c;
 }
 return ($5|0);
}
function __ZNKSt3__15ctypeIcE10do_toupperEPcPKc($this,$low,$high) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 var $$02 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 if (!($0)) {
  $$02 = $low;
  while(1) {
   $1 = HEAP8[$$02>>0]|0;
   $isascii1 = ($1<<24>>24)>(-1);
   if ($isascii1) {
    $2 = $1 << 24 >> 24;
    $3 = (__ZNSt3__15ctypeIcE21__classic_upper_tableEv()|0);
    $4 = (($3) + ($2<<2)|0);
    $5 = HEAP32[$4>>2]|0;
    $6 = $5&255;
    $7 = $6;
   } else {
    $7 = $1;
   }
   HEAP8[$$02>>0] = $7;
   $8 = ((($$02)) + 1|0);
   $9 = ($8|0)==($high|0);
   if ($9) {
    break;
   } else {
    $$02 = $8;
   }
  }
 }
 return ($high|0);
}
function __ZNKSt3__15ctypeIcE10do_tolowerEc($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii1 = ($c<<24>>24)>(-1);
 if ($isascii1) {
  $0 = $c << 24 >> 24;
  $1 = (__ZNSt3__15ctypeIcE21__classic_lower_tableEv()|0);
  $2 = (($1) + ($0<<2)|0);
  $3 = HEAP32[$2>>2]|0;
  $4 = $3&255;
  $5 = $4;
 } else {
  $5 = $c;
 }
 return ($5|0);
}
function __ZNKSt3__15ctypeIcE10do_tolowerEPcPKc($this,$low,$high) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 var $$02 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 if (!($0)) {
  $$02 = $low;
  while(1) {
   $1 = HEAP8[$$02>>0]|0;
   $isascii1 = ($1<<24>>24)>(-1);
   if ($isascii1) {
    $2 = $1 << 24 >> 24;
    $3 = (__ZNSt3__15ctypeIcE21__classic_lower_tableEv()|0);
    $4 = (($3) + ($2<<2)|0);
    $5 = HEAP32[$4>>2]|0;
    $6 = $5&255;
    $7 = $6;
   } else {
    $7 = $1;
   }
   HEAP8[$$02>>0] = $7;
   $8 = ((($$02)) + 1|0);
   $9 = ($8|0)==($high|0);
   if ($9) {
    break;
   } else {
    $$02 = $8;
   }
  }
 }
 return ($high|0);
}
function __ZNKSt3__15ctypeIcE8do_widenEc($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ($c|0);
}
function __ZNKSt3__15ctypeIcE8do_widenEPKcS3_Pc($this,$low,$high,$dest) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $dest = $dest|0;
 var $$012 = 0, $$03 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 if (!($0)) {
  $$012 = $low;$$03 = $dest;
  while(1) {
   $1 = HEAP8[$$012>>0]|0;
   HEAP8[$$03>>0] = $1;
   $2 = ((($$012)) + 1|0);
   $3 = ((($$03)) + 1|0);
   $4 = ($2|0)==($high|0);
   if ($4) {
    break;
   } else {
    $$012 = $2;$$03 = $3;
   }
  }
 }
 return ($high|0);
}
function __ZNKSt3__15ctypeIcE9do_narrowEcc($this,$c,$dfault) {
 $this = $this|0;
 $c = $c|0;
 $dfault = $dfault|0;
 var $c$dfault = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii1 = ($c<<24>>24)>(-1);
 $c$dfault = $isascii1 ? $c : $dfault;
 return ($c$dfault|0);
}
function __ZNKSt3__15ctypeIcE9do_narrowEPKcS3_cPc($this,$low,$high,$dfault,$dest) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $dfault = $dfault|0;
 $dest = $dest|0;
 var $$013 = 0, $$04 = 0, $$dfault = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $isascii2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 if (!($0)) {
  $$013 = $low;$$04 = $dest;
  while(1) {
   $1 = HEAP8[$$013>>0]|0;
   $isascii2 = ($1<<24>>24)>(-1);
   $$dfault = $isascii2 ? $1 : $dfault;
   HEAP8[$$04>>0] = $$dfault;
   $2 = ((($$013)) + 1|0);
   $3 = ((($$04)) + 1|0);
   $4 = ($2|0)==($high|0);
   if ($4) {
    break;
   } else {
    $$013 = $2;$$04 = $3;
   }
  }
 }
 return ($high|0);
}
function __ZNSt3__17codecvtIcc11__mbstate_tED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_($this,$0,$frm,$1,$frm_nxt,$to,$2,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $1 = $1|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $2 = $2|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_($this,$0,$frm,$1,$frm_nxt,$to,$2,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $1 = $1|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $2 = $2|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this,$0,$to,$1,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $to = $to|0;
 $1 = $1|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$to_nxt>>2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE11do_encodingEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j($this,$0,$frm,$end,$mx) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $end = $end|0;
 $mx = $mx|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $end;
 $2 = $frm;
 $3 = (($1) - ($2))|0;
 $4 = ($3>>>0)<($mx>>>0);
 $5 = $4 ? $3 : $mx;
 return ($5|0);
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function __ZNSt3__17codecvtIwc11__mbstate_tEC2Ej($this,$refs) {
 $this = $this|0;
 $refs = $refs|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($refs) + -1)|0;
 $1 = ((($this)) + 4|0);
 HEAP32[$1>>2] = $0;
 HEAP32[$this>>2] = (6848);
 __THREW__ = 0;
 $2 = (invoke_i(457)|0);
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if ($4) {
  $6 = ___cxa_find_matching_catch()|0;
  $7 = tempRet0;
  ___resumeException($6|0);
  // unreachable;
 } else {
  $5 = ((($this)) + 8|0);
  HEAP32[$5>>2] = $2;
  return;
 }
}
function __ZNSt3__17codecvtIwc11__mbstate_tED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__17codecvtIwc11__mbstate_tED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_($this,$st,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $st = $st|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $$0 = 0, $$01$be = 0, $$01128 = 0, $$01128$lcssa170 = 0, $$02$be = 0, $$02127 = 0, $$02127$lcssa177 = 0, $$1$lcssa = 0, $$1113 = 0, $$lcssa = 0, $$lcssa183 = 0, $$lcssa191 = 0, $$pre = 0, $$pre59 = 0, $$pre60 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $fend$0$lcssa = 0, $fend$0133 = 0, $fend$1$be = 0, $fend$1129 = 0, $fend$2$lcssa = 0, $fend$2120 = 0, $n$0117 = 0, $not$ = 0, $or$cond = 0, $or$cond126 = 0, $p$0118 = 0, $save_state = 0;
 var $tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $save_state = sp;
 $tmp = sp + 8|0;
 $0 = ($frm|0)==($frm_end|0);
 L1: do {
  if ($0) {
   $fend$0$lcssa = $frm_end;
  } else {
   $fend$0133 = $frm;
   while(1) {
    $1 = HEAP32[$fend$0133>>2]|0;
    $2 = ($1|0)==(0);
    if ($2) {
     $fend$0$lcssa = $fend$0133;
     break L1;
    }
    $3 = ((($fend$0133)) + 4|0);
    $4 = ($3|0)==($frm_end|0);
    if ($4) {
     $fend$0$lcssa = $frm_end;
     break;
    } else {
     $fend$0133 = $3;
    }
   }
  }
 } while(0);
 HEAP32[$to_nxt>>2] = $to;
 HEAP32[$frm_nxt>>2] = $frm;
 $5 = $to_end;
 $6 = ((($this)) + 8|0);
 $7 = ($frm|0)==($frm_end|0);
 $8 = ($to|0)==($to_end|0);
 $or$cond126 = $8 | $7;
 L6: do {
  if ($or$cond126) {
   $111 = $frm;
   label = 47;
  } else {
   $$01128 = $frm;$$02127 = $to;$fend$1129 = $fend$0$lcssa;
   while(1) {
    $9 = $st;
    $10 = $9;
    $11 = HEAP32[$10>>2]|0;
    $12 = (($9) + 4)|0;
    $13 = $12;
    $14 = HEAP32[$13>>2]|0;
    $15 = $save_state;
    $16 = $15;
    HEAP32[$16>>2] = $11;
    $17 = (($15) + 4)|0;
    $18 = $17;
    HEAP32[$18>>2] = $14;
    $19 = $fend$1129;
    $20 = $$01128;
    $21 = (($19) - ($20))|0;
    $22 = $21 >> 2;
    $23 = $$02127;
    $24 = (($5) - ($23))|0;
    $25 = HEAP32[$6>>2]|0;
    $26 = (_uselocale(($25|0))|0);
    __THREW__ = 0;
    $27 = (invoke_iiiiii(533,($$02127|0),($frm_nxt|0),($22|0),($24|0),($st|0))|0);
    $28 = __THREW__; __THREW__ = 0;
    $29 = $28&1;
    if ($29) {
     $$lcssa183 = $26;
     label = 9;
     break;
    }
    $30 = ($26|0)==(0|0);
    if (!($30)) {
     __THREW__ = 0;
     (invoke_ii(472,($26|0))|0);
     $31 = __THREW__; __THREW__ = 0;
     $32 = $31&1;
     if ($32) {
      label = 8;
      break;
     }
    }
    if ((($27|0) == -1)) {
     $$01128$lcssa170 = $$01128;$$02127$lcssa177 = $$02127;
     label = 14;
     break;
    } else if ((($27|0) == 0)) {
     $$0 = 1;
     break L6;
    }
    $69 = HEAP32[$to_nxt>>2]|0;
    $70 = (($69) + ($27)|0);
    HEAP32[$to_nxt>>2] = $70;
    $71 = ($70|0)==($to_end|0);
    if ($71) {
     label = 27;
     break;
    }
    $72 = ($fend$1129|0)==($frm_end|0);
    if ($72) {
     $$pre = HEAP32[$frm_nxt>>2]|0;
     $$01$be = $$pre;$$02$be = $70;$fend$1$be = $frm_end;
    } else {
     $75 = HEAP32[$6>>2]|0;
     $76 = (_uselocale(($75|0))|0);
     __THREW__ = 0;
     $77 = (invoke_iiii(534,($tmp|0),0,($st|0))|0);
     $78 = __THREW__; __THREW__ = 0;
     $79 = $78&1;
     if ($79) {
      $$lcssa191 = $76;
      label = 35;
      break;
     }
     $80 = ($76|0)==(0|0);
     if (!($80)) {
      __THREW__ = 0;
      (invoke_ii(472,($76|0))|0);
      $81 = __THREW__; __THREW__ = 0;
      $82 = $81&1;
      if ($82) {
       label = 34;
       break;
      }
     }
     $92 = ($77|0)==(-1);
     if ($92) {
      $$0 = 2;
      break L6;
     }
     $93 = HEAP32[$to_nxt>>2]|0;
     $94 = $93;
     $95 = (($5) - ($94))|0;
     $96 = ($77>>>0)>($95>>>0);
     if ($96) {
      $$0 = 1;
      break L6;
     }
     $97 = ($77|0)==(0);
     if (!($97)) {
      $n$0117 = $77;$p$0118 = $tmp;
      while(1) {
       $98 = ((($p$0118)) + 1|0);
       $99 = HEAP8[$p$0118>>0]|0;
       $100 = HEAP32[$to_nxt>>2]|0;
       $101 = ((($100)) + 1|0);
       HEAP32[$to_nxt>>2] = $101;
       HEAP8[$100>>0] = $99;
       $102 = (($n$0117) + -1)|0;
       $103 = ($102|0)==(0);
       if ($103) {
        break;
       } else {
        $n$0117 = $102;$p$0118 = $98;
       }
      }
     }
     $104 = HEAP32[$frm_nxt>>2]|0;
     $105 = ((($104)) + 4|0);
     HEAP32[$frm_nxt>>2] = $105;
     $106 = ($105|0)==($frm_end|0);
     L27: do {
      if ($106) {
       $fend$2$lcssa = $frm_end;
      } else {
       $fend$2120 = $105;
       while(1) {
        $107 = HEAP32[$fend$2120>>2]|0;
        $108 = ($107|0)==(0);
        if ($108) {
         $fend$2$lcssa = $fend$2120;
         break L27;
        }
        $109 = ((($fend$2120)) + 4|0);
        $110 = ($109|0)==($frm_end|0);
        if ($110) {
         $fend$2$lcssa = $frm_end;
         break;
        } else {
         $fend$2120 = $109;
        }
       }
      }
     } while(0);
     $$pre59 = HEAP32[$to_nxt>>2]|0;
     $$01$be = $105;$$02$be = $$pre59;$fend$1$be = $fend$2$lcssa;
    }
    $73 = ($$01$be|0)==($frm_end|0);
    $74 = ($$02$be|0)==($to_end|0);
    $or$cond = $74 | $73;
    if ($or$cond) {
     $111 = $$01$be;
     label = 47;
     break L6;
    } else {
     $$01128 = $$01$be;$$02127 = $$02$be;$fend$1129 = $fend$1$be;
    }
   }
   if ((label|0) == 8) {
    $33 = ___cxa_find_matching_catch(0|0)|0;
    $34 = tempRet0;
    ___clang_call_terminate($33);
    // unreachable;
   }
   else if ((label|0) == 9) {
    $35 = ___cxa_find_matching_catch()|0;
    $36 = tempRet0;
    $37 = ($$lcssa183|0)==(0|0);
    if (!($37)) {
     __THREW__ = 0;
     (invoke_ii(472,($$lcssa183|0))|0);
     $38 = __THREW__; __THREW__ = 0;
     $39 = $38&1;
     if ($39) {
      $40 = ___cxa_find_matching_catch(0|0)|0;
      $41 = tempRet0;
      ___clang_call_terminate($40);
      // unreachable;
     }
    }
    ___resumeException($35|0);
    // unreachable;
   }
   else if ((label|0) == 14) {
    HEAP32[$to_nxt>>2] = $$02127$lcssa177;
    $42 = HEAP32[$frm_nxt>>2]|0;
    $43 = ($$01128$lcssa170|0)==($42|0);
    L43: do {
     if ($43) {
      $$1$lcssa = $$01128$lcssa170;
     } else {
      $$1113 = $$01128$lcssa170;$47 = $$02127$lcssa177;
      while(1) {
       $44 = HEAP32[$$1113>>2]|0;
       $45 = HEAP32[$6>>2]|0;
       $46 = (_uselocale(($45|0))|0);
       __THREW__ = 0;
       $48 = (invoke_iiii(534,($47|0),($44|0),($save_state|0))|0);
       $49 = __THREW__; __THREW__ = 0;
       $50 = $49&1;
       if ($50) {
        $$lcssa = $46;
        break;
       }
       $51 = ($46|0)==(0|0);
       if (!($51)) {
        __THREW__ = 0;
        (invoke_ii(472,($46|0))|0);
        $52 = __THREW__; __THREW__ = 0;
        $53 = $52&1;
        if ($53) {
         label = 18;
         break;
        }
       }
       $63 = ($48|0)==(-1);
       if ($63) {
        $$1$lcssa = $$1113;
        break L43;
       }
       $64 = HEAP32[$to_nxt>>2]|0;
       $65 = (($64) + ($48)|0);
       HEAP32[$to_nxt>>2] = $65;
       $66 = ((($$1113)) + 4|0);
       $67 = HEAP32[$frm_nxt>>2]|0;
       $68 = ($66|0)==($67|0);
       if ($68) {
        $$1$lcssa = $66;
        break L43;
       } else {
        $$1113 = $66;$47 = $65;
       }
      }
      if ((label|0) == 18) {
       $54 = ___cxa_find_matching_catch(0|0)|0;
       $55 = tempRet0;
       ___clang_call_terminate($54);
       // unreachable;
      }
      $56 = ___cxa_find_matching_catch()|0;
      $57 = tempRet0;
      $58 = ($$lcssa|0)==(0|0);
      if (!($58)) {
       __THREW__ = 0;
       (invoke_ii(472,($$lcssa|0))|0);
       $59 = __THREW__; __THREW__ = 0;
       $60 = $59&1;
       if ($60) {
        $61 = ___cxa_find_matching_catch(0|0)|0;
        $62 = tempRet0;
        ___clang_call_terminate($61);
        // unreachable;
       }
      }
      ___resumeException($56|0);
      // unreachable;
     }
    } while(0);
    HEAP32[$frm_nxt>>2] = $$1$lcssa;
    $$0 = 2;
    break;
   }
   else if ((label|0) == 27) {
    $$pre60 = HEAP32[$frm_nxt>>2]|0;
    $111 = $$pre60;
    label = 47;
    break;
   }
   else if ((label|0) == 34) {
    $83 = ___cxa_find_matching_catch(0|0)|0;
    $84 = tempRet0;
    ___clang_call_terminate($83);
    // unreachable;
   }
   else if ((label|0) == 35) {
    $85 = ___cxa_find_matching_catch()|0;
    $86 = tempRet0;
    $87 = ($$lcssa191|0)==(0|0);
    if (!($87)) {
     __THREW__ = 0;
     (invoke_ii(472,($$lcssa191|0))|0);
     $88 = __THREW__; __THREW__ = 0;
     $89 = $88&1;
     if ($89) {
      $90 = ___cxa_find_matching_catch(0|0)|0;
      $91 = tempRet0;
      ___clang_call_terminate($90);
      // unreachable;
     }
    }
    ___resumeException($85|0);
    // unreachable;
   }
  }
 } while(0);
 if ((label|0) == 47) {
  $not$ = ($111|0)!=($frm_end|0);
  $112 = $not$&1;
  $$0 = $112;
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_($this,$st,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $st = $st|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $$0 = 0, $$01$be = 0, $$01165 = 0, $$01165$lcssa223 = 0, $$02$be = 0, $$02164 = 0, $$02164$lcssa230 = 0, $$1$lcssa = 0, $$1157 = 0, $$1157$lcssa215 = 0, $$1157$lcssa216 = 0, $$2 = 0, $$lcssa = 0, $$lcssa238 = 0, $$lcssa244 = 0, $$lcssa252 = 0, $$pre = 0, $$pre80 = 0, $$pre81 = 0, $0 = 0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $fend$0$lcssa = 0, $fend$0169 = 0, $fend$1$be = 0, $fend$1166 = 0, $fend$2$lcssa = 0, $fend$2158 = 0, $not$ = 0, $not$3 = 0, $or$cond = 0, $or$cond163 = 0, $save_state = 0, $storemerge156 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $save_state = sp;
 $0 = ($frm|0)==($frm_end|0);
 L1: do {
  if ($0) {
   $fend$0$lcssa = $frm_end;
  } else {
   $fend$0169 = $frm;
   while(1) {
    $1 = HEAP8[$fend$0169>>0]|0;
    $2 = ($1<<24>>24)==(0);
    if ($2) {
     $fend$0$lcssa = $fend$0169;
     break L1;
    }
    $3 = ((($fend$0169)) + 1|0);
    $4 = ($3|0)==($frm_end|0);
    if ($4) {
     $fend$0$lcssa = $frm_end;
     break;
    } else {
     $fend$0169 = $3;
    }
   }
  }
 } while(0);
 HEAP32[$to_nxt>>2] = $to;
 HEAP32[$frm_nxt>>2] = $frm;
 $5 = $to_end;
 $6 = ((($this)) + 8|0);
 $7 = ($frm|0)==($frm_end|0);
 $8 = ($to|0)==($to_end|0);
 $or$cond163 = $8 | $7;
 L6: do {
  if ($or$cond163) {
   $103 = $frm;
   label = 47;
  } else {
   $$01165 = $frm;$$02164 = $to;$fend$1166 = $fend$0$lcssa;
   while(1) {
    $9 = $st;
    $10 = $9;
    $11 = HEAP32[$10>>2]|0;
    $12 = (($9) + 4)|0;
    $13 = $12;
    $14 = HEAP32[$13>>2]|0;
    $15 = $save_state;
    $16 = $15;
    HEAP32[$16>>2] = $11;
    $17 = (($15) + 4)|0;
    $18 = $17;
    HEAP32[$18>>2] = $14;
    $19 = $fend$1166;
    $20 = $$01165;
    $21 = (($19) - ($20))|0;
    $22 = $$02164;
    $23 = (($5) - ($22))|0;
    $24 = $23 >> 2;
    $25 = HEAP32[$6>>2]|0;
    $26 = (_uselocale(($25|0))|0);
    __THREW__ = 0;
    $27 = (invoke_iiiiii(535,($$02164|0),($frm_nxt|0),($21|0),($24|0),($st|0))|0);
    $28 = __THREW__; __THREW__ = 0;
    $29 = $28&1;
    if ($29) {
     $$lcssa244 = $26;
     label = 9;
     break;
    }
    $30 = ($26|0)==(0|0);
    if (!($30)) {
     __THREW__ = 0;
     (invoke_ii(472,($26|0))|0);
     $31 = __THREW__; __THREW__ = 0;
     $32 = $31&1;
     if ($32) {
      label = 8;
      break;
     }
    }
    if ((($27|0) == 0)) {
     $$0 = 2;
     break L6;
    } else if ((($27|0) == -1)) {
     $$01165$lcssa223 = $$01165;$$02164$lcssa230 = $$02164;$$lcssa238 = $19;
     label = 14;
     break;
    }
    $70 = HEAP32[$to_nxt>>2]|0;
    $71 = (($70) + ($27<<2)|0);
    HEAP32[$to_nxt>>2] = $71;
    $72 = ($71|0)==($to_end|0);
    if ($72) {
     label = 31;
     break;
    }
    $73 = ($fend$1166|0)==($frm_end|0);
    $$pre = HEAP32[$frm_nxt>>2]|0;
    if ($73) {
     $$01$be = $$pre;$$02$be = $71;$fend$1$be = $frm_end;
    } else {
     $76 = HEAP32[$6>>2]|0;
     $77 = (_uselocale(($76|0))|0);
     __THREW__ = 0;
     $78 = (invoke_iiiii(536,($71|0),($$pre|0),1,($st|0))|0);
     $79 = __THREW__; __THREW__ = 0;
     $80 = $79&1;
     if ($80) {
      $$lcssa252 = $77;
      label = 38;
      break;
     }
     $81 = ($77|0)==(0|0);
     if (!($81)) {
      __THREW__ = 0;
      (invoke_ii(472,($77|0))|0);
      $82 = __THREW__; __THREW__ = 0;
      $83 = $82&1;
      if ($83) {
       label = 37;
       break;
      }
     }
     $93 = ($78|0)==(0);
     if (!($93)) {
      $$0 = 2;
      break L6;
     }
     $94 = HEAP32[$to_nxt>>2]|0;
     $95 = ((($94)) + 4|0);
     HEAP32[$to_nxt>>2] = $95;
     $96 = HEAP32[$frm_nxt>>2]|0;
     $97 = ((($96)) + 1|0);
     HEAP32[$frm_nxt>>2] = $97;
     $98 = ($97|0)==($frm_end|0);
     L22: do {
      if ($98) {
       $fend$2$lcssa = $frm_end;
      } else {
       $fend$2158 = $97;
       while(1) {
        $99 = HEAP8[$fend$2158>>0]|0;
        $100 = ($99<<24>>24)==(0);
        if ($100) {
         $fend$2$lcssa = $fend$2158;
         break L22;
        }
        $101 = ((($fend$2158)) + 1|0);
        $102 = ($101|0)==($frm_end|0);
        if ($102) {
         $fend$2$lcssa = $frm_end;
         break;
        } else {
         $fend$2158 = $101;
        }
       }
      }
     } while(0);
     $$pre80 = HEAP32[$to_nxt>>2]|0;
     $$01$be = $97;$$02$be = $$pre80;$fend$1$be = $fend$2$lcssa;
    }
    $74 = ($$01$be|0)==($frm_end|0);
    $75 = ($$02$be|0)==($to_end|0);
    $or$cond = $75 | $74;
    if ($or$cond) {
     $103 = $$01$be;
     label = 47;
     break L6;
    } else {
     $$01165 = $$01$be;$$02164 = $$02$be;$fend$1166 = $fend$1$be;
    }
   }
   if ((label|0) == 8) {
    $33 = ___cxa_find_matching_catch(0|0)|0;
    $34 = tempRet0;
    ___clang_call_terminate($33);
    // unreachable;
   }
   else if ((label|0) == 9) {
    $35 = ___cxa_find_matching_catch()|0;
    $36 = tempRet0;
    $37 = ($$lcssa244|0)==(0|0);
    if (!($37)) {
     __THREW__ = 0;
     (invoke_ii(472,($$lcssa244|0))|0);
     $38 = __THREW__; __THREW__ = 0;
     $39 = $38&1;
     if ($39) {
      $40 = ___cxa_find_matching_catch(0|0)|0;
      $41 = tempRet0;
      ___clang_call_terminate($40);
      // unreachable;
     }
    }
    ___resumeException($35|0);
    // unreachable;
   }
   else if ((label|0) == 14) {
    HEAP32[$to_nxt>>2] = $$02164$lcssa230;
    $42 = HEAP32[$frm_nxt>>2]|0;
    $43 = ($$01165$lcssa223|0)==($42|0);
    L31: do {
     if ($43) {
      $$1$lcssa = $$01165$lcssa223;
     } else {
      $$1157 = $$01165$lcssa223;$storemerge156 = $$02164$lcssa230;
      while(1) {
       $44 = $$1157;
       $45 = (($$lcssa238) - ($44))|0;
       $46 = HEAP32[$6>>2]|0;
       $47 = (_uselocale(($46|0))|0);
       __THREW__ = 0;
       $48 = (invoke_iiiii(536,($storemerge156|0),($$1157|0),($45|0),($save_state|0))|0);
       $49 = __THREW__; __THREW__ = 0;
       $50 = $49&1;
       if ($50) {
        $$lcssa = $47;
        label = 19;
        break;
       }
       $51 = ($47|0)==(0|0);
       if (!($51)) {
        __THREW__ = 0;
        (invoke_ii(472,($47|0))|0);
        $52 = __THREW__; __THREW__ = 0;
        $53 = $52&1;
        if ($53) {
         label = 18;
         break;
        }
       }
       if ((($48|0) == 0)) {
        $63 = ((($$1157)) + 1|0);
        $$2 = $63;
       } else if ((($48|0) == -1)) {
        $$1157$lcssa215 = $$1157;
        label = 25;
        break;
       } else if ((($48|0) == -2)) {
        $$1157$lcssa216 = $$1157;
        label = 26;
        break;
       } else {
        $64 = (($$1157) + ($48)|0);
        $$2 = $64;
       }
       $65 = HEAP32[$to_nxt>>2]|0;
       $66 = ((($65)) + 4|0);
       HEAP32[$to_nxt>>2] = $66;
       $67 = HEAP32[$frm_nxt>>2]|0;
       $68 = ($$2|0)==($67|0);
       if ($68) {
        $$1$lcssa = $$2;
        break L31;
       } else {
        $$1157 = $$2;$storemerge156 = $66;
       }
      }
      if ((label|0) == 18) {
       $54 = ___cxa_find_matching_catch(0|0)|0;
       $55 = tempRet0;
       ___clang_call_terminate($54);
       // unreachable;
      }
      else if ((label|0) == 19) {
       $56 = ___cxa_find_matching_catch()|0;
       $57 = tempRet0;
       $58 = ($$lcssa|0)==(0|0);
       if (!($58)) {
        __THREW__ = 0;
        (invoke_ii(472,($$lcssa|0))|0);
        $59 = __THREW__; __THREW__ = 0;
        $60 = $59&1;
        if ($60) {
         $61 = ___cxa_find_matching_catch(0|0)|0;
         $62 = tempRet0;
         ___clang_call_terminate($61);
         // unreachable;
        }
       }
       ___resumeException($56|0);
       // unreachable;
      }
      else if ((label|0) == 25) {
       HEAP32[$frm_nxt>>2] = $$1157$lcssa215;
       $$0 = 2;
       break L6;
      }
      else if ((label|0) == 26) {
       HEAP32[$frm_nxt>>2] = $$1157$lcssa216;
       $$0 = 1;
       break L6;
      }
     }
    } while(0);
    HEAP32[$frm_nxt>>2] = $$1$lcssa;
    $not$3 = ($$1$lcssa|0)!=($frm_end|0);
    $69 = $not$3&1;
    $$0 = $69;
    break;
   }
   else if ((label|0) == 31) {
    $$pre81 = HEAP32[$frm_nxt>>2]|0;
    $103 = $$pre81;
    label = 47;
    break;
   }
   else if ((label|0) == 37) {
    $84 = ___cxa_find_matching_catch(0|0)|0;
    $85 = tempRet0;
    ___clang_call_terminate($84);
    // unreachable;
   }
   else if ((label|0) == 38) {
    $86 = ___cxa_find_matching_catch()|0;
    $87 = tempRet0;
    $88 = ($$lcssa252|0)==(0|0);
    if (!($88)) {
     __THREW__ = 0;
     (invoke_ii(472,($$lcssa252|0))|0);
     $89 = __THREW__; __THREW__ = 0;
     $90 = $89&1;
     if ($90) {
      $91 = ___cxa_find_matching_catch(0|0)|0;
      $92 = tempRet0;
      ___clang_call_terminate($91);
      // unreachable;
     }
    }
    ___resumeException($86|0);
    // unreachable;
   }
  }
 } while(0);
 if ((label|0) == 47) {
  $not$ = ($103|0)!=($frm_end|0);
  $104 = $not$&1;
  $$0 = $104;
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this,$st,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $st = $st|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $n$02 = 0, $p$03 = 0, $tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $tmp = sp;
 HEAP32[$to_nxt>>2] = $to;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (_uselocale(($1|0))|0);
 __THREW__ = 0;
 $3 = (invoke_iiii(534,($tmp|0),0,($st|0))|0);
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if ($5) {
  $11 = ___cxa_find_matching_catch()|0;
  $12 = tempRet0;
  $13 = ($2|0)==(0|0);
  if (!($13)) {
   __THREW__ = 0;
   (invoke_ii(472,($2|0))|0);
   $14 = __THREW__; __THREW__ = 0;
   $15 = $14&1;
   if ($15) {
    $16 = ___cxa_find_matching_catch(0|0)|0;
    $17 = tempRet0;
    ___clang_call_terminate($16);
    // unreachable;
   }
  }
  ___resumeException($11|0);
  // unreachable;
 }
 $6 = ($2|0)==(0|0);
 if (!($6)) {
  __THREW__ = 0;
  (invoke_ii(472,($2|0))|0);
  $7 = __THREW__; __THREW__ = 0;
  $8 = $7&1;
  if ($8) {
   $9 = ___cxa_find_matching_catch(0|0)|0;
   $10 = tempRet0;
   ___clang_call_terminate($9);
   // unreachable;
  }
 }
 if ((($3|0) == 0) | (($3|0) == -1)) {
  $$0 = 2;
 } else {
  $18 = (($3) + -1)|0;
  $19 = HEAP32[$to_nxt>>2]|0;
  $20 = $to_end;
  $21 = $19;
  $22 = (($20) - ($21))|0;
  $23 = ($18>>>0)>($22>>>0);
  if ($23) {
   $$0 = 1;
  } else {
   $24 = ($18|0)==(0);
   if ($24) {
    $$0 = 0;
   } else {
    $n$02 = $18;$p$03 = $tmp;
    while(1) {
     $25 = ((($p$03)) + 1|0);
     $26 = HEAP8[$p$03>>0]|0;
     $27 = HEAP32[$to_nxt>>2]|0;
     $28 = ((($27)) + 1|0);
     HEAP32[$to_nxt>>2] = $28;
     HEAP8[$27>>0] = $26;
     $29 = (($n$02) + -1)|0;
     $30 = ($29|0)==(0);
     if ($30) {
      $$0 = 0;
      break;
     } else {
      $n$02 = $29;$p$03 = $25;
     }
    }
   }
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE11do_encodingEv($this) {
 $this = $this|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 __THREW__ = 0;
 $2 = (invoke_ii(472,($1|0))|0);
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 do {
  if ($4) {
   label = 16;
  } else {
   __THREW__ = 0;
   $5 = (invoke_iiii(537,(0|0),(0|0),4)|0);
   $6 = __THREW__; __THREW__ = 0;
   $7 = $6&1;
   if ($7) {
    $13 = ___cxa_find_matching_catch(0|0)|0;
    $14 = tempRet0;
    $15 = ($2|0)==(0|0);
    if ($15) {
     $eh$lpad$body$indexZ2D = $13;
     break;
    }
    __THREW__ = 0;
    (invoke_ii(472,($2|0))|0);
    $16 = __THREW__; __THREW__ = 0;
    $17 = $16&1;
    if (!($17)) {
     $eh$lpad$body$indexZ2D = $13;
     break;
    }
    $18 = ___cxa_find_matching_catch(0|0)|0;
    $19 = tempRet0;
    ___clang_call_terminate($18);
    // unreachable;
   }
   $8 = ($2|0)==(0|0);
   if (!($8)) {
    __THREW__ = 0;
    (invoke_ii(472,($2|0))|0);
    $9 = __THREW__; __THREW__ = 0;
    $10 = $9&1;
    if ($10) {
     $11 = ___cxa_find_matching_catch(0|0)|0;
     $12 = tempRet0;
     ___clang_call_terminate($11);
     // unreachable;
    }
   }
   $20 = ($5|0)==(0);
   if ($20) {
    $21 = HEAP32[$0>>2]|0;
    $22 = ($21|0)==(0|0);
    if ($22) {
     $$0 = 1;
    } else {
     __THREW__ = 0;
     $23 = (invoke_ii(472,($21|0))|0);
     $24 = __THREW__; __THREW__ = 0;
     $25 = $24&1;
     if ($25) {
      label = 16;
      break;
     }
     $26 = ($23|0)==(0|0);
     if ($26) {
      $$0 = 0;
     } else {
      __THREW__ = 0;
      (invoke_ii(472,($23|0))|0);
      $27 = __THREW__; __THREW__ = 0;
      $28 = $27&1;
      if ($28) {
       $29 = ___cxa_find_matching_catch(0|0)|0;
       $30 = tempRet0;
       ___clang_call_terminate($29);
       // unreachable;
      } else {
       $$0 = 0;
      }
     }
    }
   } else {
    $$0 = -1;
   }
   return ($$0|0);
  }
 } while(0);
 if ((label|0) == 16) {
  $31 = ___cxa_find_matching_catch(0|0)|0;
  $32 = tempRet0;
  $eh$lpad$body$indexZ2D = $31;
 }
 ___clang_call_terminate($eh$lpad$body$indexZ2D);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j($this,$st,$frm,$frm_end,$mx) {
 $this = $this|0;
 $st = $st|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 var $$0115 = 0, $$1 = 0, $$lcssa = 0, $$pn = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $nbytes$0$lcssa = 0, $nbytes$016 = 0, $nbytes$1 = 0, $nwchar_t$017 = 0, $or$cond = 0, $or$cond14 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $frm_end;
 $1 = ((($this)) + 8|0);
 $2 = ($mx|0)==(0);
 $3 = ($frm|0)==($frm_end|0);
 $or$cond14 = $3 | $2;
 L1: do {
  if ($or$cond14) {
   $nbytes$0$lcssa = 0;
  } else {
   $$0115 = $frm;$nbytes$016 = 0;$nwchar_t$017 = 0;
   while(1) {
    $4 = $$0115;
    $5 = (($0) - ($4))|0;
    $6 = HEAP32[$1>>2]|0;
    $7 = (_uselocale(($6|0))|0);
    __THREW__ = 0;
    $8 = (invoke_iiii(538,($$0115|0),($5|0),($st|0))|0);
    $9 = __THREW__; __THREW__ = 0;
    $10 = $9&1;
    if ($10) {
     $$lcssa = $7;
     break;
    }
    $11 = ($7|0)==(0|0);
    if (!($11)) {
     __THREW__ = 0;
     (invoke_ii(472,($7|0))|0);
     $12 = __THREW__; __THREW__ = 0;
     $13 = $12&1;
     if ($13) {
      label = 5;
      break;
     }
    }
    if ((($8|0) == 0)) {
     $23 = ((($$0115)) + 1|0);
     $$1 = $23;$$pn = 1;
    } else if ((($8|0) == -2) | (($8|0) == -1)) {
     $nbytes$0$lcssa = $nbytes$016;
     break L1;
    } else {
     $24 = (($$0115) + ($8)|0);
     $$1 = $24;$$pn = $8;
    }
    $nbytes$1 = (($$pn) + ($nbytes$016))|0;
    $25 = (($nwchar_t$017) + 1)|0;
    $26 = ($25>>>0)>=($mx>>>0);
    $27 = ($$1|0)==($frm_end|0);
    $or$cond = $27 | $26;
    if ($or$cond) {
     $nbytes$0$lcssa = $nbytes$1;
     break L1;
    } else {
     $$0115 = $$1;$nbytes$016 = $nbytes$1;$nwchar_t$017 = $25;
    }
   }
   if ((label|0) == 5) {
    $14 = ___cxa_find_matching_catch(0|0)|0;
    $15 = tempRet0;
    ___clang_call_terminate($14);
    // unreachable;
   }
   $16 = ___cxa_find_matching_catch()|0;
   $17 = tempRet0;
   $18 = ($$lcssa|0)==(0|0);
   if (!($18)) {
    __THREW__ = 0;
    (invoke_ii(472,($$lcssa|0))|0);
    $19 = __THREW__; __THREW__ = 0;
    $20 = $19&1;
    if ($20) {
     $21 = ___cxa_find_matching_catch(0|0)|0;
     $22 = tempRet0;
     ___clang_call_terminate($21);
     // unreachable;
    }
   }
   ___resumeException($16|0);
   // unreachable;
  }
 } while(0);
 return ($nbytes$0$lcssa|0);
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 if ($2) {
  $11 = 1;
 } else {
  __THREW__ = 0;
  $3 = (invoke_ii(472,($1|0))|0);
  $4 = __THREW__; __THREW__ = 0;
  $5 = $4&1;
  if ($5) {
   $12 = ___cxa_find_matching_catch(0|0)|0;
   $13 = tempRet0;
   ___clang_call_terminate($12);
   // unreachable;
  }
  $6 = ($3|0)==(0|0);
  if ($6) {
   $11 = 4;
  } else {
   __THREW__ = 0;
   (invoke_ii(472,($3|0))|0);
   $7 = __THREW__; __THREW__ = 0;
   $8 = $7&1;
   if ($8) {
    $9 = ___cxa_find_matching_catch(0|0)|0;
    $10 = tempRet0;
    ___clang_call_terminate($9);
    // unreachable;
   } else {
    $11 = 4;
   }
  }
 }
 return ($11|0);
}
function __ZNSt3__17codecvtIDsc11__mbstate_tED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_($this,$0,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $1 = 0, $2 = 0, $3 = 0, $_frm_nxt = 0, $_to_nxt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $_frm_nxt = sp + 4|0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt>>2] = $frm;
 HEAP32[$_to_nxt>>2] = $to;
 $1 = (__ZNSt3__1L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$_frm_nxt,$to,$to_end,$_to_nxt,1114111,0)|0);
 $2 = HEAP32[$_frm_nxt>>2]|0;
 HEAP32[$frm_nxt>>2] = $2;
 $3 = HEAP32[$_to_nxt>>2]|0;
 HEAP32[$to_nxt>>2] = $3;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_($this,$0,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $1 = 0, $2 = 0, $3 = 0, $_frm_nxt = 0, $_to_nxt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $_frm_nxt = sp + 4|0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt>>2] = $frm;
 HEAP32[$_to_nxt>>2] = $to;
 $1 = (__ZNSt3__1L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$_frm_nxt,$to,$to_end,$_to_nxt,1114111,0)|0);
 $2 = HEAP32[$_frm_nxt>>2]|0;
 HEAP32[$frm_nxt>>2] = $2;
 $3 = HEAP32[$_to_nxt>>2]|0;
 HEAP32[$to_nxt>>2] = $3;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this,$0,$to,$1,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $to = $to|0;
 $1 = $1|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$to_nxt>>2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE11do_encodingEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j($this,$0,$frm,$frm_end,$mx) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (__ZNSt3__1L20utf8_to_utf16_lengthEPKhS1_jmNS_12codecvt_modeE($frm,$frm_end,$mx,1114111,0)|0);
 return ($1|0);
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 4;
}
function __ZNSt3__17codecvtIDic11__mbstate_tED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_($this,$0,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $1 = 0, $2 = 0, $3 = 0, $_frm_nxt = 0, $_to_nxt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $_frm_nxt = sp + 4|0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt>>2] = $frm;
 HEAP32[$_to_nxt>>2] = $to;
 $1 = (__ZNSt3__1L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$_frm_nxt,$to,$to_end,$_to_nxt,1114111,0)|0);
 $2 = HEAP32[$_frm_nxt>>2]|0;
 HEAP32[$frm_nxt>>2] = $2;
 $3 = HEAP32[$_to_nxt>>2]|0;
 HEAP32[$to_nxt>>2] = $3;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_($this,$0,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $1 = 0, $2 = 0, $3 = 0, $_frm_nxt = 0, $_to_nxt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $_frm_nxt = sp + 4|0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt>>2] = $frm;
 HEAP32[$_to_nxt>>2] = $to;
 $1 = (__ZNSt3__1L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$_frm_nxt,$to,$to_end,$_to_nxt,1114111,0)|0);
 $2 = HEAP32[$_frm_nxt>>2]|0;
 HEAP32[$frm_nxt>>2] = $2;
 $3 = HEAP32[$_to_nxt>>2]|0;
 HEAP32[$to_nxt>>2] = $3;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this,$0,$to,$1,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $to = $to|0;
 $1 = $1|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$to_nxt>>2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE11do_encodingEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j($this,$0,$frm,$frm_end,$mx) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (__ZNSt3__1L19utf8_to_ucs4_lengthEPKhS1_jmNS_12codecvt_modeE($frm,$frm_end,$mx,1114111,0)|0);
 return ($1|0);
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 4;
}
function __ZNSt3__116__narrow_to_utf8ILj32EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNSt3__117__widen_from_utf8ILj32EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNSt3__18numpunctIcEC2Ej($this,$refs) {
 $this = $this|0;
 $refs = $refs|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($refs) + -1)|0;
 $1 = ((($this)) + 4|0);
 HEAP32[$1>>2] = $0;
 HEAP32[$this>>2] = (6928);
 $2 = ((($this)) + 8|0);
 HEAP8[$2>>0] = 46;
 $3 = ((($this)) + 9|0);
 HEAP8[$3>>0] = 44;
 $4 = ((($this)) + 12|0);
 HEAP32[$4>>2] = 0;
 $5 = ((($4)) + 4|0);
 HEAP32[$5>>2] = 0;
 $6 = ((($4)) + 8|0);
 HEAP32[$6>>2] = 0;
 return;
}
function __ZNSt3__18numpunctIwEC2Ej($this,$refs) {
 $this = $this|0;
 $refs = $refs|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($refs) + -1)|0;
 $1 = ((($this)) + 4|0);
 HEAP32[$1>>2] = $0;
 HEAP32[$this>>2] = (6968);
 $2 = ((($this)) + 8|0);
 HEAP32[$2>>2] = 46;
 $3 = ((($this)) + 12|0);
 HEAP32[$3>>2] = 44;
 $4 = ((($this)) + 16|0);
 HEAP32[$4>>2] = 0;
 $5 = ((($4)) + 4|0);
 HEAP32[$5>>2] = 0;
 $6 = ((($4)) + 8|0);
 HEAP32[$6>>2] = 0;
 return;
}
function __ZNSt3__18numpunctIcED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (6928);
 $0 = ((($this)) + 12|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
 return;
}
function __ZNSt3__18numpunctIcED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__18numpunctIcED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt3__18numpunctIwED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (6968);
 $0 = ((($this)) + 16|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
 return;
}
function __ZNSt3__18numpunctIwED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__18numpunctIwED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18numpunctIcE16do_decimal_pointEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $1 = HEAP8[$0>>0]|0;
 return ($1|0);
}
function __ZNKSt3__18numpunctIwE16do_decimal_pointEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNKSt3__18numpunctIcE16do_thousands_sepEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 9|0);
 $1 = HEAP8[$0>>0]|0;
 return ($1|0);
}
function __ZNKSt3__18numpunctIwE16do_thousands_sepEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNKSt3__18numpunctIcE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($agg$result,$0);
 return;
}
function __ZNKSt3__18numpunctIwE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 16|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($agg$result,$0);
 return;
}
function __ZNKSt3__18numpunctIcE11do_truenameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result,10672,4);
 return;
}
function __ZNKSt3__18numpunctIwE11do_truenameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_wcslen(10680)|0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($agg$result,10680,$0);
 return;
}
function __ZNKSt3__18numpunctIcE12do_falsenameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result,10704,5);
 return;
}
function __ZNKSt3__18numpunctIwE12do_falsenameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_wcslen(10712)|0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($agg$result,10712,$0);
 return;
}
function __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($iob) {
 $iob = $iob|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($iob)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 & 74;
 if ((($2|0) == 0)) {
  $$0 = 0;
 } else if ((($2|0) == 64)) {
  $$0 = 8;
 } else if ((($2|0) == 8)) {
  $$0 = 16;
 } else {
  $$0 = 10;
 }
 return ($$0|0);
}
function __ZNKSt3__120__time_get_c_storageIcE7__weeksEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[10736>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((10736|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    $4 = HEAP8[10744>>0]|0;
    $5 = ($4<<24>>24)==(0);
    if ($5) {
     $6 = (___cxa_guard_acquire((10744|0))|0);
     $7 = ($6|0)==(0);
     if (!($7)) {
      $8 = 10752;
      while(1) {
       HEAP32[$8>>2] = 0;
       $9 = ((($8)) + 4|0);
       HEAP32[$9>>2] = 0;
       $10 = ((($8)) + 8|0);
       HEAP32[$10>>2] = 0;
       $11 = ((($8)) + 12|0);
       $12 = ($11|0)==((10920)|0);
       if ($12) {
        break;
       } else {
        $8 = $11;
       }
      }
      ___cxa_guard_release((10744|0));
     }
    }
    __THREW__ = 0;
    (invoke_iii(539,(10752|0),(10920|0))|0);
    $13 = __THREW__; __THREW__ = 0;
    $14 = $13&1;
    if (!($14)) {
     __THREW__ = 0;
     (invoke_iii(539,((10764)|0),(10928|0))|0);
     $15 = __THREW__; __THREW__ = 0;
     $16 = $15&1;
     if (!($16)) {
      __THREW__ = 0;
      (invoke_iii(539,((10776)|0),(10936|0))|0);
      $17 = __THREW__; __THREW__ = 0;
      $18 = $17&1;
      if (!($18)) {
       __THREW__ = 0;
       (invoke_iii(539,((10788)|0),(10944|0))|0);
       $19 = __THREW__; __THREW__ = 0;
       $20 = $19&1;
       if (!($20)) {
        __THREW__ = 0;
        (invoke_iii(539,((10800)|0),(10960|0))|0);
        $21 = __THREW__; __THREW__ = 0;
        $22 = $21&1;
        if (!($22)) {
         __THREW__ = 0;
         (invoke_iii(539,((10812)|0),(10976|0))|0);
         $23 = __THREW__; __THREW__ = 0;
         $24 = $23&1;
         if (!($24)) {
          __THREW__ = 0;
          (invoke_iii(539,((10824)|0),(10984|0))|0);
          $25 = __THREW__; __THREW__ = 0;
          $26 = $25&1;
          if (!($26)) {
           __THREW__ = 0;
           (invoke_iii(539,((10836)|0),(11000|0))|0);
           $27 = __THREW__; __THREW__ = 0;
           $28 = $27&1;
           if (!($28)) {
            __THREW__ = 0;
            (invoke_iii(539,((10848)|0),(11008|0))|0);
            $29 = __THREW__; __THREW__ = 0;
            $30 = $29&1;
            if (!($30)) {
             __THREW__ = 0;
             (invoke_iii(539,((10860)|0),(11016|0))|0);
             $31 = __THREW__; __THREW__ = 0;
             $32 = $31&1;
             if (!($32)) {
              __THREW__ = 0;
              (invoke_iii(539,((10872)|0),(11024|0))|0);
              $33 = __THREW__; __THREW__ = 0;
              $34 = $33&1;
              if (!($34)) {
               __THREW__ = 0;
               (invoke_iii(539,((10884)|0),(11032|0))|0);
               $35 = __THREW__; __THREW__ = 0;
               $36 = $35&1;
               if (!($36)) {
                __THREW__ = 0;
                (invoke_iii(539,((10896)|0),(11040|0))|0);
                $37 = __THREW__; __THREW__ = 0;
                $38 = $37&1;
                if (!($38)) {
                 __THREW__ = 0;
                 (invoke_iii(539,((10908)|0),(11048|0))|0);
                 $39 = __THREW__; __THREW__ = 0;
                 $40 = $39&1;
                 if (!($40)) {
                  HEAP32[11056>>2] = 10752;
                  ___cxa_guard_release((10736|0));
                  break;
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
    $42 = ___cxa_find_matching_catch()|0;
    $43 = tempRet0;
    ___cxa_guard_abort((10736|0));
    ___resumeException($42|0);
    // unreachable;
   }
  }
 } while(0);
 $41 = HEAP32[11056>>2]|0;
 return ($41|0);
}
function __ZNKSt3__120__time_get_c_storageIwE7__weeksEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[11064>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((11064|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    $4 = HEAP8[11072>>0]|0;
    $5 = ($4<<24>>24)==(0);
    if ($5) {
     $6 = (___cxa_guard_acquire((11072|0))|0);
     $7 = ($6|0)==(0);
     if (!($7)) {
      $8 = 11080;
      while(1) {
       HEAP32[$8>>2] = 0;
       $9 = ((($8)) + 4|0);
       HEAP32[$9>>2] = 0;
       $10 = ((($8)) + 8|0);
       HEAP32[$10>>2] = 0;
       $11 = ((($8)) + 12|0);
       $12 = ($11|0)==((11248)|0);
       if ($12) {
        break;
       } else {
        $8 = $11;
       }
      }
      ___cxa_guard_release((11072|0));
     }
    }
    __THREW__ = 0;
    (invoke_iii(540,(11080|0),(11248|0))|0);
    $13 = __THREW__; __THREW__ = 0;
    $14 = $13&1;
    if (!($14)) {
     __THREW__ = 0;
     (invoke_iii(540,((11092)|0),(11280|0))|0);
     $15 = __THREW__; __THREW__ = 0;
     $16 = $15&1;
     if (!($16)) {
      __THREW__ = 0;
      (invoke_iii(540,((11104)|0),(11312|0))|0);
      $17 = __THREW__; __THREW__ = 0;
      $18 = $17&1;
      if (!($18)) {
       __THREW__ = 0;
       (invoke_iii(540,((11116)|0),(11344|0))|0);
       $19 = __THREW__; __THREW__ = 0;
       $20 = $19&1;
       if (!($20)) {
        __THREW__ = 0;
        (invoke_iii(540,((11128)|0),(11384|0))|0);
        $21 = __THREW__; __THREW__ = 0;
        $22 = $21&1;
        if (!($22)) {
         __THREW__ = 0;
         (invoke_iii(540,((11140)|0),(11424|0))|0);
         $23 = __THREW__; __THREW__ = 0;
         $24 = $23&1;
         if (!($24)) {
          __THREW__ = 0;
          (invoke_iii(540,((11152)|0),(11456|0))|0);
          $25 = __THREW__; __THREW__ = 0;
          $26 = $25&1;
          if (!($26)) {
           __THREW__ = 0;
           (invoke_iii(540,((11164)|0),(11496|0))|0);
           $27 = __THREW__; __THREW__ = 0;
           $28 = $27&1;
           if (!($28)) {
            __THREW__ = 0;
            (invoke_iii(540,((11176)|0),(11512|0))|0);
            $29 = __THREW__; __THREW__ = 0;
            $30 = $29&1;
            if (!($30)) {
             __THREW__ = 0;
             (invoke_iii(540,((11188)|0),(11528|0))|0);
             $31 = __THREW__; __THREW__ = 0;
             $32 = $31&1;
             if (!($32)) {
              __THREW__ = 0;
              (invoke_iii(540,((11200)|0),(11544|0))|0);
              $33 = __THREW__; __THREW__ = 0;
              $34 = $33&1;
              if (!($34)) {
               __THREW__ = 0;
               (invoke_iii(540,((11212)|0),(11560|0))|0);
               $35 = __THREW__; __THREW__ = 0;
               $36 = $35&1;
               if (!($36)) {
                __THREW__ = 0;
                (invoke_iii(540,((11224)|0),(11576|0))|0);
                $37 = __THREW__; __THREW__ = 0;
                $38 = $37&1;
                if (!($38)) {
                 __THREW__ = 0;
                 (invoke_iii(540,((11236)|0),(11592|0))|0);
                 $39 = __THREW__; __THREW__ = 0;
                 $40 = $39&1;
                 if (!($40)) {
                  HEAP32[11608>>2] = 11080;
                  ___cxa_guard_release((11064|0));
                  break;
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
    $42 = ___cxa_find_matching_catch()|0;
    $43 = tempRet0;
    ___cxa_guard_abort((11064|0));
    ___resumeException($42|0);
    // unreachable;
   }
  }
 } while(0);
 $41 = HEAP32[11608>>2]|0;
 return ($41|0);
}
function __ZNKSt3__120__time_get_c_storageIcE8__monthsEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[11616>>0]|0;
 $1 = ($0<<24>>24)==(0);
 L1: do {
  if ($1) {
   $2 = (___cxa_guard_acquire((11616|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    $4 = HEAP8[11624>>0]|0;
    $5 = ($4<<24>>24)==(0);
    if ($5) {
     $6 = (___cxa_guard_acquire((11624|0))|0);
     $7 = ($6|0)==(0);
     if (!($7)) {
      $8 = 11632;
      while(1) {
       HEAP32[$8>>2] = 0;
       $9 = ((($8)) + 4|0);
       HEAP32[$9>>2] = 0;
       $10 = ((($8)) + 8|0);
       HEAP32[$10>>2] = 0;
       $11 = ((($8)) + 12|0);
       $12 = ($11|0)==((11920)|0);
       if ($12) {
        break;
       } else {
        $8 = $11;
       }
      }
      ___cxa_guard_release((11624|0));
     }
    }
    __THREW__ = 0;
    (invoke_iii(539,(11632|0),(11920|0))|0);
    $13 = __THREW__; __THREW__ = 0;
    $14 = $13&1;
    do {
     if (!($14)) {
      __THREW__ = 0;
      (invoke_iii(539,((11644)|0),(11928|0))|0);
      $15 = __THREW__; __THREW__ = 0;
      $16 = $15&1;
      if (!($16)) {
       __THREW__ = 0;
       (invoke_iii(539,((11656)|0),(11944|0))|0);
       $17 = __THREW__; __THREW__ = 0;
       $18 = $17&1;
       if (!($18)) {
        __THREW__ = 0;
        (invoke_iii(539,((11668)|0),(11952|0))|0);
        $19 = __THREW__; __THREW__ = 0;
        $20 = $19&1;
        if (!($20)) {
         __THREW__ = 0;
         (invoke_iii(539,((11680)|0),(11960|0))|0);
         $21 = __THREW__; __THREW__ = 0;
         $22 = $21&1;
         if (!($22)) {
          __THREW__ = 0;
          (invoke_iii(539,((11692)|0),(11968|0))|0);
          $23 = __THREW__; __THREW__ = 0;
          $24 = $23&1;
          if (!($24)) {
           __THREW__ = 0;
           (invoke_iii(539,((11704)|0),(11976|0))|0);
           $25 = __THREW__; __THREW__ = 0;
           $26 = $25&1;
           if (!($26)) {
            __THREW__ = 0;
            (invoke_iii(539,((11716)|0),(11984|0))|0);
            $27 = __THREW__; __THREW__ = 0;
            $28 = $27&1;
            if (!($28)) {
             __THREW__ = 0;
             (invoke_iii(539,((11728)|0),(11992|0))|0);
             $29 = __THREW__; __THREW__ = 0;
             $30 = $29&1;
             if (!($30)) {
              __THREW__ = 0;
              (invoke_iii(539,((11740)|0),(12008|0))|0);
              $31 = __THREW__; __THREW__ = 0;
              $32 = $31&1;
              if (!($32)) {
               __THREW__ = 0;
               (invoke_iii(539,((11752)|0),(12016|0))|0);
               $33 = __THREW__; __THREW__ = 0;
               $34 = $33&1;
               if (!($34)) {
                __THREW__ = 0;
                (invoke_iii(539,((11764)|0),(12032|0))|0);
                $35 = __THREW__; __THREW__ = 0;
                $36 = $35&1;
                if (!($36)) {
                 __THREW__ = 0;
                 (invoke_iii(539,((11776)|0),(12048|0))|0);
                 $37 = __THREW__; __THREW__ = 0;
                 $38 = $37&1;
                 if (!($38)) {
                  __THREW__ = 0;
                  (invoke_iii(539,((11788)|0),(12056|0))|0);
                  $39 = __THREW__; __THREW__ = 0;
                  $40 = $39&1;
                  if (!($40)) {
                   __THREW__ = 0;
                   (invoke_iii(539,((11800)|0),(12064|0))|0);
                   $41 = __THREW__; __THREW__ = 0;
                   $42 = $41&1;
                   if (!($42)) {
                    __THREW__ = 0;
                    (invoke_iii(539,((11812)|0),(12072|0))|0);
                    $43 = __THREW__; __THREW__ = 0;
                    $44 = $43&1;
                    if ($44) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(539,((11824)|0),(11960|0))|0);
                    $45 = __THREW__; __THREW__ = 0;
                    $46 = $45&1;
                    if ($46) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(539,((11836)|0),(12080|0))|0);
                    $47 = __THREW__; __THREW__ = 0;
                    $48 = $47&1;
                    if ($48) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(539,((11848)|0),(12088|0))|0);
                    $49 = __THREW__; __THREW__ = 0;
                    $50 = $49&1;
                    if ($50) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(539,((11860)|0),(12096|0))|0);
                    $51 = __THREW__; __THREW__ = 0;
                    $52 = $51&1;
                    if ($52) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(539,((11872)|0),(12104|0))|0);
                    $53 = __THREW__; __THREW__ = 0;
                    $54 = $53&1;
                    if ($54) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(539,((11884)|0),(12112|0))|0);
                    $55 = __THREW__; __THREW__ = 0;
                    $56 = $55&1;
                    if ($56) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(539,((11896)|0),(12120|0))|0);
                    $57 = __THREW__; __THREW__ = 0;
                    $58 = $57&1;
                    if ($58) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(539,((11908)|0),(12128|0))|0);
                    $59 = __THREW__; __THREW__ = 0;
                    $60 = $59&1;
                    if ($60) {
                     break;
                    }
                    HEAP32[12136>>2] = 11632;
                    ___cxa_guard_release((11616|0));
                    break L1;
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    } while(0);
    $62 = ___cxa_find_matching_catch()|0;
    $63 = tempRet0;
    ___cxa_guard_abort((11616|0));
    ___resumeException($62|0);
    // unreachable;
   }
  }
 } while(0);
 $61 = HEAP32[12136>>2]|0;
 return ($61|0);
}
function __ZNKSt3__120__time_get_c_storageIwE8__monthsEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[12144>>0]|0;
 $1 = ($0<<24>>24)==(0);
 L1: do {
  if ($1) {
   $2 = (___cxa_guard_acquire((12144|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    $4 = HEAP8[12152>>0]|0;
    $5 = ($4<<24>>24)==(0);
    if ($5) {
     $6 = (___cxa_guard_acquire((12152|0))|0);
     $7 = ($6|0)==(0);
     if (!($7)) {
      $8 = 12160;
      while(1) {
       HEAP32[$8>>2] = 0;
       $9 = ((($8)) + 4|0);
       HEAP32[$9>>2] = 0;
       $10 = ((($8)) + 8|0);
       HEAP32[$10>>2] = 0;
       $11 = ((($8)) + 12|0);
       $12 = ($11|0)==((12448)|0);
       if ($12) {
        break;
       } else {
        $8 = $11;
       }
      }
      ___cxa_guard_release((12152|0));
     }
    }
    __THREW__ = 0;
    (invoke_iii(540,(12160|0),(12448|0))|0);
    $13 = __THREW__; __THREW__ = 0;
    $14 = $13&1;
    do {
     if (!($14)) {
      __THREW__ = 0;
      (invoke_iii(540,((12172)|0),(12480|0))|0);
      $15 = __THREW__; __THREW__ = 0;
      $16 = $15&1;
      if (!($16)) {
       __THREW__ = 0;
       (invoke_iii(540,((12184)|0),(12520|0))|0);
       $17 = __THREW__; __THREW__ = 0;
       $18 = $17&1;
       if (!($18)) {
        __THREW__ = 0;
        (invoke_iii(540,((12196)|0),(12544|0))|0);
        $19 = __THREW__; __THREW__ = 0;
        $20 = $19&1;
        if (!($20)) {
         __THREW__ = 0;
         (invoke_iii(540,((12208)|0),(12568|0))|0);
         $21 = __THREW__; __THREW__ = 0;
         $22 = $21&1;
         if (!($22)) {
          __THREW__ = 0;
          (invoke_iii(540,((12220)|0),(12584|0))|0);
          $23 = __THREW__; __THREW__ = 0;
          $24 = $23&1;
          if (!($24)) {
           __THREW__ = 0;
           (invoke_iii(540,((12232)|0),(12608|0))|0);
           $25 = __THREW__; __THREW__ = 0;
           $26 = $25&1;
           if (!($26)) {
            __THREW__ = 0;
            (invoke_iii(540,((12244)|0),(12632|0))|0);
            $27 = __THREW__; __THREW__ = 0;
            $28 = $27&1;
            if (!($28)) {
             __THREW__ = 0;
             (invoke_iii(540,((12256)|0),(12664|0))|0);
             $29 = __THREW__; __THREW__ = 0;
             $30 = $29&1;
             if (!($30)) {
              __THREW__ = 0;
              (invoke_iii(540,((12268)|0),(12704|0))|0);
              $31 = __THREW__; __THREW__ = 0;
              $32 = $31&1;
              if (!($32)) {
               __THREW__ = 0;
               (invoke_iii(540,((12280)|0),(12736|0))|0);
               $33 = __THREW__; __THREW__ = 0;
               $34 = $33&1;
               if (!($34)) {
                __THREW__ = 0;
                (invoke_iii(540,((12292)|0),(12776|0))|0);
                $35 = __THREW__; __THREW__ = 0;
                $36 = $35&1;
                if (!($36)) {
                 __THREW__ = 0;
                 (invoke_iii(540,((12304)|0),(12816|0))|0);
                 $37 = __THREW__; __THREW__ = 0;
                 $38 = $37&1;
                 if (!($38)) {
                  __THREW__ = 0;
                  (invoke_iii(540,((12316)|0),(12832|0))|0);
                  $39 = __THREW__; __THREW__ = 0;
                  $40 = $39&1;
                  if (!($40)) {
                   __THREW__ = 0;
                   (invoke_iii(540,((12328)|0),(12848|0))|0);
                   $41 = __THREW__; __THREW__ = 0;
                   $42 = $41&1;
                   if (!($42)) {
                    __THREW__ = 0;
                    (invoke_iii(540,((12340)|0),(12864|0))|0);
                    $43 = __THREW__; __THREW__ = 0;
                    $44 = $43&1;
                    if ($44) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(540,((12352)|0),(12568|0))|0);
                    $45 = __THREW__; __THREW__ = 0;
                    $46 = $45&1;
                    if ($46) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(540,((12364)|0),(12880|0))|0);
                    $47 = __THREW__; __THREW__ = 0;
                    $48 = $47&1;
                    if ($48) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(540,((12376)|0),(12896|0))|0);
                    $49 = __THREW__; __THREW__ = 0;
                    $50 = $49&1;
                    if ($50) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(540,((12388)|0),(12912|0))|0);
                    $51 = __THREW__; __THREW__ = 0;
                    $52 = $51&1;
                    if ($52) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(540,((12400)|0),(12928|0))|0);
                    $53 = __THREW__; __THREW__ = 0;
                    $54 = $53&1;
                    if ($54) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(540,((12412)|0),(12944|0))|0);
                    $55 = __THREW__; __THREW__ = 0;
                    $56 = $55&1;
                    if ($56) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(540,((12424)|0),(12960|0))|0);
                    $57 = __THREW__; __THREW__ = 0;
                    $58 = $57&1;
                    if ($58) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(540,((12436)|0),(12976|0))|0);
                    $59 = __THREW__; __THREW__ = 0;
                    $60 = $59&1;
                    if ($60) {
                     break;
                    }
                    HEAP32[12992>>2] = 12160;
                    ___cxa_guard_release((12144|0));
                    break L1;
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    } while(0);
    $62 = ___cxa_find_matching_catch()|0;
    $63 = tempRet0;
    ___cxa_guard_abort((12144|0));
    ___resumeException($62|0);
    // unreachable;
   }
  }
 } while(0);
 $61 = HEAP32[12992>>2]|0;
 return ($61|0);
}
function __ZNKSt3__120__time_get_c_storageIcE7__am_pmEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[13000>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((13000|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    $4 = HEAP8[13008>>0]|0;
    $5 = ($4<<24>>24)==(0);
    if ($5) {
     $6 = (___cxa_guard_acquire((13008|0))|0);
     $7 = ($6|0)==(0);
     if (!($7)) {
      $8 = 13016;
      while(1) {
       HEAP32[$8>>2] = 0;
       $9 = ((($8)) + 4|0);
       HEAP32[$9>>2] = 0;
       $10 = ((($8)) + 8|0);
       HEAP32[$10>>2] = 0;
       $11 = ((($8)) + 12|0);
       $12 = ($11|0)==((13304)|0);
       if ($12) {
        break;
       } else {
        $8 = $11;
       }
      }
      ___cxa_guard_release((13008|0));
     }
    }
    __THREW__ = 0;
    (invoke_iii(539,(13016|0),(13304|0))|0);
    $13 = __THREW__; __THREW__ = 0;
    $14 = $13&1;
    if (!($14)) {
     __THREW__ = 0;
     (invoke_iii(539,((13028)|0),(13312|0))|0);
     $15 = __THREW__; __THREW__ = 0;
     $16 = $15&1;
     if (!($16)) {
      HEAP32[13320>>2] = 13016;
      ___cxa_guard_release((13000|0));
      break;
     }
    }
    $18 = ___cxa_find_matching_catch()|0;
    $19 = tempRet0;
    ___cxa_guard_abort((13000|0));
    ___resumeException($18|0);
    // unreachable;
   }
  }
 } while(0);
 $17 = HEAP32[13320>>2]|0;
 return ($17|0);
}
function __ZNKSt3__120__time_get_c_storageIwE7__am_pmEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[13328>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((13328|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    $4 = HEAP8[13336>>0]|0;
    $5 = ($4<<24>>24)==(0);
    if ($5) {
     $6 = (___cxa_guard_acquire((13336|0))|0);
     $7 = ($6|0)==(0);
     if (!($7)) {
      $8 = 13344;
      while(1) {
       HEAP32[$8>>2] = 0;
       $9 = ((($8)) + 4|0);
       HEAP32[$9>>2] = 0;
       $10 = ((($8)) + 8|0);
       HEAP32[$10>>2] = 0;
       $11 = ((($8)) + 12|0);
       $12 = ($11|0)==((13632)|0);
       if ($12) {
        break;
       } else {
        $8 = $11;
       }
      }
      ___cxa_guard_release((13336|0));
     }
    }
    __THREW__ = 0;
    (invoke_iii(540,(13344|0),(13632|0))|0);
    $13 = __THREW__; __THREW__ = 0;
    $14 = $13&1;
    if (!($14)) {
     __THREW__ = 0;
     (invoke_iii(540,((13356)|0),(13648|0))|0);
     $15 = __THREW__; __THREW__ = 0;
     $16 = $15&1;
     if (!($16)) {
      HEAP32[13664>>2] = 13344;
      ___cxa_guard_release((13328|0));
      break;
     }
    }
    $18 = ___cxa_find_matching_catch()|0;
    $19 = tempRet0;
    ___cxa_guard_abort((13328|0));
    ___resumeException($18|0);
    // unreachable;
   }
  }
 } while(0);
 $17 = HEAP32[13664>>2]|0;
 return ($17|0);
}
function __ZNKSt3__120__time_get_c_storageIcE3__xEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[13672>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((13672|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    invoke_viii(494,(13680|0),(13696|0),8);
    $4 = __THREW__; __THREW__ = 0;
    $5 = $4&1;
    if ($5) {
     $6 = ___cxa_find_matching_catch()|0;
     $7 = tempRet0;
     ___cxa_guard_abort((13672|0));
     ___resumeException($6|0);
     // unreachable;
    } else {
     ___cxa_guard_release((13672|0));
     break;
    }
   }
  }
 } while(0);
 return (13680|0);
}
function __ZNKSt3__120__time_get_c_storageIwE3__xEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[13712>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((13712|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    $4 = (invoke_ii(541,(13720|0))|0);
    $5 = __THREW__; __THREW__ = 0;
    $6 = $5&1;
    if (!($6)) {
     __THREW__ = 0;
     invoke_viii(542,(13760|0),(13720|0),($4|0));
     $7 = __THREW__; __THREW__ = 0;
     $8 = $7&1;
     if (!($8)) {
      ___cxa_guard_release((13712|0));
      break;
     }
    }
    $9 = ___cxa_find_matching_catch()|0;
    $10 = tempRet0;
    ___cxa_guard_abort((13712|0));
    ___resumeException($9|0);
    // unreachable;
   }
  }
 } while(0);
 return (13760|0);
}
function __ZNKSt3__120__time_get_c_storageIcE3__XEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[13776>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((13776|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    invoke_viii(494,(13784|0),(13800|0),8);
    $4 = __THREW__; __THREW__ = 0;
    $5 = $4&1;
    if ($5) {
     $6 = ___cxa_find_matching_catch()|0;
     $7 = tempRet0;
     ___cxa_guard_abort((13776|0));
     ___resumeException($6|0);
     // unreachable;
    } else {
     ___cxa_guard_release((13776|0));
     break;
    }
   }
  }
 } while(0);
 return (13784|0);
}
function __ZNKSt3__120__time_get_c_storageIwE3__XEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[13816>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((13816|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    $4 = (invoke_ii(541,(13824|0))|0);
    $5 = __THREW__; __THREW__ = 0;
    $6 = $5&1;
    if (!($6)) {
     __THREW__ = 0;
     invoke_viii(542,(13864|0),(13824|0),($4|0));
     $7 = __THREW__; __THREW__ = 0;
     $8 = $7&1;
     if (!($8)) {
      ___cxa_guard_release((13816|0));
      break;
     }
    }
    $9 = ___cxa_find_matching_catch()|0;
    $10 = tempRet0;
    ___cxa_guard_abort((13816|0));
    ___resumeException($9|0);
    // unreachable;
   }
  }
 } while(0);
 return (13864|0);
}
function __ZNKSt3__120__time_get_c_storageIcE3__cEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[13880>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((13880|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    invoke_viii(494,(13888|0),(13904|0),20);
    $4 = __THREW__; __THREW__ = 0;
    $5 = $4&1;
    if ($5) {
     $6 = ___cxa_find_matching_catch()|0;
     $7 = tempRet0;
     ___cxa_guard_abort((13880|0));
     ___resumeException($6|0);
     // unreachable;
    } else {
     ___cxa_guard_release((13880|0));
     break;
    }
   }
  }
 } while(0);
 return (13888|0);
}
function __ZNKSt3__120__time_get_c_storageIwE3__cEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[13928>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((13928|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    $4 = (invoke_ii(541,(13936|0))|0);
    $5 = __THREW__; __THREW__ = 0;
    $6 = $5&1;
    if (!($6)) {
     __THREW__ = 0;
     invoke_viii(542,(14024|0),(13936|0),($4|0));
     $7 = __THREW__; __THREW__ = 0;
     $8 = $7&1;
     if (!($8)) {
      ___cxa_guard_release((13928|0));
      break;
     }
    }
    $9 = ___cxa_find_matching_catch()|0;
    $10 = tempRet0;
    ___cxa_guard_abort((13928|0));
    ___resumeException($9|0);
    // unreachable;
   }
  }
 } while(0);
 return (14024|0);
}
function __ZNKSt3__120__time_get_c_storageIcE3__rEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[14040>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((14040|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    invoke_viii(494,(14048|0),(14064|0),11);
    $4 = __THREW__; __THREW__ = 0;
    $5 = $4&1;
    if ($5) {
     $6 = ___cxa_find_matching_catch()|0;
     $7 = tempRet0;
     ___cxa_guard_abort((14040|0));
     ___resumeException($6|0);
     // unreachable;
    } else {
     ___cxa_guard_release((14040|0));
     break;
    }
   }
  }
 } while(0);
 return (14048|0);
}
function __ZNKSt3__120__time_get_c_storageIwE3__rEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[14080>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((14080|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    $4 = (invoke_ii(541,(14088|0))|0);
    $5 = __THREW__; __THREW__ = 0;
    $6 = $5&1;
    if (!($6)) {
     __THREW__ = 0;
     invoke_viii(542,(14136|0),(14088|0),($4|0));
     $7 = __THREW__; __THREW__ = 0;
     $8 = $7&1;
     if (!($8)) {
      ___cxa_guard_release((14080|0));
      break;
     }
    }
    $9 = ___cxa_find_matching_catch()|0;
    $10 = tempRet0;
    ___cxa_guard_abort((14080|0));
    ___resumeException($9|0);
    // unreachable;
   }
  }
 } while(0);
 return (14136|0);
}
function __ZNSt3__17codecvtIwc11__mbstate_tED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (6848);
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 __THREW__ = 0;
 $2 = (invoke_i(457)|0);
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 do {
  if (!($4)) {
   $5 = ($1|0)==($2|0);
   if (!($5)) {
    $6 = HEAP32[$0>>2]|0;
    __THREW__ = 0;
    invoke_vi(470,($6|0));
    $7 = __THREW__; __THREW__ = 0;
    $8 = $7&1;
    if ($8) {
     break;
    }
   }
   return;
  }
 } while(0);
 $9 = ___cxa_find_matching_catch(0|0)|0;
 $10 = tempRet0;
 ___clang_call_terminate($9);
 // unreachable;
}
function __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$__e,$__kb,$__ke,$__ct,$__err,$__case_sensitive) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__kb = $__kb|0;
 $__ke = $__ke|0;
 $__ct = $__ct|0;
 $__err = $__err|0;
 $__case_sensitive = $__case_sensitive|0;
 var $$0$i$i = 0, $$040 = 0, $$085 = 0, $$lcssa = 0, $$lcssa117 = 0, $$ph$ph = 0, $$pre$i$i$i = 0, $$pre$i$i$i12 = 0, $$pre$i2$i$i16 = 0, $$pre$i2$i$i16$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0;
 var $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0;
 var $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $__c$0 = 0, $__consume$0$off0$lcssa = 0, $__consume$0$off090 = 0, $__consume$1$off0 = 0, $__indx$0 = 0, $__kc$0 = 0, $__ky$0104 = 0, $__ky1$091 = 0, $__ky2$098 = 0, $__n_does_match$0$lcssa = 0, $__n_does_match$0102 = 0, $__n_does_match$1 = 0, $__n_does_match$2 = 0, $__n_does_match$3$lcssa = 0, $__n_does_match$387 = 0, $__n_does_match$4 = 0, $__n_does_match$596 = 0;
 var $__n_does_match$6 = 0, $__n_might_match$0$lcssa = 0, $__n_might_match$0101 = 0, $__n_might_match$1 = 0, $__n_might_match$2 = 0, $__n_might_match$3$lcssa = 0, $__n_might_match$386 = 0, $__n_might_match$4 = 0, $__st$0103 = 0, $__st$188 = 0, $__st$297 = 0, $__st$384 = 0, $__statbuf = 0, $__status$0 = 0, $lpad$phi$index = 0, $lpad$phi$index3 = 0, $or$cond = 0, $tmp$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__statbuf = sp;
 $0 = $__ke;
 $1 = $__kb;
 $2 = (($0) - ($1))|0;
 $3 = (($2|0) / 12)&-1;
 $4 = ($3>>>0)>(100);
 do {
  if ($4) {
   $5 = (_malloc($3)|0);
   $6 = ($5|0)==(0|0);
   if ($6) {
    __THREW__ = 0;
    invoke_v(463);
    $7 = __THREW__; __THREW__ = 0;
    $8 = $7&1;
    if ($8) {
     $$ph$ph = 0;
     label = 6;
     break;
    }
   }
   $18 = $5;
   $190 = $18;$__status$0 = $5;
   label = 11;
  } else {
   $190 = 0;$__status$0 = $__statbuf;
   label = 11;
  }
 } while(0);
 L6: do {
  if ((label|0) == 11) {
   $19 = ($__kb|0)==($__ke|0);
   if ($19) {
    $__n_does_match$0$lcssa = 0;$__n_might_match$0$lcssa = $3;
   } else {
    $__ky$0104 = $__kb;$__n_does_match$0102 = 0;$__n_might_match$0101 = $3;$__st$0103 = $__status$0;
    while(1) {
     $22 = HEAP8[$__ky$0104>>0]|0;
     $23 = $22 & 1;
     $24 = ($23<<24>>24)==(0);
     if ($24) {
      $27 = $22&255;
      $28 = $27 >>> 1;
      $29 = $28;
     } else {
      $25 = ((($__ky$0104)) + 4|0);
      $26 = HEAP32[$25>>2]|0;
      $29 = $26;
     }
     $30 = ($29|0)==(0);
     if ($30) {
      HEAP8[$__st$0103>>0] = 2;
      $31 = (($__n_might_match$0101) + -1)|0;
      $32 = (($__n_does_match$0102) + 1)|0;
      $__n_does_match$1 = $32;$__n_might_match$1 = $31;
     } else {
      HEAP8[$__st$0103>>0] = 1;
      $__n_does_match$1 = $__n_does_match$0102;$__n_might_match$1 = $__n_might_match$0101;
     }
     $33 = ((($__ky$0104)) + 12|0);
     $34 = ((($__st$0103)) + 1|0);
     $35 = ($33|0)==($__ke|0);
     if ($35) {
      $__n_does_match$0$lcssa = $__n_does_match$1;$__n_might_match$0$lcssa = $__n_might_match$1;
      break;
     } else {
      $__ky$0104 = $33;$__n_does_match$0102 = $__n_does_match$1;$__n_might_match$0101 = $__n_might_match$1;$__st$0103 = $34;
     }
    }
   }
   $20 = ($__kb|0)==($__ke|0);
   $21 = ($__kb|0)==($__ke|0);
   $__indx$0 = 0;$__n_does_match$2 = $__n_does_match$0$lcssa;$__n_might_match$2 = $__n_might_match$0$lcssa;
   L20: while(1) {
    $36 = HEAP32[$__b>>2]|0;
    $37 = ($36|0)==(0|0);
    do {
     if ($37) {
      $50 = 0;
     } else {
      $38 = ((($36)) + 12|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ((($36)) + 16|0);
      $41 = HEAP32[$40>>2]|0;
      $42 = ($39|0)==($41|0);
      if ($42) {
       $43 = HEAP32[$36>>2]|0;
       $44 = ((($43)) + 36|0);
       $45 = HEAP32[$44>>2]|0;
       __THREW__ = 0;
       $46 = (invoke_ii($45|0,($36|0))|0);
       $47 = __THREW__; __THREW__ = 0;
       $48 = $47&1;
       if ($48) {
        label = 5;
        break L20;
       }
       $49 = ($46|0)==(-1);
       if ($49) {
        HEAP32[$__b>>2] = 0;
        $50 = 0;
        break;
       } else {
        $$pre$i$i$i = HEAP32[$__b>>2]|0;
        $50 = $$pre$i$i$i;
        break;
       }
      } else {
       $50 = $36;
      }
     }
    } while(0);
    $51 = ($50|0)==(0|0);
    $52 = HEAP32[$__e>>2]|0;
    $53 = ($52|0)==(0|0);
    if ($53) {
     $$pre$i2$i$i16 = 0;
    } else {
     $54 = ((($52)) + 12|0);
     $55 = HEAP32[$54>>2]|0;
     $56 = ((($52)) + 16|0);
     $57 = HEAP32[$56>>2]|0;
     $58 = ($55|0)==($57|0);
     if ($58) {
      $59 = HEAP32[$52>>2]|0;
      $60 = ((($59)) + 36|0);
      $61 = HEAP32[$60>>2]|0;
      __THREW__ = 0;
      $62 = (invoke_ii($61|0,($52|0))|0);
      $63 = __THREW__; __THREW__ = 0;
      $64 = $63&1;
      if ($64) {
       label = 5;
       break;
      }
      $65 = ($62|0)==(-1);
      if ($65) {
       HEAP32[$__e>>2] = 0;
       $$pre$i2$i$i16 = 0;
      } else {
       $$pre$i2$i$i16 = $52;
      }
     } else {
      $$pre$i2$i$i16 = $52;
     }
    }
    $66 = ($$pre$i2$i$i16|0)==(0|0);
    $tmp$i$i = $51 ^ $66;
    $67 = ($__n_might_match$2|0)!=(0);
    $68 = $67 & $tmp$i$i;
    $69 = HEAP32[$__b>>2]|0;
    if (!($68)) {
     $$lcssa = $66;$$lcssa117 = $69;$$pre$i2$i$i16$lcssa = $$pre$i2$i$i16;
     label = 64;
     break;
    }
    $70 = ((($69)) + 12|0);
    $71 = HEAP32[$70>>2]|0;
    $72 = ((($69)) + 16|0);
    $73 = HEAP32[$72>>2]|0;
    $74 = ($71|0)==($73|0);
    if ($74) {
     $75 = HEAP32[$69>>2]|0;
     $76 = ((($75)) + 36|0);
     $77 = HEAP32[$76>>2]|0;
     __THREW__ = 0;
     $78 = (invoke_ii($77|0,($69|0))|0);
     $79 = __THREW__; __THREW__ = 0;
     $80 = $79&1;
     if ($80) {
      label = 5;
      break;
     } else {
      $$0$i$i = $78;
     }
    } else {
     $81 = HEAP8[$71>>0]|0;
     $82 = $81&255;
     $$0$i$i = $82;
    }
    $83 = $$0$i$i&255;
    if ($__case_sensitive) {
     $__c$0 = $83;
    } else {
     $84 = HEAP32[$__ct>>2]|0;
     $85 = ((($84)) + 12|0);
     $86 = HEAP32[$85>>2]|0;
     __THREW__ = 0;
     $87 = (invoke_iii($86|0,($__ct|0),($83|0))|0);
     $88 = __THREW__; __THREW__ = 0;
     $89 = $88&1;
     if ($89) {
      label = 5;
      break;
     } else {
      $__c$0 = $87;
     }
    }
    $90 = (($__indx$0) + 1)|0;
    if ($20) {
     $__consume$0$off0$lcssa = 0;$__n_does_match$3$lcssa = $__n_does_match$2;$__n_might_match$3$lcssa = $__n_might_match$2;
    } else {
     $__consume$0$off090 = 0;$__ky1$091 = $__kb;$__n_does_match$387 = $__n_does_match$2;$__n_might_match$386 = $__n_might_match$2;$__st$188 = $__status$0;
     while(1) {
      $91 = HEAP8[$__st$188>>0]|0;
      $92 = ($91<<24>>24)==(1);
      do {
       if ($92) {
        $93 = HEAP8[$__ky1$091>>0]|0;
        $94 = $93 & 1;
        $95 = ($94<<24>>24)==(0);
        if ($95) {
         $98 = ((($__ky1$091)) + 1|0);
         $100 = $98;
        } else {
         $96 = ((($__ky1$091)) + 8|0);
         $97 = HEAP32[$96>>2]|0;
         $100 = $97;
        }
        $99 = (($100) + ($__indx$0)|0);
        $101 = HEAP8[$99>>0]|0;
        if ($__case_sensitive) {
         $__kc$0 = $101;
        } else {
         $102 = HEAP32[$__ct>>2]|0;
         $103 = ((($102)) + 12|0);
         $104 = HEAP32[$103>>2]|0;
         __THREW__ = 0;
         $105 = (invoke_iii($104|0,($__ct|0),($101|0))|0);
         $106 = __THREW__; __THREW__ = 0;
         $107 = $106&1;
         if ($107) {
          label = 4;
          break L20;
         } else {
          $__kc$0 = $105;
         }
        }
        $108 = ($__c$0<<24>>24)==($__kc$0<<24>>24);
        if (!($108)) {
         HEAP8[$__st$188>>0] = 0;
         $120 = (($__n_might_match$386) + -1)|0;
         $__consume$1$off0 = $__consume$0$off090;$__n_does_match$4 = $__n_does_match$387;$__n_might_match$4 = $120;
         break;
        }
        $109 = HEAP8[$__ky1$091>>0]|0;
        $110 = $109 & 1;
        $111 = ($110<<24>>24)==(0);
        if ($111) {
         $114 = $109&255;
         $115 = $114 >>> 1;
         $116 = $115;
        } else {
         $112 = ((($__ky1$091)) + 4|0);
         $113 = HEAP32[$112>>2]|0;
         $116 = $113;
        }
        $117 = ($116|0)==($90|0);
        if ($117) {
         HEAP8[$__st$188>>0] = 2;
         $118 = (($__n_might_match$386) + -1)|0;
         $119 = (($__n_does_match$387) + 1)|0;
         $__consume$1$off0 = 1;$__n_does_match$4 = $119;$__n_might_match$4 = $118;
        } else {
         $__consume$1$off0 = 1;$__n_does_match$4 = $__n_does_match$387;$__n_might_match$4 = $__n_might_match$386;
        }
       } else {
        $__consume$1$off0 = $__consume$0$off090;$__n_does_match$4 = $__n_does_match$387;$__n_might_match$4 = $__n_might_match$386;
       }
      } while(0);
      $121 = ((($__ky1$091)) + 12|0);
      $122 = ((($__st$188)) + 1|0);
      $123 = ($121|0)==($__ke|0);
      if ($123) {
       $__consume$0$off0$lcssa = $__consume$1$off0;$__n_does_match$3$lcssa = $__n_does_match$4;$__n_might_match$3$lcssa = $__n_might_match$4;
       break;
      } else {
       $__consume$0$off090 = $__consume$1$off0;$__ky1$091 = $121;$__n_does_match$387 = $__n_does_match$4;$__n_might_match$386 = $__n_might_match$4;$__st$188 = $122;
      }
     }
    }
    if (!($__consume$0$off0$lcssa)) {
     $__indx$0 = $90;$__n_does_match$2 = $__n_does_match$3$lcssa;$__n_might_match$2 = $__n_might_match$3$lcssa;
     continue;
    }
    $124 = HEAP32[$__b>>2]|0;
    $125 = ((($124)) + 12|0);
    $126 = HEAP32[$125>>2]|0;
    $127 = ((($124)) + 16|0);
    $128 = HEAP32[$127>>2]|0;
    $129 = ($126|0)==($128|0);
    if ($129) {
     $130 = HEAP32[$124>>2]|0;
     $131 = ((($130)) + 40|0);
     $132 = HEAP32[$131>>2]|0;
     __THREW__ = 0;
     (invoke_ii($132|0,($124|0))|0);
     $133 = __THREW__; __THREW__ = 0;
     $134 = $133&1;
     if ($134) {
      label = 5;
      break;
     }
    } else {
     $135 = ((($126)) + 1|0);
     HEAP32[$125>>2] = $135;
    }
    $136 = (($__n_does_match$3$lcssa) + ($__n_might_match$3$lcssa))|0;
    $137 = ($136>>>0)<(2);
    $or$cond = $137 | $21;
    if ($or$cond) {
     $__indx$0 = $90;$__n_does_match$2 = $__n_does_match$3$lcssa;$__n_might_match$2 = $__n_might_match$3$lcssa;
     continue;
    } else {
     $__ky2$098 = $__kb;$__n_does_match$596 = $__n_does_match$3$lcssa;$__st$297 = $__status$0;
    }
    while(1) {
     $138 = HEAP8[$__st$297>>0]|0;
     $139 = ($138<<24>>24)==(2);
     if ($139) {
      $140 = HEAP8[$__ky2$098>>0]|0;
      $141 = $140 & 1;
      $142 = ($141<<24>>24)==(0);
      if ($142) {
       $145 = $140&255;
       $146 = $145 >>> 1;
       $147 = $146;
      } else {
       $143 = ((($__ky2$098)) + 4|0);
       $144 = HEAP32[$143>>2]|0;
       $147 = $144;
      }
      $148 = ($147|0)==($90|0);
      if ($148) {
       $__n_does_match$6 = $__n_does_match$596;
      } else {
       HEAP8[$__st$297>>0] = 0;
       $149 = (($__n_does_match$596) + -1)|0;
       $__n_does_match$6 = $149;
      }
     } else {
      $__n_does_match$6 = $__n_does_match$596;
     }
     $150 = ((($__ky2$098)) + 12|0);
     $151 = ((($__st$297)) + 1|0);
     $152 = ($150|0)==($__ke|0);
     if ($152) {
      $__indx$0 = $90;$__n_does_match$2 = $__n_does_match$6;$__n_might_match$2 = $__n_might_match$3$lcssa;
      continue L20;
     } else {
      $__ky2$098 = $150;$__n_does_match$596 = $__n_does_match$6;$__st$297 = $151;
     }
    }
   }
   if ((label|0) == 4) {
    $9 = ___cxa_find_matching_catch()|0;
    $10 = tempRet0;
    $15 = $190;$lpad$phi$index = $9;$lpad$phi$index3 = $10;
    break;
   }
   else if ((label|0) == 5) {
    $11 = ___cxa_find_matching_catch()|0;
    $12 = tempRet0;
    $15 = $190;$lpad$phi$index = $11;$lpad$phi$index3 = $12;
    break;
   }
   else if ((label|0) == 64) {
    $153 = ($$lcssa117|0)==(0|0);
    do {
     if ($153) {
      $166 = 0;
     } else {
      $154 = ((($$lcssa117)) + 12|0);
      $155 = HEAP32[$154>>2]|0;
      $156 = ((($$lcssa117)) + 16|0);
      $157 = HEAP32[$156>>2]|0;
      $158 = ($155|0)==($157|0);
      if ($158) {
       $159 = HEAP32[$$lcssa117>>2]|0;
       $160 = ((($159)) + 36|0);
       $161 = HEAP32[$160>>2]|0;
       __THREW__ = 0;
       $162 = (invoke_ii($161|0,($$lcssa117|0))|0);
       $163 = __THREW__; __THREW__ = 0;
       $164 = $163&1;
       if ($164) {
        $$ph$ph = $190;
        label = 6;
        break L6;
       }
       $165 = ($162|0)==(-1);
       if ($165) {
        HEAP32[$__b>>2] = 0;
        $166 = 0;
        break;
       } else {
        $$pre$i$i$i12 = HEAP32[$__b>>2]|0;
        $166 = $$pre$i$i$i12;
        break;
       }
      } else {
       $166 = $$lcssa117;
      }
     }
    } while(0);
    $167 = ($166|0)==(0|0);
    do {
     if ($$lcssa) {
      label = 76;
     } else {
      $168 = ((($$pre$i2$i$i16$lcssa)) + 12|0);
      $169 = HEAP32[$168>>2]|0;
      $170 = ((($$pre$i2$i$i16$lcssa)) + 16|0);
      $171 = HEAP32[$170>>2]|0;
      $172 = ($169|0)==($171|0);
      if ($172) {
       $173 = HEAP32[$$pre$i2$i$i16$lcssa>>2]|0;
       $174 = ((($173)) + 36|0);
       $175 = HEAP32[$174>>2]|0;
       __THREW__ = 0;
       $176 = (invoke_ii($175|0,($$pre$i2$i$i16$lcssa|0))|0);
       $177 = __THREW__; __THREW__ = 0;
       $178 = $177&1;
       if ($178) {
        $$ph$ph = $190;
        label = 6;
        break L6;
       }
       $179 = ($176|0)==(-1);
       if ($179) {
        HEAP32[$__e>>2] = 0;
        label = 76;
        break;
       }
      }
      if (!($167)) {
       label = 77;
      }
     }
    } while(0);
    if ((label|0) == 76) {
     if ($167) {
      label = 77;
     }
    }
    if ((label|0) == 77) {
     $180 = HEAP32[$__err>>2]|0;
     $181 = $180 | 2;
     HEAP32[$__err>>2] = $181;
    }
    $182 = ($__kb|0)==($__ke|0);
    L103: do {
     if ($182) {
      label = 81;
     } else {
      $$085 = $__kb;$__st$384 = $__status$0;
      while(1) {
       $183 = HEAP8[$__st$384>>0]|0;
       $184 = ($183<<24>>24)==(2);
       if ($184) {
        $$040 = $$085;
        break L103;
       }
       $185 = ((($$085)) + 12|0);
       $186 = ((($__st$384)) + 1|0);
       $187 = ($185|0)==($__ke|0);
       if ($187) {
        label = 81;
        break;
       } else {
        $$085 = $185;$__st$384 = $186;
       }
      }
     }
    } while(0);
    if ((label|0) == 81) {
     $188 = HEAP32[$__err>>2]|0;
     $189 = $188 | 4;
     HEAP32[$__err>>2] = $189;
     $$040 = $__ke;
    }
    $191 = ($190|0)==(0);
    if (!($191)) {
     $192 = $190;
     _free($192);
    }
    STACKTOP = sp;return ($$040|0);
   }
  }
 } while(0);
 if ((label|0) == 6) {
  $13 = ___cxa_find_matching_catch()|0;
  $14 = tempRet0;
  $15 = $$ph$ph;$lpad$phi$index = $13;$lpad$phi$index3 = $14;
 }
 $16 = ($15|0)==(0);
 if (!($16)) {
  $17 = $15;
  _free($17);
 }
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;
 var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i19 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(456,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L4: do {
  if ($10) {
   label = 25;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   $14 = ((($__buf)) + 8|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = ((($__buf)) + 1|0);
   $17 = $13 ? $16 : $15;
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = ((($__buf)) + 4|0);
   $19 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i4 = $$pre;$__a$0 = $17;
   L6: while(1) {
    $20 = ($$pre$i$i$i4|0)==(0|0);
    if ($20) {
     $$pre$i$i$i = 0;
    } else {
     $21 = ((($$pre$i$i$i4)) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = ((($$pre$i$i$i4)) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i4>>2]|0;
      $27 = ((($26)) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i4|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 24;
       break;
      }
      $32 = ($29|0)==(-1);
      if ($32) {
       HEAP32[$__b>>2] = 0;
       $$pre$i$i$i = 0;
      } else {
       $$pre$i$i$i = $$pre$i$i$i4;
      }
     } else {
      $$pre$i$i$i = $$pre$i$i$i4;
     }
    }
    $33 = ($$pre$i$i$i|0)==(0|0);
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 16;
     } else {
      $36 = ((($34)) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = ((($34)) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if (!($40)) {
       if ($33) {
        $156 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
      $41 = HEAP32[$34>>2]|0;
      $42 = ((($41)) + 36|0);
      $43 = HEAP32[$42>>2]|0;
      __THREW__ = 0;
      $44 = (invoke_ii($43|0,($34|0))|0);
      $45 = __THREW__; __THREW__ = 0;
      $46 = $45&1;
      if ($46) {
       label = 24;
       break L6;
      }
      $47 = ($44|0)==(-1);
      if ($47) {
       HEAP32[$__e>>2] = 0;
       label = 16;
       break;
      } else {
       if ($33) {
        $156 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
     }
    } while(0);
    if ((label|0) == 16) {
     label = 0;
     if ($33) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $156 = 0;
     }
    }
    $48 = HEAP32[$__a_end>>2]|0;
    $49 = HEAP8[$__buf>>0]|0;
    $50 = $49 & 1;
    $51 = ($50<<24>>24)==(0);
    $52 = HEAP32[$18>>2]|0;
    $53 = $49&255;
    $54 = $53 >>> 1;
    $55 = $51 ? $54 : $52;
    $56 = (($__a$0) + ($55)|0);
    $57 = ($48|0)==($56|0);
    if ($57) {
     $58 = $55 << 1;
     __THREW__ = 0;
     invoke_viii(456,($__buf|0),($58|0),0);
     $59 = __THREW__; __THREW__ = 0;
     $60 = $59&1;
     if ($60) {
      label = 24;
      break;
     }
     $61 = HEAP8[$__buf>>0]|0;
     $62 = $61 & 1;
     $63 = ($62<<24>>24)==(0);
     if ($63) {
      $66 = 10;
     } else {
      $64 = HEAP32[$__buf>>2]|0;
      $65 = $64 & -2;
      $phitmp$i19 = (($65) + -1)|0;
      $66 = $phitmp$i19;
     }
     __THREW__ = 0;
     invoke_viii(456,($__buf|0),($66|0),0);
     $67 = __THREW__; __THREW__ = 0;
     $68 = $67&1;
     if ($68) {
      label = 24;
      break;
     }
     $69 = HEAP8[$__buf>>0]|0;
     $70 = $69 & 1;
     $71 = ($70<<24>>24)==(0);
     $72 = HEAP32[$14>>2]|0;
     $73 = $71 ? $16 : $72;
     $74 = (($73) + ($55)|0);
     HEAP32[$__a_end>>2] = $74;
     $__a$1 = $73;
    } else {
     $__a$1 = $__a$0;
    }
    $79 = ((($$pre$i$i$i)) + 12|0);
    $80 = HEAP32[$79>>2]|0;
    $81 = ((($$pre$i$i$i)) + 16|0);
    $82 = HEAP32[$81>>2]|0;
    $83 = ($80|0)==($82|0);
    if ($83) {
     $84 = HEAP32[$$pre$i$i$i>>2]|0;
     $85 = ((($84)) + 36|0);
     $86 = HEAP32[$85>>2]|0;
     __THREW__ = 0;
     $87 = (invoke_ii($86|0,($$pre$i$i$i|0))|0);
     $88 = __THREW__; __THREW__ = 0;
     $89 = $88&1;
     if ($89) {
      label = 24;
      break;
     } else {
      $$0$i$i = $87;
     }
    } else {
     $90 = HEAP8[$80>>0]|0;
     $91 = $90&255;
     $$0$i$i = $91;
    }
    $92 = $$0$i$i&255;
    $93 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($92,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $94 = ($93|0)==(0);
    if (!($94)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $156;$__a$2 = $__a$1;
     break;
    }
    $95 = HEAP32[$79>>2]|0;
    $96 = HEAP32[$81>>2]|0;
    $97 = ($95|0)==($96|0);
    if ($97) {
     $98 = HEAP32[$$pre$i$i$i>>2]|0;
     $99 = ((($98)) + 40|0);
     $100 = HEAP32[$99>>2]|0;
     __THREW__ = 0;
     (invoke_ii($100|0,($$pre$i$i$i|0))|0);
     $101 = __THREW__; __THREW__ = 0;
     $102 = $101&1;
     if ($102) {
      label = 24;
      break;
     } else {
      $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $103 = ((($95)) + 1|0);
     HEAP32[$79>>2] = $103;
     $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 24) {
    $75 = ___cxa_find_matching_catch()|0;
    $76 = tempRet0;
    $lpad$phi$index = $75;$lpad$phi$index2 = $76;
    break;
   }
   $104 = HEAP8[$__grouping>>0]|0;
   $105 = $104 & 1;
   $106 = ($105<<24>>24)==(0);
   $107 = ((($__grouping)) + 4|0);
   $108 = HEAP32[$107>>2]|0;
   $109 = $104&255;
   $110 = $109 >>> 1;
   $111 = $106 ? $110 : $108;
   $112 = ($111|0)==(0);
   if (!($112)) {
    $113 = HEAP32[$__g_end>>2]|0;
    $114 = $113;
    $115 = $__g;
    $116 = (($114) - ($115))|0;
    $117 = ($116|0)<(160);
    if ($117) {
     $118 = HEAP32[$__dc>>2]|0;
     $119 = ((($113)) + 4|0);
     HEAP32[$__g_end>>2] = $119;
     HEAP32[$113>>2] = $118;
    }
   }
   $120 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $121 = (invoke_iiiii(543,($__a$2|0),($120|0),($__err|0),($0|0))|0);
   $122 = __THREW__; __THREW__ = 0;
   $123 = $122&1;
   if ($123) {
    label = 25;
   } else {
    HEAP32[$__v>>2] = $121;
    $124 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$124,$__err);
    $125 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($125) {
     $138 = 0;
    } else {
     $126 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $127 = HEAP32[$126>>2]|0;
     $128 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $129 = HEAP32[$128>>2]|0;
     $130 = ($127|0)==($129|0);
     if ($130) {
      $131 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $132 = ((($131)) + 36|0);
      $133 = HEAP32[$132>>2]|0;
      __THREW__ = 0;
      $134 = (invoke_ii($133|0,($$pre$i$i$i$lcssa|0))|0);
      $135 = __THREW__; __THREW__ = 0;
      $136 = $135&1;
      if ($136) {
       label = 25;
       break;
      }
      $137 = ($134|0)==(-1);
      if ($137) {
       HEAP32[$__b>>2] = 0;
       $138 = 0;
      } else {
       $138 = $$pre$i$i$i$lcssa;
      }
     } else {
      $138 = $$pre$i$i$i$lcssa;
     }
    }
    $139 = ($138|0)==(0|0);
    $140 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($140) {
      label = 49;
     } else {
      $141 = ((($$pre$i2$i$i)) + 12|0);
      $142 = HEAP32[$141>>2]|0;
      $143 = ((($$pre$i2$i$i)) + 16|0);
      $144 = HEAP32[$143>>2]|0;
      $145 = ($142|0)==($144|0);
      if ($145) {
       $146 = HEAP32[$$pre$i2$i$i>>2]|0;
       $147 = ((($146)) + 36|0);
       $148 = HEAP32[$147>>2]|0;
       __THREW__ = 0;
       $149 = (invoke_ii($148|0,($$pre$i2$i$i|0))|0);
       $150 = __THREW__; __THREW__ = 0;
       $151 = $150&1;
       if ($151) {
        label = 25;
        break L4;
       }
       $152 = ($149|0)==(-1);
       if ($152) {
        HEAP32[$__e>>2] = 0;
        label = 49;
        break;
       }
      }
      if (!($139)) {
       label = 50;
      }
     }
    } while(0);
    if ((label|0) == 49) {
     if ($139) {
      label = 50;
     }
    }
    if ((label|0) == 50) {
     $153 = HEAP32[$__err>>2]|0;
     $154 = $153 | 2;
     HEAP32[$__err>>2] = $154;
    }
    $155 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($155|0);
   }
  }
 } while(0);
 if ((label|0) == 25) {
  $77 = ___cxa_find_matching_catch()|0;
  $78 = tempRet0;
  $lpad$phi$index = $77;$lpad$phi$index2 = $78;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;
 var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $lpad$phi$index = 0;
 var $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i19 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(456,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L4: do {
  if ($10) {
   label = 25;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   $14 = ((($__buf)) + 8|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = ((($__buf)) + 1|0);
   $17 = $13 ? $16 : $15;
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = ((($__buf)) + 4|0);
   $19 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i4 = $$pre;$__a$0 = $17;
   L6: while(1) {
    $20 = ($$pre$i$i$i4|0)==(0|0);
    if ($20) {
     $$pre$i$i$i = 0;
    } else {
     $21 = ((($$pre$i$i$i4)) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = ((($$pre$i$i$i4)) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i4>>2]|0;
      $27 = ((($26)) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i4|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 24;
       break;
      }
      $32 = ($29|0)==(-1);
      if ($32) {
       HEAP32[$__b>>2] = 0;
       $$pre$i$i$i = 0;
      } else {
       $$pre$i$i$i = $$pre$i$i$i4;
      }
     } else {
      $$pre$i$i$i = $$pre$i$i$i4;
     }
    }
    $33 = ($$pre$i$i$i|0)==(0|0);
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 16;
     } else {
      $36 = ((($34)) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = ((($34)) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if (!($40)) {
       if ($33) {
        $161 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
      $41 = HEAP32[$34>>2]|0;
      $42 = ((($41)) + 36|0);
      $43 = HEAP32[$42>>2]|0;
      __THREW__ = 0;
      $44 = (invoke_ii($43|0,($34|0))|0);
      $45 = __THREW__; __THREW__ = 0;
      $46 = $45&1;
      if ($46) {
       label = 24;
       break L6;
      }
      $47 = ($44|0)==(-1);
      if ($47) {
       HEAP32[$__e>>2] = 0;
       label = 16;
       break;
      } else {
       if ($33) {
        $161 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
     }
    } while(0);
    if ((label|0) == 16) {
     label = 0;
     if ($33) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $161 = 0;
     }
    }
    $48 = HEAP32[$__a_end>>2]|0;
    $49 = HEAP8[$__buf>>0]|0;
    $50 = $49 & 1;
    $51 = ($50<<24>>24)==(0);
    $52 = HEAP32[$18>>2]|0;
    $53 = $49&255;
    $54 = $53 >>> 1;
    $55 = $51 ? $54 : $52;
    $56 = (($__a$0) + ($55)|0);
    $57 = ($48|0)==($56|0);
    if ($57) {
     $58 = $55 << 1;
     __THREW__ = 0;
     invoke_viii(456,($__buf|0),($58|0),0);
     $59 = __THREW__; __THREW__ = 0;
     $60 = $59&1;
     if ($60) {
      label = 24;
      break;
     }
     $61 = HEAP8[$__buf>>0]|0;
     $62 = $61 & 1;
     $63 = ($62<<24>>24)==(0);
     if ($63) {
      $66 = 10;
     } else {
      $64 = HEAP32[$__buf>>2]|0;
      $65 = $64 & -2;
      $phitmp$i19 = (($65) + -1)|0;
      $66 = $phitmp$i19;
     }
     __THREW__ = 0;
     invoke_viii(456,($__buf|0),($66|0),0);
     $67 = __THREW__; __THREW__ = 0;
     $68 = $67&1;
     if ($68) {
      label = 24;
      break;
     }
     $69 = HEAP8[$__buf>>0]|0;
     $70 = $69 & 1;
     $71 = ($70<<24>>24)==(0);
     $72 = HEAP32[$14>>2]|0;
     $73 = $71 ? $16 : $72;
     $74 = (($73) + ($55)|0);
     HEAP32[$__a_end>>2] = $74;
     $__a$1 = $73;
    } else {
     $__a$1 = $__a$0;
    }
    $79 = ((($$pre$i$i$i)) + 12|0);
    $80 = HEAP32[$79>>2]|0;
    $81 = ((($$pre$i$i$i)) + 16|0);
    $82 = HEAP32[$81>>2]|0;
    $83 = ($80|0)==($82|0);
    if ($83) {
     $84 = HEAP32[$$pre$i$i$i>>2]|0;
     $85 = ((($84)) + 36|0);
     $86 = HEAP32[$85>>2]|0;
     __THREW__ = 0;
     $87 = (invoke_ii($86|0,($$pre$i$i$i|0))|0);
     $88 = __THREW__; __THREW__ = 0;
     $89 = $88&1;
     if ($89) {
      label = 24;
      break;
     } else {
      $$0$i$i = $87;
     }
    } else {
     $90 = HEAP8[$80>>0]|0;
     $91 = $90&255;
     $$0$i$i = $91;
    }
    $92 = $$0$i$i&255;
    $93 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($92,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $94 = ($93|0)==(0);
    if (!($94)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $161;$__a$2 = $__a$1;
     break;
    }
    $95 = HEAP32[$79>>2]|0;
    $96 = HEAP32[$81>>2]|0;
    $97 = ($95|0)==($96|0);
    if ($97) {
     $98 = HEAP32[$$pre$i$i$i>>2]|0;
     $99 = ((($98)) + 40|0);
     $100 = HEAP32[$99>>2]|0;
     __THREW__ = 0;
     (invoke_ii($100|0,($$pre$i$i$i|0))|0);
     $101 = __THREW__; __THREW__ = 0;
     $102 = $101&1;
     if ($102) {
      label = 24;
      break;
     } else {
      $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $103 = ((($95)) + 1|0);
     HEAP32[$79>>2] = $103;
     $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 24) {
    $75 = ___cxa_find_matching_catch()|0;
    $76 = tempRet0;
    $lpad$phi$index = $75;$lpad$phi$index2 = $76;
    break;
   }
   $104 = HEAP8[$__grouping>>0]|0;
   $105 = $104 & 1;
   $106 = ($105<<24>>24)==(0);
   $107 = ((($__grouping)) + 4|0);
   $108 = HEAP32[$107>>2]|0;
   $109 = $104&255;
   $110 = $109 >>> 1;
   $111 = $106 ? $110 : $108;
   $112 = ($111|0)==(0);
   if (!($112)) {
    $113 = HEAP32[$__g_end>>2]|0;
    $114 = $113;
    $115 = $__g;
    $116 = (($114) - ($115))|0;
    $117 = ($116|0)<(160);
    if ($117) {
     $118 = HEAP32[$__dc>>2]|0;
     $119 = ((($113)) + 4|0);
     HEAP32[$__g_end>>2] = $119;
     HEAP32[$113>>2] = $118;
    }
   }
   $120 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $121 = (invoke_iiiii(544,($__a$2|0),($120|0),($__err|0),($0|0))|0);
   $122 = tempRet0;
   $123 = __THREW__; __THREW__ = 0;
   $124 = $123&1;
   if ($124) {
    label = 25;
   } else {
    $125 = $__v;
    $126 = $125;
    HEAP32[$126>>2] = $121;
    $127 = (($125) + 4)|0;
    $128 = $127;
    HEAP32[$128>>2] = $122;
    $129 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$129,$__err);
    $130 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($130) {
     $143 = 0;
    } else {
     $131 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $132 = HEAP32[$131>>2]|0;
     $133 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $134 = HEAP32[$133>>2]|0;
     $135 = ($132|0)==($134|0);
     if ($135) {
      $136 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $137 = ((($136)) + 36|0);
      $138 = HEAP32[$137>>2]|0;
      __THREW__ = 0;
      $139 = (invoke_ii($138|0,($$pre$i$i$i$lcssa|0))|0);
      $140 = __THREW__; __THREW__ = 0;
      $141 = $140&1;
      if ($141) {
       label = 25;
       break;
      }
      $142 = ($139|0)==(-1);
      if ($142) {
       HEAP32[$__b>>2] = 0;
       $143 = 0;
      } else {
       $143 = $$pre$i$i$i$lcssa;
      }
     } else {
      $143 = $$pre$i$i$i$lcssa;
     }
    }
    $144 = ($143|0)==(0|0);
    $145 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($145) {
      label = 49;
     } else {
      $146 = ((($$pre$i2$i$i)) + 12|0);
      $147 = HEAP32[$146>>2]|0;
      $148 = ((($$pre$i2$i$i)) + 16|0);
      $149 = HEAP32[$148>>2]|0;
      $150 = ($147|0)==($149|0);
      if ($150) {
       $151 = HEAP32[$$pre$i2$i$i>>2]|0;
       $152 = ((($151)) + 36|0);
       $153 = HEAP32[$152>>2]|0;
       __THREW__ = 0;
       $154 = (invoke_ii($153|0,($$pre$i2$i$i|0))|0);
       $155 = __THREW__; __THREW__ = 0;
       $156 = $155&1;
       if ($156) {
        label = 25;
        break L4;
       }
       $157 = ($154|0)==(-1);
       if ($157) {
        HEAP32[$__e>>2] = 0;
        label = 49;
        break;
       }
      }
      if (!($144)) {
       label = 50;
      }
     }
    } while(0);
    if ((label|0) == 49) {
     if ($144) {
      label = 50;
     }
    }
    if ((label|0) == 50) {
     $158 = HEAP32[$__err>>2]|0;
     $159 = $158 | 2;
     HEAP32[$__err>>2] = $159;
    }
    $160 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($160|0);
   }
  }
 } while(0);
 if ((label|0) == 25) {
  $77 = ___cxa_find_matching_catch()|0;
  $78 = tempRet0;
  $lpad$phi$index = $77;$lpad$phi$index2 = $78;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;
 var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i19 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(456,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L4: do {
  if ($10) {
   label = 25;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   $14 = ((($__buf)) + 8|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = ((($__buf)) + 1|0);
   $17 = $13 ? $16 : $15;
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = ((($__buf)) + 4|0);
   $19 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i4 = $$pre;$__a$0 = $17;
   L6: while(1) {
    $20 = ($$pre$i$i$i4|0)==(0|0);
    if ($20) {
     $$pre$i$i$i = 0;
    } else {
     $21 = ((($$pre$i$i$i4)) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = ((($$pre$i$i$i4)) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i4>>2]|0;
      $27 = ((($26)) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i4|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 24;
       break;
      }
      $32 = ($29|0)==(-1);
      if ($32) {
       HEAP32[$__b>>2] = 0;
       $$pre$i$i$i = 0;
      } else {
       $$pre$i$i$i = $$pre$i$i$i4;
      }
     } else {
      $$pre$i$i$i = $$pre$i$i$i4;
     }
    }
    $33 = ($$pre$i$i$i|0)==(0|0);
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 16;
     } else {
      $36 = ((($34)) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = ((($34)) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if (!($40)) {
       if ($33) {
        $156 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
      $41 = HEAP32[$34>>2]|0;
      $42 = ((($41)) + 36|0);
      $43 = HEAP32[$42>>2]|0;
      __THREW__ = 0;
      $44 = (invoke_ii($43|0,($34|0))|0);
      $45 = __THREW__; __THREW__ = 0;
      $46 = $45&1;
      if ($46) {
       label = 24;
       break L6;
      }
      $47 = ($44|0)==(-1);
      if ($47) {
       HEAP32[$__e>>2] = 0;
       label = 16;
       break;
      } else {
       if ($33) {
        $156 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
     }
    } while(0);
    if ((label|0) == 16) {
     label = 0;
     if ($33) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $156 = 0;
     }
    }
    $48 = HEAP32[$__a_end>>2]|0;
    $49 = HEAP8[$__buf>>0]|0;
    $50 = $49 & 1;
    $51 = ($50<<24>>24)==(0);
    $52 = HEAP32[$18>>2]|0;
    $53 = $49&255;
    $54 = $53 >>> 1;
    $55 = $51 ? $54 : $52;
    $56 = (($__a$0) + ($55)|0);
    $57 = ($48|0)==($56|0);
    if ($57) {
     $58 = $55 << 1;
     __THREW__ = 0;
     invoke_viii(456,($__buf|0),($58|0),0);
     $59 = __THREW__; __THREW__ = 0;
     $60 = $59&1;
     if ($60) {
      label = 24;
      break;
     }
     $61 = HEAP8[$__buf>>0]|0;
     $62 = $61 & 1;
     $63 = ($62<<24>>24)==(0);
     if ($63) {
      $66 = 10;
     } else {
      $64 = HEAP32[$__buf>>2]|0;
      $65 = $64 & -2;
      $phitmp$i19 = (($65) + -1)|0;
      $66 = $phitmp$i19;
     }
     __THREW__ = 0;
     invoke_viii(456,($__buf|0),($66|0),0);
     $67 = __THREW__; __THREW__ = 0;
     $68 = $67&1;
     if ($68) {
      label = 24;
      break;
     }
     $69 = HEAP8[$__buf>>0]|0;
     $70 = $69 & 1;
     $71 = ($70<<24>>24)==(0);
     $72 = HEAP32[$14>>2]|0;
     $73 = $71 ? $16 : $72;
     $74 = (($73) + ($55)|0);
     HEAP32[$__a_end>>2] = $74;
     $__a$1 = $73;
    } else {
     $__a$1 = $__a$0;
    }
    $79 = ((($$pre$i$i$i)) + 12|0);
    $80 = HEAP32[$79>>2]|0;
    $81 = ((($$pre$i$i$i)) + 16|0);
    $82 = HEAP32[$81>>2]|0;
    $83 = ($80|0)==($82|0);
    if ($83) {
     $84 = HEAP32[$$pre$i$i$i>>2]|0;
     $85 = ((($84)) + 36|0);
     $86 = HEAP32[$85>>2]|0;
     __THREW__ = 0;
     $87 = (invoke_ii($86|0,($$pre$i$i$i|0))|0);
     $88 = __THREW__; __THREW__ = 0;
     $89 = $88&1;
     if ($89) {
      label = 24;
      break;
     } else {
      $$0$i$i = $87;
     }
    } else {
     $90 = HEAP8[$80>>0]|0;
     $91 = $90&255;
     $$0$i$i = $91;
    }
    $92 = $$0$i$i&255;
    $93 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($92,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $94 = ($93|0)==(0);
    if (!($94)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $156;$__a$2 = $__a$1;
     break;
    }
    $95 = HEAP32[$79>>2]|0;
    $96 = HEAP32[$81>>2]|0;
    $97 = ($95|0)==($96|0);
    if ($97) {
     $98 = HEAP32[$$pre$i$i$i>>2]|0;
     $99 = ((($98)) + 40|0);
     $100 = HEAP32[$99>>2]|0;
     __THREW__ = 0;
     (invoke_ii($100|0,($$pre$i$i$i|0))|0);
     $101 = __THREW__; __THREW__ = 0;
     $102 = $101&1;
     if ($102) {
      label = 24;
      break;
     } else {
      $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $103 = ((($95)) + 1|0);
     HEAP32[$79>>2] = $103;
     $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 24) {
    $75 = ___cxa_find_matching_catch()|0;
    $76 = tempRet0;
    $lpad$phi$index = $75;$lpad$phi$index2 = $76;
    break;
   }
   $104 = HEAP8[$__grouping>>0]|0;
   $105 = $104 & 1;
   $106 = ($105<<24>>24)==(0);
   $107 = ((($__grouping)) + 4|0);
   $108 = HEAP32[$107>>2]|0;
   $109 = $104&255;
   $110 = $109 >>> 1;
   $111 = $106 ? $110 : $108;
   $112 = ($111|0)==(0);
   if (!($112)) {
    $113 = HEAP32[$__g_end>>2]|0;
    $114 = $113;
    $115 = $__g;
    $116 = (($114) - ($115))|0;
    $117 = ($116|0)<(160);
    if ($117) {
     $118 = HEAP32[$__dc>>2]|0;
     $119 = ((($113)) + 4|0);
     HEAP32[$__g_end>>2] = $119;
     HEAP32[$113>>2] = $118;
    }
   }
   $120 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $121 = (invoke_iiiii(545,($__a$2|0),($120|0),($__err|0),($0|0))|0);
   $122 = __THREW__; __THREW__ = 0;
   $123 = $122&1;
   if ($123) {
    label = 25;
   } else {
    HEAP16[$__v>>1] = $121;
    $124 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$124,$__err);
    $125 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($125) {
     $138 = 0;
    } else {
     $126 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $127 = HEAP32[$126>>2]|0;
     $128 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $129 = HEAP32[$128>>2]|0;
     $130 = ($127|0)==($129|0);
     if ($130) {
      $131 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $132 = ((($131)) + 36|0);
      $133 = HEAP32[$132>>2]|0;
      __THREW__ = 0;
      $134 = (invoke_ii($133|0,($$pre$i$i$i$lcssa|0))|0);
      $135 = __THREW__; __THREW__ = 0;
      $136 = $135&1;
      if ($136) {
       label = 25;
       break;
      }
      $137 = ($134|0)==(-1);
      if ($137) {
       HEAP32[$__b>>2] = 0;
       $138 = 0;
      } else {
       $138 = $$pre$i$i$i$lcssa;
      }
     } else {
      $138 = $$pre$i$i$i$lcssa;
     }
    }
    $139 = ($138|0)==(0|0);
    $140 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($140) {
      label = 49;
     } else {
      $141 = ((($$pre$i2$i$i)) + 12|0);
      $142 = HEAP32[$141>>2]|0;
      $143 = ((($$pre$i2$i$i)) + 16|0);
      $144 = HEAP32[$143>>2]|0;
      $145 = ($142|0)==($144|0);
      if ($145) {
       $146 = HEAP32[$$pre$i2$i$i>>2]|0;
       $147 = ((($146)) + 36|0);
       $148 = HEAP32[$147>>2]|0;
       __THREW__ = 0;
       $149 = (invoke_ii($148|0,($$pre$i2$i$i|0))|0);
       $150 = __THREW__; __THREW__ = 0;
       $151 = $150&1;
       if ($151) {
        label = 25;
        break L4;
       }
       $152 = ($149|0)==(-1);
       if ($152) {
        HEAP32[$__e>>2] = 0;
        label = 49;
        break;
       }
      }
      if (!($139)) {
       label = 50;
      }
     }
    } while(0);
    if ((label|0) == 49) {
     if ($139) {
      label = 50;
     }
    }
    if ((label|0) == 50) {
     $153 = HEAP32[$__err>>2]|0;
     $154 = $153 | 2;
     HEAP32[$__err>>2] = $154;
    }
    $155 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($155|0);
   }
  }
 } while(0);
 if ((label|0) == 25) {
  $77 = ___cxa_find_matching_catch()|0;
  $78 = tempRet0;
  $lpad$phi$index = $77;$lpad$phi$index2 = $78;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;
 var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i19 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(456,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L4: do {
  if ($10) {
   label = 25;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   $14 = ((($__buf)) + 8|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = ((($__buf)) + 1|0);
   $17 = $13 ? $16 : $15;
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = ((($__buf)) + 4|0);
   $19 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i4 = $$pre;$__a$0 = $17;
   L6: while(1) {
    $20 = ($$pre$i$i$i4|0)==(0|0);
    if ($20) {
     $$pre$i$i$i = 0;
    } else {
     $21 = ((($$pre$i$i$i4)) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = ((($$pre$i$i$i4)) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i4>>2]|0;
      $27 = ((($26)) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i4|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 24;
       break;
      }
      $32 = ($29|0)==(-1);
      if ($32) {
       HEAP32[$__b>>2] = 0;
       $$pre$i$i$i = 0;
      } else {
       $$pre$i$i$i = $$pre$i$i$i4;
      }
     } else {
      $$pre$i$i$i = $$pre$i$i$i4;
     }
    }
    $33 = ($$pre$i$i$i|0)==(0|0);
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 16;
     } else {
      $36 = ((($34)) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = ((($34)) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if (!($40)) {
       if ($33) {
        $156 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
      $41 = HEAP32[$34>>2]|0;
      $42 = ((($41)) + 36|0);
      $43 = HEAP32[$42>>2]|0;
      __THREW__ = 0;
      $44 = (invoke_ii($43|0,($34|0))|0);
      $45 = __THREW__; __THREW__ = 0;
      $46 = $45&1;
      if ($46) {
       label = 24;
       break L6;
      }
      $47 = ($44|0)==(-1);
      if ($47) {
       HEAP32[$__e>>2] = 0;
       label = 16;
       break;
      } else {
       if ($33) {
        $156 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
     }
    } while(0);
    if ((label|0) == 16) {
     label = 0;
     if ($33) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $156 = 0;
     }
    }
    $48 = HEAP32[$__a_end>>2]|0;
    $49 = HEAP8[$__buf>>0]|0;
    $50 = $49 & 1;
    $51 = ($50<<24>>24)==(0);
    $52 = HEAP32[$18>>2]|0;
    $53 = $49&255;
    $54 = $53 >>> 1;
    $55 = $51 ? $54 : $52;
    $56 = (($__a$0) + ($55)|0);
    $57 = ($48|0)==($56|0);
    if ($57) {
     $58 = $55 << 1;
     __THREW__ = 0;
     invoke_viii(456,($__buf|0),($58|0),0);
     $59 = __THREW__; __THREW__ = 0;
     $60 = $59&1;
     if ($60) {
      label = 24;
      break;
     }
     $61 = HEAP8[$__buf>>0]|0;
     $62 = $61 & 1;
     $63 = ($62<<24>>24)==(0);
     if ($63) {
      $66 = 10;
     } else {
      $64 = HEAP32[$__buf>>2]|0;
      $65 = $64 & -2;
      $phitmp$i19 = (($65) + -1)|0;
      $66 = $phitmp$i19;
     }
     __THREW__ = 0;
     invoke_viii(456,($__buf|0),($66|0),0);
     $67 = __THREW__; __THREW__ = 0;
     $68 = $67&1;
     if ($68) {
      label = 24;
      break;
     }
     $69 = HEAP8[$__buf>>0]|0;
     $70 = $69 & 1;
     $71 = ($70<<24>>24)==(0);
     $72 = HEAP32[$14>>2]|0;
     $73 = $71 ? $16 : $72;
     $74 = (($73) + ($55)|0);
     HEAP32[$__a_end>>2] = $74;
     $__a$1 = $73;
    } else {
     $__a$1 = $__a$0;
    }
    $79 = ((($$pre$i$i$i)) + 12|0);
    $80 = HEAP32[$79>>2]|0;
    $81 = ((($$pre$i$i$i)) + 16|0);
    $82 = HEAP32[$81>>2]|0;
    $83 = ($80|0)==($82|0);
    if ($83) {
     $84 = HEAP32[$$pre$i$i$i>>2]|0;
     $85 = ((($84)) + 36|0);
     $86 = HEAP32[$85>>2]|0;
     __THREW__ = 0;
     $87 = (invoke_ii($86|0,($$pre$i$i$i|0))|0);
     $88 = __THREW__; __THREW__ = 0;
     $89 = $88&1;
     if ($89) {
      label = 24;
      break;
     } else {
      $$0$i$i = $87;
     }
    } else {
     $90 = HEAP8[$80>>0]|0;
     $91 = $90&255;
     $$0$i$i = $91;
    }
    $92 = $$0$i$i&255;
    $93 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($92,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $94 = ($93|0)==(0);
    if (!($94)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $156;$__a$2 = $__a$1;
     break;
    }
    $95 = HEAP32[$79>>2]|0;
    $96 = HEAP32[$81>>2]|0;
    $97 = ($95|0)==($96|0);
    if ($97) {
     $98 = HEAP32[$$pre$i$i$i>>2]|0;
     $99 = ((($98)) + 40|0);
     $100 = HEAP32[$99>>2]|0;
     __THREW__ = 0;
     (invoke_ii($100|0,($$pre$i$i$i|0))|0);
     $101 = __THREW__; __THREW__ = 0;
     $102 = $101&1;
     if ($102) {
      label = 24;
      break;
     } else {
      $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $103 = ((($95)) + 1|0);
     HEAP32[$79>>2] = $103;
     $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 24) {
    $75 = ___cxa_find_matching_catch()|0;
    $76 = tempRet0;
    $lpad$phi$index = $75;$lpad$phi$index2 = $76;
    break;
   }
   $104 = HEAP8[$__grouping>>0]|0;
   $105 = $104 & 1;
   $106 = ($105<<24>>24)==(0);
   $107 = ((($__grouping)) + 4|0);
   $108 = HEAP32[$107>>2]|0;
   $109 = $104&255;
   $110 = $109 >>> 1;
   $111 = $106 ? $110 : $108;
   $112 = ($111|0)==(0);
   if (!($112)) {
    $113 = HEAP32[$__g_end>>2]|0;
    $114 = $113;
    $115 = $__g;
    $116 = (($114) - ($115))|0;
    $117 = ($116|0)<(160);
    if ($117) {
     $118 = HEAP32[$__dc>>2]|0;
     $119 = ((($113)) + 4|0);
     HEAP32[$__g_end>>2] = $119;
     HEAP32[$113>>2] = $118;
    }
   }
   $120 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $121 = (invoke_iiiii(546,($__a$2|0),($120|0),($__err|0),($0|0))|0);
   $122 = __THREW__; __THREW__ = 0;
   $123 = $122&1;
   if ($123) {
    label = 25;
   } else {
    HEAP32[$__v>>2] = $121;
    $124 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$124,$__err);
    $125 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($125) {
     $138 = 0;
    } else {
     $126 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $127 = HEAP32[$126>>2]|0;
     $128 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $129 = HEAP32[$128>>2]|0;
     $130 = ($127|0)==($129|0);
     if ($130) {
      $131 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $132 = ((($131)) + 36|0);
      $133 = HEAP32[$132>>2]|0;
      __THREW__ = 0;
      $134 = (invoke_ii($133|0,($$pre$i$i$i$lcssa|0))|0);
      $135 = __THREW__; __THREW__ = 0;
      $136 = $135&1;
      if ($136) {
       label = 25;
       break;
      }
      $137 = ($134|0)==(-1);
      if ($137) {
       HEAP32[$__b>>2] = 0;
       $138 = 0;
      } else {
       $138 = $$pre$i$i$i$lcssa;
      }
     } else {
      $138 = $$pre$i$i$i$lcssa;
     }
    }
    $139 = ($138|0)==(0|0);
    $140 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($140) {
      label = 49;
     } else {
      $141 = ((($$pre$i2$i$i)) + 12|0);
      $142 = HEAP32[$141>>2]|0;
      $143 = ((($$pre$i2$i$i)) + 16|0);
      $144 = HEAP32[$143>>2]|0;
      $145 = ($142|0)==($144|0);
      if ($145) {
       $146 = HEAP32[$$pre$i2$i$i>>2]|0;
       $147 = ((($146)) + 36|0);
       $148 = HEAP32[$147>>2]|0;
       __THREW__ = 0;
       $149 = (invoke_ii($148|0,($$pre$i2$i$i|0))|0);
       $150 = __THREW__; __THREW__ = 0;
       $151 = $150&1;
       if ($151) {
        label = 25;
        break L4;
       }
       $152 = ($149|0)==(-1);
       if ($152) {
        HEAP32[$__e>>2] = 0;
        label = 49;
        break;
       }
      }
      if (!($139)) {
       label = 50;
      }
     }
    } while(0);
    if ((label|0) == 49) {
     if ($139) {
      label = 50;
     }
    }
    if ((label|0) == 50) {
     $153 = HEAP32[$__err>>2]|0;
     $154 = $153 | 2;
     HEAP32[$__err>>2] = $154;
    }
    $155 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($155|0);
   }
  }
 } while(0);
 if ((label|0) == 25) {
  $77 = ___cxa_find_matching_catch()|0;
  $78 = tempRet0;
  $lpad$phi$index = $77;$lpad$phi$index2 = $78;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;
 var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i19 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(456,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L4: do {
  if ($10) {
   label = 25;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   $14 = ((($__buf)) + 8|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = ((($__buf)) + 1|0);
   $17 = $13 ? $16 : $15;
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = ((($__buf)) + 4|0);
   $19 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i4 = $$pre;$__a$0 = $17;
   L6: while(1) {
    $20 = ($$pre$i$i$i4|0)==(0|0);
    if ($20) {
     $$pre$i$i$i = 0;
    } else {
     $21 = ((($$pre$i$i$i4)) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = ((($$pre$i$i$i4)) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i4>>2]|0;
      $27 = ((($26)) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i4|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 24;
       break;
      }
      $32 = ($29|0)==(-1);
      if ($32) {
       HEAP32[$__b>>2] = 0;
       $$pre$i$i$i = 0;
      } else {
       $$pre$i$i$i = $$pre$i$i$i4;
      }
     } else {
      $$pre$i$i$i = $$pre$i$i$i4;
     }
    }
    $33 = ($$pre$i$i$i|0)==(0|0);
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 16;
     } else {
      $36 = ((($34)) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = ((($34)) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if (!($40)) {
       if ($33) {
        $156 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
      $41 = HEAP32[$34>>2]|0;
      $42 = ((($41)) + 36|0);
      $43 = HEAP32[$42>>2]|0;
      __THREW__ = 0;
      $44 = (invoke_ii($43|0,($34|0))|0);
      $45 = __THREW__; __THREW__ = 0;
      $46 = $45&1;
      if ($46) {
       label = 24;
       break L6;
      }
      $47 = ($44|0)==(-1);
      if ($47) {
       HEAP32[$__e>>2] = 0;
       label = 16;
       break;
      } else {
       if ($33) {
        $156 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
     }
    } while(0);
    if ((label|0) == 16) {
     label = 0;
     if ($33) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $156 = 0;
     }
    }
    $48 = HEAP32[$__a_end>>2]|0;
    $49 = HEAP8[$__buf>>0]|0;
    $50 = $49 & 1;
    $51 = ($50<<24>>24)==(0);
    $52 = HEAP32[$18>>2]|0;
    $53 = $49&255;
    $54 = $53 >>> 1;
    $55 = $51 ? $54 : $52;
    $56 = (($__a$0) + ($55)|0);
    $57 = ($48|0)==($56|0);
    if ($57) {
     $58 = $55 << 1;
     __THREW__ = 0;
     invoke_viii(456,($__buf|0),($58|0),0);
     $59 = __THREW__; __THREW__ = 0;
     $60 = $59&1;
     if ($60) {
      label = 24;
      break;
     }
     $61 = HEAP8[$__buf>>0]|0;
     $62 = $61 & 1;
     $63 = ($62<<24>>24)==(0);
     if ($63) {
      $66 = 10;
     } else {
      $64 = HEAP32[$__buf>>2]|0;
      $65 = $64 & -2;
      $phitmp$i19 = (($65) + -1)|0;
      $66 = $phitmp$i19;
     }
     __THREW__ = 0;
     invoke_viii(456,($__buf|0),($66|0),0);
     $67 = __THREW__; __THREW__ = 0;
     $68 = $67&1;
     if ($68) {
      label = 24;
      break;
     }
     $69 = HEAP8[$__buf>>0]|0;
     $70 = $69 & 1;
     $71 = ($70<<24>>24)==(0);
     $72 = HEAP32[$14>>2]|0;
     $73 = $71 ? $16 : $72;
     $74 = (($73) + ($55)|0);
     HEAP32[$__a_end>>2] = $74;
     $__a$1 = $73;
    } else {
     $__a$1 = $__a$0;
    }
    $79 = ((($$pre$i$i$i)) + 12|0);
    $80 = HEAP32[$79>>2]|0;
    $81 = ((($$pre$i$i$i)) + 16|0);
    $82 = HEAP32[$81>>2]|0;
    $83 = ($80|0)==($82|0);
    if ($83) {
     $84 = HEAP32[$$pre$i$i$i>>2]|0;
     $85 = ((($84)) + 36|0);
     $86 = HEAP32[$85>>2]|0;
     __THREW__ = 0;
     $87 = (invoke_ii($86|0,($$pre$i$i$i|0))|0);
     $88 = __THREW__; __THREW__ = 0;
     $89 = $88&1;
     if ($89) {
      label = 24;
      break;
     } else {
      $$0$i$i = $87;
     }
    } else {
     $90 = HEAP8[$80>>0]|0;
     $91 = $90&255;
     $$0$i$i = $91;
    }
    $92 = $$0$i$i&255;
    $93 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($92,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $94 = ($93|0)==(0);
    if (!($94)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $156;$__a$2 = $__a$1;
     break;
    }
    $95 = HEAP32[$79>>2]|0;
    $96 = HEAP32[$81>>2]|0;
    $97 = ($95|0)==($96|0);
    if ($97) {
     $98 = HEAP32[$$pre$i$i$i>>2]|0;
     $99 = ((($98)) + 40|0);
     $100 = HEAP32[$99>>2]|0;
     __THREW__ = 0;
     (invoke_ii($100|0,($$pre$i$i$i|0))|0);
     $101 = __THREW__; __THREW__ = 0;
     $102 = $101&1;
     if ($102) {
      label = 24;
      break;
     } else {
      $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $103 = ((($95)) + 1|0);
     HEAP32[$79>>2] = $103;
     $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 24) {
    $75 = ___cxa_find_matching_catch()|0;
    $76 = tempRet0;
    $lpad$phi$index = $75;$lpad$phi$index2 = $76;
    break;
   }
   $104 = HEAP8[$__grouping>>0]|0;
   $105 = $104 & 1;
   $106 = ($105<<24>>24)==(0);
   $107 = ((($__grouping)) + 4|0);
   $108 = HEAP32[$107>>2]|0;
   $109 = $104&255;
   $110 = $109 >>> 1;
   $111 = $106 ? $110 : $108;
   $112 = ($111|0)==(0);
   if (!($112)) {
    $113 = HEAP32[$__g_end>>2]|0;
    $114 = $113;
    $115 = $__g;
    $116 = (($114) - ($115))|0;
    $117 = ($116|0)<(160);
    if ($117) {
     $118 = HEAP32[$__dc>>2]|0;
     $119 = ((($113)) + 4|0);
     HEAP32[$__g_end>>2] = $119;
     HEAP32[$113>>2] = $118;
    }
   }
   $120 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $121 = (invoke_iiiii(547,($__a$2|0),($120|0),($__err|0),($0|0))|0);
   $122 = __THREW__; __THREW__ = 0;
   $123 = $122&1;
   if ($123) {
    label = 25;
   } else {
    HEAP32[$__v>>2] = $121;
    $124 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$124,$__err);
    $125 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($125) {
     $138 = 0;
    } else {
     $126 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $127 = HEAP32[$126>>2]|0;
     $128 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $129 = HEAP32[$128>>2]|0;
     $130 = ($127|0)==($129|0);
     if ($130) {
      $131 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $132 = ((($131)) + 36|0);
      $133 = HEAP32[$132>>2]|0;
      __THREW__ = 0;
      $134 = (invoke_ii($133|0,($$pre$i$i$i$lcssa|0))|0);
      $135 = __THREW__; __THREW__ = 0;
      $136 = $135&1;
      if ($136) {
       label = 25;
       break;
      }
      $137 = ($134|0)==(-1);
      if ($137) {
       HEAP32[$__b>>2] = 0;
       $138 = 0;
      } else {
       $138 = $$pre$i$i$i$lcssa;
      }
     } else {
      $138 = $$pre$i$i$i$lcssa;
     }
    }
    $139 = ($138|0)==(0|0);
    $140 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($140) {
      label = 49;
     } else {
      $141 = ((($$pre$i2$i$i)) + 12|0);
      $142 = HEAP32[$141>>2]|0;
      $143 = ((($$pre$i2$i$i)) + 16|0);
      $144 = HEAP32[$143>>2]|0;
      $145 = ($142|0)==($144|0);
      if ($145) {
       $146 = HEAP32[$$pre$i2$i$i>>2]|0;
       $147 = ((($146)) + 36|0);
       $148 = HEAP32[$147>>2]|0;
       __THREW__ = 0;
       $149 = (invoke_ii($148|0,($$pre$i2$i$i|0))|0);
       $150 = __THREW__; __THREW__ = 0;
       $151 = $150&1;
       if ($151) {
        label = 25;
        break L4;
       }
       $152 = ($149|0)==(-1);
       if ($152) {
        HEAP32[$__e>>2] = 0;
        label = 49;
        break;
       }
      }
      if (!($139)) {
       label = 50;
      }
     }
    } while(0);
    if ((label|0) == 49) {
     if ($139) {
      label = 50;
     }
    }
    if ((label|0) == 50) {
     $153 = HEAP32[$__err>>2]|0;
     $154 = $153 | 2;
     HEAP32[$__err>>2] = $154;
    }
    $155 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($155|0);
   }
  }
 } while(0);
 if ((label|0) == 25) {
  $77 = ___cxa_find_matching_catch()|0;
  $78 = tempRet0;
  $lpad$phi$index = $77;$lpad$phi$index2 = $78;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;
 var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $lpad$phi$index = 0;
 var $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i19 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(456,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L4: do {
  if ($10) {
   label = 25;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   $14 = ((($__buf)) + 8|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = ((($__buf)) + 1|0);
   $17 = $13 ? $16 : $15;
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = ((($__buf)) + 4|0);
   $19 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i4 = $$pre;$__a$0 = $17;
   L6: while(1) {
    $20 = ($$pre$i$i$i4|0)==(0|0);
    if ($20) {
     $$pre$i$i$i = 0;
    } else {
     $21 = ((($$pre$i$i$i4)) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = ((($$pre$i$i$i4)) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i4>>2]|0;
      $27 = ((($26)) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i4|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 24;
       break;
      }
      $32 = ($29|0)==(-1);
      if ($32) {
       HEAP32[$__b>>2] = 0;
       $$pre$i$i$i = 0;
      } else {
       $$pre$i$i$i = $$pre$i$i$i4;
      }
     } else {
      $$pre$i$i$i = $$pre$i$i$i4;
     }
    }
    $33 = ($$pre$i$i$i|0)==(0|0);
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 16;
     } else {
      $36 = ((($34)) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = ((($34)) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if (!($40)) {
       if ($33) {
        $161 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
      $41 = HEAP32[$34>>2]|0;
      $42 = ((($41)) + 36|0);
      $43 = HEAP32[$42>>2]|0;
      __THREW__ = 0;
      $44 = (invoke_ii($43|0,($34|0))|0);
      $45 = __THREW__; __THREW__ = 0;
      $46 = $45&1;
      if ($46) {
       label = 24;
       break L6;
      }
      $47 = ($44|0)==(-1);
      if ($47) {
       HEAP32[$__e>>2] = 0;
       label = 16;
       break;
      } else {
       if ($33) {
        $161 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
     }
    } while(0);
    if ((label|0) == 16) {
     label = 0;
     if ($33) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $161 = 0;
     }
    }
    $48 = HEAP32[$__a_end>>2]|0;
    $49 = HEAP8[$__buf>>0]|0;
    $50 = $49 & 1;
    $51 = ($50<<24>>24)==(0);
    $52 = HEAP32[$18>>2]|0;
    $53 = $49&255;
    $54 = $53 >>> 1;
    $55 = $51 ? $54 : $52;
    $56 = (($__a$0) + ($55)|0);
    $57 = ($48|0)==($56|0);
    if ($57) {
     $58 = $55 << 1;
     __THREW__ = 0;
     invoke_viii(456,($__buf|0),($58|0),0);
     $59 = __THREW__; __THREW__ = 0;
     $60 = $59&1;
     if ($60) {
      label = 24;
      break;
     }
     $61 = HEAP8[$__buf>>0]|0;
     $62 = $61 & 1;
     $63 = ($62<<24>>24)==(0);
     if ($63) {
      $66 = 10;
     } else {
      $64 = HEAP32[$__buf>>2]|0;
      $65 = $64 & -2;
      $phitmp$i19 = (($65) + -1)|0;
      $66 = $phitmp$i19;
     }
     __THREW__ = 0;
     invoke_viii(456,($__buf|0),($66|0),0);
     $67 = __THREW__; __THREW__ = 0;
     $68 = $67&1;
     if ($68) {
      label = 24;
      break;
     }
     $69 = HEAP8[$__buf>>0]|0;
     $70 = $69 & 1;
     $71 = ($70<<24>>24)==(0);
     $72 = HEAP32[$14>>2]|0;
     $73 = $71 ? $16 : $72;
     $74 = (($73) + ($55)|0);
     HEAP32[$__a_end>>2] = $74;
     $__a$1 = $73;
    } else {
     $__a$1 = $__a$0;
    }
    $79 = ((($$pre$i$i$i)) + 12|0);
    $80 = HEAP32[$79>>2]|0;
    $81 = ((($$pre$i$i$i)) + 16|0);
    $82 = HEAP32[$81>>2]|0;
    $83 = ($80|0)==($82|0);
    if ($83) {
     $84 = HEAP32[$$pre$i$i$i>>2]|0;
     $85 = ((($84)) + 36|0);
     $86 = HEAP32[$85>>2]|0;
     __THREW__ = 0;
     $87 = (invoke_ii($86|0,($$pre$i$i$i|0))|0);
     $88 = __THREW__; __THREW__ = 0;
     $89 = $88&1;
     if ($89) {
      label = 24;
      break;
     } else {
      $$0$i$i = $87;
     }
    } else {
     $90 = HEAP8[$80>>0]|0;
     $91 = $90&255;
     $$0$i$i = $91;
    }
    $92 = $$0$i$i&255;
    $93 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($92,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $94 = ($93|0)==(0);
    if (!($94)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $161;$__a$2 = $__a$1;
     break;
    }
    $95 = HEAP32[$79>>2]|0;
    $96 = HEAP32[$81>>2]|0;
    $97 = ($95|0)==($96|0);
    if ($97) {
     $98 = HEAP32[$$pre$i$i$i>>2]|0;
     $99 = ((($98)) + 40|0);
     $100 = HEAP32[$99>>2]|0;
     __THREW__ = 0;
     (invoke_ii($100|0,($$pre$i$i$i|0))|0);
     $101 = __THREW__; __THREW__ = 0;
     $102 = $101&1;
     if ($102) {
      label = 24;
      break;
     } else {
      $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $103 = ((($95)) + 1|0);
     HEAP32[$79>>2] = $103;
     $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 24) {
    $75 = ___cxa_find_matching_catch()|0;
    $76 = tempRet0;
    $lpad$phi$index = $75;$lpad$phi$index2 = $76;
    break;
   }
   $104 = HEAP8[$__grouping>>0]|0;
   $105 = $104 & 1;
   $106 = ($105<<24>>24)==(0);
   $107 = ((($__grouping)) + 4|0);
   $108 = HEAP32[$107>>2]|0;
   $109 = $104&255;
   $110 = $109 >>> 1;
   $111 = $106 ? $110 : $108;
   $112 = ($111|0)==(0);
   if (!($112)) {
    $113 = HEAP32[$__g_end>>2]|0;
    $114 = $113;
    $115 = $__g;
    $116 = (($114) - ($115))|0;
    $117 = ($116|0)<(160);
    if ($117) {
     $118 = HEAP32[$__dc>>2]|0;
     $119 = ((($113)) + 4|0);
     HEAP32[$__g_end>>2] = $119;
     HEAP32[$113>>2] = $118;
    }
   }
   $120 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $121 = (invoke_iiiii(548,($__a$2|0),($120|0),($__err|0),($0|0))|0);
   $122 = tempRet0;
   $123 = __THREW__; __THREW__ = 0;
   $124 = $123&1;
   if ($124) {
    label = 25;
   } else {
    $125 = $__v;
    $126 = $125;
    HEAP32[$126>>2] = $121;
    $127 = (($125) + 4)|0;
    $128 = $127;
    HEAP32[$128>>2] = $122;
    $129 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$129,$__err);
    $130 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($130) {
     $143 = 0;
    } else {
     $131 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $132 = HEAP32[$131>>2]|0;
     $133 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $134 = HEAP32[$133>>2]|0;
     $135 = ($132|0)==($134|0);
     if ($135) {
      $136 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $137 = ((($136)) + 36|0);
      $138 = HEAP32[$137>>2]|0;
      __THREW__ = 0;
      $139 = (invoke_ii($138|0,($$pre$i$i$i$lcssa|0))|0);
      $140 = __THREW__; __THREW__ = 0;
      $141 = $140&1;
      if ($141) {
       label = 25;
       break;
      }
      $142 = ($139|0)==(-1);
      if ($142) {
       HEAP32[$__b>>2] = 0;
       $143 = 0;
      } else {
       $143 = $$pre$i$i$i$lcssa;
      }
     } else {
      $143 = $$pre$i$i$i$lcssa;
     }
    }
    $144 = ($143|0)==(0|0);
    $145 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($145) {
      label = 49;
     } else {
      $146 = ((($$pre$i2$i$i)) + 12|0);
      $147 = HEAP32[$146>>2]|0;
      $148 = ((($$pre$i2$i$i)) + 16|0);
      $149 = HEAP32[$148>>2]|0;
      $150 = ($147|0)==($149|0);
      if ($150) {
       $151 = HEAP32[$$pre$i2$i$i>>2]|0;
       $152 = ((($151)) + 36|0);
       $153 = HEAP32[$152>>2]|0;
       __THREW__ = 0;
       $154 = (invoke_ii($153|0,($$pre$i2$i$i|0))|0);
       $155 = __THREW__; __THREW__ = 0;
       $156 = $155&1;
       if ($156) {
        label = 25;
        break L4;
       }
       $157 = ($154|0)==(-1);
       if ($157) {
        HEAP32[$__e>>2] = 0;
        label = 49;
        break;
       }
      }
      if (!($144)) {
       label = 50;
      }
     }
    } while(0);
    if ((label|0) == 49) {
     if ($144) {
      label = 50;
     }
    }
    if ((label|0) == 50) {
     $158 = HEAP32[$__err>>2]|0;
     $159 = $158 | 2;
     HEAP32[$__err>>2] = $159;
    }
    $160 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($160|0);
   }
  }
 } while(0);
 if ((label|0) == 25) {
  $77 = ___cxa_find_matching_catch()|0;
  $78 = tempRet0;
  $lpad$phi$index = $77;$lpad$phi$index2 = $78;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i2$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0.0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;
 var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0, $lpad$phi$index = 0;
 var $lpad$phi$index2 = 0, $or$cond = 0, $phitmp$i = 0, $phitmp$i20 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__decimal_point = sp + 199|0;
 $__thousands_sep = sp + 198|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 197|0;
 $__exp = sp + 196|0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $0 = ((($__buf)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($__buf)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(456,($__buf|0),($7|0),0);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 L4: do {
  if ($9) {
   label = 25;
  } else {
   $10 = HEAP8[$__buf>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   $13 = ((($__buf)) + 8|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = ((($__buf)) + 1|0);
   $16 = $12 ? $15 : $14;
   HEAP32[$__a_end>>2] = $16;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   HEAP8[$__in_units>>0] = 1;
   HEAP8[$__exp>>0] = 69;
   $17 = ((($__buf)) + 4|0);
   $18 = HEAP8[$__decimal_point>>0]|0;
   $19 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $16;
   L6: while(1) {
    $20 = ($$pre$i$i$i5|0)==(0|0);
    if ($20) {
     $$pre$i$i$i = 0;
    } else {
     $21 = ((($$pre$i$i$i5)) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = ((($$pre$i$i$i5)) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i5>>2]|0;
      $27 = ((($26)) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i5|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 24;
       break;
      }
      $32 = ($29|0)==(-1);
      if ($32) {
       HEAP32[$__b>>2] = 0;
       $$pre$i$i$i = 0;
      } else {
       $$pre$i$i$i = $$pre$i$i$i5;
      }
     } else {
      $$pre$i$i$i = $$pre$i$i$i5;
     }
    }
    $33 = ($$pre$i$i$i|0)==(0|0);
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 16;
     } else {
      $36 = ((($34)) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = ((($34)) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if (!($40)) {
       if ($33) {
        $158 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
      $41 = HEAP32[$34>>2]|0;
      $42 = ((($41)) + 36|0);
      $43 = HEAP32[$42>>2]|0;
      __THREW__ = 0;
      $44 = (invoke_ii($43|0,($34|0))|0);
      $45 = __THREW__; __THREW__ = 0;
      $46 = $45&1;
      if ($46) {
       label = 24;
       break L6;
      }
      $47 = ($44|0)==(-1);
      if ($47) {
       HEAP32[$__e>>2] = 0;
       label = 16;
       break;
      } else {
       if ($33) {
        $158 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
     }
    } while(0);
    if ((label|0) == 16) {
     label = 0;
     if ($33) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $158 = 0;
     }
    }
    $48 = HEAP32[$__a_end>>2]|0;
    $49 = HEAP8[$__buf>>0]|0;
    $50 = $49 & 1;
    $51 = ($50<<24>>24)==(0);
    $52 = HEAP32[$17>>2]|0;
    $53 = $49&255;
    $54 = $53 >>> 1;
    $55 = $51 ? $54 : $52;
    $56 = (($__a$0) + ($55)|0);
    $57 = ($48|0)==($56|0);
    if ($57) {
     $58 = $55 << 1;
     __THREW__ = 0;
     invoke_viii(456,($__buf|0),($58|0),0);
     $59 = __THREW__; __THREW__ = 0;
     $60 = $59&1;
     if ($60) {
      label = 24;
      break;
     }
     $61 = HEAP8[$__buf>>0]|0;
     $62 = $61 & 1;
     $63 = ($62<<24>>24)==(0);
     if ($63) {
      $66 = 10;
     } else {
      $64 = HEAP32[$__buf>>2]|0;
      $65 = $64 & -2;
      $phitmp$i20 = (($65) + -1)|0;
      $66 = $phitmp$i20;
     }
     __THREW__ = 0;
     invoke_viii(456,($__buf|0),($66|0),0);
     $67 = __THREW__; __THREW__ = 0;
     $68 = $67&1;
     if ($68) {
      label = 24;
      break;
     }
     $69 = HEAP8[$__buf>>0]|0;
     $70 = $69 & 1;
     $71 = ($70<<24>>24)==(0);
     $72 = HEAP32[$13>>2]|0;
     $73 = $71 ? $15 : $72;
     $74 = (($73) + ($55)|0);
     HEAP32[$__a_end>>2] = $74;
     $__a$1 = $73;
    } else {
     $__a$1 = $__a$0;
    }
    $79 = ((($$pre$i$i$i)) + 12|0);
    $80 = HEAP32[$79>>2]|0;
    $81 = ((($$pre$i$i$i)) + 16|0);
    $82 = HEAP32[$81>>2]|0;
    $83 = ($80|0)==($82|0);
    if ($83) {
     $84 = HEAP32[$$pre$i$i$i>>2]|0;
     $85 = ((($84)) + 36|0);
     $86 = HEAP32[$85>>2]|0;
     __THREW__ = 0;
     $87 = (invoke_ii($86|0,($$pre$i$i$i|0))|0);
     $88 = __THREW__; __THREW__ = 0;
     $89 = $88&1;
     if ($89) {
      label = 24;
      break;
     } else {
      $$0$i$i = $87;
     }
    } else {
     $90 = HEAP8[$80>>0]|0;
     $91 = $90&255;
     $$0$i$i = $91;
    }
    $92 = $$0$i$i&255;
    $93 = (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($92,$__in_units,$__exp,$__a$1,$__a_end,$18,$19,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
    $94 = ($93|0)==(0);
    if (!($94)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $158;$__a$2 = $__a$1;
     break;
    }
    $95 = HEAP32[$79>>2]|0;
    $96 = HEAP32[$81>>2]|0;
    $97 = ($95|0)==($96|0);
    if ($97) {
     $98 = HEAP32[$$pre$i$i$i>>2]|0;
     $99 = ((($98)) + 40|0);
     $100 = HEAP32[$99>>2]|0;
     __THREW__ = 0;
     (invoke_ii($100|0,($$pre$i$i$i|0))|0);
     $101 = __THREW__; __THREW__ = 0;
     $102 = $101&1;
     if ($102) {
      label = 24;
      break;
     } else {
      $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $103 = ((($95)) + 1|0);
     HEAP32[$79>>2] = $103;
     $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 24) {
    $75 = ___cxa_find_matching_catch()|0;
    $76 = tempRet0;
    $lpad$phi$index = $75;$lpad$phi$index2 = $76;
    break;
   }
   $104 = HEAP8[$__grouping>>0]|0;
   $105 = $104 & 1;
   $106 = ($105<<24>>24)==(0);
   $107 = ((($__grouping)) + 4|0);
   $108 = HEAP32[$107>>2]|0;
   $109 = $104&255;
   $110 = $109 >>> 1;
   $111 = $106 ? $110 : $108;
   $112 = ($111|0)==(0);
   $113 = HEAP8[$__in_units>>0]|0;
   $114 = ($113<<24>>24)==(0);
   $or$cond = $114 | $112;
   if (!($or$cond)) {
    $115 = HEAP32[$__g_end>>2]|0;
    $116 = $115;
    $117 = $__g;
    $118 = (($116) - ($117))|0;
    $119 = ($118|0)<(160);
    if ($119) {
     $120 = HEAP32[$__dc>>2]|0;
     $121 = ((($115)) + 4|0);
     HEAP32[$__g_end>>2] = $121;
     HEAP32[$115>>2] = $120;
    }
   }
   $122 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $123 = (+invoke_diii(549,($__a$2|0),($122|0),($__err|0)));
   $124 = __THREW__; __THREW__ = 0;
   $125 = $124&1;
   if ($125) {
    label = 25;
   } else {
    HEAPF32[$__v>>2] = $123;
    $126 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$126,$__err);
    $127 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($127) {
     $140 = 0;
    } else {
     $128 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $129 = HEAP32[$128>>2]|0;
     $130 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $131 = HEAP32[$130>>2]|0;
     $132 = ($129|0)==($131|0);
     if ($132) {
      $133 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $134 = ((($133)) + 36|0);
      $135 = HEAP32[$134>>2]|0;
      __THREW__ = 0;
      $136 = (invoke_ii($135|0,($$pre$i$i$i$lcssa|0))|0);
      $137 = __THREW__; __THREW__ = 0;
      $138 = $137&1;
      if ($138) {
       label = 25;
       break;
      }
      $139 = ($136|0)==(-1);
      if ($139) {
       HEAP32[$__b>>2] = 0;
       $140 = 0;
      } else {
       $140 = $$pre$i$i$i$lcssa;
      }
     } else {
      $140 = $$pre$i$i$i$lcssa;
     }
    }
    $141 = ($140|0)==(0|0);
    $142 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($142) {
      label = 49;
     } else {
      $143 = ((($$pre$i2$i$i)) + 12|0);
      $144 = HEAP32[$143>>2]|0;
      $145 = ((($$pre$i2$i$i)) + 16|0);
      $146 = HEAP32[$145>>2]|0;
      $147 = ($144|0)==($146|0);
      if ($147) {
       $148 = HEAP32[$$pre$i2$i$i>>2]|0;
       $149 = ((($148)) + 36|0);
       $150 = HEAP32[$149>>2]|0;
       __THREW__ = 0;
       $151 = (invoke_ii($150|0,($$pre$i2$i$i|0))|0);
       $152 = __THREW__; __THREW__ = 0;
       $153 = $152&1;
       if ($153) {
        label = 25;
        break L4;
       }
       $154 = ($151|0)==(-1);
       if ($154) {
        HEAP32[$__e>>2] = 0;
        label = 49;
        break;
       }
      }
      if (!($141)) {
       label = 50;
      }
     }
    } while(0);
    if ((label|0) == 49) {
     if ($141) {
      label = 50;
     }
    }
    if ((label|0) == 50) {
     $155 = HEAP32[$__err>>2]|0;
     $156 = $155 | 2;
     HEAP32[$__err>>2] = $156;
    }
    $157 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($157|0);
   }
  }
 } while(0);
 if ((label|0) == 25) {
  $77 = ___cxa_find_matching_catch()|0;
  $78 = tempRet0;
  $lpad$phi$index = $77;$lpad$phi$index2 = $78;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i2$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0.0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;
 var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0, $lpad$phi$index = 0;
 var $lpad$phi$index2 = 0, $or$cond = 0, $phitmp$i = 0, $phitmp$i20 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__decimal_point = sp + 199|0;
 $__thousands_sep = sp + 198|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 197|0;
 $__exp = sp + 196|0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $0 = ((($__buf)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($__buf)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(456,($__buf|0),($7|0),0);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 L4: do {
  if ($9) {
   label = 25;
  } else {
   $10 = HEAP8[$__buf>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   $13 = ((($__buf)) + 8|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = ((($__buf)) + 1|0);
   $16 = $12 ? $15 : $14;
   HEAP32[$__a_end>>2] = $16;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   HEAP8[$__in_units>>0] = 1;
   HEAP8[$__exp>>0] = 69;
   $17 = ((($__buf)) + 4|0);
   $18 = HEAP8[$__decimal_point>>0]|0;
   $19 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $16;
   L6: while(1) {
    $20 = ($$pre$i$i$i5|0)==(0|0);
    if ($20) {
     $$pre$i$i$i = 0;
    } else {
     $21 = ((($$pre$i$i$i5)) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = ((($$pre$i$i$i5)) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i5>>2]|0;
      $27 = ((($26)) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i5|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 24;
       break;
      }
      $32 = ($29|0)==(-1);
      if ($32) {
       HEAP32[$__b>>2] = 0;
       $$pre$i$i$i = 0;
      } else {
       $$pre$i$i$i = $$pre$i$i$i5;
      }
     } else {
      $$pre$i$i$i = $$pre$i$i$i5;
     }
    }
    $33 = ($$pre$i$i$i|0)==(0|0);
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 16;
     } else {
      $36 = ((($34)) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = ((($34)) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if (!($40)) {
       if ($33) {
        $158 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
      $41 = HEAP32[$34>>2]|0;
      $42 = ((($41)) + 36|0);
      $43 = HEAP32[$42>>2]|0;
      __THREW__ = 0;
      $44 = (invoke_ii($43|0,($34|0))|0);
      $45 = __THREW__; __THREW__ = 0;
      $46 = $45&1;
      if ($46) {
       label = 24;
       break L6;
      }
      $47 = ($44|0)==(-1);
      if ($47) {
       HEAP32[$__e>>2] = 0;
       label = 16;
       break;
      } else {
       if ($33) {
        $158 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
     }
    } while(0);
    if ((label|0) == 16) {
     label = 0;
     if ($33) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $158 = 0;
     }
    }
    $48 = HEAP32[$__a_end>>2]|0;
    $49 = HEAP8[$__buf>>0]|0;
    $50 = $49 & 1;
    $51 = ($50<<24>>24)==(0);
    $52 = HEAP32[$17>>2]|0;
    $53 = $49&255;
    $54 = $53 >>> 1;
    $55 = $51 ? $54 : $52;
    $56 = (($__a$0) + ($55)|0);
    $57 = ($48|0)==($56|0);
    if ($57) {
     $58 = $55 << 1;
     __THREW__ = 0;
     invoke_viii(456,($__buf|0),($58|0),0);
     $59 = __THREW__; __THREW__ = 0;
     $60 = $59&1;
     if ($60) {
      label = 24;
      break;
     }
     $61 = HEAP8[$__buf>>0]|0;
     $62 = $61 & 1;
     $63 = ($62<<24>>24)==(0);
     if ($63) {
      $66 = 10;
     } else {
      $64 = HEAP32[$__buf>>2]|0;
      $65 = $64 & -2;
      $phitmp$i20 = (($65) + -1)|0;
      $66 = $phitmp$i20;
     }
     __THREW__ = 0;
     invoke_viii(456,($__buf|0),($66|0),0);
     $67 = __THREW__; __THREW__ = 0;
     $68 = $67&1;
     if ($68) {
      label = 24;
      break;
     }
     $69 = HEAP8[$__buf>>0]|0;
     $70 = $69 & 1;
     $71 = ($70<<24>>24)==(0);
     $72 = HEAP32[$13>>2]|0;
     $73 = $71 ? $15 : $72;
     $74 = (($73) + ($55)|0);
     HEAP32[$__a_end>>2] = $74;
     $__a$1 = $73;
    } else {
     $__a$1 = $__a$0;
    }
    $79 = ((($$pre$i$i$i)) + 12|0);
    $80 = HEAP32[$79>>2]|0;
    $81 = ((($$pre$i$i$i)) + 16|0);
    $82 = HEAP32[$81>>2]|0;
    $83 = ($80|0)==($82|0);
    if ($83) {
     $84 = HEAP32[$$pre$i$i$i>>2]|0;
     $85 = ((($84)) + 36|0);
     $86 = HEAP32[$85>>2]|0;
     __THREW__ = 0;
     $87 = (invoke_ii($86|0,($$pre$i$i$i|0))|0);
     $88 = __THREW__; __THREW__ = 0;
     $89 = $88&1;
     if ($89) {
      label = 24;
      break;
     } else {
      $$0$i$i = $87;
     }
    } else {
     $90 = HEAP8[$80>>0]|0;
     $91 = $90&255;
     $$0$i$i = $91;
    }
    $92 = $$0$i$i&255;
    $93 = (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($92,$__in_units,$__exp,$__a$1,$__a_end,$18,$19,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
    $94 = ($93|0)==(0);
    if (!($94)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $158;$__a$2 = $__a$1;
     break;
    }
    $95 = HEAP32[$79>>2]|0;
    $96 = HEAP32[$81>>2]|0;
    $97 = ($95|0)==($96|0);
    if ($97) {
     $98 = HEAP32[$$pre$i$i$i>>2]|0;
     $99 = ((($98)) + 40|0);
     $100 = HEAP32[$99>>2]|0;
     __THREW__ = 0;
     (invoke_ii($100|0,($$pre$i$i$i|0))|0);
     $101 = __THREW__; __THREW__ = 0;
     $102 = $101&1;
     if ($102) {
      label = 24;
      break;
     } else {
      $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $103 = ((($95)) + 1|0);
     HEAP32[$79>>2] = $103;
     $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 24) {
    $75 = ___cxa_find_matching_catch()|0;
    $76 = tempRet0;
    $lpad$phi$index = $75;$lpad$phi$index2 = $76;
    break;
   }
   $104 = HEAP8[$__grouping>>0]|0;
   $105 = $104 & 1;
   $106 = ($105<<24>>24)==(0);
   $107 = ((($__grouping)) + 4|0);
   $108 = HEAP32[$107>>2]|0;
   $109 = $104&255;
   $110 = $109 >>> 1;
   $111 = $106 ? $110 : $108;
   $112 = ($111|0)==(0);
   $113 = HEAP8[$__in_units>>0]|0;
   $114 = ($113<<24>>24)==(0);
   $or$cond = $114 | $112;
   if (!($or$cond)) {
    $115 = HEAP32[$__g_end>>2]|0;
    $116 = $115;
    $117 = $__g;
    $118 = (($116) - ($117))|0;
    $119 = ($118|0)<(160);
    if ($119) {
     $120 = HEAP32[$__dc>>2]|0;
     $121 = ((($115)) + 4|0);
     HEAP32[$__g_end>>2] = $121;
     HEAP32[$115>>2] = $120;
    }
   }
   $122 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $123 = (+invoke_diii(550,($__a$2|0),($122|0),($__err|0)));
   $124 = __THREW__; __THREW__ = 0;
   $125 = $124&1;
   if ($125) {
    label = 25;
   } else {
    HEAPF64[$__v>>3] = $123;
    $126 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$126,$__err);
    $127 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($127) {
     $140 = 0;
    } else {
     $128 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $129 = HEAP32[$128>>2]|0;
     $130 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $131 = HEAP32[$130>>2]|0;
     $132 = ($129|0)==($131|0);
     if ($132) {
      $133 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $134 = ((($133)) + 36|0);
      $135 = HEAP32[$134>>2]|0;
      __THREW__ = 0;
      $136 = (invoke_ii($135|0,($$pre$i$i$i$lcssa|0))|0);
      $137 = __THREW__; __THREW__ = 0;
      $138 = $137&1;
      if ($138) {
       label = 25;
       break;
      }
      $139 = ($136|0)==(-1);
      if ($139) {
       HEAP32[$__b>>2] = 0;
       $140 = 0;
      } else {
       $140 = $$pre$i$i$i$lcssa;
      }
     } else {
      $140 = $$pre$i$i$i$lcssa;
     }
    }
    $141 = ($140|0)==(0|0);
    $142 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($142) {
      label = 49;
     } else {
      $143 = ((($$pre$i2$i$i)) + 12|0);
      $144 = HEAP32[$143>>2]|0;
      $145 = ((($$pre$i2$i$i)) + 16|0);
      $146 = HEAP32[$145>>2]|0;
      $147 = ($144|0)==($146|0);
      if ($147) {
       $148 = HEAP32[$$pre$i2$i$i>>2]|0;
       $149 = ((($148)) + 36|0);
       $150 = HEAP32[$149>>2]|0;
       __THREW__ = 0;
       $151 = (invoke_ii($150|0,($$pre$i2$i$i|0))|0);
       $152 = __THREW__; __THREW__ = 0;
       $153 = $152&1;
       if ($153) {
        label = 25;
        break L4;
       }
       $154 = ($151|0)==(-1);
       if ($154) {
        HEAP32[$__e>>2] = 0;
        label = 49;
        break;
       }
      }
      if (!($141)) {
       label = 50;
      }
     }
    } while(0);
    if ((label|0) == 49) {
     if ($141) {
      label = 50;
     }
    }
    if ((label|0) == 50) {
     $155 = HEAP32[$__err>>2]|0;
     $156 = $155 | 2;
     HEAP32[$__err>>2] = $156;
    }
    $157 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($157|0);
   }
  }
 } while(0);
 if ((label|0) == 25) {
  $77 = ___cxa_find_matching_catch()|0;
  $78 = tempRet0;
  $lpad$phi$index = $77;$lpad$phi$index2 = $78;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i2$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0.0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;
 var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0, $lpad$phi$index = 0;
 var $lpad$phi$index2 = 0, $or$cond = 0, $phitmp$i = 0, $phitmp$i20 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__decimal_point = sp + 199|0;
 $__thousands_sep = sp + 198|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 197|0;
 $__exp = sp + 196|0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $0 = ((($__buf)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($__buf)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(456,($__buf|0),($7|0),0);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 L4: do {
  if ($9) {
   label = 25;
  } else {
   $10 = HEAP8[$__buf>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   $13 = ((($__buf)) + 8|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = ((($__buf)) + 1|0);
   $16 = $12 ? $15 : $14;
   HEAP32[$__a_end>>2] = $16;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   HEAP8[$__in_units>>0] = 1;
   HEAP8[$__exp>>0] = 69;
   $17 = ((($__buf)) + 4|0);
   $18 = HEAP8[$__decimal_point>>0]|0;
   $19 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $16;
   L6: while(1) {
    $20 = ($$pre$i$i$i5|0)==(0|0);
    if ($20) {
     $$pre$i$i$i = 0;
    } else {
     $21 = ((($$pre$i$i$i5)) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = ((($$pre$i$i$i5)) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i5>>2]|0;
      $27 = ((($26)) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i5|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 24;
       break;
      }
      $32 = ($29|0)==(-1);
      if ($32) {
       HEAP32[$__b>>2] = 0;
       $$pre$i$i$i = 0;
      } else {
       $$pre$i$i$i = $$pre$i$i$i5;
      }
     } else {
      $$pre$i$i$i = $$pre$i$i$i5;
     }
    }
    $33 = ($$pre$i$i$i|0)==(0|0);
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 16;
     } else {
      $36 = ((($34)) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = ((($34)) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if (!($40)) {
       if ($33) {
        $158 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
      $41 = HEAP32[$34>>2]|0;
      $42 = ((($41)) + 36|0);
      $43 = HEAP32[$42>>2]|0;
      __THREW__ = 0;
      $44 = (invoke_ii($43|0,($34|0))|0);
      $45 = __THREW__; __THREW__ = 0;
      $46 = $45&1;
      if ($46) {
       label = 24;
       break L6;
      }
      $47 = ($44|0)==(-1);
      if ($47) {
       HEAP32[$__e>>2] = 0;
       label = 16;
       break;
      } else {
       if ($33) {
        $158 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
     }
    } while(0);
    if ((label|0) == 16) {
     label = 0;
     if ($33) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $158 = 0;
     }
    }
    $48 = HEAP32[$__a_end>>2]|0;
    $49 = HEAP8[$__buf>>0]|0;
    $50 = $49 & 1;
    $51 = ($50<<24>>24)==(0);
    $52 = HEAP32[$17>>2]|0;
    $53 = $49&255;
    $54 = $53 >>> 1;
    $55 = $51 ? $54 : $52;
    $56 = (($__a$0) + ($55)|0);
    $57 = ($48|0)==($56|0);
    if ($57) {
     $58 = $55 << 1;
     __THREW__ = 0;
     invoke_viii(456,($__buf|0),($58|0),0);
     $59 = __THREW__; __THREW__ = 0;
     $60 = $59&1;
     if ($60) {
      label = 24;
      break;
     }
     $61 = HEAP8[$__buf>>0]|0;
     $62 = $61 & 1;
     $63 = ($62<<24>>24)==(0);
     if ($63) {
      $66 = 10;
     } else {
      $64 = HEAP32[$__buf>>2]|0;
      $65 = $64 & -2;
      $phitmp$i20 = (($65) + -1)|0;
      $66 = $phitmp$i20;
     }
     __THREW__ = 0;
     invoke_viii(456,($__buf|0),($66|0),0);
     $67 = __THREW__; __THREW__ = 0;
     $68 = $67&1;
     if ($68) {
      label = 24;
      break;
     }
     $69 = HEAP8[$__buf>>0]|0;
     $70 = $69 & 1;
     $71 = ($70<<24>>24)==(0);
     $72 = HEAP32[$13>>2]|0;
     $73 = $71 ? $15 : $72;
     $74 = (($73) + ($55)|0);
     HEAP32[$__a_end>>2] = $74;
     $__a$1 = $73;
    } else {
     $__a$1 = $__a$0;
    }
    $79 = ((($$pre$i$i$i)) + 12|0);
    $80 = HEAP32[$79>>2]|0;
    $81 = ((($$pre$i$i$i)) + 16|0);
    $82 = HEAP32[$81>>2]|0;
    $83 = ($80|0)==($82|0);
    if ($83) {
     $84 = HEAP32[$$pre$i$i$i>>2]|0;
     $85 = ((($84)) + 36|0);
     $86 = HEAP32[$85>>2]|0;
     __THREW__ = 0;
     $87 = (invoke_ii($86|0,($$pre$i$i$i|0))|0);
     $88 = __THREW__; __THREW__ = 0;
     $89 = $88&1;
     if ($89) {
      label = 24;
      break;
     } else {
      $$0$i$i = $87;
     }
    } else {
     $90 = HEAP8[$80>>0]|0;
     $91 = $90&255;
     $$0$i$i = $91;
    }
    $92 = $$0$i$i&255;
    $93 = (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($92,$__in_units,$__exp,$__a$1,$__a_end,$18,$19,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
    $94 = ($93|0)==(0);
    if (!($94)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $158;$__a$2 = $__a$1;
     break;
    }
    $95 = HEAP32[$79>>2]|0;
    $96 = HEAP32[$81>>2]|0;
    $97 = ($95|0)==($96|0);
    if ($97) {
     $98 = HEAP32[$$pre$i$i$i>>2]|0;
     $99 = ((($98)) + 40|0);
     $100 = HEAP32[$99>>2]|0;
     __THREW__ = 0;
     (invoke_ii($100|0,($$pre$i$i$i|0))|0);
     $101 = __THREW__; __THREW__ = 0;
     $102 = $101&1;
     if ($102) {
      label = 24;
      break;
     } else {
      $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $103 = ((($95)) + 1|0);
     HEAP32[$79>>2] = $103;
     $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 24) {
    $75 = ___cxa_find_matching_catch()|0;
    $76 = tempRet0;
    $lpad$phi$index = $75;$lpad$phi$index2 = $76;
    break;
   }
   $104 = HEAP8[$__grouping>>0]|0;
   $105 = $104 & 1;
   $106 = ($105<<24>>24)==(0);
   $107 = ((($__grouping)) + 4|0);
   $108 = HEAP32[$107>>2]|0;
   $109 = $104&255;
   $110 = $109 >>> 1;
   $111 = $106 ? $110 : $108;
   $112 = ($111|0)==(0);
   $113 = HEAP8[$__in_units>>0]|0;
   $114 = ($113<<24>>24)==(0);
   $or$cond = $114 | $112;
   if (!($or$cond)) {
    $115 = HEAP32[$__g_end>>2]|0;
    $116 = $115;
    $117 = $__g;
    $118 = (($116) - ($117))|0;
    $119 = ($118|0)<(160);
    if ($119) {
     $120 = HEAP32[$__dc>>2]|0;
     $121 = ((($115)) + 4|0);
     HEAP32[$__g_end>>2] = $121;
     HEAP32[$115>>2] = $120;
    }
   }
   $122 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $123 = (+invoke_diii(551,($__a$2|0),($122|0),($__err|0)));
   $124 = __THREW__; __THREW__ = 0;
   $125 = $124&1;
   if ($125) {
    label = 25;
   } else {
    HEAPF64[$__v>>3] = $123;
    $126 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$126,$__err);
    $127 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($127) {
     $140 = 0;
    } else {
     $128 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $129 = HEAP32[$128>>2]|0;
     $130 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $131 = HEAP32[$130>>2]|0;
     $132 = ($129|0)==($131|0);
     if ($132) {
      $133 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $134 = ((($133)) + 36|0);
      $135 = HEAP32[$134>>2]|0;
      __THREW__ = 0;
      $136 = (invoke_ii($135|0,($$pre$i$i$i$lcssa|0))|0);
      $137 = __THREW__; __THREW__ = 0;
      $138 = $137&1;
      if ($138) {
       label = 25;
       break;
      }
      $139 = ($136|0)==(-1);
      if ($139) {
       HEAP32[$__b>>2] = 0;
       $140 = 0;
      } else {
       $140 = $$pre$i$i$i$lcssa;
      }
     } else {
      $140 = $$pre$i$i$i$lcssa;
     }
    }
    $141 = ($140|0)==(0|0);
    $142 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($142) {
      label = 49;
     } else {
      $143 = ((($$pre$i2$i$i)) + 12|0);
      $144 = HEAP32[$143>>2]|0;
      $145 = ((($$pre$i2$i$i)) + 16|0);
      $146 = HEAP32[$145>>2]|0;
      $147 = ($144|0)==($146|0);
      if ($147) {
       $148 = HEAP32[$$pre$i2$i$i>>2]|0;
       $149 = ((($148)) + 36|0);
       $150 = HEAP32[$149>>2]|0;
       __THREW__ = 0;
       $151 = (invoke_ii($150|0,($$pre$i2$i$i|0))|0);
       $152 = __THREW__; __THREW__ = 0;
       $153 = $152&1;
       if ($153) {
        label = 25;
        break L4;
       }
       $154 = ($151|0)==(-1);
       if ($154) {
        HEAP32[$__e>>2] = 0;
        label = 49;
        break;
       }
      }
      if (!($141)) {
       label = 50;
      }
     }
    } while(0);
    if ((label|0) == 49) {
     if ($141) {
      label = 50;
     }
    }
    if ((label|0) == 50) {
     $155 = HEAP32[$__err>>2]|0;
     $156 = $155 | 2;
     HEAP32[$__err>>2] = $156;
    }
    $157 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($157|0);
   }
  }
 } while(0);
 if ((label|0) == 25) {
  $77 = ___cxa_find_matching_catch()|0;
  $78 = tempRet0;
  $lpad$phi$index = $77;$lpad$phi$index2 = $78;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__110__sscanf_lEPKcP15__locale_structS1_z($__s,$__l,$__format,$varargs) {
 $__s = $__s|0;
 $__l = $__l|0;
 $__format = $__format|0;
 $varargs = $varargs|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $__va = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__va = sp;
 HEAP32[$__va>>2] = $varargs;
 $0 = (_uselocale(($__l|0))|0);
 $1 = (_vsscanf($__s,$__format,$__va)|0);
 $2 = ($0|0)==(0|0);
 if (!($2)) {
  __THREW__ = 0;
  (invoke_ii(472,($0|0))|0);
  $3 = __THREW__; __THREW__ = 0;
  $4 = $3&1;
  if ($4) {
   $5 = ___cxa_find_matching_catch(0|0)|0;
   $6 = tempRet0;
   ___clang_call_terminate($5);
   // unreachable;
  }
 }
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$__e,$__kb,$__ke,$__ct,$__err,$__case_sensitive) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__kb = $__kb|0;
 $__ke = $__ke|0;
 $__ct = $__ct|0;
 $__err = $__err|0;
 $__case_sensitive = $__case_sensitive|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i11 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i17 = 0, $$044 = 0, $$081 = 0, $$lcssa = 0, $$ph$ph = 0, $$pre$i$i$i = 0, $$pre$i$i$i13 = 0, $$pre$i3$i$i19 = 0, $$pre$i3$i$i19$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0;
 var $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__c$0 = 0, $__consume$0$off0$lcssa = 0, $__consume$0$off086 = 0, $__consume$1$off0 = 0, $__indx$0 = 0, $__kc$0 = 0, $__ky$0100 = 0, $__ky1$087 = 0, $__ky2$094 = 0, $__n_does_match$0$lcssa = 0, $__n_does_match$098 = 0, $__n_does_match$1 = 0, $__n_does_match$2 = 0;
 var $__n_does_match$3$lcssa = 0, $__n_does_match$383 = 0, $__n_does_match$4 = 0, $__n_does_match$592 = 0, $__n_does_match$6 = 0, $__n_might_match$0$lcssa = 0, $__n_might_match$097 = 0, $__n_might_match$1 = 0, $__n_might_match$2 = 0, $__n_might_match$3$lcssa = 0, $__n_might_match$382 = 0, $__n_might_match$4 = 0, $__st$099 = 0, $__st$184 = 0, $__st$293 = 0, $__st$380 = 0, $__statbuf = 0, $__status$0 = 0, $lpad$phi$index = 0, $lpad$phi$index3 = 0;
 var $or$cond = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i14 = 0, $tmp$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__statbuf = sp;
 $0 = $__ke;
 $1 = $__kb;
 $2 = (($0) - ($1))|0;
 $3 = (($2|0) / 12)&-1;
 $4 = ($3>>>0)>(100);
 do {
  if ($4) {
   $5 = (_malloc($3)|0);
   $6 = ($5|0)==(0|0);
   if ($6) {
    __THREW__ = 0;
    invoke_v(463);
    $7 = __THREW__; __THREW__ = 0;
    $8 = $7&1;
    if ($8) {
     $$ph$ph = 0;
     label = 6;
     break;
    }
   }
   $18 = $5;
   $190 = $18;$__status$0 = $5;
   label = 11;
  } else {
   $190 = 0;$__status$0 = $__statbuf;
   label = 11;
  }
 } while(0);
 L6: do {
  if ((label|0) == 11) {
   $19 = ($__kb|0)==($__ke|0);
   if ($19) {
    $__n_does_match$0$lcssa = 0;$__n_might_match$0$lcssa = $3;
   } else {
    $__ky$0100 = $__kb;$__n_does_match$098 = 0;$__n_might_match$097 = $3;$__st$099 = $__status$0;
    while(1) {
     $22 = HEAP8[$__ky$0100>>0]|0;
     $23 = $22 & 1;
     $24 = ($23<<24>>24)==(0);
     if ($24) {
      $27 = $22&255;
      $28 = $27 >>> 1;
      $29 = $28;
     } else {
      $25 = ((($__ky$0100)) + 4|0);
      $26 = HEAP32[$25>>2]|0;
      $29 = $26;
     }
     $30 = ($29|0)==(0);
     if ($30) {
      HEAP8[$__st$099>>0] = 2;
      $31 = (($__n_might_match$097) + -1)|0;
      $32 = (($__n_does_match$098) + 1)|0;
      $__n_does_match$1 = $32;$__n_might_match$1 = $31;
     } else {
      HEAP8[$__st$099>>0] = 1;
      $__n_does_match$1 = $__n_does_match$098;$__n_might_match$1 = $__n_might_match$097;
     }
     $33 = ((($__ky$0100)) + 12|0);
     $34 = ((($__st$099)) + 1|0);
     $35 = ($33|0)==($__ke|0);
     if ($35) {
      $__n_does_match$0$lcssa = $__n_does_match$1;$__n_might_match$0$lcssa = $__n_might_match$1;
      break;
     } else {
      $__ky$0100 = $33;$__n_does_match$098 = $__n_does_match$1;$__n_might_match$097 = $__n_might_match$1;$__st$099 = $34;
     }
    }
   }
   $20 = ($__kb|0)==($__ke|0);
   $21 = ($__kb|0)==($__ke|0);
   $__indx$0 = 0;$__n_does_match$2 = $__n_does_match$0$lcssa;$__n_might_match$2 = $__n_might_match$0$lcssa;
   L20: while(1) {
    $36 = HEAP32[$__b>>2]|0;
    $37 = ($36|0)==(0|0);
    do {
     if ($37) {
      $67 = 1;
     } else {
      $38 = ((($36)) + 12|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ((($36)) + 16|0);
      $41 = HEAP32[$40>>2]|0;
      $42 = ($39|0)==($41|0);
      if ($42) {
       $43 = HEAP32[$36>>2]|0;
       $44 = ((($43)) + 36|0);
       $45 = HEAP32[$44>>2]|0;
       __THREW__ = 0;
       $46 = (invoke_ii($45|0,($36|0))|0);
       $47 = __THREW__; __THREW__ = 0;
       $48 = $47&1;
       if ($48) {
        label = 5;
        break L20;
       } else {
        $$0$i$i$i$i = $46;
       }
      } else {
       $49 = HEAP32[$39>>2]|0;
       $$0$i$i$i$i = $49;
      }
      $50 = ($$0$i$i$i$i|0)==(-1);
      if ($50) {
       HEAP32[$__b>>2] = 0;
       $67 = 1;
       break;
      } else {
       $$pre$i$i$i = HEAP32[$__b>>2]|0;
       $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
       $67 = $phitmp$i$i$i;
       break;
      }
     }
    } while(0);
    $51 = HEAP32[$__e>>2]|0;
    $52 = ($51|0)==(0|0);
    if ($52) {
     $$pre$i3$i$i19 = 0;$66 = 1;
    } else {
     $53 = ((($51)) + 12|0);
     $54 = HEAP32[$53>>2]|0;
     $55 = ((($51)) + 16|0);
     $56 = HEAP32[$55>>2]|0;
     $57 = ($54|0)==($56|0);
     if ($57) {
      $58 = HEAP32[$51>>2]|0;
      $59 = ((($58)) + 36|0);
      $60 = HEAP32[$59>>2]|0;
      __THREW__ = 0;
      $61 = (invoke_ii($60|0,($51|0))|0);
      $62 = __THREW__; __THREW__ = 0;
      $63 = $62&1;
      if ($63) {
       label = 5;
       break;
      } else {
       $$0$i$i1$i$i = $61;
      }
     } else {
      $64 = HEAP32[$54>>2]|0;
      $$0$i$i1$i$i = $64;
     }
     $65 = ($$0$i$i1$i$i|0)==(-1);
     if ($65) {
      HEAP32[$__e>>2] = 0;
      $$pre$i3$i$i19 = 0;$66 = 1;
     } else {
      $$pre$i3$i$i19 = $51;$66 = 0;
     }
    }
    $tmp$i$i = $67 ^ $66;
    $68 = ($__n_might_match$2|0)!=(0);
    $69 = $68 & $tmp$i$i;
    $70 = HEAP32[$__b>>2]|0;
    if (!($69)) {
     $$lcssa = $70;$$pre$i3$i$i19$lcssa = $$pre$i3$i$i19;
     label = 66;
     break;
    }
    $71 = ((($70)) + 12|0);
    $72 = HEAP32[$71>>2]|0;
    $73 = ((($70)) + 16|0);
    $74 = HEAP32[$73>>2]|0;
    $75 = ($72|0)==($74|0);
    if ($75) {
     $76 = HEAP32[$70>>2]|0;
     $77 = ((($76)) + 36|0);
     $78 = HEAP32[$77>>2]|0;
     __THREW__ = 0;
     $79 = (invoke_ii($78|0,($70|0))|0);
     $80 = __THREW__; __THREW__ = 0;
     $81 = $80&1;
     if ($81) {
      label = 5;
      break;
     } else {
      $$0$i$i = $79;
     }
    } else {
     $82 = HEAP32[$72>>2]|0;
     $$0$i$i = $82;
    }
    if ($__case_sensitive) {
     $__c$0 = $$0$i$i;
    } else {
     $83 = HEAP32[$__ct>>2]|0;
     $84 = ((($83)) + 28|0);
     $85 = HEAP32[$84>>2]|0;
     __THREW__ = 0;
     $86 = (invoke_iii($85|0,($__ct|0),($$0$i$i|0))|0);
     $87 = __THREW__; __THREW__ = 0;
     $88 = $87&1;
     if ($88) {
      label = 5;
      break;
     } else {
      $__c$0 = $86;
     }
    }
    $89 = (($__indx$0) + 1)|0;
    if ($20) {
     $__consume$0$off0$lcssa = 0;$__n_does_match$3$lcssa = $__n_does_match$2;$__n_might_match$3$lcssa = $__n_might_match$2;
    } else {
     $__consume$0$off086 = 0;$__ky1$087 = $__kb;$__n_does_match$383 = $__n_does_match$2;$__n_might_match$382 = $__n_might_match$2;$__st$184 = $__status$0;
     while(1) {
      $90 = HEAP8[$__st$184>>0]|0;
      $91 = ($90<<24>>24)==(1);
      do {
       if ($91) {
        $92 = HEAP8[$__ky1$087>>0]|0;
        $93 = $92 & 1;
        $94 = ($93<<24>>24)==(0);
        if ($94) {
         $97 = ((($__ky1$087)) + 4|0);
         $99 = $97;
        } else {
         $95 = ((($__ky1$087)) + 8|0);
         $96 = HEAP32[$95>>2]|0;
         $99 = $96;
        }
        $98 = (($99) + ($__indx$0<<2)|0);
        $100 = HEAP32[$98>>2]|0;
        if ($__case_sensitive) {
         $__kc$0 = $100;
        } else {
         $101 = HEAP32[$__ct>>2]|0;
         $102 = ((($101)) + 28|0);
         $103 = HEAP32[$102>>2]|0;
         __THREW__ = 0;
         $104 = (invoke_iii($103|0,($__ct|0),($100|0))|0);
         $105 = __THREW__; __THREW__ = 0;
         $106 = $105&1;
         if ($106) {
          label = 4;
          break L20;
         } else {
          $__kc$0 = $104;
         }
        }
        $107 = ($__c$0|0)==($__kc$0|0);
        if (!($107)) {
         HEAP8[$__st$184>>0] = 0;
         $119 = (($__n_might_match$382) + -1)|0;
         $__consume$1$off0 = $__consume$0$off086;$__n_does_match$4 = $__n_does_match$383;$__n_might_match$4 = $119;
         break;
        }
        $108 = HEAP8[$__ky1$087>>0]|0;
        $109 = $108 & 1;
        $110 = ($109<<24>>24)==(0);
        if ($110) {
         $113 = $108&255;
         $114 = $113 >>> 1;
         $115 = $114;
        } else {
         $111 = ((($__ky1$087)) + 4|0);
         $112 = HEAP32[$111>>2]|0;
         $115 = $112;
        }
        $116 = ($115|0)==($89|0);
        if ($116) {
         HEAP8[$__st$184>>0] = 2;
         $117 = (($__n_might_match$382) + -1)|0;
         $118 = (($__n_does_match$383) + 1)|0;
         $__consume$1$off0 = 1;$__n_does_match$4 = $118;$__n_might_match$4 = $117;
        } else {
         $__consume$1$off0 = 1;$__n_does_match$4 = $__n_does_match$383;$__n_might_match$4 = $__n_might_match$382;
        }
       } else {
        $__consume$1$off0 = $__consume$0$off086;$__n_does_match$4 = $__n_does_match$383;$__n_might_match$4 = $__n_might_match$382;
       }
      } while(0);
      $120 = ((($__ky1$087)) + 12|0);
      $121 = ((($__st$184)) + 1|0);
      $122 = ($120|0)==($__ke|0);
      if ($122) {
       $__consume$0$off0$lcssa = $__consume$1$off0;$__n_does_match$3$lcssa = $__n_does_match$4;$__n_might_match$3$lcssa = $__n_might_match$4;
       break;
      } else {
       $__consume$0$off086 = $__consume$1$off0;$__ky1$087 = $120;$__n_does_match$383 = $__n_does_match$4;$__n_might_match$382 = $__n_might_match$4;$__st$184 = $121;
      }
     }
    }
    if (!($__consume$0$off0$lcssa)) {
     $__indx$0 = $89;$__n_does_match$2 = $__n_does_match$3$lcssa;$__n_might_match$2 = $__n_might_match$3$lcssa;
     continue;
    }
    $123 = HEAP32[$__b>>2]|0;
    $124 = ((($123)) + 12|0);
    $125 = HEAP32[$124>>2]|0;
    $126 = ((($123)) + 16|0);
    $127 = HEAP32[$126>>2]|0;
    $128 = ($125|0)==($127|0);
    if ($128) {
     $129 = HEAP32[$123>>2]|0;
     $130 = ((($129)) + 40|0);
     $131 = HEAP32[$130>>2]|0;
     __THREW__ = 0;
     (invoke_ii($131|0,($123|0))|0);
     $132 = __THREW__; __THREW__ = 0;
     $133 = $132&1;
     if ($133) {
      label = 5;
      break;
     }
    } else {
     $134 = ((($125)) + 4|0);
     HEAP32[$124>>2] = $134;
    }
    $135 = (($__n_does_match$3$lcssa) + ($__n_might_match$3$lcssa))|0;
    $136 = ($135>>>0)<(2);
    $or$cond = $136 | $21;
    if ($or$cond) {
     $__indx$0 = $89;$__n_does_match$2 = $__n_does_match$3$lcssa;$__n_might_match$2 = $__n_might_match$3$lcssa;
     continue;
    } else {
     $__ky2$094 = $__kb;$__n_does_match$592 = $__n_does_match$3$lcssa;$__st$293 = $__status$0;
    }
    while(1) {
     $137 = HEAP8[$__st$293>>0]|0;
     $138 = ($137<<24>>24)==(2);
     if ($138) {
      $139 = HEAP8[$__ky2$094>>0]|0;
      $140 = $139 & 1;
      $141 = ($140<<24>>24)==(0);
      if ($141) {
       $144 = $139&255;
       $145 = $144 >>> 1;
       $146 = $145;
      } else {
       $142 = ((($__ky2$094)) + 4|0);
       $143 = HEAP32[$142>>2]|0;
       $146 = $143;
      }
      $147 = ($146|0)==($89|0);
      if ($147) {
       $__n_does_match$6 = $__n_does_match$592;
      } else {
       HEAP8[$__st$293>>0] = 0;
       $148 = (($__n_does_match$592) + -1)|0;
       $__n_does_match$6 = $148;
      }
     } else {
      $__n_does_match$6 = $__n_does_match$592;
     }
     $149 = ((($__ky2$094)) + 12|0);
     $150 = ((($__st$293)) + 1|0);
     $151 = ($149|0)==($__ke|0);
     if ($151) {
      $__indx$0 = $89;$__n_does_match$2 = $__n_does_match$6;$__n_might_match$2 = $__n_might_match$3$lcssa;
      continue L20;
     } else {
      $__ky2$094 = $149;$__n_does_match$592 = $__n_does_match$6;$__st$293 = $150;
     }
    }
   }
   if ((label|0) == 4) {
    $9 = ___cxa_find_matching_catch()|0;
    $10 = tempRet0;
    $15 = $190;$lpad$phi$index = $9;$lpad$phi$index3 = $10;
    break;
   }
   else if ((label|0) == 5) {
    $11 = ___cxa_find_matching_catch()|0;
    $12 = tempRet0;
    $15 = $190;$lpad$phi$index = $11;$lpad$phi$index3 = $12;
    break;
   }
   else if ((label|0) == 66) {
    $152 = ($$lcssa|0)==(0|0);
    do {
     if ($152) {
      $193 = 1;
     } else {
      $153 = ((($$lcssa)) + 12|0);
      $154 = HEAP32[$153>>2]|0;
      $155 = ((($$lcssa)) + 16|0);
      $156 = HEAP32[$155>>2]|0;
      $157 = ($154|0)==($156|0);
      if ($157) {
       $158 = HEAP32[$$lcssa>>2]|0;
       $159 = ((($158)) + 36|0);
       $160 = HEAP32[$159>>2]|0;
       __THREW__ = 0;
       $161 = (invoke_ii($160|0,($$lcssa|0))|0);
       $162 = __THREW__; __THREW__ = 0;
       $163 = $162&1;
       if ($163) {
        $$ph$ph = $190;
        label = 6;
        break L6;
       } else {
        $$0$i$i$i$i11 = $161;
       }
      } else {
       $164 = HEAP32[$154>>2]|0;
       $$0$i$i$i$i11 = $164;
      }
      $165 = ($$0$i$i$i$i11|0)==(-1);
      if ($165) {
       HEAP32[$__b>>2] = 0;
       $193 = 1;
       break;
      } else {
       $$pre$i$i$i13 = HEAP32[$__b>>2]|0;
       $phitmp$i$i$i14 = ($$pre$i$i$i13|0)==(0|0);
       $193 = $phitmp$i$i$i14;
       break;
      }
     }
    } while(0);
    $166 = ($$pre$i3$i$i19$lcssa|0)==(0|0);
    do {
     if ($166) {
      label = 79;
     } else {
      $167 = ((($$pre$i3$i$i19$lcssa)) + 12|0);
      $168 = HEAP32[$167>>2]|0;
      $169 = ((($$pre$i3$i$i19$lcssa)) + 16|0);
      $170 = HEAP32[$169>>2]|0;
      $171 = ($168|0)==($170|0);
      if ($171) {
       $172 = HEAP32[$$pre$i3$i$i19$lcssa>>2]|0;
       $173 = ((($172)) + 36|0);
       $174 = HEAP32[$173>>2]|0;
       __THREW__ = 0;
       $175 = (invoke_ii($174|0,($$pre$i3$i$i19$lcssa|0))|0);
       $176 = __THREW__; __THREW__ = 0;
       $177 = $176&1;
       if ($177) {
        $$ph$ph = $190;
        label = 6;
        break L6;
       } else {
        $$0$i$i1$i$i17 = $175;
       }
      } else {
       $178 = HEAP32[$168>>2]|0;
       $$0$i$i1$i$i17 = $178;
      }
      $179 = ($$0$i$i1$i$i17|0)==(-1);
      if ($179) {
       HEAP32[$__e>>2] = 0;
       label = 79;
       break;
      } else {
       if ($193) {
        break;
       } else {
        label = 81;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 79) {
     if ($193) {
      label = 81;
     }
    }
    if ((label|0) == 81) {
     $180 = HEAP32[$__err>>2]|0;
     $181 = $180 | 2;
     HEAP32[$__err>>2] = $181;
    }
    $182 = ($__kb|0)==($__ke|0);
    L113: do {
     if ($182) {
      label = 85;
     } else {
      $$081 = $__kb;$__st$380 = $__status$0;
      while(1) {
       $183 = HEAP8[$__st$380>>0]|0;
       $184 = ($183<<24>>24)==(2);
       if ($184) {
        $$044 = $$081;
        break L113;
       }
       $185 = ((($$081)) + 12|0);
       $186 = ((($__st$380)) + 1|0);
       $187 = ($185|0)==($__ke|0);
       if ($187) {
        label = 85;
        break;
       } else {
        $$081 = $185;$__st$380 = $186;
       }
      }
     }
    } while(0);
    if ((label|0) == 85) {
     $188 = HEAP32[$__err>>2]|0;
     $189 = $188 | 4;
     HEAP32[$__err>>2] = $189;
     $$044 = $__ke;
    }
    $191 = ($190|0)==(0);
    if (!($191)) {
     $192 = $190;
     _free($192);
    }
    STACKTOP = sp;return ($$044|0);
   }
  }
 } while(0);
 if ((label|0) == 6) {
  $13 = ___cxa_find_matching_catch()|0;
  $14 = tempRet0;
  $15 = $$ph$ph;$lpad$phi$index = $13;$lpad$phi$index3 = $14;
 }
 $16 = ($15|0)==(0);
 if (!($16)) {
  $17 = $15;
  _free($17);
 }
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $lpad$phi$index = 0;
 var $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i23 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(456,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L4: do {
  if ($10) {
   label = 26;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   $14 = ((($__buf)) + 8|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = ((($__buf)) + 1|0);
   $17 = $13 ? $16 : $15;
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = ((($__buf)) + 4|0);
   $19 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $17;
   L6: while(1) {
    $20 = ($$pre$i$i$i5|0)==(0|0);
    if ($20) {
     $$pre$i$i$i = 0;$155 = 1;
    } else {
     $21 = ((($$pre$i$i$i5)) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = ((($$pre$i$i$i5)) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i5>>2]|0;
      $27 = ((($26)) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i5|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 25;
       break;
      } else {
       $$0$i$i$i$i3 = $29;
      }
     } else {
      $32 = HEAP32[$22>>2]|0;
      $$0$i$i$i$i3 = $32;
     }
     $33 = ($$0$i$i$i$i3|0)==(-1);
     if ($33) {
      HEAP32[$__b>>2] = 0;
      $$pre$i$i$i = 0;$155 = 1;
     } else {
      $$pre$i$i$i = $$pre$i$i$i5;$155 = 0;
     }
    }
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 17;
     } else {
      $36 = ((($34)) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = ((($34)) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if ($40) {
       $41 = HEAP32[$34>>2]|0;
       $42 = ((($41)) + 36|0);
       $43 = HEAP32[$42>>2]|0;
       __THREW__ = 0;
       $44 = (invoke_ii($43|0,($34|0))|0);
       $45 = __THREW__; __THREW__ = 0;
       $46 = $45&1;
       if ($46) {
        label = 25;
        break L6;
       } else {
        $$0$i$i1$i$i9 = $44;
       }
      } else {
       $47 = HEAP32[$37>>2]|0;
       $$0$i$i1$i$i9 = $47;
      }
      $48 = ($$0$i$i1$i$i9|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 17;
       break;
      } else {
       if ($155) {
        $156 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
     }
    } while(0);
    if ((label|0) == 17) {
     label = 0;
     if ($155) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $156 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    $53 = HEAP32[$18>>2]|0;
    $54 = $50&255;
    $55 = $54 >>> 1;
    $56 = $52 ? $55 : $53;
    $57 = (($__a$0) + ($56)|0);
    $58 = ($49|0)==($57|0);
    if ($58) {
     $59 = $56 << 1;
     __THREW__ = 0;
     invoke_viii(456,($__buf|0),($59|0),0);
     $60 = __THREW__; __THREW__ = 0;
     $61 = $60&1;
     if ($61) {
      label = 25;
      break;
     }
     $62 = HEAP8[$__buf>>0]|0;
     $63 = $62 & 1;
     $64 = ($63<<24>>24)==(0);
     if ($64) {
      $67 = 10;
     } else {
      $65 = HEAP32[$__buf>>2]|0;
      $66 = $65 & -2;
      $phitmp$i23 = (($66) + -1)|0;
      $67 = $phitmp$i23;
     }
     __THREW__ = 0;
     invoke_viii(456,($__buf|0),($67|0),0);
     $68 = __THREW__; __THREW__ = 0;
     $69 = $68&1;
     if ($69) {
      label = 25;
      break;
     }
     $70 = HEAP8[$__buf>>0]|0;
     $71 = $70 & 1;
     $72 = ($71<<24>>24)==(0);
     $73 = HEAP32[$14>>2]|0;
     $74 = $72 ? $16 : $73;
     $75 = (($74) + ($56)|0);
     HEAP32[$__a_end>>2] = $75;
     $__a$1 = $74;
    } else {
     $__a$1 = $__a$0;
    }
    $80 = ((($$pre$i$i$i)) + 12|0);
    $81 = HEAP32[$80>>2]|0;
    $82 = ((($$pre$i$i$i)) + 16|0);
    $83 = HEAP32[$82>>2]|0;
    $84 = ($81|0)==($83|0);
    if ($84) {
     $85 = HEAP32[$$pre$i$i$i>>2]|0;
     $86 = ((($85)) + 36|0);
     $87 = HEAP32[$86>>2]|0;
     __THREW__ = 0;
     $88 = (invoke_ii($87|0,($$pre$i$i$i|0))|0);
     $89 = __THREW__; __THREW__ = 0;
     $90 = $89&1;
     if ($90) {
      label = 25;
      break;
     } else {
      $$0$i$i = $88;
     }
    } else {
     $91 = HEAP32[$81>>2]|0;
     $$0$i$i = $91;
    }
    $92 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $93 = ($92|0)==(0);
    if (!($93)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $156;$__a$2 = $__a$1;
     break;
    }
    $94 = HEAP32[$80>>2]|0;
    $95 = HEAP32[$82>>2]|0;
    $96 = ($94|0)==($95|0);
    if ($96) {
     $97 = HEAP32[$$pre$i$i$i>>2]|0;
     $98 = ((($97)) + 40|0);
     $99 = HEAP32[$98>>2]|0;
     __THREW__ = 0;
     (invoke_ii($99|0,($$pre$i$i$i|0))|0);
     $100 = __THREW__; __THREW__ = 0;
     $101 = $100&1;
     if ($101) {
      label = 25;
      break;
     } else {
      $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $102 = ((($94)) + 4|0);
     HEAP32[$80>>2] = $102;
     $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 25) {
    $76 = ___cxa_find_matching_catch()|0;
    $77 = tempRet0;
    $lpad$phi$index = $76;$lpad$phi$index2 = $77;
    break;
   }
   $103 = HEAP8[$__grouping>>0]|0;
   $104 = $103 & 1;
   $105 = ($104<<24>>24)==(0);
   $106 = ((($__grouping)) + 4|0);
   $107 = HEAP32[$106>>2]|0;
   $108 = $103&255;
   $109 = $108 >>> 1;
   $110 = $105 ? $109 : $107;
   $111 = ($110|0)==(0);
   if (!($111)) {
    $112 = HEAP32[$__g_end>>2]|0;
    $113 = $112;
    $114 = $__g;
    $115 = (($113) - ($114))|0;
    $116 = ($115|0)<(160);
    if ($116) {
     $117 = HEAP32[$__dc>>2]|0;
     $118 = ((($112)) + 4|0);
     HEAP32[$__g_end>>2] = $118;
     HEAP32[$112>>2] = $117;
    }
   }
   $119 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $120 = (invoke_iiiii(543,($__a$2|0),($119|0),($__err|0),($0|0))|0);
   $121 = __THREW__; __THREW__ = 0;
   $122 = $121&1;
   if ($122) {
    label = 26;
   } else {
    HEAP32[$__v>>2] = $120;
    $123 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$123,$__err);
    $124 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($124) {
     $157 = 1;
    } else {
     $125 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $126 = HEAP32[$125>>2]|0;
     $127 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $128 = HEAP32[$127>>2]|0;
     $129 = ($126|0)==($128|0);
     if ($129) {
      $130 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $131 = ((($130)) + 36|0);
      $132 = HEAP32[$131>>2]|0;
      __THREW__ = 0;
      $133 = (invoke_ii($132|0,($$pre$i$i$i$lcssa|0))|0);
      $134 = __THREW__; __THREW__ = 0;
      $135 = $134&1;
      if ($135) {
       label = 26;
       break;
      } else {
       $$0$i$i$i$i = $133;
      }
     } else {
      $136 = HEAP32[$126>>2]|0;
      $$0$i$i$i$i = $136;
     }
     $137 = ($$0$i$i$i$i|0)==(-1);
     if ($137) {
      HEAP32[$__b>>2] = 0;
      $157 = 1;
     } else {
      $157 = 0;
     }
    }
    $138 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($138) {
      label = 51;
     } else {
      $139 = ((($$pre$i3$i$i)) + 12|0);
      $140 = HEAP32[$139>>2]|0;
      $141 = ((($$pre$i3$i$i)) + 16|0);
      $142 = HEAP32[$141>>2]|0;
      $143 = ($140|0)==($142|0);
      if ($143) {
       $144 = HEAP32[$$pre$i3$i$i>>2]|0;
       $145 = ((($144)) + 36|0);
       $146 = HEAP32[$145>>2]|0;
       __THREW__ = 0;
       $147 = (invoke_ii($146|0,($$pre$i3$i$i|0))|0);
       $148 = __THREW__; __THREW__ = 0;
       $149 = $148&1;
       if ($149) {
        label = 26;
        break L4;
       } else {
        $$0$i$i1$i$i = $147;
       }
      } else {
       $150 = HEAP32[$140>>2]|0;
       $$0$i$i1$i$i = $150;
      }
      $151 = ($$0$i$i1$i$i|0)==(-1);
      if ($151) {
       HEAP32[$__e>>2] = 0;
       label = 51;
       break;
      } else {
       if ($157) {
        break;
       } else {
        label = 53;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 51) {
     if ($157) {
      label = 53;
     }
    }
    if ((label|0) == 53) {
     $152 = HEAP32[$__err>>2]|0;
     $153 = $152 | 2;
     HEAP32[$__err>>2] = $153;
    }
    $154 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($154|0);
   }
  }
 } while(0);
 if ((label|0) == 26) {
  $78 = ___cxa_find_matching_catch()|0;
  $79 = tempRet0;
  $lpad$phi$index = $78;$lpad$phi$index2 = $79;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0;
 var $161 = 0, $162 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0;
 var $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i23 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(456,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L4: do {
  if ($10) {
   label = 26;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   $14 = ((($__buf)) + 8|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = ((($__buf)) + 1|0);
   $17 = $13 ? $16 : $15;
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = ((($__buf)) + 4|0);
   $19 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $17;
   L6: while(1) {
    $20 = ($$pre$i$i$i5|0)==(0|0);
    if ($20) {
     $$pre$i$i$i = 0;$160 = 1;
    } else {
     $21 = ((($$pre$i$i$i5)) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = ((($$pre$i$i$i5)) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i5>>2]|0;
      $27 = ((($26)) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i5|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 25;
       break;
      } else {
       $$0$i$i$i$i3 = $29;
      }
     } else {
      $32 = HEAP32[$22>>2]|0;
      $$0$i$i$i$i3 = $32;
     }
     $33 = ($$0$i$i$i$i3|0)==(-1);
     if ($33) {
      HEAP32[$__b>>2] = 0;
      $$pre$i$i$i = 0;$160 = 1;
     } else {
      $$pre$i$i$i = $$pre$i$i$i5;$160 = 0;
     }
    }
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 17;
     } else {
      $36 = ((($34)) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = ((($34)) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if ($40) {
       $41 = HEAP32[$34>>2]|0;
       $42 = ((($41)) + 36|0);
       $43 = HEAP32[$42>>2]|0;
       __THREW__ = 0;
       $44 = (invoke_ii($43|0,($34|0))|0);
       $45 = __THREW__; __THREW__ = 0;
       $46 = $45&1;
       if ($46) {
        label = 25;
        break L6;
       } else {
        $$0$i$i1$i$i9 = $44;
       }
      } else {
       $47 = HEAP32[$37>>2]|0;
       $$0$i$i1$i$i9 = $47;
      }
      $48 = ($$0$i$i1$i$i9|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 17;
       break;
      } else {
       if ($160) {
        $161 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
     }
    } while(0);
    if ((label|0) == 17) {
     label = 0;
     if ($160) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $161 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    $53 = HEAP32[$18>>2]|0;
    $54 = $50&255;
    $55 = $54 >>> 1;
    $56 = $52 ? $55 : $53;
    $57 = (($__a$0) + ($56)|0);
    $58 = ($49|0)==($57|0);
    if ($58) {
     $59 = $56 << 1;
     __THREW__ = 0;
     invoke_viii(456,($__buf|0),($59|0),0);
     $60 = __THREW__; __THREW__ = 0;
     $61 = $60&1;
     if ($61) {
      label = 25;
      break;
     }
     $62 = HEAP8[$__buf>>0]|0;
     $63 = $62 & 1;
     $64 = ($63<<24>>24)==(0);
     if ($64) {
      $67 = 10;
     } else {
      $65 = HEAP32[$__buf>>2]|0;
      $66 = $65 & -2;
      $phitmp$i23 = (($66) + -1)|0;
      $67 = $phitmp$i23;
     }
     __THREW__ = 0;
     invoke_viii(456,($__buf|0),($67|0),0);
     $68 = __THREW__; __THREW__ = 0;
     $69 = $68&1;
     if ($69) {
      label = 25;
      break;
     }
     $70 = HEAP8[$__buf>>0]|0;
     $71 = $70 & 1;
     $72 = ($71<<24>>24)==(0);
     $73 = HEAP32[$14>>2]|0;
     $74 = $72 ? $16 : $73;
     $75 = (($74) + ($56)|0);
     HEAP32[$__a_end>>2] = $75;
     $__a$1 = $74;
    } else {
     $__a$1 = $__a$0;
    }
    $80 = ((($$pre$i$i$i)) + 12|0);
    $81 = HEAP32[$80>>2]|0;
    $82 = ((($$pre$i$i$i)) + 16|0);
    $83 = HEAP32[$82>>2]|0;
    $84 = ($81|0)==($83|0);
    if ($84) {
     $85 = HEAP32[$$pre$i$i$i>>2]|0;
     $86 = ((($85)) + 36|0);
     $87 = HEAP32[$86>>2]|0;
     __THREW__ = 0;
     $88 = (invoke_ii($87|0,($$pre$i$i$i|0))|0);
     $89 = __THREW__; __THREW__ = 0;
     $90 = $89&1;
     if ($90) {
      label = 25;
      break;
     } else {
      $$0$i$i = $88;
     }
    } else {
     $91 = HEAP32[$81>>2]|0;
     $$0$i$i = $91;
    }
    $92 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $93 = ($92|0)==(0);
    if (!($93)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $161;$__a$2 = $__a$1;
     break;
    }
    $94 = HEAP32[$80>>2]|0;
    $95 = HEAP32[$82>>2]|0;
    $96 = ($94|0)==($95|0);
    if ($96) {
     $97 = HEAP32[$$pre$i$i$i>>2]|0;
     $98 = ((($97)) + 40|0);
     $99 = HEAP32[$98>>2]|0;
     __THREW__ = 0;
     (invoke_ii($99|0,($$pre$i$i$i|0))|0);
     $100 = __THREW__; __THREW__ = 0;
     $101 = $100&1;
     if ($101) {
      label = 25;
      break;
     } else {
      $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $102 = ((($94)) + 4|0);
     HEAP32[$80>>2] = $102;
     $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 25) {
    $76 = ___cxa_find_matching_catch()|0;
    $77 = tempRet0;
    $lpad$phi$index = $76;$lpad$phi$index2 = $77;
    break;
   }
   $103 = HEAP8[$__grouping>>0]|0;
   $104 = $103 & 1;
   $105 = ($104<<24>>24)==(0);
   $106 = ((($__grouping)) + 4|0);
   $107 = HEAP32[$106>>2]|0;
   $108 = $103&255;
   $109 = $108 >>> 1;
   $110 = $105 ? $109 : $107;
   $111 = ($110|0)==(0);
   if (!($111)) {
    $112 = HEAP32[$__g_end>>2]|0;
    $113 = $112;
    $114 = $__g;
    $115 = (($113) - ($114))|0;
    $116 = ($115|0)<(160);
    if ($116) {
     $117 = HEAP32[$__dc>>2]|0;
     $118 = ((($112)) + 4|0);
     HEAP32[$__g_end>>2] = $118;
     HEAP32[$112>>2] = $117;
    }
   }
   $119 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $120 = (invoke_iiiii(544,($__a$2|0),($119|0),($__err|0),($0|0))|0);
   $121 = tempRet0;
   $122 = __THREW__; __THREW__ = 0;
   $123 = $122&1;
   if ($123) {
    label = 26;
   } else {
    $124 = $__v;
    $125 = $124;
    HEAP32[$125>>2] = $120;
    $126 = (($124) + 4)|0;
    $127 = $126;
    HEAP32[$127>>2] = $121;
    $128 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$128,$__err);
    $129 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($129) {
     $162 = 1;
    } else {
     $130 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $131 = HEAP32[$130>>2]|0;
     $132 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $133 = HEAP32[$132>>2]|0;
     $134 = ($131|0)==($133|0);
     if ($134) {
      $135 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $136 = ((($135)) + 36|0);
      $137 = HEAP32[$136>>2]|0;
      __THREW__ = 0;
      $138 = (invoke_ii($137|0,($$pre$i$i$i$lcssa|0))|0);
      $139 = __THREW__; __THREW__ = 0;
      $140 = $139&1;
      if ($140) {
       label = 26;
       break;
      } else {
       $$0$i$i$i$i = $138;
      }
     } else {
      $141 = HEAP32[$131>>2]|0;
      $$0$i$i$i$i = $141;
     }
     $142 = ($$0$i$i$i$i|0)==(-1);
     if ($142) {
      HEAP32[$__b>>2] = 0;
      $162 = 1;
     } else {
      $162 = 0;
     }
    }
    $143 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($143) {
      label = 51;
     } else {
      $144 = ((($$pre$i3$i$i)) + 12|0);
      $145 = HEAP32[$144>>2]|0;
      $146 = ((($$pre$i3$i$i)) + 16|0);
      $147 = HEAP32[$146>>2]|0;
      $148 = ($145|0)==($147|0);
      if ($148) {
       $149 = HEAP32[$$pre$i3$i$i>>2]|0;
       $150 = ((($149)) + 36|0);
       $151 = HEAP32[$150>>2]|0;
       __THREW__ = 0;
       $152 = (invoke_ii($151|0,($$pre$i3$i$i|0))|0);
       $153 = __THREW__; __THREW__ = 0;
       $154 = $153&1;
       if ($154) {
        label = 26;
        break L4;
       } else {
        $$0$i$i1$i$i = $152;
       }
      } else {
       $155 = HEAP32[$145>>2]|0;
       $$0$i$i1$i$i = $155;
      }
      $156 = ($$0$i$i1$i$i|0)==(-1);
      if ($156) {
       HEAP32[$__e>>2] = 0;
       label = 51;
       break;
      } else {
       if ($162) {
        break;
       } else {
        label = 53;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 51) {
     if ($162) {
      label = 53;
     }
    }
    if ((label|0) == 53) {
     $157 = HEAP32[$__err>>2]|0;
     $158 = $157 | 2;
     HEAP32[$__err>>2] = $158;
    }
    $159 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($159|0);
   }
  }
 } while(0);
 if ((label|0) == 26) {
  $78 = ___cxa_find_matching_catch()|0;
  $79 = tempRet0;
  $lpad$phi$index = $78;$lpad$phi$index2 = $79;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $lpad$phi$index = 0;
 var $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i23 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(456,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L4: do {
  if ($10) {
   label = 26;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   $14 = ((($__buf)) + 8|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = ((($__buf)) + 1|0);
   $17 = $13 ? $16 : $15;
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = ((($__buf)) + 4|0);
   $19 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $17;
   L6: while(1) {
    $20 = ($$pre$i$i$i5|0)==(0|0);
    if ($20) {
     $$pre$i$i$i = 0;$155 = 1;
    } else {
     $21 = ((($$pre$i$i$i5)) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = ((($$pre$i$i$i5)) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i5>>2]|0;
      $27 = ((($26)) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i5|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 25;
       break;
      } else {
       $$0$i$i$i$i3 = $29;
      }
     } else {
      $32 = HEAP32[$22>>2]|0;
      $$0$i$i$i$i3 = $32;
     }
     $33 = ($$0$i$i$i$i3|0)==(-1);
     if ($33) {
      HEAP32[$__b>>2] = 0;
      $$pre$i$i$i = 0;$155 = 1;
     } else {
      $$pre$i$i$i = $$pre$i$i$i5;$155 = 0;
     }
    }
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 17;
     } else {
      $36 = ((($34)) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = ((($34)) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if ($40) {
       $41 = HEAP32[$34>>2]|0;
       $42 = ((($41)) + 36|0);
       $43 = HEAP32[$42>>2]|0;
       __THREW__ = 0;
       $44 = (invoke_ii($43|0,($34|0))|0);
       $45 = __THREW__; __THREW__ = 0;
       $46 = $45&1;
       if ($46) {
        label = 25;
        break L6;
       } else {
        $$0$i$i1$i$i9 = $44;
       }
      } else {
       $47 = HEAP32[$37>>2]|0;
       $$0$i$i1$i$i9 = $47;
      }
      $48 = ($$0$i$i1$i$i9|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 17;
       break;
      } else {
       if ($155) {
        $156 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
     }
    } while(0);
    if ((label|0) == 17) {
     label = 0;
     if ($155) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $156 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    $53 = HEAP32[$18>>2]|0;
    $54 = $50&255;
    $55 = $54 >>> 1;
    $56 = $52 ? $55 : $53;
    $57 = (($__a$0) + ($56)|0);
    $58 = ($49|0)==($57|0);
    if ($58) {
     $59 = $56 << 1;
     __THREW__ = 0;
     invoke_viii(456,($__buf|0),($59|0),0);
     $60 = __THREW__; __THREW__ = 0;
     $61 = $60&1;
     if ($61) {
      label = 25;
      break;
     }
     $62 = HEAP8[$__buf>>0]|0;
     $63 = $62 & 1;
     $64 = ($63<<24>>24)==(0);
     if ($64) {
      $67 = 10;
     } else {
      $65 = HEAP32[$__buf>>2]|0;
      $66 = $65 & -2;
      $phitmp$i23 = (($66) + -1)|0;
      $67 = $phitmp$i23;
     }
     __THREW__ = 0;
     invoke_viii(456,($__buf|0),($67|0),0);
     $68 = __THREW__; __THREW__ = 0;
     $69 = $68&1;
     if ($69) {
      label = 25;
      break;
     }
     $70 = HEAP8[$__buf>>0]|0;
     $71 = $70 & 1;
     $72 = ($71<<24>>24)==(0);
     $73 = HEAP32[$14>>2]|0;
     $74 = $72 ? $16 : $73;
     $75 = (($74) + ($56)|0);
     HEAP32[$__a_end>>2] = $75;
     $__a$1 = $74;
    } else {
     $__a$1 = $__a$0;
    }
    $80 = ((($$pre$i$i$i)) + 12|0);
    $81 = HEAP32[$80>>2]|0;
    $82 = ((($$pre$i$i$i)) + 16|0);
    $83 = HEAP32[$82>>2]|0;
    $84 = ($81|0)==($83|0);
    if ($84) {
     $85 = HEAP32[$$pre$i$i$i>>2]|0;
     $86 = ((($85)) + 36|0);
     $87 = HEAP32[$86>>2]|0;
     __THREW__ = 0;
     $88 = (invoke_ii($87|0,($$pre$i$i$i|0))|0);
     $89 = __THREW__; __THREW__ = 0;
     $90 = $89&1;
     if ($90) {
      label = 25;
      break;
     } else {
      $$0$i$i = $88;
     }
    } else {
     $91 = HEAP32[$81>>2]|0;
     $$0$i$i = $91;
    }
    $92 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $93 = ($92|0)==(0);
    if (!($93)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $156;$__a$2 = $__a$1;
     break;
    }
    $94 = HEAP32[$80>>2]|0;
    $95 = HEAP32[$82>>2]|0;
    $96 = ($94|0)==($95|0);
    if ($96) {
     $97 = HEAP32[$$pre$i$i$i>>2]|0;
     $98 = ((($97)) + 40|0);
     $99 = HEAP32[$98>>2]|0;
     __THREW__ = 0;
     (invoke_ii($99|0,($$pre$i$i$i|0))|0);
     $100 = __THREW__; __THREW__ = 0;
     $101 = $100&1;
     if ($101) {
      label = 25;
      break;
     } else {
      $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $102 = ((($94)) + 4|0);
     HEAP32[$80>>2] = $102;
     $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 25) {
    $76 = ___cxa_find_matching_catch()|0;
    $77 = tempRet0;
    $lpad$phi$index = $76;$lpad$phi$index2 = $77;
    break;
   }
   $103 = HEAP8[$__grouping>>0]|0;
   $104 = $103 & 1;
   $105 = ($104<<24>>24)==(0);
   $106 = ((($__grouping)) + 4|0);
   $107 = HEAP32[$106>>2]|0;
   $108 = $103&255;
   $109 = $108 >>> 1;
   $110 = $105 ? $109 : $107;
   $111 = ($110|0)==(0);
   if (!($111)) {
    $112 = HEAP32[$__g_end>>2]|0;
    $113 = $112;
    $114 = $__g;
    $115 = (($113) - ($114))|0;
    $116 = ($115|0)<(160);
    if ($116) {
     $117 = HEAP32[$__dc>>2]|0;
     $118 = ((($112)) + 4|0);
     HEAP32[$__g_end>>2] = $118;
     HEAP32[$112>>2] = $117;
    }
   }
   $119 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $120 = (invoke_iiiii(545,($__a$2|0),($119|0),($__err|0),($0|0))|0);
   $121 = __THREW__; __THREW__ = 0;
   $122 = $121&1;
   if ($122) {
    label = 26;
   } else {
    HEAP16[$__v>>1] = $120;
    $123 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$123,$__err);
    $124 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($124) {
     $157 = 1;
    } else {
     $125 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $126 = HEAP32[$125>>2]|0;
     $127 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $128 = HEAP32[$127>>2]|0;
     $129 = ($126|0)==($128|0);
     if ($129) {
      $130 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $131 = ((($130)) + 36|0);
      $132 = HEAP32[$131>>2]|0;
      __THREW__ = 0;
      $133 = (invoke_ii($132|0,($$pre$i$i$i$lcssa|0))|0);
      $134 = __THREW__; __THREW__ = 0;
      $135 = $134&1;
      if ($135) {
       label = 26;
       break;
      } else {
       $$0$i$i$i$i = $133;
      }
     } else {
      $136 = HEAP32[$126>>2]|0;
      $$0$i$i$i$i = $136;
     }
     $137 = ($$0$i$i$i$i|0)==(-1);
     if ($137) {
      HEAP32[$__b>>2] = 0;
      $157 = 1;
     } else {
      $157 = 0;
     }
    }
    $138 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($138) {
      label = 51;
     } else {
      $139 = ((($$pre$i3$i$i)) + 12|0);
      $140 = HEAP32[$139>>2]|0;
      $141 = ((($$pre$i3$i$i)) + 16|0);
      $142 = HEAP32[$141>>2]|0;
      $143 = ($140|0)==($142|0);
      if ($143) {
       $144 = HEAP32[$$pre$i3$i$i>>2]|0;
       $145 = ((($144)) + 36|0);
       $146 = HEAP32[$145>>2]|0;
       __THREW__ = 0;
       $147 = (invoke_ii($146|0,($$pre$i3$i$i|0))|0);
       $148 = __THREW__; __THREW__ = 0;
       $149 = $148&1;
       if ($149) {
        label = 26;
        break L4;
       } else {
        $$0$i$i1$i$i = $147;
       }
      } else {
       $150 = HEAP32[$140>>2]|0;
       $$0$i$i1$i$i = $150;
      }
      $151 = ($$0$i$i1$i$i|0)==(-1);
      if ($151) {
       HEAP32[$__e>>2] = 0;
       label = 51;
       break;
      } else {
       if ($157) {
        break;
       } else {
        label = 53;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 51) {
     if ($157) {
      label = 53;
     }
    }
    if ((label|0) == 53) {
     $152 = HEAP32[$__err>>2]|0;
     $153 = $152 | 2;
     HEAP32[$__err>>2] = $153;
    }
    $154 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($154|0);
   }
  }
 } while(0);
 if ((label|0) == 26) {
  $78 = ___cxa_find_matching_catch()|0;
  $79 = tempRet0;
  $lpad$phi$index = $78;$lpad$phi$index2 = $79;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $lpad$phi$index = 0;
 var $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i23 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(456,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L4: do {
  if ($10) {
   label = 26;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   $14 = ((($__buf)) + 8|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = ((($__buf)) + 1|0);
   $17 = $13 ? $16 : $15;
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = ((($__buf)) + 4|0);
   $19 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $17;
   L6: while(1) {
    $20 = ($$pre$i$i$i5|0)==(0|0);
    if ($20) {
     $$pre$i$i$i = 0;$155 = 1;
    } else {
     $21 = ((($$pre$i$i$i5)) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = ((($$pre$i$i$i5)) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i5>>2]|0;
      $27 = ((($26)) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i5|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 25;
       break;
      } else {
       $$0$i$i$i$i3 = $29;
      }
     } else {
      $32 = HEAP32[$22>>2]|0;
      $$0$i$i$i$i3 = $32;
     }
     $33 = ($$0$i$i$i$i3|0)==(-1);
     if ($33) {
      HEAP32[$__b>>2] = 0;
      $$pre$i$i$i = 0;$155 = 1;
     } else {
      $$pre$i$i$i = $$pre$i$i$i5;$155 = 0;
     }
    }
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 17;
     } else {
      $36 = ((($34)) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = ((($34)) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if ($40) {
       $41 = HEAP32[$34>>2]|0;
       $42 = ((($41)) + 36|0);
       $43 = HEAP32[$42>>2]|0;
       __THREW__ = 0;
       $44 = (invoke_ii($43|0,($34|0))|0);
       $45 = __THREW__; __THREW__ = 0;
       $46 = $45&1;
       if ($46) {
        label = 25;
        break L6;
       } else {
        $$0$i$i1$i$i9 = $44;
       }
      } else {
       $47 = HEAP32[$37>>2]|0;
       $$0$i$i1$i$i9 = $47;
      }
      $48 = ($$0$i$i1$i$i9|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 17;
       break;
      } else {
       if ($155) {
        $156 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
     }
    } while(0);
    if ((label|0) == 17) {
     label = 0;
     if ($155) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $156 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    $53 = HEAP32[$18>>2]|0;
    $54 = $50&255;
    $55 = $54 >>> 1;
    $56 = $52 ? $55 : $53;
    $57 = (($__a$0) + ($56)|0);
    $58 = ($49|0)==($57|0);
    if ($58) {
     $59 = $56 << 1;
     __THREW__ = 0;
     invoke_viii(456,($__buf|0),($59|0),0);
     $60 = __THREW__; __THREW__ = 0;
     $61 = $60&1;
     if ($61) {
      label = 25;
      break;
     }
     $62 = HEAP8[$__buf>>0]|0;
     $63 = $62 & 1;
     $64 = ($63<<24>>24)==(0);
     if ($64) {
      $67 = 10;
     } else {
      $65 = HEAP32[$__buf>>2]|0;
      $66 = $65 & -2;
      $phitmp$i23 = (($66) + -1)|0;
      $67 = $phitmp$i23;
     }
     __THREW__ = 0;
     invoke_viii(456,($__buf|0),($67|0),0);
     $68 = __THREW__; __THREW__ = 0;
     $69 = $68&1;
     if ($69) {
      label = 25;
      break;
     }
     $70 = HEAP8[$__buf>>0]|0;
     $71 = $70 & 1;
     $72 = ($71<<24>>24)==(0);
     $73 = HEAP32[$14>>2]|0;
     $74 = $72 ? $16 : $73;
     $75 = (($74) + ($56)|0);
     HEAP32[$__a_end>>2] = $75;
     $__a$1 = $74;
    } else {
     $__a$1 = $__a$0;
    }
    $80 = ((($$pre$i$i$i)) + 12|0);
    $81 = HEAP32[$80>>2]|0;
    $82 = ((($$pre$i$i$i)) + 16|0);
    $83 = HEAP32[$82>>2]|0;
    $84 = ($81|0)==($83|0);
    if ($84) {
     $85 = HEAP32[$$pre$i$i$i>>2]|0;
     $86 = ((($85)) + 36|0);
     $87 = HEAP32[$86>>2]|0;
     __THREW__ = 0;
     $88 = (invoke_ii($87|0,($$pre$i$i$i|0))|0);
     $89 = __THREW__; __THREW__ = 0;
     $90 = $89&1;
     if ($90) {
      label = 25;
      break;
     } else {
      $$0$i$i = $88;
     }
    } else {
     $91 = HEAP32[$81>>2]|0;
     $$0$i$i = $91;
    }
    $92 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $93 = ($92|0)==(0);
    if (!($93)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $156;$__a$2 = $__a$1;
     break;
    }
    $94 = HEAP32[$80>>2]|0;
    $95 = HEAP32[$82>>2]|0;
    $96 = ($94|0)==($95|0);
    if ($96) {
     $97 = HEAP32[$$pre$i$i$i>>2]|0;
     $98 = ((($97)) + 40|0);
     $99 = HEAP32[$98>>2]|0;
     __THREW__ = 0;
     (invoke_ii($99|0,($$pre$i$i$i|0))|0);
     $100 = __THREW__; __THREW__ = 0;
     $101 = $100&1;
     if ($101) {
      label = 25;
      break;
     } else {
      $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $102 = ((($94)) + 4|0);
     HEAP32[$80>>2] = $102;
     $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 25) {
    $76 = ___cxa_find_matching_catch()|0;
    $77 = tempRet0;
    $lpad$phi$index = $76;$lpad$phi$index2 = $77;
    break;
   }
   $103 = HEAP8[$__grouping>>0]|0;
   $104 = $103 & 1;
   $105 = ($104<<24>>24)==(0);
   $106 = ((($__grouping)) + 4|0);
   $107 = HEAP32[$106>>2]|0;
   $108 = $103&255;
   $109 = $108 >>> 1;
   $110 = $105 ? $109 : $107;
   $111 = ($110|0)==(0);
   if (!($111)) {
    $112 = HEAP32[$__g_end>>2]|0;
    $113 = $112;
    $114 = $__g;
    $115 = (($113) - ($114))|0;
    $116 = ($115|0)<(160);
    if ($116) {
     $117 = HEAP32[$__dc>>2]|0;
     $118 = ((($112)) + 4|0);
     HEAP32[$__g_end>>2] = $118;
     HEAP32[$112>>2] = $117;
    }
   }
   $119 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $120 = (invoke_iiiii(546,($__a$2|0),($119|0),($__err|0),($0|0))|0);
   $121 = __THREW__; __THREW__ = 0;
   $122 = $121&1;
   if ($122) {
    label = 26;
   } else {
    HEAP32[$__v>>2] = $120;
    $123 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$123,$__err);
    $124 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($124) {
     $157 = 1;
    } else {
     $125 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $126 = HEAP32[$125>>2]|0;
     $127 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $128 = HEAP32[$127>>2]|0;
     $129 = ($126|0)==($128|0);
     if ($129) {
      $130 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $131 = ((($130)) + 36|0);
      $132 = HEAP32[$131>>2]|0;
      __THREW__ = 0;
      $133 = (invoke_ii($132|0,($$pre$i$i$i$lcssa|0))|0);
      $134 = __THREW__; __THREW__ = 0;
      $135 = $134&1;
      if ($135) {
       label = 26;
       break;
      } else {
       $$0$i$i$i$i = $133;
      }
     } else {
      $136 = HEAP32[$126>>2]|0;
      $$0$i$i$i$i = $136;
     }
     $137 = ($$0$i$i$i$i|0)==(-1);
     if ($137) {
      HEAP32[$__b>>2] = 0;
      $157 = 1;
     } else {
      $157 = 0;
     }
    }
    $138 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($138) {
      label = 51;
     } else {
      $139 = ((($$pre$i3$i$i)) + 12|0);
      $140 = HEAP32[$139>>2]|0;
      $141 = ((($$pre$i3$i$i)) + 16|0);
      $142 = HEAP32[$141>>2]|0;
      $143 = ($140|0)==($142|0);
      if ($143) {
       $144 = HEAP32[$$pre$i3$i$i>>2]|0;
       $145 = ((($144)) + 36|0);
       $146 = HEAP32[$145>>2]|0;
       __THREW__ = 0;
       $147 = (invoke_ii($146|0,($$pre$i3$i$i|0))|0);
       $148 = __THREW__; __THREW__ = 0;
       $149 = $148&1;
       if ($149) {
        label = 26;
        break L4;
       } else {
        $$0$i$i1$i$i = $147;
       }
      } else {
       $150 = HEAP32[$140>>2]|0;
       $$0$i$i1$i$i = $150;
      }
      $151 = ($$0$i$i1$i$i|0)==(-1);
      if ($151) {
       HEAP32[$__e>>2] = 0;
       label = 51;
       break;
      } else {
       if ($157) {
        break;
       } else {
        label = 53;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 51) {
     if ($157) {
      label = 53;
     }
    }
    if ((label|0) == 53) {
     $152 = HEAP32[$__err>>2]|0;
     $153 = $152 | 2;
     HEAP32[$__err>>2] = $153;
    }
    $154 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($154|0);
   }
  }
 } while(0);
 if ((label|0) == 26) {
  $78 = ___cxa_find_matching_catch()|0;
  $79 = tempRet0;
  $lpad$phi$index = $78;$lpad$phi$index2 = $79;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $lpad$phi$index = 0;
 var $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i23 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(456,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L4: do {
  if ($10) {
   label = 26;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   $14 = ((($__buf)) + 8|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = ((($__buf)) + 1|0);
   $17 = $13 ? $16 : $15;
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = ((($__buf)) + 4|0);
   $19 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $17;
   L6: while(1) {
    $20 = ($$pre$i$i$i5|0)==(0|0);
    if ($20) {
     $$pre$i$i$i = 0;$155 = 1;
    } else {
     $21 = ((($$pre$i$i$i5)) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = ((($$pre$i$i$i5)) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i5>>2]|0;
      $27 = ((($26)) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i5|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 25;
       break;
      } else {
       $$0$i$i$i$i3 = $29;
      }
     } else {
      $32 = HEAP32[$22>>2]|0;
      $$0$i$i$i$i3 = $32;
     }
     $33 = ($$0$i$i$i$i3|0)==(-1);
     if ($33) {
      HEAP32[$__b>>2] = 0;
      $$pre$i$i$i = 0;$155 = 1;
     } else {
      $$pre$i$i$i = $$pre$i$i$i5;$155 = 0;
     }
    }
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 17;
     } else {
      $36 = ((($34)) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = ((($34)) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if ($40) {
       $41 = HEAP32[$34>>2]|0;
       $42 = ((($41)) + 36|0);
       $43 = HEAP32[$42>>2]|0;
       __THREW__ = 0;
       $44 = (invoke_ii($43|0,($34|0))|0);
       $45 = __THREW__; __THREW__ = 0;
       $46 = $45&1;
       if ($46) {
        label = 25;
        break L6;
       } else {
        $$0$i$i1$i$i9 = $44;
       }
      } else {
       $47 = HEAP32[$37>>2]|0;
       $$0$i$i1$i$i9 = $47;
      }
      $48 = ($$0$i$i1$i$i9|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 17;
       break;
      } else {
       if ($155) {
        $156 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
     }
    } while(0);
    if ((label|0) == 17) {
     label = 0;
     if ($155) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $156 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    $53 = HEAP32[$18>>2]|0;
    $54 = $50&255;
    $55 = $54 >>> 1;
    $56 = $52 ? $55 : $53;
    $57 = (($__a$0) + ($56)|0);
    $58 = ($49|0)==($57|0);
    if ($58) {
     $59 = $56 << 1;
     __THREW__ = 0;
     invoke_viii(456,($__buf|0),($59|0),0);
     $60 = __THREW__; __THREW__ = 0;
     $61 = $60&1;
     if ($61) {
      label = 25;
      break;
     }
     $62 = HEAP8[$__buf>>0]|0;
     $63 = $62 & 1;
     $64 = ($63<<24>>24)==(0);
     if ($64) {
      $67 = 10;
     } else {
      $65 = HEAP32[$__buf>>2]|0;
      $66 = $65 & -2;
      $phitmp$i23 = (($66) + -1)|0;
      $67 = $phitmp$i23;
     }
     __THREW__ = 0;
     invoke_viii(456,($__buf|0),($67|0),0);
     $68 = __THREW__; __THREW__ = 0;
     $69 = $68&1;
     if ($69) {
      label = 25;
      break;
     }
     $70 = HEAP8[$__buf>>0]|0;
     $71 = $70 & 1;
     $72 = ($71<<24>>24)==(0);
     $73 = HEAP32[$14>>2]|0;
     $74 = $72 ? $16 : $73;
     $75 = (($74) + ($56)|0);
     HEAP32[$__a_end>>2] = $75;
     $__a$1 = $74;
    } else {
     $__a$1 = $__a$0;
    }
    $80 = ((($$pre$i$i$i)) + 12|0);
    $81 = HEAP32[$80>>2]|0;
    $82 = ((($$pre$i$i$i)) + 16|0);
    $83 = HEAP32[$82>>2]|0;
    $84 = ($81|0)==($83|0);
    if ($84) {
     $85 = HEAP32[$$pre$i$i$i>>2]|0;
     $86 = ((($85)) + 36|0);
     $87 = HEAP32[$86>>2]|0;
     __THREW__ = 0;
     $88 = (invoke_ii($87|0,($$pre$i$i$i|0))|0);
     $89 = __THREW__; __THREW__ = 0;
     $90 = $89&1;
     if ($90) {
      label = 25;
      break;
     } else {
      $$0$i$i = $88;
     }
    } else {
     $91 = HEAP32[$81>>2]|0;
     $$0$i$i = $91;
    }
    $92 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $93 = ($92|0)==(0);
    if (!($93)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $156;$__a$2 = $__a$1;
     break;
    }
    $94 = HEAP32[$80>>2]|0;
    $95 = HEAP32[$82>>2]|0;
    $96 = ($94|0)==($95|0);
    if ($96) {
     $97 = HEAP32[$$pre$i$i$i>>2]|0;
     $98 = ((($97)) + 40|0);
     $99 = HEAP32[$98>>2]|0;
     __THREW__ = 0;
     (invoke_ii($99|0,($$pre$i$i$i|0))|0);
     $100 = __THREW__; __THREW__ = 0;
     $101 = $100&1;
     if ($101) {
      label = 25;
      break;
     } else {
      $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $102 = ((($94)) + 4|0);
     HEAP32[$80>>2] = $102;
     $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 25) {
    $76 = ___cxa_find_matching_catch()|0;
    $77 = tempRet0;
    $lpad$phi$index = $76;$lpad$phi$index2 = $77;
    break;
   }
   $103 = HEAP8[$__grouping>>0]|0;
   $104 = $103 & 1;
   $105 = ($104<<24>>24)==(0);
   $106 = ((($__grouping)) + 4|0);
   $107 = HEAP32[$106>>2]|0;
   $108 = $103&255;
   $109 = $108 >>> 1;
   $110 = $105 ? $109 : $107;
   $111 = ($110|0)==(0);
   if (!($111)) {
    $112 = HEAP32[$__g_end>>2]|0;
    $113 = $112;
    $114 = $__g;
    $115 = (($113) - ($114))|0;
    $116 = ($115|0)<(160);
    if ($116) {
     $117 = HEAP32[$__dc>>2]|0;
     $118 = ((($112)) + 4|0);
     HEAP32[$__g_end>>2] = $118;
     HEAP32[$112>>2] = $117;
    }
   }
   $119 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $120 = (invoke_iiiii(547,($__a$2|0),($119|0),($__err|0),($0|0))|0);
   $121 = __THREW__; __THREW__ = 0;
   $122 = $121&1;
   if ($122) {
    label = 26;
   } else {
    HEAP32[$__v>>2] = $120;
    $123 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$123,$__err);
    $124 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($124) {
     $157 = 1;
    } else {
     $125 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $126 = HEAP32[$125>>2]|0;
     $127 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $128 = HEAP32[$127>>2]|0;
     $129 = ($126|0)==($128|0);
     if ($129) {
      $130 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $131 = ((($130)) + 36|0);
      $132 = HEAP32[$131>>2]|0;
      __THREW__ = 0;
      $133 = (invoke_ii($132|0,($$pre$i$i$i$lcssa|0))|0);
      $134 = __THREW__; __THREW__ = 0;
      $135 = $134&1;
      if ($135) {
       label = 26;
       break;
      } else {
       $$0$i$i$i$i = $133;
      }
     } else {
      $136 = HEAP32[$126>>2]|0;
      $$0$i$i$i$i = $136;
     }
     $137 = ($$0$i$i$i$i|0)==(-1);
     if ($137) {
      HEAP32[$__b>>2] = 0;
      $157 = 1;
     } else {
      $157 = 0;
     }
    }
    $138 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($138) {
      label = 51;
     } else {
      $139 = ((($$pre$i3$i$i)) + 12|0);
      $140 = HEAP32[$139>>2]|0;
      $141 = ((($$pre$i3$i$i)) + 16|0);
      $142 = HEAP32[$141>>2]|0;
      $143 = ($140|0)==($142|0);
      if ($143) {
       $144 = HEAP32[$$pre$i3$i$i>>2]|0;
       $145 = ((($144)) + 36|0);
       $146 = HEAP32[$145>>2]|0;
       __THREW__ = 0;
       $147 = (invoke_ii($146|0,($$pre$i3$i$i|0))|0);
       $148 = __THREW__; __THREW__ = 0;
       $149 = $148&1;
       if ($149) {
        label = 26;
        break L4;
       } else {
        $$0$i$i1$i$i = $147;
       }
      } else {
       $150 = HEAP32[$140>>2]|0;
       $$0$i$i1$i$i = $150;
      }
      $151 = ($$0$i$i1$i$i|0)==(-1);
      if ($151) {
       HEAP32[$__e>>2] = 0;
       label = 51;
       break;
      } else {
       if ($157) {
        break;
       } else {
        label = 53;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 51) {
     if ($157) {
      label = 53;
     }
    }
    if ((label|0) == 53) {
     $152 = HEAP32[$__err>>2]|0;
     $153 = $152 | 2;
     HEAP32[$__err>>2] = $153;
    }
    $154 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($154|0);
   }
  }
 } while(0);
 if ((label|0) == 26) {
  $78 = ___cxa_find_matching_catch()|0;
  $79 = tempRet0;
  $lpad$phi$index = $78;$lpad$phi$index2 = $79;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0;
 var $161 = 0, $162 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0;
 var $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i23 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(456,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L4: do {
  if ($10) {
   label = 26;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   $14 = ((($__buf)) + 8|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = ((($__buf)) + 1|0);
   $17 = $13 ? $16 : $15;
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = ((($__buf)) + 4|0);
   $19 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $17;
   L6: while(1) {
    $20 = ($$pre$i$i$i5|0)==(0|0);
    if ($20) {
     $$pre$i$i$i = 0;$160 = 1;
    } else {
     $21 = ((($$pre$i$i$i5)) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = ((($$pre$i$i$i5)) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i5>>2]|0;
      $27 = ((($26)) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i5|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 25;
       break;
      } else {
       $$0$i$i$i$i3 = $29;
      }
     } else {
      $32 = HEAP32[$22>>2]|0;
      $$0$i$i$i$i3 = $32;
     }
     $33 = ($$0$i$i$i$i3|0)==(-1);
     if ($33) {
      HEAP32[$__b>>2] = 0;
      $$pre$i$i$i = 0;$160 = 1;
     } else {
      $$pre$i$i$i = $$pre$i$i$i5;$160 = 0;
     }
    }
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 17;
     } else {
      $36 = ((($34)) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = ((($34)) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if ($40) {
       $41 = HEAP32[$34>>2]|0;
       $42 = ((($41)) + 36|0);
       $43 = HEAP32[$42>>2]|0;
       __THREW__ = 0;
       $44 = (invoke_ii($43|0,($34|0))|0);
       $45 = __THREW__; __THREW__ = 0;
       $46 = $45&1;
       if ($46) {
        label = 25;
        break L6;
       } else {
        $$0$i$i1$i$i9 = $44;
       }
      } else {
       $47 = HEAP32[$37>>2]|0;
       $$0$i$i1$i$i9 = $47;
      }
      $48 = ($$0$i$i1$i$i9|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 17;
       break;
      } else {
       if ($160) {
        $161 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
     }
    } while(0);
    if ((label|0) == 17) {
     label = 0;
     if ($160) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $161 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    $53 = HEAP32[$18>>2]|0;
    $54 = $50&255;
    $55 = $54 >>> 1;
    $56 = $52 ? $55 : $53;
    $57 = (($__a$0) + ($56)|0);
    $58 = ($49|0)==($57|0);
    if ($58) {
     $59 = $56 << 1;
     __THREW__ = 0;
     invoke_viii(456,($__buf|0),($59|0),0);
     $60 = __THREW__; __THREW__ = 0;
     $61 = $60&1;
     if ($61) {
      label = 25;
      break;
     }
     $62 = HEAP8[$__buf>>0]|0;
     $63 = $62 & 1;
     $64 = ($63<<24>>24)==(0);
     if ($64) {
      $67 = 10;
     } else {
      $65 = HEAP32[$__buf>>2]|0;
      $66 = $65 & -2;
      $phitmp$i23 = (($66) + -1)|0;
      $67 = $phitmp$i23;
     }
     __THREW__ = 0;
     invoke_viii(456,($__buf|0),($67|0),0);
     $68 = __THREW__; __THREW__ = 0;
     $69 = $68&1;
     if ($69) {
      label = 25;
      break;
     }
     $70 = HEAP8[$__buf>>0]|0;
     $71 = $70 & 1;
     $72 = ($71<<24>>24)==(0);
     $73 = HEAP32[$14>>2]|0;
     $74 = $72 ? $16 : $73;
     $75 = (($74) + ($56)|0);
     HEAP32[$__a_end>>2] = $75;
     $__a$1 = $74;
    } else {
     $__a$1 = $__a$0;
    }
    $80 = ((($$pre$i$i$i)) + 12|0);
    $81 = HEAP32[$80>>2]|0;
    $82 = ((($$pre$i$i$i)) + 16|0);
    $83 = HEAP32[$82>>2]|0;
    $84 = ($81|0)==($83|0);
    if ($84) {
     $85 = HEAP32[$$pre$i$i$i>>2]|0;
     $86 = ((($85)) + 36|0);
     $87 = HEAP32[$86>>2]|0;
     __THREW__ = 0;
     $88 = (invoke_ii($87|0,($$pre$i$i$i|0))|0);
     $89 = __THREW__; __THREW__ = 0;
     $90 = $89&1;
     if ($90) {
      label = 25;
      break;
     } else {
      $$0$i$i = $88;
     }
    } else {
     $91 = HEAP32[$81>>2]|0;
     $$0$i$i = $91;
    }
    $92 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $93 = ($92|0)==(0);
    if (!($93)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $161;$__a$2 = $__a$1;
     break;
    }
    $94 = HEAP32[$80>>2]|0;
    $95 = HEAP32[$82>>2]|0;
    $96 = ($94|0)==($95|0);
    if ($96) {
     $97 = HEAP32[$$pre$i$i$i>>2]|0;
     $98 = ((($97)) + 40|0);
     $99 = HEAP32[$98>>2]|0;
     __THREW__ = 0;
     (invoke_ii($99|0,($$pre$i$i$i|0))|0);
     $100 = __THREW__; __THREW__ = 0;
     $101 = $100&1;
     if ($101) {
      label = 25;
      break;
     } else {
      $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $102 = ((($94)) + 4|0);
     HEAP32[$80>>2] = $102;
     $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 25) {
    $76 = ___cxa_find_matching_catch()|0;
    $77 = tempRet0;
    $lpad$phi$index = $76;$lpad$phi$index2 = $77;
    break;
   }
   $103 = HEAP8[$__grouping>>0]|0;
   $104 = $103 & 1;
   $105 = ($104<<24>>24)==(0);
   $106 = ((($__grouping)) + 4|0);
   $107 = HEAP32[$106>>2]|0;
   $108 = $103&255;
   $109 = $108 >>> 1;
   $110 = $105 ? $109 : $107;
   $111 = ($110|0)==(0);
   if (!($111)) {
    $112 = HEAP32[$__g_end>>2]|0;
    $113 = $112;
    $114 = $__g;
    $115 = (($113) - ($114))|0;
    $116 = ($115|0)<(160);
    if ($116) {
     $117 = HEAP32[$__dc>>2]|0;
     $118 = ((($112)) + 4|0);
     HEAP32[$__g_end>>2] = $118;
     HEAP32[$112>>2] = $117;
    }
   }
   $119 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $120 = (invoke_iiiii(548,($__a$2|0),($119|0),($__err|0),($0|0))|0);
   $121 = tempRet0;
   $122 = __THREW__; __THREW__ = 0;
   $123 = $122&1;
   if ($123) {
    label = 26;
   } else {
    $124 = $__v;
    $125 = $124;
    HEAP32[$125>>2] = $120;
    $126 = (($124) + 4)|0;
    $127 = $126;
    HEAP32[$127>>2] = $121;
    $128 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$128,$__err);
    $129 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($129) {
     $162 = 1;
    } else {
     $130 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $131 = HEAP32[$130>>2]|0;
     $132 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $133 = HEAP32[$132>>2]|0;
     $134 = ($131|0)==($133|0);
     if ($134) {
      $135 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $136 = ((($135)) + 36|0);
      $137 = HEAP32[$136>>2]|0;
      __THREW__ = 0;
      $138 = (invoke_ii($137|0,($$pre$i$i$i$lcssa|0))|0);
      $139 = __THREW__; __THREW__ = 0;
      $140 = $139&1;
      if ($140) {
       label = 26;
       break;
      } else {
       $$0$i$i$i$i = $138;
      }
     } else {
      $141 = HEAP32[$131>>2]|0;
      $$0$i$i$i$i = $141;
     }
     $142 = ($$0$i$i$i$i|0)==(-1);
     if ($142) {
      HEAP32[$__b>>2] = 0;
      $162 = 1;
     } else {
      $162 = 0;
     }
    }
    $143 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($143) {
      label = 51;
     } else {
      $144 = ((($$pre$i3$i$i)) + 12|0);
      $145 = HEAP32[$144>>2]|0;
      $146 = ((($$pre$i3$i$i)) + 16|0);
      $147 = HEAP32[$146>>2]|0;
      $148 = ($145|0)==($147|0);
      if ($148) {
       $149 = HEAP32[$$pre$i3$i$i>>2]|0;
       $150 = ((($149)) + 36|0);
       $151 = HEAP32[$150>>2]|0;
       __THREW__ = 0;
       $152 = (invoke_ii($151|0,($$pre$i3$i$i|0))|0);
       $153 = __THREW__; __THREW__ = 0;
       $154 = $153&1;
       if ($154) {
        label = 26;
        break L4;
       } else {
        $$0$i$i1$i$i = $152;
       }
      } else {
       $155 = HEAP32[$145>>2]|0;
       $$0$i$i1$i$i = $155;
      }
      $156 = ($$0$i$i1$i$i|0)==(-1);
      if ($156) {
       HEAP32[$__e>>2] = 0;
       label = 51;
       break;
      } else {
       if ($162) {
        break;
       } else {
        label = 53;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 51) {
     if ($162) {
      label = 53;
     }
    }
    if ((label|0) == 53) {
     $157 = HEAP32[$__err>>2]|0;
     $158 = $157 | 2;
     HEAP32[$__err>>2] = $158;
    }
    $159 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($159|0);
   }
  }
 } while(0);
 if ((label|0) == 26) {
  $78 = ___cxa_find_matching_catch()|0;
  $79 = tempRet0;
  $lpad$phi$index = $78;$lpad$phi$index2 = $79;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i4 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i10 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i6 = 0, $$pre$i3$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0.0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0;
 var $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $or$cond = 0, $phitmp$i = 0, $phitmp$i24 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 208|0;
 $__decimal_point = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 337|0;
 $__exp = sp + 336|0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $0 = ((($__buf)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($__buf)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(456,($__buf|0),($7|0),0);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 L4: do {
  if ($9) {
   label = 26;
  } else {
   $10 = HEAP8[$__buf>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   $13 = ((($__buf)) + 8|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = ((($__buf)) + 1|0);
   $16 = $12 ? $15 : $14;
   HEAP32[$__a_end>>2] = $16;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   HEAP8[$__in_units>>0] = 1;
   HEAP8[$__exp>>0] = 69;
   $17 = ((($__buf)) + 4|0);
   $18 = HEAP32[$__decimal_point>>2]|0;
   $19 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i6 = $$pre;$__a$0 = $16;
   L6: while(1) {
    $20 = ($$pre$i$i$i6|0)==(0|0);
    if ($20) {
     $$pre$i$i$i = 0;$157 = 1;
    } else {
     $21 = ((($$pre$i$i$i6)) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = ((($$pre$i$i$i6)) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i6>>2]|0;
      $27 = ((($26)) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i6|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 25;
       break;
      } else {
       $$0$i$i$i$i4 = $29;
      }
     } else {
      $32 = HEAP32[$22>>2]|0;
      $$0$i$i$i$i4 = $32;
     }
     $33 = ($$0$i$i$i$i4|0)==(-1);
     if ($33) {
      HEAP32[$__b>>2] = 0;
      $$pre$i$i$i = 0;$157 = 1;
     } else {
      $$pre$i$i$i = $$pre$i$i$i6;$157 = 0;
     }
    }
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 17;
     } else {
      $36 = ((($34)) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = ((($34)) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if ($40) {
       $41 = HEAP32[$34>>2]|0;
       $42 = ((($41)) + 36|0);
       $43 = HEAP32[$42>>2]|0;
       __THREW__ = 0;
       $44 = (invoke_ii($43|0,($34|0))|0);
       $45 = __THREW__; __THREW__ = 0;
       $46 = $45&1;
       if ($46) {
        label = 25;
        break L6;
       } else {
        $$0$i$i1$i$i10 = $44;
       }
      } else {
       $47 = HEAP32[$37>>2]|0;
       $$0$i$i1$i$i10 = $47;
      }
      $48 = ($$0$i$i1$i$i10|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 17;
       break;
      } else {
       if ($157) {
        $158 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
     }
    } while(0);
    if ((label|0) == 17) {
     label = 0;
     if ($157) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $158 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    $53 = HEAP32[$17>>2]|0;
    $54 = $50&255;
    $55 = $54 >>> 1;
    $56 = $52 ? $55 : $53;
    $57 = (($__a$0) + ($56)|0);
    $58 = ($49|0)==($57|0);
    if ($58) {
     $59 = $56 << 1;
     __THREW__ = 0;
     invoke_viii(456,($__buf|0),($59|0),0);
     $60 = __THREW__; __THREW__ = 0;
     $61 = $60&1;
     if ($61) {
      label = 25;
      break;
     }
     $62 = HEAP8[$__buf>>0]|0;
     $63 = $62 & 1;
     $64 = ($63<<24>>24)==(0);
     if ($64) {
      $67 = 10;
     } else {
      $65 = HEAP32[$__buf>>2]|0;
      $66 = $65 & -2;
      $phitmp$i24 = (($66) + -1)|0;
      $67 = $phitmp$i24;
     }
     __THREW__ = 0;
     invoke_viii(456,($__buf|0),($67|0),0);
     $68 = __THREW__; __THREW__ = 0;
     $69 = $68&1;
     if ($69) {
      label = 25;
      break;
     }
     $70 = HEAP8[$__buf>>0]|0;
     $71 = $70 & 1;
     $72 = ($71<<24>>24)==(0);
     $73 = HEAP32[$13>>2]|0;
     $74 = $72 ? $15 : $73;
     $75 = (($74) + ($56)|0);
     HEAP32[$__a_end>>2] = $75;
     $__a$1 = $74;
    } else {
     $__a$1 = $__a$0;
    }
    $80 = ((($$pre$i$i$i)) + 12|0);
    $81 = HEAP32[$80>>2]|0;
    $82 = ((($$pre$i$i$i)) + 16|0);
    $83 = HEAP32[$82>>2]|0;
    $84 = ($81|0)==($83|0);
    if ($84) {
     $85 = HEAP32[$$pre$i$i$i>>2]|0;
     $86 = ((($85)) + 36|0);
     $87 = HEAP32[$86>>2]|0;
     __THREW__ = 0;
     $88 = (invoke_ii($87|0,($$pre$i$i$i|0))|0);
     $89 = __THREW__; __THREW__ = 0;
     $90 = $89&1;
     if ($90) {
      label = 25;
      break;
     } else {
      $$0$i$i = $88;
     }
    } else {
     $91 = HEAP32[$81>>2]|0;
     $$0$i$i = $91;
    }
    $92 = (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i,$__in_units,$__exp,$__a$1,$__a_end,$18,$19,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
    $93 = ($92|0)==(0);
    if (!($93)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $158;$__a$2 = $__a$1;
     break;
    }
    $94 = HEAP32[$80>>2]|0;
    $95 = HEAP32[$82>>2]|0;
    $96 = ($94|0)==($95|0);
    if ($96) {
     $97 = HEAP32[$$pre$i$i$i>>2]|0;
     $98 = ((($97)) + 40|0);
     $99 = HEAP32[$98>>2]|0;
     __THREW__ = 0;
     (invoke_ii($99|0,($$pre$i$i$i|0))|0);
     $100 = __THREW__; __THREW__ = 0;
     $101 = $100&1;
     if ($101) {
      label = 25;
      break;
     } else {
      $$pre$i$i$i6 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $102 = ((($94)) + 4|0);
     HEAP32[$80>>2] = $102;
     $$pre$i$i$i6 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 25) {
    $76 = ___cxa_find_matching_catch()|0;
    $77 = tempRet0;
    $lpad$phi$index = $76;$lpad$phi$index2 = $77;
    break;
   }
   $103 = HEAP8[$__grouping>>0]|0;
   $104 = $103 & 1;
   $105 = ($104<<24>>24)==(0);
   $106 = ((($__grouping)) + 4|0);
   $107 = HEAP32[$106>>2]|0;
   $108 = $103&255;
   $109 = $108 >>> 1;
   $110 = $105 ? $109 : $107;
   $111 = ($110|0)==(0);
   $112 = HEAP8[$__in_units>>0]|0;
   $113 = ($112<<24>>24)==(0);
   $or$cond = $113 | $111;
   if (!($or$cond)) {
    $114 = HEAP32[$__g_end>>2]|0;
    $115 = $114;
    $116 = $__g;
    $117 = (($115) - ($116))|0;
    $118 = ($117|0)<(160);
    if ($118) {
     $119 = HEAP32[$__dc>>2]|0;
     $120 = ((($114)) + 4|0);
     HEAP32[$__g_end>>2] = $120;
     HEAP32[$114>>2] = $119;
    }
   }
   $121 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $122 = (+invoke_diii(549,($__a$2|0),($121|0),($__err|0)));
   $123 = __THREW__; __THREW__ = 0;
   $124 = $123&1;
   if ($124) {
    label = 26;
   } else {
    HEAPF32[$__v>>2] = $122;
    $125 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$125,$__err);
    $126 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($126) {
     $159 = 1;
    } else {
     $127 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $128 = HEAP32[$127>>2]|0;
     $129 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $130 = HEAP32[$129>>2]|0;
     $131 = ($128|0)==($130|0);
     if ($131) {
      $132 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $133 = ((($132)) + 36|0);
      $134 = HEAP32[$133>>2]|0;
      __THREW__ = 0;
      $135 = (invoke_ii($134|0,($$pre$i$i$i$lcssa|0))|0);
      $136 = __THREW__; __THREW__ = 0;
      $137 = $136&1;
      if ($137) {
       label = 26;
       break;
      } else {
       $$0$i$i$i$i = $135;
      }
     } else {
      $138 = HEAP32[$128>>2]|0;
      $$0$i$i$i$i = $138;
     }
     $139 = ($$0$i$i$i$i|0)==(-1);
     if ($139) {
      HEAP32[$__b>>2] = 0;
      $159 = 1;
     } else {
      $159 = 0;
     }
    }
    $140 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($140) {
      label = 51;
     } else {
      $141 = ((($$pre$i3$i$i)) + 12|0);
      $142 = HEAP32[$141>>2]|0;
      $143 = ((($$pre$i3$i$i)) + 16|0);
      $144 = HEAP32[$143>>2]|0;
      $145 = ($142|0)==($144|0);
      if ($145) {
       $146 = HEAP32[$$pre$i3$i$i>>2]|0;
       $147 = ((($146)) + 36|0);
       $148 = HEAP32[$147>>2]|0;
       __THREW__ = 0;
       $149 = (invoke_ii($148|0,($$pre$i3$i$i|0))|0);
       $150 = __THREW__; __THREW__ = 0;
       $151 = $150&1;
       if ($151) {
        label = 26;
        break L4;
       } else {
        $$0$i$i1$i$i = $149;
       }
      } else {
       $152 = HEAP32[$142>>2]|0;
       $$0$i$i1$i$i = $152;
      }
      $153 = ($$0$i$i1$i$i|0)==(-1);
      if ($153) {
       HEAP32[$__e>>2] = 0;
       label = 51;
       break;
      } else {
       if ($159) {
        break;
       } else {
        label = 53;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 51) {
     if ($159) {
      label = 53;
     }
    }
    if ((label|0) == 53) {
     $154 = HEAP32[$__err>>2]|0;
     $155 = $154 | 2;
     HEAP32[$__err>>2] = $155;
    }
    $156 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($156|0);
   }
  }
 } while(0);
 if ((label|0) == 26) {
  $78 = ___cxa_find_matching_catch()|0;
  $79 = tempRet0;
  $lpad$phi$index = $78;$lpad$phi$index2 = $79;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i4 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i10 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i6 = 0, $$pre$i3$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0.0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0;
 var $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $or$cond = 0, $phitmp$i = 0, $phitmp$i24 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 208|0;
 $__decimal_point = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 337|0;
 $__exp = sp + 336|0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $0 = ((($__buf)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($__buf)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(456,($__buf|0),($7|0),0);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 L4: do {
  if ($9) {
   label = 26;
  } else {
   $10 = HEAP8[$__buf>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   $13 = ((($__buf)) + 8|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = ((($__buf)) + 1|0);
   $16 = $12 ? $15 : $14;
   HEAP32[$__a_end>>2] = $16;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   HEAP8[$__in_units>>0] = 1;
   HEAP8[$__exp>>0] = 69;
   $17 = ((($__buf)) + 4|0);
   $18 = HEAP32[$__decimal_point>>2]|0;
   $19 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i6 = $$pre;$__a$0 = $16;
   L6: while(1) {
    $20 = ($$pre$i$i$i6|0)==(0|0);
    if ($20) {
     $$pre$i$i$i = 0;$157 = 1;
    } else {
     $21 = ((($$pre$i$i$i6)) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = ((($$pre$i$i$i6)) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i6>>2]|0;
      $27 = ((($26)) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i6|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 25;
       break;
      } else {
       $$0$i$i$i$i4 = $29;
      }
     } else {
      $32 = HEAP32[$22>>2]|0;
      $$0$i$i$i$i4 = $32;
     }
     $33 = ($$0$i$i$i$i4|0)==(-1);
     if ($33) {
      HEAP32[$__b>>2] = 0;
      $$pre$i$i$i = 0;$157 = 1;
     } else {
      $$pre$i$i$i = $$pre$i$i$i6;$157 = 0;
     }
    }
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 17;
     } else {
      $36 = ((($34)) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = ((($34)) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if ($40) {
       $41 = HEAP32[$34>>2]|0;
       $42 = ((($41)) + 36|0);
       $43 = HEAP32[$42>>2]|0;
       __THREW__ = 0;
       $44 = (invoke_ii($43|0,($34|0))|0);
       $45 = __THREW__; __THREW__ = 0;
       $46 = $45&1;
       if ($46) {
        label = 25;
        break L6;
       } else {
        $$0$i$i1$i$i10 = $44;
       }
      } else {
       $47 = HEAP32[$37>>2]|0;
       $$0$i$i1$i$i10 = $47;
      }
      $48 = ($$0$i$i1$i$i10|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 17;
       break;
      } else {
       if ($157) {
        $158 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
     }
    } while(0);
    if ((label|0) == 17) {
     label = 0;
     if ($157) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $158 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    $53 = HEAP32[$17>>2]|0;
    $54 = $50&255;
    $55 = $54 >>> 1;
    $56 = $52 ? $55 : $53;
    $57 = (($__a$0) + ($56)|0);
    $58 = ($49|0)==($57|0);
    if ($58) {
     $59 = $56 << 1;
     __THREW__ = 0;
     invoke_viii(456,($__buf|0),($59|0),0);
     $60 = __THREW__; __THREW__ = 0;
     $61 = $60&1;
     if ($61) {
      label = 25;
      break;
     }
     $62 = HEAP8[$__buf>>0]|0;
     $63 = $62 & 1;
     $64 = ($63<<24>>24)==(0);
     if ($64) {
      $67 = 10;
     } else {
      $65 = HEAP32[$__buf>>2]|0;
      $66 = $65 & -2;
      $phitmp$i24 = (($66) + -1)|0;
      $67 = $phitmp$i24;
     }
     __THREW__ = 0;
     invoke_viii(456,($__buf|0),($67|0),0);
     $68 = __THREW__; __THREW__ = 0;
     $69 = $68&1;
     if ($69) {
      label = 25;
      break;
     }
     $70 = HEAP8[$__buf>>0]|0;
     $71 = $70 & 1;
     $72 = ($71<<24>>24)==(0);
     $73 = HEAP32[$13>>2]|0;
     $74 = $72 ? $15 : $73;
     $75 = (($74) + ($56)|0);
     HEAP32[$__a_end>>2] = $75;
     $__a$1 = $74;
    } else {
     $__a$1 = $__a$0;
    }
    $80 = ((($$pre$i$i$i)) + 12|0);
    $81 = HEAP32[$80>>2]|0;
    $82 = ((($$pre$i$i$i)) + 16|0);
    $83 = HEAP32[$82>>2]|0;
    $84 = ($81|0)==($83|0);
    if ($84) {
     $85 = HEAP32[$$pre$i$i$i>>2]|0;
     $86 = ((($85)) + 36|0);
     $87 = HEAP32[$86>>2]|0;
     __THREW__ = 0;
     $88 = (invoke_ii($87|0,($$pre$i$i$i|0))|0);
     $89 = __THREW__; __THREW__ = 0;
     $90 = $89&1;
     if ($90) {
      label = 25;
      break;
     } else {
      $$0$i$i = $88;
     }
    } else {
     $91 = HEAP32[$81>>2]|0;
     $$0$i$i = $91;
    }
    $92 = (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i,$__in_units,$__exp,$__a$1,$__a_end,$18,$19,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
    $93 = ($92|0)==(0);
    if (!($93)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $158;$__a$2 = $__a$1;
     break;
    }
    $94 = HEAP32[$80>>2]|0;
    $95 = HEAP32[$82>>2]|0;
    $96 = ($94|0)==($95|0);
    if ($96) {
     $97 = HEAP32[$$pre$i$i$i>>2]|0;
     $98 = ((($97)) + 40|0);
     $99 = HEAP32[$98>>2]|0;
     __THREW__ = 0;
     (invoke_ii($99|0,($$pre$i$i$i|0))|0);
     $100 = __THREW__; __THREW__ = 0;
     $101 = $100&1;
     if ($101) {
      label = 25;
      break;
     } else {
      $$pre$i$i$i6 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $102 = ((($94)) + 4|0);
     HEAP32[$80>>2] = $102;
     $$pre$i$i$i6 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 25) {
    $76 = ___cxa_find_matching_catch()|0;
    $77 = tempRet0;
    $lpad$phi$index = $76;$lpad$phi$index2 = $77;
    break;
   }
   $103 = HEAP8[$__grouping>>0]|0;
   $104 = $103 & 1;
   $105 = ($104<<24>>24)==(0);
   $106 = ((($__grouping)) + 4|0);
   $107 = HEAP32[$106>>2]|0;
   $108 = $103&255;
   $109 = $108 >>> 1;
   $110 = $105 ? $109 : $107;
   $111 = ($110|0)==(0);
   $112 = HEAP8[$__in_units>>0]|0;
   $113 = ($112<<24>>24)==(0);
   $or$cond = $113 | $111;
   if (!($or$cond)) {
    $114 = HEAP32[$__g_end>>2]|0;
    $115 = $114;
    $116 = $__g;
    $117 = (($115) - ($116))|0;
    $118 = ($117|0)<(160);
    if ($118) {
     $119 = HEAP32[$__dc>>2]|0;
     $120 = ((($114)) + 4|0);
     HEAP32[$__g_end>>2] = $120;
     HEAP32[$114>>2] = $119;
    }
   }
   $121 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $122 = (+invoke_diii(550,($__a$2|0),($121|0),($__err|0)));
   $123 = __THREW__; __THREW__ = 0;
   $124 = $123&1;
   if ($124) {
    label = 26;
   } else {
    HEAPF64[$__v>>3] = $122;
    $125 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$125,$__err);
    $126 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($126) {
     $159 = 1;
    } else {
     $127 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $128 = HEAP32[$127>>2]|0;
     $129 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $130 = HEAP32[$129>>2]|0;
     $131 = ($128|0)==($130|0);
     if ($131) {
      $132 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $133 = ((($132)) + 36|0);
      $134 = HEAP32[$133>>2]|0;
      __THREW__ = 0;
      $135 = (invoke_ii($134|0,($$pre$i$i$i$lcssa|0))|0);
      $136 = __THREW__; __THREW__ = 0;
      $137 = $136&1;
      if ($137) {
       label = 26;
       break;
      } else {
       $$0$i$i$i$i = $135;
      }
     } else {
      $138 = HEAP32[$128>>2]|0;
      $$0$i$i$i$i = $138;
     }
     $139 = ($$0$i$i$i$i|0)==(-1);
     if ($139) {
      HEAP32[$__b>>2] = 0;
      $159 = 1;
     } else {
      $159 = 0;
     }
    }
    $140 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($140) {
      label = 51;
     } else {
      $141 = ((($$pre$i3$i$i)) + 12|0);
      $142 = HEAP32[$141>>2]|0;
      $143 = ((($$pre$i3$i$i)) + 16|0);
      $144 = HEAP32[$143>>2]|0;
      $145 = ($142|0)==($144|0);
      if ($145) {
       $146 = HEAP32[$$pre$i3$i$i>>2]|0;
       $147 = ((($146)) + 36|0);
       $148 = HEAP32[$147>>2]|0;
       __THREW__ = 0;
       $149 = (invoke_ii($148|0,($$pre$i3$i$i|0))|0);
       $150 = __THREW__; __THREW__ = 0;
       $151 = $150&1;
       if ($151) {
        label = 26;
        break L4;
       } else {
        $$0$i$i1$i$i = $149;
       }
      } else {
       $152 = HEAP32[$142>>2]|0;
       $$0$i$i1$i$i = $152;
      }
      $153 = ($$0$i$i1$i$i|0)==(-1);
      if ($153) {
       HEAP32[$__e>>2] = 0;
       label = 51;
       break;
      } else {
       if ($159) {
        break;
       } else {
        label = 53;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 51) {
     if ($159) {
      label = 53;
     }
    }
    if ((label|0) == 53) {
     $154 = HEAP32[$__err>>2]|0;
     $155 = $154 | 2;
     HEAP32[$__err>>2] = $155;
    }
    $156 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($156|0);
   }
  }
 } while(0);
 if ((label|0) == 26) {
  $78 = ___cxa_find_matching_catch()|0;
  $79 = tempRet0;
  $lpad$phi$index = $78;$lpad$phi$index2 = $79;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i4 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i10 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i6 = 0, $$pre$i3$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0.0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0;
 var $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $or$cond = 0, $phitmp$i = 0, $phitmp$i24 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 208|0;
 $__decimal_point = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 337|0;
 $__exp = sp + 336|0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $0 = ((($__buf)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($__buf)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(456,($__buf|0),($7|0),0);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 L4: do {
  if ($9) {
   label = 26;
  } else {
   $10 = HEAP8[$__buf>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   $13 = ((($__buf)) + 8|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = ((($__buf)) + 1|0);
   $16 = $12 ? $15 : $14;
   HEAP32[$__a_end>>2] = $16;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   HEAP8[$__in_units>>0] = 1;
   HEAP8[$__exp>>0] = 69;
   $17 = ((($__buf)) + 4|0);
   $18 = HEAP32[$__decimal_point>>2]|0;
   $19 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i6 = $$pre;$__a$0 = $16;
   L6: while(1) {
    $20 = ($$pre$i$i$i6|0)==(0|0);
    if ($20) {
     $$pre$i$i$i = 0;$157 = 1;
    } else {
     $21 = ((($$pre$i$i$i6)) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = ((($$pre$i$i$i6)) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i6>>2]|0;
      $27 = ((($26)) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i6|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 25;
       break;
      } else {
       $$0$i$i$i$i4 = $29;
      }
     } else {
      $32 = HEAP32[$22>>2]|0;
      $$0$i$i$i$i4 = $32;
     }
     $33 = ($$0$i$i$i$i4|0)==(-1);
     if ($33) {
      HEAP32[$__b>>2] = 0;
      $$pre$i$i$i = 0;$157 = 1;
     } else {
      $$pre$i$i$i = $$pre$i$i$i6;$157 = 0;
     }
    }
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 17;
     } else {
      $36 = ((($34)) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = ((($34)) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if ($40) {
       $41 = HEAP32[$34>>2]|0;
       $42 = ((($41)) + 36|0);
       $43 = HEAP32[$42>>2]|0;
       __THREW__ = 0;
       $44 = (invoke_ii($43|0,($34|0))|0);
       $45 = __THREW__; __THREW__ = 0;
       $46 = $45&1;
       if ($46) {
        label = 25;
        break L6;
       } else {
        $$0$i$i1$i$i10 = $44;
       }
      } else {
       $47 = HEAP32[$37>>2]|0;
       $$0$i$i1$i$i10 = $47;
      }
      $48 = ($$0$i$i1$i$i10|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 17;
       break;
      } else {
       if ($157) {
        $158 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
     }
    } while(0);
    if ((label|0) == 17) {
     label = 0;
     if ($157) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $158 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    $53 = HEAP32[$17>>2]|0;
    $54 = $50&255;
    $55 = $54 >>> 1;
    $56 = $52 ? $55 : $53;
    $57 = (($__a$0) + ($56)|0);
    $58 = ($49|0)==($57|0);
    if ($58) {
     $59 = $56 << 1;
     __THREW__ = 0;
     invoke_viii(456,($__buf|0),($59|0),0);
     $60 = __THREW__; __THREW__ = 0;
     $61 = $60&1;
     if ($61) {
      label = 25;
      break;
     }
     $62 = HEAP8[$__buf>>0]|0;
     $63 = $62 & 1;
     $64 = ($63<<24>>24)==(0);
     if ($64) {
      $67 = 10;
     } else {
      $65 = HEAP32[$__buf>>2]|0;
      $66 = $65 & -2;
      $phitmp$i24 = (($66) + -1)|0;
      $67 = $phitmp$i24;
     }
     __THREW__ = 0;
     invoke_viii(456,($__buf|0),($67|0),0);
     $68 = __THREW__; __THREW__ = 0;
     $69 = $68&1;
     if ($69) {
      label = 25;
      break;
     }
     $70 = HEAP8[$__buf>>0]|0;
     $71 = $70 & 1;
     $72 = ($71<<24>>24)==(0);
     $73 = HEAP32[$13>>2]|0;
     $74 = $72 ? $15 : $73;
     $75 = (($74) + ($56)|0);
     HEAP32[$__a_end>>2] = $75;
     $__a$1 = $74;
    } else {
     $__a$1 = $__a$0;
    }
    $80 = ((($$pre$i$i$i)) + 12|0);
    $81 = HEAP32[$80>>2]|0;
    $82 = ((($$pre$i$i$i)) + 16|0);
    $83 = HEAP32[$82>>2]|0;
    $84 = ($81|0)==($83|0);
    if ($84) {
     $85 = HEAP32[$$pre$i$i$i>>2]|0;
     $86 = ((($85)) + 36|0);
     $87 = HEAP32[$86>>2]|0;
     __THREW__ = 0;
     $88 = (invoke_ii($87|0,($$pre$i$i$i|0))|0);
     $89 = __THREW__; __THREW__ = 0;
     $90 = $89&1;
     if ($90) {
      label = 25;
      break;
     } else {
      $$0$i$i = $88;
     }
    } else {
     $91 = HEAP32[$81>>2]|0;
     $$0$i$i = $91;
    }
    $92 = (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i,$__in_units,$__exp,$__a$1,$__a_end,$18,$19,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
    $93 = ($92|0)==(0);
    if (!($93)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $158;$__a$2 = $__a$1;
     break;
    }
    $94 = HEAP32[$80>>2]|0;
    $95 = HEAP32[$82>>2]|0;
    $96 = ($94|0)==($95|0);
    if ($96) {
     $97 = HEAP32[$$pre$i$i$i>>2]|0;
     $98 = ((($97)) + 40|0);
     $99 = HEAP32[$98>>2]|0;
     __THREW__ = 0;
     (invoke_ii($99|0,($$pre$i$i$i|0))|0);
     $100 = __THREW__; __THREW__ = 0;
     $101 = $100&1;
     if ($101) {
      label = 25;
      break;
     } else {
      $$pre$i$i$i6 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $102 = ((($94)) + 4|0);
     HEAP32[$80>>2] = $102;
     $$pre$i$i$i6 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 25) {
    $76 = ___cxa_find_matching_catch()|0;
    $77 = tempRet0;
    $lpad$phi$index = $76;$lpad$phi$index2 = $77;
    break;
   }
   $103 = HEAP8[$__grouping>>0]|0;
   $104 = $103 & 1;
   $105 = ($104<<24>>24)==(0);
   $106 = ((($__grouping)) + 4|0);
   $107 = HEAP32[$106>>2]|0;
   $108 = $103&255;
   $109 = $108 >>> 1;
   $110 = $105 ? $109 : $107;
   $111 = ($110|0)==(0);
   $112 = HEAP8[$__in_units>>0]|0;
   $113 = ($112<<24>>24)==(0);
   $or$cond = $113 | $111;
   if (!($or$cond)) {
    $114 = HEAP32[$__g_end>>2]|0;
    $115 = $114;
    $116 = $__g;
    $117 = (($115) - ($116))|0;
    $118 = ($117|0)<(160);
    if ($118) {
     $119 = HEAP32[$__dc>>2]|0;
     $120 = ((($114)) + 4|0);
     HEAP32[$__g_end>>2] = $120;
     HEAP32[$114>>2] = $119;
    }
   }
   $121 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $122 = (+invoke_diii(551,($__a$2|0),($121|0),($__err|0)));
   $123 = __THREW__; __THREW__ = 0;
   $124 = $123&1;
   if ($124) {
    label = 26;
   } else {
    HEAPF64[$__v>>3] = $122;
    $125 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$125,$__err);
    $126 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($126) {
     $159 = 1;
    } else {
     $127 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $128 = HEAP32[$127>>2]|0;
     $129 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $130 = HEAP32[$129>>2]|0;
     $131 = ($128|0)==($130|0);
     if ($131) {
      $132 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $133 = ((($132)) + 36|0);
      $134 = HEAP32[$133>>2]|0;
      __THREW__ = 0;
      $135 = (invoke_ii($134|0,($$pre$i$i$i$lcssa|0))|0);
      $136 = __THREW__; __THREW__ = 0;
      $137 = $136&1;
      if ($137) {
       label = 26;
       break;
      } else {
       $$0$i$i$i$i = $135;
      }
     } else {
      $138 = HEAP32[$128>>2]|0;
      $$0$i$i$i$i = $138;
     }
     $139 = ($$0$i$i$i$i|0)==(-1);
     if ($139) {
      HEAP32[$__b>>2] = 0;
      $159 = 1;
     } else {
      $159 = 0;
     }
    }
    $140 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($140) {
      label = 51;
     } else {
      $141 = ((($$pre$i3$i$i)) + 12|0);
      $142 = HEAP32[$141>>2]|0;
      $143 = ((($$pre$i3$i$i)) + 16|0);
      $144 = HEAP32[$143>>2]|0;
      $145 = ($142|0)==($144|0);
      if ($145) {
       $146 = HEAP32[$$pre$i3$i$i>>2]|0;
       $147 = ((($146)) + 36|0);
       $148 = HEAP32[$147>>2]|0;
       __THREW__ = 0;
       $149 = (invoke_ii($148|0,($$pre$i3$i$i|0))|0);
       $150 = __THREW__; __THREW__ = 0;
       $151 = $150&1;
       if ($151) {
        label = 26;
        break L4;
       } else {
        $$0$i$i1$i$i = $149;
       }
      } else {
       $152 = HEAP32[$142>>2]|0;
       $$0$i$i1$i$i = $152;
      }
      $153 = ($$0$i$i1$i$i|0)==(-1);
      if ($153) {
       HEAP32[$__e>>2] = 0;
       label = 51;
       break;
      } else {
       if ($159) {
        break;
       } else {
        label = 53;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 51) {
     if ($159) {
      label = 53;
     }
    }
    if ((label|0) == 53) {
     $154 = HEAP32[$__err>>2]|0;
     $155 = $154 | 2;
     HEAP32[$__err>>2] = $155;
    }
    $156 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($156|0);
   }
  }
 } while(0);
 if ((label|0) == 26) {
  $78 = ___cxa_find_matching_catch()|0;
  $79 = tempRet0;
  $lpad$phi$index = $78;$lpad$phi$index2 = $79;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__s,$__n,$__l,$__format,$varargs) {
 $__s = $__s|0;
 $__n = $__n|0;
 $__l = $__l|0;
 $__format = $__format|0;
 $varargs = $varargs|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $__va = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__va = sp;
 HEAP32[$__va>>2] = $varargs;
 $0 = (_uselocale(($__l|0))|0);
 $1 = (_vsnprintf($__s,$__n,$__format,$__va)|0);
 $2 = ($0|0)==(0|0);
 if (!($2)) {
  __THREW__ = 0;
  (invoke_ii(472,($0|0))|0);
  $3 = __THREW__; __THREW__ = 0;
  $4 = $3&1;
  if ($4) {
   $5 = ___cxa_find_matching_catch(0|0)|0;
   $6 = tempRet0;
   ___clang_call_terminate($5);
   // unreachable;
  }
 }
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__s,$__l,$__format,$varargs) {
 $__s = $__s|0;
 $__l = $__l|0;
 $__format = $__format|0;
 $varargs = $varargs|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__va = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__va = sp;
 HEAP32[$__va>>2] = $varargs;
 $0 = (_uselocale(($__l|0))|0);
 __THREW__ = 0;
 $1 = (invoke_iiii(552,($__s|0),($__format|0),($__va|0))|0);
 $2 = __THREW__; __THREW__ = 0;
 $3 = $2&1;
 if ($3) {
  $9 = ___cxa_find_matching_catch()|0;
  $10 = tempRet0;
  $11 = ($0|0)==(0|0);
  if (!($11)) {
   __THREW__ = 0;
   (invoke_ii(472,($0|0))|0);
   $12 = __THREW__; __THREW__ = 0;
   $13 = $12&1;
   if ($13) {
    $14 = ___cxa_find_matching_catch(0|0)|0;
    $15 = tempRet0;
    ___clang_call_terminate($14);
    // unreachable;
   }
  }
  ___resumeException($9|0);
  // unreachable;
 } else {
  $4 = ($0|0)==(0|0);
  if (!($4)) {
   __THREW__ = 0;
   (invoke_ii(472,($0|0))|0);
   $5 = __THREW__; __THREW__ = 0;
   $6 = $5&1;
   if ($6) {
    $7 = ___cxa_find_matching_catch(0|0)|0;
    $8 = tempRet0;
    ___clang_call_terminate($7);
    // unreachable;
   }
  }
  STACKTOP = sp;return ($1|0);
 }
 return (0)|0;
}
function __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($__s,$__ob,$__op,$__oe,$__iob,$__fl) {
 $__s = $__s|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 var $$sroa$0$1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__ns$0 = 0, $__sp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__sp = sp;
 $0 = HEAP32[$__s>>2]|0;
 $1 = ($0|0)==(0|0);
 L1: do {
  if ($1) {
   $$sroa$0$1 = 0;
  } else {
   $2 = $__oe;
   $3 = $__ob;
   $4 = (($2) - ($3))|0;
   $5 = $4 >> 2;
   $6 = ((($__iob)) + 12|0);
   $7 = HEAP32[$6>>2]|0;
   $8 = ($7|0)>($5|0);
   $9 = (($7) - ($5))|0;
   $__ns$0 = $8 ? $9 : 0;
   $10 = $__op;
   $11 = (($10) - ($3))|0;
   $12 = $11 >> 2;
   $13 = ($11|0)>(0);
   if ($13) {
    $14 = HEAP32[$0>>2]|0;
    $15 = ((($14)) + 48|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = (FUNCTION_TABLE_iiii[$16 & 1023]($0,$__ob,$12)|0);
    $18 = ($17|0)==($12|0);
    if (!($18)) {
     HEAP32[$__s>>2] = 0;
     $$sroa$0$1 = 0;
     break;
    }
   }
   $19 = ($__ns$0|0)>(0);
   do {
    if ($19) {
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($__sp,$__ns$0,$__fl);
     $20 = HEAP8[$__sp>>0]|0;
     $21 = $20 & 1;
     $22 = ($21<<24>>24)==(0);
     $23 = ((($__sp)) + 8|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ((($__sp)) + 4|0);
     $26 = $22 ? $25 : $24;
     $27 = HEAP32[$0>>2]|0;
     $28 = ((($27)) + 48|0);
     $29 = HEAP32[$28>>2]|0;
     __THREW__ = 0;
     $30 = (invoke_iiii($29|0,($0|0),($26|0),($__ns$0|0))|0);
     $31 = __THREW__; __THREW__ = 0;
     $32 = $31&1;
     if ($32) {
      $34 = ___cxa_find_matching_catch()|0;
      $35 = tempRet0;
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sp);
      ___resumeException($34|0);
      // unreachable;
     }
     $33 = ($30|0)==($__ns$0|0);
     if ($33) {
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sp);
      break;
     } else {
      HEAP32[$__s>>2] = 0;
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sp);
      $$sroa$0$1 = 0;
      break L1;
     }
    }
   } while(0);
   $36 = (($2) - ($10))|0;
   $37 = $36 >> 2;
   $38 = ($36|0)>(0);
   if ($38) {
    $39 = HEAP32[$0>>2]|0;
    $40 = ((($39)) + 48|0);
    $41 = HEAP32[$40>>2]|0;
    $42 = (FUNCTION_TABLE_iiii[$41 & 1023]($0,$__op,$37)|0);
    $43 = ($42|0)==($37|0);
    if (!($43)) {
     HEAP32[$__s>>2] = 0;
     $$sroa$0$1 = 0;
     break;
    }
   }
   HEAP32[$6>>2] = 0;
   $$sroa$0$1 = $0;
  }
 } while(0);
 STACKTOP = sp;return ($$sroa$0$1|0);
}
function __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$__e,$__err,$__ct,$__n) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 $__n = $__n|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i10 = 0, $$0$in = 0, $$01 = 0, $$lcssa = 0, $$pre$i$i$i = 0, $$pre$i$i$i16 = 0, $$pre$i$i$i3 = 0, $$pre$i2$i$i20 = 0, $$pre$i2$i$i20$lcssa = 0, $$pre$i2$i$i7 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__r$0 = 0, $__r$0$in = 0, $__r$0$lcssa = 0, $isascii1$i = 0, $isascii1$i12 = 0, $sext = 0, $sext24 = 0, $tmp$i$i9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__b>>2]|0;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $12 = 0;
  } else {
   $2 = ((($0)) + 12|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = ((($0)) + 16|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = ($3|0)==($5|0);
   if ($6) {
    $7 = HEAP32[$0>>2]|0;
    $8 = ((($7)) + 36|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = (FUNCTION_TABLE_ii[$9 & 1023]($0)|0);
    $11 = ($10|0)==(-1);
    if ($11) {
     HEAP32[$__b>>2] = 0;
     $12 = 0;
     break;
    } else {
     $$pre$i$i$i = HEAP32[$__b>>2]|0;
     $12 = $$pre$i$i$i;
     break;
    }
   } else {
    $12 = $0;
   }
  }
 } while(0);
 $13 = ($12|0)==(0|0);
 $14 = HEAP32[$__e>>2]|0;
 $15 = ($14|0)==(0|0);
 do {
  if ($15) {
   label = 11;
  } else {
   $16 = ((($14)) + 12|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ((($14)) + 16|0);
   $19 = HEAP32[$18>>2]|0;
   $20 = ($17|0)==($19|0);
   if ($20) {
    $21 = HEAP32[$14>>2]|0;
    $22 = ((($21)) + 36|0);
    $23 = HEAP32[$22>>2]|0;
    $24 = (FUNCTION_TABLE_ii[$23 & 1023]($14)|0);
    $25 = ($24|0)==(-1);
    if ($25) {
     HEAP32[$__e>>2] = 0;
     label = 11;
     break;
    }
   }
   if ($13) {
    $157 = $14;
    label = 13;
   } else {
    label = 12;
   }
  }
 } while(0);
 if ((label|0) == 11) {
  if ($13) {
   label = 12;
  } else {
   $157 = 0;
   label = 13;
  }
 }
 L16: do {
  if ((label|0) == 12) {
   $26 = HEAP32[$__err>>2]|0;
   $27 = $26 | 6;
   HEAP32[$__err>>2] = $27;
   $$01 = 0;
  }
  else if ((label|0) == 13) {
   $28 = HEAP32[$__b>>2]|0;
   $29 = ((($28)) + 12|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = ((($28)) + 16|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = ($30|0)==($32|0);
   if ($33) {
    $34 = HEAP32[$28>>2]|0;
    $35 = ((($34)) + 36|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = (FUNCTION_TABLE_ii[$36 & 1023]($28)|0);
    $$0$i$i = $37;
   } else {
    $38 = HEAP8[$30>>0]|0;
    $39 = $38&255;
    $$0$i$i = $39;
   }
   $40 = $$0$i$i&255;
   $isascii1$i = ($40<<24>>24)>(-1);
   if ($isascii1$i) {
    $sext = $$0$i$i << 24;
    $41 = $sext >> 24;
    $42 = ((($__ct)) + 8|0);
    $43 = HEAP32[$42>>2]|0;
    $44 = (($43) + ($41<<1)|0);
    $45 = HEAP16[$44>>1]|0;
    $46 = $45 & 2048;
    $47 = ($46<<16>>16)==(0);
    if (!($47)) {
     $50 = HEAP32[$__ct>>2]|0;
     $51 = ((($50)) + 36|0);
     $52 = HEAP32[$51>>2]|0;
     $53 = (FUNCTION_TABLE_iiii[$52 & 1023]($__ct,$40,0)|0);
     $54 = $53 << 24 >> 24;
     $55 = HEAP32[$__b>>2]|0;
     $56 = ((($55)) + 12|0);
     $57 = HEAP32[$56>>2]|0;
     $58 = ((($55)) + 16|0);
     $59 = HEAP32[$58>>2]|0;
     $60 = ($57|0)==($59|0);
     if ($60) {
      $61 = HEAP32[$55>>2]|0;
      $62 = ((($61)) + 40|0);
      $63 = HEAP32[$62>>2]|0;
      (FUNCTION_TABLE_ii[$63 & 1023]($55)|0);
      $$0$in = $__n;$$pre$i2$i$i7 = $157;$79 = $157;$__r$0$in = $54;
     } else {
      $64 = ((($57)) + 1|0);
      HEAP32[$56>>2] = $64;
      $$0$in = $__n;$$pre$i2$i$i7 = $157;$79 = $157;$__r$0$in = $54;
     }
     while(1) {
      $__r$0 = (($__r$0$in) + -48)|0;
      $$0 = (($$0$in) + -1)|0;
      $65 = HEAP32[$__b>>2]|0;
      $66 = ($65|0)==(0|0);
      do {
       if ($66) {
        $77 = 0;
       } else {
        $67 = ((($65)) + 12|0);
        $68 = HEAP32[$67>>2]|0;
        $69 = ((($65)) + 16|0);
        $70 = HEAP32[$69>>2]|0;
        $71 = ($68|0)==($70|0);
        if ($71) {
         $72 = HEAP32[$65>>2]|0;
         $73 = ((($72)) + 36|0);
         $74 = HEAP32[$73>>2]|0;
         $75 = (FUNCTION_TABLE_ii[$74 & 1023]($65)|0);
         $76 = ($75|0)==(-1);
         if ($76) {
          HEAP32[$__b>>2] = 0;
          $77 = 0;
          break;
         } else {
          $$pre$i$i$i3 = HEAP32[$__b>>2]|0;
          $77 = $$pre$i$i$i3;
          break;
         }
        } else {
         $77 = $65;
        }
       }
      } while(0);
      $78 = ($77|0)==(0|0);
      $80 = ($79|0)==(0|0);
      if ($80) {
       $$pre$i2$i$i20 = $$pre$i2$i$i7;$91 = 0;
      } else {
       $81 = ((($79)) + 12|0);
       $82 = HEAP32[$81>>2]|0;
       $83 = ((($79)) + 16|0);
       $84 = HEAP32[$83>>2]|0;
       $85 = ($82|0)==($84|0);
       if ($85) {
        $86 = HEAP32[$79>>2]|0;
        $87 = ((($86)) + 36|0);
        $88 = HEAP32[$87>>2]|0;
        $89 = (FUNCTION_TABLE_ii[$88 & 1023]($79)|0);
        $90 = ($89|0)==(-1);
        if ($90) {
         HEAP32[$__e>>2] = 0;
         $$pre$i2$i$i20 = 0;$91 = 0;
        } else {
         $$pre$i2$i$i20 = $$pre$i2$i$i7;$91 = $$pre$i2$i$i7;
        }
       } else {
        $$pre$i2$i$i20 = $$pre$i2$i$i7;$91 = $79;
       }
      }
      $92 = ($91|0)==(0|0);
      $tmp$i$i9 = $78 ^ $92;
      $93 = ($$0$in|0)>(1);
      $94 = $93 & $tmp$i$i9;
      $95 = HEAP32[$__b>>2]|0;
      if (!($94)) {
       $$lcssa = $95;$$pre$i2$i$i20$lcssa = $$pre$i2$i$i20;$__r$0$lcssa = $__r$0;
       break;
      }
      $96 = ((($95)) + 12|0);
      $97 = HEAP32[$96>>2]|0;
      $98 = ((($95)) + 16|0);
      $99 = HEAP32[$98>>2]|0;
      $100 = ($97|0)==($99|0);
      if ($100) {
       $101 = HEAP32[$95>>2]|0;
       $102 = ((($101)) + 36|0);
       $103 = HEAP32[$102>>2]|0;
       $104 = (FUNCTION_TABLE_ii[$103 & 1023]($95)|0);
       $$0$i$i10 = $104;
      } else {
       $105 = HEAP8[$97>>0]|0;
       $106 = $105&255;
       $$0$i$i10 = $106;
      }
      $107 = $$0$i$i10&255;
      $isascii1$i12 = ($107<<24>>24)>(-1);
      if (!($isascii1$i12)) {
       $$01 = $__r$0;
       break L16;
      }
      $sext24 = $$0$i$i10 << 24;
      $108 = $sext24 >> 24;
      $109 = HEAP32[$42>>2]|0;
      $110 = (($109) + ($108<<1)|0);
      $111 = HEAP16[$110>>1]|0;
      $112 = $111 & 2048;
      $113 = ($112<<16>>16)==(0);
      if ($113) {
       $$01 = $__r$0;
       break L16;
      }
      $114 = ($__r$0*10)|0;
      $115 = HEAP32[$__ct>>2]|0;
      $116 = ((($115)) + 36|0);
      $117 = HEAP32[$116>>2]|0;
      $118 = (FUNCTION_TABLE_iiii[$117 & 1023]($__ct,$107,0)|0);
      $119 = $118 << 24 >> 24;
      $120 = (($119) + ($114))|0;
      $121 = HEAP32[$__b>>2]|0;
      $122 = ((($121)) + 12|0);
      $123 = HEAP32[$122>>2]|0;
      $124 = ((($121)) + 16|0);
      $125 = HEAP32[$124>>2]|0;
      $126 = ($123|0)==($125|0);
      if ($126) {
       $127 = HEAP32[$121>>2]|0;
       $128 = ((($127)) + 40|0);
       $129 = HEAP32[$128>>2]|0;
       (FUNCTION_TABLE_ii[$129 & 1023]($121)|0);
       $$0$in = $$0;$$pre$i2$i$i7 = $$pre$i2$i$i20;$79 = $91;$__r$0$in = $120;
       continue;
      } else {
       $130 = ((($123)) + 1|0);
       HEAP32[$122>>2] = $130;
       $$0$in = $$0;$$pre$i2$i$i7 = $$pre$i2$i$i20;$79 = $91;$__r$0$in = $120;
       continue;
      }
     }
     $131 = ($$lcssa|0)==(0|0);
     do {
      if ($131) {
       $142 = 0;
      } else {
       $132 = ((($$lcssa)) + 12|0);
       $133 = HEAP32[$132>>2]|0;
       $134 = ((($$lcssa)) + 16|0);
       $135 = HEAP32[$134>>2]|0;
       $136 = ($133|0)==($135|0);
       if ($136) {
        $137 = HEAP32[$$lcssa>>2]|0;
        $138 = ((($137)) + 36|0);
        $139 = HEAP32[$138>>2]|0;
        $140 = (FUNCTION_TABLE_ii[$139 & 1023]($$lcssa)|0);
        $141 = ($140|0)==(-1);
        if ($141) {
         HEAP32[$__b>>2] = 0;
         $142 = 0;
         break;
        } else {
         $$pre$i$i$i16 = HEAP32[$__b>>2]|0;
         $142 = $$pre$i$i$i16;
         break;
        }
       } else {
        $142 = $$lcssa;
       }
      }
     } while(0);
     $143 = ($142|0)==(0|0);
     $144 = ($$pre$i2$i$i20$lcssa|0)==(0|0);
     do {
      if ($144) {
       label = 50;
      } else {
       $145 = ((($$pre$i2$i$i20$lcssa)) + 12|0);
       $146 = HEAP32[$145>>2]|0;
       $147 = ((($$pre$i2$i$i20$lcssa)) + 16|0);
       $148 = HEAP32[$147>>2]|0;
       $149 = ($146|0)==($148|0);
       if ($149) {
        $150 = HEAP32[$$pre$i2$i$i20$lcssa>>2]|0;
        $151 = ((($150)) + 36|0);
        $152 = HEAP32[$151>>2]|0;
        $153 = (FUNCTION_TABLE_ii[$152 & 1023]($$pre$i2$i$i20$lcssa)|0);
        $154 = ($153|0)==(-1);
        if ($154) {
         HEAP32[$__e>>2] = 0;
         label = 50;
         break;
        }
       }
       if ($143) {
        $$01 = $__r$0$lcssa;
        break L16;
       }
      }
     } while(0);
     if ((label|0) == 50) {
      if (!($143)) {
       $$01 = $__r$0$lcssa;
       break;
      }
     }
     $155 = HEAP32[$__err>>2]|0;
     $156 = $155 | 2;
     HEAP32[$__err>>2] = $156;
     $$01 = $__r$0$lcssa;
     break;
    }
   }
   $48 = HEAP32[$__err>>2]|0;
   $49 = $48 | 4;
   HEAP32[$__err>>2] = $49;
   $$01 = 0;
  }
 } while(0);
 return ($$01|0);
}
function __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$__e,$__err,$__ct,$__n) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 $__n = $__n|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i17 = 0, $$0$i$i$i$i2 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i23 = 0, $$0$i$i1$i$i8 = 0, $$0$i$i14 = 0, $$0$in = 0, $$01 = 0, $$lcssa = 0, $$pre$i$i$i = 0, $$pre$i$i$i19 = 0, $$pre$i$i$i4 = 0, $$pre$i3$i$i10 = 0, $$pre$i3$i$i25 = 0, $$pre$i3$i$i25$lcssa = 0, $0 = 0, $1 = 0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__r$0 = 0, $__r$0$in = 0, $__r$0$lcssa = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i20 = 0, $phitmp$i$i$i5 = 0, $phitmp$i4$i$i11 = 0, $tmp$i$i13 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__b>>2]|0;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $148 = 1;
  } else {
   $2 = ((($0)) + 12|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = ((($0)) + 16|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = ($3|0)==($5|0);
   if ($6) {
    $7 = HEAP32[$0>>2]|0;
    $8 = ((($7)) + 36|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = (FUNCTION_TABLE_ii[$9 & 1023]($0)|0);
    $$0$i$i$i$i = $10;
   } else {
    $11 = HEAP32[$3>>2]|0;
    $$0$i$i$i$i = $11;
   }
   $12 = ($$0$i$i$i$i|0)==(-1);
   if ($12) {
    HEAP32[$__b>>2] = 0;
    $148 = 1;
    break;
   } else {
    $$pre$i$i$i = HEAP32[$__b>>2]|0;
    $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
    $148 = $phitmp$i$i$i;
    break;
   }
  }
 } while(0);
 $13 = HEAP32[$__e>>2]|0;
 $14 = ($13|0)==(0|0);
 do {
  if ($14) {
   label = 14;
  } else {
   $15 = ((($13)) + 12|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = ((($13)) + 16|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = ($16|0)==($18|0);
   if ($19) {
    $20 = HEAP32[$13>>2]|0;
    $21 = ((($20)) + 36|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = (FUNCTION_TABLE_ii[$22 & 1023]($13)|0);
    $$0$i$i1$i$i = $23;
   } else {
    $24 = HEAP32[$16>>2]|0;
    $$0$i$i1$i$i = $24;
   }
   $25 = ($$0$i$i1$i$i|0)==(-1);
   if ($25) {
    HEAP32[$__e>>2] = 0;
    label = 14;
    break;
   } else {
    if ($148) {
     $149 = $13;
     label = 17;
     break;
    } else {
     label = 16;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 14) {
  if ($148) {
   label = 16;
  } else {
   $149 = 0;
   label = 17;
  }
 }
 L22: do {
  if ((label|0) == 16) {
   $26 = HEAP32[$__err>>2]|0;
   $27 = $26 | 6;
   HEAP32[$__err>>2] = $27;
   $$01 = 0;
  }
  else if ((label|0) == 17) {
   $28 = HEAP32[$__b>>2]|0;
   $29 = ((($28)) + 12|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = ((($28)) + 16|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = ($30|0)==($32|0);
   if ($33) {
    $34 = HEAP32[$28>>2]|0;
    $35 = ((($34)) + 36|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = (FUNCTION_TABLE_ii[$36 & 1023]($28)|0);
    $$0$i$i = $37;
   } else {
    $38 = HEAP32[$30>>2]|0;
    $$0$i$i = $38;
   }
   $39 = HEAP32[$__ct>>2]|0;
   $40 = ((($39)) + 12|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = (FUNCTION_TABLE_iiii[$41 & 1023]($__ct,2048,$$0$i$i)|0);
   if (!($42)) {
    $43 = HEAP32[$__err>>2]|0;
    $44 = $43 | 4;
    HEAP32[$__err>>2] = $44;
    $$01 = 0;
    break;
   }
   $45 = HEAP32[$__ct>>2]|0;
   $46 = ((($45)) + 52|0);
   $47 = HEAP32[$46>>2]|0;
   $48 = (FUNCTION_TABLE_iiii[$47 & 1023]($__ct,$$0$i$i,0)|0);
   $49 = $48 << 24 >> 24;
   $50 = HEAP32[$__b>>2]|0;
   $51 = ((($50)) + 12|0);
   $52 = HEAP32[$51>>2]|0;
   $53 = ((($50)) + 16|0);
   $54 = HEAP32[$53>>2]|0;
   $55 = ($52|0)==($54|0);
   if ($55) {
    $56 = HEAP32[$50>>2]|0;
    $57 = ((($56)) + 40|0);
    $58 = HEAP32[$57>>2]|0;
    (FUNCTION_TABLE_ii[$58 & 1023]($50)|0);
    $$0$in = $__n;$$pre$i3$i$i10 = $149;$73 = $149;$__r$0$in = $49;
   } else {
    $59 = ((($52)) + 4|0);
    HEAP32[$51>>2] = $59;
    $$0$in = $__n;$$pre$i3$i$i10 = $149;$73 = $149;$__r$0$in = $49;
   }
   while(1) {
    $__r$0 = (($__r$0$in) + -48)|0;
    $$0 = (($$0$in) + -1)|0;
    $60 = HEAP32[$__b>>2]|0;
    $61 = ($60|0)==(0|0);
    do {
     if ($61) {
      $87 = 1;
     } else {
      $62 = ((($60)) + 12|0);
      $63 = HEAP32[$62>>2]|0;
      $64 = ((($60)) + 16|0);
      $65 = HEAP32[$64>>2]|0;
      $66 = ($63|0)==($65|0);
      if ($66) {
       $67 = HEAP32[$60>>2]|0;
       $68 = ((($67)) + 36|0);
       $69 = HEAP32[$68>>2]|0;
       $70 = (FUNCTION_TABLE_ii[$69 & 1023]($60)|0);
       $$0$i$i$i$i2 = $70;
      } else {
       $71 = HEAP32[$63>>2]|0;
       $$0$i$i$i$i2 = $71;
      }
      $72 = ($$0$i$i$i$i2|0)==(-1);
      if ($72) {
       HEAP32[$__b>>2] = 0;
       $87 = 1;
       break;
      } else {
       $$pre$i$i$i4 = HEAP32[$__b>>2]|0;
       $phitmp$i$i$i5 = ($$pre$i$i$i4|0)==(0|0);
       $87 = $phitmp$i$i$i5;
       break;
      }
     }
    } while(0);
    $74 = ($73|0)==(0|0);
    do {
     if ($74) {
      $$pre$i3$i$i25 = $$pre$i3$i$i10;$150 = 0;$86 = 1;
     } else {
      $75 = ((($73)) + 12|0);
      $76 = HEAP32[$75>>2]|0;
      $77 = ((($73)) + 16|0);
      $78 = HEAP32[$77>>2]|0;
      $79 = ($76|0)==($78|0);
      if ($79) {
       $80 = HEAP32[$73>>2]|0;
       $81 = ((($80)) + 36|0);
       $82 = HEAP32[$81>>2]|0;
       $83 = (FUNCTION_TABLE_ii[$82 & 1023]($73)|0);
       $$0$i$i1$i$i8 = $83;
      } else {
       $84 = HEAP32[$76>>2]|0;
       $$0$i$i1$i$i8 = $84;
      }
      $85 = ($$0$i$i1$i$i8|0)==(-1);
      if ($85) {
       HEAP32[$__e>>2] = 0;
       $$pre$i3$i$i25 = 0;$150 = 0;$86 = 1;
       break;
      } else {
       $phitmp$i4$i$i11 = ($$pre$i3$i$i10|0)==(0|0);
       $$pre$i3$i$i25 = $$pre$i3$i$i10;$150 = $$pre$i3$i$i10;$86 = $phitmp$i4$i$i11;
       break;
      }
     }
    } while(0);
    $tmp$i$i13 = $87 ^ $86;
    $88 = ($$0$in|0)>(1);
    $89 = $88 & $tmp$i$i13;
    $90 = HEAP32[$__b>>2]|0;
    if (!($89)) {
     $$lcssa = $90;$$pre$i3$i$i25$lcssa = $$pre$i3$i$i25;$__r$0$lcssa = $__r$0;
     break;
    }
    $91 = ((($90)) + 12|0);
    $92 = HEAP32[$91>>2]|0;
    $93 = ((($90)) + 16|0);
    $94 = HEAP32[$93>>2]|0;
    $95 = ($92|0)==($94|0);
    if ($95) {
     $96 = HEAP32[$90>>2]|0;
     $97 = ((($96)) + 36|0);
     $98 = HEAP32[$97>>2]|0;
     $99 = (FUNCTION_TABLE_ii[$98 & 1023]($90)|0);
     $$0$i$i14 = $99;
    } else {
     $100 = HEAP32[$92>>2]|0;
     $$0$i$i14 = $100;
    }
    $101 = HEAP32[$__ct>>2]|0;
    $102 = ((($101)) + 12|0);
    $103 = HEAP32[$102>>2]|0;
    $104 = (FUNCTION_TABLE_iiii[$103 & 1023]($__ct,2048,$$0$i$i14)|0);
    if (!($104)) {
     $$01 = $__r$0;
     break L22;
    }
    $105 = ($__r$0*10)|0;
    $106 = HEAP32[$__ct>>2]|0;
    $107 = ((($106)) + 52|0);
    $108 = HEAP32[$107>>2]|0;
    $109 = (FUNCTION_TABLE_iiii[$108 & 1023]($__ct,$$0$i$i14,0)|0);
    $110 = $109 << 24 >> 24;
    $111 = (($110) + ($105))|0;
    $112 = HEAP32[$__b>>2]|0;
    $113 = ((($112)) + 12|0);
    $114 = HEAP32[$113>>2]|0;
    $115 = ((($112)) + 16|0);
    $116 = HEAP32[$115>>2]|0;
    $117 = ($114|0)==($116|0);
    if ($117) {
     $118 = HEAP32[$112>>2]|0;
     $119 = ((($118)) + 40|0);
     $120 = HEAP32[$119>>2]|0;
     (FUNCTION_TABLE_ii[$120 & 1023]($112)|0);
     $$0$in = $$0;$$pre$i3$i$i10 = $$pre$i3$i$i25;$73 = $150;$__r$0$in = $111;
     continue;
    } else {
     $121 = ((($114)) + 4|0);
     HEAP32[$113>>2] = $121;
     $$0$in = $$0;$$pre$i3$i$i10 = $$pre$i3$i$i25;$73 = $150;$__r$0$in = $111;
     continue;
    }
   }
   $122 = ($$lcssa|0)==(0|0);
   do {
    if ($122) {
     $151 = 1;
    } else {
     $123 = ((($$lcssa)) + 12|0);
     $124 = HEAP32[$123>>2]|0;
     $125 = ((($$lcssa)) + 16|0);
     $126 = HEAP32[$125>>2]|0;
     $127 = ($124|0)==($126|0);
     if ($127) {
      $128 = HEAP32[$$lcssa>>2]|0;
      $129 = ((($128)) + 36|0);
      $130 = HEAP32[$129>>2]|0;
      $131 = (FUNCTION_TABLE_ii[$130 & 1023]($$lcssa)|0);
      $$0$i$i$i$i17 = $131;
     } else {
      $132 = HEAP32[$124>>2]|0;
      $$0$i$i$i$i17 = $132;
     }
     $133 = ($$0$i$i$i$i17|0)==(-1);
     if ($133) {
      HEAP32[$__b>>2] = 0;
      $151 = 1;
      break;
     } else {
      $$pre$i$i$i19 = HEAP32[$__b>>2]|0;
      $phitmp$i$i$i20 = ($$pre$i$i$i19|0)==(0|0);
      $151 = $phitmp$i$i$i20;
      break;
     }
    }
   } while(0);
   $134 = ($$pre$i3$i$i25$lcssa|0)==(0|0);
   do {
    if ($134) {
     label = 60;
    } else {
     $135 = ((($$pre$i3$i$i25$lcssa)) + 12|0);
     $136 = HEAP32[$135>>2]|0;
     $137 = ((($$pre$i3$i$i25$lcssa)) + 16|0);
     $138 = HEAP32[$137>>2]|0;
     $139 = ($136|0)==($138|0);
     if ($139) {
      $140 = HEAP32[$$pre$i3$i$i25$lcssa>>2]|0;
      $141 = ((($140)) + 36|0);
      $142 = HEAP32[$141>>2]|0;
      $143 = (FUNCTION_TABLE_ii[$142 & 1023]($$pre$i3$i$i25$lcssa)|0);
      $$0$i$i1$i$i23 = $143;
     } else {
      $144 = HEAP32[$136>>2]|0;
      $$0$i$i1$i$i23 = $144;
     }
     $145 = ($$0$i$i1$i$i23|0)==(-1);
     if ($145) {
      HEAP32[$__e>>2] = 0;
      label = 60;
      break;
     } else {
      if ($151) {
       $$01 = $__r$0$lcssa;
       break L22;
      } else {
       break;
      }
     }
    }
   } while(0);
   if ((label|0) == 60) {
    if (!($151)) {
     $$01 = $__r$0$lcssa;
     break;
    }
   }
   $146 = HEAP32[$__err>>2]|0;
   $147 = $146 | 2;
   HEAP32[$__err>>2] = $147;
   $$01 = $__r$0$lcssa;
  }
 } while(0);
 return ($$01|0);
}
function __ZNSt3__119__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__b,$__n,$__e) {
 $__b = $__b|0;
 $__n = $__n|0;
 $__e = $__e|0;
 var $$ = 0, $$pr = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($__b)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)!=(473|0);
 $3 = HEAP32[$__e>>2]|0;
 $4 = HEAP32[$__b>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = ($7>>>0)<(2147483647);
 $9 = $7 << 1;
 $$ = $8 ? $9 : -1;
 $10 = HEAP32[$__n>>2]|0;
 $11 = $10;
 $12 = (($11) - ($6))|0;
 $13 = $2 ? $4 : 0;
 $14 = (_realloc($13,$$)|0);
 $15 = ($14|0)==(0|0);
 if ($15) {
  __ZSt17__throw_bad_allocv();
 }
 do {
  if ($2) {
   $16 = $14;
   HEAP32[$__b>>2] = $16;
   $25 = $14;
  } else {
   $$pr = HEAP32[$__b>>2]|0;
   $17 = $14;
   HEAP32[$__b>>2] = $17;
   $18 = ($$pr|0)==(0|0);
   if ($18) {
    $25 = $14;
   } else {
    $19 = HEAP32[$0>>2]|0;
    __THREW__ = 0;
    invoke_vi($19|0,($$pr|0));
    $20 = __THREW__; __THREW__ = 0;
    $21 = $20&1;
    if ($21) {
     $22 = ___cxa_find_matching_catch(0|0)|0;
     $23 = tempRet0;
     ___clang_call_terminate($22);
     // unreachable;
    } else {
     $$pre = HEAP32[$__b>>2]|0;
     $25 = $$pre;
     break;
    }
   }
  }
 } while(0);
 HEAP32[$0>>2] = (553);
 $24 = (($25) + ($12)|0);
 HEAP32[$__n>>2] = $24;
 $26 = HEAP32[$__b>>2]|0;
 $27 = (($26) + ($$)|0);
 HEAP32[$__e>>2] = $27;
 return;
}
function __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__b,$__n,$__e) {
 $__b = $__b|0;
 $__n = $__n|0;
 $__e = $__e|0;
 var $$ = 0, $$pr = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($__b)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)!=(473|0);
 $3 = HEAP32[$__e>>2]|0;
 $4 = HEAP32[$__b>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = ($7>>>0)<(2147483647);
 $9 = $7 << 1;
 $$ = $8 ? $9 : -1;
 $10 = HEAP32[$__n>>2]|0;
 $11 = $10;
 $12 = (($11) - ($6))|0;
 $13 = $12 >> 2;
 $14 = $2 ? $4 : 0;
 $15 = (_realloc($14,$$)|0);
 $16 = ($15|0)==(0|0);
 if ($16) {
  __ZSt17__throw_bad_allocv();
 }
 do {
  if ($2) {
   $17 = $15;
   HEAP32[$__b>>2] = $17;
   $27 = $15;
  } else {
   $$pr = HEAP32[$__b>>2]|0;
   $18 = $15;
   HEAP32[$__b>>2] = $18;
   $19 = ($$pr|0)==(0|0);
   if ($19) {
    $27 = $15;
   } else {
    $20 = HEAP32[$0>>2]|0;
    __THREW__ = 0;
    invoke_vi($20|0,($$pr|0));
    $21 = __THREW__; __THREW__ = 0;
    $22 = $21&1;
    if ($22) {
     $23 = ___cxa_find_matching_catch(0|0)|0;
     $24 = tempRet0;
     ___clang_call_terminate($23);
     // unreachable;
    } else {
     $$pre = HEAP32[$__b>>2]|0;
     $27 = $$pre;
     break;
    }
   }
  }
 } while(0);
 HEAP32[$0>>2] = (553);
 $25 = $$ >>> 2;
 $26 = (($27) + ($13<<2)|0);
 HEAP32[$__n>>2] = $26;
 $28 = HEAP32[$__b>>2]|0;
 $29 = (($28) + ($25<<2)|0);
 HEAP32[$__e>>2] = $29;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$03 = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$04 = 0, $phitmp$i = 0, $scevgep = 0, $scevgep1 = 0, $scevgep2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__first;
 $1 = HEAP8[$this>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $4 = $1&255;
  $5 = $4 >>> 1;
  $15 = $5;$16 = 10;$41 = $1;
 } else {
  $6 = ((($this)) + 4|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = HEAP32[$this>>2]|0;
  $9 = $8 & -2;
  $phitmp$i = (($9) + -1)|0;
  $10 = $8&255;
  $15 = $7;$16 = $phitmp$i;$41 = $10;
 }
 $11 = $__last;
 $12 = (($11) - ($0))|0;
 $13 = ($__last|0)==($__first|0);
 do {
  if (!($13)) {
   $14 = (($16) - ($15))|0;
   $17 = ($14>>>0)<($12>>>0);
   if ($17) {
    $18 = (($15) + ($12))|0;
    $19 = (($18) - ($16))|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this,$16,$19,$15,$15,0,0);
    $$pre = HEAP8[$this>>0]|0;
    $21 = $$pre;
   } else {
    $21 = $41;
   }
   $20 = $21 & 1;
   $22 = ($20<<24>>24)==(0);
   if ($22) {
    $25 = ((($this)) + 1|0);
    $29 = $25;
   } else {
    $23 = ((($this)) + 8|0);
    $24 = HEAP32[$23>>2]|0;
    $29 = $24;
   }
   $26 = (($15) - ($0))|0;
   $scevgep = (($__last) + ($26)|0);
   $scevgep1 = $scevgep;
   $27 = ($__first|0)==($__last|0);
   if (!($27)) {
    $28 = (($29) + ($15)|0);
    $$03 = $__first;$__p$04 = $28;
    while(1) {
     $30 = HEAP8[$$03>>0]|0;
     HEAP8[$__p$04>>0] = $30;
     $31 = ((($__p$04)) + 1|0);
     $32 = ((($$03)) + 1|0);
     $33 = ($32|0)==($__last|0);
     if ($33) {
      break;
     } else {
      $$03 = $32;$__p$04 = $31;
     }
    }
   }
   $scevgep2 = (($29) + ($scevgep1)|0);
   HEAP8[$scevgep2>>0] = 0;
   $34 = (($15) + ($12))|0;
   $35 = HEAP8[$this>>0]|0;
   $36 = $35 & 1;
   $37 = ($36<<24>>24)==(0);
   if ($37) {
    $39 = $34 << 1;
    $40 = $39&255;
    HEAP8[$this>>0] = $40;
    break;
   } else {
    $38 = ((($this)) + 4|0);
    HEAP32[$38>>2] = $34;
    break;
   }
  }
 } while(0);
 return ($this|0);
}
function __ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__b,$__n,$__e) {
 $__b = $__b|0;
 $__n = $__n|0;
 $__e = $__e|0;
 var $$ = 0, $$pr = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($__b)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)!=(473|0);
 $3 = HEAP32[$__e>>2]|0;
 $4 = HEAP32[$__b>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = ($7>>>0)<(2147483647);
 $9 = $7 << 1;
 $$ = $8 ? $9 : -1;
 $10 = HEAP32[$__n>>2]|0;
 $11 = $10;
 $12 = (($11) - ($6))|0;
 $13 = $12 >> 2;
 $14 = $2 ? $4 : 0;
 $15 = (_realloc($14,$$)|0);
 $16 = ($15|0)==(0|0);
 if ($16) {
  __ZSt17__throw_bad_allocv();
 }
 do {
  if ($2) {
   $17 = $15;
   HEAP32[$__b>>2] = $17;
   $27 = $15;
  } else {
   $$pr = HEAP32[$__b>>2]|0;
   $18 = $15;
   HEAP32[$__b>>2] = $18;
   $19 = ($$pr|0)==(0|0);
   if ($19) {
    $27 = $15;
   } else {
    $20 = HEAP32[$0>>2]|0;
    __THREW__ = 0;
    invoke_vi($20|0,($$pr|0));
    $21 = __THREW__; __THREW__ = 0;
    $22 = $21&1;
    if ($22) {
     $23 = ___cxa_find_matching_catch(0|0)|0;
     $24 = tempRet0;
     ___clang_call_terminate($23);
     // unreachable;
    } else {
     $$pre = HEAP32[$__b>>2]|0;
     $27 = $$pre;
     break;
    }
   }
  }
 } while(0);
 HEAP32[$0>>2] = (553);
 $25 = $$ >>> 2;
 $26 = (($27) + ($13<<2)|0);
 HEAP32[$__n>>2] = $26;
 $28 = HEAP32[$__b>>2]|0;
 $29 = (($28) + ($25<<2)|0);
 HEAP32[$__e>>2] = $29;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendIPwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$03 = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$04 = 0, $phitmp$i = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__first;
 $1 = HEAP8[$this>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $4 = $1&255;
  $5 = $4 >>> 1;
  $16 = $5;$17 = 1;$45 = $1;
 } else {
  $6 = ((($this)) + 4|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = HEAP32[$this>>2]|0;
  $9 = $8 & -2;
  $phitmp$i = (($9) + -1)|0;
  $10 = $8&255;
  $16 = $7;$17 = $phitmp$i;$45 = $10;
 }
 $11 = $__last;
 $12 = (($11) - ($0))|0;
 $13 = $12 >> 2;
 $14 = ($13|0)==(0);
 do {
  if (!($14)) {
   $15 = (($17) - ($16))|0;
   $18 = ($15>>>0)<($13>>>0);
   if ($18) {
    $19 = (($16) + ($13))|0;
    $20 = (($19) - ($17))|0;
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this,$17,$20,$16,$16,0,0);
    $$pre = HEAP8[$this>>0]|0;
    $22 = $$pre;
   } else {
    $22 = $45;
   }
   $21 = $22 & 1;
   $23 = ($21<<24>>24)==(0);
   if ($23) {
    $26 = ((($this)) + 4|0);
    $33 = $26;
   } else {
    $24 = ((($this)) + 8|0);
    $25 = HEAP32[$24>>2]|0;
    $33 = $25;
   }
   $27 = $__last;
   $28 = (($27) - ($0))|0;
   $29 = $28 >>> 2;
   $30 = (($16) + ($29))|0;
   $31 = ($__first|0)==($__last|0);
   if (!($31)) {
    $32 = (($33) + ($16<<2)|0);
    $$03 = $__first;$__p$04 = $32;
    while(1) {
     $34 = HEAP32[$$03>>2]|0;
     HEAP32[$__p$04>>2] = $34;
     $35 = ((($__p$04)) + 4|0);
     $36 = ((($$03)) + 4|0);
     $37 = ($36|0)==($__last|0);
     if ($37) {
      break;
     } else {
      $$03 = $36;$__p$04 = $35;
     }
    }
   }
   $scevgep = (($33) + ($30<<2)|0);
   HEAP32[$scevgep>>2] = 0;
   $38 = (($16) + ($13))|0;
   $39 = HEAP8[$this>>0]|0;
   $40 = $39 & 1;
   $41 = ($40<<24>>24)==(0);
   if ($41) {
    $43 = $38 << 1;
    $44 = $43&255;
    HEAP8[$this>>0] = $44;
    break;
   } else {
    $42 = ((($this)) + 4|0);
    HEAP32[$42>>2] = $38;
    break;
   }
  }
 } while(0);
 return ($this|0);
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEEC2Ej($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = 0;
 $0 = ((($this)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($this)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($this)) + 128|0);
 HEAP8[$2>>0] = 0;
 $3 = ($__n|0)==(0);
 do {
  if (!($3)) {
   __THREW__ = 0;
   invoke_vii(554,($this|0),($__n|0));
   $4 = __THREW__; __THREW__ = 0;
   $5 = $4&1;
   if ($5) {
    $6 = ___cxa_find_matching_catch()|0;
    $7 = tempRet0;
    __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($this);
    ___resumeException($6|0);
    // unreachable;
   } else {
    __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($this,$__n);
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7collateIcEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5608)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7collateIwEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5648)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_5ctypeIcEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6760)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_5ctypeIwEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6752)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7codecvtIcc11__mbstate_tEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6824)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7codecvtIwc11__mbstate_tEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6832)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7codecvtIDsc11__mbstate_tEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6888)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7codecvtIDic11__mbstate_tEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6896)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8numpunctIcEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6904)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8numpunctIwEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6912)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5720)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5832)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5896)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5960)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6280)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6344)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6408)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6472)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6512)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6552)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6592)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6632)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6056)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6152)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6184)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6216)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8messagesIcEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6672)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8messagesIwEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6712)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($this) {
 $this = $this|0;
 var $$lcssa = 0, $$pre$i$i = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ($0|0)==(0|0);
 do {
  if (!($1)) {
   $2 = ((($this)) + 4|0);
   $$pre$i$i = HEAP32[$2>>2]|0;
   $3 = ($$pre$i$i|0)==($0|0);
   if (!($3)) {
    $5 = $$pre$i$i;
    while(1) {
     $4 = ((($5)) + -4|0);
     $6 = ($4|0)==($0|0);
     if ($6) {
      $$lcssa = $4;
      break;
     } else {
      $5 = $4;
     }
    }
    HEAP32[$2>>2] = $$lcssa;
   }
   $7 = ((($this)) + 16|0);
   $8 = ($7|0)==($0|0);
   if ($8) {
    $9 = ((($this)) + 128|0);
    HEAP8[$9>>0] = 0;
    break;
   } else {
    __ZdlPv($0);
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE6resizeEj($this,$__sz) {
 $this = $this|0;
 $__sz = $__sz|0;
 var $$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$this>>2]|0;
 $3 = $1;
 $4 = $2;
 $5 = (($3) - ($4))|0;
 $6 = $5 >> 2;
 $7 = ($6>>>0)<($__sz>>>0);
 if ($7) {
  $8 = (($__sz) - ($6))|0;
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($this,$8);
 } else {
  $9 = ($6>>>0)>($__sz>>>0);
  if ($9) {
   $10 = (($2) + ($__sz<<2)|0);
   $11 = ($1|0)==($10|0);
   if (!($11)) {
    $13 = $1;
    while(1) {
     $12 = ((($13)) + -4|0);
     $14 = ($12|0)==($10|0);
     if ($14) {
      $$lcssa = $12;
      break;
     } else {
      $13 = $12;
     }
    }
    HEAP32[$0>>2] = $$lcssa;
   }
  }
 }
 return;
}
function __ZNKSt3__16locale5__imp9has_facetEl($this,$id) {
 $this = $this|0;
 $id = $id|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $1;
 $5 = $3;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 2;
 $8 = ($7>>>0)>($id>>>0);
 if ($8) {
  $9 = (($3) + ($id<<2)|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = ($10|0)!=(0|0);
  $12 = $11;
 } else {
  $12 = 0;
 }
 return ($12|0);
}
function __ZNSt3__117__call_once_proxyINS_5tupleIJNS_12_GLOBAL__N_111__fake_bindEEEEEEvPv($__vp) {
 $__vp = $__vp|0;
 var $$field = 0, $$field2 = 0, $$index1 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($__vp)) + 4|0);
 $$field = HEAP32[$0>>2]|0;
 $$index1 = ((($0)) + 4|0);
 $$field2 = HEAP32[$$index1>>2]|0;
 $1 = HEAP32[$__vp>>2]|0;
 $2 = $$field2 >> 1;
 $3 = (($1) + ($2)|0);
 $4 = $$field2 & 1;
 $5 = ($4|0)==(0);
 if ($5) {
  $9 = $$field;
  $10 = $9;
 } else {
  $6 = HEAP32[$3>>2]|0;
  $7 = (($6) + ($$field)|0);
  $8 = HEAP32[$7>>2]|0;
  $10 = $8;
 }
 FUNCTION_TABLE_vi[$10 & 1023]($3);
 return;
}
function __ZNSt3__1L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$pre = 0, $$pre1 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 $0 = $mode & 2;
 $1 = ($0|0)==(0);
 $$pre1 = $to_end;
 if ($1) {
  label = 4;
 } else {
  $2 = $to;
  $3 = (($$pre1) - ($2))|0;
  $4 = ($3|0)<(3);
  if ($4) {
   $$0 = 1;
  } else {
   $5 = ((($to)) + 1|0);
   HEAP32[$to_nxt>>2] = $5;
   HEAP8[$to>>0] = -17;
   $6 = HEAP32[$to_nxt>>2]|0;
   $7 = ((($6)) + 1|0);
   HEAP32[$to_nxt>>2] = $7;
   HEAP8[$6>>0] = -69;
   $8 = HEAP32[$to_nxt>>2]|0;
   $9 = ((($8)) + 1|0);
   HEAP32[$to_nxt>>2] = $9;
   HEAP8[$8>>0] = -65;
   label = 4;
  }
 }
 L4: do {
  if ((label|0) == 4) {
   $10 = $frm_end;
   $$pre = HEAP32[$frm_nxt>>2]|0;
   $11 = ($$pre>>>0)<($frm_end>>>0);
   if ($11) {
    $13 = $$pre;
    while(1) {
     $12 = HEAP16[$13>>1]|0;
     $14 = $12&65535;
     $15 = ($14>>>0)>($Maxcode>>>0);
     if ($15) {
      $$0 = 2;
      break L4;
     }
     $16 = ($12&65535)<(128);
     do {
      if ($16) {
       $17 = HEAP32[$to_nxt>>2]|0;
       $18 = $17;
       $19 = (($$pre1) - ($18))|0;
       $20 = ($19|0)<(1);
       if ($20) {
        $$0 = 1;
        break L4;
       }
       $21 = $12&255;
       $22 = ((($17)) + 1|0);
       HEAP32[$to_nxt>>2] = $22;
       HEAP8[$17>>0] = $21;
      } else {
       $23 = ($12&65535)<(2048);
       if ($23) {
        $24 = HEAP32[$to_nxt>>2]|0;
        $25 = $24;
        $26 = (($$pre1) - ($25))|0;
        $27 = ($26|0)<(2);
        if ($27) {
         $$0 = 1;
         break L4;
        }
        $28 = $14 >>> 6;
        $29 = $28 | 192;
        $30 = $29&255;
        $31 = ((($24)) + 1|0);
        HEAP32[$to_nxt>>2] = $31;
        HEAP8[$24>>0] = $30;
        $32 = $14 & 63;
        $33 = $32 | 128;
        $34 = $33&255;
        $35 = HEAP32[$to_nxt>>2]|0;
        $36 = ((($35)) + 1|0);
        HEAP32[$to_nxt>>2] = $36;
        HEAP8[$35>>0] = $34;
        break;
       }
       $37 = ($12&65535)<(55296);
       if ($37) {
        $38 = HEAP32[$to_nxt>>2]|0;
        $39 = $38;
        $40 = (($$pre1) - ($39))|0;
        $41 = ($40|0)<(3);
        if ($41) {
         $$0 = 1;
         break L4;
        }
        $42 = $14 >>> 12;
        $43 = $42 | 224;
        $44 = $43&255;
        $45 = ((($38)) + 1|0);
        HEAP32[$to_nxt>>2] = $45;
        HEAP8[$38>>0] = $44;
        $46 = $14 >>> 6;
        $47 = $46 & 63;
        $48 = $47 | 128;
        $49 = $48&255;
        $50 = HEAP32[$to_nxt>>2]|0;
        $51 = ((($50)) + 1|0);
        HEAP32[$to_nxt>>2] = $51;
        HEAP8[$50>>0] = $49;
        $52 = $14 & 63;
        $53 = $52 | 128;
        $54 = $53&255;
        $55 = HEAP32[$to_nxt>>2]|0;
        $56 = ((($55)) + 1|0);
        HEAP32[$to_nxt>>2] = $56;
        HEAP8[$55>>0] = $54;
        break;
       }
       $57 = ($12&65535)<(56320);
       if (!($57)) {
        $109 = ($12&65535)<(57344);
        if ($109) {
         $$0 = 2;
         break L4;
        }
        $110 = HEAP32[$to_nxt>>2]|0;
        $111 = $110;
        $112 = (($$pre1) - ($111))|0;
        $113 = ($112|0)<(3);
        if ($113) {
         $$0 = 1;
         break L4;
        }
        $114 = $14 >>> 12;
        $115 = $114 | 224;
        $116 = $115&255;
        $117 = ((($110)) + 1|0);
        HEAP32[$to_nxt>>2] = $117;
        HEAP8[$110>>0] = $116;
        $118 = $14 >>> 6;
        $119 = $118 & 63;
        $120 = $119 | 128;
        $121 = $120&255;
        $122 = HEAP32[$to_nxt>>2]|0;
        $123 = ((($122)) + 1|0);
        HEAP32[$to_nxt>>2] = $123;
        HEAP8[$122>>0] = $121;
        $124 = $14 & 63;
        $125 = $124 | 128;
        $126 = $125&255;
        $127 = HEAP32[$to_nxt>>2]|0;
        $128 = ((($127)) + 1|0);
        HEAP32[$to_nxt>>2] = $128;
        HEAP8[$127>>0] = $126;
        break;
       }
       $58 = $13;
       $59 = (($10) - ($58))|0;
       $60 = ($59|0)<(4);
       if ($60) {
        $$0 = 1;
        break L4;
       }
       $61 = ((($13)) + 2|0);
       $62 = HEAP16[$61>>1]|0;
       $63 = $62&65535;
       $64 = $63 & 64512;
       $65 = ($64|0)==(56320);
       if (!($65)) {
        $$0 = 2;
        break L4;
       }
       $66 = HEAP32[$to_nxt>>2]|0;
       $67 = $66;
       $68 = (($$pre1) - ($67))|0;
       $69 = ($68|0)<(4);
       if ($69) {
        $$0 = 1;
        break L4;
       }
       $70 = $14 & 960;
       $71 = $70 << 10;
       $72 = (($71) + 65536)|0;
       $73 = $14 << 10;
       $74 = $73 & 64512;
       $75 = $72 | $74;
       $76 = $63 & 1023;
       $77 = $75 | $76;
       $78 = ($77>>>0)>($Maxcode>>>0);
       if ($78) {
        $$0 = 2;
        break L4;
       }
       HEAP32[$frm_nxt>>2] = $61;
       $79 = $70 >>> 6;
       $80 = (($79) + 1)|0;
       $81 = $80 >>> 2;
       $82 = $81 | 240;
       $83 = $82&255;
       $84 = HEAP32[$to_nxt>>2]|0;
       $85 = ((($84)) + 1|0);
       HEAP32[$to_nxt>>2] = $85;
       HEAP8[$84>>0] = $83;
       $86 = $80 << 4;
       $87 = $86 & 48;
       $88 = $14 >>> 2;
       $89 = $88 & 15;
       $90 = $89 | $87;
       $91 = $90 | 128;
       $92 = $91&255;
       $93 = HEAP32[$to_nxt>>2]|0;
       $94 = ((($93)) + 1|0);
       HEAP32[$to_nxt>>2] = $94;
       HEAP8[$93>>0] = $92;
       $95 = $14 << 4;
       $96 = $95 & 48;
       $97 = $63 >>> 6;
       $98 = $97 & 15;
       $99 = $96 | $98;
       $100 = $99 | 128;
       $101 = $100&255;
       $102 = HEAP32[$to_nxt>>2]|0;
       $103 = ((($102)) + 1|0);
       HEAP32[$to_nxt>>2] = $103;
       HEAP8[$102>>0] = $101;
       $104 = $63 & 63;
       $105 = $104 | 128;
       $106 = $105&255;
       $107 = HEAP32[$to_nxt>>2]|0;
       $108 = ((($107)) + 1|0);
       HEAP32[$to_nxt>>2] = $108;
       HEAP8[$107>>0] = $106;
      }
     } while(0);
     $129 = HEAP32[$frm_nxt>>2]|0;
     $130 = ((($129)) + 2|0);
     HEAP32[$frm_nxt>>2] = $130;
     $131 = ($130>>>0)<($frm_end>>>0);
     if ($131) {
      $13 = $130;
     } else {
      $$0 = 0;
      break;
     }
    }
   } else {
    $$0 = 0;
   }
  }
 } while(0);
 return ($$0|0);
}
function __ZNSt3__1L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$lcssa = 0, $$off = 0, $$pre = 0, $$pre$phiZ2D = 0, $$pre$pre = 0, $$pre4 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 $0 = $mode & 4;
 $1 = ($0|0)==(0);
 if ($1) {
  $$pre4 = $frm_end;
  $$pre = $to;$$pre$phiZ2D = $$pre4;
 } else {
  $2 = HEAP32[$frm_nxt>>2]|0;
  $3 = $frm_end;
  $4 = $2;
  $5 = (($3) - ($4))|0;
  $6 = ($5|0)>(2);
  if ($6) {
   $7 = HEAP8[$2>>0]|0;
   $8 = ($7<<24>>24)==(-17);
   if ($8) {
    $9 = ((($2)) + 1|0);
    $10 = HEAP8[$9>>0]|0;
    $11 = ($10<<24>>24)==(-69);
    if ($11) {
     $12 = ((($2)) + 2|0);
     $13 = HEAP8[$12>>0]|0;
     $14 = ($13<<24>>24)==(-65);
     if ($14) {
      $15 = ((($2)) + 3|0);
      HEAP32[$frm_nxt>>2] = $15;
      $$pre$pre = HEAP32[$to_nxt>>2]|0;
      $$pre = $$pre$pre;$$pre$phiZ2D = $3;
     } else {
      $$pre = $to;$$pre$phiZ2D = $3;
     }
    } else {
     $$pre = $to;$$pre$phiZ2D = $3;
    }
   } else {
    $$pre = $to;$$pre$phiZ2D = $3;
   }
  } else {
   $$pre = $to;$$pre$phiZ2D = $3;
  }
 }
 $16 = $to_end;
 $17 = HEAP32[$frm_nxt>>2]|0;
 $18 = ($17>>>0)<($frm_end>>>0);
 $19 = ($$pre>>>0)<($to_end>>>0);
 $20 = $18 & $19;
 L9: do {
  if ($20) {
   $22 = $17;$27 = $$pre;
   while(1) {
    $21 = HEAP8[$22>>0]|0;
    $23 = $21&255;
    $24 = ($23>>>0)>($Maxcode>>>0);
    if ($24) {
     $$0 = 2;
     break L9;
    }
    $25 = ($21<<24>>24)>(-1);
    do {
     if ($25) {
      $26 = $21&255;
      HEAP16[$27>>1] = $26;
      $28 = ((($22)) + 1|0);
      HEAP32[$frm_nxt>>2] = $28;
     } else {
      $29 = ($21&255)<(194);
      if ($29) {
       $$0 = 2;
       break L9;
      }
      $30 = ($21&255)<(224);
      if ($30) {
       $31 = $22;
       $32 = (($$pre$phiZ2D) - ($31))|0;
       $33 = ($32|0)<(2);
       if ($33) {
        $$0 = 1;
        break L9;
       }
       $34 = ((($22)) + 1|0);
       $35 = HEAP8[$34>>0]|0;
       $36 = $35&255;
       $37 = $36 & 192;
       $38 = ($37|0)==(128);
       if (!($38)) {
        $$0 = 2;
        break L9;
       }
       $39 = $23 << 6;
       $40 = $39 & 1984;
       $41 = $36 & 63;
       $42 = $41 | $40;
       $43 = ($42>>>0)>($Maxcode>>>0);
       if ($43) {
        $$0 = 2;
        break L9;
       }
       $44 = $42&65535;
       HEAP16[$27>>1] = $44;
       $45 = ((($22)) + 2|0);
       HEAP32[$frm_nxt>>2] = $45;
       break;
      }
      $46 = ($21&255)<(240);
      if ($46) {
       $47 = $22;
       $48 = (($$pre$phiZ2D) - ($47))|0;
       $49 = ($48|0)<(3);
       if ($49) {
        $$0 = 1;
        break L9;
       }
       $50 = ((($22)) + 1|0);
       $51 = HEAP8[$50>>0]|0;
       $52 = ((($22)) + 2|0);
       $53 = HEAP8[$52>>0]|0;
       if ((($23|0) == 237)) {
        $56 = $51 & -32;
        $57 = ($56<<24>>24)==(-128);
        if (!($57)) {
         $$0 = 2;
         break L9;
        }
       } else if ((($23|0) == 224)) {
        $54 = $51 & -32;
        $55 = ($54<<24>>24)==(-96);
        if (!($55)) {
         $$0 = 2;
         break L9;
        }
       } else {
        $58 = $51 & -64;
        $59 = ($58<<24>>24)==(-128);
        if (!($59)) {
         $$0 = 2;
         break L9;
        }
       }
       $60 = $53&255;
       $61 = $60 & 192;
       $62 = ($61|0)==(128);
       if (!($62)) {
        $$0 = 2;
        break L9;
       }
       $63 = $23 << 12;
       $64 = $51&255;
       $65 = $64 << 6;
       $66 = $65 & 4032;
       $67 = $66 | $63;
       $68 = $60 & 63;
       $69 = $67 | $68;
       $70 = $69 & 65535;
       $71 = ($70>>>0)>($Maxcode>>>0);
       if ($71) {
        $$0 = 2;
        break L9;
       }
       $72 = $69&65535;
       HEAP16[$27>>1] = $72;
       $73 = ((($22)) + 3|0);
       HEAP32[$frm_nxt>>2] = $73;
       break;
      }
      $74 = ($21&255)<(245);
      if (!($74)) {
       $$0 = 2;
       break L9;
      }
      $75 = $22;
      $76 = (($$pre$phiZ2D) - ($75))|0;
      $77 = ($76|0)<(4);
      if ($77) {
       $$0 = 1;
       break L9;
      }
      $78 = ((($22)) + 1|0);
      $79 = HEAP8[$78>>0]|0;
      $80 = ((($22)) + 2|0);
      $81 = HEAP8[$80>>0]|0;
      $82 = ((($22)) + 3|0);
      $83 = HEAP8[$82>>0]|0;
      if ((($23|0) == 240)) {
       $$off = (($79) + 112)<<24>>24;
       $84 = ($$off&255)<(48);
       if (!($84)) {
        $$0 = 2;
        break L9;
       }
      } else if ((($23|0) == 244)) {
       $85 = $79 & -16;
       $86 = ($85<<24>>24)==(-128);
       if (!($86)) {
        $$0 = 2;
        break L9;
       }
      } else {
       $87 = $79 & -64;
       $88 = ($87<<24>>24)==(-128);
       if (!($88)) {
        $$0 = 2;
        break L9;
       }
      }
      $89 = $81&255;
      $90 = $89 & 192;
      $91 = ($90|0)==(128);
      if (!($91)) {
       $$0 = 2;
       break L9;
      }
      $92 = $83&255;
      $93 = $92 & 192;
      $94 = ($93|0)==(128);
      if (!($94)) {
       $$0 = 2;
       break L9;
      }
      $95 = $27;
      $96 = (($16) - ($95))|0;
      $97 = ($96|0)<(4);
      if ($97) {
       $$0 = 1;
       break L9;
      }
      $98 = $23 & 7;
      $99 = $98 << 18;
      $100 = $79&255;
      $101 = $100 << 12;
      $102 = $101 & 258048;
      $103 = $102 | $99;
      $104 = $89 << 6;
      $105 = $104 & 4032;
      $106 = $103 | $105;
      $107 = $92 & 63;
      $108 = $106 | $107;
      $109 = ($108>>>0)>($Maxcode>>>0);
      if ($109) {
       $$0 = 2;
       break L9;
      }
      $110 = $98 << 2;
      $111 = $100 >>> 4;
      $112 = $111 & 3;
      $113 = $112 | $110;
      $114 = $113 << 6;
      $115 = (($114) + 16320)|0;
      $116 = $100 << 2;
      $117 = $116 & 60;
      $118 = $89 >>> 4;
      $119 = $118 & 3;
      $120 = $117 | $119;
      $121 = $120 | $115;
      $122 = $121 | 55296;
      $123 = $122&65535;
      HEAP16[$27>>1] = $123;
      $124 = $104 & 960;
      $125 = $107 | $124;
      $126 = $125 | 56320;
      $127 = $126&65535;
      $128 = ((($27)) + 2|0);
      HEAP32[$to_nxt>>2] = $128;
      HEAP16[$128>>1] = $127;
      $129 = HEAP32[$frm_nxt>>2]|0;
      $130 = ((($129)) + 4|0);
      HEAP32[$frm_nxt>>2] = $130;
     }
    } while(0);
    $131 = HEAP32[$to_nxt>>2]|0;
    $132 = ((($131)) + 2|0);
    HEAP32[$to_nxt>>2] = $132;
    $133 = HEAP32[$frm_nxt>>2]|0;
    $134 = ($133>>>0)<($frm_end>>>0);
    $135 = ($132>>>0)<($to_end>>>0);
    $136 = $134 & $135;
    if ($136) {
     $22 = $133;$27 = $132;
    } else {
     $$lcssa = $134;
     label = 39;
     break;
    }
   }
  } else {
   $$lcssa = $18;
   label = 39;
  }
 } while(0);
 if ((label|0) == 39) {
  $137 = $$lcssa&1;
  $$0 = $137;
 }
 return ($$0|0);
}
function __ZNSt3__1L20utf8_to_utf16_lengthEPKhS1_jmNS_12codecvt_modeE($frm,$frm_end,$mx,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$frm = 0, $$lcssa = 0, $$lcssa82 = 0, $$lcssa83 = 0, $$lcssa84 = 0, $$lcssa85 = 0, $$lcssa86 = 0, $$off = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $frm_nxt$1$lcssa = 0, $frm_nxt$1$ph = 0, $frm_nxt$150 = 0, $frm_nxt$2 = 0, $nchar16_t$049 = 0, $nchar16_t$1 = 0, $or$cond = 0, $or$cond2 = 0, $or$cond48 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $mode & 4;
 $1 = ($0|0)==(0);
 $$pre = $frm_end;
 if ($1) {
  $frm_nxt$1$ph = $frm;
 } else {
  $2 = $frm;
  $3 = (($$pre) - ($2))|0;
  $4 = ($3|0)>(2);
  if ($4) {
   $5 = HEAP8[$frm>>0]|0;
   $6 = ($5<<24>>24)==(-17);
   if ($6) {
    $7 = ((($frm)) + 1|0);
    $8 = HEAP8[$7>>0]|0;
    $9 = ($8<<24>>24)==(-69);
    if ($9) {
     $10 = ((($frm)) + 2|0);
     $11 = HEAP8[$10>>0]|0;
     $12 = ($11<<24>>24)==(-65);
     $13 = ((($frm)) + 3|0);
     $$frm = $12 ? $13 : $frm;
     $frm_nxt$1$ph = $$frm;
    } else {
     $frm_nxt$1$ph = $frm;
    }
   } else {
    $frm_nxt$1$ph = $frm;
   }
  } else {
   $frm_nxt$1$ph = $frm;
  }
 }
 $14 = ($frm_nxt$1$ph>>>0)<($frm_end>>>0);
 $15 = ($mx|0)!=(0);
 $or$cond48 = $15 & $14;
 L7: do {
  if ($or$cond48) {
   $frm_nxt$150 = $frm_nxt$1$ph;$nchar16_t$049 = 0;
   L8: while(1) {
    $16 = HEAP8[$frm_nxt$150>>0]|0;
    $17 = $16&255;
    $18 = ($17>>>0)>($Maxcode>>>0);
    if ($18) {
     $frm_nxt$1$lcssa = $frm_nxt$150;
     label = 42;
     break L7;
    }
    $19 = ($16<<24>>24)>(-1);
    do {
     if ($19) {
      $20 = ((($frm_nxt$150)) + 1|0);
      $frm_nxt$2 = $20;$nchar16_t$1 = $nchar16_t$049;
     } else {
      $21 = ($16&255)<(194);
      if ($21) {
       $frm_nxt$1$lcssa = $frm_nxt$150;
       label = 42;
       break L7;
      }
      $22 = ($16&255)<(224);
      if ($22) {
       $23 = $frm_nxt$150;
       $24 = (($$pre) - ($23))|0;
       $25 = ($24|0)<(2);
       if ($25) {
        $frm_nxt$1$lcssa = $frm_nxt$150;
        label = 42;
        break L7;
       }
       $26 = ((($frm_nxt$150)) + 1|0);
       $27 = HEAP8[$26>>0]|0;
       $28 = $27&255;
       $29 = $28 & 192;
       $30 = ($29|0)==(128);
       if (!($30)) {
        $frm_nxt$1$lcssa = $frm_nxt$150;
        label = 42;
        break L7;
       }
       $31 = $17 << 6;
       $32 = $31 & 1984;
       $33 = $28 & 63;
       $34 = $33 | $32;
       $35 = ($34>>>0)>($Maxcode>>>0);
       if ($35) {
        $frm_nxt$1$lcssa = $frm_nxt$150;
        label = 42;
        break L7;
       }
       $36 = ((($frm_nxt$150)) + 2|0);
       $frm_nxt$2 = $36;$nchar16_t$1 = $nchar16_t$049;
       break;
      }
      $37 = ($16&255)<(240);
      if ($37) {
       $38 = $frm_nxt$150;
       $39 = (($$pre) - ($38))|0;
       $40 = ($39|0)<(3);
       if ($40) {
        $frm_nxt$1$lcssa = $frm_nxt$150;
        label = 42;
        break L7;
       }
       $41 = ((($frm_nxt$150)) + 1|0);
       $42 = HEAP8[$41>>0]|0;
       $43 = ((($frm_nxt$150)) + 2|0);
       $44 = HEAP8[$43>>0]|0;
       if ((($17|0) == 237)) {
        $49 = $42 & -32;
        $50 = ($49<<24>>24)==(-128);
        if (!($50)) {
         $$lcssa84 = $38;
         label = 22;
         break L8;
        }
       } else if ((($17|0) == 224)) {
        $45 = $42 & -32;
        $46 = ($45<<24>>24)==(-96);
        if (!($46)) {
         $$lcssa85 = $38;
         label = 20;
         break L8;
        }
       } else {
        $53 = $42 & -64;
        $54 = ($53<<24>>24)==(-128);
        if (!($54)) {
         $$lcssa86 = $38;
         label = 24;
         break L8;
        }
       }
       $57 = $44&255;
       $58 = $57 & 192;
       $59 = ($58|0)==(128);
       if (!($59)) {
        $frm_nxt$1$lcssa = $frm_nxt$150;
        label = 42;
        break L7;
       }
       $60 = $17 << 12;
       $61 = $60 & 61440;
       $62 = $42&255;
       $63 = $62 << 6;
       $64 = $63 & 4032;
       $65 = $64 | $61;
       $66 = $57 & 63;
       $67 = $65 | $66;
       $68 = ($67>>>0)>($Maxcode>>>0);
       if ($68) {
        $frm_nxt$1$lcssa = $frm_nxt$150;
        label = 42;
        break L7;
       }
       $69 = ((($frm_nxt$150)) + 3|0);
       $frm_nxt$2 = $69;$nchar16_t$1 = $nchar16_t$049;
       break;
      }
      $70 = ($16&255)<(245);
      if (!($70)) {
       $frm_nxt$1$lcssa = $frm_nxt$150;
       label = 42;
       break L7;
      }
      $71 = $frm_nxt$150;
      $72 = (($$pre) - ($71))|0;
      $73 = ($72|0)<(4);
      $74 = (($mx) - ($nchar16_t$049))|0;
      $75 = ($74>>>0)<(2);
      $or$cond2 = $75 | $73;
      if ($or$cond2) {
       $frm_nxt$1$lcssa = $frm_nxt$150;
       label = 42;
       break L7;
      }
      $76 = ((($frm_nxt$150)) + 1|0);
      $77 = HEAP8[$76>>0]|0;
      $78 = ((($frm_nxt$150)) + 2|0);
      $79 = HEAP8[$78>>0]|0;
      $80 = ((($frm_nxt$150)) + 3|0);
      $81 = HEAP8[$80>>0]|0;
      if ((($17|0) == 240)) {
       $$off = (($77) + 112)<<24>>24;
       $82 = ($$off&255)<(48);
       if (!($82)) {
        $$lcssa82 = $71;
        label = 32;
        break L8;
       }
      } else if ((($17|0) == 244)) {
       $85 = $77 & -16;
       $86 = ($85<<24>>24)==(-128);
       if (!($86)) {
        $$lcssa = $71;
        label = 34;
        break L8;
       }
      } else {
       $89 = $77 & -64;
       $90 = ($89<<24>>24)==(-128);
       if (!($90)) {
        $$lcssa83 = $71;
        label = 36;
        break L8;
       }
      }
      $93 = $79&255;
      $94 = $93 & 192;
      $95 = ($94|0)==(128);
      if (!($95)) {
       $frm_nxt$1$lcssa = $frm_nxt$150;
       label = 42;
       break L7;
      }
      $96 = $81&255;
      $97 = $96 & 192;
      $98 = ($97|0)==(128);
      if (!($98)) {
       $frm_nxt$1$lcssa = $frm_nxt$150;
       label = 42;
       break L7;
      }
      $99 = $17 << 18;
      $100 = $99 & 1835008;
      $101 = $77&255;
      $102 = $101 << 12;
      $103 = $102 & 258048;
      $104 = $103 | $100;
      $105 = $93 << 6;
      $106 = $105 & 4032;
      $107 = $104 | $106;
      $108 = $96 & 63;
      $109 = $107 | $108;
      $110 = ($109>>>0)>($Maxcode>>>0);
      if ($110) {
       $frm_nxt$1$lcssa = $frm_nxt$150;
       label = 42;
       break L7;
      }
      $111 = (($nchar16_t$049) + 1)|0;
      $112 = ((($frm_nxt$150)) + 4|0);
      $frm_nxt$2 = $112;$nchar16_t$1 = $111;
     }
    } while(0);
    $113 = (($nchar16_t$1) + 1)|0;
    $114 = ($frm_nxt$2>>>0)<($frm_end>>>0);
    $115 = ($113>>>0)<($mx>>>0);
    $or$cond = $115 & $114;
    if ($or$cond) {
     $frm_nxt$150 = $frm_nxt$2;$nchar16_t$049 = $113;
    } else {
     $frm_nxt$1$lcssa = $frm_nxt$2;
     label = 42;
     break L7;
    }
   }
   if ((label|0) == 20) {
    $47 = $frm;
    $48 = (($$lcssa85) - ($47))|0;
    $$0 = $48;
    break;
   }
   else if ((label|0) == 22) {
    $51 = $frm;
    $52 = (($$lcssa84) - ($51))|0;
    $$0 = $52;
    break;
   }
   else if ((label|0) == 24) {
    $55 = $frm;
    $56 = (($$lcssa86) - ($55))|0;
    $$0 = $56;
    break;
   }
   else if ((label|0) == 32) {
    $83 = $frm;
    $84 = (($$lcssa82) - ($83))|0;
    $$0 = $84;
    break;
   }
   else if ((label|0) == 34) {
    $87 = $frm;
    $88 = (($$lcssa) - ($87))|0;
    $$0 = $88;
    break;
   }
   else if ((label|0) == 36) {
    $91 = $frm;
    $92 = (($$lcssa83) - ($91))|0;
    $$0 = $92;
    break;
   }
  } else {
   $frm_nxt$1$lcssa = $frm_nxt$1$ph;
   label = 42;
  }
 } while(0);
 if ((label|0) == 42) {
  $116 = $frm_nxt$1$lcssa;
  $117 = $frm;
  $118 = (($116) - ($117))|0;
  $$0 = $118;
 }
 return ($$0|0);
}
function __ZNSt3__1L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$pre = 0, $$pre1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 $0 = $mode & 2;
 $1 = ($0|0)==(0);
 $$pre1 = $to_end;
 if ($1) {
  label = 4;
 } else {
  $2 = $to;
  $3 = (($$pre1) - ($2))|0;
  $4 = ($3|0)<(3);
  if ($4) {
   $$0 = 1;
  } else {
   $5 = ((($to)) + 1|0);
   HEAP32[$to_nxt>>2] = $5;
   HEAP8[$to>>0] = -17;
   $6 = HEAP32[$to_nxt>>2]|0;
   $7 = ((($6)) + 1|0);
   HEAP32[$to_nxt>>2] = $7;
   HEAP8[$6>>0] = -69;
   $8 = HEAP32[$to_nxt>>2]|0;
   $9 = ((($8)) + 1|0);
   HEAP32[$to_nxt>>2] = $9;
   HEAP8[$8>>0] = -65;
   label = 4;
  }
 }
 L4: do {
  if ((label|0) == 4) {
   $$pre = HEAP32[$frm_nxt>>2]|0;
   $10 = ($$pre>>>0)<($frm_end>>>0);
   if ($10) {
    $12 = $$pre;
    while(1) {
     $11 = HEAP32[$12>>2]|0;
     $13 = $11 & -2048;
     $14 = ($13|0)==(55296);
     $15 = ($11>>>0)>($Maxcode>>>0);
     $or$cond = $15 | $14;
     if ($or$cond) {
      $$0 = 2;
      break L4;
     }
     $16 = ($11>>>0)<(128);
     do {
      if ($16) {
       $17 = HEAP32[$to_nxt>>2]|0;
       $18 = $17;
       $19 = (($$pre1) - ($18))|0;
       $20 = ($19|0)<(1);
       if ($20) {
        $$0 = 1;
        break L4;
       }
       $21 = $11&255;
       $22 = ((($17)) + 1|0);
       HEAP32[$to_nxt>>2] = $22;
       HEAP8[$17>>0] = $21;
      } else {
       $23 = ($11>>>0)<(2048);
       if ($23) {
        $24 = HEAP32[$to_nxt>>2]|0;
        $25 = $24;
        $26 = (($$pre1) - ($25))|0;
        $27 = ($26|0)<(2);
        if ($27) {
         $$0 = 1;
         break L4;
        }
        $28 = $11 >>> 6;
        $29 = $28 | 192;
        $30 = $29&255;
        $31 = ((($24)) + 1|0);
        HEAP32[$to_nxt>>2] = $31;
        HEAP8[$24>>0] = $30;
        $32 = $11 & 63;
        $33 = $32 | 128;
        $34 = $33&255;
        $35 = HEAP32[$to_nxt>>2]|0;
        $36 = ((($35)) + 1|0);
        HEAP32[$to_nxt>>2] = $36;
        HEAP8[$35>>0] = $34;
        break;
       }
       $37 = ($11>>>0)<(65536);
       $38 = HEAP32[$to_nxt>>2]|0;
       $39 = $38;
       $40 = (($$pre1) - ($39))|0;
       if ($37) {
        $41 = ($40|0)<(3);
        if ($41) {
         $$0 = 1;
         break L4;
        }
        $42 = $11 >>> 12;
        $43 = $42 | 224;
        $44 = $43&255;
        $45 = ((($38)) + 1|0);
        HEAP32[$to_nxt>>2] = $45;
        HEAP8[$38>>0] = $44;
        $46 = $11 >>> 6;
        $47 = $46 & 63;
        $48 = $47 | 128;
        $49 = $48&255;
        $50 = HEAP32[$to_nxt>>2]|0;
        $51 = ((($50)) + 1|0);
        HEAP32[$to_nxt>>2] = $51;
        HEAP8[$50>>0] = $49;
        $52 = $11 & 63;
        $53 = $52 | 128;
        $54 = $53&255;
        $55 = HEAP32[$to_nxt>>2]|0;
        $56 = ((($55)) + 1|0);
        HEAP32[$to_nxt>>2] = $56;
        HEAP8[$55>>0] = $54;
        break;
       } else {
        $57 = ($40|0)<(4);
        if ($57) {
         $$0 = 1;
         break L4;
        }
        $58 = $11 >>> 18;
        $59 = $58 | 240;
        $60 = $59&255;
        $61 = ((($38)) + 1|0);
        HEAP32[$to_nxt>>2] = $61;
        HEAP8[$38>>0] = $60;
        $62 = $11 >>> 12;
        $63 = $62 & 63;
        $64 = $63 | 128;
        $65 = $64&255;
        $66 = HEAP32[$to_nxt>>2]|0;
        $67 = ((($66)) + 1|0);
        HEAP32[$to_nxt>>2] = $67;
        HEAP8[$66>>0] = $65;
        $68 = $11 >>> 6;
        $69 = $68 & 63;
        $70 = $69 | 128;
        $71 = $70&255;
        $72 = HEAP32[$to_nxt>>2]|0;
        $73 = ((($72)) + 1|0);
        HEAP32[$to_nxt>>2] = $73;
        HEAP8[$72>>0] = $71;
        $74 = $11 & 63;
        $75 = $74 | 128;
        $76 = $75&255;
        $77 = HEAP32[$to_nxt>>2]|0;
        $78 = ((($77)) + 1|0);
        HEAP32[$to_nxt>>2] = $78;
        HEAP8[$77>>0] = $76;
        break;
       }
      }
     } while(0);
     $79 = HEAP32[$frm_nxt>>2]|0;
     $80 = ((($79)) + 4|0);
     HEAP32[$frm_nxt>>2] = $80;
     $81 = ($80>>>0)<($frm_end>>>0);
     if ($81) {
      $12 = $80;
     } else {
      $$0 = 0;
      break;
     }
    }
   } else {
    $$0 = 0;
   }
  }
 } while(0);
 return ($$0|0);
}
function __ZNSt3__1L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$lcssa = 0, $$off = 0, $$pre = 0, $$pre$phiZ2D = 0, $$pre$pre = 0, $$pre4 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 $0 = $mode & 4;
 $1 = ($0|0)==(0);
 if ($1) {
  $$pre4 = $frm_end;
  $$pre = $to;$$pre$phiZ2D = $$pre4;
 } else {
  $2 = HEAP32[$frm_nxt>>2]|0;
  $3 = $frm_end;
  $4 = $2;
  $5 = (($3) - ($4))|0;
  $6 = ($5|0)>(2);
  if ($6) {
   $7 = HEAP8[$2>>0]|0;
   $8 = ($7<<24>>24)==(-17);
   if ($8) {
    $9 = ((($2)) + 1|0);
    $10 = HEAP8[$9>>0]|0;
    $11 = ($10<<24>>24)==(-69);
    if ($11) {
     $12 = ((($2)) + 2|0);
     $13 = HEAP8[$12>>0]|0;
     $14 = ($13<<24>>24)==(-65);
     if ($14) {
      $15 = ((($2)) + 3|0);
      HEAP32[$frm_nxt>>2] = $15;
      $$pre$pre = HEAP32[$to_nxt>>2]|0;
      $$pre = $$pre$pre;$$pre$phiZ2D = $3;
     } else {
      $$pre = $to;$$pre$phiZ2D = $3;
     }
    } else {
     $$pre = $to;$$pre$phiZ2D = $3;
    }
   } else {
    $$pre = $to;$$pre$phiZ2D = $3;
   }
  } else {
   $$pre = $to;$$pre$phiZ2D = $3;
  }
 }
 $16 = HEAP32[$frm_nxt>>2]|0;
 $17 = ($16>>>0)<($frm_end>>>0);
 $18 = ($$pre>>>0)<($to_end>>>0);
 $19 = $17 & $18;
 L9: do {
  if ($19) {
   $21 = $16;$25 = $$pre;
   while(1) {
    $20 = HEAP8[$21>>0]|0;
    $22 = $20&255;
    $23 = ($20<<24>>24)>(-1);
    do {
     if ($23) {
      $24 = ($22>>>0)>($Maxcode>>>0);
      if ($24) {
       $$0 = 2;
       break L9;
      }
      HEAP32[$25>>2] = $22;
      $26 = ((($21)) + 1|0);
      HEAP32[$frm_nxt>>2] = $26;
     } else {
      $27 = ($20&255)<(194);
      if ($27) {
       $$0 = 2;
       break L9;
      }
      $28 = ($20&255)<(224);
      if ($28) {
       $29 = $21;
       $30 = (($$pre$phiZ2D) - ($29))|0;
       $31 = ($30|0)<(2);
       if ($31) {
        $$0 = 1;
        break L9;
       }
       $32 = ((($21)) + 1|0);
       $33 = HEAP8[$32>>0]|0;
       $34 = $33&255;
       $35 = $34 & 192;
       $36 = ($35|0)==(128);
       if (!($36)) {
        $$0 = 2;
        break L9;
       }
       $37 = $22 << 6;
       $38 = $37 & 1984;
       $39 = $34 & 63;
       $40 = $39 | $38;
       $41 = ($40>>>0)>($Maxcode>>>0);
       if ($41) {
        $$0 = 2;
        break L9;
       }
       HEAP32[$25>>2] = $40;
       $42 = ((($21)) + 2|0);
       HEAP32[$frm_nxt>>2] = $42;
       break;
      }
      $43 = ($20&255)<(240);
      if ($43) {
       $44 = $21;
       $45 = (($$pre$phiZ2D) - ($44))|0;
       $46 = ($45|0)<(3);
       if ($46) {
        $$0 = 1;
        break L9;
       }
       $47 = ((($21)) + 1|0);
       $48 = HEAP8[$47>>0]|0;
       $49 = ((($21)) + 2|0);
       $50 = HEAP8[$49>>0]|0;
       if ((($22|0) == 237)) {
        $53 = $48 & -32;
        $54 = ($53<<24>>24)==(-128);
        if (!($54)) {
         $$0 = 2;
         break L9;
        }
       } else if ((($22|0) == 224)) {
        $51 = $48 & -32;
        $52 = ($51<<24>>24)==(-96);
        if (!($52)) {
         $$0 = 2;
         break L9;
        }
       } else {
        $55 = $48 & -64;
        $56 = ($55<<24>>24)==(-128);
        if (!($56)) {
         $$0 = 2;
         break L9;
        }
       }
       $57 = $50&255;
       $58 = $57 & 192;
       $59 = ($58|0)==(128);
       if (!($59)) {
        $$0 = 2;
        break L9;
       }
       $60 = $22 << 12;
       $61 = $60 & 61440;
       $62 = $48&255;
       $63 = $62 << 6;
       $64 = $63 & 4032;
       $65 = $64 | $61;
       $66 = $57 & 63;
       $67 = $65 | $66;
       $68 = ($67>>>0)>($Maxcode>>>0);
       if ($68) {
        $$0 = 2;
        break L9;
       }
       HEAP32[$25>>2] = $67;
       $69 = ((($21)) + 3|0);
       HEAP32[$frm_nxt>>2] = $69;
       break;
      }
      $70 = ($20&255)<(245);
      if (!($70)) {
       $$0 = 2;
       break L9;
      }
      $71 = $21;
      $72 = (($$pre$phiZ2D) - ($71))|0;
      $73 = ($72|0)<(4);
      if ($73) {
       $$0 = 1;
       break L9;
      }
      $74 = ((($21)) + 1|0);
      $75 = HEAP8[$74>>0]|0;
      $76 = ((($21)) + 2|0);
      $77 = HEAP8[$76>>0]|0;
      $78 = ((($21)) + 3|0);
      $79 = HEAP8[$78>>0]|0;
      if ((($22|0) == 244)) {
       $81 = $75 & -16;
       $82 = ($81<<24>>24)==(-128);
       if (!($82)) {
        $$0 = 2;
        break L9;
       }
      } else if ((($22|0) == 240)) {
       $$off = (($75) + 112)<<24>>24;
       $80 = ($$off&255)<(48);
       if (!($80)) {
        $$0 = 2;
        break L9;
       }
      } else {
       $83 = $75 & -64;
       $84 = ($83<<24>>24)==(-128);
       if (!($84)) {
        $$0 = 2;
        break L9;
       }
      }
      $85 = $77&255;
      $86 = $85 & 192;
      $87 = ($86|0)==(128);
      if (!($87)) {
       $$0 = 2;
       break L9;
      }
      $88 = $79&255;
      $89 = $88 & 192;
      $90 = ($89|0)==(128);
      if (!($90)) {
       $$0 = 2;
       break L9;
      }
      $91 = $22 << 18;
      $92 = $91 & 1835008;
      $93 = $75&255;
      $94 = $93 << 12;
      $95 = $94 & 258048;
      $96 = $95 | $92;
      $97 = $85 << 6;
      $98 = $97 & 4032;
      $99 = $96 | $98;
      $100 = $88 & 63;
      $101 = $99 | $100;
      $102 = ($101>>>0)>($Maxcode>>>0);
      if ($102) {
       $$0 = 2;
       break L9;
      }
      HEAP32[$25>>2] = $101;
      $103 = ((($21)) + 4|0);
      HEAP32[$frm_nxt>>2] = $103;
     }
    } while(0);
    $104 = HEAP32[$to_nxt>>2]|0;
    $105 = ((($104)) + 4|0);
    HEAP32[$to_nxt>>2] = $105;
    $106 = HEAP32[$frm_nxt>>2]|0;
    $107 = ($106>>>0)<($frm_end>>>0);
    $108 = ($105>>>0)<($to_end>>>0);
    $109 = $107 & $108;
    if ($109) {
     $21 = $106;$25 = $105;
    } else {
     $$lcssa = $107;
     label = 38;
     break;
    }
   }
  } else {
   $$lcssa = $17;
   label = 38;
  }
 } while(0);
 if ((label|0) == 38) {
  $110 = $$lcssa&1;
  $$0 = $110;
 }
 return ($$0|0);
}
function __ZNSt3__1L19utf8_to_ucs4_lengthEPKhS1_jmNS_12codecvt_modeE($frm,$frm_end,$mx,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$frm = 0, $$lcssa = 0, $$lcssa80 = 0, $$lcssa81 = 0, $$lcssa82 = 0, $$lcssa83 = 0, $$lcssa84 = 0, $$off = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $frm_nxt$1$lcssa = 0, $frm_nxt$1$ph = 0, $frm_nxt$148 = 0, $frm_nxt$2 = 0, $nchar32_t$047 = 0, $or$cond = 0, $or$cond46 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $mode & 4;
 $1 = ($0|0)==(0);
 $$pre = $frm_end;
 if ($1) {
  $frm_nxt$1$ph = $frm;
 } else {
  $2 = $frm;
  $3 = (($$pre) - ($2))|0;
  $4 = ($3|0)>(2);
  if ($4) {
   $5 = HEAP8[$frm>>0]|0;
   $6 = ($5<<24>>24)==(-17);
   if ($6) {
    $7 = ((($frm)) + 1|0);
    $8 = HEAP8[$7>>0]|0;
    $9 = ($8<<24>>24)==(-69);
    if ($9) {
     $10 = ((($frm)) + 2|0);
     $11 = HEAP8[$10>>0]|0;
     $12 = ($11<<24>>24)==(-65);
     $13 = ((($frm)) + 3|0);
     $$frm = $12 ? $13 : $frm;
     $frm_nxt$1$ph = $$frm;
    } else {
     $frm_nxt$1$ph = $frm;
    }
   } else {
    $frm_nxt$1$ph = $frm;
   }
  } else {
   $frm_nxt$1$ph = $frm;
  }
 }
 $14 = ($frm_nxt$1$ph>>>0)<($frm_end>>>0);
 $15 = ($mx|0)!=(0);
 $or$cond46 = $15 & $14;
 L7: do {
  if ($or$cond46) {
   $frm_nxt$148 = $frm_nxt$1$ph;$nchar32_t$047 = 0;
   L8: while(1) {
    $16 = HEAP8[$frm_nxt$148>>0]|0;
    $17 = $16&255;
    $18 = ($16<<24>>24)>(-1);
    do {
     if ($18) {
      $19 = ($17>>>0)>($Maxcode>>>0);
      if ($19) {
       $frm_nxt$1$lcssa = $frm_nxt$148;
       label = 42;
       break L7;
      }
      $20 = ((($frm_nxt$148)) + 1|0);
      $frm_nxt$2 = $20;
     } else {
      $21 = ($16&255)<(194);
      if ($21) {
       $frm_nxt$1$lcssa = $frm_nxt$148;
       label = 42;
       break L7;
      }
      $22 = ($16&255)<(224);
      if ($22) {
       $23 = $frm_nxt$148;
       $24 = (($$pre) - ($23))|0;
       $25 = ($24|0)<(2);
       if ($25) {
        $frm_nxt$1$lcssa = $frm_nxt$148;
        label = 42;
        break L7;
       }
       $26 = ((($frm_nxt$148)) + 1|0);
       $27 = HEAP8[$26>>0]|0;
       $28 = $27&255;
       $29 = $28 & 192;
       $30 = ($29|0)==(128);
       if (!($30)) {
        $frm_nxt$1$lcssa = $frm_nxt$148;
        label = 42;
        break L7;
       }
       $31 = $17 << 6;
       $32 = $31 & 1984;
       $33 = $28 & 63;
       $34 = $33 | $32;
       $35 = ($34>>>0)>($Maxcode>>>0);
       if ($35) {
        $frm_nxt$1$lcssa = $frm_nxt$148;
        label = 42;
        break L7;
       }
       $36 = ((($frm_nxt$148)) + 2|0);
       $frm_nxt$2 = $36;
       break;
      }
      $37 = ($16&255)<(240);
      if ($37) {
       $38 = $frm_nxt$148;
       $39 = (($$pre) - ($38))|0;
       $40 = ($39|0)<(3);
       if ($40) {
        $frm_nxt$1$lcssa = $frm_nxt$148;
        label = 42;
        break L7;
       }
       $41 = ((($frm_nxt$148)) + 1|0);
       $42 = HEAP8[$41>>0]|0;
       $43 = ((($frm_nxt$148)) + 2|0);
       $44 = HEAP8[$43>>0]|0;
       if ((($17|0) == 224)) {
        $45 = $42 & -32;
        $46 = ($45<<24>>24)==(-96);
        if (!($46)) {
         $$lcssa83 = $38;
         label = 20;
         break L8;
        }
       } else if ((($17|0) == 237)) {
        $49 = $42 & -32;
        $50 = ($49<<24>>24)==(-128);
        if (!($50)) {
         $$lcssa82 = $38;
         label = 22;
         break L8;
        }
       } else {
        $53 = $42 & -64;
        $54 = ($53<<24>>24)==(-128);
        if (!($54)) {
         $$lcssa84 = $38;
         label = 24;
         break L8;
        }
       }
       $57 = $44&255;
       $58 = $57 & 192;
       $59 = ($58|0)==(128);
       if (!($59)) {
        $frm_nxt$1$lcssa = $frm_nxt$148;
        label = 42;
        break L7;
       }
       $60 = $17 << 12;
       $61 = $60 & 61440;
       $62 = $42&255;
       $63 = $62 << 6;
       $64 = $63 & 4032;
       $65 = $64 | $61;
       $66 = $57 & 63;
       $67 = $65 | $66;
       $68 = ($67>>>0)>($Maxcode>>>0);
       if ($68) {
        $frm_nxt$1$lcssa = $frm_nxt$148;
        label = 42;
        break L7;
       }
       $69 = ((($frm_nxt$148)) + 3|0);
       $frm_nxt$2 = $69;
       break;
      }
      $70 = ($16&255)<(245);
      if (!($70)) {
       $frm_nxt$1$lcssa = $frm_nxt$148;
       label = 42;
       break L7;
      }
      $71 = $frm_nxt$148;
      $72 = (($$pre) - ($71))|0;
      $73 = ($72|0)<(4);
      if ($73) {
       $frm_nxt$1$lcssa = $frm_nxt$148;
       label = 42;
       break L7;
      }
      $74 = ((($frm_nxt$148)) + 1|0);
      $75 = HEAP8[$74>>0]|0;
      $76 = ((($frm_nxt$148)) + 2|0);
      $77 = HEAP8[$76>>0]|0;
      $78 = ((($frm_nxt$148)) + 3|0);
      $79 = HEAP8[$78>>0]|0;
      if ((($17|0) == 244)) {
       $83 = $75 & -16;
       $84 = ($83<<24>>24)==(-128);
       if (!($84)) {
        $$lcssa = $71;
        label = 34;
        break L8;
       }
      } else if ((($17|0) == 240)) {
       $$off = (($75) + 112)<<24>>24;
       $80 = ($$off&255)<(48);
       if (!($80)) {
        $$lcssa80 = $71;
        label = 32;
        break L8;
       }
      } else {
       $87 = $75 & -64;
       $88 = ($87<<24>>24)==(-128);
       if (!($88)) {
        $$lcssa81 = $71;
        label = 36;
        break L8;
       }
      }
      $91 = $77&255;
      $92 = $91 & 192;
      $93 = ($92|0)==(128);
      if (!($93)) {
       $frm_nxt$1$lcssa = $frm_nxt$148;
       label = 42;
       break L7;
      }
      $94 = $79&255;
      $95 = $94 & 192;
      $96 = ($95|0)==(128);
      if (!($96)) {
       $frm_nxt$1$lcssa = $frm_nxt$148;
       label = 42;
       break L7;
      }
      $97 = $17 << 18;
      $98 = $97 & 1835008;
      $99 = $75&255;
      $100 = $99 << 12;
      $101 = $100 & 258048;
      $102 = $101 | $98;
      $103 = $91 << 6;
      $104 = $103 & 4032;
      $105 = $102 | $104;
      $106 = $94 & 63;
      $107 = $105 | $106;
      $108 = ($107>>>0)>($Maxcode>>>0);
      if ($108) {
       $frm_nxt$1$lcssa = $frm_nxt$148;
       label = 42;
       break L7;
      }
      $109 = ((($frm_nxt$148)) + 4|0);
      $frm_nxt$2 = $109;
     }
    } while(0);
    $110 = (($nchar32_t$047) + 1)|0;
    $111 = ($frm_nxt$2>>>0)<($frm_end>>>0);
    $112 = ($110>>>0)<($mx>>>0);
    $or$cond = $112 & $111;
    if ($or$cond) {
     $frm_nxt$148 = $frm_nxt$2;$nchar32_t$047 = $110;
    } else {
     $frm_nxt$1$lcssa = $frm_nxt$2;
     label = 42;
     break L7;
    }
   }
   if ((label|0) == 20) {
    $47 = $frm;
    $48 = (($$lcssa83) - ($47))|0;
    $$0 = $48;
    break;
   }
   else if ((label|0) == 22) {
    $51 = $frm;
    $52 = (($$lcssa82) - ($51))|0;
    $$0 = $52;
    break;
   }
   else if ((label|0) == 24) {
    $55 = $frm;
    $56 = (($$lcssa84) - ($55))|0;
    $$0 = $56;
    break;
   }
   else if ((label|0) == 32) {
    $81 = $frm;
    $82 = (($$lcssa80) - ($81))|0;
    $$0 = $82;
    break;
   }
   else if ((label|0) == 34) {
    $85 = $frm;
    $86 = (($$lcssa) - ($85))|0;
    $$0 = $86;
    break;
   }
   else if ((label|0) == 36) {
    $89 = $frm;
    $90 = (($$lcssa81) - ($89))|0;
    $$0 = $90;
    break;
   }
  } else {
   $frm_nxt$1$lcssa = $frm_nxt$1$ph;
   label = 42;
  }
 } while(0);
 if ((label|0) == 42) {
  $113 = $frm_nxt$1$lcssa;
  $114 = $frm;
  $115 = (($113) - ($114))|0;
  $$0 = $115;
 }
 return ($$0|0);
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$0$i1 = 0, $$pre$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__v = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__v = sp;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $1;
 $5 = $3;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 2;
 $8 = ($7>>>0)<($__n>>>0);
 if ($8) {
  $9 = ((($this)) + 16|0);
  $10 = HEAP32[$this>>2]|0;
  $11 = $10;
  $12 = (($5) - ($11))|0;
  $13 = $12 >> 2;
  $14 = (($13) + ($__n))|0;
  $15 = ($14>>>0)>(1073741823);
  if ($15) {
   __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
   // unreachable;
  }
  $16 = (($4) - ($11))|0;
  $17 = $16 >> 2;
  $18 = ($17>>>0)<(536870911);
  if ($18) {
   $19 = $16 >> 1;
   $20 = ($19>>>0)<($14>>>0);
   $21 = $20 ? $14 : $19;
   $$0$i1 = $21;
  } else {
   $$0$i1 = 1073741823;
  }
  __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEEC2EjjS6_($__v,$$0$i1,$13,$9);
  $22 = ((($__v)) + 8|0);
  $$pre$i = HEAP32[$22>>2]|0;
  $23 = $__n << 2;
  _memset(($$pre$i|0),0,($23|0))|0;
  $scevgep = (($$pre$i) + ($__n<<2)|0);
  HEAP32[$22>>2] = $scevgep;
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($this,$__v);
  __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEED2Ev($__v);
 } else {
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($this,$__n);
 }
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$0 = 0, $$pre = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $$pre = HEAP32[$0>>2]|0;
 $$0 = $__n;$1 = $$pre;
 while(1) {
  HEAP32[$1>>2] = 0;
  $2 = HEAP32[$0>>2]|0;
  $3 = ((($2)) + 4|0);
  HEAP32[$0>>2] = $3;
  $4 = (($$0) + -1)|0;
  $5 = ($4|0)==(0);
  if ($5) {
   break;
  } else {
   $$0 = $4;$1 = $3;
  }
 }
 return;
}
function __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEEC2EjjS6_($this,$__cap,$__start,$__a) {
 $this = $this|0;
 $__cap = $__cap|0;
 $__start = $__start|0;
 $__a = $__a|0;
 var $$not$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($this)) + 16|0);
 HEAP32[$1>>2] = $__a;
 $2 = ($__cap|0)==(0);
 do {
  if ($2) {
   $8 = 0;
  } else {
   $3 = ((($__a)) + 112|0);
   $4 = HEAP8[$3>>0]|0;
   $$not$i$i = ($4<<24>>24)==(0);
   $5 = ($__cap>>>0)<(29);
   $or$cond$i$i = $5 & $$not$i$i;
   if ($or$cond$i$i) {
    HEAP8[$3>>0] = 1;
    $8 = $__a;
    break;
   } else {
    $6 = $__cap << 2;
    $7 = (__Znwj($6)|0);
    $8 = $7;
    break;
   }
  }
 } while(0);
 HEAP32[$this>>2] = $8;
 $9 = (($8) + ($__start<<2)|0);
 $10 = ((($this)) + 8|0);
 HEAP32[$10>>2] = $9;
 $11 = ((($this)) + 4|0);
 HEAP32[$11>>2] = $9;
 $12 = (($8) + ($__cap<<2)|0);
 $13 = ((($this)) + 12|0);
 HEAP32[$13>>2] = $12;
 return;
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($this,$__v) {
 $this = $this|0;
 $__v = $__v|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($this)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($__v)) + 4|0);
 $4 = $2;
 $5 = $0;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 2;
 $8 = HEAP32[$3>>2]|0;
 $9 = (0 - ($7))|0;
 $10 = (($8) + ($9<<2)|0);
 HEAP32[$3>>2] = $10;
 _memcpy(($10|0),($0|0),($6|0))|0;
 $11 = HEAP32[$this>>2]|0;
 $12 = HEAP32[$3>>2]|0;
 HEAP32[$this>>2] = $12;
 HEAP32[$3>>2] = $11;
 $13 = ((($__v)) + 8|0);
 $14 = HEAP32[$1>>2]|0;
 $15 = HEAP32[$13>>2]|0;
 HEAP32[$1>>2] = $15;
 HEAP32[$13>>2] = $14;
 $16 = ((($this)) + 8|0);
 $17 = ((($__v)) + 12|0);
 $18 = HEAP32[$16>>2]|0;
 $19 = HEAP32[$17>>2]|0;
 HEAP32[$16>>2] = $19;
 HEAP32[$17>>2] = $18;
 $20 = HEAP32[$3>>2]|0;
 HEAP32[$__v>>2] = $20;
 return;
}
function __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEED2Ev($this) {
 $this = $this|0;
 var $$lcssa = 0, $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 8|0);
 $$pre$i$i$i = HEAP32[$2>>2]|0;
 $3 = ($$pre$i$i$i|0)==($1|0);
 if (!($3)) {
  $5 = $$pre$i$i$i;
  while(1) {
   $4 = ((($5)) + -4|0);
   $6 = ($4|0)==($1|0);
   if ($6) {
    $$lcssa = $4;
    break;
   } else {
    $5 = $4;
   }
  }
  HEAP32[$2>>2] = $$lcssa;
 }
 $7 = HEAP32[$this>>2]|0;
 $8 = ($7|0)==(0|0);
 do {
  if (!($8)) {
   $9 = ((($this)) + 16|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = ($10|0)==($7|0);
   if ($11) {
    $12 = ((($10)) + 112|0);
    HEAP8[$12>>0] = 0;
    break;
   } else {
    __ZdlPv($7);
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8allocateEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$0$i$i = 0, $$not$i$i = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__n>>>0)>(1073741823);
 if ($0) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = ((($this)) + 128|0);
 $2 = HEAP8[$1>>0]|0;
 $$not$i$i = ($2<<24>>24)==(0);
 $3 = ($__n>>>0)<(29);
 $or$cond$i$i = $3 & $$not$i$i;
 if ($or$cond$i$i) {
  $4 = ((($this)) + 16|0);
  HEAP8[$1>>0] = 1;
  $$0$i$i = $4;
 } else {
  $5 = $__n << 2;
  $6 = (__Znwj($5)|0);
  $$0$i$i = $6;
 }
 $7 = ((($this)) + 4|0);
 HEAP32[$7>>2] = $$0$i$i;
 HEAP32[$this>>2] = $$0$i$i;
 $8 = (($$0$i$i) + ($__n<<2)|0);
 $9 = ((($this)) + 8|0);
 HEAP32[$9>>2] = $8;
 return;
}
function __ZNSt3__115__num_get_floatIeEET_PKcS3_Rj($__a,$__a_end,$__err) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 var $$0 = 0.0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0.0;
  } else {
   $1 = (___errno_location()|0);
   $2 = HEAP32[$1>>2]|0;
   HEAP32[$1>>2] = 0;
   $3 = (__ZNSt3__16__clocEv()|0);
   $4 = (+_strtold_l($__a,$__p2,$3));
   $5 = HEAP32[$1>>2]|0;
   $6 = ($5|0)==(0);
   if ($6) {
    HEAP32[$1>>2] = $2;
   }
   $7 = HEAP32[$__p2>>2]|0;
   $8 = ($7|0)==($__a_end|0);
   if (!($8)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0.0;
    break;
   }
   $9 = ($5|0)==(34);
   if ($9) {
    HEAP32[$__err>>2] = 4;
    $$0 = $4;
   } else {
    $$0 = $4;
   }
  }
 } while(0);
 STACKTOP = sp;return (+$$0);
}
function __ZNSt3__115__num_get_floatIdEET_PKcS3_Rj($__a,$__a_end,$__err) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 var $$0 = 0.0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0.0;
  } else {
   $1 = (___errno_location()|0);
   $2 = HEAP32[$1>>2]|0;
   HEAP32[$1>>2] = 0;
   $3 = (__ZNSt3__16__clocEv()|0);
   $4 = (+_strtold_l($__a,$__p2,$3));
   $5 = HEAP32[$1>>2]|0;
   $6 = ($5|0)==(0);
   if ($6) {
    HEAP32[$1>>2] = $2;
   }
   $7 = HEAP32[$__p2>>2]|0;
   $8 = ($7|0)==($__a_end|0);
   if (!($8)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0.0;
    break;
   }
   $9 = ($5|0)==(34);
   if ($9) {
    HEAP32[$__err>>2] = 4;
    $$0 = $4;
   } else {
    $$0 = $4;
   }
  }
 } while(0);
 STACKTOP = sp;return (+$$0);
}
function __ZNSt3__115__num_get_floatIfEET_PKcS3_Rj($__a,$__a_end,$__err) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 var $$0 = 0.0, $0 = 0, $1 = 0, $10 = 0.0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0.0;
  } else {
   $1 = (___errno_location()|0);
   $2 = HEAP32[$1>>2]|0;
   HEAP32[$1>>2] = 0;
   $3 = (__ZNSt3__16__clocEv()|0);
   $4 = (+_strtold_l($__a,$__p2,$3));
   $5 = HEAP32[$1>>2]|0;
   $6 = ($5|0)==(0);
   if ($6) {
    HEAP32[$1>>2] = $2;
   }
   $7 = HEAP32[$__p2>>2]|0;
   $8 = ($7|0)==($__a_end|0);
   if (!($8)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0.0;
    break;
   }
   $9 = ($5|0)==(34);
   if ($9) {
    HEAP32[$__err>>2] = 4;
   }
   $10 = $4;
   $$0 = $10;
  }
 } while(0);
 STACKTOP = sp;return (+$$0);
}
function __ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $13 = 0;$14 = 0;
  } else {
   $1 = HEAP8[$__a>>0]|0;
   $2 = ($1<<24>>24)==(45);
   if ($2) {
    HEAP32[$__err>>2] = 4;
    $13 = 0;$14 = 0;
    break;
   }
   $3 = (___errno_location()|0);
   $4 = HEAP32[$3>>2]|0;
   HEAP32[$3>>2] = 0;
   $5 = (__ZNSt3__16__clocEv()|0);
   $6 = (_strtoull_l($__a,$__p2,$__base,$5)|0);
   $7 = tempRet0;
   $8 = HEAP32[$3>>2]|0;
   $9 = ($8|0)==(0);
   if ($9) {
    HEAP32[$3>>2] = $4;
   }
   $10 = HEAP32[$__p2>>2]|0;
   $11 = ($10|0)==($__a_end|0);
   if (!($11)) {
    HEAP32[$__err>>2] = 4;
    $13 = 0;$14 = 0;
    break;
   }
   $12 = ($8|0)==(34);
   if ($12) {
    HEAP32[$__err>>2] = 4;
    $13 = -1;$14 = -1;
   } else {
    $13 = $7;$14 = $6;
   }
  }
 } while(0);
 tempRet0 = ($13);
 STACKTOP = sp;return ($14|0);
}
function __ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0;
 var $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0;
  } else {
   $1 = HEAP8[$__a>>0]|0;
   $2 = ($1<<24>>24)==(45);
   if ($2) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $3 = (___errno_location()|0);
   $4 = HEAP32[$3>>2]|0;
   HEAP32[$3>>2] = 0;
   $5 = (__ZNSt3__16__clocEv()|0);
   $6 = (_strtoull_l($__a,$__p2,$__base,$5)|0);
   $7 = tempRet0;
   $8 = HEAP32[$3>>2]|0;
   $9 = ($8|0)==(0);
   if ($9) {
    HEAP32[$3>>2] = $4;
   }
   $10 = HEAP32[$__p2>>2]|0;
   $11 = ($10|0)==($__a_end|0);
   if (!($11)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $12 = ($8|0)==(34);
   $13 = ($7>>>0)>(0);
   $14 = ($6>>>0)>(4294967295);
   $15 = ($7|0)==(0);
   $16 = $15 & $14;
   $17 = $13 | $16;
   $or$cond = $17 | $12;
   if ($or$cond) {
    HEAP32[$__err>>2] = 4;
    $$0 = -1;
    break;
   } else {
    $$0 = $6;
    break;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0;
 var $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0;
  } else {
   $1 = HEAP8[$__a>>0]|0;
   $2 = ($1<<24>>24)==(45);
   if ($2) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $3 = (___errno_location()|0);
   $4 = HEAP32[$3>>2]|0;
   HEAP32[$3>>2] = 0;
   $5 = (__ZNSt3__16__clocEv()|0);
   $6 = (_strtoull_l($__a,$__p2,$__base,$5)|0);
   $7 = tempRet0;
   $8 = HEAP32[$3>>2]|0;
   $9 = ($8|0)==(0);
   if ($9) {
    HEAP32[$3>>2] = $4;
   }
   $10 = HEAP32[$__p2>>2]|0;
   $11 = ($10|0)==($__a_end|0);
   if (!($11)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $12 = ($8|0)==(34);
   $13 = ($7>>>0)>(0);
   $14 = ($6>>>0)>(4294967295);
   $15 = ($7|0)==(0);
   $16 = $15 & $14;
   $17 = $13 | $16;
   $or$cond = $17 | $12;
   if ($or$cond) {
    HEAP32[$__err>>2] = 4;
    $$0 = -1;
    break;
   } else {
    $$0 = $6;
    break;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__p2 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0;
  } else {
   $1 = HEAP8[$__a>>0]|0;
   $2 = ($1<<24>>24)==(45);
   if ($2) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $3 = (___errno_location()|0);
   $4 = HEAP32[$3>>2]|0;
   HEAP32[$3>>2] = 0;
   $5 = (__ZNSt3__16__clocEv()|0);
   $6 = (_strtoull_l($__a,$__p2,$__base,$5)|0);
   $7 = tempRet0;
   $8 = HEAP32[$3>>2]|0;
   $9 = ($8|0)==(0);
   if ($9) {
    HEAP32[$3>>2] = $4;
   }
   $10 = HEAP32[$__p2>>2]|0;
   $11 = ($10|0)==($__a_end|0);
   if (!($11)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $12 = ($8|0)==(34);
   $13 = ($7>>>0)>(0);
   $14 = ($6>>>0)>(65535);
   $15 = ($7|0)==(0);
   $16 = $15 & $14;
   $17 = $13 | $16;
   $or$cond = $17 | $12;
   if ($or$cond) {
    HEAP32[$__err>>2] = 4;
    $$0 = -1;
    break;
   } else {
    $18 = $6&65535;
    $$0 = $18;
    break;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $18 = 0;$19 = 0;
  } else {
   $1 = (___errno_location()|0);
   $2 = HEAP32[$1>>2]|0;
   HEAP32[$1>>2] = 0;
   $3 = (__ZNSt3__16__clocEv()|0);
   $4 = (_strtoll_l($__a,$__p2,$__base,$3)|0);
   $5 = tempRet0;
   $6 = HEAP32[$1>>2]|0;
   $7 = ($6|0)==(0);
   if ($7) {
    HEAP32[$1>>2] = $2;
   }
   $8 = HEAP32[$__p2>>2]|0;
   $9 = ($8|0)==($__a_end|0);
   if (!($9)) {
    HEAP32[$__err>>2] = 4;
    $18 = 0;$19 = 0;
    break;
   }
   $10 = ($6|0)==(34);
   if ($10) {
    HEAP32[$__err>>2] = 4;
    $11 = ($5|0)>(0);
    $12 = ($4>>>0)>(0);
    $13 = ($5|0)==(0);
    $14 = $13 & $12;
    $15 = $11 | $14;
    $16 = $15 ? -1 : 0;
    $17 = $15 ? 2147483647 : -2147483648;
    tempRet0 = ($17);
    STACKTOP = sp;return ($16|0);
   } else {
    $18 = $5;$19 = $4;
   }
  }
 } while(0);
 tempRet0 = ($18);
 STACKTOP = sp;return ($19|0);
}
function __ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 L1: do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0;
  } else {
   $1 = (___errno_location()|0);
   $2 = HEAP32[$1>>2]|0;
   HEAP32[$1>>2] = 0;
   $3 = (__ZNSt3__16__clocEv()|0);
   $4 = (_strtoll_l($__a,$__p2,$__base,$3)|0);
   $5 = tempRet0;
   $6 = HEAP32[$1>>2]|0;
   $7 = ($6|0)==(0);
   if ($7) {
    HEAP32[$1>>2] = $2;
   }
   $8 = HEAP32[$__p2>>2]|0;
   $9 = ($8|0)==($__a_end|0);
   if (!($9)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $10 = ($6|0)==(34);
   do {
    if ($10) {
     HEAP32[$__err>>2] = 4;
     $21 = ($5|0)>(0);
     $22 = ($4>>>0)>(0);
     $23 = ($5|0)==(0);
     $24 = $23 & $22;
     $25 = $21 | $24;
     if ($25) {
      $$0 = 2147483647;
      break L1;
     }
    } else {
     $11 = ($5|0)<(-1);
     $12 = ($4>>>0)<(2147483648);
     $13 = ($5|0)==(-1);
     $14 = $13 & $12;
     $15 = $11 | $14;
     if ($15) {
      HEAP32[$__err>>2] = 4;
      break;
     }
     $16 = ($5|0)>(0);
     $17 = ($4>>>0)>(2147483647);
     $18 = ($5|0)==(0);
     $19 = $18 & $17;
     $20 = $16 | $19;
     if ($20) {
      HEAP32[$__err>>2] = 4;
      $$0 = 2147483647;
      break L1;
     } else {
      $$0 = $4;
      break L1;
     }
    }
   } while(0);
   $$0 = -2147483648;
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__114__shared_countD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__114__shared_count12__add_sharedEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;HEAP32[$0>>2] = (($1+1)|0);
 return;
}
function __ZNSt3__114__shared_count16__release_sharedEv($this) {
 $this = $this|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;HEAP32[$0>>2] = (($1+-1)|0);
 $2 = ($1|0)==(0);
 if ($2) {
  $3 = HEAP32[$this>>2]|0;
  $4 = ((($3)) + 8|0);
  $5 = HEAP32[$4>>2]|0;
  FUNCTION_TABLE_vi[$5 & 1023]($this);
  $$0 = 1;
 } else {
  $$0 = 0;
 }
 return ($$0|0);
}
function __ZNKSt3__114error_category23default_error_conditionEi($agg$result,$this,$ev) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $ev = $ev|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = $ev;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = $this;
 return;
}
function __ZNKSt3__114error_category10equivalentEiRKNS_15error_conditionE($this,$code,$condition) {
 $this = $this|0;
 $code = $code|0;
 $condition = $condition|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $1 = HEAP32[$this>>2]|0;
 $2 = ((($1)) + 12|0);
 $3 = HEAP32[$2>>2]|0;
 FUNCTION_TABLE_viii[$3 & 1023]($0,$this,$code);
 $4 = ((($0)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($condition)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($5|0)==($7|0);
 if ($8) {
  $9 = HEAP32[$0>>2]|0;
  $10 = HEAP32[$condition>>2]|0;
  $11 = ($9|0)==($10|0);
  $12 = $11;
 } else {
  $12 = 0;
 }
 STACKTOP = sp;return ($12|0);
}
function __ZNKSt3__114error_category10equivalentERKNS_10error_codeEi($this,$code,$condition) {
 $this = $this|0;
 $code = $code|0;
 $condition = $condition|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($code)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==($this|0);
 $3 = HEAP32[$code>>2]|0;
 $4 = ($3|0)==($condition|0);
 $5 = $2 & $4;
 return ($5|0);
}
function __ZNKSt3__112__do_message7messageEi($agg$result,$this,$ev) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $ev = $ev|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strerror(($ev|0))|0);
 $1 = (_strlen(($0|0))|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result,$0,$1);
 return;
}
function __ZNSt3__112system_error6__initERKNS_10error_codeENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($agg$result,$ec,$what_arg) {
 $agg$result = $agg$result|0;
 $ec = $ec|0;
 $what_arg = $what_arg|0;
 var $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $1 = HEAP32[$ec>>2]|0;
 $2 = ($1|0)==(0);
 do {
  if (!($2)) {
   $3 = HEAP8[$what_arg>>0]|0;
   $4 = $3 & 1;
   $5 = ($4<<24>>24)==(0);
   if ($5) {
    $8 = $3&255;
    $9 = $8 >>> 1;
    $10 = $9;
   } else {
    $6 = ((($what_arg)) + 4|0);
    $7 = HEAP32[$6>>2]|0;
    $10 = $7;
   }
   $11 = ($10|0)==(0);
   if ($11) {
    $17 = $1;
   } else {
    (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($what_arg,15056)|0);
    $$pre = HEAP32[$ec>>2]|0;
    $17 = $$pre;
   }
   $12 = ((($ec)) + 4|0);
   $13 = HEAP32[$12>>2]|0;
   $14 = HEAP32[$13>>2]|0;
   $15 = ((($14)) + 24|0);
   $16 = HEAP32[$15>>2]|0;
   FUNCTION_TABLE_viii[$16 & 1023]($0,$13,$17);
   $18 = HEAP8[$0>>0]|0;
   $19 = $18 & 1;
   $20 = ($19<<24>>24)==(0);
   $21 = ((($0)) + 8|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ((($0)) + 1|0);
   $24 = $20 ? $23 : $22;
   $25 = ((($0)) + 4|0);
   $26 = HEAP32[$25>>2]|0;
   $27 = $18&255;
   $28 = $27 >>> 1;
   $29 = $20 ? $28 : $26;
   __THREW__ = 0;
   (invoke_iiii(555,($what_arg|0),($24|0),($29|0))|0);
   $30 = __THREW__; __THREW__ = 0;
   $31 = $30&1;
   if ($31) {
    $32 = ___cxa_find_matching_catch()|0;
    $33 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    ___resumeException($32|0);
    // unreachable;
   } else {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    break;
   }
  }
 } while(0);
 ;HEAP32[$agg$result>>2]=HEAP32[$what_arg>>2]|0;HEAP32[$agg$result+4>>2]=HEAP32[$what_arg+4>>2]|0;HEAP32[$agg$result+8>>2]=HEAP32[$what_arg+8>>2]|0;
 HEAP32[$what_arg>>2] = 0;
 $34 = ((($what_arg)) + 4|0);
 HEAP32[$34>>2] = 0;
 $35 = ((($what_arg)) + 8|0);
 HEAP32[$35>>2] = 0;
 STACKTOP = sp;return;
}
function __ZNSt3__112system_errorC2ENS_10error_codeEPKc($this,$ec,$what_arg) {
 $this = $this|0;
 $ec = $ec|0;
 $what_arg = $what_arg|0;
 var $$0 = 0, $$01 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 12|0;
 $1 = sp;
 $2 = (_strlen(($what_arg|0))|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($1,$what_arg,$2);
 __THREW__ = 0;
 invoke_viii(556,($0|0),($ec|0),($1|0));
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 do {
  if ($4) {
   $18 = ___cxa_find_matching_catch()|0;
   $19 = tempRet0;
   $$0 = $19;$$01 = $18;
  } else {
   __THREW__ = 0;
   invoke_vii(413,($this|0),($0|0));
   $5 = __THREW__; __THREW__ = 0;
   $6 = $5&1;
   if ($6) {
    $20 = ___cxa_find_matching_catch()|0;
    $21 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    $$0 = $21;$$01 = $20;
    break;
   } else {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
    HEAP32[$this>>2] = (14920);
    $7 = ((($this)) + 8|0);
    $8 = $ec;
    $9 = $8;
    $10 = HEAP32[$9>>2]|0;
    $11 = (($8) + 4)|0;
    $12 = $11;
    $13 = HEAP32[$12>>2]|0;
    $14 = $7;
    $15 = $14;
    HEAP32[$15>>2] = $10;
    $16 = (($14) + 4)|0;
    $17 = $16;
    HEAP32[$17>>2] = $13;
    STACKTOP = sp;return;
   }
  }
 } while(0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 ___resumeException($$01|0);
 // unreachable;
}
function __ZNSt3__112system_errorD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt13runtime_errorD2Ev($this);
 return;
}
function __ZNSt3__112system_errorD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt13runtime_errorD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt3__114error_categoryD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__111__call_onceERVmPvPFvS2_E($flag,$arg,$func) {
 $flag = $flag|0;
 $arg = $arg|0;
 $func = $func|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 (_pthread_mutex_lock((15064|0))|0);
 $0 = HEAP32[$flag>>2]|0;
 $1 = ($0|0)==(1);
 if ($1) {
  while(1) {
   (_pthread_cond_wait((15096|0),(15064|0))|0);
   $2 = HEAP32[$flag>>2]|0;
   $3 = ($2|0)==(1);
   if (!($3)) {
    break;
   }
  }
 }
 $4 = HEAP32[$flag>>2]|0;
 $5 = ($4|0)==(0);
 do {
  if ($5) {
   HEAP32[$flag>>2] = 1;
   __THREW__ = 0;
   (invoke_ii(557,(15064|0))|0);
   $6 = __THREW__; __THREW__ = 0;
   $7 = $6&1;
   if (!($7)) {
    __THREW__ = 0;
    invoke_vi($func|0,($arg|0));
    $8 = __THREW__; __THREW__ = 0;
    $9 = $8&1;
    if (!($9)) {
     __THREW__ = 0;
     (invoke_ii(558,(15064|0))|0);
     $10 = __THREW__; __THREW__ = 0;
     $11 = $10&1;
     if (!($11)) {
      HEAP32[$flag>>2] = -1;
      __THREW__ = 0;
      (invoke_ii(557,(15064|0))|0);
      $12 = __THREW__; __THREW__ = 0;
      $13 = $12&1;
      if (!($13)) {
       __THREW__ = 0;
       (invoke_ii(559,(15096|0))|0);
       $14 = __THREW__; __THREW__ = 0;
       $15 = $14&1;
       if (!($15)) {
        break;
       }
      }
     }
    }
   }
   $16 = ___cxa_find_matching_catch(0|0)|0;
   $17 = tempRet0;
   (___cxa_begin_catch(($16|0))|0);
   __THREW__ = 0;
   (invoke_ii(558,(15064|0))|0);
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   if (!($19)) {
    HEAP32[$flag>>2] = 0;
    __THREW__ = 0;
    (invoke_ii(557,(15064|0))|0);
    $20 = __THREW__; __THREW__ = 0;
    $21 = $20&1;
    if (!($21)) {
     __THREW__ = 0;
     (invoke_ii(559,(15096|0))|0);
     $22 = __THREW__; __THREW__ = 0;
     $23 = $22&1;
     if (!($23)) {
      __THREW__ = 0;
      invoke_v(560);
      $24 = __THREW__; __THREW__ = 0;
     }
    }
   }
   $25 = ___cxa_find_matching_catch()|0;
   $26 = tempRet0;
   __THREW__ = 0;
   invoke_v(437);
   $27 = __THREW__; __THREW__ = 0;
   $28 = $27&1;
   if ($28) {
    $29 = ___cxa_find_matching_catch(0|0)|0;
    $30 = tempRet0;
    ___clang_call_terminate($29);
    // unreachable;
   } else {
    ___resumeException($25|0);
    // unreachable;
   }
  } else {
   (_pthread_mutex_unlock((15064|0))|0);
  }
 } while(0);
 return;
}
function runPostSets() {

}
function _i64Subtract(a, b, c, d) {
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a - c)>>>0;
    h = (b - d)>>>0;
    h = (b - d - (((c>>>0) > (a>>>0))|0))>>>0; // Borrow one from high word to low word on underflow.
    return ((tempRet0 = h,l|0)|0);
}
function _i64Add(a, b, c, d) {
    /*
      x = a + b*2^32
      y = c + d*2^32
      result = l + h*2^32
    */
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a + c)>>>0;
    h = (b + d + (((l>>>0) < (a>>>0))|0))>>>0; // Add carry from low word to high word on overflow.
    return ((tempRet0 = h,l|0)|0);
}
function _strlen(ptr) {
    ptr = ptr|0;
    var curr = 0;
    curr = ptr;
    while (((HEAP8[((curr)>>0)])|0)) {
      curr = (curr + 1)|0;
    }
    return (curr - ptr)|0;
}
function _bitshift64Lshr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >>> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = 0;
    return (high >>> (bits - 32))|0;
}
function _memcpy(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    if ((num|0) >= 4096) return _emscripten_memcpy_big(dest|0, src|0, num|0)|0;
    ret = dest|0;
    if ((dest&3) == (src&3)) {
      while (dest & 3) {
        if ((num|0) == 0) return ret|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
        dest = (dest+1)|0;
        src = (src+1)|0;
        num = (num-1)|0;
      }
      while ((num|0) >= 4) {
        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);
        dest = (dest+4)|0;
        src = (src+4)|0;
        num = (num-4)|0;
      }
    }
    while ((num|0) > 0) {
      HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      dest = (dest+1)|0;
      src = (src+1)|0;
      num = (num-1)|0;
    }
    return ret|0;
}
function _bitshift64Shl(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = (high << bits) | ((low&(ander << (32 - bits))) >>> (32 - bits));
      return low << bits;
    }
    tempRet0 = low << (bits - 32);
    return 0;
}
function _memmove(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    if (((src|0) < (dest|0)) & ((dest|0) < ((src + num)|0))) {
      // Unlikely case: Copy backwards in a safe manner
      ret = dest;
      src = (src + num)|0;
      dest = (dest + num)|0;
      while ((num|0) > 0) {
        dest = (dest - 1)|0;
        src = (src - 1)|0;
        num = (num - 1)|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      }
      dest = ret;
    } else {
      _memcpy(dest, src, num) | 0;
    }
    return dest | 0;
}
function _memset(ptr, value, num) {
    ptr = ptr|0; value = value|0; num = num|0;
    var stop = 0, value4 = 0, stop4 = 0, unaligned = 0;
    stop = (ptr + num)|0;
    if ((num|0) >= 20) {
      // This is unaligned, but quite large, so work hard to get to aligned settings
      value = value & 0xff;
      unaligned = ptr & 3;
      value4 = value | (value << 8) | (value << 16) | (value << 24);
      stop4 = stop & ~3;
      if (unaligned) {
        unaligned = (ptr + 4 - unaligned)|0;
        while ((ptr|0) < (unaligned|0)) { // no need to check for stop, since we have large num
          HEAP8[((ptr)>>0)]=value;
          ptr = (ptr+1)|0;
        }
      }
      while ((ptr|0) < (stop4|0)) {
        HEAP32[((ptr)>>2)]=value4;
        ptr = (ptr+4)|0;
      }
    }
    while ((ptr|0) < (stop|0)) {
      HEAP8[((ptr)>>0)]=value;
      ptr = (ptr+1)|0;
    }
    return (ptr-num)|0;
}
function _bitshift64Ashr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = (high|0) < 0 ? -1 : 0;
    return (high >> (bits - 32))|0;
  }
function _llvm_cttz_i32(x) {
    x = x|0;
    var ret = 0;
    ret = ((HEAP8[(((cttz_i8)+(x & 0xff))>>0)])|0);
    if ((ret|0) < 8) return ret|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 8)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 8)|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 16)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 16)|0;
    return (((HEAP8[(((cttz_i8)+(x >>> 24))>>0)])|0) + 24)|0;
  }

// ======== compiled code from system/lib/compiler-rt , see readme therein
function ___muldsi3($a, $b) {
  $a = $a | 0;
  $b = $b | 0;
  var $1 = 0, $2 = 0, $3 = 0, $6 = 0, $8 = 0, $11 = 0, $12 = 0;
  $1 = $a & 65535;
  $2 = $b & 65535;
  $3 = Math_imul($2, $1) | 0;
  $6 = $a >>> 16;
  $8 = ($3 >>> 16) + (Math_imul($2, $6) | 0) | 0;
  $11 = $b >>> 16;
  $12 = Math_imul($11, $1) | 0;
  return (tempRet0 = (($8 >>> 16) + (Math_imul($11, $6) | 0) | 0) + ((($8 & 65535) + $12 | 0) >>> 16) | 0, 0 | ($8 + $12 << 16 | $3 & 65535)) | 0;
}
function ___divdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $6$0 = 0, $7$0 = 0, $7$1 = 0, $8$0 = 0, $10$0 = 0;
  $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
  $4$1 = tempRet0;
  $6$0 = _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0;
  $7$0 = $2$0 ^ $1$0;
  $7$1 = $2$1 ^ $1$1;
  $8$0 = ___udivmoddi4($4$0, $4$1, $6$0, tempRet0, 0) | 0;
  $10$0 = _i64Subtract($8$0 ^ $7$0, tempRet0 ^ $7$1, $7$0, $7$1) | 0;
  return $10$0 | 0;
}
function ___remdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $rem = 0, $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $6$0 = 0, $10$0 = 0, $10$1 = 0, __stackBase__ = 0;
  __stackBase__ = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  $rem = __stackBase__ | 0;
  $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
  $4$1 = tempRet0;
  $6$0 = _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0;
  ___udivmoddi4($4$0, $4$1, $6$0, tempRet0, $rem) | 0;
  $10$0 = _i64Subtract(HEAP32[$rem >> 2] ^ $1$0, HEAP32[$rem + 4 >> 2] ^ $1$1, $1$0, $1$1) | 0;
  $10$1 = tempRet0;
  STACKTOP = __stackBase__;
  return (tempRet0 = $10$1, $10$0) | 0;
}
function ___muldi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $x_sroa_0_0_extract_trunc = 0, $y_sroa_0_0_extract_trunc = 0, $1$0 = 0, $1$1 = 0, $2 = 0;
  $x_sroa_0_0_extract_trunc = $a$0;
  $y_sroa_0_0_extract_trunc = $b$0;
  $1$0 = ___muldsi3($x_sroa_0_0_extract_trunc, $y_sroa_0_0_extract_trunc) | 0;
  $1$1 = tempRet0;
  $2 = Math_imul($a$1, $y_sroa_0_0_extract_trunc) | 0;
  return (tempRet0 = ((Math_imul($b$1, $x_sroa_0_0_extract_trunc) | 0) + $2 | 0) + $1$1 | $1$1 & 0, 0 | $1$0 & -1) | 0;
}
function ___udivdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $1$0 = 0;
  $1$0 = ___udivmoddi4($a$0, $a$1, $b$0, $b$1, 0) | 0;
  return $1$0 | 0;
}
function ___uremdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $rem = 0, __stackBase__ = 0;
  __stackBase__ = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  $rem = __stackBase__ | 0;
  ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) | 0;
  STACKTOP = __stackBase__;
  return (tempRet0 = HEAP32[$rem + 4 >> 2] | 0, HEAP32[$rem >> 2] | 0) | 0;
}
function ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  $rem = $rem | 0;
  var $n_sroa_0_0_extract_trunc = 0, $n_sroa_1_4_extract_shift$0 = 0, $n_sroa_1_4_extract_trunc = 0, $d_sroa_0_0_extract_trunc = 0, $d_sroa_1_4_extract_shift$0 = 0, $d_sroa_1_4_extract_trunc = 0, $4 = 0, $17 = 0, $37 = 0, $49 = 0, $51 = 0, $57 = 0, $58 = 0, $66 = 0, $78 = 0, $86 = 0, $88 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $105 = 0, $117 = 0, $119 = 0, $125 = 0, $126 = 0, $130 = 0, $q_sroa_1_1_ph = 0, $q_sroa_0_1_ph = 0, $r_sroa_1_1_ph = 0, $r_sroa_0_1_ph = 0, $sr_1_ph = 0, $d_sroa_0_0_insert_insert99$0 = 0, $d_sroa_0_0_insert_insert99$1 = 0, $137$0 = 0, $137$1 = 0, $carry_0203 = 0, $sr_1202 = 0, $r_sroa_0_1201 = 0, $r_sroa_1_1200 = 0, $q_sroa_0_1199 = 0, $q_sroa_1_1198 = 0, $147 = 0, $149 = 0, $r_sroa_0_0_insert_insert42$0 = 0, $r_sroa_0_0_insert_insert42$1 = 0, $150$1 = 0, $151$0 = 0, $152 = 0, $154$0 = 0, $r_sroa_0_0_extract_trunc = 0, $r_sroa_1_4_extract_trunc = 0, $155 = 0, $carry_0_lcssa$0 = 0, $carry_0_lcssa$1 = 0, $r_sroa_0_1_lcssa = 0, $r_sroa_1_1_lcssa = 0, $q_sroa_0_1_lcssa = 0, $q_sroa_1_1_lcssa = 0, $q_sroa_0_0_insert_ext75$0 = 0, $q_sroa_0_0_insert_ext75$1 = 0, $q_sroa_0_0_insert_insert77$1 = 0, $_0$0 = 0, $_0$1 = 0;
  $n_sroa_0_0_extract_trunc = $a$0;
  $n_sroa_1_4_extract_shift$0 = $a$1;
  $n_sroa_1_4_extract_trunc = $n_sroa_1_4_extract_shift$0;
  $d_sroa_0_0_extract_trunc = $b$0;
  $d_sroa_1_4_extract_shift$0 = $b$1;
  $d_sroa_1_4_extract_trunc = $d_sroa_1_4_extract_shift$0;
  if (($n_sroa_1_4_extract_trunc | 0) == 0) {
    $4 = ($rem | 0) != 0;
    if (($d_sroa_1_4_extract_trunc | 0) == 0) {
      if ($4) {
        HEAP32[$rem >> 2] = ($n_sroa_0_0_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
        HEAP32[$rem + 4 >> 2] = 0;
      }
      $_0$1 = 0;
      $_0$0 = ($n_sroa_0_0_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    } else {
      if (!$4) {
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      HEAP32[$rem >> 2] = $a$0 & -1;
      HEAP32[$rem + 4 >> 2] = $a$1 & 0;
      $_0$1 = 0;
      $_0$0 = 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    }
  }
  $17 = ($d_sroa_1_4_extract_trunc | 0) == 0;
  do {
    if (($d_sroa_0_0_extract_trunc | 0) == 0) {
      if ($17) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
          HEAP32[$rem + 4 >> 2] = 0;
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      if (($n_sroa_0_0_extract_trunc | 0) == 0) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = 0;
          HEAP32[$rem + 4 >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_1_4_extract_trunc >>> 0);
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_1_4_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $37 = $d_sroa_1_4_extract_trunc - 1 | 0;
      if (($37 & $d_sroa_1_4_extract_trunc | 0) == 0) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = 0 | $a$0 & -1;
          HEAP32[$rem + 4 >> 2] = $37 & $n_sroa_1_4_extract_trunc | $a$1 & 0;
        }
        $_0$1 = 0;
        $_0$0 = $n_sroa_1_4_extract_trunc >>> ((_llvm_cttz_i32($d_sroa_1_4_extract_trunc | 0) | 0) >>> 0);
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $49 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
      $51 = $49 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
      if ($51 >>> 0 <= 30) {
        $57 = $51 + 1 | 0;
        $58 = 31 - $51 | 0;
        $sr_1_ph = $57;
        $r_sroa_0_1_ph = $n_sroa_1_4_extract_trunc << $58 | $n_sroa_0_0_extract_trunc >>> ($57 >>> 0);
        $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($57 >>> 0);
        $q_sroa_0_1_ph = 0;
        $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $58;
        break;
      }
      if (($rem | 0) == 0) {
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      HEAP32[$rem >> 2] = 0 | $a$0 & -1;
      HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
      $_0$1 = 0;
      $_0$0 = 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    } else {
      if (!$17) {
        $117 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
        $119 = $117 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        if ($119 >>> 0 <= 31) {
          $125 = $119 + 1 | 0;
          $126 = 31 - $119 | 0;
          $130 = $119 - 31 >> 31;
          $sr_1_ph = $125;
          $r_sroa_0_1_ph = $n_sroa_0_0_extract_trunc >>> ($125 >>> 0) & $130 | $n_sroa_1_4_extract_trunc << $126;
          $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($125 >>> 0) & $130;
          $q_sroa_0_1_ph = 0;
          $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $126;
          break;
        }
        if (($rem | 0) == 0) {
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        HEAP32[$rem >> 2] = 0 | $a$0 & -1;
        HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $66 = $d_sroa_0_0_extract_trunc - 1 | 0;
      if (($66 & $d_sroa_0_0_extract_trunc | 0) != 0) {
        $86 = (Math_clz32($d_sroa_0_0_extract_trunc | 0) | 0) + 33 | 0;
        $88 = $86 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        $89 = 64 - $88 | 0;
        $91 = 32 - $88 | 0;
        $92 = $91 >> 31;
        $95 = $88 - 32 | 0;
        $105 = $95 >> 31;
        $sr_1_ph = $88;
        $r_sroa_0_1_ph = $91 - 1 >> 31 & $n_sroa_1_4_extract_trunc >>> ($95 >>> 0) | ($n_sroa_1_4_extract_trunc << $91 | $n_sroa_0_0_extract_trunc >>> ($88 >>> 0)) & $105;
        $r_sroa_1_1_ph = $105 & $n_sroa_1_4_extract_trunc >>> ($88 >>> 0);
        $q_sroa_0_1_ph = $n_sroa_0_0_extract_trunc << $89 & $92;
        $q_sroa_1_1_ph = ($n_sroa_1_4_extract_trunc << $89 | $n_sroa_0_0_extract_trunc >>> ($95 >>> 0)) & $92 | $n_sroa_0_0_extract_trunc << $91 & $88 - 33 >> 31;
        break;
      }
      if (($rem | 0) != 0) {
        HEAP32[$rem >> 2] = $66 & $n_sroa_0_0_extract_trunc;
        HEAP32[$rem + 4 >> 2] = 0;
      }
      if (($d_sroa_0_0_extract_trunc | 0) == 1) {
        $_0$1 = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$0 = 0 | $a$0 & -1;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      } else {
        $78 = _llvm_cttz_i32($d_sroa_0_0_extract_trunc | 0) | 0;
        $_0$1 = 0 | $n_sroa_1_4_extract_trunc >>> ($78 >>> 0);
        $_0$0 = $n_sroa_1_4_extract_trunc << 32 - $78 | $n_sroa_0_0_extract_trunc >>> ($78 >>> 0) | 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
    }
  } while (0);
  if (($sr_1_ph | 0) == 0) {
    $q_sroa_1_1_lcssa = $q_sroa_1_1_ph;
    $q_sroa_0_1_lcssa = $q_sroa_0_1_ph;
    $r_sroa_1_1_lcssa = $r_sroa_1_1_ph;
    $r_sroa_0_1_lcssa = $r_sroa_0_1_ph;
    $carry_0_lcssa$1 = 0;
    $carry_0_lcssa$0 = 0;
  } else {
    $d_sroa_0_0_insert_insert99$0 = 0 | $b$0 & -1;
    $d_sroa_0_0_insert_insert99$1 = $d_sroa_1_4_extract_shift$0 | $b$1 & 0;
    $137$0 = _i64Add($d_sroa_0_0_insert_insert99$0 | 0, $d_sroa_0_0_insert_insert99$1 | 0, -1, -1) | 0;
    $137$1 = tempRet0;
    $q_sroa_1_1198 = $q_sroa_1_1_ph;
    $q_sroa_0_1199 = $q_sroa_0_1_ph;
    $r_sroa_1_1200 = $r_sroa_1_1_ph;
    $r_sroa_0_1201 = $r_sroa_0_1_ph;
    $sr_1202 = $sr_1_ph;
    $carry_0203 = 0;
    while (1) {
      $147 = $q_sroa_0_1199 >>> 31 | $q_sroa_1_1198 << 1;
      $149 = $carry_0203 | $q_sroa_0_1199 << 1;
      $r_sroa_0_0_insert_insert42$0 = 0 | ($r_sroa_0_1201 << 1 | $q_sroa_1_1198 >>> 31);
      $r_sroa_0_0_insert_insert42$1 = $r_sroa_0_1201 >>> 31 | $r_sroa_1_1200 << 1 | 0;
      _i64Subtract($137$0, $137$1, $r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1) | 0;
      $150$1 = tempRet0;
      $151$0 = $150$1 >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1;
      $152 = $151$0 & 1;
      $154$0 = _i64Subtract($r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1, $151$0 & $d_sroa_0_0_insert_insert99$0, ((($150$1 | 0) < 0 ? -1 : 0) >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1) & $d_sroa_0_0_insert_insert99$1) | 0;
      $r_sroa_0_0_extract_trunc = $154$0;
      $r_sroa_1_4_extract_trunc = tempRet0;
      $155 = $sr_1202 - 1 | 0;
      if (($155 | 0) == 0) {
        break;
      } else {
        $q_sroa_1_1198 = $147;
        $q_sroa_0_1199 = $149;
        $r_sroa_1_1200 = $r_sroa_1_4_extract_trunc;
        $r_sroa_0_1201 = $r_sroa_0_0_extract_trunc;
        $sr_1202 = $155;
        $carry_0203 = $152;
      }
    }
    $q_sroa_1_1_lcssa = $147;
    $q_sroa_0_1_lcssa = $149;
    $r_sroa_1_1_lcssa = $r_sroa_1_4_extract_trunc;
    $r_sroa_0_1_lcssa = $r_sroa_0_0_extract_trunc;
    $carry_0_lcssa$1 = 0;
    $carry_0_lcssa$0 = $152;
  }
  $q_sroa_0_0_insert_ext75$0 = $q_sroa_0_1_lcssa;
  $q_sroa_0_0_insert_ext75$1 = 0;
  $q_sroa_0_0_insert_insert77$1 = $q_sroa_1_1_lcssa | $q_sroa_0_0_insert_ext75$1;
  if (($rem | 0) != 0) {
    HEAP32[$rem >> 2] = 0 | $r_sroa_0_1_lcssa;
    HEAP32[$rem + 4 >> 2] = $r_sroa_1_1_lcssa | 0;
  }
  $_0$1 = (0 | $q_sroa_0_0_insert_ext75$0) >>> 31 | $q_sroa_0_0_insert_insert77$1 << 1 | ($q_sroa_0_0_insert_ext75$1 << 1 | $q_sroa_0_0_insert_ext75$0 >>> 31) & 0 | $carry_0_lcssa$1;
  $_0$0 = ($q_sroa_0_0_insert_ext75$0 << 1 | 0 >>> 31) & -2 | $carry_0_lcssa$0;
  return (tempRet0 = $_0$1, $_0$0) | 0;
}
// =======================================================================



  
function dynCall_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0;
  return FUNCTION_TABLE_iiiiiiii[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0)|0;
}


function dynCall_viiiii(index,a1,a2,a3,a4,a5) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
  FUNCTION_TABLE_viiiii[index&127](a1|0,a2|0,a3|0,a4|0,a5|0);
}


function dynCall_iiiiiid(index,a1,a2,a3,a4,a5,a6) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=+a6;
  return FUNCTION_TABLE_iiiiiid[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,+a6)|0;
}


function dynCall_vi(index,a1) {
  index = index|0;
  a1=a1|0;
  FUNCTION_TABLE_vi[index&1023](a1|0);
}


function dynCall_vii(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=a2|0;
  FUNCTION_TABLE_vii[index&1023](a1|0,a2|0);
}


function dynCall_iiiiiii(index,a1,a2,a3,a4,a5,a6) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
  return FUNCTION_TABLE_iiiiiii[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0)|0;
}


function dynCall_ii(index,a1) {
  index = index|0;
  a1=a1|0;
  return FUNCTION_TABLE_ii[index&1023](a1|0)|0;
}


function dynCall_id(index,a1) {
  index = index|0;
  a1=+a1;
  return FUNCTION_TABLE_id[index&511](+a1)|0;
}


function dynCall_iiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0; a9=a9|0; a10=a10|0; a11=a11|0;
  return FUNCTION_TABLE_iiiiiiiiiiii[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0,a9|0,a10|0,a11|0)|0;
}


function dynCall_iiii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  return FUNCTION_TABLE_iiii[index&1023](a1|0,a2|0,a3|0)|0;
}


function dynCall_viiiiiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0; a9=a9|0; a10=a10|0; a11=a11|0; a12=a12|0; a13=a13|0; a14=a14|0; a15=a15|0;
  FUNCTION_TABLE_viiiiiiiiiiiiiii[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0,a9|0,a10|0,a11|0,a12|0,a13|0,a14|0,a15|0);
}


function dynCall_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
  FUNCTION_TABLE_viiiiii[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0);
}


function dynCall_di(index,a1) {
  index = index|0;
  a1=a1|0;
  return +FUNCTION_TABLE_di[index&511](a1|0);
}


function dynCall_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0;
  FUNCTION_TABLE_viiiiiii[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0);
}


function dynCall_viiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0; a9=a9|0; a10=a10|0;
  FUNCTION_TABLE_viiiiiiiiii[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0,a9|0,a10|0);
}


function dynCall_iii(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=a2|0;
  return FUNCTION_TABLE_iii[index&1023](a1|0,a2|0)|0;
}


function dynCall_iiiiii(index,a1,a2,a3,a4,a5) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
  return FUNCTION_TABLE_iiiiii[index&1023](a1|0,a2|0,a3|0,a4|0,a5|0)|0;
}


function dynCall_diii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  return +FUNCTION_TABLE_diii[index&1023](a1|0,a2|0,a3|0);
}


function dynCall_i(index) {
  index = index|0;
  
  return FUNCTION_TABLE_i[index&1023]()|0;
}


function dynCall_iiiii(index,a1,a2,a3,a4) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  return FUNCTION_TABLE_iiiii[index&1023](a1|0,a2|0,a3|0,a4|0)|0;
}


function dynCall_viii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  FUNCTION_TABLE_viii[index&1023](a1|0,a2|0,a3|0);
}


function dynCall_v(index) {
  index = index|0;
  
  FUNCTION_TABLE_v[index&1023]();
}


function dynCall_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0;
  return FUNCTION_TABLE_iiiiiiiii[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0)|0;
}


function dynCall_iiiiid(index,a1,a2,a3,a4,a5) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=+a5;
  return FUNCTION_TABLE_iiiiid[index&255](a1|0,a2|0,a3|0,a4|0,+a5)|0;
}


function dynCall_viiii(index,a1,a2,a3,a4) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  FUNCTION_TABLE_viiii[index&127](a1|0,a2|0,a3|0,a4|0);
}

function b0(p0,p1,p2,p3,p4,p5,p6) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0; nullFunc_iiiiiiii(0);return 0; }
function b1(p0,p1,p2,p3,p4) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; nullFunc_viiiii(1); }
function b2(p0,p1,p2,p3,p4,p5) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = +p5; nullFunc_iiiiiid(2);return 0; }
function b3(p0) { p0 = p0|0; nullFunc_vi(3); }
function _freelocale__wrapper(p0) { p0 = p0|0; _freelocale(p0|0); }
function b4(p0,p1) { p0 = p0|0;p1 = p1|0; nullFunc_vii(4); }
function b5(p0,p1,p2,p3,p4,p5) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0; nullFunc_iiiiiii(5);return 0; }
function b6(p0) { p0 = p0|0; nullFunc_ii(6);return 0; }
function _uselocale__wrapper(p0) { p0 = p0|0; return _uselocale(p0|0)|0; }
function _pthread_mutex_unlock__wrapper(p0) { p0 = p0|0; return _pthread_mutex_unlock(p0|0)|0; }
function _pthread_mutex_lock__wrapper(p0) { p0 = p0|0; return _pthread_mutex_lock(p0|0)|0; }
function _pthread_cond_broadcast__wrapper(p0) { p0 = p0|0; return _pthread_cond_broadcast(p0|0)|0; }
function b7(p0) { p0 = +p0; nullFunc_id(7);return 0; }
function b8(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0;p8 = p8|0;p9 = p9|0;p10 = p10|0; nullFunc_iiiiiiiiiiii(8);return 0; }
function b9(p0,p1,p2) { p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_iiii(9);return 0; }
function _fprintf__wrapper(p0,p1,p2) { p0 = p0|0;p1 = p1|0;p2 = p2|0; return _fprintf(p0|0,p1|0,p2|0)|0; }
function _newlocale__wrapper(p0,p1,p2) { p0 = p0|0;p1 = p1|0;p2 = p2|0; return _newlocale(p0|0,p1|0,p2|0)|0; }
function b10(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0;p8 = p8|0;p9 = p9|0;p10 = p10|0;p11 = p11|0;p12 = p12|0;p13 = p13|0;p14 = p14|0; nullFunc_viiiiiiiiiiiiiii(10); }
function b11(p0,p1,p2,p3,p4,p5) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0; nullFunc_viiiiii(11); }
function b12(p0) { p0 = p0|0; nullFunc_di(12);return +0; }
function b13(p0,p1,p2,p3,p4,p5,p6) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0; nullFunc_viiiiiii(13); }
function b14(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0;p8 = p8|0;p9 = p9|0; nullFunc_viiiiiiiiii(14); }
function b15(p0,p1) { p0 = p0|0;p1 = p1|0; nullFunc_iii(15);return 0; }
function _printf__wrapper(p0,p1) { p0 = p0|0;p1 = p1|0; return _printf(p0|0,p1|0)|0; }
function b16(p0,p1,p2,p3,p4) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; nullFunc_iiiiii(16);return 0; }
function b17(p0,p1,p2) { p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_diii(17);return +0; }
function b18() { ; nullFunc_i(18);return 0; }
function ___ctype_b_loc__wrapper() { ; return ___ctype_b_loc()|0; }
function ___ctype_toupper_loc__wrapper() { ; return ___ctype_toupper_loc()|0; }
function ___ctype_tolower_loc__wrapper() { ; return ___ctype_tolower_loc()|0; }
function b19(p0,p1,p2,p3) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_iiiii(19);return 0; }
function _catgets__wrapper(p0,p1,p2,p3) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; return _catgets(p0|0,p1|0,p2|0,p3|0)|0; }
function b20(p0,p1,p2) { p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_viii(20); }
function ___cxa_throw__wrapper(p0,p1,p2) { p0 = p0|0;p1 = p1|0;p2 = p2|0; ___cxa_throw(p0|0,p1|0,p2|0); }
function b21() { ; nullFunc_v(21); }
function ___cxa_pure_virtual__wrapper() { ; ___cxa_pure_virtual(); }
function ___cxa_end_catch__wrapper() { ; ___cxa_end_catch(); }
function ___cxa_rethrow__wrapper() { ; ___cxa_rethrow(); }
function b22(p0,p1,p2,p3,p4,p5,p6,p7) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0; nullFunc_iiiiiiiii(22);return 0; }
function b23(p0,p1,p2,p3,p4) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = +p4; nullFunc_iiiiid(23);return 0; }
function b24(p0,p1,p2,p3) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_viiii(24); }

// EMSCRIPTEN_END_FUNCS
var FUNCTION_TABLE_iiiiiiii = [b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,__ZNKSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc,b0,b0,__ZNKSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,__ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,__ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE,b0,b0,__ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,__ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb,b0,b0,b0,b0,b0,__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0];
var FUNCTION_TABLE_viiiii = [b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,b1,b1,b1,__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,b1,b1,b1,__ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1];
var FUNCTION_TABLE_iiiiiid = [b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,__ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce,b2,b2,b2,__ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2];
var FUNCTION_TABLE_vi = [b3,__ZN6ikfast14IkSolutionListIdED2Ev,__ZN6ikfast14IkSolutionListIdED0Ev,b3,b3,b3,__ZN6ikfast14IkSolutionListIdE5ClearEv,__ZN6ikfast10IkSolutionIdED2Ev,__ZN6ikfast10IkSolutionIdED0Ev,b3,b3,b3,b3,__ZNK6ikfast10IkSolutionIdE8ValidateEv,b3,__ZN6ikfast14IkSolutionBaseIdED2Ev,__ZN6ikfast14IkSolutionBaseIdED0Ev,b3,b3,__ZN6ikfast18IkSolutionListBaseIdED2Ev,__ZN6ikfast18IkSolutionListBaseIdED0Ev,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,__ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev,__ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev,__ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev,b3,__ZNSt9bad_allocD2Ev,__ZNSt9bad_allocD0Ev,b3
,__ZNSt11logic_errorD2Ev,__ZNSt11logic_errorD0Ev,b3,__ZNSt13runtime_errorD2Ev,__ZNSt13runtime_errorD0Ev,b3,__ZNSt12out_of_rangeD0Ev,__ZNSt8bad_castD2Ev,__ZNSt8bad_castD0Ev,b3,__ZN10__cxxabiv116__shim_type_infoD2Ev,__ZN10__cxxabiv117__class_type_infoD0Ev,__ZNK10__cxxabiv116__shim_type_info5noop1Ev,__ZNK10__cxxabiv116__shim_type_info5noop2Ev,b3,b3,b3,b3,__ZN10__cxxabiv120__si_class_type_infoD0Ev,b3,b3,b3,__ZN10__cxxabiv121__vmi_class_type_infoD0Ev,b3,b3,b3,b3,__ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev,__ZNSt3__19basic_iosIcNS_11char_traitsIcEEED0Ev,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev
,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED0Ev,b3,b3,b3,b3,b3,__ZNSt3__18ios_base7failureD2Ev,__ZNSt3__18ios_base7failureD0Ev,__ZNSt3__18ios_baseD2Ev,__ZNSt3__18ios_baseD0Ev,__ZNSt3__114error_categoryD2Ev,__ZNSt3__119__iostream_categoryD0Ev,b3,b3,b3,b3,b3,__ZNSt3__17collateIcED2Ev,__ZNSt3__17collateIcED0Ev,__ZNSt3__16locale5facet16__on_zero_sharedEv,b3,b3,b3,__ZNSt3__17collateIwED2Ev,__ZNSt3__17collateIwED0Ev,b3,b3,b3,__ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,b3,b3,b3,b3
,b3,b3,b3,b3,__ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b3,b3,b3,b3,b3,b3,b3,b3,__ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,__ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,b3,__ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b3,__ZNSt3__110moneypunctIcLb0EED2Ev,__ZNSt3__110moneypunctIcLb0EED0Ev,b3,b3,b3,b3,b3,b3
,b3,b3,b3,__ZNSt3__110moneypunctIcLb1EED2Ev,__ZNSt3__110moneypunctIcLb1EED0Ev,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZNSt3__110moneypunctIwLb0EED2Ev,__ZNSt3__110moneypunctIwLb0EED0Ev,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZNSt3__110moneypunctIwLb1EED2Ev,__ZNSt3__110moneypunctIwLb1EED0Ev,b3,b3,b3
,b3,b3,b3,b3,b3,b3,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,b3,b3,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b3,b3,__ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,b3,b3,__ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b3,b3,__ZNSt3__18messagesIcED2Ev,__ZNSt3__18messagesIcED0Ev,b3,b3,b3,__ZNSt3__18messagesIwED2Ev,__ZNSt3__18messagesIwED0Ev,b3
,b3,b3,__ZNSt3__16locale5__impD2Ev,__ZNSt3__16locale5__impD0Ev,__ZNSt3__15ctypeIcED2Ev,__ZNSt3__15ctypeIcED0Ev,b3,b3,b3,b3,b3,b3,b3,b3,__ZNSt3__17codecvtIwc11__mbstate_tED2Ev,__ZNSt3__17codecvtIwc11__mbstate_tED0Ev,b3,b3,b3,b3,b3,b3,b3,__ZNSt3__18numpunctIcED2Ev,__ZNSt3__18numpunctIcED0Ev,b3,b3,b3,b3,b3
,__ZNSt3__18numpunctIwED2Ev,__ZNSt3__18numpunctIwED0Ev,b3,b3,b3,b3,b3,__ZNSt3__16locale5facetD2Ev,__ZNSt3__16locale5facetD0Ev,__ZNSt3__15ctypeIwED0Ev,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZNSt3__17codecvtIcc11__mbstate_tED0Ev,b3,b3,b3,b3,b3,b3,b3
,__ZNSt3__17codecvtIDsc11__mbstate_tED0Ev,b3,b3,b3,b3,b3,b3,b3,__ZNSt3__17codecvtIDic11__mbstate_tED0Ev,b3,b3,b3,b3,b3,b3,b3,__ZNSt3__116__narrow_to_utf8ILj32EED0Ev,__ZNSt3__117__widen_from_utf8ILj32EED0Ev,__ZNSt3__112system_errorD2Ev,__ZNSt3__112system_errorD0Ev,b3,b3,b3,b3,b3,b3,b3,b3,__ZNSt3__16vectorIdNS_9allocatorIdEEED2Ev,__ZNSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEEC2Ev
,b3,b3,__ZNSt3__113__vector_baseIdNS_9allocatorIdEEED2Ev,b3,__ZNSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEED2Ev,b3,__ZNSt3__112__deallocateEPv,b3,__ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ev,__ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ev,b3,b3,__ZNSt3__16vectorIiNS_9allocatorIiEEED2Ev,__ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev,b3,b3,__ZNSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEED2Ev,b3,b3,b3,b3,__ZNSt3__114__split_bufferIjRNS_9allocatorIjEEED2Ev,b3,b3,b3,b3,b3,b3,b3,b3
,__ZNSt3__114__split_bufferIdRNS_9allocatorIdEEED2Ev,b3,b3,b3,b3,b3,b3,b3,__ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev,b3,b3,__ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev,b3,b3,b3,b3,b3,__ZNSt3__16vectorIiNS_9allocatorIiEEE26__invalidate_all_iteratorsEv,b3,b3,__ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE26__invalidate_all_iteratorsEv,b3,b3,b3,b3,b3,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev,__ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv,b3,b3,b3,b3,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2Ev,b3,b3,b3,b3,b3,__ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,_freelocale__wrapper,b3,b3,__ZNSt3__112__do_nothingEPv,b3,__ZNSt3__121__throw_runtime_errorEPKc,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZNSt3__16locale2id6__initEv,__ZNSt3__117__call_once_proxyINS_5tupleIJNS_12_GLOBAL__N_111__fake_bindEEEEEEvPv,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,_free,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3];
var FUNCTION_TABLE_vii = [b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZNK6ikfast10IkSolutionIdE18GetSolutionIndicesERNSt3__16vectorIjNS2_9allocatorIjEEEE,b4,b4,b4,b4,b4,b4,b4,b4,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZNKSt3__110moneypunctIcLb0EE11do_groupingEv,__ZNKSt3__110moneypunctIcLb0EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIcLb0EE16do_positive_signEv,__ZNKSt3__110moneypunctIcLb0EE16do_negative_signEv
,b4,__ZNKSt3__110moneypunctIcLb0EE13do_pos_formatEv,__ZNKSt3__110moneypunctIcLb0EE13do_neg_formatEv,b4,b4,b4,b4,__ZNKSt3__110moneypunctIcLb1EE11do_groupingEv,__ZNKSt3__110moneypunctIcLb1EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIcLb1EE16do_positive_signEv,__ZNKSt3__110moneypunctIcLb1EE16do_negative_signEv,b4,__ZNKSt3__110moneypunctIcLb1EE13do_pos_formatEv,__ZNKSt3__110moneypunctIcLb1EE13do_neg_formatEv,b4,b4,b4,b4,__ZNKSt3__110moneypunctIwLb0EE11do_groupingEv,__ZNKSt3__110moneypunctIwLb0EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIwLb0EE16do_positive_signEv,__ZNKSt3__110moneypunctIwLb0EE16do_negative_signEv,b4,__ZNKSt3__110moneypunctIwLb0EE13do_pos_formatEv,__ZNKSt3__110moneypunctIwLb0EE13do_neg_formatEv,b4,b4,b4,b4,__ZNKSt3__110moneypunctIwLb1EE11do_groupingEv
,__ZNKSt3__110moneypunctIwLb1EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIwLb1EE16do_positive_signEv,__ZNKSt3__110moneypunctIwLb1EE16do_negative_signEv,b4,__ZNKSt3__110moneypunctIwLb1EE13do_pos_formatEv,__ZNKSt3__110moneypunctIwLb1EE13do_neg_formatEv,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZNKSt3__18messagesIcE8do_closeEi,b4,b4,b4
,b4,__ZNKSt3__18messagesIwE8do_closeEi,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZNKSt3__18numpunctIcE11do_groupingEv,__ZNKSt3__18numpunctIcE11do_truenameEv,__ZNKSt3__18numpunctIcE12do_falsenameEv
,b4,b4,b4,b4,__ZNKSt3__18numpunctIwE11do_groupingEv,__ZNKSt3__18numpunctIwE11do_truenameEv,__ZNKSt3__18numpunctIwE12do_falsenameEv,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZNSt3__16vectorIdNS_9allocatorIdEEEC2Ej,b4,b4,b4,b4,b4,b4,b4,b4
,__ZNSt3__16vectorIdNS_9allocatorIdEEE8allocateEj,__ZNSt3__16vectorIdNS_9allocatorIdEEE18__construct_at_endEj,b4,__ZNSt13runtime_errorC2EPKc,b4,__ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE7destroyIS5_EEvRS8_PT_,b4,__ZNSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE9push_backERKS3_,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE7destroyIS4_EEvRS5_PT_,__ZNSt3__116allocator_traitsINS_9allocatorIiEEE7destroyIiEEvRS2_PT_,b4,__ZNSt3__16vectorIjNS_9allocatorIjEEE26__swap_out_circular_bufferERNS_14__split_bufferIjRS2_EE,b4,__ZNSt3__116allocator_traitsINS_9allocatorIjEEE7destroyIjEEvRS2_PT_,b4,b4,__ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE18__construct_at_endEj,__ZNKSt3__16vectorIjNS_9allocatorIjEEE17__annotate_shrinkEj,b4,__ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE18__construct_at_endEj,__ZNSt3__16vectorIdNS_9allocatorIdEEE26__swap_out_circular_bufferERNS_14__split_bufferIdRS2_EE
,b4,__ZNKSt3__16vectorIdNS_9allocatorIdEEE17__annotate_shrinkEj,__ZNSt3__116allocator_traitsINS_9allocatorIdEEE7destroyIdEEvRS2_PT_,b4,__ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2ERKS6_,__ZNSt3__16vectorIiNS_9allocatorIiEEEC2ERKS3_,__ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8allocateEj,b4,b4,__ZNSt3__16vectorIiNS_9allocatorIiEEE8allocateEj,b4,b4,b4,b4,__ZNKSt3__16vectorIiNS_9allocatorIiEEE17__annotate_shrinkEj,b4,b4,b4,__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE17__annotate_shrinkEj,b4,b4,b4,b4,__ZNKSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv,__ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE,b4,b4,b4,__ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej,__ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE18__construct_at_endEj
,__ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endEj,b4,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEC2Ej,__ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev,b4,b4,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEj,b4,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5pbumpEi,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_,b4,b4,b4,b4,__ZNSt3__19basic_iosIcNS_11char_traitsIcEEE8setstateEj,b4,b4,b4,b4,b4,b4,b4,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE,b4,b4,_abort_message,b4,b4,__ZNSt3__118__libcpp_refstringC2EPKc
,b4,b4,__ZNSt3__18ios_base16__call_callbacksENS0_5eventE,b4,__ZNSt3__18ios_base5clearEj,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj,b4,b4,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw,b4,b4,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj,b4,b4,b4,b4,b4,__ZNSt11logic_errorC2EPKc,__ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEEC2Ej,b4,__ZNSt3__16locale5__imp7installINS_7collateIcEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7collateIwEEEEvPT_,__ZNSt3__16locale5__imp7installINS_5ctypeIcEEEEvPT_,__ZNSt3__16locale5__imp7installINS_5ctypeIwEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7codecvtIcc11__mbstate_tEEEEvPT_,__ZNSt3__17codecvtIwc11__mbstate_tEC2Ej,__ZNSt3__16locale5__imp7installINS_7codecvtIwc11__mbstate_tEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7codecvtIDsc11__mbstate_tEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7codecvtIDic11__mbstate_tEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8numpunctIcEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8numpunctIwEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_
,__ZNSt3__16locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_,__ZNSt3__16locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_,__ZNSt3__16locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_,__ZNSt3__16locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_,__ZNSt3__16locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8messagesIcEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8messagesIwEEEEvPT_,b4,__ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE6resizeEj,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8allocateEj,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4];
var FUNCTION_TABLE_iiiiiii = [b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,b5,b5,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,b5,b5,b5,b5,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx,b5
,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy,b5,b5,b5,b5,b5,b5,b5,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx,b5,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy,b5,b5,b5,b5,b5,b5,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,__ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE,b5,b5,b5,__ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5];
var FUNCTION_TABLE_ii = [b6,b6,b6,b6,b6,__ZNK6ikfast14IkSolutionListIdE15GetNumSolutionsEv,b6,b6,b6,b6,b6,__ZNK6ikfast10IkSolutionIdE7GetFreeEv,__ZNK6ikfast10IkSolutionIdE6GetDOFEv,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv
,b6,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9underflowEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,__ZNKSt9bad_alloc4whatEv
,b6,b6,__ZNKSt11logic_error4whatEv,b6,b6,__ZNKSt13runtime_error4whatEv,b6,b6,b6,__ZNKSt8bad_cast4whatEv,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9underflowEv,b6,b6,b6,b6,b6,b6,b6,b6,__ZNKSt3__119__iostream_category4nameEv,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv,b6,b6,b6,b6,b6,b6,__ZNKSt3__120__time_get_c_storageIcE7__weeksEv,__ZNKSt3__120__time_get_c_storageIcE8__monthsEv,__ZNKSt3__120__time_get_c_storageIcE7__am_pmEv,__ZNKSt3__120__time_get_c_storageIcE3__cEv,__ZNKSt3__120__time_get_c_storageIcE3__rEv,__ZNKSt3__120__time_get_c_storageIcE3__xEv,__ZNKSt3__120__time_get_c_storageIcE3__XEv
,b6,b6,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv,b6,b6,b6,b6,b6,b6,__ZNKSt3__120__time_get_c_storageIwE7__weeksEv,__ZNKSt3__120__time_get_c_storageIwE8__monthsEv,__ZNKSt3__120__time_get_c_storageIwE7__am_pmEv,__ZNKSt3__120__time_get_c_storageIwE3__cEv,__ZNKSt3__120__time_get_c_storageIwE3__rEv,__ZNKSt3__120__time_get_c_storageIwE3__xEv,__ZNKSt3__120__time_get_c_storageIwE3__XEv,b6,b6,b6,b6,b6,b6,b6,b6,__ZNKSt3__110moneypunctIcLb0EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIcLb0EE16do_thousands_sepEv,b6,b6,b6,b6
,__ZNKSt3__110moneypunctIcLb0EE14do_frac_digitsEv,b6,b6,b6,b6,__ZNKSt3__110moneypunctIcLb1EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIcLb1EE16do_thousands_sepEv,b6,b6,b6,b6,__ZNKSt3__110moneypunctIcLb1EE14do_frac_digitsEv,b6,b6,b6,b6,__ZNKSt3__110moneypunctIwLb0EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIwLb0EE16do_thousands_sepEv,b6,b6,b6,b6,__ZNKSt3__110moneypunctIwLb0EE14do_frac_digitsEv,b6,b6,b6,b6,__ZNKSt3__110moneypunctIwLb1EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIwLb1EE16do_thousands_sepEv,b6
,b6,b6,b6,__ZNKSt3__110moneypunctIwLb1EE14do_frac_digitsEv,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,__ZNKSt3__17codecvtIwc11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIwc11__mbstate_tE16do_always_noconvEv,b6,__ZNKSt3__17codecvtIwc11__mbstate_tE13do_max_lengthEv,b6,b6,__ZNKSt3__18numpunctIcE16do_decimal_pointEv,__ZNKSt3__18numpunctIcE16do_thousands_sepEv,b6,b6,b6
,b6,b6,__ZNKSt3__18numpunctIwE16do_decimal_pointEv,__ZNKSt3__18numpunctIwE16do_thousands_sepEv,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,__ZNKSt3__17codecvtIcc11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIcc11__mbstate_tE16do_always_noconvEv,b6,__ZNKSt3__17codecvtIcc11__mbstate_tE13do_max_lengthEv
,b6,b6,b6,b6,__ZNKSt3__17codecvtIDsc11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIDsc11__mbstate_tE16do_always_noconvEv,b6,__ZNKSt3__17codecvtIDsc11__mbstate_tE13do_max_lengthEv,b6,b6,b6,b6,__ZNKSt3__17codecvtIDic11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIDic11__mbstate_tE16do_always_noconvEv,b6,__ZNKSt3__17codecvtIDic11__mbstate_tE13do_max_lengthEv,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,__ZNKSt3__19nullptr_tcvPT_IiEEv,b6,b6,__ZNKSt3__19nullptr_tcvPT_IN6ikfast23IkSingleDOFSolutionBaseIdEEEEv,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv,__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5pbaseEv,b6,b6,b6,b6,b6,__ZNKSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentrycvbEv,__ZNKSt3__18ios_base5flagsEv,__ZNKSt3__19basic_iosIcNS_11char_traitsIcEEE4fillEv,b6,b6,b6,b6,b6,__ZNKSt3__19basic_iosIcNS_11char_traitsIcEEE5rdbufEv,b6,__ZNKSt3__19nullptr_tcvPT_INS_15basic_streambufIcNS_11char_traitsIcEEEEEEv,b6,b6,b6,b6,b6,b6,b6,b6
,__Znwj,b6,b6,b6,b6,b6,__ZNKSt3__18ios_base6getlocEv,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,_uselocale__wrapper,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,_wcslen,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,_pthread_mutex_unlock__wrapper,_pthread_mutex_lock__wrapper,_pthread_cond_broadcast__wrapper,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6];
var FUNCTION_TABLE_id = [b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,__Z13__DOUBLE_BITSd,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7];
var FUNCTION_TABLE_iiiiiiiiiiii = [b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_,b8,b8,b8,b8
,b8,b8,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8];
var FUNCTION_TABLE_iiii = [b9,b9,b9,__ZN6ikfast14IkSolutionListIdE11AddSolutionERKNSt3__16vectorINS_23IkSingleDOFSolutionBaseIdEENS2_9allocatorIS5_EEEERKNS3_IiNS6_IiEEEE,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPci,b9,b9,b9,b9
,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci,b9,b9,b9,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,_sn_write,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,__ZNKSt3__114error_category10equivalentEiRKNS_15error_conditionE,__ZNKSt3__114error_category10equivalentERKNS_10error_codeEi,b9,b9,b9,b9,b9,b9,__ZNKSt3__17collateIcE7do_hashEPKcS3_,b9,b9,b9,b9,__ZNKSt3__17collateIwE7do_hashEPKwS3_,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,__ZNKSt3__18messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,b9,b9,b9,b9,__ZNKSt3__18messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE
,b9,b9,b9,b9,b9,b9,b9,__ZNKSt3__15ctypeIcE10do_toupperEPcPKc,b9,__ZNKSt3__15ctypeIcE10do_tolowerEPcPKc,b9,b9,__ZNKSt3__15ctypeIcE9do_narrowEcc,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,__ZNKSt3__15ctypeIwE5do_isEtw,b9,b9,b9,b9,__ZNKSt3__15ctypeIwE10do_toupperEPwPKw,b9,__ZNKSt3__15ctypeIwE10do_tolowerEPwPKw,b9,b9,__ZNKSt3__15ctypeIwE9do_narrowEwc,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,_fprintf__wrapper,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5sputnEPKci,b9,b9,b9,_do_read,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,_newlocale__wrapper,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_,b9,b9,b9,b9,b9,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendIPwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,_wcrtomb,b9,b9,_mbtowc,_mbrlen
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,_vasprintf,b9,b9,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9];
var FUNCTION_TABLE_viiiiiiiiiiiiiii = [b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,__ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i,b10,__ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10];
var FUNCTION_TABLE_viiiiii = [b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekoffExNS_8ios_base7seekdirEj,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b11,b11,b11,__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b11,b11,b11,__ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b11,b11,b11,b11,b11,b11
,b11,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,__ZNKSt3__18messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,b11,b11,b11,b11
,__ZNKSt3__18messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11];
var FUNCTION_TABLE_di = [b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,_atof,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12];
var FUNCTION_TABLE_viiiiiii = [b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE,b13,b13,__ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE,b13,b13,__ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE,__ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13];
var FUNCTION_TABLE_viiiiiiiiii = [b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,__ZNSt3__111__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri,b14,b14
,b14,b14,b14,__ZNSt3__111__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri,b14,b14,b14,b14,__ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri,b14,__ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14];
var FUNCTION_TABLE_iii = [b15,b15,b15,b15,__ZNK6ikfast14IkSolutionListIdE11GetSolutionEj,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9pbackfailEi,b15,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE8overflowEi,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8overflowEi,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,__ZNKSt3__15ctypeIcE10do_toupperEc,b15,__ZNKSt3__15ctypeIcE10do_tolowerEc,b15,__ZNKSt3__15ctypeIcE8do_widenEc,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,__ZNKSt3__15ctypeIwE10do_toupperEw,b15,__ZNKSt3__15ctypeIwE10do_tolowerEw,b15,__ZNKSt3__15ctypeIwE8do_widenEc,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,__ZNSt3__16vectorIdNS_9allocatorIdEEEixEj,b15,b15,_printf__wrapper,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,__ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEaSERKS6_,__ZNSt3__16vectorIiNS_9allocatorIiEEEaSERKS3_,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,__ZNSt3__13minIjEERKT_S3_S3_,__ZNSt3__116allocator_traitsINS_9allocatorIjEEE10__max_sizeENS_17integral_constantIbLb1EEERKS2_,b15,b15,b15,b15,b15
,b15,b15,b15,__ZNSt3__116allocator_traitsINS_9allocatorIdEEE10__max_sizeENS_17integral_constantIbLb1EEERKS2_,b15,b15,b15,b15,b15,b15,b15,b15,__ZNSt3__116allocator_traitsINS_9allocatorIiEEE10__max_sizeENS_17integral_constantIbLb1EEERKS2_,__ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE10__max_sizeENS_17integral_constantIbLb1EEERKS5_,b15,b15,b15,b15,b15,b15,b15,__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi,b15,b15,b15,b15,__ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,__ZNKSt3__16locale9use_facetERNS0_2idE,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,_isxdigit_l,_isdigit_l,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15];
var FUNCTION_TABLE_iiiiii = [b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,__ZNKSt3__17collateIcE10do_compareEPKcS3_S3_S3_,b16,b16,b16,b16,__ZNKSt3__17collateIwE10do_compareEPKwS3_S3_S3_,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl,b16,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm
,b16,b16,b16,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv,b16,b16,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl,b16,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm,b16,b16,b16,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,__ZNKSt3__15ctypeIcE9do_narrowEPKcS3_cPc,b16,b16,b16,b16,__ZNKSt3__17codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,b16,b16,__ZNKSt3__17codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,__ZNKSt3__15ctypeIwE9do_narrowEPKwS3_cPc,b16,b16,b16,__ZNKSt3__17codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,b16,b16,__ZNKSt3__17codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j,b16
,b16,b16,b16,__ZNKSt3__17codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,b16,b16,__ZNKSt3__17codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j,b16,b16,b16,b16,__ZNKSt3__17codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,b16,b16,__ZNKSt3__17codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,_wcsnrtombs,b16,_mbsnrtowcs,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16];
var FUNCTION_TABLE_diii = [b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,__ZNSt3__115__num_get_floatIfEET_PKcS3_Rj,__ZNSt3__115__num_get_floatIdEET_PKcS3_Rj,__ZNSt3__115__num_get_floatIeEET_PKcS3_Rj,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17];
var FUNCTION_TABLE_i = [b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,__Z20GetNumFreeParametersv,b18,b18,b18,b18,b18,b18,__Z12GetNumJointsv,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,__ZNSt3__115__get_nullptr_tEv,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,___cxa_get_globals_fast,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,__ZNSt3__16__clocEv,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,__ZNSt3__16locale5__imp12make_classicEv,b18,__ZNSt3__16locale5__imp11make_globalEv,__ZNSt3__16locale8__globalEv,b18,b18,___ctype_b_loc__wrapper,___ctype_toupper_loc__wrapper,___ctype_tolower_loc__wrapper,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18];
var FUNCTION_TABLE_iiiii = [b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,__ZNKSt3__15ctypeIcE8do_widenEPKcS3_Pc,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,__ZNKSt3__15ctypeIwE5do_isEPKwS3_Pt,__ZNKSt3__15ctypeIwE10do_scan_isEtPKwS3_,__ZNKSt3__15ctypeIwE11do_scan_notEtPKwS3_,b19,b19,b19,b19,b19,__ZNKSt3__15ctypeIwE8do_widenEPKcS3_Pw,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,__Z9ComputeIkPKdS0_S0_RN6ikfast18IkSolutionListBaseIdEE,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,__ZNSt3__110__sscanf_lEPKcP15__locale_structS1_z,b19,b19,b19,__ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz,b19,b19,b19,b19,b19,b19,b19,b19,_mbsrtowcs,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,_catgets__wrapper,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,_mbrtowc,b19,b19
,b19,b19,b19,b19,__ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji,__ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji,__ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji,__ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji,__ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji,__ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19];
var FUNCTION_TABLE_viii = [b20,b20,b20,b20,b20,b20,b20,b20,b20,__ZNK6ikfast10IkSolutionIdE11GetSolutionEPdPKd,__ZNK6ikfast10IkSolutionIdE11GetSolutionERNSt3__16vectorIdNS2_9allocatorIdEEEERKS6_,b20,b20,b20,b20,b20,b20,b20,__ZNK6ikfast14IkSolutionBaseIdE11GetSolutionERNSt3__16vectorIdNS2_9allocatorIdEEEERKS6_,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,__ZNKSt3__114error_category23default_error_conditionEi,b20,b20,__ZNKSt3__119__iostream_category7messageEi,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,__ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE9constructIS5_S5_EEvRS8_PT_RKT0_,__ZNSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE20__link_nodes_at_backEPNS_11__list_nodeIS3_PvEESA_,b20,b20,b20,__ZNSt3__116allocator_traitsINS_9allocatorIjEEE9constructIjjEEvRS2_PT_RKT0_,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,__ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_,b20,b20,__ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endIPiEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,___cxa_throw__wrapper,b20,b20,b20,b20
,b20,__ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEEC2EPNS_15basic_streambufIcS2_EE,b20,b20,b20,b20,b20,b20,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4setpEPcS4_,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,__ZNSt3__18ios_base7failureC2EPKcRKNS_10error_codeE,b20,b20,b20,b20,b20,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,__ZNSt3__119__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_,__ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_
,b20,b20,b20,b20,b20,__ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_,b20,b20,b20,b20,b20,b20,b20,b20,b20,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,__ZNSt3__112system_error6__initERKNS_10error_codeENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20];
var FUNCTION_TABLE_v = [b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,___cxa_pure_virtual__wrapper,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,__ZL25default_terminate_handlerv,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,___cxa_end_catch__wrapper,b21,b21,b21,b21,b21,b21,__ZN10__cxxabiv112_GLOBAL__N_110construct_Ev,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,__ZSt17__throw_bad_allocv,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,___cxa_rethrow__wrapper,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21];
var FUNCTION_TABLE_iiiiiiiii = [b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,__ZNKSt3__17codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,__ZNKSt3__17codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_,b22,b22,b22,b22,b22
,b22,__ZNKSt3__17codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_,b22,b22,b22,b22,b22,b22,__ZNKSt3__17codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22];
var FUNCTION_TABLE_iiiiid = [b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce,b23,b23,b23,b23,b23,b23,b23,b23,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23];
var FUNCTION_TABLE_viiii = [b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekposENS_4fposI11__mbstate_tEEj,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,b24,b24,b24,__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,b24,b24,b24,__ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,b24,b24,b24,b24
,b24,b24,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,__ZNKSt3__17collateIcE12do_transformEPKcS3_,b24,b24,b24,b24,__ZNKSt3__17collateIwE12do_transformEPKwS3_,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24];

  return { ___cxa_can_catch: ___cxa_can_catch, _free: _free, _main: _main, ___cxa_is_pointer_type: ___cxa_is_pointer_type, _i64Add: _i64Add, _memmove: _memmove, _i64Subtract: _i64Subtract, _memset: _memset, _malloc: _malloc, _memcpy: _memcpy, _strlen: _strlen, _bitshift64Lshr: _bitshift64Lshr, _bitshift64Shl: _bitshift64Shl, runPostSets: runPostSets, stackAlloc: stackAlloc, stackSave: stackSave, stackRestore: stackRestore, establishStackSpace: establishStackSpace, setThrew: setThrew, setTempRet0: setTempRet0, getTempRet0: getTempRet0, dynCall_iiiiiiii: dynCall_iiiiiiii, dynCall_viiiii: dynCall_viiiii, dynCall_iiiiiid: dynCall_iiiiiid, dynCall_vi: dynCall_vi, dynCall_vii: dynCall_vii, dynCall_iiiiiii: dynCall_iiiiiii, dynCall_ii: dynCall_ii, dynCall_id: dynCall_id, dynCall_iiiiiiiiiiii: dynCall_iiiiiiiiiiii, dynCall_iiii: dynCall_iiii, dynCall_viiiiiiiiiiiiiii: dynCall_viiiiiiiiiiiiiii, dynCall_viiiiii: dynCall_viiiiii, dynCall_di: dynCall_di, dynCall_viiiiiii: dynCall_viiiiiii, dynCall_viiiiiiiiii: dynCall_viiiiiiiiii, dynCall_iii: dynCall_iii, dynCall_iiiiii: dynCall_iiiiii, dynCall_diii: dynCall_diii, dynCall_i: dynCall_i, dynCall_iiiii: dynCall_iiiii, dynCall_viii: dynCall_viii, dynCall_v: dynCall_v, dynCall_iiiiiiiii: dynCall_iiiiiiiii, dynCall_iiiiid: dynCall_iiiiid, dynCall_viiii: dynCall_viiii };
})
// EMSCRIPTEN_END_ASM
(Module.asmGlobalArg, Module.asmLibraryArg, buffer);
var real____cxa_can_catch = asm["___cxa_can_catch"]; asm["___cxa_can_catch"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real____cxa_can_catch.apply(null, arguments);
};

var real__free = asm["_free"]; asm["_free"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__free.apply(null, arguments);
};

var real__main = asm["_main"]; asm["_main"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__main.apply(null, arguments);
};

var real____cxa_is_pointer_type = asm["___cxa_is_pointer_type"]; asm["___cxa_is_pointer_type"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real____cxa_is_pointer_type.apply(null, arguments);
};

var real__i64Add = asm["_i64Add"]; asm["_i64Add"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__i64Add.apply(null, arguments);
};

var real__memmove = asm["_memmove"]; asm["_memmove"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__memmove.apply(null, arguments);
};

var real__i64Subtract = asm["_i64Subtract"]; asm["_i64Subtract"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__i64Subtract.apply(null, arguments);
};

var real__malloc = asm["_malloc"]; asm["_malloc"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__malloc.apply(null, arguments);
};

var real__strlen = asm["_strlen"]; asm["_strlen"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__strlen.apply(null, arguments);
};

var real__bitshift64Lshr = asm["_bitshift64Lshr"]; asm["_bitshift64Lshr"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__bitshift64Lshr.apply(null, arguments);
};

var real__bitshift64Shl = asm["_bitshift64Shl"]; asm["_bitshift64Shl"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__bitshift64Shl.apply(null, arguments);
};
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var ___cxa_can_catch = Module["___cxa_can_catch"] = asm["___cxa_can_catch"];
var _free = Module["_free"] = asm["_free"];
var _main = Module["_main"] = asm["_main"];
var ___cxa_is_pointer_type = Module["___cxa_is_pointer_type"] = asm["___cxa_is_pointer_type"];
var _i64Add = Module["_i64Add"] = asm["_i64Add"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
var _memset = Module["_memset"] = asm["_memset"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var _strlen = Module["_strlen"] = asm["_strlen"];
var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
var dynCall_iiiiiiii = Module["dynCall_iiiiiiii"] = asm["dynCall_iiiiiiii"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_iiiiiid = Module["dynCall_iiiiiid"] = asm["dynCall_iiiiiid"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_iiiiiii = Module["dynCall_iiiiiii"] = asm["dynCall_iiiiiii"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_id = Module["dynCall_id"] = asm["dynCall_id"];
var dynCall_iiiiiiiiiiii = Module["dynCall_iiiiiiiiiiii"] = asm["dynCall_iiiiiiiiiiii"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_viiiiiiiiiiiiiii = Module["dynCall_viiiiiiiiiiiiiii"] = asm["dynCall_viiiiiiiiiiiiiii"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_di = Module["dynCall_di"] = asm["dynCall_di"];
var dynCall_viiiiiii = Module["dynCall_viiiiiii"] = asm["dynCall_viiiiiii"];
var dynCall_viiiiiiiiii = Module["dynCall_viiiiiiiiii"] = asm["dynCall_viiiiiiiiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
var dynCall_diii = Module["dynCall_diii"] = asm["dynCall_diii"];
var dynCall_i = Module["dynCall_i"] = asm["dynCall_i"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_iiiiiiiii = Module["dynCall_iiiiiiiii"] = asm["dynCall_iiiiiiiii"];
var dynCall_iiiiid = Module["dynCall_iiiiid"] = asm["dynCall_iiiiid"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];
;

Runtime.stackAlloc = asm['stackAlloc'];
Runtime.stackSave = asm['stackSave'];
Runtime.stackRestore = asm['stackRestore'];
Runtime.establishStackSpace = asm['establishStackSpace'];

Runtime.setTempRet0 = asm['setTempRet0'];
Runtime.getTempRet0 = asm['getTempRet0'];


// TODO: strip out parts of this we do not need

//======= begin closure i64 code =======

// Copyright 2009 The Closure Library Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/**
 * @fileoverview Defines a Long class for representing a 64-bit two's-complement
 * integer value, which faithfully simulates the behavior of a Java "long". This
 * implementation is derived from LongLib in GWT.
 *
 */

var i64Math = (function() { // Emscripten wrapper
  var goog = { math: {} };


  /**
   * Constructs a 64-bit two's-complement integer, given its low and high 32-bit
   * values as *signed* integers.  See the from* functions below for more
   * convenient ways of constructing Longs.
   *
   * The internal representation of a long is the two given signed, 32-bit values.
   * We use 32-bit pieces because these are the size of integers on which
   * Javascript performs bit-operations.  For operations like addition and
   * multiplication, we split each number into 16-bit pieces, which can easily be
   * multiplied within Javascript's floating-point representation without overflow
   * or change in sign.
   *
   * In the algorithms below, we frequently reduce the negative case to the
   * positive case by negating the input(s) and then post-processing the result.
   * Note that we must ALWAYS check specially whether those values are MIN_VALUE
   * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as
   * a positive number, it overflows back into a negative).  Not handling this
   * case would often result in infinite recursion.
   *
   * @param {number} low  The low (signed) 32 bits of the long.
   * @param {number} high  The high (signed) 32 bits of the long.
   * @constructor
   */
  goog.math.Long = function(low, high) {
    /**
     * @type {number}
     * @private
     */
    this.low_ = low | 0;  // force into 32 signed bits.

    /**
     * @type {number}
     * @private
     */
    this.high_ = high | 0;  // force into 32 signed bits.
  };


  // NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the
  // from* methods on which they depend.


  /**
   * A cache of the Long representations of small integer values.
   * @type {!Object}
   * @private
   */
  goog.math.Long.IntCache_ = {};


  /**
   * Returns a Long representing the given (32-bit) integer value.
   * @param {number} value The 32-bit integer in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromInt = function(value) {
    if (-128 <= value && value < 128) {
      var cachedObj = goog.math.Long.IntCache_[value];
      if (cachedObj) {
        return cachedObj;
      }
    }

    var obj = new goog.math.Long(value | 0, value < 0 ? -1 : 0);
    if (-128 <= value && value < 128) {
      goog.math.Long.IntCache_[value] = obj;
    }
    return obj;
  };


  /**
   * Returns a Long representing the given value, provided that it is a finite
   * number.  Otherwise, zero is returned.
   * @param {number} value The number in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromNumber = function(value) {
    if (isNaN(value) || !isFinite(value)) {
      return goog.math.Long.ZERO;
    } else if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MIN_VALUE;
    } else if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MAX_VALUE;
    } else if (value < 0) {
      return goog.math.Long.fromNumber(-value).negate();
    } else {
      return new goog.math.Long(
          (value % goog.math.Long.TWO_PWR_32_DBL_) | 0,
          (value / goog.math.Long.TWO_PWR_32_DBL_) | 0);
    }
  };


  /**
   * Returns a Long representing the 64-bit integer that comes by concatenating
   * the given high and low bits.  Each is assumed to use 32 bits.
   * @param {number} lowBits The low 32-bits.
   * @param {number} highBits The high 32-bits.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromBits = function(lowBits, highBits) {
    return new goog.math.Long(lowBits, highBits);
  };


  /**
   * Returns a Long representation of the given string, written using the given
   * radix.
   * @param {string} str The textual representation of the Long.
   * @param {number=} opt_radix The radix in which the text is written.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromString = function(str, opt_radix) {
    if (str.length == 0) {
      throw Error('number format error: empty string');
    }

    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (str.charAt(0) == '-') {
      return goog.math.Long.fromString(str.substring(1), radix).negate();
    } else if (str.indexOf('-') >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }

    // Do several (8) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));

    var result = goog.math.Long.ZERO;
    for (var i = 0; i < str.length; i += 8) {
      var size = Math.min(8, str.length - i);
      var value = parseInt(str.substring(i, i + size), radix);
      if (size < 8) {
        var power = goog.math.Long.fromNumber(Math.pow(radix, size));
        result = result.multiply(power).add(goog.math.Long.fromNumber(value));
      } else {
        result = result.multiply(radixToPower);
        result = result.add(goog.math.Long.fromNumber(value));
      }
    }
    return result;
  };


  // NOTE: the compiler should inline these constant values below and then remove
  // these variables, so there should be no runtime penalty for these.


  /**
   * Number used repeated below in calculations.  This must appear before the
   * first call to any from* function below.
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_24_DBL_ = 1 << 24;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_32_DBL_ =
      goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_31_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ / 2;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_48_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_64_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_63_DBL_ =
      goog.math.Long.TWO_PWR_64_DBL_ / 2;


  /** @type {!goog.math.Long} */
  goog.math.Long.ZERO = goog.math.Long.fromInt(0);


  /** @type {!goog.math.Long} */
  goog.math.Long.ONE = goog.math.Long.fromInt(1);


  /** @type {!goog.math.Long} */
  goog.math.Long.NEG_ONE = goog.math.Long.fromInt(-1);


  /** @type {!goog.math.Long} */
  goog.math.Long.MAX_VALUE =
      goog.math.Long.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);


  /** @type {!goog.math.Long} */
  goog.math.Long.MIN_VALUE = goog.math.Long.fromBits(0, 0x80000000 | 0);


  /**
   * @type {!goog.math.Long}
   * @private
   */
  goog.math.Long.TWO_PWR_24_ = goog.math.Long.fromInt(1 << 24);


  /** @return {number} The value, assuming it is a 32-bit integer. */
  goog.math.Long.prototype.toInt = function() {
    return this.low_;
  };


  /** @return {number} The closest floating-point representation to this value. */
  goog.math.Long.prototype.toNumber = function() {
    return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ +
           this.getLowBitsUnsigned();
  };


  /**
   * @param {number=} opt_radix The radix in which the text should be written.
   * @return {string} The textual representation of this value.
   */
  goog.math.Long.prototype.toString = function(opt_radix) {
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (this.isZero()) {
      return '0';
    }

    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        // We need to change the Long value before it can be negated, so we remove
        // the bottom-most digit in this base and then recurse to do the rest.
        var radixLong = goog.math.Long.fromNumber(radix);
        var div = this.div(radixLong);
        var rem = div.multiply(radixLong).subtract(this);
        return div.toString(radix) + rem.toInt().toString(radix);
      } else {
        return '-' + this.negate().toString(radix);
      }
    }

    // Do several (6) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));

    var rem = this;
    var result = '';
    while (true) {
      var remDiv = rem.div(radixToPower);
      var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();
      var digits = intval.toString(radix);

      rem = remDiv;
      if (rem.isZero()) {
        return digits + result;
      } else {
        while (digits.length < 6) {
          digits = '0' + digits;
        }
        result = '' + digits + result;
      }
    }
  };


  /** @return {number} The high 32-bits as a signed value. */
  goog.math.Long.prototype.getHighBits = function() {
    return this.high_;
  };


  /** @return {number} The low 32-bits as a signed value. */
  goog.math.Long.prototype.getLowBits = function() {
    return this.low_;
  };


  /** @return {number} The low 32-bits as an unsigned value. */
  goog.math.Long.prototype.getLowBitsUnsigned = function() {
    return (this.low_ >= 0) ?
        this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
  };


  /**
   * @return {number} Returns the number of bits needed to represent the absolute
   *     value of this Long.
   */
  goog.math.Long.prototype.getNumBitsAbs = function() {
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        return 64;
      } else {
        return this.negate().getNumBitsAbs();
      }
    } else {
      var val = this.high_ != 0 ? this.high_ : this.low_;
      for (var bit = 31; bit > 0; bit--) {
        if ((val & (1 << bit)) != 0) {
          break;
        }
      }
      return this.high_ != 0 ? bit + 33 : bit + 1;
    }
  };


  /** @return {boolean} Whether this value is zero. */
  goog.math.Long.prototype.isZero = function() {
    return this.high_ == 0 && this.low_ == 0;
  };


  /** @return {boolean} Whether this value is negative. */
  goog.math.Long.prototype.isNegative = function() {
    return this.high_ < 0;
  };


  /** @return {boolean} Whether this value is odd. */
  goog.math.Long.prototype.isOdd = function() {
    return (this.low_ & 1) == 1;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long equals the other.
   */
  goog.math.Long.prototype.equals = function(other) {
    return (this.high_ == other.high_) && (this.low_ == other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long does not equal the other.
   */
  goog.math.Long.prototype.notEquals = function(other) {
    return (this.high_ != other.high_) || (this.low_ != other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than the other.
   */
  goog.math.Long.prototype.lessThan = function(other) {
    return this.compare(other) < 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than or equal to the other.
   */
  goog.math.Long.prototype.lessThanOrEqual = function(other) {
    return this.compare(other) <= 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than the other.
   */
  goog.math.Long.prototype.greaterThan = function(other) {
    return this.compare(other) > 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than or equal to the other.
   */
  goog.math.Long.prototype.greaterThanOrEqual = function(other) {
    return this.compare(other) >= 0;
  };


  /**
   * Compares this Long with the given one.
   * @param {goog.math.Long} other Long to compare against.
   * @return {number} 0 if they are the same, 1 if the this is greater, and -1
   *     if the given one is greater.
   */
  goog.math.Long.prototype.compare = function(other) {
    if (this.equals(other)) {
      return 0;
    }

    var thisNeg = this.isNegative();
    var otherNeg = other.isNegative();
    if (thisNeg && !otherNeg) {
      return -1;
    }
    if (!thisNeg && otherNeg) {
      return 1;
    }

    // at this point, the signs are the same, so subtraction will not overflow
    if (this.subtract(other).isNegative()) {
      return -1;
    } else {
      return 1;
    }
  };


  /** @return {!goog.math.Long} The negation of this value. */
  goog.math.Long.prototype.negate = function() {
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.MIN_VALUE;
    } else {
      return this.not().add(goog.math.Long.ONE);
    }
  };


  /**
   * Returns the sum of this and the given Long.
   * @param {goog.math.Long} other Long to add to this one.
   * @return {!goog.math.Long} The sum of this and the given Long.
   */
  goog.math.Long.prototype.add = function(other) {
    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 + b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 + b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 + b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 + b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns the difference of this and the given Long.
   * @param {goog.math.Long} other Long to subtract from this.
   * @return {!goog.math.Long} The difference of this and the given Long.
   */
  goog.math.Long.prototype.subtract = function(other) {
    return this.add(other.negate());
  };


  /**
   * Returns the product of this and the given long.
   * @param {goog.math.Long} other Long to multiply with this.
   * @return {!goog.math.Long} The product of this and the other.
   */
  goog.math.Long.prototype.multiply = function(other) {
    if (this.isZero()) {
      return goog.math.Long.ZERO;
    } else if (other.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return other.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return this.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().multiply(other.negate());
      } else {
        return this.negate().multiply(other).negate();
      }
    } else if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }

    // If both longs are small, use float multiplication
    if (this.lessThan(goog.math.Long.TWO_PWR_24_) &&
        other.lessThan(goog.math.Long.TWO_PWR_24_)) {
      return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
    }

    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.
    // We can skip products that would overflow.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 * b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 * b00;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c16 += a00 * b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 * b00;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a16 * b16;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a00 * b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns this Long divided by the given one.
   * @param {goog.math.Long} other Long by which to divide.
   * @return {!goog.math.Long} This Long divided by the given one.
   */
  goog.math.Long.prototype.div = function(other) {
    if (other.isZero()) {
      throw Error('division by zero');
    } else if (this.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      if (other.equals(goog.math.Long.ONE) ||
          other.equals(goog.math.Long.NEG_ONE)) {
        return goog.math.Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE
      } else if (other.equals(goog.math.Long.MIN_VALUE)) {
        return goog.math.Long.ONE;
      } else {
        // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.ZERO)) {
          return other.isNegative() ? goog.math.Long.ONE : goog.math.Long.NEG_ONE;
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().div(other.negate());
      } else {
        return this.negate().div(other).negate();
      }
    } else if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }

    // Repeat the following until the remainder is less than other:  find a
    // floating-point that approximates remainder / other *from below*, add this
    // into the result, and subtract it from the remainder.  It is critical that
    // the approximate value is less than or equal to the real value so that the
    // remainder never becomes negative.
    var res = goog.math.Long.ZERO;
    var rem = this;
    while (rem.greaterThanOrEqual(other)) {
      // Approximate the result of division. This may be a little greater or
      // smaller than the actual value.
      var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));

      // We will tweak the approximate result by changing it in the 48-th digit or
      // the smallest non-fractional digit, whichever is larger.
      var log2 = Math.ceil(Math.log(approx) / Math.LN2);
      var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);

      // Decrease the approximation until it is smaller than the remainder.  Note
      // that if it is too large, the product overflows and is negative.
      var approxRes = goog.math.Long.fromNumber(approx);
      var approxRem = approxRes.multiply(other);
      while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
        approx -= delta;
        approxRes = goog.math.Long.fromNumber(approx);
        approxRem = approxRes.multiply(other);
      }

      // We know the answer can't be zero... and actually, zero would cause
      // infinite recursion since we would make no progress.
      if (approxRes.isZero()) {
        approxRes = goog.math.Long.ONE;
      }

      res = res.add(approxRes);
      rem = rem.subtract(approxRem);
    }
    return res;
  };


  /**
   * Returns this Long modulo the given one.
   * @param {goog.math.Long} other Long by which to mod.
   * @return {!goog.math.Long} This Long modulo the given one.
   */
  goog.math.Long.prototype.modulo = function(other) {
    return this.subtract(this.div(other).multiply(other));
  };


  /** @return {!goog.math.Long} The bitwise-NOT of this value. */
  goog.math.Long.prototype.not = function() {
    return goog.math.Long.fromBits(~this.low_, ~this.high_);
  };


  /**
   * Returns the bitwise-AND of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to AND.
   * @return {!goog.math.Long} The bitwise-AND of this and the other.
   */
  goog.math.Long.prototype.and = function(other) {
    return goog.math.Long.fromBits(this.low_ & other.low_,
                                   this.high_ & other.high_);
  };


  /**
   * Returns the bitwise-OR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to OR.
   * @return {!goog.math.Long} The bitwise-OR of this and the other.
   */
  goog.math.Long.prototype.or = function(other) {
    return goog.math.Long.fromBits(this.low_ | other.low_,
                                   this.high_ | other.high_);
  };


  /**
   * Returns the bitwise-XOR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to XOR.
   * @return {!goog.math.Long} The bitwise-XOR of this and the other.
   */
  goog.math.Long.prototype.xor = function(other) {
    return goog.math.Long.fromBits(this.low_ ^ other.low_,
                                   this.high_ ^ other.high_);
  };


  /**
   * Returns this Long with bits shifted to the left by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the left by the given amount.
   */
  goog.math.Long.prototype.shiftLeft = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var low = this.low_;
      if (numBits < 32) {
        var high = this.high_;
        return goog.math.Long.fromBits(
            low << numBits,
            (high << numBits) | (low >>> (32 - numBits)));
      } else {
        return goog.math.Long.fromBits(0, low << (numBits - 32));
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount.
   */
  goog.math.Long.prototype.shiftRight = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >> numBits);
      } else {
        return goog.math.Long.fromBits(
            high >> (numBits - 32),
            high >= 0 ? 0 : -1);
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount, with
   * the new top bits matching the current sign bit.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount, with
   *     zeros placed into the new leading bits.
   */
  goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >>> numBits);
      } else if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> (numBits - 32), 0);
      }
    }
  };

  //======= begin jsbn =======

  var navigator = { appName: 'Modern Browser' }; // polyfill a little

  // Copyright (c) 2005  Tom Wu
  // All Rights Reserved.
  // http://www-cs-students.stanford.edu/~tjw/jsbn/

  /*
   * Copyright (c) 2003-2005  Tom Wu
   * All Rights Reserved.
   *
   * Permission is hereby granted, free of charge, to any person obtaining
   * a copy of this software and associated documentation files (the
   * "Software"), to deal in the Software without restriction, including
   * without limitation the rights to use, copy, modify, merge, publish,
   * distribute, sublicense, and/or sell copies of the Software, and to
   * permit persons to whom the Software is furnished to do so, subject to
   * the following conditions:
   *
   * The above copyright notice and this permission notice shall be
   * included in all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
   * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
   * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
   *
   * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,
   * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER
   * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF
   * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT
   * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
   *
   * In addition, the following condition applies:
   *
   * All redistributions must retain an intact copy of this copyright notice
   * and disclaimer.
   */

  // Basic JavaScript BN library - subset useful for RSA encryption.

  // Bits per digit
  var dbits;

  // JavaScript engine analysis
  var canary = 0xdeadbeefcafe;
  var j_lm = ((canary&0xffffff)==0xefcafe);

  // (public) Constructor
  function BigInteger(a,b,c) {
    if(a != null)
      if("number" == typeof a) this.fromNumber(a,b,c);
      else if(b == null && "string" != typeof a) this.fromString(a,256);
      else this.fromString(a,b);
  }

  // return new, unset BigInteger
  function nbi() { return new BigInteger(null); }

  // am: Compute w_j += (x*this_i), propagate carries,
  // c is initial carry, returns final carry.
  // c < 3*dvalue, x < 2*dvalue, this_i < dvalue
  // We need to select the fastest one that works in this environment.

  // am1: use a single mult and divide to get the high bits,
  // max digit bits should be 26 because
  // max internal value = 2*dvalue^2-2*dvalue (< 2^53)
  function am1(i,x,w,j,c,n) {
    while(--n >= 0) {
      var v = x*this[i++]+w[j]+c;
      c = Math.floor(v/0x4000000);
      w[j++] = v&0x3ffffff;
    }
    return c;
  }
  // am2 avoids a big mult-and-extract completely.
  // Max digit bits should be <= 30 because we do bitwise ops
  // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)
  function am2(i,x,w,j,c,n) {
    var xl = x&0x7fff, xh = x>>15;
    while(--n >= 0) {
      var l = this[i]&0x7fff;
      var h = this[i++]>>15;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);
      c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);
      w[j++] = l&0x3fffffff;
    }
    return c;
  }
  // Alternately, set max digit bits to 28 since some
  // browsers slow down when dealing with 32-bit numbers.
  function am3(i,x,w,j,c,n) {
    var xl = x&0x3fff, xh = x>>14;
    while(--n >= 0) {
      var l = this[i]&0x3fff;
      var h = this[i++]>>14;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x3fff)<<14)+w[j]+c;
      c = (l>>28)+(m>>14)+xh*h;
      w[j++] = l&0xfffffff;
    }
    return c;
  }
  if(j_lm && (navigator.appName == "Microsoft Internet Explorer")) {
    BigInteger.prototype.am = am2;
    dbits = 30;
  }
  else if(j_lm && (navigator.appName != "Netscape")) {
    BigInteger.prototype.am = am1;
    dbits = 26;
  }
  else { // Mozilla/Netscape seems to prefer am3
    BigInteger.prototype.am = am3;
    dbits = 28;
  }

  BigInteger.prototype.DB = dbits;
  BigInteger.prototype.DM = ((1<<dbits)-1);
  BigInteger.prototype.DV = (1<<dbits);

  var BI_FP = 52;
  BigInteger.prototype.FV = Math.pow(2,BI_FP);
  BigInteger.prototype.F1 = BI_FP-dbits;
  BigInteger.prototype.F2 = 2*dbits-BI_FP;

  // Digit conversions
  var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
  var BI_RC = new Array();
  var rr,vv;
  rr = "0".charCodeAt(0);
  for(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;
  rr = "a".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  rr = "A".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;

  function int2char(n) { return BI_RM.charAt(n); }
  function intAt(s,i) {
    var c = BI_RC[s.charCodeAt(i)];
    return (c==null)?-1:c;
  }

  // (protected) copy this to r
  function bnpCopyTo(r) {
    for(var i = this.t-1; i >= 0; --i) r[i] = this[i];
    r.t = this.t;
    r.s = this.s;
  }

  // (protected) set from integer value x, -DV <= x < DV
  function bnpFromInt(x) {
    this.t = 1;
    this.s = (x<0)?-1:0;
    if(x > 0) this[0] = x;
    else if(x < -1) this[0] = x+DV;
    else this.t = 0;
  }

  // return bigint initialized to value
  function nbv(i) { var r = nbi(); r.fromInt(i); return r; }

  // (protected) set from string and radix
  function bnpFromString(s,b) {
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 256) k = 8; // byte array
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else { this.fromRadix(s,b); return; }
    this.t = 0;
    this.s = 0;
    var i = s.length, mi = false, sh = 0;
    while(--i >= 0) {
      var x = (k==8)?s[i]&0xff:intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-") mi = true;
        continue;
      }
      mi = false;
      if(sh == 0)
        this[this.t++] = x;
      else if(sh+k > this.DB) {
        this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;
        this[this.t++] = (x>>(this.DB-sh));
      }
      else
        this[this.t-1] |= x<<sh;
      sh += k;
      if(sh >= this.DB) sh -= this.DB;
    }
    if(k == 8 && (s[0]&0x80) != 0) {
      this.s = -1;
      if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;
    }
    this.clamp();
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) clamp off excess high words
  function bnpClamp() {
    var c = this.s&this.DM;
    while(this.t > 0 && this[this.t-1] == c) --this.t;
  }

  // (public) return string representation in given radix
  function bnToString(b) {
    if(this.s < 0) return "-"+this.negate().toString(b);
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else return this.toRadix(b);
    var km = (1<<k)-1, d, m = false, r = "", i = this.t;
    var p = this.DB-(i*this.DB)%k;
    if(i-- > 0) {
      if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }
      while(i >= 0) {
        if(p < k) {
          d = (this[i]&((1<<p)-1))<<(k-p);
          d |= this[--i]>>(p+=this.DB-k);
        }
        else {
          d = (this[i]>>(p-=k))&km;
          if(p <= 0) { p += this.DB; --i; }
        }
        if(d > 0) m = true;
        if(m) r += int2char(d);
      }
    }
    return m?r:"0";
  }

  // (public) -this
  function bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }

  // (public) |this|
  function bnAbs() { return (this.s<0)?this.negate():this; }

  // (public) return + if this > a, - if this < a, 0 if equal
  function bnCompareTo(a) {
    var r = this.s-a.s;
    if(r != 0) return r;
    var i = this.t;
    r = i-a.t;
    if(r != 0) return (this.s<0)?-r:r;
    while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;
    return 0;
  }

  // returns bit length of the integer x
  function nbits(x) {
    var r = 1, t;
    if((t=x>>>16) != 0) { x = t; r += 16; }
    if((t=x>>8) != 0) { x = t; r += 8; }
    if((t=x>>4) != 0) { x = t; r += 4; }
    if((t=x>>2) != 0) { x = t; r += 2; }
    if((t=x>>1) != 0) { x = t; r += 1; }
    return r;
  }

  // (public) return the number of bits in "this"
  function bnBitLength() {
    if(this.t <= 0) return 0;
    return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));
  }

  // (protected) r = this << n*DB
  function bnpDLShiftTo(n,r) {
    var i;
    for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];
    for(i = n-1; i >= 0; --i) r[i] = 0;
    r.t = this.t+n;
    r.s = this.s;
  }

  // (protected) r = this >> n*DB
  function bnpDRShiftTo(n,r) {
    for(var i = n; i < this.t; ++i) r[i-n] = this[i];
    r.t = Math.max(this.t-n,0);
    r.s = this.s;
  }

  // (protected) r = this << n
  function bnpLShiftTo(n,r) {
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<cbs)-1;
    var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;
    for(i = this.t-1; i >= 0; --i) {
      r[i+ds+1] = (this[i]>>cbs)|c;
      c = (this[i]&bm)<<bs;
    }
    for(i = ds-1; i >= 0; --i) r[i] = 0;
    r[ds] = c;
    r.t = this.t+ds+1;
    r.s = this.s;
    r.clamp();
  }

  // (protected) r = this >> n
  function bnpRShiftTo(n,r) {
    r.s = this.s;
    var ds = Math.floor(n/this.DB);
    if(ds >= this.t) { r.t = 0; return; }
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<bs)-1;
    r[0] = this[ds]>>bs;
    for(var i = ds+1; i < this.t; ++i) {
      r[i-ds-1] |= (this[i]&bm)<<cbs;
      r[i-ds] = this[i]>>bs;
    }
    if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;
    r.t = this.t-ds;
    r.clamp();
  }

  // (protected) r = this - a
  function bnpSubTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]-a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c -= a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c -= a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c -= a.s;
    }
    r.s = (c<0)?-1:0;
    if(c < -1) r[i++] = this.DV+c;
    else if(c > 0) r[i++] = c;
    r.t = i;
    r.clamp();
  }

  // (protected) r = this * a, r != this,a (HAC 14.12)
  // "this" should be the larger one if appropriate.
  function bnpMultiplyTo(a,r) {
    var x = this.abs(), y = a.abs();
    var i = x.t;
    r.t = i+y.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);
    r.s = 0;
    r.clamp();
    if(this.s != a.s) BigInteger.ZERO.subTo(r,r);
  }

  // (protected) r = this^2, r != this (HAC 14.16)
  function bnpSquareTo(r) {
    var x = this.abs();
    var i = r.t = 2*x.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < x.t-1; ++i) {
      var c = x.am(i,x[i],r,2*i,0,1);
      if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {
        r[i+x.t] -= x.DV;
        r[i+x.t+1] = 1;
      }
    }
    if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);
    r.s = 0;
    r.clamp();
  }

  // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
  // r != q, this != m.  q or r may be null.
  function bnpDivRemTo(m,q,r) {
    var pm = m.abs();
    if(pm.t <= 0) return;
    var pt = this.abs();
    if(pt.t < pm.t) {
      if(q != null) q.fromInt(0);
      if(r != null) this.copyTo(r);
      return;
    }
    if(r == null) r = nbi();
    var y = nbi(), ts = this.s, ms = m.s;
    var nsh = this.DB-nbits(pm[pm.t-1]);	// normalize modulus
    if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }
    else { pm.copyTo(y); pt.copyTo(r); }
    var ys = y.t;
    var y0 = y[ys-1];
    if(y0 == 0) return;
    var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);
    var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;
    var i = r.t, j = i-ys, t = (q==null)?nbi():q;
    y.dlShiftTo(j,t);
    if(r.compareTo(t) >= 0) {
      r[r.t++] = 1;
      r.subTo(t,r);
    }
    BigInteger.ONE.dlShiftTo(ys,t);
    t.subTo(y,y);	// "negative" y so we can replace sub with am later
    while(y.t < ys) y[y.t++] = 0;
    while(--j >= 0) {
      // Estimate quotient digit
      var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);
      if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {	// Try it out
        y.dlShiftTo(j,t);
        r.subTo(t,r);
        while(r[i] < --qd) r.subTo(t,r);
      }
    }
    if(q != null) {
      r.drShiftTo(ys,q);
      if(ts != ms) BigInteger.ZERO.subTo(q,q);
    }
    r.t = ys;
    r.clamp();
    if(nsh > 0) r.rShiftTo(nsh,r);	// Denormalize remainder
    if(ts < 0) BigInteger.ZERO.subTo(r,r);
  }

  // (public) this mod a
  function bnMod(a) {
    var r = nbi();
    this.abs().divRemTo(a,null,r);
    if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);
    return r;
  }

  // Modular reduction using "classic" algorithm
  function Classic(m) { this.m = m; }
  function cConvert(x) {
    if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);
    else return x;
  }
  function cRevert(x) { return x; }
  function cReduce(x) { x.divRemTo(this.m,null,x); }
  function cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
  function cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  Classic.prototype.convert = cConvert;
  Classic.prototype.revert = cRevert;
  Classic.prototype.reduce = cReduce;
  Classic.prototype.mulTo = cMulTo;
  Classic.prototype.sqrTo = cSqrTo;

  // (protected) return "-1/this % 2^DB"; useful for Mont. reduction
  // justification:
  //         xy == 1 (mod m)
  //         xy =  1+km
  //   xy(2-xy) = (1+km)(1-km)
  // x[y(2-xy)] = 1-k^2m^2
  // x[y(2-xy)] == 1 (mod m^2)
  // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
  // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
  // JS multiply "overflows" differently from C/C++, so care is needed here.
  function bnpInvDigit() {
    if(this.t < 1) return 0;
    var x = this[0];
    if((x&1) == 0) return 0;
    var y = x&3;		// y == 1/x mod 2^2
    y = (y*(2-(x&0xf)*y))&0xf;	// y == 1/x mod 2^4
    y = (y*(2-(x&0xff)*y))&0xff;	// y == 1/x mod 2^8
    y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;	// y == 1/x mod 2^16
    // last step - calculate inverse mod DV directly;
    // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
    y = (y*(2-x*y%this.DV))%this.DV;		// y == 1/x mod 2^dbits
    // we really want the negative inverse, and -DV < y < DV
    return (y>0)?this.DV-y:-y;
  }

  // Montgomery reduction
  function Montgomery(m) {
    this.m = m;
    this.mp = m.invDigit();
    this.mpl = this.mp&0x7fff;
    this.mph = this.mp>>15;
    this.um = (1<<(m.DB-15))-1;
    this.mt2 = 2*m.t;
  }

  // xR mod m
  function montConvert(x) {
    var r = nbi();
    x.abs().dlShiftTo(this.m.t,r);
    r.divRemTo(this.m,null,r);
    if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);
    return r;
  }

  // x/R mod m
  function montRevert(x) {
    var r = nbi();
    x.copyTo(r);
    this.reduce(r);
    return r;
  }

  // x = x/R mod m (HAC 14.32)
  function montReduce(x) {
    while(x.t <= this.mt2)	// pad x so am has enough room later
      x[x.t++] = 0;
    for(var i = 0; i < this.m.t; ++i) {
      // faster way of calculating u0 = x[i]*mp mod DV
      var j = x[i]&0x7fff;
      var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;
      // use am to combine the multiply-shift-add into one call
      j = i+this.m.t;
      x[j] += this.m.am(0,u0,x,i,0,this.m.t);
      // propagate carry
      while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }
    }
    x.clamp();
    x.drShiftTo(this.m.t,x);
    if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);
  }

  // r = "x^2/R mod m"; x != r
  function montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  // r = "xy/R mod m"; x,y != r
  function montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }

  Montgomery.prototype.convert = montConvert;
  Montgomery.prototype.revert = montRevert;
  Montgomery.prototype.reduce = montReduce;
  Montgomery.prototype.mulTo = montMulTo;
  Montgomery.prototype.sqrTo = montSqrTo;

  // (protected) true iff this is even
  function bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }

  // (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)
  function bnpExp(e,z) {
    if(e > 0xffffffff || e < 1) return BigInteger.ONE;
    var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;
    g.copyTo(r);
    while(--i >= 0) {
      z.sqrTo(r,r2);
      if((e&(1<<i)) > 0) z.mulTo(r2,g,r);
      else { var t = r; r = r2; r2 = t; }
    }
    return z.revert(r);
  }

  // (public) this^e % m, 0 <= e < 2^32
  function bnModPowInt(e,m) {
    var z;
    if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);
    return this.exp(e,z);
  }

  // protected
  BigInteger.prototype.copyTo = bnpCopyTo;
  BigInteger.prototype.fromInt = bnpFromInt;
  BigInteger.prototype.fromString = bnpFromString;
  BigInteger.prototype.clamp = bnpClamp;
  BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
  BigInteger.prototype.drShiftTo = bnpDRShiftTo;
  BigInteger.prototype.lShiftTo = bnpLShiftTo;
  BigInteger.prototype.rShiftTo = bnpRShiftTo;
  BigInteger.prototype.subTo = bnpSubTo;
  BigInteger.prototype.multiplyTo = bnpMultiplyTo;
  BigInteger.prototype.squareTo = bnpSquareTo;
  BigInteger.prototype.divRemTo = bnpDivRemTo;
  BigInteger.prototype.invDigit = bnpInvDigit;
  BigInteger.prototype.isEven = bnpIsEven;
  BigInteger.prototype.exp = bnpExp;

  // public
  BigInteger.prototype.toString = bnToString;
  BigInteger.prototype.negate = bnNegate;
  BigInteger.prototype.abs = bnAbs;
  BigInteger.prototype.compareTo = bnCompareTo;
  BigInteger.prototype.bitLength = bnBitLength;
  BigInteger.prototype.mod = bnMod;
  BigInteger.prototype.modPowInt = bnModPowInt;

  // "constants"
  BigInteger.ZERO = nbv(0);
  BigInteger.ONE = nbv(1);

  // jsbn2 stuff

  // (protected) convert from radix string
  function bnpFromRadix(s,b) {
    this.fromInt(0);
    if(b == null) b = 10;
    var cs = this.chunkSize(b);
    var d = Math.pow(b,cs), mi = false, j = 0, w = 0;
    for(var i = 0; i < s.length; ++i) {
      var x = intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-" && this.signum() == 0) mi = true;
        continue;
      }
      w = b*w+x;
      if(++j >= cs) {
        this.dMultiply(d);
        this.dAddOffset(w,0);
        j = 0;
        w = 0;
      }
    }
    if(j > 0) {
      this.dMultiply(Math.pow(b,j));
      this.dAddOffset(w,0);
    }
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) return x s.t. r^x < DV
  function bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }

  // (public) 0 if this == 0, 1 if this > 0
  function bnSigNum() {
    if(this.s < 0) return -1;
    else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;
    else return 1;
  }

  // (protected) this *= n, this >= 0, 1 < n < DV
  function bnpDMultiply(n) {
    this[this.t] = this.am(0,n-1,this,0,0,this.t);
    ++this.t;
    this.clamp();
  }

  // (protected) this += n << w words, this >= 0
  function bnpDAddOffset(n,w) {
    if(n == 0) return;
    while(this.t <= w) this[this.t++] = 0;
    this[w] += n;
    while(this[w] >= this.DV) {
      this[w] -= this.DV;
      if(++w >= this.t) this[this.t++] = 0;
      ++this[w];
    }
  }

  // (protected) convert to radix string
  function bnpToRadix(b) {
    if(b == null) b = 10;
    if(this.signum() == 0 || b < 2 || b > 36) return "0";
    var cs = this.chunkSize(b);
    var a = Math.pow(b,cs);
    var d = nbv(a), y = nbi(), z = nbi(), r = "";
    this.divRemTo(d,y,z);
    while(y.signum() > 0) {
      r = (a+z.intValue()).toString(b).substr(1) + r;
      y.divRemTo(d,y,z);
    }
    return z.intValue().toString(b) + r;
  }

  // (public) return value as integer
  function bnIntValue() {
    if(this.s < 0) {
      if(this.t == 1) return this[0]-this.DV;
      else if(this.t == 0) return -1;
    }
    else if(this.t == 1) return this[0];
    else if(this.t == 0) return 0;
    // assumes 16 < DB < 32
    return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];
  }

  // (protected) r = this + a
  function bnpAddTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]+a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c += a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c += a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += a.s;
    }
    r.s = (c<0)?-1:0;
    if(c > 0) r[i++] = c;
    else if(c < -1) r[i++] = this.DV+c;
    r.t = i;
    r.clamp();
  }

  BigInteger.prototype.fromRadix = bnpFromRadix;
  BigInteger.prototype.chunkSize = bnpChunkSize;
  BigInteger.prototype.signum = bnSigNum;
  BigInteger.prototype.dMultiply = bnpDMultiply;
  BigInteger.prototype.dAddOffset = bnpDAddOffset;
  BigInteger.prototype.toRadix = bnpToRadix;
  BigInteger.prototype.intValue = bnIntValue;
  BigInteger.prototype.addTo = bnpAddTo;

  //======= end jsbn =======

  // Emscripten wrapper
  var Wrapper = {
    abs: function(l, h) {
      var x = new goog.math.Long(l, h);
      var ret;
      if (x.isNegative()) {
        ret = x.negate();
      } else {
        ret = x;
      }
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
    },
    ensureTemps: function() {
      if (Wrapper.ensuredTemps) return;
      Wrapper.ensuredTemps = true;
      Wrapper.two32 = new BigInteger();
      Wrapper.two32.fromString('4294967296', 10);
      Wrapper.two64 = new BigInteger();
      Wrapper.two64.fromString('18446744073709551616', 10);
      Wrapper.temp1 = new BigInteger();
      Wrapper.temp2 = new BigInteger();
    },
    lh2bignum: function(l, h) {
      var a = new BigInteger();
      a.fromString(h.toString(), 10);
      var b = new BigInteger();
      a.multiplyTo(Wrapper.two32, b);
      var c = new BigInteger();
      c.fromString(l.toString(), 10);
      var d = new BigInteger();
      c.addTo(b, d);
      return d;
    },
    stringify: function(l, h, unsigned) {
      var ret = new goog.math.Long(l, h).toString();
      if (unsigned && ret[0] == '-') {
        // unsign slowly using jsbn bignums
        Wrapper.ensureTemps();
        var bignum = new BigInteger();
        bignum.fromString(ret, 10);
        ret = new BigInteger();
        Wrapper.two64.addTo(bignum, ret);
        ret = ret.toString(10);
      }
      return ret;
    },
    fromString: function(str, base, min, max, unsigned) {
      Wrapper.ensureTemps();
      var bignum = new BigInteger();
      bignum.fromString(str, base);
      var bigmin = new BigInteger();
      bigmin.fromString(min, 10);
      var bigmax = new BigInteger();
      bigmax.fromString(max, 10);
      if (unsigned && bignum.compareTo(BigInteger.ZERO) < 0) {
        var temp = new BigInteger();
        bignum.addTo(Wrapper.two64, temp);
        bignum = temp;
      }
      var error = false;
      if (bignum.compareTo(bigmin) < 0) {
        bignum = bigmin;
        error = true;
      } else if (bignum.compareTo(bigmax) > 0) {
        bignum = bigmax;
        error = true;
      }
      var ret = goog.math.Long.fromString(bignum.toString()); // min-max checks should have clamped this to a range goog.math.Long can handle well
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
      if (error) throw 'range error';
    }
  };
  return Wrapper;
})();

//======= end closure i64 code =======



// === Auto-generated postamble setup entry stuff ===


function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var preloadStartTime = null;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun']) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}

Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');

  args = args || [];

  ensureInitRuntime();

  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString(Module['thisProgram']), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);

  initialStackTop = STACKTOP;

  try {

    var ret = Module['_main'](argc, argv, 0);


    // if we're not running an evented main loop, it's time to exit
    exit(ret, /* implicit = */ true);
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
      throw e;
    }
  } finally {
    calledMain = true;
  }
}




function run(args) {
  args = args || Module['arguments'];

  if (preloadStartTime === null) preloadStartTime = Date.now();

  if (runDependencies > 0) {
    Module.printErr('run() called, but dependencies remain, so not running');
    return;
  }

  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    if (ABORT) return; 

    ensureInitRuntime();

    preMain();

    if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
      Module.printErr('pre-main prep time: ' + (Date.now() - preloadStartTime) + ' ms');
    }

    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();

    if (Module['_main'] && shouldRunNow) Module['callMain'](args);

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;

function exit(status, implicit) {
  if (implicit && Module['noExitRuntime']) {
    Module.printErr('exit(' + status + ') implicitly called by end of main(), but noExitRuntime, so not exiting the runtime (you can use emscripten_force_exit, if you want to force a true shutdown)');
    return;
  }

  if (Module['noExitRuntime']) {
    Module.printErr('exit(' + status + ') called, but noExitRuntime, so halting execution but not exiting the runtime or preventing further async execution (you can use emscripten_force_exit, if you want to force a true shutdown)');
  } else {

    ABORT = true;
    EXITSTATUS = status;
    STACKTOP = initialStackTop;

    exitRuntime();

    if (Module['onExit']) Module['onExit'](status);
  }

  if (ENVIRONMENT_IS_NODE) {
    // Work around a node.js bug where stdout buffer is not flushed at process exit:
    // Instead of process.exit() directly, wait for stdout flush event.
    // See https://github.com/joyent/node/issues/1669 and https://github.com/kripken/emscripten/issues/2582
    // Workaround is based on https://github.com/RReverser/acorn/commit/50ab143cecc9ed71a2d66f78b4aec3bb2e9844f6
    process['stdout']['once']('drain', function () {
      process['exit'](status);
    });
    console.log(' '); // Make sure to print something to force the drain event to occur, in case the stdout buffer was empty.
    // Work around another node bug where sometimes 'drain' is never fired - make another effort
    // to emit the exit status, after a significant delay (if node hasn't fired drain by then, give up)
    setTimeout(function() {
      process['exit'](status);
    }, 500);
  } else
  if (ENVIRONMENT_IS_SHELL && typeof quit === 'function') {
    quit(status);
  }
  // if we reach here, we must throw an exception to halt the current execution
  throw new ExitStatus(status);
}
Module['exit'] = Module.exit = exit;

var abortDecorators = [];

function abort(what) {
  if (what !== undefined) {
    Module.print(what);
    Module.printErr(what);
    what = JSON.stringify(what)
  } else {
    what = '';
  }

  ABORT = true;
  EXITSTATUS = 1;

  var extra = '';

  var output = 'abort(' + what + ') at ' + stackTrace() + extra;
  if (abortDecorators) {
    abortDecorators.forEach(function(decorator) {
      output = decorator(output, what);
    });
  }
  throw output;
}
Module['abort'] = Module.abort = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

// shouldRunNow refers to calling main(), not run().
var shouldRunNow = false;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}

Module["noExitRuntime"] = true;

run();

// {{POST_RUN_ADDITIONS}}






// {{MODULE_ADDITIONS}}



module.exports = Module;

