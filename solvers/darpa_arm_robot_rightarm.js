var Module;
if (!Module) Module = (typeof Module !== 'undefined' ? Module : null) || {};

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_WEB = typeof window === 'object';
var ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function' && !ENVIRONMENT_IS_WEB;
// Three configurations we can be running in:
// 1) We could be the application main() thread running in the main JS UI thread. (ENVIRONMENT_IS_WORKER == false and ENVIRONMENT_IS_PTHREAD == false)
// 2) We could be the application main() thread proxied to worker. (with Emscripten -s PROXY_TO_WORKER=1) (ENVIRONMENT_IS_WORKER == true, ENVIRONMENT_IS_PTHREAD == false)
// 3) We could be an application pthread running in a worker. (ENVIRONMENT_IS_WORKER == true and ENVIRONMENT_IS_PTHREAD == true)
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

if (ENVIRONMENT_IS_NODE) {
    Module['memoryInitializerPrefixURL'] = './solvers/';
}
// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = (typeof Module !== 'undefined' ? Module : null) || {};

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_WEB = typeof window === 'object';
// Three configurations we can be running in:
// 1) We could be the application main() thread running in the main JS UI thread. (ENVIRONMENT_IS_WORKER == false and ENVIRONMENT_IS_PTHREAD == false)
// 2) We could be the application main() thread proxied to worker. (with Emscripten -s PROXY_TO_WORKER=1) (ENVIRONMENT_IS_WORKER == true, ENVIRONMENT_IS_PTHREAD == false)
// 3) We could be an application pthread running in a worker. (ENVIRONMENT_IS_WORKER == true and ENVIRONMENT_IS_PTHREAD == true)
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function' && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  if (!Module['print']) Module['print'] = function print(x) {
    process['stdout'].write(x + '\n');
  };
  if (!Module['printErr']) Module['printErr'] = function printErr(x) {
    process['stderr'].write(x + '\n');
  };

  var nodeFS = require('fs');
  var nodePath = require('path');

  Module['read'] = function read(filename, binary) {
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename);
    }
    if (ret && !binary) ret = ret.toString();
    return ret;
  };

  Module['readBinary'] = function readBinary(filename) {
    var ret = Module['read'](filename, true);
    if (!ret.buffer) {
      ret = new Uint8Array(ret);
    }
    assert(ret.buffer);
    return ret;
  };

  Module['load'] = function load(f) {
    globalEval(read(f));
  };

  if (!Module['thisProgram']) {
    if (process['argv'].length > 1) {
      Module['thisProgram'] = process['argv'][1].replace(/\\/g, '/');
    } else {
      Module['thisProgram'] = 'unknown-program';
    }
  }

  Module['arguments'] = process['argv'].slice(2);

  if (typeof module !== 'undefined') {
    module['exports'] = Module;
  }

  process['on']('uncaughtException', function(ex) {
    // suppress ExitStatus exceptions from showing an error
    if (!(ex instanceof ExitStatus)) {
      throw ex;
    }
  });

  Module['inspect'] = function () { return '[Emscripten Module object]'; };
}
else if (ENVIRONMENT_IS_SHELL) {
  if (!Module['print']) Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm

  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function read() { throw 'no read() available (jsc?)' };
  }

  Module['readBinary'] = function readBinary(f) {
    if (typeof readbuffer === 'function') {
      return new Uint8Array(readbuffer(f));
    }
    var data = read(f, 'binary');
    assert(typeof data === 'object');
    return data;
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof console !== 'undefined') {
    if (!Module['print']) Module['print'] = function print(x) {
      console.log(x);
    };
    if (!Module['printErr']) Module['printErr'] = function printErr(x) {
      console.log(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }

  if (ENVIRONMENT_IS_WORKER) {
    Module['load'] = importScripts;
  }

  if (typeof Module['setWindowTitle'] === 'undefined') {
    Module['setWindowTitle'] = function(title) { document.title = title };
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
if (!Module['thisProgram']) {
  Module['thisProgram'] = './this.program';
}

// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];

// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}



// === Preamble library stuff ===

// Documentation for the public APIs defined in this file must be updated in: 
//    site/source/docs/api_reference/preamble.js.rst
// A prebuilt local version of the documentation is available at: 
//    site/build/text/docs/api_reference/preamble.js.txt
// You can also build docs locally as HTML or other formats in site/
// An online HTML version (which may be of a different version of Emscripten)
//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  setTempRet0: function (value) {
    tempRet0 = value;
  },
  getTempRet0: function () {
    return tempRet0;
  },
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  STACK_ALIGN: 16,
  prepVararg: function (ptr, type) {
    if (type === 'double' || type === 'i64') {
      // move so the load is aligned
      if (ptr & 7) {
        assert((ptr & 7) === 4);
        ptr += 4;
      }
    } else {
      assert((ptr & 3) === 0);
    }
    return ptr;
  },
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      assert(args.length == sig.length-1);
      if (!args.splice) args = Array.prototype.slice.call(args);
      args.splice(0, 0, ptr);
      assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \'' + sig + '\'');
      return Module['dynCall_' + sig].apply(null, args);
    } else {
      assert(sig.length == 1);
      assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \'' + sig + '\'');
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[sig]) {
      Runtime.funcWrappers[sig] = {};
    }
    var sigCache = Runtime.funcWrappers[sig];
    if (!sigCache[func]) {
      sigCache[func] = function dynCall_wrapper() {
        return Runtime.dynCall(sig, func, arguments);
      };
    }
    return sigCache[func];
  },
  getCompilerSetting: function (name) {
    throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work';
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+15)&-16);(assert((((STACKTOP|0) < (STACK_MAX|0))|0))|0); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + (assert(!staticSealed),size))|0;STATICTOP = (((STATICTOP)+15)&-16); return ret; },
  dynamicAlloc: function (size) { var ret = DYNAMICTOP;DYNAMICTOP = (DYNAMICTOP + (assert(DYNAMICTOP > 0),size))|0;DYNAMICTOP = (((DYNAMICTOP)+15)&-16); if (DYNAMICTOP >= TOTAL_MEMORY) { var success = enlargeMemory(); if (!success) { DYNAMICTOP = ret;  return 0; } }; return ret; },
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 16))*(quantum ? quantum : 16); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*4294967296.0)) : ((+((low>>>0)))+((+((high|0)))*4294967296.0))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}



Module["Runtime"] = Runtime;



//========================================
// Runtime essentials
//========================================

var __THREW__ = 0; // Used in checking for thrown exceptions.

var ABORT = false; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD, tempDouble, tempFloat;
var tempI64, tempI64b;
var tempRet0, tempRet1, tempRet2, tempRet3, tempRet4, tempRet5, tempRet6, tempRet7, tempRet8, tempRet9;

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  var func = Module['_' + ident]; // closure exported function
  if (!func) {
    try {
      func = eval('_' + ident); // explicit lookup
    } catch(e) {}
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}

var cwrap, ccall;
(function(){
  var JSfuncs = {
    // Helpers for cwrap -- it can't refer to Runtime directly because it might
    // be renamed by closure, instead it calls JSfuncs['stackSave'].body to find
    // out what the minified function name is.
    'stackSave': function() {
      Runtime.stackSave()
    },
    'stackRestore': function() {
      Runtime.stackRestore()
    },
    // type conversion from js to c
    'arrayToC' : function(arr) {
      var ret = Runtime.stackAlloc(arr.length);
      writeArrayToMemory(arr, ret);
      return ret;
    },
    'stringToC' : function(str) {
      var ret = 0;
      if (str !== null && str !== undefined && str !== 0) { // null string
        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\0'
        ret = Runtime.stackAlloc((str.length << 2) + 1);
        writeStringToMemory(str, ret);
      }
      return ret;
    }
  };
  // For fast lookup of conversion functions
  var toC = {'string' : JSfuncs['stringToC'], 'array' : JSfuncs['arrayToC']};

  // C calling interface. 
  ccall = function ccallFunc(ident, returnType, argTypes, args, opts) {
    var func = getCFunc(ident);
    var cArgs = [];
    var stack = 0;
    assert(returnType !== 'array', 'Return type should not be "array".');
    if (args) {
      for (var i = 0; i < args.length; i++) {
        var converter = toC[argTypes[i]];
        if (converter) {
          if (stack === 0) stack = Runtime.stackSave();
          cArgs[i] = converter(args[i]);
        } else {
          cArgs[i] = args[i];
        }
      }
    }
    var ret = func.apply(null, cArgs);
    if ((!opts || !opts.async) && typeof EmterpreterAsync === 'object') {
      assert(!EmterpreterAsync.state, 'cannot start async op with normal JS calling ccall');
    }
    if (opts && opts.async) assert(!returnType, 'async ccalls cannot return values');
    if (returnType === 'string') ret = Pointer_stringify(ret);
    if (stack !== 0) {
      if (opts && opts.async) {
        EmterpreterAsync.asyncFinalizers.push(function() {
          Runtime.stackRestore(stack);
        });
        return;
      }
      Runtime.stackRestore(stack);
    }
    return ret;
  }

  var sourceRegex = /^function\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/;
  function parseJSFunc(jsfunc) {
    // Match the body and the return value of a javascript function source
    var parsed = jsfunc.toString().match(sourceRegex).slice(1);
    return {arguments : parsed[0], body : parsed[1], returnValue: parsed[2]}
  }
  var JSsource = {};
  for (var fun in JSfuncs) {
    if (JSfuncs.hasOwnProperty(fun)) {
      // Elements of toCsource are arrays of three items:
      // the code, and the return value
      JSsource[fun] = parseJSFunc(JSfuncs[fun]);
    }
  }

  
  cwrap = function cwrap(ident, returnType, argTypes) {
    argTypes = argTypes || [];
    var cfunc = getCFunc(ident);
    // When the function takes numbers and returns a number, we can just return
    // the original function
    var numericArgs = argTypes.every(function(type){ return type === 'number'});
    var numericRet = (returnType !== 'string');
    if ( numericRet && numericArgs) {
      return cfunc;
    }
    // Creation of the arguments list (["$1","$2",...,"$nargs"])
    var argNames = argTypes.map(function(x,i){return '$'+i});
    var funcstr = "(function(" + argNames.join(',') + ") {";
    var nargs = argTypes.length;
    if (!numericArgs) {
      // Generate the code needed to convert the arguments from javascript
      // values to pointers
      funcstr += 'var stack = ' + JSsource['stackSave'].body + ';';
      for (var i = 0; i < nargs; i++) {
        var arg = argNames[i], type = argTypes[i];
        if (type === 'number') continue;
        var convertCode = JSsource[type + 'ToC']; // [code, return]
        funcstr += 'var ' + convertCode.arguments + ' = ' + arg + ';';
        funcstr += convertCode.body + ';';
        funcstr += arg + '=' + convertCode.returnValue + ';';
      }
    }

    // When the code is compressed, the name of cfunc is not literally 'cfunc' anymore
    var cfuncname = parseJSFunc(function(){return cfunc}).returnValue;
    // Call the function
    funcstr += 'var ret = ' + cfuncname + '(' + argNames.join(',') + ');';
    if (!numericRet) { // Return type can only by 'string' or 'number'
      // Convert the result to a string
      var strgfy = parseJSFunc(function(){return Pointer_stringify}).returnValue;
      funcstr += 'ret = ' + strgfy + '(ret);';
    }
    funcstr += "if (typeof EmterpreterAsync === 'object') { assert(!EmterpreterAsync.state, 'cannot start async op with normal JS calling cwrap') }";
    if (!numericArgs) {
      // If we had a stack, restore it
      funcstr += JSsource['stackRestore'].body.replace('()', '(stack)') + ';';
    }
    funcstr += 'return ret})';
    return eval(funcstr);
  };
})();
Module["ccall"] = ccall;
Module["cwrap"] = cwrap;

function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[((ptr)>>0)]=value; break;
      case 'i8': HEAP8[((ptr)>>0)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module["setValue"] = setValue;


function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[((ptr)>>0)];
      case 'i8': return HEAP8[((ptr)>>0)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module["getValue"] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module["ALLOC_NORMAL"] = ALLOC_NORMAL;
Module["ALLOC_STACK"] = ALLOC_STACK;
Module["ALLOC_STATIC"] = ALLOC_STATIC;
Module["ALLOC_DYNAMIC"] = ALLOC_DYNAMIC;
Module["ALLOC_NONE"] = ALLOC_NONE;

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)>>0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }
    assert(type, 'Must know what type to store in allocate!');

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}
Module["allocate"] = allocate;

// Allocate memory during any stage of startup - static memory early on, dynamic memory later, malloc when ready
function getMemory(size) {
  if (!staticSealed) return Runtime.staticAlloc(size);
  if ((typeof _sbrk !== 'undefined' && !_sbrk.called) || !runtimeInitialized) return Runtime.dynamicAlloc(size);
  return _malloc(size);
}
Module["getMemory"] = getMemory;

function Pointer_stringify(ptr, /* optional */ length) {
  if (length === 0 || !ptr) return '';
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = 0;
  var t;
  var i = 0;
  while (1) {
    assert(ptr + i < TOTAL_MEMORY);
    t = HEAPU8[(((ptr)+(i))>>0)];
    hasUtf |= t;
    if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (hasUtf < 128) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }
  return Module['UTF8ToString'](ptr);
}
Module["Pointer_stringify"] = Pointer_stringify;

// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function AsciiToString(ptr) {
  var str = '';
  while (1) {
    var ch = HEAP8[((ptr++)>>0)];
    if (!ch) return str;
    str += String.fromCharCode(ch);
  }
}
Module["AsciiToString"] = AsciiToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.

function stringToAscii(str, outPtr) {
  return writeAsciiToMemory(str, outPtr, false);
}
Module["stringToAscii"] = stringToAscii;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the given array that contains uint8 values, returns
// a copy of that string as a Javascript String object.

function UTF8ArrayToString(u8Array, idx) {
  var u0, u1, u2, u3, u4, u5;

  var str = '';
  while (1) {
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    u0 = u8Array[idx++];
    if (!u0) return str;
    if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }
    u1 = u8Array[idx++] & 63;
    if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }
    u2 = u8Array[idx++] & 63;
    if ((u0 & 0xF0) == 0xE0) {
      u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;
    } else {
      u3 = u8Array[idx++] & 63;
      if ((u0 & 0xF8) == 0xF0) {
        u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | u3;
      } else {
        u4 = u8Array[idx++] & 63;
        if ((u0 & 0xFC) == 0xF8) {
          u0 = ((u0 & 3) << 24) | (u1 << 18) | (u2 << 12) | (u3 << 6) | u4;
        } else {
          u5 = u8Array[idx++] & 63;
          u0 = ((u0 & 1) << 30) | (u1 << 24) | (u2 << 18) | (u3 << 12) | (u4 << 6) | u5;
        }
      }
    }
    if (u0 < 0x10000) {
      str += String.fromCharCode(u0);
    } else {
      var ch = u0 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    }
  }
}
Module["UTF8ArrayToString"] = UTF8ArrayToString;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF8ToString(ptr) {
  return UTF8ArrayToString(HEAPU8,ptr);
}
Module["UTF8ToString"] = UTF8ToString;

// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',
// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outU8Array: the array to copy to. Each index in this array is assumed to be one 8-byte element.
//   outIdx: The starting offset in the array to begin the copying.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.
//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.
    return 0;

  var startIdx = outIdx;
  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      if (outIdx >= endIdx) break;
      outU8Array[outIdx++] = u;
    } else if (u <= 0x7FF) {
      if (outIdx + 1 >= endIdx) break;
      outU8Array[outIdx++] = 0xC0 | (u >> 6);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0xFFFF) {
      if (outIdx + 2 >= endIdx) break;
      outU8Array[outIdx++] = 0xE0 | (u >> 12);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x1FFFFF) {
      if (outIdx + 3 >= endIdx) break;
      outU8Array[outIdx++] = 0xF0 | (u >> 18);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x3FFFFFF) {
      if (outIdx + 4 >= endIdx) break;
      outU8Array[outIdx++] = 0xF8 | (u >> 24);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else {
      if (outIdx + 5 >= endIdx) break;
      outU8Array[outIdx++] = 0xFC | (u >> 30);
      outU8Array[outIdx++] = 0x80 | ((u >> 24) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    }
  }
  // Null-terminate the pointer to the buffer.
  outU8Array[outIdx] = 0;
  return outIdx - startIdx;
}
Module["stringToUTF8Array"] = stringToUTF8Array;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8(str, outPtr, maxBytesToWrite) {
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);
}
Module["stringToUTF8"] = stringToUTF8;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF8(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      ++len;
    } else if (u <= 0x7FF) {
      len += 2;
    } else if (u <= 0xFFFF) {
      len += 3;
    } else if (u <= 0x1FFFFF) {
      len += 4;
    } else if (u <= 0x3FFFFFF) {
      len += 5;
    } else {
      len += 6;
    }
  }
  return len;
}
Module["lengthBytesUTF8"] = lengthBytesUTF8;

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF16ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
    if (codeUnit == 0)
      return str;
    ++i;
    // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
    str += String.fromCharCode(codeUnit);
  }
}
Module["UTF16ToString"] = UTF16ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.
// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF16(str, outPtr, maxBytesToWrite) {
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 2) return 0;
  maxBytesToWrite -= 2; // Null terminator.
  var startPtr = outPtr;
  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;
  for (var i = 0; i < numCharsToWrite; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[((outPtr)>>1)]=codeUnit;
    outPtr += 2;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[((outPtr)>>1)]=0;
  return outPtr - startPtr;
}
Module["stringToUTF16"] = stringToUTF16;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF16(str) {
  return str.length*2;
}
Module["lengthBytesUTF16"] = lengthBytesUTF16;

function UTF32ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}
Module["UTF32ToString"] = UTF32ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.
// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF32(str, outPtr, maxBytesToWrite) {
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 4) return 0;
  var startPtr = outPtr;
  var endPtr = startPtr + maxBytesToWrite - 4;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++i);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[((outPtr)>>2)]=codeUnit;
    outPtr += 4;
    if (outPtr + 4 > endPtr) break;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[((outPtr)>>2)]=0;
  return outPtr - startPtr;
}
Module["stringToUTF32"] = stringToUTF32;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF32(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i);
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.
    len += 4;
  }

  return len;
}
Module["lengthBytesUTF32"] = lengthBytesUTF32;

function demangle(func) {
  var hasLibcxxabi = !!Module['___cxa_demangle'];
  if (hasLibcxxabi) {
    try {
      var buf = _malloc(func.length);
      writeStringToMemory(func.substr(1), buf);
      var status = _malloc(4);
      var ret = Module['___cxa_demangle'](buf, 0, 0, status);
      if (getValue(status, 'i32') === 0 && ret) {
        return Pointer_stringify(ret);
      }
      // otherwise, libcxxabi failed, we can try ours which may return a partial result
    } catch(e) {
      // failure when using libcxxabi, we can try ours which may return a partial result
    } finally {
      if (buf) _free(buf);
      if (status) _free(status);
      if (ret) _free(ret);
    }
  }
  var i = 3;
  // params, etc.
  var basicTypes = {
    'v': 'void',
    'b': 'bool',
    'c': 'char',
    's': 'short',
    'i': 'int',
    'l': 'long',
    'f': 'float',
    'd': 'double',
    'w': 'wchar_t',
    'a': 'signed char',
    'h': 'unsigned char',
    't': 'unsigned short',
    'j': 'unsigned int',
    'm': 'unsigned long',
    'x': 'long long',
    'y': 'unsigned long long',
    'z': '...'
  };
  var subs = [];
  var first = true;
  function dump(x) {
    //return;
    if (x) Module.print(x);
    Module.print(func);
    var pre = '';
    for (var a = 0; a < i; a++) pre += ' ';
    Module.print (pre + '^');
  }
  function parseNested() {
    i++;
    if (func[i] === 'K') i++; // ignore const
    var parts = [];
    while (func[i] !== 'E') {
      if (func[i] === 'S') { // substitution
        i++;
        var next = func.indexOf('_', i);
        var num = func.substring(i, next) || 0;
        parts.push(subs[num] || '?');
        i = next+1;
        continue;
      }
      if (func[i] === 'C') { // constructor
        parts.push(parts[parts.length-1]);
        i += 2;
        continue;
      }
      var size = parseInt(func.substr(i));
      var pre = size.toString().length;
      if (!size || !pre) { i--; break; } // counter i++ below us
      var curr = func.substr(i + pre, size);
      parts.push(curr);
      subs.push(curr);
      i += pre + size;
    }
    i++; // skip E
    return parts;
  }
  function parse(rawList, limit, allowVoid) { // main parser
    limit = limit || Infinity;
    var ret = '', list = [];
    function flushList() {
      return '(' + list.join(', ') + ')';
    }
    var name;
    if (func[i] === 'N') {
      // namespaced N-E
      name = parseNested().join('::');
      limit--;
      if (limit === 0) return rawList ? [name] : name;
    } else {
      // not namespaced
      if (func[i] === 'K' || (first && func[i] === 'L')) i++; // ignore const and first 'L'
      var size = parseInt(func.substr(i));
      if (size) {
        var pre = size.toString().length;
        name = func.substr(i + pre, size);
        i += pre + size;
      }
    }
    first = false;
    if (func[i] === 'I') {
      i++;
      var iList = parse(true);
      var iRet = parse(true, 1, true);
      ret += iRet[0] + ' ' + name + '<' + iList.join(', ') + '>';
    } else {
      ret = name;
    }
    paramLoop: while (i < func.length && limit-- > 0) {
      //dump('paramLoop');
      var c = func[i++];
      if (c in basicTypes) {
        list.push(basicTypes[c]);
      } else {
        switch (c) {
          case 'P': list.push(parse(true, 1, true)[0] + '*'); break; // pointer
          case 'R': list.push(parse(true, 1, true)[0] + '&'); break; // reference
          case 'L': { // literal
            i++; // skip basic type
            var end = func.indexOf('E', i);
            var size = end - i;
            list.push(func.substr(i, size));
            i += size + 2; // size + 'EE'
            break;
          }
          case 'A': { // array
            var size = parseInt(func.substr(i));
            i += size.toString().length;
            if (func[i] !== '_') throw '?';
            i++; // skip _
            list.push(parse(true, 1, true)[0] + ' [' + size + ']');
            break;
          }
          case 'E': break paramLoop;
          default: ret += '?' + c; break paramLoop;
        }
      }
    }
    if (!allowVoid && list.length === 1 && list[0] === 'void') list = []; // avoid (void)
    if (rawList) {
      if (ret) {
        list.push(ret + '?');
      }
      return list;
    } else {
      return ret + flushList();
    }
  }
  var parsed = func;
  try {
    // Special-case the entry point, since its name differs from other name mangling.
    if (func == 'Object._main' || func == '_main') {
      return 'main()';
    }
    if (typeof func === 'number') func = Pointer_stringify(func);
    if (func[0] !== '_') return func;
    if (func[1] !== '_') return func; // C function
    if (func[2] !== 'Z') return func;
    switch (func[3]) {
      case 'n': return 'operator new()';
      case 'd': return 'operator delete()';
    }
    parsed = parse();
  } catch(e) {
    parsed += '?';
  }
  if (parsed.indexOf('?') >= 0 && !hasLibcxxabi) {
    Runtime.warnOnce('warning: a problem occurred in builtin C++ name demangling; build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling');
  }
  return parsed;
}

function demangleAll(text) {
  return text.replace(/__Z[\w\d_]+/g, function(x) { var y = demangle(x); return x === y ? x : (x + ' [' + y + ']') });
}

function jsStackTrace() {
  var err = new Error();
  if (!err.stack) {
    // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,
    // so try that as a special-case.
    try {
      throw new Error(0);
    } catch(e) {
      err = e;
    }
    if (!err.stack) {
      return '(no stack trace available)';
    }
  }
  return err.stack.toString();
}

function stackTrace() {
  return demangleAll(jsStackTrace());
}
Module["stackTrace"] = stackTrace;

// Memory management

var PAGE_SIZE = 4096;

function alignMemoryPage(x) {
  if (x % 4096 > 0) {
    x += (4096 - (x % 4096));
  }
  return x;
}

var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false; // static area
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0; // stack area
var DYNAMIC_BASE = 0, DYNAMICTOP = 0; // dynamic area handled by sbrk


var CANNOT_GROW_MEMORY_MESSAGE = 'Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which adjusts the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ';

function enlargeMemory() {
  abort(CANNOT_GROW_MEMORY_MESSAGE);
}


var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;

var totalMemory = 64*1024;
while (totalMemory < TOTAL_MEMORY || totalMemory < 2*TOTAL_STACK) {
  if (totalMemory < 16*1024*1024) {
    totalMemory *= 2;
  } else {
    totalMemory += 16*1024*1024
  }
}
if (totalMemory !== TOTAL_MEMORY) {
  Module.printErr('increasing TOTAL_MEMORY to ' + totalMemory + ' to be compliant with the asm.js spec (and given that TOTAL_STACK=' + TOTAL_STACK + ')');
  TOTAL_MEMORY = totalMemory;
}

// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'JS engine does not provide full typed array support');

var buffer;



buffer = new ArrayBuffer(TOTAL_MEMORY);
HEAP8 = new Int8Array(buffer);
HEAP16 = new Int16Array(buffer);
HEAP32 = new Int32Array(buffer);
HEAPU8 = new Uint8Array(buffer);
HEAPU16 = new Uint16Array(buffer);
HEAPU32 = new Uint32Array(buffer);
HEAPF32 = new Float32Array(buffer);
HEAPF64 = new Float64Array(buffer);


// Endianness check (note: assumes compiler arch was little-endian)
HEAP32[0] = 255;
assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');

Module['HEAP'] = HEAP;
Module['buffer'] = buffer;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;
var runtimeExited = false;


function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
  runtimeExited = true;
}

function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module["addOnPreRun"] = addOnPreRun;

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module["addOnInit"] = addOnInit;

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module["addOnPreMain"] = addOnPreMain;

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module["addOnExit"] = addOnExit;

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module["addOnPostRun"] = addOnPostRun;

// Tools


function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;
  var u8array = new Array(len);
  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
  if (dontAddNull) u8array.length = numBytesWritten;
  return u8array;
}
Module["intArrayFromString"] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      assert(false, 'Character code ' + chr + ' (' + String.fromCharCode(chr) + ')  at offset ' + i + ' not in 0x00-0xFF.');
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module["intArrayToString"] = intArrayToString;

function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[(((buffer)+(i))>>0)]=chr;
    i = i + 1;
  }
}
Module["writeStringToMemory"] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[((buffer++)>>0)]=array[i];
  }
}
Module["writeArrayToMemory"] = writeArrayToMemory;

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; ++i) {
    assert(str.charCodeAt(i) === str.charCodeAt(i)&0xff);
    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);
  }
  // Null-terminate the pointer to the HEAP.
  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;
}
Module["writeAsciiToMemory"] = writeAsciiToMemory;

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}


// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];

if (!Math['fround']) {
  var froundBuffer = new Float32Array(1);
  Math['fround'] = function(x) { froundBuffer[0] = x; return froundBuffer[0] };
}
Math.fround = Math['fround'];

if (!Math['clz32']) Math['clz32'] = function(x) {
  x = x >>> 0;
  for (var i = 0; i < 32; i++) {
    if (x & (1 << (31 - i))) return i;
  }
  return 32;
};
Math.clz32 = Math['clz32']

var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_min = Math.min;
var Math_clz32 = Math.clz32;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled
var runDependencyTracking = {};

function getUniqueRunDependency(id) {
  var orig = id;
  while (1) {
    if (!runDependencyTracking[id]) return id;
    id = orig + Math.random();
  }
  return id;
}

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(!runDependencyTracking[id]);
    runDependencyTracking[id] = 1;
    if (runDependencyWatcher === null && typeof setInterval !== 'undefined') {
      // Check for missing dependencies every few seconds
      runDependencyWatcher = setInterval(function() {
        if (ABORT) {
          clearInterval(runDependencyWatcher);
          runDependencyWatcher = null;
          return;
        }
        var shown = false;
        for (var dep in runDependencyTracking) {
          if (!shown) {
            shown = true;
            Module.printErr('still waiting on run dependencies:');
          }
          Module.printErr('dependency: ' + dep);
        }
        if (shown) {
          Module.printErr('(end of list)');
        }
      }, 10000);
    }
  } else {
    Module.printErr('warning: run dependency added without ID');
  }
}
Module["addRunDependency"] = addRunDependency;

function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(runDependencyTracking[id]);
    delete runDependencyTracking[id];
  } else {
    Module.printErr('warning: run dependency removed without ID');
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module["removeRunDependency"] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data



var memoryInitializer = null;



// === Body ===

var ASM_CONSTS = [];




STATIC_BASE = 8;

STATICTOP = STATIC_BASE + 3424;
  /* global initializers */  __ATINIT__.push();
  

/* memory initializer */ allocate([104,0,0,0,33,3,0,0,144,0,0,0,46,3,0,0,8,0,0,0,0,0,0,0,144,0,0,0,79,3,0,0,16,0,0,0,0,0,0,0,144,0,0,0,149,3,0,0,16,0,0,0,0,0,0,0,144,0,0,0,113,3,0,0,48,0,0,0,0,0,0,0,144,0,0,0,183,3,0,0,32,0,0,0,0,0,0,0,0,0,0,0,32,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,0,0,0,0,80,0,0,0,1,0,0,0,9,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,46,49,53,102,44,0,37,46,49,53,102,0,83,116,57,116,121,112,101,95,105,110,102,111,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,115,104,105,109,95,116,121,112,101,95,105,110,102,111,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,57,95,95,112,111,105,110,116,101,114,95,116,121,112,101,95,105,110,102,111,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,112,98,97,115,101,95,116,121,112,101,95,105,110,102,111,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,48,95,95,115,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,84,33,34,25,13,1,2,3,17,75,28,12,16,4,11,29,18,30,39,104,110,111,112,113,98,32,5,6,15,19,20,21,26,8,22,7,40,36,23,24,9,10,14,27,31,37,35,131,130,125,38,42,43,60,61,62,63,67,71,74,77,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,105,106,107,108,114,115,116,121,122,123,124,0,73,108,108,101,103,97,108,32,98,121,116,101,32,115,101,113,117,101,110,99,101,0,68,111,109,97,105,110,32,101,114,114,111,114,0,82,101,115,117,108,116,32,110,111,116,32,114,101,112,114,101,115,101,110,116,97,98,108,101,0,78,111,116,32,97,32,116,116,121,0,80,101,114,109,105,115,115,105,111,110,32,100,101,110,105,101,100,0,79,112,101,114,97,116,105,111,110,32,110,111,116,32,112,101,114,109,105,116,116,101,100,0,78,111,32,115,117,99,104,32,102,105,108,101,32,111,114,32,100,105,114,101,99,116,111,114,121,0,78,111,32,115,117,99,104,32,112,114,111,99,101,115,115,0,70,105,108,101,32,101,120,105,115,116,115,0,86,97,108,117,101,32,116,111,111,32,108,97,114,103,101,32,102,111,114,32,100,97,116,97,32,116,121,112,101,0,78,111,32,115,112,97,99,101,32,108,101,102,116,32,111,110,32,100,101,118,105,99,101,0,79,117,116,32,111,102,32,109,101,109,111,114,121,0,82,101,115,111,117,114,99,101,32,98,117,115,121,0,73,110,116,101,114,114,117,112,116,101,100,32,115,121,115,116,101,109,32,99,97,108,108,0,82,101,115,111,117,114,99,101,32,116,101,109,112,111,114,97,114,105,108,121,32,117,110,97,118,97,105,108,97,98,108,101,0,73,110,118,97,108,105,100,32,115,101,101,107,0,67,114,111,115,115,45,100,101,118,105,99,101,32,108,105,110,107,0,82,101,97,100,45,111,110,108,121,32,102,105,108,101,32,115,121,115,116,101,109,0,68,105,114,101,99,116,111,114,121,32,110,111,116,32,101,109,112,116,121,0,67,111,110,110,101,99,116,105,111,110,32,114,101,115,101,116,32,98,121,32,112,101,101,114,0,79,112,101,114,97,116,105,111,110,32,116,105,109,101,100,32,111,117,116,0,67,111,110,110,101,99,116,105,111,110,32,114,101,102,117,115,101,100,0,72,111,115,116,32,105,115,32,100,111,119,110,0,72,111,115,116,32,105,115,32,117,110,114,101,97,99,104,97,98,108,101,0,65,100,100,114,101,115,115,32,105,110,32,117,115,101,0,66,114,111,107,101,110,32,112,105,112,101,0,73,47,79,32,101,114,114,111,114,0,78,111,32,115,117,99,104,32,100,101,118,105,99,101,32,111,114,32,97,100,100,114,101,115,115,0,66,108,111,99,107,32,100,101,118,105,99,101,32,114,101,113,117,105,114,101,100,0,78,111,32,115,117,99,104,32,100,101,118,105,99,101,0,78,111,116,32,97,32,100,105,114,101,99,116,111,114,121,0,73,115,32,97,32,100,105,114,101,99,116,111,114,121,0,84,101,120,116,32,102,105,108,101,32,98,117,115,121,0,69,120,101,99,32,102,111,114,109,97,116,32,101,114,114,111,114,0,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,0,65,114,103,117,109,101,110,116,32,108,105,115,116,32,116,111,111,32,108,111,110,103,0,83,121,109,98,111,108,105,99,32,108,105,110,107,32,108,111,111,112,0,70,105,108,101,110,97,109,101,32,116,111,111,32,108,111,110,103,0,84,111,111,32,109,97,110,121,32,111,112,101,110,32,102,105,108,101,115,32,105,110,32,115,121,115,116,101,109,0,78,111,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,115,32,97,118,97,105,108,97,98,108,101,0,66,97,100,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,0,78,111,32,99,104,105,108,100,32,112,114,111,99,101,115,115,0,66,97,100,32,97,100,100,114,101,115,115,0,70,105,108,101,32,116,111,111,32,108,97,114,103,101,0,84,111,111,32,109,97,110,121,32,108,105,110,107,115,0,78,111,32,108,111,99,107,115,32,97,118,97,105,108,97,98,108,101,0,82,101,115,111,117,114,99,101,32,100,101,97,100,108,111,99,107,32,119,111,117,108,100,32,111,99,99,117,114,0,83,116,97,116,101,32,110,111,116,32,114,101,99,111,118,101,114,97,98,108,101,0,80,114,101,118,105,111,117,115,32,111,119,110,101,114,32,100,105,101,100,0,79,112,101,114,97,116,105,111,110,32,99,97,110,99,101,108,101,100,0,70,117,110,99,116,105,111,110,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,0,78,111,32,109,101,115,115,97,103,101,32,111,102,32,100,101,115,105,114,101,100,32,116,121,112,101,0,73,100,101,110,116,105,102,105,101,114,32,114,101,109,111,118,101,100,0,68,101,118,105,99,101,32,110,111,116,32,97,32,115,116,114,101,97,109,0,78,111,32,100,97,116,97,32,97,118,97,105,108,97,98,108,101,0,68,101,118,105,99,101,32,116,105,109,101,111,117,116,0,79,117,116,32,111,102,32,115,116,114,101,97,109,115,32,114,101,115,111,117,114,99,101,115,0,76,105,110,107,32,104,97,115,32,98,101,101,110,32,115,101,118,101,114,101,100,0,80,114,111,116,111,99,111,108,32,101,114,114,111,114,0,66,97,100,32,109,101,115,115,97,103,101,0,70,105,108,101,32,100,101,115,99,114,105,112,116,111,114,32,105,110,32,98,97,100,32,115,116,97,116,101,0,78,111,116,32,97,32,115,111,99,107,101,116,0,68,101,115,116,105,110,97,116,105,111,110,32,97,100,100,114,101,115,115,32,114,101,113,117,105,114,101,100,0,77,101,115,115,97,103,101,32,116,111,111,32,108,97,114,103,101,0,80,114,111,116,111,99,111,108,32,119,114,111,110,103,32,116,121,112,101,32,102,111,114,32,115,111,99,107,101,116,0,80,114,111,116,111,99,111,108,32,110,111,116,32,97,118,97,105,108,97,98,108,101,0,80,114,111,116,111,99,111,108,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,83,111,99,107,101,116,32,116,121,112,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,78,111,116,32,115,117,112,112,111,114,116,101,100,0,80,114,111,116,111,99,111,108,32,102,97,109,105,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,65,100,100,114,101,115,115,32,102,97,109,105,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,98,121,32,112,114,111,116,111,99,111,108,0,65,100,100,114,101,115,115,32,110,111,116,32,97,118,97,105,108,97,98,108,101,0,78,101,116,119,111,114,107,32,105,115,32,100,111,119,110,0,78,101,116,119,111,114,107,32,117,110,114,101,97,99,104,97,98,108,101,0,67,111,110,110,101,99,116,105,111,110,32,114,101,115,101,116,32,98,121,32,110,101,116,119,111,114,107,0,67,111,110,110,101,99,116,105,111,110,32,97,98,111,114,116,101,100,0,78,111,32,98,117,102,102,101,114,32,115,112,97,99,101,32,97,118,97,105,108,97,98,108,101,0,83,111,99,107,101,116,32,105,115,32,99,111,110,110,101,99,116,101,100,0,83,111,99,107,101,116,32,110,111,116,32,99,111,110,110,101,99,116,101,100,0,67,97,110,110,111,116,32,115,101,110,100,32,97,102,116,101,114,32,115,111,99,107,101,116,32,115,104,117,116,100,111,119,110,0,79,112,101,114,97,116,105,111,110,32,97,108,114,101,97,100,121,32,105,110,32,112,114,111,103,114,101,115,115,0,79,112,101,114,97,116,105,111,110,32,105,110,32,112,114,111,103,114,101,115,115,0,83,116,97,108,101,32,102,105,108,101,32,104,97,110,100,108,101,0,82,101,109,111,116,101,32,73,47,79,32,101,114,114,111,114,0,81,117,111,116,97,32,101,120,99,101,101,100,101,100,0,78,111,32,109,101,100,105,117,109,32,102,111,117,110,100,0,87,114,111,110,103,32,109,101,100,105,117,109,32,116,121,112,101,0,78,111,32,101,114,114,111,114,32,105,110,102,111,114,109,97,116,105,111,110,0,0,17,0,10,0,17,17,17,0,0,0,0,5,0,0,0,0,0,0,9,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,15,10,17,17,17,3,10,7,0,1,19,9,11,11,0,0,9,6,11,0,0,11,0,6,17,0,0,0,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,10,10,17,17,17,0,10,0,0,2,0,9,11,0,0,0,9,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,4,13,0,0,0,0,9,14,0,0,0,0,0,14,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,15,0,0,0,0,9,16,0,0,0,0,0,16,0,0,16,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,10,0,0,0,0,9,11,0,0,0,0,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,45,43,32,32,32,48,88,48,120,0,40,110,117,108,108,41,0,45,48,88,43,48,88,32,48,88,45,48,120,43,48,120,32,48,120,0,105,110,102,0,73,78,70,0,110,97,110,0,78,65,78,0,46,0], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);





/* no memory initializer */
var tempDoublePtr = Runtime.alignMemory(allocate(12, "i8", ALLOC_STATIC), 8);

assert(tempDoublePtr % 8 == 0);

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}

// {{PRE_LIBRARY}}


   
  Module["_memset"] = _memset;

   
  Module["_i64Subtract"] = _i64Subtract;

   
  Module["_i64Add"] = _i64Add;

  var _BDtoIHigh=true;

  var _BDtoILow=true;

   
  Module["_bitshift64Lshr"] = _bitshift64Lshr;

   
  Module["_bitshift64Shl"] = _bitshift64Shl;

  function _abort() {
      Module['abort']();
    }

  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    } 
  Module["_memcpy"] = _memcpy;

  var _cos=Math_cos;

  
  function ___setErrNo(value) {
      if (Module['___errno_location']) HEAP32[((Module['___errno_location']())>>2)]=value;
      else Module.printErr('failed to set errno from JS');
      return value;
    }
  
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 30: return PAGE_SIZE;
        case 85: return totalMemory / PAGE_SIZE;
        case 132:
        case 133:
        case 12:
        case 137:
        case 138:
        case 15:
        case 235:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 149:
        case 13:
        case 10:
        case 236:
        case 153:
        case 9:
        case 21:
        case 22:
        case 159:
        case 154:
        case 14:
        case 77:
        case 78:
        case 139:
        case 80:
        case 81:
        case 82:
        case 68:
        case 67:
        case 164:
        case 11:
        case 29:
        case 47:
        case 48:
        case 95:
        case 52:
        case 51:
        case 46:
          return 200809;
        case 79:
          return 0;
        case 27:
        case 246:
        case 127:
        case 128:
        case 23:
        case 24:
        case 160:
        case 161:
        case 181:
        case 182:
        case 242:
        case 183:
        case 184:
        case 243:
        case 244:
        case 245:
        case 165:
        case 178:
        case 179:
        case 49:
        case 50:
        case 168:
        case 169:
        case 175:
        case 170:
        case 171:
        case 172:
        case 97:
        case 76:
        case 32:
        case 173:
        case 35:
          return -1;
        case 176:
        case 177:
        case 7:
        case 155:
        case 8:
        case 157:
        case 125:
        case 126:
        case 92:
        case 93:
        case 129:
        case 130:
        case 131:
        case 94:
        case 91:
          return 1;
        case 74:
        case 60:
        case 69:
        case 70:
        case 4:
          return 1024;
        case 31:
        case 42:
        case 72:
          return 32;
        case 87:
        case 26:
        case 33:
          return 2147483647;
        case 34:
        case 1:
          return 47839;
        case 38:
        case 36:
          return 99;
        case 43:
        case 37:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 28: return 32768;
        case 44: return 32767;
        case 75: return 16384;
        case 39: return 1000;
        case 89: return 700;
        case 71: return 256;
        case 40: return 255;
        case 2: return 100;
        case 180: return 64;
        case 25: return 20;
        case 5: return 16;
        case 6: return 6;
        case 73: return 4;
        case 84: {
          if (typeof navigator === 'object') return navigator['hardwareConcurrency'] || 1;
          return 1;
        }
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }

  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
      // We control the "dynamic" memory - DYNAMIC_BASE to DYNAMICTOP
      var self = _sbrk;
      if (!self.called) {
        DYNAMICTOP = alignMemoryPage(DYNAMICTOP); // make sure we start out aligned
        self.called = true;
        assert(Runtime.dynamicAlloc);
        self.alloc = Runtime.dynamicAlloc;
        Runtime.dynamicAlloc = function() { abort('cannot dynamically allocate, sbrk now has control') };
      }
      var ret = DYNAMICTOP;
      if (bytes != 0) {
        var success = self.alloc(bytes);
        if (!success) return -1 >>> 0; // sbrk failure code
      }
      return ret;  // Previous break location.
    }

  var _BItoD=true;

  function _time(ptr) {
      var ret = (Date.now()/1000)|0;
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret;
      }
      return ret;
    }

  function _pthread_self() {
      //FIXME: assumes only a single thread
      return 0;
    }

  var _sin=Math_sin;
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);

staticSealed = true; // seal the static portion of memory

STACK_MAX = STACK_BASE + TOTAL_STACK;

DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);

assert(DYNAMIC_BASE < TOTAL_MEMORY, "TOTAL_MEMORY not big enough for stack");

 var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_DYNAMIC);


function nullFunc_iiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_vi(x) { Module["printErr"]("Invalid function pointer called with signature 'vi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

Module.asmGlobalArg = { "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array, "NaN": NaN, "Infinity": Infinity };

Module.asmLibraryArg = { "abort": abort, "assert": assert, "nullFunc_iiii": nullFunc_iiii, "nullFunc_vi": nullFunc_vi, "nullFunc_viiiiii": nullFunc_viiiiii, "nullFunc_viiiii": nullFunc_viiiii, "nullFunc_viiii": nullFunc_viiii, "invoke_iiii": invoke_iiii, "invoke_vi": invoke_vi, "invoke_viiiiii": invoke_viiiiii, "invoke_viiiii": invoke_viiiii, "invoke_viiii": invoke_viiii, "_sin": _sin, "_cos": _cos, "_pthread_self": _pthread_self, "_abort": _abort, "___setErrNo": ___setErrNo, "_sbrk": _sbrk, "_time": _time, "_emscripten_memcpy_big": _emscripten_memcpy_big, "_sysconf": _sysconf, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "cttz_i8": cttz_i8 };
// EMSCRIPTEN_START_ASM
var asm = (function(global, env, buffer) {
  'almost asm';
  
  
  var HEAP8 = new global.Int8Array(buffer);
  var HEAP16 = new global.Int16Array(buffer);
  var HEAP32 = new global.Int32Array(buffer);
  var HEAPU8 = new global.Uint8Array(buffer);
  var HEAPU16 = new global.Uint16Array(buffer);
  var HEAPU32 = new global.Uint32Array(buffer);
  var HEAPF32 = new global.Float32Array(buffer);
  var HEAPF64 = new global.Float64Array(buffer);


  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var ABORT=env.ABORT|0;
  var cttz_i8=env.cttz_i8|0;

  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var nan = global.NaN, inf = global.Infinity;
  var tempInt = 0, tempBigInt = 0, tempBigIntP = 0, tempBigIntS = 0, tempBigIntR = 0.0, tempBigIntI = 0, tempBigIntD = 0, tempValue = 0, tempDouble = 0.0;

  var tempRet0 = 0;
  var tempRet1 = 0;
  var tempRet2 = 0;
  var tempRet3 = 0;
  var tempRet4 = 0;
  var tempRet5 = 0;
  var tempRet6 = 0;
  var tempRet7 = 0;
  var tempRet8 = 0;
  var tempRet9 = 0;
  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var Math_min=global.Math.min;
  var Math_clz32=global.Math.clz32;
  var Math_fround=global.Math.fround;
  var abort=env.abort;
  var assert=env.assert;
  var nullFunc_iiii=env.nullFunc_iiii;
  var nullFunc_vi=env.nullFunc_vi;
  var nullFunc_viiiiii=env.nullFunc_viiiiii;
  var nullFunc_viiiii=env.nullFunc_viiiii;
  var nullFunc_viiii=env.nullFunc_viiii;
  var invoke_iiii=env.invoke_iiii;
  var invoke_vi=env.invoke_vi;
  var invoke_viiiiii=env.invoke_viiiiii;
  var invoke_viiiii=env.invoke_viiiii;
  var invoke_viiii=env.invoke_viiii;
  var _sin=env._sin;
  var _cos=env._cos;
  var _pthread_self=env._pthread_self;
  var _abort=env._abort;
  var ___setErrNo=env.___setErrNo;
  var _sbrk=env._sbrk;
  var _time=env._time;
  var _emscripten_memcpy_big=env._emscripten_memcpy_big;
  var _sysconf=env._sysconf;
  var tempFloat = Math_fround(0);
  const f0 = Math_fround(0);

// EMSCRIPTEN_START_FUNCS
function stackAlloc(size) {
  size = size|0;
  var ret = 0;
  ret = STACKTOP;
  STACKTOP = (STACKTOP + size)|0;
  STACKTOP = (STACKTOP + 15)&-16;
if ((STACKTOP|0) >= (STACK_MAX|0)) abort();

  return ret|0;
}
function stackSave() {
  return STACKTOP|0;
}
function stackRestore(top) {
  top = top|0;
  STACKTOP = top;
}
function establishStackSpace(stackBase, stackMax) {
  stackBase = stackBase|0;
  stackMax = stackMax|0;
  STACKTOP = stackBase;
  STACK_MAX = stackMax;
}

function setThrew(threw, value) {
  threw = threw|0;
  value = value|0;
  if ((__THREW__|0) == 0) {
    __THREW__ = threw;
    threwValue = value;
  }
}
function copyTempFloat(ptr) {
  ptr = ptr|0;
  HEAP8[tempDoublePtr>>0] = HEAP8[ptr>>0];
  HEAP8[tempDoublePtr+1>>0] = HEAP8[ptr+1>>0];
  HEAP8[tempDoublePtr+2>>0] = HEAP8[ptr+2>>0];
  HEAP8[tempDoublePtr+3>>0] = HEAP8[ptr+3>>0];
}
function copyTempDouble(ptr) {
  ptr = ptr|0;
  HEAP8[tempDoublePtr>>0] = HEAP8[ptr>>0];
  HEAP8[tempDoublePtr+1>>0] = HEAP8[ptr+1>>0];
  HEAP8[tempDoublePtr+2>>0] = HEAP8[ptr+2>>0];
  HEAP8[tempDoublePtr+3>>0] = HEAP8[ptr+3>>0];
  HEAP8[tempDoublePtr+4>>0] = HEAP8[ptr+4>>0];
  HEAP8[tempDoublePtr+5>>0] = HEAP8[ptr+5>>0];
  HEAP8[tempDoublePtr+6>>0] = HEAP8[ptr+6>>0];
  HEAP8[tempDoublePtr+7>>0] = HEAP8[ptr+7>>0];
}

function setTempRet0(value) {
  value = value|0;
  tempRet0 = value;
}
function getTempRet0() {
  return tempRet0|0;
}

function _ComputeFk($j,$eetrans,$eerot) {
 $j = $j|0;
 $eetrans = $eetrans|0;
 $eerot = $eerot|0;
 var $0 = 0, $1 = 0, $10 = 0.0, $100 = 0.0, $1000 = 0, $1001 = 0.0, $1002 = 0.0, $1003 = 0.0, $1004 = 0, $1005 = 0, $1006 = 0.0, $1007 = 0.0, $1008 = 0, $1009 = 0, $101 = 0.0, $1010 = 0.0, $1011 = 0.0, $1012 = 0.0, $1013 = 0, $1014 = 0;
 var $1015 = 0.0, $1016 = 0.0, $1017 = 0.0, $1018 = 0, $1019 = 0, $102 = 0.0, $1020 = 0.0, $1021 = 0.0, $1022 = 0.0, $1023 = 0, $1024 = 0, $1025 = 0.0, $1026 = 0.0, $1027 = 0.0, $1028 = 0.0, $1029 = 0.0, $103 = 0.0, $1030 = 0, $1031 = 0, $1032 = 0.0;
 var $1033 = 0.0, $1034 = 0.0, $1035 = 0.0, $1036 = 0, $1037 = 0, $1038 = 0.0, $1039 = 0.0, $104 = 0.0, $1040 = 0.0, $1041 = 0, $1042 = 0.0, $1043 = 0.0, $1044 = 0.0, $1045 = 0, $1046 = 0.0, $1047 = 0.0, $1048 = 0.0, $1049 = 0.0, $105 = 0.0, $1050 = 0;
 var $1051 = 0, $1052 = 0.0, $1053 = 0.0, $1054 = 0.0, $1055 = 0, $1056 = 0.0, $1057 = 0.0, $1058 = 0.0, $1059 = 0, $106 = 0.0, $1060 = 0.0, $1061 = 0.0, $1062 = 0.0, $1063 = 0.0, $1064 = 0, $1065 = 0, $1066 = 0.0, $1067 = 0.0, $1068 = 0.0, $1069 = 0;
 var $107 = 0.0, $1070 = 0, $1071 = 0.0, $1072 = 0.0, $1073 = 0.0, $1074 = 0.0, $1075 = 0.0, $1076 = 0, $1077 = 0, $1078 = 0.0, $1079 = 0.0, $108 = 0.0, $1080 = 0.0, $1081 = 0, $1082 = 0.0, $1083 = 0.0, $1084 = 0.0, $1085 = 0, $1086 = 0.0, $1087 = 0.0;
 var $1088 = 0.0, $1089 = 0.0, $109 = 0.0, $1090 = 0, $1091 = 0, $1092 = 0.0, $1093 = 0.0, $1094 = 0.0, $1095 = 0, $1096 = 0.0, $1097 = 0.0, $1098 = 0.0, $1099 = 0, $11 = 0, $110 = 0.0, $1100 = 0.0, $1101 = 0.0, $1102 = 0.0, $1103 = 0.0, $1104 = 0;
 var $1105 = 0, $1106 = 0.0, $1107 = 0.0, $1108 = 0.0, $1109 = 0, $111 = 0.0, $1110 = 0, $1111 = 0.0, $1112 = 0.0, $1113 = 0.0, $1114 = 0.0, $1115 = 0, $1116 = 0, $1117 = 0.0, $1118 = 0.0, $1119 = 0.0, $112 = 0.0, $1120 = 0, $1121 = 0.0, $1122 = 0.0;
 var $1123 = 0.0, $1124 = 0, $1125 = 0.0, $1126 = 0.0, $1127 = 0.0, $1128 = 0.0, $1129 = 0, $113 = 0.0, $1130 = 0, $1131 = 0.0, $1132 = 0.0, $1133 = 0.0, $1134 = 0, $1135 = 0, $1136 = 0.0, $1137 = 0.0, $1138 = 0.0, $1139 = 0.0, $114 = 0.0, $1140 = 0.0;
 var $1141 = 0, $1142 = 0, $1143 = 0.0, $1144 = 0.0, $1145 = 0.0, $1146 = 0.0, $1147 = 0, $1148 = 0, $1149 = 0.0, $115 = 0.0, $1150 = 0.0, $1151 = 0.0, $1152 = 0, $1153 = 0.0, $1154 = 0.0, $1155 = 0.0, $1156 = 0, $1157 = 0.0, $1158 = 0.0, $1159 = 0.0;
 var $116 = 0.0, $1160 = 0.0, $1161 = 0.0, $1162 = 0, $1163 = 0, $1164 = 0.0, $1165 = 0.0, $1166 = 0.0, $1167 = 0, $1168 = 0, $1169 = 0.0, $117 = 0.0, $1170 = 0.0, $1171 = 0.0, $1172 = 0, $1173 = 0.0, $1174 = 0.0, $1175 = 0.0, $1176 = 0, $1177 = 0.0;
 var $1178 = 0.0, $1179 = 0.0, $118 = 0.0, $1180 = 0.0, $1181 = 0, $1182 = 0, $1183 = 0.0, $1184 = 0.0, $1185 = 0.0, $1186 = 0, $1187 = 0.0, $1188 = 0.0, $1189 = 0.0, $119 = 0.0, $1190 = 0, $1191 = 0.0, $1192 = 0.0, $1193 = 0.0, $1194 = 0.0, $1195 = 0;
 var $1196 = 0, $1197 = 0.0, $1198 = 0.0, $1199 = 0.0, $12 = 0, $120 = 0.0, $1200 = 0, $1201 = 0, $1202 = 0.0, $1203 = 0.0, $1204 = 0.0, $1205 = 0.0, $1206 = 0.0, $1207 = 0, $1208 = 0, $1209 = 0.0, $121 = 0.0, $1210 = 0.0, $1211 = 0.0, $1212 = 0.0;
 var $1213 = 0, $1214 = 0, $1215 = 0.0, $1216 = 0.0, $1217 = 0.0, $1218 = 0.0, $1219 = 0, $122 = 0.0, $1220 = 0, $1221 = 0.0, $1222 = 0.0, $1223 = 0.0, $1224 = 0.0, $1225 = 0, $1226 = 0.0, $1227 = 0.0, $1228 = 0.0, $1229 = 0, $123 = 0.0, $1230 = 0.0;
 var $1231 = 0.0, $1232 = 0.0, $1233 = 0.0, $1234 = 0.0, $1235 = 0, $1236 = 0, $1237 = 0.0, $1238 = 0.0, $1239 = 0.0, $124 = 0.0, $1240 = 0, $1241 = 0, $1242 = 0.0, $1243 = 0.0, $1244 = 0.0, $1245 = 0, $1246 = 0.0, $1247 = 0.0, $1248 = 0.0, $1249 = 0;
 var $125 = 0.0, $1250 = 0.0, $1251 = 0.0, $1252 = 0.0, $1253 = 0.0, $1254 = 0, $1255 = 0, $1256 = 0.0, $1257 = 0.0, $1258 = 0.0, $1259 = 0, $126 = 0.0, $1260 = 0.0, $1261 = 0.0, $1262 = 0.0, $1263 = 0, $1264 = 0.0, $1265 = 0.0, $1266 = 0.0, $1267 = 0.0;
 var $1268 = 0, $1269 = 0, $127 = 0.0, $1270 = 0.0, $1271 = 0.0, $1272 = 0.0, $1273 = 0, $1274 = 0, $1275 = 0.0, $1276 = 0.0, $1277 = 0.0, $1278 = 0.0, $1279 = 0.0, $128 = 0.0, $1280 = 0, $1281 = 0, $1282 = 0.0, $1283 = 0.0, $1284 = 0.0, $1285 = 0.0;
 var $1286 = 0, $1287 = 0, $1288 = 0.0, $1289 = 0.0, $129 = 0.0, $1290 = 0.0, $1291 = 0, $1292 = 0.0, $1293 = 0.0, $1294 = 0.0, $1295 = 0, $1296 = 0.0, $1297 = 0.0, $1298 = 0.0, $1299 = 0.0, $13 = 0.0, $130 = 0.0, $1300 = 0, $1301 = 0, $1302 = 0.0;
 var $1303 = 0.0, $1304 = 0.0, $1305 = 0, $1306 = 0, $1307 = 0.0, $1308 = 0.0, $1309 = 0.0, $131 = 0.0, $1310 = 0, $1311 = 0.0, $1312 = 0.0, $1313 = 0.0, $1314 = 0, $1315 = 0.0, $1316 = 0.0, $1317 = 0.0, $1318 = 0.0, $1319 = 0, $132 = 0.0, $1320 = 0;
 var $1321 = 0.0, $1322 = 0.0, $1323 = 0.0, $1324 = 0.0, $1325 = 0.0, $1326 = 0, $1327 = 0, $1328 = 0.0, $1329 = 0.0, $133 = 0.0, $1330 = 0.0, $1331 = 0, $1332 = 0.0, $1333 = 0.0, $1334 = 0.0, $1335 = 0, $1336 = 0.0, $1337 = 0.0, $1338 = 0.0, $1339 = 0.0;
 var $134 = 0.0, $1340 = 0, $1341 = 0, $1342 = 0.0, $1343 = 0.0, $1344 = 0.0, $1345 = 0, $1346 = 0, $1347 = 0.0, $1348 = 0.0, $1349 = 0.0, $135 = 0.0, $1350 = 0, $1351 = 0.0, $1352 = 0.0, $1353 = 0.0, $1354 = 0, $1355 = 0.0, $1356 = 0.0, $1357 = 0.0;
 var $1358 = 0.0, $1359 = 0, $136 = 0.0, $1360 = 0, $1361 = 0.0, $1362 = 0.0, $1363 = 0.0, $1364 = 0.0, $1365 = 0, $1366 = 0, $1367 = 0.0, $1368 = 0.0, $1369 = 0.0, $137 = 0.0, $1370 = 0, $1371 = 0.0, $1372 = 0.0, $1373 = 0.0, $1374 = 0, $1375 = 0.0;
 var $1376 = 0.0, $1377 = 0.0, $1378 = 0.0, $1379 = 0, $138 = 0.0, $1380 = 0, $1381 = 0.0, $1382 = 0.0, $1383 = 0.0, $1384 = 0, $1385 = 0, $1386 = 0.0, $1387 = 0.0, $1388 = 0.0, $1389 = 0.0, $139 = 0.0, $1390 = 0.0, $1391 = 0, $1392 = 0, $1393 = 0.0;
 var $1394 = 0.0, $1395 = 0.0, $1396 = 0.0, $1397 = 0, $1398 = 0, $1399 = 0.0, $14 = 0.0, $140 = 0.0, $1400 = 0.0, $1401 = 0.0, $1402 = 0.0, $1403 = 0, $1404 = 0, $1405 = 0.0, $1406 = 0.0, $1407 = 0.0, $1408 = 0.0, $1409 = 0, $141 = 0.0, $1410 = 0;
 var $1411 = 0.0, $1412 = 0.0, $1413 = 0.0, $1414 = 0, $1415 = 0, $1416 = 0.0, $1417 = 0.0, $1418 = 0.0, $1419 = 0, $142 = 0.0, $1420 = 0, $1421 = 0.0, $1422 = 0.0, $1423 = 0.0, $1424 = 0, $1425 = 0, $1426 = 0.0, $1427 = 0.0, $1428 = 0.0, $1429 = 0;
 var $143 = 0.0, $1430 = 0, $1431 = 0.0, $1432 = 0.0, $1433 = 0.0, $1434 = 0, $1435 = 0, $1436 = 0.0, $1437 = 0.0, $1438 = 0.0, $1439 = 0, $144 = 0.0, $1440 = 0, $1441 = 0.0, $1442 = 0.0, $1443 = 0.0, $1444 = 0, $1445 = 0, $1446 = 0.0, $1447 = 0.0;
 var $1448 = 0.0, $1449 = 0.0, $145 = 0.0, $1450 = 0.0, $1451 = 0, $1452 = 0, $1453 = 0.0, $1454 = 0.0, $1455 = 0.0, $1456 = 0.0, $1457 = 0, $1458 = 0, $1459 = 0.0, $146 = 0.0, $1460 = 0.0, $1461 = 0.0, $1462 = 0.0, $1463 = 0, $1464 = 0.0, $1465 = 0.0;
 var $1466 = 0.0, $1467 = 0, $1468 = 0.0, $1469 = 0.0, $147 = 0.0, $1470 = 0.0, $1471 = 0.0, $1472 = 0.0, $1473 = 0, $1474 = 0, $1475 = 0.0, $1476 = 0.0, $1477 = 0.0, $1478 = 0, $1479 = 0, $148 = 0.0, $1480 = 0.0, $1481 = 0.0, $1482 = 0.0, $1483 = 0;
 var $1484 = 0.0, $1485 = 0.0, $1486 = 0.0, $1487 = 0, $1488 = 0.0, $1489 = 0.0, $149 = 0.0, $1490 = 0.0, $1491 = 0.0, $1492 = 0.0, $1493 = 0, $1494 = 0, $1495 = 0.0, $1496 = 0.0, $1497 = 0.0, $1498 = 0.0, $1499 = 0, $15 = 0, $150 = 0.0, $1500 = 0;
 var $1501 = 0.0, $1502 = 0.0, $1503 = 0.0, $1504 = 0, $1505 = 0.0, $1506 = 0.0, $1507 = 0.0, $1508 = 0, $1509 = 0.0, $151 = 0.0, $1510 = 0.0, $1511 = 0.0, $1512 = 0.0, $1513 = 0.0, $1514 = 0, $1515 = 0, $1516 = 0.0, $1517 = 0.0, $1518 = 0.0, $1519 = 0;
 var $152 = 0.0, $1520 = 0, $1521 = 0.0, $1522 = 0.0, $1523 = 0.0, $1524 = 0, $1525 = 0.0, $1526 = 0.0, $1527 = 0.0, $1528 = 0, $1529 = 0.0, $153 = 0.0, $1530 = 0.0, $1531 = 0.0, $1532 = 0.0, $1533 = 0.0, $1534 = 0, $1535 = 0, $1536 = 0.0, $1537 = 0.0;
 var $1538 = 0.0, $1539 = 0.0, $154 = 0.0, $1540 = 0.0, $1541 = 0, $1542 = 0, $1543 = 0.0, $1544 = 0.0, $1545 = 0.0, $1546 = 0, $1547 = 0.0, $1548 = 0.0, $1549 = 0.0, $155 = 0.0, $1550 = 0, $1551 = 0.0, $1552 = 0.0, $1553 = 0.0, $1554 = 0.0, $1555 = 0.0;
 var $1556 = 0, $1557 = 0, $1558 = 0.0, $1559 = 0.0, $156 = 0.0, $1560 = 0.0, $1561 = 0, $1562 = 0, $1563 = 0.0, $1564 = 0.0, $1565 = 0.0, $1566 = 0.0, $1567 = 0, $1568 = 0, $1569 = 0.0, $157 = 0.0, $1570 = 0.0, $1571 = 0.0, $1572 = 0.0, $1573 = 0;
 var $1574 = 0, $1575 = 0.0, $1576 = 0.0, $1577 = 0.0, $1578 = 0.0, $1579 = 0, $158 = 0.0, $1580 = 0.0, $1581 = 0.0, $1582 = 0.0, $1583 = 0, $1584 = 0.0, $1585 = 0.0, $1586 = 0.0, $1587 = 0.0, $1588 = 0.0, $1589 = 0, $159 = 0.0, $1590 = 0, $1591 = 0.0;
 var $1592 = 0.0, $1593 = 0.0, $1594 = 0, $1595 = 0.0, $1596 = 0.0, $1597 = 0.0, $1598 = 0, $1599 = 0.0, $16 = 0, $160 = 0.0, $1600 = 0.0, $1601 = 0.0, $1602 = 0.0, $1603 = 0.0, $1604 = 0, $1605 = 0, $1606 = 0.0, $1607 = 0.0, $1608 = 0.0, $1609 = 0;
 var $161 = 0.0, $1610 = 0, $1611 = 0.0, $1612 = 0.0, $1613 = 0.0, $1614 = 0.0, $1615 = 0.0, $1616 = 0, $1617 = 0, $1618 = 0.0, $1619 = 0.0, $162 = 0.0, $1620 = 0.0, $1621 = 0, $1622 = 0.0, $1623 = 0.0, $1624 = 0.0, $1625 = 0, $1626 = 0.0, $1627 = 0.0;
 var $1628 = 0.0, $1629 = 0.0, $163 = 0.0, $1630 = 0.0, $1631 = 0, $1632 = 0, $1633 = 0.0, $1634 = 0.0, $1635 = 0.0, $1636 = 0, $1637 = 0, $1638 = 0.0, $1639 = 0.0, $164 = 0.0, $1640 = 0.0, $1641 = 0.0, $1642 = 0, $1643 = 0, $1644 = 0.0, $1645 = 0.0;
 var $1646 = 0.0, $1647 = 0, $1648 = 0.0, $1649 = 0.0, $165 = 0.0, $1650 = 0.0, $1651 = 0, $1652 = 0.0, $1653 = 0.0, $1654 = 0.0, $1655 = 0.0, $1656 = 0.0, $1657 = 0, $1658 = 0, $1659 = 0.0, $166 = 0.0, $1660 = 0.0, $1661 = 0.0, $1662 = 0, $1663 = 0;
 var $1664 = 0.0, $1665 = 0.0, $1666 = 0.0, $1667 = 0, $1668 = 0.0, $1669 = 0.0, $167 = 0.0, $1670 = 0.0, $1671 = 0, $1672 = 0.0, $1673 = 0.0, $1674 = 0.0, $1675 = 0.0, $1676 = 0.0, $1677 = 0, $1678 = 0, $1679 = 0.0, $168 = 0.0, $1680 = 0.0, $1681 = 0.0;
 var $1682 = 0.0, $1683 = 0, $1684 = 0, $1685 = 0.0, $1686 = 0.0, $1687 = 0.0, $1688 = 0.0, $1689 = 0, $169 = 0.0, $1690 = 0, $1691 = 0.0, $1692 = 0.0, $1693 = 0.0, $1694 = 0.0, $1695 = 0, $1696 = 0, $1697 = 0.0, $1698 = 0.0, $1699 = 0.0, $17 = 0.0;
 var $170 = 0.0, $1700 = 0.0, $1701 = 0.0, $1702 = 0.0, $1703 = 0.0, $1704 = 0.0, $1705 = 0.0, $1706 = 0.0, $1707 = 0.0, $1708 = 0.0, $1709 = 0.0, $171 = 0.0, $1710 = 0.0, $1711 = 0.0, $1712 = 0.0, $1713 = 0.0, $1714 = 0.0, $1715 = 0.0, $1716 = 0.0, $1717 = 0.0;
 var $1718 = 0.0, $1719 = 0.0, $172 = 0.0, $1720 = 0.0, $1721 = 0.0, $1722 = 0.0, $1723 = 0.0, $1724 = 0.0, $1725 = 0.0, $1726 = 0.0, $1727 = 0.0, $1728 = 0.0, $1729 = 0.0, $173 = 0.0, $1730 = 0.0, $1731 = 0.0, $1732 = 0.0, $1733 = 0.0, $1734 = 0.0, $1735 = 0.0;
 var $1736 = 0.0, $1737 = 0.0, $1738 = 0.0, $1739 = 0.0, $174 = 0.0, $1740 = 0.0, $1741 = 0.0, $1742 = 0, $1743 = 0, $1744 = 0, $1745 = 0.0, $1746 = 0.0, $1747 = 0.0, $1748 = 0, $1749 = 0.0, $175 = 0.0, $1750 = 0.0, $1751 = 0.0, $1752 = 0.0, $1753 = 0;
 var $1754 = 0, $1755 = 0.0, $1756 = 0.0, $1757 = 0.0, $1758 = 0, $1759 = 0.0, $176 = 0.0, $1760 = 0.0, $1761 = 0.0, $1762 = 0, $1763 = 0.0, $1764 = 0.0, $1765 = 0.0, $1766 = 0.0, $1767 = 0, $1768 = 0, $1769 = 0.0, $177 = 0.0, $1770 = 0.0, $1771 = 0.0;
 var $1772 = 0, $1773 = 0, $1774 = 0.0, $1775 = 0.0, $1776 = 0.0, $1777 = 0.0, $1778 = 0, $1779 = 0, $178 = 0.0, $1780 = 0.0, $1781 = 0.0, $1782 = 0.0, $1783 = 0.0, $1784 = 0, $1785 = 0.0, $1786 = 0.0, $1787 = 0.0, $1788 = 0, $1789 = 0.0, $179 = 0.0;
 var $1790 = 0.0, $1791 = 0.0, $1792 = 0.0, $1793 = 0, $1794 = 0, $1795 = 0.0, $1796 = 0.0, $1797 = 0.0, $1798 = 0.0, $1799 = 0, $18 = 0.0, $180 = 0.0, $1800 = 0, $1801 = 0.0, $1802 = 0.0, $1803 = 0.0, $1804 = 0, $1805 = 0, $1806 = 0.0, $1807 = 0.0;
 var $1808 = 0.0, $1809 = 0.0, $181 = 0.0, $1810 = 0, $1811 = 0.0, $1812 = 0.0, $1813 = 0.0, $1814 = 0, $1815 = 0.0, $1816 = 0.0, $1817 = 0.0, $1818 = 0.0, $1819 = 0, $182 = 0.0, $1820 = 0, $1821 = 0.0, $1822 = 0.0, $1823 = 0.0, $1824 = 0.0, $1825 = 0;
 var $1826 = 0, $1827 = 0.0, $1828 = 0.0, $1829 = 0.0, $183 = 0.0, $1830 = 0.0, $1831 = 0, $1832 = 0.0, $1833 = 0.0, $1834 = 0.0, $1835 = 0, $1836 = 0.0, $1837 = 0.0, $1838 = 0.0, $1839 = 0.0, $184 = 0.0, $1840 = 0, $1841 = 0, $1842 = 0.0, $1843 = 0.0;
 var $1844 = 0.0, $1845 = 0, $1846 = 0, $1847 = 0.0, $1848 = 0.0, $1849 = 0.0, $185 = 0.0, $1850 = 0.0, $1851 = 0, $1852 = 0.0, $1853 = 0.0, $1854 = 0.0, $1855 = 0, $1856 = 0.0, $1857 = 0.0, $1858 = 0.0, $1859 = 0.0, $186 = 0.0, $1860 = 0, $1861 = 0;
 var $1862 = 0.0, $1863 = 0.0, $1864 = 0.0, $1865 = 0, $1866 = 0.0, $1867 = 0.0, $1868 = 0.0, $1869 = 0, $187 = 0.0, $1870 = 0.0, $1871 = 0.0, $1872 = 0.0, $1873 = 0.0, $1874 = 0, $1875 = 0, $1876 = 0.0, $1877 = 0.0, $1878 = 0.0, $1879 = 0, $188 = 0.0;
 var $1880 = 0, $1881 = 0.0, $1882 = 0.0, $1883 = 0.0, $1884 = 0.0, $1885 = 0, $1886 = 0, $1887 = 0.0, $1888 = 0.0, $1889 = 0.0, $189 = 0.0, $1890 = 0.0, $1891 = 0, $1892 = 0.0, $1893 = 0.0, $1894 = 0.0, $1895 = 0, $1896 = 0.0, $1897 = 0.0, $1898 = 0.0;
 var $1899 = 0.0, $19 = 0, $190 = 0.0, $1900 = 0.0, $1901 = 0, $1902 = 0, $1903 = 0.0, $1904 = 0.0, $1905 = 0.0, $1906 = 0, $1907 = 0, $1908 = 0.0, $1909 = 0.0, $191 = 0.0, $1910 = 0.0, $1911 = 0, $1912 = 0.0, $1913 = 0.0, $1914 = 0.0, $1915 = 0;
 var $1916 = 0.0, $1917 = 0.0, $1918 = 0.0, $1919 = 0.0, $192 = 0.0, $1920 = 0.0, $1921 = 0, $1922 = 0, $1923 = 0.0, $1924 = 0.0, $1925 = 0.0, $1926 = 0.0, $1927 = 0, $1928 = 0, $1929 = 0.0, $193 = 0.0, $1930 = 0.0, $1931 = 0.0, $1932 = 0, $1933 = 0.0;
 var $1934 = 0.0, $1935 = 0.0, $1936 = 0, $1937 = 0.0, $1938 = 0.0, $1939 = 0.0, $194 = 0.0, $1940 = 0.0, $1941 = 0, $1942 = 0, $1943 = 0.0, $1944 = 0.0, $1945 = 0.0, $1946 = 0, $1947 = 0, $1948 = 0.0, $1949 = 0.0, $195 = 0.0, $1950 = 0.0, $1951 = 0.0;
 var $1952 = 0, $1953 = 0, $1954 = 0.0, $1955 = 0.0, $1956 = 0.0, $1957 = 0.0, $1958 = 0, $1959 = 0.0, $196 = 0.0, $1960 = 0.0, $1961 = 0.0, $1962 = 0, $1963 = 0.0, $1964 = 0.0, $1965 = 0.0, $1966 = 0.0, $1967 = 0, $1968 = 0, $1969 = 0.0, $197 = 0.0;
 var $1970 = 0.0, $1971 = 0.0, $1972 = 0, $1973 = 0, $1974 = 0.0, $1975 = 0.0, $1976 = 0.0, $1977 = 0.0, $1978 = 0, $1979 = 0.0, $198 = 0.0, $1980 = 0.0, $1981 = 0.0, $1982 = 0, $1983 = 0.0, $1984 = 0.0, $1985 = 0.0, $1986 = 0.0, $1987 = 0.0, $1988 = 0;
 var $1989 = 0, $199 = 0.0, $1990 = 0.0, $1991 = 0.0, $1992 = 0.0, $1993 = 0, $1994 = 0, $1995 = 0.0, $1996 = 0.0, $1997 = 0.0, $1998 = 0, $1999 = 0.0, $2 = 0, $20 = 0, $200 = 0.0, $2000 = 0.0, $2001 = 0.0, $2002 = 0, $2003 = 0.0, $2004 = 0.0;
 var $2005 = 0.0, $2006 = 0.0, $2007 = 0.0, $2008 = 0, $2009 = 0, $201 = 0.0, $2010 = 0.0, $2011 = 0.0, $2012 = 0.0, $2013 = 0.0, $2014 = 0, $2015 = 0, $2016 = 0.0, $2017 = 0.0, $2018 = 0.0, $2019 = 0, $202 = 0.0, $2020 = 0.0, $2021 = 0.0, $2022 = 0.0;
 var $2023 = 0, $2024 = 0.0, $2025 = 0.0, $2026 = 0.0, $2027 = 0.0, $2028 = 0, $2029 = 0, $203 = 0.0, $2030 = 0.0, $2031 = 0.0, $2032 = 0.0, $2033 = 0, $2034 = 0, $2035 = 0.0, $2036 = 0.0, $2037 = 0.0, $2038 = 0.0, $2039 = 0, $204 = 0.0, $2040 = 0;
 var $2041 = 0.0, $2042 = 0.0, $2043 = 0.0, $2044 = 0.0, $2045 = 0, $2046 = 0.0, $2047 = 0.0, $2048 = 0.0, $2049 = 0, $205 = 0.0, $2050 = 0.0, $2051 = 0.0, $2052 = 0.0, $2053 = 0.0, $2054 = 0, $2055 = 0, $2056 = 0.0, $2057 = 0.0, $2058 = 0.0, $2059 = 0;
 var $206 = 0.0, $2060 = 0, $2061 = 0.0, $2062 = 0.0, $2063 = 0.0, $2064 = 0.0, $2065 = 0, $2066 = 0.0, $2067 = 0.0, $2068 = 0.0, $2069 = 0, $207 = 0.0, $2070 = 0.0, $2071 = 0.0, $2072 = 0.0, $2073 = 0.0, $2074 = 0, $2075 = 0, $2076 = 0.0, $2077 = 0.0;
 var $2078 = 0.0, $2079 = 0, $208 = 0, $2080 = 0, $2081 = 0.0, $2082 = 0.0, $2083 = 0.0, $2084 = 0.0, $2085 = 0, $2086 = 0, $2087 = 0.0, $2088 = 0.0, $2089 = 0.0, $209 = 0.0, $2090 = 0, $2091 = 0, $2092 = 0.0, $2093 = 0.0, $2094 = 0.0, $2095 = 0;
 var $2096 = 0, $2097 = 0.0, $2098 = 0.0, $2099 = 0.0, $21 = 0.0, $210 = 0.0, $2100 = 0.0, $2101 = 0, $2102 = 0, $2103 = 0.0, $2104 = 0.0, $2105 = 0.0, $2106 = 0, $2107 = 0, $2108 = 0.0, $2109 = 0.0, $211 = 0.0, $2110 = 0.0, $2111 = 0, $2112 = 0;
 var $2113 = 0.0, $2114 = 0.0, $2115 = 0.0, $2116 = 0.0, $2117 = 0, $2118 = 0.0, $2119 = 0.0, $212 = 0, $2120 = 0.0, $2121 = 0, $2122 = 0.0, $2123 = 0.0, $2124 = 0.0, $2125 = 0.0, $2126 = 0, $2127 = 0, $2128 = 0.0, $2129 = 0.0, $213 = 0.0, $2130 = 0.0;
 var $2131 = 0, $2132 = 0, $2133 = 0.0, $2134 = 0.0, $2135 = 0.0, $2136 = 0.0, $2137 = 0, $2138 = 0.0, $2139 = 0.0, $214 = 0.0, $2140 = 0.0, $2141 = 0, $2142 = 0.0, $2143 = 0.0, $2144 = 0.0, $2145 = 0.0, $2146 = 0, $2147 = 0, $2148 = 0.0, $2149 = 0.0;
 var $215 = 0.0, $2150 = 0.0, $2151 = 0.0, $2152 = 0, $2153 = 0.0, $2154 = 0.0, $2155 = 0.0, $2156 = 0, $2157 = 0.0, $2158 = 0.0, $2159 = 0.0, $216 = 0.0, $2160 = 0.0, $2161 = 0, $2162 = 0, $2163 = 0.0, $2164 = 0.0, $2165 = 0.0, $2166 = 0.0, $2167 = 0;
 var $2168 = 0, $2169 = 0.0, $217 = 0.0, $2170 = 0.0, $2171 = 0.0, $2172 = 0, $2173 = 0, $2174 = 0.0, $2175 = 0.0, $2176 = 0.0, $2177 = 0.0, $2178 = 0, $2179 = 0.0, $218 = 0, $2180 = 0.0, $2181 = 0.0, $2182 = 0, $2183 = 0.0, $2184 = 0.0, $2185 = 0.0;
 var $2186 = 0.0, $2187 = 0, $2188 = 0, $2189 = 0.0, $219 = 0, $2190 = 0.0, $2191 = 0.0, $2192 = 0, $2193 = 0, $2194 = 0.0, $2195 = 0.0, $2196 = 0.0, $2197 = 0, $2198 = 0.0, $2199 = 0.0, $22 = 0.0, $220 = 0.0, $2200 = 0.0, $2201 = 0, $2202 = 0.0;
 var $2203 = 0.0, $2204 = 0.0, $2205 = 0.0, $2206 = 0, $2207 = 0, $2208 = 0.0, $2209 = 0.0, $221 = 0.0, $2210 = 0.0, $2211 = 0.0, $2212 = 0.0, $2213 = 0, $2214 = 0, $2215 = 0.0, $2216 = 0.0, $2217 = 0.0, $2218 = 0, $2219 = 0.0, $222 = 0.0, $2220 = 0.0;
 var $2221 = 0.0, $2222 = 0, $2223 = 0.0, $2224 = 0.0, $2225 = 0.0, $2226 = 0.0, $2227 = 0.0, $2228 = 0, $2229 = 0, $223 = 0, $2230 = 0.0, $2231 = 0.0, $2232 = 0.0, $2233 = 0, $2234 = 0, $2235 = 0.0, $2236 = 0.0, $2237 = 0.0, $2238 = 0.0, $2239 = 0;
 var $224 = 0, $2240 = 0, $2241 = 0.0, $2242 = 0.0, $2243 = 0.0, $2244 = 0, $2245 = 0.0, $2246 = 0.0, $2247 = 0.0, $2248 = 0, $2249 = 0.0, $225 = 0.0, $2250 = 0.0, $2251 = 0.0, $2252 = 0.0, $2253 = 0.0, $2254 = 0, $2255 = 0, $2256 = 0.0, $2257 = 0.0;
 var $2258 = 0.0, $2259 = 0, $226 = 0.0, $2260 = 0, $2261 = 0.0, $2262 = 0.0, $2263 = 0.0, $2264 = 0, $2265 = 0.0, $2266 = 0.0, $2267 = 0.0, $2268 = 0, $2269 = 0.0, $227 = 0.0, $2270 = 0.0, $2271 = 0.0, $2272 = 0.0, $2273 = 0.0, $2274 = 0, $2275 = 0;
 var $2276 = 0.0, $2277 = 0.0, $2278 = 0.0, $2279 = 0.0, $228 = 0, $2280 = 0, $2281 = 0, $2282 = 0.0, $2283 = 0.0, $2284 = 0.0, $2285 = 0.0, $2286 = 0, $2287 = 0, $2288 = 0.0, $2289 = 0.0, $229 = 0.0, $2290 = 0.0, $2291 = 0.0, $2292 = 0, $2293 = 0.0;
 var $2294 = 0.0, $2295 = 0.0, $2296 = 0, $2297 = 0.0, $2298 = 0.0, $2299 = 0.0, $23 = 0, $230 = 0.0, $2300 = 0.0, $2301 = 0, $2302 = 0, $2303 = 0.0, $2304 = 0.0, $2305 = 0.0, $2306 = 0, $2307 = 0, $2308 = 0.0, $2309 = 0.0, $231 = 0.0, $2310 = 0.0;
 var $2311 = 0.0, $2312 = 0, $2313 = 0.0, $2314 = 0.0, $2315 = 0.0, $2316 = 0, $2317 = 0.0, $2318 = 0.0, $2319 = 0.0, $232 = 0, $2320 = 0.0, $2321 = 0.0, $2322 = 0, $2323 = 0, $2324 = 0.0, $2325 = 0.0, $2326 = 0.0, $2327 = 0, $2328 = 0.0, $2329 = 0.0;
 var $233 = 0.0, $2330 = 0.0, $2331 = 0, $2332 = 0.0, $2333 = 0.0, $2334 = 0.0, $2335 = 0.0, $2336 = 0.0, $2337 = 0, $2338 = 0, $2339 = 0.0, $234 = 0.0, $2340 = 0.0, $2341 = 0.0, $2342 = 0, $2343 = 0, $2344 = 0.0, $2345 = 0.0, $2346 = 0.0, $2347 = 0.0;
 var $2348 = 0, $2349 = 0, $235 = 0.0, $2350 = 0.0, $2351 = 0.0, $2352 = 0.0, $2353 = 0, $2354 = 0.0, $2355 = 0.0, $2356 = 0.0, $2357 = 0, $2358 = 0.0, $2359 = 0.0, $236 = 0.0, $2360 = 0.0, $2361 = 0.0, $2362 = 0, $2363 = 0, $2364 = 0.0, $2365 = 0.0;
 var $2366 = 0.0, $2367 = 0, $2368 = 0.0, $2369 = 0.0, $237 = 0, $2370 = 0.0, $2371 = 0, $2372 = 0.0, $2373 = 0.0, $2374 = 0.0, $2375 = 0.0, $2376 = 0, $2377 = 0, $2378 = 0.0, $2379 = 0.0, $238 = 0, $2380 = 0.0, $2381 = 0, $2382 = 0, $2383 = 0.0;
 var $2384 = 0.0, $2385 = 0.0, $2386 = 0.0, $2387 = 0.0, $2388 = 0, $2389 = 0, $239 = 0.0, $2390 = 0.0, $2391 = 0.0, $2392 = 0.0, $2393 = 0, $2394 = 0.0, $2395 = 0.0, $2396 = 0.0, $2397 = 0, $2398 = 0.0, $2399 = 0.0, $24 = 0, $240 = 0.0, $2400 = 0.0;
 var $2401 = 0.0, $2402 = 0.0, $2403 = 0, $2404 = 0, $2405 = 0.0, $2406 = 0.0, $2407 = 0.0, $2408 = 0, $2409 = 0, $241 = 0.0, $2410 = 0.0, $2411 = 0.0, $2412 = 0.0, $2413 = 0.0, $2414 = 0, $2415 = 0, $2416 = 0.0, $2417 = 0.0, $2418 = 0.0, $2419 = 0.0;
 var $242 = 0, $2420 = 0, $2421 = 0, $2422 = 0.0, $2423 = 0.0, $2424 = 0.0, $2425 = 0.0, $2426 = 0, $2427 = 0, $2428 = 0.0, $2429 = 0.0, $243 = 0.0, $2430 = 0.0, $2431 = 0, $2432 = 0, $2433 = 0.0, $2434 = 0.0, $2435 = 0.0, $2436 = 0, $2437 = 0;
 var $2438 = 0.0, $2439 = 0.0, $244 = 0.0, $2440 = 0.0, $2441 = 0, $2442 = 0, $2443 = 0.0, $2444 = 0.0, $2445 = 0.0, $2446 = 0, $2447 = 0, $2448 = 0.0, $2449 = 0.0, $245 = 0.0, $2450 = 0.0, $2451 = 0.0, $2452 = 0.0, $2453 = 0, $2454 = 0, $2455 = 0.0;
 var $2456 = 0.0, $2457 = 0.0, $2458 = 0, $2459 = 0, $246 = 0, $2460 = 0.0, $2461 = 0.0, $2462 = 0.0, $2463 = 0, $2464 = 0, $2465 = 0.0, $2466 = 0.0, $2467 = 0.0, $2468 = 0, $2469 = 0, $247 = 0.0, $2470 = 0.0, $2471 = 0.0, $2472 = 0.0, $2473 = 0.0;
 var $2474 = 0, $2475 = 0, $2476 = 0.0, $2477 = 0.0, $2478 = 0.0, $2479 = 0.0, $248 = 0.0, $2480 = 0, $2481 = 0, $2482 = 0.0, $2483 = 0.0, $2484 = 0.0, $2485 = 0, $2486 = 0, $2487 = 0.0, $2488 = 0.0, $2489 = 0.0, $249 = 0.0, $2490 = 0, $2491 = 0;
 var $2492 = 0.0, $2493 = 0.0, $2494 = 0.0, $2495 = 0, $2496 = 0, $2497 = 0.0, $2498 = 0.0, $2499 = 0.0, $25 = 0.0, $250 = 0.0, $2500 = 0, $2501 = 0, $2502 = 0.0, $2503 = 0.0, $2504 = 0.0, $2505 = 0.0, $2506 = 0, $2507 = 0, $2508 = 0.0, $2509 = 0.0;
 var $251 = 0, $2510 = 0.0, $2511 = 0.0, $2512 = 0, $2513 = 0, $2514 = 0.0, $2515 = 0.0, $2516 = 0.0, $2517 = 0, $2518 = 0, $2519 = 0.0, $252 = 0, $2520 = 0.0, $2521 = 0.0, $2522 = 0.0, $2523 = 0, $2524 = 0.0, $2525 = 0.0, $2526 = 0.0, $2527 = 0;
 var $2528 = 0.0, $2529 = 0.0, $253 = 0.0, $2530 = 0.0, $2531 = 0.0, $2532 = 0, $2533 = 0, $2534 = 0.0, $2535 = 0.0, $2536 = 0.0, $2537 = 0, $2538 = 0.0, $2539 = 0.0, $254 = 0.0, $2540 = 0.0, $2541 = 0, $2542 = 0.0, $2543 = 0.0, $2544 = 0.0, $2545 = 0.0;
 var $2546 = 0, $2547 = 0, $2548 = 0.0, $2549 = 0.0, $255 = 0.0, $2550 = 0.0, $2551 = 0, $2552 = 0, $2553 = 0.0, $2554 = 0.0, $2555 = 0.0, $2556 = 0.0, $2557 = 0, $2558 = 0, $2559 = 0.0, $256 = 0, $2560 = 0.0, $2561 = 0.0, $2562 = 0.0, $2563 = 0;
 var $2564 = 0.0, $2565 = 0.0, $2566 = 0.0, $2567 = 0, $2568 = 0.0, $2569 = 0.0, $257 = 0, $2570 = 0.0, $2571 = 0.0, $2572 = 0, $2573 = 0, $2574 = 0.0, $2575 = 0.0, $2576 = 0.0, $2577 = 0, $2578 = 0, $2579 = 0.0, $258 = 0.0, $2580 = 0.0, $2581 = 0.0;
 var $2582 = 0, $2583 = 0.0, $2584 = 0.0, $2585 = 0.0, $2586 = 0, $2587 = 0.0, $2588 = 0.0, $2589 = 0.0, $259 = 0.0, $2590 = 0.0, $2591 = 0, $2592 = 0, $2593 = 0.0, $2594 = 0.0, $2595 = 0.0, $2596 = 0.0, $2597 = 0, $2598 = 0, $2599 = 0.0, $26 = 0.0;
 var $260 = 0.0, $2600 = 0.0, $2601 = 0.0, $2602 = 0.0, $2603 = 0, $2604 = 0, $2605 = 0.0, $2606 = 0.0, $2607 = 0.0, $2608 = 0, $2609 = 0.0, $261 = 0.0, $2610 = 0.0, $2611 = 0.0, $2612 = 0.0, $2613 = 0.0, $2614 = 0, $2615 = 0, $2616 = 0.0, $2617 = 0.0;
 var $2618 = 0.0, $2619 = 0, $262 = 0.0, $2620 = 0, $2621 = 0.0, $2622 = 0.0, $2623 = 0.0, $2624 = 0, $2625 = 0.0, $2626 = 0.0, $2627 = 0.0, $2628 = 0, $2629 = 0.0, $263 = 0, $2630 = 0.0, $2631 = 0.0, $2632 = 0.0, $2633 = 0.0, $2634 = 0, $2635 = 0;
 var $2636 = 0.0, $2637 = 0.0, $2638 = 0.0, $2639 = 0.0, $264 = 0, $2640 = 0, $2641 = 0, $2642 = 0.0, $2643 = 0.0, $2644 = 0.0, $2645 = 0, $2646 = 0.0, $2647 = 0.0, $2648 = 0.0, $2649 = 0, $265 = 0.0, $2650 = 0.0, $2651 = 0.0, $2652 = 0.0, $2653 = 0.0;
 var $2654 = 0.0, $2655 = 0, $2656 = 0, $2657 = 0.0, $2658 = 0.0, $2659 = 0.0, $266 = 0.0, $2660 = 0, $2661 = 0, $2662 = 0.0, $2663 = 0.0, $2664 = 0.0, $2665 = 0, $2666 = 0.0, $2667 = 0.0, $2668 = 0.0, $2669 = 0, $267 = 0.0, $2670 = 0.0, $2671 = 0.0;
 var $2672 = 0.0, $2673 = 0.0, $2674 = 0.0, $2675 = 0, $2676 = 0, $2677 = 0.0, $2678 = 0.0, $2679 = 0.0, $268 = 0.0, $2680 = 0.0, $2681 = 0.0, $2682 = 0, $2683 = 0, $2684 = 0.0, $2685 = 0.0, $2686 = 0.0, $2687 = 0, $2688 = 0.0, $2689 = 0.0, $269 = 0;
 var $2690 = 0.0, $2691 = 0, $2692 = 0.0, $2693 = 0.0, $2694 = 0.0, $2695 = 0.0, $2696 = 0.0, $2697 = 0, $2698 = 0, $2699 = 0.0, $27 = 0, $270 = 0, $2700 = 0.0, $2701 = 0.0, $2702 = 0, $2703 = 0, $2704 = 0.0, $2705 = 0.0, $2706 = 0.0, $2707 = 0.0;
 var $2708 = 0, $2709 = 0, $271 = 0.0, $2710 = 0.0, $2711 = 0.0, $2712 = 0.0, $2713 = 0.0, $2714 = 0, $2715 = 0, $2716 = 0.0, $2717 = 0.0, $2718 = 0.0, $2719 = 0, $272 = 0.0, $2720 = 0.0, $2721 = 0.0, $2722 = 0.0, $2723 = 0, $2724 = 0.0, $2725 = 0.0;
 var $2726 = 0.0, $2727 = 0.0, $2728 = 0, $2729 = 0, $273 = 0.0, $2730 = 0.0, $2731 = 0.0, $2732 = 0.0, $2733 = 0, $2734 = 0, $2735 = 0.0, $2736 = 0.0, $2737 = 0.0, $2738 = 0, $2739 = 0.0, $274 = 0, $2740 = 0.0, $2741 = 0.0, $2742 = 0, $2743 = 0.0;
 var $2744 = 0.0, $2745 = 0.0, $2746 = 0.0, $2747 = 0, $2748 = 0, $2749 = 0.0, $275 = 0.0, $2750 = 0.0, $2751 = 0.0, $2752 = 0.0, $2753 = 0, $2754 = 0, $2755 = 0.0, $2756 = 0.0, $2757 = 0.0, $2758 = 0, $2759 = 0.0, $276 = 0.0, $2760 = 0.0, $2761 = 0.0;
 var $2762 = 0, $2763 = 0.0, $2764 = 0.0, $2765 = 0.0, $2766 = 0.0, $2767 = 0, $2768 = 0, $2769 = 0.0, $277 = 0.0, $2770 = 0.0, $2771 = 0.0, $2772 = 0, $2773 = 0, $2774 = 0.0, $2775 = 0.0, $2776 = 0.0, $2777 = 0.0, $2778 = 0.0, $2779 = 0, $278 = 0;
 var $2780 = 0, $2781 = 0.0, $2782 = 0.0, $2783 = 0.0, $2784 = 0, $2785 = 0.0, $2786 = 0.0, $2787 = 0.0, $2788 = 0, $2789 = 0.0, $279 = 0.0, $2790 = 0.0, $2791 = 0.0, $2792 = 0.0, $2793 = 0, $2794 = 0, $2795 = 0.0, $2796 = 0.0, $2797 = 0.0, $2798 = 0;
 var $2799 = 0, $28 = 0, $280 = 0.0, $2800 = 0.0, $2801 = 0.0, $2802 = 0.0, $2803 = 0, $2804 = 0.0, $2805 = 0.0, $2806 = 0.0, $2807 = 0, $2808 = 0.0, $2809 = 0.0, $281 = 0.0, $2810 = 0.0, $2811 = 0.0, $2812 = 0, $2813 = 0, $2814 = 0.0, $2815 = 0.0;
 var $2816 = 0.0, $2817 = 0.0, $2818 = 0.0, $2819 = 0, $282 = 0.0, $2820 = 0, $2821 = 0.0, $2822 = 0.0, $2823 = 0.0, $2824 = 0.0, $2825 = 0, $2826 = 0, $2827 = 0.0, $2828 = 0.0, $2829 = 0.0, $283 = 0, $2830 = 0, $2831 = 0.0, $2832 = 0.0, $2833 = 0.0;
 var $2834 = 0, $2835 = 0.0, $2836 = 0.0, $2837 = 0.0, $2838 = 0.0, $2839 = 0, $284 = 0, $2840 = 0, $2841 = 0.0, $2842 = 0.0, $2843 = 0.0, $2844 = 0, $2845 = 0.0, $2846 = 0.0, $2847 = 0.0, $2848 = 0, $2849 = 0.0, $285 = 0.0, $2850 = 0.0, $2851 = 0.0;
 var $2852 = 0.0, $2853 = 0, $2854 = 0, $2855 = 0.0, $2856 = 0.0, $2857 = 0.0, $2858 = 0, $2859 = 0, $286 = 0.0, $2860 = 0.0, $2861 = 0.0, $2862 = 0.0, $2863 = 0.0, $2864 = 0.0, $2865 = 0, $2866 = 0, $2867 = 0.0, $2868 = 0.0, $2869 = 0.0, $287 = 0.0;
 var $2870 = 0, $2871 = 0.0, $2872 = 0.0, $2873 = 0.0, $2874 = 0, $2875 = 0.0, $2876 = 0.0, $2877 = 0.0, $2878 = 0.0, $2879 = 0.0, $288 = 0, $2880 = 0, $2881 = 0, $2882 = 0.0, $2883 = 0.0, $2884 = 0.0, $2885 = 0, $2886 = 0, $2887 = 0.0, $2888 = 0.0;
 var $2889 = 0.0, $289 = 0, $2890 = 0.0, $2891 = 0, $2892 = 0, $2893 = 0.0, $2894 = 0.0, $2895 = 0.0, $2896 = 0.0, $2897 = 0, $2898 = 0, $2899 = 0.0, $29 = 0.0, $290 = 0.0, $2900 = 0.0, $2901 = 0.0, $2902 = 0.0, $2903 = 0, $2904 = 0, $2905 = 0.0;
 var $2906 = 0.0, $2907 = 0.0, $2908 = 0, $2909 = 0, $291 = 0.0, $2910 = 0.0, $2911 = 0.0, $2912 = 0.0, $2913 = 0, $2914 = 0, $2915 = 0.0, $2916 = 0.0, $2917 = 0.0, $2918 = 0, $2919 = 0, $292 = 0.0, $2920 = 0.0, $2921 = 0.0, $2922 = 0.0, $2923 = 0;
 var $2924 = 0, $2925 = 0.0, $2926 = 0.0, $2927 = 0.0, $2928 = 0, $2929 = 0, $293 = 0, $2930 = 0.0, $2931 = 0.0, $2932 = 0.0, $2933 = 0, $2934 = 0, $2935 = 0.0, $2936 = 0.0, $2937 = 0.0, $2938 = 0, $2939 = 0, $294 = 0.0, $2940 = 0.0, $2941 = 0.0;
 var $2942 = 0.0, $2943 = 0.0, $2944 = 0.0, $2945 = 0, $2946 = 0, $2947 = 0.0, $2948 = 0.0, $2949 = 0.0, $295 = 0.0, $2950 = 0.0, $2951 = 0, $2952 = 0, $2953 = 0.0, $2954 = 0.0, $2955 = 0.0, $2956 = 0.0, $2957 = 0, $2958 = 0.0, $2959 = 0.0, $296 = 0.0;
 var $2960 = 0.0, $2961 = 0, $2962 = 0.0, $2963 = 0.0, $2964 = 0.0, $2965 = 0.0, $2966 = 0.0, $2967 = 0, $2968 = 0, $2969 = 0.0, $297 = 0, $2970 = 0.0, $2971 = 0.0, $2972 = 0, $2973 = 0.0, $2974 = 0.0, $2975 = 0.0, $2976 = 0, $2977 = 0.0, $2978 = 0.0;
 var $2979 = 0.0, $298 = 0.0, $2980 = 0.0, $2981 = 0.0, $2982 = 0, $2983 = 0, $2984 = 0.0, $2985 = 0.0, $2986 = 0.0, $2987 = 0, $2988 = 0, $2989 = 0.0, $299 = 0.0, $2990 = 0.0, $2991 = 0.0, $2992 = 0.0, $2993 = 0.0, $2994 = 0, $2995 = 0, $2996 = 0.0;
 var $2997 = 0.0, $2998 = 0.0, $2999 = 0, $3 = 0, $30 = 0.0, $300 = 0.0, $3000 = 0.0, $3001 = 0.0, $3002 = 0.0, $3003 = 0, $3004 = 0.0, $3005 = 0.0, $3006 = 0.0, $3007 = 0.0, $3008 = 0.0, $3009 = 0, $301 = 0.0, $3010 = 0, $3011 = 0.0, $3012 = 0.0;
 var $3013 = 0.0, $3014 = 0, $3015 = 0, $3016 = 0.0, $3017 = 0.0, $3018 = 0.0, $3019 = 0.0, $302 = 0, $3020 = 0, $3021 = 0, $3022 = 0.0, $3023 = 0.0, $3024 = 0.0, $3025 = 0, $3026 = 0.0, $3027 = 0.0, $3028 = 0.0, $3029 = 0, $303 = 0, $3030 = 0.0;
 var $3031 = 0.0, $3032 = 0.0, $3033 = 0.0, $3034 = 0.0, $3035 = 0, $3036 = 0, $3037 = 0.0, $3038 = 0.0, $3039 = 0.0, $304 = 0.0, $3040 = 0, $3041 = 0, $3042 = 0.0, $3043 = 0.0, $3044 = 0.0, $3045 = 0, $3046 = 0.0, $3047 = 0.0, $3048 = 0.0, $3049 = 0;
 var $305 = 0.0, $3050 = 0.0, $3051 = 0.0, $3052 = 0.0, $3053 = 0.0, $3054 = 0.0, $3055 = 0, $3056 = 0, $3057 = 0.0, $3058 = 0.0, $3059 = 0.0, $306 = 0.0, $3060 = 0.0, $3061 = 0, $3062 = 0, $3063 = 0.0, $3064 = 0.0, $3065 = 0.0, $3066 = 0.0, $3067 = 0;
 var $3068 = 0, $3069 = 0.0, $307 = 0.0, $3070 = 0.0, $3071 = 0.0, $3072 = 0.0, $3073 = 0, $3074 = 0, $3075 = 0.0, $3076 = 0.0, $3077 = 0, $3078 = 0, $3079 = 0.0, $308 = 0.0, $3080 = 0.0, $3081 = 0.0, $3082 = 0, $3083 = 0, $3084 = 0.0, $3085 = 0.0;
 var $3086 = 0.0, $3087 = 0, $3088 = 0, $3089 = 0.0, $309 = 0, $3090 = 0.0, $3091 = 0.0, $3092 = 0, $3093 = 0, $3094 = 0.0, $3095 = 0.0, $3096 = 0.0, $3097 = 0, $3098 = 0, $3099 = 0.0, $31 = 0, $310 = 0, $3100 = 0.0, $3101 = 0.0, $3102 = 0;
 var $3103 = 0, $3104 = 0.0, $3105 = 0.0, $3106 = 0.0, $3107 = 0, $3108 = 0, $3109 = 0.0, $311 = 0.0, $3110 = 0.0, $3111 = 0.0, $3112 = 0.0, $3113 = 0, $3114 = 0, $3115 = 0.0, $3116 = 0.0, $3117 = 0.0, $3118 = 0.0, $3119 = 0.0, $312 = 0.0, $3120 = 0;
 var $3121 = 0, $3122 = 0.0, $3123 = 0.0, $3124 = 0.0, $3125 = 0, $3126 = 0, $3127 = 0.0, $3128 = 0.0, $3129 = 0, $313 = 0.0, $3130 = 0, $3131 = 0.0, $3132 = 0.0, $3133 = 0.0, $3134 = 0, $3135 = 0, $3136 = 0.0, $3137 = 0.0, $3138 = 0.0, $3139 = 0;
 var $314 = 0, $3140 = 0, $3141 = 0.0, $3142 = 0.0, $3143 = 0.0, $3144 = 0, $3145 = 0, $3146 = 0.0, $3147 = 0.0, $3148 = 0.0, $3149 = 0.0, $315 = 0.0, $3150 = 0.0, $3151 = 0, $3152 = 0, $3153 = 0.0, $3154 = 0.0, $3155 = 0.0, $3156 = 0.0, $3157 = 0;
 var $3158 = 0, $3159 = 0.0, $316 = 0.0, $3160 = 0.0, $3161 = 0.0, $3162 = 0.0, $3163 = 0, $3164 = 0.0, $3165 = 0.0, $3166 = 0.0, $3167 = 0, $3168 = 0.0, $3169 = 0.0, $317 = 0.0, $3170 = 0.0, $3171 = 0.0, $3172 = 0, $3173 = 0, $3174 = 0.0, $3175 = 0.0;
 var $3176 = 0.0, $3177 = 0, $3178 = 0.0, $3179 = 0.0, $318 = 0, $3180 = 0.0, $3181 = 0, $3182 = 0.0, $3183 = 0.0, $3184 = 0.0, $3185 = 0.0, $3186 = 0, $3187 = 0, $3188 = 0.0, $3189 = 0.0, $319 = 0.0, $3190 = 0.0, $3191 = 0, $3192 = 0, $3193 = 0.0;
 var $3194 = 0.0, $3195 = 0.0, $3196 = 0.0, $3197 = 0, $3198 = 0, $3199 = 0.0, $32 = 0, $320 = 0.0, $3200 = 0.0, $3201 = 0.0, $3202 = 0, $3203 = 0.0, $3204 = 0.0, $3205 = 0.0, $3206 = 0, $3207 = 0.0, $3208 = 0.0, $3209 = 0.0, $321 = 0.0, $3210 = 0.0;
 var $3211 = 0, $3212 = 0, $3213 = 0.0, $3214 = 0.0, $3215 = 0.0, $3216 = 0, $3217 = 0, $3218 = 0.0, $3219 = 0.0, $322 = 0.0, $3220 = 0.0, $3221 = 0.0, $3222 = 0.0, $3223 = 0, $3224 = 0, $3225 = 0.0, $3226 = 0.0, $3227 = 0.0, $3228 = 0, $3229 = 0.0;
 var $323 = 0, $3230 = 0.0, $3231 = 0.0, $3232 = 0, $3233 = 0.0, $3234 = 0.0, $3235 = 0.0, $3236 = 0.0, $3237 = 0, $3238 = 0, $3239 = 0.0, $324 = 0, $3240 = 0.0, $3241 = 0.0, $3242 = 0, $3243 = 0.0, $3244 = 0.0, $3245 = 0.0, $3246 = 0, $3247 = 0.0;
 var $3248 = 0.0, $3249 = 0.0, $325 = 0.0, $3250 = 0.0, $3251 = 0, $3252 = 0, $3253 = 0.0, $3254 = 0.0, $3255 = 0.0, $3256 = 0, $3257 = 0, $3258 = 0.0, $3259 = 0.0, $326 = 0.0, $3260 = 0.0, $3261 = 0.0, $3262 = 0.0, $3263 = 0, $3264 = 0, $3265 = 0.0;
 var $3266 = 0.0, $3267 = 0.0, $3268 = 0.0, $3269 = 0, $327 = 0.0, $3270 = 0, $3271 = 0.0, $3272 = 0.0, $3273 = 0.0, $3274 = 0, $3275 = 0.0, $3276 = 0.0, $3277 = 0.0, $3278 = 0, $3279 = 0.0, $328 = 0, $3280 = 0.0, $3281 = 0.0, $3282 = 0.0, $3283 = 0;
 var $3284 = 0, $3285 = 0.0, $3286 = 0.0, $3287 = 0.0, $3288 = 0, $3289 = 0.0, $329 = 0, $3290 = 0.0, $3291 = 0.0, $3292 = 0, $3293 = 0.0, $3294 = 0.0, $3295 = 0.0, $3296 = 0.0, $3297 = 0, $3298 = 0, $3299 = 0.0, $33 = 0.0, $330 = 0.0, $3300 = 0.0;
 var $3301 = 0.0, $3302 = 0, $3303 = 0, $3304 = 0.0, $3305 = 0.0, $3306 = 0.0, $3307 = 0.0, $3308 = 0.0, $3309 = 0, $331 = 0.0, $3310 = 0, $3311 = 0.0, $3312 = 0.0, $3313 = 0.0, $3314 = 0, $3315 = 0.0, $3316 = 0.0, $3317 = 0.0, $3318 = 0, $3319 = 0.0;
 var $332 = 0.0, $3320 = 0.0, $3321 = 0.0, $3322 = 0.0, $3323 = 0.0, $3324 = 0, $3325 = 0, $3326 = 0.0, $3327 = 0.0, $3328 = 0.0, $3329 = 0, $333 = 0, $3330 = 0, $3331 = 0.0, $3332 = 0.0, $3333 = 0.0, $3334 = 0.0, $3335 = 0, $3336 = 0, $3337 = 0.0;
 var $3338 = 0.0, $3339 = 0.0, $334 = 0.0, $3340 = 0.0, $3341 = 0, $3342 = 0, $3343 = 0.0, $3344 = 0.0, $3345 = 0.0, $3346 = 0.0, $3347 = 0, $3348 = 0, $3349 = 0, $335 = 0.0, $3350 = 0, $3351 = 0.0, $3352 = 0.0, $3353 = 0, $3354 = 0, $3355 = 0.0;
 var $3356 = 0.0, $3357 = 0.0, $3358 = 0, $3359 = 0, $336 = 0.0, $3360 = 0.0, $3361 = 0.0, $3362 = 0.0, $3363 = 0, $3364 = 0, $3365 = 0.0, $3366 = 0.0, $3367 = 0.0, $3368 = 0, $3369 = 0, $337 = 0, $3370 = 0.0, $3371 = 0.0, $3372 = 0.0, $3373 = 0;
 var $3374 = 0, $3375 = 0.0, $3376 = 0.0, $3377 = 0.0, $3378 = 0, $3379 = 0, $338 = 0.0, $3380 = 0.0, $3381 = 0.0, $3382 = 0.0, $3383 = 0, $3384 = 0, $3385 = 0.0, $3386 = 0.0, $3387 = 0.0, $3388 = 0.0, $3389 = 0, $339 = 0.0, $3390 = 0, $3391 = 0.0;
 var $3392 = 0.0, $3393 = 0.0, $3394 = 0.0, $3395 = 0.0, $3396 = 0, $3397 = 0, $3398 = 0.0, $3399 = 0.0, $34 = 0.0, $340 = 0.0, $3400 = 0.0, $3401 = 0, $3402 = 0, $3403 = 0.0, $3404 = 0.0, $3405 = 0, $3406 = 0, $3407 = 0.0, $3408 = 0.0, $3409 = 0.0;
 var $341 = 0.0, $3410 = 0, $3411 = 0, $3412 = 0.0, $3413 = 0.0, $3414 = 0.0, $3415 = 0, $3416 = 0, $3417 = 0.0, $3418 = 0.0, $3419 = 0.0, $342 = 0, $3420 = 0, $3421 = 0, $3422 = 0.0, $3423 = 0.0, $3424 = 0.0, $3425 = 0.0, $3426 = 0.0, $3427 = 0;
 var $3428 = 0, $3429 = 0.0, $343 = 0, $3430 = 0.0, $3431 = 0.0, $3432 = 0.0, $3433 = 0, $3434 = 0, $3435 = 0.0, $3436 = 0.0, $3437 = 0.0, $3438 = 0, $3439 = 0.0, $344 = 0.0, $3440 = 0.0, $3441 = 0.0, $3442 = 0, $3443 = 0.0, $3444 = 0.0, $3445 = 0.0;
 var $3446 = 0.0, $3447 = 0.0, $3448 = 0, $3449 = 0, $345 = 0.0, $3450 = 0.0, $3451 = 0.0, $3452 = 0.0, $3453 = 0, $3454 = 0, $3455 = 0.0, $3456 = 0.0, $3457 = 0.0, $3458 = 0, $3459 = 0.0, $346 = 0.0, $3460 = 0.0, $3461 = 0.0, $3462 = 0, $3463 = 0.0;
 var $3464 = 0.0, $3465 = 0.0, $3466 = 0.0, $3467 = 0.0, $3468 = 0, $3469 = 0, $347 = 0.0, $3470 = 0.0, $3471 = 0.0, $3472 = 0.0, $3473 = 0, $3474 = 0.0, $3475 = 0.0, $3476 = 0.0, $3477 = 0, $3478 = 0.0, $3479 = 0.0, $348 = 0, $3480 = 0.0, $3481 = 0.0;
 var $3482 = 0.0, $3483 = 0, $3484 = 0, $3485 = 0.0, $3486 = 0.0, $3487 = 0.0, $3488 = 0, $3489 = 0, $349 = 0, $3490 = 0.0, $3491 = 0.0, $3492 = 0.0, $3493 = 0.0, $3494 = 0.0, $3495 = 0, $3496 = 0, $3497 = 0.0, $3498 = 0.0, $3499 = 0.0, $35 = 0;
 var $350 = 0.0, $3500 = 0.0, $3501 = 0, $3502 = 0, $3503 = 0.0, $3504 = 0.0, $3505 = 0.0, $3506 = 0, $3507 = 0.0, $3508 = 0.0, $3509 = 0.0, $351 = 0.0, $3510 = 0, $3511 = 0.0, $3512 = 0.0, $3513 = 0.0, $3514 = 0.0, $3515 = 0.0, $3516 = 0, $3517 = 0;
 var $3518 = 0.0, $3519 = 0.0, $352 = 0.0, $3520 = 0.0, $3521 = 0, $3522 = 0.0, $3523 = 0.0, $3524 = 0.0, $3525 = 0, $3526 = 0.0, $3527 = 0.0, $3528 = 0.0, $3529 = 0.0, $353 = 0, $3530 = 0.0, $3531 = 0, $3532 = 0, $3533 = 0.0, $3534 = 0.0, $3535 = 0.0;
 var $3536 = 0, $3537 = 0, $3538 = 0.0, $3539 = 0.0, $354 = 0.0, $3540 = 0.0, $3541 = 0.0, $3542 = 0, $3543 = 0, $3544 = 0.0, $3545 = 0.0, $3546 = 0.0, $3547 = 0.0, $3548 = 0, $3549 = 0, $355 = 0.0, $3550 = 0.0, $3551 = 0.0, $3552 = 0.0, $3553 = 0.0;
 var $3554 = 0, $3555 = 0.0, $3556 = 0.0, $3557 = 0.0, $3558 = 0, $3559 = 0.0, $356 = 0.0, $3560 = 0.0, $3561 = 0.0, $3562 = 0.0, $3563 = 0, $3564 = 0, $3565 = 0.0, $3566 = 0.0, $3567 = 0.0, $3568 = 0, $3569 = 0, $357 = 0, $3570 = 0.0, $3571 = 0.0;
 var $3572 = 0.0, $3573 = 0, $3574 = 0.0, $3575 = 0.0, $3576 = 0.0, $3577 = 0, $3578 = 0.0, $3579 = 0.0, $358 = 0.0, $3580 = 0.0, $3581 = 0.0, $3582 = 0, $3583 = 0, $3584 = 0.0, $3585 = 0.0, $3586 = 0.0, $3587 = 0.0, $3588 = 0, $3589 = 0, $359 = 0.0;
 var $3590 = 0.0, $3591 = 0.0, $3592 = 0.0, $3593 = 0, $3594 = 0.0, $3595 = 0.0, $3596 = 0.0, $3597 = 0, $3598 = 0.0, $3599 = 0.0, $36 = 0, $360 = 0.0, $3600 = 0.0, $3601 = 0.0, $3602 = 0, $3603 = 0, $3604 = 0.0, $3605 = 0.0, $3606 = 0.0, $3607 = 0;
 var $3608 = 0, $3609 = 0.0, $361 = 0.0, $3610 = 0.0, $3611 = 0.0, $3612 = 0.0, $3613 = 0.0, $3614 = 0, $3615 = 0, $3616 = 0.0, $3617 = 0.0, $3618 = 0.0, $3619 = 0, $362 = 0, $3620 = 0.0, $3621 = 0.0, $3622 = 0.0, $3623 = 0, $3624 = 0.0, $3625 = 0.0;
 var $3626 = 0.0, $3627 = 0.0, $3628 = 0, $3629 = 0, $363 = 0, $3630 = 0.0, $3631 = 0.0, $3632 = 0.0, $3633 = 0, $3634 = 0, $3635 = 0.0, $3636 = 0.0, $3637 = 0.0, $3638 = 0, $3639 = 0.0, $364 = 0.0, $3640 = 0.0, $3641 = 0.0, $3642 = 0, $3643 = 0.0;
 var $3644 = 0.0, $3645 = 0.0, $3646 = 0.0, $3647 = 0, $3648 = 0, $3649 = 0.0, $365 = 0.0, $3650 = 0.0, $3651 = 0.0, $3652 = 0.0, $3653 = 0.0, $3654 = 0, $3655 = 0, $3656 = 0.0, $3657 = 0.0, $3658 = 0.0, $3659 = 0.0, $366 = 0.0, $3660 = 0, $3661 = 0;
 var $3662 = 0.0, $3663 = 0.0, $3664 = 0.0, $3665 = 0, $3666 = 0.0, $3667 = 0.0, $3668 = 0.0, $3669 = 0, $367 = 0, $3670 = 0.0, $3671 = 0.0, $3672 = 0.0, $3673 = 0.0, $3674 = 0, $3675 = 0, $3676 = 0.0, $3677 = 0.0, $3678 = 0.0, $3679 = 0, $368 = 0;
 var $3680 = 0.0, $3681 = 0.0, $3682 = 0.0, $3683 = 0, $3684 = 0.0, $3685 = 0.0, $3686 = 0.0, $3687 = 0.0, $3688 = 0, $3689 = 0, $369 = 0.0, $3690 = 0.0, $3691 = 0.0, $3692 = 0.0, $3693 = 0, $3694 = 0, $3695 = 0.0, $3696 = 0.0, $3697 = 0.0, $3698 = 0.0;
 var $3699 = 0.0, $37 = 0.0, $370 = 0.0, $3700 = 0, $3701 = 0, $3702 = 0.0, $3703 = 0.0, $3704 = 0.0, $3705 = 0, $3706 = 0.0, $3707 = 0.0, $3708 = 0.0, $3709 = 0, $371 = 0.0, $3710 = 0.0, $3711 = 0.0, $3712 = 0.0, $3713 = 0.0, $3714 = 0.0, $3715 = 0;
 var $3716 = 0, $3717 = 0.0, $3718 = 0.0, $3719 = 0.0, $372 = 0.0, $3720 = 0, $3721 = 0, $3722 = 0.0, $3723 = 0.0, $3724 = 0.0, $3725 = 0.0, $3726 = 0, $3727 = 0, $3728 = 0.0, $3729 = 0.0, $373 = 0.0, $3730 = 0.0, $3731 = 0.0, $3732 = 0, $3733 = 0;
 var $3734 = 0.0, $3735 = 0.0, $3736 = 0.0, $3737 = 0.0, $3738 = 0, $3739 = 0, $374 = 0, $3740 = 0.0, $3741 = 0.0, $3742 = 0.0, $3743 = 0, $3744 = 0, $3745 = 0.0, $3746 = 0.0, $3747 = 0.0, $3748 = 0, $3749 = 0, $375 = 0, $3750 = 0.0, $3751 = 0.0;
 var $3752 = 0.0, $3753 = 0, $3754 = 0, $3755 = 0.0, $3756 = 0.0, $3757 = 0.0, $3758 = 0, $3759 = 0, $376 = 0.0, $3760 = 0.0, $3761 = 0.0, $3762 = 0.0, $3763 = 0, $3764 = 0, $3765 = 0.0, $3766 = 0.0, $3767 = 0.0, $3768 = 0, $3769 = 0, $377 = 0.0;
 var $3770 = 0.0, $3771 = 0.0, $3772 = 0.0, $3773 = 0, $3774 = 0, $3775 = 0.0, $3776 = 0.0, $3777 = 0.0, $3778 = 0.0, $3779 = 0.0, $378 = 0.0, $3780 = 0, $3781 = 0, $3782 = 0.0, $3783 = 0.0, $3784 = 0.0, $3785 = 0.0, $3786 = 0, $3787 = 0, $3788 = 0.0;
 var $3789 = 0.0, $379 = 0.0, $3790 = 0.0, $3791 = 0.0, $3792 = 0, $3793 = 0.0, $3794 = 0.0, $3795 = 0.0, $3796 = 0, $3797 = 0.0, $3798 = 0.0, $3799 = 0.0, $38 = 0.0, $380 = 0, $3800 = 0.0, $3801 = 0, $3802 = 0, $3803 = 0.0, $3804 = 0.0, $3805 = 0.0;
 var $3806 = 0, $3807 = 0.0, $3808 = 0.0, $3809 = 0.0, $381 = 0, $3810 = 0, $3811 = 0.0, $3812 = 0.0, $3813 = 0.0, $3814 = 0.0, $3815 = 0, $3816 = 0, $3817 = 0.0, $3818 = 0.0, $3819 = 0.0, $382 = 0.0, $3820 = 0, $3821 = 0, $3822 = 0.0, $3823 = 0.0;
 var $3824 = 0.0, $3825 = 0.0, $3826 = 0, $3827 = 0, $3828 = 0.0, $3829 = 0.0, $383 = 0.0, $3830 = 0.0, $3831 = 0, $3832 = 0.0, $3833 = 0.0, $3834 = 0.0, $3835 = 0, $3836 = 0.0, $3837 = 0.0, $3838 = 0.0, $3839 = 0.0, $384 = 0.0, $3840 = 0, $3841 = 0;
 var $3842 = 0.0, $3843 = 0.0, $3844 = 0.0, $3845 = 0, $3846 = 0, $3847 = 0.0, $3848 = 0.0, $3849 = 0.0, $385 = 0.0, $3850 = 0.0, $3851 = 0.0, $3852 = 0, $3853 = 0, $3854 = 0.0, $3855 = 0.0, $3856 = 0.0, $3857 = 0, $3858 = 0.0, $3859 = 0.0, $386 = 0;
 var $3860 = 0.0, $3861 = 0, $3862 = 0.0, $3863 = 0.0, $3864 = 0.0, $3865 = 0.0, $3866 = 0, $3867 = 0, $3868 = 0.0, $3869 = 0.0, $387 = 0, $3870 = 0.0, $3871 = 0, $3872 = 0.0, $3873 = 0.0, $3874 = 0.0, $3875 = 0, $3876 = 0.0, $3877 = 0.0, $3878 = 0.0;
 var $3879 = 0.0, $388 = 0.0, $3880 = 0, $3881 = 0, $3882 = 0.0, $3883 = 0.0, $3884 = 0.0, $3885 = 0, $3886 = 0, $3887 = 0.0, $3888 = 0.0, $3889 = 0.0, $389 = 0.0, $3890 = 0.0, $3891 = 0.0, $3892 = 0, $3893 = 0, $3894 = 0.0, $3895 = 0.0, $3896 = 0.0;
 var $3897 = 0.0, $3898 = 0, $3899 = 0, $39 = 0, $390 = 0.0, $3900 = 0.0, $3901 = 0.0, $3902 = 0.0, $3903 = 0, $3904 = 0.0, $3905 = 0.0, $3906 = 0.0, $3907 = 0, $3908 = 0.0, $3909 = 0.0, $391 = 0, $3910 = 0.0, $3911 = 0.0, $3912 = 0, $3913 = 0;
 var $3914 = 0.0, $3915 = 0.0, $3916 = 0.0, $3917 = 0, $3918 = 0.0, $3919 = 0.0, $392 = 0.0, $3920 = 0.0, $3921 = 0, $3922 = 0.0, $3923 = 0.0, $3924 = 0.0, $3925 = 0.0, $3926 = 0, $3927 = 0, $3928 = 0.0, $3929 = 0.0, $393 = 0.0, $3930 = 0.0, $3931 = 0;
 var $3932 = 0, $3933 = 0.0, $3934 = 0.0, $3935 = 0.0, $3936 = 0.0, $3937 = 0.0, $3938 = 0, $3939 = 0, $394 = 0.0, $3940 = 0.0, $3941 = 0.0, $3942 = 0.0, $3943 = 0, $3944 = 0.0, $3945 = 0.0, $3946 = 0.0, $3947 = 0, $3948 = 0.0, $3949 = 0.0, $395 = 0;
 var $3950 = 0.0, $3951 = 0.0, $3952 = 0.0, $3953 = 0, $3954 = 0, $3955 = 0.0, $3956 = 0.0, $3957 = 0.0, $3958 = 0, $3959 = 0, $396 = 0.0, $3960 = 0.0, $3961 = 0.0, $3962 = 0.0, $3963 = 0.0, $3964 = 0, $3965 = 0, $3966 = 0.0, $3967 = 0.0, $3968 = 0.0;
 var $3969 = 0.0, $397 = 0.0, $3970 = 0, $3971 = 0, $3972 = 0.0, $3973 = 0.0, $3974 = 0.0, $3975 = 0.0, $3976 = 0, $3977 = 0.0, $3978 = 0.0, $3979 = 0.0, $398 = 0.0, $3980 = 0, $3981 = 0.0, $3982 = 0.0, $3983 = 0.0, $3984 = 0.0, $3985 = 0.0, $3986 = 0;
 var $3987 = 0, $3988 = 0.0, $3989 = 0.0, $399 = 0.0, $3990 = 0.0, $3991 = 0, $3992 = 0, $3993 = 0.0, $3994 = 0.0, $3995 = 0.0, $3996 = 0, $3997 = 0.0, $3998 = 0.0, $3999 = 0.0, $4 = 0, $40 = 0, $400 = 0, $4000 = 0, $4001 = 0.0, $4002 = 0.0;
 var $4003 = 0.0, $4004 = 0.0, $4005 = 0.0, $4006 = 0, $4007 = 0, $4008 = 0.0, $4009 = 0.0, $401 = 0, $4010 = 0.0, $4011 = 0.0, $4012 = 0, $4013 = 0, $4014 = 0.0, $4015 = 0.0, $4016 = 0.0, $4017 = 0, $4018 = 0.0, $4019 = 0.0, $402 = 0.0, $4020 = 0.0;
 var $4021 = 0, $4022 = 0.0, $4023 = 0.0, $4024 = 0.0, $4025 = 0.0, $4026 = 0.0, $4027 = 0, $4028 = 0, $4029 = 0.0, $403 = 0.0, $4030 = 0.0, $4031 = 0.0, $4032 = 0, $4033 = 0, $4034 = 0.0, $4035 = 0.0, $4036 = 0.0, $4037 = 0, $4038 = 0.0, $4039 = 0.0;
 var $404 = 0.0, $4040 = 0.0, $4041 = 0, $4042 = 0.0, $4043 = 0.0, $4044 = 0.0, $4045 = 0.0, $4046 = 0.0, $4047 = 0, $4048 = 0, $4049 = 0.0, $405 = 0, $4050 = 0.0, $4051 = 0.0, $4052 = 0.0, $4053 = 0.0, $4054 = 0, $4055 = 0, $4056 = 0.0, $4057 = 0.0;
 var $4058 = 0.0, $4059 = 0, $406 = 0.0, $4060 = 0.0, $4061 = 0.0, $4062 = 0.0, $4063 = 0, $4064 = 0.0, $4065 = 0.0, $4066 = 0.0, $4067 = 0.0, $4068 = 0.0, $4069 = 0, $407 = 0.0, $4070 = 0, $4071 = 0.0, $4072 = 0.0, $4073 = 0.0, $4074 = 0, $4075 = 0;
 var $4076 = 0.0, $4077 = 0.0, $4078 = 0.0, $4079 = 0.0, $408 = 0.0, $4080 = 0, $4081 = 0, $4082 = 0.0, $4083 = 0.0, $4084 = 0.0, $4085 = 0.0, $4086 = 0, $4087 = 0, $4088 = 0.0, $4089 = 0.0, $409 = 0, $4090 = 0.0, $4091 = 0.0, $4092 = 0, $4093 = 0;
 var $4094 = 0.0, $4095 = 0.0, $4096 = 0.0, $4097 = 0.0, $4098 = 0.0, $4099 = 0.0, $41 = 0.0, $410 = 0.0, $4100 = 0.0, $4101 = 0.0, $4102 = 0.0, $4103 = 0.0, $4104 = 0.0, $4105 = 0.0, $4106 = 0.0, $4107 = 0.0, $4108 = 0.0, $4109 = 0.0, $411 = 0.0, $4110 = 0.0;
 var $4111 = 0.0, $4112 = 0.0, $4113 = 0.0, $4114 = 0.0, $4115 = 0.0, $4116 = 0.0, $4117 = 0.0, $4118 = 0.0, $4119 = 0.0, $412 = 0.0, $4120 = 0.0, $4121 = 0.0, $4122 = 0.0, $4123 = 0.0, $4124 = 0.0, $4125 = 0.0, $4126 = 0.0, $4127 = 0.0, $4128 = 0.0, $4129 = 0.0;
 var $413 = 0.0, $4130 = 0.0, $4131 = 0.0, $4132 = 0.0, $4133 = 0.0, $4134 = 0.0, $4135 = 0.0, $4136 = 0.0, $4137 = 0.0, $4138 = 0.0, $4139 = 0.0, $414 = 0, $4140 = 0.0, $4141 = 0.0, $4142 = 0.0, $4143 = 0.0, $4144 = 0.0, $4145 = 0.0, $4146 = 0.0, $4147 = 0.0;
 var $4148 = 0.0, $4149 = 0.0, $415 = 0, $4150 = 0.0, $4151 = 0.0, $4152 = 0.0, $4153 = 0.0, $4154 = 0.0, $4155 = 0.0, $4156 = 0, $4157 = 0, $4158 = 0, $4159 = 0.0, $416 = 0.0, $4160 = 0.0, $4161 = 0.0, $4162 = 0, $4163 = 0.0, $4164 = 0.0, $4165 = 0.0;
 var $4166 = 0.0, $4167 = 0, $4168 = 0, $4169 = 0.0, $417 = 0.0, $4170 = 0.0, $4171 = 0.0, $4172 = 0.0, $4173 = 0, $4174 = 0, $4175 = 0.0, $4176 = 0.0, $4177 = 0.0, $4178 = 0, $4179 = 0, $418 = 0.0, $4180 = 0.0, $4181 = 0.0, $4182 = 0.0, $4183 = 0.0;
 var $4184 = 0, $4185 = 0, $4186 = 0.0, $4187 = 0.0, $4188 = 0.0, $4189 = 0.0, $419 = 0, $4190 = 0, $4191 = 0.0, $4192 = 0.0, $4193 = 0.0, $4194 = 0, $4195 = 0.0, $4196 = 0.0, $4197 = 0.0, $4198 = 0.0, $4199 = 0, $42 = 0.0, $420 = 0, $4200 = 0;
 var $4201 = 0.0, $4202 = 0.0, $4203 = 0.0, $4204 = 0, $4205 = 0, $4206 = 0.0, $4207 = 0.0, $4208 = 0.0, $4209 = 0.0, $421 = 0.0, $4210 = 0, $4211 = 0.0, $4212 = 0.0, $4213 = 0.0, $4214 = 0, $4215 = 0.0, $4216 = 0.0, $4217 = 0.0, $4218 = 0.0, $4219 = 0;
 var $422 = 0.0, $4220 = 0, $4221 = 0.0, $4222 = 0.0, $4223 = 0.0, $4224 = 0, $4225 = 0, $4226 = 0.0, $4227 = 0.0, $4228 = 0.0, $4229 = 0, $423 = 0.0, $4230 = 0.0, $4231 = 0.0, $4232 = 0.0, $4233 = 0, $4234 = 0.0, $4235 = 0.0, $4236 = 0.0, $4237 = 0.0;
 var $4238 = 0, $4239 = 0, $424 = 0.0, $4240 = 0.0, $4241 = 0.0, $4242 = 0.0, $4243 = 0.0, $4244 = 0, $4245 = 0, $4246 = 0.0, $4247 = 0.0, $4248 = 0.0, $4249 = 0.0, $425 = 0.0, $4250 = 0, $4251 = 0.0, $4252 = 0.0, $4253 = 0.0, $4254 = 0, $4255 = 0.0;
 var $4256 = 0.0, $4257 = 0.0, $4258 = 0.0, $4259 = 0.0, $426 = 0, $4260 = 0, $4261 = 0, $4262 = 0.0, $4263 = 0.0, $4264 = 0.0, $4265 = 0, $4266 = 0.0, $4267 = 0.0, $4268 = 0.0, $4269 = 0, $427 = 0, $4270 = 0.0, $4271 = 0.0, $4272 = 0.0, $4273 = 0.0;
 var $4274 = 0.0, $4275 = 0, $4276 = 0, $4277 = 0.0, $4278 = 0.0, $4279 = 0.0, $428 = 0.0, $4280 = 0, $4281 = 0, $4282 = 0.0, $4283 = 0.0, $4284 = 0.0, $4285 = 0.0, $4286 = 0, $4287 = 0, $4288 = 0.0, $4289 = 0.0, $429 = 0.0, $4290 = 0.0, $4291 = 0;
 var $4292 = 0.0, $4293 = 0.0, $4294 = 0.0, $4295 = 0, $4296 = 0.0, $4297 = 0.0, $4298 = 0.0, $4299 = 0.0, $43 = 0, $430 = 0.0, $4300 = 0, $4301 = 0, $4302 = 0.0, $4303 = 0.0, $4304 = 0.0, $4305 = 0, $4306 = 0, $4307 = 0.0, $4308 = 0.0, $4309 = 0.0;
 var $431 = 0, $4310 = 0.0, $4311 = 0, $4312 = 0, $4313 = 0.0, $4314 = 0.0, $4315 = 0.0, $4316 = 0.0, $4317 = 0, $4318 = 0.0, $4319 = 0.0, $432 = 0.0, $4320 = 0.0, $4321 = 0, $4322 = 0.0, $4323 = 0.0, $4324 = 0.0, $4325 = 0.0, $4326 = 0, $4327 = 0;
 var $4328 = 0.0, $4329 = 0.0, $433 = 0.0, $4330 = 0.0, $4331 = 0.0, $4332 = 0, $4333 = 0.0, $4334 = 0.0, $4335 = 0.0, $4336 = 0, $4337 = 0.0, $4338 = 0.0, $4339 = 0.0, $434 = 0.0, $4340 = 0.0, $4341 = 0, $4342 = 0, $4343 = 0.0, $4344 = 0.0, $4345 = 0.0;
 var $4346 = 0, $4347 = 0, $4348 = 0.0, $4349 = 0.0, $435 = 0, $4350 = 0.0, $4351 = 0.0, $4352 = 0, $4353 = 0.0, $4354 = 0.0, $4355 = 0.0, $4356 = 0, $4357 = 0.0, $4358 = 0.0, $4359 = 0.0, $436 = 0.0, $4360 = 0.0, $4361 = 0, $4362 = 0, $4363 = 0.0;
 var $4364 = 0.0, $4365 = 0.0, $4366 = 0, $4367 = 0, $4368 = 0.0, $4369 = 0.0, $437 = 0.0, $4370 = 0.0, $4371 = 0, $4372 = 0.0, $4373 = 0.0, $4374 = 0.0, $4375 = 0, $4376 = 0.0, $4377 = 0.0, $4378 = 0.0, $4379 = 0.0, $438 = 0.0, $4380 = 0.0, $4381 = 0;
 var $4382 = 0, $4383 = 0.0, $4384 = 0.0, $4385 = 0.0, $4386 = 0, $4387 = 0.0, $4388 = 0.0, $4389 = 0.0, $439 = 0.0, $4390 = 0, $4391 = 0.0, $4392 = 0.0, $4393 = 0.0, $4394 = 0.0, $4395 = 0.0, $4396 = 0, $4397 = 0, $4398 = 0.0, $4399 = 0.0, $44 = 0.0;
 var $440 = 0, $4400 = 0.0, $4401 = 0, $4402 = 0, $4403 = 0.0, $4404 = 0.0, $4405 = 0.0, $4406 = 0.0, $4407 = 0, $4408 = 0, $4409 = 0.0, $441 = 0, $4410 = 0.0, $4411 = 0.0, $4412 = 0.0, $4413 = 0, $4414 = 0, $4415 = 0.0, $4416 = 0.0, $4417 = 0.0;
 var $4418 = 0.0, $4419 = 0, $442 = 0.0, $4420 = 0.0, $4421 = 0.0, $4422 = 0.0, $4423 = 0, $4424 = 0.0, $4425 = 0.0, $4426 = 0.0, $4427 = 0.0, $4428 = 0, $4429 = 0, $443 = 0.0, $4430 = 0.0, $4431 = 0.0, $4432 = 0.0, $4433 = 0, $4434 = 0.0, $4435 = 0.0;
 var $4436 = 0.0, $4437 = 0, $4438 = 0.0, $4439 = 0.0, $444 = 0.0, $4440 = 0.0, $4441 = 0.0, $4442 = 0, $4443 = 0, $4444 = 0.0, $4445 = 0.0, $4446 = 0.0, $4447 = 0, $4448 = 0, $4449 = 0.0, $445 = 0, $4450 = 0.0, $4451 = 0.0, $4452 = 0.0, $4453 = 0;
 var $4454 = 0, $4455 = 0.0, $4456 = 0.0, $4457 = 0.0, $4458 = 0.0, $4459 = 0, $446 = 0.0, $4460 = 0.0, $4461 = 0.0, $4462 = 0.0, $4463 = 0, $4464 = 0.0, $4465 = 0.0, $4466 = 0.0, $4467 = 0.0, $4468 = 0, $4469 = 0, $447 = 0.0, $4470 = 0.0, $4471 = 0.0;
 var $4472 = 0.0, $4473 = 0, $4474 = 0, $4475 = 0.0, $4476 = 0.0, $4477 = 0.0, $4478 = 0, $4479 = 0.0, $448 = 0.0, $4480 = 0.0, $4481 = 0.0, $4482 = 0, $4483 = 0.0, $4484 = 0.0, $4485 = 0.0, $4486 = 0.0, $4487 = 0, $4488 = 0, $4489 = 0.0, $449 = 0;
 var $4490 = 0.0, $4491 = 0.0, $4492 = 0.0, $4493 = 0, $4494 = 0, $4495 = 0.0, $4496 = 0.0, $4497 = 0.0, $4498 = 0.0, $4499 = 0, $45 = 0.0, $450 = 0.0, $4500 = 0.0, $4501 = 0.0, $4502 = 0.0, $4503 = 0, $4504 = 0.0, $4505 = 0.0, $4506 = 0.0, $4507 = 0.0;
 var $4508 = 0, $4509 = 0, $451 = 0.0, $4510 = 0.0, $4511 = 0.0, $4512 = 0.0, $4513 = 0.0, $4514 = 0, $4515 = 0.0, $4516 = 0.0, $4517 = 0.0, $4518 = 0, $4519 = 0.0, $452 = 0.0, $4520 = 0.0, $4521 = 0.0, $4522 = 0.0, $4523 = 0.0, $4524 = 0, $4525 = 0;
 var $4526 = 0.0, $4527 = 0.0, $4528 = 0.0, $4529 = 0, $453 = 0.0, $4530 = 0.0, $4531 = 0.0, $4532 = 0.0, $4533 = 0, $4534 = 0.0, $4535 = 0.0, $4536 = 0.0, $4537 = 0.0, $4538 = 0.0, $4539 = 0, $454 = 0, $4540 = 0, $4541 = 0.0, $4542 = 0.0, $4543 = 0.0;
 var $4544 = 0, $4545 = 0, $4546 = 0.0, $4547 = 0.0, $4548 = 0.0, $4549 = 0.0, $455 = 0, $4550 = 0, $4551 = 0, $4552 = 0.0, $4553 = 0.0, $4554 = 0.0, $4555 = 0, $4556 = 0.0, $4557 = 0.0, $4558 = 0.0, $4559 = 0, $456 = 0.0, $4560 = 0.0, $4561 = 0.0;
 var $4562 = 0.0, $4563 = 0.0, $4564 = 0, $4565 = 0, $4566 = 0.0, $4567 = 0.0, $4568 = 0.0, $4569 = 0, $457 = 0.0, $4570 = 0, $4571 = 0.0, $4572 = 0.0, $4573 = 0.0, $4574 = 0, $4575 = 0.0, $4576 = 0.0, $4577 = 0.0, $4578 = 0, $4579 = 0.0, $458 = 0.0;
 var $4580 = 0.0, $4581 = 0.0, $4582 = 0.0, $4583 = 0, $4584 = 0, $4585 = 0.0, $4586 = 0.0, $4587 = 0.0, $4588 = 0.0, $4589 = 0.0, $459 = 0, $4590 = 0, $4591 = 0, $4592 = 0.0, $4593 = 0.0, $4594 = 0.0, $4595 = 0, $4596 = 0.0, $4597 = 0.0, $4598 = 0.0;
 var $4599 = 0, $46 = 0.0, $460 = 0, $4600 = 0.0, $4601 = 0.0, $4602 = 0.0, $4603 = 0.0, $4604 = 0.0, $4605 = 0, $4606 = 0, $4607 = 0.0, $4608 = 0.0, $4609 = 0.0, $461 = 0.0, $4610 = 0, $4611 = 0, $4612 = 0.0, $4613 = 0.0, $4614 = 0.0, $4615 = 0.0;
 var $4616 = 0, $4617 = 0, $4618 = 0.0, $4619 = 0.0, $462 = 0.0, $4620 = 0.0, $4621 = 0.0, $4622 = 0, $4623 = 0, $4624 = 0.0, $4625 = 0.0, $4626 = 0.0, $4627 = 0.0, $4628 = 0, $4629 = 0.0, $463 = 0.0, $4630 = 0.0, $4631 = 0.0, $4632 = 0, $4633 = 0.0;
 var $4634 = 0.0, $4635 = 0.0, $4636 = 0.0, $4637 = 0, $4638 = 0, $4639 = 0.0, $464 = 0.0, $4640 = 0.0, $4641 = 0.0, $4642 = 0, $4643 = 0, $4644 = 0.0, $4645 = 0.0, $4646 = 0.0, $4647 = 0.0, $4648 = 0, $4649 = 0.0, $465 = 0, $4650 = 0.0, $4651 = 0.0;
 var $4652 = 0, $4653 = 0.0, $4654 = 0.0, $4655 = 0.0, $4656 = 0.0, $4657 = 0, $4658 = 0, $4659 = 0.0, $466 = 0, $4660 = 0.0, $4661 = 0.0, $4662 = 0, $4663 = 0.0, $4664 = 0.0, $4665 = 0.0, $4666 = 0, $4667 = 0.0, $4668 = 0.0, $4669 = 0.0, $467 = 0.0;
 var $4670 = 0.0, $4671 = 0, $4672 = 0, $4673 = 0.0, $4674 = 0.0, $4675 = 0.0, $4676 = 0, $4677 = 0, $4678 = 0.0, $4679 = 0.0, $468 = 0.0, $4680 = 0.0, $4681 = 0.0, $4682 = 0.0, $4683 = 0, $4684 = 0, $4685 = 0.0, $4686 = 0.0, $4687 = 0.0, $4688 = 0;
 var $4689 = 0.0, $469 = 0.0, $4690 = 0.0, $4691 = 0.0, $4692 = 0, $4693 = 0.0, $4694 = 0.0, $4695 = 0.0, $4696 = 0.0, $4697 = 0.0, $4698 = 0, $4699 = 0, $47 = 0, $470 = 0, $4700 = 0.0, $4701 = 0.0, $4702 = 0.0, $4703 = 0, $4704 = 0, $4705 = 0.0;
 var $4706 = 0.0, $4707 = 0.0, $4708 = 0.0, $4709 = 0, $471 = 0.0, $4710 = 0, $4711 = 0.0, $4712 = 0.0, $4713 = 0.0, $4714 = 0, $4715 = 0.0, $4716 = 0.0, $4717 = 0.0, $4718 = 0, $4719 = 0.0, $472 = 0.0, $4720 = 0.0, $4721 = 0.0, $4722 = 0.0, $4723 = 0.0;
 var $4724 = 0, $4725 = 0, $4726 = 0.0, $4727 = 0.0, $4728 = 0.0, $4729 = 0, $473 = 0.0, $4730 = 0, $4731 = 0.0, $4732 = 0.0, $4733 = 0.0, $4734 = 0, $4735 = 0.0, $4736 = 0.0, $4737 = 0.0, $4738 = 0, $4739 = 0.0, $474 = 0, $4740 = 0.0, $4741 = 0.0;
 var $4742 = 0.0, $4743 = 0.0, $4744 = 0, $4745 = 0, $4746 = 0.0, $4747 = 0.0, $4748 = 0.0, $4749 = 0.0, $475 = 0.0, $4750 = 0, $4751 = 0, $4752 = 0.0, $4753 = 0.0, $4754 = 0.0, $4755 = 0.0, $4756 = 0, $4757 = 0, $4758 = 0.0, $4759 = 0.0, $476 = 0.0;
 var $4760 = 0.0, $4761 = 0.0, $4762 = 0, $4763 = 0, $4764 = 0.0, $4765 = 0.0, $4766 = 0.0, $4767 = 0, $4768 = 0, $4769 = 0.0, $477 = 0.0, $4770 = 0.0, $4771 = 0.0, $4772 = 0, $4773 = 0, $4774 = 0.0, $4775 = 0.0, $4776 = 0.0, $4777 = 0.0, $4778 = 0;
 var $4779 = 0, $478 = 0.0, $4780 = 0.0, $4781 = 0.0, $4782 = 0.0, $4783 = 0, $4784 = 0, $4785 = 0.0, $4786 = 0.0, $4787 = 0.0, $4788 = 0, $4789 = 0, $479 = 0, $4790 = 0.0, $4791 = 0.0, $4792 = 0.0, $4793 = 0.0, $4794 = 0, $4795 = 0.0, $4796 = 0.0;
 var $4797 = 0.0, $4798 = 0, $4799 = 0.0, $48 = 0.0, $480 = 0, $4800 = 0.0, $4801 = 0.0, $4802 = 0.0, $4803 = 0, $4804 = 0, $4805 = 0.0, $4806 = 0.0, $4807 = 0.0, $4808 = 0, $4809 = 0, $481 = 0.0, $4810 = 0.0, $4811 = 0.0, $4812 = 0.0, $4813 = 0.0;
 var $4814 = 0, $4815 = 0, $4816 = 0.0, $4817 = 0.0, $4818 = 0.0, $4819 = 0, $482 = 0.0, $4820 = 0, $4821 = 0.0, $4822 = 0.0, $4823 = 0.0, $4824 = 0.0, $4825 = 0, $4826 = 0, $4827 = 0.0, $4828 = 0.0, $4829 = 0.0, $483 = 0.0, $4830 = 0, $4831 = 0;
 var $4832 = 0.0, $4833 = 0.0, $4834 = 0.0, $4835 = 0, $4836 = 0, $4837 = 0.0, $4838 = 0.0, $4839 = 0.0, $484 = 0, $4840 = 0, $4841 = 0, $4842 = 0.0, $4843 = 0.0, $4844 = 0.0, $4845 = 0, $4846 = 0, $4847 = 0.0, $4848 = 0.0, $4849 = 0.0, $485 = 0;
 var $4850 = 0.0, $4851 = 0.0, $4852 = 0, $4853 = 0, $4854 = 0.0, $4855 = 0.0, $4856 = 0.0, $4857 = 0, $4858 = 0, $4859 = 0.0, $486 = 0.0, $4860 = 0.0, $4861 = 0.0, $4862 = 0, $4863 = 0, $4864 = 0.0, $4865 = 0.0, $4866 = 0.0, $4867 = 0, $4868 = 0;
 var $4869 = 0.0, $487 = 0.0, $4870 = 0.0, $4871 = 0.0, $4872 = 0.0, $4873 = 0, $4874 = 0, $4875 = 0.0, $4876 = 0.0, $4877 = 0.0, $4878 = 0.0, $4879 = 0, $488 = 0.0, $4880 = 0.0, $4881 = 0.0, $4882 = 0.0, $4883 = 0, $4884 = 0.0, $4885 = 0.0, $4886 = 0.0;
 var $4887 = 0.0, $4888 = 0, $4889 = 0, $489 = 0.0, $4890 = 0.0, $4891 = 0.0, $4892 = 0.0, $4893 = 0, $4894 = 0, $4895 = 0.0, $4896 = 0.0, $4897 = 0.0, $4898 = 0.0, $4899 = 0, $49 = 0.0, $490 = 0.0, $4900 = 0.0, $4901 = 0.0, $4902 = 0.0, $4903 = 0;
 var $4904 = 0.0, $4905 = 0.0, $4906 = 0.0, $4907 = 0.0, $4908 = 0, $4909 = 0, $491 = 0, $4910 = 0.0, $4911 = 0.0, $4912 = 0.0, $4913 = 0, $4914 = 0, $4915 = 0.0, $4916 = 0.0, $4917 = 0.0, $4918 = 0, $4919 = 0.0, $492 = 0, $4920 = 0.0, $4921 = 0.0;
 var $4922 = 0, $4923 = 0.0, $4924 = 0.0, $4925 = 0.0, $4926 = 0.0, $4927 = 0, $4928 = 0, $4929 = 0.0, $493 = 0.0, $4930 = 0.0, $4931 = 0.0, $4932 = 0.0, $4933 = 0, $4934 = 0, $4935 = 0.0, $4936 = 0.0, $4937 = 0.0, $4938 = 0.0, $4939 = 0, $494 = 0.0;
 var $4940 = 0, $4941 = 0.0, $4942 = 0.0, $4943 = 0.0, $4944 = 0, $4945 = 0, $4946 = 0.0, $4947 = 0.0, $4948 = 0.0, $4949 = 0, $495 = 0.0, $4950 = 0, $4951 = 0.0, $4952 = 0.0, $4953 = 0.0, $4954 = 0, $4955 = 0, $4956 = 0.0, $4957 = 0.0, $4958 = 0.0;
 var $4959 = 0, $496 = 0.0, $4960 = 0, $4961 = 0.0, $4962 = 0.0, $4963 = 0.0, $4964 = 0.0, $4965 = 0, $4966 = 0, $4967 = 0.0, $4968 = 0.0, $4969 = 0.0, $497 = 0, $4970 = 0.0, $4971 = 0, $4972 = 0, $4973 = 0.0, $4974 = 0.0, $4975 = 0.0, $4976 = 0;
 var $4977 = 0, $4978 = 0.0, $4979 = 0.0, $498 = 0, $4980 = 0.0, $4981 = 0.0, $4982 = 0, $4983 = 0.0, $4984 = 0.0, $4985 = 0.0, $4986 = 0, $4987 = 0.0, $4988 = 0.0, $4989 = 0.0, $499 = 0.0, $4990 = 0.0, $4991 = 0, $4992 = 0, $4993 = 0.0, $4994 = 0.0;
 var $4995 = 0.0, $4996 = 0.0, $4997 = 0, $4998 = 0.0, $4999 = 0.0, $5 = 0.0, $50 = 0.0, $500 = 0.0, $5000 = 0.0, $5001 = 0, $5002 = 0.0, $5003 = 0.0, $5004 = 0.0, $5005 = 0.0, $5006 = 0, $5007 = 0, $5008 = 0.0, $5009 = 0.0, $501 = 0.0, $5010 = 0.0;
 var $5011 = 0, $5012 = 0, $5013 = 0.0, $5014 = 0.0, $5015 = 0.0, $5016 = 0.0, $5017 = 0, $5018 = 0, $5019 = 0, $502 = 0, $5020 = 0.0, $5021 = 0.0, $5022 = 0.0, $5023 = 0, $5024 = 0.0, $5025 = 0.0, $5026 = 0.0, $5027 = 0.0, $5028 = 0, $5029 = 0;
 var $503 = 0.0, $5030 = 0.0, $5031 = 0.0, $5032 = 0.0, $5033 = 0, $5034 = 0, $5035 = 0.0, $5036 = 0.0, $5037 = 0.0, $5038 = 0, $5039 = 0.0, $504 = 0.0, $5040 = 0.0, $5041 = 0.0, $5042 = 0, $5043 = 0.0, $5044 = 0.0, $5045 = 0.0, $5046 = 0.0, $5047 = 0;
 var $5048 = 0, $5049 = 0.0, $505 = 0.0, $5050 = 0.0, $5051 = 0.0, $5052 = 0.0, $5053 = 0, $5054 = 0, $5055 = 0.0, $5056 = 0.0, $5057 = 0.0, $5058 = 0, $5059 = 0.0, $506 = 0, $5060 = 0.0, $5061 = 0.0, $5062 = 0, $5063 = 0.0, $5064 = 0.0, $5065 = 0.0;
 var $5066 = 0.0, $5067 = 0, $5068 = 0, $5069 = 0.0, $507 = 0.0, $5070 = 0.0, $5071 = 0.0, $5072 = 0, $5073 = 0, $5074 = 0.0, $5075 = 0.0, $5076 = 0.0, $5077 = 0.0, $5078 = 0, $5079 = 0, $508 = 0.0, $5080 = 0.0, $5081 = 0.0, $5082 = 0.0, $5083 = 0;
 var $5084 = 0.0, $5085 = 0.0, $5086 = 0.0, $5087 = 0, $5088 = 0.0, $5089 = 0.0, $509 = 0.0, $5090 = 0.0, $5091 = 0.0, $5092 = 0, $5093 = 0, $5094 = 0.0, $5095 = 0.0, $5096 = 0.0, $5097 = 0, $5098 = 0, $5099 = 0.0, $51 = 0.0, $510 = 0.0, $5100 = 0.0;
 var $5101 = 0.0, $5102 = 0, $5103 = 0.0, $5104 = 0.0, $5105 = 0.0, $5106 = 0, $5107 = 0.0, $5108 = 0.0, $5109 = 0.0, $511 = 0.0, $5110 = 0.0, $5111 = 0, $5112 = 0, $5113 = 0.0, $5114 = 0.0, $5115 = 0.0, $5116 = 0.0, $5117 = 0, $5118 = 0, $5119 = 0.0;
 var $512 = 0, $5120 = 0.0, $5121 = 0.0, $5122 = 0.0, $5123 = 0.0, $5124 = 0, $5125 = 0, $5126 = 0.0, $5127 = 0.0, $5128 = 0.0, $5129 = 0, $513 = 0, $5130 = 0.0, $5131 = 0.0, $5132 = 0.0, $5133 = 0, $5134 = 0.0, $5135 = 0.0, $5136 = 0.0, $5137 = 0.0;
 var $5138 = 0, $5139 = 0, $514 = 0.0, $5140 = 0.0, $5141 = 0.0, $5142 = 0.0, $5143 = 0, $5144 = 0, $5145 = 0.0, $5146 = 0.0, $5147 = 0.0, $5148 = 0, $5149 = 0.0, $515 = 0.0, $5150 = 0.0, $5151 = 0.0, $5152 = 0, $5153 = 0.0, $5154 = 0.0, $5155 = 0.0;
 var $5156 = 0.0, $5157 = 0, $5158 = 0, $5159 = 0.0, $516 = 0.0, $5160 = 0.0, $5161 = 0.0, $5162 = 0, $5163 = 0.0, $5164 = 0.0, $5165 = 0.0, $5166 = 0, $5167 = 0.0, $5168 = 0.0, $5169 = 0.0, $517 = 0, $5170 = 0.0, $5171 = 0, $5172 = 0, $5173 = 0.0;
 var $5174 = 0.0, $5175 = 0.0, $5176 = 0, $5177 = 0, $5178 = 0.0, $5179 = 0.0, $518 = 0, $5180 = 0.0, $5181 = 0.0, $5182 = 0, $5183 = 0, $5184 = 0.0, $5185 = 0.0, $5186 = 0.0, $5187 = 0.0, $5188 = 0.0, $5189 = 0, $519 = 0.0, $5190 = 0, $5191 = 0.0;
 var $5192 = 0.0, $5193 = 0.0, $5194 = 0.0, $5195 = 0, $5196 = 0, $5197 = 0.0, $5198 = 0.0, $5199 = 0.0, $52 = 0.0, $520 = 0.0, $5200 = 0, $5201 = 0.0, $5202 = 0.0, $5203 = 0.0, $5204 = 0, $5205 = 0.0, $5206 = 0.0, $5207 = 0.0, $5208 = 0.0, $5209 = 0.0;
 var $521 = 0.0, $5210 = 0, $5211 = 0, $5212 = 0.0, $5213 = 0.0, $5214 = 0.0, $5215 = 0, $5216 = 0, $5217 = 0.0, $5218 = 0.0, $5219 = 0.0, $522 = 0, $5220 = 0, $5221 = 0.0, $5222 = 0.0, $5223 = 0.0, $5224 = 0, $5225 = 0.0, $5226 = 0.0, $5227 = 0.0;
 var $5228 = 0.0, $5229 = 0.0, $523 = 0.0, $5230 = 0, $5231 = 0, $5232 = 0.0, $5233 = 0.0, $5234 = 0.0, $5235 = 0, $5236 = 0.0, $5237 = 0.0, $5238 = 0.0, $5239 = 0, $524 = 0.0, $5240 = 0.0, $5241 = 0.0, $5242 = 0.0, $5243 = 0.0, $5244 = 0.0, $5245 = 0;
 var $5246 = 0, $5247 = 0.0, $5248 = 0.0, $5249 = 0.0, $525 = 0.0, $5250 = 0, $5251 = 0, $5252 = 0.0, $5253 = 0.0, $5254 = 0.0, $5255 = 0.0, $5256 = 0.0, $5257 = 0, $5258 = 0, $5259 = 0.0, $526 = 0, $5260 = 0.0, $5261 = 0.0, $5262 = 0.0, $5263 = 0.0;
 var $5264 = 0, $5265 = 0, $5266 = 0.0, $5267 = 0.0, $5268 = 0.0, $5269 = 0, $527 = 0.0, $5270 = 0.0, $5271 = 0.0, $5272 = 0.0, $5273 = 0, $5274 = 0.0, $5275 = 0.0, $5276 = 0.0, $5277 = 0.0, $5278 = 0.0, $5279 = 0, $528 = 0.0, $5280 = 0, $5281 = 0.0;
 var $5282 = 0.0, $5283 = 0.0, $5284 = 0, $5285 = 0, $5286 = 0.0, $5287 = 0.0, $5288 = 0.0, $5289 = 0, $529 = 0.0, $5290 = 0.0, $5291 = 0.0, $5292 = 0.0, $5293 = 0, $5294 = 0.0, $5295 = 0.0, $5296 = 0.0, $5297 = 0.0, $5298 = 0.0, $5299 = 0, $53 = 0.0;
 var $530 = 0.0, $5300 = 0, $5301 = 0.0, $5302 = 0.0, $5303 = 0.0, $5304 = 0.0, $5305 = 0.0, $5306 = 0, $5307 = 0, $5308 = 0.0, $5309 = 0.0, $531 = 0, $5310 = 0.0, $5311 = 0.0, $5312 = 0, $5313 = 0, $5314 = 0.0, $5315 = 0.0, $5316 = 0.0, $5317 = 0.0;
 var $5318 = 0, $5319 = 0.0, $532 = 0, $5320 = 0.0, $5321 = 0.0, $5322 = 0, $5323 = 0.0, $5324 = 0.0, $5325 = 0.0, $5326 = 0.0, $5327 = 0, $5328 = 0, $5329 = 0.0, $533 = 0.0, $5330 = 0.0, $5331 = 0.0, $5332 = 0, $5333 = 0, $5334 = 0.0, $5335 = 0.0;
 var $5336 = 0.0, $5337 = 0, $5338 = 0.0, $5339 = 0.0, $534 = 0.0, $5340 = 0.0, $5341 = 0, $5342 = 0.0, $5343 = 0.0, $5344 = 0.0, $5345 = 0.0, $5346 = 0, $5347 = 0, $5348 = 0.0, $5349 = 0.0, $535 = 0.0, $5350 = 0.0, $5351 = 0, $5352 = 0.0, $5353 = 0.0;
 var $5354 = 0.0, $5355 = 0, $5356 = 0.0, $5357 = 0.0, $5358 = 0.0, $5359 = 0.0, $536 = 0, $5360 = 0, $5361 = 0, $5362 = 0.0, $5363 = 0.0, $5364 = 0.0, $5365 = 0, $5366 = 0, $5367 = 0.0, $5368 = 0.0, $5369 = 0.0, $537 = 0.0, $5370 = 0.0, $5371 = 0;
 var $5372 = 0, $5373 = 0.0, $5374 = 0.0, $5375 = 0.0, $5376 = 0.0, $5377 = 0.0, $5378 = 0, $5379 = 0, $538 = 0.0, $5380 = 0.0, $5381 = 0.0, $5382 = 0.0, $5383 = 0, $5384 = 0.0, $5385 = 0.0, $5386 = 0.0, $5387 = 0, $5388 = 0.0, $5389 = 0.0, $539 = 0.0;
 var $5390 = 0.0, $5391 = 0.0, $5392 = 0, $5393 = 0, $5394 = 0.0, $5395 = 0.0, $5396 = 0.0, $5397 = 0, $5398 = 0.0, $5399 = 0.0, $54 = 0.0, $540 = 0, $5400 = 0.0, $5401 = 0, $5402 = 0.0, $5403 = 0.0, $5404 = 0.0, $5405 = 0.0, $5406 = 0, $5407 = 0;
 var $5408 = 0.0, $5409 = 0.0, $541 = 0.0, $5410 = 0.0, $5411 = 0, $5412 = 0, $5413 = 0.0, $5414 = 0.0, $5415 = 0.0, $5416 = 0.0, $5417 = 0, $5418 = 0, $5419 = 0.0, $542 = 0.0, $5420 = 0.0, $5421 = 0.0, $5422 = 0, $5423 = 0.0, $5424 = 0.0, $5425 = 0.0;
 var $5426 = 0, $5427 = 0.0, $5428 = 0.0, $5429 = 0.0, $543 = 0.0, $5430 = 0.0, $5431 = 0, $5432 = 0, $5433 = 0.0, $5434 = 0.0, $5435 = 0.0, $5436 = 0, $5437 = 0, $5438 = 0.0, $5439 = 0.0, $544 = 0.0, $5440 = 0.0, $5441 = 0.0, $5442 = 0, $5443 = 0;
 var $5444 = 0.0, $5445 = 0.0, $5446 = 0.0, $5447 = 0, $5448 = 0.0, $5449 = 0.0, $545 = 0, $5450 = 0.0, $5451 = 0, $5452 = 0.0, $5453 = 0.0, $5454 = 0.0, $5455 = 0.0, $5456 = 0, $5457 = 0, $5458 = 0.0, $5459 = 0.0, $546 = 0, $5460 = 0.0, $5461 = 0;
 var $5462 = 0.0, $5463 = 0.0, $5464 = 0.0, $5465 = 0, $5466 = 0.0, $5467 = 0.0, $5468 = 0.0, $5469 = 0.0, $547 = 0.0, $5470 = 0, $5471 = 0, $5472 = 0.0, $5473 = 0.0, $5474 = 0.0, $5475 = 0, $5476 = 0, $5477 = 0.0, $5478 = 0.0, $5479 = 0.0, $548 = 0.0;
 var $5480 = 0.0, $5481 = 0, $5482 = 0, $5483 = 0.0, $5484 = 0.0, $5485 = 0.0, $5486 = 0.0, $5487 = 0.0, $5488 = 0, $5489 = 0, $549 = 0.0, $5490 = 0.0, $5491 = 0.0, $5492 = 0.0, $5493 = 0.0, $5494 = 0, $5495 = 0, $5496 = 0.0, $5497 = 0.0, $5498 = 0.0;
 var $5499 = 0.0, $55 = 0.0, $550 = 0, $5500 = 0, $5501 = 0.0, $5502 = 0.0, $5503 = 0.0, $5504 = 0, $5505 = 0.0, $5506 = 0.0, $5507 = 0.0, $5508 = 0.0, $5509 = 0.0, $551 = 0, $5510 = 0, $5511 = 0, $5512 = 0.0, $5513 = 0.0, $5514 = 0.0, $5515 = 0;
 var $5516 = 0, $5517 = 0.0, $5518 = 0.0, $5519 = 0.0, $552 = 0.0, $5520 = 0, $5521 = 0.0, $5522 = 0.0, $5523 = 0.0, $5524 = 0, $5525 = 0.0, $5526 = 0.0, $5527 = 0.0, $5528 = 0.0, $5529 = 0.0, $553 = 0.0, $5530 = 0, $5531 = 0, $5532 = 0.0, $5533 = 0.0;
 var $5534 = 0.0, $5535 = 0, $5536 = 0, $5537 = 0.0, $5538 = 0.0, $5539 = 0.0, $554 = 0.0, $5540 = 0, $5541 = 0.0, $5542 = 0.0, $5543 = 0.0, $5544 = 0, $5545 = 0.0, $5546 = 0.0, $5547 = 0.0, $5548 = 0.0, $5549 = 0.0, $555 = 0.0, $5550 = 0, $5551 = 0;
 var $5552 = 0.0, $5553 = 0.0, $5554 = 0.0, $5555 = 0.0, $5556 = 0.0, $5557 = 0, $5558 = 0, $5559 = 0.0, $556 = 0.0, $5560 = 0.0, $5561 = 0.0, $5562 = 0.0, $5563 = 0.0, $5564 = 0, $5565 = 0, $5566 = 0.0, $5567 = 0.0, $5568 = 0.0, $5569 = 0, $557 = 0;
 var $5570 = 0.0, $5571 = 0.0, $5572 = 0.0, $5573 = 0, $5574 = 0.0, $5575 = 0.0, $5576 = 0.0, $5577 = 0.0, $5578 = 0.0, $5579 = 0, $558 = 0, $5580 = 0, $5581 = 0.0, $5582 = 0.0, $5583 = 0.0, $5584 = 0, $5585 = 0, $5586 = 0.0, $5587 = 0.0, $5588 = 0.0;
 var $5589 = 0, $559 = 0.0, $5590 = 0.0, $5591 = 0.0, $5592 = 0.0, $5593 = 0, $5594 = 0.0, $5595 = 0.0, $5596 = 0.0, $5597 = 0.0, $5598 = 0.0, $5599 = 0, $56 = 0.0, $560 = 0.0, $5600 = 0, $5601 = 0.0, $5602 = 0.0, $5603 = 0.0, $5604 = 0.0, $5605 = 0.0;
 var $5606 = 0, $5607 = 0, $5608 = 0.0, $5609 = 0.0, $561 = 0.0, $5610 = 0.0, $5611 = 0.0, $5612 = 0, $5613 = 0, $5614 = 0.0, $5615 = 0.0, $5616 = 0.0, $5617 = 0.0, $5618 = 0, $5619 = 0, $562 = 0.0, $5620 = 0, $5621 = 0.0, $5622 = 0.0, $5623 = 0.0;
 var $5624 = 0, $5625 = 0.0, $5626 = 0.0, $5627 = 0.0, $5628 = 0.0, $5629 = 0, $563 = 0, $5630 = 0, $5631 = 0.0, $5632 = 0.0, $5633 = 0.0, $5634 = 0, $5635 = 0, $5636 = 0.0, $5637 = 0.0, $5638 = 0.0, $5639 = 0, $564 = 0, $5640 = 0.0, $5641 = 0.0;
 var $5642 = 0.0, $5643 = 0, $5644 = 0.0, $5645 = 0.0, $5646 = 0.0, $5647 = 0.0, $5648 = 0, $5649 = 0, $565 = 0.0, $5650 = 0.0, $5651 = 0.0, $5652 = 0.0, $5653 = 0.0, $5654 = 0, $5655 = 0, $5656 = 0.0, $5657 = 0.0, $5658 = 0.0, $5659 = 0, $566 = 0.0;
 var $5660 = 0.0, $5661 = 0.0, $5662 = 0.0, $5663 = 0, $5664 = 0.0, $5665 = 0.0, $5666 = 0.0, $5667 = 0.0, $5668 = 0, $5669 = 0, $567 = 0.0, $5670 = 0.0, $5671 = 0.0, $5672 = 0.0, $5673 = 0, $5674 = 0, $5675 = 0.0, $5676 = 0.0, $5677 = 0.0, $5678 = 0.0;
 var $5679 = 0, $568 = 0.0, $5680 = 0, $5681 = 0.0, $5682 = 0.0, $5683 = 0.0, $5684 = 0, $5685 = 0.0, $5686 = 0.0, $5687 = 0.0, $5688 = 0, $5689 = 0.0, $569 = 0, $5690 = 0.0, $5691 = 0.0, $5692 = 0.0, $5693 = 0, $5694 = 0, $5695 = 0.0, $5696 = 0.0;
 var $5697 = 0.0, $5698 = 0, $5699 = 0, $57 = 0.0, $570 = 0, $5700 = 0.0, $5701 = 0.0, $5702 = 0.0, $5703 = 0, $5704 = 0.0, $5705 = 0.0, $5706 = 0.0, $5707 = 0, $5708 = 0.0, $5709 = 0.0, $571 = 0.0, $5710 = 0.0, $5711 = 0.0, $5712 = 0, $5713 = 0;
 var $5714 = 0.0, $5715 = 0.0, $5716 = 0.0, $5717 = 0.0, $5718 = 0, $5719 = 0, $572 = 0.0, $5720 = 0.0, $5721 = 0.0, $5722 = 0.0, $5723 = 0.0, $5724 = 0.0, $5725 = 0, $5726 = 0, $5727 = 0.0, $5728 = 0.0, $5729 = 0.0, $573 = 0.0, $5730 = 0, $5731 = 0.0;
 var $5732 = 0.0, $5733 = 0.0, $5734 = 0, $5735 = 0.0, $5736 = 0.0, $5737 = 0.0, $5738 = 0.0, $5739 = 0, $574 = 0.0, $5740 = 0, $5741 = 0.0, $5742 = 0.0, $5743 = 0.0, $5744 = 0, $5745 = 0, $5746 = 0.0, $5747 = 0.0, $5748 = 0.0, $5749 = 0, $575 = 0;
 var $5750 = 0.0, $5751 = 0.0, $5752 = 0.0, $5753 = 0, $5754 = 0.0, $5755 = 0.0, $5756 = 0.0, $5757 = 0.0, $5758 = 0, $5759 = 0, $576 = 0.0, $5760 = 0.0, $5761 = 0.0, $5762 = 0.0, $5763 = 0, $5764 = 0.0, $5765 = 0.0, $5766 = 0.0, $5767 = 0, $5768 = 0.0;
 var $5769 = 0.0, $577 = 0.0, $5770 = 0.0, $5771 = 0.0, $5772 = 0, $5773 = 0, $5774 = 0.0, $5775 = 0.0, $5776 = 0.0, $5777 = 0, $5778 = 0, $5779 = 0.0, $578 = 0.0, $5780 = 0.0, $5781 = 0.0, $5782 = 0.0, $5783 = 0, $5784 = 0, $5785 = 0.0, $5786 = 0.0;
 var $5787 = 0.0, $5788 = 0.0, $5789 = 0.0, $579 = 0, $5790 = 0, $5791 = 0, $5792 = 0.0, $5793 = 0.0, $5794 = 0.0, $5795 = 0.0, $5796 = 0, $5797 = 0, $5798 = 0.0, $5799 = 0.0, $58 = 0.0, $580 = 0.0, $5800 = 0.0, $5801 = 0, $5802 = 0.0, $5803 = 0.0;
 var $5804 = 0.0, $5805 = 0, $5806 = 0.0, $5807 = 0.0, $5808 = 0.0, $5809 = 0.0, $581 = 0.0, $5810 = 0, $5811 = 0, $5812 = 0.0, $5813 = 0.0, $5814 = 0.0, $5815 = 0, $5816 = 0, $5817 = 0.0, $5818 = 0.0, $5819 = 0.0, $582 = 0.0, $5820 = 0, $5821 = 0.0;
 var $5822 = 0.0, $5823 = 0.0, $5824 = 0, $5825 = 0.0, $5826 = 0.0, $5827 = 0.0, $5828 = 0.0, $5829 = 0, $583 = 0.0, $5830 = 0, $5831 = 0.0, $5832 = 0.0, $5833 = 0.0, $5834 = 0, $5835 = 0.0, $5836 = 0.0, $5837 = 0.0, $5838 = 0, $5839 = 0.0, $584 = 0.0;
 var $5840 = 0.0, $5841 = 0.0, $5842 = 0.0, $5843 = 0, $5844 = 0, $5845 = 0.0, $5846 = 0.0, $5847 = 0.0, $5848 = 0, $5849 = 0, $585 = 0, $5850 = 0.0, $5851 = 0.0, $5852 = 0.0, $5853 = 0.0, $5854 = 0, $5855 = 0, $5856 = 0.0, $5857 = 0.0, $5858 = 0.0;
 var $5859 = 0.0, $586 = 0, $5860 = 0.0, $5861 = 0, $5862 = 0, $5863 = 0.0, $5864 = 0.0, $5865 = 0.0, $5866 = 0, $5867 = 0.0, $5868 = 0.0, $5869 = 0.0, $587 = 0.0, $5870 = 0, $5871 = 0.0, $5872 = 0.0, $5873 = 0.0, $5874 = 0.0, $5875 = 0, $5876 = 0;
 var $5877 = 0.0, $5878 = 0.0, $5879 = 0.0, $588 = 0.0, $5880 = 0, $5881 = 0.0, $5882 = 0.0, $5883 = 0.0, $5884 = 0, $5885 = 0.0, $5886 = 0.0, $5887 = 0.0, $5888 = 0.0, $5889 = 0, $589 = 0.0, $5890 = 0, $5891 = 0.0, $5892 = 0.0, $5893 = 0.0, $5894 = 0;
 var $5895 = 0, $5896 = 0.0, $5897 = 0.0, $5898 = 0.0, $5899 = 0.0, $59 = 0.0, $590 = 0, $5900 = 0, $5901 = 0, $5902 = 0.0, $5903 = 0.0, $5904 = 0.0, $5905 = 0, $5906 = 0.0, $5907 = 0.0, $5908 = 0.0, $5909 = 0, $591 = 0, $5910 = 0.0, $5911 = 0.0;
 var $5912 = 0.0, $5913 = 0.0, $5914 = 0, $5915 = 0, $5916 = 0.0, $5917 = 0.0, $5918 = 0.0, $5919 = 0, $592 = 0.0, $5920 = 0, $5921 = 0.0, $5922 = 0.0, $5923 = 0.0, $5924 = 0.0, $5925 = 0, $5926 = 0, $5927 = 0.0, $5928 = 0.0, $5929 = 0.0, $593 = 0.0;
 var $5930 = 0, $5931 = 0.0, $5932 = 0.0, $5933 = 0.0, $5934 = 0, $5935 = 0.0, $5936 = 0.0, $5937 = 0.0, $5938 = 0.0, $5939 = 0, $594 = 0.0, $5940 = 0, $5941 = 0.0, $5942 = 0.0, $5943 = 0.0, $5944 = 0, $5945 = 0.0, $5946 = 0.0, $5947 = 0.0, $5948 = 0;
 var $5949 = 0.0, $595 = 0, $5950 = 0.0, $5951 = 0.0, $5952 = 0.0, $5953 = 0, $5954 = 0, $5955 = 0.0, $5956 = 0.0, $5957 = 0.0, $5958 = 0, $5959 = 0, $596 = 0.0, $5960 = 0.0, $5961 = 0.0, $5962 = 0.0, $5963 = 0.0, $5964 = 0, $5965 = 0, $5966 = 0.0;
 var $5967 = 0.0, $5968 = 0.0, $5969 = 0.0, $597 = 0.0, $5970 = 0.0, $5971 = 0, $5972 = 0, $5973 = 0.0, $5974 = 0.0, $5975 = 0.0, $5976 = 0.0, $5977 = 0, $5978 = 0, $5979 = 0.0, $598 = 0.0, $5980 = 0.0, $5981 = 0.0, $5982 = 0.0, $5983 = 0, $5984 = 0.0;
 var $5985 = 0.0, $5986 = 0.0, $5987 = 0, $5988 = 0.0, $5989 = 0.0, $599 = 0, $5990 = 0.0, $5991 = 0.0, $5992 = 0, $5993 = 0, $5994 = 0.0, $5995 = 0.0, $5996 = 0.0, $5997 = 0, $5998 = 0, $5999 = 0.0, $6 = 0.0, $60 = 0.0, $600 = 0.0, $6000 = 0.0;
 var $6001 = 0.0, $6002 = 0, $6003 = 0.0, $6004 = 0.0, $6005 = 0.0, $6006 = 0, $6007 = 0.0, $6008 = 0.0, $6009 = 0.0, $601 = 0.0, $6010 = 0.0, $6011 = 0.0, $6012 = 0, $6013 = 0, $6014 = 0.0, $6015 = 0.0, $6016 = 0.0, $6017 = 0, $6018 = 0.0, $6019 = 0.0;
 var $602 = 0.0, $6020 = 0.0, $6021 = 0, $6022 = 0.0, $6023 = 0.0, $6024 = 0.0, $6025 = 0.0, $6026 = 0.0, $6027 = 0, $6028 = 0, $6029 = 0.0, $603 = 0.0, $6030 = 0.0, $6031 = 0.0, $6032 = 0, $6033 = 0, $6034 = 0.0, $6035 = 0.0, $6036 = 0.0, $6037 = 0.0;
 var $6038 = 0, $6039 = 0, $604 = 0.0, $6040 = 0.0, $6041 = 0.0, $6042 = 0.0, $6043 = 0.0, $6044 = 0.0, $6045 = 0, $6046 = 0, $6047 = 0.0, $6048 = 0.0, $6049 = 0.0, $605 = 0, $6050 = 0, $6051 = 0.0, $6052 = 0.0, $6053 = 0.0, $6054 = 0, $6055 = 0.0;
 var $6056 = 0.0, $6057 = 0.0, $6058 = 0.0, $6059 = 0, $606 = 0, $6060 = 0, $6061 = 0.0, $6062 = 0.0, $6063 = 0.0, $6064 = 0, $6065 = 0, $6066 = 0.0, $6067 = 0.0, $6068 = 0.0, $6069 = 0, $607 = 0.0, $6070 = 0.0, $6071 = 0.0, $6072 = 0.0, $6073 = 0;
 var $6074 = 0.0, $6075 = 0.0, $6076 = 0.0, $6077 = 0.0, $6078 = 0, $6079 = 0, $608 = 0.0, $6080 = 0.0, $6081 = 0.0, $6082 = 0.0, $6083 = 0.0, $6084 = 0.0, $6085 = 0, $6086 = 0, $6087 = 0.0, $6088 = 0.0, $6089 = 0.0, $609 = 0.0, $6090 = 0.0, $6091 = 0;
 var $6092 = 0, $6093 = 0.0, $6094 = 0.0, $6095 = 0.0, $6096 = 0.0, $6097 = 0, $6098 = 0.0, $6099 = 0.0, $61 = 0.0, $610 = 0.0, $6100 = 0.0, $6101 = 0, $6102 = 0.0, $6103 = 0.0, $6104 = 0.0, $6105 = 0.0, $6106 = 0, $6107 = 0, $6108 = 0.0, $6109 = 0.0;
 var $611 = 0, $6110 = 0.0, $6111 = 0, $6112 = 0.0, $6113 = 0.0, $6114 = 0.0, $6115 = 0, $6116 = 0.0, $6117 = 0.0, $6118 = 0.0, $6119 = 0.0, $612 = 0, $6120 = 0, $6121 = 0, $6122 = 0.0, $6123 = 0.0, $6124 = 0.0, $6125 = 0, $6126 = 0, $6127 = 0.0;
 var $6128 = 0.0, $6129 = 0.0, $613 = 0.0, $6130 = 0.0, $6131 = 0.0, $6132 = 0, $6133 = 0, $6134 = 0.0, $6135 = 0.0, $6136 = 0.0, $6137 = 0, $6138 = 0.0, $6139 = 0.0, $614 = 0.0, $6140 = 0.0, $6141 = 0, $6142 = 0.0, $6143 = 0.0, $6144 = 0.0, $6145 = 0.0;
 var $6146 = 0, $6147 = 0, $6148 = 0.0, $6149 = 0.0, $615 = 0.0, $6150 = 0.0, $6151 = 0, $6152 = 0, $6153 = 0.0, $6154 = 0.0, $6155 = 0.0, $6156 = 0, $6157 = 0.0, $6158 = 0.0, $6159 = 0.0, $616 = 0, $6160 = 0, $6161 = 0.0, $6162 = 0.0, $6163 = 0.0;
 var $6164 = 0.0, $6165 = 0.0, $6166 = 0, $6167 = 0, $6168 = 0.0, $6169 = 0.0, $617 = 0.0, $6170 = 0.0, $6171 = 0, $6172 = 0, $6173 = 0.0, $6174 = 0.0, $6175 = 0.0, $6176 = 0, $6177 = 0.0, $6178 = 0.0, $6179 = 0.0, $618 = 0.0, $6180 = 0, $6181 = 0.0;
 var $6182 = 0.0, $6183 = 0.0, $6184 = 0.0, $6185 = 0.0, $6186 = 0, $6187 = 0, $6188 = 0.0, $6189 = 0.0, $619 = 0.0, $6190 = 0.0, $6191 = 0.0, $6192 = 0, $6193 = 0, $6194 = 0.0, $6195 = 0.0, $6196 = 0.0, $6197 = 0.0, $6198 = 0.0, $6199 = 0, $62 = 0.0;
 var $620 = 0, $6200 = 0, $6201 = 0.0, $6202 = 0.0, $6203 = 0.0, $6204 = 0.0, $6205 = 0, $6206 = 0, $6207 = 0.0, $6208 = 0.0, $6209 = 0.0, $621 = 0.0, $6210 = 0.0, $6211 = 0, $6212 = 0, $6213 = 0.0, $6214 = 0.0, $6215 = 0.0, $6216 = 0.0, $6217 = 0.0;
 var $6218 = 0.0, $6219 = 0.0, $622 = 0.0, $6220 = 0.0, $6221 = 0.0, $6222 = 0.0, $6223 = 0.0, $6224 = 0.0, $6225 = 0.0, $6226 = 0.0, $6227 = 0.0, $6228 = 0.0, $6229 = 0.0, $623 = 0.0, $6230 = 0.0, $6231 = 0.0, $6232 = 0.0, $6233 = 0.0, $6234 = 0.0, $6235 = 0.0;
 var $6236 = 0.0, $6237 = 0.0, $6238 = 0.0, $6239 = 0.0, $624 = 0.0, $6240 = 0.0, $6241 = 0.0, $6242 = 0.0, $6243 = 0.0, $6244 = 0.0, $6245 = 0.0, $6246 = 0.0, $6247 = 0.0, $6248 = 0.0, $6249 = 0.0, $625 = 0.0, $6250 = 0.0, $6251 = 0.0, $6252 = 0.0, $6253 = 0.0;
 var $6254 = 0, $6255 = 0, $6256 = 0, $6257 = 0.0, $6258 = 0.0, $6259 = 0.0, $626 = 0, $6260 = 0, $6261 = 0.0, $6262 = 0.0, $6263 = 0.0, $6264 = 0.0, $6265 = 0.0, $6266 = 0, $6267 = 0, $6268 = 0.0, $6269 = 0.0, $627 = 0, $6270 = 0.0, $6271 = 0;
 var $6272 = 0, $6273 = 0.0, $6274 = 0.0, $6275 = 0.0, $6276 = 0, $6277 = 0.0, $6278 = 0.0, $6279 = 0.0, $628 = 0.0, $6280 = 0, $6281 = 0.0, $6282 = 0.0, $6283 = 0.0, $6284 = 0.0, $6285 = 0.0, $6286 = 0, $6287 = 0, $6288 = 0.0, $6289 = 0.0, $629 = 0.0;
 var $6290 = 0.0, $6291 = 0.0, $6292 = 0, $6293 = 0, $6294 = 0.0, $6295 = 0.0, $6296 = 0.0, $6297 = 0.0, $6298 = 0, $6299 = 0.0, $63 = 0.0, $630 = 0.0, $6300 = 0.0, $6301 = 0.0, $6302 = 0, $6303 = 0.0, $6304 = 0.0, $6305 = 0.0, $6306 = 0.0, $6307 = 0.0;
 var $6308 = 0, $6309 = 0, $631 = 0, $6310 = 0.0, $6311 = 0.0, $6312 = 0.0, $6313 = 0, $6314 = 0, $6315 = 0.0, $6316 = 0.0, $6317 = 0.0, $6318 = 0, $6319 = 0.0, $632 = 0, $6320 = 0.0, $6321 = 0.0, $6322 = 0, $6323 = 0.0, $6324 = 0.0, $6325 = 0.0;
 var $6326 = 0.0, $6327 = 0, $6328 = 0, $6329 = 0.0, $633 = 0.0, $6330 = 0.0, $6331 = 0.0, $6332 = 0, $6333 = 0, $6334 = 0.0, $6335 = 0.0, $6336 = 0.0, $6337 = 0, $6338 = 0.0, $6339 = 0.0, $634 = 0.0, $6340 = 0.0, $6341 = 0, $6342 = 0.0, $6343 = 0.0;
 var $6344 = 0.0, $6345 = 0.0, $6346 = 0, $6347 = 0, $6348 = 0.0, $6349 = 0.0, $635 = 0.0, $6350 = 0.0, $6351 = 0.0, $6352 = 0.0, $6353 = 0, $6354 = 0, $6355 = 0.0, $6356 = 0.0, $6357 = 0.0, $6358 = 0.0, $6359 = 0.0, $636 = 0, $6360 = 0, $6361 = 0;
 var $6362 = 0.0, $6363 = 0.0, $6364 = 0.0, $6365 = 0, $6366 = 0.0, $6367 = 0.0, $6368 = 0.0, $6369 = 0, $637 = 0.0, $6370 = 0.0, $6371 = 0.0, $6372 = 0.0, $6373 = 0.0, $6374 = 0.0, $6375 = 0, $6376 = 0, $6377 = 0.0, $6378 = 0.0, $6379 = 0.0, $638 = 0.0;
 var $6380 = 0, $6381 = 0, $6382 = 0.0, $6383 = 0.0, $6384 = 0.0, $6385 = 0, $6386 = 0.0, $6387 = 0.0, $6388 = 0.0, $6389 = 0, $639 = 0.0, $6390 = 0.0, $6391 = 0.0, $6392 = 0.0, $6393 = 0.0, $6394 = 0.0, $6395 = 0, $6396 = 0, $6397 = 0.0, $6398 = 0.0;
 var $6399 = 0.0, $64 = 0.0, $640 = 0, $6400 = 0.0, $6401 = 0.0, $6402 = 0, $6403 = 0, $6404 = 0.0, $6405 = 0.0, $6406 = 0.0, $6407 = 0.0, $6408 = 0, $6409 = 0, $641 = 0.0, $6410 = 0.0, $6411 = 0.0, $6412 = 0.0, $6413 = 0.0, $6414 = 0, $6415 = 0.0;
 var $6416 = 0.0, $6417 = 0.0, $6418 = 0, $6419 = 0.0, $642 = 0.0, $6420 = 0.0, $6421 = 0.0, $6422 = 0.0, $6423 = 0, $6424 = 0, $6425 = 0.0, $6426 = 0.0, $6427 = 0.0, $6428 = 0.0, $6429 = 0, $643 = 0.0, $6430 = 0.0, $6431 = 0.0, $6432 = 0.0, $6433 = 0;
 var $6434 = 0.0, $6435 = 0.0, $6436 = 0.0, $6437 = 0.0, $6438 = 0, $6439 = 0, $644 = 0.0, $6440 = 0.0, $6441 = 0.0, $6442 = 0.0, $6443 = 0.0, $6444 = 0, $6445 = 0.0, $6446 = 0.0, $6447 = 0.0, $6448 = 0, $6449 = 0.0, $645 = 0.0, $6450 = 0.0, $6451 = 0.0;
 var $6452 = 0.0, $6453 = 0, $6454 = 0, $6455 = 0.0, $6456 = 0.0, $6457 = 0.0, $6458 = 0.0, $6459 = 0, $646 = 0, $6460 = 0.0, $6461 = 0.0, $6462 = 0.0, $6463 = 0, $6464 = 0.0, $6465 = 0.0, $6466 = 0.0, $6467 = 0.0, $6468 = 0.0, $6469 = 0, $647 = 0;
 var $6470 = 0, $6471 = 0.0, $6472 = 0.0, $6473 = 0.0, $6474 = 0, $6475 = 0, $6476 = 0.0, $6477 = 0.0, $6478 = 0.0, $6479 = 0, $648 = 0.0, $6480 = 0.0, $6481 = 0.0, $6482 = 0.0, $6483 = 0, $6484 = 0.0, $6485 = 0.0, $6486 = 0.0, $6487 = 0.0, $6488 = 0.0;
 var $6489 = 0, $649 = 0.0, $6490 = 0, $6491 = 0.0, $6492 = 0.0, $6493 = 0.0, $6494 = 0, $6495 = 0, $6496 = 0.0, $6497 = 0.0, $6498 = 0.0, $6499 = 0, $65 = 0.0, $650 = 0.0, $6500 = 0.0, $6501 = 0.0, $6502 = 0.0, $6503 = 0, $6504 = 0.0, $6505 = 0.0;
 var $6506 = 0.0, $6507 = 0.0, $6508 = 0.0, $6509 = 0, $651 = 0.0, $6510 = 0, $6511 = 0.0, $6512 = 0.0, $6513 = 0.0, $6514 = 0.0, $6515 = 0.0, $6516 = 0, $6517 = 0, $6518 = 0.0, $6519 = 0.0, $652 = 0.0, $6520 = 0.0, $6521 = 0.0, $6522 = 0, $6523 = 0;
 var $6524 = 0.0, $6525 = 0.0, $6526 = 0.0, $6527 = 0.0, $6528 = 0, $6529 = 0.0, $653 = 0, $6530 = 0.0, $6531 = 0.0, $6532 = 0, $6533 = 0.0, $6534 = 0.0, $6535 = 0.0, $6536 = 0.0, $6537 = 0, $6538 = 0, $6539 = 0.0, $654 = 0, $6540 = 0.0, $6541 = 0.0;
 var $6542 = 0, $6543 = 0, $6544 = 0.0, $6545 = 0.0, $6546 = 0.0, $6547 = 0.0, $6548 = 0, $6549 = 0.0, $655 = 0.0, $6550 = 0.0, $6551 = 0.0, $6552 = 0, $6553 = 0.0, $6554 = 0.0, $6555 = 0.0, $6556 = 0.0, $6557 = 0, $6558 = 0, $6559 = 0.0, $656 = 0.0;
 var $6560 = 0.0, $6561 = 0.0, $6562 = 0, $6563 = 0, $6564 = 0.0, $6565 = 0.0, $6566 = 0.0, $6567 = 0.0, $6568 = 0, $6569 = 0.0, $657 = 0.0, $6570 = 0.0, $6571 = 0.0, $6572 = 0, $6573 = 0.0, $6574 = 0.0, $6575 = 0.0, $6576 = 0.0, $6577 = 0.0, $6578 = 0;
 var $6579 = 0, $658 = 0, $6580 = 0.0, $6581 = 0.0, $6582 = 0.0, $6583 = 0, $6584 = 0.0, $6585 = 0.0, $6586 = 0.0, $6587 = 0, $6588 = 0.0, $6589 = 0.0, $659 = 0.0, $6590 = 0.0, $6591 = 0.0, $6592 = 0.0, $6593 = 0, $6594 = 0, $6595 = 0.0, $6596 = 0.0;
 var $6597 = 0.0, $6598 = 0, $6599 = 0, $66 = 0.0, $660 = 0.0, $6600 = 0.0, $6601 = 0.0, $6602 = 0.0, $6603 = 0.0, $6604 = 0, $6605 = 0, $6606 = 0.0, $6607 = 0.0, $6608 = 0.0, $6609 = 0.0, $661 = 0.0, $6610 = 0, $6611 = 0.0, $6612 = 0.0, $6613 = 0.0;
 var $6614 = 0, $6615 = 0.0, $6616 = 0.0, $6617 = 0.0, $6618 = 0.0, $6619 = 0, $662 = 0, $6620 = 0, $6621 = 0.0, $6622 = 0.0, $6623 = 0.0, $6624 = 0, $6625 = 0, $6626 = 0.0, $6627 = 0.0, $6628 = 0.0, $6629 = 0.0, $663 = 0.0, $6630 = 0, $6631 = 0.0;
 var $6632 = 0.0, $6633 = 0.0, $6634 = 0, $6635 = 0.0, $6636 = 0.0, $6637 = 0.0, $6638 = 0.0, $6639 = 0, $664 = 0.0, $6640 = 0, $6641 = 0.0, $6642 = 0.0, $6643 = 0.0, $6644 = 0, $6645 = 0, $6646 = 0.0, $6647 = 0.0, $6648 = 0.0, $6649 = 0.0, $665 = 0.0;
 var $6650 = 0, $6651 = 0.0, $6652 = 0.0, $6653 = 0.0, $6654 = 0, $6655 = 0.0, $6656 = 0.0, $6657 = 0.0, $6658 = 0.0, $6659 = 0.0, $666 = 0.0, $6660 = 0, $6661 = 0, $6662 = 0.0, $6663 = 0.0, $6664 = 0.0, $6665 = 0, $6666 = 0, $6667 = 0.0, $6668 = 0.0;
 var $6669 = 0.0, $667 = 0.0, $6670 = 0, $6671 = 0.0, $6672 = 0.0, $6673 = 0.0, $6674 = 0, $6675 = 0.0, $6676 = 0.0, $6677 = 0.0, $6678 = 0.0, $6679 = 0.0, $668 = 0, $6680 = 0, $6681 = 0, $6682 = 0.0, $6683 = 0.0, $6684 = 0.0, $6685 = 0.0, $6686 = 0;
 var $6687 = 0, $6688 = 0.0, $6689 = 0.0, $669 = 0, $6690 = 0.0, $6691 = 0.0, $6692 = 0, $6693 = 0.0, $6694 = 0.0, $6695 = 0.0, $6696 = 0, $6697 = 0.0, $6698 = 0.0, $6699 = 0.0, $67 = 0.0, $670 = 0.0, $6700 = 0.0, $6701 = 0.0, $6702 = 0, $6703 = 0;
 var $6704 = 0.0, $6705 = 0.0, $6706 = 0.0, $6707 = 0, $6708 = 0, $6709 = 0.0, $671 = 0.0, $6710 = 0.0, $6711 = 0.0, $6712 = 0, $6713 = 0.0, $6714 = 0.0, $6715 = 0.0, $6716 = 0, $6717 = 0.0, $6718 = 0.0, $6719 = 0.0, $672 = 0.0, $6720 = 0.0, $6721 = 0.0;
 var $6722 = 0, $6723 = 0, $6724 = 0.0, $6725 = 0.0, $6726 = 0.0, $6727 = 0, $6728 = 0.0, $6729 = 0.0, $673 = 0, $6730 = 0.0, $6731 = 0, $6732 = 0.0, $6733 = 0.0, $6734 = 0.0, $6735 = 0.0, $6736 = 0.0, $6737 = 0, $6738 = 0, $6739 = 0.0, $674 = 0;
 var $6740 = 0.0, $6741 = 0.0, $6742 = 0, $6743 = 0, $6744 = 0.0, $6745 = 0.0, $6746 = 0.0, $6747 = 0.0, $6748 = 0.0, $6749 = 0, $675 = 0.0, $6750 = 0, $6751 = 0.0, $6752 = 0.0, $6753 = 0.0, $6754 = 0.0, $6755 = 0, $6756 = 0, $6757 = 0.0, $6758 = 0.0;
 var $6759 = 0.0, $676 = 0.0, $6760 = 0.0, $6761 = 0, $6762 = 0.0, $6763 = 0.0, $6764 = 0.0, $6765 = 0, $6766 = 0.0, $6767 = 0.0, $6768 = 0.0, $6769 = 0.0, $677 = 0.0, $6770 = 0.0, $6771 = 0, $6772 = 0, $6773 = 0.0, $6774 = 0.0, $6775 = 0.0, $6776 = 0;
 var $6777 = 0, $6778 = 0.0, $6779 = 0.0, $678 = 0.0, $6780 = 0.0, $6781 = 0, $6782 = 0.0, $6783 = 0.0, $6784 = 0.0, $6785 = 0, $6786 = 0.0, $6787 = 0.0, $6788 = 0.0, $6789 = 0.0, $679 = 0, $6790 = 0.0, $6791 = 0, $6792 = 0, $6793 = 0.0, $6794 = 0.0;
 var $6795 = 0.0, $6796 = 0.0, $6797 = 0, $6798 = 0, $6799 = 0.0, $68 = 0.0, $680 = 0, $6800 = 0.0, $6801 = 0.0, $6802 = 0.0, $6803 = 0, $6804 = 0.0, $6805 = 0.0, $6806 = 0.0, $6807 = 0, $6808 = 0.0, $6809 = 0.0, $681 = 0.0, $6810 = 0.0, $6811 = 0.0;
 var $6812 = 0, $6813 = 0, $6814 = 0.0, $6815 = 0.0, $6816 = 0.0, $6817 = 0, $6818 = 0, $6819 = 0.0, $682 = 0.0, $6820 = 0.0, $6821 = 0.0, $6822 = 0.0, $6823 = 0, $6824 = 0.0, $6825 = 0.0, $6826 = 0.0, $6827 = 0, $6828 = 0.0, $6829 = 0.0, $683 = 0.0;
 var $6830 = 0.0, $6831 = 0.0, $6832 = 0.0, $6833 = 0, $6834 = 0, $6835 = 0.0, $6836 = 0.0, $6837 = 0.0, $6838 = 0, $6839 = 0, $684 = 0.0, $6840 = 0.0, $6841 = 0.0, $6842 = 0.0, $6843 = 0, $6844 = 0.0, $6845 = 0.0, $6846 = 0.0, $6847 = 0, $6848 = 0.0;
 var $6849 = 0.0, $685 = 0, $6850 = 0.0, $6851 = 0.0, $6852 = 0.0, $6853 = 0, $6854 = 0, $6855 = 0.0, $6856 = 0.0, $6857 = 0.0, $6858 = 0.0, $6859 = 0.0, $686 = 0, $6860 = 0, $6861 = 0, $6862 = 0.0, $6863 = 0.0, $6864 = 0.0, $6865 = 0, $6866 = 0.0;
 var $6867 = 0.0, $6868 = 0.0, $6869 = 0, $687 = 0.0, $6870 = 0.0, $6871 = 0.0, $6872 = 0.0, $6873 = 0.0, $6874 = 0, $6875 = 0, $6876 = 0.0, $6877 = 0.0, $6878 = 0.0, $6879 = 0, $688 = 0.0, $6880 = 0.0, $6881 = 0.0, $6882 = 0.0, $6883 = 0, $6884 = 0.0;
 var $6885 = 0.0, $6886 = 0.0, $6887 = 0.0, $6888 = 0, $6889 = 0, $689 = 0.0, $6890 = 0.0, $6891 = 0.0, $6892 = 0.0, $6893 = 0, $6894 = 0, $6895 = 0.0, $6896 = 0.0, $6897 = 0.0, $6898 = 0.0, $6899 = 0.0, $69 = 0.0, $690 = 0.0, $6900 = 0, $6901 = 0;
 var $6902 = 0.0, $6903 = 0.0, $6904 = 0.0, $6905 = 0, $6906 = 0.0, $6907 = 0.0, $6908 = 0.0, $6909 = 0, $691 = 0, $6910 = 0.0, $6911 = 0.0, $6912 = 0.0, $6913 = 0.0, $6914 = 0.0, $6915 = 0, $6916 = 0, $6917 = 0.0, $6918 = 0.0, $6919 = 0.0, $692 = 0;
 var $6920 = 0, $6921 = 0, $6922 = 0.0, $6923 = 0.0, $6924 = 0.0, $6925 = 0.0, $6926 = 0.0, $6927 = 0, $6928 = 0, $6929 = 0.0, $693 = 0.0, $6930 = 0.0, $6931 = 0.0, $6932 = 0.0, $6933 = 0, $6934 = 0, $6935 = 0.0, $6936 = 0.0, $6937 = 0.0, $6938 = 0.0;
 var $6939 = 0, $694 = 0.0, $6940 = 0.0, $6941 = 0.0, $6942 = 0.0, $6943 = 0, $6944 = 0.0, $6945 = 0.0, $6946 = 0.0, $6947 = 0.0, $6948 = 0, $6949 = 0, $695 = 0.0, $6950 = 0.0, $6951 = 0.0, $6952 = 0.0, $6953 = 0.0, $6954 = 0, $6955 = 0.0, $6956 = 0.0;
 var $6957 = 0.0, $6958 = 0, $6959 = 0.0, $696 = 0, $6960 = 0.0, $6961 = 0.0, $6962 = 0.0, $6963 = 0, $6964 = 0, $6965 = 0.0, $6966 = 0.0, $6967 = 0.0, $6968 = 0, $6969 = 0, $697 = 0, $6970 = 0.0, $6971 = 0.0, $6972 = 0.0, $6973 = 0.0, $6974 = 0;
 var $6975 = 0, $698 = 0.0, $699 = 0.0, $7 = 0, $70 = 0.0, $700 = 0.0, $701 = 0, $702 = 0, $703 = 0.0, $704 = 0.0, $705 = 0.0, $706 = 0, $707 = 0, $708 = 0.0, $709 = 0.0, $71 = 0.0, $710 = 0.0, $711 = 0, $712 = 0, $713 = 0.0;
 var $714 = 0.0, $715 = 0.0, $716 = 0, $717 = 0, $718 = 0.0, $719 = 0.0, $72 = 0.0, $720 = 0.0, $721 = 0, $722 = 0, $723 = 0.0, $724 = 0.0, $725 = 0.0, $726 = 0, $727 = 0, $728 = 0.0, $729 = 0.0, $73 = 0.0, $730 = 0.0, $731 = 0.0;
 var $732 = 0.0, $733 = 0, $734 = 0, $735 = 0.0, $736 = 0.0, $737 = 0.0, $738 = 0.0, $739 = 0, $74 = 0.0, $740 = 0, $741 = 0.0, $742 = 0.0, $743 = 0.0, $744 = 0.0, $745 = 0, $746 = 0, $747 = 0.0, $748 = 0.0, $749 = 0, $75 = 0.0;
 var $750 = 0, $751 = 0.0, $752 = 0.0, $753 = 0.0, $754 = 0, $755 = 0, $756 = 0.0, $757 = 0.0, $758 = 0.0, $759 = 0, $76 = 0.0, $760 = 0, $761 = 0.0, $762 = 0.0, $763 = 0.0, $764 = 0, $765 = 0, $766 = 0.0, $767 = 0.0, $768 = 0.0;
 var $769 = 0, $77 = 0.0, $770 = 0, $771 = 0.0, $772 = 0.0, $773 = 0.0, $774 = 0, $775 = 0, $776 = 0.0, $777 = 0.0, $778 = 0.0, $779 = 0, $78 = 0.0, $780 = 0, $781 = 0.0, $782 = 0.0, $783 = 0.0, $784 = 0.0, $785 = 0, $786 = 0;
 var $787 = 0.0, $788 = 0.0, $789 = 0.0, $79 = 0.0, $790 = 0.0, $791 = 0.0, $792 = 0, $793 = 0, $794 = 0.0, $795 = 0.0, $796 = 0.0, $797 = 0, $798 = 0, $799 = 0.0, $8 = 0, $80 = 0.0, $800 = 0.0, $801 = 0, $802 = 0, $803 = 0.0;
 var $804 = 0.0, $805 = 0.0, $806 = 0, $807 = 0, $808 = 0.0, $809 = 0.0, $81 = 0.0, $810 = 0.0, $811 = 0, $812 = 0, $813 = 0.0, $814 = 0.0, $815 = 0.0, $816 = 0, $817 = 0, $818 = 0.0, $819 = 0.0, $82 = 0.0, $820 = 0.0, $821 = 0.0;
 var $822 = 0.0, $823 = 0, $824 = 0, $825 = 0.0, $826 = 0.0, $827 = 0.0, $828 = 0.0, $829 = 0, $83 = 0.0, $830 = 0, $831 = 0.0, $832 = 0.0, $833 = 0.0, $834 = 0.0, $835 = 0, $836 = 0.0, $837 = 0.0, $838 = 0.0, $839 = 0, $84 = 0.0;
 var $840 = 0.0, $841 = 0.0, $842 = 0.0, $843 = 0.0, $844 = 0.0, $845 = 0, $846 = 0, $847 = 0.0, $848 = 0.0, $849 = 0.0, $85 = 0.0, $850 = 0, $851 = 0, $852 = 0.0, $853 = 0.0, $854 = 0.0, $855 = 0, $856 = 0.0, $857 = 0.0, $858 = 0.0;
 var $859 = 0, $86 = 0.0, $860 = 0.0, $861 = 0.0, $862 = 0.0, $863 = 0.0, $864 = 0.0, $865 = 0, $866 = 0, $867 = 0.0, $868 = 0.0, $869 = 0.0, $87 = 0.0, $870 = 0, $871 = 0.0, $872 = 0.0, $873 = 0.0, $874 = 0, $875 = 0.0, $876 = 0.0;
 var $877 = 0.0, $878 = 0.0, $879 = 0.0, $88 = 0.0, $880 = 0, $881 = 0, $882 = 0.0, $883 = 0.0, $884 = 0.0, $885 = 0, $886 = 0, $887 = 0.0, $888 = 0.0, $889 = 0.0, $89 = 0.0, $890 = 0.0, $891 = 0.0, $892 = 0, $893 = 0, $894 = 0.0;
 var $895 = 0.0, $896 = 0.0, $897 = 0.0, $898 = 0, $899 = 0, $9 = 0.0, $90 = 0.0, $900 = 0.0, $901 = 0.0, $902 = 0.0, $903 = 0, $904 = 0.0, $905 = 0.0, $906 = 0.0, $907 = 0, $908 = 0.0, $909 = 0.0, $91 = 0.0, $910 = 0.0, $911 = 0.0;
 var $912 = 0.0, $913 = 0, $914 = 0, $915 = 0.0, $916 = 0.0, $917 = 0.0, $918 = 0, $919 = 0.0, $92 = 0.0, $920 = 0.0, $921 = 0.0, $922 = 0, $923 = 0.0, $924 = 0.0, $925 = 0.0, $926 = 0.0, $927 = 0.0, $928 = 0, $929 = 0, $93 = 0.0;
 var $930 = 0.0, $931 = 0.0, $932 = 0.0, $933 = 0, $934 = 0, $935 = 0.0, $936 = 0.0, $937 = 0.0, $938 = 0.0, $939 = 0, $94 = 0.0, $940 = 0, $941 = 0.0, $942 = 0.0, $943 = 0.0, $944 = 0.0, $945 = 0, $946 = 0, $947 = 0.0, $948 = 0.0;
 var $949 = 0.0, $95 = 0.0, $950 = 0.0, $951 = 0, $952 = 0, $953 = 0, $954 = 0.0, $955 = 0.0, $956 = 0, $957 = 0, $958 = 0.0, $959 = 0.0, $96 = 0.0, $960 = 0.0, $961 = 0, $962 = 0, $963 = 0.0, $964 = 0.0, $965 = 0.0, $966 = 0;
 var $967 = 0, $968 = 0.0, $969 = 0.0, $97 = 0.0, $970 = 0.0, $971 = 0, $972 = 0, $973 = 0.0, $974 = 0.0, $975 = 0.0, $976 = 0, $977 = 0, $978 = 0.0, $979 = 0.0, $98 = 0.0, $980 = 0.0, $981 = 0, $982 = 0, $983 = 0.0, $984 = 0.0;
 var $985 = 0.0, $986 = 0, $987 = 0, $988 = 0.0, $989 = 0.0, $99 = 0.0, $990 = 0.0, $991 = 0.0, $992 = 0, $993 = 0, $994 = 0.0, $995 = 0.0, $996 = 0.0, $997 = 0.0, $998 = 0.0, $999 = 0, $x0 = 0.0, $x1 = 0.0, $x10 = 0.0, $x11 = 0.0;
 var $x12 = 0.0, $x13 = 0.0, $x14 = 0.0, $x15 = 0.0, $x16 = 0.0, $x17 = 0.0, $x18 = 0.0, $x19 = 0.0, $x2 = 0.0, $x20 = 0.0, $x21 = 0.0, $x22 = 0.0, $x23 = 0.0, $x24 = 0.0, $x25 = 0.0, $x26 = 0.0, $x27 = 0.0, $x28 = 0.0, $x29 = 0.0, $x3 = 0.0;
 var $x30 = 0.0, $x31 = 0.0, $x32 = 0.0, $x33 = 0.0, $x34 = 0.0, $x35 = 0.0, $x36 = 0.0, $x37 = 0.0, $x38 = 0.0, $x39 = 0.0, $x4 = 0.0, $x40 = 0.0, $x41 = 0.0, $x42 = 0.0, $x43 = 0.0, $x44 = 0.0, $x45 = 0.0, $x46 = 0.0, $x47 = 0.0, $x48 = 0.0;
 var $x49 = 0.0, $x5 = 0.0, $x6 = 0.0, $x7 = 0.0, $x8 = 0.0, $x9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 416|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $j;
 $1 = $eetrans;
 $2 = $eerot;
 $3 = $0; //@line 301 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4 = ((($3)) + 8|0); //@line 301 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5 = +HEAPF64[$4>>3]; //@line 301 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6 = (+__Z5IKcosd($5)); //@line 301 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $x0 = $6; //@line 301 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $7 = $0; //@line 302 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $8 = ((($7)) + 16|0); //@line 302 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $9 = +HEAPF64[$8>>3]; //@line 302 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $10 = (+__Z5IKcosd($9)); //@line 302 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $x1 = $10; //@line 302 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $11 = $0; //@line 303 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $12 = ((($11)) + 16|0); //@line 303 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $13 = +HEAPF64[$12>>3]; //@line 303 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $14 = (+__Z5IKsind($13)); //@line 303 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $x2 = $14; //@line 303 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $15 = $0; //@line 304 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $16 = ((($15)) + 24|0); //@line 304 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $17 = +HEAPF64[$16>>3]; //@line 304 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $18 = (+__Z5IKsind($17)); //@line 304 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $x3 = $18; //@line 304 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $19 = $0; //@line 305 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $20 = ((($19)) + 24|0); //@line 305 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $21 = +HEAPF64[$20>>3]; //@line 305 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $22 = (+__Z5IKcosd($21)); //@line 305 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $x4 = $22; //@line 305 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $23 = $0; //@line 306 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $24 = ((($23)) + 8|0); //@line 306 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $25 = +HEAPF64[$24>>3]; //@line 306 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $26 = (+__Z5IKsind($25)); //@line 306 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $x5 = $26; //@line 306 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $27 = $0; //@line 307 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $28 = ((($27)) + 40|0); //@line 307 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $29 = +HEAPF64[$28>>3]; //@line 307 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $30 = (+__Z5IKcosd($29)); //@line 307 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $x6 = $30; //@line 307 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $31 = $0; //@line 308 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $32 = ((($31)) + 40|0); //@line 308 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $33 = +HEAPF64[$32>>3]; //@line 308 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $34 = (+__Z5IKsind($33)); //@line 308 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $x7 = $34; //@line 308 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $35 = $0; //@line 309 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $36 = ((($35)) + 32|0); //@line 309 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $37 = +HEAPF64[$36>>3]; //@line 309 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $38 = (+__Z5IKsind($37)); //@line 309 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $x8 = $38; //@line 309 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $39 = $0; //@line 310 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $40 = ((($39)) + 32|0); //@line 310 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $41 = +HEAPF64[$40>>3]; //@line 310 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $42 = (+__Z5IKcosd($41)); //@line 310 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $x9 = $42; //@line 310 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $43 = $0; //@line 311 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $44 = +HEAPF64[$43>>3]; //@line 311 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $45 = (+__Z5IKcosd($44)); //@line 311 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $46 = 0.70710678118654802 * $45; //@line 311 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $x10 = $46; //@line 311 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $47 = $0; //@line 312 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $48 = +HEAPF64[$47>>3]; //@line 312 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $49 = (+__Z5IKsind($48)); //@line 312 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $50 = 0.70710678118654802 * $49; //@line 312 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $x11 = $50; //@line 312 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $51 = $x7; //@line 313 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $52 = 0.70710678118654802 * $51; //@line 313 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $x12 = $52; //@line 313 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $53 = $x6; //@line 314 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $54 = 0.70710678118654802 * $53; //@line 314 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $x13 = $54; //@line 314 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $55 = $x3; //@line 315 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $56 = 0.5 * $55; //@line 315 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $x14 = $56; //@line 315 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $57 = $x9; //@line 316 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $58 = 0.5 * $57; //@line 316 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $x15 = $58; //@line 316 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $59 = $x1; //@line 317 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $60 = 1.0 * $59; //@line 317 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $x16 = $60; //@line 317 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $61 = $x8; //@line 318 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $62 = 0.5 * $61; //@line 318 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $x17 = $62; //@line 318 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $63 = $x2; //@line 319 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $64 = 1.0 * $63; //@line 319 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $x18 = $64; //@line 319 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $65 = $x3; //@line 320 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $66 = 1.0 * $65; //@line 320 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $x19 = $66; //@line 320 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $67 = $x0; //@line 321 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $68 = $x2; //@line 321 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $69 = $67 * $68; //@line 321 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $x20 = $69; //@line 321 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $70 = $x0; //@line 322 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $71 = $x1; //@line 322 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $72 = $70 * $71; //@line 322 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $x21 = $72; //@line 322 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $73 = $x8; //@line 323 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $74 = -0.5 * $73; //@line 323 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $x22 = $74; //@line 323 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $75 = $x4; //@line 324 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $76 = $x5; //@line 324 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $77 = $75 * $76; //@line 324 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $x23 = $77; //@line 324 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $78 = $x2; //@line 325 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $79 = -1.0 * $78; //@line 325 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $x24 = $79; //@line 325 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $80 = $x3; //@line 326 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $81 = $x5; //@line 326 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $82 = $80 * $81; //@line 326 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $x25 = $82; //@line 326 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $83 = $x9; //@line 327 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $84 = -0.5 * $83; //@line 327 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $x26 = $84; //@line 327 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $85 = $x3; //@line 328 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $86 = -0.5 * $85; //@line 328 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $x27 = $86; //@line 328 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $87 = $x11; //@line 329 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $88 = -1.0 * $87; //@line 329 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $89 = $x10; //@line 329 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $90 = $88 + $89; //@line 329 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $x28 = $90; //@line 329 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $91 = $x10; //@line 330 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $92 = -1.0 * $91; //@line 330 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $93 = $x11; //@line 330 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $94 = $92 + $93; //@line 330 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $x29 = $94; //@line 330 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $95 = $x11; //@line 331 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $96 = $x10; //@line 331 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $97 = $95 + $96; //@line 331 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $x30 = $97; //@line 331 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $98 = $x30; //@line 332 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $99 = -1.0 * $98; //@line 332 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $x31 = $99; //@line 332 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $100 = $x31; //@line 333 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $101 = 1.0 * $100; //@line 333 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $x32 = $101; //@line 333 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $102 = $x2; //@line 334 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $103 = $x31; //@line 334 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $104 = $102 * $103; //@line 334 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $x33 = $104; //@line 334 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $105 = $x31; //@line 335 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $106 = $x5; //@line 335 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $107 = $105 * $106; //@line 335 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $x34 = $107; //@line 335 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $108 = $x1; //@line 336 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $109 = $x31; //@line 336 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $110 = $108 * $109; //@line 336 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $111 = $x20; //@line 336 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $112 = $x29; //@line 336 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $113 = $111 * $112; //@line 336 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $114 = $110 + $113; //@line 336 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $x35 = $114; //@line 336 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $115 = $x20; //@line 337 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $116 = $x31; //@line 337 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $117 = $115 * $116; //@line 337 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $118 = $x1; //@line 337 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $119 = $x28; //@line 337 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $120 = $118 * $119; //@line 337 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $121 = $117 + $120; //@line 337 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $x36 = $121; //@line 337 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $122 = $x18; //@line 338 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $123 = -1.0 * $122; //@line 338 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $124 = $x28; //@line 338 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $125 = $123 * $124; //@line 338 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $126 = $x0; //@line 338 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $127 = -1.0 * $126; //@line 338 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $128 = $x16; //@line 338 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $129 = $127 * $128; //@line 338 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $130 = $x30; //@line 338 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $131 = $129 * $130; //@line 338 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $132 = $125 + $131; //@line 338 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $x37 = $132; //@line 338 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $133 = $x36; //@line 339 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $134 = $x8; //@line 339 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $135 = $133 * $134; //@line 339 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $x38 = $135; //@line 339 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $136 = $x21; //@line 340 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $137 = -1.0 * $136; //@line 340 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $138 = $x28; //@line 340 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $139 = $137 * $138; //@line 340 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $140 = $x24; //@line 340 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $141 = $x31; //@line 340 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $142 = $140 * $141; //@line 340 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $143 = $139 + $142; //@line 340 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $x39 = $143; //@line 340 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $144 = $x3; //@line 341 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $145 = $x37; //@line 341 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $146 = $144 * $145; //@line 341 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $x40 = $146; //@line 341 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $147 = $x25; //@line 342 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $148 = $x29; //@line 342 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $149 = $147 * $148; //@line 342 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $150 = $x4; //@line 342 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $151 = $x21; //@line 342 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $152 = $x28; //@line 342 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $153 = $151 * $152; //@line 342 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $154 = $x33; //@line 342 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $155 = $153 + $154; //@line 342 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $156 = $150 * $155; //@line 342 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $157 = $149 + $156; //@line 342 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $x41 = $157; //@line 342 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $158 = $x25; //@line 343 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $159 = $x31; //@line 343 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $160 = $158 * $159; //@line 343 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $161 = $x4; //@line 343 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $162 = $x21; //@line 343 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $163 = $x30; //@line 343 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $164 = $162 * $163; //@line 343 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $165 = $x2; //@line 343 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $166 = $x28; //@line 343 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $167 = $165 * $166; //@line 343 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $168 = $164 + $167; //@line 343 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $169 = $161 * $168; //@line 343 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $170 = $160 + $169; //@line 343 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $x42 = $170; //@line 343 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $171 = $x42; //@line 344 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $172 = $x9; //@line 344 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $173 = $171 * $172; //@line 344 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $x43 = $173; //@line 344 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $174 = $x16; //@line 345 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $175 = 1.0 * $174; //@line 345 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $x45 = $175; //@line 345 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $176 = $x0; //@line 346 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $177 = 1.0 * $176; //@line 346 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $x46 = $177; //@line 346 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $178 = $x12; //@line 347 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $179 = $x9; //@line 347 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $180 = $x23; //@line 347 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $181 = -1.0 * $180; //@line 347 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $182 = $x45; //@line 347 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $183 = $181 * $182; //@line 347 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $184 = $x19; //@line 347 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $185 = -1.0 * $184; //@line 347 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $186 = $x46; //@line 347 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $187 = $185 * $186; //@line 347 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $188 = $183 + $187; //@line 347 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $189 = $179 * $188; //@line 347 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $190 = $x2; //@line 347 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $191 = $x5; //@line 347 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $192 = $190 * $191; //@line 347 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $193 = $x8; //@line 347 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $194 = $192 * $193; //@line 347 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $195 = $189 + $194; //@line 347 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $196 = $178 * $195; //@line 347 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $197 = $x13; //@line 347 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $198 = $x25; //@line 347 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $199 = -1.0 * $198; //@line 347 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $200 = $x45; //@line 347 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $201 = $199 * $200; //@line 347 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $202 = $x4; //@line 347 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $203 = $x46; //@line 347 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $204 = $202 * $203; //@line 347 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $205 = $201 + $204; //@line 347 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $206 = $197 * $205; //@line 347 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $207 = $196 + $206; //@line 347 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $x44 = $207; //@line 347 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $208 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $209 = +HEAPF64[$208>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $210 = (+__Z5IKsind($209)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $211 = -0.70710678118654802 * $210; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $212 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $213 = +HEAPF64[$212>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $214 = (+__Z5IKcosd($213)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $215 = -0.70710678118654802 * $214; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $216 = $211 + $215; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $217 = -0.5 * $216; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $218 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $219 = ((($218)) + 24|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $220 = +HEAPF64[$219>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $221 = (+__Z5IKcosd($220)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $222 = $217 * $221; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $223 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $224 = ((($223)) + 8|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $225 = +HEAPF64[$224>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $226 = (+__Z5IKsind($225)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $227 = $222 * $226; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $228 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $229 = +HEAPF64[$228>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $230 = (+__Z5IKcosd($229)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $231 = -0.70710678118654802 * $230; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $232 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $233 = +HEAPF64[$232>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $234 = (+__Z5IKsind($233)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $235 = 0.70710678118654802 * $234; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $236 = $231 + $235; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $237 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $238 = ((($237)) + 16|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $239 = +HEAPF64[$238>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $240 = (+__Z5IKsind($239)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $241 = $236 * $240; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $242 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $243 = +HEAPF64[$242>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $244 = (+__Z5IKsind($243)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $245 = -0.70710678118654802 * $244; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $246 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $247 = +HEAPF64[$246>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $248 = (+__Z5IKcosd($247)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $249 = -0.70710678118654802 * $248; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $250 = $245 + $249; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $251 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $252 = ((($251)) + 8|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $253 = +HEAPF64[$252>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $254 = (+__Z5IKcosd($253)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $255 = $250 * $254; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $256 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $257 = ((($256)) + 16|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $258 = +HEAPF64[$257>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $259 = (+__Z5IKcosd($258)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $260 = $255 * $259; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $261 = $241 + $260; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $262 = -0.5 * $261; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $263 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $264 = ((($263)) + 24|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $265 = +HEAPF64[$264>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $266 = (+__Z5IKsind($265)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $267 = $262 * $266; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $268 = $227 + $267; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $269 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $270 = ((($269)) + 40|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $271 = +HEAPF64[$270>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $272 = (+__Z5IKsind($271)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $273 = $268 * $272; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $274 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $275 = +HEAPF64[$274>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $276 = (+__Z5IKsind($275)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $277 = -0.70710678118654802 * $276; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $278 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $279 = +HEAPF64[$278>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $280 = (+__Z5IKcosd($279)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $281 = -0.70710678118654802 * $280; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $282 = $277 + $281; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $283 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $284 = ((($283)) + 8|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $285 = +HEAPF64[$284>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $286 = (+__Z5IKcosd($285)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $287 = $282 * $286; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $288 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $289 = ((($288)) + 16|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $290 = +HEAPF64[$289>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $291 = (+__Z5IKsind($290)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $292 = $287 * $291; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $293 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $294 = +HEAPF64[$293>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $295 = (+__Z5IKsind($294)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $296 = -0.70710678118654802 * $295; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $297 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $298 = +HEAPF64[$297>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $299 = (+__Z5IKcosd($298)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $300 = 0.70710678118654802 * $299; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $301 = $296 + $300; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $302 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $303 = ((($302)) + 16|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $304 = +HEAPF64[$303>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $305 = (+__Z5IKcosd($304)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $306 = $301 * $305; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $307 = $292 + $306; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $308 = -0.5 * $307; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $309 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $310 = ((($309)) + 32|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $311 = +HEAPF64[$310>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $312 = (+__Z5IKsind($311)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $313 = $308 * $312; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $314 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $315 = +HEAPF64[$314>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $316 = (+__Z5IKcosd($315)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $317 = 0.70710678118654802 * $316; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $318 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $319 = +HEAPF64[$318>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $320 = (+__Z5IKsind($319)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $321 = 0.70710678118654802 * $320; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $322 = $317 + $321; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $323 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $324 = ((($323)) + 8|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $325 = +HEAPF64[$324>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $326 = (+__Z5IKcosd($325)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $327 = $322 * $326; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $328 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $329 = ((($328)) + 16|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $330 = +HEAPF64[$329>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $331 = (+__Z5IKcosd($330)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $332 = $327 * $331; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $333 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $334 = +HEAPF64[$333>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $335 = (+__Z5IKsind($334)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $336 = -0.70710678118654802 * $335; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $337 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $338 = +HEAPF64[$337>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $339 = (+__Z5IKcosd($338)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $340 = 0.70710678118654802 * $339; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $341 = $336 + $340; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $342 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $343 = ((($342)) + 16|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $344 = +HEAPF64[$343>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $345 = (+__Z5IKsind($344)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $346 = $341 * $345; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $347 = $332 + $346; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $348 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $349 = ((($348)) + 24|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $350 = +HEAPF64[$349>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $351 = (+__Z5IKcosd($350)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $352 = $347 * $351; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $353 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $354 = +HEAPF64[$353>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $355 = (+__Z5IKsind($354)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $356 = -0.70710678118654802 * $355; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $357 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $358 = +HEAPF64[$357>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $359 = (+__Z5IKcosd($358)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $360 = -0.70710678118654802 * $359; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $361 = $356 + $360; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $362 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $363 = ((($362)) + 8|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $364 = +HEAPF64[$363>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $365 = (+__Z5IKsind($364)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $366 = $361 * $365; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $367 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $368 = ((($367)) + 24|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $369 = +HEAPF64[$368>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $370 = (+__Z5IKsind($369)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $371 = $366 * $370; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $372 = $352 + $371; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $373 = -0.5 * $372; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $374 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $375 = ((($374)) + 32|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $376 = +HEAPF64[$375>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $377 = (+__Z5IKcosd($376)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $378 = $373 * $377; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $379 = $313 + $378; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $380 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $381 = ((($380)) + 40|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $382 = +HEAPF64[$381>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $383 = (+__Z5IKcosd($382)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $384 = $379 * $383; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $385 = $273 + $384; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $386 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $387 = ((($386)) + 48|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $388 = +HEAPF64[$387>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $389 = (+__Z5IKsind($388)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $390 = $385 * $389; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $391 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $392 = +HEAPF64[$391>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $393 = (+__Z5IKsind($392)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $394 = -0.70710678118654802 * $393; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $395 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $396 = +HEAPF64[$395>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $397 = (+__Z5IKcosd($396)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $398 = -0.70710678118654802 * $397; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $399 = $394 + $398; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $400 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $401 = ((($400)) + 16|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $402 = +HEAPF64[$401>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $403 = (+__Z5IKcosd($402)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $404 = $399 * $403; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $405 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $406 = +HEAPF64[$405>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $407 = (+__Z5IKcosd($406)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $408 = -0.70710678118654802 * $407; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $409 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $410 = +HEAPF64[$409>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $411 = (+__Z5IKsind($410)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $412 = 0.70710678118654802 * $411; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $413 = $408 + $412; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $414 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $415 = ((($414)) + 8|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $416 = +HEAPF64[$415>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $417 = (+__Z5IKcosd($416)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $418 = $413 * $417; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $419 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $420 = ((($419)) + 16|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $421 = +HEAPF64[$420>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $422 = (+__Z5IKsind($421)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $423 = $418 * $422; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $424 = $404 + $423; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $425 = 0.5 * $424; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $426 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $427 = ((($426)) + 32|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $428 = +HEAPF64[$427>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $429 = (+__Z5IKsind($428)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $430 = $425 * $429; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $431 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $432 = +HEAPF64[$431>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $433 = (+__Z5IKsind($432)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $434 = -0.70710678118654802 * $433; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $435 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $436 = +HEAPF64[$435>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $437 = (+__Z5IKcosd($436)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $438 = -0.70710678118654802 * $437; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $439 = $434 + $438; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $440 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $441 = ((($440)) + 16|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $442 = +HEAPF64[$441>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $443 = (+__Z5IKsind($442)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $444 = $439 * $443; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $445 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $446 = +HEAPF64[$445>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $447 = (+__Z5IKsind($446)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $448 = -0.70710678118654802 * $447; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $449 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $450 = +HEAPF64[$449>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $451 = (+__Z5IKcosd($450)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $452 = 0.70710678118654802 * $451; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $453 = $448 + $452; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $454 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $455 = ((($454)) + 8|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $456 = +HEAPF64[$455>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $457 = (+__Z5IKcosd($456)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $458 = $453 * $457; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $459 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $460 = ((($459)) + 16|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $461 = +HEAPF64[$460>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $462 = (+__Z5IKcosd($461)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $463 = $458 * $462; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $464 = $444 + $463; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $465 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $466 = ((($465)) + 24|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $467 = +HEAPF64[$466>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $468 = (+__Z5IKcosd($467)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $469 = $464 * $468; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $470 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $471 = +HEAPF64[$470>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $472 = (+__Z5IKcosd($471)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $473 = -0.70710678118654802 * $472; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $474 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $475 = +HEAPF64[$474>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $476 = (+__Z5IKsind($475)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $477 = 0.70710678118654802 * $476; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $478 = $473 + $477; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $479 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $480 = ((($479)) + 8|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $481 = +HEAPF64[$480>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $482 = (+__Z5IKsind($481)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $483 = $478 * $482; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $484 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $485 = ((($484)) + 24|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $486 = +HEAPF64[$485>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $487 = (+__Z5IKsind($486)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $488 = $483 * $487; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $489 = $469 + $488; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $490 = 0.5 * $489; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $491 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $492 = ((($491)) + 32|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $493 = +HEAPF64[$492>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $494 = (+__Z5IKcosd($493)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $495 = $490 * $494; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $496 = $430 + $495; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $497 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $498 = ((($497)) + 40|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $499 = +HEAPF64[$498>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $500 = (+__Z5IKcosd($499)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $501 = $496 * $500; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $502 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $503 = +HEAPF64[$502>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $504 = (+__Z5IKcosd($503)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $505 = -0.70710678118654802 * $504; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $506 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $507 = +HEAPF64[$506>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $508 = (+__Z5IKsind($507)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $509 = 0.70710678118654802 * $508; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $510 = $505 + $509; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $511 = 0.5 * $510; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $512 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $513 = ((($512)) + 24|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $514 = +HEAPF64[$513>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $515 = (+__Z5IKcosd($514)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $516 = $511 * $515; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $517 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $518 = ((($517)) + 8|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $519 = +HEAPF64[$518>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $520 = (+__Z5IKsind($519)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $521 = $516 * $520; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $522 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $523 = +HEAPF64[$522>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $524 = (+__Z5IKcosd($523)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $525 = 0.70710678118654802 * $524; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $526 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $527 = +HEAPF64[$526>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $528 = (+__Z5IKsind($527)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $529 = 0.70710678118654802 * $528; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $530 = $525 + $529; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $531 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $532 = ((($531)) + 16|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $533 = +HEAPF64[$532>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $534 = (+__Z5IKsind($533)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $535 = $530 * $534; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $536 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $537 = +HEAPF64[$536>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $538 = (+__Z5IKcosd($537)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $539 = -0.70710678118654802 * $538; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $540 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $541 = +HEAPF64[$540>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $542 = (+__Z5IKsind($541)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $543 = 0.70710678118654802 * $542; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $544 = $539 + $543; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $545 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $546 = ((($545)) + 8|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $547 = +HEAPF64[$546>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $548 = (+__Z5IKcosd($547)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $549 = $544 * $548; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $550 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $551 = ((($550)) + 16|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $552 = +HEAPF64[$551>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $553 = (+__Z5IKcosd($552)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $554 = $549 * $553; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $555 = $535 + $554; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $556 = 0.5 * $555; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $557 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $558 = ((($557)) + 24|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $559 = +HEAPF64[$558>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $560 = (+__Z5IKsind($559)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $561 = $556 * $560; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $562 = $521 + $561; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $563 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $564 = ((($563)) + 40|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $565 = +HEAPF64[$564>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $566 = (+__Z5IKsind($565)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $567 = $562 * $566; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $568 = $501 + $567; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $569 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $570 = ((($569)) + 48|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $571 = +HEAPF64[$570>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $572 = (+__Z5IKsind($571)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $573 = $568 * $572; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $574 = $390 + $573; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $575 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $576 = +HEAPF64[$575>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $577 = (+__Z5IKcosd($576)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $578 = -0.70710678118654802 * $577; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $579 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $580 = +HEAPF64[$579>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $581 = (+__Z5IKsind($580)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $582 = 0.70710678118654802 * $581; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $583 = $578 + $582; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $584 = -0.5 * $583; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $585 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $586 = ((($585)) + 8|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $587 = +HEAPF64[$586>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $588 = (+__Z5IKcosd($587)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $589 = $584 * $588; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $590 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $591 = ((($590)) + 16|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $592 = +HEAPF64[$591>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $593 = (+__Z5IKsind($592)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $594 = $589 * $593; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $595 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $596 = +HEAPF64[$595>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $597 = (+__Z5IKsind($596)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $598 = -0.70710678118654802 * $597; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $599 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $600 = +HEAPF64[$599>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $601 = (+__Z5IKcosd($600)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $602 = -0.70710678118654802 * $601; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $603 = $598 + $602; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $604 = -0.5 * $603; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $605 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $606 = ((($605)) + 16|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $607 = +HEAPF64[$606>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $608 = (+__Z5IKcosd($607)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $609 = $604 * $608; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $610 = $594 + $609; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $611 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $612 = ((($611)) + 32|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $613 = +HEAPF64[$612>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $614 = (+__Z5IKcosd($613)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $615 = $610 * $614; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $616 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $617 = +HEAPF64[$616>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $618 = (+__Z5IKsind($617)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $619 = -0.70710678118654802 * $618; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $620 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $621 = +HEAPF64[$620>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $622 = (+__Z5IKcosd($621)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $623 = 0.70710678118654802 * $622; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $624 = $619 + $623; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $625 = -1.0 * $624; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $626 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $627 = ((($626)) + 8|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $628 = +HEAPF64[$627>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $629 = (+__Z5IKcosd($628)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $630 = $625 * $629; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $631 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $632 = ((($631)) + 16|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $633 = +HEAPF64[$632>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $634 = (+__Z5IKcosd($633)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $635 = $630 * $634; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $636 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $637 = +HEAPF64[$636>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $638 = (+__Z5IKsind($637)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $639 = -0.70710678118654802 * $638; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $640 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $641 = +HEAPF64[$640>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $642 = (+__Z5IKcosd($641)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $643 = -0.70710678118654802 * $642; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $644 = $639 + $643; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $645 = -1.0 * $644; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $646 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $647 = ((($646)) + 16|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $648 = +HEAPF64[$647>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $649 = (+__Z5IKsind($648)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $650 = $645 * $649; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $651 = $635 + $650; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $652 = -0.5 * $651; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $653 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $654 = ((($653)) + 24|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $655 = +HEAPF64[$654>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $656 = (+__Z5IKcosd($655)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $657 = $652 * $656; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $658 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $659 = +HEAPF64[$658>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $660 = (+__Z5IKsind($659)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $661 = -0.70710678118654802 * $660; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $662 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $663 = +HEAPF64[$662>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $664 = (+__Z5IKcosd($663)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $665 = 0.70710678118654802 * $664; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $666 = $661 + $665; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $667 = -0.5 * $666; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $668 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $669 = ((($668)) + 8|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $670 = +HEAPF64[$669>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $671 = (+__Z5IKsind($670)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $672 = $667 * $671; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $673 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $674 = ((($673)) + 24|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $675 = +HEAPF64[$674>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $676 = (+__Z5IKsind($675)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $677 = $672 * $676; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $678 = $657 + $677; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $679 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $680 = ((($679)) + 32|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $681 = +HEAPF64[$680>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $682 = (+__Z5IKsind($681)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $683 = $678 * $682; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $684 = $615 + $683; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $685 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $686 = ((($685)) + 48|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $687 = +HEAPF64[$686>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $688 = (+__Z5IKcosd($687)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $689 = $684 * $688; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $690 = $574 + $689; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $691 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $692 = ((($691)) + 32|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $693 = +HEAPF64[$692>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $694 = (+__Z5IKcosd($693)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $695 = 0.70710678118654802 * $694; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $696 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $697 = ((($696)) + 8|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $698 = +HEAPF64[$697>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $699 = (+__Z5IKsind($698)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $700 = $695 * $699; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $701 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $702 = ((($701)) + 16|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $703 = +HEAPF64[$702>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $704 = (+__Z5IKsind($703)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $705 = $700 * $704; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $706 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $707 = ((($706)) + 8|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $708 = +HEAPF64[$707>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $709 = (+__Z5IKcosd($708)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $710 = -1.0 * $709; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $711 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $712 = ((($711)) + 24|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $713 = +HEAPF64[$712>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $714 = (+__Z5IKsind($713)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $715 = $710 * $714; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $716 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $717 = ((($716)) + 16|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $718 = +HEAPF64[$717>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $719 = (+__Z5IKcosd($718)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $720 = -1.0 * $719; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $721 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $722 = ((($721)) + 24|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $723 = +HEAPF64[$722>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $724 = (+__Z5IKcosd($723)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $725 = $720 * $724; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $726 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $727 = ((($726)) + 8|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $728 = +HEAPF64[$727>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $729 = (+__Z5IKsind($728)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $730 = $725 * $729; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $731 = $715 + $730; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $732 = -0.70710678118654802 * $731; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $733 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $734 = ((($733)) + 32|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $735 = +HEAPF64[$734>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $736 = (+__Z5IKsind($735)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $737 = $732 * $736; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $738 = $705 + $737; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $739 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $740 = ((($739)) + 48|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $741 = +HEAPF64[$740>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $742 = (+__Z5IKcosd($741)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $743 = $738 * $742; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $744 = $690 + $743; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $745 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $746 = ((($745)) + 8|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $747 = +HEAPF64[$746>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $748 = (+__Z5IKsind($747)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $749 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $750 = ((($749)) + 16|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $751 = +HEAPF64[$750>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $752 = (+__Z5IKsind($751)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $753 = $748 * $752; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $754 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $755 = ((($754)) + 32|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $756 = +HEAPF64[$755>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $757 = (+__Z5IKsind($756)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $758 = $753 * $757; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $759 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $760 = ((($759)) + 8|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $761 = +HEAPF64[$760>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $762 = (+__Z5IKcosd($761)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $763 = -1.0 * $762; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $764 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $765 = ((($764)) + 24|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $766 = +HEAPF64[$765>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $767 = (+__Z5IKsind($766)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $768 = $763 * $767; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $769 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $770 = ((($769)) + 16|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $771 = +HEAPF64[$770>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $772 = (+__Z5IKcosd($771)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $773 = -1.0 * $772; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $774 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $775 = ((($774)) + 24|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $776 = +HEAPF64[$775>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $777 = (+__Z5IKcosd($776)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $778 = $773 * $777; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $779 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $780 = ((($779)) + 8|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $781 = +HEAPF64[$780>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $782 = (+__Z5IKsind($781)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $783 = $778 * $782; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $784 = $768 + $783; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $785 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $786 = ((($785)) + 32|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $787 = +HEAPF64[$786>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $788 = (+__Z5IKcosd($787)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $789 = $784 * $788; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $790 = $758 + $789; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $791 = -0.70710678118654802 * $790; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $792 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $793 = ((($792)) + 40|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $794 = +HEAPF64[$793>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $795 = (+__Z5IKcosd($794)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $796 = $791 * $795; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $797 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $798 = ((($797)) + 16|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $799 = +HEAPF64[$798>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $800 = (+__Z5IKcosd($799)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $801 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $802 = ((($801)) + 8|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $803 = +HEAPF64[$802>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $804 = (+__Z5IKsind($803)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $805 = $800 * $804; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $806 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $807 = ((($806)) + 24|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $808 = +HEAPF64[$807>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $809 = (+__Z5IKsind($808)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $810 = $805 * $809; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $811 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $812 = ((($811)) + 8|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $813 = +HEAPF64[$812>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $814 = (+__Z5IKcosd($813)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $815 = -1.0 * $814; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $816 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $817 = ((($816)) + 24|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $818 = +HEAPF64[$817>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $819 = (+__Z5IKcosd($818)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $820 = $815 * $819; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $821 = $810 + $820; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $822 = -0.70710678118654802 * $821; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $823 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $824 = ((($823)) + 40|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $825 = +HEAPF64[$824>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $826 = (+__Z5IKsind($825)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $827 = $822 * $826; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $828 = $796 + $827; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $829 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $830 = ((($829)) + 48|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $831 = +HEAPF64[$830>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $832 = (+__Z5IKsind($831)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $833 = $828 * $832; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $834 = $744 + $833; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $835 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $836 = +HEAPF64[$835>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $837 = (+__Z5IKcosd($836)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $838 = 0.70710678118654802 * $837; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $839 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $840 = +HEAPF64[$839>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $841 = (+__Z5IKsind($840)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $842 = 0.70710678118654802 * $841; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $843 = $838 + $842; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $844 = 0.5 * $843; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $845 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $846 = ((($845)) + 8|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $847 = +HEAPF64[$846>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $848 = (+__Z5IKsind($847)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $849 = $844 * $848; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $850 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $851 = ((($850)) + 24|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $852 = +HEAPF64[$851>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $853 = (+__Z5IKsind($852)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $854 = $849 * $853; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $855 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $856 = +HEAPF64[$855>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $857 = (+__Z5IKsind($856)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $858 = -0.70710678118654802 * $857; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $859 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $860 = +HEAPF64[$859>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $861 = (+__Z5IKcosd($860)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $862 = 0.70710678118654802 * $861; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $863 = $858 + $862; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $864 = -1.0 * $863; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $865 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $866 = ((($865)) + 16|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $867 = +HEAPF64[$866>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $868 = (+__Z5IKsind($867)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $869 = $864 * $868; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $870 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $871 = +HEAPF64[$870>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $872 = (+__Z5IKcosd($871)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $873 = 0.70710678118654802 * $872; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $874 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $875 = +HEAPF64[$874>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $876 = (+__Z5IKsind($875)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $877 = 0.70710678118654802 * $876; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $878 = $873 + $877; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $879 = -1.0 * $878; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $880 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $881 = ((($880)) + 8|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $882 = +HEAPF64[$881>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $883 = (+__Z5IKcosd($882)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $884 = $879 * $883; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $885 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $886 = ((($885)) + 16|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $887 = +HEAPF64[$886>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $888 = (+__Z5IKcosd($887)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $889 = $884 * $888; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $890 = $869 + $889; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $891 = 0.5 * $890; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $892 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $893 = ((($892)) + 24|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $894 = +HEAPF64[$893>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $895 = (+__Z5IKcosd($894)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $896 = $891 * $895; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $897 = $854 + $896; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $898 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $899 = ((($898)) + 32|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $900 = +HEAPF64[$899>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $901 = (+__Z5IKsind($900)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $902 = $897 * $901; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $903 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $904 = +HEAPF64[$903>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $905 = (+__Z5IKsind($904)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $906 = -0.70710678118654802 * $905; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $907 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $908 = +HEAPF64[$907>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $909 = (+__Z5IKcosd($908)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $910 = 0.70710678118654802 * $909; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $911 = $906 + $910; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $912 = 0.5 * $911; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $913 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $914 = ((($913)) + 16|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $915 = +HEAPF64[$914>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $916 = (+__Z5IKcosd($915)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $917 = $912 * $916; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $918 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $919 = +HEAPF64[$918>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $920 = (+__Z5IKsind($919)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $921 = -0.70710678118654802 * $920; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $922 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $923 = +HEAPF64[$922>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $924 = (+__Z5IKcosd($923)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $925 = -0.70710678118654802 * $924; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $926 = $921 + $925; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $927 = 0.5 * $926; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $928 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $929 = ((($928)) + 8|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $930 = +HEAPF64[$929>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $931 = (+__Z5IKcosd($930)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $932 = $927 * $931; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $933 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $934 = ((($933)) + 16|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $935 = +HEAPF64[$934>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $936 = (+__Z5IKsind($935)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $937 = $932 * $936; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $938 = $917 + $937; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $939 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $940 = ((($939)) + 32|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $941 = +HEAPF64[$940>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $942 = (+__Z5IKcosd($941)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $943 = $938 * $942; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $944 = $902 + $943; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $945 = $0; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $946 = ((($945)) + 48|0); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $947 = +HEAPF64[$946>>3]; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $948 = (+__Z5IKcosd($947)); //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $949 = $944 * $948; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $950 = $834 + $949; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $951 = $2; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 HEAPF64[$951>>3] = $950; //@line 348 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $952 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $953 = ((($952)) + 8|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $954 = +HEAPF64[$953>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $955 = (+__Z5IKsind($954)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $956 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $957 = ((($956)) + 16|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $958 = +HEAPF64[$957>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $959 = (+__Z5IKsind($958)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $960 = $955 * $959; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $961 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $962 = ((($961)) + 32|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $963 = +HEAPF64[$962>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $964 = (+__Z5IKsind($963)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $965 = $960 * $964; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $966 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $967 = ((($966)) + 8|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $968 = +HEAPF64[$967>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $969 = (+__Z5IKcosd($968)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $970 = -1.0 * $969; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $971 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $972 = ((($971)) + 24|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $973 = +HEAPF64[$972>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $974 = (+__Z5IKsind($973)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $975 = $970 * $974; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $976 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $977 = ((($976)) + 16|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $978 = +HEAPF64[$977>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $979 = (+__Z5IKcosd($978)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $980 = -1.0 * $979; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $981 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $982 = ((($981)) + 24|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $983 = +HEAPF64[$982>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $984 = (+__Z5IKcosd($983)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $985 = $980 * $984; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $986 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $987 = ((($986)) + 8|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $988 = +HEAPF64[$987>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $989 = (+__Z5IKsind($988)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $990 = $985 * $989; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $991 = $975 + $990; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $992 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $993 = ((($992)) + 32|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $994 = +HEAPF64[$993>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $995 = (+__Z5IKcosd($994)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $996 = $991 * $995; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $997 = $965 + $996; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $998 = -0.70710678118654802 * $997; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $999 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1000 = ((($999)) + 40|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1001 = +HEAPF64[$1000>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1002 = (+__Z5IKcosd($1001)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1003 = $998 * $1002; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1004 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1005 = ((($1004)) + 16|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1006 = +HEAPF64[$1005>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1007 = (+__Z5IKcosd($1006)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1008 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1009 = ((($1008)) + 8|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1010 = +HEAPF64[$1009>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1011 = (+__Z5IKsind($1010)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1012 = $1007 * $1011; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1013 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1014 = ((($1013)) + 24|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1015 = +HEAPF64[$1014>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1016 = (+__Z5IKsind($1015)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1017 = $1012 * $1016; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1018 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1019 = ((($1018)) + 8|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1020 = +HEAPF64[$1019>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1021 = (+__Z5IKcosd($1020)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1022 = -1.0 * $1021; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1023 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1024 = ((($1023)) + 24|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1025 = +HEAPF64[$1024>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1026 = (+__Z5IKcosd($1025)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1027 = $1022 * $1026; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1028 = $1017 + $1027; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1029 = -0.70710678118654802 * $1028; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1030 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1031 = ((($1030)) + 40|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1032 = +HEAPF64[$1031>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1033 = (+__Z5IKsind($1032)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1034 = $1029 * $1033; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1035 = $1003 + $1034; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1036 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1037 = ((($1036)) + 48|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1038 = +HEAPF64[$1037>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1039 = (+__Z5IKcosd($1038)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1040 = $1035 * $1039; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1041 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1042 = +HEAPF64[$1041>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1043 = (+__Z5IKsind($1042)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1044 = -0.70710678118654802 * $1043; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1045 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1046 = +HEAPF64[$1045>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1047 = (+__Z5IKcosd($1046)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1048 = -0.70710678118654802 * $1047; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1049 = $1044 + $1048; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1050 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1051 = ((($1050)) + 16|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1052 = +HEAPF64[$1051>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1053 = (+__Z5IKcosd($1052)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1054 = $1049 * $1053; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1055 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1056 = +HEAPF64[$1055>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1057 = (+__Z5IKcosd($1056)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1058 = -0.70710678118654802 * $1057; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1059 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1060 = +HEAPF64[$1059>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1061 = (+__Z5IKsind($1060)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1062 = 0.70710678118654802 * $1061; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1063 = $1058 + $1062; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1064 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1065 = ((($1064)) + 8|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1066 = +HEAPF64[$1065>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1067 = (+__Z5IKcosd($1066)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1068 = $1063 * $1067; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1069 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1070 = ((($1069)) + 16|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1071 = +HEAPF64[$1070>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1072 = (+__Z5IKsind($1071)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1073 = $1068 * $1072; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1074 = $1054 + $1073; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1075 = 0.5 * $1074; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1076 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1077 = ((($1076)) + 32|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1078 = +HEAPF64[$1077>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1079 = (+__Z5IKsind($1078)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1080 = $1075 * $1079; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1081 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1082 = +HEAPF64[$1081>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1083 = (+__Z5IKsind($1082)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1084 = -0.70710678118654802 * $1083; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1085 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1086 = +HEAPF64[$1085>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1087 = (+__Z5IKcosd($1086)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1088 = -0.70710678118654802 * $1087; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1089 = $1084 + $1088; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1090 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1091 = ((($1090)) + 16|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1092 = +HEAPF64[$1091>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1093 = (+__Z5IKsind($1092)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1094 = $1089 * $1093; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1095 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1096 = +HEAPF64[$1095>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1097 = (+__Z5IKsind($1096)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1098 = -0.70710678118654802 * $1097; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1099 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1100 = +HEAPF64[$1099>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1101 = (+__Z5IKcosd($1100)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1102 = 0.70710678118654802 * $1101; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1103 = $1098 + $1102; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1104 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1105 = ((($1104)) + 8|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1106 = +HEAPF64[$1105>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1107 = (+__Z5IKcosd($1106)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1108 = $1103 * $1107; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1109 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1110 = ((($1109)) + 16|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1111 = +HEAPF64[$1110>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1112 = (+__Z5IKcosd($1111)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1113 = $1108 * $1112; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1114 = $1094 + $1113; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1115 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1116 = ((($1115)) + 24|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1117 = +HEAPF64[$1116>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1118 = (+__Z5IKcosd($1117)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1119 = $1114 * $1118; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1120 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1121 = +HEAPF64[$1120>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1122 = (+__Z5IKcosd($1121)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1123 = -0.70710678118654802 * $1122; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1124 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1125 = +HEAPF64[$1124>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1126 = (+__Z5IKsind($1125)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1127 = 0.70710678118654802 * $1126; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1128 = $1123 + $1127; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1129 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1130 = ((($1129)) + 8|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1131 = +HEAPF64[$1130>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1132 = (+__Z5IKsind($1131)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1133 = $1128 * $1132; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1134 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1135 = ((($1134)) + 24|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1136 = +HEAPF64[$1135>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1137 = (+__Z5IKsind($1136)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1138 = $1133 * $1137; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1139 = $1119 + $1138; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1140 = 0.5 * $1139; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1141 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1142 = ((($1141)) + 32|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1143 = +HEAPF64[$1142>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1144 = (+__Z5IKcosd($1143)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1145 = $1140 * $1144; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1146 = $1080 + $1145; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1147 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1148 = ((($1147)) + 40|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1149 = +HEAPF64[$1148>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1150 = (+__Z5IKcosd($1149)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1151 = $1146 * $1150; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1152 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1153 = +HEAPF64[$1152>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1154 = (+__Z5IKcosd($1153)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1155 = -0.70710678118654802 * $1154; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1156 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1157 = +HEAPF64[$1156>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1158 = (+__Z5IKsind($1157)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1159 = 0.70710678118654802 * $1158; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1160 = $1155 + $1159; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1161 = 0.5 * $1160; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1162 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1163 = ((($1162)) + 24|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1164 = +HEAPF64[$1163>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1165 = (+__Z5IKcosd($1164)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1166 = $1161 * $1165; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1167 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1168 = ((($1167)) + 8|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1169 = +HEAPF64[$1168>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1170 = (+__Z5IKsind($1169)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1171 = $1166 * $1170; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1172 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1173 = +HEAPF64[$1172>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1174 = (+__Z5IKcosd($1173)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1175 = 0.70710678118654802 * $1174; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1176 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1177 = +HEAPF64[$1176>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1178 = (+__Z5IKsind($1177)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1179 = 0.70710678118654802 * $1178; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1180 = $1175 + $1179; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1181 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1182 = ((($1181)) + 16|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1183 = +HEAPF64[$1182>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1184 = (+__Z5IKsind($1183)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1185 = $1180 * $1184; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1186 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1187 = +HEAPF64[$1186>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1188 = (+__Z5IKcosd($1187)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1189 = -0.70710678118654802 * $1188; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1190 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1191 = +HEAPF64[$1190>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1192 = (+__Z5IKsind($1191)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1193 = 0.70710678118654802 * $1192; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1194 = $1189 + $1193; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1195 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1196 = ((($1195)) + 8|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1197 = +HEAPF64[$1196>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1198 = (+__Z5IKcosd($1197)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1199 = $1194 * $1198; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1200 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1201 = ((($1200)) + 16|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1202 = +HEAPF64[$1201>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1203 = (+__Z5IKcosd($1202)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1204 = $1199 * $1203; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1205 = $1185 + $1204; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1206 = 0.5 * $1205; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1207 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1208 = ((($1207)) + 24|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1209 = +HEAPF64[$1208>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1210 = (+__Z5IKsind($1209)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1211 = $1206 * $1210; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1212 = $1171 + $1211; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1213 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1214 = ((($1213)) + 40|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1215 = +HEAPF64[$1214>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1216 = (+__Z5IKsind($1215)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1217 = $1212 * $1216; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1218 = $1151 + $1217; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1219 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1220 = ((($1219)) + 48|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1221 = +HEAPF64[$1220>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1222 = (+__Z5IKcosd($1221)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1223 = $1218 * $1222; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1224 = $1040 + $1223; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1225 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1226 = +HEAPF64[$1225>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1227 = (+__Z5IKsind($1226)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1228 = -0.70710678118654802 * $1227; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1229 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1230 = +HEAPF64[$1229>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1231 = (+__Z5IKcosd($1230)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1232 = -0.70710678118654802 * $1231; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1233 = $1228 + $1232; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1234 = -0.5 * $1233; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1235 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1236 = ((($1235)) + 24|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1237 = +HEAPF64[$1236>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1238 = (+__Z5IKcosd($1237)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1239 = $1234 * $1238; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1240 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1241 = ((($1240)) + 8|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1242 = +HEAPF64[$1241>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1243 = (+__Z5IKsind($1242)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1244 = $1239 * $1243; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1245 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1246 = +HEAPF64[$1245>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1247 = (+__Z5IKcosd($1246)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1248 = -0.70710678118654802 * $1247; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1249 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1250 = +HEAPF64[$1249>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1251 = (+__Z5IKsind($1250)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1252 = 0.70710678118654802 * $1251; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1253 = $1248 + $1252; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1254 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1255 = ((($1254)) + 16|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1256 = +HEAPF64[$1255>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1257 = (+__Z5IKsind($1256)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1258 = $1253 * $1257; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1259 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1260 = +HEAPF64[$1259>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1261 = (+__Z5IKsind($1260)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1262 = -0.70710678118654802 * $1261; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1263 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1264 = +HEAPF64[$1263>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1265 = (+__Z5IKcosd($1264)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1266 = -0.70710678118654802 * $1265; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1267 = $1262 + $1266; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1268 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1269 = ((($1268)) + 8|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1270 = +HEAPF64[$1269>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1271 = (+__Z5IKcosd($1270)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1272 = $1267 * $1271; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1273 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1274 = ((($1273)) + 16|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1275 = +HEAPF64[$1274>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1276 = (+__Z5IKcosd($1275)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1277 = $1272 * $1276; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1278 = $1258 + $1277; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1279 = -0.5 * $1278; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1280 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1281 = ((($1280)) + 24|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1282 = +HEAPF64[$1281>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1283 = (+__Z5IKsind($1282)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1284 = $1279 * $1283; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1285 = $1244 + $1284; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1286 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1287 = ((($1286)) + 40|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1288 = +HEAPF64[$1287>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1289 = (+__Z5IKsind($1288)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1290 = $1285 * $1289; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1291 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1292 = +HEAPF64[$1291>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1293 = (+__Z5IKsind($1292)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1294 = -0.70710678118654802 * $1293; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1295 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1296 = +HEAPF64[$1295>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1297 = (+__Z5IKcosd($1296)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1298 = -0.70710678118654802 * $1297; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1299 = $1294 + $1298; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1300 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1301 = ((($1300)) + 8|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1302 = +HEAPF64[$1301>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1303 = (+__Z5IKcosd($1302)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1304 = $1299 * $1303; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1305 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1306 = ((($1305)) + 16|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1307 = +HEAPF64[$1306>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1308 = (+__Z5IKsind($1307)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1309 = $1304 * $1308; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1310 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1311 = +HEAPF64[$1310>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1312 = (+__Z5IKsind($1311)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1313 = -0.70710678118654802 * $1312; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1314 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1315 = +HEAPF64[$1314>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1316 = (+__Z5IKcosd($1315)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1317 = 0.70710678118654802 * $1316; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1318 = $1313 + $1317; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1319 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1320 = ((($1319)) + 16|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1321 = +HEAPF64[$1320>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1322 = (+__Z5IKcosd($1321)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1323 = $1318 * $1322; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1324 = $1309 + $1323; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1325 = -0.5 * $1324; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1326 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1327 = ((($1326)) + 32|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1328 = +HEAPF64[$1327>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1329 = (+__Z5IKsind($1328)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1330 = $1325 * $1329; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1331 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1332 = +HEAPF64[$1331>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1333 = (+__Z5IKcosd($1332)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1334 = 0.70710678118654802 * $1333; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1335 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1336 = +HEAPF64[$1335>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1337 = (+__Z5IKsind($1336)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1338 = 0.70710678118654802 * $1337; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1339 = $1334 + $1338; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1340 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1341 = ((($1340)) + 8|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1342 = +HEAPF64[$1341>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1343 = (+__Z5IKcosd($1342)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1344 = $1339 * $1343; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1345 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1346 = ((($1345)) + 16|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1347 = +HEAPF64[$1346>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1348 = (+__Z5IKcosd($1347)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1349 = $1344 * $1348; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1350 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1351 = +HEAPF64[$1350>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1352 = (+__Z5IKsind($1351)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1353 = -0.70710678118654802 * $1352; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1354 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1355 = +HEAPF64[$1354>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1356 = (+__Z5IKcosd($1355)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1357 = 0.70710678118654802 * $1356; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1358 = $1353 + $1357; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1359 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1360 = ((($1359)) + 16|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1361 = +HEAPF64[$1360>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1362 = (+__Z5IKsind($1361)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1363 = $1358 * $1362; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1364 = $1349 + $1363; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1365 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1366 = ((($1365)) + 24|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1367 = +HEAPF64[$1366>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1368 = (+__Z5IKcosd($1367)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1369 = $1364 * $1368; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1370 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1371 = +HEAPF64[$1370>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1372 = (+__Z5IKsind($1371)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1373 = -0.70710678118654802 * $1372; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1374 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1375 = +HEAPF64[$1374>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1376 = (+__Z5IKcosd($1375)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1377 = -0.70710678118654802 * $1376; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1378 = $1373 + $1377; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1379 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1380 = ((($1379)) + 8|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1381 = +HEAPF64[$1380>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1382 = (+__Z5IKsind($1381)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1383 = $1378 * $1382; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1384 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1385 = ((($1384)) + 24|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1386 = +HEAPF64[$1385>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1387 = (+__Z5IKsind($1386)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1388 = $1383 * $1387; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1389 = $1369 + $1388; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1390 = -0.5 * $1389; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1391 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1392 = ((($1391)) + 32|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1393 = +HEAPF64[$1392>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1394 = (+__Z5IKcosd($1393)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1395 = $1390 * $1394; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1396 = $1330 + $1395; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1397 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1398 = ((($1397)) + 40|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1399 = +HEAPF64[$1398>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1400 = (+__Z5IKcosd($1399)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1401 = $1396 * $1400; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1402 = $1290 + $1401; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1403 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1404 = ((($1403)) + 48|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1405 = +HEAPF64[$1404>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1406 = (+__Z5IKcosd($1405)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1407 = $1402 * $1406; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1408 = $1224 + $1407; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1409 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1410 = ((($1409)) + 32|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1411 = +HEAPF64[$1410>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1412 = (+__Z5IKcosd($1411)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1413 = -0.70710678118654802 * $1412; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1414 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1415 = ((($1414)) + 8|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1416 = +HEAPF64[$1415>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1417 = (+__Z5IKsind($1416)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1418 = $1413 * $1417; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1419 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1420 = ((($1419)) + 16|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1421 = +HEAPF64[$1420>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1422 = (+__Z5IKsind($1421)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1423 = $1418 * $1422; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1424 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1425 = ((($1424)) + 16|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1426 = +HEAPF64[$1425>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1427 = (+__Z5IKcosd($1426)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1428 = 1.0 * $1427; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1429 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1430 = ((($1429)) + 24|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1431 = +HEAPF64[$1430>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1432 = (+__Z5IKcosd($1431)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1433 = $1428 * $1432; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1434 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1435 = ((($1434)) + 8|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1436 = +HEAPF64[$1435>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1437 = (+__Z5IKsind($1436)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1438 = $1433 * $1437; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1439 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1440 = ((($1439)) + 8|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1441 = +HEAPF64[$1440>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1442 = (+__Z5IKcosd($1441)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1443 = 1.0 * $1442; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1444 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1445 = ((($1444)) + 24|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1446 = +HEAPF64[$1445>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1447 = (+__Z5IKsind($1446)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1448 = $1443 * $1447; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1449 = $1438 + $1448; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1450 = -0.70710678118654802 * $1449; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1451 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1452 = ((($1451)) + 32|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1453 = +HEAPF64[$1452>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1454 = (+__Z5IKsind($1453)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1455 = $1450 * $1454; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1456 = $1423 + $1455; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1457 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1458 = ((($1457)) + 48|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1459 = +HEAPF64[$1458>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1460 = (+__Z5IKsind($1459)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1461 = $1456 * $1460; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1462 = $1408 + $1461; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1463 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1464 = +HEAPF64[$1463>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1465 = (+__Z5IKcosd($1464)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1466 = -0.70710678118654802 * $1465; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1467 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1468 = +HEAPF64[$1467>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1469 = (+__Z5IKsind($1468)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1470 = 0.70710678118654802 * $1469; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1471 = $1466 + $1470; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1472 = 0.5 * $1471; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1473 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1474 = ((($1473)) + 8|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1475 = +HEAPF64[$1474>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1476 = (+__Z5IKcosd($1475)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1477 = $1472 * $1476; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1478 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1479 = ((($1478)) + 16|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1480 = +HEAPF64[$1479>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1481 = (+__Z5IKsind($1480)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1482 = $1477 * $1481; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1483 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1484 = +HEAPF64[$1483>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1485 = (+__Z5IKsind($1484)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1486 = -0.70710678118654802 * $1485; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1487 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1488 = +HEAPF64[$1487>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1489 = (+__Z5IKcosd($1488)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1490 = -0.70710678118654802 * $1489; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1491 = $1486 + $1490; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1492 = 0.5 * $1491; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1493 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1494 = ((($1493)) + 16|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1495 = +HEAPF64[$1494>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1496 = (+__Z5IKcosd($1495)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1497 = $1492 * $1496; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1498 = $1482 + $1497; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1499 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1500 = ((($1499)) + 32|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1501 = +HEAPF64[$1500>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1502 = (+__Z5IKcosd($1501)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1503 = $1498 * $1502; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1504 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1505 = +HEAPF64[$1504>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1506 = (+__Z5IKsind($1505)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1507 = -0.70710678118654802 * $1506; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1508 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1509 = +HEAPF64[$1508>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1510 = (+__Z5IKcosd($1509)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1511 = 0.70710678118654802 * $1510; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1512 = $1507 + $1511; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1513 = -1.0 * $1512; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1514 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1515 = ((($1514)) + 8|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1516 = +HEAPF64[$1515>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1517 = (+__Z5IKcosd($1516)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1518 = $1513 * $1517; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1519 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1520 = ((($1519)) + 16|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1521 = +HEAPF64[$1520>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1522 = (+__Z5IKcosd($1521)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1523 = $1518 * $1522; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1524 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1525 = +HEAPF64[$1524>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1526 = (+__Z5IKsind($1525)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1527 = -0.70710678118654802 * $1526; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1528 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1529 = +HEAPF64[$1528>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1530 = (+__Z5IKcosd($1529)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1531 = -0.70710678118654802 * $1530; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1532 = $1527 + $1531; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1533 = -1.0 * $1532; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1534 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1535 = ((($1534)) + 16|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1536 = +HEAPF64[$1535>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1537 = (+__Z5IKsind($1536)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1538 = $1533 * $1537; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1539 = $1523 + $1538; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1540 = 0.5 * $1539; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1541 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1542 = ((($1541)) + 24|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1543 = +HEAPF64[$1542>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1544 = (+__Z5IKcosd($1543)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1545 = $1540 * $1544; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1546 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1547 = +HEAPF64[$1546>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1548 = (+__Z5IKsind($1547)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1549 = -0.70710678118654802 * $1548; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1550 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1551 = +HEAPF64[$1550>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1552 = (+__Z5IKcosd($1551)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1553 = 0.70710678118654802 * $1552; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1554 = $1549 + $1553; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1555 = 0.5 * $1554; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1556 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1557 = ((($1556)) + 8|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1558 = +HEAPF64[$1557>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1559 = (+__Z5IKsind($1558)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1560 = $1555 * $1559; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1561 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1562 = ((($1561)) + 24|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1563 = +HEAPF64[$1562>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1564 = (+__Z5IKsind($1563)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1565 = $1560 * $1564; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1566 = $1545 + $1565; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1567 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1568 = ((($1567)) + 32|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1569 = +HEAPF64[$1568>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1570 = (+__Z5IKsind($1569)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1571 = $1566 * $1570; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1572 = $1503 + $1571; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1573 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1574 = ((($1573)) + 48|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1575 = +HEAPF64[$1574>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1576 = (+__Z5IKsind($1575)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1577 = $1572 * $1576; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1578 = $1462 + $1577; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1579 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1580 = +HEAPF64[$1579>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1581 = (+__Z5IKsind($1580)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1582 = -0.70710678118654802 * $1581; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1583 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1584 = +HEAPF64[$1583>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1585 = (+__Z5IKcosd($1584)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1586 = 0.70710678118654802 * $1585; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1587 = $1582 + $1586; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1588 = -1.0 * $1587; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1589 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1590 = ((($1589)) + 16|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1591 = +HEAPF64[$1590>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1592 = (+__Z5IKsind($1591)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1593 = $1588 * $1592; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1594 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1595 = +HEAPF64[$1594>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1596 = (+__Z5IKcosd($1595)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1597 = 0.70710678118654802 * $1596; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1598 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1599 = +HEAPF64[$1598>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1600 = (+__Z5IKsind($1599)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1601 = 0.70710678118654802 * $1600; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1602 = $1597 + $1601; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1603 = -1.0 * $1602; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1604 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1605 = ((($1604)) + 8|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1606 = +HEAPF64[$1605>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1607 = (+__Z5IKcosd($1606)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1608 = $1603 * $1607; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1609 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1610 = ((($1609)) + 16|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1611 = +HEAPF64[$1610>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1612 = (+__Z5IKcosd($1611)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1613 = $1608 * $1612; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1614 = $1593 + $1613; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1615 = -0.5 * $1614; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1616 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1617 = ((($1616)) + 24|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1618 = +HEAPF64[$1617>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1619 = (+__Z5IKcosd($1618)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1620 = $1615 * $1619; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1621 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1622 = +HEAPF64[$1621>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1623 = (+__Z5IKcosd($1622)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1624 = 0.70710678118654802 * $1623; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1625 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1626 = +HEAPF64[$1625>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1627 = (+__Z5IKsind($1626)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1628 = 0.70710678118654802 * $1627; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1629 = $1624 + $1628; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1630 = -0.5 * $1629; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1631 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1632 = ((($1631)) + 8|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1633 = +HEAPF64[$1632>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1634 = (+__Z5IKsind($1633)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1635 = $1630 * $1634; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1636 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1637 = ((($1636)) + 24|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1638 = +HEAPF64[$1637>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1639 = (+__Z5IKsind($1638)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1640 = $1635 * $1639; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1641 = $1620 + $1640; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1642 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1643 = ((($1642)) + 32|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1644 = +HEAPF64[$1643>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1645 = (+__Z5IKsind($1644)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1646 = $1641 * $1645; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1647 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1648 = +HEAPF64[$1647>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1649 = (+__Z5IKsind($1648)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1650 = -0.70710678118654802 * $1649; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1651 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1652 = +HEAPF64[$1651>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1653 = (+__Z5IKcosd($1652)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1654 = -0.70710678118654802 * $1653; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1655 = $1650 + $1654; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1656 = -0.5 * $1655; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1657 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1658 = ((($1657)) + 8|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1659 = +HEAPF64[$1658>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1660 = (+__Z5IKcosd($1659)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1661 = $1656 * $1660; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1662 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1663 = ((($1662)) + 16|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1664 = +HEAPF64[$1663>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1665 = (+__Z5IKsind($1664)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1666 = $1661 * $1665; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1667 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1668 = +HEAPF64[$1667>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1669 = (+__Z5IKsind($1668)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1670 = -0.70710678118654802 * $1669; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1671 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1672 = +HEAPF64[$1671>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1673 = (+__Z5IKcosd($1672)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1674 = 0.70710678118654802 * $1673; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1675 = $1670 + $1674; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1676 = -0.5 * $1675; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1677 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1678 = ((($1677)) + 16|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1679 = +HEAPF64[$1678>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1680 = (+__Z5IKcosd($1679)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1681 = $1676 * $1680; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1682 = $1666 + $1681; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1683 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1684 = ((($1683)) + 32|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1685 = +HEAPF64[$1684>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1686 = (+__Z5IKcosd($1685)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1687 = $1682 * $1686; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1688 = $1646 + $1687; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1689 = $0; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1690 = ((($1689)) + 48|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1691 = +HEAPF64[$1690>>3]; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1692 = (+__Z5IKsind($1691)); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1693 = $1688 * $1692; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1694 = $1578 + $1693; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1695 = $2; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1696 = ((($1695)) + 8|0); //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 HEAPF64[$1696>>3] = $1694; //@line 349 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1697 = $x23; //@line 350 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1698 = 0.5 * $1697; //@line 350 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $x47 = $1698; //@line 350 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1699 = $x7; //@line 351 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1700 = $x26; //@line 351 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1701 = $x42; //@line 351 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1702 = $1700 * $1701; //@line 351 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1703 = $x22; //@line 351 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1704 = $x36; //@line 351 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1705 = $1703 * $1704; //@line 351 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1706 = $1702 + $1705; //@line 351 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1707 = $1699 * $1706; //@line 351 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1708 = $x6; //@line 351 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1709 = $x14; //@line 351 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1710 = $x37; //@line 351 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1711 = $1709 * $1710; //@line 351 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1712 = $x31; //@line 351 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1713 = $x47; //@line 351 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1714 = $1712 * $1713; //@line 351 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1715 = $1711 + $1714; //@line 351 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1716 = $1708 * $1715; //@line 351 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1717 = $1707 + $1716; //@line 351 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1718 = $x44; //@line 351 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1719 = -1.0 * $1718; //@line 351 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1720 = $1717 + $1719; //@line 351 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1721 = $x7; //@line 351 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1722 = $x17; //@line 351 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1723 = $x35; //@line 351 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1724 = $1722 * $1723; //@line 351 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1725 = $x15; //@line 351 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1726 = $x41; //@line 351 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1727 = $1725 * $1726; //@line 351 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1728 = $1724 + $1727; //@line 351 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1729 = $1721 * $1728; //@line 351 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1730 = $1720 + $1729; //@line 351 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1731 = $x6; //@line 351 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1732 = $x29; //@line 351 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1733 = -1.0 * $1732; //@line 351 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1734 = $x47; //@line 351 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1735 = $1733 * $1734; //@line 351 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1736 = $x27; //@line 351 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1737 = $x39; //@line 351 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1738 = $1736 * $1737; //@line 351 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1739 = $1735 + $1738; //@line 351 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1740 = $1731 * $1739; //@line 351 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1741 = $1730 + $1740; //@line 351 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1742 = $2; //@line 351 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1743 = ((($1742)) + 16|0); //@line 351 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 HEAPF64[$1743>>3] = $1741; //@line 351 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1744 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1745 = +HEAPF64[$1744>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1746 = (+__Z5IKcosd($1745)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1747 = 0.015909902576697301 * $1746; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1748 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1749 = +HEAPF64[$1748>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1750 = (+__Z5IKsind($1749)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1751 = 0.015909902576697301 * $1750; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1752 = $1747 + $1751; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1753 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1754 = ((($1753)) + 16|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1755 = +HEAPF64[$1754>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1756 = (+__Z5IKsind($1755)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1757 = $1752 * $1756; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1758 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1759 = +HEAPF64[$1758>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1760 = (+__Z5IKcosd($1759)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1761 = -0.015909902576697301 * $1760; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1762 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1763 = +HEAPF64[$1762>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1764 = (+__Z5IKsind($1763)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1765 = 0.015909902576697301 * $1764; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1766 = $1761 + $1765; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1767 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1768 = ((($1767)) + 8|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1769 = +HEAPF64[$1768>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1770 = (+__Z5IKcosd($1769)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1771 = $1766 * $1770; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1772 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1773 = ((($1772)) + 16|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1774 = +HEAPF64[$1773>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1775 = (+__Z5IKcosd($1774)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1776 = $1771 * $1775; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1777 = $1757 + $1776; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1778 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1779 = ((($1778)) + 24|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1780 = +HEAPF64[$1779>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1781 = (+__Z5IKcosd($1780)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1782 = $1777 * $1781; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1783 = -0.35017700000000002 + $1782; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1784 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1785 = +HEAPF64[$1784>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1786 = (+__Z5IKsind($1785)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1787 = -0.19445436482630099 * $1786; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1788 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1789 = +HEAPF64[$1788>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1790 = (+__Z5IKcosd($1789)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1791 = -0.19445436482630099 * $1790; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1792 = $1787 + $1791; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1793 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1794 = ((($1793)) + 8|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1795 = +HEAPF64[$1794>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1796 = (+__Z5IKsind($1795)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1797 = $1792 * $1796; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1798 = $1783 + $1797; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1799 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1800 = ((($1799)) + 8|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1801 = +HEAPF64[$1800>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1802 = (+__Z5IKcosd($1801)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1803 = -0.031819805153394602 * $1802; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1804 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1805 = ((($1804)) + 24|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1806 = +HEAPF64[$1805>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1807 = (+__Z5IKsind($1806)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1808 = $1803 * $1807; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1809 = $1798 + $1808; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1810 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1811 = +HEAPF64[$1810>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1812 = (+__Z5IKsind($1811)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1813 = -0.19445436482630099 * $1812; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1814 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1815 = +HEAPF64[$1814>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1816 = (+__Z5IKcosd($1815)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1817 = 0.19445436482630099 * $1816; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1818 = $1813 + $1817; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1819 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1820 = ((($1819)) + 8|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1821 = +HEAPF64[$1820>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1822 = (+__Z5IKsind($1821)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1823 = $1818 * $1822; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1824 = $1809 + $1823; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1825 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1826 = ((($1825)) + 8|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1827 = +HEAPF64[$1826>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1828 = (+__Z5IKcosd($1827)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1829 = -0.38890872965260098 * $1828; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1830 = $1824 + $1829; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1831 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1832 = +HEAPF64[$1831>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1833 = (+__Z5IKsind($1832)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1834 = -0.106066017177982 * $1833; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1835 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1836 = +HEAPF64[$1835>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1837 = (+__Z5IKcosd($1836)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1838 = -0.106066017177982 * $1837; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1839 = $1834 + $1838; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1840 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1841 = ((($1840)) + 24|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1842 = +HEAPF64[$1841>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1843 = (+__Z5IKcosd($1842)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1844 = $1839 * $1843; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1845 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1846 = ((($1845)) + 8|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1847 = +HEAPF64[$1846>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1848 = (+__Z5IKsind($1847)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1849 = $1844 * $1848; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1850 = $1830 + $1849; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1851 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1852 = +HEAPF64[$1851>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1853 = (+__Z5IKcosd($1852)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1854 = 0.015909902576697301 * $1853; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1855 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1856 = +HEAPF64[$1855>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1857 = (+__Z5IKsind($1856)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1858 = -0.015909902576697301 * $1857; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1859 = $1854 + $1858; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1860 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1861 = ((($1860)) + 16|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1862 = +HEAPF64[$1861>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1863 = (+__Z5IKsind($1862)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1864 = $1859 * $1863; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1865 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1866 = +HEAPF64[$1865>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1867 = (+__Z5IKcosd($1866)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1868 = 0.015909902576697301 * $1867; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1869 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1870 = +HEAPF64[$1869>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1871 = (+__Z5IKsind($1870)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1872 = 0.015909902576697301 * $1871; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1873 = $1868 + $1872; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1874 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1875 = ((($1874)) + 8|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1876 = +HEAPF64[$1875>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1877 = (+__Z5IKcosd($1876)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1878 = $1873 * $1877; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1879 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1880 = ((($1879)) + 16|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1881 = +HEAPF64[$1880>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1882 = (+__Z5IKcosd($1881)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1883 = $1878 * $1882; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1884 = $1864 + $1883; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1885 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1886 = ((($1885)) + 24|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1887 = +HEAPF64[$1886>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1888 = (+__Z5IKcosd($1887)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1889 = $1884 * $1888; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1890 = $1850 + $1889; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1891 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1892 = +HEAPF64[$1891>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1893 = (+__Z5IKcosd($1892)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1894 = -0.70710678118654802 * $1893; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1895 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1896 = +HEAPF64[$1895>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1897 = (+__Z5IKsind($1896)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1898 = 0.70710678118654802 * $1897; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1899 = $1894 + $1898; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1900 = -0.023975 * $1899; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1901 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1902 = ((($1901)) + 8|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1903 = +HEAPF64[$1902>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1904 = (+__Z5IKcosd($1903)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1905 = $1900 * $1904; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1906 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1907 = ((($1906)) + 16|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1908 = +HEAPF64[$1907>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1909 = (+__Z5IKcosd($1908)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1910 = $1905 * $1909; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1911 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1912 = +HEAPF64[$1911>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1913 = (+__Z5IKcosd($1912)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1914 = 0.70710678118654802 * $1913; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1915 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1916 = +HEAPF64[$1915>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1917 = (+__Z5IKsind($1916)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1918 = 0.70710678118654802 * $1917; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1919 = $1914 + $1918; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1920 = -0.023975 * $1919; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1921 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1922 = ((($1921)) + 16|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1923 = +HEAPF64[$1922>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1924 = (+__Z5IKsind($1923)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1925 = $1920 * $1924; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1926 = $1910 + $1925; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1927 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1928 = ((($1927)) + 24|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1929 = +HEAPF64[$1928>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1930 = (+__Z5IKsind($1929)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1931 = $1926 * $1930; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1932 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1933 = +HEAPF64[$1932>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1934 = (+__Z5IKcosd($1933)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1935 = 0.016952885078947499 * $1934; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1936 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1937 = +HEAPF64[$1936>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1938 = (+__Z5IKsind($1937)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1939 = -0.016952885078947499 * $1938; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1940 = $1935 + $1939; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1941 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1942 = ((($1941)) + 24|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1943 = +HEAPF64[$1942>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1944 = (+__Z5IKcosd($1943)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1945 = $1940 * $1944; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1946 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1947 = ((($1946)) + 8|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1948 = +HEAPF64[$1947>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1949 = (+__Z5IKsind($1948)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1950 = $1945 * $1949; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1951 = $1931 + $1950; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1952 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1953 = ((($1952)) + 40|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1954 = +HEAPF64[$1953>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1955 = (+__Z5IKcosd($1954)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1956 = $1951 * $1955; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1957 = $1890 + $1956; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1958 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1959 = +HEAPF64[$1958>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1960 = (+__Z5IKsind($1959)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1961 = -0.106066017177982 * $1960; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1962 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1963 = +HEAPF64[$1962>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1964 = (+__Z5IKcosd($1963)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1965 = 0.106066017177982 * $1964; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1966 = $1961 + $1965; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1967 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1968 = ((($1967)) + 24|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1969 = +HEAPF64[$1968>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1970 = (+__Z5IKcosd($1969)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1971 = $1966 * $1970; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1972 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1973 = ((($1972)) + 8|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1974 = +HEAPF64[$1973>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1975 = (+__Z5IKsind($1974)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1976 = $1971 * $1975; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1977 = $1957 + $1976; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1978 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1979 = +HEAPF64[$1978>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1980 = (+__Z5IKsind($1979)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1981 = -0.70710678118654802 * $1980; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1982 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1983 = +HEAPF64[$1982>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1984 = (+__Z5IKcosd($1983)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1985 = -0.70710678118654802 * $1984; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1986 = $1981 + $1985; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1987 = 0.023975 * $1986; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1988 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1989 = ((($1988)) + 8|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1990 = +HEAPF64[$1989>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1991 = (+__Z5IKcosd($1990)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1992 = $1987 * $1991; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1993 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1994 = ((($1993)) + 16|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1995 = +HEAPF64[$1994>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1996 = (+__Z5IKcosd($1995)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1997 = $1992 * $1996; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1998 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1999 = +HEAPF64[$1998>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2000 = (+__Z5IKcosd($1999)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2001 = -0.70710678118654802 * $2000; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2002 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2003 = +HEAPF64[$2002>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2004 = (+__Z5IKsind($2003)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2005 = 0.70710678118654802 * $2004; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2006 = $2001 + $2005; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2007 = 0.023975 * $2006; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2008 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2009 = ((($2008)) + 16|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2010 = +HEAPF64[$2009>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2011 = (+__Z5IKsind($2010)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2012 = $2007 * $2011; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2013 = $1997 + $2012; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2014 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2015 = ((($2014)) + 24|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2016 = +HEAPF64[$2015>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2017 = (+__Z5IKsind($2016)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2018 = $2013 * $2017; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2019 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2020 = +HEAPF64[$2019>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2021 = (+__Z5IKcosd($2020)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2022 = -0.016952885078947499 * $2021; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2023 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2024 = +HEAPF64[$2023>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2025 = (+__Z5IKsind($2024)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2026 = -0.016952885078947499 * $2025; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2027 = $2022 + $2026; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2028 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2029 = ((($2028)) + 24|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2030 = +HEAPF64[$2029>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2031 = (+__Z5IKcosd($2030)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2032 = $2027 * $2031; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2033 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2034 = ((($2033)) + 8|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2035 = +HEAPF64[$2034>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2036 = (+__Z5IKsind($2035)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2037 = $2032 * $2036; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2038 = $2018 + $2037; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2039 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2040 = ((($2039)) + 40|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2041 = +HEAPF64[$2040>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2042 = (+__Z5IKcosd($2041)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2043 = $2038 * $2042; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2044 = $1977 + $2043; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2045 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2046 = +HEAPF64[$2045>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2047 = (+__Z5IKcosd($2046)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2048 = 0.015909902576697301 * $2047; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2049 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2050 = +HEAPF64[$2049>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2051 = (+__Z5IKsind($2050)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2052 = -0.015909902576697301 * $2051; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2053 = $2048 + $2052; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2054 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2055 = ((($2054)) + 8|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2056 = +HEAPF64[$2055>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2057 = (+__Z5IKcosd($2056)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2058 = $2053 * $2057; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2059 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2060 = ((($2059)) + 16|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2061 = +HEAPF64[$2060>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2062 = (+__Z5IKcosd($2061)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2063 = $2058 * $2062; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2064 = $2044 + $2063; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2065 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2066 = +HEAPF64[$2065>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2067 = (+__Z5IKcosd($2066)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2068 = -0.015909902576697301 * $2067; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2069 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2070 = +HEAPF64[$2069>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2071 = (+__Z5IKsind($2070)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2072 = -0.015909902576697301 * $2071; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2073 = $2068 + $2072; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2074 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2075 = ((($2074)) + 8|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2076 = +HEAPF64[$2075>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2077 = (+__Z5IKsind($2076)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2078 = $2073 * $2077; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2079 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2080 = ((($2079)) + 24|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2081 = +HEAPF64[$2080>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2082 = (+__Z5IKsind($2081)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2083 = $2078 * $2082; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2084 = $2064 + $2083; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2085 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2086 = ((($2085)) + 16|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2087 = +HEAPF64[$2086>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2088 = (+__Z5IKcosd($2087)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2089 = 0.21213203435596401 * $2088; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2090 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2091 = ((($2090)) + 8|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2092 = +HEAPF64[$2091>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2093 = (+__Z5IKsind($2092)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2094 = $2089 * $2093; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2095 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2096 = ((($2095)) + 24|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2097 = +HEAPF64[$2096>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2098 = (+__Z5IKsind($2097)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2099 = $2094 * $2098; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2100 = $2084 + $2099; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2101 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2102 = ((($2101)) + 16|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2103 = +HEAPF64[$2102>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2104 = (+__Z5IKcosd($2103)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2105 = -0.031819805153394602 * $2104; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2106 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2107 = ((($2106)) + 24|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2108 = +HEAPF64[$2107>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2109 = (+__Z5IKcosd($2108)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2110 = $2105 * $2109; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2111 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2112 = ((($2111)) + 8|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2113 = +HEAPF64[$2112>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2114 = (+__Z5IKsind($2113)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2115 = $2110 * $2114; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2116 = $2100 + $2115; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2117 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2118 = +HEAPF64[$2117>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2119 = (+__Z5IKcosd($2118)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2120 = 0.015909902576697301 * $2119; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2121 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2122 = +HEAPF64[$2121>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2123 = (+__Z5IKsind($2122)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2124 = -0.015909902576697301 * $2123; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2125 = $2120 + $2124; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2126 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2127 = ((($2126)) + 8|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2128 = +HEAPF64[$2127>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2129 = (+__Z5IKsind($2128)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2130 = $2125 * $2129; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2131 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2132 = ((($2131)) + 24|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2133 = +HEAPF64[$2132>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2134 = (+__Z5IKsind($2133)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2135 = $2130 * $2134; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2136 = $2116 + $2135; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2137 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2138 = +HEAPF64[$2137>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2139 = (+__Z5IKcosd($2138)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2140 = -0.015909902576697301 * $2139; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2141 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2142 = +HEAPF64[$2141>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2143 = (+__Z5IKsind($2142)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2144 = -0.015909902576697301 * $2143; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2145 = $2140 + $2144; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2146 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2147 = ((($2146)) + 16|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2148 = +HEAPF64[$2147>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2149 = (+__Z5IKsind($2148)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2150 = $2145 * $2149; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2151 = $2136 + $2150; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2152 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2153 = +HEAPF64[$2152>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2154 = (+__Z5IKcosd($2153)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2155 = -0.015909902576697301 * $2154; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2156 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2157 = +HEAPF64[$2156>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2158 = (+__Z5IKsind($2157)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2159 = 0.015909902576697301 * $2158; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2160 = $2155 + $2159; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2161 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2162 = ((($2161)) + 16|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2163 = +HEAPF64[$2162>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2164 = (+__Z5IKsind($2163)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2165 = $2160 * $2164; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2166 = $2151 + $2165; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2167 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2168 = ((($2167)) + 16|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2169 = +HEAPF64[$2168>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2170 = (+__Z5IKcosd($2169)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2171 = 0.031819805153394602 * $2170; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2172 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2173 = ((($2172)) + 8|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2174 = +HEAPF64[$2173>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2175 = (+__Z5IKsind($2174)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2176 = $2171 * $2175; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2177 = $2166 + $2176; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2178 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2179 = +HEAPF64[$2178>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2180 = (+__Z5IKcosd($2179)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2181 = 0.70710678118654802 * $2180; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2182 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2183 = +HEAPF64[$2182>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2184 = (+__Z5IKsind($2183)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2185 = 0.70710678118654802 * $2184; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2186 = $2181 + $2185; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2187 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2188 = ((($2187)) + 8|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2189 = +HEAPF64[$2188>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2190 = (+__Z5IKcosd($2189)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2191 = $2186 * $2190; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2192 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2193 = ((($2192)) + 16|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2194 = +HEAPF64[$2193>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2195 = (+__Z5IKcosd($2194)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2196 = $2191 * $2195; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2197 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2198 = +HEAPF64[$2197>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2199 = (+__Z5IKsind($2198)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2200 = -0.70710678118654802 * $2199; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2201 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2202 = +HEAPF64[$2201>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2203 = (+__Z5IKcosd($2202)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2204 = 0.70710678118654802 * $2203; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2205 = $2200 + $2204; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2206 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2207 = ((($2206)) + 16|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2208 = +HEAPF64[$2207>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2209 = (+__Z5IKsind($2208)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2210 = $2205 * $2209; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2211 = $2196 + $2210; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2212 = -0.023975 * $2211; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2213 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2214 = ((($2213)) + 24|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2215 = +HEAPF64[$2214>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2216 = (+__Z5IKcosd($2215)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2217 = $2212 * $2216; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2218 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2219 = +HEAPF64[$2218>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2220 = (+__Z5IKsind($2219)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2221 = -0.70710678118654802 * $2220; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2222 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2223 = +HEAPF64[$2222>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2224 = (+__Z5IKcosd($2223)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2225 = -0.70710678118654802 * $2224; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2226 = $2221 + $2225; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2227 = -0.023975 * $2226; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2228 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2229 = ((($2228)) + 8|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2230 = +HEAPF64[$2229>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2231 = (+__Z5IKsind($2230)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2232 = $2227 * $2231; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2233 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2234 = ((($2233)) + 24|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2235 = +HEAPF64[$2234>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2236 = (+__Z5IKsind($2235)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2237 = $2232 * $2236; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2238 = $2217 + $2237; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2239 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2240 = ((($2239)) + 32|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2241 = +HEAPF64[$2240>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2242 = (+__Z5IKcosd($2241)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2243 = $2238 * $2242; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2244 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2245 = +HEAPF64[$2244>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2246 = (+__Z5IKsind($2245)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2247 = -0.70710678118654802 * $2246; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2248 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2249 = +HEAPF64[$2248>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2250 = (+__Z5IKcosd($2249)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2251 = -0.70710678118654802 * $2250; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2252 = $2247 + $2251; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2253 = -0.023975 * $2252; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2254 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2255 = ((($2254)) + 8|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2256 = +HEAPF64[$2255>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2257 = (+__Z5IKcosd($2256)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2258 = $2253 * $2257; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2259 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2260 = ((($2259)) + 16|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2261 = +HEAPF64[$2260>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2262 = (+__Z5IKsind($2261)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2263 = $2258 * $2262; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2264 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2265 = +HEAPF64[$2264>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2266 = (+__Z5IKsind($2265)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2267 = -0.70710678118654802 * $2266; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2268 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2269 = +HEAPF64[$2268>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2270 = (+__Z5IKcosd($2269)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2271 = 0.70710678118654802 * $2270; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2272 = $2267 + $2271; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2273 = -0.023975 * $2272; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2274 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2275 = ((($2274)) + 16|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2276 = +HEAPF64[$2275>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2277 = (+__Z5IKcosd($2276)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2278 = $2273 * $2277; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2279 = $2263 + $2278; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2280 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2281 = ((($2280)) + 32|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2282 = +HEAPF64[$2281>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2283 = (+__Z5IKsind($2282)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2284 = $2279 * $2283; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2285 = $2243 + $2284; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2286 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2287 = ((($2286)) + 40|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2288 = +HEAPF64[$2287>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2289 = (+__Z5IKsind($2288)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2290 = $2285 * $2289; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2291 = $2177 + $2290; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2292 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2293 = +HEAPF64[$2292>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2294 = (+__Z5IKcosd($2293)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2295 = -0.015909902576697301 * $2294; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2296 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2297 = +HEAPF64[$2296>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2298 = (+__Z5IKsind($2297)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2299 = -0.015909902576697301 * $2298; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2300 = $2295 + $2299; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2301 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2302 = ((($2301)) + 8|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2303 = +HEAPF64[$2302>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2304 = (+__Z5IKcosd($2303)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2305 = $2300 * $2304; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2306 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2307 = ((($2306)) + 16|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2308 = +HEAPF64[$2307>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2309 = (+__Z5IKcosd($2308)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2310 = $2305 * $2309; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2311 = $2291 + $2310; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2312 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2313 = +HEAPF64[$2312>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2314 = (+__Z5IKsind($2313)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2315 = -0.70710678118654802 * $2314; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2316 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2317 = +HEAPF64[$2316>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2318 = (+__Z5IKcosd($2317)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2319 = -0.70710678118654802 * $2318; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2320 = $2315 + $2319; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2321 = 0.023975 * $2320; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2322 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2323 = ((($2322)) + 16|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2324 = +HEAPF64[$2323>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2325 = (+__Z5IKcosd($2324)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2326 = $2321 * $2325; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2327 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2328 = +HEAPF64[$2327>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2329 = (+__Z5IKcosd($2328)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2330 = -0.70710678118654802 * $2329; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2331 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2332 = +HEAPF64[$2331>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2333 = (+__Z5IKsind($2332)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2334 = 0.70710678118654802 * $2333; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2335 = $2330 + $2334; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2336 = 0.023975 * $2335; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2337 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2338 = ((($2337)) + 8|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2339 = +HEAPF64[$2338>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2340 = (+__Z5IKcosd($2339)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2341 = $2336 * $2340; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2342 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2343 = ((($2342)) + 16|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2344 = +HEAPF64[$2343>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2345 = (+__Z5IKsind($2344)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2346 = $2341 * $2345; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2347 = $2326 + $2346; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2348 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2349 = ((($2348)) + 32|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2350 = +HEAPF64[$2349>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2351 = (+__Z5IKsind($2350)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2352 = $2347 * $2351; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2353 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2354 = +HEAPF64[$2353>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2355 = (+__Z5IKsind($2354)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2356 = -0.70710678118654802 * $2355; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2357 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2358 = +HEAPF64[$2357>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2359 = (+__Z5IKcosd($2358)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2360 = -0.70710678118654802 * $2359; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2361 = $2356 + $2360; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2362 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2363 = ((($2362)) + 16|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2364 = +HEAPF64[$2363>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2365 = (+__Z5IKsind($2364)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2366 = $2361 * $2365; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2367 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2368 = +HEAPF64[$2367>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2369 = (+__Z5IKsind($2368)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2370 = -0.70710678118654802 * $2369; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2371 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2372 = +HEAPF64[$2371>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2373 = (+__Z5IKcosd($2372)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2374 = 0.70710678118654802 * $2373; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2375 = $2370 + $2374; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2376 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2377 = ((($2376)) + 8|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2378 = +HEAPF64[$2377>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2379 = (+__Z5IKcosd($2378)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2380 = $2375 * $2379; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2381 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2382 = ((($2381)) + 16|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2383 = +HEAPF64[$2382>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2384 = (+__Z5IKcosd($2383)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2385 = $2380 * $2384; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2386 = $2366 + $2385; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2387 = 0.023975 * $2386; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2388 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2389 = ((($2388)) + 24|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2390 = +HEAPF64[$2389>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2391 = (+__Z5IKcosd($2390)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2392 = $2387 * $2391; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2393 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2394 = +HEAPF64[$2393>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2395 = (+__Z5IKcosd($2394)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2396 = -0.70710678118654802 * $2395; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2397 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2398 = +HEAPF64[$2397>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2399 = (+__Z5IKsind($2398)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2400 = 0.70710678118654802 * $2399; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2401 = $2396 + $2400; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2402 = 0.023975 * $2401; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2403 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2404 = ((($2403)) + 8|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2405 = +HEAPF64[$2404>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2406 = (+__Z5IKsind($2405)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2407 = $2402 * $2406; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2408 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2409 = ((($2408)) + 24|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2410 = +HEAPF64[$2409>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2411 = (+__Z5IKsind($2410)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2412 = $2407 * $2411; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2413 = $2392 + $2412; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2414 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2415 = ((($2414)) + 32|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2416 = +HEAPF64[$2415>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2417 = (+__Z5IKcosd($2416)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2418 = $2413 * $2417; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2419 = $2352 + $2418; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2420 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2421 = ((($2420)) + 40|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2422 = +HEAPF64[$2421>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2423 = (+__Z5IKsind($2422)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2424 = $2419 * $2423; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2425 = $2311 + $2424; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2426 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2427 = ((($2426)) + 16|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2428 = +HEAPF64[$2427>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2429 = (+__Z5IKcosd($2428)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2430 = -0.04795 * $2429; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2431 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2432 = ((($2431)) + 24|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2433 = +HEAPF64[$2432>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2434 = (+__Z5IKcosd($2433)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2435 = $2430 * $2434; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2436 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2437 = ((($2436)) + 8|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2438 = +HEAPF64[$2437>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2439 = (+__Z5IKsind($2438)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2440 = $2435 * $2439; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2441 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2442 = ((($2441)) + 8|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2443 = +HEAPF64[$2442>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2444 = (+__Z5IKcosd($2443)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2445 = -0.04795 * $2444; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2446 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2447 = ((($2446)) + 24|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2448 = +HEAPF64[$2447>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2449 = (+__Z5IKsind($2448)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2450 = $2445 * $2449; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2451 = $2440 + $2450; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2452 = -0.70710678118654802 * $2451; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2453 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2454 = ((($2453)) + 32|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2455 = +HEAPF64[$2454>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2456 = (+__Z5IKcosd($2455)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2457 = $2452 * $2456; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2458 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2459 = ((($2458)) + 8|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2460 = +HEAPF64[$2459>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2461 = (+__Z5IKsind($2460)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2462 = -0.033905770157894997 * $2461; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2463 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2464 = ((($2463)) + 16|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2465 = +HEAPF64[$2464>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2466 = (+__Z5IKsind($2465)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2467 = $2462 * $2466; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2468 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2469 = ((($2468)) + 32|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2470 = +HEAPF64[$2469>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2471 = (+__Z5IKsind($2470)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2472 = $2467 * $2471; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2473 = $2457 + $2472; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2474 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2475 = ((($2474)) + 40|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2476 = +HEAPF64[$2475>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2477 = (+__Z5IKsind($2476)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2478 = $2473 * $2477; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2479 = $2425 + $2478; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2480 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2481 = ((($2480)) + 16|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2482 = +HEAPF64[$2481>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2483 = (+__Z5IKcosd($2482)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2484 = 0.033905770157894997 * $2483; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2485 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2486 = ((($2485)) + 8|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2487 = +HEAPF64[$2486>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2488 = (+__Z5IKsind($2487)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2489 = $2484 * $2488; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2490 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2491 = ((($2490)) + 24|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2492 = +HEAPF64[$2491>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2493 = (+__Z5IKsind($2492)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2494 = $2489 * $2493; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2495 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2496 = ((($2495)) + 8|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2497 = +HEAPF64[$2496>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2498 = (+__Z5IKcosd($2497)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2499 = -0.033905770157894997 * $2498; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2500 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2501 = ((($2500)) + 24|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2502 = +HEAPF64[$2501>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2503 = (+__Z5IKcosd($2502)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2504 = $2499 * $2503; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2505 = $2494 + $2504; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2506 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2507 = ((($2506)) + 40|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2508 = +HEAPF64[$2507>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2509 = (+__Z5IKcosd($2508)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2510 = $2505 * $2509; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2511 = $2479 + $2510; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2512 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2513 = ((($2512)) + 8|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2514 = +HEAPF64[$2513>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2515 = (+__Z5IKcosd($2514)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2516 = -0.21213203435596401 * $2515; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2517 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2518 = ((($2517)) + 24|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2519 = +HEAPF64[$2518>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2520 = (+__Z5IKcosd($2519)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2521 = $2516 * $2520; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2522 = $2511 + $2521; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2523 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2524 = +HEAPF64[$2523>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2525 = (+__Z5IKsind($2524)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2526 = 0.106066017177982 * $2525; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2527 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2528 = +HEAPF64[$2527>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2529 = (+__Z5IKcosd($2528)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2530 = -0.106066017177982 * $2529; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2531 = $2526 + $2530; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2532 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2533 = ((($2532)) + 16|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2534 = +HEAPF64[$2533>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2535 = (+__Z5IKsind($2534)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2536 = $2531 * $2535; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2537 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2538 = +HEAPF64[$2537>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2539 = (+__Z5IKsind($2538)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2540 = -0.106066017177982 * $2539; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2541 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2542 = +HEAPF64[$2541>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2543 = (+__Z5IKcosd($2542)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2544 = -0.106066017177982 * $2543; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2545 = $2540 + $2544; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2546 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2547 = ((($2546)) + 8|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2548 = +HEAPF64[$2547>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2549 = (+__Z5IKcosd($2548)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2550 = $2545 * $2549; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2551 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2552 = ((($2551)) + 16|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2553 = +HEAPF64[$2552>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2554 = (+__Z5IKcosd($2553)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2555 = $2550 * $2554; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2556 = $2536 + $2555; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2557 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2558 = ((($2557)) + 24|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2559 = +HEAPF64[$2558>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2560 = (+__Z5IKsind($2559)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2561 = $2556 * $2560; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2562 = $2522 + $2561; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2563 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2564 = +HEAPF64[$2563>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2565 = (+__Z5IKsind($2564)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2566 = -0.106066017177982 * $2565; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2567 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2568 = +HEAPF64[$2567>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2569 = (+__Z5IKcosd($2568)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2570 = 0.106066017177982 * $2569; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2571 = $2566 + $2570; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2572 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2573 = ((($2572)) + 8|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2574 = +HEAPF64[$2573>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2575 = (+__Z5IKcosd($2574)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2576 = $2571 * $2575; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2577 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2578 = ((($2577)) + 16|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2579 = +HEAPF64[$2578>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2580 = (+__Z5IKcosd($2579)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2581 = $2576 * $2580; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2582 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2583 = +HEAPF64[$2582>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2584 = (+__Z5IKsind($2583)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2585 = -0.106066017177982 * $2584; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2586 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2587 = +HEAPF64[$2586>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2588 = (+__Z5IKcosd($2587)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2589 = -0.106066017177982 * $2588; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2590 = $2585 + $2589; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2591 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2592 = ((($2591)) + 16|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2593 = +HEAPF64[$2592>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2594 = (+__Z5IKsind($2593)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2595 = $2590 * $2594; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2596 = $2581 + $2595; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2597 = $0; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2598 = ((($2597)) + 24|0); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2599 = +HEAPF64[$2598>>3]; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2600 = (+__Z5IKsind($2599)); //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2601 = $2596 * $2600; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2602 = $2562 + $2601; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2603 = $1; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 HEAPF64[$2603>>3] = $2602; //@line 352 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2604 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2605 = +HEAPF64[$2604>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2606 = (+__Z5IKcosd($2605)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2607 = -0.70710678118654802 * $2606; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2608 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2609 = +HEAPF64[$2608>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2610 = (+__Z5IKsind($2609)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2611 = 0.70710678118654802 * $2610; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2612 = $2607 + $2611; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2613 = 0.5 * $2612; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2614 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2615 = ((($2614)) + 8|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2616 = +HEAPF64[$2615>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2617 = (+__Z5IKcosd($2616)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2618 = $2613 * $2617; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2619 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2620 = ((($2619)) + 16|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2621 = +HEAPF64[$2620>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2622 = (+__Z5IKsind($2621)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2623 = $2618 * $2622; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2624 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2625 = +HEAPF64[$2624>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2626 = (+__Z5IKsind($2625)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2627 = -0.70710678118654802 * $2626; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2628 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2629 = +HEAPF64[$2628>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2630 = (+__Z5IKcosd($2629)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2631 = -0.70710678118654802 * $2630; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2632 = $2627 + $2631; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2633 = 0.5 * $2632; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2634 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2635 = ((($2634)) + 16|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2636 = +HEAPF64[$2635>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2637 = (+__Z5IKcosd($2636)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2638 = $2633 * $2637; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2639 = $2623 + $2638; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2640 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2641 = ((($2640)) + 32|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2642 = +HEAPF64[$2641>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2643 = (+__Z5IKcosd($2642)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2644 = $2639 * $2643; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2645 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2646 = +HEAPF64[$2645>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2647 = (+__Z5IKsind($2646)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2648 = -0.70710678118654802 * $2647; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2649 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2650 = +HEAPF64[$2649>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2651 = (+__Z5IKcosd($2650)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2652 = 0.70710678118654802 * $2651; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2653 = $2648 + $2652; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2654 = -1.0 * $2653; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2655 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2656 = ((($2655)) + 8|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2657 = +HEAPF64[$2656>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2658 = (+__Z5IKcosd($2657)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2659 = $2654 * $2658; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2660 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2661 = ((($2660)) + 16|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2662 = +HEAPF64[$2661>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2663 = (+__Z5IKcosd($2662)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2664 = $2659 * $2663; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2665 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2666 = +HEAPF64[$2665>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2667 = (+__Z5IKsind($2666)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2668 = -0.70710678118654802 * $2667; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2669 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2670 = +HEAPF64[$2669>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2671 = (+__Z5IKcosd($2670)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2672 = -0.70710678118654802 * $2671; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2673 = $2668 + $2672; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2674 = -1.0 * $2673; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2675 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2676 = ((($2675)) + 16|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2677 = +HEAPF64[$2676>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2678 = (+__Z5IKsind($2677)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2679 = $2674 * $2678; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2680 = $2664 + $2679; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2681 = 0.5 * $2680; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2682 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2683 = ((($2682)) + 24|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2684 = +HEAPF64[$2683>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2685 = (+__Z5IKcosd($2684)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2686 = $2681 * $2685; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2687 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2688 = +HEAPF64[$2687>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2689 = (+__Z5IKsind($2688)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2690 = -0.70710678118654802 * $2689; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2691 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2692 = +HEAPF64[$2691>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2693 = (+__Z5IKcosd($2692)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2694 = 0.70710678118654802 * $2693; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2695 = $2690 + $2694; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2696 = 0.5 * $2695; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2697 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2698 = ((($2697)) + 8|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2699 = +HEAPF64[$2698>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2700 = (+__Z5IKsind($2699)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2701 = $2696 * $2700; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2702 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2703 = ((($2702)) + 24|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2704 = +HEAPF64[$2703>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2705 = (+__Z5IKsind($2704)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2706 = $2701 * $2705; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2707 = $2686 + $2706; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2708 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2709 = ((($2708)) + 32|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2710 = +HEAPF64[$2709>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2711 = (+__Z5IKsind($2710)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2712 = $2707 * $2711; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2713 = $2644 + $2712; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2714 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2715 = ((($2714)) + 48|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2716 = +HEAPF64[$2715>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2717 = (+__Z5IKcosd($2716)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2718 = $2713 * $2717; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2719 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2720 = +HEAPF64[$2719>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2721 = (+__Z5IKcosd($2720)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2722 = 0.70710678118654802 * $2721; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2723 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2724 = +HEAPF64[$2723>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2725 = (+__Z5IKsind($2724)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2726 = 0.70710678118654802 * $2725; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2727 = $2722 + $2726; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2728 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2729 = ((($2728)) + 8|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2730 = +HEAPF64[$2729>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2731 = (+__Z5IKcosd($2730)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2732 = $2727 * $2731; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2733 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2734 = ((($2733)) + 16|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2735 = +HEAPF64[$2734>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2736 = (+__Z5IKcosd($2735)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2737 = $2732 * $2736; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2738 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2739 = +HEAPF64[$2738>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2740 = (+__Z5IKsind($2739)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2741 = -0.70710678118654802 * $2740; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2742 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2743 = +HEAPF64[$2742>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2744 = (+__Z5IKcosd($2743)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2745 = 0.70710678118654802 * $2744; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2746 = $2741 + $2745; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2747 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2748 = ((($2747)) + 16|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2749 = +HEAPF64[$2748>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2750 = (+__Z5IKsind($2749)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2751 = $2746 * $2750; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2752 = $2737 + $2751; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2753 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2754 = ((($2753)) + 24|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2755 = +HEAPF64[$2754>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2756 = (+__Z5IKcosd($2755)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2757 = $2752 * $2756; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2758 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2759 = +HEAPF64[$2758>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2760 = (+__Z5IKsind($2759)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2761 = -0.70710678118654802 * $2760; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2762 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2763 = +HEAPF64[$2762>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2764 = (+__Z5IKcosd($2763)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2765 = -0.70710678118654802 * $2764; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2766 = $2761 + $2765; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2767 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2768 = ((($2767)) + 8|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2769 = +HEAPF64[$2768>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2770 = (+__Z5IKsind($2769)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2771 = $2766 * $2770; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2772 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2773 = ((($2772)) + 24|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2774 = +HEAPF64[$2773>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2775 = (+__Z5IKsind($2774)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2776 = $2771 * $2775; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2777 = $2757 + $2776; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2778 = 0.5 * $2777; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2779 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2780 = ((($2779)) + 32|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2781 = +HEAPF64[$2780>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2782 = (+__Z5IKcosd($2781)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2783 = $2778 * $2782; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2784 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2785 = +HEAPF64[$2784>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2786 = (+__Z5IKsind($2785)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2787 = -0.70710678118654802 * $2786; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2788 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2789 = +HEAPF64[$2788>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2790 = (+__Z5IKcosd($2789)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2791 = -0.70710678118654802 * $2790; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2792 = $2787 + $2791; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2793 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2794 = ((($2793)) + 8|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2795 = +HEAPF64[$2794>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2796 = (+__Z5IKcosd($2795)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2797 = $2792 * $2796; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2798 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2799 = ((($2798)) + 16|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2800 = +HEAPF64[$2799>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2801 = (+__Z5IKsind($2800)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2802 = $2797 * $2801; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2803 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2804 = +HEAPF64[$2803>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2805 = (+__Z5IKsind($2804)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2806 = -0.70710678118654802 * $2805; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2807 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2808 = +HEAPF64[$2807>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2809 = (+__Z5IKcosd($2808)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2810 = 0.70710678118654802 * $2809; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2811 = $2806 + $2810; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2812 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2813 = ((($2812)) + 16|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2814 = +HEAPF64[$2813>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2815 = (+__Z5IKcosd($2814)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2816 = $2811 * $2815; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2817 = $2802 + $2816; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2818 = 0.5 * $2817; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2819 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2820 = ((($2819)) + 32|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2821 = +HEAPF64[$2820>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2822 = (+__Z5IKsind($2821)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2823 = $2818 * $2822; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2824 = $2783 + $2823; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2825 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2826 = ((($2825)) + 40|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2827 = +HEAPF64[$2826>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2828 = (+__Z5IKcosd($2827)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2829 = $2824 * $2828; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2830 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2831 = +HEAPF64[$2830>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2832 = (+__Z5IKcosd($2831)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2833 = -0.70710678118654802 * $2832; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2834 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2835 = +HEAPF64[$2834>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2836 = (+__Z5IKsind($2835)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2837 = 0.70710678118654802 * $2836; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2838 = $2833 + $2837; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2839 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2840 = ((($2839)) + 16|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2841 = +HEAPF64[$2840>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2842 = (+__Z5IKsind($2841)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2843 = $2838 * $2842; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2844 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2845 = +HEAPF64[$2844>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2846 = (+__Z5IKsind($2845)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2847 = -0.70710678118654802 * $2846; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2848 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2849 = +HEAPF64[$2848>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2850 = (+__Z5IKcosd($2849)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2851 = -0.70710678118654802 * $2850; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2852 = $2847 + $2851; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2853 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2854 = ((($2853)) + 8|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2855 = +HEAPF64[$2854>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2856 = (+__Z5IKcosd($2855)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2857 = $2852 * $2856; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2858 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2859 = ((($2858)) + 16|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2860 = +HEAPF64[$2859>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2861 = (+__Z5IKcosd($2860)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2862 = $2857 * $2861; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2863 = $2843 + $2862; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2864 = 0.5 * $2863; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2865 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2866 = ((($2865)) + 24|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2867 = +HEAPF64[$2866>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2868 = (+__Z5IKsind($2867)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2869 = $2864 * $2868; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2870 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2871 = +HEAPF64[$2870>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2872 = (+__Z5IKsind($2871)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2873 = -0.70710678118654802 * $2872; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2874 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2875 = +HEAPF64[$2874>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2876 = (+__Z5IKcosd($2875)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2877 = -0.70710678118654802 * $2876; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2878 = $2873 + $2877; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2879 = 0.5 * $2878; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2880 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2881 = ((($2880)) + 24|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2882 = +HEAPF64[$2881>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2883 = (+__Z5IKcosd($2882)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2884 = $2879 * $2883; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2885 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2886 = ((($2885)) + 8|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2887 = +HEAPF64[$2886>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2888 = (+__Z5IKsind($2887)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2889 = $2884 * $2888; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2890 = $2869 + $2889; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2891 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2892 = ((($2891)) + 40|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2893 = +HEAPF64[$2892>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2894 = (+__Z5IKsind($2893)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2895 = $2890 * $2894; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2896 = $2829 + $2895; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2897 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2898 = ((($2897)) + 48|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2899 = +HEAPF64[$2898>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2900 = (+__Z5IKsind($2899)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2901 = $2896 * $2900; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2902 = $2718 + $2901; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2903 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2904 = ((($2903)) + 32|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2905 = +HEAPF64[$2904>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2906 = (+__Z5IKcosd($2905)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2907 = 0.70710678118654802 * $2906; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2908 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2909 = ((($2908)) + 8|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2910 = +HEAPF64[$2909>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2911 = (+__Z5IKsind($2910)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2912 = $2907 * $2911; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2913 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2914 = ((($2913)) + 16|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2915 = +HEAPF64[$2914>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2916 = (+__Z5IKsind($2915)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2917 = $2912 * $2916; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2918 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2919 = ((($2918)) + 8|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2920 = +HEAPF64[$2919>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2921 = (+__Z5IKcosd($2920)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2922 = -1.0 * $2921; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2923 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2924 = ((($2923)) + 24|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2925 = +HEAPF64[$2924>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2926 = (+__Z5IKsind($2925)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2927 = $2922 * $2926; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2928 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2929 = ((($2928)) + 16|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2930 = +HEAPF64[$2929>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2931 = (+__Z5IKcosd($2930)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2932 = -1.0 * $2931; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2933 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2934 = ((($2933)) + 24|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2935 = +HEAPF64[$2934>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2936 = (+__Z5IKcosd($2935)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2937 = $2932 * $2936; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2938 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2939 = ((($2938)) + 8|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2940 = +HEAPF64[$2939>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2941 = (+__Z5IKsind($2940)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2942 = $2937 * $2941; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2943 = $2927 + $2942; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2944 = -0.70710678118654802 * $2943; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2945 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2946 = ((($2945)) + 32|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2947 = +HEAPF64[$2946>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2948 = (+__Z5IKsind($2947)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2949 = $2944 * $2948; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2950 = $2917 + $2949; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2951 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2952 = ((($2951)) + 48|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2953 = +HEAPF64[$2952>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2954 = (+__Z5IKcosd($2953)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2955 = $2950 * $2954; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2956 = $2902 + $2955; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2957 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2958 = +HEAPF64[$2957>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2959 = (+__Z5IKsind($2958)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2960 = -0.70710678118654802 * $2959; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2961 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2962 = +HEAPF64[$2961>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2963 = (+__Z5IKcosd($2962)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2964 = 0.70710678118654802 * $2963; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2965 = $2960 + $2964; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2966 = -1.0 * $2965; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2967 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2968 = ((($2967)) + 16|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2969 = +HEAPF64[$2968>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2970 = (+__Z5IKsind($2969)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2971 = $2966 * $2970; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2972 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2973 = +HEAPF64[$2972>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2974 = (+__Z5IKcosd($2973)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2975 = 0.70710678118654802 * $2974; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2976 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2977 = +HEAPF64[$2976>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2978 = (+__Z5IKsind($2977)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2979 = 0.70710678118654802 * $2978; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2980 = $2975 + $2979; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2981 = -1.0 * $2980; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2982 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2983 = ((($2982)) + 8|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2984 = +HEAPF64[$2983>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2985 = (+__Z5IKcosd($2984)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2986 = $2981 * $2985; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2987 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2988 = ((($2987)) + 16|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2989 = +HEAPF64[$2988>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2990 = (+__Z5IKcosd($2989)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2991 = $2986 * $2990; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2992 = $2971 + $2991; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2993 = -0.5 * $2992; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2994 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2995 = ((($2994)) + 24|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2996 = +HEAPF64[$2995>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2997 = (+__Z5IKcosd($2996)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2998 = $2993 * $2997; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2999 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3000 = +HEAPF64[$2999>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3001 = (+__Z5IKcosd($3000)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3002 = 0.70710678118654802 * $3001; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3003 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3004 = +HEAPF64[$3003>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3005 = (+__Z5IKsind($3004)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3006 = 0.70710678118654802 * $3005; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3007 = $3002 + $3006; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3008 = -0.5 * $3007; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3009 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3010 = ((($3009)) + 8|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3011 = +HEAPF64[$3010>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3012 = (+__Z5IKsind($3011)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3013 = $3008 * $3012; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3014 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3015 = ((($3014)) + 24|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3016 = +HEAPF64[$3015>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3017 = (+__Z5IKsind($3016)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3018 = $3013 * $3017; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3019 = $2998 + $3018; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3020 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3021 = ((($3020)) + 32|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3022 = +HEAPF64[$3021>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3023 = (+__Z5IKsind($3022)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3024 = $3019 * $3023; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3025 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3026 = +HEAPF64[$3025>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3027 = (+__Z5IKsind($3026)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3028 = -0.70710678118654802 * $3027; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3029 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3030 = +HEAPF64[$3029>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3031 = (+__Z5IKcosd($3030)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3032 = -0.70710678118654802 * $3031; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3033 = $3028 + $3032; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3034 = -0.5 * $3033; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3035 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3036 = ((($3035)) + 8|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3037 = +HEAPF64[$3036>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3038 = (+__Z5IKcosd($3037)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3039 = $3034 * $3038; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3040 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3041 = ((($3040)) + 16|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3042 = +HEAPF64[$3041>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3043 = (+__Z5IKsind($3042)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3044 = $3039 * $3043; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3045 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3046 = +HEAPF64[$3045>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3047 = (+__Z5IKsind($3046)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3048 = -0.70710678118654802 * $3047; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3049 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3050 = +HEAPF64[$3049>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3051 = (+__Z5IKcosd($3050)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3052 = 0.70710678118654802 * $3051; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3053 = $3048 + $3052; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3054 = -0.5 * $3053; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3055 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3056 = ((($3055)) + 16|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3057 = +HEAPF64[$3056>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3058 = (+__Z5IKcosd($3057)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3059 = $3054 * $3058; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3060 = $3044 + $3059; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3061 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3062 = ((($3061)) + 32|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3063 = +HEAPF64[$3062>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3064 = (+__Z5IKcosd($3063)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3065 = $3060 * $3064; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3066 = $3024 + $3065; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3067 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3068 = ((($3067)) + 48|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3069 = +HEAPF64[$3068>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3070 = (+__Z5IKcosd($3069)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3071 = $3066 * $3070; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3072 = $2956 + $3071; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3073 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3074 = ((($3073)) + 8|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3075 = +HEAPF64[$3074>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3076 = (+__Z5IKsind($3075)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3077 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3078 = ((($3077)) + 16|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3079 = +HEAPF64[$3078>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3080 = (+__Z5IKsind($3079)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3081 = $3076 * $3080; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3082 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3083 = ((($3082)) + 32|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3084 = +HEAPF64[$3083>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3085 = (+__Z5IKsind($3084)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3086 = $3081 * $3085; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3087 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3088 = ((($3087)) + 8|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3089 = +HEAPF64[$3088>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3090 = (+__Z5IKcosd($3089)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3091 = -1.0 * $3090; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3092 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3093 = ((($3092)) + 24|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3094 = +HEAPF64[$3093>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3095 = (+__Z5IKsind($3094)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3096 = $3091 * $3095; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3097 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3098 = ((($3097)) + 16|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3099 = +HEAPF64[$3098>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3100 = (+__Z5IKcosd($3099)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3101 = -1.0 * $3100; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3102 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3103 = ((($3102)) + 24|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3104 = +HEAPF64[$3103>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3105 = (+__Z5IKcosd($3104)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3106 = $3101 * $3105; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3107 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3108 = ((($3107)) + 8|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3109 = +HEAPF64[$3108>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3110 = (+__Z5IKsind($3109)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3111 = $3106 * $3110; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3112 = $3096 + $3111; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3113 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3114 = ((($3113)) + 32|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3115 = +HEAPF64[$3114>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3116 = (+__Z5IKcosd($3115)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3117 = $3112 * $3116; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3118 = $3086 + $3117; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3119 = -0.70710678118654802 * $3118; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3120 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3121 = ((($3120)) + 40|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3122 = +HEAPF64[$3121>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3123 = (+__Z5IKcosd($3122)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3124 = $3119 * $3123; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3125 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3126 = ((($3125)) + 16|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3127 = +HEAPF64[$3126>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3128 = (+__Z5IKcosd($3127)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3129 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3130 = ((($3129)) + 8|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3131 = +HEAPF64[$3130>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3132 = (+__Z5IKsind($3131)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3133 = $3128 * $3132; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3134 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3135 = ((($3134)) + 24|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3136 = +HEAPF64[$3135>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3137 = (+__Z5IKsind($3136)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3138 = $3133 * $3137; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3139 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3140 = ((($3139)) + 8|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3141 = +HEAPF64[$3140>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3142 = (+__Z5IKcosd($3141)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3143 = -1.0 * $3142; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3144 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3145 = ((($3144)) + 24|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3146 = +HEAPF64[$3145>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3147 = (+__Z5IKcosd($3146)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3148 = $3143 * $3147; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3149 = $3138 + $3148; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3150 = -0.70710678118654802 * $3149; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3151 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3152 = ((($3151)) + 40|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3153 = +HEAPF64[$3152>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3154 = (+__Z5IKsind($3153)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3155 = $3150 * $3154; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3156 = $3124 + $3155; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3157 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3158 = ((($3157)) + 48|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3159 = +HEAPF64[$3158>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3160 = (+__Z5IKsind($3159)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3161 = $3156 * $3160; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3162 = $3072 + $3161; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3163 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3164 = +HEAPF64[$3163>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3165 = (+__Z5IKsind($3164)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3166 = -0.70710678118654802 * $3165; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3167 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3168 = +HEAPF64[$3167>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3169 = (+__Z5IKcosd($3168)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3170 = -0.70710678118654802 * $3169; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3171 = $3166 + $3170; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3172 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3173 = ((($3172)) + 16|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3174 = +HEAPF64[$3173>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3175 = (+__Z5IKsind($3174)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3176 = $3171 * $3175; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3177 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3178 = +HEAPF64[$3177>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3179 = (+__Z5IKsind($3178)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3180 = -0.70710678118654802 * $3179; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3181 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3182 = +HEAPF64[$3181>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3183 = (+__Z5IKcosd($3182)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3184 = 0.70710678118654802 * $3183; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3185 = $3180 + $3184; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3186 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3187 = ((($3186)) + 8|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3188 = +HEAPF64[$3187>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3189 = (+__Z5IKcosd($3188)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3190 = $3185 * $3189; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3191 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3192 = ((($3191)) + 16|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3193 = +HEAPF64[$3192>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3194 = (+__Z5IKcosd($3193)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3195 = $3190 * $3194; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3196 = $3176 + $3195; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3197 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3198 = ((($3197)) + 24|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3199 = +HEAPF64[$3198>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3200 = (+__Z5IKcosd($3199)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3201 = $3196 * $3200; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3202 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3203 = +HEAPF64[$3202>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3204 = (+__Z5IKcosd($3203)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3205 = -0.70710678118654802 * $3204; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3206 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3207 = +HEAPF64[$3206>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3208 = (+__Z5IKsind($3207)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3209 = 0.70710678118654802 * $3208; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3210 = $3205 + $3209; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3211 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3212 = ((($3211)) + 8|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3213 = +HEAPF64[$3212>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3214 = (+__Z5IKsind($3213)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3215 = $3210 * $3214; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3216 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3217 = ((($3216)) + 24|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3218 = +HEAPF64[$3217>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3219 = (+__Z5IKsind($3218)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3220 = $3215 * $3219; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3221 = $3201 + $3220; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3222 = -0.5 * $3221; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3223 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3224 = ((($3223)) + 32|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3225 = +HEAPF64[$3224>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3226 = (+__Z5IKcosd($3225)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3227 = $3222 * $3226; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3228 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3229 = +HEAPF64[$3228>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3230 = (+__Z5IKsind($3229)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3231 = -0.70710678118654802 * $3230; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3232 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3233 = +HEAPF64[$3232>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3234 = (+__Z5IKcosd($3233)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3235 = -0.70710678118654802 * $3234; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3236 = $3231 + $3235; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3237 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3238 = ((($3237)) + 16|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3239 = +HEAPF64[$3238>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3240 = (+__Z5IKcosd($3239)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3241 = $3236 * $3240; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3242 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3243 = +HEAPF64[$3242>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3244 = (+__Z5IKcosd($3243)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3245 = -0.70710678118654802 * $3244; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3246 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3247 = +HEAPF64[$3246>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3248 = (+__Z5IKsind($3247)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3249 = 0.70710678118654802 * $3248; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3250 = $3245 + $3249; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3251 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3252 = ((($3251)) + 8|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3253 = +HEAPF64[$3252>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3254 = (+__Z5IKcosd($3253)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3255 = $3250 * $3254; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3256 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3257 = ((($3256)) + 16|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3258 = +HEAPF64[$3257>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3259 = (+__Z5IKsind($3258)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3260 = $3255 * $3259; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3261 = $3241 + $3260; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3262 = -0.5 * $3261; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3263 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3264 = ((($3263)) + 32|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3265 = +HEAPF64[$3264>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3266 = (+__Z5IKsind($3265)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3267 = $3262 * $3266; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3268 = $3227 + $3267; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3269 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3270 = ((($3269)) + 40|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3271 = +HEAPF64[$3270>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3272 = (+__Z5IKcosd($3271)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3273 = $3268 * $3272; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3274 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3275 = +HEAPF64[$3274>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3276 = (+__Z5IKcosd($3275)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3277 = 0.70710678118654802 * $3276; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3278 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3279 = +HEAPF64[$3278>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3280 = (+__Z5IKsind($3279)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3281 = 0.70710678118654802 * $3280; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3282 = $3277 + $3281; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3283 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3284 = ((($3283)) + 16|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3285 = +HEAPF64[$3284>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3286 = (+__Z5IKsind($3285)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3287 = $3282 * $3286; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3288 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3289 = +HEAPF64[$3288>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3290 = (+__Z5IKcosd($3289)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3291 = -0.70710678118654802 * $3290; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3292 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3293 = +HEAPF64[$3292>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3294 = (+__Z5IKsind($3293)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3295 = 0.70710678118654802 * $3294; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3296 = $3291 + $3295; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3297 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3298 = ((($3297)) + 8|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3299 = +HEAPF64[$3298>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3300 = (+__Z5IKcosd($3299)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3301 = $3296 * $3300; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3302 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3303 = ((($3302)) + 16|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3304 = +HEAPF64[$3303>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3305 = (+__Z5IKcosd($3304)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3306 = $3301 * $3305; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3307 = $3287 + $3306; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3308 = -0.5 * $3307; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3309 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3310 = ((($3309)) + 24|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3311 = +HEAPF64[$3310>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3312 = (+__Z5IKsind($3311)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3313 = $3308 * $3312; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3314 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3315 = +HEAPF64[$3314>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3316 = (+__Z5IKcosd($3315)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3317 = -0.70710678118654802 * $3316; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3318 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3319 = +HEAPF64[$3318>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3320 = (+__Z5IKsind($3319)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3321 = 0.70710678118654802 * $3320; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3322 = $3317 + $3321; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3323 = -0.5 * $3322; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3324 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3325 = ((($3324)) + 24|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3326 = +HEAPF64[$3325>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3327 = (+__Z5IKcosd($3326)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3328 = $3323 * $3327; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3329 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3330 = ((($3329)) + 8|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3331 = +HEAPF64[$3330>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3332 = (+__Z5IKsind($3331)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3333 = $3328 * $3332; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3334 = $3313 + $3333; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3335 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3336 = ((($3335)) + 40|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3337 = +HEAPF64[$3336>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3338 = (+__Z5IKsind($3337)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3339 = $3334 * $3338; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3340 = $3273 + $3339; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3341 = $0; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3342 = ((($3341)) + 48|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3343 = +HEAPF64[$3342>>3]; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3344 = (+__Z5IKsind($3343)); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3345 = $3340 * $3344; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3346 = $3162 + $3345; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3347 = $2; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3348 = ((($3347)) + 24|0); //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 HEAPF64[$3348>>3] = $3346; //@line 353 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3349 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3350 = ((($3349)) + 8|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3351 = +HEAPF64[$3350>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3352 = (+__Z5IKsind($3351)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3353 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3354 = ((($3353)) + 16|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3355 = +HEAPF64[$3354>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3356 = (+__Z5IKsind($3355)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3357 = $3352 * $3356; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3358 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3359 = ((($3358)) + 32|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3360 = +HEAPF64[$3359>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3361 = (+__Z5IKsind($3360)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3362 = $3357 * $3361; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3363 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3364 = ((($3363)) + 8|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3365 = +HEAPF64[$3364>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3366 = (+__Z5IKcosd($3365)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3367 = -1.0 * $3366; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3368 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3369 = ((($3368)) + 24|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3370 = +HEAPF64[$3369>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3371 = (+__Z5IKsind($3370)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3372 = $3367 * $3371; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3373 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3374 = ((($3373)) + 16|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3375 = +HEAPF64[$3374>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3376 = (+__Z5IKcosd($3375)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3377 = -1.0 * $3376; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3378 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3379 = ((($3378)) + 24|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3380 = +HEAPF64[$3379>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3381 = (+__Z5IKcosd($3380)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3382 = $3377 * $3381; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3383 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3384 = ((($3383)) + 8|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3385 = +HEAPF64[$3384>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3386 = (+__Z5IKsind($3385)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3387 = $3382 * $3386; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3388 = $3372 + $3387; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3389 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3390 = ((($3389)) + 32|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3391 = +HEAPF64[$3390>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3392 = (+__Z5IKcosd($3391)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3393 = $3388 * $3392; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3394 = $3362 + $3393; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3395 = -0.70710678118654802 * $3394; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3396 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3397 = ((($3396)) + 40|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3398 = +HEAPF64[$3397>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3399 = (+__Z5IKcosd($3398)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3400 = $3395 * $3399; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3401 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3402 = ((($3401)) + 16|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3403 = +HEAPF64[$3402>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3404 = (+__Z5IKcosd($3403)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3405 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3406 = ((($3405)) + 8|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3407 = +HEAPF64[$3406>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3408 = (+__Z5IKsind($3407)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3409 = $3404 * $3408; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3410 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3411 = ((($3410)) + 24|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3412 = +HEAPF64[$3411>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3413 = (+__Z5IKsind($3412)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3414 = $3409 * $3413; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3415 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3416 = ((($3415)) + 8|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3417 = +HEAPF64[$3416>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3418 = (+__Z5IKcosd($3417)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3419 = -1.0 * $3418; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3420 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3421 = ((($3420)) + 24|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3422 = +HEAPF64[$3421>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3423 = (+__Z5IKcosd($3422)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3424 = $3419 * $3423; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3425 = $3414 + $3424; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3426 = -0.70710678118654802 * $3425; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3427 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3428 = ((($3427)) + 40|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3429 = +HEAPF64[$3428>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3430 = (+__Z5IKsind($3429)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3431 = $3426 * $3430; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3432 = $3400 + $3431; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3433 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3434 = ((($3433)) + 48|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3435 = +HEAPF64[$3434>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3436 = (+__Z5IKcosd($3435)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3437 = $3432 * $3436; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3438 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3439 = +HEAPF64[$3438>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3440 = (+__Z5IKcosd($3439)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3441 = 0.70710678118654802 * $3440; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3442 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3443 = +HEAPF64[$3442>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3444 = (+__Z5IKsind($3443)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3445 = 0.70710678118654802 * $3444; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3446 = $3441 + $3445; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3447 = 0.5 * $3446; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3448 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3449 = ((($3448)) + 8|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3450 = +HEAPF64[$3449>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3451 = (+__Z5IKsind($3450)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3452 = $3447 * $3451; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3453 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3454 = ((($3453)) + 24|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3455 = +HEAPF64[$3454>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3456 = (+__Z5IKsind($3455)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3457 = $3452 * $3456; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3458 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3459 = +HEAPF64[$3458>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3460 = (+__Z5IKsind($3459)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3461 = -0.70710678118654802 * $3460; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3462 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3463 = +HEAPF64[$3462>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3464 = (+__Z5IKcosd($3463)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3465 = 0.70710678118654802 * $3464; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3466 = $3461 + $3465; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3467 = -1.0 * $3466; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3468 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3469 = ((($3468)) + 16|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3470 = +HEAPF64[$3469>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3471 = (+__Z5IKsind($3470)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3472 = $3467 * $3471; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3473 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3474 = +HEAPF64[$3473>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3475 = (+__Z5IKcosd($3474)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3476 = 0.70710678118654802 * $3475; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3477 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3478 = +HEAPF64[$3477>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3479 = (+__Z5IKsind($3478)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3480 = 0.70710678118654802 * $3479; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3481 = $3476 + $3480; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3482 = -1.0 * $3481; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3483 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3484 = ((($3483)) + 8|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3485 = +HEAPF64[$3484>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3486 = (+__Z5IKcosd($3485)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3487 = $3482 * $3486; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3488 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3489 = ((($3488)) + 16|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3490 = +HEAPF64[$3489>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3491 = (+__Z5IKcosd($3490)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3492 = $3487 * $3491; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3493 = $3472 + $3492; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3494 = 0.5 * $3493; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3495 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3496 = ((($3495)) + 24|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3497 = +HEAPF64[$3496>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3498 = (+__Z5IKcosd($3497)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3499 = $3494 * $3498; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3500 = $3457 + $3499; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3501 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3502 = ((($3501)) + 32|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3503 = +HEAPF64[$3502>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3504 = (+__Z5IKsind($3503)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3505 = $3500 * $3504; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3506 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3507 = +HEAPF64[$3506>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3508 = (+__Z5IKsind($3507)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3509 = -0.70710678118654802 * $3508; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3510 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3511 = +HEAPF64[$3510>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3512 = (+__Z5IKcosd($3511)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3513 = 0.70710678118654802 * $3512; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3514 = $3509 + $3513; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3515 = 0.5 * $3514; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3516 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3517 = ((($3516)) + 16|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3518 = +HEAPF64[$3517>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3519 = (+__Z5IKcosd($3518)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3520 = $3515 * $3519; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3521 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3522 = +HEAPF64[$3521>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3523 = (+__Z5IKsind($3522)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3524 = -0.70710678118654802 * $3523; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3525 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3526 = +HEAPF64[$3525>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3527 = (+__Z5IKcosd($3526)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3528 = -0.70710678118654802 * $3527; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3529 = $3524 + $3528; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3530 = 0.5 * $3529; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3531 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3532 = ((($3531)) + 8|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3533 = +HEAPF64[$3532>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3534 = (+__Z5IKcosd($3533)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3535 = $3530 * $3534; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3536 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3537 = ((($3536)) + 16|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3538 = +HEAPF64[$3537>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3539 = (+__Z5IKsind($3538)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3540 = $3535 * $3539; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3541 = $3520 + $3540; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3542 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3543 = ((($3542)) + 32|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3544 = +HEAPF64[$3543>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3545 = (+__Z5IKcosd($3544)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3546 = $3541 * $3545; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3547 = $3505 + $3546; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3548 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3549 = ((($3548)) + 48|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3550 = +HEAPF64[$3549>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3551 = (+__Z5IKsind($3550)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3552 = $3547 * $3551; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3553 = $3437 + $3552; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3554 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3555 = +HEAPF64[$3554>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3556 = (+__Z5IKcosd($3555)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3557 = 0.70710678118654802 * $3556; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3558 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3559 = +HEAPF64[$3558>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3560 = (+__Z5IKsind($3559)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3561 = 0.70710678118654802 * $3560; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3562 = $3557 + $3561; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3563 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3564 = ((($3563)) + 8|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3565 = +HEAPF64[$3564>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3566 = (+__Z5IKcosd($3565)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3567 = $3562 * $3566; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3568 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3569 = ((($3568)) + 16|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3570 = +HEAPF64[$3569>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3571 = (+__Z5IKcosd($3570)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3572 = $3567 * $3571; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3573 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3574 = +HEAPF64[$3573>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3575 = (+__Z5IKsind($3574)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3576 = -0.70710678118654802 * $3575; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3577 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3578 = +HEAPF64[$3577>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3579 = (+__Z5IKcosd($3578)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3580 = 0.70710678118654802 * $3579; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3581 = $3576 + $3580; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3582 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3583 = ((($3582)) + 16|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3584 = +HEAPF64[$3583>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3585 = (+__Z5IKsind($3584)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3586 = $3581 * $3585; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3587 = $3572 + $3586; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3588 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3589 = ((($3588)) + 24|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3590 = +HEAPF64[$3589>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3591 = (+__Z5IKcosd($3590)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3592 = $3587 * $3591; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3593 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3594 = +HEAPF64[$3593>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3595 = (+__Z5IKsind($3594)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3596 = -0.70710678118654802 * $3595; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3597 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3598 = +HEAPF64[$3597>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3599 = (+__Z5IKcosd($3598)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3600 = -0.70710678118654802 * $3599; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3601 = $3596 + $3600; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3602 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3603 = ((($3602)) + 8|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3604 = +HEAPF64[$3603>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3605 = (+__Z5IKsind($3604)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3606 = $3601 * $3605; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3607 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3608 = ((($3607)) + 24|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3609 = +HEAPF64[$3608>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3610 = (+__Z5IKsind($3609)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3611 = $3606 * $3610; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3612 = $3592 + $3611; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3613 = 0.5 * $3612; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3614 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3615 = ((($3614)) + 32|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3616 = +HEAPF64[$3615>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3617 = (+__Z5IKcosd($3616)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3618 = $3613 * $3617; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3619 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3620 = +HEAPF64[$3619>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3621 = (+__Z5IKsind($3620)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3622 = -0.70710678118654802 * $3621; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3623 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3624 = +HEAPF64[$3623>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3625 = (+__Z5IKcosd($3624)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3626 = -0.70710678118654802 * $3625; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3627 = $3622 + $3626; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3628 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3629 = ((($3628)) + 8|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3630 = +HEAPF64[$3629>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3631 = (+__Z5IKcosd($3630)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3632 = $3627 * $3631; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3633 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3634 = ((($3633)) + 16|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3635 = +HEAPF64[$3634>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3636 = (+__Z5IKsind($3635)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3637 = $3632 * $3636; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3638 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3639 = +HEAPF64[$3638>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3640 = (+__Z5IKsind($3639)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3641 = -0.70710678118654802 * $3640; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3642 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3643 = +HEAPF64[$3642>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3644 = (+__Z5IKcosd($3643)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3645 = 0.70710678118654802 * $3644; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3646 = $3641 + $3645; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3647 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3648 = ((($3647)) + 16|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3649 = +HEAPF64[$3648>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3650 = (+__Z5IKcosd($3649)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3651 = $3646 * $3650; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3652 = $3637 + $3651; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3653 = 0.5 * $3652; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3654 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3655 = ((($3654)) + 32|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3656 = +HEAPF64[$3655>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3657 = (+__Z5IKsind($3656)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3658 = $3653 * $3657; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3659 = $3618 + $3658; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3660 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3661 = ((($3660)) + 40|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3662 = +HEAPF64[$3661>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3663 = (+__Z5IKcosd($3662)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3664 = $3659 * $3663; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3665 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3666 = +HEAPF64[$3665>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3667 = (+__Z5IKcosd($3666)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3668 = -0.70710678118654802 * $3667; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3669 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3670 = +HEAPF64[$3669>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3671 = (+__Z5IKsind($3670)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3672 = 0.70710678118654802 * $3671; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3673 = $3668 + $3672; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3674 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3675 = ((($3674)) + 16|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3676 = +HEAPF64[$3675>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3677 = (+__Z5IKsind($3676)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3678 = $3673 * $3677; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3679 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3680 = +HEAPF64[$3679>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3681 = (+__Z5IKsind($3680)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3682 = -0.70710678118654802 * $3681; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3683 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3684 = +HEAPF64[$3683>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3685 = (+__Z5IKcosd($3684)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3686 = -0.70710678118654802 * $3685; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3687 = $3682 + $3686; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3688 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3689 = ((($3688)) + 8|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3690 = +HEAPF64[$3689>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3691 = (+__Z5IKcosd($3690)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3692 = $3687 * $3691; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3693 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3694 = ((($3693)) + 16|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3695 = +HEAPF64[$3694>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3696 = (+__Z5IKcosd($3695)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3697 = $3692 * $3696; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3698 = $3678 + $3697; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3699 = 0.5 * $3698; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3700 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3701 = ((($3700)) + 24|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3702 = +HEAPF64[$3701>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3703 = (+__Z5IKsind($3702)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3704 = $3699 * $3703; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3705 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3706 = +HEAPF64[$3705>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3707 = (+__Z5IKsind($3706)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3708 = -0.70710678118654802 * $3707; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3709 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3710 = +HEAPF64[$3709>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3711 = (+__Z5IKcosd($3710)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3712 = -0.70710678118654802 * $3711; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3713 = $3708 + $3712; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3714 = 0.5 * $3713; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3715 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3716 = ((($3715)) + 24|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3717 = +HEAPF64[$3716>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3718 = (+__Z5IKcosd($3717)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3719 = $3714 * $3718; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3720 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3721 = ((($3720)) + 8|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3722 = +HEAPF64[$3721>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3723 = (+__Z5IKsind($3722)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3724 = $3719 * $3723; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3725 = $3704 + $3724; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3726 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3727 = ((($3726)) + 40|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3728 = +HEAPF64[$3727>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3729 = (+__Z5IKsind($3728)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3730 = $3725 * $3729; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3731 = $3664 + $3730; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3732 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3733 = ((($3732)) + 48|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3734 = +HEAPF64[$3733>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3735 = (+__Z5IKcosd($3734)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3736 = $3731 * $3735; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3737 = $3553 + $3736; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3738 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3739 = ((($3738)) + 32|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3740 = +HEAPF64[$3739>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3741 = (+__Z5IKcosd($3740)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3742 = -0.70710678118654802 * $3741; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3743 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3744 = ((($3743)) + 8|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3745 = +HEAPF64[$3744>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3746 = (+__Z5IKsind($3745)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3747 = $3742 * $3746; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3748 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3749 = ((($3748)) + 16|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3750 = +HEAPF64[$3749>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3751 = (+__Z5IKsind($3750)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3752 = $3747 * $3751; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3753 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3754 = ((($3753)) + 16|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3755 = +HEAPF64[$3754>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3756 = (+__Z5IKcosd($3755)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3757 = 1.0 * $3756; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3758 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3759 = ((($3758)) + 24|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3760 = +HEAPF64[$3759>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3761 = (+__Z5IKcosd($3760)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3762 = $3757 * $3761; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3763 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3764 = ((($3763)) + 8|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3765 = +HEAPF64[$3764>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3766 = (+__Z5IKsind($3765)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3767 = $3762 * $3766; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3768 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3769 = ((($3768)) + 8|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3770 = +HEAPF64[$3769>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3771 = (+__Z5IKcosd($3770)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3772 = 1.0 * $3771; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3773 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3774 = ((($3773)) + 24|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3775 = +HEAPF64[$3774>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3776 = (+__Z5IKsind($3775)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3777 = $3772 * $3776; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3778 = $3767 + $3777; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3779 = -0.70710678118654802 * $3778; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3780 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3781 = ((($3780)) + 32|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3782 = +HEAPF64[$3781>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3783 = (+__Z5IKsind($3782)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3784 = $3779 * $3783; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3785 = $3752 + $3784; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3786 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3787 = ((($3786)) + 48|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3788 = +HEAPF64[$3787>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3789 = (+__Z5IKsind($3788)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3790 = $3785 * $3789; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3791 = $3737 + $3790; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3792 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3793 = +HEAPF64[$3792>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3794 = (+__Z5IKsind($3793)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3795 = -0.70710678118654802 * $3794; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3796 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3797 = +HEAPF64[$3796>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3798 = (+__Z5IKcosd($3797)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3799 = -0.70710678118654802 * $3798; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3800 = $3795 + $3799; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3801 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3802 = ((($3801)) + 16|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3803 = +HEAPF64[$3802>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3804 = (+__Z5IKsind($3803)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3805 = $3800 * $3804; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3806 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3807 = +HEAPF64[$3806>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3808 = (+__Z5IKsind($3807)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3809 = -0.70710678118654802 * $3808; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3810 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3811 = +HEAPF64[$3810>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3812 = (+__Z5IKcosd($3811)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3813 = 0.70710678118654802 * $3812; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3814 = $3809 + $3813; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3815 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3816 = ((($3815)) + 8|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3817 = +HEAPF64[$3816>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3818 = (+__Z5IKcosd($3817)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3819 = $3814 * $3818; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3820 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3821 = ((($3820)) + 16|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3822 = +HEAPF64[$3821>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3823 = (+__Z5IKcosd($3822)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3824 = $3819 * $3823; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3825 = $3805 + $3824; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3826 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3827 = ((($3826)) + 24|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3828 = +HEAPF64[$3827>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3829 = (+__Z5IKcosd($3828)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3830 = $3825 * $3829; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3831 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3832 = +HEAPF64[$3831>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3833 = (+__Z5IKcosd($3832)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3834 = -0.70710678118654802 * $3833; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3835 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3836 = +HEAPF64[$3835>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3837 = (+__Z5IKsind($3836)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3838 = 0.70710678118654802 * $3837; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3839 = $3834 + $3838; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3840 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3841 = ((($3840)) + 8|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3842 = +HEAPF64[$3841>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3843 = (+__Z5IKsind($3842)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3844 = $3839 * $3843; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3845 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3846 = ((($3845)) + 24|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3847 = +HEAPF64[$3846>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3848 = (+__Z5IKsind($3847)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3849 = $3844 * $3848; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3850 = $3830 + $3849; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3851 = -0.5 * $3850; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3852 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3853 = ((($3852)) + 32|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3854 = +HEAPF64[$3853>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3855 = (+__Z5IKcosd($3854)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3856 = $3851 * $3855; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3857 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3858 = +HEAPF64[$3857>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3859 = (+__Z5IKsind($3858)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3860 = -0.70710678118654802 * $3859; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3861 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3862 = +HEAPF64[$3861>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3863 = (+__Z5IKcosd($3862)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3864 = -0.70710678118654802 * $3863; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3865 = $3860 + $3864; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3866 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3867 = ((($3866)) + 16|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3868 = +HEAPF64[$3867>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3869 = (+__Z5IKcosd($3868)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3870 = $3865 * $3869; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3871 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3872 = +HEAPF64[$3871>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3873 = (+__Z5IKcosd($3872)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3874 = -0.70710678118654802 * $3873; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3875 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3876 = +HEAPF64[$3875>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3877 = (+__Z5IKsind($3876)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3878 = 0.70710678118654802 * $3877; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3879 = $3874 + $3878; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3880 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3881 = ((($3880)) + 8|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3882 = +HEAPF64[$3881>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3883 = (+__Z5IKcosd($3882)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3884 = $3879 * $3883; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3885 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3886 = ((($3885)) + 16|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3887 = +HEAPF64[$3886>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3888 = (+__Z5IKsind($3887)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3889 = $3884 * $3888; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3890 = $3870 + $3889; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3891 = -0.5 * $3890; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3892 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3893 = ((($3892)) + 32|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3894 = +HEAPF64[$3893>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3895 = (+__Z5IKsind($3894)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3896 = $3891 * $3895; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3897 = $3856 + $3896; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3898 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3899 = ((($3898)) + 40|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3900 = +HEAPF64[$3899>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3901 = (+__Z5IKcosd($3900)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3902 = $3897 * $3901; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3903 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3904 = +HEAPF64[$3903>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3905 = (+__Z5IKcosd($3904)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3906 = 0.70710678118654802 * $3905; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3907 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3908 = +HEAPF64[$3907>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3909 = (+__Z5IKsind($3908)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3910 = 0.70710678118654802 * $3909; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3911 = $3906 + $3910; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3912 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3913 = ((($3912)) + 16|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3914 = +HEAPF64[$3913>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3915 = (+__Z5IKsind($3914)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3916 = $3911 * $3915; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3917 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3918 = +HEAPF64[$3917>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3919 = (+__Z5IKcosd($3918)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3920 = -0.70710678118654802 * $3919; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3921 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3922 = +HEAPF64[$3921>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3923 = (+__Z5IKsind($3922)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3924 = 0.70710678118654802 * $3923; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3925 = $3920 + $3924; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3926 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3927 = ((($3926)) + 8|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3928 = +HEAPF64[$3927>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3929 = (+__Z5IKcosd($3928)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3930 = $3925 * $3929; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3931 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3932 = ((($3931)) + 16|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3933 = +HEAPF64[$3932>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3934 = (+__Z5IKcosd($3933)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3935 = $3930 * $3934; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3936 = $3916 + $3935; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3937 = -0.5 * $3936; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3938 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3939 = ((($3938)) + 24|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3940 = +HEAPF64[$3939>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3941 = (+__Z5IKsind($3940)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3942 = $3937 * $3941; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3943 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3944 = +HEAPF64[$3943>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3945 = (+__Z5IKcosd($3944)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3946 = -0.70710678118654802 * $3945; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3947 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3948 = +HEAPF64[$3947>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3949 = (+__Z5IKsind($3948)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3950 = 0.70710678118654802 * $3949; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3951 = $3946 + $3950; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3952 = -0.5 * $3951; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3953 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3954 = ((($3953)) + 24|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3955 = +HEAPF64[$3954>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3956 = (+__Z5IKcosd($3955)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3957 = $3952 * $3956; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3958 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3959 = ((($3958)) + 8|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3960 = +HEAPF64[$3959>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3961 = (+__Z5IKsind($3960)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3962 = $3957 * $3961; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3963 = $3942 + $3962; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3964 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3965 = ((($3964)) + 40|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3966 = +HEAPF64[$3965>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3967 = (+__Z5IKsind($3966)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3968 = $3963 * $3967; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3969 = $3902 + $3968; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3970 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3971 = ((($3970)) + 48|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3972 = +HEAPF64[$3971>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3973 = (+__Z5IKcosd($3972)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3974 = $3969 * $3973; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3975 = $3791 + $3974; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3976 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3977 = +HEAPF64[$3976>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3978 = (+__Z5IKcosd($3977)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3979 = -0.70710678118654802 * $3978; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3980 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3981 = +HEAPF64[$3980>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3982 = (+__Z5IKsind($3981)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3983 = 0.70710678118654802 * $3982; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3984 = $3979 + $3983; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3985 = -0.5 * $3984; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3986 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3987 = ((($3986)) + 8|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3988 = +HEAPF64[$3987>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3989 = (+__Z5IKcosd($3988)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3990 = $3985 * $3989; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3991 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3992 = ((($3991)) + 16|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3993 = +HEAPF64[$3992>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3994 = (+__Z5IKsind($3993)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3995 = $3990 * $3994; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3996 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3997 = +HEAPF64[$3996>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3998 = (+__Z5IKsind($3997)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $3999 = -0.70710678118654802 * $3998; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4000 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4001 = +HEAPF64[$4000>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4002 = (+__Z5IKcosd($4001)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4003 = -0.70710678118654802 * $4002; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4004 = $3999 + $4003; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4005 = -0.5 * $4004; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4006 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4007 = ((($4006)) + 16|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4008 = +HEAPF64[$4007>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4009 = (+__Z5IKcosd($4008)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4010 = $4005 * $4009; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4011 = $3995 + $4010; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4012 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4013 = ((($4012)) + 32|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4014 = +HEAPF64[$4013>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4015 = (+__Z5IKcosd($4014)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4016 = $4011 * $4015; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4017 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4018 = +HEAPF64[$4017>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4019 = (+__Z5IKsind($4018)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4020 = -0.70710678118654802 * $4019; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4021 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4022 = +HEAPF64[$4021>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4023 = (+__Z5IKcosd($4022)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4024 = 0.70710678118654802 * $4023; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4025 = $4020 + $4024; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4026 = -1.0 * $4025; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4027 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4028 = ((($4027)) + 8|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4029 = +HEAPF64[$4028>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4030 = (+__Z5IKcosd($4029)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4031 = $4026 * $4030; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4032 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4033 = ((($4032)) + 16|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4034 = +HEAPF64[$4033>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4035 = (+__Z5IKcosd($4034)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4036 = $4031 * $4035; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4037 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4038 = +HEAPF64[$4037>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4039 = (+__Z5IKsind($4038)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4040 = -0.70710678118654802 * $4039; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4041 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4042 = +HEAPF64[$4041>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4043 = (+__Z5IKcosd($4042)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4044 = -0.70710678118654802 * $4043; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4045 = $4040 + $4044; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4046 = -1.0 * $4045; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4047 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4048 = ((($4047)) + 16|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4049 = +HEAPF64[$4048>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4050 = (+__Z5IKsind($4049)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4051 = $4046 * $4050; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4052 = $4036 + $4051; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4053 = -0.5 * $4052; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4054 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4055 = ((($4054)) + 24|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4056 = +HEAPF64[$4055>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4057 = (+__Z5IKcosd($4056)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4058 = $4053 * $4057; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4059 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4060 = +HEAPF64[$4059>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4061 = (+__Z5IKsind($4060)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4062 = -0.70710678118654802 * $4061; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4063 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4064 = +HEAPF64[$4063>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4065 = (+__Z5IKcosd($4064)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4066 = 0.70710678118654802 * $4065; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4067 = $4062 + $4066; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4068 = -0.5 * $4067; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4069 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4070 = ((($4069)) + 8|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4071 = +HEAPF64[$4070>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4072 = (+__Z5IKsind($4071)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4073 = $4068 * $4072; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4074 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4075 = ((($4074)) + 24|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4076 = +HEAPF64[$4075>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4077 = (+__Z5IKsind($4076)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4078 = $4073 * $4077; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4079 = $4058 + $4078; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4080 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4081 = ((($4080)) + 32|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4082 = +HEAPF64[$4081>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4083 = (+__Z5IKsind($4082)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4084 = $4079 * $4083; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4085 = $4016 + $4084; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4086 = $0; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4087 = ((($4086)) + 48|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4088 = +HEAPF64[$4087>>3]; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4089 = (+__Z5IKsind($4088)); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4090 = $4085 * $4089; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4091 = $3975 + $4090; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4092 = $2; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4093 = ((($4092)) + 32|0); //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 HEAPF64[$4093>>3] = $4091; //@line 354 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4094 = $x23; //@line 355 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4095 = 0.5 * $4094; //@line 355 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $x48 = $4095; //@line 355 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4096 = $x44; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4097 = -1.0 * $4096; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4098 = $x7; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4099 = $x17; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4100 = $x36; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4101 = $4099 * $4100; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4102 = $x15; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4103 = $x42; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4104 = $4102 * $4103; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4105 = $4101 + $4104; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4106 = $4098 * $4105; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4107 = $4097 + $4106; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4108 = $x6; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4109 = $x31; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4110 = -1.0 * $4109; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4111 = $x48; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4112 = $4110 * $4111; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4113 = $x27; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4114 = $x21; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4115 = -1.0 * $4114; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4116 = $x30; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4117 = $4115 * $4116; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4118 = $x24; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4119 = $x28; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4120 = $4118 * $4119; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4121 = $4117 + $4120; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4122 = $4113 * $4121; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4123 = $4112 + $4122; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4124 = $4108 * $4123; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4125 = $4107 + $4124; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4126 = $x6; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4127 = $x29; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4128 = $x48; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4129 = $4127 * $4128; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4130 = $x14; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4131 = $x18; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4132 = -1.0 * $4131; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4133 = $x31; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4134 = $4132 * $4133; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4135 = $x0; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4136 = -1.0 * $4135; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4137 = $x16; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4138 = $4136 * $4137; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4139 = $x28; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4140 = $4138 * $4139; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4141 = $4134 + $4140; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4142 = $4130 * $4141; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4143 = $4129 + $4142; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4144 = $4126 * $4143; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4145 = $4125 + $4144; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4146 = $x7; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4147 = $x26; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4148 = $x41; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4149 = $4147 * $4148; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4150 = $x22; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4151 = $x35; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4152 = $4150 * $4151; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4153 = $4149 + $4152; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4154 = $4146 * $4153; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4155 = $4145 + $4154; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4156 = $2; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4157 = ((($4156)) + 40|0); //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 HEAPF64[$4157>>3] = $4155; //@line 356 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4158 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4159 = +HEAPF64[$4158>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4160 = (+__Z5IKcosd($4159)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4161 = 0.015909902576697301 * $4160; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4162 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4163 = +HEAPF64[$4162>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4164 = (+__Z5IKsind($4163)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4165 = 0.015909902576697301 * $4164; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4166 = $4161 + $4165; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4167 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4168 = ((($4167)) + 16|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4169 = +HEAPF64[$4168>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4170 = (+__Z5IKsind($4169)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4171 = $4166 * $4170; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4172 = -0.35017700000000002 + $4171; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4173 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4174 = ((($4173)) + 8|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4175 = +HEAPF64[$4174>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4176 = (+__Z5IKcosd($4175)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4177 = -0.031819805153394602 * $4176; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4178 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4179 = ((($4178)) + 24|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4180 = +HEAPF64[$4179>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4181 = (+__Z5IKsind($4180)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4182 = $4177 * $4181; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4183 = $4172 + $4182; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4184 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4185 = ((($4184)) + 8|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4186 = +HEAPF64[$4185>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4187 = (+__Z5IKcosd($4186)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4188 = -0.38890872965260098 * $4187; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4189 = $4183 + $4188; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4190 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4191 = +HEAPF64[$4190>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4192 = (+__Z5IKsind($4191)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4193 = 0.106066017177982 * $4192; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4194 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4195 = +HEAPF64[$4194>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4196 = (+__Z5IKcosd($4195)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4197 = -0.106066017177982 * $4196; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4198 = $4193 + $4197; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4199 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4200 = ((($4199)) + 24|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4201 = +HEAPF64[$4200>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4202 = (+__Z5IKcosd($4201)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4203 = $4198 * $4202; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4204 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4205 = ((($4204)) + 8|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4206 = +HEAPF64[$4205>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4207 = (+__Z5IKsind($4206)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4208 = $4203 * $4207; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4209 = $4189 + $4208; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4210 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4211 = +HEAPF64[$4210>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4212 = (+__Z5IKcosd($4211)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4213 = 0.015909902576697301 * $4212; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4214 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4215 = +HEAPF64[$4214>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4216 = (+__Z5IKsind($4215)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4217 = -0.015909902576697301 * $4216; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4218 = $4213 + $4217; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4219 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4220 = ((($4219)) + 8|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4221 = +HEAPF64[$4220>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4222 = (+__Z5IKcosd($4221)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4223 = $4218 * $4222; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4224 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4225 = ((($4224)) + 16|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4226 = +HEAPF64[$4225>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4227 = (+__Z5IKcosd($4226)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4228 = $4223 * $4227; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4229 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4230 = +HEAPF64[$4229>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4231 = (+__Z5IKcosd($4230)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4232 = -0.015909902576697301 * $4231; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4233 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4234 = +HEAPF64[$4233>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4235 = (+__Z5IKsind($4234)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4236 = -0.015909902576697301 * $4235; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4237 = $4232 + $4236; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4238 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4239 = ((($4238)) + 16|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4240 = +HEAPF64[$4239>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4241 = (+__Z5IKsind($4240)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4242 = $4237 * $4241; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4243 = $4228 + $4242; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4244 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4245 = ((($4244)) + 24|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4246 = +HEAPF64[$4245>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4247 = (+__Z5IKcosd($4246)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4248 = $4243 * $4247; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4249 = $4209 + $4248; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4250 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4251 = +HEAPF64[$4250>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4252 = (+__Z5IKcosd($4251)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4253 = 0.70710678118654802 * $4252; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4254 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4255 = +HEAPF64[$4254>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4256 = (+__Z5IKsind($4255)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4257 = 0.70710678118654802 * $4256; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4258 = $4253 + $4257; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4259 = 0.023975 * $4258; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4260 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4261 = ((($4260)) + 16|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4262 = +HEAPF64[$4261>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4263 = (+__Z5IKsind($4262)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4264 = $4259 * $4263; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4265 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4266 = +HEAPF64[$4265>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4267 = (+__Z5IKcosd($4266)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4268 = -0.70710678118654802 * $4267; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4269 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4270 = +HEAPF64[$4269>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4271 = (+__Z5IKsind($4270)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4272 = 0.70710678118654802 * $4271; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4273 = $4268 + $4272; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4274 = 0.023975 * $4273; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4275 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4276 = ((($4275)) + 8|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4277 = +HEAPF64[$4276>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4278 = (+__Z5IKcosd($4277)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4279 = $4274 * $4278; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4280 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4281 = ((($4280)) + 16|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4282 = +HEAPF64[$4281>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4283 = (+__Z5IKcosd($4282)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4284 = $4279 * $4283; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4285 = $4264 + $4284; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4286 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4287 = ((($4286)) + 24|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4288 = +HEAPF64[$4287>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4289 = (+__Z5IKsind($4288)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4290 = $4285 * $4289; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4291 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4292 = +HEAPF64[$4291>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4293 = (+__Z5IKcosd($4292)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4294 = -0.016952885078947499 * $4293; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4295 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4296 = +HEAPF64[$4295>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4297 = (+__Z5IKsind($4296)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4298 = 0.016952885078947499 * $4297; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4299 = $4294 + $4298; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4300 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4301 = ((($4300)) + 24|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4302 = +HEAPF64[$4301>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4303 = (+__Z5IKcosd($4302)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4304 = $4299 * $4303; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4305 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4306 = ((($4305)) + 8|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4307 = +HEAPF64[$4306>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4308 = (+__Z5IKsind($4307)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4309 = $4304 * $4308; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4310 = $4290 + $4309; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4311 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4312 = ((($4311)) + 40|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4313 = +HEAPF64[$4312>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4314 = (+__Z5IKcosd($4313)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4315 = $4310 * $4314; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4316 = $4249 + $4315; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4317 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4318 = +HEAPF64[$4317>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4319 = (+__Z5IKsind($4318)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4320 = 0.19445436482630099 * $4319; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4321 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4322 = +HEAPF64[$4321>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4323 = (+__Z5IKcosd($4322)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4324 = -0.19445436482630099 * $4323; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4325 = $4320 + $4324; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4326 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4327 = ((($4326)) + 8|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4328 = +HEAPF64[$4327>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4329 = (+__Z5IKsind($4328)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4330 = $4325 * $4329; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4331 = $4316 + $4330; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4332 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4333 = +HEAPF64[$4332>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4334 = (+__Z5IKcosd($4333)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4335 = -0.015909902576697301 * $4334; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4336 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4337 = +HEAPF64[$4336>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4338 = (+__Z5IKsind($4337)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4339 = 0.015909902576697301 * $4338; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4340 = $4335 + $4339; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4341 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4342 = ((($4341)) + 8|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4343 = +HEAPF64[$4342>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4344 = (+__Z5IKcosd($4343)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4345 = $4340 * $4344; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4346 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4347 = ((($4346)) + 16|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4348 = +HEAPF64[$4347>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4349 = (+__Z5IKcosd($4348)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4350 = $4345 * $4349; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4351 = $4331 + $4350; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4352 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4353 = +HEAPF64[$4352>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4354 = (+__Z5IKcosd($4353)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4355 = 0.016952885078947499 * $4354; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4356 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4357 = +HEAPF64[$4356>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4358 = (+__Z5IKsind($4357)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4359 = 0.016952885078947499 * $4358; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4360 = $4355 + $4359; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4361 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4362 = ((($4361)) + 24|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4363 = +HEAPF64[$4362>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4364 = (+__Z5IKcosd($4363)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4365 = $4360 * $4364; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4366 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4367 = ((($4366)) + 8|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4368 = +HEAPF64[$4367>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4369 = (+__Z5IKsind($4368)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4370 = $4365 * $4369; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4371 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4372 = +HEAPF64[$4371>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4373 = (+__Z5IKcosd($4372)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4374 = -0.70710678118654802 * $4373; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4375 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4376 = +HEAPF64[$4375>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4377 = (+__Z5IKsind($4376)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4378 = 0.70710678118654802 * $4377; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4379 = $4374 + $4378; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4380 = -0.023975 * $4379; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4381 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4382 = ((($4381)) + 16|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4383 = +HEAPF64[$4382>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4384 = (+__Z5IKsind($4383)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4385 = $4380 * $4384; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4386 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4387 = +HEAPF64[$4386>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4388 = (+__Z5IKsind($4387)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4389 = -0.70710678118654802 * $4388; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4390 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4391 = +HEAPF64[$4390>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4392 = (+__Z5IKcosd($4391)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4393 = -0.70710678118654802 * $4392; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4394 = $4389 + $4393; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4395 = -0.023975 * $4394; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4396 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4397 = ((($4396)) + 8|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4398 = +HEAPF64[$4397>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4399 = (+__Z5IKcosd($4398)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4400 = $4395 * $4399; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4401 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4402 = ((($4401)) + 16|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4403 = +HEAPF64[$4402>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4404 = (+__Z5IKcosd($4403)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4405 = $4400 * $4404; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4406 = $4385 + $4405; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4407 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4408 = ((($4407)) + 24|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4409 = +HEAPF64[$4408>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4410 = (+__Z5IKsind($4409)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4411 = $4406 * $4410; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4412 = $4370 + $4411; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4413 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4414 = ((($4413)) + 40|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4415 = +HEAPF64[$4414>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4416 = (+__Z5IKcosd($4415)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4417 = $4412 * $4416; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4418 = $4351 + $4417; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4419 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4420 = +HEAPF64[$4419>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4421 = (+__Z5IKcosd($4420)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4422 = -0.015909902576697301 * $4421; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4423 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4424 = +HEAPF64[$4423>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4425 = (+__Z5IKsind($4424)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4426 = 0.015909902576697301 * $4425; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4427 = $4422 + $4426; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4428 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4429 = ((($4428)) + 16|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4430 = +HEAPF64[$4429>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4431 = (+__Z5IKsind($4430)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4432 = $4427 * $4431; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4433 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4434 = +HEAPF64[$4433>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4435 = (+__Z5IKcosd($4434)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4436 = -0.015909902576697301 * $4435; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4437 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4438 = +HEAPF64[$4437>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4439 = (+__Z5IKsind($4438)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4440 = -0.015909902576697301 * $4439; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4441 = $4436 + $4440; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4442 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4443 = ((($4442)) + 8|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4444 = +HEAPF64[$4443>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4445 = (+__Z5IKcosd($4444)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4446 = $4441 * $4445; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4447 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4448 = ((($4447)) + 16|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4449 = +HEAPF64[$4448>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4450 = (+__Z5IKcosd($4449)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4451 = $4446 * $4450; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4452 = $4432 + $4451; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4453 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4454 = ((($4453)) + 24|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4455 = +HEAPF64[$4454>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4456 = (+__Z5IKcosd($4455)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4457 = $4452 * $4456; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4458 = $4418 + $4457; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4459 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4460 = +HEAPF64[$4459>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4461 = (+__Z5IKsind($4460)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4462 = 0.106066017177982 * $4461; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4463 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4464 = +HEAPF64[$4463>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4465 = (+__Z5IKcosd($4464)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4466 = 0.106066017177982 * $4465; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4467 = $4462 + $4466; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4468 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4469 = ((($4468)) + 8|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4470 = +HEAPF64[$4469>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4471 = (+__Z5IKcosd($4470)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4472 = $4467 * $4471; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4473 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4474 = ((($4473)) + 16|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4475 = +HEAPF64[$4474>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4476 = (+__Z5IKcosd($4475)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4477 = $4472 * $4476; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4478 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4479 = +HEAPF64[$4478>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4480 = (+__Z5IKsind($4479)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4481 = -0.106066017177982 * $4480; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4482 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4483 = +HEAPF64[$4482>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4484 = (+__Z5IKcosd($4483)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4485 = 0.106066017177982 * $4484; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4486 = $4481 + $4485; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4487 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4488 = ((($4487)) + 16|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4489 = +HEAPF64[$4488>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4490 = (+__Z5IKsind($4489)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4491 = $4486 * $4490; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4492 = $4477 + $4491; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4493 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4494 = ((($4493)) + 24|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4495 = +HEAPF64[$4494>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4496 = (+__Z5IKsind($4495)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4497 = $4492 * $4496; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4498 = $4458 + $4497; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4499 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4500 = +HEAPF64[$4499>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4501 = (+__Z5IKcosd($4500)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4502 = 0.015909902576697301 * $4501; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4503 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4504 = +HEAPF64[$4503>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4505 = (+__Z5IKsind($4504)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4506 = -0.015909902576697301 * $4505; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4507 = $4502 + $4506; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4508 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4509 = ((($4508)) + 16|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4510 = +HEAPF64[$4509>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4511 = (+__Z5IKsind($4510)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4512 = $4507 * $4511; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4513 = $4498 + $4512; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4514 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4515 = +HEAPF64[$4514>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4516 = (+__Z5IKsind($4515)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4517 = -0.70710678118654802 * $4516; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4518 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4519 = +HEAPF64[$4518>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4520 = (+__Z5IKcosd($4519)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4521 = 0.70710678118654802 * $4520; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4522 = $4517 + $4521; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4523 = 0.023975 * $4522; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4524 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4525 = ((($4524)) + 16|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4526 = +HEAPF64[$4525>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4527 = (+__Z5IKcosd($4526)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4528 = $4523 * $4527; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4529 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4530 = +HEAPF64[$4529>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4531 = (+__Z5IKsind($4530)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4532 = -0.70710678118654802 * $4531; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4533 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4534 = +HEAPF64[$4533>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4535 = (+__Z5IKcosd($4534)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4536 = -0.70710678118654802 * $4535; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4537 = $4532 + $4536; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4538 = 0.023975 * $4537; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4539 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4540 = ((($4539)) + 8|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4541 = +HEAPF64[$4540>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4542 = (+__Z5IKcosd($4541)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4543 = $4538 * $4542; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4544 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4545 = ((($4544)) + 16|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4546 = +HEAPF64[$4545>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4547 = (+__Z5IKsind($4546)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4548 = $4543 * $4547; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4549 = $4528 + $4548; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4550 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4551 = ((($4550)) + 32|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4552 = +HEAPF64[$4551>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4553 = (+__Z5IKsind($4552)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4554 = $4549 * $4553; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4555 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4556 = +HEAPF64[$4555>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4557 = (+__Z5IKcosd($4556)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4558 = 0.70710678118654802 * $4557; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4559 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4560 = +HEAPF64[$4559>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4561 = (+__Z5IKsind($4560)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4562 = 0.70710678118654802 * $4561; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4563 = $4558 + $4562; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4564 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4565 = ((($4564)) + 8|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4566 = +HEAPF64[$4565>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4567 = (+__Z5IKcosd($4566)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4568 = $4563 * $4567; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4569 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4570 = ((($4569)) + 16|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4571 = +HEAPF64[$4570>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4572 = (+__Z5IKcosd($4571)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4573 = $4568 * $4572; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4574 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4575 = +HEAPF64[$4574>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4576 = (+__Z5IKsind($4575)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4577 = -0.70710678118654802 * $4576; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4578 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4579 = +HEAPF64[$4578>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4580 = (+__Z5IKcosd($4579)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4581 = 0.70710678118654802 * $4580; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4582 = $4577 + $4581; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4583 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4584 = ((($4583)) + 16|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4585 = +HEAPF64[$4584>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4586 = (+__Z5IKsind($4585)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4587 = $4582 * $4586; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4588 = $4573 + $4587; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4589 = 0.023975 * $4588; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4590 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4591 = ((($4590)) + 24|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4592 = +HEAPF64[$4591>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4593 = (+__Z5IKcosd($4592)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4594 = $4589 * $4593; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4595 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4596 = +HEAPF64[$4595>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4597 = (+__Z5IKsind($4596)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4598 = -0.70710678118654802 * $4597; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4599 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4600 = +HEAPF64[$4599>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4601 = (+__Z5IKcosd($4600)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4602 = -0.70710678118654802 * $4601; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4603 = $4598 + $4602; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4604 = 0.023975 * $4603; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4605 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4606 = ((($4605)) + 8|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4607 = +HEAPF64[$4606>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4608 = (+__Z5IKsind($4607)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4609 = $4604 * $4608; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4610 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4611 = ((($4610)) + 24|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4612 = +HEAPF64[$4611>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4613 = (+__Z5IKsind($4612)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4614 = $4609 * $4613; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4615 = $4594 + $4614; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4616 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4617 = ((($4616)) + 32|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4618 = +HEAPF64[$4617>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4619 = (+__Z5IKcosd($4618)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4620 = $4615 * $4619; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4621 = $4554 + $4620; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4622 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4623 = ((($4622)) + 40|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4624 = +HEAPF64[$4623>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4625 = (+__Z5IKsind($4624)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4626 = $4621 * $4625; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4627 = $4513 + $4626; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4628 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4629 = +HEAPF64[$4628>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4630 = (+__Z5IKcosd($4629)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4631 = 0.015909902576697301 * $4630; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4632 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4633 = +HEAPF64[$4632>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4634 = (+__Z5IKsind($4633)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4635 = 0.015909902576697301 * $4634; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4636 = $4631 + $4635; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4637 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4638 = ((($4637)) + 8|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4639 = +HEAPF64[$4638>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4640 = (+__Z5IKcosd($4639)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4641 = $4636 * $4640; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4642 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4643 = ((($4642)) + 16|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4644 = +HEAPF64[$4643>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4645 = (+__Z5IKcosd($4644)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4646 = $4641 * $4645; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4647 = $4627 + $4646; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4648 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4649 = +HEAPF64[$4648>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4650 = (+__Z5IKsind($4649)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4651 = -0.70710678118654802 * $4650; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4652 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4653 = +HEAPF64[$4652>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4654 = (+__Z5IKcosd($4653)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4655 = -0.70710678118654802 * $4654; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4656 = $4651 + $4655; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4657 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4658 = ((($4657)) + 16|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4659 = +HEAPF64[$4658>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4660 = (+__Z5IKsind($4659)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4661 = $4656 * $4660; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4662 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4663 = +HEAPF64[$4662>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4664 = (+__Z5IKsind($4663)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4665 = -0.70710678118654802 * $4664; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4666 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4667 = +HEAPF64[$4666>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4668 = (+__Z5IKcosd($4667)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4669 = 0.70710678118654802 * $4668; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4670 = $4665 + $4669; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4671 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4672 = ((($4671)) + 8|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4673 = +HEAPF64[$4672>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4674 = (+__Z5IKcosd($4673)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4675 = $4670 * $4674; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4676 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4677 = ((($4676)) + 16|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4678 = +HEAPF64[$4677>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4679 = (+__Z5IKcosd($4678)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4680 = $4675 * $4679; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4681 = $4661 + $4680; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4682 = -0.023975 * $4681; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4683 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4684 = ((($4683)) + 24|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4685 = +HEAPF64[$4684>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4686 = (+__Z5IKcosd($4685)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4687 = $4682 * $4686; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4688 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4689 = +HEAPF64[$4688>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4690 = (+__Z5IKcosd($4689)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4691 = -0.70710678118654802 * $4690; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4692 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4693 = +HEAPF64[$4692>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4694 = (+__Z5IKsind($4693)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4695 = 0.70710678118654802 * $4694; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4696 = $4691 + $4695; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4697 = -0.023975 * $4696; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4698 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4699 = ((($4698)) + 8|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4700 = +HEAPF64[$4699>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4701 = (+__Z5IKsind($4700)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4702 = $4697 * $4701; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4703 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4704 = ((($4703)) + 24|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4705 = +HEAPF64[$4704>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4706 = (+__Z5IKsind($4705)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4707 = $4702 * $4706; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4708 = $4687 + $4707; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4709 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4710 = ((($4709)) + 32|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4711 = +HEAPF64[$4710>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4712 = (+__Z5IKcosd($4711)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4713 = $4708 * $4712; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4714 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4715 = +HEAPF64[$4714>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4716 = (+__Z5IKcosd($4715)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4717 = -0.70710678118654802 * $4716; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4718 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4719 = +HEAPF64[$4718>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4720 = (+__Z5IKsind($4719)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4721 = 0.70710678118654802 * $4720; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4722 = $4717 + $4721; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4723 = -0.023975 * $4722; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4724 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4725 = ((($4724)) + 8|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4726 = +HEAPF64[$4725>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4727 = (+__Z5IKcosd($4726)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4728 = $4723 * $4727; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4729 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4730 = ((($4729)) + 16|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4731 = +HEAPF64[$4730>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4732 = (+__Z5IKsind($4731)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4733 = $4728 * $4732; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4734 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4735 = +HEAPF64[$4734>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4736 = (+__Z5IKsind($4735)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4737 = -0.70710678118654802 * $4736; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4738 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4739 = +HEAPF64[$4738>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4740 = (+__Z5IKcosd($4739)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4741 = -0.70710678118654802 * $4740; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4742 = $4737 + $4741; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4743 = -0.023975 * $4742; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4744 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4745 = ((($4744)) + 16|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4746 = +HEAPF64[$4745>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4747 = (+__Z5IKcosd($4746)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4748 = $4743 * $4747; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4749 = $4733 + $4748; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4750 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4751 = ((($4750)) + 32|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4752 = +HEAPF64[$4751>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4753 = (+__Z5IKsind($4752)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4754 = $4749 * $4753; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4755 = $4713 + $4754; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4756 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4757 = ((($4756)) + 40|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4758 = +HEAPF64[$4757>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4759 = (+__Z5IKsind($4758)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4760 = $4755 * $4759; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4761 = $4647 + $4760; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4762 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4763 = ((($4762)) + 16|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4764 = +HEAPF64[$4763>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4765 = (+__Z5IKcosd($4764)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4766 = 0.21213203435596401 * $4765; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4767 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4768 = ((($4767)) + 8|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4769 = +HEAPF64[$4768>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4770 = (+__Z5IKsind($4769)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4771 = $4766 * $4770; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4772 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4773 = ((($4772)) + 24|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4774 = +HEAPF64[$4773>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4775 = (+__Z5IKsind($4774)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4776 = $4771 * $4775; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4777 = $4761 + $4776; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4778 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4779 = ((($4778)) + 16|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4780 = +HEAPF64[$4779>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4781 = (+__Z5IKcosd($4780)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4782 = -0.031819805153394602 * $4781; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4783 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4784 = ((($4783)) + 24|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4785 = +HEAPF64[$4784>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4786 = (+__Z5IKcosd($4785)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4787 = $4782 * $4786; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4788 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4789 = ((($4788)) + 8|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4790 = +HEAPF64[$4789>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4791 = (+__Z5IKsind($4790)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4792 = $4787 * $4791; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4793 = $4777 + $4792; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4794 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4795 = +HEAPF64[$4794>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4796 = (+__Z5IKcosd($4795)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4797 = -0.015909902576697301 * $4796; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4798 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4799 = +HEAPF64[$4798>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4800 = (+__Z5IKsind($4799)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4801 = 0.015909902576697301 * $4800; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4802 = $4797 + $4801; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4803 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4804 = ((($4803)) + 8|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4805 = +HEAPF64[$4804>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4806 = (+__Z5IKsind($4805)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4807 = $4802 * $4806; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4808 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4809 = ((($4808)) + 24|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4810 = +HEAPF64[$4809>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4811 = (+__Z5IKsind($4810)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4812 = $4807 * $4811; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4813 = $4793 + $4812; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4814 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4815 = ((($4814)) + 16|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4816 = +HEAPF64[$4815>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4817 = (+__Z5IKcosd($4816)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4818 = 0.031819805153394602 * $4817; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4819 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4820 = ((($4819)) + 8|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4821 = +HEAPF64[$4820>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4822 = (+__Z5IKsind($4821)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4823 = $4818 * $4822; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4824 = $4813 + $4823; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4825 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4826 = ((($4825)) + 16|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4827 = +HEAPF64[$4826>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4828 = (+__Z5IKcosd($4827)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4829 = -0.04795 * $4828; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4830 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4831 = ((($4830)) + 24|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4832 = +HEAPF64[$4831>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4833 = (+__Z5IKcosd($4832)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4834 = $4829 * $4833; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4835 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4836 = ((($4835)) + 8|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4837 = +HEAPF64[$4836>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4838 = (+__Z5IKsind($4837)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4839 = $4834 * $4838; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4840 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4841 = ((($4840)) + 8|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4842 = +HEAPF64[$4841>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4843 = (+__Z5IKcosd($4842)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4844 = -0.04795 * $4843; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4845 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4846 = ((($4845)) + 24|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4847 = +HEAPF64[$4846>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4848 = (+__Z5IKsind($4847)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4849 = $4844 * $4848; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4850 = $4839 + $4849; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4851 = -0.70710678118654802 * $4850; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4852 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4853 = ((($4852)) + 32|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4854 = +HEAPF64[$4853>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4855 = (+__Z5IKcosd($4854)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4856 = $4851 * $4855; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4857 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4858 = ((($4857)) + 8|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4859 = +HEAPF64[$4858>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4860 = (+__Z5IKsind($4859)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4861 = -0.033905770157894997 * $4860; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4862 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4863 = ((($4862)) + 16|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4864 = +HEAPF64[$4863>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4865 = (+__Z5IKsind($4864)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4866 = $4861 * $4865; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4867 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4868 = ((($4867)) + 32|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4869 = +HEAPF64[$4868>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4870 = (+__Z5IKsind($4869)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4871 = $4866 * $4870; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4872 = $4856 + $4871; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4873 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4874 = ((($4873)) + 40|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4875 = +HEAPF64[$4874>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4876 = (+__Z5IKsind($4875)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4877 = $4872 * $4876; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4878 = $4824 + $4877; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4879 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4880 = +HEAPF64[$4879>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4881 = (+__Z5IKcosd($4880)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4882 = 0.015909902576697301 * $4881; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4883 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4884 = +HEAPF64[$4883>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4885 = (+__Z5IKsind($4884)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4886 = 0.015909902576697301 * $4885; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4887 = $4882 + $4886; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4888 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4889 = ((($4888)) + 8|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4890 = +HEAPF64[$4889>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4891 = (+__Z5IKsind($4890)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4892 = $4887 * $4891; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4893 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4894 = ((($4893)) + 24|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4895 = +HEAPF64[$4894>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4896 = (+__Z5IKsind($4895)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4897 = $4892 * $4896; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4898 = $4878 + $4897; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4899 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4900 = +HEAPF64[$4899>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4901 = (+__Z5IKsind($4900)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4902 = 0.106066017177982 * $4901; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4903 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4904 = +HEAPF64[$4903>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4905 = (+__Z5IKcosd($4904)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4906 = -0.106066017177982 * $4905; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4907 = $4902 + $4906; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4908 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4909 = ((($4908)) + 8|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4910 = +HEAPF64[$4909>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4911 = (+__Z5IKcosd($4910)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4912 = $4907 * $4911; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4913 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4914 = ((($4913)) + 16|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4915 = +HEAPF64[$4914>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4916 = (+__Z5IKcosd($4915)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4917 = $4912 * $4916; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4918 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4919 = +HEAPF64[$4918>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4920 = (+__Z5IKsind($4919)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4921 = 0.106066017177982 * $4920; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4922 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4923 = +HEAPF64[$4922>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4924 = (+__Z5IKcosd($4923)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4925 = 0.106066017177982 * $4924; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4926 = $4921 + $4925; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4927 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4928 = ((($4927)) + 16|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4929 = +HEAPF64[$4928>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4930 = (+__Z5IKsind($4929)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4931 = $4926 * $4930; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4932 = $4917 + $4931; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4933 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4934 = ((($4933)) + 24|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4935 = +HEAPF64[$4934>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4936 = (+__Z5IKsind($4935)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4937 = $4932 * $4936; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4938 = $4898 + $4937; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4939 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4940 = ((($4939)) + 16|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4941 = +HEAPF64[$4940>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4942 = (+__Z5IKcosd($4941)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4943 = 0.033905770157894997 * $4942; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4944 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4945 = ((($4944)) + 8|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4946 = +HEAPF64[$4945>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4947 = (+__Z5IKsind($4946)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4948 = $4943 * $4947; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4949 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4950 = ((($4949)) + 24|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4951 = +HEAPF64[$4950>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4952 = (+__Z5IKsind($4951)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4953 = $4948 * $4952; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4954 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4955 = ((($4954)) + 8|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4956 = +HEAPF64[$4955>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4957 = (+__Z5IKcosd($4956)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4958 = -0.033905770157894997 * $4957; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4959 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4960 = ((($4959)) + 24|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4961 = +HEAPF64[$4960>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4962 = (+__Z5IKcosd($4961)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4963 = $4958 * $4962; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4964 = $4953 + $4963; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4965 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4966 = ((($4965)) + 40|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4967 = +HEAPF64[$4966>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4968 = (+__Z5IKcosd($4967)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4969 = $4964 * $4968; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4970 = $4938 + $4969; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4971 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4972 = ((($4971)) + 8|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4973 = +HEAPF64[$4972>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4974 = (+__Z5IKcosd($4973)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4975 = -0.21213203435596401 * $4974; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4976 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4977 = ((($4976)) + 24|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4978 = +HEAPF64[$4977>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4979 = (+__Z5IKcosd($4978)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4980 = $4975 * $4979; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4981 = $4970 + $4980; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4982 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4983 = +HEAPF64[$4982>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4984 = (+__Z5IKcosd($4983)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4985 = 0.19445436482630099 * $4984; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4986 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4987 = +HEAPF64[$4986>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4988 = (+__Z5IKsind($4987)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4989 = 0.19445436482630099 * $4988; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4990 = $4985 + $4989; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4991 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4992 = ((($4991)) + 8|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4993 = +HEAPF64[$4992>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4994 = (+__Z5IKsind($4993)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4995 = $4990 * $4994; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4996 = $4981 + $4995; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4997 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4998 = +HEAPF64[$4997>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $4999 = (+__Z5IKsind($4998)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5000 = 0.106066017177982 * $4999; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5001 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5002 = +HEAPF64[$5001>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5003 = (+__Z5IKcosd($5002)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5004 = 0.106066017177982 * $5003; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5005 = $5000 + $5004; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5006 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5007 = ((($5006)) + 24|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5008 = +HEAPF64[$5007>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5009 = (+__Z5IKcosd($5008)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5010 = $5005 * $5009; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5011 = $0; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5012 = ((($5011)) + 8|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5013 = +HEAPF64[$5012>>3]; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5014 = (+__Z5IKsind($5013)); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5015 = $5010 * $5014; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5016 = $4996 + $5015; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5017 = $1; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5018 = ((($5017)) + 8|0); //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 HEAPF64[$5018>>3] = $5016; //@line 357 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5019 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5020 = +HEAPF64[$5019>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5021 = (+__Z5IKcosd($5020)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5022 = 0.70710678118654802 * $5021; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5023 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5024 = +HEAPF64[$5023>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5025 = (+__Z5IKsind($5024)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5026 = 0.70710678118654802 * $5025; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5027 = $5022 + $5026; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5028 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5029 = ((($5028)) + 8|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5030 = +HEAPF64[$5029>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5031 = (+__Z5IKcosd($5030)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5032 = $5027 * $5031; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5033 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5034 = ((($5033)) + 16|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5035 = +HEAPF64[$5034>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5036 = (+__Z5IKcosd($5035)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5037 = $5032 * $5036; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5038 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5039 = +HEAPF64[$5038>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5040 = (+__Z5IKsind($5039)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5041 = -0.70710678118654802 * $5040; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5042 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5043 = +HEAPF64[$5042>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5044 = (+__Z5IKcosd($5043)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5045 = 0.70710678118654802 * $5044; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5046 = $5041 + $5045; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5047 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5048 = ((($5047)) + 16|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5049 = +HEAPF64[$5048>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5050 = (+__Z5IKsind($5049)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5051 = $5046 * $5050; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5052 = $5037 + $5051; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5053 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5054 = ((($5053)) + 24|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5055 = +HEAPF64[$5054>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5056 = (+__Z5IKcosd($5055)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5057 = $5052 * $5056; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5058 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5059 = +HEAPF64[$5058>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5060 = (+__Z5IKsind($5059)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5061 = -0.70710678118654802 * $5060; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5062 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5063 = +HEAPF64[$5062>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5064 = (+__Z5IKcosd($5063)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5065 = -0.70710678118654802 * $5064; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5066 = $5061 + $5065; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5067 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5068 = ((($5067)) + 8|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5069 = +HEAPF64[$5068>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5070 = (+__Z5IKsind($5069)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5071 = $5066 * $5070; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5072 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5073 = ((($5072)) + 24|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5074 = +HEAPF64[$5073>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5075 = (+__Z5IKsind($5074)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5076 = $5071 * $5075; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5077 = $5057 + $5076; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5078 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5079 = ((($5078)) + 32|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5080 = +HEAPF64[$5079>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5081 = (+__Z5IKcosd($5080)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5082 = $5077 * $5081; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5083 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5084 = +HEAPF64[$5083>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5085 = (+__Z5IKsind($5084)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5086 = -0.70710678118654802 * $5085; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5087 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5088 = +HEAPF64[$5087>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5089 = (+__Z5IKcosd($5088)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5090 = -0.70710678118654802 * $5089; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5091 = $5086 + $5090; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5092 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5093 = ((($5092)) + 8|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5094 = +HEAPF64[$5093>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5095 = (+__Z5IKcosd($5094)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5096 = $5091 * $5095; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5097 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5098 = ((($5097)) + 16|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5099 = +HEAPF64[$5098>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5100 = (+__Z5IKsind($5099)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5101 = $5096 * $5100; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5102 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5103 = +HEAPF64[$5102>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5104 = (+__Z5IKsind($5103)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5105 = -0.70710678118654802 * $5104; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5106 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5107 = +HEAPF64[$5106>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5108 = (+__Z5IKcosd($5107)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5109 = 0.70710678118654802 * $5108; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5110 = $5105 + $5109; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5111 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5112 = ((($5111)) + 16|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5113 = +HEAPF64[$5112>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5114 = (+__Z5IKcosd($5113)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5115 = $5110 * $5114; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5116 = $5101 + $5115; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5117 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5118 = ((($5117)) + 32|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5119 = +HEAPF64[$5118>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5120 = (+__Z5IKsind($5119)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5121 = $5116 * $5120; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5122 = $5082 + $5121; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5123 = 0.70710678118654802 * $5122; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5124 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5125 = ((($5124)) + 40|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5126 = +HEAPF64[$5125>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5127 = (+__Z5IKcosd($5126)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5128 = $5123 * $5127; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5129 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5130 = +HEAPF64[$5129>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5131 = (+__Z5IKsind($5130)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5132 = -0.70710678118654802 * $5131; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5133 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5134 = +HEAPF64[$5133>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5135 = (+__Z5IKcosd($5134)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5136 = -0.70710678118654802 * $5135; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5137 = $5132 + $5136; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5138 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5139 = ((($5138)) + 24|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5140 = +HEAPF64[$5139>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5141 = (+__Z5IKcosd($5140)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5142 = $5137 * $5141; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5143 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5144 = ((($5143)) + 8|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5145 = +HEAPF64[$5144>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5146 = (+__Z5IKsind($5145)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5147 = $5142 * $5146; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5148 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5149 = +HEAPF64[$5148>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5150 = (+__Z5IKcosd($5149)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5151 = -0.70710678118654802 * $5150; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5152 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5153 = +HEAPF64[$5152>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5154 = (+__Z5IKsind($5153)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5155 = 0.70710678118654802 * $5154; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5156 = $5151 + $5155; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5157 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5158 = ((($5157)) + 16|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5159 = +HEAPF64[$5158>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5160 = (+__Z5IKsind($5159)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5161 = $5156 * $5160; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5162 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5163 = +HEAPF64[$5162>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5164 = (+__Z5IKsind($5163)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5165 = -0.70710678118654802 * $5164; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5166 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5167 = +HEAPF64[$5166>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5168 = (+__Z5IKcosd($5167)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5169 = -0.70710678118654802 * $5168; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5170 = $5165 + $5169; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5171 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5172 = ((($5171)) + 8|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5173 = +HEAPF64[$5172>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5174 = (+__Z5IKcosd($5173)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5175 = $5170 * $5174; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5176 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5177 = ((($5176)) + 16|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5178 = +HEAPF64[$5177>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5179 = (+__Z5IKcosd($5178)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5180 = $5175 * $5179; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5181 = $5161 + $5180; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5182 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5183 = ((($5182)) + 24|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5184 = +HEAPF64[$5183>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5185 = (+__Z5IKsind($5184)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5186 = $5181 * $5185; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5187 = $5147 + $5186; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5188 = 0.70710678118654802 * $5187; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5189 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5190 = ((($5189)) + 40|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5191 = +HEAPF64[$5190>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5192 = (+__Z5IKsind($5191)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5193 = $5188 * $5192; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5194 = $5128 + $5193; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5195 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5196 = ((($5195)) + 48|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5197 = +HEAPF64[$5196>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5198 = (+__Z5IKsind($5197)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5199 = $5194 * $5198; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5200 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5201 = +HEAPF64[$5200>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5202 = (+__Z5IKcosd($5201)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5203 = 0.70710678118654802 * $5202; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5204 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5205 = +HEAPF64[$5204>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5206 = (+__Z5IKsind($5205)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5207 = 0.70710678118654802 * $5206; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5208 = $5203 + $5207; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5209 = -1.0 * $5208; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5210 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5211 = ((($5210)) + 8|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5212 = +HEAPF64[$5211>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5213 = (+__Z5IKsind($5212)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5214 = $5209 * $5213; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5215 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5216 = ((($5215)) + 24|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5217 = +HEAPF64[$5216>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5218 = (+__Z5IKsind($5217)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5219 = $5214 * $5218; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5220 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5221 = +HEAPF64[$5220>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5222 = (+__Z5IKsind($5221)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5223 = -0.70710678118654802 * $5222; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5224 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5225 = +HEAPF64[$5224>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5226 = (+__Z5IKcosd($5225)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5227 = 0.70710678118654802 * $5226; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5228 = $5223 + $5227; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5229 = -1.0 * $5228; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5230 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5231 = ((($5230)) + 16|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5232 = +HEAPF64[$5231>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5233 = (+__Z5IKsind($5232)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5234 = $5229 * $5233; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5235 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5236 = +HEAPF64[$5235>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5237 = (+__Z5IKcosd($5236)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5238 = 0.70710678118654802 * $5237; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5239 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5240 = +HEAPF64[$5239>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5241 = (+__Z5IKsind($5240)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5242 = 0.70710678118654802 * $5241; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5243 = $5238 + $5242; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5244 = -1.0 * $5243; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5245 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5246 = ((($5245)) + 8|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5247 = +HEAPF64[$5246>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5248 = (+__Z5IKcosd($5247)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5249 = $5244 * $5248; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5250 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5251 = ((($5250)) + 16|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5252 = +HEAPF64[$5251>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5253 = (+__Z5IKcosd($5252)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5254 = $5249 * $5253; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5255 = $5234 + $5254; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5256 = -1.0 * $5255; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5257 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5258 = ((($5257)) + 24|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5259 = +HEAPF64[$5258>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5260 = (+__Z5IKcosd($5259)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5261 = $5256 * $5260; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5262 = $5219 + $5261; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5263 = 0.70710678118654802 * $5262; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5264 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5265 = ((($5264)) + 32|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5266 = +HEAPF64[$5265>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5267 = (+__Z5IKsind($5266)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5268 = $5263 * $5267; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5269 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5270 = +HEAPF64[$5269>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5271 = (+__Z5IKsind($5270)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5272 = -0.70710678118654802 * $5271; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5273 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5274 = +HEAPF64[$5273>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5275 = (+__Z5IKcosd($5274)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5276 = -0.70710678118654802 * $5275; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5277 = $5272 + $5276; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5278 = -1.0 * $5277; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5279 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5280 = ((($5279)) + 8|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5281 = +HEAPF64[$5280>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5282 = (+__Z5IKcosd($5281)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5283 = $5278 * $5282; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5284 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5285 = ((($5284)) + 16|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5286 = +HEAPF64[$5285>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5287 = (+__Z5IKsind($5286)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5288 = $5283 * $5287; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5289 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5290 = +HEAPF64[$5289>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5291 = (+__Z5IKsind($5290)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5292 = -0.70710678118654802 * $5291; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5293 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5294 = +HEAPF64[$5293>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5295 = (+__Z5IKcosd($5294)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5296 = 0.70710678118654802 * $5295; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5297 = $5292 + $5296; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5298 = -1.0 * $5297; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5299 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5300 = ((($5299)) + 16|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5301 = +HEAPF64[$5300>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5302 = (+__Z5IKcosd($5301)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5303 = $5298 * $5302; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5304 = $5288 + $5303; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5305 = 0.70710678118654802 * $5304; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5306 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5307 = ((($5306)) + 32|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5308 = +HEAPF64[$5307>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5309 = (+__Z5IKcosd($5308)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5310 = $5305 * $5309; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5311 = $5268 + $5310; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5312 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5313 = ((($5312)) + 48|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5314 = +HEAPF64[$5313>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5315 = (+__Z5IKcosd($5314)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5316 = $5311 * $5315; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5317 = $5199 + $5316; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5318 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5319 = +HEAPF64[$5318>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5320 = (+__Z5IKcosd($5319)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5321 = -0.70710678118654802 * $5320; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5322 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5323 = +HEAPF64[$5322>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5324 = (+__Z5IKsind($5323)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5325 = 0.70710678118654802 * $5324; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5326 = $5321 + $5325; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5327 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5328 = ((($5327)) + 24|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5329 = +HEAPF64[$5328>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5330 = (+__Z5IKcosd($5329)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5331 = $5326 * $5330; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5332 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5333 = ((($5332)) + 8|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5334 = +HEAPF64[$5333>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5335 = (+__Z5IKsind($5334)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5336 = $5331 * $5335; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5337 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5338 = +HEAPF64[$5337>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5339 = (+__Z5IKcosd($5338)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5340 = 0.70710678118654802 * $5339; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5341 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5342 = +HEAPF64[$5341>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5343 = (+__Z5IKsind($5342)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5344 = 0.70710678118654802 * $5343; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5345 = $5340 + $5344; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5346 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5347 = ((($5346)) + 16|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5348 = +HEAPF64[$5347>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5349 = (+__Z5IKsind($5348)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5350 = $5345 * $5349; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5351 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5352 = +HEAPF64[$5351>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5353 = (+__Z5IKcosd($5352)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5354 = -0.70710678118654802 * $5353; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5355 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5356 = +HEAPF64[$5355>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5357 = (+__Z5IKsind($5356)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5358 = 0.70710678118654802 * $5357; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5359 = $5354 + $5358; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5360 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5361 = ((($5360)) + 8|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5362 = +HEAPF64[$5361>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5363 = (+__Z5IKcosd($5362)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5364 = $5359 * $5363; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5365 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5366 = ((($5365)) + 16|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5367 = +HEAPF64[$5366>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5368 = (+__Z5IKcosd($5367)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5369 = $5364 * $5368; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5370 = $5350 + $5369; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5371 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5372 = ((($5371)) + 24|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5373 = +HEAPF64[$5372>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5374 = (+__Z5IKsind($5373)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5375 = $5370 * $5374; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5376 = $5336 + $5375; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5377 = 0.70710678118654802 * $5376; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5378 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5379 = ((($5378)) + 40|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5380 = +HEAPF64[$5379>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5381 = (+__Z5IKsind($5380)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5382 = $5377 * $5381; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5383 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5384 = +HEAPF64[$5383>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5385 = (+__Z5IKsind($5384)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5386 = -0.70710678118654802 * $5385; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5387 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5388 = +HEAPF64[$5387>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5389 = (+__Z5IKcosd($5388)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5390 = -0.70710678118654802 * $5389; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5391 = $5386 + $5390; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5392 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5393 = ((($5392)) + 16|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5394 = +HEAPF64[$5393>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5395 = (+__Z5IKsind($5394)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5396 = $5391 * $5395; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5397 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5398 = +HEAPF64[$5397>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5399 = (+__Z5IKsind($5398)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5400 = -0.70710678118654802 * $5399; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5401 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5402 = +HEAPF64[$5401>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5403 = (+__Z5IKcosd($5402)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5404 = 0.70710678118654802 * $5403; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5405 = $5400 + $5404; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5406 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5407 = ((($5406)) + 8|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5408 = +HEAPF64[$5407>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5409 = (+__Z5IKcosd($5408)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5410 = $5405 * $5409; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5411 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5412 = ((($5411)) + 16|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5413 = +HEAPF64[$5412>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5414 = (+__Z5IKcosd($5413)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5415 = $5410 * $5414; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5416 = $5396 + $5415; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5417 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5418 = ((($5417)) + 24|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5419 = +HEAPF64[$5418>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5420 = (+__Z5IKcosd($5419)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5421 = $5416 * $5420; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5422 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5423 = +HEAPF64[$5422>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5424 = (+__Z5IKcosd($5423)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5425 = -0.70710678118654802 * $5424; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5426 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5427 = +HEAPF64[$5426>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5428 = (+__Z5IKsind($5427)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5429 = 0.70710678118654802 * $5428; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5430 = $5425 + $5429; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5431 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5432 = ((($5431)) + 8|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5433 = +HEAPF64[$5432>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5434 = (+__Z5IKsind($5433)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5435 = $5430 * $5434; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5436 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5437 = ((($5436)) + 24|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5438 = +HEAPF64[$5437>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5439 = (+__Z5IKsind($5438)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5440 = $5435 * $5439; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5441 = $5421 + $5440; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5442 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5443 = ((($5442)) + 32|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5444 = +HEAPF64[$5443>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5445 = (+__Z5IKcosd($5444)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5446 = $5441 * $5445; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5447 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5448 = +HEAPF64[$5447>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5449 = (+__Z5IKsind($5448)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5450 = -0.70710678118654802 * $5449; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5451 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5452 = +HEAPF64[$5451>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5453 = (+__Z5IKcosd($5452)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5454 = -0.70710678118654802 * $5453; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5455 = $5450 + $5454; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5456 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5457 = ((($5456)) + 16|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5458 = +HEAPF64[$5457>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5459 = (+__Z5IKcosd($5458)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5460 = $5455 * $5459; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5461 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5462 = +HEAPF64[$5461>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5463 = (+__Z5IKcosd($5462)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5464 = -0.70710678118654802 * $5463; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5465 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5466 = +HEAPF64[$5465>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5467 = (+__Z5IKsind($5466)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5468 = 0.70710678118654802 * $5467; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5469 = $5464 + $5468; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5470 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5471 = ((($5470)) + 8|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5472 = +HEAPF64[$5471>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5473 = (+__Z5IKcosd($5472)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5474 = $5469 * $5473; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5475 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5476 = ((($5475)) + 16|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5477 = +HEAPF64[$5476>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5478 = (+__Z5IKsind($5477)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5479 = $5474 * $5478; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5480 = $5460 + $5479; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5481 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5482 = ((($5481)) + 32|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5483 = +HEAPF64[$5482>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5484 = (+__Z5IKsind($5483)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5485 = $5480 * $5484; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5486 = $5446 + $5485; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5487 = 0.70710678118654802 * $5486; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5488 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5489 = ((($5488)) + 40|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5490 = +HEAPF64[$5489>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5491 = (+__Z5IKcosd($5490)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5492 = $5487 * $5491; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5493 = $5382 + $5492; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5494 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5495 = ((($5494)) + 48|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5496 = +HEAPF64[$5495>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5497 = (+__Z5IKsind($5496)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5498 = $5493 * $5497; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5499 = $5317 + $5498; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5500 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5501 = +HEAPF64[$5500>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5502 = (+__Z5IKsind($5501)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5503 = -0.70710678118654802 * $5502; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5504 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5505 = +HEAPF64[$5504>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5506 = (+__Z5IKcosd($5505)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5507 = 0.70710678118654802 * $5506; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5508 = $5503 + $5507; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5509 = -1.0 * $5508; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5510 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5511 = ((($5510)) + 8|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5512 = +HEAPF64[$5511>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5513 = (+__Z5IKsind($5512)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5514 = $5509 * $5513; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5515 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5516 = ((($5515)) + 24|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5517 = +HEAPF64[$5516>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5518 = (+__Z5IKsind($5517)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5519 = $5514 * $5518; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5520 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5521 = +HEAPF64[$5520>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5522 = (+__Z5IKsind($5521)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5523 = -0.70710678118654802 * $5522; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5524 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5525 = +HEAPF64[$5524>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5526 = (+__Z5IKcosd($5525)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5527 = 0.70710678118654802 * $5526; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5528 = $5523 + $5527; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5529 = -1.0 * $5528; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5530 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5531 = ((($5530)) + 8|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5532 = +HEAPF64[$5531>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5533 = (+__Z5IKcosd($5532)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5534 = $5529 * $5533; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5535 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5536 = ((($5535)) + 16|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5537 = +HEAPF64[$5536>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5538 = (+__Z5IKcosd($5537)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5539 = $5534 * $5538; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5540 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5541 = +HEAPF64[$5540>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5542 = (+__Z5IKsind($5541)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5543 = -0.70710678118654802 * $5542; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5544 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5545 = +HEAPF64[$5544>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5546 = (+__Z5IKcosd($5545)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5547 = -0.70710678118654802 * $5546; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5548 = $5543 + $5547; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5549 = -1.0 * $5548; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5550 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5551 = ((($5550)) + 16|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5552 = +HEAPF64[$5551>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5553 = (+__Z5IKsind($5552)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5554 = $5549 * $5553; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5555 = $5539 + $5554; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5556 = -1.0 * $5555; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5557 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5558 = ((($5557)) + 24|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5559 = +HEAPF64[$5558>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5560 = (+__Z5IKcosd($5559)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5561 = $5556 * $5560; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5562 = $5519 + $5561; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5563 = 0.70710678118654802 * $5562; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5564 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5565 = ((($5564)) + 32|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5566 = +HEAPF64[$5565>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5567 = (+__Z5IKsind($5566)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5568 = $5563 * $5567; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5569 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5570 = +HEAPF64[$5569>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5571 = (+__Z5IKcosd($5570)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5572 = -0.70710678118654802 * $5571; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5573 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5574 = +HEAPF64[$5573>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5575 = (+__Z5IKsind($5574)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5576 = 0.70710678118654802 * $5575; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5577 = $5572 + $5576; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5578 = -1.0 * $5577; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5579 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5580 = ((($5579)) + 8|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5581 = +HEAPF64[$5580>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5582 = (+__Z5IKcosd($5581)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5583 = $5578 * $5582; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5584 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5585 = ((($5584)) + 16|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5586 = +HEAPF64[$5585>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5587 = (+__Z5IKsind($5586)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5588 = $5583 * $5587; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5589 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5590 = +HEAPF64[$5589>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5591 = (+__Z5IKsind($5590)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5592 = -0.70710678118654802 * $5591; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5593 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5594 = +HEAPF64[$5593>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5595 = (+__Z5IKcosd($5594)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5596 = -0.70710678118654802 * $5595; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5597 = $5592 + $5596; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5598 = -1.0 * $5597; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5599 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5600 = ((($5599)) + 16|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5601 = +HEAPF64[$5600>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5602 = (+__Z5IKcosd($5601)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5603 = $5598 * $5602; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5604 = $5588 + $5603; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5605 = 0.70710678118654802 * $5604; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5606 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5607 = ((($5606)) + 32|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5608 = +HEAPF64[$5607>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5609 = (+__Z5IKcosd($5608)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5610 = $5605 * $5609; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5611 = $5568 + $5610; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5612 = $0; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5613 = ((($5612)) + 48|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5614 = +HEAPF64[$5613>>3]; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5615 = (+__Z5IKcosd($5614)); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5616 = $5611 * $5615; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5617 = $5499 + $5616; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5618 = $2; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5619 = ((($5618)) + 48|0); //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 HEAPF64[$5619>>3] = $5617; //@line 358 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5620 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5621 = +HEAPF64[$5620>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5622 = (+__Z5IKcosd($5621)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5623 = 0.70710678118654802 * $5622; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5624 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5625 = +HEAPF64[$5624>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5626 = (+__Z5IKsind($5625)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5627 = 0.70710678118654802 * $5626; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5628 = $5623 + $5627; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5629 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5630 = ((($5629)) + 8|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5631 = +HEAPF64[$5630>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5632 = (+__Z5IKcosd($5631)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5633 = $5628 * $5632; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5634 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5635 = ((($5634)) + 16|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5636 = +HEAPF64[$5635>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5637 = (+__Z5IKcosd($5636)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5638 = $5633 * $5637; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5639 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5640 = +HEAPF64[$5639>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5641 = (+__Z5IKsind($5640)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5642 = -0.70710678118654802 * $5641; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5643 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5644 = +HEAPF64[$5643>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5645 = (+__Z5IKcosd($5644)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5646 = 0.70710678118654802 * $5645; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5647 = $5642 + $5646; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5648 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5649 = ((($5648)) + 16|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5650 = +HEAPF64[$5649>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5651 = (+__Z5IKsind($5650)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5652 = $5647 * $5651; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5653 = $5638 + $5652; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5654 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5655 = ((($5654)) + 24|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5656 = +HEAPF64[$5655>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5657 = (+__Z5IKcosd($5656)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5658 = $5653 * $5657; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5659 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5660 = +HEAPF64[$5659>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5661 = (+__Z5IKsind($5660)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5662 = -0.70710678118654802 * $5661; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5663 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5664 = +HEAPF64[$5663>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5665 = (+__Z5IKcosd($5664)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5666 = -0.70710678118654802 * $5665; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5667 = $5662 + $5666; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5668 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5669 = ((($5668)) + 8|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5670 = +HEAPF64[$5669>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5671 = (+__Z5IKsind($5670)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5672 = $5667 * $5671; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5673 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5674 = ((($5673)) + 24|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5675 = +HEAPF64[$5674>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5676 = (+__Z5IKsind($5675)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5677 = $5672 * $5676; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5678 = $5658 + $5677; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5679 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5680 = ((($5679)) + 32|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5681 = +HEAPF64[$5680>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5682 = (+__Z5IKcosd($5681)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5683 = $5678 * $5682; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5684 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5685 = +HEAPF64[$5684>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5686 = (+__Z5IKsind($5685)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5687 = -0.70710678118654802 * $5686; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5688 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5689 = +HEAPF64[$5688>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5690 = (+__Z5IKcosd($5689)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5691 = -0.70710678118654802 * $5690; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5692 = $5687 + $5691; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5693 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5694 = ((($5693)) + 8|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5695 = +HEAPF64[$5694>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5696 = (+__Z5IKcosd($5695)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5697 = $5692 * $5696; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5698 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5699 = ((($5698)) + 16|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5700 = +HEAPF64[$5699>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5701 = (+__Z5IKsind($5700)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5702 = $5697 * $5701; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5703 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5704 = +HEAPF64[$5703>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5705 = (+__Z5IKsind($5704)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5706 = -0.70710678118654802 * $5705; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5707 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5708 = +HEAPF64[$5707>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5709 = (+__Z5IKcosd($5708)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5710 = 0.70710678118654802 * $5709; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5711 = $5706 + $5710; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5712 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5713 = ((($5712)) + 16|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5714 = +HEAPF64[$5713>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5715 = (+__Z5IKcosd($5714)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5716 = $5711 * $5715; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5717 = $5702 + $5716; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5718 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5719 = ((($5718)) + 32|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5720 = +HEAPF64[$5719>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5721 = (+__Z5IKsind($5720)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5722 = $5717 * $5721; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5723 = $5683 + $5722; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5724 = 0.70710678118654802 * $5723; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5725 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5726 = ((($5725)) + 40|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5727 = +HEAPF64[$5726>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5728 = (+__Z5IKcosd($5727)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5729 = $5724 * $5728; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5730 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5731 = +HEAPF64[$5730>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5732 = (+__Z5IKsind($5731)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5733 = -0.70710678118654802 * $5732; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5734 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5735 = +HEAPF64[$5734>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5736 = (+__Z5IKcosd($5735)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5737 = -0.70710678118654802 * $5736; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5738 = $5733 + $5737; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5739 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5740 = ((($5739)) + 24|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5741 = +HEAPF64[$5740>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5742 = (+__Z5IKcosd($5741)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5743 = $5738 * $5742; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5744 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5745 = ((($5744)) + 8|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5746 = +HEAPF64[$5745>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5747 = (+__Z5IKsind($5746)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5748 = $5743 * $5747; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5749 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5750 = +HEAPF64[$5749>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5751 = (+__Z5IKcosd($5750)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5752 = -0.70710678118654802 * $5751; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5753 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5754 = +HEAPF64[$5753>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5755 = (+__Z5IKsind($5754)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5756 = 0.70710678118654802 * $5755; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5757 = $5752 + $5756; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5758 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5759 = ((($5758)) + 16|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5760 = +HEAPF64[$5759>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5761 = (+__Z5IKsind($5760)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5762 = $5757 * $5761; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5763 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5764 = +HEAPF64[$5763>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5765 = (+__Z5IKsind($5764)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5766 = -0.70710678118654802 * $5765; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5767 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5768 = +HEAPF64[$5767>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5769 = (+__Z5IKcosd($5768)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5770 = -0.70710678118654802 * $5769; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5771 = $5766 + $5770; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5772 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5773 = ((($5772)) + 8|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5774 = +HEAPF64[$5773>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5775 = (+__Z5IKcosd($5774)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5776 = $5771 * $5775; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5777 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5778 = ((($5777)) + 16|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5779 = +HEAPF64[$5778>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5780 = (+__Z5IKcosd($5779)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5781 = $5776 * $5780; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5782 = $5762 + $5781; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5783 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5784 = ((($5783)) + 24|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5785 = +HEAPF64[$5784>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5786 = (+__Z5IKsind($5785)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5787 = $5782 * $5786; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5788 = $5748 + $5787; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5789 = 0.70710678118654802 * $5788; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5790 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5791 = ((($5790)) + 40|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5792 = +HEAPF64[$5791>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5793 = (+__Z5IKsind($5792)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5794 = $5789 * $5793; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5795 = $5729 + $5794; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5796 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5797 = ((($5796)) + 48|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5798 = +HEAPF64[$5797>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5799 = (+__Z5IKcosd($5798)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5800 = $5795 * $5799; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5801 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5802 = +HEAPF64[$5801>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5803 = (+__Z5IKcosd($5802)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5804 = -0.70710678118654802 * $5803; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5805 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5806 = +HEAPF64[$5805>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5807 = (+__Z5IKsind($5806)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5808 = 0.70710678118654802 * $5807; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5809 = $5804 + $5808; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5810 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5811 = ((($5810)) + 24|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5812 = +HEAPF64[$5811>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5813 = (+__Z5IKcosd($5812)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5814 = $5809 * $5813; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5815 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5816 = ((($5815)) + 8|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5817 = +HEAPF64[$5816>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5818 = (+__Z5IKsind($5817)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5819 = $5814 * $5818; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5820 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5821 = +HEAPF64[$5820>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5822 = (+__Z5IKcosd($5821)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5823 = 0.70710678118654802 * $5822; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5824 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5825 = +HEAPF64[$5824>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5826 = (+__Z5IKsind($5825)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5827 = 0.70710678118654802 * $5826; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5828 = $5823 + $5827; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5829 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5830 = ((($5829)) + 16|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5831 = +HEAPF64[$5830>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5832 = (+__Z5IKsind($5831)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5833 = $5828 * $5832; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5834 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5835 = +HEAPF64[$5834>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5836 = (+__Z5IKcosd($5835)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5837 = -0.70710678118654802 * $5836; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5838 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5839 = +HEAPF64[$5838>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5840 = (+__Z5IKsind($5839)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5841 = 0.70710678118654802 * $5840; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5842 = $5837 + $5841; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5843 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5844 = ((($5843)) + 8|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5845 = +HEAPF64[$5844>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5846 = (+__Z5IKcosd($5845)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5847 = $5842 * $5846; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5848 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5849 = ((($5848)) + 16|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5850 = +HEAPF64[$5849>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5851 = (+__Z5IKcosd($5850)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5852 = $5847 * $5851; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5853 = $5833 + $5852; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5854 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5855 = ((($5854)) + 24|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5856 = +HEAPF64[$5855>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5857 = (+__Z5IKsind($5856)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5858 = $5853 * $5857; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5859 = $5819 + $5858; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5860 = 0.70710678118654802 * $5859; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5861 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5862 = ((($5861)) + 40|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5863 = +HEAPF64[$5862>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5864 = (+__Z5IKsind($5863)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5865 = $5860 * $5864; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5866 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5867 = +HEAPF64[$5866>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5868 = (+__Z5IKsind($5867)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5869 = -0.70710678118654802 * $5868; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5870 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5871 = +HEAPF64[$5870>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5872 = (+__Z5IKcosd($5871)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5873 = -0.70710678118654802 * $5872; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5874 = $5869 + $5873; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5875 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5876 = ((($5875)) + 16|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5877 = +HEAPF64[$5876>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5878 = (+__Z5IKsind($5877)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5879 = $5874 * $5878; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5880 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5881 = +HEAPF64[$5880>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5882 = (+__Z5IKsind($5881)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5883 = -0.70710678118654802 * $5882; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5884 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5885 = +HEAPF64[$5884>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5886 = (+__Z5IKcosd($5885)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5887 = 0.70710678118654802 * $5886; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5888 = $5883 + $5887; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5889 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5890 = ((($5889)) + 8|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5891 = +HEAPF64[$5890>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5892 = (+__Z5IKcosd($5891)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5893 = $5888 * $5892; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5894 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5895 = ((($5894)) + 16|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5896 = +HEAPF64[$5895>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5897 = (+__Z5IKcosd($5896)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5898 = $5893 * $5897; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5899 = $5879 + $5898; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5900 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5901 = ((($5900)) + 24|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5902 = +HEAPF64[$5901>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5903 = (+__Z5IKcosd($5902)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5904 = $5899 * $5903; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5905 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5906 = +HEAPF64[$5905>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5907 = (+__Z5IKcosd($5906)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5908 = -0.70710678118654802 * $5907; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5909 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5910 = +HEAPF64[$5909>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5911 = (+__Z5IKsind($5910)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5912 = 0.70710678118654802 * $5911; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5913 = $5908 + $5912; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5914 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5915 = ((($5914)) + 8|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5916 = +HEAPF64[$5915>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5917 = (+__Z5IKsind($5916)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5918 = $5913 * $5917; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5919 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5920 = ((($5919)) + 24|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5921 = +HEAPF64[$5920>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5922 = (+__Z5IKsind($5921)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5923 = $5918 * $5922; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5924 = $5904 + $5923; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5925 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5926 = ((($5925)) + 32|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5927 = +HEAPF64[$5926>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5928 = (+__Z5IKcosd($5927)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5929 = $5924 * $5928; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5930 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5931 = +HEAPF64[$5930>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5932 = (+__Z5IKsind($5931)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5933 = -0.70710678118654802 * $5932; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5934 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5935 = +HEAPF64[$5934>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5936 = (+__Z5IKcosd($5935)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5937 = -0.70710678118654802 * $5936; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5938 = $5933 + $5937; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5939 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5940 = ((($5939)) + 16|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5941 = +HEAPF64[$5940>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5942 = (+__Z5IKcosd($5941)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5943 = $5938 * $5942; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5944 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5945 = +HEAPF64[$5944>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5946 = (+__Z5IKcosd($5945)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5947 = -0.70710678118654802 * $5946; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5948 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5949 = +HEAPF64[$5948>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5950 = (+__Z5IKsind($5949)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5951 = 0.70710678118654802 * $5950; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5952 = $5947 + $5951; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5953 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5954 = ((($5953)) + 8|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5955 = +HEAPF64[$5954>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5956 = (+__Z5IKcosd($5955)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5957 = $5952 * $5956; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5958 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5959 = ((($5958)) + 16|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5960 = +HEAPF64[$5959>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5961 = (+__Z5IKsind($5960)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5962 = $5957 * $5961; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5963 = $5943 + $5962; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5964 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5965 = ((($5964)) + 32|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5966 = +HEAPF64[$5965>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5967 = (+__Z5IKsind($5966)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5968 = $5963 * $5967; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5969 = $5929 + $5968; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5970 = 0.70710678118654802 * $5969; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5971 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5972 = ((($5971)) + 40|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5973 = +HEAPF64[$5972>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5974 = (+__Z5IKcosd($5973)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5975 = $5970 * $5974; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5976 = $5865 + $5975; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5977 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5978 = ((($5977)) + 48|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5979 = +HEAPF64[$5978>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5980 = (+__Z5IKcosd($5979)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5981 = $5976 * $5980; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5982 = $5800 + $5981; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5983 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5984 = +HEAPF64[$5983>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5985 = (+__Z5IKcosd($5984)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5986 = 0.70710678118654802 * $5985; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5987 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5988 = +HEAPF64[$5987>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5989 = (+__Z5IKsind($5988)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5990 = 0.70710678118654802 * $5989; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5991 = $5986 + $5990; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5992 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5993 = ((($5992)) + 8|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5994 = +HEAPF64[$5993>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5995 = (+__Z5IKsind($5994)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5996 = $5991 * $5995; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5997 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5998 = ((($5997)) + 24|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $5999 = +HEAPF64[$5998>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6000 = (+__Z5IKsind($5999)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6001 = $5996 * $6000; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6002 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6003 = +HEAPF64[$6002>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6004 = (+__Z5IKsind($6003)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6005 = -0.70710678118654802 * $6004; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6006 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6007 = +HEAPF64[$6006>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6008 = (+__Z5IKcosd($6007)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6009 = 0.70710678118654802 * $6008; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6010 = $6005 + $6009; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6011 = -1.0 * $6010; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6012 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6013 = ((($6012)) + 16|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6014 = +HEAPF64[$6013>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6015 = (+__Z5IKsind($6014)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6016 = $6011 * $6015; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6017 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6018 = +HEAPF64[$6017>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6019 = (+__Z5IKcosd($6018)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6020 = 0.70710678118654802 * $6019; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6021 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6022 = +HEAPF64[$6021>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6023 = (+__Z5IKsind($6022)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6024 = 0.70710678118654802 * $6023; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6025 = $6020 + $6024; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6026 = -1.0 * $6025; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6027 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6028 = ((($6027)) + 8|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6029 = +HEAPF64[$6028>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6030 = (+__Z5IKcosd($6029)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6031 = $6026 * $6030; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6032 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6033 = ((($6032)) + 16|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6034 = +HEAPF64[$6033>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6035 = (+__Z5IKcosd($6034)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6036 = $6031 * $6035; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6037 = $6016 + $6036; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6038 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6039 = ((($6038)) + 24|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6040 = +HEAPF64[$6039>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6041 = (+__Z5IKcosd($6040)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6042 = $6037 * $6041; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6043 = $6001 + $6042; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6044 = 0.70710678118654802 * $6043; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6045 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6046 = ((($6045)) + 32|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6047 = +HEAPF64[$6046>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6048 = (+__Z5IKsind($6047)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6049 = $6044 * $6048; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6050 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6051 = +HEAPF64[$6050>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6052 = (+__Z5IKsind($6051)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6053 = -0.70710678118654802 * $6052; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6054 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6055 = +HEAPF64[$6054>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6056 = (+__Z5IKcosd($6055)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6057 = -0.70710678118654802 * $6056; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6058 = $6053 + $6057; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6059 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6060 = ((($6059)) + 8|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6061 = +HEAPF64[$6060>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6062 = (+__Z5IKcosd($6061)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6063 = $6058 * $6062; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6064 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6065 = ((($6064)) + 16|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6066 = +HEAPF64[$6065>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6067 = (+__Z5IKsind($6066)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6068 = $6063 * $6067; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6069 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6070 = +HEAPF64[$6069>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6071 = (+__Z5IKsind($6070)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6072 = -0.70710678118654802 * $6071; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6073 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6074 = +HEAPF64[$6073>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6075 = (+__Z5IKcosd($6074)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6076 = 0.70710678118654802 * $6075; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6077 = $6072 + $6076; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6078 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6079 = ((($6078)) + 16|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6080 = +HEAPF64[$6079>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6081 = (+__Z5IKcosd($6080)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6082 = $6077 * $6081; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6083 = $6068 + $6082; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6084 = 0.70710678118654802 * $6083; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6085 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6086 = ((($6085)) + 32|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6087 = +HEAPF64[$6086>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6088 = (+__Z5IKcosd($6087)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6089 = $6084 * $6088; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6090 = $6049 + $6089; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6091 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6092 = ((($6091)) + 48|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6093 = +HEAPF64[$6092>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6094 = (+__Z5IKsind($6093)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6095 = $6090 * $6094; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6096 = $5982 + $6095; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6097 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6098 = +HEAPF64[$6097>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6099 = (+__Z5IKsind($6098)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6100 = -0.70710678118654802 * $6099; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6101 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6102 = +HEAPF64[$6101>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6103 = (+__Z5IKcosd($6102)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6104 = -0.70710678118654802 * $6103; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6105 = $6100 + $6104; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6106 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6107 = ((($6106)) + 16|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6108 = +HEAPF64[$6107>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6109 = (+__Z5IKcosd($6108)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6110 = $6105 * $6109; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6111 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6112 = +HEAPF64[$6111>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6113 = (+__Z5IKcosd($6112)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6114 = -0.70710678118654802 * $6113; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6115 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6116 = +HEAPF64[$6115>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6117 = (+__Z5IKsind($6116)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6118 = 0.70710678118654802 * $6117; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6119 = $6114 + $6118; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6120 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6121 = ((($6120)) + 8|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6122 = +HEAPF64[$6121>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6123 = (+__Z5IKcosd($6122)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6124 = $6119 * $6123; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6125 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6126 = ((($6125)) + 16|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6127 = +HEAPF64[$6126>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6128 = (+__Z5IKsind($6127)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6129 = $6124 * $6128; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6130 = $6110 + $6129; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6131 = 0.70710678118654802 * $6130; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6132 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6133 = ((($6132)) + 32|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6134 = +HEAPF64[$6133>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6135 = (+__Z5IKcosd($6134)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6136 = $6131 * $6135; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6137 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6138 = +HEAPF64[$6137>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6139 = (+__Z5IKsind($6138)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6140 = -0.70710678118654802 * $6139; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6141 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6142 = +HEAPF64[$6141>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6143 = (+__Z5IKcosd($6142)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6144 = 0.70710678118654802 * $6143; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6145 = $6140 + $6144; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6146 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6147 = ((($6146)) + 8|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6148 = +HEAPF64[$6147>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6149 = (+__Z5IKsind($6148)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6150 = $6145 * $6149; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6151 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6152 = ((($6151)) + 24|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6153 = +HEAPF64[$6152>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6154 = (+__Z5IKsind($6153)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6155 = $6150 * $6154; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6156 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6157 = +HEAPF64[$6156>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6158 = (+__Z5IKsind($6157)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6159 = -0.70710678118654802 * $6158; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6160 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6161 = +HEAPF64[$6160>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6162 = (+__Z5IKcosd($6161)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6163 = 0.70710678118654802 * $6162; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6164 = $6159 + $6163; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6165 = -1.0 * $6164; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6166 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6167 = ((($6166)) + 8|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6168 = +HEAPF64[$6167>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6169 = (+__Z5IKcosd($6168)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6170 = $6165 * $6169; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6171 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6172 = ((($6171)) + 16|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6173 = +HEAPF64[$6172>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6174 = (+__Z5IKcosd($6173)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6175 = $6170 * $6174; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6176 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6177 = +HEAPF64[$6176>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6178 = (+__Z5IKsind($6177)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6179 = -0.70710678118654802 * $6178; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6180 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6181 = +HEAPF64[$6180>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6182 = (+__Z5IKcosd($6181)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6183 = -0.70710678118654802 * $6182; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6184 = $6179 + $6183; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6185 = -1.0 * $6184; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6186 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6187 = ((($6186)) + 16|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6188 = +HEAPF64[$6187>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6189 = (+__Z5IKsind($6188)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6190 = $6185 * $6189; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6191 = $6175 + $6190; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6192 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6193 = ((($6192)) + 24|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6194 = +HEAPF64[$6193>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6195 = (+__Z5IKcosd($6194)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6196 = $6191 * $6195; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6197 = $6155 + $6196; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6198 = 0.70710678118654802 * $6197; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6199 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6200 = ((($6199)) + 32|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6201 = +HEAPF64[$6200>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6202 = (+__Z5IKsind($6201)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6203 = $6198 * $6202; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6204 = $6136 + $6203; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6205 = $0; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6206 = ((($6205)) + 48|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6207 = +HEAPF64[$6206>>3]; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6208 = (+__Z5IKsind($6207)); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6209 = $6204 * $6208; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6210 = $6096 + $6209; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6211 = $2; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6212 = ((($6211)) + 56|0); //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 HEAPF64[$6212>>3] = $6210; //@line 359 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6213 = $x23; //@line 360 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6214 = 1.0 * $6213; //@line 360 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $x49 = $6214; //@line 360 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6215 = $x12; //@line 361 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6216 = $x41; //@line 361 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6217 = $x9; //@line 361 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6218 = $6216 * $6217; //@line 361 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6219 = $x35; //@line 361 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6220 = $x8; //@line 361 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6221 = $6219 * $6220; //@line 361 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6222 = $6218 + $6221; //@line 361 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6223 = $6215 * $6222; //@line 361 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6224 = $x13; //@line 361 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6225 = $x29; //@line 361 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6226 = -1.0 * $6225; //@line 361 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6227 = $x49; //@line 361 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6228 = $6226 * $6227; //@line 361 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6229 = $x3; //@line 361 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6230 = -1.0 * $6229; //@line 361 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6231 = $x39; //@line 361 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6232 = $6230 * $6231; //@line 361 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6233 = $6228 + $6232; //@line 361 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6234 = $6224 * $6233; //@line 361 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6235 = $6223 + $6234; //@line 361 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6236 = $x13; //@line 361 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6237 = $x32; //@line 361 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6238 = -1.0 * $6237; //@line 361 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6239 = $x49; //@line 361 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6240 = $6238 * $6239; //@line 361 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6241 = $x19; //@line 361 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6242 = -1.0 * $6241; //@line 361 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6243 = $x37; //@line 361 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6244 = $6242 * $6243; //@line 361 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6245 = $6240 + $6244; //@line 361 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6246 = $6236 * $6245; //@line 361 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6247 = $6235 + $6246; //@line 361 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6248 = $x12; //@line 361 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6249 = $x38; //@line 361 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6250 = $x43; //@line 361 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6251 = $6249 + $6250; //@line 361 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6252 = $6248 * $6251; //@line 361 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6253 = $6247 + $6252; //@line 361 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6254 = $2; //@line 361 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6255 = ((($6254)) + 64|0); //@line 361 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 HEAPF64[$6255>>3] = $6253; //@line 361 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6256 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6257 = +HEAPF64[$6256>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6258 = (+__Z5IKcosd($6257)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6259 = -0.031819805153394602 * $6258; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6260 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6261 = +HEAPF64[$6260>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6262 = (+__Z5IKsind($6261)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6263 = -0.031819805153394602 * $6262; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6264 = $6259 + $6263; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6265 = 0.70710678118654802 * $6264; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6266 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6267 = ((($6266)) + 8|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6268 = +HEAPF64[$6267>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6269 = (+__Z5IKcosd($6268)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6270 = $6265 * $6269; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6271 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6272 = ((($6271)) + 16|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6273 = +HEAPF64[$6272>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6274 = (+__Z5IKcosd($6273)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6275 = $6270 * $6274; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6276 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6277 = +HEAPF64[$6276>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6278 = (+__Z5IKcosd($6277)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6279 = -0.031819805153394602 * $6278; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6280 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6281 = +HEAPF64[$6280>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6282 = (+__Z5IKsind($6281)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6283 = 0.031819805153394602 * $6282; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6284 = $6279 + $6283; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6285 = 0.70710678118654802 * $6284; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6286 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6287 = ((($6286)) + 16|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6288 = +HEAPF64[$6287>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6289 = (+__Z5IKsind($6288)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6290 = $6285 * $6289; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6291 = $6275 + $6290; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6292 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6293 = ((($6292)) + 24|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6294 = +HEAPF64[$6293>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6295 = (+__Z5IKcosd($6294)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6296 = $6291 * $6295; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6297 = 0.378361 + $6296; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6298 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6299 = +HEAPF64[$6298>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6300 = (+__Z5IKsind($6299)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6301 = -0.70710678118654802 * $6300; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6302 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6303 = +HEAPF64[$6302>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6304 = (+__Z5IKcosd($6303)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6305 = -0.70710678118654802 * $6304; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6306 = $6301 + $6305; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6307 = 0.04795 * $6306; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6308 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6309 = ((($6308)) + 8|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6310 = +HEAPF64[$6309>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6311 = (+__Z5IKsind($6310)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6312 = $6307 * $6311; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6313 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6314 = ((($6313)) + 24|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6315 = +HEAPF64[$6314>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6316 = (+__Z5IKsind($6315)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6317 = $6312 * $6316; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6318 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6319 = +HEAPF64[$6318>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6320 = (+__Z5IKcosd($6319)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6321 = 0.70710678118654802 * $6320; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6322 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6323 = +HEAPF64[$6322>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6324 = (+__Z5IKsind($6323)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6325 = 0.70710678118654802 * $6324; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6326 = $6321 + $6325; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6327 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6328 = ((($6327)) + 8|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6329 = +HEAPF64[$6328>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6330 = (+__Z5IKcosd($6329)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6331 = $6326 * $6330; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6332 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6333 = ((($6332)) + 16|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6334 = +HEAPF64[$6333>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6335 = (+__Z5IKcosd($6334)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6336 = $6331 * $6335; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6337 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6338 = +HEAPF64[$6337>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6339 = (+__Z5IKsind($6338)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6340 = -0.70710678118654802 * $6339; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6341 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6342 = +HEAPF64[$6341>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6343 = (+__Z5IKcosd($6342)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6344 = 0.70710678118654802 * $6343; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6345 = $6340 + $6344; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6346 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6347 = ((($6346)) + 16|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6348 = +HEAPF64[$6347>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6349 = (+__Z5IKsind($6348)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6350 = $6345 * $6349; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6351 = $6336 + $6350; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6352 = 0.04795 * $6351; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6353 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6354 = ((($6353)) + 24|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6355 = +HEAPF64[$6354>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6356 = (+__Z5IKcosd($6355)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6357 = $6352 * $6356; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6358 = $6317 + $6357; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6359 = 0.70710678118654802 * $6358; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6360 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6361 = ((($6360)) + 32|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6362 = +HEAPF64[$6361>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6363 = (+__Z5IKcosd($6362)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6364 = $6359 * $6363; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6365 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6366 = +HEAPF64[$6365>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6367 = (+__Z5IKsind($6366)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6368 = -0.70710678118654802 * $6367; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6369 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6370 = +HEAPF64[$6369>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6371 = (+__Z5IKcosd($6370)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6372 = -0.70710678118654802 * $6371; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6373 = $6368 + $6372; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6374 = 0.04795 * $6373; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6375 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6376 = ((($6375)) + 8|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6377 = +HEAPF64[$6376>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6378 = (+__Z5IKcosd($6377)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6379 = $6374 * $6378; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6380 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6381 = ((($6380)) + 16|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6382 = +HEAPF64[$6381>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6383 = (+__Z5IKsind($6382)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6384 = $6379 * $6383; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6385 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6386 = +HEAPF64[$6385>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6387 = (+__Z5IKsind($6386)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6388 = -0.70710678118654802 * $6387; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6389 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6390 = +HEAPF64[$6389>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6391 = (+__Z5IKcosd($6390)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6392 = 0.70710678118654802 * $6391; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6393 = $6388 + $6392; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6394 = 0.04795 * $6393; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6395 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6396 = ((($6395)) + 16|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6397 = +HEAPF64[$6396>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6398 = (+__Z5IKcosd($6397)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6399 = $6394 * $6398; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6400 = $6384 + $6399; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6401 = 0.70710678118654802 * $6400; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6402 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6403 = ((($6402)) + 32|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6404 = +HEAPF64[$6403>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6405 = (+__Z5IKsind($6404)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6406 = $6401 * $6405; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6407 = $6364 + $6406; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6408 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6409 = ((($6408)) + 40|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6410 = +HEAPF64[$6409>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6411 = (+__Z5IKsind($6410)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6412 = $6407 * $6411; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6413 = $6297 + $6412; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6414 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6415 = +HEAPF64[$6414>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6416 = (+__Z5IKcosd($6415)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6417 = 0.022499999999999999 * $6416; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6418 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6419 = +HEAPF64[$6418>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6420 = (+__Z5IKsind($6419)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6421 = -0.022499999999999999 * $6420; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6422 = $6417 + $6421; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6423 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6424 = ((($6423)) + 16|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6425 = +HEAPF64[$6424>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6426 = (+__Z5IKsind($6425)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6427 = $6422 * $6426; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6428 = $6413 + $6427; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6429 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6430 = +HEAPF64[$6429>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6431 = (+__Z5IKcosd($6430)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6432 = -0.022499999999999999 * $6431; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6433 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6434 = +HEAPF64[$6433>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6435 = (+__Z5IKsind($6434)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6436 = -0.022499999999999999 * $6435; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6437 = $6432 + $6436; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6438 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6439 = ((($6438)) + 16|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6440 = +HEAPF64[$6439>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6441 = (+__Z5IKsind($6440)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6442 = $6437 * $6441; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6443 = $6428 + $6442; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6444 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6445 = +HEAPF64[$6444>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6446 = (+__Z5IKcosd($6445)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6447 = 0.27500000000000002 * $6446; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6448 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6449 = +HEAPF64[$6448>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6450 = (+__Z5IKsind($6449)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6451 = 0.27500000000000002 * $6450; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6452 = $6447 + $6451; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6453 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6454 = ((($6453)) + 8|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6455 = +HEAPF64[$6454>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6456 = (+__Z5IKsind($6455)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6457 = $6452 * $6456; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6458 = $6443 + $6457; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6459 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6460 = +HEAPF64[$6459>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6461 = (+__Z5IKcosd($6460)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6462 = 0.033905770157894997 * $6461; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6463 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6464 = +HEAPF64[$6463>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6465 = (+__Z5IKsind($6464)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6466 = -0.033905770157894997 * $6465; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6467 = $6462 + $6466; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6468 = 0.70710678118654802 * $6467; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6469 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6470 = ((($6469)) + 24|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6471 = +HEAPF64[$6470>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6472 = (+__Z5IKcosd($6471)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6473 = $6468 * $6472; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6474 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6475 = ((($6474)) + 8|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6476 = +HEAPF64[$6475>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6477 = (+__Z5IKsind($6476)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6478 = $6473 * $6477; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6479 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6480 = +HEAPF64[$6479>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6481 = (+__Z5IKcosd($6480)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6482 = -0.70710678118654802 * $6481; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6483 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6484 = +HEAPF64[$6483>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6485 = (+__Z5IKsind($6484)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6486 = 0.70710678118654802 * $6485; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6487 = $6482 + $6486; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6488 = -0.04795 * $6487; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6489 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6490 = ((($6489)) + 8|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6491 = +HEAPF64[$6490>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6492 = (+__Z5IKcosd($6491)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6493 = $6488 * $6492; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6494 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6495 = ((($6494)) + 16|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6496 = +HEAPF64[$6495>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6497 = (+__Z5IKcosd($6496)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6498 = $6493 * $6497; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6499 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6500 = +HEAPF64[$6499>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6501 = (+__Z5IKcosd($6500)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6502 = 0.70710678118654802 * $6501; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6503 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6504 = +HEAPF64[$6503>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6505 = (+__Z5IKsind($6504)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6506 = 0.70710678118654802 * $6505; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6507 = $6502 + $6506; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6508 = -0.04795 * $6507; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6509 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6510 = ((($6509)) + 16|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6511 = +HEAPF64[$6510>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6512 = (+__Z5IKsind($6511)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6513 = $6508 * $6512; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6514 = $6498 + $6513; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6515 = 0.70710678118654802 * $6514; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6516 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6517 = ((($6516)) + 24|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6518 = +HEAPF64[$6517>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6519 = (+__Z5IKsind($6518)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6520 = $6515 * $6519; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6521 = $6478 + $6520; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6522 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6523 = ((($6522)) + 40|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6524 = +HEAPF64[$6523>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6525 = (+__Z5IKcosd($6524)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6526 = $6521 * $6525; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6527 = $6458 + $6526; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6528 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6529 = +HEAPF64[$6528>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6530 = (+__Z5IKcosd($6529)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6531 = 0.14999999999999999 * $6530; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6532 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6533 = +HEAPF64[$6532>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6534 = (+__Z5IKsind($6533)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6535 = 0.14999999999999999 * $6534; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6536 = $6531 + $6535; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6537 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6538 = ((($6537)) + 24|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6539 = +HEAPF64[$6538>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6540 = (+__Z5IKcosd($6539)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6541 = $6536 * $6540; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6542 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6543 = ((($6542)) + 8|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6544 = +HEAPF64[$6543>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6545 = (+__Z5IKsind($6544)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6546 = $6541 * $6545; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6547 = $6527 + $6546; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6548 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6549 = +HEAPF64[$6548>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6550 = (+__Z5IKcosd($6549)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6551 = 0.022499999999999999 * $6550; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6552 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6553 = +HEAPF64[$6552>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6554 = (+__Z5IKsind($6553)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6555 = -0.022499999999999999 * $6554; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6556 = $6551 + $6555; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6557 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6558 = ((($6557)) + 8|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6559 = +HEAPF64[$6558>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6560 = (+__Z5IKsind($6559)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6561 = $6556 * $6560; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6562 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6563 = ((($6562)) + 24|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6564 = +HEAPF64[$6563>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6565 = (+__Z5IKsind($6564)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6566 = $6561 * $6565; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6567 = $6547 + $6566; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6568 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6569 = +HEAPF64[$6568>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6570 = (+__Z5IKcosd($6569)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6571 = 0.031819805153394602 * $6570; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6572 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6573 = +HEAPF64[$6572>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6574 = (+__Z5IKsind($6573)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6575 = 0.031819805153394602 * $6574; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6576 = $6571 + $6575; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6577 = 0.70710678118654802 * $6576; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6578 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6579 = ((($6578)) + 16|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6580 = +HEAPF64[$6579>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6581 = (+__Z5IKsind($6580)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6582 = $6577 * $6581; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6583 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6584 = +HEAPF64[$6583>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6585 = (+__Z5IKcosd($6584)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6586 = -0.031819805153394602 * $6585; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6587 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6588 = +HEAPF64[$6587>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6589 = (+__Z5IKsind($6588)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6590 = 0.031819805153394602 * $6589; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6591 = $6586 + $6590; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6592 = 0.70710678118654802 * $6591; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6593 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6594 = ((($6593)) + 8|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6595 = +HEAPF64[$6594>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6596 = (+__Z5IKcosd($6595)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6597 = $6592 * $6596; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6598 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6599 = ((($6598)) + 16|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6600 = +HEAPF64[$6599>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6601 = (+__Z5IKcosd($6600)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6602 = $6597 * $6601; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6603 = $6582 + $6602; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6604 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6605 = ((($6604)) + 24|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6606 = +HEAPF64[$6605>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6607 = (+__Z5IKcosd($6606)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6608 = $6603 * $6607; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6609 = $6567 + $6608; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6610 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6611 = +HEAPF64[$6610>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6612 = (+__Z5IKsind($6611)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6613 = 0.022499999999999999 * $6612; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6614 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6615 = +HEAPF64[$6614>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6616 = (+__Z5IKcosd($6615)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6617 = 0.022499999999999999 * $6616; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6618 = $6613 + $6617; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6619 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6620 = ((($6619)) + 8|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6621 = +HEAPF64[$6620>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6622 = (+__Z5IKsind($6621)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6623 = $6618 * $6622; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6624 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6625 = ((($6624)) + 24|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6626 = +HEAPF64[$6625>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6627 = (+__Z5IKsind($6626)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6628 = $6623 * $6627; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6629 = $6609 + $6628; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6630 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6631 = +HEAPF64[$6630>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6632 = (+__Z5IKsind($6631)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6633 = 0.022499999999999999 * $6632; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6634 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6635 = +HEAPF64[$6634>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6636 = (+__Z5IKcosd($6635)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6637 = 0.022499999999999999 * $6636; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6638 = $6633 + $6637; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6639 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6640 = ((($6639)) + 8|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6641 = +HEAPF64[$6640>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6642 = (+__Z5IKcosd($6641)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6643 = $6638 * $6642; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6644 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6645 = ((($6644)) + 16|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6646 = +HEAPF64[$6645>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6647 = (+__Z5IKcosd($6646)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6648 = $6643 * $6647; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6649 = $6629 + $6648; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6650 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6651 = +HEAPF64[$6650>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6652 = (+__Z5IKcosd($6651)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6653 = 0.21213203435596401 * $6652; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6654 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6655 = +HEAPF64[$6654>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6656 = (+__Z5IKsind($6655)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6657 = -0.21213203435596401 * $6656; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6658 = $6653 + $6657; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6659 = 0.70710678118654802 * $6658; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6660 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6661 = ((($6660)) + 8|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6662 = +HEAPF64[$6661>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6663 = (+__Z5IKcosd($6662)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6664 = $6659 * $6663; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6665 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6666 = ((($6665)) + 16|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6667 = +HEAPF64[$6666>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6668 = (+__Z5IKcosd($6667)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6669 = $6664 * $6668; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6670 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6671 = +HEAPF64[$6670>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6672 = (+__Z5IKcosd($6671)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6673 = -0.21213203435596401 * $6672; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6674 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6675 = +HEAPF64[$6674>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6676 = (+__Z5IKsind($6675)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6677 = -0.21213203435596401 * $6676; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6678 = $6673 + $6677; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6679 = 0.70710678118654802 * $6678; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6680 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6681 = ((($6680)) + 16|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6682 = +HEAPF64[$6681>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6683 = (+__Z5IKsind($6682)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6684 = $6679 * $6683; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6685 = $6669 + $6684; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6686 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6687 = ((($6686)) + 24|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6688 = +HEAPF64[$6687>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6689 = (+__Z5IKsind($6688)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6690 = $6685 * $6689; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6691 = $6649 + $6690; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6692 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6693 = +HEAPF64[$6692>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6694 = (+__Z5IKcosd($6693)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6695 = 0.033905770157894997 * $6694; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6696 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6697 = +HEAPF64[$6696>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6698 = (+__Z5IKsind($6697)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6699 = 0.033905770157894997 * $6698; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6700 = $6695 + $6699; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6701 = 0.70710678118654802 * $6700; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6702 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6703 = ((($6702)) + 24|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6704 = +HEAPF64[$6703>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6705 = (+__Z5IKcosd($6704)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6706 = $6701 * $6705; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6707 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6708 = ((($6707)) + 8|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6709 = +HEAPF64[$6708>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6710 = (+__Z5IKsind($6709)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6711 = $6706 * $6710; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6712 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6713 = +HEAPF64[$6712>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6714 = (+__Z5IKcosd($6713)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6715 = -0.70710678118654802 * $6714; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6716 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6717 = +HEAPF64[$6716>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6718 = (+__Z5IKsind($6717)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6719 = 0.70710678118654802 * $6718; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6720 = $6715 + $6719; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6721 = -0.04795 * $6720; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6722 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6723 = ((($6722)) + 16|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6724 = +HEAPF64[$6723>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6725 = (+__Z5IKsind($6724)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6726 = $6721 * $6725; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6727 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6728 = +HEAPF64[$6727>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6729 = (+__Z5IKsind($6728)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6730 = -0.70710678118654802 * $6729; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6731 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6732 = +HEAPF64[$6731>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6733 = (+__Z5IKcosd($6732)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6734 = -0.70710678118654802 * $6733; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6735 = $6730 + $6734; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6736 = -0.04795 * $6735; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6737 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6738 = ((($6737)) + 8|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6739 = +HEAPF64[$6738>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6740 = (+__Z5IKcosd($6739)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6741 = $6736 * $6740; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6742 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6743 = ((($6742)) + 16|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6744 = +HEAPF64[$6743>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6745 = (+__Z5IKcosd($6744)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6746 = $6741 * $6745; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6747 = $6726 + $6746; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6748 = 0.70710678118654802 * $6747; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6749 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6750 = ((($6749)) + 24|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6751 = +HEAPF64[$6750>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6752 = (+__Z5IKsind($6751)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6753 = $6748 * $6752; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6754 = $6711 + $6753; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6755 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6756 = ((($6755)) + 40|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6757 = +HEAPF64[$6756>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6758 = (+__Z5IKcosd($6757)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6759 = $6754 * $6758; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6760 = $6691 + $6759; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6761 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6762 = +HEAPF64[$6761>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6763 = (+__Z5IKcosd($6762)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6764 = 0.21213203435596401 * $6763; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6765 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6766 = +HEAPF64[$6765>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6767 = (+__Z5IKsind($6766)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6768 = 0.21213203435596401 * $6767; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6769 = $6764 + $6768; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6770 = 0.70710678118654802 * $6769; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6771 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6772 = ((($6771)) + 8|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6773 = +HEAPF64[$6772>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6774 = (+__Z5IKcosd($6773)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6775 = $6770 * $6774; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6776 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6777 = ((($6776)) + 16|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6778 = +HEAPF64[$6777>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6779 = (+__Z5IKcosd($6778)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6780 = $6775 * $6779; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6781 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6782 = +HEAPF64[$6781>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6783 = (+__Z5IKcosd($6782)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6784 = 0.21213203435596401 * $6783; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6785 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6786 = +HEAPF64[$6785>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6787 = (+__Z5IKsind($6786)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6788 = -0.21213203435596401 * $6787; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6789 = $6784 + $6788; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6790 = 0.70710678118654802 * $6789; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6791 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6792 = ((($6791)) + 16|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6793 = +HEAPF64[$6792>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6794 = (+__Z5IKsind($6793)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6795 = $6790 * $6794; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6796 = $6780 + $6795; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6797 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6798 = ((($6797)) + 24|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6799 = +HEAPF64[$6798>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6800 = (+__Z5IKsind($6799)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6801 = $6796 * $6800; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6802 = $6760 + $6801; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6803 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6804 = +HEAPF64[$6803>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6805 = (+__Z5IKcosd($6804)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6806 = 0.022499999999999999 * $6805; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6807 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6808 = +HEAPF64[$6807>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6809 = (+__Z5IKsind($6808)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6810 = -0.022499999999999999 * $6809; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6811 = $6806 + $6810; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6812 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6813 = ((($6812)) + 8|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6814 = +HEAPF64[$6813>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6815 = (+__Z5IKcosd($6814)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6816 = $6811 * $6815; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6817 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6818 = ((($6817)) + 16|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6819 = +HEAPF64[$6818>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6820 = (+__Z5IKcosd($6819)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6821 = $6816 * $6820; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6822 = $6802 + $6821; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6823 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6824 = +HEAPF64[$6823>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6825 = (+__Z5IKcosd($6824)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6826 = -0.70710678118654802 * $6825; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6827 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6828 = +HEAPF64[$6827>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6829 = (+__Z5IKsind($6828)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6830 = 0.70710678118654802 * $6829; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6831 = $6826 + $6830; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6832 = 0.04795 * $6831; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6833 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6834 = ((($6833)) + 8|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6835 = +HEAPF64[$6834>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6836 = (+__Z5IKcosd($6835)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6837 = $6832 * $6836; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6838 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6839 = ((($6838)) + 16|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6840 = +HEAPF64[$6839>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6841 = (+__Z5IKsind($6840)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6842 = $6837 * $6841; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6843 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6844 = +HEAPF64[$6843>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6845 = (+__Z5IKsind($6844)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6846 = -0.70710678118654802 * $6845; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6847 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6848 = +HEAPF64[$6847>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6849 = (+__Z5IKcosd($6848)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6850 = -0.70710678118654802 * $6849; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6851 = $6846 + $6850; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6852 = 0.04795 * $6851; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6853 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6854 = ((($6853)) + 16|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6855 = +HEAPF64[$6854>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6856 = (+__Z5IKcosd($6855)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6857 = $6852 * $6856; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6858 = $6842 + $6857; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6859 = 0.70710678118654802 * $6858; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6860 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6861 = ((($6860)) + 32|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6862 = +HEAPF64[$6861>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6863 = (+__Z5IKsind($6862)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6864 = $6859 * $6863; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6865 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6866 = +HEAPF64[$6865>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6867 = (+__Z5IKsind($6866)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6868 = -0.70710678118654802 * $6867; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6869 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6870 = +HEAPF64[$6869>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6871 = (+__Z5IKcosd($6870)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6872 = -0.70710678118654802 * $6871; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6873 = $6868 + $6872; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6874 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6875 = ((($6874)) + 16|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6876 = +HEAPF64[$6875>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6877 = (+__Z5IKsind($6876)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6878 = $6873 * $6877; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6879 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6880 = +HEAPF64[$6879>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6881 = (+__Z5IKsind($6880)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6882 = -0.70710678118654802 * $6881; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6883 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6884 = +HEAPF64[$6883>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6885 = (+__Z5IKcosd($6884)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6886 = 0.70710678118654802 * $6885; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6887 = $6882 + $6886; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6888 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6889 = ((($6888)) + 8|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6890 = +HEAPF64[$6889>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6891 = (+__Z5IKcosd($6890)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6892 = $6887 * $6891; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6893 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6894 = ((($6893)) + 16|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6895 = +HEAPF64[$6894>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6896 = (+__Z5IKcosd($6895)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6897 = $6892 * $6896; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6898 = $6878 + $6897; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6899 = 0.04795 * $6898; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6900 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6901 = ((($6900)) + 24|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6902 = +HEAPF64[$6901>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6903 = (+__Z5IKcosd($6902)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6904 = $6899 * $6903; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6905 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6906 = +HEAPF64[$6905>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6907 = (+__Z5IKcosd($6906)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6908 = -0.70710678118654802 * $6907; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6909 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6910 = +HEAPF64[$6909>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6911 = (+__Z5IKsind($6910)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6912 = 0.70710678118654802 * $6911; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6913 = $6908 + $6912; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6914 = 0.04795 * $6913; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6915 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6916 = ((($6915)) + 8|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6917 = +HEAPF64[$6916>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6918 = (+__Z5IKsind($6917)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6919 = $6914 * $6918; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6920 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6921 = ((($6920)) + 24|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6922 = +HEAPF64[$6921>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6923 = (+__Z5IKsind($6922)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6924 = $6919 * $6923; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6925 = $6904 + $6924; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6926 = 0.70710678118654802 * $6925; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6927 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6928 = ((($6927)) + 32|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6929 = +HEAPF64[$6928>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6930 = (+__Z5IKcosd($6929)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6931 = $6926 * $6930; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6932 = $6864 + $6931; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6933 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6934 = ((($6933)) + 40|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6935 = +HEAPF64[$6934>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6936 = (+__Z5IKsind($6935)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6937 = $6932 * $6936; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6938 = $6822 + $6937; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6939 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6940 = +HEAPF64[$6939>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6941 = (+__Z5IKsind($6940)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6942 = -0.27500000000000002 * $6941; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6943 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6944 = +HEAPF64[$6943>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6945 = (+__Z5IKcosd($6944)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6946 = 0.27500000000000002 * $6945; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6947 = $6942 + $6946; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6948 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6949 = ((($6948)) + 8|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6950 = +HEAPF64[$6949>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6951 = (+__Z5IKsind($6950)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6952 = $6947 * $6951; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6953 = $6938 + $6952; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6954 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6955 = +HEAPF64[$6954>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6956 = (+__Z5IKsind($6955)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6957 = -0.14999999999999999 * $6956; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6958 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6959 = +HEAPF64[$6958>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6960 = (+__Z5IKcosd($6959)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6961 = 0.14999999999999999 * $6960; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6962 = $6957 + $6961; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6963 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6964 = ((($6963)) + 24|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6965 = +HEAPF64[$6964>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6966 = (+__Z5IKcosd($6965)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6967 = $6962 * $6966; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6968 = $0; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6969 = ((($6968)) + 8|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6970 = +HEAPF64[$6969>>3]; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6971 = (+__Z5IKsind($6970)); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6972 = $6967 * $6971; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6973 = $6953 + $6972; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6974 = $1; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $6975 = ((($6974)) + 16|0); //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 HEAPF64[$6975>>3] = $6973; //@line 362 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 STACKTOP = sp;return; //@line 363 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
}
function __Z5IKcosd($f) {
 $f = +$f;
 var $0 = 0.0, $1 = 0.0, $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $f;
 $1 = $0; //@line 171 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2 = (+Math_cos((+$1))); //@line 171 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 STACKTOP = sp;return (+$2); //@line 171 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
}
function __Z5IKsind($f) {
 $f = +$f;
 var $0 = 0.0, $1 = 0.0, $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $f;
 $1 = $0; //@line 169 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $2 = (+Math_sin((+$1))); //@line 169 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 STACKTOP = sp;return (+$2); //@line 169 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
}
function _GetNumJoints() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 7; //@line 367 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
}
function __GetNumJoints() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_GetNumJoints()|0); //@line 15559 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 return ($0|0); //@line 15559 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
}
function __ComputeFk($j) {
 $j = $j|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0.0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0.0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0.0, $9 = 0, $buffer = 0, $eerot = 0, $eetrans = 0, $i = 0, $i1 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer4 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 400|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer4 = sp + 112|0;
 $vararg_buffer1 = sp + 104|0;
 $vararg_buffer = sp + 96|0;
 $eetrans = sp + 72|0;
 $eerot = sp;
 $buffer = sp + 136|0;
 $0 = $j;
 ;HEAP32[$eetrans>>2]=0|0;HEAP32[$eetrans+4>>2]=0|0;HEAP32[$eetrans+8>>2]=0|0;HEAP32[$eetrans+12>>2]=0|0;HEAP32[$eetrans+16>>2]=0|0;HEAP32[$eetrans+20>>2]=0|0; //@line 15563 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 dest=$eerot; stop=dest+72|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0)); //@line 15564 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 _memset(($buffer|0),0,256)|0; //@line 15565 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $1 = $0; //@line 15566 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 _ComputeFk($1,$eetrans,$eerot); //@line 15566 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $i = 0; //@line 15567 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 while(1) {
  $2 = $i; //@line 15567 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
  $3 = ($2|0)<(3); //@line 15567 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
  if (!($3)) {
   break;
  }
  $4 = (_strlen($buffer)|0); //@line 15568 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
  $5 = (($buffer) + ($4)|0); //@line 15568 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
  $6 = $i; //@line 15568 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
  $7 = (($eetrans) + ($6<<3)|0); //@line 15568 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
  $8 = +HEAPF64[$7>>3]; //@line 15568 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
  HEAPF64[$vararg_buffer>>3] = $8; //@line 15568 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
  (_sprintf($5,788,$vararg_buffer)|0); //@line 15568 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
  $9 = $i; //@line 15567 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
  $10 = (($9) + 1)|0; //@line 15567 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
  $i = $10; //@line 15567 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 }
 $i1 = 0; //@line 15569 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 while(1) {
  $11 = $i1; //@line 15569 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
  $12 = ($11|0)<(8); //@line 15569 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
  $13 = (_strlen($buffer)|0); //@line 15570 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
  $14 = (($buffer) + ($13)|0); //@line 15570 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
  if (!($12)) {
   break;
  }
  $15 = $i1; //@line 15570 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
  $16 = (($eerot) + ($15<<3)|0); //@line 15570 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
  $17 = +HEAPF64[$16>>3]; //@line 15570 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
  HEAPF64[$vararg_buffer1>>3] = $17; //@line 15570 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
  (_sprintf($14,788,$vararg_buffer1)|0); //@line 15570 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
  $18 = $i1; //@line 15569 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
  $19 = (($18) + 1)|0; //@line 15569 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
  $i1 = $19; //@line 15569 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 }
 $20 = ((($eerot)) + 64|0); //@line 15571 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 $21 = +HEAPF64[$20>>3]; //@line 15571 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 HEAPF64[$vararg_buffer4>>3] = $21; //@line 15571 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 (_sprintf($14,795,$vararg_buffer4)|0); //@line 15571 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
 STACKTOP = sp;return ($buffer|0); //@line 15572 "./solvers/darpa_arm_robot_rightarm.tmp.cpp"
}
function __ZdlPv($ptr) {
 $ptr = $ptr|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($ptr);
 return;
}
function __ZNSt9type_infoD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN10__cxxabiv116__shim_type_infoD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNK10__cxxabiv116__shim_type_info5noop1Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNK10__cxxabiv116__shim_type_info5noop2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN10__cxxabiv117__class_type_infoD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZN10__cxxabiv120__si_class_type_infoD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv($this,$thrown_type,$adjustedPtr) {
 $this = $this|0;
 $thrown_type = $thrown_type|0;
 $adjustedPtr = $adjustedPtr|0;
 var $$0 = 0, $$1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $info = 0, dest = 0;
 var label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $info = sp;
 $0 = ($this|0)==($thrown_type|0);
 if ($0) {
  $$1 = 1;
 } else {
  $1 = ($thrown_type|0)==(0|0);
  if ($1) {
   $$1 = 0;
  } else {
   $2 = (___dynamic_cast($thrown_type,16,32,0)|0);
   $3 = ($2|0)==(0|0);
   if ($3) {
    $$1 = 0;
   } else {
    dest=$info; stop=dest+56|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
    HEAP32[$info>>2] = $2;
    $4 = ((($info)) + 8|0);
    HEAP32[$4>>2] = $this;
    $5 = ((($info)) + 12|0);
    HEAP32[$5>>2] = -1;
    $6 = ((($info)) + 48|0);
    HEAP32[$6>>2] = 1;
    $7 = HEAP32[$2>>2]|0;
    $8 = ((($7)) + 28|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = HEAP32[$adjustedPtr>>2]|0;
    FUNCTION_TABLE_viiii[$9 & 15]($2,$info,$10,1);
    $11 = ((($info)) + 24|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = ($12|0)==(1);
    if ($13) {
     $14 = ((($info)) + 16|0);
     $15 = HEAP32[$14>>2]|0;
     HEAP32[$adjustedPtr>>2] = $15;
     $$0 = 1;
    } else {
     $$0 = 0;
    }
    $$1 = $$0;
   }
  }
 }
 STACKTOP = sp;return ($$1|0);
}
function __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 do {
  if ($2) {
   HEAP32[$0>>2] = $adjustedPtr;
   $3 = ((($info)) + 24|0);
   HEAP32[$3>>2] = $path_below;
   $4 = ((($info)) + 36|0);
   HEAP32[$4>>2] = 1;
  } else {
   $5 = ($1|0)==($adjustedPtr|0);
   if (!($5)) {
    $9 = ((($info)) + 36|0);
    $10 = HEAP32[$9>>2]|0;
    $11 = (($10) + 1)|0;
    HEAP32[$9>>2] = $11;
    $12 = ((($info)) + 24|0);
    HEAP32[$12>>2] = 2;
    $13 = ((($info)) + 54|0);
    HEAP8[$13>>0] = 1;
    break;
   }
   $6 = ((($info)) + 24|0);
   $7 = HEAP32[$6>>2]|0;
   $8 = ($7|0)==(2);
   if ($8) {
    HEAP32[$6>>2] = $path_below;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0,$info,$adjustedPtr,$path_below);
 }
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0,$info,$adjustedPtr,$path_below);
 } else {
  $3 = ((($this)) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = HEAP32[$4>>2]|0;
  $6 = ((($5)) + 28|0);
  $7 = HEAP32[$6>>2]|0;
  FUNCTION_TABLE_viiii[$7 & 15]($4,$info,$adjustedPtr,$path_below);
 }
 return;
}
function ___dynamic_cast($static_ptr,$static_type,$dst_type,$src2dst_offset) {
 $static_ptr = $static_ptr|0;
 $static_type = $static_type|0;
 $dst_type = $dst_type|0;
 $src2dst_offset = $src2dst_offset|0;
 var $$ = 0, $$8 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $dst_ptr$0 = 0, $info = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond7 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $info = sp;
 $0 = HEAP32[$static_ptr>>2]|0;
 $1 = ((($0)) + -8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = $2;
 $4 = (($static_ptr) + ($3)|0);
 $5 = ((($0)) + -4|0);
 $6 = HEAP32[$5>>2]|0;
 HEAP32[$info>>2] = $dst_type;
 $7 = ((($info)) + 4|0);
 HEAP32[$7>>2] = $static_ptr;
 $8 = ((($info)) + 8|0);
 HEAP32[$8>>2] = $static_type;
 $9 = ((($info)) + 12|0);
 HEAP32[$9>>2] = $src2dst_offset;
 $10 = ((($info)) + 16|0);
 $11 = ((($info)) + 20|0);
 $12 = ((($info)) + 24|0);
 $13 = ((($info)) + 28|0);
 $14 = ((($info)) + 32|0);
 $15 = ((($info)) + 40|0);
 $16 = ($6|0)==($dst_type|0);
 dest=$10; stop=dest+36|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));HEAP16[$10+36>>1]=0|0;HEAP8[$10+38>>0]=0|0;
 L1: do {
  if ($16) {
   $17 = ((($info)) + 48|0);
   HEAP32[$17>>2] = 1;
   $18 = HEAP32[$dst_type>>2]|0;
   $19 = ((($18)) + 20|0);
   $20 = HEAP32[$19>>2]|0;
   FUNCTION_TABLE_viiiiii[$20 & 15]($dst_type,$info,$4,$4,1,0);
   $21 = HEAP32[$12>>2]|0;
   $22 = ($21|0)==(1);
   $$ = $22 ? $4 : 0;
   $dst_ptr$0 = $$;
  } else {
   $23 = ((($info)) + 36|0);
   $24 = HEAP32[$6>>2]|0;
   $25 = ((($24)) + 24|0);
   $26 = HEAP32[$25>>2]|0;
   FUNCTION_TABLE_viiiii[$26 & 15]($6,$info,$4,1,0);
   $27 = HEAP32[$23>>2]|0;
   switch ($27|0) {
   case 0:  {
    $28 = HEAP32[$15>>2]|0;
    $29 = ($28|0)==(1);
    $30 = HEAP32[$13>>2]|0;
    $31 = ($30|0)==(1);
    $or$cond = $29 & $31;
    $32 = HEAP32[$14>>2]|0;
    $33 = ($32|0)==(1);
    $or$cond3 = $or$cond & $33;
    $34 = HEAP32[$11>>2]|0;
    $$8 = $or$cond3 ? $34 : 0;
    $dst_ptr$0 = $$8;
    break L1;
    break;
   }
   case 1:  {
    break;
   }
   default: {
    $dst_ptr$0 = 0;
    break L1;
   }
   }
   $35 = HEAP32[$12>>2]|0;
   $36 = ($35|0)==(1);
   if (!($36)) {
    $37 = HEAP32[$15>>2]|0;
    $38 = ($37|0)==(0);
    $39 = HEAP32[$13>>2]|0;
    $40 = ($39|0)==(1);
    $or$cond5 = $38 & $40;
    $41 = HEAP32[$14>>2]|0;
    $42 = ($41|0)==(1);
    $or$cond7 = $or$cond5 & $42;
    if (!($or$cond7)) {
     $dst_ptr$0 = 0;
     break;
    }
   }
   $43 = HEAP32[$10>>2]|0;
   $dst_ptr$0 = $43;
  }
 } while(0);
 STACKTOP = sp;return ($dst_ptr$0|0);
}
function __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i($this,$info,$dst_ptr,$current_ptr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 53|0);
 HEAP8[$0>>0] = 1;
 $1 = ((($info)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==($current_ptr|0);
 do {
  if ($3) {
   $4 = ((($info)) + 52|0);
   HEAP8[$4>>0] = 1;
   $5 = ((($info)) + 16|0);
   $6 = HEAP32[$5>>2]|0;
   $7 = ($6|0)==(0|0);
   if ($7) {
    HEAP32[$5>>2] = $dst_ptr;
    $8 = ((($info)) + 24|0);
    HEAP32[$8>>2] = $path_below;
    $9 = ((($info)) + 36|0);
    HEAP32[$9>>2] = 1;
    $10 = ((($info)) + 48|0);
    $11 = HEAP32[$10>>2]|0;
    $12 = ($11|0)==(1);
    $13 = ($path_below|0)==(1);
    $or$cond = $12 & $13;
    if (!($or$cond)) {
     break;
    }
    $14 = ((($info)) + 54|0);
    HEAP8[$14>>0] = 1;
    break;
   }
   $15 = ($6|0)==($dst_ptr|0);
   if (!($15)) {
    $25 = ((($info)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (($26) + 1)|0;
    HEAP32[$25>>2] = $27;
    $28 = ((($info)) + 54|0);
    HEAP8[$28>>0] = 1;
    break;
   }
   $16 = ((($info)) + 24|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ($17|0)==(2);
   if ($18) {
    HEAP32[$16>>2] = $path_below;
    $22 = $path_below;
   } else {
    $22 = $17;
   }
   $19 = ((($info)) + 48|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ($20|0)==(1);
   $23 = ($22|0)==(1);
   $or$cond1 = $21 & $23;
   if ($or$cond1) {
    $24 = ((($info)) + 54|0);
    HEAP8[$24>>0] = 1;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $is_dst_type_derived_from_static_type$0$off01 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 L1: do {
  if ($2) {
   $3 = ((($info)) + 4|0);
   $4 = HEAP32[$3>>2]|0;
   $5 = ($4|0)==($current_ptr|0);
   if ($5) {
    $6 = ((($info)) + 28|0);
    $7 = HEAP32[$6>>2]|0;
    $8 = ($7|0)==(1);
    if (!($8)) {
     HEAP32[$6>>2] = $path_below;
    }
   }
  } else {
   $9 = HEAP32[$info>>2]|0;
   $10 = ($this|0)==($9|0);
   if (!($10)) {
    $43 = ((($this)) + 8|0);
    $44 = HEAP32[$43>>2]|0;
    $45 = HEAP32[$44>>2]|0;
    $46 = ((($45)) + 24|0);
    $47 = HEAP32[$46>>2]|0;
    FUNCTION_TABLE_viiiii[$47 & 15]($44,$info,$current_ptr,$path_below,$use_strcmp);
    break;
   }
   $11 = ((($info)) + 16|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = ($12|0)==($current_ptr|0);
   if (!($13)) {
    $14 = ((($info)) + 20|0);
    $15 = HEAP32[$14>>2]|0;
    $16 = ($15|0)==($current_ptr|0);
    if (!($16)) {
     $19 = ((($info)) + 32|0);
     HEAP32[$19>>2] = $path_below;
     $20 = ((($info)) + 44|0);
     $21 = HEAP32[$20>>2]|0;
     $22 = ($21|0)==(4);
     if ($22) {
      break;
     }
     $23 = ((($info)) + 52|0);
     HEAP8[$23>>0] = 0;
     $24 = ((($info)) + 53|0);
     HEAP8[$24>>0] = 0;
     $25 = ((($this)) + 8|0);
     $26 = HEAP32[$25>>2]|0;
     $27 = HEAP32[$26>>2]|0;
     $28 = ((($27)) + 20|0);
     $29 = HEAP32[$28>>2]|0;
     FUNCTION_TABLE_viiiiii[$29 & 15]($26,$info,$current_ptr,$current_ptr,1,$use_strcmp);
     $30 = HEAP8[$24>>0]|0;
     $31 = ($30<<24>>24)==(0);
     if ($31) {
      $is_dst_type_derived_from_static_type$0$off01 = 0;
      label = 13;
     } else {
      $32 = HEAP8[$23>>0]|0;
      $not$ = ($32<<24>>24)==(0);
      if ($not$) {
       $is_dst_type_derived_from_static_type$0$off01 = 1;
       label = 13;
      }
     }
     do {
      if ((label|0) == 13) {
       HEAP32[$14>>2] = $current_ptr;
       $33 = ((($info)) + 40|0);
       $34 = HEAP32[$33>>2]|0;
       $35 = (($34) + 1)|0;
       HEAP32[$33>>2] = $35;
       $36 = ((($info)) + 36|0);
       $37 = HEAP32[$36>>2]|0;
       $38 = ($37|0)==(1);
       if ($38) {
        $39 = ((($info)) + 24|0);
        $40 = HEAP32[$39>>2]|0;
        $41 = ($40|0)==(2);
        if ($41) {
         $42 = ((($info)) + 54|0);
         HEAP8[$42>>0] = 1;
         if ($is_dst_type_derived_from_static_type$0$off01) {
          break;
         }
        } else {
         label = 16;
        }
       } else {
        label = 16;
       }
       if ((label|0) == 16) {
        if ($is_dst_type_derived_from_static_type$0$off01) {
         break;
        }
       }
       HEAP32[$20>>2] = 4;
       break L1;
      }
     } while(0);
     HEAP32[$20>>2] = 3;
     break;
    }
   }
   $17 = ($path_below|0)==(1);
   if ($17) {
    $18 = ((($info)) + 32|0);
    HEAP32[$18>>2] = 1;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 do {
  if ($2) {
   $3 = ((($info)) + 4|0);
   $4 = HEAP32[$3>>2]|0;
   $5 = ($4|0)==($current_ptr|0);
   if ($5) {
    $6 = ((($info)) + 28|0);
    $7 = HEAP32[$6>>2]|0;
    $8 = ($7|0)==(1);
    if (!($8)) {
     HEAP32[$6>>2] = $path_below;
    }
   }
  } else {
   $9 = HEAP32[$info>>2]|0;
   $10 = ($this|0)==($9|0);
   if ($10) {
    $11 = ((($info)) + 16|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = ($12|0)==($current_ptr|0);
    if (!($13)) {
     $14 = ((($info)) + 20|0);
     $15 = HEAP32[$14>>2]|0;
     $16 = ($15|0)==($current_ptr|0);
     if (!($16)) {
      $19 = ((($info)) + 32|0);
      HEAP32[$19>>2] = $path_below;
      HEAP32[$14>>2] = $current_ptr;
      $20 = ((($info)) + 40|0);
      $21 = HEAP32[$20>>2]|0;
      $22 = (($21) + 1)|0;
      HEAP32[$20>>2] = $22;
      $23 = ((($info)) + 36|0);
      $24 = HEAP32[$23>>2]|0;
      $25 = ($24|0)==(1);
      if ($25) {
       $26 = ((($info)) + 24|0);
       $27 = HEAP32[$26>>2]|0;
       $28 = ($27|0)==(2);
       if ($28) {
        $29 = ((($info)) + 54|0);
        HEAP8[$29>>0] = 1;
       }
      }
      $30 = ((($info)) + 44|0);
      HEAP32[$30>>2] = 4;
      break;
     }
    }
    $17 = ($path_below|0)==(1);
    if ($17) {
     $18 = ((($info)) + 32|0);
     HEAP32[$18>>2] = 1;
    }
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0,$info,$dst_ptr,$current_ptr,$path_below);
 } else {
  $3 = ((($this)) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = HEAP32[$4>>2]|0;
  $6 = ((($5)) + 20|0);
  $7 = HEAP32[$6>>2]|0;
  FUNCTION_TABLE_viiiiii[$7 & 15]($4,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp);
 }
 return;
}
function __ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0,$info,$dst_ptr,$current_ptr,$path_below);
 }
 return;
}
function ___cxa_can_catch($catchType,$excpType,$thrown) {
 $catchType = $catchType|0;
 $excpType = $excpType|0;
 $thrown = $thrown|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $temp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $temp = sp;
 $0 = HEAP32[$thrown>>2]|0;
 HEAP32[$temp>>2] = $0;
 $1 = HEAP32[$catchType>>2]|0;
 $2 = ((($1)) + 16|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (FUNCTION_TABLE_iiii[$3 & 15]($catchType,$excpType,$temp)|0);
 $5 = $4&1;
 if ($4) {
  $6 = HEAP32[$temp>>2]|0;
  HEAP32[$thrown>>2] = $6;
 }
 STACKTOP = sp;return ($5|0);
}
function ___cxa_is_pointer_type($type) {
 $type = $type|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($type|0)==(0|0);
 if ($0) {
  $3 = 0;
 } else {
  $1 = (___dynamic_cast($type,16,64,0)|0);
  $phitmp = ($1|0)!=(0|0);
  $3 = $phitmp;
 }
 $2 = $3&1;
 return ($2|0);
}
function _strerror($e) {
 $e = $e|0;
 var $$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i$03 = 0, $i$03$lcssa = 0, $i$12 = 0, $s$0$lcssa = 0, $s$01 = 0, $s$1 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $i$03 = 0;
 while(1) {
  $1 = (988 + ($i$03)|0);
  $2 = HEAP8[$1>>0]|0;
  $3 = $2&255;
  $4 = ($3|0)==($e|0);
  if ($4) {
   $i$03$lcssa = $i$03;
   label = 2;
   break;
  }
  $5 = (($i$03) + 1)|0;
  $6 = ($5|0)==(87);
  if ($6) {
   $i$12 = 87;$s$01 = 1076;
   label = 5;
   break;
  } else {
   $i$03 = $5;
  }
 }
 if ((label|0) == 2) {
  $0 = ($i$03$lcssa|0)==(0);
  if ($0) {
   $s$0$lcssa = 1076;
  } else {
   $i$12 = $i$03$lcssa;$s$01 = 1076;
   label = 5;
  }
 }
 if ((label|0) == 5) {
  while(1) {
   label = 0;
   $s$1 = $s$01;
   while(1) {
    $7 = HEAP8[$s$1>>0]|0;
    $8 = ($7<<24>>24)==(0);
    $9 = ((($s$1)) + 1|0);
    if ($8) {
     $$lcssa = $9;
     break;
    } else {
     $s$1 = $9;
    }
   }
   $10 = (($i$12) + -1)|0;
   $11 = ($10|0)==(0);
   if ($11) {
    $s$0$lcssa = $$lcssa;
    break;
   } else {
    $i$12 = $10;$s$01 = $$lcssa;
    label = 5;
   }
  }
 }
 return ($s$0$lcssa|0);
}
function ___errno_location() {
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (0|0)==(0|0);
 if ($0) {
  $$0 = 176;
 } else {
  $1 = (_pthread_self()|0);
  $2 = ((($1)) + 60|0);
  $3 = HEAP32[$2>>2]|0;
  $$0 = $3;
 }
 return ($$0|0);
}
function _sprintf($s,$fmt,$varargs) {
 $s = $s|0;
 $fmt = $fmt|0;
 $varargs = $varargs|0;
 var $0 = 0, $ap = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ap = sp;
 HEAP32[$ap>>2] = $varargs;
 $0 = (_vsprintf($s,$fmt,$ap)|0);
 STACKTOP = sp;return ($0|0);
}
function _vsnprintf($s,$n,$fmt,$ap) {
 $s = $s|0;
 $n = $n|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $$$02 = 0, $$0 = 0, $$01 = 0, $$02 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $b = 0, $f = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $b = sp + 112|0;
 $f = sp;
 dest=$f; src=180; stop=dest+112|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
 $0 = (($n) + -1)|0;
 $1 = ($0>>>0)>(2147483646);
 if ($1) {
  $2 = ($n|0)==(0);
  if ($2) {
   $$01 = $b;$$02 = 1;
   label = 4;
  } else {
   $3 = (___errno_location()|0);
   HEAP32[$3>>2] = 75;
   $$0 = -1;
  }
 } else {
  $$01 = $s;$$02 = $n;
  label = 4;
 }
 if ((label|0) == 4) {
  $4 = $$01;
  $5 = (-2 - ($4))|0;
  $6 = ($$02>>>0)>($5>>>0);
  $$$02 = $6 ? $5 : $$02;
  $7 = ((($f)) + 48|0);
  HEAP32[$7>>2] = $$$02;
  $8 = ((($f)) + 20|0);
  HEAP32[$8>>2] = $$01;
  $9 = ((($f)) + 44|0);
  HEAP32[$9>>2] = $$01;
  $10 = (($$01) + ($$$02)|0);
  $11 = ((($f)) + 16|0);
  HEAP32[$11>>2] = $10;
  $12 = ((($f)) + 28|0);
  HEAP32[$12>>2] = $10;
  $13 = (_vfprintf($f,$fmt,$ap)|0);
  $14 = ($$$02|0)==(0);
  if ($14) {
   $$0 = $13;
  } else {
   $15 = HEAP32[$8>>2]|0;
   $16 = HEAP32[$11>>2]|0;
   $17 = ($15|0)==($16|0);
   $18 = $17 << 31 >> 31;
   $19 = (($15) + ($18)|0);
   HEAP8[$19>>0] = 0;
   $$0 = $13;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function _vfprintf($f,$fmt,$ap) {
 $f = $f|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $$ = 0, $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ap2 = 0, $internal_buf = 0, $nl_arg = 0, $nl_type = 0;
 var $ret$1 = 0, $ret$1$ = 0, $vacopy_currentptr = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ap2 = sp + 120|0;
 $nl_type = sp + 80|0;
 $nl_arg = sp;
 $internal_buf = sp + 136|0;
 dest=$nl_type; stop=dest+40|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $vacopy_currentptr = HEAP32[$ap>>2]|0;
 HEAP32[$ap2>>2] = $vacopy_currentptr;
 $0 = (_printf_core(0,$fmt,$ap2,$nl_arg,$nl_type)|0);
 $1 = ($0|0)<(0);
 if ($1) {
  $$0 = -1;
 } else {
  $2 = ((($f)) + 76|0);
  $3 = HEAP32[$2>>2]|0;
  $4 = ($3|0)>(-1);
  if ($4) {
   $5 = (___lockfile($f)|0);
   $32 = $5;
  } else {
   $32 = 0;
  }
  $6 = HEAP32[$f>>2]|0;
  $7 = $6 & 32;
  $8 = ((($f)) + 74|0);
  $9 = HEAP8[$8>>0]|0;
  $10 = ($9<<24>>24)<(1);
  if ($10) {
   $11 = $6 & -33;
   HEAP32[$f>>2] = $11;
  }
  $12 = ((($f)) + 48|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = ($13|0)==(0);
  if ($14) {
   $16 = ((($f)) + 44|0);
   $17 = HEAP32[$16>>2]|0;
   HEAP32[$16>>2] = $internal_buf;
   $18 = ((($f)) + 28|0);
   HEAP32[$18>>2] = $internal_buf;
   $19 = ((($f)) + 20|0);
   HEAP32[$19>>2] = $internal_buf;
   HEAP32[$12>>2] = 80;
   $20 = ((($internal_buf)) + 80|0);
   $21 = ((($f)) + 16|0);
   HEAP32[$21>>2] = $20;
   $22 = (_printf_core($f,$fmt,$ap2,$nl_arg,$nl_type)|0);
   $23 = ($17|0)==(0|0);
   if ($23) {
    $ret$1 = $22;
   } else {
    $24 = ((($f)) + 36|0);
    $25 = HEAP32[$24>>2]|0;
    (FUNCTION_TABLE_iiii[$25 & 15]($f,0,0)|0);
    $26 = HEAP32[$19>>2]|0;
    $27 = ($26|0)==(0|0);
    $$ = $27 ? -1 : $22;
    HEAP32[$16>>2] = $17;
    HEAP32[$12>>2] = 0;
    HEAP32[$21>>2] = 0;
    HEAP32[$18>>2] = 0;
    HEAP32[$19>>2] = 0;
    $ret$1 = $$;
   }
  } else {
   $15 = (_printf_core($f,$fmt,$ap2,$nl_arg,$nl_type)|0);
   $ret$1 = $15;
  }
  $28 = HEAP32[$f>>2]|0;
  $29 = $28 & 32;
  $30 = ($29|0)==(0);
  $ret$1$ = $30 ? $ret$1 : -1;
  $31 = $28 | $7;
  HEAP32[$f>>2] = $31;
  $33 = ($32|0)==(0);
  if (!($33)) {
   ___unlockfile($f);
  }
  $$0 = $ret$1$;
 }
 STACKTOP = sp;return ($$0|0);
}
function ___lockfile($f) {
 $f = $f|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function ___unlockfile($f) {
 $f = $f|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function ___fwritex($s,$l,$f) {
 $s = $s|0;
 $l = $l|0;
 $f = $f|0;
 var $$0 = 0, $$01 = 0, $$02 = 0, $$pre = 0, $$pre6 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i$0 = 0, $i$0$lcssa10 = 0;
 var $i$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 if ($2) {
  $3 = (___towrite($f)|0);
  $4 = ($3|0)==(0);
  if ($4) {
   $$pre = HEAP32[$0>>2]|0;
   $7 = $$pre;
   label = 4;
  } else {
   $$0 = 0;
  }
 } else {
  $7 = $1;
  label = 4;
 }
 L4: do {
  if ((label|0) == 4) {
   $5 = ((($f)) + 20|0);
   $6 = HEAP32[$5>>2]|0;
   $8 = $7;
   $9 = $6;
   $10 = (($8) - ($9))|0;
   $11 = ($10>>>0)<($l>>>0);
   if ($11) {
    $12 = ((($f)) + 36|0);
    $13 = HEAP32[$12>>2]|0;
    $14 = (FUNCTION_TABLE_iiii[$13 & 15]($f,$s,$l)|0);
    $$0 = $14;
    break;
   }
   $15 = ((($f)) + 75|0);
   $16 = HEAP8[$15>>0]|0;
   $17 = ($16<<24>>24)>(-1);
   L9: do {
    if ($17) {
     $i$0 = $l;
     while(1) {
      $18 = ($i$0|0)==(0);
      if ($18) {
       $$01 = $l;$$02 = $s;$29 = $6;$i$1 = 0;
       break L9;
      }
      $19 = (($i$0) + -1)|0;
      $20 = (($s) + ($19)|0);
      $21 = HEAP8[$20>>0]|0;
      $22 = ($21<<24>>24)==(10);
      if ($22) {
       $i$0$lcssa10 = $i$0;
       break;
      } else {
       $i$0 = $19;
      }
     }
     $23 = ((($f)) + 36|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = (FUNCTION_TABLE_iiii[$24 & 15]($f,$s,$i$0$lcssa10)|0);
     $26 = ($25>>>0)<($i$0$lcssa10>>>0);
     if ($26) {
      $$0 = $i$0$lcssa10;
      break L4;
     }
     $27 = (($s) + ($i$0$lcssa10)|0);
     $28 = (($l) - ($i$0$lcssa10))|0;
     $$pre6 = HEAP32[$5>>2]|0;
     $$01 = $28;$$02 = $27;$29 = $$pre6;$i$1 = $i$0$lcssa10;
    } else {
     $$01 = $l;$$02 = $s;$29 = $6;$i$1 = 0;
    }
   } while(0);
   _memcpy(($29|0),($$02|0),($$01|0))|0;
   $30 = HEAP32[$5>>2]|0;
   $31 = (($30) + ($$01)|0);
   HEAP32[$5>>2] = $31;
   $32 = (($i$1) + ($$01))|0;
   $$0 = $32;
  }
 } while(0);
 return ($$0|0);
}
function _vsprintf($s,$fmt,$ap) {
 $s = $s|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_vsnprintf($s,2147483647,$fmt,$ap)|0);
 return ($0|0);
}
function ___towrite($f) {
 $f = $f|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 74|0);
 $1 = HEAP8[$0>>0]|0;
 $2 = $1 << 24 >> 24;
 $3 = (($2) + 255)|0;
 $4 = $3 | $2;
 $5 = $4&255;
 HEAP8[$0>>0] = $5;
 $6 = HEAP32[$f>>2]|0;
 $7 = $6 & 8;
 $8 = ($7|0)==(0);
 if ($8) {
  $10 = ((($f)) + 8|0);
  HEAP32[$10>>2] = 0;
  $11 = ((($f)) + 4|0);
  HEAP32[$11>>2] = 0;
  $12 = ((($f)) + 44|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = ((($f)) + 28|0);
  HEAP32[$14>>2] = $13;
  $15 = ((($f)) + 20|0);
  HEAP32[$15>>2] = $13;
  $16 = $13;
  $17 = ((($f)) + 48|0);
  $18 = HEAP32[$17>>2]|0;
  $19 = (($16) + ($18)|0);
  $20 = ((($f)) + 16|0);
  HEAP32[$20>>2] = $19;
  $$0 = 0;
 } else {
  $9 = $6 | 32;
  HEAP32[$f>>2] = $9;
  $$0 = -1;
 }
 return ($$0|0);
}
function _strlen($s) {
 $s = $s|0;
 var $$0 = 0, $$01$lcssa = 0, $$014 = 0, $$1$lcssa = 0, $$lcssa20 = 0, $$pn = 0, $$pn15 = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $w$0 = 0, $w$0$lcssa = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $s;
 $1 = $0 & 3;
 $2 = ($1|0)==(0);
 L1: do {
  if ($2) {
   $$01$lcssa = $s;
   label = 4;
  } else {
   $$014 = $s;$21 = $0;
   while(1) {
    $3 = HEAP8[$$014>>0]|0;
    $4 = ($3<<24>>24)==(0);
    if ($4) {
     $$pn = $21;
     break L1;
    }
    $5 = ((($$014)) + 1|0);
    $6 = $5;
    $7 = $6 & 3;
    $8 = ($7|0)==(0);
    if ($8) {
     $$01$lcssa = $5;
     label = 4;
     break;
    } else {
     $$014 = $5;$21 = $6;
    }
   }
  }
 } while(0);
 if ((label|0) == 4) {
  $w$0 = $$01$lcssa;
  while(1) {
   $9 = HEAP32[$w$0>>2]|0;
   $10 = (($9) + -16843009)|0;
   $11 = $9 & -2139062144;
   $12 = $11 ^ -2139062144;
   $13 = $12 & $10;
   $14 = ($13|0)==(0);
   $15 = ((($w$0)) + 4|0);
   if ($14) {
    $w$0 = $15;
   } else {
    $$lcssa20 = $9;$w$0$lcssa = $w$0;
    break;
   }
  }
  $16 = $$lcssa20&255;
  $17 = ($16<<24>>24)==(0);
  if ($17) {
   $$1$lcssa = $w$0$lcssa;
  } else {
   $$pn15 = $w$0$lcssa;
   while(1) {
    $18 = ((($$pn15)) + 1|0);
    $$pre = HEAP8[$18>>0]|0;
    $19 = ($$pre<<24>>24)==(0);
    if ($19) {
     $$1$lcssa = $18;
     break;
    } else {
     $$pn15 = $18;
    }
   }
  }
  $20 = $$1$lcssa;
  $$pn = $20;
 }
 $$0 = (($$pn) - ($0))|0;
 return ($$0|0);
}
function _memchr($src,$c,$n) {
 $src = $src|0;
 $c = $c|0;
 $n = $n|0;
 var $$0$lcssa = 0, $$0$lcssa44 = 0, $$019 = 0, $$1$lcssa = 0, $$110 = 0, $$110$lcssa = 0, $$24 = 0, $$3 = 0, $$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond18 = 0, $s$0$lcssa = 0, $s$0$lcssa43 = 0, $s$020 = 0, $s$15 = 0, $s$2 = 0, $w$0$lcssa = 0, $w$011 = 0, $w$011$lcssa = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $c & 255;
 $1 = $src;
 $2 = $1 & 3;
 $3 = ($2|0)!=(0);
 $4 = ($n|0)!=(0);
 $or$cond18 = $4 & $3;
 L1: do {
  if ($or$cond18) {
   $5 = $c&255;
   $$019 = $n;$s$020 = $src;
   while(1) {
    $6 = HEAP8[$s$020>>0]|0;
    $7 = ($6<<24>>24)==($5<<24>>24);
    if ($7) {
     $$0$lcssa44 = $$019;$s$0$lcssa43 = $s$020;
     label = 6;
     break L1;
    }
    $8 = ((($s$020)) + 1|0);
    $9 = (($$019) + -1)|0;
    $10 = $8;
    $11 = $10 & 3;
    $12 = ($11|0)!=(0);
    $13 = ($9|0)!=(0);
    $or$cond = $13 & $12;
    if ($or$cond) {
     $$019 = $9;$s$020 = $8;
    } else {
     $$0$lcssa = $9;$$lcssa = $13;$s$0$lcssa = $8;
     label = 5;
     break;
    }
   }
  } else {
   $$0$lcssa = $n;$$lcssa = $4;$s$0$lcssa = $src;
   label = 5;
  }
 } while(0);
 if ((label|0) == 5) {
  if ($$lcssa) {
   $$0$lcssa44 = $$0$lcssa;$s$0$lcssa43 = $s$0$lcssa;
   label = 6;
  } else {
   $$3 = 0;$s$2 = $s$0$lcssa;
  }
 }
 L8: do {
  if ((label|0) == 6) {
   $14 = HEAP8[$s$0$lcssa43>>0]|0;
   $15 = $c&255;
   $16 = ($14<<24>>24)==($15<<24>>24);
   if ($16) {
    $$3 = $$0$lcssa44;$s$2 = $s$0$lcssa43;
   } else {
    $17 = Math_imul($0, 16843009)|0;
    $18 = ($$0$lcssa44>>>0)>(3);
    L11: do {
     if ($18) {
      $$110 = $$0$lcssa44;$w$011 = $s$0$lcssa43;
      while(1) {
       $19 = HEAP32[$w$011>>2]|0;
       $20 = $19 ^ $17;
       $21 = (($20) + -16843009)|0;
       $22 = $20 & -2139062144;
       $23 = $22 ^ -2139062144;
       $24 = $23 & $21;
       $25 = ($24|0)==(0);
       if (!($25)) {
        $$110$lcssa = $$110;$w$011$lcssa = $w$011;
        break;
       }
       $26 = ((($w$011)) + 4|0);
       $27 = (($$110) + -4)|0;
       $28 = ($27>>>0)>(3);
       if ($28) {
        $$110 = $27;$w$011 = $26;
       } else {
        $$1$lcssa = $27;$w$0$lcssa = $26;
        label = 11;
        break L11;
       }
      }
      $$24 = $$110$lcssa;$s$15 = $w$011$lcssa;
     } else {
      $$1$lcssa = $$0$lcssa44;$w$0$lcssa = $s$0$lcssa43;
      label = 11;
     }
    } while(0);
    if ((label|0) == 11) {
     $29 = ($$1$lcssa|0)==(0);
     if ($29) {
      $$3 = 0;$s$2 = $w$0$lcssa;
      break;
     } else {
      $$24 = $$1$lcssa;$s$15 = $w$0$lcssa;
     }
    }
    while(1) {
     $30 = HEAP8[$s$15>>0]|0;
     $31 = ($30<<24>>24)==($15<<24>>24);
     if ($31) {
      $$3 = $$24;$s$2 = $s$15;
      break L8;
     }
     $32 = ((($s$15)) + 1|0);
     $33 = (($$24) + -1)|0;
     $34 = ($33|0)==(0);
     if ($34) {
      $$3 = 0;$s$2 = $32;
      break;
     } else {
      $$24 = $33;$s$15 = $32;
     }
    }
   }
  }
 } while(0);
 $35 = ($$3|0)!=(0);
 $36 = $35 ? $s$2 : 0;
 return ($36|0);
}
function _wctomb($s,$wc) {
 $s = $s|0;
 $wc = $wc|0;
 var $$0 = 0, $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($s|0)==(0|0);
 if ($0) {
  $$0 = 0;
 } else {
  $1 = (_wcrtomb($s,$wc,0)|0);
  $$0 = $1;
 }
 return ($$0|0);
}
function _wcrtomb($s,$wc,$st) {
 $s = $s|0;
 $wc = $wc|0;
 $st = $st|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($s|0)==(0|0);
 do {
  if ($0) {
   $$0 = 1;
  } else {
   $1 = ($wc>>>0)<(128);
   if ($1) {
    $2 = $wc&255;
    HEAP8[$s>>0] = $2;
    $$0 = 1;
    break;
   }
   $3 = ($wc>>>0)<(2048);
   if ($3) {
    $4 = $wc >>> 6;
    $5 = $4 | 192;
    $6 = $5&255;
    $7 = ((($s)) + 1|0);
    HEAP8[$s>>0] = $6;
    $8 = $wc & 63;
    $9 = $8 | 128;
    $10 = $9&255;
    HEAP8[$7>>0] = $10;
    $$0 = 2;
    break;
   }
   $11 = ($wc>>>0)<(55296);
   $12 = $wc & -8192;
   $13 = ($12|0)==(57344);
   $or$cond = $11 | $13;
   if ($or$cond) {
    $14 = $wc >>> 12;
    $15 = $14 | 224;
    $16 = $15&255;
    $17 = ((($s)) + 1|0);
    HEAP8[$s>>0] = $16;
    $18 = $wc >>> 6;
    $19 = $18 & 63;
    $20 = $19 | 128;
    $21 = $20&255;
    $22 = ((($s)) + 2|0);
    HEAP8[$17>>0] = $21;
    $23 = $wc & 63;
    $24 = $23 | 128;
    $25 = $24&255;
    HEAP8[$22>>0] = $25;
    $$0 = 3;
    break;
   }
   $26 = (($wc) + -65536)|0;
   $27 = ($26>>>0)<(1048576);
   if ($27) {
    $28 = $wc >>> 18;
    $29 = $28 | 240;
    $30 = $29&255;
    $31 = ((($s)) + 1|0);
    HEAP8[$s>>0] = $30;
    $32 = $wc >>> 12;
    $33 = $32 & 63;
    $34 = $33 | 128;
    $35 = $34&255;
    $36 = ((($s)) + 2|0);
    HEAP8[$31>>0] = $35;
    $37 = $wc >>> 6;
    $38 = $37 & 63;
    $39 = $38 | 128;
    $40 = $39&255;
    $41 = ((($s)) + 3|0);
    HEAP8[$36>>0] = $40;
    $42 = $wc & 63;
    $43 = $42 | 128;
    $44 = $43&255;
    HEAP8[$41>>0] = $44;
    $$0 = 4;
    break;
   } else {
    $45 = (___errno_location()|0);
    HEAP32[$45>>2] = 84;
    $$0 = -1;
    break;
   }
  }
 } while(0);
 return ($$0|0);
}
function _frexp($x,$e) {
 $x = +$x;
 $e = $e|0;
 var $$0 = 0.0, $$01 = 0.0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0.0, $7 = 0.0, $8 = 0, $9 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $x;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 $2 = (_bitshift64Lshr(($0|0),($1|0),52)|0);
 $3 = tempRet0;
 $4 = $2 & 2047;
 switch ($4|0) {
 case 0:  {
  $5 = $x != 0.0;
  if ($5) {
   $6 = $x * 1.8446744073709552E+19;
   $7 = (+_frexp($6,$e));
   $8 = HEAP32[$e>>2]|0;
   $9 = (($8) + -64)|0;
   $$01 = $7;$storemerge = $9;
  } else {
   $$01 = $x;$storemerge = 0;
  }
  HEAP32[$e>>2] = $storemerge;
  $$0 = $$01;
  break;
 }
 case 2047:  {
  $$0 = $x;
  break;
 }
 default: {
  $10 = (($4) + -1022)|0;
  HEAP32[$e>>2] = $10;
  $11 = $1 & -2146435073;
  $12 = $11 | 1071644672;
  HEAP32[tempDoublePtr>>2] = $0;HEAP32[tempDoublePtr+4>>2] = $12;$13 = +HEAPF64[tempDoublePtr>>3];
  $$0 = $13;
 }
 }
 return (+$$0);
}
function _frexpl($x,$e) {
 $x = +$x;
 $e = $e|0;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_frexp($x,$e));
 return (+$0);
}
function _printf_core($f,$fmt,$ap,$nl_arg,$nl_type) {
 $f = $f|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 $nl_arg = $nl_arg|0;
 $nl_type = $nl_type|0;
 var $$ = 0, $$$i = 0, $$0 = 0, $$0$i = 0, $$0$lcssa$i = 0, $$012$i = 0, $$013$i = 0, $$03$i33 = 0, $$07$i = 0.0, $$1$i = 0.0, $$114$i = 0, $$2$i = 0.0, $$20$i = 0.0, $$21$i = 0, $$210$$22$i = 0, $$210$$24$i = 0, $$210$i = 0, $$23$i = 0, $$3$i = 0.0, $$31$i = 0;
 var $$311$i = 0, $$4$i = 0.0, $$412$lcssa$i = 0, $$41276$i = 0, $$43 = 0, $$5$lcssa$i = 0, $$587$i = 0, $$a$3$i = 0, $$a$3185$i = 0, $$a$3186$i = 0, $$fl$4 = 0, $$l10n$0 = 0, $$lcssa159$i = 0, $$lcssa321 = 0, $$lcssa322 = 0, $$lcssa326 = 0, $$lcssa328 = 0, $$lcssa329 = 0, $$lcssa330 = 0, $$lcssa331 = 0;
 var $$lcssa332 = 0, $$lcssa334 = 0, $$lcssa344 = 0, $$lcssa347 = 0.0, $$lcssa349 = 0, $$lcssa52 = 0, $$neg52$i = 0, $$neg53$i = 0, $$p$$i = 0, $$p$0 = 0, $$p$5 = 0, $$p$i = 0, $$pn$i = 0, $$pr$i = 0, $$pr47$i = 0, $$pre = 0, $$pre$i = 0, $$pre$phi184$iZ2D = 0, $$pre179$i = 0, $$pre182$i = 0;
 var $$pre183$i = 0, $$pre190 = 0, $$sum$i = 0, $$sum15$i = 0, $$sum16$i = 0, $$z$3$i = 0, $$z$4$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0;
 var $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0;
 var $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0;
 var $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0;
 var $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0;
 var $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0;
 var $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0;
 var $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0;
 var $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0;
 var $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0;
 var $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0;
 var $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0;
 var $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0;
 var $362 = 0, $363 = 0, $364 = 0.0, $365 = 0, $366 = 0, $367 = 0, $368 = 0.0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0;
 var $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0.0, $397 = 0.0, $398 = 0;
 var $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0.0, $413 = 0, $414 = 0, $415 = 0;
 var $416 = 0.0, $417 = 0.0, $418 = 0.0, $419 = 0.0, $42 = 0, $420 = 0.0, $421 = 0.0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0;
 var $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0.0, $448 = 0.0, $449 = 0.0, $45 = 0, $450 = 0, $451 = 0;
 var $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0;
 var $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0.0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0;
 var $489 = 0, $49 = 0, $490 = 0.0, $491 = 0.0, $492 = 0.0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0;
 var $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0;
 var $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0;
 var $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0;
 var $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0;
 var $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0;
 var $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0.0, $602 = 0.0, $603 = 0, $604 = 0.0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0;
 var $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0;
 var $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0;
 var $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0;
 var $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0;
 var $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0;
 var $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0;
 var $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0;
 var $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0;
 var $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0;
 var $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0;
 var $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $a$0 = 0, $a$1 = 0, $a$1$lcssa$i = 0, $a$1147$i = 0, $a$2 = 0, $a$2$ph$i = 0, $a$3$lcssa$i = 0, $a$3134$i = 0, $a$5$lcssa$i = 0, $a$5109$i = 0;
 var $a$6$i = 0, $a$7$i = 0, $a$8$ph$i = 0, $arg = 0, $arglist_current = 0, $arglist_current2 = 0, $arglist_next = 0, $arglist_next3 = 0, $argpos$0 = 0, $big$i = 0, $buf = 0, $buf$i = 0, $carry$0140$i = 0, $carry3$0128$i = 0, $cnt$0 = 0, $cnt$1 = 0, $cnt$1$lcssa = 0, $d$0$i = 0, $d$0139$i = 0, $d$0141$i = 0;
 var $d$1127$i = 0, $d$2$lcssa$i = 0, $d$2108$i = 0, $d$3$i = 0, $d$482$i = 0, $d$575$i = 0, $d$686$i = 0, $e$0123$i = 0, $e$1$i = 0, $e$2104$i = 0, $e$3$i = 0, $e$4$ph$i = 0, $e2$i = 0, $ebuf0$i = 0, $estr$0$i = 0, $estr$1$lcssa$i = 0, $estr$193$i = 0, $estr$2$i = 0, $exitcond$i = 0, $expanded = 0;
 var $expanded10 = 0, $expanded11 = 0, $expanded13 = 0, $expanded14 = 0, $expanded15 = 0, $expanded4 = 0, $expanded6 = 0, $expanded7 = 0, $expanded8 = 0, $fl$0103 = 0, $fl$056 = 0, $fl$1 = 0, $fl$1$ = 0, $fl$3 = 0, $fl$4 = 0, $fl$6 = 0, $i$0$lcssa = 0, $i$0$lcssa197 = 0, $i$0108 = 0, $i$0122$i = 0;
 var $i$03$i = 0, $i$03$i25 = 0, $i$1$lcssa$i = 0, $i$1116$i = 0, $i$1119 = 0, $i$2103$i = 0, $i$295 = 0, $i$295$lcssa = 0, $i$393 = 0, $i$399$i = 0, $isdigit = 0, $isdigit$i = 0, $isdigit$i27 = 0, $isdigit10 = 0, $isdigit12 = 0, $isdigit2$i = 0, $isdigit2$i23 = 0, $isdigittmp = 0, $isdigittmp$ = 0, $isdigittmp$i = 0;
 var $isdigittmp$i26 = 0, $isdigittmp1$i = 0, $isdigittmp1$i22 = 0, $isdigittmp11 = 0, $isdigittmp4$i = 0, $isdigittmp4$i24 = 0, $isdigittmp9 = 0, $j$0$i = 0, $j$0115$i = 0, $j$0117$i = 0, $j$1100$i = 0, $j$2$i = 0, $l$0 = 0, $l$0$i = 0, $l$1$i = 0, $l$1107 = 0, $l$2 = 0, $l10n$0 = 0, $l10n$0$lcssa = 0, $l10n$0$phi = 0;
 var $l10n$1 = 0, $l10n$2 = 0, $l10n$3 = 0, $mb = 0, $notlhs$i = 0, $notrhs$i = 0, $or$cond = 0, $or$cond$i = 0, $or$cond15 = 0, $or$cond17 = 0, $or$cond20 = 0, $or$cond239 = 0, $or$cond29$i = 0, $or$cond3$not$i = 0, $or$cond6$i = 0, $p$0 = 0, $p$1 = 0, $p$2 = 0, $p$2$ = 0, $p$3 = 0;
 var $p$4195 = 0, $p$5 = 0, $pl$0 = 0, $pl$0$i = 0, $pl$1 = 0, $pl$1$i = 0, $pl$2 = 0, $prefix$0 = 0, $prefix$0$$i = 0, $prefix$0$i = 0, $prefix$1 = 0, $prefix$2 = 0, $r$0$a$8$i = 0, $re$169$i = 0, $round$068$i = 0.0, $round6$1$i = 0.0, $s$0$i = 0, $s$1$i = 0, $s$1$i$lcssa = 0, $s1$0$i = 0;
 var $s7$079$i = 0, $s7$1$i = 0, $s8$0$lcssa$i = 0, $s8$070$i = 0, $s9$0$i = 0, $s9$183$i = 0, $s9$2$i = 0, $small$0$i = 0.0, $small$1$i = 0.0, $st$0 = 0, $st$0$lcssa327 = 0, $storemerge = 0, $storemerge13 = 0, $storemerge8102 = 0, $storemerge854 = 0, $sum = 0, $t$0 = 0, $t$1 = 0, $w$$i = 0, $w$0 = 0;
 var $w$1 = 0, $w$2 = 0, $w$30$i = 0, $wc = 0, $ws$0109 = 0, $ws$1120 = 0, $z$0$i = 0, $z$0$lcssa = 0, $z$096 = 0, $z$1 = 0, $z$1$lcssa$i = 0, $z$1146$i = 0, $z$2 = 0, $z$2$i = 0, $z$2$i$lcssa = 0, $z$3$lcssa$i = 0, $z$3133$i = 0, $z$4$i = 0, $z$6$$i = 0, $z$6$i = 0;
 var $z$6$i$lcssa = 0, $z$6$ph$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 624|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $big$i = sp + 24|0;
 $e2$i = sp + 16|0;
 $buf$i = sp + 588|0;
 $ebuf0$i = sp + 576|0;
 $arg = sp;
 $buf = sp + 536|0;
 $wc = sp + 8|0;
 $mb = sp + 528|0;
 $0 = ($f|0)!=(0|0);
 $1 = ((($buf)) + 40|0);
 $2 = $1;
 $3 = ((($buf)) + 39|0);
 $4 = ((($wc)) + 4|0);
 $5 = ((($ebuf0$i)) + 12|0);
 $6 = ((($ebuf0$i)) + 11|0);
 $7 = $buf$i;
 $8 = $5;
 $9 = (($8) - ($7))|0;
 $10 = (-2 - ($7))|0;
 $11 = (($8) + 2)|0;
 $12 = ((($big$i)) + 288|0);
 $13 = ((($buf$i)) + 9|0);
 $14 = $13;
 $15 = ((($buf$i)) + 8|0);
 $22 = $fmt;$cnt$0 = 0;$l$0 = 0;$l10n$0 = 0;
 L1: while(1) {
  $16 = ($cnt$0|0)>(-1);
  do {
   if ($16) {
    $17 = (2147483647 - ($cnt$0))|0;
    $18 = ($l$0|0)>($17|0);
    if ($18) {
     $19 = (___errno_location()|0);
     HEAP32[$19>>2] = 75;
     $cnt$1 = -1;
     break;
    } else {
     $20 = (($l$0) + ($cnt$0))|0;
     $cnt$1 = $20;
     break;
    }
   } else {
    $cnt$1 = $cnt$0;
   }
  } while(0);
  $21 = HEAP8[$22>>0]|0;
  $23 = ($21<<24>>24)==(0);
  if ($23) {
   $cnt$1$lcssa = $cnt$1;$l10n$0$lcssa = $l10n$0;
   label = 245;
   break;
  } else {
   $24 = $21;$26 = $22;
  }
  L9: while(1) {
   switch ($24<<24>>24) {
   case 37:  {
    $28 = $26;$z$096 = $26;
    label = 9;
    break L9;
    break;
   }
   case 0:  {
    $$lcssa52 = $26;$z$0$lcssa = $26;
    break L9;
    break;
   }
   default: {
   }
   }
   $25 = ((($26)) + 1|0);
   $$pre = HEAP8[$25>>0]|0;
   $24 = $$pre;$26 = $25;
  }
  L12: do {
   if ((label|0) == 9) {
    while(1) {
     label = 0;
     $27 = ((($28)) + 1|0);
     $29 = HEAP8[$27>>0]|0;
     $30 = ($29<<24>>24)==(37);
     if (!($30)) {
      $$lcssa52 = $28;$z$0$lcssa = $z$096;
      break L12;
     }
     $31 = ((($z$096)) + 1|0);
     $32 = ((($28)) + 2|0);
     $33 = HEAP8[$32>>0]|0;
     $34 = ($33<<24>>24)==(37);
     if ($34) {
      $28 = $32;$z$096 = $31;
      label = 9;
     } else {
      $$lcssa52 = $32;$z$0$lcssa = $31;
      break;
     }
    }
   }
  } while(0);
  $35 = $z$0$lcssa;
  $36 = $22;
  $37 = (($35) - ($36))|0;
  if ($0) {
   $38 = HEAP32[$f>>2]|0;
   $39 = $38 & 32;
   $40 = ($39|0)==(0);
   if ($40) {
    (___fwritex($22,$37,$f)|0);
   }
  }
  $41 = ($z$0$lcssa|0)==($22|0);
  if (!($41)) {
   $l10n$0$phi = $l10n$0;$22 = $$lcssa52;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$0$phi;
   continue;
  }
  $42 = ((($$lcssa52)) + 1|0);
  $43 = HEAP8[$42>>0]|0;
  $44 = $43 << 24 >> 24;
  $isdigittmp = (($44) + -48)|0;
  $isdigit = ($isdigittmp>>>0)<(10);
  if ($isdigit) {
   $45 = ((($$lcssa52)) + 2|0);
   $46 = HEAP8[$45>>0]|0;
   $47 = ($46<<24>>24)==(36);
   $48 = ((($$lcssa52)) + 3|0);
   $$43 = $47 ? $48 : $42;
   $$l10n$0 = $47 ? 1 : $l10n$0;
   $isdigittmp$ = $47 ? $isdigittmp : -1;
   $$pre190 = HEAP8[$$43>>0]|0;
   $50 = $$pre190;$argpos$0 = $isdigittmp$;$l10n$1 = $$l10n$0;$storemerge = $$43;
  } else {
   $50 = $43;$argpos$0 = -1;$l10n$1 = $l10n$0;$storemerge = $42;
  }
  $49 = $50 << 24 >> 24;
  $51 = $49 & -32;
  $52 = ($51|0)==(32);
  L25: do {
   if ($52) {
    $54 = $49;$59 = $50;$fl$0103 = 0;$storemerge8102 = $storemerge;
    while(1) {
     $53 = (($54) + -32)|0;
     $55 = 1 << $53;
     $56 = $55 & 75913;
     $57 = ($56|0)==(0);
     if ($57) {
      $68 = $59;$fl$056 = $fl$0103;$storemerge854 = $storemerge8102;
      break L25;
     }
     $58 = $59 << 24 >> 24;
     $60 = (($58) + -32)|0;
     $61 = 1 << $60;
     $62 = $61 | $fl$0103;
     $63 = ((($storemerge8102)) + 1|0);
     $64 = HEAP8[$63>>0]|0;
     $65 = $64 << 24 >> 24;
     $66 = $65 & -32;
     $67 = ($66|0)==(32);
     if ($67) {
      $54 = $65;$59 = $64;$fl$0103 = $62;$storemerge8102 = $63;
     } else {
      $68 = $64;$fl$056 = $62;$storemerge854 = $63;
      break;
     }
    }
   } else {
    $68 = $50;$fl$056 = 0;$storemerge854 = $storemerge;
   }
  } while(0);
  $69 = ($68<<24>>24)==(42);
  do {
   if ($69) {
    $70 = ((($storemerge854)) + 1|0);
    $71 = HEAP8[$70>>0]|0;
    $72 = $71 << 24 >> 24;
    $isdigittmp11 = (($72) + -48)|0;
    $isdigit12 = ($isdigittmp11>>>0)<(10);
    if ($isdigit12) {
     $73 = ((($storemerge854)) + 2|0);
     $74 = HEAP8[$73>>0]|0;
     $75 = ($74<<24>>24)==(36);
     if ($75) {
      $76 = (($nl_type) + ($isdigittmp11<<2)|0);
      HEAP32[$76>>2] = 10;
      $77 = HEAP8[$70>>0]|0;
      $78 = $77 << 24 >> 24;
      $79 = (($78) + -48)|0;
      $80 = (($nl_arg) + ($79<<3)|0);
      $81 = $80;
      $82 = $81;
      $83 = HEAP32[$82>>2]|0;
      $84 = (($81) + 4)|0;
      $85 = $84;
      $86 = HEAP32[$85>>2]|0;
      $87 = ((($storemerge854)) + 3|0);
      $l10n$2 = 1;$storemerge13 = $87;$w$0 = $83;
     } else {
      label = 24;
     }
    } else {
     label = 24;
    }
    if ((label|0) == 24) {
     label = 0;
     $88 = ($l10n$1|0)==(0);
     if (!($88)) {
      $$0 = -1;
      break L1;
     }
     if (!($0)) {
      $108 = $70;$fl$1 = $fl$056;$l10n$3 = 0;$w$1 = 0;
      break;
     }
     $arglist_current = HEAP32[$ap>>2]|0;
     $89 = $arglist_current;
     $90 = ((0) + 4|0);
     $expanded4 = $90;
     $expanded = (($expanded4) - 1)|0;
     $91 = (($89) + ($expanded))|0;
     $92 = ((0) + 4|0);
     $expanded8 = $92;
     $expanded7 = (($expanded8) - 1)|0;
     $expanded6 = $expanded7 ^ -1;
     $93 = $91 & $expanded6;
     $94 = $93;
     $95 = HEAP32[$94>>2]|0;
     $arglist_next = ((($94)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next;
     $l10n$2 = 0;$storemerge13 = $70;$w$0 = $95;
    }
    $96 = ($w$0|0)<(0);
    if ($96) {
     $97 = $fl$056 | 8192;
     $98 = (0 - ($w$0))|0;
     $108 = $storemerge13;$fl$1 = $97;$l10n$3 = $l10n$2;$w$1 = $98;
    } else {
     $108 = $storemerge13;$fl$1 = $fl$056;$l10n$3 = $l10n$2;$w$1 = $w$0;
    }
   } else {
    $99 = $68 << 24 >> 24;
    $isdigittmp1$i = (($99) + -48)|0;
    $isdigit2$i = ($isdigittmp1$i>>>0)<(10);
    if ($isdigit2$i) {
     $103 = $storemerge854;$i$03$i = 0;$isdigittmp4$i = $isdigittmp1$i;
     while(1) {
      $100 = ($i$03$i*10)|0;
      $101 = (($100) + ($isdigittmp4$i))|0;
      $102 = ((($103)) + 1|0);
      $104 = HEAP8[$102>>0]|0;
      $105 = $104 << 24 >> 24;
      $isdigittmp$i = (($105) + -48)|0;
      $isdigit$i = ($isdigittmp$i>>>0)<(10);
      if ($isdigit$i) {
       $103 = $102;$i$03$i = $101;$isdigittmp4$i = $isdigittmp$i;
      } else {
       $$lcssa321 = $101;$$lcssa322 = $102;
       break;
      }
     }
     $106 = ($$lcssa321|0)<(0);
     if ($106) {
      $$0 = -1;
      break L1;
     } else {
      $108 = $$lcssa322;$fl$1 = $fl$056;$l10n$3 = $l10n$1;$w$1 = $$lcssa321;
     }
    } else {
     $108 = $storemerge854;$fl$1 = $fl$056;$l10n$3 = $l10n$1;$w$1 = 0;
    }
   }
  } while(0);
  $107 = HEAP8[$108>>0]|0;
  $109 = ($107<<24>>24)==(46);
  L46: do {
   if ($109) {
    $110 = ((($108)) + 1|0);
    $111 = HEAP8[$110>>0]|0;
    $112 = ($111<<24>>24)==(42);
    if (!($112)) {
     $139 = $111 << 24 >> 24;
     $isdigittmp1$i22 = (($139) + -48)|0;
     $isdigit2$i23 = ($isdigittmp1$i22>>>0)<(10);
     if ($isdigit2$i23) {
      $143 = $110;$i$03$i25 = 0;$isdigittmp4$i24 = $isdigittmp1$i22;
     } else {
      $802 = $110;$p$0 = 0;
      break;
     }
     while(1) {
      $140 = ($i$03$i25*10)|0;
      $141 = (($140) + ($isdigittmp4$i24))|0;
      $142 = ((($143)) + 1|0);
      $144 = HEAP8[$142>>0]|0;
      $145 = $144 << 24 >> 24;
      $isdigittmp$i26 = (($145) + -48)|0;
      $isdigit$i27 = ($isdigittmp$i26>>>0)<(10);
      if ($isdigit$i27) {
       $143 = $142;$i$03$i25 = $141;$isdigittmp4$i24 = $isdigittmp$i26;
      } else {
       $802 = $142;$p$0 = $141;
       break L46;
      }
     }
    }
    $113 = ((($108)) + 2|0);
    $114 = HEAP8[$113>>0]|0;
    $115 = $114 << 24 >> 24;
    $isdigittmp9 = (($115) + -48)|0;
    $isdigit10 = ($isdigittmp9>>>0)<(10);
    if ($isdigit10) {
     $116 = ((($108)) + 3|0);
     $117 = HEAP8[$116>>0]|0;
     $118 = ($117<<24>>24)==(36);
     if ($118) {
      $119 = (($nl_type) + ($isdigittmp9<<2)|0);
      HEAP32[$119>>2] = 10;
      $120 = HEAP8[$113>>0]|0;
      $121 = $120 << 24 >> 24;
      $122 = (($121) + -48)|0;
      $123 = (($nl_arg) + ($122<<3)|0);
      $124 = $123;
      $125 = $124;
      $126 = HEAP32[$125>>2]|0;
      $127 = (($124) + 4)|0;
      $128 = $127;
      $129 = HEAP32[$128>>2]|0;
      $130 = ((($108)) + 4|0);
      $802 = $130;$p$0 = $126;
      break;
     }
    }
    $131 = ($l10n$3|0)==(0);
    if (!($131)) {
     $$0 = -1;
     break L1;
    }
    if ($0) {
     $arglist_current2 = HEAP32[$ap>>2]|0;
     $132 = $arglist_current2;
     $133 = ((0) + 4|0);
     $expanded11 = $133;
     $expanded10 = (($expanded11) - 1)|0;
     $134 = (($132) + ($expanded10))|0;
     $135 = ((0) + 4|0);
     $expanded15 = $135;
     $expanded14 = (($expanded15) - 1)|0;
     $expanded13 = $expanded14 ^ -1;
     $136 = $134 & $expanded13;
     $137 = $136;
     $138 = HEAP32[$137>>2]|0;
     $arglist_next3 = ((($137)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next3;
     $802 = $113;$p$0 = $138;
    } else {
     $802 = $113;$p$0 = 0;
    }
   } else {
    $802 = $108;$p$0 = -1;
   }
  } while(0);
  $147 = $802;$st$0 = 0;
  while(1) {
   $146 = HEAP8[$147>>0]|0;
   $148 = $146 << 24 >> 24;
   $149 = (($148) + -65)|0;
   $150 = ($149>>>0)>(57);
   if ($150) {
    $$0 = -1;
    break L1;
   }
   $151 = ((($147)) + 1|0);
   $152 = ((2880 + (($st$0*58)|0)|0) + ($149)|0);
   $153 = HEAP8[$152>>0]|0;
   $154 = $153&255;
   $155 = (($154) + -1)|0;
   $156 = ($155>>>0)<(8);
   if ($156) {
    $147 = $151;$st$0 = $154;
   } else {
    $$lcssa326 = $147;$$lcssa328 = $151;$$lcssa329 = $153;$$lcssa330 = $154;$st$0$lcssa327 = $st$0;
    break;
   }
  }
  $157 = ($$lcssa329<<24>>24)==(0);
  if ($157) {
   $$0 = -1;
   break;
  }
  $158 = ($$lcssa329<<24>>24)==(19);
  $159 = ($argpos$0|0)>(-1);
  do {
   if ($158) {
    if ($159) {
     $$0 = -1;
     break L1;
    } else {
     label = 52;
    }
   } else {
    if ($159) {
     $160 = (($nl_type) + ($argpos$0<<2)|0);
     HEAP32[$160>>2] = $$lcssa330;
     $161 = (($nl_arg) + ($argpos$0<<3)|0);
     $162 = $161;
     $163 = $162;
     $164 = HEAP32[$163>>2]|0;
     $165 = (($162) + 4)|0;
     $166 = $165;
     $167 = HEAP32[$166>>2]|0;
     $168 = $arg;
     $169 = $168;
     HEAP32[$169>>2] = $164;
     $170 = (($168) + 4)|0;
     $171 = $170;
     HEAP32[$171>>2] = $167;
     label = 52;
     break;
    }
    if (!($0)) {
     $$0 = 0;
     break L1;
    }
    _pop_arg208($arg,$$lcssa330,$ap);
   }
  } while(0);
  if ((label|0) == 52) {
   label = 0;
   if (!($0)) {
    $22 = $$lcssa328;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
    continue;
   }
  }
  $172 = HEAP8[$$lcssa326>>0]|0;
  $173 = $172 << 24 >> 24;
  $174 = ($st$0$lcssa327|0)!=(0);
  $175 = $173 & 15;
  $176 = ($175|0)==(3);
  $or$cond15 = $174 & $176;
  $177 = $173 & -33;
  $t$0 = $or$cond15 ? $177 : $173;
  $178 = $fl$1 & 8192;
  $179 = ($178|0)==(0);
  $180 = $fl$1 & -65537;
  $fl$1$ = $179 ? $fl$1 : $180;
  L75: do {
   switch ($t$0|0) {
   case 110:  {
    switch ($st$0$lcssa327|0) {
    case 0:  {
     $187 = HEAP32[$arg>>2]|0;
     HEAP32[$187>>2] = $cnt$1;
     $22 = $$lcssa328;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 1:  {
     $188 = HEAP32[$arg>>2]|0;
     HEAP32[$188>>2] = $cnt$1;
     $22 = $$lcssa328;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 2:  {
     $189 = ($cnt$1|0)<(0);
     $190 = $189 << 31 >> 31;
     $191 = HEAP32[$arg>>2]|0;
     $192 = $191;
     $193 = $192;
     HEAP32[$193>>2] = $cnt$1;
     $194 = (($192) + 4)|0;
     $195 = $194;
     HEAP32[$195>>2] = $190;
     $22 = $$lcssa328;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 3:  {
     $196 = $cnt$1&65535;
     $197 = HEAP32[$arg>>2]|0;
     HEAP16[$197>>1] = $196;
     $22 = $$lcssa328;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 4:  {
     $198 = $cnt$1&255;
     $199 = HEAP32[$arg>>2]|0;
     HEAP8[$199>>0] = $198;
     $22 = $$lcssa328;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 6:  {
     $200 = HEAP32[$arg>>2]|0;
     HEAP32[$200>>2] = $cnt$1;
     $22 = $$lcssa328;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 7:  {
     $201 = ($cnt$1|0)<(0);
     $202 = $201 << 31 >> 31;
     $203 = HEAP32[$arg>>2]|0;
     $204 = $203;
     $205 = $204;
     HEAP32[$205>>2] = $cnt$1;
     $206 = (($204) + 4)|0;
     $207 = $206;
     HEAP32[$207>>2] = $202;
     $22 = $$lcssa328;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    default: {
     $22 = $$lcssa328;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
    }
    }
    break;
   }
   case 112:  {
    $208 = ($p$0>>>0)>(8);
    $209 = $208 ? $p$0 : 8;
    $210 = $fl$1$ | 8;
    $fl$3 = $210;$p$1 = $209;$t$1 = 120;
    label = 64;
    break;
   }
   case 88: case 120:  {
    $fl$3 = $fl$1$;$p$1 = $p$0;$t$1 = $t$0;
    label = 64;
    break;
   }
   case 111:  {
    $248 = $arg;
    $249 = $248;
    $250 = HEAP32[$249>>2]|0;
    $251 = (($248) + 4)|0;
    $252 = $251;
    $253 = HEAP32[$252>>2]|0;
    $254 = ($250|0)==(0);
    $255 = ($253|0)==(0);
    $256 = $254 & $255;
    if ($256) {
     $$0$lcssa$i = $1;
    } else {
     $$03$i33 = $1;$258 = $250;$262 = $253;
     while(1) {
      $257 = $258 & 7;
      $259 = $257 | 48;
      $260 = $259&255;
      $261 = ((($$03$i33)) + -1|0);
      HEAP8[$261>>0] = $260;
      $263 = (_bitshift64Lshr(($258|0),($262|0),3)|0);
      $264 = tempRet0;
      $265 = ($263|0)==(0);
      $266 = ($264|0)==(0);
      $267 = $265 & $266;
      if ($267) {
       $$0$lcssa$i = $261;
       break;
      } else {
       $$03$i33 = $261;$258 = $263;$262 = $264;
      }
     }
    }
    $268 = $fl$1$ & 8;
    $269 = ($268|0)==(0);
    if ($269) {
     $a$0 = $$0$lcssa$i;$fl$4 = $fl$1$;$p$2 = $p$0;$pl$1 = 0;$prefix$1 = 3360;
     label = 77;
    } else {
     $270 = $$0$lcssa$i;
     $271 = (($2) - ($270))|0;
     $272 = (($271) + 1)|0;
     $273 = ($p$0|0)<($272|0);
     $$p$0 = $273 ? $272 : $p$0;
     $a$0 = $$0$lcssa$i;$fl$4 = $fl$1$;$p$2 = $$p$0;$pl$1 = 0;$prefix$1 = 3360;
     label = 77;
    }
    break;
   }
   case 105: case 100:  {
    $274 = $arg;
    $275 = $274;
    $276 = HEAP32[$275>>2]|0;
    $277 = (($274) + 4)|0;
    $278 = $277;
    $279 = HEAP32[$278>>2]|0;
    $280 = ($279|0)<(0);
    if ($280) {
     $281 = (_i64Subtract(0,0,($276|0),($279|0))|0);
     $282 = tempRet0;
     $283 = $arg;
     $284 = $283;
     HEAP32[$284>>2] = $281;
     $285 = (($283) + 4)|0;
     $286 = $285;
     HEAP32[$286>>2] = $282;
     $291 = $281;$292 = $282;$pl$0 = 1;$prefix$0 = 3360;
     label = 76;
     break L75;
    }
    $287 = $fl$1$ & 2048;
    $288 = ($287|0)==(0);
    if ($288) {
     $289 = $fl$1$ & 1;
     $290 = ($289|0)==(0);
     $$ = $290 ? 3360 : (3362);
     $291 = $276;$292 = $279;$pl$0 = $289;$prefix$0 = $$;
     label = 76;
    } else {
     $291 = $276;$292 = $279;$pl$0 = 1;$prefix$0 = (3361);
     label = 76;
    }
    break;
   }
   case 117:  {
    $181 = $arg;
    $182 = $181;
    $183 = HEAP32[$182>>2]|0;
    $184 = (($181) + 4)|0;
    $185 = $184;
    $186 = HEAP32[$185>>2]|0;
    $291 = $183;$292 = $186;$pl$0 = 0;$prefix$0 = 3360;
    label = 76;
    break;
   }
   case 99:  {
    $312 = $arg;
    $313 = $312;
    $314 = HEAP32[$313>>2]|0;
    $315 = (($312) + 4)|0;
    $316 = $315;
    $317 = HEAP32[$316>>2]|0;
    $318 = $314&255;
    HEAP8[$3>>0] = $318;
    $a$2 = $3;$fl$6 = $180;$p$5 = 1;$pl$2 = 0;$prefix$2 = 3360;$z$2 = $1;
    break;
   }
   case 109:  {
    $319 = (___errno_location()|0);
    $320 = HEAP32[$319>>2]|0;
    $321 = (_strerror($320)|0);
    $a$1 = $321;
    label = 82;
    break;
   }
   case 115:  {
    $322 = HEAP32[$arg>>2]|0;
    $323 = ($322|0)!=(0|0);
    $324 = $323 ? $322 : 3370;
    $a$1 = $324;
    label = 82;
    break;
   }
   case 67:  {
    $331 = $arg;
    $332 = $331;
    $333 = HEAP32[$332>>2]|0;
    $334 = (($331) + 4)|0;
    $335 = $334;
    $336 = HEAP32[$335>>2]|0;
    HEAP32[$wc>>2] = $333;
    HEAP32[$4>>2] = 0;
    HEAP32[$arg>>2] = $wc;
    $p$4195 = -1;
    label = 86;
    break;
   }
   case 83:  {
    $337 = ($p$0|0)==(0);
    if ($337) {
     _pad($f,32,$w$1,0,$fl$1$);
     $i$0$lcssa197 = 0;
     label = 98;
    } else {
     $p$4195 = $p$0;
     label = 86;
    }
    break;
   }
   case 65: case 71: case 70: case 69: case 97: case 103: case 102: case 101:  {
    $364 = +HEAPF64[$arg>>3];
    HEAP32[$e2$i>>2] = 0;
    HEAPF64[tempDoublePtr>>3] = $364;$365 = HEAP32[tempDoublePtr>>2]|0;
    $366 = HEAP32[tempDoublePtr+4>>2]|0;
    $367 = ($366|0)<(0);
    if ($367) {
     $368 = -$364;
     $$07$i = $368;$pl$0$i = 1;$prefix$0$i = 3377;
    } else {
     $369 = $fl$1$ & 2048;
     $370 = ($369|0)==(0);
     if ($370) {
      $371 = $fl$1$ & 1;
      $372 = ($371|0)==(0);
      $$$i = $372 ? (3378) : (3383);
      $$07$i = $364;$pl$0$i = $371;$prefix$0$i = $$$i;
     } else {
      $$07$i = $364;$pl$0$i = 1;$prefix$0$i = (3380);
     }
    }
    HEAPF64[tempDoublePtr>>3] = $$07$i;$373 = HEAP32[tempDoublePtr>>2]|0;
    $374 = HEAP32[tempDoublePtr+4>>2]|0;
    $375 = $374 & 2146435072;
    $376 = ($375>>>0)<(2146435072);
    $377 = (0)<(0);
    $378 = ($375|0)==(2146435072);
    $379 = $378 & $377;
    $380 = $376 | $379;
    do {
     if ($380) {
      $396 = (+_frexpl($$07$i,$e2$i));
      $397 = $396 * 2.0;
      $398 = $397 != 0.0;
      if ($398) {
       $399 = HEAP32[$e2$i>>2]|0;
       $400 = (($399) + -1)|0;
       HEAP32[$e2$i>>2] = $400;
      }
      $401 = $t$0 | 32;
      $402 = ($401|0)==(97);
      if ($402) {
       $403 = $t$0 & 32;
       $404 = ($403|0)==(0);
       $405 = ((($prefix$0$i)) + 9|0);
       $prefix$0$$i = $404 ? $prefix$0$i : $405;
       $406 = $pl$0$i | 2;
       $407 = ($p$0>>>0)>(11);
       $408 = (12 - ($p$0))|0;
       $409 = ($408|0)==(0);
       $410 = $407 | $409;
       do {
        if ($410) {
         $$1$i = $397;
        } else {
         $re$169$i = $408;$round$068$i = 8.0;
         while(1) {
          $411 = (($re$169$i) + -1)|0;
          $412 = $round$068$i * 16.0;
          $413 = ($411|0)==(0);
          if ($413) {
           $$lcssa347 = $412;
           break;
          } else {
           $re$169$i = $411;$round$068$i = $412;
          }
         }
         $414 = HEAP8[$prefix$0$$i>>0]|0;
         $415 = ($414<<24>>24)==(45);
         if ($415) {
          $416 = -$397;
          $417 = $416 - $$lcssa347;
          $418 = $$lcssa347 + $417;
          $419 = -$418;
          $$1$i = $419;
          break;
         } else {
          $420 = $397 + $$lcssa347;
          $421 = $420 - $$lcssa347;
          $$1$i = $421;
          break;
         }
        }
       } while(0);
       $422 = HEAP32[$e2$i>>2]|0;
       $423 = ($422|0)<(0);
       $424 = (0 - ($422))|0;
       $425 = $423 ? $424 : $422;
       $426 = ($425|0)<(0);
       $427 = $426 << 31 >> 31;
       $428 = (_fmt_u($425,$427,$5)|0);
       $429 = ($428|0)==($5|0);
       if ($429) {
        HEAP8[$6>>0] = 48;
        $estr$0$i = $6;
       } else {
        $estr$0$i = $428;
       }
       $430 = $422 >> 31;
       $431 = $430 & 2;
       $432 = (($431) + 43)|0;
       $433 = $432&255;
       $434 = ((($estr$0$i)) + -1|0);
       HEAP8[$434>>0] = $433;
       $435 = (($t$0) + 15)|0;
       $436 = $435&255;
       $437 = ((($estr$0$i)) + -2|0);
       HEAP8[$437>>0] = $436;
       $notrhs$i = ($p$0|0)<(1);
       $438 = $fl$1$ & 8;
       $439 = ($438|0)==(0);
       $$2$i = $$1$i;$s$0$i = $buf$i;
       while(1) {
        $440 = (~~(($$2$i)));
        $441 = (3344 + ($440)|0);
        $442 = HEAP8[$441>>0]|0;
        $443 = $442&255;
        $444 = $443 | $403;
        $445 = $444&255;
        $446 = ((($s$0$i)) + 1|0);
        HEAP8[$s$0$i>>0] = $445;
        $447 = (+($440|0));
        $448 = $$2$i - $447;
        $449 = $448 * 16.0;
        $450 = $446;
        $451 = (($450) - ($7))|0;
        $452 = ($451|0)==(1);
        do {
         if ($452) {
          $notlhs$i = $449 == 0.0;
          $or$cond3$not$i = $notrhs$i & $notlhs$i;
          $or$cond$i = $439 & $or$cond3$not$i;
          if ($or$cond$i) {
           $s$1$i = $446;
           break;
          }
          $453 = ((($s$0$i)) + 2|0);
          HEAP8[$446>>0] = 46;
          $s$1$i = $453;
         } else {
          $s$1$i = $446;
         }
        } while(0);
        $454 = $449 != 0.0;
        if ($454) {
         $$2$i = $449;$s$0$i = $s$1$i;
        } else {
         $s$1$i$lcssa = $s$1$i;
         break;
        }
       }
       $455 = ($p$0|0)!=(0);
       $$pre182$i = $s$1$i$lcssa;
       $456 = (($10) + ($$pre182$i))|0;
       $457 = ($456|0)<($p$0|0);
       $or$cond239 = $455 & $457;
       $458 = $437;
       $459 = (($11) + ($p$0))|0;
       $460 = (($459) - ($458))|0;
       $461 = $437;
       $462 = (($9) - ($461))|0;
       $463 = (($462) + ($$pre182$i))|0;
       $l$0$i = $or$cond239 ? $460 : $463;
       $464 = (($l$0$i) + ($406))|0;
       _pad($f,32,$w$1,$464,$fl$1$);
       $465 = HEAP32[$f>>2]|0;
       $466 = $465 & 32;
       $467 = ($466|0)==(0);
       if ($467) {
        (___fwritex($prefix$0$$i,$406,$f)|0);
       }
       $468 = $fl$1$ ^ 65536;
       _pad($f,48,$w$1,$464,$468);
       $469 = (($$pre182$i) - ($7))|0;
       $470 = HEAP32[$f>>2]|0;
       $471 = $470 & 32;
       $472 = ($471|0)==(0);
       if ($472) {
        (___fwritex($buf$i,$469,$f)|0);
       }
       $473 = $437;
       $474 = (($8) - ($473))|0;
       $sum = (($469) + ($474))|0;
       $475 = (($l$0$i) - ($sum))|0;
       _pad($f,48,$475,0,0);
       $476 = HEAP32[$f>>2]|0;
       $477 = $476 & 32;
       $478 = ($477|0)==(0);
       if ($478) {
        (___fwritex($437,$474,$f)|0);
       }
       $479 = $fl$1$ ^ 8192;
       _pad($f,32,$w$1,$464,$479);
       $480 = ($464|0)<($w$1|0);
       $w$$i = $480 ? $w$1 : $464;
       $$0$i = $w$$i;
       break;
      }
      $481 = ($p$0|0)<(0);
      $$p$i = $481 ? 6 : $p$0;
      if ($398) {
       $482 = $397 * 268435456.0;
       $483 = HEAP32[$e2$i>>2]|0;
       $484 = (($483) + -28)|0;
       HEAP32[$e2$i>>2] = $484;
       $$3$i = $482;$485 = $484;
      } else {
       $$pre179$i = HEAP32[$e2$i>>2]|0;
       $$3$i = $397;$485 = $$pre179$i;
      }
      $486 = ($485|0)<(0);
      $$31$i = $486 ? $big$i : $12;
      $487 = $$31$i;
      $$4$i = $$3$i;$z$0$i = $$31$i;
      while(1) {
       $488 = (~~(($$4$i))>>>0);
       HEAP32[$z$0$i>>2] = $488;
       $489 = ((($z$0$i)) + 4|0);
       $490 = (+($488>>>0));
       $491 = $$4$i - $490;
       $492 = $491 * 1.0E+9;
       $493 = $492 != 0.0;
       if ($493) {
        $$4$i = $492;$z$0$i = $489;
       } else {
        $$lcssa331 = $489;
        break;
       }
      }
      $$pr$i = HEAP32[$e2$i>>2]|0;
      $494 = ($$pr$i|0)>(0);
      if ($494) {
       $495 = $$pr$i;$a$1147$i = $$31$i;$z$1146$i = $$lcssa331;
       while(1) {
        $496 = ($495|0)>(29);
        $497 = $496 ? 29 : $495;
        $d$0139$i = ((($z$1146$i)) + -4|0);
        $498 = ($d$0139$i>>>0)<($a$1147$i>>>0);
        do {
         if ($498) {
          $a$2$ph$i = $a$1147$i;
         } else {
          $carry$0140$i = 0;$d$0141$i = $d$0139$i;
          while(1) {
           $499 = HEAP32[$d$0141$i>>2]|0;
           $500 = (_bitshift64Shl(($499|0),0,($497|0))|0);
           $501 = tempRet0;
           $502 = (_i64Add(($500|0),($501|0),($carry$0140$i|0),0)|0);
           $503 = tempRet0;
           $504 = (___uremdi3(($502|0),($503|0),1000000000,0)|0);
           $505 = tempRet0;
           HEAP32[$d$0141$i>>2] = $504;
           $506 = (___udivdi3(($502|0),($503|0),1000000000,0)|0);
           $507 = tempRet0;
           $d$0$i = ((($d$0141$i)) + -4|0);
           $508 = ($d$0$i>>>0)<($a$1147$i>>>0);
           if ($508) {
            $$lcssa332 = $506;
            break;
           } else {
            $carry$0140$i = $506;$d$0141$i = $d$0$i;
           }
          }
          $509 = ($$lcssa332|0)==(0);
          if ($509) {
           $a$2$ph$i = $a$1147$i;
           break;
          }
          $510 = ((($a$1147$i)) + -4|0);
          HEAP32[$510>>2] = $$lcssa332;
          $a$2$ph$i = $510;
         }
        } while(0);
        $z$2$i = $z$1146$i;
        while(1) {
         $511 = ($z$2$i>>>0)>($a$2$ph$i>>>0);
         if (!($511)) {
          $z$2$i$lcssa = $z$2$i;
          break;
         }
         $512 = ((($z$2$i)) + -4|0);
         $513 = HEAP32[$512>>2]|0;
         $514 = ($513|0)==(0);
         if ($514) {
          $z$2$i = $512;
         } else {
          $z$2$i$lcssa = $z$2$i;
          break;
         }
        }
        $515 = HEAP32[$e2$i>>2]|0;
        $516 = (($515) - ($497))|0;
        HEAP32[$e2$i>>2] = $516;
        $517 = ($516|0)>(0);
        if ($517) {
         $495 = $516;$a$1147$i = $a$2$ph$i;$z$1146$i = $z$2$i$lcssa;
        } else {
         $$pr47$i = $516;$a$1$lcssa$i = $a$2$ph$i;$z$1$lcssa$i = $z$2$i$lcssa;
         break;
        }
       }
      } else {
       $$pr47$i = $$pr$i;$a$1$lcssa$i = $$31$i;$z$1$lcssa$i = $$lcssa331;
      }
      $518 = ($$pr47$i|0)<(0);
      if ($518) {
       $519 = (($$p$i) + 25)|0;
       $520 = (($519|0) / 9)&-1;
       $521 = (($520) + 1)|0;
       $522 = ($401|0)==(102);
       $524 = $$pr47$i;$a$3134$i = $a$1$lcssa$i;$z$3133$i = $z$1$lcssa$i;
       while(1) {
        $523 = (0 - ($524))|0;
        $525 = ($523|0)>(9);
        $526 = $525 ? 9 : $523;
        $527 = ($a$3134$i>>>0)<($z$3133$i>>>0);
        do {
         if ($527) {
          $531 = 1 << $526;
          $532 = (($531) + -1)|0;
          $533 = 1000000000 >>> $526;
          $carry3$0128$i = 0;$d$1127$i = $a$3134$i;
          while(1) {
           $534 = HEAP32[$d$1127$i>>2]|0;
           $535 = $534 & $532;
           $536 = $534 >>> $526;
           $537 = (($536) + ($carry3$0128$i))|0;
           HEAP32[$d$1127$i>>2] = $537;
           $538 = Math_imul($535, $533)|0;
           $539 = ((($d$1127$i)) + 4|0);
           $540 = ($539>>>0)<($z$3133$i>>>0);
           if ($540) {
            $carry3$0128$i = $538;$d$1127$i = $539;
           } else {
            $$lcssa334 = $538;
            break;
           }
          }
          $541 = HEAP32[$a$3134$i>>2]|0;
          $542 = ($541|0)==(0);
          $543 = ((($a$3134$i)) + 4|0);
          $$a$3$i = $542 ? $543 : $a$3134$i;
          $544 = ($$lcssa334|0)==(0);
          if ($544) {
           $$a$3186$i = $$a$3$i;$z$4$i = $z$3133$i;
           break;
          }
          $545 = ((($z$3133$i)) + 4|0);
          HEAP32[$z$3133$i>>2] = $$lcssa334;
          $$a$3186$i = $$a$3$i;$z$4$i = $545;
         } else {
          $528 = HEAP32[$a$3134$i>>2]|0;
          $529 = ($528|0)==(0);
          $530 = ((($a$3134$i)) + 4|0);
          $$a$3185$i = $529 ? $530 : $a$3134$i;
          $$a$3186$i = $$a$3185$i;$z$4$i = $z$3133$i;
         }
        } while(0);
        $546 = $522 ? $$31$i : $$a$3186$i;
        $547 = $z$4$i;
        $548 = $546;
        $549 = (($547) - ($548))|0;
        $550 = $549 >> 2;
        $551 = ($550|0)>($521|0);
        $552 = (($546) + ($521<<2)|0);
        $$z$4$i = $551 ? $552 : $z$4$i;
        $553 = HEAP32[$e2$i>>2]|0;
        $554 = (($553) + ($526))|0;
        HEAP32[$e2$i>>2] = $554;
        $555 = ($554|0)<(0);
        if ($555) {
         $524 = $554;$a$3134$i = $$a$3186$i;$z$3133$i = $$z$4$i;
        } else {
         $a$3$lcssa$i = $$a$3186$i;$z$3$lcssa$i = $$z$4$i;
         break;
        }
       }
      } else {
       $a$3$lcssa$i = $a$1$lcssa$i;$z$3$lcssa$i = $z$1$lcssa$i;
      }
      $556 = ($a$3$lcssa$i>>>0)<($z$3$lcssa$i>>>0);
      do {
       if ($556) {
        $557 = $a$3$lcssa$i;
        $558 = (($487) - ($557))|0;
        $559 = $558 >> 2;
        $560 = ($559*9)|0;
        $561 = HEAP32[$a$3$lcssa$i>>2]|0;
        $562 = ($561>>>0)<(10);
        if ($562) {
         $e$1$i = $560;
         break;
        } else {
         $e$0123$i = $560;$i$0122$i = 10;
        }
        while(1) {
         $563 = ($i$0122$i*10)|0;
         $564 = (($e$0123$i) + 1)|0;
         $565 = ($561>>>0)<($563>>>0);
         if ($565) {
          $e$1$i = $564;
          break;
         } else {
          $e$0123$i = $564;$i$0122$i = $563;
         }
        }
       } else {
        $e$1$i = 0;
       }
      } while(0);
      $566 = ($401|0)!=(102);
      $567 = $566 ? $e$1$i : 0;
      $568 = (($$p$i) - ($567))|0;
      $569 = ($401|0)==(103);
      $570 = ($$p$i|0)!=(0);
      $571 = $570 & $569;
      $$neg52$i = $571 << 31 >> 31;
      $572 = (($568) + ($$neg52$i))|0;
      $573 = $z$3$lcssa$i;
      $574 = (($573) - ($487))|0;
      $575 = $574 >> 2;
      $576 = ($575*9)|0;
      $577 = (($576) + -9)|0;
      $578 = ($572|0)<($577|0);
      if ($578) {
       $579 = (($572) + 9216)|0;
       $580 = (($579|0) / 9)&-1;
       $$sum$i = (($580) + -1023)|0;
       $581 = (($$31$i) + ($$sum$i<<2)|0);
       $582 = (($579|0) % 9)&-1;
       $j$0115$i = (($582) + 1)|0;
       $583 = ($j$0115$i|0)<(9);
       if ($583) {
        $i$1116$i = 10;$j$0117$i = $j$0115$i;
        while(1) {
         $584 = ($i$1116$i*10)|0;
         $j$0$i = (($j$0117$i) + 1)|0;
         $exitcond$i = ($j$0$i|0)==(9);
         if ($exitcond$i) {
          $i$1$lcssa$i = $584;
          break;
         } else {
          $i$1116$i = $584;$j$0117$i = $j$0$i;
         }
        }
       } else {
        $i$1$lcssa$i = 10;
       }
       $585 = HEAP32[$581>>2]|0;
       $586 = (($585>>>0) % ($i$1$lcssa$i>>>0))&-1;
       $587 = ($586|0)==(0);
       if ($587) {
        $$sum15$i = (($580) + -1022)|0;
        $588 = (($$31$i) + ($$sum15$i<<2)|0);
        $589 = ($588|0)==($z$3$lcssa$i|0);
        if ($589) {
         $a$7$i = $a$3$lcssa$i;$d$3$i = $581;$e$3$i = $e$1$i;
        } else {
         label = 163;
        }
       } else {
        label = 163;
       }
       do {
        if ((label|0) == 163) {
         label = 0;
         $590 = (($585>>>0) / ($i$1$lcssa$i>>>0))&-1;
         $591 = $590 & 1;
         $592 = ($591|0)==(0);
         $$20$i = $592 ? 9007199254740992.0 : 9007199254740994.0;
         $593 = (($i$1$lcssa$i|0) / 2)&-1;
         $594 = ($586>>>0)<($593>>>0);
         do {
          if ($594) {
           $small$0$i = 0.5;
          } else {
           $595 = ($586|0)==($593|0);
           if ($595) {
            $$sum16$i = (($580) + -1022)|0;
            $596 = (($$31$i) + ($$sum16$i<<2)|0);
            $597 = ($596|0)==($z$3$lcssa$i|0);
            if ($597) {
             $small$0$i = 1.0;
             break;
            }
           }
           $small$0$i = 1.5;
          }
         } while(0);
         $598 = ($pl$0$i|0)==(0);
         do {
          if ($598) {
           $round6$1$i = $$20$i;$small$1$i = $small$0$i;
          } else {
           $599 = HEAP8[$prefix$0$i>>0]|0;
           $600 = ($599<<24>>24)==(45);
           if (!($600)) {
            $round6$1$i = $$20$i;$small$1$i = $small$0$i;
            break;
           }
           $601 = -$$20$i;
           $602 = -$small$0$i;
           $round6$1$i = $601;$small$1$i = $602;
          }
         } while(0);
         $603 = (($585) - ($586))|0;
         HEAP32[$581>>2] = $603;
         $604 = $round6$1$i + $small$1$i;
         $605 = $604 != $round6$1$i;
         if (!($605)) {
          $a$7$i = $a$3$lcssa$i;$d$3$i = $581;$e$3$i = $e$1$i;
          break;
         }
         $606 = (($603) + ($i$1$lcssa$i))|0;
         HEAP32[$581>>2] = $606;
         $607 = ($606>>>0)>(999999999);
         if ($607) {
          $a$5109$i = $a$3$lcssa$i;$d$2108$i = $581;
          while(1) {
           $608 = ((($d$2108$i)) + -4|0);
           HEAP32[$d$2108$i>>2] = 0;
           $609 = ($608>>>0)<($a$5109$i>>>0);
           if ($609) {
            $610 = ((($a$5109$i)) + -4|0);
            HEAP32[$610>>2] = 0;
            $a$6$i = $610;
           } else {
            $a$6$i = $a$5109$i;
           }
           $611 = HEAP32[$608>>2]|0;
           $612 = (($611) + 1)|0;
           HEAP32[$608>>2] = $612;
           $613 = ($612>>>0)>(999999999);
           if ($613) {
            $a$5109$i = $a$6$i;$d$2108$i = $608;
           } else {
            $a$5$lcssa$i = $a$6$i;$d$2$lcssa$i = $608;
            break;
           }
          }
         } else {
          $a$5$lcssa$i = $a$3$lcssa$i;$d$2$lcssa$i = $581;
         }
         $614 = $a$5$lcssa$i;
         $615 = (($487) - ($614))|0;
         $616 = $615 >> 2;
         $617 = ($616*9)|0;
         $618 = HEAP32[$a$5$lcssa$i>>2]|0;
         $619 = ($618>>>0)<(10);
         if ($619) {
          $a$7$i = $a$5$lcssa$i;$d$3$i = $d$2$lcssa$i;$e$3$i = $617;
          break;
         } else {
          $e$2104$i = $617;$i$2103$i = 10;
         }
         while(1) {
          $620 = ($i$2103$i*10)|0;
          $621 = (($e$2104$i) + 1)|0;
          $622 = ($618>>>0)<($620>>>0);
          if ($622) {
           $a$7$i = $a$5$lcssa$i;$d$3$i = $d$2$lcssa$i;$e$3$i = $621;
           break;
          } else {
           $e$2104$i = $621;$i$2103$i = $620;
          }
         }
        }
       } while(0);
       $623 = ((($d$3$i)) + 4|0);
       $624 = ($z$3$lcssa$i>>>0)>($623>>>0);
       $$z$3$i = $624 ? $623 : $z$3$lcssa$i;
       $a$8$ph$i = $a$7$i;$e$4$ph$i = $e$3$i;$z$6$ph$i = $$z$3$i;
      } else {
       $a$8$ph$i = $a$3$lcssa$i;$e$4$ph$i = $e$1$i;$z$6$ph$i = $z$3$lcssa$i;
      }
      $625 = (0 - ($e$4$ph$i))|0;
      $z$6$i = $z$6$ph$i;
      while(1) {
       $626 = ($z$6$i>>>0)>($a$8$ph$i>>>0);
       if (!($626)) {
        $$lcssa159$i = 0;$z$6$i$lcssa = $z$6$i;
        break;
       }
       $627 = ((($z$6$i)) + -4|0);
       $628 = HEAP32[$627>>2]|0;
       $629 = ($628|0)==(0);
       if ($629) {
        $z$6$i = $627;
       } else {
        $$lcssa159$i = 1;$z$6$i$lcssa = $z$6$i;
        break;
       }
      }
      do {
       if ($569) {
        $630 = $570&1;
        $631 = $630 ^ 1;
        $$p$$i = (($631) + ($$p$i))|0;
        $632 = ($$p$$i|0)>($e$4$ph$i|0);
        $633 = ($e$4$ph$i|0)>(-5);
        $or$cond6$i = $632 & $633;
        if ($or$cond6$i) {
         $634 = (($t$0) + -1)|0;
         $$neg53$i = (($$p$$i) + -1)|0;
         $635 = (($$neg53$i) - ($e$4$ph$i))|0;
         $$013$i = $634;$$210$i = $635;
        } else {
         $636 = (($t$0) + -2)|0;
         $637 = (($$p$$i) + -1)|0;
         $$013$i = $636;$$210$i = $637;
        }
        $638 = $fl$1$ & 8;
        $639 = ($638|0)==(0);
        if (!($639)) {
         $$114$i = $$013$i;$$311$i = $$210$i;$$pre$phi184$iZ2D = $638;
         break;
        }
        do {
         if ($$lcssa159$i) {
          $640 = ((($z$6$i$lcssa)) + -4|0);
          $641 = HEAP32[$640>>2]|0;
          $642 = ($641|0)==(0);
          if ($642) {
           $j$2$i = 9;
           break;
          }
          $643 = (($641>>>0) % 10)&-1;
          $644 = ($643|0)==(0);
          if ($644) {
           $i$399$i = 10;$j$1100$i = 0;
          } else {
           $j$2$i = 0;
           break;
          }
          while(1) {
           $645 = ($i$399$i*10)|0;
           $646 = (($j$1100$i) + 1)|0;
           $647 = (($641>>>0) % ($645>>>0))&-1;
           $648 = ($647|0)==(0);
           if ($648) {
            $i$399$i = $645;$j$1100$i = $646;
           } else {
            $j$2$i = $646;
            break;
           }
          }
         } else {
          $j$2$i = 9;
         }
        } while(0);
        $649 = $$013$i | 32;
        $650 = ($649|0)==(102);
        $651 = $z$6$i$lcssa;
        $652 = (($651) - ($487))|0;
        $653 = $652 >> 2;
        $654 = ($653*9)|0;
        $655 = (($654) + -9)|0;
        if ($650) {
         $656 = (($655) - ($j$2$i))|0;
         $657 = ($656|0)<(0);
         $$21$i = $657 ? 0 : $656;
         $658 = ($$210$i|0)<($$21$i|0);
         $$210$$22$i = $658 ? $$210$i : $$21$i;
         $$114$i = $$013$i;$$311$i = $$210$$22$i;$$pre$phi184$iZ2D = 0;
         break;
        } else {
         $659 = (($655) + ($e$4$ph$i))|0;
         $660 = (($659) - ($j$2$i))|0;
         $661 = ($660|0)<(0);
         $$23$i = $661 ? 0 : $660;
         $662 = ($$210$i|0)<($$23$i|0);
         $$210$$24$i = $662 ? $$210$i : $$23$i;
         $$114$i = $$013$i;$$311$i = $$210$$24$i;$$pre$phi184$iZ2D = 0;
         break;
        }
       } else {
        $$pre183$i = $fl$1$ & 8;
        $$114$i = $t$0;$$311$i = $$p$i;$$pre$phi184$iZ2D = $$pre183$i;
       }
      } while(0);
      $663 = $$311$i | $$pre$phi184$iZ2D;
      $664 = ($663|0)!=(0);
      $665 = $664&1;
      $666 = $$114$i | 32;
      $667 = ($666|0)==(102);
      if ($667) {
       $668 = ($e$4$ph$i|0)>(0);
       $669 = $668 ? $e$4$ph$i : 0;
       $$pn$i = $669;$estr$2$i = 0;
      } else {
       $670 = ($e$4$ph$i|0)<(0);
       $671 = $670 ? $625 : $e$4$ph$i;
       $672 = ($671|0)<(0);
       $673 = $672 << 31 >> 31;
       $674 = (_fmt_u($671,$673,$5)|0);
       $675 = $674;
       $676 = (($8) - ($675))|0;
       $677 = ($676|0)<(2);
       if ($677) {
        $estr$193$i = $674;
        while(1) {
         $678 = ((($estr$193$i)) + -1|0);
         HEAP8[$678>>0] = 48;
         $679 = $678;
         $680 = (($8) - ($679))|0;
         $681 = ($680|0)<(2);
         if ($681) {
          $estr$193$i = $678;
         } else {
          $estr$1$lcssa$i = $678;
          break;
         }
        }
       } else {
        $estr$1$lcssa$i = $674;
       }
       $682 = $e$4$ph$i >> 31;
       $683 = $682 & 2;
       $684 = (($683) + 43)|0;
       $685 = $684&255;
       $686 = ((($estr$1$lcssa$i)) + -1|0);
       HEAP8[$686>>0] = $685;
       $687 = $$114$i&255;
       $688 = ((($estr$1$lcssa$i)) + -2|0);
       HEAP8[$688>>0] = $687;
       $689 = $688;
       $690 = (($8) - ($689))|0;
       $$pn$i = $690;$estr$2$i = $688;
      }
      $691 = (($pl$0$i) + 1)|0;
      $692 = (($691) + ($$311$i))|0;
      $l$1$i = (($692) + ($665))|0;
      $693 = (($l$1$i) + ($$pn$i))|0;
      _pad($f,32,$w$1,$693,$fl$1$);
      $694 = HEAP32[$f>>2]|0;
      $695 = $694 & 32;
      $696 = ($695|0)==(0);
      if ($696) {
       (___fwritex($prefix$0$i,$pl$0$i,$f)|0);
      }
      $697 = $fl$1$ ^ 65536;
      _pad($f,48,$w$1,$693,$697);
      do {
       if ($667) {
        $698 = ($a$8$ph$i>>>0)>($$31$i>>>0);
        $r$0$a$8$i = $698 ? $$31$i : $a$8$ph$i;
        $d$482$i = $r$0$a$8$i;
        while(1) {
         $699 = HEAP32[$d$482$i>>2]|0;
         $700 = (_fmt_u($699,0,$13)|0);
         $701 = ($d$482$i|0)==($r$0$a$8$i|0);
         do {
          if ($701) {
           $705 = ($700|0)==($13|0);
           if (!($705)) {
            $s7$1$i = $700;
            break;
           }
           HEAP8[$15>>0] = 48;
           $s7$1$i = $15;
          } else {
           $702 = ($700>>>0)>($buf$i>>>0);
           if ($702) {
            $s7$079$i = $700;
           } else {
            $s7$1$i = $700;
            break;
           }
           while(1) {
            $703 = ((($s7$079$i)) + -1|0);
            HEAP8[$703>>0] = 48;
            $704 = ($703>>>0)>($buf$i>>>0);
            if ($704) {
             $s7$079$i = $703;
            } else {
             $s7$1$i = $703;
             break;
            }
           }
          }
         } while(0);
         $706 = HEAP32[$f>>2]|0;
         $707 = $706 & 32;
         $708 = ($707|0)==(0);
         if ($708) {
          $709 = $s7$1$i;
          $710 = (($14) - ($709))|0;
          (___fwritex($s7$1$i,$710,$f)|0);
         }
         $711 = ((($d$482$i)) + 4|0);
         $712 = ($711>>>0)>($$31$i>>>0);
         if ($712) {
          $$lcssa344 = $711;
          break;
         } else {
          $d$482$i = $711;
         }
        }
        $713 = ($663|0)==(0);
        do {
         if (!($713)) {
          $714 = HEAP32[$f>>2]|0;
          $715 = $714 & 32;
          $716 = ($715|0)==(0);
          if (!($716)) {
           break;
          }
          (___fwritex(3412,1,$f)|0);
         }
        } while(0);
        $717 = ($$lcssa344>>>0)<($z$6$i$lcssa>>>0);
        $718 = ($$311$i|0)>(0);
        $719 = $718 & $717;
        if ($719) {
         $$41276$i = $$311$i;$d$575$i = $$lcssa344;
         while(1) {
          $720 = HEAP32[$d$575$i>>2]|0;
          $721 = (_fmt_u($720,0,$13)|0);
          $722 = ($721>>>0)>($buf$i>>>0);
          if ($722) {
           $s8$070$i = $721;
           while(1) {
            $723 = ((($s8$070$i)) + -1|0);
            HEAP8[$723>>0] = 48;
            $724 = ($723>>>0)>($buf$i>>>0);
            if ($724) {
             $s8$070$i = $723;
            } else {
             $s8$0$lcssa$i = $723;
             break;
            }
           }
          } else {
           $s8$0$lcssa$i = $721;
          }
          $725 = HEAP32[$f>>2]|0;
          $726 = $725 & 32;
          $727 = ($726|0)==(0);
          if ($727) {
           $728 = ($$41276$i|0)>(9);
           $729 = $728 ? 9 : $$41276$i;
           (___fwritex($s8$0$lcssa$i,$729,$f)|0);
          }
          $730 = ((($d$575$i)) + 4|0);
          $731 = (($$41276$i) + -9)|0;
          $732 = ($730>>>0)<($z$6$i$lcssa>>>0);
          $733 = ($$41276$i|0)>(9);
          $734 = $733 & $732;
          if ($734) {
           $$41276$i = $731;$d$575$i = $730;
          } else {
           $$412$lcssa$i = $731;
           break;
          }
         }
        } else {
         $$412$lcssa$i = $$311$i;
        }
        $735 = (($$412$lcssa$i) + 9)|0;
        _pad($f,48,$735,9,0);
       } else {
        $736 = ((($a$8$ph$i)) + 4|0);
        $z$6$$i = $$lcssa159$i ? $z$6$i$lcssa : $736;
        $737 = ($$311$i|0)>(-1);
        if ($737) {
         $738 = ($$pre$phi184$iZ2D|0)==(0);
         $$587$i = $$311$i;$d$686$i = $a$8$ph$i;
         while(1) {
          $739 = HEAP32[$d$686$i>>2]|0;
          $740 = (_fmt_u($739,0,$13)|0);
          $741 = ($740|0)==($13|0);
          if ($741) {
           HEAP8[$15>>0] = 48;
           $s9$0$i = $15;
          } else {
           $s9$0$i = $740;
          }
          $742 = ($d$686$i|0)==($a$8$ph$i|0);
          do {
           if ($742) {
            $746 = ((($s9$0$i)) + 1|0);
            $747 = HEAP32[$f>>2]|0;
            $748 = $747 & 32;
            $749 = ($748|0)==(0);
            if ($749) {
             (___fwritex($s9$0$i,1,$f)|0);
            }
            $750 = ($$587$i|0)<(1);
            $or$cond29$i = $738 & $750;
            if ($or$cond29$i) {
             $s9$2$i = $746;
             break;
            }
            $751 = HEAP32[$f>>2]|0;
            $752 = $751 & 32;
            $753 = ($752|0)==(0);
            if (!($753)) {
             $s9$2$i = $746;
             break;
            }
            (___fwritex(3412,1,$f)|0);
            $s9$2$i = $746;
           } else {
            $743 = ($s9$0$i>>>0)>($buf$i>>>0);
            if ($743) {
             $s9$183$i = $s9$0$i;
            } else {
             $s9$2$i = $s9$0$i;
             break;
            }
            while(1) {
             $744 = ((($s9$183$i)) + -1|0);
             HEAP8[$744>>0] = 48;
             $745 = ($744>>>0)>($buf$i>>>0);
             if ($745) {
              $s9$183$i = $744;
             } else {
              $s9$2$i = $744;
              break;
             }
            }
           }
          } while(0);
          $754 = $s9$2$i;
          $755 = (($14) - ($754))|0;
          $756 = HEAP32[$f>>2]|0;
          $757 = $756 & 32;
          $758 = ($757|0)==(0);
          if ($758) {
           $759 = ($$587$i|0)>($755|0);
           $760 = $759 ? $755 : $$587$i;
           (___fwritex($s9$2$i,$760,$f)|0);
          }
          $761 = (($$587$i) - ($755))|0;
          $762 = ((($d$686$i)) + 4|0);
          $763 = ($762>>>0)<($z$6$$i>>>0);
          $764 = ($761|0)>(-1);
          $765 = $763 & $764;
          if ($765) {
           $$587$i = $761;$d$686$i = $762;
          } else {
           $$5$lcssa$i = $761;
           break;
          }
         }
        } else {
         $$5$lcssa$i = $$311$i;
        }
        $766 = (($$5$lcssa$i) + 18)|0;
        _pad($f,48,$766,18,0);
        $767 = HEAP32[$f>>2]|0;
        $768 = $767 & 32;
        $769 = ($768|0)==(0);
        if (!($769)) {
         break;
        }
        $770 = $estr$2$i;
        $771 = (($8) - ($770))|0;
        (___fwritex($estr$2$i,$771,$f)|0);
       }
      } while(0);
      $772 = $fl$1$ ^ 8192;
      _pad($f,32,$w$1,$693,$772);
      $773 = ($693|0)<($w$1|0);
      $w$30$i = $773 ? $w$1 : $693;
      $$0$i = $w$30$i;
     } else {
      $381 = $t$0 & 32;
      $382 = ($381|0)!=(0);
      $383 = $382 ? 3396 : 3400;
      $384 = ($$07$i != $$07$i) | (0.0 != 0.0);
      $385 = $382 ? 3404 : 3408;
      $pl$1$i = $384 ? 0 : $pl$0$i;
      $s1$0$i = $384 ? $385 : $383;
      $386 = (($pl$1$i) + 3)|0;
      _pad($f,32,$w$1,$386,$180);
      $387 = HEAP32[$f>>2]|0;
      $388 = $387 & 32;
      $389 = ($388|0)==(0);
      if ($389) {
       (___fwritex($prefix$0$i,$pl$1$i,$f)|0);
       $$pre$i = HEAP32[$f>>2]|0;
       $391 = $$pre$i;
      } else {
       $391 = $387;
      }
      $390 = $391 & 32;
      $392 = ($390|0)==(0);
      if ($392) {
       (___fwritex($s1$0$i,3,$f)|0);
      }
      $393 = $fl$1$ ^ 8192;
      _pad($f,32,$w$1,$386,$393);
      $394 = ($386|0)<($w$1|0);
      $395 = $394 ? $w$1 : $386;
      $$0$i = $395;
     }
    } while(0);
    $22 = $$lcssa328;$cnt$0 = $cnt$1;$l$0 = $$0$i;$l10n$0 = $l10n$3;
    continue L1;
    break;
   }
   default: {
    $a$2 = $22;$fl$6 = $fl$1$;$p$5 = $p$0;$pl$2 = 0;$prefix$2 = 3360;$z$2 = $1;
   }
   }
  } while(0);
  L313: do {
   if ((label|0) == 64) {
    label = 0;
    $211 = $arg;
    $212 = $211;
    $213 = HEAP32[$212>>2]|0;
    $214 = (($211) + 4)|0;
    $215 = $214;
    $216 = HEAP32[$215>>2]|0;
    $217 = $t$1 & 32;
    $218 = ($213|0)==(0);
    $219 = ($216|0)==(0);
    $220 = $218 & $219;
    if ($220) {
     $a$0 = $1;$fl$4 = $fl$3;$p$2 = $p$1;$pl$1 = 0;$prefix$1 = 3360;
     label = 77;
    } else {
     $$012$i = $1;$222 = $213;$229 = $216;
     while(1) {
      $221 = $222 & 15;
      $223 = (3344 + ($221)|0);
      $224 = HEAP8[$223>>0]|0;
      $225 = $224&255;
      $226 = $225 | $217;
      $227 = $226&255;
      $228 = ((($$012$i)) + -1|0);
      HEAP8[$228>>0] = $227;
      $230 = (_bitshift64Lshr(($222|0),($229|0),4)|0);
      $231 = tempRet0;
      $232 = ($230|0)==(0);
      $233 = ($231|0)==(0);
      $234 = $232 & $233;
      if ($234) {
       $$lcssa349 = $228;
       break;
      } else {
       $$012$i = $228;$222 = $230;$229 = $231;
      }
     }
     $235 = $arg;
     $236 = $235;
     $237 = HEAP32[$236>>2]|0;
     $238 = (($235) + 4)|0;
     $239 = $238;
     $240 = HEAP32[$239>>2]|0;
     $241 = ($237|0)==(0);
     $242 = ($240|0)==(0);
     $243 = $241 & $242;
     $244 = $fl$3 & 8;
     $245 = ($244|0)==(0);
     $or$cond17 = $245 | $243;
     if ($or$cond17) {
      $a$0 = $$lcssa349;$fl$4 = $fl$3;$p$2 = $p$1;$pl$1 = 0;$prefix$1 = 3360;
      label = 77;
     } else {
      $246 = $t$1 >> 4;
      $247 = (3360 + ($246)|0);
      $a$0 = $$lcssa349;$fl$4 = $fl$3;$p$2 = $p$1;$pl$1 = 2;$prefix$1 = $247;
      label = 77;
     }
    }
   }
   else if ((label|0) == 76) {
    label = 0;
    $293 = (_fmt_u($291,$292,$1)|0);
    $a$0 = $293;$fl$4 = $fl$1$;$p$2 = $p$0;$pl$1 = $pl$0;$prefix$1 = $prefix$0;
    label = 77;
   }
   else if ((label|0) == 82) {
    label = 0;
    $325 = (_memchr($a$1,0,$p$0)|0);
    $326 = ($325|0)==(0|0);
    $327 = $325;
    $328 = $a$1;
    $329 = (($327) - ($328))|0;
    $330 = (($a$1) + ($p$0)|0);
    $z$1 = $326 ? $330 : $325;
    $p$3 = $326 ? $p$0 : $329;
    $a$2 = $a$1;$fl$6 = $180;$p$5 = $p$3;$pl$2 = 0;$prefix$2 = 3360;$z$2 = $z$1;
   }
   else if ((label|0) == 86) {
    label = 0;
    $338 = HEAP32[$arg>>2]|0;
    $i$0108 = 0;$l$1107 = 0;$ws$0109 = $338;
    while(1) {
     $339 = HEAP32[$ws$0109>>2]|0;
     $340 = ($339|0)==(0);
     if ($340) {
      $i$0$lcssa = $i$0108;$l$2 = $l$1107;
      break;
     }
     $341 = (_wctomb($mb,$339)|0);
     $342 = ($341|0)<(0);
     $343 = (($p$4195) - ($i$0108))|0;
     $344 = ($341>>>0)>($343>>>0);
     $or$cond20 = $342 | $344;
     if ($or$cond20) {
      $i$0$lcssa = $i$0108;$l$2 = $341;
      break;
     }
     $345 = ((($ws$0109)) + 4|0);
     $346 = (($341) + ($i$0108))|0;
     $347 = ($p$4195>>>0)>($346>>>0);
     if ($347) {
      $i$0108 = $346;$l$1107 = $341;$ws$0109 = $345;
     } else {
      $i$0$lcssa = $346;$l$2 = $341;
      break;
     }
    }
    $348 = ($l$2|0)<(0);
    if ($348) {
     $$0 = -1;
     break L1;
    }
    _pad($f,32,$w$1,$i$0$lcssa,$fl$1$);
    $349 = ($i$0$lcssa|0)==(0);
    if ($349) {
     $i$0$lcssa197 = 0;
     label = 98;
    } else {
     $350 = HEAP32[$arg>>2]|0;
     $i$1119 = 0;$ws$1120 = $350;
     while(1) {
      $351 = HEAP32[$ws$1120>>2]|0;
      $352 = ($351|0)==(0);
      if ($352) {
       $i$0$lcssa197 = $i$0$lcssa;
       label = 98;
       break L313;
      }
      $353 = ((($ws$1120)) + 4|0);
      $354 = (_wctomb($mb,$351)|0);
      $355 = (($354) + ($i$1119))|0;
      $356 = ($355|0)>($i$0$lcssa|0);
      if ($356) {
       $i$0$lcssa197 = $i$0$lcssa;
       label = 98;
       break L313;
      }
      $357 = HEAP32[$f>>2]|0;
      $358 = $357 & 32;
      $359 = ($358|0)==(0);
      if ($359) {
       (___fwritex($mb,$354,$f)|0);
      }
      $360 = ($355>>>0)<($i$0$lcssa>>>0);
      if ($360) {
       $i$1119 = $355;$ws$1120 = $353;
      } else {
       $i$0$lcssa197 = $i$0$lcssa;
       label = 98;
       break;
      }
     }
    }
   }
  } while(0);
  if ((label|0) == 98) {
   label = 0;
   $361 = $fl$1$ ^ 8192;
   _pad($f,32,$w$1,$i$0$lcssa197,$361);
   $362 = ($w$1|0)>($i$0$lcssa197|0);
   $363 = $362 ? $w$1 : $i$0$lcssa197;
   $22 = $$lcssa328;$cnt$0 = $cnt$1;$l$0 = $363;$l10n$0 = $l10n$3;
   continue;
  }
  if ((label|0) == 77) {
   label = 0;
   $294 = ($p$2|0)>(-1);
   $295 = $fl$4 & -65537;
   $$fl$4 = $294 ? $295 : $fl$4;
   $296 = $arg;
   $297 = $296;
   $298 = HEAP32[$297>>2]|0;
   $299 = (($296) + 4)|0;
   $300 = $299;
   $301 = HEAP32[$300>>2]|0;
   $302 = ($298|0)!=(0);
   $303 = ($301|0)!=(0);
   $304 = $302 | $303;
   $305 = ($p$2|0)!=(0);
   $or$cond = $305 | $304;
   if ($or$cond) {
    $306 = $a$0;
    $307 = (($2) - ($306))|0;
    $308 = $304&1;
    $309 = $308 ^ 1;
    $310 = (($309) + ($307))|0;
    $311 = ($p$2|0)>($310|0);
    $p$2$ = $311 ? $p$2 : $310;
    $a$2 = $a$0;$fl$6 = $$fl$4;$p$5 = $p$2$;$pl$2 = $pl$1;$prefix$2 = $prefix$1;$z$2 = $1;
   } else {
    $a$2 = $1;$fl$6 = $$fl$4;$p$5 = 0;$pl$2 = $pl$1;$prefix$2 = $prefix$1;$z$2 = $1;
   }
  }
  $774 = $z$2;
  $775 = $a$2;
  $776 = (($774) - ($775))|0;
  $777 = ($p$5|0)<($776|0);
  $$p$5 = $777 ? $776 : $p$5;
  $778 = (($pl$2) + ($$p$5))|0;
  $779 = ($w$1|0)<($778|0);
  $w$2 = $779 ? $778 : $w$1;
  _pad($f,32,$w$2,$778,$fl$6);
  $780 = HEAP32[$f>>2]|0;
  $781 = $780 & 32;
  $782 = ($781|0)==(0);
  if ($782) {
   (___fwritex($prefix$2,$pl$2,$f)|0);
  }
  $783 = $fl$6 ^ 65536;
  _pad($f,48,$w$2,$778,$783);
  _pad($f,48,$$p$5,$776,0);
  $784 = HEAP32[$f>>2]|0;
  $785 = $784 & 32;
  $786 = ($785|0)==(0);
  if ($786) {
   (___fwritex($a$2,$776,$f)|0);
  }
  $787 = $fl$6 ^ 8192;
  _pad($f,32,$w$2,$778,$787);
  $22 = $$lcssa328;$cnt$0 = $cnt$1;$l$0 = $w$2;$l10n$0 = $l10n$3;
 }
 L348: do {
  if ((label|0) == 245) {
   $788 = ($f|0)==(0|0);
   if ($788) {
    $789 = ($l10n$0$lcssa|0)==(0);
    if ($789) {
     $$0 = 0;
    } else {
     $i$295 = 1;
     while(1) {
      $790 = (($nl_type) + ($i$295<<2)|0);
      $791 = HEAP32[$790>>2]|0;
      $792 = ($791|0)==(0);
      if ($792) {
       $i$295$lcssa = $i$295;
       break;
      }
      $794 = (($nl_arg) + ($i$295<<3)|0);
      _pop_arg208($794,$791,$ap);
      $795 = (($i$295) + 1)|0;
      $796 = ($795|0)<(10);
      if ($796) {
       $i$295 = $795;
      } else {
       $$0 = 1;
       break L348;
      }
     }
     $793 = ($i$295$lcssa|0)<(10);
     if ($793) {
      $i$393 = $i$295$lcssa;
      while(1) {
       $799 = (($nl_type) + ($i$393<<2)|0);
       $800 = HEAP32[$799>>2]|0;
       $801 = ($800|0)==(0);
       $797 = (($i$393) + 1)|0;
       if (!($801)) {
        $$0 = -1;
        break L348;
       }
       $798 = ($797|0)<(10);
       if ($798) {
        $i$393 = $797;
       } else {
        $$0 = 1;
        break;
       }
      }
     } else {
      $$0 = 1;
     }
    }
   } else {
    $$0 = $cnt$1$lcssa;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function _pop_arg208($arg,$type,$ap) {
 $arg = $arg|0;
 $type = $type|0;
 $ap = $ap|0;
 var $$mask = 0, $$mask1 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0.0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0.0;
 var $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $arglist_current = 0, $arglist_current11 = 0, $arglist_current14 = 0, $arglist_current17 = 0;
 var $arglist_current2 = 0, $arglist_current20 = 0, $arglist_current23 = 0, $arglist_current26 = 0, $arglist_current5 = 0, $arglist_current8 = 0, $arglist_next = 0, $arglist_next12 = 0, $arglist_next15 = 0, $arglist_next18 = 0, $arglist_next21 = 0, $arglist_next24 = 0, $arglist_next27 = 0, $arglist_next3 = 0, $arglist_next6 = 0, $arglist_next9 = 0, $expanded = 0, $expanded28 = 0, $expanded30 = 0, $expanded31 = 0;
 var $expanded32 = 0, $expanded34 = 0, $expanded35 = 0, $expanded37 = 0, $expanded38 = 0, $expanded39 = 0, $expanded41 = 0, $expanded42 = 0, $expanded44 = 0, $expanded45 = 0, $expanded46 = 0, $expanded48 = 0, $expanded49 = 0, $expanded51 = 0, $expanded52 = 0, $expanded53 = 0, $expanded55 = 0, $expanded56 = 0, $expanded58 = 0, $expanded59 = 0;
 var $expanded60 = 0, $expanded62 = 0, $expanded63 = 0, $expanded65 = 0, $expanded66 = 0, $expanded67 = 0, $expanded69 = 0, $expanded70 = 0, $expanded72 = 0, $expanded73 = 0, $expanded74 = 0, $expanded76 = 0, $expanded77 = 0, $expanded79 = 0, $expanded80 = 0, $expanded81 = 0, $expanded83 = 0, $expanded84 = 0, $expanded86 = 0, $expanded87 = 0;
 var $expanded88 = 0, $expanded90 = 0, $expanded91 = 0, $expanded93 = 0, $expanded94 = 0, $expanded95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($type>>>0)>(20);
 L1: do {
  if (!($0)) {
   do {
    switch ($type|0) {
    case 9:  {
     $arglist_current = HEAP32[$ap>>2]|0;
     $1 = $arglist_current;
     $2 = ((0) + 4|0);
     $expanded28 = $2;
     $expanded = (($expanded28) - 1)|0;
     $3 = (($1) + ($expanded))|0;
     $4 = ((0) + 4|0);
     $expanded32 = $4;
     $expanded31 = (($expanded32) - 1)|0;
     $expanded30 = $expanded31 ^ -1;
     $5 = $3 & $expanded30;
     $6 = $5;
     $7 = HEAP32[$6>>2]|0;
     $arglist_next = ((($6)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next;
     HEAP32[$arg>>2] = $7;
     break L1;
     break;
    }
    case 10:  {
     $arglist_current2 = HEAP32[$ap>>2]|0;
     $8 = $arglist_current2;
     $9 = ((0) + 4|0);
     $expanded35 = $9;
     $expanded34 = (($expanded35) - 1)|0;
     $10 = (($8) + ($expanded34))|0;
     $11 = ((0) + 4|0);
     $expanded39 = $11;
     $expanded38 = (($expanded39) - 1)|0;
     $expanded37 = $expanded38 ^ -1;
     $12 = $10 & $expanded37;
     $13 = $12;
     $14 = HEAP32[$13>>2]|0;
     $arglist_next3 = ((($13)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next3;
     $15 = ($14|0)<(0);
     $16 = $15 << 31 >> 31;
     $17 = $arg;
     $18 = $17;
     HEAP32[$18>>2] = $14;
     $19 = (($17) + 4)|0;
     $20 = $19;
     HEAP32[$20>>2] = $16;
     break L1;
     break;
    }
    case 11:  {
     $arglist_current5 = HEAP32[$ap>>2]|0;
     $21 = $arglist_current5;
     $22 = ((0) + 4|0);
     $expanded42 = $22;
     $expanded41 = (($expanded42) - 1)|0;
     $23 = (($21) + ($expanded41))|0;
     $24 = ((0) + 4|0);
     $expanded46 = $24;
     $expanded45 = (($expanded46) - 1)|0;
     $expanded44 = $expanded45 ^ -1;
     $25 = $23 & $expanded44;
     $26 = $25;
     $27 = HEAP32[$26>>2]|0;
     $arglist_next6 = ((($26)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next6;
     $28 = $arg;
     $29 = $28;
     HEAP32[$29>>2] = $27;
     $30 = (($28) + 4)|0;
     $31 = $30;
     HEAP32[$31>>2] = 0;
     break L1;
     break;
    }
    case 12:  {
     $arglist_current8 = HEAP32[$ap>>2]|0;
     $32 = $arglist_current8;
     $33 = ((0) + 8|0);
     $expanded49 = $33;
     $expanded48 = (($expanded49) - 1)|0;
     $34 = (($32) + ($expanded48))|0;
     $35 = ((0) + 8|0);
     $expanded53 = $35;
     $expanded52 = (($expanded53) - 1)|0;
     $expanded51 = $expanded52 ^ -1;
     $36 = $34 & $expanded51;
     $37 = $36;
     $38 = $37;
     $39 = $38;
     $40 = HEAP32[$39>>2]|0;
     $41 = (($38) + 4)|0;
     $42 = $41;
     $43 = HEAP32[$42>>2]|0;
     $arglist_next9 = ((($37)) + 8|0);
     HEAP32[$ap>>2] = $arglist_next9;
     $44 = $arg;
     $45 = $44;
     HEAP32[$45>>2] = $40;
     $46 = (($44) + 4)|0;
     $47 = $46;
     HEAP32[$47>>2] = $43;
     break L1;
     break;
    }
    case 13:  {
     $arglist_current11 = HEAP32[$ap>>2]|0;
     $48 = $arglist_current11;
     $49 = ((0) + 4|0);
     $expanded56 = $49;
     $expanded55 = (($expanded56) - 1)|0;
     $50 = (($48) + ($expanded55))|0;
     $51 = ((0) + 4|0);
     $expanded60 = $51;
     $expanded59 = (($expanded60) - 1)|0;
     $expanded58 = $expanded59 ^ -1;
     $52 = $50 & $expanded58;
     $53 = $52;
     $54 = HEAP32[$53>>2]|0;
     $arglist_next12 = ((($53)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next12;
     $55 = $54&65535;
     $56 = $55 << 16 >> 16;
     $57 = ($56|0)<(0);
     $58 = $57 << 31 >> 31;
     $59 = $arg;
     $60 = $59;
     HEAP32[$60>>2] = $56;
     $61 = (($59) + 4)|0;
     $62 = $61;
     HEAP32[$62>>2] = $58;
     break L1;
     break;
    }
    case 14:  {
     $arglist_current14 = HEAP32[$ap>>2]|0;
     $63 = $arglist_current14;
     $64 = ((0) + 4|0);
     $expanded63 = $64;
     $expanded62 = (($expanded63) - 1)|0;
     $65 = (($63) + ($expanded62))|0;
     $66 = ((0) + 4|0);
     $expanded67 = $66;
     $expanded66 = (($expanded67) - 1)|0;
     $expanded65 = $expanded66 ^ -1;
     $67 = $65 & $expanded65;
     $68 = $67;
     $69 = HEAP32[$68>>2]|0;
     $arglist_next15 = ((($68)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next15;
     $$mask1 = $69 & 65535;
     $70 = $arg;
     $71 = $70;
     HEAP32[$71>>2] = $$mask1;
     $72 = (($70) + 4)|0;
     $73 = $72;
     HEAP32[$73>>2] = 0;
     break L1;
     break;
    }
    case 15:  {
     $arglist_current17 = HEAP32[$ap>>2]|0;
     $74 = $arglist_current17;
     $75 = ((0) + 4|0);
     $expanded70 = $75;
     $expanded69 = (($expanded70) - 1)|0;
     $76 = (($74) + ($expanded69))|0;
     $77 = ((0) + 4|0);
     $expanded74 = $77;
     $expanded73 = (($expanded74) - 1)|0;
     $expanded72 = $expanded73 ^ -1;
     $78 = $76 & $expanded72;
     $79 = $78;
     $80 = HEAP32[$79>>2]|0;
     $arglist_next18 = ((($79)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next18;
     $81 = $80&255;
     $82 = $81 << 24 >> 24;
     $83 = ($82|0)<(0);
     $84 = $83 << 31 >> 31;
     $85 = $arg;
     $86 = $85;
     HEAP32[$86>>2] = $82;
     $87 = (($85) + 4)|0;
     $88 = $87;
     HEAP32[$88>>2] = $84;
     break L1;
     break;
    }
    case 16:  {
     $arglist_current20 = HEAP32[$ap>>2]|0;
     $89 = $arglist_current20;
     $90 = ((0) + 4|0);
     $expanded77 = $90;
     $expanded76 = (($expanded77) - 1)|0;
     $91 = (($89) + ($expanded76))|0;
     $92 = ((0) + 4|0);
     $expanded81 = $92;
     $expanded80 = (($expanded81) - 1)|0;
     $expanded79 = $expanded80 ^ -1;
     $93 = $91 & $expanded79;
     $94 = $93;
     $95 = HEAP32[$94>>2]|0;
     $arglist_next21 = ((($94)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next21;
     $$mask = $95 & 255;
     $96 = $arg;
     $97 = $96;
     HEAP32[$97>>2] = $$mask;
     $98 = (($96) + 4)|0;
     $99 = $98;
     HEAP32[$99>>2] = 0;
     break L1;
     break;
    }
    case 17:  {
     $arglist_current23 = HEAP32[$ap>>2]|0;
     $100 = $arglist_current23;
     $101 = ((0) + 8|0);
     $expanded84 = $101;
     $expanded83 = (($expanded84) - 1)|0;
     $102 = (($100) + ($expanded83))|0;
     $103 = ((0) + 8|0);
     $expanded88 = $103;
     $expanded87 = (($expanded88) - 1)|0;
     $expanded86 = $expanded87 ^ -1;
     $104 = $102 & $expanded86;
     $105 = $104;
     $106 = +HEAPF64[$105>>3];
     $arglist_next24 = ((($105)) + 8|0);
     HEAP32[$ap>>2] = $arglist_next24;
     HEAPF64[$arg>>3] = $106;
     break L1;
     break;
    }
    case 18:  {
     $arglist_current26 = HEAP32[$ap>>2]|0;
     $107 = $arglist_current26;
     $108 = ((0) + 8|0);
     $expanded91 = $108;
     $expanded90 = (($expanded91) - 1)|0;
     $109 = (($107) + ($expanded90))|0;
     $110 = ((0) + 8|0);
     $expanded95 = $110;
     $expanded94 = (($expanded95) - 1)|0;
     $expanded93 = $expanded94 ^ -1;
     $111 = $109 & $expanded93;
     $112 = $111;
     $113 = +HEAPF64[$112>>3];
     $arglist_next27 = ((($112)) + 8|0);
     HEAP32[$ap>>2] = $arglist_next27;
     HEAPF64[$arg>>3] = $113;
     break L1;
     break;
    }
    default: {
     break L1;
    }
    }
   } while(0);
  }
 } while(0);
 return;
}
function _fmt_u($0,$1,$s) {
 $0 = $0|0;
 $1 = $1|0;
 $s = $s|0;
 var $$0$lcssa = 0, $$01$lcssa$off0 = 0, $$05 = 0, $$1$lcssa = 0, $$12 = 0, $$lcssa20 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $y$03 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1>>>0)>(0);
 $3 = ($0>>>0)>(4294967295);
 $4 = ($1|0)==(0);
 $5 = $4 & $3;
 $6 = $2 | $5;
 if ($6) {
  $$05 = $s;$7 = $0;$8 = $1;
  while(1) {
   $9 = (___uremdi3(($7|0),($8|0),10,0)|0);
   $10 = tempRet0;
   $11 = $9 | 48;
   $12 = $11&255;
   $13 = ((($$05)) + -1|0);
   HEAP8[$13>>0] = $12;
   $14 = (___udivdi3(($7|0),($8|0),10,0)|0);
   $15 = tempRet0;
   $16 = ($8>>>0)>(9);
   $17 = ($7>>>0)>(4294967295);
   $18 = ($8|0)==(9);
   $19 = $18 & $17;
   $20 = $16 | $19;
   if ($20) {
    $$05 = $13;$7 = $14;$8 = $15;
   } else {
    $$lcssa20 = $13;$28 = $14;$29 = $15;
    break;
   }
  }
  $$0$lcssa = $$lcssa20;$$01$lcssa$off0 = $28;
 } else {
  $$0$lcssa = $s;$$01$lcssa$off0 = $0;
 }
 $21 = ($$01$lcssa$off0|0)==(0);
 if ($21) {
  $$1$lcssa = $$0$lcssa;
 } else {
  $$12 = $$0$lcssa;$y$03 = $$01$lcssa$off0;
  while(1) {
   $22 = (($y$03>>>0) % 10)&-1;
   $23 = $22 | 48;
   $24 = $23&255;
   $25 = ((($$12)) + -1|0);
   HEAP8[$25>>0] = $24;
   $26 = (($y$03>>>0) / 10)&-1;
   $27 = ($y$03>>>0)<(10);
   if ($27) {
    $$1$lcssa = $25;
    break;
   } else {
    $$12 = $25;$y$03 = $26;
   }
  }
 }
 return ($$1$lcssa|0);
}
function _pad($f,$c,$w,$l,$fl) {
 $f = $f|0;
 $c = $c|0;
 $w = $w|0;
 $l = $l|0;
 $fl = $fl|0;
 var $$0$lcssa6 = 0, $$02 = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $or$cond = 0, $pad = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $pad = sp;
 $0 = $fl & 73728;
 $1 = ($0|0)==(0);
 $2 = ($w|0)>($l|0);
 $or$cond = $2 & $1;
 do {
  if ($or$cond) {
   $3 = (($w) - ($l))|0;
   $4 = ($3>>>0)>(256);
   $5 = $4 ? 256 : $3;
   _memset(($pad|0),($c|0),($5|0))|0;
   $6 = ($3>>>0)>(255);
   $7 = HEAP32[$f>>2]|0;
   $8 = $7 & 32;
   $9 = ($8|0)==(0);
   if ($6) {
    $10 = (($w) - ($l))|0;
    $$02 = $3;$17 = $7;$18 = $9;
    while(1) {
     if ($18) {
      (___fwritex($pad,256,$f)|0);
      $$pre = HEAP32[$f>>2]|0;
      $14 = $$pre;
     } else {
      $14 = $17;
     }
     $11 = (($$02) + -256)|0;
     $12 = ($11>>>0)>(255);
     $13 = $14 & 32;
     $15 = ($13|0)==(0);
     if ($12) {
      $$02 = $11;$17 = $14;$18 = $15;
     } else {
      break;
     }
    }
    $16 = $10 & 255;
    if ($15) {
     $$0$lcssa6 = $16;
    } else {
     break;
    }
   } else {
    if ($9) {
     $$0$lcssa6 = $3;
    } else {
     break;
    }
   }
   (___fwritex($pad,$$0$lcssa6,$f)|0);
  }
 } while(0);
 STACKTOP = sp;return;
}
function _sn_write($f,$s,$l) {
 $f = $f|0;
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $l$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($f)) + 20|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $1;
 $5 = $3;
 $6 = (($4) - ($5))|0;
 $7 = ($6>>>0)>($l>>>0);
 $l$ = $7 ? $l : $6;
 _memcpy(($3|0),($s|0),($l$|0))|0;
 $8 = HEAP32[$2>>2]|0;
 $9 = (($8) + ($l$)|0);
 HEAP32[$2>>2] = $9;
 return ($l|0);
}
function _malloc($bytes) {
 $bytes = $bytes|0;
 var $$3$i = 0, $$lcssa = 0, $$lcssa211 = 0, $$lcssa215 = 0, $$lcssa216 = 0, $$lcssa217 = 0, $$lcssa219 = 0, $$lcssa222 = 0, $$lcssa224 = 0, $$lcssa226 = 0, $$lcssa228 = 0, $$lcssa230 = 0, $$lcssa232 = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i22$i = 0, $$pre$i25 = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i23$iZ2D = 0;
 var $$pre$phi$i26Z2D = 0, $$pre$phi$iZ2D = 0, $$pre$phi58$i$iZ2D = 0, $$pre$phiZ2D = 0, $$pre105 = 0, $$pre106 = 0, $$pre14$i$i = 0, $$pre43$i = 0, $$pre56$i$i = 0, $$pre57$i$i = 0, $$pre8$i = 0, $$rsize$0$i = 0, $$rsize$3$i = 0, $$sum = 0, $$sum$i$i = 0, $$sum$i$i$i = 0, $$sum$i13$i = 0, $$sum$i14$i = 0, $$sum$i17$i = 0, $$sum$i19$i = 0;
 var $$sum$i2334 = 0, $$sum$i32 = 0, $$sum$i35 = 0, $$sum1 = 0, $$sum1$i = 0, $$sum1$i$i = 0, $$sum1$i15$i = 0, $$sum1$i20$i = 0, $$sum1$i24 = 0, $$sum10 = 0, $$sum10$i = 0, $$sum10$i$i = 0, $$sum11$i = 0, $$sum11$i$i = 0, $$sum1112 = 0, $$sum112$i = 0, $$sum113$i = 0, $$sum114$i = 0, $$sum115$i = 0, $$sum116$i = 0;
 var $$sum117$i = 0, $$sum118$i = 0, $$sum119$i = 0, $$sum12$i = 0, $$sum12$i$i = 0, $$sum120$i = 0, $$sum121$i = 0, $$sum122$i = 0, $$sum123$i = 0, $$sum124$i = 0, $$sum125$i = 0, $$sum13$i = 0, $$sum13$i$i = 0, $$sum14$i$i = 0, $$sum15$i = 0, $$sum15$i$i = 0, $$sum16$i = 0, $$sum16$i$i = 0, $$sum17$i = 0, $$sum17$i$i = 0;
 var $$sum18$i = 0, $$sum1819$i$i = 0, $$sum2 = 0, $$sum2$i = 0, $$sum2$i$i = 0, $$sum2$i$i$i = 0, $$sum2$i16$i = 0, $$sum2$i18$i = 0, $$sum2$i21$i = 0, $$sum20$i$i = 0, $$sum21$i$i = 0, $$sum22$i$i = 0, $$sum23$i$i = 0, $$sum24$i$i = 0, $$sum25$i$i = 0, $$sum27$i$i = 0, $$sum28$i$i = 0, $$sum29$i$i = 0, $$sum3$i = 0, $$sum3$i27 = 0;
 var $$sum30$i$i = 0, $$sum3132$i$i = 0, $$sum34$i$i = 0, $$sum3536$i$i = 0, $$sum3738$i$i = 0, $$sum39$i$i = 0, $$sum4 = 0, $$sum4$i = 0, $$sum4$i$i = 0, $$sum4$i28 = 0, $$sum40$i$i = 0, $$sum41$i$i = 0, $$sum42$i$i = 0, $$sum5$i = 0, $$sum5$i$i = 0, $$sum56 = 0, $$sum6$i = 0, $$sum67$i$i = 0, $$sum7$i = 0, $$sum8$i = 0;
 var $$sum9 = 0, $$sum9$i = 0, $$sum9$i$i = 0, $$tsize$1$i = 0, $$v$0$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0;
 var $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0;
 var $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0;
 var $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0;
 var $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;
 var $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0;
 var $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0;
 var $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0;
 var $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0;
 var $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0;
 var $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0;
 var $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0;
 var $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0;
 var $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0;
 var $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0;
 var $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0;
 var $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0;
 var $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0;
 var $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0;
 var $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0;
 var $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0;
 var $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0;
 var $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0;
 var $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0;
 var $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0;
 var $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0;
 var $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0;
 var $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0;
 var $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0;
 var $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0;
 var $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0;
 var $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0;
 var $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0;
 var $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0;
 var $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0;
 var $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0;
 var $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0;
 var $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0;
 var $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0;
 var $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0;
 var $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0;
 var $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0;
 var $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0;
 var $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0;
 var $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0;
 var $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0;
 var $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0;
 var $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0;
 var $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0;
 var $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0;
 var $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0;
 var $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0;
 var $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0;
 var $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $F$0$i$i = 0, $F1$0$i = 0, $F4$0 = 0, $F4$0$i$i = 0;
 var $F5$0$i = 0, $I1$0$i$i = 0, $I7$0$i = 0, $I7$0$i$i = 0, $K12$029$i = 0, $K2$07$i$i = 0, $K8$051$i$i = 0, $R$0$i = 0, $R$0$i$i = 0, $R$0$i$i$lcssa = 0, $R$0$i$lcssa = 0, $R$0$i18 = 0, $R$0$i18$lcssa = 0, $R$1$i = 0, $R$1$i$i = 0, $R$1$i20 = 0, $RP$0$i = 0, $RP$0$i$i = 0, $RP$0$i$i$lcssa = 0, $RP$0$i$lcssa = 0;
 var $RP$0$i17 = 0, $RP$0$i17$lcssa = 0, $T$0$lcssa$i = 0, $T$0$lcssa$i$i = 0, $T$0$lcssa$i25$i = 0, $T$028$i = 0, $T$028$i$lcssa = 0, $T$050$i$i = 0, $T$050$i$i$lcssa = 0, $T$06$i$i = 0, $T$06$i$i$lcssa = 0, $br$0$ph$i = 0, $cond$i = 0, $cond$i$i = 0, $cond$i21 = 0, $exitcond$i$i = 0, $i$02$i$i = 0, $idx$0$i = 0, $mem$0 = 0, $nb$0 = 0;
 var $not$$i = 0, $not$$i$i = 0, $not$$i26$i = 0, $oldfirst$0$i$i = 0, $or$cond$i = 0, $or$cond$i30 = 0, $or$cond1$i = 0, $or$cond19$i = 0, $or$cond2$i = 0, $or$cond3$i = 0, $or$cond5$i = 0, $or$cond57$i = 0, $or$cond6$i = 0, $or$cond8$i = 0, $or$cond9$i = 0, $qsize$0$i$i = 0, $rsize$0$i = 0, $rsize$0$i$lcssa = 0, $rsize$0$i15 = 0, $rsize$1$i = 0;
 var $rsize$2$i = 0, $rsize$3$lcssa$i = 0, $rsize$331$i = 0, $rst$0$i = 0, $rst$1$i = 0, $sizebits$0$i = 0, $sp$0$i$i = 0, $sp$0$i$i$i = 0, $sp$084$i = 0, $sp$084$i$lcssa = 0, $sp$183$i = 0, $sp$183$i$lcssa = 0, $ssize$0$$i = 0, $ssize$0$i = 0, $ssize$1$ph$i = 0, $ssize$2$i = 0, $t$0$i = 0, $t$0$i14 = 0, $t$1$i = 0, $t$2$ph$i = 0;
 var $t$2$v$3$i = 0, $t$230$i = 0, $tbase$255$i = 0, $tsize$0$ph$i = 0, $tsize$0323944$i = 0, $tsize$1$i = 0, $tsize$254$i = 0, $v$0$i = 0, $v$0$i$lcssa = 0, $v$0$i16 = 0, $v$1$i = 0, $v$2$i = 0, $v$3$lcssa$i = 0, $v$3$ph$i = 0, $v$332$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($bytes>>>0)<(245);
 do {
  if ($0) {
   $1 = ($bytes>>>0)<(11);
   $2 = (($bytes) + 11)|0;
   $3 = $2 & -8;
   $4 = $1 ? 16 : $3;
   $5 = $4 >>> 3;
   $6 = HEAP32[292>>2]|0;
   $7 = $6 >>> $5;
   $8 = $7 & 3;
   $9 = ($8|0)==(0);
   if (!($9)) {
    $10 = $7 & 1;
    $11 = $10 ^ 1;
    $12 = (($11) + ($5))|0;
    $13 = $12 << 1;
    $14 = (332 + ($13<<2)|0);
    $$sum10 = (($13) + 2)|0;
    $15 = (332 + ($$sum10<<2)|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = ((($16)) + 8|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ($14|0)==($18|0);
    do {
     if ($19) {
      $20 = 1 << $12;
      $21 = $20 ^ -1;
      $22 = $6 & $21;
      HEAP32[292>>2] = $22;
     } else {
      $23 = HEAP32[(308)>>2]|0;
      $24 = ($18>>>0)<($23>>>0);
      if ($24) {
       _abort();
       // unreachable;
      }
      $25 = ((($18)) + 12|0);
      $26 = HEAP32[$25>>2]|0;
      $27 = ($26|0)==($16|0);
      if ($27) {
       HEAP32[$25>>2] = $14;
       HEAP32[$15>>2] = $18;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $28 = $12 << 3;
    $29 = $28 | 3;
    $30 = ((($16)) + 4|0);
    HEAP32[$30>>2] = $29;
    $$sum1112 = $28 | 4;
    $31 = (($16) + ($$sum1112)|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = $32 | 1;
    HEAP32[$31>>2] = $33;
    $mem$0 = $17;
    return ($mem$0|0);
   }
   $34 = HEAP32[(300)>>2]|0;
   $35 = ($4>>>0)>($34>>>0);
   if ($35) {
    $36 = ($7|0)==(0);
    if (!($36)) {
     $37 = $7 << $5;
     $38 = 2 << $5;
     $39 = (0 - ($38))|0;
     $40 = $38 | $39;
     $41 = $37 & $40;
     $42 = (0 - ($41))|0;
     $43 = $41 & $42;
     $44 = (($43) + -1)|0;
     $45 = $44 >>> 12;
     $46 = $45 & 16;
     $47 = $44 >>> $46;
     $48 = $47 >>> 5;
     $49 = $48 & 8;
     $50 = $49 | $46;
     $51 = $47 >>> $49;
     $52 = $51 >>> 2;
     $53 = $52 & 4;
     $54 = $50 | $53;
     $55 = $51 >>> $53;
     $56 = $55 >>> 1;
     $57 = $56 & 2;
     $58 = $54 | $57;
     $59 = $55 >>> $57;
     $60 = $59 >>> 1;
     $61 = $60 & 1;
     $62 = $58 | $61;
     $63 = $59 >>> $61;
     $64 = (($62) + ($63))|0;
     $65 = $64 << 1;
     $66 = (332 + ($65<<2)|0);
     $$sum4 = (($65) + 2)|0;
     $67 = (332 + ($$sum4<<2)|0);
     $68 = HEAP32[$67>>2]|0;
     $69 = ((($68)) + 8|0);
     $70 = HEAP32[$69>>2]|0;
     $71 = ($66|0)==($70|0);
     do {
      if ($71) {
       $72 = 1 << $64;
       $73 = $72 ^ -1;
       $74 = $6 & $73;
       HEAP32[292>>2] = $74;
       $88 = $34;
      } else {
       $75 = HEAP32[(308)>>2]|0;
       $76 = ($70>>>0)<($75>>>0);
       if ($76) {
        _abort();
        // unreachable;
       }
       $77 = ((($70)) + 12|0);
       $78 = HEAP32[$77>>2]|0;
       $79 = ($78|0)==($68|0);
       if ($79) {
        HEAP32[$77>>2] = $66;
        HEAP32[$67>>2] = $70;
        $$pre = HEAP32[(300)>>2]|0;
        $88 = $$pre;
        break;
       } else {
        _abort();
        // unreachable;
       }
      }
     } while(0);
     $80 = $64 << 3;
     $81 = (($80) - ($4))|0;
     $82 = $4 | 3;
     $83 = ((($68)) + 4|0);
     HEAP32[$83>>2] = $82;
     $84 = (($68) + ($4)|0);
     $85 = $81 | 1;
     $$sum56 = $4 | 4;
     $86 = (($68) + ($$sum56)|0);
     HEAP32[$86>>2] = $85;
     $87 = (($68) + ($80)|0);
     HEAP32[$87>>2] = $81;
     $89 = ($88|0)==(0);
     if (!($89)) {
      $90 = HEAP32[(312)>>2]|0;
      $91 = $88 >>> 3;
      $92 = $91 << 1;
      $93 = (332 + ($92<<2)|0);
      $94 = HEAP32[292>>2]|0;
      $95 = 1 << $91;
      $96 = $94 & $95;
      $97 = ($96|0)==(0);
      if ($97) {
       $98 = $94 | $95;
       HEAP32[292>>2] = $98;
       $$pre105 = (($92) + 2)|0;
       $$pre106 = (332 + ($$pre105<<2)|0);
       $$pre$phiZ2D = $$pre106;$F4$0 = $93;
      } else {
       $$sum9 = (($92) + 2)|0;
       $99 = (332 + ($$sum9<<2)|0);
       $100 = HEAP32[$99>>2]|0;
       $101 = HEAP32[(308)>>2]|0;
       $102 = ($100>>>0)<($101>>>0);
       if ($102) {
        _abort();
        // unreachable;
       } else {
        $$pre$phiZ2D = $99;$F4$0 = $100;
       }
      }
      HEAP32[$$pre$phiZ2D>>2] = $90;
      $103 = ((($F4$0)) + 12|0);
      HEAP32[$103>>2] = $90;
      $104 = ((($90)) + 8|0);
      HEAP32[$104>>2] = $F4$0;
      $105 = ((($90)) + 12|0);
      HEAP32[$105>>2] = $93;
     }
     HEAP32[(300)>>2] = $81;
     HEAP32[(312)>>2] = $84;
     $mem$0 = $69;
     return ($mem$0|0);
    }
    $106 = HEAP32[(296)>>2]|0;
    $107 = ($106|0)==(0);
    if ($107) {
     $nb$0 = $4;
    } else {
     $108 = (0 - ($106))|0;
     $109 = $106 & $108;
     $110 = (($109) + -1)|0;
     $111 = $110 >>> 12;
     $112 = $111 & 16;
     $113 = $110 >>> $112;
     $114 = $113 >>> 5;
     $115 = $114 & 8;
     $116 = $115 | $112;
     $117 = $113 >>> $115;
     $118 = $117 >>> 2;
     $119 = $118 & 4;
     $120 = $116 | $119;
     $121 = $117 >>> $119;
     $122 = $121 >>> 1;
     $123 = $122 & 2;
     $124 = $120 | $123;
     $125 = $121 >>> $123;
     $126 = $125 >>> 1;
     $127 = $126 & 1;
     $128 = $124 | $127;
     $129 = $125 >>> $127;
     $130 = (($128) + ($129))|0;
     $131 = (596 + ($130<<2)|0);
     $132 = HEAP32[$131>>2]|0;
     $133 = ((($132)) + 4|0);
     $134 = HEAP32[$133>>2]|0;
     $135 = $134 & -8;
     $136 = (($135) - ($4))|0;
     $rsize$0$i = $136;$t$0$i = $132;$v$0$i = $132;
     while(1) {
      $137 = ((($t$0$i)) + 16|0);
      $138 = HEAP32[$137>>2]|0;
      $139 = ($138|0)==(0|0);
      if ($139) {
       $140 = ((($t$0$i)) + 20|0);
       $141 = HEAP32[$140>>2]|0;
       $142 = ($141|0)==(0|0);
       if ($142) {
        $rsize$0$i$lcssa = $rsize$0$i;$v$0$i$lcssa = $v$0$i;
        break;
       } else {
        $144 = $141;
       }
      } else {
       $144 = $138;
      }
      $143 = ((($144)) + 4|0);
      $145 = HEAP32[$143>>2]|0;
      $146 = $145 & -8;
      $147 = (($146) - ($4))|0;
      $148 = ($147>>>0)<($rsize$0$i>>>0);
      $$rsize$0$i = $148 ? $147 : $rsize$0$i;
      $$v$0$i = $148 ? $144 : $v$0$i;
      $rsize$0$i = $$rsize$0$i;$t$0$i = $144;$v$0$i = $$v$0$i;
     }
     $149 = HEAP32[(308)>>2]|0;
     $150 = ($v$0$i$lcssa>>>0)<($149>>>0);
     if ($150) {
      _abort();
      // unreachable;
     }
     $151 = (($v$0$i$lcssa) + ($4)|0);
     $152 = ($v$0$i$lcssa>>>0)<($151>>>0);
     if (!($152)) {
      _abort();
      // unreachable;
     }
     $153 = ((($v$0$i$lcssa)) + 24|0);
     $154 = HEAP32[$153>>2]|0;
     $155 = ((($v$0$i$lcssa)) + 12|0);
     $156 = HEAP32[$155>>2]|0;
     $157 = ($156|0)==($v$0$i$lcssa|0);
     do {
      if ($157) {
       $167 = ((($v$0$i$lcssa)) + 20|0);
       $168 = HEAP32[$167>>2]|0;
       $169 = ($168|0)==(0|0);
       if ($169) {
        $170 = ((($v$0$i$lcssa)) + 16|0);
        $171 = HEAP32[$170>>2]|0;
        $172 = ($171|0)==(0|0);
        if ($172) {
         $R$1$i = 0;
         break;
        } else {
         $R$0$i = $171;$RP$0$i = $170;
        }
       } else {
        $R$0$i = $168;$RP$0$i = $167;
       }
       while(1) {
        $173 = ((($R$0$i)) + 20|0);
        $174 = HEAP32[$173>>2]|0;
        $175 = ($174|0)==(0|0);
        if (!($175)) {
         $R$0$i = $174;$RP$0$i = $173;
         continue;
        }
        $176 = ((($R$0$i)) + 16|0);
        $177 = HEAP32[$176>>2]|0;
        $178 = ($177|0)==(0|0);
        if ($178) {
         $R$0$i$lcssa = $R$0$i;$RP$0$i$lcssa = $RP$0$i;
         break;
        } else {
         $R$0$i = $177;$RP$0$i = $176;
        }
       }
       $179 = ($RP$0$i$lcssa>>>0)<($149>>>0);
       if ($179) {
        _abort();
        // unreachable;
       } else {
        HEAP32[$RP$0$i$lcssa>>2] = 0;
        $R$1$i = $R$0$i$lcssa;
        break;
       }
      } else {
       $158 = ((($v$0$i$lcssa)) + 8|0);
       $159 = HEAP32[$158>>2]|0;
       $160 = ($159>>>0)<($149>>>0);
       if ($160) {
        _abort();
        // unreachable;
       }
       $161 = ((($159)) + 12|0);
       $162 = HEAP32[$161>>2]|0;
       $163 = ($162|0)==($v$0$i$lcssa|0);
       if (!($163)) {
        _abort();
        // unreachable;
       }
       $164 = ((($156)) + 8|0);
       $165 = HEAP32[$164>>2]|0;
       $166 = ($165|0)==($v$0$i$lcssa|0);
       if ($166) {
        HEAP32[$161>>2] = $156;
        HEAP32[$164>>2] = $159;
        $R$1$i = $156;
        break;
       } else {
        _abort();
        // unreachable;
       }
      }
     } while(0);
     $180 = ($154|0)==(0|0);
     do {
      if (!($180)) {
       $181 = ((($v$0$i$lcssa)) + 28|0);
       $182 = HEAP32[$181>>2]|0;
       $183 = (596 + ($182<<2)|0);
       $184 = HEAP32[$183>>2]|0;
       $185 = ($v$0$i$lcssa|0)==($184|0);
       if ($185) {
        HEAP32[$183>>2] = $R$1$i;
        $cond$i = ($R$1$i|0)==(0|0);
        if ($cond$i) {
         $186 = 1 << $182;
         $187 = $186 ^ -1;
         $188 = HEAP32[(296)>>2]|0;
         $189 = $188 & $187;
         HEAP32[(296)>>2] = $189;
         break;
        }
       } else {
        $190 = HEAP32[(308)>>2]|0;
        $191 = ($154>>>0)<($190>>>0);
        if ($191) {
         _abort();
         // unreachable;
        }
        $192 = ((($154)) + 16|0);
        $193 = HEAP32[$192>>2]|0;
        $194 = ($193|0)==($v$0$i$lcssa|0);
        if ($194) {
         HEAP32[$192>>2] = $R$1$i;
        } else {
         $195 = ((($154)) + 20|0);
         HEAP32[$195>>2] = $R$1$i;
        }
        $196 = ($R$1$i|0)==(0|0);
        if ($196) {
         break;
        }
       }
       $197 = HEAP32[(308)>>2]|0;
       $198 = ($R$1$i>>>0)<($197>>>0);
       if ($198) {
        _abort();
        // unreachable;
       }
       $199 = ((($R$1$i)) + 24|0);
       HEAP32[$199>>2] = $154;
       $200 = ((($v$0$i$lcssa)) + 16|0);
       $201 = HEAP32[$200>>2]|0;
       $202 = ($201|0)==(0|0);
       do {
        if (!($202)) {
         $203 = ($201>>>0)<($197>>>0);
         if ($203) {
          _abort();
          // unreachable;
         } else {
          $204 = ((($R$1$i)) + 16|0);
          HEAP32[$204>>2] = $201;
          $205 = ((($201)) + 24|0);
          HEAP32[$205>>2] = $R$1$i;
          break;
         }
        }
       } while(0);
       $206 = ((($v$0$i$lcssa)) + 20|0);
       $207 = HEAP32[$206>>2]|0;
       $208 = ($207|0)==(0|0);
       if (!($208)) {
        $209 = HEAP32[(308)>>2]|0;
        $210 = ($207>>>0)<($209>>>0);
        if ($210) {
         _abort();
         // unreachable;
        } else {
         $211 = ((($R$1$i)) + 20|0);
         HEAP32[$211>>2] = $207;
         $212 = ((($207)) + 24|0);
         HEAP32[$212>>2] = $R$1$i;
         break;
        }
       }
      }
     } while(0);
     $213 = ($rsize$0$i$lcssa>>>0)<(16);
     if ($213) {
      $214 = (($rsize$0$i$lcssa) + ($4))|0;
      $215 = $214 | 3;
      $216 = ((($v$0$i$lcssa)) + 4|0);
      HEAP32[$216>>2] = $215;
      $$sum4$i = (($214) + 4)|0;
      $217 = (($v$0$i$lcssa) + ($$sum4$i)|0);
      $218 = HEAP32[$217>>2]|0;
      $219 = $218 | 1;
      HEAP32[$217>>2] = $219;
     } else {
      $220 = $4 | 3;
      $221 = ((($v$0$i$lcssa)) + 4|0);
      HEAP32[$221>>2] = $220;
      $222 = $rsize$0$i$lcssa | 1;
      $$sum$i35 = $4 | 4;
      $223 = (($v$0$i$lcssa) + ($$sum$i35)|0);
      HEAP32[$223>>2] = $222;
      $$sum1$i = (($rsize$0$i$lcssa) + ($4))|0;
      $224 = (($v$0$i$lcssa) + ($$sum1$i)|0);
      HEAP32[$224>>2] = $rsize$0$i$lcssa;
      $225 = HEAP32[(300)>>2]|0;
      $226 = ($225|0)==(0);
      if (!($226)) {
       $227 = HEAP32[(312)>>2]|0;
       $228 = $225 >>> 3;
       $229 = $228 << 1;
       $230 = (332 + ($229<<2)|0);
       $231 = HEAP32[292>>2]|0;
       $232 = 1 << $228;
       $233 = $231 & $232;
       $234 = ($233|0)==(0);
       if ($234) {
        $235 = $231 | $232;
        HEAP32[292>>2] = $235;
        $$pre$i = (($229) + 2)|0;
        $$pre8$i = (332 + ($$pre$i<<2)|0);
        $$pre$phi$iZ2D = $$pre8$i;$F1$0$i = $230;
       } else {
        $$sum3$i = (($229) + 2)|0;
        $236 = (332 + ($$sum3$i<<2)|0);
        $237 = HEAP32[$236>>2]|0;
        $238 = HEAP32[(308)>>2]|0;
        $239 = ($237>>>0)<($238>>>0);
        if ($239) {
         _abort();
         // unreachable;
        } else {
         $$pre$phi$iZ2D = $236;$F1$0$i = $237;
        }
       }
       HEAP32[$$pre$phi$iZ2D>>2] = $227;
       $240 = ((($F1$0$i)) + 12|0);
       HEAP32[$240>>2] = $227;
       $241 = ((($227)) + 8|0);
       HEAP32[$241>>2] = $F1$0$i;
       $242 = ((($227)) + 12|0);
       HEAP32[$242>>2] = $230;
      }
      HEAP32[(300)>>2] = $rsize$0$i$lcssa;
      HEAP32[(312)>>2] = $151;
     }
     $243 = ((($v$0$i$lcssa)) + 8|0);
     $mem$0 = $243;
     return ($mem$0|0);
    }
   } else {
    $nb$0 = $4;
   }
  } else {
   $244 = ($bytes>>>0)>(4294967231);
   if ($244) {
    $nb$0 = -1;
   } else {
    $245 = (($bytes) + 11)|0;
    $246 = $245 & -8;
    $247 = HEAP32[(296)>>2]|0;
    $248 = ($247|0)==(0);
    if ($248) {
     $nb$0 = $246;
    } else {
     $249 = (0 - ($246))|0;
     $250 = $245 >>> 8;
     $251 = ($250|0)==(0);
     if ($251) {
      $idx$0$i = 0;
     } else {
      $252 = ($246>>>0)>(16777215);
      if ($252) {
       $idx$0$i = 31;
      } else {
       $253 = (($250) + 1048320)|0;
       $254 = $253 >>> 16;
       $255 = $254 & 8;
       $256 = $250 << $255;
       $257 = (($256) + 520192)|0;
       $258 = $257 >>> 16;
       $259 = $258 & 4;
       $260 = $259 | $255;
       $261 = $256 << $259;
       $262 = (($261) + 245760)|0;
       $263 = $262 >>> 16;
       $264 = $263 & 2;
       $265 = $260 | $264;
       $266 = (14 - ($265))|0;
       $267 = $261 << $264;
       $268 = $267 >>> 15;
       $269 = (($266) + ($268))|0;
       $270 = $269 << 1;
       $271 = (($269) + 7)|0;
       $272 = $246 >>> $271;
       $273 = $272 & 1;
       $274 = $273 | $270;
       $idx$0$i = $274;
      }
     }
     $275 = (596 + ($idx$0$i<<2)|0);
     $276 = HEAP32[$275>>2]|0;
     $277 = ($276|0)==(0|0);
     L123: do {
      if ($277) {
       $rsize$2$i = $249;$t$1$i = 0;$v$2$i = 0;
       label = 86;
      } else {
       $278 = ($idx$0$i|0)==(31);
       $279 = $idx$0$i >>> 1;
       $280 = (25 - ($279))|0;
       $281 = $278 ? 0 : $280;
       $282 = $246 << $281;
       $rsize$0$i15 = $249;$rst$0$i = 0;$sizebits$0$i = $282;$t$0$i14 = $276;$v$0$i16 = 0;
       while(1) {
        $283 = ((($t$0$i14)) + 4|0);
        $284 = HEAP32[$283>>2]|0;
        $285 = $284 & -8;
        $286 = (($285) - ($246))|0;
        $287 = ($286>>>0)<($rsize$0$i15>>>0);
        if ($287) {
         $288 = ($285|0)==($246|0);
         if ($288) {
          $rsize$331$i = $286;$t$230$i = $t$0$i14;$v$332$i = $t$0$i14;
          label = 90;
          break L123;
         } else {
          $rsize$1$i = $286;$v$1$i = $t$0$i14;
         }
        } else {
         $rsize$1$i = $rsize$0$i15;$v$1$i = $v$0$i16;
        }
        $289 = ((($t$0$i14)) + 20|0);
        $290 = HEAP32[$289>>2]|0;
        $291 = $sizebits$0$i >>> 31;
        $292 = (((($t$0$i14)) + 16|0) + ($291<<2)|0);
        $293 = HEAP32[$292>>2]|0;
        $294 = ($290|0)==(0|0);
        $295 = ($290|0)==($293|0);
        $or$cond19$i = $294 | $295;
        $rst$1$i = $or$cond19$i ? $rst$0$i : $290;
        $296 = ($293|0)==(0|0);
        $297 = $sizebits$0$i << 1;
        if ($296) {
         $rsize$2$i = $rsize$1$i;$t$1$i = $rst$1$i;$v$2$i = $v$1$i;
         label = 86;
         break;
        } else {
         $rsize$0$i15 = $rsize$1$i;$rst$0$i = $rst$1$i;$sizebits$0$i = $297;$t$0$i14 = $293;$v$0$i16 = $v$1$i;
        }
       }
      }
     } while(0);
     if ((label|0) == 86) {
      $298 = ($t$1$i|0)==(0|0);
      $299 = ($v$2$i|0)==(0|0);
      $or$cond$i = $298 & $299;
      if ($or$cond$i) {
       $300 = 2 << $idx$0$i;
       $301 = (0 - ($300))|0;
       $302 = $300 | $301;
       $303 = $247 & $302;
       $304 = ($303|0)==(0);
       if ($304) {
        $nb$0 = $246;
        break;
       }
       $305 = (0 - ($303))|0;
       $306 = $303 & $305;
       $307 = (($306) + -1)|0;
       $308 = $307 >>> 12;
       $309 = $308 & 16;
       $310 = $307 >>> $309;
       $311 = $310 >>> 5;
       $312 = $311 & 8;
       $313 = $312 | $309;
       $314 = $310 >>> $312;
       $315 = $314 >>> 2;
       $316 = $315 & 4;
       $317 = $313 | $316;
       $318 = $314 >>> $316;
       $319 = $318 >>> 1;
       $320 = $319 & 2;
       $321 = $317 | $320;
       $322 = $318 >>> $320;
       $323 = $322 >>> 1;
       $324 = $323 & 1;
       $325 = $321 | $324;
       $326 = $322 >>> $324;
       $327 = (($325) + ($326))|0;
       $328 = (596 + ($327<<2)|0);
       $329 = HEAP32[$328>>2]|0;
       $t$2$ph$i = $329;$v$3$ph$i = 0;
      } else {
       $t$2$ph$i = $t$1$i;$v$3$ph$i = $v$2$i;
      }
      $330 = ($t$2$ph$i|0)==(0|0);
      if ($330) {
       $rsize$3$lcssa$i = $rsize$2$i;$v$3$lcssa$i = $v$3$ph$i;
      } else {
       $rsize$331$i = $rsize$2$i;$t$230$i = $t$2$ph$i;$v$332$i = $v$3$ph$i;
       label = 90;
      }
     }
     if ((label|0) == 90) {
      while(1) {
       label = 0;
       $331 = ((($t$230$i)) + 4|0);
       $332 = HEAP32[$331>>2]|0;
       $333 = $332 & -8;
       $334 = (($333) - ($246))|0;
       $335 = ($334>>>0)<($rsize$331$i>>>0);
       $$rsize$3$i = $335 ? $334 : $rsize$331$i;
       $t$2$v$3$i = $335 ? $t$230$i : $v$332$i;
       $336 = ((($t$230$i)) + 16|0);
       $337 = HEAP32[$336>>2]|0;
       $338 = ($337|0)==(0|0);
       if (!($338)) {
        $rsize$331$i = $$rsize$3$i;$t$230$i = $337;$v$332$i = $t$2$v$3$i;
        label = 90;
        continue;
       }
       $339 = ((($t$230$i)) + 20|0);
       $340 = HEAP32[$339>>2]|0;
       $341 = ($340|0)==(0|0);
       if ($341) {
        $rsize$3$lcssa$i = $$rsize$3$i;$v$3$lcssa$i = $t$2$v$3$i;
        break;
       } else {
        $rsize$331$i = $$rsize$3$i;$t$230$i = $340;$v$332$i = $t$2$v$3$i;
        label = 90;
       }
      }
     }
     $342 = ($v$3$lcssa$i|0)==(0|0);
     if ($342) {
      $nb$0 = $246;
     } else {
      $343 = HEAP32[(300)>>2]|0;
      $344 = (($343) - ($246))|0;
      $345 = ($rsize$3$lcssa$i>>>0)<($344>>>0);
      if ($345) {
       $346 = HEAP32[(308)>>2]|0;
       $347 = ($v$3$lcssa$i>>>0)<($346>>>0);
       if ($347) {
        _abort();
        // unreachable;
       }
       $348 = (($v$3$lcssa$i) + ($246)|0);
       $349 = ($v$3$lcssa$i>>>0)<($348>>>0);
       if (!($349)) {
        _abort();
        // unreachable;
       }
       $350 = ((($v$3$lcssa$i)) + 24|0);
       $351 = HEAP32[$350>>2]|0;
       $352 = ((($v$3$lcssa$i)) + 12|0);
       $353 = HEAP32[$352>>2]|0;
       $354 = ($353|0)==($v$3$lcssa$i|0);
       do {
        if ($354) {
         $364 = ((($v$3$lcssa$i)) + 20|0);
         $365 = HEAP32[$364>>2]|0;
         $366 = ($365|0)==(0|0);
         if ($366) {
          $367 = ((($v$3$lcssa$i)) + 16|0);
          $368 = HEAP32[$367>>2]|0;
          $369 = ($368|0)==(0|0);
          if ($369) {
           $R$1$i20 = 0;
           break;
          } else {
           $R$0$i18 = $368;$RP$0$i17 = $367;
          }
         } else {
          $R$0$i18 = $365;$RP$0$i17 = $364;
         }
         while(1) {
          $370 = ((($R$0$i18)) + 20|0);
          $371 = HEAP32[$370>>2]|0;
          $372 = ($371|0)==(0|0);
          if (!($372)) {
           $R$0$i18 = $371;$RP$0$i17 = $370;
           continue;
          }
          $373 = ((($R$0$i18)) + 16|0);
          $374 = HEAP32[$373>>2]|0;
          $375 = ($374|0)==(0|0);
          if ($375) {
           $R$0$i18$lcssa = $R$0$i18;$RP$0$i17$lcssa = $RP$0$i17;
           break;
          } else {
           $R$0$i18 = $374;$RP$0$i17 = $373;
          }
         }
         $376 = ($RP$0$i17$lcssa>>>0)<($346>>>0);
         if ($376) {
          _abort();
          // unreachable;
         } else {
          HEAP32[$RP$0$i17$lcssa>>2] = 0;
          $R$1$i20 = $R$0$i18$lcssa;
          break;
         }
        } else {
         $355 = ((($v$3$lcssa$i)) + 8|0);
         $356 = HEAP32[$355>>2]|0;
         $357 = ($356>>>0)<($346>>>0);
         if ($357) {
          _abort();
          // unreachable;
         }
         $358 = ((($356)) + 12|0);
         $359 = HEAP32[$358>>2]|0;
         $360 = ($359|0)==($v$3$lcssa$i|0);
         if (!($360)) {
          _abort();
          // unreachable;
         }
         $361 = ((($353)) + 8|0);
         $362 = HEAP32[$361>>2]|0;
         $363 = ($362|0)==($v$3$lcssa$i|0);
         if ($363) {
          HEAP32[$358>>2] = $353;
          HEAP32[$361>>2] = $356;
          $R$1$i20 = $353;
          break;
         } else {
          _abort();
          // unreachable;
         }
        }
       } while(0);
       $377 = ($351|0)==(0|0);
       do {
        if (!($377)) {
         $378 = ((($v$3$lcssa$i)) + 28|0);
         $379 = HEAP32[$378>>2]|0;
         $380 = (596 + ($379<<2)|0);
         $381 = HEAP32[$380>>2]|0;
         $382 = ($v$3$lcssa$i|0)==($381|0);
         if ($382) {
          HEAP32[$380>>2] = $R$1$i20;
          $cond$i21 = ($R$1$i20|0)==(0|0);
          if ($cond$i21) {
           $383 = 1 << $379;
           $384 = $383 ^ -1;
           $385 = HEAP32[(296)>>2]|0;
           $386 = $385 & $384;
           HEAP32[(296)>>2] = $386;
           break;
          }
         } else {
          $387 = HEAP32[(308)>>2]|0;
          $388 = ($351>>>0)<($387>>>0);
          if ($388) {
           _abort();
           // unreachable;
          }
          $389 = ((($351)) + 16|0);
          $390 = HEAP32[$389>>2]|0;
          $391 = ($390|0)==($v$3$lcssa$i|0);
          if ($391) {
           HEAP32[$389>>2] = $R$1$i20;
          } else {
           $392 = ((($351)) + 20|0);
           HEAP32[$392>>2] = $R$1$i20;
          }
          $393 = ($R$1$i20|0)==(0|0);
          if ($393) {
           break;
          }
         }
         $394 = HEAP32[(308)>>2]|0;
         $395 = ($R$1$i20>>>0)<($394>>>0);
         if ($395) {
          _abort();
          // unreachable;
         }
         $396 = ((($R$1$i20)) + 24|0);
         HEAP32[$396>>2] = $351;
         $397 = ((($v$3$lcssa$i)) + 16|0);
         $398 = HEAP32[$397>>2]|0;
         $399 = ($398|0)==(0|0);
         do {
          if (!($399)) {
           $400 = ($398>>>0)<($394>>>0);
           if ($400) {
            _abort();
            // unreachable;
           } else {
            $401 = ((($R$1$i20)) + 16|0);
            HEAP32[$401>>2] = $398;
            $402 = ((($398)) + 24|0);
            HEAP32[$402>>2] = $R$1$i20;
            break;
           }
          }
         } while(0);
         $403 = ((($v$3$lcssa$i)) + 20|0);
         $404 = HEAP32[$403>>2]|0;
         $405 = ($404|0)==(0|0);
         if (!($405)) {
          $406 = HEAP32[(308)>>2]|0;
          $407 = ($404>>>0)<($406>>>0);
          if ($407) {
           _abort();
           // unreachable;
          } else {
           $408 = ((($R$1$i20)) + 20|0);
           HEAP32[$408>>2] = $404;
           $409 = ((($404)) + 24|0);
           HEAP32[$409>>2] = $R$1$i20;
           break;
          }
         }
        }
       } while(0);
       $410 = ($rsize$3$lcssa$i>>>0)<(16);
       L199: do {
        if ($410) {
         $411 = (($rsize$3$lcssa$i) + ($246))|0;
         $412 = $411 | 3;
         $413 = ((($v$3$lcssa$i)) + 4|0);
         HEAP32[$413>>2] = $412;
         $$sum18$i = (($411) + 4)|0;
         $414 = (($v$3$lcssa$i) + ($$sum18$i)|0);
         $415 = HEAP32[$414>>2]|0;
         $416 = $415 | 1;
         HEAP32[$414>>2] = $416;
        } else {
         $417 = $246 | 3;
         $418 = ((($v$3$lcssa$i)) + 4|0);
         HEAP32[$418>>2] = $417;
         $419 = $rsize$3$lcssa$i | 1;
         $$sum$i2334 = $246 | 4;
         $420 = (($v$3$lcssa$i) + ($$sum$i2334)|0);
         HEAP32[$420>>2] = $419;
         $$sum1$i24 = (($rsize$3$lcssa$i) + ($246))|0;
         $421 = (($v$3$lcssa$i) + ($$sum1$i24)|0);
         HEAP32[$421>>2] = $rsize$3$lcssa$i;
         $422 = $rsize$3$lcssa$i >>> 3;
         $423 = ($rsize$3$lcssa$i>>>0)<(256);
         if ($423) {
          $424 = $422 << 1;
          $425 = (332 + ($424<<2)|0);
          $426 = HEAP32[292>>2]|0;
          $427 = 1 << $422;
          $428 = $426 & $427;
          $429 = ($428|0)==(0);
          if ($429) {
           $430 = $426 | $427;
           HEAP32[292>>2] = $430;
           $$pre$i25 = (($424) + 2)|0;
           $$pre43$i = (332 + ($$pre$i25<<2)|0);
           $$pre$phi$i26Z2D = $$pre43$i;$F5$0$i = $425;
          } else {
           $$sum17$i = (($424) + 2)|0;
           $431 = (332 + ($$sum17$i<<2)|0);
           $432 = HEAP32[$431>>2]|0;
           $433 = HEAP32[(308)>>2]|0;
           $434 = ($432>>>0)<($433>>>0);
           if ($434) {
            _abort();
            // unreachable;
           } else {
            $$pre$phi$i26Z2D = $431;$F5$0$i = $432;
           }
          }
          HEAP32[$$pre$phi$i26Z2D>>2] = $348;
          $435 = ((($F5$0$i)) + 12|0);
          HEAP32[$435>>2] = $348;
          $$sum15$i = (($246) + 8)|0;
          $436 = (($v$3$lcssa$i) + ($$sum15$i)|0);
          HEAP32[$436>>2] = $F5$0$i;
          $$sum16$i = (($246) + 12)|0;
          $437 = (($v$3$lcssa$i) + ($$sum16$i)|0);
          HEAP32[$437>>2] = $425;
          break;
         }
         $438 = $rsize$3$lcssa$i >>> 8;
         $439 = ($438|0)==(0);
         if ($439) {
          $I7$0$i = 0;
         } else {
          $440 = ($rsize$3$lcssa$i>>>0)>(16777215);
          if ($440) {
           $I7$0$i = 31;
          } else {
           $441 = (($438) + 1048320)|0;
           $442 = $441 >>> 16;
           $443 = $442 & 8;
           $444 = $438 << $443;
           $445 = (($444) + 520192)|0;
           $446 = $445 >>> 16;
           $447 = $446 & 4;
           $448 = $447 | $443;
           $449 = $444 << $447;
           $450 = (($449) + 245760)|0;
           $451 = $450 >>> 16;
           $452 = $451 & 2;
           $453 = $448 | $452;
           $454 = (14 - ($453))|0;
           $455 = $449 << $452;
           $456 = $455 >>> 15;
           $457 = (($454) + ($456))|0;
           $458 = $457 << 1;
           $459 = (($457) + 7)|0;
           $460 = $rsize$3$lcssa$i >>> $459;
           $461 = $460 & 1;
           $462 = $461 | $458;
           $I7$0$i = $462;
          }
         }
         $463 = (596 + ($I7$0$i<<2)|0);
         $$sum2$i = (($246) + 28)|0;
         $464 = (($v$3$lcssa$i) + ($$sum2$i)|0);
         HEAP32[$464>>2] = $I7$0$i;
         $$sum3$i27 = (($246) + 16)|0;
         $465 = (($v$3$lcssa$i) + ($$sum3$i27)|0);
         $$sum4$i28 = (($246) + 20)|0;
         $466 = (($v$3$lcssa$i) + ($$sum4$i28)|0);
         HEAP32[$466>>2] = 0;
         HEAP32[$465>>2] = 0;
         $467 = HEAP32[(296)>>2]|0;
         $468 = 1 << $I7$0$i;
         $469 = $467 & $468;
         $470 = ($469|0)==(0);
         if ($470) {
          $471 = $467 | $468;
          HEAP32[(296)>>2] = $471;
          HEAP32[$463>>2] = $348;
          $$sum5$i = (($246) + 24)|0;
          $472 = (($v$3$lcssa$i) + ($$sum5$i)|0);
          HEAP32[$472>>2] = $463;
          $$sum6$i = (($246) + 12)|0;
          $473 = (($v$3$lcssa$i) + ($$sum6$i)|0);
          HEAP32[$473>>2] = $348;
          $$sum7$i = (($246) + 8)|0;
          $474 = (($v$3$lcssa$i) + ($$sum7$i)|0);
          HEAP32[$474>>2] = $348;
          break;
         }
         $475 = HEAP32[$463>>2]|0;
         $476 = ((($475)) + 4|0);
         $477 = HEAP32[$476>>2]|0;
         $478 = $477 & -8;
         $479 = ($478|0)==($rsize$3$lcssa$i|0);
         L217: do {
          if ($479) {
           $T$0$lcssa$i = $475;
          } else {
           $480 = ($I7$0$i|0)==(31);
           $481 = $I7$0$i >>> 1;
           $482 = (25 - ($481))|0;
           $483 = $480 ? 0 : $482;
           $484 = $rsize$3$lcssa$i << $483;
           $K12$029$i = $484;$T$028$i = $475;
           while(1) {
            $491 = $K12$029$i >>> 31;
            $492 = (((($T$028$i)) + 16|0) + ($491<<2)|0);
            $487 = HEAP32[$492>>2]|0;
            $493 = ($487|0)==(0|0);
            if ($493) {
             $$lcssa232 = $492;$T$028$i$lcssa = $T$028$i;
             break;
            }
            $485 = $K12$029$i << 1;
            $486 = ((($487)) + 4|0);
            $488 = HEAP32[$486>>2]|0;
            $489 = $488 & -8;
            $490 = ($489|0)==($rsize$3$lcssa$i|0);
            if ($490) {
             $T$0$lcssa$i = $487;
             break L217;
            } else {
             $K12$029$i = $485;$T$028$i = $487;
            }
           }
           $494 = HEAP32[(308)>>2]|0;
           $495 = ($$lcssa232>>>0)<($494>>>0);
           if ($495) {
            _abort();
            // unreachable;
           } else {
            HEAP32[$$lcssa232>>2] = $348;
            $$sum11$i = (($246) + 24)|0;
            $496 = (($v$3$lcssa$i) + ($$sum11$i)|0);
            HEAP32[$496>>2] = $T$028$i$lcssa;
            $$sum12$i = (($246) + 12)|0;
            $497 = (($v$3$lcssa$i) + ($$sum12$i)|0);
            HEAP32[$497>>2] = $348;
            $$sum13$i = (($246) + 8)|0;
            $498 = (($v$3$lcssa$i) + ($$sum13$i)|0);
            HEAP32[$498>>2] = $348;
            break L199;
           }
          }
         } while(0);
         $499 = ((($T$0$lcssa$i)) + 8|0);
         $500 = HEAP32[$499>>2]|0;
         $501 = HEAP32[(308)>>2]|0;
         $502 = ($500>>>0)>=($501>>>0);
         $not$$i = ($T$0$lcssa$i>>>0)>=($501>>>0);
         $503 = $502 & $not$$i;
         if ($503) {
          $504 = ((($500)) + 12|0);
          HEAP32[$504>>2] = $348;
          HEAP32[$499>>2] = $348;
          $$sum8$i = (($246) + 8)|0;
          $505 = (($v$3$lcssa$i) + ($$sum8$i)|0);
          HEAP32[$505>>2] = $500;
          $$sum9$i = (($246) + 12)|0;
          $506 = (($v$3$lcssa$i) + ($$sum9$i)|0);
          HEAP32[$506>>2] = $T$0$lcssa$i;
          $$sum10$i = (($246) + 24)|0;
          $507 = (($v$3$lcssa$i) + ($$sum10$i)|0);
          HEAP32[$507>>2] = 0;
          break;
         } else {
          _abort();
          // unreachable;
         }
        }
       } while(0);
       $508 = ((($v$3$lcssa$i)) + 8|0);
       $mem$0 = $508;
       return ($mem$0|0);
      } else {
       $nb$0 = $246;
      }
     }
    }
   }
  }
 } while(0);
 $509 = HEAP32[(300)>>2]|0;
 $510 = ($509>>>0)<($nb$0>>>0);
 if (!($510)) {
  $511 = (($509) - ($nb$0))|0;
  $512 = HEAP32[(312)>>2]|0;
  $513 = ($511>>>0)>(15);
  if ($513) {
   $514 = (($512) + ($nb$0)|0);
   HEAP32[(312)>>2] = $514;
   HEAP32[(300)>>2] = $511;
   $515 = $511 | 1;
   $$sum2 = (($nb$0) + 4)|0;
   $516 = (($512) + ($$sum2)|0);
   HEAP32[$516>>2] = $515;
   $517 = (($512) + ($509)|0);
   HEAP32[$517>>2] = $511;
   $518 = $nb$0 | 3;
   $519 = ((($512)) + 4|0);
   HEAP32[$519>>2] = $518;
  } else {
   HEAP32[(300)>>2] = 0;
   HEAP32[(312)>>2] = 0;
   $520 = $509 | 3;
   $521 = ((($512)) + 4|0);
   HEAP32[$521>>2] = $520;
   $$sum1 = (($509) + 4)|0;
   $522 = (($512) + ($$sum1)|0);
   $523 = HEAP32[$522>>2]|0;
   $524 = $523 | 1;
   HEAP32[$522>>2] = $524;
  }
  $525 = ((($512)) + 8|0);
  $mem$0 = $525;
  return ($mem$0|0);
 }
 $526 = HEAP32[(304)>>2]|0;
 $527 = ($526>>>0)>($nb$0>>>0);
 if ($527) {
  $528 = (($526) - ($nb$0))|0;
  HEAP32[(304)>>2] = $528;
  $529 = HEAP32[(316)>>2]|0;
  $530 = (($529) + ($nb$0)|0);
  HEAP32[(316)>>2] = $530;
  $531 = $528 | 1;
  $$sum = (($nb$0) + 4)|0;
  $532 = (($529) + ($$sum)|0);
  HEAP32[$532>>2] = $531;
  $533 = $nb$0 | 3;
  $534 = ((($529)) + 4|0);
  HEAP32[$534>>2] = $533;
  $535 = ((($529)) + 8|0);
  $mem$0 = $535;
  return ($mem$0|0);
 }
 $536 = HEAP32[764>>2]|0;
 $537 = ($536|0)==(0);
 do {
  if ($537) {
   $538 = (_sysconf(30)|0);
   $539 = (($538) + -1)|0;
   $540 = $539 & $538;
   $541 = ($540|0)==(0);
   if ($541) {
    HEAP32[(772)>>2] = $538;
    HEAP32[(768)>>2] = $538;
    HEAP32[(776)>>2] = -1;
    HEAP32[(780)>>2] = -1;
    HEAP32[(784)>>2] = 0;
    HEAP32[(736)>>2] = 0;
    $542 = (_time((0|0))|0);
    $543 = $542 & -16;
    $544 = $543 ^ 1431655768;
    HEAP32[764>>2] = $544;
    break;
   } else {
    _abort();
    // unreachable;
   }
  }
 } while(0);
 $545 = (($nb$0) + 48)|0;
 $546 = HEAP32[(772)>>2]|0;
 $547 = (($nb$0) + 47)|0;
 $548 = (($546) + ($547))|0;
 $549 = (0 - ($546))|0;
 $550 = $548 & $549;
 $551 = ($550>>>0)>($nb$0>>>0);
 if (!($551)) {
  $mem$0 = 0;
  return ($mem$0|0);
 }
 $552 = HEAP32[(732)>>2]|0;
 $553 = ($552|0)==(0);
 if (!($553)) {
  $554 = HEAP32[(724)>>2]|0;
  $555 = (($554) + ($550))|0;
  $556 = ($555>>>0)<=($554>>>0);
  $557 = ($555>>>0)>($552>>>0);
  $or$cond1$i = $556 | $557;
  if ($or$cond1$i) {
   $mem$0 = 0;
   return ($mem$0|0);
  }
 }
 $558 = HEAP32[(736)>>2]|0;
 $559 = $558 & 4;
 $560 = ($559|0)==(0);
 L258: do {
  if ($560) {
   $561 = HEAP32[(316)>>2]|0;
   $562 = ($561|0)==(0|0);
   L260: do {
    if ($562) {
     label = 174;
    } else {
     $sp$0$i$i = (740);
     while(1) {
      $563 = HEAP32[$sp$0$i$i>>2]|0;
      $564 = ($563>>>0)>($561>>>0);
      if (!($564)) {
       $565 = ((($sp$0$i$i)) + 4|0);
       $566 = HEAP32[$565>>2]|0;
       $567 = (($563) + ($566)|0);
       $568 = ($567>>>0)>($561>>>0);
       if ($568) {
        $$lcssa228 = $sp$0$i$i;$$lcssa230 = $565;
        break;
       }
      }
      $569 = ((($sp$0$i$i)) + 8|0);
      $570 = HEAP32[$569>>2]|0;
      $571 = ($570|0)==(0|0);
      if ($571) {
       label = 174;
       break L260;
      } else {
       $sp$0$i$i = $570;
      }
     }
     $594 = HEAP32[(304)>>2]|0;
     $595 = (($548) - ($594))|0;
     $596 = $595 & $549;
     $597 = ($596>>>0)<(2147483647);
     if ($597) {
      $598 = (_sbrk(($596|0))|0);
      $599 = HEAP32[$$lcssa228>>2]|0;
      $600 = HEAP32[$$lcssa230>>2]|0;
      $601 = (($599) + ($600)|0);
      $602 = ($598|0)==($601|0);
      $$3$i = $602 ? $596 : 0;
      if ($602) {
       $603 = ($598|0)==((-1)|0);
       if ($603) {
        $tsize$0323944$i = $$3$i;
       } else {
        $tbase$255$i = $598;$tsize$254$i = $$3$i;
        label = 194;
        break L258;
       }
      } else {
       $br$0$ph$i = $598;$ssize$1$ph$i = $596;$tsize$0$ph$i = $$3$i;
       label = 184;
      }
     } else {
      $tsize$0323944$i = 0;
     }
    }
   } while(0);
   do {
    if ((label|0) == 174) {
     $572 = (_sbrk(0)|0);
     $573 = ($572|0)==((-1)|0);
     if ($573) {
      $tsize$0323944$i = 0;
     } else {
      $574 = $572;
      $575 = HEAP32[(768)>>2]|0;
      $576 = (($575) + -1)|0;
      $577 = $576 & $574;
      $578 = ($577|0)==(0);
      if ($578) {
       $ssize$0$i = $550;
      } else {
       $579 = (($576) + ($574))|0;
       $580 = (0 - ($575))|0;
       $581 = $579 & $580;
       $582 = (($550) - ($574))|0;
       $583 = (($582) + ($581))|0;
       $ssize$0$i = $583;
      }
      $584 = HEAP32[(724)>>2]|0;
      $585 = (($584) + ($ssize$0$i))|0;
      $586 = ($ssize$0$i>>>0)>($nb$0>>>0);
      $587 = ($ssize$0$i>>>0)<(2147483647);
      $or$cond$i30 = $586 & $587;
      if ($or$cond$i30) {
       $588 = HEAP32[(732)>>2]|0;
       $589 = ($588|0)==(0);
       if (!($589)) {
        $590 = ($585>>>0)<=($584>>>0);
        $591 = ($585>>>0)>($588>>>0);
        $or$cond2$i = $590 | $591;
        if ($or$cond2$i) {
         $tsize$0323944$i = 0;
         break;
        }
       }
       $592 = (_sbrk(($ssize$0$i|0))|0);
       $593 = ($592|0)==($572|0);
       $ssize$0$$i = $593 ? $ssize$0$i : 0;
       if ($593) {
        $tbase$255$i = $572;$tsize$254$i = $ssize$0$$i;
        label = 194;
        break L258;
       } else {
        $br$0$ph$i = $592;$ssize$1$ph$i = $ssize$0$i;$tsize$0$ph$i = $ssize$0$$i;
        label = 184;
       }
      } else {
       $tsize$0323944$i = 0;
      }
     }
    }
   } while(0);
   L280: do {
    if ((label|0) == 184) {
     $604 = (0 - ($ssize$1$ph$i))|0;
     $605 = ($br$0$ph$i|0)!=((-1)|0);
     $606 = ($ssize$1$ph$i>>>0)<(2147483647);
     $or$cond5$i = $606 & $605;
     $607 = ($545>>>0)>($ssize$1$ph$i>>>0);
     $or$cond6$i = $607 & $or$cond5$i;
     do {
      if ($or$cond6$i) {
       $608 = HEAP32[(772)>>2]|0;
       $609 = (($547) - ($ssize$1$ph$i))|0;
       $610 = (($609) + ($608))|0;
       $611 = (0 - ($608))|0;
       $612 = $610 & $611;
       $613 = ($612>>>0)<(2147483647);
       if ($613) {
        $614 = (_sbrk(($612|0))|0);
        $615 = ($614|0)==((-1)|0);
        if ($615) {
         (_sbrk(($604|0))|0);
         $tsize$0323944$i = $tsize$0$ph$i;
         break L280;
        } else {
         $616 = (($612) + ($ssize$1$ph$i))|0;
         $ssize$2$i = $616;
         break;
        }
       } else {
        $ssize$2$i = $ssize$1$ph$i;
       }
      } else {
       $ssize$2$i = $ssize$1$ph$i;
      }
     } while(0);
     $617 = ($br$0$ph$i|0)==((-1)|0);
     if ($617) {
      $tsize$0323944$i = $tsize$0$ph$i;
     } else {
      $tbase$255$i = $br$0$ph$i;$tsize$254$i = $ssize$2$i;
      label = 194;
      break L258;
     }
    }
   } while(0);
   $618 = HEAP32[(736)>>2]|0;
   $619 = $618 | 4;
   HEAP32[(736)>>2] = $619;
   $tsize$1$i = $tsize$0323944$i;
   label = 191;
  } else {
   $tsize$1$i = 0;
   label = 191;
  }
 } while(0);
 if ((label|0) == 191) {
  $620 = ($550>>>0)<(2147483647);
  if ($620) {
   $621 = (_sbrk(($550|0))|0);
   $622 = (_sbrk(0)|0);
   $623 = ($621|0)!=((-1)|0);
   $624 = ($622|0)!=((-1)|0);
   $or$cond3$i = $623 & $624;
   $625 = ($621>>>0)<($622>>>0);
   $or$cond8$i = $625 & $or$cond3$i;
   if ($or$cond8$i) {
    $626 = $622;
    $627 = $621;
    $628 = (($626) - ($627))|0;
    $629 = (($nb$0) + 40)|0;
    $630 = ($628>>>0)>($629>>>0);
    $$tsize$1$i = $630 ? $628 : $tsize$1$i;
    if ($630) {
     $tbase$255$i = $621;$tsize$254$i = $$tsize$1$i;
     label = 194;
    }
   }
  }
 }
 if ((label|0) == 194) {
  $631 = HEAP32[(724)>>2]|0;
  $632 = (($631) + ($tsize$254$i))|0;
  HEAP32[(724)>>2] = $632;
  $633 = HEAP32[(728)>>2]|0;
  $634 = ($632>>>0)>($633>>>0);
  if ($634) {
   HEAP32[(728)>>2] = $632;
  }
  $635 = HEAP32[(316)>>2]|0;
  $636 = ($635|0)==(0|0);
  L299: do {
   if ($636) {
    $637 = HEAP32[(308)>>2]|0;
    $638 = ($637|0)==(0|0);
    $639 = ($tbase$255$i>>>0)<($637>>>0);
    $or$cond9$i = $638 | $639;
    if ($or$cond9$i) {
     HEAP32[(308)>>2] = $tbase$255$i;
    }
    HEAP32[(740)>>2] = $tbase$255$i;
    HEAP32[(744)>>2] = $tsize$254$i;
    HEAP32[(752)>>2] = 0;
    $640 = HEAP32[764>>2]|0;
    HEAP32[(328)>>2] = $640;
    HEAP32[(324)>>2] = -1;
    $i$02$i$i = 0;
    while(1) {
     $641 = $i$02$i$i << 1;
     $642 = (332 + ($641<<2)|0);
     $$sum$i$i = (($641) + 3)|0;
     $643 = (332 + ($$sum$i$i<<2)|0);
     HEAP32[$643>>2] = $642;
     $$sum1$i$i = (($641) + 2)|0;
     $644 = (332 + ($$sum1$i$i<<2)|0);
     HEAP32[$644>>2] = $642;
     $645 = (($i$02$i$i) + 1)|0;
     $exitcond$i$i = ($645|0)==(32);
     if ($exitcond$i$i) {
      break;
     } else {
      $i$02$i$i = $645;
     }
    }
    $646 = (($tsize$254$i) + -40)|0;
    $647 = ((($tbase$255$i)) + 8|0);
    $648 = $647;
    $649 = $648 & 7;
    $650 = ($649|0)==(0);
    $651 = (0 - ($648))|0;
    $652 = $651 & 7;
    $653 = $650 ? 0 : $652;
    $654 = (($tbase$255$i) + ($653)|0);
    $655 = (($646) - ($653))|0;
    HEAP32[(316)>>2] = $654;
    HEAP32[(304)>>2] = $655;
    $656 = $655 | 1;
    $$sum$i13$i = (($653) + 4)|0;
    $657 = (($tbase$255$i) + ($$sum$i13$i)|0);
    HEAP32[$657>>2] = $656;
    $$sum2$i$i = (($tsize$254$i) + -36)|0;
    $658 = (($tbase$255$i) + ($$sum2$i$i)|0);
    HEAP32[$658>>2] = 40;
    $659 = HEAP32[(780)>>2]|0;
    HEAP32[(320)>>2] = $659;
   } else {
    $sp$084$i = (740);
    while(1) {
     $660 = HEAP32[$sp$084$i>>2]|0;
     $661 = ((($sp$084$i)) + 4|0);
     $662 = HEAP32[$661>>2]|0;
     $663 = (($660) + ($662)|0);
     $664 = ($tbase$255$i|0)==($663|0);
     if ($664) {
      $$lcssa222 = $660;$$lcssa224 = $661;$$lcssa226 = $662;$sp$084$i$lcssa = $sp$084$i;
      label = 204;
      break;
     }
     $665 = ((($sp$084$i)) + 8|0);
     $666 = HEAP32[$665>>2]|0;
     $667 = ($666|0)==(0|0);
     if ($667) {
      break;
     } else {
      $sp$084$i = $666;
     }
    }
    if ((label|0) == 204) {
     $668 = ((($sp$084$i$lcssa)) + 12|0);
     $669 = HEAP32[$668>>2]|0;
     $670 = $669 & 8;
     $671 = ($670|0)==(0);
     if ($671) {
      $672 = ($635>>>0)>=($$lcssa222>>>0);
      $673 = ($635>>>0)<($tbase$255$i>>>0);
      $or$cond57$i = $673 & $672;
      if ($or$cond57$i) {
       $674 = (($$lcssa226) + ($tsize$254$i))|0;
       HEAP32[$$lcssa224>>2] = $674;
       $675 = HEAP32[(304)>>2]|0;
       $676 = (($675) + ($tsize$254$i))|0;
       $677 = ((($635)) + 8|0);
       $678 = $677;
       $679 = $678 & 7;
       $680 = ($679|0)==(0);
       $681 = (0 - ($678))|0;
       $682 = $681 & 7;
       $683 = $680 ? 0 : $682;
       $684 = (($635) + ($683)|0);
       $685 = (($676) - ($683))|0;
       HEAP32[(316)>>2] = $684;
       HEAP32[(304)>>2] = $685;
       $686 = $685 | 1;
       $$sum$i17$i = (($683) + 4)|0;
       $687 = (($635) + ($$sum$i17$i)|0);
       HEAP32[$687>>2] = $686;
       $$sum2$i18$i = (($676) + 4)|0;
       $688 = (($635) + ($$sum2$i18$i)|0);
       HEAP32[$688>>2] = 40;
       $689 = HEAP32[(780)>>2]|0;
       HEAP32[(320)>>2] = $689;
       break;
      }
     }
    }
    $690 = HEAP32[(308)>>2]|0;
    $691 = ($tbase$255$i>>>0)<($690>>>0);
    if ($691) {
     HEAP32[(308)>>2] = $tbase$255$i;
     $755 = $tbase$255$i;
    } else {
     $755 = $690;
    }
    $692 = (($tbase$255$i) + ($tsize$254$i)|0);
    $sp$183$i = (740);
    while(1) {
     $693 = HEAP32[$sp$183$i>>2]|0;
     $694 = ($693|0)==($692|0);
     if ($694) {
      $$lcssa219 = $sp$183$i;$sp$183$i$lcssa = $sp$183$i;
      label = 212;
      break;
     }
     $695 = ((($sp$183$i)) + 8|0);
     $696 = HEAP32[$695>>2]|0;
     $697 = ($696|0)==(0|0);
     if ($697) {
      $sp$0$i$i$i = (740);
      break;
     } else {
      $sp$183$i = $696;
     }
    }
    if ((label|0) == 212) {
     $698 = ((($sp$183$i$lcssa)) + 12|0);
     $699 = HEAP32[$698>>2]|0;
     $700 = $699 & 8;
     $701 = ($700|0)==(0);
     if ($701) {
      HEAP32[$$lcssa219>>2] = $tbase$255$i;
      $702 = ((($sp$183$i$lcssa)) + 4|0);
      $703 = HEAP32[$702>>2]|0;
      $704 = (($703) + ($tsize$254$i))|0;
      HEAP32[$702>>2] = $704;
      $705 = ((($tbase$255$i)) + 8|0);
      $706 = $705;
      $707 = $706 & 7;
      $708 = ($707|0)==(0);
      $709 = (0 - ($706))|0;
      $710 = $709 & 7;
      $711 = $708 ? 0 : $710;
      $712 = (($tbase$255$i) + ($711)|0);
      $$sum112$i = (($tsize$254$i) + 8)|0;
      $713 = (($tbase$255$i) + ($$sum112$i)|0);
      $714 = $713;
      $715 = $714 & 7;
      $716 = ($715|0)==(0);
      $717 = (0 - ($714))|0;
      $718 = $717 & 7;
      $719 = $716 ? 0 : $718;
      $$sum113$i = (($719) + ($tsize$254$i))|0;
      $720 = (($tbase$255$i) + ($$sum113$i)|0);
      $721 = $720;
      $722 = $712;
      $723 = (($721) - ($722))|0;
      $$sum$i19$i = (($711) + ($nb$0))|0;
      $724 = (($tbase$255$i) + ($$sum$i19$i)|0);
      $725 = (($723) - ($nb$0))|0;
      $726 = $nb$0 | 3;
      $$sum1$i20$i = (($711) + 4)|0;
      $727 = (($tbase$255$i) + ($$sum1$i20$i)|0);
      HEAP32[$727>>2] = $726;
      $728 = ($720|0)==($635|0);
      L324: do {
       if ($728) {
        $729 = HEAP32[(304)>>2]|0;
        $730 = (($729) + ($725))|0;
        HEAP32[(304)>>2] = $730;
        HEAP32[(316)>>2] = $724;
        $731 = $730 | 1;
        $$sum42$i$i = (($$sum$i19$i) + 4)|0;
        $732 = (($tbase$255$i) + ($$sum42$i$i)|0);
        HEAP32[$732>>2] = $731;
       } else {
        $733 = HEAP32[(312)>>2]|0;
        $734 = ($720|0)==($733|0);
        if ($734) {
         $735 = HEAP32[(300)>>2]|0;
         $736 = (($735) + ($725))|0;
         HEAP32[(300)>>2] = $736;
         HEAP32[(312)>>2] = $724;
         $737 = $736 | 1;
         $$sum40$i$i = (($$sum$i19$i) + 4)|0;
         $738 = (($tbase$255$i) + ($$sum40$i$i)|0);
         HEAP32[$738>>2] = $737;
         $$sum41$i$i = (($736) + ($$sum$i19$i))|0;
         $739 = (($tbase$255$i) + ($$sum41$i$i)|0);
         HEAP32[$739>>2] = $736;
         break;
        }
        $$sum2$i21$i = (($tsize$254$i) + 4)|0;
        $$sum114$i = (($$sum2$i21$i) + ($719))|0;
        $740 = (($tbase$255$i) + ($$sum114$i)|0);
        $741 = HEAP32[$740>>2]|0;
        $742 = $741 & 3;
        $743 = ($742|0)==(1);
        if ($743) {
         $744 = $741 & -8;
         $745 = $741 >>> 3;
         $746 = ($741>>>0)<(256);
         L332: do {
          if ($746) {
           $$sum3738$i$i = $719 | 8;
           $$sum124$i = (($$sum3738$i$i) + ($tsize$254$i))|0;
           $747 = (($tbase$255$i) + ($$sum124$i)|0);
           $748 = HEAP32[$747>>2]|0;
           $$sum39$i$i = (($tsize$254$i) + 12)|0;
           $$sum125$i = (($$sum39$i$i) + ($719))|0;
           $749 = (($tbase$255$i) + ($$sum125$i)|0);
           $750 = HEAP32[$749>>2]|0;
           $751 = $745 << 1;
           $752 = (332 + ($751<<2)|0);
           $753 = ($748|0)==($752|0);
           do {
            if (!($753)) {
             $754 = ($748>>>0)<($755>>>0);
             if ($754) {
              _abort();
              // unreachable;
             }
             $756 = ((($748)) + 12|0);
             $757 = HEAP32[$756>>2]|0;
             $758 = ($757|0)==($720|0);
             if ($758) {
              break;
             }
             _abort();
             // unreachable;
            }
           } while(0);
           $759 = ($750|0)==($748|0);
           if ($759) {
            $760 = 1 << $745;
            $761 = $760 ^ -1;
            $762 = HEAP32[292>>2]|0;
            $763 = $762 & $761;
            HEAP32[292>>2] = $763;
            break;
           }
           $764 = ($750|0)==($752|0);
           do {
            if ($764) {
             $$pre57$i$i = ((($750)) + 8|0);
             $$pre$phi58$i$iZ2D = $$pre57$i$i;
            } else {
             $765 = ($750>>>0)<($755>>>0);
             if ($765) {
              _abort();
              // unreachable;
             }
             $766 = ((($750)) + 8|0);
             $767 = HEAP32[$766>>2]|0;
             $768 = ($767|0)==($720|0);
             if ($768) {
              $$pre$phi58$i$iZ2D = $766;
              break;
             }
             _abort();
             // unreachable;
            }
           } while(0);
           $769 = ((($748)) + 12|0);
           HEAP32[$769>>2] = $750;
           HEAP32[$$pre$phi58$i$iZ2D>>2] = $748;
          } else {
           $$sum34$i$i = $719 | 24;
           $$sum115$i = (($$sum34$i$i) + ($tsize$254$i))|0;
           $770 = (($tbase$255$i) + ($$sum115$i)|0);
           $771 = HEAP32[$770>>2]|0;
           $$sum5$i$i = (($tsize$254$i) + 12)|0;
           $$sum116$i = (($$sum5$i$i) + ($719))|0;
           $772 = (($tbase$255$i) + ($$sum116$i)|0);
           $773 = HEAP32[$772>>2]|0;
           $774 = ($773|0)==($720|0);
           do {
            if ($774) {
             $$sum67$i$i = $719 | 16;
             $$sum122$i = (($$sum2$i21$i) + ($$sum67$i$i))|0;
             $784 = (($tbase$255$i) + ($$sum122$i)|0);
             $785 = HEAP32[$784>>2]|0;
             $786 = ($785|0)==(0|0);
             if ($786) {
              $$sum123$i = (($$sum67$i$i) + ($tsize$254$i))|0;
              $787 = (($tbase$255$i) + ($$sum123$i)|0);
              $788 = HEAP32[$787>>2]|0;
              $789 = ($788|0)==(0|0);
              if ($789) {
               $R$1$i$i = 0;
               break;
              } else {
               $R$0$i$i = $788;$RP$0$i$i = $787;
              }
             } else {
              $R$0$i$i = $785;$RP$0$i$i = $784;
             }
             while(1) {
              $790 = ((($R$0$i$i)) + 20|0);
              $791 = HEAP32[$790>>2]|0;
              $792 = ($791|0)==(0|0);
              if (!($792)) {
               $R$0$i$i = $791;$RP$0$i$i = $790;
               continue;
              }
              $793 = ((($R$0$i$i)) + 16|0);
              $794 = HEAP32[$793>>2]|0;
              $795 = ($794|0)==(0|0);
              if ($795) {
               $R$0$i$i$lcssa = $R$0$i$i;$RP$0$i$i$lcssa = $RP$0$i$i;
               break;
              } else {
               $R$0$i$i = $794;$RP$0$i$i = $793;
              }
             }
             $796 = ($RP$0$i$i$lcssa>>>0)<($755>>>0);
             if ($796) {
              _abort();
              // unreachable;
             } else {
              HEAP32[$RP$0$i$i$lcssa>>2] = 0;
              $R$1$i$i = $R$0$i$i$lcssa;
              break;
             }
            } else {
             $$sum3536$i$i = $719 | 8;
             $$sum117$i = (($$sum3536$i$i) + ($tsize$254$i))|0;
             $775 = (($tbase$255$i) + ($$sum117$i)|0);
             $776 = HEAP32[$775>>2]|0;
             $777 = ($776>>>0)<($755>>>0);
             if ($777) {
              _abort();
              // unreachable;
             }
             $778 = ((($776)) + 12|0);
             $779 = HEAP32[$778>>2]|0;
             $780 = ($779|0)==($720|0);
             if (!($780)) {
              _abort();
              // unreachable;
             }
             $781 = ((($773)) + 8|0);
             $782 = HEAP32[$781>>2]|0;
             $783 = ($782|0)==($720|0);
             if ($783) {
              HEAP32[$778>>2] = $773;
              HEAP32[$781>>2] = $776;
              $R$1$i$i = $773;
              break;
             } else {
              _abort();
              // unreachable;
             }
            }
           } while(0);
           $797 = ($771|0)==(0|0);
           if ($797) {
            break;
           }
           $$sum30$i$i = (($tsize$254$i) + 28)|0;
           $$sum118$i = (($$sum30$i$i) + ($719))|0;
           $798 = (($tbase$255$i) + ($$sum118$i)|0);
           $799 = HEAP32[$798>>2]|0;
           $800 = (596 + ($799<<2)|0);
           $801 = HEAP32[$800>>2]|0;
           $802 = ($720|0)==($801|0);
           do {
            if ($802) {
             HEAP32[$800>>2] = $R$1$i$i;
             $cond$i$i = ($R$1$i$i|0)==(0|0);
             if (!($cond$i$i)) {
              break;
             }
             $803 = 1 << $799;
             $804 = $803 ^ -1;
             $805 = HEAP32[(296)>>2]|0;
             $806 = $805 & $804;
             HEAP32[(296)>>2] = $806;
             break L332;
            } else {
             $807 = HEAP32[(308)>>2]|0;
             $808 = ($771>>>0)<($807>>>0);
             if ($808) {
              _abort();
              // unreachable;
             }
             $809 = ((($771)) + 16|0);
             $810 = HEAP32[$809>>2]|0;
             $811 = ($810|0)==($720|0);
             if ($811) {
              HEAP32[$809>>2] = $R$1$i$i;
             } else {
              $812 = ((($771)) + 20|0);
              HEAP32[$812>>2] = $R$1$i$i;
             }
             $813 = ($R$1$i$i|0)==(0|0);
             if ($813) {
              break L332;
             }
            }
           } while(0);
           $814 = HEAP32[(308)>>2]|0;
           $815 = ($R$1$i$i>>>0)<($814>>>0);
           if ($815) {
            _abort();
            // unreachable;
           }
           $816 = ((($R$1$i$i)) + 24|0);
           HEAP32[$816>>2] = $771;
           $$sum3132$i$i = $719 | 16;
           $$sum119$i = (($$sum3132$i$i) + ($tsize$254$i))|0;
           $817 = (($tbase$255$i) + ($$sum119$i)|0);
           $818 = HEAP32[$817>>2]|0;
           $819 = ($818|0)==(0|0);
           do {
            if (!($819)) {
             $820 = ($818>>>0)<($814>>>0);
             if ($820) {
              _abort();
              // unreachable;
             } else {
              $821 = ((($R$1$i$i)) + 16|0);
              HEAP32[$821>>2] = $818;
              $822 = ((($818)) + 24|0);
              HEAP32[$822>>2] = $R$1$i$i;
              break;
             }
            }
           } while(0);
           $$sum120$i = (($$sum2$i21$i) + ($$sum3132$i$i))|0;
           $823 = (($tbase$255$i) + ($$sum120$i)|0);
           $824 = HEAP32[$823>>2]|0;
           $825 = ($824|0)==(0|0);
           if ($825) {
            break;
           }
           $826 = HEAP32[(308)>>2]|0;
           $827 = ($824>>>0)<($826>>>0);
           if ($827) {
            _abort();
            // unreachable;
           } else {
            $828 = ((($R$1$i$i)) + 20|0);
            HEAP32[$828>>2] = $824;
            $829 = ((($824)) + 24|0);
            HEAP32[$829>>2] = $R$1$i$i;
            break;
           }
          }
         } while(0);
         $$sum9$i$i = $744 | $719;
         $$sum121$i = (($$sum9$i$i) + ($tsize$254$i))|0;
         $830 = (($tbase$255$i) + ($$sum121$i)|0);
         $831 = (($744) + ($725))|0;
         $oldfirst$0$i$i = $830;$qsize$0$i$i = $831;
        } else {
         $oldfirst$0$i$i = $720;$qsize$0$i$i = $725;
        }
        $832 = ((($oldfirst$0$i$i)) + 4|0);
        $833 = HEAP32[$832>>2]|0;
        $834 = $833 & -2;
        HEAP32[$832>>2] = $834;
        $835 = $qsize$0$i$i | 1;
        $$sum10$i$i = (($$sum$i19$i) + 4)|0;
        $836 = (($tbase$255$i) + ($$sum10$i$i)|0);
        HEAP32[$836>>2] = $835;
        $$sum11$i$i = (($qsize$0$i$i) + ($$sum$i19$i))|0;
        $837 = (($tbase$255$i) + ($$sum11$i$i)|0);
        HEAP32[$837>>2] = $qsize$0$i$i;
        $838 = $qsize$0$i$i >>> 3;
        $839 = ($qsize$0$i$i>>>0)<(256);
        if ($839) {
         $840 = $838 << 1;
         $841 = (332 + ($840<<2)|0);
         $842 = HEAP32[292>>2]|0;
         $843 = 1 << $838;
         $844 = $842 & $843;
         $845 = ($844|0)==(0);
         do {
          if ($845) {
           $846 = $842 | $843;
           HEAP32[292>>2] = $846;
           $$pre$i22$i = (($840) + 2)|0;
           $$pre56$i$i = (332 + ($$pre$i22$i<<2)|0);
           $$pre$phi$i23$iZ2D = $$pre56$i$i;$F4$0$i$i = $841;
          } else {
           $$sum29$i$i = (($840) + 2)|0;
           $847 = (332 + ($$sum29$i$i<<2)|0);
           $848 = HEAP32[$847>>2]|0;
           $849 = HEAP32[(308)>>2]|0;
           $850 = ($848>>>0)<($849>>>0);
           if (!($850)) {
            $$pre$phi$i23$iZ2D = $847;$F4$0$i$i = $848;
            break;
           }
           _abort();
           // unreachable;
          }
         } while(0);
         HEAP32[$$pre$phi$i23$iZ2D>>2] = $724;
         $851 = ((($F4$0$i$i)) + 12|0);
         HEAP32[$851>>2] = $724;
         $$sum27$i$i = (($$sum$i19$i) + 8)|0;
         $852 = (($tbase$255$i) + ($$sum27$i$i)|0);
         HEAP32[$852>>2] = $F4$0$i$i;
         $$sum28$i$i = (($$sum$i19$i) + 12)|0;
         $853 = (($tbase$255$i) + ($$sum28$i$i)|0);
         HEAP32[$853>>2] = $841;
         break;
        }
        $854 = $qsize$0$i$i >>> 8;
        $855 = ($854|0)==(0);
        do {
         if ($855) {
          $I7$0$i$i = 0;
         } else {
          $856 = ($qsize$0$i$i>>>0)>(16777215);
          if ($856) {
           $I7$0$i$i = 31;
           break;
          }
          $857 = (($854) + 1048320)|0;
          $858 = $857 >>> 16;
          $859 = $858 & 8;
          $860 = $854 << $859;
          $861 = (($860) + 520192)|0;
          $862 = $861 >>> 16;
          $863 = $862 & 4;
          $864 = $863 | $859;
          $865 = $860 << $863;
          $866 = (($865) + 245760)|0;
          $867 = $866 >>> 16;
          $868 = $867 & 2;
          $869 = $864 | $868;
          $870 = (14 - ($869))|0;
          $871 = $865 << $868;
          $872 = $871 >>> 15;
          $873 = (($870) + ($872))|0;
          $874 = $873 << 1;
          $875 = (($873) + 7)|0;
          $876 = $qsize$0$i$i >>> $875;
          $877 = $876 & 1;
          $878 = $877 | $874;
          $I7$0$i$i = $878;
         }
        } while(0);
        $879 = (596 + ($I7$0$i$i<<2)|0);
        $$sum12$i$i = (($$sum$i19$i) + 28)|0;
        $880 = (($tbase$255$i) + ($$sum12$i$i)|0);
        HEAP32[$880>>2] = $I7$0$i$i;
        $$sum13$i$i = (($$sum$i19$i) + 16)|0;
        $881 = (($tbase$255$i) + ($$sum13$i$i)|0);
        $$sum14$i$i = (($$sum$i19$i) + 20)|0;
        $882 = (($tbase$255$i) + ($$sum14$i$i)|0);
        HEAP32[$882>>2] = 0;
        HEAP32[$881>>2] = 0;
        $883 = HEAP32[(296)>>2]|0;
        $884 = 1 << $I7$0$i$i;
        $885 = $883 & $884;
        $886 = ($885|0)==(0);
        if ($886) {
         $887 = $883 | $884;
         HEAP32[(296)>>2] = $887;
         HEAP32[$879>>2] = $724;
         $$sum15$i$i = (($$sum$i19$i) + 24)|0;
         $888 = (($tbase$255$i) + ($$sum15$i$i)|0);
         HEAP32[$888>>2] = $879;
         $$sum16$i$i = (($$sum$i19$i) + 12)|0;
         $889 = (($tbase$255$i) + ($$sum16$i$i)|0);
         HEAP32[$889>>2] = $724;
         $$sum17$i$i = (($$sum$i19$i) + 8)|0;
         $890 = (($tbase$255$i) + ($$sum17$i$i)|0);
         HEAP32[$890>>2] = $724;
         break;
        }
        $891 = HEAP32[$879>>2]|0;
        $892 = ((($891)) + 4|0);
        $893 = HEAP32[$892>>2]|0;
        $894 = $893 & -8;
        $895 = ($894|0)==($qsize$0$i$i|0);
        L418: do {
         if ($895) {
          $T$0$lcssa$i25$i = $891;
         } else {
          $896 = ($I7$0$i$i|0)==(31);
          $897 = $I7$0$i$i >>> 1;
          $898 = (25 - ($897))|0;
          $899 = $896 ? 0 : $898;
          $900 = $qsize$0$i$i << $899;
          $K8$051$i$i = $900;$T$050$i$i = $891;
          while(1) {
           $907 = $K8$051$i$i >>> 31;
           $908 = (((($T$050$i$i)) + 16|0) + ($907<<2)|0);
           $903 = HEAP32[$908>>2]|0;
           $909 = ($903|0)==(0|0);
           if ($909) {
            $$lcssa = $908;$T$050$i$i$lcssa = $T$050$i$i;
            break;
           }
           $901 = $K8$051$i$i << 1;
           $902 = ((($903)) + 4|0);
           $904 = HEAP32[$902>>2]|0;
           $905 = $904 & -8;
           $906 = ($905|0)==($qsize$0$i$i|0);
           if ($906) {
            $T$0$lcssa$i25$i = $903;
            break L418;
           } else {
            $K8$051$i$i = $901;$T$050$i$i = $903;
           }
          }
          $910 = HEAP32[(308)>>2]|0;
          $911 = ($$lcssa>>>0)<($910>>>0);
          if ($911) {
           _abort();
           // unreachable;
          } else {
           HEAP32[$$lcssa>>2] = $724;
           $$sum23$i$i = (($$sum$i19$i) + 24)|0;
           $912 = (($tbase$255$i) + ($$sum23$i$i)|0);
           HEAP32[$912>>2] = $T$050$i$i$lcssa;
           $$sum24$i$i = (($$sum$i19$i) + 12)|0;
           $913 = (($tbase$255$i) + ($$sum24$i$i)|0);
           HEAP32[$913>>2] = $724;
           $$sum25$i$i = (($$sum$i19$i) + 8)|0;
           $914 = (($tbase$255$i) + ($$sum25$i$i)|0);
           HEAP32[$914>>2] = $724;
           break L324;
          }
         }
        } while(0);
        $915 = ((($T$0$lcssa$i25$i)) + 8|0);
        $916 = HEAP32[$915>>2]|0;
        $917 = HEAP32[(308)>>2]|0;
        $918 = ($916>>>0)>=($917>>>0);
        $not$$i26$i = ($T$0$lcssa$i25$i>>>0)>=($917>>>0);
        $919 = $918 & $not$$i26$i;
        if ($919) {
         $920 = ((($916)) + 12|0);
         HEAP32[$920>>2] = $724;
         HEAP32[$915>>2] = $724;
         $$sum20$i$i = (($$sum$i19$i) + 8)|0;
         $921 = (($tbase$255$i) + ($$sum20$i$i)|0);
         HEAP32[$921>>2] = $916;
         $$sum21$i$i = (($$sum$i19$i) + 12)|0;
         $922 = (($tbase$255$i) + ($$sum21$i$i)|0);
         HEAP32[$922>>2] = $T$0$lcssa$i25$i;
         $$sum22$i$i = (($$sum$i19$i) + 24)|0;
         $923 = (($tbase$255$i) + ($$sum22$i$i)|0);
         HEAP32[$923>>2] = 0;
         break;
        } else {
         _abort();
         // unreachable;
        }
       }
      } while(0);
      $$sum1819$i$i = $711 | 8;
      $924 = (($tbase$255$i) + ($$sum1819$i$i)|0);
      $mem$0 = $924;
      return ($mem$0|0);
     } else {
      $sp$0$i$i$i = (740);
     }
    }
    while(1) {
     $925 = HEAP32[$sp$0$i$i$i>>2]|0;
     $926 = ($925>>>0)>($635>>>0);
     if (!($926)) {
      $927 = ((($sp$0$i$i$i)) + 4|0);
      $928 = HEAP32[$927>>2]|0;
      $929 = (($925) + ($928)|0);
      $930 = ($929>>>0)>($635>>>0);
      if ($930) {
       $$lcssa215 = $925;$$lcssa216 = $928;$$lcssa217 = $929;
       break;
      }
     }
     $931 = ((($sp$0$i$i$i)) + 8|0);
     $932 = HEAP32[$931>>2]|0;
     $sp$0$i$i$i = $932;
    }
    $$sum$i14$i = (($$lcssa216) + -47)|0;
    $$sum1$i15$i = (($$lcssa216) + -39)|0;
    $933 = (($$lcssa215) + ($$sum1$i15$i)|0);
    $934 = $933;
    $935 = $934 & 7;
    $936 = ($935|0)==(0);
    $937 = (0 - ($934))|0;
    $938 = $937 & 7;
    $939 = $936 ? 0 : $938;
    $$sum2$i16$i = (($$sum$i14$i) + ($939))|0;
    $940 = (($$lcssa215) + ($$sum2$i16$i)|0);
    $941 = ((($635)) + 16|0);
    $942 = ($940>>>0)<($941>>>0);
    $943 = $942 ? $635 : $940;
    $944 = ((($943)) + 8|0);
    $945 = (($tsize$254$i) + -40)|0;
    $946 = ((($tbase$255$i)) + 8|0);
    $947 = $946;
    $948 = $947 & 7;
    $949 = ($948|0)==(0);
    $950 = (0 - ($947))|0;
    $951 = $950 & 7;
    $952 = $949 ? 0 : $951;
    $953 = (($tbase$255$i) + ($952)|0);
    $954 = (($945) - ($952))|0;
    HEAP32[(316)>>2] = $953;
    HEAP32[(304)>>2] = $954;
    $955 = $954 | 1;
    $$sum$i$i$i = (($952) + 4)|0;
    $956 = (($tbase$255$i) + ($$sum$i$i$i)|0);
    HEAP32[$956>>2] = $955;
    $$sum2$i$i$i = (($tsize$254$i) + -36)|0;
    $957 = (($tbase$255$i) + ($$sum2$i$i$i)|0);
    HEAP32[$957>>2] = 40;
    $958 = HEAP32[(780)>>2]|0;
    HEAP32[(320)>>2] = $958;
    $959 = ((($943)) + 4|0);
    HEAP32[$959>>2] = 27;
    ;HEAP32[$944>>2]=HEAP32[(740)>>2]|0;HEAP32[$944+4>>2]=HEAP32[(740)+4>>2]|0;HEAP32[$944+8>>2]=HEAP32[(740)+8>>2]|0;HEAP32[$944+12>>2]=HEAP32[(740)+12>>2]|0;
    HEAP32[(740)>>2] = $tbase$255$i;
    HEAP32[(744)>>2] = $tsize$254$i;
    HEAP32[(752)>>2] = 0;
    HEAP32[(748)>>2] = $944;
    $960 = ((($943)) + 28|0);
    HEAP32[$960>>2] = 7;
    $961 = ((($943)) + 32|0);
    $962 = ($961>>>0)<($$lcssa217>>>0);
    if ($962) {
     $964 = $960;
     while(1) {
      $963 = ((($964)) + 4|0);
      HEAP32[$963>>2] = 7;
      $965 = ((($964)) + 8|0);
      $966 = ($965>>>0)<($$lcssa217>>>0);
      if ($966) {
       $964 = $963;
      } else {
       break;
      }
     }
    }
    $967 = ($943|0)==($635|0);
    if (!($967)) {
     $968 = $943;
     $969 = $635;
     $970 = (($968) - ($969))|0;
     $971 = HEAP32[$959>>2]|0;
     $972 = $971 & -2;
     HEAP32[$959>>2] = $972;
     $973 = $970 | 1;
     $974 = ((($635)) + 4|0);
     HEAP32[$974>>2] = $973;
     HEAP32[$943>>2] = $970;
     $975 = $970 >>> 3;
     $976 = ($970>>>0)<(256);
     if ($976) {
      $977 = $975 << 1;
      $978 = (332 + ($977<<2)|0);
      $979 = HEAP32[292>>2]|0;
      $980 = 1 << $975;
      $981 = $979 & $980;
      $982 = ($981|0)==(0);
      if ($982) {
       $983 = $979 | $980;
       HEAP32[292>>2] = $983;
       $$pre$i$i = (($977) + 2)|0;
       $$pre14$i$i = (332 + ($$pre$i$i<<2)|0);
       $$pre$phi$i$iZ2D = $$pre14$i$i;$F$0$i$i = $978;
      } else {
       $$sum4$i$i = (($977) + 2)|0;
       $984 = (332 + ($$sum4$i$i<<2)|0);
       $985 = HEAP32[$984>>2]|0;
       $986 = HEAP32[(308)>>2]|0;
       $987 = ($985>>>0)<($986>>>0);
       if ($987) {
        _abort();
        // unreachable;
       } else {
        $$pre$phi$i$iZ2D = $984;$F$0$i$i = $985;
       }
      }
      HEAP32[$$pre$phi$i$iZ2D>>2] = $635;
      $988 = ((($F$0$i$i)) + 12|0);
      HEAP32[$988>>2] = $635;
      $989 = ((($635)) + 8|0);
      HEAP32[$989>>2] = $F$0$i$i;
      $990 = ((($635)) + 12|0);
      HEAP32[$990>>2] = $978;
      break;
     }
     $991 = $970 >>> 8;
     $992 = ($991|0)==(0);
     if ($992) {
      $I1$0$i$i = 0;
     } else {
      $993 = ($970>>>0)>(16777215);
      if ($993) {
       $I1$0$i$i = 31;
      } else {
       $994 = (($991) + 1048320)|0;
       $995 = $994 >>> 16;
       $996 = $995 & 8;
       $997 = $991 << $996;
       $998 = (($997) + 520192)|0;
       $999 = $998 >>> 16;
       $1000 = $999 & 4;
       $1001 = $1000 | $996;
       $1002 = $997 << $1000;
       $1003 = (($1002) + 245760)|0;
       $1004 = $1003 >>> 16;
       $1005 = $1004 & 2;
       $1006 = $1001 | $1005;
       $1007 = (14 - ($1006))|0;
       $1008 = $1002 << $1005;
       $1009 = $1008 >>> 15;
       $1010 = (($1007) + ($1009))|0;
       $1011 = $1010 << 1;
       $1012 = (($1010) + 7)|0;
       $1013 = $970 >>> $1012;
       $1014 = $1013 & 1;
       $1015 = $1014 | $1011;
       $I1$0$i$i = $1015;
      }
     }
     $1016 = (596 + ($I1$0$i$i<<2)|0);
     $1017 = ((($635)) + 28|0);
     HEAP32[$1017>>2] = $I1$0$i$i;
     $1018 = ((($635)) + 20|0);
     HEAP32[$1018>>2] = 0;
     HEAP32[$941>>2] = 0;
     $1019 = HEAP32[(296)>>2]|0;
     $1020 = 1 << $I1$0$i$i;
     $1021 = $1019 & $1020;
     $1022 = ($1021|0)==(0);
     if ($1022) {
      $1023 = $1019 | $1020;
      HEAP32[(296)>>2] = $1023;
      HEAP32[$1016>>2] = $635;
      $1024 = ((($635)) + 24|0);
      HEAP32[$1024>>2] = $1016;
      $1025 = ((($635)) + 12|0);
      HEAP32[$1025>>2] = $635;
      $1026 = ((($635)) + 8|0);
      HEAP32[$1026>>2] = $635;
      break;
     }
     $1027 = HEAP32[$1016>>2]|0;
     $1028 = ((($1027)) + 4|0);
     $1029 = HEAP32[$1028>>2]|0;
     $1030 = $1029 & -8;
     $1031 = ($1030|0)==($970|0);
     L459: do {
      if ($1031) {
       $T$0$lcssa$i$i = $1027;
      } else {
       $1032 = ($I1$0$i$i|0)==(31);
       $1033 = $I1$0$i$i >>> 1;
       $1034 = (25 - ($1033))|0;
       $1035 = $1032 ? 0 : $1034;
       $1036 = $970 << $1035;
       $K2$07$i$i = $1036;$T$06$i$i = $1027;
       while(1) {
        $1043 = $K2$07$i$i >>> 31;
        $1044 = (((($T$06$i$i)) + 16|0) + ($1043<<2)|0);
        $1039 = HEAP32[$1044>>2]|0;
        $1045 = ($1039|0)==(0|0);
        if ($1045) {
         $$lcssa211 = $1044;$T$06$i$i$lcssa = $T$06$i$i;
         break;
        }
        $1037 = $K2$07$i$i << 1;
        $1038 = ((($1039)) + 4|0);
        $1040 = HEAP32[$1038>>2]|0;
        $1041 = $1040 & -8;
        $1042 = ($1041|0)==($970|0);
        if ($1042) {
         $T$0$lcssa$i$i = $1039;
         break L459;
        } else {
         $K2$07$i$i = $1037;$T$06$i$i = $1039;
        }
       }
       $1046 = HEAP32[(308)>>2]|0;
       $1047 = ($$lcssa211>>>0)<($1046>>>0);
       if ($1047) {
        _abort();
        // unreachable;
       } else {
        HEAP32[$$lcssa211>>2] = $635;
        $1048 = ((($635)) + 24|0);
        HEAP32[$1048>>2] = $T$06$i$i$lcssa;
        $1049 = ((($635)) + 12|0);
        HEAP32[$1049>>2] = $635;
        $1050 = ((($635)) + 8|0);
        HEAP32[$1050>>2] = $635;
        break L299;
       }
      }
     } while(0);
     $1051 = ((($T$0$lcssa$i$i)) + 8|0);
     $1052 = HEAP32[$1051>>2]|0;
     $1053 = HEAP32[(308)>>2]|0;
     $1054 = ($1052>>>0)>=($1053>>>0);
     $not$$i$i = ($T$0$lcssa$i$i>>>0)>=($1053>>>0);
     $1055 = $1054 & $not$$i$i;
     if ($1055) {
      $1056 = ((($1052)) + 12|0);
      HEAP32[$1056>>2] = $635;
      HEAP32[$1051>>2] = $635;
      $1057 = ((($635)) + 8|0);
      HEAP32[$1057>>2] = $1052;
      $1058 = ((($635)) + 12|0);
      HEAP32[$1058>>2] = $T$0$lcssa$i$i;
      $1059 = ((($635)) + 24|0);
      HEAP32[$1059>>2] = 0;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   }
  } while(0);
  $1060 = HEAP32[(304)>>2]|0;
  $1061 = ($1060>>>0)>($nb$0>>>0);
  if ($1061) {
   $1062 = (($1060) - ($nb$0))|0;
   HEAP32[(304)>>2] = $1062;
   $1063 = HEAP32[(316)>>2]|0;
   $1064 = (($1063) + ($nb$0)|0);
   HEAP32[(316)>>2] = $1064;
   $1065 = $1062 | 1;
   $$sum$i32 = (($nb$0) + 4)|0;
   $1066 = (($1063) + ($$sum$i32)|0);
   HEAP32[$1066>>2] = $1065;
   $1067 = $nb$0 | 3;
   $1068 = ((($1063)) + 4|0);
   HEAP32[$1068>>2] = $1067;
   $1069 = ((($1063)) + 8|0);
   $mem$0 = $1069;
   return ($mem$0|0);
  }
 }
 $1070 = (___errno_location()|0);
 HEAP32[$1070>>2] = 12;
 $mem$0 = 0;
 return ($mem$0|0);
}
function _free($mem) {
 $mem = $mem|0;
 var $$lcssa = 0, $$pre = 0, $$pre$phi59Z2D = 0, $$pre$phi61Z2D = 0, $$pre$phiZ2D = 0, $$pre57 = 0, $$pre58 = 0, $$pre60 = 0, $$sum = 0, $$sum11 = 0, $$sum12 = 0, $$sum13 = 0, $$sum14 = 0, $$sum1718 = 0, $$sum19 = 0, $$sum2 = 0, $$sum20 = 0, $$sum22 = 0, $$sum23 = 0, $$sum24 = 0;
 var $$sum25 = 0, $$sum26 = 0, $$sum27 = 0, $$sum28 = 0, $$sum29 = 0, $$sum3 = 0, $$sum30 = 0, $$sum31 = 0, $$sum5 = 0, $$sum67 = 0, $$sum8 = 0, $$sum9 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;
 var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0;
 var $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0;
 var $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0;
 var $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0;
 var $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0;
 var $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0;
 var $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0;
 var $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0;
 var $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0;
 var $321 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $F16$0 = 0, $I18$0 = 0, $K19$052 = 0, $R$0 = 0, $R$0$lcssa = 0, $R$1 = 0;
 var $R7$0 = 0, $R7$0$lcssa = 0, $R7$1 = 0, $RP$0 = 0, $RP$0$lcssa = 0, $RP9$0 = 0, $RP9$0$lcssa = 0, $T$0$lcssa = 0, $T$051 = 0, $T$051$lcssa = 0, $cond = 0, $cond47 = 0, $not$ = 0, $p$0 = 0, $psize$0 = 0, $psize$1 = 0, $sp$0$i = 0, $sp$0$in$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($mem|0)==(0|0);
 if ($0) {
  return;
 }
 $1 = ((($mem)) + -8|0);
 $2 = HEAP32[(308)>>2]|0;
 $3 = ($1>>>0)<($2>>>0);
 if ($3) {
  _abort();
  // unreachable;
 }
 $4 = ((($mem)) + -4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $5 & 3;
 $7 = ($6|0)==(1);
 if ($7) {
  _abort();
  // unreachable;
 }
 $8 = $5 & -8;
 $$sum = (($8) + -8)|0;
 $9 = (($mem) + ($$sum)|0);
 $10 = $5 & 1;
 $11 = ($10|0)==(0);
 do {
  if ($11) {
   $12 = HEAP32[$1>>2]|0;
   $13 = ($6|0)==(0);
   if ($13) {
    return;
   }
   $$sum2 = (-8 - ($12))|0;
   $14 = (($mem) + ($$sum2)|0);
   $15 = (($12) + ($8))|0;
   $16 = ($14>>>0)<($2>>>0);
   if ($16) {
    _abort();
    // unreachable;
   }
   $17 = HEAP32[(312)>>2]|0;
   $18 = ($14|0)==($17|0);
   if ($18) {
    $$sum3 = (($8) + -4)|0;
    $103 = (($mem) + ($$sum3)|0);
    $104 = HEAP32[$103>>2]|0;
    $105 = $104 & 3;
    $106 = ($105|0)==(3);
    if (!($106)) {
     $p$0 = $14;$psize$0 = $15;
     break;
    }
    HEAP32[(300)>>2] = $15;
    $107 = $104 & -2;
    HEAP32[$103>>2] = $107;
    $108 = $15 | 1;
    $$sum20 = (($$sum2) + 4)|0;
    $109 = (($mem) + ($$sum20)|0);
    HEAP32[$109>>2] = $108;
    HEAP32[$9>>2] = $15;
    return;
   }
   $19 = $12 >>> 3;
   $20 = ($12>>>0)<(256);
   if ($20) {
    $$sum30 = (($$sum2) + 8)|0;
    $21 = (($mem) + ($$sum30)|0);
    $22 = HEAP32[$21>>2]|0;
    $$sum31 = (($$sum2) + 12)|0;
    $23 = (($mem) + ($$sum31)|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = $19 << 1;
    $26 = (332 + ($25<<2)|0);
    $27 = ($22|0)==($26|0);
    if (!($27)) {
     $28 = ($22>>>0)<($2>>>0);
     if ($28) {
      _abort();
      // unreachable;
     }
     $29 = ((($22)) + 12|0);
     $30 = HEAP32[$29>>2]|0;
     $31 = ($30|0)==($14|0);
     if (!($31)) {
      _abort();
      // unreachable;
     }
    }
    $32 = ($24|0)==($22|0);
    if ($32) {
     $33 = 1 << $19;
     $34 = $33 ^ -1;
     $35 = HEAP32[292>>2]|0;
     $36 = $35 & $34;
     HEAP32[292>>2] = $36;
     $p$0 = $14;$psize$0 = $15;
     break;
    }
    $37 = ($24|0)==($26|0);
    if ($37) {
     $$pre60 = ((($24)) + 8|0);
     $$pre$phi61Z2D = $$pre60;
    } else {
     $38 = ($24>>>0)<($2>>>0);
     if ($38) {
      _abort();
      // unreachable;
     }
     $39 = ((($24)) + 8|0);
     $40 = HEAP32[$39>>2]|0;
     $41 = ($40|0)==($14|0);
     if ($41) {
      $$pre$phi61Z2D = $39;
     } else {
      _abort();
      // unreachable;
     }
    }
    $42 = ((($22)) + 12|0);
    HEAP32[$42>>2] = $24;
    HEAP32[$$pre$phi61Z2D>>2] = $22;
    $p$0 = $14;$psize$0 = $15;
    break;
   }
   $$sum22 = (($$sum2) + 24)|0;
   $43 = (($mem) + ($$sum22)|0);
   $44 = HEAP32[$43>>2]|0;
   $$sum23 = (($$sum2) + 12)|0;
   $45 = (($mem) + ($$sum23)|0);
   $46 = HEAP32[$45>>2]|0;
   $47 = ($46|0)==($14|0);
   do {
    if ($47) {
     $$sum25 = (($$sum2) + 20)|0;
     $57 = (($mem) + ($$sum25)|0);
     $58 = HEAP32[$57>>2]|0;
     $59 = ($58|0)==(0|0);
     if ($59) {
      $$sum24 = (($$sum2) + 16)|0;
      $60 = (($mem) + ($$sum24)|0);
      $61 = HEAP32[$60>>2]|0;
      $62 = ($61|0)==(0|0);
      if ($62) {
       $R$1 = 0;
       break;
      } else {
       $R$0 = $61;$RP$0 = $60;
      }
     } else {
      $R$0 = $58;$RP$0 = $57;
     }
     while(1) {
      $63 = ((($R$0)) + 20|0);
      $64 = HEAP32[$63>>2]|0;
      $65 = ($64|0)==(0|0);
      if (!($65)) {
       $R$0 = $64;$RP$0 = $63;
       continue;
      }
      $66 = ((($R$0)) + 16|0);
      $67 = HEAP32[$66>>2]|0;
      $68 = ($67|0)==(0|0);
      if ($68) {
       $R$0$lcssa = $R$0;$RP$0$lcssa = $RP$0;
       break;
      } else {
       $R$0 = $67;$RP$0 = $66;
      }
     }
     $69 = ($RP$0$lcssa>>>0)<($2>>>0);
     if ($69) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$RP$0$lcssa>>2] = 0;
      $R$1 = $R$0$lcssa;
      break;
     }
    } else {
     $$sum29 = (($$sum2) + 8)|0;
     $48 = (($mem) + ($$sum29)|0);
     $49 = HEAP32[$48>>2]|0;
     $50 = ($49>>>0)<($2>>>0);
     if ($50) {
      _abort();
      // unreachable;
     }
     $51 = ((($49)) + 12|0);
     $52 = HEAP32[$51>>2]|0;
     $53 = ($52|0)==($14|0);
     if (!($53)) {
      _abort();
      // unreachable;
     }
     $54 = ((($46)) + 8|0);
     $55 = HEAP32[$54>>2]|0;
     $56 = ($55|0)==($14|0);
     if ($56) {
      HEAP32[$51>>2] = $46;
      HEAP32[$54>>2] = $49;
      $R$1 = $46;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $70 = ($44|0)==(0|0);
   if ($70) {
    $p$0 = $14;$psize$0 = $15;
   } else {
    $$sum26 = (($$sum2) + 28)|0;
    $71 = (($mem) + ($$sum26)|0);
    $72 = HEAP32[$71>>2]|0;
    $73 = (596 + ($72<<2)|0);
    $74 = HEAP32[$73>>2]|0;
    $75 = ($14|0)==($74|0);
    if ($75) {
     HEAP32[$73>>2] = $R$1;
     $cond = ($R$1|0)==(0|0);
     if ($cond) {
      $76 = 1 << $72;
      $77 = $76 ^ -1;
      $78 = HEAP32[(296)>>2]|0;
      $79 = $78 & $77;
      HEAP32[(296)>>2] = $79;
      $p$0 = $14;$psize$0 = $15;
      break;
     }
    } else {
     $80 = HEAP32[(308)>>2]|0;
     $81 = ($44>>>0)<($80>>>0);
     if ($81) {
      _abort();
      // unreachable;
     }
     $82 = ((($44)) + 16|0);
     $83 = HEAP32[$82>>2]|0;
     $84 = ($83|0)==($14|0);
     if ($84) {
      HEAP32[$82>>2] = $R$1;
     } else {
      $85 = ((($44)) + 20|0);
      HEAP32[$85>>2] = $R$1;
     }
     $86 = ($R$1|0)==(0|0);
     if ($86) {
      $p$0 = $14;$psize$0 = $15;
      break;
     }
    }
    $87 = HEAP32[(308)>>2]|0;
    $88 = ($R$1>>>0)<($87>>>0);
    if ($88) {
     _abort();
     // unreachable;
    }
    $89 = ((($R$1)) + 24|0);
    HEAP32[$89>>2] = $44;
    $$sum27 = (($$sum2) + 16)|0;
    $90 = (($mem) + ($$sum27)|0);
    $91 = HEAP32[$90>>2]|0;
    $92 = ($91|0)==(0|0);
    do {
     if (!($92)) {
      $93 = ($91>>>0)<($87>>>0);
      if ($93) {
       _abort();
       // unreachable;
      } else {
       $94 = ((($R$1)) + 16|0);
       HEAP32[$94>>2] = $91;
       $95 = ((($91)) + 24|0);
       HEAP32[$95>>2] = $R$1;
       break;
      }
     }
    } while(0);
    $$sum28 = (($$sum2) + 20)|0;
    $96 = (($mem) + ($$sum28)|0);
    $97 = HEAP32[$96>>2]|0;
    $98 = ($97|0)==(0|0);
    if ($98) {
     $p$0 = $14;$psize$0 = $15;
    } else {
     $99 = HEAP32[(308)>>2]|0;
     $100 = ($97>>>0)<($99>>>0);
     if ($100) {
      _abort();
      // unreachable;
     } else {
      $101 = ((($R$1)) + 20|0);
      HEAP32[$101>>2] = $97;
      $102 = ((($97)) + 24|0);
      HEAP32[$102>>2] = $R$1;
      $p$0 = $14;$psize$0 = $15;
      break;
     }
    }
   }
  } else {
   $p$0 = $1;$psize$0 = $8;
  }
 } while(0);
 $110 = ($p$0>>>0)<($9>>>0);
 if (!($110)) {
  _abort();
  // unreachable;
 }
 $$sum19 = (($8) + -4)|0;
 $111 = (($mem) + ($$sum19)|0);
 $112 = HEAP32[$111>>2]|0;
 $113 = $112 & 1;
 $114 = ($113|0)==(0);
 if ($114) {
  _abort();
  // unreachable;
 }
 $115 = $112 & 2;
 $116 = ($115|0)==(0);
 if ($116) {
  $117 = HEAP32[(316)>>2]|0;
  $118 = ($9|0)==($117|0);
  if ($118) {
   $119 = HEAP32[(304)>>2]|0;
   $120 = (($119) + ($psize$0))|0;
   HEAP32[(304)>>2] = $120;
   HEAP32[(316)>>2] = $p$0;
   $121 = $120 | 1;
   $122 = ((($p$0)) + 4|0);
   HEAP32[$122>>2] = $121;
   $123 = HEAP32[(312)>>2]|0;
   $124 = ($p$0|0)==($123|0);
   if (!($124)) {
    return;
   }
   HEAP32[(312)>>2] = 0;
   HEAP32[(300)>>2] = 0;
   return;
  }
  $125 = HEAP32[(312)>>2]|0;
  $126 = ($9|0)==($125|0);
  if ($126) {
   $127 = HEAP32[(300)>>2]|0;
   $128 = (($127) + ($psize$0))|0;
   HEAP32[(300)>>2] = $128;
   HEAP32[(312)>>2] = $p$0;
   $129 = $128 | 1;
   $130 = ((($p$0)) + 4|0);
   HEAP32[$130>>2] = $129;
   $131 = (($p$0) + ($128)|0);
   HEAP32[$131>>2] = $128;
   return;
  }
  $132 = $112 & -8;
  $133 = (($132) + ($psize$0))|0;
  $134 = $112 >>> 3;
  $135 = ($112>>>0)<(256);
  do {
   if ($135) {
    $136 = (($mem) + ($8)|0);
    $137 = HEAP32[$136>>2]|0;
    $$sum1718 = $8 | 4;
    $138 = (($mem) + ($$sum1718)|0);
    $139 = HEAP32[$138>>2]|0;
    $140 = $134 << 1;
    $141 = (332 + ($140<<2)|0);
    $142 = ($137|0)==($141|0);
    if (!($142)) {
     $143 = HEAP32[(308)>>2]|0;
     $144 = ($137>>>0)<($143>>>0);
     if ($144) {
      _abort();
      // unreachable;
     }
     $145 = ((($137)) + 12|0);
     $146 = HEAP32[$145>>2]|0;
     $147 = ($146|0)==($9|0);
     if (!($147)) {
      _abort();
      // unreachable;
     }
    }
    $148 = ($139|0)==($137|0);
    if ($148) {
     $149 = 1 << $134;
     $150 = $149 ^ -1;
     $151 = HEAP32[292>>2]|0;
     $152 = $151 & $150;
     HEAP32[292>>2] = $152;
     break;
    }
    $153 = ($139|0)==($141|0);
    if ($153) {
     $$pre58 = ((($139)) + 8|0);
     $$pre$phi59Z2D = $$pre58;
    } else {
     $154 = HEAP32[(308)>>2]|0;
     $155 = ($139>>>0)<($154>>>0);
     if ($155) {
      _abort();
      // unreachable;
     }
     $156 = ((($139)) + 8|0);
     $157 = HEAP32[$156>>2]|0;
     $158 = ($157|0)==($9|0);
     if ($158) {
      $$pre$phi59Z2D = $156;
     } else {
      _abort();
      // unreachable;
     }
    }
    $159 = ((($137)) + 12|0);
    HEAP32[$159>>2] = $139;
    HEAP32[$$pre$phi59Z2D>>2] = $137;
   } else {
    $$sum5 = (($8) + 16)|0;
    $160 = (($mem) + ($$sum5)|0);
    $161 = HEAP32[$160>>2]|0;
    $$sum67 = $8 | 4;
    $162 = (($mem) + ($$sum67)|0);
    $163 = HEAP32[$162>>2]|0;
    $164 = ($163|0)==($9|0);
    do {
     if ($164) {
      $$sum9 = (($8) + 12)|0;
      $175 = (($mem) + ($$sum9)|0);
      $176 = HEAP32[$175>>2]|0;
      $177 = ($176|0)==(0|0);
      if ($177) {
       $$sum8 = (($8) + 8)|0;
       $178 = (($mem) + ($$sum8)|0);
       $179 = HEAP32[$178>>2]|0;
       $180 = ($179|0)==(0|0);
       if ($180) {
        $R7$1 = 0;
        break;
       } else {
        $R7$0 = $179;$RP9$0 = $178;
       }
      } else {
       $R7$0 = $176;$RP9$0 = $175;
      }
      while(1) {
       $181 = ((($R7$0)) + 20|0);
       $182 = HEAP32[$181>>2]|0;
       $183 = ($182|0)==(0|0);
       if (!($183)) {
        $R7$0 = $182;$RP9$0 = $181;
        continue;
       }
       $184 = ((($R7$0)) + 16|0);
       $185 = HEAP32[$184>>2]|0;
       $186 = ($185|0)==(0|0);
       if ($186) {
        $R7$0$lcssa = $R7$0;$RP9$0$lcssa = $RP9$0;
        break;
       } else {
        $R7$0 = $185;$RP9$0 = $184;
       }
      }
      $187 = HEAP32[(308)>>2]|0;
      $188 = ($RP9$0$lcssa>>>0)<($187>>>0);
      if ($188) {
       _abort();
       // unreachable;
      } else {
       HEAP32[$RP9$0$lcssa>>2] = 0;
       $R7$1 = $R7$0$lcssa;
       break;
      }
     } else {
      $165 = (($mem) + ($8)|0);
      $166 = HEAP32[$165>>2]|0;
      $167 = HEAP32[(308)>>2]|0;
      $168 = ($166>>>0)<($167>>>0);
      if ($168) {
       _abort();
       // unreachable;
      }
      $169 = ((($166)) + 12|0);
      $170 = HEAP32[$169>>2]|0;
      $171 = ($170|0)==($9|0);
      if (!($171)) {
       _abort();
       // unreachable;
      }
      $172 = ((($163)) + 8|0);
      $173 = HEAP32[$172>>2]|0;
      $174 = ($173|0)==($9|0);
      if ($174) {
       HEAP32[$169>>2] = $163;
       HEAP32[$172>>2] = $166;
       $R7$1 = $163;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $189 = ($161|0)==(0|0);
    if (!($189)) {
     $$sum12 = (($8) + 20)|0;
     $190 = (($mem) + ($$sum12)|0);
     $191 = HEAP32[$190>>2]|0;
     $192 = (596 + ($191<<2)|0);
     $193 = HEAP32[$192>>2]|0;
     $194 = ($9|0)==($193|0);
     if ($194) {
      HEAP32[$192>>2] = $R7$1;
      $cond47 = ($R7$1|0)==(0|0);
      if ($cond47) {
       $195 = 1 << $191;
       $196 = $195 ^ -1;
       $197 = HEAP32[(296)>>2]|0;
       $198 = $197 & $196;
       HEAP32[(296)>>2] = $198;
       break;
      }
     } else {
      $199 = HEAP32[(308)>>2]|0;
      $200 = ($161>>>0)<($199>>>0);
      if ($200) {
       _abort();
       // unreachable;
      }
      $201 = ((($161)) + 16|0);
      $202 = HEAP32[$201>>2]|0;
      $203 = ($202|0)==($9|0);
      if ($203) {
       HEAP32[$201>>2] = $R7$1;
      } else {
       $204 = ((($161)) + 20|0);
       HEAP32[$204>>2] = $R7$1;
      }
      $205 = ($R7$1|0)==(0|0);
      if ($205) {
       break;
      }
     }
     $206 = HEAP32[(308)>>2]|0;
     $207 = ($R7$1>>>0)<($206>>>0);
     if ($207) {
      _abort();
      // unreachable;
     }
     $208 = ((($R7$1)) + 24|0);
     HEAP32[$208>>2] = $161;
     $$sum13 = (($8) + 8)|0;
     $209 = (($mem) + ($$sum13)|0);
     $210 = HEAP32[$209>>2]|0;
     $211 = ($210|0)==(0|0);
     do {
      if (!($211)) {
       $212 = ($210>>>0)<($206>>>0);
       if ($212) {
        _abort();
        // unreachable;
       } else {
        $213 = ((($R7$1)) + 16|0);
        HEAP32[$213>>2] = $210;
        $214 = ((($210)) + 24|0);
        HEAP32[$214>>2] = $R7$1;
        break;
       }
      }
     } while(0);
     $$sum14 = (($8) + 12)|0;
     $215 = (($mem) + ($$sum14)|0);
     $216 = HEAP32[$215>>2]|0;
     $217 = ($216|0)==(0|0);
     if (!($217)) {
      $218 = HEAP32[(308)>>2]|0;
      $219 = ($216>>>0)<($218>>>0);
      if ($219) {
       _abort();
       // unreachable;
      } else {
       $220 = ((($R7$1)) + 20|0);
       HEAP32[$220>>2] = $216;
       $221 = ((($216)) + 24|0);
       HEAP32[$221>>2] = $R7$1;
       break;
      }
     }
    }
   }
  } while(0);
  $222 = $133 | 1;
  $223 = ((($p$0)) + 4|0);
  HEAP32[$223>>2] = $222;
  $224 = (($p$0) + ($133)|0);
  HEAP32[$224>>2] = $133;
  $225 = HEAP32[(312)>>2]|0;
  $226 = ($p$0|0)==($225|0);
  if ($226) {
   HEAP32[(300)>>2] = $133;
   return;
  } else {
   $psize$1 = $133;
  }
 } else {
  $227 = $112 & -2;
  HEAP32[$111>>2] = $227;
  $228 = $psize$0 | 1;
  $229 = ((($p$0)) + 4|0);
  HEAP32[$229>>2] = $228;
  $230 = (($p$0) + ($psize$0)|0);
  HEAP32[$230>>2] = $psize$0;
  $psize$1 = $psize$0;
 }
 $231 = $psize$1 >>> 3;
 $232 = ($psize$1>>>0)<(256);
 if ($232) {
  $233 = $231 << 1;
  $234 = (332 + ($233<<2)|0);
  $235 = HEAP32[292>>2]|0;
  $236 = 1 << $231;
  $237 = $235 & $236;
  $238 = ($237|0)==(0);
  if ($238) {
   $239 = $235 | $236;
   HEAP32[292>>2] = $239;
   $$pre = (($233) + 2)|0;
   $$pre57 = (332 + ($$pre<<2)|0);
   $$pre$phiZ2D = $$pre57;$F16$0 = $234;
  } else {
   $$sum11 = (($233) + 2)|0;
   $240 = (332 + ($$sum11<<2)|0);
   $241 = HEAP32[$240>>2]|0;
   $242 = HEAP32[(308)>>2]|0;
   $243 = ($241>>>0)<($242>>>0);
   if ($243) {
    _abort();
    // unreachable;
   } else {
    $$pre$phiZ2D = $240;$F16$0 = $241;
   }
  }
  HEAP32[$$pre$phiZ2D>>2] = $p$0;
  $244 = ((($F16$0)) + 12|0);
  HEAP32[$244>>2] = $p$0;
  $245 = ((($p$0)) + 8|0);
  HEAP32[$245>>2] = $F16$0;
  $246 = ((($p$0)) + 12|0);
  HEAP32[$246>>2] = $234;
  return;
 }
 $247 = $psize$1 >>> 8;
 $248 = ($247|0)==(0);
 if ($248) {
  $I18$0 = 0;
 } else {
  $249 = ($psize$1>>>0)>(16777215);
  if ($249) {
   $I18$0 = 31;
  } else {
   $250 = (($247) + 1048320)|0;
   $251 = $250 >>> 16;
   $252 = $251 & 8;
   $253 = $247 << $252;
   $254 = (($253) + 520192)|0;
   $255 = $254 >>> 16;
   $256 = $255 & 4;
   $257 = $256 | $252;
   $258 = $253 << $256;
   $259 = (($258) + 245760)|0;
   $260 = $259 >>> 16;
   $261 = $260 & 2;
   $262 = $257 | $261;
   $263 = (14 - ($262))|0;
   $264 = $258 << $261;
   $265 = $264 >>> 15;
   $266 = (($263) + ($265))|0;
   $267 = $266 << 1;
   $268 = (($266) + 7)|0;
   $269 = $psize$1 >>> $268;
   $270 = $269 & 1;
   $271 = $270 | $267;
   $I18$0 = $271;
  }
 }
 $272 = (596 + ($I18$0<<2)|0);
 $273 = ((($p$0)) + 28|0);
 HEAP32[$273>>2] = $I18$0;
 $274 = ((($p$0)) + 16|0);
 $275 = ((($p$0)) + 20|0);
 HEAP32[$275>>2] = 0;
 HEAP32[$274>>2] = 0;
 $276 = HEAP32[(296)>>2]|0;
 $277 = 1 << $I18$0;
 $278 = $276 & $277;
 $279 = ($278|0)==(0);
 L199: do {
  if ($279) {
   $280 = $276 | $277;
   HEAP32[(296)>>2] = $280;
   HEAP32[$272>>2] = $p$0;
   $281 = ((($p$0)) + 24|0);
   HEAP32[$281>>2] = $272;
   $282 = ((($p$0)) + 12|0);
   HEAP32[$282>>2] = $p$0;
   $283 = ((($p$0)) + 8|0);
   HEAP32[$283>>2] = $p$0;
  } else {
   $284 = HEAP32[$272>>2]|0;
   $285 = ((($284)) + 4|0);
   $286 = HEAP32[$285>>2]|0;
   $287 = $286 & -8;
   $288 = ($287|0)==($psize$1|0);
   L202: do {
    if ($288) {
     $T$0$lcssa = $284;
    } else {
     $289 = ($I18$0|0)==(31);
     $290 = $I18$0 >>> 1;
     $291 = (25 - ($290))|0;
     $292 = $289 ? 0 : $291;
     $293 = $psize$1 << $292;
     $K19$052 = $293;$T$051 = $284;
     while(1) {
      $300 = $K19$052 >>> 31;
      $301 = (((($T$051)) + 16|0) + ($300<<2)|0);
      $296 = HEAP32[$301>>2]|0;
      $302 = ($296|0)==(0|0);
      if ($302) {
       $$lcssa = $301;$T$051$lcssa = $T$051;
       break;
      }
      $294 = $K19$052 << 1;
      $295 = ((($296)) + 4|0);
      $297 = HEAP32[$295>>2]|0;
      $298 = $297 & -8;
      $299 = ($298|0)==($psize$1|0);
      if ($299) {
       $T$0$lcssa = $296;
       break L202;
      } else {
       $K19$052 = $294;$T$051 = $296;
      }
     }
     $303 = HEAP32[(308)>>2]|0;
     $304 = ($$lcssa>>>0)<($303>>>0);
     if ($304) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$$lcssa>>2] = $p$0;
      $305 = ((($p$0)) + 24|0);
      HEAP32[$305>>2] = $T$051$lcssa;
      $306 = ((($p$0)) + 12|0);
      HEAP32[$306>>2] = $p$0;
      $307 = ((($p$0)) + 8|0);
      HEAP32[$307>>2] = $p$0;
      break L199;
     }
    }
   } while(0);
   $308 = ((($T$0$lcssa)) + 8|0);
   $309 = HEAP32[$308>>2]|0;
   $310 = HEAP32[(308)>>2]|0;
   $311 = ($309>>>0)>=($310>>>0);
   $not$ = ($T$0$lcssa>>>0)>=($310>>>0);
   $312 = $311 & $not$;
   if ($312) {
    $313 = ((($309)) + 12|0);
    HEAP32[$313>>2] = $p$0;
    HEAP32[$308>>2] = $p$0;
    $314 = ((($p$0)) + 8|0);
    HEAP32[$314>>2] = $309;
    $315 = ((($p$0)) + 12|0);
    HEAP32[$315>>2] = $T$0$lcssa;
    $316 = ((($p$0)) + 24|0);
    HEAP32[$316>>2] = 0;
    break;
   } else {
    _abort();
    // unreachable;
   }
  }
 } while(0);
 $317 = HEAP32[(324)>>2]|0;
 $318 = (($317) + -1)|0;
 HEAP32[(324)>>2] = $318;
 $319 = ($318|0)==(0);
 if ($319) {
  $sp$0$in$i = (748);
 } else {
  return;
 }
 while(1) {
  $sp$0$i = HEAP32[$sp$0$in$i>>2]|0;
  $320 = ($sp$0$i|0)==(0|0);
  $321 = ((($sp$0$i)) + 8|0);
  if ($320) {
   break;
  } else {
   $sp$0$in$i = $321;
  }
 }
 HEAP32[(324)>>2] = -1;
 return;
}
function runPostSets() {
}
function _memset(ptr, value, num) {
    ptr = ptr|0; value = value|0; num = num|0;
    var stop = 0, value4 = 0, stop4 = 0, unaligned = 0;
    stop = (ptr + num)|0;
    if ((num|0) >= 20) {
      // This is unaligned, but quite large, so work hard to get to aligned settings
      value = value & 0xff;
      unaligned = ptr & 3;
      value4 = value | (value << 8) | (value << 16) | (value << 24);
      stop4 = stop & ~3;
      if (unaligned) {
        unaligned = (ptr + 4 - unaligned)|0;
        while ((ptr|0) < (unaligned|0)) { // no need to check for stop, since we have large num
          HEAP8[((ptr)>>0)]=value;
          ptr = (ptr+1)|0;
        }
      }
      while ((ptr|0) < (stop4|0)) {
        HEAP32[((ptr)>>2)]=value4;
        ptr = (ptr+4)|0;
      }
    }
    while ((ptr|0) < (stop|0)) {
      HEAP8[((ptr)>>0)]=value;
      ptr = (ptr+1)|0;
    }
    return (ptr-num)|0;
}
function _i64Subtract(a, b, c, d) {
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a - c)>>>0;
    h = (b - d)>>>0;
    h = (b - d - (((c>>>0) > (a>>>0))|0))>>>0; // Borrow one from high word to low word on underflow.
    return ((tempRet0 = h,l|0)|0);
}
function _i64Add(a, b, c, d) {
    /*
      x = a + b*2^32
      y = c + d*2^32
      result = l + h*2^32
    */
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a + c)>>>0;
    h = (b + d + (((l>>>0) < (a>>>0))|0))>>>0; // Add carry from low word to high word on overflow.
    return ((tempRet0 = h,l|0)|0);
}
function _bitshift64Lshr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >>> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = 0;
    return (high >>> (bits - 32))|0;
}
function _bitshift64Shl(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = (high << bits) | ((low&(ander << (32 - bits))) >>> (32 - bits));
      return low << bits;
    }
    tempRet0 = low << (bits - 32);
    return 0;
}
function _memcpy(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    if ((num|0) >= 4096) return _emscripten_memcpy_big(dest|0, src|0, num|0)|0;
    ret = dest|0;
    if ((dest&3) == (src&3)) {
      while (dest & 3) {
        if ((num|0) == 0) return ret|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
        dest = (dest+1)|0;
        src = (src+1)|0;
        num = (num-1)|0;
      }
      while ((num|0) >= 4) {
        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);
        dest = (dest+4)|0;
        src = (src+4)|0;
        num = (num-4)|0;
      }
    }
    while ((num|0) > 0) {
      HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      dest = (dest+1)|0;
      src = (src+1)|0;
      num = (num-1)|0;
    }
    return ret|0;
}
function _bitshift64Ashr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = (high|0) < 0 ? -1 : 0;
    return (high >> (bits - 32))|0;
  }
function _llvm_cttz_i32(x) {
    x = x|0;
    var ret = 0;
    ret = ((HEAP8[(((cttz_i8)+(x & 0xff))>>0)])|0);
    if ((ret|0) < 8) return ret|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 8)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 8)|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 16)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 16)|0;
    return (((HEAP8[(((cttz_i8)+(x >>> 24))>>0)])|0) + 24)|0;
  }

// ======== compiled code from system/lib/compiler-rt , see readme therein
function ___muldsi3($a, $b) {
  $a = $a | 0;
  $b = $b | 0;
  var $1 = 0, $2 = 0, $3 = 0, $6 = 0, $8 = 0, $11 = 0, $12 = 0;
  $1 = $a & 65535;
  $2 = $b & 65535;
  $3 = Math_imul($2, $1) | 0;
  $6 = $a >>> 16;
  $8 = ($3 >>> 16) + (Math_imul($2, $6) | 0) | 0;
  $11 = $b >>> 16;
  $12 = Math_imul($11, $1) | 0;
  return (tempRet0 = (($8 >>> 16) + (Math_imul($11, $6) | 0) | 0) + ((($8 & 65535) + $12 | 0) >>> 16) | 0, 0 | ($8 + $12 << 16 | $3 & 65535)) | 0;
}
function ___divdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $6$0 = 0, $7$0 = 0, $7$1 = 0, $8$0 = 0, $10$0 = 0;
  $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
  $4$1 = tempRet0;
  $6$0 = _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0;
  $7$0 = $2$0 ^ $1$0;
  $7$1 = $2$1 ^ $1$1;
  $8$0 = ___udivmoddi4($4$0, $4$1, $6$0, tempRet0, 0) | 0;
  $10$0 = _i64Subtract($8$0 ^ $7$0, tempRet0 ^ $7$1, $7$0, $7$1) | 0;
  return $10$0 | 0;
}
function ___remdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $rem = 0, $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $6$0 = 0, $10$0 = 0, $10$1 = 0, __stackBase__ = 0;
  __stackBase__ = STACKTOP;
  STACKTOP = STACKTOP + 16 | 0;
  $rem = __stackBase__ | 0;
  $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
  $4$1 = tempRet0;
  $6$0 = _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0;
  ___udivmoddi4($4$0, $4$1, $6$0, tempRet0, $rem) | 0;
  $10$0 = _i64Subtract(HEAP32[$rem >> 2] ^ $1$0, HEAP32[$rem + 4 >> 2] ^ $1$1, $1$0, $1$1) | 0;
  $10$1 = tempRet0;
  STACKTOP = __stackBase__;
  return (tempRet0 = $10$1, $10$0) | 0;
}
function ___muldi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $x_sroa_0_0_extract_trunc = 0, $y_sroa_0_0_extract_trunc = 0, $1$0 = 0, $1$1 = 0, $2 = 0;
  $x_sroa_0_0_extract_trunc = $a$0;
  $y_sroa_0_0_extract_trunc = $b$0;
  $1$0 = ___muldsi3($x_sroa_0_0_extract_trunc, $y_sroa_0_0_extract_trunc) | 0;
  $1$1 = tempRet0;
  $2 = Math_imul($a$1, $y_sroa_0_0_extract_trunc) | 0;
  return (tempRet0 = ((Math_imul($b$1, $x_sroa_0_0_extract_trunc) | 0) + $2 | 0) + $1$1 | $1$1 & 0, 0 | $1$0 & -1) | 0;
}
function ___udivdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $1$0 = 0;
  $1$0 = ___udivmoddi4($a$0, $a$1, $b$0, $b$1, 0) | 0;
  return $1$0 | 0;
}
function ___uremdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $rem = 0, __stackBase__ = 0;
  __stackBase__ = STACKTOP;
  STACKTOP = STACKTOP + 16 | 0;
  $rem = __stackBase__ | 0;
  ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) | 0;
  STACKTOP = __stackBase__;
  return (tempRet0 = HEAP32[$rem + 4 >> 2] | 0, HEAP32[$rem >> 2] | 0) | 0;
}
function ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  $rem = $rem | 0;
  var $n_sroa_0_0_extract_trunc = 0, $n_sroa_1_4_extract_shift$0 = 0, $n_sroa_1_4_extract_trunc = 0, $d_sroa_0_0_extract_trunc = 0, $d_sroa_1_4_extract_shift$0 = 0, $d_sroa_1_4_extract_trunc = 0, $4 = 0, $17 = 0, $37 = 0, $49 = 0, $51 = 0, $57 = 0, $58 = 0, $66 = 0, $78 = 0, $86 = 0, $88 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $105 = 0, $117 = 0, $119 = 0, $125 = 0, $126 = 0, $130 = 0, $q_sroa_1_1_ph = 0, $q_sroa_0_1_ph = 0, $r_sroa_1_1_ph = 0, $r_sroa_0_1_ph = 0, $sr_1_ph = 0, $d_sroa_0_0_insert_insert99$0 = 0, $d_sroa_0_0_insert_insert99$1 = 0, $137$0 = 0, $137$1 = 0, $carry_0203 = 0, $sr_1202 = 0, $r_sroa_0_1201 = 0, $r_sroa_1_1200 = 0, $q_sroa_0_1199 = 0, $q_sroa_1_1198 = 0, $147 = 0, $149 = 0, $r_sroa_0_0_insert_insert42$0 = 0, $r_sroa_0_0_insert_insert42$1 = 0, $150$1 = 0, $151$0 = 0, $152 = 0, $154$0 = 0, $r_sroa_0_0_extract_trunc = 0, $r_sroa_1_4_extract_trunc = 0, $155 = 0, $carry_0_lcssa$0 = 0, $carry_0_lcssa$1 = 0, $r_sroa_0_1_lcssa = 0, $r_sroa_1_1_lcssa = 0, $q_sroa_0_1_lcssa = 0, $q_sroa_1_1_lcssa = 0, $q_sroa_0_0_insert_ext75$0 = 0, $q_sroa_0_0_insert_ext75$1 = 0, $q_sroa_0_0_insert_insert77$1 = 0, $_0$0 = 0, $_0$1 = 0;
  $n_sroa_0_0_extract_trunc = $a$0;
  $n_sroa_1_4_extract_shift$0 = $a$1;
  $n_sroa_1_4_extract_trunc = $n_sroa_1_4_extract_shift$0;
  $d_sroa_0_0_extract_trunc = $b$0;
  $d_sroa_1_4_extract_shift$0 = $b$1;
  $d_sroa_1_4_extract_trunc = $d_sroa_1_4_extract_shift$0;
  if (($n_sroa_1_4_extract_trunc | 0) == 0) {
    $4 = ($rem | 0) != 0;
    if (($d_sroa_1_4_extract_trunc | 0) == 0) {
      if ($4) {
        HEAP32[$rem >> 2] = ($n_sroa_0_0_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
        HEAP32[$rem + 4 >> 2] = 0;
      }
      $_0$1 = 0;
      $_0$0 = ($n_sroa_0_0_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    } else {
      if (!$4) {
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      HEAP32[$rem >> 2] = $a$0 & -1;
      HEAP32[$rem + 4 >> 2] = $a$1 & 0;
      $_0$1 = 0;
      $_0$0 = 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    }
  }
  $17 = ($d_sroa_1_4_extract_trunc | 0) == 0;
  do {
    if (($d_sroa_0_0_extract_trunc | 0) == 0) {
      if ($17) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
          HEAP32[$rem + 4 >> 2] = 0;
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      if (($n_sroa_0_0_extract_trunc | 0) == 0) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = 0;
          HEAP32[$rem + 4 >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_1_4_extract_trunc >>> 0);
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_1_4_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $37 = $d_sroa_1_4_extract_trunc - 1 | 0;
      if (($37 & $d_sroa_1_4_extract_trunc | 0) == 0) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = 0 | $a$0 & -1;
          HEAP32[$rem + 4 >> 2] = $37 & $n_sroa_1_4_extract_trunc | $a$1 & 0;
        }
        $_0$1 = 0;
        $_0$0 = $n_sroa_1_4_extract_trunc >>> ((_llvm_cttz_i32($d_sroa_1_4_extract_trunc | 0) | 0) >>> 0);
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $49 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
      $51 = $49 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
      if ($51 >>> 0 <= 30) {
        $57 = $51 + 1 | 0;
        $58 = 31 - $51 | 0;
        $sr_1_ph = $57;
        $r_sroa_0_1_ph = $n_sroa_1_4_extract_trunc << $58 | $n_sroa_0_0_extract_trunc >>> ($57 >>> 0);
        $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($57 >>> 0);
        $q_sroa_0_1_ph = 0;
        $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $58;
        break;
      }
      if (($rem | 0) == 0) {
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      HEAP32[$rem >> 2] = 0 | $a$0 & -1;
      HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
      $_0$1 = 0;
      $_0$0 = 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    } else {
      if (!$17) {
        $117 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
        $119 = $117 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        if ($119 >>> 0 <= 31) {
          $125 = $119 + 1 | 0;
          $126 = 31 - $119 | 0;
          $130 = $119 - 31 >> 31;
          $sr_1_ph = $125;
          $r_sroa_0_1_ph = $n_sroa_0_0_extract_trunc >>> ($125 >>> 0) & $130 | $n_sroa_1_4_extract_trunc << $126;
          $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($125 >>> 0) & $130;
          $q_sroa_0_1_ph = 0;
          $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $126;
          break;
        }
        if (($rem | 0) == 0) {
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        HEAP32[$rem >> 2] = 0 | $a$0 & -1;
        HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $66 = $d_sroa_0_0_extract_trunc - 1 | 0;
      if (($66 & $d_sroa_0_0_extract_trunc | 0) != 0) {
        $86 = (Math_clz32($d_sroa_0_0_extract_trunc | 0) | 0) + 33 | 0;
        $88 = $86 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        $89 = 64 - $88 | 0;
        $91 = 32 - $88 | 0;
        $92 = $91 >> 31;
        $95 = $88 - 32 | 0;
        $105 = $95 >> 31;
        $sr_1_ph = $88;
        $r_sroa_0_1_ph = $91 - 1 >> 31 & $n_sroa_1_4_extract_trunc >>> ($95 >>> 0) | ($n_sroa_1_4_extract_trunc << $91 | $n_sroa_0_0_extract_trunc >>> ($88 >>> 0)) & $105;
        $r_sroa_1_1_ph = $105 & $n_sroa_1_4_extract_trunc >>> ($88 >>> 0);
        $q_sroa_0_1_ph = $n_sroa_0_0_extract_trunc << $89 & $92;
        $q_sroa_1_1_ph = ($n_sroa_1_4_extract_trunc << $89 | $n_sroa_0_0_extract_trunc >>> ($95 >>> 0)) & $92 | $n_sroa_0_0_extract_trunc << $91 & $88 - 33 >> 31;
        break;
      }
      if (($rem | 0) != 0) {
        HEAP32[$rem >> 2] = $66 & $n_sroa_0_0_extract_trunc;
        HEAP32[$rem + 4 >> 2] = 0;
      }
      if (($d_sroa_0_0_extract_trunc | 0) == 1) {
        $_0$1 = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$0 = 0 | $a$0 & -1;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      } else {
        $78 = _llvm_cttz_i32($d_sroa_0_0_extract_trunc | 0) | 0;
        $_0$1 = 0 | $n_sroa_1_4_extract_trunc >>> ($78 >>> 0);
        $_0$0 = $n_sroa_1_4_extract_trunc << 32 - $78 | $n_sroa_0_0_extract_trunc >>> ($78 >>> 0) | 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
    }
  } while (0);
  if (($sr_1_ph | 0) == 0) {
    $q_sroa_1_1_lcssa = $q_sroa_1_1_ph;
    $q_sroa_0_1_lcssa = $q_sroa_0_1_ph;
    $r_sroa_1_1_lcssa = $r_sroa_1_1_ph;
    $r_sroa_0_1_lcssa = $r_sroa_0_1_ph;
    $carry_0_lcssa$1 = 0;
    $carry_0_lcssa$0 = 0;
  } else {
    $d_sroa_0_0_insert_insert99$0 = 0 | $b$0 & -1;
    $d_sroa_0_0_insert_insert99$1 = $d_sroa_1_4_extract_shift$0 | $b$1 & 0;
    $137$0 = _i64Add($d_sroa_0_0_insert_insert99$0 | 0, $d_sroa_0_0_insert_insert99$1 | 0, -1, -1) | 0;
    $137$1 = tempRet0;
    $q_sroa_1_1198 = $q_sroa_1_1_ph;
    $q_sroa_0_1199 = $q_sroa_0_1_ph;
    $r_sroa_1_1200 = $r_sroa_1_1_ph;
    $r_sroa_0_1201 = $r_sroa_0_1_ph;
    $sr_1202 = $sr_1_ph;
    $carry_0203 = 0;
    while (1) {
      $147 = $q_sroa_0_1199 >>> 31 | $q_sroa_1_1198 << 1;
      $149 = $carry_0203 | $q_sroa_0_1199 << 1;
      $r_sroa_0_0_insert_insert42$0 = 0 | ($r_sroa_0_1201 << 1 | $q_sroa_1_1198 >>> 31);
      $r_sroa_0_0_insert_insert42$1 = $r_sroa_0_1201 >>> 31 | $r_sroa_1_1200 << 1 | 0;
      _i64Subtract($137$0, $137$1, $r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1) | 0;
      $150$1 = tempRet0;
      $151$0 = $150$1 >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1;
      $152 = $151$0 & 1;
      $154$0 = _i64Subtract($r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1, $151$0 & $d_sroa_0_0_insert_insert99$0, ((($150$1 | 0) < 0 ? -1 : 0) >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1) & $d_sroa_0_0_insert_insert99$1) | 0;
      $r_sroa_0_0_extract_trunc = $154$0;
      $r_sroa_1_4_extract_trunc = tempRet0;
      $155 = $sr_1202 - 1 | 0;
      if (($155 | 0) == 0) {
        break;
      } else {
        $q_sroa_1_1198 = $147;
        $q_sroa_0_1199 = $149;
        $r_sroa_1_1200 = $r_sroa_1_4_extract_trunc;
        $r_sroa_0_1201 = $r_sroa_0_0_extract_trunc;
        $sr_1202 = $155;
        $carry_0203 = $152;
      }
    }
    $q_sroa_1_1_lcssa = $147;
    $q_sroa_0_1_lcssa = $149;
    $r_sroa_1_1_lcssa = $r_sroa_1_4_extract_trunc;
    $r_sroa_0_1_lcssa = $r_sroa_0_0_extract_trunc;
    $carry_0_lcssa$1 = 0;
    $carry_0_lcssa$0 = $152;
  }
  $q_sroa_0_0_insert_ext75$0 = $q_sroa_0_1_lcssa;
  $q_sroa_0_0_insert_ext75$1 = 0;
  $q_sroa_0_0_insert_insert77$1 = $q_sroa_1_1_lcssa | $q_sroa_0_0_insert_ext75$1;
  if (($rem | 0) != 0) {
    HEAP32[$rem >> 2] = 0 | $r_sroa_0_1_lcssa;
    HEAP32[$rem + 4 >> 2] = $r_sroa_1_1_lcssa | 0;
  }
  $_0$1 = (0 | $q_sroa_0_0_insert_ext75$0) >>> 31 | $q_sroa_0_0_insert_insert77$1 << 1 | ($q_sroa_0_0_insert_ext75$1 << 1 | $q_sroa_0_0_insert_ext75$0 >>> 31) & 0 | $carry_0_lcssa$1;
  $_0$0 = ($q_sroa_0_0_insert_ext75$0 << 1 | 0 >>> 31) & -2 | $carry_0_lcssa$0;
  return (tempRet0 = $_0$1, $_0$0) | 0;
}
// =======================================================================



  
function dynCall_iiii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  return FUNCTION_TABLE_iiii[index&15](a1|0,a2|0,a3|0)|0;
}


function dynCall_vi(index,a1) {
  index = index|0;
  a1=a1|0;
  FUNCTION_TABLE_vi[index&15](a1|0);
}


function dynCall_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
  FUNCTION_TABLE_viiiiii[index&15](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0);
}


function dynCall_viiiii(index,a1,a2,a3,a4,a5) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
  FUNCTION_TABLE_viiiii[index&15](a1|0,a2|0,a3|0,a4|0,a5|0);
}


function dynCall_viiii(index,a1,a2,a3,a4) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  FUNCTION_TABLE_viiii[index&15](a1|0,a2|0,a3|0,a4|0);
}

function b0(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_iiii(0);return 0;
}
function b1(p0) {
 p0 = p0|0; nullFunc_vi(1);
}
function b2(p0,p1,p2,p3,p4,p5) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0; nullFunc_viiiiii(2);
}
function b3(p0,p1,p2,p3,p4) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; nullFunc_viiiii(3);
}
function b4(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_viiii(4);
}

// EMSCRIPTEN_END_FUNCS
var FUNCTION_TABLE_iiii = [b0,b0,b0,b0,b0,__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv,b0,b0,b0,b0,b0,b0,b0,_sn_write,b0,b0];
var FUNCTION_TABLE_vi = [b1,__ZN10__cxxabiv116__shim_type_infoD2Ev,__ZN10__cxxabiv117__class_type_infoD0Ev,__ZNK10__cxxabiv116__shim_type_info5noop1Ev,__ZNK10__cxxabiv116__shim_type_info5noop2Ev,b1,b1,b1,b1,__ZN10__cxxabiv120__si_class_type_infoD0Ev,b1,b1,b1,b1,b1,b1];
var FUNCTION_TABLE_viiiiii = [b2,b2,b2,b2,b2,b2,__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b2,b2,b2,__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b2,b2,b2,b2,b2];
var FUNCTION_TABLE_viiiii = [b3,b3,b3,b3,b3,b3,b3,__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,b3,b3,b3,__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,b3,b3,b3,b3];
var FUNCTION_TABLE_viiii = [b4,b4,b4,b4,b4,b4,b4,b4,__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,b4,b4,b4,__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,b4,b4,b4];

  return { ___cxa_can_catch: ___cxa_can_catch, _free: _free, ___cxa_is_pointer_type: ___cxa_is_pointer_type, _i64Add: _i64Add, __GetNumJoints: __GetNumJoints, _i64Subtract: _i64Subtract, _memset: _memset, _malloc: _malloc, _memcpy: _memcpy, __ComputeFk: __ComputeFk, _bitshift64Lshr: _bitshift64Lshr, _bitshift64Shl: _bitshift64Shl, runPostSets: runPostSets, stackAlloc: stackAlloc, stackSave: stackSave, stackRestore: stackRestore, establishStackSpace: establishStackSpace, setThrew: setThrew, setTempRet0: setTempRet0, getTempRet0: getTempRet0, dynCall_iiii: dynCall_iiii, dynCall_vi: dynCall_vi, dynCall_viiiiii: dynCall_viiiiii, dynCall_viiiii: dynCall_viiiii, dynCall_viiii: dynCall_viiii };
})
// EMSCRIPTEN_END_ASM
(Module.asmGlobalArg, Module.asmLibraryArg, buffer);
var real____cxa_can_catch = asm["___cxa_can_catch"]; asm["___cxa_can_catch"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real____cxa_can_catch.apply(null, arguments);
};

var real__free = asm["_free"]; asm["_free"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__free.apply(null, arguments);
};

var real____cxa_is_pointer_type = asm["___cxa_is_pointer_type"]; asm["___cxa_is_pointer_type"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real____cxa_is_pointer_type.apply(null, arguments);
};

var real__i64Add = asm["_i64Add"]; asm["_i64Add"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__i64Add.apply(null, arguments);
};

var real___GetNumJoints = asm["__GetNumJoints"]; asm["__GetNumJoints"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real___GetNumJoints.apply(null, arguments);
};

var real__i64Subtract = asm["_i64Subtract"]; asm["_i64Subtract"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__i64Subtract.apply(null, arguments);
};

var real__malloc = asm["_malloc"]; asm["_malloc"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__malloc.apply(null, arguments);
};

var real___ComputeFk = asm["__ComputeFk"]; asm["__ComputeFk"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real___ComputeFk.apply(null, arguments);
};

var real__bitshift64Lshr = asm["_bitshift64Lshr"]; asm["_bitshift64Lshr"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__bitshift64Lshr.apply(null, arguments);
};

var real__bitshift64Shl = asm["_bitshift64Shl"]; asm["_bitshift64Shl"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__bitshift64Shl.apply(null, arguments);
};
var ___cxa_can_catch = Module["___cxa_can_catch"] = asm["___cxa_can_catch"];
var _free = Module["_free"] = asm["_free"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var ___cxa_is_pointer_type = Module["___cxa_is_pointer_type"] = asm["___cxa_is_pointer_type"];
var _i64Add = Module["_i64Add"] = asm["_i64Add"];
var __GetNumJoints = Module["__GetNumJoints"] = asm["__GetNumJoints"];
var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
var _memset = Module["_memset"] = asm["_memset"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var __ComputeFk = Module["__ComputeFk"] = asm["__ComputeFk"];
var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];
;

Runtime.stackAlloc = asm['stackAlloc'];
Runtime.stackSave = asm['stackSave'];
Runtime.stackRestore = asm['stackRestore'];
Runtime.establishStackSpace = asm['establishStackSpace'];

Runtime.setTempRet0 = asm['setTempRet0'];
Runtime.getTempRet0 = asm['getTempRet0'];



// === Auto-generated postamble setup entry stuff ===


function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var preloadStartTime = null;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun']) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}

Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');

  args = args || [];

  ensureInitRuntime();

  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString(Module['thisProgram']), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);


  try {

    var ret = Module['_main'](argc, argv, 0);


    // if we're not running an evented main loop, it's time to exit
    exit(ret, /* implicit = */ true);
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
      throw e;
    }
  } finally {
    calledMain = true;
  }
}




function run(args) {
  args = args || Module['arguments'];

  if (preloadStartTime === null) preloadStartTime = Date.now();

  if (runDependencies > 0) {
    Module.printErr('run() called, but dependencies remain, so not running');
    return;
  }

  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    if (ABORT) return; 

    ensureInitRuntime();

    preMain();

    if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
      Module.printErr('pre-main prep time: ' + (Date.now() - preloadStartTime) + ' ms');
    }

    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();

    if (Module['_main'] && shouldRunNow) Module['callMain'](args);

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;

function exit(status, implicit) {
  if (implicit && Module['noExitRuntime']) {
    Module.printErr('exit(' + status + ') implicitly called by end of main(), but noExitRuntime, so not exiting the runtime (you can use emscripten_force_exit, if you want to force a true shutdown)');
    return;
  }

  if (Module['noExitRuntime']) {
    Module.printErr('exit(' + status + ') called, but noExitRuntime, so halting execution but not exiting the runtime or preventing further async execution (you can use emscripten_force_exit, if you want to force a true shutdown)');
  } else {

    ABORT = true;
    EXITSTATUS = status;
    STACKTOP = initialStackTop;

    exitRuntime();

    if (Module['onExit']) Module['onExit'](status);
  }

  if (ENVIRONMENT_IS_NODE) {
    // Work around a node.js bug where stdout buffer is not flushed at process exit:
    // Instead of process.exit() directly, wait for stdout flush event.
    // See https://github.com/joyent/node/issues/1669 and https://github.com/kripken/emscripten/issues/2582
    // Workaround is based on https://github.com/RReverser/acorn/commit/50ab143cecc9ed71a2d66f78b4aec3bb2e9844f6
    process['stdout']['once']('drain', function () {
      process['exit'](status);
    });
    console.log(' '); // Make sure to print something to force the drain event to occur, in case the stdout buffer was empty.
    // Work around another node bug where sometimes 'drain' is never fired - make another effort
    // to emit the exit status, after a significant delay (if node hasn't fired drain by then, give up)
    setTimeout(function() {
      process['exit'](status);
    }, 500);
  } else
  if (ENVIRONMENT_IS_SHELL && typeof quit === 'function') {
    quit(status);
  }
  // if we reach here, we must throw an exception to halt the current execution
  throw new ExitStatus(status);
}
Module['exit'] = Module.exit = exit;

var abortDecorators = [];

function abort(what) {
  if (what !== undefined) {
    Module.print(what);
    Module.printErr(what);
    what = JSON.stringify(what)
  } else {
    what = '';
  }

  ABORT = true;
  EXITSTATUS = 1;

  var extra = '';

  var output = 'abort(' + what + ') at ' + stackTrace() + extra;
  if (abortDecorators) {
    abortDecorators.forEach(function(decorator) {
      output = decorator(output, what);
    });
  }
  throw output;
}
Module['abort'] = Module.abort = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

// shouldRunNow refers to calling main(), not run().
var shouldRunNow = false;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}

Module["noExitRuntime"] = true;

run();

// {{POST_RUN_ADDITIONS}}






// {{MODULE_ADDITIONS}}



Module["solverInfo"] = {"robotname":"darpa_arm_robot","manipname":"rightarm","scene":"robots/darpa-arm.zae","basePath":"./solvers/darpa_arm_robot_rightarm"};
Module.GetNumJoints = Module.cwrap('_GetNumJoints', 'int');

var _ComputeFk = Module.cwrap('_ComputeFk', 'string', ['array']);
Module.ComputeFk = function (jointAngleArray) {
    if (Module.GetNumJoints() != jointAngleArray.length) {
        console.warn('input array should have length ' + Module.GetNumJoints() + ', truncating input'),
        jointAngleArray = jointAngleArray.slice(0, Module.GetNumJoints())
    }
    var raw = _ComputeFk(jointAngleArray);
    var splitRaw = raw.split(',').map(parseFloat)
    var trans = splitRaw.slice(0, 3);
    var rot = splitRaw.slice(3, 3 + 9);

    return {
        raw: raw,
        trans: trans,
        rot: rot,
        matrix: [
            //rot[0], rot[1], rot[2], trans[0],
            //rot[3], rot[4], rot[5], trans[1],
            //rot[6], rot[7], rot[8], trans[2],
            //rot[0], rot[1], rot[2], 0.0,
            //rot[3], rot[4], rot[5], 0.0,
            //rot[6], rot[7], rot[8], 0.0,
            1.0, 0.0, 0.0, trans[0],
            0.0, 1.0, 0.0, trans[1],
            0.0, 0.0, 1.0, trans[2],
            //1.0, 0.0, 0.0, 0.0,
            //0.0, 1.0, 0.0, 0.0,
            //0.0, 0.0, 1.0, 0.0,
            0.0, 0.0, 0.0, 1.0
        ]
    }
};

if (ENVIRONMENT_IS_NODE) {
    module.exports = Module;
}
if (ENVIRONMENT_IS_WEB) {
    window.Module = Module;
}
//# sourceMappingURL=darpa_arm_robot_rightarm.html.map