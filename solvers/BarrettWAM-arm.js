// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = (typeof Module !== 'undefined' ? Module : null) || {};

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_WEB = typeof window === 'object';
var ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function' && !ENVIRONMENT_IS_WEB;
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  if (!Module['print']) Module['print'] = function print(x) {
    process['stdout'].write(x + '\n');
  };
  if (!Module['printErr']) Module['printErr'] = function printErr(x) {
    process['stderr'].write(x + '\n');
  };

  var nodeFS = require('fs');
  var nodePath = require('path');

  Module['read'] = function read(filename, binary) {
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename);
    }
    if (ret && !binary) ret = ret.toString();
    return ret;
  };

  Module['readBinary'] = function readBinary(filename) { return Module['read'](filename, true) };

  Module['load'] = function load(f) {
    globalEval(read(f));
  };

  if (!Module['thisProgram']) {
    if (process['argv'].length > 1) {
      Module['thisProgram'] = process['argv'][1].replace(/\\/g, '/');
    } else {
      Module['thisProgram'] = 'unknown-program';
    }
  }

  Module['arguments'] = process['argv'].slice(2);

  if (typeof module !== 'undefined') {
    module['exports'] = Module;
  }

  process['on']('uncaughtException', function(ex) {
    // suppress ExitStatus exceptions from showing an error
    if (!(ex instanceof ExitStatus)) {
      throw ex;
    }
  });

  Module['inspect'] = function () { return '[Emscripten Module object]'; };
}
else if (ENVIRONMENT_IS_SHELL) {
  if (!Module['print']) Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm

  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function read() { throw 'no read() available (jsc?)' };
  }

  Module['readBinary'] = function readBinary(f) {
    if (typeof readbuffer === 'function') {
      return new Uint8Array(readbuffer(f));
    }
    var data = read(f, 'binary');
    assert(typeof data === 'object');
    return data;
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof console !== 'undefined') {
    if (!Module['print']) Module['print'] = function print(x) {
      console.log(x);
    };
    if (!Module['printErr']) Module['printErr'] = function printErr(x) {
      console.log(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }

  if (ENVIRONMENT_IS_WORKER) {
    Module['load'] = importScripts;
  }

  if (typeof Module['setWindowTitle'] === 'undefined') {
    Module['setWindowTitle'] = function(title) { document.title = title };
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
if (!Module['thisProgram']) {
  Module['thisProgram'] = './this.program';
}

// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];

// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}



// === Preamble library stuff ===

// Documentation for the public APIs defined in this file must be updated in: 
//    site/source/docs/api_reference/preamble.js.rst
// A prebuilt local version of the documentation is available at: 
//    site/build/text/docs/api_reference/preamble.js.txt
// You can also build docs locally as HTML or other formats in site/
// An online HTML version (which may be of a different version of Emscripten)
//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  setTempRet0: function (value) {
    tempRet0 = value;
  },
  getTempRet0: function () {
    return tempRet0;
  },
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  STACK_ALIGN: 16,
  prepVararg: function (ptr, type) {
    if (type === 'double' || type === 'i64') {
      // move so the load is aligned
      if (ptr & 7) {
        assert((ptr & 7) === 4);
        ptr += 4;
      }
    } else {
      assert((ptr & 3) === 0);
    }
    return ptr;
  },
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      if (!args.splice) args = Array.prototype.slice.call(args);
      args.splice(0, 0, ptr);
      return Module['dynCall_' + sig].apply(null, args);
    } else {
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[sig]) {
      Runtime.funcWrappers[sig] = {};
    }
    var sigCache = Runtime.funcWrappers[sig];
    if (!sigCache[func]) {
      sigCache[func] = function dynCall_wrapper() {
        return Runtime.dynCall(sig, func, arguments);
      };
    }
    return sigCache[func];
  },
  getCompilerSetting: function (name) {
    throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work';
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+15)&-16); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + size)|0;STATICTOP = (((STATICTOP)+15)&-16); return ret; },
  dynamicAlloc: function (size) { var ret = DYNAMICTOP;DYNAMICTOP = (DYNAMICTOP + size)|0;DYNAMICTOP = (((DYNAMICTOP)+15)&-16); if (DYNAMICTOP >= TOTAL_MEMORY) { var success = enlargeMemory(); if (!success) { DYNAMICTOP = ret; return 0; } }; return ret; },
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 16))*(quantum ? quantum : 16); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*4294967296.0)) : ((+((low>>>0)))+((+((high|0)))*4294967296.0))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}


Module['Runtime'] = Runtime;



//========================================
// Runtime essentials
//========================================

var __THREW__ = 0; // Used in checking for thrown exceptions.

var ABORT = false; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD, tempDouble, tempFloat;
var tempI64, tempI64b;
var tempRet0, tempRet1, tempRet2, tempRet3, tempRet4, tempRet5, tempRet6, tempRet7, tempRet8, tempRet9;

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  var func = Module['_' + ident]; // closure exported function
  if (!func) {
    try {
      func = eval('_' + ident); // explicit lookup
    } catch(e) {}
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}

var cwrap, ccall;
(function(){
  var JSfuncs = {
    // Helpers for cwrap -- it can't refer to Runtime directly because it might
    // be renamed by closure, instead it calls JSfuncs['stackSave'].body to find
    // out what the minified function name is.
    'stackSave': function() {
      Runtime.stackSave()
    },
    'stackRestore': function() {
      Runtime.stackRestore()
    },
    // type conversion from js to c
    'arrayToC' : function(arr) {
      var ret = Runtime.stackAlloc(arr.length);
      writeArrayToMemory(arr, ret);
      return ret;
    },
    'stringToC' : function(str) {
      var ret = 0;
      if (str !== null && str !== undefined && str !== 0) { // null string
        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\0'
        ret = Runtime.stackAlloc((str.length << 2) + 1);
        writeStringToMemory(str, ret);
      }
      return ret;
    }
  };
  // For fast lookup of conversion functions
  var toC = {'string' : JSfuncs['stringToC'], 'array' : JSfuncs['arrayToC']};

  // C calling interface. 
  ccall = function ccallFunc(ident, returnType, argTypes, args, opts) {
    var func = getCFunc(ident);
    var cArgs = [];
    var stack = 0;
    if (args) {
      for (var i = 0; i < args.length; i++) {
        var converter = toC[argTypes[i]];
        if (converter) {
          if (stack === 0) stack = Runtime.stackSave();
          cArgs[i] = converter(args[i]);
        } else {
          cArgs[i] = args[i];
        }
      }
    }
    var ret = func.apply(null, cArgs);
    if (returnType === 'string') ret = Pointer_stringify(ret);
    if (stack !== 0) {
      if (opts && opts.async) {
        EmterpreterAsync.asyncFinalizers.push(function() {
          Runtime.stackRestore(stack);
        });
        return;
      }
      Runtime.stackRestore(stack);
    }
    return ret;
  }

  var sourceRegex = /^function\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/;
  function parseJSFunc(jsfunc) {
    // Match the body and the return value of a javascript function source
    var parsed = jsfunc.toString().match(sourceRegex).slice(1);
    return {arguments : parsed[0], body : parsed[1], returnValue: parsed[2]}
  }
  var JSsource = {};
  for (var fun in JSfuncs) {
    if (JSfuncs.hasOwnProperty(fun)) {
      // Elements of toCsource are arrays of three items:
      // the code, and the return value
      JSsource[fun] = parseJSFunc(JSfuncs[fun]);
    }
  }

  
  cwrap = function cwrap(ident, returnType, argTypes) {
    argTypes = argTypes || [];
    var cfunc = getCFunc(ident);
    // When the function takes numbers and returns a number, we can just return
    // the original function
    var numericArgs = argTypes.every(function(type){ return type === 'number'});
    var numericRet = (returnType !== 'string');
    if ( numericRet && numericArgs) {
      return cfunc;
    }
    // Creation of the arguments list (["$1","$2",...,"$nargs"])
    var argNames = argTypes.map(function(x,i){return '$'+i});
    var funcstr = "(function(" + argNames.join(',') + ") {";
    var nargs = argTypes.length;
    if (!numericArgs) {
      // Generate the code needed to convert the arguments from javascript
      // values to pointers
      funcstr += 'var stack = ' + JSsource['stackSave'].body + ';';
      for (var i = 0; i < nargs; i++) {
        var arg = argNames[i], type = argTypes[i];
        if (type === 'number') continue;
        var convertCode = JSsource[type + 'ToC']; // [code, return]
        funcstr += 'var ' + convertCode.arguments + ' = ' + arg + ';';
        funcstr += convertCode.body + ';';
        funcstr += arg + '=' + convertCode.returnValue + ';';
      }
    }

    // When the code is compressed, the name of cfunc is not literally 'cfunc' anymore
    var cfuncname = parseJSFunc(function(){return cfunc}).returnValue;
    // Call the function
    funcstr += 'var ret = ' + cfuncname + '(' + argNames.join(',') + ');';
    if (!numericRet) { // Return type can only by 'string' or 'number'
      // Convert the result to a string
      var strgfy = parseJSFunc(function(){return Pointer_stringify}).returnValue;
      funcstr += 'ret = ' + strgfy + '(ret);';
    }
    if (!numericArgs) {
      // If we had a stack, restore it
      funcstr += JSsource['stackRestore'].body.replace('()', '(stack)') + ';';
    }
    funcstr += 'return ret})';
    return eval(funcstr);
  };
})();
Module["cwrap"] = cwrap;
Module["ccall"] = ccall;


function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[((ptr)>>0)]=value; break;
      case 'i8': HEAP8[((ptr)>>0)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module['setValue'] = setValue;


function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[((ptr)>>0)];
      case 'i8': return HEAP8[((ptr)>>0)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module['getValue'] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module['ALLOC_NORMAL'] = ALLOC_NORMAL;
Module['ALLOC_STACK'] = ALLOC_STACK;
Module['ALLOC_STATIC'] = ALLOC_STATIC;
Module['ALLOC_DYNAMIC'] = ALLOC_DYNAMIC;
Module['ALLOC_NONE'] = ALLOC_NONE;

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)>>0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}
Module['allocate'] = allocate;

// Allocate memory during any stage of startup - static memory early on, dynamic memory later, malloc when ready
function getMemory(size) {
  if (!staticSealed) return Runtime.staticAlloc(size);
  if (typeof _sbrk !== 'undefined' && !_sbrk.called) return Runtime.dynamicAlloc(size);
  return _malloc(size);
}

function Pointer_stringify(ptr, /* optional */ length) {
  if (length === 0 || !ptr) return '';
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = 0;
  var t;
  var i = 0;
  while (1) {
    t = HEAPU8[(((ptr)+(i))>>0)];
    hasUtf |= t;
    if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (hasUtf < 128) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }
  return Module['UTF8ToString'](ptr);
}
Module['Pointer_stringify'] = Pointer_stringify;

// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function AsciiToString(ptr) {
  var str = '';
  while (1) {
    var ch = HEAP8[((ptr++)>>0)];
    if (!ch) return str;
    str += String.fromCharCode(ch);
  }
}
Module['AsciiToString'] = AsciiToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.

function stringToAscii(str, outPtr) {
  return writeAsciiToMemory(str, outPtr, false);
}
Module['stringToAscii'] = stringToAscii;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the a given array that contains uint8 values, returns
// a copy of that string as a Javascript String object.

function UTF8ArrayToString(u8Array, idx) {
  var u0, u1, u2, u3, u4, u5;

  var str = '';
  while (1) {
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    u0 = u8Array[idx++];
    if (!u0) return str;
    if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }
    u1 = u8Array[idx++] & 63;
    if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }
    u2 = u8Array[idx++] & 63;
    if ((u0 & 0xF0) == 0xE0) {
      u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;
    } else {
      u3 = u8Array[idx++] & 63;
      if ((u0 & 0xF8) == 0xF0) {
        u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | u3;
      } else {
        u4 = u8Array[idx++] & 63;
        if ((u0 & 0xFC) == 0xF8) {
          u0 = ((u0 & 3) << 24) | (u1 << 18) | (u2 << 12) | (u3 << 6) | u4;
        } else {
          u5 = u8Array[idx++] & 63;
          u0 = ((u0 & 1) << 30) | (u1 << 24) | (u2 << 18) | (u3 << 12) | (u4 << 6) | u5;
        }
      }
    }
    if (u0 < 0x10000) {
      str += String.fromCharCode(u0);
    } else {
      var ch = u0 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    }
  }
}
Module['UTF8ArrayToString'] = UTF8ArrayToString;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF8ToString(ptr) {
  return UTF8ArrayToString(HEAPU8, ptr);
}
Module['UTF8ToString'] = UTF8ToString;

// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',
// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outU8Array: the array to copy to. Each index in this array is assumed to be one 8-byte element.
//   outIdx: The starting offset in the array to begin the copying.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.
//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.
    return 0;

  var startIdx = outIdx;
  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      if (outIdx >= endIdx) break;
      outU8Array[outIdx++] = u;
    } else if (u <= 0x7FF) {
      if (outIdx + 1 >= endIdx) break;
      outU8Array[outIdx++] = 0xC0 | (u >> 6);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0xFFFF) {
      if (outIdx + 2 >= endIdx) break;
      outU8Array[outIdx++] = 0xE0 | (u >> 12);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x1FFFFF) {
      if (outIdx + 3 >= endIdx) break;
      outU8Array[outIdx++] = 0xF0 | (u >> 18);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x3FFFFFF) {
      if (outIdx + 4 >= endIdx) break;
      outU8Array[outIdx++] = 0xF8 | (u >> 24);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else {
      if (outIdx + 5 >= endIdx) break;
      outU8Array[outIdx++] = 0xFC | (u >> 30);
      outU8Array[outIdx++] = 0x80 | ((u >> 24) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    }
  }
  // Null-terminate the pointer to the buffer.
  outU8Array[outIdx] = 0;
  return outIdx - startIdx;
}
Module['stringToUTF8Array'] = stringToUTF8Array;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8(str, outPtr, maxBytesToWrite) {
  return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);
}
Module['stringToUTF8'] = stringToUTF8;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF8(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      ++len;
    } else if (u <= 0x7FF) {
      len += 2;
    } else if (u <= 0xFFFF) {
      len += 3;
    } else if (u <= 0x1FFFFF) {
      len += 4;
    } else if (u <= 0x3FFFFFF) {
      len += 5;
    } else {
      len += 6;
    }
  }
  return len;
}
Module['lengthBytesUTF8'] = lengthBytesUTF8;

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF16ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
    if (codeUnit == 0)
      return str;
    ++i;
    // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
    str += String.fromCharCode(codeUnit);
  }
}
Module['UTF16ToString'] = UTF16ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.
// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF16(str, outPtr, maxBytesToWrite) {
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 2) return 0;
  maxBytesToWrite -= 2; // Null terminator.
  var startPtr = outPtr;
  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;
  for (var i = 0; i < numCharsToWrite; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[((outPtr)>>1)]=codeUnit;
    outPtr += 2;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[((outPtr)>>1)]=0;
  return outPtr - startPtr;
}
Module['stringToUTF16'] = stringToUTF16;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF16(str) {
  return str.length*2;
}
Module['lengthBytesUTF16'] = lengthBytesUTF16;

function UTF32ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}
Module['UTF32ToString'] = UTF32ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.
// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF32(str, outPtr, maxBytesToWrite) {
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 4) return 0;
  var startPtr = outPtr;
  var endPtr = startPtr + maxBytesToWrite - 4;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++i);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[((outPtr)>>2)]=codeUnit;
    outPtr += 4;
    if (outPtr + 4 > endPtr) break;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[((outPtr)>>2)]=0;
  return outPtr - startPtr;
}
Module['stringToUTF32'] = stringToUTF32;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF32(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i);
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.
    len += 4;
  }

  return len;
}
Module['lengthBytesUTF32'] = lengthBytesUTF32;

function demangle(func) {
  var hasLibcxxabi = !!Module['___cxa_demangle'];
  if (hasLibcxxabi) {
    try {
      var buf = _malloc(func.length);
      writeStringToMemory(func.substr(1), buf);
      var status = _malloc(4);
      var ret = Module['___cxa_demangle'](buf, 0, 0, status);
      if (getValue(status, 'i32') === 0 && ret) {
        return Pointer_stringify(ret);
      }
      // otherwise, libcxxabi failed, we can try ours which may return a partial result
    } catch(e) {
      // failure when using libcxxabi, we can try ours which may return a partial result
    } finally {
      if (buf) _free(buf);
      if (status) _free(status);
      if (ret) _free(ret);
    }
  }
  var i = 3;
  // params, etc.
  var basicTypes = {
    'v': 'void',
    'b': 'bool',
    'c': 'char',
    's': 'short',
    'i': 'int',
    'l': 'long',
    'f': 'float',
    'd': 'double',
    'w': 'wchar_t',
    'a': 'signed char',
    'h': 'unsigned char',
    't': 'unsigned short',
    'j': 'unsigned int',
    'm': 'unsigned long',
    'x': 'long long',
    'y': 'unsigned long long',
    'z': '...'
  };
  var subs = [];
  var first = true;
  function dump(x) {
    //return;
    if (x) Module.print(x);
    Module.print(func);
    var pre = '';
    for (var a = 0; a < i; a++) pre += ' ';
    Module.print (pre + '^');
  }
  function parseNested() {
    i++;
    if (func[i] === 'K') i++; // ignore const
    var parts = [];
    while (func[i] !== 'E') {
      if (func[i] === 'S') { // substitution
        i++;
        var next = func.indexOf('_', i);
        var num = func.substring(i, next) || 0;
        parts.push(subs[num] || '?');
        i = next+1;
        continue;
      }
      if (func[i] === 'C') { // constructor
        parts.push(parts[parts.length-1]);
        i += 2;
        continue;
      }
      var size = parseInt(func.substr(i));
      var pre = size.toString().length;
      if (!size || !pre) { i--; break; } // counter i++ below us
      var curr = func.substr(i + pre, size);
      parts.push(curr);
      subs.push(curr);
      i += pre + size;
    }
    i++; // skip E
    return parts;
  }
  function parse(rawList, limit, allowVoid) { // main parser
    limit = limit || Infinity;
    var ret = '', list = [];
    function flushList() {
      return '(' + list.join(', ') + ')';
    }
    var name;
    if (func[i] === 'N') {
      // namespaced N-E
      name = parseNested().join('::');
      limit--;
      if (limit === 0) return rawList ? [name] : name;
    } else {
      // not namespaced
      if (func[i] === 'K' || (first && func[i] === 'L')) i++; // ignore const and first 'L'
      var size = parseInt(func.substr(i));
      if (size) {
        var pre = size.toString().length;
        name = func.substr(i + pre, size);
        i += pre + size;
      }
    }
    first = false;
    if (func[i] === 'I') {
      i++;
      var iList = parse(true);
      var iRet = parse(true, 1, true);
      ret += iRet[0] + ' ' + name + '<' + iList.join(', ') + '>';
    } else {
      ret = name;
    }
    paramLoop: while (i < func.length && limit-- > 0) {
      //dump('paramLoop');
      var c = func[i++];
      if (c in basicTypes) {
        list.push(basicTypes[c]);
      } else {
        switch (c) {
          case 'P': list.push(parse(true, 1, true)[0] + '*'); break; // pointer
          case 'R': list.push(parse(true, 1, true)[0] + '&'); break; // reference
          case 'L': { // literal
            i++; // skip basic type
            var end = func.indexOf('E', i);
            var size = end - i;
            list.push(func.substr(i, size));
            i += size + 2; // size + 'EE'
            break;
          }
          case 'A': { // array
            var size = parseInt(func.substr(i));
            i += size.toString().length;
            if (func[i] !== '_') throw '?';
            i++; // skip _
            list.push(parse(true, 1, true)[0] + ' [' + size + ']');
            break;
          }
          case 'E': break paramLoop;
          default: ret += '?' + c; break paramLoop;
        }
      }
    }
    if (!allowVoid && list.length === 1 && list[0] === 'void') list = []; // avoid (void)
    if (rawList) {
      if (ret) {
        list.push(ret + '?');
      }
      return list;
    } else {
      return ret + flushList();
    }
  }
  var parsed = func;
  try {
    // Special-case the entry point, since its name differs from other name mangling.
    if (func == 'Object._main' || func == '_main') {
      return 'main()';
    }
    if (typeof func === 'number') func = Pointer_stringify(func);
    if (func[0] !== '_') return func;
    if (func[1] !== '_') return func; // C function
    if (func[2] !== 'Z') return func;
    switch (func[3]) {
      case 'n': return 'operator new()';
      case 'd': return 'operator delete()';
    }
    parsed = parse();
  } catch(e) {
    parsed += '?';
  }
  if (parsed.indexOf('?') >= 0 && !hasLibcxxabi) {
    Runtime.warnOnce('warning: a problem occurred in builtin C++ name demangling; build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling');
  }
  return parsed;
}

function demangleAll(text) {
  return text.replace(/__Z[\w\d_]+/g, function(x) { var y = demangle(x); return x === y ? x : (x + ' [' + y + ']') });
}

function jsStackTrace() {
  var err = new Error();
  if (!err.stack) {
    // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,
    // so try that as a special-case.
    try {
      throw new Error(0);
    } catch(e) {
      err = e;
    }
    if (!err.stack) {
      return '(no stack trace available)';
    }
  }
  return err.stack.toString();
}

function stackTrace() {
  return demangleAll(jsStackTrace());
}
Module['stackTrace'] = stackTrace;

// Memory management

var PAGE_SIZE = 4096;

function alignMemoryPage(x) {
  if (x % 4096 > 0) {
    x += (4096 - (x % 4096));
  }
  return x;
}

var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false; // static area
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0; // stack area
var DYNAMIC_BASE = 0, DYNAMICTOP = 0; // dynamic area handled by sbrk

function enlargeMemory() {
  abort('Cannot enlarge memory arrays. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with ALLOW_MEMORY_GROWTH which adjusts the size at runtime but prevents some optimizations, or (3) set Module.TOTAL_MEMORY before the program runs.');
}


var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;

var totalMemory = 64*1024;
while (totalMemory < TOTAL_MEMORY || totalMemory < 2*TOTAL_STACK) {
  if (totalMemory < 16*1024*1024) {
    totalMemory *= 2;
  } else {
    totalMemory += 16*1024*1024
  }
}
if (totalMemory !== TOTAL_MEMORY) {
  Module.printErr('increasing TOTAL_MEMORY to ' + totalMemory + ' to be compliant with the asm.js spec (and given that TOTAL_STACK=' + TOTAL_STACK + ')');
  TOTAL_MEMORY = totalMemory;
}

// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'JS engine does not provide full typed array support');

var buffer = new ArrayBuffer(TOTAL_MEMORY);

HEAP8 = new Int8Array(buffer);
HEAP16 = new Int16Array(buffer);
HEAP32 = new Int32Array(buffer);
HEAPU8 = new Uint8Array(buffer);
HEAPU16 = new Uint16Array(buffer);
HEAPU32 = new Uint32Array(buffer);
HEAPF32 = new Float32Array(buffer);
HEAPF64 = new Float64Array(buffer);

// Endianness check (note: assumes compiler arch was little-endian)
HEAP32[0] = 255;
assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');

Module['HEAP'] = HEAP;
Module['buffer'] = buffer;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;
var runtimeExited = false;

function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
  runtimeExited = true;
}

function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module['addOnPreRun'] = Module.addOnPreRun = addOnPreRun;

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module['addOnInit'] = Module.addOnInit = addOnInit;

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module['addOnPreMain'] = Module.addOnPreMain = addOnPreMain;

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module['addOnExit'] = Module.addOnExit = addOnExit;

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module['addOnPostRun'] = Module.addOnPostRun = addOnPostRun;

// Tools


function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;
  var u8array = new Array(len);
  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
  if (dontAddNull) u8array.length = numBytesWritten;
  return u8array;
}
Module['intArrayFromString'] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module['intArrayToString'] = intArrayToString;

function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[(((buffer)+(i))>>0)]=chr;
    i = i + 1;
  }
}
Module['writeStringToMemory'] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[((buffer++)>>0)]=array[i];
  }
}
Module['writeArrayToMemory'] = writeArrayToMemory;

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; ++i) {
    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);
  }
  // Null-terminate the pointer to the HEAP.
  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;
}
Module['writeAsciiToMemory'] = writeAsciiToMemory;

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}

// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];


if (!Math['clz32']) Math['clz32'] = function(x) {
  x = x >>> 0;
  for (var i = 0; i < 32; i++) {
    if (x & (1 << (31 - i))) return i;
  }
  return 32;
};
Math.clz32 = Math['clz32']

var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_min = Math.min;
var Math_clz32 = Math.clz32;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled

function getUniqueRunDependency(id) {
  return id;
}

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
}
Module['addRunDependency'] = addRunDependency;
function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module['removeRunDependency'] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data



var memoryInitializer = null;

// === Body ===

var ASM_CONSTS = [];





STATIC_BASE = 8;

STATICTOP = STATIC_BASE + 14480;
  /* global initializers */ __ATINIT__.push();
  

/* memory initializer */ allocate([10,75,65,75,65,75,65,75,32,85,115,97,103,101,58,32,46,47,105,107,32,114,48,48,32,114,48,49,32,114,48,50,32,116,48,32,114,49,48,32,114,49,49,32,114,49,50,32,116,49,32,114,50,48,32,114,50,49,32,114,50,50,32,116,50,32,102,114,101,101,48,32,46,46,46,10,10,82,101,116,117,114,110,115,32,116,104,101,32,105,107,32,115,111,108,117,116,105,111,110,115,32,103,105,118,101,110,32,116,104,101,32,116,114,97,110,115,102,111,114,109,97,116,105,111,110,32,111,102,32,116,104,101,32,101,110,100,32,101,102,102,101,99,116,111,114,32,115,112,101,99,105,102,105,101,100,32,98,121,10,97,32,51,120,51,32,114,111,116,97,116,105,111,110,32,82,32,40,114,88,88,41,44,32,97,110,100,32,97,32,51,120,49,32,116,114,97,110,115,108,97,116,105,111,110,32,40,116,88,41,46,10,84,104,101,114,101,32,97,114,101,32,37,100,32,102,114,101,101,32,112,97,114,97,109,101,116,101,114,115,32,116,104,97,116,32,104,97,118,101,32,116,111,32,98,101,32,115,112,101,99,105,102,105,101,100,46,10,10,0,0,0,70,97,105,108,101,100,32,116,111,32,103,101,116,32,105,107,32,115,111,108,117,116,105,111,110,10,0,0,0,0,0,0,70,111,117,110,100,32,37,100,32,105,107,32,115,111,108,117,116,105,111,110,115,58,10,0,115,111,108,37,100,32,40,102,114,101,101,61,37,100,41,58,32,0,0,0,0,0,0,0,37,46,49,53,102,44,32,0,0,0,0,0,144,1,0,0,1,0,0,0,2,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,3,0,0,0,200,8,0,0,208,2,0,0,240,2,0,0,0,0,0,0,0,0,0,0,200,1,0,0,4,0,0,0,5,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,3,0,0,0,6,0,0,0,1,0,0,0,200,8,0,0,104,2,0,0,136,2,0,0,0,0,0,0,109,97,120,32,115,111,108,117,116,105,111,110,115,32,102,111,114,32,106,111,105,110,116,32,110,111,116,32,105,110,105,116,105,97,108,105,122,101,100,0,105,110,100,101,120,32,62,61,32,109,97,120,32,115,111,108,117,116,105,111,110,115,32,102,111,114,32,106,111,105,110,116,0,0,0,0,0,0,0,0,50,110,100,32,105,110,100,101,120,32,62,61,32,109,97,120,32,115,111,108,117,116,105,111,110,115,32,102,111,114,32,106,111,105,110,116,0,0,0,0,102,111,102,102,115,101,116,32,119,97,115,32,110,111,116,32,102,105,110,105,116,101,0,0,78,54,105,107,102,97,115,116,49,48,73,107,83,111,108,117,116,105,111,110,73,100,69,69,0,0,0,0,0,0,0,0,160,8,0,0,144,2,0,0,78,54,105,107,102,97,115,116,49,52,73,107,83,111,108,117,116,105,111,110,66,97,115,101,73,100,69,69,0,0,0,0,0,0,0,0,136,2,0,0,7,0,0,0,8,0,0,0,1,0,0,0,3,0,0,0,1,0,0,0,1,0,0,0,78,54,105,107,102,97,115,116,49,52,73,107,83,111,108,117,116,105,111,110,76,105,115,116,73,100,69,69,0,0,0,0,160,8,0,0,248,2,0,0,78,54,105,107,102,97,115,116,49,56,73,107,83,111,108,117,116,105,111,110,76,105,115,116,66,97,115,101,73,100,69,69,0,0,0,0,0,0,0,0,71,101,116,83,111,108,117,116,105,111,110,32,105,110,100,101,120,32,105,115,32,105,110,118,97,108,105,100,0,0,0,0,0,0,0,0,240,2,0,0,9,0,0,0,10,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,64,0,0,0,0,0,0,0,120,5,0,0,11,0,0,0,12,0,0,0,56,0,0,0,248,255,255,255,120,5,0,0,13,0,0,0,14,0,0,0,192,255,255,255,192,255,255,255,120,5,0,0,15,0,0,0,16,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,192,18,0,0,17,0,0,0,18,0,0,0,192,255,255,255,192,255,255,255,192,18,0,0,19,0,0,0,20,0,0,0,0,0,0,0,32,5,0,0,21,0,0,0,22,0,0,0,2,0,0,0,2,0,0,0,1,0,0,0,1,0,0,0,4,0,0,0,5,0,0,0,3,0,0,0,6,0,0,0,7,0,0,0,2,0,0,0,4,0,0,0,3,0,0,0,108,3,0,0,196,4,0,0,172,3,0,0,192,3,0,0,4,5,0,0,24,5,0,0,236,4,0,0,216,4,0,0,148,3,0,0,128,3,0,0,105,107,102,97,115,116,32,101,120,99,101,112,116,105,111,110,58,32,0,0,0,0,0,0,46,47,115,111,108,118,101,114,115,47,66,97,114,114,101,116,116,87,65,77,45,97,114,109,46,116,109,112,46,99,112,112,0,0,0,0,0,0,0,0,58,0,0,0,0,0,0,0,58,32,0,0,0,0,0,0,73,75,97,116,97,110,50,0,58,32,65,115,115,101,114,116,105,111,110,32,39,0,0,0,33,105,115,110,97,110,40,102,120,41,0,0,0,0,0,0,39,32,102,97,105,108,101,100,0,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,80,19,0,0,23,0,0,0,24,0,0,0,56,0,0,0,248,255,255,255,80,19,0,0,25,0,0,0,26,0,0,0,192,255,255,255,192,255,255,255,80,19,0,0,27,0,0,0,28,0,0,0,0,0,0,0,56,0,0,0,0,0,0,0,8,19,0,0,29,0,0,0,30,0,0,0,200,255,255,255,200,255,255,255,8,19,0,0,31,0,0,0,32,0,0,0,200,8,0,0,48,5,0,0,136,18,0,0,0,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,105,110,103,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,0,0,0,0,0,0,200,8,0,0,136,5,0,0,80,19,0,0,0,0,0,0,78,83,116,51,95,95,49,49,56,98,97,115,105,99,95,115,116,114,105,110,103,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,0,0,0,73,75,97,99,111,115,0,0,102,32,62,32,45,49,45,73,75,70,65,83,84,95,83,73,78,67,79,83,95,84,72,82,69,83,72,32,38,38,32,102,32,60,32,49,43,73,75,70,65,83,84,95,83,73,78,67,79,83,95,84,72,82,69,83,72,0,0,0,0,0,0,0,73,75,97,115,105,110,0,0,2,0,0,192,3,0,0,192,4,0,0,192,5,0,0,192,6,0,0,192,7,0,0,192,8,0,0,192,9,0,0,192,10,0,0,192,11,0,0,192,12,0,0,192,13,0,0,192,14,0,0,192,15,0,0,192,16,0,0,192,17,0,0,192,18,0,0,192,19,0,0,192,20,0,0,192,21,0,0,192,22,0,0,192,23,0,0,192,24,0,0,192,25,0,0,192,26,0,0,192,27,0,0,192,28,0,0,192,29,0,0,192,30,0,0,192,31,0,0,192,0,0,0,179,1,0,0,195,2,0,0,195,3,0,0,195,4,0,0,195,5,0,0,195,6,0,0,195,7,0,0,195,8,0,0,195,9,0,0,195,10,0,0,195,11,0,0,195,12,0,0,195,13,0,0,211,14,0,0,195,15,0,0,195,0,0,12,187,1,0,12,195,2,0,12,195,3,0,12,195,4,0,12,211,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,48,7,0,0,33,0,0,0,34,0,0,0,8,0,0,0,0,0,0,0,83,116,57,98,97,100,95,97,108,108,111,99,0,0,0,0,200,8,0,0,32,7,0,0,88,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,116,57,101,120,99,101,112,116,105,111,110,0,0,0,0,160,8,0,0,72,7,0,0,0,0,0,0,144,7,0,0,35,0,0,0,36,0,0,0,9,0,0,0,0,0,0,0,83,116,49,51,114,117,110,116,105,109,101,95,101,114,114,111,114,0,0,0,0,0,0,0,200,8,0,0,120,7,0,0,88,7,0,0,0,0,0,0,83,116,57,116,121,112,101,95,105,110,102,111,0,0,0,0,160,8,0,0,160,7,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,115,104,105,109,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,0,200,8,0,0,184,7,0,0,176,7,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,200,8,0,0,240,7,0,0,224,7,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,57,95,95,112,111,105,110,116,101,114,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,112,98,97,115,101,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,200,8,0,0,80,8,0,0,224,7,0,0,0,0,0,0,200,8,0,0,40,8,0,0,120,8,0,0,0,0,0,0,0,0,0,0,24,8,0,0,37,0,0,0,38,0,0,0,39,0,0,0,40,0,0,0,5,0,0,0,2,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,16,9,0,0,37,0,0,0,41,0,0,0,39,0,0,0,40,0,0,0,5,0,0,0,3,0,0,0,2,0,0,0,3,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,48,95,95,115,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,200,8,0,0,232,8,0,0,24,8,0,0,0,0,0,0,0,0,0,0,112,9,0,0,37,0,0,0,42,0,0,0,39,0,0,0,40,0,0,0,5,0,0,0,4,0,0,0,3,0,0,0,4,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,49,95,95,118,109,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,200,8,0,0,72,9,0,0,24,8,0,0,0,0,0,0,33,34,98,97,115,105,99,95,115,116,114,105,110,103,32,108,101,110,103,116,104,95,101,114,114,111,114,34,0,0,0,0,47,104,111,109,101,47,108,100,47,106,115,45,105,107,115,111,108,118,101,114,115,47,101,109,115,100,107,95,112,111,114,116,97,98,108,101,47,101,109,115,99,114,105,112,116,101,110,47,109,97,115,116,101,114,47,115,121,115,116,101,109,47,105,110,99,108,117,100,101,47,108,105,98,99,120,120,47,115,116,114,105,110,103,0,0,0,0,0,95,95,116,104,114,111,119,95,108,101,110,103,116,104,95,101,114,114,111,114,0,0,0,0,33,34,118,101,99,116,111,114,32,108,101,110,103,116,104,95,101,114,114,111,114,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,116,104,114,101,97,100,95,111,110,99,101,32,102,97,105,108,117,114,101,32,105,110,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,95,102,97,115,116,40,41,0,0,0,0,0,0,0,0,115,116,100,58,58,98,97,100,95,97,108,108,111,99,0,0,116,101,114,109,105,110,97,116,101,95,104,97,110,100,108,101,114,32,117,110,101,120,112,101,99,116,101,100,108,121,32,114,101,116,117,114,110,101,100,0,99,97,110,110,111,116,32,99,114,101,97,116,101,32,112,116,104,114,101,97,100,32,107,101,121,32,102,111,114,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,40,41,0,0,0,0,0,0,0,99,97,110,110,111,116,32,122,101,114,111,32,111,117,116,32,116,104,114,101,97,100,32,118,97,108,117,101,32,102,111,114,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,40,41,0,0,0,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,101,120,99,101,112,116,105,111,110,32,111,102,32,116,121,112,101,32,37,115,58,32,37,115,0,0,0,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,101,120,99,101,112,116,105,111,110,32,111,102,32,116,121,112,101,32,37,115,0,0,0,0,0,0,0,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,102,111,114,101,105,103,110,32,101,120,99,101,112,116,105,111,110,0,0,0,116,101,114,109,105,110,97,116,105,110,103,0,0,0,0,0,117,110,99,97,117,103,104,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,1,2,3,4,5,6,7,8,9,255,255,255,255,255,255,255,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,255,255,255,255,255,255,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,1,2,4,7,3,6,5,0,0,0,0,0,0,0,0,105,110,102,105,110,105,116,121,0,0,0,0,0,0,0,0,10,0,0,0,100,0,0,0,232,3,0,0,16,39,0,0,160,134,1,0,64,66,15,0,128,150,152,0,0,225,245,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,0,10,0,17,17,17,0,0,0,0,5,0,0,0,0,0,0,9,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,15,10,17,17,17,3,10,7,0,1,19,9,11,11,0,0,9,6,11,0,0,11,0,6,17,0,0,0,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,10,10,17,17,17,0,10,0,0,2,0,9,11,0,0,0,9,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,4,13,0,0,0,0,9,14,0,0,0,0,0,14,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,15,0,0,0,0,9,16,0,0,0,0,0,16,0,0,16,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,10,0,0,0,0,9,11,0,0,0,0,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,45,43,32,32,32,48,88,48,120,0,0,0,0,0,0,0,40,110,117,108,108,41,0,0,45,48,88,43,48,88,32,48,88,45,48,120,43,48,120,32,48,120,0,0,0,0,0,0,105,110,102,0,0,0,0,0,73,78,70,0,0,0,0,0,110,97,110,0,0,0,0,0,78,65,78,0,0,0,0,0,46,0,0,0,0,0,0,0,0,0,0,0,136,18,0,0,43,0,0,0,44,0,0,0,2,0,0,0,2,0,0,0,5,0,0,0,5,0,0,0,4,0,0,0,5,0,0,0,3,0,0,0,10,0,0,0,7,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,0,0,0,0,8,18,0,0,45,0,0,0,46,0,0,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,69,0,0,0,0,0,0,0,160,8,0,0,240,17,0,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,200,8,0,0,16,18,0,0,8,18,0,0,0,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,0,160,8,0,0,80,18,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,40,9,0,0,144,18,0,0,0,0,0,0,1,0,0,0,64,18,0,0,3,244,255,255,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,40,9,0,0,216,18,0,0,0,0,0,0,1,0,0,0,64,18,0,0,3,244,255,255,78,83,116,51,95,95,49,49,52,98,97,115,105,99,95,105,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,40,9,0,0,32,19,0,0,3,0,0,0,2,0,0,0,192,18,0,0,2,0,0,0,8,19,0,0,2,8,0,0,0,0,0,0,128,28,0,0,47,0,0,0,48,0,0,0,49,0,0,0,1,0,0,0,6,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,28,0,0,50,0,0,0,51,0,0,0,49,0,0,0,2,0,0,0,7,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,29,0,0,52,0,0,0,53,0,0,0,49,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102,65,66,67,68,69,70,120,88,43,45,112,80,105,73,110,78,0,0,0,0,0,0,0,0,0,0,0,0,240,29,0,0,54,0,0,0,55,0,0,0,49,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,19,0,0,0,20,0,0,0,21,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,30,0,0,56,0,0,0,57,0,0,0,49,0,0,0,3,0,0,0,4,0,0,0,23,0,0,0,5,0,0,0,24,0,0,0,1,0,0,0,2,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,30,0,0,58,0,0,0,59,0,0,0,49,0,0,0,7,0,0,0,8,0,0,0,25,0,0,0,9,0,0,0,26,0,0,0,3,0,0,0,4,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,31,0,0,60,0,0,0,61,0,0,0,49,0,0,0,11,0,0,0,27,0,0,0,28,0,0,0,29,0,0,0,30,0,0,0,31,0,0,0,1,0,0,0,248,255,255,255,40,31,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,31,0,0,62,0,0,0,63,0,0,0,49,0,0,0,19,0,0,0,32,0,0,0,33,0,0,0,34,0,0,0,35,0,0,0,36,0,0,0,2,0,0,0,248,255,255,255,152,31,0,0,20,0,0,0,21,0,0,0,22,0,0,0,23,0,0,0,24,0,0,0,25,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,32,0,0,64,0,0,0,65,0,0,0,49,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,32,0,0,66,0,0,0,67,0,0,0,49,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,32,0,0,68,0,0,0,69,0,0,0,49,0,0,0,27,0,0,0,28,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,29,0,0,0,7,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,32,0,0,70,0,0,0,71,0,0,0,49,0,0,0,30,0,0,0,31,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,32,0,0,0,13,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,33,0,0,72,0,0,0,73,0,0,0,49,0,0,0,33,0,0,0,34,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,35,0,0,0,19,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,33,0,0,74,0,0,0,75,0,0,0,49,0,0,0,36,0,0,0,37,0,0,0,21,0,0,0,22,0,0,0,23,0,0,0,24,0,0,0,38,0,0,0,25,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,216,33,0,0,76,0,0,0,77,0,0,0,49,0,0,0,3,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,34,0,0,78,0,0,0,79,0,0,0,49,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,34,0,0,80,0,0,0,81,0,0,0,49,0,0,0,1,0,0,0,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,35,0,0,82,0,0,0,83,0,0,0,49,0,0,0,2,0,0,0,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,35,0,0,84,0,0,0,85,0,0,0,49,0,0,0,9,0,0,0,6,0,0,0,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,35,0,0,86,0,0,0,87,0,0,0,49,0,0,0,10,0,0,0,7,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,28,0,0,88,0,0,0,89,0,0,0,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,28,0,0,90,0,0,0,91,0,0,0,49,0,0,0,6,0,0,0,11,0,0,0,7,0,0,0,12,0,0,0,8,0,0,0,1,0,0,0,13,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,28,0,0,92,0,0,0,93,0,0,0,49,0,0,0,3,0,0,0,4,0,0,0,12,0,0,0,39,0,0,0,40,0,0,0,13,0,0,0,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,29,0,0,94,0,0,0,95,0,0,0,49,0,0,0,42,0,0,0,43,0,0,0,29,0,0,0,30,0,0,0,31,0,0,0,0,0,0,0,48,29,0,0,96,0,0,0,97,0,0,0,49,0,0,0,44,0,0,0,45,0,0,0,32,0,0,0,33,0,0,0,34,0,0,0,0,0,0,0,48,25,0,0,98,0,0,0,99,0,0,0,49,0,0,0,0,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,102,97,99,101,116,69,0,0,0,200,8,0,0,24,25,0,0,56,56,0,0,0,0,0,0,0,0,0,0,160,25,0,0,98,0,0,0,100,0,0,0,49,0,0,0,14,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,9,0,0,0,15,0,0,0,10,0,0,0,16,0,0,0,11,0,0,0,5,0,0,0,17,0,0,0,14,0,0,0,0,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,119,69,69,0,0,0,0,0,0,0,40,9,0,0,136,25,0,0,0,0,0,0,2,0,0,0,48,25,0,0,2,0,0,0,72,53,0,0,2,0,0,0,0,0,0,0,24,26,0,0,98,0,0,0,101,0,0,0,49,0,0,0,5,0,0,0,6,0,0,0,15,0,0,0,46,0,0,0,47,0,0,0,16,0,0,0,48,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,99,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,40,9,0,0,240,25,0,0,0,0,0,0,2,0,0,0,48,25,0,0,2,0,0,0,80,53,0,0,2,0,0,0,0,0,0,0,144,26,0,0,98,0,0,0,102,0,0,0,49,0,0,0,7,0,0,0,8,0,0,0,17,0,0,0,49,0,0,0,50,0,0,0,18,0,0,0,51,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,115,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,40,9,0,0,104,26,0,0,0,0,0,0,2,0,0,0,48,25,0,0,2,0,0,0,80,53,0,0,2,0,0,0,0,0,0,0,8,27,0,0,98,0,0,0,103,0,0,0,49,0,0,0,9,0,0,0,10,0,0,0,19,0,0,0,52,0,0,0,53,0,0,0,20,0,0,0,54,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,105,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,40,9,0,0,224,26,0,0,0,0,0,0,2,0,0,0,48,25,0,0,2,0,0,0,80,53,0,0,2,0,0,0,0,0,0,0,128,27,0,0,98,0,0,0,104,0,0,0,49,0,0,0,9,0,0,0,10,0,0,0,19,0,0,0,52,0,0,0,53,0,0,0,20,0,0,0,54,0,0,0,78,83,116,51,95,95,49,49,54,95,95,110,97,114,114,111,119,95,116,111,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,0,200,8,0,0,88,27,0,0,8,27,0,0,0,0,0,0,0,0,0,0,232,27,0,0,98,0,0,0,105,0,0,0,49,0,0,0,9,0,0,0,10,0,0,0,19,0,0,0,52,0,0,0,53,0,0,0,20,0,0,0,54,0,0,0,78,83,116,51,95,95,49,49,55,95,95,119,105,100,101,110,95,102,114,111,109,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,200,8,0,0,192,27,0,0,8,27,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,119,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,40,9,0,0,248,27,0,0,0,0,0,0,2,0,0,0,48,25,0,0,2,0,0,0,80,53,0,0,2,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,95,95,105,109,112,69,0,0,0,200,8,0,0,64,28,0,0,48,25,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,99,69,69,0,0,0,0,0,200,8,0,0,104,28,0,0,48,25,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,119,69,69,0,0,0,0,0,200,8,0,0,144,28,0,0,48,25,0,0,0,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,99,69,69,0,0,0,0,0,0,0,40,9,0,0,184,28,0,0,0,0,0,0,2,0,0,0,48,25,0,0,2,0,0,0,72,53,0,0,2,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,99,69,69,0,0,0,0,200,8,0,0,240,28,0,0,48,25,0,0,0,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,119,69,69,0,0,0,0,200,8,0,0,24,29,0,0,48,25,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,40,9,0,0,64,29,0,0,0,0,0,0,2,0,0,0,48,25,0,0,2,0,0,0,88,53,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,40,9,0,0,168,29,0,0,0,0,0,0,2,0,0,0,48,25,0,0,2,0,0,0,112,53,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,40,9,0,0,16,30,0,0,0,0,0,0,2,0,0,0,48,25,0,0,2,0,0,0,136,53,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,40,9,0,0,120,30,0,0,0,0,0,0,2,0,0,0,48,25,0,0,2,0,0,0,160,53,0,0,0,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,40,9,0,0,224,30,0,0,0,0,0,0,3,0,0,0,48,25,0,0,2,0,0,0,184,53,0,0,2,0,0,0,192,53,0,0,0,8,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,40,9,0,0,80,31,0,0,0,0,0,0,3,0,0,0,48,25,0,0,2,0,0,0,184,53,0,0,2,0,0,0,200,53,0,0,0,8,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,40,9,0,0,192,31,0,0,0,0,0,0,2,0,0,0,48,25,0,0,2,0,0,0,208,53,0,0,0,8,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,40,9,0,0,40,32,0,0,0,0,0,0,2,0,0,0,48,25,0,0,2,0,0,0,208,53,0,0,0,8,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,48,69,69,69,0,0,0,0,0,40,9,0,0,144,32,0,0,0,0,0,0,2,0,0,0,48,25,0,0,2,0,0,0,216,53,0,0,2,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,49,69,69,69,0,0,0,0,0,40,9,0,0,208,32,0,0,0,0,0,0,2,0,0,0,48,25,0,0,2,0,0,0,216,53,0,0,2,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,48,69,69,69,0,0,0,0,0,40,9,0,0,16,33,0,0,0,0,0,0,2,0,0,0,48,25,0,0,2,0,0,0,216,53,0,0,2,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,49,69,69,69,0,0,0,0,0,40,9,0,0,80,33,0,0,0,0,0,0,2,0,0,0,48,25,0,0,2,0,0,0,216,53,0,0,2,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,40,9,0,0,144,33,0,0,0,0,0,0,2,0,0,0,48,25,0,0,2,0,0,0,224,53,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,40,9,0,0,248,33,0,0,0,0,0,0,2,0,0,0,48,25,0,0,2,0,0,0,232,53,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,40,9,0,0,96,34,0,0,0,0,0,0,2,0,0,0,48,25,0,0,2,0,0,0,240,53,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,40,9,0,0,200,34,0,0,0,0,0,0,2,0,0,0,48,25,0,0,2,0,0,0,248,53,0,0,0,0,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,99,69,69,0,0,0,0,40,9,0,0,48,35,0,0,0,0,0,0,2,0,0,0,48,25,0,0,2,0,0,0,0,54,0,0,2,0,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,119,69,69,0,0,0,0,40,9,0,0,104,35,0,0,0,0,0,0,2,0,0,0,48,25,0,0,2,0,0,0,0,54,0,0,2,0,0,0,37,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,0,0,0,0,108,0,0,0,0,0,0,0,108,108,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,0,0,0,0,0,0,0,37,112,0,0,0,0,0,0,37,72,58,37,77,58,37,83,37,109,47,37,100,47,37,121,37,89,45,37,109,45,37,100,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,37,72,58,37,77,0,0,0,37,72,58,37,77,58,37,83,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,37,0,0,0,89,0,0,0,45,0,0,0,37,0,0,0,109,0,0,0,45,0,0,0,37,0,0,0,100,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,37,76,102,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,37,46,48,76,102,0,0,0,33,34,118,101,99,116,111,114,32,111,117,116,95,111,102,95,114,97,110,103,101,34,0,0,47,104,111,109,101,47,108,100,47,106,115,45,105,107,115,111,108,118,101,114,115,47,101,109,115,100,107,95,112,111,114,116,97,98,108,101,47,101,109,115,99,114,105,112,116,101,110,47,109,97,115,116,101,114,47,115,121,115,116,101,109,47,105,110,99,108,117,100,101,47,108,105,98,99,120,120,47,118,101,99,116,111,114,0,0,0,0,0,95,95,116,104,114,111,119,95,111,117,116,95,111,102,95,114,97,110,103,101,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,116,114,117,101,0,0,0,0,116,0,0,0,114,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,102,97,108,115,101,0,0,0,102,0,0,0,97,0,0,0,108,0,0,0,115,0,0,0,101], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);
/* memory initializer */ allocate([83,117,110,100,97,121,0,0,77,111,110,100,97,121,0,0,84,117,101,115,100,97,121,0,87,101,100,110,101,115,100,97,121,0,0,0,0,0,0,0,84,104,117,114,115,100,97,121,0,0,0,0,0,0,0,0,70,114,105,100,97,121,0,0,83,97,116,117,114,100,97,121,0,0,0,0,0,0,0,0,83,117,110,0,0,0,0,0,77,111,110,0,0,0,0,0,84,117,101,0,0,0,0,0,87,101,100,0,0,0,0,0,84,104,117,0,0,0,0,0,70,114,105,0,0,0,0,0,83,97,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,110,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,114,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,117,0,0,0,114,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,74,97,110,117,97,114,121,0,70,101,98,114,117,97,114,121,0,0,0,0,0,0,0,0,77,97,114,99,104,0,0,0,65,112,114,105,108,0,0,0,77,97,121,0,0,0,0,0,74,117,110,101,0,0,0,0,74,117,108,121,0,0,0,0,65,117,103,117,115,116,0,0,83,101,112,116,101,109,98,101,114,0,0,0,0,0,0,0,79,99,116,111,98,101,114,0,78,111,118,101,109,98,101,114,0,0,0,0,0,0,0,0,68,101,99,101,109,98,101,114,0,0,0,0,0,0,0,0,74,97,110,0,0,0,0,0,70,101,98,0,0,0,0,0,77,97,114,0,0,0,0,0,65,112,114,0,0,0,0,0,74,117,110,0,0,0,0,0,74,117,108,0,0,0,0,0,65,117,103,0,0,0,0,0,83,101,112,0,0,0,0,0,79,99,116,0,0,0,0,0,78,111,118,0,0,0,0,0,68,101,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,114,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,99,0,0,0,104,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,105,0,0,0,108,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,117,0,0,0,115,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,116,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,111,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,77,0,0,0,0,0,0,80,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,80,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,109,47,37,100,47,37,121,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,72,58,37,77,58,37,83,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,97,32,37,98,32,37,100,32,37,72,58,37,77,58,37,83,32,37,89,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,97,0,0,0,32,0,0,0,37,0,0,0,98,0,0,0,32,0,0,0,37,0,0,0,100,0,0,0,32,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,8,0,0,0,56,0,0,160,8,0,0,232,55,0,0,40,9,0,0,208,55,0,0,0,0,0,0,1,0,0,0,168,55,0,0,0,0,0,0,40,9,0,0,144,55,0,0,0,0,0,0,1,0,0,0,168,55,0,0,0,0,0,0,40,9,0,0,120,55,0,0,0,0,0,0,1,0,0,0,80,55,0,0,0,0,0,0,40,9,0,0,56,55,0,0,0,0,0,0,1,0,0,0,80,55,0,0,0,0,0,0,160,8,0,0,32,55,0,0,160,8,0,0,248,54,0,0,160,8,0,0,208,54,0,0,160,8,0,0,184,54,0,0,160,8,0,0,160,54,0,0,160,8,0,0,128,54,0,0,160,8,0,0,96,54,0,0,160,8,0,0,64,54,0,0,160,8,0,0,32,54,0,0,160,8,0,0,8,54,0,0,78,83,116,51,95,95,49,49,51,109,101,115,115,97,103,101,115,95,98,97,115,101,69,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,119,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,99,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,119,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,99,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,95,98,97,115,101,69,0,0,0,0,78,83,116,51,95,95,49,49,48,95,95,116,105,109,101,95,112,117,116,69,0,0,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,119,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,99,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,57,116,105,109,101,95,98,97,115,101,69,0,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,119,69,69,0,0,0,160,8,0,0,88,55,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,112,117,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,119,69,69,0,0,0,160,8,0,0,176,55,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,103,101,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,49,50,99,111,100,101,99,118,116,95,98,97,115,101,69,0,0,78,83,116,51,95,95,49,49,48,99,116,121,112,101,95,98,97,115,101,69,0,0,0,0,78,83,116,51,95,95,49,49,52,95,95,115,104,97,114,101,100,95,99,111,117,110,116,69,0,0,0,0,0,0,0,0,160,8,0,0,24,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+10400);




/* no memory initializer */
var tempDoublePtr = Runtime.alignMemory(allocate(12, "i8", ALLOC_STATIC), 8);

assert(tempDoublePtr % 8 == 0);

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}

// {{PRE_LIBRARY}}


   
  Module["_i64Subtract"] = _i64Subtract;

  function ___assert_fail(condition, filename, line, func) {
      ABORT = true;
      throw 'Assertion failed: ' + Pointer_stringify(condition) + ', at: ' + [filename ? Pointer_stringify(filename) : 'unknown filename', line, func ? Pointer_stringify(func) : 'unknown function'] + ' at ' + stackTrace();
    }

  
  function __ZSt18uncaught_exceptionv() { // std::uncaught_exception()
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }
  
  
  
  var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:function (adjusted) {
        if (!adjusted || EXCEPTIONS.infos[adjusted]) return adjusted;
        for (var ptr in EXCEPTIONS.infos) {
          var info = EXCEPTIONS.infos[ptr];
          if (info.adjusted === adjusted) {
            return ptr;
          }
        }
        return adjusted;
      },addRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount++;
      },decRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        assert(info.refcount > 0);
        info.refcount--;
        if (info.refcount === 0) {
          if (info.destructor) {
            Runtime.dynCall('vi', info.destructor, [ptr]);
          }
          delete EXCEPTIONS.infos[ptr];
          ___cxa_free_exception(ptr);
        }
      },clearRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount = 0;
      }};
  function ___resumeException(ptr) {
      if (!EXCEPTIONS.last) { EXCEPTIONS.last = ptr; }
      EXCEPTIONS.clearRef(EXCEPTIONS.deAdjust(ptr)); // exception refcount should be cleared, but don't free it
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }function ___cxa_find_matching_catch() {
      var thrown = EXCEPTIONS.last;
      if (!thrown) {
        // just pass through the null ptr
        return ((asm["setTempRet0"](0),0)|0);
      }
      var info = EXCEPTIONS.infos[thrown];
      var throwntype = info.type;
      if (!throwntype) {
        // just pass through the thrown ptr
        return ((asm["setTempRet0"](0),thrown)|0);
      }
      var typeArray = Array.prototype.slice.call(arguments);
  
      var pointer = Module['___cxa_is_pointer_type'](throwntype);
      // can_catch receives a **, add indirection
      if (!___cxa_find_matching_catch.buffer) ___cxa_find_matching_catch.buffer = _malloc(4);
      HEAP32[((___cxa_find_matching_catch.buffer)>>2)]=thrown;
      thrown = ___cxa_find_matching_catch.buffer;
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        if (typeArray[i] && Module['___cxa_can_catch'](typeArray[i], throwntype, thrown)) {
          thrown = HEAP32[((thrown)>>2)]; // undo indirection
          info.adjusted = thrown;
          return ((asm["setTempRet0"](typeArray[i]),thrown)|0);
        }
      }
      // Shouldn't happen unless we have bogus data in typeArray
      // or encounter a type for which emscripten doesn't have suitable
      // typeinfo defined. Best-efforts match just in case.
      thrown = HEAP32[((thrown)>>2)]; // undo indirection
      return ((asm["setTempRet0"](throwntype),thrown)|0);
    }function ___cxa_throw(ptr, type, destructor) {
      EXCEPTIONS.infos[ptr] = {
        ptr: ptr,
        adjusted: ptr,
        type: type,
        destructor: destructor,
        refcount: 0
      };
      EXCEPTIONS.last = ptr;
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exception = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exception++;
      }
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }

   
  Module["_memset"] = _memset;

  var _BDtoILow=true;

  
  
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};
  
  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};
  
  
  var ___errno_state=0;function ___setErrNo(value) {
      // For convenient setting and returning of errno.
      HEAP32[((___errno_state)>>2)]=value;
      return value;
    }function _strerror_r(errnum, strerrbuf, buflen) {
      if (errnum in ERRNO_MESSAGES) {
        if (ERRNO_MESSAGES[errnum].length > buflen - 1) {
          return ___setErrNo(ERRNO_CODES.ERANGE);
        } else {
          var msg = ERRNO_MESSAGES[errnum];
          writeAsciiToMemory(msg, strerrbuf);
          return 0;
        }
      } else {
        return ___setErrNo(ERRNO_CODES.EINVAL);
      }
    }function _strerror(errnum) {
      if (!_strerror.buffer) _strerror.buffer = _malloc(256);
      _strerror_r(errnum, _strerror.buffer, 256);
      return _strerror.buffer;
    }

  function _pthread_mutex_lock() {}

  
  
  function __isLeapYear(year) {
        return year%4 === 0 && (year%100 !== 0 || year%400 === 0);
    }
  
  function __arraySum(array, index) {
      var sum = 0;
      for (var i = 0; i <= index; sum += array[i++]);
      return sum;
    }
  
  
  var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];
  
  var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date, days) {
      var newDate = new Date(date.getTime());
      while(days > 0) {
        var leap = __isLeapYear(newDate.getFullYear());
        var currentMonth = newDate.getMonth();
        var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];
  
        if (days > daysInCurrentMonth-newDate.getDate()) {
          // we spill over to next month
          days -= (daysInCurrentMonth-newDate.getDate()+1);
          newDate.setDate(1);
          if (currentMonth < 11) {
            newDate.setMonth(currentMonth+1)
          } else {
            newDate.setMonth(0);
            newDate.setFullYear(newDate.getFullYear()+1);
          }
        } else {
          // we stay in current month 
          newDate.setDate(newDate.getDate()+days);
          return newDate;
        }
      }
  
      return newDate;
    }function _strftime(s, maxsize, format, tm) {
      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html
  
      var tm_zone = HEAP32[(((tm)+(40))>>2)];
  
      var date = {
        tm_sec: HEAP32[((tm)>>2)],
        tm_min: HEAP32[(((tm)+(4))>>2)],
        tm_hour: HEAP32[(((tm)+(8))>>2)],
        tm_mday: HEAP32[(((tm)+(12))>>2)],
        tm_mon: HEAP32[(((tm)+(16))>>2)],
        tm_year: HEAP32[(((tm)+(20))>>2)],
        tm_wday: HEAP32[(((tm)+(24))>>2)],
        tm_yday: HEAP32[(((tm)+(28))>>2)],
        tm_isdst: HEAP32[(((tm)+(32))>>2)],
        tm_gmtoff: HEAP32[(((tm)+(36))>>2)],
        tm_zone: tm_zone ? Pointer_stringify(tm_zone) : ''
      };
  
      var pattern = Pointer_stringify(format);
  
      // expand format
      var EXPANSION_RULES_1 = {
        '%c': '%a %b %d %H:%M:%S %Y',     // Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013
        '%D': '%m/%d/%y',                 // Equivalent to %m / %d / %y
        '%F': '%Y-%m-%d',                 // Equivalent to %Y - %m - %d
        '%h': '%b',                       // Equivalent to %b
        '%r': '%I:%M:%S %p',              // Replaced by the time in a.m. and p.m. notation
        '%R': '%H:%M',                    // Replaced by the time in 24-hour notation
        '%T': '%H:%M:%S',                 // Replaced by the time
        '%x': '%m/%d/%y',                 // Replaced by the locale's appropriate date representation
        '%X': '%H:%M:%S'                  // Replaced by the locale's appropriate date representation
      };
      for (var rule in EXPANSION_RULES_1) {
        pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);
      }
  
      var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
      var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
  
      function leadingSomething(value, digits, character) {
        var str = typeof value === 'number' ? value.toString() : (value || '');
        while (str.length < digits) {
          str = character[0]+str;
        }
        return str;
      };
  
      function leadingNulls(value, digits) {
        return leadingSomething(value, digits, '0');
      };
  
      function compareByDay(date1, date2) {
        function sgn(value) {
          return value < 0 ? -1 : (value > 0 ? 1 : 0);
        };
  
        var compare;
        if ((compare = sgn(date1.getFullYear()-date2.getFullYear())) === 0) {
          if ((compare = sgn(date1.getMonth()-date2.getMonth())) === 0) {
            compare = sgn(date1.getDate()-date2.getDate());
          }
        }
        return compare;
      };
  
      function getFirstWeekStartDate(janFourth) {
          switch (janFourth.getDay()) {
            case 0: // Sunday
              return new Date(janFourth.getFullYear()-1, 11, 29);
            case 1: // Monday
              return janFourth;
            case 2: // Tuesday
              return new Date(janFourth.getFullYear(), 0, 3);
            case 3: // Wednesday
              return new Date(janFourth.getFullYear(), 0, 2);
            case 4: // Thursday
              return new Date(janFourth.getFullYear(), 0, 1);
            case 5: // Friday
              return new Date(janFourth.getFullYear()-1, 11, 31);
            case 6: // Saturday
              return new Date(janFourth.getFullYear()-1, 11, 30);
          }
      };
  
      function getWeekBasedYear(date) {
          var thisDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);
          var janFourthNextYear = new Date(thisDate.getFullYear()+1, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {
            // this date is after the start of the first week of this year
            if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {
              return thisDate.getFullYear()+1;
            } else {
              return thisDate.getFullYear();
            }
          } else { 
            return thisDate.getFullYear()-1;
          }
      };
  
      var EXPANSION_RULES_2 = {
        '%a': function(date) {
          return WEEKDAYS[date.tm_wday].substring(0,3);
        },
        '%A': function(date) {
          return WEEKDAYS[date.tm_wday];
        },
        '%b': function(date) {
          return MONTHS[date.tm_mon].substring(0,3);
        },
        '%B': function(date) {
          return MONTHS[date.tm_mon];
        },
        '%C': function(date) {
          var year = date.tm_year+1900;
          return leadingNulls((year/100)|0,2);
        },
        '%d': function(date) {
          return leadingNulls(date.tm_mday, 2);
        },
        '%e': function(date) {
          return leadingSomething(date.tm_mday, 2, ' ');
        },
        '%g': function(date) {
          // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year. 
          // In this system, weeks begin on a Monday and week 1 of the year is the week that includes 
          // January 4th, which is also the week that includes the first Thursday of the year, and 
          // is also the first week that contains at least four days in the year. 
          // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of 
          // the last week of the preceding year; thus, for Saturday 2nd January 1999, 
          // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th, 
          // or 31st is a Monday, it and any following days are part of week 1 of the following year. 
          // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.
          
          return getWeekBasedYear(date).toString().substring(2);
        },
        '%G': function(date) {
          return getWeekBasedYear(date);
        },
        '%H': function(date) {
          return leadingNulls(date.tm_hour, 2);
        },
        '%I': function(date) {
          return leadingNulls(date.tm_hour < 13 ? date.tm_hour : date.tm_hour-12, 2);
        },
        '%j': function(date) {
          // Day of the year (001-366)
          return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon-1), 3);
        },
        '%m': function(date) {
          return leadingNulls(date.tm_mon+1, 2);
        },
        '%M': function(date) {
          return leadingNulls(date.tm_min, 2);
        },
        '%n': function() {
          return '\n';
        },
        '%p': function(date) {
          if (date.tm_hour > 0 && date.tm_hour < 13) {
            return 'AM';
          } else {
            return 'PM';
          }
        },
        '%S': function(date) {
          return leadingNulls(date.tm_sec, 2);
        },
        '%t': function() {
          return '\t';
        },
        '%u': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay() || 7;
        },
        '%U': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Sunday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year+1900, 0, 1);
          var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7-janFirst.getDay());
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
          
          // is target date after the first Sunday?
          if (compareByDay(firstSunday, endDate) < 0) {
            // calculate difference in days between first Sunday and endDate
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstSundayUntilEndJanuary = 31-firstSunday.getDate();
            var days = firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
  
          return compareByDay(firstSunday, janFirst) === 0 ? '01': '00';
        },
        '%V': function(date) {
          // Replaced by the week number of the year (Monday as the first day of the week) 
          // as a decimal number [01,53]. If the week containing 1 January has four 
          // or more days in the new year, then it is considered week 1. 
          // Otherwise, it is the last week of the previous year, and the next week is week 1. 
          // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]
          var janFourthThisYear = new Date(date.tm_year+1900, 0, 4);
          var janFourthNextYear = new Date(date.tm_year+1901, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          var endDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          if (compareByDay(endDate, firstWeekStartThisYear) < 0) {
            // if given date is before this years first week, then it belongs to the 53rd week of last year
            return '53';
          } 
  
          if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {
            // if given date is after next years first week, then it belongs to the 01th week of next year
            return '01';
          }
  
          // given date is in between CW 01..53 of this calendar year
          var daysDifference;
          if (firstWeekStartThisYear.getFullYear() < date.tm_year+1900) {
            // first CW of this year starts last year
            daysDifference = date.tm_yday+32-firstWeekStartThisYear.getDate()
          } else {
            // first CW of this year starts this year
            daysDifference = date.tm_yday+1-firstWeekStartThisYear.getDate();
          }
          return leadingNulls(Math.ceil(daysDifference/7), 2);
        },
        '%w': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay();
        },
        '%W': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Monday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year, 0, 1);
          var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7-janFirst.getDay()+1);
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
  
          // is target date after the first Monday?
          if (compareByDay(firstMonday, endDate) < 0) {
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstMondayUntilEndJanuary = 31-firstMonday.getDate();
            var days = firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
          return compareByDay(firstMonday, janFirst) === 0 ? '01': '00';
        },
        '%y': function(date) {
          // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]
          return (date.tm_year+1900).toString().substring(2);
        },
        '%Y': function(date) {
          // Replaced by the year as a decimal number (for example, 1997). [ tm_year]
          return date.tm_year+1900;
        },
        '%z': function(date) {
          // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ).
          // For example, "-0430" means 4 hours 30 minutes behind UTC (west of Greenwich).
          var off = date.tm_gmtoff;
          var ahead = off >= 0;
          off = Math.abs(off) / 60;
          // convert from minutes into hhmm format (which means 60 minutes = 100 units)
          off = (off / 60)*100 + (off % 60);
          return (ahead ? '+' : '-') + String("0000" + off).slice(-4);
        },
        '%Z': function(date) {
          return date.tm_zone;
        },
        '%%': function() {
          return '%';
        }
      };
      for (var rule in EXPANSION_RULES_2) {
        if (pattern.indexOf(rule) >= 0) {
          pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));
        }
      }
  
      var bytes = intArrayFromString(pattern, false);
      if (bytes.length > maxsize) {
        return 0;
      } 
  
      writeArrayToMemory(bytes, s);
      return bytes.length-1;
    }function _strftime_l(s, maxsize, format, tm) {
      return _strftime(s, maxsize, format, tm); // no locale support yet
    }

  function _abort() {
      Module['abort']();
    }

  
  
  
  var FS=undefined;
  
  
  
  var SOCKFS=undefined;function _send(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _write(fd, buf, len);
    }
  
  function _pwrite(fildes, buf, nbyte, offset) {
      // ssize_t pwrite(int fildes, const void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _write(fildes, buf, nbyte) {
      // ssize_t write(int fildes, const void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
  
  
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }
  
  function _fileno(stream) {
      // int fileno(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fileno.html
      stream = FS.getStreamFromPtr(stream);
      if (!stream) return -1;
      return stream.fd;
    }function _fwrite(ptr, size, nitems, stream) {
      // size_t fwrite(const void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fwrite.html
      var bytesToWrite = nitems * size;
      if (bytesToWrite == 0) return 0;
      var fd = _fileno(stream);
      var bytesWritten = _write(fd, ptr, bytesToWrite);
      if (bytesWritten == -1) {
        var streamObj = FS.getStreamFromPtr(stream);
        if (streamObj) streamObj.error = true;
        return 0;
      } else {
        return (bytesWritten / size)|0;
      }
    }
  
  
   
  Module["_strlen"] = _strlen;
  
  function __reallyNegative(x) {
      return x < 0 || (x === 0 && (1/x) === -Infinity);
    }function __formatString(format, varargs) {
      assert((varargs & 7) === 0);
      var textIndex = format;
      var argIndex = 0;
      function getNextArg(type) {
        // NOTE: Explicitly ignoring type safety. Otherwise this fails:
        //       int x = 4; printf("%c\n", (char)x);
        var ret;
        argIndex = Runtime.prepVararg(argIndex, type);
        if (type === 'double') {
          ret = (HEAP32[((tempDoublePtr)>>2)]=HEAP32[(((varargs)+(argIndex))>>2)],HEAP32[(((tempDoublePtr)+(4))>>2)]=HEAP32[(((varargs)+((argIndex)+(4)))>>2)],(+(HEAPF64[(tempDoublePtr)>>3])));
          argIndex += 8;
        } else if (type == 'i64') {
          ret = [HEAP32[(((varargs)+(argIndex))>>2)],
                 HEAP32[(((varargs)+(argIndex+4))>>2)]];
  
          argIndex += 8;
        } else {
          assert((argIndex & 3) === 0);
          type = 'i32'; // varargs are always i32, i64, or double
          ret = HEAP32[(((varargs)+(argIndex))>>2)];
          argIndex += 4;
        }
        return ret;
      }
  
      var ret = [];
      var curr, next, currArg;
      while(1) {
        var startTextIndex = textIndex;
        curr = HEAP8[((textIndex)>>0)];
        if (curr === 0) break;
        next = HEAP8[((textIndex+1)>>0)];
        if (curr == 37) {
          // Handle flags.
          var flagAlwaysSigned = false;
          var flagLeftAlign = false;
          var flagAlternative = false;
          var flagZeroPad = false;
          var flagPadSign = false;
          flagsLoop: while (1) {
            switch (next) {
              case 43:
                flagAlwaysSigned = true;
                break;
              case 45:
                flagLeftAlign = true;
                break;
              case 35:
                flagAlternative = true;
                break;
              case 48:
                if (flagZeroPad) {
                  break flagsLoop;
                } else {
                  flagZeroPad = true;
                  break;
                }
              case 32:
                flagPadSign = true;
                break;
              default:
                break flagsLoop;
            }
            textIndex++;
            next = HEAP8[((textIndex+1)>>0)];
          }
  
          // Handle width.
          var width = 0;
          if (next == 42) {
            width = getNextArg('i32');
            textIndex++;
            next = HEAP8[((textIndex+1)>>0)];
          } else {
            while (next >= 48 && next <= 57) {
              width = width * 10 + (next - 48);
              textIndex++;
              next = HEAP8[((textIndex+1)>>0)];
            }
          }
  
          // Handle precision.
          var precisionSet = false, precision = -1;
          if (next == 46) {
            precision = 0;
            precisionSet = true;
            textIndex++;
            next = HEAP8[((textIndex+1)>>0)];
            if (next == 42) {
              precision = getNextArg('i32');
              textIndex++;
            } else {
              while(1) {
                var precisionChr = HEAP8[((textIndex+1)>>0)];
                if (precisionChr < 48 ||
                    precisionChr > 57) break;
                precision = precision * 10 + (precisionChr - 48);
                textIndex++;
              }
            }
            next = HEAP8[((textIndex+1)>>0)];
          }
          if (precision < 0) {
            precision = 6; // Standard default.
            precisionSet = false;
          }
  
          // Handle integer sizes. WARNING: These assume a 32-bit architecture!
          var argSize;
          switch (String.fromCharCode(next)) {
            case 'h':
              var nextNext = HEAP8[((textIndex+2)>>0)];
              if (nextNext == 104) {
                textIndex++;
                argSize = 1; // char (actually i32 in varargs)
              } else {
                argSize = 2; // short (actually i32 in varargs)
              }
              break;
            case 'l':
              var nextNext = HEAP8[((textIndex+2)>>0)];
              if (nextNext == 108) {
                textIndex++;
                argSize = 8; // long long
              } else {
                argSize = 4; // long
              }
              break;
            case 'L': // long long
            case 'q': // int64_t
            case 'j': // intmax_t
              argSize = 8;
              break;
            case 'z': // size_t
            case 't': // ptrdiff_t
            case 'I': // signed ptrdiff_t or unsigned size_t
              argSize = 4;
              break;
            default:
              argSize = null;
          }
          if (argSize) textIndex++;
          next = HEAP8[((textIndex+1)>>0)];
  
          // Handle type specifier.
          switch (String.fromCharCode(next)) {
            case 'd': case 'i': case 'u': case 'o': case 'x': case 'X': case 'p': {
              // Integer.
              var signed = next == 100 || next == 105;
              argSize = argSize || 4;
              var currArg = getNextArg('i' + (argSize * 8));
              var origArg = currArg;
              var argText;
              // Flatten i64-1 [low, high] into a (slightly rounded) double
              if (argSize == 8) {
                currArg = Runtime.makeBigInt(currArg[0], currArg[1], next == 117);
              }
              // Truncate to requested size.
              if (argSize <= 4) {
                var limit = Math.pow(256, argSize) - 1;
                currArg = (signed ? reSign : unSign)(currArg & limit, argSize * 8);
              }
              // Format the number.
              var currAbsArg = Math.abs(currArg);
              var prefix = '';
              if (next == 100 || next == 105) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], null); else
                argText = reSign(currArg, 8 * argSize, 1).toString(10);
              } else if (next == 117) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], true); else
                argText = unSign(currArg, 8 * argSize, 1).toString(10);
                currArg = Math.abs(currArg);
              } else if (next == 111) {
                argText = (flagAlternative ? '0' : '') + currAbsArg.toString(8);
              } else if (next == 120 || next == 88) {
                prefix = (flagAlternative && currArg != 0) ? '0x' : '';
                if (argSize == 8 && i64Math) {
                  if (origArg[1]) {
                    argText = (origArg[1]>>>0).toString(16);
                    var lower = (origArg[0]>>>0).toString(16);
                    while (lower.length < 8) lower = '0' + lower;
                    argText += lower;
                  } else {
                    argText = (origArg[0]>>>0).toString(16);
                  }
                } else
                if (currArg < 0) {
                  // Represent negative numbers in hex as 2's complement.
                  currArg = -currArg;
                  argText = (currAbsArg - 1).toString(16);
                  var buffer = [];
                  for (var i = 0; i < argText.length; i++) {
                    buffer.push((0xF - parseInt(argText[i], 16)).toString(16));
                  }
                  argText = buffer.join('');
                  while (argText.length < argSize * 2) argText = 'f' + argText;
                } else {
                  argText = currAbsArg.toString(16);
                }
                if (next == 88) {
                  prefix = prefix.toUpperCase();
                  argText = argText.toUpperCase();
                }
              } else if (next == 112) {
                if (currAbsArg === 0) {
                  argText = '(nil)';
                } else {
                  prefix = '0x';
                  argText = currAbsArg.toString(16);
                }
              }
              if (precisionSet) {
                while (argText.length < precision) {
                  argText = '0' + argText;
                }
              }
  
              // Add sign if needed
              if (currArg >= 0) {
                if (flagAlwaysSigned) {
                  prefix = '+' + prefix;
                } else if (flagPadSign) {
                  prefix = ' ' + prefix;
                }
              }
  
              // Move sign to prefix so we zero-pad after the sign
              if (argText.charAt(0) == '-') {
                prefix = '-' + prefix;
                argText = argText.substr(1);
              }
  
              // Add padding.
              while (prefix.length + argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad) {
                    argText = '0' + argText;
                  } else {
                    prefix = ' ' + prefix;
                  }
                }
              }
  
              // Insert the result into the buffer.
              argText = prefix + argText;
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 'f': case 'F': case 'e': case 'E': case 'g': case 'G': {
              // Float.
              var currArg = getNextArg('double');
              var argText;
              if (isNaN(currArg)) {
                argText = 'nan';
                flagZeroPad = false;
              } else if (!isFinite(currArg)) {
                argText = (currArg < 0 ? '-' : '') + 'inf';
                flagZeroPad = false;
              } else {
                var isGeneral = false;
                var effectivePrecision = Math.min(precision, 20);
  
                // Convert g/G to f/F or e/E, as per:
                // http://pubs.opengroup.org/onlinepubs/9699919799/functions/printf.html
                if (next == 103 || next == 71) {
                  isGeneral = true;
                  precision = precision || 1;
                  var exponent = parseInt(currArg.toExponential(effectivePrecision).split('e')[1], 10);
                  if (precision > exponent && exponent >= -4) {
                    next = ((next == 103) ? 'f' : 'F').charCodeAt(0);
                    precision -= exponent + 1;
                  } else {
                    next = ((next == 103) ? 'e' : 'E').charCodeAt(0);
                    precision--;
                  }
                  effectivePrecision = Math.min(precision, 20);
                }
  
                if (next == 101 || next == 69) {
                  argText = currArg.toExponential(effectivePrecision);
                  // Make sure the exponent has at least 2 digits.
                  if (/[eE][-+]\d$/.test(argText)) {
                    argText = argText.slice(0, -1) + '0' + argText.slice(-1);
                  }
                } else if (next == 102 || next == 70) {
                  argText = currArg.toFixed(effectivePrecision);
                  if (currArg === 0 && __reallyNegative(currArg)) {
                    argText = '-' + argText;
                  }
                }
  
                var parts = argText.split('e');
                if (isGeneral && !flagAlternative) {
                  // Discard trailing zeros and periods.
                  while (parts[0].length > 1 && parts[0].indexOf('.') != -1 &&
                         (parts[0].slice(-1) == '0' || parts[0].slice(-1) == '.')) {
                    parts[0] = parts[0].slice(0, -1);
                  }
                } else {
                  // Make sure we have a period in alternative mode.
                  if (flagAlternative && argText.indexOf('.') == -1) parts[0] += '.';
                  // Zero pad until required precision.
                  while (precision > effectivePrecision++) parts[0] += '0';
                }
                argText = parts[0] + (parts.length > 1 ? 'e' + parts[1] : '');
  
                // Capitalize 'E' if needed.
                if (next == 69) argText = argText.toUpperCase();
  
                // Add sign.
                if (currArg >= 0) {
                  if (flagAlwaysSigned) {
                    argText = '+' + argText;
                  } else if (flagPadSign) {
                    argText = ' ' + argText;
                  }
                }
              }
  
              // Add padding.
              while (argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad && (argText[0] == '-' || argText[0] == '+')) {
                    argText = argText[0] + '0' + argText.slice(1);
                  } else {
                    argText = (flagZeroPad ? '0' : ' ') + argText;
                  }
                }
              }
  
              // Adjust case.
              if (next < 97) argText = argText.toUpperCase();
  
              // Insert the result into the buffer.
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 's': {
              // String.
              var arg = getNextArg('i8*');
              var argLength = arg ? _strlen(arg) : '(null)'.length;
              if (precisionSet) argLength = Math.min(argLength, precision);
              if (!flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              if (arg) {
                for (var i = 0; i < argLength; i++) {
                  ret.push(HEAPU8[((arg++)>>0)]);
                }
              } else {
                ret = ret.concat(intArrayFromString('(null)'.substr(0, argLength), true));
              }
              if (flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              break;
            }
            case 'c': {
              // Character.
              if (flagLeftAlign) ret.push(getNextArg('i8'));
              while (--width > 0) {
                ret.push(32);
              }
              if (!flagLeftAlign) ret.push(getNextArg('i8'));
              break;
            }
            case 'n': {
              // Write the length written so far to the next parameter.
              var ptr = getNextArg('i32*');
              HEAP32[((ptr)>>2)]=ret.length;
              break;
            }
            case '%': {
              // Literal percent sign.
              ret.push(curr);
              break;
            }
            default: {
              // Unknown specifiers remain untouched.
              for (var i = startTextIndex; i < textIndex + 2; i++) {
                ret.push(HEAP8[((i)>>0)]);
              }
            }
          }
          textIndex += 2;
          // TODO: Support a/A (hex float) and m (last error) specifiers.
          // TODO: Support %1${specifier} for arg selection.
        } else {
          ret.push(curr);
          textIndex += 1;
        }
      }
      return ret;
    }function _fprintf(stream, format, varargs) {
      // int fprintf(FILE *restrict stream, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var stack = Runtime.stackSave();
      var ret = _fwrite(allocate(result, 'i8', ALLOC_STACK), 1, result.length, stream);
      Runtime.stackRestore(stack);
      return ret;
    }function _printf(format, varargs) {
      // int printf(const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      // extra effort to support printf, even without a filesystem. very partial, very hackish
      var result = __formatString(format, varargs);
      var string = intArrayToString(result);
      if (string[string.length-1] === '\n') string = string.substr(0, string.length-1); // remove a final \n, as Module.print will do that
      Module.print(string);
      return result.length;
    }

  function _pthread_once(ptr, func) {
      if (!_pthread_once.seen) _pthread_once.seen = {};
      if (ptr in _pthread_once.seen) return;
      Runtime.dynCall('v', func);
      _pthread_once.seen[ptr] = 1;
    }

  var _tan=Math_tan;


  var _asin=Math_asin;

  
  var PTHREAD_SPECIFIC={};function _pthread_getspecific(key) {
      return PTHREAD_SPECIFIC[key] || 0;
    }

  function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 30: return PAGE_SIZE;
        case 85: return totalMemory / PAGE_SIZE;
        case 132:
        case 133:
        case 12:
        case 137:
        case 138:
        case 15:
        case 235:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 149:
        case 13:
        case 10:
        case 236:
        case 153:
        case 9:
        case 21:
        case 22:
        case 159:
        case 154:
        case 14:
        case 77:
        case 78:
        case 139:
        case 80:
        case 81:
        case 79:
        case 82:
        case 68:
        case 67:
        case 164:
        case 11:
        case 29:
        case 47:
        case 48:
        case 95:
        case 52:
        case 51:
        case 46:
          return 200809;
        case 27:
        case 246:
        case 127:
        case 128:
        case 23:
        case 24:
        case 160:
        case 161:
        case 181:
        case 182:
        case 242:
        case 183:
        case 184:
        case 243:
        case 244:
        case 245:
        case 165:
        case 178:
        case 179:
        case 49:
        case 50:
        case 168:
        case 169:
        case 175:
        case 170:
        case 171:
        case 172:
        case 97:
        case 76:
        case 32:
        case 173:
        case 35:
          return -1;
        case 176:
        case 177:
        case 7:
        case 155:
        case 8:
        case 157:
        case 125:
        case 126:
        case 92:
        case 93:
        case 129:
        case 130:
        case 131:
        case 94:
        case 91:
          return 1;
        case 74:
        case 60:
        case 69:
        case 70:
        case 4:
          return 1024;
        case 31:
        case 42:
        case 72:
          return 32;
        case 87:
        case 26:
        case 33:
          return 2147483647;
        case 34:
        case 1:
          return 47839;
        case 38:
        case 36:
          return 99;
        case 43:
        case 37:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 28: return 32768;
        case 44: return 32767;
        case 75: return 16384;
        case 39: return 1000;
        case 89: return 700;
        case 71: return 256;
        case 40: return 255;
        case 2: return 100;
        case 180: return 64;
        case 25: return 20;
        case 5: return 16;
        case 6: return 6;
        case 73: return 4;
        case 84: {
          if (typeof navigator === 'object') return navigator['hardwareConcurrency'] || 1;
          return 1;
        }
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }

  var _fabs=Math_abs;


  var _sqrt=Math_sqrt;

  function _catclose(catd) {
      // int catclose (nl_catd catd)
      return 0;
    }

  function _pthread_setspecific(key, value) {
      if (!(key in PTHREAD_SPECIFIC)) {
        return ERRNO_CODES.EINVAL;
      }
      PTHREAD_SPECIFIC[key] = value;
      return 0;
    }

  function ___ctype_b_loc() {
      // http://refspecs.freestandards.org/LSB_3.0.0/LSB-Core-generic/LSB-Core-generic/baselib---ctype-b-loc.html
      var me = ___ctype_b_loc;
      if (!me.ret) {
        var values = [
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,8195,8194,8194,8194,8194,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,24577,49156,49156,49156,
          49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,55304,55304,55304,55304,55304,55304,55304,55304,
          55304,55304,49156,49156,49156,49156,49156,49156,49156,54536,54536,54536,54536,54536,54536,50440,50440,50440,50440,50440,
          50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,49156,49156,49156,49156,49156,
          49156,54792,54792,54792,54792,54792,54792,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,
          50696,50696,50696,50696,50696,50696,50696,49156,49156,49156,49156,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
        ];
        var i16size = 2;
        var arr = _malloc(values.length * i16size);
        for (var i = 0; i < values.length; i++) {
          HEAP16[(((arr)+(i * i16size))>>1)]=values[i];
        }
        me.ret = allocate([arr + 128 * i16size], 'i16*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  
  var LOCALE={curr:0,check:function (locale) {
        if (locale) locale = Pointer_stringify(locale);
        return locale === 'C' || locale === 'POSIX' || !locale;
      }};
  
  function _free() {
  }
  Module["_free"] = _free;function _freelocale(locale) {
      _free(locale);
    }

  
  function _malloc(bytes) {
      /* Over-allocate to make sure it is byte-aligned by 8.
       * This will leak memory, but this is only the dummy
       * implementation (replaced by dlmalloc normally) so
       * not an issue.
       */
      var ptr = Runtime.dynamicAlloc(bytes + 8);
      return (ptr+8) & 0xFFFFFFF8;
    }
  Module["_malloc"] = _malloc;function ___cxa_allocate_exception(size) {
      return _malloc(size);
    }

  var _sin=Math_sin;

   
  Module["_i64Add"] = _i64Add;

   
  Module["_bitshift64Lshr"] = _bitshift64Lshr;

  function ___cxa_pure_virtual() {
      ABORT = true;
      throw 'Pure virtual function called!';
    }

  function _catgets(catd, set_id, msg_id, s) {
      // char *catgets (nl_catd catd, int set_id, int msg_id, const char *s)
      return s;
    }

  var _atan=Math_atan;

  function _fputc(c, stream) {
      // int fputc(int c, FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fputc.html
      var chr = unSign(c & 0xFF);
      HEAP8[((_fputc.ret)>>0)]=chr;
      var fd = _fileno(stream);
      var ret = _write(fd, _fputc.ret, 1);
      if (ret == -1) {
        var streamObj = FS.getStreamFromPtr(stream);
        if (streamObj) streamObj.error = true;
        return -1;
      } else {
        return chr;
      }
    }

  var _BDtoIHigh=true;

  function ___ctype_toupper_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-toupper-loc.html
      var me = ___ctype_toupper_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,
          73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,
          81,82,83,84,85,86,87,88,89,90,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,
          145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,
          175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,
          205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,
          235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i];
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  function _pthread_cond_broadcast() {
      return 0;
    }

  function ___cxa_guard_acquire(variable) {
      if (!HEAP8[((variable)>>0)]) { // ignore SAFE_HEAP stuff because llvm mixes i64 and i8 here
        HEAP8[((variable)>>0)]=1;
        return 1;
      }
      return 0;
    }

  function ___cxa_guard_release() {}

  function _vfprintf(s, f, va_arg) {
      return _fprintf(s, f, HEAP32[((va_arg)>>2)]);
    }

  function ___ctype_tolower_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-tolower-loc.html
      var me = ___ctype_tolower_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,91,92,93,94,95,96,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,
          134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,
          164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,
          194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,
          224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,
          254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i];
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  function ___cxa_begin_catch(ptr) {
      __ZSt18uncaught_exceptionv.uncaught_exception--;
      EXCEPTIONS.caught.push(ptr);
      EXCEPTIONS.addRef(EXCEPTIONS.deAdjust(ptr));
      return ptr;
    }

  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    } 
  Module["_memcpy"] = _memcpy;


  var _cos=Math_cos;

  
  var _stdout=allocate(1, "i32*", ALLOC_STATIC);function _putchar(c) {
      // int putchar(int c);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/putchar.html
      return _fputc(c, HEAP32[((_stdout)>>2)]);
    }

  
  var PTHREAD_SPECIFIC_NEXT_KEY=1;function _pthread_key_create(key, destructor) {
      if (key == 0) {
        return ERRNO_CODES.EINVAL;
      }
      HEAP32[((key)>>2)]=PTHREAD_SPECIFIC_NEXT_KEY;
      // values start at 0
      PTHREAD_SPECIFIC[PTHREAD_SPECIFIC_NEXT_KEY] = 0;
      PTHREAD_SPECIFIC_NEXT_KEY++;
      return 0;
    }

  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
      // We control the "dynamic" memory - DYNAMIC_BASE to DYNAMICTOP
      var self = _sbrk;
      if (!self.called) {
        DYNAMICTOP = alignMemoryPage(DYNAMICTOP); // make sure we start out aligned
        self.called = true;
        assert(Runtime.dynamicAlloc);
        self.alloc = Runtime.dynamicAlloc;
        Runtime.dynamicAlloc = function() { abort('cannot dynamically allocate, sbrk now has control') };
      }
      var ret = DYNAMICTOP;
      if (bytes != 0) {
        var success = self.alloc(bytes);
        if (!success) return -1 >>> 0; // sbrk failure code
      }
      return ret;  // Previous break location.
    }

   
  Module["_bitshift64Shl"] = _bitshift64Shl;

  
  function _calloc(n, s) {
      var ret = _malloc(n*s);
      _memset(ret, 0, n*s);
      return ret;
    }function _newlocale(mask, locale, base) {
      if (!LOCALE.check(locale)) {
        ___setErrNo(ERRNO_CODES.ENOENT);
        return 0;
      }
      if (!base) base = _calloc(1, 4);
      return base;
    }

   
  Module["_memmove"] = _memmove;

  function ___errno_location() {
      return ___errno_state;
    }

  var _BItoD=true;

  function _catopen(name, oflag) {
      // nl_catd catopen (const char *name, int oflag)
      return -1;
    }

  function _pthread_cond_wait() {
      return 0;
    }

  var _atan2=Math_atan2;

  function _pthread_mutex_unlock() {}

  function _time(ptr) {
      var ret = (Date.now()/1000)|0;
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret;
      }
      return ret;
    }

  var _acos=Math_acos;

  function _uselocale(locale) {
      var old = LOCALE.curr;
      if (locale) LOCALE.curr = locale;
      return old;
    }

  var _stderr=allocate(1, "i32*", ALLOC_STATIC);
___errno_state = Runtime.staticAlloc(4); HEAP32[((___errno_state)>>2)]=0;
_fputc.ret = allocate([0], "i8", ALLOC_STATIC);
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);

staticSealed = true; // seal the static portion of memory

STACK_MAX = STACK_BASE + TOTAL_STACK;

DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);

assert(DYNAMIC_BASE < TOTAL_MEMORY, "TOTAL_MEMORY not big enough for stack");

 var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_DYNAMIC);


function invoke_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    return Module["dynCall_iiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiid(index,a1,a2,a3,a4,a5,a6) {
  try {
    return Module["dynCall_iiiiiid"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    return Module["dynCall_iiiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiid(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiid"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viii(index,a1,a2,a3) {
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    return Module["dynCall_iiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

Module.asmGlobalArg = { "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array, "NaN": NaN, "Infinity": Infinity };
Module.asmLibraryArg = { "abort": abort, "assert": assert, "invoke_iiiiiiii": invoke_iiiiiiii, "invoke_iiii": invoke_iiii, "invoke_viiiii": invoke_viiiii, "invoke_iiiiiid": invoke_iiiiiid, "invoke_vi": invoke_vi, "invoke_vii": invoke_vii, "invoke_iiiiiii": invoke_iiiiiii, "invoke_iiiiid": invoke_iiiiid, "invoke_ii": invoke_ii, "invoke_viii": invoke_viii, "invoke_v": invoke_v, "invoke_iiiiiiiii": invoke_iiiiiiiii, "invoke_iiiii": invoke_iiiii, "invoke_viiiiii": invoke_viiiiii, "invoke_iii": invoke_iii, "invoke_iiiiii": invoke_iiiiii, "invoke_viiii": invoke_viiii, "_fabs": _fabs, "_strftime": _strftime, "_pthread_cond_wait": _pthread_cond_wait, "_sin": _sin, "_acos": _acos, "_uselocale": _uselocale, "___ctype_b_loc": ___ctype_b_loc, "___cxa_guard_acquire": ___cxa_guard_acquire, "_atan2": _atan2, "___setErrNo": ___setErrNo, "_vfprintf": _vfprintf, "___assert_fail": ___assert_fail, "___cxa_allocate_exception": ___cxa_allocate_exception, "_asin": _asin, "___ctype_toupper_loc": ___ctype_toupper_loc, "_atan": _atan, "___cxa_guard_release": ___cxa_guard_release, "__addDays": __addDays, "_cos": _cos, "_pwrite": _pwrite, "_strerror_r": _strerror_r, "_strftime_l": _strftime_l, "_fprintf": _fprintf, "__reallyNegative": __reallyNegative, "_sbrk": _sbrk, "_send": _send, "_catgets": _catgets, "_newlocale": _newlocale, "___cxa_begin_catch": ___cxa_begin_catch, "_emscripten_memcpy_big": _emscripten_memcpy_big, "_fileno": _fileno, "___resumeException": ___resumeException, "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv, "_freelocale": _freelocale, "_pthread_getspecific": _pthread_getspecific, "__arraySum": __arraySum, "_putchar": _putchar, "___ctype_tolower_loc": ___ctype_tolower_loc, "_pthread_mutex_unlock": _pthread_mutex_unlock, "_pthread_once": _pthread_once, "_printf": _printf, "_pthread_key_create": _pthread_key_create, "_calloc": _calloc, "_tan": _tan, "_write": _write, "__isLeapYear": __isLeapYear, "___errno_location": ___errno_location, "_pthread_setspecific": _pthread_setspecific, "_fputc": _fputc, "___cxa_throw": ___cxa_throw, "_sysconf": _sysconf, "_pthread_cond_broadcast": _pthread_cond_broadcast, "_abort": _abort, "_catclose": _catclose, "_fwrite": _fwrite, "_time": _time, "_pthread_mutex_lock": _pthread_mutex_lock, "_strerror": _strerror, "__formatString": __formatString, "_sqrt": _sqrt, "_catopen": _catopen, "___cxa_find_matching_catch": ___cxa_find_matching_catch, "___cxa_pure_virtual": ___cxa_pure_virtual, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "cttz_i8": cttz_i8, "_stderr": _stderr };
// EMSCRIPTEN_START_ASM
var asm = (function(global, env, buffer) {
  'use asm';
  
  var HEAP8 = new global.Int8Array(buffer);
  var HEAP16 = new global.Int16Array(buffer);
  var HEAP32 = new global.Int32Array(buffer);
  var HEAPU8 = new global.Uint8Array(buffer);
  var HEAPU16 = new global.Uint16Array(buffer);
  var HEAPU32 = new global.Uint32Array(buffer);
  var HEAPF32 = new global.Float32Array(buffer);
  var HEAPF64 = new global.Float64Array(buffer);


  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var ABORT=env.ABORT|0;
  var cttz_i8=env.cttz_i8|0;
  var _stderr=env._stderr|0;

  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var nan = global.NaN, inf = global.Infinity;
  var tempInt = 0, tempBigInt = 0, tempBigIntP = 0, tempBigIntS = 0, tempBigIntR = 0.0, tempBigIntI = 0, tempBigIntD = 0, tempValue = 0, tempDouble = 0.0;

  var tempRet0 = 0;
  var tempRet1 = 0;
  var tempRet2 = 0;
  var tempRet3 = 0;
  var tempRet4 = 0;
  var tempRet5 = 0;
  var tempRet6 = 0;
  var tempRet7 = 0;
  var tempRet8 = 0;
  var tempRet9 = 0;
  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var Math_min=global.Math.min;
  var Math_clz32=global.Math.clz32;
  var abort=env.abort;
  var assert=env.assert;
  var invoke_iiiiiiii=env.invoke_iiiiiiii;
  var invoke_iiii=env.invoke_iiii;
  var invoke_viiiii=env.invoke_viiiii;
  var invoke_iiiiiid=env.invoke_iiiiiid;
  var invoke_vi=env.invoke_vi;
  var invoke_vii=env.invoke_vii;
  var invoke_iiiiiii=env.invoke_iiiiiii;
  var invoke_iiiiid=env.invoke_iiiiid;
  var invoke_ii=env.invoke_ii;
  var invoke_viii=env.invoke_viii;
  var invoke_v=env.invoke_v;
  var invoke_iiiiiiiii=env.invoke_iiiiiiiii;
  var invoke_iiiii=env.invoke_iiiii;
  var invoke_viiiiii=env.invoke_viiiiii;
  var invoke_iii=env.invoke_iii;
  var invoke_iiiiii=env.invoke_iiiiii;
  var invoke_viiii=env.invoke_viiii;
  var _fabs=env._fabs;
  var _strftime=env._strftime;
  var _pthread_cond_wait=env._pthread_cond_wait;
  var _sin=env._sin;
  var _acos=env._acos;
  var _uselocale=env._uselocale;
  var ___ctype_b_loc=env.___ctype_b_loc;
  var ___cxa_guard_acquire=env.___cxa_guard_acquire;
  var _atan2=env._atan2;
  var ___setErrNo=env.___setErrNo;
  var _vfprintf=env._vfprintf;
  var ___assert_fail=env.___assert_fail;
  var ___cxa_allocate_exception=env.___cxa_allocate_exception;
  var _asin=env._asin;
  var ___ctype_toupper_loc=env.___ctype_toupper_loc;
  var _atan=env._atan;
  var ___cxa_guard_release=env.___cxa_guard_release;
  var __addDays=env.__addDays;
  var _cos=env._cos;
  var _pwrite=env._pwrite;
  var _strerror_r=env._strerror_r;
  var _strftime_l=env._strftime_l;
  var _fprintf=env._fprintf;
  var __reallyNegative=env.__reallyNegative;
  var _sbrk=env._sbrk;
  var _send=env._send;
  var _catgets=env._catgets;
  var _newlocale=env._newlocale;
  var ___cxa_begin_catch=env.___cxa_begin_catch;
  var _emscripten_memcpy_big=env._emscripten_memcpy_big;
  var _fileno=env._fileno;
  var ___resumeException=env.___resumeException;
  var __ZSt18uncaught_exceptionv=env.__ZSt18uncaught_exceptionv;
  var _freelocale=env._freelocale;
  var _pthread_getspecific=env._pthread_getspecific;
  var __arraySum=env.__arraySum;
  var _putchar=env._putchar;
  var ___ctype_tolower_loc=env.___ctype_tolower_loc;
  var _pthread_mutex_unlock=env._pthread_mutex_unlock;
  var _pthread_once=env._pthread_once;
  var _printf=env._printf;
  var _pthread_key_create=env._pthread_key_create;
  var _calloc=env._calloc;
  var _tan=env._tan;
  var _write=env._write;
  var __isLeapYear=env.__isLeapYear;
  var ___errno_location=env.___errno_location;
  var _pthread_setspecific=env._pthread_setspecific;
  var _fputc=env._fputc;
  var ___cxa_throw=env.___cxa_throw;
  var _sysconf=env._sysconf;
  var _pthread_cond_broadcast=env._pthread_cond_broadcast;
  var _abort=env._abort;
  var _catclose=env._catclose;
  var _fwrite=env._fwrite;
  var _time=env._time;
  var _pthread_mutex_lock=env._pthread_mutex_lock;
  var _strerror=env._strerror;
  var __formatString=env.__formatString;
  var _sqrt=env._sqrt;
  var _catopen=env._catopen;
  var ___cxa_find_matching_catch=env.___cxa_find_matching_catch;
  var ___cxa_pure_virtual=env.___cxa_pure_virtual;
  var tempFloat = 0.0;

// EMSCRIPTEN_START_FUNCS
function stackAlloc(size) {
  size = size|0;
  var ret = 0;
  ret = STACKTOP;
  STACKTOP = (STACKTOP + size)|0;
  STACKTOP = (STACKTOP + 15)&-16;

  return ret|0;
}
function stackSave() {
  return STACKTOP|0;
}
function stackRestore(top) {
  top = top|0;
  STACKTOP = top;
}

function setThrew(threw, value) {
  threw = threw|0;
  value = value|0;
  if ((__THREW__|0) == 0) {
    __THREW__ = threw;
    threwValue = value;
  }
}
function copyTempFloat(ptr) {
  ptr = ptr|0;
  HEAP8[tempDoublePtr>>0] = HEAP8[ptr>>0];
  HEAP8[tempDoublePtr+1>>0] = HEAP8[ptr+1>>0];
  HEAP8[tempDoublePtr+2>>0] = HEAP8[ptr+2>>0];
  HEAP8[tempDoublePtr+3>>0] = HEAP8[ptr+3>>0];
}
function copyTempDouble(ptr) {
  ptr = ptr|0;
  HEAP8[tempDoublePtr>>0] = HEAP8[ptr>>0];
  HEAP8[tempDoublePtr+1>>0] = HEAP8[ptr+1>>0];
  HEAP8[tempDoublePtr+2>>0] = HEAP8[ptr+2>>0];
  HEAP8[tempDoublePtr+3>>0] = HEAP8[ptr+3>>0];
  HEAP8[tempDoublePtr+4>>0] = HEAP8[ptr+4>>0];
  HEAP8[tempDoublePtr+5>>0] = HEAP8[ptr+5>>0];
  HEAP8[tempDoublePtr+6>>0] = HEAP8[ptr+6>>0];
  HEAP8[tempDoublePtr+7>>0] = HEAP8[ptr+7>>0];
}

function setTempRet0(value) {
  value = value|0;
  tempRet0 = value;
}
function getTempRet0() {
  return tempRet0|0;
}

function __Z9ComputeIkPKdS0_S0_RN6ikfast18IkSolutionListBaseIdEE($eetrans,$eerot,$pfree,$solutions) {
 $eetrans = $eetrans|0;
 $eerot = $eerot|0;
 $pfree = $pfree|0;
 $solutions = $solutions|0;
 var $0 = 0, $solver = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 624|0;
 $solver = sp;
 $0 = (__ZN8IKSolver9ComputeIkEPKdS1_S1_RN6ikfast18IkSolutionListBaseIdEE($solver,$eetrans,$eerot,$pfree,$solutions)|0);
 STACKTOP = sp;return ($0|0);
}
function _main($argc,$argv) {
 $argc = $argc|0;
 $argv = $argv|0;
 var $$0 = 0, $$1 = 0, $$6 = 0, $$lcssa = 0, $$lcssa26 = 0, $$lcssa8 = 0, $0 = 0, $1 = 0, $10 = 0.0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0.0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $12 = 0, $13 = 0, $14 = 0.0, $15 = 0, $16 = 0, $17 = 0.0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0.0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0.0, $26 = 0, $27 = 0, $28 = 0, $29 = 0.0, $3 = 0.0, $30 = 0, $31 = 0, $32 = 0, $33 = 0.0, $34 = 0, $35 = 0, $36 = 0, $37 = 0.0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0.0, $42 = 0, $43 = 0, $44 = 0, $45 = 0.0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0.0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0.0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $eerot = 0, $eetrans = 0, $i$013 = 0, $i1$010 = 0, $j$09 = 0, $phitmp = 0, $phitmp24 = 0, $solutions = 0, $solvalues = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer4 = 0, $vararg_buffer8 = 0, $vararg_ptr7 = 0, $vfree = 0;
 var $vsolfree = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0;
 $vararg_buffer8 = sp + 120|0;
 $vararg_buffer4 = sp + 112|0;
 $vararg_buffer1 = sp + 104|0;
 $vararg_buffer = sp + 96|0;
 $solutions = sp + 168|0;
 $vfree = sp + 152|0;
 $eerot = sp + 24|0;
 $eetrans = sp;
 $solvalues = sp + 140|0;
 $vsolfree = sp + 128|0;
 $0 = ($argc|0)==(14);
 if (!($0)) {
  HEAP32[$vararg_buffer>>2] = 1;
  (_printf((8|0),($vararg_buffer|0))|0);
  $$1 = 1;
  STACKTOP = sp;return ($$1|0);
 }
 __ZN6ikfast14IkSolutionListIdEC2Ev($solutions);
 __ZNSt3__16vectorIdNS_9allocatorIdEEEC2Ej($vfree,1);
 $1 = ((($argv)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (+_atof($2));
 HEAPF64[$eerot>>3] = $3;
 $4 = ((($argv)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (+_atof($5));
 $7 = ((($eerot)) + 8|0);
 HEAPF64[$7>>3] = $6;
 $8 = ((($argv)) + 12|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (+_atof($9));
 $11 = ((($eerot)) + 16|0);
 HEAPF64[$11>>3] = $10;
 $12 = ((($argv)) + 16|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = (+_atof($13));
 HEAPF64[$eetrans>>3] = $14;
 $15 = ((($argv)) + 20|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = (+_atof($16));
 $18 = ((($eerot)) + 24|0);
 HEAPF64[$18>>3] = $17;
 $19 = ((($argv)) + 24|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = (+_atof($20));
 $22 = ((($eerot)) + 32|0);
 HEAPF64[$22>>3] = $21;
 $23 = ((($argv)) + 28|0);
 $24 = HEAP32[$23>>2]|0;
 $25 = (+_atof($24));
 $26 = ((($eerot)) + 40|0);
 HEAPF64[$26>>3] = $25;
 $27 = ((($argv)) + 32|0);
 $28 = HEAP32[$27>>2]|0;
 $29 = (+_atof($28));
 $30 = ((($eetrans)) + 8|0);
 HEAPF64[$30>>3] = $29;
 $31 = ((($argv)) + 36|0);
 $32 = HEAP32[$31>>2]|0;
 $33 = (+_atof($32));
 $34 = ((($eerot)) + 48|0);
 HEAPF64[$34>>3] = $33;
 $35 = ((($argv)) + 40|0);
 $36 = HEAP32[$35>>2]|0;
 $37 = (+_atof($36));
 $38 = ((($eerot)) + 56|0);
 HEAPF64[$38>>3] = $37;
 $39 = ((($argv)) + 44|0);
 $40 = HEAP32[$39>>2]|0;
 $41 = (+_atof($40));
 $42 = ((($eerot)) + 64|0);
 HEAPF64[$42>>3] = $41;
 $43 = ((($argv)) + 48|0);
 $44 = HEAP32[$43>>2]|0;
 $45 = (+_atof($44));
 $46 = ((($eetrans)) + 16|0);
 HEAPF64[$46>>3] = $45;
 $47 = ((($vfree)) + 4|0);
 $48 = HEAP32[$47>>2]|0;
 $49 = HEAP32[$vfree>>2]|0;
 $50 = ($48|0)==($49|0);
 if ($50) {
  $$lcssa8 = 0;
 } else {
  $56 = $49;$i$013 = 0;
  while(1) {
   $51 = (($i$013) + 13)|0;
   $52 = (($argv) + ($51<<2)|0);
   $53 = HEAP32[$52>>2]|0;
   $54 = (+_atof($53));
   $55 = (($56) + ($i$013<<3)|0);
   HEAPF64[$55>>3] = $54;
   $57 = (($i$013) + 1)|0;
   $58 = HEAP32[$47>>2]|0;
   $59 = HEAP32[$vfree>>2]|0;
   $60 = $58;
   $61 = $59;
   $62 = (($60) - ($61))|0;
   $63 = $62 >> 3;
   $64 = ($57>>>0)<($63>>>0);
   if ($64) {
    $56 = $59;$i$013 = $57;
   } else {
    $$lcssa = $59;$$lcssa26 = $63;
    break;
   }
  }
  $phitmp = ($$lcssa26|0)==(0);
  $phitmp24 = $phitmp ? 0 : $$lcssa;
  $$lcssa8 = $phitmp24;
 }
 $65 = (__Z9ComputeIkPKdS0_S0_RN6ikfast18IkSolutionListBaseIdEE($eetrans,$eerot,$$lcssa8,$solutions)|0);
 if ($65) {
  $67 = (__ZNK6ikfast14IkSolutionListIdE15GetNumSolutionsEv($solutions)|0);
  HEAP32[$vararg_buffer1>>2] = $67;
  (_printf((312|0),($vararg_buffer1|0))|0);
  __ZNSt3__16vectorIdNS_9allocatorIdEEEC2Ej($solvalues,7);
  $68 = (__ZNK6ikfast14IkSolutionListIdE15GetNumSolutionsEv($solutions)|0);
  $69 = ($68|0)==(0);
  if (!($69)) {
   $70 = ((($vsolfree)) + 4|0);
   $71 = ((($solvalues)) + 4|0);
   $i1$010 = 0;
   while(1) {
    $72 = (__ZNK6ikfast14IkSolutionListIdE11GetSolutionEj($solutions,$i1$010)|0);
    $73 = HEAP32[$72>>2]|0;
    $74 = ((($73)) + 16|0);
    $75 = HEAP32[$74>>2]|0;
    $76 = (FUNCTION_TABLE_ii[$75 & 63]($72)|0);
    $77 = ((($76)) + 4|0);
    $78 = HEAP32[$77>>2]|0;
    $79 = HEAP32[$76>>2]|0;
    $80 = $78;
    $81 = $79;
    $82 = (($80) - ($81))|0;
    $83 = $82 >> 2;
    HEAP32[$vararg_buffer4>>2] = $i1$010;
    $vararg_ptr7 = ((($vararg_buffer4)) + 4|0);
    HEAP32[$vararg_ptr7>>2] = $83;
    (_printf((336|0),($vararg_buffer4|0))|0);
    $84 = HEAP32[$72>>2]|0;
    $85 = ((($84)) + 16|0);
    $86 = HEAP32[$85>>2]|0;
    $87 = (FUNCTION_TABLE_ii[$86 & 63]($72)|0);
    $88 = ((($87)) + 4|0);
    $89 = HEAP32[$88>>2]|0;
    $90 = HEAP32[$87>>2]|0;
    $91 = $89;
    $92 = $90;
    $93 = (($91) - ($92))|0;
    $94 = $93 >> 2;
    __ZNSt3__16vectorIdNS_9allocatorIdEEEC2Ej($vsolfree,$94);
    $95 = HEAP32[$72>>2]|0;
    $96 = ((($95)) + 8|0);
    $97 = HEAP32[$96>>2]|0;
    $98 = HEAP32[$solvalues>>2]|0;
    $99 = HEAP32[$70>>2]|0;
    $100 = HEAP32[$vsolfree>>2]|0;
    $101 = ($99|0)==($100|0);
    $$6 = $101 ? 0 : $100;
    FUNCTION_TABLE_viii[$97 & 3]($72,$98,$$6);
    $102 = HEAP32[$71>>2]|0;
    $103 = HEAP32[$solvalues>>2]|0;
    $104 = ($102|0)==($103|0);
    if (!($104)) {
     $106 = $103;$j$09 = 0;
     while(1) {
      $105 = (($106) + ($j$09<<3)|0);
      $107 = +HEAPF64[$105>>3];
      HEAPF64[$vararg_buffer8>>3] = $107;
      (_printf((360|0),($vararg_buffer8|0))|0);
      $108 = (($j$09) + 1)|0;
      $109 = HEAP32[$71>>2]|0;
      $110 = HEAP32[$solvalues>>2]|0;
      $111 = $109;
      $112 = $110;
      $113 = (($111) - ($112))|0;
      $114 = $113 >> 3;
      $115 = ($108>>>0)<($114>>>0);
      if ($115) {
       $106 = $110;$j$09 = $108;
      } else {
       break;
      }
     }
    }
    (_putchar(10)|0);
    __ZNSt3__113__vector_baseIdNS_9allocatorIdEEED2Ev($vsolfree);
    $116 = (($i1$010) + 1)|0;
    $117 = (__ZNK6ikfast14IkSolutionListIdE15GetNumSolutionsEv($solutions)|0);
    $118 = ($116>>>0)<($117>>>0);
    if ($118) {
     $i1$010 = $116;
    } else {
     break;
    }
   }
  }
  __ZNSt3__113__vector_baseIdNS_9allocatorIdEEED2Ev($solvalues);
  $$0 = 0;
 } else {
  $66 = HEAP32[_stderr>>2]|0;
  (_fwrite((280|0),26,1,($66|0))|0);
  $$0 = -1;
 }
 __ZNSt3__113__vector_baseIdNS_9allocatorIdEEED2Ev($vfree);
 __ZN6ikfast14IkSolutionListIdED2Ev($solutions);
 $$1 = $$0;
 STACKTOP = sp;return ($$1|0);
}
function __Z5IKcosd($f) {
 $f = +$f;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+Math_cos((+$f)));
 return (+$0);
}
function __Z5IKsind($f) {
 $f = +$f;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+Math_sin((+$f)));
 return (+$0);
}
function __ZN8IKSolver9ComputeIkEPKdS1_S1_RN6ikfast18IkSolutionListBaseIdEE($this,$eetrans,$eerot,$pfree,$solutions) {
 $this = $this|0;
 $eetrans = $eetrans|0;
 $eerot = $eerot|0;
 $pfree = $pfree|0;
 $solutions = $solutions|0;
 var $$ = 0, $$2472 = 0, $$2473 = 0, $$2474 = 0, $$2475 = 0, $$2476 = 0, $$2477 = 0, $$2478 = 0, $$2479 = 0, $$2480 = 0, $$2481 = 0, $$2482 = 0, $$2483 = 0, $$2484 = 0, $$2485 = 0, $$2486 = 0, $$2487 = 0, $$2488 = 0, $$2489 = 0, $$2490 = 0;
 var $$lcssa = 0, $$lcssa2734 = 0, $$lcssa2737 = 0, $$lcssa2740 = 0, $$lcssa2743 = 0, $$lcssa2746 = 0, $$lcssa2749 = 0, $$lcssa2752 = 0, $$lcssa2755 = 0, $$lcssa2758 = 0, $$lcssa2761 = 0, $$lcssa2764 = 0, $$lcssa2767 = 0, $$lcssa2770 = 0, $$lcssa2773 = 0, $$lcssa2776 = 0, $$lcssa2779 = 0, $$lcssa2782 = 0, $$lcssa2785 = 0, $$lcssa2788 = 0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $10000 = 0.0, $10001 = 0.0, $10002 = 0.0, $10003 = 0.0, $10004 = 0.0, $10005 = 0, $10006 = 0.0, $10007 = 0.0, $10008 = 0.0, $10009 = 0.0, $1001 = 0, $10010 = 0.0, $10011 = 0, $10012 = 0.0, $10013 = 0.0;
 var $10014 = 0.0, $10015 = 0.0, $10016 = 0, $10017 = 0, $10018 = 0.0, $10019 = 0.0, $1002 = 0, $10020 = 0.0, $10021 = 0.0, $10022 = 0.0, $10023 = 0.0, $10024 = 0.0, $10025 = 0.0, $10026 = 0.0, $10027 = 0, $10028 = 0.0, $10029 = 0, $1003 = 0, $10030 = 0.0, $10031 = 0.0;
 var $10032 = 0, $10033 = 0.0, $10034 = 0, $10035 = 0.0, $10036 = 0, $10037 = 0, $10038 = 0, $10039 = 0, $1004 = 0, $10040 = 0.0, $10041 = 0.0, $10042 = 0.0, $10043 = 0.0, $10044 = 0, $10045 = 0.0, $10046 = 0.0, $10047 = 0.0, $10048 = 0.0, $10049 = 0, $1005 = 0;
 var $10050 = 0.0, $10051 = 0.0, $10052 = 0.0, $10053 = 0.0, $10054 = 0.0, $10055 = 0.0, $10056 = 0.0, $10057 = 0.0, $10058 = 0.0, $10059 = 0.0, $1006 = 0, $10060 = 0.0, $10061 = 0.0, $10062 = 0, $10063 = 0.0, $10064 = 0.0, $10065 = 0.0, $10066 = 0.0, $10067 = 0, $10068 = 0;
 var $10069 = 0, $1007 = 0, $10070 = 0.0, $10071 = 0.0, $10072 = 0, $10073 = 0, $10074 = 0.0, $10075 = 0.0, $10076 = 0.0, $10077 = 0.0, $10078 = 0.0, $10079 = 0.0, $1008 = 0, $10080 = 0.0, $10081 = 0.0, $10082 = 0.0, $10083 = 0, $10084 = 0.0, $10085 = 0, $10086 = 0.0;
 var $10087 = 0.0, $10088 = 0, $10089 = 0.0, $1009 = 0, $10090 = 0, $10091 = 0.0, $10092 = 0, $10093 = 0, $10094 = 0, $10095 = 0, $10096 = 0.0, $10097 = 0.0, $10098 = 0.0, $10099 = 0.0, $101 = 0, $1010 = 0, $10100 = 0, $10101 = 0.0, $10102 = 0.0, $10103 = 0.0;
 var $10104 = 0.0, $10105 = 0, $10106 = 0.0, $10107 = 0.0, $10108 = 0.0, $10109 = 0.0, $1011 = 0, $10110 = 0.0, $10111 = 0.0, $10112 = 0.0, $10113 = 0.0, $10114 = 0.0, $10115 = 0.0, $10116 = 0.0, $10117 = 0.0, $10118 = 0, $10119 = 0.0, $1012 = 0, $10120 = 0.0, $10121 = 0.0;
 var $10122 = 0.0, $10123 = 0.0, $10124 = 0.0, $10125 = 0, $10126 = 0, $10127 = 0, $10128 = 0.0, $10129 = 0.0, $1013 = 0, $10130 = 0.0, $10131 = 0.0, $10132 = 0.0, $10133 = 0.0, $10134 = 0.0, $10135 = 0.0, $10136 = 0.0, $10137 = 0.0, $10138 = 0.0, $10139 = 0.0, $1014 = 0;
 var $10140 = 0.0, $10141 = 0.0, $10142 = 0.0, $10143 = 0.0, $10144 = 0, $10145 = 0, $10146 = 0.0, $10147 = 0.0, $10148 = 0.0, $10149 = 0.0, $1015 = 0, $10150 = 0.0, $10151 = 0.0, $10152 = 0.0, $10153 = 0, $10154 = 0, $10155 = 0.0, $10156 = 0.0, $10157 = 0.0, $10158 = 0.0;
 var $10159 = 0.0, $1016 = 0, $10160 = 0.0, $10161 = 0.0, $10162 = 0, $10163 = 0.0, $10164 = 0, $10165 = 0.0, $10166 = 0.0, $10167 = 0.0, $10168 = 0.0, $10169 = 0.0, $1017 = 0, $10170 = 0.0, $10171 = 0.0, $10172 = 0.0, $10173 = 0.0, $10174 = 0.0, $10175 = 0.0, $10176 = 0.0;
 var $10177 = 0.0, $10178 = 0.0, $10179 = 0.0, $1018 = 0, $10180 = 0.0, $10181 = 0.0, $10182 = 0.0, $10183 = 0.0, $10184 = 0.0, $10185 = 0.0, $10186 = 0.0, $10187 = 0, $10188 = 0.0, $10189 = 0.0, $1019 = 0, $10190 = 0.0, $10191 = 0.0, $10192 = 0.0, $10193 = 0.0, $10194 = 0.0;
 var $10195 = 0.0, $10196 = 0.0, $10197 = 0, $10198 = 0.0, $10199 = 0, $102 = 0, $1020 = 0, $10200 = 0.0, $10201 = 0.0, $10202 = 0.0, $10203 = 0.0, $10204 = 0.0, $10205 = 0.0, $10206 = 0.0, $10207 = 0.0, $10208 = 0.0, $10209 = 0.0, $1021 = 0, $10210 = 0.0, $10211 = 0.0;
 var $10212 = 0.0, $10213 = 0.0, $10214 = 0.0, $10215 = 0.0, $10216 = 0, $10217 = 0, $10218 = 0.0, $10219 = 0.0, $1022 = 0, $10220 = 0.0, $10221 = 0.0, $10222 = 0.0, $10223 = 0, $10224 = 0, $10225 = 0.0, $10226 = 0.0, $10227 = 0.0, $10228 = 0.0, $10229 = 0.0, $1023 = 0;
 var $10230 = 0.0, $10231 = 0.0, $10232 = 0, $10233 = 0.0, $10234 = 0, $10235 = 0.0, $10236 = 0.0, $10237 = 0.0, $10238 = 0.0, $10239 = 0.0, $1024 = 0, $10240 = 0.0, $10241 = 0.0, $10242 = 0.0, $10243 = 0.0, $10244 = 0.0, $10245 = 0.0, $10246 = 0.0, $10247 = 0.0, $10248 = 0.0;
 var $10249 = 0.0, $1025 = 0, $10250 = 0.0, $10251 = 0.0, $10252 = 0.0, $10253 = 0.0, $10254 = 0.0, $10255 = 0.0, $10256 = 0.0, $10257 = 0, $10258 = 0.0, $10259 = 0.0, $1026 = 0, $10260 = 0.0, $10261 = 0.0, $10262 = 0.0, $10263 = 0.0, $10264 = 0.0, $10265 = 0.0, $10266 = 0.0;
 var $10267 = 0, $10268 = 0.0, $10269 = 0, $1027 = 0, $10270 = 0.0, $10271 = 0.0, $10272 = 0.0, $10273 = 0.0, $10274 = 0.0, $10275 = 0.0, $10276 = 0.0, $10277 = 0, $10278 = 0.0, $10279 = 0.0, $1028 = 0, $10280 = 0.0, $10281 = 0.0, $10282 = 0.0, $10283 = 0.0, $10284 = 0.0;
 var $10285 = 0.0, $10286 = 0.0, $10287 = 0, $10288 = 0.0, $10289 = 0.0, $1029 = 0, $10290 = 0.0, $10291 = 0.0, $10292 = 0.0, $10293 = 0.0, $10294 = 0.0, $10295 = 0.0, $10296 = 0.0, $10297 = 0.0, $10298 = 0.0, $10299 = 0.0, $103 = 0, $1030 = 0, $10300 = 0.0, $10301 = 0;
 var $10302 = 0.0, $10303 = 0.0, $10304 = 0.0, $10305 = 0.0, $10306 = 0.0, $10307 = 0.0, $10308 = 0.0, $10309 = 0.0, $1031 = 0, $10310 = 0.0, $10311 = 0.0, $10312 = 0.0, $10313 = 0.0, $10314 = 0, $10315 = 0.0, $10316 = 0, $10317 = 0.0, $10318 = 0.0, $10319 = 0.0, $1032 = 0;
 var $10320 = 0.0, $10321 = 0.0, $10322 = 0.0, $10323 = 0.0, $10324 = 0.0, $10325 = 0.0, $10326 = 0.0, $10327 = 0.0, $10328 = 0.0, $10329 = 0.0, $1033 = 0, $10330 = 0.0, $10331 = 0.0, $10332 = 0.0, $10333 = 0.0, $10334 = 0.0, $10335 = 0.0, $10336 = 0.0, $10337 = 0.0, $10338 = 0.0;
 var $10339 = 0, $1034 = 0, $10340 = 0.0, $10341 = 0.0, $10342 = 0.0, $10343 = 0.0, $10344 = 0.0, $10345 = 0, $10346 = 0.0, $10347 = 0, $10348 = 0.0, $10349 = 0.0, $1035 = 0, $10350 = 0.0, $10351 = 0.0, $10352 = 0.0, $10353 = 0.0, $10354 = 0.0, $10355 = 0.0, $10356 = 0;
 var $10357 = 0.0, $10358 = 0.0, $10359 = 0.0, $1036 = 0, $10360 = 0, $10361 = 0.0, $10362 = 0, $10363 = 0.0, $10364 = 0.0, $10365 = 0.0, $10366 = 0.0, $10367 = 0.0, $10368 = 0.0, $10369 = 0, $1037 = 0, $10370 = 0.0, $10371 = 0.0, $10372 = 0.0, $10373 = 0.0, $10374 = 0.0;
 var $10375 = 0, $10376 = 0.0, $10377 = 0.0, $10378 = 0.0, $10379 = 0.0, $1038 = 0, $10380 = 0, $10381 = 0, $10382 = 0.0, $10383 = 0.0, $10384 = 0.0, $10385 = 0.0, $10386 = 0.0, $10387 = 0.0, $10388 = 0.0, $10389 = 0.0, $1039 = 0, $10390 = 0.0, $10391 = 0, $10392 = 0.0;
 var $10393 = 0, $10394 = 0.0, $10395 = 0.0, $10396 = 0, $10397 = 0.0, $10398 = 0, $10399 = 0.0, $104 = 0, $1040 = 0, $10400 = 0, $10401 = 0, $10402 = 0, $10403 = 0, $10404 = 0.0, $10405 = 0.0, $10406 = 0.0, $10407 = 0.0, $10408 = 0, $10409 = 0.0, $1041 = 0;
 var $10410 = 0.0, $10411 = 0.0, $10412 = 0.0, $10413 = 0, $10414 = 0.0, $10415 = 0.0, $10416 = 0.0, $10417 = 0.0, $10418 = 0.0, $10419 = 0.0, $1042 = 0, $10420 = 0.0, $10421 = 0.0, $10422 = 0.0, $10423 = 0.0, $10424 = 0.0, $10425 = 0.0, $10426 = 0, $10427 = 0.0, $10428 = 0.0;
 var $10429 = 0.0, $1043 = 0, $10430 = 0.0, $10431 = 0, $10432 = 0, $10433 = 0, $10434 = 0.0, $10435 = 0.0, $10436 = 0, $10437 = 0, $10438 = 0.0, $10439 = 0.0, $1044 = 0, $10440 = 0.0, $10441 = 0.0, $10442 = 0.0, $10443 = 0.0, $10444 = 0.0, $10445 = 0.0, $10446 = 0.0;
 var $10447 = 0, $10448 = 0.0, $10449 = 0, $1045 = 0, $10450 = 0.0, $10451 = 0.0, $10452 = 0, $10453 = 0.0, $10454 = 0, $10455 = 0.0, $10456 = 0, $10457 = 0, $10458 = 0, $10459 = 0, $1046 = 0, $10460 = 0.0, $10461 = 0.0, $10462 = 0.0, $10463 = 0.0, $10464 = 0;
 var $10465 = 0.0, $10466 = 0.0, $10467 = 0.0, $10468 = 0.0, $10469 = 0, $1047 = 0, $10470 = 0.0, $10471 = 0.0, $10472 = 0.0, $10473 = 0.0, $10474 = 0.0, $10475 = 0.0, $10476 = 0.0, $10477 = 0.0, $10478 = 0.0, $10479 = 0.0, $1048 = 0, $10480 = 0.0, $10481 = 0.0, $10482 = 0;
 var $10483 = 0.0, $10484 = 0.0, $10485 = 0.0, $10486 = 0.0, $10487 = 0, $10488 = 0, $10489 = 0, $1049 = 0, $10490 = 0.0, $10491 = 0.0, $10492 = 0.0, $10493 = 0.0, $10494 = 0.0, $10495 = 0.0, $10496 = 0.0, $10497 = 0.0, $10498 = 0.0, $10499 = 0.0, $105 = 0, $1050 = 0;
 var $10500 = 0.0, $10501 = 0.0, $10502 = 0.0, $10503 = 0.0, $10504 = 0.0, $10505 = 0.0, $10506 = 0, $10507 = 0, $10508 = 0.0, $10509 = 0.0, $1051 = 0, $10510 = 0.0, $10511 = 0.0, $10512 = 0.0, $10513 = 0.0, $10514 = 0.0, $10515 = 0, $10516 = 0, $10517 = 0.0, $10518 = 0.0;
 var $10519 = 0.0, $1052 = 0, $10520 = 0.0, $10521 = 0.0, $10522 = 0.0, $10523 = 0.0, $10524 = 0, $10525 = 0.0, $10526 = 0, $10527 = 0.0, $10528 = 0.0, $10529 = 0.0, $1053 = 0, $10530 = 0.0, $10531 = 0.0, $10532 = 0.0, $10533 = 0.0, $10534 = 0.0, $10535 = 0.0, $10536 = 0.0;
 var $10537 = 0.0, $10538 = 0.0, $10539 = 0.0, $1054 = 0, $10540 = 0.0, $10541 = 0.0, $10542 = 0.0, $10543 = 0.0, $10544 = 0.0, $10545 = 0.0, $10546 = 0.0, $10547 = 0.0, $10548 = 0.0, $10549 = 0, $1055 = 0.0, $10550 = 0.0, $10551 = 0.0, $10552 = 0.0, $10553 = 0.0, $10554 = 0.0;
 var $10555 = 0.0, $10556 = 0.0, $10557 = 0.0, $10558 = 0.0, $10559 = 0, $1056 = 0, $10560 = 0.0, $10561 = 0, $10562 = 0.0, $10563 = 0.0, $10564 = 0.0, $10565 = 0.0, $10566 = 0.0, $10567 = 0.0, $10568 = 0.0, $10569 = 0.0, $1057 = 0.0, $10570 = 0.0, $10571 = 0.0, $10572 = 0.0;
 var $10573 = 0.0, $10574 = 0.0, $10575 = 0.0, $10576 = 0.0, $10577 = 0, $10578 = 0, $10579 = 0.0, $1058 = 0.0, $10580 = 0.0, $10581 = 0.0, $10582 = 0.0, $10583 = 0.0, $10584 = 0, $10585 = 0, $10586 = 0.0, $10587 = 0.0, $10588 = 0.0, $10589 = 0.0, $1059 = 0.0, $10590 = 0.0;
 var $10591 = 0.0, $10592 = 0.0, $10593 = 0, $10594 = 0.0, $10595 = 0, $10596 = 0.0, $10597 = 0.0, $10598 = 0.0, $10599 = 0.0, $106 = 0, $1060 = 0, $10600 = 0.0, $10601 = 0.0, $10602 = 0.0, $10603 = 0.0, $10604 = 0.0, $10605 = 0.0, $10606 = 0.0, $10607 = 0.0, $10608 = 0.0;
 var $10609 = 0.0, $1061 = 0.0, $10610 = 0.0, $10611 = 0.0, $10612 = 0.0, $10613 = 0.0, $10614 = 0.0, $10615 = 0.0, $10616 = 0.0, $10617 = 0.0, $10618 = 0, $10619 = 0.0, $1062 = 0, $10620 = 0.0, $10621 = 0.0, $10622 = 0.0, $10623 = 0.0, $10624 = 0.0, $10625 = 0.0, $10626 = 0.0;
 var $10627 = 0.0, $10628 = 0, $10629 = 0.0, $1063 = 0.0, $10630 = 0, $10631 = 0.0, $10632 = 0.0, $10633 = 0.0, $10634 = 0.0, $10635 = 0.0, $10636 = 0.0, $10637 = 0.0, $10638 = 0, $10639 = 0.0, $1064 = 0.0, $10640 = 0.0, $10641 = 0.0, $10642 = 0.0, $10643 = 0.0, $10644 = 0.0;
 var $10645 = 0.0, $10646 = 0.0, $10647 = 0.0, $10648 = 0, $10649 = 0.0, $1065 = 0.0, $10650 = 0.0, $10651 = 0.0, $10652 = 0.0, $10653 = 0.0, $10654 = 0.0, $10655 = 0.0, $10656 = 0.0, $10657 = 0.0, $10658 = 0.0, $10659 = 0.0, $1066 = 0, $10660 = 0.0, $10661 = 0.0, $10662 = 0;
 var $10663 = 0.0, $10664 = 0.0, $10665 = 0.0, $10666 = 0.0, $10667 = 0.0, $10668 = 0.0, $10669 = 0.0, $1067 = 0, $10670 = 0.0, $10671 = 0.0, $10672 = 0.0, $10673 = 0.0, $10674 = 0.0, $10675 = 0, $10676 = 0.0, $10677 = 0, $10678 = 0.0, $10679 = 0.0, $1068 = 0, $10680 = 0.0;
 var $10681 = 0.0, $10682 = 0.0, $10683 = 0.0, $10684 = 0.0, $10685 = 0.0, $10686 = 0.0, $10687 = 0.0, $10688 = 0.0, $10689 = 0.0, $1069 = 0.0, $10690 = 0.0, $10691 = 0.0, $10692 = 0.0, $10693 = 0.0, $10694 = 0.0, $10695 = 0.0, $10696 = 0.0, $10697 = 0.0, $10698 = 0.0, $10699 = 0.0;
 var $107 = 0, $1070 = 0, $10700 = 0, $10701 = 0.0, $10702 = 0.0, $10703 = 0.0, $10704 = 0.0, $10705 = 0.0, $10706 = 0, $10707 = 0.0, $10708 = 0, $10709 = 0.0, $1071 = 0.0, $10710 = 0.0, $10711 = 0.0, $10712 = 0.0, $10713 = 0.0, $10714 = 0.0, $10715 = 0.0, $10716 = 0.0;
 var $10717 = 0, $10718 = 0.0, $10719 = 0.0, $1072 = 0, $10720 = 0.0, $10721 = 0, $10722 = 0.0, $10723 = 0, $10724 = 0.0, $10725 = 0.0, $10726 = 0.0, $10727 = 0.0, $10728 = 0.0, $10729 = 0.0, $1073 = 0.0, $10730 = 0, $10731 = 0.0, $10732 = 0.0, $10733 = 0.0, $10734 = 0.0;
 var $10735 = 0.0, $10736 = 0, $10737 = 0.0, $10738 = 0.0, $10739 = 0.0, $1074 = 0.0, $10740 = 0.0, $10741 = 0, $10742 = 0, $10743 = 0.0, $10744 = 0.0, $10745 = 0.0, $10746 = 0.0, $10747 = 0.0, $10748 = 0.0, $10749 = 0.0, $1075 = 0.0, $10750 = 0.0, $10751 = 0.0, $10752 = 0;
 var $10753 = 0.0, $10754 = 0, $10755 = 0.0, $10756 = 0.0, $10757 = 0, $10758 = 0.0, $10759 = 0, $1076 = 0.0, $10760 = 0.0, $10761 = 0, $10762 = 0, $10763 = 0, $10764 = 0, $10765 = 0.0, $10766 = 0.0, $10767 = 0.0, $10768 = 0.0, $10769 = 0, $1077 = 0.0, $10770 = 0.0;
 var $10771 = 0.0, $10772 = 0.0, $10773 = 0.0, $10774 = 0, $10775 = 0.0, $10776 = 0.0, $10777 = 0.0, $10778 = 0.0, $10779 = 0.0, $1078 = 0.0, $10780 = 0.0, $10781 = 0.0, $10782 = 0.0, $10783 = 0.0, $10784 = 0.0, $10785 = 0.0, $10786 = 0.0, $10787 = 0.0, $10788 = 0, $10789 = 0.0;
 var $1079 = 0.0, $10790 = 0.0, $10791 = 0.0, $10792 = 0.0, $10793 = 0, $10794 = 0, $10795 = 0, $10796 = 0.0, $10797 = 0.0, $10798 = 0.0, $10799 = 0, $108 = 0, $1080 = 0, $10800 = 0, $10801 = 0.0, $10802 = 0.0, $10803 = 0.0, $10804 = 0.0, $10805 = 0.0, $10806 = 0.0;
 var $10807 = 0.0, $10808 = 0.0, $10809 = 0.0, $1081 = 0.0, $10810 = 0, $10811 = 0.0, $10812 = 0, $10813 = 0.0, $10814 = 0.0, $10815 = 0, $10816 = 0.0, $10817 = 0, $10818 = 0.0, $10819 = 0, $1082 = 0.0, $10820 = 0, $10821 = 0, $10822 = 0, $10823 = 0.0, $10824 = 0.0;
 var $10825 = 0.0, $10826 = 0.0, $10827 = 0, $10828 = 0.0, $10829 = 0.0, $1083 = 0.0, $10830 = 0.0, $10831 = 0.0, $10832 = 0, $10833 = 0.0, $10834 = 0.0, $10835 = 0.0, $10836 = 0.0, $10837 = 0.0, $10838 = 0.0, $10839 = 0.0, $1084 = 0.0, $10840 = 0.0, $10841 = 0.0, $10842 = 0.0;
 var $10843 = 0.0, $10844 = 0.0, $10845 = 0.0, $10846 = 0, $10847 = 0.0, $10848 = 0.0, $10849 = 0.0, $1085 = 0, $10850 = 0.0, $10851 = 0.0, $10852 = 0.0, $10853 = 0, $10854 = 0, $10855 = 0, $10856 = 0.0, $10857 = 0.0, $10858 = 0.0, $10859 = 0.0, $1086 = 0.0, $10860 = 0.0;
 var $10861 = 0.0, $10862 = 0.0, $10863 = 0.0, $10864 = 0.0, $10865 = 0, $10866 = 0, $10867 = 0.0, $10868 = 0.0, $10869 = 0.0, $1087 = 0.0, $10870 = 0.0, $10871 = 0.0, $10872 = 0.0, $10873 = 0.0, $10874 = 0.0, $10875 = 0.0, $10876 = 0.0, $10877 = 0.0, $10878 = 0.0, $10879 = 0;
 var $1088 = 0.0, $10880 = 0, $10881 = 0.0, $10882 = 0.0, $10883 = 0.0, $10884 = 0.0, $10885 = 0.0, $10886 = 0.0, $10887 = 0.0, $10888 = 0, $10889 = 0.0, $1089 = 0.0, $10890 = 0, $10891 = 0.0, $10892 = 0.0, $10893 = 0.0, $10894 = 0.0, $10895 = 0.0, $10896 = 0.0, $10897 = 0.0;
 var $10898 = 0.0, $10899 = 0.0, $109 = 0, $1090 = 0.0, $10900 = 0.0, $10901 = 0.0, $10902 = 0.0, $10903 = 0.0, $10904 = 0.0, $10905 = 0.0, $10906 = 0.0, $10907 = 0.0, $10908 = 0.0, $10909 = 0.0, $1091 = 0.0, $10910 = 0.0, $10911 = 0.0, $10912 = 0.0, $10913 = 0.0, $10914 = 0;
 var $10915 = 0.0, $10916 = 0.0, $10917 = 0.0, $10918 = 0.0, $10919 = 0.0, $1092 = 0.0, $10920 = 0.0, $10921 = 0.0, $10922 = 0.0, $10923 = 0.0, $10924 = 0.0, $10925 = 0, $10926 = 0.0, $10927 = 0, $10928 = 0.0, $10929 = 0.0, $1093 = 0.0, $10930 = 0.0, $10931 = 0.0, $10932 = 0.0;
 var $10933 = 0.0, $10934 = 0.0, $10935 = 0.0, $10936 = 0.0, $10937 = 0.0, $10938 = 0.0, $10939 = 0, $1094 = 0.0, $10940 = 0, $10941 = 0.0, $10942 = 0.0, $10943 = 0.0, $10944 = 0.0, $10945 = 0.0, $10946 = 0.0, $10947 = 0.0, $10948 = 0.0, $10949 = 0.0, $1095 = 0.0, $10950 = 0.0;
 var $10951 = 0.0, $10952 = 0, $10953 = 0, $10954 = 0.0, $10955 = 0.0, $10956 = 0.0, $10957 = 0.0, $10958 = 0.0, $10959 = 0.0, $1096 = 0.0, $10960 = 0.0, $10961 = 0, $10962 = 0.0, $10963 = 0, $10964 = 0.0, $10965 = 0.0, $10966 = 0.0, $10967 = 0.0, $10968 = 0.0, $10969 = 0.0;
 var $1097 = 0.0, $10970 = 0.0, $10971 = 0.0, $10972 = 0.0, $10973 = 0.0, $10974 = 0.0, $10975 = 0.0, $10976 = 0.0, $10977 = 0.0, $10978 = 0.0, $10979 = 0.0, $1098 = 0.0, $10980 = 0.0, $10981 = 0.0, $10982 = 0.0, $10983 = 0.0, $10984 = 0.0, $10985 = 0.0, $10986 = 0.0, $10987 = 0;
 var $10988 = 0.0, $10989 = 0.0, $1099 = 0.0, $10990 = 0.0, $10991 = 0.0, $10992 = 0.0, $10993 = 0.0, $10994 = 0.0, $10995 = 0.0, $10996 = 0.0, $10997 = 0.0, $10998 = 0, $10999 = 0.0, $11 = 0, $110 = 0, $1100 = 0.0, $11000 = 0, $11001 = 0.0, $11002 = 0.0, $11003 = 0.0;
 var $11004 = 0.0, $11005 = 0.0, $11006 = 0.0, $11007 = 0.0, $11008 = 0.0, $11009 = 0, $1101 = 0.0, $11010 = 0.0, $11011 = 0.0, $11012 = 0.0, $11013 = 0, $11014 = 0.0, $11015 = 0, $11016 = 0.0, $11017 = 0.0, $11018 = 0.0, $11019 = 0.0, $1102 = 0.0, $11020 = 0.0, $11021 = 0.0;
 var $11022 = 0, $11023 = 0.0, $11024 = 0.0, $11025 = 0.0, $11026 = 0.0, $11027 = 0.0, $11028 = 0.0, $11029 = 0.0, $1103 = 0.0, $11030 = 0.0, $11031 = 0.0, $11032 = 0.0, $11033 = 0.0, $11034 = 0.0, $11035 = 0.0, $11036 = 0.0, $11037 = 0, $11038 = 0.0, $11039 = 0.0, $1104 = 0.0;
 var $11040 = 0.0, $11041 = 0.0, $11042 = 0.0, $11043 = 0.0, $11044 = 0.0, $11045 = 0.0, $11046 = 0.0, $11047 = 0.0, $11048 = 0.0, $11049 = 0.0, $1105 = 0.0, $11050 = 0.0, $11051 = 0.0, $11052 = 0.0, $11053 = 0, $11054 = 0.0, $11055 = 0.0, $11056 = 0.0, $11057 = 0.0, $11058 = 0.0;
 var $11059 = 0.0, $1106 = 0.0, $11060 = 0.0, $11061 = 0.0, $11062 = 0.0, $11063 = 0.0, $11064 = 0.0, $11065 = 0, $11066 = 0, $11067 = 0.0, $11068 = 0.0, $11069 = 0.0, $1107 = 0.0, $11070 = 0.0, $11071 = 0.0, $11072 = 0.0, $11073 = 0.0, $11074 = 0.0, $11075 = 0.0, $11076 = 0;
 var $11077 = 0.0, $11078 = 0, $11079 = 0.0, $1108 = 0.0, $11080 = 0.0, $11081 = 0, $11082 = 0.0, $11083 = 0, $11084 = 0.0, $11085 = 0, $11086 = 0, $11087 = 0, $11088 = 0, $11089 = 0, $1109 = 0, $11090 = 0, $11091 = 0, $11092 = 0, $11093 = 0, $11094 = 0;
 var $11095 = 0.0, $11096 = 0, $11097 = 0.0, $11098 = 0.0, $11099 = 0.0, $111 = 0, $1110 = 0.0, $11100 = 0, $11101 = 0.0, $11102 = 0, $11103 = 0.0, $11104 = 0.0, $11105 = 0.0, $11106 = 0, $11107 = 0, $11108 = 0, $11109 = 0.0, $1111 = 0.0, $11110 = 0, $11111 = 0.0;
 var $11112 = 0, $11113 = 0.0, $11114 = 0.0, $11115 = 0.0, $11116 = 0.0, $11117 = 0.0, $11118 = 0.0, $11119 = 0.0, $1112 = 0.0, $11120 = 0.0, $11121 = 0.0, $11122 = 0.0, $11123 = 0.0, $11124 = 0.0, $11125 = 0.0, $11126 = 0.0, $11127 = 0.0, $11128 = 0.0, $11129 = 0.0, $1113 = 0.0;
 var $11130 = 0.0, $11131 = 0.0, $11132 = 0.0, $11133 = 0.0, $11134 = 0.0, $11135 = 0.0, $11136 = 0.0, $11137 = 0.0, $11138 = 0.0, $11139 = 0.0, $1114 = 0.0, $11140 = 0.0, $11141 = 0.0, $11142 = 0.0, $11143 = 0.0, $11144 = 0.0, $11145 = 0.0, $11146 = 0.0, $11147 = 0, $11148 = 0.0;
 var $11149 = 0.0, $1115 = 0.0, $11150 = 0.0, $11151 = 0.0, $11152 = 0, $11153 = 0.0, $11154 = 0, $11155 = 0.0, $11156 = 0, $11157 = 0, $11158 = 0.0, $11159 = 0.0, $1116 = 0.0, $11160 = 0.0, $11161 = 0.0, $11162 = 0.0, $11163 = 0.0, $11164 = 0.0, $11165 = 0.0, $11166 = 0.0;
 var $11167 = 0.0, $11168 = 0, $11169 = 0, $1117 = 0.0, $11170 = 0.0, $11171 = 0.0, $11172 = 0.0, $11173 = 0.0, $11174 = 0.0, $11175 = 0.0, $11176 = 0.0, $11177 = 0.0, $11178 = 0.0, $11179 = 0, $1118 = 0.0, $11180 = 0.0, $11181 = 0, $11182 = 0.0, $11183 = 0.0, $11184 = 0;
 var $11185 = 0.0, $11186 = 0, $11187 = 0.0, $11188 = 0, $11189 = 0, $1119 = 0.0, $11190 = 0, $11191 = 0, $11192 = 0, $11193 = 0, $11194 = 0, $11195 = 0, $11196 = 0, $11197 = 0, $11198 = 0.0, $11199 = 0, $112 = 0, $1120 = 0.0, $11200 = 0.0, $11201 = 0.0;
 var $11202 = 0.0, $11203 = 0, $11204 = 0.0, $11205 = 0, $11206 = 0.0, $11207 = 0.0, $11208 = 0.0, $11209 = 0, $1121 = 0.0, $11210 = 0, $11211 = 0, $11212 = 0.0, $11213 = 0, $11214 = 0.0, $11215 = 0, $11216 = 0.0, $11217 = 0.0, $11218 = 0.0, $11219 = 0.0, $1122 = 0.0;
 var $11220 = 0.0, $11221 = 0.0, $11222 = 0.0, $11223 = 0.0, $11224 = 0.0, $11225 = 0.0, $11226 = 0.0, $11227 = 0.0, $11228 = 0.0, $11229 = 0.0, $1123 = 0.0, $11230 = 0.0, $11231 = 0.0, $11232 = 0.0, $11233 = 0.0, $11234 = 0.0, $11235 = 0.0, $11236 = 0.0, $11237 = 0.0, $11238 = 0.0;
 var $11239 = 0.0, $1124 = 0.0, $11240 = 0.0, $11241 = 0.0, $11242 = 0.0, $11243 = 0.0, $11244 = 0.0, $11245 = 0.0, $11246 = 0.0, $11247 = 0.0, $11248 = 0.0, $11249 = 0.0, $1125 = 0.0, $11250 = 0.0, $11251 = 0, $11252 = 0.0, $11253 = 0.0, $11254 = 0.0, $11255 = 0.0, $11256 = 0;
 var $11257 = 0.0, $11258 = 0, $11259 = 0.0, $1126 = 0.0, $11260 = 0, $11261 = 0, $11262 = 0.0, $11263 = 0.0, $11264 = 0.0, $11265 = 0, $11266 = 0, $11267 = 0.0, $11268 = 0.0, $11269 = 0.0, $1127 = 0.0, $11270 = 0.0, $11271 = 0.0, $11272 = 0.0, $11273 = 0.0, $11274 = 0.0;
 var $11275 = 0.0, $11276 = 0, $11277 = 0.0, $11278 = 0, $11279 = 0.0, $1128 = 0.0, $11280 = 0.0, $11281 = 0, $11282 = 0.0, $11283 = 0, $11284 = 0.0, $11285 = 0, $11286 = 0, $11287 = 0, $11288 = 0, $11289 = 0, $1129 = 0.0, $11290 = 0, $11291 = 0, $11292 = 0;
 var $11293 = 0, $11294 = 0, $11295 = 0.0, $11296 = 0, $11297 = 0.0, $11298 = 0.0, $11299 = 0.0, $113 = 0, $1130 = 0.0, $11300 = 0, $11301 = 0.0, $11302 = 0, $11303 = 0.0, $11304 = 0.0, $11305 = 0.0, $11306 = 0, $11307 = 0, $11308 = 0, $11309 = 0.0, $1131 = 0.0;
 var $11310 = 0, $11311 = 0.0, $11312 = 0, $11313 = 0.0, $11314 = 0.0, $11315 = 0.0, $11316 = 0.0, $11317 = 0.0, $11318 = 0.0, $11319 = 0.0, $1132 = 0.0, $11320 = 0.0, $11321 = 0.0, $11322 = 0.0, $11323 = 0.0, $11324 = 0.0, $11325 = 0.0, $11326 = 0.0, $11327 = 0.0, $11328 = 0.0;
 var $11329 = 0.0, $1133 = 0, $11330 = 0.0, $11331 = 0.0, $11332 = 0.0, $11333 = 0.0, $11334 = 0.0, $11335 = 0.0, $11336 = 0.0, $11337 = 0.0, $11338 = 0.0, $11339 = 0.0, $1134 = 0.0, $11340 = 0.0, $11341 = 0.0, $11342 = 0.0, $11343 = 0.0, $11344 = 0.0, $11345 = 0.0, $11346 = 0.0;
 var $11347 = 0.0, $11348 = 0, $11349 = 0.0, $1135 = 0.0, $11350 = 0.0, $11351 = 0.0, $11352 = 0.0, $11353 = 0.0, $11354 = 0.0, $11355 = 0.0, $11356 = 0.0, $11357 = 0.0, $11358 = 0, $11359 = 0.0, $1136 = 0.0, $11360 = 0, $11361 = 0.0, $11362 = 0, $11363 = 0, $11364 = 0.0;
 var $11365 = 0.0, $11366 = 0.0, $11367 = 0.0, $11368 = 0.0, $11369 = 0.0, $1137 = 0.0, $11370 = 0.0, $11371 = 0.0, $11372 = 0.0, $11373 = 0.0, $11374 = 0.0, $11375 = 0.0, $11376 = 0.0, $11377 = 0.0, $11378 = 0.0, $11379 = 0.0, $1138 = 0.0, $11380 = 0.0, $11381 = 0.0, $11382 = 0.0;
 var $11383 = 0.0, $11384 = 0, $11385 = 0, $11386 = 0.0, $11387 = 0.0, $11388 = 0.0, $11389 = 0.0, $1139 = 0.0, $11390 = 0.0, $11391 = 0.0, $11392 = 0.0, $11393 = 0.0, $11394 = 0.0, $11395 = 0.0, $11396 = 0.0, $11397 = 0.0, $11398 = 0.0, $11399 = 0.0, $114 = 0, $1140 = 0.0;
 var $11400 = 0.0, $11401 = 0.0, $11402 = 0.0, $11403 = 0.0, $11404 = 0.0, $11405 = 0.0, $11406 = 0.0, $11407 = 0.0, $11408 = 0.0, $11409 = 0.0, $1141 = 0.0, $11410 = 0.0, $11411 = 0.0, $11412 = 0.0, $11413 = 0.0, $11414 = 0.0, $11415 = 0.0, $11416 = 0.0, $11417 = 0.0, $11418 = 0.0;
 var $11419 = 0.0, $1142 = 0.0, $11420 = 0.0, $11421 = 0.0, $11422 = 0.0, $11423 = 0.0, $11424 = 0.0, $11425 = 0.0, $11426 = 0.0, $11427 = 0.0, $11428 = 0, $11429 = 0, $1143 = 0.0, $11430 = 0.0, $11431 = 0.0, $11432 = 0.0, $11433 = 0.0, $11434 = 0.0, $11435 = 0.0, $11436 = 0.0;
 var $11437 = 0, $11438 = 0.0, $11439 = 0, $1144 = 0.0, $11440 = 0.0, $11441 = 0.0, $11442 = 0.0, $11443 = 0.0, $11444 = 0.0, $11445 = 0.0, $11446 = 0.0, $11447 = 0.0, $11448 = 0.0, $11449 = 0.0, $1145 = 0.0, $11450 = 0.0, $11451 = 0.0, $11452 = 0.0, $11453 = 0.0, $11454 = 0.0;
 var $11455 = 0.0, $11456 = 0.0, $11457 = 0.0, $11458 = 0.0, $11459 = 0.0, $1146 = 0.0, $11460 = 0.0, $11461 = 0.0, $11462 = 0.0, $11463 = 0.0, $11464 = 0.0, $11465 = 0.0, $11466 = 0.0, $11467 = 0.0, $11468 = 0.0, $11469 = 0.0, $1147 = 0.0, $11470 = 0.0, $11471 = 0.0, $11472 = 0.0;
 var $11473 = 0.0, $11474 = 0.0, $11475 = 0.0, $11476 = 0.0, $11477 = 0.0, $11478 = 0.0, $11479 = 0.0, $1148 = 0.0, $11480 = 0.0, $11481 = 0.0, $11482 = 0.0, $11483 = 0.0, $11484 = 0.0, $11485 = 0.0, $11486 = 0.0, $11487 = 0.0, $11488 = 0.0, $11489 = 0.0, $1149 = 0.0, $11490 = 0.0;
 var $11491 = 0.0, $11492 = 0.0, $11493 = 0.0, $11494 = 0.0, $11495 = 0.0, $11496 = 0.0, $11497 = 0.0, $11498 = 0.0, $11499 = 0.0, $115 = 0, $1150 = 0.0, $11500 = 0, $11501 = 0.0, $11502 = 0.0, $11503 = 0.0, $11504 = 0.0, $11505 = 0.0, $11506 = 0.0, $11507 = 0.0, $11508 = 0;
 var $11509 = 0.0, $1151 = 0.0, $11510 = 0, $11511 = 0.0, $11512 = 0, $11513 = 0.0, $11514 = 0, $11515 = 0.0, $11516 = 0.0, $11517 = 0.0, $11518 = 0.0, $11519 = 0.0, $1152 = 0.0, $11520 = 0.0, $11521 = 0.0, $11522 = 0.0, $11523 = 0.0, $11524 = 0.0, $11525 = 0.0, $11526 = 0.0;
 var $11527 = 0.0, $11528 = 0.0, $11529 = 0.0, $1153 = 0.0, $11530 = 0.0, $11531 = 0.0, $11532 = 0.0, $11533 = 0.0, $11534 = 0, $11535 = 0, $11536 = 0.0, $11537 = 0.0, $11538 = 0.0, $11539 = 0.0, $1154 = 0.0, $11540 = 0.0, $11541 = 0.0, $11542 = 0.0, $11543 = 0.0, $11544 = 0.0;
 var $11545 = 0.0, $11546 = 0.0, $11547 = 0.0, $11548 = 0.0, $11549 = 0.0, $1155 = 0.0, $11550 = 0.0, $11551 = 0.0, $11552 = 0.0, $11553 = 0.0, $11554 = 0.0, $11555 = 0.0, $11556 = 0.0, $11557 = 0.0, $11558 = 0.0, $11559 = 0.0, $1156 = 0.0, $11560 = 0.0, $11561 = 0.0, $11562 = 0.0;
 var $11563 = 0.0, $11564 = 0.0, $11565 = 0.0, $11566 = 0.0, $11567 = 0, $11568 = 0, $11569 = 0.0, $1157 = 0.0, $11570 = 0.0, $11571 = 0.0, $11572 = 0.0, $11573 = 0.0, $11574 = 0.0, $11575 = 0.0, $11576 = 0, $11577 = 0.0, $11578 = 0, $11579 = 0.0, $1158 = 0.0, $11580 = 0.0;
 var $11581 = 0.0, $11582 = 0.0, $11583 = 0.0, $11584 = 0.0, $11585 = 0.0, $11586 = 0.0, $11587 = 0.0, $11588 = 0.0, $11589 = 0.0, $1159 = 0.0, $11590 = 0.0, $11591 = 0.0, $11592 = 0.0, $11593 = 0.0, $11594 = 0.0, $11595 = 0.0, $11596 = 0.0, $11597 = 0.0, $11598 = 0.0, $11599 = 0.0;
 var $116 = 0, $1160 = 0.0, $11600 = 0.0, $11601 = 0.0, $11602 = 0.0, $11603 = 0.0, $11604 = 0.0, $11605 = 0.0, $11606 = 0.0, $11607 = 0.0, $11608 = 0.0, $11609 = 0.0, $1161 = 0.0, $11610 = 0.0, $11611 = 0.0, $11612 = 0.0, $11613 = 0.0, $11614 = 0.0, $11615 = 0.0, $11616 = 0.0;
 var $11617 = 0.0, $11618 = 0.0, $11619 = 0.0, $1162 = 0.0, $11620 = 0.0, $11621 = 0.0, $11622 = 0.0, $11623 = 0.0, $11624 = 0.0, $11625 = 0.0, $11626 = 0.0, $11627 = 0.0, $11628 = 0.0, $11629 = 0.0, $1163 = 0.0, $11630 = 0.0, $11631 = 0.0, $11632 = 0.0, $11633 = 0.0, $11634 = 0.0;
 var $11635 = 0.0, $11636 = 0.0, $11637 = 0.0, $11638 = 0.0, $11639 = 0, $1164 = 0, $11640 = 0.0, $11641 = 0.0, $11642 = 0.0, $11643 = 0.0, $11644 = 0.0, $11645 = 0.0, $11646 = 0.0, $11647 = 0.0, $11648 = 0, $11649 = 0.0, $1165 = 0.0, $11650 = 0, $11651 = 0.0, $11652 = 0;
 var $11653 = 0.0, $11654 = 0, $11655 = 0.0, $11656 = 0.0, $11657 = 0.0, $11658 = 0.0, $11659 = 0.0, $1166 = 0.0, $11660 = 0.0, $11661 = 0.0, $11662 = 0.0, $11663 = 0.0, $11664 = 0.0, $11665 = 0.0, $11666 = 0.0, $11667 = 0.0, $11668 = 0.0, $11669 = 0.0, $1167 = 0.0, $11670 = 0.0;
 var $11671 = 0.0, $11672 = 0.0, $11673 = 0.0, $11674 = 0.0, $11675 = 0.0, $11676 = 0.0, $11677 = 0.0, $11678 = 0.0, $11679 = 0.0, $1168 = 0.0, $11680 = 0.0, $11681 = 0.0, $11682 = 0.0, $11683 = 0.0, $11684 = 0.0, $11685 = 0.0, $11686 = 0.0, $11687 = 0.0, $11688 = 0.0, $11689 = 0.0;
 var $1169 = 0.0, $11690 = 0.0, $11691 = 0, $11692 = 0, $11693 = 0.0, $11694 = 0.0, $11695 = 0.0, $11696 = 0.0, $11697 = 0.0, $11698 = 0, $11699 = 0, $117 = 0, $1170 = 0.0, $11700 = 0.0, $11701 = 0.0, $11702 = 0.0, $11703 = 0.0, $11704 = 0.0, $11705 = 0.0, $11706 = 0.0;
 var $11707 = 0, $11708 = 0.0, $11709 = 0, $1171 = 0.0, $11710 = 0.0, $11711 = 0.0, $11712 = 0.0, $11713 = 0.0, $11714 = 0.0, $11715 = 0.0, $11716 = 0.0, $11717 = 0.0, $11718 = 0.0, $11719 = 0.0, $1172 = 0.0, $11720 = 0.0, $11721 = 0.0, $11722 = 0.0, $11723 = 0.0, $11724 = 0.0;
 var $11725 = 0.0, $11726 = 0.0, $11727 = 0.0, $11728 = 0.0, $11729 = 0.0, $1173 = 0.0, $11730 = 0.0, $11731 = 0.0, $11732 = 0.0, $11733 = 0.0, $11734 = 0.0, $11735 = 0.0, $11736 = 0.0, $11737 = 0.0, $11738 = 0.0, $11739 = 0.0, $1174 = 0.0, $11740 = 0.0, $11741 = 0.0, $11742 = 0.0;
 var $11743 = 0.0, $11744 = 0.0, $11745 = 0.0, $11746 = 0.0, $11747 = 0.0, $11748 = 0.0, $11749 = 0.0, $1175 = 0.0, $11750 = 0.0, $11751 = 0.0, $11752 = 0.0, $11753 = 0.0, $11754 = 0.0, $11755 = 0.0, $11756 = 0.0, $11757 = 0.0, $11758 = 0.0, $11759 = 0.0, $1176 = 0, $11760 = 0.0;
 var $11761 = 0.0, $11762 = 0.0, $11763 = 0.0, $11764 = 0.0, $11765 = 0.0, $11766 = 0.0, $11767 = 0.0, $11768 = 0.0, $11769 = 0.0, $1177 = 0.0, $11770 = 0, $11771 = 0.0, $11772 = 0.0, $11773 = 0.0, $11774 = 0.0, $11775 = 0.0, $11776 = 0.0, $11777 = 0.0, $11778 = 0.0, $11779 = 0;
 var $1178 = 0.0, $11780 = 0.0, $11781 = 0, $11782 = 0.0, $11783 = 0, $11784 = 0.0, $11785 = 0, $11786 = 0.0, $11787 = 0.0, $11788 = 0.0, $11789 = 0.0, $1179 = 0.0, $11790 = 0.0, $11791 = 0.0, $11792 = 0.0, $11793 = 0.0, $11794 = 0.0, $11795 = 0.0, $11796 = 0.0, $11797 = 0.0;
 var $11798 = 0.0, $11799 = 0.0, $118 = 0, $1180 = 0.0, $11800 = 0.0, $11801 = 0.0, $11802 = 0.0, $11803 = 0, $11804 = 0.0, $11805 = 0.0, $11806 = 0.0, $11807 = 0.0, $11808 = 0.0, $11809 = 0.0, $1181 = 0.0, $11810 = 0.0, $11811 = 0, $11812 = 0.0, $11813 = 0, $11814 = 0.0;
 var $11815 = 0, $11816 = 0.0, $11817 = 0.0, $11818 = 0.0, $11819 = 0.0, $1182 = 0.0, $11820 = 0.0, $11821 = 0.0, $11822 = 0.0, $11823 = 0.0, $11824 = 0.0, $11825 = 0.0, $11826 = 0.0, $11827 = 0.0, $11828 = 0.0, $11829 = 0.0, $1183 = 0.0, $11830 = 0.0, $11831 = 0.0, $11832 = 0.0;
 var $11833 = 0.0, $11834 = 0.0, $11835 = 0, $11836 = 0.0, $11837 = 0.0, $11838 = 0.0, $11839 = 0.0, $1184 = 0.0, $11840 = 0.0, $11841 = 0.0, $11842 = 0.0, $11843 = 0.0, $11844 = 0.0, $11845 = 0.0, $11846 = 0.0, $11847 = 0.0, $11848 = 0.0, $11849 = 0.0, $1185 = 0.0, $11850 = 0.0;
 var $11851 = 0.0, $11852 = 0.0, $11853 = 0.0, $11854 = 0.0, $11855 = 0.0, $11856 = 0.0, $11857 = 0.0, $11858 = 0.0, $11859 = 0.0, $1186 = 0.0, $11860 = 0.0, $11861 = 0.0, $11862 = 0.0, $11863 = 0.0, $11864 = 0.0, $11865 = 0, $11866 = 0.0, $11867 = 0, $11868 = 0.0, $11869 = 0.0;
 var $1187 = 0.0, $11870 = 0.0, $11871 = 0.0, $11872 = 0.0, $11873 = 0.0, $11874 = 0.0, $11875 = 0.0, $11876 = 0, $11877 = 0.0, $11878 = 0.0, $11879 = 0, $1188 = 0.0, $11880 = 0.0, $11881 = 0.0, $11882 = 0.0, $11883 = 0.0, $11884 = 0.0, $11885 = 0.0, $11886 = 0.0, $11887 = 0.0;
 var $11888 = 0, $11889 = 0.0, $1189 = 0.0, $11890 = 0.0, $11891 = 0, $11892 = 0.0, $11893 = 0.0, $11894 = 0.0, $11895 = 0.0, $11896 = 0.0, $11897 = 0.0, $11898 = 0.0, $11899 = 0.0, $119 = 0, $1190 = 0.0, $11900 = 0.0, $11901 = 0.0, $11902 = 0.0, $11903 = 0.0, $11904 = 0.0;
 var $11905 = 0.0, $11906 = 0.0, $11907 = 0.0, $11908 = 0, $11909 = 0.0, $1191 = 0.0, $11910 = 0.0, $11911 = 0.0, $11912 = 0.0, $11913 = 0.0, $11914 = 0.0, $11915 = 0.0, $11916 = 0, $11917 = 0.0, $11918 = 0, $11919 = 0.0, $1192 = 0.0, $11920 = 0, $11921 = 0.0, $11922 = 0.0;
 var $11923 = 0.0, $11924 = 0.0, $11925 = 0.0, $11926 = 0.0, $11927 = 0.0, $11928 = 0.0, $11929 = 0.0, $1193 = 0.0, $11930 = 0.0, $11931 = 0.0, $11932 = 0.0, $11933 = 0.0, $11934 = 0, $11935 = 0.0, $11936 = 0.0, $11937 = 0.0, $11938 = 0.0, $11939 = 0.0, $1194 = 0, $11940 = 0.0;
 var $11941 = 0.0, $11942 = 0.0, $11943 = 0.0, $11944 = 0.0, $11945 = 0.0, $11946 = 0.0, $11947 = 0, $11948 = 0.0, $11949 = 0, $1195 = 0, $11950 = 0.0, $11951 = 0.0, $11952 = 0.0, $11953 = 0.0, $11954 = 0.0, $11955 = 0.0, $11956 = 0.0, $11957 = 0.0, $11958 = 0.0, $11959 = 0.0;
 var $1196 = 0.0, $11960 = 0.0, $11961 = 0.0, $11962 = 0.0, $11963 = 0.0, $11964 = 0.0, $11965 = 0.0, $11966 = 0.0, $11967 = 0.0, $11968 = 0.0, $11969 = 0.0, $1197 = 0.0, $11970 = 0.0, $11971 = 0.0, $11972 = 0.0, $11973 = 0.0, $11974 = 0, $11975 = 0.0, $11976 = 0.0, $11977 = 0.0;
 var $11978 = 0.0, $11979 = 0.0, $1198 = 0.0, $11980 = 0, $11981 = 0.0, $11982 = 0, $11983 = 0.0, $11984 = 0.0, $11985 = 0.0, $11986 = 0.0, $11987 = 0.0, $11988 = 0.0, $11989 = 0.0, $1199 = 0.0, $11990 = 0.0, $11991 = 0, $11992 = 0.0, $11993 = 0.0, $11994 = 0.0, $11995 = 0;
 var $11996 = 0.0, $11997 = 0, $11998 = 0.0, $11999 = 0.0, $12 = 0, $120 = 0, $1200 = 0, $12000 = 0.0, $12001 = 0.0, $12002 = 0.0, $12003 = 0.0, $12004 = 0, $12005 = 0.0, $12006 = 0.0, $12007 = 0.0, $12008 = 0.0, $12009 = 0.0, $1201 = 0.0, $12010 = 0, $12011 = 0.0;
 var $12012 = 0.0, $12013 = 0.0, $12014 = 0.0, $12015 = 0, $12016 = 0, $12017 = 0.0, $12018 = 0.0, $12019 = 0.0, $1202 = 0.0, $12020 = 0.0, $12021 = 0.0, $12022 = 0.0, $12023 = 0.0, $12024 = 0.0, $12025 = 0.0, $12026 = 0, $12027 = 0.0, $12028 = 0, $12029 = 0.0, $1203 = 0;
 var $12030 = 0.0, $12031 = 0, $12032 = 0.0, $12033 = 0, $12034 = 0.0, $12035 = 0, $12036 = 0, $12037 = 0, $12038 = 0, $12039 = 0.0, $1204 = 0, $12040 = 0.0, $12041 = 0.0, $12042 = 0.0, $12043 = 0, $12044 = 0.0, $12045 = 0.0, $12046 = 0.0, $12047 = 0.0, $12048 = 0;
 var $12049 = 0.0, $1205 = 0.0, $12050 = 0.0, $12051 = 0.0, $12052 = 0.0, $12053 = 0.0, $12054 = 0.0, $12055 = 0.0, $12056 = 0.0, $12057 = 0.0, $12058 = 0.0, $12059 = 0.0, $1206 = 0.0, $12060 = 0.0, $12061 = 0, $12062 = 0.0, $12063 = 0.0, $12064 = 0.0, $12065 = 0.0, $12066 = 0;
 var $12067 = 0, $12068 = 0, $12069 = 0.0, $1207 = 0.0, $12070 = 0.0, $12071 = 0, $12072 = 0, $12073 = 0.0, $12074 = 0.0, $12075 = 0.0, $12076 = 0.0, $12077 = 0.0, $12078 = 0.0, $12079 = 0.0, $1208 = 0.0, $12080 = 0.0, $12081 = 0.0, $12082 = 0, $12083 = 0.0, $12084 = 0;
 var $12085 = 0.0, $12086 = 0.0, $12087 = 0, $12088 = 0.0, $12089 = 0, $1209 = 0.0, $12090 = 0.0, $12091 = 0, $12092 = 0, $12093 = 0, $12094 = 0, $12095 = 0.0, $12096 = 0.0, $12097 = 0.0, $12098 = 0.0, $12099 = 0, $121 = 0, $1210 = 0.0, $12100 = 0.0, $12101 = 0.0;
 var $12102 = 0.0, $12103 = 0.0, $12104 = 0, $12105 = 0.0, $12106 = 0.0, $12107 = 0.0, $12108 = 0.0, $12109 = 0.0, $1211 = 0.0, $12110 = 0.0, $12111 = 0.0, $12112 = 0.0, $12113 = 0.0, $12114 = 0.0, $12115 = 0.0, $12116 = 0.0, $12117 = 0, $12118 = 0.0, $12119 = 0.0, $1212 = 0.0;
 var $12120 = 0.0, $12121 = 0.0, $12122 = 0.0, $12123 = 0.0, $12124 = 0, $12125 = 0, $12126 = 0, $12127 = 0.0, $12128 = 0.0, $12129 = 0.0, $1213 = 0.0, $12130 = 0.0, $12131 = 0.0, $12132 = 0.0, $12133 = 0.0, $12134 = 0.0, $12135 = 0.0, $12136 = 0.0, $12137 = 0.0, $12138 = 0.0;
 var $12139 = 0.0, $1214 = 0.0, $12140 = 0.0, $12141 = 0.0, $12142 = 0.0, $12143 = 0.0, $12144 = 0.0, $12145 = 0, $12146 = 0, $12147 = 0.0, $12148 = 0.0, $12149 = 0.0, $1215 = 0.0, $12150 = 0.0, $12151 = 0.0, $12152 = 0.0, $12153 = 0.0, $12154 = 0, $12155 = 0, $12156 = 0.0;
 var $12157 = 0.0, $12158 = 0.0, $12159 = 0.0, $1216 = 0.0, $12160 = 0.0, $12161 = 0.0, $12162 = 0.0, $12163 = 0, $12164 = 0.0, $12165 = 0, $12166 = 0.0, $12167 = 0.0, $12168 = 0.0, $12169 = 0.0, $1217 = 0, $12170 = 0.0, $12171 = 0.0, $12172 = 0.0, $12173 = 0.0, $12174 = 0.0;
 var $12175 = 0.0, $12176 = 0.0, $12177 = 0.0, $12178 = 0.0, $12179 = 0.0, $1218 = 0, $12180 = 0.0, $12181 = 0.0, $12182 = 0.0, $12183 = 0.0, $12184 = 0.0, $12185 = 0.0, $12186 = 0.0, $12187 = 0.0, $12188 = 0, $12189 = 0.0, $1219 = 0.0, $12190 = 0.0, $12191 = 0.0, $12192 = 0.0;
 var $12193 = 0.0, $12194 = 0.0, $12195 = 0.0, $12196 = 0.0, $12197 = 0.0, $12198 = 0, $12199 = 0.0, $122 = 0, $1220 = 0.0, $12200 = 0, $12201 = 0.0, $12202 = 0.0, $12203 = 0.0, $12204 = 0.0, $12205 = 0.0, $12206 = 0.0, $12207 = 0.0, $12208 = 0.0, $12209 = 0.0, $1221 = 0.0;
 var $12210 = 0.0, $12211 = 0.0, $12212 = 0.0, $12213 = 0.0, $12214 = 0.0, $12215 = 0.0, $12216 = 0.0, $12217 = 0, $12218 = 0, $12219 = 0.0, $1222 = 0.0, $12220 = 0.0, $12221 = 0.0, $12222 = 0.0, $12223 = 0.0, $12224 = 0, $12225 = 0, $12226 = 0.0, $12227 = 0.0, $12228 = 0.0;
 var $12229 = 0.0, $1223 = 0.0, $12230 = 0.0, $12231 = 0.0, $12232 = 0.0, $12233 = 0, $12234 = 0.0, $12235 = 0, $12236 = 0.0, $12237 = 0.0, $12238 = 0.0, $12239 = 0.0, $1224 = 0.0, $12240 = 0.0, $12241 = 0.0, $12242 = 0.0, $12243 = 0.0, $12244 = 0.0, $12245 = 0.0, $12246 = 0.0;
 var $12247 = 0.0, $12248 = 0.0, $12249 = 0.0, $1225 = 0.0, $12250 = 0.0, $12251 = 0.0, $12252 = 0.0, $12253 = 0.0, $12254 = 0.0, $12255 = 0.0, $12256 = 0.0, $12257 = 0.0, $12258 = 0, $12259 = 0.0, $1226 = 0.0, $12260 = 0.0, $12261 = 0.0, $12262 = 0.0, $12263 = 0.0, $12264 = 0.0;
 var $12265 = 0.0, $12266 = 0.0, $12267 = 0.0, $12268 = 0, $12269 = 0.0, $1227 = 0.0, $12270 = 0, $12271 = 0.0, $12272 = 0.0, $12273 = 0.0, $12274 = 0.0, $12275 = 0.0, $12276 = 0.0, $12277 = 0.0, $12278 = 0.0, $12279 = 0.0, $1228 = 0.0, $12280 = 0.0, $12281 = 0.0, $12282 = 0.0;
 var $12283 = 0.0, $12284 = 0.0, $12285 = 0.0, $12286 = 0.0, $12287 = 0.0, $12288 = 0, $12289 = 0.0, $1229 = 0.0, $12290 = 0.0, $12291 = 0.0, $12292 = 0.0, $12293 = 0.0, $12294 = 0.0, $12295 = 0.0, $12296 = 0, $12297 = 0.0, $12298 = 0, $12299 = 0.0, $123 = 0, $1230 = 0;
 var $12300 = 0, $12301 = 0.0, $12302 = 0.0, $12303 = 0.0, $12304 = 0.0, $12305 = 0.0, $12306 = 0.0, $12307 = 0.0, $12308 = 0.0, $12309 = 0.0, $1231 = 0.0, $12310 = 0.0, $12311 = 0.0, $12312 = 0.0, $12313 = 0.0, $12314 = 0, $12315 = 0.0, $12316 = 0.0, $12317 = 0.0, $12318 = 0.0;
 var $12319 = 0.0, $1232 = 0, $12320 = 0.0, $12321 = 0.0, $12322 = 0.0, $12323 = 0.0, $12324 = 0.0, $12325 = 0.0, $12326 = 0.0, $12327 = 0, $12328 = 0.0, $12329 = 0, $1233 = 0.0, $12330 = 0.0, $12331 = 0.0, $12332 = 0.0, $12333 = 0.0, $12334 = 0.0, $12335 = 0.0, $12336 = 0.0;
 var $12337 = 0.0, $12338 = 0.0, $12339 = 0.0, $1234 = 0.0, $12340 = 0.0, $12341 = 0.0, $12342 = 0.0, $12343 = 0.0, $12344 = 0.0, $12345 = 0.0, $12346 = 0.0, $12347 = 0.0, $12348 = 0.0, $12349 = 0.0, $1235 = 0, $12350 = 0.0, $12351 = 0.0, $12352 = 0.0, $12353 = 0.0, $12354 = 0;
 var $12355 = 0.0, $12356 = 0.0, $12357 = 0.0, $12358 = 0.0, $12359 = 0.0, $1236 = 0.0, $12360 = 0, $12361 = 0.0, $12362 = 0, $12363 = 0.0, $12364 = 0.0, $12365 = 0.0, $12366 = 0.0, $12367 = 0.0, $12368 = 0.0, $12369 = 0.0, $1237 = 0, $12370 = 0.0, $12371 = 0, $12372 = 0.0;
 var $12373 = 0.0, $12374 = 0.0, $12375 = 0, $12376 = 0.0, $12377 = 0, $12378 = 0.0, $12379 = 0.0, $1238 = 0.0, $12380 = 0.0, $12381 = 0.0, $12382 = 0.0, $12383 = 0.0, $12384 = 0, $12385 = 0.0, $12386 = 0.0, $12387 = 0.0, $12388 = 0.0, $12389 = 0.0, $1239 = 0, $12390 = 0;
 var $12391 = 0.0, $12392 = 0.0, $12393 = 0.0, $12394 = 0.0, $12395 = 0, $12396 = 0, $12397 = 0.0, $12398 = 0.0, $12399 = 0.0, $124 = 0, $1240 = 0, $12400 = 0.0, $12401 = 0.0, $12402 = 0.0, $12403 = 0.0, $12404 = 0.0, $12405 = 0.0, $12406 = 0, $12407 = 0.0, $12408 = 0;
 var $12409 = 0.0, $1241 = 0, $12410 = 0.0, $12411 = 0, $12412 = 0.0, $12413 = 0, $12414 = 0.0, $12415 = 0, $12416 = 0, $12417 = 0, $12418 = 0, $12419 = 0.0, $1242 = 0, $12420 = 0.0, $12421 = 0.0, $12422 = 0.0, $12423 = 0, $12424 = 0.0, $12425 = 0.0, $12426 = 0.0;
 var $12427 = 0.0, $12428 = 0, $12429 = 0.0, $1243 = 0, $12430 = 0.0, $12431 = 0.0, $12432 = 0.0, $12433 = 0.0, $12434 = 0.0, $12435 = 0.0, $12436 = 0.0, $12437 = 0.0, $12438 = 0.0, $12439 = 0.0, $1244 = 0, $12440 = 0.0, $12441 = 0.0, $12442 = 0, $12443 = 0.0, $12444 = 0.0;
 var $12445 = 0.0, $12446 = 0.0, $12447 = 0, $12448 = 0, $12449 = 0, $1245 = 0, $12450 = 0.0, $12451 = 0.0, $12452 = 0.0, $12453 = 0, $12454 = 0, $12455 = 0.0, $12456 = 0.0, $12457 = 0.0, $12458 = 0.0, $12459 = 0.0, $1246 = 0, $12460 = 0.0, $12461 = 0.0, $12462 = 0.0;
 var $12463 = 0.0, $12464 = 0, $12465 = 0.0, $12466 = 0, $12467 = 0.0, $12468 = 0.0, $12469 = 0, $1247 = 0, $12470 = 0.0, $12471 = 0, $12472 = 0.0, $12473 = 0, $12474 = 0, $12475 = 0, $12476 = 0, $12477 = 0.0, $12478 = 0.0, $12479 = 0.0, $1248 = 0, $12480 = 0.0;
 var $12481 = 0, $12482 = 0.0, $12483 = 0.0, $12484 = 0.0, $12485 = 0.0, $12486 = 0, $12487 = 0.0, $12488 = 0.0, $12489 = 0.0, $1249 = 0.0, $12490 = 0.0, $12491 = 0.0, $12492 = 0.0, $12493 = 0.0, $12494 = 0.0, $12495 = 0.0, $12496 = 0.0, $12497 = 0.0, $12498 = 0.0, $12499 = 0.0;
 var $125 = 0, $1250 = 0, $12500 = 0, $12501 = 0.0, $12502 = 0.0, $12503 = 0.0, $12504 = 0.0, $12505 = 0, $12506 = 0, $12507 = 0, $12508 = 0.0, $12509 = 0.0, $1251 = 0.0, $12510 = 0.0, $12511 = 0.0, $12512 = 0.0, $12513 = 0.0, $12514 = 0.0, $12515 = 0.0, $12516 = 0.0;
 var $12517 = 0, $12518 = 0, $12519 = 0.0, $1252 = 0.0, $12520 = 0.0, $12521 = 0.0, $12522 = 0.0, $12523 = 0.0, $12524 = 0.0, $12525 = 0.0, $12526 = 0.0, $12527 = 0.0, $12528 = 0.0, $12529 = 0.0, $1253 = 0.0, $12530 = 0.0, $12531 = 0.0, $12532 = 0.0, $12533 = 0, $12534 = 0;
 var $12535 = 0.0, $12536 = 0.0, $12537 = 0.0, $12538 = 0.0, $12539 = 0.0, $1254 = 0, $12540 = 0.0, $12541 = 0.0, $12542 = 0, $12543 = 0.0, $12544 = 0, $12545 = 0.0, $12546 = 0.0, $12547 = 0.0, $12548 = 0.0, $12549 = 0.0, $1255 = 0.0, $12550 = 0.0, $12551 = 0.0, $12552 = 0.0;
 var $12553 = 0.0, $12554 = 0.0, $12555 = 0.0, $12556 = 0.0, $12557 = 0.0, $12558 = 0.0, $12559 = 0.0, $1256 = 0, $12560 = 0.0, $12561 = 0.0, $12562 = 0.0, $12563 = 0.0, $12564 = 0.0, $12565 = 0.0, $12566 = 0.0, $12567 = 0, $12568 = 0.0, $12569 = 0.0, $1257 = 0.0, $12570 = 0.0;
 var $12571 = 0.0, $12572 = 0.0, $12573 = 0.0, $12574 = 0.0, $12575 = 0.0, $12576 = 0.0, $12577 = 0.0, $12578 = 0, $12579 = 0.0, $1258 = 0.0, $12580 = 0, $12581 = 0.0, $12582 = 0.0, $12583 = 0.0, $12584 = 0.0, $12585 = 0.0, $12586 = 0.0, $12587 = 0.0, $12588 = 0.0, $12589 = 0.0;
 var $1259 = 0.0, $12590 = 0.0, $12591 = 0.0, $12592 = 0.0, $12593 = 0.0, $12594 = 0.0, $12595 = 0.0, $12596 = 0.0, $12597 = 0, $12598 = 0, $12599 = 0.0, $126 = 0, $1260 = 0, $12600 = 0.0, $12601 = 0.0, $12602 = 0.0, $12603 = 0.0, $12604 = 0, $12605 = 0, $12606 = 0.0;
 var $12607 = 0.0, $12608 = 0.0, $12609 = 0.0, $1261 = 0, $12610 = 0.0, $12611 = 0.0, $12612 = 0.0, $12613 = 0, $12614 = 0.0, $12615 = 0, $12616 = 0.0, $12617 = 0.0, $12618 = 0.0, $12619 = 0.0, $1262 = 0, $12620 = 0.0, $12621 = 0.0, $12622 = 0.0, $12623 = 0.0, $12624 = 0.0;
 var $12625 = 0.0, $12626 = 0.0, $12627 = 0.0, $12628 = 0.0, $12629 = 0.0, $1263 = 0.0, $12630 = 0.0, $12631 = 0.0, $12632 = 0.0, $12633 = 0.0, $12634 = 0.0, $12635 = 0.0, $12636 = 0.0, $12637 = 0.0, $12638 = 0, $12639 = 0.0, $1264 = 0, $12640 = 0.0, $12641 = 0.0, $12642 = 0.0;
 var $12643 = 0.0, $12644 = 0.0, $12645 = 0.0, $12646 = 0.0, $12647 = 0.0, $12648 = 0.0, $12649 = 0, $1265 = 0.0, $12650 = 0.0, $12651 = 0, $12652 = 0.0, $12653 = 0.0, $12654 = 0.0, $12655 = 0.0, $12656 = 0.0, $12657 = 0.0, $12658 = 0.0, $12659 = 0.0, $1266 = 0, $12660 = 0.0;
 var $12661 = 0.0, $12662 = 0.0, $12663 = 0.0, $12664 = 0.0, $12665 = 0.0, $12666 = 0.0, $12667 = 0.0, $12668 = 0.0, $12669 = 0, $1267 = 0.0, $12670 = 0.0, $12671 = 0.0, $12672 = 0.0, $12673 = 0.0, $12674 = 0.0, $12675 = 0.0, $12676 = 0.0, $12677 = 0, $12678 = 0.0, $12679 = 0;
 var $1268 = 0.0, $12680 = 0.0, $12681 = 0, $12682 = 0.0, $12683 = 0.0, $12684 = 0.0, $12685 = 0.0, $12686 = 0.0, $12687 = 0.0, $12688 = 0.0, $12689 = 0.0, $1269 = 0.0, $12690 = 0.0, $12691 = 0.0, $12692 = 0.0, $12693 = 0.0, $12694 = 0.0, $12695 = 0, $12696 = 0.0, $12697 = 0.0;
 var $12698 = 0.0, $12699 = 0.0, $127 = 0, $1270 = 0.0, $12700 = 0.0, $12701 = 0.0, $12702 = 0.0, $12703 = 0.0, $12704 = 0.0, $12705 = 0.0, $12706 = 0.0, $12707 = 0.0, $12708 = 0, $12709 = 0.0, $1271 = 0.0, $12710 = 0, $12711 = 0.0, $12712 = 0.0, $12713 = 0.0, $12714 = 0.0;
 var $12715 = 0.0, $12716 = 0.0, $12717 = 0.0, $12718 = 0.0, $12719 = 0.0, $1272 = 0.0, $12720 = 0.0, $12721 = 0.0, $12722 = 0.0, $12723 = 0.0, $12724 = 0.0, $12725 = 0, $12726 = 0.0, $12727 = 0.0, $12728 = 0.0, $12729 = 0.0, $1273 = 0.0, $12730 = 0.0, $12731 = 0.0, $12732 = 0.0;
 var $12733 = 0.0, $12734 = 0.0, $12735 = 0.0, $12736 = 0.0, $12737 = 0.0, $12738 = 0.0, $12739 = 0.0, $1274 = 0.0, $12740 = 0, $12741 = 0.0, $12742 = 0, $12743 = 0.0, $12744 = 0.0, $12745 = 0.0, $12746 = 0.0, $12747 = 0.0, $12748 = 0.0, $12749 = 0.0, $1275 = 0.0, $12750 = 0.0;
 var $12751 = 0, $12752 = 0.0, $12753 = 0.0, $12754 = 0.0, $12755 = 0, $12756 = 0.0, $12757 = 0, $12758 = 0.0, $12759 = 0.0, $1276 = 0.0, $12760 = 0.0, $12761 = 0.0, $12762 = 0.0, $12763 = 0.0, $12764 = 0, $12765 = 0.0, $12766 = 0.0, $12767 = 0.0, $12768 = 0.0, $12769 = 0.0;
 var $1277 = 0.0, $12770 = 0, $12771 = 0.0, $12772 = 0.0, $12773 = 0.0, $12774 = 0.0, $12775 = 0, $12776 = 0, $12777 = 0.0, $12778 = 0.0, $12779 = 0.0, $1278 = 0.0, $12780 = 0.0, $12781 = 0.0, $12782 = 0.0, $12783 = 0.0, $12784 = 0.0, $12785 = 0.0, $12786 = 0, $12787 = 0.0;
 var $12788 = 0, $12789 = 0.0, $1279 = 0.0, $12790 = 0.0, $12791 = 0, $12792 = 0.0, $12793 = 0, $12794 = 0.0, $12795 = 0, $12796 = 0, $12797 = 0, $12798 = 0, $12799 = 0.0, $128 = 0, $1280 = 0.0, $12800 = 0.0, $12801 = 0.0, $12802 = 0.0, $12803 = 0, $12804 = 0.0;
 var $12805 = 0.0, $12806 = 0.0, $12807 = 0.0, $12808 = 0, $12809 = 0.0, $1281 = 0.0, $12810 = 0.0, $12811 = 0.0, $12812 = 0.0, $12813 = 0.0, $12814 = 0.0, $12815 = 0.0, $12816 = 0.0, $12817 = 0.0, $12818 = 0.0, $12819 = 0.0, $1282 = 0.0, $12820 = 0.0, $12821 = 0.0, $12822 = 0;
 var $12823 = 0.0, $12824 = 0.0, $12825 = 0.0, $12826 = 0.0, $12827 = 0, $12828 = 0, $12829 = 0, $1283 = 0.0, $12830 = 0.0, $12831 = 0.0, $12832 = 0.0, $12833 = 0, $12834 = 0, $12835 = 0.0, $12836 = 0.0, $12837 = 0.0, $12838 = 0.0, $12839 = 0.0, $1284 = 0.0, $12840 = 0.0;
 var $12841 = 0.0, $12842 = 0.0, $12843 = 0.0, $12844 = 0, $12845 = 0.0, $12846 = 0, $12847 = 0.0, $12848 = 0.0, $12849 = 0, $1285 = 0.0, $12850 = 0.0, $12851 = 0, $12852 = 0.0, $12853 = 0, $12854 = 0, $12855 = 0, $12856 = 0, $12857 = 0.0, $12858 = 0.0, $12859 = 0.0;
 var $1286 = 0.0, $12860 = 0.0, $12861 = 0, $12862 = 0.0, $12863 = 0.0, $12864 = 0.0, $12865 = 0.0, $12866 = 0, $12867 = 0.0, $12868 = 0.0, $12869 = 0.0, $1287 = 0.0, $12870 = 0.0, $12871 = 0.0, $12872 = 0.0, $12873 = 0.0, $12874 = 0.0, $12875 = 0.0, $12876 = 0.0, $12877 = 0.0;
 var $12878 = 0.0, $12879 = 0.0, $1288 = 0.0, $12880 = 0, $12881 = 0.0, $12882 = 0.0, $12883 = 0.0, $12884 = 0.0, $12885 = 0.0, $12886 = 0.0, $12887 = 0, $12888 = 0, $12889 = 0, $1289 = 0.0, $12890 = 0.0, $12891 = 0.0, $12892 = 0.0, $12893 = 0.0, $12894 = 0.0, $12895 = 0.0;
 var $12896 = 0.0, $12897 = 0.0, $12898 = 0.0, $12899 = 0.0, $129 = 0, $1290 = 0.0, $12900 = 0.0, $12901 = 0.0, $12902 = 0.0, $12903 = 0.0, $12904 = 0.0, $12905 = 0.0, $12906 = 0.0, $12907 = 0, $12908 = 0, $12909 = 0.0, $1291 = 0.0, $12910 = 0.0, $12911 = 0.0, $12912 = 0.0;
 var $12913 = 0.0, $12914 = 0.0, $12915 = 0.0, $12916 = 0, $12917 = 0, $12918 = 0.0, $12919 = 0.0, $1292 = 0.0, $12920 = 0.0, $12921 = 0.0, $12922 = 0.0, $12923 = 0.0, $12924 = 0.0, $12925 = 0, $12926 = 0.0, $12927 = 0, $12928 = 0.0, $12929 = 0.0, $1293 = 0.0, $12930 = 0.0;
 var $12931 = 0.0, $12932 = 0.0, $12933 = 0.0, $12934 = 0.0, $12935 = 0.0, $12936 = 0.0, $12937 = 0.0, $12938 = 0.0, $12939 = 0.0, $1294 = 0.0, $12940 = 0.0, $12941 = 0.0, $12942 = 0.0, $12943 = 0.0, $12944 = 0.0, $12945 = 0.0, $12946 = 0.0, $12947 = 0.0, $12948 = 0.0, $12949 = 0.0;
 var $1295 = 0.0, $12950 = 0.0, $12951 = 0, $12952 = 0.0, $12953 = 0.0, $12954 = 0.0, $12955 = 0.0, $12956 = 0.0, $12957 = 0.0, $12958 = 0.0, $12959 = 0.0, $1296 = 0.0, $12960 = 0.0, $12961 = 0.0, $12962 = 0, $12963 = 0.0, $12964 = 0, $12965 = 0.0, $12966 = 0.0, $12967 = 0.0;
 var $12968 = 0.0, $12969 = 0.0, $1297 = 0.0, $12970 = 0.0, $12971 = 0.0, $12972 = 0.0, $12973 = 0.0, $12974 = 0.0, $12975 = 0.0, $12976 = 0, $12977 = 0, $12978 = 0.0, $12979 = 0.0, $1298 = 0.0, $12980 = 0.0, $12981 = 0.0, $12982 = 0.0, $12983 = 0.0, $12984 = 0.0, $12985 = 0.0;
 var $12986 = 0.0, $12987 = 0.0, $12988 = 0.0, $12989 = 0, $1299 = 0.0, $12990 = 0, $12991 = 0.0, $12992 = 0.0, $12993 = 0.0, $12994 = 0.0, $12995 = 0.0, $12996 = 0.0, $12997 = 0.0, $12998 = 0, $12999 = 0.0, $13 = 0, $130 = 0, $1300 = 0.0, $13000 = 0, $13001 = 0.0;
 var $13002 = 0.0, $13003 = 0.0, $13004 = 0.0, $13005 = 0.0, $13006 = 0.0, $13007 = 0.0, $13008 = 0.0, $13009 = 0.0, $1301 = 0.0, $13010 = 0.0, $13011 = 0.0, $13012 = 0.0, $13013 = 0.0, $13014 = 0.0, $13015 = 0.0, $13016 = 0.0, $13017 = 0.0, $13018 = 0.0, $13019 = 0.0, $1302 = 0.0;
 var $13020 = 0.0, $13021 = 0.0, $13022 = 0.0, $13023 = 0.0, $13024 = 0, $13025 = 0.0, $13026 = 0.0, $13027 = 0.0, $13028 = 0.0, $13029 = 0.0, $1303 = 0, $13030 = 0.0, $13031 = 0.0, $13032 = 0.0, $13033 = 0.0, $13034 = 0.0, $13035 = 0, $13036 = 0.0, $13037 = 0, $13038 = 0.0;
 var $13039 = 0.0, $1304 = 0.0, $13040 = 0.0, $13041 = 0.0, $13042 = 0.0, $13043 = 0.0, $13044 = 0.0, $13045 = 0.0, $13046 = 0.0, $13047 = 0.0, $13048 = 0.0, $13049 = 0.0, $1305 = 0.0, $13050 = 0.0, $13051 = 0.0, $13052 = 0.0, $13053 = 0.0, $13054 = 0.0, $13055 = 0, $13056 = 0.0;
 var $13057 = 0.0, $13058 = 0.0, $13059 = 0.0, $1306 = 0.0, $13060 = 0.0, $13061 = 0.0, $13062 = 0.0, $13063 = 0, $13064 = 0.0, $13065 = 0, $13066 = 0.0, $13067 = 0, $13068 = 0.0, $13069 = 0.0, $1307 = 0.0, $13070 = 0.0, $13071 = 0.0, $13072 = 0.0, $13073 = 0.0, $13074 = 0.0;
 var $13075 = 0.0, $13076 = 0.0, $13077 = 0.0, $13078 = 0.0, $13079 = 0.0, $1308 = 0.0, $13080 = 0.0, $13081 = 0, $13082 = 0.0, $13083 = 0.0, $13084 = 0.0, $13085 = 0.0, $13086 = 0.0, $13087 = 0.0, $13088 = 0.0, $13089 = 0.0, $1309 = 0.0, $13090 = 0.0, $13091 = 0.0, $13092 = 0.0;
 var $13093 = 0.0, $13094 = 0, $13095 = 0.0, $13096 = 0, $13097 = 0.0, $13098 = 0.0, $13099 = 0.0, $131 = 0, $1310 = 0.0, $13100 = 0.0, $13101 = 0.0, $13102 = 0.0, $13103 = 0.0, $13104 = 0.0, $13105 = 0.0, $13106 = 0.0, $13107 = 0.0, $13108 = 0.0, $13109 = 0.0, $1311 = 0.0;
 var $13110 = 0.0, $13111 = 0.0, $13112 = 0.0, $13113 = 0.0, $13114 = 0.0, $13115 = 0.0, $13116 = 0.0, $13117 = 0.0, $13118 = 0.0, $13119 = 0.0, $1312 = 0, $13120 = 0, $13121 = 0.0, $13122 = 0.0, $13123 = 0.0, $13124 = 0.0, $13125 = 0.0, $13126 = 0, $13127 = 0.0, $13128 = 0;
 var $13129 = 0.0, $1313 = 0.0, $13130 = 0.0, $13131 = 0.0, $13132 = 0.0, $13133 = 0.0, $13134 = 0.0, $13135 = 0.0, $13136 = 0.0, $13137 = 0, $13138 = 0.0, $13139 = 0.0, $1314 = 0.0, $13140 = 0.0, $13141 = 0, $13142 = 0.0, $13143 = 0, $13144 = 0.0, $13145 = 0.0, $13146 = 0.0;
 var $13147 = 0.0, $13148 = 0.0, $13149 = 0.0, $1315 = 0.0, $13150 = 0, $13151 = 0.0, $13152 = 0.0, $13153 = 0.0, $13154 = 0.0, $13155 = 0.0, $13156 = 0, $13157 = 0.0, $13158 = 0.0, $13159 = 0.0, $1316 = 0.0, $13160 = 0.0, $13161 = 0, $13162 = 0, $13163 = 0.0, $13164 = 0.0;
 var $13165 = 0.0, $13166 = 0.0, $13167 = 0.0, $13168 = 0.0, $13169 = 0.0, $1317 = 0.0, $13170 = 0.0, $13171 = 0.0, $13172 = 0, $13173 = 0.0, $13174 = 0, $13175 = 0.0, $13176 = 0.0, $13177 = 0, $13178 = 0.0, $13179 = 0, $1318 = 0.0, $13180 = 0.0, $13181 = 0, $13182 = 0;
 var $13183 = 0, $13184 = 0, $13185 = 0.0, $13186 = 0.0, $13187 = 0.0, $13188 = 0.0, $13189 = 0, $1319 = 0.0, $13190 = 0.0, $13191 = 0.0, $13192 = 0.0, $13193 = 0.0, $13194 = 0, $13195 = 0.0, $13196 = 0.0, $13197 = 0.0, $13198 = 0.0, $13199 = 0.0, $132 = 0, $1320 = 0.0;
 var $13200 = 0.0, $13201 = 0.0, $13202 = 0.0, $13203 = 0.0, $13204 = 0.0, $13205 = 0.0, $13206 = 0.0, $13207 = 0, $13208 = 0.0, $13209 = 0.0, $1321 = 0.0, $13210 = 0.0, $13211 = 0.0, $13212 = 0, $13213 = 0, $13214 = 0, $13215 = 0.0, $13216 = 0.0, $13217 = 0, $13218 = 0;
 var $13219 = 0.0, $1322 = 0.0, $13220 = 0.0, $13221 = 0.0, $13222 = 0.0, $13223 = 0.0, $13224 = 0.0, $13225 = 0.0, $13226 = 0.0, $13227 = 0.0, $13228 = 0, $13229 = 0.0, $1323 = 0.0, $13230 = 0, $13231 = 0.0, $13232 = 0.0, $13233 = 0, $13234 = 0.0, $13235 = 0, $13236 = 0.0;
 var $13237 = 0, $13238 = 0, $13239 = 0, $1324 = 0.0, $13240 = 0, $13241 = 0.0, $13242 = 0.0, $13243 = 0.0, $13244 = 0.0, $13245 = 0, $13246 = 0.0, $13247 = 0.0, $13248 = 0.0, $13249 = 0.0, $1325 = 0.0, $13250 = 0, $13251 = 0.0, $13252 = 0.0, $13253 = 0.0, $13254 = 0.0;
 var $13255 = 0.0, $13256 = 0.0, $13257 = 0.0, $13258 = 0.0, $13259 = 0.0, $1326 = 0.0, $13260 = 0.0, $13261 = 0.0, $13262 = 0.0, $13263 = 0, $13264 = 0.0, $13265 = 0.0, $13266 = 0.0, $13267 = 0.0, $13268 = 0, $13269 = 0, $1327 = 0.0, $13270 = 0, $13271 = 0.0, $13272 = 0.0;
 var $13273 = 0.0, $13274 = 0.0, $13275 = 0.0, $13276 = 0.0, $13277 = 0.0, $13278 = 0.0, $13279 = 0.0, $1328 = 0.0, $13280 = 0, $13281 = 0, $13282 = 0.0, $13283 = 0.0, $13284 = 0.0, $13285 = 0.0, $13286 = 0.0, $13287 = 0.0, $13288 = 0.0, $13289 = 0.0, $1329 = 0.0, $13290 = 0.0;
 var $13291 = 0.0, $13292 = 0.0, $13293 = 0.0, $13294 = 0.0, $13295 = 0, $13296 = 0, $13297 = 0.0, $13298 = 0.0, $13299 = 0.0, $133 = 0, $1330 = 0.0, $13300 = 0.0, $13301 = 0.0, $13302 = 0.0, $13303 = 0.0, $13304 = 0, $13305 = 0.0, $13306 = 0, $13307 = 0.0, $13308 = 0.0;
 var $13309 = 0.0, $1331 = 0.0, $13310 = 0.0, $13311 = 0.0, $13312 = 0.0, $13313 = 0.0, $13314 = 0.0, $13315 = 0.0, $13316 = 0.0, $13317 = 0.0, $13318 = 0.0, $13319 = 0.0, $1332 = 0.0, $13320 = 0.0, $13321 = 0.0, $13322 = 0.0, $13323 = 0.0, $13324 = 0.0, $13325 = 0.0, $13326 = 0.0;
 var $13327 = 0.0, $13328 = 0.0, $13329 = 0, $1333 = 0.0, $13330 = 0.0, $13331 = 0.0, $13332 = 0.0, $13333 = 0.0, $13334 = 0.0, $13335 = 0.0, $13336 = 0.0, $13337 = 0.0, $13338 = 0.0, $13339 = 0, $1334 = 0.0, $13340 = 0.0, $13341 = 0, $13342 = 0.0, $13343 = 0.0, $13344 = 0.0;
 var $13345 = 0.0, $13346 = 0.0, $13347 = 0.0, $13348 = 0.0, $13349 = 0.0, $1335 = 0.0, $13350 = 0.0, $13351 = 0.0, $13352 = 0.0, $13353 = 0, $13354 = 0, $13355 = 0.0, $13356 = 0.0, $13357 = 0.0, $13358 = 0.0, $13359 = 0.0, $1336 = 0.0, $13360 = 0.0, $13361 = 0.0, $13362 = 0.0;
 var $13363 = 0.0, $13364 = 0.0, $13365 = 0.0, $13366 = 0.0, $13367 = 0, $13368 = 0, $13369 = 0.0, $1337 = 0.0, $13370 = 0.0, $13371 = 0.0, $13372 = 0.0, $13373 = 0.0, $13374 = 0.0, $13375 = 0.0, $13376 = 0, $13377 = 0.0, $13378 = 0, $13379 = 0.0, $1338 = 0.0, $13380 = 0.0;
 var $13381 = 0.0, $13382 = 0.0, $13383 = 0.0, $13384 = 0.0, $13385 = 0.0, $13386 = 0.0, $13387 = 0.0, $13388 = 0.0, $13389 = 0.0, $1339 = 0.0, $13390 = 0.0, $13391 = 0.0, $13392 = 0.0, $13393 = 0.0, $13394 = 0.0, $13395 = 0.0, $13396 = 0.0, $13397 = 0.0, $13398 = 0.0, $13399 = 0.0;
 var $134 = 0, $1340 = 0, $13400 = 0.0, $13401 = 0, $13402 = 0.0, $13403 = 0.0, $13404 = 0.0, $13405 = 0.0, $13406 = 0.0, $13407 = 0.0, $13408 = 0.0, $13409 = 0.0, $1341 = 0.0, $13410 = 0.0, $13411 = 0, $13412 = 0.0, $13413 = 0, $13414 = 0.0, $13415 = 0.0, $13416 = 0.0;
 var $13417 = 0.0, $13418 = 0.0, $13419 = 0.0, $1342 = 0.0, $13420 = 0.0, $13421 = 0.0, $13422 = 0, $13423 = 0.0, $13424 = 0.0, $13425 = 0.0, $13426 = 0, $13427 = 0.0, $13428 = 0, $13429 = 0.0, $1343 = 0.0, $13430 = 0.0, $13431 = 0.0, $13432 = 0.0, $13433 = 0.0, $13434 = 0.0;
 var $13435 = 0, $13436 = 0.0, $13437 = 0.0, $13438 = 0.0, $13439 = 0.0, $1344 = 0.0, $13440 = 0.0, $13441 = 0.0, $13442 = 0.0, $13443 = 0.0, $13444 = 0.0, $13445 = 0.0, $13446 = 0.0, $13447 = 0.0, $13448 = 0.0, $13449 = 0.0, $1345 = 0.0, $13450 = 0, $13451 = 0.0, $13452 = 0.0;
 var $13453 = 0.0, $13454 = 0.0, $13455 = 0.0, $13456 = 0.0, $13457 = 0.0, $13458 = 0.0, $13459 = 0.0, $1346 = 0.0, $13460 = 0.0, $13461 = 0.0, $13462 = 0.0, $13463 = 0.0, $13464 = 0.0, $13465 = 0.0, $13466 = 0, $13467 = 0.0, $13468 = 0.0, $13469 = 0.0, $1347 = 0.0, $13470 = 0.0;
 var $13471 = 0.0, $13472 = 0.0, $13473 = 0.0, $13474 = 0.0, $13475 = 0.0, $13476 = 0.0, $13477 = 0.0, $13478 = 0, $13479 = 0, $1348 = 0.0, $13480 = 0.0, $13481 = 0.0, $13482 = 0.0, $13483 = 0.0, $13484 = 0.0, $13485 = 0.0, $13486 = 0.0, $13487 = 0.0, $13488 = 0.0, $13489 = 0;
 var $1349 = 0.0, $13490 = 0.0, $13491 = 0, $13492 = 0.0, $13493 = 0.0, $13494 = 0, $13495 = 0.0, $13496 = 0, $13497 = 0.0, $13498 = 0, $13499 = 0, $135 = 0, $1350 = 0.0, $13500 = 0, $13501 = 0, $13502 = 0, $13503 = 0, $13504 = 0, $13505 = 0, $13506 = 0;
 var $13507 = 0, $13508 = 0.0, $13509 = 0, $1351 = 0.0, $13510 = 0.0, $13511 = 0.0, $13512 = 0.0, $13513 = 0, $13514 = 0.0, $13515 = 0, $13516 = 0.0, $13517 = 0.0, $13518 = 0.0, $13519 = 0, $1352 = 0.0, $13520 = 0, $13521 = 0, $13522 = 0.0, $13523 = 0, $13524 = 0.0;
 var $13525 = 0, $13526 = 0.0, $13527 = 0.0, $13528 = 0.0, $13529 = 0.0, $1353 = 0.0, $13530 = 0.0, $13531 = 0.0, $13532 = 0.0, $13533 = 0.0, $13534 = 0.0, $13535 = 0.0, $13536 = 0.0, $13537 = 0.0, $13538 = 0.0, $13539 = 0.0, $1354 = 0.0, $13540 = 0.0, $13541 = 0.0, $13542 = 0.0;
 var $13543 = 0.0, $13544 = 0.0, $13545 = 0.0, $13546 = 0.0, $13547 = 0.0, $13548 = 0.0, $13549 = 0.0, $1355 = 0.0, $13550 = 0.0, $13551 = 0.0, $13552 = 0.0, $13553 = 0.0, $13554 = 0.0, $13555 = 0.0, $13556 = 0.0, $13557 = 0.0, $13558 = 0.0, $13559 = 0, $1356 = 0.0, $13560 = 0.0;
 var $13561 = 0.0, $13562 = 0.0, $13563 = 0.0, $13564 = 0, $13565 = 0.0, $13566 = 0, $13567 = 0.0, $13568 = 0, $13569 = 0, $1357 = 0.0, $13570 = 0.0, $13571 = 0.0, $13572 = 0.0, $13573 = 0.0, $13574 = 0.0, $13575 = 0.0, $13576 = 0.0, $13577 = 0.0, $13578 = 0.0, $13579 = 0.0;
 var $1358 = 0.0, $13580 = 0, $13581 = 0, $13582 = 0.0, $13583 = 0.0, $13584 = 0.0, $13585 = 0.0, $13586 = 0.0, $13587 = 0.0, $13588 = 0.0, $13589 = 0.0, $1359 = 0.0, $13590 = 0.0, $13591 = 0, $13592 = 0.0, $13593 = 0, $13594 = 0.0, $13595 = 0.0, $13596 = 0, $13597 = 0.0;
 var $13598 = 0, $13599 = 0.0, $136 = 0, $1360 = 0.0, $13600 = 0, $13601 = 0, $13602 = 0, $13603 = 0, $13604 = 0, $13605 = 0, $13606 = 0, $13607 = 0, $13608 = 0, $13609 = 0, $1361 = 0.0, $13610 = 0.0, $13611 = 0, $13612 = 0.0, $13613 = 0.0, $13614 = 0.0;
 var $13615 = 0, $13616 = 0.0, $13617 = 0, $13618 = 0.0, $13619 = 0.0, $1362 = 0, $13620 = 0.0, $13621 = 0, $13622 = 0, $13623 = 0, $13624 = 0.0, $13625 = 0, $13626 = 0.0, $13627 = 0, $13628 = 0.0, $13629 = 0.0, $1363 = 0.0, $13630 = 0.0, $13631 = 0.0, $13632 = 0.0;
 var $13633 = 0.0, $13634 = 0.0, $13635 = 0.0, $13636 = 0.0, $13637 = 0.0, $13638 = 0.0, $13639 = 0.0, $1364 = 0.0, $13640 = 0.0, $13641 = 0.0, $13642 = 0.0, $13643 = 0.0, $13644 = 0.0, $13645 = 0.0, $13646 = 0.0, $13647 = 0.0, $13648 = 0.0, $13649 = 0.0, $1365 = 0.0, $13650 = 0.0;
 var $13651 = 0.0, $13652 = 0.0, $13653 = 0.0, $13654 = 0.0, $13655 = 0.0, $13656 = 0.0, $13657 = 0.0, $13658 = 0.0, $13659 = 0.0, $1366 = 0.0, $13660 = 0.0, $13661 = 0.0, $13662 = 0, $13663 = 0.0, $13664 = 0.0, $13665 = 0.0, $13666 = 0, $13667 = 0.0, $13668 = 0, $13669 = 0.0;
 var $1367 = 0.0, $13670 = 0, $13671 = 0, $13672 = 0.0, $13673 = 0.0, $13674 = 0.0, $13675 = 0, $13676 = 0, $13677 = 0.0, $13678 = 0.0, $13679 = 0.0, $1368 = 0.0, $13680 = 0.0, $13681 = 0.0, $13682 = 0.0, $13683 = 0.0, $13684 = 0.0, $13685 = 0.0, $13686 = 0, $13687 = 0.0;
 var $13688 = 0, $13689 = 0.0, $1369 = 0.0, $13690 = 0.0, $13691 = 0, $13692 = 0.0, $13693 = 0, $13694 = 0.0, $13695 = 0, $13696 = 0, $13697 = 0, $13698 = 0, $13699 = 0, $137 = 0, $1370 = 0.0, $13700 = 0, $13701 = 0, $13702 = 0, $13703 = 0, $13704 = 0;
 var $13705 = 0.0, $13706 = 0, $13707 = 0.0, $13708 = 0.0, $13709 = 0.0, $1371 = 0.0, $13710 = 0, $13711 = 0.0, $13712 = 0, $13713 = 0.0, $13714 = 0.0, $13715 = 0.0, $13716 = 0, $13717 = 0, $13718 = 0, $13719 = 0.0, $1372 = 0.0, $13720 = 0, $13721 = 0.0, $13722 = 0;
 var $13723 = 0.0, $13724 = 0.0, $13725 = 0.0, $13726 = 0.0, $13727 = 0.0, $13728 = 0.0, $13729 = 0.0, $1373 = 0.0, $13730 = 0.0, $13731 = 0.0, $13732 = 0.0, $13733 = 0.0, $13734 = 0.0, $13735 = 0.0, $13736 = 0.0, $13737 = 0.0, $13738 = 0.0, $13739 = 0.0, $1374 = 0.0, $13740 = 0.0;
 var $13741 = 0.0, $13742 = 0.0, $13743 = 0.0, $13744 = 0.0, $13745 = 0.0, $13746 = 0.0, $13747 = 0.0, $13748 = 0.0, $13749 = 0.0, $1375 = 0.0, $13750 = 0.0, $13751 = 0.0, $13752 = 0.0, $13753 = 0.0, $13754 = 0.0, $13755 = 0.0, $13756 = 0.0, $13757 = 0.0, $13758 = 0, $13759 = 0.0;
 var $1376 = 0.0, $13760 = 0.0, $13761 = 0.0, $13762 = 0.0, $13763 = 0.0, $13764 = 0.0, $13765 = 0.0, $13766 = 0, $13767 = 0.0, $13768 = 0, $13769 = 0.0, $1377 = 0.0, $13770 = 0, $13771 = 0, $13772 = 0.0, $13773 = 0.0, $13774 = 0.0, $13775 = 0.0, $13776 = 0.0, $13777 = 0.0;
 var $13778 = 0.0, $13779 = 0.0, $1378 = 0.0, $13780 = 0.0, $13781 = 0.0, $13782 = 0.0, $13783 = 0.0, $13784 = 0.0, $13785 = 0.0, $13786 = 0.0, $13787 = 0.0, $13788 = 0.0, $13789 = 0.0, $1379 = 0.0, $13790 = 0.0, $13791 = 0, $13792 = 0, $13793 = 0.0, $13794 = 0.0, $13795 = 0.0;
 var $13796 = 0.0, $13797 = 0.0, $13798 = 0.0, $13799 = 0.0, $138 = 0, $1380 = 0.0, $13800 = 0.0, $13801 = 0.0, $13802 = 0.0, $13803 = 0.0, $13804 = 0.0, $13805 = 0.0, $13806 = 0.0, $13807 = 0.0, $13808 = 0.0, $13809 = 0.0, $1381 = 0.0, $13810 = 0.0, $13811 = 0.0, $13812 = 0.0;
 var $13813 = 0.0, $13814 = 0.0, $13815 = 0.0, $13816 = 0.0, $13817 = 0.0, $13818 = 0.0, $13819 = 0.0, $1382 = 0.0, $13820 = 0.0, $13821 = 0.0, $13822 = 0.0, $13823 = 0.0, $13824 = 0.0, $13825 = 0.0, $13826 = 0.0, $13827 = 0.0, $13828 = 0.0, $13829 = 0.0, $1383 = 0.0, $13830 = 0.0;
 var $13831 = 0.0, $13832 = 0.0, $13833 = 0.0, $13834 = 0.0, $13835 = 0, $13836 = 0, $13837 = 0.0, $13838 = 0.0, $13839 = 0.0, $1384 = 0.0, $13840 = 0.0, $13841 = 0.0, $13842 = 0.0, $13843 = 0.0, $13844 = 0, $13845 = 0.0, $13846 = 0, $13847 = 0.0, $13848 = 0.0, $13849 = 0.0;
 var $1385 = 0.0, $13850 = 0.0, $13851 = 0.0, $13852 = 0.0, $13853 = 0.0, $13854 = 0.0, $13855 = 0.0, $13856 = 0.0, $13857 = 0.0, $13858 = 0.0, $13859 = 0.0, $1386 = 0.0, $13860 = 0.0, $13861 = 0.0, $13862 = 0.0, $13863 = 0.0, $13864 = 0.0, $13865 = 0.0, $13866 = 0.0, $13867 = 0.0;
 var $13868 = 0.0, $13869 = 0.0, $1387 = 0.0, $13870 = 0.0, $13871 = 0.0, $13872 = 0.0, $13873 = 0.0, $13874 = 0.0, $13875 = 0.0, $13876 = 0.0, $13877 = 0.0, $13878 = 0.0, $13879 = 0.0, $1388 = 0, $13880 = 0.0, $13881 = 0.0, $13882 = 0.0, $13883 = 0.0, $13884 = 0.0, $13885 = 0.0;
 var $13886 = 0.0, $13887 = 0.0, $13888 = 0.0, $13889 = 0.0, $1389 = 0.0, $13890 = 0.0, $13891 = 0.0, $13892 = 0.0, $13893 = 0.0, $13894 = 0.0, $13895 = 0.0, $13896 = 0.0, $13897 = 0.0, $13898 = 0.0, $13899 = 0.0, $139 = 0, $1390 = 0.0, $13900 = 0.0, $13901 = 0.0, $13902 = 0.0;
 var $13903 = 0.0, $13904 = 0.0, $13905 = 0.0, $13906 = 0.0, $13907 = 0.0, $13908 = 0, $13909 = 0.0, $1391 = 0, $13910 = 0.0, $13911 = 0.0, $13912 = 0.0, $13913 = 0.0, $13914 = 0.0, $13915 = 0.0, $13916 = 0.0, $13917 = 0, $13918 = 0.0, $13919 = 0, $1392 = 0.0, $13920 = 0.0;
 var $13921 = 0, $13922 = 0.0, $13923 = 0, $13924 = 0.0, $13925 = 0.0, $13926 = 0.0, $13927 = 0.0, $13928 = 0.0, $13929 = 0.0, $1393 = 0.0, $13930 = 0.0, $13931 = 0.0, $13932 = 0.0, $13933 = 0.0, $13934 = 0.0, $13935 = 0.0, $13936 = 0.0, $13937 = 0.0, $13938 = 0.0, $13939 = 0.0;
 var $1394 = 0.0, $13940 = 0.0, $13941 = 0.0, $13942 = 0.0, $13943 = 0.0, $13944 = 0.0, $13945 = 0.0, $13946 = 0.0, $13947 = 0, $13948 = 0, $13949 = 0.0, $1395 = 0.0, $13950 = 0.0, $13951 = 0.0, $13952 = 0.0, $13953 = 0.0, $13954 = 0.0, $13955 = 0.0, $13956 = 0.0, $13957 = 0.0;
 var $13958 = 0.0, $13959 = 0.0, $1396 = 0.0, $13960 = 0.0, $13961 = 0.0, $13962 = 0.0, $13963 = 0.0, $13964 = 0.0, $13965 = 0.0, $13966 = 0.0, $13967 = 0.0, $13968 = 0.0, $13969 = 0.0, $1397 = 0.0, $13970 = 0.0, $13971 = 0.0, $13972 = 0.0, $13973 = 0, $13974 = 0, $13975 = 0.0;
 var $13976 = 0.0, $13977 = 0.0, $13978 = 0.0, $13979 = 0.0, $1398 = 0.0, $13980 = 0.0, $13981 = 0.0, $13982 = 0, $13983 = 0.0, $13984 = 0, $13985 = 0.0, $13986 = 0.0, $13987 = 0.0, $13988 = 0.0, $13989 = 0.0, $1399 = 0.0, $13990 = 0.0, $13991 = 0.0, $13992 = 0.0, $13993 = 0.0;
 var $13994 = 0.0, $13995 = 0.0, $13996 = 0.0, $13997 = 0.0, $13998 = 0.0, $13999 = 0.0, $14 = 0, $140 = 0, $1400 = 0.0, $14000 = 0.0, $14001 = 0.0, $14002 = 0.0, $14003 = 0.0, $14004 = 0.0, $14005 = 0.0, $14006 = 0.0, $14007 = 0.0, $14008 = 0.0, $14009 = 0.0, $1401 = 0.0;
 var $14010 = 0.0, $14011 = 0.0, $14012 = 0.0, $14013 = 0.0, $14014 = 0.0, $14015 = 0.0, $14016 = 0.0, $14017 = 0.0, $14018 = 0.0, $14019 = 0.0, $1402 = 0.0, $14020 = 0.0, $14021 = 0.0, $14022 = 0.0, $14023 = 0.0, $14024 = 0.0, $14025 = 0.0, $14026 = 0.0, $14027 = 0.0, $14028 = 0.0;
 var $14029 = 0.0, $1403 = 0.0, $14030 = 0.0, $14031 = 0.0, $14032 = 0.0, $14033 = 0.0, $14034 = 0.0, $14035 = 0.0, $14036 = 0.0, $14037 = 0.0, $14038 = 0.0, $14039 = 0.0, $1404 = 0.0, $14040 = 0.0, $14041 = 0.0, $14042 = 0.0, $14043 = 0.0, $14044 = 0.0, $14045 = 0.0, $14046 = 0;
 var $14047 = 0.0, $14048 = 0.0, $14049 = 0.0, $1405 = 0.0, $14050 = 0.0, $14051 = 0.0, $14052 = 0.0, $14053 = 0.0, $14054 = 0.0, $14055 = 0, $14056 = 0.0, $14057 = 0, $14058 = 0.0, $14059 = 0, $1406 = 0.0, $14060 = 0.0, $14061 = 0, $14062 = 0.0, $14063 = 0.0, $14064 = 0.0;
 var $14065 = 0.0, $14066 = 0.0, $14067 = 0.0, $14068 = 0.0, $14069 = 0.0, $1407 = 0.0, $14070 = 0.0, $14071 = 0.0, $14072 = 0.0, $14073 = 0.0, $14074 = 0.0, $14075 = 0.0, $14076 = 0.0, $14077 = 0.0, $14078 = 0, $14079 = 0, $1408 = 0.0, $14080 = 0.0, $14081 = 0.0, $14082 = 0.0;
 var $14083 = 0.0, $14084 = 0.0, $14085 = 0.0, $14086 = 0.0, $14087 = 0.0, $14088 = 0.0, $14089 = 0.0, $1409 = 0.0, $14090 = 0.0, $14091 = 0.0, $14092 = 0.0, $14093 = 0.0, $14094 = 0.0, $14095 = 0.0, $14096 = 0.0, $14097 = 0.0, $14098 = 0.0, $14099 = 0.0, $141 = 0, $1410 = 0.0;
 var $14100 = 0.0, $14101 = 0.0, $14102 = 0.0, $14103 = 0.0, $14104 = 0.0, $14105 = 0.0, $14106 = 0.0, $14107 = 0, $14108 = 0, $14109 = 0.0, $1411 = 0.0, $14110 = 0.0, $14111 = 0.0, $14112 = 0.0, $14113 = 0.0, $14114 = 0.0, $14115 = 0.0, $14116 = 0, $14117 = 0.0, $14118 = 0;
 var $14119 = 0.0, $1412 = 0.0, $14120 = 0.0, $14121 = 0.0, $14122 = 0.0, $14123 = 0.0, $14124 = 0.0, $14125 = 0.0, $14126 = 0.0, $14127 = 0.0, $14128 = 0.0, $14129 = 0.0, $1413 = 0.0, $14130 = 0.0, $14131 = 0.0, $14132 = 0.0, $14133 = 0.0, $14134 = 0.0, $14135 = 0.0, $14136 = 0.0;
 var $14137 = 0.0, $14138 = 0.0, $14139 = 0.0, $1414 = 0.0, $14140 = 0.0, $14141 = 0.0, $14142 = 0.0, $14143 = 0.0, $14144 = 0.0, $14145 = 0.0, $14146 = 0.0, $14147 = 0.0, $14148 = 0.0, $14149 = 0.0, $1415 = 0.0, $14150 = 0.0, $14151 = 0.0, $14152 = 0.0, $14153 = 0.0, $14154 = 0.0;
 var $14155 = 0.0, $14156 = 0.0, $14157 = 0.0, $14158 = 0.0, $14159 = 0.0, $1416 = 0.0, $14160 = 0.0, $14161 = 0.0, $14162 = 0.0, $14163 = 0.0, $14164 = 0.0, $14165 = 0.0, $14166 = 0.0, $14167 = 0.0, $14168 = 0.0, $14169 = 0.0, $1417 = 0.0, $14170 = 0.0, $14171 = 0.0, $14172 = 0.0;
 var $14173 = 0.0, $14174 = 0.0, $14175 = 0.0, $14176 = 0.0, $14177 = 0.0, $14178 = 0.0, $14179 = 0.0, $1418 = 0.0, $14180 = 0, $14181 = 0.0, $14182 = 0.0, $14183 = 0.0, $14184 = 0.0, $14185 = 0.0, $14186 = 0.0, $14187 = 0.0, $14188 = 0, $14189 = 0.0, $1419 = 0.0, $14190 = 0;
 var $14191 = 0.0, $14192 = 0, $14193 = 0.0, $14194 = 0, $14195 = 0.0, $14196 = 0.0, $14197 = 0.0, $14198 = 0.0, $14199 = 0.0, $142 = 0, $1420 = 0.0, $14200 = 0.0, $14201 = 0.0, $14202 = 0.0, $14203 = 0.0, $14204 = 0.0, $14205 = 0.0, $14206 = 0.0, $14207 = 0.0, $14208 = 0.0;
 var $14209 = 0.0, $1421 = 0.0, $14210 = 0.0, $14211 = 0.0, $14212 = 0.0, $14213 = 0.0, $14214 = 0.0, $14215 = 0.0, $14216 = 0.0, $14217 = 0.0, $14218 = 0.0, $14219 = 0.0, $1422 = 0.0, $14220 = 0.0, $14221 = 0.0, $14222 = 0.0, $14223 = 0.0, $14224 = 0.0, $14225 = 0.0, $14226 = 0.0;
 var $14227 = 0.0, $14228 = 0.0, $14229 = 0.0, $1423 = 0.0, $14230 = 0.0, $14231 = 0.0, $14232 = 0.0, $14233 = 0.0, $14234 = 0.0, $14235 = 0.0, $14236 = 0.0, $14237 = 0.0, $14238 = 0.0, $14239 = 0.0, $1424 = 0.0, $14240 = 0.0, $14241 = 0.0, $14242 = 0.0, $14243 = 0.0, $14244 = 0.0;
 var $14245 = 0.0, $14246 = 0.0, $14247 = 0.0, $14248 = 0.0, $14249 = 0.0, $1425 = 0.0, $14250 = 0.0, $14251 = 0.0, $14252 = 0.0, $14253 = 0, $14254 = 0, $14255 = 0.0, $14256 = 0.0, $14257 = 0.0, $14258 = 0.0, $14259 = 0.0, $1426 = 0.0, $14260 = 0, $14261 = 0, $14262 = 0.0;
 var $14263 = 0.0, $14264 = 0.0, $14265 = 0.0, $14266 = 0.0, $14267 = 0.0, $14268 = 0.0, $14269 = 0, $1427 = 0.0, $14270 = 0.0, $14271 = 0, $14272 = 0.0, $14273 = 0.0, $14274 = 0.0, $14275 = 0.0, $14276 = 0.0, $14277 = 0.0, $14278 = 0.0, $14279 = 0.0, $1428 = 0.0, $14280 = 0.0;
 var $14281 = 0.0, $14282 = 0.0, $14283 = 0.0, $14284 = 0.0, $14285 = 0.0, $14286 = 0.0, $14287 = 0.0, $14288 = 0.0, $14289 = 0.0, $1429 = 0, $14290 = 0.0, $14291 = 0.0, $14292 = 0.0, $14293 = 0.0, $14294 = 0.0, $14295 = 0.0, $14296 = 0.0, $14297 = 0.0, $14298 = 0.0, $14299 = 0.0;
 var $143 = 0, $1430 = 0.0, $14300 = 0.0, $14301 = 0.0, $14302 = 0.0, $14303 = 0.0, $14304 = 0.0, $14305 = 0.0, $14306 = 0.0, $14307 = 0.0, $14308 = 0.0, $14309 = 0.0, $1431 = 0.0, $14310 = 0.0, $14311 = 0.0, $14312 = 0.0, $14313 = 0.0, $14314 = 0.0, $14315 = 0.0, $14316 = 0.0;
 var $14317 = 0.0, $14318 = 0.0, $14319 = 0.0, $1432 = 0.0, $14320 = 0.0, $14321 = 0.0, $14322 = 0.0, $14323 = 0.0, $14324 = 0.0, $14325 = 0.0, $14326 = 0.0, $14327 = 0.0, $14328 = 0.0, $14329 = 0.0, $1433 = 0.0, $14330 = 0.0, $14331 = 0.0, $14332 = 0.0, $14333 = 0.0, $14334 = 0.0;
 var $14335 = 0.0, $14336 = 0.0, $14337 = 0.0, $14338 = 0.0, $14339 = 0.0, $1434 = 0.0, $14340 = 0.0, $14341 = 0.0, $14342 = 0.0, $14343 = 0.0, $14344 = 0.0, $14345 = 0.0, $14346 = 0.0, $14347 = 0.0, $14348 = 0.0, $14349 = 0.0, $1435 = 0.0, $14350 = 0.0, $14351 = 0.0, $14352 = 0.0;
 var $14353 = 0.0, $14354 = 0.0, $14355 = 0.0, $14356 = 0.0, $14357 = 0.0, $14358 = 0.0, $14359 = 0.0, $1436 = 0.0, $14360 = 0.0, $14361 = 0.0, $14362 = 0.0, $14363 = 0.0, $14364 = 0.0, $14365 = 0, $14366 = 0.0, $14367 = 0.0, $14368 = 0.0, $14369 = 0.0, $1437 = 0.0, $14370 = 0.0;
 var $14371 = 0.0, $14372 = 0.0, $14373 = 0.0, $14374 = 0, $14375 = 0.0, $14376 = 0, $14377 = 0.0, $14378 = 0, $14379 = 0.0, $1438 = 0.0, $14380 = 0, $14381 = 0.0, $14382 = 0, $14383 = 0.0, $14384 = 0.0, $14385 = 0.0, $14386 = 0.0, $14387 = 0.0, $14388 = 0.0, $14389 = 0.0;
 var $1439 = 0.0, $14390 = 0.0, $14391 = 0.0, $14392 = 0.0, $14393 = 0.0, $14394 = 0.0, $14395 = 0.0, $14396 = 0.0, $14397 = 0.0, $14398 = 0.0, $14399 = 0.0, $144 = 0, $1440 = 0.0, $14400 = 0.0, $14401 = 0.0, $14402 = 0.0, $14403 = 0.0, $14404 = 0.0, $14405 = 0.0, $14406 = 0.0;
 var $14407 = 0.0, $14408 = 0.0, $14409 = 0.0, $1441 = 0.0, $14410 = 0.0, $14411 = 0.0, $14412 = 0.0, $14413 = 0.0, $14414 = 0.0, $14415 = 0.0, $14416 = 0.0, $14417 = 0.0, $14418 = 0.0, $14419 = 0.0, $1442 = 0.0, $14420 = 0.0, $14421 = 0.0, $14422 = 0.0, $14423 = 0.0, $14424 = 0.0;
 var $14425 = 0.0, $14426 = 0.0, $14427 = 0.0, $14428 = 0.0, $14429 = 0.0, $1443 = 0.0, $14430 = 0.0, $14431 = 0.0, $14432 = 0.0, $14433 = 0.0, $14434 = 0.0, $14435 = 0.0, $14436 = 0.0, $14437 = 0.0, $14438 = 0.0, $14439 = 0.0, $1444 = 0.0, $14440 = 0, $14441 = 0, $14442 = 0.0;
 var $14443 = 0.0, $14444 = 0.0, $14445 = 0.0, $14446 = 0.0, $14447 = 0.0, $14448 = 0.0, $14449 = 0, $1445 = 0.0, $14450 = 0, $14451 = 0.0, $14452 = 0.0, $14453 = 0.0, $14454 = 0.0, $14455 = 0.0, $14456 = 0.0, $14457 = 0.0, $14458 = 0, $14459 = 0.0, $1446 = 0.0, $14460 = 0;
 var $14461 = 0.0, $14462 = 0.0, $14463 = 0.0, $14464 = 0.0, $14465 = 0.0, $14466 = 0.0, $14467 = 0.0, $14468 = 0.0, $14469 = 0.0, $1447 = 0.0, $14470 = 0.0, $14471 = 0.0, $14472 = 0.0, $14473 = 0.0, $14474 = 0.0, $14475 = 0.0, $14476 = 0.0, $14477 = 0.0, $14478 = 0.0, $14479 = 0.0;
 var $1448 = 0.0, $14480 = 0.0, $14481 = 0.0, $14482 = 0.0, $14483 = 0.0, $14484 = 0.0, $14485 = 0.0, $14486 = 0.0, $14487 = 0.0, $14488 = 0.0, $14489 = 0.0, $1449 = 0.0, $14490 = 0.0, $14491 = 0.0, $14492 = 0.0, $14493 = 0.0, $14494 = 0.0, $14495 = 0.0, $14496 = 0.0, $14497 = 0.0;
 var $14498 = 0.0, $14499 = 0.0, $145 = 0, $1450 = 0.0, $14500 = 0.0, $14501 = 0.0, $14502 = 0.0, $14503 = 0.0, $14504 = 0.0, $14505 = 0.0, $14506 = 0.0, $14507 = 0.0, $14508 = 0.0, $14509 = 0.0, $1451 = 0.0, $14510 = 0.0, $14511 = 0.0, $14512 = 0.0, $14513 = 0.0, $14514 = 0.0;
 var $14515 = 0.0, $14516 = 0.0, $14517 = 0.0, $14518 = 0.0, $14519 = 0.0, $1452 = 0.0, $14520 = 0.0, $14521 = 0.0, $14522 = 0.0, $14523 = 0.0, $14524 = 0.0, $14525 = 0.0, $14526 = 0.0, $14527 = 0.0, $14528 = 0.0, $14529 = 0.0, $1453 = 0.0, $14530 = 0.0, $14531 = 0.0, $14532 = 0.0;
 var $14533 = 0.0, $14534 = 0.0, $14535 = 0.0, $14536 = 0.0, $14537 = 0.0, $14538 = 0.0, $14539 = 0.0, $1454 = 0, $14540 = 0.0, $14541 = 0.0, $14542 = 0.0, $14543 = 0.0, $14544 = 0.0, $14545 = 0.0, $14546 = 0.0, $14547 = 0.0, $14548 = 0.0, $14549 = 0.0, $1455 = 0.0, $14550 = 0.0;
 var $14551 = 0.0, $14552 = 0.0, $14553 = 0.0, $14554 = 0, $14555 = 0.0, $14556 = 0.0, $14557 = 0.0, $14558 = 0.0, $14559 = 0.0, $1456 = 0.0, $14560 = 0.0, $14561 = 0.0, $14562 = 0.0, $14563 = 0, $14564 = 0.0, $14565 = 0, $14566 = 0.0, $14567 = 0, $14568 = 0.0, $14569 = 0;
 var $1457 = 0.0, $14570 = 0.0, $14571 = 0, $14572 = 0.0, $14573 = 0.0, $14574 = 0.0, $14575 = 0.0, $14576 = 0.0, $14577 = 0.0, $14578 = 0.0, $14579 = 0.0, $1458 = 0.0, $14580 = 0.0, $14581 = 0.0, $14582 = 0.0, $14583 = 0.0, $14584 = 0.0, $14585 = 0.0, $14586 = 0.0, $14587 = 0.0;
 var $14588 = 0.0, $14589 = 0.0, $1459 = 0.0, $14590 = 0.0, $14591 = 0.0, $14592 = 0.0, $14593 = 0.0, $14594 = 0.0, $14595 = 0.0, $14596 = 0.0, $14597 = 0.0, $14598 = 0.0, $14599 = 0.0, $146 = 0, $1460 = 0.0, $14600 = 0.0, $14601 = 0.0, $14602 = 0.0, $14603 = 0.0, $14604 = 0.0;
 var $14605 = 0.0, $14606 = 0.0, $14607 = 0.0, $14608 = 0.0, $14609 = 0.0, $1461 = 0.0, $14610 = 0.0, $14611 = 0.0, $14612 = 0.0, $14613 = 0.0, $14614 = 0.0, $14615 = 0.0, $14616 = 0.0, $14617 = 0, $14618 = 0, $14619 = 0.0, $1462 = 0.0, $14620 = 0.0, $14621 = 0.0, $14622 = 0.0;
 var $14623 = 0.0, $14624 = 0.0, $14625 = 0.0, $14626 = 0.0, $14627 = 0, $14628 = 0, $14629 = 0.0, $1463 = 0.0, $14630 = 0.0, $14631 = 0.0, $14632 = 0.0, $14633 = 0.0, $14634 = 0.0, $14635 = 0.0, $14636 = 0, $14637 = 0.0, $14638 = 0, $14639 = 0.0, $1464 = 0.0, $14640 = 0.0;
 var $14641 = 0.0, $14642 = 0.0, $14643 = 0.0, $14644 = 0.0, $14645 = 0.0, $14646 = 0.0, $14647 = 0.0, $14648 = 0.0, $14649 = 0.0, $1465 = 0.0, $14650 = 0.0, $14651 = 0.0, $14652 = 0.0, $14653 = 0.0, $14654 = 0.0, $14655 = 0.0, $14656 = 0.0, $14657 = 0.0, $14658 = 0.0, $14659 = 0.0;
 var $1466 = 0.0, $14660 = 0.0, $14661 = 0.0, $14662 = 0.0, $14663 = 0.0, $14664 = 0.0, $14665 = 0.0, $14666 = 0.0, $14667 = 0.0, $14668 = 0.0, $14669 = 0.0, $1467 = 0.0, $14670 = 0.0, $14671 = 0.0, $14672 = 0.0, $14673 = 0.0, $14674 = 0.0, $14675 = 0.0, $14676 = 0.0, $14677 = 0.0;
 var $14678 = 0.0, $14679 = 0.0, $1468 = 0, $14680 = 0.0, $14681 = 0.0, $14682 = 0.0, $14683 = 0.0, $14684 = 0.0, $14685 = 0.0, $14686 = 0.0, $14687 = 0.0, $14688 = 0.0, $14689 = 0.0, $1469 = 0.0, $14690 = 0.0, $14691 = 0.0, $14692 = 0.0, $14693 = 0.0, $14694 = 0.0, $14695 = 0.0;
 var $14696 = 0.0, $14697 = 0.0, $14698 = 0.0, $14699 = 0.0, $147 = 0, $1470 = 0.0, $14700 = 0.0, $14701 = 0.0, $14702 = 0.0, $14703 = 0.0, $14704 = 0.0, $14705 = 0.0, $14706 = 0.0, $14707 = 0.0, $14708 = 0.0, $14709 = 0.0, $1471 = 0.0, $14710 = 0.0, $14711 = 0.0, $14712 = 0.0;
 var $14713 = 0.0, $14714 = 0.0, $14715 = 0.0, $14716 = 0.0, $14717 = 0.0, $14718 = 0.0, $14719 = 0.0, $1472 = 0.0, $14720 = 0.0, $14721 = 0.0, $14722 = 0.0, $14723 = 0.0, $14724 = 0.0, $14725 = 0.0, $14726 = 0.0, $14727 = 0.0, $14728 = 0.0, $14729 = 0.0, $1473 = 0.0, $14730 = 0.0;
 var $14731 = 0, $14732 = 0.0, $14733 = 0.0, $14734 = 0.0, $14735 = 0.0, $14736 = 0.0, $14737 = 0.0, $14738 = 0.0, $14739 = 0.0, $1474 = 0.0, $14740 = 0, $14741 = 0.0, $14742 = 0, $14743 = 0.0, $14744 = 0, $14745 = 0.0, $14746 = 0, $14747 = 0.0, $14748 = 0, $14749 = 0;
 var $1475 = 0.0, $14750 = 0.0, $14751 = 0.0, $14752 = 0.0, $14753 = 0.0, $14754 = 0.0, $14755 = 0, $14756 = 0, $14757 = 0.0, $14758 = 0.0, $14759 = 0.0, $1476 = 0.0, $14760 = 0.0, $14761 = 0.0, $14762 = 0.0, $14763 = 0, $14764 = 0.0, $14765 = 0.0, $14766 = 0, $14767 = 0;
 var $14768 = 0.0, $14769 = 0.0, $1477 = 0.0, $14770 = 0.0, $14771 = 0.0, $14772 = 0.0, $14773 = 0.0, $14774 = 0.0, $14775 = 0.0, $14776 = 0.0, $14777 = 0.0, $14778 = 0, $14779 = 0, $1478 = 0, $14780 = 0.0, $14781 = 0.0, $14782 = 0.0, $14783 = 0.0, $14784 = 0.0, $14785 = 0.0;
 var $14786 = 0.0, $14787 = 0.0, $14788 = 0.0, $14789 = 0.0, $1479 = 0.0, $14790 = 0.0, $14791 = 0, $14792 = 0.0, $14793 = 0, $14794 = 0.0, $14795 = 0.0, $14796 = 0, $14797 = 0.0, $14798 = 0, $14799 = 0.0, $148 = 0, $1480 = 0, $14800 = 0, $14801 = 0, $14802 = 0;
 var $14803 = 0, $14804 = 0, $14805 = 0, $14806 = 0, $14807 = 0, $14808 = 0, $14809 = 0, $1481 = 0.0, $14810 = 0.0, $14811 = 0, $14812 = 0.0, $14813 = 0.0, $14814 = 0.0, $14815 = 0, $14816 = 0.0, $14817 = 0, $14818 = 0.0, $14819 = 0.0, $1482 = 0.0, $14820 = 0.0;
 var $14821 = 0, $14822 = 0, $14823 = 0, $14824 = 0.0, $14825 = 0, $14826 = 0.0, $14827 = 0, $14828 = 0.0, $14829 = 0.0, $1483 = 0.0, $14830 = 0.0, $14831 = 0.0, $14832 = 0.0, $14833 = 0.0, $14834 = 0.0, $14835 = 0.0, $14836 = 0.0, $14837 = 0.0, $14838 = 0.0, $14839 = 0.0;
 var $1484 = 0.0, $14840 = 0.0, $14841 = 0.0, $14842 = 0.0, $14843 = 0.0, $14844 = 0.0, $14845 = 0.0, $14846 = 0.0, $14847 = 0.0, $14848 = 0.0, $14849 = 0.0, $1485 = 0.0, $14850 = 0.0, $14851 = 0.0, $14852 = 0.0, $14853 = 0.0, $14854 = 0.0, $14855 = 0.0, $14856 = 0.0, $14857 = 0.0;
 var $14858 = 0.0, $14859 = 0.0, $1486 = 0.0, $14860 = 0.0, $14861 = 0, $14862 = 0.0, $14863 = 0.0, $14864 = 0.0, $14865 = 0.0, $14866 = 0.0, $14867 = 0.0, $14868 = 0.0, $14869 = 0.0, $1487 = 0.0, $14870 = 0.0, $14871 = 0.0, $14872 = 0.0, $14873 = 0.0, $14874 = 0.0, $14875 = 0.0;
 var $14876 = 0.0, $14877 = 0.0, $14878 = 0.0, $14879 = 0.0, $1488 = 0.0, $14880 = 0.0, $14881 = 0.0, $14882 = 0.0, $14883 = 0, $14884 = 0.0, $14885 = 0.0, $14886 = 0.0, $14887 = 0.0, $14888 = 0.0, $14889 = 0.0, $1489 = 0.0, $14890 = 0.0, $14891 = 0.0, $14892 = 0.0, $14893 = 0.0;
 var $14894 = 0.0, $14895 = 0.0, $14896 = 0.0, $14897 = 0.0, $14898 = 0.0, $14899 = 0.0, $149 = 0, $1490 = 0.0, $14900 = 0.0, $14901 = 0.0, $14902 = 0.0, $14903 = 0.0, $14904 = 0.0, $14905 = 0.0, $14906 = 0.0, $14907 = 0.0, $14908 = 0.0, $14909 = 0, $1491 = 0.0, $14910 = 0.0;
 var $14911 = 0.0, $14912 = 0, $14913 = 0.0, $14914 = 0.0, $14915 = 0.0, $14916 = 0.0, $14917 = 0.0, $14918 = 0.0, $14919 = 0.0, $1492 = 0.0, $14920 = 0.0, $14921 = 0.0, $14922 = 0.0, $14923 = 0.0, $14924 = 0.0, $14925 = 0.0, $14926 = 0.0, $14927 = 0.0, $14928 = 0.0, $14929 = 0.0;
 var $1493 = 0.0, $14930 = 0.0, $14931 = 0.0, $14932 = 0.0, $14933 = 0.0, $14934 = 0.0, $14935 = 0.0, $14936 = 0.0, $14937 = 0.0, $14938 = 0.0, $14939 = 0.0, $1494 = 0.0, $14940 = 0.0, $14941 = 0.0, $14942 = 0.0, $14943 = 0.0, $14944 = 0.0, $14945 = 0.0, $14946 = 0.0, $14947 = 0.0;
 var $14948 = 0.0, $14949 = 0.0, $1495 = 0.0, $14950 = 0, $14951 = 0.0, $14952 = 0.0, $14953 = 0.0, $14954 = 0.0, $14955 = 0.0, $14956 = 0.0, $14957 = 0.0, $14958 = 0.0, $14959 = 0.0, $1496 = 0.0, $14960 = 0.0, $14961 = 0.0, $14962 = 0.0, $14963 = 0.0, $14964 = 0.0, $14965 = 0.0;
 var $14966 = 0.0, $14967 = 0.0, $14968 = 0.0, $14969 = 0.0, $1497 = 0.0, $14970 = 0.0, $14971 = 0.0, $14972 = 0.0, $14973 = 0.0, $14974 = 0.0, $14975 = 0, $14976 = 0.0, $14977 = 0.0, $14978 = 0.0, $14979 = 0.0, $1498 = 0.0, $14980 = 0.0, $14981 = 0.0, $14982 = 0.0, $14983 = 0.0;
 var $14984 = 0.0, $14985 = 0.0, $14986 = 0.0, $14987 = 0.0, $14988 = 0.0, $14989 = 0, $1499 = 0.0, $14990 = 0.0, $14991 = 0.0, $14992 = 0.0, $14993 = 0.0, $14994 = 0.0, $14995 = 0.0, $14996 = 0.0, $14997 = 0.0, $14998 = 0.0, $14999 = 0, $15 = 0, $150 = 0, $1500 = 0.0;
 var $15000 = 0.0, $15001 = 0, $15002 = 0.0, $15003 = 0.0, $15004 = 0.0, $15005 = 0.0, $15006 = 0.0, $15007 = 0.0, $15008 = 0.0, $15009 = 0.0, $1501 = 0.0, $15010 = 0.0, $15011 = 0.0, $15012 = 0.0, $15013 = 0.0, $15014 = 0.0, $15015 = 0.0, $15016 = 0.0, $15017 = 0.0, $15018 = 0.0;
 var $15019 = 0.0, $1502 = 0.0, $15020 = 0.0, $15021 = 0.0, $15022 = 0.0, $15023 = 0.0, $15024 = 0.0, $15025 = 0.0, $15026 = 0.0, $15027 = 0.0, $15028 = 0.0, $15029 = 0.0, $1503 = 0.0, $15030 = 0.0, $15031 = 0.0, $15032 = 0.0, $15033 = 0.0, $15034 = 0.0, $15035 = 0, $15036 = 0.0;
 var $15037 = 0.0, $15038 = 0.0, $15039 = 0.0, $1504 = 0.0, $15040 = 0.0, $15041 = 0.0, $15042 = 0.0, $15043 = 0.0, $15044 = 0.0, $15045 = 0.0, $15046 = 0.0, $15047 = 0.0, $15048 = 0.0, $15049 = 0.0, $1505 = 0.0, $15050 = 0.0, $15051 = 0.0, $15052 = 0.0, $15053 = 0.0, $15054 = 0.0;
 var $15055 = 0, $15056 = 0.0, $15057 = 0.0, $15058 = 0.0, $15059 = 0.0, $1506 = 0.0, $15060 = 0.0, $15061 = 0.0, $15062 = 0.0, $15063 = 0.0, $15064 = 0.0, $15065 = 0.0, $15066 = 0.0, $15067 = 0.0, $15068 = 0.0, $15069 = 0.0, $1507 = 0.0, $15070 = 0.0, $15071 = 0.0, $15072 = 0.0;
 var $15073 = 0.0, $15074 = 0.0, $15075 = 0.0, $15076 = 0.0, $15077 = 0.0, $15078 = 0.0, $15079 = 0.0, $1508 = 0.0, $15080 = 0.0, $15081 = 0.0, $15082 = 0.0, $15083 = 0.0, $15084 = 0.0, $15085 = 0.0, $15086 = 0.0, $15087 = 0, $15088 = 0.0, $15089 = 0.0, $1509 = 0.0, $15090 = 0.0;
 var $15091 = 0.0, $15092 = 0.0, $15093 = 0.0, $15094 = 0.0, $15095 = 0.0, $15096 = 0.0, $15097 = 0.0, $15098 = 0.0, $15099 = 0.0, $151 = 0, $1510 = 0.0, $15100 = 0.0, $15101 = 0.0, $15102 = 0.0, $15103 = 0.0, $15104 = 0.0, $15105 = 0.0, $15106 = 0.0, $15107 = 0, $15108 = 0.0;
 var $15109 = 0.0, $1511 = 0.0, $15110 = 0.0, $15111 = 0.0, $15112 = 0.0, $15113 = 0.0, $15114 = 0.0, $15115 = 0.0, $15116 = 0.0, $15117 = 0.0, $15118 = 0.0, $15119 = 0.0, $1512 = 0.0, $15120 = 0.0, $15121 = 0.0, $15122 = 0.0, $15123 = 0.0, $15124 = 0.0, $15125 = 0.0, $15126 = 0.0;
 var $15127 = 0.0, $15128 = 0.0, $15129 = 0.0, $1513 = 0.0, $15130 = 0.0, $15131 = 0.0, $15132 = 0.0, $15133 = 0.0, $15134 = 0.0, $15135 = 0.0, $15136 = 0.0, $15137 = 0.0, $15138 = 0.0, $15139 = 0.0, $1514 = 0, $15140 = 0.0, $15141 = 0.0, $15142 = 0, $15143 = 0.0, $15144 = 0.0;
 var $15145 = 0.0, $15146 = 0.0, $15147 = 0.0, $15148 = 0.0, $15149 = 0.0, $1515 = 0.0, $15150 = 0.0, $15151 = 0.0, $15152 = 0.0, $15153 = 0.0, $15154 = 0.0, $15155 = 0.0, $15156 = 0.0, $15157 = 0.0, $15158 = 0.0, $15159 = 0.0, $1516 = 0.0, $15160 = 0.0, $15161 = 0.0, $15162 = 0;
 var $15163 = 0.0, $15164 = 0.0, $15165 = 0.0, $15166 = 0.0, $15167 = 0.0, $15168 = 0.0, $15169 = 0.0, $1517 = 0.0, $15170 = 0.0, $15171 = 0.0, $15172 = 0, $15173 = 0.0, $15174 = 0.0, $15175 = 0.0, $15176 = 0, $15177 = 0.0, $15178 = 0.0, $15179 = 0.0, $1518 = 0.0, $15180 = 0.0;
 var $15181 = 0.0, $15182 = 0.0, $15183 = 0.0, $15184 = 0.0, $15185 = 0.0, $15186 = 0.0, $15187 = 0.0, $15188 = 0.0, $15189 = 0.0, $1519 = 0.0, $15190 = 0.0, $15191 = 0.0, $15192 = 0.0, $15193 = 0.0, $15194 = 0.0, $15195 = 0.0, $15196 = 0.0, $15197 = 0.0, $15198 = 0.0, $15199 = 0.0;
 var $152 = 0, $1520 = 0.0, $15200 = 0.0, $15201 = 0.0, $15202 = 0.0, $15203 = 0.0, $15204 = 0.0, $15205 = 0.0, $15206 = 0.0, $15207 = 0.0, $15208 = 0.0, $15209 = 0.0, $1521 = 0.0, $15210 = 0.0, $15211 = 0.0, $15212 = 0.0, $15213 = 0.0, $15214 = 0.0, $15215 = 0.0, $15216 = 0.0;
 var $15217 = 0.0, $15218 = 0.0, $15219 = 0.0, $1522 = 0.0, $15220 = 0.0, $15221 = 0.0, $15222 = 0.0, $15223 = 0.0, $15224 = 0.0, $15225 = 0.0, $15226 = 0.0, $15227 = 0.0, $15228 = 0, $15229 = 0.0, $1523 = 0.0, $15230 = 0.0, $15231 = 0.0, $15232 = 0.0, $15233 = 0, $15234 = 0.0;
 var $15235 = 0, $15236 = 0.0, $15237 = 0, $15238 = 0.0, $15239 = 0, $1524 = 0.0, $15240 = 0.0, $15241 = 0, $15242 = 0.0, $15243 = 0, $15244 = 0, $15245 = 0, $15246 = 0, $15247 = 0, $15248 = 0, $15249 = 0.0, $1525 = 0.0, $15250 = 0.0, $15251 = 0.0, $15252 = 0.0;
 var $15253 = 0, $15254 = 0, $15255 = 0.0, $15256 = 0, $15257 = 0.0, $15258 = 0.0, $15259 = 0, $1526 = 0.0, $15260 = 0.0, $15261 = 0.0, $15262 = 0, $15263 = 0, $15264 = 0, $15265 = 0, $15266 = 0, $15267 = 0, $15268 = 0, $15269 = 0.0, $1527 = 0.0, $15270 = 0;
 var $15271 = 0.0, $15272 = 0, $15273 = 0.0, $15274 = 0.0, $15275 = 0.0, $15276 = 0.0, $15277 = 0, $15278 = 0, $15279 = 0, $1528 = 0.0, $15280 = 0, $15281 = 0, $15282 = 0, $15283 = 0.0, $15284 = 0, $15285 = 0.0, $15286 = 0.0, $15287 = 0.0, $15288 = 0, $15289 = 0.0;
 var $1529 = 0.0, $15290 = 0, $15291 = 0.0, $15292 = 0.0, $15293 = 0.0, $15294 = 0, $15295 = 0, $15296 = 0, $15297 = 0.0, $15298 = 0.0, $15299 = 0.0, $153 = 0, $1530 = 0.0, $15300 = 0.0, $15301 = 0.0, $15302 = 0.0, $15303 = 0.0, $15304 = 0.0, $15305 = 0.0, $15306 = 0.0;
 var $15307 = 0.0, $15308 = 0, $15309 = 0.0, $1531 = 0.0, $15310 = 0.0, $15311 = 0.0, $15312 = 0, $15313 = 0.0, $15314 = 0, $15315 = 0.0, $15316 = 0, $15317 = 0.0, $15318 = 0, $15319 = 0.0, $1532 = 0.0, $15320 = 0, $15321 = 0.0, $15322 = 0.0, $15323 = 0.0, $15324 = 0.0;
 var $15325 = 0.0, $15326 = 0.0, $15327 = 0.0, $15328 = 0.0, $15329 = 0.0, $1533 = 0.0, $15330 = 0.0, $15331 = 0.0, $15332 = 0.0, $15333 = 0.0, $15334 = 0.0, $15335 = 0.0, $15336 = 0.0, $15337 = 0.0, $15338 = 0.0, $15339 = 0.0, $1534 = 0, $15340 = 0.0, $15341 = 0.0, $15342 = 0.0;
 var $15343 = 0.0, $15344 = 0.0, $15345 = 0.0, $15346 = 0.0, $15347 = 0.0, $15348 = 0, $15349 = 0, $1535 = 0.0, $15350 = 0, $15351 = 0, $15352 = 0, $15353 = 0, $15354 = 0.0, $15355 = 0.0, $15356 = 0.0, $15357 = 0.0, $15358 = 0, $15359 = 0, $1536 = 0.0, $15360 = 0.0;
 var $15361 = 0, $15362 = 0.0, $15363 = 0.0, $15364 = 0, $15365 = 0.0, $15366 = 0.0, $15367 = 0, $15368 = 0, $15369 = 0, $1537 = 0.0, $15370 = 0, $15371 = 0, $15372 = 0, $15373 = 0, $15374 = 0.0, $15375 = 0, $15376 = 0.0, $15377 = 0, $15378 = 0.0, $15379 = 0.0;
 var $1538 = 0.0, $15380 = 0.0, $15381 = 0.0, $15382 = 0, $15383 = 0, $15384 = 0, $15385 = 0, $15386 = 0, $15387 = 0, $15388 = 0.0, $15389 = 0, $1539 = 0.0, $15390 = 0.0, $15391 = 0.0, $15392 = 0.0, $15393 = 0, $15394 = 0.0, $15395 = 0, $15396 = 0.0, $15397 = 0.0;
 var $15398 = 0.0, $15399 = 0, $154 = 0, $1540 = 0.0, $15400 = 0, $15401 = 0, $15402 = 0.0, $15403 = 0.0, $15404 = 0.0, $15405 = 0.0, $15406 = 0.0, $15407 = 0.0, $15408 = 0.0, $15409 = 0.0, $1541 = 0.0, $15410 = 0.0, $15411 = 0, $15412 = 0.0, $15413 = 0.0, $15414 = 0.0;
 var $15415 = 0, $15416 = 0.0, $15417 = 0, $15418 = 0.0, $15419 = 0, $1542 = 0.0, $15420 = 0.0, $15421 = 0, $15422 = 0.0, $15423 = 0, $15424 = 0.0, $15425 = 0.0, $15426 = 0.0, $15427 = 0.0, $15428 = 0.0, $15429 = 0.0, $1543 = 0.0, $15430 = 0.0, $15431 = 0.0, $15432 = 0.0;
 var $15433 = 0.0, $15434 = 0.0, $15435 = 0.0, $15436 = 0.0, $15437 = 0.0, $15438 = 0.0, $15439 = 0.0, $1544 = 0.0, $15440 = 0.0, $15441 = 0.0, $15442 = 0.0, $15443 = 0.0, $15444 = 0.0, $15445 = 0.0, $15446 = 0.0, $15447 = 0.0, $15448 = 0.0, $15449 = 0.0, $1545 = 0.0, $15450 = 0.0;
 var $15451 = 0.0, $15452 = 0, $15453 = 0, $15454 = 0, $15455 = 0, $15456 = 0, $15457 = 0, $15458 = 0.0, $15459 = 0.0, $1546 = 0.0, $15460 = 0.0, $15461 = 0.0, $15462 = 0, $15463 = 0, $15464 = 0.0, $15465 = 0, $15466 = 0.0, $15467 = 0.0, $15468 = 0, $15469 = 0.0;
 var $1547 = 0.0, $15470 = 0.0, $15471 = 0, $15472 = 0, $15473 = 0, $15474 = 0, $15475 = 0, $15476 = 0, $15477 = 0, $15478 = 0.0, $15479 = 0, $1548 = 0.0, $15480 = 0.0, $15481 = 0, $15482 = 0.0, $15483 = 0.0, $15484 = 0.0, $15485 = 0.0, $15486 = 0, $15487 = 0;
 var $15488 = 0, $15489 = 0, $1549 = 0.0, $15490 = 0, $15491 = 0, $15492 = 0.0, $15493 = 0, $15494 = 0.0, $15495 = 0.0, $15496 = 0.0, $15497 = 0, $15498 = 0.0, $15499 = 0, $155 = 0, $1550 = 0.0, $15500 = 0.0, $15501 = 0.0, $15502 = 0.0, $15503 = 0, $15504 = 0;
 var $15505 = 0, $15506 = 0.0, $15507 = 0.0, $15508 = 0.0, $15509 = 0.0, $1551 = 0.0, $15510 = 0.0, $15511 = 0.0, $15512 = 0.0, $15513 = 0.0, $15514 = 0.0, $15515 = 0.0, $15516 = 0, $15517 = 0.0, $15518 = 0.0, $15519 = 0.0, $1552 = 0.0, $15520 = 0, $15521 = 0.0, $15522 = 0;
 var $15523 = 0.0, $15524 = 0, $15525 = 0.0, $15526 = 0, $15527 = 0.0, $15528 = 0, $15529 = 0.0, $1553 = 0.0, $15530 = 0.0, $15531 = 0.0, $15532 = 0.0, $15533 = 0.0, $15534 = 0.0, $15535 = 0.0, $15536 = 0.0, $15537 = 0.0, $15538 = 0.0, $15539 = 0.0, $1554 = 0.0, $15540 = 0.0;
 var $15541 = 0.0, $15542 = 0.0, $15543 = 0.0, $15544 = 0.0, $15545 = 0.0, $15546 = 0.0, $15547 = 0.0, $15548 = 0.0, $15549 = 0.0, $1555 = 0.0, $15550 = 0.0, $15551 = 0.0, $15552 = 0.0, $15553 = 0.0, $15554 = 0.0, $15555 = 0.0, $15556 = 0.0, $15557 = 0, $15558 = 0, $15559 = 0;
 var $1556 = 0.0, $15560 = 0, $15561 = 0, $15562 = 0, $15563 = 0.0, $15564 = 0.0, $15565 = 0.0, $15566 = 0.0, $15567 = 0, $15568 = 0, $15569 = 0.0, $1557 = 0.0, $15570 = 0, $15571 = 0.0, $15572 = 0.0, $15573 = 0, $15574 = 0.0, $15575 = 0.0, $15576 = 0, $15577 = 0;
 var $15578 = 0, $15579 = 0, $1558 = 0.0, $15580 = 0, $15581 = 0, $15582 = 0, $15583 = 0.0, $15584 = 0, $15585 = 0.0, $15586 = 0, $15587 = 0.0, $15588 = 0.0, $15589 = 0.0, $1559 = 0.0, $15590 = 0.0, $15591 = 0, $15592 = 0, $15593 = 0, $15594 = 0, $15595 = 0;
 var $15596 = 0, $15597 = 0.0, $15598 = 0, $15599 = 0.0, $156 = 0, $1560 = 0.0, $15600 = 0.0, $15601 = 0.0, $15602 = 0, $15603 = 0.0, $15604 = 0, $15605 = 0.0, $15606 = 0.0, $15607 = 0.0, $15608 = 0, $15609 = 0, $1561 = 0.0, $15610 = 0, $15611 = 0.0, $15612 = 0.0;
 var $15613 = 0.0, $15614 = 0.0, $15615 = 0.0, $15616 = 0.0, $15617 = 0.0, $15618 = 0.0, $15619 = 0.0, $1562 = 0.0, $15620 = 0.0, $15621 = 0.0, $15622 = 0, $15623 = 0.0, $15624 = 0.0, $15625 = 0.0, $15626 = 0, $15627 = 0.0, $15628 = 0, $15629 = 0.0, $1563 = 0.0, $15630 = 0;
 var $15631 = 0.0, $15632 = 0, $15633 = 0.0, $15634 = 0, $15635 = 0.0, $15636 = 0.0, $15637 = 0.0, $15638 = 0.0, $15639 = 0.0, $1564 = 0.0, $15640 = 0.0, $15641 = 0.0, $15642 = 0.0, $15643 = 0.0, $15644 = 0.0, $15645 = 0.0, $15646 = 0.0, $15647 = 0.0, $15648 = 0.0, $15649 = 0.0;
 var $1565 = 0.0, $15650 = 0.0, $15651 = 0.0, $15652 = 0.0, $15653 = 0.0, $15654 = 0.0, $15655 = 0.0, $15656 = 0.0, $15657 = 0.0, $15658 = 0.0, $15659 = 0.0, $1566 = 0, $15660 = 0.0, $15661 = 0.0, $15662 = 0, $15663 = 0, $15664 = 0, $15665 = 0, $15666 = 0, $15667 = 0;
 var $15668 = 0.0, $15669 = 0.0, $1567 = 0.0, $15670 = 0.0, $15671 = 0.0, $15672 = 0, $15673 = 0, $15674 = 0.0, $15675 = 0, $15676 = 0.0, $15677 = 0.0, $15678 = 0, $15679 = 0.0, $1568 = 0.0, $15680 = 0.0, $15681 = 0, $15682 = 0, $15683 = 0, $15684 = 0, $15685 = 0;
 var $15686 = 0, $15687 = 0, $15688 = 0.0, $15689 = 0, $1569 = 0.0, $15690 = 0.0, $15691 = 0, $15692 = 0.0, $15693 = 0.0, $15694 = 0.0, $15695 = 0.0, $15696 = 0, $15697 = 0, $15698 = 0, $15699 = 0, $157 = 0, $1570 = 0.0, $15700 = 0, $15701 = 0, $15702 = 0.0;
 var $15703 = 0, $15704 = 0.0, $15705 = 0.0, $15706 = 0.0, $15707 = 0, $15708 = 0.0, $15709 = 0, $1571 = 0.0, $15710 = 0.0, $15711 = 0.0, $15712 = 0.0, $15713 = 0, $15714 = 0, $15715 = 0, $15716 = 0.0, $15717 = 0.0, $15718 = 0.0, $15719 = 0.0, $1572 = 0.0, $15720 = 0.0;
 var $15721 = 0.0, $15722 = 0.0, $15723 = 0.0, $15724 = 0.0, $15725 = 0.0, $15726 = 0.0, $15727 = 0.0, $15728 = 0, $15729 = 0, $1573 = 0.0, $15730 = 0.0, $15731 = 0.0, $15732 = 0.0, $15733 = 0.0, $15734 = 0, $15735 = 0.0, $15736 = 0.0, $15737 = 0.0, $15738 = 0.0, $15739 = 0.0;
 var $1574 = 0.0, $15740 = 0.0, $15741 = 0.0, $15742 = 0.0, $15743 = 0.0, $15744 = 0.0, $15745 = 0.0, $15746 = 0.0, $15747 = 0.0, $15748 = 0.0, $15749 = 0, $1575 = 0.0, $15750 = 0.0, $15751 = 0.0, $15752 = 0.0, $15753 = 0.0, $15754 = 0.0, $15755 = 0, $15756 = 0.0, $15757 = 0.0;
 var $15758 = 0.0, $15759 = 0.0, $1576 = 0.0, $15760 = 0.0, $15761 = 0.0, $15762 = 0.0, $15763 = 0.0, $15764 = 0.0, $15765 = 0.0, $15766 = 0.0, $15767 = 0.0, $15768 = 0.0, $15769 = 0.0, $1577 = 0.0, $15770 = 0.0, $15771 = 0.0, $15772 = 0, $15773 = 0.0, $15774 = 0, $15775 = 0.0;
 var $15776 = 0.0, $15777 = 0.0, $15778 = 0.0, $15779 = 0.0, $1578 = 0.0, $15780 = 0.0, $15781 = 0.0, $15782 = 0.0, $15783 = 0.0, $15784 = 0.0, $15785 = 0.0, $15786 = 0.0, $15787 = 0.0, $15788 = 0.0, $15789 = 0.0, $1579 = 0.0, $15790 = 0.0, $15791 = 0.0, $15792 = 0.0, $15793 = 0.0;
 var $15794 = 0.0, $15795 = 0.0, $15796 = 0.0, $15797 = 0.0, $15798 = 0.0, $15799 = 0.0, $158 = 0, $1580 = 0.0, $15800 = 0.0, $15801 = 0.0, $15802 = 0.0, $15803 = 0.0, $15804 = 0.0, $15805 = 0, $15806 = 0.0, $15807 = 0.0, $15808 = 0.0, $15809 = 0.0, $1581 = 0.0, $15810 = 0.0;
 var $15811 = 0, $15812 = 0.0, $15813 = 0, $15814 = 0.0, $15815 = 0, $15816 = 0.0, $15817 = 0, $15818 = 0.0, $15819 = 0.0, $1582 = 0.0, $15820 = 0.0, $15821 = 0.0, $15822 = 0.0, $15823 = 0.0, $15824 = 0.0, $15825 = 0.0, $15826 = 0.0, $15827 = 0.0, $15828 = 0.0, $15829 = 0.0;
 var $1583 = 0.0, $15830 = 0.0, $15831 = 0.0, $15832 = 0.0, $15833 = 0.0, $15834 = 0.0, $15835 = 0.0, $15836 = 0.0, $15837 = 0.0, $15838 = 0.0, $15839 = 0.0, $1584 = 0.0, $15840 = 0.0, $15841 = 0.0, $15842 = 0.0, $15843 = 0.0, $15844 = 0.0, $15845 = 0.0, $15846 = 0.0, $15847 = 0.0;
 var $15848 = 0.0, $15849 = 0.0, $1585 = 0.0, $15850 = 0.0, $15851 = 0.0, $15852 = 0.0, $15853 = 0.0, $15854 = 0.0, $15855 = 0.0, $15856 = 0.0, $15857 = 0.0, $15858 = 0.0, $15859 = 0.0, $1586 = 0, $15860 = 0.0, $15861 = 0.0, $15862 = 0.0, $15863 = 0.0, $15864 = 0.0, $15865 = 0.0;
 var $15866 = 0.0, $15867 = 0.0, $15868 = 0.0, $15869 = 0, $1587 = 0.0, $15870 = 0, $15871 = 0.0, $15872 = 0.0, $15873 = 0.0, $15874 = 0.0, $15875 = 0.0, $15876 = 0.0, $15877 = 0.0, $15878 = 0.0, $15879 = 0.0, $1588 = 0.0, $15880 = 0.0, $15881 = 0.0, $15882 = 0.0, $15883 = 0.0;
 var $15884 = 0.0, $15885 = 0.0, $15886 = 0.0, $15887 = 0.0, $15888 = 0.0, $15889 = 0.0, $1589 = 0.0, $15890 = 0.0, $15891 = 0.0, $15892 = 0.0, $15893 = 0.0, $15894 = 0, $15895 = 0, $15896 = 0.0, $15897 = 0.0, $15898 = 0.0, $15899 = 0.0, $159 = 0, $1590 = 0.0, $15900 = 0.0;
 var $15901 = 0.0, $15902 = 0.0, $15903 = 0, $15904 = 0.0, $15905 = 0, $15906 = 0.0, $15907 = 0.0, $15908 = 0.0, $15909 = 0.0, $1591 = 0.0, $15910 = 0.0, $15911 = 0.0, $15912 = 0.0, $15913 = 0.0, $15914 = 0.0, $15915 = 0.0, $15916 = 0.0, $15917 = 0.0, $15918 = 0.0, $15919 = 0.0;
 var $1592 = 0.0, $15920 = 0.0, $15921 = 0.0, $15922 = 0.0, $15923 = 0.0, $15924 = 0.0, $15925 = 0.0, $15926 = 0.0, $15927 = 0.0, $15928 = 0.0, $15929 = 0.0, $1593 = 0.0, $15930 = 0.0, $15931 = 0.0, $15932 = 0.0, $15933 = 0.0, $15934 = 0.0, $15935 = 0.0, $15936 = 0.0, $15937 = 0.0;
 var $15938 = 0.0, $15939 = 0.0, $1594 = 0.0, $15940 = 0.0, $15941 = 0.0, $15942 = 0.0, $15943 = 0.0, $15944 = 0.0, $15945 = 0.0, $15946 = 0.0, $15947 = 0.0, $15948 = 0.0, $15949 = 0.0, $1595 = 0.0, $15950 = 0.0, $15951 = 0.0, $15952 = 0.0, $15953 = 0.0, $15954 = 0.0, $15955 = 0.0;
 var $15956 = 0.0, $15957 = 0.0, $15958 = 0.0, $15959 = 0.0, $1596 = 0.0, $15960 = 0.0, $15961 = 0.0, $15962 = 0.0, $15963 = 0.0, $15964 = 0.0, $15965 = 0.0, $15966 = 0.0, $15967 = 0.0, $15968 = 0.0, $15969 = 0.0, $1597 = 0.0, $15970 = 0.0, $15971 = 0.0, $15972 = 0.0, $15973 = 0.0;
 var $15974 = 0.0, $15975 = 0.0, $15976 = 0.0, $15977 = 0.0, $15978 = 0, $15979 = 0.0, $1598 = 0.0, $15980 = 0.0, $15981 = 0.0, $15982 = 0.0, $15983 = 0.0, $15984 = 0.0, $15985 = 0.0, $15986 = 0.0, $15987 = 0.0, $15988 = 0, $15989 = 0.0, $1599 = 0.0, $15990 = 0, $15991 = 0.0;
 var $15992 = 0, $15993 = 0.0, $15994 = 0, $15995 = 0.0, $15996 = 0.0, $15997 = 0.0, $15998 = 0.0, $15999 = 0.0, $16 = 0, $160 = 0, $1600 = 0.0, $16000 = 0.0, $16001 = 0.0, $16002 = 0.0, $16003 = 0.0, $16004 = 0.0, $16005 = 0.0, $16006 = 0.0, $16007 = 0.0, $16008 = 0.0;
 var $16009 = 0.0, $1601 = 0.0, $16010 = 0.0, $16011 = 0.0, $16012 = 0.0, $16013 = 0.0, $16014 = 0.0, $16015 = 0.0, $16016 = 0.0, $16017 = 0.0, $16018 = 0.0, $16019 = 0.0, $1602 = 0.0, $16020 = 0.0, $16021 = 0.0, $16022 = 0.0, $16023 = 0.0, $16024 = 0.0, $16025 = 0.0, $16026 = 0.0;
 var $16027 = 0.0, $16028 = 0.0, $16029 = 0.0, $1603 = 0.0, $16030 = 0.0, $16031 = 0.0, $16032 = 0.0, $16033 = 0.0, $16034 = 0.0, $16035 = 0.0, $16036 = 0.0, $16037 = 0.0, $16038 = 0.0, $16039 = 0.0, $1604 = 0.0, $16040 = 0, $16041 = 0, $16042 = 0.0, $16043 = 0.0, $16044 = 0.0;
 var $16045 = 0.0, $16046 = 0.0, $16047 = 0.0, $16048 = 0.0, $16049 = 0.0, $1605 = 0.0, $16050 = 0.0, $16051 = 0.0, $16052 = 0.0, $16053 = 0.0, $16054 = 0.0, $16055 = 0.0, $16056 = 0.0, $16057 = 0.0, $16058 = 0.0, $16059 = 0.0, $1606 = 0.0, $16060 = 0.0, $16061 = 0.0, $16062 = 0.0;
 var $16063 = 0.0, $16064 = 0.0, $16065 = 0, $16066 = 0, $16067 = 0.0, $16068 = 0.0, $16069 = 0.0, $1607 = 0.0, $16070 = 0.0, $16071 = 0.0, $16072 = 0.0, $16073 = 0.0, $16074 = 0, $16075 = 0.0, $16076 = 0, $16077 = 0.0, $16078 = 0.0, $16079 = 0.0, $1608 = 0.0, $16080 = 0.0;
 var $16081 = 0.0, $16082 = 0.0, $16083 = 0.0, $16084 = 0.0, $16085 = 0.0, $16086 = 0.0, $16087 = 0.0, $16088 = 0.0, $16089 = 0.0, $1609 = 0.0, $16090 = 0.0, $16091 = 0.0, $16092 = 0.0, $16093 = 0.0, $16094 = 0.0, $16095 = 0.0, $16096 = 0.0, $16097 = 0.0, $16098 = 0.0, $16099 = 0.0;
 var $161 = 0, $1610 = 0.0, $16100 = 0.0, $16101 = 0.0, $16102 = 0.0, $16103 = 0.0, $16104 = 0.0, $16105 = 0.0, $16106 = 0.0, $16107 = 0.0, $16108 = 0.0, $16109 = 0.0, $1611 = 0.0, $16110 = 0.0, $16111 = 0.0, $16112 = 0.0, $16113 = 0.0, $16114 = 0.0, $16115 = 0.0, $16116 = 0.0;
 var $16117 = 0.0, $16118 = 0.0, $16119 = 0.0, $1612 = 0.0, $16120 = 0.0, $16121 = 0.0, $16122 = 0.0, $16123 = 0.0, $16124 = 0.0, $16125 = 0.0, $16126 = 0.0, $16127 = 0.0, $16128 = 0.0, $16129 = 0.0, $1613 = 0.0, $16130 = 0.0, $16131 = 0.0, $16132 = 0.0, $16133 = 0.0, $16134 = 0.0;
 var $16135 = 0.0, $16136 = 0.0, $16137 = 0.0, $16138 = 0.0, $16139 = 0.0, $1614 = 0.0, $16140 = 0.0, $16141 = 0.0, $16142 = 0.0, $16143 = 0.0, $16144 = 0.0, $16145 = 0.0, $16146 = 0.0, $16147 = 0.0, $16148 = 0.0, $16149 = 0, $1615 = 0.0, $16150 = 0.0, $16151 = 0.0, $16152 = 0.0;
 var $16153 = 0.0, $16154 = 0.0, $16155 = 0.0, $16156 = 0.0, $16157 = 0.0, $16158 = 0.0, $16159 = 0, $1616 = 0.0, $16160 = 0.0, $16161 = 0, $16162 = 0.0, $16163 = 0, $16164 = 0.0, $16165 = 0, $16166 = 0.0, $16167 = 0.0, $16168 = 0.0, $16169 = 0.0, $1617 = 0.0, $16170 = 0.0;
 var $16171 = 0.0, $16172 = 0.0, $16173 = 0.0, $16174 = 0.0, $16175 = 0.0, $16176 = 0.0, $16177 = 0.0, $16178 = 0.0, $16179 = 0.0, $1618 = 0.0, $16180 = 0.0, $16181 = 0.0, $16182 = 0.0, $16183 = 0.0, $16184 = 0.0, $16185 = 0.0, $16186 = 0.0, $16187 = 0.0, $16188 = 0.0, $16189 = 0.0;
 var $1619 = 0.0, $16190 = 0.0, $16191 = 0.0, $16192 = 0.0, $16193 = 0.0, $16194 = 0.0, $16195 = 0.0, $16196 = 0.0, $16197 = 0.0, $16198 = 0.0, $16199 = 0.0, $162 = 0, $1620 = 0.0, $16200 = 0.0, $16201 = 0.0, $16202 = 0, $16203 = 0, $16204 = 0.0, $16205 = 0.0, $16206 = 0.0;
 var $16207 = 0.0, $16208 = 0.0, $16209 = 0.0, $1621 = 0, $16210 = 0.0, $16211 = 0.0, $16212 = 0.0, $16213 = 0.0, $16214 = 0.0, $16215 = 0.0, $16216 = 0.0, $16217 = 0.0, $16218 = 0.0, $16219 = 0.0, $1622 = 0.0, $16220 = 0.0, $16221 = 0.0, $16222 = 0.0, $16223 = 0.0, $16224 = 0.0;
 var $16225 = 0.0, $16226 = 0.0, $16227 = 0.0, $16228 = 0.0, $16229 = 0.0, $1623 = 0.0, $16230 = 0.0, $16231 = 0.0, $16232 = 0.0, $16233 = 0.0, $16234 = 0.0, $16235 = 0.0, $16236 = 0.0, $16237 = 0.0, $16238 = 0.0, $16239 = 0.0, $1624 = 0.0, $16240 = 0.0, $16241 = 0, $16242 = 0;
 var $16243 = 0.0, $16244 = 0.0, $16245 = 0.0, $16246 = 0.0, $16247 = 0.0, $16248 = 0.0, $16249 = 0.0, $1625 = 0.0, $16250 = 0, $16251 = 0.0, $16252 = 0, $16253 = 0.0, $16254 = 0.0, $16255 = 0.0, $16256 = 0.0, $16257 = 0.0, $16258 = 0.0, $16259 = 0.0, $1626 = 0.0, $16260 = 0.0;
 var $16261 = 0.0, $16262 = 0.0, $16263 = 0.0, $16264 = 0.0, $16265 = 0.0, $16266 = 0.0, $16267 = 0.0, $16268 = 0.0, $16269 = 0.0, $1627 = 0.0, $16270 = 0.0, $16271 = 0.0, $16272 = 0.0, $16273 = 0.0, $16274 = 0.0, $16275 = 0.0, $16276 = 0.0, $16277 = 0.0, $16278 = 0.0, $16279 = 0.0;
 var $1628 = 0.0, $16280 = 0.0, $16281 = 0.0, $16282 = 0.0, $16283 = 0.0, $16284 = 0.0, $16285 = 0.0, $16286 = 0.0, $16287 = 0.0, $16288 = 0.0, $16289 = 0.0, $1629 = 0.0, $16290 = 0.0, $16291 = 0.0, $16292 = 0.0, $16293 = 0.0, $16294 = 0.0, $16295 = 0.0, $16296 = 0.0, $16297 = 0.0;
 var $16298 = 0.0, $16299 = 0.0, $163 = 0, $1630 = 0.0, $16300 = 0.0, $16301 = 0.0, $16302 = 0.0, $16303 = 0.0, $16304 = 0.0, $16305 = 0.0, $16306 = 0.0, $16307 = 0.0, $16308 = 0.0, $16309 = 0.0, $1631 = 0.0, $16310 = 0.0, $16311 = 0.0, $16312 = 0.0, $16313 = 0.0, $16314 = 0.0;
 var $16315 = 0.0, $16316 = 0.0, $16317 = 0.0, $16318 = 0.0, $16319 = 0.0, $1632 = 0.0, $16320 = 0.0, $16321 = 0.0, $16322 = 0.0, $16323 = 0.0, $16324 = 0.0, $16325 = 0, $16326 = 0.0, $16327 = 0.0, $16328 = 0.0, $16329 = 0.0, $1633 = 0.0, $16330 = 0.0, $16331 = 0.0, $16332 = 0.0;
 var $16333 = 0.0, $16334 = 0.0, $16335 = 0, $16336 = 0.0, $16337 = 0, $16338 = 0.0, $16339 = 0, $1634 = 0.0, $16340 = 0.0, $16341 = 0, $16342 = 0.0, $16343 = 0.0, $16344 = 0.0, $16345 = 0.0, $16346 = 0.0, $16347 = 0.0, $16348 = 0.0, $16349 = 0.0, $1635 = 0.0, $16350 = 0.0;
 var $16351 = 0.0, $16352 = 0.0, $16353 = 0.0, $16354 = 0.0, $16355 = 0.0, $16356 = 0.0, $16357 = 0, $16358 = 0.0, $16359 = 0.0, $1636 = 0.0, $16360 = 0.0, $16361 = 0.0, $16362 = 0.0, $16363 = 0.0, $16364 = 0.0, $16365 = 0.0, $16366 = 0.0, $16367 = 0, $16368 = 0.0, $16369 = 0;
 var $1637 = 0.0, $16370 = 0.0, $16371 = 0, $16372 = 0.0, $16373 = 0.0, $16374 = 0.0, $16375 = 0.0, $16376 = 0.0, $16377 = 0.0, $16378 = 0.0, $16379 = 0.0, $1638 = 0.0, $16380 = 0.0, $16381 = 0.0, $16382 = 0.0, $16383 = 0.0, $16384 = 0.0, $16385 = 0.0, $16386 = 0.0, $16387 = 0.0;
 var $16388 = 0.0, $16389 = 0.0, $1639 = 0.0, $16390 = 0.0, $16391 = 0.0, $16392 = 0, $16393 = 0.0, $16394 = 0.0, $16395 = 0, $16396 = 0.0, $16397 = 0.0, $16398 = 0.0, $16399 = 0.0, $164 = 0, $1640 = 0.0, $16400 = 0.0, $16401 = 0.0, $16402 = 0.0, $16403 = 0.0, $16404 = 0.0;
 var $16405 = 0.0, $16406 = 0.0, $16407 = 0.0, $16408 = 0.0, $16409 = 0.0, $1641 = 0, $16410 = 0.0, $16411 = 0.0, $16412 = 0.0, $16413 = 0.0, $16414 = 0.0, $16415 = 0.0, $16416 = 0.0, $16417 = 0.0, $16418 = 0.0, $16419 = 0.0, $1642 = 0.0, $16420 = 0.0, $16421 = 0.0, $16422 = 0.0;
 var $16423 = 0.0, $16424 = 0.0, $16425 = 0.0, $16426 = 0, $16427 = 0.0, $16428 = 0.0, $16429 = 0.0, $1643 = 0.0, $16430 = 0.0, $16431 = 0.0, $16432 = 0.0, $16433 = 0.0, $16434 = 0.0, $16435 = 0.0, $16436 = 0.0, $16437 = 0.0, $16438 = 0.0, $16439 = 0.0, $1644 = 0.0, $16440 = 0.0;
 var $16441 = 0.0, $16442 = 0.0, $16443 = 0.0, $16444 = 0.0, $16445 = 0.0, $16446 = 0, $16447 = 0.0, $16448 = 0.0, $16449 = 0.0, $1645 = 0.0, $16450 = 0.0, $16451 = 0.0, $16452 = 0.0, $16453 = 0.0, $16454 = 0.0, $16455 = 0.0, $16456 = 0.0, $16457 = 0.0, $16458 = 0.0, $16459 = 0.0;
 var $1646 = 0.0, $16460 = 0.0, $16461 = 0.0, $16462 = 0.0, $16463 = 0.0, $16464 = 0.0, $16465 = 0.0, $16466 = 0.0, $16467 = 0.0, $16468 = 0.0, $16469 = 0.0, $1647 = 0.0, $16470 = 0.0, $16471 = 0.0, $16472 = 0.0, $16473 = 0.0, $16474 = 0.0, $16475 = 0.0, $16476 = 0.0, $16477 = 0.0;
 var $16478 = 0.0, $16479 = 0.0, $1648 = 0.0, $16480 = 0.0, $16481 = 0, $16482 = 0.0, $16483 = 0.0, $16484 = 0.0, $16485 = 0.0, $16486 = 0.0, $16487 = 0.0, $16488 = 0.0, $16489 = 0.0, $1649 = 0.0, $16490 = 0.0, $16491 = 0.0, $16492 = 0.0, $16493 = 0.0, $16494 = 0.0, $16495 = 0.0;
 var $16496 = 0.0, $16497 = 0.0, $16498 = 0.0, $16499 = 0.0, $165 = 0, $1650 = 0.0, $16500 = 0.0, $16501 = 0, $16502 = 0.0, $16503 = 0.0, $16504 = 0.0, $16505 = 0.0, $16506 = 0.0, $16507 = 0.0, $16508 = 0.0, $16509 = 0.0, $1651 = 0, $16510 = 0.0, $16511 = 0.0, $16512 = 0.0;
 var $16513 = 0.0, $16514 = 0.0, $16515 = 0.0, $16516 = 0.0, $16517 = 0.0, $16518 = 0.0, $16519 = 0, $1652 = 0.0, $16520 = 0.0, $16521 = 0.0, $16522 = 0.0, $16523 = 0, $16524 = 0.0, $16525 = 0, $16526 = 0.0, $16527 = 0, $16528 = 0.0, $16529 = 0.0, $1653 = 0.0, $16530 = 0.0;
 var $16531 = 0.0, $16532 = 0.0, $16533 = 0.0, $16534 = 0.0, $16535 = 0.0, $16536 = 0.0, $16537 = 0.0, $16538 = 0.0, $16539 = 0.0, $1654 = 0.0, $16540 = 0.0, $16541 = 0.0, $16542 = 0.0, $16543 = 0.0, $16544 = 0.0, $16545 = 0.0, $16546 = 0.0, $16547 = 0.0, $16548 = 0.0, $16549 = 0.0;
 var $1655 = 0, $16550 = 0.0, $16551 = 0.0, $16552 = 0.0, $16553 = 0.0, $16554 = 0.0, $16555 = 0.0, $16556 = 0.0, $16557 = 0.0, $16558 = 0.0, $16559 = 0.0, $1656 = 0.0, $16560 = 0.0, $16561 = 0.0, $16562 = 0.0, $16563 = 0.0, $16564 = 0.0, $16565 = 0.0, $16566 = 0.0, $16567 = 0.0;
 var $16568 = 0.0, $16569 = 0.0, $1657 = 0.0, $16570 = 0.0, $16571 = 0.0, $16572 = 0.0, $16573 = 0.0, $16574 = 0.0, $16575 = 0.0, $16576 = 0.0, $16577 = 0.0, $16578 = 0.0, $16579 = 0, $1658 = 0.0, $16580 = 0.0, $16581 = 0.0, $16582 = 0.0, $16583 = 0.0, $16584 = 0, $16585 = 0.0;
 var $16586 = 0, $16587 = 0.0, $16588 = 0, $16589 = 0.0, $1659 = 0.0, $16590 = 0, $16591 = 0.0, $16592 = 0, $16593 = 0.0, $16594 = 0, $16595 = 0, $16596 = 0, $16597 = 0, $16598 = 0, $16599 = 0, $166 = 0, $1660 = 0.0, $16600 = 0.0, $16601 = 0.0, $16602 = 0.0;
 var $16603 = 0.0, $16604 = 0, $16605 = 0, $16606 = 0.0, $16607 = 0, $16608 = 0.0, $16609 = 0.0, $1661 = 0.0, $16610 = 0, $16611 = 0.0, $16612 = 0.0, $16613 = 0, $16614 = 0, $16615 = 0, $16616 = 0, $16617 = 0, $16618 = 0, $16619 = 0, $1662 = 0.0, $16620 = 0.0;
 var $16621 = 0, $16622 = 0.0, $16623 = 0, $16624 = 0.0, $16625 = 0.0, $16626 = 0.0, $16627 = 0.0, $16628 = 0, $16629 = 0, $1663 = 0.0, $16630 = 0, $16631 = 0, $16632 = 0, $16633 = 0, $16634 = 0.0, $16635 = 0, $16636 = 0.0, $16637 = 0.0, $16638 = 0.0, $16639 = 0;
 var $1664 = 0.0, $16640 = 0.0, $16641 = 0, $16642 = 0.0, $16643 = 0.0, $16644 = 0.0, $16645 = 0, $16646 = 0, $16647 = 0, $16648 = 0.0, $16649 = 0.0, $1665 = 0.0, $16650 = 0.0, $16651 = 0.0, $16652 = 0.0, $16653 = 0.0, $16654 = 0.0, $16655 = 0.0, $16656 = 0.0, $16657 = 0.0;
 var $16658 = 0.0, $16659 = 0, $1666 = 0.0, $16660 = 0.0, $16661 = 0.0, $16662 = 0.0, $16663 = 0, $16664 = 0.0, $16665 = 0, $16666 = 0.0, $16667 = 0, $16668 = 0.0, $16669 = 0, $1667 = 0.0, $16670 = 0.0, $16671 = 0, $16672 = 0.0, $16673 = 0.0, $16674 = 0.0, $16675 = 0.0;
 var $16676 = 0.0, $16677 = 0.0, $16678 = 0.0, $16679 = 0.0, $1668 = 0.0, $16680 = 0.0, $16681 = 0.0, $16682 = 0.0, $16683 = 0.0, $16684 = 0.0, $16685 = 0.0, $16686 = 0.0, $16687 = 0.0, $16688 = 0.0, $16689 = 0.0, $1669 = 0.0, $16690 = 0.0, $16691 = 0.0, $16692 = 0.0, $16693 = 0.0;
 var $16694 = 0.0, $16695 = 0.0, $16696 = 0.0, $16697 = 0.0, $16698 = 0.0, $16699 = 0, $167 = 0, $1670 = 0.0, $16700 = 0, $16701 = 0, $16702 = 0, $16703 = 0, $16704 = 0, $16705 = 0.0, $16706 = 0.0, $16707 = 0.0, $16708 = 0.0, $16709 = 0, $1671 = 0.0, $16710 = 0;
 var $16711 = 0.0, $16712 = 0, $16713 = 0.0, $16714 = 0.0, $16715 = 0, $16716 = 0.0, $16717 = 0.0, $16718 = 0, $16719 = 0, $1672 = 0.0, $16720 = 0, $16721 = 0, $16722 = 0, $16723 = 0, $16724 = 0, $16725 = 0.0, $16726 = 0, $16727 = 0.0, $16728 = 0, $16729 = 0.0;
 var $1673 = 0.0, $16730 = 0.0, $16731 = 0.0, $16732 = 0.0, $16733 = 0, $16734 = 0, $16735 = 0, $16736 = 0, $16737 = 0, $16738 = 0, $16739 = 0.0, $1674 = 0.0, $16740 = 0, $16741 = 0.0, $16742 = 0.0, $16743 = 0.0, $16744 = 0, $16745 = 0.0, $16746 = 0, $16747 = 0.0;
 var $16748 = 0.0, $16749 = 0.0, $1675 = 0.0, $16750 = 0, $16751 = 0, $16752 = 0, $16753 = 0.0, $16754 = 0.0, $16755 = 0.0, $16756 = 0.0, $16757 = 0.0, $16758 = 0.0, $16759 = 0.0, $1676 = 0.0, $16760 = 0.0, $16761 = 0.0, $16762 = 0, $16763 = 0.0, $16764 = 0.0, $16765 = 0.0;
 var $16766 = 0, $16767 = 0.0, $16768 = 0, $16769 = 0.0, $1677 = 0.0, $16770 = 0, $16771 = 0.0, $16772 = 0, $16773 = 0.0, $16774 = 0, $16775 = 0.0, $16776 = 0.0, $16777 = 0.0, $16778 = 0.0, $16779 = 0.0, $1678 = 0.0, $16780 = 0.0, $16781 = 0.0, $16782 = 0.0, $16783 = 0.0;
 var $16784 = 0.0, $16785 = 0.0, $16786 = 0.0, $16787 = 0.0, $16788 = 0.0, $16789 = 0.0, $1679 = 0.0, $16790 = 0.0, $16791 = 0.0, $16792 = 0.0, $16793 = 0.0, $16794 = 0.0, $16795 = 0.0, $16796 = 0.0, $16797 = 0.0, $16798 = 0.0, $16799 = 0.0, $168 = 0, $1680 = 0.0, $16800 = 0.0;
 var $16801 = 0.0, $16802 = 0.0, $16803 = 0, $16804 = 0, $16805 = 0, $16806 = 0, $16807 = 0, $16808 = 0, $16809 = 0.0, $1681 = 0.0, $16810 = 0.0, $16811 = 0.0, $16812 = 0.0, $16813 = 0, $16814 = 0, $16815 = 0.0, $16816 = 0, $16817 = 0.0, $16818 = 0.0, $16819 = 0;
 var $1682 = 0.0, $16820 = 0.0, $16821 = 0.0, $16822 = 0, $16823 = 0, $16824 = 0, $16825 = 0, $16826 = 0, $16827 = 0, $16828 = 0, $16829 = 0.0, $1683 = 0.0, $16830 = 0, $16831 = 0.0, $16832 = 0, $16833 = 0.0, $16834 = 0.0, $16835 = 0.0, $16836 = 0.0, $16837 = 0;
 var $16838 = 0, $16839 = 0, $1684 = 0.0, $16840 = 0, $16841 = 0, $16842 = 0, $16843 = 0.0, $16844 = 0, $16845 = 0.0, $16846 = 0.0, $16847 = 0.0, $16848 = 0, $16849 = 0.0, $1685 = 0.0, $16850 = 0, $16851 = 0.0, $16852 = 0.0, $16853 = 0.0, $16854 = 0, $16855 = 0;
 var $16856 = 0, $16857 = 0.0, $16858 = 0.0, $16859 = 0.0, $1686 = 0.0, $16860 = 0.0, $16861 = 0.0, $16862 = 0.0, $16863 = 0.0, $16864 = 0.0, $16865 = 0.0, $16866 = 0.0, $16867 = 0, $16868 = 0.0, $16869 = 0.0, $1687 = 0.0, $16870 = 0.0, $16871 = 0, $16872 = 0.0, $16873 = 0;
 var $16874 = 0.0, $16875 = 0, $16876 = 0.0, $16877 = 0, $16878 = 0.0, $16879 = 0, $1688 = 0.0, $16880 = 0.0, $16881 = 0.0, $16882 = 0.0, $16883 = 0.0, $16884 = 0.0, $16885 = 0.0, $16886 = 0.0, $16887 = 0.0, $16888 = 0.0, $16889 = 0.0, $1689 = 0.0, $16890 = 0.0, $16891 = 0.0;
 var $16892 = 0.0, $16893 = 0.0, $16894 = 0.0, $16895 = 0.0, $16896 = 0.0, $16897 = 0.0, $16898 = 0.0, $16899 = 0.0, $169 = 0, $1690 = 0.0, $16900 = 0.0, $16901 = 0.0, $16902 = 0.0, $16903 = 0.0, $16904 = 0.0, $16905 = 0.0, $16906 = 0.0, $16907 = 0.0, $16908 = 0, $16909 = 0;
 var $1691 = 0.0, $16910 = 0, $16911 = 0, $16912 = 0, $16913 = 0, $16914 = 0.0, $16915 = 0.0, $16916 = 0.0, $16917 = 0.0, $16918 = 0, $16919 = 0, $1692 = 0.0, $16920 = 0.0, $16921 = 0, $16922 = 0.0, $16923 = 0.0, $16924 = 0, $16925 = 0.0, $16926 = 0.0, $16927 = 0;
 var $16928 = 0, $16929 = 0, $1693 = 0.0, $16930 = 0, $16931 = 0, $16932 = 0, $16933 = 0, $16934 = 0.0, $16935 = 0, $16936 = 0.0, $16937 = 0, $16938 = 0.0, $16939 = 0.0, $1694 = 0.0, $16940 = 0.0, $16941 = 0.0, $16942 = 0, $16943 = 0, $16944 = 0, $16945 = 0;
 var $16946 = 0, $16947 = 0, $16948 = 0.0, $16949 = 0, $1695 = 0.0, $16950 = 0.0, $16951 = 0.0, $16952 = 0.0, $16953 = 0, $16954 = 0.0, $16955 = 0, $16956 = 0.0, $16957 = 0.0, $16958 = 0.0, $16959 = 0, $1696 = 0.0, $16960 = 0, $16961 = 0, $16962 = 0.0, $16963 = 0.0;
 var $16964 = 0.0, $16965 = 0.0, $16966 = 0.0, $16967 = 0.0, $16968 = 0.0, $16969 = 0.0, $1697 = 0.0, $16970 = 0.0, $16971 = 0.0, $16972 = 0.0, $16973 = 0, $16974 = 0.0, $16975 = 0.0, $16976 = 0.0, $16977 = 0, $16978 = 0.0, $16979 = 0, $1698 = 0.0, $16980 = 0.0, $16981 = 0;
 var $16982 = 0.0, $16983 = 0, $16984 = 0.0, $16985 = 0, $16986 = 0.0, $16987 = 0.0, $16988 = 0.0, $16989 = 0.0, $1699 = 0.0, $16990 = 0.0, $16991 = 0.0, $16992 = 0.0, $16993 = 0.0, $16994 = 0.0, $16995 = 0.0, $16996 = 0.0, $16997 = 0.0, $16998 = 0.0, $16999 = 0.0, $17 = 0;
 var $170 = 0, $1700 = 0.0, $17000 = 0.0, $17001 = 0.0, $17002 = 0.0, $17003 = 0.0, $17004 = 0.0, $17005 = 0.0, $17006 = 0.0, $17007 = 0.0, $17008 = 0.0, $17009 = 0.0, $1701 = 0.0, $17010 = 0.0, $17011 = 0.0, $17012 = 0.0, $17013 = 0, $17014 = 0, $17015 = 0, $17016 = 0;
 var $17017 = 0, $17018 = 0, $17019 = 0.0, $1702 = 0.0, $17020 = 0.0, $17021 = 0.0, $17022 = 0.0, $17023 = 0, $17024 = 0, $17025 = 0.0, $17026 = 0, $17027 = 0.0, $17028 = 0.0, $17029 = 0, $1703 = 0.0, $17030 = 0.0, $17031 = 0.0, $17032 = 0, $17033 = 0, $17034 = 0;
 var $17035 = 0, $17036 = 0, $17037 = 0, $17038 = 0, $17039 = 0.0, $1704 = 0.0, $17040 = 0, $17041 = 0.0, $17042 = 0, $17043 = 0.0, $17044 = 0.0, $17045 = 0.0, $17046 = 0.0, $17047 = 0, $17048 = 0, $17049 = 0, $1705 = 0.0, $17050 = 0, $17051 = 0, $17052 = 0;
 var $17053 = 0.0, $17054 = 0, $17055 = 0.0, $17056 = 0.0, $17057 = 0.0, $17058 = 0, $17059 = 0.0, $1706 = 0.0, $17060 = 0, $17061 = 0.0, $17062 = 0.0, $17063 = 0.0, $17064 = 0, $17065 = 0, $17066 = 0, $17067 = 0.0, $17068 = 0.0, $17069 = 0.0, $1707 = 0, $17070 = 0.0;
 var $17071 = 0.0, $17072 = 0.0, $17073 = 0.0, $17074 = 0.0, $17075 = 0.0, $17076 = 0.0, $17077 = 0.0, $17078 = 0.0, $17079 = 0, $1708 = 0.0, $17080 = 0, $17081 = 0.0, $17082 = 0.0, $17083 = 0.0, $17084 = 0.0, $17085 = 0, $17086 = 0.0, $17087 = 0.0, $17088 = 0.0, $17089 = 0.0;
 var $1709 = 0.0, $17090 = 0.0, $17091 = 0.0, $17092 = 0.0, $17093 = 0.0, $17094 = 0.0, $17095 = 0.0, $17096 = 0.0, $17097 = 0.0, $17098 = 0.0, $17099 = 0.0, $171 = 0, $1710 = 0.0, $17100 = 0, $17101 = 0.0, $17102 = 0.0, $17103 = 0.0, $17104 = 0.0, $17105 = 0.0, $17106 = 0;
 var $17107 = 0.0, $17108 = 0.0, $17109 = 0.0, $1711 = 0.0, $17110 = 0.0, $17111 = 0.0, $17112 = 0.0, $17113 = 0.0, $17114 = 0.0, $17115 = 0.0, $17116 = 0.0, $17117 = 0.0, $17118 = 0.0, $17119 = 0.0, $1712 = 0, $17120 = 0.0, $17121 = 0.0, $17122 = 0.0, $17123 = 0, $17124 = 0.0;
 var $17125 = 0, $17126 = 0.0, $17127 = 0.0, $17128 = 0.0, $17129 = 0.0, $1713 = 0.0, $17130 = 0.0, $17131 = 0.0, $17132 = 0.0, $17133 = 0.0, $17134 = 0.0, $17135 = 0.0, $17136 = 0.0, $17137 = 0.0, $17138 = 0.0, $17139 = 0.0, $1714 = 0, $17140 = 0.0, $17141 = 0.0, $17142 = 0.0;
 var $17143 = 0.0, $17144 = 0.0, $17145 = 0.0, $17146 = 0.0, $17147 = 0.0, $17148 = 0.0, $17149 = 0.0, $1715 = 0.0, $17150 = 0.0, $17151 = 0.0, $17152 = 0.0, $17153 = 0.0, $17154 = 0.0, $17155 = 0.0, $17156 = 0, $17157 = 0.0, $17158 = 0.0, $17159 = 0.0, $1716 = 0, $17160 = 0.0;
 var $17161 = 0, $17162 = 0.0, $17163 = 0, $17164 = 0.0, $17165 = 0, $17166 = 0.0, $17167 = 0, $17168 = 0.0, $17169 = 0.0, $1717 = 0.0, $17170 = 0.0, $17171 = 0.0, $17172 = 0.0, $17173 = 0.0, $17174 = 0.0, $17175 = 0.0, $17176 = 0.0, $17177 = 0.0, $17178 = 0.0, $17179 = 0.0;
 var $1718 = 0, $17180 = 0.0, $17181 = 0.0, $17182 = 0.0, $17183 = 0.0, $17184 = 0.0, $17185 = 0.0, $17186 = 0.0, $17187 = 0.0, $17188 = 0.0, $17189 = 0.0, $1719 = 0.0, $17190 = 0.0, $17191 = 0.0, $17192 = 0.0, $17193 = 0.0, $17194 = 0.0, $17195 = 0.0, $17196 = 0.0, $17197 = 0.0;
 var $17198 = 0.0, $17199 = 0.0, $172 = 0, $1720 = 0, $17200 = 0.0, $17201 = 0.0, $17202 = 0.0, $17203 = 0.0, $17204 = 0.0, $17205 = 0.0, $17206 = 0.0, $17207 = 0.0, $17208 = 0.0, $17209 = 0.0, $1721 = 0.0, $17210 = 0.0, $17211 = 0.0, $17212 = 0.0, $17213 = 0.0, $17214 = 0.0;
 var $17215 = 0.0, $17216 = 0.0, $17217 = 0.0, $17218 = 0.0, $17219 = 0.0, $1722 = 0, $17220 = 0, $17221 = 0, $17222 = 0.0, $17223 = 0.0, $17224 = 0.0, $17225 = 0.0, $17226 = 0.0, $17227 = 0.0, $17228 = 0.0, $17229 = 0.0, $1723 = 0, $17230 = 0.0, $17231 = 0.0, $17232 = 0.0;
 var $17233 = 0.0, $17234 = 0.0, $17235 = 0.0, $17236 = 0.0, $17237 = 0.0, $17238 = 0.0, $17239 = 0.0, $1724 = 0, $17240 = 0.0, $17241 = 0.0, $17242 = 0.0, $17243 = 0.0, $17244 = 0.0, $17245 = 0, $17246 = 0, $17247 = 0.0, $17248 = 0.0, $17249 = 0.0, $1725 = 0, $17250 = 0.0;
 var $17251 = 0.0, $17252 = 0.0, $17253 = 0.0, $17254 = 0, $17255 = 0.0, $17256 = 0, $17257 = 0.0, $17258 = 0.0, $17259 = 0.0, $1726 = 0, $17260 = 0.0, $17261 = 0.0, $17262 = 0.0, $17263 = 0.0, $17264 = 0.0, $17265 = 0.0, $17266 = 0.0, $17267 = 0.0, $17268 = 0.0, $17269 = 0.0;
 var $1727 = 0, $17270 = 0.0, $17271 = 0.0, $17272 = 0.0, $17273 = 0.0, $17274 = 0.0, $17275 = 0.0, $17276 = 0.0, $17277 = 0.0, $17278 = 0.0, $17279 = 0.0, $1728 = 0.0, $17280 = 0.0, $17281 = 0.0, $17282 = 0.0, $17283 = 0.0, $17284 = 0.0, $17285 = 0.0, $17286 = 0.0, $17287 = 0.0;
 var $17288 = 0.0, $17289 = 0.0, $1729 = 0.0, $17290 = 0.0, $17291 = 0.0, $17292 = 0.0, $17293 = 0.0, $17294 = 0.0, $17295 = 0.0, $17296 = 0.0, $17297 = 0.0, $17298 = 0.0, $17299 = 0.0, $173 = 0, $1730 = 0.0, $17300 = 0.0, $17301 = 0.0, $17302 = 0.0, $17303 = 0.0, $17304 = 0.0;
 var $17305 = 0.0, $17306 = 0.0, $17307 = 0.0, $17308 = 0.0, $17309 = 0.0, $1731 = 0.0, $17310 = 0.0, $17311 = 0.0, $17312 = 0.0, $17313 = 0.0, $17314 = 0.0, $17315 = 0.0, $17316 = 0.0, $17317 = 0.0, $17318 = 0.0, $17319 = 0.0, $1732 = 0, $17320 = 0.0, $17321 = 0.0, $17322 = 0.0;
 var $17323 = 0.0, $17324 = 0.0, $17325 = 0.0, $17326 = 0.0, $17327 = 0.0, $17328 = 0.0, $17329 = 0, $1733 = 0, $17330 = 0.0, $17331 = 0.0, $17332 = 0.0, $17333 = 0.0, $17334 = 0.0, $17335 = 0.0, $17336 = 0.0, $17337 = 0.0, $17338 = 0.0, $17339 = 0, $1734 = 0.0, $17340 = 0.0;
 var $17341 = 0, $17342 = 0.0, $17343 = 0, $17344 = 0.0, $17345 = 0, $17346 = 0.0, $17347 = 0.0, $17348 = 0.0, $17349 = 0.0, $1735 = 0, $17350 = 0.0, $17351 = 0.0, $17352 = 0.0, $17353 = 0.0, $17354 = 0.0, $17355 = 0.0, $17356 = 0.0, $17357 = 0.0, $17358 = 0.0, $17359 = 0.0;
 var $1736 = 0.0, $17360 = 0.0, $17361 = 0.0, $17362 = 0.0, $17363 = 0.0, $17364 = 0.0, $17365 = 0.0, $17366 = 0.0, $17367 = 0.0, $17368 = 0.0, $17369 = 0.0, $1737 = 0.0, $17370 = 0.0, $17371 = 0.0, $17372 = 0.0, $17373 = 0.0, $17374 = 0.0, $17375 = 0.0, $17376 = 0.0, $17377 = 0.0;
 var $17378 = 0.0, $17379 = 0.0, $1738 = 0, $17380 = 0.0, $17381 = 0.0, $17382 = 0, $17383 = 0, $17384 = 0.0, $17385 = 0.0, $17386 = 0.0, $17387 = 0.0, $17388 = 0.0, $17389 = 0.0, $1739 = 0.0, $17390 = 0.0, $17391 = 0.0, $17392 = 0.0, $17393 = 0.0, $17394 = 0.0, $17395 = 0.0;
 var $17396 = 0.0, $17397 = 0.0, $17398 = 0.0, $17399 = 0.0, $174 = 0, $1740 = 0.0, $17400 = 0.0, $17401 = 0.0, $17402 = 0.0, $17403 = 0.0, $17404 = 0.0, $17405 = 0.0, $17406 = 0.0, $17407 = 0.0, $17408 = 0.0, $17409 = 0.0, $1741 = 0, $17410 = 0.0, $17411 = 0.0, $17412 = 0.0;
 var $17413 = 0.0, $17414 = 0.0, $17415 = 0.0, $17416 = 0, $17417 = 0, $17418 = 0.0, $17419 = 0.0, $1742 = 0, $17420 = 0.0, $17421 = 0.0, $17422 = 0.0, $17423 = 0.0, $17424 = 0.0, $17425 = 0, $17426 = 0.0, $17427 = 0, $17428 = 0.0, $17429 = 0.0, $1743 = 0, $17430 = 0.0;
 var $17431 = 0.0, $17432 = 0.0, $17433 = 0.0, $17434 = 0.0, $17435 = 0.0, $17436 = 0.0, $17437 = 0.0, $17438 = 0.0, $17439 = 0.0, $1744 = 0, $17440 = 0.0, $17441 = 0.0, $17442 = 0.0, $17443 = 0.0, $17444 = 0.0, $17445 = 0.0, $17446 = 0.0, $17447 = 0.0, $17448 = 0.0, $17449 = 0.0;
 var $1745 = 0, $17450 = 0.0, $17451 = 0.0, $17452 = 0.0, $17453 = 0.0, $17454 = 0.0, $17455 = 0.0, $17456 = 0.0, $17457 = 0.0, $17458 = 0.0, $17459 = 0.0, $1746 = 0, $17460 = 0.0, $17461 = 0.0, $17462 = 0.0, $17463 = 0.0, $17464 = 0.0, $17465 = 0.0, $17466 = 0.0, $17467 = 0.0;
 var $17468 = 0.0, $17469 = 0.0, $1747 = 0, $17470 = 0.0, $17471 = 0.0, $17472 = 0.0, $17473 = 0.0, $17474 = 0.0, $17475 = 0.0, $17476 = 0.0, $17477 = 0.0, $17478 = 0.0, $17479 = 0.0, $1748 = 0.0, $17480 = 0.0, $17481 = 0.0, $17482 = 0.0, $17483 = 0.0, $17484 = 0.0, $17485 = 0.0;
 var $17486 = 0.0, $17487 = 0.0, $17488 = 0.0, $17489 = 0.0, $1749 = 0, $17490 = 0.0, $17491 = 0.0, $17492 = 0.0, $17493 = 0.0, $17494 = 0.0, $17495 = 0.0, $17496 = 0.0, $17497 = 0.0, $17498 = 0.0, $17499 = 0.0, $175 = 0, $1750 = 0.0, $17500 = 0, $17501 = 0.0, $17502 = 0.0;
 var $17503 = 0.0, $17504 = 0.0, $17505 = 0.0, $17506 = 0.0, $17507 = 0.0, $17508 = 0.0, $17509 = 0.0, $1751 = 0, $17510 = 0, $17511 = 0.0, $17512 = 0, $17513 = 0.0, $17514 = 0, $17515 = 0.0, $17516 = 0, $17517 = 0.0, $17518 = 0.0, $17519 = 0.0, $1752 = 0.0, $17520 = 0.0;
 var $17521 = 0.0, $17522 = 0.0, $17523 = 0.0, $17524 = 0.0, $17525 = 0.0, $17526 = 0.0, $17527 = 0.0, $17528 = 0.0, $17529 = 0.0, $1753 = 0.0, $17530 = 0.0, $17531 = 0.0, $17532 = 0.0, $17533 = 0.0, $17534 = 0.0, $17535 = 0.0, $17536 = 0.0, $17537 = 0.0, $17538 = 0.0, $17539 = 0.0;
 var $1754 = 0.0, $17540 = 0.0, $17541 = 0.0, $17542 = 0.0, $17543 = 0.0, $17544 = 0, $17545 = 0, $17546 = 0.0, $17547 = 0.0, $17548 = 0.0, $17549 = 0.0, $1755 = 0.0, $17550 = 0.0, $17551 = 0.0, $17552 = 0.0, $17553 = 0.0, $17554 = 0.0, $17555 = 0.0, $17556 = 0.0, $17557 = 0.0;
 var $17558 = 0.0, $17559 = 0.0, $1756 = 0, $17560 = 0.0, $17561 = 0.0, $17562 = 0.0, $17563 = 0.0, $17564 = 0.0, $17565 = 0.0, $17566 = 0.0, $17567 = 0.0, $17568 = 0.0, $17569 = 0.0, $1757 = 0, $17570 = 0.0, $17571 = 0.0, $17572 = 0.0, $17573 = 0.0, $17574 = 0.0, $17575 = 0.0;
 var $17576 = 0.0, $17577 = 0.0, $17578 = 0.0, $17579 = 0.0, $1758 = 0, $17580 = 0.0, $17581 = 0, $17582 = 0, $17583 = 0.0, $17584 = 0.0, $17585 = 0.0, $17586 = 0.0, $17587 = 0.0, $17588 = 0.0, $17589 = 0.0, $1759 = 0, $17590 = 0, $17591 = 0.0, $17592 = 0, $17593 = 0.0;
 var $17594 = 0.0, $17595 = 0.0, $17596 = 0.0, $17597 = 0.0, $17598 = 0.0, $17599 = 0.0, $176 = 0, $1760 = 0, $17600 = 0.0, $17601 = 0.0, $17602 = 0.0, $17603 = 0.0, $17604 = 0.0, $17605 = 0.0, $17606 = 0.0, $17607 = 0.0, $17608 = 0.0, $17609 = 0.0, $1761 = 0, $17610 = 0.0;
 var $17611 = 0.0, $17612 = 0.0, $17613 = 0.0, $17614 = 0.0, $17615 = 0.0, $17616 = 0.0, $17617 = 0.0, $17618 = 0.0, $17619 = 0.0, $1762 = 0.0, $17620 = 0.0, $17621 = 0.0, $17622 = 0.0, $17623 = 0.0, $17624 = 0.0, $17625 = 0.0, $17626 = 0.0, $17627 = 0.0, $17628 = 0.0, $17629 = 0.0;
 var $1763 = 0, $17630 = 0.0, $17631 = 0.0, $17632 = 0.0, $17633 = 0.0, $17634 = 0.0, $17635 = 0.0, $17636 = 0.0, $17637 = 0.0, $17638 = 0.0, $17639 = 0.0, $1764 = 0.0, $17640 = 0.0, $17641 = 0.0, $17642 = 0.0, $17643 = 0.0, $17644 = 0.0, $17645 = 0.0, $17646 = 0.0, $17647 = 0.0;
 var $17648 = 0.0, $17649 = 0.0, $1765 = 0.0, $17650 = 0.0, $17651 = 0.0, $17652 = 0.0, $17653 = 0.0, $17654 = 0.0, $17655 = 0.0, $17656 = 0.0, $17657 = 0.0, $17658 = 0.0, $17659 = 0.0, $1766 = 0.0, $17660 = 0.0, $17661 = 0.0, $17662 = 0.0, $17663 = 0.0, $17664 = 0.0, $17665 = 0;
 var $17666 = 0.0, $17667 = 0.0, $17668 = 0.0, $17669 = 0.0, $1767 = 0, $17670 = 0.0, $17671 = 0.0, $17672 = 0.0, $17673 = 0.0, $17674 = 0.0, $17675 = 0, $17676 = 0.0, $17677 = 0, $17678 = 0.0, $17679 = 0, $1768 = 0.0, $17680 = 0.0, $17681 = 0, $17682 = 0.0, $17683 = 0.0;
 var $17684 = 0.0, $17685 = 0.0, $17686 = 0.0, $17687 = 0.0, $17688 = 0.0, $17689 = 0.0, $1769 = 0, $17690 = 0.0, $17691 = 0.0, $17692 = 0.0, $17693 = 0.0, $17694 = 0.0, $17695 = 0.0, $17696 = 0.0, $17697 = 0.0, $17698 = 0.0, $17699 = 0.0, $177 = 0, $1770 = 0.0, $17700 = 0.0;
 var $17701 = 0.0, $17702 = 0.0, $17703 = 0.0, $17704 = 0.0, $17705 = 0.0, $17706 = 0.0, $17707 = 0.0, $17708 = 0.0, $17709 = 0.0, $1771 = 0.0, $17710 = 0.0, $17711 = 0.0, $17712 = 0.0, $17713 = 0.0, $17714 = 0.0, $17715 = 0.0, $17716 = 0.0, $17717 = 0.0, $17718 = 0.0, $17719 = 0.0;
 var $1772 = 0.0, $17720 = 0.0, $17721 = 0.0, $17722 = 0.0, $17723 = 0.0, $17724 = 0.0, $17725 = 0.0, $17726 = 0.0, $17727 = 0.0, $17728 = 0.0, $17729 = 0.0, $1773 = 0, $17730 = 0.0, $17731 = 0.0, $17732 = 0.0, $17733 = 0, $17734 = 0, $17735 = 0.0, $17736 = 0.0, $17737 = 0.0;
 var $17738 = 0.0, $17739 = 0.0, $1774 = 0, $17740 = 0.0, $17741 = 0.0, $17742 = 0.0, $17743 = 0.0, $17744 = 0.0, $17745 = 0.0, $17746 = 0.0, $17747 = 0.0, $17748 = 0.0, $17749 = 0.0, $1775 = 0, $17750 = 0.0, $17751 = 0.0, $17752 = 0.0, $17753 = 0.0, $17754 = 0.0, $17755 = 0.0;
 var $17756 = 0.0, $17757 = 0.0, $17758 = 0.0, $17759 = 0.0, $1776 = 0.0, $17760 = 0.0, $17761 = 0.0, $17762 = 0.0, $17763 = 0.0, $17764 = 0.0, $17765 = 0.0, $17766 = 0.0, $17767 = 0.0, $17768 = 0.0, $17769 = 0.0, $1777 = 0.0, $17770 = 0.0, $17771 = 0.0, $17772 = 0.0, $17773 = 0.0;
 var $17774 = 0.0, $17775 = 0.0, $17776 = 0.0, $17777 = 0.0, $17778 = 0.0, $17779 = 0.0, $1778 = 0.0, $17780 = 0.0, $17781 = 0.0, $17782 = 0.0, $17783 = 0.0, $17784 = 0.0, $17785 = 0, $17786 = 0, $17787 = 0.0, $17788 = 0.0, $17789 = 0.0, $1779 = 0.0, $17790 = 0.0, $17791 = 0.0;
 var $17792 = 0.0, $17793 = 0.0, $17794 = 0, $17795 = 0.0, $17796 = 0, $17797 = 0.0, $17798 = 0.0, $17799 = 0.0, $178 = 0, $1780 = 0.0, $17800 = 0.0, $17801 = 0.0, $17802 = 0.0, $17803 = 0.0, $17804 = 0.0, $17805 = 0.0, $17806 = 0.0, $17807 = 0.0, $17808 = 0.0, $17809 = 0.0;
 var $1781 = 0.0, $17810 = 0.0, $17811 = 0.0, $17812 = 0.0, $17813 = 0.0, $17814 = 0.0, $17815 = 0.0, $17816 = 0.0, $17817 = 0.0, $17818 = 0.0, $17819 = 0.0, $1782 = 0.0, $17820 = 0.0, $17821 = 0.0, $17822 = 0.0, $17823 = 0.0, $17824 = 0.0, $17825 = 0.0, $17826 = 0.0, $17827 = 0.0;
 var $17828 = 0.0, $17829 = 0.0, $1783 = 0.0, $17830 = 0.0, $17831 = 0.0, $17832 = 0.0, $17833 = 0.0, $17834 = 0.0, $17835 = 0.0, $17836 = 0.0, $17837 = 0.0, $17838 = 0.0, $17839 = 0.0, $1784 = 0.0, $17840 = 0.0, $17841 = 0.0, $17842 = 0.0, $17843 = 0.0, $17844 = 0.0, $17845 = 0.0;
 var $17846 = 0.0, $17847 = 0.0, $17848 = 0.0, $17849 = 0.0, $1785 = 0.0, $17850 = 0.0, $17851 = 0.0, $17852 = 0.0, $17853 = 0.0, $17854 = 0.0, $17855 = 0.0, $17856 = 0.0, $17857 = 0.0, $17858 = 0.0, $17859 = 0.0, $1786 = 0.0, $17860 = 0.0, $17861 = 0.0, $17862 = 0.0, $17863 = 0.0;
 var $17864 = 0.0, $17865 = 0.0, $17866 = 0.0, $17867 = 0.0, $17868 = 0.0, $17869 = 0.0, $1787 = 0, $17870 = 0.0, $17871 = 0.0, $17872 = 0.0, $17873 = 0.0, $17874 = 0.0, $17875 = 0.0, $17876 = 0.0, $17877 = 0.0, $17878 = 0.0, $17879 = 0.0, $1788 = 0.0, $17880 = 0.0, $17881 = 0.0;
 var $17882 = 0.0, $17883 = 0.0, $17884 = 0.0, $17885 = 0.0, $17886 = 0.0, $17887 = 0.0, $17888 = 0.0, $17889 = 0.0, $1789 = 0.0, $17890 = 0.0, $17891 = 0.0, $17892 = 0.0, $17893 = 0.0, $17894 = 0.0, $17895 = 0.0, $17896 = 0.0, $17897 = 0, $17898 = 0.0, $17899 = 0.0, $179 = 0;
 var $1790 = 0.0, $17900 = 0.0, $17901 = 0.0, $17902 = 0.0, $17903 = 0.0, $17904 = 0.0, $17905 = 0.0, $17906 = 0.0, $17907 = 0.0, $17908 = 0.0, $17909 = 0.0, $1791 = 0, $17910 = 0.0, $17911 = 0, $17912 = 0.0, $17913 = 0, $17914 = 0.0, $17915 = 0, $17916 = 0.0, $17917 = 0;
 var $17918 = 0.0, $17919 = 0, $1792 = 0.0, $17920 = 0.0, $17921 = 0.0, $17922 = 0.0, $17923 = 0.0, $17924 = 0.0, $17925 = 0.0, $17926 = 0.0, $17927 = 0.0, $17928 = 0.0, $17929 = 0.0, $1793 = 0, $17930 = 0.0, $17931 = 0.0, $17932 = 0.0, $17933 = 0.0, $17934 = 0.0, $17935 = 0.0;
 var $17936 = 0.0, $17937 = 0.0, $17938 = 0.0, $17939 = 0.0, $1794 = 0.0, $17940 = 0.0, $17941 = 0.0, $17942 = 0.0, $17943 = 0.0, $17944 = 0.0, $17945 = 0.0, $17946 = 0.0, $17947 = 0.0, $17948 = 0.0, $17949 = 0.0, $1795 = 0, $17950 = 0.0, $17951 = 0.0, $17952 = 0.0, $17953 = 0.0;
 var $17954 = 0.0, $17955 = 0.0, $17956 = 0.0, $17957 = 0.0, $17958 = 0.0, $17959 = 0.0, $1796 = 0.0, $17960 = 0.0, $17961 = 0.0, $17962 = 0.0, $17963 = 0.0, $17964 = 0.0, $17965 = 0.0, $17966 = 0.0, $17967 = 0.0, $17968 = 0.0, $17969 = 0.0, $1797 = 0, $17970 = 0.0, $17971 = 0.0;
 var $17972 = 0.0, $17973 = 0.0, $17974 = 0.0, $17975 = 0.0, $17976 = 0.0, $17977 = 0.0, $17978 = 0.0, $17979 = 0.0, $1798 = 0.0, $17980 = 0, $17981 = 0, $17982 = 0.0, $17983 = 0.0, $17984 = 0.0, $17985 = 0.0, $17986 = 0.0, $17987 = 0.0, $17988 = 0.0, $17989 = 0.0, $1799 = 0;
 var $17990 = 0.0, $17991 = 0.0, $17992 = 0.0, $17993 = 0.0, $17994 = 0.0, $17995 = 0.0, $17996 = 0.0, $17997 = 0, $17998 = 0, $17999 = 0.0, $18 = 0, $180 = 0, $1800 = 0.0, $18000 = 0.0, $18001 = 0.0, $18002 = 0.0, $18003 = 0.0, $18004 = 0.0, $18005 = 0.0, $18006 = 0;
 var $18007 = 0.0, $18008 = 0, $18009 = 0.0, $1801 = 0.0, $18010 = 0.0, $18011 = 0.0, $18012 = 0.0, $18013 = 0.0, $18014 = 0.0, $18015 = 0.0, $18016 = 0.0, $18017 = 0.0, $18018 = 0.0, $18019 = 0.0, $1802 = 0.0, $18020 = 0.0, $18021 = 0.0, $18022 = 0.0, $18023 = 0.0, $18024 = 0.0;
 var $18025 = 0.0, $18026 = 0.0, $18027 = 0.0, $18028 = 0.0, $18029 = 0.0, $1803 = 0.0, $18030 = 0.0, $18031 = 0.0, $18032 = 0.0, $18033 = 0.0, $18034 = 0.0, $18035 = 0.0, $18036 = 0.0, $18037 = 0.0, $18038 = 0.0, $18039 = 0.0, $1804 = 0.0, $18040 = 0.0, $18041 = 0.0, $18042 = 0.0;
 var $18043 = 0.0, $18044 = 0.0, $18045 = 0.0, $18046 = 0.0, $18047 = 0.0, $18048 = 0.0, $18049 = 0.0, $1805 = 0.0, $18050 = 0.0, $18051 = 0.0, $18052 = 0.0, $18053 = 0.0, $18054 = 0.0, $18055 = 0.0, $18056 = 0.0, $18057 = 0.0, $18058 = 0.0, $18059 = 0.0, $1806 = 0.0, $18060 = 0.0;
 var $18061 = 0.0, $18062 = 0.0, $18063 = 0.0, $18064 = 0.0, $18065 = 0.0, $18066 = 0.0, $18067 = 0.0, $18068 = 0.0, $18069 = 0.0, $1807 = 0.0, $18070 = 0.0, $18071 = 0.0, $18072 = 0.0, $18073 = 0.0, $18074 = 0.0, $18075 = 0.0, $18076 = 0.0, $18077 = 0.0, $18078 = 0.0, $18079 = 0.0;
 var $1808 = 0.0, $18080 = 0.0, $18081 = 0.0, $18082 = 0.0, $18083 = 0.0, $18084 = 0.0, $18085 = 0.0, $18086 = 0.0, $18087 = 0.0, $18088 = 0.0, $18089 = 0.0, $1809 = 0.0, $18090 = 0.0, $18091 = 0.0, $18092 = 0.0, $18093 = 0.0, $18094 = 0.0, $18095 = 0.0, $18096 = 0.0, $18097 = 0.0;
 var $18098 = 0.0, $18099 = 0.0, $181 = 0, $1810 = 0.0, $18100 = 0.0, $18101 = 0.0, $18102 = 0.0, $18103 = 0.0, $18104 = 0.0, $18105 = 0.0, $18106 = 0.0, $18107 = 0.0, $18108 = 0.0, $18109 = 0, $1811 = 0.0, $18110 = 0.0, $18111 = 0.0, $18112 = 0.0, $18113 = 0.0, $18114 = 0.0;
 var $18115 = 0.0, $18116 = 0.0, $18117 = 0.0, $18118 = 0.0, $18119 = 0.0, $1812 = 0.0, $18120 = 0.0, $18121 = 0.0, $18122 = 0.0, $18123 = 0, $18124 = 0.0, $18125 = 0, $18126 = 0.0, $18127 = 0, $18128 = 0.0, $18129 = 0, $1813 = 0.0, $18130 = 0.0, $18131 = 0, $18132 = 0.0;
 var $18133 = 0.0, $18134 = 0.0, $18135 = 0.0, $18136 = 0.0, $18137 = 0.0, $18138 = 0.0, $18139 = 0.0, $1814 = 0.0, $18140 = 0.0, $18141 = 0.0, $18142 = 0.0, $18143 = 0.0, $18144 = 0.0, $18145 = 0.0, $18146 = 0.0, $18147 = 0.0, $18148 = 0.0, $18149 = 0.0, $1815 = 0.0, $18150 = 0.0;
 var $18151 = 0.0, $18152 = 0.0, $18153 = 0.0, $18154 = 0.0, $18155 = 0.0, $18156 = 0.0, $18157 = 0.0, $18158 = 0.0, $18159 = 0.0, $1816 = 0.0, $18160 = 0.0, $18161 = 0.0, $18162 = 0.0, $18163 = 0.0, $18164 = 0.0, $18165 = 0.0, $18166 = 0.0, $18167 = 0.0, $18168 = 0, $18169 = 0;
 var $1817 = 0.0, $18170 = 0.0, $18171 = 0.0, $18172 = 0.0, $18173 = 0.0, $18174 = 0.0, $18175 = 0.0, $18176 = 0.0, $18177 = 0.0, $18178 = 0.0, $18179 = 0.0, $1818 = 0.0, $18180 = 0.0, $18181 = 0.0, $18182 = 0.0, $18183 = 0.0, $18184 = 0.0, $18185 = 0.0, $18186 = 0.0, $18187 = 0.0;
 var $18188 = 0.0, $18189 = 0.0, $1819 = 0.0, $18190 = 0.0, $18191 = 0.0, $18192 = 0.0, $18193 = 0.0, $18194 = 0.0, $18195 = 0.0, $18196 = 0.0, $18197 = 0.0, $18198 = 0.0, $18199 = 0.0, $182 = 0, $1820 = 0.0, $18200 = 0, $18201 = 0, $18202 = 0.0, $18203 = 0.0, $18204 = 0.0;
 var $18205 = 0.0, $18206 = 0.0, $18207 = 0.0, $18208 = 0.0, $18209 = 0, $1821 = 0.0, $18210 = 0.0, $18211 = 0, $18212 = 0.0, $18213 = 0.0, $18214 = 0.0, $18215 = 0.0, $18216 = 0.0, $18217 = 0.0, $18218 = 0.0, $18219 = 0.0, $1822 = 0.0, $18220 = 0.0, $18221 = 0.0, $18222 = 0.0;
 var $18223 = 0.0, $18224 = 0.0, $18225 = 0.0, $18226 = 0.0, $18227 = 0.0, $18228 = 0.0, $18229 = 0.0, $1823 = 0.0, $18230 = 0.0, $18231 = 0.0, $18232 = 0.0, $18233 = 0.0, $18234 = 0.0, $18235 = 0.0, $18236 = 0.0, $18237 = 0.0, $18238 = 0.0, $18239 = 0.0, $1824 = 0.0, $18240 = 0.0;
 var $18241 = 0.0, $18242 = 0.0, $18243 = 0.0, $18244 = 0.0, $18245 = 0.0, $18246 = 0.0, $18247 = 0.0, $18248 = 0.0, $18249 = 0.0, $1825 = 0.0, $18250 = 0.0, $18251 = 0.0, $18252 = 0.0, $18253 = 0.0, $18254 = 0.0, $18255 = 0.0, $18256 = 0.0, $18257 = 0.0, $18258 = 0.0, $18259 = 0.0;
 var $1826 = 0.0, $18260 = 0.0, $18261 = 0.0, $18262 = 0.0, $18263 = 0.0, $18264 = 0.0, $18265 = 0.0, $18266 = 0.0, $18267 = 0.0, $18268 = 0.0, $18269 = 0.0, $1827 = 0, $18270 = 0.0, $18271 = 0.0, $18272 = 0.0, $18273 = 0.0, $18274 = 0.0, $18275 = 0.0, $18276 = 0.0, $18277 = 0.0;
 var $18278 = 0.0, $18279 = 0.0, $1828 = 0, $18280 = 0.0, $18281 = 0.0, $18282 = 0.0, $18283 = 0.0, $18284 = 0.0, $18285 = 0.0, $18286 = 0.0, $18287 = 0.0, $18288 = 0.0, $18289 = 0.0, $1829 = 0, $18290 = 0.0, $18291 = 0.0, $18292 = 0.0, $18293 = 0.0, $18294 = 0.0, $18295 = 0.0;
 var $18296 = 0.0, $18297 = 0.0, $18298 = 0.0, $18299 = 0.0, $183 = 0, $1830 = 0, $18300 = 0.0, $18301 = 0.0, $18302 = 0.0, $18303 = 0.0, $18304 = 0.0, $18305 = 0.0, $18306 = 0.0, $18307 = 0.0, $18308 = 0.0, $18309 = 0.0, $1831 = 0, $18310 = 0.0, $18311 = 0.0, $18312 = 0;
 var $18313 = 0.0, $18314 = 0.0, $18315 = 0.0, $18316 = 0.0, $18317 = 0.0, $18318 = 0.0, $18319 = 0.0, $1832 = 0, $18320 = 0.0, $18321 = 0.0, $18322 = 0.0, $18323 = 0.0, $18324 = 0.0, $18325 = 0.0, $18326 = 0, $18327 = 0.0, $18328 = 0, $18329 = 0.0, $1833 = 0.0, $18330 = 0;
 var $18331 = 0.0, $18332 = 0, $18333 = 0.0, $18334 = 0, $18335 = 0, $18336 = 0, $18337 = 0, $18338 = 0, $18339 = 0, $1834 = 0.0, $18340 = 0, $18341 = 0, $18342 = 0.0, $18343 = 0.0, $18344 = 0.0, $18345 = 0.0, $18346 = 0.0, $18347 = 0.0, $18348 = 0.0, $18349 = 0.0;
 var $1835 = 0.0, $18350 = 0.0, $18351 = 0.0, $18352 = 0.0, $18353 = 0.0, $18354 = 0, $18355 = 0.0, $18356 = 0.0, $18357 = 0.0, $18358 = 0.0, $18359 = 0, $1836 = 0.0, $18360 = 0.0, $18361 = 0.0, $18362 = 0.0, $18363 = 0.0, $18364 = 0.0, $18365 = 0.0, $18366 = 0.0, $18367 = 0.0;
 var $18368 = 0.0, $18369 = 0.0, $1837 = 0, $18370 = 0.0, $18371 = 0.0, $18372 = 0, $18373 = 0.0, $18374 = 0.0, $18375 = 0.0, $18376 = 0.0, $18377 = 0, $18378 = 0.0, $18379 = 0.0, $1838 = 0, $18380 = 0.0, $18381 = 0.0, $18382 = 0.0, $18383 = 0.0, $18384 = 0.0, $18385 = 0.0;
 var $18386 = 0.0, $18387 = 0.0, $18388 = 0.0, $18389 = 0.0, $1839 = 0.0, $18390 = 0.0, $18391 = 0, $18392 = 0.0, $18393 = 0.0, $18394 = 0.0, $18395 = 0.0, $18396 = 0.0, $18397 = 0.0, $18398 = 0, $18399 = 0.0, $184 = 0, $1840 = 0, $18400 = 0.0, $18401 = 0.0, $18402 = 0.0;
 var $18403 = 0.0, $18404 = 0.0, $18405 = 0.0, $18406 = 0.0, $18407 = 0.0, $18408 = 0.0, $18409 = 0.0, $1841 = 0.0, $18410 = 0.0, $18411 = 0.0, $18412 = 0, $18413 = 0.0, $18414 = 0.0, $18415 = 0.0, $18416 = 0.0, $18417 = 0, $18418 = 0.0, $18419 = 0.0, $1842 = 0.0, $18420 = 0.0;
 var $18421 = 0.0, $18422 = 0.0, $18423 = 0.0, $18424 = 0.0, $18425 = 0.0, $18426 = 0.0, $18427 = 0.0, $18428 = 0.0, $18429 = 0.0, $1843 = 0, $18430 = 0.0, $18431 = 0, $18432 = 0.0, $18433 = 0.0, $18434 = 0.0, $18435 = 0.0, $18436 = 0, $18437 = 0.0, $18438 = 0.0, $18439 = 0.0;
 var $1844 = 0.0, $18440 = 0.0, $18441 = 0.0, $18442 = 0.0, $18443 = 0.0, $18444 = 0.0, $18445 = 0.0, $18446 = 0.0, $18447 = 0.0, $18448 = 0.0, $18449 = 0.0, $1845 = 0.0, $18450 = 0, $18451 = 0.0, $18452 = 0.0, $18453 = 0.0, $18454 = 0.0, $18455 = 0, $18456 = 0.0, $18457 = 0.0;
 var $18458 = 0.0, $18459 = 0.0, $1846 = 0, $18460 = 0.0, $18461 = 0.0, $18462 = 0.0, $18463 = 0.0, $18464 = 0.0, $18465 = 0.0, $18466 = 0.0, $18467 = 0.0, $18468 = 0, $18469 = 0.0, $1847 = 0, $18470 = 0.0, $18471 = 0.0, $18472 = 0.0, $18473 = 0.0, $18474 = 0.0, $18475 = 0;
 var $18476 = 0.0, $18477 = 0.0, $18478 = 0.0, $18479 = 0.0, $1848 = 0, $18480 = 0.0, $18481 = 0.0, $18482 = 0.0, $18483 = 0.0, $18484 = 0.0, $18485 = 0.0, $18486 = 0.0, $18487 = 0.0, $18488 = 0, $18489 = 0.0, $1849 = 0, $18490 = 0.0, $18491 = 0.0, $18492 = 0.0, $18493 = 0;
 var $18494 = 0.0, $18495 = 0.0, $18496 = 0.0, $18497 = 0.0, $18498 = 0.0, $18499 = 0.0, $185 = 0, $1850 = 0, $18500 = 0.0, $18501 = 0.0, $18502 = 0.0, $18503 = 0.0, $18504 = 0.0, $18505 = 0.0, $18506 = 0.0, $18507 = 0, $18508 = 0.0, $18509 = 0.0, $1851 = 0, $18510 = 0.0;
 var $18511 = 0.0, $18512 = 0.0, $18513 = 0.0, $18514 = 0, $18515 = 0.0, $18516 = 0.0, $18517 = 0.0, $18518 = 0.0, $18519 = 0.0, $1852 = 0, $18520 = 0.0, $18521 = 0.0, $18522 = 0.0, $18523 = 0.0, $18524 = 0.0, $18525 = 0.0, $18526 = 0.0, $18527 = 0.0, $18528 = 0, $18529 = 0.0;
 var $1853 = 0.0, $18530 = 0.0, $18531 = 0.0, $18532 = 0.0, $18533 = 0, $18534 = 0.0, $18535 = 0.0, $18536 = 0.0, $18537 = 0.0, $18538 = 0.0, $18539 = 0.0, $1854 = 0, $18540 = 0.0, $18541 = 0.0, $18542 = 0.0, $18543 = 0.0, $18544 = 0.0, $18545 = 0.0, $18546 = 0, $18547 = 0.0;
 var $18548 = 0.0, $18549 = 0.0, $1855 = 0.0, $18550 = 0.0, $18551 = 0, $18552 = 0.0, $18553 = 0.0, $18554 = 0.0, $18555 = 0.0, $18556 = 0.0, $18557 = 0.0, $18558 = 0.0, $18559 = 0.0, $1856 = 0, $18560 = 0.0, $18561 = 0.0, $18562 = 0.0, $18563 = 0.0, $18564 = 0, $18565 = 0.0;
 var $18566 = 0.0, $18567 = 0.0, $18568 = 0.0, $18569 = 0, $1857 = 0.0, $18570 = 0.0, $18571 = 0.0, $18572 = 0.0, $18573 = 0.0, $18574 = 0.0, $18575 = 0.0, $18576 = 0.0, $18577 = 0.0, $18578 = 0.0, $18579 = 0.0, $1858 = 0.0, $18580 = 0.0, $18581 = 0.0, $18582 = 0, $18583 = 0.0;
 var $18584 = 0.0, $18585 = 0.0, $18586 = 0.0, $18587 = 0.0, $18588 = 0.0, $18589 = 0, $1859 = 0.0, $18590 = 0.0, $18591 = 0.0, $18592 = 0.0, $18593 = 0.0, $18594 = 0.0, $18595 = 0.0, $18596 = 0.0, $18597 = 0.0, $18598 = 0.0, $18599 = 0.0, $186 = 0, $1860 = 0.0, $18600 = 0.0;
 var $18601 = 0.0, $18602 = 0, $18603 = 0.0, $18604 = 0.0, $18605 = 0.0, $18606 = 0.0, $18607 = 0, $18608 = 0.0, $18609 = 0.0, $1861 = 0, $18610 = 0.0, $18611 = 0.0, $18612 = 0.0, $18613 = 0.0, $18614 = 0.0, $18615 = 0.0, $18616 = 0.0, $18617 = 0.0, $18618 = 0.0, $18619 = 0.0;
 var $1862 = 0, $18620 = 0.0, $18621 = 0, $18622 = 0.0, $18623 = 0.0, $18624 = 0.0, $18625 = 0.0, $18626 = 0, $18627 = 0.0, $18628 = 0.0, $18629 = 0.0, $1863 = 0, $18630 = 0.0, $18631 = 0.0, $18632 = 0.0, $18633 = 0.0, $18634 = 0.0, $18635 = 0.0, $18636 = 0.0, $18637 = 0.0;
 var $18638 = 0.0, $18639 = 0.0, $1864 = 0, $18640 = 0, $18641 = 0.0, $18642 = 0.0, $18643 = 0.0, $18644 = 0.0, $18645 = 0, $18646 = 0.0, $18647 = 0.0, $18648 = 0.0, $18649 = 0.0, $1865 = 0, $18650 = 0.0, $18651 = 0.0, $18652 = 0.0, $18653 = 0.0, $18654 = 0.0, $18655 = 0.0;
 var $18656 = 0.0, $18657 = 0.0, $18658 = 0, $18659 = 0.0, $1866 = 0, $18660 = 0.0, $18661 = 0.0, $18662 = 0.0, $18663 = 0, $18664 = 0.0, $18665 = 0.0, $18666 = 0.0, $18667 = 0.0, $18668 = 0.0, $18669 = 0.0, $1867 = 0.0, $18670 = 0.0, $18671 = 0.0, $18672 = 0.0, $18673 = 0.0;
 var $18674 = 0.0, $18675 = 0.0, $18676 = 0, $18677 = 0.0, $18678 = 0.0, $18679 = 0.0, $1868 = 0, $18680 = 0.0, $18681 = 0, $18682 = 0.0, $18683 = 0.0, $18684 = 0.0, $18685 = 0.0, $18686 = 0.0, $18687 = 0.0, $18688 = 0.0, $18689 = 0.0, $1869 = 0.0, $18690 = 0.0, $18691 = 0.0;
 var $18692 = 0.0, $18693 = 0.0, $18694 = 0.0, $18695 = 0, $18696 = 0.0, $18697 = 0.0, $18698 = 0.0, $18699 = 0.0, $187 = 0, $1870 = 0.0, $18700 = 0.0, $18701 = 0.0, $18702 = 0, $18703 = 0.0, $18704 = 0.0, $18705 = 0.0, $18706 = 0.0, $18707 = 0.0, $18708 = 0.0, $18709 = 0.0;
 var $1871 = 0.0, $18710 = 0.0, $18711 = 0.0, $18712 = 0.0, $18713 = 0.0, $18714 = 0.0, $18715 = 0.0, $18716 = 0, $18717 = 0.0, $18718 = 0.0, $18719 = 0.0, $1872 = 0, $18720 = 0.0, $18721 = 0, $18722 = 0.0, $18723 = 0.0, $18724 = 0.0, $18725 = 0.0, $18726 = 0.0, $18727 = 0.0;
 var $18728 = 0.0, $18729 = 0.0, $1873 = 0.0, $18730 = 0.0, $18731 = 0.0, $18732 = 0.0, $18733 = 0.0, $18734 = 0.0, $18735 = 0, $18736 = 0.0, $18737 = 0.0, $18738 = 0.0, $18739 = 0.0, $1874 = 0, $18740 = 0.0, $18741 = 0.0, $18742 = 0, $18743 = 0.0, $18744 = 0.0, $18745 = 0.0;
 var $18746 = 0.0, $18747 = 0.0, $18748 = 0.0, $18749 = 0.0, $1875 = 0.0, $18750 = 0.0, $18751 = 0.0, $18752 = 0.0, $18753 = 0.0, $18754 = 0.0, $18755 = 0.0, $18756 = 0, $18757 = 0.0, $18758 = 0.0, $18759 = 0.0, $1876 = 0.0, $18760 = 0.0, $18761 = 0, $18762 = 0.0, $18763 = 0.0;
 var $18764 = 0.0, $18765 = 0.0, $18766 = 0.0, $18767 = 0.0, $18768 = 0.0, $18769 = 0.0, $1877 = 0.0, $18770 = 0.0, $18771 = 0.0, $18772 = 0.0, $18773 = 0.0, $18774 = 0, $18775 = 0.0, $18776 = 0.0, $18777 = 0.0, $18778 = 0.0, $18779 = 0, $1878 = 0, $18780 = 0.0, $18781 = 0.0;
 var $18782 = 0.0, $18783 = 0.0, $18784 = 0.0, $18785 = 0.0, $18786 = 0.0, $18787 = 0.0, $18788 = 0.0, $18789 = 0.0, $1879 = 0, $18790 = 0.0, $18791 = 0.0, $18792 = 0, $18793 = 0.0, $18794 = 0.0, $18795 = 0.0, $18796 = 0.0, $18797 = 0, $188 = 0, $1880 = 0, $1881 = 0.0;
 var $1882 = 0.0, $1883 = 0.0, $1884 = 0.0, $1885 = 0.0, $1886 = 0.0, $1887 = 0.0, $1888 = 0.0, $1889 = 0.0, $189 = 0, $1890 = 0, $1891 = 0.0, $1892 = 0.0, $1893 = 0.0, $1894 = 0, $1895 = 0.0, $1896 = 0, $1897 = 0.0, $1898 = 0, $1899 = 0.0, $19 = 0;
 var $190 = 0, $1900 = 0, $1901 = 0.0, $1902 = 0, $1903 = 0.0, $1904 = 0.0, $1905 = 0.0, $1906 = 0.0, $1907 = 0.0, $1908 = 0.0, $1909 = 0.0, $191 = 0, $1910 = 0.0, $1911 = 0.0, $1912 = 0.0, $1913 = 0.0, $1914 = 0.0, $1915 = 0.0, $1916 = 0.0, $1917 = 0.0;
 var $1918 = 0.0, $1919 = 0.0, $192 = 0, $1920 = 0.0, $1921 = 0.0, $1922 = 0.0, $1923 = 0.0, $1924 = 0.0, $1925 = 0.0, $1926 = 0.0, $1927 = 0.0, $1928 = 0.0, $1929 = 0.0, $193 = 0, $1930 = 0.0, $1931 = 0, $1932 = 0, $1933 = 0, $1934 = 0, $1935 = 0;
 var $1936 = 0, $1937 = 0.0, $1938 = 0.0, $1939 = 0.0, $194 = 0, $1940 = 0.0, $1941 = 0, $1942 = 0, $1943 = 0.0, $1944 = 0, $1945 = 0.0, $1946 = 0.0, $1947 = 0, $1948 = 0.0, $1949 = 0.0, $195 = 0, $1950 = 0, $1951 = 0, $1952 = 0, $1953 = 0;
 var $1954 = 0, $1955 = 0, $1956 = 0, $1957 = 0.0, $1958 = 0, $1959 = 0.0, $196 = 0, $1960 = 0, $1961 = 0.0, $1962 = 0.0, $1963 = 0.0, $1964 = 0.0, $1965 = 0, $1966 = 0, $1967 = 0, $1968 = 0, $1969 = 0, $197 = 0, $1970 = 0, $1971 = 0.0;
 var $1972 = 0, $1973 = 0.0, $1974 = 0.0, $1975 = 0.0, $1976 = 0, $1977 = 0.0, $1978 = 0, $1979 = 0.0, $198 = 0, $1980 = 0.0, $1981 = 0.0, $1982 = 0, $1983 = 0, $1984 = 0, $1985 = 0.0, $1986 = 0.0, $1987 = 0.0, $1988 = 0.0, $1989 = 0.0, $199 = 0;
 var $1990 = 0.0, $1991 = 0.0, $1992 = 0.0, $1993 = 0.0, $1994 = 0.0, $1995 = 0, $1996 = 0.0, $1997 = 0.0, $1998 = 0.0, $1999 = 0, $2 = 0, $20 = 0, $200 = 0, $2000 = 0.0, $2001 = 0, $2002 = 0.0, $2003 = 0, $2004 = 0.0, $2005 = 0, $2006 = 0.0;
 var $2007 = 0, $2008 = 0.0, $2009 = 0.0, $201 = 0, $2010 = 0.0, $2011 = 0.0, $2012 = 0.0, $2013 = 0.0, $2014 = 0.0, $2015 = 0.0, $2016 = 0.0, $2017 = 0.0, $2018 = 0.0, $2019 = 0.0, $202 = 0, $2020 = 0.0, $2021 = 0.0, $2022 = 0.0, $2023 = 0.0, $2024 = 0.0;
 var $2025 = 0.0, $2026 = 0.0, $2027 = 0.0, $2028 = 0.0, $2029 = 0.0, $203 = 0, $2030 = 0.0, $2031 = 0.0, $2032 = 0.0, $2033 = 0.0, $2034 = 0.0, $2035 = 0.0, $2036 = 0, $2037 = 0, $2038 = 0, $2039 = 0, $204 = 0, $2040 = 0, $2041 = 0, $2042 = 0.0;
 var $2043 = 0.0, $2044 = 0.0, $2045 = 0.0, $2046 = 0, $2047 = 0, $2048 = 0.0, $2049 = 0, $205 = 0, $2050 = 0.0, $2051 = 0.0, $2052 = 0, $2053 = 0.0, $2054 = 0.0, $2055 = 0, $2056 = 0, $2057 = 0, $2058 = 0, $2059 = 0, $206 = 0, $2060 = 0;
 var $2061 = 0, $2062 = 0.0, $2063 = 0, $2064 = 0.0, $2065 = 0, $2066 = 0.0, $2067 = 0.0, $2068 = 0.0, $2069 = 0.0, $207 = 0, $2070 = 0, $2071 = 0, $2072 = 0, $2073 = 0, $2074 = 0, $2075 = 0, $2076 = 0.0, $2077 = 0, $2078 = 0.0, $2079 = 0.0;
 var $208 = 0, $2080 = 0.0, $2081 = 0, $2082 = 0.0, $2083 = 0, $2084 = 0.0, $2085 = 0.0, $2086 = 0.0, $2087 = 0, $2088 = 0, $2089 = 0, $209 = 0, $2090 = 0.0, $2091 = 0.0, $2092 = 0.0, $2093 = 0.0, $2094 = 0.0, $2095 = 0.0, $2096 = 0.0, $2097 = 0.0;
 var $2098 = 0.0, $2099 = 0.0, $21 = 0, $210 = 0, $2100 = 0.0, $2101 = 0, $2102 = 0.0, $2103 = 0.0, $2104 = 0.0, $2105 = 0, $2106 = 0.0, $2107 = 0, $2108 = 0.0, $2109 = 0, $211 = 0, $2110 = 0.0, $2111 = 0, $2112 = 0.0, $2113 = 0, $2114 = 0.0;
 var $2115 = 0.0, $2116 = 0.0, $2117 = 0.0, $2118 = 0.0, $2119 = 0.0, $212 = 0, $2120 = 0.0, $2121 = 0.0, $2122 = 0.0, $2123 = 0.0, $2124 = 0.0, $2125 = 0.0, $2126 = 0.0, $2127 = 0.0, $2128 = 0.0, $2129 = 0.0, $213 = 0, $2130 = 0.0, $2131 = 0.0, $2132 = 0.0;
 var $2133 = 0.0, $2134 = 0.0, $2135 = 0.0, $2136 = 0.0, $2137 = 0.0, $2138 = 0.0, $2139 = 0.0, $214 = 0, $2140 = 0.0, $2141 = 0, $2142 = 0, $2143 = 0, $2144 = 0, $2145 = 0, $2146 = 0, $2147 = 0.0, $2148 = 0.0, $2149 = 0.0, $215 = 0, $2150 = 0.0;
 var $2151 = 0, $2152 = 0, $2153 = 0.0, $2154 = 0, $2155 = 0.0, $2156 = 0.0, $2157 = 0, $2158 = 0.0, $2159 = 0.0, $216 = 0, $2160 = 0, $2161 = 0, $2162 = 0, $2163 = 0, $2164 = 0, $2165 = 0, $2166 = 0, $2167 = 0.0, $2168 = 0, $2169 = 0.0;
 var $217 = 0, $2170 = 0, $2171 = 0.0, $2172 = 0.0, $2173 = 0.0, $2174 = 0.0, $2175 = 0, $2176 = 0, $2177 = 0, $2178 = 0, $2179 = 0, $218 = 0, $2180 = 0, $2181 = 0.0, $2182 = 0, $2183 = 0.0, $2184 = 0.0, $2185 = 0.0, $2186 = 0, $2187 = 0.0;
 var $2188 = 0, $2189 = 0.0, $219 = 0, $2190 = 0.0, $2191 = 0.0, $2192 = 0, $2193 = 0, $2194 = 0, $2195 = 0.0, $2196 = 0.0, $2197 = 0.0, $2198 = 0.0, $2199 = 0.0, $22 = 0, $220 = 0, $2200 = 0.0, $2201 = 0.0, $2202 = 0.0, $2203 = 0.0, $2204 = 0.0;
 var $2205 = 0.0, $2206 = 0.0, $2207 = 0, $2208 = 0, $2209 = 0.0, $221 = 0, $2210 = 0.0, $2211 = 0.0, $2212 = 0.0, $2213 = 0, $2214 = 0.0, $2215 = 0.0, $2216 = 0.0, $2217 = 0.0, $2218 = 0.0, $2219 = 0.0, $222 = 0, $2220 = 0.0, $2221 = 0.0, $2222 = 0.0;
 var $2223 = 0.0, $2224 = 0.0, $2225 = 0.0, $2226 = 0.0, $2227 = 0.0, $2228 = 0, $2229 = 0.0, $223 = 0, $2230 = 0.0, $2231 = 0.0, $2232 = 0.0, $2233 = 0.0, $2234 = 0, $2235 = 0.0, $2236 = 0.0, $2237 = 0.0, $2238 = 0.0, $2239 = 0.0, $224 = 0, $2240 = 0.0;
 var $2241 = 0.0, $2242 = 0.0, $2243 = 0.0, $2244 = 0.0, $2245 = 0.0, $2246 = 0.0, $2247 = 0.0, $2248 = 0.0, $2249 = 0.0, $225 = 0, $2250 = 0.0, $2251 = 0, $2252 = 0.0, $2253 = 0, $2254 = 0.0, $2255 = 0.0, $2256 = 0.0, $2257 = 0.0, $2258 = 0.0, $2259 = 0.0;
 var $226 = 0, $2260 = 0.0, $2261 = 0.0, $2262 = 0.0, $2263 = 0.0, $2264 = 0.0, $2265 = 0.0, $2266 = 0.0, $2267 = 0.0, $2268 = 0.0, $2269 = 0.0, $227 = 0, $2270 = 0.0, $2271 = 0.0, $2272 = 0.0, $2273 = 0.0, $2274 = 0.0, $2275 = 0.0, $2276 = 0.0, $2277 = 0.0;
 var $2278 = 0.0, $2279 = 0.0, $228 = 0, $2280 = 0.0, $2281 = 0.0, $2282 = 0.0, $2283 = 0.0, $2284 = 0, $2285 = 0.0, $2286 = 0.0, $2287 = 0.0, $2288 = 0.0, $2289 = 0.0, $229 = 0, $2290 = 0, $2291 = 0.0, $2292 = 0, $2293 = 0.0, $2294 = 0, $2295 = 0.0;
 var $2296 = 0, $2297 = 0.0, $2298 = 0.0, $2299 = 0.0, $23 = 0, $230 = 0, $2300 = 0.0, $2301 = 0.0, $2302 = 0.0, $2303 = 0.0, $2304 = 0.0, $2305 = 0.0, $2306 = 0.0, $2307 = 0.0, $2308 = 0.0, $2309 = 0.0, $231 = 0, $2310 = 0.0, $2311 = 0.0, $2312 = 0.0;
 var $2313 = 0.0, $2314 = 0.0, $2315 = 0.0, $2316 = 0.0, $2317 = 0.0, $2318 = 0.0, $2319 = 0.0, $232 = 0, $2320 = 0.0, $2321 = 0.0, $2322 = 0.0, $2323 = 0.0, $2324 = 0.0, $2325 = 0.0, $2326 = 0.0, $2327 = 0.0, $2328 = 0.0, $2329 = 0.0, $233 = 0, $2330 = 0.0;
 var $2331 = 0.0, $2332 = 0.0, $2333 = 0.0, $2334 = 0.0, $2335 = 0.0, $2336 = 0.0, $2337 = 0.0, $2338 = 0.0, $2339 = 0.0, $234 = 0, $2340 = 0.0, $2341 = 0.0, $2342 = 0.0, $2343 = 0.0, $2344 = 0.0, $2345 = 0.0, $2346 = 0.0, $2347 = 0.0, $2348 = 0, $2349 = 0;
 var $235 = 0, $2350 = 0.0, $2351 = 0.0, $2352 = 0.0, $2353 = 0.0, $2354 = 0.0, $2355 = 0.0, $2356 = 0.0, $2357 = 0.0, $2358 = 0.0, $2359 = 0.0, $236 = 0, $2360 = 0.0, $2361 = 0.0, $2362 = 0.0, $2363 = 0.0, $2364 = 0.0, $2365 = 0.0, $2366 = 0.0, $2367 = 0.0;
 var $2368 = 0.0, $2369 = 0.0, $237 = 0, $2370 = 0.0, $2371 = 0.0, $2372 = 0.0, $2373 = 0, $2374 = 0, $2375 = 0.0, $2376 = 0.0, $2377 = 0.0, $2378 = 0.0, $2379 = 0.0, $238 = 0, $2380 = 0.0, $2381 = 0.0, $2382 = 0, $2383 = 0.0, $2384 = 0, $2385 = 0.0;
 var $2386 = 0.0, $2387 = 0.0, $2388 = 0.0, $2389 = 0.0, $239 = 0, $2390 = 0.0, $2391 = 0.0, $2392 = 0.0, $2393 = 0.0, $2394 = 0.0, $2395 = 0.0, $2396 = 0.0, $2397 = 0.0, $2398 = 0.0, $2399 = 0.0, $24 = 0, $240 = 0, $2400 = 0.0, $2401 = 0.0, $2402 = 0.0;
 var $2403 = 0.0, $2404 = 0.0, $2405 = 0.0, $2406 = 0.0, $2407 = 0.0, $2408 = 0.0, $2409 = 0.0, $241 = 0, $2410 = 0.0, $2411 = 0.0, $2412 = 0.0, $2413 = 0.0, $2414 = 0.0, $2415 = 0.0, $2416 = 0.0, $2417 = 0.0, $2418 = 0.0, $2419 = 0.0, $242 = 0, $2420 = 0.0;
 var $2421 = 0.0, $2422 = 0.0, $2423 = 0.0, $2424 = 0.0, $2425 = 0.0, $2426 = 0.0, $2427 = 0.0, $2428 = 0.0, $2429 = 0.0, $243 = 0, $2430 = 0.0, $2431 = 0.0, $2432 = 0.0, $2433 = 0.0, $2434 = 0.0, $2435 = 0.0, $2436 = 0.0, $2437 = 0.0, $2438 = 0.0, $2439 = 0.0;
 var $244 = 0, $2440 = 0.0, $2441 = 0.0, $2442 = 0.0, $2443 = 0.0, $2444 = 0.0, $2445 = 0.0, $2446 = 0.0, $2447 = 0.0, $2448 = 0.0, $2449 = 0.0, $245 = 0, $2450 = 0.0, $2451 = 0.0, $2452 = 0.0, $2453 = 0.0, $2454 = 0.0, $2455 = 0.0, $2456 = 0.0, $2457 = 0;
 var $2458 = 0.0, $2459 = 0.0, $246 = 0, $2460 = 0.0, $2461 = 0.0, $2462 = 0.0, $2463 = 0.0, $2464 = 0.0, $2465 = 0.0, $2466 = 0.0, $2467 = 0, $2468 = 0.0, $2469 = 0, $247 = 0, $2470 = 0.0, $2471 = 0, $2472 = 0.0, $2473 = 0, $2474 = 0.0, $2475 = 0.0;
 var $2476 = 0.0, $2477 = 0.0, $2478 = 0.0, $2479 = 0.0, $248 = 0, $2480 = 0.0, $2481 = 0.0, $2482 = 0.0, $2483 = 0.0, $2484 = 0.0, $2485 = 0.0, $2486 = 0.0, $2487 = 0.0, $2488 = 0.0, $2489 = 0.0, $249 = 0, $2490 = 0.0, $2491 = 0.0, $2492 = 0.0, $2493 = 0.0;
 var $2494 = 0.0, $2495 = 0.0, $2496 = 0.0, $2497 = 0.0, $2498 = 0.0, $2499 = 0.0, $25 = 0, $250 = 0, $2500 = 0.0, $2501 = 0.0, $2502 = 0.0, $2503 = 0.0, $2504 = 0.0, $2505 = 0.0, $2506 = 0.0, $2507 = 0.0, $2508 = 0.0, $2509 = 0.0, $251 = 0, $2510 = 0;
 var $2511 = 0, $2512 = 0.0, $2513 = 0.0, $2514 = 0.0, $2515 = 0.0, $2516 = 0.0, $2517 = 0.0, $2518 = 0.0, $2519 = 0.0, $252 = 0, $2520 = 0.0, $2521 = 0.0, $2522 = 0.0, $2523 = 0.0, $2524 = 0.0, $2525 = 0.0, $2526 = 0.0, $2527 = 0.0, $2528 = 0.0, $2529 = 0.0;
 var $253 = 0, $2530 = 0.0, $2531 = 0.0, $2532 = 0.0, $2533 = 0.0, $2534 = 0.0, $2535 = 0.0, $2536 = 0.0, $2537 = 0.0, $2538 = 0.0, $2539 = 0.0, $254 = 0, $2540 = 0.0, $2541 = 0.0, $2542 = 0.0, $2543 = 0.0, $2544 = 0, $2545 = 0, $2546 = 0.0, $2547 = 0.0;
 var $2548 = 0.0, $2549 = 0.0, $255 = 0, $2550 = 0.0, $2551 = 0.0, $2552 = 0.0, $2553 = 0, $2554 = 0.0, $2555 = 0, $2556 = 0.0, $2557 = 0.0, $2558 = 0.0, $2559 = 0.0, $256 = 0, $2560 = 0.0, $2561 = 0.0, $2562 = 0.0, $2563 = 0.0, $2564 = 0.0, $2565 = 0.0;
 var $2566 = 0.0, $2567 = 0.0, $2568 = 0.0, $2569 = 0.0, $257 = 0, $2570 = 0.0, $2571 = 0.0, $2572 = 0.0, $2573 = 0.0, $2574 = 0.0, $2575 = 0.0, $2576 = 0.0, $2577 = 0.0, $2578 = 0.0, $2579 = 0.0, $258 = 0, $2580 = 0.0, $2581 = 0.0, $2582 = 0.0, $2583 = 0.0;
 var $2584 = 0.0, $2585 = 0.0, $2586 = 0.0, $2587 = 0.0, $2588 = 0.0, $2589 = 0.0, $259 = 0, $2590 = 0.0, $2591 = 0.0, $2592 = 0.0, $2593 = 0.0, $2594 = 0.0, $2595 = 0.0, $2596 = 0.0, $2597 = 0.0, $2598 = 0.0, $2599 = 0.0, $26 = 0, $260 = 0, $2600 = 0.0;
 var $2601 = 0.0, $2602 = 0.0, $2603 = 0.0, $2604 = 0.0, $2605 = 0.0, $2606 = 0.0, $2607 = 0.0, $2608 = 0.0, $2609 = 0.0, $261 = 0, $2610 = 0.0, $2611 = 0.0, $2612 = 0.0, $2613 = 0.0, $2614 = 0.0, $2615 = 0.0, $2616 = 0.0, $2617 = 0.0, $2618 = 0.0, $2619 = 0.0;
 var $262 = 0, $2620 = 0.0, $2621 = 0.0, $2622 = 0.0, $2623 = 0.0, $2624 = 0.0, $2625 = 0.0, $2626 = 0.0, $2627 = 0.0, $2628 = 0, $2629 = 0.0, $263 = 0, $2630 = 0.0, $2631 = 0.0, $2632 = 0.0, $2633 = 0.0, $2634 = 0.0, $2635 = 0.0, $2636 = 0.0, $2637 = 0.0;
 var $2638 = 0, $2639 = 0.0, $264 = 0, $2640 = 0, $2641 = 0.0, $2642 = 0, $2643 = 0.0, $2644 = 0, $2645 = 0.0, $2646 = 0.0, $2647 = 0.0, $2648 = 0.0, $2649 = 0.0, $265 = 0, $2650 = 0.0, $2651 = 0.0, $2652 = 0.0, $2653 = 0.0, $2654 = 0.0, $2655 = 0.0;
 var $2656 = 0.0, $2657 = 0.0, $2658 = 0.0, $2659 = 0.0, $266 = 0, $2660 = 0.0, $2661 = 0.0, $2662 = 0.0, $2663 = 0.0, $2664 = 0.0, $2665 = 0.0, $2666 = 0.0, $2667 = 0.0, $2668 = 0.0, $2669 = 0.0, $267 = 0, $2670 = 0.0, $2671 = 0.0, $2672 = 0.0, $2673 = 0.0;
 var $2674 = 0.0, $2675 = 0.0, $2676 = 0.0, $2677 = 0.0, $2678 = 0.0, $2679 = 0.0, $268 = 0, $2680 = 0.0, $2681 = 0, $2682 = 0, $2683 = 0.0, $2684 = 0.0, $2685 = 0.0, $2686 = 0.0, $2687 = 0.0, $2688 = 0.0, $2689 = 0.0, $269 = 0, $2690 = 0.0, $2691 = 0.0;
 var $2692 = 0.0, $2693 = 0.0, $2694 = 0.0, $2695 = 0.0, $2696 = 0.0, $2697 = 0.0, $2698 = 0.0, $2699 = 0.0, $27 = 0, $270 = 0, $2700 = 0.0, $2701 = 0.0, $2702 = 0.0, $2703 = 0.0, $2704 = 0.0, $2705 = 0.0, $2706 = 0.0, $2707 = 0.0, $2708 = 0.0, $2709 = 0.0;
 var $271 = 0, $2710 = 0.0, $2711 = 0.0, $2712 = 0.0, $2713 = 0.0, $2714 = 0.0, $2715 = 0.0, $2716 = 0.0, $2717 = 0.0, $2718 = 0.0, $2719 = 0.0, $272 = 0, $2720 = 0, $2721 = 0, $2722 = 0.0, $2723 = 0.0, $2724 = 0.0, $2725 = 0.0, $2726 = 0.0, $2727 = 0.0;
 var $2728 = 0.0, $2729 = 0, $273 = 0, $2730 = 0.0, $2731 = 0, $2732 = 0.0, $2733 = 0.0, $2734 = 0.0, $2735 = 0.0, $2736 = 0.0, $2737 = 0.0, $2738 = 0.0, $2739 = 0.0, $274 = 0, $2740 = 0.0, $2741 = 0.0, $2742 = 0.0, $2743 = 0.0, $2744 = 0.0, $2745 = 0.0;
 var $2746 = 0.0, $2747 = 0.0, $2748 = 0.0, $2749 = 0.0, $275 = 0, $2750 = 0.0, $2751 = 0.0, $2752 = 0.0, $2753 = 0.0, $2754 = 0.0, $2755 = 0.0, $2756 = 0.0, $2757 = 0.0, $2758 = 0.0, $2759 = 0.0, $276 = 0, $2760 = 0.0, $2761 = 0.0, $2762 = 0.0, $2763 = 0.0;
 var $2764 = 0.0, $2765 = 0.0, $2766 = 0.0, $2767 = 0.0, $2768 = 0.0, $2769 = 0.0, $277 = 0, $2770 = 0.0, $2771 = 0.0, $2772 = 0.0, $2773 = 0.0, $2774 = 0.0, $2775 = 0.0, $2776 = 0.0, $2777 = 0.0, $2778 = 0.0, $2779 = 0.0, $278 = 0, $2780 = 0.0, $2781 = 0.0;
 var $2782 = 0.0, $2783 = 0.0, $2784 = 0.0, $2785 = 0.0, $2786 = 0.0, $2787 = 0.0, $2788 = 0.0, $2789 = 0.0, $279 = 0, $2790 = 0.0, $2791 = 0.0, $2792 = 0.0, $2793 = 0.0, $2794 = 0.0, $2795 = 0.0, $2796 = 0.0, $2797 = 0.0, $2798 = 0.0, $2799 = 0.0, $28 = 0;
 var $280 = 0, $2800 = 0.0, $2801 = 0.0, $2802 = 0.0, $2803 = 0.0, $2804 = 0, $2805 = 0.0, $2806 = 0.0, $2807 = 0.0, $2808 = 0.0, $2809 = 0.0, $281 = 0, $2810 = 0.0, $2811 = 0.0, $2812 = 0.0, $2813 = 0.0, $2814 = 0, $2815 = 0.0, $2816 = 0, $2817 = 0.0;
 var $2818 = 0, $2819 = 0.0, $282 = 0, $2820 = 0, $2821 = 0.0, $2822 = 0.0, $2823 = 0.0, $2824 = 0.0, $2825 = 0.0, $2826 = 0.0, $2827 = 0.0, $2828 = 0.0, $2829 = 0.0, $283 = 0, $2830 = 0.0, $2831 = 0.0, $2832 = 0.0, $2833 = 0.0, $2834 = 0.0, $2835 = 0.0;
 var $2836 = 0, $2837 = 0.0, $2838 = 0.0, $2839 = 0.0, $284 = 0, $2840 = 0.0, $2841 = 0.0, $2842 = 0.0, $2843 = 0.0, $2844 = 0.0, $2845 = 0.0, $2846 = 0, $2847 = 0.0, $2848 = 0, $2849 = 0.0, $285 = 0, $2850 = 0, $2851 = 0.0, $2852 = 0.0, $2853 = 0.0;
 var $2854 = 0.0, $2855 = 0.0, $2856 = 0.0, $2857 = 0.0, $2858 = 0.0, $2859 = 0.0, $286 = 0, $2860 = 0.0, $2861 = 0.0, $2862 = 0.0, $2863 = 0.0, $2864 = 0.0, $2865 = 0.0, $2866 = 0.0, $2867 = 0.0, $2868 = 0.0, $2869 = 0.0, $287 = 0, $2870 = 0.0, $2871 = 0;
 var $2872 = 0.0, $2873 = 0.0, $2874 = 0, $2875 = 0.0, $2876 = 0.0, $2877 = 0.0, $2878 = 0.0, $2879 = 0.0, $288 = 0, $2880 = 0.0, $2881 = 0.0, $2882 = 0.0, $2883 = 0.0, $2884 = 0.0, $2885 = 0.0, $2886 = 0.0, $2887 = 0.0, $2888 = 0.0, $2889 = 0.0, $289 = 0;
 var $2890 = 0.0, $2891 = 0.0, $2892 = 0.0, $2893 = 0.0, $2894 = 0.0, $2895 = 0.0, $2896 = 0.0, $2897 = 0.0, $2898 = 0.0, $2899 = 0.0, $29 = 0, $290 = 0, $2900 = 0.0, $2901 = 0.0, $2902 = 0.0, $2903 = 0.0, $2904 = 0.0, $2905 = 0, $2906 = 0.0, $2907 = 0.0;
 var $2908 = 0.0, $2909 = 0.0, $291 = 0, $2910 = 0.0, $2911 = 0.0, $2912 = 0.0, $2913 = 0.0, $2914 = 0.0, $2915 = 0.0, $2916 = 0.0, $2917 = 0.0, $2918 = 0.0, $2919 = 0.0, $292 = 0, $2920 = 0.0, $2921 = 0.0, $2922 = 0.0, $2923 = 0.0, $2924 = 0.0, $2925 = 0;
 var $2926 = 0.0, $2927 = 0.0, $2928 = 0.0, $2929 = 0.0, $293 = 0, $2930 = 0.0, $2931 = 0.0, $2932 = 0.0, $2933 = 0.0, $2934 = 0.0, $2935 = 0.0, $2936 = 0.0, $2937 = 0.0, $2938 = 0.0, $2939 = 0.0, $294 = 0, $2940 = 0.0, $2941 = 0.0, $2942 = 0.0, $2943 = 0.0;
 var $2944 = 0.0, $2945 = 0.0, $2946 = 0.0, $2947 = 0.0, $2948 = 0.0, $2949 = 0.0, $295 = 0, $2950 = 0.0, $2951 = 0.0, $2952 = 0.0, $2953 = 0.0, $2954 = 0.0, $2955 = 0.0, $2956 = 0.0, $2957 = 0.0, $2958 = 0.0, $2959 = 0.0, $296 = 0, $2960 = 0, $2961 = 0.0;
 var $2962 = 0.0, $2963 = 0.0, $2964 = 0.0, $2965 = 0.0, $2966 = 0.0, $2967 = 0.0, $2968 = 0.0, $2969 = 0.0, $297 = 0, $2970 = 0.0, $2971 = 0.0, $2972 = 0.0, $2973 = 0.0, $2974 = 0.0, $2975 = 0.0, $2976 = 0.0, $2977 = 0.0, $2978 = 0.0, $2979 = 0.0, $298 = 0;
 var $2980 = 0, $2981 = 0.0, $2982 = 0.0, $2983 = 0.0, $2984 = 0.0, $2985 = 0.0, $2986 = 0.0, $2987 = 0.0, $2988 = 0.0, $2989 = 0.0, $299 = 0, $2990 = 0.0, $2991 = 0.0, $2992 = 0.0, $2993 = 0.0, $2994 = 0.0, $2995 = 0.0, $2996 = 0.0, $2997 = 0.0, $2998 = 0;
 var $2999 = 0.0, $3 = 0, $30 = 0, $300 = 0, $3000 = 0.0, $3001 = 0.0, $3002 = 0, $3003 = 0.0, $3004 = 0, $3005 = 0.0, $3006 = 0, $3007 = 0.0, $3008 = 0.0, $3009 = 0.0, $301 = 0, $3010 = 0.0, $3011 = 0.0, $3012 = 0.0, $3013 = 0.0, $3014 = 0.0;
 var $3015 = 0.0, $3016 = 0.0, $3017 = 0.0, $3018 = 0.0, $3019 = 0.0, $302 = 0, $3020 = 0.0, $3021 = 0.0, $3022 = 0.0, $3023 = 0.0, $3024 = 0.0, $3025 = 0.0, $3026 = 0.0, $3027 = 0.0, $3028 = 0.0, $3029 = 0.0, $303 = 0, $3030 = 0.0, $3031 = 0.0, $3032 = 0.0;
 var $3033 = 0.0, $3034 = 0.0, $3035 = 0.0, $3036 = 0.0, $3037 = 0.0, $3038 = 0.0, $3039 = 0.0, $304 = 0, $3040 = 0.0, $3041 = 0.0, $3042 = 0.0, $3043 = 0.0, $3044 = 0.0, $3045 = 0.0, $3046 = 0.0, $3047 = 0.0, $3048 = 0.0, $3049 = 0.0, $305 = 0, $3050 = 0.0;
 var $3051 = 0.0, $3052 = 0.0, $3053 = 0.0, $3054 = 0.0, $3055 = 0.0, $3056 = 0.0, $3057 = 0.0, $3058 = 0, $3059 = 0.0, $306 = 0, $3060 = 0.0, $3061 = 0.0, $3062 = 0.0, $3063 = 0, $3064 = 0.0, $3065 = 0, $3066 = 0.0, $3067 = 0, $3068 = 0.0, $3069 = 0;
 var $307 = 0, $3070 = 0.0, $3071 = 0, $3072 = 0.0, $3073 = 0, $3074 = 0, $3075 = 0, $3076 = 0, $3077 = 0, $3078 = 0, $3079 = 0.0, $308 = 0, $3080 = 0.0, $3081 = 0.0, $3082 = 0.0, $3083 = 0, $3084 = 0, $3085 = 0.0, $3086 = 0, $3087 = 0.0;
 var $3088 = 0.0, $3089 = 0, $309 = 0, $3090 = 0.0, $3091 = 0.0, $3092 = 0, $3093 = 0, $3094 = 0, $3095 = 0, $3096 = 0, $3097 = 0, $3098 = 0, $3099 = 0.0, $31 = 0, $310 = 0, $3100 = 0, $3101 = 0.0, $3102 = 0, $3103 = 0.0, $3104 = 0.0;
 var $3105 = 0.0, $3106 = 0.0, $3107 = 0, $3108 = 0, $3109 = 0, $311 = 0, $3110 = 0, $3111 = 0, $3112 = 0, $3113 = 0.0, $3114 = 0, $3115 = 0.0, $3116 = 0.0, $3117 = 0.0, $3118 = 0, $3119 = 0.0, $312 = 0, $3120 = 0, $3121 = 0.0, $3122 = 0.0;
 var $3123 = 0.0, $3124 = 0, $3125 = 0, $3126 = 0, $3127 = 0.0, $3128 = 0.0, $3129 = 0.0, $313 = 0, $3130 = 0.0, $3131 = 0.0, $3132 = 0.0, $3133 = 0.0, $3134 = 0.0, $3135 = 0.0, $3136 = 0.0, $3137 = 0.0, $3138 = 0, $3139 = 0.0, $314 = 0, $3140 = 0.0;
 var $3141 = 0.0, $3142 = 0, $3143 = 0.0, $3144 = 0, $3145 = 0.0, $3146 = 0, $3147 = 0.0, $3148 = 0, $3149 = 0.0, $315 = 0, $3150 = 0, $3151 = 0.0, $3152 = 0.0, $3153 = 0.0, $3154 = 0.0, $3155 = 0.0, $3156 = 0.0, $3157 = 0.0, $3158 = 0.0, $3159 = 0.0;
 var $316 = 0, $3160 = 0.0, $3161 = 0.0, $3162 = 0.0, $3163 = 0.0, $3164 = 0.0, $3165 = 0.0, $3166 = 0.0, $3167 = 0.0, $3168 = 0.0, $3169 = 0.0, $317 = 0, $3170 = 0.0, $3171 = 0.0, $3172 = 0.0, $3173 = 0.0, $3174 = 0.0, $3175 = 0.0, $3176 = 0.0, $3177 = 0.0;
 var $3178 = 0, $3179 = 0, $318 = 0, $3180 = 0, $3181 = 0, $3182 = 0, $3183 = 0, $3184 = 0.0, $3185 = 0.0, $3186 = 0.0, $3187 = 0.0, $3188 = 0, $3189 = 0, $319 = 0, $3190 = 0.0, $3191 = 0, $3192 = 0.0, $3193 = 0.0, $3194 = 0, $3195 = 0.0;
 var $3196 = 0.0, $3197 = 0, $3198 = 0, $3199 = 0, $32 = 0, $320 = 0, $3200 = 0, $3201 = 0, $3202 = 0, $3203 = 0, $3204 = 0.0, $3205 = 0, $3206 = 0.0, $3207 = 0, $3208 = 0.0, $3209 = 0.0, $321 = 0, $3210 = 0.0, $3211 = 0.0, $3212 = 0;
 var $3213 = 0, $3214 = 0, $3215 = 0, $3216 = 0, $3217 = 0, $3218 = 0.0, $3219 = 0, $322 = 0, $3220 = 0.0, $3221 = 0.0, $3222 = 0.0, $3223 = 0, $3224 = 0.0, $3225 = 0, $3226 = 0.0, $3227 = 0.0, $3228 = 0.0, $3229 = 0, $323 = 0, $3230 = 0;
 var $3231 = 0, $3232 = 0.0, $3233 = 0.0, $3234 = 0.0, $3235 = 0.0, $3236 = 0.0, $3237 = 0.0, $3238 = 0.0, $3239 = 0.0, $324 = 0, $3240 = 0.0, $3241 = 0, $3242 = 0.0, $3243 = 0.0, $3244 = 0.0, $3245 = 0, $3246 = 0.0, $3247 = 0, $3248 = 0.0, $3249 = 0;
 var $325 = 0, $3250 = 0.0, $3251 = 0, $3252 = 0.0, $3253 = 0, $3254 = 0.0, $3255 = 0.0, $3256 = 0.0, $3257 = 0.0, $3258 = 0.0, $3259 = 0.0, $326 = 0, $3260 = 0.0, $3261 = 0.0, $3262 = 0.0, $3263 = 0.0, $3264 = 0.0, $3265 = 0.0, $3266 = 0.0, $3267 = 0.0;
 var $3268 = 0.0, $3269 = 0.0, $327 = 0, $3270 = 0.0, $3271 = 0.0, $3272 = 0.0, $3273 = 0.0, $3274 = 0.0, $3275 = 0.0, $3276 = 0.0, $3277 = 0.0, $3278 = 0.0, $3279 = 0.0, $328 = 0, $3280 = 0.0, $3281 = 0.0, $3282 = 0, $3283 = 0, $3284 = 0, $3285 = 0;
 var $3286 = 0, $3287 = 0, $3288 = 0.0, $3289 = 0.0, $329 = 0, $3290 = 0.0, $3291 = 0.0, $3292 = 0, $3293 = 0, $3294 = 0.0, $3295 = 0, $3296 = 0.0, $3297 = 0.0, $3298 = 0, $3299 = 0.0, $33 = 0, $330 = 0, $3300 = 0.0, $3301 = 0, $3302 = 0;
 var $3303 = 0, $3304 = 0, $3305 = 0, $3306 = 0, $3307 = 0, $3308 = 0.0, $3309 = 0, $331 = 0, $3310 = 0.0, $3311 = 0, $3312 = 0.0, $3313 = 0.0, $3314 = 0.0, $3315 = 0.0, $3316 = 0, $3317 = 0, $3318 = 0, $3319 = 0, $332 = 0, $3320 = 0;
 var $3321 = 0, $3322 = 0.0, $3323 = 0, $3324 = 0.0, $3325 = 0.0, $3326 = 0.0, $3327 = 0, $3328 = 0.0, $3329 = 0, $333 = 0, $3330 = 0.0, $3331 = 0.0, $3332 = 0.0, $3333 = 0, $3334 = 0, $3335 = 0, $3336 = 0.0, $3337 = 0.0, $3338 = 0.0, $3339 = 0.0;
 var $334 = 0, $3340 = 0.0, $3341 = 0.0, $3342 = 0.0, $3343 = 0.0, $3344 = 0.0, $3345 = 0.0, $3346 = 0, $3347 = 0.0, $3348 = 0.0, $3349 = 0.0, $335 = 0, $3350 = 0, $3351 = 0.0, $3352 = 0, $3353 = 0.0, $3354 = 0, $3355 = 0.0, $3356 = 0, $3357 = 0.0;
 var $3358 = 0, $3359 = 0.0, $336 = 0, $3360 = 0.0, $3361 = 0.0, $3362 = 0.0, $3363 = 0.0, $3364 = 0.0, $3365 = 0.0, $3366 = 0.0, $3367 = 0.0, $3368 = 0.0, $3369 = 0.0, $337 = 0, $3370 = 0.0, $3371 = 0.0, $3372 = 0.0, $3373 = 0.0, $3374 = 0.0, $3375 = 0.0;
 var $3376 = 0.0, $3377 = 0.0, $3378 = 0.0, $3379 = 0.0, $338 = 0, $3380 = 0.0, $3381 = 0.0, $3382 = 0.0, $3383 = 0.0, $3384 = 0.0, $3385 = 0.0, $3386 = 0.0, $3387 = 0, $3388 = 0, $3389 = 0, $339 = 0, $3390 = 0, $3391 = 0, $3392 = 0, $3393 = 0.0;
 var $3394 = 0.0, $3395 = 0.0, $3396 = 0.0, $3397 = 0, $3398 = 0, $3399 = 0.0, $34 = 0, $340 = 0, $3400 = 0, $3401 = 0.0, $3402 = 0.0, $3403 = 0, $3404 = 0.0, $3405 = 0.0, $3406 = 0, $3407 = 0, $3408 = 0, $3409 = 0, $341 = 0, $3410 = 0;
 var $3411 = 0, $3412 = 0, $3413 = 0.0, $3414 = 0, $3415 = 0.0, $3416 = 0, $3417 = 0.0, $3418 = 0.0, $3419 = 0.0, $342 = 0, $3420 = 0.0, $3421 = 0, $3422 = 0, $3423 = 0, $3424 = 0, $3425 = 0, $3426 = 0, $3427 = 0.0, $3428 = 0, $3429 = 0.0;
 var $343 = 0, $3430 = 0.0, $3431 = 0.0, $3432 = 0, $3433 = 0.0, $3434 = 0, $3435 = 0.0, $3436 = 0.0, $3437 = 0.0, $3438 = 0, $3439 = 0, $344 = 0, $3440 = 0, $3441 = 0.0, $3442 = 0.0, $3443 = 0.0, $3444 = 0.0, $3445 = 0.0, $3446 = 0.0, $3447 = 0.0;
 var $3448 = 0.0, $3449 = 0.0, $345 = 0, $3450 = 0.0, $3451 = 0.0, $3452 = 0, $3453 = 0.0, $3454 = 0.0, $3455 = 0.0, $3456 = 0, $3457 = 0.0, $3458 = 0, $3459 = 0.0, $346 = 0, $3460 = 0, $3461 = 0.0, $3462 = 0, $3463 = 0.0, $3464 = 0, $3465 = 0.0;
 var $3466 = 0.0, $3467 = 0.0, $3468 = 0.0, $3469 = 0.0, $347 = 0, $3470 = 0.0, $3471 = 0.0, $3472 = 0.0, $3473 = 0.0, $3474 = 0.0, $3475 = 0.0, $3476 = 0.0, $3477 = 0.0, $3478 = 0.0, $3479 = 0.0, $348 = 0, $3480 = 0.0, $3481 = 0.0, $3482 = 0.0, $3483 = 0.0;
 var $3484 = 0.0, $3485 = 0.0, $3486 = 0.0, $3487 = 0.0, $3488 = 0.0, $3489 = 0.0, $349 = 0, $3490 = 0.0, $3491 = 0.0, $3492 = 0, $3493 = 0, $3494 = 0, $3495 = 0, $3496 = 0, $3497 = 0, $3498 = 0.0, $3499 = 0.0, $35 = 0, $350 = 0, $3500 = 0.0;
 var $3501 = 0.0, $3502 = 0, $3503 = 0, $3504 = 0.0, $3505 = 0, $3506 = 0.0, $3507 = 0.0, $3508 = 0, $3509 = 0.0, $351 = 0, $3510 = 0.0, $3511 = 0, $3512 = 0, $3513 = 0, $3514 = 0, $3515 = 0, $3516 = 0, $3517 = 0, $3518 = 0.0, $3519 = 0;
 var $352 = 0, $3520 = 0.0, $3521 = 0, $3522 = 0.0, $3523 = 0.0, $3524 = 0.0, $3525 = 0.0, $3526 = 0, $3527 = 0, $3528 = 0, $3529 = 0, $353 = 0, $3530 = 0, $3531 = 0, $3532 = 0.0, $3533 = 0, $3534 = 0.0, $3535 = 0.0, $3536 = 0.0, $3537 = 0;
 var $3538 = 0.0, $3539 = 0, $354 = 0, $3540 = 0.0, $3541 = 0.0, $3542 = 0.0, $3543 = 0, $3544 = 0, $3545 = 0, $3546 = 0.0, $3547 = 0.0, $3548 = 0.0, $3549 = 0.0, $355 = 0, $3550 = 0.0, $3551 = 0.0, $3552 = 0.0, $3553 = 0.0, $3554 = 0.0, $3555 = 0.0;
 var $3556 = 0.0, $3557 = 0.0, $3558 = 0, $3559 = 0, $356 = 0, $3560 = 0.0, $3561 = 0.0, $3562 = 0.0, $3563 = 0.0, $3564 = 0, $3565 = 0.0, $3566 = 0.0, $3567 = 0.0, $3568 = 0.0, $3569 = 0.0, $357 = 0, $3570 = 0.0, $3571 = 0.0, $3572 = 0.0, $3573 = 0.0;
 var $3574 = 0.0, $3575 = 0.0, $3576 = 0.0, $3577 = 0.0, $3578 = 0.0, $3579 = 0, $358 = 0, $3580 = 0.0, $3581 = 0.0, $3582 = 0.0, $3583 = 0.0, $3584 = 0.0, $3585 = 0, $3586 = 0.0, $3587 = 0.0, $3588 = 0.0, $3589 = 0.0, $359 = 0, $3590 = 0.0, $3591 = 0.0;
 var $3592 = 0.0, $3593 = 0.0, $3594 = 0.0, $3595 = 0.0, $3596 = 0.0, $3597 = 0.0, $3598 = 0.0, $3599 = 0.0, $36 = 0, $360 = 0, $3600 = 0.0, $3601 = 0.0, $3602 = 0, $3603 = 0.0, $3604 = 0, $3605 = 0.0, $3606 = 0.0, $3607 = 0.0, $3608 = 0.0, $3609 = 0.0;
 var $361 = 0, $3610 = 0.0, $3611 = 0.0, $3612 = 0.0, $3613 = 0.0, $3614 = 0.0, $3615 = 0.0, $3616 = 0.0, $3617 = 0.0, $3618 = 0.0, $3619 = 0.0, $362 = 0, $3620 = 0.0, $3621 = 0.0, $3622 = 0.0, $3623 = 0.0, $3624 = 0.0, $3625 = 0.0, $3626 = 0.0, $3627 = 0.0;
 var $3628 = 0.0, $3629 = 0.0, $363 = 0, $3630 = 0.0, $3631 = 0.0, $3632 = 0.0, $3633 = 0.0, $3634 = 0.0, $3635 = 0.0, $3636 = 0, $3637 = 0.0, $3638 = 0.0, $3639 = 0.0, $364 = 0, $3640 = 0.0, $3641 = 0, $3642 = 0.0, $3643 = 0, $3644 = 0.0, $3645 = 0;
 var $3646 = 0.0, $3647 = 0, $3648 = 0.0, $3649 = 0.0, $365 = 0, $3650 = 0.0, $3651 = 0.0, $3652 = 0.0, $3653 = 0.0, $3654 = 0.0, $3655 = 0.0, $3656 = 0.0, $3657 = 0.0, $3658 = 0.0, $3659 = 0.0, $366 = 0, $3660 = 0.0, $3661 = 0.0, $3662 = 0.0, $3663 = 0.0;
 var $3664 = 0.0, $3665 = 0.0, $3666 = 0.0, $3667 = 0.0, $3668 = 0.0, $3669 = 0.0, $367 = 0, $3670 = 0.0, $3671 = 0.0, $3672 = 0.0, $3673 = 0.0, $3674 = 0.0, $3675 = 0.0, $3676 = 0.0, $3677 = 0.0, $3678 = 0.0, $3679 = 0.0, $368 = 0, $3680 = 0.0, $3681 = 0.0;
 var $3682 = 0.0, $3683 = 0.0, $3684 = 0.0, $3685 = 0.0, $3686 = 0.0, $3687 = 0.0, $3688 = 0.0, $3689 = 0.0, $369 = 0, $3690 = 0.0, $3691 = 0.0, $3692 = 0.0, $3693 = 0.0, $3694 = 0.0, $3695 = 0.0, $3696 = 0.0, $3697 = 0.0, $3698 = 0.0, $3699 = 0.0, $37 = 0;
 var $370 = 0, $3700 = 0, $3701 = 0, $3702 = 0.0, $3703 = 0.0, $3704 = 0.0, $3705 = 0.0, $3706 = 0.0, $3707 = 0.0, $3708 = 0.0, $3709 = 0.0, $371 = 0, $3710 = 0.0, $3711 = 0.0, $3712 = 0.0, $3713 = 0.0, $3714 = 0.0, $3715 = 0.0, $3716 = 0.0, $3717 = 0.0;
 var $3718 = 0.0, $3719 = 0.0, $372 = 0, $3720 = 0.0, $3721 = 0.0, $3722 = 0.0, $3723 = 0.0, $3724 = 0.0, $3725 = 0, $3726 = 0, $3727 = 0.0, $3728 = 0.0, $3729 = 0.0, $373 = 0, $3730 = 0.0, $3731 = 0.0, $3732 = 0.0, $3733 = 0.0, $3734 = 0, $3735 = 0.0;
 var $3736 = 0, $3737 = 0.0, $3738 = 0.0, $3739 = 0.0, $374 = 0, $3740 = 0.0, $3741 = 0.0, $3742 = 0.0, $3743 = 0.0, $3744 = 0.0, $3745 = 0.0, $3746 = 0.0, $3747 = 0.0, $3748 = 0.0, $3749 = 0.0, $375 = 0, $3750 = 0.0, $3751 = 0.0, $3752 = 0.0, $3753 = 0.0;
 var $3754 = 0.0, $3755 = 0.0, $3756 = 0.0, $3757 = 0.0, $3758 = 0.0, $3759 = 0.0, $376 = 0, $3760 = 0.0, $3761 = 0.0, $3762 = 0.0, $3763 = 0.0, $3764 = 0.0, $3765 = 0.0, $3766 = 0.0, $3767 = 0.0, $3768 = 0.0, $3769 = 0.0, $377 = 0, $3770 = 0.0, $3771 = 0.0;
 var $3772 = 0.0, $3773 = 0.0, $3774 = 0.0, $3775 = 0.0, $3776 = 0.0, $3777 = 0.0, $3778 = 0.0, $3779 = 0.0, $378 = 0, $3780 = 0.0, $3781 = 0.0, $3782 = 0.0, $3783 = 0.0, $3784 = 0.0, $3785 = 0.0, $3786 = 0.0, $3787 = 0.0, $3788 = 0.0, $3789 = 0.0, $379 = 0;
 var $3790 = 0.0, $3791 = 0.0, $3792 = 0.0, $3793 = 0.0, $3794 = 0.0, $3795 = 0.0, $3796 = 0.0, $3797 = 0.0, $3798 = 0.0, $3799 = 0.0, $38 = 0, $380 = 0, $3800 = 0.0, $3801 = 0.0, $3802 = 0.0, $3803 = 0.0, $3804 = 0.0, $3805 = 0.0, $3806 = 0.0, $3807 = 0.0;
 var $3808 = 0.0, $3809 = 0, $381 = 0, $3810 = 0.0, $3811 = 0.0, $3812 = 0.0, $3813 = 0.0, $3814 = 0.0, $3815 = 0.0, $3816 = 0.0, $3817 = 0.0, $3818 = 0.0, $3819 = 0, $382 = 0, $3820 = 0.0, $3821 = 0, $3822 = 0.0, $3823 = 0, $3824 = 0.0, $3825 = 0;
 var $3826 = 0.0, $3827 = 0.0, $3828 = 0.0, $3829 = 0.0, $383 = 0, $3830 = 0.0, $3831 = 0.0, $3832 = 0.0, $3833 = 0.0, $3834 = 0.0, $3835 = 0.0, $3836 = 0.0, $3837 = 0.0, $3838 = 0.0, $3839 = 0.0, $384 = 0, $3840 = 0.0, $3841 = 0.0, $3842 = 0.0, $3843 = 0.0;
 var $3844 = 0.0, $3845 = 0.0, $3846 = 0.0, $3847 = 0.0, $3848 = 0.0, $3849 = 0.0, $385 = 0, $3850 = 0.0, $3851 = 0.0, $3852 = 0.0, $3853 = 0.0, $3854 = 0.0, $3855 = 0.0, $3856 = 0.0, $3857 = 0.0, $3858 = 0.0, $3859 = 0.0, $386 = 0, $3860 = 0.0, $3861 = 0.0;
 var $3862 = 0.0, $3863 = 0.0, $3864 = 0.0, $3865 = 0.0, $3866 = 0.0, $3867 = 0.0, $3868 = 0.0, $3869 = 0.0, $387 = 0, $3870 = 0.0, $3871 = 0, $3872 = 0, $3873 = 0.0, $3874 = 0.0, $3875 = 0.0, $3876 = 0.0, $3877 = 0.0, $3878 = 0.0, $3879 = 0.0, $388 = 0;
 var $3880 = 0.0, $3881 = 0.0, $3882 = 0.0, $3883 = 0.0, $3884 = 0.0, $3885 = 0.0, $3886 = 0.0, $3887 = 0.0, $3888 = 0.0, $3889 = 0.0, $389 = 0, $3890 = 0.0, $3891 = 0.0, $3892 = 0.0, $3893 = 0.0, $3894 = 0.0, $3895 = 0.0, $3896 = 0, $3897 = 0, $3898 = 0.0;
 var $3899 = 0.0, $39 = 0, $390 = 0, $3900 = 0.0, $3901 = 0.0, $3902 = 0.0, $3903 = 0.0, $3904 = 0.0, $3905 = 0, $3906 = 0.0, $3907 = 0, $3908 = 0.0, $3909 = 0.0, $391 = 0, $3910 = 0.0, $3911 = 0.0, $3912 = 0.0, $3913 = 0.0, $3914 = 0.0, $3915 = 0.0;
 var $3916 = 0.0, $3917 = 0.0, $3918 = 0.0, $3919 = 0.0, $392 = 0, $3920 = 0.0, $3921 = 0.0, $3922 = 0.0, $3923 = 0.0, $3924 = 0.0, $3925 = 0.0, $3926 = 0.0, $3927 = 0.0, $3928 = 0.0, $3929 = 0.0, $393 = 0, $3930 = 0.0, $3931 = 0.0, $3932 = 0.0, $3933 = 0.0;
 var $3934 = 0.0, $3935 = 0.0, $3936 = 0.0, $3937 = 0.0, $3938 = 0.0, $3939 = 0.0, $394 = 0, $3940 = 0.0, $3941 = 0.0, $3942 = 0.0, $3943 = 0.0, $3944 = 0.0, $3945 = 0.0, $3946 = 0.0, $3947 = 0.0, $3948 = 0.0, $3949 = 0.0, $395 = 0, $3950 = 0.0, $3951 = 0.0;
 var $3952 = 0.0, $3953 = 0.0, $3954 = 0.0, $3955 = 0.0, $3956 = 0.0, $3957 = 0.0, $3958 = 0.0, $3959 = 0.0, $396 = 0, $3960 = 0.0, $3961 = 0.0, $3962 = 0.0, $3963 = 0.0, $3964 = 0.0, $3965 = 0.0, $3966 = 0.0, $3967 = 0.0, $3968 = 0.0, $3969 = 0.0, $397 = 0;
 var $3970 = 0.0, $3971 = 0.0, $3972 = 0.0, $3973 = 0.0, $3974 = 0.0, $3975 = 0.0, $3976 = 0.0, $3977 = 0.0, $3978 = 0.0, $3979 = 0.0, $398 = 0, $3980 = 0, $3981 = 0.0, $3982 = 0.0, $3983 = 0.0, $3984 = 0.0, $3985 = 0.0, $3986 = 0.0, $3987 = 0.0, $3988 = 0.0;
 var $3989 = 0.0, $399 = 0, $3990 = 0, $3991 = 0.0, $3992 = 0, $3993 = 0.0, $3994 = 0, $3995 = 0.0, $3996 = 0, $3997 = 0.0, $3998 = 0.0, $3999 = 0.0, $4 = 0, $40 = 0, $400 = 0, $4000 = 0.0, $4001 = 0.0, $4002 = 0.0, $4003 = 0.0, $4004 = 0.0;
 var $4005 = 0.0, $4006 = 0.0, $4007 = 0.0, $4008 = 0.0, $4009 = 0.0, $401 = 0, $4010 = 0.0, $4011 = 0.0, $4012 = 0.0, $4013 = 0.0, $4014 = 0.0, $4015 = 0.0, $4016 = 0.0, $4017 = 0.0, $4018 = 0.0, $4019 = 0.0, $402 = 0, $4020 = 0.0, $4021 = 0.0, $4022 = 0.0;
 var $4023 = 0.0, $4024 = 0, $4025 = 0, $4026 = 0.0, $4027 = 0.0, $4028 = 0.0, $4029 = 0.0, $403 = 0, $4030 = 0.0, $4031 = 0.0, $4032 = 0.0, $4033 = 0.0, $4034 = 0.0, $4035 = 0.0, $4036 = 0.0, $4037 = 0.0, $4038 = 0.0, $4039 = 0.0, $404 = 0, $4040 = 0.0;
 var $4041 = 0.0, $4042 = 0.0, $4043 = 0.0, $4044 = 0.0, $4045 = 0.0, $4046 = 0.0, $4047 = 0.0, $4048 = 0.0, $4049 = 0.0, $405 = 0, $4050 = 0.0, $4051 = 0.0, $4052 = 0.0, $4053 = 0.0, $4054 = 0.0, $4055 = 0.0, $4056 = 0.0, $4057 = 0.0, $4058 = 0.0, $4059 = 0.0;
 var $406 = 0, $4060 = 0.0, $4061 = 0, $4062 = 0, $4063 = 0.0, $4064 = 0.0, $4065 = 0.0, $4066 = 0.0, $4067 = 0.0, $4068 = 0.0, $4069 = 0.0, $407 = 0, $4070 = 0, $4071 = 0.0, $4072 = 0, $4073 = 0.0, $4074 = 0.0, $4075 = 0.0, $4076 = 0.0, $4077 = 0.0;
 var $4078 = 0.0, $4079 = 0.0, $408 = 0, $4080 = 0.0, $4081 = 0.0, $4082 = 0.0, $4083 = 0.0, $4084 = 0.0, $4085 = 0.0, $4086 = 0.0, $4087 = 0.0, $4088 = 0.0, $4089 = 0.0, $409 = 0, $4090 = 0.0, $4091 = 0.0, $4092 = 0.0, $4093 = 0.0, $4094 = 0.0, $4095 = 0.0;
 var $4096 = 0.0, $4097 = 0.0, $4098 = 0.0, $4099 = 0.0, $41 = 0, $410 = 0, $4100 = 0.0, $4101 = 0.0, $4102 = 0.0, $4103 = 0.0, $4104 = 0.0, $4105 = 0.0, $4106 = 0.0, $4107 = 0.0, $4108 = 0.0, $4109 = 0.0, $411 = 0, $4110 = 0.0, $4111 = 0.0, $4112 = 0.0;
 var $4113 = 0.0, $4114 = 0.0, $4115 = 0.0, $4116 = 0.0, $4117 = 0.0, $4118 = 0.0, $4119 = 0.0, $412 = 0, $4120 = 0.0, $4121 = 0.0, $4122 = 0.0, $4123 = 0.0, $4124 = 0.0, $4125 = 0.0, $4126 = 0.0, $4127 = 0.0, $4128 = 0.0, $4129 = 0.0, $413 = 0, $4130 = 0.0;
 var $4131 = 0.0, $4132 = 0.0, $4133 = 0.0, $4134 = 0.0, $4135 = 0.0, $4136 = 0.0, $4137 = 0.0, $4138 = 0.0, $4139 = 0.0, $414 = 0, $4140 = 0.0, $4141 = 0.0, $4142 = 0.0, $4143 = 0.0, $4144 = 0.0, $4145 = 0, $4146 = 0.0, $4147 = 0.0, $4148 = 0.0, $4149 = 0.0;
 var $415 = 0, $4150 = 0.0, $4151 = 0.0, $4152 = 0.0, $4153 = 0.0, $4154 = 0.0, $4155 = 0, $4156 = 0.0, $4157 = 0, $4158 = 0.0, $4159 = 0, $416 = 0, $4160 = 0.0, $4161 = 0, $4162 = 0.0, $4163 = 0.0, $4164 = 0.0, $4165 = 0.0, $4166 = 0.0, $4167 = 0.0;
 var $4168 = 0.0, $4169 = 0.0, $417 = 0, $4170 = 0.0, $4171 = 0.0, $4172 = 0.0, $4173 = 0.0, $4174 = 0.0, $4175 = 0.0, $4176 = 0.0, $4177 = 0.0, $4178 = 0.0, $4179 = 0.0, $418 = 0, $4180 = 0.0, $4181 = 0.0, $4182 = 0.0, $4183 = 0.0, $4184 = 0.0, $4185 = 0.0;
 var $4186 = 0.0, $4187 = 0.0, $4188 = 0.0, $4189 = 0.0, $419 = 0, $4190 = 0.0, $4191 = 0.0, $4192 = 0.0, $4193 = 0.0, $4194 = 0.0, $4195 = 0.0, $4196 = 0.0, $4197 = 0.0, $4198 = 0.0, $4199 = 0.0, $42 = 0, $420 = 0, $4200 = 0.0, $4201 = 0.0, $4202 = 0.0;
 var $4203 = 0.0, $4204 = 0.0, $4205 = 0.0, $4206 = 0.0, $4207 = 0.0, $4208 = 0.0, $4209 = 0.0, $421 = 0, $4210 = 0.0, $4211 = 0.0, $4212 = 0.0, $4213 = 0.0, $4214 = 0.0, $4215 = 0.0, $4216 = 0.0, $4217 = 0.0, $4218 = 0.0, $4219 = 0.0, $422 = 0, $4220 = 0.0;
 var $4221 = 0.0, $4222 = 0.0, $4223 = 0.0, $4224 = 0.0, $4225 = 0.0, $4226 = 0.0, $4227 = 0.0, $4228 = 0.0, $4229 = 0.0, $423 = 0, $4230 = 0, $4231 = 0, $4232 = 0.0, $4233 = 0.0, $4234 = 0.0, $4235 = 0.0, $4236 = 0.0, $4237 = 0.0, $4238 = 0.0, $4239 = 0.0;
 var $424 = 0, $4240 = 0.0, $4241 = 0.0, $4242 = 0.0, $4243 = 0.0, $4244 = 0.0, $4245 = 0.0, $4246 = 0.0, $4247 = 0.0, $4248 = 0.0, $4249 = 0.0, $425 = 0, $4250 = 0.0, $4251 = 0.0, $4252 = 0.0, $4253 = 0.0, $4254 = 0.0, $4255 = 0.0, $4256 = 0.0, $4257 = 0.0;
 var $4258 = 0.0, $4259 = 0.0, $426 = 0, $4260 = 0.0, $4261 = 0.0, $4262 = 0, $4263 = 0, $4264 = 0.0, $4265 = 0.0, $4266 = 0.0, $4267 = 0.0, $4268 = 0.0, $4269 = 0.0, $427 = 0, $4270 = 0.0, $4271 = 0, $4272 = 0.0, $4273 = 0, $4274 = 0.0, $4275 = 0.0;
 var $4276 = 0.0, $4277 = 0.0, $4278 = 0.0, $4279 = 0.0, $428 = 0, $4280 = 0.0, $4281 = 0.0, $4282 = 0.0, $4283 = 0.0, $4284 = 0.0, $4285 = 0.0, $4286 = 0.0, $4287 = 0.0, $4288 = 0.0, $4289 = 0.0, $429 = 0, $4290 = 0.0, $4291 = 0.0, $4292 = 0.0, $4293 = 0.0;
 var $4294 = 0.0, $4295 = 0.0, $4296 = 0.0, $4297 = 0.0, $4298 = 0.0, $4299 = 0.0, $43 = 0, $430 = 0, $4300 = 0.0, $4301 = 0.0, $4302 = 0.0, $4303 = 0.0, $4304 = 0.0, $4305 = 0.0, $4306 = 0.0, $4307 = 0.0, $4308 = 0.0, $4309 = 0.0, $431 = 0, $4310 = 0.0;
 var $4311 = 0.0, $4312 = 0.0, $4313 = 0.0, $4314 = 0.0, $4315 = 0.0, $4316 = 0.0, $4317 = 0.0, $4318 = 0.0, $4319 = 0.0, $432 = 0, $4320 = 0.0, $4321 = 0.0, $4322 = 0.0, $4323 = 0.0, $4324 = 0.0, $4325 = 0.0, $4326 = 0.0, $4327 = 0.0, $4328 = 0.0, $4329 = 0.0;
 var $433 = 0, $4330 = 0.0, $4331 = 0.0, $4332 = 0.0, $4333 = 0.0, $4334 = 0.0, $4335 = 0.0, $4336 = 0.0, $4337 = 0.0, $4338 = 0.0, $4339 = 0.0, $434 = 0, $4340 = 0.0, $4341 = 0.0, $4342 = 0.0, $4343 = 0.0, $4344 = 0.0, $4345 = 0.0, $4346 = 0.0, $4347 = 0.0;
 var $4348 = 0.0, $4349 = 0.0, $435 = 0, $4350 = 0.0, $4351 = 0.0, $4352 = 0.0, $4353 = 0.0, $4354 = 0.0, $4355 = 0.0, $4356 = 0.0, $4357 = 0.0, $4358 = 0.0, $4359 = 0.0, $436 = 0, $4360 = 0.0, $4361 = 0.0, $4362 = 0.0, $4363 = 0.0, $4364 = 0.0, $4365 = 0.0;
 var $4366 = 0.0, $4367 = 0.0, $4368 = 0.0, $4369 = 0.0, $437 = 0, $4370 = 0.0, $4371 = 0.0, $4372 = 0.0, $4373 = 0.0, $4374 = 0, $4375 = 0.0, $4376 = 0.0, $4377 = 0.0, $4378 = 0.0, $4379 = 0.0, $438 = 0, $4380 = 0.0, $4381 = 0.0, $4382 = 0.0, $4383 = 0.0;
 var $4384 = 0.0, $4385 = 0.0, $4386 = 0.0, $4387 = 0.0, $4388 = 0, $4389 = 0.0, $439 = 0, $4390 = 0, $4391 = 0.0, $4392 = 0, $4393 = 0.0, $4394 = 0, $4395 = 0.0, $4396 = 0, $4397 = 0.0, $4398 = 0.0, $4399 = 0.0, $44 = 0, $440 = 0, $4400 = 0.0;
 var $4401 = 0.0, $4402 = 0.0, $4403 = 0.0, $4404 = 0.0, $4405 = 0.0, $4406 = 0.0, $4407 = 0.0, $4408 = 0.0, $4409 = 0.0, $441 = 0, $4410 = 0.0, $4411 = 0.0, $4412 = 0.0, $4413 = 0.0, $4414 = 0.0, $4415 = 0.0, $4416 = 0.0, $4417 = 0.0, $4418 = 0.0, $4419 = 0.0;
 var $442 = 0, $4420 = 0.0, $4421 = 0.0, $4422 = 0.0, $4423 = 0.0, $4424 = 0.0, $4425 = 0.0, $4426 = 0.0, $4427 = 0.0, $4428 = 0.0, $4429 = 0.0, $443 = 0, $4430 = 0.0, $4431 = 0.0, $4432 = 0.0, $4433 = 0.0, $4434 = 0.0, $4435 = 0.0, $4436 = 0.0, $4437 = 0.0;
 var $4438 = 0.0, $4439 = 0.0, $444 = 0, $4440 = 0.0, $4441 = 0.0, $4442 = 0.0, $4443 = 0.0, $4444 = 0.0, $4445 = 0.0, $4446 = 0.0, $4447 = 0.0, $4448 = 0.0, $4449 = 0.0, $445 = 0, $4450 = 0.0, $4451 = 0.0, $4452 = 0.0, $4453 = 0.0, $4454 = 0.0, $4455 = 0.0;
 var $4456 = 0.0, $4457 = 0, $4458 = 0, $4459 = 0.0, $446 = 0, $4460 = 0.0, $4461 = 0.0, $4462 = 0.0, $4463 = 0.0, $4464 = 0.0, $4465 = 0.0, $4466 = 0.0, $4467 = 0.0, $4468 = 0.0, $4469 = 0.0, $447 = 0, $4470 = 0.0, $4471 = 0.0, $4472 = 0.0, $4473 = 0.0;
 var $4474 = 0, $4475 = 0, $4476 = 0.0, $4477 = 0.0, $4478 = 0.0, $4479 = 0.0, $448 = 0, $4480 = 0.0, $4481 = 0.0, $4482 = 0.0, $4483 = 0, $4484 = 0.0, $4485 = 0, $4486 = 0.0, $4487 = 0.0, $4488 = 0.0, $4489 = 0.0, $449 = 0, $4490 = 0.0, $4491 = 0.0;
 var $4492 = 0.0, $4493 = 0.0, $4494 = 0.0, $4495 = 0.0, $4496 = 0.0, $4497 = 0.0, $4498 = 0.0, $4499 = 0.0, $45 = 0, $450 = 0, $4500 = 0.0, $4501 = 0.0, $4502 = 0.0, $4503 = 0.0, $4504 = 0.0, $4505 = 0.0, $4506 = 0.0, $4507 = 0.0, $4508 = 0.0, $4509 = 0.0;
 var $451 = 0, $4510 = 0.0, $4511 = 0.0, $4512 = 0.0, $4513 = 0.0, $4514 = 0.0, $4515 = 0.0, $4516 = 0.0, $4517 = 0.0, $4518 = 0.0, $4519 = 0.0, $452 = 0, $4520 = 0.0, $4521 = 0.0, $4522 = 0.0, $4523 = 0.0, $4524 = 0.0, $4525 = 0.0, $4526 = 0.0, $4527 = 0.0;
 var $4528 = 0.0, $4529 = 0.0, $453 = 0, $4530 = 0.0, $4531 = 0.0, $4532 = 0.0, $4533 = 0.0, $4534 = 0.0, $4535 = 0.0, $4536 = 0.0, $4537 = 0.0, $4538 = 0.0, $4539 = 0.0, $454 = 0, $4540 = 0.0, $4541 = 0.0, $4542 = 0.0, $4543 = 0.0, $4544 = 0.0, $4545 = 0.0;
 var $4546 = 0.0, $4547 = 0.0, $4548 = 0.0, $4549 = 0.0, $455 = 0, $4550 = 0.0, $4551 = 0.0, $4552 = 0.0, $4553 = 0.0, $4554 = 0.0, $4555 = 0.0, $4556 = 0.0, $4557 = 0.0, $4558 = 0.0, $4559 = 0.0, $456 = 0, $4560 = 0.0, $4561 = 0.0, $4562 = 0.0, $4563 = 0.0;
 var $4564 = 0.0, $4565 = 0.0, $4566 = 0.0, $4567 = 0.0, $4568 = 0.0, $4569 = 0.0, $457 = 0, $4570 = 0.0, $4571 = 0.0, $4572 = 0.0, $4573 = 0.0, $4574 = 0.0, $4575 = 0.0, $4576 = 0.0, $4577 = 0.0, $4578 = 0.0, $4579 = 0.0, $458 = 0, $4580 = 0.0, $4581 = 0.0;
 var $4582 = 0.0, $4583 = 0.0, $4584 = 0.0, $4585 = 0.0, $4586 = 0, $4587 = 0.0, $4588 = 0.0, $4589 = 0.0, $459 = 0, $4590 = 0.0, $4591 = 0.0, $4592 = 0.0, $4593 = 0.0, $4594 = 0.0, $4595 = 0.0, $4596 = 0.0, $4597 = 0.0, $4598 = 0.0, $4599 = 0.0, $46 = 0;
 var $460 = 0, $4600 = 0, $4601 = 0.0, $4602 = 0, $4603 = 0.0, $4604 = 0, $4605 = 0.0, $4606 = 0, $4607 = 0.0, $4608 = 0, $4609 = 0.0, $461 = 0, $4610 = 0.0, $4611 = 0.0, $4612 = 0.0, $4613 = 0.0, $4614 = 0.0, $4615 = 0.0, $4616 = 0.0, $4617 = 0.0;
 var $4618 = 0.0, $4619 = 0.0, $462 = 0, $4620 = 0.0, $4621 = 0.0, $4622 = 0.0, $4623 = 0.0, $4624 = 0.0, $4625 = 0.0, $4626 = 0.0, $4627 = 0.0, $4628 = 0.0, $4629 = 0.0, $463 = 0, $4630 = 0.0, $4631 = 0.0, $4632 = 0.0, $4633 = 0.0, $4634 = 0.0, $4635 = 0.0;
 var $4636 = 0.0, $4637 = 0.0, $4638 = 0.0, $4639 = 0.0, $464 = 0, $4640 = 0.0, $4641 = 0.0, $4642 = 0.0, $4643 = 0.0, $4644 = 0.0, $4645 = 0, $4646 = 0, $4647 = 0.0, $4648 = 0.0, $4649 = 0.0, $465 = 0, $4650 = 0.0, $4651 = 0.0, $4652 = 0.0, $4653 = 0.0;
 var $4654 = 0.0, $4655 = 0.0, $4656 = 0.0, $4657 = 0.0, $4658 = 0.0, $4659 = 0.0, $466 = 0, $4660 = 0.0, $4661 = 0.0, $4662 = 0.0, $4663 = 0.0, $4664 = 0.0, $4665 = 0.0, $4666 = 0.0, $4667 = 0.0, $4668 = 0.0, $4669 = 0.0, $467 = 0, $4670 = 0.0, $4671 = 0.0;
 var $4672 = 0.0, $4673 = 0.0, $4674 = 0.0, $4675 = 0.0, $4676 = 0.0, $4677 = 0, $4678 = 0, $4679 = 0.0, $468 = 0, $4680 = 0.0, $4681 = 0.0, $4682 = 0.0, $4683 = 0.0, $4684 = 0.0, $4685 = 0.0, $4686 = 0, $4687 = 0.0, $4688 = 0, $4689 = 0.0, $469 = 0;
 var $4690 = 0.0, $4691 = 0.0, $4692 = 0.0, $4693 = 0.0, $4694 = 0.0, $4695 = 0.0, $4696 = 0.0, $4697 = 0.0, $4698 = 0.0, $4699 = 0.0, $47 = 0, $470 = 0, $4700 = 0.0, $4701 = 0.0, $4702 = 0.0, $4703 = 0.0, $4704 = 0.0, $4705 = 0.0, $4706 = 0.0, $4707 = 0.0;
 var $4708 = 0.0, $4709 = 0.0, $471 = 0, $4710 = 0.0, $4711 = 0.0, $4712 = 0.0, $4713 = 0.0, $4714 = 0.0, $4715 = 0.0, $4716 = 0.0, $4717 = 0.0, $4718 = 0.0, $4719 = 0.0, $472 = 0, $4720 = 0.0, $4721 = 0.0, $4722 = 0.0, $4723 = 0.0, $4724 = 0.0, $4725 = 0.0;
 var $4726 = 0.0, $4727 = 0.0, $4728 = 0.0, $4729 = 0.0, $473 = 0, $4730 = 0.0, $4731 = 0.0, $4732 = 0.0, $4733 = 0.0, $4734 = 0.0, $4735 = 0.0, $4736 = 0.0, $4737 = 0.0, $4738 = 0.0, $4739 = 0.0, $474 = 0, $4740 = 0.0, $4741 = 0.0, $4742 = 0.0, $4743 = 0.0;
 var $4744 = 0.0, $4745 = 0.0, $4746 = 0.0, $4747 = 0.0, $4748 = 0.0, $4749 = 0.0, $475 = 0, $4750 = 0.0, $4751 = 0.0, $4752 = 0.0, $4753 = 0.0, $4754 = 0.0, $4755 = 0.0, $4756 = 0.0, $4757 = 0.0, $4758 = 0.0, $4759 = 0.0, $476 = 0, $4760 = 0.0, $4761 = 0.0;
 var $4762 = 0.0, $4763 = 0.0, $4764 = 0.0, $4765 = 0.0, $4766 = 0.0, $4767 = 0.0, $4768 = 0.0, $4769 = 0.0, $477 = 0, $4770 = 0.0, $4771 = 0.0, $4772 = 0.0, $4773 = 0.0, $4774 = 0.0, $4775 = 0.0, $4776 = 0.0, $4777 = 0.0, $4778 = 0.0, $4779 = 0.0, $478 = 0;
 var $4780 = 0.0, $4781 = 0.0, $4782 = 0.0, $4783 = 0.0, $4784 = 0.0, $4785 = 0.0, $4786 = 0.0, $4787 = 0.0, $4788 = 0.0, $4789 = 0, $479 = 0, $4790 = 0.0, $4791 = 0.0, $4792 = 0.0, $4793 = 0.0, $4794 = 0.0, $4795 = 0.0, $4796 = 0.0, $4797 = 0.0, $4798 = 0.0;
 var $4799 = 0.0, $48 = 0, $480 = 0, $4800 = 0.0, $4801 = 0.0, $4802 = 0.0, $4803 = 0, $4804 = 0.0, $4805 = 0, $4806 = 0.0, $4807 = 0, $4808 = 0.0, $4809 = 0, $481 = 0, $4810 = 0.0, $4811 = 0, $4812 = 0, $4813 = 0.0, $4814 = 0.0, $4815 = 0.0;
 var $4816 = 0.0, $4817 = 0.0, $4818 = 0.0, $4819 = 0.0, $482 = 0, $4820 = 0.0, $4821 = 0.0, $4822 = 0.0, $4823 = 0.0, $4824 = 0.0, $4825 = 0.0, $4826 = 0, $4827 = 0, $4828 = 0.0, $4829 = 0.0, $483 = 0, $4830 = 0.0, $4831 = 0.0, $4832 = 0, $4833 = 0.0;
 var $4834 = 0.0, $4835 = 0, $4836 = 0, $4837 = 0.0, $4838 = 0.0, $4839 = 0.0, $484 = 0, $4840 = 0, $4841 = 0, $4842 = 0.0, $4843 = 0.0, $4844 = 0.0, $4845 = 0.0, $4846 = 0.0, $4847 = 0.0, $4848 = 0.0, $4849 = 0.0, $485 = 0, $4850 = 0.0, $4851 = 0.0;
 var $4852 = 0.0, $4853 = 0, $4854 = 0.0, $4855 = 0, $4856 = 0.0, $4857 = 0.0, $4858 = 0, $4859 = 0.0, $486 = 0, $4860 = 0, $4861 = 0.0, $4862 = 0, $4863 = 0, $4864 = 0, $4865 = 0, $4866 = 0, $4867 = 0, $4868 = 0, $4869 = 0, $487 = 0;
 var $4870 = 0, $4871 = 0, $4872 = 0.0, $4873 = 0, $4874 = 0.0, $4875 = 0.0, $4876 = 0.0, $4877 = 0, $4878 = 0.0, $4879 = 0, $488 = 0, $4880 = 0.0, $4881 = 0.0, $4882 = 0.0, $4883 = 0, $4884 = 0, $4885 = 0, $4886 = 0.0, $4887 = 0, $4888 = 0.0;
 var $4889 = 0, $489 = 0, $4890 = 0.0, $4891 = 0.0, $4892 = 0.0, $4893 = 0.0, $4894 = 0.0, $4895 = 0.0, $4896 = 0.0, $4897 = 0.0, $4898 = 0, $4899 = 0.0, $49 = 0, $490 = 0, $4900 = 0.0, $4901 = 0, $4902 = 0.0, $4903 = 0.0, $4904 = 0.0, $4905 = 0.0;
 var $4906 = 0.0, $4907 = 0.0, $4908 = 0.0, $4909 = 0.0, $491 = 0, $4910 = 0.0, $4911 = 0.0, $4912 = 0, $4913 = 0.0, $4914 = 0.0, $4915 = 0, $4916 = 0.0, $4917 = 0.0, $4918 = 0.0, $4919 = 0.0, $492 = 0, $4920 = 0.0, $4921 = 0, $4922 = 0.0, $4923 = 0.0;
 var $4924 = 0, $4925 = 0.0, $4926 = 0.0, $4927 = 0.0, $4928 = 0.0, $4929 = 0.0, $493 = 0, $4930 = 0.0, $4931 = 0.0, $4932 = 0.0, $4933 = 0.0, $4934 = 0.0, $4935 = 0.0, $4936 = 0.0, $4937 = 0.0, $4938 = 0.0, $4939 = 0.0, $494 = 0, $4940 = 0.0, $4941 = 0.0;
 var $4942 = 0.0, $4943 = 0.0, $4944 = 0, $4945 = 0.0, $4946 = 0.0, $4947 = 0.0, $4948 = 0.0, $4949 = 0.0, $495 = 0, $4950 = 0.0, $4951 = 0.0, $4952 = 0, $4953 = 0.0, $4954 = 0, $4955 = 0.0, $4956 = 0.0, $4957 = 0.0, $4958 = 0.0, $4959 = 0.0, $496 = 0;
 var $4960 = 0.0, $4961 = 0.0, $4962 = 0.0, $4963 = 0.0, $4964 = 0.0, $4965 = 0.0, $4966 = 0.0, $4967 = 0.0, $4968 = 0.0, $4969 = 0.0, $497 = 0, $4970 = 0.0, $4971 = 0.0, $4972 = 0.0, $4973 = 0.0, $4974 = 0, $4975 = 0.0, $4976 = 0.0, $4977 = 0.0, $4978 = 0.0;
 var $4979 = 0.0, $498 = 0, $4980 = 0.0, $4981 = 0.0, $4982 = 0.0, $4983 = 0.0, $4984 = 0.0, $4985 = 0.0, $4986 = 0.0, $4987 = 0.0, $4988 = 0.0, $4989 = 0.0, $499 = 0, $4990 = 0.0, $4991 = 0.0, $4992 = 0.0, $4993 = 0, $4994 = 0.0, $4995 = 0, $4996 = 0.0;
 var $4997 = 0.0, $4998 = 0.0, $4999 = 0.0, $5 = 0, $50 = 0, $500 = 0, $5000 = 0.0, $5001 = 0.0, $5002 = 0.0, $5003 = 0.0, $5004 = 0.0, $5005 = 0.0, $5006 = 0.0, $5007 = 0.0, $5008 = 0.0, $5009 = 0.0, $501 = 0, $5010 = 0.0, $5011 = 0.0, $5012 = 0.0;
 var $5013 = 0.0, $5014 = 0.0, $5015 = 0.0, $5016 = 0, $5017 = 0.0, $5018 = 0.0, $5019 = 0.0, $502 = 0, $5020 = 0.0, $5021 = 0.0, $5022 = 0.0, $5023 = 0.0, $5024 = 0.0, $5025 = 0.0, $5026 = 0.0, $5027 = 0.0, $5028 = 0.0, $5029 = 0.0, $503 = 0, $5030 = 0.0;
 var $5031 = 0.0, $5032 = 0.0, $5033 = 0.0, $5034 = 0.0, $5035 = 0, $5036 = 0.0, $5037 = 0, $5038 = 0.0, $5039 = 0.0, $504 = 0, $5040 = 0.0, $5041 = 0.0, $5042 = 0.0, $5043 = 0.0, $5044 = 0.0, $5045 = 0.0, $5046 = 0.0, $5047 = 0.0, $5048 = 0.0, $5049 = 0.0;
 var $505 = 0, $5050 = 0.0, $5051 = 0.0, $5052 = 0.0, $5053 = 0.0, $5054 = 0.0, $5055 = 0.0, $5056 = 0, $5057 = 0.0, $5058 = 0.0, $5059 = 0.0, $506 = 0, $5060 = 0.0, $5061 = 0.0, $5062 = 0.0, $5063 = 0.0, $5064 = 0.0, $5065 = 0.0, $5066 = 0.0, $5067 = 0.0;
 var $5068 = 0.0, $5069 = 0.0, $507 = 0, $5070 = 0.0, $5071 = 0.0, $5072 = 0.0, $5073 = 0.0, $5074 = 0.0, $5075 = 0.0, $5076 = 0.0, $5077 = 0.0, $5078 = 0.0, $5079 = 0.0, $508 = 0, $5080 = 0.0, $5081 = 0.0, $5082 = 0, $5083 = 0.0, $5084 = 0, $5085 = 0.0;
 var $5086 = 0.0, $5087 = 0.0, $5088 = 0.0, $5089 = 0.0, $509 = 0, $5090 = 0.0, $5091 = 0.0, $5092 = 0.0, $5093 = 0.0, $5094 = 0, $5095 = 0.0, $5096 = 0.0, $5097 = 0.0, $5098 = 0.0, $5099 = 0.0, $51 = 0, $510 = 0, $5100 = 0.0, $5101 = 0.0, $5102 = 0.0;
 var $5103 = 0.0, $5104 = 0, $5105 = 0.0, $5106 = 0, $5107 = 0.0, $5108 = 0.0, $5109 = 0.0, $511 = 0, $5110 = 0.0, $5111 = 0.0, $5112 = 0.0, $5113 = 0.0, $5114 = 0.0, $5115 = 0.0, $5116 = 0.0, $5117 = 0.0, $5118 = 0.0, $5119 = 0.0, $512 = 0, $5120 = 0.0;
 var $5121 = 0, $5122 = 0.0, $5123 = 0.0, $5124 = 0.0, $5125 = 0.0, $5126 = 0.0, $5127 = 0.0, $5128 = 0.0, $5129 = 0.0, $513 = 0, $5130 = 0.0, $5131 = 0.0, $5132 = 0.0, $5133 = 0.0, $5134 = 0.0, $5135 = 0.0, $5136 = 0.0, $5137 = 0.0, $5138 = 0.0, $5139 = 0.0;
 var $514 = 0, $5140 = 0.0, $5141 = 0.0, $5142 = 0, $5143 = 0.0, $5144 = 0, $5145 = 0.0, $5146 = 0.0, $5147 = 0.0, $5148 = 0.0, $5149 = 0.0, $515 = 0, $5150 = 0.0, $5151 = 0.0, $5152 = 0.0, $5153 = 0.0, $5154 = 0.0, $5155 = 0.0, $5156 = 0.0, $5157 = 0.0;
 var $5158 = 0.0, $5159 = 0.0, $516 = 0, $5160 = 0.0, $5161 = 0.0, $5162 = 0.0, $5163 = 0.0, $5164 = 0.0, $5165 = 0.0, $5166 = 0.0, $5167 = 0.0, $5168 = 0.0, $5169 = 0.0, $517 = 0, $5170 = 0.0, $5171 = 0.0, $5172 = 0.0, $5173 = 0.0, $5174 = 0.0, $5175 = 0.0;
 var $5176 = 0.0, $5177 = 0.0, $5178 = 0.0, $5179 = 0.0, $518 = 0, $5180 = 0.0, $5181 = 0.0, $5182 = 0.0, $5183 = 0.0, $5184 = 0.0, $5185 = 0.0, $5186 = 0.0, $5187 = 0.0, $5188 = 0, $5189 = 0.0, $519 = 0, $5190 = 0.0, $5191 = 0.0, $5192 = 0.0, $5193 = 0.0;
 var $5194 = 0, $5195 = 0.0, $5196 = 0, $5197 = 0.0, $5198 = 0.0, $5199 = 0.0, $52 = 0, $520 = 0, $5200 = 0.0, $5201 = 0.0, $5202 = 0.0, $5203 = 0.0, $5204 = 0.0, $5205 = 0.0, $5206 = 0.0, $5207 = 0.0, $5208 = 0.0, $5209 = 0.0, $521 = 0, $5210 = 0.0;
 var $5211 = 0.0, $5212 = 0.0, $5213 = 0.0, $5214 = 0.0, $5215 = 0.0, $5216 = 0.0, $5217 = 0.0, $5218 = 0.0, $5219 = 0.0, $522 = 0, $5220 = 0.0, $5221 = 0.0, $5222 = 0.0, $5223 = 0.0, $5224 = 0.0, $5225 = 0.0, $5226 = 0.0, $5227 = 0.0, $5228 = 0.0, $5229 = 0.0;
 var $523 = 0, $5230 = 0.0, $5231 = 0.0, $5232 = 0.0, $5233 = 0.0, $5234 = 0.0, $5235 = 0.0, $5236 = 0.0, $5237 = 0.0, $5238 = 0.0, $5239 = 0, $524 = 0, $5240 = 0.0, $5241 = 0.0, $5242 = 0.0, $5243 = 0.0, $5244 = 0.0, $5245 = 0, $5246 = 0.0, $5247 = 0;
 var $5248 = 0.0, $5249 = 0.0, $525 = 0, $5250 = 0.0, $5251 = 0.0, $5252 = 0.0, $5253 = 0.0, $5254 = 0.0, $5255 = 0.0, $5256 = 0.0, $5257 = 0.0, $5258 = 0.0, $5259 = 0.0, $526 = 0, $5260 = 0.0, $5261 = 0.0, $5262 = 0.0, $5263 = 0, $5264 = 0, $5265 = 0.0;
 var $5266 = 0.0, $5267 = 0.0, $5268 = 0.0, $5269 = 0.0, $527 = 0, $5270 = 0.0, $5271 = 0.0, $5272 = 0.0, $5273 = 0.0, $5274 = 0.0, $5275 = 0.0, $5276 = 0.0, $5277 = 0.0, $5278 = 0.0, $5279 = 0.0, $528 = 0, $5280 = 0.0, $5281 = 0.0, $5282 = 0.0, $5283 = 0.0;
 var $5284 = 0.0, $5285 = 0.0, $5286 = 0.0, $5287 = 0.0, $5288 = 0.0, $5289 = 0.0, $529 = 0, $5290 = 0.0, $5291 = 0.0, $5292 = 0.0, $5293 = 0, $5294 = 0, $5295 = 0.0, $5296 = 0.0, $5297 = 0.0, $5298 = 0.0, $5299 = 0.0, $53 = 0, $530 = 0, $5300 = 0.0;
 var $5301 = 0.0, $5302 = 0, $5303 = 0.0, $5304 = 0, $5305 = 0.0, $5306 = 0.0, $5307 = 0.0, $5308 = 0.0, $5309 = 0.0, $531 = 0, $5310 = 0.0, $5311 = 0.0, $5312 = 0.0, $5313 = 0.0, $5314 = 0.0, $5315 = 0.0, $5316 = 0.0, $5317 = 0.0, $5318 = 0.0, $5319 = 0.0;
 var $532 = 0, $5320 = 0.0, $5321 = 0.0, $5322 = 0.0, $5323 = 0.0, $5324 = 0.0, $5325 = 0.0, $5326 = 0.0, $5327 = 0.0, $5328 = 0.0, $5329 = 0.0, $533 = 0, $5330 = 0.0, $5331 = 0.0, $5332 = 0.0, $5333 = 0.0, $5334 = 0.0, $5335 = 0, $5336 = 0.0, $5337 = 0.0;
 var $5338 = 0.0, $5339 = 0.0, $534 = 0, $5340 = 0.0, $5341 = 0.0, $5342 = 0.0, $5343 = 0, $5344 = 0.0, $5345 = 0, $5346 = 0.0, $5347 = 0.0, $5348 = 0.0, $5349 = 0.0, $535 = 0, $5350 = 0.0, $5351 = 0.0, $5352 = 0.0, $5353 = 0.0, $5354 = 0.0, $5355 = 0.0;
 var $5356 = 0.0, $5357 = 0.0, $5358 = 0.0, $5359 = 0, $536 = 0, $5360 = 0, $5361 = 0.0, $5362 = 0.0, $5363 = 0.0, $5364 = 0.0, $5365 = 0.0, $5366 = 0.0, $5367 = 0.0, $5368 = 0.0, $5369 = 0.0, $537 = 0, $5370 = 0.0, $5371 = 0.0, $5372 = 0.0, $5373 = 0.0;
 var $5374 = 0.0, $5375 = 0.0, $5376 = 0.0, $5377 = 0.0, $5378 = 0.0, $5379 = 0.0, $538 = 0, $5380 = 0.0, $5381 = 0.0, $5382 = 0.0, $5383 = 0.0, $5384 = 0.0, $5385 = 0.0, $5386 = 0.0, $5387 = 0.0, $5388 = 0.0, $5389 = 0.0, $539 = 0, $5390 = 0.0, $5391 = 0;
 var $5392 = 0, $5393 = 0.0, $5394 = 0.0, $5395 = 0.0, $5396 = 0.0, $5397 = 0.0, $5398 = 0.0, $5399 = 0.0, $54 = 0, $540 = 0, $5400 = 0, $5401 = 0.0, $5402 = 0, $5403 = 0.0, $5404 = 0.0, $5405 = 0.0, $5406 = 0.0, $5407 = 0.0, $5408 = 0.0, $5409 = 0.0;
 var $541 = 0, $5410 = 0.0, $5411 = 0.0, $5412 = 0.0, $5413 = 0.0, $5414 = 0.0, $5415 = 0.0, $5416 = 0.0, $5417 = 0.0, $5418 = 0.0, $5419 = 0.0, $542 = 0, $5420 = 0.0, $5421 = 0.0, $5422 = 0.0, $5423 = 0.0, $5424 = 0.0, $5425 = 0.0, $5426 = 0.0, $5427 = 0.0;
 var $5428 = 0.0, $5429 = 0.0, $543 = 0, $5430 = 0.0, $5431 = 0.0, $5432 = 0.0, $5433 = 0, $5434 = 0.0, $5435 = 0.0, $5436 = 0.0, $5437 = 0.0, $5438 = 0.0, $5439 = 0.0, $544 = 0, $5440 = 0.0, $5441 = 0, $5442 = 0.0, $5443 = 0, $5444 = 0.0, $5445 = 0.0;
 var $5446 = 0.0, $5447 = 0.0, $5448 = 0.0, $5449 = 0.0, $545 = 0, $5450 = 0.0, $5451 = 0.0, $5452 = 0.0, $5453 = 0.0, $5454 = 0.0, $5455 = 0, $5456 = 0, $5457 = 0.0, $5458 = 0.0, $5459 = 0.0, $546 = 0, $5460 = 0.0, $5461 = 0.0, $5462 = 0.0, $5463 = 0.0;
 var $5464 = 0.0, $5465 = 0.0, $5466 = 0.0, $5467 = 0.0, $5468 = 0.0, $5469 = 0.0, $547 = 0, $5470 = 0.0, $5471 = 0.0, $5472 = 0.0, $5473 = 0.0, $5474 = 0.0, $5475 = 0.0, $5476 = 0.0, $5477 = 0.0, $5478 = 0.0, $5479 = 0.0, $548 = 0, $5480 = 0.0, $5481 = 0.0;
 var $5482 = 0.0, $5483 = 0, $5484 = 0, $5485 = 0.0, $5486 = 0.0, $5487 = 0.0, $5488 = 0.0, $5489 = 0.0, $549 = 0, $5490 = 0.0, $5491 = 0.0, $5492 = 0, $5493 = 0.0, $5494 = 0, $5495 = 0.0, $5496 = 0.0, $5497 = 0.0, $5498 = 0.0, $5499 = 0.0, $55 = 0;
 var $550 = 0, $5500 = 0.0, $5501 = 0.0, $5502 = 0.0, $5503 = 0.0, $5504 = 0.0, $5505 = 0.0, $5506 = 0.0, $5507 = 0.0, $5508 = 0.0, $5509 = 0.0, $551 = 0, $5510 = 0.0, $5511 = 0.0, $5512 = 0.0, $5513 = 0.0, $5514 = 0.0, $5515 = 0.0, $5516 = 0.0, $5517 = 0.0;
 var $5518 = 0.0, $5519 = 0.0, $552 = 0, $5520 = 0.0, $5521 = 0.0, $5522 = 0.0, $5523 = 0.0, $5524 = 0.0, $5525 = 0, $5526 = 0.0, $5527 = 0.0, $5528 = 0.0, $5529 = 0.0, $553 = 0, $5530 = 0.0, $5531 = 0.0, $5532 = 0.0, $5533 = 0, $5534 = 0.0, $5535 = 0;
 var $5536 = 0.0, $5537 = 0.0, $5538 = 0.0, $5539 = 0.0, $554 = 0, $5540 = 0.0, $5541 = 0.0, $5542 = 0.0, $5543 = 0.0, $5544 = 0, $5545 = 0.0, $5546 = 0.0, $5547 = 0.0, $5548 = 0.0, $5549 = 0.0, $555 = 0, $5550 = 0.0, $5551 = 0.0, $5552 = 0.0, $5553 = 0.0;
 var $5554 = 0, $5555 = 0.0, $5556 = 0, $5557 = 0.0, $5558 = 0.0, $5559 = 0.0, $556 = 0, $5560 = 0.0, $5561 = 0.0, $5562 = 0.0, $5563 = 0.0, $5564 = 0.0, $5565 = 0.0, $5566 = 0.0, $5567 = 0.0, $5568 = 0.0, $5569 = 0.0, $557 = 0, $5570 = 0.0, $5571 = 0;
 var $5572 = 0.0, $5573 = 0.0, $5574 = 0.0, $5575 = 0.0, $5576 = 0.0, $5577 = 0.0, $5578 = 0.0, $5579 = 0.0, $558 = 0, $5580 = 0.0, $5581 = 0.0, $5582 = 0.0, $5583 = 0.0, $5584 = 0.0, $5585 = 0.0, $5586 = 0.0, $5587 = 0.0, $5588 = 0.0, $5589 = 0.0, $559 = 0;
 var $5590 = 0.0, $5591 = 0.0, $5592 = 0, $5593 = 0.0, $5594 = 0, $5595 = 0.0, $5596 = 0.0, $5597 = 0.0, $5598 = 0.0, $5599 = 0.0, $56 = 0, $560 = 0, $5600 = 0.0, $5601 = 0.0, $5602 = 0.0, $5603 = 0.0, $5604 = 0.0, $5605 = 0.0, $5606 = 0.0, $5607 = 0.0;
 var $5608 = 0.0, $5609 = 0.0, $561 = 0, $5610 = 0.0, $5611 = 0.0, $5612 = 0.0, $5613 = 0.0, $5614 = 0.0, $5615 = 0.0, $5616 = 0.0, $5617 = 0.0, $5618 = 0.0, $5619 = 0.0, $562 = 0, $5620 = 0.0, $5621 = 0.0, $5622 = 0.0, $5623 = 0.0, $5624 = 0.0, $5625 = 0.0;
 var $5626 = 0.0, $5627 = 0.0, $5628 = 0.0, $5629 = 0.0, $563 = 0, $5630 = 0.0, $5631 = 0.0, $5632 = 0.0, $5633 = 0.0, $5634 = 0.0, $5635 = 0.0, $5636 = 0.0, $5637 = 0.0, $5638 = 0.0, $5639 = 0, $564 = 0, $5640 = 0.0, $5641 = 0.0, $5642 = 0.0, $5643 = 0.0;
 var $5644 = 0.0, $5645 = 0, $5646 = 0.0, $5647 = 0, $5648 = 0.0, $5649 = 0.0, $565 = 0, $5650 = 0.0, $5651 = 0.0, $5652 = 0.0, $5653 = 0.0, $5654 = 0.0, $5655 = 0.0, $5656 = 0.0, $5657 = 0.0, $5658 = 0.0, $5659 = 0.0, $566 = 0, $5660 = 0.0, $5661 = 0.0;
 var $5662 = 0.0, $5663 = 0.0, $5664 = 0.0, $5665 = 0.0, $5666 = 0.0, $5667 = 0.0, $5668 = 0.0, $5669 = 0.0, $567 = 0, $5670 = 0.0, $5671 = 0.0, $5672 = 0.0, $5673 = 0.0, $5674 = 0.0, $5675 = 0.0, $5676 = 0.0, $5677 = 0.0, $5678 = 0.0, $5679 = 0.0, $568 = 0;
 var $5680 = 0.0, $5681 = 0.0, $5682 = 0.0, $5683 = 0.0, $5684 = 0.0, $5685 = 0.0, $5686 = 0.0, $5687 = 0.0, $5688 = 0.0, $5689 = 0.0, $569 = 0, $5690 = 0, $5691 = 0.0, $5692 = 0.0, $5693 = 0.0, $5694 = 0.0, $5695 = 0.0, $5696 = 0, $5697 = 0.0, $5698 = 0;
 var $5699 = 0.0, $57 = 0, $570 = 0, $5700 = 0.0, $5701 = 0.0, $5702 = 0.0, $5703 = 0.0, $5704 = 0.0, $5705 = 0.0, $5706 = 0.0, $5707 = 0.0, $5708 = 0.0, $5709 = 0.0, $571 = 0, $5710 = 0.0, $5711 = 0.0, $5712 = 0.0, $5713 = 0.0, $5714 = 0.0, $5715 = 0.0;
 var $5716 = 0.0, $5717 = 0.0, $5718 = 0.0, $5719 = 0.0, $572 = 0, $5720 = 0.0, $5721 = 0.0, $5722 = 0.0, $5723 = 0.0, $5724 = 0.0, $5725 = 0.0, $5726 = 0.0, $5727 = 0.0, $5728 = 0.0, $5729 = 0.0, $573 = 0, $5730 = 0.0, $5731 = 0.0, $5732 = 0.0, $5733 = 0.0;
 var $5734 = 0, $5735 = 0, $5736 = 0.0, $5737 = 0.0, $5738 = 0.0, $5739 = 0.0, $574 = 0, $5740 = 0.0, $5741 = 0.0, $5742 = 0.0, $5743 = 0, $5744 = 0, $5745 = 0.0, $5746 = 0.0, $5747 = 0.0, $5748 = 0.0, $5749 = 0.0, $575 = 0, $5750 = 0.0, $5751 = 0.0;
 var $5752 = 0, $5753 = 0.0, $5754 = 0, $5755 = 0.0, $5756 = 0.0, $5757 = 0.0, $5758 = 0.0, $5759 = 0.0, $576 = 0, $5760 = 0.0, $5761 = 0.0, $5762 = 0.0, $5763 = 0.0, $5764 = 0.0, $5765 = 0.0, $5766 = 0.0, $5767 = 0.0, $5768 = 0.0, $5769 = 0.0, $577 = 0;
 var $5770 = 0.0, $5771 = 0.0, $5772 = 0.0, $5773 = 0.0, $5774 = 0.0, $5775 = 0.0, $5776 = 0.0, $5777 = 0.0, $5778 = 0.0, $5779 = 0.0, $578 = 0, $5780 = 0.0, $5781 = 0.0, $5782 = 0.0, $5783 = 0.0, $5784 = 0.0, $5785 = 0.0, $5786 = 0, $5787 = 0.0, $5788 = 0.0;
 var $5789 = 0.0, $579 = 0, $5790 = 0.0, $5791 = 0.0, $5792 = 0.0, $5793 = 0.0, $5794 = 0.0, $5795 = 0, $5796 = 0.0, $5797 = 0, $5798 = 0.0, $5799 = 0.0, $58 = 0, $580 = 0, $5800 = 0.0, $5801 = 0.0, $5802 = 0.0, $5803 = 0.0, $5804 = 0.0, $5805 = 0.0;
 var $5806 = 0.0, $5807 = 0.0, $5808 = 0.0, $5809 = 0.0, $581 = 0, $5810 = 0.0, $5811 = 0.0, $5812 = 0.0, $5813 = 0.0, $5814 = 0.0, $5815 = 0.0, $5816 = 0.0, $5817 = 0.0, $5818 = 0.0, $5819 = 0.0, $582 = 0, $5820 = 0.0, $5821 = 0.0, $5822 = 0.0, $5823 = 0.0;
 var $5824 = 0.0, $5825 = 0.0, $5826 = 0.0, $5827 = 0.0, $5828 = 0.0, $5829 = 0.0, $583 = 0, $5830 = 0.0, $5831 = 0.0, $5832 = 0.0, $5833 = 0.0, $5834 = 0.0, $5835 = 0, $5836 = 0, $5837 = 0.0, $5838 = 0.0, $5839 = 0.0, $584 = 0, $5840 = 0.0, $5841 = 0.0;
 var $5842 = 0.0, $5843 = 0.0, $5844 = 0, $5845 = 0, $5846 = 0.0, $5847 = 0.0, $5848 = 0.0, $5849 = 0.0, $585 = 0, $5850 = 0.0, $5851 = 0.0, $5852 = 0.0, $5853 = 0, $5854 = 0.0, $5855 = 0, $5856 = 0.0, $5857 = 0.0, $5858 = 0.0, $5859 = 0.0, $586 = 0;
 var $5860 = 0.0, $5861 = 0.0, $5862 = 0.0, $5863 = 0.0, $5864 = 0.0, $5865 = 0.0, $5866 = 0.0, $5867 = 0.0, $5868 = 0.0, $5869 = 0.0, $587 = 0, $5870 = 0.0, $5871 = 0.0, $5872 = 0.0, $5873 = 0.0, $5874 = 0.0, $5875 = 0.0, $5876 = 0.0, $5877 = 0.0, $5878 = 0.0;
 var $5879 = 0.0, $588 = 0, $5880 = 0.0, $5881 = 0.0, $5882 = 0.0, $5883 = 0.0, $5884 = 0.0, $5885 = 0.0, $5886 = 0.0, $5887 = 0, $5888 = 0.0, $5889 = 0.0, $589 = 0, $5890 = 0.0, $5891 = 0.0, $5892 = 0.0, $5893 = 0.0, $5894 = 0.0, $5895 = 0.0, $5896 = 0;
 var $5897 = 0.0, $5898 = 0, $5899 = 0.0, $59 = 0, $590 = 0, $5900 = 0.0, $5901 = 0.0, $5902 = 0.0, $5903 = 0.0, $5904 = 0.0, $5905 = 0.0, $5906 = 0.0, $5907 = 0.0, $5908 = 0.0, $5909 = 0.0, $591 = 0, $5910 = 0, $5911 = 0, $5912 = 0.0, $5913 = 0.0;
 var $5914 = 0.0, $5915 = 0.0, $5916 = 0.0, $5917 = 0.0, $5918 = 0.0, $5919 = 0.0, $592 = 0, $5920 = 0.0, $5921 = 0.0, $5922 = 0.0, $5923 = 0.0, $5924 = 0.0, $5925 = 0.0, $5926 = 0.0, $5927 = 0.0, $5928 = 0.0, $5929 = 0.0, $593 = 0, $5930 = 0.0, $5931 = 0.0;
 var $5932 = 0.0, $5933 = 0.0, $5934 = 0.0, $5935 = 0.0, $5936 = 0.0, $5937 = 0.0, $5938 = 0, $5939 = 0, $594 = 0, $5940 = 0.0, $5941 = 0.0, $5942 = 0.0, $5943 = 0.0, $5944 = 0.0, $5945 = 0.0, $5946 = 0.0, $5947 = 0, $5948 = 0.0, $5949 = 0, $595 = 0;
 var $5950 = 0.0, $5951 = 0.0, $5952 = 0.0, $5953 = 0.0, $5954 = 0.0, $5955 = 0.0, $5956 = 0.0, $5957 = 0.0, $5958 = 0.0, $5959 = 0.0, $596 = 0, $5960 = 0.0, $5961 = 0.0, $5962 = 0.0, $5963 = 0.0, $5964 = 0.0, $5965 = 0.0, $5966 = 0.0, $5967 = 0.0, $5968 = 0.0;
 var $5969 = 0.0, $597 = 0, $5970 = 0.0, $5971 = 0.0, $5972 = 0.0, $5973 = 0.0, $5974 = 0.0, $5975 = 0.0, $5976 = 0.0, $5977 = 0.0, $5978 = 0.0, $5979 = 0.0, $598 = 0, $5980 = 0.0, $5981 = 0, $5982 = 0.0, $5983 = 0.0, $5984 = 0.0, $5985 = 0.0, $5986 = 0.0;
 var $5987 = 0.0, $5988 = 0.0, $5989 = 0.0, $599 = 0, $5990 = 0, $5991 = 0.0, $5992 = 0, $5993 = 0.0, $5994 = 0.0, $5995 = 0.0, $5996 = 0.0, $5997 = 0.0, $5998 = 0.0, $5999 = 0.0, $6 = 0, $60 = 0, $600 = 0, $6000 = 0.0, $6001 = 0.0, $6002 = 0.0;
 var $6003 = 0.0, $6004 = 0, $6005 = 0.0, $6006 = 0.0, $6007 = 0.0, $6008 = 0, $6009 = 0.0, $601 = 0, $6010 = 0, $6011 = 0.0, $6012 = 0.0, $6013 = 0.0, $6014 = 0.0, $6015 = 0.0, $6016 = 0.0, $6017 = 0.0, $6018 = 0.0, $6019 = 0.0, $602 = 0, $6020 = 0.0;
 var $6021 = 0.0, $6022 = 0.0, $6023 = 0.0, $6024 = 0.0, $6025 = 0.0, $6026 = 0.0, $6027 = 0.0, $6028 = 0.0, $6029 = 0.0, $603 = 0, $6030 = 0.0, $6031 = 0.0, $6032 = 0.0, $6033 = 0.0, $6034 = 0.0, $6035 = 0.0, $6036 = 0.0, $6037 = 0.0, $6038 = 0.0, $6039 = 0.0;
 var $604 = 0, $6040 = 0.0, $6041 = 0.0, $6042 = 0.0, $6043 = 0.0, $6044 = 0.0, $6045 = 0.0, $6046 = 0.0, $6047 = 0.0, $6048 = 0.0, $6049 = 0.0, $605 = 0, $6050 = 0.0, $6051 = 0.0, $6052 = 0.0, $6053 = 0.0, $6054 = 0.0, $6055 = 0.0, $6056 = 0.0, $6057 = 0.0;
 var $6058 = 0.0, $6059 = 0.0, $606 = 0, $6060 = 0.0, $6061 = 0.0, $6062 = 0.0, $6063 = 0.0, $6064 = 0.0, $6065 = 0.0, $6066 = 0, $6067 = 0.0, $6068 = 0.0, $6069 = 0.0, $607 = 0, $6070 = 0.0, $6071 = 0.0, $6072 = 0, $6073 = 0.0, $6074 = 0, $6075 = 0.0;
 var $6076 = 0.0, $6077 = 0.0, $6078 = 0.0, $6079 = 0.0, $608 = 0, $6080 = 0.0, $6081 = 0.0, $6082 = 0.0, $6083 = 0.0, $6084 = 0.0, $6085 = 0.0, $6086 = 0.0, $6087 = 0.0, $6088 = 0.0, $6089 = 0.0, $609 = 0, $6090 = 0.0, $6091 = 0.0, $6092 = 0.0, $6093 = 0.0;
 var $6094 = 0.0, $6095 = 0.0, $6096 = 0.0, $6097 = 0.0, $6098 = 0.0, $6099 = 0.0, $61 = 0, $610 = 0, $6100 = 0.0, $6101 = 0.0, $6102 = 0.0, $6103 = 0.0, $6104 = 0.0, $6105 = 0.0, $6106 = 0.0, $6107 = 0.0, $6108 = 0.0, $6109 = 0.0, $611 = 0, $6110 = 0.0;
 var $6111 = 0.0, $6112 = 0.0, $6113 = 0.0, $6114 = 0.0, $6115 = 0.0, $6116 = 0.0, $6117 = 0.0, $6118 = 0.0, $6119 = 0.0, $612 = 0, $6120 = 0.0, $6121 = 0.0, $6122 = 0.0, $6123 = 0.0, $6124 = 0.0, $6125 = 0.0, $6126 = 0.0, $6127 = 0.0, $6128 = 0.0, $6129 = 0;
 var $613 = 0, $6130 = 0.0, $6131 = 0, $6132 = 0.0, $6133 = 0, $6134 = 0.0, $6135 = 0, $6136 = 0.0, $6137 = 0.0, $6138 = 0.0, $6139 = 0.0, $614 = 0, $6140 = 0.0, $6141 = 0.0, $6142 = 0.0, $6143 = 0.0, $6144 = 0, $6145 = 0.0, $6146 = 0.0, $6147 = 0.0;
 var $6148 = 0.0, $6149 = 0.0, $615 = 0, $6150 = 0, $6151 = 0.0, $6152 = 0, $6153 = 0.0, $6154 = 0.0, $6155 = 0.0, $6156 = 0.0, $6157 = 0.0, $6158 = 0.0, $6159 = 0.0, $616 = 0, $6160 = 0.0, $6161 = 0.0, $6162 = 0.0, $6163 = 0.0, $6164 = 0.0, $6165 = 0.0;
 var $6166 = 0.0, $6167 = 0.0, $6168 = 0.0, $6169 = 0.0, $617 = 0, $6170 = 0.0, $6171 = 0.0, $6172 = 0.0, $6173 = 0.0, $6174 = 0.0, $6175 = 0.0, $6176 = 0.0, $6177 = 0.0, $6178 = 0.0, $6179 = 0.0, $618 = 0, $6180 = 0.0, $6181 = 0.0, $6182 = 0.0, $6183 = 0.0;
 var $6184 = 0.0, $6185 = 0.0, $6186 = 0.0, $6187 = 0.0, $6188 = 0.0, $6189 = 0.0, $619 = 0, $6190 = 0.0, $6191 = 0.0, $6192 = 0.0, $6193 = 0.0, $6194 = 0.0, $6195 = 0.0, $6196 = 0.0, $6197 = 0.0, $6198 = 0.0, $6199 = 0.0, $62 = 0, $620 = 0, $6200 = 0.0;
 var $6201 = 0.0, $6202 = 0.0, $6203 = 0.0, $6204 = 0.0, $6205 = 0.0, $6206 = 0, $6207 = 0.0, $6208 = 0.0, $6209 = 0.0, $621 = 0, $6210 = 0.0, $6211 = 0, $6212 = 0.0, $6213 = 0, $6214 = 0.0, $6215 = 0.0, $6216 = 0.0, $6217 = 0.0, $6218 = 0.0, $6219 = 0.0;
 var $622 = 0, $6220 = 0.0, $6221 = 0.0, $6222 = 0, $6223 = 0, $6224 = 0.0, $6225 = 0.0, $6226 = 0.0, $6227 = 0.0, $6228 = 0, $6229 = 0, $623 = 0, $6230 = 0.0, $6231 = 0.0, $6232 = 0.0, $6233 = 0.0, $6234 = 0.0, $6235 = 0.0, $6236 = 0.0, $6237 = 0;
 var $6238 = 0.0, $6239 = 0, $624 = 0, $6240 = 0.0, $6241 = 0.0, $6242 = 0.0, $6243 = 0.0, $6244 = 0.0, $6245 = 0.0, $6246 = 0.0, $6247 = 0.0, $6248 = 0.0, $6249 = 0.0, $625 = 0, $6250 = 0.0, $6251 = 0.0, $6252 = 0.0, $6253 = 0.0, $6254 = 0.0, $6255 = 0.0;
 var $6256 = 0.0, $6257 = 0, $6258 = 0.0, $6259 = 0.0, $626 = 0, $6260 = 0.0, $6261 = 0.0, $6262 = 0, $6263 = 0.0, $6264 = 0, $6265 = 0.0, $6266 = 0.0, $6267 = 0.0, $6268 = 0.0, $6269 = 0.0, $627 = 0, $6270 = 0.0, $6271 = 0.0, $6272 = 0.0, $6273 = 0.0;
 var $6274 = 0, $6275 = 0.0, $6276 = 0.0, $6277 = 0.0, $6278 = 0.0, $6279 = 0.0, $628 = 0, $6280 = 0, $6281 = 0.0, $6282 = 0, $6283 = 0.0, $6284 = 0, $6285 = 0.0, $6286 = 0.0, $6287 = 0.0, $6288 = 0.0, $6289 = 0.0, $629 = 0, $6290 = 0.0, $6291 = 0.0;
 var $6292 = 0.0, $6293 = 0.0, $6294 = 0.0, $6295 = 0.0, $6296 = 0.0, $6297 = 0.0, $6298 = 0.0, $6299 = 0.0, $63 = 0, $630 = 0, $6300 = 0.0, $6301 = 0.0, $6302 = 0.0, $6303 = 0.0, $6304 = 0.0, $6305 = 0.0, $6306 = 0.0, $6307 = 0.0, $6308 = 0.0, $6309 = 0.0;
 var $631 = 0, $6310 = 0.0, $6311 = 0.0, $6312 = 0.0, $6313 = 0.0, $6314 = 0.0, $6315 = 0.0, $6316 = 0.0, $6317 = 0.0, $6318 = 0.0, $6319 = 0.0, $632 = 0, $6320 = 0.0, $6321 = 0.0, $6322 = 0.0, $6323 = 0.0, $6324 = 0.0, $6325 = 0.0, $6326 = 0.0, $6327 = 0.0;
 var $6328 = 0.0, $6329 = 0.0, $633 = 0, $6330 = 0.0, $6331 = 0.0, $6332 = 0.0, $6333 = 0.0, $6334 = 0.0, $6335 = 0.0, $6336 = 0.0, $6337 = 0.0, $6338 = 0, $6339 = 0.0, $634 = 0, $6340 = 0.0, $6341 = 0.0, $6342 = 0.0, $6343 = 0, $6344 = 0.0, $6345 = 0;
 var $6346 = 0.0, $6347 = 0.0, $6348 = 0.0, $6349 = 0.0, $635 = 0, $6350 = 0.0, $6351 = 0.0, $6352 = 0.0, $6353 = 0.0, $6354 = 0, $6355 = 0, $6356 = 0.0, $6357 = 0.0, $6358 = 0.0, $6359 = 0.0, $636 = 0, $6360 = 0, $6361 = 0, $6362 = 0.0, $6363 = 0.0;
 var $6364 = 0.0, $6365 = 0.0, $6366 = 0.0, $6367 = 0.0, $6368 = 0.0, $6369 = 0, $637 = 0, $6370 = 0.0, $6371 = 0, $6372 = 0.0, $6373 = 0.0, $6374 = 0.0, $6375 = 0.0, $6376 = 0.0, $6377 = 0.0, $6378 = 0.0, $6379 = 0.0, $638 = 0, $6380 = 0.0, $6381 = 0.0;
 var $6382 = 0.0, $6383 = 0.0, $6384 = 0.0, $6385 = 0.0, $6386 = 0.0, $6387 = 0.0, $6388 = 0.0, $6389 = 0, $639 = 0, $6390 = 0.0, $6391 = 0.0, $6392 = 0.0, $6393 = 0.0, $6394 = 0, $6395 = 0.0, $6396 = 0, $6397 = 0.0, $6398 = 0.0, $6399 = 0.0, $64 = 0;
 var $640 = 0, $6400 = 0.0, $6401 = 0.0, $6402 = 0.0, $6403 = 0.0, $6404 = 0.0, $6405 = 0.0, $6406 = 0.0, $6407 = 0, $6408 = 0, $6409 = 0.0, $641 = 0, $6410 = 0.0, $6411 = 0.0, $6412 = 0.0, $6413 = 0, $6414 = 0, $6415 = 0.0, $6416 = 0.0, $6417 = 0.0;
 var $6418 = 0.0, $6419 = 0.0, $642 = 0, $6420 = 0.0, $6421 = 0.0, $6422 = 0, $6423 = 0.0, $6424 = 0, $6425 = 0.0, $6426 = 0.0, $6427 = 0.0, $6428 = 0.0, $6429 = 0.0, $643 = 0, $6430 = 0.0, $6431 = 0.0, $6432 = 0.0, $6433 = 0.0, $6434 = 0.0, $6435 = 0.0;
 var $6436 = 0.0, $6437 = 0.0, $6438 = 0.0, $6439 = 0.0, $644 = 0, $6440 = 0.0, $6441 = 0.0, $6442 = 0.0, $6443 = 0.0, $6444 = 0.0, $6445 = 0.0, $6446 = 0.0, $6447 = 0.0, $6448 = 0.0, $6449 = 0.0, $645 = 0, $6450 = 0.0, $6451 = 0.0, $6452 = 0, $6453 = 0.0;
 var $6454 = 0.0, $6455 = 0.0, $6456 = 0.0, $6457 = 0.0, $6458 = 0, $6459 = 0.0, $646 = 0, $6460 = 0, $6461 = 0.0, $6462 = 0, $6463 = 0.0, $6464 = 0.0, $6465 = 0.0, $6466 = 0.0, $6467 = 0.0, $6468 = 0.0, $6469 = 0, $647 = 0, $6470 = 0, $6471 = 0.0;
 var $6472 = 0.0, $6473 = 0.0, $6474 = 0.0, $6475 = 0.0, $6476 = 0.0, $6477 = 0.0, $6478 = 0.0, $6479 = 0, $648 = 0, $6480 = 0, $6481 = 0.0, $6482 = 0.0, $6483 = 0.0, $6484 = 0.0, $6485 = 0.0, $6486 = 0.0, $6487 = 0.0, $6488 = 0, $6489 = 0.0, $649 = 0;
 var $6490 = 0, $6491 = 0.0, $6492 = 0.0, $6493 = 0.0, $6494 = 0.0, $6495 = 0.0, $6496 = 0.0, $6497 = 0.0, $6498 = 0.0, $6499 = 0.0, $65 = 0, $650 = 0, $6500 = 0.0, $6501 = 0.0, $6502 = 0.0, $6503 = 0.0, $6504 = 0.0, $6505 = 0.0, $6506 = 0.0, $6507 = 0.0;
 var $6508 = 0.0, $6509 = 0.0, $651 = 0, $6510 = 0.0, $6511 = 0.0, $6512 = 0.0, $6513 = 0.0, $6514 = 0.0, $6515 = 0.0, $6516 = 0.0, $6517 = 0.0, $6518 = 0, $6519 = 0.0, $652 = 0, $6520 = 0.0, $6521 = 0.0, $6522 = 0.0, $6523 = 0.0, $6524 = 0, $6525 = 0.0;
 var $6526 = 0, $6527 = 0.0, $6528 = 0, $6529 = 0.0, $653 = 0, $6530 = 0.0, $6531 = 0.0, $6532 = 0.0, $6533 = 0.0, $6534 = 0.0, $6535 = 0.0, $6536 = 0.0, $6537 = 0.0, $6538 = 0.0, $6539 = 0.0, $654 = 0, $6540 = 0.0, $6541 = 0.0, $6542 = 0.0, $6543 = 0;
 var $6544 = 0.0, $6545 = 0.0, $6546 = 0.0, $6547 = 0, $6548 = 0.0, $6549 = 0, $655 = 0, $6550 = 0.0, $6551 = 0.0, $6552 = 0.0, $6553 = 0.0, $6554 = 0.0, $6555 = 0.0, $6556 = 0, $6557 = 0.0, $6558 = 0.0, $6559 = 0.0, $656 = 0, $6560 = 0.0, $6561 = 0.0;
 var $6562 = 0, $6563 = 0.0, $6564 = 0.0, $6565 = 0.0, $6566 = 0.0, $6567 = 0, $6568 = 0, $6569 = 0.0, $657 = 0, $6570 = 0.0, $6571 = 0.0, $6572 = 0.0, $6573 = 0.0, $6574 = 0.0, $6575 = 0.0, $6576 = 0.0, $6577 = 0.0, $6578 = 0, $6579 = 0.0, $658 = 0;
 var $6580 = 0, $6581 = 0.0, $6582 = 0.0, $6583 = 0, $6584 = 0.0, $6585 = 0, $6586 = 0.0, $6587 = 0, $6588 = 0, $6589 = 0, $659 = 0, $6590 = 0, $6591 = 0.0, $6592 = 0.0, $6593 = 0.0, $6594 = 0.0, $6595 = 0, $6596 = 0.0, $6597 = 0.0, $6598 = 0.0;
 var $6599 = 0.0, $66 = 0, $660 = 0, $6600 = 0, $6601 = 0.0, $6602 = 0.0, $6603 = 0.0, $6604 = 0.0, $6605 = 0.0, $6606 = 0.0, $6607 = 0.0, $6608 = 0.0, $6609 = 0.0, $661 = 0, $6610 = 0.0, $6611 = 0.0, $6612 = 0.0, $6613 = 0, $6614 = 0.0, $6615 = 0.0;
 var $6616 = 0.0, $6617 = 0.0, $6618 = 0, $6619 = 0, $662 = 0, $6620 = 0, $6621 = 0.0, $6622 = 0.0, $6623 = 0, $6624 = 0, $6625 = 0.0, $6626 = 0.0, $6627 = 0.0, $6628 = 0.0, $6629 = 0.0, $663 = 0, $6630 = 0.0, $6631 = 0.0, $6632 = 0.0, $6633 = 0.0;
 var $6634 = 0, $6635 = 0.0, $6636 = 0, $6637 = 0.0, $6638 = 0.0, $6639 = 0, $664 = 0, $6640 = 0.0, $6641 = 0, $6642 = 0.0, $6643 = 0, $6644 = 0, $6645 = 0, $6646 = 0, $6647 = 0.0, $6648 = 0.0, $6649 = 0.0, $665 = 0, $6650 = 0.0, $6651 = 0;
 var $6652 = 0.0, $6653 = 0.0, $6654 = 0.0, $6655 = 0.0, $6656 = 0, $6657 = 0.0, $6658 = 0.0, $6659 = 0.0, $666 = 0, $6660 = 0.0, $6661 = 0.0, $6662 = 0.0, $6663 = 0.0, $6664 = 0.0, $6665 = 0.0, $6666 = 0.0, $6667 = 0.0, $6668 = 0.0, $6669 = 0, $667 = 0;
 var $6670 = 0.0, $6671 = 0.0, $6672 = 0.0, $6673 = 0.0, $6674 = 0, $6675 = 0, $6676 = 0, $6677 = 0.0, $6678 = 0.0, $6679 = 0.0, $668 = 0, $6680 = 0.0, $6681 = 0.0, $6682 = 0.0, $6683 = 0.0, $6684 = 0.0, $6685 = 0.0, $6686 = 0.0, $6687 = 0.0, $6688 = 0.0;
 var $6689 = 0.0, $669 = 0, $6690 = 0, $6691 = 0.0, $6692 = 0.0, $6693 = 0.0, $6694 = 0, $6695 = 0.0, $6696 = 0, $6697 = 0.0, $6698 = 0.0, $6699 = 0.0, $67 = 0, $670 = 0, $6700 = 0.0, $6701 = 0.0, $6702 = 0.0, $6703 = 0, $6704 = 0.0, $6705 = 0.0;
 var $6706 = 0.0, $6707 = 0.0, $6708 = 0.0, $6709 = 0, $671 = 0, $6710 = 0.0, $6711 = 0.0, $6712 = 0.0, $6713 = 0.0, $6714 = 0, $6715 = 0, $6716 = 0.0, $6717 = 0.0, $6718 = 0.0, $6719 = 0.0, $672 = 0, $6720 = 0.0, $6721 = 0.0, $6722 = 0.0, $6723 = 0.0;
 var $6724 = 0.0, $6725 = 0, $6726 = 0.0, $6727 = 0, $6728 = 0.0, $6729 = 0.0, $673 = 0, $6730 = 0, $6731 = 0.0, $6732 = 0, $6733 = 0.0, $6734 = 0, $6735 = 0, $6736 = 0, $6737 = 0, $6738 = 0.0, $6739 = 0.0, $674 = 0, $6740 = 0.0, $6741 = 0.0;
 var $6742 = 0, $6743 = 0.0, $6744 = 0.0, $6745 = 0.0, $6746 = 0.0, $6747 = 0, $6748 = 0.0, $6749 = 0.0, $675 = 0, $6750 = 0.0, $6751 = 0.0, $6752 = 0.0, $6753 = 0.0, $6754 = 0.0, $6755 = 0.0, $6756 = 0.0, $6757 = 0.0, $6758 = 0.0, $6759 = 0.0, $676 = 0;
 var $6760 = 0.0, $6761 = 0, $6762 = 0.0, $6763 = 0.0, $6764 = 0.0, $6765 = 0.0, $6766 = 0, $6767 = 0, $6768 = 0, $6769 = 0.0, $677 = 0, $6770 = 0.0, $6771 = 0.0, $6772 = 0, $6773 = 0, $6774 = 0.0, $6775 = 0.0, $6776 = 0.0, $6777 = 0.0, $6778 = 0.0;
 var $6779 = 0.0, $678 = 0, $6780 = 0.0, $6781 = 0.0, $6782 = 0.0, $6783 = 0, $6784 = 0.0, $6785 = 0, $6786 = 0.0, $6787 = 0.0, $6788 = 0, $6789 = 0.0, $679 = 0, $6790 = 0, $6791 = 0.0, $6792 = 0, $6793 = 0, $6794 = 0, $6795 = 0, $6796 = 0.0;
 var $6797 = 0.0, $6798 = 0.0, $6799 = 0.0, $68 = 0, $680 = 0, $6800 = 0, $6801 = 0.0, $6802 = 0.0, $6803 = 0.0, $6804 = 0.0, $6805 = 0, $6806 = 0.0, $6807 = 0.0, $6808 = 0.0, $6809 = 0.0, $681 = 0, $6810 = 0.0, $6811 = 0.0, $6812 = 0.0, $6813 = 0.0;
 var $6814 = 0.0, $6815 = 0.0, $6816 = 0.0, $6817 = 0.0, $6818 = 0.0, $6819 = 0, $682 = 0, $6820 = 0.0, $6821 = 0.0, $6822 = 0.0, $6823 = 0.0, $6824 = 0.0, $6825 = 0.0, $6826 = 0, $6827 = 0, $6828 = 0, $6829 = 0.0, $683 = 0, $6830 = 0.0, $6831 = 0.0;
 var $6832 = 0.0, $6833 = 0.0, $6834 = 0.0, $6835 = 0.0, $6836 = 0.0, $6837 = 0.0, $6838 = 0.0, $6839 = 0.0, $684 = 0, $6840 = 0.0, $6841 = 0.0, $6842 = 0.0, $6843 = 0.0, $6844 = 0.0, $6845 = 0.0, $6846 = 0.0, $6847 = 0.0, $6848 = 0.0, $6849 = 0.0, $685 = 0;
 var $6850 = 0.0, $6851 = 0.0, $6852 = 0.0, $6853 = 0.0, $6854 = 0.0, $6855 = 0.0, $6856 = 0.0, $6857 = 0.0, $6858 = 0.0, $6859 = 0.0, $686 = 0, $6860 = 0.0, $6861 = 0.0, $6862 = 0.0, $6863 = 0, $6864 = 0, $6865 = 0.0, $6866 = 0.0, $6867 = 0.0, $6868 = 0.0;
 var $6869 = 0.0, $687 = 0, $6870 = 0, $6871 = 0, $6872 = 0.0, $6873 = 0.0, $6874 = 0.0, $6875 = 0.0, $6876 = 0.0, $6877 = 0.0, $6878 = 0.0, $6879 = 0, $688 = 0, $6880 = 0.0, $6881 = 0, $6882 = 0.0, $6883 = 0.0, $6884 = 0.0, $6885 = 0.0, $6886 = 0.0;
 var $6887 = 0.0, $6888 = 0.0, $6889 = 0.0, $689 = 0, $6890 = 0.0, $6891 = 0.0, $6892 = 0.0, $6893 = 0.0, $6894 = 0.0, $6895 = 0.0, $6896 = 0.0, $6897 = 0.0, $6898 = 0.0, $6899 = 0.0, $69 = 0, $690 = 0, $6900 = 0.0, $6901 = 0.0, $6902 = 0.0, $6903 = 0.0;
 var $6904 = 0.0, $6905 = 0.0, $6906 = 0.0, $6907 = 0.0, $6908 = 0.0, $6909 = 0.0, $691 = 0, $6910 = 0.0, $6911 = 0.0, $6912 = 0.0, $6913 = 0.0, $6914 = 0.0, $6915 = 0.0, $6916 = 0.0, $6917 = 0.0, $6918 = 0.0, $6919 = 0.0, $692 = 0, $6920 = 0.0, $6921 = 0.0;
 var $6922 = 0.0, $6923 = 0.0, $6924 = 0.0, $6925 = 0.0, $6926 = 0.0, $6927 = 0.0, $6928 = 0.0, $6929 = 0.0, $693 = 0, $6930 = 0.0, $6931 = 0.0, $6932 = 0.0, $6933 = 0.0, $6934 = 0.0, $6935 = 0, $6936 = 0.0, $6937 = 0.0, $6938 = 0.0, $6939 = 0.0, $694 = 0;
 var $6940 = 0.0, $6941 = 0.0, $6942 = 0.0, $6943 = 0, $6944 = 0.0, $6945 = 0, $6946 = 0.0, $6947 = 0, $6948 = 0.0, $6949 = 0, $695 = 0, $6950 = 0.0, $6951 = 0.0, $6952 = 0.0, $6953 = 0.0, $6954 = 0.0, $6955 = 0.0, $6956 = 0.0, $6957 = 0.0, $6958 = 0.0;
 var $6959 = 0.0, $696 = 0, $6960 = 0.0, $6961 = 0.0, $6962 = 0.0, $6963 = 0.0, $6964 = 0.0, $6965 = 0, $6966 = 0, $6967 = 0.0, $6968 = 0.0, $6969 = 0.0, $697 = 0, $6970 = 0.0, $6971 = 0.0, $6972 = 0.0, $6973 = 0.0, $6974 = 0.0, $6975 = 0.0, $6976 = 0.0;
 var $6977 = 0.0, $6978 = 0.0, $6979 = 0.0, $698 = 0, $6980 = 0.0, $6981 = 0.0, $6982 = 0.0, $6983 = 0.0, $6984 = 0, $6985 = 0, $6986 = 0.0, $6987 = 0.0, $6988 = 0.0, $6989 = 0.0, $699 = 0, $6990 = 0.0, $6991 = 0.0, $6992 = 0.0, $6993 = 0, $6994 = 0.0;
 var $6995 = 0, $6996 = 0.0, $6997 = 0.0, $6998 = 0.0, $6999 = 0.0, $7 = 0, $70 = 0, $700 = 0, $7000 = 0.0, $7001 = 0.0, $7002 = 0.0, $7003 = 0.0, $7004 = 0.0, $7005 = 0.0, $7006 = 0.0, $7007 = 0.0, $7008 = 0.0, $7009 = 0.0, $701 = 0, $7010 = 0.0;
 var $7011 = 0.0, $7012 = 0.0, $7013 = 0.0, $7014 = 0.0, $7015 = 0.0, $7016 = 0.0, $7017 = 0.0, $7018 = 0.0, $7019 = 0.0, $702 = 0.0, $7020 = 0.0, $7021 = 0.0, $7022 = 0.0, $7023 = 0.0, $7024 = 0.0, $7025 = 0.0, $7026 = 0.0, $7027 = 0.0, $7028 = 0.0, $7029 = 0.0;
 var $703 = 0.0, $7030 = 0.0, $7031 = 0.0, $7032 = 0.0, $7033 = 0.0, $7034 = 0.0, $7035 = 0.0, $7036 = 0.0, $7037 = 0.0, $7038 = 0.0, $7039 = 0.0, $704 = 0.0, $7040 = 0.0, $7041 = 0.0, $7042 = 0.0, $7043 = 0.0, $7044 = 0.0, $7045 = 0.0, $7046 = 0.0, $7047 = 0.0;
 var $7048 = 0, $7049 = 0.0, $705 = 0.0, $7050 = 0.0, $7051 = 0.0, $7052 = 0.0, $7053 = 0.0, $7054 = 0.0, $7055 = 0.0, $7056 = 0, $7057 = 0.0, $7058 = 0, $7059 = 0.0, $706 = 0.0, $7060 = 0, $7061 = 0.0, $7062 = 0, $7063 = 0.0, $7064 = 0.0, $7065 = 0.0;
 var $7066 = 0.0, $7067 = 0.0, $7068 = 0.0, $7069 = 0.0, $707 = 0.0, $7070 = 0.0, $7071 = 0.0, $7072 = 0.0, $7073 = 0.0, $7074 = 0.0, $7075 = 0.0, $7076 = 0.0, $7077 = 0, $7078 = 0, $7079 = 0.0, $708 = 0.0, $7080 = 0.0, $7081 = 0.0, $7082 = 0.0, $7083 = 0.0;
 var $7084 = 0.0, $7085 = 0.0, $7086 = 0.0, $7087 = 0.0, $7088 = 0.0, $7089 = 0.0, $709 = 0.0, $7090 = 0.0, $7091 = 0.0, $7092 = 0.0, $7093 = 0.0, $7094 = 0.0, $7095 = 0.0, $7096 = 0.0, $7097 = 0.0, $7098 = 0.0, $7099 = 0, $71 = 0, $710 = 0.0, $7100 = 0;
 var $7101 = 0.0, $7102 = 0.0, $7103 = 0.0, $7104 = 0.0, $7105 = 0.0, $7106 = 0.0, $7107 = 0.0, $7108 = 0, $7109 = 0.0, $711 = 0.0, $7110 = 0, $7111 = 0.0, $7112 = 0.0, $7113 = 0.0, $7114 = 0.0, $7115 = 0.0, $7116 = 0.0, $7117 = 0.0, $7118 = 0.0, $7119 = 0.0;
 var $712 = 0.0, $7120 = 0.0, $7121 = 0.0, $7122 = 0.0, $7123 = 0.0, $7124 = 0.0, $7125 = 0.0, $7126 = 0.0, $7127 = 0.0, $7128 = 0.0, $7129 = 0.0, $713 = 0.0, $7130 = 0.0, $7131 = 0.0, $7132 = 0.0, $7133 = 0.0, $7134 = 0.0, $7135 = 0.0, $7136 = 0.0, $7137 = 0.0;
 var $7138 = 0.0, $7139 = 0.0, $714 = 0.0, $7140 = 0.0, $7141 = 0.0, $7142 = 0.0, $7143 = 0.0, $7144 = 0.0, $7145 = 0.0, $7146 = 0.0, $7147 = 0.0, $7148 = 0.0, $7149 = 0.0, $715 = 0.0, $7150 = 0.0, $7151 = 0.0, $7152 = 0.0, $7153 = 0.0, $7154 = 0.0, $7155 = 0.0;
 var $7156 = 0.0, $7157 = 0.0, $7158 = 0.0, $7159 = 0.0, $716 = 0.0, $7160 = 0.0, $7161 = 0.0, $7162 = 0.0, $7163 = 0, $7164 = 0.0, $7165 = 0.0, $7166 = 0.0, $7167 = 0.0, $7168 = 0.0, $7169 = 0.0, $717 = 0.0, $7170 = 0.0, $7171 = 0, $7172 = 0.0, $7173 = 0;
 var $7174 = 0.0, $7175 = 0, $7176 = 0.0, $7177 = 0, $7178 = 0.0, $7179 = 0.0, $718 = 0.0, $7180 = 0.0, $7181 = 0.0, $7182 = 0.0, $7183 = 0.0, $7184 = 0.0, $7185 = 0.0, $7186 = 0.0, $7187 = 0.0, $7188 = 0.0, $7189 = 0.0, $719 = 0.0, $7190 = 0.0, $7191 = 0.0;
 var $7192 = 0.0, $7193 = 0.0, $7194 = 0.0, $7195 = 0.0, $7196 = 0.0, $7197 = 0, $7198 = 0.0, $7199 = 0.0, $72 = 0, $720 = 0.0, $7200 = 0.0, $7201 = 0.0, $7202 = 0.0, $7203 = 0.0, $7204 = 0.0, $7205 = 0, $7206 = 0.0, $7207 = 0, $7208 = 0.0, $7209 = 0.0;
 var $721 = 0.0, $7210 = 0.0, $7211 = 0.0, $7212 = 0.0, $7213 = 0.0, $7214 = 0.0, $7215 = 0.0, $7216 = 0.0, $7217 = 0.0, $7218 = 0.0, $7219 = 0.0, $722 = 0.0, $7220 = 0.0, $7221 = 0.0, $7222 = 0.0, $7223 = 0.0, $7224 = 0.0, $7225 = 0.0, $7226 = 0.0, $7227 = 0.0;
 var $7228 = 0.0, $7229 = 0.0, $723 = 0.0, $7230 = 0.0, $7231 = 0.0, $7232 = 0.0, $7233 = 0.0, $7234 = 0.0, $7235 = 0.0, $7236 = 0.0, $7237 = 0.0, $7238 = 0.0, $7239 = 0.0, $724 = 0.0, $7240 = 0.0, $7241 = 0.0, $7242 = 0.0, $7243 = 0.0, $7244 = 0.0, $7245 = 0;
 var $7246 = 0.0, $7247 = 0.0, $7248 = 0, $7249 = 0.0, $725 = 0.0, $7250 = 0, $7251 = 0.0, $7252 = 0.0, $7253 = 0.0, $7254 = 0.0, $7255 = 0.0, $7256 = 0.0, $7257 = 0.0, $7258 = 0.0, $7259 = 0.0, $726 = 0.0, $7260 = 0.0, $7261 = 0.0, $7262 = 0.0, $7263 = 0.0;
 var $7264 = 0.0, $7265 = 0.0, $7266 = 0.0, $7267 = 0.0, $7268 = 0.0, $7269 = 0.0, $727 = 0.0, $7270 = 0.0, $7271 = 0, $7272 = 0.0, $7273 = 0.0, $7274 = 0.0, $7275 = 0.0, $7276 = 0.0, $7277 = 0.0, $7278 = 0.0, $7279 = 0.0, $728 = 0.0, $7280 = 0.0, $7281 = 0.0;
 var $7282 = 0.0, $7283 = 0.0, $7284 = 0.0, $7285 = 0.0, $7286 = 0.0, $7287 = 0.0, $7288 = 0.0, $7289 = 0.0, $729 = 0.0, $7290 = 0, $7291 = 0.0, $7292 = 0, $7293 = 0.0, $7294 = 0.0, $7295 = 0.0, $7296 = 0.0, $7297 = 0.0, $7298 = 0.0, $7299 = 0.0, $73 = 0;
 var $730 = 0.0, $7300 = 0.0, $7301 = 0.0, $7302 = 0.0, $7303 = 0.0, $7304 = 0.0, $7305 = 0.0, $7306 = 0.0, $7307 = 0.0, $7308 = 0.0, $7309 = 0.0, $731 = 0.0, $7310 = 0.0, $7311 = 0, $7312 = 0.0, $7313 = 0.0, $7314 = 0.0, $7315 = 0.0, $7316 = 0.0, $7317 = 0.0;
 var $7318 = 0.0, $7319 = 0.0, $732 = 0.0, $7320 = 0.0, $7321 = 0.0, $7322 = 0.0, $7323 = 0.0, $7324 = 0.0, $7325 = 0.0, $7326 = 0.0, $7327 = 0.0, $7328 = 0.0, $7329 = 0.0, $733 = 0.0, $7330 = 0.0, $7331 = 0.0, $7332 = 0.0, $7333 = 0.0, $7334 = 0.0, $7335 = 0.0;
 var $7336 = 0, $7337 = 0.0, $7338 = 0, $7339 = 0.0, $734 = 0.0, $7340 = 0.0, $7341 = 0.0, $7342 = 0.0, $7343 = 0.0, $7344 = 0.0, $7345 = 0.0, $7346 = 0.0, $7347 = 0, $7348 = 0.0, $7349 = 0.0, $735 = 0.0, $7350 = 0.0, $7351 = 0.0, $7352 = 0.0, $7353 = 0.0;
 var $7354 = 0.0, $7355 = 0.0, $7356 = 0.0, $7357 = 0, $7358 = 0.0, $7359 = 0, $736 = 0.0, $7360 = 0.0, $7361 = 0.0, $7362 = 0.0, $7363 = 0.0, $7364 = 0.0, $7365 = 0.0, $7366 = 0.0, $7367 = 0.0, $7368 = 0.0, $7369 = 0.0, $737 = 0.0, $7370 = 0.0, $7371 = 0.0;
 var $7372 = 0.0, $7373 = 0.0, $7374 = 0, $7375 = 0.0, $7376 = 0.0, $7377 = 0.0, $7378 = 0.0, $7379 = 0.0, $738 = 0.0, $7380 = 0.0, $7381 = 0.0, $7382 = 0.0, $7383 = 0.0, $7384 = 0.0, $7385 = 0.0, $7386 = 0.0, $7387 = 0.0, $7388 = 0.0, $7389 = 0.0, $739 = 0.0;
 var $7390 = 0.0, $7391 = 0.0, $7392 = 0.0, $7393 = 0.0, $7394 = 0.0, $7395 = 0, $7396 = 0.0, $7397 = 0, $7398 = 0.0, $7399 = 0.0, $74 = 0, $740 = 0.0, $7400 = 0.0, $7401 = 0.0, $7402 = 0.0, $7403 = 0.0, $7404 = 0.0, $7405 = 0.0, $7406 = 0.0, $7407 = 0.0;
 var $7408 = 0.0, $7409 = 0.0, $741 = 0.0, $7410 = 0.0, $7411 = 0.0, $7412 = 0.0, $7413 = 0.0, $7414 = 0.0, $7415 = 0.0, $7416 = 0.0, $7417 = 0, $7418 = 0.0, $7419 = 0.0, $742 = 0.0, $7420 = 0.0, $7421 = 0.0, $7422 = 0.0, $7423 = 0.0, $7424 = 0.0, $7425 = 0.0;
 var $7426 = 0.0, $7427 = 0.0, $7428 = 0.0, $7429 = 0.0, $743 = 0.0, $7430 = 0.0, $7431 = 0.0, $7432 = 0.0, $7433 = 0.0, $7434 = 0.0, $7435 = 0.0, $7436 = 0.0, $7437 = 0.0, $7438 = 0.0, $7439 = 0.0, $744 = 0.0, $7440 = 0.0, $7441 = 0.0, $7442 = 0.0, $7443 = 0.0;
 var $7444 = 0.0, $7445 = 0.0, $7446 = 0.0, $7447 = 0.0, $7448 = 0, $7449 = 0.0, $745 = 0.0, $7450 = 0, $7451 = 0.0, $7452 = 0.0, $7453 = 0.0, $7454 = 0.0, $7455 = 0.0, $7456 = 0.0, $7457 = 0.0, $7458 = 0.0, $7459 = 0.0, $746 = 0.0, $7460 = 0.0, $7461 = 0.0;
 var $7462 = 0.0, $7463 = 0.0, $7464 = 0.0, $7465 = 0.0, $7466 = 0.0, $7467 = 0.0, $7468 = 0.0, $7469 = 0.0, $747 = 0.0, $7470 = 0.0, $7471 = 0.0, $7472 = 0.0, $7473 = 0.0, $7474 = 0.0, $7475 = 0.0, $7476 = 0.0, $7477 = 0.0, $7478 = 0.0, $7479 = 0.0, $748 = 0.0;
 var $7480 = 0.0, $7481 = 0.0, $7482 = 0.0, $7483 = 0.0, $7484 = 0.0, $7485 = 0.0, $7486 = 0.0, $7487 = 0.0, $7488 = 0.0, $7489 = 0.0, $749 = 0.0, $7490 = 0.0, $7491 = 0.0, $7492 = 0.0, $7493 = 0, $7494 = 0.0, $7495 = 0.0, $7496 = 0.0, $7497 = 0.0, $7498 = 0.0;
 var $7499 = 0, $75 = 0, $750 = 0.0, $7500 = 0.0, $7501 = 0, $7502 = 0.0, $7503 = 0.0, $7504 = 0.0, $7505 = 0.0, $7506 = 0.0, $7507 = 0.0, $7508 = 0.0, $7509 = 0.0, $751 = 0.0, $7510 = 0.0, $7511 = 0.0, $7512 = 0.0, $7513 = 0.0, $7514 = 0.0, $7515 = 0.0;
 var $7516 = 0.0, $7517 = 0, $7518 = 0, $7519 = 0.0, $752 = 0.0, $7520 = 0.0, $7521 = 0.0, $7522 = 0.0, $7523 = 0.0, $7524 = 0.0, $7525 = 0.0, $7526 = 0.0, $7527 = 0.0, $7528 = 0.0, $7529 = 0.0, $753 = 0.0, $7530 = 0.0, $7531 = 0.0, $7532 = 0.0, $7533 = 0.0;
 var $7534 = 0.0, $7535 = 0.0, $7536 = 0.0, $7537 = 0.0, $7538 = 0.0, $7539 = 0.0, $754 = 0.0, $7540 = 0.0, $7541 = 0.0, $7542 = 0.0, $7543 = 0.0, $7544 = 0.0, $7545 = 0.0, $7546 = 0.0, $7547 = 0, $7548 = 0, $7549 = 0.0, $755 = 0.0, $7550 = 0.0, $7551 = 0.0;
 var $7552 = 0.0, $7553 = 0.0, $7554 = 0.0, $7555 = 0.0, $7556 = 0, $7557 = 0.0, $7558 = 0, $7559 = 0.0, $756 = 0.0, $7560 = 0.0, $7561 = 0.0, $7562 = 0.0, $7563 = 0.0, $7564 = 0.0, $7565 = 0.0, $7566 = 0.0, $7567 = 0.0, $7568 = 0.0, $7569 = 0.0, $757 = 0.0;
 var $7570 = 0.0, $7571 = 0.0, $7572 = 0.0, $7573 = 0.0, $7574 = 0.0, $7575 = 0.0, $7576 = 0.0, $7577 = 0.0, $7578 = 0.0, $7579 = 0.0, $758 = 0.0, $7580 = 0.0, $7581 = 0.0, $7582 = 0.0, $7583 = 0.0, $7584 = 0.0, $7585 = 0.0, $7586 = 0.0, $7587 = 0.0, $7588 = 0.0;
 var $7589 = 0, $759 = 0.0, $7590 = 0.0, $7591 = 0.0, $7592 = 0.0, $7593 = 0.0, $7594 = 0.0, $7595 = 0.0, $7596 = 0.0, $7597 = 0, $7598 = 0.0, $7599 = 0, $76 = 0, $760 = 0.0, $7600 = 0.0, $7601 = 0.0, $7602 = 0.0, $7603 = 0.0, $7604 = 0.0, $7605 = 0.0;
 var $7606 = 0.0, $7607 = 0.0, $7608 = 0.0, $7609 = 0.0, $761 = 0.0, $7610 = 0.0, $7611 = 0.0, $7612 = 0.0, $7613 = 0, $7614 = 0, $7615 = 0.0, $7616 = 0.0, $7617 = 0.0, $7618 = 0.0, $7619 = 0.0, $762 = 0.0, $7620 = 0.0, $7621 = 0.0, $7622 = 0.0, $7623 = 0.0;
 var $7624 = 0.0, $7625 = 0.0, $7626 = 0.0, $7627 = 0.0, $7628 = 0.0, $7629 = 0.0, $763 = 0.0, $7630 = 0.0, $7631 = 0.0, $7632 = 0.0, $7633 = 0.0, $7634 = 0.0, $7635 = 0.0, $7636 = 0.0, $7637 = 0.0, $7638 = 0.0, $7639 = 0.0, $764 = 0.0, $7640 = 0.0, $7641 = 0.0;
 var $7642 = 0.0, $7643 = 0.0, $7644 = 0.0, $7645 = 0.0, $7646 = 0, $7647 = 0, $7648 = 0.0, $7649 = 0.0, $765 = 0.0, $7650 = 0.0, $7651 = 0.0, $7652 = 0.0, $7653 = 0.0, $7654 = 0.0, $7655 = 0, $7656 = 0.0, $7657 = 0, $7658 = 0.0, $7659 = 0.0, $766 = 0.0;
 var $7660 = 0.0, $7661 = 0.0, $7662 = 0.0, $7663 = 0.0, $7664 = 0.0, $7665 = 0.0, $7666 = 0.0, $7667 = 0.0, $7668 = 0.0, $7669 = 0.0, $767 = 0.0, $7670 = 0.0, $7671 = 0.0, $7672 = 0.0, $7673 = 0.0, $7674 = 0.0, $7675 = 0.0, $7676 = 0.0, $7677 = 0.0, $7678 = 0.0;
 var $7679 = 0.0, $768 = 0.0, $7680 = 0.0, $7681 = 0.0, $7682 = 0.0, $7683 = 0.0, $7684 = 0.0, $7685 = 0.0, $7686 = 0.0, $7687 = 0.0, $7688 = 0, $7689 = 0.0, $769 = 0.0, $7690 = 0.0, $7691 = 0.0, $7692 = 0.0, $7693 = 0.0, $7694 = 0.0, $7695 = 0.0, $7696 = 0;
 var $7697 = 0.0, $7698 = 0, $7699 = 0.0, $77 = 0, $770 = 0.0, $7700 = 0.0, $7701 = 0.0, $7702 = 0.0, $7703 = 0.0, $7704 = 0.0, $7705 = 0.0, $7706 = 0.0, $7707 = 0.0, $7708 = 0.0, $7709 = 0.0, $771 = 0.0, $7710 = 0, $7711 = 0, $7712 = 0.0, $7713 = 0.0;
 var $7714 = 0.0, $7715 = 0.0, $7716 = 0.0, $7717 = 0.0, $7718 = 0.0, $7719 = 0.0, $772 = 0.0, $7720 = 0.0, $7721 = 0.0, $7722 = 0.0, $7723 = 0.0, $7724 = 0.0, $7725 = 0.0, $7726 = 0.0, $7727 = 0.0, $7728 = 0.0, $7729 = 0.0, $773 = 0.0, $7730 = 0.0, $7731 = 0.0;
 var $7732 = 0.0, $7733 = 0.0, $7734 = 0.0, $7735 = 0.0, $7736 = 0.0, $7737 = 0.0, $7738 = 0, $7739 = 0, $774 = 0.0, $7740 = 0.0, $7741 = 0.0, $7742 = 0.0, $7743 = 0.0, $7744 = 0.0, $7745 = 0.0, $7746 = 0.0, $7747 = 0, $7748 = 0.0, $7749 = 0, $775 = 0.0;
 var $7750 = 0.0, $7751 = 0.0, $7752 = 0.0, $7753 = 0.0, $7754 = 0.0, $7755 = 0.0, $7756 = 0.0, $7757 = 0.0, $7758 = 0.0, $7759 = 0.0, $776 = 0.0, $7760 = 0.0, $7761 = 0.0, $7762 = 0.0, $7763 = 0.0, $7764 = 0.0, $7765 = 0.0, $7766 = 0.0, $7767 = 0.0, $7768 = 0.0;
 var $7769 = 0.0, $777 = 0.0, $7770 = 0.0, $7771 = 0.0, $7772 = 0.0, $7773 = 0.0, $7774 = 0.0, $7775 = 0.0, $7776 = 0.0, $7777 = 0.0, $7778 = 0.0, $7779 = 0.0, $778 = 0.0, $7780 = 0, $7781 = 0.0, $7782 = 0.0, $7783 = 0.0, $7784 = 0.0, $7785 = 0.0, $7786 = 0.0;
 var $7787 = 0.0, $7788 = 0, $7789 = 0.0, $779 = 0.0, $7790 = 0, $7791 = 0.0, $7792 = 0.0, $7793 = 0.0, $7794 = 0.0, $7795 = 0.0, $7796 = 0.0, $7797 = 0.0, $7798 = 0.0, $7799 = 0.0, $78 = 0, $780 = 0.0, $7800 = 0, $7801 = 0.0, $7802 = 0.0, $7803 = 0.0;
 var $7804 = 0.0, $7805 = 0.0, $7806 = 0.0, $7807 = 0.0, $7808 = 0.0, $7809 = 0.0, $781 = 0.0, $7810 = 0, $7811 = 0.0, $7812 = 0, $7813 = 0.0, $7814 = 0.0, $7815 = 0.0, $7816 = 0.0, $7817 = 0.0, $7818 = 0.0, $7819 = 0.0, $782 = 0.0, $7820 = 0.0, $7821 = 0.0;
 var $7822 = 0.0, $7823 = 0.0, $7824 = 0.0, $7825 = 0.0, $7826 = 0.0, $7827 = 0, $7828 = 0.0, $7829 = 0.0, $783 = 0.0, $7830 = 0.0, $7831 = 0.0, $7832 = 0.0, $7833 = 0.0, $7834 = 0.0, $7835 = 0.0, $7836 = 0.0, $7837 = 0.0, $7838 = 0.0, $7839 = 0.0, $784 = 0.0;
 var $7840 = 0.0, $7841 = 0.0, $7842 = 0.0, $7843 = 0.0, $7844 = 0.0, $7845 = 0.0, $7846 = 0.0, $7847 = 0.0, $7848 = 0, $7849 = 0.0, $785 = 0.0, $7850 = 0, $7851 = 0.0, $7852 = 0.0, $7853 = 0.0, $7854 = 0.0, $7855 = 0.0, $7856 = 0.0, $7857 = 0.0, $7858 = 0.0;
 var $7859 = 0.0, $786 = 0.0, $7860 = 0.0, $7861 = 0.0, $7862 = 0.0, $7863 = 0.0, $7864 = 0.0, $7865 = 0.0, $7866 = 0.0, $7867 = 0.0, $7868 = 0.0, $7869 = 0, $787 = 0.0, $7870 = 0.0, $7871 = 0.0, $7872 = 0.0, $7873 = 0.0, $7874 = 0.0, $7875 = 0.0, $7876 = 0.0;
 var $7877 = 0.0, $7878 = 0.0, $7879 = 0.0, $788 = 0.0, $7880 = 0.0, $7881 = 0.0, $7882 = 0.0, $7883 = 0.0, $7884 = 0.0, $7885 = 0.0, $7886 = 0.0, $7887 = 0.0, $7888 = 0.0, $7889 = 0.0, $789 = 0.0, $7890 = 0.0, $7891 = 0.0, $7892 = 0.0, $7893 = 0.0, $7894 = 0.0;
 var $7895 = 0.0, $7896 = 0.0, $7897 = 0.0, $7898 = 0.0, $7899 = 0.0, $79 = 0, $790 = 0.0, $7900 = 0, $7901 = 0.0, $7902 = 0, $7903 = 0.0, $7904 = 0.0, $7905 = 0.0, $7906 = 0.0, $7907 = 0.0, $7908 = 0.0, $7909 = 0.0, $791 = 0.0, $7910 = 0.0, $7911 = 0.0;
 var $7912 = 0.0, $7913 = 0.0, $7914 = 0.0, $7915 = 0.0, $7916 = 0.0, $7917 = 0.0, $7918 = 0.0, $7919 = 0.0, $792 = 0.0, $7920 = 0, $7921 = 0.0, $7922 = 0.0, $7923 = 0.0, $7924 = 0.0, $7925 = 0.0, $7926 = 0.0, $7927 = 0.0, $7928 = 0.0, $7929 = 0.0, $793 = 0.0;
 var $7930 = 0.0, $7931 = 0.0, $7932 = 0.0, $7933 = 0.0, $7934 = 0.0, $7935 = 0.0, $7936 = 0.0, $7937 = 0.0, $7938 = 0.0, $7939 = 0.0, $794 = 0.0, $7940 = 0.0, $7941 = 0.0, $7942 = 0.0, $7943 = 0.0, $7944 = 0.0, $7945 = 0.0, $7946 = 0.0, $7947 = 0.0, $7948 = 0.0;
 var $7949 = 0.0, $795 = 0.0, $7950 = 0.0, $7951 = 0, $7952 = 0.0, $7953 = 0, $7954 = 0.0, $7955 = 0.0, $7956 = 0.0, $7957 = 0.0, $7958 = 0.0, $7959 = 0.0, $796 = 0.0, $7960 = 0.0, $7961 = 0.0, $7962 = 0.0, $7963 = 0.0, $7964 = 0.0, $7965 = 0.0, $7966 = 0.0;
 var $7967 = 0.0, $7968 = 0.0, $7969 = 0.0, $797 = 0.0, $7970 = 0.0, $7971 = 0.0, $7972 = 0.0, $7973 = 0.0, $7974 = 0.0, $7975 = 0.0, $7976 = 0.0, $7977 = 0.0, $7978 = 0.0, $7979 = 0.0, $798 = 0.0, $7980 = 0.0, $7981 = 0.0, $7982 = 0.0, $7983 = 0.0, $7984 = 0.0;
 var $7985 = 0.0, $7986 = 0.0, $7987 = 0.0, $7988 = 0.0, $7989 = 0, $799 = 0.0, $7990 = 0, $7991 = 0.0, $7992 = 0.0, $7993 = 0.0, $7994 = 0.0, $7995 = 0.0, $7996 = 0.0, $7997 = 0.0, $7998 = 0, $7999 = 0, $8 = 0, $80 = 0, $800 = 0.0, $8000 = 0.0;
 var $8001 = 0.0, $8002 = 0.0, $8003 = 0.0, $8004 = 0.0, $8005 = 0.0, $8006 = 0.0, $8007 = 0, $8008 = 0.0, $8009 = 0, $801 = 0.0, $8010 = 0.0, $8011 = 0.0, $8012 = 0.0, $8013 = 0.0, $8014 = 0.0, $8015 = 0.0, $8016 = 0.0, $8017 = 0.0, $8018 = 0.0, $8019 = 0.0;
 var $802 = 0.0, $8020 = 0.0, $8021 = 0.0, $8022 = 0.0, $8023 = 0.0, $8024 = 0.0, $8025 = 0.0, $8026 = 0.0, $8027 = 0.0, $8028 = 0.0, $8029 = 0.0, $803 = 0.0, $8030 = 0.0, $8031 = 0.0, $8032 = 0.0, $8033 = 0.0, $8034 = 0.0, $8035 = 0.0, $8036 = 0.0, $8037 = 0.0;
 var $8038 = 0.0, $8039 = 0.0, $804 = 0.0, $8040 = 0.0, $8041 = 0, $8042 = 0.0, $8043 = 0.0, $8044 = 0.0, $8045 = 0.0, $8046 = 0.0, $8047 = 0.0, $8048 = 0.0, $8049 = 0.0, $805 = 0.0, $8050 = 0, $8051 = 0.0, $8052 = 0, $8053 = 0.0, $8054 = 0.0, $8055 = 0.0;
 var $8056 = 0.0, $8057 = 0.0, $8058 = 0.0, $8059 = 0.0, $806 = 0.0, $8060 = 0.0, $8061 = 0.0, $8062 = 0.0, $8063 = 0.0, $8064 = 0.0, $8065 = 0.0, $8066 = 0, $8067 = 0, $8068 = 0.0, $8069 = 0.0, $807 = 0.0, $8070 = 0.0, $8071 = 0.0, $8072 = 0.0, $8073 = 0.0;
 var $8074 = 0.0, $8075 = 0.0, $8076 = 0.0, $8077 = 0.0, $8078 = 0.0, $8079 = 0.0, $808 = 0.0, $8080 = 0.0, $8081 = 0.0, $8082 = 0.0, $8083 = 0.0, $8084 = 0.0, $8085 = 0.0, $8086 = 0.0, $8087 = 0.0, $8088 = 0.0, $8089 = 0.0, $809 = 0.0, $8090 = 0.0, $8091 = 0.0;
 var $8092 = 0.0, $8093 = 0.0, $8094 = 0.0, $8095 = 0.0, $8096 = 0.0, $8097 = 0.0, $8098 = 0, $8099 = 0, $81 = 0, $810 = 0.0, $8100 = 0.0, $8101 = 0.0, $8102 = 0.0, $8103 = 0.0, $8104 = 0.0, $8105 = 0.0, $8106 = 0.0, $8107 = 0, $8108 = 0.0, $8109 = 0;
 var $811 = 0.0, $8110 = 0.0, $8111 = 0.0, $8112 = 0.0, $8113 = 0.0, $8114 = 0.0, $8115 = 0.0, $8116 = 0.0, $8117 = 0.0, $8118 = 0.0, $8119 = 0.0, $812 = 0.0, $8120 = 0.0, $8121 = 0.0, $8122 = 0.0, $8123 = 0.0, $8124 = 0.0, $8125 = 0.0, $8126 = 0.0, $8127 = 0.0;
 var $8128 = 0.0, $8129 = 0.0, $813 = 0.0, $8130 = 0.0, $8131 = 0.0, $8132 = 0.0, $8133 = 0.0, $8134 = 0.0, $8135 = 0.0, $8136 = 0.0, $8137 = 0.0, $8138 = 0.0, $8139 = 0.0, $814 = 0.0, $8140 = 0.0, $8141 = 0, $8142 = 0.0, $8143 = 0.0, $8144 = 0.0, $8145 = 0.0;
 var $8146 = 0.0, $8147 = 0.0, $8148 = 0.0, $8149 = 0.0, $815 = 0.0, $8150 = 0, $8151 = 0.0, $8152 = 0, $8153 = 0.0, $8154 = 0.0, $8155 = 0.0, $8156 = 0.0, $8157 = 0.0, $8158 = 0.0, $8159 = 0.0, $816 = 0.0, $8160 = 0.0, $8161 = 0.0, $8162 = 0.0, $8163 = 0.0;
 var $8164 = 0, $8165 = 0, $8166 = 0.0, $8167 = 0.0, $8168 = 0.0, $8169 = 0.0, $817 = 0.0, $8170 = 0.0, $8171 = 0.0, $8172 = 0.0, $8173 = 0.0, $8174 = 0.0, $8175 = 0.0, $8176 = 0.0, $8177 = 0.0, $8178 = 0.0, $8179 = 0.0, $818 = 0.0, $8180 = 0.0, $8181 = 0.0;
 var $8182 = 0.0, $8183 = 0.0, $8184 = 0.0, $8185 = 0.0, $8186 = 0.0, $8187 = 0.0, $8188 = 0.0, $8189 = 0.0, $819 = 0.0, $8190 = 0.0, $8191 = 0.0, $8192 = 0, $8193 = 0, $8194 = 0.0, $8195 = 0.0, $8196 = 0.0, $8197 = 0.0, $8198 = 0.0, $8199 = 0.0, $82 = 0;
 var $820 = 0.0, $8200 = 0.0, $8201 = 0, $8202 = 0.0, $8203 = 0, $8204 = 0.0, $8205 = 0.0, $8206 = 0.0, $8207 = 0.0, $8208 = 0.0, $8209 = 0.0, $821 = 0.0, $8210 = 0.0, $8211 = 0.0, $8212 = 0.0, $8213 = 0.0, $8214 = 0.0, $8215 = 0.0, $8216 = 0.0, $8217 = 0.0;
 var $8218 = 0.0, $8219 = 0.0, $822 = 0.0, $8220 = 0.0, $8221 = 0.0, $8222 = 0.0, $8223 = 0.0, $8224 = 0.0, $8225 = 0.0, $8226 = 0.0, $8227 = 0.0, $8228 = 0.0, $8229 = 0.0, $823 = 0.0, $8230 = 0.0, $8231 = 0.0, $8232 = 0.0, $8233 = 0.0, $8234 = 0.0, $8235 = 0;
 var $8236 = 0.0, $8237 = 0.0, $8238 = 0.0, $8239 = 0.0, $824 = 0.0, $8240 = 0.0, $8241 = 0.0, $8242 = 0.0, $8243 = 0.0, $8244 = 0, $8245 = 0.0, $8246 = 0, $8247 = 0.0, $8248 = 0.0, $8249 = 0.0, $825 = 0.0, $8250 = 0.0, $8251 = 0.0, $8252 = 0.0, $8253 = 0.0;
 var $8254 = 0.0, $8255 = 0.0, $8256 = 0.0, $8257 = 0.0, $8258 = 0, $8259 = 0.0, $826 = 0.0, $8260 = 0.0, $8261 = 0.0, $8262 = 0, $8263 = 0.0, $8264 = 0, $8265 = 0.0, $8266 = 0.0, $8267 = 0.0, $8268 = 0.0, $8269 = 0.0, $827 = 0.0, $8270 = 0.0, $8271 = 0.0;
 var $8272 = 0.0, $8273 = 0.0, $8274 = 0.0, $8275 = 0.0, $8276 = 0.0, $8277 = 0.0, $8278 = 0.0, $8279 = 0.0, $828 = 0.0, $8280 = 0.0, $8281 = 0.0, $8282 = 0.0, $8283 = 0.0, $8284 = 0.0, $8285 = 0.0, $8286 = 0.0, $8287 = 0.0, $8288 = 0.0, $8289 = 0.0, $829 = 0.0;
 var $8290 = 0.0, $8291 = 0.0, $8292 = 0.0, $8293 = 0.0, $8294 = 0.0, $8295 = 0.0, $8296 = 0.0, $8297 = 0.0, $8298 = 0.0, $8299 = 0.0, $83 = 0, $830 = 0.0, $8300 = 0.0, $8301 = 0.0, $8302 = 0.0, $8303 = 0.0, $8304 = 0.0, $8305 = 0.0, $8306 = 0.0, $8307 = 0.0;
 var $8308 = 0.0, $8309 = 0.0, $831 = 0.0, $8310 = 0.0, $8311 = 0.0, $8312 = 0.0, $8313 = 0.0, $8314 = 0.0, $8315 = 0.0, $8316 = 0.0, $8317 = 0.0, $8318 = 0.0, $8319 = 0.0, $832 = 0.0, $8320 = 0, $8321 = 0.0, $8322 = 0.0, $8323 = 0.0, $8324 = 0.0, $8325 = 0.0;
 var $8326 = 0, $8327 = 0.0, $8328 = 0, $8329 = 0.0, $833 = 0.0, $8330 = 0.0, $8331 = 0.0, $8332 = 0.0, $8333 = 0.0, $8334 = 0.0, $8335 = 0.0, $8336 = 0.0, $8337 = 0.0, $8338 = 0.0, $8339 = 0.0, $834 = 0.0, $8340 = 0.0, $8341 = 0.0, $8342 = 0.0, $8343 = 0.0;
 var $8344 = 0.0, $8345 = 0.0, $8346 = 0.0, $8347 = 0.0, $8348 = 0.0, $8349 = 0.0, $835 = 0.0, $8350 = 0.0, $8351 = 0.0, $8352 = 0.0, $8353 = 0.0, $8354 = 0.0, $8355 = 0.0, $8356 = 0.0, $8357 = 0.0, $8358 = 0.0, $8359 = 0.0, $836 = 0.0, $8360 = 0.0, $8361 = 0.0;
 var $8362 = 0.0, $8363 = 0.0, $8364 = 0.0, $8365 = 0.0, $8366 = 0.0, $8367 = 0.0, $8368 = 0.0, $8369 = 0.0, $837 = 0.0, $8370 = 0.0, $8371 = 0.0, $8372 = 0.0, $8373 = 0.0, $8374 = 0.0, $8375 = 0.0, $8376 = 0.0, $8377 = 0.0, $8378 = 0.0, $8379 = 0.0, $838 = 0.0;
 var $8380 = 0.0, $8381 = 0.0, $8382 = 0.0, $8383 = 0, $8384 = 0.0, $8385 = 0, $8386 = 0.0, $8387 = 0, $8388 = 0.0, $8389 = 0, $839 = 0.0, $8390 = 0.0, $8391 = 0.0, $8392 = 0.0, $8393 = 0.0, $8394 = 0.0, $8395 = 0.0, $8396 = 0.0, $8397 = 0.0, $8398 = 0;
 var $8399 = 0.0, $84 = 0, $840 = 0.0, $8400 = 0.0, $8401 = 0.0, $8402 = 0.0, $8403 = 0.0, $8404 = 0, $8405 = 0.0, $8406 = 0, $8407 = 0.0, $8408 = 0.0, $8409 = 0.0, $841 = 0.0, $8410 = 0.0, $8411 = 0.0, $8412 = 0.0, $8413 = 0.0, $8414 = 0.0, $8415 = 0.0;
 var $8416 = 0.0, $8417 = 0.0, $8418 = 0.0, $8419 = 0.0, $842 = 0.0, $8420 = 0.0, $8421 = 0.0, $8422 = 0.0, $8423 = 0.0, $8424 = 0.0, $8425 = 0.0, $8426 = 0.0, $8427 = 0.0, $8428 = 0.0, $8429 = 0.0, $843 = 0.0, $8430 = 0.0, $8431 = 0.0, $8432 = 0.0, $8433 = 0.0;
 var $8434 = 0.0, $8435 = 0.0, $8436 = 0.0, $8437 = 0.0, $8438 = 0.0, $8439 = 0.0, $844 = 0.0, $8440 = 0.0, $8441 = 0.0, $8442 = 0.0, $8443 = 0.0, $8444 = 0.0, $8445 = 0.0, $8446 = 0.0, $8447 = 0.0, $8448 = 0.0, $8449 = 0.0, $845 = 0.0, $8450 = 0.0, $8451 = 0.0;
 var $8452 = 0.0, $8453 = 0.0, $8454 = 0.0, $8455 = 0.0, $8456 = 0.0, $8457 = 0.0, $8458 = 0, $8459 = 0.0, $846 = 0.0, $8460 = 0.0, $8461 = 0.0, $8462 = 0.0, $8463 = 0.0, $8464 = 0, $8465 = 0.0, $8466 = 0, $8467 = 0.0, $8468 = 0.0, $8469 = 0.0, $847 = 0.0;
 var $8470 = 0.0, $8471 = 0.0, $8472 = 0.0, $8473 = 0.0, $8474 = 0.0, $8475 = 0, $8476 = 0, $8477 = 0.0, $8478 = 0.0, $8479 = 0.0, $848 = 0.0, $8480 = 0.0, $8481 = 0, $8482 = 0, $8483 = 0.0, $8484 = 0.0, $8485 = 0.0, $8486 = 0.0, $8487 = 0.0, $8488 = 0.0;
 var $8489 = 0.0, $849 = 0.0, $8490 = 0, $8491 = 0.0, $8492 = 0, $8493 = 0.0, $8494 = 0.0, $8495 = 0.0, $8496 = 0.0, $8497 = 0.0, $8498 = 0.0, $8499 = 0.0, $85 = 0, $850 = 0.0, $8500 = 0.0, $8501 = 0.0, $8502 = 0.0, $8503 = 0.0, $8504 = 0.0, $8505 = 0.0;
 var $8506 = 0.0, $8507 = 0.0, $8508 = 0.0, $8509 = 0.0, $851 = 0.0, $8510 = 0, $8511 = 0.0, $8512 = 0.0, $8513 = 0.0, $8514 = 0.0, $8515 = 0, $8516 = 0.0, $8517 = 0, $8518 = 0.0, $8519 = 0.0, $852 = 0.0, $8520 = 0.0, $8521 = 0.0, $8522 = 0.0, $8523 = 0.0;
 var $8524 = 0.0, $8525 = 0.0, $8526 = 0.0, $8527 = 0, $8528 = 0.0, $8529 = 0.0, $853 = 0.0, $8530 = 0.0, $8531 = 0.0, $8532 = 0.0, $8533 = 0, $8534 = 0.0, $8535 = 0, $8536 = 0.0, $8537 = 0, $8538 = 0.0, $8539 = 0.0, $854 = 0.0, $8540 = 0.0, $8541 = 0.0;
 var $8542 = 0.0, $8543 = 0.0, $8544 = 0.0, $8545 = 0.0, $8546 = 0.0, $8547 = 0.0, $8548 = 0.0, $8549 = 0.0, $855 = 0, $8550 = 0.0, $8551 = 0.0, $8552 = 0.0, $8553 = 0.0, $8554 = 0.0, $8555 = 0.0, $8556 = 0.0, $8557 = 0.0, $8558 = 0.0, $8559 = 0.0, $856 = 0;
 var $8560 = 0.0, $8561 = 0.0, $8562 = 0.0, $8563 = 0.0, $8564 = 0.0, $8565 = 0.0, $8566 = 0.0, $8567 = 0.0, $8568 = 0.0, $8569 = 0.0, $857 = 0, $8570 = 0.0, $8571 = 0.0, $8572 = 0.0, $8573 = 0.0, $8574 = 0.0, $8575 = 0.0, $8576 = 0.0, $8577 = 0.0, $8578 = 0.0;
 var $8579 = 0.0, $858 = 0, $8580 = 0.0, $8581 = 0.0, $8582 = 0.0, $8583 = 0.0, $8584 = 0.0, $8585 = 0.0, $8586 = 0.0, $8587 = 0.0, $8588 = 0.0, $8589 = 0, $859 = 0.0, $8590 = 0.0, $8591 = 0.0, $8592 = 0.0, $8593 = 0.0, $8594 = 0.0, $8595 = 0, $8596 = 0.0;
 var $8597 = 0, $8598 = 0.0, $8599 = 0.0, $86 = 0, $860 = 0.0, $8600 = 0.0, $8601 = 0.0, $8602 = 0.0, $8603 = 0.0, $8604 = 0.0, $8605 = 0.0, $8606 = 0, $8607 = 0, $8608 = 0.0, $8609 = 0.0, $861 = 0.0, $8610 = 0.0, $8611 = 0.0, $8612 = 0, $8613 = 0;
 var $8614 = 0.0, $8615 = 0.0, $8616 = 0.0, $8617 = 0.0, $8618 = 0.0, $8619 = 0.0, $862 = 0.0, $8620 = 0.0, $8621 = 0, $8622 = 0.0, $8623 = 0, $8624 = 0.0, $8625 = 0.0, $8626 = 0.0, $8627 = 0.0, $8628 = 0.0, $8629 = 0.0, $863 = 0.0, $8630 = 0.0, $8631 = 0.0;
 var $8632 = 0.0, $8633 = 0.0, $8634 = 0.0, $8635 = 0.0, $8636 = 0.0, $8637 = 0.0, $8638 = 0.0, $8639 = 0.0, $864 = 0.0, $8640 = 0.0, $8641 = 0, $8642 = 0.0, $8643 = 0.0, $8644 = 0.0, $8645 = 0.0, $8646 = 0, $8647 = 0.0, $8648 = 0, $8649 = 0.0, $865 = 0.0;
 var $8650 = 0.0, $8651 = 0.0, $8652 = 0.0, $8653 = 0.0, $8654 = 0.0, $8655 = 0, $8656 = 0, $8657 = 0.0, $8658 = 0.0, $8659 = 0.0, $866 = 0.0, $8660 = 0.0, $8661 = 0.0, $8662 = 0.0, $8663 = 0.0, $8664 = 0.0, $8665 = 0, $8666 = 0, $8667 = 0.0, $8668 = 0.0;
 var $8669 = 0.0, $867 = 0.0, $8670 = 0.0, $8671 = 0.0, $8672 = 0.0, $8673 = 0.0, $8674 = 0, $8675 = 0.0, $8676 = 0, $8677 = 0.0, $8678 = 0.0, $8679 = 0.0, $868 = 0, $8680 = 0.0, $8681 = 0.0, $8682 = 0.0, $8683 = 0.0, $8684 = 0.0, $8685 = 0.0, $8686 = 0.0;
 var $8687 = 0.0, $8688 = 0.0, $8689 = 0.0, $869 = 0.0, $8690 = 0.0, $8691 = 0.0, $8692 = 0.0, $8693 = 0.0, $8694 = 0.0, $8695 = 0.0, $8696 = 0.0, $8697 = 0.0, $8698 = 0.0, $8699 = 0.0, $87 = 0, $870 = 0, $8700 = 0.0, $8701 = 0.0, $8702 = 0.0, $8703 = 0.0;
 var $8704 = 0.0, $8705 = 0, $8706 = 0.0, $8707 = 0.0, $8708 = 0.0, $8709 = 0.0, $871 = 0.0, $8710 = 0.0, $8711 = 0, $8712 = 0.0, $8713 = 0, $8714 = 0.0, $8715 = 0, $8716 = 0.0, $8717 = 0.0, $8718 = 0.0, $8719 = 0.0, $872 = 0.0, $8720 = 0.0, $8721 = 0.0;
 var $8722 = 0, $8723 = 0, $8724 = 0.0, $8725 = 0.0, $8726 = 0.0, $8727 = 0.0, $8728 = 0.0, $8729 = 0.0, $873 = 0, $8730 = 0.0, $8731 = 0.0, $8732 = 0, $8733 = 0, $8734 = 0.0, $8735 = 0.0, $8736 = 0.0, $8737 = 0.0, $8738 = 0.0, $8739 = 0.0, $874 = 0.0;
 var $8740 = 0.0, $8741 = 0, $8742 = 0.0, $8743 = 0, $8744 = 0.0, $8745 = 0.0, $8746 = 0.0, $8747 = 0.0, $8748 = 0.0, $8749 = 0.0, $875 = 0, $8750 = 0.0, $8751 = 0.0, $8752 = 0.0, $8753 = 0.0, $8754 = 0.0, $8755 = 0.0, $8756 = 0.0, $8757 = 0.0, $8758 = 0.0;
 var $8759 = 0.0, $876 = 0.0, $8760 = 0.0, $8761 = 0.0, $8762 = 0.0, $8763 = 0.0, $8764 = 0.0, $8765 = 0.0, $8766 = 0.0, $8767 = 0.0, $8768 = 0.0, $8769 = 0.0, $877 = 0, $8770 = 0.0, $8771 = 0, $8772 = 0.0, $8773 = 0.0, $8774 = 0.0, $8775 = 0.0, $8776 = 0.0;
 var $8777 = 0, $8778 = 0.0, $8779 = 0, $878 = 0, $8780 = 0.0, $8781 = 0, $8782 = 0.0, $8783 = 0.0, $8784 = 0.0, $8785 = 0.0, $8786 = 0.0, $8787 = 0.0, $8788 = 0.0, $8789 = 0.0, $879 = 0, $8790 = 0.0, $8791 = 0.0, $8792 = 0.0, $8793 = 0.0, $8794 = 0.0;
 var $8795 = 0.0, $8796 = 0, $8797 = 0.0, $8798 = 0.0, $8799 = 0.0, $88 = 0, $880 = 0, $8800 = 0, $8801 = 0.0, $8802 = 0, $8803 = 0.0, $8804 = 0.0, $8805 = 0.0, $8806 = 0.0, $8807 = 0.0, $8808 = 0.0, $8809 = 0, $881 = 0, $8810 = 0.0, $8811 = 0.0;
 var $8812 = 0.0, $8813 = 0.0, $8814 = 0.0, $8815 = 0, $8816 = 0.0, $8817 = 0.0, $8818 = 0.0, $8819 = 0.0, $882 = 0, $8820 = 0, $8821 = 0, $8822 = 0.0, $8823 = 0.0, $8824 = 0.0, $8825 = 0.0, $8826 = 0.0, $8827 = 0.0, $8828 = 0.0, $8829 = 0.0, $883 = 0;
 var $8830 = 0.0, $8831 = 0, $8832 = 0.0, $8833 = 0, $8834 = 0.0, $8835 = 0.0, $8836 = 0, $8837 = 0.0, $8838 = 0, $8839 = 0.0, $884 = 0, $8840 = 0, $8841 = 0, $8842 = 0, $8843 = 0, $8844 = 0.0, $8845 = 0.0, $8846 = 0.0, $8847 = 0.0, $8848 = 0;
 var $8849 = 0.0, $885 = 0, $8850 = 0.0, $8851 = 0.0, $8852 = 0.0, $8853 = 0, $8854 = 0.0, $8855 = 0.0, $8856 = 0.0, $8857 = 0.0, $8858 = 0.0, $8859 = 0.0, $886 = 0, $8860 = 0.0, $8861 = 0.0, $8862 = 0.0, $8863 = 0.0, $8864 = 0.0, $8865 = 0.0, $8866 = 0.0;
 var $8867 = 0, $8868 = 0.0, $8869 = 0.0, $887 = 0, $8870 = 0.0, $8871 = 0.0, $8872 = 0, $8873 = 0, $8874 = 0, $8875 = 0.0, $8876 = 0.0, $8877 = 0.0, $8878 = 0, $8879 = 0, $888 = 0, $8880 = 0.0, $8881 = 0.0, $8882 = 0.0, $8883 = 0.0, $8884 = 0.0;
 var $8885 = 0.0, $8886 = 0.0, $8887 = 0.0, $8888 = 0.0, $8889 = 0, $889 = 0, $8890 = 0.0, $8891 = 0, $8892 = 0.0, $8893 = 0.0, $8894 = 0, $8895 = 0.0, $8896 = 0, $8897 = 0.0, $8898 = 0, $8899 = 0, $89 = 0, $890 = 0, $8900 = 0, $8901 = 0;
 var $8902 = 0.0, $8903 = 0.0, $8904 = 0.0, $8905 = 0.0, $8906 = 0, $8907 = 0.0, $8908 = 0.0, $8909 = 0.0, $891 = 0, $8910 = 0.0, $8911 = 0, $8912 = 0.0, $8913 = 0.0, $8914 = 0.0, $8915 = 0.0, $8916 = 0.0, $8917 = 0.0, $8918 = 0.0, $8919 = 0.0, $892 = 0;
 var $8920 = 0.0, $8921 = 0.0, $8922 = 0.0, $8923 = 0.0, $8924 = 0.0, $8925 = 0, $8926 = 0.0, $8927 = 0.0, $8928 = 0.0, $8929 = 0.0, $893 = 0, $8930 = 0.0, $8931 = 0.0, $8932 = 0, $8933 = 0, $8934 = 0, $8935 = 0.0, $8936 = 0.0, $8937 = 0.0, $8938 = 0.0;
 var $8939 = 0.0, $894 = 0, $8940 = 0.0, $8941 = 0.0, $8942 = 0.0, $8943 = 0.0, $8944 = 0.0, $8945 = 0.0, $8946 = 0.0, $8947 = 0.0, $8948 = 0, $8949 = 0.0, $895 = 0, $8950 = 0.0, $8951 = 0.0, $8952 = 0, $8953 = 0.0, $8954 = 0, $8955 = 0.0, $8956 = 0.0;
 var $8957 = 0.0, $8958 = 0.0, $8959 = 0.0, $896 = 0, $8960 = 0.0, $8961 = 0, $8962 = 0.0, $8963 = 0.0, $8964 = 0.0, $8965 = 0.0, $8966 = 0.0, $8967 = 0, $8968 = 0.0, $8969 = 0.0, $897 = 0, $8970 = 0.0, $8971 = 0.0, $8972 = 0, $8973 = 0, $8974 = 0.0;
 var $8975 = 0.0, $8976 = 0.0, $8977 = 0.0, $8978 = 0.0, $8979 = 0.0, $898 = 0, $8980 = 0.0, $8981 = 0.0, $8982 = 0.0, $8983 = 0, $8984 = 0.0, $8985 = 0, $8986 = 0.0, $8987 = 0.0, $8988 = 0, $8989 = 0.0, $899 = 0, $8990 = 0, $8991 = 0.0, $8992 = 0;
 var $8993 = 0, $8994 = 0, $8995 = 0, $8996 = 0.0, $8997 = 0.0, $8998 = 0.0, $8999 = 0.0, $9 = 0, $90 = 0, $900 = 0, $9000 = 0, $9001 = 0.0, $9002 = 0.0, $9003 = 0.0, $9004 = 0.0, $9005 = 0, $9006 = 0.0, $9007 = 0.0, $9008 = 0.0, $9009 = 0.0;
 var $901 = 0, $9010 = 0.0, $9011 = 0.0, $9012 = 0.0, $9013 = 0.0, $9014 = 0.0, $9015 = 0.0, $9016 = 0.0, $9017 = 0.0, $9018 = 0, $9019 = 0.0, $902 = 0, $9020 = 0.0, $9021 = 0.0, $9022 = 0.0, $9023 = 0, $9024 = 0, $9025 = 0, $9026 = 0.0, $9027 = 0.0;
 var $9028 = 0, $9029 = 0, $903 = 0, $9030 = 0.0, $9031 = 0.0, $9032 = 0.0, $9033 = 0.0, $9034 = 0.0, $9035 = 0.0, $9036 = 0.0, $9037 = 0.0, $9038 = 0.0, $9039 = 0, $904 = 0, $9040 = 0.0, $9041 = 0, $9042 = 0.0, $9043 = 0.0, $9044 = 0, $9045 = 0.0;
 var $9046 = 0, $9047 = 0.0, $9048 = 0, $9049 = 0, $905 = 0, $9050 = 0, $9051 = 0, $9052 = 0.0, $9053 = 0.0, $9054 = 0.0, $9055 = 0.0, $9056 = 0, $9057 = 0.0, $9058 = 0.0, $9059 = 0.0, $906 = 0, $9060 = 0.0, $9061 = 0, $9062 = 0.0, $9063 = 0.0;
 var $9064 = 0.0, $9065 = 0.0, $9066 = 0.0, $9067 = 0.0, $9068 = 0.0, $9069 = 0.0, $907 = 0, $9070 = 0.0, $9071 = 0.0, $9072 = 0.0, $9073 = 0.0, $9074 = 0, $9075 = 0.0, $9076 = 0.0, $9077 = 0.0, $9078 = 0.0, $9079 = 0, $908 = 0, $9080 = 0, $9081 = 0;
 var $9082 = 0.0, $9083 = 0.0, $9084 = 0.0, $9085 = 0.0, $9086 = 0.0, $9087 = 0.0, $9088 = 0.0, $9089 = 0.0, $909 = 0, $9090 = 0.0, $9091 = 0.0, $9092 = 0.0, $9093 = 0.0, $9094 = 0.0, $9095 = 0.0, $9096 = 0.0, $9097 = 0.0, $9098 = 0.0, $9099 = 0, $91 = 0;
 var $910 = 0, $9100 = 0, $9101 = 0.0, $9102 = 0.0, $9103 = 0.0, $9104 = 0.0, $9105 = 0.0, $9106 = 0.0, $9107 = 0.0, $9108 = 0.0, $9109 = 0.0, $911 = 0, $9110 = 0.0, $9111 = 0.0, $9112 = 0.0, $9113 = 0.0, $9114 = 0.0, $9115 = 0.0, $9116 = 0.0, $9117 = 0.0;
 var $9118 = 0.0, $9119 = 0.0, $912 = 0, $9120 = 0.0, $9121 = 0.0, $9122 = 0.0, $9123 = 0.0, $9124 = 0.0, $9125 = 0, $9126 = 0, $9127 = 0.0, $9128 = 0.0, $9129 = 0.0, $913 = 0, $9130 = 0.0, $9131 = 0.0, $9132 = 0.0, $9133 = 0.0, $9134 = 0, $9135 = 0.0;
 var $9136 = 0, $9137 = 0.0, $9138 = 0.0, $9139 = 0.0, $914 = 0, $9140 = 0.0, $9141 = 0.0, $9142 = 0.0, $9143 = 0.0, $9144 = 0.0, $9145 = 0.0, $9146 = 0.0, $9147 = 0.0, $9148 = 0.0, $9149 = 0.0, $915 = 0, $9150 = 0.0, $9151 = 0.0, $9152 = 0.0, $9153 = 0.0;
 var $9154 = 0.0, $9155 = 0.0, $9156 = 0.0, $9157 = 0.0, $9158 = 0.0, $9159 = 0.0, $916 = 0, $9160 = 0.0, $9161 = 0.0, $9162 = 0.0, $9163 = 0.0, $9164 = 0.0, $9165 = 0.0, $9166 = 0.0, $9167 = 0.0, $9168 = 0.0, $9169 = 0.0, $917 = 0, $9170 = 0.0, $9171 = 0.0;
 var $9172 = 0.0, $9173 = 0.0, $9174 = 0.0, $9175 = 0.0, $9176 = 0.0, $9177 = 0.0, $9178 = 0.0, $9179 = 0.0, $918 = 0, $9180 = 0.0, $9181 = 0.0, $9182 = 0.0, $9183 = 0.0, $9184 = 0.0, $9185 = 0.0, $9186 = 0.0, $9187 = 0.0, $9188 = 0.0, $9189 = 0.0, $919 = 0;
 var $9190 = 0.0, $9191 = 0, $9192 = 0.0, $9193 = 0.0, $9194 = 0.0, $9195 = 0.0, $9196 = 0.0, $9197 = 0.0, $9198 = 0.0, $9199 = 0, $92 = 0, $920 = 0, $9200 = 0.0, $9201 = 0, $9202 = 0.0, $9203 = 0, $9204 = 0.0, $9205 = 0, $9206 = 0.0, $9207 = 0.0;
 var $9208 = 0.0, $9209 = 0.0, $921 = 0, $9210 = 0.0, $9211 = 0.0, $9212 = 0.0, $9213 = 0.0, $9214 = 0.0, $9215 = 0.0, $9216 = 0.0, $9217 = 0.0, $9218 = 0.0, $9219 = 0.0, $922 = 0, $9220 = 0.0, $9221 = 0.0, $9222 = 0.0, $9223 = 0.0, $9224 = 0.0, $9225 = 0.0;
 var $9226 = 0.0, $9227 = 0.0, $9228 = 0.0, $9229 = 0.0, $923 = 0, $9230 = 0.0, $9231 = 0.0, $9232 = 0.0, $9233 = 0.0, $9234 = 0, $9235 = 0, $9236 = 0.0, $9237 = 0.0, $9238 = 0.0, $9239 = 0.0, $924 = 0, $9240 = 0.0, $9241 = 0.0, $9242 = 0.0, $9243 = 0;
 var $9244 = 0, $9245 = 0.0, $9246 = 0.0, $9247 = 0.0, $9248 = 0.0, $9249 = 0.0, $925 = 0, $9250 = 0.0, $9251 = 0.0, $9252 = 0, $9253 = 0.0, $9254 = 0, $9255 = 0.0, $9256 = 0.0, $9257 = 0.0, $9258 = 0.0, $9259 = 0.0, $926 = 0, $9260 = 0.0, $9261 = 0.0;
 var $9262 = 0.0, $9263 = 0.0, $9264 = 0.0, $9265 = 0.0, $9266 = 0.0, $9267 = 0.0, $9268 = 0.0, $9269 = 0.0, $927 = 0, $9270 = 0.0, $9271 = 0.0, $9272 = 0.0, $9273 = 0.0, $9274 = 0.0, $9275 = 0.0, $9276 = 0.0, $9277 = 0.0, $9278 = 0.0, $9279 = 0.0, $928 = 0;
 var $9280 = 0.0, $9281 = 0.0, $9282 = 0.0, $9283 = 0.0, $9284 = 0.0, $9285 = 0.0, $9286 = 0.0, $9287 = 0.0, $9288 = 0.0, $9289 = 0.0, $929 = 0, $9290 = 0.0, $9291 = 0.0, $9292 = 0.0, $9293 = 0.0, $9294 = 0.0, $9295 = 0.0, $9296 = 0.0, $9297 = 0.0, $9298 = 0.0;
 var $9299 = 0.0, $93 = 0, $930 = 0, $9300 = 0.0, $9301 = 0.0, $9302 = 0.0, $9303 = 0.0, $9304 = 0.0, $9305 = 0.0, $9306 = 0.0, $9307 = 0.0, $9308 = 0.0, $9309 = 0, $931 = 0, $9310 = 0.0, $9311 = 0.0, $9312 = 0.0, $9313 = 0.0, $9314 = 0.0, $9315 = 0.0;
 var $9316 = 0.0, $9317 = 0, $9318 = 0.0, $9319 = 0, $932 = 0, $9320 = 0.0, $9321 = 0, $9322 = 0.0, $9323 = 0, $9324 = 0.0, $9325 = 0.0, $9326 = 0.0, $9327 = 0.0, $9328 = 0.0, $9329 = 0.0, $933 = 0, $9330 = 0.0, $9331 = 0.0, $9332 = 0.0, $9333 = 0.0;
 var $9334 = 0.0, $9335 = 0.0, $9336 = 0.0, $9337 = 0.0, $9338 = 0, $9339 = 0, $934 = 0, $9340 = 0.0, $9341 = 0.0, $9342 = 0.0, $9343 = 0.0, $9344 = 0.0, $9345 = 0.0, $9346 = 0.0, $9347 = 0.0, $9348 = 0.0, $9349 = 0.0, $935 = 0, $9350 = 0.0, $9351 = 0.0;
 var $9352 = 0.0, $9353 = 0.0, $9354 = 0.0, $9355 = 0.0, $9356 = 0.0, $9357 = 0.0, $9358 = 0.0, $9359 = 0.0, $936 = 0, $9360 = 0, $9361 = 0, $9362 = 0.0, $9363 = 0.0, $9364 = 0.0, $9365 = 0.0, $9366 = 0.0, $9367 = 0.0, $9368 = 0.0, $9369 = 0, $937 = 0;
 var $9370 = 0.0, $9371 = 0, $9372 = 0.0, $9373 = 0.0, $9374 = 0.0, $9375 = 0.0, $9376 = 0.0, $9377 = 0.0, $9378 = 0.0, $9379 = 0.0, $938 = 0, $9380 = 0.0, $9381 = 0.0, $9382 = 0.0, $9383 = 0.0, $9384 = 0.0, $9385 = 0.0, $9386 = 0.0, $9387 = 0.0, $9388 = 0.0;
 var $9389 = 0.0, $939 = 0, $9390 = 0.0, $9391 = 0.0, $9392 = 0.0, $9393 = 0.0, $9394 = 0.0, $9395 = 0.0, $9396 = 0.0, $9397 = 0.0, $9398 = 0.0, $9399 = 0.0, $94 = 0, $940 = 0, $9400 = 0.0, $9401 = 0.0, $9402 = 0.0, $9403 = 0.0, $9404 = 0.0, $9405 = 0.0;
 var $9406 = 0.0, $9407 = 0.0, $9408 = 0.0, $9409 = 0.0, $941 = 0, $9410 = 0.0, $9411 = 0.0, $9412 = 0.0, $9413 = 0.0, $9414 = 0.0, $9415 = 0.0, $9416 = 0.0, $9417 = 0.0, $9418 = 0.0, $9419 = 0.0, $942 = 0, $9420 = 0.0, $9421 = 0.0, $9422 = 0.0, $9423 = 0.0;
 var $9424 = 0.0, $9425 = 0, $9426 = 0.0, $9427 = 0.0, $9428 = 0.0, $9429 = 0.0, $943 = 0, $9430 = 0.0, $9431 = 0.0, $9432 = 0.0, $9433 = 0, $9434 = 0.0, $9435 = 0, $9436 = 0.0, $9437 = 0, $9438 = 0.0, $9439 = 0, $944 = 0, $9440 = 0.0, $9441 = 0.0;
 var $9442 = 0.0, $9443 = 0.0, $9444 = 0.0, $9445 = 0.0, $9446 = 0.0, $9447 = 0.0, $9448 = 0.0, $9449 = 0.0, $945 = 0, $9450 = 0.0, $9451 = 0.0, $9452 = 0.0, $9453 = 0.0, $9454 = 0, $9455 = 0.0, $9456 = 0.0, $9457 = 0.0, $9458 = 0.0, $9459 = 0.0, $946 = 0;
 var $9460 = 0.0, $9461 = 0.0, $9462 = 0, $9463 = 0.0, $9464 = 0, $9465 = 0.0, $9466 = 0.0, $9467 = 0.0, $9468 = 0.0, $9469 = 0.0, $947 = 0, $9470 = 0.0, $9471 = 0.0, $9472 = 0.0, $9473 = 0.0, $9474 = 0.0, $9475 = 0.0, $9476 = 0.0, $9477 = 0.0, $9478 = 0.0;
 var $9479 = 0.0, $948 = 0, $9480 = 0.0, $9481 = 0.0, $9482 = 0.0, $9483 = 0, $9484 = 0.0, $9485 = 0.0, $9486 = 0.0, $9487 = 0.0, $9488 = 0.0, $9489 = 0.0, $949 = 0, $9490 = 0.0, $9491 = 0.0, $9492 = 0.0, $9493 = 0.0, $9494 = 0.0, $9495 = 0.0, $9496 = 0.0;
 var $9497 = 0.0, $9498 = 0.0, $9499 = 0.0, $95 = 0, $950 = 0, $9500 = 0.0, $9501 = 0.0, $9502 = 0.0, $9503 = 0.0, $9504 = 0.0, $9505 = 0.0, $9506 = 0.0, $9507 = 0.0, $9508 = 0.0, $9509 = 0.0, $951 = 0, $9510 = 0.0, $9511 = 0.0, $9512 = 0.0, $9513 = 0;
 var $9514 = 0.0, $9515 = 0, $9516 = 0.0, $9517 = 0.0, $9518 = 0.0, $9519 = 0.0, $952 = 0, $9520 = 0.0, $9521 = 0.0, $9522 = 0.0, $9523 = 0.0, $9524 = 0, $9525 = 0.0, $9526 = 0.0, $9527 = 0, $9528 = 0.0, $9529 = 0.0, $953 = 0, $9530 = 0.0, $9531 = 0.0;
 var $9532 = 0.0, $9533 = 0.0, $9534 = 0.0, $9535 = 0.0, $9536 = 0, $9537 = 0.0, $9538 = 0.0, $9539 = 0, $954 = 0, $9540 = 0.0, $9541 = 0.0, $9542 = 0.0, $9543 = 0.0, $9544 = 0.0, $9545 = 0.0, $9546 = 0, $9547 = 0.0, $9548 = 0.0, $9549 = 0.0, $955 = 0;
 var $9550 = 0.0, $9551 = 0.0, $9552 = 0.0, $9553 = 0.0, $9554 = 0.0, $9555 = 0.0, $9556 = 0, $9557 = 0.0, $9558 = 0.0, $9559 = 0.0, $956 = 0, $9560 = 0.0, $9561 = 0.0, $9562 = 0.0, $9563 = 0.0, $9564 = 0.0, $9565 = 0.0, $9566 = 0.0, $9567 = 0.0, $9568 = 0.0;
 var $9569 = 0.0, $957 = 0, $9570 = 0, $9571 = 0.0, $9572 = 0.0, $9573 = 0.0, $9574 = 0.0, $9575 = 0.0, $9576 = 0.0, $9577 = 0.0, $9578 = 0.0, $9579 = 0.0, $958 = 0, $9580 = 0.0, $9581 = 0.0, $9582 = 0.0, $9583 = 0, $9584 = 0.0, $9585 = 0, $9586 = 0.0;
 var $9587 = 0.0, $9588 = 0.0, $9589 = 0.0, $959 = 0, $9590 = 0.0, $9591 = 0.0, $9592 = 0.0, $9593 = 0.0, $9594 = 0.0, $9595 = 0.0, $9596 = 0.0, $9597 = 0.0, $9598 = 0.0, $9599 = 0.0, $96 = 0, $960 = 0, $9600 = 0.0, $9601 = 0.0, $9602 = 0.0, $9603 = 0.0;
 var $9604 = 0.0, $9605 = 0.0, $9606 = 0.0, $9607 = 0.0, $9608 = 0, $9609 = 0.0, $961 = 0, $9610 = 0.0, $9611 = 0.0, $9612 = 0.0, $9613 = 0.0, $9614 = 0, $9615 = 0.0, $9616 = 0, $9617 = 0.0, $9618 = 0.0, $9619 = 0.0, $962 = 0, $9620 = 0.0, $9621 = 0.0;
 var $9622 = 0.0, $9623 = 0.0, $9624 = 0.0, $9625 = 0, $9626 = 0.0, $9627 = 0.0, $9628 = 0.0, $9629 = 0, $963 = 0, $9630 = 0.0, $9631 = 0, $9632 = 0.0, $9633 = 0.0, $9634 = 0.0, $9635 = 0.0, $9636 = 0.0, $9637 = 0.0, $9638 = 0, $9639 = 0.0, $964 = 0;
 var $9640 = 0.0, $9641 = 0.0, $9642 = 0.0, $9643 = 0.0, $9644 = 0, $9645 = 0.0, $9646 = 0.0, $9647 = 0.0, $9648 = 0.0, $9649 = 0, $965 = 0, $9650 = 0, $9651 = 0.0, $9652 = 0.0, $9653 = 0.0, $9654 = 0.0, $9655 = 0.0, $9656 = 0.0, $9657 = 0.0, $9658 = 0.0;
 var $9659 = 0.0, $966 = 0, $9660 = 0, $9661 = 0.0, $9662 = 0, $9663 = 0.0, $9664 = 0.0, $9665 = 0, $9666 = 0.0, $9667 = 0, $9668 = 0.0, $9669 = 0, $967 = 0, $9670 = 0, $9671 = 0, $9672 = 0, $9673 = 0.0, $9674 = 0.0, $9675 = 0.0, $9676 = 0.0;
 var $9677 = 0, $9678 = 0.0, $9679 = 0.0, $968 = 0, $9680 = 0.0, $9681 = 0.0, $9682 = 0, $9683 = 0.0, $9684 = 0.0, $9685 = 0.0, $9686 = 0.0, $9687 = 0.0, $9688 = 0.0, $9689 = 0.0, $969 = 0, $9690 = 0.0, $9691 = 0.0, $9692 = 0.0, $9693 = 0.0, $9694 = 0.0;
 var $9695 = 0.0, $9696 = 0, $9697 = 0.0, $9698 = 0.0, $9699 = 0.0, $97 = 0, $970 = 0, $9700 = 0.0, $9701 = 0, $9702 = 0, $9703 = 0, $9704 = 0.0, $9705 = 0.0, $9706 = 0.0, $9707 = 0, $9708 = 0, $9709 = 0.0, $971 = 0, $9710 = 0.0, $9711 = 0.0;
 var $9712 = 0.0, $9713 = 0.0, $9714 = 0.0, $9715 = 0.0, $9716 = 0.0, $9717 = 0.0, $9718 = 0, $9719 = 0.0, $972 = 0, $9720 = 0, $9721 = 0.0, $9722 = 0.0, $9723 = 0, $9724 = 0.0, $9725 = 0, $9726 = 0.0, $9727 = 0, $9728 = 0, $9729 = 0, $973 = 0;
 var $9730 = 0, $9731 = 0.0, $9732 = 0.0, $9733 = 0.0, $9734 = 0.0, $9735 = 0, $9736 = 0.0, $9737 = 0.0, $9738 = 0.0, $9739 = 0.0, $974 = 0, $9740 = 0, $9741 = 0.0, $9742 = 0.0, $9743 = 0.0, $9744 = 0.0, $9745 = 0.0, $9746 = 0.0, $9747 = 0.0, $9748 = 0.0;
 var $9749 = 0.0, $975 = 0, $9750 = 0.0, $9751 = 0.0, $9752 = 0.0, $9753 = 0.0, $9754 = 0, $9755 = 0.0, $9756 = 0.0, $9757 = 0.0, $9758 = 0.0, $9759 = 0, $976 = 0, $9760 = 0, $9761 = 0, $9762 = 0.0, $9763 = 0.0, $9764 = 0.0, $9765 = 0.0, $9766 = 0.0;
 var $9767 = 0.0, $9768 = 0.0, $9769 = 0.0, $977 = 0, $9770 = 0.0, $9771 = 0, $9772 = 0, $9773 = 0.0, $9774 = 0.0, $9775 = 0.0, $9776 = 0.0, $9777 = 0.0, $9778 = 0.0, $9779 = 0.0, $978 = 0, $9780 = 0.0, $9781 = 0.0, $9782 = 0.0, $9783 = 0.0, $9784 = 0.0;
 var $9785 = 0, $9786 = 0, $9787 = 0.0, $9788 = 0.0, $9789 = 0.0, $979 = 0, $9790 = 0.0, $9791 = 0.0, $9792 = 0.0, $9793 = 0.0, $9794 = 0, $9795 = 0.0, $9796 = 0, $9797 = 0.0, $9798 = 0.0, $9799 = 0.0, $98 = 0, $980 = 0, $9800 = 0.0, $9801 = 0.0;
 var $9802 = 0.0, $9803 = 0.0, $9804 = 0.0, $9805 = 0.0, $9806 = 0.0, $9807 = 0.0, $9808 = 0.0, $9809 = 0.0, $981 = 0, $9810 = 0.0, $9811 = 0.0, $9812 = 0.0, $9813 = 0.0, $9814 = 0.0, $9815 = 0.0, $9816 = 0.0, $9817 = 0.0, $9818 = 0.0, $9819 = 0, $982 = 0;
 var $9820 = 0.0, $9821 = 0.0, $9822 = 0.0, $9823 = 0.0, $9824 = 0.0, $9825 = 0.0, $9826 = 0.0, $9827 = 0.0, $9828 = 0.0, $9829 = 0.0, $983 = 0, $9830 = 0, $9831 = 0.0, $9832 = 0, $9833 = 0.0, $9834 = 0.0, $9835 = 0.0, $9836 = 0.0, $9837 = 0.0, $9838 = 0.0;
 var $9839 = 0.0, $984 = 0, $9840 = 0.0, $9841 = 0.0, $9842 = 0.0, $9843 = 0.0, $9844 = 0, $9845 = 0, $9846 = 0.0, $9847 = 0.0, $9848 = 0.0, $9849 = 0.0, $985 = 0, $9850 = 0.0, $9851 = 0.0, $9852 = 0.0, $9853 = 0.0, $9854 = 0.0, $9855 = 0.0, $9856 = 0.0;
 var $9857 = 0.0, $9858 = 0, $9859 = 0, $986 = 0, $9860 = 0.0, $9861 = 0.0, $9862 = 0.0, $9863 = 0.0, $9864 = 0.0, $9865 = 0.0, $9866 = 0.0, $9867 = 0, $9868 = 0.0, $9869 = 0, $987 = 0, $9870 = 0.0, $9871 = 0.0, $9872 = 0.0, $9873 = 0.0, $9874 = 0.0;
 var $9875 = 0.0, $9876 = 0.0, $9877 = 0.0, $9878 = 0.0, $9879 = 0.0, $988 = 0, $9880 = 0.0, $9881 = 0.0, $9882 = 0.0, $9883 = 0.0, $9884 = 0.0, $9885 = 0.0, $9886 = 0.0, $9887 = 0.0, $9888 = 0.0, $9889 = 0.0, $989 = 0, $9890 = 0.0, $9891 = 0.0, $9892 = 0;
 var $9893 = 0.0, $9894 = 0.0, $9895 = 0.0, $9896 = 0.0, $9897 = 0.0, $9898 = 0.0, $9899 = 0.0, $99 = 0, $990 = 0, $9900 = 0.0, $9901 = 0.0, $9902 = 0.0, $9903 = 0, $9904 = 0.0, $9905 = 0, $9906 = 0.0, $9907 = 0.0, $9908 = 0.0, $9909 = 0.0, $991 = 0;
 var $9910 = 0.0, $9911 = 0.0, $9912 = 0.0, $9913 = 0, $9914 = 0.0, $9915 = 0.0, $9916 = 0.0, $9917 = 0.0, $9918 = 0.0, $9919 = 0.0, $992 = 0, $9920 = 0.0, $9921 = 0.0, $9922 = 0.0, $9923 = 0, $9924 = 0.0, $9925 = 0.0, $9926 = 0.0, $9927 = 0.0, $9928 = 0.0;
 var $9929 = 0.0, $993 = 0, $9930 = 0.0, $9931 = 0.0, $9932 = 0.0, $9933 = 0.0, $9934 = 0.0, $9935 = 0.0, $9936 = 0.0, $9937 = 0, $9938 = 0.0, $9939 = 0.0, $994 = 0, $9940 = 0.0, $9941 = 0.0, $9942 = 0.0, $9943 = 0.0, $9944 = 0.0, $9945 = 0.0, $9946 = 0.0;
 var $9947 = 0.0, $9948 = 0.0, $9949 = 0.0, $995 = 0, $9950 = 0, $9951 = 0.0, $9952 = 0, $9953 = 0.0, $9954 = 0.0, $9955 = 0.0, $9956 = 0.0, $9957 = 0.0, $9958 = 0.0, $9959 = 0.0, $996 = 0, $9960 = 0.0, $9961 = 0.0, $9962 = 0.0, $9963 = 0.0, $9964 = 0.0;
 var $9965 = 0.0, $9966 = 0.0, $9967 = 0.0, $9968 = 0.0, $9969 = 0.0, $997 = 0, $9970 = 0.0, $9971 = 0.0, $9972 = 0.0, $9973 = 0.0, $9974 = 0.0, $9975 = 0, $9976 = 0.0, $9977 = 0.0, $9978 = 0.0, $9979 = 0.0, $998 = 0, $9980 = 0.0, $9981 = 0, $9982 = 0.0;
 var $9983 = 0, $9984 = 0.0, $9985 = 0.0, $9986 = 0.0, $9987 = 0.0, $9988 = 0.0, $9989 = 0.0, $999 = 0, $9990 = 0.0, $9991 = 0.0, $9992 = 0, $9993 = 0.0, $9994 = 0.0, $9995 = 0.0, $9996 = 0, $9997 = 0.0, $9998 = 0, $9999 = 0.0, $cj0array = 0, $cj0array366 = 0;
 var $cj0array373 = 0, $cj0array383 = 0, $cj0array390 = 0, $cj0array517 = 0, $cj0array524 = 0, $cj0array534 = 0, $cj0array541 = 0, $cj0array585 = 0, $cj0array592 = 0, $cj0array621 = 0, $cj0array628 = 0, $cj0array657 = 0, $cj0array664 = 0, $cj0array693 = 0, $cj0array700 = 0, $cj0array726 = 0, $cj0array733 = 0, $cj0array740 = 0, $cj0array784 = 0, $cj0array791 = 0;
 var $cj0array820 = 0, $cj0array827 = 0, $cj0array856 = 0, $cj0array863 = 0, $cj0array892 = 0, $cj0array899 = 0, $cj0array925 = 0, $cj0array932 = 0, $cj0array939 = 0, $cj0array996 = 0, $cj1array = 0, $cj1array1019 = 0, $cj1array1035 = 0, $cj1array1051 = 0, $cj1array1067 = 0, $cj1array1083 = 0, $cj1array1141 = 0, $cj1array1157 = 0, $cj1array1173 = 0, $cj1array1189 = 0;
 var $cj1array1205 = 0, $cj1array127 = 0, $cj1array143 = 0, $cj1array159 = 0, $cj1array175 = 0, $cj1array191 = 0, $cj1array22 = 0, $cj1array261 = 0, $cj1array38 = 0, $cj1array54 = 0, $cj1array70 = 0, $cj3array = 0, $exitcond = 0, $exitcond2174 = 0, $exitcond2176 = 0, $exitcond2178 = 0, $exitcond2180 = 0, $exitcond2186 = 0, $exitcond2188 = 0, $exitcond2190 = 0;
 var $exitcond2192 = 0, $exitcond2194 = 0, $exitcond2195 = 0, $exitcond2199 = 0, $exitcond2200 = 0, $exitcond2201 = 0, $exitcond2221 = 0, $exitcond2222 = 0, $exitcond2223 = 0, $exitcond2274 = 0, $exitcond2280 = 0, $exitcond2282 = 0, $exitcond2284 = 0, $exitcond2286 = 0, $exitcond2288 = 0, $exitcond2294 = 0, $exitcond2296 = 0, $exitcond2298 = 0, $exitcond2300 = 0, $exitcond2302 = 0;
 var $exitcond2303 = 0, $exitcond2304 = 0, $iij0$01703 = 0, $iij01000$01094 = 0, $iij0730$01447 = 0, $iij0737$01442 = 0, $iij0744$01437 = 0, $iij0929$01337 = 0, $iij0936$01332 = 0, $iij0943$01327 = 0, $iij1$0 = 0, $iij1$01905 = 0, $iij1$01906 = 0, $iij1$01906$lcssa = 0, $iij11028$0 = 0, $iij11028$01285 = 0, $iij11028$01286 = 0, $iij11028$01286$lcssa = 0, $iij11044$0 = 0, $iij11044$01270 = 0;
 var $iij11044$01271 = 0, $iij11044$01271$lcssa = 0, $iij11060$0 = 0, $iij11060$01255 = 0, $iij11060$01256 = 0, $iij11060$01256$lcssa = 0, $iij11076$0 = 0, $iij11076$01240 = 0, $iij11076$01241 = 0, $iij11076$01241$lcssa = 0, $iij11092$0 = 0, $iij11092$01225 = 0, $iij11092$01226 = 0, $iij11092$01226$lcssa = 0, $iij11150$0 = 0, $iij11150$01190 = 0, $iij11150$01191 = 0, $iij11150$01191$lcssa = 0, $iij11166$0 = 0, $iij11166$01175 = 0;
 var $iij11166$01176 = 0, $iij11166$01176$lcssa = 0, $iij11182$0 = 0, $iij11182$01160 = 0, $iij11182$01161 = 0, $iij11182$01161$lcssa = 0, $iij11198$0 = 0, $iij11198$01145 = 0, $iij11198$01146 = 0, $iij11198$01146$lcssa = 0, $iij11214$0 = 0, $iij11214$01130 = 0, $iij11214$01131 = 0, $iij11214$01131$lcssa = 0, $iij1136$0 = 0, $iij1136$01810 = 0, $iij1136$01811 = 0, $iij1136$01811$lcssa = 0, $iij1152$0 = 0, $iij1152$01795 = 0;
 var $iij1152$01796 = 0, $iij1152$01796$lcssa = 0, $iij1168$0 = 0, $iij1168$01780 = 0, $iij1168$01781 = 0, $iij1168$01781$lcssa = 0, $iij1184$0 = 0, $iij1184$01765 = 0, $iij1184$01766 = 0, $iij1184$01766$lcssa = 0, $iij1200$0 = 0, $iij1200$01750 = 0, $iij1200$01751 = 0, $iij1200$01751$lcssa = 0, $iij1265$01293 = 0, $iij131$0 = 0, $iij131$01890 = 0, $iij131$01891 = 0, $iij131$01891$lcssa = 0, $iij147$0 = 0;
 var $iij147$01875 = 0, $iij147$01876 = 0, $iij147$01876$lcssa = 0, $iij163$0 = 0, $iij163$01860 = 0, $iij163$01861 = 0, $iij163$01861$lcssa = 0, $iij179$0 = 0, $iij179$01845 = 0, $iij179$01846 = 0, $iij179$01846$lcssa = 0, $iij3$01092 = 0, $ij0$01912 = 0, $ij0729$01451 = 0, $ij0736$01446 = 0, $ij0743$01441 = 0, $ij0928$01341 = 0, $ij0935$01336 = 0, $ij0942$01331 = 0, $ij0999$01292 = 0;
 var $ij11027$01289 = 0, $ij11043$01274 = 0, $ij11055$01250 = 0, $ij11059$01259 = 0, $ij11071$01235 = 0, $ij11075$01244 = 0, $ij11087$01220 = 0, $ij11091$01229 = 0, $ij11145$01185 = 0, $ij11149$01194 = 0, $ij11161$01170 = 0, $ij11165$01179 = 0, $ij11177$01155 = 0, $ij11181$01164 = 0, $ij11193$01140 = 0, $ij11197$01149 = 0, $ij11209$01128 = 0, $ij11213$01134 = 0, $ij1135$01814 = 0, $ij115$01909 = 0;
 var $ij1151$01799 = 0, $ij1167$01784 = 0, $ij1183$01769 = 0, $ij1199$01754 = 0, $ij1264$01702 = 0, $ij130$01894 = 0, $ij146$01879 = 0, $ij162$01864 = 0, $ij178$01849 = 0, $ij3$01913 = 0, $j0array = 0, $j0array365 = 0, $j0array372 = 0, $j0array382 = 0, $j0array389 = 0, $j0array516 = 0, $j0array523 = 0, $j0array533 = 0, $j0array540 = 0, $j0array584 = 0;
 var $j0array591 = 0, $j0array620 = 0, $j0array627 = 0, $j0array656 = 0, $j0array663 = 0, $j0array692 = 0, $j0array699 = 0, $j0array725 = 0, $j0array732 = 0, $j0array739 = 0, $j0array783 = 0, $j0array790 = 0, $j0array819 = 0, $j0array826 = 0, $j0array855 = 0, $j0array862 = 0, $j0array891 = 0, $j0array898 = 0, $j0array924 = 0, $j0array931 = 0;
 var $j0array938 = 0, $j0array995 = 0, $j0valid = 0, $j0valid368 = 0, $j0valid375 = 0, $j0valid385 = 0, $j0valid392 = 0, $j0valid519 = 0, $j0valid526 = 0, $j0valid536 = 0, $j0valid543 = 0, $j0valid587 = 0, $j0valid594 = 0, $j0valid623 = 0, $j0valid630 = 0, $j0valid659 = 0, $j0valid666 = 0, $j0valid695 = 0, $j0valid702 = 0, $j0valid728 = 0;
 var $j0valid735 = 0, $j0valid742 = 0, $j0valid786 = 0, $j0valid793 = 0, $j0valid822 = 0, $j0valid829 = 0, $j0valid858 = 0, $j0valid865 = 0, $j0valid894 = 0, $j0valid901 = 0, $j0valid927 = 0, $j0valid934 = 0, $j0valid941 = 0, $j0valid998 = 0, $j1array = 0, $j1array1018 = 0, $j1array1034 = 0, $j1array1050 = 0, $j1array1066 = 0, $j1array1082 = 0;
 var $j1array1140 = 0, $j1array1156 = 0, $j1array1172 = 0, $j1array1188 = 0, $j1array1204 = 0, $j1array126 = 0, $j1array142 = 0, $j1array158 = 0, $j1array174 = 0, $j1array190 = 0, $j1array21 = 0, $j1array260 = 0, $j1array37 = 0, $j1array53 = 0, $j1array69 = 0, $j1valid = 0, $j1valid1026 = 0, $j1valid1042 = 0, $j1valid1058 = 0, $j1valid1074 = 0;
 var $j1valid1090 = 0, $j1valid1148 = 0, $j1valid1164 = 0, $j1valid1180 = 0, $j1valid1196 = 0, $j1valid1212 = 0, $j1valid134 = 0, $j1valid150 = 0, $j1valid166 = 0, $j1valid182 = 0, $j1valid198 = 0, $j1valid263 = 0, $j1valid29 = 0, $j1valid45 = 0, $j1valid61 = 0, $j1valid77 = 0, $j3array = 0, $j3valid = 0, $numroots = 0, $numroots1017 = 0;
 var $numroots1033 = 0, $numroots1049 = 0, $numroots1065 = 0, $numroots1081 = 0, $numroots1139 = 0, $numroots1155 = 0, $numroots1171 = 0, $numroots1187 = 0, $numroots1203 = 0, $numroots125 = 0, $numroots141 = 0, $numroots157 = 0, $numroots173 = 0, $numroots189 = 0, $numroots20 = 0, $numroots36 = 0, $numroots52 = 0, $numroots68 = 0, $numsolutions$01900 = 0, $numsolutions1022$01280 = 0;
 var $numsolutions1038$01265 = 0, $numsolutions130$01805 = 0, $numsolutions146$01790 = 0, $numsolutions162$01775 = 0, $numsolutions178$01760 = 0, $numsolutions194$01745 = 0, $numsolutions25$01885 = 0, $numsolutions41$01870 = 0, $numsolutions57$01855 = 0, $numsolutions73$01840 = 0, $op = 0, $op1015 = 0, $op1031 = 0, $op1047 = 0, $op1063 = 0, $op1079 = 0, $op1137 = 0, $op1153 = 0, $op1169 = 0, $op1185 = 0;
 var $op1201 = 0, $op123 = 0, $op139 = 0, $op155 = 0, $op171 = 0, $op18 = 0, $op187 = 0, $op34 = 0, $op50 = 0, $op66 = 0, $or$cond = 0, $or$cond160 = 0, $or$cond465 = 0, $or$cond90 = 0, $sj0array = 0, $sj0array367 = 0, $sj0array374 = 0, $sj0array384 = 0, $sj0array391 = 0, $sj0array518 = 0;
 var $sj0array525 = 0, $sj0array535 = 0, $sj0array542 = 0, $sj0array586 = 0, $sj0array593 = 0, $sj0array622 = 0, $sj0array629 = 0, $sj0array658 = 0, $sj0array665 = 0, $sj0array694 = 0, $sj0array701 = 0, $sj0array727 = 0, $sj0array734 = 0, $sj0array741 = 0, $sj0array785 = 0, $sj0array792 = 0, $sj0array821 = 0, $sj0array828 = 0, $sj0array857 = 0, $sj0array864 = 0;
 var $sj0array893 = 0, $sj0array900 = 0, $sj0array926 = 0, $sj0array933 = 0, $sj0array940 = 0, $sj0array997 = 0, $sj1array = 0, $sj1array1020 = 0, $sj1array1036 = 0, $sj1array1052 = 0, $sj1array1068 = 0, $sj1array1084 = 0, $sj1array1142 = 0, $sj1array1158 = 0, $sj1array1174 = 0, $sj1array1190 = 0, $sj1array1206 = 0, $sj1array128 = 0, $sj1array144 = 0, $sj1array160 = 0;
 var $sj1array176 = 0, $sj1array192 = 0, $sj1array23 = 0, $sj1array262 = 0, $sj1array39 = 0, $sj1array55 = 0, $sj1array71 = 0, $sj3array = 0, $x1009 = 0, $x1010 = 0, $x1020 = 0, $x1021 = 0, $x103 = 0, $x1038 = 0, $x1039 = 0, $x104 = 0, $x1047 = 0, $x1048 = 0, $x1054 = 0, $x1055 = 0;
 var $x1064 = 0, $x1065 = 0, $x1074 = 0, $x1078 = 0, $x1084 = 0, $x1089 = 0, $x1098 = 0, $x1099 = 0, $x1115 = 0, $x1116 = 0, $x1130 = 0, $x1131 = 0, $x1184 = 0, $x1185 = 0, $x1196 = 0, $x1197 = 0, $x1208 = 0, $x1209 = 0, $x1241 = 0, $x1242 = 0;
 var $x1252 = 0, $x1253 = 0, $x1263 = 0, $x1264 = 0, $x1281 = 0, $x1282 = 0, $x1290 = 0, $x1291 = 0, $x1297 = 0, $x1298 = 0, $x1307 = 0, $x1308 = 0, $x1317 = 0, $x1322 = 0, $x1326 = 0, $x1330 = 0, $x1342 = 0, $x1343 = 0, $x1360 = 0, $x1361 = 0;
 var $x1376 = 0, $x1377 = 0, $x1407 = 0, $x1412 = 0, $x1419 = 0, $x1420 = 0, $x1428 = 0, $x1429 = 0, $x1443 = 0, $x1447 = 0, $x1452 = 0, $x1453 = 0, $x1461 = 0, $x1462 = 0, $x1476 = 0, $x1480 = 0, $x1487 = 0, $x1488 = 0, $x1496 = 0, $x1497 = 0;
 var $x1511 = 0, $x1516 = 0, $x1521 = 0, $x1522 = 0, $x1530 = 0, $x1531 = 0, $x1539 = 0, $x1548 = 0, $x1557 = 0, $x1573 = 0, $x1574 = 0, $x1593 = 0, $x1594 = 0, $x1613 = 0, $x1614 = 0, $x1649 = 0, $x1653 = 0, $x1658 = 0, $x1659 = 0, $x1667 = 0;
 var $x1668 = 0, $x1684 = 0, $x1689 = 0, $x1696 = 0, $x1697 = 0, $x1705 = 0, $x1706 = 0, $x1722 = 0, $x1727 = 0, $x1732 = 0, $x1733 = 0, $x1741 = 0, $x1742 = 0, $x1758 = 0, $x1762 = 0, $x1769 = 0, $x1770 = 0, $x1778 = 0, $x1779 = 0, $x1787 = 0;
 var $x1796 = 0, $x1805 = 0, $x1821 = 0, $x1822 = 0, $x1843 = 0, $x1844 = 0, $x1863 = 0, $x1864 = 0, $x1887 = 0, $x1888 = 0, $x1917 = 0, $x1918 = 0, $x1942 = 0, $x1943 = 0, $x1964 = 0, $x1965 = 0, $x2020 = 0, $x2037 = 0, $x2038 = 0, $x2061 = 0;
 var $x2062 = 0, $x2084 = 0, $x2085 = 0, $x2130 = 0, $x2145 = 0, $x2146 = 0, $x2168 = 0, $x2169 = 0, $x2191 = 0, $x2192 = 0, $x2221 = 0, $x2222 = 0, $x2254 = 0, $x2255 = 0, $x2284 = 0, $x2285 = 0, $x603 = 0, $x620 = 0, $x621 = 0, $x644 = 0;
 var $x645 = 0, $x667 = 0, $x668 = 0, $x713 = 0, $x728 = 0, $x729 = 0, $x751 = 0, $x752 = 0, $x774 = 0, $x775 = 0, $x804 = 0, $x805 = 0, $x837 = 0, $x838 = 0, $x867 = 0, $x868 = 0, $x893 = 0, $x894 = 0, $x942 = 0, $x943 = 0;
 var $x954 = 0, $x955 = 0, $x966 = 0, $x967 = 0, $x998 = 0, $x999 = 0, $zeror = 0, $zeror1016 = 0, $zeror1032 = 0, $zeror1048 = 0, $zeror1064 = 0, $zeror1080 = 0, $zeror1138 = 0, $zeror1154 = 0, $zeror1170 = 0, $zeror1186 = 0, $zeror1202 = 0, $zeror124 = 0, $zeror140 = 0, $zeror156 = 0;
 var $zeror172 = 0, $zeror188 = 0, $zeror19 = 0, $zeror35 = 0, $zeror51 = 0, $zeror67 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 6432|0;
 $j3array = sp + 6224|0;
 $cj3array = sp + 6208|0;
 $sj3array = sp + 6192|0;
 $j3valid = sp + 6426|0;
 $j0array = sp + 6176|0;
 $cj0array = sp + 6160|0;
 $sj0array = sp + 6144|0;
 $j0valid = sp + 6424|0;
 $x103 = sp + 6128|0;
 $x104 = sp + 6112|0;
 $op = sp + 6088|0;
 $zeror = sp + 6072|0;
 $numroots = sp + 6316|0;
 $j1array = sp + 6056|0;
 $cj1array = sp + 6040|0;
 $sj1array = sp + 6024|0;
 $j1valid = sp + 6422|0;
 $op18 = sp + 6000|0;
 $zeror19 = sp + 5984|0;
 $numroots20 = sp + 6312|0;
 $j1array21 = sp + 5968|0;
 $cj1array22 = sp + 5952|0;
 $sj1array23 = sp + 5936|0;
 $j1valid29 = sp + 6420|0;
 $op34 = sp + 5912|0;
 $zeror35 = sp + 5896|0;
 $numroots36 = sp + 6308|0;
 $j1array37 = sp + 5880|0;
 $cj1array38 = sp + 5864|0;
 $sj1array39 = sp + 5848|0;
 $j1valid45 = sp + 6418|0;
 $op50 = sp + 5824|0;
 $zeror51 = sp + 5808|0;
 $numroots52 = sp + 6304|0;
 $j1array53 = sp + 5792|0;
 $cj1array54 = sp + 5776|0;
 $sj1array55 = sp + 5760|0;
 $j1valid61 = sp + 6416|0;
 $op66 = sp + 5736|0;
 $zeror67 = sp + 5720|0;
 $numroots68 = sp + 6300|0;
 $j1array69 = sp + 5704|0;
 $cj1array70 = sp + 5688|0;
 $sj1array71 = sp + 5672|0;
 $j1valid77 = sp + 6414|0;
 $x603 = sp + 5656|0;
 $x620 = sp + 5640|0;
 $x621 = sp + 5624|0;
 $x644 = sp + 5608|0;
 $x645 = sp + 5592|0;
 $x667 = sp + 5576|0;
 $x668 = sp + 5560|0;
 $op123 = sp + 5536|0;
 $zeror124 = sp + 5520|0;
 $numroots125 = sp + 6296|0;
 $j1array126 = sp + 5504|0;
 $cj1array127 = sp + 5488|0;
 $sj1array128 = sp + 5472|0;
 $j1valid134 = sp + 6412|0;
 $op139 = sp + 5448|0;
 $zeror140 = sp + 5432|0;
 $numroots141 = sp + 6292|0;
 $j1array142 = sp + 5416|0;
 $cj1array143 = sp + 5400|0;
 $sj1array144 = sp + 5384|0;
 $j1valid150 = sp + 6410|0;
 $op155 = sp + 5360|0;
 $zeror156 = sp + 5344|0;
 $numroots157 = sp + 6288|0;
 $j1array158 = sp + 5328|0;
 $cj1array159 = sp + 5312|0;
 $sj1array160 = sp + 5296|0;
 $j1valid166 = sp + 6408|0;
 $op171 = sp + 5272|0;
 $zeror172 = sp + 5256|0;
 $numroots173 = sp + 6284|0;
 $j1array174 = sp + 5240|0;
 $cj1array175 = sp + 5224|0;
 $sj1array176 = sp + 5208|0;
 $j1valid182 = sp + 6406|0;
 $op187 = sp + 5184|0;
 $zeror188 = sp + 5168|0;
 $numroots189 = sp + 6280|0;
 $j1array190 = sp + 5152|0;
 $cj1array191 = sp + 5136|0;
 $sj1array192 = sp + 5120|0;
 $j1valid198 = sp + 6404|0;
 $x713 = sp + 5104|0;
 $x728 = sp + 5088|0;
 $x729 = sp + 5072|0;
 $x751 = sp + 5056|0;
 $x752 = sp + 5040|0;
 $x774 = sp + 5024|0;
 $x775 = sp + 5008|0;
 $x804 = sp + 4992|0;
 $x805 = sp + 4976|0;
 $x837 = sp + 4960|0;
 $x838 = sp + 4944|0;
 $x867 = sp + 4928|0;
 $x868 = sp + 4912|0;
 $j1array260 = sp + 4896|0;
 $cj1array261 = sp + 4880|0;
 $sj1array262 = sp + 4864|0;
 $j1valid263 = sp + 6402|0;
 $x893 = sp + 4848|0;
 $x894 = sp + 4832|0;
 $x942 = sp + 4816|0;
 $x943 = sp + 4800|0;
 $x954 = sp + 4784|0;
 $x955 = sp + 4768|0;
 $x966 = sp + 4752|0;
 $x967 = sp + 4736|0;
 $x998 = sp + 4720|0;
 $x999 = sp + 4704|0;
 $x1009 = sp + 4688|0;
 $x1010 = sp + 4672|0;
 $x1020 = sp + 4656|0;
 $x1021 = sp + 4640|0;
 $x1038 = sp + 4624|0;
 $x1039 = sp + 4608|0;
 $x1047 = sp + 4592|0;
 $x1048 = sp + 4576|0;
 $x1054 = sp + 4560|0;
 $x1055 = sp + 4544|0;
 $x1064 = sp + 4528|0;
 $x1065 = sp + 4512|0;
 $j0array365 = sp + 4496|0;
 $cj0array366 = sp + 4480|0;
 $sj0array367 = sp + 4464|0;
 $j0valid368 = sp + 6400|0;
 $x1074 = sp + 4448|0;
 $j0array372 = sp + 4432|0;
 $cj0array373 = sp + 4416|0;
 $sj0array374 = sp + 4400|0;
 $j0valid375 = sp + 6398|0;
 $x1078 = sp + 4384|0;
 $j0array382 = sp + 4368|0;
 $cj0array383 = sp + 4352|0;
 $sj0array384 = sp + 4336|0;
 $j0valid385 = sp + 6396|0;
 $x1084 = sp + 4320|0;
 $j0array389 = sp + 4304|0;
 $cj0array390 = sp + 4288|0;
 $sj0array391 = sp + 4272|0;
 $j0valid392 = sp + 6394|0;
 $x1089 = sp + 4256|0;
 $x1098 = sp + 4240|0;
 $x1099 = sp + 4224|0;
 $x1115 = sp + 4208|0;
 $x1116 = sp + 4192|0;
 $x1130 = sp + 4176|0;
 $x1131 = sp + 4160|0;
 $x1184 = sp + 4144|0;
 $x1185 = sp + 4128|0;
 $x1196 = sp + 4112|0;
 $x1197 = sp + 4096|0;
 $x1208 = sp + 4080|0;
 $x1209 = sp + 4064|0;
 $x1241 = sp + 4048|0;
 $x1242 = sp + 4032|0;
 $x1252 = sp + 4016|0;
 $x1253 = sp + 4000|0;
 $x1263 = sp + 3984|0;
 $x1264 = sp + 3968|0;
 $x1281 = sp + 3952|0;
 $x1282 = sp + 3936|0;
 $x1290 = sp + 3920|0;
 $x1291 = sp + 3904|0;
 $x1297 = sp + 3888|0;
 $x1298 = sp + 3872|0;
 $x1307 = sp + 3856|0;
 $x1308 = sp + 3840|0;
 $j0array516 = sp + 3824|0;
 $cj0array517 = sp + 3808|0;
 $sj0array518 = sp + 3792|0;
 $j0valid519 = sp + 6392|0;
 $x1317 = sp + 3776|0;
 $j0array523 = sp + 3760|0;
 $cj0array524 = sp + 3744|0;
 $sj0array525 = sp + 3728|0;
 $j0valid526 = sp + 6390|0;
 $x1322 = sp + 3712|0;
 $j0array533 = sp + 3696|0;
 $cj0array534 = sp + 3680|0;
 $sj0array535 = sp + 3664|0;
 $j0valid536 = sp + 6388|0;
 $x1326 = sp + 3648|0;
 $j0array540 = sp + 3632|0;
 $cj0array541 = sp + 3616|0;
 $sj0array542 = sp + 3600|0;
 $j0valid543 = sp + 6386|0;
 $x1330 = sp + 3584|0;
 $x1342 = sp + 3568|0;
 $x1343 = sp + 3552|0;
 $x1360 = sp + 3536|0;
 $x1361 = sp + 3520|0;
 $x1376 = sp + 3504|0;
 $x1377 = sp + 3488|0;
 $j0array584 = sp + 3472|0;
 $cj0array585 = sp + 3456|0;
 $sj0array586 = sp + 3440|0;
 $j0valid587 = sp + 6384|0;
 $x1407 = sp + 3424|0;
 $j0array591 = sp + 3408|0;
 $cj0array592 = sp + 3392|0;
 $sj0array593 = sp + 3376|0;
 $j0valid594 = sp + 6382|0;
 $x1412 = sp + 3360|0;
 $x1419 = sp + 3344|0;
 $x1420 = sp + 3328|0;
 $x1428 = sp + 3312|0;
 $x1429 = sp + 3296|0;
 $j0array620 = sp + 3280|0;
 $cj0array621 = sp + 3264|0;
 $sj0array622 = sp + 3248|0;
 $j0valid623 = sp + 6380|0;
 $x1443 = sp + 3232|0;
 $j0array627 = sp + 3216|0;
 $cj0array628 = sp + 3200|0;
 $sj0array629 = sp + 3184|0;
 $j0valid630 = sp + 6378|0;
 $x1447 = sp + 3168|0;
 $x1452 = sp + 3152|0;
 $x1453 = sp + 3136|0;
 $x1461 = sp + 3120|0;
 $x1462 = sp + 3104|0;
 $j0array656 = sp + 3088|0;
 $cj0array657 = sp + 3072|0;
 $sj0array658 = sp + 3056|0;
 $j0valid659 = sp + 6376|0;
 $x1476 = sp + 3040|0;
 $j0array663 = sp + 3024|0;
 $cj0array664 = sp + 3008|0;
 $sj0array665 = sp + 2992|0;
 $j0valid666 = sp + 6374|0;
 $x1480 = sp + 2976|0;
 $x1487 = sp + 2960|0;
 $x1488 = sp + 2944|0;
 $x1496 = sp + 2928|0;
 $x1497 = sp + 2912|0;
 $j0array692 = sp + 2896|0;
 $cj0array693 = sp + 2880|0;
 $sj0array694 = sp + 2864|0;
 $j0valid695 = sp + 6372|0;
 $x1511 = sp + 2848|0;
 $j0array699 = sp + 2832|0;
 $cj0array700 = sp + 2816|0;
 $sj0array701 = sp + 2800|0;
 $j0valid702 = sp + 6370|0;
 $x1516 = sp + 2784|0;
 $x1521 = sp + 2768|0;
 $x1522 = sp + 2752|0;
 $x1530 = sp + 2736|0;
 $x1531 = sp + 2720|0;
 $j0array725 = sp + 2704|0;
 $cj0array726 = sp + 2688|0;
 $sj0array727 = sp + 2672|0;
 $j0valid728 = sp + 6368|0;
 $x1539 = sp + 2656|0;
 $j0array732 = sp + 2640|0;
 $cj0array733 = sp + 2624|0;
 $sj0array734 = sp + 2608|0;
 $j0valid735 = sp + 6366|0;
 $x1548 = sp + 2592|0;
 $j0array739 = sp + 2576|0;
 $cj0array740 = sp + 2560|0;
 $sj0array741 = sp + 2544|0;
 $j0valid742 = sp + 6364|0;
 $x1557 = sp + 2528|0;
 $x1573 = sp + 2512|0;
 $x1574 = sp + 2496|0;
 $x1593 = sp + 2480|0;
 $x1594 = sp + 2464|0;
 $x1613 = sp + 2448|0;
 $x1614 = sp + 2432|0;
 $j0array783 = sp + 2416|0;
 $cj0array784 = sp + 2400|0;
 $sj0array785 = sp + 2384|0;
 $j0valid786 = sp + 6362|0;
 $x1649 = sp + 2368|0;
 $j0array790 = sp + 2352|0;
 $cj0array791 = sp + 2336|0;
 $sj0array792 = sp + 2320|0;
 $j0valid793 = sp + 6360|0;
 $x1653 = sp + 2304|0;
 $x1658 = sp + 2288|0;
 $x1659 = sp + 2272|0;
 $x1667 = sp + 2256|0;
 $x1668 = sp + 2240|0;
 $j0array819 = sp + 2224|0;
 $cj0array820 = sp + 2208|0;
 $sj0array821 = sp + 2192|0;
 $j0valid822 = sp + 6358|0;
 $x1684 = sp + 2176|0;
 $j0array826 = sp + 2160|0;
 $cj0array827 = sp + 2144|0;
 $sj0array828 = sp + 2128|0;
 $j0valid829 = sp + 6356|0;
 $x1689 = sp + 2112|0;
 $x1696 = sp + 2096|0;
 $x1697 = sp + 2080|0;
 $x1705 = sp + 2064|0;
 $x1706 = sp + 2048|0;
 $j0array855 = sp + 2032|0;
 $cj0array856 = sp + 2016|0;
 $sj0array857 = sp + 2000|0;
 $j0valid858 = sp + 6354|0;
 $x1722 = sp + 1984|0;
 $j0array862 = sp + 1968|0;
 $cj0array863 = sp + 1952|0;
 $sj0array864 = sp + 1936|0;
 $j0valid865 = sp + 6352|0;
 $x1727 = sp + 1920|0;
 $x1732 = sp + 1904|0;
 $x1733 = sp + 1888|0;
 $x1741 = sp + 1872|0;
 $x1742 = sp + 1856|0;
 $j0array891 = sp + 1840|0;
 $cj0array892 = sp + 1824|0;
 $sj0array893 = sp + 1808|0;
 $j0valid894 = sp + 6350|0;
 $x1758 = sp + 1792|0;
 $j0array898 = sp + 1776|0;
 $cj0array899 = sp + 1760|0;
 $sj0array900 = sp + 1744|0;
 $j0valid901 = sp + 6348|0;
 $x1762 = sp + 1728|0;
 $x1769 = sp + 1712|0;
 $x1770 = sp + 1696|0;
 $x1778 = sp + 1680|0;
 $x1779 = sp + 1664|0;
 $j0array924 = sp + 1648|0;
 $cj0array925 = sp + 1632|0;
 $sj0array926 = sp + 1616|0;
 $j0valid927 = sp + 6346|0;
 $x1787 = sp + 1600|0;
 $j0array931 = sp + 1584|0;
 $cj0array932 = sp + 1568|0;
 $sj0array933 = sp + 1552|0;
 $j0valid934 = sp + 6344|0;
 $x1796 = sp + 1536|0;
 $j0array938 = sp + 1520|0;
 $cj0array939 = sp + 1504|0;
 $sj0array940 = sp + 1488|0;
 $j0valid941 = sp + 6342|0;
 $x1805 = sp + 1472|0;
 $x1821 = sp + 1456|0;
 $x1822 = sp + 1440|0;
 $x1843 = sp + 1424|0;
 $x1844 = sp + 1408|0;
 $x1863 = sp + 1392|0;
 $x1864 = sp + 1376|0;
 $x1887 = sp + 1360|0;
 $x1888 = sp + 1344|0;
 $x1917 = sp + 1328|0;
 $x1918 = sp + 1312|0;
 $x1942 = sp + 1296|0;
 $x1943 = sp + 1280|0;
 $j0array995 = sp + 1264|0;
 $cj0array996 = sp + 1248|0;
 $sj0array997 = sp + 1232|0;
 $j0valid998 = sp + 6340|0;
 $x1964 = sp + 1216|0;
 $x1965 = sp + 1200|0;
 $op1015 = sp + 1176|0;
 $zeror1016 = sp + 1160|0;
 $numroots1017 = sp + 6276|0;
 $j1array1018 = sp + 1144|0;
 $cj1array1019 = sp + 1128|0;
 $sj1array1020 = sp + 1112|0;
 $j1valid1026 = sp + 6338|0;
 $op1031 = sp + 1088|0;
 $zeror1032 = sp + 1072|0;
 $numroots1033 = sp + 6272|0;
 $j1array1034 = sp + 1056|0;
 $cj1array1035 = sp + 1040|0;
 $sj1array1036 = sp + 1024|0;
 $j1valid1042 = sp + 6336|0;
 $op1047 = sp + 1000|0;
 $zeror1048 = sp + 984|0;
 $numroots1049 = sp + 6268|0;
 $j1array1050 = sp + 968|0;
 $cj1array1051 = sp + 952|0;
 $sj1array1052 = sp + 936|0;
 $j1valid1058 = sp + 6334|0;
 $op1063 = sp + 912|0;
 $zeror1064 = sp + 896|0;
 $numroots1065 = sp + 6264|0;
 $j1array1066 = sp + 880|0;
 $cj1array1067 = sp + 864|0;
 $sj1array1068 = sp + 848|0;
 $j1valid1074 = sp + 6332|0;
 $op1079 = sp + 824|0;
 $zeror1080 = sp + 808|0;
 $numroots1081 = sp + 6260|0;
 $j1array1082 = sp + 792|0;
 $cj1array1083 = sp + 776|0;
 $sj1array1084 = sp + 760|0;
 $j1valid1090 = sp + 6330|0;
 $x2020 = sp + 744|0;
 $x2037 = sp + 728|0;
 $x2038 = sp + 712|0;
 $x2061 = sp + 696|0;
 $x2062 = sp + 680|0;
 $x2084 = sp + 664|0;
 $x2085 = sp + 648|0;
 $op1137 = sp + 624|0;
 $zeror1138 = sp + 608|0;
 $numroots1139 = sp + 6256|0;
 $j1array1140 = sp + 592|0;
 $cj1array1141 = sp + 576|0;
 $sj1array1142 = sp + 560|0;
 $j1valid1148 = sp + 6328|0;
 $op1153 = sp + 536|0;
 $zeror1154 = sp + 520|0;
 $numroots1155 = sp + 6252|0;
 $j1array1156 = sp + 504|0;
 $cj1array1157 = sp + 488|0;
 $sj1array1158 = sp + 472|0;
 $j1valid1164 = sp + 6326|0;
 $op1169 = sp + 448|0;
 $zeror1170 = sp + 432|0;
 $numroots1171 = sp + 6248|0;
 $j1array1172 = sp + 416|0;
 $cj1array1173 = sp + 400|0;
 $sj1array1174 = sp + 384|0;
 $j1valid1180 = sp + 6324|0;
 $op1185 = sp + 360|0;
 $zeror1186 = sp + 344|0;
 $numroots1187 = sp + 6244|0;
 $j1array1188 = sp + 328|0;
 $cj1array1189 = sp + 312|0;
 $sj1array1190 = sp + 296|0;
 $j1valid1196 = sp + 6322|0;
 $op1201 = sp + 272|0;
 $zeror1202 = sp + 256|0;
 $numroots1203 = sp + 6240|0;
 $j1array1204 = sp + 240|0;
 $cj1array1205 = sp + 224|0;
 $sj1array1206 = sp + 208|0;
 $j1valid1212 = sp + 6320|0;
 $x2130 = sp + 192|0;
 $x2145 = sp + 176|0;
 $x2146 = sp + 160|0;
 $x2168 = sp + 144|0;
 $x2169 = sp + 128|0;
 $x2191 = sp + 112|0;
 $x2192 = sp + 96|0;
 $x2221 = sp + 80|0;
 $x2222 = sp + 64|0;
 $x2254 = sp + 48|0;
 $x2255 = sp + 32|0;
 $x2284 = sp + 16|0;
 $x2285 = sp;
 HEAPF64[$this>>3] = nan;
 $0 = ((($this)) + 568|0);
 HEAP8[$0>>0] = -1;
 $1 = ((($this)) + 569|0);
 HEAP8[$1>>0] = -1;
 $2 = ((($this)) + 570|0);
 HEAP8[$2>>0] = -1;
 $3 = ((($this)) + 40|0);
 HEAPF64[$3>>3] = nan;
 $4 = ((($this)) + 571|0);
 HEAP8[$4>>0] = -1;
 $5 = ((($this)) + 572|0);
 HEAP8[$5>>0] = -1;
 $6 = ((($this)) + 573|0);
 HEAP8[$6>>0] = -1;
 $7 = ((($this)) + 80|0);
 HEAPF64[$7>>3] = nan;
 $8 = ((($this)) + 574|0);
 HEAP8[$8>>0] = -1;
 $9 = ((($this)) + 575|0);
 HEAP8[$9>>0] = -1;
 $10 = ((($this)) + 576|0);
 HEAP8[$10>>0] = -1;
 $11 = ((($this)) + 120|0);
 HEAPF64[$11>>3] = nan;
 $12 = ((($this)) + 577|0);
 HEAP8[$12>>0] = -1;
 $13 = ((($this)) + 578|0);
 HEAP8[$13>>0] = -1;
 $14 = ((($this)) + 579|0);
 HEAP8[$14>>0] = -1;
 $15 = ((($this)) + 160|0);
 HEAPF64[$15>>3] = nan;
 $16 = ((($this)) + 580|0);
 HEAP8[$16>>0] = -1;
 $17 = ((($this)) + 581|0);
 HEAP8[$17>>0] = -1;
 $18 = ((($this)) + 582|0);
 HEAP8[$18>>0] = -1;
 $19 = ((($this)) + 200|0);
 HEAPF64[$19>>3] = nan;
 $20 = ((($this)) + 583|0);
 $21 = ((($this)) + 588|0);
 ;HEAP8[$20>>0]=255|0;HEAP8[$20+1>>0]=255|0;HEAP8[$20+2>>0]=255|0;HEAP8[$20+3>>0]=255|0;HEAP8[$20+4>>0]=255|0;
 HEAP8[$21>>0] = 0;
 $22 = ((($this)) + 240|0);
 $23 = ((($this)) + 248|0);
 $24 = ((($this)) + 256|0);
 $25 = ((($this)) + 264|0);
 $26 = ((($this)) + 280|0);
 $27 = ((($eerot)) + 8|0);
 $28 = ((($this)) + 304|0);
 $29 = ((($eerot)) + 16|0);
 $30 = ((($this)) + 328|0);
 $31 = ((($eerot)) + 24|0);
 $32 = ((($this)) + 352|0);
 $33 = ((($eerot)) + 32|0);
 $34 = ((($this)) + 376|0);
 $35 = ((($eerot)) + 40|0);
 $36 = ((($this)) + 400|0);
 $37 = ((($eerot)) + 48|0);
 $38 = ((($this)) + 424|0);
 $39 = ((($eerot)) + 56|0);
 $40 = ((($this)) + 448|0);
 $41 = ((($eerot)) + 64|0);
 $42 = ((($this)) + 472|0);
 $43 = ((($this)) + 496|0);
 $44 = ((($eetrans)) + 8|0);
 $45 = ((($this)) + 520|0);
 $46 = ((($eetrans)) + 16|0);
 $47 = ((($this)) + 544|0);
 $48 = ((($this)) + 272|0);
 $49 = ((($this)) + 296|0);
 $50 = ((($this)) + 320|0);
 $51 = ((($this)) + 488|0);
 $52 = ((($this)) + 344|0);
 $53 = ((($this)) + 368|0);
 $54 = ((($this)) + 392|0);
 $55 = ((($this)) + 512|0);
 $56 = ((($this)) + 416|0);
 $57 = ((($this)) + 440|0);
 $58 = ((($this)) + 464|0);
 $59 = ((($this)) + 536|0);
 $60 = ((($this)) + 560|0);
 $61 = ((($this)) + 504|0);
 $62 = ((($this)) + 528|0);
 $63 = ((($this)) + 552|0);
 $64 = ((($this)) + 288|0);
 $65 = ((($this)) + 312|0);
 $66 = ((($this)) + 336|0);
 $67 = ((($this)) + 360|0);
 $68 = ((($this)) + 384|0);
 $69 = ((($this)) + 408|0);
 $70 = ((($this)) + 432|0);
 $71 = ((($this)) + 456|0);
 $72 = ((($this)) + 480|0);
 $73 = ((($j3array)) + 8|0);
 $74 = ((($j3valid)) + 1|0);
 $75 = ((($this)) + 88|0);
 $76 = ((($this)) + 96|0);
 $77 = ((($x103)) + 8|0);
 $78 = ((($x104)) + 8|0);
 $79 = ((($j0array)) + 8|0);
 $80 = ((($sj0array)) + 8|0);
 $81 = ((($cj0array)) + 8|0);
 $82 = ((($j0valid)) + 1|0);
 $83 = ((($this)) + 8|0);
 $84 = ((($this)) + 16|0);
 $85 = ((($op)) + 8|0);
 $86 = ((($op)) + 16|0);
 $87 = ((($this)) + 48|0);
 $88 = ((($this)) + 56|0);
 $89 = ((($this)) + 64|0);
 $90 = ((($op18)) + 8|0);
 $91 = ((($op18)) + 16|0);
 $92 = ((($this)) + 48|0);
 $93 = ((($this)) + 56|0);
 $94 = ((($this)) + 64|0);
 $95 = ((($op34)) + 8|0);
 $96 = ((($op34)) + 16|0);
 $97 = ((($this)) + 48|0);
 $98 = ((($this)) + 56|0);
 $99 = ((($this)) + 64|0);
 $100 = ((($op50)) + 8|0);
 $101 = ((($op50)) + 16|0);
 $102 = ((($this)) + 48|0);
 $103 = ((($this)) + 56|0);
 $104 = ((($this)) + 64|0);
 $105 = ((($op66)) + 8|0);
 $106 = ((($op66)) + 16|0);
 $107 = ((($this)) + 48|0);
 $108 = ((($this)) + 56|0);
 $109 = ((($this)) + 64|0);
 $110 = ((($x603)) + 8|0);
 $111 = ((($this)) + 48|0);
 $112 = ((($this)) + 56|0);
 $113 = ((($x620)) + 8|0);
 $114 = ((($x621)) + 8|0);
 $115 = ((($this)) + 48|0);
 $116 = ((($this)) + 56|0);
 $117 = ((($x644)) + 8|0);
 $118 = ((($x645)) + 8|0);
 $119 = ((($this)) + 48|0);
 $120 = ((($this)) + 56|0);
 $121 = ((($x667)) + 8|0);
 $122 = ((($x668)) + 8|0);
 $123 = ((($this)) + 48|0);
 $124 = ((($this)) + 56|0);
 $125 = ((($op123)) + 8|0);
 $126 = ((($op123)) + 16|0);
 $127 = ((($this)) + 48|0);
 $128 = ((($this)) + 56|0);
 $129 = ((($this)) + 64|0);
 $130 = ((($op139)) + 8|0);
 $131 = ((($op139)) + 16|0);
 $132 = ((($this)) + 48|0);
 $133 = ((($this)) + 56|0);
 $134 = ((($this)) + 64|0);
 $135 = ((($op155)) + 8|0);
 $136 = ((($op155)) + 16|0);
 $137 = ((($this)) + 48|0);
 $138 = ((($this)) + 56|0);
 $139 = ((($this)) + 64|0);
 $140 = ((($op171)) + 8|0);
 $141 = ((($op171)) + 16|0);
 $142 = ((($this)) + 48|0);
 $143 = ((($this)) + 56|0);
 $144 = ((($this)) + 64|0);
 $145 = ((($op187)) + 8|0);
 $146 = ((($op187)) + 16|0);
 $147 = ((($this)) + 48|0);
 $148 = ((($this)) + 56|0);
 $149 = ((($this)) + 64|0);
 $150 = ((($x713)) + 8|0);
 $151 = ((($this)) + 48|0);
 $152 = ((($this)) + 56|0);
 $153 = ((($x728)) + 8|0);
 $154 = ((($x729)) + 8|0);
 $155 = ((($this)) + 48|0);
 $156 = ((($this)) + 56|0);
 $157 = ((($x751)) + 8|0);
 $158 = ((($x752)) + 8|0);
 $159 = ((($this)) + 48|0);
 $160 = ((($this)) + 56|0);
 $161 = ((($x774)) + 8|0);
 $162 = ((($x775)) + 8|0);
 $163 = ((($this)) + 48|0);
 $164 = ((($this)) + 56|0);
 $165 = ((($x804)) + 8|0);
 $166 = ((($x805)) + 8|0);
 $167 = ((($this)) + 48|0);
 $168 = ((($this)) + 56|0);
 $169 = ((($x837)) + 8|0);
 $170 = ((($x838)) + 8|0);
 $171 = ((($this)) + 48|0);
 $172 = ((($this)) + 56|0);
 $173 = ((($x867)) + 8|0);
 $174 = ((($x868)) + 8|0);
 $175 = ((($this)) + 48|0);
 $176 = ((($this)) + 56|0);
 $177 = ((($x893)) + 8|0);
 $178 = ((($x894)) + 8|0);
 $179 = ((($j1array260)) + 8|0);
 $180 = ((($sj1array262)) + 8|0);
 $181 = ((($cj1array261)) + 8|0);
 $182 = ((($j1valid263)) + 1|0);
 $183 = ((($this)) + 48|0);
 $184 = ((($this)) + 56|0);
 $185 = ((($x942)) + 8|0);
 $186 = ((($x943)) + 8|0);
 $187 = ((($this)) + 8|0);
 $188 = ((($this)) + 16|0);
 $189 = ((($x954)) + 8|0);
 $190 = ((($x955)) + 8|0);
 $191 = ((($this)) + 8|0);
 $192 = ((($this)) + 16|0);
 $193 = ((($x966)) + 8|0);
 $194 = ((($x967)) + 8|0);
 $195 = ((($this)) + 8|0);
 $196 = ((($this)) + 16|0);
 $197 = ((($x998)) + 8|0);
 $198 = ((($x999)) + 8|0);
 $199 = ((($this)) + 8|0);
 $200 = ((($this)) + 16|0);
 $201 = ((($x1009)) + 8|0);
 $202 = ((($x1010)) + 8|0);
 $203 = ((($this)) + 8|0);
 $204 = ((($this)) + 16|0);
 $205 = ((($x1020)) + 8|0);
 $206 = ((($x1021)) + 8|0);
 $207 = ((($this)) + 8|0);
 $208 = ((($this)) + 16|0);
 $209 = ((($x1038)) + 8|0);
 $210 = ((($x1039)) + 8|0);
 $211 = ((($this)) + 8|0);
 $212 = ((($this)) + 16|0);
 $213 = ((($x1047)) + 8|0);
 $214 = ((($x1048)) + 8|0);
 $215 = ((($this)) + 8|0);
 $216 = ((($this)) + 16|0);
 $217 = ((($x1054)) + 8|0);
 $218 = ((($x1055)) + 8|0);
 $219 = ((($this)) + 8|0);
 $220 = ((($this)) + 16|0);
 $221 = ((($x1064)) + 8|0);
 $222 = ((($x1065)) + 8|0);
 $223 = ((($this)) + 8|0);
 $224 = ((($this)) + 16|0);
 $225 = ((($x1074)) + 8|0);
 $226 = ((($j0array365)) + 8|0);
 $227 = ((($sj0array367)) + 8|0);
 $228 = ((($cj0array366)) + 8|0);
 $229 = ((($j0valid368)) + 1|0);
 $230 = ((($this)) + 8|0);
 $231 = ((($this)) + 16|0);
 $232 = ((($x1078)) + 8|0);
 $233 = ((($j0array372)) + 8|0);
 $234 = ((($sj0array374)) + 8|0);
 $235 = ((($cj0array373)) + 8|0);
 $236 = ((($j0valid375)) + 1|0);
 $237 = ((($this)) + 8|0);
 $238 = ((($this)) + 16|0);
 $239 = ((($x1084)) + 8|0);
 $240 = ((($j0array382)) + 8|0);
 $241 = ((($sj0array384)) + 8|0);
 $242 = ((($cj0array383)) + 8|0);
 $243 = ((($j0valid385)) + 1|0);
 $244 = ((($this)) + 8|0);
 $245 = ((($this)) + 16|0);
 $246 = ((($x1089)) + 8|0);
 $247 = ((($j0array389)) + 8|0);
 $248 = ((($sj0array391)) + 8|0);
 $249 = ((($cj0array390)) + 8|0);
 $250 = ((($j0valid392)) + 1|0);
 $251 = ((($this)) + 8|0);
 $252 = ((($this)) + 16|0);
 $253 = ((($x1098)) + 8|0);
 $254 = ((($x1099)) + 8|0);
 $255 = ((($this)) + 8|0);
 $256 = ((($this)) + 16|0);
 $257 = ((($x1115)) + 8|0);
 $258 = ((($x1116)) + 8|0);
 $259 = ((($this)) + 8|0);
 $260 = ((($this)) + 16|0);
 $261 = ((($x1130)) + 8|0);
 $262 = ((($x1131)) + 8|0);
 $263 = ((($this)) + 8|0);
 $264 = ((($this)) + 16|0);
 $265 = ((($x1184)) + 8|0);
 $266 = ((($x1185)) + 8|0);
 $267 = ((($this)) + 8|0);
 $268 = ((($this)) + 16|0);
 $269 = ((($x1196)) + 8|0);
 $270 = ((($x1197)) + 8|0);
 $271 = ((($this)) + 8|0);
 $272 = ((($this)) + 16|0);
 $273 = ((($x1208)) + 8|0);
 $274 = ((($x1209)) + 8|0);
 $275 = ((($this)) + 8|0);
 $276 = ((($this)) + 16|0);
 $277 = ((($x1241)) + 8|0);
 $278 = ((($x1242)) + 8|0);
 $279 = ((($this)) + 8|0);
 $280 = ((($this)) + 16|0);
 $281 = ((($x1252)) + 8|0);
 $282 = ((($x1253)) + 8|0);
 $283 = ((($this)) + 8|0);
 $284 = ((($this)) + 16|0);
 $285 = ((($x1263)) + 8|0);
 $286 = ((($x1264)) + 8|0);
 $287 = ((($this)) + 8|0);
 $288 = ((($this)) + 16|0);
 $289 = ((($x1281)) + 8|0);
 $290 = ((($x1282)) + 8|0);
 $291 = ((($this)) + 8|0);
 $292 = ((($this)) + 16|0);
 $293 = ((($x1290)) + 8|0);
 $294 = ((($x1291)) + 8|0);
 $295 = ((($this)) + 8|0);
 $296 = ((($this)) + 16|0);
 $297 = ((($x1297)) + 8|0);
 $298 = ((($x1298)) + 8|0);
 $299 = ((($this)) + 8|0);
 $300 = ((($this)) + 16|0);
 $301 = ((($x1307)) + 8|0);
 $302 = ((($x1308)) + 8|0);
 $303 = ((($this)) + 8|0);
 $304 = ((($this)) + 16|0);
 $305 = ((($x1317)) + 8|0);
 $306 = ((($j0array516)) + 8|0);
 $307 = ((($sj0array518)) + 8|0);
 $308 = ((($cj0array517)) + 8|0);
 $309 = ((($j0valid519)) + 1|0);
 $310 = ((($this)) + 8|0);
 $311 = ((($this)) + 16|0);
 $312 = ((($x1322)) + 8|0);
 $313 = ((($j0array523)) + 8|0);
 $314 = ((($sj0array525)) + 8|0);
 $315 = ((($cj0array524)) + 8|0);
 $316 = ((($j0valid526)) + 1|0);
 $317 = ((($this)) + 8|0);
 $318 = ((($this)) + 16|0);
 $319 = ((($x1326)) + 8|0);
 $320 = ((($j0array533)) + 8|0);
 $321 = ((($sj0array535)) + 8|0);
 $322 = ((($cj0array534)) + 8|0);
 $323 = ((($j0valid536)) + 1|0);
 $324 = ((($this)) + 8|0);
 $325 = ((($this)) + 16|0);
 $326 = ((($x1330)) + 8|0);
 $327 = ((($j0array540)) + 8|0);
 $328 = ((($sj0array542)) + 8|0);
 $329 = ((($cj0array541)) + 8|0);
 $330 = ((($j0valid543)) + 1|0);
 $331 = ((($this)) + 8|0);
 $332 = ((($this)) + 16|0);
 $333 = ((($x1342)) + 8|0);
 $334 = ((($x1343)) + 8|0);
 $335 = ((($this)) + 8|0);
 $336 = ((($this)) + 16|0);
 $337 = ((($x1360)) + 8|0);
 $338 = ((($x1361)) + 8|0);
 $339 = ((($this)) + 8|0);
 $340 = ((($this)) + 16|0);
 $341 = ((($x1376)) + 8|0);
 $342 = ((($x1377)) + 8|0);
 $343 = ((($this)) + 8|0);
 $344 = ((($this)) + 16|0);
 $345 = ((($x1407)) + 8|0);
 $346 = ((($j0array584)) + 8|0);
 $347 = ((($sj0array586)) + 8|0);
 $348 = ((($cj0array585)) + 8|0);
 $349 = ((($j0valid587)) + 1|0);
 $350 = ((($this)) + 8|0);
 $351 = ((($this)) + 16|0);
 $352 = ((($x1412)) + 8|0);
 $353 = ((($j0array591)) + 8|0);
 $354 = ((($sj0array593)) + 8|0);
 $355 = ((($cj0array592)) + 8|0);
 $356 = ((($j0valid594)) + 1|0);
 $357 = ((($this)) + 8|0);
 $358 = ((($this)) + 16|0);
 $359 = ((($x1419)) + 8|0);
 $360 = ((($x1420)) + 8|0);
 $361 = ((($this)) + 8|0);
 $362 = ((($this)) + 16|0);
 $363 = ((($x1428)) + 8|0);
 $364 = ((($x1429)) + 8|0);
 $365 = ((($this)) + 8|0);
 $366 = ((($this)) + 16|0);
 $367 = ((($x1443)) + 8|0);
 $368 = ((($j0array620)) + 8|0);
 $369 = ((($sj0array622)) + 8|0);
 $370 = ((($cj0array621)) + 8|0);
 $371 = ((($j0valid623)) + 1|0);
 $372 = ((($this)) + 8|0);
 $373 = ((($this)) + 16|0);
 $374 = ((($x1447)) + 8|0);
 $375 = ((($j0array627)) + 8|0);
 $376 = ((($sj0array629)) + 8|0);
 $377 = ((($cj0array628)) + 8|0);
 $378 = ((($j0valid630)) + 1|0);
 $379 = ((($this)) + 8|0);
 $380 = ((($this)) + 16|0);
 $381 = ((($x1452)) + 8|0);
 $382 = ((($x1453)) + 8|0);
 $383 = ((($this)) + 8|0);
 $384 = ((($this)) + 16|0);
 $385 = ((($x1461)) + 8|0);
 $386 = ((($x1462)) + 8|0);
 $387 = ((($this)) + 8|0);
 $388 = ((($this)) + 16|0);
 $389 = ((($x1476)) + 8|0);
 $390 = ((($j0array656)) + 8|0);
 $391 = ((($sj0array658)) + 8|0);
 $392 = ((($cj0array657)) + 8|0);
 $393 = ((($j0valid659)) + 1|0);
 $394 = ((($this)) + 8|0);
 $395 = ((($this)) + 16|0);
 $396 = ((($x1480)) + 8|0);
 $397 = ((($j0array663)) + 8|0);
 $398 = ((($sj0array665)) + 8|0);
 $399 = ((($cj0array664)) + 8|0);
 $400 = ((($j0valid666)) + 1|0);
 $401 = ((($this)) + 8|0);
 $402 = ((($this)) + 16|0);
 $403 = ((($x1487)) + 8|0);
 $404 = ((($x1488)) + 8|0);
 $405 = ((($this)) + 8|0);
 $406 = ((($this)) + 16|0);
 $407 = ((($x1496)) + 8|0);
 $408 = ((($x1497)) + 8|0);
 $409 = ((($this)) + 8|0);
 $410 = ((($this)) + 16|0);
 $411 = ((($x1511)) + 8|0);
 $412 = ((($j0array692)) + 8|0);
 $413 = ((($sj0array694)) + 8|0);
 $414 = ((($cj0array693)) + 8|0);
 $415 = ((($j0valid695)) + 1|0);
 $416 = ((($this)) + 8|0);
 $417 = ((($this)) + 16|0);
 $418 = ((($x1516)) + 8|0);
 $419 = ((($j0array699)) + 8|0);
 $420 = ((($sj0array701)) + 8|0);
 $421 = ((($cj0array700)) + 8|0);
 $422 = ((($j0valid702)) + 1|0);
 $423 = ((($this)) + 8|0);
 $424 = ((($this)) + 16|0);
 $425 = ((($x1521)) + 8|0);
 $426 = ((($x1522)) + 8|0);
 $427 = ((($this)) + 8|0);
 $428 = ((($this)) + 16|0);
 $429 = ((($x1530)) + 8|0);
 $430 = ((($x1531)) + 8|0);
 $431 = ((($this)) + 8|0);
 $432 = ((($this)) + 16|0);
 $433 = ((($x1539)) + 8|0);
 $434 = ((($j0array725)) + 8|0);
 $435 = ((($sj0array727)) + 8|0);
 $436 = ((($cj0array726)) + 8|0);
 $437 = ((($j0valid728)) + 1|0);
 $438 = ((($this)) + 8|0);
 $439 = ((($this)) + 16|0);
 $440 = ((($x1548)) + 8|0);
 $441 = ((($j0array732)) + 8|0);
 $442 = ((($sj0array734)) + 8|0);
 $443 = ((($cj0array733)) + 8|0);
 $444 = ((($j0valid735)) + 1|0);
 $445 = ((($this)) + 8|0);
 $446 = ((($this)) + 16|0);
 $447 = ((($x1557)) + 8|0);
 $448 = ((($j0array739)) + 8|0);
 $449 = ((($sj0array741)) + 8|0);
 $450 = ((($cj0array740)) + 8|0);
 $451 = ((($j0valid742)) + 1|0);
 $452 = ((($this)) + 8|0);
 $453 = ((($this)) + 16|0);
 $454 = ((($x1573)) + 8|0);
 $455 = ((($x1574)) + 8|0);
 $456 = ((($this)) + 8|0);
 $457 = ((($this)) + 16|0);
 $458 = ((($x1593)) + 8|0);
 $459 = ((($x1594)) + 8|0);
 $460 = ((($this)) + 8|0);
 $461 = ((($this)) + 16|0);
 $462 = ((($x1613)) + 8|0);
 $463 = ((($x1614)) + 8|0);
 $464 = ((($this)) + 8|0);
 $465 = ((($this)) + 16|0);
 $466 = ((($x1649)) + 8|0);
 $467 = ((($j0array783)) + 8|0);
 $468 = ((($sj0array785)) + 8|0);
 $469 = ((($cj0array784)) + 8|0);
 $470 = ((($j0valid786)) + 1|0);
 $471 = ((($this)) + 8|0);
 $472 = ((($this)) + 16|0);
 $473 = ((($x1653)) + 8|0);
 $474 = ((($j0array790)) + 8|0);
 $475 = ((($sj0array792)) + 8|0);
 $476 = ((($cj0array791)) + 8|0);
 $477 = ((($j0valid793)) + 1|0);
 $478 = ((($this)) + 8|0);
 $479 = ((($this)) + 16|0);
 $480 = ((($x1658)) + 8|0);
 $481 = ((($x1659)) + 8|0);
 $482 = ((($this)) + 8|0);
 $483 = ((($this)) + 16|0);
 $484 = ((($x1667)) + 8|0);
 $485 = ((($x1668)) + 8|0);
 $486 = ((($this)) + 8|0);
 $487 = ((($this)) + 16|0);
 $488 = ((($x1684)) + 8|0);
 $489 = ((($j0array819)) + 8|0);
 $490 = ((($sj0array821)) + 8|0);
 $491 = ((($cj0array820)) + 8|0);
 $492 = ((($j0valid822)) + 1|0);
 $493 = ((($this)) + 8|0);
 $494 = ((($this)) + 16|0);
 $495 = ((($x1689)) + 8|0);
 $496 = ((($j0array826)) + 8|0);
 $497 = ((($sj0array828)) + 8|0);
 $498 = ((($cj0array827)) + 8|0);
 $499 = ((($j0valid829)) + 1|0);
 $500 = ((($this)) + 8|0);
 $501 = ((($this)) + 16|0);
 $502 = ((($x1696)) + 8|0);
 $503 = ((($x1697)) + 8|0);
 $504 = ((($this)) + 8|0);
 $505 = ((($this)) + 16|0);
 $506 = ((($x1705)) + 8|0);
 $507 = ((($x1706)) + 8|0);
 $508 = ((($this)) + 8|0);
 $509 = ((($this)) + 16|0);
 $510 = ((($x1722)) + 8|0);
 $511 = ((($j0array855)) + 8|0);
 $512 = ((($sj0array857)) + 8|0);
 $513 = ((($cj0array856)) + 8|0);
 $514 = ((($j0valid858)) + 1|0);
 $515 = ((($this)) + 8|0);
 $516 = ((($this)) + 16|0);
 $517 = ((($x1727)) + 8|0);
 $518 = ((($j0array862)) + 8|0);
 $519 = ((($sj0array864)) + 8|0);
 $520 = ((($cj0array863)) + 8|0);
 $521 = ((($j0valid865)) + 1|0);
 $522 = ((($this)) + 8|0);
 $523 = ((($this)) + 16|0);
 $524 = ((($x1732)) + 8|0);
 $525 = ((($x1733)) + 8|0);
 $526 = ((($this)) + 8|0);
 $527 = ((($this)) + 16|0);
 $528 = ((($x1741)) + 8|0);
 $529 = ((($x1742)) + 8|0);
 $530 = ((($this)) + 8|0);
 $531 = ((($this)) + 16|0);
 $532 = ((($x1758)) + 8|0);
 $533 = ((($j0array891)) + 8|0);
 $534 = ((($sj0array893)) + 8|0);
 $535 = ((($cj0array892)) + 8|0);
 $536 = ((($j0valid894)) + 1|0);
 $537 = ((($this)) + 8|0);
 $538 = ((($this)) + 16|0);
 $539 = ((($x1762)) + 8|0);
 $540 = ((($j0array898)) + 8|0);
 $541 = ((($sj0array900)) + 8|0);
 $542 = ((($cj0array899)) + 8|0);
 $543 = ((($j0valid901)) + 1|0);
 $544 = ((($this)) + 8|0);
 $545 = ((($this)) + 16|0);
 $546 = ((($x1769)) + 8|0);
 $547 = ((($x1770)) + 8|0);
 $548 = ((($this)) + 8|0);
 $549 = ((($this)) + 16|0);
 $550 = ((($x1778)) + 8|0);
 $551 = ((($x1779)) + 8|0);
 $552 = ((($this)) + 8|0);
 $553 = ((($this)) + 16|0);
 $554 = ((($x1787)) + 8|0);
 $555 = ((($j0array924)) + 8|0);
 $556 = ((($sj0array926)) + 8|0);
 $557 = ((($cj0array925)) + 8|0);
 $558 = ((($j0valid927)) + 1|0);
 $559 = ((($this)) + 8|0);
 $560 = ((($this)) + 16|0);
 $561 = ((($x1796)) + 8|0);
 $562 = ((($j0array931)) + 8|0);
 $563 = ((($sj0array933)) + 8|0);
 $564 = ((($cj0array932)) + 8|0);
 $565 = ((($j0valid934)) + 1|0);
 $566 = ((($this)) + 8|0);
 $567 = ((($this)) + 16|0);
 $568 = ((($x1805)) + 8|0);
 $569 = ((($j0array938)) + 8|0);
 $570 = ((($sj0array940)) + 8|0);
 $571 = ((($cj0array939)) + 8|0);
 $572 = ((($j0valid941)) + 1|0);
 $573 = ((($this)) + 8|0);
 $574 = ((($this)) + 16|0);
 $575 = ((($x1821)) + 8|0);
 $576 = ((($x1822)) + 8|0);
 $577 = ((($this)) + 8|0);
 $578 = ((($this)) + 16|0);
 $579 = ((($x1843)) + 8|0);
 $580 = ((($x1844)) + 8|0);
 $581 = ((($this)) + 8|0);
 $582 = ((($this)) + 16|0);
 $583 = ((($x1863)) + 8|0);
 $584 = ((($x1864)) + 8|0);
 $585 = ((($this)) + 8|0);
 $586 = ((($this)) + 16|0);
 $587 = ((($x1887)) + 8|0);
 $588 = ((($x1888)) + 8|0);
 $589 = ((($this)) + 8|0);
 $590 = ((($this)) + 16|0);
 $591 = ((($x1917)) + 8|0);
 $592 = ((($x1918)) + 8|0);
 $593 = ((($this)) + 8|0);
 $594 = ((($this)) + 16|0);
 $595 = ((($x1942)) + 8|0);
 $596 = ((($x1943)) + 8|0);
 $597 = ((($this)) + 8|0);
 $598 = ((($this)) + 16|0);
 $599 = ((($x1964)) + 8|0);
 $600 = ((($x1965)) + 8|0);
 $601 = ((($j0array995)) + 8|0);
 $602 = ((($sj0array997)) + 8|0);
 $603 = ((($cj0array996)) + 8|0);
 $604 = ((($j0valid998)) + 1|0);
 $605 = ((($this)) + 8|0);
 $606 = ((($this)) + 16|0);
 $607 = ((($op1015)) + 8|0);
 $608 = ((($op1015)) + 16|0);
 $609 = ((($this)) + 48|0);
 $610 = ((($this)) + 56|0);
 $611 = ((($this)) + 64|0);
 $612 = ((($op1031)) + 8|0);
 $613 = ((($op1031)) + 16|0);
 $614 = ((($this)) + 48|0);
 $615 = ((($this)) + 56|0);
 $616 = ((($this)) + 64|0);
 $617 = ((($op1047)) + 8|0);
 $618 = ((($op1047)) + 16|0);
 $619 = ((($this)) + 48|0);
 $620 = ((($this)) + 56|0);
 $621 = ((($this)) + 64|0);
 $622 = ((($op1063)) + 8|0);
 $623 = ((($op1063)) + 16|0);
 $624 = ((($this)) + 48|0);
 $625 = ((($this)) + 56|0);
 $626 = ((($this)) + 64|0);
 $627 = ((($op1079)) + 8|0);
 $628 = ((($op1079)) + 16|0);
 $629 = ((($this)) + 48|0);
 $630 = ((($this)) + 56|0);
 $631 = ((($this)) + 64|0);
 $632 = ((($x2020)) + 8|0);
 $633 = ((($this)) + 48|0);
 $634 = ((($this)) + 56|0);
 $635 = ((($x2037)) + 8|0);
 $636 = ((($x2038)) + 8|0);
 $637 = ((($this)) + 48|0);
 $638 = ((($this)) + 56|0);
 $639 = ((($x2061)) + 8|0);
 $640 = ((($x2062)) + 8|0);
 $641 = ((($this)) + 48|0);
 $642 = ((($this)) + 56|0);
 $643 = ((($x2084)) + 8|0);
 $644 = ((($x2085)) + 8|0);
 $645 = ((($this)) + 48|0);
 $646 = ((($this)) + 56|0);
 $647 = ((($op1137)) + 8|0);
 $648 = ((($op1137)) + 16|0);
 $649 = ((($this)) + 48|0);
 $650 = ((($this)) + 56|0);
 $651 = ((($this)) + 64|0);
 $652 = ((($op1153)) + 8|0);
 $653 = ((($op1153)) + 16|0);
 $654 = ((($this)) + 48|0);
 $655 = ((($this)) + 56|0);
 $656 = ((($this)) + 64|0);
 $657 = ((($op1169)) + 8|0);
 $658 = ((($op1169)) + 16|0);
 $659 = ((($this)) + 48|0);
 $660 = ((($this)) + 56|0);
 $661 = ((($this)) + 64|0);
 $662 = ((($op1185)) + 8|0);
 $663 = ((($op1185)) + 16|0);
 $664 = ((($this)) + 48|0);
 $665 = ((($this)) + 56|0);
 $666 = ((($this)) + 64|0);
 $667 = ((($op1201)) + 8|0);
 $668 = ((($op1201)) + 16|0);
 $669 = ((($this)) + 48|0);
 $670 = ((($this)) + 56|0);
 $671 = ((($this)) + 64|0);
 $672 = ((($x2130)) + 8|0);
 $673 = ((($this)) + 48|0);
 $674 = ((($this)) + 56|0);
 $675 = ((($x2145)) + 8|0);
 $676 = ((($x2146)) + 8|0);
 $677 = ((($this)) + 48|0);
 $678 = ((($this)) + 56|0);
 $679 = ((($x2168)) + 8|0);
 $680 = ((($x2169)) + 8|0);
 $681 = ((($this)) + 48|0);
 $682 = ((($this)) + 56|0);
 $683 = ((($x2191)) + 8|0);
 $684 = ((($x2192)) + 8|0);
 $685 = ((($this)) + 48|0);
 $686 = ((($this)) + 56|0);
 $687 = ((($x2221)) + 8|0);
 $688 = ((($x2222)) + 8|0);
 $689 = ((($this)) + 48|0);
 $690 = ((($this)) + 56|0);
 $691 = ((($x2254)) + 8|0);
 $692 = ((($x2255)) + 8|0);
 $693 = ((($this)) + 48|0);
 $694 = ((($this)) + 56|0);
 $695 = ((($x2284)) + 8|0);
 $696 = ((($x2285)) + 8|0);
 $697 = ((($this)) + 48|0);
 $698 = ((($this)) + 56|0);
 $699 = HEAP32[$solutions>>2]|0;
 $700 = ((($699)) + 20|0);
 $701 = HEAP32[$700>>2]|0;
 FUNCTION_TABLE_vi[$701 & 127]($solutions);
 $702 = +HEAPF64[$pfree>>3];
 HEAPF64[$22>>3] = $702;
 $703 = +HEAPF64[$pfree>>3];
 $704 = (+Math_cos((+$703)));
 HEAPF64[$23>>3] = $704;
 $705 = +HEAPF64[$pfree>>3];
 $706 = (+Math_sin((+$705)));
 HEAPF64[$24>>3] = $706;
 $707 = +HEAPF64[$pfree>>3];
 $708 = $707 * 0.5;
 $709 = (+Math_tan((+$708)));
 HEAPF64[$25>>3] = $709;
 $710 = +HEAPF64[$eerot>>3];
 HEAPF64[$26>>3] = $710;
 $711 = +HEAPF64[$27>>3];
 HEAPF64[$28>>3] = $711;
 $712 = +HEAPF64[$29>>3];
 HEAPF64[$30>>3] = $712;
 $713 = +HEAPF64[$31>>3];
 HEAPF64[$32>>3] = $713;
 $714 = +HEAPF64[$33>>3];
 HEAPF64[$34>>3] = $714;
 $715 = +HEAPF64[$35>>3];
 HEAPF64[$36>>3] = $715;
 $716 = +HEAPF64[$37>>3];
 HEAPF64[$38>>3] = $716;
 $717 = +HEAPF64[$39>>3];
 HEAPF64[$40>>3] = $717;
 $718 = +HEAPF64[$41>>3];
 HEAPF64[$42>>3] = $718;
 $719 = +HEAPF64[$eetrans>>3];
 HEAPF64[$43>>3] = $719;
 $720 = +HEAPF64[$44>>3];
 HEAPF64[$45>>3] = $720;
 $721 = +HEAPF64[$46>>3];
 HEAPF64[$47>>3] = $721;
 $722 = +HEAPF64[$26>>3];
 HEAPF64[$48>>3] = $722;
 $723 = +HEAPF64[$28>>3];
 HEAPF64[$49>>3] = $723;
 $724 = +HEAPF64[$30>>3];
 HEAPF64[$50>>3] = $724;
 $725 = +HEAPF64[$30>>3];
 $726 = $725 * 0.059999999999999998;
 $727 = -0.22 - $726;
 $728 = +HEAPF64[$43>>3];
 $729 = $728 + $727;
 HEAPF64[$51>>3] = $729;
 $730 = +HEAPF64[$32>>3];
 HEAPF64[$52>>3] = $730;
 $731 = +HEAPF64[$34>>3];
 HEAPF64[$53>>3] = $731;
 $732 = +HEAPF64[$36>>3];
 HEAPF64[$54>>3] = $732;
 $733 = +HEAPF64[$45>>3];
 $734 = $733 + -0.14000000000000001;
 $735 = +HEAPF64[$36>>3];
 $736 = $735 * 0.059999999999999998;
 $737 = $734 - $736;
 HEAPF64[$55>>3] = $737;
 $738 = +HEAPF64[$38>>3];
 HEAPF64[$56>>3] = $738;
 $739 = +HEAPF64[$40>>3];
 HEAPF64[$57>>3] = $739;
 $740 = +HEAPF64[$42>>3];
 HEAPF64[$58>>3] = $740;
 $741 = +HEAPF64[$42>>3];
 $742 = $741 * 0.059999999999999998;
 $743 = -0.34599999999999997 - $742;
 $744 = +HEAPF64[$47>>3];
 $745 = $744 + $743;
 HEAPF64[$59>>3] = $745;
 $746 = +HEAPF64[$48>>3];
 HEAPF64[$26>>3] = $746;
 $747 = +HEAPF64[$49>>3];
 HEAPF64[$28>>3] = $747;
 $748 = +HEAPF64[$50>>3];
 HEAPF64[$30>>3] = $748;
 $749 = +HEAPF64[$52>>3];
 HEAPF64[$32>>3] = $749;
 $750 = +HEAPF64[$53>>3];
 HEAPF64[$34>>3] = $750;
 $751 = +HEAPF64[$54>>3];
 HEAPF64[$36>>3] = $751;
 $752 = +HEAPF64[$56>>3];
 HEAPF64[$38>>3] = $752;
 $753 = +HEAPF64[$57>>3];
 HEAPF64[$40>>3] = $753;
 $754 = +HEAPF64[$58>>3];
 HEAPF64[$42>>3] = $754;
 $755 = +HEAPF64[$51>>3];
 HEAPF64[$43>>3] = $755;
 $756 = +HEAPF64[$55>>3];
 HEAPF64[$45>>3] = $756;
 $757 = +HEAPF64[$59>>3];
 HEAPF64[$47>>3] = $757;
 $758 = +HEAPF64[$43>>3];
 $759 = +HEAPF64[$45>>3];
 $760 = $758 * $758;
 $761 = $759 * $759;
 $762 = $760 + $761;
 $763 = $757 * $757;
 $764 = $763 + $762;
 HEAPF64[$60>>3] = $764;
 $765 = +HEAPF64[$43>>3];
 $766 = +HEAPF64[$26>>3];
 $767 = $765 * $766;
 $768 = +HEAPF64[$45>>3];
 $769 = +HEAPF64[$32>>3];
 $770 = $768 * $769;
 $771 = $767 + $770;
 $772 = +HEAPF64[$47>>3];
 $773 = +HEAPF64[$38>>3];
 $774 = $772 * $773;
 $775 = $771 + $774;
 HEAPF64[$61>>3] = $775;
 $776 = +HEAPF64[$43>>3];
 $777 = +HEAPF64[$28>>3];
 $778 = $776 * $777;
 $779 = +HEAPF64[$45>>3];
 $780 = +HEAPF64[$34>>3];
 $781 = $779 * $780;
 $782 = $778 + $781;
 $783 = +HEAPF64[$47>>3];
 $784 = +HEAPF64[$40>>3];
 $785 = $783 * $784;
 $786 = $782 + $785;
 HEAPF64[$62>>3] = $786;
 $787 = +HEAPF64[$43>>3];
 $788 = +HEAPF64[$30>>3];
 $789 = $787 * $788;
 $790 = +HEAPF64[$45>>3];
 $791 = +HEAPF64[$36>>3];
 $792 = $790 * $791;
 $793 = $789 + $792;
 $794 = +HEAPF64[$47>>3];
 $795 = +HEAPF64[$42>>3];
 $796 = $794 * $795;
 $797 = $793 + $796;
 HEAPF64[$63>>3] = $797;
 $798 = +HEAPF64[$38>>3];
 $799 = $759 * $798;
 $800 = +HEAPF64[$47>>3];
 $801 = +HEAPF64[$32>>3];
 $802 = $800 * $801;
 $803 = $802 - $799;
 HEAPF64[$64>>3] = $803;
 $804 = +HEAPF64[$43>>3];
 $805 = +HEAPF64[$38>>3];
 $806 = $804 * $805;
 $807 = +HEAPF64[$26>>3];
 $808 = $757 * $807;
 $809 = $806 - $808;
 HEAPF64[$65>>3] = $809;
 $810 = +HEAPF64[$32>>3];
 $811 = $758 * $810;
 $812 = +HEAPF64[$45>>3];
 $813 = +HEAPF64[$26>>3];
 $814 = $812 * $813;
 $815 = $814 - $811;
 HEAPF64[$66>>3] = $815;
 $816 = +HEAPF64[$40>>3];
 $817 = $759 * $816;
 $818 = +HEAPF64[$47>>3];
 $819 = +HEAPF64[$34>>3];
 $820 = $818 * $819;
 $821 = $820 - $817;
 HEAPF64[$67>>3] = $821;
 $822 = +HEAPF64[$43>>3];
 $823 = +HEAPF64[$40>>3];
 $824 = $822 * $823;
 $825 = +HEAPF64[$28>>3];
 $826 = $757 * $825;
 $827 = $824 - $826;
 HEAPF64[$68>>3] = $827;
 $828 = +HEAPF64[$45>>3];
 $829 = +HEAPF64[$28>>3];
 $830 = $828 * $829;
 $831 = +HEAPF64[$34>>3];
 $832 = $758 * $831;
 $833 = $830 - $832;
 HEAPF64[$69>>3] = $833;
 $834 = +HEAPF64[$42>>3];
 $835 = $759 * $834;
 $836 = +HEAPF64[$47>>3];
 $837 = +HEAPF64[$36>>3];
 $838 = $836 * $837;
 $839 = $838 - $835;
 HEAPF64[$70>>3] = $839;
 $840 = +HEAPF64[$43>>3];
 $841 = +HEAPF64[$42>>3];
 $842 = $840 * $841;
 $843 = +HEAPF64[$30>>3];
 $844 = $757 * $843;
 $845 = $842 - $844;
 HEAPF64[$71>>3] = $845;
 $846 = +HEAPF64[$45>>3];
 $847 = +HEAPF64[$30>>3];
 $848 = $846 * $847;
 $849 = +HEAPF64[$36>>3];
 $850 = $758 * $849;
 $851 = $848 - $850;
 HEAPF64[$72>>3] = $851;
 HEAP16[$j3valid>>1] = 0;
 HEAP8[$10>>0] = 2;
 $852 = +HEAPF64[$60>>3];
 $853 = $852 * 2.9867963734810998;
 $854 = 1.18441410190393 - $853;
 $855 = $854 < -1.0000020000000001;
 $856 = $854 > 1.0000020000000001;
 $or$cond = $855 | $856;
 if ($or$cond) {
  $18337 = HEAP32[$solutions>>2]|0;
  $18338 = ((($18337)) + 16|0);
  $18339 = HEAP32[$18338>>2]|0;
  $18340 = (FUNCTION_TABLE_ii[$18339 & 63]($solutions)|0);
  $18341 = ($18340|0)!=(0);
  STACKTOP = sp;return ($18341|0);
 }
 $857 = ((($cj3array)) + 8|0);
 $858 = ((($sj3array)) + 8|0);
 $859 = (+__Z6IKasind($854));
 $860 = -1.3402700370563301 - $859;
 HEAPF64[$j3array>>3] = $860;
 $861 = (+__Z5IKsind($860));
 HEAPF64[$sj3array>>3] = $861;
 $862 = (+__Z5IKcosd($860));
 HEAPF64[$cj3array>>3] = $862;
 $863 = $859 + 1.8013226165334599;
 HEAPF64[$73>>3] = $863;
 $864 = (+__Z5IKsind($863));
 HEAPF64[$858>>3] = $864;
 $865 = +HEAPF64[$73>>3];
 $866 = (+__Z5IKcosd($865));
 HEAPF64[$857>>3] = $866;
 $867 = +HEAPF64[$j3array>>3];
 $868 = $867 > 3.14159265358979;
 if ($868) {
  $869 = $867 + -6.2831853071795898;
  HEAPF64[$j3array>>3] = $869;
 } else {
  $870 = $867 < -3.14159265358979;
  if ($870) {
   $871 = $867 + 6.2831853071795898;
   HEAPF64[$j3array>>3] = $871;
  }
 }
 HEAP8[$j3valid>>0] = 1;
 $872 = +HEAPF64[$73>>3];
 $873 = $872 > 3.14159265358979;
 if ($873) {
  $874 = $872 + -6.2831853071795898;
  HEAPF64[$73>>3] = $874;
 } else {
  $875 = $872 < -3.14159265358979;
  if ($875) {
   $876 = $872 + 6.2831853071795898;
   HEAPF64[$73>>3] = $876;
  }
 }
 HEAP8[$74>>0] = 1;
 $877 = ((($j0valid368)) + 1|0);
 $878 = ((($j0array365)) + 8|0);
 $879 = ((($cj0array366)) + 8|0);
 $880 = ((($sj0array367)) + 8|0);
 $881 = ((($j0valid368)) + 1|0);
 $882 = ((($cj0array366)) + 8|0);
 $883 = ((($sj0array367)) + 8|0);
 $884 = ((($j0valid375)) + 1|0);
 $885 = ((($j0array372)) + 8|0);
 $886 = ((($cj0array373)) + 8|0);
 $887 = ((($sj0array374)) + 8|0);
 $888 = ((($j0valid375)) + 1|0);
 $889 = ((($cj0array373)) + 8|0);
 $890 = ((($sj0array374)) + 8|0);
 $891 = ((($j0valid385)) + 1|0);
 $892 = ((($j0array382)) + 8|0);
 $893 = ((($cj0array383)) + 8|0);
 $894 = ((($sj0array384)) + 8|0);
 $895 = ((($j0valid385)) + 1|0);
 $896 = ((($cj0array383)) + 8|0);
 $897 = ((($sj0array384)) + 8|0);
 $898 = ((($j0valid392)) + 1|0);
 $899 = ((($j0array389)) + 8|0);
 $900 = ((($cj0array390)) + 8|0);
 $901 = ((($sj0array391)) + 8|0);
 $902 = ((($j0valid392)) + 1|0);
 $903 = ((($cj0array390)) + 8|0);
 $904 = ((($sj0array391)) + 8|0);
 $905 = ((($j0valid519)) + 1|0);
 $906 = ((($j0array516)) + 8|0);
 $907 = ((($cj0array517)) + 8|0);
 $908 = ((($sj0array518)) + 8|0);
 $909 = ((($j0valid519)) + 1|0);
 $910 = ((($cj0array517)) + 8|0);
 $911 = ((($sj0array518)) + 8|0);
 $912 = ((($j0valid526)) + 1|0);
 $913 = ((($j0array523)) + 8|0);
 $914 = ((($cj0array524)) + 8|0);
 $915 = ((($sj0array525)) + 8|0);
 $916 = ((($j0valid526)) + 1|0);
 $917 = ((($cj0array524)) + 8|0);
 $918 = ((($sj0array525)) + 8|0);
 $919 = ((($j0valid536)) + 1|0);
 $920 = ((($j0array533)) + 8|0);
 $921 = ((($cj0array534)) + 8|0);
 $922 = ((($sj0array535)) + 8|0);
 $923 = ((($j0valid536)) + 1|0);
 $924 = ((($cj0array534)) + 8|0);
 $925 = ((($sj0array535)) + 8|0);
 $926 = ((($j0valid543)) + 1|0);
 $927 = ((($j0array540)) + 8|0);
 $928 = ((($cj0array541)) + 8|0);
 $929 = ((($sj0array542)) + 8|0);
 $930 = ((($j0valid543)) + 1|0);
 $931 = ((($cj0array541)) + 8|0);
 $932 = ((($sj0array542)) + 8|0);
 $933 = ((($j0valid587)) + 1|0);
 $934 = ((($j0array584)) + 8|0);
 $935 = ((($cj0array585)) + 8|0);
 $936 = ((($sj0array586)) + 8|0);
 $937 = ((($j0valid587)) + 1|0);
 $938 = ((($cj0array585)) + 8|0);
 $939 = ((($sj0array586)) + 8|0);
 $940 = ((($j0valid594)) + 1|0);
 $941 = ((($j0array591)) + 8|0);
 $942 = ((($cj0array592)) + 8|0);
 $943 = ((($sj0array593)) + 8|0);
 $944 = ((($j0valid594)) + 1|0);
 $945 = ((($cj0array592)) + 8|0);
 $946 = ((($sj0array593)) + 8|0);
 $947 = ((($j0valid623)) + 1|0);
 $948 = ((($j0array620)) + 8|0);
 $949 = ((($cj0array621)) + 8|0);
 $950 = ((($sj0array622)) + 8|0);
 $951 = ((($j0valid623)) + 1|0);
 $952 = ((($cj0array621)) + 8|0);
 $953 = ((($sj0array622)) + 8|0);
 $954 = ((($j0valid630)) + 1|0);
 $955 = ((($j0array627)) + 8|0);
 $956 = ((($cj0array628)) + 8|0);
 $957 = ((($sj0array629)) + 8|0);
 $958 = ((($j0valid630)) + 1|0);
 $959 = ((($cj0array628)) + 8|0);
 $960 = ((($sj0array629)) + 8|0);
 $961 = ((($j0valid659)) + 1|0);
 $962 = ((($j0array656)) + 8|0);
 $963 = ((($cj0array657)) + 8|0);
 $964 = ((($sj0array658)) + 8|0);
 $965 = ((($j0valid659)) + 1|0);
 $966 = ((($cj0array657)) + 8|0);
 $967 = ((($sj0array658)) + 8|0);
 $968 = ((($j0valid666)) + 1|0);
 $969 = ((($j0array663)) + 8|0);
 $970 = ((($cj0array664)) + 8|0);
 $971 = ((($sj0array665)) + 8|0);
 $972 = ((($j0valid666)) + 1|0);
 $973 = ((($cj0array664)) + 8|0);
 $974 = ((($sj0array665)) + 8|0);
 $975 = ((($j0valid695)) + 1|0);
 $976 = ((($j0array692)) + 8|0);
 $977 = ((($cj0array693)) + 8|0);
 $978 = ((($sj0array694)) + 8|0);
 $979 = ((($j0valid695)) + 1|0);
 $980 = ((($cj0array693)) + 8|0);
 $981 = ((($sj0array694)) + 8|0);
 $982 = ((($j0valid702)) + 1|0);
 $983 = ((($j0array699)) + 8|0);
 $984 = ((($cj0array700)) + 8|0);
 $985 = ((($sj0array701)) + 8|0);
 $986 = ((($j0valid702)) + 1|0);
 $987 = ((($cj0array700)) + 8|0);
 $988 = ((($sj0array701)) + 8|0);
 $989 = ((($j0valid786)) + 1|0);
 $990 = ((($j0array783)) + 8|0);
 $991 = ((($cj0array784)) + 8|0);
 $992 = ((($sj0array785)) + 8|0);
 $993 = ((($j0valid786)) + 1|0);
 $994 = ((($cj0array784)) + 8|0);
 $995 = ((($sj0array785)) + 8|0);
 $996 = ((($j0valid793)) + 1|0);
 $997 = ((($j0array790)) + 8|0);
 $998 = ((($cj0array791)) + 8|0);
 $999 = ((($sj0array792)) + 8|0);
 $1000 = ((($j0valid793)) + 1|0);
 $1001 = ((($cj0array791)) + 8|0);
 $1002 = ((($sj0array792)) + 8|0);
 $1003 = ((($j0valid822)) + 1|0);
 $1004 = ((($j0array819)) + 8|0);
 $1005 = ((($cj0array820)) + 8|0);
 $1006 = ((($sj0array821)) + 8|0);
 $1007 = ((($j0valid822)) + 1|0);
 $1008 = ((($cj0array820)) + 8|0);
 $1009 = ((($sj0array821)) + 8|0);
 $1010 = ((($j0valid829)) + 1|0);
 $1011 = ((($j0array826)) + 8|0);
 $1012 = ((($cj0array827)) + 8|0);
 $1013 = ((($sj0array828)) + 8|0);
 $1014 = ((($j0valid829)) + 1|0);
 $1015 = ((($cj0array827)) + 8|0);
 $1016 = ((($sj0array828)) + 8|0);
 $1017 = ((($j0valid858)) + 1|0);
 $1018 = ((($j0array855)) + 8|0);
 $1019 = ((($cj0array856)) + 8|0);
 $1020 = ((($sj0array857)) + 8|0);
 $1021 = ((($j0valid858)) + 1|0);
 $1022 = ((($cj0array856)) + 8|0);
 $1023 = ((($sj0array857)) + 8|0);
 $1024 = ((($j0valid865)) + 1|0);
 $1025 = ((($j0array862)) + 8|0);
 $1026 = ((($cj0array863)) + 8|0);
 $1027 = ((($sj0array864)) + 8|0);
 $1028 = ((($j0valid865)) + 1|0);
 $1029 = ((($cj0array863)) + 8|0);
 $1030 = ((($sj0array864)) + 8|0);
 $1031 = ((($j0valid894)) + 1|0);
 $1032 = ((($j0array891)) + 8|0);
 $1033 = ((($cj0array892)) + 8|0);
 $1034 = ((($sj0array893)) + 8|0);
 $1035 = ((($j0valid894)) + 1|0);
 $1036 = ((($cj0array892)) + 8|0);
 $1037 = ((($sj0array893)) + 8|0);
 $1038 = ((($j0valid901)) + 1|0);
 $1039 = ((($j0array898)) + 8|0);
 $1040 = ((($cj0array899)) + 8|0);
 $1041 = ((($sj0array900)) + 8|0);
 $1042 = ((($j0valid901)) + 1|0);
 $1043 = ((($cj0array899)) + 8|0);
 $1044 = ((($sj0array900)) + 8|0);
 $ij3$01913 = 0;
 while(1) {
  $1045 = (($j3valid) + ($ij3$01913)|0);
  $1046 = HEAP8[$1045>>0]|0;
  $1047 = ($1046<<24>>24)==(0);
  L16: do {
   if (!($1047)) {
    $1048 = $ij3$01913&255;
    HEAP8[$8>>0] = $1048;
    HEAP8[$9>>0] = -1;
    $iij3$01092 = (($ij3$01913) + 1)|0;
    $1049 = ($iij3$01092|0)<(2);
    if ($1049) {
     $1050 = (($sj3array) + ($ij3$01913<<3)|0);
     $1051 = (($j3valid) + ($iij3$01092)|0);
     $1052 = HEAP8[$1051>>0]|0;
     $1053 = ($1052<<24>>24)==(0);
     if (!($1053)) {
      $1054 = (($cj3array) + ($ij3$01913<<3)|0);
      $1055 = +HEAPF64[$1054>>3];
      $1056 = (($cj3array) + ($iij3$01092<<3)|0);
      $1057 = +HEAPF64[$1056>>3];
      $1058 = $1055 - $1057;
      $1059 = (+__Z5IKabsd($1058));
      $1060 = $1059 < 9.9999999999999995E-7;
      if ($1060) {
       $1061 = +HEAPF64[$1050>>3];
       $1062 = (($sj3array) + ($iij3$01092<<3)|0);
       $1063 = +HEAPF64[$1062>>3];
       $1064 = $1061 - $1063;
       $1065 = (+__Z5IKabsd($1064));
       $1066 = $1065 < 9.9999999999999995E-7;
       if ($1066) {
        HEAP8[$1051>>0] = 0;
        $1067 = $iij3$01092&255;
        HEAP8[$9>>0] = $1067;
       }
      }
     }
    }
    $1068 = (($j3array) + ($ij3$01913<<3)|0);
    $1069 = +HEAPF64[$1068>>3];
    HEAPF64[$7>>3] = $1069;
    $1070 = (($cj3array) + ($ij3$01913<<3)|0);
    $1071 = +HEAPF64[$1070>>3];
    HEAPF64[$75>>3] = $1071;
    $1072 = (($sj3array) + ($ij3$01913<<3)|0);
    $1073 = +HEAPF64[$1072>>3];
    HEAPF64[$76>>3] = $1073;
    $1074 = +HEAPF64[$43>>3];
    $1075 = $1074 * $1074;
    $1076 = +HEAPF64[$45>>3];
    $1077 = $1076 * $1076;
    $1078 = $1075 + $1077;
    $1079 = (+__Z5IKabsd($1078));
    $1080 = $1079 < 9.9999999999999995E-7;
    if (!($1080)) {
     $1081 = (+__Z5IKabsd($1076));
     $1082 = (+__Z5IKabsd($1074));
     $1083 = $1081 + $1082;
     $1084 = (+__Z5IKabsd($1083));
     $1085 = $1084 < 9.9999999999999995E-7;
     if (!($1085)) {
      HEAP16[$j0valid998>>1] = 0;
      HEAP8[$2>>0] = 2;
      $14750 = +HEAPF64[$24>>3];
      $14751 = $14750 * 0.044999999999999998;
      $14752 = +HEAPF64[$45>>3];
      $14753 = -$14752;
      $14754 = +HEAPF64[$43>>3];
      __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1964,$14753,$14754,1.9999999999999999E-6);
      $14755 = HEAP8[$599>>0]|0;
      $14756 = ($14755<<24>>24)==(0);
      if ($14756) {
       break;
      }
      $14757 = +HEAPF64[$x1964>>3];
      $14758 = +HEAPF64[$43>>3];
      $14759 = $14758 * $14758;
      $14760 = +HEAPF64[$45>>3];
      $14761 = $14760 * $14760;
      $14762 = $14759 + $14761;
      $14763 = $14762 < -1.0000000000000001E-5;
      if ($14763) {
       break;
      }
      $14764 = (+__Z6IKsqrtd($14762));
      $14765 = (+__Z5IKabsd($14764));
      __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1965,$14765,-1);
      $14766 = HEAP8[$600>>0]|0;
      $14767 = ($14766<<24>>24)==(0);
      if ($14767) {
       break;
      }
      $14768 = +HEAPF64[$x1965>>3];
      $14769 = +HEAPF64[$24>>3];
      $14770 = $14769 * 0.29999999999999999;
      $14771 = +HEAPF64[$76>>3];
      $14772 = $14770 * $14771;
      $14773 = $14751 + $14772;
      $14774 = +HEAPF64[$75>>3];
      $14775 = $14751 * $14774;
      $14776 = $14773 - $14775;
      $14777 = $14768 * $14776;
      $14778 = $14777 < -1.0000020000000001;
      $14779 = $14777 > 1.0000020000000001;
      $or$cond465 = $14778 | $14779;
      if ($or$cond465) {
       break;
      }
      $14780 = (+__Z6IKasind($14777));
      $14781 = -$14780;
      $14782 = $14781 - $14757;
      HEAPF64[$j0array995>>3] = $14782;
      $14783 = (+__Z5IKsind($14782));
      HEAPF64[$sj0array997>>3] = $14783;
      $14784 = (+__Z5IKcosd($14782));
      HEAPF64[$cj0array996>>3] = $14784;
      $14785 = 3.14159265358979 - $14757;
      $14786 = $14785 + $14780;
      HEAPF64[$601>>3] = $14786;
      $14787 = (+__Z5IKsind($14786));
      HEAPF64[$602>>3] = $14787;
      $14788 = +HEAPF64[$601>>3];
      $14789 = (+__Z5IKcosd($14788));
      HEAPF64[$603>>3] = $14789;
      $14790 = +HEAPF64[$j0array995>>3];
      $14791 = $14790 > 3.14159265358979;
      if ($14791) {
       $14792 = $14790 + -6.2831853071795898;
       HEAPF64[$j0array995>>3] = $14792;
      } else {
       $14793 = $14790 < -3.14159265358979;
       if ($14793) {
        $14794 = $14790 + 6.2831853071795898;
        HEAPF64[$j0array995>>3] = $14794;
       }
      }
      HEAP8[$j0valid998>>0] = 1;
      $14795 = +HEAPF64[$601>>3];
      $14796 = $14795 > 3.14159265358979;
      if ($14796) {
       $14797 = $14795 + -6.2831853071795898;
       HEAPF64[$601>>3] = $14797;
      } else {
       $14798 = $14795 < -3.14159265358979;
       if ($14798) {
        $14799 = $14795 + 6.2831853071795898;
        HEAPF64[$601>>3] = $14799;
       }
      }
      HEAP8[$604>>0] = 1;
      $ij0999$01292 = 0;
      while(1) {
       $14800 = (($j0valid998) + ($ij0999$01292)|0);
       $14801 = HEAP8[$14800>>0]|0;
       $14802 = ($14801<<24>>24)==(0);
       L43: do {
        if (!($14802)) {
         $14803 = $ij0999$01292&255;
         HEAP8[$0>>0] = $14803;
         HEAP8[$1>>0] = -1;
         $iij01000$01094 = (($ij0999$01292) + 1)|0;
         $14804 = ($iij01000$01094|0)<(2);
         do {
          if ($14804) {
           $14805 = (($sj0array997) + ($ij0999$01292<<3)|0);
           $14806 = (($j0valid998) + ($iij01000$01094)|0);
           $14807 = HEAP8[$14806>>0]|0;
           $14808 = ($14807<<24>>24)==(0);
           if ($14808) {
            break;
           }
           $14809 = (($cj0array996) + ($ij0999$01292<<3)|0);
           $14810 = +HEAPF64[$14809>>3];
           $14811 = (($cj0array996) + ($iij01000$01094<<3)|0);
           $14812 = +HEAPF64[$14811>>3];
           $14813 = $14810 - $14812;
           $14814 = (+__Z5IKabsd($14813));
           $14815 = $14814 < 9.9999999999999995E-7;
           if (!($14815)) {
            break;
           }
           $14816 = +HEAPF64[$14805>>3];
           $14817 = (($sj0array997) + ($iij01000$01094<<3)|0);
           $14818 = +HEAPF64[$14817>>3];
           $14819 = $14816 - $14818;
           $14820 = (+__Z5IKabsd($14819));
           $14821 = $14820 < 9.9999999999999995E-7;
           if (!($14821)) {
            break;
           }
           HEAP8[$14806>>0] = 0;
           $14822 = $iij01000$01094&255;
           HEAP8[$1>>0] = $14822;
          }
         } while(0);
         $14823 = (($j0array995) + ($ij0999$01292<<3)|0);
         $14824 = +HEAPF64[$14823>>3];
         HEAPF64[$this>>3] = $14824;
         $14825 = (($cj0array996) + ($ij0999$01292<<3)|0);
         $14826 = +HEAPF64[$14825>>3];
         HEAPF64[$605>>3] = $14826;
         $14827 = (($sj0array997) + ($ij0999$01292<<3)|0);
         $14828 = +HEAPF64[$14827>>3];
         HEAPF64[$606>>3] = $14828;
         $14829 = +HEAPF64[$45>>3];
         $14830 = $14828 * $14829;
         $14831 = +HEAPF64[$75>>3];
         $14832 = $14831 * 0.29999999999999999;
         $14833 = +HEAPF64[$76>>3];
         $14834 = $14833 * 0.044999999999999998;
         $14835 = +HEAPF64[$23>>3];
         $14836 = +HEAPF64[$47>>3];
         $14837 = $14835 * $14836;
         $14838 = $14831 * 6.6666666666666696;
         $14839 = +HEAPF64[$605>>3];
         $14840 = +HEAPF64[$43>>3];
         $14841 = $14839 * $14840;
         $14842 = $14831 * $14837;
         $14843 = $14842 - $14837;
         $14844 = -$14830;
         $14845 = $14833 * $14844;
         $14846 = $14845 + $14843;
         $14847 = $14838 * $14844;
         $14848 = $14847 + $14846;
         $14849 = $14833 * $14841;
         $14850 = $14848 - $14849;
         $14851 = $14838 * $14841;
         $14852 = $14850 - $14851;
         $14853 = $14833 * -6.6666666666666696;
         $14854 = $14853 * $14837;
         $14855 = $14854 + $14852;
         $14856 = $14841 * 12.2222222222222;
         $14857 = $14855 - $14856;
         $14858 = $14830 * 12.2222222222222;
         $14859 = $14857 - $14858;
         $14860 = (+__Z5IKabsd($14859));
         $14861 = $14860 < 9.9999999999999995E-7;
         do {
          if (!($14861)) {
           $14862 = $14831 * 0.044999999999999998;
           $14863 = $14862 * $14837;
           $14864 = $14832 * $14844;
           $14865 = $14864 + $14863;
           $14866 = $14834 * $14844;
           $14867 = $14866 + $14865;
           $14868 = $14834 * $14841;
           $14869 = $14867 - $14868;
           $14870 = $14833 * -0.29999999999999999;
           $14871 = $14870 * $14837;
           $14872 = $14871 + $14869;
           $14873 = $14841 * 0.55000000000000004;
           $14874 = $14872 - $14873;
           $14875 = $14830 * 0.55000000000000004;
           $14876 = $14874 - $14875;
           $14877 = $14837 * 0.044999999999999998;
           $14878 = $14876 - $14877;
           $14879 = $14832 * $14841;
           $14880 = $14878 - $14879;
           $14881 = (+__Z6IKsignd($14880));
           $14882 = (+__Z5IKabsd($14881));
           $14883 = $14882 < 9.9999999999999995E-7;
           if ($14883) {
            break;
           }
           HEAP8[$6>>0] = 1;
           $18132 = +HEAPF64[$75>>3];
           $18133 = $18132 * $18132;
           $18134 = +HEAPF64[$23>>3];
           $18135 = +HEAPF64[$76>>3];
           $18136 = $18134 * $18135;
           $18137 = +HEAPF64[$45>>3];
           $18138 = +HEAPF64[$606>>3];
           $18139 = $18137 * $18138;
           $18140 = $18132 * 0.29999999999999999;
           $18141 = $18135 * 0.044999999999999998;
           $18142 = +HEAPF64[$605>>3];
           $18143 = +HEAPF64[$43>>3];
           $18144 = $18142 * $18143;
           $18145 = $18132 * $18134;
           $18146 = +HEAPF64[$47>>3];
           $18147 = $18146 * 0.044999999999999998;
           $18148 = $18134 * $18147;
           $18149 = $18145 * $18147;
           $18150 = $18149 - $18148;
           $18151 = $18139 * 0.55000000000000004;
           $18152 = $18150 - $18151;
           $18153 = $18140 * $18144;
           $18154 = $18152 - $18153;
           $18155 = $18141 * $18144;
           $18156 = $18154 - $18155;
           $18157 = -$18139;
           $18158 = $18141 * $18157;
           $18159 = $18158 + $18156;
           $18160 = $18140 * $18157;
           $18161 = $18160 + $18159;
           $18162 = $18144 * 0.55000000000000004;
           $18163 = $18161 - $18162;
           $18164 = $18146 * -0.29999999999999999;
           $18165 = $18136 * $18164;
           $18166 = $18165 + $18163;
           $18167 = (+__Z6IKsignd($18166));
           __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x2284,$18167,-1);
           $18168 = HEAP8[$695>>0]|0;
           $18169 = ($18168<<24>>24)==(0);
           if ($18169) {
            break L43;
           }
           $18170 = +HEAPF64[$76>>3];
           $18171 = $18170 * 0.049500000000000002;
           $18172 = -0.30452499999999999 - $18171;
           $18173 = +HEAPF64[$75>>3];
           $18174 = $18173 * -0.027;
           $18175 = $18170 * $18174;
           $18176 = $18172 + $18175;
           $18177 = +HEAPF64[$47>>3];
           $18178 = $18177 * $18177;
           $18179 = $18178 + $18176;
           $18180 = $18133 * 0.087974999999999997;
           $18181 = $18179 - $18180;
           $18182 = $18173 * 0.33000000000000002;
           $18183 = $18181 - $18182;
           $18184 = $18144 * $18146;
           $18185 = $18146 * $18157;
           $18186 = $18185 - $18184;
           $18187 = $18145 * 0.01125;
           $18188 = $18187 + $18186;
           $18189 = $18173 * -0.087974999999999997;
           $18190 = $18136 * $18189;
           $18191 = $18188 + $18190;
           $18192 = $18136 * 0.16702500000000001;
           $18193 = $18191 - $18192;
           $18194 = +HEAPF64[$23>>3];
           $18195 = $18194 * 0.027;
           $18196 = $18133 * $18195;
           $18197 = $18193 + $18196;
           $18198 = $18194 * 0.038249999999999999;
           $18199 = $18197 - $18198;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x2285,$18183,$18199,1.9999999999999999E-6);
           $18200 = HEAP8[$696>>0]|0;
           $18201 = ($18200<<24>>24)==(0);
           if ($18201) {
            break L43;
           }
           $18202 = +HEAPF64[$x2284>>3];
           $18203 = $18202 * 1.5707963267949001;
           $18204 = $18203 + -1.5707963267949001;
           $18205 = +HEAPF64[$x2285>>3];
           $18206 = $18205 + $18204;
           $18207 = (+__Z5IKsind($18206));
           $18208 = (+__Z5IKcosd($18206));
           $18209 = $18206 > 3.14159265358979;
           do {
            if ($18209) {
             $18210 = $18206 + -6.2831853071795898;
             $18213 = $18210;
            } else {
             $18211 = $18206 < -3.14159265358979;
             if (!($18211)) {
              $18213 = $18206;
              break;
             }
             $18212 = $18206 + 6.2831853071795898;
             $18213 = $18212;
            }
           } while(0);
           HEAP8[$4>>0] = 0;
           HEAP8[$5>>0] = -1;
           HEAPF64[$3>>3] = $18213;
           HEAPF64[$697>>3] = $18208;
           HEAPF64[$698>>3] = $18207;
           $18214 = +HEAPF64[$3>>3];
           $18215 = (+__Z5IKsind($18214));
           $18216 = (+__Z5IKcosd($18214));
           $18217 = +HEAPF64[$43>>3];
           $18218 = +HEAPF64[$24>>3];
           $18219 = $18217 * $18218;
           $18220 = +HEAPF64[$76>>3];
           $18221 = $18220 * 0.29999999999999999;
           $18222 = +HEAPF64[$606>>3];
           $18223 = $18222 * 0.089999999999999996;
           $18224 = +HEAPF64[$23>>3];
           $18225 = $18217 * $18224;
           $18226 = +HEAPF64[$75>>3];
           $18227 = $18226 * 0.044999999999999998;
           $18228 = $18224 * 0.044999999999999998;
           $18229 = +HEAPF64[$45>>3];
           $18230 = $18222 * $18229;
           $18231 = $18220 * 0.044999999999999998;
           $18232 = +HEAPF64[$605>>3];
           $18233 = $18226 * 0.29999999999999999;
           $18234 = $18218 * $18229;
           $18235 = $18216 * $18232;
           $18236 = $18216 * $18224;
           $18237 = $18215 * $18224;
           $18238 = +HEAPF64[$47>>3];
           $18239 = $18216 * $18238;
           $18240 = $18217 * $18232;
           $18241 = $18215 * $18240;
           $18242 = $18239 + -0.55000000000000004;
           $18243 = $18241 + $18242;
           $18244 = $18215 * $18230;
           $18245 = $18244 + $18243;
           $18246 = $18245 - $18233;
           $18247 = $18246 - $18231;
           $18248 = -$18227;
           $18249 = $18237 * $18248;
           $18250 = -$18216;
           $18251 = $18231 * $18250;
           $18252 = $18251 + $18249;
           $18253 = $18233 * $18250;
           $18254 = $18253 + $18252;
           $18255 = $18238 + $18254;
           $18256 = $18215 * $18228;
           $18257 = $18256 + $18255;
           $18258 = $18216 * 0.55000000000000004;
           $18259 = $18257 - $18258;
           $18260 = $18221 * $18237;
           $18261 = $18260 + $18259;
           $18262 = $18221 + 0.044999999999999998;
           $18263 = $18237 * $18238;
           $18264 = $18262 + $18263;
           $18265 = $18219 * $18222;
           $18266 = $18265 + $18264;
           $18267 = $18232 * $18234;
           $18268 = $18266 - $18267;
           $18269 = $18268 - $18227;
           $18270 = $18236 * $18230;
           $18271 = $18269 - $18270;
           $18272 = $18225 * $18250;
           $18273 = $18272 * $18232;
           $18274 = $18273 + $18271;
           $18275 = $18236 * $18248;
           $18276 = $18275 - $18230;
           $18277 = $18216 * $18228;
           $18278 = $18277 + $18276;
           $18279 = $18215 * 0.55000000000000004;
           $18280 = $18279 + $18278;
           $18281 = $18215 * $18231;
           $18282 = $18281 + $18280;
           $18283 = $18215 * $18233;
           $18284 = $18283 + $18282;
           $18285 = $18284 - $18240;
           $18286 = $18221 * $18236;
           $18287 = $18286 + $18285;
           $18288 = $18238 * -0.089999999999999996;
           $18289 = $18237 * $18288;
           $18290 = $18289 + -0.21249999999999999;
           $18291 = $18241 * 1.1000000000000001;
           $18292 = $18291 + $18290;
           $18293 = $18239 * 1.1000000000000001;
           $18294 = $18293 + $18292;
           $18295 = $18232 * 0.089999999999999996;
           $18296 = $18234 * $18295;
           $18297 = $18296 + $18294;
           $18298 = +HEAPF64[$60>>3];
           $18299 = $18297 - $18298;
           $18300 = $18219 * $18223;
           $18301 = $18299 - $18300;
           $18302 = $18225 * 0.089999999999999996;
           $18303 = $18302 * $18235;
           $18304 = $18303 + $18301;
           $18305 = $18223 * $18229;
           $18306 = $18236 * $18305;
           $18307 = $18306 + $18304;
           $18308 = $18215 * 1.1000000000000001;
           $18309 = $18308 * $18230;
           $18310 = $18309 + $18307;
           $18311 = (+__Z5IKabsd($18247));
           $18312 = $18311 > 5.0000000000000004E-6;
           if ($18312) {
            break L43;
           }
           $18313 = $18222 * $18225;
           $18314 = $18216 * $18218;
           $18315 = $18314 * $18230;
           $18316 = $18313 + $18315;
           $18317 = $18224 * $18229;
           $18318 = $18317 * $18232;
           $18319 = $18316 - $18318;
           $18320 = $18218 * $18238;
           $18321 = $18215 * $18320;
           $18322 = $18319 - $18321;
           $18323 = $18219 * $18235;
           $18324 = $18323 + $18322;
           $18325 = (+__Z5IKabsd($18324));
           $18326 = $18325 > 5.0000000000000004E-6;
           if ($18326) {
            break L43;
           }
           $18327 = (+__Z5IKabsd($18261));
           $18328 = $18327 > 5.0000000000000004E-6;
           if ($18328) {
            break L43;
           }
           $18329 = (+__Z5IKabsd($18274));
           $18330 = $18329 > 5.0000000000000004E-6;
           if ($18330) {
            break L43;
           }
           $18331 = (+__Z5IKabsd($18287));
           $18332 = $18331 > 5.0000000000000004E-6;
           if ($18332) {
            break L43;
           }
           $18333 = (+__Z5IKabsd($18310));
           $18334 = $18333 > 5.0000000000000004E-6;
           if ($18334) {
            break L43;
           }
           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           break L43;
          }
         } while(0);
         $14884 = +HEAPF64[$605>>3];
         $14885 = $14884 * $14884;
         $14886 = +HEAPF64[$45>>3];
         $14887 = $14886 * $14886;
         $14888 = +HEAPF64[$24>>3];
         $14889 = $14885 * $14888;
         $14890 = $14888 * $14887;
         $14891 = $14887 * $14889;
         $14892 = $14890 - $14891;
         $14893 = +HEAPF64[$47>>3];
         $14894 = $14893 * $14893;
         $14895 = $14888 * $14894;
         $14896 = $14892 + $14895;
         $14897 = +HEAPF64[$43>>3];
         $14898 = $14897 * $14897;
         $14899 = $14889 * $14898;
         $14900 = $14896 + $14899;
         $14901 = $14884 * 2.0;
         $14902 = $14901 * $14897;
         $14903 = $14886 * $14902;
         $14904 = +HEAPF64[$606>>3];
         $14905 = $14904 * $14903;
         $14906 = $14888 * $14905;
         $14907 = $14900 + $14906;
         $14908 = (+__Z5IKabsd($14907));
         $14909 = $14908 < 9.9999999999999995E-7;
         do {
          if (!($14909)) {
           $14910 = (+__Z6IKsignd($14907));
           $14911 = (+__Z5IKabsd($14910));
           $14912 = $14911 < 9.9999999999999995E-7;
           if ($14912) {
            break;
           }
           HEAP8[$6>>0] = 1;
           $17920 = +HEAPF64[$605>>3];
           $17921 = $17920 * $17920;
           $17922 = +HEAPF64[$45>>3];
           $17923 = $17922 * $17922;
           $17924 = +HEAPF64[$43>>3];
           $17925 = $17924 * $17924;
           $17926 = $17922 * $17924;
           $17927 = +HEAPF64[$23>>3];
           $17928 = +HEAPF64[$24>>3];
           $17929 = $17920 * $17928;
           $17930 = +HEAPF64[$606>>3];
           $17931 = $17927 * $17930;
           $17932 = +HEAPF64[$75>>3];
           $17933 = $17932 * 0.29999999999999999;
           $17934 = +HEAPF64[$47>>3];
           $17935 = $17928 * $17934;
           $17936 = +HEAPF64[$76>>3];
           $17937 = $17936 * 0.044999999999999998;
           $17938 = $17923 * $17928;
           $17939 = $17922 * $17930;
           $17940 = $17928 * $17939;
           $17941 = $17924 * 0.55000000000000004;
           $17942 = $17941 * $17929;
           $17943 = $17924 * $17929;
           $17944 = $17943 * $17937;
           $17945 = $17942 + $17944;
           $17946 = $17943 * $17933;
           $17947 = $17946 + $17945;
           $17948 = $17924 * $17934;
           $17949 = $17931 * $17948;
           $17950 = $17949 + $17947;
           $17951 = $17933 * $17940;
           $17952 = $17951 + $17950;
           $17953 = $17940 * 0.55000000000000004;
           $17954 = $17953 + $17952;
           $17955 = $17940 * $17937;
           $17956 = $17955 + $17954;
           $17957 = -$17920;
           $17958 = $17922 * $17957;
           $17959 = $17958 * $17934;
           $17960 = $17927 * $17959;
           $17961 = $17960 + $17956;
           $17962 = $17933 * $17935;
           $17963 = $17927 * 2.0;
           $17964 = $17921 * $17963;
           $17965 = $17926 * $17964;
           $17966 = $17965 + $17962;
           $17967 = $17935 * 0.55000000000000004;
           $17968 = $17967 + $17966;
           $17969 = $17920 * $17923;
           $17970 = $17969 * $17931;
           $17971 = $17970 + $17968;
           $17972 = $17935 * $17937;
           $17973 = $17972 + $17971;
           $17974 = $17926 * $17927;
           $17975 = $17973 - $17974;
           $17976 = $17930 * $17957;
           $17977 = $17925 * $17976;
           $17978 = $17927 * $17977;
           $17979 = $17978 + $17975;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x2254,$17961,$17979,1.9999999999999999E-6);
           $17980 = HEAP8[$691>>0]|0;
           $17981 = ($17980<<24>>24)==(0);
           if ($17981) {
            break L43;
           }
           $17982 = +HEAPF64[$24>>3];
           $17983 = $17921 * $17982;
           $17984 = $17925 * $17983;
           $17985 = $17938 + $17984;
           $17986 = $17921 * $17938;
           $17987 = $17985 - $17986;
           $17988 = +HEAPF64[$606>>3];
           $17989 = $17988 * 2.0;
           $17990 = $17926 * $17989;
           $17991 = $17929 * $17990;
           $17992 = $17987 + $17991;
           $17993 = +HEAPF64[$47>>3];
           $17994 = $17935 * $17993;
           $17995 = $17994 + $17992;
           $17996 = (+__Z6IKsignd($17995));
           __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x2255,$17996,-1);
           $17997 = HEAP8[$692>>0]|0;
           $17998 = ($17997<<24>>24)==(0);
           if ($17998) {
            break L43;
           }
           $17999 = +HEAPF64[$x2254>>3];
           $18000 = $17999 + -1.5707963267949001;
           $18001 = +HEAPF64[$x2255>>3];
           $18002 = $18001 * 1.5707963267949001;
           $18003 = $18000 + $18002;
           $18004 = (+__Z5IKsind($18003));
           $18005 = (+__Z5IKcosd($18003));
           $18006 = $18003 > 3.14159265358979;
           do {
            if ($18006) {
             $18007 = $18003 + -6.2831853071795898;
             $18010 = $18007;
            } else {
             $18008 = $18003 < -3.14159265358979;
             if (!($18008)) {
              $18010 = $18003;
              break;
             }
             $18009 = $18003 + 6.2831853071795898;
             $18010 = $18009;
            }
           } while(0);
           HEAP8[$4>>0] = 0;
           HEAP8[$5>>0] = -1;
           HEAPF64[$3>>3] = $18010;
           HEAPF64[$693>>3] = $18005;
           HEAPF64[$694>>3] = $18004;
           $18011 = +HEAPF64[$3>>3];
           $18012 = (+__Z5IKsind($18011));
           $18013 = (+__Z5IKcosd($18011));
           $18014 = +HEAPF64[$43>>3];
           $18015 = +HEAPF64[$24>>3];
           $18016 = $18014 * $18015;
           $18017 = +HEAPF64[$76>>3];
           $18018 = $18017 * 0.29999999999999999;
           $18019 = +HEAPF64[$606>>3];
           $18020 = $18019 * 0.089999999999999996;
           $18021 = +HEAPF64[$23>>3];
           $18022 = $18014 * $18021;
           $18023 = +HEAPF64[$75>>3];
           $18024 = $18023 * 0.044999999999999998;
           $18025 = $18021 * 0.044999999999999998;
           $18026 = +HEAPF64[$45>>3];
           $18027 = $18019 * $18026;
           $18028 = $18017 * 0.044999999999999998;
           $18029 = +HEAPF64[$605>>3];
           $18030 = $18023 * 0.29999999999999999;
           $18031 = $18015 * $18026;
           $18032 = $18013 * $18029;
           $18033 = $18013 * $18021;
           $18034 = $18012 * $18021;
           $18035 = +HEAPF64[$47>>3];
           $18036 = $18013 * $18035;
           $18037 = $18014 * $18029;
           $18038 = $18012 * $18037;
           $18039 = $18012 * $18027;
           $18040 = $18039 + -0.55000000000000004;
           $18041 = $18040 + $18038;
           $18042 = $18036 + $18041;
           $18043 = $18042 - $18030;
           $18044 = $18043 - $18028;
           $18045 = $18012 * $18025;
           $18046 = $18018 * $18034;
           $18047 = $18045 + $18046;
           $18048 = -$18013;
           $18049 = $18030 * $18048;
           $18050 = $18047 + $18049;
           $18051 = $18028 * $18048;
           $18052 = $18051 + $18050;
           $18053 = $18035 + $18052;
           $18054 = $18013 * 0.55000000000000004;
           $18055 = $18053 - $18054;
           $18056 = -$18024;
           $18057 = $18034 * $18056;
           $18058 = $18057 + $18055;
           $18059 = $18018 + 0.044999999999999998;
           $18060 = $18022 * $18048;
           $18061 = $18060 * $18029;
           $18062 = $18059 + $18061;
           $18063 = $18034 * $18035;
           $18064 = $18062 + $18063;
           $18065 = $18016 * $18019;
           $18066 = $18065 + $18064;
           $18067 = $18066 - $18024;
           $18068 = $18033 * $18027;
           $18069 = $18067 - $18068;
           $18070 = $18029 * $18031;
           $18071 = $18069 - $18070;
           $18072 = $18012 * $18028;
           $18073 = $18012 * $18030;
           $18074 = $18072 + $18073;
           $18075 = $18013 * $18025;
           $18076 = $18075 + $18074;
           $18077 = $18018 * $18033;
           $18078 = $18077 + $18076;
           $18079 = $18078 - $18037;
           $18080 = $18012 * 0.55000000000000004;
           $18081 = $18080 + $18079;
           $18082 = $18033 * $18056;
           $18083 = $18082 + $18081;
           $18084 = $18083 - $18027;
           $18085 = $18036 * 1.1000000000000001;
           $18086 = $18085 + -0.21249999999999999;
           $18087 = $18038 * 1.1000000000000001;
           $18088 = $18087 + $18086;
           $18089 = $18012 * 1.1000000000000001;
           $18090 = $18089 * $18027;
           $18091 = $18090 + $18088;
           $18092 = $18035 * -0.089999999999999996;
           $18093 = $18034 * $18092;
           $18094 = $18093 + $18091;
           $18095 = $18022 * 0.089999999999999996;
           $18096 = $18095 * $18032;
           $18097 = $18096 + $18094;
           $18098 = $18016 * $18020;
           $18099 = $18097 - $18098;
           $18100 = +HEAPF64[$60>>3];
           $18101 = $18099 - $18100;
           $18102 = $18029 * 0.089999999999999996;
           $18103 = $18031 * $18102;
           $18104 = $18103 + $18101;
           $18105 = $18020 * $18026;
           $18106 = $18033 * $18105;
           $18107 = $18106 + $18104;
           $18108 = (+__Z5IKabsd($18044));
           $18109 = $18108 > 5.0000000000000004E-6;
           if ($18109) {
            break L43;
           }
           $18110 = $18016 * $18032;
           $18111 = $18015 * $18035;
           $18112 = $18012 * $18111;
           $18113 = $18110 - $18112;
           $18114 = $18019 * $18022;
           $18115 = $18114 + $18113;
           $18116 = $18021 * $18026;
           $18117 = $18116 * $18029;
           $18118 = $18115 - $18117;
           $18119 = $18013 * $18015;
           $18120 = $18119 * $18027;
           $18121 = $18120 + $18118;
           $18122 = (+__Z5IKabsd($18121));
           $18123 = $18122 > 5.0000000000000004E-6;
           if ($18123) {
            break L43;
           }
           $18124 = (+__Z5IKabsd($18058));
           $18125 = $18124 > 5.0000000000000004E-6;
           if ($18125) {
            break L43;
           }
           $18126 = (+__Z5IKabsd($18071));
           $18127 = $18126 > 5.0000000000000004E-6;
           if ($18127) {
            break L43;
           }
           $18128 = (+__Z5IKabsd($18084));
           $18129 = $18128 > 5.0000000000000004E-6;
           if ($18129) {
            break L43;
           }
           $18130 = (+__Z5IKabsd($18107));
           $18131 = $18130 > 5.0000000000000004E-6;
           if ($18131) {
            break L43;
           }
           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           break L43;
          }
         } while(0);
         $14913 = +HEAPF64[$47>>3];
         $14914 = +HEAPF64[$24>>3];
         $14915 = $14913 * $14914;
         $14916 = +HEAPF64[$45>>3];
         $14917 = +HEAPF64[$606>>3];
         $14918 = $14916 * $14917;
         $14919 = +HEAPF64[$605>>3];
         $14920 = +HEAPF64[$43>>3];
         $14921 = $14919 * $14920;
         $14922 = +HEAPF64[$23>>3];
         $14923 = $14914 * $14922;
         $14924 = +HEAPF64[$75>>3];
         $14925 = $14923 * 0.044999999999999998;
         $14926 = +HEAPF64[$76>>3];
         $14927 = $14923 * $14926;
         $14928 = $14918 * $14927;
         $14929 = $14928 * 6.6666666666666696;
         $14930 = $14924 * -6.6666666666666696;
         $14931 = $14915 * $14930;
         $14932 = $14931 + $14929;
         $14933 = $14918 * $14923;
         $14934 = $14933 + $14932;
         $14935 = $14921 * $14923;
         $14936 = $14935 + $14934;
         $14937 = $14924 * $14933;
         $14938 = $14936 - $14937;
         $14939 = $14924 * $14935;
         $14940 = $14938 - $14939;
         $14941 = $14915 * 12.2222222222222;
         $14942 = $14940 - $14941;
         $14943 = $14921 * 6.6666666666666696;
         $14944 = $14943 * $14927;
         $14945 = $14944 + $14942;
         $14946 = $14915 * $14926;
         $14947 = $14945 - $14946;
         $14948 = -$14924;
         $14949 = (+__Z5IKabsd($14947));
         $14950 = $14949 < 9.9999999999999995E-7;
         do {
          if (!($14950)) {
           $14951 = $14921 * $14948;
           $14952 = $14951 * $14925;
           $14953 = $14926 * -0.044999999999999998;
           $14954 = $14915 * $14953;
           $14955 = $14952 + $14954;
           $14956 = $14918 * $14948;
           $14957 = $14956 * $14925;
           $14958 = $14957 + $14955;
           $14959 = $14924 * -0.29999999999999999;
           $14960 = $14915 * $14959;
           $14961 = $14960 + $14958;
           $14962 = $14918 * $14925;
           $14963 = $14962 + $14961;
           $14964 = $14921 * 0.29999999999999999;
           $14965 = $14964 * $14927;
           $14966 = $14965 + $14963;
           $14967 = $14921 * $14925;
           $14968 = $14967 + $14966;
           $14969 = $14928 * 0.29999999999999999;
           $14970 = $14969 + $14968;
           $14971 = $14915 * 0.55000000000000004;
           $14972 = $14970 - $14971;
           $14973 = (+__Z6IKsignd($14972));
           $14974 = (+__Z5IKabsd($14973));
           $14975 = $14974 < 9.9999999999999995E-7;
           if ($14975) {
            break;
           }
           HEAP8[$6>>0] = 1;
           $17682 = +HEAPF64[$23>>3];
           $17683 = $17682 * $17682;
           $17684 = +HEAPF64[$43>>3];
           $17685 = $17684 * 0.044999999999999998;
           $17686 = +HEAPF64[$606>>3];
           $17687 = +HEAPF64[$24>>3];
           $17688 = $17686 * $17687;
           $17689 = +HEAPF64[$47>>3];
           $17690 = $17687 * $17689;
           $17691 = +HEAPF64[$605>>3];
           $17692 = +HEAPF64[$75>>3];
           $17693 = $17691 * $17692;
           $17694 = $17682 * 0.55000000000000004;
           $17695 = $17684 * $17686;
           $17696 = +HEAPF64[$45>>3];
           $17697 = $17691 * $17696;
           $17698 = $17692 * 0.29999999999999999;
           $17699 = +HEAPF64[$76>>3];
           $17700 = $17699 * 0.29999999999999999;
           $17701 = $17699 * 0.044999999999999998;
           $17702 = $17683 * $17686;
           $17703 = $17682 * $17691;
           $17704 = $17687 * $17703;
           $17705 = $17683 * 0.044999999999999998;
           $17706 = $17682 * 0.044999999999999998;
           $17707 = $17706 * $17696;
           $17708 = -$17690;
           $17709 = $17698 * $17708;
           $17710 = $17701 * $17708;
           $17711 = $17709 + $17710;
           $17712 = $17682 * $17687;
           $17713 = $17685 * $17712;
           $17714 = $17713 * $17693;
           $17715 = $17711 - $17714;
           $17716 = $17685 * $17704;
           $17717 = $17716 + $17715;
           $17718 = $17684 * $17700;
           $17719 = $17704 * $17718;
           $17720 = $17719 + $17717;
           $17721 = $17688 * $17692;
           $17722 = $17721 * $17707;
           $17723 = $17720 - $17722;
           $17724 = $17690 * 0.55000000000000004;
           $17725 = $17723 - $17724;
           $17726 = $17688 * $17707;
           $17727 = $17726 + $17725;
           $17728 = $17682 * $17696;
           $17729 = $17688 * $17728;
           $17730 = $17729 * $17700;
           $17731 = $17730 + $17727;
           $17732 = (+__Z6IKsignd($17731));
           __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x2221,$17732,-1);
           $17733 = HEAP8[$687>>0]|0;
           $17734 = ($17733<<24>>24)==(0);
           if ($17734) {
            break L43;
           }
           $17735 = $17682 * 0.29999999999999999;
           $17736 = $17735 * $17696;
           $17737 = $17694 * $17695;
           $17738 = +HEAPF64[$23>>3];
           $17739 = $17697 * $17738;
           $17740 = $17701 * $17739;
           $17741 = $17740 - $17737;
           $17742 = $17694 * $17697;
           $17743 = $17742 + $17741;
           $17744 = +HEAPF64[$45>>3];
           $17745 = -$17744;
           $17746 = +HEAPF64[$47>>3];
           $17747 = $17746 * $17745;
           $17748 = $17688 * $17747;
           $17749 = $17743 + $17748;
           $17750 = +HEAPF64[$605>>3];
           $17751 = +HEAPF64[$43>>3];
           $17752 = $17750 * $17751;
           $17753 = $17690 * $17752;
           $17754 = $17749 - $17753;
           $17755 = -$17738;
           $17756 = $17695 * $17755;
           $17757 = $17698 * $17756;
           $17758 = $17757 + $17754;
           $17759 = +HEAPF64[$606>>3];
           $17760 = $17759 * $17755;
           $17761 = +HEAPF64[$76>>3];
           $17762 = $17760 * $17761;
           $17763 = $17685 * $17762;
           $17764 = $17758 + $17763;
           $17765 = $17693 * $17736;
           $17766 = $17765 + $17764;
           $17767 = +HEAPF64[$75>>3];
           $17768 = $17685 * $17767;
           $17769 = $17702 * $17768;
           $17770 = $17683 * $17695;
           $17771 = $17770 * $17700;
           $17772 = $17769 - $17771;
           $17773 = $17690 * $17746;
           $17774 = $17772 - $17773;
           $17775 = $17683 * $17697;
           $17776 = $17775 * $17700;
           $17777 = $17776 + $17774;
           $17778 = $17705 * $17697;
           $17779 = $17778 + $17777;
           $17780 = $17693 * $17745;
           $17781 = $17705 * $17780;
           $17782 = $17781 + $17779;
           $17783 = $17685 * $17702;
           $17784 = $17782 - $17783;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x2222,$17766,$17784,1.9999999999999999E-6);
           $17785 = HEAP8[$688>>0]|0;
           $17786 = ($17785<<24>>24)==(0);
           if ($17786) {
            break L43;
           }
           $17787 = +HEAPF64[$x2221>>3];
           $17788 = $17787 * 1.5707963267949001;
           $17789 = $17788 + -1.5707963267949001;
           $17790 = +HEAPF64[$x2222>>3];
           $17791 = $17790 + $17789;
           $17792 = (+__Z5IKsind($17791));
           $17793 = (+__Z5IKcosd($17791));
           $17794 = $17791 > 3.14159265358979;
           do {
            if ($17794) {
             $17795 = $17791 + -6.2831853071795898;
             $17798 = $17795;
            } else {
             $17796 = $17791 < -3.14159265358979;
             if (!($17796)) {
              $17798 = $17791;
              break;
             }
             $17797 = $17791 + 6.2831853071795898;
             $17798 = $17797;
            }
           } while(0);
           HEAP8[$4>>0] = 0;
           HEAP8[$5>>0] = -1;
           HEAPF64[$3>>3] = $17798;
           HEAPF64[$689>>3] = $17793;
           HEAPF64[$690>>3] = $17792;
           $17799 = +HEAPF64[$3>>3];
           $17800 = (+__Z5IKsind($17799));
           $17801 = (+__Z5IKcosd($17799));
           $17802 = +HEAPF64[$43>>3];
           $17803 = +HEAPF64[$24>>3];
           $17804 = $17802 * $17803;
           $17805 = +HEAPF64[$76>>3];
           $17806 = $17805 * 0.29999999999999999;
           $17807 = +HEAPF64[$606>>3];
           $17808 = $17807 * 0.089999999999999996;
           $17809 = +HEAPF64[$23>>3];
           $17810 = $17802 * $17809;
           $17811 = +HEAPF64[$75>>3];
           $17812 = $17811 * 0.044999999999999998;
           $17813 = $17809 * 0.044999999999999998;
           $17814 = +HEAPF64[$45>>3];
           $17815 = $17807 * $17814;
           $17816 = $17805 * 0.044999999999999998;
           $17817 = +HEAPF64[$605>>3];
           $17818 = $17811 * 0.29999999999999999;
           $17819 = $17803 * $17814;
           $17820 = $17801 * $17817;
           $17821 = $17801 * $17809;
           $17822 = $17800 * $17809;
           $17823 = +HEAPF64[$47>>3];
           $17824 = $17801 * $17823;
           $17825 = $17802 * $17817;
           $17826 = $17800 * $17825;
           $17827 = $17824 + -0.55000000000000004;
           $17828 = $17826 + $17827;
           $17829 = $17828 - $17818;
           $17830 = $17829 - $17816;
           $17831 = $17800 * $17815;
           $17832 = $17831 + $17830;
           $17833 = $17801 * 0.55000000000000004;
           $17834 = $17806 * $17822;
           $17835 = $17834 - $17833;
           $17836 = -$17801;
           $17837 = $17818 * $17836;
           $17838 = $17835 + $17837;
           $17839 = $17816 * $17836;
           $17840 = $17839 + $17838;
           $17841 = -$17812;
           $17842 = $17822 * $17841;
           $17843 = $17842 + $17840;
           $17844 = $17823 + $17843;
           $17845 = $17800 * $17813;
           $17846 = $17845 + $17844;
           $17847 = $17822 * $17823;
           $17848 = $17847 + 0.044999999999999998;
           $17849 = $17806 + $17848;
           $17850 = $17821 * $17815;
           $17851 = $17849 - $17850;
           $17852 = $17804 * $17807;
           $17853 = $17852 + $17851;
           $17854 = $17810 * $17836;
           $17855 = $17854 * $17817;
           $17856 = $17855 + $17853;
           $17857 = $17856 - $17812;
           $17858 = $17817 * $17819;
           $17859 = $17857 - $17858;
           $17860 = $17806 * $17821;
           $17861 = $17821 * $17841;
           $17862 = $17860 + $17861;
           $17863 = $17801 * $17813;
           $17864 = $17863 + $17862;
           $17865 = $17864 - $17815;
           $17866 = $17865 - $17825;
           $17867 = $17800 * $17816;
           $17868 = $17867 + $17866;
           $17869 = $17800 * $17818;
           $17870 = $17869 + $17868;
           $17871 = $17800 * 0.55000000000000004;
           $17872 = $17871 + $17870;
           $17873 = $17804 * $17808;
           $17874 = -0.21249999999999999 - $17873;
           $17875 = $17808 * $17814;
           $17876 = $17821 * $17875;
           $17877 = $17874 + $17876;
           $17878 = +HEAPF64[$60>>3];
           $17879 = $17877 - $17878;
           $17880 = $17817 * 0.089999999999999996;
           $17881 = $17819 * $17880;
           $17882 = $17881 + $17879;
           $17883 = $17823 * -0.089999999999999996;
           $17884 = $17822 * $17883;
           $17885 = $17884 + $17882;
           $17886 = $17824 * 1.1000000000000001;
           $17887 = $17886 + $17885;
           $17888 = $17826 * 1.1000000000000001;
           $17889 = $17888 + $17887;
           $17890 = $17800 * 1.1000000000000001;
           $17891 = $17890 * $17815;
           $17892 = $17891 + $17889;
           $17893 = $17810 * 0.089999999999999996;
           $17894 = $17893 * $17820;
           $17895 = $17894 + $17892;
           $17896 = (+__Z5IKabsd($17832));
           $17897 = $17896 > 5.0000000000000004E-6;
           if ($17897) {
            break L43;
           }
           $17898 = $17807 * $17810;
           $17899 = $17809 * $17814;
           $17900 = $17899 * $17817;
           $17901 = $17898 - $17900;
           $17902 = $17804 * $17820;
           $17903 = $17901 + $17902;
           $17904 = $17801 * $17803;
           $17905 = $17904 * $17815;
           $17906 = $17905 + $17903;
           $17907 = $17803 * $17823;
           $17908 = $17800 * $17907;
           $17909 = $17906 - $17908;
           $17910 = (+__Z5IKabsd($17909));
           $17911 = $17910 > 5.0000000000000004E-6;
           if ($17911) {
            break L43;
           }
           $17912 = (+__Z5IKabsd($17846));
           $17913 = $17912 > 5.0000000000000004E-6;
           if ($17913) {
            break L43;
           }
           $17914 = (+__Z5IKabsd($17859));
           $17915 = $17914 > 5.0000000000000004E-6;
           if ($17915) {
            break L43;
           }
           $17916 = (+__Z5IKabsd($17872));
           $17917 = $17916 > 5.0000000000000004E-6;
           if ($17917) {
            break L43;
           }
           $17918 = (+__Z5IKabsd($17895));
           $17919 = $17918 > 5.0000000000000004E-6;
           if ($17919) {
            break L43;
           }
           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           break L43;
          }
         } while(0);
         $14976 = +HEAPF64[$43>>3];
         $14977 = +HEAPF64[$606>>3];
         $14978 = $14976 * $14977;
         $14979 = +HEAPF64[$605>>3];
         $14980 = +HEAPF64[$45>>3];
         $14981 = $14979 * $14980;
         $14982 = $14978 - $14981;
         $14983 = +HEAPF64[$22>>3];
         $14984 = (+__Z5IKabsd($14983));
         $14985 = $14984 + 3.14159265358979;
         $14986 = (+__Z6IKfmoddd($14985,6.2831853071795898));
         $14987 = $14986 + -3.14159265358979;
         $14988 = (+__Z5IKabsd($14987));
         $14989 = $14988 < 9.9999999999999995E-7;
         do {
          if ($14989) {
           $14990 = +HEAPF64[$75>>3];
           $14991 = +HEAPF64[$60>>3];
           $14992 = +HEAPF64[$76>>3];
           $14993 = $14992 * 0.076499999999999999;
           $14994 = $14993 + 0.39655000000000001;
           $14995 = $14994 - $14991;
           $14996 = $14990 * 0.32595000000000002;
           $14997 = $14996 + $14995;
           $14998 = (+__Z5IKabsd($14997));
           $14999 = $14998 < 9.9999999999999995E-7;
           if (!($14999)) {
            break;
           }
           $15000 = (+__Z5IKabsd($14982));
           $15001 = $15000 < 9.9999999999999995E-7;
           if (!($15001)) {
            break;
           }
           HEAPF64[$24>>3] = 0.0;
           HEAPF64[$23>>3] = 1.0;
           HEAPF64[$22>>3] = 0.0;
           $15002 = +HEAPF64[$605>>3];
           $15003 = +HEAPF64[$43>>3];
           $15004 = $15002 * $15003;
           $15005 = +HEAPF64[$76>>3];
           $15006 = $15005 * 0.31056143580303702;
           $15007 = +HEAPF64[$60>>3];
           $15008 = +HEAPF64[$47>>3];
           $15009 = $15007 * $15008;
           $15010 = +HEAPF64[$45>>3];
           $15011 = +HEAPF64[$606>>3];
           $15012 = $15010 * $15011;
           $15013 = $15007 * 0.138057984353428;
           $15014 = $15005 * 12.2222222222222;
           $15015 = $15007 * 5.4333061668024998;
           $15016 = $15005 * $15008;
           $15017 = $15008 * 7.2815358145431501;
           $15018 = -$15004;
           $15019 = $15014 * $15018;
           $15020 = $15019 + $15017;
           $15021 = $15004 * $15015;
           $15022 = $15021 + $15020;
           $15023 = $15014 * $15012;
           $15024 = $15022 - $15023;
           $15025 = $15012 * 3.92556370551481;
           $15026 = $15024 - $15025;
           $15027 = $15004 * 3.92556370551481;
           $15028 = $15026 - $15027;
           $15029 = $15015 * $15012;
           $15030 = $15029 + $15028;
           $15031 = $15030 - $15016;
           $15032 = $15009 * 36.222041112016697;
           $15033 = $15032 + $15031;
           $15034 = (+__Z5IKabsd($15033));
           $15035 = $15034 < 9.9999999999999995E-7;
           do {
            if (!($15035)) {
             $15036 = $15006 * $15018;
             $15037 = $15004 * $15013;
             $15038 = $15036 + $15037;
             $15039 = $15006 * $15012;
             $15040 = $15038 - $15039;
             $15041 = $15008 * 0.185020708697653;
             $15042 = $15041 + $15040;
             $15043 = $15016 * 0.025409572020248499;
             $15044 = $15042 - $15043;
             $15045 = $15012 * 0.099746893695352001;
             $15046 = $15044 - $15045;
             $15047 = $15004 * 0.099746893695352001;
             $15048 = $15046 - $15047;
             $15049 = $15013 * $15012;
             $15050 = $15049 + $15048;
             $15051 = $15009 * 0.92038656235618999;
             $15052 = $15051 + $15050;
             $15053 = (+__Z6IKsignd($15052));
             $15054 = (+__Z5IKabsd($15053));
             $15055 = $15054 < 9.9999999999999995E-7;
             if ($15055) {
              break;
             }
             HEAP8[$6>>0] = 1;
             $16166 = +HEAPF64[$75>>3];
             $16167 = $16166 * $16166;
             $16168 = +HEAPF64[$605>>3];
             $16169 = +HEAPF64[$43>>3];
             $16170 = $16168 * $16169;
             $16171 = +HEAPF64[$60>>3];
             $16172 = $16171 * 0.0062126092959042803;
             $16173 = +HEAPF64[$76>>3];
             $16174 = $16166 * $16173;
             $16175 = +HEAPF64[$45>>3];
             $16176 = +HEAPF64[$606>>3];
             $16177 = $16175 * $16176;
             $16178 = $16171 * 0.138057984353428;
             $16179 = $16171 * 0.041417395306028497;
             $16180 = $16173 * 0.31056143580303702;
             $16181 = $16177 * 0.099746893695352001;
             $16182 = +HEAPF64[$47>>3];
             $16183 = $16182 * -0.025409572020248499;
             $16184 = $16173 * $16183;
             $16185 = $16184 - $16181;
             $16186 = $16170 * 0.099746893695352001;
             $16187 = $16185 - $16186;
             $16188 = $16170 * $16180;
             $16189 = $16187 - $16188;
             $16190 = $16182 * 0.185020708697653;
             $16191 = $16190 + $16189;
             $16192 = $16170 * $16178;
             $16193 = $16192 + $16191;
             $16194 = $16171 * 0.92038656235618999;
             $16195 = $16194 * $16182;
             $16196 = $16195 + $16193;
             $16197 = $16180 * $16177;
             $16198 = $16196 - $16197;
             $16199 = $16178 * $16177;
             $16200 = $16199 + $16198;
             $16201 = (+__Z6IKsignd($16200));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x2084,$16201,-1);
             $16202 = HEAP8[$643>>0]|0;
             $16203 = ($16202<<24>>24)==(0);
             if ($16203) {
              break L43;
             }
             $16204 = -7.0306028531983398E-4 - $16179;
             $16205 = +HEAPF64[$47>>3];
             $16206 = $16177 * $16205;
             $16207 = $16204 + $16206;
             $16208 = +HEAPF64[$60>>3];
             $16209 = $16208 * -0.27611596870685701;
             $16210 = +HEAPF64[$76>>3];
             $16211 = $16209 * $16210;
             $16212 = $16207 + $16211;
             $16213 = $16167 * 0.0076228716060745497;
             $16214 = $16212 - $16213;
             $16215 = $16174 * 0.00114343074091118;
             $16216 = $16214 - $16215;
             $16217 = $16170 * $16205;
             $16218 = $16217 + $16216;
             $16219 = $16210 * 0.054362781868384703;
             $16220 = $16218 - $16219;
             $16221 = +HEAPF64[$75>>3];
             $16222 = $16221 * 0.0083259318913943905;
             $16223 = $16222 + $16220;
             $16224 = $16179 * $16221;
             $16225 = $16224 + $16223;
             $16226 = $16172 + -0.097657040957201999;
             $16227 = $16172 * $16221;
             $16228 = $16226 - $16227;
             $16229 = $16174 * 0.0139752646111367;
             $16230 = $16229 + $16228;
             $16231 = $16205 * $16205;
             $16232 = $16231 + $16230;
             $16233 = $16167 * 0.093168430740911204;
             $16234 = $16233 + $16232;
             $16235 = $16221 * 0.0044886102162908399;
             $16236 = $16235 + $16234;
             $16237 = $16179 * $16210;
             $16238 = $16237 + $16236;
             $16239 = $16210 * 0.0438993327197423;
             $16240 = $16238 - $16239;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x2085,$16225,$16240,1.9999999999999999E-6);
             $16241 = HEAP8[$644>>0]|0;
             $16242 = ($16241<<24>>24)==(0);
             if ($16242) {
              break L43;
             }
             $16243 = +HEAPF64[$x2084>>3];
             $16244 = $16243 * 1.5707963267949001;
             $16245 = $16244 + -1.5707963267949001;
             $16246 = +HEAPF64[$x2085>>3];
             $16247 = $16246 + $16245;
             $16248 = (+__Z5IKsind($16247));
             $16249 = (+__Z5IKcosd($16247));
             $16250 = $16247 > 3.14159265358979;
             do {
              if ($16250) {
               $16251 = $16247 + -6.2831853071795898;
               $16254 = $16251;
              } else {
               $16252 = $16247 < -3.14159265358979;
               if (!($16252)) {
                $16254 = $16247;
                break;
               }
               $16253 = $16247 + 6.2831853071795898;
               $16254 = $16253;
              }
             } while(0);
             HEAP8[$4>>0] = 0;
             HEAP8[$5>>0] = -1;
             HEAPF64[$3>>3] = $16254;
             HEAPF64[$645>>3] = $16249;
             HEAPF64[$646>>3] = $16248;
             $16255 = +HEAPF64[$3>>3];
             $16256 = (+__Z5IKsind($16255));
             $16257 = (+__Z5IKcosd($16255));
             $16258 = +HEAPF64[$76>>3];
             $16259 = $16258 * 0.044999999999999998;
             $16260 = +HEAPF64[$75>>3];
             $16261 = $16260 * 0.29999999999999999;
             $16262 = $16260 * 0.044999999999999998;
             $16263 = +HEAPF64[$605>>3];
             $16264 = +HEAPF64[$43>>3];
             $16265 = $16263 * $16264;
             $16266 = +HEAPF64[$45>>3];
             $16267 = +HEAPF64[$606>>3];
             $16268 = $16266 * $16267;
             $16269 = $16257 * $16258;
             $16270 = +HEAPF64[$47>>3];
             $16271 = $16256 * $16270;
             $16272 = $16257 * $16270;
             $16273 = $16257 * 0.089999999999999996;
             $16274 = $16256 * 1.1000000000000001;
             $16275 = $16272 + -0.55000000000000004;
             $16276 = $16275 - $16261;
             $16277 = $16276 - $16259;
             $16278 = $16256 * $16265;
             $16279 = $16278 + $16277;
             $16280 = $16256 * $16268;
             $16281 = $16280 + $16279;
             $16282 = +HEAPF64[$60>>3];
             $16283 = $16282 * -0.138057984353428;
             $16284 = $16256 * $16283;
             $16285 = $16257 * 0.185020708697653;
             $16286 = $16284 - $16285;
             $16287 = $16256 * 0.099746893695352001;
             $16288 = $16287 + $16286;
             $16289 = $16270 + $16288;
             $16290 = $16258 * 0.31056143580303702;
             $16291 = $16256 * $16290;
             $16292 = $16291 + $16289;
             $16293 = $16282 * -0.92038656235618999;
             $16294 = $16257 * $16293;
             $16295 = $16294 + $16292;
             $16296 = $16269 * 0.025409572020248499;
             $16297 = $16296 + $16295;
             $16298 = $16257 * 0.044999999999999998;
             $16299 = $16256 * $16259;
             $16300 = $16298 + $16299;
             $16301 = $16256 * $16261;
             $16302 = $16300 + $16301;
             $16303 = $16257 * $16262;
             $16304 = $16302 - $16303;
             $16305 = $16304 - $16268;
             $16306 = $16305 - $16265;
             $16307 = $16256 * 0.55000000000000004;
             $16308 = $16307 + $16306;
             $16309 = $16269 * 0.29999999999999999;
             $16310 = $16309 + $16308;
             $16311 = $16271 * 0.089999999999999996;
             $16312 = -0.21249999999999999 - $16311;
             $16313 = $16272 * 1.1000000000000001;
             $16314 = $16313 + $16312;
             $16315 = $16274 * $16265;
             $16316 = $16315 + $16314;
             $16317 = $16273 * $16265;
             $16318 = $16317 + $16316;
             $16319 = $16318 - $16282;
             $16320 = $16274 * $16268;
             $16321 = $16320 + $16319;
             $16322 = $16273 * $16268;
             $16323 = $16322 + $16321;
             $16324 = (+__Z5IKabsd($16281));
             $16325 = $16324 > 5.0000000000000004E-6;
             if ($16325) {
              break L43;
             }
             $16326 = 0.044999999999999998 - $16262;
             $16327 = $16257 * $16265;
             $16328 = $16326 - $16327;
             $16329 = $16328 + $16271;
             $16330 = $16257 * $16268;
             $16331 = $16329 - $16330;
             $16332 = $16258 * 0.29999999999999999;
             $16333 = $16332 + $16331;
             $16334 = (+__Z5IKabsd($16333));
             $16335 = $16334 > 5.0000000000000004E-6;
             if ($16335) {
              break L43;
             }
             $16336 = (+__Z5IKabsd($16297));
             $16337 = $16336 > 5.0000000000000004E-6;
             if ($16337) {
              break L43;
             }
             $16338 = (+__Z5IKabsd($16310));
             $16339 = $16338 > 5.0000000000000004E-6;
             if ($16339) {
              break L43;
             }
             $16340 = (+__Z5IKabsd($16323));
             $16341 = $16340 > 5.0000000000000004E-6;
             if ($16341) {
              break L43;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L43;
            }
           } while(0);
           HEAPF64[$24>>3] = 0.0;
           HEAPF64[$23>>3] = 1.0;
           HEAPF64[$22>>3] = 0.0;
           $15056 = +HEAPF64[$605>>3];
           $15057 = +HEAPF64[$43>>3];
           $15058 = $15056 * $15057;
           $15059 = +HEAPF64[$45>>3];
           $15060 = +HEAPF64[$606>>3];
           $15061 = $15059 * $15060;
           $15062 = +HEAPF64[$76>>3];
           $15063 = $15062 * 0.29999999999999999;
           $15064 = +HEAPF64[$75>>3];
           $15065 = $15064 * 0.044999999999999998;
           $15066 = +HEAPF64[$47>>3];
           $15067 = $15062 * $15066;
           $15068 = $15062 * 6.6666666666666696;
           $15069 = $15064 * $15066;
           $15070 = -$15058;
           $15071 = $15064 * $15070;
           $15072 = -$15061;
           $15073 = $15064 * $15072;
           $15074 = $15071 + $15073;
           $15075 = $15061 * $15068;
           $15076 = $15075 + $15074;
           $15077 = $15058 * $15068;
           $15078 = $15077 + $15076;
           $15079 = $15061 + $15078;
           $15080 = $15058 + $15079;
           $15081 = $15069 * 6.6666666666666696;
           $15082 = $15080 - $15081;
           $15083 = $15066 * 12.2222222222222;
           $15084 = $15082 - $15083;
           $15085 = $15084 - $15067;
           $15086 = (+__Z5IKabsd($15085));
           $15087 = $15086 < 9.9999999999999995E-7;
           do {
            if (!($15087)) {
             $15088 = $15066 * 0.55000000000000004;
             $15089 = $15067 * -0.044999999999999998;
             $15090 = $15089 - $15088;
             $15091 = $15061 * $15063;
             $15092 = $15091 + $15090;
             $15093 = $15058 * $15063;
             $15094 = $15093 + $15092;
             $15095 = $15058 * 0.044999999999999998;
             $15096 = $15095 + $15094;
             $15097 = $15061 * 0.044999999999999998;
             $15098 = $15097 + $15096;
             $15099 = $15065 * $15072;
             $15100 = $15099 + $15098;
             $15101 = $15065 * $15070;
             $15102 = $15101 + $15100;
             $15103 = $15069 * 0.29999999999999999;
             $15104 = $15102 - $15103;
             $15105 = (+__Z6IKsignd($15104));
             $15106 = (+__Z5IKabsd($15105));
             $15107 = $15106 < 9.9999999999999995E-7;
             if ($15107) {
              break;
             }
             HEAP8[$6>>0] = 1;
             $15995 = +HEAPF64[$605>>3];
             $15996 = $15995 * $15995;
             $15997 = +HEAPF64[$45>>3];
             $15998 = $15997 * $15997;
             $15999 = +HEAPF64[$75>>3];
             $16000 = $15999 * $15999;
             $16001 = +HEAPF64[$606>>3];
             $16002 = $15997 * $16001;
             $16003 = +HEAPF64[$76>>3];
             $16004 = $16003 * 0.29999999999999999;
             $16005 = $15999 * 0.044999999999999998;
             $16006 = +HEAPF64[$43>>3];
             $16007 = $15995 * $16006;
             $16008 = $15999 * $16003;
             $16009 = +HEAPF64[$47>>3];
             $16010 = $15999 * 0.01125;
             $16011 = 0.038249999999999999 - $16010;
             $16012 = $16007 * $16009;
             $16013 = $16011 - $16012;
             $16014 = $16000 * 0.027;
             $16015 = $16013 - $16014;
             $16016 = -$16002;
             $16017 = $16009 * $16016;
             $16018 = $16017 + $16015;
             $16019 = $16003 * 0.16702500000000001;
             $16020 = $16019 + $16018;
             $16021 = $16008 * 0.087974999999999997;
             $16022 = $16021 + $16020;
             $16023 = $16008 * 0.027;
             $16024 = -0.30452499999999999 - $16023;
             $16025 = $15998 + $16024;
             $16026 = $16003 * 0.049500000000000002;
             $16027 = $16025 - $16026;
             $16028 = $15996 * $15998;
             $16029 = $16027 - $16028;
             $16030 = $16002 * 2.0;
             $16031 = $16030 * $16007;
             $16032 = $16031 + $16029;
             $16033 = $16000 * 0.087974999999999997;
             $16034 = $16032 - $16033;
             $16035 = $16006 * $16006;
             $16036 = $15996 * $16035;
             $16037 = $16036 + $16034;
             $16038 = $15999 * 0.33000000000000002;
             $16039 = $16037 - $16038;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x2061,$16022,$16039,1.9999999999999999E-6);
             $16040 = HEAP8[$639>>0]|0;
             $16041 = ($16040<<24>>24)==(0);
             if ($16041) {
              break L43;
             }
             $16042 = +HEAPF64[$47>>3];
             $16043 = $16042 * 0.55000000000000004;
             $16044 = +HEAPF64[$75>>3];
             $16045 = $16044 * -0.29999999999999999;
             $16046 = $16042 * $16045;
             $16047 = $16046 - $16043;
             $16048 = $16002 * $16004;
             $16049 = $16048 + $16047;
             $16050 = $16042 * -0.044999999999999998;
             $16051 = +HEAPF64[$76>>3];
             $16052 = $16050 * $16051;
             $16053 = $16052 + $16049;
             $16054 = $16005 * $16007;
             $16055 = $16053 - $16054;
             $16056 = $16002 * 0.044999999999999998;
             $16057 = $16056 + $16055;
             $16058 = $16007 * 0.044999999999999998;
             $16059 = $16058 + $16057;
             $16060 = $16004 * $16007;
             $16061 = $16060 + $16059;
             $16062 = $16005 * $16016;
             $16063 = $16062 + $16061;
             $16064 = (+__Z6IKsignd($16063));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x2062,$16064,-1);
             $16065 = HEAP8[$640>>0]|0;
             $16066 = ($16065<<24>>24)==(0);
             if ($16066) {
              break L43;
             }
             $16067 = +HEAPF64[$x2061>>3];
             $16068 = $16067 + -1.5707963267949001;
             $16069 = +HEAPF64[$x2062>>3];
             $16070 = $16069 * 1.5707963267949001;
             $16071 = $16068 + $16070;
             $16072 = (+__Z5IKsind($16071));
             $16073 = (+__Z5IKcosd($16071));
             $16074 = $16071 > 3.14159265358979;
             do {
              if ($16074) {
               $16075 = $16071 + -6.2831853071795898;
               $16078 = $16075;
              } else {
               $16076 = $16071 < -3.14159265358979;
               if (!($16076)) {
                $16078 = $16071;
                break;
               }
               $16077 = $16071 + 6.2831853071795898;
               $16078 = $16077;
              }
             } while(0);
             HEAP8[$4>>0] = 0;
             HEAP8[$5>>0] = -1;
             HEAPF64[$3>>3] = $16078;
             HEAPF64[$641>>3] = $16073;
             HEAPF64[$642>>3] = $16072;
             $16079 = +HEAPF64[$3>>3];
             $16080 = (+__Z5IKsind($16079));
             $16081 = (+__Z5IKcosd($16079));
             $16082 = +HEAPF64[$76>>3];
             $16083 = $16082 * 0.044999999999999998;
             $16084 = +HEAPF64[$75>>3];
             $16085 = $16084 * 0.29999999999999999;
             $16086 = $16084 * 0.044999999999999998;
             $16087 = +HEAPF64[$605>>3];
             $16088 = +HEAPF64[$43>>3];
             $16089 = $16087 * $16088;
             $16090 = +HEAPF64[$45>>3];
             $16091 = +HEAPF64[$606>>3];
             $16092 = $16090 * $16091;
             $16093 = $16081 * $16082;
             $16094 = +HEAPF64[$47>>3];
             $16095 = $16080 * $16094;
             $16096 = $16081 * $16094;
             $16097 = $16081 * 0.089999999999999996;
             $16098 = $16080 * 1.1000000000000001;
             $16099 = $16096 + -0.55000000000000004;
             $16100 = $16099 - $16085;
             $16101 = $16100 - $16083;
             $16102 = $16080 * $16092;
             $16103 = $16102 + $16101;
             $16104 = $16080 * $16089;
             $16105 = $16104 + $16103;
             $16106 = $16080 * 0.099746893695352001;
             $16107 = +HEAPF64[$60>>3];
             $16108 = $16107 * -0.138057984353428;
             $16109 = $16080 * $16108;
             $16110 = $16106 + $16109;
             $16111 = $16107 * -0.92038656235618999;
             $16112 = $16081 * $16111;
             $16113 = $16112 + $16110;
             $16114 = $16094 + $16113;
             $16115 = $16093 * 0.025409572020248499;
             $16116 = $16115 + $16114;
             $16117 = $16082 * 0.31056143580303702;
             $16118 = $16080 * $16117;
             $16119 = $16118 + $16116;
             $16120 = $16081 * 0.185020708697653;
             $16121 = $16119 - $16120;
             $16122 = $16081 * $16086;
             $16123 = $16093 * 0.29999999999999999;
             $16124 = $16123 - $16122;
             $16125 = $16124 - $16089;
             $16126 = $16125 - $16092;
             $16127 = $16080 * 0.55000000000000004;
             $16128 = $16127 + $16126;
             $16129 = $16080 * $16083;
             $16130 = $16129 + $16128;
             $16131 = $16080 * $16085;
             $16132 = $16131 + $16130;
             $16133 = $16081 * 0.044999999999999998;
             $16134 = $16133 + $16132;
             $16135 = $16097 * $16092;
             $16136 = $16135 + -0.21249999999999999;
             $16137 = $16098 * $16092;
             $16138 = $16137 + $16136;
             $16139 = $16098 * $16089;
             $16140 = $16139 + $16138;
             $16141 = $16097 * $16089;
             $16142 = $16141 + $16140;
             $16143 = $16096 * 1.1000000000000001;
             $16144 = $16143 + $16142;
             $16145 = $16144 - $16107;
             $16146 = $16095 * 0.089999999999999996;
             $16147 = $16145 - $16146;
             $16148 = (+__Z5IKabsd($16105));
             $16149 = $16148 > 5.0000000000000004E-6;
             if ($16149) {
              break L43;
             }
             $16150 = $16095 + 0.044999999999999998;
             $16151 = $16150 - $16086;
             $16152 = $16081 * $16092;
             $16153 = $16151 - $16152;
             $16154 = $16082 * 0.29999999999999999;
             $16155 = $16154 + $16153;
             $16156 = $16081 * $16089;
             $16157 = $16155 - $16156;
             $16158 = (+__Z5IKabsd($16157));
             $16159 = $16158 > 5.0000000000000004E-6;
             if ($16159) {
              break L43;
             }
             $16160 = (+__Z5IKabsd($16121));
             $16161 = $16160 > 5.0000000000000004E-6;
             if ($16161) {
              break L43;
             }
             $16162 = (+__Z5IKabsd($16134));
             $16163 = $16162 > 5.0000000000000004E-6;
             if ($16163) {
              break L43;
             }
             $16164 = (+__Z5IKabsd($16147));
             $16165 = $16164 > 5.0000000000000004E-6;
             if ($16165) {
              break L43;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L43;
            }
           } while(0);
           HEAPF64[$24>>3] = 0.0;
           HEAPF64[$23>>3] = 1.0;
           HEAPF64[$22>>3] = 0.0;
           $15108 = +HEAPF64[$45>>3];
           $15109 = +HEAPF64[$606>>3];
           $15110 = $15108 * $15109;
           $15111 = +HEAPF64[$605>>3];
           $15112 = +HEAPF64[$43>>3];
           $15113 = $15111 * $15112;
           $15114 = +HEAPF64[$60>>3];
           $15115 = +HEAPF64[$47>>3];
           $15116 = $15114 * $15115;
           $15117 = $15114 * 0.92038656235618999;
           $15118 = +HEAPF64[$76>>3];
           $15119 = $15115 * $15118;
           $15120 = $15114 * 36.222041112016697;
           $15121 = $15118 * 0.025409572020248499;
           $15122 = $15119 * 12.2222222222222;
           $15123 = -$15113;
           $15124 = $15120 * $15123;
           $15125 = $15124 - $15122;
           $15126 = $15113 * $15118;
           $15127 = $15126 + $15125;
           $15128 = $15110 * $15118;
           $15129 = $15128 + $15127;
           $15130 = -$15110;
           $15131 = $15120 * $15130;
           $15132 = $15131 + $15129;
           $15133 = $15115 * 3.92556370551481;
           $15134 = $15132 - $15133;
           $15135 = $15116 * 5.4333061668024998;
           $15136 = $15135 + $15134;
           $15137 = $15113 * 7.2815358145431501;
           $15138 = $15136 - $15137;
           $15139 = $15110 * 7.2815358145431501;
           $15140 = $15138 - $15139;
           $15141 = (+__Z5IKabsd($15140));
           $15142 = $15141 < 9.9999999999999995E-7;
           do {
            if (!($15142)) {
             $15143 = $15110 * $15121;
             $15144 = $15115 * 0.099746893695352001;
             $15145 = $15143 - $15144;
             $15146 = $15117 * $15123;
             $15147 = $15146 + $15145;
             $15148 = $15119 * 0.31056143580303702;
             $15149 = $15147 - $15148;
             $15150 = $15117 * $15130;
             $15151 = $15150 + $15149;
             $15152 = $15110 * 0.185020708697653;
             $15153 = $15151 - $15152;
             $15154 = $15113 * 0.185020708697653;
             $15155 = $15153 - $15154;
             $15156 = $15116 * 0.138057984353428;
             $15157 = $15156 + $15155;
             $15158 = $15113 * $15121;
             $15159 = $15158 + $15157;
             $15160 = (+__Z6IKsignd($15159));
             $15161 = (+__Z5IKabsd($15160));
             $15162 = $15161 < 9.9999999999999995E-7;
             if ($15162) {
              break;
             }
             HEAP8[$6>>0] = 1;
             $15818 = +HEAPF64[$75>>3];
             $15819 = $15818 * $15818;
             $15820 = +HEAPF64[$76>>3];
             $15821 = $15818 * $15820;
             $15822 = +HEAPF64[$605>>3];
             $15823 = +HEAPF64[$43>>3];
             $15824 = $15822 * $15823;
             $15825 = +HEAPF64[$60>>3];
             $15826 = $15825 * 0.92038656235618999;
             $15827 = $15820 * 0.025409572020248499;
             $15828 = +HEAPF64[$45>>3];
             $15829 = +HEAPF64[$606>>3];
             $15830 = $15828 * $15829;
             $15831 = $15820 * $15825;
             $15832 = +HEAPF64[$47>>3];
             $15833 = $15818 * $15825;
             $15834 = $15831 * 0.041417395306028497;
             $15835 = -0.10061795904279799 - $15834;
             $15836 = $15833 * 0.27611596870685701;
             $15837 = $15835 - $15836;
             $15838 = $15819 * 0.00114343074091118;
             $15839 = $15837 - $15838;
             $15840 = $15832 * $15832;
             $15841 = $15840 + $15839;
             $15842 = $15825 * 0.50621260929590395;
             $15843 = $15841 - $15842;
             $15844 = $15820 * 0.00564933271974229;
             $15845 = $15844 + $15843;
             $15846 = $15818 * 0.055506212609295898;
             $15847 = $15845 - $15846;
             $15848 = $15821 * 0.0076228716060745497;
             $15849 = $15848 + $15847;
             $15850 = $15833 * 0.041417395306028497;
             $15851 = $15850 + -0.068836056143580293;
             $15852 = $15819 * 0.0139752646111367;
             $15853 = $15852 + $15851;
             $15854 = $15818 * 0.029924068108605598;
             $15855 = $15853 - $15854;
             $15856 = $15825 * 0.075931891394385595;
             $15857 = $15856 + $15855;
             $15858 = $15820 * 0.175297399907961;
             $15859 = $15857 - $15858;
             $15860 = $15821 * 0.093168430740911204;
             $15861 = $15859 - $15860;
             $15862 = -$15824;
             $15863 = $15832 * $15862;
             $15864 = $15863 + $15861;
             $15865 = $15831 * 0.0062126092959042803;
             $15866 = $15865 + $15864;
             $15867 = $15830 * $15832;
             $15868 = $15866 - $15867;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x2037,$15849,$15868,1.9999999999999999E-6);
             $15869 = HEAP8[$635>>0]|0;
             $15870 = ($15869<<24>>24)==(0);
             if ($15870) {
              break L43;
             }
             $15871 = +HEAPF64[$47>>3];
             $15872 = $15871 * 0.099746893695352001;
             $15873 = $15827 * $15824;
             $15874 = $15873 - $15872;
             $15875 = $15830 * 0.185020708697653;
             $15876 = $15874 - $15875;
             $15877 = $15824 * 0.185020708697653;
             $15878 = $15876 - $15877;
             $15879 = $15871 * -0.31056143580303702;
             $15880 = +HEAPF64[$76>>3];
             $15881 = $15879 * $15880;
             $15882 = $15881 + $15878;
             $15883 = $15827 * $15830;
             $15884 = $15883 + $15882;
             $15885 = $15826 * $15862;
             $15886 = $15885 + $15884;
             $15887 = +HEAPF64[$60>>3];
             $15888 = $15887 * 0.138057984353428;
             $15889 = $15871 * $15888;
             $15890 = $15889 + $15886;
             $15891 = $15826 * $15830;
             $15892 = $15890 - $15891;
             $15893 = (+__Z6IKsignd($15892));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x2038,$15893,-1);
             $15894 = HEAP8[$636>>0]|0;
             $15895 = ($15894<<24>>24)==(0);
             if ($15895) {
              break L43;
             }
             $15896 = +HEAPF64[$x2037>>3];
             $15897 = $15896 + -1.5707963267949001;
             $15898 = +HEAPF64[$x2038>>3];
             $15899 = $15898 * 1.5707963267949001;
             $15900 = $15897 + $15899;
             $15901 = (+__Z5IKsind($15900));
             $15902 = (+__Z5IKcosd($15900));
             $15903 = $15900 > 3.14159265358979;
             do {
              if ($15903) {
               $15904 = $15900 + -6.2831853071795898;
               $15907 = $15904;
              } else {
               $15905 = $15900 < -3.14159265358979;
               if (!($15905)) {
                $15907 = $15900;
                break;
               }
               $15906 = $15900 + 6.2831853071795898;
               $15907 = $15906;
              }
             } while(0);
             HEAP8[$4>>0] = 0;
             HEAP8[$5>>0] = -1;
             HEAPF64[$3>>3] = $15907;
             HEAPF64[$637>>3] = $15902;
             HEAPF64[$638>>3] = $15901;
             $15908 = +HEAPF64[$3>>3];
             $15909 = (+__Z5IKsind($15908));
             $15910 = (+__Z5IKcosd($15908));
             $15911 = +HEAPF64[$76>>3];
             $15912 = $15911 * 0.044999999999999998;
             $15913 = +HEAPF64[$75>>3];
             $15914 = $15913 * 0.29999999999999999;
             $15915 = $15913 * 0.044999999999999998;
             $15916 = +HEAPF64[$605>>3];
             $15917 = +HEAPF64[$43>>3];
             $15918 = $15916 * $15917;
             $15919 = +HEAPF64[$45>>3];
             $15920 = +HEAPF64[$606>>3];
             $15921 = $15919 * $15920;
             $15922 = $15910 * $15911;
             $15923 = +HEAPF64[$47>>3];
             $15924 = $15909 * $15923;
             $15925 = $15910 * $15923;
             $15926 = $15910 * 0.089999999999999996;
             $15927 = $15909 * 1.1000000000000001;
             $15928 = -0.55000000000000004 - $15912;
             $15929 = $15928 - $15914;
             $15930 = $15929 + $15925;
             $15931 = $15909 * $15918;
             $15932 = $15931 + $15930;
             $15933 = $15909 * $15921;
             $15934 = $15933 + $15932;
             $15935 = +HEAPF64[$60>>3];
             $15936 = $15935 * -0.92038656235618999;
             $15937 = $15910 * $15936;
             $15938 = $15923 + $15937;
             $15939 = $15911 * 0.31056143580303702;
             $15940 = $15909 * $15939;
             $15941 = $15940 + $15938;
             $15942 = $15910 * 0.185020708697653;
             $15943 = $15941 - $15942;
             $15944 = $15922 * 0.025409572020248499;
             $15945 = $15944 + $15943;
             $15946 = $15935 * -0.138057984353428;
             $15947 = $15909 * $15946;
             $15948 = $15947 + $15945;
             $15949 = $15909 * 0.099746893695352001;
             $15950 = $15949 + $15948;
             $15951 = $15910 * 0.044999999999999998;
             $15952 = $15909 * 0.55000000000000004;
             $15953 = $15952 + $15951;
             $15954 = $15922 * 0.29999999999999999;
             $15955 = $15953 + $15954;
             $15956 = $15909 * $15912;
             $15957 = $15956 + $15955;
             $15958 = $15909 * $15914;
             $15959 = $15958 + $15957;
             $15960 = $15959 - $15918;
             $15961 = $15960 - $15921;
             $15962 = $15910 * $15915;
             $15963 = $15961 - $15962;
             $15964 = $15925 * 1.1000000000000001;
             $15965 = $15964 + -0.21249999999999999;
             $15966 = $15926 * $15918;
             $15967 = $15966 + $15965;
             $15968 = $15927 * $15918;
             $15969 = $15968 + $15967;
             $15970 = $15969 - $15935;
             $15971 = $15926 * $15921;
             $15972 = $15971 + $15970;
             $15973 = $15927 * $15921;
             $15974 = $15973 + $15972;
             $15975 = $15924 * 0.089999999999999996;
             $15976 = $15974 - $15975;
             $15977 = (+__Z5IKabsd($15934));
             $15978 = $15977 > 5.0000000000000004E-6;
             if ($15978) {
              break L43;
             }
             $15979 = 0.044999999999999998 - $15915;
             $15980 = $15979 + $15924;
             $15981 = $15910 * $15921;
             $15982 = $15980 - $15981;
             $15983 = $15910 * $15918;
             $15984 = $15982 - $15983;
             $15985 = $15911 * 0.29999999999999999;
             $15986 = $15985 + $15984;
             $15987 = (+__Z5IKabsd($15986));
             $15988 = $15987 > 5.0000000000000004E-6;
             if ($15988) {
              break L43;
             }
             $15989 = (+__Z5IKabsd($15950));
             $15990 = $15989 > 5.0000000000000004E-6;
             if ($15990) {
              break L43;
             }
             $15991 = (+__Z5IKabsd($15963));
             $15992 = $15991 > 5.0000000000000004E-6;
             if ($15992) {
              break L43;
             }
             $15993 = (+__Z5IKabsd($15976));
             $15994 = $15993 > 5.0000000000000004E-6;
             if ($15994) {
              break L43;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L43;
            }
           } while(0);
           $15163 = +HEAPF64[$47>>3];
           $15164 = (+__Z5IKabsd($15163));
           $15165 = +HEAPF64[$7>>3];
           $15166 = $15165 + 3.14159265358979;
           $15167 = (+__Z6IKfmoddd($15166,6.2831853071795898));
           $15168 = $15167 + -3.14159265358979;
           $15169 = (+__Z5IKabsd($15168));
           $15170 = $15164 + $15169;
           $15171 = (+__Z5IKabsd($15170));
           $15172 = $15171 < 9.9999999999999995E-7;
           if (!($15172)) {
            break L43;
           }
           $15173 = +HEAPF64[$60>>3];
           $15174 = 0.72250000000000003 - $15173;
           $15175 = (+__Z5IKabsd($15174));
           $15176 = $15175 < 9.9999999999999995E-7;
           if (!($15176)) {
            break L43;
           }
           $15177 = +HEAPF64[$45>>3];
           $15178 = -$15177;
           HEAPF64[$24>>3] = 0.0;
           HEAPF64[$23>>3] = 1.0;
           HEAPF64[$22>>3] = 0.0;
           HEAPF64[$47>>3] = 0.0;
           HEAPF64[$7>>3] = 0.0;
           HEAPF64[$76>>3] = 0.0;
           HEAPF64[$75>>3] = 1.0;
           $15179 = +HEAPF64[$43>>3];
           $15180 = $15179 * $15179;
           $15181 = +HEAPF64[$45>>3];
           $15182 = $15181 * $15181;
           $15183 = $15180 + $15182;
           HEAPF64[$60>>3] = $15183;
           $15184 = +HEAPF64[$43>>3];
           $15185 = +HEAPF64[$26>>3];
           $15186 = $15184 * $15185;
           $15187 = +HEAPF64[$45>>3];
           $15188 = +HEAPF64[$32>>3];
           $15189 = $15187 * $15188;
           $15190 = $15186 + $15189;
           HEAPF64[$61>>3] = $15190;
           $15191 = +HEAPF64[$43>>3];
           $15192 = +HEAPF64[$28>>3];
           $15193 = $15191 * $15192;
           $15194 = +HEAPF64[$45>>3];
           $15195 = +HEAPF64[$34>>3];
           $15196 = $15194 * $15195;
           $15197 = $15193 + $15196;
           HEAPF64[$62>>3] = $15197;
           $15198 = +HEAPF64[$43>>3];
           $15199 = +HEAPF64[$30>>3];
           $15200 = $15198 * $15199;
           $15201 = +HEAPF64[$45>>3];
           $15202 = +HEAPF64[$36>>3];
           $15203 = $15201 * $15202;
           $15204 = $15200 + $15203;
           HEAPF64[$63>>3] = $15204;
           $15205 = +HEAPF64[$38>>3];
           $15206 = $15205 * $15178;
           HEAPF64[$64>>3] = $15206;
           $15207 = +HEAPF64[$43>>3];
           $15208 = +HEAPF64[$38>>3];
           $15209 = $15207 * $15208;
           HEAPF64[$65>>3] = $15209;
           $15210 = +HEAPF64[$40>>3];
           $15211 = $15210 * $15178;
           HEAPF64[$67>>3] = $15211;
           $15212 = +HEAPF64[$43>>3];
           $15213 = +HEAPF64[$40>>3];
           $15214 = $15212 * $15213;
           HEAPF64[$68>>3] = $15214;
           $15215 = +HEAPF64[$42>>3];
           $15216 = $15215 * $15178;
           HEAPF64[$70>>3] = $15216;
           $15217 = +HEAPF64[$43>>3];
           $15218 = +HEAPF64[$42>>3];
           $15219 = $15217 * $15218;
           HEAPF64[$71>>3] = $15219;
           $15220 = +HEAPF64[$605>>3];
           $15221 = +HEAPF64[$43>>3];
           $15222 = $15220 * $15221;
           $15223 = +HEAPF64[$45>>3];
           $15224 = +HEAPF64[$606>>3];
           $15225 = $15223 * $15224;
           $15226 = $15222 + $15225;
           $15227 = (+__Z5IKabsd($15226));
           $15228 = $15227 < 9.9999999999999995E-7;
           if (!($15228)) {
            HEAP8[$6>>0] = 1;
            $15716 = +HEAPF64[$45>>3];
            $15717 = $15716 * $15716;
            $15718 = +HEAPF64[$605>>3];
            $15719 = $15718 * $15718;
            $15720 = +HEAPF64[$43>>3];
            $15721 = $15718 * $15720;
            $15722 = +HEAPF64[$606>>3];
            $15723 = $15716 * $15722;
            $15724 = $15717 * 4400.0;
            $15725 = $15723 * 306.0;
            $15726 = $15721 * 306.0;
            $15727 = $15726 + $15725;
            __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x2020,$15727,-1);
            $15728 = HEAP8[$632>>0]|0;
            $15729 = ($15728<<24>>24)==(0);
            if ($15729) {
             break L43;
            }
            $15730 = $15721 * 1.1764705882352899;
            $15731 = $15723 * 1.1764705882352899;
            $15732 = $15730 + $15731;
            $15733 = (+__Z5IKabsd($15732));
            $15734 = $15733 < 1.9999999999999999E-6;
            do {
             if ($15734) {
              $15735 = +HEAPF64[$x2020>>3];
              $15736 = 3179.0 - $15724;
              $15737 = $15719 * $15724;
              $15738 = $15736 + $15737;
              $15739 = $15721 * -8800.0;
              $15740 = $15739 * $15723;
              $15741 = $15738 + $15740;
              $15742 = $15719 * -4400.0;
              $15743 = +HEAPF64[$43>>3];
              $15744 = $15743 * $15743;
              $15745 = $15742 * $15744;
              $15746 = $15741 + $15745;
              $15747 = $15735 * $15746;
              $15748 = (+__Z5IKabsd($15747));
              $15749 = $15748 < 1.9999999999999999E-6;
              if (!($15749)) {
               break;
              }
              $15750 = (+__Z5IKsqrd($15732));
              $15751 = (+__Z5IKsqrd($15747));
              $15752 = $15750 + $15751;
              $15753 = $15752 + -1.0;
              $15754 = (+__Z5IKabsd($15753));
              $15755 = !($15754 <= 1.9999999999999999E-6);
              if (!($15755)) {
               break L43;
              }
             }
            } while(0);
            $15756 = +HEAPF64[$x2020>>3];
            $15757 = 3179.0 - $15724;
            $15758 = $15719 * $15724;
            $15759 = $15757 + $15758;
            $15760 = $15721 * -8800.0;
            $15761 = $15760 * $15723;
            $15762 = $15759 + $15761;
            $15763 = $15719 * -4400.0;
            $15764 = +HEAPF64[$43>>3];
            $15765 = $15764 * $15764;
            $15766 = $15763 * $15765;
            $15767 = $15762 + $15766;
            $15768 = $15756 * $15767;
            $15769 = (+__Z7IKatan2dd($15732,$15768));
            $15770 = (+__Z5IKsind($15769));
            $15771 = (+__Z5IKcosd($15769));
            $15772 = $15769 > 3.14159265358979;
            do {
             if ($15772) {
              $15773 = $15769 + -6.2831853071795898;
              $15776 = $15773;
             } else {
              $15774 = $15769 < -3.14159265358979;
              if (!($15774)) {
               $15776 = $15769;
               break;
              }
              $15775 = $15769 + 6.2831853071795898;
              $15776 = $15775;
             }
            } while(0);
            HEAP8[$4>>0] = 0;
            HEAP8[$5>>0] = -1;
            HEAPF64[$3>>3] = $15776;
            HEAPF64[$633>>3] = $15771;
            HEAPF64[$634>>3] = $15770;
            $15777 = +HEAPF64[$3>>3];
            $15778 = (+__Z5IKsind($15777));
            $15779 = (+__Z5IKcosd($15777));
            $15780 = +HEAPF64[$45>>3];
            $15781 = +HEAPF64[$606>>3];
            $15782 = $15780 * $15781;
            $15783 = +HEAPF64[$605>>3];
            $15784 = +HEAPF64[$43>>3];
            $15785 = $15783 * $15784;
            $15786 = $15779 * 0.089999999999999996;
            $15787 = $15778 * 1.1000000000000001;
            $15788 = $15779 * -0.84999999999999998;
            $15789 = $15778 * 0.84999999999999998;
            $15790 = $15789 - $15782;
            $15791 = $15790 - $15785;
            $15792 = $15779 * $15782;
            $15793 = $15779 * $15785;
            $15794 = -$15793;
            $15795 = $15794 - $15792;
            $15796 = $15786 * $15785;
            $15797 = $15796 + -0.93500000000000005;
            $15798 = $15787 * $15785;
            $15799 = $15798 + $15797;
            $15800 = $15786 * $15782;
            $15801 = $15800 + $15799;
            $15802 = $15787 * $15782;
            $15803 = $15802 + $15801;
            $15804 = (+__Z5IKabsd($15788));
            $15805 = $15804 > 5.0000000000000004E-6;
            if ($15805) {
             break L43;
            }
            $15806 = $15778 * $15785;
            $15807 = $15806 + -0.84999999999999998;
            $15808 = $15778 * $15782;
            $15809 = $15808 + $15807;
            $15810 = (+__Z5IKabsd($15809));
            $15811 = $15810 > 5.0000000000000004E-6;
            if ($15811) {
             break L43;
            }
            $15812 = (+__Z5IKabsd($15791));
            $15813 = $15812 > 5.0000000000000004E-6;
            if ($15813) {
             break L43;
            }
            $15814 = (+__Z5IKabsd($15795));
            $15815 = $15814 > 5.0000000000000004E-6;
            if ($15815) {
             break L43;
            }
            $15816 = (+__Z5IKabsd($15803));
            $15817 = $15816 > 5.0000000000000004E-6;
            if ($15817) {
             break L43;
            }
            __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
            break L43;
           }
           $15229 = (+__Z5IKabsd($15221));
           $15230 = (+__Z5IKabsd($15223));
           $15231 = $15229 + $15230;
           $15232 = (+__Z5IKabsd($15231));
           $15233 = $15232 < 9.9999999999999995E-7;
           do {
            if ($15233) {
             $15234 = (+__Z5IKabsd(0.72250000000000003));
             $15235 = $15234 < 9.9999999999999995E-7;
             if (!($15235)) {
              break;
             }
             $15236 = (+__Z5IKabsd(-0.84999999999999998));
             $15237 = $15236 < 9.9999999999999995E-7;
             if (!($15237)) {
              break;
             }
             $15238 = (+__Z5IKabsd(0.0));
             $15239 = $15238 < 9.9999999999999995E-7;
             if (!($15239)) {
              break;
             }
             $15240 = (+__Z5IKabsd(-0.93500000000000005));
             $15241 = $15240 < 9.9999999999999995E-7;
             if (!($15241)) {
              break;
             }
             HEAPF64[$24>>3] = 0.0;
             HEAPF64[$23>>3] = 1.0;
             HEAPF64[$22>>3] = 0.0;
             HEAPF64[$47>>3] = 0.0;
             HEAPF64[$7>>3] = 0.0;
             HEAPF64[$76>>3] = 0.0;
             HEAPF64[$75>>3] = 1.0;
             HEAPF64[$64>>3] = 0.0;
             HEAPF64[$65>>3] = 0.0;
             HEAPF64[$67>>3] = 0.0;
             HEAPF64[$68>>3] = 0.0;
             HEAPF64[$70>>3] = 0.0;
             HEAPF64[$71>>3] = 0.0;
             HEAPF64[$66>>3] = 0.0;
             HEAPF64[$69>>3] = 0.0;
             HEAPF64[$72>>3] = 0.0;
             $15242 = (+__Z5IKabsd(1.0));
             $15243 = $15242 < 1.0E-8;
             ;HEAP32[$43>>2]=0|0;HEAP32[$43+4>>2]=0|0;HEAP32[$43+8>>2]=0|0;HEAP32[$43+12>>2]=0|0;
             ;HEAP32[$45>>2]=0|0;HEAP32[$45+4>>2]=0|0;HEAP32[$45+8>>2]=0|0;HEAP32[$45+12>>2]=0|0;
             ;HEAP32[$63>>2]=0|0;HEAP32[$63+4>>2]=0|0;HEAP32[$63+8>>2]=0|0;HEAP32[$63+12>>2]=0|0;
             if ($15243) {
              break L43;
             }
             HEAPF64[$op1015>>3] = 1.0;
             HEAPF64[$607>>3] = 0.0;
             HEAPF64[$608>>3] = -1.0;
             __ZN8IKSolver10polyroots2EPdS0_Ri($op1015,$zeror1016,$numroots1017);
             $15244 = HEAP32[$numroots1017>>2]|0;
             $15245 = ($15244|0)>(0);
             if (!($15245)) {
              HEAP16[$j1valid1026>>1] = 257;
              HEAP8[$6>>0] = 2;
              break L43;
             }
             $15246 = HEAP32[$numroots1017>>2]|0;
             $15247 = ($15246|0)>(1);
             $numsolutions1022$01280 = 0;
             while(1) {
              $15248 = (($zeror1016) + ($numsolutions1022$01280<<3)|0);
              $15249 = +HEAPF64[$15248>>3];
              $15250 = (+Math_atan((+$15249)));
              $15251 = $15250 * 2.0;
              $15252 = $15251 + 6.2831853071795898;
              $15253 = $15251 > 3.14159265358979;
              $15254 = (($j1array1018) + ($numsolutions1022$01280<<3)|0);
              HEAPF64[$15254>>3] = $15251;
              do {
               if ($15253) {
                $15255 = $15251 + -6.2831853071795898;
                HEAPF64[$15254>>3] = $15255;
               } else {
                $15256 = $15251 < -3.14159265358979;
                if (!($15256)) {
                 break;
                }
                HEAPF64[$15254>>3] = $15252;
               }
              } while(0);
              $15257 = +HEAPF64[$15254>>3];
              $15258 = (+__Z5IKsind($15257));
              $15259 = (($sj1array1020) + ($numsolutions1022$01280<<3)|0);
              HEAPF64[$15259>>3] = $15258;
              $15260 = +HEAPF64[$15254>>3];
              $15261 = (+__Z5IKcosd($15260));
              $15262 = (($cj1array1019) + ($numsolutions1022$01280<<3)|0);
              HEAPF64[$15262>>3] = $15261;
              $15263 = (($numsolutions1022$01280) + 1)|0;
              $15264 = ($15263|0)<($15246|0);
              if ($15264) {
               $numsolutions1022$01280 = $15263;
              } else {
               break;
              }
             }
             $$2481 = $15247 ? $15246 : 1;
             HEAP16[$j1valid1026>>1] = 257;
             HEAP8[$6>>0] = 2;
             $ij11027$01289 = 0;
             while(1) {
              $15265 = (($j1valid1026) + ($ij11027$01289)|0);
              $15266 = HEAP8[$15265>>0]|0;
              $15267 = ($15266<<24>>24)==(0);
              if (!($15267)) {
               $15268 = (($j1array1018) + ($ij11027$01289<<3)|0);
               $15269 = +HEAPF64[$15268>>3];
               HEAPF64[$3>>3] = $15269;
               $15270 = (($cj1array1019) + ($ij11027$01289<<3)|0);
               $15271 = +HEAPF64[$15270>>3];
               HEAPF64[$609>>3] = $15271;
               $15272 = (($sj1array1020) + ($ij11027$01289<<3)|0);
               $15273 = +HEAPF64[$15272>>3];
               HEAPF64[$610>>3] = $15273;
               $15274 = +HEAPF64[$3>>3];
               $15275 = $15274 * 0.5;
               $15276 = (+__Z5IKtand($15275));
               HEAPF64[$611>>3] = $15276;
               $15277 = $ij11027$01289&255;
               HEAP8[$4>>0] = $15277;
               HEAP8[$5>>0] = -1;
               $iij11028$01285 = (($ij11027$01289) + 1)|0;
               $15278 = ($iij11028$01285|0)<($$2481|0);
               L196: do {
                if ($15278) {
                 $iij11028$01286 = $iij11028$01285;
                 L197: while(1) {
                  $15279 = (($j1valid1026) + ($iij11028$01286)|0);
                  $15280 = HEAP8[$15279>>0]|0;
                  $15281 = ($15280<<24>>24)==(0);
                  do {
                   if (!($15281)) {
                    $15283 = +HEAPF64[$15270>>3];
                    $15284 = (($cj1array1019) + ($iij11028$01286<<3)|0);
                    $15285 = +HEAPF64[$15284>>3];
                    $15286 = $15283 - $15285;
                    $15287 = (+__Z5IKabsd($15286));
                    $15288 = $15287 < 9.9999999999999995E-7;
                    if (!($15288)) {
                     break;
                    }
                    $15289 = +HEAPF64[$15272>>3];
                    $15290 = (($sj1array1020) + ($iij11028$01286<<3)|0);
                    $15291 = +HEAPF64[$15290>>3];
                    $15292 = $15289 - $15291;
                    $15293 = (+__Z5IKabsd($15292));
                    $15294 = $15293 < 9.9999999999999995E-7;
                    if ($15294) {
                     $$lcssa2758 = $15279;$iij11028$01286$lcssa = $iij11028$01286;
                     break L197;
                    }
                   }
                  } while(0);
                  $iij11028$0 = (($iij11028$01286) + 1)|0;
                  $15282 = ($iij11028$0|0)<($$2481|0);
                  if ($15282) {
                   $iij11028$01286 = $iij11028$0;
                  } else {
                   break L196;
                  }
                 }
                 HEAP8[$$lcssa2758>>0] = 0;
                 $15295 = $iij11028$01286$lcssa&255;
                 HEAP8[$5>>0] = $15295;
                }
               } while(0);
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
              }
              $15296 = (($ij11027$01289) + 1)|0;
              $exitcond2194 = ($15296|0)==($$2481|0);
              if ($exitcond2194) {
               break L43;
              } else {
               $ij11027$01289 = $15296;
              }
             }
            }
           } while(0);
           $15297 = +HEAPF64[$this>>3];
           $15298 = $15297 + 3.14159265358979;
           $15299 = (+__Z6IKfmoddd($15298,6.2831853071795898));
           $15300 = $15299 + -3.14159265358979;
           $15301 = (+__Z5IKabsd($15300));
           $15302 = +HEAPF64[$43>>3];
           $15303 = (+__Z5IKabsd($15302));
           $15304 = $15301 + $15303;
           $15305 = +HEAPF64[$45>>3];
           $15306 = -$15305;
           $15307 = (+__Z5IKabsd($15304));
           $15308 = $15307 < 9.9999999999999995E-7;
           do {
            if ($15308) {
             $15309 = $15305 * $15305;
             $15310 = 0.72250000000000003 - $15309;
             $15311 = (+__Z5IKabsd($15310));
             $15312 = $15311 < 9.9999999999999995E-7;
             if (!($15312)) {
              break;
             }
             $15313 = (+__Z5IKabsd(-0.84999999999999998));
             $15314 = $15313 < 9.9999999999999995E-7;
             if (!($15314)) {
              break;
             }
             $15315 = (+__Z5IKabsd($15306));
             $15316 = $15315 < 9.9999999999999995E-7;
             if (!($15316)) {
              break;
             }
             $15317 = (+__Z5IKabsd(0.0));
             $15318 = $15317 < 9.9999999999999995E-7;
             if (!($15318)) {
              break;
             }
             $15319 = (+__Z5IKabsd(-0.93500000000000005));
             $15320 = $15319 < 9.9999999999999995E-7;
             if (!($15320)) {
              break;
             }
             HEAPF64[$24>>3] = 0.0;
             HEAPF64[$23>>3] = 1.0;
             HEAPF64[$22>>3] = 0.0;
             HEAPF64[$47>>3] = 0.0;
             HEAPF64[$7>>3] = 0.0;
             HEAPF64[$76>>3] = 0.0;
             HEAPF64[$75>>3] = 1.0;
             $15321 = +HEAPF64[$45>>3];
             $15322 = $15321 * $15321;
             HEAPF64[$60>>3] = $15322;
             $15323 = +HEAPF64[$45>>3];
             $15324 = +HEAPF64[$32>>3];
             $15325 = $15323 * $15324;
             HEAPF64[$61>>3] = $15325;
             $15326 = +HEAPF64[$45>>3];
             $15327 = +HEAPF64[$34>>3];
             $15328 = $15326 * $15327;
             HEAPF64[$62>>3] = $15328;
             $15329 = +HEAPF64[$45>>3];
             $15330 = +HEAPF64[$36>>3];
             $15331 = $15329 * $15330;
             HEAPF64[$63>>3] = $15331;
             $15332 = +HEAPF64[$38>>3];
             $15333 = $15332 * $15306;
             HEAPF64[$64>>3] = $15333;
             HEAPF64[$65>>3] = 0.0;
             $15334 = +HEAPF64[$40>>3];
             $15335 = $15334 * $15306;
             HEAPF64[$67>>3] = $15335;
             HEAPF64[$68>>3] = 0.0;
             $15336 = +HEAPF64[$42>>3];
             $15337 = $15336 * $15306;
             HEAPF64[$70>>3] = $15337;
             HEAPF64[$71>>3] = 0.0;
             HEAPF64[$43>>3] = 0.0;
             HEAPF64[$this>>3] = 0.0;
             HEAPF64[$606>>3] = 0.0;
             HEAPF64[$605>>3] = 1.0;
             $15338 = +HEAPF64[$45>>3];
             $15339 = +HEAPF64[$26>>3];
             $15340 = $15338 * $15339;
             HEAPF64[$66>>3] = $15340;
             $15341 = +HEAPF64[$45>>3];
             $15342 = +HEAPF64[$28>>3];
             $15343 = $15341 * $15342;
             HEAPF64[$69>>3] = $15343;
             $15344 = +HEAPF64[$45>>3];
             $15345 = +HEAPF64[$30>>3];
             $15346 = $15344 * $15345;
             HEAPF64[$72>>3] = $15346;
             $15347 = (+__Z5IKabsd(1.0));
             $15348 = $15347 < 1.0E-8;
             if ($15348) {
              break L43;
             }
             HEAPF64[$op1031>>3] = 1.0;
             HEAPF64[$612>>3] = 0.0;
             HEAPF64[$613>>3] = -1.0;
             __ZN8IKSolver10polyroots2EPdS0_Ri($op1031,$zeror1032,$numroots1033);
             $15349 = HEAP32[$numroots1033>>2]|0;
             $15350 = ($15349|0)>(0);
             if (!($15350)) {
              HEAP16[$j1valid1042>>1] = 257;
              HEAP8[$6>>0] = 2;
              break L43;
             }
             $15351 = HEAP32[$numroots1033>>2]|0;
             $15352 = ($15351|0)>(1);
             $numsolutions1038$01265 = 0;
             while(1) {
              $15353 = (($zeror1032) + ($numsolutions1038$01265<<3)|0);
              $15354 = +HEAPF64[$15353>>3];
              $15355 = (+Math_atan((+$15354)));
              $15356 = $15355 * 2.0;
              $15357 = $15356 + 6.2831853071795898;
              $15358 = $15356 > 3.14159265358979;
              $15359 = (($j1array1034) + ($numsolutions1038$01265<<3)|0);
              HEAPF64[$15359>>3] = $15356;
              do {
               if ($15358) {
                $15360 = $15356 + -6.2831853071795898;
                HEAPF64[$15359>>3] = $15360;
               } else {
                $15361 = $15356 < -3.14159265358979;
                if (!($15361)) {
                 break;
                }
                HEAPF64[$15359>>3] = $15357;
               }
              } while(0);
              $15362 = +HEAPF64[$15359>>3];
              $15363 = (+__Z5IKsind($15362));
              $15364 = (($sj1array1036) + ($numsolutions1038$01265<<3)|0);
              HEAPF64[$15364>>3] = $15363;
              $15365 = +HEAPF64[$15359>>3];
              $15366 = (+__Z5IKcosd($15365));
              $15367 = (($cj1array1035) + ($numsolutions1038$01265<<3)|0);
              HEAPF64[$15367>>3] = $15366;
              $15368 = (($numsolutions1038$01265) + 1)|0;
              $15369 = ($15368|0)<($15351|0);
              if ($15369) {
               $numsolutions1038$01265 = $15368;
              } else {
               break;
              }
             }
             $$2482 = $15352 ? $15351 : 1;
             HEAP16[$j1valid1042>>1] = 257;
             HEAP8[$6>>0] = 2;
             $ij11043$01274 = 0;
             while(1) {
              $15370 = (($j1valid1042) + ($ij11043$01274)|0);
              $15371 = HEAP8[$15370>>0]|0;
              $15372 = ($15371<<24>>24)==(0);
              if (!($15372)) {
               $15373 = (($j1array1034) + ($ij11043$01274<<3)|0);
               $15374 = +HEAPF64[$15373>>3];
               HEAPF64[$3>>3] = $15374;
               $15375 = (($cj1array1035) + ($ij11043$01274<<3)|0);
               $15376 = +HEAPF64[$15375>>3];
               HEAPF64[$614>>3] = $15376;
               $15377 = (($sj1array1036) + ($ij11043$01274<<3)|0);
               $15378 = +HEAPF64[$15377>>3];
               HEAPF64[$615>>3] = $15378;
               $15379 = +HEAPF64[$3>>3];
               $15380 = $15379 * 0.5;
               $15381 = (+__Z5IKtand($15380));
               HEAPF64[$616>>3] = $15381;
               $15382 = $ij11043$01274&255;
               HEAP8[$4>>0] = $15382;
               HEAP8[$5>>0] = -1;
               $iij11044$01270 = (($ij11043$01274) + 1)|0;
               $15383 = ($iij11044$01270|0)<($$2482|0);
               L230: do {
                if ($15383) {
                 $iij11044$01271 = $iij11044$01270;
                 L231: while(1) {
                  $15384 = (($j1valid1042) + ($iij11044$01271)|0);
                  $15385 = HEAP8[$15384>>0]|0;
                  $15386 = ($15385<<24>>24)==(0);
                  do {
                   if (!($15386)) {
                    $15388 = +HEAPF64[$15375>>3];
                    $15389 = (($cj1array1035) + ($iij11044$01271<<3)|0);
                    $15390 = +HEAPF64[$15389>>3];
                    $15391 = $15388 - $15390;
                    $15392 = (+__Z5IKabsd($15391));
                    $15393 = $15392 < 9.9999999999999995E-7;
                    if (!($15393)) {
                     break;
                    }
                    $15394 = +HEAPF64[$15377>>3];
                    $15395 = (($sj1array1036) + ($iij11044$01271<<3)|0);
                    $15396 = +HEAPF64[$15395>>3];
                    $15397 = $15394 - $15396;
                    $15398 = (+__Z5IKabsd($15397));
                    $15399 = $15398 < 9.9999999999999995E-7;
                    if ($15399) {
                     $$lcssa2755 = $15384;$iij11044$01271$lcssa = $iij11044$01271;
                     break L231;
                    }
                   }
                  } while(0);
                  $iij11044$0 = (($iij11044$01271) + 1)|0;
                  $15387 = ($iij11044$0|0)<($$2482|0);
                  if ($15387) {
                   $iij11044$01271 = $iij11044$0;
                  } else {
                   break L230;
                  }
                 }
                 HEAP8[$$lcssa2755>>0] = 0;
                 $15400 = $iij11044$01271$lcssa&255;
                 HEAP8[$5>>0] = $15400;
                }
               } while(0);
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
              }
              $15401 = (($ij11043$01274) + 1)|0;
              $exitcond2192 = ($15401|0)==($$2482|0);
              if ($exitcond2192) {
               break L43;
              } else {
               $ij11043$01274 = $15401;
              }
             }
            }
           } while(0);
           $15402 = +HEAPF64[$43>>3];
           $15403 = (+__Z5IKabsd($15402));
           $15404 = +HEAPF64[$this>>3];
           $15405 = (+__Z6IKfmoddd($15404,6.2831853071795898));
           $15406 = $15405 + -3.14159265358979;
           $15407 = (+__Z5IKabsd($15406));
           $15408 = $15403 + $15407;
           $15409 = +HEAPF64[$45>>3];
           $15410 = (+__Z5IKabsd($15408));
           $15411 = $15410 < 9.9999999999999995E-7;
           do {
            if ($15411) {
             $15412 = $15409 * $15409;
             $15413 = 0.72250000000000003 - $15412;
             $15414 = (+__Z5IKabsd($15413));
             $15415 = $15414 < 9.9999999999999995E-7;
             if (!($15415)) {
              break;
             }
             $15416 = (+__Z5IKabsd(-0.84999999999999998));
             $15417 = $15416 < 9.9999999999999995E-7;
             if (!($15417)) {
              break;
             }
             $15418 = (+__Z5IKabsd($15409));
             $15419 = $15418 < 9.9999999999999995E-7;
             if (!($15419)) {
              break;
             }
             $15420 = (+__Z5IKabsd(0.0));
             $15421 = $15420 < 9.9999999999999995E-7;
             if (!($15421)) {
              break;
             }
             $15422 = (+__Z5IKabsd(-0.93500000000000005));
             $15423 = $15422 < 9.9999999999999995E-7;
             if (!($15423)) {
              break;
             }
             $15424 = -$15409;
             HEAPF64[$24>>3] = 0.0;
             HEAPF64[$23>>3] = 1.0;
             HEAPF64[$22>>3] = 0.0;
             HEAPF64[$47>>3] = 0.0;
             HEAPF64[$7>>3] = 0.0;
             HEAPF64[$76>>3] = 0.0;
             HEAPF64[$75>>3] = 1.0;
             $15425 = +HEAPF64[$45>>3];
             $15426 = $15425 * $15425;
             HEAPF64[$60>>3] = $15426;
             $15427 = +HEAPF64[$45>>3];
             $15428 = +HEAPF64[$32>>3];
             $15429 = $15427 * $15428;
             HEAPF64[$61>>3] = $15429;
             $15430 = +HEAPF64[$45>>3];
             $15431 = +HEAPF64[$34>>3];
             $15432 = $15430 * $15431;
             HEAPF64[$62>>3] = $15432;
             $15433 = +HEAPF64[$45>>3];
             $15434 = +HEAPF64[$36>>3];
             $15435 = $15433 * $15434;
             HEAPF64[$63>>3] = $15435;
             $15436 = +HEAPF64[$38>>3];
             $15437 = $15436 * $15424;
             HEAPF64[$64>>3] = $15437;
             HEAPF64[$65>>3] = 0.0;
             $15438 = +HEAPF64[$40>>3];
             $15439 = $15438 * $15424;
             HEAPF64[$67>>3] = $15439;
             HEAPF64[$68>>3] = 0.0;
             $15440 = +HEAPF64[$42>>3];
             $15441 = $15440 * $15424;
             HEAPF64[$70>>3] = $15441;
             HEAPF64[$71>>3] = 0.0;
             HEAPF64[$43>>3] = 0.0;
             HEAPF64[$this>>3] = 3.14159265358979;
             HEAPF64[$606>>3] = 0.0;
             HEAPF64[$605>>3] = -1.0;
             $15442 = +HEAPF64[$45>>3];
             $15443 = +HEAPF64[$26>>3];
             $15444 = $15442 * $15443;
             HEAPF64[$66>>3] = $15444;
             $15445 = +HEAPF64[$45>>3];
             $15446 = +HEAPF64[$28>>3];
             $15447 = $15445 * $15446;
             HEAPF64[$69>>3] = $15447;
             $15448 = +HEAPF64[$45>>3];
             $15449 = +HEAPF64[$30>>3];
             $15450 = $15448 * $15449;
             HEAPF64[$72>>3] = $15450;
             $15451 = (+__Z5IKabsd(1.0));
             $15452 = $15451 < 1.0E-8;
             if ($15452) {
              break L43;
             }
             HEAPF64[$op1047>>3] = 1.0;
             HEAPF64[$617>>3] = 0.0;
             HEAPF64[$618>>3] = -1.0;
             __ZN8IKSolver10polyroots2EPdS0_Ri($op1047,$zeror1048,$numroots1049);
             $15453 = HEAP32[$numroots1049>>2]|0;
             $15454 = ($15453|0)>(0);
             if (!($15454)) {
              HEAP16[$j1valid1058>>1] = 257;
              HEAP8[$6>>0] = 2;
              break L43;
             }
             $15455 = HEAP32[$numroots1049>>2]|0;
             $15456 = ($15455|0)>(1);
             $ij11055$01250 = 0;
             while(1) {
              $15457 = (($zeror1048) + ($ij11055$01250<<3)|0);
              $15458 = +HEAPF64[$15457>>3];
              $15459 = (+Math_atan((+$15458)));
              $15460 = $15459 * 2.0;
              $15461 = $15460 + 6.2831853071795898;
              $15462 = $15460 > 3.14159265358979;
              $15463 = (($j1array1050) + ($ij11055$01250<<3)|0);
              HEAPF64[$15463>>3] = $15460;
              do {
               if ($15462) {
                $15464 = $15460 + -6.2831853071795898;
                HEAPF64[$15463>>3] = $15464;
               } else {
                $15465 = $15460 < -3.14159265358979;
                if (!($15465)) {
                 break;
                }
                HEAPF64[$15463>>3] = $15461;
               }
              } while(0);
              $15466 = +HEAPF64[$15463>>3];
              $15467 = (+__Z5IKsind($15466));
              $15468 = (($sj1array1052) + ($ij11055$01250<<3)|0);
              HEAPF64[$15468>>3] = $15467;
              $15469 = +HEAPF64[$15463>>3];
              $15470 = (+__Z5IKcosd($15469));
              $15471 = (($cj1array1051) + ($ij11055$01250<<3)|0);
              HEAPF64[$15471>>3] = $15470;
              $15472 = (($ij11055$01250) + 1)|0;
              $15473 = ($15472|0)<($15455|0);
              if ($15473) {
               $ij11055$01250 = $15472;
              } else {
               break;
              }
             }
             $$2483 = $15456 ? $15455 : 1;
             HEAP16[$j1valid1058>>1] = 257;
             HEAP8[$6>>0] = 2;
             $ij11059$01259 = 0;
             while(1) {
              $15474 = (($j1valid1058) + ($ij11059$01259)|0);
              $15475 = HEAP8[$15474>>0]|0;
              $15476 = ($15475<<24>>24)==(0);
              if (!($15476)) {
               $15477 = (($j1array1050) + ($ij11059$01259<<3)|0);
               $15478 = +HEAPF64[$15477>>3];
               HEAPF64[$3>>3] = $15478;
               $15479 = (($cj1array1051) + ($ij11059$01259<<3)|0);
               $15480 = +HEAPF64[$15479>>3];
               HEAPF64[$619>>3] = $15480;
               $15481 = (($sj1array1052) + ($ij11059$01259<<3)|0);
               $15482 = +HEAPF64[$15481>>3];
               HEAPF64[$620>>3] = $15482;
               $15483 = +HEAPF64[$3>>3];
               $15484 = $15483 * 0.5;
               $15485 = (+__Z5IKtand($15484));
               HEAPF64[$621>>3] = $15485;
               $15486 = $ij11059$01259&255;
               HEAP8[$4>>0] = $15486;
               HEAP8[$5>>0] = -1;
               $iij11060$01255 = (($ij11059$01259) + 1)|0;
               $15487 = ($iij11060$01255|0)<($$2483|0);
               L264: do {
                if ($15487) {
                 $iij11060$01256 = $iij11060$01255;
                 L265: while(1) {
                  $15488 = (($j1valid1058) + ($iij11060$01256)|0);
                  $15489 = HEAP8[$15488>>0]|0;
                  $15490 = ($15489<<24>>24)==(0);
                  do {
                   if (!($15490)) {
                    $15492 = +HEAPF64[$15479>>3];
                    $15493 = (($cj1array1051) + ($iij11060$01256<<3)|0);
                    $15494 = +HEAPF64[$15493>>3];
                    $15495 = $15492 - $15494;
                    $15496 = (+__Z5IKabsd($15495));
                    $15497 = $15496 < 9.9999999999999995E-7;
                    if (!($15497)) {
                     break;
                    }
                    $15498 = +HEAPF64[$15481>>3];
                    $15499 = (($sj1array1052) + ($iij11060$01256<<3)|0);
                    $15500 = +HEAPF64[$15499>>3];
                    $15501 = $15498 - $15500;
                    $15502 = (+__Z5IKabsd($15501));
                    $15503 = $15502 < 9.9999999999999995E-7;
                    if ($15503) {
                     $$lcssa2752 = $15488;$iij11060$01256$lcssa = $iij11060$01256;
                     break L265;
                    }
                   }
                  } while(0);
                  $iij11060$0 = (($iij11060$01256) + 1)|0;
                  $15491 = ($iij11060$0|0)<($$2483|0);
                  if ($15491) {
                   $iij11060$01256 = $iij11060$0;
                  } else {
                   break L264;
                  }
                 }
                 HEAP8[$$lcssa2752>>0] = 0;
                 $15504 = $iij11060$01256$lcssa&255;
                 HEAP8[$5>>0] = $15504;
                }
               } while(0);
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
              }
              $15505 = (($ij11059$01259) + 1)|0;
              $exitcond2190 = ($15505|0)==($$2483|0);
              if ($exitcond2190) {
               break L43;
              } else {
               $ij11059$01259 = $15505;
              }
             }
            }
           } while(0);
           $15506 = +HEAPF64[$45>>3];
           $15507 = (+__Z5IKabsd($15506));
           $15508 = +HEAPF64[$this>>3];
           $15509 = $15508 + 1.5707963267949001;
           $15510 = (+__Z6IKfmoddd($15509,6.2831853071795898));
           $15511 = $15510 + -3.14159265358979;
           $15512 = (+__Z5IKabsd($15511));
           $15513 = $15507 + $15512;
           $15514 = +HEAPF64[$43>>3];
           $15515 = (+__Z5IKabsd($15513));
           $15516 = $15515 < 9.9999999999999995E-7;
           do {
            if ($15516) {
             $15517 = $15514 * $15514;
             $15518 = 0.72250000000000003 - $15517;
             $15519 = (+__Z5IKabsd($15518));
             $15520 = $15519 < 9.9999999999999995E-7;
             if (!($15520)) {
              break;
             }
             $15521 = (+__Z5IKabsd(-0.84999999999999998));
             $15522 = $15521 < 9.9999999999999995E-7;
             if (!($15522)) {
              break;
             }
             $15523 = (+__Z5IKabsd($15514));
             $15524 = $15523 < 9.9999999999999995E-7;
             if (!($15524)) {
              break;
             }
             $15525 = (+__Z5IKabsd(0.0));
             $15526 = $15525 < 9.9999999999999995E-7;
             if (!($15526)) {
              break;
             }
             $15527 = (+__Z5IKabsd(-0.93500000000000005));
             $15528 = $15527 < 9.9999999999999995E-7;
             if (!($15528)) {
              break;
             }
             $15529 = -$15514;
             HEAPF64[$24>>3] = 0.0;
             HEAPF64[$23>>3] = 1.0;
             HEAPF64[$22>>3] = 0.0;
             HEAPF64[$47>>3] = 0.0;
             HEAPF64[$7>>3] = 0.0;
             HEAPF64[$76>>3] = 0.0;
             HEAPF64[$75>>3] = 1.0;
             $15530 = +HEAPF64[$43>>3];
             $15531 = $15530 * $15530;
             HEAPF64[$60>>3] = $15531;
             $15532 = +HEAPF64[$43>>3];
             $15533 = +HEAPF64[$26>>3];
             $15534 = $15532 * $15533;
             HEAPF64[$61>>3] = $15534;
             $15535 = +HEAPF64[$43>>3];
             $15536 = +HEAPF64[$28>>3];
             $15537 = $15535 * $15536;
             HEAPF64[$62>>3] = $15537;
             $15538 = +HEAPF64[$43>>3];
             $15539 = +HEAPF64[$30>>3];
             $15540 = $15538 * $15539;
             HEAPF64[$63>>3] = $15540;
             HEAPF64[$64>>3] = 0.0;
             $15541 = +HEAPF64[$43>>3];
             $15542 = +HEAPF64[$38>>3];
             $15543 = $15541 * $15542;
             HEAPF64[$65>>3] = $15543;
             HEAPF64[$67>>3] = 0.0;
             $15544 = +HEAPF64[$43>>3];
             $15545 = +HEAPF64[$40>>3];
             $15546 = $15544 * $15545;
             HEAPF64[$68>>3] = $15546;
             HEAPF64[$70>>3] = 0.0;
             $15547 = +HEAPF64[$43>>3];
             $15548 = +HEAPF64[$42>>3];
             $15549 = $15547 * $15548;
             HEAPF64[$71>>3] = $15549;
             HEAPF64[$45>>3] = 0.0;
             HEAPF64[$this>>3] = 1.5707963267949001;
             HEAPF64[$606>>3] = 1.0;
             HEAPF64[$605>>3] = 0.0;
             $15550 = +HEAPF64[$32>>3];
             $15551 = $15550 * $15529;
             HEAPF64[$66>>3] = $15551;
             $15552 = +HEAPF64[$34>>3];
             $15553 = $15552 * $15529;
             HEAPF64[$69>>3] = $15553;
             $15554 = +HEAPF64[$36>>3];
             $15555 = $15554 * $15529;
             HEAPF64[$72>>3] = $15555;
             $15556 = (+__Z5IKabsd(1.0));
             $15557 = $15556 < 1.0E-8;
             if ($15557) {
              break L43;
             }
             HEAPF64[$op1063>>3] = 1.0;
             HEAPF64[$622>>3] = 0.0;
             HEAPF64[$623>>3] = -1.0;
             __ZN8IKSolver10polyroots2EPdS0_Ri($op1063,$zeror1064,$numroots1065);
             $15558 = HEAP32[$numroots1065>>2]|0;
             $15559 = ($15558|0)>(0);
             if (!($15559)) {
              HEAP16[$j1valid1074>>1] = 257;
              HEAP8[$6>>0] = 2;
              break L43;
             }
             $15560 = HEAP32[$numroots1065>>2]|0;
             $15561 = ($15560|0)>(1);
             $ij11071$01235 = 0;
             while(1) {
              $15562 = (($zeror1064) + ($ij11071$01235<<3)|0);
              $15563 = +HEAPF64[$15562>>3];
              $15564 = (+Math_atan((+$15563)));
              $15565 = $15564 * 2.0;
              $15566 = $15565 + 6.2831853071795898;
              $15567 = $15565 > 3.14159265358979;
              $15568 = (($j1array1066) + ($ij11071$01235<<3)|0);
              HEAPF64[$15568>>3] = $15565;
              do {
               if ($15567) {
                $15569 = $15565 + -6.2831853071795898;
                HEAPF64[$15568>>3] = $15569;
               } else {
                $15570 = $15565 < -3.14159265358979;
                if (!($15570)) {
                 break;
                }
                HEAPF64[$15568>>3] = $15566;
               }
              } while(0);
              $15571 = +HEAPF64[$15568>>3];
              $15572 = (+__Z5IKsind($15571));
              $15573 = (($sj1array1068) + ($ij11071$01235<<3)|0);
              HEAPF64[$15573>>3] = $15572;
              $15574 = +HEAPF64[$15568>>3];
              $15575 = (+__Z5IKcosd($15574));
              $15576 = (($cj1array1067) + ($ij11071$01235<<3)|0);
              HEAPF64[$15576>>3] = $15575;
              $15577 = (($ij11071$01235) + 1)|0;
              $15578 = ($15577|0)<($15560|0);
              if ($15578) {
               $ij11071$01235 = $15577;
              } else {
               break;
              }
             }
             $$2484 = $15561 ? $15560 : 1;
             HEAP16[$j1valid1074>>1] = 257;
             HEAP8[$6>>0] = 2;
             $ij11075$01244 = 0;
             while(1) {
              $15579 = (($j1valid1074) + ($ij11075$01244)|0);
              $15580 = HEAP8[$15579>>0]|0;
              $15581 = ($15580<<24>>24)==(0);
              if (!($15581)) {
               $15582 = (($j1array1066) + ($ij11075$01244<<3)|0);
               $15583 = +HEAPF64[$15582>>3];
               HEAPF64[$3>>3] = $15583;
               $15584 = (($cj1array1067) + ($ij11075$01244<<3)|0);
               $15585 = +HEAPF64[$15584>>3];
               HEAPF64[$624>>3] = $15585;
               $15586 = (($sj1array1068) + ($ij11075$01244<<3)|0);
               $15587 = +HEAPF64[$15586>>3];
               HEAPF64[$625>>3] = $15587;
               $15588 = +HEAPF64[$3>>3];
               $15589 = $15588 * 0.5;
               $15590 = (+__Z5IKtand($15589));
               HEAPF64[$626>>3] = $15590;
               $15591 = $ij11075$01244&255;
               HEAP8[$4>>0] = $15591;
               HEAP8[$5>>0] = -1;
               $iij11076$01240 = (($ij11075$01244) + 1)|0;
               $15592 = ($iij11076$01240|0)<($$2484|0);
               L298: do {
                if ($15592) {
                 $iij11076$01241 = $iij11076$01240;
                 L299: while(1) {
                  $15593 = (($j1valid1074) + ($iij11076$01241)|0);
                  $15594 = HEAP8[$15593>>0]|0;
                  $15595 = ($15594<<24>>24)==(0);
                  do {
                   if (!($15595)) {
                    $15597 = +HEAPF64[$15584>>3];
                    $15598 = (($cj1array1067) + ($iij11076$01241<<3)|0);
                    $15599 = +HEAPF64[$15598>>3];
                    $15600 = $15597 - $15599;
                    $15601 = (+__Z5IKabsd($15600));
                    $15602 = $15601 < 9.9999999999999995E-7;
                    if (!($15602)) {
                     break;
                    }
                    $15603 = +HEAPF64[$15586>>3];
                    $15604 = (($sj1array1068) + ($iij11076$01241<<3)|0);
                    $15605 = +HEAPF64[$15604>>3];
                    $15606 = $15603 - $15605;
                    $15607 = (+__Z5IKabsd($15606));
                    $15608 = $15607 < 9.9999999999999995E-7;
                    if ($15608) {
                     $$lcssa2749 = $15593;$iij11076$01241$lcssa = $iij11076$01241;
                     break L299;
                    }
                   }
                  } while(0);
                  $iij11076$0 = (($iij11076$01241) + 1)|0;
                  $15596 = ($iij11076$0|0)<($$2484|0);
                  if ($15596) {
                   $iij11076$01241 = $iij11076$0;
                  } else {
                   break L298;
                  }
                 }
                 HEAP8[$$lcssa2749>>0] = 0;
                 $15609 = $iij11076$01241$lcssa&255;
                 HEAP8[$5>>0] = $15609;
                }
               } while(0);
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
              }
              $15610 = (($ij11075$01244) + 1)|0;
              $exitcond2188 = ($15610|0)==($$2484|0);
              if ($exitcond2188) {
               break L43;
              } else {
               $ij11075$01244 = $15610;
              }
             }
            }
           } while(0);
           $15611 = +HEAPF64[$45>>3];
           $15612 = (+__Z5IKabsd($15611));
           $15613 = +HEAPF64[$this>>3];
           $15614 = $15613 + 4.7123889803846897;
           $15615 = (+__Z6IKfmoddd($15614,6.2831853071795898));
           $15616 = $15615 + -3.14159265358979;
           $15617 = (+__Z5IKabsd($15616));
           $15618 = $15612 + $15617;
           $15619 = +HEAPF64[$43>>3];
           $15620 = -$15619;
           $15621 = (+__Z5IKabsd($15618));
           $15622 = $15621 < 9.9999999999999995E-7;
           if (!($15622)) {
            break L43;
           }
           $15623 = $15619 * $15619;
           $15624 = 0.72250000000000003 - $15623;
           $15625 = (+__Z5IKabsd($15624));
           $15626 = $15625 < 9.9999999999999995E-7;
           if (!($15626)) {
            break L43;
           }
           $15627 = (+__Z5IKabsd(-0.84999999999999998));
           $15628 = $15627 < 9.9999999999999995E-7;
           if (!($15628)) {
            break L43;
           }
           $15629 = (+__Z5IKabsd($15620));
           $15630 = $15629 < 9.9999999999999995E-7;
           if (!($15630)) {
            break L43;
           }
           $15631 = (+__Z5IKabsd(0.0));
           $15632 = $15631 < 9.9999999999999995E-7;
           if (!($15632)) {
            break L43;
           }
           $15633 = (+__Z5IKabsd(-0.93500000000000005));
           $15634 = $15633 < 9.9999999999999995E-7;
           if (!($15634)) {
            break L43;
           }
           HEAPF64[$24>>3] = 0.0;
           HEAPF64[$23>>3] = 1.0;
           HEAPF64[$22>>3] = 0.0;
           HEAPF64[$47>>3] = 0.0;
           HEAPF64[$7>>3] = 0.0;
           HEAPF64[$76>>3] = 0.0;
           HEAPF64[$75>>3] = 1.0;
           $15635 = +HEAPF64[$43>>3];
           $15636 = $15635 * $15635;
           HEAPF64[$60>>3] = $15636;
           $15637 = +HEAPF64[$43>>3];
           $15638 = +HEAPF64[$26>>3];
           $15639 = $15637 * $15638;
           HEAPF64[$61>>3] = $15639;
           $15640 = +HEAPF64[$43>>3];
           $15641 = +HEAPF64[$28>>3];
           $15642 = $15640 * $15641;
           HEAPF64[$62>>3] = $15642;
           $15643 = +HEAPF64[$43>>3];
           $15644 = +HEAPF64[$30>>3];
           $15645 = $15643 * $15644;
           HEAPF64[$63>>3] = $15645;
           HEAPF64[$64>>3] = 0.0;
           $15646 = +HEAPF64[$43>>3];
           $15647 = +HEAPF64[$38>>3];
           $15648 = $15646 * $15647;
           HEAPF64[$65>>3] = $15648;
           HEAPF64[$67>>3] = 0.0;
           $15649 = +HEAPF64[$43>>3];
           $15650 = +HEAPF64[$40>>3];
           $15651 = $15649 * $15650;
           HEAPF64[$68>>3] = $15651;
           HEAPF64[$70>>3] = 0.0;
           $15652 = +HEAPF64[$43>>3];
           $15653 = +HEAPF64[$42>>3];
           $15654 = $15652 * $15653;
           HEAPF64[$71>>3] = $15654;
           HEAPF64[$45>>3] = 0.0;
           HEAPF64[$this>>3] = -1.5707963267949001;
           HEAPF64[$606>>3] = -1.0;
           HEAPF64[$605>>3] = 0.0;
           $15655 = +HEAPF64[$32>>3];
           $15656 = $15655 * $15620;
           HEAPF64[$66>>3] = $15656;
           $15657 = +HEAPF64[$34>>3];
           $15658 = $15657 * $15620;
           HEAPF64[$69>>3] = $15658;
           $15659 = +HEAPF64[$36>>3];
           $15660 = $15659 * $15620;
           HEAPF64[$72>>3] = $15660;
           $15661 = (+__Z5IKabsd(1.0));
           $15662 = $15661 < 1.0E-8;
           if ($15662) {
            break L43;
           }
           HEAPF64[$op1079>>3] = 1.0;
           HEAPF64[$627>>3] = 0.0;
           HEAPF64[$628>>3] = -1.0;
           __ZN8IKSolver10polyroots2EPdS0_Ri($op1079,$zeror1080,$numroots1081);
           $15663 = HEAP32[$numroots1081>>2]|0;
           $15664 = ($15663|0)>(0);
           if (!($15664)) {
            HEAP16[$j1valid1090>>1] = 257;
            HEAP8[$6>>0] = 2;
            break L43;
           }
           $15665 = HEAP32[$numroots1081>>2]|0;
           $15666 = ($15665|0)>(1);
           $ij11087$01220 = 0;
           while(1) {
            $15667 = (($zeror1080) + ($ij11087$01220<<3)|0);
            $15668 = +HEAPF64[$15667>>3];
            $15669 = (+Math_atan((+$15668)));
            $15670 = $15669 * 2.0;
            $15671 = $15670 + 6.2831853071795898;
            $15672 = $15670 > 3.14159265358979;
            $15673 = (($j1array1082) + ($ij11087$01220<<3)|0);
            HEAPF64[$15673>>3] = $15670;
            do {
             if ($15672) {
              $15674 = $15670 + -6.2831853071795898;
              HEAPF64[$15673>>3] = $15674;
             } else {
              $15675 = $15670 < -3.14159265358979;
              if (!($15675)) {
               break;
              }
              HEAPF64[$15673>>3] = $15671;
             }
            } while(0);
            $15676 = +HEAPF64[$15673>>3];
            $15677 = (+__Z5IKsind($15676));
            $15678 = (($sj1array1084) + ($ij11087$01220<<3)|0);
            HEAPF64[$15678>>3] = $15677;
            $15679 = +HEAPF64[$15673>>3];
            $15680 = (+__Z5IKcosd($15679));
            $15681 = (($cj1array1083) + ($ij11087$01220<<3)|0);
            HEAPF64[$15681>>3] = $15680;
            $15682 = (($ij11087$01220) + 1)|0;
            $15683 = ($15682|0)<($15665|0);
            if ($15683) {
             $ij11087$01220 = $15682;
            } else {
             break;
            }
           }
           $$2485 = $15666 ? $15665 : 1;
           HEAP16[$j1valid1090>>1] = 257;
           HEAP8[$6>>0] = 2;
           $ij11091$01229 = 0;
           while(1) {
            $15684 = (($j1valid1090) + ($ij11091$01229)|0);
            $15685 = HEAP8[$15684>>0]|0;
            $15686 = ($15685<<24>>24)==(0);
            if (!($15686)) {
             $15687 = (($j1array1082) + ($ij11091$01229<<3)|0);
             $15688 = +HEAPF64[$15687>>3];
             HEAPF64[$3>>3] = $15688;
             $15689 = (($cj1array1083) + ($ij11091$01229<<3)|0);
             $15690 = +HEAPF64[$15689>>3];
             HEAPF64[$629>>3] = $15690;
             $15691 = (($sj1array1084) + ($ij11091$01229<<3)|0);
             $15692 = +HEAPF64[$15691>>3];
             HEAPF64[$630>>3] = $15692;
             $15693 = +HEAPF64[$3>>3];
             $15694 = $15693 * 0.5;
             $15695 = (+__Z5IKtand($15694));
             HEAPF64[$631>>3] = $15695;
             $15696 = $ij11091$01229&255;
             HEAP8[$4>>0] = $15696;
             HEAP8[$5>>0] = -1;
             $iij11092$01225 = (($ij11091$01229) + 1)|0;
             $15697 = ($iij11092$01225|0)<($$2485|0);
             L331: do {
              if ($15697) {
               $iij11092$01226 = $iij11092$01225;
               L332: while(1) {
                $15698 = (($j1valid1090) + ($iij11092$01226)|0);
                $15699 = HEAP8[$15698>>0]|0;
                $15700 = ($15699<<24>>24)==(0);
                do {
                 if (!($15700)) {
                  $15702 = +HEAPF64[$15689>>3];
                  $15703 = (($cj1array1083) + ($iij11092$01226<<3)|0);
                  $15704 = +HEAPF64[$15703>>3];
                  $15705 = $15702 - $15704;
                  $15706 = (+__Z5IKabsd($15705));
                  $15707 = $15706 < 9.9999999999999995E-7;
                  if (!($15707)) {
                   break;
                  }
                  $15708 = +HEAPF64[$15691>>3];
                  $15709 = (($sj1array1084) + ($iij11092$01226<<3)|0);
                  $15710 = +HEAPF64[$15709>>3];
                  $15711 = $15708 - $15710;
                  $15712 = (+__Z5IKabsd($15711));
                  $15713 = $15712 < 9.9999999999999995E-7;
                  if ($15713) {
                   $$lcssa2746 = $15698;$iij11092$01226$lcssa = $iij11092$01226;
                   break L332;
                  }
                 }
                } while(0);
                $iij11092$0 = (($iij11092$01226) + 1)|0;
                $15701 = ($iij11092$0|0)<($$2485|0);
                if ($15701) {
                 $iij11092$01226 = $iij11092$0;
                } else {
                 break L331;
                }
               }
               HEAP8[$$lcssa2746>>0] = 0;
               $15714 = $iij11092$01226$lcssa&255;
               HEAP8[$5>>0] = $15714;
              }
             } while(0);
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
            }
            $15715 = (($ij11091$01229) + 1)|0;
            $exitcond2186 = ($15715|0)==($$2485|0);
            if ($exitcond2186) {
             break L43;
            } else {
             $ij11091$01229 = $15715;
            }
           }
          }
         } while(0);
         $16342 = +HEAPF64[$43>>3];
         $16343 = +HEAPF64[$606>>3];
         $16344 = $16342 * $16343;
         $16345 = +HEAPF64[$605>>3];
         $16346 = +HEAPF64[$45>>3];
         $16347 = $16345 * $16346;
         $16348 = +HEAPF64[$22>>3];
         $16349 = $16348 + -3.14159265358979;
         $16350 = (+__Z5IKabsd($16349));
         $16351 = $16350 + 3.14159265358979;
         $16352 = (+__Z6IKfmoddd($16351,6.2831853071795898));
         $16353 = $16352 + -3.14159265358979;
         $16354 = $16344 - $16347;
         $16355 = $16347 - $16344;
         $16356 = (+__Z5IKabsd($16353));
         $16357 = $16356 < 9.9999999999999995E-7;
         if (!($16357)) {
          break;
         }
         $16358 = +HEAPF64[$75>>3];
         $16359 = +HEAPF64[$60>>3];
         $16360 = +HEAPF64[$76>>3];
         $16361 = $16360 * 0.076499999999999999;
         $16362 = $16361 + 0.39655000000000001;
         $16363 = $16362 - $16359;
         $16364 = $16358 * 0.32595000000000002;
         $16365 = $16364 + $16363;
         $16366 = (+__Z5IKabsd($16365));
         $16367 = $16366 < 9.9999999999999995E-7;
         if (!($16367)) {
          break;
         }
         $16368 = (+__Z5IKabsd($16354));
         $16369 = $16368 < 9.9999999999999995E-7;
         if (!($16369)) {
          break;
         }
         $16370 = (+__Z5IKabsd($16355));
         $16371 = $16370 < 9.9999999999999995E-7;
         if (!($16371)) {
          break;
         }
         HEAPF64[$24>>3] = 0.0;
         HEAPF64[$23>>3] = -1.0;
         HEAPF64[$22>>3] = 3.14159265358979;
         $16372 = +HEAPF64[$605>>3];
         $16373 = $16372 * $16372;
         $16374 = +HEAPF64[$45>>3];
         $16375 = $16374 * $16374;
         $16376 = +HEAPF64[$43>>3];
         $16377 = $16376 * $16376;
         $16378 = $16373 * $16377;
         $16379 = $16375 + $16378;
         $16380 = +HEAPF64[$47>>3];
         $16381 = $16380 * $16380;
         $16382 = $16381 + $16379;
         $16383 = $16372 * 2.0;
         $16384 = $16383 * $16376;
         $16385 = $16374 * $16384;
         $16386 = +HEAPF64[$606>>3];
         $16387 = $16385 * $16386;
         $16388 = $16387 + $16382;
         $16389 = $16373 * $16375;
         $16390 = $16388 - $16389;
         $16391 = (+__Z5IKabsd($16390));
         $16392 = $16391 < 9.9999999999999995E-7;
         do {
          if (!($16392)) {
           $16393 = (+__Z6IKsignd($16390));
           $16394 = (+__Z5IKabsd($16393));
           $16395 = $16394 < 9.9999999999999995E-7;
           if ($16395) {
            break;
           }
           HEAP8[$6>>0] = 1;
           $17517 = +HEAPF64[$605>>3];
           $17518 = $17517 * $17517;
           $17519 = +HEAPF64[$45>>3];
           $17520 = $17519 * $17519;
           $17521 = +HEAPF64[$47>>3];
           $17522 = +HEAPF64[$76>>3];
           $17523 = $17521 * $17522;
           $17524 = +HEAPF64[$606>>3];
           $17525 = $17519 * $17524;
           $17526 = +HEAPF64[$75>>3];
           $17527 = $17526 * 0.29999999999999999;
           $17528 = $17522 * 0.044999999999999998;
           $17529 = $17526 * 0.044999999999999998;
           $17530 = +HEAPF64[$43>>3];
           $17531 = $17517 * $17530;
           $17532 = $17522 * 0.29999999999999999;
           $17533 = $17525 * 2.0;
           $17534 = $17533 * $17531;
           $17535 = $17520 + $17534;
           $17536 = $17530 * $17530;
           $17537 = $17518 * $17536;
           $17538 = $17537 + $17535;
           $17539 = $17521 * $17521;
           $17540 = $17539 + $17538;
           $17541 = $17518 * $17520;
           $17542 = $17540 - $17541;
           $17543 = (+__Z6IKsignd($17542));
           __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x2191,$17543,-1);
           $17544 = HEAP8[$683>>0]|0;
           $17545 = ($17544<<24>>24)==(0);
           if ($17545) {
            break L43;
           }
           $17546 = $17523 * 0.29999999999999999;
           $17547 = +HEAPF64[$47>>3];
           $17548 = $17547 * 0.044999999999999998;
           $17549 = $17546 + $17548;
           $17550 = $17527 * $17531;
           $17551 = $17550 + $17549;
           $17552 = $17529 * $17547;
           $17553 = $17551 - $17552;
           $17554 = $17528 * $17531;
           $17555 = $17554 + $17553;
           $17556 = $17525 * 0.55000000000000004;
           $17557 = $17556 + $17555;
           $17558 = $17531 * 0.55000000000000004;
           $17559 = $17558 + $17557;
           $17560 = $17525 * $17527;
           $17561 = $17560 + $17559;
           $17562 = $17528 * $17525;
           $17563 = $17562 + $17561;
           $17564 = $17527 * $17547;
           $17565 = $17532 * $17531;
           $17566 = $17564 - $17565;
           $17567 = $17532 * $17525;
           $17568 = $17566 - $17567;
           $17569 = $17531 * 0.044999999999999998;
           $17570 = $17568 - $17569;
           $17571 = $17525 * 0.044999999999999998;
           $17572 = $17570 - $17571;
           $17573 = $17529 * $17531;
           $17574 = $17573 + $17572;
           $17575 = $17523 * 0.044999999999999998;
           $17576 = $17575 + $17574;
           $17577 = $17547 * 0.55000000000000004;
           $17578 = $17577 + $17576;
           $17579 = $17525 * $17529;
           $17580 = $17579 + $17578;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x2192,$17563,$17580,1.9999999999999999E-6);
           $17581 = HEAP8[$684>>0]|0;
           $17582 = ($17581<<24>>24)==(0);
           if ($17582) {
            break L43;
           }
           $17583 = +HEAPF64[$x2191>>3];
           $17584 = $17583 * 1.5707963267949001;
           $17585 = $17584 + -1.5707963267949001;
           $17586 = +HEAPF64[$x2192>>3];
           $17587 = $17586 + $17585;
           $17588 = (+__Z5IKsind($17587));
           $17589 = (+__Z5IKcosd($17587));
           $17590 = $17587 > 3.14159265358979;
           do {
            if ($17590) {
             $17591 = $17587 + -6.2831853071795898;
             $17594 = $17591;
            } else {
             $17592 = $17587 < -3.14159265358979;
             if (!($17592)) {
              $17594 = $17587;
              break;
             }
             $17593 = $17587 + 6.2831853071795898;
             $17594 = $17593;
            }
           } while(0);
           HEAP8[$4>>0] = 0;
           HEAP8[$5>>0] = -1;
           HEAPF64[$3>>3] = $17594;
           HEAPF64[$685>>3] = $17589;
           HEAPF64[$686>>3] = $17588;
           $17595 = +HEAPF64[$3>>3];
           $17596 = (+__Z5IKsind($17595));
           $17597 = (+__Z5IKcosd($17595));
           $17598 = +HEAPF64[$76>>3];
           $17599 = $17598 * 0.044999999999999998;
           $17600 = +HEAPF64[$75>>3];
           $17601 = $17600 * 0.29999999999999999;
           $17602 = $17600 * 0.044999999999999998;
           $17603 = +HEAPF64[$605>>3];
           $17604 = +HEAPF64[$43>>3];
           $17605 = $17603 * $17604;
           $17606 = +HEAPF64[$45>>3];
           $17607 = +HEAPF64[$606>>3];
           $17608 = $17606 * $17607;
           $17609 = $17597 * $17598;
           $17610 = +HEAPF64[$47>>3];
           $17611 = $17596 * $17610;
           $17612 = $17597 * $17610;
           $17613 = $17597 * 0.089999999999999996;
           $17614 = $17596 * 1.1000000000000001;
           $17615 = $17612 + -0.55000000000000004;
           $17616 = $17596 * $17605;
           $17617 = $17616 + $17615;
           $17618 = $17596 * $17608;
           $17619 = $17618 + $17617;
           $17620 = $17619 - $17601;
           $17621 = $17620 - $17599;
           $17622 = +HEAPF64[$60>>3];
           $17623 = $17622 * -0.92038656235618999;
           $17624 = $17597 * $17623;
           $17625 = $17609 * 0.025409572020248499;
           $17626 = $17625 + $17624;
           $17627 = $17598 * -0.31056143580303702;
           $17628 = $17596 * $17627;
           $17629 = $17628 + $17626;
           $17630 = $17597 * 0.185020708697653;
           $17631 = $17629 - $17630;
           $17632 = $17622 * 0.138057984353428;
           $17633 = $17596 * $17632;
           $17634 = $17633 + $17631;
           $17635 = $17610 + $17634;
           $17636 = $17596 * 0.099746893695352001;
           $17637 = $17635 - $17636;
           $17638 = $17609 * 0.29999999999999999;
           $17639 = $17596 * $17599;
           $17640 = $17639 - $17638;
           $17641 = $17596 * $17601;
           $17642 = $17640 + $17641;
           $17643 = $17597 * $17602;
           $17644 = $17643 + $17642;
           $17645 = $17644 - $17605;
           $17646 = $17645 - $17608;
           $17647 = $17597 * 0.044999999999999998;
           $17648 = $17646 - $17647;
           $17649 = $17596 * 0.55000000000000004;
           $17650 = $17649 + $17648;
           $17651 = $17614 * $17605;
           $17652 = $17651 + -0.21249999999999999;
           $17653 = $17611 * 0.089999999999999996;
           $17654 = $17652 + $17653;
           $17655 = $17654 - $17622;
           $17656 = $17613 * $17605;
           $17657 = $17655 - $17656;
           $17658 = $17613 * $17608;
           $17659 = $17657 - $17658;
           $17660 = $17614 * $17608;
           $17661 = $17660 + $17659;
           $17662 = $17612 * 1.1000000000000001;
           $17663 = $17662 + $17661;
           $17664 = (+__Z5IKabsd($17621));
           $17665 = $17664 > 5.0000000000000004E-6;
           if ($17665) {
            break L43;
           }
           $17666 = 0.044999999999999998 - $17611;
           $17667 = $17597 * $17605;
           $17668 = $17667 + $17666;
           $17669 = $17597 * $17608;
           $17670 = $17669 + $17668;
           $17671 = $17670 - $17602;
           $17672 = $17598 * 0.29999999999999999;
           $17673 = $17672 + $17671;
           $17674 = (+__Z5IKabsd($17673));
           $17675 = $17674 > 5.0000000000000004E-6;
           if ($17675) {
            break L43;
           }
           $17676 = (+__Z5IKabsd($17637));
           $17677 = $17676 > 5.0000000000000004E-6;
           if ($17677) {
            break L43;
           }
           $17678 = (+__Z5IKabsd($17650));
           $17679 = $17678 > 5.0000000000000004E-6;
           if ($17679) {
            break L43;
           }
           $17680 = (+__Z5IKabsd($17663));
           $17681 = $17680 > 5.0000000000000004E-6;
           if ($17681) {
            break L43;
           }
           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           break L43;
          }
         } while(0);
         HEAPF64[$24>>3] = 0.0;
         HEAPF64[$23>>3] = -1.0;
         HEAPF64[$22>>3] = 3.14159265358979;
         $16396 = +HEAPF64[$45>>3];
         $16397 = +HEAPF64[$606>>3];
         $16398 = $16396 * $16397;
         $16399 = +HEAPF64[$76>>3];
         $16400 = $16399 * 0.29999999999999999;
         $16401 = +HEAPF64[$605>>3];
         $16402 = +HEAPF64[$43>>3];
         $16403 = $16401 * $16402;
         $16404 = $16399 * 6.6666666666666696;
         $16405 = +HEAPF64[$47>>3];
         $16406 = $16399 * $16405;
         $16407 = +HEAPF64[$75>>3];
         $16408 = $16405 * $16407;
         $16409 = $16403 * 0.044999999999999998;
         $16410 = $16404 * $16403;
         $16411 = $16403 * $16407;
         $16412 = $16411 - $16410;
         $16413 = $16398 * $16407;
         $16414 = $16413 + $16412;
         $16415 = -$16398;
         $16416 = $16414 - $16398;
         $16417 = $16416 - $16403;
         $16418 = $16417 - $16406;
         $16419 = $16405 * 12.2222222222222;
         $16420 = $16418 - $16419;
         $16421 = $16404 * $16415;
         $16422 = $16421 + $16420;
         $16423 = $16408 * 6.6666666666666696;
         $16424 = $16422 - $16423;
         $16425 = (+__Z5IKabsd($16424));
         $16426 = $16425 < 9.9999999999999995E-7;
         do {
          if (!($16426)) {
           $16427 = $16405 * 0.55000000000000004;
           $16428 = $16407 * 0.044999999999999998;
           $16429 = $16398 * $16428;
           $16430 = $16429 - $16427;
           $16431 = $16398 * 0.044999999999999998;
           $16432 = $16430 - $16431;
           $16433 = $16406 * 0.044999999999999998;
           $16434 = $16432 - $16433;
           $16435 = $16400 * $16403;
           $16436 = $16434 - $16435;
           $16437 = $16408 * 0.29999999999999999;
           $16438 = $16436 - $16437;
           $16439 = $16438 - $16409;
           $16440 = $16400 * $16415;
           $16441 = $16440 + $16439;
           $16442 = $16407 * $16409;
           $16443 = $16442 + $16441;
           $16444 = (+__Z6IKsignd($16443));
           $16445 = (+__Z5IKabsd($16444));
           $16446 = $16445 < 9.9999999999999995E-7;
           if ($16446) {
            break;
           }
           HEAP8[$6>>0] = 1;
           $17346 = +HEAPF64[$605>>3];
           $17347 = $17346 * $17346;
           $17348 = +HEAPF64[$45>>3];
           $17349 = $17348 * $17348;
           $17350 = +HEAPF64[$75>>3];
           $17351 = $17350 * $17350;
           $17352 = +HEAPF64[$606>>3];
           $17353 = $17348 * $17352;
           $17354 = +HEAPF64[$76>>3];
           $17355 = $17354 * 0.29999999999999999;
           $17356 = $17350 * 0.044999999999999998;
           $17357 = +HEAPF64[$43>>3];
           $17358 = $17346 * $17357;
           $17359 = $17350 * $17354;
           $17360 = +HEAPF64[$47>>3];
           $17361 = $17360 * 0.55000000000000004;
           $17362 = $17350 * -0.29999999999999999;
           $17363 = $17362 * $17360;
           $17364 = $17363 - $17361;
           $17365 = $17355 * $17358;
           $17366 = $17364 - $17365;
           $17367 = $17356 * $17358;
           $17368 = $17367 + $17366;
           $17369 = $17360 * -0.044999999999999998;
           $17370 = $17354 * $17369;
           $17371 = $17370 + $17368;
           $17372 = $17358 * 0.044999999999999998;
           $17373 = $17371 - $17372;
           $17374 = $17353 * 0.044999999999999998;
           $17375 = $17373 - $17374;
           $17376 = $17356 * $17353;
           $17377 = $17376 + $17375;
           $17378 = -$17353;
           $17379 = $17355 * $17378;
           $17380 = $17379 + $17377;
           $17381 = (+__Z6IKsignd($17380));
           __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x2168,$17381,-1);
           $17382 = HEAP8[$679>>0]|0;
           $17383 = ($17382<<24>>24)==(0);
           if ($17383) {
            break L43;
           }
           $17384 = +HEAPF64[$75>>3];
           $17385 = $17384 * 0.01125;
           $17386 = $17385 + -0.038249999999999999;
           $17387 = +HEAPF64[$76>>3];
           $17388 = $17387 * 0.16702500000000001;
           $17389 = $17386 - $17388;
           $17390 = $17351 * 0.027;
           $17391 = $17390 + $17389;
           $17392 = $17358 * $17360;
           $17393 = $17391 - $17392;
           $17394 = $17359 * 0.087974999999999997;
           $17395 = $17393 - $17394;
           $17396 = $17360 * $17378;
           $17397 = $17396 + $17395;
           $17398 = $17353 * 2.0;
           $17399 = $17398 * $17358;
           $17400 = $17399 + -0.30452499999999999;
           $17401 = +HEAPF64[$43>>3];
           $17402 = $17401 * $17401;
           $17403 = $17347 * $17402;
           $17404 = $17400 + $17403;
           $17405 = $17387 * 0.049500000000000002;
           $17406 = $17404 - $17405;
           $17407 = $17349 + $17406;
           $17408 = $17359 * 0.027;
           $17409 = $17407 - $17408;
           $17410 = $17351 * 0.087974999999999997;
           $17411 = $17409 - $17410;
           $17412 = $17384 * 0.33000000000000002;
           $17413 = $17411 - $17412;
           $17414 = $17347 * $17349;
           $17415 = $17413 - $17414;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x2169,$17397,$17415,1.9999999999999999E-6);
           $17416 = HEAP8[$680>>0]|0;
           $17417 = ($17416<<24>>24)==(0);
           if ($17417) {
            break L43;
           }
           $17418 = +HEAPF64[$x2168>>3];
           $17419 = $17418 * 1.5707963267949001;
           $17420 = $17419 + -1.5707963267949001;
           $17421 = +HEAPF64[$x2169>>3];
           $17422 = $17421 + $17420;
           $17423 = (+__Z5IKsind($17422));
           $17424 = (+__Z5IKcosd($17422));
           $17425 = $17422 > 3.14159265358979;
           do {
            if ($17425) {
             $17426 = $17422 + -6.2831853071795898;
             $17429 = $17426;
            } else {
             $17427 = $17422 < -3.14159265358979;
             if (!($17427)) {
              $17429 = $17422;
              break;
             }
             $17428 = $17422 + 6.2831853071795898;
             $17429 = $17428;
            }
           } while(0);
           HEAP8[$4>>0] = 0;
           HEAP8[$5>>0] = -1;
           HEAPF64[$3>>3] = $17429;
           HEAPF64[$681>>3] = $17424;
           HEAPF64[$682>>3] = $17423;
           $17430 = +HEAPF64[$3>>3];
           $17431 = (+__Z5IKsind($17430));
           $17432 = (+__Z5IKcosd($17430));
           $17433 = +HEAPF64[$76>>3];
           $17434 = $17433 * 0.044999999999999998;
           $17435 = +HEAPF64[$75>>3];
           $17436 = $17435 * 0.29999999999999999;
           $17437 = $17435 * 0.044999999999999998;
           $17438 = +HEAPF64[$605>>3];
           $17439 = +HEAPF64[$43>>3];
           $17440 = $17438 * $17439;
           $17441 = +HEAPF64[$45>>3];
           $17442 = +HEAPF64[$606>>3];
           $17443 = $17441 * $17442;
           $17444 = $17432 * $17433;
           $17445 = +HEAPF64[$47>>3];
           $17446 = $17431 * $17445;
           $17447 = $17432 * $17445;
           $17448 = $17432 * 0.089999999999999996;
           $17449 = $17431 * 1.1000000000000001;
           $17450 = $17431 * $17443;
           $17451 = $17450 + -0.55000000000000004;
           $17452 = $17431 * $17440;
           $17453 = $17452 + $17451;
           $17454 = $17447 + $17453;
           $17455 = $17454 - $17436;
           $17456 = $17455 - $17434;
           $17457 = $17433 * -0.31056143580303702;
           $17458 = $17431 * $17457;
           $17459 = +HEAPF64[$60>>3];
           $17460 = $17459 * 0.138057984353428;
           $17461 = $17431 * $17460;
           $17462 = $17458 + $17461;
           $17463 = $17445 + $17462;
           $17464 = $17431 * 0.099746893695352001;
           $17465 = $17463 - $17464;
           $17466 = $17444 * 0.025409572020248499;
           $17467 = $17466 + $17465;
           $17468 = $17459 * -0.92038656235618999;
           $17469 = $17432 * $17468;
           $17470 = $17469 + $17467;
           $17471 = $17432 * 0.185020708697653;
           $17472 = $17470 - $17471;
           $17473 = $17431 * 0.55000000000000004;
           $17474 = $17431 * $17434;
           $17475 = $17473 + $17474;
           $17476 = $17431 * $17436;
           $17477 = $17475 + $17476;
           $17478 = $17444 * 0.29999999999999999;
           $17479 = $17477 - $17478;
           $17480 = $17432 * $17437;
           $17481 = $17480 + $17479;
           $17482 = $17432 * 0.044999999999999998;
           $17483 = $17481 - $17482;
           $17484 = $17483 - $17443;
           $17485 = $17484 - $17440;
           $17486 = $17448 * $17440;
           $17487 = -0.21249999999999999 - $17486;
           $17488 = $17487 - $17459;
           $17489 = $17449 * $17443;
           $17490 = $17489 + $17488;
           $17491 = $17447 * 1.1000000000000001;
           $17492 = $17491 + $17490;
           $17493 = $17448 * $17443;
           $17494 = $17492 - $17493;
           $17495 = $17449 * $17440;
           $17496 = $17495 + $17494;
           $17497 = $17446 * 0.089999999999999996;
           $17498 = $17497 + $17496;
           $17499 = (+__Z5IKabsd($17456));
           $17500 = $17499 > 5.0000000000000004E-6;
           if ($17500) {
            break L43;
           }
           $17501 = $17432 * $17443;
           $17502 = $17501 + 0.044999999999999998;
           $17503 = $17432 * $17440;
           $17504 = $17503 + $17502;
           $17505 = $17504 - $17446;
           $17506 = $17433 * 0.29999999999999999;
           $17507 = $17506 + $17505;
           $17508 = $17507 - $17437;
           $17509 = (+__Z5IKabsd($17508));
           $17510 = $17509 > 5.0000000000000004E-6;
           if ($17510) {
            break L43;
           }
           $17511 = (+__Z5IKabsd($17472));
           $17512 = $17511 > 5.0000000000000004E-6;
           if ($17512) {
            break L43;
           }
           $17513 = (+__Z5IKabsd($17485));
           $17514 = $17513 > 5.0000000000000004E-6;
           if ($17514) {
            break L43;
           }
           $17515 = (+__Z5IKabsd($17498));
           $17516 = $17515 > 5.0000000000000004E-6;
           if ($17516) {
            break L43;
           }
           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           break L43;
          }
         } while(0);
         HEAPF64[$24>>3] = 0.0;
         HEAPF64[$23>>3] = -1.0;
         HEAPF64[$22>>3] = 3.14159265358979;
         $16447 = +HEAPF64[$45>>3];
         $16448 = +HEAPF64[$606>>3];
         $16449 = $16447 * $16448;
         $16450 = +HEAPF64[$605>>3];
         $16451 = +HEAPF64[$43>>3];
         $16452 = $16450 * $16451;
         $16453 = +HEAPF64[$60>>3];
         $16454 = +HEAPF64[$47>>3];
         $16455 = $16453 * $16454;
         $16456 = $16453 * 0.92038656235618999;
         $16457 = +HEAPF64[$76>>3];
         $16458 = $16454 * $16457;
         $16459 = $16453 * 36.222041112016697;
         $16460 = $16457 * 0.025409572020248499;
         $16461 = $16455 * 5.4333061668024998;
         $16462 = -$16452;
         $16463 = $16459 * $16462;
         $16464 = $16463 - $16461;
         $16465 = $16458 * 12.2222222222222;
         $16466 = $16464 + $16465;
         $16467 = $16449 * $16457;
         $16468 = $16467 + $16466;
         $16469 = $16452 * $16457;
         $16470 = $16469 + $16468;
         $16471 = -$16449;
         $16472 = $16459 * $16471;
         $16473 = $16472 + $16470;
         $16474 = $16454 * 3.92556370551481;
         $16475 = $16474 + $16473;
         $16476 = $16449 * 7.2815358145431501;
         $16477 = $16475 - $16476;
         $16478 = $16452 * 7.2815358145431501;
         $16479 = $16477 - $16478;
         $16480 = (+__Z5IKabsd($16479));
         $16481 = $16480 < 9.9999999999999995E-7;
         do {
          if (!($16481)) {
           $16482 = $16458 * 0.31056143580303702;
           $16483 = $16456 * $16462;
           $16484 = $16483 + $16482;
           $16485 = $16449 * $16460;
           $16486 = $16485 + $16484;
           $16487 = $16456 * $16471;
           $16488 = $16487 + $16486;
           $16489 = $16454 * 0.099746893695352001;
           $16490 = $16489 + $16488;
           $16491 = $16455 * 0.138057984353428;
           $16492 = $16490 - $16491;
           $16493 = $16449 * 0.185020708697653;
           $16494 = $16492 - $16493;
           $16495 = $16452 * 0.185020708697653;
           $16496 = $16494 - $16495;
           $16497 = $16452 * $16460;
           $16498 = $16497 + $16496;
           $16499 = (+__Z6IKsignd($16498));
           $16500 = (+__Z5IKabsd($16499));
           $16501 = $16500 < 9.9999999999999995E-7;
           if ($16501) {
            break;
           }
           HEAP8[$6>>0] = 1;
           $17168 = +HEAPF64[$75>>3];
           $17169 = $17168 * $17168;
           $17170 = +HEAPF64[$76>>3];
           $17171 = $17168 * $17170;
           $17172 = +HEAPF64[$605>>3];
           $17173 = +HEAPF64[$43>>3];
           $17174 = $17172 * $17173;
           $17175 = +HEAPF64[$60>>3];
           $17176 = $17175 * 0.92038656235618999;
           $17177 = $17170 * 0.025409572020248499;
           $17178 = +HEAPF64[$45>>3];
           $17179 = +HEAPF64[$606>>3];
           $17180 = $17178 * $17179;
           $17181 = $17175 * 0.041417395306028497;
           $17182 = +HEAPF64[$47>>3];
           $17183 = $17171 * 0.0076228716060745497;
           $17184 = $17183 + -0.10061795904279799;
           $17185 = $17168 * -0.27611596870685701;
           $17186 = $17185 * $17175;
           $17187 = $17184 + $17186;
           $17188 = $17169 * 0.00114343074091118;
           $17189 = $17187 - $17188;
           $17190 = $17170 * $17181;
           $17191 = $17189 - $17190;
           $17192 = $17182 * $17182;
           $17193 = $17191 + $17192;
           $17194 = $17175 * 0.50621260929590395;
           $17195 = $17193 - $17194;
           $17196 = $17170 * 0.00564933271974229;
           $17197 = $17196 + $17195;
           $17198 = $17168 * 0.055506212609295898;
           $17199 = $17197 - $17198;
           $17200 = $17170 * 0.175297399907961;
           $17201 = $17200 + 0.068836056143580293;
           $17202 = $17180 * $17182;
           $17203 = $17201 - $17202;
           $17204 = $17171 * 0.093168430740911204;
           $17205 = $17204 + $17203;
           $17206 = $17175 * -0.0062126092959042803;
           $17207 = $17170 * $17206;
           $17208 = $17207 + $17205;
           $17209 = $17169 * 0.0139752646111367;
           $17210 = $17208 - $17209;
           $17211 = $17175 * 0.075931891394385595;
           $17212 = $17210 - $17211;
           $17213 = $17168 * 0.029924068108605598;
           $17214 = $17213 + $17212;
           $17215 = $17168 * $17181;
           $17216 = $17214 - $17215;
           $17217 = -$17174;
           $17218 = $17182 * $17217;
           $17219 = $17218 + $17216;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x2145,$17199,$17219,1.9999999999999999E-6);
           $17220 = HEAP8[$675>>0]|0;
           $17221 = ($17220<<24>>24)==(0);
           if ($17221) {
            break L43;
           }
           $17222 = $17174 * 0.185020708697653;
           $17223 = +HEAPF64[$60>>3];
           $17224 = $17223 * -0.138057984353428;
           $17225 = +HEAPF64[$47>>3];
           $17226 = $17224 * $17225;
           $17227 = $17226 - $17222;
           $17228 = $17225 * 0.31056143580303702;
           $17229 = +HEAPF64[$76>>3];
           $17230 = $17228 * $17229;
           $17231 = $17227 + $17230;
           $17232 = $17176 * $17180;
           $17233 = $17231 - $17232;
           $17234 = $17177 * $17180;
           $17235 = $17234 + $17233;
           $17236 = $17225 * 0.099746893695352001;
           $17237 = $17236 + $17235;
           $17238 = $17180 * 0.185020708697653;
           $17239 = $17237 - $17238;
           $17240 = $17176 * $17217;
           $17241 = $17240 + $17239;
           $17242 = $17177 * $17174;
           $17243 = $17242 + $17241;
           $17244 = (+__Z6IKsignd($17243));
           __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x2146,$17244,-1);
           $17245 = HEAP8[$676>>0]|0;
           $17246 = ($17245<<24>>24)==(0);
           if ($17246) {
            break L43;
           }
           $17247 = +HEAPF64[$x2145>>3];
           $17248 = $17247 + -1.5707963267949001;
           $17249 = +HEAPF64[$x2146>>3];
           $17250 = $17249 * 1.5707963267949001;
           $17251 = $17248 + $17250;
           $17252 = (+__Z5IKsind($17251));
           $17253 = (+__Z5IKcosd($17251));
           $17254 = $17251 > 3.14159265358979;
           do {
            if ($17254) {
             $17255 = $17251 + -6.2831853071795898;
             $17258 = $17255;
            } else {
             $17256 = $17251 < -3.14159265358979;
             if (!($17256)) {
              $17258 = $17251;
              break;
             }
             $17257 = $17251 + 6.2831853071795898;
             $17258 = $17257;
            }
           } while(0);
           HEAP8[$4>>0] = 0;
           HEAP8[$5>>0] = -1;
           HEAPF64[$3>>3] = $17258;
           HEAPF64[$677>>3] = $17253;
           HEAPF64[$678>>3] = $17252;
           $17259 = +HEAPF64[$3>>3];
           $17260 = (+__Z5IKsind($17259));
           $17261 = (+__Z5IKcosd($17259));
           $17262 = +HEAPF64[$76>>3];
           $17263 = $17262 * 0.044999999999999998;
           $17264 = +HEAPF64[$75>>3];
           $17265 = $17264 * 0.29999999999999999;
           $17266 = $17264 * 0.044999999999999998;
           $17267 = +HEAPF64[$605>>3];
           $17268 = +HEAPF64[$43>>3];
           $17269 = $17267 * $17268;
           $17270 = +HEAPF64[$45>>3];
           $17271 = +HEAPF64[$606>>3];
           $17272 = $17270 * $17271;
           $17273 = $17261 * $17262;
           $17274 = +HEAPF64[$47>>3];
           $17275 = $17260 * $17274;
           $17276 = $17261 * $17274;
           $17277 = $17261 * 0.089999999999999996;
           $17278 = $17260 * 1.1000000000000001;
           $17279 = $17260 * $17269;
           $17280 = $17279 + -0.55000000000000004;
           $17281 = $17260 * $17272;
           $17282 = $17280 + $17281;
           $17283 = $17276 + $17282;
           $17284 = $17283 - $17263;
           $17285 = $17284 - $17265;
           $17286 = $17262 * -0.31056143580303702;
           $17287 = $17260 * $17286;
           $17288 = $17260 * 0.099746893695352001;
           $17289 = $17287 - $17288;
           $17290 = $17289 + $17274;
           $17291 = $17273 * 0.025409572020248499;
           $17292 = $17291 + $17290;
           $17293 = +HEAPF64[$60>>3];
           $17294 = $17293 * 0.138057984353428;
           $17295 = $17260 * $17294;
           $17296 = $17292 + $17295;
           $17297 = $17261 * 0.185020708697653;
           $17298 = $17296 - $17297;
           $17299 = $17293 * -0.92038656235618999;
           $17300 = $17261 * $17299;
           $17301 = $17300 + $17298;
           $17302 = $17260 * $17265;
           $17303 = $17273 * 0.29999999999999999;
           $17304 = $17302 - $17303;
           $17305 = $17261 * 0.044999999999999998;
           $17306 = $17304 - $17305;
           $17307 = $17261 * $17266;
           $17308 = $17307 + $17306;
           $17309 = $17260 * 0.55000000000000004;
           $17310 = $17309 + $17308;
           $17311 = $17310 - $17269;
           $17312 = $17311 - $17272;
           $17313 = $17260 * $17263;
           $17314 = $17313 + $17312;
           $17315 = $17278 * $17269;
           $17316 = $17315 + -0.21249999999999999;
           $17317 = $17277 * $17269;
           $17318 = $17316 - $17317;
           $17319 = $17277 * $17272;
           $17320 = $17318 - $17319;
           $17321 = $17320 - $17293;
           $17322 = $17275 * 0.089999999999999996;
           $17323 = $17322 + $17321;
           $17324 = $17276 * 1.1000000000000001;
           $17325 = $17324 + $17323;
           $17326 = $17278 * $17272;
           $17327 = $17326 + $17325;
           $17328 = (+__Z5IKabsd($17285));
           $17329 = $17328 > 5.0000000000000004E-6;
           if ($17329) {
            break L43;
           }
           $17330 = 0.044999999999999998 - $17266;
           $17331 = $17261 * $17272;
           $17332 = $17330 + $17331;
           $17333 = $17261 * $17269;
           $17334 = $17333 + $17332;
           $17335 = $17262 * 0.29999999999999999;
           $17336 = $17335 + $17334;
           $17337 = $17336 - $17275;
           $17338 = (+__Z5IKabsd($17337));
           $17339 = $17338 > 5.0000000000000004E-6;
           if ($17339) {
            break L43;
           }
           $17340 = (+__Z5IKabsd($17301));
           $17341 = $17340 > 5.0000000000000004E-6;
           if ($17341) {
            break L43;
           }
           $17342 = (+__Z5IKabsd($17314));
           $17343 = $17342 > 5.0000000000000004E-6;
           if ($17343) {
            break L43;
           }
           $17344 = (+__Z5IKabsd($17327));
           $17345 = $17344 > 5.0000000000000004E-6;
           if ($17345) {
            break L43;
           }
           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           break L43;
          }
         } while(0);
         $16502 = +HEAPF64[$43>>3];
         $16503 = +HEAPF64[$606>>3];
         $16504 = $16502 * $16503;
         $16505 = +HEAPF64[$605>>3];
         $16506 = +HEAPF64[$45>>3];
         $16507 = $16505 * $16506;
         $16508 = +HEAPF64[$47>>3];
         $16509 = (+__Z5IKabsd($16508));
         $16510 = +HEAPF64[$7>>3];
         $16511 = $16510 + 3.14159265358979;
         $16512 = (+__Z6IKfmoddd($16511,6.2831853071795898));
         $16513 = $16512 + -3.14159265358979;
         $16514 = (+__Z5IKabsd($16513));
         $16515 = $16509 + $16514;
         $16516 = $16504 - $16507;
         $16517 = $16507 - $16504;
         $16518 = (+__Z5IKabsd($16515));
         $16519 = $16518 < 9.9999999999999995E-7;
         if (!($16519)) {
          break;
         }
         $16520 = +HEAPF64[$60>>3];
         $16521 = 0.72250000000000003 - $16520;
         $16522 = (+__Z5IKabsd($16521));
         $16523 = $16522 < 9.9999999999999995E-7;
         if (!($16523)) {
          break;
         }
         $16524 = (+__Z5IKabsd($16516));
         $16525 = $16524 < 9.9999999999999995E-7;
         if (!($16525)) {
          break;
         }
         $16526 = (+__Z5IKabsd($16517));
         $16527 = $16526 < 9.9999999999999995E-7;
         if (!($16527)) {
          break;
         }
         $16528 = -$16506;
         HEAPF64[$24>>3] = 0.0;
         HEAPF64[$23>>3] = -1.0;
         HEAPF64[$22>>3] = 3.14159265358979;
         HEAPF64[$47>>3] = 0.0;
         HEAPF64[$7>>3] = 0.0;
         HEAPF64[$76>>3] = 0.0;
         HEAPF64[$75>>3] = 1.0;
         $16529 = +HEAPF64[$43>>3];
         $16530 = $16529 * $16529;
         $16531 = +HEAPF64[$45>>3];
         $16532 = $16531 * $16531;
         $16533 = $16530 + $16532;
         HEAPF64[$60>>3] = $16533;
         $16534 = +HEAPF64[$43>>3];
         $16535 = +HEAPF64[$26>>3];
         $16536 = $16534 * $16535;
         $16537 = +HEAPF64[$45>>3];
         $16538 = +HEAPF64[$32>>3];
         $16539 = $16537 * $16538;
         $16540 = $16536 + $16539;
         HEAPF64[$61>>3] = $16540;
         $16541 = +HEAPF64[$43>>3];
         $16542 = +HEAPF64[$28>>3];
         $16543 = $16541 * $16542;
         $16544 = +HEAPF64[$45>>3];
         $16545 = +HEAPF64[$34>>3];
         $16546 = $16544 * $16545;
         $16547 = $16543 + $16546;
         HEAPF64[$62>>3] = $16547;
         $16548 = +HEAPF64[$43>>3];
         $16549 = +HEAPF64[$30>>3];
         $16550 = $16548 * $16549;
         $16551 = +HEAPF64[$45>>3];
         $16552 = +HEAPF64[$36>>3];
         $16553 = $16551 * $16552;
         $16554 = $16550 + $16553;
         HEAPF64[$63>>3] = $16554;
         $16555 = +HEAPF64[$38>>3];
         $16556 = $16555 * $16528;
         HEAPF64[$64>>3] = $16556;
         $16557 = +HEAPF64[$43>>3];
         $16558 = +HEAPF64[$38>>3];
         $16559 = $16557 * $16558;
         HEAPF64[$65>>3] = $16559;
         $16560 = +HEAPF64[$40>>3];
         $16561 = $16560 * $16528;
         HEAPF64[$67>>3] = $16561;
         $16562 = +HEAPF64[$43>>3];
         $16563 = +HEAPF64[$40>>3];
         $16564 = $16562 * $16563;
         HEAPF64[$68>>3] = $16564;
         $16565 = +HEAPF64[$42>>3];
         $16566 = $16565 * $16528;
         HEAPF64[$70>>3] = $16566;
         $16567 = +HEAPF64[$43>>3];
         $16568 = +HEAPF64[$42>>3];
         $16569 = $16567 * $16568;
         HEAPF64[$71>>3] = $16569;
         $16570 = +HEAPF64[$45>>3];
         $16571 = +HEAPF64[$606>>3];
         $16572 = $16570 * $16571;
         $16573 = +HEAPF64[$605>>3];
         $16574 = +HEAPF64[$43>>3];
         $16575 = $16573 * $16574;
         $16576 = -$16575;
         $16577 = $16576 - $16572;
         $16578 = (+__Z5IKabsd($16577));
         $16579 = $16578 < 9.9999999999999995E-7;
         if (!($16579)) {
          HEAP8[$6>>0] = 1;
          $17067 = +HEAPF64[$45>>3];
          $17068 = $17067 * $17067;
          $17069 = +HEAPF64[$605>>3];
          $17070 = $17069 * $17069;
          $17071 = +HEAPF64[$43>>3];
          $17072 = $17069 * $17071;
          $17073 = +HEAPF64[$606>>3];
          $17074 = $17067 * $17073;
          $17075 = $17068 * 4400.0;
          $17076 = $17074 * 306.0;
          $17077 = $17072 * -306.0;
          $17078 = $17077 - $17076;
          __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x2130,$17078,-1);
          $17079 = HEAP8[$672>>0]|0;
          $17080 = ($17079<<24>>24)==(0);
          if ($17080) {
           break;
          }
          $17081 = $17074 * 1.1764705882352899;
          $17082 = $17072 * 1.1764705882352899;
          $17083 = $17082 + $17081;
          $17084 = (+__Z5IKabsd($17083));
          $17085 = $17084 < 1.9999999999999999E-6;
          do {
           if ($17085) {
            $17086 = +HEAPF64[$x2130>>3];
            $17087 = $17070 * -4400.0;
            $17088 = +HEAPF64[$43>>3];
            $17089 = $17088 * $17088;
            $17090 = $17087 * $17089;
            $17091 = $17090 + 3179.0;
            $17092 = $17091 - $17075;
            $17093 = $17070 * $17075;
            $17094 = $17093 + $17092;
            $17095 = $17072 * -8800.0;
            $17096 = $17095 * $17074;
            $17097 = $17096 + $17094;
            $17098 = $17086 * $17097;
            $17099 = (+__Z5IKabsd($17098));
            $17100 = $17099 < 1.9999999999999999E-6;
            if (!($17100)) {
             break;
            }
            $17101 = (+__Z5IKsqrd($17083));
            $17102 = (+__Z5IKsqrd($17098));
            $17103 = $17101 + $17102;
            $17104 = $17103 + -1.0;
            $17105 = (+__Z5IKabsd($17104));
            $17106 = !($17105 <= 1.9999999999999999E-6);
            if (!($17106)) {
             break L43;
            }
           }
          } while(0);
          $17107 = +HEAPF64[$x2130>>3];
          $17108 = $17070 * -4400.0;
          $17109 = +HEAPF64[$43>>3];
          $17110 = $17109 * $17109;
          $17111 = $17108 * $17110;
          $17112 = $17111 + 3179.0;
          $17113 = $17112 - $17075;
          $17114 = $17070 * $17075;
          $17115 = $17114 + $17113;
          $17116 = $17072 * -8800.0;
          $17117 = $17116 * $17074;
          $17118 = $17117 + $17115;
          $17119 = $17107 * $17118;
          $17120 = (+__Z7IKatan2dd($17083,$17119));
          $17121 = (+__Z5IKsind($17120));
          $17122 = (+__Z5IKcosd($17120));
          $17123 = $17120 > 3.14159265358979;
          do {
           if ($17123) {
            $17124 = $17120 + -6.2831853071795898;
            $17127 = $17124;
           } else {
            $17125 = $17120 < -3.14159265358979;
            if (!($17125)) {
             $17127 = $17120;
             break;
            }
            $17126 = $17120 + 6.2831853071795898;
            $17127 = $17126;
           }
          } while(0);
          HEAP8[$4>>0] = 0;
          HEAP8[$5>>0] = -1;
          HEAPF64[$3>>3] = $17127;
          HEAPF64[$673>>3] = $17122;
          HEAPF64[$674>>3] = $17121;
          $17128 = +HEAPF64[$3>>3];
          $17129 = (+__Z5IKcosd($17128));
          $17130 = (+__Z5IKsind($17128));
          $17131 = +HEAPF64[$45>>3];
          $17132 = +HEAPF64[$606>>3];
          $17133 = $17131 * $17132;
          $17134 = +HEAPF64[$605>>3];
          $17135 = +HEAPF64[$43>>3];
          $17136 = $17134 * $17135;
          $17137 = $17129 * 0.089999999999999996;
          $17138 = $17130 * $17133;
          $17139 = $17129 * -0.84999999999999998;
          $17140 = $17138 + -0.84999999999999998;
          $17141 = $17130 * $17136;
          $17142 = $17140 + $17141;
          $17143 = $17130 * 0.84999999999999998;
          $17144 = $17143 - $17136;
          $17145 = $17144 - $17133;
          $17146 = $17138 * 1.1000000000000001;
          $17147 = $17146 + -0.93500000000000005;
          $17148 = $17137 * $17136;
          $17149 = $17147 - $17148;
          $17150 = $17130 * 1.1000000000000001;
          $17151 = $17150 * $17136;
          $17152 = $17151 + $17149;
          $17153 = $17137 * $17133;
          $17154 = $17152 - $17153;
          $17155 = (+__Z5IKabsd($17139));
          $17156 = $17155 > 5.0000000000000004E-6;
          if ($17156) {
           break;
          }
          $17157 = $17129 * $17136;
          $17158 = $17129 * $17133;
          $17159 = $17158 + $17157;
          $17160 = (+__Z5IKabsd($17159));
          $17161 = $17160 > 5.0000000000000004E-6;
          if ($17161) {
           break;
          }
          $17162 = (+__Z5IKabsd($17142));
          $17163 = $17162 > 5.0000000000000004E-6;
          if ($17163) {
           break;
          }
          $17164 = (+__Z5IKabsd($17145));
          $17165 = $17164 > 5.0000000000000004E-6;
          if ($17165) {
           break;
          }
          $17166 = (+__Z5IKabsd($17154));
          $17167 = $17166 > 5.0000000000000004E-6;
          if ($17167) {
           break;
          }
          __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
          break;
         }
         $16580 = (+__Z5IKabsd($16574));
         $16581 = (+__Z5IKabsd($16570));
         $16582 = $16580 + $16581;
         $16583 = (+__Z5IKabsd($16582));
         $16584 = $16583 < 9.9999999999999995E-7;
         do {
          if ($16584) {
           $16585 = (+__Z5IKabsd(0.72250000000000003));
           $16586 = $16585 < 9.9999999999999995E-7;
           if (!($16586)) {
            break;
           }
           $16587 = (+__Z5IKabsd(-0.84999999999999998));
           $16588 = $16587 < 9.9999999999999995E-7;
           if (!($16588)) {
            break;
           }
           $16589 = (+__Z5IKabsd(0.0));
           $16590 = $16589 < 9.9999999999999995E-7;
           if (!($16590)) {
            break;
           }
           $16591 = (+__Z5IKabsd(-0.93500000000000005));
           $16592 = $16591 < 9.9999999999999995E-7;
           if (!($16592)) {
            break;
           }
           HEAPF64[$24>>3] = 0.0;
           HEAPF64[$23>>3] = -1.0;
           HEAPF64[$22>>3] = 3.14159265358979;
           HEAPF64[$47>>3] = 0.0;
           HEAPF64[$7>>3] = 0.0;
           HEAPF64[$76>>3] = 0.0;
           HEAPF64[$75>>3] = 1.0;
           HEAPF64[$64>>3] = 0.0;
           HEAPF64[$65>>3] = 0.0;
           HEAPF64[$67>>3] = 0.0;
           HEAPF64[$68>>3] = 0.0;
           HEAPF64[$70>>3] = 0.0;
           HEAPF64[$71>>3] = 0.0;
           HEAPF64[$66>>3] = 0.0;
           HEAPF64[$69>>3] = 0.0;
           HEAPF64[$72>>3] = 0.0;
           $16593 = (+__Z5IKabsd(1.0));
           $16594 = $16593 < 1.0E-8;
           ;HEAP32[$43>>2]=0|0;HEAP32[$43+4>>2]=0|0;HEAP32[$43+8>>2]=0|0;HEAP32[$43+12>>2]=0|0;
           ;HEAP32[$45>>2]=0|0;HEAP32[$45+4>>2]=0|0;HEAP32[$45+8>>2]=0|0;HEAP32[$45+12>>2]=0|0;
           ;HEAP32[$63>>2]=0|0;HEAP32[$63+4>>2]=0|0;HEAP32[$63+8>>2]=0|0;HEAP32[$63+12>>2]=0|0;
           if ($16594) {
            break L43;
           }
           HEAPF64[$op1137>>3] = 1.0;
           HEAPF64[$647>>3] = 0.0;
           HEAPF64[$648>>3] = -1.0;
           __ZN8IKSolver10polyroots2EPdS0_Ri($op1137,$zeror1138,$numroots1139);
           $16595 = HEAP32[$numroots1139>>2]|0;
           $16596 = ($16595|0)>(0);
           if (!($16596)) {
            HEAP16[$j1valid1148>>1] = 257;
            HEAP8[$6>>0] = 2;
            break L43;
           }
           $16597 = HEAP32[$numroots1139>>2]|0;
           $16598 = ($16597|0)>(1);
           $ij11145$01185 = 0;
           while(1) {
            $16599 = (($zeror1138) + ($ij11145$01185<<3)|0);
            $16600 = +HEAPF64[$16599>>3];
            $16601 = (+Math_atan((+$16600)));
            $16602 = $16601 * 2.0;
            $16603 = $16602 + 6.2831853071795898;
            $16604 = $16602 > 3.14159265358979;
            $16605 = (($j1array1140) + ($ij11145$01185<<3)|0);
            HEAPF64[$16605>>3] = $16602;
            do {
             if ($16604) {
              $16606 = $16602 + -6.2831853071795898;
              HEAPF64[$16605>>3] = $16606;
             } else {
              $16607 = $16602 < -3.14159265358979;
              if (!($16607)) {
               break;
              }
              HEAPF64[$16605>>3] = $16603;
             }
            } while(0);
            $16608 = +HEAPF64[$16605>>3];
            $16609 = (+__Z5IKsind($16608));
            $16610 = (($sj1array1142) + ($ij11145$01185<<3)|0);
            HEAPF64[$16610>>3] = $16609;
            $16611 = +HEAPF64[$16605>>3];
            $16612 = (+__Z5IKcosd($16611));
            $16613 = (($cj1array1141) + ($ij11145$01185<<3)|0);
            HEAPF64[$16613>>3] = $16612;
            $16614 = (($ij11145$01185) + 1)|0;
            $16615 = ($16614|0)<($16597|0);
            if ($16615) {
             $ij11145$01185 = $16614;
            } else {
             break;
            }
           }
           $$2486 = $16598 ? $16597 : 1;
           HEAP16[$j1valid1148>>1] = 257;
           HEAP8[$6>>0] = 2;
           $ij11149$01194 = 0;
           while(1) {
            $16616 = (($j1valid1148) + ($ij11149$01194)|0);
            $16617 = HEAP8[$16616>>0]|0;
            $16618 = ($16617<<24>>24)==(0);
            if (!($16618)) {
             $16619 = (($j1array1140) + ($ij11149$01194<<3)|0);
             $16620 = +HEAPF64[$16619>>3];
             HEAPF64[$3>>3] = $16620;
             $16621 = (($cj1array1141) + ($ij11149$01194<<3)|0);
             $16622 = +HEAPF64[$16621>>3];
             HEAPF64[$649>>3] = $16622;
             $16623 = (($sj1array1142) + ($ij11149$01194<<3)|0);
             $16624 = +HEAPF64[$16623>>3];
             HEAPF64[$650>>3] = $16624;
             $16625 = +HEAPF64[$3>>3];
             $16626 = $16625 * 0.5;
             $16627 = (+__Z5IKtand($16626));
             HEAPF64[$651>>3] = $16627;
             $16628 = $ij11149$01194&255;
             HEAP8[$4>>0] = $16628;
             HEAP8[$5>>0] = -1;
             $iij11150$01190 = (($ij11149$01194) + 1)|0;
             $16629 = ($iij11150$01190|0)<($$2486|0);
             L438: do {
              if ($16629) {
               $iij11150$01191 = $iij11150$01190;
               L439: while(1) {
                $16630 = (($j1valid1148) + ($iij11150$01191)|0);
                $16631 = HEAP8[$16630>>0]|0;
                $16632 = ($16631<<24>>24)==(0);
                do {
                 if (!($16632)) {
                  $16634 = +HEAPF64[$16621>>3];
                  $16635 = (($cj1array1141) + ($iij11150$01191<<3)|0);
                  $16636 = +HEAPF64[$16635>>3];
                  $16637 = $16634 - $16636;
                  $16638 = (+__Z5IKabsd($16637));
                  $16639 = $16638 < 9.9999999999999995E-7;
                  if (!($16639)) {
                   break;
                  }
                  $16640 = +HEAPF64[$16623>>3];
                  $16641 = (($sj1array1142) + ($iij11150$01191<<3)|0);
                  $16642 = +HEAPF64[$16641>>3];
                  $16643 = $16640 - $16642;
                  $16644 = (+__Z5IKabsd($16643));
                  $16645 = $16644 < 9.9999999999999995E-7;
                  if ($16645) {
                   $$lcssa2743 = $16630;$iij11150$01191$lcssa = $iij11150$01191;
                   break L439;
                  }
                 }
                } while(0);
                $iij11150$0 = (($iij11150$01191) + 1)|0;
                $16633 = ($iij11150$0|0)<($$2486|0);
                if ($16633) {
                 $iij11150$01191 = $iij11150$0;
                } else {
                 break L438;
                }
               }
               HEAP8[$$lcssa2743>>0] = 0;
               $16646 = $iij11150$01191$lcssa&255;
               HEAP8[$5>>0] = $16646;
              }
             } while(0);
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
            }
            $16647 = (($ij11149$01194) + 1)|0;
            $exitcond2180 = ($16647|0)==($$2486|0);
            if ($exitcond2180) {
             break L43;
            } else {
             $ij11149$01194 = $16647;
            }
           }
          }
         } while(0);
         $16648 = +HEAPF64[$this>>3];
         $16649 = $16648 + 3.14159265358979;
         $16650 = (+__Z6IKfmoddd($16649,6.2831853071795898));
         $16651 = $16650 + -3.14159265358979;
         $16652 = (+__Z5IKabsd($16651));
         $16653 = +HEAPF64[$43>>3];
         $16654 = (+__Z5IKabsd($16653));
         $16655 = $16652 + $16654;
         $16656 = +HEAPF64[$45>>3];
         $16657 = -$16656;
         $16658 = (+__Z5IKabsd($16655));
         $16659 = $16658 < 9.9999999999999995E-7;
         do {
          if ($16659) {
           $16660 = $16656 * $16656;
           $16661 = 0.72250000000000003 - $16660;
           $16662 = (+__Z5IKabsd($16661));
           $16663 = $16662 < 9.9999999999999995E-7;
           if (!($16663)) {
            break;
           }
           $16664 = (+__Z5IKabsd(-0.84999999999999998));
           $16665 = $16664 < 9.9999999999999995E-7;
           if (!($16665)) {
            break;
           }
           $16666 = (+__Z5IKabsd($16657));
           $16667 = $16666 < 9.9999999999999995E-7;
           if (!($16667)) {
            break;
           }
           $16668 = (+__Z5IKabsd(0.0));
           $16669 = $16668 < 9.9999999999999995E-7;
           if (!($16669)) {
            break;
           }
           $16670 = (+__Z5IKabsd(-0.93500000000000005));
           $16671 = $16670 < 9.9999999999999995E-7;
           if (!($16671)) {
            break;
           }
           HEAPF64[$24>>3] = 0.0;
           HEAPF64[$23>>3] = -1.0;
           HEAPF64[$22>>3] = 3.14159265358979;
           HEAPF64[$47>>3] = 0.0;
           HEAPF64[$7>>3] = 0.0;
           HEAPF64[$76>>3] = 0.0;
           HEAPF64[$75>>3] = 1.0;
           $16672 = +HEAPF64[$45>>3];
           $16673 = $16672 * $16672;
           HEAPF64[$60>>3] = $16673;
           $16674 = +HEAPF64[$45>>3];
           $16675 = +HEAPF64[$32>>3];
           $16676 = $16674 * $16675;
           HEAPF64[$61>>3] = $16676;
           $16677 = +HEAPF64[$45>>3];
           $16678 = +HEAPF64[$34>>3];
           $16679 = $16677 * $16678;
           HEAPF64[$62>>3] = $16679;
           $16680 = +HEAPF64[$45>>3];
           $16681 = +HEAPF64[$36>>3];
           $16682 = $16680 * $16681;
           HEAPF64[$63>>3] = $16682;
           $16683 = +HEAPF64[$38>>3];
           $16684 = $16683 * $16657;
           HEAPF64[$64>>3] = $16684;
           HEAPF64[$65>>3] = 0.0;
           $16685 = +HEAPF64[$40>>3];
           $16686 = $16685 * $16657;
           HEAPF64[$67>>3] = $16686;
           HEAPF64[$68>>3] = 0.0;
           $16687 = +HEAPF64[$42>>3];
           $16688 = $16687 * $16657;
           HEAPF64[$70>>3] = $16688;
           HEAPF64[$71>>3] = 0.0;
           HEAPF64[$43>>3] = 0.0;
           HEAPF64[$this>>3] = 0.0;
           HEAPF64[$606>>3] = 0.0;
           HEAPF64[$605>>3] = 1.0;
           $16689 = +HEAPF64[$45>>3];
           $16690 = +HEAPF64[$26>>3];
           $16691 = $16689 * $16690;
           HEAPF64[$66>>3] = $16691;
           $16692 = +HEAPF64[$45>>3];
           $16693 = +HEAPF64[$28>>3];
           $16694 = $16692 * $16693;
           HEAPF64[$69>>3] = $16694;
           $16695 = +HEAPF64[$45>>3];
           $16696 = +HEAPF64[$30>>3];
           $16697 = $16695 * $16696;
           HEAPF64[$72>>3] = $16697;
           $16698 = (+__Z5IKabsd(1.0));
           $16699 = $16698 < 1.0E-8;
           if ($16699) {
            break L43;
           }
           HEAPF64[$op1153>>3] = 1.0;
           HEAPF64[$652>>3] = 0.0;
           HEAPF64[$653>>3] = -1.0;
           __ZN8IKSolver10polyroots2EPdS0_Ri($op1153,$zeror1154,$numroots1155);
           $16700 = HEAP32[$numroots1155>>2]|0;
           $16701 = ($16700|0)>(0);
           if (!($16701)) {
            HEAP16[$j1valid1164>>1] = 257;
            HEAP8[$6>>0] = 2;
            break L43;
           }
           $16702 = HEAP32[$numroots1155>>2]|0;
           $16703 = ($16702|0)>(1);
           $ij11161$01170 = 0;
           while(1) {
            $16704 = (($zeror1154) + ($ij11161$01170<<3)|0);
            $16705 = +HEAPF64[$16704>>3];
            $16706 = (+Math_atan((+$16705)));
            $16707 = $16706 * 2.0;
            $16708 = $16707 + 6.2831853071795898;
            $16709 = $16707 > 3.14159265358979;
            $16710 = (($j1array1156) + ($ij11161$01170<<3)|0);
            HEAPF64[$16710>>3] = $16707;
            do {
             if ($16709) {
              $16711 = $16707 + -6.2831853071795898;
              HEAPF64[$16710>>3] = $16711;
             } else {
              $16712 = $16707 < -3.14159265358979;
              if (!($16712)) {
               break;
              }
              HEAPF64[$16710>>3] = $16708;
             }
            } while(0);
            $16713 = +HEAPF64[$16710>>3];
            $16714 = (+__Z5IKsind($16713));
            $16715 = (($sj1array1158) + ($ij11161$01170<<3)|0);
            HEAPF64[$16715>>3] = $16714;
            $16716 = +HEAPF64[$16710>>3];
            $16717 = (+__Z5IKcosd($16716));
            $16718 = (($cj1array1157) + ($ij11161$01170<<3)|0);
            HEAPF64[$16718>>3] = $16717;
            $16719 = (($ij11161$01170) + 1)|0;
            $16720 = ($16719|0)<($16702|0);
            if ($16720) {
             $ij11161$01170 = $16719;
            } else {
             break;
            }
           }
           $$2487 = $16703 ? $16702 : 1;
           HEAP16[$j1valid1164>>1] = 257;
           HEAP8[$6>>0] = 2;
           $ij11165$01179 = 0;
           while(1) {
            $16721 = (($j1valid1164) + ($ij11165$01179)|0);
            $16722 = HEAP8[$16721>>0]|0;
            $16723 = ($16722<<24>>24)==(0);
            if (!($16723)) {
             $16724 = (($j1array1156) + ($ij11165$01179<<3)|0);
             $16725 = +HEAPF64[$16724>>3];
             HEAPF64[$3>>3] = $16725;
             $16726 = (($cj1array1157) + ($ij11165$01179<<3)|0);
             $16727 = +HEAPF64[$16726>>3];
             HEAPF64[$654>>3] = $16727;
             $16728 = (($sj1array1158) + ($ij11165$01179<<3)|0);
             $16729 = +HEAPF64[$16728>>3];
             HEAPF64[$655>>3] = $16729;
             $16730 = +HEAPF64[$3>>3];
             $16731 = $16730 * 0.5;
             $16732 = (+__Z5IKtand($16731));
             HEAPF64[$656>>3] = $16732;
             $16733 = $ij11165$01179&255;
             HEAP8[$4>>0] = $16733;
             HEAP8[$5>>0] = -1;
             $iij11166$01175 = (($ij11165$01179) + 1)|0;
             $16734 = ($iij11166$01175|0)<($$2487|0);
             L472: do {
              if ($16734) {
               $iij11166$01176 = $iij11166$01175;
               L473: while(1) {
                $16735 = (($j1valid1164) + ($iij11166$01176)|0);
                $16736 = HEAP8[$16735>>0]|0;
                $16737 = ($16736<<24>>24)==(0);
                do {
                 if (!($16737)) {
                  $16739 = +HEAPF64[$16726>>3];
                  $16740 = (($cj1array1157) + ($iij11166$01176<<3)|0);
                  $16741 = +HEAPF64[$16740>>3];
                  $16742 = $16739 - $16741;
                  $16743 = (+__Z5IKabsd($16742));
                  $16744 = $16743 < 9.9999999999999995E-7;
                  if (!($16744)) {
                   break;
                  }
                  $16745 = +HEAPF64[$16728>>3];
                  $16746 = (($sj1array1158) + ($iij11166$01176<<3)|0);
                  $16747 = +HEAPF64[$16746>>3];
                  $16748 = $16745 - $16747;
                  $16749 = (+__Z5IKabsd($16748));
                  $16750 = $16749 < 9.9999999999999995E-7;
                  if ($16750) {
                   $$lcssa2740 = $16735;$iij11166$01176$lcssa = $iij11166$01176;
                   break L473;
                  }
                 }
                } while(0);
                $iij11166$0 = (($iij11166$01176) + 1)|0;
                $16738 = ($iij11166$0|0)<($$2487|0);
                if ($16738) {
                 $iij11166$01176 = $iij11166$0;
                } else {
                 break L472;
                }
               }
               HEAP8[$$lcssa2740>>0] = 0;
               $16751 = $iij11166$01176$lcssa&255;
               HEAP8[$5>>0] = $16751;
              }
             } while(0);
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
            }
            $16752 = (($ij11165$01179) + 1)|0;
            $exitcond2178 = ($16752|0)==($$2487|0);
            if ($exitcond2178) {
             break L43;
            } else {
             $ij11165$01179 = $16752;
            }
           }
          }
         } while(0);
         $16753 = +HEAPF64[$43>>3];
         $16754 = (+__Z5IKabsd($16753));
         $16755 = +HEAPF64[$this>>3];
         $16756 = (+__Z6IKfmoddd($16755,6.2831853071795898));
         $16757 = $16756 + -3.14159265358979;
         $16758 = (+__Z5IKabsd($16757));
         $16759 = $16754 + $16758;
         $16760 = +HEAPF64[$45>>3];
         $16761 = (+__Z5IKabsd($16759));
         $16762 = $16761 < 9.9999999999999995E-7;
         do {
          if ($16762) {
           $16763 = $16760 * $16760;
           $16764 = 0.72250000000000003 - $16763;
           $16765 = (+__Z5IKabsd($16764));
           $16766 = $16765 < 9.9999999999999995E-7;
           if (!($16766)) {
            break;
           }
           $16767 = (+__Z5IKabsd(-0.84999999999999998));
           $16768 = $16767 < 9.9999999999999995E-7;
           if (!($16768)) {
            break;
           }
           $16769 = (+__Z5IKabsd($16760));
           $16770 = $16769 < 9.9999999999999995E-7;
           if (!($16770)) {
            break;
           }
           $16771 = (+__Z5IKabsd(0.0));
           $16772 = $16771 < 9.9999999999999995E-7;
           if (!($16772)) {
            break;
           }
           $16773 = (+__Z5IKabsd(-0.93500000000000005));
           $16774 = $16773 < 9.9999999999999995E-7;
           if (!($16774)) {
            break;
           }
           $16775 = -$16760;
           HEAPF64[$24>>3] = 0.0;
           HEAPF64[$23>>3] = -1.0;
           HEAPF64[$22>>3] = 3.14159265358979;
           HEAPF64[$47>>3] = 0.0;
           HEAPF64[$7>>3] = 0.0;
           HEAPF64[$76>>3] = 0.0;
           HEAPF64[$75>>3] = 1.0;
           $16776 = +HEAPF64[$45>>3];
           $16777 = $16776 * $16776;
           HEAPF64[$60>>3] = $16777;
           $16778 = +HEAPF64[$45>>3];
           $16779 = +HEAPF64[$32>>3];
           $16780 = $16778 * $16779;
           HEAPF64[$61>>3] = $16780;
           $16781 = +HEAPF64[$45>>3];
           $16782 = +HEAPF64[$34>>3];
           $16783 = $16781 * $16782;
           HEAPF64[$62>>3] = $16783;
           $16784 = +HEAPF64[$45>>3];
           $16785 = +HEAPF64[$36>>3];
           $16786 = $16784 * $16785;
           HEAPF64[$63>>3] = $16786;
           $16787 = +HEAPF64[$38>>3];
           $16788 = $16787 * $16775;
           HEAPF64[$64>>3] = $16788;
           HEAPF64[$65>>3] = 0.0;
           $16789 = +HEAPF64[$40>>3];
           $16790 = $16789 * $16775;
           HEAPF64[$67>>3] = $16790;
           HEAPF64[$68>>3] = 0.0;
           $16791 = +HEAPF64[$42>>3];
           $16792 = $16791 * $16775;
           HEAPF64[$70>>3] = $16792;
           HEAPF64[$71>>3] = 0.0;
           HEAPF64[$43>>3] = 0.0;
           HEAPF64[$this>>3] = 3.14159265358979;
           HEAPF64[$606>>3] = 0.0;
           HEAPF64[$605>>3] = -1.0;
           $16793 = +HEAPF64[$45>>3];
           $16794 = +HEAPF64[$26>>3];
           $16795 = $16793 * $16794;
           HEAPF64[$66>>3] = $16795;
           $16796 = +HEAPF64[$45>>3];
           $16797 = +HEAPF64[$28>>3];
           $16798 = $16796 * $16797;
           HEAPF64[$69>>3] = $16798;
           $16799 = +HEAPF64[$45>>3];
           $16800 = +HEAPF64[$30>>3];
           $16801 = $16799 * $16800;
           HEAPF64[$72>>3] = $16801;
           $16802 = (+__Z5IKabsd(1.0));
           $16803 = $16802 < 1.0E-8;
           if ($16803) {
            break L43;
           }
           HEAPF64[$op1169>>3] = 1.0;
           HEAPF64[$657>>3] = 0.0;
           HEAPF64[$658>>3] = -1.0;
           __ZN8IKSolver10polyroots2EPdS0_Ri($op1169,$zeror1170,$numroots1171);
           $16804 = HEAP32[$numroots1171>>2]|0;
           $16805 = ($16804|0)>(0);
           if (!($16805)) {
            HEAP16[$j1valid1180>>1] = 257;
            HEAP8[$6>>0] = 2;
            break L43;
           }
           $16806 = HEAP32[$numroots1171>>2]|0;
           $16807 = ($16806|0)>(1);
           $ij11177$01155 = 0;
           while(1) {
            $16808 = (($zeror1170) + ($ij11177$01155<<3)|0);
            $16809 = +HEAPF64[$16808>>3];
            $16810 = (+Math_atan((+$16809)));
            $16811 = $16810 * 2.0;
            $16812 = $16811 + 6.2831853071795898;
            $16813 = $16811 > 3.14159265358979;
            $16814 = (($j1array1172) + ($ij11177$01155<<3)|0);
            HEAPF64[$16814>>3] = $16811;
            do {
             if ($16813) {
              $16815 = $16811 + -6.2831853071795898;
              HEAPF64[$16814>>3] = $16815;
             } else {
              $16816 = $16811 < -3.14159265358979;
              if (!($16816)) {
               break;
              }
              HEAPF64[$16814>>3] = $16812;
             }
            } while(0);
            $16817 = +HEAPF64[$16814>>3];
            $16818 = (+__Z5IKsind($16817));
            $16819 = (($sj1array1174) + ($ij11177$01155<<3)|0);
            HEAPF64[$16819>>3] = $16818;
            $16820 = +HEAPF64[$16814>>3];
            $16821 = (+__Z5IKcosd($16820));
            $16822 = (($cj1array1173) + ($ij11177$01155<<3)|0);
            HEAPF64[$16822>>3] = $16821;
            $16823 = (($ij11177$01155) + 1)|0;
            $16824 = ($16823|0)<($16806|0);
            if ($16824) {
             $ij11177$01155 = $16823;
            } else {
             break;
            }
           }
           $$2488 = $16807 ? $16806 : 1;
           HEAP16[$j1valid1180>>1] = 257;
           HEAP8[$6>>0] = 2;
           $ij11181$01164 = 0;
           while(1) {
            $16825 = (($j1valid1180) + ($ij11181$01164)|0);
            $16826 = HEAP8[$16825>>0]|0;
            $16827 = ($16826<<24>>24)==(0);
            if (!($16827)) {
             $16828 = (($j1array1172) + ($ij11181$01164<<3)|0);
             $16829 = +HEAPF64[$16828>>3];
             HEAPF64[$3>>3] = $16829;
             $16830 = (($cj1array1173) + ($ij11181$01164<<3)|0);
             $16831 = +HEAPF64[$16830>>3];
             HEAPF64[$659>>3] = $16831;
             $16832 = (($sj1array1174) + ($ij11181$01164<<3)|0);
             $16833 = +HEAPF64[$16832>>3];
             HEAPF64[$660>>3] = $16833;
             $16834 = +HEAPF64[$3>>3];
             $16835 = $16834 * 0.5;
             $16836 = (+__Z5IKtand($16835));
             HEAPF64[$661>>3] = $16836;
             $16837 = $ij11181$01164&255;
             HEAP8[$4>>0] = $16837;
             HEAP8[$5>>0] = -1;
             $iij11182$01160 = (($ij11181$01164) + 1)|0;
             $16838 = ($iij11182$01160|0)<($$2488|0);
             L506: do {
              if ($16838) {
               $iij11182$01161 = $iij11182$01160;
               L507: while(1) {
                $16839 = (($j1valid1180) + ($iij11182$01161)|0);
                $16840 = HEAP8[$16839>>0]|0;
                $16841 = ($16840<<24>>24)==(0);
                do {
                 if (!($16841)) {
                  $16843 = +HEAPF64[$16830>>3];
                  $16844 = (($cj1array1173) + ($iij11182$01161<<3)|0);
                  $16845 = +HEAPF64[$16844>>3];
                  $16846 = $16843 - $16845;
                  $16847 = (+__Z5IKabsd($16846));
                  $16848 = $16847 < 9.9999999999999995E-7;
                  if (!($16848)) {
                   break;
                  }
                  $16849 = +HEAPF64[$16832>>3];
                  $16850 = (($sj1array1174) + ($iij11182$01161<<3)|0);
                  $16851 = +HEAPF64[$16850>>3];
                  $16852 = $16849 - $16851;
                  $16853 = (+__Z5IKabsd($16852));
                  $16854 = $16853 < 9.9999999999999995E-7;
                  if ($16854) {
                   $$lcssa2737 = $16839;$iij11182$01161$lcssa = $iij11182$01161;
                   break L507;
                  }
                 }
                } while(0);
                $iij11182$0 = (($iij11182$01161) + 1)|0;
                $16842 = ($iij11182$0|0)<($$2488|0);
                if ($16842) {
                 $iij11182$01161 = $iij11182$0;
                } else {
                 break L506;
                }
               }
               HEAP8[$$lcssa2737>>0] = 0;
               $16855 = $iij11182$01161$lcssa&255;
               HEAP8[$5>>0] = $16855;
              }
             } while(0);
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
            }
            $16856 = (($ij11181$01164) + 1)|0;
            $exitcond2176 = ($16856|0)==($$2488|0);
            if ($exitcond2176) {
             break L43;
            } else {
             $ij11181$01164 = $16856;
            }
           }
          }
         } while(0);
         $16857 = +HEAPF64[$45>>3];
         $16858 = (+__Z5IKabsd($16857));
         $16859 = +HEAPF64[$this>>3];
         $16860 = $16859 + 1.5707963267949001;
         $16861 = (+__Z6IKfmoddd($16860,6.2831853071795898));
         $16862 = $16861 + -3.14159265358979;
         $16863 = (+__Z5IKabsd($16862));
         $16864 = $16858 + $16863;
         $16865 = +HEAPF64[$43>>3];
         $16866 = (+__Z5IKabsd($16864));
         $16867 = $16866 < 9.9999999999999995E-7;
         do {
          if ($16867) {
           $16868 = $16865 * $16865;
           $16869 = 0.72250000000000003 - $16868;
           $16870 = (+__Z5IKabsd($16869));
           $16871 = $16870 < 9.9999999999999995E-7;
           if (!($16871)) {
            break;
           }
           $16872 = (+__Z5IKabsd(-0.84999999999999998));
           $16873 = $16872 < 9.9999999999999995E-7;
           if (!($16873)) {
            break;
           }
           $16874 = (+__Z5IKabsd($16865));
           $16875 = $16874 < 9.9999999999999995E-7;
           if (!($16875)) {
            break;
           }
           $16876 = (+__Z5IKabsd(0.0));
           $16877 = $16876 < 9.9999999999999995E-7;
           if (!($16877)) {
            break;
           }
           $16878 = (+__Z5IKabsd(-0.93500000000000005));
           $16879 = $16878 < 9.9999999999999995E-7;
           if (!($16879)) {
            break;
           }
           $16880 = -$16865;
           HEAPF64[$24>>3] = 0.0;
           HEAPF64[$23>>3] = -1.0;
           HEAPF64[$22>>3] = 3.14159265358979;
           HEAPF64[$47>>3] = 0.0;
           HEAPF64[$7>>3] = 0.0;
           HEAPF64[$76>>3] = 0.0;
           HEAPF64[$75>>3] = 1.0;
           $16881 = +HEAPF64[$43>>3];
           $16882 = $16881 * $16881;
           HEAPF64[$60>>3] = $16882;
           $16883 = +HEAPF64[$43>>3];
           $16884 = +HEAPF64[$26>>3];
           $16885 = $16883 * $16884;
           HEAPF64[$61>>3] = $16885;
           $16886 = +HEAPF64[$43>>3];
           $16887 = +HEAPF64[$28>>3];
           $16888 = $16886 * $16887;
           HEAPF64[$62>>3] = $16888;
           $16889 = +HEAPF64[$43>>3];
           $16890 = +HEAPF64[$30>>3];
           $16891 = $16889 * $16890;
           HEAPF64[$63>>3] = $16891;
           HEAPF64[$64>>3] = 0.0;
           $16892 = +HEAPF64[$43>>3];
           $16893 = +HEAPF64[$38>>3];
           $16894 = $16892 * $16893;
           HEAPF64[$65>>3] = $16894;
           HEAPF64[$67>>3] = 0.0;
           $16895 = +HEAPF64[$43>>3];
           $16896 = +HEAPF64[$40>>3];
           $16897 = $16895 * $16896;
           HEAPF64[$68>>3] = $16897;
           HEAPF64[$70>>3] = 0.0;
           $16898 = +HEAPF64[$43>>3];
           $16899 = +HEAPF64[$42>>3];
           $16900 = $16898 * $16899;
           HEAPF64[$71>>3] = $16900;
           HEAPF64[$45>>3] = 0.0;
           HEAPF64[$this>>3] = 1.5707963267949001;
           HEAPF64[$606>>3] = 1.0;
           HEAPF64[$605>>3] = 0.0;
           $16901 = +HEAPF64[$32>>3];
           $16902 = $16901 * $16880;
           HEAPF64[$66>>3] = $16902;
           $16903 = +HEAPF64[$34>>3];
           $16904 = $16903 * $16880;
           HEAPF64[$69>>3] = $16904;
           $16905 = +HEAPF64[$36>>3];
           $16906 = $16905 * $16880;
           HEAPF64[$72>>3] = $16906;
           $16907 = (+__Z5IKabsd(1.0));
           $16908 = $16907 < 1.0E-8;
           if ($16908) {
            break L43;
           }
           HEAPF64[$op1185>>3] = 1.0;
           HEAPF64[$662>>3] = 0.0;
           HEAPF64[$663>>3] = -1.0;
           __ZN8IKSolver10polyroots2EPdS0_Ri($op1185,$zeror1186,$numroots1187);
           $16909 = HEAP32[$numroots1187>>2]|0;
           $16910 = ($16909|0)>(0);
           if (!($16910)) {
            HEAP16[$j1valid1196>>1] = 257;
            HEAP8[$6>>0] = 2;
            break L43;
           }
           $16911 = HEAP32[$numroots1187>>2]|0;
           $16912 = ($16911|0)>(1);
           $ij11193$01140 = 0;
           while(1) {
            $16913 = (($zeror1186) + ($ij11193$01140<<3)|0);
            $16914 = +HEAPF64[$16913>>3];
            $16915 = (+Math_atan((+$16914)));
            $16916 = $16915 * 2.0;
            $16917 = $16916 + 6.2831853071795898;
            $16918 = $16916 > 3.14159265358979;
            $16919 = (($j1array1188) + ($ij11193$01140<<3)|0);
            HEAPF64[$16919>>3] = $16916;
            do {
             if ($16918) {
              $16920 = $16916 + -6.2831853071795898;
              HEAPF64[$16919>>3] = $16920;
             } else {
              $16921 = $16916 < -3.14159265358979;
              if (!($16921)) {
               break;
              }
              HEAPF64[$16919>>3] = $16917;
             }
            } while(0);
            $16922 = +HEAPF64[$16919>>3];
            $16923 = (+__Z5IKsind($16922));
            $16924 = (($sj1array1190) + ($ij11193$01140<<3)|0);
            HEAPF64[$16924>>3] = $16923;
            $16925 = +HEAPF64[$16919>>3];
            $16926 = (+__Z5IKcosd($16925));
            $16927 = (($cj1array1189) + ($ij11193$01140<<3)|0);
            HEAPF64[$16927>>3] = $16926;
            $16928 = (($ij11193$01140) + 1)|0;
            $16929 = ($16928|0)<($16911|0);
            if ($16929) {
             $ij11193$01140 = $16928;
            } else {
             break;
            }
           }
           $$2489 = $16912 ? $16911 : 1;
           HEAP16[$j1valid1196>>1] = 257;
           HEAP8[$6>>0] = 2;
           $ij11197$01149 = 0;
           while(1) {
            $16930 = (($j1valid1196) + ($ij11197$01149)|0);
            $16931 = HEAP8[$16930>>0]|0;
            $16932 = ($16931<<24>>24)==(0);
            if (!($16932)) {
             $16933 = (($j1array1188) + ($ij11197$01149<<3)|0);
             $16934 = +HEAPF64[$16933>>3];
             HEAPF64[$3>>3] = $16934;
             $16935 = (($cj1array1189) + ($ij11197$01149<<3)|0);
             $16936 = +HEAPF64[$16935>>3];
             HEAPF64[$664>>3] = $16936;
             $16937 = (($sj1array1190) + ($ij11197$01149<<3)|0);
             $16938 = +HEAPF64[$16937>>3];
             HEAPF64[$665>>3] = $16938;
             $16939 = +HEAPF64[$3>>3];
             $16940 = $16939 * 0.5;
             $16941 = (+__Z5IKtand($16940));
             HEAPF64[$666>>3] = $16941;
             $16942 = $ij11197$01149&255;
             HEAP8[$4>>0] = $16942;
             HEAP8[$5>>0] = -1;
             $iij11198$01145 = (($ij11197$01149) + 1)|0;
             $16943 = ($iij11198$01145|0)<($$2489|0);
             L540: do {
              if ($16943) {
               $iij11198$01146 = $iij11198$01145;
               L541: while(1) {
                $16944 = (($j1valid1196) + ($iij11198$01146)|0);
                $16945 = HEAP8[$16944>>0]|0;
                $16946 = ($16945<<24>>24)==(0);
                do {
                 if (!($16946)) {
                  $16948 = +HEAPF64[$16935>>3];
                  $16949 = (($cj1array1189) + ($iij11198$01146<<3)|0);
                  $16950 = +HEAPF64[$16949>>3];
                  $16951 = $16948 - $16950;
                  $16952 = (+__Z5IKabsd($16951));
                  $16953 = $16952 < 9.9999999999999995E-7;
                  if (!($16953)) {
                   break;
                  }
                  $16954 = +HEAPF64[$16937>>3];
                  $16955 = (($sj1array1190) + ($iij11198$01146<<3)|0);
                  $16956 = +HEAPF64[$16955>>3];
                  $16957 = $16954 - $16956;
                  $16958 = (+__Z5IKabsd($16957));
                  $16959 = $16958 < 9.9999999999999995E-7;
                  if ($16959) {
                   $$lcssa2734 = $16944;$iij11198$01146$lcssa = $iij11198$01146;
                   break L541;
                  }
                 }
                } while(0);
                $iij11198$0 = (($iij11198$01146) + 1)|0;
                $16947 = ($iij11198$0|0)<($$2489|0);
                if ($16947) {
                 $iij11198$01146 = $iij11198$0;
                } else {
                 break L540;
                }
               }
               HEAP8[$$lcssa2734>>0] = 0;
               $16960 = $iij11198$01146$lcssa&255;
               HEAP8[$5>>0] = $16960;
              }
             } while(0);
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
            }
            $16961 = (($ij11197$01149) + 1)|0;
            $exitcond2174 = ($16961|0)==($$2489|0);
            if ($exitcond2174) {
             break L43;
            } else {
             $ij11197$01149 = $16961;
            }
           }
          }
         } while(0);
         $16962 = +HEAPF64[$45>>3];
         $16963 = (+__Z5IKabsd($16962));
         $16964 = +HEAPF64[$this>>3];
         $16965 = $16964 + 4.7123889803846897;
         $16966 = (+__Z6IKfmoddd($16965,6.2831853071795898));
         $16967 = $16966 + -3.14159265358979;
         $16968 = (+__Z5IKabsd($16967));
         $16969 = $16963 + $16968;
         $16970 = +HEAPF64[$43>>3];
         $16971 = -$16970;
         $16972 = (+__Z5IKabsd($16969));
         $16973 = $16972 < 9.9999999999999995E-7;
         if (!($16973)) {
          break;
         }
         $16974 = $16970 * $16970;
         $16975 = 0.72250000000000003 - $16974;
         $16976 = (+__Z5IKabsd($16975));
         $16977 = $16976 < 9.9999999999999995E-7;
         if (!($16977)) {
          break;
         }
         $16978 = (+__Z5IKabsd(-0.84999999999999998));
         $16979 = $16978 < 9.9999999999999995E-7;
         if (!($16979)) {
          break;
         }
         $16980 = (+__Z5IKabsd($16971));
         $16981 = $16980 < 9.9999999999999995E-7;
         if (!($16981)) {
          break;
         }
         $16982 = (+__Z5IKabsd(0.0));
         $16983 = $16982 < 9.9999999999999995E-7;
         if (!($16983)) {
          break;
         }
         $16984 = (+__Z5IKabsd(-0.93500000000000005));
         $16985 = $16984 < 9.9999999999999995E-7;
         if (!($16985)) {
          break;
         }
         HEAPF64[$24>>3] = 0.0;
         HEAPF64[$23>>3] = -1.0;
         HEAPF64[$22>>3] = 3.14159265358979;
         HEAPF64[$47>>3] = 0.0;
         HEAPF64[$7>>3] = 0.0;
         HEAPF64[$76>>3] = 0.0;
         HEAPF64[$75>>3] = 1.0;
         $16986 = +HEAPF64[$43>>3];
         $16987 = $16986 * $16986;
         HEAPF64[$60>>3] = $16987;
         $16988 = +HEAPF64[$43>>3];
         $16989 = +HEAPF64[$26>>3];
         $16990 = $16988 * $16989;
         HEAPF64[$61>>3] = $16990;
         $16991 = +HEAPF64[$43>>3];
         $16992 = +HEAPF64[$28>>3];
         $16993 = $16991 * $16992;
         HEAPF64[$62>>3] = $16993;
         $16994 = +HEAPF64[$43>>3];
         $16995 = +HEAPF64[$30>>3];
         $16996 = $16994 * $16995;
         HEAPF64[$63>>3] = $16996;
         HEAPF64[$64>>3] = 0.0;
         $16997 = +HEAPF64[$43>>3];
         $16998 = +HEAPF64[$38>>3];
         $16999 = $16997 * $16998;
         HEAPF64[$65>>3] = $16999;
         HEAPF64[$67>>3] = 0.0;
         $17000 = +HEAPF64[$43>>3];
         $17001 = +HEAPF64[$40>>3];
         $17002 = $17000 * $17001;
         HEAPF64[$68>>3] = $17002;
         HEAPF64[$70>>3] = 0.0;
         $17003 = +HEAPF64[$43>>3];
         $17004 = +HEAPF64[$42>>3];
         $17005 = $17003 * $17004;
         HEAPF64[$71>>3] = $17005;
         HEAPF64[$45>>3] = 0.0;
         HEAPF64[$this>>3] = -1.5707963267949001;
         HEAPF64[$606>>3] = -1.0;
         HEAPF64[$605>>3] = 0.0;
         $17006 = +HEAPF64[$32>>3];
         $17007 = $17006 * $16971;
         HEAPF64[$66>>3] = $17007;
         $17008 = +HEAPF64[$34>>3];
         $17009 = $17008 * $16971;
         HEAPF64[$69>>3] = $17009;
         $17010 = +HEAPF64[$36>>3];
         $17011 = $17010 * $16971;
         HEAPF64[$72>>3] = $17011;
         $17012 = (+__Z5IKabsd(1.0));
         $17013 = $17012 < 1.0E-8;
         if ($17013) {
          break;
         }
         HEAPF64[$op1201>>3] = 1.0;
         HEAPF64[$667>>3] = 0.0;
         HEAPF64[$668>>3] = -1.0;
         __ZN8IKSolver10polyroots2EPdS0_Ri($op1201,$zeror1202,$numroots1203);
         $17014 = HEAP32[$numroots1203>>2]|0;
         $17015 = ($17014|0)>(0);
         if (!($17015)) {
          HEAP16[$j1valid1212>>1] = 257;
          HEAP8[$6>>0] = 2;
          break;
         }
         $17016 = HEAP32[$numroots1203>>2]|0;
         $17017 = ($17016|0)>(1);
         $ij11209$01128 = 0;
         while(1) {
          $17018 = (($zeror1202) + ($ij11209$01128<<3)|0);
          $17019 = +HEAPF64[$17018>>3];
          $17020 = (+Math_atan((+$17019)));
          $17021 = $17020 * 2.0;
          $17022 = $17021 + 6.2831853071795898;
          $17023 = $17021 > 3.14159265358979;
          $17024 = (($j1array1204) + ($ij11209$01128<<3)|0);
          HEAPF64[$17024>>3] = $17021;
          do {
           if ($17023) {
            $17025 = $17021 + -6.2831853071795898;
            HEAPF64[$17024>>3] = $17025;
           } else {
            $17026 = $17021 < -3.14159265358979;
            if (!($17026)) {
             break;
            }
            HEAPF64[$17024>>3] = $17022;
           }
          } while(0);
          $17027 = +HEAPF64[$17024>>3];
          $17028 = (+__Z5IKsind($17027));
          $17029 = (($sj1array1206) + ($ij11209$01128<<3)|0);
          HEAPF64[$17029>>3] = $17028;
          $17030 = +HEAPF64[$17024>>3];
          $17031 = (+__Z5IKcosd($17030));
          $17032 = (($cj1array1205) + ($ij11209$01128<<3)|0);
          HEAPF64[$17032>>3] = $17031;
          $17033 = (($ij11209$01128) + 1)|0;
          $17034 = ($17033|0)<($17016|0);
          if ($17034) {
           $ij11209$01128 = $17033;
          } else {
           break;
          }
         }
         $$2490 = $17017 ? $17016 : 1;
         HEAP16[$j1valid1212>>1] = 257;
         HEAP8[$6>>0] = 2;
         $ij11213$01134 = 0;
         while(1) {
          $17035 = (($j1valid1212) + ($ij11213$01134)|0);
          $17036 = HEAP8[$17035>>0]|0;
          $17037 = ($17036<<24>>24)==(0);
          if (!($17037)) {
           $17038 = (($j1array1204) + ($ij11213$01134<<3)|0);
           $17039 = +HEAPF64[$17038>>3];
           HEAPF64[$3>>3] = $17039;
           $17040 = (($cj1array1205) + ($ij11213$01134<<3)|0);
           $17041 = +HEAPF64[$17040>>3];
           HEAPF64[$669>>3] = $17041;
           $17042 = (($sj1array1206) + ($ij11213$01134<<3)|0);
           $17043 = +HEAPF64[$17042>>3];
           HEAPF64[$670>>3] = $17043;
           $17044 = +HEAPF64[$3>>3];
           $17045 = $17044 * 0.5;
           $17046 = (+__Z5IKtand($17045));
           HEAPF64[$671>>3] = $17046;
           $17047 = $ij11213$01134&255;
           HEAP8[$4>>0] = $17047;
           HEAP8[$5>>0] = -1;
           $iij11214$01130 = (($ij11213$01134) + 1)|0;
           $17048 = ($iij11214$01130|0)<($$2490|0);
           L573: do {
            if ($17048) {
             $iij11214$01131 = $iij11214$01130;
             L574: while(1) {
              $17049 = (($j1valid1212) + ($iij11214$01131)|0);
              $17050 = HEAP8[$17049>>0]|0;
              $17051 = ($17050<<24>>24)==(0);
              do {
               if (!($17051)) {
                $17053 = +HEAPF64[$17040>>3];
                $17054 = (($cj1array1205) + ($iij11214$01131<<3)|0);
                $17055 = +HEAPF64[$17054>>3];
                $17056 = $17053 - $17055;
                $17057 = (+__Z5IKabsd($17056));
                $17058 = $17057 < 9.9999999999999995E-7;
                if (!($17058)) {
                 break;
                }
                $17059 = +HEAPF64[$17042>>3];
                $17060 = (($sj1array1206) + ($iij11214$01131<<3)|0);
                $17061 = +HEAPF64[$17060>>3];
                $17062 = $17059 - $17061;
                $17063 = (+__Z5IKabsd($17062));
                $17064 = $17063 < 9.9999999999999995E-7;
                if ($17064) {
                 $$lcssa = $17049;$iij11214$01131$lcssa = $iij11214$01131;
                 break L574;
                }
               }
              } while(0);
              $iij11214$0 = (($iij11214$01131) + 1)|0;
              $17052 = ($iij11214$0|0)<($$2490|0);
              if ($17052) {
               $iij11214$01131 = $iij11214$0;
              } else {
               break L573;
              }
             }
             HEAP8[$$lcssa>>0] = 0;
             $17065 = $iij11214$01131$lcssa&255;
             HEAP8[$5>>0] = $17065;
            }
           } while(0);
           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
          }
          $17066 = (($ij11213$01134) + 1)|0;
          $exitcond = ($17066|0)==($$2490|0);
          if ($exitcond) {
           break;
          } else {
           $ij11213$01134 = $17066;
          }
         }
        }
       } while(0);
       $18335 = (($ij0999$01292) + 1)|0;
       $exitcond2195 = ($18335|0)==(2);
       if ($exitcond2195) {
        break L16;
       } else {
        $ij0999$01292 = $18335;
       }
      }
     }
    }
    $1086 = +HEAPF64[$23>>3];
    $1087 = $1086 * $1086;
    $1088 = +HEAPF64[$76>>3];
    $1089 = $1088 * $1088;
    $1090 = +HEAPF64[$75>>3];
    $1091 = $1090 * $1090;
    $1092 = $1086 * 3.0;
    $1093 = $1090 * 13.3333333333333;
    $1094 = $1088 * $1093;
    $1095 = $1086 * 20.0;
    $1096 = $1095 * $1088;
    $1097 = $1092 + $1096;
    $1098 = $1092 * $1090;
    $1099 = $1097 - $1098;
    $1100 = (+__Z5IKabsd($1099));
    $1101 = $1088 * 0.044999999999999998;
    $1102 = -0.55000000000000004 - $1101;
    $1103 = $1090 * 0.29999999999999999;
    $1104 = $1102 - $1103;
    $1105 = (+__Z5IKabsd($1104));
    $1106 = $1105 * 66.6666666666667;
    $1107 = $1100 + $1106;
    $1108 = (+__Z5IKabsd($1107));
    $1109 = $1108 < 9.9999999999999995E-7;
    if (!($1109)) {
     $1110 = $1087 * $1091;
     $1111 = $1110 + 149.38271604938299;
     $1112 = $1088 * 24.4444444444444;
     $1113 = $1112 + $1111;
     $1114 = $1088 * 13.3333333333333;
     $1115 = $1087 * $1114;
     $1116 = $1115 + $1113;
     $1117 = $1087 * $1094;
     $1118 = $1116 - $1117;
     $1119 = $1090 * -2.0;
     $1120 = $1087 * $1119;
     $1121 = $1120 + $1118;
     $1122 = $1087 * 44.4444444444444;
     $1123 = $1122 * $1089;
     $1124 = $1123 + $1121;
     $1125 = $1087 + $1124;
     $1126 = $1094 + $1125;
     $1127 = $1089 + $1126;
     $1128 = $1091 * 44.4444444444444;
     $1129 = $1128 + $1127;
     $1130 = $1090 * 162.96296296296299;
     $1131 = $1130 + $1129;
     $1132 = (+__Z5IKabsd($1131));
     $1133 = $1132 < 9.9999999999999995E-7;
     if (!($1133)) {
      HEAP16[$j1valid263>>1] = 0;
      HEAP8[$6>>0] = 2;
      $4813 = +HEAPF64[$23>>3];
      $4814 = $4813 * 0.044999999999999998;
      $4815 = +HEAPF64[$76>>3];
      $4816 = $4815 * 0.044999999999999998;
      $4817 = -0.55000000000000004 - $4816;
      $4818 = +HEAPF64[$75>>3];
      $4819 = $4818 * 0.29999999999999999;
      $4820 = $4817 - $4819;
      $4821 = $4814 * $4818;
      $4822 = $4813 * 0.29999999999999999;
      $4823 = $4822 * $4815;
      $4824 = $4823 - $4821;
      $4825 = $4814 + $4824;
      __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x893,$4820,$4825,1.9999999999999999E-6);
      $4826 = HEAP8[$177>>0]|0;
      $4827 = ($4826<<24>>24)==(0);
      if ($4827) {
       break;
      }
      $4828 = +HEAPF64[$x893>>3];
      $4829 = $4820 * $4820;
      $4830 = $4825 * $4825;
      $4831 = $4829 + $4830;
      $4832 = $4831 < -1.0000000000000001E-5;
      if ($4832) {
       break;
      }
      $4833 = (+__Z6IKsqrtd($4831));
      $4834 = (+__Z5IKabsd($4833));
      __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x894,$4834,-1);
      $4835 = HEAP8[$178>>0]|0;
      $4836 = ($4835<<24>>24)==(0);
      if ($4836) {
       break;
      }
      $4837 = +HEAPF64[$47>>3];
      $4838 = +HEAPF64[$x894>>3];
      $4839 = $4837 * $4838;
      $4840 = $4839 < -1.0000020000000001;
      $4841 = $4839 > 1.0000020000000001;
      $or$cond160 = $4840 | $4841;
      if ($or$cond160) {
       break;
      }
      $4842 = (+__Z6IKasind($4839));
      $4843 = -$4842;
      $4844 = $4843 - $4828;
      HEAPF64[$j1array260>>3] = $4844;
      $4845 = (+__Z5IKsind($4844));
      HEAPF64[$sj1array262>>3] = $4845;
      $4846 = (+__Z5IKcosd($4844));
      HEAPF64[$cj1array261>>3] = $4846;
      $4847 = 3.14159265358979 - $4828;
      $4848 = $4847 + $4842;
      HEAPF64[$179>>3] = $4848;
      $4849 = (+__Z5IKsind($4848));
      HEAPF64[$180>>3] = $4849;
      $4850 = +HEAPF64[$179>>3];
      $4851 = (+__Z5IKcosd($4850));
      HEAPF64[$181>>3] = $4851;
      $4852 = +HEAPF64[$j1array260>>3];
      $4853 = $4852 > 3.14159265358979;
      if ($4853) {
       $4854 = $4852 + -6.2831853071795898;
       HEAPF64[$j1array260>>3] = $4854;
      } else {
       $4855 = $4852 < -3.14159265358979;
       if ($4855) {
        $4856 = $4852 + 6.2831853071795898;
        HEAPF64[$j1array260>>3] = $4856;
       }
      }
      HEAP8[$j1valid263>>0] = 1;
      $4857 = +HEAPF64[$179>>3];
      $4858 = $4857 > 3.14159265358979;
      if ($4858) {
       $4859 = $4857 + -6.2831853071795898;
       HEAPF64[$179>>3] = $4859;
      } else {
       $4860 = $4857 < -3.14159265358979;
       if ($4860) {
        $4861 = $4857 + 6.2831853071795898;
        HEAPF64[$179>>3] = $4861;
       }
      }
      HEAP8[$182>>0] = 1;
      $ij1264$01702 = 0;
      while(1) {
       $4862 = (($j1valid263) + ($ij1264$01702)|0);
       $4863 = HEAP8[$4862>>0]|0;
       $4864 = ($4863<<24>>24)==(0);
       L604: do {
        if (!($4864)) {
         $4865 = $ij1264$01702&255;
         HEAP8[$4>>0] = $4865;
         HEAP8[$5>>0] = -1;
         $iij1265$01293 = (($ij1264$01702) + 1)|0;
         $4866 = ($iij1265$01293|0)<(2);
         do {
          if ($4866) {
           $4867 = (($sj1array262) + ($ij1264$01702<<3)|0);
           $4868 = (($j1valid263) + ($iij1265$01293)|0);
           $4869 = HEAP8[$4868>>0]|0;
           $4870 = ($4869<<24>>24)==(0);
           if ($4870) {
            break;
           }
           $4871 = (($cj1array261) + ($ij1264$01702<<3)|0);
           $4872 = +HEAPF64[$4871>>3];
           $4873 = (($cj1array261) + ($iij1265$01293<<3)|0);
           $4874 = +HEAPF64[$4873>>3];
           $4875 = $4872 - $4874;
           $4876 = (+__Z5IKabsd($4875));
           $4877 = $4876 < 9.9999999999999995E-7;
           if (!($4877)) {
            break;
           }
           $4878 = +HEAPF64[$4867>>3];
           $4879 = (($sj1array262) + ($iij1265$01293<<3)|0);
           $4880 = +HEAPF64[$4879>>3];
           $4881 = $4878 - $4880;
           $4882 = (+__Z5IKabsd($4881));
           $4883 = $4882 < 9.9999999999999995E-7;
           if (!($4883)) {
            break;
           }
           HEAP8[$4868>>0] = 0;
           $4884 = $iij1265$01293&255;
           HEAP8[$5>>0] = $4884;
          }
         } while(0);
         $4885 = (($j1array260) + ($ij1264$01702<<3)|0);
         $4886 = +HEAPF64[$4885>>3];
         HEAPF64[$3>>3] = $4886;
         $4887 = (($cj1array261) + ($ij1264$01702<<3)|0);
         $4888 = +HEAPF64[$4887>>3];
         HEAPF64[$183>>3] = $4888;
         $4889 = (($sj1array262) + ($ij1264$01702<<3)|0);
         $4890 = +HEAPF64[$4889>>3];
         HEAPF64[$184>>3] = $4890;
         $4891 = +HEAPF64[$60>>3];
         $4892 = $4890 * $4891;
         $4893 = +HEAPF64[$47>>3];
         $4894 = $4893 * $4893;
         $4895 = $4890 * $4894;
         $4896 = $4892 - $4895;
         $4897 = (+__Z5IKabsd($4896));
         $4898 = $4897 < 9.9999999999999995E-7;
         do {
          if (!($4898)) {
           $4899 = (+__Z6IKsignd($4896));
           $4900 = (+__Z5IKabsd($4899));
           $4901 = $4900 < 9.9999999999999995E-7;
           if ($4901) {
            break;
           }
           HEAP8[$2>>0] = 1;
           $14572 = +HEAPF64[$43>>3];
           $14573 = $14572 * 0.044999999999999998;
           $14574 = +HEAPF64[$76>>3];
           $14575 = $14574 * 0.29999999999999999;
           $14576 = +HEAPF64[$184>>3];
           $14577 = +HEAPF64[$24>>3];
           $14578 = $14576 * $14577;
           $14579 = +HEAPF64[$75>>3];
           $14580 = $14579 * 0.29999999999999999;
           $14581 = +HEAPF64[$45>>3];
           $14582 = $14578 * $14581;
           $14583 = +HEAPF64[$183>>3];
           $14584 = +HEAPF64[$47>>3];
           $14585 = $14583 * $14584;
           $14586 = -$14572;
           $14587 = $14575 * $14586;
           $14588 = $14587 * $14578;
           $14589 = $14581 * 0.044999999999999998;
           $14590 = $14574 * $14589;
           $14591 = $14588 + $14590;
           $14592 = $14581 * $14580;
           $14593 = $14592 + $14591;
           $14594 = $14581 * $14585;
           $14595 = $14593 - $14594;
           $14596 = $14573 * $14579;
           $14597 = $14578 * $14596;
           $14598 = $14597 + $14595;
           $14599 = $14581 * 0.55000000000000004;
           $14600 = $14599 + $14598;
           $14601 = $14573 * $14578;
           $14602 = $14600 - $14601;
           $14603 = $14582 * 0.044999999999999998;
           $14604 = $14575 * $14582;
           $14605 = $14603 + $14604;
           $14606 = $14572 * $14580;
           $14607 = $14606 + $14605;
           $14608 = $14585 * $14586;
           $14609 = $14607 + $14608;
           $14610 = $14579 * -0.044999999999999998;
           $14611 = $14610 * $14582;
           $14612 = $14611 + $14609;
           $14613 = $14572 * 0.55000000000000004;
           $14614 = $14613 + $14612;
           $14615 = $14574 * $14573;
           $14616 = $14615 + $14614;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1942,$14602,$14616,1.9999999999999999E-6);
           $14617 = HEAP8[$595>>0]|0;
           $14618 = ($14617<<24>>24)==(0);
           if ($14618) {
            break L604;
           }
           $14619 = +HEAPF64[$60>>3];
           $14620 = +HEAPF64[$184>>3];
           $14621 = $14619 * $14620;
           $14622 = +HEAPF64[$47>>3];
           $14623 = $14622 * $14622;
           $14624 = $14620 * $14623;
           $14625 = $14621 - $14624;
           $14626 = (+__Z6IKsignd($14625));
           __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1943,$14626,-1);
           $14627 = HEAP8[$596>>0]|0;
           $14628 = ($14627<<24>>24)==(0);
           if ($14628) {
            break L604;
           }
           $14629 = +HEAPF64[$x1942>>3];
           $14630 = $14629 + -1.5707963267949001;
           $14631 = +HEAPF64[$x1943>>3];
           $14632 = $14631 * 1.5707963267949001;
           $14633 = $14630 + $14632;
           $14634 = (+__Z5IKsind($14633));
           $14635 = (+__Z5IKcosd($14633));
           $14636 = $14633 > 3.14159265358979;
           do {
            if ($14636) {
             $14637 = $14633 + -6.2831853071795898;
             $14640 = $14637;
            } else {
             $14638 = $14633 < -3.14159265358979;
             if (!($14638)) {
              $14640 = $14633;
              break;
             }
             $14639 = $14633 + 6.2831853071795898;
             $14640 = $14639;
            }
           } while(0);
           HEAP8[$0>>0] = 0;
           HEAP8[$1>>0] = -1;
           HEAPF64[$this>>3] = $14640;
           HEAPF64[$597>>3] = $14635;
           HEAPF64[$598>>3] = $14634;
           $14641 = +HEAPF64[$this>>3];
           $14642 = (+__Z5IKsind($14641));
           $14643 = (+__Z5IKcosd($14641));
           $14644 = +HEAPF64[$183>>3];
           $14645 = +HEAPF64[$24>>3];
           $14646 = $14644 * $14645;
           $14647 = $14645 * 0.089999999999999996;
           $14648 = +HEAPF64[$76>>3];
           $14649 = $14648 * 0.29999999999999999;
           $14650 = +HEAPF64[$75>>3];
           $14651 = $14650 * 0.044999999999999998;
           $14652 = +HEAPF64[$184>>3];
           $14653 = $14652 * 1.1000000000000001;
           $14654 = $14650 * 0.29999999999999999;
           $14655 = +HEAPF64[$23>>3];
           $14656 = $14644 * $14655;
           $14657 = $14648 * 0.044999999999999998;
           $14658 = +HEAPF64[$47>>3];
           $14659 = $14644 * $14658;
           $14660 = +HEAPF64[$43>>3];
           $14661 = $14642 * $14660;
           $14662 = $14643 * $14660;
           $14663 = +HEAPF64[$45>>3];
           $14664 = $14643 * $14663;
           $14665 = $14642 * $14663;
           $14666 = $14655 * $14658;
           $14667 = $14652 * $14666;
           $14668 = -0.55000000000000004 - $14657;
           $14669 = $14668 - $14654;
           $14670 = $14652 * $14662;
           $14671 = $14669 + $14670;
           $14672 = $14652 * $14665;
           $14673 = $14671 + $14672;
           $14674 = $14659 + $14673;
           $14675 = -$14645;
           $14676 = $14655 * $14661;
           $14677 = $14646 * $14662;
           $14678 = $14676 + $14677;
           $14679 = $14646 * $14665;
           $14680 = $14678 + $14679;
           $14681 = $14655 * $14664;
           $14682 = $14680 - $14681;
           $14683 = $14652 * $14658;
           $14684 = $14645 * $14683;
           $14685 = $14682 - $14684;
           $14686 = $14651 * $14656;
           $14687 = $14656 * 0.044999999999999998;
           $14688 = $14687 - $14686;
           $14689 = $14657 * $14652;
           $14690 = $14689 + $14688;
           $14691 = $14652 * $14654;
           $14692 = $14691 + $14690;
           $14693 = $14692 - $14662;
           $14694 = $14693 - $14665;
           $14695 = $14649 * $14656;
           $14696 = $14695 + $14694;
           $14697 = $14652 * 0.55000000000000004;
           $14698 = $14697 + $14696;
           $14699 = $14645 * $14661;
           $14700 = $14699 + 0.044999999999999998;
           $14701 = $14664 * $14675;
           $14702 = $14700 + $14701;
           $14703 = $14702 - $14651;
           $14704 = $14667 + $14703;
           $14705 = $14649 + $14704;
           $14706 = -$14656;
           $14707 = $14662 * $14706;
           $14708 = $14707 + $14705;
           $14709 = $14665 * $14706;
           $14710 = $14709 + $14708;
           $14711 = $14659 * 1.1000000000000001;
           $14712 = $14711 + -0.21249999999999999;
           $14713 = $14653 * $14662;
           $14714 = $14712 + $14713;
           $14715 = $14653 * $14665;
           $14716 = $14714 + $14715;
           $14717 = $14647 * $14661;
           $14718 = $14716 - $14717;
           $14719 = $14656 * 0.089999999999999996;
           $14720 = $14719 * $14662;
           $14721 = $14720 + $14718;
           $14722 = $14719 * $14665;
           $14723 = $14722 + $14721;
           $14724 = +HEAPF64[$60>>3];
           $14725 = $14723 - $14724;
           $14726 = $14667 * 0.089999999999999996;
           $14727 = $14725 - $14726;
           $14728 = $14647 * $14664;
           $14729 = $14728 + $14727;
           $14730 = (+__Z5IKabsd($14674));
           $14731 = $14730 > 5.0000000000000004E-6;
           if ($14731) {
            break L604;
           }
           $14732 = $14645 * $14649;
           $14733 = $14651 * $14675;
           $14734 = $14732 + $14733;
           $14735 = $14645 * 0.044999999999999998;
           $14736 = $14735 + $14734;
           $14737 = $14736 + $14661;
           $14738 = $14737 - $14664;
           $14739 = (+__Z5IKabsd($14738));
           $14740 = $14739 > 5.0000000000000004E-6;
           if ($14740) {
            break L604;
           }
           $14741 = (+__Z5IKabsd($14685));
           $14742 = $14741 > 5.0000000000000004E-6;
           if ($14742) {
            break L604;
           }
           $14743 = (+__Z5IKabsd($14698));
           $14744 = $14743 > 5.0000000000000004E-6;
           if ($14744) {
            break L604;
           }
           $14745 = (+__Z5IKabsd($14710));
           $14746 = $14745 > 5.0000000000000004E-6;
           if ($14746) {
            break L604;
           }
           $14747 = (+__Z5IKabsd($14729));
           $14748 = $14747 > 5.0000000000000004E-6;
           if ($14748) {
            break L604;
           }
           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           break L604;
          }
         } while(0);
         $4902 = +HEAPF64[$23>>3];
         $4903 = +HEAPF64[$184>>3];
         $4904 = $4902 * $4903;
         $4905 = +HEAPF64[$47>>3];
         $4906 = $4905 * $4905;
         $4907 = $4904 * $4906;
         $4908 = +HEAPF64[$60>>3];
         $4909 = $4904 * $4908;
         $4910 = $4907 - $4909;
         $4911 = (+__Z5IKabsd($4910));
         $4912 = $4911 < 9.9999999999999995E-7;
         do {
          if (!($4912)) {
           $4913 = (+__Z6IKsignd($4910));
           $4914 = (+__Z5IKabsd($4913));
           $4915 = $4914 < 9.9999999999999995E-7;
           if ($4915) {
            break;
           }
           HEAP8[$2>>0] = 1;
           $14383 = +HEAPF64[$23>>3];
           $14384 = $14383 * 0.55000000000000004;
           $14385 = +HEAPF64[$184>>3];
           $14386 = $14383 * $14385;
           $14387 = +HEAPF64[$45>>3];
           $14388 = +HEAPF64[$24>>3];
           $14389 = $14387 * $14388;
           $14390 = +HEAPF64[$76>>3];
           $14391 = $14390 * 0.044999999999999998;
           $14392 = +HEAPF64[$43>>3];
           $14393 = +HEAPF64[$47>>3];
           $14394 = $14392 * $14393;
           $14395 = $14383 * $14392;
           $14396 = +HEAPF64[$183>>3];
           $14397 = $14383 * $14396;
           $14398 = $14383 * $14387;
           $14399 = +HEAPF64[$75>>3];
           $14400 = $14399 * 0.29999999999999999;
           $14401 = $14396 * 0.55000000000000004;
           $14402 = $14388 * $14401;
           $14403 = $14392 * $14396;
           $14404 = $14388 * $14403;
           $14405 = $14384 * $14387;
           $14406 = $14400 * $14404;
           $14407 = $14406 - $14405;
           $14408 = $14388 * $14394;
           $14409 = $14407 - $14408;
           $14410 = $14392 * $14402;
           $14411 = $14410 + $14409;
           $14412 = $14391 * $14404;
           $14413 = $14412 + $14411;
           $14414 = $14398 * $14400;
           $14415 = $14413 - $14414;
           $14416 = -$14391;
           $14417 = $14398 * $14416;
           $14418 = $14417 + $14415;
           $14419 = $14387 * $14393;
           $14420 = $14419 * $14397;
           $14421 = $14420 + $14418;
           $14422 = $14395 * $14400;
           $14423 = $14389 * $14396;
           $14424 = -$14423;
           $14425 = $14391 * $14424;
           $14426 = $14425 - $14422;
           $14427 = $14384 * $14392;
           $14428 = $14426 - $14427;
           $14429 = $14394 * $14397;
           $14430 = $14429 + $14428;
           $14431 = $14400 * $14424;
           $14432 = $14431 + $14430;
           $14433 = $14389 * $14393;
           $14434 = $14433 + $14432;
           $14435 = $14396 * -0.55000000000000004;
           $14436 = $14389 * $14435;
           $14437 = $14436 + $14434;
           $14438 = $14395 * $14416;
           $14439 = $14438 + $14437;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1917,$14421,$14439,1.9999999999999999E-6);
           $14440 = HEAP8[$591>>0]|0;
           $14441 = ($14440<<24>>24)==(0);
           if ($14441) {
            break L604;
           }
           $14442 = +HEAPF64[$47>>3];
           $14443 = $14442 * $14442;
           $14444 = $14386 * $14443;
           $14445 = +HEAPF64[$60>>3];
           $14446 = $14386 * $14445;
           $14447 = $14444 - $14446;
           $14448 = (+__Z6IKsignd($14447));
           __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1918,$14448,-1);
           $14449 = HEAP8[$592>>0]|0;
           $14450 = ($14449<<24>>24)==(0);
           if ($14450) {
            break L604;
           }
           $14451 = +HEAPF64[$x1917>>3];
           $14452 = $14451 + -1.5707963267949001;
           $14453 = +HEAPF64[$x1918>>3];
           $14454 = $14453 * 1.5707963267949001;
           $14455 = $14452 + $14454;
           $14456 = (+__Z5IKsind($14455));
           $14457 = (+__Z5IKcosd($14455));
           $14458 = $14455 > 3.14159265358979;
           do {
            if ($14458) {
             $14459 = $14455 + -6.2831853071795898;
             $14462 = $14459;
            } else {
             $14460 = $14455 < -3.14159265358979;
             if (!($14460)) {
              $14462 = $14455;
              break;
             }
             $14461 = $14455 + 6.2831853071795898;
             $14462 = $14461;
            }
           } while(0);
           HEAP8[$0>>0] = 0;
           HEAP8[$1>>0] = -1;
           HEAPF64[$this>>3] = $14462;
           HEAPF64[$593>>3] = $14457;
           HEAPF64[$594>>3] = $14456;
           $14463 = +HEAPF64[$this>>3];
           $14464 = (+__Z5IKsind($14463));
           $14465 = (+__Z5IKcosd($14463));
           $14466 = +HEAPF64[$183>>3];
           $14467 = +HEAPF64[$24>>3];
           $14468 = $14466 * $14467;
           $14469 = $14467 * 0.089999999999999996;
           $14470 = +HEAPF64[$76>>3];
           $14471 = $14470 * 0.29999999999999999;
           $14472 = +HEAPF64[$75>>3];
           $14473 = $14472 * 0.044999999999999998;
           $14474 = +HEAPF64[$184>>3];
           $14475 = $14474 * 1.1000000000000001;
           $14476 = $14472 * 0.29999999999999999;
           $14477 = +HEAPF64[$23>>3];
           $14478 = $14466 * $14477;
           $14479 = $14470 * 0.044999999999999998;
           $14480 = +HEAPF64[$47>>3];
           $14481 = $14466 * $14480;
           $14482 = +HEAPF64[$43>>3];
           $14483 = $14464 * $14482;
           $14484 = $14465 * $14482;
           $14485 = +HEAPF64[$45>>3];
           $14486 = $14465 * $14485;
           $14487 = $14464 * $14485;
           $14488 = $14477 * $14480;
           $14489 = $14474 * $14488;
           $14490 = -0.55000000000000004 - $14476;
           $14491 = $14490 - $14479;
           $14492 = $14474 * $14487;
           $14493 = $14491 + $14492;
           $14494 = $14474 * $14484;
           $14495 = $14494 + $14493;
           $14496 = $14481 + $14495;
           $14497 = -$14467;
           $14498 = $14468 * $14487;
           $14499 = $14468 * $14484;
           $14500 = $14499 + $14498;
           $14501 = $14477 * $14486;
           $14502 = $14500 - $14501;
           $14503 = $14477 * $14483;
           $14504 = $14503 + $14502;
           $14505 = $14474 * $14480;
           $14506 = $14467 * $14505;
           $14507 = $14504 - $14506;
           $14508 = -$14484;
           $14509 = $14508 - $14487;
           $14510 = $14478 * 0.044999999999999998;
           $14511 = $14510 + $14509;
           $14512 = $14471 * $14478;
           $14513 = $14512 + $14511;
           $14514 = $14473 * $14478;
           $14515 = $14513 - $14514;
           $14516 = $14474 * 0.55000000000000004;
           $14517 = $14516 + $14515;
           $14518 = $14479 * $14474;
           $14519 = $14518 + $14517;
           $14520 = $14474 * $14476;
           $14521 = $14520 + $14519;
           $14522 = $14467 * $14483;
           $14523 = $14522 + 0.044999999999999998;
           $14524 = -$14478;
           $14525 = $14487 * $14524;
           $14526 = $14523 + $14525;
           $14527 = $14484 * $14524;
           $14528 = $14527 + $14526;
           $14529 = $14528 - $14473;
           $14530 = $14471 + $14529;
           $14531 = $14489 + $14530;
           $14532 = $14486 * $14497;
           $14533 = $14532 + $14531;
           $14534 = $14481 * 1.1000000000000001;
           $14535 = $14534 + -0.21249999999999999;
           $14536 = $14469 * $14486;
           $14537 = $14535 + $14536;
           $14538 = $14475 * $14487;
           $14539 = $14538 + $14537;
           $14540 = $14475 * $14484;
           $14541 = $14540 + $14539;
           $14542 = +HEAPF64[$60>>3];
           $14543 = $14541 - $14542;
           $14544 = $14478 * 0.089999999999999996;
           $14545 = $14544 * $14487;
           $14546 = $14545 + $14543;
           $14547 = $14544 * $14484;
           $14548 = $14547 + $14546;
           $14549 = $14469 * $14483;
           $14550 = $14548 - $14549;
           $14551 = $14489 * 0.089999999999999996;
           $14552 = $14550 - $14551;
           $14553 = (+__Z5IKabsd($14496));
           $14554 = $14553 > 5.0000000000000004E-6;
           if ($14554) {
            break L604;
           }
           $14555 = $14467 * 0.044999999999999998;
           $14556 = $14555 - $14486;
           $14557 = $14467 * $14471;
           $14558 = $14557 + $14556;
           $14559 = $14483 + $14558;
           $14560 = $14473 * $14497;
           $14561 = $14560 + $14559;
           $14562 = (+__Z5IKabsd($14561));
           $14563 = $14562 > 5.0000000000000004E-6;
           if ($14563) {
            break L604;
           }
           $14564 = (+__Z5IKabsd($14507));
           $14565 = $14564 > 5.0000000000000004E-6;
           if ($14565) {
            break L604;
           }
           $14566 = (+__Z5IKabsd($14521));
           $14567 = $14566 > 5.0000000000000004E-6;
           if ($14567) {
            break L604;
           }
           $14568 = (+__Z5IKabsd($14533));
           $14569 = $14568 > 5.0000000000000004E-6;
           if ($14569) {
            break L604;
           }
           $14570 = (+__Z5IKabsd($14552));
           $14571 = $14570 > 5.0000000000000004E-6;
           if ($14571) {
            break L604;
           }
           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           break L604;
          }
         } while(0);
         $4916 = +HEAPF64[$60>>3];
         $4917 = +HEAPF64[$47>>3];
         $4918 = $4917 * $4917;
         $4919 = $4916 - $4918;
         $4920 = (+__Z5IKabsd($4919));
         $4921 = $4920 < 9.9999999999999995E-7;
         do {
          if (!($4921)) {
           $4922 = (+__Z6IKsignd($4919));
           $4923 = (+__Z5IKabsd($4922));
           $4924 = $4923 < 9.9999999999999995E-7;
           if ($4924) {
            break;
           }
           HEAP8[$2>>0] = 1;
           $14195 = +HEAPF64[$75>>3];
           $14196 = +HEAPF64[$45>>3];
           $14197 = $14195 * $14196;
           $14198 = +HEAPF64[$184>>3];
           $14199 = $14198 * 0.29999999999999999;
           $14200 = +HEAPF64[$24>>3];
           $14201 = $14200 * 0.044999999999999998;
           $14202 = +HEAPF64[$43>>3];
           $14203 = $14195 * $14202;
           $14204 = $14198 * $14202;
           $14205 = +HEAPF64[$76>>3];
           $14206 = $14205 * 0.29999999999999999;
           $14207 = $14205 * 0.044999999999999998;
           $14208 = $14196 * $14198;
           $14209 = +HEAPF64[$183>>3];
           $14210 = +HEAPF64[$23>>3];
           $14211 = $14209 * $14210;
           $14212 = $14211 * 0.044999999999999998;
           $14213 = $14208 * 0.55000000000000004;
           $14214 = $14201 * $14203;
           $14215 = $14213 + $14214;
           $14216 = -$14202;
           $14217 = $14201 * $14216;
           $14218 = $14217 + $14215;
           $14219 = $14208 * $14207;
           $14220 = $14219 + $14218;
           $14221 = $14197 * $14199;
           $14222 = $14221 + $14220;
           $14223 = $14196 * $14212;
           $14224 = $14222 + $14223;
           $14225 = $14200 * $14216;
           $14226 = $14225 * $14206;
           $14227 = $14226 + $14224;
           $14228 = $14196 * $14206;
           $14229 = $14228 * $14211;
           $14230 = $14229 + $14227;
           $14231 = -$14197;
           $14232 = $14212 * $14231;
           $14233 = $14232 + $14230;
           $14234 = $14204 * 0.55000000000000004;
           $14235 = $14204 * $14207;
           $14236 = $14234 + $14235;
           $14237 = $14203 * $14212;
           $14238 = $14236 - $14237;
           $14239 = $14196 * $14200;
           $14240 = $14239 * $14206;
           $14241 = $14240 + $14238;
           $14242 = $14202 * $14206;
           $14243 = $14242 * $14211;
           $14244 = $14243 + $14241;
           $14245 = $14201 * $14231;
           $14246 = $14245 + $14244;
           $14247 = $14199 * $14203;
           $14248 = $14247 + $14246;
           $14249 = $14202 * $14212;
           $14250 = $14249 + $14248;
           $14251 = $14196 * $14201;
           $14252 = $14251 + $14250;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1887,$14233,$14252,1.9999999999999999E-6);
           $14253 = HEAP8[$587>>0]|0;
           $14254 = ($14253<<24>>24)==(0);
           if ($14254) {
            break L604;
           }
           $14255 = +HEAPF64[$60>>3];
           $14256 = +HEAPF64[$47>>3];
           $14257 = $14256 * $14256;
           $14258 = $14255 - $14257;
           $14259 = (+__Z6IKsignd($14258));
           __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1888,$14259,-1);
           $14260 = HEAP8[$588>>0]|0;
           $14261 = ($14260<<24>>24)==(0);
           if ($14261) {
            break L604;
           }
           $14262 = +HEAPF64[$x1887>>3];
           $14263 = $14262 + -1.5707963267949001;
           $14264 = +HEAPF64[$x1888>>3];
           $14265 = $14264 * 1.5707963267949001;
           $14266 = $14263 + $14265;
           $14267 = (+__Z5IKsind($14266));
           $14268 = (+__Z5IKcosd($14266));
           $14269 = $14266 > 3.14159265358979;
           do {
            if ($14269) {
             $14270 = $14266 + -6.2831853071795898;
             $14273 = $14270;
            } else {
             $14271 = $14266 < -3.14159265358979;
             if (!($14271)) {
              $14273 = $14266;
              break;
             }
             $14272 = $14266 + 6.2831853071795898;
             $14273 = $14272;
            }
           } while(0);
           HEAP8[$0>>0] = 0;
           HEAP8[$1>>0] = -1;
           HEAPF64[$this>>3] = $14273;
           HEAPF64[$589>>3] = $14268;
           HEAPF64[$590>>3] = $14267;
           $14274 = +HEAPF64[$this>>3];
           $14275 = (+__Z5IKsind($14274));
           $14276 = (+__Z5IKcosd($14274));
           $14277 = +HEAPF64[$183>>3];
           $14278 = +HEAPF64[$24>>3];
           $14279 = $14277 * $14278;
           $14280 = $14278 * 0.089999999999999996;
           $14281 = +HEAPF64[$76>>3];
           $14282 = $14281 * 0.29999999999999999;
           $14283 = +HEAPF64[$75>>3];
           $14284 = $14283 * 0.044999999999999998;
           $14285 = +HEAPF64[$184>>3];
           $14286 = $14285 * 1.1000000000000001;
           $14287 = $14283 * 0.29999999999999999;
           $14288 = +HEAPF64[$23>>3];
           $14289 = $14277 * $14288;
           $14290 = $14281 * 0.044999999999999998;
           $14291 = +HEAPF64[$47>>3];
           $14292 = $14277 * $14291;
           $14293 = +HEAPF64[$43>>3];
           $14294 = $14275 * $14293;
           $14295 = $14276 * $14293;
           $14296 = +HEAPF64[$45>>3];
           $14297 = $14276 * $14296;
           $14298 = $14275 * $14296;
           $14299 = $14288 * $14291;
           $14300 = $14285 * $14299;
           $14301 = $14292 + -0.55000000000000004;
           $14302 = $14285 * $14295;
           $14303 = $14301 + $14302;
           $14304 = $14285 * $14298;
           $14305 = $14303 + $14304;
           $14306 = $14305 - $14290;
           $14307 = $14306 - $14287;
           $14308 = -$14278;
           $14309 = $14285 * $14291;
           $14310 = $14278 * $14309;
           $14311 = $14288 * $14297;
           $14312 = -$14311;
           $14313 = $14312 - $14310;
           $14314 = $14288 * $14294;
           $14315 = $14314 + $14313;
           $14316 = $14279 * $14295;
           $14317 = $14316 + $14315;
           $14318 = $14279 * $14298;
           $14319 = $14318 + $14317;
           $14320 = $14289 * 0.044999999999999998;
           $14321 = $14282 * $14289;
           $14322 = $14320 + $14321;
           $14323 = $14322 - $14298;
           $14324 = $14323 - $14295;
           $14325 = $14284 * $14289;
           $14326 = $14324 - $14325;
           $14327 = $14285 * $14287;
           $14328 = $14327 + $14326;
           $14329 = $14290 * $14285;
           $14330 = $14329 + $14328;
           $14331 = $14285 * 0.55000000000000004;
           $14332 = $14331 + $14330;
           $14333 = $14297 * $14308;
           $14334 = $14333 + 0.044999999999999998;
           $14335 = -$14289;
           $14336 = $14295 * $14335;
           $14337 = $14336 + $14334;
           $14338 = $14298 * $14335;
           $14339 = $14338 + $14337;
           $14340 = $14300 + $14339;
           $14341 = $14282 + $14340;
           $14342 = $14341 - $14284;
           $14343 = $14278 * $14294;
           $14344 = $14343 + $14342;
           $14345 = $14280 * $14297;
           $14346 = $14345 + -0.21249999999999999;
           $14347 = $14292 * 1.1000000000000001;
           $14348 = $14347 + $14346;
           $14349 = $14280 * $14294;
           $14350 = $14348 - $14349;
           $14351 = +HEAPF64[$60>>3];
           $14352 = $14350 - $14351;
           $14353 = $14286 * $14295;
           $14354 = $14353 + $14352;
           $14355 = $14286 * $14298;
           $14356 = $14355 + $14354;
           $14357 = $14289 * 0.089999999999999996;
           $14358 = $14357 * $14298;
           $14359 = $14358 + $14356;
           $14360 = $14357 * $14295;
           $14361 = $14360 + $14359;
           $14362 = $14300 * 0.089999999999999996;
           $14363 = $14361 - $14362;
           $14364 = (+__Z5IKabsd($14307));
           $14365 = $14364 > 5.0000000000000004E-6;
           if ($14365) {
            break L604;
           }
           $14366 = $14278 * $14282;
           $14367 = $14284 * $14308;
           $14368 = $14366 + $14367;
           $14369 = $14278 * 0.044999999999999998;
           $14370 = $14369 + $14368;
           $14371 = $14370 - $14297;
           $14372 = $14294 + $14371;
           $14373 = (+__Z5IKabsd($14372));
           $14374 = $14373 > 5.0000000000000004E-6;
           if ($14374) {
            break L604;
           }
           $14375 = (+__Z5IKabsd($14319));
           $14376 = $14375 > 5.0000000000000004E-6;
           if ($14376) {
            break L604;
           }
           $14377 = (+__Z5IKabsd($14332));
           $14378 = $14377 > 5.0000000000000004E-6;
           if ($14378) {
            break L604;
           }
           $14379 = (+__Z5IKabsd($14344));
           $14380 = $14379 > 5.0000000000000004E-6;
           if ($14380) {
            break L604;
           }
           $14381 = (+__Z5IKabsd($14363));
           $14382 = $14381 > 5.0000000000000004E-6;
           if ($14382) {
            break L604;
           }
           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           break L604;
          }
         } while(0);
         $4925 = +HEAPF64[$22>>3];
         $4926 = $4925 + -1.5707963267949001;
         $4927 = (+__Z5IKabsd($4926));
         $4928 = $4927 + 3.14159265358979;
         $4929 = (+__Z6IKfmoddd($4928,6.2831853071795898));
         $4930 = $4929 + -3.14159265358979;
         $4931 = +HEAPF64[$76>>3];
         $4932 = +HEAPF64[$75>>3];
         $4933 = +HEAPF64[$183>>3];
         $4934 = $4933 * -0.044999999999999998;
         $4935 = $4931 * $4934;
         $4936 = $4933 * 0.55000000000000004;
         $4937 = $4935 - $4936;
         $4938 = +HEAPF64[$47>>3];
         $4939 = $4938 + $4937;
         $4940 = $4933 * -0.29999999999999999;
         $4941 = $4932 * $4940;
         $4942 = $4941 + $4939;
         $4943 = (+__Z5IKabsd($4930));
         $4944 = $4943 < 9.9999999999999995E-7;
         do {
          if ($4944) {
           $4945 = +HEAPF64[$60>>3];
           $4946 = $4931 * 0.076499999999999999;
           $4947 = $4946 + 0.39655000000000001;
           $4948 = $4947 - $4945;
           $4949 = $4932 * 0.32595000000000002;
           $4950 = $4949 + $4948;
           $4951 = (+__Z5IKabsd($4950));
           $4952 = $4951 < 9.9999999999999995E-7;
           if (!($4952)) {
            break;
           }
           $4953 = (+__Z5IKabsd($4942));
           $4954 = $4953 < 9.9999999999999995E-7;
           if (!($4954)) {
            break;
           }
           HEAPF64[$24>>3] = 1.0;
           HEAPF64[$23>>3] = 0.0;
           HEAPF64[$22>>3] = 1.5707963267949001;
           $4955 = +HEAPF64[$183>>3];
           $4956 = +HEAPF64[$43>>3];
           $4957 = $4955 * $4956;
           $4958 = +HEAPF64[$76>>3];
           $4959 = $4958 * 0.29999999999999999;
           $4960 = +HEAPF64[$45>>3];
           $4961 = $4955 * $4960;
           $4962 = +HEAPF64[$47>>3];
           $4963 = +HEAPF64[$184>>3];
           $4964 = $4962 * $4963;
           $4965 = +HEAPF64[$75>>3];
           $4966 = $4965 * 0.044999999999999998;
           $4967 = +HEAPF64[$60>>3];
           $4968 = $4955 * $4967;
           $4969 = $4962 * $4962;
           $4970 = $4955 * $4969;
           $4971 = $4968 - $4970;
           $4972 = (+__Z6IKsignd($4971));
           $4973 = (+__Z5IKabsd($4971));
           $4974 = $4973 < 9.9999999999999995E-7;
           do {
            if (!($4974)) {
             $4975 = $4957 * 0.044999999999999998;
             $4976 = $4957 * $4966;
             $4977 = $4976 - $4975;
             $4978 = $4957 * $4959;
             $4979 = $4977 - $4978;
             $4980 = $4960 * $4964;
             $4981 = $4980 + $4979;
             $4982 = (+__Z5IKabsd($4981));
             $4983 = $4956 * $4964;
             $4984 = $4959 * $4961;
             $4985 = $4984 + $4983;
             $4986 = $4961 * 0.044999999999999998;
             $4987 = $4986 + $4985;
             $4988 = $4961 * $4966;
             $4989 = $4987 - $4988;
             $4990 = (+__Z5IKabsd($4989));
             $4991 = $4982 + $4990;
             $4992 = (+__Z5IKabsd($4991));
             $4993 = $4992 < 9.9999999999999995E-7;
             if ($4993) {
              break;
             }
             $4994 = (+__Z5IKabsd($4972));
             $4995 = $4994 < 9.9999999999999995E-7;
             if ($4995) {
              break;
             }
             HEAP8[$2>>0] = 1;
             $7063 = +HEAPF64[$183>>3];
             $7064 = $7063 * 0.044999999999999998;
             $7065 = +HEAPF64[$47>>3];
             $7066 = +HEAPF64[$184>>3];
             $7067 = $7065 * $7066;
             $7068 = $7063 * 0.29999999999999999;
             $7069 = +HEAPF64[$76>>3];
             $7070 = $7068 * $7069;
             $7071 = +HEAPF64[$60>>3];
             $7072 = $7063 * $7071;
             $7073 = $7065 * $7065;
             $7074 = $7063 * $7073;
             $7075 = $7072 - $7074;
             $7076 = (+__Z6IKsignd($7075));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1130,$7076,-1);
             $7077 = HEAP8[$261>>0]|0;
             $7078 = ($7077<<24>>24)==(0);
             if ($7078) {
              break L604;
             }
             $7079 = +HEAPF64[$75>>3];
             $7080 = +HEAPF64[$43>>3];
             $7081 = $7079 * $7080;
             $7082 = $7064 * $7081;
             $7083 = +HEAPF64[$45>>3];
             $7084 = $7067 * $7083;
             $7085 = $7082 + $7084;
             $7086 = -$7080;
             $7087 = $7064 * $7086;
             $7088 = $7087 + $7085;
             $7089 = $7070 * $7086;
             $7090 = $7089 + $7088;
             $7091 = $7067 * $7080;
             $7092 = $7070 * $7083;
             $7093 = $7091 + $7092;
             $7094 = $7064 * $7083;
             $7095 = $7094 + $7093;
             $7096 = $7079 * $7083;
             $7097 = $7064 * $7096;
             $7098 = $7095 - $7097;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1131,$7090,$7098,1.9999999999999999E-6);
             $7099 = HEAP8[$262>>0]|0;
             $7100 = ($7099<<24>>24)==(0);
             if ($7100) {
              break L604;
             }
             $7101 = +HEAPF64[$x1130>>3];
             $7102 = $7101 * 1.5707963267949001;
             $7103 = $7102 + -1.5707963267949001;
             $7104 = +HEAPF64[$x1131>>3];
             $7105 = $7104 + $7103;
             $7106 = (+__Z5IKsind($7105));
             $7107 = (+__Z5IKcosd($7105));
             $7108 = $7105 > 3.14159265358979;
             do {
              if ($7108) {
               $7109 = $7105 + -6.2831853071795898;
               $7112 = $7109;
              } else {
               $7110 = $7105 < -3.14159265358979;
               if (!($7110)) {
                $7112 = $7105;
                break;
               }
               $7111 = $7105 + 6.2831853071795898;
               $7112 = $7111;
              }
             } while(0);
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             HEAPF64[$this>>3] = $7112;
             HEAPF64[$263>>3] = $7107;
             HEAPF64[$264>>3] = $7106;
             $7113 = +HEAPF64[$this>>3];
             $7114 = (+__Z5IKsind($7113));
             $7115 = (+__Z5IKcosd($7113));
             $7116 = +HEAPF64[$75>>3];
             $7117 = $7116 * 0.29999999999999999;
             $7118 = +HEAPF64[$76>>3];
             $7119 = $7118 * 0.044999999999999998;
             $7120 = +HEAPF64[$183>>3];
             $7121 = +HEAPF64[$47>>3];
             $7122 = $7120 * $7121;
             $7123 = +HEAPF64[$43>>3];
             $7124 = $7114 * $7123;
             $7125 = $7115 * $7123;
             $7126 = +HEAPF64[$45>>3];
             $7127 = $7114 * $7126;
             $7128 = $7115 * $7126;
             $7129 = +HEAPF64[$184>>3];
             $7130 = $7129 * $7127;
             $7131 = $7121 * $7129;
             $7132 = $7120 * $7127;
             $7133 = $7132 - $7131;
             $7134 = $7120 * $7125;
             $7135 = $7134 + $7133;
             $7136 = $7130 + -0.55000000000000004;
             $7137 = $7122 + $7136;
             $7138 = $7125 * $7129;
             $7139 = $7138 + $7137;
             $7140 = $7139 - $7117;
             $7141 = $7140 - $7119;
             $7142 = $7117 * $7129;
             $7143 = $7119 * $7129;
             $7144 = $7142 + $7143;
             $7145 = $7144 - $7127;
             $7146 = $7145 - $7125;
             $7147 = $7129 * 0.55000000000000004;
             $7148 = $7147 + $7146;
             $7149 = $7130 * 1.1000000000000001;
             $7150 = $7149 + -0.21249999999999999;
             $7151 = $7129 * 1.1000000000000001;
             $7152 = $7125 * $7151;
             $7153 = $7152 + $7150;
             $7154 = +HEAPF64[$60>>3];
             $7155 = $7153 - $7154;
             $7156 = $7124 * 0.089999999999999996;
             $7157 = $7155 - $7156;
             $7158 = $7128 * 0.089999999999999996;
             $7159 = $7158 + $7157;
             $7160 = $7122 * 1.1000000000000001;
             $7161 = $7160 + $7159;
             $7162 = (+__Z5IKabsd($7135));
             $7163 = $7162 > 5.0000000000000004E-6;
             if ($7163) {
              break L604;
             }
             $7164 = $7124 + 0.044999999999999998;
             $7165 = $7164 - $7128;
             $7166 = $7116 * 0.044999999999999998;
             $7167 = $7165 - $7166;
             $7168 = $7118 * 0.29999999999999999;
             $7169 = $7168 + $7167;
             $7170 = (+__Z5IKabsd($7169));
             $7171 = $7170 > 5.0000000000000004E-6;
             if ($7171) {
              break L604;
             }
             $7172 = (+__Z5IKabsd($7141));
             $7173 = $7172 > 5.0000000000000004E-6;
             if ($7173) {
              break L604;
             }
             $7174 = (+__Z5IKabsd($7148));
             $7175 = $7174 > 5.0000000000000004E-6;
             if ($7175) {
              break L604;
             }
             $7176 = (+__Z5IKabsd($7161));
             $7177 = $7176 > 5.0000000000000004E-6;
             if ($7177) {
              break L604;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L604;
            }
           } while(0);
           HEAPF64[$24>>3] = 1.0;
           HEAPF64[$23>>3] = 0.0;
           HEAPF64[$22>>3] = 1.5707963267949001;
           $4996 = +HEAPF64[$47>>3];
           $4997 = $4996 * $4996;
           $4998 = $4996 * 1.1000000000000001;
           $4999 = +HEAPF64[$183>>3];
           $5000 = +HEAPF64[$60>>3];
           $5001 = $4999 * $5000;
           $5002 = $4999 * 0.21249999999999999;
           $5003 = $4999 * $4997;
           $5004 = $4996 * 0.089999999999999996;
           $5005 = +HEAPF64[$184>>3];
           $5006 = $5004 * $5005;
           $5007 = $5001 - $5003;
           $5008 = +HEAPF64[$43>>3];
           $5009 = -$5008;
           $5010 = +HEAPF64[$45>>3];
           $5011 = $5001 * 0.089999999999999996;
           $5012 = $5003 * 0.089999999999999996;
           $5013 = $5011 - $5012;
           $5014 = (+__Z6IKsignd($5013));
           $5015 = (+__Z5IKabsd($5007));
           $5016 = $5015 < 9.9999999999999995E-7;
           do {
            if (!($5016)) {
             $5017 = $5008 * $5006;
             $5018 = $4998 * $5010;
             $5019 = $5017 - $5018;
             $5020 = $5001 * $5010;
             $5021 = $5020 + $5019;
             $5022 = $5002 * $5010;
             $5023 = $5022 + $5021;
             $5024 = (+__Z5IKabsd($5023));
             $5025 = $5002 * $5009;
             $5026 = $4998 * $5008;
             $5027 = $5025 + $5026;
             $5028 = $5001 * $5009;
             $5029 = $5028 + $5027;
             $5030 = $5006 * $5010;
             $5031 = $5030 + $5029;
             $5032 = (+__Z5IKabsd($5031));
             $5033 = $5024 + $5032;
             $5034 = (+__Z5IKabsd($5033));
             $5035 = $5034 < 9.9999999999999995E-7;
             if ($5035) {
              break;
             }
             $5036 = (+__Z5IKabsd($5014));
             $5037 = $5036 < 9.9999999999999995E-7;
             if ($5037) {
              break;
             }
             HEAP8[$2>>0] = 1;
             $6950 = +HEAPF64[$47>>3];
             $6951 = $6950 * 1.1000000000000001;
             $6952 = +HEAPF64[$183>>3];
             $6953 = $6952 * 0.089999999999999996;
             $6954 = $6952 * 0.21249999999999999;
             $6955 = +HEAPF64[$60>>3];
             $6956 = $6952 * $6955;
             $6957 = $6950 * 0.089999999999999996;
             $6958 = +HEAPF64[$184>>3];
             $6959 = $6957 * $6958;
             $6960 = $6950 * $6950;
             $6961 = $6960 * $6953;
             $6962 = $6955 * $6953;
             $6963 = $6962 - $6961;
             $6964 = (+__Z6IKsignd($6963));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1115,$6964,-1);
             $6965 = HEAP8[$257>>0]|0;
             $6966 = ($6965<<24>>24)==(0);
             if ($6966) {
              break L604;
             }
             $6967 = +HEAPF64[$43>>3];
             $6968 = -$6967;
             $6969 = $6954 * $6968;
             $6970 = +HEAPF64[$45>>3];
             $6971 = $6959 * $6970;
             $6972 = $6969 + $6971;
             $6973 = $6956 * $6968;
             $6974 = $6973 + $6972;
             $6975 = $6951 * $6967;
             $6976 = $6975 + $6974;
             $6977 = $6951 * $6970;
             $6978 = $6954 * $6970;
             $6979 = $6978 - $6977;
             $6980 = $6956 * $6970;
             $6981 = $6980 + $6979;
             $6982 = $6959 * $6967;
             $6983 = $6982 + $6981;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1116,$6976,$6983,1.9999999999999999E-6);
             $6984 = HEAP8[$258>>0]|0;
             $6985 = ($6984<<24>>24)==(0);
             if ($6985) {
              break L604;
             }
             $6986 = +HEAPF64[$x1115>>3];
             $6987 = $6986 * 1.5707963267949001;
             $6988 = $6987 + -1.5707963267949001;
             $6989 = +HEAPF64[$x1116>>3];
             $6990 = $6989 + $6988;
             $6991 = (+__Z5IKsind($6990));
             $6992 = (+__Z5IKcosd($6990));
             $6993 = $6990 > 3.14159265358979;
             do {
              if ($6993) {
               $6994 = $6990 + -6.2831853071795898;
               $6997 = $6994;
              } else {
               $6995 = $6990 < -3.14159265358979;
               if (!($6995)) {
                $6997 = $6990;
                break;
               }
               $6996 = $6990 + 6.2831853071795898;
               $6997 = $6996;
              }
             } while(0);
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             HEAPF64[$this>>3] = $6997;
             HEAPF64[$259>>3] = $6992;
             HEAPF64[$260>>3] = $6991;
             $6998 = +HEAPF64[$this>>3];
             $6999 = (+__Z5IKsind($6998));
             $7000 = (+__Z5IKcosd($6998));
             $7001 = +HEAPF64[$75>>3];
             $7002 = $7001 * 0.29999999999999999;
             $7003 = +HEAPF64[$76>>3];
             $7004 = $7003 * 0.044999999999999998;
             $7005 = +HEAPF64[$183>>3];
             $7006 = +HEAPF64[$47>>3];
             $7007 = $7005 * $7006;
             $7008 = +HEAPF64[$43>>3];
             $7009 = $6999 * $7008;
             $7010 = $7000 * $7008;
             $7011 = +HEAPF64[$45>>3];
             $7012 = $6999 * $7011;
             $7013 = $7000 * $7011;
             $7014 = +HEAPF64[$184>>3];
             $7015 = $7014 * $7012;
             $7016 = $7006 * $7014;
             $7017 = $7005 * $7012;
             $7018 = $7017 - $7016;
             $7019 = $7005 * $7010;
             $7020 = $7019 + $7018;
             $7021 = $7007 + -0.55000000000000004;
             $7022 = $7021 + $7015;
             $7023 = $7010 * $7014;
             $7024 = $7023 + $7022;
             $7025 = $7024 - $7004;
             $7026 = $7025 - $7002;
             $7027 = $7004 * $7014;
             $7028 = $7027 - $7012;
             $7029 = $7028 - $7010;
             $7030 = $7002 * $7014;
             $7031 = $7030 + $7029;
             $7032 = $7014 * 0.55000000000000004;
             $7033 = $7032 + $7031;
             $7034 = $7014 * 1.1000000000000001;
             $7035 = $7010 * $7034;
             $7036 = $7035 + -0.21249999999999999;
             $7037 = $7013 * 0.089999999999999996;
             $7038 = $7037 + $7036;
             $7039 = +HEAPF64[$60>>3];
             $7040 = $7038 - $7039;
             $7041 = $7007 * 1.1000000000000001;
             $7042 = $7041 + $7040;
             $7043 = $7015 * 1.1000000000000001;
             $7044 = $7043 + $7042;
             $7045 = $7009 * 0.089999999999999996;
             $7046 = $7044 - $7045;
             $7047 = (+__Z5IKabsd($7020));
             $7048 = $7047 > 5.0000000000000004E-6;
             if ($7048) {
              break L604;
             }
             $7049 = $7009 + 0.044999999999999998;
             $7050 = $7001 * 0.044999999999999998;
             $7051 = $7049 - $7050;
             $7052 = $7051 - $7013;
             $7053 = $7003 * 0.29999999999999999;
             $7054 = $7053 + $7052;
             $7055 = (+__Z5IKabsd($7054));
             $7056 = $7055 > 5.0000000000000004E-6;
             if ($7056) {
              break L604;
             }
             $7057 = (+__Z5IKabsd($7026));
             $7058 = $7057 > 5.0000000000000004E-6;
             if ($7058) {
              break L604;
             }
             $7059 = (+__Z5IKabsd($7033));
             $7060 = $7059 > 5.0000000000000004E-6;
             if ($7060) {
              break L604;
             }
             $7061 = (+__Z5IKabsd($7046));
             $7062 = $7061 > 5.0000000000000004E-6;
             if ($7062) {
              break L604;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L604;
            }
           } while(0);
           HEAPF64[$24>>3] = 1.0;
           HEAPF64[$23>>3] = 0.0;
           HEAPF64[$22>>3] = 1.5707963267949001;
           $5038 = +HEAPF64[$76>>3];
           $5039 = $5038 * 0.29999999999999999;
           $5040 = +HEAPF64[$45>>3];
           $5041 = +HEAPF64[$184>>3];
           $5042 = $5040 * $5041;
           $5043 = +HEAPF64[$75>>3];
           $5044 = $5043 * 0.29999999999999999;
           $5045 = +HEAPF64[$43>>3];
           $5046 = $5041 * $5045;
           $5047 = $5038 * 0.044999999999999998;
           $5048 = $5045 * 0.044999999999999998;
           $5049 = $5040 * 0.044999999999999998;
           $5050 = +HEAPF64[$60>>3];
           $5051 = +HEAPF64[$47>>3];
           $5052 = $5051 * $5051;
           $5053 = $5050 - $5052;
           $5054 = (+__Z6IKsignd($5053));
           $5055 = (+__Z5IKabsd($5053));
           $5056 = $5055 < 9.9999999999999995E-7;
           do {
            if (!($5056)) {
             $5057 = $5047 * $5046;
             $5058 = $5049 * $5043;
             $5059 = $5057 - $5058;
             $5060 = $5046 * 0.55000000000000004;
             $5061 = $5060 + $5059;
             $5062 = $5044 * $5046;
             $5063 = $5062 + $5061;
             $5064 = $5049 + $5063;
             $5065 = $5040 * $5039;
             $5066 = $5065 + $5064;
             $5067 = (+__Z5IKabsd($5066));
             $5068 = -$5048;
             $5069 = $5039 * $5045;
             $5070 = $5068 - $5069;
             $5071 = $5043 * $5048;
             $5072 = $5070 + $5071;
             $5073 = $5042 * 0.55000000000000004;
             $5074 = $5073 + $5072;
             $5075 = $5047 * $5042;
             $5076 = $5075 + $5074;
             $5077 = $5042 * $5044;
             $5078 = $5077 + $5076;
             $5079 = (+__Z5IKabsd($5078));
             $5080 = $5067 + $5079;
             $5081 = (+__Z5IKabsd($5080));
             $5082 = $5081 < 9.9999999999999995E-7;
             if ($5082) {
              break;
             }
             $5083 = (+__Z5IKabsd($5054));
             $5084 = $5083 < 9.9999999999999995E-7;
             if ($5084) {
              break;
             }
             HEAP8[$2>>0] = 1;
             $6829 = +HEAPF64[$45>>3];
             $6830 = $6829 * 0.29999999999999999;
             $6831 = +HEAPF64[$75>>3];
             $6832 = +HEAPF64[$184>>3];
             $6833 = $6831 * $6832;
             $6834 = +HEAPF64[$43>>3];
             $6835 = $6832 * $6834;
             $6836 = $6834 * 0.29999999999999999;
             $6837 = $6829 * 0.044999999999999998;
             $6838 = $6834 * 0.044999999999999998;
             $6839 = $6829 * 0.55000000000000004;
             $6840 = $6839 * $6832;
             $6841 = $6840 - $6838;
             $6842 = +HEAPF64[$76>>3];
             $6843 = $6832 * $6842;
             $6844 = $6837 * $6843;
             $6845 = $6841 + $6844;
             $6846 = $6830 * $6833;
             $6847 = $6846 + $6845;
             $6848 = $6842 * $6836;
             $6849 = $6847 - $6848;
             $6850 = $6831 * $6838;
             $6851 = $6850 + $6849;
             $6852 = $6831 * $6837;
             $6853 = $6837 - $6852;
             $6854 = $6842 * 0.044999999999999998;
             $6855 = $6835 * $6854;
             $6856 = $6853 + $6855;
             $6857 = $6833 * $6836;
             $6858 = $6857 + $6856;
             $6859 = $6830 * $6842;
             $6860 = $6859 + $6858;
             $6861 = $6835 * 0.55000000000000004;
             $6862 = $6861 + $6860;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1098,$6851,$6862,1.9999999999999999E-6);
             $6863 = HEAP8[$253>>0]|0;
             $6864 = ($6863<<24>>24)==(0);
             if ($6864) {
              break L604;
             }
             $6865 = +HEAPF64[$60>>3];
             $6866 = +HEAPF64[$47>>3];
             $6867 = $6866 * $6866;
             $6868 = $6865 - $6867;
             $6869 = (+__Z6IKsignd($6868));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1099,$6869,-1);
             $6870 = HEAP8[$254>>0]|0;
             $6871 = ($6870<<24>>24)==(0);
             if ($6871) {
              break L604;
             }
             $6872 = +HEAPF64[$x1098>>3];
             $6873 = $6872 + -1.5707963267949001;
             $6874 = +HEAPF64[$x1099>>3];
             $6875 = $6874 * 1.5707963267949001;
             $6876 = $6873 + $6875;
             $6877 = (+__Z5IKsind($6876));
             $6878 = (+__Z5IKcosd($6876));
             $6879 = $6876 > 3.14159265358979;
             do {
              if ($6879) {
               $6880 = $6876 + -6.2831853071795898;
               $6883 = $6880;
              } else {
               $6881 = $6876 < -3.14159265358979;
               if (!($6881)) {
                $6883 = $6876;
                break;
               }
               $6882 = $6876 + 6.2831853071795898;
               $6883 = $6882;
              }
             } while(0);
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             HEAPF64[$this>>3] = $6883;
             HEAPF64[$255>>3] = $6878;
             HEAPF64[$256>>3] = $6877;
             $6884 = +HEAPF64[$this>>3];
             $6885 = (+__Z5IKsind($6884));
             $6886 = (+__Z5IKcosd($6884));
             $6887 = +HEAPF64[$75>>3];
             $6888 = $6887 * 0.29999999999999999;
             $6889 = +HEAPF64[$76>>3];
             $6890 = $6889 * 0.044999999999999998;
             $6891 = +HEAPF64[$183>>3];
             $6892 = +HEAPF64[$47>>3];
             $6893 = $6891 * $6892;
             $6894 = +HEAPF64[$43>>3];
             $6895 = $6885 * $6894;
             $6896 = $6886 * $6894;
             $6897 = +HEAPF64[$45>>3];
             $6898 = $6885 * $6897;
             $6899 = $6886 * $6897;
             $6900 = +HEAPF64[$184>>3];
             $6901 = $6900 * $6898;
             $6902 = $6891 * $6896;
             $6903 = $6891 * $6898;
             $6904 = $6902 + $6903;
             $6905 = $6892 * $6900;
             $6906 = $6904 - $6905;
             $6907 = $6893 + -0.55000000000000004;
             $6908 = $6907 + $6901;
             $6909 = $6896 * $6900;
             $6910 = $6909 + $6908;
             $6911 = $6910 - $6890;
             $6912 = $6911 - $6888;
             $6913 = -$6898;
             $6914 = $6913 - $6896;
             $6915 = $6890 * $6900;
             $6916 = $6914 + $6915;
             $6917 = $6888 * $6900;
             $6918 = $6917 + $6916;
             $6919 = $6900 * 0.55000000000000004;
             $6920 = $6919 + $6918;
             $6921 = $6899 * 0.089999999999999996;
             $6922 = $6921 + -0.21249999999999999;
             $6923 = +HEAPF64[$60>>3];
             $6924 = $6922 - $6923;
             $6925 = $6901 * 1.1000000000000001;
             $6926 = $6925 + $6924;
             $6927 = $6893 * 1.1000000000000001;
             $6928 = $6927 + $6926;
             $6929 = $6895 * 0.089999999999999996;
             $6930 = $6928 - $6929;
             $6931 = $6900 * 1.1000000000000001;
             $6932 = $6896 * $6931;
             $6933 = $6932 + $6930;
             $6934 = (+__Z5IKabsd($6906));
             $6935 = $6934 > 5.0000000000000004E-6;
             if ($6935) {
              break L604;
             }
             $6936 = $6895 + 0.044999999999999998;
             $6937 = $6936 - $6899;
             $6938 = $6887 * 0.044999999999999998;
             $6939 = $6937 - $6938;
             $6940 = $6889 * 0.29999999999999999;
             $6941 = $6940 + $6939;
             $6942 = (+__Z5IKabsd($6941));
             $6943 = $6942 > 5.0000000000000004E-6;
             if ($6943) {
              break L604;
             }
             $6944 = (+__Z5IKabsd($6912));
             $6945 = $6944 > 5.0000000000000004E-6;
             if ($6945) {
              break L604;
             }
             $6946 = (+__Z5IKabsd($6920));
             $6947 = $6946 > 5.0000000000000004E-6;
             if ($6947) {
              break L604;
             }
             $6948 = (+__Z5IKabsd($6933));
             $6949 = $6948 > 5.0000000000000004E-6;
             if ($6949) {
              break L604;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L604;
            }
           } while(0);
           $5085 = +HEAPF64[$3>>3];
           $5086 = $5085 + -1.5707963267949001;
           $5087 = (+__Z5IKabsd($5086));
           $5088 = $5087 + 3.14159265358979;
           $5089 = (+__Z6IKfmoddd($5088,6.2831853071795898));
           $5090 = $5089 + -3.14159265358979;
           $5091 = +HEAPF64[$47>>3];
           $5092 = -$5091;
           $5093 = (+__Z5IKabsd($5090));
           $5094 = $5093 < 9.9999999999999995E-7;
           do {
            if ($5094) {
             $5095 = +HEAPF64[$75>>3];
             $5096 = +HEAPF64[$60>>3];
             $5097 = +HEAPF64[$76>>3];
             $5098 = $5097 * 0.076499999999999999;
             $5099 = $5098 + 0.39655000000000001;
             $5100 = $5099 - $5096;
             $5101 = $5095 * 0.32595000000000002;
             $5102 = $5101 + $5100;
             $5103 = (+__Z5IKabsd($5102));
             $5104 = $5103 < 9.9999999999999995E-7;
             if (!($5104)) {
              break;
             }
             $5105 = (+__Z5IKabsd($5092));
             $5106 = $5105 < 9.9999999999999995E-7;
             if (!($5106)) {
              break;
             }
             HEAPF64[$24>>3] = 1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$22>>3] = 1.5707963267949001;
             HEAPF64[$184>>3] = 1.0;
             HEAPF64[$183>>3] = 0.0;
             HEAPF64[$3>>3] = 1.5707963267949001;
             $5107 = +HEAPF64[$47>>3];
             $5108 = $5107 * $5107;
             $5109 = +HEAPF64[$76>>3];
             $5110 = $5109 * $5109;
             $5111 = +HEAPF64[$75>>3];
             $5112 = $5111 * $5111;
             $5113 = $5111 * 4.2607843137254902;
             $5114 = +HEAPF64[$60>>3];
             $5115 = $5108 - $5114;
             $5116 = $5112 * 1.20294117647059;
             $5117 = $5110 * 1.20294117647059;
             $5118 = -$5108;
             $5119 = (+__Z6IKsignd($5115));
             $5120 = (+__Z5IKabsd($5115));
             $5121 = $5120 < 9.9999999999999995E-7;
             do {
              if (!($5121)) {
               $5122 = $5108 * -3.9807189542483701;
               $5123 = $5109 * $5108;
               $5124 = $5122 - $5123;
               $5125 = $5109 * $5114;
               $5126 = $5124 + $5125;
               $5127 = $5114 * $5117;
               $5128 = $5127 + $5126;
               $5129 = $5114 * $5113;
               $5130 = $5129 + $5128;
               $5131 = $5114 * $5116;
               $5132 = $5131 + $5130;
               $5133 = $5117 * $5118;
               $5134 = $5133 + $5132;
               $5135 = $5113 * $5118;
               $5136 = $5135 + $5134;
               $5137 = $5116 * $5118;
               $5138 = $5137 + $5136;
               $5139 = $5114 * 3.9807189542483701;
               $5140 = $5139 + $5138;
               $5141 = (+__Z5IKabsd($5140));
               $5142 = $5141 < 9.9999999999999995E-7;
               if ($5142) {
                break;
               }
               $5143 = (+__Z5IKabsd($5119));
               $5144 = $5143 < 9.9999999999999995E-7;
               if ($5144) {
                break;
               }
               HEAP8[$2>>0] = 1;
               $5444 = +HEAPF64[$45>>3];
               $5445 = $5444 * 0.29999999999999999;
               $5446 = +HEAPF64[$43>>3];
               $5447 = $5446 * 0.044999999999999998;
               $5448 = $5444 * 0.044999999999999998;
               $5449 = $5446 * 0.29999999999999999;
               $5450 = +HEAPF64[$60>>3];
               $5451 = +HEAPF64[$47>>3];
               $5452 = $5451 * $5451;
               $5453 = $5452 - $5450;
               $5454 = (+__Z6IKsignd($5453));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x966,$5454,-1);
               $5455 = HEAP8[$193>>0]|0;
               $5456 = ($5455<<24>>24)==(0);
               if ($5456) {
                break L604;
               }
               $5457 = +HEAPF64[$45>>3];
               $5458 = $5457 * 0.55000000000000004;
               $5459 = +HEAPF64[$75>>3];
               $5460 = -$5459;
               $5461 = $5447 * $5460;
               $5462 = $5461 - $5458;
               $5463 = $5445 * $5460;
               $5464 = $5463 + $5462;
               $5465 = +HEAPF64[$76>>3];
               $5466 = -$5465;
               $5467 = $5448 * $5466;
               $5468 = $5467 + $5464;
               $5469 = $5449 * $5465;
               $5470 = $5469 + $5468;
               $5471 = $5447 + $5470;
               $5472 = +HEAPF64[$43>>3];
               $5473 = $5472 * 0.55000000000000004;
               $5474 = $5449 * $5460;
               $5475 = $5474 - $5473;
               $5476 = $5447 * $5466;
               $5477 = $5476 + $5475;
               $5478 = $5445 * $5466;
               $5479 = $5478 + $5477;
               $5480 = $5448 * $5459;
               $5481 = $5480 + $5479;
               $5482 = $5481 - $5448;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x967,$5471,$5482,1.9999999999999999E-6);
               $5483 = HEAP8[$194>>0]|0;
               $5484 = ($5483<<24>>24)==(0);
               if ($5484) {
                break L604;
               }
               $5485 = +HEAPF64[$x966>>3];
               $5486 = $5485 * 1.5707963267949001;
               $5487 = $5486 + -1.5707963267949001;
               $5488 = +HEAPF64[$x967>>3];
               $5489 = $5488 + $5487;
               $5490 = (+__Z5IKsind($5489));
               $5491 = (+__Z5IKcosd($5489));
               $5492 = $5489 > 3.14159265358979;
               do {
                if ($5492) {
                 $5493 = $5489 + -6.2831853071795898;
                 $5496 = $5493;
                } else {
                 $5494 = $5489 < -3.14159265358979;
                 if (!($5494)) {
                  $5496 = $5489;
                  break;
                 }
                 $5495 = $5489 + 6.2831853071795898;
                 $5496 = $5495;
                }
               } while(0);
               HEAP8[$0>>0] = 0;
               HEAP8[$1>>0] = -1;
               HEAPF64[$this>>3] = $5496;
               HEAPF64[$195>>3] = $5491;
               HEAPF64[$196>>3] = $5490;
               $5497 = +HEAPF64[$this>>3];
               $5498 = (+__Z5IKsind($5497));
               $5499 = (+__Z5IKcosd($5497));
               $5500 = +HEAPF64[$43>>3];
               $5501 = $5498 * $5500;
               $5502 = +HEAPF64[$45>>3];
               $5503 = $5499 * $5502;
               $5504 = $5499 * $5500;
               $5505 = $5498 * $5502;
               $5506 = +HEAPF64[$76>>3];
               $5507 = $5506 * 0.044999999999999998;
               $5508 = -0.55000000000000004 - $5507;
               $5509 = +HEAPF64[$75>>3];
               $5510 = $5509 * 0.29999999999999999;
               $5511 = $5508 - $5510;
               $5512 = $5505 + $5511;
               $5513 = $5504 + $5512;
               $5514 = $5501 * 0.089999999999999996;
               $5515 = -0.21249999999999999 - $5514;
               $5516 = $5503 * 0.089999999999999996;
               $5517 = $5515 + $5516;
               $5518 = +HEAPF64[$60>>3];
               $5519 = $5517 - $5518;
               $5520 = $5505 * 1.1000000000000001;
               $5521 = $5520 + $5519;
               $5522 = $5504 * 1.1000000000000001;
               $5523 = $5522 + $5521;
               $5524 = (+__Z5IKabsd($5513));
               $5525 = $5524 > 5.0000000000000004E-6;
               if ($5525) {
                break L604;
               }
               $5526 = 0.044999999999999998 - $5503;
               $5527 = $5509 * 0.044999999999999998;
               $5528 = $5526 - $5527;
               $5529 = $5506 * 0.29999999999999999;
               $5530 = $5529 + $5528;
               $5531 = $5501 + $5530;
               $5532 = (+__Z5IKabsd($5531));
               $5533 = $5532 > 5.0000000000000004E-6;
               if ($5533) {
                break L604;
               }
               $5534 = (+__Z5IKabsd($5523));
               $5535 = $5534 > 5.0000000000000004E-6;
               if ($5535) {
                break L604;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               break L604;
              }
             } while(0);
             HEAPF64[$24>>3] = 1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$22>>3] = 1.5707963267949001;
             HEAPF64[$184>>3] = 1.0;
             HEAPF64[$183>>3] = 0.0;
             HEAPF64[$3>>3] = 1.5707963267949001;
             $5145 = +HEAPF64[$47>>3];
             $5146 = $5145 * $5145;
             $5147 = +HEAPF64[$76>>3];
             $5148 = $5147 * 0.0040499999999999998;
             $5149 = +HEAPF64[$75>>3];
             $5150 = $5149 * 0.33000000000000002;
             $5151 = $5149 * 0.027;
             $5152 = $5147 * 0.049500000000000002;
             $5153 = +HEAPF64[$60>>3];
             $5154 = $5153 - $5146;
             $5155 = +HEAPF64[$43>>3];
             $5156 = $5155 * 0.049500000000000002;
             $5157 = +HEAPF64[$45>>3];
             $5158 = -$5157;
             $5159 = $5150 * $5158;
             $5160 = $5156 + $5159;
             $5161 = $5152 * $5158;
             $5162 = $5161 + $5160;
             $5163 = $5148 * $5155;
             $5164 = $5163 + $5162;
             $5165 = $5151 * $5155;
             $5166 = $5165 + $5164;
             $5167 = $5157 * 0.39250000000000002;
             $5168 = $5166 - $5167;
             $5169 = $5153 * $5157;
             $5170 = $5169 + $5168;
             $5171 = (+__Z5IKabsd($5170));
             $5172 = $5153 * $5155;
             $5173 = $5157 * 0.049500000000000002;
             $5174 = $5173 - $5172;
             $5175 = $5151 * $5157;
             $5176 = $5175 + $5174;
             $5177 = $5148 * $5157;
             $5178 = $5177 + $5176;
             $5179 = $5150 * $5155;
             $5180 = $5179 + $5178;
             $5181 = $5152 * $5155;
             $5182 = $5181 + $5180;
             $5183 = $5155 * 0.39250000000000002;
             $5184 = $5183 + $5182;
             $5185 = (+__Z5IKabsd($5184));
             $5186 = $5171 + $5185;
             $5187 = (+__Z5IKabsd($5154));
             $5188 = $5187 < 9.9999999999999995E-7;
             do {
              if (!($5188)) {
               $5189 = $5146 * 0.089999999999999996;
               $5190 = $5153 * 0.089999999999999996;
               $5191 = $5190 - $5189;
               $5192 = (+__Z6IKsignd($5191));
               $5193 = (+__Z5IKabsd($5192));
               $5194 = $5193 < 9.9999999999999995E-7;
               if ($5194) {
                break;
               }
               $5195 = (+__Z5IKabsd($5186));
               $5196 = $5195 < 9.9999999999999995E-7;
               if ($5196) {
                break;
               }
               HEAP8[$2>>0] = 1;
               $5346 = +HEAPF64[$75>>3];
               $5347 = $5346 * 0.33000000000000002;
               $5348 = $5346 * 0.027;
               $5349 = +HEAPF64[$76>>3];
               $5350 = $5349 * 0.0040499999999999998;
               $5351 = $5349 * 0.049500000000000002;
               $5352 = +HEAPF64[$47>>3];
               $5353 = $5352 * $5352;
               $5354 = $5353 * 0.089999999999999996;
               $5355 = +HEAPF64[$60>>3];
               $5356 = $5355 * 0.089999999999999996;
               $5357 = $5356 - $5354;
               $5358 = (+__Z6IKsignd($5357));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x954,$5358,-1);
               $5359 = HEAP8[$189>>0]|0;
               $5360 = ($5359<<24>>24)==(0);
               if ($5360) {
                break L604;
               }
               $5361 = +HEAPF64[$43>>3];
               $5362 = $5351 * $5361;
               $5363 = $5347 * $5361;
               $5364 = $5362 + $5363;
               $5365 = +HEAPF64[$60>>3];
               $5366 = $5361 * $5365;
               $5367 = $5364 - $5366;
               $5368 = +HEAPF64[$45>>3];
               $5369 = $5368 * 0.049500000000000002;
               $5370 = $5367 + $5369;
               $5371 = $5348 * $5368;
               $5372 = $5371 + $5370;
               $5373 = $5350 * $5368;
               $5374 = $5373 + $5372;
               $5375 = $5361 * 0.39250000000000002;
               $5376 = $5375 + $5374;
               $5377 = -$5368;
               $5378 = $5347 * $5377;
               $5379 = $5351 * $5377;
               $5380 = $5378 + $5379;
               $5381 = $5348 * $5361;
               $5382 = $5381 + $5380;
               $5383 = $5350 * $5361;
               $5384 = $5383 + $5382;
               $5385 = $5361 * 0.049500000000000002;
               $5386 = $5385 + $5384;
               $5387 = $5368 * 0.39250000000000002;
               $5388 = $5386 - $5387;
               $5389 = $5365 * $5368;
               $5390 = $5389 + $5388;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x955,$5376,$5390,1.9999999999999999E-6);
               $5391 = HEAP8[$190>>0]|0;
               $5392 = ($5391<<24>>24)==(0);
               if ($5392) {
                break L604;
               }
               $5393 = +HEAPF64[$x954>>3];
               $5394 = $5393 * 1.5707963267949001;
               $5395 = $5394 + -1.5707963267949001;
               $5396 = +HEAPF64[$x955>>3];
               $5397 = $5396 + $5395;
               $5398 = (+__Z5IKsind($5397));
               $5399 = (+__Z5IKcosd($5397));
               $5400 = $5397 > 3.14159265358979;
               do {
                if ($5400) {
                 $5401 = $5397 + -6.2831853071795898;
                 $5404 = $5401;
                } else {
                 $5402 = $5397 < -3.14159265358979;
                 if (!($5402)) {
                  $5404 = $5397;
                  break;
                 }
                 $5403 = $5397 + 6.2831853071795898;
                 $5404 = $5403;
                }
               } while(0);
               HEAP8[$0>>0] = 0;
               HEAP8[$1>>0] = -1;
               HEAPF64[$this>>3] = $5404;
               HEAPF64[$191>>3] = $5399;
               HEAPF64[$192>>3] = $5398;
               $5405 = +HEAPF64[$this>>3];
               $5406 = (+__Z5IKsind($5405));
               $5407 = (+__Z5IKcosd($5405));
               $5408 = +HEAPF64[$43>>3];
               $5409 = $5406 * $5408;
               $5410 = +HEAPF64[$45>>3];
               $5411 = $5407 * $5410;
               $5412 = $5407 * $5408;
               $5413 = $5406 * $5410;
               $5414 = +HEAPF64[$76>>3];
               $5415 = $5414 * 0.044999999999999998;
               $5416 = -0.55000000000000004 - $5415;
               $5417 = +HEAPF64[$75>>3];
               $5418 = $5417 * 0.29999999999999999;
               $5419 = $5416 - $5418;
               $5420 = $5412 + $5419;
               $5421 = $5413 + $5420;
               $5422 = $5409 * 0.089999999999999996;
               $5423 = -0.21249999999999999 - $5422;
               $5424 = $5411 * 0.089999999999999996;
               $5425 = $5423 + $5424;
               $5426 = +HEAPF64[$60>>3];
               $5427 = $5425 - $5426;
               $5428 = $5412 * 1.1000000000000001;
               $5429 = $5428 + $5427;
               $5430 = $5413 * 1.1000000000000001;
               $5431 = $5430 + $5429;
               $5432 = (+__Z5IKabsd($5421));
               $5433 = $5432 > 5.0000000000000004E-6;
               if ($5433) {
                break L604;
               }
               $5434 = 0.044999999999999998 - $5411;
               $5435 = $5417 * 0.044999999999999998;
               $5436 = $5434 - $5435;
               $5437 = $5414 * 0.29999999999999999;
               $5438 = $5437 + $5436;
               $5439 = $5409 + $5438;
               $5440 = (+__Z5IKabsd($5439));
               $5441 = $5440 > 5.0000000000000004E-6;
               if ($5441) {
                break L604;
               }
               $5442 = (+__Z5IKabsd($5431));
               $5443 = $5442 > 5.0000000000000004E-6;
               if ($5443) {
                break L604;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               break L604;
              }
             } while(0);
             HEAPF64[$24>>3] = 1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$22>>3] = 1.5707963267949001;
             HEAPF64[$184>>3] = 1.0;
             HEAPF64[$183>>3] = 0.0;
             HEAPF64[$3>>3] = 1.5707963267949001;
             $5197 = +HEAPF64[$47>>3];
             $5198 = $5197 * $5197;
             $5199 = +HEAPF64[$75>>3];
             $5200 = +HEAPF64[$45>>3];
             $5201 = $5199 * $5200;
             $5202 = +HEAPF64[$76>>3];
             $5203 = $5200 * $5202;
             $5204 = +HEAPF64[$60>>3];
             $5205 = +HEAPF64[$43>>3];
             $5206 = $5199 * $5205;
             $5207 = $5202 * $5205;
             $5208 = $5198 - $5204;
             $5209 = $5207 * 0.33000000000000002;
             $5210 = $5205 * 0.049500000000000002;
             $5211 = $5210 + $5209;
             $5212 = $5206 * 0.049500000000000002;
             $5213 = $5211 - $5212;
             $5214 = $5203 * 0.027;
             $5215 = $5214 + $5213;
             $5216 = $5200 * $5204;
             $5217 = $5215 - $5216;
             $5218 = $5201 * 0.0040499999999999998;
             $5219 = $5217 - $5218;
             $5220 = $5200 * 0.20845;
             $5221 = $5219 - $5220;
             $5222 = (+__Z5IKabsd($5221));
             $5223 = $5201 * 0.049500000000000002;
             $5224 = $5204 * $5205;
             $5225 = $5223 - $5224;
             $5226 = $5200 * 0.049500000000000002;
             $5227 = $5225 - $5226;
             $5228 = $5203 * 0.33000000000000002;
             $5229 = $5227 - $5228;
             $5230 = $5207 * 0.027;
             $5231 = $5230 + $5229;
             $5232 = $5206 * 0.0040499999999999998;
             $5233 = $5231 - $5232;
             $5234 = $5205 * 0.20845;
             $5235 = $5233 - $5234;
             $5236 = (+__Z5IKabsd($5235));
             $5237 = $5222 + $5236;
             $5238 = (+__Z5IKabsd($5208));
             $5239 = $5238 < 9.9999999999999995E-7;
             if ($5239) {
              break L604;
             }
             $5240 = $5198 * 1.1000000000000001;
             $5241 = $5204 * 1.1000000000000001;
             $5242 = $5240 - $5241;
             $5243 = (+__Z6IKsignd($5242));
             $5244 = (+__Z5IKabsd($5243));
             $5245 = $5244 < 9.9999999999999995E-7;
             if ($5245) {
              break L604;
             }
             $5246 = (+__Z5IKabsd($5237));
             $5247 = $5246 < 9.9999999999999995E-7;
             if ($5247) {
              break L604;
             }
             HEAP8[$2>>0] = 1;
             $5248 = +HEAPF64[$75>>3];
             $5249 = +HEAPF64[$45>>3];
             $5250 = $5248 * $5249;
             $5251 = +HEAPF64[$76>>3];
             $5252 = $5249 * $5251;
             $5253 = +HEAPF64[$60>>3];
             $5254 = +HEAPF64[$43>>3];
             $5255 = $5248 * $5254;
             $5256 = $5251 * $5254;
             $5257 = $5253 * 1.1000000000000001;
             $5258 = +HEAPF64[$47>>3];
             $5259 = $5258 * $5258;
             $5260 = $5259 * 1.1000000000000001;
             $5261 = $5260 - $5257;
             $5262 = (+__Z6IKsignd($5261));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x942,$5262,-1);
             $5263 = HEAP8[$185>>0]|0;
             $5264 = ($5263<<24>>24)==(0);
             if ($5264) {
              break L604;
             }
             $5265 = +HEAPF64[$43>>3];
             $5266 = $5265 * 0.049500000000000002;
             $5267 = $5256 * 0.33000000000000002;
             $5268 = $5267 + $5266;
             $5269 = $5255 * 0.049500000000000002;
             $5270 = $5268 - $5269;
             $5271 = $5252 * 0.027;
             $5272 = $5271 + $5270;
             $5273 = +HEAPF64[$45>>3];
             $5274 = $5253 * $5273;
             $5275 = $5272 - $5274;
             $5276 = $5250 * 0.0040499999999999998;
             $5277 = $5275 - $5276;
             $5278 = $5273 * 0.20845;
             $5279 = $5277 - $5278;
             $5280 = $5250 * 0.049500000000000002;
             $5281 = $5255 * 0.0040499999999999998;
             $5282 = $5280 - $5281;
             $5283 = $5253 * $5265;
             $5284 = $5282 - $5283;
             $5285 = $5273 * 0.049500000000000002;
             $5286 = $5284 - $5285;
             $5287 = $5256 * 0.027;
             $5288 = $5287 + $5286;
             $5289 = $5252 * 0.33000000000000002;
             $5290 = $5288 - $5289;
             $5291 = $5265 * 0.20845;
             $5292 = $5290 - $5291;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x943,$5279,$5292,1.9999999999999999E-6);
             $5293 = HEAP8[$186>>0]|0;
             $5294 = ($5293<<24>>24)==(0);
             if ($5294) {
              break L604;
             }
             $5295 = +HEAPF64[$x942>>3];
             $5296 = $5295 * 1.5707963267949001;
             $5297 = $5296 + -1.5707963267949001;
             $5298 = +HEAPF64[$x943>>3];
             $5299 = $5298 + $5297;
             $5300 = (+__Z5IKsind($5299));
             $5301 = (+__Z5IKcosd($5299));
             $5302 = $5299 > 3.14159265358979;
             do {
              if ($5302) {
               $5303 = $5299 + -6.2831853071795898;
               $5306 = $5303;
              } else {
               $5304 = $5299 < -3.14159265358979;
               if (!($5304)) {
                $5306 = $5299;
                break;
               }
               $5305 = $5299 + 6.2831853071795898;
               $5306 = $5305;
              }
             } while(0);
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             HEAPF64[$this>>3] = $5306;
             HEAPF64[$187>>3] = $5301;
             HEAPF64[$188>>3] = $5300;
             $5307 = +HEAPF64[$this>>3];
             $5308 = (+__Z5IKsind($5307));
             $5309 = (+__Z5IKcosd($5307));
             $5310 = +HEAPF64[$43>>3];
             $5311 = $5308 * $5310;
             $5312 = +HEAPF64[$45>>3];
             $5313 = $5309 * $5312;
             $5314 = $5309 * $5310;
             $5315 = $5308 * $5312;
             $5316 = +HEAPF64[$76>>3];
             $5317 = $5316 * 0.044999999999999998;
             $5318 = -0.55000000000000004 - $5317;
             $5319 = +HEAPF64[$75>>3];
             $5320 = $5319 * 0.29999999999999999;
             $5321 = $5318 - $5320;
             $5322 = $5314 + $5321;
             $5323 = $5315 + $5322;
             $5324 = $5313 * 0.089999999999999996;
             $5325 = $5324 + -0.21249999999999999;
             $5326 = +HEAPF64[$60>>3];
             $5327 = $5325 - $5326;
             $5328 = $5314 * 1.1000000000000001;
             $5329 = $5328 + $5327;
             $5330 = $5315 * 1.1000000000000001;
             $5331 = $5330 + $5329;
             $5332 = $5311 * 0.089999999999999996;
             $5333 = $5331 - $5332;
             $5334 = (+__Z5IKabsd($5323));
             $5335 = $5334 > 5.0000000000000004E-6;
             if ($5335) {
              break L604;
             }
             $5336 = 0.044999999999999998 - $5313;
             $5337 = $5319 * 0.044999999999999998;
             $5338 = $5336 - $5337;
             $5339 = $5316 * 0.29999999999999999;
             $5340 = $5339 + $5338;
             $5341 = $5311 + $5340;
             $5342 = (+__Z5IKabsd($5341));
             $5343 = $5342 > 5.0000000000000004E-6;
             if ($5343) {
              break L604;
             }
             $5344 = (+__Z5IKabsd($5333));
             $5345 = $5344 > 5.0000000000000004E-6;
             if ($5345) {
              break L604;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L604;
            }
           } while(0);
           $5536 = +HEAPF64[$3>>3];
           $5537 = $5536 + 1.5707963267949001;
           $5538 = (+__Z5IKabsd($5537));
           $5539 = $5538 + 3.14159265358979;
           $5540 = (+__Z6IKfmoddd($5539,6.2831853071795898));
           $5541 = $5540 + -3.14159265358979;
           $5542 = +HEAPF64[$47>>3];
           $5543 = (+__Z5IKabsd($5541));
           $5544 = $5543 < 9.9999999999999995E-7;
           do {
            if ($5544) {
             $5545 = +HEAPF64[$75>>3];
             $5546 = +HEAPF64[$60>>3];
             $5547 = +HEAPF64[$76>>3];
             $5548 = $5547 * 0.076499999999999999;
             $5549 = $5548 + 0.39655000000000001;
             $5550 = $5549 - $5546;
             $5551 = $5545 * 0.32595000000000002;
             $5552 = $5551 + $5550;
             $5553 = (+__Z5IKabsd($5552));
             $5554 = $5553 < 9.9999999999999995E-7;
             if (!($5554)) {
              break;
             }
             $5555 = (+__Z5IKabsd($5542));
             $5556 = $5555 < 9.9999999999999995E-7;
             if (!($5556)) {
              break;
             }
             HEAPF64[$24>>3] = 1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$22>>3] = 1.5707963267949001;
             HEAPF64[$184>>3] = -1.0;
             HEAPF64[$183>>3] = 0.0;
             HEAPF64[$3>>3] = -1.5707963267949001;
             $5557 = +HEAPF64[$47>>3];
             $5558 = $5557 * $5557;
             $5559 = +HEAPF64[$76>>3];
             $5560 = $5559 * $5559;
             $5561 = +HEAPF64[$75>>3];
             $5562 = $5561 * $5561;
             $5563 = $5561 * 4.2607843137254902;
             $5564 = -$5558;
             $5565 = +HEAPF64[$60>>3];
             $5566 = $5565 - $5558;
             $5567 = $5562 * 1.20294117647059;
             $5568 = $5560 * 1.20294117647059;
             $5569 = (+__Z6IKsignd($5566));
             $5570 = (+__Z5IKabsd($5566));
             $5571 = $5570 < 9.9999999999999995E-7;
             do {
              if (!($5571)) {
               $5572 = $5565 * $5568;
               $5573 = $5568 * $5564;
               $5574 = $5572 + $5573;
               $5575 = $5559 * $5565;
               $5576 = $5575 + $5574;
               $5577 = $5565 * $5563;
               $5578 = $5577 + $5576;
               $5579 = $5565 * $5567;
               $5580 = $5579 + $5578;
               $5581 = $5563 * $5564;
               $5582 = $5581 + $5580;
               $5583 = $5567 * $5564;
               $5584 = $5583 + $5582;
               $5585 = $5558 * 3.9807189542483701;
               $5586 = $5584 - $5585;
               $5587 = $5565 * 3.9807189542483701;
               $5588 = $5587 + $5586;
               $5589 = $5559 * $5558;
               $5590 = $5588 - $5589;
               $5591 = (+__Z5IKabsd($5590));
               $5592 = $5591 < 9.9999999999999995E-7;
               if ($5592) {
                break;
               }
               $5593 = (+__Z5IKabsd($5569));
               $5594 = $5593 < 9.9999999999999995E-7;
               if ($5594) {
                break;
               }
               HEAP8[$2>>0] = 1;
               $5899 = +HEAPF64[$45>>3];
               $5900 = $5899 * 0.29999999999999999;
               $5901 = +HEAPF64[$43>>3];
               $5902 = $5901 * 0.044999999999999998;
               $5903 = $5899 * 0.044999999999999998;
               $5904 = $5901 * 0.29999999999999999;
               $5905 = +HEAPF64[$60>>3];
               $5906 = +HEAPF64[$47>>3];
               $5907 = $5906 * $5906;
               $5908 = $5905 - $5907;
               $5909 = (+__Z6IKsignd($5908));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1020,$5909,-1);
               $5910 = HEAP8[$205>>0]|0;
               $5911 = ($5910<<24>>24)==(0);
               if ($5911) {
                break L604;
               }
               $5912 = +HEAPF64[$45>>3];
               $5913 = $5912 * -0.55000000000000004;
               $5914 = $5913 - $5902;
               $5915 = +HEAPF64[$75>>3];
               $5916 = $5902 * $5915;
               $5917 = $5914 + $5916;
               $5918 = -$5915;
               $5919 = $5900 * $5918;
               $5920 = $5919 + $5917;
               $5921 = +HEAPF64[$76>>3];
               $5922 = -$5921;
               $5923 = $5904 * $5922;
               $5924 = $5923 + $5920;
               $5925 = $5903 * $5922;
               $5926 = $5925 + $5924;
               $5927 = +HEAPF64[$43>>3];
               $5928 = $5927 * 0.55000000000000004;
               $5929 = $5903 - $5928;
               $5930 = $5900 * $5921;
               $5931 = $5930 + $5929;
               $5932 = $5903 * $5918;
               $5933 = $5932 + $5931;
               $5934 = $5904 * $5918;
               $5935 = $5934 + $5933;
               $5936 = $5902 * $5922;
               $5937 = $5936 + $5935;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1021,$5926,$5937,1.9999999999999999E-6);
               $5938 = HEAP8[$206>>0]|0;
               $5939 = ($5938<<24>>24)==(0);
               if ($5939) {
                break L604;
               }
               $5940 = +HEAPF64[$x1020>>3];
               $5941 = $5940 * 1.5707963267949001;
               $5942 = $5941 + -1.5707963267949001;
               $5943 = +HEAPF64[$x1021>>3];
               $5944 = $5943 + $5942;
               $5945 = (+__Z5IKsind($5944));
               $5946 = (+__Z5IKcosd($5944));
               $5947 = $5944 > 3.14159265358979;
               do {
                if ($5947) {
                 $5948 = $5944 + -6.2831853071795898;
                 $5951 = $5948;
                } else {
                 $5949 = $5944 < -3.14159265358979;
                 if (!($5949)) {
                  $5951 = $5944;
                  break;
                 }
                 $5950 = $5944 + 6.2831853071795898;
                 $5951 = $5950;
                }
               } while(0);
               HEAP8[$0>>0] = 0;
               HEAP8[$1>>0] = -1;
               HEAPF64[$this>>3] = $5951;
               HEAPF64[$207>>3] = $5946;
               HEAPF64[$208>>3] = $5945;
               $5952 = +HEAPF64[$this>>3];
               $5953 = (+__Z5IKcosd($5952));
               $5954 = (+__Z5IKsind($5952));
               $5955 = +HEAPF64[$43>>3];
               $5956 = $5954 * $5955;
               $5957 = +HEAPF64[$45>>3];
               $5958 = $5954 * $5957;
               $5959 = $5956 + 0.044999999999999998;
               $5960 = $5953 * $5957;
               $5961 = $5959 - $5960;
               $5962 = +HEAPF64[$75>>3];
               $5963 = $5962 * 0.044999999999999998;
               $5964 = $5961 - $5963;
               $5965 = +HEAPF64[$76>>3];
               $5966 = $5965 * 0.29999999999999999;
               $5967 = $5964 + $5966;
               $5968 = $5958 * 1.1000000000000001;
               $5969 = -0.21249999999999999 - $5968;
               $5970 = $5955 * -1.1000000000000001;
               $5971 = $5953 * $5970;
               $5972 = $5971 + $5969;
               $5973 = $5956 * 0.089999999999999996;
               $5974 = $5972 - $5973;
               $5975 = +HEAPF64[$60>>3];
               $5976 = $5974 - $5975;
               $5977 = $5957 * 0.089999999999999996;
               $5978 = $5953 * $5977;
               $5979 = $5978 + $5976;
               $5980 = (+__Z5IKabsd($5967));
               $5981 = $5980 > 5.0000000000000004E-6;
               if ($5981) {
                break L604;
               }
               $5982 = $5965 * 0.044999999999999998;
               $5983 = -0.55000000000000004 - $5982;
               $5984 = $5983 - $5958;
               $5985 = $5962 * 0.29999999999999999;
               $5986 = $5984 - $5985;
               $5987 = $5953 * $5955;
               $5988 = $5986 - $5987;
               $5989 = (+__Z5IKabsd($5988));
               $5990 = $5989 > 5.0000000000000004E-6;
               if ($5990) {
                break L604;
               }
               $5991 = (+__Z5IKabsd($5979));
               $5992 = $5991 > 5.0000000000000004E-6;
               if ($5992) {
                break L604;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               break L604;
              }
             } while(0);
             HEAPF64[$24>>3] = 1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$22>>3] = 1.5707963267949001;
             HEAPF64[$184>>3] = -1.0;
             HEAPF64[$183>>3] = 0.0;
             HEAPF64[$3>>3] = -1.5707963267949001;
             $5595 = +HEAPF64[$47>>3];
             $5596 = $5595 * $5595;
             $5597 = +HEAPF64[$76>>3];
             $5598 = $5597 * 0.0040499999999999998;
             $5599 = +HEAPF64[$75>>3];
             $5600 = $5599 * 0.33000000000000002;
             $5601 = $5599 * 0.027;
             $5602 = $5597 * 0.049500000000000002;
             $5603 = +HEAPF64[$60>>3];
             $5604 = $5603 - $5596;
             $5605 = +HEAPF64[$43>>3];
             $5606 = $5603 * $5605;
             $5607 = +HEAPF64[$45>>3];
             $5608 = -$5607;
             $5609 = $5598 * $5608;
             $5610 = $5609 - $5606;
             $5611 = $5601 * $5608;
             $5612 = $5611 + $5610;
             $5613 = $5607 * 0.049500000000000002;
             $5614 = $5612 - $5613;
             $5615 = $5605 * 0.39250000000000002;
             $5616 = $5615 + $5614;
             $5617 = $5602 * $5605;
             $5618 = $5617 + $5616;
             $5619 = $5600 * $5605;
             $5620 = $5619 + $5618;
             $5621 = (+__Z5IKabsd($5620));
             $5622 = -$5605;
             $5623 = $5598 * $5622;
             $5624 = $5601 * $5622;
             $5625 = $5623 + $5624;
             $5626 = $5602 * $5608;
             $5627 = $5625 + $5626;
             $5628 = $5600 * $5608;
             $5629 = $5628 + $5627;
             $5630 = $5605 * 0.049500000000000002;
             $5631 = $5629 - $5630;
             $5632 = $5607 * 0.39250000000000002;
             $5633 = $5631 - $5632;
             $5634 = $5603 * $5607;
             $5635 = $5634 + $5633;
             $5636 = (+__Z5IKabsd($5635));
             $5637 = $5621 + $5636;
             $5638 = (+__Z5IKabsd($5604));
             $5639 = $5638 < 9.9999999999999995E-7;
             do {
              if (!($5639)) {
               $5640 = $5596 * 0.089999999999999996;
               $5641 = $5603 * 0.089999999999999996;
               $5642 = $5641 - $5640;
               $5643 = (+__Z6IKsignd($5642));
               $5644 = (+__Z5IKabsd($5643));
               $5645 = $5644 < 9.9999999999999995E-7;
               if ($5645) {
                break;
               }
               $5646 = (+__Z5IKabsd($5637));
               $5647 = $5646 < 9.9999999999999995E-7;
               if ($5647) {
                break;
               }
               HEAP8[$2>>0] = 1;
               $5798 = +HEAPF64[$76>>3];
               $5799 = $5798 * 0.0040499999999999998;
               $5800 = +HEAPF64[$75>>3];
               $5801 = $5800 * 0.33000000000000002;
               $5802 = $5800 * 0.027;
               $5803 = $5798 * 0.049500000000000002;
               $5804 = +HEAPF64[$43>>3];
               $5805 = $5803 * $5804;
               $5806 = $5804 * $5801;
               $5807 = $5805 + $5806;
               $5808 = +HEAPF64[$60>>3];
               $5809 = $5804 * $5808;
               $5810 = $5807 - $5809;
               $5811 = +HEAPF64[$45>>3];
               $5812 = -$5811;
               $5813 = $5799 * $5812;
               $5814 = $5810 + $5813;
               $5815 = $5802 * $5812;
               $5816 = $5815 + $5814;
               $5817 = $5811 * 0.049500000000000002;
               $5818 = $5816 - $5817;
               $5819 = $5804 * 0.39250000000000002;
               $5820 = $5819 + $5818;
               $5821 = $5803 * $5812;
               $5822 = $5801 * $5812;
               $5823 = $5821 + $5822;
               $5824 = $5804 * 0.049500000000000002;
               $5825 = $5823 - $5824;
               $5826 = $5811 * 0.39250000000000002;
               $5827 = $5825 - $5826;
               $5828 = -$5804;
               $5829 = $5802 * $5828;
               $5830 = $5829 + $5827;
               $5831 = $5799 * $5828;
               $5832 = $5831 + $5830;
               $5833 = $5808 * $5811;
               $5834 = $5833 + $5832;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1009,$5820,$5834,1.9999999999999999E-6);
               $5835 = HEAP8[$201>>0]|0;
               $5836 = ($5835<<24>>24)==(0);
               if ($5836) {
                break L604;
               }
               $5837 = +HEAPF64[$47>>3];
               $5838 = $5837 * $5837;
               $5839 = $5838 * 0.089999999999999996;
               $5840 = +HEAPF64[$60>>3];
               $5841 = $5840 * 0.089999999999999996;
               $5842 = $5841 - $5839;
               $5843 = (+__Z6IKsignd($5842));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1010,$5843,-1);
               $5844 = HEAP8[$202>>0]|0;
               $5845 = ($5844<<24>>24)==(0);
               if ($5845) {
                break L604;
               }
               $5846 = +HEAPF64[$x1009>>3];
               $5847 = $5846 + -1.5707963267949001;
               $5848 = +HEAPF64[$x1010>>3];
               $5849 = $5848 * 1.5707963267949001;
               $5850 = $5847 + $5849;
               $5851 = (+__Z5IKsind($5850));
               $5852 = (+__Z5IKcosd($5850));
               $5853 = $5850 > 3.14159265358979;
               do {
                if ($5853) {
                 $5854 = $5850 + -6.2831853071795898;
                 $5857 = $5854;
                } else {
                 $5855 = $5850 < -3.14159265358979;
                 if (!($5855)) {
                  $5857 = $5850;
                  break;
                 }
                 $5856 = $5850 + 6.2831853071795898;
                 $5857 = $5856;
                }
               } while(0);
               HEAP8[$0>>0] = 0;
               HEAP8[$1>>0] = -1;
               HEAPF64[$this>>3] = $5857;
               HEAPF64[$203>>3] = $5852;
               HEAPF64[$204>>3] = $5851;
               $5858 = +HEAPF64[$this>>3];
               $5859 = (+__Z5IKcosd($5858));
               $5860 = (+__Z5IKsind($5858));
               $5861 = +HEAPF64[$43>>3];
               $5862 = $5860 * $5861;
               $5863 = +HEAPF64[$45>>3];
               $5864 = $5860 * $5863;
               $5865 = $5862 + 0.044999999999999998;
               $5866 = $5859 * $5863;
               $5867 = $5865 - $5866;
               $5868 = +HEAPF64[$75>>3];
               $5869 = $5868 * 0.044999999999999998;
               $5870 = $5867 - $5869;
               $5871 = +HEAPF64[$76>>3];
               $5872 = $5871 * 0.29999999999999999;
               $5873 = $5870 + $5872;
               $5874 = $5861 * -1.1000000000000001;
               $5875 = $5859 * $5874;
               $5876 = $5875 + -0.21249999999999999;
               $5877 = $5863 * 0.089999999999999996;
               $5878 = $5859 * $5877;
               $5879 = $5876 + $5878;
               $5880 = $5864 * 1.1000000000000001;
               $5881 = $5879 - $5880;
               $5882 = $5862 * 0.089999999999999996;
               $5883 = $5881 - $5882;
               $5884 = +HEAPF64[$60>>3];
               $5885 = $5883 - $5884;
               $5886 = (+__Z5IKabsd($5873));
               $5887 = $5886 > 5.0000000000000004E-6;
               if ($5887) {
                break L604;
               }
               $5888 = $5871 * 0.044999999999999998;
               $5889 = -0.55000000000000004 - $5888;
               $5890 = $5859 * $5861;
               $5891 = $5889 - $5890;
               $5892 = $5868 * 0.29999999999999999;
               $5893 = $5891 - $5892;
               $5894 = $5893 - $5864;
               $5895 = (+__Z5IKabsd($5894));
               $5896 = $5895 > 5.0000000000000004E-6;
               if ($5896) {
                break L604;
               }
               $5897 = (+__Z5IKabsd($5885));
               $5898 = $5897 > 5.0000000000000004E-6;
               if ($5898) {
                break L604;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               break L604;
              }
             } while(0);
             HEAPF64[$24>>3] = 1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$22>>3] = 1.5707963267949001;
             HEAPF64[$184>>3] = -1.0;
             HEAPF64[$183>>3] = 0.0;
             HEAPF64[$3>>3] = -1.5707963267949001;
             $5648 = +HEAPF64[$47>>3];
             $5649 = $5648 * $5648;
             $5650 = +HEAPF64[$75>>3];
             $5651 = +HEAPF64[$45>>3];
             $5652 = $5650 * $5651;
             $5653 = +HEAPF64[$76>>3];
             $5654 = $5651 * $5653;
             $5655 = +HEAPF64[$60>>3];
             $5656 = +HEAPF64[$43>>3];
             $5657 = $5650 * $5656;
             $5658 = $5653 * $5656;
             $5659 = $5655 - $5649;
             $5660 = $5655 * $5656;
             $5661 = $5651 * 0.049500000000000002;
             $5662 = $5661 - $5660;
             $5663 = $5657 * 0.0040499999999999998;
             $5664 = $5662 - $5663;
             $5665 = $5654 * 0.33000000000000002;
             $5666 = $5665 + $5664;
             $5667 = $5652 * 0.049500000000000002;
             $5668 = $5666 - $5667;
             $5669 = $5658 * 0.027;
             $5670 = $5669 + $5668;
             $5671 = $5656 * 0.20845;
             $5672 = $5670 - $5671;
             $5673 = (+__Z5IKabsd($5672));
             $5674 = $5658 * -0.33000000000000002;
             $5675 = $5651 * $5655;
             $5676 = $5674 - $5675;
             $5677 = $5657 * 0.049500000000000002;
             $5678 = $5677 + $5676;
             $5679 = $5654 * 0.027;
             $5680 = $5679 + $5678;
             $5681 = $5656 * 0.049500000000000002;
             $5682 = $5680 - $5681;
             $5683 = $5652 * 0.0040499999999999998;
             $5684 = $5682 - $5683;
             $5685 = $5651 * 0.20845;
             $5686 = $5684 - $5685;
             $5687 = (+__Z5IKabsd($5686));
             $5688 = $5673 + $5687;
             $5689 = (+__Z5IKabsd($5659));
             $5690 = $5689 < 9.9999999999999995E-7;
             if ($5690) {
              break L604;
             }
             $5691 = $5649 * 1.1000000000000001;
             $5692 = $5655 * 1.1000000000000001;
             $5693 = $5692 - $5691;
             $5694 = (+__Z6IKsignd($5693));
             $5695 = (+__Z5IKabsd($5694));
             $5696 = $5695 < 9.9999999999999995E-7;
             if ($5696) {
              break L604;
             }
             $5697 = (+__Z5IKabsd($5688));
             $5698 = $5697 < 9.9999999999999995E-7;
             if ($5698) {
              break L604;
             }
             HEAP8[$2>>0] = 1;
             $5699 = +HEAPF64[$75>>3];
             $5700 = +HEAPF64[$45>>3];
             $5701 = $5699 * $5700;
             $5702 = +HEAPF64[$76>>3];
             $5703 = $5700 * $5702;
             $5704 = +HEAPF64[$60>>3];
             $5705 = +HEAPF64[$43>>3];
             $5706 = $5699 * $5705;
             $5707 = $5702 * $5705;
             $5708 = $5707 * -0.33000000000000002;
             $5709 = $5700 * $5704;
             $5710 = $5708 - $5709;
             $5711 = $5706 * 0.049500000000000002;
             $5712 = $5711 + $5710;
             $5713 = $5701 * 0.0040499999999999998;
             $5714 = $5712 - $5713;
             $5715 = $5705 * 0.049500000000000002;
             $5716 = $5714 - $5715;
             $5717 = $5703 * 0.027;
             $5718 = $5717 + $5716;
             $5719 = $5700 * 0.20845;
             $5720 = $5718 - $5719;
             $5721 = $5704 * $5705;
             $5722 = $5700 * 0.049500000000000002;
             $5723 = $5722 - $5721;
             $5724 = $5706 * 0.0040499999999999998;
             $5725 = $5723 - $5724;
             $5726 = $5703 * 0.33000000000000002;
             $5727 = $5726 + $5725;
             $5728 = $5707 * 0.027;
             $5729 = $5728 + $5727;
             $5730 = $5701 * 0.049500000000000002;
             $5731 = $5729 - $5730;
             $5732 = $5705 * 0.20845;
             $5733 = $5731 - $5732;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x998,$5720,$5733,1.9999999999999999E-6);
             $5734 = HEAP8[$197>>0]|0;
             $5735 = ($5734<<24>>24)==(0);
             if ($5735) {
              break L604;
             }
             $5736 = +HEAPF64[$47>>3];
             $5737 = $5736 * $5736;
             $5738 = $5737 * 1.1000000000000001;
             $5739 = +HEAPF64[$60>>3];
             $5740 = $5739 * 1.1000000000000001;
             $5741 = $5740 - $5738;
             $5742 = (+__Z6IKsignd($5741));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x999,$5742,-1);
             $5743 = HEAP8[$198>>0]|0;
             $5744 = ($5743<<24>>24)==(0);
             if ($5744) {
              break L604;
             }
             $5745 = +HEAPF64[$x998>>3];
             $5746 = $5745 + -1.5707963267949001;
             $5747 = +HEAPF64[$x999>>3];
             $5748 = $5747 * 1.5707963267949001;
             $5749 = $5746 + $5748;
             $5750 = (+__Z5IKsind($5749));
             $5751 = (+__Z5IKcosd($5749));
             $5752 = $5749 > 3.14159265358979;
             do {
              if ($5752) {
               $5753 = $5749 + -6.2831853071795898;
               $5756 = $5753;
              } else {
               $5754 = $5749 < -3.14159265358979;
               if (!($5754)) {
                $5756 = $5749;
                break;
               }
               $5755 = $5749 + 6.2831853071795898;
               $5756 = $5755;
              }
             } while(0);
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             HEAPF64[$this>>3] = $5756;
             HEAPF64[$199>>3] = $5751;
             HEAPF64[$200>>3] = $5750;
             $5757 = +HEAPF64[$this>>3];
             $5758 = (+__Z5IKcosd($5757));
             $5759 = (+__Z5IKsind($5757));
             $5760 = +HEAPF64[$43>>3];
             $5761 = $5759 * $5760;
             $5762 = +HEAPF64[$45>>3];
             $5763 = $5759 * $5762;
             $5764 = $5761 + 0.044999999999999998;
             $5765 = $5758 * $5762;
             $5766 = $5764 - $5765;
             $5767 = +HEAPF64[$75>>3];
             $5768 = $5767 * 0.044999999999999998;
             $5769 = $5766 - $5768;
             $5770 = +HEAPF64[$76>>3];
             $5771 = $5770 * 0.29999999999999999;
             $5772 = $5769 + $5771;
             $5773 = $5760 * -1.1000000000000001;
             $5774 = $5758 * $5773;
             $5775 = $5774 + -0.21249999999999999;
             $5776 = $5763 * 1.1000000000000001;
             $5777 = $5775 - $5776;
             $5778 = $5762 * 0.089999999999999996;
             $5779 = $5758 * $5778;
             $5780 = $5779 + $5777;
             $5781 = +HEAPF64[$60>>3];
             $5782 = $5780 - $5781;
             $5783 = $5761 * 0.089999999999999996;
             $5784 = $5782 - $5783;
             $5785 = (+__Z5IKabsd($5772));
             $5786 = $5785 > 5.0000000000000004E-6;
             if ($5786) {
              break L604;
             }
             $5787 = $5770 * 0.044999999999999998;
             $5788 = -0.55000000000000004 - $5787;
             $5789 = $5788 - $5763;
             $5790 = $5767 * 0.29999999999999999;
             $5791 = $5789 - $5790;
             $5792 = $5758 * $5760;
             $5793 = $5791 - $5792;
             $5794 = (+__Z5IKabsd($5793));
             $5795 = $5794 > 5.0000000000000004E-6;
             if ($5795) {
              break L604;
             }
             $5796 = (+__Z5IKabsd($5784));
             $5797 = $5796 > 5.0000000000000004E-6;
             if ($5797) {
              break L604;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L604;
            }
           } while(0);
           $5993 = +HEAPF64[$47>>3];
           $5994 = (+__Z5IKabsd($5993));
           $5995 = +HEAPF64[$7>>3];
           $5996 = $5995 + 3.14159265358979;
           $5997 = (+__Z6IKfmoddd($5996,6.2831853071795898));
           $5998 = $5997 + -3.14159265358979;
           $5999 = (+__Z5IKabsd($5998));
           $6000 = $5994 + $5999;
           $6001 = +HEAPF64[$183>>3];
           $6002 = $6001 * -0.84999999999999998;
           $6003 = (+__Z5IKabsd($6000));
           $6004 = $6003 < 9.9999999999999995E-7;
           do {
            if ($6004) {
             $6005 = +HEAPF64[$60>>3];
             $6006 = 0.72250000000000003 - $6005;
             $6007 = (+__Z5IKabsd($6006));
             $6008 = $6007 < 9.9999999999999995E-7;
             if (!($6008)) {
              break;
             }
             $6009 = (+__Z5IKabsd($6002));
             $6010 = $6009 < 9.9999999999999995E-7;
             if (!($6010)) {
              break;
             }
             $6011 = +HEAPF64[$45>>3];
             $6012 = -$6011;
             HEAPF64[$24>>3] = 1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$22>>3] = 1.5707963267949001;
             HEAPF64[$47>>3] = 0.0;
             HEAPF64[$7>>3] = 0.0;
             HEAPF64[$76>>3] = 0.0;
             HEAPF64[$75>>3] = 1.0;
             $6013 = +HEAPF64[$43>>3];
             $6014 = $6013 * $6013;
             $6015 = +HEAPF64[$45>>3];
             $6016 = $6015 * $6015;
             $6017 = $6014 + $6016;
             HEAPF64[$60>>3] = $6017;
             $6018 = +HEAPF64[$43>>3];
             $6019 = +HEAPF64[$26>>3];
             $6020 = $6018 * $6019;
             $6021 = +HEAPF64[$45>>3];
             $6022 = +HEAPF64[$32>>3];
             $6023 = $6021 * $6022;
             $6024 = $6020 + $6023;
             HEAPF64[$61>>3] = $6024;
             $6025 = +HEAPF64[$43>>3];
             $6026 = +HEAPF64[$28>>3];
             $6027 = $6025 * $6026;
             $6028 = +HEAPF64[$45>>3];
             $6029 = +HEAPF64[$34>>3];
             $6030 = $6028 * $6029;
             $6031 = $6027 + $6030;
             HEAPF64[$62>>3] = $6031;
             $6032 = +HEAPF64[$43>>3];
             $6033 = +HEAPF64[$30>>3];
             $6034 = $6032 * $6033;
             $6035 = +HEAPF64[$45>>3];
             $6036 = +HEAPF64[$36>>3];
             $6037 = $6035 * $6036;
             $6038 = $6034 + $6037;
             HEAPF64[$63>>3] = $6038;
             $6039 = +HEAPF64[$38>>3];
             $6040 = $6039 * $6012;
             HEAPF64[$64>>3] = $6040;
             $6041 = +HEAPF64[$43>>3];
             $6042 = +HEAPF64[$38>>3];
             $6043 = $6041 * $6042;
             HEAPF64[$65>>3] = $6043;
             $6044 = +HEAPF64[$40>>3];
             $6045 = $6044 * $6012;
             HEAPF64[$67>>3] = $6045;
             $6046 = +HEAPF64[$43>>3];
             $6047 = +HEAPF64[$40>>3];
             $6048 = $6046 * $6047;
             HEAPF64[$68>>3] = $6048;
             $6049 = +HEAPF64[$42>>3];
             $6050 = $6049 * $6012;
             HEAPF64[$70>>3] = $6050;
             $6051 = +HEAPF64[$43>>3];
             $6052 = +HEAPF64[$42>>3];
             $6053 = $6051 * $6052;
             HEAPF64[$71>>3] = $6053;
             $6054 = +HEAPF64[$43>>3];
             $6055 = $6054 * $6054;
             $6056 = +HEAPF64[$45>>3];
             $6057 = $6056 * $6056;
             $6058 = +HEAPF64[$184>>3];
             $6059 = $6055 * $6058;
             $6060 = $6058 * $6057;
             $6061 = $6059 + $6060;
             $6062 = (+__Z5IKabsd($6054));
             $6063 = (+__Z5IKabsd($6056));
             $6064 = $6062 + $6063;
             $6065 = (+__Z5IKabsd($6061));
             $6066 = $6065 < 9.9999999999999995E-7;
             do {
              if (!($6066)) {
               $6067 = $6060 * 20.0;
               $6068 = $6059 * 20.0;
               $6069 = $6067 + $6068;
               $6070 = (+__Z6IKsignd($6069));
               $6071 = (+__Z5IKabsd($6070));
               $6072 = $6071 < 9.9999999999999995E-7;
               if ($6072) {
                break;
               }
               $6073 = (+__Z5IKabsd($6064));
               $6074 = $6073 < 9.9999999999999995E-7;
               if ($6074) {
                break;
               }
               HEAP8[$2>>0] = 1;
               $6463 = +HEAPF64[$184>>3];
               $6464 = $6463 * 20.0;
               $6465 = +HEAPF64[$45>>3];
               $6466 = $6465 * 17.0;
               $6467 = +HEAPF64[$43>>3];
               $6468 = $6467 * 17.0;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1064,$6466,$6468,1.9999999999999999E-6);
               $6469 = HEAP8[$221>>0]|0;
               $6470 = ($6469<<24>>24)==(0);
               if ($6470) {
                break L604;
               }
               $6471 = +HEAPF64[$45>>3];
               $6472 = $6471 * $6471;
               $6473 = $6464 * $6472;
               $6474 = +HEAPF64[$43>>3];
               $6475 = $6474 * $6474;
               $6476 = $6464 * $6475;
               $6477 = $6473 + $6476;
               $6478 = (+__Z6IKsignd($6477));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1065,$6478,-1);
               $6479 = HEAP8[$222>>0]|0;
               $6480 = ($6479<<24>>24)==(0);
               if ($6480) {
                break L604;
               }
               $6481 = +HEAPF64[$x1064>>3];
               $6482 = $6481 + -1.5707963267949001;
               $6483 = +HEAPF64[$x1065>>3];
               $6484 = $6483 * 1.5707963267949001;
               $6485 = $6482 + $6484;
               $6486 = (+__Z5IKsind($6485));
               $6487 = (+__Z5IKcosd($6485));
               $6488 = $6485 > 3.14159265358979;
               do {
                if ($6488) {
                 $6489 = $6485 + -6.2831853071795898;
                 $6492 = $6489;
                } else {
                 $6490 = $6485 < -3.14159265358979;
                 if (!($6490)) {
                  $6492 = $6485;
                  break;
                 }
                 $6491 = $6485 + 6.2831853071795898;
                 $6492 = $6491;
                }
               } while(0);
               HEAP8[$0>>0] = 0;
               HEAP8[$1>>0] = -1;
               HEAPF64[$this>>3] = $6492;
               HEAPF64[$223>>3] = $6487;
               HEAPF64[$224>>3] = $6486;
               $6493 = +HEAPF64[$this>>3];
               $6494 = (+__Z5IKcosd($6493));
               $6495 = (+__Z5IKsind($6493));
               $6496 = +HEAPF64[$45>>3];
               $6497 = +HEAPF64[$184>>3];
               $6498 = $6497 * 1.1000000000000001;
               $6499 = +HEAPF64[$43>>3];
               $6500 = $6495 * $6499;
               $6501 = $6494 * $6499;
               $6502 = $6495 * $6496;
               $6503 = $6494 * $6496;
               $6504 = $6500 - $6503;
               $6505 = $6497 * 0.84999999999999998;
               $6506 = $6505 - $6501;
               $6507 = $6506 - $6502;
               $6508 = $6502 * $6498;
               $6509 = $6508 + -0.93500000000000005;
               $6510 = $6498 * $6501;
               $6511 = $6509 + $6510;
               $6512 = $6496 * 0.089999999999999996;
               $6513 = $6494 * $6512;
               $6514 = $6513 + $6511;
               $6515 = $6500 * 0.089999999999999996;
               $6516 = $6514 - $6515;
               $6517 = (+__Z5IKabsd($6504));
               $6518 = $6517 > 5.0000000000000004E-6;
               if ($6518) {
                break L604;
               }
               $6519 = $6497 * $6501;
               $6520 = $6519 + -0.84999999999999998;
               $6521 = $6497 * $6502;
               $6522 = $6521 + $6520;
               $6523 = (+__Z5IKabsd($6522));
               $6524 = $6523 > 5.0000000000000004E-6;
               if ($6524) {
                break L604;
               }
               $6525 = (+__Z5IKabsd($6507));
               $6526 = $6525 > 5.0000000000000004E-6;
               if ($6526) {
                break L604;
               }
               $6527 = (+__Z5IKabsd($6516));
               $6528 = $6527 > 5.0000000000000004E-6;
               if ($6528) {
                break L604;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               break L604;
              }
             } while(0);
             $6075 = +HEAPF64[$45>>3];
             $6076 = -$6075;
             HEAPF64[$24>>3] = 1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$22>>3] = 1.5707963267949001;
             HEAPF64[$47>>3] = 0.0;
             HEAPF64[$7>>3] = 0.0;
             HEAPF64[$76>>3] = 0.0;
             HEAPF64[$75>>3] = 1.0;
             $6077 = +HEAPF64[$43>>3];
             $6078 = $6077 * $6077;
             $6079 = +HEAPF64[$45>>3];
             $6080 = $6079 * $6079;
             $6081 = $6078 + $6080;
             HEAPF64[$60>>3] = $6081;
             $6082 = +HEAPF64[$43>>3];
             $6083 = +HEAPF64[$26>>3];
             $6084 = $6082 * $6083;
             $6085 = +HEAPF64[$45>>3];
             $6086 = +HEAPF64[$32>>3];
             $6087 = $6085 * $6086;
             $6088 = $6084 + $6087;
             HEAPF64[$61>>3] = $6088;
             $6089 = +HEAPF64[$43>>3];
             $6090 = +HEAPF64[$28>>3];
             $6091 = $6089 * $6090;
             $6092 = +HEAPF64[$45>>3];
             $6093 = +HEAPF64[$34>>3];
             $6094 = $6092 * $6093;
             $6095 = $6091 + $6094;
             HEAPF64[$62>>3] = $6095;
             $6096 = +HEAPF64[$43>>3];
             $6097 = +HEAPF64[$30>>3];
             $6098 = $6096 * $6097;
             $6099 = +HEAPF64[$45>>3];
             $6100 = +HEAPF64[$36>>3];
             $6101 = $6099 * $6100;
             $6102 = $6098 + $6101;
             HEAPF64[$63>>3] = $6102;
             $6103 = +HEAPF64[$38>>3];
             $6104 = $6103 * $6076;
             HEAPF64[$64>>3] = $6104;
             $6105 = +HEAPF64[$43>>3];
             $6106 = +HEAPF64[$38>>3];
             $6107 = $6105 * $6106;
             HEAPF64[$65>>3] = $6107;
             $6108 = +HEAPF64[$40>>3];
             $6109 = $6108 * $6076;
             HEAPF64[$67>>3] = $6109;
             $6110 = +HEAPF64[$43>>3];
             $6111 = +HEAPF64[$40>>3];
             $6112 = $6110 * $6111;
             HEAPF64[$68>>3] = $6112;
             $6113 = +HEAPF64[$42>>3];
             $6114 = $6113 * $6076;
             HEAPF64[$70>>3] = $6114;
             $6115 = +HEAPF64[$43>>3];
             $6116 = +HEAPF64[$42>>3];
             $6117 = $6115 * $6116;
             HEAPF64[$71>>3] = $6117;
             $6118 = +HEAPF64[$43>>3];
             $6119 = $6118 * $6118;
             $6120 = +HEAPF64[$45>>3];
             $6121 = $6120 * $6120;
             $6122 = $6119 + $6121;
             $6123 = +HEAPF64[$184>>3];
             $6124 = $6119 * 20.0;
             $6125 = $6121 * 20.0;
             $6126 = $6124 + $6125;
             $6127 = (+__Z6IKsignd($6126));
             $6128 = (+__Z5IKabsd($6122));
             $6129 = $6128 < 9.9999999999999995E-7;
             do {
              if (!($6129)) {
               $6130 = (+__Z5IKabsd(289.0));
               $6131 = $6130 < 9.9999999999999995E-7;
               if ($6131) {
                break;
               }
               $6132 = (+__Z5IKabsd($6123));
               $6133 = $6132 < 9.9999999999999995E-7;
               if ($6133) {
                break;
               }
               $6134 = (+__Z5IKabsd($6127));
               $6135 = $6134 < 9.9999999999999995E-7;
               if ($6135) {
                break;
               }
               HEAP8[$2>>0] = 1;
               $6397 = +HEAPF64[$184>>3];
               $6398 = $6397 * 17.0;
               $6399 = +HEAPF64[$43>>3];
               $6400 = $6399 * $6399;
               $6401 = $6400 * 20.0;
               $6402 = +HEAPF64[$45>>3];
               $6403 = $6402 * $6402;
               $6404 = $6403 * 20.0;
               $6405 = $6401 + $6404;
               $6406 = (+__Z6IKsignd($6405));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1054,$6406,-1);
               $6407 = HEAP8[$217>>0]|0;
               $6408 = ($6407<<24>>24)==(0);
               if ($6408) {
                break L604;
               }
               $6409 = +HEAPF64[$45>>3];
               $6410 = $6398 * $6409;
               $6411 = +HEAPF64[$43>>3];
               $6412 = $6398 * $6411;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1055,$6410,$6412,1.9999999999999999E-6);
               $6413 = HEAP8[$218>>0]|0;
               $6414 = ($6413<<24>>24)==(0);
               if ($6414) {
                break L604;
               }
               $6415 = +HEAPF64[$x1054>>3];
               $6416 = $6415 * 1.5707963267949001;
               $6417 = $6416 + -1.5707963267949001;
               $6418 = +HEAPF64[$x1055>>3];
               $6419 = $6418 + $6417;
               $6420 = (+__Z5IKsind($6419));
               $6421 = (+__Z5IKcosd($6419));
               $6422 = $6419 > 3.14159265358979;
               do {
                if ($6422) {
                 $6423 = $6419 + -6.2831853071795898;
                 $6426 = $6423;
                } else {
                 $6424 = $6419 < -3.14159265358979;
                 if (!($6424)) {
                  $6426 = $6419;
                  break;
                 }
                 $6425 = $6419 + 6.2831853071795898;
                 $6426 = $6425;
                }
               } while(0);
               HEAP8[$0>>0] = 0;
               HEAP8[$1>>0] = -1;
               HEAPF64[$this>>3] = $6426;
               HEAPF64[$219>>3] = $6421;
               HEAPF64[$220>>3] = $6420;
               $6427 = +HEAPF64[$this>>3];
               $6428 = (+__Z5IKcosd($6427));
               $6429 = (+__Z5IKsind($6427));
               $6430 = +HEAPF64[$45>>3];
               $6431 = +HEAPF64[$184>>3];
               $6432 = $6431 * 1.1000000000000001;
               $6433 = +HEAPF64[$43>>3];
               $6434 = $6429 * $6433;
               $6435 = $6428 * $6433;
               $6436 = $6429 * $6430;
               $6437 = $6428 * $6430;
               $6438 = $6434 - $6437;
               $6439 = $6431 * 0.84999999999999998;
               $6440 = $6439 - $6436;
               $6441 = $6440 - $6435;
               $6442 = $6430 * 0.089999999999999996;
               $6443 = $6428 * $6442;
               $6444 = $6443 + -0.93500000000000005;
               $6445 = $6436 * $6432;
               $6446 = $6444 + $6445;
               $6447 = $6432 * $6435;
               $6448 = $6446 + $6447;
               $6449 = $6434 * 0.089999999999999996;
               $6450 = $6448 - $6449;
               $6451 = (+__Z5IKabsd($6438));
               $6452 = $6451 > 5.0000000000000004E-6;
               if ($6452) {
                break L604;
               }
               $6453 = $6431 * $6436;
               $6454 = $6453 + -0.84999999999999998;
               $6455 = $6431 * $6435;
               $6456 = $6454 + $6455;
               $6457 = (+__Z5IKabsd($6456));
               $6458 = $6457 > 5.0000000000000004E-6;
               if ($6458) {
                break L604;
               }
               $6459 = (+__Z5IKabsd($6441));
               $6460 = $6459 > 5.0000000000000004E-6;
               if ($6460) {
                break L604;
               }
               $6461 = (+__Z5IKabsd($6450));
               $6462 = $6461 > 5.0000000000000004E-6;
               if ($6462) {
                break L604;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               break L604;
              }
             } while(0);
             $6136 = +HEAPF64[$3>>3];
             $6137 = (+__Z5IKabsd($6136));
             $6138 = $6137 + 3.14159265358979;
             $6139 = (+__Z6IKfmoddd($6138,6.2831853071795898));
             $6140 = $6139 + -3.14159265358979;
             $6141 = +HEAPF64[$43>>3];
             $6142 = +HEAPF64[$45>>3];
             $6143 = (+__Z5IKabsd($6140));
             $6144 = $6143 < 9.9999999999999995E-7;
             do {
              if ($6144) {
               $6145 = $6141 * $6141;
               $6146 = 0.72250000000000003 - $6145;
               $6147 = $6142 * $6142;
               $6148 = $6146 - $6147;
               $6149 = (+__Z5IKabsd($6148));
               $6150 = $6149 < 9.9999999999999995E-7;
               if (!($6150)) {
                break;
               }
               $6151 = (+__Z5IKabsd(-0.84999999999999998));
               $6152 = $6151 < 9.9999999999999995E-7;
               if (!($6152)) {
                break;
               }
               $6153 = -$6142;
               HEAPF64[$24>>3] = 1.0;
               HEAPF64[$23>>3] = 0.0;
               HEAPF64[$22>>3] = 1.5707963267949001;
               HEAPF64[$47>>3] = 0.0;
               HEAPF64[$7>>3] = 0.0;
               HEAPF64[$76>>3] = 0.0;
               HEAPF64[$75>>3] = 1.0;
               $6154 = +HEAPF64[$43>>3];
               $6155 = $6154 * $6154;
               $6156 = +HEAPF64[$45>>3];
               $6157 = $6156 * $6156;
               $6158 = $6155 + $6157;
               HEAPF64[$60>>3] = $6158;
               $6159 = +HEAPF64[$43>>3];
               $6160 = +HEAPF64[$26>>3];
               $6161 = $6159 * $6160;
               $6162 = +HEAPF64[$45>>3];
               $6163 = +HEAPF64[$32>>3];
               $6164 = $6162 * $6163;
               $6165 = $6161 + $6164;
               HEAPF64[$61>>3] = $6165;
               $6166 = +HEAPF64[$43>>3];
               $6167 = +HEAPF64[$28>>3];
               $6168 = $6166 * $6167;
               $6169 = +HEAPF64[$45>>3];
               $6170 = +HEAPF64[$34>>3];
               $6171 = $6169 * $6170;
               $6172 = $6168 + $6171;
               HEAPF64[$62>>3] = $6172;
               $6173 = +HEAPF64[$43>>3];
               $6174 = +HEAPF64[$30>>3];
               $6175 = $6173 * $6174;
               $6176 = +HEAPF64[$45>>3];
               $6177 = +HEAPF64[$36>>3];
               $6178 = $6176 * $6177;
               $6179 = $6175 + $6178;
               HEAPF64[$63>>3] = $6179;
               $6180 = +HEAPF64[$38>>3];
               $6181 = $6180 * $6153;
               HEAPF64[$64>>3] = $6181;
               $6182 = +HEAPF64[$43>>3];
               $6183 = +HEAPF64[$38>>3];
               $6184 = $6182 * $6183;
               HEAPF64[$65>>3] = $6184;
               $6185 = +HEAPF64[$40>>3];
               $6186 = $6185 * $6153;
               HEAPF64[$67>>3] = $6186;
               $6187 = +HEAPF64[$43>>3];
               $6188 = +HEAPF64[$40>>3];
               $6189 = $6187 * $6188;
               HEAPF64[$68>>3] = $6189;
               $6190 = +HEAPF64[$42>>3];
               $6191 = $6190 * $6153;
               HEAPF64[$70>>3] = $6191;
               $6192 = +HEAPF64[$43>>3];
               $6193 = +HEAPF64[$42>>3];
               $6194 = $6192 * $6193;
               HEAPF64[$71>>3] = $6194;
               HEAPF64[$184>>3] = 0.0;
               HEAPF64[$183>>3] = 1.0;
               HEAPF64[$3>>3] = 0.0;
               $6195 = +HEAPF64[$45>>3];
               $6196 = $6195 * $6195;
               $6197 = +HEAPF64[$43>>3];
               $6198 = $6197 * $6197;
               $6199 = -$6196;
               $6200 = $6199 - $6198;
               $6201 = $6196 * 18.0;
               $6202 = $6198 * -18.0;
               $6203 = $6202 - $6201;
               $6204 = (+__Z6IKsignd($6203));
               $6205 = (+__Z5IKabsd($6200));
               $6206 = $6205 < 9.9999999999999995E-7;
               if ($6206) {
                break L604;
               }
               $6207 = (+__Z5IKabsd($6195));
               $6208 = (+__Z5IKabsd($6197));
               $6209 = $6207 + $6208;
               $6210 = (+__Z5IKabsd($6209));
               $6211 = $6210 < 9.9999999999999995E-7;
               if ($6211) {
                break L604;
               }
               $6212 = (+__Z5IKabsd($6204));
               $6213 = $6212 < 9.9999999999999995E-7;
               if ($6213) {
                break L604;
               }
               HEAP8[$2>>0] = 1;
               $6214 = +HEAPF64[$43>>3];
               $6215 = $6214 * $6214;
               $6216 = $6215 * 18.0;
               $6217 = +HEAPF64[$45>>3];
               $6218 = $6217 * $6217;
               $6219 = $6218 * -18.0;
               $6220 = $6219 - $6216;
               $6221 = (+__Z6IKsignd($6220));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1038,$6221,-1);
               $6222 = HEAP8[$209>>0]|0;
               $6223 = ($6222<<24>>24)==(0);
               if ($6223) {
                break L604;
               }
               $6224 = +HEAPF64[$43>>3];
               $6225 = $6224 * 187.0;
               $6226 = +HEAPF64[$45>>3];
               $6227 = $6226 * -187.0;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1039,$6225,$6227,1.9999999999999999E-6);
               $6228 = HEAP8[$210>>0]|0;
               $6229 = ($6228<<24>>24)==(0);
               if ($6229) {
                break L604;
               }
               $6230 = +HEAPF64[$x1038>>3];
               $6231 = $6230 * 1.5707963267949001;
               $6232 = $6231 + -1.5707963267949001;
               $6233 = +HEAPF64[$x1039>>3];
               $6234 = $6233 + $6232;
               $6235 = (+__Z5IKsind($6234));
               $6236 = (+__Z5IKcosd($6234));
               $6237 = $6234 > 3.14159265358979;
               do {
                if ($6237) {
                 $6238 = $6234 + -6.2831853071795898;
                 $6241 = $6238;
                } else {
                 $6239 = $6234 < -3.14159265358979;
                 if (!($6239)) {
                  $6241 = $6234;
                  break;
                 }
                 $6240 = $6234 + 6.2831853071795898;
                 $6241 = $6240;
                }
               } while(0);
               HEAP8[$0>>0] = 0;
               HEAP8[$1>>0] = -1;
               HEAPF64[$this>>3] = $6241;
               HEAPF64[$211>>3] = $6236;
               HEAPF64[$212>>3] = $6235;
               $6242 = +HEAPF64[$this>>3];
               $6243 = (+__Z5IKcosd($6242));
               $6244 = (+__Z5IKsind($6242));
               $6245 = +HEAPF64[$43>>3];
               $6246 = $6244 * $6245;
               $6247 = +HEAPF64[$45>>3];
               $6248 = -$6247;
               $6249 = $6243 * $6248;
               $6250 = $6246 + $6249;
               $6251 = $6247 * 0.089999999999999996;
               $6252 = $6243 * $6251;
               $6253 = $6252 + -0.93500000000000005;
               $6254 = $6246 * 0.089999999999999996;
               $6255 = $6253 - $6254;
               $6256 = (+__Z5IKabsd($6250));
               $6257 = $6256 > 5.0000000000000004E-6;
               if ($6257) {
                break L604;
               }
               $6258 = $6244 * $6248;
               $6259 = $6243 * $6245;
               $6260 = $6258 - $6259;
               $6261 = (+__Z5IKabsd($6260));
               $6262 = $6261 > 5.0000000000000004E-6;
               if ($6262) {
                break L604;
               }
               $6263 = (+__Z5IKabsd($6255));
               $6264 = $6263 > 5.0000000000000004E-6;
               if ($6264) {
                break L604;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               break L604;
              }
             } while(0);
             $6265 = +HEAPF64[$3>>3];
             $6266 = $6265 + -3.14159265358979;
             $6267 = (+__Z5IKabsd($6266));
             $6268 = $6267 + 3.14159265358979;
             $6269 = (+__Z6IKfmoddd($6268,6.2831853071795898));
             $6270 = $6269 + -3.14159265358979;
             $6271 = +HEAPF64[$43>>3];
             $6272 = +HEAPF64[$45>>3];
             $6273 = (+__Z5IKabsd($6270));
             $6274 = $6273 < 9.9999999999999995E-7;
             if (!($6274)) {
              break L604;
             }
             $6275 = $6271 * $6271;
             $6276 = 0.72250000000000003 - $6275;
             $6277 = $6272 * $6272;
             $6278 = $6276 - $6277;
             $6279 = (+__Z5IKabsd($6278));
             $6280 = $6279 < 9.9999999999999995E-7;
             if (!($6280)) {
              break L604;
             }
             $6281 = (+__Z5IKabsd(-0.84999999999999998));
             $6282 = $6281 < 9.9999999999999995E-7;
             if (!($6282)) {
              break L604;
             }
             $6283 = (+__Z5IKabsd(0.84999999999999998));
             $6284 = $6283 < 9.9999999999999995E-7;
             if (!($6284)) {
              break L604;
             }
             $6285 = -$6272;
             HEAPF64[$24>>3] = 1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$22>>3] = 1.5707963267949001;
             HEAPF64[$47>>3] = 0.0;
             HEAPF64[$7>>3] = 0.0;
             HEAPF64[$76>>3] = 0.0;
             HEAPF64[$75>>3] = 1.0;
             $6286 = +HEAPF64[$43>>3];
             $6287 = $6286 * $6286;
             $6288 = +HEAPF64[$45>>3];
             $6289 = $6288 * $6288;
             $6290 = $6287 + $6289;
             HEAPF64[$60>>3] = $6290;
             $6291 = +HEAPF64[$43>>3];
             $6292 = +HEAPF64[$26>>3];
             $6293 = $6291 * $6292;
             $6294 = +HEAPF64[$45>>3];
             $6295 = +HEAPF64[$32>>3];
             $6296 = $6294 * $6295;
             $6297 = $6293 + $6296;
             HEAPF64[$61>>3] = $6297;
             $6298 = +HEAPF64[$43>>3];
             $6299 = +HEAPF64[$28>>3];
             $6300 = $6298 * $6299;
             $6301 = +HEAPF64[$45>>3];
             $6302 = +HEAPF64[$34>>3];
             $6303 = $6301 * $6302;
             $6304 = $6300 + $6303;
             HEAPF64[$62>>3] = $6304;
             $6305 = +HEAPF64[$43>>3];
             $6306 = +HEAPF64[$30>>3];
             $6307 = $6305 * $6306;
             $6308 = +HEAPF64[$45>>3];
             $6309 = +HEAPF64[$36>>3];
             $6310 = $6308 * $6309;
             $6311 = $6307 + $6310;
             HEAPF64[$63>>3] = $6311;
             $6312 = +HEAPF64[$38>>3];
             $6313 = $6312 * $6285;
             HEAPF64[$64>>3] = $6313;
             $6314 = +HEAPF64[$43>>3];
             $6315 = +HEAPF64[$38>>3];
             $6316 = $6314 * $6315;
             HEAPF64[$65>>3] = $6316;
             $6317 = +HEAPF64[$40>>3];
             $6318 = $6317 * $6285;
             HEAPF64[$67>>3] = $6318;
             $6319 = +HEAPF64[$43>>3];
             $6320 = +HEAPF64[$40>>3];
             $6321 = $6319 * $6320;
             HEAPF64[$68>>3] = $6321;
             $6322 = +HEAPF64[$42>>3];
             $6323 = $6322 * $6285;
             HEAPF64[$70>>3] = $6323;
             $6324 = +HEAPF64[$43>>3];
             $6325 = +HEAPF64[$42>>3];
             $6326 = $6324 * $6325;
             HEAPF64[$71>>3] = $6326;
             HEAPF64[$184>>3] = 0.0;
             HEAPF64[$183>>3] = -1.0;
             HEAPF64[$3>>3] = 3.14159265358979;
             $6327 = +HEAPF64[$45>>3];
             $6328 = $6327 * $6327;
             $6329 = +HEAPF64[$43>>3];
             $6330 = $6329 * $6329;
             $6331 = -$6328;
             $6332 = $6331 - $6330;
             $6333 = $6328 * 18.0;
             $6334 = $6330 * -18.0;
             $6335 = $6334 - $6333;
             $6336 = (+__Z6IKsignd($6335));
             $6337 = (+__Z5IKabsd($6332));
             $6338 = $6337 < 9.9999999999999995E-7;
             if ($6338) {
              break L604;
             }
             $6339 = (+__Z5IKabsd($6327));
             $6340 = (+__Z5IKabsd($6329));
             $6341 = $6339 + $6340;
             $6342 = (+__Z5IKabsd($6341));
             $6343 = $6342 < 9.9999999999999995E-7;
             if ($6343) {
              break L604;
             }
             $6344 = (+__Z5IKabsd($6336));
             $6345 = $6344 < 9.9999999999999995E-7;
             if ($6345) {
              break L604;
             }
             HEAP8[$2>>0] = 1;
             $6346 = +HEAPF64[$43>>3];
             $6347 = $6346 * $6346;
             $6348 = $6347 * 18.0;
             $6349 = +HEAPF64[$45>>3];
             $6350 = $6349 * $6349;
             $6351 = $6350 * -18.0;
             $6352 = $6351 - $6348;
             $6353 = (+__Z6IKsignd($6352));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1047,$6353,-1);
             $6354 = HEAP8[$213>>0]|0;
             $6355 = ($6354<<24>>24)==(0);
             if ($6355) {
              break L604;
             }
             $6356 = +HEAPF64[$43>>3];
             $6357 = $6356 * 187.0;
             $6358 = +HEAPF64[$45>>3];
             $6359 = $6358 * -187.0;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1048,$6357,$6359,1.9999999999999999E-6);
             $6360 = HEAP8[$214>>0]|0;
             $6361 = ($6360<<24>>24)==(0);
             if ($6361) {
              break L604;
             }
             $6362 = +HEAPF64[$x1047>>3];
             $6363 = $6362 * 1.5707963267949001;
             $6364 = $6363 + -1.5707963267949001;
             $6365 = +HEAPF64[$x1048>>3];
             $6366 = $6365 + $6364;
             $6367 = (+__Z5IKsind($6366));
             $6368 = (+__Z5IKcosd($6366));
             $6369 = $6366 > 3.14159265358979;
             do {
              if ($6369) {
               $6370 = $6366 + -6.2831853071795898;
               $6373 = $6370;
              } else {
               $6371 = $6366 < -3.14159265358979;
               if (!($6371)) {
                $6373 = $6366;
                break;
               }
               $6372 = $6366 + 6.2831853071795898;
               $6373 = $6372;
              }
             } while(0);
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             HEAPF64[$this>>3] = $6373;
             HEAPF64[$215>>3] = $6368;
             HEAPF64[$216>>3] = $6367;
             $6374 = +HEAPF64[$this>>3];
             $6375 = (+__Z5IKcosd($6374));
             $6376 = (+__Z5IKsind($6374));
             $6377 = +HEAPF64[$43>>3];
             $6378 = $6376 * $6377;
             $6379 = +HEAPF64[$45>>3];
             $6380 = -$6379;
             $6381 = $6375 * $6380;
             $6382 = $6378 + $6381;
             $6383 = $6379 * 0.089999999999999996;
             $6384 = $6375 * $6383;
             $6385 = $6384 + -0.93500000000000005;
             $6386 = $6378 * 0.089999999999999996;
             $6387 = $6385 - $6386;
             $6388 = (+__Z5IKabsd($6382));
             $6389 = $6388 > 5.0000000000000004E-6;
             if ($6389) {
              break L604;
             }
             $6390 = $6376 * $6380;
             $6391 = $6375 * $6377;
             $6392 = $6390 - $6391;
             $6393 = (+__Z5IKabsd($6392));
             $6394 = $6393 > 5.0000000000000004E-6;
             if ($6394) {
              break L604;
             }
             $6395 = (+__Z5IKabsd($6387));
             $6396 = $6395 > 5.0000000000000004E-6;
             if ($6396) {
              break L604;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L604;
            }
           } while(0);
           $6529 = +HEAPF64[$7>>3];
           $6530 = $6529 + 3.14159265358979;
           $6531 = (+__Z6IKfmoddd($6530,6.2831853071795898));
           $6532 = $6531 + -3.14159265358979;
           $6533 = (+__Z5IKabsd($6532));
           $6534 = +HEAPF64[$3>>3];
           $6535 = $6534 + 3.14159265358979;
           $6536 = (+__Z6IKfmoddd($6535,6.2831853071795898));
           $6537 = $6536 + -3.14159265358979;
           $6538 = (+__Z5IKabsd($6537));
           $6539 = $6533 + $6538;
           $6540 = +HEAPF64[$47>>3];
           $6541 = $6540 + -0.84999999999999998;
           $6542 = (+__Z5IKabsd($6539));
           $6543 = $6542 < 9.9999999999999995E-7;
           do {
            if ($6543) {
             $6544 = +HEAPF64[$60>>3];
             $6545 = 0.72250000000000003 - $6544;
             $6546 = (+__Z5IKabsd($6545));
             $6547 = $6546 < 9.9999999999999995E-7;
             if (!($6547)) {
              break;
             }
             $6548 = (+__Z5IKabsd($6541));
             $6549 = $6548 < 9.9999999999999995E-7;
             if (!($6549)) {
              break;
             }
             HEAPF64[$24>>3] = 1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$22>>3] = 1.5707963267949001;
             HEAPF64[$7>>3] = 0.0;
             HEAPF64[$76>>3] = 0.0;
             HEAPF64[$75>>3] = 1.0;
             HEAPF64[$3>>3] = 0.0;
             HEAPF64[$184>>3] = 0.0;
             HEAPF64[$183>>3] = 1.0;
             $6550 = +HEAPF64[$43>>3];
             $6551 = (+__Z5IKabsd($6550));
             $6552 = +HEAPF64[$45>>3];
             $6553 = (+__Z5IKabsd($6552));
             $6554 = $6551 + $6553;
             $6555 = (+__Z5IKabsd($6554));
             $6556 = $6555 < 9.9999999999999995E-7;
             if (!($6556)) {
              HEAP16[$j0valid375>>1] = 0;
              HEAP8[$2>>0] = 2;
              $6621 = +HEAPF64[$43>>3];
              $6622 = +HEAPF64[$45>>3];
              __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1078,$6621,$6622,1.9999999999999999E-6);
              $6623 = HEAP8[$232>>0]|0;
              $6624 = ($6623<<24>>24)==(0);
              if ($6624) {
               break L604;
              }
              $6625 = +HEAPF64[$x1078>>3];
              $6626 = -$6625;
              HEAPF64[$j0array372>>3] = $6626;
              $6627 = (+__Z5IKsind($6626));
              HEAPF64[$sj0array374>>3] = $6627;
              $6628 = (+__Z5IKcosd($6626));
              HEAPF64[$cj0array373>>3] = $6628;
              $6629 = 3.14159265358979 - $6625;
              HEAPF64[$233>>3] = $6629;
              $6630 = (+__Z5IKsind($6629));
              HEAPF64[$234>>3] = $6630;
              $6631 = +HEAPF64[$233>>3];
              $6632 = (+__Z5IKcosd($6631));
              HEAPF64[$235>>3] = $6632;
              $6633 = +HEAPF64[$j0array372>>3];
              $6634 = $6633 > 3.14159265358979;
              do {
               if ($6634) {
                $6635 = $6633 + -6.2831853071795898;
                HEAPF64[$j0array372>>3] = $6635;
               } else {
                $6636 = $6633 < -3.14159265358979;
                if (!($6636)) {
                 break;
                }
                $6637 = $6633 + 6.2831853071795898;
                HEAPF64[$j0array372>>3] = $6637;
               }
              } while(0);
              HEAP8[$j0valid375>>0] = 1;
              $6638 = +HEAPF64[$233>>3];
              $6639 = $6638 > 3.14159265358979;
              do {
               if ($6639) {
                $6640 = $6638 + -6.2831853071795898;
                HEAPF64[$233>>3] = $6640;
               } else {
                $6641 = $6638 < -3.14159265358979;
                if (!($6641)) {
                 break;
                }
                $6642 = $6638 + 6.2831853071795898;
                HEAPF64[$233>>3] = $6642;
               }
              } while(0);
              HEAP8[$236>>0] = 1;
              $6643 = HEAP8[$j0valid375>>0]|0;
              $6644 = ($6643<<24>>24)==(0);
              do {
               if (!($6644)) {
                HEAP8[$0>>0] = 0;
                HEAP8[$1>>0] = -1;
                $6645 = HEAP8[$888>>0]|0;
                $6646 = ($6645<<24>>24)==(0);
                do {
                 if (!($6646)) {
                  $6647 = +HEAPF64[$cj0array373>>3];
                  $6648 = +HEAPF64[$889>>3];
                  $6649 = $6647 - $6648;
                  $6650 = (+__Z5IKabsd($6649));
                  $6651 = $6650 < 9.9999999999999995E-7;
                  if (!($6651)) {
                   break;
                  }
                  $6652 = +HEAPF64[$sj0array374>>3];
                  $6653 = +HEAPF64[$890>>3];
                  $6654 = $6652 - $6653;
                  $6655 = (+__Z5IKabsd($6654));
                  $6656 = $6655 < 9.9999999999999995E-7;
                  if (!($6656)) {
                   break;
                  }
                  HEAP8[$888>>0] = 0;
                  HEAP8[$1>>0] = 1;
                 }
                } while(0);
                $6657 = +HEAPF64[$j0array372>>3];
                HEAPF64[$this>>3] = $6657;
                $6658 = +HEAPF64[$cj0array373>>3];
                HEAPF64[$237>>3] = $6658;
                $6659 = +HEAPF64[$sj0array374>>3];
                HEAPF64[$238>>3] = $6659;
                $6660 = +HEAPF64[$this>>3];
                $6661 = (+__Z5IKcosd($6660));
                $6662 = (+__Z5IKsind($6660));
                $6663 = +HEAPF64[$43>>3];
                $6664 = $6662 * $6663;
                $6665 = +HEAPF64[$45>>3];
                $6666 = $6661 * $6665;
                $6667 = $6664 - $6666;
                $6668 = (+__Z5IKabsd($6667));
                $6669 = $6668 > 5.0000000000000004E-6;
                if ($6669) {
                 break;
                }
                $6670 = $6664 * 0.089999999999999996;
                $6671 = $6666 * 0.089999999999999996;
                $6672 = $6671 - $6670;
                $6673 = (+__Z5IKabsd($6672));
                $6674 = $6673 > 5.0000000000000004E-6;
                if ($6674) {
                 break;
                }
                __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               }
              } while(0);
              $6675 = HEAP8[$884>>0]|0;
              $6676 = ($6675<<24>>24)==(0);
              if ($6676) {
               break L604;
              }
              HEAP8[$0>>0] = 1;
              HEAP8[$1>>0] = -1;
              $18762 = +HEAPF64[$885>>3];
              HEAPF64[$this>>3] = $18762;
              $18763 = +HEAPF64[$886>>3];
              HEAPF64[$237>>3] = $18763;
              $18764 = +HEAPF64[$887>>3];
              HEAPF64[$238>>3] = $18764;
              $18765 = +HEAPF64[$this>>3];
              $18766 = (+__Z5IKcosd($18765));
              $18767 = (+__Z5IKsind($18765));
              $18768 = +HEAPF64[$43>>3];
              $18769 = $18767 * $18768;
              $18770 = +HEAPF64[$45>>3];
              $18771 = $18766 * $18770;
              $18772 = $18769 - $18771;
              $18773 = (+__Z5IKabsd($18772));
              $18774 = $18773 > 5.0000000000000004E-6;
              if ($18774) {
               break L604;
              }
              $18775 = $18769 * 0.089999999999999996;
              $18776 = $18771 * 0.089999999999999996;
              $18777 = $18776 - $18775;
              $18778 = (+__Z5IKabsd($18777));
              $18779 = $18778 > 5.0000000000000004E-6;
              if ($18779) {
               break L604;
              }
              __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
              break L604;
             }
             HEAPF64[$24>>3] = 1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$22>>3] = 1.5707963267949001;
             HEAPF64[$7>>3] = 0.0;
             HEAPF64[$76>>3] = 0.0;
             HEAPF64[$75>>3] = 1.0;
             HEAPF64[$3>>3] = 0.0;
             HEAPF64[$184>>3] = 0.0;
             HEAPF64[$183>>3] = 1.0;
             $6557 = +HEAPF64[$60>>3];
             $6558 = +HEAPF64[$47>>3];
             $6559 = $6558 * $6558;
             $6560 = $6557 - $6559;
             $6561 = (+__Z5IKabsd($6560));
             $6562 = $6561 < 9.9999999999999995E-7;
             if ($6562) {
              break L604;
             }
             HEAP16[$j0valid368>>1] = 0;
             HEAP8[$2>>0] = 2;
             $6563 = +HEAPF64[$45>>3];
             $6564 = $6563 * 0.089999999999999996;
             $6565 = +HEAPF64[$43>>3];
             $6566 = $6565 * -0.089999999999999996;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1074,$6564,$6566,1.9999999999999999E-6);
             $6567 = HEAP8[$225>>0]|0;
             $6568 = ($6567<<24>>24)==(0);
             if ($6568) {
              break L604;
             }
             $6569 = +HEAPF64[$x1074>>3];
             $6570 = -$6569;
             HEAPF64[$j0array365>>3] = $6570;
             $6571 = (+__Z5IKsind($6570));
             HEAPF64[$sj0array367>>3] = $6571;
             $6572 = (+__Z5IKcosd($6570));
             HEAPF64[$cj0array366>>3] = $6572;
             $6573 = 3.14159265358979 - $6569;
             HEAPF64[$226>>3] = $6573;
             $6574 = (+__Z5IKsind($6573));
             HEAPF64[$227>>3] = $6574;
             $6575 = +HEAPF64[$226>>3];
             $6576 = (+__Z5IKcosd($6575));
             HEAPF64[$228>>3] = $6576;
             $6577 = +HEAPF64[$j0array365>>3];
             $6578 = $6577 > 3.14159265358979;
             do {
              if ($6578) {
               $6579 = $6577 + -6.2831853071795898;
               HEAPF64[$j0array365>>3] = $6579;
              } else {
               $6580 = $6577 < -3.14159265358979;
               if (!($6580)) {
                break;
               }
               $6581 = $6577 + 6.2831853071795898;
               HEAPF64[$j0array365>>3] = $6581;
              }
             } while(0);
             HEAP8[$j0valid368>>0] = 1;
             $6582 = +HEAPF64[$226>>3];
             $6583 = $6582 > 3.14159265358979;
             do {
              if ($6583) {
               $6584 = $6582 + -6.2831853071795898;
               HEAPF64[$226>>3] = $6584;
              } else {
               $6585 = $6582 < -3.14159265358979;
               if (!($6585)) {
                break;
               }
               $6586 = $6582 + 6.2831853071795898;
               HEAPF64[$226>>3] = $6586;
              }
             } while(0);
             HEAP8[$229>>0] = 1;
             $6587 = HEAP8[$j0valid368>>0]|0;
             $6588 = ($6587<<24>>24)==(0);
             do {
              if (!($6588)) {
               HEAP8[$0>>0] = 0;
               HEAP8[$1>>0] = -1;
               $6589 = HEAP8[$881>>0]|0;
               $6590 = ($6589<<24>>24)==(0);
               do {
                if (!($6590)) {
                 $6591 = +HEAPF64[$cj0array366>>3];
                 $6592 = +HEAPF64[$882>>3];
                 $6593 = $6591 - $6592;
                 $6594 = (+__Z5IKabsd($6593));
                 $6595 = $6594 < 9.9999999999999995E-7;
                 if (!($6595)) {
                  break;
                 }
                 $6596 = +HEAPF64[$sj0array367>>3];
                 $6597 = +HEAPF64[$883>>3];
                 $6598 = $6596 - $6597;
                 $6599 = (+__Z5IKabsd($6598));
                 $6600 = $6599 < 9.9999999999999995E-7;
                 if (!($6600)) {
                  break;
                 }
                 HEAP8[$881>>0] = 0;
                 HEAP8[$1>>0] = 1;
                }
               } while(0);
               $6601 = +HEAPF64[$j0array365>>3];
               HEAPF64[$this>>3] = $6601;
               $6602 = +HEAPF64[$cj0array366>>3];
               HEAPF64[$230>>3] = $6602;
               $6603 = +HEAPF64[$sj0array367>>3];
               HEAPF64[$231>>3] = $6603;
               $6604 = +HEAPF64[$this>>3];
               $6605 = (+__Z5IKsind($6604));
               $6606 = (+__Z5IKcosd($6604));
               $6607 = +HEAPF64[$43>>3];
               $6608 = $6606 * $6607;
               $6609 = +HEAPF64[$45>>3];
               $6610 = $6605 * $6609;
               $6611 = $6608 + $6610;
               $6612 = (+__Z5IKabsd($6611));
               $6613 = $6612 > 5.0000000000000004E-6;
               if ($6613) {
                break;
               }
               $6614 = $6606 * $6609;
               $6615 = $6605 * $6607;
               $6616 = $6615 - $6614;
               $6617 = (+__Z5IKabsd($6616));
               $6618 = $6617 > 5.0000000000000004E-6;
               if ($6618) {
                break;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
              }
             } while(0);
             $6619 = HEAP8[$877>>0]|0;
             $6620 = ($6619<<24>>24)==(0);
             if ($6620) {
              break L604;
             }
             HEAP8[$0>>0] = 1;
             HEAP8[$1>>0] = -1;
             $18780 = +HEAPF64[$878>>3];
             HEAPF64[$this>>3] = $18780;
             $18781 = +HEAPF64[$879>>3];
             HEAPF64[$230>>3] = $18781;
             $18782 = +HEAPF64[$880>>3];
             HEAPF64[$231>>3] = $18782;
             $18783 = +HEAPF64[$this>>3];
             $18784 = (+__Z5IKsind($18783));
             $18785 = (+__Z5IKcosd($18783));
             $18786 = +HEAPF64[$43>>3];
             $18787 = $18785 * $18786;
             $18788 = +HEAPF64[$45>>3];
             $18789 = $18784 * $18788;
             $18790 = $18787 + $18789;
             $18791 = (+__Z5IKabsd($18790));
             $18792 = $18791 > 5.0000000000000004E-6;
             if ($18792) {
              break L604;
             }
             $18793 = $18785 * $18788;
             $18794 = $18784 * $18786;
             $18795 = $18794 - $18793;
             $18796 = (+__Z5IKabsd($18795));
             $18797 = $18796 > 5.0000000000000004E-6;
             if ($18797) {
              break L604;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L604;
            }
           } while(0);
           $6677 = +HEAPF64[$3>>3];
           $6678 = (+__Z6IKfmoddd($6677,6.2831853071795898));
           $6679 = $6678 + -3.14159265358979;
           $6680 = (+__Z5IKabsd($6679));
           $6681 = +HEAPF64[$7>>3];
           $6682 = $6681 + 3.14159265358979;
           $6683 = (+__Z6IKfmoddd($6682,6.2831853071795898));
           $6684 = $6683 + -3.14159265358979;
           $6685 = (+__Z5IKabsd($6684));
           $6686 = $6680 + $6685;
           $6687 = +HEAPF64[$47>>3];
           $6688 = -0.84999999999999998 - $6687;
           $6689 = (+__Z5IKabsd($6686));
           $6690 = $6689 < 9.9999999999999995E-7;
           if (!($6690)) {
            break L604;
           }
           $6691 = +HEAPF64[$60>>3];
           $6692 = 0.72250000000000003 - $6691;
           $6693 = (+__Z5IKabsd($6692));
           $6694 = $6693 < 9.9999999999999995E-7;
           if (!($6694)) {
            break L604;
           }
           $6695 = (+__Z5IKabsd($6688));
           $6696 = $6695 < 9.9999999999999995E-7;
           if (!($6696)) {
            break L604;
           }
           HEAPF64[$24>>3] = 1.0;
           HEAPF64[$23>>3] = 0.0;
           HEAPF64[$22>>3] = 1.5707963267949001;
           HEAPF64[$7>>3] = 0.0;
           HEAPF64[$76>>3] = 0.0;
           HEAPF64[$75>>3] = 1.0;
           HEAPF64[$3>>3] = 3.14159265358979;
           HEAPF64[$184>>3] = 0.0;
           HEAPF64[$183>>3] = -1.0;
           $6697 = +HEAPF64[$43>>3];
           $6698 = (+__Z5IKabsd($6697));
           $6699 = +HEAPF64[$45>>3];
           $6700 = (+__Z5IKabsd($6699));
           $6701 = $6698 + $6700;
           $6702 = (+__Z5IKabsd($6701));
           $6703 = $6702 < 9.9999999999999995E-7;
           if (!($6703)) {
            HEAP16[$j0valid392>>1] = 0;
            HEAP8[$2>>0] = 2;
            $6769 = +HEAPF64[$45>>3];
            $6770 = -$6769;
            $6771 = +HEAPF64[$43>>3];
            __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1089,$6770,$6771,1.9999999999999999E-6);
            $6772 = HEAP8[$246>>0]|0;
            $6773 = ($6772<<24>>24)==(0);
            if ($6773) {
             break L604;
            }
            $6774 = +HEAPF64[$x1089>>3];
            $6775 = -$6774;
            HEAPF64[$j0array389>>3] = $6775;
            $6776 = (+__Z5IKsind($6775));
            HEAPF64[$sj0array391>>3] = $6776;
            $6777 = (+__Z5IKcosd($6775));
            HEAPF64[$cj0array390>>3] = $6777;
            $6778 = 3.14159265358979 - $6774;
            HEAPF64[$247>>3] = $6778;
            $6779 = (+__Z5IKsind($6778));
            HEAPF64[$248>>3] = $6779;
            $6780 = +HEAPF64[$247>>3];
            $6781 = (+__Z5IKcosd($6780));
            HEAPF64[$249>>3] = $6781;
            $6782 = +HEAPF64[$j0array389>>3];
            $6783 = $6782 > 3.14159265358979;
            do {
             if ($6783) {
              $6784 = $6782 + -6.2831853071795898;
              HEAPF64[$j0array389>>3] = $6784;
             } else {
              $6785 = $6782 < -3.14159265358979;
              if (!($6785)) {
               break;
              }
              $6786 = $6782 + 6.2831853071795898;
              HEAPF64[$j0array389>>3] = $6786;
             }
            } while(0);
            HEAP8[$j0valid392>>0] = 1;
            $6787 = +HEAPF64[$247>>3];
            $6788 = $6787 > 3.14159265358979;
            do {
             if ($6788) {
              $6789 = $6787 + -6.2831853071795898;
              HEAPF64[$247>>3] = $6789;
             } else {
              $6790 = $6787 < -3.14159265358979;
              if (!($6790)) {
               break;
              }
              $6791 = $6787 + 6.2831853071795898;
              HEAPF64[$247>>3] = $6791;
             }
            } while(0);
            HEAP8[$250>>0] = 1;
            $6792 = HEAP8[$j0valid392>>0]|0;
            $6793 = ($6792<<24>>24)==(0);
            do {
             if (!($6793)) {
              HEAP8[$0>>0] = 0;
              HEAP8[$1>>0] = -1;
              $6794 = HEAP8[$902>>0]|0;
              $6795 = ($6794<<24>>24)==(0);
              do {
               if (!($6795)) {
                $6796 = +HEAPF64[$cj0array390>>3];
                $6797 = +HEAPF64[$903>>3];
                $6798 = $6796 - $6797;
                $6799 = (+__Z5IKabsd($6798));
                $6800 = $6799 < 9.9999999999999995E-7;
                if (!($6800)) {
                 break;
                }
                $6801 = +HEAPF64[$sj0array391>>3];
                $6802 = +HEAPF64[$904>>3];
                $6803 = $6801 - $6802;
                $6804 = (+__Z5IKabsd($6803));
                $6805 = $6804 < 9.9999999999999995E-7;
                if (!($6805)) {
                 break;
                }
                HEAP8[$902>>0] = 0;
                HEAP8[$1>>0] = 1;
               }
              } while(0);
              $6806 = +HEAPF64[$j0array389>>3];
              HEAPF64[$this>>3] = $6806;
              $6807 = +HEAPF64[$cj0array390>>3];
              HEAPF64[$251>>3] = $6807;
              $6808 = +HEAPF64[$sj0array391>>3];
              HEAPF64[$252>>3] = $6808;
              $6809 = +HEAPF64[$this>>3];
              $6810 = (+__Z5IKcosd($6809));
              $6811 = (+__Z5IKsind($6809));
              $6812 = +HEAPF64[$43>>3];
              $6813 = $6810 * $6812;
              $6814 = +HEAPF64[$45>>3];
              $6815 = $6811 * $6814;
              $6816 = -$6815;
              $6817 = $6816 - $6813;
              $6818 = (+__Z5IKabsd($6817));
              $6819 = $6818 > 5.0000000000000004E-6;
              if ($6819) {
               break;
              }
              $6820 = $6814 * 0.089999999999999996;
              $6821 = $6810 * $6820;
              $6822 = $6812 * -0.089999999999999996;
              $6823 = $6811 * $6822;
              $6824 = $6823 + $6821;
              $6825 = (+__Z5IKabsd($6824));
              $6826 = $6825 > 5.0000000000000004E-6;
              if ($6826) {
               break;
              }
              __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             }
            } while(0);
            $6827 = HEAP8[$898>>0]|0;
            $6828 = ($6827<<24>>24)==(0);
            if ($6828) {
             break L604;
            }
            HEAP8[$0>>0] = 1;
            HEAP8[$1>>0] = -1;
            $18722 = +HEAPF64[$899>>3];
            HEAPF64[$this>>3] = $18722;
            $18723 = +HEAPF64[$900>>3];
            HEAPF64[$251>>3] = $18723;
            $18724 = +HEAPF64[$901>>3];
            HEAPF64[$252>>3] = $18724;
            $18725 = +HEAPF64[$this>>3];
            $18726 = (+__Z5IKcosd($18725));
            $18727 = (+__Z5IKsind($18725));
            $18728 = +HEAPF64[$43>>3];
            $18729 = $18726 * $18728;
            $18730 = +HEAPF64[$45>>3];
            $18731 = $18727 * $18730;
            $18732 = -$18731;
            $18733 = $18732 - $18729;
            $18734 = (+__Z5IKabsd($18733));
            $18735 = $18734 > 5.0000000000000004E-6;
            if ($18735) {
             break L604;
            }
            $18736 = $18730 * 0.089999999999999996;
            $18737 = $18726 * $18736;
            $18738 = $18728 * -0.089999999999999996;
            $18739 = $18727 * $18738;
            $18740 = $18739 + $18737;
            $18741 = (+__Z5IKabsd($18740));
            $18742 = $18741 > 5.0000000000000004E-6;
            if ($18742) {
             break L604;
            }
            __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
            break L604;
           }
           HEAPF64[$24>>3] = 1.0;
           HEAPF64[$23>>3] = 0.0;
           HEAPF64[$22>>3] = 1.5707963267949001;
           HEAPF64[$7>>3] = 0.0;
           HEAPF64[$76>>3] = 0.0;
           HEAPF64[$75>>3] = 1.0;
           HEAPF64[$3>>3] = 3.14159265358979;
           HEAPF64[$184>>3] = 0.0;
           HEAPF64[$183>>3] = -1.0;
           $6704 = +HEAPF64[$60>>3];
           $6705 = +HEAPF64[$47>>3];
           $6706 = $6705 * $6705;
           $6707 = $6704 - $6706;
           $6708 = (+__Z5IKabsd($6707));
           $6709 = $6708 < 9.9999999999999995E-7;
           if ($6709) {
            break L604;
           }
           HEAP16[$j0valid385>>1] = 0;
           HEAP8[$2>>0] = 2;
           $6710 = +HEAPF64[$45>>3];
           $6711 = $6710 * 0.089999999999999996;
           $6712 = +HEAPF64[$43>>3];
           $6713 = $6712 * -0.089999999999999996;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1084,$6711,$6713,1.9999999999999999E-6);
           $6714 = HEAP8[$239>>0]|0;
           $6715 = ($6714<<24>>24)==(0);
           if ($6715) {
            break L604;
           }
           $6716 = +HEAPF64[$x1084>>3];
           $6717 = -$6716;
           HEAPF64[$j0array382>>3] = $6717;
           $6718 = (+__Z5IKsind($6717));
           HEAPF64[$sj0array384>>3] = $6718;
           $6719 = (+__Z5IKcosd($6717));
           HEAPF64[$cj0array383>>3] = $6719;
           $6720 = 3.14159265358979 - $6716;
           HEAPF64[$240>>3] = $6720;
           $6721 = (+__Z5IKsind($6720));
           HEAPF64[$241>>3] = $6721;
           $6722 = +HEAPF64[$240>>3];
           $6723 = (+__Z5IKcosd($6722));
           HEAPF64[$242>>3] = $6723;
           $6724 = +HEAPF64[$j0array382>>3];
           $6725 = $6724 > 3.14159265358979;
           do {
            if ($6725) {
             $6726 = $6724 + -6.2831853071795898;
             HEAPF64[$j0array382>>3] = $6726;
            } else {
             $6727 = $6724 < -3.14159265358979;
             if (!($6727)) {
              break;
             }
             $6728 = $6724 + 6.2831853071795898;
             HEAPF64[$j0array382>>3] = $6728;
            }
           } while(0);
           HEAP8[$j0valid385>>0] = 1;
           $6729 = +HEAPF64[$240>>3];
           $6730 = $6729 > 3.14159265358979;
           do {
            if ($6730) {
             $6731 = $6729 + -6.2831853071795898;
             HEAPF64[$240>>3] = $6731;
            } else {
             $6732 = $6729 < -3.14159265358979;
             if (!($6732)) {
              break;
             }
             $6733 = $6729 + 6.2831853071795898;
             HEAPF64[$240>>3] = $6733;
            }
           } while(0);
           HEAP8[$243>>0] = 1;
           $6734 = HEAP8[$j0valid385>>0]|0;
           $6735 = ($6734<<24>>24)==(0);
           do {
            if (!($6735)) {
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             $6736 = HEAP8[$895>>0]|0;
             $6737 = ($6736<<24>>24)==(0);
             do {
              if (!($6737)) {
               $6738 = +HEAPF64[$cj0array383>>3];
               $6739 = +HEAPF64[$896>>3];
               $6740 = $6738 - $6739;
               $6741 = (+__Z5IKabsd($6740));
               $6742 = $6741 < 9.9999999999999995E-7;
               if (!($6742)) {
                break;
               }
               $6743 = +HEAPF64[$sj0array384>>3];
               $6744 = +HEAPF64[$897>>3];
               $6745 = $6743 - $6744;
               $6746 = (+__Z5IKabsd($6745));
               $6747 = $6746 < 9.9999999999999995E-7;
               if (!($6747)) {
                break;
               }
               HEAP8[$895>>0] = 0;
               HEAP8[$1>>0] = 1;
              }
             } while(0);
             $6748 = +HEAPF64[$j0array382>>3];
             HEAPF64[$this>>3] = $6748;
             $6749 = +HEAPF64[$cj0array383>>3];
             HEAPF64[$244>>3] = $6749;
             $6750 = +HEAPF64[$sj0array384>>3];
             HEAPF64[$245>>3] = $6750;
             $6751 = +HEAPF64[$this>>3];
             $6752 = (+__Z5IKcosd($6751));
             $6753 = (+__Z5IKsind($6751));
             $6754 = +HEAPF64[$45>>3];
             $6755 = -$6754;
             $6756 = $6752 * $6755;
             $6757 = +HEAPF64[$43>>3];
             $6758 = $6753 * $6757;
             $6759 = $6756 + $6758;
             $6760 = (+__Z5IKabsd($6759));
             $6761 = $6760 > 5.0000000000000004E-6;
             if ($6761) {
              break;
             }
             $6762 = $6753 * $6755;
             $6763 = $6752 * $6757;
             $6764 = $6762 - $6763;
             $6765 = (+__Z5IKabsd($6764));
             $6766 = $6765 > 5.0000000000000004E-6;
             if ($6766) {
              break;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
            }
           } while(0);
           $6767 = HEAP8[$891>>0]|0;
           $6768 = ($6767<<24>>24)==(0);
           if ($6768) {
            break L604;
           }
           HEAP8[$0>>0] = 1;
           HEAP8[$1>>0] = -1;
           $18743 = +HEAPF64[$892>>3];
           HEAPF64[$this>>3] = $18743;
           $18744 = +HEAPF64[$893>>3];
           HEAPF64[$244>>3] = $18744;
           $18745 = +HEAPF64[$894>>3];
           HEAPF64[$245>>3] = $18745;
           $18746 = +HEAPF64[$this>>3];
           $18747 = (+__Z5IKcosd($18746));
           $18748 = (+__Z5IKsind($18746));
           $18749 = +HEAPF64[$45>>3];
           $18750 = -$18749;
           $18751 = $18747 * $18750;
           $18752 = +HEAPF64[$43>>3];
           $18753 = $18748 * $18752;
           $18754 = $18751 + $18753;
           $18755 = (+__Z5IKabsd($18754));
           $18756 = $18755 > 5.0000000000000004E-6;
           if ($18756) {
            break L604;
           }
           $18757 = $18748 * $18750;
           $18758 = $18747 * $18752;
           $18759 = $18757 - $18758;
           $18760 = (+__Z5IKabsd($18759));
           $18761 = $18760 > 5.0000000000000004E-6;
           if ($18761) {
            break L604;
           }
           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           break L604;
          }
         } while(0);
         $7178 = +HEAPF64[$22>>3];
         $7179 = $7178 + 1.5707963267949001;
         $7180 = (+__Z5IKabsd($7179));
         $7181 = $7180 + 3.14159265358979;
         $7182 = (+__Z6IKfmoddd($7181,6.2831853071795898));
         $7183 = $7182 + -3.14159265358979;
         $7184 = +HEAPF64[$76>>3];
         $7185 = +HEAPF64[$75>>3];
         $7186 = +HEAPF64[$183>>3];
         $7187 = $7186 * -0.044999999999999998;
         $7188 = $7184 * $7187;
         $7189 = $7186 * 0.55000000000000004;
         $7190 = $7188 - $7189;
         $7191 = +HEAPF64[$47>>3];
         $7192 = $7191 + $7190;
         $7193 = $7186 * -0.29999999999999999;
         $7194 = $7185 * $7193;
         $7195 = $7194 + $7192;
         $7196 = (+__Z5IKabsd($7183));
         $7197 = $7196 < 9.9999999999999995E-7;
         do {
          if ($7197) {
           $7198 = +HEAPF64[$60>>3];
           $7199 = $7184 * 0.076499999999999999;
           $7200 = $7199 + 0.39655000000000001;
           $7201 = $7200 - $7198;
           $7202 = $7185 * 0.32595000000000002;
           $7203 = $7202 + $7201;
           $7204 = (+__Z5IKabsd($7203));
           $7205 = $7204 < 9.9999999999999995E-7;
           if (!($7205)) {
            break;
           }
           $7206 = (+__Z5IKabsd($7195));
           $7207 = $7206 < 9.9999999999999995E-7;
           if (!($7207)) {
            break;
           }
           HEAPF64[$24>>3] = -1.0;
           HEAPF64[$23>>3] = 0.0;
           HEAPF64[$22>>3] = -1.5707963267949001;
           $7208 = +HEAPF64[$183>>3];
           $7209 = $7208 * 0.044999999999999998;
           $7210 = +HEAPF64[$47>>3];
           $7211 = +HEAPF64[$184>>3];
           $7212 = $7210 * $7211;
           $7213 = $7208 * 0.29999999999999999;
           $7214 = +HEAPF64[$76>>3];
           $7215 = $7213 * $7214;
           $7216 = +HEAPF64[$60>>3];
           $7217 = $7208 * $7216;
           $7218 = $7210 * $7210;
           $7219 = $7208 * $7218;
           $7220 = $7217 - $7219;
           $7221 = +HEAPF64[$75>>3];
           $7222 = +HEAPF64[$45>>3];
           $7223 = $7221 * $7222;
           $7224 = $7209 * $7223;
           $7225 = +HEAPF64[$43>>3];
           $7226 = $7212 * $7225;
           $7227 = $7224 + $7226;
           $7228 = -$7222;
           $7229 = $7215 * $7228;
           $7230 = $7229 + $7227;
           $7231 = $7209 * $7228;
           $7232 = $7231 + $7230;
           $7233 = (+__Z5IKabsd($7232));
           $7234 = $7212 * $7222;
           $7235 = $7221 * $7225;
           $7236 = $7209 * $7235;
           $7237 = $7234 - $7236;
           $7238 = $7209 * $7225;
           $7239 = $7238 + $7237;
           $7240 = $7215 * $7225;
           $7241 = $7240 + $7239;
           $7242 = (+__Z5IKabsd($7241));
           $7243 = $7233 + $7242;
           $7244 = (+__Z5IKabsd($7220));
           $7245 = $7244 < 9.9999999999999995E-7;
           do {
            if (!($7245)) {
             $7246 = (+__Z6IKsignd($7220));
             $7247 = (+__Z5IKabsd($7246));
             $7248 = $7247 < 9.9999999999999995E-7;
             if ($7248) {
              break;
             }
             $7249 = (+__Z5IKabsd($7243));
             $7250 = $7249 < 9.9999999999999995E-7;
             if ($7250) {
              break;
             }
             HEAP8[$2>>0] = 1;
             $9324 = +HEAPF64[$183>>3];
             $9325 = $9324 * 0.044999999999999998;
             $9326 = +HEAPF64[$47>>3];
             $9327 = +HEAPF64[$184>>3];
             $9328 = $9326 * $9327;
             $9329 = $9324 * 0.29999999999999999;
             $9330 = +HEAPF64[$76>>3];
             $9331 = $9329 * $9330;
             $9332 = +HEAPF64[$60>>3];
             $9333 = $9324 * $9332;
             $9334 = $9326 * $9326;
             $9335 = $9324 * $9334;
             $9336 = $9333 - $9335;
             $9337 = (+__Z6IKsignd($9336));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1376,$9337,-1);
             $9338 = HEAP8[$341>>0]|0;
             $9339 = ($9338<<24>>24)==(0);
             if ($9339) {
              break L604;
             }
             $9340 = +HEAPF64[$43>>3];
             $9341 = $9331 * $9340;
             $9342 = $9325 * $9340;
             $9343 = $9341 + $9342;
             $9344 = +HEAPF64[$45>>3];
             $9345 = $9328 * $9344;
             $9346 = $9343 + $9345;
             $9347 = +HEAPF64[$75>>3];
             $9348 = $9340 * $9347;
             $9349 = $9325 * $9348;
             $9350 = $9346 - $9349;
             $9351 = $9328 * $9340;
             $9352 = $9344 * $9347;
             $9353 = $9325 * $9352;
             $9354 = $9351 + $9353;
             $9355 = -$9344;
             $9356 = $9331 * $9355;
             $9357 = $9356 + $9354;
             $9358 = $9325 * $9355;
             $9359 = $9358 + $9357;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1377,$9350,$9359,1.9999999999999999E-6);
             $9360 = HEAP8[$342>>0]|0;
             $9361 = ($9360<<24>>24)==(0);
             if ($9361) {
              break L604;
             }
             $9362 = +HEAPF64[$x1376>>3];
             $9363 = $9362 * 1.5707963267949001;
             $9364 = $9363 + -1.5707963267949001;
             $9365 = +HEAPF64[$x1377>>3];
             $9366 = $9365 + $9364;
             $9367 = (+__Z5IKsind($9366));
             $9368 = (+__Z5IKcosd($9366));
             $9369 = $9366 > 3.14159265358979;
             do {
              if ($9369) {
               $9370 = $9366 + -6.2831853071795898;
               $9373 = $9370;
              } else {
               $9371 = $9366 < -3.14159265358979;
               if (!($9371)) {
                $9373 = $9366;
                break;
               }
               $9372 = $9366 + 6.2831853071795898;
               $9373 = $9372;
              }
             } while(0);
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             HEAPF64[$this>>3] = $9373;
             HEAPF64[$343>>3] = $9368;
             HEAPF64[$344>>3] = $9367;
             $9374 = +HEAPF64[$this>>3];
             $9375 = (+__Z5IKsind($9374));
             $9376 = (+__Z5IKcosd($9374));
             $9377 = +HEAPF64[$184>>3];
             $9378 = $9377 * 1.1000000000000001;
             $9379 = +HEAPF64[$75>>3];
             $9380 = $9379 * 0.29999999999999999;
             $9381 = +HEAPF64[$76>>3];
             $9382 = $9381 * 0.044999999999999998;
             $9383 = +HEAPF64[$183>>3];
             $9384 = +HEAPF64[$47>>3];
             $9385 = $9383 * $9384;
             $9386 = +HEAPF64[$43>>3];
             $9387 = $9375 * $9386;
             $9388 = $9376 * $9386;
             $9389 = +HEAPF64[$45>>3];
             $9390 = $9375 * $9389;
             $9391 = $9376 * $9389;
             $9392 = -$9383;
             $9393 = $9390 * $9392;
             $9394 = $9388 * $9392;
             $9395 = $9394 + $9393;
             $9396 = $9377 * $9384;
             $9397 = $9396 + $9395;
             $9398 = -0.55000000000000004 - $9382;
             $9399 = $9398 - $9380;
             $9400 = $9399 + $9385;
             $9401 = $9377 * $9390;
             $9402 = $9400 + $9401;
             $9403 = $9377 * $9388;
             $9404 = $9403 + $9402;
             $9405 = $9377 * $9382;
             $9406 = $9377 * $9380;
             $9407 = $9406 + $9405;
             $9408 = $9407 - $9388;
             $9409 = $9408 - $9390;
             $9410 = $9377 * 0.55000000000000004;
             $9411 = $9410 + $9409;
             $9412 = $9378 * $9388;
             $9413 = $9412 + -0.21249999999999999;
             $9414 = $9378 * $9390;
             $9415 = $9413 + $9414;
             $9416 = $9391 * 0.089999999999999996;
             $9417 = $9415 - $9416;
             $9418 = $9385 * 1.1000000000000001;
             $9419 = $9418 + $9417;
             $9420 = +HEAPF64[$60>>3];
             $9421 = $9419 - $9420;
             $9422 = $9387 * 0.089999999999999996;
             $9423 = $9422 + $9421;
             $9424 = (+__Z5IKabsd($9397));
             $9425 = $9424 > 5.0000000000000004E-6;
             if ($9425) {
              break L604;
             }
             $9426 = $9387 + -0.044999999999999998;
             $9427 = $9379 * 0.044999999999999998;
             $9428 = $9427 + $9426;
             $9429 = $9428 - $9391;
             $9430 = $9381 * 0.29999999999999999;
             $9431 = $9429 - $9430;
             $9432 = (+__Z5IKabsd($9431));
             $9433 = $9432 > 5.0000000000000004E-6;
             if ($9433) {
              break L604;
             }
             $9434 = (+__Z5IKabsd($9404));
             $9435 = $9434 > 5.0000000000000004E-6;
             if ($9435) {
              break L604;
             }
             $9436 = (+__Z5IKabsd($9411));
             $9437 = $9436 > 5.0000000000000004E-6;
             if ($9437) {
              break L604;
             }
             $9438 = (+__Z5IKabsd($9423));
             $9439 = $9438 > 5.0000000000000004E-6;
             if ($9439) {
              break L604;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L604;
            }
           } while(0);
           HEAPF64[$24>>3] = -1.0;
           HEAPF64[$23>>3] = 0.0;
           HEAPF64[$22>>3] = -1.5707963267949001;
           $7251 = +HEAPF64[$47>>3];
           $7252 = $7251 * $7251;
           $7253 = +HEAPF64[$183>>3];
           $7254 = +HEAPF64[$60>>3];
           $7255 = $7253 * $7254;
           $7256 = $7251 * 1.1000000000000001;
           $7257 = $7253 * 0.21249999999999999;
           $7258 = $7253 * $7252;
           $7259 = $7251 * 0.089999999999999996;
           $7260 = +HEAPF64[$184>>3];
           $7261 = $7259 * $7260;
           $7262 = $7258 - $7255;
           $7263 = +HEAPF64[$43>>3];
           $7264 = -$7263;
           $7265 = +HEAPF64[$45>>3];
           $7266 = $7255 * 0.089999999999999996;
           $7267 = $7258 * 0.089999999999999996;
           $7268 = $7267 - $7266;
           $7269 = (+__Z6IKsignd($7268));
           $7270 = (+__Z5IKabsd($7262));
           $7271 = $7270 < 9.9999999999999995E-7;
           do {
            if (!($7271)) {
             $7272 = $7255 * $7265;
             $7273 = $7263 * $7261;
             $7274 = $7272 - $7273;
             $7275 = $7257 * $7265;
             $7276 = $7275 + $7274;
             $7277 = $7256 * $7265;
             $7278 = $7276 - $7277;
             $7279 = (+__Z5IKabsd($7278));
             $7280 = $7257 * $7264;
             $7281 = $7261 * $7265;
             $7282 = $7280 - $7281;
             $7283 = $7255 * $7264;
             $7284 = $7283 + $7282;
             $7285 = $7256 * $7263;
             $7286 = $7285 + $7284;
             $7287 = (+__Z5IKabsd($7286));
             $7288 = $7279 + $7287;
             $7289 = (+__Z5IKabsd($7288));
             $7290 = $7289 < 9.9999999999999995E-7;
             if ($7290) {
              break;
             }
             $7291 = (+__Z5IKabsd($7269));
             $7292 = $7291 < 9.9999999999999995E-7;
             if ($7292) {
              break;
             }
             HEAP8[$2>>0] = 1;
             $9206 = +HEAPF64[$47>>3];
             $9207 = $9206 * 1.1000000000000001;
             $9208 = +HEAPF64[$183>>3];
             $9209 = $9208 * 0.21249999999999999;
             $9210 = $9208 * 0.089999999999999996;
             $9211 = +HEAPF64[$60>>3];
             $9212 = $9208 * $9211;
             $9213 = $9206 * 0.089999999999999996;
             $9214 = +HEAPF64[$184>>3];
             $9215 = $9213 * $9214;
             $9216 = +HEAPF64[$43>>3];
             $9217 = -$9216;
             $9218 = $9212 * $9217;
             $9219 = $9209 * $9217;
             $9220 = $9218 + $9219;
             $9221 = $9207 * $9216;
             $9222 = $9221 + $9220;
             $9223 = +HEAPF64[$45>>3];
             $9224 = -$9223;
             $9225 = $9215 * $9224;
             $9226 = $9225 + $9222;
             $9227 = $9215 * $9217;
             $9228 = $9212 * $9223;
             $9229 = $9227 + $9228;
             $9230 = $9209 * $9223;
             $9231 = $9230 + $9229;
             $9232 = $9207 * $9224;
             $9233 = $9232 + $9231;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1360,$9226,$9233,1.9999999999999999E-6);
             $9234 = HEAP8[$337>>0]|0;
             $9235 = ($9234<<24>>24)==(0);
             if ($9235) {
              break L604;
             }
             $9236 = +HEAPF64[$60>>3];
             $9237 = $9210 * $9236;
             $9238 = +HEAPF64[$47>>3];
             $9239 = $9238 * $9238;
             $9240 = $9210 * $9239;
             $9241 = $9240 - $9237;
             $9242 = (+__Z6IKsignd($9241));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1361,$9242,-1);
             $9243 = HEAP8[$338>>0]|0;
             $9244 = ($9243<<24>>24)==(0);
             if ($9244) {
              break L604;
             }
             $9245 = +HEAPF64[$x1360>>3];
             $9246 = $9245 + -1.5707963267949001;
             $9247 = +HEAPF64[$x1361>>3];
             $9248 = $9247 * 1.5707963267949001;
             $9249 = $9246 + $9248;
             $9250 = (+__Z5IKsind($9249));
             $9251 = (+__Z5IKcosd($9249));
             $9252 = $9249 > 3.14159265358979;
             do {
              if ($9252) {
               $9253 = $9249 + -6.2831853071795898;
               $9256 = $9253;
              } else {
               $9254 = $9249 < -3.14159265358979;
               if (!($9254)) {
                $9256 = $9249;
                break;
               }
               $9255 = $9249 + 6.2831853071795898;
               $9256 = $9255;
              }
             } while(0);
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             HEAPF64[$this>>3] = $9256;
             HEAPF64[$339>>3] = $9251;
             HEAPF64[$340>>3] = $9250;
             $9257 = +HEAPF64[$this>>3];
             $9258 = (+__Z5IKsind($9257));
             $9259 = (+__Z5IKcosd($9257));
             $9260 = +HEAPF64[$184>>3];
             $9261 = $9260 * 1.1000000000000001;
             $9262 = +HEAPF64[$75>>3];
             $9263 = $9262 * 0.29999999999999999;
             $9264 = +HEAPF64[$76>>3];
             $9265 = $9264 * 0.044999999999999998;
             $9266 = +HEAPF64[$183>>3];
             $9267 = +HEAPF64[$47>>3];
             $9268 = $9266 * $9267;
             $9269 = +HEAPF64[$43>>3];
             $9270 = $9258 * $9269;
             $9271 = $9259 * $9269;
             $9272 = +HEAPF64[$45>>3];
             $9273 = $9258 * $9272;
             $9274 = $9259 * $9272;
             $9275 = -$9266;
             $9276 = $9273 * $9275;
             $9277 = $9271 * $9275;
             $9278 = $9277 + $9276;
             $9279 = $9260 * $9267;
             $9280 = $9279 + $9278;
             $9281 = $9268 + -0.55000000000000004;
             $9282 = $9260 * $9271;
             $9283 = $9281 + $9282;
             $9284 = $9260 * $9273;
             $9285 = $9283 + $9284;
             $9286 = $9285 - $9265;
             $9287 = $9286 - $9263;
             $9288 = -$9271;
             $9289 = $9288 - $9273;
             $9290 = $9260 * $9265;
             $9291 = $9290 + $9289;
             $9292 = $9260 * $9263;
             $9293 = $9292 + $9291;
             $9294 = $9260 * 0.55000000000000004;
             $9295 = $9294 + $9293;
             $9296 = $9268 * 1.1000000000000001;
             $9297 = $9296 + -0.21249999999999999;
             $9298 = $9270 * 0.089999999999999996;
             $9299 = $9297 + $9298;
             $9300 = +HEAPF64[$60>>3];
             $9301 = $9299 - $9300;
             $9302 = $9274 * 0.089999999999999996;
             $9303 = $9301 - $9302;
             $9304 = $9261 * $9273;
             $9305 = $9304 + $9303;
             $9306 = $9261 * $9271;
             $9307 = $9306 + $9305;
             $9308 = (+__Z5IKabsd($9280));
             $9309 = $9308 > 5.0000000000000004E-6;
             if ($9309) {
              break L604;
             }
             $9310 = $9270 + -0.044999999999999998;
             $9311 = $9262 * 0.044999999999999998;
             $9312 = $9311 + $9310;
             $9313 = $9312 - $9274;
             $9314 = $9264 * 0.29999999999999999;
             $9315 = $9313 - $9314;
             $9316 = (+__Z5IKabsd($9315));
             $9317 = $9316 > 5.0000000000000004E-6;
             if ($9317) {
              break L604;
             }
             $9318 = (+__Z5IKabsd($9287));
             $9319 = $9318 > 5.0000000000000004E-6;
             if ($9319) {
              break L604;
             }
             $9320 = (+__Z5IKabsd($9295));
             $9321 = $9320 > 5.0000000000000004E-6;
             if ($9321) {
              break L604;
             }
             $9322 = (+__Z5IKabsd($9307));
             $9323 = $9322 > 5.0000000000000004E-6;
             if ($9323) {
              break L604;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L604;
            }
           } while(0);
           HEAPF64[$24>>3] = -1.0;
           HEAPF64[$23>>3] = 0.0;
           HEAPF64[$22>>3] = -1.5707963267949001;
           $7293 = +HEAPF64[$45>>3];
           $7294 = $7293 * 0.29999999999999999;
           $7295 = +HEAPF64[$75>>3];
           $7296 = +HEAPF64[$184>>3];
           $7297 = $7295 * $7296;
           $7298 = $7296 * 0.55000000000000004;
           $7299 = +HEAPF64[$43>>3];
           $7300 = $7299 * 0.29999999999999999;
           $7301 = $7293 * 0.044999999999999998;
           $7302 = +HEAPF64[$76>>3];
           $7303 = $7296 * $7302;
           $7304 = $7299 * 0.044999999999999998;
           $7305 = +HEAPF64[$60>>3];
           $7306 = +HEAPF64[$47>>3];
           $7307 = $7306 * $7306;
           $7308 = $7305 - $7307;
           $7309 = (+__Z6IKsignd($7308));
           $7310 = (+__Z5IKabsd($7308));
           $7311 = $7310 < 9.9999999999999995E-7;
           do {
            if (!($7311)) {
             $7312 = $7302 * $7300;
             $7313 = $7304 + $7312;
             $7314 = $7294 * $7297;
             $7315 = $7314 + $7313;
             $7316 = $7295 * $7304;
             $7317 = $7315 - $7316;
             $7318 = $7301 * $7303;
             $7319 = $7318 + $7317;
             $7320 = $7293 * $7298;
             $7321 = $7320 + $7319;
             $7322 = (+__Z5IKabsd($7321));
             $7323 = $7295 * $7301;
             $7324 = $7323 - $7301;
             $7325 = $7297 * $7300;
             $7326 = $7324 + $7325;
             $7327 = $7294 * $7302;
             $7328 = $7326 - $7327;
             $7329 = $7299 * $7298;
             $7330 = $7329 + $7328;
             $7331 = $7304 * $7303;
             $7332 = $7331 + $7330;
             $7333 = (+__Z5IKabsd($7332));
             $7334 = $7322 + $7333;
             $7335 = (+__Z5IKabsd($7334));
             $7336 = $7335 < 9.9999999999999995E-7;
             if ($7336) {
              break;
             }
             $7337 = (+__Z5IKabsd($7309));
             $7338 = $7337 < 9.9999999999999995E-7;
             if ($7338) {
              break;
             }
             HEAP8[$2>>0] = 1;
             $9082 = +HEAPF64[$45>>3];
             $9083 = $9082 * 0.29999999999999999;
             $9084 = +HEAPF64[$75>>3];
             $9085 = +HEAPF64[$184>>3];
             $9086 = $9084 * $9085;
             $9087 = $9085 * 0.55000000000000004;
             $9088 = +HEAPF64[$43>>3];
             $9089 = $9088 * 0.29999999999999999;
             $9090 = $9082 * 0.044999999999999998;
             $9091 = +HEAPF64[$76>>3];
             $9092 = $9085 * $9091;
             $9093 = $9088 * 0.044999999999999998;
             $9094 = +HEAPF64[$60>>3];
             $9095 = +HEAPF64[$47>>3];
             $9096 = $9095 * $9095;
             $9097 = $9094 - $9096;
             $9098 = (+__Z6IKsignd($9097));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1342,$9098,-1);
             $9099 = HEAP8[$333>>0]|0;
             $9100 = ($9099<<24>>24)==(0);
             if ($9100) {
              break L604;
             }
             $9101 = $9090 * $9092;
             $9102 = $9093 + $9101;
             $9103 = $9083 * $9086;
             $9104 = $9103 + $9102;
             $9105 = +HEAPF64[$45>>3];
             $9106 = $9087 * $9105;
             $9107 = $9104 + $9106;
             $9108 = +HEAPF64[$75>>3];
             $9109 = $9093 * $9108;
             $9110 = $9107 - $9109;
             $9111 = +HEAPF64[$76>>3];
             $9112 = $9089 * $9111;
             $9113 = $9110 + $9112;
             $9114 = +HEAPF64[$43>>3];
             $9115 = $9087 * $9114;
             $9116 = $9086 * $9089;
             $9117 = $9116 + $9115;
             $9118 = $9093 * $9092;
             $9119 = $9118 + $9117;
             $9120 = $9090 * $9108;
             $9121 = $9120 + $9119;
             $9122 = $9083 * $9111;
             $9123 = $9121 - $9122;
             $9124 = $9123 - $9090;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1343,$9113,$9124,1.9999999999999999E-6);
             $9125 = HEAP8[$334>>0]|0;
             $9126 = ($9125<<24>>24)==(0);
             if ($9126) {
              break L604;
             }
             $9127 = +HEAPF64[$x1342>>3];
             $9128 = $9127 * 1.5707963267949001;
             $9129 = $9128 + -1.5707963267949001;
             $9130 = +HEAPF64[$x1343>>3];
             $9131 = $9130 + $9129;
             $9132 = (+__Z5IKsind($9131));
             $9133 = (+__Z5IKcosd($9131));
             $9134 = $9131 > 3.14159265358979;
             do {
              if ($9134) {
               $9135 = $9131 + -6.2831853071795898;
               $9138 = $9135;
              } else {
               $9136 = $9131 < -3.14159265358979;
               if (!($9136)) {
                $9138 = $9131;
                break;
               }
               $9137 = $9131 + 6.2831853071795898;
               $9138 = $9137;
              }
             } while(0);
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             HEAPF64[$this>>3] = $9138;
             HEAPF64[$335>>3] = $9133;
             HEAPF64[$336>>3] = $9132;
             $9139 = +HEAPF64[$this>>3];
             $9140 = (+__Z5IKsind($9139));
             $9141 = (+__Z5IKcosd($9139));
             $9142 = +HEAPF64[$184>>3];
             $9143 = $9142 * 1.1000000000000001;
             $9144 = +HEAPF64[$75>>3];
             $9145 = $9144 * 0.29999999999999999;
             $9146 = +HEAPF64[$76>>3];
             $9147 = $9146 * 0.044999999999999998;
             $9148 = +HEAPF64[$183>>3];
             $9149 = +HEAPF64[$47>>3];
             $9150 = $9148 * $9149;
             $9151 = +HEAPF64[$43>>3];
             $9152 = $9140 * $9151;
             $9153 = $9141 * $9151;
             $9154 = +HEAPF64[$45>>3];
             $9155 = $9140 * $9154;
             $9156 = $9141 * $9154;
             $9157 = $9142 * $9149;
             $9158 = -$9148;
             $9159 = $9155 * $9158;
             $9160 = $9157 + $9159;
             $9161 = $9153 * $9158;
             $9162 = $9161 + $9160;
             $9163 = $9150 + -0.55000000000000004;
             $9164 = $9142 * $9153;
             $9165 = $9163 + $9164;
             $9166 = $9142 * $9155;
             $9167 = $9165 + $9166;
             $9168 = $9167 - $9147;
             $9169 = $9168 - $9145;
             $9170 = -$9153;
             $9171 = $9170 - $9155;
             $9172 = $9142 * $9147;
             $9173 = $9172 + $9171;
             $9174 = $9142 * $9145;
             $9175 = $9174 + $9173;
             $9176 = $9142 * 0.55000000000000004;
             $9177 = $9176 + $9175;
             $9178 = $9156 * 0.089999999999999996;
             $9179 = -0.21249999999999999 - $9178;
             $9180 = $9152 * 0.089999999999999996;
             $9181 = $9180 + $9179;
             $9182 = +HEAPF64[$60>>3];
             $9183 = $9181 - $9182;
             $9184 = $9143 * $9155;
             $9185 = $9184 + $9183;
             $9186 = $9143 * $9153;
             $9187 = $9186 + $9185;
             $9188 = $9150 * 1.1000000000000001;
             $9189 = $9188 + $9187;
             $9190 = (+__Z5IKabsd($9162));
             $9191 = $9190 > 5.0000000000000004E-6;
             if ($9191) {
              break L604;
             }
             $9192 = $9152 + -0.044999999999999998;
             $9193 = $9192 - $9156;
             $9194 = $9144 * 0.044999999999999998;
             $9195 = $9194 + $9193;
             $9196 = $9146 * 0.29999999999999999;
             $9197 = $9195 - $9196;
             $9198 = (+__Z5IKabsd($9197));
             $9199 = $9198 > 5.0000000000000004E-6;
             if ($9199) {
              break L604;
             }
             $9200 = (+__Z5IKabsd($9169));
             $9201 = $9200 > 5.0000000000000004E-6;
             if ($9201) {
              break L604;
             }
             $9202 = (+__Z5IKabsd($9177));
             $9203 = $9202 > 5.0000000000000004E-6;
             if ($9203) {
              break L604;
             }
             $9204 = (+__Z5IKabsd($9189));
             $9205 = $9204 > 5.0000000000000004E-6;
             if ($9205) {
              break L604;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L604;
            }
           } while(0);
           $7339 = +HEAPF64[$3>>3];
           $7340 = $7339 + -1.5707963267949001;
           $7341 = (+__Z5IKabsd($7340));
           $7342 = $7341 + 3.14159265358979;
           $7343 = (+__Z6IKfmoddd($7342,6.2831853071795898));
           $7344 = $7343 + -3.14159265358979;
           $7345 = +HEAPF64[$47>>3];
           $7346 = (+__Z5IKabsd($7344));
           $7347 = $7346 < 9.9999999999999995E-7;
           do {
            if ($7347) {
             $7348 = +HEAPF64[$75>>3];
             $7349 = +HEAPF64[$60>>3];
             $7350 = +HEAPF64[$76>>3];
             $7351 = $7350 * 0.076499999999999999;
             $7352 = $7351 + 0.39655000000000001;
             $7353 = $7352 - $7349;
             $7354 = $7348 * 0.32595000000000002;
             $7355 = $7354 + $7353;
             $7356 = (+__Z5IKabsd($7355));
             $7357 = $7356 < 9.9999999999999995E-7;
             if (!($7357)) {
              break;
             }
             $7358 = (+__Z5IKabsd($7345));
             $7359 = $7358 < 9.9999999999999995E-7;
             if (!($7359)) {
              break;
             }
             HEAPF64[$24>>3] = -1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$22>>3] = -1.5707963267949001;
             HEAPF64[$184>>3] = 1.0;
             HEAPF64[$183>>3] = 0.0;
             HEAPF64[$3>>3] = 1.5707963267949001;
             $7360 = +HEAPF64[$47>>3];
             $7361 = $7360 * $7360;
             $7362 = +HEAPF64[$76>>3];
             $7363 = $7362 * $7362;
             $7364 = +HEAPF64[$75>>3];
             $7365 = $7364 * $7364;
             $7366 = $7364 * 4.2607843137254902;
             $7367 = +HEAPF64[$60>>3];
             $7368 = $7361 - $7367;
             $7369 = $7365 * 1.20294117647059;
             $7370 = $7363 * 1.20294117647059;
             $7371 = -$7361;
             $7372 = (+__Z6IKsignd($7368));
             $7373 = (+__Z5IKabsd($7368));
             $7374 = $7373 < 9.9999999999999995E-7;
             do {
              if (!($7374)) {
               $7375 = $7362 * $7367;
               $7376 = $7362 * $7361;
               $7377 = $7375 - $7376;
               $7378 = $7367 * 3.9807189542483701;
               $7379 = $7378 + $7377;
               $7380 = $7367 * $7366;
               $7381 = $7380 + $7379;
               $7382 = $7367 * $7369;
               $7383 = $7382 + $7381;
               $7384 = $7367 * $7370;
               $7385 = $7384 + $7383;
               $7386 = $7366 * $7371;
               $7387 = $7386 + $7385;
               $7388 = $7369 * $7371;
               $7389 = $7388 + $7387;
               $7390 = $7370 * $7371;
               $7391 = $7390 + $7389;
               $7392 = $7361 * 3.9807189542483701;
               $7393 = $7391 - $7392;
               $7394 = (+__Z5IKabsd($7393));
               $7395 = $7394 < 9.9999999999999995E-7;
               if ($7395) {
                break;
               }
               $7396 = (+__Z5IKabsd($7372));
               $7397 = $7396 < 9.9999999999999995E-7;
               if ($7397) {
                break;
               }
               HEAP8[$2>>0] = 1;
               $7699 = +HEAPF64[$45>>3];
               $7700 = $7699 * 0.29999999999999999;
               $7701 = +HEAPF64[$43>>3];
               $7702 = $7701 * 0.044999999999999998;
               $7703 = $7699 * 0.044999999999999998;
               $7704 = $7701 * 0.29999999999999999;
               $7705 = +HEAPF64[$60>>3];
               $7706 = +HEAPF64[$47>>3];
               $7707 = $7706 * $7706;
               $7708 = $7707 - $7705;
               $7709 = (+__Z6IKsignd($7708));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1208,$7709,-1);
               $7710 = HEAP8[$273>>0]|0;
               $7711 = ($7710<<24>>24)==(0);
               if ($7711) {
                break L604;
               }
               $7712 = +HEAPF64[$45>>3];
               $7713 = $7712 * 0.55000000000000004;
               $7714 = +HEAPF64[$76>>3];
               $7715 = -$7714;
               $7716 = $7703 * $7715;
               $7717 = $7716 - $7713;
               $7718 = $7704 * $7715;
               $7719 = $7718 + $7717;
               $7720 = +HEAPF64[$75>>3];
               $7721 = -$7720;
               $7722 = $7700 * $7721;
               $7723 = $7722 + $7719;
               $7724 = $7702 * $7720;
               $7725 = $7724 + $7723;
               $7726 = $7725 - $7702;
               $7727 = +HEAPF64[$43>>3];
               $7728 = $7727 * 0.55000000000000004;
               $7729 = $7703 - $7728;
               $7730 = $7702 * $7715;
               $7731 = $7730 + $7729;
               $7732 = $7704 * $7721;
               $7733 = $7732 + $7731;
               $7734 = $7703 * $7721;
               $7735 = $7734 + $7733;
               $7736 = $7700 * $7714;
               $7737 = $7736 + $7735;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1209,$7726,$7737,1.9999999999999999E-6);
               $7738 = HEAP8[$274>>0]|0;
               $7739 = ($7738<<24>>24)==(0);
               if ($7739) {
                break L604;
               }
               $7740 = +HEAPF64[$x1208>>3];
               $7741 = $7740 * 1.5707963267949001;
               $7742 = $7741 + -1.5707963267949001;
               $7743 = +HEAPF64[$x1209>>3];
               $7744 = $7743 + $7742;
               $7745 = (+__Z5IKsind($7744));
               $7746 = (+__Z5IKcosd($7744));
               $7747 = $7744 > 3.14159265358979;
               do {
                if ($7747) {
                 $7748 = $7744 + -6.2831853071795898;
                 $7751 = $7748;
                } else {
                 $7749 = $7744 < -3.14159265358979;
                 if (!($7749)) {
                  $7751 = $7744;
                  break;
                 }
                 $7750 = $7744 + 6.2831853071795898;
                 $7751 = $7750;
                }
               } while(0);
               HEAP8[$0>>0] = 0;
               HEAP8[$1>>0] = -1;
               HEAPF64[$this>>3] = $7751;
               HEAPF64[$275>>3] = $7746;
               HEAPF64[$276>>3] = $7745;
               $7752 = +HEAPF64[$this>>3];
               $7753 = (+__Z5IKsind($7752));
               $7754 = (+__Z5IKcosd($7752));
               $7755 = +HEAPF64[$43>>3];
               $7756 = $7753 * $7755;
               $7757 = +HEAPF64[$45>>3];
               $7758 = $7754 * $7757;
               $7759 = $7754 * $7755;
               $7760 = $7753 * $7757;
               $7761 = +HEAPF64[$76>>3];
               $7762 = $7761 * 0.044999999999999998;
               $7763 = -0.55000000000000004 - $7762;
               $7764 = $7759 + $7763;
               $7765 = $7760 + $7764;
               $7766 = +HEAPF64[$75>>3];
               $7767 = $7766 * 0.29999999999999999;
               $7768 = $7765 - $7767;
               $7769 = $7758 * 0.089999999999999996;
               $7770 = -0.21249999999999999 - $7769;
               $7771 = $7756 * 0.089999999999999996;
               $7772 = $7771 + $7770;
               $7773 = +HEAPF64[$60>>3];
               $7774 = $7772 - $7773;
               $7775 = $7760 * 1.1000000000000001;
               $7776 = $7775 + $7774;
               $7777 = $7759 * 1.1000000000000001;
               $7778 = $7777 + $7776;
               $7779 = (+__Z5IKabsd($7768));
               $7780 = $7779 > 5.0000000000000004E-6;
               if ($7780) {
                break L604;
               }
               $7781 = $7756 + -0.044999999999999998;
               $7782 = $7766 * 0.044999999999999998;
               $7783 = $7781 + $7782;
               $7784 = $7761 * 0.29999999999999999;
               $7785 = $7783 - $7784;
               $7786 = $7785 - $7758;
               $7787 = (+__Z5IKabsd($7786));
               $7788 = $7787 > 5.0000000000000004E-6;
               if ($7788) {
                break L604;
               }
               $7789 = (+__Z5IKabsd($7778));
               $7790 = $7789 > 5.0000000000000004E-6;
               if ($7790) {
                break L604;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               break L604;
              }
             } while(0);
             HEAPF64[$24>>3] = -1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$22>>3] = -1.5707963267949001;
             HEAPF64[$184>>3] = 1.0;
             HEAPF64[$183>>3] = 0.0;
             HEAPF64[$3>>3] = 1.5707963267949001;
             $7398 = +HEAPF64[$47>>3];
             $7399 = $7398 * $7398;
             $7400 = +HEAPF64[$75>>3];
             $7401 = $7400 * 0.33000000000000002;
             $7402 = +HEAPF64[$60>>3];
             $7403 = $7400 * 0.027;
             $7404 = +HEAPF64[$76>>3];
             $7405 = $7404 * 0.0040499999999999998;
             $7406 = $7404 * 0.049500000000000002;
             $7407 = $7399 - $7402;
             $7408 = +HEAPF64[$45>>3];
             $7409 = -$7408;
             $7410 = +HEAPF64[$43>>3];
             $7411 = -$7410;
             $7412 = $7402 * 0.089999999999999996;
             $7413 = $7399 * 0.089999999999999996;
             $7414 = $7413 - $7412;
             $7415 = (+__Z6IKsignd($7414));
             $7416 = (+__Z5IKabsd($7407));
             $7417 = $7416 < 9.9999999999999995E-7;
             do {
              if (!($7417)) {
               $7418 = $7401 * $7410;
               $7419 = $7406 * $7410;
               $7420 = $7418 + $7419;
               $7421 = $7405 * $7409;
               $7422 = $7421 + $7420;
               $7423 = $7403 * $7409;
               $7424 = $7423 + $7422;
               $7425 = $7408 * 0.049500000000000002;
               $7426 = $7424 - $7425;
               $7427 = $7402 * $7410;
               $7428 = $7426 - $7427;
               $7429 = $7410 * 0.39250000000000002;
               $7430 = $7429 + $7428;
               $7431 = (+__Z5IKabsd($7430));
               $7432 = $7406 * $7409;
               $7433 = $7401 * $7409;
               $7434 = $7432 + $7433;
               $7435 = $7410 * 0.049500000000000002;
               $7436 = $7434 - $7435;
               $7437 = $7403 * $7411;
               $7438 = $7437 + $7436;
               $7439 = $7405 * $7411;
               $7440 = $7439 + $7438;
               $7441 = $7408 * 0.39250000000000002;
               $7442 = $7440 - $7441;
               $7443 = $7402 * $7408;
               $7444 = $7443 + $7442;
               $7445 = (+__Z5IKabsd($7444));
               $7446 = $7431 + $7445;
               $7447 = (+__Z5IKabsd($7446));
               $7448 = $7447 < 9.9999999999999995E-7;
               if ($7448) {
                break;
               }
               $7449 = (+__Z5IKabsd($7415));
               $7450 = $7449 < 9.9999999999999995E-7;
               if ($7450) {
                break;
               }
               HEAP8[$2>>0] = 1;
               $7600 = +HEAPF64[$76>>3];
               $7601 = $7600 * 0.0040499999999999998;
               $7602 = +HEAPF64[$75>>3];
               $7603 = $7602 * 0.33000000000000002;
               $7604 = $7602 * 0.027;
               $7605 = $7600 * 0.049500000000000002;
               $7606 = +HEAPF64[$60>>3];
               $7607 = $7606 * 0.089999999999999996;
               $7608 = +HEAPF64[$47>>3];
               $7609 = $7608 * $7608;
               $7610 = $7609 * 0.089999999999999996;
               $7611 = $7610 - $7607;
               $7612 = (+__Z6IKsignd($7611));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1196,$7612,-1);
               $7613 = HEAP8[$269>>0]|0;
               $7614 = ($7613<<24>>24)==(0);
               if ($7614) {
                break L604;
               }
               $7615 = +HEAPF64[$60>>3];
               $7616 = +HEAPF64[$43>>3];
               $7617 = $7615 * $7616;
               $7618 = +HEAPF64[$45>>3];
               $7619 = -$7618;
               $7620 = $7601 * $7619;
               $7621 = $7620 - $7617;
               $7622 = $7604 * $7619;
               $7623 = $7622 + $7621;
               $7624 = $7618 * 0.049500000000000002;
               $7625 = $7623 - $7624;
               $7626 = $7605 * $7616;
               $7627 = $7626 + $7625;
               $7628 = $7603 * $7616;
               $7629 = $7628 + $7627;
               $7630 = $7616 * 0.39250000000000002;
               $7631 = $7630 + $7629;
               $7632 = $7603 * $7619;
               $7633 = $7605 * $7619;
               $7634 = $7632 + $7633;
               $7635 = $7616 * 0.049500000000000002;
               $7636 = $7634 - $7635;
               $7637 = -$7616;
               $7638 = $7604 * $7637;
               $7639 = $7638 + $7636;
               $7640 = $7601 * $7637;
               $7641 = $7640 + $7639;
               $7642 = $7618 * 0.39250000000000002;
               $7643 = $7641 - $7642;
               $7644 = $7615 * $7618;
               $7645 = $7644 + $7643;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1197,$7631,$7645,1.9999999999999999E-6);
               $7646 = HEAP8[$270>>0]|0;
               $7647 = ($7646<<24>>24)==(0);
               if ($7647) {
                break L604;
               }
               $7648 = +HEAPF64[$x1196>>3];
               $7649 = $7648 * 1.5707963267949001;
               $7650 = $7649 + -1.5707963267949001;
               $7651 = +HEAPF64[$x1197>>3];
               $7652 = $7651 + $7650;
               $7653 = (+__Z5IKsind($7652));
               $7654 = (+__Z5IKcosd($7652));
               $7655 = $7652 > 3.14159265358979;
               do {
                if ($7655) {
                 $7656 = $7652 + -6.2831853071795898;
                 $7659 = $7656;
                } else {
                 $7657 = $7652 < -3.14159265358979;
                 if (!($7657)) {
                  $7659 = $7652;
                  break;
                 }
                 $7658 = $7652 + 6.2831853071795898;
                 $7659 = $7658;
                }
               } while(0);
               HEAP8[$0>>0] = 0;
               HEAP8[$1>>0] = -1;
               HEAPF64[$this>>3] = $7659;
               HEAPF64[$271>>3] = $7654;
               HEAPF64[$272>>3] = $7653;
               $7660 = +HEAPF64[$this>>3];
               $7661 = (+__Z5IKsind($7660));
               $7662 = (+__Z5IKcosd($7660));
               $7663 = +HEAPF64[$43>>3];
               $7664 = $7661 * $7663;
               $7665 = +HEAPF64[$45>>3];
               $7666 = $7662 * $7665;
               $7667 = $7662 * $7663;
               $7668 = $7661 * $7665;
               $7669 = +HEAPF64[$76>>3];
               $7670 = $7669 * 0.044999999999999998;
               $7671 = -0.55000000000000004 - $7670;
               $7672 = $7668 + $7671;
               $7673 = $7667 + $7672;
               $7674 = +HEAPF64[$75>>3];
               $7675 = $7674 * 0.29999999999999999;
               $7676 = $7673 - $7675;
               $7677 = $7664 * 0.089999999999999996;
               $7678 = $7677 + -0.21249999999999999;
               $7679 = +HEAPF64[$60>>3];
               $7680 = $7678 - $7679;
               $7681 = $7666 * 0.089999999999999996;
               $7682 = $7680 - $7681;
               $7683 = $7668 * 1.1000000000000001;
               $7684 = $7683 + $7682;
               $7685 = $7667 * 1.1000000000000001;
               $7686 = $7685 + $7684;
               $7687 = (+__Z5IKabsd($7676));
               $7688 = $7687 > 5.0000000000000004E-6;
               if ($7688) {
                break L604;
               }
               $7689 = $7664 + -0.044999999999999998;
               $7690 = $7674 * 0.044999999999999998;
               $7691 = $7689 + $7690;
               $7692 = $7691 - $7666;
               $7693 = $7669 * 0.29999999999999999;
               $7694 = $7692 - $7693;
               $7695 = (+__Z5IKabsd($7694));
               $7696 = $7695 > 5.0000000000000004E-6;
               if ($7696) {
                break L604;
               }
               $7697 = (+__Z5IKabsd($7686));
               $7698 = $7697 > 5.0000000000000004E-6;
               if ($7698) {
                break L604;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               break L604;
              }
             } while(0);
             HEAPF64[$24>>3] = -1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$22>>3] = -1.5707963267949001;
             HEAPF64[$184>>3] = 1.0;
             HEAPF64[$183>>3] = 0.0;
             HEAPF64[$3>>3] = 1.5707963267949001;
             $7451 = +HEAPF64[$47>>3];
             $7452 = $7451 * $7451;
             $7453 = +HEAPF64[$75>>3];
             $7454 = +HEAPF64[$45>>3];
             $7455 = $7453 * $7454;
             $7456 = +HEAPF64[$76>>3];
             $7457 = $7454 * $7456;
             $7458 = +HEAPF64[$60>>3];
             $7459 = +HEAPF64[$43>>3];
             $7460 = $7453 * $7459;
             $7461 = $7456 * $7459;
             $7462 = $7452 - $7458;
             $7463 = $7461 * 0.33000000000000002;
             $7464 = $7457 * 0.027;
             $7465 = $7464 - $7463;
             $7466 = $7455 * 0.0040499999999999998;
             $7467 = $7465 - $7466;
             $7468 = $7460 * 0.049500000000000002;
             $7469 = $7468 + $7467;
             $7470 = $7454 * $7458;
             $7471 = $7469 - $7470;
             $7472 = $7459 * 0.049500000000000002;
             $7473 = $7471 - $7472;
             $7474 = $7454 * 0.20845;
             $7475 = $7473 - $7474;
             $7476 = (+__Z5IKabsd($7475));
             $7477 = $7454 * 0.049500000000000002;
             $7478 = $7461 * 0.027;
             $7479 = $7477 + $7478;
             $7480 = $7460 * 0.0040499999999999998;
             $7481 = $7479 - $7480;
             $7482 = $7455 * 0.049500000000000002;
             $7483 = $7481 - $7482;
             $7484 = $7458 * $7459;
             $7485 = $7483 - $7484;
             $7486 = $7457 * 0.33000000000000002;
             $7487 = $7486 + $7485;
             $7488 = $7459 * 0.20845;
             $7489 = $7487 - $7488;
             $7490 = (+__Z5IKabsd($7489));
             $7491 = $7476 + $7490;
             $7492 = (+__Z5IKabsd($7462));
             $7493 = $7492 < 9.9999999999999995E-7;
             if ($7493) {
              break L604;
             }
             $7494 = $7458 * 1.1000000000000001;
             $7495 = $7452 * 1.1000000000000001;
             $7496 = $7495 - $7494;
             $7497 = (+__Z6IKsignd($7496));
             $7498 = (+__Z5IKabsd($7497));
             $7499 = $7498 < 9.9999999999999995E-7;
             if ($7499) {
              break L604;
             }
             $7500 = (+__Z5IKabsd($7491));
             $7501 = $7500 < 9.9999999999999995E-7;
             if ($7501) {
              break L604;
             }
             HEAP8[$2>>0] = 1;
             $7502 = +HEAPF64[$75>>3];
             $7503 = +HEAPF64[$45>>3];
             $7504 = $7502 * $7503;
             $7505 = +HEAPF64[$76>>3];
             $7506 = $7503 * $7505;
             $7507 = +HEAPF64[$60>>3];
             $7508 = +HEAPF64[$43>>3];
             $7509 = $7502 * $7508;
             $7510 = $7505 * $7508;
             $7511 = $7507 * 1.1000000000000001;
             $7512 = +HEAPF64[$47>>3];
             $7513 = $7512 * $7512;
             $7514 = $7513 * 1.1000000000000001;
             $7515 = $7514 - $7511;
             $7516 = (+__Z6IKsignd($7515));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1184,$7516,-1);
             $7517 = HEAP8[$265>>0]|0;
             $7518 = ($7517<<24>>24)==(0);
             if ($7518) {
              break L604;
             }
             $7519 = $7506 * 0.027;
             $7520 = $7509 * 0.049500000000000002;
             $7521 = $7519 + $7520;
             $7522 = $7510 * 0.33000000000000002;
             $7523 = $7521 - $7522;
             $7524 = $7504 * 0.0040499999999999998;
             $7525 = $7523 - $7524;
             $7526 = +HEAPF64[$45>>3];
             $7527 = $7507 * $7526;
             $7528 = $7525 - $7527;
             $7529 = +HEAPF64[$43>>3];
             $7530 = $7529 * 0.049500000000000002;
             $7531 = $7528 - $7530;
             $7532 = $7526 * 0.20845;
             $7533 = $7531 - $7532;
             $7534 = $7510 * 0.027;
             $7535 = $7506 * 0.33000000000000002;
             $7536 = $7535 + $7534;
             $7537 = $7526 * 0.049500000000000002;
             $7538 = $7536 + $7537;
             $7539 = $7504 * 0.049500000000000002;
             $7540 = $7538 - $7539;
             $7541 = $7507 * $7529;
             $7542 = $7540 - $7541;
             $7543 = $7509 * 0.0040499999999999998;
             $7544 = $7542 - $7543;
             $7545 = $7529 * 0.20845;
             $7546 = $7544 - $7545;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1185,$7533,$7546,1.9999999999999999E-6);
             $7547 = HEAP8[$266>>0]|0;
             $7548 = ($7547<<24>>24)==(0);
             if ($7548) {
              break L604;
             }
             $7549 = +HEAPF64[$x1184>>3];
             $7550 = $7549 * 1.5707963267949001;
             $7551 = $7550 + -1.5707963267949001;
             $7552 = +HEAPF64[$x1185>>3];
             $7553 = $7552 + $7551;
             $7554 = (+__Z5IKsind($7553));
             $7555 = (+__Z5IKcosd($7553));
             $7556 = $7553 > 3.14159265358979;
             do {
              if ($7556) {
               $7557 = $7553 + -6.2831853071795898;
               $7560 = $7557;
              } else {
               $7558 = $7553 < -3.14159265358979;
               if (!($7558)) {
                $7560 = $7553;
                break;
               }
               $7559 = $7553 + 6.2831853071795898;
               $7560 = $7559;
              }
             } while(0);
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             HEAPF64[$this>>3] = $7560;
             HEAPF64[$267>>3] = $7555;
             HEAPF64[$268>>3] = $7554;
             $7561 = +HEAPF64[$this>>3];
             $7562 = (+__Z5IKsind($7561));
             $7563 = (+__Z5IKcosd($7561));
             $7564 = +HEAPF64[$43>>3];
             $7565 = $7562 * $7564;
             $7566 = +HEAPF64[$45>>3];
             $7567 = $7563 * $7566;
             $7568 = $7563 * $7564;
             $7569 = $7562 * $7566;
             $7570 = +HEAPF64[$76>>3];
             $7571 = $7570 * 0.044999999999999998;
             $7572 = -0.55000000000000004 - $7571;
             $7573 = $7569 + $7572;
             $7574 = $7568 + $7573;
             $7575 = +HEAPF64[$75>>3];
             $7576 = $7575 * 0.29999999999999999;
             $7577 = $7574 - $7576;
             $7578 = $7567 * 0.089999999999999996;
             $7579 = -0.21249999999999999 - $7578;
             $7580 = $7565 * 0.089999999999999996;
             $7581 = $7580 + $7579;
             $7582 = +HEAPF64[$60>>3];
             $7583 = $7581 - $7582;
             $7584 = $7569 * 1.1000000000000001;
             $7585 = $7584 + $7583;
             $7586 = $7568 * 1.1000000000000001;
             $7587 = $7586 + $7585;
             $7588 = (+__Z5IKabsd($7577));
             $7589 = $7588 > 5.0000000000000004E-6;
             if ($7589) {
              break L604;
             }
             $7590 = $7565 + -0.044999999999999998;
             $7591 = $7575 * 0.044999999999999998;
             $7592 = $7590 + $7591;
             $7593 = $7592 - $7567;
             $7594 = $7570 * 0.29999999999999999;
             $7595 = $7593 - $7594;
             $7596 = (+__Z5IKabsd($7595));
             $7597 = $7596 > 5.0000000000000004E-6;
             if ($7597) {
              break L604;
             }
             $7598 = (+__Z5IKabsd($7587));
             $7599 = $7598 > 5.0000000000000004E-6;
             if ($7599) {
              break L604;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L604;
            }
           } while(0);
           $7791 = +HEAPF64[$3>>3];
           $7792 = $7791 + 1.5707963267949001;
           $7793 = (+__Z5IKabsd($7792));
           $7794 = $7793 + 3.14159265358979;
           $7795 = (+__Z6IKfmoddd($7794,6.2831853071795898));
           $7796 = $7795 + -3.14159265358979;
           $7797 = +HEAPF64[$47>>3];
           $7798 = -$7797;
           $7799 = (+__Z5IKabsd($7796));
           $7800 = $7799 < 9.9999999999999995E-7;
           do {
            if ($7800) {
             $7801 = +HEAPF64[$75>>3];
             $7802 = +HEAPF64[$60>>3];
             $7803 = +HEAPF64[$76>>3];
             $7804 = $7803 * 0.076499999999999999;
             $7805 = $7804 + 0.39655000000000001;
             $7806 = $7805 - $7802;
             $7807 = $7801 * 0.32595000000000002;
             $7808 = $7807 + $7806;
             $7809 = (+__Z5IKabsd($7808));
             $7810 = $7809 < 9.9999999999999995E-7;
             if (!($7810)) {
              break;
             }
             $7811 = (+__Z5IKabsd($7798));
             $7812 = $7811 < 9.9999999999999995E-7;
             if (!($7812)) {
              break;
             }
             HEAPF64[$24>>3] = -1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$22>>3] = -1.5707963267949001;
             HEAPF64[$184>>3] = -1.0;
             HEAPF64[$183>>3] = 0.0;
             HEAPF64[$3>>3] = -1.5707963267949001;
             $7813 = +HEAPF64[$47>>3];
             $7814 = $7813 * $7813;
             $7815 = +HEAPF64[$76>>3];
             $7816 = $7815 * $7815;
             $7817 = +HEAPF64[$75>>3];
             $7818 = $7817 * $7817;
             $7819 = $7817 * 4.2607843137254902;
             $7820 = +HEAPF64[$60>>3];
             $7821 = -$7814;
             $7822 = $7820 - $7814;
             $7823 = $7818 * 1.20294117647059;
             $7824 = $7816 * 1.20294117647059;
             $7825 = (+__Z6IKsignd($7822));
             $7826 = (+__Z5IKabsd($7822));
             $7827 = $7826 < 9.9999999999999995E-7;
             do {
              if (!($7827)) {
               $7828 = $7820 * $7819;
               $7829 = $7819 * $7821;
               $7830 = $7828 + $7829;
               $7831 = $7815 * $7820;
               $7832 = $7831 + $7830;
               $7833 = $7820 * $7823;
               $7834 = $7833 + $7832;
               $7835 = $7820 * $7824;
               $7836 = $7835 + $7834;
               $7837 = $7820 * 3.9807189542483701;
               $7838 = $7837 + $7836;
               $7839 = $7814 * 3.9807189542483701;
               $7840 = $7838 - $7839;
               $7841 = $7824 * $7821;
               $7842 = $7841 + $7840;
               $7843 = $7823 * $7821;
               $7844 = $7843 + $7842;
               $7845 = $7815 * $7814;
               $7846 = $7844 - $7845;
               $7847 = (+__Z5IKabsd($7846));
               $7848 = $7847 < 9.9999999999999995E-7;
               if ($7848) {
                break;
               }
               $7849 = (+__Z5IKabsd($7825));
               $7850 = $7849 < 9.9999999999999995E-7;
               if ($7850) {
                break;
               }
               HEAP8[$2>>0] = 1;
               $8153 = +HEAPF64[$45>>3];
               $8154 = $8153 * 0.29999999999999999;
               $8155 = +HEAPF64[$43>>3];
               $8156 = $8155 * 0.044999999999999998;
               $8157 = $8153 * 0.044999999999999998;
               $8158 = $8155 * 0.29999999999999999;
               $8159 = +HEAPF64[$60>>3];
               $8160 = +HEAPF64[$47>>3];
               $8161 = $8160 * $8160;
               $8162 = $8159 - $8161;
               $8163 = (+__Z6IKsignd($8162));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1263,$8163,-1);
               $8164 = HEAP8[$285>>0]|0;
               $8165 = ($8164<<24>>24)==(0);
               if ($8165) {
                break L604;
               }
               $8166 = +HEAPF64[$45>>3];
               $8167 = $8166 * 0.55000000000000004;
               $8168 = $8156 - $8167;
               $8169 = +HEAPF64[$75>>3];
               $8170 = -$8169;
               $8171 = $8156 * $8170;
               $8172 = $8168 + $8171;
               $8173 = $8154 * $8170;
               $8174 = $8173 + $8172;
               $8175 = +HEAPF64[$76>>3];
               $8176 = -$8175;
               $8177 = $8157 * $8176;
               $8178 = $8177 + $8174;
               $8179 = $8158 * $8175;
               $8180 = $8179 + $8178;
               $8181 = +HEAPF64[$43>>3];
               $8182 = $8181 * 0.55000000000000004;
               $8183 = $8158 * $8170;
               $8184 = $8183 - $8182;
               $8185 = $8157 * $8169;
               $8186 = $8185 + $8184;
               $8187 = $8154 * $8176;
               $8188 = $8187 + $8186;
               $8189 = $8156 * $8176;
               $8190 = $8189 + $8188;
               $8191 = $8190 - $8157;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1264,$8180,$8191,1.9999999999999999E-6);
               $8192 = HEAP8[$286>>0]|0;
               $8193 = ($8192<<24>>24)==(0);
               if ($8193) {
                break L604;
               }
               $8194 = +HEAPF64[$x1263>>3];
               $8195 = $8194 * 1.5707963267949001;
               $8196 = $8195 + -1.5707963267949001;
               $8197 = +HEAPF64[$x1264>>3];
               $8198 = $8197 + $8196;
               $8199 = (+__Z5IKsind($8198));
               $8200 = (+__Z5IKcosd($8198));
               $8201 = $8198 > 3.14159265358979;
               do {
                if ($8201) {
                 $8202 = $8198 + -6.2831853071795898;
                 $8205 = $8202;
                } else {
                 $8203 = $8198 < -3.14159265358979;
                 if (!($8203)) {
                  $8205 = $8198;
                  break;
                 }
                 $8204 = $8198 + 6.2831853071795898;
                 $8205 = $8204;
                }
               } while(0);
               HEAP8[$0>>0] = 0;
               HEAP8[$1>>0] = -1;
               HEAPF64[$this>>3] = $8205;
               HEAPF64[$287>>3] = $8200;
               HEAPF64[$288>>3] = $8199;
               $8206 = +HEAPF64[$this>>3];
               $8207 = (+__Z5IKcosd($8206));
               $8208 = (+__Z5IKsind($8206));
               $8209 = +HEAPF64[$43>>3];
               $8210 = $8208 * $8209;
               $8211 = +HEAPF64[$45>>3];
               $8212 = $8208 * $8211;
               $8213 = $8210 + -0.044999999999999998;
               $8214 = +HEAPF64[$75>>3];
               $8215 = $8214 * 0.044999999999999998;
               $8216 = $8213 + $8215;
               $8217 = $8207 * $8211;
               $8218 = $8216 - $8217;
               $8219 = +HEAPF64[$76>>3];
               $8220 = $8219 * 0.29999999999999999;
               $8221 = $8218 - $8220;
               $8222 = $8209 * -1.1000000000000001;
               $8223 = $8207 * $8222;
               $8224 = $8223 + -0.21249999999999999;
               $8225 = +HEAPF64[$60>>3];
               $8226 = $8224 - $8225;
               $8227 = $8210 * 0.089999999999999996;
               $8228 = $8227 + $8226;
               $8229 = $8211 * -0.089999999999999996;
               $8230 = $8207 * $8229;
               $8231 = $8230 + $8228;
               $8232 = $8212 * 1.1000000000000001;
               $8233 = $8231 - $8232;
               $8234 = (+__Z5IKabsd($8221));
               $8235 = $8234 > 5.0000000000000004E-6;
               if ($8235) {
                break L604;
               }
               $8236 = $8219 * 0.044999999999999998;
               $8237 = -0.55000000000000004 - $8236;
               $8238 = $8214 * 0.29999999999999999;
               $8239 = $8237 - $8238;
               $8240 = $8207 * $8209;
               $8241 = $8239 - $8240;
               $8242 = $8241 - $8212;
               $8243 = (+__Z5IKabsd($8242));
               $8244 = $8243 > 5.0000000000000004E-6;
               if ($8244) {
                break L604;
               }
               $8245 = (+__Z5IKabsd($8233));
               $8246 = $8245 > 5.0000000000000004E-6;
               if ($8246) {
                break L604;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               break L604;
              }
             } while(0);
             HEAPF64[$24>>3] = -1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$22>>3] = -1.5707963267949001;
             HEAPF64[$184>>3] = -1.0;
             HEAPF64[$183>>3] = 0.0;
             HEAPF64[$3>>3] = -1.5707963267949001;
             $7851 = +HEAPF64[$47>>3];
             $7852 = $7851 * $7851;
             $7853 = +HEAPF64[$75>>3];
             $7854 = $7853 * 0.33000000000000002;
             $7855 = +HEAPF64[$60>>3];
             $7856 = $7853 * 0.027;
             $7857 = +HEAPF64[$76>>3];
             $7858 = $7857 * 0.0040499999999999998;
             $7859 = $7857 * 0.049500000000000002;
             $7860 = $7852 - $7855;
             $7861 = +HEAPF64[$43>>3];
             $7862 = +HEAPF64[$45>>3];
             $7863 = -$7862;
             $7864 = $7855 * 0.089999999999999996;
             $7865 = $7852 * 0.089999999999999996;
             $7866 = $7865 - $7864;
             $7867 = (+__Z6IKsignd($7866));
             $7868 = (+__Z5IKabsd($7860));
             $7869 = $7868 < 9.9999999999999995E-7;
             do {
              if (!($7869)) {
               $7870 = $7858 * $7862;
               $7871 = $7855 * $7861;
               $7872 = $7870 - $7871;
               $7873 = $7856 * $7862;
               $7874 = $7873 + $7872;
               $7875 = $7862 * 0.049500000000000002;
               $7876 = $7875 + $7874;
               $7877 = $7854 * $7861;
               $7878 = $7877 + $7876;
               $7879 = $7861 * $7859;
               $7880 = $7879 + $7878;
               $7881 = $7861 * 0.39250000000000002;
               $7882 = $7881 + $7880;
               $7883 = (+__Z5IKabsd($7882));
               $7884 = $7861 * 0.049500000000000002;
               $7885 = $7859 * $7863;
               $7886 = $7884 + $7885;
               $7887 = $7854 * $7863;
               $7888 = $7887 + $7886;
               $7889 = $7861 * $7858;
               $7890 = $7889 + $7888;
               $7891 = $7856 * $7861;
               $7892 = $7891 + $7890;
               $7893 = $7862 * 0.39250000000000002;
               $7894 = $7892 - $7893;
               $7895 = $7855 * $7862;
               $7896 = $7895 + $7894;
               $7897 = (+__Z5IKabsd($7896));
               $7898 = $7883 + $7897;
               $7899 = (+__Z5IKabsd($7898));
               $7900 = $7899 < 9.9999999999999995E-7;
               if ($7900) {
                break;
               }
               $7901 = (+__Z5IKabsd($7867));
               $7902 = $7901 < 9.9999999999999995E-7;
               if ($7902) {
                break;
               }
               HEAP8[$2>>0] = 1;
               $8053 = +HEAPF64[$75>>3];
               $8054 = $8053 * 0.33000000000000002;
               $8055 = $8053 * 0.027;
               $8056 = +HEAPF64[$76>>3];
               $8057 = $8056 * 0.0040499999999999998;
               $8058 = $8056 * 0.049500000000000002;
               $8059 = +HEAPF64[$60>>3];
               $8060 = $8059 * 0.089999999999999996;
               $8061 = +HEAPF64[$47>>3];
               $8062 = $8061 * $8061;
               $8063 = $8062 * 0.089999999999999996;
               $8064 = $8063 - $8060;
               $8065 = (+__Z6IKsignd($8064));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1252,$8065,-1);
               $8066 = HEAP8[$281>>0]|0;
               $8067 = ($8066<<24>>24)==(0);
               if ($8067) {
                break L604;
               }
               $8068 = +HEAPF64[$60>>3];
               $8069 = +HEAPF64[$43>>3];
               $8070 = $8068 * $8069;
               $8071 = +HEAPF64[$45>>3];
               $8072 = $8071 * 0.049500000000000002;
               $8073 = $8072 - $8070;
               $8074 = $8055 * $8071;
               $8075 = $8074 + $8073;
               $8076 = $8054 * $8069;
               $8077 = $8076 + $8075;
               $8078 = $8069 * 0.39250000000000002;
               $8079 = $8078 + $8077;
               $8080 = $8058 * $8069;
               $8081 = $8080 + $8079;
               $8082 = $8057 * $8071;
               $8083 = $8082 + $8081;
               $8084 = -$8071;
               $8085 = $8054 * $8084;
               $8086 = $8069 * 0.049500000000000002;
               $8087 = $8086 + $8085;
               $8088 = $8055 * $8069;
               $8089 = $8088 + $8087;
               $8090 = $8058 * $8084;
               $8091 = $8090 + $8089;
               $8092 = $8057 * $8069;
               $8093 = $8092 + $8091;
               $8094 = $8071 * 0.39250000000000002;
               $8095 = $8093 - $8094;
               $8096 = $8068 * $8071;
               $8097 = $8096 + $8095;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1253,$8083,$8097,1.9999999999999999E-6);
               $8098 = HEAP8[$282>>0]|0;
               $8099 = ($8098<<24>>24)==(0);
               if ($8099) {
                break L604;
               }
               $8100 = +HEAPF64[$x1252>>3];
               $8101 = $8100 * 1.5707963267949001;
               $8102 = $8101 + -1.5707963267949001;
               $8103 = +HEAPF64[$x1253>>3];
               $8104 = $8103 + $8102;
               $8105 = (+__Z5IKsind($8104));
               $8106 = (+__Z5IKcosd($8104));
               $8107 = $8104 > 3.14159265358979;
               do {
                if ($8107) {
                 $8108 = $8104 + -6.2831853071795898;
                 $8111 = $8108;
                } else {
                 $8109 = $8104 < -3.14159265358979;
                 if (!($8109)) {
                  $8111 = $8104;
                  break;
                 }
                 $8110 = $8104 + 6.2831853071795898;
                 $8111 = $8110;
                }
               } while(0);
               HEAP8[$0>>0] = 0;
               HEAP8[$1>>0] = -1;
               HEAPF64[$this>>3] = $8111;
               HEAPF64[$283>>3] = $8106;
               HEAPF64[$284>>3] = $8105;
               $8112 = +HEAPF64[$this>>3];
               $8113 = (+__Z5IKcosd($8112));
               $8114 = (+__Z5IKsind($8112));
               $8115 = +HEAPF64[$43>>3];
               $8116 = $8114 * $8115;
               $8117 = +HEAPF64[$45>>3];
               $8118 = $8114 * $8117;
               $8119 = $8116 + -0.044999999999999998;
               $8120 = +HEAPF64[$75>>3];
               $8121 = $8120 * 0.044999999999999998;
               $8122 = $8119 + $8121;
               $8123 = $8113 * $8117;
               $8124 = $8122 - $8123;
               $8125 = +HEAPF64[$76>>3];
               $8126 = $8125 * 0.29999999999999999;
               $8127 = $8124 - $8126;
               $8128 = $8115 * -1.1000000000000001;
               $8129 = $8113 * $8128;
               $8130 = $8129 + -0.21249999999999999;
               $8131 = +HEAPF64[$60>>3];
               $8132 = $8130 - $8131;
               $8133 = $8116 * 0.089999999999999996;
               $8134 = $8133 + $8132;
               $8135 = $8117 * -0.089999999999999996;
               $8136 = $8113 * $8135;
               $8137 = $8136 + $8134;
               $8138 = $8118 * 1.1000000000000001;
               $8139 = $8137 - $8138;
               $8140 = (+__Z5IKabsd($8127));
               $8141 = $8140 > 5.0000000000000004E-6;
               if ($8141) {
                break L604;
               }
               $8142 = $8125 * 0.044999999999999998;
               $8143 = -0.55000000000000004 - $8142;
               $8144 = $8120 * 0.29999999999999999;
               $8145 = $8143 - $8144;
               $8146 = $8113 * $8115;
               $8147 = $8145 - $8146;
               $8148 = $8147 - $8118;
               $8149 = (+__Z5IKabsd($8148));
               $8150 = $8149 > 5.0000000000000004E-6;
               if ($8150) {
                break L604;
               }
               $8151 = (+__Z5IKabsd($8139));
               $8152 = $8151 > 5.0000000000000004E-6;
               if ($8152) {
                break L604;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               break L604;
              }
             } while(0);
             HEAPF64[$24>>3] = -1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$22>>3] = -1.5707963267949001;
             HEAPF64[$184>>3] = -1.0;
             HEAPF64[$183>>3] = 0.0;
             HEAPF64[$3>>3] = -1.5707963267949001;
             $7903 = +HEAPF64[$47>>3];
             $7904 = $7903 * $7903;
             $7905 = +HEAPF64[$75>>3];
             $7906 = +HEAPF64[$45>>3];
             $7907 = $7905 * $7906;
             $7908 = +HEAPF64[$76>>3];
             $7909 = $7906 * $7908;
             $7910 = +HEAPF64[$60>>3];
             $7911 = +HEAPF64[$43>>3];
             $7912 = $7905 * $7911;
             $7913 = $7908 * $7911;
             $7914 = $7910 - $7904;
             $7915 = $7910 * 1.1000000000000001;
             $7916 = $7904 * 1.1000000000000001;
             $7917 = $7915 - $7916;
             $7918 = (+__Z6IKsignd($7917));
             $7919 = (+__Z5IKabsd($7914));
             $7920 = $7919 < 9.9999999999999995E-7;
             if ($7920) {
              break L604;
             }
             $7921 = $7907 * 0.049500000000000002;
             $7922 = $7910 * $7911;
             $7923 = $7921 - $7922;
             $7924 = $7906 * 0.049500000000000002;
             $7925 = $7923 - $7924;
             $7926 = $7913 * 0.027;
             $7927 = $7926 + $7925;
             $7928 = $7912 * 0.0040499999999999998;
             $7929 = $7927 - $7928;
             $7930 = $7909 * 0.33000000000000002;
             $7931 = $7929 - $7930;
             $7932 = $7911 * 0.20845;
             $7933 = $7931 - $7932;
             $7934 = (+__Z5IKabsd($7933));
             $7935 = $7911 * 0.049500000000000002;
             $7936 = $7912 * 0.049500000000000002;
             $7937 = $7935 - $7936;
             $7938 = $7909 * 0.027;
             $7939 = $7938 + $7937;
             $7940 = $7906 * $7910;
             $7941 = $7939 - $7940;
             $7942 = $7907 * 0.0040499999999999998;
             $7943 = $7941 - $7942;
             $7944 = $7913 * 0.33000000000000002;
             $7945 = $7944 + $7943;
             $7946 = $7906 * 0.20845;
             $7947 = $7945 - $7946;
             $7948 = (+__Z5IKabsd($7947));
             $7949 = $7934 + $7948;
             $7950 = (+__Z5IKabsd($7949));
             $7951 = $7950 < 9.9999999999999995E-7;
             if ($7951) {
              break L604;
             }
             $7952 = (+__Z5IKabsd($7918));
             $7953 = $7952 < 9.9999999999999995E-7;
             if ($7953) {
              break L604;
             }
             HEAP8[$2>>0] = 1;
             $7954 = +HEAPF64[$75>>3];
             $7955 = +HEAPF64[$45>>3];
             $7956 = $7954 * $7955;
             $7957 = +HEAPF64[$76>>3];
             $7958 = $7955 * $7957;
             $7959 = +HEAPF64[$60>>3];
             $7960 = +HEAPF64[$43>>3];
             $7961 = $7954 * $7960;
             $7962 = $7957 * $7960;
             $7963 = $7960 * 0.049500000000000002;
             $7964 = $7961 * 0.049500000000000002;
             $7965 = $7963 - $7964;
             $7966 = $7958 * 0.027;
             $7967 = $7966 + $7965;
             $7968 = $7962 * 0.33000000000000002;
             $7969 = $7968 + $7967;
             $7970 = $7955 * $7959;
             $7971 = $7969 - $7970;
             $7972 = $7956 * 0.0040499999999999998;
             $7973 = $7971 - $7972;
             $7974 = $7955 * 0.20845;
             $7975 = $7973 - $7974;
             $7976 = $7959 * $7960;
             $7977 = $7956 * 0.049500000000000002;
             $7978 = $7977 - $7976;
             $7979 = $7955 * 0.049500000000000002;
             $7980 = $7978 - $7979;
             $7981 = $7961 * 0.0040499999999999998;
             $7982 = $7980 - $7981;
             $7983 = $7962 * 0.027;
             $7984 = $7983 + $7982;
             $7985 = $7958 * 0.33000000000000002;
             $7986 = $7984 - $7985;
             $7987 = $7960 * 0.20845;
             $7988 = $7986 - $7987;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1241,$7975,$7988,1.9999999999999999E-6);
             $7989 = HEAP8[$277>>0]|0;
             $7990 = ($7989<<24>>24)==(0);
             if ($7990) {
              break L604;
             }
             $7991 = +HEAPF64[$47>>3];
             $7992 = $7991 * $7991;
             $7993 = $7992 * 1.1000000000000001;
             $7994 = +HEAPF64[$60>>3];
             $7995 = $7994 * 1.1000000000000001;
             $7996 = $7995 - $7993;
             $7997 = (+__Z6IKsignd($7996));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1242,$7997,-1);
             $7998 = HEAP8[$278>>0]|0;
             $7999 = ($7998<<24>>24)==(0);
             if ($7999) {
              break L604;
             }
             $8000 = +HEAPF64[$x1241>>3];
             $8001 = $8000 + -1.5707963267949001;
             $8002 = +HEAPF64[$x1242>>3];
             $8003 = $8002 * 1.5707963267949001;
             $8004 = $8001 + $8003;
             $8005 = (+__Z5IKsind($8004));
             $8006 = (+__Z5IKcosd($8004));
             $8007 = $8004 > 3.14159265358979;
             do {
              if ($8007) {
               $8008 = $8004 + -6.2831853071795898;
               $8011 = $8008;
              } else {
               $8009 = $8004 < -3.14159265358979;
               if (!($8009)) {
                $8011 = $8004;
                break;
               }
               $8010 = $8004 + 6.2831853071795898;
               $8011 = $8010;
              }
             } while(0);
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             HEAPF64[$this>>3] = $8011;
             HEAPF64[$279>>3] = $8006;
             HEAPF64[$280>>3] = $8005;
             $8012 = +HEAPF64[$this>>3];
             $8013 = (+__Z5IKcosd($8012));
             $8014 = (+__Z5IKsind($8012));
             $8015 = +HEAPF64[$43>>3];
             $8016 = $8014 * $8015;
             $8017 = +HEAPF64[$45>>3];
             $8018 = $8014 * $8017;
             $8019 = $8016 + -0.044999999999999998;
             $8020 = +HEAPF64[$75>>3];
             $8021 = $8020 * 0.044999999999999998;
             $8022 = $8019 + $8021;
             $8023 = $8013 * $8017;
             $8024 = $8022 - $8023;
             $8025 = +HEAPF64[$76>>3];
             $8026 = $8025 * 0.29999999999999999;
             $8027 = $8024 - $8026;
             $8028 = $8016 * 0.089999999999999996;
             $8029 = $8028 + -0.21249999999999999;
             $8030 = $8017 * -0.089999999999999996;
             $8031 = $8013 * $8030;
             $8032 = $8029 + $8031;
             $8033 = $8018 * 1.1000000000000001;
             $8034 = $8032 - $8033;
             $8035 = +HEAPF64[$60>>3];
             $8036 = $8034 - $8035;
             $8037 = $8015 * -1.1000000000000001;
             $8038 = $8013 * $8037;
             $8039 = $8038 + $8036;
             $8040 = (+__Z5IKabsd($8027));
             $8041 = $8040 > 5.0000000000000004E-6;
             if ($8041) {
              break L604;
             }
             $8042 = $8025 * 0.044999999999999998;
             $8043 = -0.55000000000000004 - $8042;
             $8044 = $8013 * $8015;
             $8045 = $8043 - $8044;
             $8046 = $8020 * 0.29999999999999999;
             $8047 = $8045 - $8046;
             $8048 = $8047 - $8018;
             $8049 = (+__Z5IKabsd($8048));
             $8050 = $8049 > 5.0000000000000004E-6;
             if ($8050) {
              break L604;
             }
             $8051 = (+__Z5IKabsd($8039));
             $8052 = $8051 > 5.0000000000000004E-6;
             if ($8052) {
              break L604;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L604;
            }
           } while(0);
           $8247 = +HEAPF64[$47>>3];
           $8248 = (+__Z5IKabsd($8247));
           $8249 = +HEAPF64[$7>>3];
           $8250 = $8249 + 3.14159265358979;
           $8251 = (+__Z6IKfmoddd($8250,6.2831853071795898));
           $8252 = $8251 + -3.14159265358979;
           $8253 = (+__Z5IKabsd($8252));
           $8254 = $8248 + $8253;
           $8255 = +HEAPF64[$183>>3];
           $8256 = $8255 * -0.84999999999999998;
           $8257 = (+__Z5IKabsd($8254));
           $8258 = $8257 < 9.9999999999999995E-7;
           do {
            if ($8258) {
             $8259 = +HEAPF64[$60>>3];
             $8260 = 0.72250000000000003 - $8259;
             $8261 = (+__Z5IKabsd($8260));
             $8262 = $8261 < 9.9999999999999995E-7;
             if (!($8262)) {
              break;
             }
             $8263 = (+__Z5IKabsd($8256));
             $8264 = $8263 < 9.9999999999999995E-7;
             if (!($8264)) {
              break;
             }
             $8265 = +HEAPF64[$45>>3];
             $8266 = -$8265;
             HEAPF64[$24>>3] = -1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$22>>3] = -1.5707963267949001;
             HEAPF64[$47>>3] = 0.0;
             HEAPF64[$7>>3] = 0.0;
             HEAPF64[$76>>3] = 0.0;
             HEAPF64[$75>>3] = 1.0;
             $8267 = +HEAPF64[$43>>3];
             $8268 = $8267 * $8267;
             $8269 = +HEAPF64[$45>>3];
             $8270 = $8269 * $8269;
             $8271 = $8268 + $8270;
             HEAPF64[$60>>3] = $8271;
             $8272 = +HEAPF64[$43>>3];
             $8273 = +HEAPF64[$26>>3];
             $8274 = $8272 * $8273;
             $8275 = +HEAPF64[$45>>3];
             $8276 = +HEAPF64[$32>>3];
             $8277 = $8275 * $8276;
             $8278 = $8274 + $8277;
             HEAPF64[$61>>3] = $8278;
             $8279 = +HEAPF64[$43>>3];
             $8280 = +HEAPF64[$28>>3];
             $8281 = $8279 * $8280;
             $8282 = +HEAPF64[$45>>3];
             $8283 = +HEAPF64[$34>>3];
             $8284 = $8282 * $8283;
             $8285 = $8281 + $8284;
             HEAPF64[$62>>3] = $8285;
             $8286 = +HEAPF64[$43>>3];
             $8287 = +HEAPF64[$30>>3];
             $8288 = $8286 * $8287;
             $8289 = +HEAPF64[$45>>3];
             $8290 = +HEAPF64[$36>>3];
             $8291 = $8289 * $8290;
             $8292 = $8288 + $8291;
             HEAPF64[$63>>3] = $8292;
             $8293 = +HEAPF64[$38>>3];
             $8294 = $8293 * $8266;
             HEAPF64[$64>>3] = $8294;
             $8295 = +HEAPF64[$43>>3];
             $8296 = +HEAPF64[$38>>3];
             $8297 = $8295 * $8296;
             HEAPF64[$65>>3] = $8297;
             $8298 = +HEAPF64[$40>>3];
             $8299 = $8298 * $8266;
             HEAPF64[$67>>3] = $8299;
             $8300 = +HEAPF64[$43>>3];
             $8301 = +HEAPF64[$40>>3];
             $8302 = $8300 * $8301;
             HEAPF64[$68>>3] = $8302;
             $8303 = +HEAPF64[$42>>3];
             $8304 = $8303 * $8266;
             HEAPF64[$70>>3] = $8304;
             $8305 = +HEAPF64[$43>>3];
             $8306 = +HEAPF64[$42>>3];
             $8307 = $8305 * $8306;
             HEAPF64[$71>>3] = $8307;
             $8308 = +HEAPF64[$43>>3];
             $8309 = $8308 * $8308;
             $8310 = +HEAPF64[$45>>3];
             $8311 = $8310 * $8310;
             $8312 = +HEAPF64[$184>>3];
             $8313 = $8309 * $8312;
             $8314 = $8312 * $8311;
             $8315 = $8313 + $8314;
             $8316 = (+__Z5IKabsd($8308));
             $8317 = (+__Z5IKabsd($8310));
             $8318 = $8316 + $8317;
             $8319 = (+__Z5IKabsd($8315));
             $8320 = $8319 < 9.9999999999999995E-7;
             do {
              if (!($8320)) {
               $8321 = $8314 * 20.0;
               $8322 = $8313 * 20.0;
               $8323 = $8321 + $8322;
               $8324 = (+__Z6IKsignd($8323));
               $8325 = (+__Z5IKabsd($8324));
               $8326 = $8325 < 9.9999999999999995E-7;
               if ($8326) {
                break;
               }
               $8327 = (+__Z5IKabsd($8318));
               $8328 = $8327 < 9.9999999999999995E-7;
               if ($8328) {
                break;
               }
               HEAP8[$2>>0] = 1;
               $8716 = +HEAPF64[$184>>3];
               $8717 = $8716 * 20.0;
               $8718 = +HEAPF64[$45>>3];
               $8719 = $8718 * 17.0;
               $8720 = +HEAPF64[$43>>3];
               $8721 = $8720 * 17.0;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1307,$8719,$8721,1.9999999999999999E-6);
               $8722 = HEAP8[$301>>0]|0;
               $8723 = ($8722<<24>>24)==(0);
               if ($8723) {
                break L604;
               }
               $8724 = +HEAPF64[$43>>3];
               $8725 = $8724 * $8724;
               $8726 = $8717 * $8725;
               $8727 = +HEAPF64[$45>>3];
               $8728 = $8727 * $8727;
               $8729 = $8717 * $8728;
               $8730 = $8726 + $8729;
               $8731 = (+__Z6IKsignd($8730));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1308,$8731,-1);
               $8732 = HEAP8[$302>>0]|0;
               $8733 = ($8732<<24>>24)==(0);
               if ($8733) {
                break L604;
               }
               $8734 = +HEAPF64[$x1307>>3];
               $8735 = $8734 + -1.5707963267949001;
               $8736 = +HEAPF64[$x1308>>3];
               $8737 = $8736 * 1.5707963267949001;
               $8738 = $8735 + $8737;
               $8739 = (+__Z5IKsind($8738));
               $8740 = (+__Z5IKcosd($8738));
               $8741 = $8738 > 3.14159265358979;
               do {
                if ($8741) {
                 $8742 = $8738 + -6.2831853071795898;
                 $8745 = $8742;
                } else {
                 $8743 = $8738 < -3.14159265358979;
                 if (!($8743)) {
                  $8745 = $8738;
                  break;
                 }
                 $8744 = $8738 + 6.2831853071795898;
                 $8745 = $8744;
                }
               } while(0);
               HEAP8[$0>>0] = 0;
               HEAP8[$1>>0] = -1;
               HEAPF64[$this>>3] = $8745;
               HEAPF64[$303>>3] = $8740;
               HEAPF64[$304>>3] = $8739;
               $8746 = +HEAPF64[$this>>3];
               $8747 = (+__Z5IKcosd($8746));
               $8748 = (+__Z5IKsind($8746));
               $8749 = +HEAPF64[$45>>3];
               $8750 = +HEAPF64[$184>>3];
               $8751 = $8750 * 1.1000000000000001;
               $8752 = +HEAPF64[$43>>3];
               $8753 = $8748 * $8752;
               $8754 = $8747 * $8752;
               $8755 = $8748 * $8749;
               $8756 = $8747 * $8749;
               $8757 = $8753 - $8756;
               $8758 = $8750 * 0.84999999999999998;
               $8759 = $8758 - $8754;
               $8760 = $8759 - $8755;
               $8761 = $8753 * 0.089999999999999996;
               $8762 = $8761 + -0.93500000000000005;
               $8763 = $8749 * -0.089999999999999996;
               $8764 = $8747 * $8763;
               $8765 = $8764 + $8762;
               $8766 = $8755 * $8751;
               $8767 = $8766 + $8765;
               $8768 = $8751 * $8754;
               $8769 = $8768 + $8767;
               $8770 = (+__Z5IKabsd($8757));
               $8771 = $8770 > 5.0000000000000004E-6;
               if ($8771) {
                break L604;
               }
               $8772 = $8750 * $8754;
               $8773 = $8772 + -0.84999999999999998;
               $8774 = $8750 * $8755;
               $8775 = $8774 + $8773;
               $8776 = (+__Z5IKabsd($8775));
               $8777 = $8776 > 5.0000000000000004E-6;
               if ($8777) {
                break L604;
               }
               $8778 = (+__Z5IKabsd($8760));
               $8779 = $8778 > 5.0000000000000004E-6;
               if ($8779) {
                break L604;
               }
               $8780 = (+__Z5IKabsd($8769));
               $8781 = $8780 > 5.0000000000000004E-6;
               if ($8781) {
                break L604;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               break L604;
              }
             } while(0);
             $8329 = +HEAPF64[$45>>3];
             $8330 = -$8329;
             HEAPF64[$24>>3] = -1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$22>>3] = -1.5707963267949001;
             HEAPF64[$47>>3] = 0.0;
             HEAPF64[$7>>3] = 0.0;
             HEAPF64[$76>>3] = 0.0;
             HEAPF64[$75>>3] = 1.0;
             $8331 = +HEAPF64[$43>>3];
             $8332 = $8331 * $8331;
             $8333 = +HEAPF64[$45>>3];
             $8334 = $8333 * $8333;
             $8335 = $8332 + $8334;
             HEAPF64[$60>>3] = $8335;
             $8336 = +HEAPF64[$43>>3];
             $8337 = +HEAPF64[$26>>3];
             $8338 = $8336 * $8337;
             $8339 = +HEAPF64[$45>>3];
             $8340 = +HEAPF64[$32>>3];
             $8341 = $8339 * $8340;
             $8342 = $8338 + $8341;
             HEAPF64[$61>>3] = $8342;
             $8343 = +HEAPF64[$43>>3];
             $8344 = +HEAPF64[$28>>3];
             $8345 = $8343 * $8344;
             $8346 = +HEAPF64[$45>>3];
             $8347 = +HEAPF64[$34>>3];
             $8348 = $8346 * $8347;
             $8349 = $8345 + $8348;
             HEAPF64[$62>>3] = $8349;
             $8350 = +HEAPF64[$43>>3];
             $8351 = +HEAPF64[$30>>3];
             $8352 = $8350 * $8351;
             $8353 = +HEAPF64[$45>>3];
             $8354 = +HEAPF64[$36>>3];
             $8355 = $8353 * $8354;
             $8356 = $8352 + $8355;
             HEAPF64[$63>>3] = $8356;
             $8357 = +HEAPF64[$38>>3];
             $8358 = $8357 * $8330;
             HEAPF64[$64>>3] = $8358;
             $8359 = +HEAPF64[$43>>3];
             $8360 = +HEAPF64[$38>>3];
             $8361 = $8359 * $8360;
             HEAPF64[$65>>3] = $8361;
             $8362 = +HEAPF64[$40>>3];
             $8363 = $8362 * $8330;
             HEAPF64[$67>>3] = $8363;
             $8364 = +HEAPF64[$43>>3];
             $8365 = +HEAPF64[$40>>3];
             $8366 = $8364 * $8365;
             HEAPF64[$68>>3] = $8366;
             $8367 = +HEAPF64[$42>>3];
             $8368 = $8367 * $8330;
             HEAPF64[$70>>3] = $8368;
             $8369 = +HEAPF64[$43>>3];
             $8370 = +HEAPF64[$42>>3];
             $8371 = $8369 * $8370;
             HEAPF64[$71>>3] = $8371;
             $8372 = +HEAPF64[$43>>3];
             $8373 = $8372 * $8372;
             $8374 = +HEAPF64[$45>>3];
             $8375 = $8374 * $8374;
             $8376 = $8373 + $8375;
             $8377 = +HEAPF64[$184>>3];
             $8378 = $8375 * 20.0;
             $8379 = $8373 * 20.0;
             $8380 = $8379 + $8378;
             $8381 = (+__Z6IKsignd($8380));
             $8382 = (+__Z5IKabsd($8376));
             $8383 = $8382 < 9.9999999999999995E-7;
             do {
              if (!($8383)) {
               $8384 = (+__Z5IKabsd(289.0));
               $8385 = $8384 < 9.9999999999999995E-7;
               if ($8385) {
                break;
               }
               $8386 = (+__Z5IKabsd($8377));
               $8387 = $8386 < 9.9999999999999995E-7;
               if ($8387) {
                break;
               }
               $8388 = (+__Z5IKabsd($8381));
               $8389 = $8388 < 9.9999999999999995E-7;
               if ($8389) {
                break;
               }
               HEAP8[$2>>0] = 1;
               $8649 = +HEAPF64[$184>>3];
               $8650 = $8649 * 17.0;
               $8651 = +HEAPF64[$45>>3];
               $8652 = $8651 * $8650;
               $8653 = +HEAPF64[$43>>3];
               $8654 = $8650 * $8653;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1297,$8652,$8654,1.9999999999999999E-6);
               $8655 = HEAP8[$297>>0]|0;
               $8656 = ($8655<<24>>24)==(0);
               if ($8656) {
                break L604;
               }
               $8657 = +HEAPF64[$43>>3];
               $8658 = $8657 * $8657;
               $8659 = $8658 * 20.0;
               $8660 = +HEAPF64[$45>>3];
               $8661 = $8660 * $8660;
               $8662 = $8661 * 20.0;
               $8663 = $8659 + $8662;
               $8664 = (+__Z6IKsignd($8663));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1298,$8664,-1);
               $8665 = HEAP8[$298>>0]|0;
               $8666 = ($8665<<24>>24)==(0);
               if ($8666) {
                break L604;
               }
               $8667 = +HEAPF64[$x1297>>3];
               $8668 = $8667 + -1.5707963267949001;
               $8669 = +HEAPF64[$x1298>>3];
               $8670 = $8669 * 1.5707963267949001;
               $8671 = $8668 + $8670;
               $8672 = (+__Z5IKsind($8671));
               $8673 = (+__Z5IKcosd($8671));
               $8674 = $8671 > 3.14159265358979;
               do {
                if ($8674) {
                 $8675 = $8671 + -6.2831853071795898;
                 $8678 = $8675;
                } else {
                 $8676 = $8671 < -3.14159265358979;
                 if (!($8676)) {
                  $8678 = $8671;
                  break;
                 }
                 $8677 = $8671 + 6.2831853071795898;
                 $8678 = $8677;
                }
               } while(0);
               HEAP8[$0>>0] = 0;
               HEAP8[$1>>0] = -1;
               HEAPF64[$this>>3] = $8678;
               HEAPF64[$299>>3] = $8673;
               HEAPF64[$300>>3] = $8672;
               $8679 = +HEAPF64[$this>>3];
               $8680 = (+__Z5IKcosd($8679));
               $8681 = (+__Z5IKsind($8679));
               $8682 = +HEAPF64[$45>>3];
               $8683 = +HEAPF64[$184>>3];
               $8684 = $8683 * 1.1000000000000001;
               $8685 = +HEAPF64[$43>>3];
               $8686 = $8681 * $8685;
               $8687 = $8680 * $8685;
               $8688 = $8681 * $8682;
               $8689 = $8680 * $8682;
               $8690 = $8686 - $8689;
               $8691 = -$8688;
               $8692 = $8691 - $8687;
               $8693 = $8683 * 0.84999999999999998;
               $8694 = $8693 + $8692;
               $8695 = $8686 * 0.089999999999999996;
               $8696 = $8695 + -0.93500000000000005;
               $8697 = $8682 * -0.089999999999999996;
               $8698 = $8680 * $8697;
               $8699 = $8698 + $8696;
               $8700 = $8688 * $8684;
               $8701 = $8700 + $8699;
               $8702 = $8684 * $8687;
               $8703 = $8702 + $8701;
               $8704 = (+__Z5IKabsd($8690));
               $8705 = $8704 > 5.0000000000000004E-6;
               if ($8705) {
                break L604;
               }
               $8706 = $8683 * $8688;
               $8707 = $8706 + -0.84999999999999998;
               $8708 = $8683 * $8687;
               $8709 = $8707 + $8708;
               $8710 = (+__Z5IKabsd($8709));
               $8711 = $8710 > 5.0000000000000004E-6;
               if ($8711) {
                break L604;
               }
               $8712 = (+__Z5IKabsd($8694));
               $8713 = $8712 > 5.0000000000000004E-6;
               if ($8713) {
                break L604;
               }
               $8714 = (+__Z5IKabsd($8703));
               $8715 = $8714 > 5.0000000000000004E-6;
               if ($8715) {
                break L604;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               break L604;
              }
             } while(0);
             $8390 = +HEAPF64[$3>>3];
             $8391 = (+__Z5IKabsd($8390));
             $8392 = $8391 + 3.14159265358979;
             $8393 = (+__Z6IKfmoddd($8392,6.2831853071795898));
             $8394 = $8393 + -3.14159265358979;
             $8395 = +HEAPF64[$43>>3];
             $8396 = +HEAPF64[$45>>3];
             $8397 = (+__Z5IKabsd($8394));
             $8398 = $8397 < 9.9999999999999995E-7;
             do {
              if ($8398) {
               $8399 = $8395 * $8395;
               $8400 = 0.72250000000000003 - $8399;
               $8401 = $8396 * $8396;
               $8402 = $8400 - $8401;
               $8403 = (+__Z5IKabsd($8402));
               $8404 = $8403 < 9.9999999999999995E-7;
               if (!($8404)) {
                break;
               }
               $8405 = (+__Z5IKabsd(-0.84999999999999998));
               $8406 = $8405 < 9.9999999999999995E-7;
               if (!($8406)) {
                break;
               }
               $8407 = -$8396;
               HEAPF64[$24>>3] = -1.0;
               HEAPF64[$23>>3] = 0.0;
               HEAPF64[$22>>3] = -1.5707963267949001;
               HEAPF64[$47>>3] = 0.0;
               HEAPF64[$7>>3] = 0.0;
               HEAPF64[$76>>3] = 0.0;
               HEAPF64[$75>>3] = 1.0;
               $8408 = +HEAPF64[$43>>3];
               $8409 = $8408 * $8408;
               $8410 = +HEAPF64[$45>>3];
               $8411 = $8410 * $8410;
               $8412 = $8409 + $8411;
               HEAPF64[$60>>3] = $8412;
               $8413 = +HEAPF64[$43>>3];
               $8414 = +HEAPF64[$26>>3];
               $8415 = $8413 * $8414;
               $8416 = +HEAPF64[$45>>3];
               $8417 = +HEAPF64[$32>>3];
               $8418 = $8416 * $8417;
               $8419 = $8415 + $8418;
               HEAPF64[$61>>3] = $8419;
               $8420 = +HEAPF64[$43>>3];
               $8421 = +HEAPF64[$28>>3];
               $8422 = $8420 * $8421;
               $8423 = +HEAPF64[$45>>3];
               $8424 = +HEAPF64[$34>>3];
               $8425 = $8423 * $8424;
               $8426 = $8422 + $8425;
               HEAPF64[$62>>3] = $8426;
               $8427 = +HEAPF64[$43>>3];
               $8428 = +HEAPF64[$30>>3];
               $8429 = $8427 * $8428;
               $8430 = +HEAPF64[$45>>3];
               $8431 = +HEAPF64[$36>>3];
               $8432 = $8430 * $8431;
               $8433 = $8429 + $8432;
               HEAPF64[$63>>3] = $8433;
               $8434 = +HEAPF64[$38>>3];
               $8435 = $8434 * $8407;
               HEAPF64[$64>>3] = $8435;
               $8436 = +HEAPF64[$43>>3];
               $8437 = +HEAPF64[$38>>3];
               $8438 = $8436 * $8437;
               HEAPF64[$65>>3] = $8438;
               $8439 = +HEAPF64[$40>>3];
               $8440 = $8439 * $8407;
               HEAPF64[$67>>3] = $8440;
               $8441 = +HEAPF64[$43>>3];
               $8442 = +HEAPF64[$40>>3];
               $8443 = $8441 * $8442;
               HEAPF64[$68>>3] = $8443;
               $8444 = +HEAPF64[$42>>3];
               $8445 = $8444 * $8407;
               HEAPF64[$70>>3] = $8445;
               $8446 = +HEAPF64[$43>>3];
               $8447 = +HEAPF64[$42>>3];
               $8448 = $8446 * $8447;
               HEAPF64[$71>>3] = $8448;
               HEAPF64[$184>>3] = 0.0;
               HEAPF64[$183>>3] = 1.0;
               HEAPF64[$3>>3] = 0.0;
               $8449 = +HEAPF64[$45>>3];
               $8450 = $8449 * $8449;
               $8451 = +HEAPF64[$43>>3];
               $8452 = $8451 * $8451;
               $8453 = $8450 + $8452;
               $8454 = (+__Z5IKabsd($8451));
               $8455 = (+__Z5IKabsd($8449));
               $8456 = $8454 + $8455;
               $8457 = (+__Z5IKabsd($8453));
               $8458 = $8457 < 9.9999999999999995E-7;
               if ($8458) {
                break L604;
               }
               $8459 = $8450 * 18.0;
               $8460 = $8452 * 18.0;
               $8461 = $8459 + $8460;
               $8462 = (+__Z6IKsignd($8461));
               $8463 = (+__Z5IKabsd($8462));
               $8464 = $8463 < 9.9999999999999995E-7;
               if ($8464) {
                break L604;
               }
               $8465 = (+__Z5IKabsd($8456));
               $8466 = $8465 < 9.9999999999999995E-7;
               if ($8466) {
                break L604;
               }
               HEAP8[$2>>0] = 1;
               $8467 = +HEAPF64[$45>>3];
               $8468 = $8467 * $8467;
               $8469 = $8468 * 18.0;
               $8470 = +HEAPF64[$43>>3];
               $8471 = $8470 * $8470;
               $8472 = $8471 * 18.0;
               $8473 = $8469 + $8472;
               $8474 = (+__Z6IKsignd($8473));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1281,$8474,-1);
               $8475 = HEAP8[$289>>0]|0;
               $8476 = ($8475<<24>>24)==(0);
               if ($8476) {
                break L604;
               }
               $8477 = +HEAPF64[$43>>3];
               $8478 = $8477 * 187.0;
               $8479 = +HEAPF64[$45>>3];
               $8480 = $8479 * -187.0;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1282,$8478,$8480,1.9999999999999999E-6);
               $8481 = HEAP8[$290>>0]|0;
               $8482 = ($8481<<24>>24)==(0);
               if ($8482) {
                break L604;
               }
               $8483 = +HEAPF64[$x1281>>3];
               $8484 = $8483 * 1.5707963267949001;
               $8485 = $8484 + -1.5707963267949001;
               $8486 = +HEAPF64[$x1282>>3];
               $8487 = $8486 + $8485;
               $8488 = (+__Z5IKsind($8487));
               $8489 = (+__Z5IKcosd($8487));
               $8490 = $8487 > 3.14159265358979;
               do {
                if ($8490) {
                 $8491 = $8487 + -6.2831853071795898;
                 $8494 = $8491;
                } else {
                 $8492 = $8487 < -3.14159265358979;
                 if (!($8492)) {
                  $8494 = $8487;
                  break;
                 }
                 $8493 = $8487 + 6.2831853071795898;
                 $8494 = $8493;
                }
               } while(0);
               HEAP8[$0>>0] = 0;
               HEAP8[$1>>0] = -1;
               HEAPF64[$this>>3] = $8494;
               HEAPF64[$291>>3] = $8489;
               HEAPF64[$292>>3] = $8488;
               $8495 = +HEAPF64[$this>>3];
               $8496 = (+__Z5IKcosd($8495));
               $8497 = (+__Z5IKsind($8495));
               $8498 = +HEAPF64[$43>>3];
               $8499 = $8497 * $8498;
               $8500 = +HEAPF64[$45>>3];
               $8501 = -$8500;
               $8502 = $8496 * $8501;
               $8503 = $8499 + $8502;
               $8504 = $8499 * 0.089999999999999996;
               $8505 = $8504 + -0.93500000000000005;
               $8506 = $8500 * -0.089999999999999996;
               $8507 = $8496 * $8506;
               $8508 = $8505 + $8507;
               $8509 = (+__Z5IKabsd($8503));
               $8510 = $8509 > 5.0000000000000004E-6;
               if ($8510) {
                break L604;
               }
               $8511 = $8497 * $8501;
               $8512 = $8496 * $8498;
               $8513 = $8511 - $8512;
               $8514 = (+__Z5IKabsd($8513));
               $8515 = $8514 > 5.0000000000000004E-6;
               if ($8515) {
                break L604;
               }
               $8516 = (+__Z5IKabsd($8508));
               $8517 = $8516 > 5.0000000000000004E-6;
               if ($8517) {
                break L604;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               break L604;
              }
             } while(0);
             $8518 = +HEAPF64[$3>>3];
             $8519 = $8518 + -3.14159265358979;
             $8520 = (+__Z5IKabsd($8519));
             $8521 = $8520 + 3.14159265358979;
             $8522 = (+__Z6IKfmoddd($8521,6.2831853071795898));
             $8523 = $8522 + -3.14159265358979;
             $8524 = +HEAPF64[$43>>3];
             $8525 = +HEAPF64[$45>>3];
             $8526 = (+__Z5IKabsd($8523));
             $8527 = $8526 < 9.9999999999999995E-7;
             if (!($8527)) {
              break L604;
             }
             $8528 = $8524 * $8524;
             $8529 = 0.72250000000000003 - $8528;
             $8530 = $8525 * $8525;
             $8531 = $8529 - $8530;
             $8532 = (+__Z5IKabsd($8531));
             $8533 = $8532 < 9.9999999999999995E-7;
             if (!($8533)) {
              break L604;
             }
             $8534 = (+__Z5IKabsd(-0.84999999999999998));
             $8535 = $8534 < 9.9999999999999995E-7;
             if (!($8535)) {
              break L604;
             }
             $8536 = (+__Z5IKabsd(0.84999999999999998));
             $8537 = $8536 < 9.9999999999999995E-7;
             if (!($8537)) {
              break L604;
             }
             $8538 = -$8525;
             HEAPF64[$24>>3] = -1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$22>>3] = -1.5707963267949001;
             HEAPF64[$47>>3] = 0.0;
             HEAPF64[$7>>3] = 0.0;
             HEAPF64[$76>>3] = 0.0;
             HEAPF64[$75>>3] = 1.0;
             $8539 = +HEAPF64[$43>>3];
             $8540 = $8539 * $8539;
             $8541 = +HEAPF64[$45>>3];
             $8542 = $8541 * $8541;
             $8543 = $8540 + $8542;
             HEAPF64[$60>>3] = $8543;
             $8544 = +HEAPF64[$43>>3];
             $8545 = +HEAPF64[$26>>3];
             $8546 = $8544 * $8545;
             $8547 = +HEAPF64[$45>>3];
             $8548 = +HEAPF64[$32>>3];
             $8549 = $8547 * $8548;
             $8550 = $8546 + $8549;
             HEAPF64[$61>>3] = $8550;
             $8551 = +HEAPF64[$43>>3];
             $8552 = +HEAPF64[$28>>3];
             $8553 = $8551 * $8552;
             $8554 = +HEAPF64[$45>>3];
             $8555 = +HEAPF64[$34>>3];
             $8556 = $8554 * $8555;
             $8557 = $8553 + $8556;
             HEAPF64[$62>>3] = $8557;
             $8558 = +HEAPF64[$43>>3];
             $8559 = +HEAPF64[$30>>3];
             $8560 = $8558 * $8559;
             $8561 = +HEAPF64[$45>>3];
             $8562 = +HEAPF64[$36>>3];
             $8563 = $8561 * $8562;
             $8564 = $8560 + $8563;
             HEAPF64[$63>>3] = $8564;
             $8565 = +HEAPF64[$38>>3];
             $8566 = $8565 * $8538;
             HEAPF64[$64>>3] = $8566;
             $8567 = +HEAPF64[$43>>3];
             $8568 = +HEAPF64[$38>>3];
             $8569 = $8567 * $8568;
             HEAPF64[$65>>3] = $8569;
             $8570 = +HEAPF64[$40>>3];
             $8571 = $8570 * $8538;
             HEAPF64[$67>>3] = $8571;
             $8572 = +HEAPF64[$43>>3];
             $8573 = +HEAPF64[$40>>3];
             $8574 = $8572 * $8573;
             HEAPF64[$68>>3] = $8574;
             $8575 = +HEAPF64[$42>>3];
             $8576 = $8575 * $8538;
             HEAPF64[$70>>3] = $8576;
             $8577 = +HEAPF64[$43>>3];
             $8578 = +HEAPF64[$42>>3];
             $8579 = $8577 * $8578;
             HEAPF64[$71>>3] = $8579;
             HEAPF64[$184>>3] = 0.0;
             HEAPF64[$183>>3] = -1.0;
             HEAPF64[$3>>3] = 3.14159265358979;
             $8580 = +HEAPF64[$45>>3];
             $8581 = $8580 * $8580;
             $8582 = +HEAPF64[$43>>3];
             $8583 = $8582 * $8582;
             $8584 = $8581 + $8583;
             $8585 = (+__Z5IKabsd($8582));
             $8586 = (+__Z5IKabsd($8580));
             $8587 = $8585 + $8586;
             $8588 = (+__Z5IKabsd($8584));
             $8589 = $8588 < 9.9999999999999995E-7;
             if ($8589) {
              break L604;
             }
             $8590 = $8581 * 18.0;
             $8591 = $8583 * 18.0;
             $8592 = $8590 + $8591;
             $8593 = (+__Z6IKsignd($8592));
             $8594 = (+__Z5IKabsd($8593));
             $8595 = $8594 < 9.9999999999999995E-7;
             if ($8595) {
              break L604;
             }
             $8596 = (+__Z5IKabsd($8587));
             $8597 = $8596 < 9.9999999999999995E-7;
             if ($8597) {
              break L604;
             }
             HEAP8[$2>>0] = 1;
             $8598 = +HEAPF64[$45>>3];
             $8599 = $8598 * $8598;
             $8600 = $8599 * 18.0;
             $8601 = +HEAPF64[$43>>3];
             $8602 = $8601 * $8601;
             $8603 = $8602 * 18.0;
             $8604 = $8600 + $8603;
             $8605 = (+__Z6IKsignd($8604));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1290,$8605,-1);
             $8606 = HEAP8[$293>>0]|0;
             $8607 = ($8606<<24>>24)==(0);
             if ($8607) {
              break L604;
             }
             $8608 = +HEAPF64[$43>>3];
             $8609 = $8608 * 187.0;
             $8610 = +HEAPF64[$45>>3];
             $8611 = $8610 * -187.0;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1291,$8609,$8611,1.9999999999999999E-6);
             $8612 = HEAP8[$294>>0]|0;
             $8613 = ($8612<<24>>24)==(0);
             if ($8613) {
              break L604;
             }
             $8614 = +HEAPF64[$x1290>>3];
             $8615 = $8614 * 1.5707963267949001;
             $8616 = $8615 + -1.5707963267949001;
             $8617 = +HEAPF64[$x1291>>3];
             $8618 = $8617 + $8616;
             $8619 = (+__Z5IKsind($8618));
             $8620 = (+__Z5IKcosd($8618));
             $8621 = $8618 > 3.14159265358979;
             do {
              if ($8621) {
               $8622 = $8618 + -6.2831853071795898;
               $8625 = $8622;
              } else {
               $8623 = $8618 < -3.14159265358979;
               if (!($8623)) {
                $8625 = $8618;
                break;
               }
               $8624 = $8618 + 6.2831853071795898;
               $8625 = $8624;
              }
             } while(0);
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             HEAPF64[$this>>3] = $8625;
             HEAPF64[$295>>3] = $8620;
             HEAPF64[$296>>3] = $8619;
             $8626 = +HEAPF64[$this>>3];
             $8627 = (+__Z5IKcosd($8626));
             $8628 = (+__Z5IKsind($8626));
             $8629 = +HEAPF64[$43>>3];
             $8630 = $8628 * $8629;
             $8631 = +HEAPF64[$45>>3];
             $8632 = -$8631;
             $8633 = $8627 * $8632;
             $8634 = $8630 + $8633;
             $8635 = $8631 * -0.089999999999999996;
             $8636 = $8627 * $8635;
             $8637 = $8636 + -0.93500000000000005;
             $8638 = $8630 * 0.089999999999999996;
             $8639 = $8638 + $8637;
             $8640 = (+__Z5IKabsd($8634));
             $8641 = $8640 > 5.0000000000000004E-6;
             if ($8641) {
              break L604;
             }
             $8642 = $8628 * $8632;
             $8643 = $8627 * $8629;
             $8644 = $8642 - $8643;
             $8645 = (+__Z5IKabsd($8644));
             $8646 = $8645 > 5.0000000000000004E-6;
             if ($8646) {
              break L604;
             }
             $8647 = (+__Z5IKabsd($8639));
             $8648 = $8647 > 5.0000000000000004E-6;
             if ($8648) {
              break L604;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L604;
            }
           } while(0);
           $8782 = +HEAPF64[$7>>3];
           $8783 = $8782 + 3.14159265358979;
           $8784 = (+__Z6IKfmoddd($8783,6.2831853071795898));
           $8785 = $8784 + -3.14159265358979;
           $8786 = (+__Z5IKabsd($8785));
           $8787 = +HEAPF64[$3>>3];
           $8788 = $8787 + 3.14159265358979;
           $8789 = (+__Z6IKfmoddd($8788,6.2831853071795898));
           $8790 = $8789 + -3.14159265358979;
           $8791 = (+__Z5IKabsd($8790));
           $8792 = $8786 + $8791;
           $8793 = +HEAPF64[$47>>3];
           $8794 = $8793 + -0.84999999999999998;
           $8795 = (+__Z5IKabsd($8792));
           $8796 = $8795 < 9.9999999999999995E-7;
           do {
            if ($8796) {
             $8797 = +HEAPF64[$60>>3];
             $8798 = 0.72250000000000003 - $8797;
             $8799 = (+__Z5IKabsd($8798));
             $8800 = $8799 < 9.9999999999999995E-7;
             if (!($8800)) {
              break;
             }
             $8801 = (+__Z5IKabsd($8794));
             $8802 = $8801 < 9.9999999999999995E-7;
             if (!($8802)) {
              break;
             }
             HEAPF64[$24>>3] = -1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$22>>3] = -1.5707963267949001;
             HEAPF64[$7>>3] = 0.0;
             HEAPF64[$76>>3] = 0.0;
             HEAPF64[$75>>3] = 1.0;
             HEAPF64[$3>>3] = 0.0;
             HEAPF64[$184>>3] = 0.0;
             HEAPF64[$183>>3] = 1.0;
             $8803 = +HEAPF64[$43>>3];
             $8804 = (+__Z5IKabsd($8803));
             $8805 = +HEAPF64[$45>>3];
             $8806 = (+__Z5IKabsd($8805));
             $8807 = $8804 + $8806;
             $8808 = (+__Z5IKabsd($8807));
             $8809 = $8808 < 9.9999999999999995E-7;
             if (!($8809)) {
              HEAP16[$j0valid526>>1] = 0;
              HEAP8[$2>>0] = 2;
              $8875 = +HEAPF64[$45>>3];
              $8876 = -$8875;
              $8877 = +HEAPF64[$43>>3];
              __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1322,$8876,$8877,1.9999999999999999E-6);
              $8878 = HEAP8[$312>>0]|0;
              $8879 = ($8878<<24>>24)==(0);
              if ($8879) {
               break L604;
              }
              $8880 = +HEAPF64[$x1322>>3];
              $8881 = -$8880;
              HEAPF64[$j0array523>>3] = $8881;
              $8882 = (+__Z5IKsind($8881));
              HEAPF64[$sj0array525>>3] = $8882;
              $8883 = (+__Z5IKcosd($8881));
              HEAPF64[$cj0array524>>3] = $8883;
              $8884 = 3.14159265358979 - $8880;
              HEAPF64[$313>>3] = $8884;
              $8885 = (+__Z5IKsind($8884));
              HEAPF64[$314>>3] = $8885;
              $8886 = +HEAPF64[$313>>3];
              $8887 = (+__Z5IKcosd($8886));
              HEAPF64[$315>>3] = $8887;
              $8888 = +HEAPF64[$j0array523>>3];
              $8889 = $8888 > 3.14159265358979;
              do {
               if ($8889) {
                $8890 = $8888 + -6.2831853071795898;
                HEAPF64[$j0array523>>3] = $8890;
               } else {
                $8891 = $8888 < -3.14159265358979;
                if (!($8891)) {
                 break;
                }
                $8892 = $8888 + 6.2831853071795898;
                HEAPF64[$j0array523>>3] = $8892;
               }
              } while(0);
              HEAP8[$j0valid526>>0] = 1;
              $8893 = +HEAPF64[$313>>3];
              $8894 = $8893 > 3.14159265358979;
              do {
               if ($8894) {
                $8895 = $8893 + -6.2831853071795898;
                HEAPF64[$313>>3] = $8895;
               } else {
                $8896 = $8893 < -3.14159265358979;
                if (!($8896)) {
                 break;
                }
                $8897 = $8893 + 6.2831853071795898;
                HEAPF64[$313>>3] = $8897;
               }
              } while(0);
              HEAP8[$316>>0] = 1;
              $8898 = HEAP8[$j0valid526>>0]|0;
              $8899 = ($8898<<24>>24)==(0);
              do {
               if (!($8899)) {
                HEAP8[$0>>0] = 0;
                HEAP8[$1>>0] = -1;
                $8900 = HEAP8[$916>>0]|0;
                $8901 = ($8900<<24>>24)==(0);
                do {
                 if (!($8901)) {
                  $8902 = +HEAPF64[$cj0array524>>3];
                  $8903 = +HEAPF64[$917>>3];
                  $8904 = $8902 - $8903;
                  $8905 = (+__Z5IKabsd($8904));
                  $8906 = $8905 < 9.9999999999999995E-7;
                  if (!($8906)) {
                   break;
                  }
                  $8907 = +HEAPF64[$sj0array525>>3];
                  $8908 = +HEAPF64[$918>>3];
                  $8909 = $8907 - $8908;
                  $8910 = (+__Z5IKabsd($8909));
                  $8911 = $8910 < 9.9999999999999995E-7;
                  if (!($8911)) {
                   break;
                  }
                  HEAP8[$916>>0] = 0;
                  HEAP8[$1>>0] = 1;
                 }
                } while(0);
                $8912 = +HEAPF64[$j0array523>>3];
                HEAPF64[$this>>3] = $8912;
                $8913 = +HEAPF64[$cj0array524>>3];
                HEAPF64[$317>>3] = $8913;
                $8914 = +HEAPF64[$sj0array525>>3];
                HEAPF64[$318>>3] = $8914;
                $8915 = +HEAPF64[$this>>3];
                $8916 = (+__Z5IKsind($8915));
                $8917 = (+__Z5IKcosd($8915));
                $8918 = +HEAPF64[$43>>3];
                $8919 = $8917 * $8918;
                $8920 = +HEAPF64[$45>>3];
                $8921 = $8916 * $8920;
                $8922 = -$8921;
                $8923 = $8922 - $8919;
                $8924 = (+__Z5IKabsd($8923));
                $8925 = $8924 > 5.0000000000000004E-6;
                if ($8925) {
                 break;
                }
                $8926 = $8918 * 0.089999999999999996;
                $8927 = $8916 * $8926;
                $8928 = $8920 * -0.089999999999999996;
                $8929 = $8917 * $8928;
                $8930 = $8927 + $8929;
                $8931 = (+__Z5IKabsd($8930));
                $8932 = $8931 > 5.0000000000000004E-6;
                if ($8932) {
                 break;
                }
                __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               }
              } while(0);
              $8933 = HEAP8[$912>>0]|0;
              $8934 = ($8933<<24>>24)==(0);
              if ($8934) {
               break L604;
              }
              HEAP8[$0>>0] = 1;
              HEAP8[$1>>0] = -1;
              $18682 = +HEAPF64[$913>>3];
              HEAPF64[$this>>3] = $18682;
              $18683 = +HEAPF64[$914>>3];
              HEAPF64[$317>>3] = $18683;
              $18684 = +HEAPF64[$915>>3];
              HEAPF64[$318>>3] = $18684;
              $18685 = +HEAPF64[$this>>3];
              $18686 = (+__Z5IKsind($18685));
              $18687 = (+__Z5IKcosd($18685));
              $18688 = +HEAPF64[$43>>3];
              $18689 = $18687 * $18688;
              $18690 = +HEAPF64[$45>>3];
              $18691 = $18686 * $18690;
              $18692 = -$18691;
              $18693 = $18692 - $18689;
              $18694 = (+__Z5IKabsd($18693));
              $18695 = $18694 > 5.0000000000000004E-6;
              if ($18695) {
               break L604;
              }
              $18696 = $18688 * 0.089999999999999996;
              $18697 = $18686 * $18696;
              $18698 = $18690 * -0.089999999999999996;
              $18699 = $18687 * $18698;
              $18700 = $18697 + $18699;
              $18701 = (+__Z5IKabsd($18700));
              $18702 = $18701 > 5.0000000000000004E-6;
              if ($18702) {
               break L604;
              }
              __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
              break L604;
             }
             HEAPF64[$24>>3] = -1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$22>>3] = -1.5707963267949001;
             HEAPF64[$7>>3] = 0.0;
             HEAPF64[$76>>3] = 0.0;
             HEAPF64[$75>>3] = 1.0;
             HEAPF64[$3>>3] = 0.0;
             HEAPF64[$184>>3] = 0.0;
             HEAPF64[$183>>3] = 1.0;
             $8810 = +HEAPF64[$60>>3];
             $8811 = +HEAPF64[$47>>3];
             $8812 = $8811 * $8811;
             $8813 = $8810 - $8812;
             $8814 = (+__Z5IKabsd($8813));
             $8815 = $8814 < 9.9999999999999995E-7;
             if ($8815) {
              break L604;
             }
             HEAP16[$j0valid519>>1] = 0;
             HEAP8[$2>>0] = 2;
             $8816 = +HEAPF64[$45>>3];
             $8817 = $8816 * -0.089999999999999996;
             $8818 = +HEAPF64[$43>>3];
             $8819 = $8818 * 0.089999999999999996;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1317,$8817,$8819,1.9999999999999999E-6);
             $8820 = HEAP8[$305>>0]|0;
             $8821 = ($8820<<24>>24)==(0);
             if ($8821) {
              break L604;
             }
             $8822 = +HEAPF64[$x1317>>3];
             $8823 = -$8822;
             HEAPF64[$j0array516>>3] = $8823;
             $8824 = (+__Z5IKsind($8823));
             HEAPF64[$sj0array518>>3] = $8824;
             $8825 = (+__Z5IKcosd($8823));
             HEAPF64[$cj0array517>>3] = $8825;
             $8826 = 3.14159265358979 - $8822;
             HEAPF64[$306>>3] = $8826;
             $8827 = (+__Z5IKsind($8826));
             HEAPF64[$307>>3] = $8827;
             $8828 = +HEAPF64[$306>>3];
             $8829 = (+__Z5IKcosd($8828));
             HEAPF64[$308>>3] = $8829;
             $8830 = +HEAPF64[$j0array516>>3];
             $8831 = $8830 > 3.14159265358979;
             do {
              if ($8831) {
               $8832 = $8830 + -6.2831853071795898;
               HEAPF64[$j0array516>>3] = $8832;
              } else {
               $8833 = $8830 < -3.14159265358979;
               if (!($8833)) {
                break;
               }
               $8834 = $8830 + 6.2831853071795898;
               HEAPF64[$j0array516>>3] = $8834;
              }
             } while(0);
             HEAP8[$j0valid519>>0] = 1;
             $8835 = +HEAPF64[$306>>3];
             $8836 = $8835 > 3.14159265358979;
             do {
              if ($8836) {
               $8837 = $8835 + -6.2831853071795898;
               HEAPF64[$306>>3] = $8837;
              } else {
               $8838 = $8835 < -3.14159265358979;
               if (!($8838)) {
                break;
               }
               $8839 = $8835 + 6.2831853071795898;
               HEAPF64[$306>>3] = $8839;
              }
             } while(0);
             HEAP8[$309>>0] = 1;
             $8840 = HEAP8[$j0valid519>>0]|0;
             $8841 = ($8840<<24>>24)==(0);
             do {
              if (!($8841)) {
               HEAP8[$0>>0] = 0;
               HEAP8[$1>>0] = -1;
               $8842 = HEAP8[$909>>0]|0;
               $8843 = ($8842<<24>>24)==(0);
               do {
                if (!($8843)) {
                 $8844 = +HEAPF64[$cj0array517>>3];
                 $8845 = +HEAPF64[$910>>3];
                 $8846 = $8844 - $8845;
                 $8847 = (+__Z5IKabsd($8846));
                 $8848 = $8847 < 9.9999999999999995E-7;
                 if (!($8848)) {
                  break;
                 }
                 $8849 = +HEAPF64[$sj0array518>>3];
                 $8850 = +HEAPF64[$911>>3];
                 $8851 = $8849 - $8850;
                 $8852 = (+__Z5IKabsd($8851));
                 $8853 = $8852 < 9.9999999999999995E-7;
                 if (!($8853)) {
                  break;
                 }
                 HEAP8[$909>>0] = 0;
                 HEAP8[$1>>0] = 1;
                }
               } while(0);
               $8854 = +HEAPF64[$j0array516>>3];
               HEAPF64[$this>>3] = $8854;
               $8855 = +HEAPF64[$cj0array517>>3];
               HEAPF64[$310>>3] = $8855;
               $8856 = +HEAPF64[$sj0array518>>3];
               HEAPF64[$311>>3] = $8856;
               $8857 = +HEAPF64[$this>>3];
               $8858 = (+__Z5IKcosd($8857));
               $8859 = (+__Z5IKsind($8857));
               $8860 = +HEAPF64[$43>>3];
               $8861 = $8859 * $8860;
               $8862 = +HEAPF64[$45>>3];
               $8863 = -$8862;
               $8864 = $8858 * $8863;
               $8865 = $8861 + $8864;
               $8866 = (+__Z5IKabsd($8865));
               $8867 = $8866 > 5.0000000000000004E-6;
               if ($8867) {
                break;
               }
               $8868 = $8859 * $8863;
               $8869 = $8858 * $8860;
               $8870 = $8868 - $8869;
               $8871 = (+__Z5IKabsd($8870));
               $8872 = $8871 > 5.0000000000000004E-6;
               if ($8872) {
                break;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
              }
             } while(0);
             $8873 = HEAP8[$905>>0]|0;
             $8874 = ($8873<<24>>24)==(0);
             if ($8874) {
              break L604;
             }
             HEAP8[$0>>0] = 1;
             HEAP8[$1>>0] = -1;
             $18703 = +HEAPF64[$906>>3];
             HEAPF64[$this>>3] = $18703;
             $18704 = +HEAPF64[$907>>3];
             HEAPF64[$310>>3] = $18704;
             $18705 = +HEAPF64[$908>>3];
             HEAPF64[$311>>3] = $18705;
             $18706 = +HEAPF64[$this>>3];
             $18707 = (+__Z5IKcosd($18706));
             $18708 = (+__Z5IKsind($18706));
             $18709 = +HEAPF64[$43>>3];
             $18710 = $18708 * $18709;
             $18711 = +HEAPF64[$45>>3];
             $18712 = -$18711;
             $18713 = $18707 * $18712;
             $18714 = $18710 + $18713;
             $18715 = (+__Z5IKabsd($18714));
             $18716 = $18715 > 5.0000000000000004E-6;
             if ($18716) {
              break L604;
             }
             $18717 = $18708 * $18712;
             $18718 = $18707 * $18709;
             $18719 = $18717 - $18718;
             $18720 = (+__Z5IKabsd($18719));
             $18721 = $18720 > 5.0000000000000004E-6;
             if ($18721) {
              break L604;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L604;
            }
           } while(0);
           $8935 = +HEAPF64[$3>>3];
           $8936 = (+__Z6IKfmoddd($8935,6.2831853071795898));
           $8937 = $8936 + -3.14159265358979;
           $8938 = (+__Z5IKabsd($8937));
           $8939 = +HEAPF64[$7>>3];
           $8940 = $8939 + 3.14159265358979;
           $8941 = (+__Z6IKfmoddd($8940,6.2831853071795898));
           $8942 = $8941 + -3.14159265358979;
           $8943 = (+__Z5IKabsd($8942));
           $8944 = $8938 + $8943;
           $8945 = +HEAPF64[$47>>3];
           $8946 = -0.84999999999999998 - $8945;
           $8947 = (+__Z5IKabsd($8944));
           $8948 = $8947 < 9.9999999999999995E-7;
           if (!($8948)) {
            break L604;
           }
           $8949 = +HEAPF64[$60>>3];
           $8950 = 0.72250000000000003 - $8949;
           $8951 = (+__Z5IKabsd($8950));
           $8952 = $8951 < 9.9999999999999995E-7;
           if (!($8952)) {
            break L604;
           }
           $8953 = (+__Z5IKabsd($8946));
           $8954 = $8953 < 9.9999999999999995E-7;
           if (!($8954)) {
            break L604;
           }
           HEAPF64[$24>>3] = -1.0;
           HEAPF64[$23>>3] = 0.0;
           HEAPF64[$22>>3] = -1.5707963267949001;
           HEAPF64[$7>>3] = 0.0;
           HEAPF64[$76>>3] = 0.0;
           HEAPF64[$75>>3] = 1.0;
           HEAPF64[$3>>3] = 3.14159265358979;
           HEAPF64[$184>>3] = 0.0;
           HEAPF64[$183>>3] = -1.0;
           $8955 = +HEAPF64[$43>>3];
           $8956 = (+__Z5IKabsd($8955));
           $8957 = +HEAPF64[$45>>3];
           $8958 = (+__Z5IKabsd($8957));
           $8959 = $8956 + $8958;
           $8960 = (+__Z5IKabsd($8959));
           $8961 = $8960 < 9.9999999999999995E-7;
           if (!($8961)) {
            HEAP16[$j0valid543>>1] = 0;
            HEAP8[$2>>0] = 2;
            $9026 = +HEAPF64[$43>>3];
            $9027 = +HEAPF64[$45>>3];
            __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1330,$9026,$9027,1.9999999999999999E-6);
            $9028 = HEAP8[$326>>0]|0;
            $9029 = ($9028<<24>>24)==(0);
            if ($9029) {
             break L604;
            }
            $9030 = +HEAPF64[$x1330>>3];
            $9031 = -$9030;
            HEAPF64[$j0array540>>3] = $9031;
            $9032 = (+__Z5IKsind($9031));
            HEAPF64[$sj0array542>>3] = $9032;
            $9033 = (+__Z5IKcosd($9031));
            HEAPF64[$cj0array541>>3] = $9033;
            $9034 = 3.14159265358979 - $9030;
            HEAPF64[$327>>3] = $9034;
            $9035 = (+__Z5IKsind($9034));
            HEAPF64[$328>>3] = $9035;
            $9036 = +HEAPF64[$327>>3];
            $9037 = (+__Z5IKcosd($9036));
            HEAPF64[$329>>3] = $9037;
            $9038 = +HEAPF64[$j0array540>>3];
            $9039 = $9038 > 3.14159265358979;
            do {
             if ($9039) {
              $9040 = $9038 + -6.2831853071795898;
              HEAPF64[$j0array540>>3] = $9040;
             } else {
              $9041 = $9038 < -3.14159265358979;
              if (!($9041)) {
               break;
              }
              $9042 = $9038 + 6.2831853071795898;
              HEAPF64[$j0array540>>3] = $9042;
             }
            } while(0);
            HEAP8[$j0valid543>>0] = 1;
            $9043 = +HEAPF64[$327>>3];
            $9044 = $9043 > 3.14159265358979;
            do {
             if ($9044) {
              $9045 = $9043 + -6.2831853071795898;
              HEAPF64[$327>>3] = $9045;
             } else {
              $9046 = $9043 < -3.14159265358979;
              if (!($9046)) {
               break;
              }
              $9047 = $9043 + 6.2831853071795898;
              HEAPF64[$327>>3] = $9047;
             }
            } while(0);
            HEAP8[$330>>0] = 1;
            $9048 = HEAP8[$j0valid543>>0]|0;
            $9049 = ($9048<<24>>24)==(0);
            do {
             if (!($9049)) {
              HEAP8[$0>>0] = 0;
              HEAP8[$1>>0] = -1;
              $9050 = HEAP8[$930>>0]|0;
              $9051 = ($9050<<24>>24)==(0);
              do {
               if (!($9051)) {
                $9052 = +HEAPF64[$cj0array541>>3];
                $9053 = +HEAPF64[$931>>3];
                $9054 = $9052 - $9053;
                $9055 = (+__Z5IKabsd($9054));
                $9056 = $9055 < 9.9999999999999995E-7;
                if (!($9056)) {
                 break;
                }
                $9057 = +HEAPF64[$sj0array542>>3];
                $9058 = +HEAPF64[$932>>3];
                $9059 = $9057 - $9058;
                $9060 = (+__Z5IKabsd($9059));
                $9061 = $9060 < 9.9999999999999995E-7;
                if (!($9061)) {
                 break;
                }
                HEAP8[$930>>0] = 0;
                HEAP8[$1>>0] = 1;
               }
              } while(0);
              $9062 = +HEAPF64[$j0array540>>3];
              HEAPF64[$this>>3] = $9062;
              $9063 = +HEAPF64[$cj0array541>>3];
              HEAPF64[$331>>3] = $9063;
              $9064 = +HEAPF64[$sj0array542>>3];
              HEAPF64[$332>>3] = $9064;
              $9065 = +HEAPF64[$this>>3];
              $9066 = (+__Z5IKsind($9065));
              $9067 = (+__Z5IKcosd($9065));
              $9068 = +HEAPF64[$43>>3];
              $9069 = $9066 * $9068;
              $9070 = +HEAPF64[$45>>3];
              $9071 = $9067 * $9070;
              $9072 = $9069 - $9071;
              $9073 = (+__Z5IKabsd($9072));
              $9074 = $9073 > 5.0000000000000004E-6;
              if ($9074) {
               break;
              }
              $9075 = $9071 * 0.089999999999999996;
              $9076 = $9069 * 0.089999999999999996;
              $9077 = $9076 - $9075;
              $9078 = (+__Z5IKabsd($9077));
              $9079 = $9078 > 5.0000000000000004E-6;
              if ($9079) {
               break;
              }
              __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             }
            } while(0);
            $9080 = HEAP8[$926>>0]|0;
            $9081 = ($9080<<24>>24)==(0);
            if ($9081) {
             break L604;
            }
            HEAP8[$0>>0] = 1;
            HEAP8[$1>>0] = -1;
            $18646 = +HEAPF64[$927>>3];
            HEAPF64[$this>>3] = $18646;
            $18647 = +HEAPF64[$928>>3];
            HEAPF64[$331>>3] = $18647;
            $18648 = +HEAPF64[$929>>3];
            HEAPF64[$332>>3] = $18648;
            $18649 = +HEAPF64[$this>>3];
            $18650 = (+__Z5IKsind($18649));
            $18651 = (+__Z5IKcosd($18649));
            $18652 = +HEAPF64[$43>>3];
            $18653 = $18650 * $18652;
            $18654 = +HEAPF64[$45>>3];
            $18655 = $18651 * $18654;
            $18656 = $18653 - $18655;
            $18657 = (+__Z5IKabsd($18656));
            $18658 = $18657 > 5.0000000000000004E-6;
            if ($18658) {
             break L604;
            }
            $18659 = $18655 * 0.089999999999999996;
            $18660 = $18653 * 0.089999999999999996;
            $18661 = $18660 - $18659;
            $18662 = (+__Z5IKabsd($18661));
            $18663 = $18662 > 5.0000000000000004E-6;
            if ($18663) {
             break L604;
            }
            __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
            break L604;
           }
           HEAPF64[$24>>3] = -1.0;
           HEAPF64[$23>>3] = 0.0;
           HEAPF64[$22>>3] = -1.5707963267949001;
           HEAPF64[$7>>3] = 0.0;
           HEAPF64[$76>>3] = 0.0;
           HEAPF64[$75>>3] = 1.0;
           HEAPF64[$3>>3] = 3.14159265358979;
           HEAPF64[$184>>3] = 0.0;
           HEAPF64[$183>>3] = -1.0;
           $8962 = +HEAPF64[$60>>3];
           $8963 = +HEAPF64[$47>>3];
           $8964 = $8963 * $8963;
           $8965 = $8962 - $8964;
           $8966 = (+__Z5IKabsd($8965));
           $8967 = $8966 < 9.9999999999999995E-7;
           if ($8967) {
            break L604;
           }
           HEAP16[$j0valid536>>1] = 0;
           HEAP8[$2>>0] = 2;
           $8968 = +HEAPF64[$45>>3];
           $8969 = $8968 * -0.089999999999999996;
           $8970 = +HEAPF64[$43>>3];
           $8971 = $8970 * 0.089999999999999996;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1326,$8969,$8971,1.9999999999999999E-6);
           $8972 = HEAP8[$319>>0]|0;
           $8973 = ($8972<<24>>24)==(0);
           if ($8973) {
            break L604;
           }
           $8974 = +HEAPF64[$x1326>>3];
           $8975 = -$8974;
           HEAPF64[$j0array533>>3] = $8975;
           $8976 = (+__Z5IKsind($8975));
           HEAPF64[$sj0array535>>3] = $8976;
           $8977 = (+__Z5IKcosd($8975));
           HEAPF64[$cj0array534>>3] = $8977;
           $8978 = 3.14159265358979 - $8974;
           HEAPF64[$320>>3] = $8978;
           $8979 = (+__Z5IKsind($8978));
           HEAPF64[$321>>3] = $8979;
           $8980 = +HEAPF64[$320>>3];
           $8981 = (+__Z5IKcosd($8980));
           HEAPF64[$322>>3] = $8981;
           $8982 = +HEAPF64[$j0array533>>3];
           $8983 = $8982 > 3.14159265358979;
           do {
            if ($8983) {
             $8984 = $8982 + -6.2831853071795898;
             HEAPF64[$j0array533>>3] = $8984;
            } else {
             $8985 = $8982 < -3.14159265358979;
             if (!($8985)) {
              break;
             }
             $8986 = $8982 + 6.2831853071795898;
             HEAPF64[$j0array533>>3] = $8986;
            }
           } while(0);
           HEAP8[$j0valid536>>0] = 1;
           $8987 = +HEAPF64[$320>>3];
           $8988 = $8987 > 3.14159265358979;
           do {
            if ($8988) {
             $8989 = $8987 + -6.2831853071795898;
             HEAPF64[$320>>3] = $8989;
            } else {
             $8990 = $8987 < -3.14159265358979;
             if (!($8990)) {
              break;
             }
             $8991 = $8987 + 6.2831853071795898;
             HEAPF64[$320>>3] = $8991;
            }
           } while(0);
           HEAP8[$323>>0] = 1;
           $8992 = HEAP8[$j0valid536>>0]|0;
           $8993 = ($8992<<24>>24)==(0);
           do {
            if (!($8993)) {
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             $8994 = HEAP8[$923>>0]|0;
             $8995 = ($8994<<24>>24)==(0);
             do {
              if (!($8995)) {
               $8996 = +HEAPF64[$cj0array534>>3];
               $8997 = +HEAPF64[$924>>3];
               $8998 = $8996 - $8997;
               $8999 = (+__Z5IKabsd($8998));
               $9000 = $8999 < 9.9999999999999995E-7;
               if (!($9000)) {
                break;
               }
               $9001 = +HEAPF64[$sj0array535>>3];
               $9002 = +HEAPF64[$925>>3];
               $9003 = $9001 - $9002;
               $9004 = (+__Z5IKabsd($9003));
               $9005 = $9004 < 9.9999999999999995E-7;
               if (!($9005)) {
                break;
               }
               HEAP8[$923>>0] = 0;
               HEAP8[$1>>0] = 1;
              }
             } while(0);
             $9006 = +HEAPF64[$j0array533>>3];
             HEAPF64[$this>>3] = $9006;
             $9007 = +HEAPF64[$cj0array534>>3];
             HEAPF64[$324>>3] = $9007;
             $9008 = +HEAPF64[$sj0array535>>3];
             HEAPF64[$325>>3] = $9008;
             $9009 = +HEAPF64[$this>>3];
             $9010 = (+__Z5IKsind($9009));
             $9011 = (+__Z5IKcosd($9009));
             $9012 = +HEAPF64[$45>>3];
             $9013 = $9010 * $9012;
             $9014 = +HEAPF64[$43>>3];
             $9015 = $9011 * $9014;
             $9016 = $9013 + $9015;
             $9017 = (+__Z5IKabsd($9016));
             $9018 = $9017 > 5.0000000000000004E-6;
             if ($9018) {
              break;
             }
             $9019 = $9010 * $9014;
             $9020 = $9011 * $9012;
             $9021 = $9019 - $9020;
             $9022 = (+__Z5IKabsd($9021));
             $9023 = $9022 > 5.0000000000000004E-6;
             if ($9023) {
              break;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
            }
           } while(0);
           $9024 = HEAP8[$919>>0]|0;
           $9025 = ($9024<<24>>24)==(0);
           if ($9025) {
            break L604;
           }
           HEAP8[$0>>0] = 1;
           HEAP8[$1>>0] = -1;
           $18664 = +HEAPF64[$920>>3];
           HEAPF64[$this>>3] = $18664;
           $18665 = +HEAPF64[$921>>3];
           HEAPF64[$324>>3] = $18665;
           $18666 = +HEAPF64[$922>>3];
           HEAPF64[$325>>3] = $18666;
           $18667 = +HEAPF64[$this>>3];
           $18668 = (+__Z5IKsind($18667));
           $18669 = (+__Z5IKcosd($18667));
           $18670 = +HEAPF64[$45>>3];
           $18671 = $18668 * $18670;
           $18672 = +HEAPF64[$43>>3];
           $18673 = $18669 * $18672;
           $18674 = $18671 + $18673;
           $18675 = (+__Z5IKabsd($18674));
           $18676 = $18675 > 5.0000000000000004E-6;
           if ($18676) {
            break L604;
           }
           $18677 = $18668 * $18672;
           $18678 = $18669 * $18670;
           $18679 = $18677 - $18678;
           $18680 = (+__Z5IKabsd($18679));
           $18681 = $18680 > 5.0000000000000004E-6;
           if ($18681) {
            break L604;
           }
           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           break L604;
          }
         } while(0);
         $9440 = +HEAPF64[$76>>3];
         $9441 = $9440 * 0.044999999999999998;
         $9442 = -0.55000000000000004 - $9441;
         $9443 = +HEAPF64[$75>>3];
         $9444 = $9443 * 0.29999999999999999;
         $9445 = $9442 - $9444;
         $9446 = +HEAPF64[$47>>3];
         $9447 = $9446 + $9445;
         $9448 = +HEAPF64[$3>>3];
         $9449 = (+__Z5IKabsd($9448));
         $9450 = $9449 + 3.14159265358979;
         $9451 = (+__Z6IKfmoddd($9450,6.2831853071795898));
         $9452 = $9451 + -3.14159265358979;
         $9453 = (+__Z5IKabsd($9452));
         $9454 = $9453 < 9.9999999999999995E-7;
         do {
          if ($9454) {
           $9455 = +HEAPF64[$60>>3];
           $9456 = $9440 * 0.076499999999999999;
           $9457 = $9456 + 0.39655000000000001;
           $9458 = $9457 - $9455;
           $9459 = $9443 * 0.32595000000000002;
           $9460 = $9459 + $9458;
           $9461 = (+__Z5IKabsd($9460));
           $9462 = $9461 < 9.9999999999999995E-7;
           if (!($9462)) {
            break;
           }
           $9463 = (+__Z5IKabsd($9447));
           $9464 = $9463 < 9.9999999999999995E-7;
           if (!($9464)) {
            break;
           }
           HEAPF64[$184>>3] = 0.0;
           HEAPF64[$183>>3] = 1.0;
           HEAPF64[$3>>3] = 0.0;
           $9465 = +HEAPF64[$76>>3];
           $9466 = $9465 * 0.29999999999999999;
           $9467 = +HEAPF64[$43>>3];
           $9468 = +HEAPF64[$24>>3];
           $9469 = $9467 * $9468;
           $9470 = +HEAPF64[$45>>3];
           $9471 = $9470 * 0.044999999999999998;
           $9472 = +HEAPF64[$60>>3];
           $9473 = +HEAPF64[$47>>3];
           $9474 = $9473 * $9473;
           $9475 = $9472 - $9474;
           $9476 = +HEAPF64[$75>>3];
           $9477 = $9471 * $9476;
           $9478 = +HEAPF64[$23>>3];
           $9479 = $9478 * 0.044999999999999998;
           $9480 = $9467 * $9479;
           $9481 = (+__Z6IKsignd($9475));
           $9482 = (+__Z5IKabsd($9475));
           $9483 = $9482 < 9.9999999999999995E-7;
           do {
            if (!($9483)) {
             $9484 = $9468 * $9470;
             $9485 = $9466 * $9484;
             $9486 = $9485 + $9480;
             $9487 = $9468 * $9471;
             $9488 = $9487 + $9486;
             $9489 = $9476 * $9480;
             $9490 = $9488 - $9489;
             $9491 = $9467 * $9478;
             $9492 = $9466 * $9491;
             $9493 = $9492 + $9490;
             $9494 = $9468 * $9477;
             $9495 = $9493 - $9494;
             $9496 = (+__Z5IKabsd($9495));
             $9497 = $9471 * $9478;
             $9498 = $9466 * $9469;
             $9499 = $9497 - $9498;
             $9500 = $9476 * 0.044999999999999998;
             $9501 = $9469 * $9500;
             $9502 = $9501 + $9499;
             $9503 = $9478 * $9477;
             $9504 = $9502 - $9503;
             $9505 = $9469 * 0.044999999999999998;
             $9506 = $9504 - $9505;
             $9507 = $9470 * $9478;
             $9508 = $9466 * $9507;
             $9509 = $9508 + $9506;
             $9510 = (+__Z5IKabsd($9509));
             $9511 = $9496 + $9510;
             $9512 = (+__Z5IKabsd($9511));
             $9513 = $9512 < 9.9999999999999995E-7;
             if ($9513) {
              break;
             }
             $9514 = (+__Z5IKabsd($9481));
             $9515 = $9514 < 9.9999999999999995E-7;
             if ($9515) {
              break;
             }
             HEAP8[$2>>0] = 1;
             $11655 = +HEAPF64[$43>>3];
             $11656 = +HEAPF64[$24>>3];
             $11657 = $11655 * $11656;
             $11658 = +HEAPF64[$76>>3];
             $11659 = $11658 * 0.29999999999999999;
             $11660 = +HEAPF64[$23>>3];
             $11661 = +HEAPF64[$45>>3];
             $11662 = $11660 * $11661;
             $11663 = $11656 * $11661;
             $11664 = +HEAPF64[$75>>3];
             $11665 = $11664 * 0.044999999999999998;
             $11666 = $11660 * 0.044999999999999998;
             $11667 = $11655 * $11666;
             $11668 = $11657 * $11659;
             $11669 = $11657 * -0.044999999999999998;
             $11670 = $11669 - $11668;
             $11671 = $11657 * $11665;
             $11672 = $11670 + $11671;
             $11673 = $11659 * $11662;
             $11674 = $11673 + $11672;
             $11675 = $11662 * 0.044999999999999998;
             $11676 = $11675 + $11674;
             $11677 = $11664 * -0.044999999999999998;
             $11678 = $11662 * $11677;
             $11679 = $11678 + $11676;
             $11680 = $11663 * $11677;
             $11681 = $11664 * $11667;
             $11682 = $11680 - $11681;
             $11683 = $11667 + $11682;
             $11684 = $11655 * $11660;
             $11685 = $11659 * $11684;
             $11686 = $11685 + $11683;
             $11687 = $11659 * $11663;
             $11688 = $11687 + $11686;
             $11689 = $11663 * 0.044999999999999998;
             $11690 = $11689 + $11688;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1613,$11679,$11690,1.9999999999999999E-6);
             $11691 = HEAP8[$462>>0]|0;
             $11692 = ($11691<<24>>24)==(0);
             if ($11692) {
              break L604;
             }
             $11693 = +HEAPF64[$60>>3];
             $11694 = +HEAPF64[$47>>3];
             $11695 = $11694 * $11694;
             $11696 = $11693 - $11695;
             $11697 = (+__Z6IKsignd($11696));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1614,$11697,-1);
             $11698 = HEAP8[$463>>0]|0;
             $11699 = ($11698<<24>>24)==(0);
             if ($11699) {
              break L604;
             }
             $11700 = +HEAPF64[$x1613>>3];
             $11701 = $11700 + -1.5707963267949001;
             $11702 = +HEAPF64[$x1614>>3];
             $11703 = $11702 * 1.5707963267949001;
             $11704 = $11701 + $11703;
             $11705 = (+__Z5IKsind($11704));
             $11706 = (+__Z5IKcosd($11704));
             $11707 = $11704 > 3.14159265358979;
             do {
              if ($11707) {
               $11708 = $11704 + -6.2831853071795898;
               $11711 = $11708;
              } else {
               $11709 = $11704 < -3.14159265358979;
               if (!($11709)) {
                $11711 = $11704;
                break;
               }
               $11710 = $11704 + 6.2831853071795898;
               $11711 = $11710;
              }
             } while(0);
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             HEAPF64[$this>>3] = $11711;
             HEAPF64[$464>>3] = $11706;
             HEAPF64[$465>>3] = $11705;
             $11712 = +HEAPF64[$this>>3];
             $11713 = (+__Z5IKcosd($11712));
             $11714 = (+__Z5IKsind($11712));
             $11715 = +HEAPF64[$23>>3];
             $11716 = $11715 * 0.044999999999999998;
             $11717 = +HEAPF64[$24>>3];
             $11718 = $11717 * 0.089999999999999996;
             $11719 = +HEAPF64[$76>>3];
             $11720 = $11719 * 0.29999999999999999;
             $11721 = +HEAPF64[$75>>3];
             $11722 = $11721 * 0.044999999999999998;
             $11723 = $11715 * 0.089999999999999996;
             $11724 = +HEAPF64[$43>>3];
             $11725 = $11714 * $11724;
             $11726 = $11713 * $11724;
             $11727 = +HEAPF64[$45>>3];
             $11728 = $11713 * $11727;
             $11729 = $11714 * $11727;
             $11730 = $11717 * $11720;
             $11731 = $11730 - $11728;
             $11732 = $11725 + $11731;
             $11733 = $11717 * 0.044999999999999998;
             $11734 = $11733 + $11732;
             $11735 = -$11717;
             $11736 = $11722 * $11735;
             $11737 = $11736 + $11734;
             $11738 = $11717 * $11726;
             $11739 = $11717 * $11729;
             $11740 = $11738 + $11739;
             $11741 = -$11715;
             $11742 = $11728 * $11741;
             $11743 = $11742 + $11740;
             $11744 = $11715 * $11725;
             $11745 = $11744 + $11743;
             $11746 = $11717 * $11725;
             $11747 = $11746 + 0.044999999999999998;
             $11748 = $11720 + $11747;
             $11749 = $11748 - $11722;
             $11750 = $11726 * $11741;
             $11751 = $11750 + $11749;
             $11752 = $11729 * $11741;
             $11753 = $11752 + $11751;
             $11754 = $11728 * $11735;
             $11755 = $11754 + $11753;
             $11756 = +HEAPF64[$60>>3];
             $11757 = -0.21249999999999999 - $11756;
             $11758 = +HEAPF64[$47>>3];
             $11759 = $11758 * 1.1000000000000001;
             $11760 = $11757 + $11759;
             $11761 = $11718 * $11728;
             $11762 = $11761 + $11760;
             $11763 = $11718 * $11725;
             $11764 = $11762 - $11763;
             $11765 = $11723 * $11726;
             $11766 = $11765 + $11764;
             $11767 = $11723 * $11729;
             $11768 = $11767 + $11766;
             $11769 = (+__Z5IKabsd($11737));
             $11770 = $11769 > 5.0000000000000004E-6;
             if ($11770) {
              break L604;
             }
             $11771 = -$11726;
             $11772 = $11716 * $11721;
             $11773 = $11771 - $11772;
             $11774 = $11773 - $11729;
             $11775 = $11716 + $11774;
             $11776 = $11715 * $11720;
             $11777 = $11776 + $11775;
             $11778 = (+__Z5IKabsd($11777));
             $11779 = $11778 > 5.0000000000000004E-6;
             if ($11779) {
              break L604;
             }
             $11780 = (+__Z5IKabsd($11745));
             $11781 = $11780 > 5.0000000000000004E-6;
             if ($11781) {
              break L604;
             }
             $11782 = (+__Z5IKabsd($11755));
             $11783 = $11782 > 5.0000000000000004E-6;
             if ($11783) {
              break L604;
             }
             $11784 = (+__Z5IKabsd($11768));
             $11785 = $11784 > 5.0000000000000004E-6;
             if ($11785) {
              break L604;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L604;
            }
           } while(0);
           HEAPF64[$184>>3] = 0.0;
           HEAPF64[$183>>3] = 1.0;
           HEAPF64[$3>>3] = 0.0;
           $9516 = +HEAPF64[$23>>3];
           $9517 = +HEAPF64[$60>>3];
           $9518 = $9516 * $9517;
           $9519 = +HEAPF64[$47>>3];
           $9520 = $9519 * $9519;
           $9521 = $9516 * $9520;
           $9522 = $9521 - $9518;
           $9523 = (+__Z5IKabsd($9522));
           $9524 = $9523 < 9.9999999999999995E-7;
           do {
            if (!($9524)) {
             $9525 = (+__Z6IKsignd($9522));
             $9526 = (+__Z5IKabsd($9525));
             $9527 = $9526 < 9.9999999999999995E-7;
             if ($9527) {
              break;
             }
             HEAP8[$2>>0] = 1;
             $11515 = +HEAPF64[$23>>3];
             $11516 = $11515 * $11515;
             $11517 = +HEAPF64[$43>>3];
             $11518 = $11517 * 0.044999999999999998;
             $11519 = +HEAPF64[$24>>3];
             $11520 = $11515 * $11519;
             $11521 = +HEAPF64[$75>>3];
             $11522 = $11521 * 0.044999999999999998;
             $11523 = +HEAPF64[$76>>3];
             $11524 = $11523 * 0.29999999999999999;
             $11525 = +HEAPF64[$45>>3];
             $11526 = $11516 * $11525;
             $11527 = +HEAPF64[$60>>3];
             $11528 = $11515 * $11527;
             $11529 = +HEAPF64[$47>>3];
             $11530 = $11529 * $11529;
             $11531 = $11515 * $11530;
             $11532 = $11531 - $11528;
             $11533 = (+__Z6IKsignd($11532));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1593,$11533,-1);
             $11534 = HEAP8[$458>>0]|0;
             $11535 = ($11534<<24>>24)==(0);
             if ($11535) {
              break L604;
             }
             $11536 = +HEAPF64[$43>>3];
             $11537 = $11520 * $11536;
             $11538 = $11524 * $11537;
             $11539 = $11522 * $11526;
             $11540 = $11539 + $11538;
             $11541 = +HEAPF64[$75>>3];
             $11542 = $11518 * $11541;
             $11543 = $11520 * $11542;
             $11544 = $11540 - $11543;
             $11545 = $11526 * 0.044999999999999998;
             $11546 = $11544 - $11545;
             $11547 = $11518 * $11520;
             $11548 = $11547 + $11546;
             $11549 = $11524 * $11526;
             $11550 = $11548 - $11549;
             $11551 = +HEAPF64[$45>>3];
             $11552 = $11520 * $11551;
             $11553 = $11522 * $11552;
             $11554 = $11516 * $11536;
             $11555 = $11524 * $11554;
             $11556 = $11553 - $11555;
             $11557 = $11516 * $11541;
             $11558 = $11518 * $11557;
             $11559 = $11558 + $11556;
             $11560 = $11524 * $11552;
             $11561 = $11559 - $11560;
             $11562 = $11516 * $11518;
             $11563 = $11561 - $11562;
             $11564 = $11551 * -0.044999999999999998;
             $11565 = $11520 * $11564;
             $11566 = $11565 + $11563;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1594,$11550,$11566,1.9999999999999999E-6);
             $11567 = HEAP8[$459>>0]|0;
             $11568 = ($11567<<24>>24)==(0);
             if ($11568) {
              break L604;
             }
             $11569 = +HEAPF64[$x1593>>3];
             $11570 = $11569 * 1.5707963267949001;
             $11571 = $11570 + -1.5707963267949001;
             $11572 = +HEAPF64[$x1594>>3];
             $11573 = $11572 + $11571;
             $11574 = (+__Z5IKsind($11573));
             $11575 = (+__Z5IKcosd($11573));
             $11576 = $11573 > 3.14159265358979;
             do {
              if ($11576) {
               $11577 = $11573 + -6.2831853071795898;
               $11580 = $11577;
              } else {
               $11578 = $11573 < -3.14159265358979;
               if (!($11578)) {
                $11580 = $11573;
                break;
               }
               $11579 = $11573 + 6.2831853071795898;
               $11580 = $11579;
              }
             } while(0);
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             HEAPF64[$this>>3] = $11580;
             HEAPF64[$460>>3] = $11575;
             HEAPF64[$461>>3] = $11574;
             $11581 = +HEAPF64[$this>>3];
             $11582 = (+__Z5IKcosd($11581));
             $11583 = (+__Z5IKsind($11581));
             $11584 = +HEAPF64[$23>>3];
             $11585 = $11584 * 0.044999999999999998;
             $11586 = +HEAPF64[$24>>3];
             $11587 = $11586 * 0.089999999999999996;
             $11588 = +HEAPF64[$76>>3];
             $11589 = $11588 * 0.29999999999999999;
             $11590 = +HEAPF64[$75>>3];
             $11591 = $11590 * 0.044999999999999998;
             $11592 = $11584 * 0.089999999999999996;
             $11593 = +HEAPF64[$43>>3];
             $11594 = $11583 * $11593;
             $11595 = $11582 * $11593;
             $11596 = +HEAPF64[$45>>3];
             $11597 = $11582 * $11596;
             $11598 = $11583 * $11596;
             $11599 = $11586 * $11589;
             $11600 = $11599 - $11597;
             $11601 = $11594 + $11600;
             $11602 = $11586 * 0.044999999999999998;
             $11603 = $11602 + $11601;
             $11604 = -$11586;
             $11605 = $11591 * $11604;
             $11606 = $11605 + $11603;
             $11607 = $11586 * $11598;
             $11608 = $11586 * $11595;
             $11609 = $11608 + $11607;
             $11610 = $11584 * $11594;
             $11611 = $11610 + $11609;
             $11612 = -$11584;
             $11613 = $11597 * $11612;
             $11614 = $11613 + $11611;
             $11615 = $11586 * $11594;
             $11616 = $11615 + 0.044999999999999998;
             $11617 = $11616 - $11591;
             $11618 = $11589 + $11617;
             $11619 = $11597 * $11604;
             $11620 = $11619 + $11618;
             $11621 = $11598 * $11612;
             $11622 = $11621 + $11620;
             $11623 = $11595 * $11612;
             $11624 = $11623 + $11622;
             $11625 = $11592 * $11598;
             $11626 = $11625 + -0.21249999999999999;
             $11627 = $11592 * $11595;
             $11628 = $11627 + $11626;
             $11629 = +HEAPF64[$60>>3];
             $11630 = $11628 - $11629;
             $11631 = $11587 * $11597;
             $11632 = $11631 + $11630;
             $11633 = +HEAPF64[$47>>3];
             $11634 = $11633 * 1.1000000000000001;
             $11635 = $11634 + $11632;
             $11636 = $11587 * $11594;
             $11637 = $11635 - $11636;
             $11638 = (+__Z5IKabsd($11606));
             $11639 = $11638 > 5.0000000000000004E-6;
             if ($11639) {
              break L604;
             }
             $11640 = -$11598;
             $11641 = $11585 * $11590;
             $11642 = $11640 - $11641;
             $11643 = $11642 - $11595;
             $11644 = $11585 + $11643;
             $11645 = $11584 * $11589;
             $11646 = $11645 + $11644;
             $11647 = (+__Z5IKabsd($11646));
             $11648 = $11647 > 5.0000000000000004E-6;
             if ($11648) {
              break L604;
             }
             $11649 = (+__Z5IKabsd($11614));
             $11650 = $11649 > 5.0000000000000004E-6;
             if ($11650) {
              break L604;
             }
             $11651 = (+__Z5IKabsd($11624));
             $11652 = $11651 > 5.0000000000000004E-6;
             if ($11652) {
              break L604;
             }
             $11653 = (+__Z5IKabsd($11637));
             $11654 = $11653 > 5.0000000000000004E-6;
             if ($11654) {
              break L604;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L604;
            }
           } while(0);
           HEAPF64[$184>>3] = 0.0;
           HEAPF64[$183>>3] = 1.0;
           HEAPF64[$3>>3] = 0.0;
           $9528 = +HEAPF64[$60>>3];
           $9529 = +HEAPF64[$24>>3];
           $9530 = $9528 * $9529;
           $9531 = +HEAPF64[$47>>3];
           $9532 = $9531 * $9531;
           $9533 = $9529 * $9532;
           $9534 = $9533 - $9530;
           $9535 = (+__Z5IKabsd($9534));
           $9536 = $9535 < 9.9999999999999995E-7;
           do {
            if (!($9536)) {
             $9537 = (+__Z6IKsignd($9534));
             $9538 = (+__Z5IKabsd($9537));
             $9539 = $9538 < 9.9999999999999995E-7;
             if ($9539) {
              break;
             }
             HEAP8[$2>>0] = 1;
             $11364 = +HEAPF64[$23>>3];
             $11365 = $11364 * $11364;
             $11366 = +HEAPF64[$43>>3];
             $11367 = $11366 * 0.044999999999999998;
             $11368 = +HEAPF64[$24>>3];
             $11369 = $11364 * $11368;
             $11370 = +HEAPF64[$76>>3];
             $11371 = $11370 * 0.29999999999999999;
             $11372 = +HEAPF64[$75>>3];
             $11373 = $11372 * 0.044999999999999998;
             $11374 = +HEAPF64[$45>>3];
             $11375 = $11374 * 0.044999999999999998;
             $11376 = $11365 * $11374;
             $11377 = +HEAPF64[$60>>3];
             $11378 = $11368 * $11377;
             $11379 = +HEAPF64[$47>>3];
             $11380 = $11379 * $11379;
             $11381 = $11368 * $11380;
             $11382 = $11381 - $11378;
             $11383 = (+__Z6IKsignd($11382));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1573,$11383,-1);
             $11384 = HEAP8[$454>>0]|0;
             $11385 = ($11384<<24>>24)==(0);
             if ($11385) {
              break L604;
             }
             $11386 = +HEAPF64[$43>>3];
             $11387 = -$11386;
             $11388 = $11365 * $11387;
             $11389 = $11371 * $11388;
             $11390 = $11365 * $11367;
             $11391 = $11389 - $11390;
             $11392 = +HEAPF64[$75>>3];
             $11393 = $11365 * $11392;
             $11394 = $11367 * $11393;
             $11395 = $11391 + $11394;
             $11396 = $11369 * $11375;
             $11397 = $11395 - $11396;
             $11398 = $11367 + $11397;
             $11399 = $11371 * $11386;
             $11400 = $11399 + $11398;
             $11401 = +HEAPF64[$45>>3];
             $11402 = $11369 * $11401;
             $11403 = $11373 * $11402;
             $11404 = $11403 + $11400;
             $11405 = $11367 * $11392;
             $11406 = $11404 - $11405;
             $11407 = -$11401;
             $11408 = $11369 * $11407;
             $11409 = $11371 * $11408;
             $11410 = $11409 + $11406;
             $11411 = $11365 * $11375;
             $11412 = $11371 * $11376;
             $11413 = $11411 + $11412;
             $11414 = $11373 * $11376;
             $11415 = $11413 - $11414;
             $11416 = $11367 * $11369;
             $11417 = $11415 - $11416;
             $11418 = $11371 * $11407;
             $11419 = $11417 + $11418;
             $11420 = $11369 * $11387;
             $11421 = $11371 * $11420;
             $11422 = $11421 + $11419;
             $11423 = $11369 * $11405;
             $11424 = $11423 + $11422;
             $11425 = $11373 * $11401;
             $11426 = $11425 + $11424;
             $11427 = $11426 - $11375;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1574,$11410,$11427,1.9999999999999999E-6);
             $11428 = HEAP8[$455>>0]|0;
             $11429 = ($11428<<24>>24)==(0);
             if ($11429) {
              break L604;
             }
             $11430 = +HEAPF64[$x1573>>3];
             $11431 = $11430 * 1.5707963267949001;
             $11432 = $11431 + -1.5707963267949001;
             $11433 = +HEAPF64[$x1574>>3];
             $11434 = $11433 + $11432;
             $11435 = (+__Z5IKsind($11434));
             $11436 = (+__Z5IKcosd($11434));
             $11437 = $11434 > 3.14159265358979;
             do {
              if ($11437) {
               $11438 = $11434 + -6.2831853071795898;
               $11441 = $11438;
              } else {
               $11439 = $11434 < -3.14159265358979;
               if (!($11439)) {
                $11441 = $11434;
                break;
               }
               $11440 = $11434 + 6.2831853071795898;
               $11441 = $11440;
              }
             } while(0);
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             HEAPF64[$this>>3] = $11441;
             HEAPF64[$456>>3] = $11436;
             HEAPF64[$457>>3] = $11435;
             $11442 = +HEAPF64[$this>>3];
             $11443 = (+__Z5IKcosd($11442));
             $11444 = (+__Z5IKsind($11442));
             $11445 = +HEAPF64[$23>>3];
             $11446 = $11445 * 0.044999999999999998;
             $11447 = +HEAPF64[$24>>3];
             $11448 = $11447 * 0.089999999999999996;
             $11449 = +HEAPF64[$76>>3];
             $11450 = $11449 * 0.29999999999999999;
             $11451 = +HEAPF64[$75>>3];
             $11452 = $11451 * 0.044999999999999998;
             $11453 = $11445 * 0.089999999999999996;
             $11454 = +HEAPF64[$43>>3];
             $11455 = $11444 * $11454;
             $11456 = $11443 * $11454;
             $11457 = +HEAPF64[$45>>3];
             $11458 = $11443 * $11457;
             $11459 = $11444 * $11457;
             $11460 = $11447 * 0.044999999999999998;
             $11461 = $11460 + $11455;
             $11462 = $11461 - $11458;
             $11463 = -$11447;
             $11464 = $11452 * $11463;
             $11465 = $11464 + $11462;
             $11466 = $11447 * $11450;
             $11467 = $11466 + $11465;
             $11468 = $11447 * $11459;
             $11469 = $11447 * $11456;
             $11470 = $11469 + $11468;
             $11471 = $11445 * $11455;
             $11472 = $11471 + $11470;
             $11473 = -$11445;
             $11474 = $11458 * $11473;
             $11475 = $11474 + $11472;
             $11476 = 0.044999999999999998 - $11452;
             $11477 = $11447 * $11455;
             $11478 = $11476 + $11477;
             $11479 = $11450 + $11478;
             $11480 = $11458 * $11463;
             $11481 = $11480 + $11479;
             $11482 = $11459 * $11473;
             $11483 = $11482 + $11481;
             $11484 = $11456 * $11473;
             $11485 = $11484 + $11483;
             $11486 = $11448 * $11455;
             $11487 = -0.21249999999999999 - $11486;
             $11488 = +HEAPF64[$60>>3];
             $11489 = $11487 - $11488;
             $11490 = +HEAPF64[$47>>3];
             $11491 = $11490 * 1.1000000000000001;
             $11492 = $11489 + $11491;
             $11493 = $11448 * $11458;
             $11494 = $11493 + $11492;
             $11495 = $11453 * $11456;
             $11496 = $11495 + $11494;
             $11497 = $11453 * $11459;
             $11498 = $11497 + $11496;
             $11499 = (+__Z5IKabsd($11467));
             $11500 = $11499 > 5.0000000000000004E-6;
             if ($11500) {
              break L604;
             }
             $11501 = $11445 * $11450;
             $11502 = $11446 + $11501;
             $11503 = $11502 - $11459;
             $11504 = $11503 - $11456;
             $11505 = $11446 * $11451;
             $11506 = $11504 - $11505;
             $11507 = (+__Z5IKabsd($11506));
             $11508 = $11507 > 5.0000000000000004E-6;
             if ($11508) {
              break L604;
             }
             $11509 = (+__Z5IKabsd($11475));
             $11510 = $11509 > 5.0000000000000004E-6;
             if ($11510) {
              break L604;
             }
             $11511 = (+__Z5IKabsd($11485));
             $11512 = $11511 > 5.0000000000000004E-6;
             if ($11512) {
              break L604;
             }
             $11513 = (+__Z5IKabsd($11498));
             $11514 = $11513 > 5.0000000000000004E-6;
             if ($11514) {
              break L604;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L604;
            }
           } while(0);
           $9540 = +HEAPF64[$22>>3];
           $9541 = (+__Z5IKabsd($9540));
           $9542 = $9541 + 3.14159265358979;
           $9543 = (+__Z6IKfmoddd($9542,6.2831853071795898));
           $9544 = $9543 + -3.14159265358979;
           $9545 = (+__Z5IKabsd($9544));
           $9546 = $9545 < 9.9999999999999995E-7;
           do {
            if ($9546) {
             $9547 = +HEAPF64[$75>>3];
             $9548 = +HEAPF64[$60>>3];
             $9549 = +HEAPF64[$76>>3];
             $9550 = $9549 * 0.076499999999999999;
             $9551 = $9550 + 0.39655000000000001;
             $9552 = $9551 - $9548;
             $9553 = $9547 * 0.32595000000000002;
             $9554 = $9553 + $9552;
             $9555 = (+__Z5IKabsd($9554));
             $9556 = $9555 < 9.9999999999999995E-7;
             if (!($9556)) {
              break;
             }
             HEAPF64[$184>>3] = 0.0;
             HEAPF64[$183>>3] = 1.0;
             HEAPF64[$3>>3] = 0.0;
             HEAPF64[$24>>3] = 0.0;
             HEAPF64[$23>>3] = 1.0;
             HEAPF64[$22>>3] = 0.0;
             $9557 = +HEAPF64[$76>>3];
             $9558 = $9557 * 20.0;
             $9559 = +HEAPF64[$43>>3];
             $9560 = $9559 * 3.0;
             $9561 = +HEAPF64[$45>>3];
             $9562 = $9561 * 3.0;
             $9563 = +HEAPF64[$60>>3];
             $9564 = +HEAPF64[$47>>3];
             $9565 = $9564 * $9564;
             $9566 = $9563 - $9565;
             $9567 = +HEAPF64[$75>>3];
             $9568 = (+__Z6IKsignd($9566));
             $9569 = (+__Z5IKabsd($9566));
             $9570 = $9569 < 9.9999999999999995E-7;
             do {
              if (!($9570)) {
               $9571 = $9559 * $9558;
               $9572 = $9560 * $9567;
               $9573 = $9571 - $9572;
               $9574 = $9560 + $9573;
               $9575 = (+__Z5IKabsd($9574));
               $9576 = $9558 * $9561;
               $9577 = $9562 * $9567;
               $9578 = $9576 - $9577;
               $9579 = $9562 + $9578;
               $9580 = (+__Z5IKabsd($9579));
               $9581 = $9575 + $9580;
               $9582 = (+__Z5IKabsd($9581));
               $9583 = $9582 < 9.9999999999999995E-7;
               if ($9583) {
                break;
               }
               $9584 = (+__Z5IKabsd($9568));
               $9585 = $9584 < 9.9999999999999995E-7;
               if ($9585) {
                break;
               }
               HEAP8[$2>>0] = 1;
               $9833 = +HEAPF64[$76>>3];
               $9834 = $9833 * 0.29999999999999999;
               $9835 = +HEAPF64[$43>>3];
               $9836 = $9835 * 0.044999999999999998;
               $9837 = +HEAPF64[$45>>3];
               $9838 = $9837 * 0.044999999999999998;
               $9839 = +HEAPF64[$60>>3];
               $9840 = +HEAPF64[$47>>3];
               $9841 = $9840 * $9840;
               $9842 = $9839 - $9841;
               $9843 = (+__Z6IKsignd($9842));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1428,$9843,-1);
               $9844 = HEAP8[$363>>0]|0;
               $9845 = ($9844<<24>>24)==(0);
               if ($9845) {
                break L604;
               }
               $9846 = +HEAPF64[$75>>3];
               $9847 = -$9846;
               $9848 = $9838 * $9847;
               $9849 = $9838 + $9848;
               $9850 = +HEAPF64[$45>>3];
               $9851 = $9834 * $9850;
               $9852 = $9849 + $9851;
               $9853 = +HEAPF64[$43>>3];
               $9854 = $9834 * $9853;
               $9855 = $9836 + $9854;
               $9856 = $9836 * $9847;
               $9857 = $9856 + $9855;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1429,$9852,$9857,1.9999999999999999E-6);
               $9858 = HEAP8[$364>>0]|0;
               $9859 = ($9858<<24>>24)==(0);
               if ($9859) {
                break L604;
               }
               $9860 = +HEAPF64[$x1428>>3];
               $9861 = $9860 * 1.5707963267949001;
               $9862 = $9861 + -1.5707963267949001;
               $9863 = +HEAPF64[$x1429>>3];
               $9864 = $9863 + $9862;
               $9865 = (+__Z5IKsind($9864));
               $9866 = (+__Z5IKcosd($9864));
               $9867 = $9864 > 3.14159265358979;
               do {
                if ($9867) {
                 $9868 = $9864 + -6.2831853071795898;
                 $9871 = $9868;
                } else {
                 $9869 = $9864 < -3.14159265358979;
                 if (!($9869)) {
                  $9871 = $9864;
                  break;
                 }
                 $9870 = $9864 + 6.2831853071795898;
                 $9871 = $9870;
                }
               } while(0);
               HEAP8[$0>>0] = 0;
               HEAP8[$1>>0] = -1;
               HEAPF64[$this>>3] = $9871;
               HEAPF64[$365>>3] = $9866;
               HEAPF64[$366>>3] = $9865;
               $9872 = +HEAPF64[$this>>3];
               $9873 = (+__Z5IKcosd($9872));
               $9874 = (+__Z5IKsind($9872));
               $9875 = +HEAPF64[$45>>3];
               $9876 = +HEAPF64[$43>>3];
               $9877 = $9873 * $9876;
               $9878 = $9874 * $9876;
               $9879 = $9873 * $9875;
               $9880 = $9878 - $9879;
               $9881 = $9877 * 0.089999999999999996;
               $9882 = $9881 + -0.21249999999999999;
               $9883 = +HEAPF64[$60>>3];
               $9884 = $9882 - $9883;
               $9885 = +HEAPF64[$47>>3];
               $9886 = $9885 * 1.1000000000000001;
               $9887 = $9886 + $9884;
               $9888 = $9875 * 0.089999999999999996;
               $9889 = $9874 * $9888;
               $9890 = $9889 + $9887;
               $9891 = (+__Z5IKabsd($9880));
               $9892 = $9891 > 5.0000000000000004E-6;
               if ($9892) {
                break L604;
               }
               $9893 = +HEAPF64[$76>>3];
               $9894 = +HEAPF64[$75>>3];
               $9895 = 0.044999999999999998 - $9877;
               $9896 = $9874 * $9875;
               $9897 = $9895 - $9896;
               $9898 = $9894 * 0.044999999999999998;
               $9899 = $9897 - $9898;
               $9900 = $9893 * 0.29999999999999999;
               $9901 = $9900 + $9899;
               $9902 = (+__Z5IKabsd($9901));
               $9903 = $9902 > 5.0000000000000004E-6;
               if ($9903) {
                break L604;
               }
               $9904 = (+__Z5IKabsd($9890));
               $9905 = $9904 > 5.0000000000000004E-6;
               if ($9905) {
                break L604;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               break L604;
              }
             } while(0);
             HEAPF64[$184>>3] = 0.0;
             HEAPF64[$183>>3] = 1.0;
             HEAPF64[$3>>3] = 0.0;
             HEAPF64[$24>>3] = 0.0;
             HEAPF64[$23>>3] = 1.0;
             HEAPF64[$22>>3] = 0.0;
             $9586 = +HEAPF64[$47>>3];
             $9587 = $9586 * $9586;
             $9588 = +HEAPF64[$60>>3];
             $9589 = $9588 * 80.0;
             $9590 = $9586 * 88.0;
             $9591 = $9587 - $9588;
             $9592 = +HEAPF64[$45>>3];
             $9593 = $9590 * $9592;
             $9594 = $9592 * 17.0;
             $9595 = $9593 - $9594;
             $9596 = $9592 * $9589;
             $9597 = $9595 - $9596;
             $9598 = (+__Z5IKabsd($9597));
             $9599 = +HEAPF64[$43>>3];
             $9600 = $9590 * $9599;
             $9601 = $9589 * $9599;
             $9602 = $9600 - $9601;
             $9603 = $9599 * 17.0;
             $9604 = $9602 - $9603;
             $9605 = (+__Z5IKabsd($9604));
             $9606 = $9598 + $9605;
             $9607 = (+__Z5IKabsd($9591));
             $9608 = $9607 < 9.9999999999999995E-7;
             do {
              if (!($9608)) {
               $9609 = $9588 * 9.0;
               $9610 = $9587 * 9.0;
               $9611 = $9610 - $9609;
               $9612 = (+__Z6IKsignd($9611));
               $9613 = (+__Z5IKabsd($9612));
               $9614 = $9613 < 9.9999999999999995E-7;
               if ($9614) {
                break;
               }
               $9615 = (+__Z5IKabsd($9606));
               $9616 = $9615 < 9.9999999999999995E-7;
               if ($9616) {
                break;
               }
               HEAP8[$2>>0] = 1;
               $9762 = +HEAPF64[$47>>3];
               $9763 = $9762 * 110.0;
               $9764 = +HEAPF64[$60>>3];
               $9765 = $9764 * 100.0;
               $9766 = $9764 * 9.0;
               $9767 = $9762 * $9762;
               $9768 = $9767 * 9.0;
               $9769 = $9768 - $9766;
               $9770 = (+__Z6IKsignd($9769));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1419,$9770,-1);
               $9771 = HEAP8[$359>>0]|0;
               $9772 = ($9771<<24>>24)==(0);
               if ($9772) {
                break L604;
               }
               $9773 = +HEAPF64[$45>>3];
               $9774 = $9763 * $9773;
               $9775 = $9773 * 21.25;
               $9776 = $9774 - $9775;
               $9777 = $9765 * $9773;
               $9778 = $9776 - $9777;
               $9779 = +HEAPF64[$43>>3];
               $9780 = $9763 * $9779;
               $9781 = $9779 * 21.25;
               $9782 = $9780 - $9781;
               $9783 = $9765 * $9779;
               $9784 = $9782 - $9783;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1420,$9778,$9784,1.9999999999999999E-6);
               $9785 = HEAP8[$360>>0]|0;
               $9786 = ($9785<<24>>24)==(0);
               if ($9786) {
                break L604;
               }
               $9787 = +HEAPF64[$x1419>>3];
               $9788 = $9787 * 1.5707963267949001;
               $9789 = $9788 + -1.5707963267949001;
               $9790 = +HEAPF64[$x1420>>3];
               $9791 = $9790 + $9789;
               $9792 = (+__Z5IKsind($9791));
               $9793 = (+__Z5IKcosd($9791));
               $9794 = $9791 > 3.14159265358979;
               do {
                if ($9794) {
                 $9795 = $9791 + -6.2831853071795898;
                 $9798 = $9795;
                } else {
                 $9796 = $9791 < -3.14159265358979;
                 if (!($9796)) {
                  $9798 = $9791;
                  break;
                 }
                 $9797 = $9791 + 6.2831853071795898;
                 $9798 = $9797;
                }
               } while(0);
               HEAP8[$0>>0] = 0;
               HEAP8[$1>>0] = -1;
               HEAPF64[$this>>3] = $9798;
               HEAPF64[$361>>3] = $9793;
               HEAPF64[$362>>3] = $9792;
               $9799 = +HEAPF64[$this>>3];
               $9800 = (+__Z5IKcosd($9799));
               $9801 = (+__Z5IKsind($9799));
               $9802 = +HEAPF64[$45>>3];
               $9803 = +HEAPF64[$43>>3];
               $9804 = $9800 * $9803;
               $9805 = $9800 * $9802;
               $9806 = $9801 * $9803;
               $9807 = $9806 - $9805;
               $9808 = $9802 * 0.089999999999999996;
               $9809 = $9801 * $9808;
               $9810 = $9809 + -0.21249999999999999;
               $9811 = +HEAPF64[$60>>3];
               $9812 = $9810 - $9811;
               $9813 = +HEAPF64[$47>>3];
               $9814 = $9813 * 1.1000000000000001;
               $9815 = $9812 + $9814;
               $9816 = $9804 * 0.089999999999999996;
               $9817 = $9816 + $9815;
               $9818 = (+__Z5IKabsd($9807));
               $9819 = $9818 > 5.0000000000000004E-6;
               if ($9819) {
                break L604;
               }
               $9820 = +HEAPF64[$76>>3];
               $9821 = +HEAPF64[$75>>3];
               $9822 = $9821 * 0.044999999999999998;
               $9823 = 0.044999999999999998 - $9822;
               $9824 = $9823 - $9804;
               $9825 = $9801 * $9802;
               $9826 = $9824 - $9825;
               $9827 = $9820 * 0.29999999999999999;
               $9828 = $9827 + $9826;
               $9829 = (+__Z5IKabsd($9828));
               $9830 = $9829 > 5.0000000000000004E-6;
               if ($9830) {
                break L604;
               }
               $9831 = (+__Z5IKabsd($9817));
               $9832 = $9831 > 5.0000000000000004E-6;
               if ($9832) {
                break L604;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               break L604;
              }
             } while(0);
             $9617 = +HEAPF64[$7>>3];
             $9618 = (+__Z5IKabsd($9617));
             $9619 = $9618 + 3.14159265358979;
             $9620 = (+__Z6IKfmoddd($9619,6.2831853071795898));
             $9621 = $9620 + -3.14159265358979;
             $9622 = +HEAPF64[$47>>3];
             $9623 = $9622 + -0.84999999999999998;
             $9624 = (+__Z5IKabsd($9621));
             $9625 = $9624 < 9.9999999999999995E-7;
             if (!($9625)) {
              break L604;
             }
             $9626 = +HEAPF64[$60>>3];
             $9627 = 0.72250000000000003 - $9626;
             $9628 = (+__Z5IKabsd($9627));
             $9629 = $9628 < 9.9999999999999995E-7;
             if (!($9629)) {
              break L604;
             }
             $9630 = (+__Z5IKabsd($9623));
             $9631 = $9630 < 9.9999999999999995E-7;
             if (!($9631)) {
              break L604;
             }
             HEAPF64[$184>>3] = 0.0;
             HEAPF64[$183>>3] = 1.0;
             HEAPF64[$3>>3] = 0.0;
             HEAPF64[$24>>3] = 0.0;
             HEAPF64[$23>>3] = 1.0;
             HEAPF64[$22>>3] = 0.0;
             HEAPF64[$76>>3] = 0.0;
             HEAPF64[$75>>3] = 1.0;
             HEAPF64[$7>>3] = 0.0;
             $9632 = +HEAPF64[$43>>3];
             $9633 = (+__Z5IKabsd($9632));
             $9634 = +HEAPF64[$45>>3];
             $9635 = (+__Z5IKabsd($9634));
             $9636 = $9633 + $9635;
             $9637 = (+__Z5IKabsd($9636));
             $9638 = $9637 < 9.9999999999999995E-7;
             if (!($9638)) {
              HEAP16[$j0valid594>>1] = 0;
              HEAP8[$2>>0] = 2;
              $9704 = +HEAPF64[$45>>3];
              $9705 = -$9704;
              $9706 = +HEAPF64[$43>>3];
              __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1412,$9705,$9706,1.9999999999999999E-6);
              $9707 = HEAP8[$352>>0]|0;
              $9708 = ($9707<<24>>24)==(0);
              if ($9708) {
               break L604;
              }
              $9709 = +HEAPF64[$x1412>>3];
              $9710 = -$9709;
              HEAPF64[$j0array591>>3] = $9710;
              $9711 = (+__Z5IKsind($9710));
              HEAPF64[$sj0array593>>3] = $9711;
              $9712 = (+__Z5IKcosd($9710));
              HEAPF64[$cj0array592>>3] = $9712;
              $9713 = 3.14159265358979 - $9709;
              HEAPF64[$353>>3] = $9713;
              $9714 = (+__Z5IKsind($9713));
              HEAPF64[$354>>3] = $9714;
              $9715 = +HEAPF64[$353>>3];
              $9716 = (+__Z5IKcosd($9715));
              HEAPF64[$355>>3] = $9716;
              $9717 = +HEAPF64[$j0array591>>3];
              $9718 = $9717 > 3.14159265358979;
              do {
               if ($9718) {
                $9719 = $9717 + -6.2831853071795898;
                HEAPF64[$j0array591>>3] = $9719;
               } else {
                $9720 = $9717 < -3.14159265358979;
                if (!($9720)) {
                 break;
                }
                $9721 = $9717 + 6.2831853071795898;
                HEAPF64[$j0array591>>3] = $9721;
               }
              } while(0);
              HEAP8[$j0valid594>>0] = 1;
              $9722 = +HEAPF64[$353>>3];
              $9723 = $9722 > 3.14159265358979;
              do {
               if ($9723) {
                $9724 = $9722 + -6.2831853071795898;
                HEAPF64[$353>>3] = $9724;
               } else {
                $9725 = $9722 < -3.14159265358979;
                if (!($9725)) {
                 break;
                }
                $9726 = $9722 + 6.2831853071795898;
                HEAPF64[$353>>3] = $9726;
               }
              } while(0);
              HEAP8[$356>>0] = 1;
              $9727 = HEAP8[$j0valid594>>0]|0;
              $9728 = ($9727<<24>>24)==(0);
              do {
               if (!($9728)) {
                HEAP8[$0>>0] = 0;
                HEAP8[$1>>0] = -1;
                $9729 = HEAP8[$944>>0]|0;
                $9730 = ($9729<<24>>24)==(0);
                do {
                 if (!($9730)) {
                  $9731 = +HEAPF64[$cj0array592>>3];
                  $9732 = +HEAPF64[$945>>3];
                  $9733 = $9731 - $9732;
                  $9734 = (+__Z5IKabsd($9733));
                  $9735 = $9734 < 9.9999999999999995E-7;
                  if (!($9735)) {
                   break;
                  }
                  $9736 = +HEAPF64[$sj0array593>>3];
                  $9737 = +HEAPF64[$946>>3];
                  $9738 = $9736 - $9737;
                  $9739 = (+__Z5IKabsd($9738));
                  $9740 = $9739 < 9.9999999999999995E-7;
                  if (!($9740)) {
                   break;
                  }
                  HEAP8[$944>>0] = 0;
                  HEAP8[$1>>0] = 1;
                 }
                } while(0);
                $9741 = +HEAPF64[$j0array591>>3];
                HEAPF64[$this>>3] = $9741;
                $9742 = +HEAPF64[$cj0array592>>3];
                HEAPF64[$357>>3] = $9742;
                $9743 = +HEAPF64[$sj0array593>>3];
                HEAPF64[$358>>3] = $9743;
                $9744 = +HEAPF64[$this>>3];
                $9745 = (+__Z5IKcosd($9744));
                $9746 = (+__Z5IKsind($9744));
                $9747 = +HEAPF64[$45>>3];
                $9748 = $9746 * $9747;
                $9749 = +HEAPF64[$43>>3];
                $9750 = $9745 * $9749;
                $9751 = -$9748;
                $9752 = $9751 - $9750;
                $9753 = (+__Z5IKabsd($9752));
                $9754 = $9753 > 5.0000000000000004E-6;
                if ($9754) {
                 break;
                }
                $9755 = $9750 * 0.089999999999999996;
                $9756 = $9748 * 0.089999999999999996;
                $9757 = $9756 + $9755;
                $9758 = (+__Z5IKabsd($9757));
                $9759 = $9758 > 5.0000000000000004E-6;
                if ($9759) {
                 break;
                }
                __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               }
              } while(0);
              $9760 = HEAP8[$940>>0]|0;
              $9761 = ($9760<<24>>24)==(0);
              if ($9761) {
               break L604;
              }
              HEAP8[$0>>0] = 1;
              HEAP8[$1>>0] = -1;
              $18608 = +HEAPF64[$941>>3];
              HEAPF64[$this>>3] = $18608;
              $18609 = +HEAPF64[$942>>3];
              HEAPF64[$357>>3] = $18609;
              $18610 = +HEAPF64[$943>>3];
              HEAPF64[$358>>3] = $18610;
              $18611 = +HEAPF64[$this>>3];
              $18612 = (+__Z5IKcosd($18611));
              $18613 = (+__Z5IKsind($18611));
              $18614 = +HEAPF64[$45>>3];
              $18615 = $18613 * $18614;
              $18616 = +HEAPF64[$43>>3];
              $18617 = $18612 * $18616;
              $18618 = -$18615;
              $18619 = $18618 - $18617;
              $18620 = (+__Z5IKabsd($18619));
              $18621 = $18620 > 5.0000000000000004E-6;
              if ($18621) {
               break L604;
              }
              $18622 = $18617 * 0.089999999999999996;
              $18623 = $18615 * 0.089999999999999996;
              $18624 = $18623 + $18622;
              $18625 = (+__Z5IKabsd($18624));
              $18626 = $18625 > 5.0000000000000004E-6;
              if ($18626) {
               break L604;
              }
              __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
              break L604;
             }
             HEAPF64[$184>>3] = 0.0;
             HEAPF64[$183>>3] = 1.0;
             HEAPF64[$3>>3] = 0.0;
             HEAPF64[$24>>3] = 0.0;
             HEAPF64[$23>>3] = 1.0;
             HEAPF64[$22>>3] = 0.0;
             HEAPF64[$76>>3] = 0.0;
             HEAPF64[$75>>3] = 1.0;
             HEAPF64[$7>>3] = 0.0;
             $9639 = +HEAPF64[$60>>3];
             $9640 = +HEAPF64[$47>>3];
             $9641 = $9640 * $9640;
             $9642 = $9639 - $9641;
             $9643 = (+__Z5IKabsd($9642));
             $9644 = $9643 < 9.9999999999999995E-7;
             if ($9644) {
              break L604;
             }
             HEAP16[$j0valid587>>1] = 0;
             HEAP8[$2>>0] = 2;
             $9645 = +HEAPF64[$43>>3];
             $9646 = $9645 * 0.089999999999999996;
             $9647 = +HEAPF64[$45>>3];
             $9648 = $9647 * 0.089999999999999996;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1407,$9646,$9648,1.9999999999999999E-6);
             $9649 = HEAP8[$345>>0]|0;
             $9650 = ($9649<<24>>24)==(0);
             if ($9650) {
              break L604;
             }
             $9651 = +HEAPF64[$x1407>>3];
             $9652 = -$9651;
             HEAPF64[$j0array584>>3] = $9652;
             $9653 = (+__Z5IKsind($9652));
             HEAPF64[$sj0array586>>3] = $9653;
             $9654 = (+__Z5IKcosd($9652));
             HEAPF64[$cj0array585>>3] = $9654;
             $9655 = 3.14159265358979 - $9651;
             HEAPF64[$346>>3] = $9655;
             $9656 = (+__Z5IKsind($9655));
             HEAPF64[$347>>3] = $9656;
             $9657 = +HEAPF64[$346>>3];
             $9658 = (+__Z5IKcosd($9657));
             HEAPF64[$348>>3] = $9658;
             $9659 = +HEAPF64[$j0array584>>3];
             $9660 = $9659 > 3.14159265358979;
             do {
              if ($9660) {
               $9661 = $9659 + -6.2831853071795898;
               HEAPF64[$j0array584>>3] = $9661;
              } else {
               $9662 = $9659 < -3.14159265358979;
               if (!($9662)) {
                break;
               }
               $9663 = $9659 + 6.2831853071795898;
               HEAPF64[$j0array584>>3] = $9663;
              }
             } while(0);
             HEAP8[$j0valid587>>0] = 1;
             $9664 = +HEAPF64[$346>>3];
             $9665 = $9664 > 3.14159265358979;
             do {
              if ($9665) {
               $9666 = $9664 + -6.2831853071795898;
               HEAPF64[$346>>3] = $9666;
              } else {
               $9667 = $9664 < -3.14159265358979;
               if (!($9667)) {
                break;
               }
               $9668 = $9664 + 6.2831853071795898;
               HEAPF64[$346>>3] = $9668;
              }
             } while(0);
             HEAP8[$349>>0] = 1;
             $9669 = HEAP8[$j0valid587>>0]|0;
             $9670 = ($9669<<24>>24)==(0);
             do {
              if (!($9670)) {
               HEAP8[$0>>0] = 0;
               HEAP8[$1>>0] = -1;
               $9671 = HEAP8[$937>>0]|0;
               $9672 = ($9671<<24>>24)==(0);
               do {
                if (!($9672)) {
                 $9673 = +HEAPF64[$cj0array585>>3];
                 $9674 = +HEAPF64[$938>>3];
                 $9675 = $9673 - $9674;
                 $9676 = (+__Z5IKabsd($9675));
                 $9677 = $9676 < 9.9999999999999995E-7;
                 if (!($9677)) {
                  break;
                 }
                 $9678 = +HEAPF64[$sj0array586>>3];
                 $9679 = +HEAPF64[$939>>3];
                 $9680 = $9678 - $9679;
                 $9681 = (+__Z5IKabsd($9680));
                 $9682 = $9681 < 9.9999999999999995E-7;
                 if (!($9682)) {
                  break;
                 }
                 HEAP8[$937>>0] = 0;
                 HEAP8[$1>>0] = 1;
                }
               } while(0);
               $9683 = +HEAPF64[$j0array584>>3];
               HEAPF64[$this>>3] = $9683;
               $9684 = +HEAPF64[$cj0array585>>3];
               HEAPF64[$350>>3] = $9684;
               $9685 = +HEAPF64[$sj0array586>>3];
               HEAPF64[$351>>3] = $9685;
               $9686 = +HEAPF64[$this>>3];
               $9687 = (+__Z5IKcosd($9686));
               $9688 = (+__Z5IKsind($9686));
               $9689 = +HEAPF64[$43>>3];
               $9690 = $9688 * $9689;
               $9691 = +HEAPF64[$45>>3];
               $9692 = -$9691;
               $9693 = $9687 * $9692;
               $9694 = $9690 + $9693;
               $9695 = (+__Z5IKabsd($9694));
               $9696 = $9695 > 5.0000000000000004E-6;
               if ($9696) {
                break;
               }
               $9697 = $9688 * $9692;
               $9698 = $9687 * $9689;
               $9699 = $9697 - $9698;
               $9700 = (+__Z5IKabsd($9699));
               $9701 = $9700 > 5.0000000000000004E-6;
               if ($9701) {
                break;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
              }
             } while(0);
             $9702 = HEAP8[$933>>0]|0;
             $9703 = ($9702<<24>>24)==(0);
             if ($9703) {
              break L604;
             }
             HEAP8[$0>>0] = 1;
             HEAP8[$1>>0] = -1;
             $18627 = +HEAPF64[$934>>3];
             HEAPF64[$this>>3] = $18627;
             $18628 = +HEAPF64[$935>>3];
             HEAPF64[$350>>3] = $18628;
             $18629 = +HEAPF64[$936>>3];
             HEAPF64[$351>>3] = $18629;
             $18630 = +HEAPF64[$this>>3];
             $18631 = (+__Z5IKcosd($18630));
             $18632 = (+__Z5IKsind($18630));
             $18633 = +HEAPF64[$43>>3];
             $18634 = $18632 * $18633;
             $18635 = +HEAPF64[$45>>3];
             $18636 = -$18635;
             $18637 = $18631 * $18636;
             $18638 = $18634 + $18637;
             $18639 = (+__Z5IKabsd($18638));
             $18640 = $18639 > 5.0000000000000004E-6;
             if ($18640) {
              break L604;
             }
             $18641 = $18632 * $18636;
             $18642 = $18631 * $18633;
             $18643 = $18641 - $18642;
             $18644 = (+__Z5IKabsd($18643));
             $18645 = $18644 > 5.0000000000000004E-6;
             if ($18645) {
              break L604;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L604;
            }
           } while(0);
           $9906 = +HEAPF64[$22>>3];
           $9907 = $9906 + -3.14159265358979;
           $9908 = (+__Z5IKabsd($9907));
           $9909 = $9908 + 3.14159265358979;
           $9910 = (+__Z6IKfmoddd($9909,6.2831853071795898));
           $9911 = $9910 + -3.14159265358979;
           $9912 = (+__Z5IKabsd($9911));
           $9913 = $9912 < 9.9999999999999995E-7;
           do {
            if ($9913) {
             $9914 = +HEAPF64[$75>>3];
             $9915 = +HEAPF64[$60>>3];
             $9916 = +HEAPF64[$76>>3];
             $9917 = $9916 * 0.076499999999999999;
             $9918 = $9917 + 0.39655000000000001;
             $9919 = $9918 - $9915;
             $9920 = $9914 * 0.32595000000000002;
             $9921 = $9920 + $9919;
             $9922 = (+__Z5IKabsd($9921));
             $9923 = $9922 < 9.9999999999999995E-7;
             if (!($9923)) {
              break;
             }
             HEAPF64[$184>>3] = 0.0;
             HEAPF64[$183>>3] = 1.0;
             HEAPF64[$3>>3] = 0.0;
             HEAPF64[$24>>3] = 0.0;
             HEAPF64[$23>>3] = -1.0;
             HEAPF64[$22>>3] = 3.14159265358979;
             $9924 = +HEAPF64[$76>>3];
             $9925 = $9924 * 20.0;
             $9926 = +HEAPF64[$43>>3];
             $9927 = $9926 * 3.0;
             $9928 = +HEAPF64[$45>>3];
             $9929 = $9928 * 3.0;
             $9930 = +HEAPF64[$60>>3];
             $9931 = +HEAPF64[$47>>3];
             $9932 = $9931 * $9931;
             $9933 = $9932 - $9930;
             $9934 = +HEAPF64[$75>>3];
             $9935 = (+__Z6IKsignd($9933));
             $9936 = (+__Z5IKabsd($9933));
             $9937 = $9936 < 9.9999999999999995E-7;
             do {
              if (!($9937)) {
               $9938 = $9926 * $9925;
               $9939 = $9927 * $9934;
               $9940 = $9938 - $9939;
               $9941 = $9927 + $9940;
               $9942 = (+__Z5IKabsd($9941));
               $9943 = $9925 * $9928;
               $9944 = $9929 * $9934;
               $9945 = $9943 - $9944;
               $9946 = $9929 + $9945;
               $9947 = (+__Z5IKabsd($9946));
               $9948 = $9942 + $9947;
               $9949 = (+__Z5IKabsd($9948));
               $9950 = $9949 < 9.9999999999999995E-7;
               if ($9950) {
                break;
               }
               $9951 = (+__Z5IKabsd($9935));
               $9952 = $9951 < 9.9999999999999995E-7;
               if ($9952) {
                break;
               }
               HEAP8[$2>>0] = 1;
               $10200 = +HEAPF64[$76>>3];
               $10201 = $10200 * 0.29999999999999999;
               $10202 = +HEAPF64[$43>>3];
               $10203 = $10202 * 0.044999999999999998;
               $10204 = +HEAPF64[$45>>3];
               $10205 = $10204 * 0.044999999999999998;
               $10206 = $10201 * $10204;
               $10207 = +HEAPF64[$75>>3];
               $10208 = -$10207;
               $10209 = $10205 * $10208;
               $10210 = $10206 + $10209;
               $10211 = $10205 + $10210;
               $10212 = $10203 * $10208;
               $10213 = $10202 * $10201;
               $10214 = $10213 + $10212;
               $10215 = $10203 + $10214;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1461,$10211,$10215,1.9999999999999999E-6);
               $10216 = HEAP8[$385>>0]|0;
               $10217 = ($10216<<24>>24)==(0);
               if ($10217) {
                break L604;
               }
               $10218 = +HEAPF64[$60>>3];
               $10219 = +HEAPF64[$47>>3];
               $10220 = $10219 * $10219;
               $10221 = $10220 - $10218;
               $10222 = (+__Z6IKsignd($10221));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1462,$10222,-1);
               $10223 = HEAP8[$386>>0]|0;
               $10224 = ($10223<<24>>24)==(0);
               if ($10224) {
                break L604;
               }
               $10225 = +HEAPF64[$x1461>>3];
               $10226 = $10225 + -1.5707963267949001;
               $10227 = +HEAPF64[$x1462>>3];
               $10228 = $10227 * 1.5707963267949001;
               $10229 = $10226 + $10228;
               $10230 = (+__Z5IKsind($10229));
               $10231 = (+__Z5IKcosd($10229));
               $10232 = $10229 > 3.14159265358979;
               do {
                if ($10232) {
                 $10233 = $10229 + -6.2831853071795898;
                 $10236 = $10233;
                } else {
                 $10234 = $10229 < -3.14159265358979;
                 if (!($10234)) {
                  $10236 = $10229;
                  break;
                 }
                 $10235 = $10229 + 6.2831853071795898;
                 $10236 = $10235;
                }
               } while(0);
               HEAP8[$0>>0] = 0;
               HEAP8[$1>>0] = -1;
               HEAPF64[$this>>3] = $10236;
               HEAPF64[$387>>3] = $10231;
               HEAPF64[$388>>3] = $10230;
               $10237 = +HEAPF64[$this>>3];
               $10238 = (+__Z5IKsind($10237));
               $10239 = (+__Z5IKcosd($10237));
               $10240 = +HEAPF64[$43>>3];
               $10241 = $10239 * $10240;
               $10242 = +HEAPF64[$45>>3];
               $10243 = $10238 * $10242;
               $10244 = $10239 * $10242;
               $10245 = $10238 * $10240;
               $10246 = $10245 - $10244;
               $10247 = +HEAPF64[$60>>3];
               $10248 = -0.21249999999999999 - $10247;
               $10249 = +HEAPF64[$47>>3];
               $10250 = $10249 * 1.1000000000000001;
               $10251 = $10248 + $10250;
               $10252 = $10241 * 0.089999999999999996;
               $10253 = $10251 - $10252;
               $10254 = $10243 * 0.089999999999999996;
               $10255 = $10253 - $10254;
               $10256 = (+__Z5IKabsd($10246));
               $10257 = $10256 > 5.0000000000000004E-6;
               if ($10257) {
                break L604;
               }
               $10258 = +HEAPF64[$76>>3];
               $10259 = +HEAPF64[$75>>3];
               $10260 = $10259 * 0.044999999999999998;
               $10261 = 0.044999999999999998 - $10260;
               $10262 = $10241 + $10261;
               $10263 = $10243 + $10262;
               $10264 = $10258 * 0.29999999999999999;
               $10265 = $10264 + $10263;
               $10266 = (+__Z5IKabsd($10265));
               $10267 = $10266 > 5.0000000000000004E-6;
               if ($10267) {
                break L604;
               }
               $10268 = (+__Z5IKabsd($10255));
               $10269 = $10268 > 5.0000000000000004E-6;
               if ($10269) {
                break L604;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               break L604;
              }
             } while(0);
             HEAPF64[$184>>3] = 0.0;
             HEAPF64[$183>>3] = 1.0;
             HEAPF64[$3>>3] = 0.0;
             HEAPF64[$24>>3] = 0.0;
             HEAPF64[$23>>3] = -1.0;
             HEAPF64[$22>>3] = 3.14159265358979;
             $9953 = +HEAPF64[$47>>3];
             $9954 = $9953 * $9953;
             $9955 = +HEAPF64[$60>>3];
             $9956 = $9955 * 80.0;
             $9957 = $9953 * 88.0;
             $9958 = $9955 - $9954;
             $9959 = +HEAPF64[$45>>3];
             $9960 = $9959 * $9956;
             $9961 = $9957 * $9959;
             $9962 = $9961 - $9960;
             $9963 = $9959 * 17.0;
             $9964 = $9962 - $9963;
             $9965 = (+__Z5IKabsd($9964));
             $9966 = +HEAPF64[$43>>3];
             $9967 = $9956 * $9966;
             $9968 = $9957 * $9966;
             $9969 = $9968 - $9967;
             $9970 = $9966 * 17.0;
             $9971 = $9969 - $9970;
             $9972 = (+__Z5IKabsd($9971));
             $9973 = $9965 + $9972;
             $9974 = (+__Z5IKabsd($9958));
             $9975 = $9974 < 9.9999999999999995E-7;
             do {
              if (!($9975)) {
               $9976 = $9954 * 9.0;
               $9977 = $9955 * 9.0;
               $9978 = $9977 - $9976;
               $9979 = (+__Z6IKsignd($9978));
               $9980 = (+__Z5IKabsd($9979));
               $9981 = $9980 < 9.9999999999999995E-7;
               if ($9981) {
                break;
               }
               $9982 = (+__Z5IKabsd($9973));
               $9983 = $9982 < 9.9999999999999995E-7;
               if ($9983) {
                break;
               }
               HEAP8[$2>>0] = 1;
               $10128 = +HEAPF64[$47>>3];
               $10129 = $10128 * 110.0;
               $10130 = +HEAPF64[$60>>3];
               $10131 = $10130 * 100.0;
               $10132 = +HEAPF64[$45>>3];
               $10133 = $10129 * $10132;
               $10134 = $10132 * 21.25;
               $10135 = $10133 - $10134;
               $10136 = $10132 * $10131;
               $10137 = $10135 - $10136;
               $10138 = +HEAPF64[$43>>3];
               $10139 = $10129 * $10138;
               $10140 = $10131 * $10138;
               $10141 = $10139 - $10140;
               $10142 = $10138 * 21.25;
               $10143 = $10141 - $10142;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1452,$10137,$10143,1.9999999999999999E-6);
               $10144 = HEAP8[$381>>0]|0;
               $10145 = ($10144<<24>>24)==(0);
               if ($10145) {
                break L604;
               }
               $10146 = +HEAPF64[$60>>3];
               $10147 = $10146 * 9.0;
               $10148 = +HEAPF64[$47>>3];
               $10149 = $10148 * $10148;
               $10150 = $10149 * 9.0;
               $10151 = $10147 - $10150;
               $10152 = (+__Z6IKsignd($10151));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1453,$10152,-1);
               $10153 = HEAP8[$382>>0]|0;
               $10154 = ($10153<<24>>24)==(0);
               if ($10154) {
                break L604;
               }
               $10155 = +HEAPF64[$x1452>>3];
               $10156 = $10155 + -1.5707963267949001;
               $10157 = +HEAPF64[$x1453>>3];
               $10158 = $10157 * 1.5707963267949001;
               $10159 = $10156 + $10158;
               $10160 = (+__Z5IKsind($10159));
               $10161 = (+__Z5IKcosd($10159));
               $10162 = $10159 > 3.14159265358979;
               do {
                if ($10162) {
                 $10163 = $10159 + -6.2831853071795898;
                 $10166 = $10163;
                } else {
                 $10164 = $10159 < -3.14159265358979;
                 if (!($10164)) {
                  $10166 = $10159;
                  break;
                 }
                 $10165 = $10159 + 6.2831853071795898;
                 $10166 = $10165;
                }
               } while(0);
               HEAP8[$0>>0] = 0;
               HEAP8[$1>>0] = -1;
               HEAPF64[$this>>3] = $10166;
               HEAPF64[$383>>3] = $10161;
               HEAPF64[$384>>3] = $10160;
               $10167 = +HEAPF64[$this>>3];
               $10168 = (+__Z5IKsind($10167));
               $10169 = (+__Z5IKcosd($10167));
               $10170 = +HEAPF64[$43>>3];
               $10171 = $10169 * $10170;
               $10172 = +HEAPF64[$45>>3];
               $10173 = $10168 * $10172;
               $10174 = $10168 * $10170;
               $10175 = $10169 * $10172;
               $10176 = $10174 - $10175;
               $10177 = +HEAPF64[$60>>3];
               $10178 = -0.21249999999999999 - $10177;
               $10179 = $10173 * 0.089999999999999996;
               $10180 = $10178 - $10179;
               $10181 = $10171 * 0.089999999999999996;
               $10182 = $10180 - $10181;
               $10183 = +HEAPF64[$47>>3];
               $10184 = $10183 * 1.1000000000000001;
               $10185 = $10184 + $10182;
               $10186 = (+__Z5IKabsd($10176));
               $10187 = $10186 > 5.0000000000000004E-6;
               if ($10187) {
                break L604;
               }
               $10188 = +HEAPF64[$76>>3];
               $10189 = +HEAPF64[$75>>3];
               $10190 = $10189 * 0.044999999999999998;
               $10191 = 0.044999999999999998 - $10190;
               $10192 = $10171 + $10191;
               $10193 = $10173 + $10192;
               $10194 = $10188 * 0.29999999999999999;
               $10195 = $10194 + $10193;
               $10196 = (+__Z5IKabsd($10195));
               $10197 = $10196 > 5.0000000000000004E-6;
               if ($10197) {
                break L604;
               }
               $10198 = (+__Z5IKabsd($10185));
               $10199 = $10198 > 5.0000000000000004E-6;
               if ($10199) {
                break L604;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               break L604;
              }
             } while(0);
             $9984 = +HEAPF64[$7>>3];
             $9985 = (+__Z5IKabsd($9984));
             $9986 = $9985 + 3.14159265358979;
             $9987 = (+__Z6IKfmoddd($9986,6.2831853071795898));
             $9988 = $9987 + -3.14159265358979;
             $9989 = +HEAPF64[$47>>3];
             $9990 = $9989 + -0.84999999999999998;
             $9991 = (+__Z5IKabsd($9988));
             $9992 = $9991 < 9.9999999999999995E-7;
             if (!($9992)) {
              break L604;
             }
             $9993 = +HEAPF64[$60>>3];
             $9994 = 0.72250000000000003 - $9993;
             $9995 = (+__Z5IKabsd($9994));
             $9996 = $9995 < 9.9999999999999995E-7;
             if (!($9996)) {
              break L604;
             }
             $9997 = (+__Z5IKabsd($9990));
             $9998 = $9997 < 9.9999999999999995E-7;
             if (!($9998)) {
              break L604;
             }
             HEAPF64[$184>>3] = 0.0;
             HEAPF64[$183>>3] = 1.0;
             HEAPF64[$3>>3] = 0.0;
             HEAPF64[$24>>3] = 0.0;
             HEAPF64[$23>>3] = -1.0;
             HEAPF64[$22>>3] = 3.14159265358979;
             HEAPF64[$76>>3] = 0.0;
             HEAPF64[$75>>3] = 1.0;
             HEAPF64[$7>>3] = 0.0;
             $9999 = +HEAPF64[$43>>3];
             $10000 = (+__Z5IKabsd($9999));
             $10001 = +HEAPF64[$45>>3];
             $10002 = (+__Z5IKabsd($10001));
             $10003 = $10000 + $10002;
             $10004 = (+__Z5IKabsd($10003));
             $10005 = $10004 < 9.9999999999999995E-7;
             if (!($10005)) {
              HEAP16[$j0valid630>>1] = 0;
              HEAP8[$2>>0] = 2;
              $10070 = +HEAPF64[$43>>3];
              $10071 = +HEAPF64[$45>>3];
              __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1447,$10070,$10071,1.9999999999999999E-6);
              $10072 = HEAP8[$374>>0]|0;
              $10073 = ($10072<<24>>24)==(0);
              if ($10073) {
               break L604;
              }
              $10074 = +HEAPF64[$x1447>>3];
              $10075 = -$10074;
              HEAPF64[$j0array627>>3] = $10075;
              $10076 = (+__Z5IKsind($10075));
              HEAPF64[$sj0array629>>3] = $10076;
              $10077 = (+__Z5IKcosd($10075));
              HEAPF64[$cj0array628>>3] = $10077;
              $10078 = 3.14159265358979 - $10074;
              HEAPF64[$375>>3] = $10078;
              $10079 = (+__Z5IKsind($10078));
              HEAPF64[$376>>3] = $10079;
              $10080 = +HEAPF64[$375>>3];
              $10081 = (+__Z5IKcosd($10080));
              HEAPF64[$377>>3] = $10081;
              $10082 = +HEAPF64[$j0array627>>3];
              $10083 = $10082 > 3.14159265358979;
              do {
               if ($10083) {
                $10084 = $10082 + -6.2831853071795898;
                HEAPF64[$j0array627>>3] = $10084;
               } else {
                $10085 = $10082 < -3.14159265358979;
                if (!($10085)) {
                 break;
                }
                $10086 = $10082 + 6.2831853071795898;
                HEAPF64[$j0array627>>3] = $10086;
               }
              } while(0);
              HEAP8[$j0valid630>>0] = 1;
              $10087 = +HEAPF64[$375>>3];
              $10088 = $10087 > 3.14159265358979;
              do {
               if ($10088) {
                $10089 = $10087 + -6.2831853071795898;
                HEAPF64[$375>>3] = $10089;
               } else {
                $10090 = $10087 < -3.14159265358979;
                if (!($10090)) {
                 break;
                }
                $10091 = $10087 + 6.2831853071795898;
                HEAPF64[$375>>3] = $10091;
               }
              } while(0);
              HEAP8[$378>>0] = 1;
              $10092 = HEAP8[$j0valid630>>0]|0;
              $10093 = ($10092<<24>>24)==(0);
              do {
               if (!($10093)) {
                HEAP8[$0>>0] = 0;
                HEAP8[$1>>0] = -1;
                $10094 = HEAP8[$958>>0]|0;
                $10095 = ($10094<<24>>24)==(0);
                do {
                 if (!($10095)) {
                  $10096 = +HEAPF64[$cj0array628>>3];
                  $10097 = +HEAPF64[$959>>3];
                  $10098 = $10096 - $10097;
                  $10099 = (+__Z5IKabsd($10098));
                  $10100 = $10099 < 9.9999999999999995E-7;
                  if (!($10100)) {
                   break;
                  }
                  $10101 = +HEAPF64[$sj0array629>>3];
                  $10102 = +HEAPF64[$960>>3];
                  $10103 = $10101 - $10102;
                  $10104 = (+__Z5IKabsd($10103));
                  $10105 = $10104 < 9.9999999999999995E-7;
                  if (!($10105)) {
                   break;
                  }
                  HEAP8[$958>>0] = 0;
                  HEAP8[$1>>0] = 1;
                 }
                } while(0);
                $10106 = +HEAPF64[$j0array627>>3];
                HEAPF64[$this>>3] = $10106;
                $10107 = +HEAPF64[$cj0array628>>3];
                HEAPF64[$379>>3] = $10107;
                $10108 = +HEAPF64[$sj0array629>>3];
                HEAPF64[$380>>3] = $10108;
                $10109 = +HEAPF64[$this>>3];
                $10110 = (+__Z5IKcosd($10109));
                $10111 = (+__Z5IKsind($10109));
                $10112 = +HEAPF64[$45>>3];
                $10113 = $10110 * $10112;
                $10114 = +HEAPF64[$43>>3];
                $10115 = $10111 * $10114;
                $10116 = $10115 - $10113;
                $10117 = (+__Z5IKabsd($10116));
                $10118 = $10117 > 5.0000000000000004E-6;
                if ($10118) {
                 break;
                }
                $10119 = $10112 * -0.089999999999999996;
                $10120 = $10111 * $10119;
                $10121 = $10114 * -0.089999999999999996;
                $10122 = $10110 * $10121;
                $10123 = $10120 + $10122;
                $10124 = (+__Z5IKabsd($10123));
                $10125 = $10124 > 5.0000000000000004E-6;
                if ($10125) {
                 break;
                }
                __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               }
              } while(0);
              $10126 = HEAP8[$954>>0]|0;
              $10127 = ($10126<<24>>24)==(0);
              if ($10127) {
               break L604;
              }
              HEAP8[$0>>0] = 1;
              HEAP8[$1>>0] = -1;
              $18570 = +HEAPF64[$955>>3];
              HEAPF64[$this>>3] = $18570;
              $18571 = +HEAPF64[$956>>3];
              HEAPF64[$379>>3] = $18571;
              $18572 = +HEAPF64[$957>>3];
              HEAPF64[$380>>3] = $18572;
              $18573 = +HEAPF64[$this>>3];
              $18574 = (+__Z5IKcosd($18573));
              $18575 = (+__Z5IKsind($18573));
              $18576 = +HEAPF64[$45>>3];
              $18577 = $18574 * $18576;
              $18578 = +HEAPF64[$43>>3];
              $18579 = $18575 * $18578;
              $18580 = $18579 - $18577;
              $18581 = (+__Z5IKabsd($18580));
              $18582 = $18581 > 5.0000000000000004E-6;
              if ($18582) {
               break L604;
              }
              $18583 = $18576 * -0.089999999999999996;
              $18584 = $18575 * $18583;
              $18585 = $18578 * -0.089999999999999996;
              $18586 = $18574 * $18585;
              $18587 = $18584 + $18586;
              $18588 = (+__Z5IKabsd($18587));
              $18589 = $18588 > 5.0000000000000004E-6;
              if ($18589) {
               break L604;
              }
              __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
              break L604;
             }
             HEAPF64[$184>>3] = 0.0;
             HEAPF64[$183>>3] = 1.0;
             HEAPF64[$3>>3] = 0.0;
             HEAPF64[$24>>3] = 0.0;
             HEAPF64[$23>>3] = -1.0;
             HEAPF64[$22>>3] = 3.14159265358979;
             HEAPF64[$76>>3] = 0.0;
             HEAPF64[$75>>3] = 1.0;
             HEAPF64[$7>>3] = 0.0;
             $10006 = +HEAPF64[$60>>3];
             $10007 = +HEAPF64[$47>>3];
             $10008 = $10007 * $10007;
             $10009 = $10006 - $10008;
             $10010 = (+__Z5IKabsd($10009));
             $10011 = $10010 < 9.9999999999999995E-7;
             if ($10011) {
              break L604;
             }
             HEAP16[$j0valid623>>1] = 0;
             HEAP8[$2>>0] = 2;
             $10012 = +HEAPF64[$43>>3];
             $10013 = $10012 * -0.089999999999999996;
             $10014 = +HEAPF64[$45>>3];
             $10015 = $10014 * -0.089999999999999996;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1443,$10013,$10015,1.9999999999999999E-6);
             $10016 = HEAP8[$367>>0]|0;
             $10017 = ($10016<<24>>24)==(0);
             if ($10017) {
              break L604;
             }
             $10018 = +HEAPF64[$x1443>>3];
             $10019 = -$10018;
             HEAPF64[$j0array620>>3] = $10019;
             $10020 = (+__Z5IKsind($10019));
             HEAPF64[$sj0array622>>3] = $10020;
             $10021 = (+__Z5IKcosd($10019));
             HEAPF64[$cj0array621>>3] = $10021;
             $10022 = 3.14159265358979 - $10018;
             HEAPF64[$368>>3] = $10022;
             $10023 = (+__Z5IKsind($10022));
             HEAPF64[$369>>3] = $10023;
             $10024 = +HEAPF64[$368>>3];
             $10025 = (+__Z5IKcosd($10024));
             HEAPF64[$370>>3] = $10025;
             $10026 = +HEAPF64[$j0array620>>3];
             $10027 = $10026 > 3.14159265358979;
             do {
              if ($10027) {
               $10028 = $10026 + -6.2831853071795898;
               HEAPF64[$j0array620>>3] = $10028;
              } else {
               $10029 = $10026 < -3.14159265358979;
               if (!($10029)) {
                break;
               }
               $10030 = $10026 + 6.2831853071795898;
               HEAPF64[$j0array620>>3] = $10030;
              }
             } while(0);
             HEAP8[$j0valid623>>0] = 1;
             $10031 = +HEAPF64[$368>>3];
             $10032 = $10031 > 3.14159265358979;
             do {
              if ($10032) {
               $10033 = $10031 + -6.2831853071795898;
               HEAPF64[$368>>3] = $10033;
              } else {
               $10034 = $10031 < -3.14159265358979;
               if (!($10034)) {
                break;
               }
               $10035 = $10031 + 6.2831853071795898;
               HEAPF64[$368>>3] = $10035;
              }
             } while(0);
             HEAP8[$371>>0] = 1;
             $10036 = HEAP8[$j0valid623>>0]|0;
             $10037 = ($10036<<24>>24)==(0);
             do {
              if (!($10037)) {
               HEAP8[$0>>0] = 0;
               HEAP8[$1>>0] = -1;
               $10038 = HEAP8[$951>>0]|0;
               $10039 = ($10038<<24>>24)==(0);
               do {
                if (!($10039)) {
                 $10040 = +HEAPF64[$cj0array621>>3];
                 $10041 = +HEAPF64[$952>>3];
                 $10042 = $10040 - $10041;
                 $10043 = (+__Z5IKabsd($10042));
                 $10044 = $10043 < 9.9999999999999995E-7;
                 if (!($10044)) {
                  break;
                 }
                 $10045 = +HEAPF64[$sj0array622>>3];
                 $10046 = +HEAPF64[$953>>3];
                 $10047 = $10045 - $10046;
                 $10048 = (+__Z5IKabsd($10047));
                 $10049 = $10048 < 9.9999999999999995E-7;
                 if (!($10049)) {
                  break;
                 }
                 HEAP8[$951>>0] = 0;
                 HEAP8[$1>>0] = 1;
                }
               } while(0);
               $10050 = +HEAPF64[$j0array620>>3];
               HEAPF64[$this>>3] = $10050;
               $10051 = +HEAPF64[$cj0array621>>3];
               HEAPF64[$372>>3] = $10051;
               $10052 = +HEAPF64[$sj0array622>>3];
               HEAPF64[$373>>3] = $10052;
               $10053 = +HEAPF64[$this>>3];
               $10054 = (+__Z5IKsind($10053));
               $10055 = (+__Z5IKcosd($10053));
               $10056 = +HEAPF64[$45>>3];
               $10057 = $10054 * $10056;
               $10058 = +HEAPF64[$43>>3];
               $10059 = $10055 * $10058;
               $10060 = $10057 + $10059;
               $10061 = (+__Z5IKabsd($10060));
               $10062 = $10061 > 5.0000000000000004E-6;
               if ($10062) {
                break;
               }
               $10063 = $10055 * $10056;
               $10064 = $10054 * $10058;
               $10065 = $10064 - $10063;
               $10066 = (+__Z5IKabsd($10065));
               $10067 = $10066 > 5.0000000000000004E-6;
               if ($10067) {
                break;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
              }
             } while(0);
             $10068 = HEAP8[$947>>0]|0;
             $10069 = ($10068<<24>>24)==(0);
             if ($10069) {
              break L604;
             }
             HEAP8[$0>>0] = 1;
             HEAP8[$1>>0] = -1;
             $18590 = +HEAPF64[$948>>3];
             HEAPF64[$this>>3] = $18590;
             $18591 = +HEAPF64[$949>>3];
             HEAPF64[$372>>3] = $18591;
             $18592 = +HEAPF64[$950>>3];
             HEAPF64[$373>>3] = $18592;
             $18593 = +HEAPF64[$this>>3];
             $18594 = (+__Z5IKsind($18593));
             $18595 = (+__Z5IKcosd($18593));
             $18596 = +HEAPF64[$45>>3];
             $18597 = $18594 * $18596;
             $18598 = +HEAPF64[$43>>3];
             $18599 = $18595 * $18598;
             $18600 = $18597 + $18599;
             $18601 = (+__Z5IKabsd($18600));
             $18602 = $18601 > 5.0000000000000004E-6;
             if ($18602) {
              break L604;
             }
             $18603 = $18595 * $18596;
             $18604 = $18594 * $18598;
             $18605 = $18604 - $18603;
             $18606 = (+__Z5IKabsd($18605));
             $18607 = $18606 > 5.0000000000000004E-6;
             if ($18607) {
              break L604;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L604;
            }
           } while(0);
           $10270 = +HEAPF64[$22>>3];
           $10271 = $10270 + -1.5707963267949001;
           $10272 = (+__Z5IKabsd($10271));
           $10273 = $10272 + 3.14159265358979;
           $10274 = (+__Z6IKfmoddd($10273,6.2831853071795898));
           $10275 = $10274 + -3.14159265358979;
           $10276 = (+__Z5IKabsd($10275));
           $10277 = $10276 < 9.9999999999999995E-7;
           do {
            if ($10277) {
             $10278 = +HEAPF64[$75>>3];
             $10279 = +HEAPF64[$60>>3];
             $10280 = +HEAPF64[$76>>3];
             $10281 = $10280 * 0.076499999999999999;
             $10282 = $10281 + 0.39655000000000001;
             $10283 = $10282 - $10279;
             $10284 = $10278 * 0.32595000000000002;
             $10285 = $10284 + $10283;
             $10286 = (+__Z5IKabsd($10285));
             $10287 = $10286 < 9.9999999999999995E-7;
             if (!($10287)) {
              break;
             }
             HEAPF64[$184>>3] = 0.0;
             HEAPF64[$183>>3] = 1.0;
             HEAPF64[$3>>3] = 0.0;
             HEAPF64[$24>>3] = 1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$22>>3] = 1.5707963267949001;
             $10288 = +HEAPF64[$76>>3];
             $10289 = $10288 * 20.0;
             $10290 = +HEAPF64[$43>>3];
             $10291 = $10290 * 3.0;
             $10292 = +HEAPF64[$45>>3];
             $10293 = $10292 * 3.0;
             $10294 = +HEAPF64[$60>>3];
             $10295 = +HEAPF64[$47>>3];
             $10296 = $10295 * $10295;
             $10297 = $10296 - $10294;
             $10298 = +HEAPF64[$75>>3];
             $10299 = (+__Z6IKsignd($10297));
             $10300 = (+__Z5IKabsd($10297));
             $10301 = $10300 < 9.9999999999999995E-7;
             do {
              if (!($10301)) {
               $10302 = $10290 * $10289;
               $10303 = $10291 * $10298;
               $10304 = $10302 - $10303;
               $10305 = $10291 + $10304;
               $10306 = (+__Z5IKabsd($10305));
               $10307 = $10293 * $10298;
               $10308 = $10289 * $10292;
               $10309 = $10307 - $10308;
               $10310 = $10309 - $10293;
               $10311 = (+__Z5IKabsd($10310));
               $10312 = $10306 + $10311;
               $10313 = (+__Z5IKabsd($10312));
               $10314 = $10313 < 9.9999999999999995E-7;
               if ($10314) {
                break;
               }
               $10315 = (+__Z5IKabsd($10299));
               $10316 = $10315 < 9.9999999999999995E-7;
               if ($10316) {
                break;
               }
               HEAP8[$2>>0] = 1;
               $10562 = +HEAPF64[$76>>3];
               $10563 = $10562 * 0.29999999999999999;
               $10564 = +HEAPF64[$43>>3];
               $10565 = $10564 * 0.044999999999999998;
               $10566 = +HEAPF64[$45>>3];
               $10567 = $10566 * 0.044999999999999998;
               $10568 = +HEAPF64[$75>>3];
               $10569 = $10565 * $10568;
               $10570 = $10565 - $10569;
               $10571 = $10564 * $10563;
               $10572 = $10571 + $10570;
               $10573 = $10568 * $10567;
               $10574 = $10573 - $10567;
               $10575 = $10563 * $10566;
               $10576 = $10574 - $10575;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1496,$10572,$10576,1.9999999999999999E-6);
               $10577 = HEAP8[$407>>0]|0;
               $10578 = ($10577<<24>>24)==(0);
               if ($10578) {
                break L604;
               }
               $10579 = +HEAPF64[$60>>3];
               $10580 = +HEAPF64[$47>>3];
               $10581 = $10580 * $10580;
               $10582 = $10581 - $10579;
               $10583 = (+__Z6IKsignd($10582));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1497,$10583,-1);
               $10584 = HEAP8[$408>>0]|0;
               $10585 = ($10584<<24>>24)==(0);
               if ($10585) {
                break L604;
               }
               $10586 = +HEAPF64[$x1496>>3];
               $10587 = $10586 + -1.5707963267949001;
               $10588 = +HEAPF64[$x1497>>3];
               $10589 = $10588 * 1.5707963267949001;
               $10590 = $10587 + $10589;
               $10591 = (+__Z5IKsind($10590));
               $10592 = (+__Z5IKcosd($10590));
               $10593 = $10590 > 3.14159265358979;
               do {
                if ($10593) {
                 $10594 = $10590 + -6.2831853071795898;
                 $10597 = $10594;
                } else {
                 $10595 = $10590 < -3.14159265358979;
                 if (!($10595)) {
                  $10597 = $10590;
                  break;
                 }
                 $10596 = $10590 + 6.2831853071795898;
                 $10597 = $10596;
                }
               } while(0);
               HEAP8[$0>>0] = 0;
               HEAP8[$1>>0] = -1;
               HEAPF64[$this>>3] = $10597;
               HEAPF64[$409>>3] = $10592;
               HEAPF64[$410>>3] = $10591;
               $10598 = +HEAPF64[$this>>3];
               $10599 = (+__Z5IKsind($10598));
               $10600 = (+__Z5IKcosd($10598));
               $10601 = +HEAPF64[$43>>3];
               $10602 = $10599 * $10601;
               $10603 = +HEAPF64[$45>>3];
               $10604 = $10600 * $10603;
               $10605 = $10599 * $10603;
               $10606 = $10600 * $10601;
               $10607 = $10606 + $10605;
               $10608 = $10602 * 0.089999999999999996;
               $10609 = -0.21249999999999999 - $10608;
               $10610 = $10604 * 0.089999999999999996;
               $10611 = $10609 + $10610;
               $10612 = +HEAPF64[$60>>3];
               $10613 = $10611 - $10612;
               $10614 = +HEAPF64[$47>>3];
               $10615 = $10614 * 1.1000000000000001;
               $10616 = $10615 + $10613;
               $10617 = (+__Z5IKabsd($10607));
               $10618 = $10617 > 5.0000000000000004E-6;
               if ($10618) {
                break L604;
               }
               $10619 = +HEAPF64[$76>>3];
               $10620 = +HEAPF64[$75>>3];
               $10621 = 0.044999999999999998 - $10604;
               $10622 = $10620 * 0.044999999999999998;
               $10623 = $10621 - $10622;
               $10624 = $10602 + $10623;
               $10625 = $10619 * 0.29999999999999999;
               $10626 = $10625 + $10624;
               $10627 = (+__Z5IKabsd($10626));
               $10628 = $10627 > 5.0000000000000004E-6;
               if ($10628) {
                break L604;
               }
               $10629 = (+__Z5IKabsd($10616));
               $10630 = $10629 > 5.0000000000000004E-6;
               if ($10630) {
                break L604;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               break L604;
              }
             } while(0);
             HEAPF64[$184>>3] = 0.0;
             HEAPF64[$183>>3] = 1.0;
             HEAPF64[$3>>3] = 0.0;
             HEAPF64[$24>>3] = 1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$22>>3] = 1.5707963267949001;
             $10317 = +HEAPF64[$47>>3];
             $10318 = $10317 * $10317;
             $10319 = +HEAPF64[$60>>3];
             $10320 = $10319 * 80.0;
             $10321 = $10317 * 88.0;
             $10322 = $10319 - $10318;
             $10323 = +HEAPF64[$45>>3];
             $10324 = $10323 * 17.0;
             $10325 = $10321 * $10323;
             $10326 = $10324 - $10325;
             $10327 = $10323 * $10320;
             $10328 = $10327 + $10326;
             $10329 = (+__Z5IKabsd($10328));
             $10330 = +HEAPF64[$43>>3];
             $10331 = $10320 * $10330;
             $10332 = $10330 * -17.0;
             $10333 = $10332 - $10331;
             $10334 = $10321 * $10330;
             $10335 = $10334 + $10333;
             $10336 = (+__Z5IKabsd($10335));
             $10337 = $10329 + $10336;
             $10338 = (+__Z5IKabsd($10322));
             $10339 = $10338 < 9.9999999999999995E-7;
             do {
              if (!($10339)) {
               $10340 = $10318 * 9.0;
               $10341 = $10319 * 9.0;
               $10342 = $10341 - $10340;
               $10343 = (+__Z6IKsignd($10342));
               $10344 = (+__Z5IKabsd($10343));
               $10345 = $10344 < 9.9999999999999995E-7;
               if ($10345) {
                break;
               }
               $10346 = (+__Z5IKabsd($10337));
               $10347 = $10346 < 9.9999999999999995E-7;
               if ($10347) {
                break;
               }
               HEAP8[$2>>0] = 1;
               $10490 = +HEAPF64[$47>>3];
               $10491 = $10490 * 110.0;
               $10492 = +HEAPF64[$60>>3];
               $10493 = $10492 * 100.0;
               $10494 = +HEAPF64[$43>>3];
               $10495 = $10494 * $10493;
               $10496 = $10494 * -21.25;
               $10497 = $10496 - $10495;
               $10498 = $10491 * $10494;
               $10499 = $10498 + $10497;
               $10500 = +HEAPF64[$45>>3];
               $10501 = $10493 * $10500;
               $10502 = $10500 * 21.25;
               $10503 = $10501 + $10502;
               $10504 = $10491 * $10500;
               $10505 = $10503 - $10504;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1487,$10499,$10505,1.9999999999999999E-6);
               $10506 = HEAP8[$403>>0]|0;
               $10507 = ($10506<<24>>24)==(0);
               if ($10507) {
                break L604;
               }
               $10508 = +HEAPF64[$60>>3];
               $10509 = $10508 * 9.0;
               $10510 = +HEAPF64[$47>>3];
               $10511 = $10510 * $10510;
               $10512 = $10511 * 9.0;
               $10513 = $10509 - $10512;
               $10514 = (+__Z6IKsignd($10513));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1488,$10514,-1);
               $10515 = HEAP8[$404>>0]|0;
               $10516 = ($10515<<24>>24)==(0);
               if ($10516) {
                break L604;
               }
               $10517 = +HEAPF64[$x1487>>3];
               $10518 = $10517 + -1.5707963267949001;
               $10519 = +HEAPF64[$x1488>>3];
               $10520 = $10519 * 1.5707963267949001;
               $10521 = $10518 + $10520;
               $10522 = (+__Z5IKsind($10521));
               $10523 = (+__Z5IKcosd($10521));
               $10524 = $10521 > 3.14159265358979;
               do {
                if ($10524) {
                 $10525 = $10521 + -6.2831853071795898;
                 $10528 = $10525;
                } else {
                 $10526 = $10521 < -3.14159265358979;
                 if (!($10526)) {
                  $10528 = $10521;
                  break;
                 }
                 $10527 = $10521 + 6.2831853071795898;
                 $10528 = $10527;
                }
               } while(0);
               HEAP8[$0>>0] = 0;
               HEAP8[$1>>0] = -1;
               HEAPF64[$this>>3] = $10528;
               HEAPF64[$405>>3] = $10523;
               HEAPF64[$406>>3] = $10522;
               $10529 = +HEAPF64[$this>>3];
               $10530 = (+__Z5IKsind($10529));
               $10531 = (+__Z5IKcosd($10529));
               $10532 = +HEAPF64[$43>>3];
               $10533 = $10530 * $10532;
               $10534 = +HEAPF64[$45>>3];
               $10535 = $10531 * $10534;
               $10536 = $10530 * $10534;
               $10537 = $10531 * $10532;
               $10538 = $10537 + $10536;
               $10539 = $10535 * 0.089999999999999996;
               $10540 = $10539 + -0.21249999999999999;
               $10541 = $10533 * 0.089999999999999996;
               $10542 = $10540 - $10541;
               $10543 = +HEAPF64[$60>>3];
               $10544 = $10542 - $10543;
               $10545 = +HEAPF64[$47>>3];
               $10546 = $10545 * 1.1000000000000001;
               $10547 = $10546 + $10544;
               $10548 = (+__Z5IKabsd($10538));
               $10549 = $10548 > 5.0000000000000004E-6;
               if ($10549) {
                break L604;
               }
               $10550 = +HEAPF64[$76>>3];
               $10551 = +HEAPF64[$75>>3];
               $10552 = 0.044999999999999998 - $10535;
               $10553 = $10551 * 0.044999999999999998;
               $10554 = $10552 - $10553;
               $10555 = $10533 + $10554;
               $10556 = $10550 * 0.29999999999999999;
               $10557 = $10556 + $10555;
               $10558 = (+__Z5IKabsd($10557));
               $10559 = $10558 > 5.0000000000000004E-6;
               if ($10559) {
                break L604;
               }
               $10560 = (+__Z5IKabsd($10547));
               $10561 = $10560 > 5.0000000000000004E-6;
               if ($10561) {
                break L604;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               break L604;
              }
             } while(0);
             $10348 = +HEAPF64[$7>>3];
             $10349 = (+__Z5IKabsd($10348));
             $10350 = $10349 + 3.14159265358979;
             $10351 = (+__Z6IKfmoddd($10350,6.2831853071795898));
             $10352 = $10351 + -3.14159265358979;
             $10353 = +HEAPF64[$47>>3];
             $10354 = $10353 + -0.84999999999999998;
             $10355 = (+__Z5IKabsd($10352));
             $10356 = $10355 < 9.9999999999999995E-7;
             if (!($10356)) {
              break L604;
             }
             $10357 = +HEAPF64[$60>>3];
             $10358 = 0.72250000000000003 - $10357;
             $10359 = (+__Z5IKabsd($10358));
             $10360 = $10359 < 9.9999999999999995E-7;
             if (!($10360)) {
              break L604;
             }
             $10361 = (+__Z5IKabsd($10354));
             $10362 = $10361 < 9.9999999999999995E-7;
             if (!($10362)) {
              break L604;
             }
             HEAPF64[$184>>3] = 0.0;
             HEAPF64[$183>>3] = 1.0;
             HEAPF64[$3>>3] = 0.0;
             HEAPF64[$24>>3] = 1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$22>>3] = 1.5707963267949001;
             HEAPF64[$76>>3] = 0.0;
             HEAPF64[$75>>3] = 1.0;
             HEAPF64[$7>>3] = 0.0;
             $10363 = +HEAPF64[$43>>3];
             $10364 = (+__Z5IKabsd($10363));
             $10365 = +HEAPF64[$45>>3];
             $10366 = (+__Z5IKabsd($10365));
             $10367 = $10364 + $10366;
             $10368 = (+__Z5IKabsd($10367));
             $10369 = $10368 < 9.9999999999999995E-7;
             if (!($10369)) {
              HEAP16[$j0valid666>>1] = 0;
              HEAP8[$2>>0] = 2;
              $10434 = +HEAPF64[$43>>3];
              $10435 = +HEAPF64[$45>>3];
              __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1480,$10434,$10435,1.9999999999999999E-6);
              $10436 = HEAP8[$396>>0]|0;
              $10437 = ($10436<<24>>24)==(0);
              if ($10437) {
               break L604;
              }
              $10438 = +HEAPF64[$x1480>>3];
              $10439 = -$10438;
              HEAPF64[$j0array663>>3] = $10439;
              $10440 = (+__Z5IKsind($10439));
              HEAPF64[$sj0array665>>3] = $10440;
              $10441 = (+__Z5IKcosd($10439));
              HEAPF64[$cj0array664>>3] = $10441;
              $10442 = 3.14159265358979 - $10438;
              HEAPF64[$397>>3] = $10442;
              $10443 = (+__Z5IKsind($10442));
              HEAPF64[$398>>3] = $10443;
              $10444 = +HEAPF64[$397>>3];
              $10445 = (+__Z5IKcosd($10444));
              HEAPF64[$399>>3] = $10445;
              $10446 = +HEAPF64[$j0array663>>3];
              $10447 = $10446 > 3.14159265358979;
              do {
               if ($10447) {
                $10448 = $10446 + -6.2831853071795898;
                HEAPF64[$j0array663>>3] = $10448;
               } else {
                $10449 = $10446 < -3.14159265358979;
                if (!($10449)) {
                 break;
                }
                $10450 = $10446 + 6.2831853071795898;
                HEAPF64[$j0array663>>3] = $10450;
               }
              } while(0);
              HEAP8[$j0valid666>>0] = 1;
              $10451 = +HEAPF64[$397>>3];
              $10452 = $10451 > 3.14159265358979;
              do {
               if ($10452) {
                $10453 = $10451 + -6.2831853071795898;
                HEAPF64[$397>>3] = $10453;
               } else {
                $10454 = $10451 < -3.14159265358979;
                if (!($10454)) {
                 break;
                }
                $10455 = $10451 + 6.2831853071795898;
                HEAPF64[$397>>3] = $10455;
               }
              } while(0);
              HEAP8[$400>>0] = 1;
              $10456 = HEAP8[$j0valid666>>0]|0;
              $10457 = ($10456<<24>>24)==(0);
              do {
               if (!($10457)) {
                HEAP8[$0>>0] = 0;
                HEAP8[$1>>0] = -1;
                $10458 = HEAP8[$972>>0]|0;
                $10459 = ($10458<<24>>24)==(0);
                do {
                 if (!($10459)) {
                  $10460 = +HEAPF64[$cj0array664>>3];
                  $10461 = +HEAPF64[$973>>3];
                  $10462 = $10460 - $10461;
                  $10463 = (+__Z5IKabsd($10462));
                  $10464 = $10463 < 9.9999999999999995E-7;
                  if (!($10464)) {
                   break;
                  }
                  $10465 = +HEAPF64[$sj0array665>>3];
                  $10466 = +HEAPF64[$974>>3];
                  $10467 = $10465 - $10466;
                  $10468 = (+__Z5IKabsd($10467));
                  $10469 = $10468 < 9.9999999999999995E-7;
                  if (!($10469)) {
                   break;
                  }
                  HEAP8[$972>>0] = 0;
                  HEAP8[$1>>0] = 1;
                 }
                } while(0);
                $10470 = +HEAPF64[$j0array663>>3];
                HEAPF64[$this>>3] = $10470;
                $10471 = +HEAPF64[$cj0array664>>3];
                HEAPF64[$401>>3] = $10471;
                $10472 = +HEAPF64[$sj0array665>>3];
                HEAPF64[$402>>3] = $10472;
                $10473 = +HEAPF64[$this>>3];
                $10474 = (+__Z5IKcosd($10473));
                $10475 = (+__Z5IKsind($10473));
                $10476 = +HEAPF64[$43>>3];
                $10477 = $10475 * $10476;
                $10478 = +HEAPF64[$45>>3];
                $10479 = $10474 * $10478;
                $10480 = $10477 - $10479;
                $10481 = (+__Z5IKabsd($10480));
                $10482 = $10481 > 5.0000000000000004E-6;
                if ($10482) {
                 break;
                }
                $10483 = $10479 * 0.089999999999999996;
                $10484 = $10477 * 0.089999999999999996;
                $10485 = $10483 - $10484;
                $10486 = (+__Z5IKabsd($10485));
                $10487 = $10486 > 5.0000000000000004E-6;
                if ($10487) {
                 break;
                }
                __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               }
              } while(0);
              $10488 = HEAP8[$968>>0]|0;
              $10489 = ($10488<<24>>24)==(0);
              if ($10489) {
               break L604;
              }
              HEAP8[$0>>0] = 1;
              HEAP8[$1>>0] = -1;
              $18534 = +HEAPF64[$969>>3];
              HEAPF64[$this>>3] = $18534;
              $18535 = +HEAPF64[$970>>3];
              HEAPF64[$401>>3] = $18535;
              $18536 = +HEAPF64[$971>>3];
              HEAPF64[$402>>3] = $18536;
              $18537 = +HEAPF64[$this>>3];
              $18538 = (+__Z5IKcosd($18537));
              $18539 = (+__Z5IKsind($18537));
              $18540 = +HEAPF64[$43>>3];
              $18541 = $18539 * $18540;
              $18542 = +HEAPF64[$45>>3];
              $18543 = $18538 * $18542;
              $18544 = $18541 - $18543;
              $18545 = (+__Z5IKabsd($18544));
              $18546 = $18545 > 5.0000000000000004E-6;
              if ($18546) {
               break L604;
              }
              $18547 = $18543 * 0.089999999999999996;
              $18548 = $18541 * 0.089999999999999996;
              $18549 = $18547 - $18548;
              $18550 = (+__Z5IKabsd($18549));
              $18551 = $18550 > 5.0000000000000004E-6;
              if ($18551) {
               break L604;
              }
              __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
              break L604;
             }
             HEAPF64[$184>>3] = 0.0;
             HEAPF64[$183>>3] = 1.0;
             HEAPF64[$3>>3] = 0.0;
             HEAPF64[$24>>3] = 1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$22>>3] = 1.5707963267949001;
             HEAPF64[$76>>3] = 0.0;
             HEAPF64[$75>>3] = 1.0;
             HEAPF64[$7>>3] = 0.0;
             $10370 = +HEAPF64[$60>>3];
             $10371 = +HEAPF64[$47>>3];
             $10372 = $10371 * $10371;
             $10373 = $10370 - $10372;
             $10374 = (+__Z5IKabsd($10373));
             $10375 = $10374 < 9.9999999999999995E-7;
             if ($10375) {
              break L604;
             }
             HEAP16[$j0valid659>>1] = 0;
             HEAP8[$2>>0] = 2;
             $10376 = +HEAPF64[$45>>3];
             $10377 = $10376 * 0.089999999999999996;
             $10378 = +HEAPF64[$43>>3];
             $10379 = $10378 * -0.089999999999999996;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1476,$10377,$10379,1.9999999999999999E-6);
             $10380 = HEAP8[$389>>0]|0;
             $10381 = ($10380<<24>>24)==(0);
             if ($10381) {
              break L604;
             }
             $10382 = +HEAPF64[$x1476>>3];
             $10383 = -$10382;
             HEAPF64[$j0array656>>3] = $10383;
             $10384 = (+__Z5IKsind($10383));
             HEAPF64[$sj0array658>>3] = $10384;
             $10385 = (+__Z5IKcosd($10383));
             HEAPF64[$cj0array657>>3] = $10385;
             $10386 = 3.14159265358979 - $10382;
             HEAPF64[$390>>3] = $10386;
             $10387 = (+__Z5IKsind($10386));
             HEAPF64[$391>>3] = $10387;
             $10388 = +HEAPF64[$390>>3];
             $10389 = (+__Z5IKcosd($10388));
             HEAPF64[$392>>3] = $10389;
             $10390 = +HEAPF64[$j0array656>>3];
             $10391 = $10390 > 3.14159265358979;
             do {
              if ($10391) {
               $10392 = $10390 + -6.2831853071795898;
               HEAPF64[$j0array656>>3] = $10392;
              } else {
               $10393 = $10390 < -3.14159265358979;
               if (!($10393)) {
                break;
               }
               $10394 = $10390 + 6.2831853071795898;
               HEAPF64[$j0array656>>3] = $10394;
              }
             } while(0);
             HEAP8[$j0valid659>>0] = 1;
             $10395 = +HEAPF64[$390>>3];
             $10396 = $10395 > 3.14159265358979;
             do {
              if ($10396) {
               $10397 = $10395 + -6.2831853071795898;
               HEAPF64[$390>>3] = $10397;
              } else {
               $10398 = $10395 < -3.14159265358979;
               if (!($10398)) {
                break;
               }
               $10399 = $10395 + 6.2831853071795898;
               HEAPF64[$390>>3] = $10399;
              }
             } while(0);
             HEAP8[$393>>0] = 1;
             $10400 = HEAP8[$j0valid659>>0]|0;
             $10401 = ($10400<<24>>24)==(0);
             do {
              if (!($10401)) {
               HEAP8[$0>>0] = 0;
               HEAP8[$1>>0] = -1;
               $10402 = HEAP8[$965>>0]|0;
               $10403 = ($10402<<24>>24)==(0);
               do {
                if (!($10403)) {
                 $10404 = +HEAPF64[$cj0array657>>3];
                 $10405 = +HEAPF64[$966>>3];
                 $10406 = $10404 - $10405;
                 $10407 = (+__Z5IKabsd($10406));
                 $10408 = $10407 < 9.9999999999999995E-7;
                 if (!($10408)) {
                  break;
                 }
                 $10409 = +HEAPF64[$sj0array658>>3];
                 $10410 = +HEAPF64[$967>>3];
                 $10411 = $10409 - $10410;
                 $10412 = (+__Z5IKabsd($10411));
                 $10413 = $10412 < 9.9999999999999995E-7;
                 if (!($10413)) {
                  break;
                 }
                 HEAP8[$965>>0] = 0;
                 HEAP8[$1>>0] = 1;
                }
               } while(0);
               $10414 = +HEAPF64[$j0array656>>3];
               HEAPF64[$this>>3] = $10414;
               $10415 = +HEAPF64[$cj0array657>>3];
               HEAPF64[$394>>3] = $10415;
               $10416 = +HEAPF64[$sj0array658>>3];
               HEAPF64[$395>>3] = $10416;
               $10417 = +HEAPF64[$this>>3];
               $10418 = (+__Z5IKsind($10417));
               $10419 = (+__Z5IKcosd($10417));
               $10420 = +HEAPF64[$45>>3];
               $10421 = $10418 * $10420;
               $10422 = +HEAPF64[$43>>3];
               $10423 = $10419 * $10422;
               $10424 = $10421 + $10423;
               $10425 = (+__Z5IKabsd($10424));
               $10426 = $10425 > 5.0000000000000004E-6;
               if ($10426) {
                break;
               }
               $10427 = $10419 * $10420;
               $10428 = $10418 * $10422;
               $10429 = $10428 - $10427;
               $10430 = (+__Z5IKabsd($10429));
               $10431 = $10430 > 5.0000000000000004E-6;
               if ($10431) {
                break;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
              }
             } while(0);
             $10432 = HEAP8[$961>>0]|0;
             $10433 = ($10432<<24>>24)==(0);
             if ($10433) {
              break L604;
             }
             HEAP8[$0>>0] = 1;
             HEAP8[$1>>0] = -1;
             $18552 = +HEAPF64[$962>>3];
             HEAPF64[$this>>3] = $18552;
             $18553 = +HEAPF64[$963>>3];
             HEAPF64[$394>>3] = $18553;
             $18554 = +HEAPF64[$964>>3];
             HEAPF64[$395>>3] = $18554;
             $18555 = +HEAPF64[$this>>3];
             $18556 = (+__Z5IKsind($18555));
             $18557 = (+__Z5IKcosd($18555));
             $18558 = +HEAPF64[$45>>3];
             $18559 = $18556 * $18558;
             $18560 = +HEAPF64[$43>>3];
             $18561 = $18557 * $18560;
             $18562 = $18559 + $18561;
             $18563 = (+__Z5IKabsd($18562));
             $18564 = $18563 > 5.0000000000000004E-6;
             if ($18564) {
              break L604;
             }
             $18565 = $18557 * $18558;
             $18566 = $18556 * $18560;
             $18567 = $18566 - $18565;
             $18568 = (+__Z5IKabsd($18567));
             $18569 = $18568 > 5.0000000000000004E-6;
             if ($18569) {
              break L604;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L604;
            }
           } while(0);
           $10631 = +HEAPF64[$22>>3];
           $10632 = $10631 + 1.5707963267949001;
           $10633 = (+__Z5IKabsd($10632));
           $10634 = $10633 + 3.14159265358979;
           $10635 = (+__Z6IKfmoddd($10634,6.2831853071795898));
           $10636 = $10635 + -3.14159265358979;
           $10637 = (+__Z5IKabsd($10636));
           $10638 = $10637 < 9.9999999999999995E-7;
           do {
            if ($10638) {
             $10639 = +HEAPF64[$75>>3];
             $10640 = +HEAPF64[$60>>3];
             $10641 = +HEAPF64[$76>>3];
             $10642 = $10641 * 0.076499999999999999;
             $10643 = $10642 + 0.39655000000000001;
             $10644 = $10643 - $10640;
             $10645 = $10639 * 0.32595000000000002;
             $10646 = $10645 + $10644;
             $10647 = (+__Z5IKabsd($10646));
             $10648 = $10647 < 9.9999999999999995E-7;
             if (!($10648)) {
              break;
             }
             HEAPF64[$184>>3] = 0.0;
             HEAPF64[$183>>3] = 1.0;
             HEAPF64[$3>>3] = 0.0;
             HEAPF64[$24>>3] = -1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$22>>3] = -1.5707963267949001;
             $10649 = +HEAPF64[$76>>3];
             $10650 = $10649 * 20.0;
             $10651 = +HEAPF64[$43>>3];
             $10652 = $10651 * 3.0;
             $10653 = +HEAPF64[$45>>3];
             $10654 = $10653 * 3.0;
             $10655 = +HEAPF64[$60>>3];
             $10656 = +HEAPF64[$47>>3];
             $10657 = $10656 * $10656;
             $10658 = $10657 - $10655;
             $10659 = +HEAPF64[$75>>3];
             $10660 = (+__Z6IKsignd($10658));
             $10661 = (+__Z5IKabsd($10658));
             $10662 = $10661 < 9.9999999999999995E-7;
             do {
              if (!($10662)) {
               $10663 = $10652 * $10659;
               $10664 = $10663 - $10652;
               $10665 = $10651 * $10650;
               $10666 = $10664 - $10665;
               $10667 = (+__Z5IKabsd($10666));
               $10668 = $10654 * $10659;
               $10669 = $10654 - $10668;
               $10670 = $10650 * $10653;
               $10671 = $10670 + $10669;
               $10672 = (+__Z5IKabsd($10671));
               $10673 = $10667 + $10672;
               $10674 = (+__Z5IKabsd($10673));
               $10675 = $10674 < 9.9999999999999995E-7;
               if ($10675) {
                break;
               }
               $10676 = (+__Z5IKabsd($10660));
               $10677 = $10676 < 9.9999999999999995E-7;
               if ($10677) {
                break;
               }
               HEAP8[$2>>0] = 1;
               $10928 = +HEAPF64[$76>>3];
               $10929 = $10928 * 0.29999999999999999;
               $10930 = +HEAPF64[$43>>3];
               $10931 = $10930 * 0.044999999999999998;
               $10932 = +HEAPF64[$45>>3];
               $10933 = $10932 * 0.044999999999999998;
               $10934 = +HEAPF64[$60>>3];
               $10935 = +HEAPF64[$47>>3];
               $10936 = $10935 * $10935;
               $10937 = $10936 - $10934;
               $10938 = (+__Z6IKsignd($10937));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1530,$10938,-1);
               $10939 = HEAP8[$429>>0]|0;
               $10940 = ($10939<<24>>24)==(0);
               if ($10940) {
                break L604;
               }
               $10941 = +HEAPF64[$75>>3];
               $10942 = $10931 * $10941;
               $10943 = $10942 - $10931;
               $10944 = +HEAPF64[$43>>3];
               $10945 = $10929 * $10944;
               $10946 = $10943 - $10945;
               $10947 = $10933 * $10941;
               $10948 = $10933 - $10947;
               $10949 = +HEAPF64[$45>>3];
               $10950 = $10929 * $10949;
               $10951 = $10948 + $10950;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1531,$10946,$10951,1.9999999999999999E-6);
               $10952 = HEAP8[$430>>0]|0;
               $10953 = ($10952<<24>>24)==(0);
               if ($10953) {
                break L604;
               }
               $10954 = +HEAPF64[$x1530>>3];
               $10955 = $10954 * 1.5707963267949001;
               $10956 = $10955 + -1.5707963267949001;
               $10957 = +HEAPF64[$x1531>>3];
               $10958 = $10957 + $10956;
               $10959 = (+__Z5IKsind($10958));
               $10960 = (+__Z5IKcosd($10958));
               $10961 = $10958 > 3.14159265358979;
               do {
                if ($10961) {
                 $10962 = $10958 + -6.2831853071795898;
                 $10965 = $10962;
                } else {
                 $10963 = $10958 < -3.14159265358979;
                 if (!($10963)) {
                  $10965 = $10958;
                  break;
                 }
                 $10964 = $10958 + 6.2831853071795898;
                 $10965 = $10964;
                }
               } while(0);
               HEAP8[$0>>0] = 0;
               HEAP8[$1>>0] = -1;
               HEAPF64[$this>>3] = $10965;
               HEAPF64[$431>>3] = $10960;
               HEAPF64[$432>>3] = $10959;
               $10966 = +HEAPF64[$this>>3];
               $10967 = (+__Z5IKsind($10966));
               $10968 = (+__Z5IKcosd($10966));
               $10969 = +HEAPF64[$43>>3];
               $10970 = $10967 * $10969;
               $10971 = $10968 * $10969;
               $10972 = +HEAPF64[$45>>3];
               $10973 = -$10972;
               $10974 = $10967 * $10973;
               $10975 = $10974 - $10971;
               $10976 = $10970 * 0.089999999999999996;
               $10977 = $10976 + -0.21249999999999999;
               $10978 = +HEAPF64[$60>>3];
               $10979 = $10977 - $10978;
               $10980 = +HEAPF64[$47>>3];
               $10981 = $10980 * 1.1000000000000001;
               $10982 = $10979 + $10981;
               $10983 = $10972 * -0.089999999999999996;
               $10984 = $10968 * $10983;
               $10985 = $10984 + $10982;
               $10986 = (+__Z5IKabsd($10975));
               $10987 = $10986 > 5.0000000000000004E-6;
               if ($10987) {
                break L604;
               }
               $10988 = +HEAPF64[$76>>3];
               $10989 = +HEAPF64[$75>>3];
               $10990 = $10989 * 0.044999999999999998;
               $10991 = $10990 + -0.044999999999999998;
               $10992 = $10970 + $10991;
               $10993 = $10968 * $10973;
               $10994 = $10993 + $10992;
               $10995 = $10988 * 0.29999999999999999;
               $10996 = $10994 - $10995;
               $10997 = (+__Z5IKabsd($10996));
               $10998 = $10997 > 5.0000000000000004E-6;
               if ($10998) {
                break L604;
               }
               $10999 = (+__Z5IKabsd($10985));
               $11000 = $10999 > 5.0000000000000004E-6;
               if ($11000) {
                break L604;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               break L604;
              }
             } while(0);
             HEAPF64[$184>>3] = 0.0;
             HEAPF64[$183>>3] = 1.0;
             HEAPF64[$3>>3] = 0.0;
             HEAPF64[$24>>3] = -1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$22>>3] = -1.5707963267949001;
             $10678 = +HEAPF64[$47>>3];
             $10679 = $10678 * $10678;
             $10680 = +HEAPF64[$60>>3];
             $10681 = $10680 * 80.0;
             $10682 = $10678 * 88.0;
             $10683 = $10679 - $10680;
             $10684 = +HEAPF64[$45>>3];
             $10685 = $10684 * 17.0;
             $10686 = $10684 * $10681;
             $10687 = $10685 + $10686;
             $10688 = $10682 * $10684;
             $10689 = $10687 - $10688;
             $10690 = (+__Z5IKabsd($10689));
             $10691 = +HEAPF64[$43>>3];
             $10692 = $10681 * $10691;
             $10693 = $10682 * $10691;
             $10694 = $10693 - $10692;
             $10695 = $10691 * 17.0;
             $10696 = $10694 - $10695;
             $10697 = (+__Z5IKabsd($10696));
             $10698 = $10690 + $10697;
             $10699 = (+__Z5IKabsd($10683));
             $10700 = $10699 < 9.9999999999999995E-7;
             do {
              if (!($10700)) {
               $10701 = $10680 * 9.0;
               $10702 = $10679 * 9.0;
               $10703 = $10702 - $10701;
               $10704 = (+__Z6IKsignd($10703));
               $10705 = (+__Z5IKabsd($10704));
               $10706 = $10705 < 9.9999999999999995E-7;
               if ($10706) {
                break;
               }
               $10707 = (+__Z5IKabsd($10698));
               $10708 = $10707 < 9.9999999999999995E-7;
               if ($10708) {
                break;
               }
               HEAP8[$2>>0] = 1;
               $10856 = +HEAPF64[$47>>3];
               $10857 = $10856 * 110.0;
               $10858 = +HEAPF64[$60>>3];
               $10859 = $10858 * 100.0;
               $10860 = $10858 * 9.0;
               $10861 = $10856 * $10856;
               $10862 = $10861 * 9.0;
               $10863 = $10862 - $10860;
               $10864 = (+__Z6IKsignd($10863));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1521,$10864,-1);
               $10865 = HEAP8[$425>>0]|0;
               $10866 = ($10865<<24>>24)==(0);
               if ($10866) {
                break L604;
               }
               $10867 = +HEAPF64[$43>>3];
               $10868 = $10867 * -21.25;
               $10869 = $10859 * $10867;
               $10870 = $10868 - $10869;
               $10871 = $10857 * $10867;
               $10872 = $10871 + $10870;
               $10873 = +HEAPF64[$45>>3];
               $10874 = $10873 * 21.25;
               $10875 = $10857 * $10873;
               $10876 = $10874 - $10875;
               $10877 = $10859 * $10873;
               $10878 = $10877 + $10876;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1522,$10872,$10878,1.9999999999999999E-6);
               $10879 = HEAP8[$426>>0]|0;
               $10880 = ($10879<<24>>24)==(0);
               if ($10880) {
                break L604;
               }
               $10881 = +HEAPF64[$x1521>>3];
               $10882 = $10881 * 1.5707963267949001;
               $10883 = $10882 + -1.5707963267949001;
               $10884 = +HEAPF64[$x1522>>3];
               $10885 = $10884 + $10883;
               $10886 = (+__Z5IKsind($10885));
               $10887 = (+__Z5IKcosd($10885));
               $10888 = $10885 > 3.14159265358979;
               do {
                if ($10888) {
                 $10889 = $10885 + -6.2831853071795898;
                 $10892 = $10889;
                } else {
                 $10890 = $10885 < -3.14159265358979;
                 if (!($10890)) {
                  $10892 = $10885;
                  break;
                 }
                 $10891 = $10885 + 6.2831853071795898;
                 $10892 = $10891;
                }
               } while(0);
               HEAP8[$0>>0] = 0;
               HEAP8[$1>>0] = -1;
               HEAPF64[$this>>3] = $10892;
               HEAPF64[$427>>3] = $10887;
               HEAPF64[$428>>3] = $10886;
               $10893 = +HEAPF64[$this>>3];
               $10894 = (+__Z5IKsind($10893));
               $10895 = (+__Z5IKcosd($10893));
               $10896 = +HEAPF64[$43>>3];
               $10897 = $10894 * $10896;
               $10898 = $10895 * $10896;
               $10899 = +HEAPF64[$45>>3];
               $10900 = -$10899;
               $10901 = $10894 * $10900;
               $10902 = $10901 - $10898;
               $10903 = $10897 * 0.089999999999999996;
               $10904 = $10903 + -0.21249999999999999;
               $10905 = +HEAPF64[$60>>3];
               $10906 = $10904 - $10905;
               $10907 = +HEAPF64[$47>>3];
               $10908 = $10907 * 1.1000000000000001;
               $10909 = $10906 + $10908;
               $10910 = $10899 * -0.089999999999999996;
               $10911 = $10895 * $10910;
               $10912 = $10911 + $10909;
               $10913 = (+__Z5IKabsd($10902));
               $10914 = $10913 > 5.0000000000000004E-6;
               if ($10914) {
                break L604;
               }
               $10915 = +HEAPF64[$76>>3];
               $10916 = +HEAPF64[$75>>3];
               $10917 = $10916 * 0.044999999999999998;
               $10918 = $10917 + -0.044999999999999998;
               $10919 = $10897 + $10918;
               $10920 = $10895 * $10900;
               $10921 = $10920 + $10919;
               $10922 = $10915 * 0.29999999999999999;
               $10923 = $10921 - $10922;
               $10924 = (+__Z5IKabsd($10923));
               $10925 = $10924 > 5.0000000000000004E-6;
               if ($10925) {
                break L604;
               }
               $10926 = (+__Z5IKabsd($10912));
               $10927 = $10926 > 5.0000000000000004E-6;
               if ($10927) {
                break L604;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               break L604;
              }
             } while(0);
             $10709 = +HEAPF64[$7>>3];
             $10710 = (+__Z5IKabsd($10709));
             $10711 = $10710 + 3.14159265358979;
             $10712 = (+__Z6IKfmoddd($10711,6.2831853071795898));
             $10713 = $10712 + -3.14159265358979;
             $10714 = +HEAPF64[$47>>3];
             $10715 = $10714 + -0.84999999999999998;
             $10716 = (+__Z5IKabsd($10713));
             $10717 = $10716 < 9.9999999999999995E-7;
             if (!($10717)) {
              break L604;
             }
             $10718 = +HEAPF64[$60>>3];
             $10719 = 0.72250000000000003 - $10718;
             $10720 = (+__Z5IKabsd($10719));
             $10721 = $10720 < 9.9999999999999995E-7;
             if (!($10721)) {
              break L604;
             }
             $10722 = (+__Z5IKabsd($10715));
             $10723 = $10722 < 9.9999999999999995E-7;
             if (!($10723)) {
              break L604;
             }
             HEAPF64[$184>>3] = 0.0;
             HEAPF64[$183>>3] = 1.0;
             HEAPF64[$3>>3] = 0.0;
             HEAPF64[$24>>3] = -1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$22>>3] = -1.5707963267949001;
             HEAPF64[$76>>3] = 0.0;
             HEAPF64[$75>>3] = 1.0;
             HEAPF64[$7>>3] = 0.0;
             $10724 = +HEAPF64[$43>>3];
             $10725 = (+__Z5IKabsd($10724));
             $10726 = +HEAPF64[$45>>3];
             $10727 = (+__Z5IKabsd($10726));
             $10728 = $10725 + $10727;
             $10729 = (+__Z5IKabsd($10728));
             $10730 = $10729 < 9.9999999999999995E-7;
             if (!($10730)) {
              HEAP16[$j0valid702>>1] = 0;
              HEAP8[$2>>0] = 2;
              $10796 = +HEAPF64[$45>>3];
              $10797 = -$10796;
              $10798 = +HEAPF64[$43>>3];
              __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1516,$10797,$10798,1.9999999999999999E-6);
              $10799 = HEAP8[$418>>0]|0;
              $10800 = ($10799<<24>>24)==(0);
              if ($10800) {
               break L604;
              }
              $10801 = +HEAPF64[$x1516>>3];
              $10802 = -$10801;
              HEAPF64[$j0array699>>3] = $10802;
              $10803 = (+__Z5IKsind($10802));
              HEAPF64[$sj0array701>>3] = $10803;
              $10804 = (+__Z5IKcosd($10802));
              HEAPF64[$cj0array700>>3] = $10804;
              $10805 = 3.14159265358979 - $10801;
              HEAPF64[$419>>3] = $10805;
              $10806 = (+__Z5IKsind($10805));
              HEAPF64[$420>>3] = $10806;
              $10807 = +HEAPF64[$419>>3];
              $10808 = (+__Z5IKcosd($10807));
              HEAPF64[$421>>3] = $10808;
              $10809 = +HEAPF64[$j0array699>>3];
              $10810 = $10809 > 3.14159265358979;
              do {
               if ($10810) {
                $10811 = $10809 + -6.2831853071795898;
                HEAPF64[$j0array699>>3] = $10811;
               } else {
                $10812 = $10809 < -3.14159265358979;
                if (!($10812)) {
                 break;
                }
                $10813 = $10809 + 6.2831853071795898;
                HEAPF64[$j0array699>>3] = $10813;
               }
              } while(0);
              HEAP8[$j0valid702>>0] = 1;
              $10814 = +HEAPF64[$419>>3];
              $10815 = $10814 > 3.14159265358979;
              do {
               if ($10815) {
                $10816 = $10814 + -6.2831853071795898;
                HEAPF64[$419>>3] = $10816;
               } else {
                $10817 = $10814 < -3.14159265358979;
                if (!($10817)) {
                 break;
                }
                $10818 = $10814 + 6.2831853071795898;
                HEAPF64[$419>>3] = $10818;
               }
              } while(0);
              HEAP8[$422>>0] = 1;
              $10819 = HEAP8[$j0valid702>>0]|0;
              $10820 = ($10819<<24>>24)==(0);
              do {
               if (!($10820)) {
                HEAP8[$0>>0] = 0;
                HEAP8[$1>>0] = -1;
                $10821 = HEAP8[$986>>0]|0;
                $10822 = ($10821<<24>>24)==(0);
                do {
                 if (!($10822)) {
                  $10823 = +HEAPF64[$cj0array700>>3];
                  $10824 = +HEAPF64[$987>>3];
                  $10825 = $10823 - $10824;
                  $10826 = (+__Z5IKabsd($10825));
                  $10827 = $10826 < 9.9999999999999995E-7;
                  if (!($10827)) {
                   break;
                  }
                  $10828 = +HEAPF64[$sj0array701>>3];
                  $10829 = +HEAPF64[$988>>3];
                  $10830 = $10828 - $10829;
                  $10831 = (+__Z5IKabsd($10830));
                  $10832 = $10831 < 9.9999999999999995E-7;
                  if (!($10832)) {
                   break;
                  }
                  HEAP8[$986>>0] = 0;
                  HEAP8[$1>>0] = 1;
                 }
                } while(0);
                $10833 = +HEAPF64[$j0array699>>3];
                HEAPF64[$this>>3] = $10833;
                $10834 = +HEAPF64[$cj0array700>>3];
                HEAPF64[$423>>3] = $10834;
                $10835 = +HEAPF64[$sj0array701>>3];
                HEAPF64[$424>>3] = $10835;
                $10836 = +HEAPF64[$this>>3];
                $10837 = (+__Z5IKsind($10836));
                $10838 = (+__Z5IKcosd($10836));
                $10839 = +HEAPF64[$45>>3];
                $10840 = $10837 * $10839;
                $10841 = +HEAPF64[$43>>3];
                $10842 = $10838 * $10841;
                $10843 = -$10842;
                $10844 = $10843 - $10840;
                $10845 = (+__Z5IKabsd($10844));
                $10846 = $10845 > 5.0000000000000004E-6;
                if ($10846) {
                 break;
                }
                $10847 = $10839 * -0.089999999999999996;
                $10848 = $10838 * $10847;
                $10849 = $10841 * 0.089999999999999996;
                $10850 = $10837 * $10849;
                $10851 = $10848 + $10850;
                $10852 = (+__Z5IKabsd($10851));
                $10853 = $10852 > 5.0000000000000004E-6;
                if ($10853) {
                 break;
                }
                __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               }
              } while(0);
              $10854 = HEAP8[$982>>0]|0;
              $10855 = ($10854<<24>>24)==(0);
              if ($10855) {
               break L604;
              }
              HEAP8[$0>>0] = 1;
              HEAP8[$1>>0] = -1;
              $18494 = +HEAPF64[$983>>3];
              HEAPF64[$this>>3] = $18494;
              $18495 = +HEAPF64[$984>>3];
              HEAPF64[$423>>3] = $18495;
              $18496 = +HEAPF64[$985>>3];
              HEAPF64[$424>>3] = $18496;
              $18497 = +HEAPF64[$this>>3];
              $18498 = (+__Z5IKsind($18497));
              $18499 = (+__Z5IKcosd($18497));
              $18500 = +HEAPF64[$45>>3];
              $18501 = $18498 * $18500;
              $18502 = +HEAPF64[$43>>3];
              $18503 = $18499 * $18502;
              $18504 = -$18503;
              $18505 = $18504 - $18501;
              $18506 = (+__Z5IKabsd($18505));
              $18507 = $18506 > 5.0000000000000004E-6;
              if ($18507) {
               break L604;
              }
              $18508 = $18500 * -0.089999999999999996;
              $18509 = $18499 * $18508;
              $18510 = $18502 * 0.089999999999999996;
              $18511 = $18498 * $18510;
              $18512 = $18509 + $18511;
              $18513 = (+__Z5IKabsd($18512));
              $18514 = $18513 > 5.0000000000000004E-6;
              if ($18514) {
               break L604;
              }
              __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
              break L604;
             }
             HEAPF64[$184>>3] = 0.0;
             HEAPF64[$183>>3] = 1.0;
             HEAPF64[$3>>3] = 0.0;
             HEAPF64[$24>>3] = -1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$22>>3] = -1.5707963267949001;
             HEAPF64[$76>>3] = 0.0;
             HEAPF64[$75>>3] = 1.0;
             HEAPF64[$7>>3] = 0.0;
             $10731 = +HEAPF64[$60>>3];
             $10732 = +HEAPF64[$47>>3];
             $10733 = $10732 * $10732;
             $10734 = $10731 - $10733;
             $10735 = (+__Z5IKabsd($10734));
             $10736 = $10735 < 9.9999999999999995E-7;
             if ($10736) {
              break L604;
             }
             HEAP16[$j0valid695>>1] = 0;
             HEAP8[$2>>0] = 2;
             $10737 = +HEAPF64[$45>>3];
             $10738 = $10737 * -0.089999999999999996;
             $10739 = +HEAPF64[$43>>3];
             $10740 = $10739 * 0.089999999999999996;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1511,$10738,$10740,1.9999999999999999E-6);
             $10741 = HEAP8[$411>>0]|0;
             $10742 = ($10741<<24>>24)==(0);
             if ($10742) {
              break L604;
             }
             $10743 = +HEAPF64[$x1511>>3];
             $10744 = -$10743;
             HEAPF64[$j0array692>>3] = $10744;
             $10745 = (+__Z5IKsind($10744));
             HEAPF64[$sj0array694>>3] = $10745;
             $10746 = (+__Z5IKcosd($10744));
             HEAPF64[$cj0array693>>3] = $10746;
             $10747 = 3.14159265358979 - $10743;
             HEAPF64[$412>>3] = $10747;
             $10748 = (+__Z5IKsind($10747));
             HEAPF64[$413>>3] = $10748;
             $10749 = +HEAPF64[$412>>3];
             $10750 = (+__Z5IKcosd($10749));
             HEAPF64[$414>>3] = $10750;
             $10751 = +HEAPF64[$j0array692>>3];
             $10752 = $10751 > 3.14159265358979;
             do {
              if ($10752) {
               $10753 = $10751 + -6.2831853071795898;
               HEAPF64[$j0array692>>3] = $10753;
              } else {
               $10754 = $10751 < -3.14159265358979;
               if (!($10754)) {
                break;
               }
               $10755 = $10751 + 6.2831853071795898;
               HEAPF64[$j0array692>>3] = $10755;
              }
             } while(0);
             HEAP8[$j0valid695>>0] = 1;
             $10756 = +HEAPF64[$412>>3];
             $10757 = $10756 > 3.14159265358979;
             do {
              if ($10757) {
               $10758 = $10756 + -6.2831853071795898;
               HEAPF64[$412>>3] = $10758;
              } else {
               $10759 = $10756 < -3.14159265358979;
               if (!($10759)) {
                break;
               }
               $10760 = $10756 + 6.2831853071795898;
               HEAPF64[$412>>3] = $10760;
              }
             } while(0);
             HEAP8[$415>>0] = 1;
             $10761 = HEAP8[$j0valid695>>0]|0;
             $10762 = ($10761<<24>>24)==(0);
             do {
              if (!($10762)) {
               HEAP8[$0>>0] = 0;
               HEAP8[$1>>0] = -1;
               $10763 = HEAP8[$979>>0]|0;
               $10764 = ($10763<<24>>24)==(0);
               do {
                if (!($10764)) {
                 $10765 = +HEAPF64[$cj0array693>>3];
                 $10766 = +HEAPF64[$980>>3];
                 $10767 = $10765 - $10766;
                 $10768 = (+__Z5IKabsd($10767));
                 $10769 = $10768 < 9.9999999999999995E-7;
                 if (!($10769)) {
                  break;
                 }
                 $10770 = +HEAPF64[$sj0array694>>3];
                 $10771 = +HEAPF64[$981>>3];
                 $10772 = $10770 - $10771;
                 $10773 = (+__Z5IKabsd($10772));
                 $10774 = $10773 < 9.9999999999999995E-7;
                 if (!($10774)) {
                  break;
                 }
                 HEAP8[$979>>0] = 0;
                 HEAP8[$1>>0] = 1;
                }
               } while(0);
               $10775 = +HEAPF64[$j0array692>>3];
               HEAPF64[$this>>3] = $10775;
               $10776 = +HEAPF64[$cj0array693>>3];
               HEAPF64[$416>>3] = $10776;
               $10777 = +HEAPF64[$sj0array694>>3];
               HEAPF64[$417>>3] = $10777;
               $10778 = +HEAPF64[$this>>3];
               $10779 = (+__Z5IKcosd($10778));
               $10780 = (+__Z5IKsind($10778));
               $10781 = +HEAPF64[$45>>3];
               $10782 = -$10781;
               $10783 = $10779 * $10782;
               $10784 = +HEAPF64[$43>>3];
               $10785 = $10780 * $10784;
               $10786 = $10783 + $10785;
               $10787 = (+__Z5IKabsd($10786));
               $10788 = $10787 > 5.0000000000000004E-6;
               if ($10788) {
                break;
               }
               $10789 = $10780 * $10782;
               $10790 = $10779 * $10784;
               $10791 = $10789 - $10790;
               $10792 = (+__Z5IKabsd($10791));
               $10793 = $10792 > 5.0000000000000004E-6;
               if ($10793) {
                break;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
              }
             } while(0);
             $10794 = HEAP8[$975>>0]|0;
             $10795 = ($10794<<24>>24)==(0);
             if ($10795) {
              break L604;
             }
             HEAP8[$0>>0] = 1;
             HEAP8[$1>>0] = -1;
             $18515 = +HEAPF64[$976>>3];
             HEAPF64[$this>>3] = $18515;
             $18516 = +HEAPF64[$977>>3];
             HEAPF64[$416>>3] = $18516;
             $18517 = +HEAPF64[$978>>3];
             HEAPF64[$417>>3] = $18517;
             $18518 = +HEAPF64[$this>>3];
             $18519 = (+__Z5IKcosd($18518));
             $18520 = (+__Z5IKsind($18518));
             $18521 = +HEAPF64[$45>>3];
             $18522 = -$18521;
             $18523 = $18519 * $18522;
             $18524 = +HEAPF64[$43>>3];
             $18525 = $18520 * $18524;
             $18526 = $18523 + $18525;
             $18527 = (+__Z5IKabsd($18526));
             $18528 = $18527 > 5.0000000000000004E-6;
             if ($18528) {
              break L604;
             }
             $18529 = $18520 * $18522;
             $18530 = $18519 * $18524;
             $18531 = $18529 - $18530;
             $18532 = (+__Z5IKabsd($18531));
             $18533 = $18532 > 5.0000000000000004E-6;
             if ($18533) {
              break L604;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L604;
            }
           } while(0);
           $11001 = +HEAPF64[$7>>3];
           $11002 = (+__Z5IKabsd($11001));
           $11003 = $11002 + 3.14159265358979;
           $11004 = (+__Z6IKfmoddd($11003,6.2831853071795898));
           $11005 = $11004 + -3.14159265358979;
           $11006 = +HEAPF64[$47>>3];
           $11007 = $11006 + -0.84999999999999998;
           $11008 = (+__Z5IKabsd($11005));
           $11009 = $11008 < 9.9999999999999995E-7;
           if (!($11009)) {
            break L604;
           }
           $11010 = +HEAPF64[$60>>3];
           $11011 = 0.72250000000000003 - $11010;
           $11012 = (+__Z5IKabsd($11011));
           $11013 = $11012 < 9.9999999999999995E-7;
           if (!($11013)) {
            break L604;
           }
           $11014 = (+__Z5IKabsd($11007));
           $11015 = $11014 < 9.9999999999999995E-7;
           if (!($11015)) {
            break L604;
           }
           HEAPF64[$184>>3] = 0.0;
           HEAPF64[$183>>3] = 1.0;
           HEAPF64[$3>>3] = 0.0;
           HEAPF64[$76>>3] = 0.0;
           HEAPF64[$75>>3] = 1.0;
           HEAPF64[$7>>3] = 0.0;
           $11016 = +HEAPF64[$43>>3];
           $11017 = (+__Z5IKabsd($11016));
           $11018 = +HEAPF64[$45>>3];
           $11019 = (+__Z5IKabsd($11018));
           $11020 = $11017 + $11019;
           $11021 = (+__Z5IKabsd($11020));
           $11022 = $11021 < 9.9999999999999995E-7;
           if (!($11022)) {
            HEAP16[$j0valid742>>1] = 0;
            HEAP8[$2>>0] = 2;
            $11262 = +HEAPF64[$45>>3];
            $11263 = -$11262;
            $11264 = +HEAPF64[$43>>3];
            __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1557,$11263,$11264,1.9999999999999999E-6);
            $11265 = HEAP8[$447>>0]|0;
            $11266 = ($11265<<24>>24)==(0);
            if ($11266) {
             break L604;
            }
            $11267 = +HEAPF64[$x1557>>3];
            $11268 = -$11267;
            HEAPF64[$j0array739>>3] = $11268;
            $11269 = (+__Z5IKsind($11268));
            HEAPF64[$sj0array741>>3] = $11269;
            $11270 = (+__Z5IKcosd($11268));
            HEAPF64[$cj0array740>>3] = $11270;
            $11271 = 3.14159265358979 - $11267;
            HEAPF64[$448>>3] = $11271;
            $11272 = (+__Z5IKsind($11271));
            HEAPF64[$449>>3] = $11272;
            $11273 = +HEAPF64[$448>>3];
            $11274 = (+__Z5IKcosd($11273));
            HEAPF64[$450>>3] = $11274;
            $11275 = +HEAPF64[$j0array739>>3];
            $11276 = $11275 > 3.14159265358979;
            do {
             if ($11276) {
              $11277 = $11275 + -6.2831853071795898;
              HEAPF64[$j0array739>>3] = $11277;
             } else {
              $11278 = $11275 < -3.14159265358979;
              if (!($11278)) {
               break;
              }
              $11279 = $11275 + 6.2831853071795898;
              HEAPF64[$j0array739>>3] = $11279;
             }
            } while(0);
            HEAP8[$j0valid742>>0] = 1;
            $11280 = +HEAPF64[$448>>3];
            $11281 = $11280 > 3.14159265358979;
            do {
             if ($11281) {
              $11282 = $11280 + -6.2831853071795898;
              HEAPF64[$448>>3] = $11282;
             } else {
              $11283 = $11280 < -3.14159265358979;
              if (!($11283)) {
               break;
              }
              $11284 = $11280 + 6.2831853071795898;
              HEAPF64[$448>>3] = $11284;
             }
            } while(0);
            HEAP8[$451>>0] = 1;
            $ij0743$01441 = 0;
            while(1) {
             $11285 = (($j0valid742) + ($ij0743$01441)|0);
             $11286 = HEAP8[$11285>>0]|0;
             $11287 = ($11286<<24>>24)==(0);
             do {
              if (!($11287)) {
               $11288 = $ij0743$01441&255;
               HEAP8[$0>>0] = $11288;
               HEAP8[$1>>0] = -1;
               $iij0744$01437 = (($ij0743$01441) + 1)|0;
               $11289 = ($iij0744$01437|0)<(2);
               do {
                if ($11289) {
                 $11290 = (($sj0array741) + ($ij0743$01441<<3)|0);
                 $11291 = (($j0valid742) + ($iij0744$01437)|0);
                 $11292 = HEAP8[$11291>>0]|0;
                 $11293 = ($11292<<24>>24)==(0);
                 if ($11293) {
                  break;
                 }
                 $11294 = (($cj0array740) + ($ij0743$01441<<3)|0);
                 $11295 = +HEAPF64[$11294>>3];
                 $11296 = (($cj0array740) + ($iij0744$01437<<3)|0);
                 $11297 = +HEAPF64[$11296>>3];
                 $11298 = $11295 - $11297;
                 $11299 = (+__Z5IKabsd($11298));
                 $11300 = $11299 < 9.9999999999999995E-7;
                 if (!($11300)) {
                  break;
                 }
                 $11301 = +HEAPF64[$11290>>3];
                 $11302 = (($sj0array741) + ($iij0744$01437<<3)|0);
                 $11303 = +HEAPF64[$11302>>3];
                 $11304 = $11301 - $11303;
                 $11305 = (+__Z5IKabsd($11304));
                 $11306 = $11305 < 9.9999999999999995E-7;
                 if (!($11306)) {
                  break;
                 }
                 HEAP8[$11291>>0] = 0;
                 $11307 = $iij0744$01437&255;
                 HEAP8[$1>>0] = $11307;
                }
               } while(0);
               $11308 = (($j0array739) + ($ij0743$01441<<3)|0);
               $11309 = +HEAPF64[$11308>>3];
               HEAPF64[$this>>3] = $11309;
               $11310 = (($cj0array740) + ($ij0743$01441<<3)|0);
               $11311 = +HEAPF64[$11310>>3];
               HEAPF64[$452>>3] = $11311;
               $11312 = (($sj0array741) + ($ij0743$01441<<3)|0);
               $11313 = +HEAPF64[$11312>>3];
               HEAPF64[$453>>3] = $11313;
               $11314 = +HEAPF64[$this>>3];
               $11315 = (+__Z5IKcosd($11314));
               $11316 = (+__Z5IKsind($11314));
               $11317 = +HEAPF64[$45>>3];
               $11318 = +HEAPF64[$24>>3];
               $11319 = $11317 * $11318;
               $11320 = +HEAPF64[$43>>3];
               $11321 = $11318 * $11320;
               $11322 = +HEAPF64[$23>>3];
               $11323 = $11320 * $11322;
               $11324 = $11315 * 0.089999999999999996;
               $11325 = $11316 * $11317;
               $11326 = $11315 * $11320;
               $11327 = -$11325;
               $11328 = $11327 - $11326;
               $11329 = -$11322;
               $11330 = $11315 * $11319;
               $11331 = $11315 * $11323;
               $11332 = -$11331;
               $11333 = $11332 - $11330;
               $11334 = $11325 * $11329;
               $11335 = $11334 + $11333;
               $11336 = $11316 * $11321;
               $11337 = $11336 + $11335;
               $11338 = $11324 * $11319;
               $11339 = $11316 * -0.089999999999999996;
               $11340 = $11339 * $11321;
               $11341 = $11338 + $11340;
               $11342 = $11324 * $11323;
               $11343 = $11341 + $11342;
               $11344 = $11322 * 0.089999999999999996;
               $11345 = $11325 * $11344;
               $11346 = $11345 + $11343;
               $11347 = (+__Z5IKabsd($11328));
               $11348 = $11347 > 5.0000000000000004E-6;
               if ($11348) {
                break;
               }
               $11349 = $11317 * $11329;
               $11350 = $11315 * $11349;
               $11351 = $11316 * $11319;
               $11352 = $11351 + $11350;
               $11353 = $11316 * $11323;
               $11354 = $11353 + $11352;
               $11355 = $11315 * $11321;
               $11356 = $11355 + $11354;
               $11357 = (+__Z5IKabsd($11356));
               $11358 = $11357 > 5.0000000000000004E-6;
               if ($11358) {
                break;
               }
               $11359 = (+__Z5IKabsd($11337));
               $11360 = $11359 > 5.0000000000000004E-6;
               if ($11360) {
                break;
               }
               $11361 = (+__Z5IKabsd($11346));
               $11362 = $11361 > 5.0000000000000004E-6;
               if ($11362) {
                break;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
              }
             } while(0);
             $11363 = (($ij0743$01441) + 1)|0;
             $exitcond2221 = ($11363|0)==(2);
             if ($exitcond2221) {
              break L604;
             } else {
              $ij0743$01441 = $11363;
             }
            }
           }
           HEAPF64[$184>>3] = 0.0;
           HEAPF64[$183>>3] = 1.0;
           HEAPF64[$3>>3] = 0.0;
           HEAPF64[$76>>3] = 0.0;
           HEAPF64[$75>>3] = 1.0;
           HEAPF64[$7>>3] = 0.0;
           $11023 = +HEAPF64[$23>>3];
           $11024 = +HEAPF64[$45>>3];
           $11025 = $11023 * $11024;
           $11026 = +HEAPF64[$43>>3];
           $11027 = +HEAPF64[$24>>3];
           $11028 = $11026 * $11027;
           $11029 = $11028 - $11025;
           $11030 = (+__Z5IKabsd($11029));
           $11031 = $11023 * $11026;
           $11032 = $11024 * $11027;
           $11033 = $11031 + $11032;
           $11034 = (+__Z5IKabsd($11033));
           $11035 = $11030 + $11034;
           $11036 = (+__Z5IKabsd($11035));
           $11037 = $11036 < 9.9999999999999995E-7;
           if (!($11037)) {
            HEAP16[$j0valid735>>1] = 0;
            HEAP8[$2>>0] = 2;
            $11158 = +HEAPF64[$23>>3];
            $11159 = +HEAPF64[$45>>3];
            $11160 = $11158 * $11159;
            $11161 = +HEAPF64[$43>>3];
            $11162 = +HEAPF64[$24>>3];
            $11163 = $11161 * $11162;
            $11164 = $11163 - $11160;
            $11165 = $11158 * $11161;
            $11166 = $11159 * $11162;
            $11167 = $11165 + $11166;
            __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1548,$11164,$11167,1.9999999999999999E-6);
            $11168 = HEAP8[$440>>0]|0;
            $11169 = ($11168<<24>>24)==(0);
            if ($11169) {
             break L604;
            }
            $11170 = +HEAPF64[$x1548>>3];
            $11171 = -$11170;
            HEAPF64[$j0array732>>3] = $11171;
            $11172 = (+__Z5IKsind($11171));
            HEAPF64[$sj0array734>>3] = $11172;
            $11173 = (+__Z5IKcosd($11171));
            HEAPF64[$cj0array733>>3] = $11173;
            $11174 = 3.14159265358979 - $11170;
            HEAPF64[$441>>3] = $11174;
            $11175 = (+__Z5IKsind($11174));
            HEAPF64[$442>>3] = $11175;
            $11176 = +HEAPF64[$441>>3];
            $11177 = (+__Z5IKcosd($11176));
            HEAPF64[$443>>3] = $11177;
            $11178 = +HEAPF64[$j0array732>>3];
            $11179 = $11178 > 3.14159265358979;
            do {
             if ($11179) {
              $11180 = $11178 + -6.2831853071795898;
              HEAPF64[$j0array732>>3] = $11180;
             } else {
              $11181 = $11178 < -3.14159265358979;
              if (!($11181)) {
               break;
              }
              $11182 = $11178 + 6.2831853071795898;
              HEAPF64[$j0array732>>3] = $11182;
             }
            } while(0);
            HEAP8[$j0valid735>>0] = 1;
            $11183 = +HEAPF64[$441>>3];
            $11184 = $11183 > 3.14159265358979;
            do {
             if ($11184) {
              $11185 = $11183 + -6.2831853071795898;
              HEAPF64[$441>>3] = $11185;
             } else {
              $11186 = $11183 < -3.14159265358979;
              if (!($11186)) {
               break;
              }
              $11187 = $11183 + 6.2831853071795898;
              HEAPF64[$441>>3] = $11187;
             }
            } while(0);
            HEAP8[$444>>0] = 1;
            $ij0736$01446 = 0;
            while(1) {
             $11188 = (($j0valid735) + ($ij0736$01446)|0);
             $11189 = HEAP8[$11188>>0]|0;
             $11190 = ($11189<<24>>24)==(0);
             do {
              if (!($11190)) {
               $11191 = $ij0736$01446&255;
               HEAP8[$0>>0] = $11191;
               HEAP8[$1>>0] = -1;
               $iij0737$01442 = (($ij0736$01446) + 1)|0;
               $11192 = ($iij0737$01442|0)<(2);
               do {
                if ($11192) {
                 $11193 = (($sj0array734) + ($ij0736$01446<<3)|0);
                 $11194 = (($j0valid735) + ($iij0737$01442)|0);
                 $11195 = HEAP8[$11194>>0]|0;
                 $11196 = ($11195<<24>>24)==(0);
                 if ($11196) {
                  break;
                 }
                 $11197 = (($cj0array733) + ($ij0736$01446<<3)|0);
                 $11198 = +HEAPF64[$11197>>3];
                 $11199 = (($cj0array733) + ($iij0737$01442<<3)|0);
                 $11200 = +HEAPF64[$11199>>3];
                 $11201 = $11198 - $11200;
                 $11202 = (+__Z5IKabsd($11201));
                 $11203 = $11202 < 9.9999999999999995E-7;
                 if (!($11203)) {
                  break;
                 }
                 $11204 = +HEAPF64[$11193>>3];
                 $11205 = (($sj0array734) + ($iij0737$01442<<3)|0);
                 $11206 = +HEAPF64[$11205>>3];
                 $11207 = $11204 - $11206;
                 $11208 = (+__Z5IKabsd($11207));
                 $11209 = $11208 < 9.9999999999999995E-7;
                 if (!($11209)) {
                  break;
                 }
                 HEAP8[$11194>>0] = 0;
                 $11210 = $iij0737$01442&255;
                 HEAP8[$1>>0] = $11210;
                }
               } while(0);
               $11211 = (($j0array732) + ($ij0736$01446<<3)|0);
               $11212 = +HEAPF64[$11211>>3];
               HEAPF64[$this>>3] = $11212;
               $11213 = (($cj0array733) + ($ij0736$01446<<3)|0);
               $11214 = +HEAPF64[$11213>>3];
               HEAPF64[$445>>3] = $11214;
               $11215 = (($sj0array734) + ($ij0736$01446<<3)|0);
               $11216 = +HEAPF64[$11215>>3];
               HEAPF64[$446>>3] = $11216;
               $11217 = +HEAPF64[$this>>3];
               $11218 = (+__Z5IKcosd($11217));
               $11219 = (+__Z5IKsind($11217));
               $11220 = +HEAPF64[$24>>3];
               $11221 = $11220 * 0.089999999999999996;
               $11222 = +HEAPF64[$23>>3];
               $11223 = +HEAPF64[$43>>3];
               $11224 = $11222 * $11223;
               $11225 = $11219 * $11223;
               $11226 = +HEAPF64[$45>>3];
               $11227 = $11219 * $11226;
               $11228 = -$11226;
               $11229 = $11218 * $11228;
               $11230 = $11225 + $11229;
               $11231 = $11218 * $11224;
               $11232 = $11222 * $11227;
               $11233 = -$11232;
               $11234 = $11233 - $11231;
               $11235 = $11220 * $11228;
               $11236 = $11218 * $11235;
               $11237 = $11236 + $11234;
               $11238 = $11220 * $11225;
               $11239 = $11238 + $11237;
               $11240 = $11218 * $11226;
               $11241 = $11221 * $11240;
               $11242 = $11218 * 0.089999999999999996;
               $11243 = $11242 * $11224;
               $11244 = $11243 + $11241;
               $11245 = $11222 * 0.089999999999999996;
               $11246 = $11245 * $11227;
               $11247 = $11246 + $11244;
               $11248 = $11221 * $11225;
               $11249 = $11247 - $11248;
               $11250 = (+__Z5IKabsd($11230));
               $11251 = $11250 > 5.0000000000000004E-6;
               if ($11251) {
                break;
               }
               $11252 = $11218 * $11223;
               $11253 = -$11252;
               $11254 = $11253 - $11227;
               $11255 = (+__Z5IKabsd($11254));
               $11256 = $11255 > 5.0000000000000004E-6;
               if ($11256) {
                break;
               }
               $11257 = (+__Z5IKabsd($11239));
               $11258 = $11257 > 5.0000000000000004E-6;
               if ($11258) {
                break;
               }
               $11259 = (+__Z5IKabsd($11249));
               $11260 = $11259 > 5.0000000000000004E-6;
               if ($11260) {
                break;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
              }
             } while(0);
             $11261 = (($ij0736$01446) + 1)|0;
             $exitcond2222 = ($11261|0)==(2);
             if ($exitcond2222) {
              break L604;
             } else {
              $ij0736$01446 = $11261;
             }
            }
           }
           HEAPF64[$184>>3] = 0.0;
           HEAPF64[$183>>3] = 1.0;
           HEAPF64[$3>>3] = 0.0;
           HEAPF64[$76>>3] = 0.0;
           HEAPF64[$75>>3] = 1.0;
           HEAPF64[$7>>3] = 0.0;
           $11038 = +HEAPF64[$45>>3];
           $11039 = +HEAPF64[$24>>3];
           $11040 = $11038 * $11039;
           $11041 = +HEAPF64[$23>>3];
           $11042 = +HEAPF64[$43>>3];
           $11043 = $11041 * $11042;
           $11044 = -$11043;
           $11045 = $11044 - $11040;
           $11046 = (+__Z5IKabsd($11045));
           $11047 = $11039 * $11042;
           $11048 = $11038 * $11041;
           $11049 = $11047 - $11048;
           $11050 = (+__Z5IKabsd($11049));
           $11051 = $11046 + $11050;
           $11052 = (+__Z5IKabsd($11051));
           $11053 = $11052 < 9.9999999999999995E-7;
           if ($11053) {
            break L604;
           }
           HEAP16[$j0valid728>>1] = 0;
           HEAP8[$2>>0] = 2;
           $11054 = +HEAPF64[$23>>3];
           $11055 = +HEAPF64[$43>>3];
           $11056 = $11054 * $11055;
           $11057 = +HEAPF64[$45>>3];
           $11058 = -$11057;
           $11059 = +HEAPF64[$24>>3];
           $11060 = $11059 * $11058;
           $11061 = $11060 - $11056;
           $11062 = $11055 * $11059;
           $11063 = $11054 * $11058;
           $11064 = $11063 + $11062;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1539,$11061,$11064,1.9999999999999999E-6);
           $11065 = HEAP8[$433>>0]|0;
           $11066 = ($11065<<24>>24)==(0);
           if ($11066) {
            break L604;
           }
           $11067 = +HEAPF64[$x1539>>3];
           $11068 = -$11067;
           HEAPF64[$j0array725>>3] = $11068;
           $11069 = (+__Z5IKsind($11068));
           HEAPF64[$sj0array727>>3] = $11069;
           $11070 = (+__Z5IKcosd($11068));
           HEAPF64[$cj0array726>>3] = $11070;
           $11071 = 3.14159265358979 - $11067;
           HEAPF64[$434>>3] = $11071;
           $11072 = (+__Z5IKsind($11071));
           HEAPF64[$435>>3] = $11072;
           $11073 = +HEAPF64[$434>>3];
           $11074 = (+__Z5IKcosd($11073));
           HEAPF64[$436>>3] = $11074;
           $11075 = +HEAPF64[$j0array725>>3];
           $11076 = $11075 > 3.14159265358979;
           do {
            if ($11076) {
             $11077 = $11075 + -6.2831853071795898;
             HEAPF64[$j0array725>>3] = $11077;
            } else {
             $11078 = $11075 < -3.14159265358979;
             if (!($11078)) {
              break;
             }
             $11079 = $11075 + 6.2831853071795898;
             HEAPF64[$j0array725>>3] = $11079;
            }
           } while(0);
           HEAP8[$j0valid728>>0] = 1;
           $11080 = +HEAPF64[$434>>3];
           $11081 = $11080 > 3.14159265358979;
           do {
            if ($11081) {
             $11082 = $11080 + -6.2831853071795898;
             HEAPF64[$434>>3] = $11082;
            } else {
             $11083 = $11080 < -3.14159265358979;
             if (!($11083)) {
              break;
             }
             $11084 = $11080 + 6.2831853071795898;
             HEAPF64[$434>>3] = $11084;
            }
           } while(0);
           HEAP8[$437>>0] = 1;
           $ij0729$01451 = 0;
           while(1) {
            $11085 = (($j0valid728) + ($ij0729$01451)|0);
            $11086 = HEAP8[$11085>>0]|0;
            $11087 = ($11086<<24>>24)==(0);
            do {
             if (!($11087)) {
              $11088 = $ij0729$01451&255;
              HEAP8[$0>>0] = $11088;
              HEAP8[$1>>0] = -1;
              $iij0730$01447 = (($ij0729$01451) + 1)|0;
              $11089 = ($iij0730$01447|0)<(2);
              do {
               if ($11089) {
                $11090 = (($sj0array727) + ($ij0729$01451<<3)|0);
                $11091 = (($j0valid728) + ($iij0730$01447)|0);
                $11092 = HEAP8[$11091>>0]|0;
                $11093 = ($11092<<24>>24)==(0);
                if ($11093) {
                 break;
                }
                $11094 = (($cj0array726) + ($ij0729$01451<<3)|0);
                $11095 = +HEAPF64[$11094>>3];
                $11096 = (($cj0array726) + ($iij0730$01447<<3)|0);
                $11097 = +HEAPF64[$11096>>3];
                $11098 = $11095 - $11097;
                $11099 = (+__Z5IKabsd($11098));
                $11100 = $11099 < 9.9999999999999995E-7;
                if (!($11100)) {
                 break;
                }
                $11101 = +HEAPF64[$11090>>3];
                $11102 = (($sj0array727) + ($iij0730$01447<<3)|0);
                $11103 = +HEAPF64[$11102>>3];
                $11104 = $11101 - $11103;
                $11105 = (+__Z5IKabsd($11104));
                $11106 = $11105 < 9.9999999999999995E-7;
                if (!($11106)) {
                 break;
                }
                HEAP8[$11091>>0] = 0;
                $11107 = $iij0730$01447&255;
                HEAP8[$1>>0] = $11107;
               }
              } while(0);
              $11108 = (($j0array725) + ($ij0729$01451<<3)|0);
              $11109 = +HEAPF64[$11108>>3];
              HEAPF64[$this>>3] = $11109;
              $11110 = (($cj0array726) + ($ij0729$01451<<3)|0);
              $11111 = +HEAPF64[$11110>>3];
              HEAPF64[$438>>3] = $11111;
              $11112 = (($sj0array727) + ($ij0729$01451<<3)|0);
              $11113 = +HEAPF64[$11112>>3];
              HEAPF64[$439>>3] = $11113;
              $11114 = +HEAPF64[$this>>3];
              $11115 = (+__Z5IKcosd($11114));
              $11116 = (+__Z5IKsind($11114));
              $11117 = +HEAPF64[$45>>3];
              $11118 = $11117 * 0.089999999999999996;
              $11119 = +HEAPF64[$43>>3];
              $11120 = $11116 * $11119;
              $11121 = +HEAPF64[$24>>3];
              $11122 = $11115 * $11121;
              $11123 = $11116 * $11117;
              $11124 = $11115 * $11117;
              $11125 = $11120 - $11124;
              $11126 = +HEAPF64[$23>>3];
              $11127 = $11117 * $11126;
              $11128 = $11115 * $11127;
              $11129 = $11120 * $11126;
              $11130 = $11129 - $11128;
              $11131 = $11119 * $11122;
              $11132 = $11131 + $11130;
              $11133 = $11123 * $11121;
              $11134 = $11133 + $11132;
              $11135 = $11116 * $11126;
              $11136 = $11118 * $11135;
              $11137 = $11121 * -0.089999999999999996;
              $11138 = $11120 * $11137;
              $11139 = $11138 + $11136;
              $11140 = $11126 * 0.089999999999999996;
              $11141 = $11119 * $11140;
              $11142 = $11115 * $11141;
              $11143 = $11139 + $11142;
              $11144 = $11118 * $11122;
              $11145 = $11144 + $11143;
              $11146 = (+__Z5IKabsd($11125));
              $11147 = $11146 > 5.0000000000000004E-6;
              if ($11147) {
               break;
              }
              $11148 = $11115 * $11119;
              $11149 = -$11148;
              $11150 = $11149 - $11123;
              $11151 = (+__Z5IKabsd($11150));
              $11152 = $11151 > 5.0000000000000004E-6;
              if ($11152) {
               break;
              }
              $11153 = (+__Z5IKabsd($11134));
              $11154 = $11153 > 5.0000000000000004E-6;
              if ($11154) {
               break;
              }
              $11155 = (+__Z5IKabsd($11145));
              $11156 = $11155 > 5.0000000000000004E-6;
              if ($11156) {
               break;
              }
              __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             }
            } while(0);
            $11157 = (($ij0729$01451) + 1)|0;
            $exitcond2223 = ($11157|0)==(2);
            if ($exitcond2223) {
             break L604;
            } else {
             $ij0729$01451 = $11157;
            }
           }
          }
         } while(0);
         $11786 = +HEAPF64[$76>>3];
         $11787 = $11786 * 0.044999999999999998;
         $11788 = +HEAPF64[$75>>3];
         $11789 = $11788 * 0.29999999999999999;
         $11790 = $11787 + $11789;
         $11791 = +HEAPF64[$3>>3];
         $11792 = $11791 + -3.14159265358979;
         $11793 = (+__Z5IKabsd($11792));
         $11794 = $11793 + 3.14159265358979;
         $11795 = (+__Z6IKfmoddd($11794,6.2831853071795898));
         $11796 = $11795 + -3.14159265358979;
         $11797 = -0.55000000000000004 - $11790;
         $11798 = +HEAPF64[$47>>3];
         $11799 = $11797 - $11798;
         $11800 = $11790 + 0.55000000000000004;
         $11801 = $11800 + $11798;
         $11802 = (+__Z5IKabsd($11796));
         $11803 = $11802 < 9.9999999999999995E-7;
         if (!($11803)) {
          break;
         }
         $11804 = +HEAPF64[$60>>3];
         $11805 = $11786 * 0.076499999999999999;
         $11806 = $11805 + 0.39655000000000001;
         $11807 = $11806 - $11804;
         $11808 = $11788 * 0.32595000000000002;
         $11809 = $11808 + $11807;
         $11810 = (+__Z5IKabsd($11809));
         $11811 = $11810 < 9.9999999999999995E-7;
         if (!($11811)) {
          break;
         }
         $11812 = (+__Z5IKabsd($11799));
         $11813 = $11812 < 9.9999999999999995E-7;
         if (!($11813)) {
          break;
         }
         $11814 = (+__Z5IKabsd($11801));
         $11815 = $11814 < 9.9999999999999995E-7;
         if (!($11815)) {
          break;
         }
         HEAPF64[$184>>3] = 0.0;
         HEAPF64[$183>>3] = -1.0;
         HEAPF64[$3>>3] = 3.14159265358979;
         $11816 = +HEAPF64[$76>>3];
         $11817 = $11816 * 0.29999999999999999;
         $11818 = +HEAPF64[$43>>3];
         $11819 = +HEAPF64[$24>>3];
         $11820 = $11818 * $11819;
         $11821 = +HEAPF64[$45>>3];
         $11822 = $11821 * 0.044999999999999998;
         $11823 = +HEAPF64[$60>>3];
         $11824 = +HEAPF64[$47>>3];
         $11825 = $11824 * $11824;
         $11826 = $11823 - $11825;
         $11827 = +HEAPF64[$75>>3];
         $11828 = $11822 * $11827;
         $11829 = +HEAPF64[$23>>3];
         $11830 = $11829 * 0.044999999999999998;
         $11831 = $11818 * $11830;
         $11832 = -$11829;
         $11833 = (+__Z6IKsignd($11826));
         $11834 = (+__Z5IKabsd($11826));
         $11835 = $11834 < 9.9999999999999995E-7;
         do {
          if (!($11835)) {
           $11836 = $11827 * $11831;
           $11837 = $11819 * $11828;
           $11838 = $11836 - $11837;
           $11839 = $11819 * $11822;
           $11840 = $11839 + $11838;
           $11841 = $11840 - $11831;
           $11842 = $11819 * $11821;
           $11843 = $11817 * $11842;
           $11844 = $11843 + $11841;
           $11845 = $11818 * $11829;
           $11846 = $11817 * $11845;
           $11847 = $11844 - $11846;
           $11848 = (+__Z5IKabsd($11847));
           $11849 = $11827 * 0.044999999999999998;
           $11850 = $11820 * $11849;
           $11851 = $11829 * $11828;
           $11852 = $11850 + $11851;
           $11853 = $11822 * $11832;
           $11854 = $11853 + $11852;
           $11855 = $11820 * 0.044999999999999998;
           $11856 = $11854 - $11855;
           $11857 = $11817 * $11820;
           $11858 = $11856 - $11857;
           $11859 = $11821 * $11832;
           $11860 = $11817 * $11859;
           $11861 = $11860 + $11858;
           $11862 = (+__Z5IKabsd($11861));
           $11863 = $11848 + $11862;
           $11864 = (+__Z5IKabsd($11863));
           $11865 = $11864 < 9.9999999999999995E-7;
           if ($11865) {
            break;
           }
           $11866 = (+__Z5IKabsd($11833));
           $11867 = $11866 < 9.9999999999999995E-7;
           if ($11867) {
            break;
           }
           HEAP8[$2>>0] = 1;
           $14062 = +HEAPF64[$43>>3];
           $14063 = +HEAPF64[$24>>3];
           $14064 = $14062 * $14063;
           $14065 = +HEAPF64[$76>>3];
           $14066 = $14065 * 0.29999999999999999;
           $14067 = +HEAPF64[$23>>3];
           $14068 = +HEAPF64[$45>>3];
           $14069 = $14067 * $14068;
           $14070 = $14063 * $14068;
           $14071 = $14067 * 0.044999999999999998;
           $14072 = $14062 * $14071;
           $14073 = +HEAPF64[$60>>3];
           $14074 = +HEAPF64[$47>>3];
           $14075 = $14074 * $14074;
           $14076 = $14073 - $14075;
           $14077 = (+__Z6IKsignd($14076));
           __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1863,$14077,-1);
           $14078 = HEAP8[$583>>0]|0;
           $14079 = ($14078<<24>>24)==(0);
           if ($14079) {
            break L604;
           }
           $14080 = $14066 * $14069;
           $14081 = $14069 * -0.044999999999999998;
           $14082 = $14081 - $14080;
           $14083 = $14064 * 0.044999999999999998;
           $14084 = $14082 - $14083;
           $14085 = $14064 * $14066;
           $14086 = $14084 - $14085;
           $14087 = +HEAPF64[$75>>3];
           $14088 = $14087 * 0.044999999999999998;
           $14089 = $14069 * $14088;
           $14090 = $14086 + $14089;
           $14091 = $14064 * $14088;
           $14092 = $14091 + $14090;
           $14093 = $14072 * $14087;
           $14094 = $14070 * 0.044999999999999998;
           $14095 = $14094 + $14093;
           $14096 = +HEAPF64[$23>>3];
           $14097 = +HEAPF64[$43>>3];
           $14098 = $14096 * $14097;
           $14099 = $14066 * $14098;
           $14100 = $14095 - $14099;
           $14101 = $14066 * $14070;
           $14102 = $14101 + $14100;
           $14103 = $14102 - $14072;
           $14104 = $14087 * -0.044999999999999998;
           $14105 = $14070 * $14104;
           $14106 = $14105 + $14103;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1864,$14092,$14106,1.9999999999999999E-6);
           $14107 = HEAP8[$584>>0]|0;
           $14108 = ($14107<<24>>24)==(0);
           if ($14108) {
            break L604;
           }
           $14109 = +HEAPF64[$x1863>>3];
           $14110 = $14109 * 1.5707963267949001;
           $14111 = $14110 + -1.5707963267949001;
           $14112 = +HEAPF64[$x1864>>3];
           $14113 = $14112 + $14111;
           $14114 = (+__Z5IKsind($14113));
           $14115 = (+__Z5IKcosd($14113));
           $14116 = $14113 > 3.14159265358979;
           do {
            if ($14116) {
             $14117 = $14113 + -6.2831853071795898;
             $14120 = $14117;
            } else {
             $14118 = $14113 < -3.14159265358979;
             if (!($14118)) {
              $14120 = $14113;
              break;
             }
             $14119 = $14113 + 6.2831853071795898;
             $14120 = $14119;
            }
           } while(0);
           HEAP8[$0>>0] = 0;
           HEAP8[$1>>0] = -1;
           HEAPF64[$this>>3] = $14120;
           HEAPF64[$585>>3] = $14115;
           HEAPF64[$586>>3] = $14114;
           $14121 = +HEAPF64[$this>>3];
           $14122 = (+__Z5IKcosd($14121));
           $14123 = (+__Z5IKsind($14121));
           $14124 = +HEAPF64[$23>>3];
           $14125 = $14124 * 0.044999999999999998;
           $14126 = +HEAPF64[$24>>3];
           $14127 = $14126 * 0.089999999999999996;
           $14128 = +HEAPF64[$76>>3];
           $14129 = $14128 * 0.29999999999999999;
           $14130 = +HEAPF64[$75>>3];
           $14131 = $14130 * 0.044999999999999998;
           $14132 = $14124 * 0.089999999999999996;
           $14133 = +HEAPF64[$43>>3];
           $14134 = $14123 * $14133;
           $14135 = $14122 * $14133;
           $14136 = +HEAPF64[$45>>3];
           $14137 = $14122 * $14136;
           $14138 = $14123 * $14136;
           $14139 = $14126 * 0.044999999999999998;
           $14140 = -$14126;
           $14141 = $14131 * $14140;
           $14142 = $14139 + $14141;
           $14143 = $14134 + $14142;
           $14144 = $14126 * $14129;
           $14145 = $14144 + $14143;
           $14146 = $14145 - $14137;
           $14147 = -$14124;
           $14148 = $14124 * $14134;
           $14149 = $14138 * $14140;
           $14150 = $14148 + $14149;
           $14151 = $14135 * $14140;
           $14152 = $14151 + $14150;
           $14153 = $14137 * $14147;
           $14154 = $14153 + $14152;
           $14155 = 0.044999999999999998 - $14131;
           $14156 = $14126 * $14134;
           $14157 = $14155 + $14156;
           $14158 = $14124 * $14138;
           $14159 = $14157 + $14158;
           $14160 = $14124 * $14135;
           $14161 = $14160 + $14159;
           $14162 = $14129 + $14161;
           $14163 = $14137 * $14140;
           $14164 = $14163 + $14162;
           $14165 = -$14132;
           $14166 = $14135 * $14165;
           $14167 = $14166 + -0.21249999999999999;
           $14168 = $14138 * $14165;
           $14169 = $14167 + $14168;
           $14170 = $14127 * $14134;
           $14171 = $14169 - $14170;
           $14172 = +HEAPF64[$60>>3];
           $14173 = $14171 - $14172;
           $14174 = +HEAPF64[$47>>3];
           $14175 = $14174 * 1.1000000000000001;
           $14176 = $14173 - $14175;
           $14177 = $14127 * $14137;
           $14178 = $14177 + $14176;
           $14179 = (+__Z5IKabsd($14146));
           $14180 = $14179 > 5.0000000000000004E-6;
           if ($14180) {
            break L604;
           }
           $14181 = $14125 * $14130;
           $14182 = $14129 * $14147;
           $14183 = $14181 + $14182;
           $14184 = $14183 - $14138;
           $14185 = $14184 - $14135;
           $14186 = $14185 - $14125;
           $14187 = (+__Z5IKabsd($14186));
           $14188 = $14187 > 5.0000000000000004E-6;
           if ($14188) {
            break L604;
           }
           $14189 = (+__Z5IKabsd($14154));
           $14190 = $14189 > 5.0000000000000004E-6;
           if ($14190) {
            break L604;
           }
           $14191 = (+__Z5IKabsd($14164));
           $14192 = $14191 > 5.0000000000000004E-6;
           if ($14192) {
            break L604;
           }
           $14193 = (+__Z5IKabsd($14178));
           $14194 = $14193 > 5.0000000000000004E-6;
           if ($14194) {
            break L604;
           }
           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           break L604;
          }
         } while(0);
         HEAPF64[$184>>3] = 0.0;
         HEAPF64[$183>>3] = -1.0;
         HEAPF64[$3>>3] = 3.14159265358979;
         $11868 = +HEAPF64[$23>>3];
         $11869 = +HEAPF64[$60>>3];
         $11870 = $11868 * $11869;
         $11871 = +HEAPF64[$47>>3];
         $11872 = $11871 * $11871;
         $11873 = $11868 * $11872;
         $11874 = $11873 - $11870;
         $11875 = (+__Z5IKabsd($11874));
         $11876 = $11875 < 9.9999999999999995E-7;
         do {
          if (!($11876)) {
           $11877 = (+__Z6IKsignd($11874));
           $11878 = (+__Z5IKabsd($11877));
           $11879 = $11878 < 9.9999999999999995E-7;
           if ($11879) {
            break;
           }
           HEAP8[$2>>0] = 1;
           $13924 = +HEAPF64[$23>>3];
           $13925 = $13924 * $13924;
           $13926 = +HEAPF64[$43>>3];
           $13927 = $13926 * 0.044999999999999998;
           $13928 = +HEAPF64[$45>>3];
           $13929 = $13928 * 0.044999999999999998;
           $13930 = +HEAPF64[$24>>3];
           $13931 = $13924 * $13930;
           $13932 = +HEAPF64[$75>>3];
           $13933 = $13932 * $13931;
           $13934 = $13925 * $13932;
           $13935 = $13928 * 0.29999999999999999;
           $13936 = +HEAPF64[$76>>3];
           $13937 = $13935 * $13936;
           $13938 = $13926 * 0.29999999999999999;
           $13939 = $13938 * $13936;
           $13940 = +HEAPF64[$60>>3];
           $13941 = $13924 * $13940;
           $13942 = +HEAPF64[$47>>3];
           $13943 = $13942 * $13942;
           $13944 = $13924 * $13943;
           $13945 = $13944 - $13941;
           $13946 = (+__Z6IKsignd($13945));
           __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1843,$13946,-1);
           $13947 = HEAP8[$579>>0]|0;
           $13948 = ($13947<<24>>24)==(0);
           if ($13948) {
            break L604;
           }
           $13949 = $13931 * $13939;
           $13950 = -$13927;
           $13951 = $13933 * $13950;
           $13952 = $13951 + $13949;
           $13953 = $13925 * $13929;
           $13954 = $13953 + $13952;
           $13955 = -$13929;
           $13956 = $13934 * $13955;
           $13957 = $13956 + $13954;
           $13958 = $13925 * $13937;
           $13959 = $13958 + $13957;
           $13960 = $13927 * $13931;
           $13961 = $13960 + $13959;
           $13962 = $13931 * $13955;
           $13963 = $13925 * $13927;
           $13964 = $13963 + $13962;
           $13965 = $13934 * $13950;
           $13966 = $13964 + $13965;
           $13967 = $13929 * $13933;
           $13968 = $13967 + $13966;
           $13969 = $13931 * $13937;
           $13970 = $13968 - $13969;
           $13971 = $13925 * $13939;
           $13972 = $13971 + $13970;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1844,$13961,$13972,1.9999999999999999E-6);
           $13973 = HEAP8[$580>>0]|0;
           $13974 = ($13973<<24>>24)==(0);
           if ($13974) {
            break L604;
           }
           $13975 = +HEAPF64[$x1843>>3];
           $13976 = $13975 * 1.5707963267949001;
           $13977 = $13976 + -1.5707963267949001;
           $13978 = +HEAPF64[$x1844>>3];
           $13979 = $13978 + $13977;
           $13980 = (+__Z5IKsind($13979));
           $13981 = (+__Z5IKcosd($13979));
           $13982 = $13979 > 3.14159265358979;
           do {
            if ($13982) {
             $13983 = $13979 + -6.2831853071795898;
             $13986 = $13983;
            } else {
             $13984 = $13979 < -3.14159265358979;
             if (!($13984)) {
              $13986 = $13979;
              break;
             }
             $13985 = $13979 + 6.2831853071795898;
             $13986 = $13985;
            }
           } while(0);
           HEAP8[$0>>0] = 0;
           HEAP8[$1>>0] = -1;
           HEAPF64[$this>>3] = $13986;
           HEAPF64[$581>>3] = $13981;
           HEAPF64[$582>>3] = $13980;
           $13987 = +HEAPF64[$this>>3];
           $13988 = (+__Z5IKcosd($13987));
           $13989 = (+__Z5IKsind($13987));
           $13990 = +HEAPF64[$23>>3];
           $13991 = $13990 * 0.044999999999999998;
           $13992 = +HEAPF64[$24>>3];
           $13993 = $13992 * 0.089999999999999996;
           $13994 = +HEAPF64[$76>>3];
           $13995 = $13994 * 0.29999999999999999;
           $13996 = +HEAPF64[$75>>3];
           $13997 = $13996 * 0.044999999999999998;
           $13998 = $13990 * 0.089999999999999996;
           $13999 = +HEAPF64[$43>>3];
           $14000 = $13989 * $13999;
           $14001 = $13988 * $13999;
           $14002 = +HEAPF64[$45>>3];
           $14003 = $13988 * $14002;
           $14004 = $13989 * $14002;
           $14005 = $13992 * $13995;
           $14006 = $14005 - $14003;
           $14007 = $13992 * 0.044999999999999998;
           $14008 = $14007 + $14006;
           $14009 = $14000 + $14008;
           $14010 = -$13992;
           $14011 = $13997 * $14010;
           $14012 = $14011 + $14009;
           $14013 = -$13990;
           $14014 = $14003 * $14013;
           $14015 = $14001 * $14010;
           $14016 = $14015 + $14014;
           $14017 = $14004 * $14010;
           $14018 = $14017 + $14016;
           $14019 = $13990 * $14000;
           $14020 = $14019 + $14018;
           $14021 = $14003 * $14010;
           $14022 = $14021 + 0.044999999999999998;
           $14023 = $13990 * $14001;
           $14024 = $14023 + $14022;
           $14025 = $13990 * $14004;
           $14026 = $14025 + $14024;
           $14027 = $13995 + $14026;
           $14028 = $13992 * $14000;
           $14029 = $14028 + $14027;
           $14030 = $14029 - $13997;
           $14031 = $13993 * $14000;
           $14032 = -0.21249999999999999 - $14031;
           $14033 = $13993 * $14003;
           $14034 = $14032 + $14033;
           $14035 = -$13998;
           $14036 = $14004 * $14035;
           $14037 = $14036 + $14034;
           $14038 = $14001 * $14035;
           $14039 = $14038 + $14037;
           $14040 = +HEAPF64[$60>>3];
           $14041 = $14039 - $14040;
           $14042 = +HEAPF64[$47>>3];
           $14043 = $14042 * 1.1000000000000001;
           $14044 = $14041 - $14043;
           $14045 = (+__Z5IKabsd($14012));
           $14046 = $14045 > 5.0000000000000004E-6;
           if ($14046) {
            break L604;
           }
           $14047 = -$14004;
           $14048 = $14047 - $13991;
           $14049 = $14048 - $14001;
           $14050 = $13991 * $13996;
           $14051 = $14050 + $14049;
           $14052 = $13995 * $14013;
           $14053 = $14052 + $14051;
           $14054 = (+__Z5IKabsd($14053));
           $14055 = $14054 > 5.0000000000000004E-6;
           if ($14055) {
            break L604;
           }
           $14056 = (+__Z5IKabsd($14020));
           $14057 = $14056 > 5.0000000000000004E-6;
           if ($14057) {
            break L604;
           }
           $14058 = (+__Z5IKabsd($14030));
           $14059 = $14058 > 5.0000000000000004E-6;
           if ($14059) {
            break L604;
           }
           $14060 = (+__Z5IKabsd($14044));
           $14061 = $14060 > 5.0000000000000004E-6;
           if ($14061) {
            break L604;
           }
           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           break L604;
          }
         } while(0);
         HEAPF64[$184>>3] = 0.0;
         HEAPF64[$183>>3] = -1.0;
         HEAPF64[$3>>3] = 3.14159265358979;
         $11880 = +HEAPF64[$24>>3];
         $11881 = +HEAPF64[$47>>3];
         $11882 = $11881 * $11881;
         $11883 = $11880 * $11882;
         $11884 = +HEAPF64[$60>>3];
         $11885 = $11880 * $11884;
         $11886 = $11885 - $11883;
         $11887 = (+__Z5IKabsd($11886));
         $11888 = $11887 < 9.9999999999999995E-7;
         do {
          if (!($11888)) {
           $11889 = (+__Z6IKsignd($11886));
           $11890 = (+__Z5IKabsd($11889));
           $11891 = $11890 < 9.9999999999999995E-7;
           if ($11891) {
            break;
           }
           HEAP8[$2>>0] = 1;
           $13772 = +HEAPF64[$23>>3];
           $13773 = $13772 * $13772;
           $13774 = +HEAPF64[$43>>3];
           $13775 = $13774 * 0.044999999999999998;
           $13776 = +HEAPF64[$24>>3];
           $13777 = $13772 * $13776;
           $13778 = +HEAPF64[$76>>3];
           $13779 = $13778 * 0.29999999999999999;
           $13780 = +HEAPF64[$45>>3];
           $13781 = $13780 * 0.044999999999999998;
           $13782 = +HEAPF64[$75>>3];
           $13783 = $13782 * $13781;
           $13784 = +HEAPF64[$47>>3];
           $13785 = $13784 * $13784;
           $13786 = $13776 * $13785;
           $13787 = +HEAPF64[$60>>3];
           $13788 = $13776 * $13787;
           $13789 = $13788 - $13786;
           $13790 = (+__Z6IKsignd($13789));
           __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1821,$13790,-1);
           $13791 = HEAP8[$575>>0]|0;
           $13792 = ($13791<<24>>24)==(0);
           if ($13792) {
            break L604;
           }
           $13793 = $13773 * $13780;
           $13794 = +HEAPF64[$45>>3];
           $13795 = $13777 * $13794;
           $13796 = $13779 * $13795;
           $13797 = -$13796;
           $13798 = $13797 - $13775;
           $13799 = +HEAPF64[$75>>3];
           $13800 = $13773 * $13799;
           $13801 = $13775 * $13800;
           $13802 = $13798 - $13801;
           $13803 = $13775 * $13799;
           $13804 = $13803 + $13802;
           $13805 = $13777 * $13783;
           $13806 = $13805 + $13804;
           $13807 = $13777 * $13781;
           $13808 = $13806 - $13807;
           $13809 = $13773 * $13775;
           $13810 = $13809 + $13808;
           $13811 = +HEAPF64[$43>>3];
           $13812 = $13773 * $13811;
           $13813 = $13779 * $13812;
           $13814 = $13813 + $13810;
           $13815 = -$13811;
           $13816 = $13779 * $13815;
           $13817 = $13816 + $13814;
           $13818 = $13779 * $13793;
           $13819 = -$13818;
           $13820 = $13819 - $13783;
           $13821 = $13777 * $13815;
           $13822 = $13779 * $13821;
           $13823 = $13820 + $13822;
           $13824 = $13779 * $13794;
           $13825 = $13824 + $13823;
           $13826 = $13773 * $13783;
           $13827 = $13826 + $13825;
           $13828 = $13773 * $13781;
           $13829 = $13827 - $13828;
           $13830 = $13781 + $13829;
           $13831 = $13775 * $13777;
           $13832 = $13830 - $13831;
           $13833 = $13777 * $13803;
           $13834 = $13833 + $13832;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1822,$13817,$13834,1.9999999999999999E-6);
           $13835 = HEAP8[$576>>0]|0;
           $13836 = ($13835<<24>>24)==(0);
           if ($13836) {
            break L604;
           }
           $13837 = +HEAPF64[$x1821>>3];
           $13838 = $13837 * 1.5707963267949001;
           $13839 = $13838 + -1.5707963267949001;
           $13840 = +HEAPF64[$x1822>>3];
           $13841 = $13840 + $13839;
           $13842 = (+__Z5IKsind($13841));
           $13843 = (+__Z5IKcosd($13841));
           $13844 = $13841 > 3.14159265358979;
           do {
            if ($13844) {
             $13845 = $13841 + -6.2831853071795898;
             $13848 = $13845;
            } else {
             $13846 = $13841 < -3.14159265358979;
             if (!($13846)) {
              $13848 = $13841;
              break;
             }
             $13847 = $13841 + 6.2831853071795898;
             $13848 = $13847;
            }
           } while(0);
           HEAP8[$0>>0] = 0;
           HEAP8[$1>>0] = -1;
           HEAPF64[$this>>3] = $13848;
           HEAPF64[$577>>3] = $13843;
           HEAPF64[$578>>3] = $13842;
           $13849 = +HEAPF64[$this>>3];
           $13850 = (+__Z5IKcosd($13849));
           $13851 = (+__Z5IKsind($13849));
           $13852 = +HEAPF64[$23>>3];
           $13853 = $13852 * 0.044999999999999998;
           $13854 = +HEAPF64[$24>>3];
           $13855 = $13854 * 0.089999999999999996;
           $13856 = +HEAPF64[$76>>3];
           $13857 = $13856 * 0.29999999999999999;
           $13858 = +HEAPF64[$75>>3];
           $13859 = $13858 * 0.044999999999999998;
           $13860 = $13852 * 0.089999999999999996;
           $13861 = +HEAPF64[$43>>3];
           $13862 = $13851 * $13861;
           $13863 = $13850 * $13861;
           $13864 = +HEAPF64[$45>>3];
           $13865 = $13850 * $13864;
           $13866 = $13851 * $13864;
           $13867 = $13854 * 0.044999999999999998;
           $13868 = $13867 - $13865;
           $13869 = $13862 + $13868;
           $13870 = $13854 * $13857;
           $13871 = $13870 + $13869;
           $13872 = -$13854;
           $13873 = $13859 * $13872;
           $13874 = $13873 + $13871;
           $13875 = -$13852;
           $13876 = $13852 * $13862;
           $13877 = $13863 * $13872;
           $13878 = $13876 + $13877;
           $13879 = $13866 * $13872;
           $13880 = $13878 + $13879;
           $13881 = $13865 * $13875;
           $13882 = $13881 + $13880;
           $13883 = 0.044999999999999998 - $13859;
           $13884 = $13852 * $13866;
           $13885 = $13883 + $13884;
           $13886 = $13852 * $13863;
           $13887 = $13886 + $13885;
           $13888 = $13854 * $13862;
           $13889 = $13888 + $13887;
           $13890 = $13857 + $13889;
           $13891 = $13865 * $13872;
           $13892 = $13891 + $13890;
           $13893 = $13855 * $13865;
           $13894 = $13893 + -0.21249999999999999;
           $13895 = +HEAPF64[$60>>3];
           $13896 = $13894 - $13895;
           $13897 = +HEAPF64[$47>>3];
           $13898 = $13897 * 1.1000000000000001;
           $13899 = $13896 - $13898;
           $13900 = $13855 * $13862;
           $13901 = $13899 - $13900;
           $13902 = -$13860;
           $13903 = $13863 * $13902;
           $13904 = $13903 + $13901;
           $13905 = $13866 * $13902;
           $13906 = $13905 + $13904;
           $13907 = (+__Z5IKabsd($13874));
           $13908 = $13907 > 5.0000000000000004E-6;
           if ($13908) {
            break L604;
           }
           $13909 = -$13866;
           $13910 = $13909 - $13853;
           $13911 = $13910 - $13863;
           $13912 = $13857 * $13875;
           $13913 = $13912 + $13911;
           $13914 = $13853 * $13858;
           $13915 = $13914 + $13913;
           $13916 = (+__Z5IKabsd($13915));
           $13917 = $13916 > 5.0000000000000004E-6;
           if ($13917) {
            break L604;
           }
           $13918 = (+__Z5IKabsd($13882));
           $13919 = $13918 > 5.0000000000000004E-6;
           if ($13919) {
            break L604;
           }
           $13920 = (+__Z5IKabsd($13892));
           $13921 = $13920 > 5.0000000000000004E-6;
           if ($13921) {
            break L604;
           }
           $13922 = (+__Z5IKabsd($13906));
           $13923 = $13922 > 5.0000000000000004E-6;
           if ($13923) {
            break L604;
           }
           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           break L604;
          }
         } while(0);
         $11892 = +HEAPF64[$76>>3];
         $11893 = $11892 * 0.044999999999999998;
         $11894 = +HEAPF64[$75>>3];
         $11895 = $11894 * 0.29999999999999999;
         $11896 = $11893 + $11895;
         $11897 = +HEAPF64[$22>>3];
         $11898 = (+__Z5IKabsd($11897));
         $11899 = $11898 + 3.14159265358979;
         $11900 = (+__Z6IKfmoddd($11899,6.2831853071795898));
         $11901 = $11900 + -3.14159265358979;
         $11902 = -0.55000000000000004 - $11896;
         $11903 = +HEAPF64[$47>>3];
         $11904 = $11902 - $11903;
         $11905 = $11896 + 0.55000000000000004;
         $11906 = $11905 + $11903;
         $11907 = (+__Z5IKabsd($11901));
         $11908 = $11907 < 9.9999999999999995E-7;
         do {
          if ($11908) {
           $11909 = +HEAPF64[$60>>3];
           $11910 = $11892 * 0.076499999999999999;
           $11911 = $11910 + 0.39655000000000001;
           $11912 = $11911 - $11909;
           $11913 = $11894 * 0.32595000000000002;
           $11914 = $11913 + $11912;
           $11915 = (+__Z5IKabsd($11914));
           $11916 = $11915 < 9.9999999999999995E-7;
           if (!($11916)) {
            break;
           }
           $11917 = (+__Z5IKabsd($11904));
           $11918 = $11917 < 9.9999999999999995E-7;
           if (!($11918)) {
            break;
           }
           $11919 = (+__Z5IKabsd($11906));
           $11920 = $11919 < 9.9999999999999995E-7;
           if (!($11920)) {
            break;
           }
           HEAPF64[$184>>3] = 0.0;
           HEAPF64[$183>>3] = -1.0;
           HEAPF64[$3>>3] = 3.14159265358979;
           HEAPF64[$24>>3] = 0.0;
           HEAPF64[$23>>3] = 1.0;
           HEAPF64[$22>>3] = 0.0;
           $11921 = +HEAPF64[$76>>3];
           $11922 = $11921 * 20.0;
           $11923 = +HEAPF64[$43>>3];
           $11924 = $11923 * 3.0;
           $11925 = +HEAPF64[$45>>3];
           $11926 = $11925 * 3.0;
           $11927 = +HEAPF64[$60>>3];
           $11928 = +HEAPF64[$47>>3];
           $11929 = $11928 * $11928;
           $11930 = $11929 - $11927;
           $11931 = +HEAPF64[$75>>3];
           $11932 = (+__Z6IKsignd($11930));
           $11933 = (+__Z5IKabsd($11930));
           $11934 = $11933 < 9.9999999999999995E-7;
           do {
            if (!($11934)) {
             $11935 = $11923 * $11922;
             $11936 = $11924 + $11935;
             $11937 = $11924 * $11931;
             $11938 = $11936 - $11937;
             $11939 = (+__Z5IKabsd($11938));
             $11940 = $11922 * $11925;
             $11941 = $11926 + $11940;
             $11942 = $11926 * $11931;
             $11943 = $11941 - $11942;
             $11944 = (+__Z5IKabsd($11943));
             $11945 = $11939 + $11944;
             $11946 = (+__Z5IKabsd($11945));
             $11947 = $11946 < 9.9999999999999995E-7;
             if ($11947) {
              break;
             }
             $11948 = (+__Z5IKabsd($11932));
             $11949 = $11948 < 9.9999999999999995E-7;
             if ($11949) {
              break;
             }
             HEAP8[$2>>0] = 1;
             $12201 = +HEAPF64[$76>>3];
             $12202 = $12201 * 0.29999999999999999;
             $12203 = +HEAPF64[$43>>3];
             $12204 = $12203 * 0.044999999999999998;
             $12205 = +HEAPF64[$45>>3];
             $12206 = $12205 * 0.044999999999999998;
             $12207 = $12202 * $12205;
             $12208 = $12206 + $12207;
             $12209 = +HEAPF64[$75>>3];
             $12210 = -$12209;
             $12211 = $12206 * $12210;
             $12212 = $12208 + $12211;
             $12213 = $12203 * $12202;
             $12214 = $12204 + $12213;
             $12215 = $12204 * $12210;
             $12216 = $12214 + $12215;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1667,$12212,$12216,1.9999999999999999E-6);
             $12217 = HEAP8[$484>>0]|0;
             $12218 = ($12217<<24>>24)==(0);
             if ($12218) {
              break L604;
             }
             $12219 = +HEAPF64[$60>>3];
             $12220 = +HEAPF64[$47>>3];
             $12221 = $12220 * $12220;
             $12222 = $12221 - $12219;
             $12223 = (+__Z6IKsignd($12222));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1668,$12223,-1);
             $12224 = HEAP8[$485>>0]|0;
             $12225 = ($12224<<24>>24)==(0);
             if ($12225) {
              break L604;
             }
             $12226 = +HEAPF64[$x1667>>3];
             $12227 = $12226 + -1.5707963267949001;
             $12228 = +HEAPF64[$x1668>>3];
             $12229 = $12228 * 1.5707963267949001;
             $12230 = $12227 + $12229;
             $12231 = (+__Z5IKsind($12230));
             $12232 = (+__Z5IKcosd($12230));
             $12233 = $12230 > 3.14159265358979;
             do {
              if ($12233) {
               $12234 = $12230 + -6.2831853071795898;
               $12237 = $12234;
              } else {
               $12235 = $12230 < -3.14159265358979;
               if (!($12235)) {
                $12237 = $12230;
                break;
               }
               $12236 = $12230 + 6.2831853071795898;
               $12237 = $12236;
              }
             } while(0);
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             HEAPF64[$this>>3] = $12237;
             HEAPF64[$486>>3] = $12232;
             HEAPF64[$487>>3] = $12231;
             $12238 = +HEAPF64[$this>>3];
             $12239 = (+__Z5IKsind($12238));
             $12240 = (+__Z5IKcosd($12238));
             $12241 = +HEAPF64[$43>>3];
             $12242 = $12240 * $12241;
             $12243 = +HEAPF64[$45>>3];
             $12244 = $12239 * $12243;
             $12245 = $12239 * $12241;
             $12246 = $12240 * $12243;
             $12247 = $12245 - $12246;
             $12248 = $12244 * 0.089999999999999996;
             $12249 = -0.21249999999999999 - $12248;
             $12250 = $12242 * 0.089999999999999996;
             $12251 = $12249 - $12250;
             $12252 = +HEAPF64[$60>>3];
             $12253 = $12251 - $12252;
             $12254 = +HEAPF64[$47>>3];
             $12255 = $12254 * 1.1000000000000001;
             $12256 = $12253 - $12255;
             $12257 = (+__Z5IKabsd($12247));
             $12258 = $12257 > 5.0000000000000004E-6;
             if ($12258) {
              break L604;
             }
             $12259 = +HEAPF64[$76>>3];
             $12260 = +HEAPF64[$75>>3];
             $12261 = $12242 + 0.044999999999999998;
             $12262 = $12261 + $12244;
             $12263 = $12260 * 0.044999999999999998;
             $12264 = $12262 - $12263;
             $12265 = $12259 * 0.29999999999999999;
             $12266 = $12265 + $12264;
             $12267 = (+__Z5IKabsd($12266));
             $12268 = $12267 > 5.0000000000000004E-6;
             if ($12268) {
              break L604;
             }
             $12269 = (+__Z5IKabsd($12256));
             $12270 = $12269 > 5.0000000000000004E-6;
             if ($12270) {
              break L604;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L604;
            }
           } while(0);
           HEAPF64[$184>>3] = 0.0;
           HEAPF64[$183>>3] = -1.0;
           HEAPF64[$3>>3] = 3.14159265358979;
           HEAPF64[$24>>3] = 0.0;
           HEAPF64[$23>>3] = 1.0;
           HEAPF64[$22>>3] = 0.0;
           $11950 = +HEAPF64[$47>>3];
           $11951 = $11950 * $11950;
           $11952 = +HEAPF64[$60>>3];
           $11953 = $11952 * 80.0;
           $11954 = $11950 * 88.0;
           $11955 = $11952 - $11951;
           $11956 = +HEAPF64[$45>>3];
           $11957 = -$11956;
           $11958 = $11953 * $11957;
           $11959 = $11954 * $11957;
           $11960 = $11958 + $11959;
           $11961 = $11956 * 17.0;
           $11962 = $11960 - $11961;
           $11963 = (+__Z5IKabsd($11962));
           $11964 = +HEAPF64[$43>>3];
           $11965 = -$11964;
           $11966 = $11954 * $11965;
           $11967 = $11953 * $11965;
           $11968 = $11966 + $11967;
           $11969 = $11964 * 17.0;
           $11970 = $11968 - $11969;
           $11971 = (+__Z5IKabsd($11970));
           $11972 = $11963 + $11971;
           $11973 = (+__Z5IKabsd($11955));
           $11974 = $11973 < 9.9999999999999995E-7;
           do {
            if (!($11974)) {
             $11975 = $11951 * 9.0;
             $11976 = $11952 * 9.0;
             $11977 = $11976 - $11975;
             $11978 = (+__Z6IKsignd($11977));
             $11979 = (+__Z5IKabsd($11978));
             $11980 = $11979 < 9.9999999999999995E-7;
             if ($11980) {
              break;
             }
             $11981 = (+__Z5IKabsd($11972));
             $11982 = $11981 < 9.9999999999999995E-7;
             if ($11982) {
              break;
             }
             HEAP8[$2>>0] = 1;
             $12127 = +HEAPF64[$47>>3];
             $12128 = $12127 * 110.0;
             $12129 = +HEAPF64[$60>>3];
             $12130 = $12129 * 100.0;
             $12131 = +HEAPF64[$45>>3];
             $12132 = -$12131;
             $12133 = $12130 * $12132;
             $12134 = $12128 * $12132;
             $12135 = $12133 + $12134;
             $12136 = $12131 * 21.25;
             $12137 = $12135 - $12136;
             $12138 = +HEAPF64[$43>>3];
             $12139 = -$12138;
             $12140 = $12128 * $12139;
             $12141 = $12130 * $12139;
             $12142 = $12140 + $12141;
             $12143 = $12138 * 21.25;
             $12144 = $12142 - $12143;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1658,$12137,$12144,1.9999999999999999E-6);
             $12145 = HEAP8[$480>>0]|0;
             $12146 = ($12145<<24>>24)==(0);
             if ($12146) {
              break L604;
             }
             $12147 = +HEAPF64[$60>>3];
             $12148 = $12147 * 9.0;
             $12149 = +HEAPF64[$47>>3];
             $12150 = $12149 * $12149;
             $12151 = $12150 * 9.0;
             $12152 = $12148 - $12151;
             $12153 = (+__Z6IKsignd($12152));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1659,$12153,-1);
             $12154 = HEAP8[$481>>0]|0;
             $12155 = ($12154<<24>>24)==(0);
             if ($12155) {
              break L604;
             }
             $12156 = +HEAPF64[$x1658>>3];
             $12157 = $12156 + -1.5707963267949001;
             $12158 = +HEAPF64[$x1659>>3];
             $12159 = $12158 * 1.5707963267949001;
             $12160 = $12157 + $12159;
             $12161 = (+__Z5IKsind($12160));
             $12162 = (+__Z5IKcosd($12160));
             $12163 = $12160 > 3.14159265358979;
             do {
              if ($12163) {
               $12164 = $12160 + -6.2831853071795898;
               $12167 = $12164;
              } else {
               $12165 = $12160 < -3.14159265358979;
               if (!($12165)) {
                $12167 = $12160;
                break;
               }
               $12166 = $12160 + 6.2831853071795898;
               $12167 = $12166;
              }
             } while(0);
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             HEAPF64[$this>>3] = $12167;
             HEAPF64[$482>>3] = $12162;
             HEAPF64[$483>>3] = $12161;
             $12168 = +HEAPF64[$this>>3];
             $12169 = (+__Z5IKsind($12168));
             $12170 = (+__Z5IKcosd($12168));
             $12171 = +HEAPF64[$43>>3];
             $12172 = $12170 * $12171;
             $12173 = +HEAPF64[$45>>3];
             $12174 = $12169 * $12173;
             $12175 = $12170 * $12173;
             $12176 = $12169 * $12171;
             $12177 = $12176 - $12175;
             $12178 = $12174 * 0.089999999999999996;
             $12179 = -0.21249999999999999 - $12178;
             $12180 = $12172 * 0.089999999999999996;
             $12181 = $12179 - $12180;
             $12182 = +HEAPF64[$60>>3];
             $12183 = $12181 - $12182;
             $12184 = +HEAPF64[$47>>3];
             $12185 = $12184 * 1.1000000000000001;
             $12186 = $12183 - $12185;
             $12187 = (+__Z5IKabsd($12177));
             $12188 = $12187 > 5.0000000000000004E-6;
             if ($12188) {
              break L604;
             }
             $12189 = +HEAPF64[$76>>3];
             $12190 = +HEAPF64[$75>>3];
             $12191 = $12174 + 0.044999999999999998;
             $12192 = $12172 + $12191;
             $12193 = $12190 * 0.044999999999999998;
             $12194 = $12192 - $12193;
             $12195 = $12189 * 0.29999999999999999;
             $12196 = $12195 + $12194;
             $12197 = (+__Z5IKabsd($12196));
             $12198 = $12197 > 5.0000000000000004E-6;
             if ($12198) {
              break L604;
             }
             $12199 = (+__Z5IKabsd($12186));
             $12200 = $12199 > 5.0000000000000004E-6;
             if ($12200) {
              break L604;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L604;
            }
           } while(0);
           $11983 = +HEAPF64[$7>>3];
           $11984 = (+__Z5IKabsd($11983));
           $11985 = $11984 + 3.14159265358979;
           $11986 = (+__Z6IKfmoddd($11985,6.2831853071795898));
           $11987 = $11986 + -3.14159265358979;
           $11988 = +HEAPF64[$47>>3];
           $11989 = -0.84999999999999998 - $11988;
           $11990 = (+__Z5IKabsd($11987));
           $11991 = $11990 < 9.9999999999999995E-7;
           if (!($11991)) {
            break L604;
           }
           $11992 = +HEAPF64[$60>>3];
           $11993 = 0.72250000000000003 - $11992;
           $11994 = (+__Z5IKabsd($11993));
           $11995 = $11994 < 9.9999999999999995E-7;
           if (!($11995)) {
            break L604;
           }
           $11996 = (+__Z5IKabsd($11989));
           $11997 = $11996 < 9.9999999999999995E-7;
           if (!($11997)) {
            break L604;
           }
           HEAPF64[$184>>3] = 0.0;
           HEAPF64[$183>>3] = -1.0;
           HEAPF64[$3>>3] = 3.14159265358979;
           HEAPF64[$24>>3] = 0.0;
           HEAPF64[$23>>3] = 1.0;
           HEAPF64[$22>>3] = 0.0;
           HEAPF64[$76>>3] = 0.0;
           HEAPF64[$75>>3] = 1.0;
           HEAPF64[$7>>3] = 0.0;
           $11998 = +HEAPF64[$43>>3];
           $11999 = (+__Z5IKabsd($11998));
           $12000 = +HEAPF64[$45>>3];
           $12001 = (+__Z5IKabsd($12000));
           $12002 = $11999 + $12001;
           $12003 = (+__Z5IKabsd($12002));
           $12004 = $12003 < 9.9999999999999995E-7;
           if (!($12004)) {
            HEAP16[$j0valid793>>1] = 0;
            HEAP8[$2>>0] = 2;
            $12069 = +HEAPF64[$43>>3];
            $12070 = +HEAPF64[$45>>3];
            __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1653,$12069,$12070,1.9999999999999999E-6);
            $12071 = HEAP8[$473>>0]|0;
            $12072 = ($12071<<24>>24)==(0);
            if ($12072) {
             break L604;
            }
            $12073 = +HEAPF64[$x1653>>3];
            $12074 = -$12073;
            HEAPF64[$j0array790>>3] = $12074;
            $12075 = (+__Z5IKsind($12074));
            HEAPF64[$sj0array792>>3] = $12075;
            $12076 = (+__Z5IKcosd($12074));
            HEAPF64[$cj0array791>>3] = $12076;
            $12077 = 3.14159265358979 - $12073;
            HEAPF64[$474>>3] = $12077;
            $12078 = (+__Z5IKsind($12077));
            HEAPF64[$475>>3] = $12078;
            $12079 = +HEAPF64[$474>>3];
            $12080 = (+__Z5IKcosd($12079));
            HEAPF64[$476>>3] = $12080;
            $12081 = +HEAPF64[$j0array790>>3];
            $12082 = $12081 > 3.14159265358979;
            do {
             if ($12082) {
              $12083 = $12081 + -6.2831853071795898;
              HEAPF64[$j0array790>>3] = $12083;
             } else {
              $12084 = $12081 < -3.14159265358979;
              if (!($12084)) {
               break;
              }
              $12085 = $12081 + 6.2831853071795898;
              HEAPF64[$j0array790>>3] = $12085;
             }
            } while(0);
            HEAP8[$j0valid793>>0] = 1;
            $12086 = +HEAPF64[$474>>3];
            $12087 = $12086 > 3.14159265358979;
            do {
             if ($12087) {
              $12088 = $12086 + -6.2831853071795898;
              HEAPF64[$474>>3] = $12088;
             } else {
              $12089 = $12086 < -3.14159265358979;
              if (!($12089)) {
               break;
              }
              $12090 = $12086 + 6.2831853071795898;
              HEAPF64[$474>>3] = $12090;
             }
            } while(0);
            HEAP8[$477>>0] = 1;
            $12091 = HEAP8[$j0valid793>>0]|0;
            $12092 = ($12091<<24>>24)==(0);
            do {
             if (!($12092)) {
              HEAP8[$0>>0] = 0;
              HEAP8[$1>>0] = -1;
              $12093 = HEAP8[$1000>>0]|0;
              $12094 = ($12093<<24>>24)==(0);
              do {
               if (!($12094)) {
                $12095 = +HEAPF64[$cj0array791>>3];
                $12096 = +HEAPF64[$1001>>3];
                $12097 = $12095 - $12096;
                $12098 = (+__Z5IKabsd($12097));
                $12099 = $12098 < 9.9999999999999995E-7;
                if (!($12099)) {
                 break;
                }
                $12100 = +HEAPF64[$sj0array792>>3];
                $12101 = +HEAPF64[$1002>>3];
                $12102 = $12100 - $12101;
                $12103 = (+__Z5IKabsd($12102));
                $12104 = $12103 < 9.9999999999999995E-7;
                if (!($12104)) {
                 break;
                }
                HEAP8[$1000>>0] = 0;
                HEAP8[$1>>0] = 1;
               }
              } while(0);
              $12105 = +HEAPF64[$j0array790>>3];
              HEAPF64[$this>>3] = $12105;
              $12106 = +HEAPF64[$cj0array791>>3];
              HEAPF64[$478>>3] = $12106;
              $12107 = +HEAPF64[$sj0array792>>3];
              HEAPF64[$479>>3] = $12107;
              $12108 = +HEAPF64[$this>>3];
              $12109 = (+__Z5IKcosd($12108));
              $12110 = (+__Z5IKsind($12108));
              $12111 = +HEAPF64[$45>>3];
              $12112 = $12109 * $12111;
              $12113 = +HEAPF64[$43>>3];
              $12114 = $12110 * $12113;
              $12115 = $12114 - $12112;
              $12116 = (+__Z5IKabsd($12115));
              $12117 = $12116 > 5.0000000000000004E-6;
              if ($12117) {
               break;
              }
              $12118 = $12113 * -0.089999999999999996;
              $12119 = $12109 * $12118;
              $12120 = $12111 * -0.089999999999999996;
              $12121 = $12110 * $12120;
              $12122 = $12121 + $12119;
              $12123 = (+__Z5IKabsd($12122));
              $12124 = $12123 > 5.0000000000000004E-6;
              if ($12124) {
               break;
              }
              __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             }
            } while(0);
            $12125 = HEAP8[$996>>0]|0;
            $12126 = ($12125<<24>>24)==(0);
            if ($12126) {
             break L604;
            }
            HEAP8[$0>>0] = 1;
            HEAP8[$1>>0] = -1;
            $18456 = +HEAPF64[$997>>3];
            HEAPF64[$this>>3] = $18456;
            $18457 = +HEAPF64[$998>>3];
            HEAPF64[$478>>3] = $18457;
            $18458 = +HEAPF64[$999>>3];
            HEAPF64[$479>>3] = $18458;
            $18459 = +HEAPF64[$this>>3];
            $18460 = (+__Z5IKcosd($18459));
            $18461 = (+__Z5IKsind($18459));
            $18462 = +HEAPF64[$45>>3];
            $18463 = $18460 * $18462;
            $18464 = +HEAPF64[$43>>3];
            $18465 = $18461 * $18464;
            $18466 = $18465 - $18463;
            $18467 = (+__Z5IKabsd($18466));
            $18468 = $18467 > 5.0000000000000004E-6;
            if ($18468) {
             break L604;
            }
            $18469 = $18464 * -0.089999999999999996;
            $18470 = $18460 * $18469;
            $18471 = $18462 * -0.089999999999999996;
            $18472 = $18461 * $18471;
            $18473 = $18472 + $18470;
            $18474 = (+__Z5IKabsd($18473));
            $18475 = $18474 > 5.0000000000000004E-6;
            if ($18475) {
             break L604;
            }
            __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
            break L604;
           }
           HEAPF64[$184>>3] = 0.0;
           HEAPF64[$183>>3] = -1.0;
           HEAPF64[$3>>3] = 3.14159265358979;
           HEAPF64[$24>>3] = 0.0;
           HEAPF64[$23>>3] = 1.0;
           HEAPF64[$22>>3] = 0.0;
           HEAPF64[$76>>3] = 0.0;
           HEAPF64[$75>>3] = 1.0;
           HEAPF64[$7>>3] = 0.0;
           $12005 = +HEAPF64[$60>>3];
           $12006 = +HEAPF64[$47>>3];
           $12007 = $12006 * $12006;
           $12008 = $12005 - $12007;
           $12009 = (+__Z5IKabsd($12008));
           $12010 = $12009 < 9.9999999999999995E-7;
           if ($12010) {
            break L604;
           }
           HEAP16[$j0valid786>>1] = 0;
           HEAP8[$2>>0] = 2;
           $12011 = +HEAPF64[$43>>3];
           $12012 = $12011 * -0.089999999999999996;
           $12013 = +HEAPF64[$45>>3];
           $12014 = $12013 * -0.089999999999999996;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1649,$12012,$12014,1.9999999999999999E-6);
           $12015 = HEAP8[$466>>0]|0;
           $12016 = ($12015<<24>>24)==(0);
           if ($12016) {
            break L604;
           }
           $12017 = +HEAPF64[$x1649>>3];
           $12018 = -$12017;
           HEAPF64[$j0array783>>3] = $12018;
           $12019 = (+__Z5IKsind($12018));
           HEAPF64[$sj0array785>>3] = $12019;
           $12020 = (+__Z5IKcosd($12018));
           HEAPF64[$cj0array784>>3] = $12020;
           $12021 = 3.14159265358979 - $12017;
           HEAPF64[$467>>3] = $12021;
           $12022 = (+__Z5IKsind($12021));
           HEAPF64[$468>>3] = $12022;
           $12023 = +HEAPF64[$467>>3];
           $12024 = (+__Z5IKcosd($12023));
           HEAPF64[$469>>3] = $12024;
           $12025 = +HEAPF64[$j0array783>>3];
           $12026 = $12025 > 3.14159265358979;
           do {
            if ($12026) {
             $12027 = $12025 + -6.2831853071795898;
             HEAPF64[$j0array783>>3] = $12027;
            } else {
             $12028 = $12025 < -3.14159265358979;
             if (!($12028)) {
              break;
             }
             $12029 = $12025 + 6.2831853071795898;
             HEAPF64[$j0array783>>3] = $12029;
            }
           } while(0);
           HEAP8[$j0valid786>>0] = 1;
           $12030 = +HEAPF64[$467>>3];
           $12031 = $12030 > 3.14159265358979;
           do {
            if ($12031) {
             $12032 = $12030 + -6.2831853071795898;
             HEAPF64[$467>>3] = $12032;
            } else {
             $12033 = $12030 < -3.14159265358979;
             if (!($12033)) {
              break;
             }
             $12034 = $12030 + 6.2831853071795898;
             HEAPF64[$467>>3] = $12034;
            }
           } while(0);
           HEAP8[$470>>0] = 1;
           $12035 = HEAP8[$j0valid786>>0]|0;
           $12036 = ($12035<<24>>24)==(0);
           do {
            if (!($12036)) {
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             $12037 = HEAP8[$993>>0]|0;
             $12038 = ($12037<<24>>24)==(0);
             do {
              if (!($12038)) {
               $12039 = +HEAPF64[$cj0array784>>3];
               $12040 = +HEAPF64[$994>>3];
               $12041 = $12039 - $12040;
               $12042 = (+__Z5IKabsd($12041));
               $12043 = $12042 < 9.9999999999999995E-7;
               if (!($12043)) {
                break;
               }
               $12044 = +HEAPF64[$sj0array785>>3];
               $12045 = +HEAPF64[$995>>3];
               $12046 = $12044 - $12045;
               $12047 = (+__Z5IKabsd($12046));
               $12048 = $12047 < 9.9999999999999995E-7;
               if (!($12048)) {
                break;
               }
               HEAP8[$993>>0] = 0;
               HEAP8[$1>>0] = 1;
              }
             } while(0);
             $12049 = +HEAPF64[$j0array783>>3];
             HEAPF64[$this>>3] = $12049;
             $12050 = +HEAPF64[$cj0array784>>3];
             HEAPF64[$471>>3] = $12050;
             $12051 = +HEAPF64[$sj0array785>>3];
             HEAPF64[$472>>3] = $12051;
             $12052 = +HEAPF64[$this>>3];
             $12053 = (+__Z5IKsind($12052));
             $12054 = (+__Z5IKcosd($12052));
             $12055 = +HEAPF64[$43>>3];
             $12056 = $12054 * $12055;
             $12057 = +HEAPF64[$45>>3];
             $12058 = $12053 * $12057;
             $12059 = $12056 + $12058;
             $12060 = (+__Z5IKabsd($12059));
             $12061 = $12060 > 5.0000000000000004E-6;
             if ($12061) {
              break;
             }
             $12062 = $12054 * $12057;
             $12063 = $12053 * $12055;
             $12064 = $12063 - $12062;
             $12065 = (+__Z5IKabsd($12064));
             $12066 = $12065 > 5.0000000000000004E-6;
             if ($12066) {
              break;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
            }
           } while(0);
           $12067 = HEAP8[$989>>0]|0;
           $12068 = ($12067<<24>>24)==(0);
           if ($12068) {
            break L604;
           }
           HEAP8[$0>>0] = 1;
           HEAP8[$1>>0] = -1;
           $18476 = +HEAPF64[$990>>3];
           HEAPF64[$this>>3] = $18476;
           $18477 = +HEAPF64[$991>>3];
           HEAPF64[$471>>3] = $18477;
           $18478 = +HEAPF64[$992>>3];
           HEAPF64[$472>>3] = $18478;
           $18479 = +HEAPF64[$this>>3];
           $18480 = (+__Z5IKsind($18479));
           $18481 = (+__Z5IKcosd($18479));
           $18482 = +HEAPF64[$43>>3];
           $18483 = $18481 * $18482;
           $18484 = +HEAPF64[$45>>3];
           $18485 = $18480 * $18484;
           $18486 = $18483 + $18485;
           $18487 = (+__Z5IKabsd($18486));
           $18488 = $18487 > 5.0000000000000004E-6;
           if ($18488) {
            break L604;
           }
           $18489 = $18481 * $18484;
           $18490 = $18480 * $18482;
           $18491 = $18490 - $18489;
           $18492 = (+__Z5IKabsd($18491));
           $18493 = $18492 > 5.0000000000000004E-6;
           if ($18493) {
            break L604;
           }
           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           break L604;
          }
         } while(0);
         $12271 = +HEAPF64[$76>>3];
         $12272 = $12271 * 0.044999999999999998;
         $12273 = +HEAPF64[$75>>3];
         $12274 = $12273 * 0.29999999999999999;
         $12275 = $12272 + $12274;
         $12276 = +HEAPF64[$22>>3];
         $12277 = $12276 + -3.14159265358979;
         $12278 = (+__Z5IKabsd($12277));
         $12279 = $12278 + 3.14159265358979;
         $12280 = (+__Z6IKfmoddd($12279,6.2831853071795898));
         $12281 = $12280 + -3.14159265358979;
         $12282 = +HEAPF64[$47>>3];
         $12283 = -0.55000000000000004 - $12282;
         $12284 = $12283 - $12275;
         $12285 = $12275 + 0.55000000000000004;
         $12286 = $12285 + $12282;
         $12287 = (+__Z5IKabsd($12281));
         $12288 = $12287 < 9.9999999999999995E-7;
         do {
          if ($12288) {
           $12289 = +HEAPF64[$60>>3];
           $12290 = $12271 * 0.076499999999999999;
           $12291 = $12290 + 0.39655000000000001;
           $12292 = $12291 - $12289;
           $12293 = $12273 * 0.32595000000000002;
           $12294 = $12293 + $12292;
           $12295 = (+__Z5IKabsd($12294));
           $12296 = $12295 < 9.9999999999999995E-7;
           if (!($12296)) {
            break;
           }
           $12297 = (+__Z5IKabsd($12284));
           $12298 = $12297 < 9.9999999999999995E-7;
           if (!($12298)) {
            break;
           }
           $12299 = (+__Z5IKabsd($12286));
           $12300 = $12299 < 9.9999999999999995E-7;
           if (!($12300)) {
            break;
           }
           HEAPF64[$184>>3] = 0.0;
           HEAPF64[$183>>3] = -1.0;
           HEAPF64[$3>>3] = 3.14159265358979;
           HEAPF64[$24>>3] = 0.0;
           HEAPF64[$23>>3] = -1.0;
           HEAPF64[$22>>3] = 3.14159265358979;
           $12301 = +HEAPF64[$76>>3];
           $12302 = $12301 * 20.0;
           $12303 = +HEAPF64[$43>>3];
           $12304 = $12303 * 3.0;
           $12305 = +HEAPF64[$45>>3];
           $12306 = $12305 * 3.0;
           $12307 = +HEAPF64[$60>>3];
           $12308 = +HEAPF64[$47>>3];
           $12309 = $12308 * $12308;
           $12310 = $12307 - $12309;
           $12311 = +HEAPF64[$75>>3];
           $12312 = (+__Z6IKsignd($12310));
           $12313 = (+__Z5IKabsd($12310));
           $12314 = $12313 < 9.9999999999999995E-7;
           do {
            if (!($12314)) {
             $12315 = $12302 * $12305;
             $12316 = $12306 + $12315;
             $12317 = $12306 * $12311;
             $12318 = $12316 - $12317;
             $12319 = (+__Z5IKabsd($12318));
             $12320 = $12303 * $12302;
             $12321 = $12304 + $12320;
             $12322 = $12304 * $12311;
             $12323 = $12321 - $12322;
             $12324 = (+__Z5IKabsd($12323));
             $12325 = $12319 + $12324;
             $12326 = (+__Z5IKabsd($12325));
             $12327 = $12326 < 9.9999999999999995E-7;
             if ($12327) {
              break;
             }
             $12328 = (+__Z5IKabsd($12312));
             $12329 = $12328 < 9.9999999999999995E-7;
             if ($12329) {
              break;
             }
             HEAP8[$2>>0] = 1;
             $12581 = +HEAPF64[$76>>3];
             $12582 = $12581 * 0.29999999999999999;
             $12583 = +HEAPF64[$43>>3];
             $12584 = $12583 * 0.044999999999999998;
             $12585 = +HEAPF64[$45>>3];
             $12586 = $12585 * 0.044999999999999998;
             $12587 = +HEAPF64[$75>>3];
             $12588 = -$12587;
             $12589 = $12586 * $12588;
             $12590 = $12586 + $12589;
             $12591 = $12582 * $12585;
             $12592 = $12591 + $12590;
             $12593 = $12584 * $12588;
             $12594 = $12584 + $12593;
             $12595 = $12583 * $12582;
             $12596 = $12595 + $12594;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1705,$12592,$12596,1.9999999999999999E-6);
             $12597 = HEAP8[$506>>0]|0;
             $12598 = ($12597<<24>>24)==(0);
             if ($12598) {
              break L604;
             }
             $12599 = +HEAPF64[$60>>3];
             $12600 = +HEAPF64[$47>>3];
             $12601 = $12600 * $12600;
             $12602 = $12599 - $12601;
             $12603 = (+__Z6IKsignd($12602));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1706,$12603,-1);
             $12604 = HEAP8[$507>>0]|0;
             $12605 = ($12604<<24>>24)==(0);
             if ($12605) {
              break L604;
             }
             $12606 = +HEAPF64[$x1705>>3];
             $12607 = $12606 + -1.5707963267949001;
             $12608 = +HEAPF64[$x1706>>3];
             $12609 = $12608 * 1.5707963267949001;
             $12610 = $12607 + $12609;
             $12611 = (+__Z5IKsind($12610));
             $12612 = (+__Z5IKcosd($12610));
             $12613 = $12610 > 3.14159265358979;
             do {
              if ($12613) {
               $12614 = $12610 + -6.2831853071795898;
               $12617 = $12614;
              } else {
               $12615 = $12610 < -3.14159265358979;
               if (!($12615)) {
                $12617 = $12610;
                break;
               }
               $12616 = $12610 + 6.2831853071795898;
               $12617 = $12616;
              }
             } while(0);
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             HEAPF64[$this>>3] = $12617;
             HEAPF64[$508>>3] = $12612;
             HEAPF64[$509>>3] = $12611;
             $12618 = +HEAPF64[$this>>3];
             $12619 = (+__Z5IKcosd($12618));
             $12620 = (+__Z5IKsind($12618));
             $12621 = +HEAPF64[$45>>3];
             $12622 = +HEAPF64[$43>>3];
             $12623 = $12619 * $12622;
             $12624 = $12619 * $12621;
             $12625 = $12620 * $12622;
             $12626 = $12625 - $12624;
             $12627 = +HEAPF64[$60>>3];
             $12628 = -0.21249999999999999 - $12627;
             $12629 = +HEAPF64[$47>>3];
             $12630 = $12629 * 1.1000000000000001;
             $12631 = $12628 - $12630;
             $12632 = $12623 * 0.089999999999999996;
             $12633 = $12632 + $12631;
             $12634 = $12621 * 0.089999999999999996;
             $12635 = $12620 * $12634;
             $12636 = $12635 + $12633;
             $12637 = (+__Z5IKabsd($12626));
             $12638 = $12637 > 5.0000000000000004E-6;
             if ($12638) {
              break L604;
             }
             $12639 = +HEAPF64[$76>>3];
             $12640 = +HEAPF64[$75>>3];
             $12641 = $12620 * $12621;
             $12642 = 0.044999999999999998 - $12641;
             $12643 = $12642 - $12623;
             $12644 = $12640 * 0.044999999999999998;
             $12645 = $12643 - $12644;
             $12646 = $12639 * 0.29999999999999999;
             $12647 = $12646 + $12645;
             $12648 = (+__Z5IKabsd($12647));
             $12649 = $12648 > 5.0000000000000004E-6;
             if ($12649) {
              break L604;
             }
             $12650 = (+__Z5IKabsd($12636));
             $12651 = $12650 > 5.0000000000000004E-6;
             if ($12651) {
              break L604;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L604;
            }
           } while(0);
           HEAPF64[$184>>3] = 0.0;
           HEAPF64[$183>>3] = -1.0;
           HEAPF64[$3>>3] = 3.14159265358979;
           HEAPF64[$24>>3] = 0.0;
           HEAPF64[$23>>3] = -1.0;
           HEAPF64[$22>>3] = 3.14159265358979;
           $12330 = +HEAPF64[$47>>3];
           $12331 = $12330 * $12330;
           $12332 = +HEAPF64[$60>>3];
           $12333 = $12332 * 80.0;
           $12334 = $12330 * 88.0;
           $12335 = $12331 - $12332;
           $12336 = +HEAPF64[$45>>3];
           $12337 = -$12336;
           $12338 = $12333 * $12337;
           $12339 = $12334 * $12337;
           $12340 = $12338 + $12339;
           $12341 = $12336 * 17.0;
           $12342 = $12340 - $12341;
           $12343 = (+__Z5IKabsd($12342));
           $12344 = +HEAPF64[$43>>3];
           $12345 = $12344 * 17.0;
           $12346 = -$12344;
           $12347 = $12334 * $12346;
           $12348 = $12347 - $12345;
           $12349 = $12333 * $12346;
           $12350 = $12349 + $12348;
           $12351 = (+__Z5IKabsd($12350));
           $12352 = $12343 + $12351;
           $12353 = (+__Z5IKabsd($12335));
           $12354 = $12353 < 9.9999999999999995E-7;
           do {
            if (!($12354)) {
             $12355 = $12332 * 9.0;
             $12356 = $12331 * 9.0;
             $12357 = $12356 - $12355;
             $12358 = (+__Z6IKsignd($12357));
             $12359 = (+__Z5IKabsd($12358));
             $12360 = $12359 < 9.9999999999999995E-7;
             if ($12360) {
              break;
             }
             $12361 = (+__Z5IKabsd($12352));
             $12362 = $12361 < 9.9999999999999995E-7;
             if ($12362) {
              break;
             }
             HEAP8[$2>>0] = 1;
             $12508 = +HEAPF64[$47>>3];
             $12509 = $12508 * 110.0;
             $12510 = +HEAPF64[$60>>3];
             $12511 = $12510 * 100.0;
             $12512 = $12510 * 9.0;
             $12513 = $12508 * $12508;
             $12514 = $12513 * 9.0;
             $12515 = $12514 - $12512;
             $12516 = (+__Z6IKsignd($12515));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1696,$12516,-1);
             $12517 = HEAP8[$502>>0]|0;
             $12518 = ($12517<<24>>24)==(0);
             if ($12518) {
              break L604;
             }
             $12519 = +HEAPF64[$45>>3];
             $12520 = -$12519;
             $12521 = $12509 * $12520;
             $12522 = $12511 * $12520;
             $12523 = $12521 + $12522;
             $12524 = $12519 * 21.25;
             $12525 = $12523 - $12524;
             $12526 = +HEAPF64[$43>>3];
             $12527 = $12526 * 21.25;
             $12528 = -$12526;
             $12529 = $12511 * $12528;
             $12530 = $12529 - $12527;
             $12531 = $12509 * $12528;
             $12532 = $12531 + $12530;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1697,$12525,$12532,1.9999999999999999E-6);
             $12533 = HEAP8[$503>>0]|0;
             $12534 = ($12533<<24>>24)==(0);
             if ($12534) {
              break L604;
             }
             $12535 = +HEAPF64[$x1696>>3];
             $12536 = $12535 * 1.5707963267949001;
             $12537 = $12536 + -1.5707963267949001;
             $12538 = +HEAPF64[$x1697>>3];
             $12539 = $12538 + $12537;
             $12540 = (+__Z5IKsind($12539));
             $12541 = (+__Z5IKcosd($12539));
             $12542 = $12539 > 3.14159265358979;
             do {
              if ($12542) {
               $12543 = $12539 + -6.2831853071795898;
               $12546 = $12543;
              } else {
               $12544 = $12539 < -3.14159265358979;
               if (!($12544)) {
                $12546 = $12539;
                break;
               }
               $12545 = $12539 + 6.2831853071795898;
               $12546 = $12545;
              }
             } while(0);
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             HEAPF64[$this>>3] = $12546;
             HEAPF64[$504>>3] = $12541;
             HEAPF64[$505>>3] = $12540;
             $12547 = +HEAPF64[$this>>3];
             $12548 = (+__Z5IKcosd($12547));
             $12549 = (+__Z5IKsind($12547));
             $12550 = +HEAPF64[$45>>3];
             $12551 = +HEAPF64[$43>>3];
             $12552 = $12548 * $12551;
             $12553 = $12548 * $12550;
             $12554 = $12549 * $12551;
             $12555 = $12554 - $12553;
             $12556 = +HEAPF64[$60>>3];
             $12557 = -0.21249999999999999 - $12556;
             $12558 = +HEAPF64[$47>>3];
             $12559 = $12558 * 1.1000000000000001;
             $12560 = $12557 - $12559;
             $12561 = $12552 * 0.089999999999999996;
             $12562 = $12561 + $12560;
             $12563 = $12550 * 0.089999999999999996;
             $12564 = $12549 * $12563;
             $12565 = $12564 + $12562;
             $12566 = (+__Z5IKabsd($12555));
             $12567 = $12566 > 5.0000000000000004E-6;
             if ($12567) {
              break L604;
             }
             $12568 = +HEAPF64[$76>>3];
             $12569 = +HEAPF64[$75>>3];
             $12570 = 0.044999999999999998 - $12552;
             $12571 = $12549 * $12550;
             $12572 = $12570 - $12571;
             $12573 = $12569 * 0.044999999999999998;
             $12574 = $12572 - $12573;
             $12575 = $12568 * 0.29999999999999999;
             $12576 = $12575 + $12574;
             $12577 = (+__Z5IKabsd($12576));
             $12578 = $12577 > 5.0000000000000004E-6;
             if ($12578) {
              break L604;
             }
             $12579 = (+__Z5IKabsd($12565));
             $12580 = $12579 > 5.0000000000000004E-6;
             if ($12580) {
              break L604;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L604;
            }
           } while(0);
           $12363 = +HEAPF64[$7>>3];
           $12364 = (+__Z5IKabsd($12363));
           $12365 = $12364 + 3.14159265358979;
           $12366 = (+__Z6IKfmoddd($12365,6.2831853071795898));
           $12367 = $12366 + -3.14159265358979;
           $12368 = +HEAPF64[$47>>3];
           $12369 = -0.84999999999999998 - $12368;
           $12370 = (+__Z5IKabsd($12367));
           $12371 = $12370 < 9.9999999999999995E-7;
           if (!($12371)) {
            break L604;
           }
           $12372 = +HEAPF64[$60>>3];
           $12373 = 0.72250000000000003 - $12372;
           $12374 = (+__Z5IKabsd($12373));
           $12375 = $12374 < 9.9999999999999995E-7;
           if (!($12375)) {
            break L604;
           }
           $12376 = (+__Z5IKabsd($12369));
           $12377 = $12376 < 9.9999999999999995E-7;
           if (!($12377)) {
            break L604;
           }
           HEAPF64[$184>>3] = 0.0;
           HEAPF64[$183>>3] = -1.0;
           HEAPF64[$3>>3] = 3.14159265358979;
           HEAPF64[$24>>3] = 0.0;
           HEAPF64[$23>>3] = -1.0;
           HEAPF64[$22>>3] = 3.14159265358979;
           HEAPF64[$76>>3] = 0.0;
           HEAPF64[$75>>3] = 1.0;
           HEAPF64[$7>>3] = 0.0;
           $12378 = +HEAPF64[$43>>3];
           $12379 = (+__Z5IKabsd($12378));
           $12380 = +HEAPF64[$45>>3];
           $12381 = (+__Z5IKabsd($12380));
           $12382 = $12379 + $12381;
           $12383 = (+__Z5IKabsd($12382));
           $12384 = $12383 < 9.9999999999999995E-7;
           if (!($12384)) {
            HEAP16[$j0valid829>>1] = 0;
            HEAP8[$2>>0] = 2;
            $12450 = +HEAPF64[$45>>3];
            $12451 = -$12450;
            $12452 = +HEAPF64[$43>>3];
            __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1689,$12451,$12452,1.9999999999999999E-6);
            $12453 = HEAP8[$495>>0]|0;
            $12454 = ($12453<<24>>24)==(0);
            if ($12454) {
             break L604;
            }
            $12455 = +HEAPF64[$x1689>>3];
            $12456 = -$12455;
            HEAPF64[$j0array826>>3] = $12456;
            $12457 = (+__Z5IKsind($12456));
            HEAPF64[$sj0array828>>3] = $12457;
            $12458 = (+__Z5IKcosd($12456));
            HEAPF64[$cj0array827>>3] = $12458;
            $12459 = 3.14159265358979 - $12455;
            HEAPF64[$496>>3] = $12459;
            $12460 = (+__Z5IKsind($12459));
            HEAPF64[$497>>3] = $12460;
            $12461 = +HEAPF64[$496>>3];
            $12462 = (+__Z5IKcosd($12461));
            HEAPF64[$498>>3] = $12462;
            $12463 = +HEAPF64[$j0array826>>3];
            $12464 = $12463 > 3.14159265358979;
            do {
             if ($12464) {
              $12465 = $12463 + -6.2831853071795898;
              HEAPF64[$j0array826>>3] = $12465;
             } else {
              $12466 = $12463 < -3.14159265358979;
              if (!($12466)) {
               break;
              }
              $12467 = $12463 + 6.2831853071795898;
              HEAPF64[$j0array826>>3] = $12467;
             }
            } while(0);
            HEAP8[$j0valid829>>0] = 1;
            $12468 = +HEAPF64[$496>>3];
            $12469 = $12468 > 3.14159265358979;
            do {
             if ($12469) {
              $12470 = $12468 + -6.2831853071795898;
              HEAPF64[$496>>3] = $12470;
             } else {
              $12471 = $12468 < -3.14159265358979;
              if (!($12471)) {
               break;
              }
              $12472 = $12468 + 6.2831853071795898;
              HEAPF64[$496>>3] = $12472;
             }
            } while(0);
            HEAP8[$499>>0] = 1;
            $12473 = HEAP8[$j0valid829>>0]|0;
            $12474 = ($12473<<24>>24)==(0);
            do {
             if (!($12474)) {
              HEAP8[$0>>0] = 0;
              HEAP8[$1>>0] = -1;
              $12475 = HEAP8[$1014>>0]|0;
              $12476 = ($12475<<24>>24)==(0);
              do {
               if (!($12476)) {
                $12477 = +HEAPF64[$cj0array827>>3];
                $12478 = +HEAPF64[$1015>>3];
                $12479 = $12477 - $12478;
                $12480 = (+__Z5IKabsd($12479));
                $12481 = $12480 < 9.9999999999999995E-7;
                if (!($12481)) {
                 break;
                }
                $12482 = +HEAPF64[$sj0array828>>3];
                $12483 = +HEAPF64[$1016>>3];
                $12484 = $12482 - $12483;
                $12485 = (+__Z5IKabsd($12484));
                $12486 = $12485 < 9.9999999999999995E-7;
                if (!($12486)) {
                 break;
                }
                HEAP8[$1014>>0] = 0;
                HEAP8[$1>>0] = 1;
               }
              } while(0);
              $12487 = +HEAPF64[$j0array826>>3];
              HEAPF64[$this>>3] = $12487;
              $12488 = +HEAPF64[$cj0array827>>3];
              HEAPF64[$500>>3] = $12488;
              $12489 = +HEAPF64[$sj0array828>>3];
              HEAPF64[$501>>3] = $12489;
              $12490 = +HEAPF64[$this>>3];
              $12491 = (+__Z5IKcosd($12490));
              $12492 = (+__Z5IKsind($12490));
              $12493 = +HEAPF64[$45>>3];
              $12494 = $12492 * $12493;
              $12495 = +HEAPF64[$43>>3];
              $12496 = $12491 * $12495;
              $12497 = -$12496;
              $12498 = $12497 - $12494;
              $12499 = (+__Z5IKabsd($12498));
              $12500 = $12499 > 5.0000000000000004E-6;
              if ($12500) {
               break;
              }
              $12501 = $12494 * 0.089999999999999996;
              $12502 = $12496 * 0.089999999999999996;
              $12503 = $12501 + $12502;
              $12504 = (+__Z5IKabsd($12503));
              $12505 = $12504 > 5.0000000000000004E-6;
              if ($12505) {
               break;
              }
              __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             }
            } while(0);
            $12506 = HEAP8[$1010>>0]|0;
            $12507 = ($12506<<24>>24)==(0);
            if ($12507) {
             break L604;
            }
            HEAP8[$0>>0] = 1;
            HEAP8[$1>>0] = -1;
            $18418 = +HEAPF64[$1011>>3];
            HEAPF64[$this>>3] = $18418;
            $18419 = +HEAPF64[$1012>>3];
            HEAPF64[$500>>3] = $18419;
            $18420 = +HEAPF64[$1013>>3];
            HEAPF64[$501>>3] = $18420;
            $18421 = +HEAPF64[$this>>3];
            $18422 = (+__Z5IKcosd($18421));
            $18423 = (+__Z5IKsind($18421));
            $18424 = +HEAPF64[$45>>3];
            $18425 = $18423 * $18424;
            $18426 = +HEAPF64[$43>>3];
            $18427 = $18422 * $18426;
            $18428 = -$18427;
            $18429 = $18428 - $18425;
            $18430 = (+__Z5IKabsd($18429));
            $18431 = $18430 > 5.0000000000000004E-6;
            if ($18431) {
             break L604;
            }
            $18432 = $18425 * 0.089999999999999996;
            $18433 = $18427 * 0.089999999999999996;
            $18434 = $18432 + $18433;
            $18435 = (+__Z5IKabsd($18434));
            $18436 = $18435 > 5.0000000000000004E-6;
            if ($18436) {
             break L604;
            }
            __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
            break L604;
           }
           HEAPF64[$184>>3] = 0.0;
           HEAPF64[$183>>3] = -1.0;
           HEAPF64[$3>>3] = 3.14159265358979;
           HEAPF64[$24>>3] = 0.0;
           HEAPF64[$23>>3] = -1.0;
           HEAPF64[$22>>3] = 3.14159265358979;
           HEAPF64[$76>>3] = 0.0;
           HEAPF64[$75>>3] = 1.0;
           HEAPF64[$7>>3] = 0.0;
           $12385 = +HEAPF64[$60>>3];
           $12386 = +HEAPF64[$47>>3];
           $12387 = $12386 * $12386;
           $12388 = $12385 - $12387;
           $12389 = (+__Z5IKabsd($12388));
           $12390 = $12389 < 9.9999999999999995E-7;
           if ($12390) {
            break L604;
           }
           HEAP16[$j0valid822>>1] = 0;
           HEAP8[$2>>0] = 2;
           $12391 = +HEAPF64[$43>>3];
           $12392 = $12391 * 0.089999999999999996;
           $12393 = +HEAPF64[$45>>3];
           $12394 = $12393 * 0.089999999999999996;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1684,$12392,$12394,1.9999999999999999E-6);
           $12395 = HEAP8[$488>>0]|0;
           $12396 = ($12395<<24>>24)==(0);
           if ($12396) {
            break L604;
           }
           $12397 = +HEAPF64[$x1684>>3];
           $12398 = -$12397;
           HEAPF64[$j0array819>>3] = $12398;
           $12399 = (+__Z5IKsind($12398));
           HEAPF64[$sj0array821>>3] = $12399;
           $12400 = (+__Z5IKcosd($12398));
           HEAPF64[$cj0array820>>3] = $12400;
           $12401 = 3.14159265358979 - $12397;
           HEAPF64[$489>>3] = $12401;
           $12402 = (+__Z5IKsind($12401));
           HEAPF64[$490>>3] = $12402;
           $12403 = +HEAPF64[$489>>3];
           $12404 = (+__Z5IKcosd($12403));
           HEAPF64[$491>>3] = $12404;
           $12405 = +HEAPF64[$j0array819>>3];
           $12406 = $12405 > 3.14159265358979;
           do {
            if ($12406) {
             $12407 = $12405 + -6.2831853071795898;
             HEAPF64[$j0array819>>3] = $12407;
            } else {
             $12408 = $12405 < -3.14159265358979;
             if (!($12408)) {
              break;
             }
             $12409 = $12405 + 6.2831853071795898;
             HEAPF64[$j0array819>>3] = $12409;
            }
           } while(0);
           HEAP8[$j0valid822>>0] = 1;
           $12410 = +HEAPF64[$489>>3];
           $12411 = $12410 > 3.14159265358979;
           do {
            if ($12411) {
             $12412 = $12410 + -6.2831853071795898;
             HEAPF64[$489>>3] = $12412;
            } else {
             $12413 = $12410 < -3.14159265358979;
             if (!($12413)) {
              break;
             }
             $12414 = $12410 + 6.2831853071795898;
             HEAPF64[$489>>3] = $12414;
            }
           } while(0);
           HEAP8[$492>>0] = 1;
           $12415 = HEAP8[$j0valid822>>0]|0;
           $12416 = ($12415<<24>>24)==(0);
           do {
            if (!($12416)) {
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             $12417 = HEAP8[$1007>>0]|0;
             $12418 = ($12417<<24>>24)==(0);
             do {
              if (!($12418)) {
               $12419 = +HEAPF64[$cj0array820>>3];
               $12420 = +HEAPF64[$1008>>3];
               $12421 = $12419 - $12420;
               $12422 = (+__Z5IKabsd($12421));
               $12423 = $12422 < 9.9999999999999995E-7;
               if (!($12423)) {
                break;
               }
               $12424 = +HEAPF64[$sj0array821>>3];
               $12425 = +HEAPF64[$1009>>3];
               $12426 = $12424 - $12425;
               $12427 = (+__Z5IKabsd($12426));
               $12428 = $12427 < 9.9999999999999995E-7;
               if (!($12428)) {
                break;
               }
               HEAP8[$1007>>0] = 0;
               HEAP8[$1>>0] = 1;
              }
             } while(0);
             $12429 = +HEAPF64[$j0array819>>3];
             HEAPF64[$this>>3] = $12429;
             $12430 = +HEAPF64[$cj0array820>>3];
             HEAPF64[$493>>3] = $12430;
             $12431 = +HEAPF64[$sj0array821>>3];
             HEAPF64[$494>>3] = $12431;
             $12432 = +HEAPF64[$this>>3];
             $12433 = (+__Z5IKcosd($12432));
             $12434 = (+__Z5IKsind($12432));
             $12435 = +HEAPF64[$45>>3];
             $12436 = -$12435;
             $12437 = $12433 * $12436;
             $12438 = +HEAPF64[$43>>3];
             $12439 = $12434 * $12438;
             $12440 = $12437 + $12439;
             $12441 = (+__Z5IKabsd($12440));
             $12442 = $12441 > 5.0000000000000004E-6;
             if ($12442) {
              break;
             }
             $12443 = $12434 * $12436;
             $12444 = $12433 * $12438;
             $12445 = $12443 - $12444;
             $12446 = (+__Z5IKabsd($12445));
             $12447 = $12446 > 5.0000000000000004E-6;
             if ($12447) {
              break;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
            }
           } while(0);
           $12448 = HEAP8[$1003>>0]|0;
           $12449 = ($12448<<24>>24)==(0);
           if ($12449) {
            break L604;
           }
           HEAP8[$0>>0] = 1;
           HEAP8[$1>>0] = -1;
           $18437 = +HEAPF64[$1004>>3];
           HEAPF64[$this>>3] = $18437;
           $18438 = +HEAPF64[$1005>>3];
           HEAPF64[$493>>3] = $18438;
           $18439 = +HEAPF64[$1006>>3];
           HEAPF64[$494>>3] = $18439;
           $18440 = +HEAPF64[$this>>3];
           $18441 = (+__Z5IKcosd($18440));
           $18442 = (+__Z5IKsind($18440));
           $18443 = +HEAPF64[$45>>3];
           $18444 = -$18443;
           $18445 = $18441 * $18444;
           $18446 = +HEAPF64[$43>>3];
           $18447 = $18442 * $18446;
           $18448 = $18445 + $18447;
           $18449 = (+__Z5IKabsd($18448));
           $18450 = $18449 > 5.0000000000000004E-6;
           if ($18450) {
            break L604;
           }
           $18451 = $18442 * $18444;
           $18452 = $18441 * $18446;
           $18453 = $18451 - $18452;
           $18454 = (+__Z5IKabsd($18453));
           $18455 = $18454 > 5.0000000000000004E-6;
           if ($18455) {
            break L604;
           }
           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           break L604;
          }
         } while(0);
         $12652 = +HEAPF64[$76>>3];
         $12653 = $12652 * 0.044999999999999998;
         $12654 = +HEAPF64[$75>>3];
         $12655 = $12654 * 0.29999999999999999;
         $12656 = $12653 + $12655;
         $12657 = +HEAPF64[$22>>3];
         $12658 = $12657 + -1.5707963267949001;
         $12659 = (+__Z5IKabsd($12658));
         $12660 = $12659 + 3.14159265358979;
         $12661 = (+__Z6IKfmoddd($12660,6.2831853071795898));
         $12662 = $12661 + -3.14159265358979;
         $12663 = -0.55000000000000004 - $12656;
         $12664 = +HEAPF64[$47>>3];
         $12665 = $12663 - $12664;
         $12666 = $12656 + 0.55000000000000004;
         $12667 = $12666 + $12664;
         $12668 = (+__Z5IKabsd($12662));
         $12669 = $12668 < 9.9999999999999995E-7;
         do {
          if ($12669) {
           $12670 = +HEAPF64[$60>>3];
           $12671 = $12652 * 0.076499999999999999;
           $12672 = $12671 + 0.39655000000000001;
           $12673 = $12672 - $12670;
           $12674 = $12654 * 0.32595000000000002;
           $12675 = $12674 + $12673;
           $12676 = (+__Z5IKabsd($12675));
           $12677 = $12676 < 9.9999999999999995E-7;
           if (!($12677)) {
            break;
           }
           $12678 = (+__Z5IKabsd($12665));
           $12679 = $12678 < 9.9999999999999995E-7;
           if (!($12679)) {
            break;
           }
           $12680 = (+__Z5IKabsd($12667));
           $12681 = $12680 < 9.9999999999999995E-7;
           if (!($12681)) {
            break;
           }
           HEAPF64[$184>>3] = 0.0;
           HEAPF64[$183>>3] = -1.0;
           HEAPF64[$3>>3] = 3.14159265358979;
           HEAPF64[$24>>3] = 1.0;
           HEAPF64[$23>>3] = 0.0;
           HEAPF64[$22>>3] = 1.5707963267949001;
           $12682 = +HEAPF64[$76>>3];
           $12683 = $12682 * 20.0;
           $12684 = +HEAPF64[$43>>3];
           $12685 = $12684 * 3.0;
           $12686 = +HEAPF64[$45>>3];
           $12687 = $12686 * 3.0;
           $12688 = +HEAPF64[$60>>3];
           $12689 = +HEAPF64[$47>>3];
           $12690 = $12689 * $12689;
           $12691 = $12690 - $12688;
           $12692 = +HEAPF64[$75>>3];
           $12693 = (+__Z6IKsignd($12691));
           $12694 = (+__Z5IKabsd($12691));
           $12695 = $12694 < 9.9999999999999995E-7;
           do {
            if (!($12695)) {
             $12696 = $12685 * $12692;
             $12697 = $12685 - $12696;
             $12698 = $12684 * $12683;
             $12699 = $12698 + $12697;
             $12700 = (+__Z5IKabsd($12699));
             $12701 = $12687 * $12692;
             $12702 = $12701 - $12687;
             $12703 = $12683 * $12686;
             $12704 = $12702 - $12703;
             $12705 = (+__Z5IKabsd($12704));
             $12706 = $12700 + $12705;
             $12707 = (+__Z5IKabsd($12706));
             $12708 = $12707 < 9.9999999999999995E-7;
             if ($12708) {
              break;
             }
             $12709 = (+__Z5IKabsd($12693));
             $12710 = $12709 < 9.9999999999999995E-7;
             if ($12710) {
              break;
             }
             HEAP8[$2>>0] = 1;
             $12965 = +HEAPF64[$76>>3];
             $12966 = $12965 * 0.29999999999999999;
             $12967 = +HEAPF64[$43>>3];
             $12968 = $12967 * 0.044999999999999998;
             $12969 = +HEAPF64[$45>>3];
             $12970 = $12969 * 0.044999999999999998;
             $12971 = +HEAPF64[$60>>3];
             $12972 = +HEAPF64[$47>>3];
             $12973 = $12972 * $12972;
             $12974 = $12973 - $12971;
             $12975 = (+__Z6IKsignd($12974));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1741,$12975,-1);
             $12976 = HEAP8[$528>>0]|0;
             $12977 = ($12976<<24>>24)==(0);
             if ($12977) {
              break L604;
             }
             $12978 = +HEAPF64[$43>>3];
             $12979 = $12966 * $12978;
             $12980 = $12968 + $12979;
             $12981 = +HEAPF64[$75>>3];
             $12982 = $12968 * $12981;
             $12983 = $12980 - $12982;
             $12984 = +HEAPF64[$45>>3];
             $12985 = $12966 * $12984;
             $12986 = $12970 * $12981;
             $12987 = $12986 - $12985;
             $12988 = $12987 - $12970;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1742,$12983,$12988,1.9999999999999999E-6);
             $12989 = HEAP8[$529>>0]|0;
             $12990 = ($12989<<24>>24)==(0);
             if ($12990) {
              break L604;
             }
             $12991 = +HEAPF64[$x1741>>3];
             $12992 = $12991 * 1.5707963267949001;
             $12993 = $12992 + -1.5707963267949001;
             $12994 = +HEAPF64[$x1742>>3];
             $12995 = $12994 + $12993;
             $12996 = (+__Z5IKsind($12995));
             $12997 = (+__Z5IKcosd($12995));
             $12998 = $12995 > 3.14159265358979;
             do {
              if ($12998) {
               $12999 = $12995 + -6.2831853071795898;
               $13002 = $12999;
              } else {
               $13000 = $12995 < -3.14159265358979;
               if (!($13000)) {
                $13002 = $12995;
                break;
               }
               $13001 = $12995 + 6.2831853071795898;
               $13002 = $13001;
              }
             } while(0);
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             HEAPF64[$this>>3] = $13002;
             HEAPF64[$530>>3] = $12997;
             HEAPF64[$531>>3] = $12996;
             $13003 = +HEAPF64[$this>>3];
             $13004 = (+__Z5IKsind($13003));
             $13005 = (+__Z5IKcosd($13003));
             $13006 = +HEAPF64[$43>>3];
             $13007 = $13004 * $13006;
             $13008 = +HEAPF64[$45>>3];
             $13009 = -$13008;
             $13010 = $13004 * $13009;
             $13011 = $13005 * $13006;
             $13012 = $13010 - $13011;
             $13013 = $13008 * 0.089999999999999996;
             $13014 = $13005 * $13013;
             $13015 = $13014 + -0.21249999999999999;
             $13016 = +HEAPF64[$60>>3];
             $13017 = $13015 - $13016;
             $13018 = +HEAPF64[$47>>3];
             $13019 = $13018 * 1.1000000000000001;
             $13020 = $13017 - $13019;
             $13021 = $13007 * 0.089999999999999996;
             $13022 = $13020 - $13021;
             $13023 = (+__Z5IKabsd($13012));
             $13024 = $13023 > 5.0000000000000004E-6;
             if ($13024) {
              break L604;
             }
             $13025 = +HEAPF64[$76>>3];
             $13026 = +HEAPF64[$75>>3];
             $13027 = $13007 + 0.044999999999999998;
             $13028 = $13026 * 0.044999999999999998;
             $13029 = $13027 - $13028;
             $13030 = $13005 * $13009;
             $13031 = $13030 + $13029;
             $13032 = $13025 * 0.29999999999999999;
             $13033 = $13032 + $13031;
             $13034 = (+__Z5IKabsd($13033));
             $13035 = $13034 > 5.0000000000000004E-6;
             if ($13035) {
              break L604;
             }
             $13036 = (+__Z5IKabsd($13022));
             $13037 = $13036 > 5.0000000000000004E-6;
             if ($13037) {
              break L604;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L604;
            }
           } while(0);
           HEAPF64[$184>>3] = 0.0;
           HEAPF64[$183>>3] = -1.0;
           HEAPF64[$3>>3] = 3.14159265358979;
           HEAPF64[$24>>3] = 1.0;
           HEAPF64[$23>>3] = 0.0;
           HEAPF64[$22>>3] = 1.5707963267949001;
           $12711 = +HEAPF64[$47>>3];
           $12712 = $12711 * $12711;
           $12713 = +HEAPF64[$60>>3];
           $12714 = $12713 * 80.0;
           $12715 = $12711 * 88.0;
           $12716 = $12713 - $12712;
           $12717 = +HEAPF64[$43>>3];
           $12718 = -$12717;
           $12719 = +HEAPF64[$45>>3];
           $12720 = $12712 * 9.0;
           $12721 = $12713 * 9.0;
           $12722 = $12721 - $12720;
           $12723 = (+__Z6IKsignd($12722));
           $12724 = (+__Z5IKabsd($12716));
           $12725 = $12724 < 9.9999999999999995E-7;
           do {
            if (!($12725)) {
             $12726 = $12715 * $12719;
             $12727 = $12719 * 17.0;
             $12728 = $12726 + $12727;
             $12729 = $12714 * $12719;
             $12730 = $12729 + $12728;
             $12731 = (+__Z5IKabsd($12730));
             $12732 = $12714 * $12718;
             $12733 = $12715 * $12718;
             $12734 = $12732 + $12733;
             $12735 = $12717 * 17.0;
             $12736 = $12734 - $12735;
             $12737 = (+__Z5IKabsd($12736));
             $12738 = $12731 + $12737;
             $12739 = (+__Z5IKabsd($12738));
             $12740 = $12739 < 9.9999999999999995E-7;
             if ($12740) {
              break;
             }
             $12741 = (+__Z5IKabsd($12723));
             $12742 = $12741 < 9.9999999999999995E-7;
             if ($12742) {
              break;
             }
             HEAP8[$2>>0] = 1;
             $12890 = +HEAPF64[$47>>3];
             $12891 = $12890 * 110.0;
             $12892 = +HEAPF64[$60>>3];
             $12893 = $12892 * 100.0;
             $12894 = +HEAPF64[$43>>3];
             $12895 = -$12894;
             $12896 = $12891 * $12895;
             $12897 = $12893 * $12895;
             $12898 = $12896 + $12897;
             $12899 = $12894 * 21.25;
             $12900 = $12898 - $12899;
             $12901 = +HEAPF64[$45>>3];
             $12902 = $12891 * $12901;
             $12903 = $12893 * $12901;
             $12904 = $12902 + $12903;
             $12905 = $12901 * 21.25;
             $12906 = $12905 + $12904;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1732,$12900,$12906,1.9999999999999999E-6);
             $12907 = HEAP8[$524>>0]|0;
             $12908 = ($12907<<24>>24)==(0);
             if ($12908) {
              break L604;
             }
             $12909 = +HEAPF64[$60>>3];
             $12910 = $12909 * 9.0;
             $12911 = +HEAPF64[$47>>3];
             $12912 = $12911 * $12911;
             $12913 = $12912 * 9.0;
             $12914 = $12910 - $12913;
             $12915 = (+__Z6IKsignd($12914));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1733,$12915,-1);
             $12916 = HEAP8[$525>>0]|0;
             $12917 = ($12916<<24>>24)==(0);
             if ($12917) {
              break L604;
             }
             $12918 = +HEAPF64[$x1732>>3];
             $12919 = $12918 + -1.5707963267949001;
             $12920 = +HEAPF64[$x1733>>3];
             $12921 = $12920 * 1.5707963267949001;
             $12922 = $12919 + $12921;
             $12923 = (+__Z5IKsind($12922));
             $12924 = (+__Z5IKcosd($12922));
             $12925 = $12922 > 3.14159265358979;
             do {
              if ($12925) {
               $12926 = $12922 + -6.2831853071795898;
               $12929 = $12926;
              } else {
               $12927 = $12922 < -3.14159265358979;
               if (!($12927)) {
                $12929 = $12922;
                break;
               }
               $12928 = $12922 + 6.2831853071795898;
               $12929 = $12928;
              }
             } while(0);
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             HEAPF64[$this>>3] = $12929;
             HEAPF64[$526>>3] = $12924;
             HEAPF64[$527>>3] = $12923;
             $12930 = +HEAPF64[$this>>3];
             $12931 = (+__Z5IKsind($12930));
             $12932 = (+__Z5IKcosd($12930));
             $12933 = +HEAPF64[$43>>3];
             $12934 = $12931 * $12933;
             $12935 = $12932 * $12933;
             $12936 = +HEAPF64[$45>>3];
             $12937 = -$12936;
             $12938 = $12931 * $12937;
             $12939 = $12938 - $12935;
             $12940 = $12936 * 0.089999999999999996;
             $12941 = $12932 * $12940;
             $12942 = $12941 + -0.21249999999999999;
             $12943 = +HEAPF64[$60>>3];
             $12944 = $12942 - $12943;
             $12945 = +HEAPF64[$47>>3];
             $12946 = $12945 * 1.1000000000000001;
             $12947 = $12944 - $12946;
             $12948 = $12934 * 0.089999999999999996;
             $12949 = $12947 - $12948;
             $12950 = (+__Z5IKabsd($12939));
             $12951 = $12950 > 5.0000000000000004E-6;
             if ($12951) {
              break L604;
             }
             $12952 = +HEAPF64[$76>>3];
             $12953 = +HEAPF64[$75>>3];
             $12954 = $12934 + 0.044999999999999998;
             $12955 = $12932 * $12937;
             $12956 = $12954 + $12955;
             $12957 = $12953 * 0.044999999999999998;
             $12958 = $12956 - $12957;
             $12959 = $12952 * 0.29999999999999999;
             $12960 = $12959 + $12958;
             $12961 = (+__Z5IKabsd($12960));
             $12962 = $12961 > 5.0000000000000004E-6;
             if ($12962) {
              break L604;
             }
             $12963 = (+__Z5IKabsd($12949));
             $12964 = $12963 > 5.0000000000000004E-6;
             if ($12964) {
              break L604;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L604;
            }
           } while(0);
           $12743 = +HEAPF64[$7>>3];
           $12744 = (+__Z5IKabsd($12743));
           $12745 = $12744 + 3.14159265358979;
           $12746 = (+__Z6IKfmoddd($12745,6.2831853071795898));
           $12747 = $12746 + -3.14159265358979;
           $12748 = +HEAPF64[$47>>3];
           $12749 = -0.84999999999999998 - $12748;
           $12750 = (+__Z5IKabsd($12747));
           $12751 = $12750 < 9.9999999999999995E-7;
           if (!($12751)) {
            break L604;
           }
           $12752 = +HEAPF64[$60>>3];
           $12753 = 0.72250000000000003 - $12752;
           $12754 = (+__Z5IKabsd($12753));
           $12755 = $12754 < 9.9999999999999995E-7;
           if (!($12755)) {
            break L604;
           }
           $12756 = (+__Z5IKabsd($12749));
           $12757 = $12756 < 9.9999999999999995E-7;
           if (!($12757)) {
            break L604;
           }
           HEAPF64[$184>>3] = 0.0;
           HEAPF64[$183>>3] = -1.0;
           HEAPF64[$3>>3] = 3.14159265358979;
           HEAPF64[$24>>3] = 1.0;
           HEAPF64[$23>>3] = 0.0;
           HEAPF64[$22>>3] = 1.5707963267949001;
           HEAPF64[$76>>3] = 0.0;
           HEAPF64[$75>>3] = 1.0;
           HEAPF64[$7>>3] = 0.0;
           $12758 = +HEAPF64[$43>>3];
           $12759 = (+__Z5IKabsd($12758));
           $12760 = +HEAPF64[$45>>3];
           $12761 = (+__Z5IKabsd($12760));
           $12762 = $12759 + $12761;
           $12763 = (+__Z5IKabsd($12762));
           $12764 = $12763 < 9.9999999999999995E-7;
           if (!($12764)) {
            HEAP16[$j0valid865>>1] = 0;
            HEAP8[$2>>0] = 2;
            $12830 = +HEAPF64[$45>>3];
            $12831 = -$12830;
            $12832 = +HEAPF64[$43>>3];
            __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1727,$12831,$12832,1.9999999999999999E-6);
            $12833 = HEAP8[$517>>0]|0;
            $12834 = ($12833<<24>>24)==(0);
            if ($12834) {
             break L604;
            }
            $12835 = +HEAPF64[$x1727>>3];
            $12836 = -$12835;
            HEAPF64[$j0array862>>3] = $12836;
            $12837 = (+__Z5IKsind($12836));
            HEAPF64[$sj0array864>>3] = $12837;
            $12838 = (+__Z5IKcosd($12836));
            HEAPF64[$cj0array863>>3] = $12838;
            $12839 = 3.14159265358979 - $12835;
            HEAPF64[$518>>3] = $12839;
            $12840 = (+__Z5IKsind($12839));
            HEAPF64[$519>>3] = $12840;
            $12841 = +HEAPF64[$518>>3];
            $12842 = (+__Z5IKcosd($12841));
            HEAPF64[$520>>3] = $12842;
            $12843 = +HEAPF64[$j0array862>>3];
            $12844 = $12843 > 3.14159265358979;
            do {
             if ($12844) {
              $12845 = $12843 + -6.2831853071795898;
              HEAPF64[$j0array862>>3] = $12845;
             } else {
              $12846 = $12843 < -3.14159265358979;
              if (!($12846)) {
               break;
              }
              $12847 = $12843 + 6.2831853071795898;
              HEAPF64[$j0array862>>3] = $12847;
             }
            } while(0);
            HEAP8[$j0valid865>>0] = 1;
            $12848 = +HEAPF64[$518>>3];
            $12849 = $12848 > 3.14159265358979;
            do {
             if ($12849) {
              $12850 = $12848 + -6.2831853071795898;
              HEAPF64[$518>>3] = $12850;
             } else {
              $12851 = $12848 < -3.14159265358979;
              if (!($12851)) {
               break;
              }
              $12852 = $12848 + 6.2831853071795898;
              HEAPF64[$518>>3] = $12852;
             }
            } while(0);
            HEAP8[$521>>0] = 1;
            $12853 = HEAP8[$j0valid865>>0]|0;
            $12854 = ($12853<<24>>24)==(0);
            do {
             if (!($12854)) {
              HEAP8[$0>>0] = 0;
              HEAP8[$1>>0] = -1;
              $12855 = HEAP8[$1028>>0]|0;
              $12856 = ($12855<<24>>24)==(0);
              do {
               if (!($12856)) {
                $12857 = +HEAPF64[$cj0array863>>3];
                $12858 = +HEAPF64[$1029>>3];
                $12859 = $12857 - $12858;
                $12860 = (+__Z5IKabsd($12859));
                $12861 = $12860 < 9.9999999999999995E-7;
                if (!($12861)) {
                 break;
                }
                $12862 = +HEAPF64[$sj0array864>>3];
                $12863 = +HEAPF64[$1030>>3];
                $12864 = $12862 - $12863;
                $12865 = (+__Z5IKabsd($12864));
                $12866 = $12865 < 9.9999999999999995E-7;
                if (!($12866)) {
                 break;
                }
                HEAP8[$1028>>0] = 0;
                HEAP8[$1>>0] = 1;
               }
              } while(0);
              $12867 = +HEAPF64[$j0array862>>3];
              HEAPF64[$this>>3] = $12867;
              $12868 = +HEAPF64[$cj0array863>>3];
              HEAPF64[$522>>3] = $12868;
              $12869 = +HEAPF64[$sj0array864>>3];
              HEAPF64[$523>>3] = $12869;
              $12870 = +HEAPF64[$this>>3];
              $12871 = (+__Z5IKcosd($12870));
              $12872 = (+__Z5IKsind($12870));
              $12873 = +HEAPF64[$45>>3];
              $12874 = $12872 * $12873;
              $12875 = +HEAPF64[$43>>3];
              $12876 = $12871 * $12875;
              $12877 = -$12876;
              $12878 = $12877 - $12874;
              $12879 = (+__Z5IKabsd($12878));
              $12880 = $12879 > 5.0000000000000004E-6;
              if ($12880) {
               break;
              }
              $12881 = $12873 * 0.089999999999999996;
              $12882 = $12871 * $12881;
              $12883 = $12875 * -0.089999999999999996;
              $12884 = $12872 * $12883;
              $12885 = $12882 + $12884;
              $12886 = (+__Z5IKabsd($12885));
              $12887 = $12886 > 5.0000000000000004E-6;
              if ($12887) {
               break;
              }
              __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             }
            } while(0);
            $12888 = HEAP8[$1024>>0]|0;
            $12889 = ($12888<<24>>24)==(0);
            if ($12889) {
             break L604;
            }
            HEAP8[$0>>0] = 1;
            HEAP8[$1>>0] = -1;
            $18378 = +HEAPF64[$1025>>3];
            HEAPF64[$this>>3] = $18378;
            $18379 = +HEAPF64[$1026>>3];
            HEAPF64[$522>>3] = $18379;
            $18380 = +HEAPF64[$1027>>3];
            HEAPF64[$523>>3] = $18380;
            $18381 = +HEAPF64[$this>>3];
            $18382 = (+__Z5IKcosd($18381));
            $18383 = (+__Z5IKsind($18381));
            $18384 = +HEAPF64[$45>>3];
            $18385 = $18383 * $18384;
            $18386 = +HEAPF64[$43>>3];
            $18387 = $18382 * $18386;
            $18388 = -$18387;
            $18389 = $18388 - $18385;
            $18390 = (+__Z5IKabsd($18389));
            $18391 = $18390 > 5.0000000000000004E-6;
            if ($18391) {
             break L604;
            }
            $18392 = $18384 * 0.089999999999999996;
            $18393 = $18382 * $18392;
            $18394 = $18386 * -0.089999999999999996;
            $18395 = $18383 * $18394;
            $18396 = $18393 + $18395;
            $18397 = (+__Z5IKabsd($18396));
            $18398 = $18397 > 5.0000000000000004E-6;
            if ($18398) {
             break L604;
            }
            __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
            break L604;
           }
           HEAPF64[$184>>3] = 0.0;
           HEAPF64[$183>>3] = -1.0;
           HEAPF64[$3>>3] = 3.14159265358979;
           HEAPF64[$24>>3] = 1.0;
           HEAPF64[$23>>3] = 0.0;
           HEAPF64[$22>>3] = 1.5707963267949001;
           HEAPF64[$76>>3] = 0.0;
           HEAPF64[$75>>3] = 1.0;
           HEAPF64[$7>>3] = 0.0;
           $12765 = +HEAPF64[$60>>3];
           $12766 = +HEAPF64[$47>>3];
           $12767 = $12766 * $12766;
           $12768 = $12765 - $12767;
           $12769 = (+__Z5IKabsd($12768));
           $12770 = $12769 < 9.9999999999999995E-7;
           if ($12770) {
            break L604;
           }
           HEAP16[$j0valid858>>1] = 0;
           HEAP8[$2>>0] = 2;
           $12771 = +HEAPF64[$45>>3];
           $12772 = $12771 * 0.089999999999999996;
           $12773 = +HEAPF64[$43>>3];
           $12774 = $12773 * -0.089999999999999996;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1722,$12772,$12774,1.9999999999999999E-6);
           $12775 = HEAP8[$510>>0]|0;
           $12776 = ($12775<<24>>24)==(0);
           if ($12776) {
            break L604;
           }
           $12777 = +HEAPF64[$x1722>>3];
           $12778 = -$12777;
           HEAPF64[$j0array855>>3] = $12778;
           $12779 = (+__Z5IKsind($12778));
           HEAPF64[$sj0array857>>3] = $12779;
           $12780 = (+__Z5IKcosd($12778));
           HEAPF64[$cj0array856>>3] = $12780;
           $12781 = 3.14159265358979 - $12777;
           HEAPF64[$511>>3] = $12781;
           $12782 = (+__Z5IKsind($12781));
           HEAPF64[$512>>3] = $12782;
           $12783 = +HEAPF64[$511>>3];
           $12784 = (+__Z5IKcosd($12783));
           HEAPF64[$513>>3] = $12784;
           $12785 = +HEAPF64[$j0array855>>3];
           $12786 = $12785 > 3.14159265358979;
           do {
            if ($12786) {
             $12787 = $12785 + -6.2831853071795898;
             HEAPF64[$j0array855>>3] = $12787;
            } else {
             $12788 = $12785 < -3.14159265358979;
             if (!($12788)) {
              break;
             }
             $12789 = $12785 + 6.2831853071795898;
             HEAPF64[$j0array855>>3] = $12789;
            }
           } while(0);
           HEAP8[$j0valid858>>0] = 1;
           $12790 = +HEAPF64[$511>>3];
           $12791 = $12790 > 3.14159265358979;
           do {
            if ($12791) {
             $12792 = $12790 + -6.2831853071795898;
             HEAPF64[$511>>3] = $12792;
            } else {
             $12793 = $12790 < -3.14159265358979;
             if (!($12793)) {
              break;
             }
             $12794 = $12790 + 6.2831853071795898;
             HEAPF64[$511>>3] = $12794;
            }
           } while(0);
           HEAP8[$514>>0] = 1;
           $12795 = HEAP8[$j0valid858>>0]|0;
           $12796 = ($12795<<24>>24)==(0);
           do {
            if (!($12796)) {
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             $12797 = HEAP8[$1021>>0]|0;
             $12798 = ($12797<<24>>24)==(0);
             do {
              if (!($12798)) {
               $12799 = +HEAPF64[$cj0array856>>3];
               $12800 = +HEAPF64[$1022>>3];
               $12801 = $12799 - $12800;
               $12802 = (+__Z5IKabsd($12801));
               $12803 = $12802 < 9.9999999999999995E-7;
               if (!($12803)) {
                break;
               }
               $12804 = +HEAPF64[$sj0array857>>3];
               $12805 = +HEAPF64[$1023>>3];
               $12806 = $12804 - $12805;
               $12807 = (+__Z5IKabsd($12806));
               $12808 = $12807 < 9.9999999999999995E-7;
               if (!($12808)) {
                break;
               }
               HEAP8[$1021>>0] = 0;
               HEAP8[$1>>0] = 1;
              }
             } while(0);
             $12809 = +HEAPF64[$j0array855>>3];
             HEAPF64[$this>>3] = $12809;
             $12810 = +HEAPF64[$cj0array856>>3];
             HEAPF64[$515>>3] = $12810;
             $12811 = +HEAPF64[$sj0array857>>3];
             HEAPF64[$516>>3] = $12811;
             $12812 = +HEAPF64[$this>>3];
             $12813 = (+__Z5IKcosd($12812));
             $12814 = (+__Z5IKsind($12812));
             $12815 = +HEAPF64[$43>>3];
             $12816 = $12814 * $12815;
             $12817 = +HEAPF64[$45>>3];
             $12818 = -$12817;
             $12819 = $12813 * $12818;
             $12820 = $12816 + $12819;
             $12821 = (+__Z5IKabsd($12820));
             $12822 = $12821 > 5.0000000000000004E-6;
             if ($12822) {
              break;
             }
             $12823 = $12814 * $12818;
             $12824 = $12813 * $12815;
             $12825 = $12823 - $12824;
             $12826 = (+__Z5IKabsd($12825));
             $12827 = $12826 > 5.0000000000000004E-6;
             if ($12827) {
              break;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
            }
           } while(0);
           $12828 = HEAP8[$1017>>0]|0;
           $12829 = ($12828<<24>>24)==(0);
           if ($12829) {
            break L604;
           }
           HEAP8[$0>>0] = 1;
           HEAP8[$1>>0] = -1;
           $18399 = +HEAPF64[$1018>>3];
           HEAPF64[$this>>3] = $18399;
           $18400 = +HEAPF64[$1019>>3];
           HEAPF64[$515>>3] = $18400;
           $18401 = +HEAPF64[$1020>>3];
           HEAPF64[$516>>3] = $18401;
           $18402 = +HEAPF64[$this>>3];
           $18403 = (+__Z5IKcosd($18402));
           $18404 = (+__Z5IKsind($18402));
           $18405 = +HEAPF64[$43>>3];
           $18406 = $18404 * $18405;
           $18407 = +HEAPF64[$45>>3];
           $18408 = -$18407;
           $18409 = $18403 * $18408;
           $18410 = $18406 + $18409;
           $18411 = (+__Z5IKabsd($18410));
           $18412 = $18411 > 5.0000000000000004E-6;
           if ($18412) {
            break L604;
           }
           $18413 = $18404 * $18408;
           $18414 = $18403 * $18405;
           $18415 = $18413 - $18414;
           $18416 = (+__Z5IKabsd($18415));
           $18417 = $18416 > 5.0000000000000004E-6;
           if ($18417) {
            break L604;
           }
           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           break L604;
          }
         } while(0);
         $13038 = +HEAPF64[$76>>3];
         $13039 = $13038 * 0.044999999999999998;
         $13040 = +HEAPF64[$75>>3];
         $13041 = $13040 * 0.29999999999999999;
         $13042 = $13039 + $13041;
         $13043 = +HEAPF64[$22>>3];
         $13044 = $13043 + 1.5707963267949001;
         $13045 = (+__Z5IKabsd($13044));
         $13046 = $13045 + 3.14159265358979;
         $13047 = (+__Z6IKfmoddd($13046,6.2831853071795898));
         $13048 = $13047 + -3.14159265358979;
         $13049 = +HEAPF64[$47>>3];
         $13050 = -0.55000000000000004 - $13049;
         $13051 = $13050 - $13042;
         $13052 = $13042 + 0.55000000000000004;
         $13053 = $13052 + $13049;
         $13054 = (+__Z5IKabsd($13048));
         $13055 = $13054 < 9.9999999999999995E-7;
         do {
          if ($13055) {
           $13056 = +HEAPF64[$60>>3];
           $13057 = $13038 * 0.076499999999999999;
           $13058 = $13057 + 0.39655000000000001;
           $13059 = $13058 - $13056;
           $13060 = $13040 * 0.32595000000000002;
           $13061 = $13060 + $13059;
           $13062 = (+__Z5IKabsd($13061));
           $13063 = $13062 < 9.9999999999999995E-7;
           if (!($13063)) {
            break;
           }
           $13064 = (+__Z5IKabsd($13051));
           $13065 = $13064 < 9.9999999999999995E-7;
           if (!($13065)) {
            break;
           }
           $13066 = (+__Z5IKabsd($13053));
           $13067 = $13066 < 9.9999999999999995E-7;
           if (!($13067)) {
            break;
           }
           HEAPF64[$184>>3] = 0.0;
           HEAPF64[$183>>3] = -1.0;
           HEAPF64[$3>>3] = 3.14159265358979;
           HEAPF64[$24>>3] = -1.0;
           HEAPF64[$23>>3] = 0.0;
           HEAPF64[$22>>3] = -1.5707963267949001;
           $13068 = +HEAPF64[$76>>3];
           $13069 = $13068 * 20.0;
           $13070 = +HEAPF64[$43>>3];
           $13071 = $13070 * 3.0;
           $13072 = +HEAPF64[$45>>3];
           $13073 = $13072 * 3.0;
           $13074 = +HEAPF64[$60>>3];
           $13075 = +HEAPF64[$47>>3];
           $13076 = $13075 * $13075;
           $13077 = $13076 - $13074;
           $13078 = +HEAPF64[$75>>3];
           $13079 = (+__Z6IKsignd($13077));
           $13080 = (+__Z5IKabsd($13077));
           $13081 = $13080 < 9.9999999999999995E-7;
           do {
            if (!($13081)) {
             $13082 = $13071 * $13078;
             $13083 = $13082 - $13071;
             $13084 = $13070 * $13069;
             $13085 = $13083 - $13084;
             $13086 = (+__Z5IKabsd($13085));
             $13087 = $13073 * $13078;
             $13088 = $13073 - $13087;
             $13089 = $13069 * $13072;
             $13090 = $13089 + $13088;
             $13091 = (+__Z5IKabsd($13090));
             $13092 = $13086 + $13091;
             $13093 = (+__Z5IKabsd($13092));
             $13094 = $13093 < 9.9999999999999995E-7;
             if ($13094) {
              break;
             }
             $13095 = (+__Z5IKabsd($13079));
             $13096 = $13095 < 9.9999999999999995E-7;
             if ($13096) {
              break;
             }
             HEAP8[$2>>0] = 1;
             $13342 = +HEAPF64[$76>>3];
             $13343 = $13342 * 0.29999999999999999;
             $13344 = +HEAPF64[$43>>3];
             $13345 = $13344 * 0.044999999999999998;
             $13346 = +HEAPF64[$45>>3];
             $13347 = $13346 * 0.044999999999999998;
             $13348 = +HEAPF64[$60>>3];
             $13349 = +HEAPF64[$47>>3];
             $13350 = $13349 * $13349;
             $13351 = $13350 - $13348;
             $13352 = (+__Z6IKsignd($13351));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1778,$13352,-1);
             $13353 = HEAP8[$550>>0]|0;
             $13354 = ($13353<<24>>24)==(0);
             if ($13354) {
              break L604;
             }
             $13355 = +HEAPF64[$43>>3];
             $13356 = $13343 * $13355;
             $13357 = -$13345;
             $13358 = $13357 - $13356;
             $13359 = +HEAPF64[$75>>3];
             $13360 = $13345 * $13359;
             $13361 = $13358 + $13360;
             $13362 = $13347 * $13359;
             $13363 = $13347 - $13362;
             $13364 = +HEAPF64[$45>>3];
             $13365 = $13343 * $13364;
             $13366 = $13363 + $13365;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1779,$13361,$13366,1.9999999999999999E-6);
             $13367 = HEAP8[$551>>0]|0;
             $13368 = ($13367<<24>>24)==(0);
             if ($13368) {
              break L604;
             }
             $13369 = +HEAPF64[$x1778>>3];
             $13370 = $13369 * 1.5707963267949001;
             $13371 = $13370 + -1.5707963267949001;
             $13372 = +HEAPF64[$x1779>>3];
             $13373 = $13372 + $13371;
             $13374 = (+__Z5IKsind($13373));
             $13375 = (+__Z5IKcosd($13373));
             $13376 = $13373 > 3.14159265358979;
             do {
              if ($13376) {
               $13377 = $13373 + -6.2831853071795898;
               $13380 = $13377;
              } else {
               $13378 = $13373 < -3.14159265358979;
               if (!($13378)) {
                $13380 = $13373;
                break;
               }
               $13379 = $13373 + 6.2831853071795898;
               $13380 = $13379;
              }
             } while(0);
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             HEAPF64[$this>>3] = $13380;
             HEAPF64[$552>>3] = $13375;
             HEAPF64[$553>>3] = $13374;
             $13381 = +HEAPF64[$this>>3];
             $13382 = (+__Z5IKsind($13381));
             $13383 = (+__Z5IKcosd($13381));
             $13384 = +HEAPF64[$43>>3];
             $13385 = $13382 * $13384;
             $13386 = +HEAPF64[$45>>3];
             $13387 = $13383 * $13386;
             $13388 = $13382 * $13386;
             $13389 = $13383 * $13384;
             $13390 = $13389 + $13388;
             $13391 = $13385 * 0.089999999999999996;
             $13392 = $13391 + -0.21249999999999999;
             $13393 = +HEAPF64[$60>>3];
             $13394 = $13392 - $13393;
             $13395 = +HEAPF64[$47>>3];
             $13396 = $13395 * 1.1000000000000001;
             $13397 = $13394 - $13396;
             $13398 = $13387 * 0.089999999999999996;
             $13399 = $13397 - $13398;
             $13400 = (+__Z5IKabsd($13390));
             $13401 = $13400 > 5.0000000000000004E-6;
             if ($13401) {
              break L604;
             }
             $13402 = +HEAPF64[$76>>3];
             $13403 = +HEAPF64[$75>>3];
             $13404 = $13403 * 0.044999999999999998;
             $13405 = $13404 + -0.044999999999999998;
             $13406 = $13385 + $13405;
             $13407 = $13406 - $13387;
             $13408 = $13402 * 0.29999999999999999;
             $13409 = $13407 - $13408;
             $13410 = (+__Z5IKabsd($13409));
             $13411 = $13410 > 5.0000000000000004E-6;
             if ($13411) {
              break L604;
             }
             $13412 = (+__Z5IKabsd($13399));
             $13413 = $13412 > 5.0000000000000004E-6;
             if ($13413) {
              break L604;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L604;
            }
           } while(0);
           HEAPF64[$184>>3] = 0.0;
           HEAPF64[$183>>3] = -1.0;
           HEAPF64[$3>>3] = 3.14159265358979;
           HEAPF64[$24>>3] = -1.0;
           HEAPF64[$23>>3] = 0.0;
           HEAPF64[$22>>3] = -1.5707963267949001;
           $13097 = +HEAPF64[$47>>3];
           $13098 = $13097 * $13097;
           $13099 = +HEAPF64[$60>>3];
           $13100 = $13099 * 80.0;
           $13101 = $13097 * 88.0;
           $13102 = $13098 - $13099;
           $13103 = +HEAPF64[$43>>3];
           $13104 = -$13103;
           $13105 = $13100 * $13104;
           $13106 = $13101 * $13104;
           $13107 = $13105 + $13106;
           $13108 = $13103 * 17.0;
           $13109 = $13107 - $13108;
           $13110 = (+__Z5IKabsd($13109));
           $13111 = +HEAPF64[$45>>3];
           $13112 = $13111 * 17.0;
           $13113 = $13100 * $13111;
           $13114 = $13112 + $13113;
           $13115 = $13101 * $13111;
           $13116 = $13115 + $13114;
           $13117 = (+__Z5IKabsd($13116));
           $13118 = $13110 + $13117;
           $13119 = (+__Z5IKabsd($13102));
           $13120 = $13119 < 9.9999999999999995E-7;
           do {
            if (!($13120)) {
             $13121 = $13099 * 9.0;
             $13122 = $13098 * 9.0;
             $13123 = $13122 - $13121;
             $13124 = (+__Z6IKsignd($13123));
             $13125 = (+__Z5IKabsd($13124));
             $13126 = $13125 < 9.9999999999999995E-7;
             if ($13126) {
              break;
             }
             $13127 = (+__Z5IKabsd($13118));
             $13128 = $13127 < 9.9999999999999995E-7;
             if ($13128) {
              break;
             }
             HEAP8[$2>>0] = 1;
             $13271 = +HEAPF64[$47>>3];
             $13272 = $13271 * 110.0;
             $13273 = +HEAPF64[$60>>3];
             $13274 = $13273 * 100.0;
             $13275 = $13273 * 9.0;
             $13276 = $13271 * $13271;
             $13277 = $13276 * 9.0;
             $13278 = $13277 - $13275;
             $13279 = (+__Z6IKsignd($13278));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1769,$13279,-1);
             $13280 = HEAP8[$546>>0]|0;
             $13281 = ($13280<<24>>24)==(0);
             if ($13281) {
              break L604;
             }
             $13282 = +HEAPF64[$43>>3];
             $13283 = -$13282;
             $13284 = $13274 * $13283;
             $13285 = $13272 * $13283;
             $13286 = $13284 + $13285;
             $13287 = $13282 * 21.25;
             $13288 = $13286 - $13287;
             $13289 = +HEAPF64[$45>>3];
             $13290 = $13289 * 21.25;
             $13291 = $13274 * $13289;
             $13292 = $13290 + $13291;
             $13293 = $13272 * $13289;
             $13294 = $13293 + $13292;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1770,$13288,$13294,1.9999999999999999E-6);
             $13295 = HEAP8[$547>>0]|0;
             $13296 = ($13295<<24>>24)==(0);
             if ($13296) {
              break L604;
             }
             $13297 = +HEAPF64[$x1769>>3];
             $13298 = $13297 * 1.5707963267949001;
             $13299 = $13298 + -1.5707963267949001;
             $13300 = +HEAPF64[$x1770>>3];
             $13301 = $13300 + $13299;
             $13302 = (+__Z5IKsind($13301));
             $13303 = (+__Z5IKcosd($13301));
             $13304 = $13301 > 3.14159265358979;
             do {
              if ($13304) {
               $13305 = $13301 + -6.2831853071795898;
               $13308 = $13305;
              } else {
               $13306 = $13301 < -3.14159265358979;
               if (!($13306)) {
                $13308 = $13301;
                break;
               }
               $13307 = $13301 + 6.2831853071795898;
               $13308 = $13307;
              }
             } while(0);
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             HEAPF64[$this>>3] = $13308;
             HEAPF64[$548>>3] = $13303;
             HEAPF64[$549>>3] = $13302;
             $13309 = +HEAPF64[$this>>3];
             $13310 = (+__Z5IKsind($13309));
             $13311 = (+__Z5IKcosd($13309));
             $13312 = +HEAPF64[$43>>3];
             $13313 = $13310 * $13312;
             $13314 = +HEAPF64[$45>>3];
             $13315 = $13311 * $13314;
             $13316 = $13311 * $13312;
             $13317 = $13310 * $13314;
             $13318 = $13316 + $13317;
             $13319 = $13315 * 0.089999999999999996;
             $13320 = -0.21249999999999999 - $13319;
             $13321 = +HEAPF64[$60>>3];
             $13322 = $13320 - $13321;
             $13323 = +HEAPF64[$47>>3];
             $13324 = $13323 * 1.1000000000000001;
             $13325 = $13322 - $13324;
             $13326 = $13313 * 0.089999999999999996;
             $13327 = $13326 + $13325;
             $13328 = (+__Z5IKabsd($13318));
             $13329 = $13328 > 5.0000000000000004E-6;
             if ($13329) {
              break L604;
             }
             $13330 = +HEAPF64[$76>>3];
             $13331 = +HEAPF64[$75>>3];
             $13332 = $13331 * 0.044999999999999998;
             $13333 = $13332 + -0.044999999999999998;
             $13334 = $13333 - $13315;
             $13335 = $13313 + $13334;
             $13336 = $13330 * 0.29999999999999999;
             $13337 = $13335 - $13336;
             $13338 = (+__Z5IKabsd($13337));
             $13339 = $13338 > 5.0000000000000004E-6;
             if ($13339) {
              break L604;
             }
             $13340 = (+__Z5IKabsd($13327));
             $13341 = $13340 > 5.0000000000000004E-6;
             if ($13341) {
              break L604;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L604;
            }
           } while(0);
           $13129 = +HEAPF64[$7>>3];
           $13130 = (+__Z5IKabsd($13129));
           $13131 = $13130 + 3.14159265358979;
           $13132 = (+__Z6IKfmoddd($13131,6.2831853071795898));
           $13133 = $13132 + -3.14159265358979;
           $13134 = +HEAPF64[$47>>3];
           $13135 = -0.84999999999999998 - $13134;
           $13136 = (+__Z5IKabsd($13133));
           $13137 = $13136 < 9.9999999999999995E-7;
           if (!($13137)) {
            break L604;
           }
           $13138 = +HEAPF64[$60>>3];
           $13139 = 0.72250000000000003 - $13138;
           $13140 = (+__Z5IKabsd($13139));
           $13141 = $13140 < 9.9999999999999995E-7;
           if (!($13141)) {
            break L604;
           }
           $13142 = (+__Z5IKabsd($13135));
           $13143 = $13142 < 9.9999999999999995E-7;
           if (!($13143)) {
            break L604;
           }
           HEAPF64[$184>>3] = 0.0;
           HEAPF64[$183>>3] = -1.0;
           HEAPF64[$3>>3] = 3.14159265358979;
           HEAPF64[$24>>3] = -1.0;
           HEAPF64[$23>>3] = 0.0;
           HEAPF64[$22>>3] = -1.5707963267949001;
           HEAPF64[$76>>3] = 0.0;
           HEAPF64[$75>>3] = 1.0;
           HEAPF64[$7>>3] = 0.0;
           $13144 = +HEAPF64[$43>>3];
           $13145 = (+__Z5IKabsd($13144));
           $13146 = +HEAPF64[$45>>3];
           $13147 = (+__Z5IKabsd($13146));
           $13148 = $13145 + $13147;
           $13149 = (+__Z5IKabsd($13148));
           $13150 = $13149 < 9.9999999999999995E-7;
           if (!($13150)) {
            HEAP16[$j0valid901>>1] = 0;
            HEAP8[$2>>0] = 2;
            $13215 = +HEAPF64[$43>>3];
            $13216 = +HEAPF64[$45>>3];
            __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1762,$13215,$13216,1.9999999999999999E-6);
            $13217 = HEAP8[$539>>0]|0;
            $13218 = ($13217<<24>>24)==(0);
            if ($13218) {
             break L604;
            }
            $13219 = +HEAPF64[$x1762>>3];
            $13220 = -$13219;
            HEAPF64[$j0array898>>3] = $13220;
            $13221 = (+__Z5IKsind($13220));
            HEAPF64[$sj0array900>>3] = $13221;
            $13222 = (+__Z5IKcosd($13220));
            HEAPF64[$cj0array899>>3] = $13222;
            $13223 = 3.14159265358979 - $13219;
            HEAPF64[$540>>3] = $13223;
            $13224 = (+__Z5IKsind($13223));
            HEAPF64[$541>>3] = $13224;
            $13225 = +HEAPF64[$540>>3];
            $13226 = (+__Z5IKcosd($13225));
            HEAPF64[$542>>3] = $13226;
            $13227 = +HEAPF64[$j0array898>>3];
            $13228 = $13227 > 3.14159265358979;
            do {
             if ($13228) {
              $13229 = $13227 + -6.2831853071795898;
              HEAPF64[$j0array898>>3] = $13229;
             } else {
              $13230 = $13227 < -3.14159265358979;
              if (!($13230)) {
               break;
              }
              $13231 = $13227 + 6.2831853071795898;
              HEAPF64[$j0array898>>3] = $13231;
             }
            } while(0);
            HEAP8[$j0valid901>>0] = 1;
            $13232 = +HEAPF64[$540>>3];
            $13233 = $13232 > 3.14159265358979;
            do {
             if ($13233) {
              $13234 = $13232 + -6.2831853071795898;
              HEAPF64[$540>>3] = $13234;
             } else {
              $13235 = $13232 < -3.14159265358979;
              if (!($13235)) {
               break;
              }
              $13236 = $13232 + 6.2831853071795898;
              HEAPF64[$540>>3] = $13236;
             }
            } while(0);
            HEAP8[$543>>0] = 1;
            $13237 = HEAP8[$j0valid901>>0]|0;
            $13238 = ($13237<<24>>24)==(0);
            do {
             if (!($13238)) {
              HEAP8[$0>>0] = 0;
              HEAP8[$1>>0] = -1;
              $13239 = HEAP8[$1042>>0]|0;
              $13240 = ($13239<<24>>24)==(0);
              do {
               if (!($13240)) {
                $13241 = +HEAPF64[$cj0array899>>3];
                $13242 = +HEAPF64[$1043>>3];
                $13243 = $13241 - $13242;
                $13244 = (+__Z5IKabsd($13243));
                $13245 = $13244 < 9.9999999999999995E-7;
                if (!($13245)) {
                 break;
                }
                $13246 = +HEAPF64[$sj0array900>>3];
                $13247 = +HEAPF64[$1044>>3];
                $13248 = $13246 - $13247;
                $13249 = (+__Z5IKabsd($13248));
                $13250 = $13249 < 9.9999999999999995E-7;
                if (!($13250)) {
                 break;
                }
                HEAP8[$1042>>0] = 0;
                HEAP8[$1>>0] = 1;
               }
              } while(0);
              $13251 = +HEAPF64[$j0array898>>3];
              HEAPF64[$this>>3] = $13251;
              $13252 = +HEAPF64[$cj0array899>>3];
              HEAPF64[$544>>3] = $13252;
              $13253 = +HEAPF64[$sj0array900>>3];
              HEAPF64[$545>>3] = $13253;
              $13254 = +HEAPF64[$this>>3];
              $13255 = (+__Z5IKsind($13254));
              $13256 = (+__Z5IKcosd($13254));
              $13257 = +HEAPF64[$43>>3];
              $13258 = $13255 * $13257;
              $13259 = +HEAPF64[$45>>3];
              $13260 = $13256 * $13259;
              $13261 = $13258 - $13260;
              $13262 = (+__Z5IKabsd($13261));
              $13263 = $13262 > 5.0000000000000004E-6;
              if ($13263) {
               break;
              }
              $13264 = $13260 * 0.089999999999999996;
              $13265 = $13258 * 0.089999999999999996;
              $13266 = $13265 - $13264;
              $13267 = (+__Z5IKabsd($13266));
              $13268 = $13267 > 5.0000000000000004E-6;
              if ($13268) {
               break;
              }
              __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             }
            } while(0);
            $13269 = HEAP8[$1038>>0]|0;
            $13270 = ($13269<<24>>24)==(0);
            if ($13270) {
             break L604;
            }
            HEAP8[$0>>0] = 1;
            HEAP8[$1>>0] = -1;
            $18342 = +HEAPF64[$1039>>3];
            HEAPF64[$this>>3] = $18342;
            $18343 = +HEAPF64[$1040>>3];
            HEAPF64[$544>>3] = $18343;
            $18344 = +HEAPF64[$1041>>3];
            HEAPF64[$545>>3] = $18344;
            $18345 = +HEAPF64[$this>>3];
            $18346 = (+__Z5IKsind($18345));
            $18347 = (+__Z5IKcosd($18345));
            $18348 = +HEAPF64[$43>>3];
            $18349 = $18346 * $18348;
            $18350 = +HEAPF64[$45>>3];
            $18351 = $18347 * $18350;
            $18352 = $18349 - $18351;
            $18353 = (+__Z5IKabsd($18352));
            $18354 = $18353 > 5.0000000000000004E-6;
            if ($18354) {
             break L604;
            }
            $18355 = $18351 * 0.089999999999999996;
            $18356 = $18349 * 0.089999999999999996;
            $18357 = $18356 - $18355;
            $18358 = (+__Z5IKabsd($18357));
            $18359 = $18358 > 5.0000000000000004E-6;
            if ($18359) {
             break L604;
            }
            __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
            break L604;
           }
           HEAPF64[$184>>3] = 0.0;
           HEAPF64[$183>>3] = -1.0;
           HEAPF64[$3>>3] = 3.14159265358979;
           HEAPF64[$24>>3] = -1.0;
           HEAPF64[$23>>3] = 0.0;
           HEAPF64[$22>>3] = -1.5707963267949001;
           HEAPF64[$76>>3] = 0.0;
           HEAPF64[$75>>3] = 1.0;
           HEAPF64[$7>>3] = 0.0;
           $13151 = +HEAPF64[$60>>3];
           $13152 = +HEAPF64[$47>>3];
           $13153 = $13152 * $13152;
           $13154 = $13151 - $13153;
           $13155 = (+__Z5IKabsd($13154));
           $13156 = $13155 < 9.9999999999999995E-7;
           if ($13156) {
            break L604;
           }
           HEAP16[$j0valid894>>1] = 0;
           HEAP8[$2>>0] = 2;
           $13157 = +HEAPF64[$45>>3];
           $13158 = $13157 * -0.089999999999999996;
           $13159 = +HEAPF64[$43>>3];
           $13160 = $13159 * 0.089999999999999996;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1758,$13158,$13160,1.9999999999999999E-6);
           $13161 = HEAP8[$532>>0]|0;
           $13162 = ($13161<<24>>24)==(0);
           if ($13162) {
            break L604;
           }
           $13163 = +HEAPF64[$x1758>>3];
           $13164 = -$13163;
           HEAPF64[$j0array891>>3] = $13164;
           $13165 = (+__Z5IKsind($13164));
           HEAPF64[$sj0array893>>3] = $13165;
           $13166 = (+__Z5IKcosd($13164));
           HEAPF64[$cj0array892>>3] = $13166;
           $13167 = 3.14159265358979 - $13163;
           HEAPF64[$533>>3] = $13167;
           $13168 = (+__Z5IKsind($13167));
           HEAPF64[$534>>3] = $13168;
           $13169 = +HEAPF64[$533>>3];
           $13170 = (+__Z5IKcosd($13169));
           HEAPF64[$535>>3] = $13170;
           $13171 = +HEAPF64[$j0array891>>3];
           $13172 = $13171 > 3.14159265358979;
           do {
            if ($13172) {
             $13173 = $13171 + -6.2831853071795898;
             HEAPF64[$j0array891>>3] = $13173;
            } else {
             $13174 = $13171 < -3.14159265358979;
             if (!($13174)) {
              break;
             }
             $13175 = $13171 + 6.2831853071795898;
             HEAPF64[$j0array891>>3] = $13175;
            }
           } while(0);
           HEAP8[$j0valid894>>0] = 1;
           $13176 = +HEAPF64[$533>>3];
           $13177 = $13176 > 3.14159265358979;
           do {
            if ($13177) {
             $13178 = $13176 + -6.2831853071795898;
             HEAPF64[$533>>3] = $13178;
            } else {
             $13179 = $13176 < -3.14159265358979;
             if (!($13179)) {
              break;
             }
             $13180 = $13176 + 6.2831853071795898;
             HEAPF64[$533>>3] = $13180;
            }
           } while(0);
           HEAP8[$536>>0] = 1;
           $13181 = HEAP8[$j0valid894>>0]|0;
           $13182 = ($13181<<24>>24)==(0);
           do {
            if (!($13182)) {
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             $13183 = HEAP8[$1035>>0]|0;
             $13184 = ($13183<<24>>24)==(0);
             do {
              if (!($13184)) {
               $13185 = +HEAPF64[$cj0array892>>3];
               $13186 = +HEAPF64[$1036>>3];
               $13187 = $13185 - $13186;
               $13188 = (+__Z5IKabsd($13187));
               $13189 = $13188 < 9.9999999999999995E-7;
               if (!($13189)) {
                break;
               }
               $13190 = +HEAPF64[$sj0array893>>3];
               $13191 = +HEAPF64[$1037>>3];
               $13192 = $13190 - $13191;
               $13193 = (+__Z5IKabsd($13192));
               $13194 = $13193 < 9.9999999999999995E-7;
               if (!($13194)) {
                break;
               }
               HEAP8[$1035>>0] = 0;
               HEAP8[$1>>0] = 1;
              }
             } while(0);
             $13195 = +HEAPF64[$j0array891>>3];
             HEAPF64[$this>>3] = $13195;
             $13196 = +HEAPF64[$cj0array892>>3];
             HEAPF64[$537>>3] = $13196;
             $13197 = +HEAPF64[$sj0array893>>3];
             HEAPF64[$538>>3] = $13197;
             $13198 = +HEAPF64[$this>>3];
             $13199 = (+__Z5IKsind($13198));
             $13200 = (+__Z5IKcosd($13198));
             $13201 = +HEAPF64[$43>>3];
             $13202 = $13200 * $13201;
             $13203 = +HEAPF64[$45>>3];
             $13204 = $13199 * $13203;
             $13205 = $13202 + $13204;
             $13206 = (+__Z5IKabsd($13205));
             $13207 = $13206 > 5.0000000000000004E-6;
             if ($13207) {
              break;
             }
             $13208 = $13199 * $13201;
             $13209 = $13200 * $13203;
             $13210 = $13208 - $13209;
             $13211 = (+__Z5IKabsd($13210));
             $13212 = $13211 > 5.0000000000000004E-6;
             if ($13212) {
              break;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
            }
           } while(0);
           $13213 = HEAP8[$1031>>0]|0;
           $13214 = ($13213<<24>>24)==(0);
           if ($13214) {
            break L604;
           }
           HEAP8[$0>>0] = 1;
           HEAP8[$1>>0] = -1;
           $18360 = +HEAPF64[$1032>>3];
           HEAPF64[$this>>3] = $18360;
           $18361 = +HEAPF64[$1033>>3];
           HEAPF64[$537>>3] = $18361;
           $18362 = +HEAPF64[$1034>>3];
           HEAPF64[$538>>3] = $18362;
           $18363 = +HEAPF64[$this>>3];
           $18364 = (+__Z5IKsind($18363));
           $18365 = (+__Z5IKcosd($18363));
           $18366 = +HEAPF64[$43>>3];
           $18367 = $18365 * $18366;
           $18368 = +HEAPF64[$45>>3];
           $18369 = $18364 * $18368;
           $18370 = $18367 + $18369;
           $18371 = (+__Z5IKabsd($18370));
           $18372 = $18371 > 5.0000000000000004E-6;
           if ($18372) {
            break L604;
           }
           $18373 = $18364 * $18366;
           $18374 = $18365 * $18368;
           $18375 = $18373 - $18374;
           $18376 = (+__Z5IKabsd($18375));
           $18377 = $18376 > 5.0000000000000004E-6;
           if ($18377) {
            break L604;
           }
           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           break L604;
          }
         } while(0);
         $13414 = +HEAPF64[$7>>3];
         $13415 = (+__Z5IKabsd($13414));
         $13416 = $13415 + 3.14159265358979;
         $13417 = (+__Z6IKfmoddd($13416,6.2831853071795898));
         $13418 = $13417 + -3.14159265358979;
         $13419 = +HEAPF64[$47>>3];
         $13420 = -0.84999999999999998 - $13419;
         $13421 = (+__Z5IKabsd($13418));
         $13422 = $13421 < 9.9999999999999995E-7;
         if (!($13422)) {
          break;
         }
         $13423 = +HEAPF64[$60>>3];
         $13424 = 0.72250000000000003 - $13423;
         $13425 = (+__Z5IKabsd($13424));
         $13426 = $13425 < 9.9999999999999995E-7;
         if (!($13426)) {
          break;
         }
         $13427 = (+__Z5IKabsd($13420));
         $13428 = $13427 < 9.9999999999999995E-7;
         if (!($13428)) {
          break;
         }
         HEAPF64[$184>>3] = 0.0;
         HEAPF64[$183>>3] = -1.0;
         HEAPF64[$3>>3] = 3.14159265358979;
         HEAPF64[$76>>3] = 0.0;
         HEAPF64[$75>>3] = 1.0;
         HEAPF64[$7>>3] = 0.0;
         $13429 = +HEAPF64[$43>>3];
         $13430 = (+__Z5IKabsd($13429));
         $13431 = +HEAPF64[$45>>3];
         $13432 = (+__Z5IKabsd($13431));
         $13433 = $13430 + $13432;
         $13434 = (+__Z5IKabsd($13433));
         $13435 = $13434 < 9.9999999999999995E-7;
         if (!($13435)) {
          HEAP16[$j0valid941>>1] = 0;
          HEAP8[$2>>0] = 2;
          $13672 = +HEAPF64[$45>>3];
          $13673 = -$13672;
          $13674 = +HEAPF64[$43>>3];
          __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1805,$13673,$13674,1.9999999999999999E-6);
          $13675 = HEAP8[$568>>0]|0;
          $13676 = ($13675<<24>>24)==(0);
          if ($13676) {
           break;
          }
          $13677 = +HEAPF64[$x1805>>3];
          $13678 = -$13677;
          HEAPF64[$j0array938>>3] = $13678;
          $13679 = (+__Z5IKsind($13678));
          HEAPF64[$sj0array940>>3] = $13679;
          $13680 = (+__Z5IKcosd($13678));
          HEAPF64[$cj0array939>>3] = $13680;
          $13681 = 3.14159265358979 - $13677;
          HEAPF64[$569>>3] = $13681;
          $13682 = (+__Z5IKsind($13681));
          HEAPF64[$570>>3] = $13682;
          $13683 = +HEAPF64[$569>>3];
          $13684 = (+__Z5IKcosd($13683));
          HEAPF64[$571>>3] = $13684;
          $13685 = +HEAPF64[$j0array938>>3];
          $13686 = $13685 > 3.14159265358979;
          do {
           if ($13686) {
            $13687 = $13685 + -6.2831853071795898;
            HEAPF64[$j0array938>>3] = $13687;
           } else {
            $13688 = $13685 < -3.14159265358979;
            if (!($13688)) {
             break;
            }
            $13689 = $13685 + 6.2831853071795898;
            HEAPF64[$j0array938>>3] = $13689;
           }
          } while(0);
          HEAP8[$j0valid941>>0] = 1;
          $13690 = +HEAPF64[$569>>3];
          $13691 = $13690 > 3.14159265358979;
          do {
           if ($13691) {
            $13692 = $13690 + -6.2831853071795898;
            HEAPF64[$569>>3] = $13692;
           } else {
            $13693 = $13690 < -3.14159265358979;
            if (!($13693)) {
             break;
            }
            $13694 = $13690 + 6.2831853071795898;
            HEAPF64[$569>>3] = $13694;
           }
          } while(0);
          HEAP8[$572>>0] = 1;
          $ij0942$01331 = 0;
          while(1) {
           $13695 = (($j0valid941) + ($ij0942$01331)|0);
           $13696 = HEAP8[$13695>>0]|0;
           $13697 = ($13696<<24>>24)==(0);
           do {
            if (!($13697)) {
             $13698 = $ij0942$01331&255;
             HEAP8[$0>>0] = $13698;
             HEAP8[$1>>0] = -1;
             $iij0943$01327 = (($ij0942$01331) + 1)|0;
             $13699 = ($iij0943$01327|0)<(2);
             do {
              if ($13699) {
               $13700 = (($sj0array940) + ($ij0942$01331<<3)|0);
               $13701 = (($j0valid941) + ($iij0943$01327)|0);
               $13702 = HEAP8[$13701>>0]|0;
               $13703 = ($13702<<24>>24)==(0);
               if ($13703) {
                break;
               }
               $13704 = (($cj0array939) + ($ij0942$01331<<3)|0);
               $13705 = +HEAPF64[$13704>>3];
               $13706 = (($cj0array939) + ($iij0943$01327<<3)|0);
               $13707 = +HEAPF64[$13706>>3];
               $13708 = $13705 - $13707;
               $13709 = (+__Z5IKabsd($13708));
               $13710 = $13709 < 9.9999999999999995E-7;
               if (!($13710)) {
                break;
               }
               $13711 = +HEAPF64[$13700>>3];
               $13712 = (($sj0array940) + ($iij0943$01327<<3)|0);
               $13713 = +HEAPF64[$13712>>3];
               $13714 = $13711 - $13713;
               $13715 = (+__Z5IKabsd($13714));
               $13716 = $13715 < 9.9999999999999995E-7;
               if (!($13716)) {
                break;
               }
               HEAP8[$13701>>0] = 0;
               $13717 = $iij0943$01327&255;
               HEAP8[$1>>0] = $13717;
              }
             } while(0);
             $13718 = (($j0array938) + ($ij0942$01331<<3)|0);
             $13719 = +HEAPF64[$13718>>3];
             HEAPF64[$this>>3] = $13719;
             $13720 = (($cj0array939) + ($ij0942$01331<<3)|0);
             $13721 = +HEAPF64[$13720>>3];
             HEAPF64[$573>>3] = $13721;
             $13722 = (($sj0array940) + ($ij0942$01331<<3)|0);
             $13723 = +HEAPF64[$13722>>3];
             HEAPF64[$574>>3] = $13723;
             $13724 = +HEAPF64[$this>>3];
             $13725 = (+__Z5IKsind($13724));
             $13726 = (+__Z5IKcosd($13724));
             $13727 = +HEAPF64[$45>>3];
             $13728 = +HEAPF64[$24>>3];
             $13729 = $13727 * $13728;
             $13730 = +HEAPF64[$23>>3];
             $13731 = +HEAPF64[$43>>3];
             $13732 = $13730 * $13731;
             $13733 = $13726 * 0.089999999999999996;
             $13734 = $13725 * $13727;
             $13735 = $13728 * $13731;
             $13736 = $13725 * $13735;
             $13737 = -$13731;
             $13738 = $13726 * $13737;
             $13739 = $13738 - $13734;
             $13740 = $13728 * $13737;
             $13741 = $13726 * $13740;
             $13742 = $13725 * $13732;
             $13743 = $13741 + $13742;
             $13744 = $13725 * $13729;
             $13745 = $13743 - $13744;
             $13746 = $13727 * $13730;
             $13747 = $13726 * $13746;
             $13748 = $13745 - $13747;
             $13749 = $13733 * $13732;
             $13750 = $13730 * -0.089999999999999996;
             $13751 = $13734 * $13750;
             $13752 = $13751 - $13749;
             $13753 = $13733 * $13729;
             $13754 = $13753 + $13752;
             $13755 = $13736 * 0.089999999999999996;
             $13756 = $13754 - $13755;
             $13757 = (+__Z5IKabsd($13739));
             $13758 = $13757 > 5.0000000000000004E-6;
             if ($13758) {
              break;
             }
             $13759 = $13734 * $13730;
             $13760 = $13726 * $13729;
             $13761 = $13759 - $13760;
             $13762 = $13761 + $13736;
             $13763 = $13726 * $13732;
             $13764 = $13763 + $13762;
             $13765 = (+__Z5IKabsd($13764));
             $13766 = $13765 > 5.0000000000000004E-6;
             if ($13766) {
              break;
             }
             $13767 = (+__Z5IKabsd($13748));
             $13768 = $13767 > 5.0000000000000004E-6;
             if ($13768) {
              break;
             }
             $13769 = (+__Z5IKabsd($13756));
             $13770 = $13769 > 5.0000000000000004E-6;
             if ($13770) {
              break;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
            }
           } while(0);
           $13771 = (($ij0942$01331) + 1)|0;
           $exitcond2199 = ($13771|0)==(2);
           if ($exitcond2199) {
            break L604;
           } else {
            $ij0942$01331 = $13771;
           }
          }
         }
         HEAPF64[$184>>3] = 0.0;
         HEAPF64[$183>>3] = -1.0;
         HEAPF64[$3>>3] = 3.14159265358979;
         HEAPF64[$76>>3] = 0.0;
         HEAPF64[$75>>3] = 1.0;
         HEAPF64[$7>>3] = 0.0;
         $13436 = +HEAPF64[$23>>3];
         $13437 = +HEAPF64[$43>>3];
         $13438 = $13436 * $13437;
         $13439 = +HEAPF64[$45>>3];
         $13440 = +HEAPF64[$24>>3];
         $13441 = $13439 * $13440;
         $13442 = $13438 - $13441;
         $13443 = (+__Z5IKabsd($13442));
         $13444 = $13436 * $13439;
         $13445 = $13437 * $13440;
         $13446 = $13444 + $13445;
         $13447 = (+__Z5IKabsd($13446));
         $13448 = $13443 + $13447;
         $13449 = (+__Z5IKabsd($13448));
         $13450 = $13449 < 9.9999999999999995E-7;
         if (!($13450)) {
          HEAP16[$j0valid934>>1] = 0;
          HEAP8[$2>>0] = 2;
          $13570 = +HEAPF64[$23>>3];
          $13571 = +HEAPF64[$43>>3];
          $13572 = $13570 * $13571;
          $13573 = +HEAPF64[$45>>3];
          $13574 = +HEAPF64[$24>>3];
          $13575 = $13573 * $13574;
          $13576 = $13572 - $13575;
          $13577 = $13570 * $13573;
          $13578 = $13571 * $13574;
          $13579 = $13577 + $13578;
          __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1796,$13576,$13579,1.9999999999999999E-6);
          $13580 = HEAP8[$561>>0]|0;
          $13581 = ($13580<<24>>24)==(0);
          if ($13581) {
           break;
          }
          $13582 = +HEAPF64[$x1796>>3];
          $13583 = -$13582;
          HEAPF64[$j0array931>>3] = $13583;
          $13584 = (+__Z5IKsind($13583));
          HEAPF64[$sj0array933>>3] = $13584;
          $13585 = (+__Z5IKcosd($13583));
          HEAPF64[$cj0array932>>3] = $13585;
          $13586 = 3.14159265358979 - $13582;
          HEAPF64[$562>>3] = $13586;
          $13587 = (+__Z5IKsind($13586));
          HEAPF64[$563>>3] = $13587;
          $13588 = +HEAPF64[$562>>3];
          $13589 = (+__Z5IKcosd($13588));
          HEAPF64[$564>>3] = $13589;
          $13590 = +HEAPF64[$j0array931>>3];
          $13591 = $13590 > 3.14159265358979;
          do {
           if ($13591) {
            $13592 = $13590 + -6.2831853071795898;
            HEAPF64[$j0array931>>3] = $13592;
           } else {
            $13593 = $13590 < -3.14159265358979;
            if (!($13593)) {
             break;
            }
            $13594 = $13590 + 6.2831853071795898;
            HEAPF64[$j0array931>>3] = $13594;
           }
          } while(0);
          HEAP8[$j0valid934>>0] = 1;
          $13595 = +HEAPF64[$562>>3];
          $13596 = $13595 > 3.14159265358979;
          do {
           if ($13596) {
            $13597 = $13595 + -6.2831853071795898;
            HEAPF64[$562>>3] = $13597;
           } else {
            $13598 = $13595 < -3.14159265358979;
            if (!($13598)) {
             break;
            }
            $13599 = $13595 + 6.2831853071795898;
            HEAPF64[$562>>3] = $13599;
           }
          } while(0);
          HEAP8[$565>>0] = 1;
          $ij0935$01336 = 0;
          while(1) {
           $13600 = (($j0valid934) + ($ij0935$01336)|0);
           $13601 = HEAP8[$13600>>0]|0;
           $13602 = ($13601<<24>>24)==(0);
           do {
            if (!($13602)) {
             $13603 = $ij0935$01336&255;
             HEAP8[$0>>0] = $13603;
             HEAP8[$1>>0] = -1;
             $iij0936$01332 = (($ij0935$01336) + 1)|0;
             $13604 = ($iij0936$01332|0)<(2);
             do {
              if ($13604) {
               $13605 = (($sj0array933) + ($ij0935$01336<<3)|0);
               $13606 = (($j0valid934) + ($iij0936$01332)|0);
               $13607 = HEAP8[$13606>>0]|0;
               $13608 = ($13607<<24>>24)==(0);
               if ($13608) {
                break;
               }
               $13609 = (($cj0array932) + ($ij0935$01336<<3)|0);
               $13610 = +HEAPF64[$13609>>3];
               $13611 = (($cj0array932) + ($iij0936$01332<<3)|0);
               $13612 = +HEAPF64[$13611>>3];
               $13613 = $13610 - $13612;
               $13614 = (+__Z5IKabsd($13613));
               $13615 = $13614 < 9.9999999999999995E-7;
               if (!($13615)) {
                break;
               }
               $13616 = +HEAPF64[$13605>>3];
               $13617 = (($sj0array933) + ($iij0936$01332<<3)|0);
               $13618 = +HEAPF64[$13617>>3];
               $13619 = $13616 - $13618;
               $13620 = (+__Z5IKabsd($13619));
               $13621 = $13620 < 9.9999999999999995E-7;
               if (!($13621)) {
                break;
               }
               HEAP8[$13606>>0] = 0;
               $13622 = $iij0936$01332&255;
               HEAP8[$1>>0] = $13622;
              }
             } while(0);
             $13623 = (($j0array931) + ($ij0935$01336<<3)|0);
             $13624 = +HEAPF64[$13623>>3];
             HEAPF64[$this>>3] = $13624;
             $13625 = (($cj0array932) + ($ij0935$01336<<3)|0);
             $13626 = +HEAPF64[$13625>>3];
             HEAPF64[$566>>3] = $13626;
             $13627 = (($sj0array933) + ($ij0935$01336<<3)|0);
             $13628 = +HEAPF64[$13627>>3];
             HEAPF64[$567>>3] = $13628;
             $13629 = +HEAPF64[$this>>3];
             $13630 = (+__Z5IKcosd($13629));
             $13631 = (+__Z5IKsind($13629));
             $13632 = +HEAPF64[$24>>3];
             $13633 = $13632 * 0.089999999999999996;
             $13634 = +HEAPF64[$23>>3];
             $13635 = +HEAPF64[$45>>3];
             $13636 = $13634 * $13635;
             $13637 = +HEAPF64[$43>>3];
             $13638 = $13631 * $13637;
             $13639 = $13631 * $13635;
             $13640 = $13630 * $13635;
             $13641 = $13638 - $13640;
             $13642 = -$13637;
             $13643 = $13634 * $13638;
             $13644 = $13630 * $13636;
             $13645 = $13643 - $13644;
             $13646 = $13632 * $13642;
             $13647 = $13630 * $13646;
             $13648 = $13647 + $13645;
             $13649 = $13632 * $13639;
             $13650 = $13648 - $13649;
             $13651 = $13633 * $13638;
             $13652 = $13633 * $13640;
             $13653 = $13652 - $13651;
             $13654 = $13634 * -0.089999999999999996;
             $13655 = $13654 * $13637;
             $13656 = $13630 * $13655;
             $13657 = $13656 + $13653;
             $13658 = $13631 * -0.089999999999999996;
             $13659 = $13658 * $13636;
             $13660 = $13659 + $13657;
             $13661 = (+__Z5IKabsd($13641));
             $13662 = $13661 > 5.0000000000000004E-6;
             if ($13662) {
              break;
             }
             $13663 = $13630 * $13642;
             $13664 = $13663 - $13639;
             $13665 = (+__Z5IKabsd($13664));
             $13666 = $13665 > 5.0000000000000004E-6;
             if ($13666) {
              break;
             }
             $13667 = (+__Z5IKabsd($13650));
             $13668 = $13667 > 5.0000000000000004E-6;
             if ($13668) {
              break;
             }
             $13669 = (+__Z5IKabsd($13660));
             $13670 = $13669 > 5.0000000000000004E-6;
             if ($13670) {
              break;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
            }
           } while(0);
           $13671 = (($ij0935$01336) + 1)|0;
           $exitcond2200 = ($13671|0)==(2);
           if ($exitcond2200) {
            break L604;
           } else {
            $ij0935$01336 = $13671;
           }
          }
         }
         HEAPF64[$184>>3] = 0.0;
         HEAPF64[$183>>3] = -1.0;
         HEAPF64[$3>>3] = 3.14159265358979;
         HEAPF64[$76>>3] = 0.0;
         HEAPF64[$75>>3] = 1.0;
         HEAPF64[$7>>3] = 0.0;
         $13451 = +HEAPF64[$24>>3];
         $13452 = +HEAPF64[$45>>3];
         $13453 = $13451 * $13452;
         $13454 = +HEAPF64[$23>>3];
         $13455 = +HEAPF64[$43>>3];
         $13456 = $13454 * $13455;
         $13457 = $13456 - $13453;
         $13458 = (+__Z5IKabsd($13457));
         $13459 = $13452 * $13454;
         $13460 = $13451 * $13455;
         $13461 = -$13460;
         $13462 = $13461 - $13459;
         $13463 = (+__Z5IKabsd($13462));
         $13464 = $13458 + $13463;
         $13465 = (+__Z5IKabsd($13464));
         $13466 = $13465 < 9.9999999999999995E-7;
         if ($13466) {
          break;
         }
         HEAP16[$j0valid927>>1] = 0;
         HEAP8[$2>>0] = 2;
         $13467 = +HEAPF64[$45>>3];
         $13468 = +HEAPF64[$23>>3];
         $13469 = $13467 * $13468;
         $13470 = +HEAPF64[$43>>3];
         $13471 = +HEAPF64[$24>>3];
         $13472 = $13470 * $13471;
         $13473 = -$13472;
         $13474 = $13473 - $13469;
         $13475 = $13468 * $13470;
         $13476 = $13467 * $13471;
         $13477 = $13475 - $13476;
         __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1787,$13474,$13477,1.9999999999999999E-6);
         $13478 = HEAP8[$554>>0]|0;
         $13479 = ($13478<<24>>24)==(0);
         if ($13479) {
          break;
         }
         $13480 = +HEAPF64[$x1787>>3];
         $13481 = -$13480;
         HEAPF64[$j0array924>>3] = $13481;
         $13482 = (+__Z5IKsind($13481));
         HEAPF64[$sj0array926>>3] = $13482;
         $13483 = (+__Z5IKcosd($13481));
         HEAPF64[$cj0array925>>3] = $13483;
         $13484 = 3.14159265358979 - $13480;
         HEAPF64[$555>>3] = $13484;
         $13485 = (+__Z5IKsind($13484));
         HEAPF64[$556>>3] = $13485;
         $13486 = +HEAPF64[$555>>3];
         $13487 = (+__Z5IKcosd($13486));
         HEAPF64[$557>>3] = $13487;
         $13488 = +HEAPF64[$j0array924>>3];
         $13489 = $13488 > 3.14159265358979;
         do {
          if ($13489) {
           $13490 = $13488 + -6.2831853071795898;
           HEAPF64[$j0array924>>3] = $13490;
          } else {
           $13491 = $13488 < -3.14159265358979;
           if (!($13491)) {
            break;
           }
           $13492 = $13488 + 6.2831853071795898;
           HEAPF64[$j0array924>>3] = $13492;
          }
         } while(0);
         HEAP8[$j0valid927>>0] = 1;
         $13493 = +HEAPF64[$555>>3];
         $13494 = $13493 > 3.14159265358979;
         do {
          if ($13494) {
           $13495 = $13493 + -6.2831853071795898;
           HEAPF64[$555>>3] = $13495;
          } else {
           $13496 = $13493 < -3.14159265358979;
           if (!($13496)) {
            break;
           }
           $13497 = $13493 + 6.2831853071795898;
           HEAPF64[$555>>3] = $13497;
          }
         } while(0);
         HEAP8[$558>>0] = 1;
         $ij0928$01341 = 0;
         while(1) {
          $13498 = (($j0valid927) + ($ij0928$01341)|0);
          $13499 = HEAP8[$13498>>0]|0;
          $13500 = ($13499<<24>>24)==(0);
          do {
           if (!($13500)) {
            $13501 = $ij0928$01341&255;
            HEAP8[$0>>0] = $13501;
            HEAP8[$1>>0] = -1;
            $iij0929$01337 = (($ij0928$01341) + 1)|0;
            $13502 = ($iij0929$01337|0)<(2);
            do {
             if ($13502) {
              $13503 = (($sj0array926) + ($ij0928$01341<<3)|0);
              $13504 = (($j0valid927) + ($iij0929$01337)|0);
              $13505 = HEAP8[$13504>>0]|0;
              $13506 = ($13505<<24>>24)==(0);
              if ($13506) {
               break;
              }
              $13507 = (($cj0array925) + ($ij0928$01341<<3)|0);
              $13508 = +HEAPF64[$13507>>3];
              $13509 = (($cj0array925) + ($iij0929$01337<<3)|0);
              $13510 = +HEAPF64[$13509>>3];
              $13511 = $13508 - $13510;
              $13512 = (+__Z5IKabsd($13511));
              $13513 = $13512 < 9.9999999999999995E-7;
              if (!($13513)) {
               break;
              }
              $13514 = +HEAPF64[$13503>>3];
              $13515 = (($sj0array926) + ($iij0929$01337<<3)|0);
              $13516 = +HEAPF64[$13515>>3];
              $13517 = $13514 - $13516;
              $13518 = (+__Z5IKabsd($13517));
              $13519 = $13518 < 9.9999999999999995E-7;
              if (!($13519)) {
               break;
              }
              HEAP8[$13504>>0] = 0;
              $13520 = $iij0929$01337&255;
              HEAP8[$1>>0] = $13520;
             }
            } while(0);
            $13521 = (($j0array924) + ($ij0928$01341<<3)|0);
            $13522 = +HEAPF64[$13521>>3];
            HEAPF64[$this>>3] = $13522;
            $13523 = (($cj0array925) + ($ij0928$01341<<3)|0);
            $13524 = +HEAPF64[$13523>>3];
            HEAPF64[$559>>3] = $13524;
            $13525 = (($sj0array926) + ($ij0928$01341<<3)|0);
            $13526 = +HEAPF64[$13525>>3];
            HEAPF64[$560>>3] = $13526;
            $13527 = +HEAPF64[$this>>3];
            $13528 = (+__Z5IKcosd($13527));
            $13529 = (+__Z5IKsind($13527));
            $13530 = +HEAPF64[$24>>3];
            $13531 = $13530 * 0.089999999999999996;
            $13532 = +HEAPF64[$43>>3];
            $13533 = $13529 * $13532;
            $13534 = +HEAPF64[$45>>3];
            $13535 = $13529 * $13534;
            $13536 = +HEAPF64[$23>>3];
            $13537 = $13532 * $13536;
            $13538 = $13528 * $13537;
            $13539 = -$13534;
            $13540 = $13528 * $13539;
            $13541 = $13533 + $13540;
            $13542 = $13530 * $13533;
            $13543 = $13542 + $13538;
            $13544 = $13536 * $13535;
            $13545 = $13544 + $13543;
            $13546 = $13530 * $13539;
            $13547 = $13528 * $13546;
            $13548 = $13547 + $13545;
            $13549 = $13531 * $13533;
            $13550 = $13528 * $13534;
            $13551 = $13531 * $13550;
            $13552 = $13551 - $13549;
            $13553 = $13538 * 0.089999999999999996;
            $13554 = $13552 - $13553;
            $13555 = $13536 * -0.089999999999999996;
            $13556 = $13535 * $13555;
            $13557 = $13556 + $13554;
            $13558 = (+__Z5IKabsd($13541));
            $13559 = $13558 > 5.0000000000000004E-6;
            if ($13559) {
             break;
            }
            $13560 = $13528 * $13532;
            $13561 = -$13560;
            $13562 = $13561 - $13535;
            $13563 = (+__Z5IKabsd($13562));
            $13564 = $13563 > 5.0000000000000004E-6;
            if ($13564) {
             break;
            }
            $13565 = (+__Z5IKabsd($13548));
            $13566 = $13565 > 5.0000000000000004E-6;
            if ($13566) {
             break;
            }
            $13567 = (+__Z5IKabsd($13557));
            $13568 = $13567 > 5.0000000000000004E-6;
            if ($13568) {
             break;
            }
            __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           }
          } while(0);
          $13569 = (($ij0928$01341) + 1)|0;
          $exitcond2201 = ($13569|0)==(2);
          if ($exitcond2201) {
           break;
          } else {
           $ij0928$01341 = $13569;
          }
         }
        }
       } while(0);
       $14749 = (($ij1264$01702) + 1)|0;
       $exitcond2274 = ($14749|0)==(2);
       if ($exitcond2274) {
        break L16;
       } else {
        $ij1264$01702 = $14749;
       }
      }
     }
    }
    $1134 = +HEAPF64[$23>>3];
    $1135 = $1134 * $1134;
    $1136 = +HEAPF64[$24>>3];
    $1137 = $1136 * $1136;
    $1138 = +HEAPF64[$43>>3];
    $1139 = $1138 * $1138;
    $1140 = +HEAPF64[$45>>3];
    $1141 = $1140 * $1140;
    $1142 = $1140 * $1141;
    $1143 = $1140 * $1142;
    $1144 = $1136 * $1137;
    $1145 = $1136 * $1144;
    $1146 = $1134 * $1135;
    $1147 = $1134 * $1146;
    $1148 = $1138 * $1140;
    $1149 = $1139 * $1141;
    $1150 = $1135 * 2.0;
    $1151 = $1150 * $1137;
    $1152 = $1145 * $1149;
    $1153 = $1151 * $1149;
    $1154 = $1152 + $1153;
    $1155 = $1147 * $1149;
    $1156 = $1155 + $1154;
    $1157 = $1151 * $1143;
    $1158 = $1157 + $1156;
    $1159 = $1147 * $1143;
    $1160 = $1159 + $1158;
    $1161 = $1145 * $1143;
    $1162 = $1161 + $1160;
    $1163 = (+__Z5IKabsd($1162));
    $1164 = $1163 < 9.9999999999999995E-7;
    if (!($1164)) {
     $1165 = $1137 * $1148;
     $1166 = -$1165;
     $1167 = $1135 * $1148;
     $1168 = $1166 - $1167;
     $1169 = (+__Z5IKabsd($1168));
     $1170 = $1135 * $1141;
     $1171 = $1137 * $1141;
     $1172 = $1170 + $1171;
     $1173 = (+__Z5IKabsd($1172));
     $1174 = $1169 + $1173;
     $1175 = (+__Z5IKabsd($1174));
     $1176 = $1175 < 9.9999999999999995E-7;
     if (!($1176)) {
      HEAP16[$j0valid>>1] = 0;
      HEAP8[$2>>0] = 2;
      $1177 = +HEAPF64[$23>>3];
      $1178 = $1177 * $1177;
      $1179 = +HEAPF64[$45>>3];
      $1180 = $1179 * $1179;
      $1181 = +HEAPF64[$24>>3];
      $1182 = $1181 * $1181;
      $1183 = $1179 * 0.044999999999999998;
      $1184 = $1183 * $1181;
      $1185 = +HEAPF64[$43>>3];
      $1186 = $1179 * $1185;
      $1187 = $1180 * $1182;
      $1188 = $1178 * $1180;
      $1189 = $1188 + $1187;
      $1190 = $1178 * $1186;
      $1191 = $1182 * $1186;
      $1192 = -$1191;
      $1193 = $1192 - $1190;
      __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x103,$1189,$1193,1.9999999999999999E-6);
      $1194 = HEAP8[$77>>0]|0;
      $1195 = ($1194<<24>>24)==(0);
      if (!($1195)) {
       $1196 = +HEAPF64[$x103>>3];
       $1197 = $1189 * $1189;
       $1198 = $1193 * $1193;
       $1199 = $1197 + $1198;
       $1200 = $1199 < -1.0000000000000001E-5;
       if (!($1200)) {
        $1201 = (+__Z6IKsqrtd($1199));
        $1202 = (+__Z5IKabsd($1201));
        __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x104,$1202,-1);
        $1203 = HEAP8[$78>>0]|0;
        $1204 = ($1203<<24>>24)==(0);
        if (!($1204)) {
         $1205 = +HEAPF64[$x104>>3];
         $1206 = +HEAPF64[$45>>3];
         $1207 = $1206 * -0.29999999999999999;
         $1208 = +HEAPF64[$24>>3];
         $1209 = $1207 * $1208;
         $1210 = +HEAPF64[$76>>3];
         $1211 = $1209 * $1210;
         $1212 = +HEAPF64[$75>>3];
         $1213 = $1184 * $1212;
         $1214 = $1211 + $1213;
         $1215 = $1214 - $1184;
         $1216 = $1205 * $1215;
         $1217 = $1216 < -1.0000020000000001;
         $1218 = $1216 > 1.0000020000000001;
         $or$cond90 = $1217 | $1218;
         if (!($or$cond90)) {
          $1219 = (+__Z6IKasind($1216));
          $1220 = -$1219;
          $1221 = $1220 - $1196;
          HEAPF64[$j0array>>3] = $1221;
          $1222 = (+__Z5IKsind($1221));
          HEAPF64[$sj0array>>3] = $1222;
          $1223 = (+__Z5IKcosd($1221));
          HEAPF64[$cj0array>>3] = $1223;
          $1224 = 3.14159265358979 - $1196;
          $1225 = $1224 + $1219;
          HEAPF64[$79>>3] = $1225;
          $1226 = (+__Z5IKsind($1225));
          HEAPF64[$80>>3] = $1226;
          $1227 = +HEAPF64[$79>>3];
          $1228 = (+__Z5IKcosd($1227));
          HEAPF64[$81>>3] = $1228;
          $1229 = +HEAPF64[$j0array>>3];
          $1230 = $1229 > 3.14159265358979;
          if ($1230) {
           $1231 = $1229 + -6.2831853071795898;
           HEAPF64[$j0array>>3] = $1231;
          } else {
           $1232 = $1229 < -3.14159265358979;
           if ($1232) {
            $1233 = $1229 + 6.2831853071795898;
            HEAPF64[$j0array>>3] = $1233;
           }
          }
          HEAP8[$j0valid>>0] = 1;
          $1234 = +HEAPF64[$79>>3];
          $1235 = $1234 > 3.14159265358979;
          if ($1235) {
           $1236 = $1234 + -6.2831853071795898;
           HEAPF64[$79>>3] = $1236;
          } else {
           $1237 = $1234 < -3.14159265358979;
           if ($1237) {
            $1238 = $1234 + 6.2831853071795898;
            HEAPF64[$79>>3] = $1238;
           }
          }
          HEAP8[$82>>0] = 1;
          $ij0$01912 = 0;
          while(1) {
           $1239 = (($j0valid) + ($ij0$01912)|0);
           $1240 = HEAP8[$1239>>0]|0;
           $1241 = ($1240<<24>>24)==(0);
           L2360: do {
            if (!($1241)) {
             $1242 = $ij0$01912&255;
             HEAP8[$0>>0] = $1242;
             HEAP8[$1>>0] = -1;
             $iij0$01703 = (($ij0$01912) + 1)|0;
             $1243 = ($iij0$01703|0)<(2);
             do {
              if ($1243) {
               $1244 = (($sj0array) + ($ij0$01912<<3)|0);
               $1245 = (($j0valid) + ($iij0$01703)|0);
               $1246 = HEAP8[$1245>>0]|0;
               $1247 = ($1246<<24>>24)==(0);
               if ($1247) {
                break;
               }
               $1248 = (($cj0array) + ($ij0$01912<<3)|0);
               $1249 = +HEAPF64[$1248>>3];
               $1250 = (($cj0array) + ($iij0$01703<<3)|0);
               $1251 = +HEAPF64[$1250>>3];
               $1252 = $1249 - $1251;
               $1253 = (+__Z5IKabsd($1252));
               $1254 = $1253 < 9.9999999999999995E-7;
               if (!($1254)) {
                break;
               }
               $1255 = +HEAPF64[$1244>>3];
               $1256 = (($sj0array) + ($iij0$01703<<3)|0);
               $1257 = +HEAPF64[$1256>>3];
               $1258 = $1255 - $1257;
               $1259 = (+__Z5IKabsd($1258));
               $1260 = $1259 < 9.9999999999999995E-7;
               if (!($1260)) {
                break;
               }
               HEAP8[$1245>>0] = 0;
               $1261 = $iij0$01703&255;
               HEAP8[$1>>0] = $1261;
              }
             } while(0);
             $1262 = (($j0array) + ($ij0$01912<<3)|0);
             $1263 = +HEAPF64[$1262>>3];
             HEAPF64[$this>>3] = $1263;
             $1264 = (($cj0array) + ($ij0$01912<<3)|0);
             $1265 = +HEAPF64[$1264>>3];
             HEAPF64[$83>>3] = $1265;
             $1266 = (($sj0array) + ($ij0$01912<<3)|0);
             $1267 = +HEAPF64[$1266>>3];
             HEAPF64[$84>>3] = $1267;
             $1268 = +HEAPF64[$24>>3];
             $1269 = $1268 * $1268;
             $1270 = +HEAPF64[$23>>3];
             $1271 = $1270 * $1270;
             $1272 = +HEAPF64[$43>>3];
             $1273 = $1272 * $1272;
             $1274 = +HEAPF64[$this>>3];
             $1275 = (+__Z5IKsind($1274));
             $1276 = (+__Z5IKcosd($1274));
             $1277 = +HEAPF64[$45>>3];
             $1278 = $1272 * $1277;
             $1279 = $1268 * 0.044999999999999998;
             $1280 = $1268 * 0.29999999999999999;
             $1281 = +HEAPF64[$76>>3];
             $1282 = $1280 * $1281;
             $1283 = $1271 * $1273;
             $1284 = $1269 * $1273;
             $1285 = -$1284;
             $1286 = $1285 - $1283;
             $1287 = $1275 * $1286;
             $1288 = -$1272;
             $1289 = $1282 * $1288;
             $1290 = $1287 + $1289;
             $1291 = $1279 * $1288;
             $1292 = $1291 + $1290;
             $1293 = $1271 * $1278;
             $1294 = $1269 * $1278;
             $1295 = $1293 + $1294;
             $1296 = $1276 * $1295;
             $1297 = $1296 + $1292;
             $1298 = +HEAPF64[$75>>3];
             $1299 = $1272 * $1298;
             $1300 = $1279 * $1299;
             $1301 = $1300 + $1297;
             $1302 = (+__Z5IKabsd($1301));
             $1303 = $1302 > 5.0000000000000004E-6;
             if ($1303) {
              break;
             }
             $1304 = $1279 * $1298;
             $1305 = $1282 - $1304;
             $1306 = $1279 + $1305;
             $1307 = $1272 * $1275;
             $1308 = $1307 + $1306;
             $1309 = $1276 * $1277;
             $1310 = $1308 - $1309;
             $1311 = (+__Z5IKabsd($1310));
             $1312 = $1311 > 5.0000000000000004E-6;
             if ($1312) {
              break;
             }
             $1313 = $1267 * $1277;
             $1314 = $1298 * 0.29999999999999999;
             $1315 = $1281 * 0.044999999999999998;
             $1316 = +HEAPF64[$47>>3];
             $1317 = $1270 * $1316;
             $1318 = $1298 * 6.6666666666666696;
             $1319 = +HEAPF64[$83>>3];
             $1320 = $1272 * $1319;
             $1321 = $1281 * $1320;
             $1322 = $1298 * $1317;
             $1323 = $1322 - $1321;
             $1324 = $1318 * $1320;
             $1325 = $1323 - $1324;
             $1326 = $1281 * -6.6666666666666696;
             $1327 = $1326 * $1317;
             $1328 = $1327 + $1325;
             $1329 = $1320 * 12.2222222222222;
             $1330 = $1328 - $1329;
             $1331 = $1313 * 12.2222222222222;
             $1332 = $1330 - $1331;
             $1333 = -$1313;
             $1334 = $1318 * $1333;
             $1335 = $1334 + $1332;
             $1336 = $1281 * $1333;
             $1337 = $1336 + $1335;
             $1338 = $1337 - $1317;
             $1339 = (+__Z5IKabsd($1338));
             $1340 = $1339 < 9.9999999999999995E-7;
             do {
              if (!($1340)) {
               $1341 = $1320 * 0.55000000000000004;
               $1342 = $1313 * -0.55000000000000004;
               $1343 = $1342 - $1341;
               $1344 = $1315 * $1320;
               $1345 = $1343 - $1344;
               $1346 = $1314 * $1320;
               $1347 = $1345 - $1346;
               $1348 = $1315 * $1333;
               $1349 = $1348 + $1347;
               $1350 = $1314 * $1333;
               $1351 = $1350 + $1349;
               $1352 = $1281 * -0.29999999999999999;
               $1353 = $1352 * $1317;
               $1354 = $1353 + $1351;
               $1355 = $1298 * 0.044999999999999998;
               $1356 = $1355 * $1317;
               $1357 = $1356 + $1354;
               $1358 = $1317 * 0.044999999999999998;
               $1359 = $1357 - $1358;
               $1360 = (+__Z6IKsignd($1359));
               $1361 = (+__Z5IKabsd($1360));
               $1362 = $1361 < 9.9999999999999995E-7;
               if ($1362) {
                break;
               }
               HEAP8[$6>>0] = 1;
               $4609 = +HEAPF64[$75>>3];
               $4610 = $4609 * $4609;
               $4611 = +HEAPF64[$23>>3];
               $4612 = +HEAPF64[$76>>3];
               $4613 = $4611 * $4612;
               $4614 = +HEAPF64[$45>>3];
               $4615 = +HEAPF64[$84>>3];
               $4616 = $4614 * $4615;
               $4617 = $4609 * 0.29999999999999999;
               $4618 = $4612 * 0.044999999999999998;
               $4619 = +HEAPF64[$83>>3];
               $4620 = +HEAPF64[$43>>3];
               $4621 = $4619 * $4620;
               $4622 = $4609 * $4611;
               $4623 = +HEAPF64[$47>>3];
               $4624 = $4623 * 0.044999999999999998;
               $4625 = $4611 * $4624;
               $4626 = $4623 * -0.29999999999999999;
               $4627 = $4613 * $4626;
               $4628 = $4627 - $4625;
               $4629 = $4618 * $4621;
               $4630 = $4628 - $4629;
               $4631 = $4617 * $4621;
               $4632 = $4630 - $4631;
               $4633 = -$4616;
               $4634 = $4617 * $4633;
               $4635 = $4634 + $4632;
               $4636 = $4618 * $4633;
               $4637 = $4636 + $4635;
               $4638 = $4621 * 0.55000000000000004;
               $4639 = $4637 - $4638;
               $4640 = $4616 * 0.55000000000000004;
               $4641 = $4639 - $4640;
               $4642 = $4622 * $4624;
               $4643 = $4642 + $4641;
               $4644 = (+__Z6IKsignd($4643));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x867,$4644,-1);
               $4645 = HEAP8[$173>>0]|0;
               $4646 = ($4645<<24>>24)==(0);
               if ($4646) {
                break L2360;
               }
               $4647 = $4610 * 0.087974999999999997;
               $4648 = -0.30452499999999999 - $4647;
               $4649 = +HEAPF64[$76>>3];
               $4650 = $4649 * 0.049500000000000002;
               $4651 = $4648 - $4650;
               $4652 = +HEAPF64[$75>>3];
               $4653 = $4652 * -0.027;
               $4654 = $4649 * $4653;
               $4655 = $4651 + $4654;
               $4656 = +HEAPF64[$47>>3];
               $4657 = $4656 * $4656;
               $4658 = $4657 + $4655;
               $4659 = $4652 * 0.33000000000000002;
               $4660 = $4658 - $4659;
               $4661 = $4613 * 0.16702500000000001;
               $4662 = $4652 * -0.087974999999999997;
               $4663 = $4613 * $4662;
               $4664 = $4663 - $4661;
               $4665 = $4623 * $4633;
               $4666 = $4665 + $4664;
               $4667 = +HEAPF64[$23>>3];
               $4668 = $4667 * 0.027;
               $4669 = $4610 * $4668;
               $4670 = $4666 + $4669;
               $4671 = $4622 * 0.01125;
               $4672 = $4671 + $4670;
               $4673 = $4667 * 0.038249999999999999;
               $4674 = $4672 - $4673;
               $4675 = $4621 * $4623;
               $4676 = $4674 - $4675;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x868,$4660,$4676,1.9999999999999999E-6);
               $4677 = HEAP8[$174>>0]|0;
               $4678 = ($4677<<24>>24)==(0);
               if ($4678) {
                break L2360;
               }
               $4679 = +HEAPF64[$x867>>3];
               $4680 = $4679 * 1.5707963267949001;
               $4681 = $4680 + -1.5707963267949001;
               $4682 = +HEAPF64[$x868>>3];
               $4683 = $4682 + $4681;
               $4684 = (+__Z5IKsind($4683));
               $4685 = (+__Z5IKcosd($4683));
               $4686 = $4683 > 3.14159265358979;
               do {
                if ($4686) {
                 $4687 = $4683 + -6.2831853071795898;
                 $4690 = $4687;
                } else {
                 $4688 = $4683 < -3.14159265358979;
                 if (!($4688)) {
                  $4690 = $4683;
                  break;
                 }
                 $4689 = $4683 + 6.2831853071795898;
                 $4690 = $4689;
                }
               } while(0);
               HEAP8[$4>>0] = 0;
               HEAP8[$5>>0] = -1;
               HEAPF64[$3>>3] = $4690;
               HEAPF64[$175>>3] = $4685;
               HEAPF64[$176>>3] = $4684;
               $4691 = +HEAPF64[$3>>3];
               $4692 = (+__Z5IKsind($4691));
               $4693 = (+__Z5IKcosd($4691));
               $4694 = +HEAPF64[$43>>3];
               $4695 = +HEAPF64[$24>>3];
               $4696 = $4694 * $4695;
               $4697 = +HEAPF64[$76>>3];
               $4698 = $4697 * 0.29999999999999999;
               $4699 = +HEAPF64[$84>>3];
               $4700 = $4699 * 0.089999999999999996;
               $4701 = +HEAPF64[$23>>3];
               $4702 = $4694 * $4701;
               $4703 = +HEAPF64[$75>>3];
               $4704 = $4703 * 0.044999999999999998;
               $4705 = $4701 * 0.044999999999999998;
               $4706 = +HEAPF64[$45>>3];
               $4707 = $4699 * $4706;
               $4708 = $4697 * 0.044999999999999998;
               $4709 = +HEAPF64[$83>>3];
               $4710 = $4703 * 0.29999999999999999;
               $4711 = $4695 * $4706;
               $4712 = $4693 * $4709;
               $4713 = $4693 * $4701;
               $4714 = $4692 * $4701;
               $4715 = +HEAPF64[$47>>3];
               $4716 = $4693 * $4715;
               $4717 = $4694 * $4709;
               $4718 = $4692 * $4717;
               $4719 = -0.55000000000000004 - $4710;
               $4720 = $4692 * $4707;
               $4721 = $4719 + $4720;
               $4722 = $4721 + $4718;
               $4723 = $4716 + $4722;
               $4724 = $4723 - $4708;
               $4725 = -$4693;
               $4726 = $4710 * $4725;
               $4727 = $4726 + $4715;
               $4728 = $4693 * 0.55000000000000004;
               $4729 = $4727 - $4728;
               $4730 = $4708 * $4725;
               $4731 = $4730 + $4729;
               $4732 = $4692 * $4705;
               $4733 = $4732 + $4731;
               $4734 = $4698 * $4714;
               $4735 = $4734 + $4733;
               $4736 = -$4704;
               $4737 = $4714 * $4736;
               $4738 = $4737 + $4735;
               $4739 = $4709 * $4711;
               $4740 = 0.044999999999999998 - $4739;
               $4741 = $4714 * $4715;
               $4742 = $4740 + $4741;
               $4743 = $4702 * $4725;
               $4744 = $4743 * $4709;
               $4745 = $4744 + $4742;
               $4746 = $4696 * $4699;
               $4747 = $4746 + $4745;
               $4748 = $4713 * $4707;
               $4749 = $4747 - $4748;
               $4750 = $4698 + $4749;
               $4751 = $4750 - $4704;
               $4752 = $4693 * $4705;
               $4753 = $4692 * 0.55000000000000004;
               $4754 = $4753 + $4752;
               $4755 = $4754 - $4707;
               $4756 = $4692 * $4710;
               $4757 = $4756 + $4755;
               $4758 = $4692 * $4708;
               $4759 = $4758 + $4757;
               $4760 = $4759 - $4717;
               $4761 = $4698 * $4713;
               $4762 = $4761 + $4760;
               $4763 = $4713 * $4736;
               $4764 = $4763 + $4762;
               $4765 = $4718 * 1.1000000000000001;
               $4766 = $4765 + -0.21249999999999999;
               $4767 = $4716 * 1.1000000000000001;
               $4768 = $4767 + $4766;
               $4769 = $4692 * 1.1000000000000001;
               $4770 = $4769 * $4707;
               $4771 = $4770 + $4768;
               $4772 = $4702 * 0.089999999999999996;
               $4773 = $4772 * $4712;
               $4774 = $4773 + $4771;
               $4775 = $4696 * $4700;
               $4776 = $4774 - $4775;
               $4777 = $4700 * $4706;
               $4778 = $4713 * $4777;
               $4779 = $4778 + $4776;
               $4780 = +HEAPF64[$60>>3];
               $4781 = $4779 - $4780;
               $4782 = $4709 * 0.089999999999999996;
               $4783 = $4711 * $4782;
               $4784 = $4783 + $4781;
               $4785 = $4715 * -0.089999999999999996;
               $4786 = $4714 * $4785;
               $4787 = $4786 + $4784;
               $4788 = (+__Z5IKabsd($4724));
               $4789 = $4788 > 5.0000000000000004E-6;
               if ($4789) {
                break L2360;
               }
               $4790 = $4693 * $4695;
               $4791 = $4790 * $4707;
               $4792 = $4701 * $4706;
               $4793 = $4792 * $4709;
               $4794 = $4791 - $4793;
               $4795 = $4699 * $4702;
               $4796 = $4795 + $4794;
               $4797 = $4696 * $4712;
               $4798 = $4797 + $4796;
               $4799 = $4695 * $4715;
               $4800 = $4692 * $4799;
               $4801 = $4798 - $4800;
               $4802 = (+__Z5IKabsd($4801));
               $4803 = $4802 > 5.0000000000000004E-6;
               if ($4803) {
                break L2360;
               }
               $4804 = (+__Z5IKabsd($4738));
               $4805 = $4804 > 5.0000000000000004E-6;
               if ($4805) {
                break L2360;
               }
               $4806 = (+__Z5IKabsd($4751));
               $4807 = $4806 > 5.0000000000000004E-6;
               if ($4807) {
                break L2360;
               }
               $4808 = (+__Z5IKabsd($4764));
               $4809 = $4808 > 5.0000000000000004E-6;
               if ($4809) {
                break L2360;
               }
               $4810 = (+__Z5IKabsd($4787));
               $4811 = $4810 > 5.0000000000000004E-6;
               if ($4811) {
                break L2360;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               break L2360;
              }
             } while(0);
             $1363 = +HEAPF64[$83>>3];
             $1364 = $1363 * $1363;
             $1365 = +HEAPF64[$45>>3];
             $1366 = $1365 * $1365;
             $1367 = +HEAPF64[$24>>3];
             $1368 = $1364 * $1367;
             $1369 = +HEAPF64[$43>>3];
             $1370 = $1369 * $1369;
             $1371 = $1368 * $1370;
             $1372 = $1367 * $1366;
             $1373 = $1372 + $1371;
             $1374 = $1366 * $1368;
             $1375 = $1373 - $1374;
             $1376 = +HEAPF64[$47>>3];
             $1377 = $1376 * $1376;
             $1378 = $1367 * $1377;
             $1379 = $1378 + $1375;
             $1380 = $1363 * 2.0;
             $1381 = $1380 * $1369;
             $1382 = $1365 * $1381;
             $1383 = +HEAPF64[$84>>3];
             $1384 = $1382 * $1383;
             $1385 = $1367 * $1384;
             $1386 = $1385 + $1379;
             $1387 = (+__Z5IKabsd($1386));
             $1388 = $1387 < 9.9999999999999995E-7;
             do {
              if (!($1388)) {
               $1389 = (+__Z6IKsignd($1386));
               $1390 = (+__Z5IKabsd($1389));
               $1391 = $1390 < 9.9999999999999995E-7;
               if ($1391) {
                break;
               }
               HEAP8[$6>>0] = 1;
               $4397 = +HEAPF64[$83>>3];
               $4398 = $4397 * $4397;
               $4399 = +HEAPF64[$45>>3];
               $4400 = $4399 * $4399;
               $4401 = +HEAPF64[$43>>3];
               $4402 = $4401 * $4401;
               $4403 = $4399 * $4401;
               $4404 = +HEAPF64[$23>>3];
               $4405 = +HEAPF64[$24>>3];
               $4406 = $4397 * $4405;
               $4407 = +HEAPF64[$84>>3];
               $4408 = $4404 * $4407;
               $4409 = +HEAPF64[$75>>3];
               $4410 = $4409 * 0.29999999999999999;
               $4411 = +HEAPF64[$47>>3];
               $4412 = $4405 * $4411;
               $4413 = +HEAPF64[$76>>3];
               $4414 = $4413 * 0.044999999999999998;
               $4415 = $4400 * $4405;
               $4416 = $4399 * $4407;
               $4417 = $4405 * $4416;
               $4418 = $4410 * $4417;
               $4419 = $4417 * 0.55000000000000004;
               $4420 = $4418 + $4419;
               $4421 = $4417 * $4414;
               $4422 = $4420 + $4421;
               $4423 = -$4397;
               $4424 = $4399 * $4423;
               $4425 = $4424 * $4411;
               $4426 = $4404 * $4425;
               $4427 = $4426 + $4422;
               $4428 = $4401 * $4411;
               $4429 = $4408 * $4428;
               $4430 = $4429 + $4427;
               $4431 = $4401 * 0.55000000000000004;
               $4432 = $4431 * $4406;
               $4433 = $4432 + $4430;
               $4434 = $4401 * $4406;
               $4435 = $4434 * $4414;
               $4436 = $4435 + $4433;
               $4437 = $4434 * $4410;
               $4438 = $4437 + $4436;
               $4439 = $4403 * $4404;
               $4440 = $4410 * $4412;
               $4441 = $4440 - $4439;
               $4442 = $4412 * $4414;
               $4443 = $4441 + $4442;
               $4444 = $4412 * 0.55000000000000004;
               $4445 = $4444 + $4443;
               $4446 = $4404 * 2.0;
               $4447 = $4398 * $4446;
               $4448 = $4403 * $4447;
               $4449 = $4448 + $4445;
               $4450 = $4397 * $4400;
               $4451 = $4450 * $4408;
               $4452 = $4451 + $4449;
               $4453 = $4407 * $4423;
               $4454 = $4402 * $4453;
               $4455 = $4404 * $4454;
               $4456 = $4455 + $4452;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x837,$4438,$4456,1.9999999999999999E-6);
               $4457 = HEAP8[$169>>0]|0;
               $4458 = ($4457<<24>>24)==(0);
               if ($4458) {
                break L2360;
               }
               $4459 = +HEAPF64[$24>>3];
               $4460 = $4398 * $4459;
               $4461 = $4402 * $4460;
               $4462 = +HEAPF64[$84>>3];
               $4463 = $4462 * 2.0;
               $4464 = $4403 * $4463;
               $4465 = $4406 * $4464;
               $4466 = $4461 + $4465;
               $4467 = +HEAPF64[$47>>3];
               $4468 = $4412 * $4467;
               $4469 = $4468 + $4466;
               $4470 = $4415 + $4469;
               $4471 = $4398 * $4415;
               $4472 = $4470 - $4471;
               $4473 = (+__Z6IKsignd($4472));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x838,$4473,-1);
               $4474 = HEAP8[$170>>0]|0;
               $4475 = ($4474<<24>>24)==(0);
               if ($4475) {
                break L2360;
               }
               $4476 = +HEAPF64[$x837>>3];
               $4477 = $4476 + -1.5707963267949001;
               $4478 = +HEAPF64[$x838>>3];
               $4479 = $4478 * 1.5707963267949001;
               $4480 = $4477 + $4479;
               $4481 = (+__Z5IKsind($4480));
               $4482 = (+__Z5IKcosd($4480));
               $4483 = $4480 > 3.14159265358979;
               do {
                if ($4483) {
                 $4484 = $4480 + -6.2831853071795898;
                 $4487 = $4484;
                } else {
                 $4485 = $4480 < -3.14159265358979;
                 if (!($4485)) {
                  $4487 = $4480;
                  break;
                 }
                 $4486 = $4480 + 6.2831853071795898;
                 $4487 = $4486;
                }
               } while(0);
               HEAP8[$4>>0] = 0;
               HEAP8[$5>>0] = -1;
               HEAPF64[$3>>3] = $4487;
               HEAPF64[$171>>3] = $4482;
               HEAPF64[$172>>3] = $4481;
               $4488 = +HEAPF64[$3>>3];
               $4489 = (+__Z5IKsind($4488));
               $4490 = (+__Z5IKcosd($4488));
               $4491 = +HEAPF64[$43>>3];
               $4492 = +HEAPF64[$24>>3];
               $4493 = $4491 * $4492;
               $4494 = +HEAPF64[$76>>3];
               $4495 = $4494 * 0.29999999999999999;
               $4496 = +HEAPF64[$84>>3];
               $4497 = $4496 * 0.089999999999999996;
               $4498 = +HEAPF64[$23>>3];
               $4499 = $4491 * $4498;
               $4500 = +HEAPF64[$75>>3];
               $4501 = $4500 * 0.044999999999999998;
               $4502 = $4498 * 0.044999999999999998;
               $4503 = +HEAPF64[$45>>3];
               $4504 = $4496 * $4503;
               $4505 = $4494 * 0.044999999999999998;
               $4506 = +HEAPF64[$83>>3];
               $4507 = $4500 * 0.29999999999999999;
               $4508 = $4492 * $4503;
               $4509 = $4490 * $4506;
               $4510 = $4490 * $4498;
               $4511 = $4489 * $4498;
               $4512 = +HEAPF64[$47>>3];
               $4513 = $4490 * $4512;
               $4514 = $4491 * $4506;
               $4515 = $4489 * $4514;
               $4516 = -0.55000000000000004 - $4507;
               $4517 = $4489 * $4504;
               $4518 = $4516 + $4517;
               $4519 = $4518 - $4505;
               $4520 = $4513 + $4519;
               $4521 = $4515 + $4520;
               $4522 = $4495 * $4511;
               $4523 = $4489 * $4502;
               $4524 = $4522 + $4523;
               $4525 = -$4501;
               $4526 = $4511 * $4525;
               $4527 = $4524 + $4526;
               $4528 = -$4490;
               $4529 = $4505 * $4528;
               $4530 = $4529 + $4527;
               $4531 = $4512 + $4530;
               $4532 = $4507 * $4528;
               $4533 = $4532 + $4531;
               $4534 = $4490 * 0.55000000000000004;
               $4535 = $4533 - $4534;
               $4536 = $4510 * $4504;
               $4537 = 0.044999999999999998 - $4536;
               $4538 = $4506 * $4508;
               $4539 = $4537 - $4538;
               $4540 = $4539 - $4501;
               $4541 = $4499 * $4528;
               $4542 = $4541 * $4506;
               $4543 = $4542 + $4540;
               $4544 = $4495 + $4543;
               $4545 = $4493 * $4496;
               $4546 = $4545 + $4544;
               $4547 = $4511 * $4512;
               $4548 = $4547 + $4546;
               $4549 = $4495 * $4510;
               $4550 = $4490 * $4502;
               $4551 = $4549 + $4550;
               $4552 = $4489 * $4505;
               $4553 = $4552 + $4551;
               $4554 = $4510 * $4525;
               $4555 = $4554 + $4553;
               $4556 = $4555 - $4514;
               $4557 = $4489 * 0.55000000000000004;
               $4558 = $4557 + $4556;
               $4559 = $4558 - $4504;
               $4560 = $4489 * $4507;
               $4561 = $4560 + $4559;
               $4562 = $4493 * $4497;
               $4563 = -0.21249999999999999 - $4562;
               $4564 = $4506 * 0.089999999999999996;
               $4565 = $4508 * $4564;
               $4566 = $4563 + $4565;
               $4567 = $4497 * $4503;
               $4568 = $4510 * $4567;
               $4569 = $4568 + $4566;
               $4570 = $4513 * 1.1000000000000001;
               $4571 = $4570 + $4569;
               $4572 = $4515 * 1.1000000000000001;
               $4573 = $4572 + $4571;
               $4574 = $4499 * 0.089999999999999996;
               $4575 = $4574 * $4509;
               $4576 = $4575 + $4573;
               $4577 = $4489 * 1.1000000000000001;
               $4578 = $4577 * $4504;
               $4579 = $4578 + $4576;
               $4580 = $4512 * -0.089999999999999996;
               $4581 = $4511 * $4580;
               $4582 = $4581 + $4579;
               $4583 = +HEAPF64[$60>>3];
               $4584 = $4582 - $4583;
               $4585 = (+__Z5IKabsd($4521));
               $4586 = $4585 > 5.0000000000000004E-6;
               if ($4586) {
                break L2360;
               }
               $4587 = $4493 * $4509;
               $4588 = $4492 * $4512;
               $4589 = $4489 * $4588;
               $4590 = $4587 - $4589;
               $4591 = $4498 * $4503;
               $4592 = $4591 * $4506;
               $4593 = $4590 - $4592;
               $4594 = $4490 * $4492;
               $4595 = $4594 * $4504;
               $4596 = $4595 + $4593;
               $4597 = $4496 * $4499;
               $4598 = $4597 + $4596;
               $4599 = (+__Z5IKabsd($4598));
               $4600 = $4599 > 5.0000000000000004E-6;
               if ($4600) {
                break L2360;
               }
               $4601 = (+__Z5IKabsd($4535));
               $4602 = $4601 > 5.0000000000000004E-6;
               if ($4602) {
                break L2360;
               }
               $4603 = (+__Z5IKabsd($4548));
               $4604 = $4603 > 5.0000000000000004E-6;
               if ($4604) {
                break L2360;
               }
               $4605 = (+__Z5IKabsd($4561));
               $4606 = $4605 > 5.0000000000000004E-6;
               if ($4606) {
                break L2360;
               }
               $4607 = (+__Z5IKabsd($4584));
               $4608 = $4607 > 5.0000000000000004E-6;
               if ($4608) {
                break L2360;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               break L2360;
              }
             } while(0);
             $1392 = +HEAPF64[$47>>3];
             $1393 = +HEAPF64[$24>>3];
             $1394 = $1392 * $1393;
             $1395 = +HEAPF64[$45>>3];
             $1396 = +HEAPF64[$84>>3];
             $1397 = $1395 * $1396;
             $1398 = +HEAPF64[$83>>3];
             $1399 = +HEAPF64[$43>>3];
             $1400 = $1398 * $1399;
             $1401 = +HEAPF64[$23>>3];
             $1402 = $1393 * $1401;
             $1403 = +HEAPF64[$75>>3];
             $1404 = $1402 * 0.044999999999999998;
             $1405 = +HEAPF64[$76>>3];
             $1406 = $1402 * $1405;
             $1407 = $1397 * $1406;
             $1408 = $1394 * 12.2222222222222;
             $1409 = $1407 * 6.6666666666666696;
             $1410 = $1409 - $1408;
             $1411 = $1403 * -6.6666666666666696;
             $1412 = $1394 * $1411;
             $1413 = $1412 + $1410;
             $1414 = $1397 * $1402;
             $1415 = $1403 * $1414;
             $1416 = $1413 - $1415;
             $1417 = $1400 * 6.6666666666666696;
             $1418 = $1417 * $1406;
             $1419 = $1418 + $1416;
             $1420 = $1400 * $1402;
             $1421 = $1403 * $1420;
             $1422 = $1419 - $1421;
             $1423 = $1414 + $1422;
             $1424 = $1394 * $1405;
             $1425 = $1423 - $1424;
             $1426 = $1420 + $1425;
             $1427 = -$1403;
             $1428 = (+__Z5IKabsd($1426));
             $1429 = $1428 < 9.9999999999999995E-7;
             do {
              if (!($1429)) {
               $1430 = $1400 * $1404;
               $1431 = $1394 * 0.55000000000000004;
               $1432 = $1430 - $1431;
               $1433 = $1397 * $1427;
               $1434 = $1433 * $1404;
               $1435 = $1434 + $1432;
               $1436 = $1403 * -0.29999999999999999;
               $1437 = $1394 * $1436;
               $1438 = $1437 + $1435;
               $1439 = $1407 * 0.29999999999999999;
               $1440 = $1439 + $1438;
               $1441 = $1400 * $1427;
               $1442 = $1441 * $1404;
               $1443 = $1442 + $1440;
               $1444 = $1397 * $1404;
               $1445 = $1444 + $1443;
               $1446 = $1400 * 0.29999999999999999;
               $1447 = $1446 * $1406;
               $1448 = $1447 + $1445;
               $1449 = $1405 * -0.044999999999999998;
               $1450 = $1394 * $1449;
               $1451 = $1450 + $1448;
               $1452 = (+__Z6IKsignd($1451));
               $1453 = (+__Z5IKabsd($1452));
               $1454 = $1453 < 9.9999999999999995E-7;
               if ($1454) {
                break;
               }
               HEAP8[$6>>0] = 1;
               $4162 = +HEAPF64[$23>>3];
               $4163 = $4162 * $4162;
               $4164 = +HEAPF64[$43>>3];
               $4165 = $4164 * 0.044999999999999998;
               $4166 = +HEAPF64[$84>>3];
               $4167 = +HEAPF64[$24>>3];
               $4168 = $4166 * $4167;
               $4169 = +HEAPF64[$47>>3];
               $4170 = $4167 * $4169;
               $4171 = +HEAPF64[$83>>3];
               $4172 = +HEAPF64[$75>>3];
               $4173 = $4171 * $4172;
               $4174 = $4162 * 0.55000000000000004;
               $4175 = $4164 * $4166;
               $4176 = +HEAPF64[$45>>3];
               $4177 = $4171 * $4176;
               $4178 = $4172 * 0.29999999999999999;
               $4179 = +HEAPF64[$76>>3];
               $4180 = $4179 * 0.29999999999999999;
               $4181 = $4179 * 0.044999999999999998;
               $4182 = $4163 * $4166;
               $4183 = $4162 * $4171;
               $4184 = $4167 * $4183;
               $4185 = $4162 * 0.29999999999999999;
               $4186 = $4185 * $4176;
               $4187 = $4163 * 0.044999999999999998;
               $4188 = $4162 * 0.044999999999999998;
               $4189 = $4188 * $4176;
               $4190 = $4164 * $4171;
               $4191 = $4170 * $4190;
               $4192 = $4174 * $4177;
               $4193 = $4192 - $4191;
               $4194 = $4174 * $4175;
               $4195 = $4193 - $4194;
               $4196 = $4162 * $4177;
               $4197 = $4196 * $4181;
               $4198 = $4197 + $4195;
               $4199 = -$4162;
               $4200 = $4175 * $4199;
               $4201 = $4200 * $4178;
               $4202 = $4201 + $4198;
               $4203 = $4173 * $4186;
               $4204 = $4203 + $4202;
               $4205 = -$4176;
               $4206 = $4169 * $4205;
               $4207 = $4168 * $4206;
               $4208 = $4207 + $4204;
               $4209 = $4166 * $4199;
               $4210 = $4209 * $4179;
               $4211 = $4165 * $4210;
               $4212 = $4211 + $4208;
               $4213 = $4163 * $4175;
               $4214 = $4213 * $4180;
               $4215 = $4165 * $4172;
               $4216 = $4182 * $4215;
               $4217 = $4216 - $4214;
               $4218 = $4187 * $4177;
               $4219 = $4218 + $4217;
               $4220 = $4169 * $4170;
               $4221 = $4219 - $4220;
               $4222 = $4165 * $4182;
               $4223 = $4221 - $4222;
               $4224 = $4173 * $4205;
               $4225 = $4187 * $4224;
               $4226 = $4225 + $4223;
               $4227 = $4163 * $4177;
               $4228 = $4227 * $4180;
               $4229 = $4228 + $4226;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x804,$4212,$4229,1.9999999999999999E-6);
               $4230 = HEAP8[$165>>0]|0;
               $4231 = ($4230<<24>>24)==(0);
               if ($4231) {
                break L2360;
               }
               $4232 = $4170 * 0.55000000000000004;
               $4233 = $4168 * $4189;
               $4234 = $4233 - $4232;
               $4235 = +HEAPF64[$43>>3];
               $4236 = $4180 * $4235;
               $4237 = $4184 * $4236;
               $4238 = $4234 + $4237;
               $4239 = $4165 * $4184;
               $4240 = $4239 + $4238;
               $4241 = -$4170;
               $4242 = $4181 * $4241;
               $4243 = $4242 + $4240;
               $4244 = $4178 * $4241;
               $4245 = $4244 + $4243;
               $4246 = +HEAPF64[$23>>3];
               $4247 = +HEAPF64[$24>>3];
               $4248 = $4246 * $4247;
               $4249 = $4165 * $4248;
               $4250 = $4173 * $4249;
               $4251 = $4245 - $4250;
               $4252 = +HEAPF64[$75>>3];
               $4253 = $4168 * $4252;
               $4254 = $4189 * $4253;
               $4255 = $4251 - $4254;
               $4256 = +HEAPF64[$45>>3];
               $4257 = $4246 * $4256;
               $4258 = $4168 * $4257;
               $4259 = $4180 * $4258;
               $4260 = $4259 + $4255;
               $4261 = (+__Z6IKsignd($4260));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x805,$4261,-1);
               $4262 = HEAP8[$166>>0]|0;
               $4263 = ($4262<<24>>24)==(0);
               if ($4263) {
                break L2360;
               }
               $4264 = +HEAPF64[$x804>>3];
               $4265 = $4264 + -1.5707963267949001;
               $4266 = +HEAPF64[$x805>>3];
               $4267 = $4266 * 1.5707963267949001;
               $4268 = $4265 + $4267;
               $4269 = (+__Z5IKsind($4268));
               $4270 = (+__Z5IKcosd($4268));
               $4271 = $4268 > 3.14159265358979;
               do {
                if ($4271) {
                 $4272 = $4268 + -6.2831853071795898;
                 $4275 = $4272;
                } else {
                 $4273 = $4268 < -3.14159265358979;
                 if (!($4273)) {
                  $4275 = $4268;
                  break;
                 }
                 $4274 = $4268 + 6.2831853071795898;
                 $4275 = $4274;
                }
               } while(0);
               HEAP8[$4>>0] = 0;
               HEAP8[$5>>0] = -1;
               HEAPF64[$3>>3] = $4275;
               HEAPF64[$167>>3] = $4270;
               HEAPF64[$168>>3] = $4269;
               $4276 = +HEAPF64[$3>>3];
               $4277 = (+__Z5IKsind($4276));
               $4278 = (+__Z5IKcosd($4276));
               $4279 = +HEAPF64[$43>>3];
               $4280 = +HEAPF64[$24>>3];
               $4281 = $4279 * $4280;
               $4282 = +HEAPF64[$76>>3];
               $4283 = $4282 * 0.29999999999999999;
               $4284 = +HEAPF64[$84>>3];
               $4285 = $4284 * 0.089999999999999996;
               $4286 = +HEAPF64[$23>>3];
               $4287 = $4279 * $4286;
               $4288 = +HEAPF64[$75>>3];
               $4289 = $4288 * 0.044999999999999998;
               $4290 = $4286 * 0.044999999999999998;
               $4291 = +HEAPF64[$45>>3];
               $4292 = $4284 * $4291;
               $4293 = $4282 * 0.044999999999999998;
               $4294 = +HEAPF64[$83>>3];
               $4295 = $4288 * 0.29999999999999999;
               $4296 = $4280 * $4291;
               $4297 = $4278 * $4294;
               $4298 = $4278 * $4286;
               $4299 = $4277 * $4286;
               $4300 = +HEAPF64[$47>>3];
               $4301 = $4278 * $4300;
               $4302 = $4279 * $4294;
               $4303 = $4277 * $4302;
               $4304 = -0.55000000000000004 - $4293;
               $4305 = $4304 - $4295;
               $4306 = $4277 * $4292;
               $4307 = $4305 + $4306;
               $4308 = $4307 + $4301;
               $4309 = $4303 + $4308;
               $4310 = $4283 * $4299;
               $4311 = -$4289;
               $4312 = $4299 * $4311;
               $4313 = $4310 + $4312;
               $4314 = $4278 * 0.55000000000000004;
               $4315 = $4313 - $4314;
               $4316 = $4300 + $4315;
               $4317 = -$4278;
               $4318 = $4293 * $4317;
               $4319 = $4318 + $4316;
               $4320 = $4295 * $4317;
               $4321 = $4320 + $4319;
               $4322 = $4277 * $4290;
               $4323 = $4322 + $4321;
               $4324 = $4299 * $4300;
               $4325 = $4324 + 0.044999999999999998;
               $4326 = $4298 * $4292;
               $4327 = $4325 - $4326;
               $4328 = $4294 * $4296;
               $4329 = $4327 - $4328;
               $4330 = $4329 - $4289;
               $4331 = $4287 * $4317;
               $4332 = $4331 * $4294;
               $4333 = $4332 + $4330;
               $4334 = $4281 * $4284;
               $4335 = $4334 + $4333;
               $4336 = $4283 + $4335;
               $4337 = $4283 * $4298;
               $4338 = $4298 * $4311;
               $4339 = $4337 + $4338;
               $4340 = $4339 - $4292;
               $4341 = $4278 * $4290;
               $4342 = $4341 + $4340;
               $4343 = $4342 - $4302;
               $4344 = $4277 * $4295;
               $4345 = $4344 + $4343;
               $4346 = $4277 * $4293;
               $4347 = $4346 + $4345;
               $4348 = $4277 * 0.55000000000000004;
               $4349 = $4348 + $4347;
               $4350 = $4300 * -0.089999999999999996;
               $4351 = $4299 * $4350;
               $4352 = $4351 + -0.21249999999999999;
               $4353 = $4285 * $4291;
               $4354 = $4298 * $4353;
               $4355 = $4354 + $4352;
               $4356 = $4281 * $4285;
               $4357 = $4355 - $4356;
               $4358 = $4287 * 0.089999999999999996;
               $4359 = $4358 * $4297;
               $4360 = $4359 + $4357;
               $4361 = $4294 * 0.089999999999999996;
               $4362 = $4296 * $4361;
               $4363 = $4362 + $4360;
               $4364 = +HEAPF64[$60>>3];
               $4365 = $4363 - $4364;
               $4366 = $4303 * 1.1000000000000001;
               $4367 = $4366 + $4365;
               $4368 = $4301 * 1.1000000000000001;
               $4369 = $4368 + $4367;
               $4370 = $4277 * 1.1000000000000001;
               $4371 = $4370 * $4292;
               $4372 = $4371 + $4369;
               $4373 = (+__Z5IKabsd($4309));
               $4374 = $4373 > 5.0000000000000004E-6;
               if ($4374) {
                break L2360;
               }
               $4375 = $4284 * $4287;
               $4376 = $4280 * $4300;
               $4377 = $4277 * $4376;
               $4378 = $4375 - $4377;
               $4379 = $4278 * $4280;
               $4380 = $4379 * $4292;
               $4381 = $4380 + $4378;
               $4382 = $4281 * $4297;
               $4383 = $4382 + $4381;
               $4384 = $4286 * $4291;
               $4385 = $4384 * $4294;
               $4386 = $4383 - $4385;
               $4387 = (+__Z5IKabsd($4386));
               $4388 = $4387 > 5.0000000000000004E-6;
               if ($4388) {
                break L2360;
               }
               $4389 = (+__Z5IKabsd($4323));
               $4390 = $4389 > 5.0000000000000004E-6;
               if ($4390) {
                break L2360;
               }
               $4391 = (+__Z5IKabsd($4336));
               $4392 = $4391 > 5.0000000000000004E-6;
               if ($4392) {
                break L2360;
               }
               $4393 = (+__Z5IKabsd($4349));
               $4394 = $4393 > 5.0000000000000004E-6;
               if ($4394) {
                break L2360;
               }
               $4395 = (+__Z5IKabsd($4372));
               $4396 = $4395 > 5.0000000000000004E-6;
               if ($4396) {
                break L2360;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               break L2360;
              }
             } while(0);
             $1455 = +HEAPF64[$43>>3];
             $1456 = +HEAPF64[$84>>3];
             $1457 = $1455 * $1456;
             $1458 = +HEAPF64[$83>>3];
             $1459 = +HEAPF64[$45>>3];
             $1460 = $1458 * $1459;
             $1461 = $1457 - $1460;
             $1462 = +HEAPF64[$22>>3];
             $1463 = (+__Z5IKabsd($1462));
             $1464 = $1463 + 3.14159265358979;
             $1465 = (+__Z6IKfmoddd($1464,6.2831853071795898));
             $1466 = $1465 + -3.14159265358979;
             $1467 = (+__Z5IKabsd($1466));
             $1468 = $1467 < 9.9999999999999995E-7;
             do {
              if ($1468) {
               $1469 = +HEAPF64[$75>>3];
               $1470 = +HEAPF64[$60>>3];
               $1471 = +HEAPF64[$76>>3];
               $1472 = $1471 * 0.076499999999999999;
               $1473 = $1472 + 0.39655000000000001;
               $1474 = $1473 - $1470;
               $1475 = $1469 * 0.32595000000000002;
               $1476 = $1475 + $1474;
               $1477 = (+__Z5IKabsd($1476));
               $1478 = $1477 < 9.9999999999999995E-7;
               if (!($1478)) {
                break;
               }
               $1479 = (+__Z5IKabsd($1461));
               $1480 = $1479 < 9.9999999999999995E-7;
               if (!($1480)) {
                break;
               }
               HEAPF64[$24>>3] = 0.0;
               HEAPF64[$23>>3] = 1.0;
               HEAPF64[$22>>3] = 0.0;
               $1481 = +HEAPF64[$83>>3];
               $1482 = +HEAPF64[$43>>3];
               $1483 = $1481 * $1482;
               $1484 = +HEAPF64[$76>>3];
               $1485 = $1484 * 0.31056143580303702;
               $1486 = +HEAPF64[$60>>3];
               $1487 = +HEAPF64[$47>>3];
               $1488 = $1486 * $1487;
               $1489 = +HEAPF64[$45>>3];
               $1490 = +HEAPF64[$84>>3];
               $1491 = $1489 * $1490;
               $1492 = $1486 * 0.138057984353428;
               $1493 = $1484 * 12.2222222222222;
               $1494 = $1486 * 5.4333061668024998;
               $1495 = $1484 * $1487;
               $1496 = $1487 * 7.2815358145431501;
               $1497 = -$1483;
               $1498 = $1493 * $1497;
               $1499 = $1498 + $1496;
               $1500 = $1494 * $1491;
               $1501 = $1499 + $1500;
               $1502 = $1493 * $1491;
               $1503 = $1501 - $1502;
               $1504 = $1503 - $1495;
               $1505 = $1488 * 36.222041112016697;
               $1506 = $1505 + $1504;
               $1507 = $1483 * $1494;
               $1508 = $1507 + $1506;
               $1509 = $1483 * 3.92556370551481;
               $1510 = $1508 - $1509;
               $1511 = $1491 * 3.92556370551481;
               $1512 = $1510 - $1511;
               $1513 = (+__Z5IKabsd($1512));
               $1514 = $1513 < 9.9999999999999995E-7;
               do {
                if (!($1514)) {
                 $1515 = $1485 * $1497;
                 $1516 = $1485 * $1491;
                 $1517 = $1515 - $1516;
                 $1518 = $1492 * $1491;
                 $1519 = $1518 + $1517;
                 $1520 = $1487 * 0.185020708697653;
                 $1521 = $1520 + $1519;
                 $1522 = $1483 * $1492;
                 $1523 = $1522 + $1521;
                 $1524 = $1491 * 0.099746893695352001;
                 $1525 = $1523 - $1524;
                 $1526 = $1483 * 0.099746893695352001;
                 $1527 = $1525 - $1526;
                 $1528 = $1495 * 0.025409572020248499;
                 $1529 = $1527 - $1528;
                 $1530 = $1488 * 0.92038656235618999;
                 $1531 = $1530 + $1529;
                 $1532 = (+__Z6IKsignd($1531));
                 $1533 = (+__Z5IKabsd($1532));
                 $1534 = $1533 < 9.9999999999999995E-7;
                 if ($1534) {
                  break;
                 }
                 HEAP8[$6>>0] = 1;
                 $2645 = +HEAPF64[$75>>3];
                 $2646 = $2645 * $2645;
                 $2647 = +HEAPF64[$83>>3];
                 $2648 = +HEAPF64[$43>>3];
                 $2649 = $2647 * $2648;
                 $2650 = +HEAPF64[$60>>3];
                 $2651 = $2650 * 0.0062126092959042803;
                 $2652 = +HEAPF64[$76>>3];
                 $2653 = $2645 * $2652;
                 $2654 = +HEAPF64[$45>>3];
                 $2655 = +HEAPF64[$84>>3];
                 $2656 = $2654 * $2655;
                 $2657 = $2650 * 0.138057984353428;
                 $2658 = $2650 * 0.041417395306028497;
                 $2659 = $2652 * 0.31056143580303702;
                 $2660 = +HEAPF64[$47>>3];
                 $2661 = $2660 * -0.025409572020248499;
                 $2662 = $2652 * $2661;
                 $2663 = $2659 * $2656;
                 $2664 = $2662 - $2663;
                 $2665 = $2649 * $2659;
                 $2666 = $2664 - $2665;
                 $2667 = $2657 * $2656;
                 $2668 = $2667 + $2666;
                 $2669 = $2649 * 0.099746893695352001;
                 $2670 = $2668 - $2669;
                 $2671 = $2656 * 0.099746893695352001;
                 $2672 = $2670 - $2671;
                 $2673 = $2660 * 0.185020708697653;
                 $2674 = $2673 + $2672;
                 $2675 = $2649 * $2657;
                 $2676 = $2675 + $2674;
                 $2677 = $2650 * 0.92038656235618999;
                 $2678 = $2677 * $2660;
                 $2679 = $2678 + $2676;
                 $2680 = (+__Z6IKsignd($2679));
                 __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x667,$2680,-1);
                 $2681 = HEAP8[$121>>0]|0;
                 $2682 = ($2681<<24>>24)==(0);
                 if ($2682) {
                  break L2360;
                 }
                 $2683 = +HEAPF64[$75>>3];
                 $2684 = $2658 * $2683;
                 $2685 = $2684 + -7.0306028531983398E-4;
                 $2686 = +HEAPF64[$60>>3];
                 $2687 = $2686 * -0.27611596870685701;
                 $2688 = +HEAPF64[$76>>3];
                 $2689 = $2687 * $2688;
                 $2690 = $2685 + $2689;
                 $2691 = $2646 * 0.0076228716060745497;
                 $2692 = $2690 - $2691;
                 $2693 = $2692 - $2658;
                 $2694 = +HEAPF64[$47>>3];
                 $2695 = $2656 * $2694;
                 $2696 = $2695 + $2693;
                 $2697 = $2649 * $2694;
                 $2698 = $2697 + $2696;
                 $2699 = $2653 * 0.00114343074091118;
                 $2700 = $2698 - $2699;
                 $2701 = $2688 * 0.054362781868384703;
                 $2702 = $2700 - $2701;
                 $2703 = $2683 * 0.0083259318913943905;
                 $2704 = $2703 + $2702;
                 $2705 = $2651 * $2683;
                 $2706 = -0.097657040957201999 - $2705;
                 $2707 = $2646 * 0.093168430740911204;
                 $2708 = $2707 + $2706;
                 $2709 = $2694 * $2694;
                 $2710 = $2708 + $2709;
                 $2711 = $2683 * 0.0044886102162908399;
                 $2712 = $2711 + $2710;
                 $2713 = $2653 * 0.0139752646111367;
                 $2714 = $2713 + $2712;
                 $2715 = $2651 + $2714;
                 $2716 = $2658 * $2688;
                 $2717 = $2716 + $2715;
                 $2718 = $2688 * 0.0438993327197423;
                 $2719 = $2717 - $2718;
                 __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x668,$2704,$2719,1.9999999999999999E-6);
                 $2720 = HEAP8[$122>>0]|0;
                 $2721 = ($2720<<24>>24)==(0);
                 if ($2721) {
                  break L2360;
                 }
                 $2722 = +HEAPF64[$x667>>3];
                 $2723 = $2722 * 1.5707963267949001;
                 $2724 = $2723 + -1.5707963267949001;
                 $2725 = +HEAPF64[$x668>>3];
                 $2726 = $2725 + $2724;
                 $2727 = (+__Z5IKsind($2726));
                 $2728 = (+__Z5IKcosd($2726));
                 $2729 = $2726 > 3.14159265358979;
                 do {
                  if ($2729) {
                   $2730 = $2726 + -6.2831853071795898;
                   $2733 = $2730;
                  } else {
                   $2731 = $2726 < -3.14159265358979;
                   if (!($2731)) {
                    $2733 = $2726;
                    break;
                   }
                   $2732 = $2726 + 6.2831853071795898;
                   $2733 = $2732;
                  }
                 } while(0);
                 HEAP8[$4>>0] = 0;
                 HEAP8[$5>>0] = -1;
                 HEAPF64[$3>>3] = $2733;
                 HEAPF64[$123>>3] = $2728;
                 HEAPF64[$124>>3] = $2727;
                 $2734 = +HEAPF64[$3>>3];
                 $2735 = (+__Z5IKsind($2734));
                 $2736 = (+__Z5IKcosd($2734));
                 $2737 = +HEAPF64[$76>>3];
                 $2738 = $2737 * 0.044999999999999998;
                 $2739 = +HEAPF64[$75>>3];
                 $2740 = $2739 * 0.29999999999999999;
                 $2741 = $2739 * 0.044999999999999998;
                 $2742 = +HEAPF64[$83>>3];
                 $2743 = +HEAPF64[$43>>3];
                 $2744 = $2742 * $2743;
                 $2745 = +HEAPF64[$45>>3];
                 $2746 = +HEAPF64[$84>>3];
                 $2747 = $2745 * $2746;
                 $2748 = $2736 * $2737;
                 $2749 = +HEAPF64[$47>>3];
                 $2750 = $2735 * $2749;
                 $2751 = $2736 * $2749;
                 $2752 = $2736 * 0.089999999999999996;
                 $2753 = $2735 * 1.1000000000000001;
                 $2754 = $2735 * $2747;
                 $2755 = $2754 + -0.55000000000000004;
                 $2756 = $2735 * $2744;
                 $2757 = $2756 + $2755;
                 $2758 = $2751 + $2757;
                 $2759 = $2758 - $2738;
                 $2760 = $2759 - $2740;
                 $2761 = +HEAPF64[$60>>3];
                 $2762 = $2761 * -0.138057984353428;
                 $2763 = $2735 * $2762;
                 $2764 = $2761 * -0.92038656235618999;
                 $2765 = $2736 * $2764;
                 $2766 = $2763 + $2765;
                 $2767 = $2736 * 0.185020708697653;
                 $2768 = $2766 - $2767;
                 $2769 = $2748 * 0.025409572020248499;
                 $2770 = $2769 + $2768;
                 $2771 = $2749 + $2770;
                 $2772 = $2735 * 0.099746893695352001;
                 $2773 = $2772 + $2771;
                 $2774 = $2737 * 0.31056143580303702;
                 $2775 = $2735 * $2774;
                 $2776 = $2775 + $2773;
                 $2777 = $2736 * 0.044999999999999998;
                 $2778 = $2735 * 0.55000000000000004;
                 $2779 = $2778 + $2777;
                 $2780 = $2748 * 0.29999999999999999;
                 $2781 = $2779 + $2780;
                 $2782 = $2735 * $2738;
                 $2783 = $2782 + $2781;
                 $2784 = $2735 * $2740;
                 $2785 = $2784 + $2783;
                 $2786 = $2736 * $2741;
                 $2787 = $2785 - $2786;
                 $2788 = $2787 - $2744;
                 $2789 = $2788 - $2747;
                 $2790 = $2753 * $2744;
                 $2791 = $2790 + -0.21249999999999999;
                 $2792 = $2752 * $2744;
                 $2793 = $2792 + $2791;
                 $2794 = $2751 * 1.1000000000000001;
                 $2795 = $2793 + $2794;
                 $2796 = $2795 - $2761;
                 $2797 = $2750 * 0.089999999999999996;
                 $2798 = $2796 - $2797;
                 $2799 = $2753 * $2747;
                 $2800 = $2799 + $2798;
                 $2801 = $2752 * $2747;
                 $2802 = $2801 + $2800;
                 $2803 = (+__Z5IKabsd($2760));
                 $2804 = $2803 > 5.0000000000000004E-6;
                 if ($2804) {
                  break L2360;
                 }
                 $2805 = $2736 * $2747;
                 $2806 = 0.044999999999999998 - $2805;
                 $2807 = $2750 + $2806;
                 $2808 = $2737 * 0.29999999999999999;
                 $2809 = $2808 + $2807;
                 $2810 = $2736 * $2744;
                 $2811 = $2809 - $2810;
                 $2812 = $2811 - $2741;
                 $2813 = (+__Z5IKabsd($2812));
                 $2814 = $2813 > 5.0000000000000004E-6;
                 if ($2814) {
                  break L2360;
                 }
                 $2815 = (+__Z5IKabsd($2776));
                 $2816 = $2815 > 5.0000000000000004E-6;
                 if ($2816) {
                  break L2360;
                 }
                 $2817 = (+__Z5IKabsd($2789));
                 $2818 = $2817 > 5.0000000000000004E-6;
                 if ($2818) {
                  break L2360;
                 }
                 $2819 = (+__Z5IKabsd($2802));
                 $2820 = $2819 > 5.0000000000000004E-6;
                 if ($2820) {
                  break L2360;
                 }
                 __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
                 break L2360;
                }
               } while(0);
               HEAPF64[$24>>3] = 0.0;
               HEAPF64[$23>>3] = 1.0;
               HEAPF64[$22>>3] = 0.0;
               $1535 = +HEAPF64[$83>>3];
               $1536 = +HEAPF64[$43>>3];
               $1537 = $1535 * $1536;
               $1538 = +HEAPF64[$45>>3];
               $1539 = +HEAPF64[$84>>3];
               $1540 = $1538 * $1539;
               $1541 = +HEAPF64[$76>>3];
               $1542 = $1541 * 0.29999999999999999;
               $1543 = +HEAPF64[$75>>3];
               $1544 = $1543 * 0.044999999999999998;
               $1545 = +HEAPF64[$47>>3];
               $1546 = $1541 * $1545;
               $1547 = $1541 * 6.6666666666666696;
               $1548 = $1543 * $1545;
               $1549 = $1537 * $1547;
               $1550 = -$1540;
               $1551 = $1543 * $1550;
               $1552 = $1549 + $1551;
               $1553 = -$1537;
               $1554 = $1543 * $1553;
               $1555 = $1554 + $1552;
               $1556 = $1548 * 6.6666666666666696;
               $1557 = $1555 - $1556;
               $1558 = $1537 + $1557;
               $1559 = $1540 + $1558;
               $1560 = $1559 - $1546;
               $1561 = $1545 * 12.2222222222222;
               $1562 = $1560 - $1561;
               $1563 = $1540 * $1547;
               $1564 = $1563 + $1562;
               $1565 = (+__Z5IKabsd($1564));
               $1566 = $1565 < 9.9999999999999995E-7;
               do {
                if (!($1566)) {
                 $1567 = $1545 * 0.55000000000000004;
                 $1568 = $1548 * -0.29999999999999999;
                 $1569 = $1568 - $1567;
                 $1570 = $1537 * $1542;
                 $1571 = $1570 + $1569;
                 $1572 = $1544 * $1550;
                 $1573 = $1572 + $1571;
                 $1574 = $1544 * $1553;
                 $1575 = $1574 + $1573;
                 $1576 = $1546 * 0.044999999999999998;
                 $1577 = $1575 - $1576;
                 $1578 = $1540 * 0.044999999999999998;
                 $1579 = $1578 + $1577;
                 $1580 = $1537 * 0.044999999999999998;
                 $1581 = $1580 + $1579;
                 $1582 = $1540 * $1542;
                 $1583 = $1582 + $1581;
                 $1584 = (+__Z6IKsignd($1583));
                 $1585 = (+__Z5IKabsd($1584));
                 $1586 = $1585 < 9.9999999999999995E-7;
                 if ($1586) {
                  break;
                 }
                 HEAP8[$6>>0] = 1;
                 $2474 = +HEAPF64[$83>>3];
                 $2475 = $2474 * $2474;
                 $2476 = +HEAPF64[$45>>3];
                 $2477 = $2476 * $2476;
                 $2478 = +HEAPF64[$75>>3];
                 $2479 = $2478 * $2478;
                 $2480 = +HEAPF64[$84>>3];
                 $2481 = $2476 * $2480;
                 $2482 = +HEAPF64[$76>>3];
                 $2483 = $2482 * 0.29999999999999999;
                 $2484 = $2478 * 0.044999999999999998;
                 $2485 = +HEAPF64[$43>>3];
                 $2486 = $2474 * $2485;
                 $2487 = $2478 * $2482;
                 $2488 = +HEAPF64[$47>>3];
                 $2489 = $2488 * 0.55000000000000004;
                 $2490 = $2478 * -0.29999999999999999;
                 $2491 = $2490 * $2488;
                 $2492 = $2491 - $2489;
                 $2493 = $2483 * $2486;
                 $2494 = $2493 + $2492;
                 $2495 = $2484 * $2486;
                 $2496 = $2494 - $2495;
                 $2497 = $2488 * -0.044999999999999998;
                 $2498 = $2482 * $2497;
                 $2499 = $2498 + $2496;
                 $2500 = $2481 * $2483;
                 $2501 = $2500 + $2499;
                 $2502 = $2486 * 0.044999999999999998;
                 $2503 = $2502 + $2501;
                 $2504 = -$2481;
                 $2505 = $2484 * $2504;
                 $2506 = $2505 + $2503;
                 $2507 = $2481 * 0.044999999999999998;
                 $2508 = $2507 + $2506;
                 $2509 = (+__Z6IKsignd($2508));
                 __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x644,$2509,-1);
                 $2510 = HEAP8[$117>>0]|0;
                 $2511 = ($2510<<24>>24)==(0);
                 if ($2511) {
                  break L2360;
                 }
                 $2512 = $2487 * 0.087974999999999997;
                 $2513 = $2512 + 0.038249999999999999;
                 $2514 = +HEAPF64[$75>>3];
                 $2515 = $2514 * 0.01125;
                 $2516 = $2513 - $2515;
                 $2517 = $2486 * $2488;
                 $2518 = $2516 - $2517;
                 $2519 = $2479 * 0.027;
                 $2520 = $2518 - $2519;
                 $2521 = +HEAPF64[$76>>3];
                 $2522 = $2521 * 0.16702500000000001;
                 $2523 = $2522 + $2520;
                 $2524 = $2488 * $2504;
                 $2525 = $2524 + $2523;
                 $2526 = $2481 * 2.0;
                 $2527 = $2526 * $2486;
                 $2528 = $2527 + -0.30452499999999999;
                 $2529 = $2521 * 0.049500000000000002;
                 $2530 = $2528 - $2529;
                 $2531 = $2475 * $2477;
                 $2532 = $2530 - $2531;
                 $2533 = $2487 * 0.027;
                 $2534 = $2532 - $2533;
                 $2535 = +HEAPF64[$43>>3];
                 $2536 = $2535 * $2535;
                 $2537 = $2475 * $2536;
                 $2538 = $2537 + $2534;
                 $2539 = $2479 * 0.087974999999999997;
                 $2540 = $2538 - $2539;
                 $2541 = $2477 + $2540;
                 $2542 = $2514 * 0.33000000000000002;
                 $2543 = $2541 - $2542;
                 __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x645,$2525,$2543,1.9999999999999999E-6);
                 $2544 = HEAP8[$118>>0]|0;
                 $2545 = ($2544<<24>>24)==(0);
                 if ($2545) {
                  break L2360;
                 }
                 $2546 = +HEAPF64[$x644>>3];
                 $2547 = $2546 * 1.5707963267949001;
                 $2548 = $2547 + -1.5707963267949001;
                 $2549 = +HEAPF64[$x645>>3];
                 $2550 = $2549 + $2548;
                 $2551 = (+__Z5IKsind($2550));
                 $2552 = (+__Z5IKcosd($2550));
                 $2553 = $2550 > 3.14159265358979;
                 do {
                  if ($2553) {
                   $2554 = $2550 + -6.2831853071795898;
                   $2557 = $2554;
                  } else {
                   $2555 = $2550 < -3.14159265358979;
                   if (!($2555)) {
                    $2557 = $2550;
                    break;
                   }
                   $2556 = $2550 + 6.2831853071795898;
                   $2557 = $2556;
                  }
                 } while(0);
                 HEAP8[$4>>0] = 0;
                 HEAP8[$5>>0] = -1;
                 HEAPF64[$3>>3] = $2557;
                 HEAPF64[$119>>3] = $2552;
                 HEAPF64[$120>>3] = $2551;
                 $2558 = +HEAPF64[$3>>3];
                 $2559 = (+__Z5IKsind($2558));
                 $2560 = (+__Z5IKcosd($2558));
                 $2561 = +HEAPF64[$76>>3];
                 $2562 = $2561 * 0.044999999999999998;
                 $2563 = +HEAPF64[$75>>3];
                 $2564 = $2563 * 0.29999999999999999;
                 $2565 = $2563 * 0.044999999999999998;
                 $2566 = +HEAPF64[$83>>3];
                 $2567 = +HEAPF64[$43>>3];
                 $2568 = $2566 * $2567;
                 $2569 = +HEAPF64[$45>>3];
                 $2570 = +HEAPF64[$84>>3];
                 $2571 = $2569 * $2570;
                 $2572 = $2560 * $2561;
                 $2573 = +HEAPF64[$47>>3];
                 $2574 = $2559 * $2573;
                 $2575 = $2560 * $2573;
                 $2576 = $2560 * 0.089999999999999996;
                 $2577 = $2559 * 1.1000000000000001;
                 $2578 = $2559 * $2571;
                 $2579 = $2578 + -0.55000000000000004;
                 $2580 = $2559 * $2568;
                 $2581 = $2580 + $2579;
                 $2582 = $2581 - $2562;
                 $2583 = $2582 - $2564;
                 $2584 = $2575 + $2583;
                 $2585 = $2561 * 0.31056143580303702;
                 $2586 = $2559 * $2585;
                 $2587 = $2572 * 0.025409572020248499;
                 $2588 = $2586 + $2587;
                 $2589 = +HEAPF64[$60>>3];
                 $2590 = $2589 * -0.138057984353428;
                 $2591 = $2559 * $2590;
                 $2592 = $2588 + $2591;
                 $2593 = $2559 * 0.099746893695352001;
                 $2594 = $2593 + $2592;
                 $2595 = $2573 + $2594;
                 $2596 = $2589 * -0.92038656235618999;
                 $2597 = $2560 * $2596;
                 $2598 = $2597 + $2595;
                 $2599 = $2560 * 0.185020708697653;
                 $2600 = $2598 - $2599;
                 $2601 = $2559 * 0.55000000000000004;
                 $2602 = $2601 - $2568;
                 $2603 = $2602 - $2571;
                 $2604 = $2560 * $2565;
                 $2605 = $2603 - $2604;
                 $2606 = $2560 * 0.044999999999999998;
                 $2607 = $2606 + $2605;
                 $2608 = $2572 * 0.29999999999999999;
                 $2609 = $2608 + $2607;
                 $2610 = $2559 * $2562;
                 $2611 = $2610 + $2609;
                 $2612 = $2559 * $2564;
                 $2613 = $2612 + $2611;
                 $2614 = $2574 * 0.089999999999999996;
                 $2615 = -0.21249999999999999 - $2614;
                 $2616 = $2577 * $2571;
                 $2617 = $2616 + $2615;
                 $2618 = $2576 * $2571;
                 $2619 = $2618 + $2617;
                 $2620 = $2576 * $2568;
                 $2621 = $2620 + $2619;
                 $2622 = $2577 * $2568;
                 $2623 = $2622 + $2621;
                 $2624 = $2623 - $2589;
                 $2625 = $2575 * 1.1000000000000001;
                 $2626 = $2625 + $2624;
                 $2627 = (+__Z5IKabsd($2584));
                 $2628 = $2627 > 5.0000000000000004E-6;
                 if ($2628) {
                  break L2360;
                 }
                 $2629 = $2560 * $2568;
                 $2630 = 0.044999999999999998 - $2629;
                 $2631 = $2630 - $2565;
                 $2632 = $2631 + $2574;
                 $2633 = $2561 * 0.29999999999999999;
                 $2634 = $2633 + $2632;
                 $2635 = $2560 * $2571;
                 $2636 = $2634 - $2635;
                 $2637 = (+__Z5IKabsd($2636));
                 $2638 = $2637 > 5.0000000000000004E-6;
                 if ($2638) {
                  break L2360;
                 }
                 $2639 = (+__Z5IKabsd($2600));
                 $2640 = $2639 > 5.0000000000000004E-6;
                 if ($2640) {
                  break L2360;
                 }
                 $2641 = (+__Z5IKabsd($2613));
                 $2642 = $2641 > 5.0000000000000004E-6;
                 if ($2642) {
                  break L2360;
                 }
                 $2643 = (+__Z5IKabsd($2626));
                 $2644 = $2643 > 5.0000000000000004E-6;
                 if ($2644) {
                  break L2360;
                 }
                 __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
                 break L2360;
                }
               } while(0);
               HEAPF64[$24>>3] = 0.0;
               HEAPF64[$23>>3] = 1.0;
               HEAPF64[$22>>3] = 0.0;
               $1587 = +HEAPF64[$45>>3];
               $1588 = +HEAPF64[$84>>3];
               $1589 = $1587 * $1588;
               $1590 = +HEAPF64[$83>>3];
               $1591 = +HEAPF64[$43>>3];
               $1592 = $1590 * $1591;
               $1593 = +HEAPF64[$60>>3];
               $1594 = +HEAPF64[$47>>3];
               $1595 = $1593 * $1594;
               $1596 = $1593 * 0.92038656235618999;
               $1597 = +HEAPF64[$76>>3];
               $1598 = $1594 * $1597;
               $1599 = $1593 * 36.222041112016697;
               $1600 = $1597 * 0.025409572020248499;
               $1601 = -$1592;
               $1602 = $1599 * $1601;
               $1603 = -$1589;
               $1604 = $1599 * $1603;
               $1605 = $1602 + $1604;
               $1606 = $1594 * 3.92556370551481;
               $1607 = $1605 - $1606;
               $1608 = $1595 * 5.4333061668024998;
               $1609 = $1608 + $1607;
               $1610 = $1589 * $1597;
               $1611 = $1610 + $1609;
               $1612 = $1592 * $1597;
               $1613 = $1612 + $1611;
               $1614 = $1589 * 7.2815358145431501;
               $1615 = $1613 - $1614;
               $1616 = $1592 * 7.2815358145431501;
               $1617 = $1615 - $1616;
               $1618 = $1598 * 12.2222222222222;
               $1619 = $1617 - $1618;
               $1620 = (+__Z5IKabsd($1619));
               $1621 = $1620 < 9.9999999999999995E-7;
               do {
                if (!($1621)) {
                 $1622 = $1598 * 0.31056143580303702;
                 $1623 = $1594 * -0.099746893695352001;
                 $1624 = $1623 - $1622;
                 $1625 = $1596 * $1601;
                 $1626 = $1625 + $1624;
                 $1627 = $1589 * $1600;
                 $1628 = $1627 + $1626;
                 $1629 = $1596 * $1603;
                 $1630 = $1629 + $1628;
                 $1631 = $1592 * $1600;
                 $1632 = $1631 + $1630;
                 $1633 = $1595 * 0.138057984353428;
                 $1634 = $1633 + $1632;
                 $1635 = $1592 * 0.185020708697653;
                 $1636 = $1634 - $1635;
                 $1637 = $1589 * 0.185020708697653;
                 $1638 = $1636 - $1637;
                 $1639 = (+__Z6IKsignd($1638));
                 $1640 = (+__Z5IKabsd($1639));
                 $1641 = $1640 < 9.9999999999999995E-7;
                 if ($1641) {
                  break;
                 }
                 HEAP8[$6>>0] = 1;
                 $2297 = +HEAPF64[$75>>3];
                 $2298 = $2297 * $2297;
                 $2299 = +HEAPF64[$76>>3];
                 $2300 = $2297 * $2299;
                 $2301 = +HEAPF64[$83>>3];
                 $2302 = +HEAPF64[$43>>3];
                 $2303 = $2301 * $2302;
                 $2304 = +HEAPF64[$60>>3];
                 $2305 = $2304 * 0.92038656235618999;
                 $2306 = $2299 * 0.025409572020248499;
                 $2307 = +HEAPF64[$45>>3];
                 $2308 = +HEAPF64[$84>>3];
                 $2309 = $2307 * $2308;
                 $2310 = $2299 * $2304;
                 $2311 = +HEAPF64[$47>>3];
                 $2312 = $2297 * $2304;
                 $2313 = $2310 * 0.041417395306028497;
                 $2314 = -0.10061795904279799 - $2313;
                 $2315 = $2300 * 0.0076228716060745497;
                 $2316 = $2315 + $2314;
                 $2317 = $2311 * $2311;
                 $2318 = $2316 + $2317;
                 $2319 = $2298 * 0.00114343074091118;
                 $2320 = $2318 - $2319;
                 $2321 = $2304 * 0.50621260929590395;
                 $2322 = $2320 - $2321;
                 $2323 = $2299 * 0.00564933271974229;
                 $2324 = $2323 + $2322;
                 $2325 = $2312 * 0.27611596870685701;
                 $2326 = $2324 - $2325;
                 $2327 = $2297 * 0.055506212609295898;
                 $2328 = $2326 - $2327;
                 $2329 = $2310 * 0.0062126092959042803;
                 $2330 = $2329 + -0.068836056143580293;
                 $2331 = $2297 * 0.029924068108605598;
                 $2332 = $2330 - $2331;
                 $2333 = $2300 * 0.093168430740911204;
                 $2334 = $2332 - $2333;
                 $2335 = $2304 * 0.075931891394385595;
                 $2336 = $2335 + $2334;
                 $2337 = $2298 * 0.0139752646111367;
                 $2338 = $2337 + $2336;
                 $2339 = $2299 * 0.175297399907961;
                 $2340 = $2338 - $2339;
                 $2341 = -$2303;
                 $2342 = $2311 * $2341;
                 $2343 = $2342 + $2340;
                 $2344 = $2309 * $2311;
                 $2345 = $2343 - $2344;
                 $2346 = $2312 * 0.041417395306028497;
                 $2347 = $2346 + $2345;
                 __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x620,$2328,$2347,1.9999999999999999E-6);
                 $2348 = HEAP8[$113>>0]|0;
                 $2349 = ($2348<<24>>24)==(0);
                 if ($2349) {
                  break L2360;
                 }
                 $2350 = $2305 * $2309;
                 $2351 = +HEAPF64[$47>>3];
                 $2352 = $2351 * -0.099746893695352001;
                 $2353 = $2352 - $2350;
                 $2354 = $2351 * -0.31056143580303702;
                 $2355 = +HEAPF64[$76>>3];
                 $2356 = $2354 * $2355;
                 $2357 = $2353 + $2356;
                 $2358 = $2303 * 0.185020708697653;
                 $2359 = $2357 - $2358;
                 $2360 = $2309 * 0.185020708697653;
                 $2361 = $2359 - $2360;
                 $2362 = $2306 * $2303;
                 $2363 = $2362 + $2361;
                 $2364 = $2306 * $2309;
                 $2365 = $2364 + $2363;
                 $2366 = $2305 * $2341;
                 $2367 = $2366 + $2365;
                 $2368 = +HEAPF64[$60>>3];
                 $2369 = $2368 * 0.138057984353428;
                 $2370 = $2351 * $2369;
                 $2371 = $2370 + $2367;
                 $2372 = (+__Z6IKsignd($2371));
                 __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x621,$2372,-1);
                 $2373 = HEAP8[$114>>0]|0;
                 $2374 = ($2373<<24>>24)==(0);
                 if ($2374) {
                  break L2360;
                 }
                 $2375 = +HEAPF64[$x620>>3];
                 $2376 = $2375 + -1.5707963267949001;
                 $2377 = +HEAPF64[$x621>>3];
                 $2378 = $2377 * 1.5707963267949001;
                 $2379 = $2376 + $2378;
                 $2380 = (+__Z5IKsind($2379));
                 $2381 = (+__Z5IKcosd($2379));
                 $2382 = $2379 > 3.14159265358979;
                 do {
                  if ($2382) {
                   $2383 = $2379 + -6.2831853071795898;
                   $2386 = $2383;
                  } else {
                   $2384 = $2379 < -3.14159265358979;
                   if (!($2384)) {
                    $2386 = $2379;
                    break;
                   }
                   $2385 = $2379 + 6.2831853071795898;
                   $2386 = $2385;
                  }
                 } while(0);
                 HEAP8[$4>>0] = 0;
                 HEAP8[$5>>0] = -1;
                 HEAPF64[$3>>3] = $2386;
                 HEAPF64[$115>>3] = $2381;
                 HEAPF64[$116>>3] = $2380;
                 $2387 = +HEAPF64[$3>>3];
                 $2388 = (+__Z5IKsind($2387));
                 $2389 = (+__Z5IKcosd($2387));
                 $2390 = +HEAPF64[$76>>3];
                 $2391 = $2390 * 0.044999999999999998;
                 $2392 = +HEAPF64[$75>>3];
                 $2393 = $2392 * 0.29999999999999999;
                 $2394 = $2392 * 0.044999999999999998;
                 $2395 = +HEAPF64[$83>>3];
                 $2396 = +HEAPF64[$43>>3];
                 $2397 = $2395 * $2396;
                 $2398 = +HEAPF64[$45>>3];
                 $2399 = +HEAPF64[$84>>3];
                 $2400 = $2398 * $2399;
                 $2401 = $2389 * $2390;
                 $2402 = +HEAPF64[$47>>3];
                 $2403 = $2388 * $2402;
                 $2404 = $2389 * $2402;
                 $2405 = $2389 * 0.089999999999999996;
                 $2406 = $2388 * 1.1000000000000001;
                 $2407 = -0.55000000000000004 - $2391;
                 $2408 = $2407 - $2393;
                 $2409 = $2408 + $2404;
                 $2410 = $2388 * $2397;
                 $2411 = $2410 + $2409;
                 $2412 = $2388 * $2400;
                 $2413 = $2412 + $2411;
                 $2414 = $2389 * 0.185020708697653;
                 $2415 = $2401 * 0.025409572020248499;
                 $2416 = $2415 - $2414;
                 $2417 = $2390 * 0.31056143580303702;
                 $2418 = $2388 * $2417;
                 $2419 = $2418 + $2416;
                 $2420 = $2388 * 0.099746893695352001;
                 $2421 = $2420 + $2419;
                 $2422 = +HEAPF64[$60>>3];
                 $2423 = $2422 * -0.138057984353428;
                 $2424 = $2388 * $2423;
                 $2425 = $2421 + $2424;
                 $2426 = $2422 * -0.92038656235618999;
                 $2427 = $2389 * $2426;
                 $2428 = $2427 + $2425;
                 $2429 = $2402 + $2428;
                 $2430 = $2389 * $2394;
                 $2431 = $2401 * 0.29999999999999999;
                 $2432 = $2431 - $2430;
                 $2433 = $2432 - $2400;
                 $2434 = $2433 - $2397;
                 $2435 = $2388 * 0.55000000000000004;
                 $2436 = $2435 + $2434;
                 $2437 = $2389 * 0.044999999999999998;
                 $2438 = $2437 + $2436;
                 $2439 = $2388 * $2391;
                 $2440 = $2439 + $2438;
                 $2441 = $2388 * $2393;
                 $2442 = $2441 + $2440;
                 $2443 = $2406 * $2400;
                 $2444 = $2443 + -0.21249999999999999;
                 $2445 = $2405 * $2400;
                 $2446 = $2445 + $2444;
                 $2447 = $2404 * 1.1000000000000001;
                 $2448 = $2447 + $2446;
                 $2449 = $2403 * 0.089999999999999996;
                 $2450 = $2448 - $2449;
                 $2451 = $2450 - $2422;
                 $2452 = $2406 * $2397;
                 $2453 = $2452 + $2451;
                 $2454 = $2405 * $2397;
                 $2455 = $2454 + $2453;
                 $2456 = (+__Z5IKabsd($2413));
                 $2457 = $2456 > 5.0000000000000004E-6;
                 if ($2457) {
                  break L2360;
                 }
                 $2458 = $2389 * $2400;
                 $2459 = 0.044999999999999998 - $2458;
                 $2460 = $2459 - $2394;
                 $2461 = $2389 * $2397;
                 $2462 = $2460 - $2461;
                 $2463 = $2403 + $2462;
                 $2464 = $2390 * 0.29999999999999999;
                 $2465 = $2464 + $2463;
                 $2466 = (+__Z5IKabsd($2465));
                 $2467 = $2466 > 5.0000000000000004E-6;
                 if ($2467) {
                  break L2360;
                 }
                 $2468 = (+__Z5IKabsd($2429));
                 $2469 = $2468 > 5.0000000000000004E-6;
                 if ($2469) {
                  break L2360;
                 }
                 $2470 = (+__Z5IKabsd($2442));
                 $2471 = $2470 > 5.0000000000000004E-6;
                 if ($2471) {
                  break L2360;
                 }
                 $2472 = (+__Z5IKabsd($2455));
                 $2473 = $2472 > 5.0000000000000004E-6;
                 if ($2473) {
                  break L2360;
                 }
                 __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
                 break L2360;
                }
               } while(0);
               $1642 = +HEAPF64[$47>>3];
               $1643 = (+__Z5IKabsd($1642));
               $1644 = +HEAPF64[$7>>3];
               $1645 = $1644 + 3.14159265358979;
               $1646 = (+__Z6IKfmoddd($1645,6.2831853071795898));
               $1647 = $1646 + -3.14159265358979;
               $1648 = (+__Z5IKabsd($1647));
               $1649 = $1643 + $1648;
               $1650 = (+__Z5IKabsd($1649));
               $1651 = $1650 < 9.9999999999999995E-7;
               if (!($1651)) {
                break L2360;
               }
               $1652 = +HEAPF64[$60>>3];
               $1653 = 0.72250000000000003 - $1652;
               $1654 = (+__Z5IKabsd($1653));
               $1655 = $1654 < 9.9999999999999995E-7;
               if (!($1655)) {
                break L2360;
               }
               $1656 = +HEAPF64[$45>>3];
               $1657 = -$1656;
               HEAPF64[$24>>3] = 0.0;
               HEAPF64[$23>>3] = 1.0;
               HEAPF64[$22>>3] = 0.0;
               HEAPF64[$47>>3] = 0.0;
               HEAPF64[$7>>3] = 0.0;
               HEAPF64[$76>>3] = 0.0;
               HEAPF64[$75>>3] = 1.0;
               $1658 = +HEAPF64[$43>>3];
               $1659 = $1658 * $1658;
               $1660 = +HEAPF64[$45>>3];
               $1661 = $1660 * $1660;
               $1662 = $1659 + $1661;
               HEAPF64[$60>>3] = $1662;
               $1663 = +HEAPF64[$43>>3];
               $1664 = +HEAPF64[$26>>3];
               $1665 = $1663 * $1664;
               $1666 = +HEAPF64[$45>>3];
               $1667 = +HEAPF64[$32>>3];
               $1668 = $1666 * $1667;
               $1669 = $1665 + $1668;
               HEAPF64[$61>>3] = $1669;
               $1670 = +HEAPF64[$43>>3];
               $1671 = +HEAPF64[$28>>3];
               $1672 = $1670 * $1671;
               $1673 = +HEAPF64[$45>>3];
               $1674 = +HEAPF64[$34>>3];
               $1675 = $1673 * $1674;
               $1676 = $1672 + $1675;
               HEAPF64[$62>>3] = $1676;
               $1677 = +HEAPF64[$43>>3];
               $1678 = +HEAPF64[$30>>3];
               $1679 = $1677 * $1678;
               $1680 = +HEAPF64[$45>>3];
               $1681 = +HEAPF64[$36>>3];
               $1682 = $1680 * $1681;
               $1683 = $1679 + $1682;
               HEAPF64[$63>>3] = $1683;
               $1684 = +HEAPF64[$38>>3];
               $1685 = $1684 * $1657;
               HEAPF64[$64>>3] = $1685;
               $1686 = +HEAPF64[$43>>3];
               $1687 = +HEAPF64[$38>>3];
               $1688 = $1686 * $1687;
               HEAPF64[$65>>3] = $1688;
               $1689 = +HEAPF64[$40>>3];
               $1690 = $1689 * $1657;
               HEAPF64[$67>>3] = $1690;
               $1691 = +HEAPF64[$43>>3];
               $1692 = +HEAPF64[$40>>3];
               $1693 = $1691 * $1692;
               HEAPF64[$68>>3] = $1693;
               $1694 = +HEAPF64[$42>>3];
               $1695 = $1694 * $1657;
               HEAPF64[$70>>3] = $1695;
               $1696 = +HEAPF64[$43>>3];
               $1697 = +HEAPF64[$42>>3];
               $1698 = $1696 * $1697;
               HEAPF64[$71>>3] = $1698;
               $1699 = +HEAPF64[$83>>3];
               $1700 = +HEAPF64[$43>>3];
               $1701 = $1699 * $1700;
               $1702 = +HEAPF64[$45>>3];
               $1703 = +HEAPF64[$84>>3];
               $1704 = $1702 * $1703;
               $1705 = $1701 + $1704;
               $1706 = (+__Z5IKabsd($1705));
               $1707 = $1706 < 9.9999999999999995E-7;
               if (!($1707)) {
                HEAP8[$6>>0] = 1;
                $2195 = +HEAPF64[$45>>3];
                $2196 = $2195 * $2195;
                $2197 = +HEAPF64[$83>>3];
                $2198 = $2197 * $2197;
                $2199 = +HEAPF64[$43>>3];
                $2200 = $2197 * $2199;
                $2201 = +HEAPF64[$84>>3];
                $2202 = $2195 * $2201;
                $2203 = $2196 * 4400.0;
                $2204 = $2202 * 306.0;
                $2205 = $2200 * 306.0;
                $2206 = $2205 + $2204;
                __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x603,$2206,-1);
                $2207 = HEAP8[$110>>0]|0;
                $2208 = ($2207<<24>>24)==(0);
                if ($2208) {
                 break L2360;
                }
                $2209 = $2200 * 1.1764705882352899;
                $2210 = $2202 * 1.1764705882352899;
                $2211 = $2209 + $2210;
                $2212 = (+__Z5IKabsd($2211));
                $2213 = $2212 < 1.9999999999999999E-6;
                do {
                 if ($2213) {
                  $2214 = +HEAPF64[$x603>>3];
                  $2215 = $2198 * -4400.0;
                  $2216 = +HEAPF64[$43>>3];
                  $2217 = $2216 * $2216;
                  $2218 = $2215 * $2217;
                  $2219 = $2218 + 3179.0;
                  $2220 = $2200 * -8800.0;
                  $2221 = $2220 * $2202;
                  $2222 = $2221 + $2219;
                  $2223 = $2222 - $2203;
                  $2224 = $2198 * $2203;
                  $2225 = $2224 + $2223;
                  $2226 = $2214 * $2225;
                  $2227 = (+__Z5IKabsd($2226));
                  $2228 = $2227 < 1.9999999999999999E-6;
                  if (!($2228)) {
                   break;
                  }
                  $2229 = (+__Z5IKsqrd($2211));
                  $2230 = (+__Z5IKsqrd($2226));
                  $2231 = $2229 + $2230;
                  $2232 = $2231 + -1.0;
                  $2233 = (+__Z5IKabsd($2232));
                  $2234 = !($2233 <= 1.9999999999999999E-6);
                  if (!($2234)) {
                   break L2360;
                  }
                 }
                } while(0);
                $2235 = +HEAPF64[$x603>>3];
                $2236 = $2198 * -4400.0;
                $2237 = +HEAPF64[$43>>3];
                $2238 = $2237 * $2237;
                $2239 = $2236 * $2238;
                $2240 = $2239 + 3179.0;
                $2241 = $2200 * -8800.0;
                $2242 = $2241 * $2202;
                $2243 = $2242 + $2240;
                $2244 = $2243 - $2203;
                $2245 = $2198 * $2203;
                $2246 = $2245 + $2244;
                $2247 = $2235 * $2246;
                $2248 = (+__Z7IKatan2dd($2211,$2247));
                $2249 = (+__Z5IKsind($2248));
                $2250 = (+__Z5IKcosd($2248));
                $2251 = $2248 > 3.14159265358979;
                do {
                 if ($2251) {
                  $2252 = $2248 + -6.2831853071795898;
                  $2255 = $2252;
                 } else {
                  $2253 = $2248 < -3.14159265358979;
                  if (!($2253)) {
                   $2255 = $2248;
                   break;
                  }
                  $2254 = $2248 + 6.2831853071795898;
                  $2255 = $2254;
                 }
                } while(0);
                HEAP8[$4>>0] = 0;
                HEAP8[$5>>0] = -1;
                HEAPF64[$3>>3] = $2255;
                HEAPF64[$111>>3] = $2250;
                HEAPF64[$112>>3] = $2249;
                $2256 = +HEAPF64[$3>>3];
                $2257 = (+__Z5IKsind($2256));
                $2258 = (+__Z5IKcosd($2256));
                $2259 = +HEAPF64[$45>>3];
                $2260 = +HEAPF64[$84>>3];
                $2261 = $2259 * $2260;
                $2262 = +HEAPF64[$83>>3];
                $2263 = +HEAPF64[$43>>3];
                $2264 = $2262 * $2263;
                $2265 = $2258 * 0.089999999999999996;
                $2266 = $2257 * 1.1000000000000001;
                $2267 = $2258 * -0.84999999999999998;
                $2268 = $2257 * 0.84999999999999998;
                $2269 = $2268 - $2264;
                $2270 = $2269 - $2261;
                $2271 = $2258 * $2261;
                $2272 = $2258 * $2264;
                $2273 = -$2272;
                $2274 = $2273 - $2271;
                $2275 = $2265 * $2264;
                $2276 = $2275 + -0.93500000000000005;
                $2277 = $2265 * $2261;
                $2278 = $2277 + $2276;
                $2279 = $2266 * $2261;
                $2280 = $2279 + $2278;
                $2281 = $2266 * $2264;
                $2282 = $2281 + $2280;
                $2283 = (+__Z5IKabsd($2267));
                $2284 = $2283 > 5.0000000000000004E-6;
                if ($2284) {
                 break L2360;
                }
                $2285 = $2257 * $2261;
                $2286 = $2285 + -0.84999999999999998;
                $2287 = $2257 * $2264;
                $2288 = $2286 + $2287;
                $2289 = (+__Z5IKabsd($2288));
                $2290 = $2289 > 5.0000000000000004E-6;
                if ($2290) {
                 break L2360;
                }
                $2291 = (+__Z5IKabsd($2270));
                $2292 = $2291 > 5.0000000000000004E-6;
                if ($2292) {
                 break L2360;
                }
                $2293 = (+__Z5IKabsd($2274));
                $2294 = $2293 > 5.0000000000000004E-6;
                if ($2294) {
                 break L2360;
                }
                $2295 = (+__Z5IKabsd($2282));
                $2296 = $2295 > 5.0000000000000004E-6;
                if ($2296) {
                 break L2360;
                }
                __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
                break L2360;
               }
               $1708 = (+__Z5IKabsd($1700));
               $1709 = (+__Z5IKabsd($1702));
               $1710 = $1708 + $1709;
               $1711 = (+__Z5IKabsd($1710));
               $1712 = $1711 < 9.9999999999999995E-7;
               do {
                if ($1712) {
                 $1713 = (+__Z5IKabsd(0.72250000000000003));
                 $1714 = $1713 < 9.9999999999999995E-7;
                 if (!($1714)) {
                  break;
                 }
                 $1715 = (+__Z5IKabsd(-0.84999999999999998));
                 $1716 = $1715 < 9.9999999999999995E-7;
                 if (!($1716)) {
                  break;
                 }
                 $1717 = (+__Z5IKabsd(0.0));
                 $1718 = $1717 < 9.9999999999999995E-7;
                 if (!($1718)) {
                  break;
                 }
                 $1719 = (+__Z5IKabsd(-0.93500000000000005));
                 $1720 = $1719 < 9.9999999999999995E-7;
                 if (!($1720)) {
                  break;
                 }
                 HEAPF64[$24>>3] = 0.0;
                 HEAPF64[$23>>3] = 1.0;
                 HEAPF64[$22>>3] = 0.0;
                 HEAPF64[$47>>3] = 0.0;
                 HEAPF64[$7>>3] = 0.0;
                 HEAPF64[$76>>3] = 0.0;
                 HEAPF64[$75>>3] = 1.0;
                 HEAPF64[$64>>3] = 0.0;
                 HEAPF64[$65>>3] = 0.0;
                 HEAPF64[$67>>3] = 0.0;
                 HEAPF64[$68>>3] = 0.0;
                 HEAPF64[$70>>3] = 0.0;
                 HEAPF64[$71>>3] = 0.0;
                 HEAPF64[$66>>3] = 0.0;
                 HEAPF64[$69>>3] = 0.0;
                 HEAPF64[$72>>3] = 0.0;
                 $1721 = (+__Z5IKabsd(1.0));
                 $1722 = $1721 < 1.0E-8;
                 ;HEAP32[$43>>2]=0|0;HEAP32[$43+4>>2]=0|0;HEAP32[$43+8>>2]=0|0;HEAP32[$43+12>>2]=0|0;
                 ;HEAP32[$45>>2]=0|0;HEAP32[$45+4>>2]=0|0;HEAP32[$45+8>>2]=0|0;HEAP32[$45+12>>2]=0|0;
                 ;HEAP32[$63>>2]=0|0;HEAP32[$63+4>>2]=0|0;HEAP32[$63+8>>2]=0|0;HEAP32[$63+12>>2]=0|0;
                 if ($1722) {
                  break L2360;
                 }
                 HEAPF64[$op>>3] = 1.0;
                 HEAPF64[$85>>3] = 0.0;
                 HEAPF64[$86>>3] = -1.0;
                 __ZN8IKSolver10polyroots2EPdS0_Ri($op,$zeror,$numroots);
                 $1723 = HEAP32[$numroots>>2]|0;
                 $1724 = ($1723|0)>(0);
                 if (!($1724)) {
                  HEAP16[$j1valid>>1] = 257;
                  HEAP8[$6>>0] = 2;
                  break L2360;
                 }
                 $1725 = HEAP32[$numroots>>2]|0;
                 $1726 = ($1725|0)>(1);
                 $numsolutions$01900 = 0;
                 while(1) {
                  $1727 = (($zeror) + ($numsolutions$01900<<3)|0);
                  $1728 = +HEAPF64[$1727>>3];
                  $1729 = (+Math_atan((+$1728)));
                  $1730 = $1729 * 2.0;
                  $1731 = $1730 + 6.2831853071795898;
                  $1732 = $1730 > 3.14159265358979;
                  $1733 = (($j1array) + ($numsolutions$01900<<3)|0);
                  HEAPF64[$1733>>3] = $1730;
                  do {
                   if ($1732) {
                    $1734 = $1730 + -6.2831853071795898;
                    HEAPF64[$1733>>3] = $1734;
                   } else {
                    $1735 = $1730 < -3.14159265358979;
                    if (!($1735)) {
                     break;
                    }
                    HEAPF64[$1733>>3] = $1731;
                   }
                  } while(0);
                  $1736 = +HEAPF64[$1733>>3];
                  $1737 = (+__Z5IKsind($1736));
                  $1738 = (($sj1array) + ($numsolutions$01900<<3)|0);
                  HEAPF64[$1738>>3] = $1737;
                  $1739 = +HEAPF64[$1733>>3];
                  $1740 = (+__Z5IKcosd($1739));
                  $1741 = (($cj1array) + ($numsolutions$01900<<3)|0);
                  HEAPF64[$1741>>3] = $1740;
                  $1742 = (($numsolutions$01900) + 1)|0;
                  $1743 = ($1742|0)<($1725|0);
                  if ($1743) {
                   $numsolutions$01900 = $1742;
                  } else {
                   break;
                  }
                 }
                 $$ = $1726 ? $1725 : 1;
                 HEAP16[$j1valid>>1] = 257;
                 HEAP8[$6>>0] = 2;
                 $ij115$01909 = 0;
                 while(1) {
                  $1744 = (($j1valid) + ($ij115$01909)|0);
                  $1745 = HEAP8[$1744>>0]|0;
                  $1746 = ($1745<<24>>24)==(0);
                  if (!($1746)) {
                   $1747 = (($j1array) + ($ij115$01909<<3)|0);
                   $1748 = +HEAPF64[$1747>>3];
                   HEAPF64[$3>>3] = $1748;
                   $1749 = (($cj1array) + ($ij115$01909<<3)|0);
                   $1750 = +HEAPF64[$1749>>3];
                   HEAPF64[$87>>3] = $1750;
                   $1751 = (($sj1array) + ($ij115$01909<<3)|0);
                   $1752 = +HEAPF64[$1751>>3];
                   HEAPF64[$88>>3] = $1752;
                   $1753 = +HEAPF64[$3>>3];
                   $1754 = $1753 * 0.5;
                   $1755 = (+__Z5IKtand($1754));
                   HEAPF64[$89>>3] = $1755;
                   $1756 = $ij115$01909&255;
                   HEAP8[$4>>0] = $1756;
                   HEAP8[$5>>0] = -1;
                   $iij1$01905 = (($ij115$01909) + 1)|0;
                   $1757 = ($iij1$01905|0)<($$|0);
                   L2515: do {
                    if ($1757) {
                     $iij1$01906 = $iij1$01905;
                     L2516: while(1) {
                      $1758 = (($j1valid) + ($iij1$01906)|0);
                      $1759 = HEAP8[$1758>>0]|0;
                      $1760 = ($1759<<24>>24)==(0);
                      do {
                       if (!($1760)) {
                        $1762 = +HEAPF64[$1749>>3];
                        $1763 = (($cj1array) + ($iij1$01906<<3)|0);
                        $1764 = +HEAPF64[$1763>>3];
                        $1765 = $1762 - $1764;
                        $1766 = (+__Z5IKabsd($1765));
                        $1767 = $1766 < 9.9999999999999995E-7;
                        if (!($1767)) {
                         break;
                        }
                        $1768 = +HEAPF64[$1751>>3];
                        $1769 = (($sj1array) + ($iij1$01906<<3)|0);
                        $1770 = +HEAPF64[$1769>>3];
                        $1771 = $1768 - $1770;
                        $1772 = (+__Z5IKabsd($1771));
                        $1773 = $1772 < 9.9999999999999995E-7;
                        if ($1773) {
                         $$lcssa2788 = $1758;$iij1$01906$lcssa = $iij1$01906;
                         break L2516;
                        }
                       }
                      } while(0);
                      $iij1$0 = (($iij1$01906) + 1)|0;
                      $1761 = ($iij1$0|0)<($$|0);
                      if ($1761) {
                       $iij1$01906 = $iij1$0;
                      } else {
                       break L2515;
                      }
                     }
                     HEAP8[$$lcssa2788>>0] = 0;
                     $1774 = $iij1$01906$lcssa&255;
                     HEAP8[$5>>0] = $1774;
                    }
                   } while(0);
                   __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
                  }
                  $1775 = (($ij115$01909) + 1)|0;
                  $exitcond2302 = ($1775|0)==($$|0);
                  if ($exitcond2302) {
                   break L2360;
                  } else {
                   $ij115$01909 = $1775;
                  }
                 }
                }
               } while(0);
               $1776 = +HEAPF64[$this>>3];
               $1777 = $1776 + 3.14159265358979;
               $1778 = (+__Z6IKfmoddd($1777,6.2831853071795898));
               $1779 = $1778 + -3.14159265358979;
               $1780 = (+__Z5IKabsd($1779));
               $1781 = +HEAPF64[$43>>3];
               $1782 = (+__Z5IKabsd($1781));
               $1783 = $1780 + $1782;
               $1784 = +HEAPF64[$45>>3];
               $1785 = -$1784;
               $1786 = (+__Z5IKabsd($1783));
               $1787 = $1786 < 9.9999999999999995E-7;
               do {
                if ($1787) {
                 $1788 = $1784 * $1784;
                 $1789 = 0.72250000000000003 - $1788;
                 $1790 = (+__Z5IKabsd($1789));
                 $1791 = $1790 < 9.9999999999999995E-7;
                 if (!($1791)) {
                  break;
                 }
                 $1792 = (+__Z5IKabsd(-0.84999999999999998));
                 $1793 = $1792 < 9.9999999999999995E-7;
                 if (!($1793)) {
                  break;
                 }
                 $1794 = (+__Z5IKabsd($1785));
                 $1795 = $1794 < 9.9999999999999995E-7;
                 if (!($1795)) {
                  break;
                 }
                 $1796 = (+__Z5IKabsd(0.0));
                 $1797 = $1796 < 9.9999999999999995E-7;
                 if (!($1797)) {
                  break;
                 }
                 $1798 = (+__Z5IKabsd(-0.93500000000000005));
                 $1799 = $1798 < 9.9999999999999995E-7;
                 if (!($1799)) {
                  break;
                 }
                 HEAPF64[$24>>3] = 0.0;
                 HEAPF64[$23>>3] = 1.0;
                 HEAPF64[$22>>3] = 0.0;
                 HEAPF64[$47>>3] = 0.0;
                 HEAPF64[$7>>3] = 0.0;
                 HEAPF64[$76>>3] = 0.0;
                 HEAPF64[$75>>3] = 1.0;
                 $1800 = +HEAPF64[$45>>3];
                 $1801 = $1800 * $1800;
                 HEAPF64[$60>>3] = $1801;
                 $1802 = +HEAPF64[$45>>3];
                 $1803 = +HEAPF64[$32>>3];
                 $1804 = $1802 * $1803;
                 HEAPF64[$61>>3] = $1804;
                 $1805 = +HEAPF64[$45>>3];
                 $1806 = +HEAPF64[$34>>3];
                 $1807 = $1805 * $1806;
                 HEAPF64[$62>>3] = $1807;
                 $1808 = +HEAPF64[$45>>3];
                 $1809 = +HEAPF64[$36>>3];
                 $1810 = $1808 * $1809;
                 HEAPF64[$63>>3] = $1810;
                 $1811 = +HEAPF64[$38>>3];
                 $1812 = $1811 * $1785;
                 HEAPF64[$64>>3] = $1812;
                 HEAPF64[$65>>3] = 0.0;
                 $1813 = +HEAPF64[$40>>3];
                 $1814 = $1813 * $1785;
                 HEAPF64[$67>>3] = $1814;
                 HEAPF64[$68>>3] = 0.0;
                 $1815 = +HEAPF64[$42>>3];
                 $1816 = $1815 * $1785;
                 HEAPF64[$70>>3] = $1816;
                 HEAPF64[$71>>3] = 0.0;
                 HEAPF64[$43>>3] = 0.0;
                 HEAPF64[$this>>3] = 0.0;
                 HEAPF64[$84>>3] = 0.0;
                 HEAPF64[$83>>3] = 1.0;
                 $1817 = +HEAPF64[$45>>3];
                 $1818 = +HEAPF64[$26>>3];
                 $1819 = $1817 * $1818;
                 HEAPF64[$66>>3] = $1819;
                 $1820 = +HEAPF64[$45>>3];
                 $1821 = +HEAPF64[$28>>3];
                 $1822 = $1820 * $1821;
                 HEAPF64[$69>>3] = $1822;
                 $1823 = +HEAPF64[$45>>3];
                 $1824 = +HEAPF64[$30>>3];
                 $1825 = $1823 * $1824;
                 HEAPF64[$72>>3] = $1825;
                 $1826 = (+__Z5IKabsd(1.0));
                 $1827 = $1826 < 1.0E-8;
                 if ($1827) {
                  break L2360;
                 }
                 HEAPF64[$op18>>3] = 1.0;
                 HEAPF64[$90>>3] = 0.0;
                 HEAPF64[$91>>3] = -1.0;
                 __ZN8IKSolver10polyroots2EPdS0_Ri($op18,$zeror19,$numroots20);
                 $1828 = HEAP32[$numroots20>>2]|0;
                 $1829 = ($1828|0)>(0);
                 if (!($1829)) {
                  HEAP16[$j1valid29>>1] = 257;
                  HEAP8[$6>>0] = 2;
                  break L2360;
                 }
                 $1830 = HEAP32[$numroots20>>2]|0;
                 $1831 = ($1830|0)>(1);
                 $numsolutions25$01885 = 0;
                 while(1) {
                  $1832 = (($zeror19) + ($numsolutions25$01885<<3)|0);
                  $1833 = +HEAPF64[$1832>>3];
                  $1834 = (+Math_atan((+$1833)));
                  $1835 = $1834 * 2.0;
                  $1836 = $1835 + 6.2831853071795898;
                  $1837 = $1835 > 3.14159265358979;
                  $1838 = (($j1array21) + ($numsolutions25$01885<<3)|0);
                  HEAPF64[$1838>>3] = $1835;
                  do {
                   if ($1837) {
                    $1839 = $1835 + -6.2831853071795898;
                    HEAPF64[$1838>>3] = $1839;
                   } else {
                    $1840 = $1835 < -3.14159265358979;
                    if (!($1840)) {
                     break;
                    }
                    HEAPF64[$1838>>3] = $1836;
                   }
                  } while(0);
                  $1841 = +HEAPF64[$1838>>3];
                  $1842 = (+__Z5IKsind($1841));
                  $1843 = (($sj1array23) + ($numsolutions25$01885<<3)|0);
                  HEAPF64[$1843>>3] = $1842;
                  $1844 = +HEAPF64[$1838>>3];
                  $1845 = (+__Z5IKcosd($1844));
                  $1846 = (($cj1array22) + ($numsolutions25$01885<<3)|0);
                  HEAPF64[$1846>>3] = $1845;
                  $1847 = (($numsolutions25$01885) + 1)|0;
                  $1848 = ($1847|0)<($1830|0);
                  if ($1848) {
                   $numsolutions25$01885 = $1847;
                  } else {
                   break;
                  }
                 }
                 $$2472 = $1831 ? $1830 : 1;
                 HEAP16[$j1valid29>>1] = 257;
                 HEAP8[$6>>0] = 2;
                 $ij130$01894 = 0;
                 while(1) {
                  $1849 = (($j1valid29) + ($ij130$01894)|0);
                  $1850 = HEAP8[$1849>>0]|0;
                  $1851 = ($1850<<24>>24)==(0);
                  if (!($1851)) {
                   $1852 = (($j1array21) + ($ij130$01894<<3)|0);
                   $1853 = +HEAPF64[$1852>>3];
                   HEAPF64[$3>>3] = $1853;
                   $1854 = (($cj1array22) + ($ij130$01894<<3)|0);
                   $1855 = +HEAPF64[$1854>>3];
                   HEAPF64[$92>>3] = $1855;
                   $1856 = (($sj1array23) + ($ij130$01894<<3)|0);
                   $1857 = +HEAPF64[$1856>>3];
                   HEAPF64[$93>>3] = $1857;
                   $1858 = +HEAPF64[$3>>3];
                   $1859 = $1858 * 0.5;
                   $1860 = (+__Z5IKtand($1859));
                   HEAPF64[$94>>3] = $1860;
                   $1861 = $ij130$01894&255;
                   HEAP8[$4>>0] = $1861;
                   HEAP8[$5>>0] = -1;
                   $iij131$01890 = (($ij130$01894) + 1)|0;
                   $1862 = ($iij131$01890|0)<($$2472|0);
                   L2549: do {
                    if ($1862) {
                     $iij131$01891 = $iij131$01890;
                     L2550: while(1) {
                      $1863 = (($j1valid29) + ($iij131$01891)|0);
                      $1864 = HEAP8[$1863>>0]|0;
                      $1865 = ($1864<<24>>24)==(0);
                      do {
                       if (!($1865)) {
                        $1867 = +HEAPF64[$1854>>3];
                        $1868 = (($cj1array22) + ($iij131$01891<<3)|0);
                        $1869 = +HEAPF64[$1868>>3];
                        $1870 = $1867 - $1869;
                        $1871 = (+__Z5IKabsd($1870));
                        $1872 = $1871 < 9.9999999999999995E-7;
                        if (!($1872)) {
                         break;
                        }
                        $1873 = +HEAPF64[$1856>>3];
                        $1874 = (($sj1array23) + ($iij131$01891<<3)|0);
                        $1875 = +HEAPF64[$1874>>3];
                        $1876 = $1873 - $1875;
                        $1877 = (+__Z5IKabsd($1876));
                        $1878 = $1877 < 9.9999999999999995E-7;
                        if ($1878) {
                         $$lcssa2785 = $1863;$iij131$01891$lcssa = $iij131$01891;
                         break L2550;
                        }
                       }
                      } while(0);
                      $iij131$0 = (($iij131$01891) + 1)|0;
                      $1866 = ($iij131$0|0)<($$2472|0);
                      if ($1866) {
                       $iij131$01891 = $iij131$0;
                      } else {
                       break L2549;
                      }
                     }
                     HEAP8[$$lcssa2785>>0] = 0;
                     $1879 = $iij131$01891$lcssa&255;
                     HEAP8[$5>>0] = $1879;
                    }
                   } while(0);
                   __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
                  }
                  $1880 = (($ij130$01894) + 1)|0;
                  $exitcond2300 = ($1880|0)==($$2472|0);
                  if ($exitcond2300) {
                   break L2360;
                  } else {
                   $ij130$01894 = $1880;
                  }
                 }
                }
               } while(0);
               $1881 = +HEAPF64[$43>>3];
               $1882 = (+__Z5IKabsd($1881));
               $1883 = +HEAPF64[$this>>3];
               $1884 = (+__Z6IKfmoddd($1883,6.2831853071795898));
               $1885 = $1884 + -3.14159265358979;
               $1886 = (+__Z5IKabsd($1885));
               $1887 = $1882 + $1886;
               $1888 = +HEAPF64[$45>>3];
               $1889 = (+__Z5IKabsd($1887));
               $1890 = $1889 < 9.9999999999999995E-7;
               do {
                if ($1890) {
                 $1891 = $1888 * $1888;
                 $1892 = 0.72250000000000003 - $1891;
                 $1893 = (+__Z5IKabsd($1892));
                 $1894 = $1893 < 9.9999999999999995E-7;
                 if (!($1894)) {
                  break;
                 }
                 $1895 = (+__Z5IKabsd(-0.84999999999999998));
                 $1896 = $1895 < 9.9999999999999995E-7;
                 if (!($1896)) {
                  break;
                 }
                 $1897 = (+__Z5IKabsd($1888));
                 $1898 = $1897 < 9.9999999999999995E-7;
                 if (!($1898)) {
                  break;
                 }
                 $1899 = (+__Z5IKabsd(0.0));
                 $1900 = $1899 < 9.9999999999999995E-7;
                 if (!($1900)) {
                  break;
                 }
                 $1901 = (+__Z5IKabsd(-0.93500000000000005));
                 $1902 = $1901 < 9.9999999999999995E-7;
                 if (!($1902)) {
                  break;
                 }
                 $1903 = -$1888;
                 HEAPF64[$24>>3] = 0.0;
                 HEAPF64[$23>>3] = 1.0;
                 HEAPF64[$22>>3] = 0.0;
                 HEAPF64[$47>>3] = 0.0;
                 HEAPF64[$7>>3] = 0.0;
                 HEAPF64[$76>>3] = 0.0;
                 HEAPF64[$75>>3] = 1.0;
                 $1904 = +HEAPF64[$45>>3];
                 $1905 = $1904 * $1904;
                 HEAPF64[$60>>3] = $1905;
                 $1906 = +HEAPF64[$45>>3];
                 $1907 = +HEAPF64[$32>>3];
                 $1908 = $1906 * $1907;
                 HEAPF64[$61>>3] = $1908;
                 $1909 = +HEAPF64[$45>>3];
                 $1910 = +HEAPF64[$34>>3];
                 $1911 = $1909 * $1910;
                 HEAPF64[$62>>3] = $1911;
                 $1912 = +HEAPF64[$45>>3];
                 $1913 = +HEAPF64[$36>>3];
                 $1914 = $1912 * $1913;
                 HEAPF64[$63>>3] = $1914;
                 $1915 = +HEAPF64[$38>>3];
                 $1916 = $1915 * $1903;
                 HEAPF64[$64>>3] = $1916;
                 HEAPF64[$65>>3] = 0.0;
                 $1917 = +HEAPF64[$40>>3];
                 $1918 = $1917 * $1903;
                 HEAPF64[$67>>3] = $1918;
                 HEAPF64[$68>>3] = 0.0;
                 $1919 = +HEAPF64[$42>>3];
                 $1920 = $1919 * $1903;
                 HEAPF64[$70>>3] = $1920;
                 HEAPF64[$71>>3] = 0.0;
                 HEAPF64[$43>>3] = 0.0;
                 HEAPF64[$this>>3] = 3.14159265358979;
                 HEAPF64[$84>>3] = 0.0;
                 HEAPF64[$83>>3] = -1.0;
                 $1921 = +HEAPF64[$45>>3];
                 $1922 = +HEAPF64[$26>>3];
                 $1923 = $1921 * $1922;
                 HEAPF64[$66>>3] = $1923;
                 $1924 = +HEAPF64[$45>>3];
                 $1925 = +HEAPF64[$28>>3];
                 $1926 = $1924 * $1925;
                 HEAPF64[$69>>3] = $1926;
                 $1927 = +HEAPF64[$45>>3];
                 $1928 = +HEAPF64[$30>>3];
                 $1929 = $1927 * $1928;
                 HEAPF64[$72>>3] = $1929;
                 $1930 = (+__Z5IKabsd(1.0));
                 $1931 = $1930 < 1.0E-8;
                 if ($1931) {
                  break L2360;
                 }
                 HEAPF64[$op34>>3] = 1.0;
                 HEAPF64[$95>>3] = 0.0;
                 HEAPF64[$96>>3] = -1.0;
                 __ZN8IKSolver10polyroots2EPdS0_Ri($op34,$zeror35,$numroots36);
                 $1932 = HEAP32[$numroots36>>2]|0;
                 $1933 = ($1932|0)>(0);
                 if (!($1933)) {
                  HEAP16[$j1valid45>>1] = 257;
                  HEAP8[$6>>0] = 2;
                  break L2360;
                 }
                 $1934 = HEAP32[$numroots36>>2]|0;
                 $1935 = ($1934|0)>(1);
                 $numsolutions41$01870 = 0;
                 while(1) {
                  $1936 = (($zeror35) + ($numsolutions41$01870<<3)|0);
                  $1937 = +HEAPF64[$1936>>3];
                  $1938 = (+Math_atan((+$1937)));
                  $1939 = $1938 * 2.0;
                  $1940 = $1939 + 6.2831853071795898;
                  $1941 = $1939 > 3.14159265358979;
                  $1942 = (($j1array37) + ($numsolutions41$01870<<3)|0);
                  HEAPF64[$1942>>3] = $1939;
                  do {
                   if ($1941) {
                    $1943 = $1939 + -6.2831853071795898;
                    HEAPF64[$1942>>3] = $1943;
                   } else {
                    $1944 = $1939 < -3.14159265358979;
                    if (!($1944)) {
                     break;
                    }
                    HEAPF64[$1942>>3] = $1940;
                   }
                  } while(0);
                  $1945 = +HEAPF64[$1942>>3];
                  $1946 = (+__Z5IKsind($1945));
                  $1947 = (($sj1array39) + ($numsolutions41$01870<<3)|0);
                  HEAPF64[$1947>>3] = $1946;
                  $1948 = +HEAPF64[$1942>>3];
                  $1949 = (+__Z5IKcosd($1948));
                  $1950 = (($cj1array38) + ($numsolutions41$01870<<3)|0);
                  HEAPF64[$1950>>3] = $1949;
                  $1951 = (($numsolutions41$01870) + 1)|0;
                  $1952 = ($1951|0)<($1934|0);
                  if ($1952) {
                   $numsolutions41$01870 = $1951;
                  } else {
                   break;
                  }
                 }
                 $$2473 = $1935 ? $1934 : 1;
                 HEAP16[$j1valid45>>1] = 257;
                 HEAP8[$6>>0] = 2;
                 $ij146$01879 = 0;
                 while(1) {
                  $1953 = (($j1valid45) + ($ij146$01879)|0);
                  $1954 = HEAP8[$1953>>0]|0;
                  $1955 = ($1954<<24>>24)==(0);
                  if (!($1955)) {
                   $1956 = (($j1array37) + ($ij146$01879<<3)|0);
                   $1957 = +HEAPF64[$1956>>3];
                   HEAPF64[$3>>3] = $1957;
                   $1958 = (($cj1array38) + ($ij146$01879<<3)|0);
                   $1959 = +HEAPF64[$1958>>3];
                   HEAPF64[$97>>3] = $1959;
                   $1960 = (($sj1array39) + ($ij146$01879<<3)|0);
                   $1961 = +HEAPF64[$1960>>3];
                   HEAPF64[$98>>3] = $1961;
                   $1962 = +HEAPF64[$3>>3];
                   $1963 = $1962 * 0.5;
                   $1964 = (+__Z5IKtand($1963));
                   HEAPF64[$99>>3] = $1964;
                   $1965 = $ij146$01879&255;
                   HEAP8[$4>>0] = $1965;
                   HEAP8[$5>>0] = -1;
                   $iij147$01875 = (($ij146$01879) + 1)|0;
                   $1966 = ($iij147$01875|0)<($$2473|0);
                   L2583: do {
                    if ($1966) {
                     $iij147$01876 = $iij147$01875;
                     L2584: while(1) {
                      $1967 = (($j1valid45) + ($iij147$01876)|0);
                      $1968 = HEAP8[$1967>>0]|0;
                      $1969 = ($1968<<24>>24)==(0);
                      do {
                       if (!($1969)) {
                        $1971 = +HEAPF64[$1958>>3];
                        $1972 = (($cj1array38) + ($iij147$01876<<3)|0);
                        $1973 = +HEAPF64[$1972>>3];
                        $1974 = $1971 - $1973;
                        $1975 = (+__Z5IKabsd($1974));
                        $1976 = $1975 < 9.9999999999999995E-7;
                        if (!($1976)) {
                         break;
                        }
                        $1977 = +HEAPF64[$1960>>3];
                        $1978 = (($sj1array39) + ($iij147$01876<<3)|0);
                        $1979 = +HEAPF64[$1978>>3];
                        $1980 = $1977 - $1979;
                        $1981 = (+__Z5IKabsd($1980));
                        $1982 = $1981 < 9.9999999999999995E-7;
                        if ($1982) {
                         $$lcssa2782 = $1967;$iij147$01876$lcssa = $iij147$01876;
                         break L2584;
                        }
                       }
                      } while(0);
                      $iij147$0 = (($iij147$01876) + 1)|0;
                      $1970 = ($iij147$0|0)<($$2473|0);
                      if ($1970) {
                       $iij147$01876 = $iij147$0;
                      } else {
                       break L2583;
                      }
                     }
                     HEAP8[$$lcssa2782>>0] = 0;
                     $1983 = $iij147$01876$lcssa&255;
                     HEAP8[$5>>0] = $1983;
                    }
                   } while(0);
                   __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
                  }
                  $1984 = (($ij146$01879) + 1)|0;
                  $exitcond2298 = ($1984|0)==($$2473|0);
                  if ($exitcond2298) {
                   break L2360;
                  } else {
                   $ij146$01879 = $1984;
                  }
                 }
                }
               } while(0);
               $1985 = +HEAPF64[$45>>3];
               $1986 = (+__Z5IKabsd($1985));
               $1987 = +HEAPF64[$this>>3];
               $1988 = $1987 + 1.5707963267949001;
               $1989 = (+__Z6IKfmoddd($1988,6.2831853071795898));
               $1990 = $1989 + -3.14159265358979;
               $1991 = (+__Z5IKabsd($1990));
               $1992 = $1986 + $1991;
               $1993 = +HEAPF64[$43>>3];
               $1994 = (+__Z5IKabsd($1992));
               $1995 = $1994 < 9.9999999999999995E-7;
               do {
                if ($1995) {
                 $1996 = $1993 * $1993;
                 $1997 = 0.72250000000000003 - $1996;
                 $1998 = (+__Z5IKabsd($1997));
                 $1999 = $1998 < 9.9999999999999995E-7;
                 if (!($1999)) {
                  break;
                 }
                 $2000 = (+__Z5IKabsd(-0.84999999999999998));
                 $2001 = $2000 < 9.9999999999999995E-7;
                 if (!($2001)) {
                  break;
                 }
                 $2002 = (+__Z5IKabsd($1993));
                 $2003 = $2002 < 9.9999999999999995E-7;
                 if (!($2003)) {
                  break;
                 }
                 $2004 = (+__Z5IKabsd(0.0));
                 $2005 = $2004 < 9.9999999999999995E-7;
                 if (!($2005)) {
                  break;
                 }
                 $2006 = (+__Z5IKabsd(-0.93500000000000005));
                 $2007 = $2006 < 9.9999999999999995E-7;
                 if (!($2007)) {
                  break;
                 }
                 $2008 = -$1993;
                 HEAPF64[$24>>3] = 0.0;
                 HEAPF64[$23>>3] = 1.0;
                 HEAPF64[$22>>3] = 0.0;
                 HEAPF64[$47>>3] = 0.0;
                 HEAPF64[$7>>3] = 0.0;
                 HEAPF64[$76>>3] = 0.0;
                 HEAPF64[$75>>3] = 1.0;
                 $2009 = +HEAPF64[$43>>3];
                 $2010 = $2009 * $2009;
                 HEAPF64[$60>>3] = $2010;
                 $2011 = +HEAPF64[$43>>3];
                 $2012 = +HEAPF64[$26>>3];
                 $2013 = $2011 * $2012;
                 HEAPF64[$61>>3] = $2013;
                 $2014 = +HEAPF64[$43>>3];
                 $2015 = +HEAPF64[$28>>3];
                 $2016 = $2014 * $2015;
                 HEAPF64[$62>>3] = $2016;
                 $2017 = +HEAPF64[$43>>3];
                 $2018 = +HEAPF64[$30>>3];
                 $2019 = $2017 * $2018;
                 HEAPF64[$63>>3] = $2019;
                 HEAPF64[$64>>3] = 0.0;
                 $2020 = +HEAPF64[$43>>3];
                 $2021 = +HEAPF64[$38>>3];
                 $2022 = $2020 * $2021;
                 HEAPF64[$65>>3] = $2022;
                 HEAPF64[$67>>3] = 0.0;
                 $2023 = +HEAPF64[$43>>3];
                 $2024 = +HEAPF64[$40>>3];
                 $2025 = $2023 * $2024;
                 HEAPF64[$68>>3] = $2025;
                 HEAPF64[$70>>3] = 0.0;
                 $2026 = +HEAPF64[$43>>3];
                 $2027 = +HEAPF64[$42>>3];
                 $2028 = $2026 * $2027;
                 HEAPF64[$71>>3] = $2028;
                 HEAPF64[$45>>3] = 0.0;
                 HEAPF64[$this>>3] = 1.5707963267949001;
                 HEAPF64[$84>>3] = 1.0;
                 HEAPF64[$83>>3] = 0.0;
                 $2029 = +HEAPF64[$32>>3];
                 $2030 = $2029 * $2008;
                 HEAPF64[$66>>3] = $2030;
                 $2031 = +HEAPF64[$34>>3];
                 $2032 = $2031 * $2008;
                 HEAPF64[$69>>3] = $2032;
                 $2033 = +HEAPF64[$36>>3];
                 $2034 = $2033 * $2008;
                 HEAPF64[$72>>3] = $2034;
                 $2035 = (+__Z5IKabsd(1.0));
                 $2036 = $2035 < 1.0E-8;
                 if ($2036) {
                  break L2360;
                 }
                 HEAPF64[$op50>>3] = 1.0;
                 HEAPF64[$100>>3] = 0.0;
                 HEAPF64[$101>>3] = -1.0;
                 __ZN8IKSolver10polyroots2EPdS0_Ri($op50,$zeror51,$numroots52);
                 $2037 = HEAP32[$numroots52>>2]|0;
                 $2038 = ($2037|0)>(0);
                 if (!($2038)) {
                  HEAP16[$j1valid61>>1] = 257;
                  HEAP8[$6>>0] = 2;
                  break L2360;
                 }
                 $2039 = HEAP32[$numroots52>>2]|0;
                 $2040 = ($2039|0)>(1);
                 $numsolutions57$01855 = 0;
                 while(1) {
                  $2041 = (($zeror51) + ($numsolutions57$01855<<3)|0);
                  $2042 = +HEAPF64[$2041>>3];
                  $2043 = (+Math_atan((+$2042)));
                  $2044 = $2043 * 2.0;
                  $2045 = $2044 + 6.2831853071795898;
                  $2046 = $2044 > 3.14159265358979;
                  $2047 = (($j1array53) + ($numsolutions57$01855<<3)|0);
                  HEAPF64[$2047>>3] = $2044;
                  do {
                   if ($2046) {
                    $2048 = $2044 + -6.2831853071795898;
                    HEAPF64[$2047>>3] = $2048;
                   } else {
                    $2049 = $2044 < -3.14159265358979;
                    if (!($2049)) {
                     break;
                    }
                    HEAPF64[$2047>>3] = $2045;
                   }
                  } while(0);
                  $2050 = +HEAPF64[$2047>>3];
                  $2051 = (+__Z5IKsind($2050));
                  $2052 = (($sj1array55) + ($numsolutions57$01855<<3)|0);
                  HEAPF64[$2052>>3] = $2051;
                  $2053 = +HEAPF64[$2047>>3];
                  $2054 = (+__Z5IKcosd($2053));
                  $2055 = (($cj1array54) + ($numsolutions57$01855<<3)|0);
                  HEAPF64[$2055>>3] = $2054;
                  $2056 = (($numsolutions57$01855) + 1)|0;
                  $2057 = ($2056|0)<($2039|0);
                  if ($2057) {
                   $numsolutions57$01855 = $2056;
                  } else {
                   break;
                  }
                 }
                 $$2474 = $2040 ? $2039 : 1;
                 HEAP16[$j1valid61>>1] = 257;
                 HEAP8[$6>>0] = 2;
                 $ij162$01864 = 0;
                 while(1) {
                  $2058 = (($j1valid61) + ($ij162$01864)|0);
                  $2059 = HEAP8[$2058>>0]|0;
                  $2060 = ($2059<<24>>24)==(0);
                  if (!($2060)) {
                   $2061 = (($j1array53) + ($ij162$01864<<3)|0);
                   $2062 = +HEAPF64[$2061>>3];
                   HEAPF64[$3>>3] = $2062;
                   $2063 = (($cj1array54) + ($ij162$01864<<3)|0);
                   $2064 = +HEAPF64[$2063>>3];
                   HEAPF64[$102>>3] = $2064;
                   $2065 = (($sj1array55) + ($ij162$01864<<3)|0);
                   $2066 = +HEAPF64[$2065>>3];
                   HEAPF64[$103>>3] = $2066;
                   $2067 = +HEAPF64[$3>>3];
                   $2068 = $2067 * 0.5;
                   $2069 = (+__Z5IKtand($2068));
                   HEAPF64[$104>>3] = $2069;
                   $2070 = $ij162$01864&255;
                   HEAP8[$4>>0] = $2070;
                   HEAP8[$5>>0] = -1;
                   $iij163$01860 = (($ij162$01864) + 1)|0;
                   $2071 = ($iij163$01860|0)<($$2474|0);
                   L2617: do {
                    if ($2071) {
                     $iij163$01861 = $iij163$01860;
                     L2618: while(1) {
                      $2072 = (($j1valid61) + ($iij163$01861)|0);
                      $2073 = HEAP8[$2072>>0]|0;
                      $2074 = ($2073<<24>>24)==(0);
                      do {
                       if (!($2074)) {
                        $2076 = +HEAPF64[$2063>>3];
                        $2077 = (($cj1array54) + ($iij163$01861<<3)|0);
                        $2078 = +HEAPF64[$2077>>3];
                        $2079 = $2076 - $2078;
                        $2080 = (+__Z5IKabsd($2079));
                        $2081 = $2080 < 9.9999999999999995E-7;
                        if (!($2081)) {
                         break;
                        }
                        $2082 = +HEAPF64[$2065>>3];
                        $2083 = (($sj1array55) + ($iij163$01861<<3)|0);
                        $2084 = +HEAPF64[$2083>>3];
                        $2085 = $2082 - $2084;
                        $2086 = (+__Z5IKabsd($2085));
                        $2087 = $2086 < 9.9999999999999995E-7;
                        if ($2087) {
                         $$lcssa2779 = $2072;$iij163$01861$lcssa = $iij163$01861;
                         break L2618;
                        }
                       }
                      } while(0);
                      $iij163$0 = (($iij163$01861) + 1)|0;
                      $2075 = ($iij163$0|0)<($$2474|0);
                      if ($2075) {
                       $iij163$01861 = $iij163$0;
                      } else {
                       break L2617;
                      }
                     }
                     HEAP8[$$lcssa2779>>0] = 0;
                     $2088 = $iij163$01861$lcssa&255;
                     HEAP8[$5>>0] = $2088;
                    }
                   } while(0);
                   __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
                  }
                  $2089 = (($ij162$01864) + 1)|0;
                  $exitcond2296 = ($2089|0)==($$2474|0);
                  if ($exitcond2296) {
                   break L2360;
                  } else {
                   $ij162$01864 = $2089;
                  }
                 }
                }
               } while(0);
               $2090 = +HEAPF64[$45>>3];
               $2091 = (+__Z5IKabsd($2090));
               $2092 = +HEAPF64[$this>>3];
               $2093 = $2092 + 4.7123889803846897;
               $2094 = (+__Z6IKfmoddd($2093,6.2831853071795898));
               $2095 = $2094 + -3.14159265358979;
               $2096 = (+__Z5IKabsd($2095));
               $2097 = $2091 + $2096;
               $2098 = +HEAPF64[$43>>3];
               $2099 = -$2098;
               $2100 = (+__Z5IKabsd($2097));
               $2101 = $2100 < 9.9999999999999995E-7;
               if (!($2101)) {
                break L2360;
               }
               $2102 = $2098 * $2098;
               $2103 = 0.72250000000000003 - $2102;
               $2104 = (+__Z5IKabsd($2103));
               $2105 = $2104 < 9.9999999999999995E-7;
               if (!($2105)) {
                break L2360;
               }
               $2106 = (+__Z5IKabsd(-0.84999999999999998));
               $2107 = $2106 < 9.9999999999999995E-7;
               if (!($2107)) {
                break L2360;
               }
               $2108 = (+__Z5IKabsd($2099));
               $2109 = $2108 < 9.9999999999999995E-7;
               if (!($2109)) {
                break L2360;
               }
               $2110 = (+__Z5IKabsd(0.0));
               $2111 = $2110 < 9.9999999999999995E-7;
               if (!($2111)) {
                break L2360;
               }
               $2112 = (+__Z5IKabsd(-0.93500000000000005));
               $2113 = $2112 < 9.9999999999999995E-7;
               if (!($2113)) {
                break L2360;
               }
               HEAPF64[$24>>3] = 0.0;
               HEAPF64[$23>>3] = 1.0;
               HEAPF64[$22>>3] = 0.0;
               HEAPF64[$47>>3] = 0.0;
               HEAPF64[$7>>3] = 0.0;
               HEAPF64[$76>>3] = 0.0;
               HEAPF64[$75>>3] = 1.0;
               $2114 = +HEAPF64[$43>>3];
               $2115 = $2114 * $2114;
               HEAPF64[$60>>3] = $2115;
               $2116 = +HEAPF64[$43>>3];
               $2117 = +HEAPF64[$26>>3];
               $2118 = $2116 * $2117;
               HEAPF64[$61>>3] = $2118;
               $2119 = +HEAPF64[$43>>3];
               $2120 = +HEAPF64[$28>>3];
               $2121 = $2119 * $2120;
               HEAPF64[$62>>3] = $2121;
               $2122 = +HEAPF64[$43>>3];
               $2123 = +HEAPF64[$30>>3];
               $2124 = $2122 * $2123;
               HEAPF64[$63>>3] = $2124;
               HEAPF64[$64>>3] = 0.0;
               $2125 = +HEAPF64[$43>>3];
               $2126 = +HEAPF64[$38>>3];
               $2127 = $2125 * $2126;
               HEAPF64[$65>>3] = $2127;
               HEAPF64[$67>>3] = 0.0;
               $2128 = +HEAPF64[$43>>3];
               $2129 = +HEAPF64[$40>>3];
               $2130 = $2128 * $2129;
               HEAPF64[$68>>3] = $2130;
               HEAPF64[$70>>3] = 0.0;
               $2131 = +HEAPF64[$43>>3];
               $2132 = +HEAPF64[$42>>3];
               $2133 = $2131 * $2132;
               HEAPF64[$71>>3] = $2133;
               HEAPF64[$45>>3] = 0.0;
               HEAPF64[$this>>3] = -1.5707963267949001;
               HEAPF64[$84>>3] = -1.0;
               HEAPF64[$83>>3] = 0.0;
               $2134 = +HEAPF64[$32>>3];
               $2135 = $2134 * $2099;
               HEAPF64[$66>>3] = $2135;
               $2136 = +HEAPF64[$34>>3];
               $2137 = $2136 * $2099;
               HEAPF64[$69>>3] = $2137;
               $2138 = +HEAPF64[$36>>3];
               $2139 = $2138 * $2099;
               HEAPF64[$72>>3] = $2139;
               $2140 = (+__Z5IKabsd(1.0));
               $2141 = $2140 < 1.0E-8;
               if ($2141) {
                break L2360;
               }
               HEAPF64[$op66>>3] = 1.0;
               HEAPF64[$105>>3] = 0.0;
               HEAPF64[$106>>3] = -1.0;
               __ZN8IKSolver10polyroots2EPdS0_Ri($op66,$zeror67,$numroots68);
               $2142 = HEAP32[$numroots68>>2]|0;
               $2143 = ($2142|0)>(0);
               if (!($2143)) {
                HEAP16[$j1valid77>>1] = 257;
                HEAP8[$6>>0] = 2;
                break L2360;
               }
               $2144 = HEAP32[$numroots68>>2]|0;
               $2145 = ($2144|0)>(1);
               $numsolutions73$01840 = 0;
               while(1) {
                $2146 = (($zeror67) + ($numsolutions73$01840<<3)|0);
                $2147 = +HEAPF64[$2146>>3];
                $2148 = (+Math_atan((+$2147)));
                $2149 = $2148 * 2.0;
                $2150 = $2149 + 6.2831853071795898;
                $2151 = $2149 > 3.14159265358979;
                $2152 = (($j1array69) + ($numsolutions73$01840<<3)|0);
                HEAPF64[$2152>>3] = $2149;
                do {
                 if ($2151) {
                  $2153 = $2149 + -6.2831853071795898;
                  HEAPF64[$2152>>3] = $2153;
                 } else {
                  $2154 = $2149 < -3.14159265358979;
                  if (!($2154)) {
                   break;
                  }
                  HEAPF64[$2152>>3] = $2150;
                 }
                } while(0);
                $2155 = +HEAPF64[$2152>>3];
                $2156 = (+__Z5IKsind($2155));
                $2157 = (($sj1array71) + ($numsolutions73$01840<<3)|0);
                HEAPF64[$2157>>3] = $2156;
                $2158 = +HEAPF64[$2152>>3];
                $2159 = (+__Z5IKcosd($2158));
                $2160 = (($cj1array70) + ($numsolutions73$01840<<3)|0);
                HEAPF64[$2160>>3] = $2159;
                $2161 = (($numsolutions73$01840) + 1)|0;
                $2162 = ($2161|0)<($2144|0);
                if ($2162) {
                 $numsolutions73$01840 = $2161;
                } else {
                 break;
                }
               }
               $$2475 = $2145 ? $2144 : 1;
               HEAP16[$j1valid77>>1] = 257;
               HEAP8[$6>>0] = 2;
               $ij178$01849 = 0;
               while(1) {
                $2163 = (($j1valid77) + ($ij178$01849)|0);
                $2164 = HEAP8[$2163>>0]|0;
                $2165 = ($2164<<24>>24)==(0);
                if (!($2165)) {
                 $2166 = (($j1array69) + ($ij178$01849<<3)|0);
                 $2167 = +HEAPF64[$2166>>3];
                 HEAPF64[$3>>3] = $2167;
                 $2168 = (($cj1array70) + ($ij178$01849<<3)|0);
                 $2169 = +HEAPF64[$2168>>3];
                 HEAPF64[$107>>3] = $2169;
                 $2170 = (($sj1array71) + ($ij178$01849<<3)|0);
                 $2171 = +HEAPF64[$2170>>3];
                 HEAPF64[$108>>3] = $2171;
                 $2172 = +HEAPF64[$3>>3];
                 $2173 = $2172 * 0.5;
                 $2174 = (+__Z5IKtand($2173));
                 HEAPF64[$109>>3] = $2174;
                 $2175 = $ij178$01849&255;
                 HEAP8[$4>>0] = $2175;
                 HEAP8[$5>>0] = -1;
                 $iij179$01845 = (($ij178$01849) + 1)|0;
                 $2176 = ($iij179$01845|0)<($$2475|0);
                 L2650: do {
                  if ($2176) {
                   $iij179$01846 = $iij179$01845;
                   L2651: while(1) {
                    $2177 = (($j1valid77) + ($iij179$01846)|0);
                    $2178 = HEAP8[$2177>>0]|0;
                    $2179 = ($2178<<24>>24)==(0);
                    do {
                     if (!($2179)) {
                      $2181 = +HEAPF64[$2168>>3];
                      $2182 = (($cj1array70) + ($iij179$01846<<3)|0);
                      $2183 = +HEAPF64[$2182>>3];
                      $2184 = $2181 - $2183;
                      $2185 = (+__Z5IKabsd($2184));
                      $2186 = $2185 < 9.9999999999999995E-7;
                      if (!($2186)) {
                       break;
                      }
                      $2187 = +HEAPF64[$2170>>3];
                      $2188 = (($sj1array71) + ($iij179$01846<<3)|0);
                      $2189 = +HEAPF64[$2188>>3];
                      $2190 = $2187 - $2189;
                      $2191 = (+__Z5IKabsd($2190));
                      $2192 = $2191 < 9.9999999999999995E-7;
                      if ($2192) {
                       $$lcssa2776 = $2177;$iij179$01846$lcssa = $iij179$01846;
                       break L2651;
                      }
                     }
                    } while(0);
                    $iij179$0 = (($iij179$01846) + 1)|0;
                    $2180 = ($iij179$0|0)<($$2475|0);
                    if ($2180) {
                     $iij179$01846 = $iij179$0;
                    } else {
                     break L2650;
                    }
                   }
                   HEAP8[$$lcssa2776>>0] = 0;
                   $2193 = $iij179$01846$lcssa&255;
                   HEAP8[$5>>0] = $2193;
                  }
                 } while(0);
                 __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
                }
                $2194 = (($ij178$01849) + 1)|0;
                $exitcond2294 = ($2194|0)==($$2475|0);
                if ($exitcond2294) {
                 break L2360;
                } else {
                 $ij178$01849 = $2194;
                }
               }
              }
             } while(0);
             $2821 = +HEAPF64[$43>>3];
             $2822 = +HEAPF64[$84>>3];
             $2823 = $2821 * $2822;
             $2824 = +HEAPF64[$83>>3];
             $2825 = +HEAPF64[$45>>3];
             $2826 = $2824 * $2825;
             $2827 = +HEAPF64[$22>>3];
             $2828 = $2827 + -3.14159265358979;
             $2829 = (+__Z5IKabsd($2828));
             $2830 = $2829 + 3.14159265358979;
             $2831 = (+__Z6IKfmoddd($2830,6.2831853071795898));
             $2832 = $2831 + -3.14159265358979;
             $2833 = $2823 - $2826;
             $2834 = $2826 - $2823;
             $2835 = (+__Z5IKabsd($2832));
             $2836 = $2835 < 9.9999999999999995E-7;
             if (!($2836)) {
              break;
             }
             $2837 = +HEAPF64[$75>>3];
             $2838 = +HEAPF64[$60>>3];
             $2839 = +HEAPF64[$76>>3];
             $2840 = $2839 * 0.076499999999999999;
             $2841 = $2840 + 0.39655000000000001;
             $2842 = $2841 - $2838;
             $2843 = $2837 * 0.32595000000000002;
             $2844 = $2843 + $2842;
             $2845 = (+__Z5IKabsd($2844));
             $2846 = $2845 < 9.9999999999999995E-7;
             if (!($2846)) {
              break;
             }
             $2847 = (+__Z5IKabsd($2833));
             $2848 = $2847 < 9.9999999999999995E-7;
             if (!($2848)) {
              break;
             }
             $2849 = (+__Z5IKabsd($2834));
             $2850 = $2849 < 9.9999999999999995E-7;
             if (!($2850)) {
              break;
             }
             HEAPF64[$24>>3] = 0.0;
             HEAPF64[$23>>3] = -1.0;
             HEAPF64[$22>>3] = 3.14159265358979;
             $2851 = +HEAPF64[$83>>3];
             $2852 = $2851 * $2851;
             $2853 = +HEAPF64[$45>>3];
             $2854 = $2853 * $2853;
             $2855 = $2852 * $2854;
             $2856 = +HEAPF64[$43>>3];
             $2857 = $2856 * $2856;
             $2858 = $2852 * $2857;
             $2859 = $2858 - $2855;
             $2860 = +HEAPF64[$47>>3];
             $2861 = $2860 * $2860;
             $2862 = $2861 + $2859;
             $2863 = $2854 + $2862;
             $2864 = $2851 * 2.0;
             $2865 = $2864 * $2856;
             $2866 = $2853 * $2865;
             $2867 = +HEAPF64[$84>>3];
             $2868 = $2866 * $2867;
             $2869 = $2868 + $2863;
             $2870 = (+__Z5IKabsd($2869));
             $2871 = $2870 < 9.9999999999999995E-7;
             do {
              if (!($2871)) {
               $2872 = (+__Z6IKsignd($2869));
               $2873 = (+__Z5IKabsd($2872));
               $2874 = $2873 < 9.9999999999999995E-7;
               if ($2874) {
                break;
               }
               HEAP8[$6>>0] = 1;
               $3997 = +HEAPF64[$83>>3];
               $3998 = $3997 * $3997;
               $3999 = +HEAPF64[$45>>3];
               $4000 = $3999 * $3999;
               $4001 = +HEAPF64[$47>>3];
               $4002 = +HEAPF64[$76>>3];
               $4003 = $4001 * $4002;
               $4004 = +HEAPF64[$84>>3];
               $4005 = $3999 * $4004;
               $4006 = +HEAPF64[$75>>3];
               $4007 = $4006 * 0.29999999999999999;
               $4008 = $4002 * 0.044999999999999998;
               $4009 = $4006 * 0.044999999999999998;
               $4010 = +HEAPF64[$43>>3];
               $4011 = $3997 * $4010;
               $4012 = $4002 * 0.29999999999999999;
               $4013 = $4001 * $4001;
               $4014 = $4005 * 2.0;
               $4015 = $4014 * $4011;
               $4016 = $4013 + $4015;
               $4017 = $3998 * $4000;
               $4018 = $4016 - $4017;
               $4019 = $4000 + $4018;
               $4020 = $4010 * $4010;
               $4021 = $3998 * $4020;
               $4022 = $4021 + $4019;
               $4023 = (+__Z6IKsignd($4022));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x774,$4023,-1);
               $4024 = HEAP8[$161>>0]|0;
               $4025 = ($4024<<24>>24)==(0);
               if ($4025) {
                break L2360;
               }
               $4026 = $4008 * $4011;
               $4027 = $4005 * $4007;
               $4028 = $4027 + $4026;
               $4029 = +HEAPF64[$47>>3];
               $4030 = $4029 * 0.044999999999999998;
               $4031 = $4028 + $4030;
               $4032 = $4007 * $4011;
               $4033 = $4032 + $4031;
               $4034 = $4009 * $4029;
               $4035 = $4033 - $4034;
               $4036 = $4011 * 0.55000000000000004;
               $4037 = $4036 + $4035;
               $4038 = $4003 * 0.29999999999999999;
               $4039 = $4038 + $4037;
               $4040 = $4005 * 0.55000000000000004;
               $4041 = $4040 + $4039;
               $4042 = $4008 * $4005;
               $4043 = $4042 + $4041;
               $4044 = $4012 * $4005;
               $4045 = $4009 * $4011;
               $4046 = $4045 - $4044;
               $4047 = $4005 * 0.044999999999999998;
               $4048 = $4046 - $4047;
               $4049 = $4003 * 0.044999999999999998;
               $4050 = $4049 + $4048;
               $4051 = $4007 * $4029;
               $4052 = $4050 + $4051;
               $4053 = $4011 * 0.044999999999999998;
               $4054 = $4052 - $4053;
               $4055 = $4012 * $4011;
               $4056 = $4054 - $4055;
               $4057 = $4029 * 0.55000000000000004;
               $4058 = $4057 + $4056;
               $4059 = $4005 * $4009;
               $4060 = $4059 + $4058;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x775,$4043,$4060,1.9999999999999999E-6);
               $4061 = HEAP8[$162>>0]|0;
               $4062 = ($4061<<24>>24)==(0);
               if ($4062) {
                break L2360;
               }
               $4063 = +HEAPF64[$x774>>3];
               $4064 = $4063 * 1.5707963267949001;
               $4065 = $4064 + -1.5707963267949001;
               $4066 = +HEAPF64[$x775>>3];
               $4067 = $4066 + $4065;
               $4068 = (+__Z5IKsind($4067));
               $4069 = (+__Z5IKcosd($4067));
               $4070 = $4067 > 3.14159265358979;
               do {
                if ($4070) {
                 $4071 = $4067 + -6.2831853071795898;
                 $4074 = $4071;
                } else {
                 $4072 = $4067 < -3.14159265358979;
                 if (!($4072)) {
                  $4074 = $4067;
                  break;
                 }
                 $4073 = $4067 + 6.2831853071795898;
                 $4074 = $4073;
                }
               } while(0);
               HEAP8[$4>>0] = 0;
               HEAP8[$5>>0] = -1;
               HEAPF64[$3>>3] = $4074;
               HEAPF64[$163>>3] = $4069;
               HEAPF64[$164>>3] = $4068;
               $4075 = +HEAPF64[$3>>3];
               $4076 = (+__Z5IKsind($4075));
               $4077 = (+__Z5IKcosd($4075));
               $4078 = +HEAPF64[$76>>3];
               $4079 = $4078 * 0.044999999999999998;
               $4080 = +HEAPF64[$75>>3];
               $4081 = $4080 * 0.29999999999999999;
               $4082 = $4080 * 0.044999999999999998;
               $4083 = +HEAPF64[$83>>3];
               $4084 = +HEAPF64[$43>>3];
               $4085 = $4083 * $4084;
               $4086 = +HEAPF64[$45>>3];
               $4087 = +HEAPF64[$84>>3];
               $4088 = $4086 * $4087;
               $4089 = $4077 * $4078;
               $4090 = +HEAPF64[$47>>3];
               $4091 = $4076 * $4090;
               $4092 = $4077 * $4090;
               $4093 = $4077 * 0.089999999999999996;
               $4094 = $4076 * 1.1000000000000001;
               $4095 = $4092 + -0.55000000000000004;
               $4096 = $4095 - $4079;
               $4097 = $4096 - $4081;
               $4098 = $4076 * $4085;
               $4099 = $4098 + $4097;
               $4100 = $4076 * $4088;
               $4101 = $4100 + $4099;
               $4102 = $4077 * 0.185020708697653;
               $4103 = $4076 * -0.099746893695352001;
               $4104 = $4103 - $4102;
               $4105 = $4104 + $4090;
               $4106 = $4078 * -0.31056143580303702;
               $4107 = $4076 * $4106;
               $4108 = $4107 + $4105;
               $4109 = +HEAPF64[$60>>3];
               $4110 = $4109 * 0.138057984353428;
               $4111 = $4076 * $4110;
               $4112 = $4108 + $4111;
               $4113 = $4089 * 0.025409572020248499;
               $4114 = $4113 + $4112;
               $4115 = $4109 * -0.92038656235618999;
               $4116 = $4077 * $4115;
               $4117 = $4116 + $4114;
               $4118 = $4076 * $4079;
               $4119 = $4076 * $4081;
               $4120 = $4118 + $4119;
               $4121 = $4077 * 0.044999999999999998;
               $4122 = $4120 - $4121;
               $4123 = $4076 * 0.55000000000000004;
               $4124 = $4123 + $4122;
               $4125 = $4124 - $4085;
               $4126 = $4125 - $4088;
               $4127 = $4089 * 0.29999999999999999;
               $4128 = $4126 - $4127;
               $4129 = $4077 * $4082;
               $4130 = $4129 + $4128;
               $4131 = $4094 * $4085;
               $4132 = $4131 + -0.21249999999999999;
               $4133 = $4091 * 0.089999999999999996;
               $4134 = $4132 + $4133;
               $4135 = $4092 * 1.1000000000000001;
               $4136 = $4135 + $4134;
               $4137 = $4094 * $4088;
               $4138 = $4137 + $4136;
               $4139 = $4093 * $4085;
               $4140 = $4138 - $4139;
               $4141 = $4140 - $4109;
               $4142 = $4093 * $4088;
               $4143 = $4141 - $4142;
               $4144 = (+__Z5IKabsd($4101));
               $4145 = $4144 > 5.0000000000000004E-6;
               if ($4145) {
                break L2360;
               }
               $4146 = 0.044999999999999998 - $4082;
               $4147 = $4078 * 0.29999999999999999;
               $4148 = $4147 + $4146;
               $4149 = $4148 - $4091;
               $4150 = $4077 * $4085;
               $4151 = $4150 + $4149;
               $4152 = $4077 * $4088;
               $4153 = $4152 + $4151;
               $4154 = (+__Z5IKabsd($4153));
               $4155 = $4154 > 5.0000000000000004E-6;
               if ($4155) {
                break L2360;
               }
               $4156 = (+__Z5IKabsd($4117));
               $4157 = $4156 > 5.0000000000000004E-6;
               if ($4157) {
                break L2360;
               }
               $4158 = (+__Z5IKabsd($4130));
               $4159 = $4158 > 5.0000000000000004E-6;
               if ($4159) {
                break L2360;
               }
               $4160 = (+__Z5IKabsd($4143));
               $4161 = $4160 > 5.0000000000000004E-6;
               if ($4161) {
                break L2360;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               break L2360;
              }
             } while(0);
             HEAPF64[$24>>3] = 0.0;
             HEAPF64[$23>>3] = -1.0;
             HEAPF64[$22>>3] = 3.14159265358979;
             $2875 = +HEAPF64[$45>>3];
             $2876 = +HEAPF64[$84>>3];
             $2877 = $2875 * $2876;
             $2878 = +HEAPF64[$76>>3];
             $2879 = $2878 * 0.29999999999999999;
             $2880 = +HEAPF64[$83>>3];
             $2881 = +HEAPF64[$43>>3];
             $2882 = $2880 * $2881;
             $2883 = $2878 * 6.6666666666666696;
             $2884 = +HEAPF64[$47>>3];
             $2885 = $2878 * $2884;
             $2886 = +HEAPF64[$75>>3];
             $2887 = $2884 * $2886;
             $2888 = $2882 * 0.044999999999999998;
             $2889 = -$2877;
             $2890 = $2883 * $2889;
             $2891 = $2887 * 6.6666666666666696;
             $2892 = $2890 - $2891;
             $2893 = $2884 * 12.2222222222222;
             $2894 = $2892 - $2893;
             $2895 = $2883 * $2882;
             $2896 = $2894 - $2895;
             $2897 = $2896 - $2877;
             $2898 = $2897 - $2882;
             $2899 = $2882 * $2886;
             $2900 = $2899 + $2898;
             $2901 = $2877 * $2886;
             $2902 = $2901 + $2900;
             $2903 = $2902 - $2885;
             $2904 = (+__Z5IKabsd($2903));
             $2905 = $2904 < 9.9999999999999995E-7;
             do {
              if (!($2905)) {
               $2906 = $2884 * 0.55000000000000004;
               $2907 = $2879 * $2889;
               $2908 = $2907 - $2906;
               $2909 = $2879 * $2882;
               $2910 = $2908 - $2909;
               $2911 = $2877 * 0.044999999999999998;
               $2912 = $2910 - $2911;
               $2913 = $2886 * $2888;
               $2914 = $2913 + $2912;
               $2915 = $2914 - $2888;
               $2916 = $2885 * 0.044999999999999998;
               $2917 = $2915 - $2916;
               $2918 = $2886 * 0.044999999999999998;
               $2919 = $2877 * $2918;
               $2920 = $2919 + $2917;
               $2921 = $2887 * 0.29999999999999999;
               $2922 = $2920 - $2921;
               $2923 = (+__Z6IKsignd($2922));
               $2924 = (+__Z5IKabsd($2923));
               $2925 = $2924 < 9.9999999999999995E-7;
               if ($2925) {
                break;
               }
               HEAP8[$6>>0] = 1;
               $3826 = +HEAPF64[$83>>3];
               $3827 = $3826 * $3826;
               $3828 = +HEAPF64[$45>>3];
               $3829 = $3828 * $3828;
               $3830 = +HEAPF64[$75>>3];
               $3831 = $3830 * $3830;
               $3832 = +HEAPF64[$84>>3];
               $3833 = $3828 * $3832;
               $3834 = +HEAPF64[$76>>3];
               $3835 = $3834 * 0.29999999999999999;
               $3836 = $3830 * 0.044999999999999998;
               $3837 = +HEAPF64[$43>>3];
               $3838 = $3826 * $3837;
               $3839 = $3830 * $3834;
               $3840 = +HEAPF64[$47>>3];
               $3841 = $3831 * 0.027;
               $3842 = $3841 + -0.038249999999999999;
               $3843 = $3830 * 0.01125;
               $3844 = $3843 + $3842;
               $3845 = -$3833;
               $3846 = $3840 * $3845;
               $3847 = $3844 + $3846;
               $3848 = $3834 * 0.16702500000000001;
               $3849 = $3847 - $3848;
               $3850 = $3839 * 0.087974999999999997;
               $3851 = $3849 - $3850;
               $3852 = $3838 * $3840;
               $3853 = $3851 - $3852;
               $3854 = $3834 * 0.049500000000000002;
               $3855 = -0.30452499999999999 - $3854;
               $3856 = $3837 * $3837;
               $3857 = $3827 * $3856;
               $3858 = $3855 + $3857;
               $3859 = $3827 * $3829;
               $3860 = $3858 - $3859;
               $3861 = $3833 * 2.0;
               $3862 = $3861 * $3838;
               $3863 = $3862 + $3860;
               $3864 = $3831 * 0.087974999999999997;
               $3865 = $3863 - $3864;
               $3866 = $3829 + $3865;
               $3867 = $3839 * 0.027;
               $3868 = $3866 - $3867;
               $3869 = $3830 * 0.33000000000000002;
               $3870 = $3868 - $3869;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x751,$3853,$3870,1.9999999999999999E-6);
               $3871 = HEAP8[$157>>0]|0;
               $3872 = ($3871<<24>>24)==(0);
               if ($3872) {
                break L2360;
               }
               $3873 = +HEAPF64[$47>>3];
               $3874 = $3873 * 0.55000000000000004;
               $3875 = +HEAPF64[$75>>3];
               $3876 = $3875 * -0.29999999999999999;
               $3877 = $3873 * $3876;
               $3878 = $3877 - $3874;
               $3879 = $3836 * $3833;
               $3880 = $3879 + $3878;
               $3881 = $3835 * $3845;
               $3882 = $3881 + $3880;
               $3883 = $3835 * $3838;
               $3884 = $3882 - $3883;
               $3885 = $3873 * -0.044999999999999998;
               $3886 = +HEAPF64[$76>>3];
               $3887 = $3885 * $3886;
               $3888 = $3887 + $3884;
               $3889 = $3836 * $3838;
               $3890 = $3889 + $3888;
               $3891 = $3838 * 0.044999999999999998;
               $3892 = $3890 - $3891;
               $3893 = $3833 * 0.044999999999999998;
               $3894 = $3892 - $3893;
               $3895 = (+__Z6IKsignd($3894));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x752,$3895,-1);
               $3896 = HEAP8[$158>>0]|0;
               $3897 = ($3896<<24>>24)==(0);
               if ($3897) {
                break L2360;
               }
               $3898 = +HEAPF64[$x751>>3];
               $3899 = $3898 + -1.5707963267949001;
               $3900 = +HEAPF64[$x752>>3];
               $3901 = $3900 * 1.5707963267949001;
               $3902 = $3899 + $3901;
               $3903 = (+__Z5IKsind($3902));
               $3904 = (+__Z5IKcosd($3902));
               $3905 = $3902 > 3.14159265358979;
               do {
                if ($3905) {
                 $3906 = $3902 + -6.2831853071795898;
                 $3909 = $3906;
                } else {
                 $3907 = $3902 < -3.14159265358979;
                 if (!($3907)) {
                  $3909 = $3902;
                  break;
                 }
                 $3908 = $3902 + 6.2831853071795898;
                 $3909 = $3908;
                }
               } while(0);
               HEAP8[$4>>0] = 0;
               HEAP8[$5>>0] = -1;
               HEAPF64[$3>>3] = $3909;
               HEAPF64[$159>>3] = $3904;
               HEAPF64[$160>>3] = $3903;
               $3910 = +HEAPF64[$3>>3];
               $3911 = (+__Z5IKsind($3910));
               $3912 = (+__Z5IKcosd($3910));
               $3913 = +HEAPF64[$76>>3];
               $3914 = $3913 * 0.044999999999999998;
               $3915 = +HEAPF64[$75>>3];
               $3916 = $3915 * 0.29999999999999999;
               $3917 = $3915 * 0.044999999999999998;
               $3918 = +HEAPF64[$83>>3];
               $3919 = +HEAPF64[$43>>3];
               $3920 = $3918 * $3919;
               $3921 = +HEAPF64[$45>>3];
               $3922 = +HEAPF64[$84>>3];
               $3923 = $3921 * $3922;
               $3924 = $3912 * $3913;
               $3925 = +HEAPF64[$47>>3];
               $3926 = $3911 * $3925;
               $3927 = $3912 * $3925;
               $3928 = $3912 * 0.089999999999999996;
               $3929 = $3911 * 1.1000000000000001;
               $3930 = $3927 + -0.55000000000000004;
               $3931 = $3911 * $3923;
               $3932 = $3931 + $3930;
               $3933 = $3911 * $3920;
               $3934 = $3933 + $3932;
               $3935 = $3934 - $3916;
               $3936 = $3935 - $3914;
               $3937 = +HEAPF64[$60>>3];
               $3938 = $3937 * -0.92038656235618999;
               $3939 = $3912 * $3938;
               $3940 = $3913 * -0.31056143580303702;
               $3941 = $3911 * $3940;
               $3942 = $3941 + $3939;
               $3943 = $3912 * 0.185020708697653;
               $3944 = $3942 - $3943;
               $3945 = $3925 + $3944;
               $3946 = $3911 * 0.099746893695352001;
               $3947 = $3945 - $3946;
               $3948 = $3924 * 0.025409572020248499;
               $3949 = $3948 + $3947;
               $3950 = $3937 * 0.138057984353428;
               $3951 = $3911 * $3950;
               $3952 = $3951 + $3949;
               $3953 = $3911 * 0.55000000000000004;
               $3954 = $3924 * 0.29999999999999999;
               $3955 = $3953 - $3954;
               $3956 = $3955 - $3923;
               $3957 = $3956 - $3920;
               $3958 = $3912 * 0.044999999999999998;
               $3959 = $3957 - $3958;
               $3960 = $3911 * $3916;
               $3961 = $3960 + $3959;
               $3962 = $3911 * $3914;
               $3963 = $3962 + $3961;
               $3964 = $3912 * $3917;
               $3965 = $3964 + $3963;
               $3966 = $3928 * $3920;
               $3967 = -0.21249999999999999 - $3966;
               $3968 = $3926 * 0.089999999999999996;
               $3969 = $3967 + $3968;
               $3970 = $3927 * 1.1000000000000001;
               $3971 = $3970 + $3969;
               $3972 = $3929 * $3923;
               $3973 = $3972 + $3971;
               $3974 = $3929 * $3920;
               $3975 = $3974 + $3973;
               $3976 = $3975 - $3937;
               $3977 = $3928 * $3923;
               $3978 = $3976 - $3977;
               $3979 = (+__Z5IKabsd($3936));
               $3980 = $3979 > 5.0000000000000004E-6;
               if ($3980) {
                break L2360;
               }
               $3981 = 0.044999999999999998 - $3926;
               $3982 = $3913 * 0.29999999999999999;
               $3983 = $3982 + $3981;
               $3984 = $3983 - $3917;
               $3985 = $3912 * $3920;
               $3986 = $3985 + $3984;
               $3987 = $3912 * $3923;
               $3988 = $3987 + $3986;
               $3989 = (+__Z5IKabsd($3988));
               $3990 = $3989 > 5.0000000000000004E-6;
               if ($3990) {
                break L2360;
               }
               $3991 = (+__Z5IKabsd($3952));
               $3992 = $3991 > 5.0000000000000004E-6;
               if ($3992) {
                break L2360;
               }
               $3993 = (+__Z5IKabsd($3965));
               $3994 = $3993 > 5.0000000000000004E-6;
               if ($3994) {
                break L2360;
               }
               $3995 = (+__Z5IKabsd($3978));
               $3996 = $3995 > 5.0000000000000004E-6;
               if ($3996) {
                break L2360;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               break L2360;
              }
             } while(0);
             HEAPF64[$24>>3] = 0.0;
             HEAPF64[$23>>3] = -1.0;
             HEAPF64[$22>>3] = 3.14159265358979;
             $2926 = +HEAPF64[$45>>3];
             $2927 = +HEAPF64[$84>>3];
             $2928 = $2926 * $2927;
             $2929 = +HEAPF64[$83>>3];
             $2930 = +HEAPF64[$43>>3];
             $2931 = $2929 * $2930;
             $2932 = +HEAPF64[$60>>3];
             $2933 = +HEAPF64[$47>>3];
             $2934 = $2932 * $2933;
             $2935 = $2932 * 0.92038656235618999;
             $2936 = +HEAPF64[$76>>3];
             $2937 = $2933 * $2936;
             $2938 = $2932 * 36.222041112016697;
             $2939 = $2936 * 0.025409572020248499;
             $2940 = $2934 * 5.4333061668024998;
             $2941 = $2937 * 12.2222222222222;
             $2942 = $2941 - $2940;
             $2943 = $2931 * 7.2815358145431501;
             $2944 = $2942 - $2943;
             $2945 = $2928 * 7.2815358145431501;
             $2946 = $2944 - $2945;
             $2947 = $2933 * 3.92556370551481;
             $2948 = $2947 + $2946;
             $2949 = -$2931;
             $2950 = $2938 * $2949;
             $2951 = $2950 + $2948;
             $2952 = -$2928;
             $2953 = $2938 * $2952;
             $2954 = $2953 + $2951;
             $2955 = $2931 * $2936;
             $2956 = $2955 + $2954;
             $2957 = $2928 * $2936;
             $2958 = $2957 + $2956;
             $2959 = (+__Z5IKabsd($2958));
             $2960 = $2959 < 9.9999999999999995E-7;
             do {
              if (!($2960)) {
               $2961 = $2937 * 0.31056143580303702;
               $2962 = $2928 * $2939;
               $2963 = $2961 + $2962;
               $2964 = $2931 * $2939;
               $2965 = $2964 + $2963;
               $2966 = $2933 * 0.099746893695352001;
               $2967 = $2966 + $2965;
               $2968 = $2935 * $2949;
               $2969 = $2968 + $2967;
               $2970 = $2934 * 0.138057984353428;
               $2971 = $2969 - $2970;
               $2972 = $2935 * $2952;
               $2973 = $2972 + $2971;
               $2974 = $2928 * 0.185020708697653;
               $2975 = $2973 - $2974;
               $2976 = $2931 * 0.185020708697653;
               $2977 = $2975 - $2976;
               $2978 = (+__Z6IKsignd($2977));
               $2979 = (+__Z5IKabsd($2978));
               $2980 = $2979 < 9.9999999999999995E-7;
               if ($2980) {
                break;
               }
               HEAP8[$6>>0] = 1;
               $3648 = +HEAPF64[$75>>3];
               $3649 = $3648 * $3648;
               $3650 = +HEAPF64[$76>>3];
               $3651 = $3648 * $3650;
               $3652 = +HEAPF64[$83>>3];
               $3653 = +HEAPF64[$43>>3];
               $3654 = $3652 * $3653;
               $3655 = +HEAPF64[$60>>3];
               $3656 = $3655 * 0.92038656235618999;
               $3657 = $3650 * 0.025409572020248499;
               $3658 = +HEAPF64[$45>>3];
               $3659 = +HEAPF64[$84>>3];
               $3660 = $3658 * $3659;
               $3661 = $3655 * 0.041417395306028497;
               $3662 = +HEAPF64[$47>>3];
               $3663 = $3651 * 0.0076228716060745497;
               $3664 = $3663 + -0.10061795904279799;
               $3665 = $3648 * -0.27611596870685701;
               $3666 = $3665 * $3655;
               $3667 = $3664 + $3666;
               $3668 = $3662 * $3662;
               $3669 = $3667 + $3668;
               $3670 = $3655 * 0.50621260929590395;
               $3671 = $3669 - $3670;
               $3672 = $3650 * 0.00564933271974229;
               $3673 = $3672 + $3671;
               $3674 = $3649 * 0.00114343074091118;
               $3675 = $3673 - $3674;
               $3676 = $3650 * $3661;
               $3677 = $3675 - $3676;
               $3678 = $3648 * 0.055506212609295898;
               $3679 = $3677 - $3678;
               $3680 = $3650 * 0.175297399907961;
               $3681 = $3680 + 0.068836056143580293;
               $3682 = $3648 * $3661;
               $3683 = $3681 - $3682;
               $3684 = -$3654;
               $3685 = $3662 * $3684;
               $3686 = $3683 + $3685;
               $3687 = $3651 * 0.093168430740911204;
               $3688 = $3687 + $3686;
               $3689 = $3660 * $3662;
               $3690 = $3688 - $3689;
               $3691 = $3655 * -0.0062126092959042803;
               $3692 = $3650 * $3691;
               $3693 = $3692 + $3690;
               $3694 = $3649 * 0.0139752646111367;
               $3695 = $3693 - $3694;
               $3696 = $3655 * 0.075931891394385595;
               $3697 = $3695 - $3696;
               $3698 = $3648 * 0.029924068108605598;
               $3699 = $3698 + $3697;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x728,$3679,$3699,1.9999999999999999E-6);
               $3700 = HEAP8[$153>>0]|0;
               $3701 = ($3700<<24>>24)==(0);
               if ($3701) {
                break L2360;
               }
               $3702 = +HEAPF64[$60>>3];
               $3703 = $3702 * -0.138057984353428;
               $3704 = +HEAPF64[$47>>3];
               $3705 = $3703 * $3704;
               $3706 = $3656 * $3660;
               $3707 = $3705 - $3706;
               $3708 = $3704 * 0.31056143580303702;
               $3709 = +HEAPF64[$76>>3];
               $3710 = $3708 * $3709;
               $3711 = $3707 + $3710;
               $3712 = $3656 * $3684;
               $3713 = $3712 + $3711;
               $3714 = $3657 * $3654;
               $3715 = $3714 + $3713;
               $3716 = $3704 * 0.099746893695352001;
               $3717 = $3716 + $3715;
               $3718 = $3654 * 0.185020708697653;
               $3719 = $3717 - $3718;
               $3720 = $3660 * 0.185020708697653;
               $3721 = $3719 - $3720;
               $3722 = $3657 * $3660;
               $3723 = $3722 + $3721;
               $3724 = (+__Z6IKsignd($3723));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x729,$3724,-1);
               $3725 = HEAP8[$154>>0]|0;
               $3726 = ($3725<<24>>24)==(0);
               if ($3726) {
                break L2360;
               }
               $3727 = +HEAPF64[$x728>>3];
               $3728 = $3727 + -1.5707963267949001;
               $3729 = +HEAPF64[$x729>>3];
               $3730 = $3729 * 1.5707963267949001;
               $3731 = $3728 + $3730;
               $3732 = (+__Z5IKsind($3731));
               $3733 = (+__Z5IKcosd($3731));
               $3734 = $3731 > 3.14159265358979;
               do {
                if ($3734) {
                 $3735 = $3731 + -6.2831853071795898;
                 $3738 = $3735;
                } else {
                 $3736 = $3731 < -3.14159265358979;
                 if (!($3736)) {
                  $3738 = $3731;
                  break;
                 }
                 $3737 = $3731 + 6.2831853071795898;
                 $3738 = $3737;
                }
               } while(0);
               HEAP8[$4>>0] = 0;
               HEAP8[$5>>0] = -1;
               HEAPF64[$3>>3] = $3738;
               HEAPF64[$155>>3] = $3733;
               HEAPF64[$156>>3] = $3732;
               $3739 = +HEAPF64[$3>>3];
               $3740 = (+__Z5IKsind($3739));
               $3741 = (+__Z5IKcosd($3739));
               $3742 = +HEAPF64[$76>>3];
               $3743 = $3742 * 0.044999999999999998;
               $3744 = +HEAPF64[$75>>3];
               $3745 = $3744 * 0.29999999999999999;
               $3746 = $3744 * 0.044999999999999998;
               $3747 = +HEAPF64[$83>>3];
               $3748 = +HEAPF64[$43>>3];
               $3749 = $3747 * $3748;
               $3750 = +HEAPF64[$45>>3];
               $3751 = +HEAPF64[$84>>3];
               $3752 = $3750 * $3751;
               $3753 = $3741 * $3742;
               $3754 = +HEAPF64[$47>>3];
               $3755 = $3740 * $3754;
               $3756 = $3741 * $3754;
               $3757 = $3741 * 0.089999999999999996;
               $3758 = $3740 * 1.1000000000000001;
               $3759 = -0.55000000000000004 - $3745;
               $3760 = $3759 - $3743;
               $3761 = $3760 + $3756;
               $3762 = $3740 * $3749;
               $3763 = $3762 + $3761;
               $3764 = $3740 * $3752;
               $3765 = $3764 + $3763;
               $3766 = +HEAPF64[$60>>3];
               $3767 = $3766 * 0.138057984353428;
               $3768 = $3740 * $3767;
               $3769 = $3753 * 0.025409572020248499;
               $3770 = $3769 + $3768;
               $3771 = $3740 * 0.099746893695352001;
               $3772 = $3770 - $3771;
               $3773 = $3742 * -0.31056143580303702;
               $3774 = $3740 * $3773;
               $3775 = $3774 + $3772;
               $3776 = $3754 + $3775;
               $3777 = $3741 * 0.185020708697653;
               $3778 = $3776 - $3777;
               $3779 = $3766 * -0.92038656235618999;
               $3780 = $3741 * $3779;
               $3781 = $3780 + $3778;
               $3782 = $3741 * $3746;
               $3783 = $3740 * 0.55000000000000004;
               $3784 = $3783 + $3782;
               $3785 = $3741 * 0.044999999999999998;
               $3786 = $3784 - $3785;
               $3787 = $3786 - $3752;
               $3788 = $3787 - $3749;
               $3789 = $3753 * 0.29999999999999999;
               $3790 = $3788 - $3789;
               $3791 = $3740 * $3743;
               $3792 = $3791 + $3790;
               $3793 = $3740 * $3745;
               $3794 = $3793 + $3792;
               $3795 = $3756 * 1.1000000000000001;
               $3796 = $3795 + -0.21249999999999999;
               $3797 = $3755 * 0.089999999999999996;
               $3798 = $3797 + $3796;
               $3799 = $3798 - $3766;
               $3800 = $3757 * $3749;
               $3801 = $3799 - $3800;
               $3802 = $3757 * $3752;
               $3803 = $3801 - $3802;
               $3804 = $3758 * $3749;
               $3805 = $3804 + $3803;
               $3806 = $3758 * $3752;
               $3807 = $3806 + $3805;
               $3808 = (+__Z5IKabsd($3765));
               $3809 = $3808 > 5.0000000000000004E-6;
               if ($3809) {
                break L2360;
               }
               $3810 = $3741 * $3752;
               $3811 = $3810 + 0.044999999999999998;
               $3812 = $3741 * $3749;
               $3813 = $3812 + $3811;
               $3814 = $3813 - $3755;
               $3815 = $3814 - $3746;
               $3816 = $3742 * 0.29999999999999999;
               $3817 = $3816 + $3815;
               $3818 = (+__Z5IKabsd($3817));
               $3819 = $3818 > 5.0000000000000004E-6;
               if ($3819) {
                break L2360;
               }
               $3820 = (+__Z5IKabsd($3781));
               $3821 = $3820 > 5.0000000000000004E-6;
               if ($3821) {
                break L2360;
               }
               $3822 = (+__Z5IKabsd($3794));
               $3823 = $3822 > 5.0000000000000004E-6;
               if ($3823) {
                break L2360;
               }
               $3824 = (+__Z5IKabsd($3807));
               $3825 = $3824 > 5.0000000000000004E-6;
               if ($3825) {
                break L2360;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               break L2360;
              }
             } while(0);
             $2981 = +HEAPF64[$43>>3];
             $2982 = +HEAPF64[$84>>3];
             $2983 = $2981 * $2982;
             $2984 = +HEAPF64[$83>>3];
             $2985 = +HEAPF64[$45>>3];
             $2986 = $2984 * $2985;
             $2987 = +HEAPF64[$47>>3];
             $2988 = (+__Z5IKabsd($2987));
             $2989 = +HEAPF64[$7>>3];
             $2990 = $2989 + 3.14159265358979;
             $2991 = (+__Z6IKfmoddd($2990,6.2831853071795898));
             $2992 = $2991 + -3.14159265358979;
             $2993 = (+__Z5IKabsd($2992));
             $2994 = $2988 + $2993;
             $2995 = $2983 - $2986;
             $2996 = $2986 - $2983;
             $2997 = (+__Z5IKabsd($2994));
             $2998 = $2997 < 9.9999999999999995E-7;
             if (!($2998)) {
              break;
             }
             $2999 = +HEAPF64[$60>>3];
             $3000 = 0.72250000000000003 - $2999;
             $3001 = (+__Z5IKabsd($3000));
             $3002 = $3001 < 9.9999999999999995E-7;
             if (!($3002)) {
              break;
             }
             $3003 = (+__Z5IKabsd($2995));
             $3004 = $3003 < 9.9999999999999995E-7;
             if (!($3004)) {
              break;
             }
             $3005 = (+__Z5IKabsd($2996));
             $3006 = $3005 < 9.9999999999999995E-7;
             if (!($3006)) {
              break;
             }
             $3007 = -$2985;
             HEAPF64[$24>>3] = 0.0;
             HEAPF64[$23>>3] = -1.0;
             HEAPF64[$22>>3] = 3.14159265358979;
             HEAPF64[$47>>3] = 0.0;
             HEAPF64[$7>>3] = 0.0;
             HEAPF64[$76>>3] = 0.0;
             HEAPF64[$75>>3] = 1.0;
             $3008 = +HEAPF64[$43>>3];
             $3009 = $3008 * $3008;
             $3010 = +HEAPF64[$45>>3];
             $3011 = $3010 * $3010;
             $3012 = $3009 + $3011;
             HEAPF64[$60>>3] = $3012;
             $3013 = +HEAPF64[$43>>3];
             $3014 = +HEAPF64[$26>>3];
             $3015 = $3013 * $3014;
             $3016 = +HEAPF64[$45>>3];
             $3017 = +HEAPF64[$32>>3];
             $3018 = $3016 * $3017;
             $3019 = $3015 + $3018;
             HEAPF64[$61>>3] = $3019;
             $3020 = +HEAPF64[$43>>3];
             $3021 = +HEAPF64[$28>>3];
             $3022 = $3020 * $3021;
             $3023 = +HEAPF64[$45>>3];
             $3024 = +HEAPF64[$34>>3];
             $3025 = $3023 * $3024;
             $3026 = $3022 + $3025;
             HEAPF64[$62>>3] = $3026;
             $3027 = +HEAPF64[$43>>3];
             $3028 = +HEAPF64[$30>>3];
             $3029 = $3027 * $3028;
             $3030 = +HEAPF64[$45>>3];
             $3031 = +HEAPF64[$36>>3];
             $3032 = $3030 * $3031;
             $3033 = $3029 + $3032;
             HEAPF64[$63>>3] = $3033;
             $3034 = +HEAPF64[$38>>3];
             $3035 = $3034 * $3007;
             HEAPF64[$64>>3] = $3035;
             $3036 = +HEAPF64[$43>>3];
             $3037 = +HEAPF64[$38>>3];
             $3038 = $3036 * $3037;
             HEAPF64[$65>>3] = $3038;
             $3039 = +HEAPF64[$40>>3];
             $3040 = $3039 * $3007;
             HEAPF64[$67>>3] = $3040;
             $3041 = +HEAPF64[$43>>3];
             $3042 = +HEAPF64[$40>>3];
             $3043 = $3041 * $3042;
             HEAPF64[$68>>3] = $3043;
             $3044 = +HEAPF64[$42>>3];
             $3045 = $3044 * $3007;
             HEAPF64[$70>>3] = $3045;
             $3046 = +HEAPF64[$43>>3];
             $3047 = +HEAPF64[$42>>3];
             $3048 = $3046 * $3047;
             HEAPF64[$71>>3] = $3048;
             $3049 = +HEAPF64[$45>>3];
             $3050 = +HEAPF64[$84>>3];
             $3051 = $3049 * $3050;
             $3052 = +HEAPF64[$83>>3];
             $3053 = +HEAPF64[$43>>3];
             $3054 = $3052 * $3053;
             $3055 = -$3054;
             $3056 = $3055 - $3051;
             $3057 = (+__Z5IKabsd($3056));
             $3058 = $3057 < 9.9999999999999995E-7;
             if (!($3058)) {
              HEAP8[$6>>0] = 1;
              $3546 = +HEAPF64[$45>>3];
              $3547 = $3546 * $3546;
              $3548 = +HEAPF64[$83>>3];
              $3549 = $3548 * $3548;
              $3550 = +HEAPF64[$43>>3];
              $3551 = $3548 * $3550;
              $3552 = +HEAPF64[$84>>3];
              $3553 = $3546 * $3552;
              $3554 = $3547 * 4400.0;
              $3555 = $3553 * 306.0;
              $3556 = $3551 * -306.0;
              $3557 = $3556 - $3555;
              __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x713,$3557,-1);
              $3558 = HEAP8[$150>>0]|0;
              $3559 = ($3558<<24>>24)==(0);
              if ($3559) {
               break;
              }
              $3560 = $3551 * 1.1764705882352899;
              $3561 = $3553 * 1.1764705882352899;
              $3562 = $3560 + $3561;
              $3563 = (+__Z5IKabsd($3562));
              $3564 = $3563 < 1.9999999999999999E-6;
              do {
               if ($3564) {
                $3565 = +HEAPF64[$x713>>3];
                $3566 = $3549 * -4400.0;
                $3567 = +HEAPF64[$43>>3];
                $3568 = $3567 * $3567;
                $3569 = $3566 * $3568;
                $3570 = $3569 + 3179.0;
                $3571 = $3549 * $3554;
                $3572 = $3571 + $3570;
                $3573 = $3572 - $3554;
                $3574 = $3551 * -8800.0;
                $3575 = $3574 * $3553;
                $3576 = $3575 + $3573;
                $3577 = $3565 * $3576;
                $3578 = (+__Z5IKabsd($3577));
                $3579 = $3578 < 1.9999999999999999E-6;
                if (!($3579)) {
                 break;
                }
                $3580 = (+__Z5IKsqrd($3562));
                $3581 = (+__Z5IKsqrd($3577));
                $3582 = $3580 + $3581;
                $3583 = $3582 + -1.0;
                $3584 = (+__Z5IKabsd($3583));
                $3585 = !($3584 <= 1.9999999999999999E-6);
                if (!($3585)) {
                 break L2360;
                }
               }
              } while(0);
              $3586 = +HEAPF64[$x713>>3];
              $3587 = $3549 * -4400.0;
              $3588 = +HEAPF64[$43>>3];
              $3589 = $3588 * $3588;
              $3590 = $3587 * $3589;
              $3591 = $3590 + 3179.0;
              $3592 = $3549 * $3554;
              $3593 = $3592 + $3591;
              $3594 = $3593 - $3554;
              $3595 = $3551 * -8800.0;
              $3596 = $3595 * $3553;
              $3597 = $3596 + $3594;
              $3598 = $3586 * $3597;
              $3599 = (+__Z7IKatan2dd($3562,$3598));
              $3600 = (+__Z5IKsind($3599));
              $3601 = (+__Z5IKcosd($3599));
              $3602 = $3599 > 3.14159265358979;
              do {
               if ($3602) {
                $3603 = $3599 + -6.2831853071795898;
                $3606 = $3603;
               } else {
                $3604 = $3599 < -3.14159265358979;
                if (!($3604)) {
                 $3606 = $3599;
                 break;
                }
                $3605 = $3599 + 6.2831853071795898;
                $3606 = $3605;
               }
              } while(0);
              HEAP8[$4>>0] = 0;
              HEAP8[$5>>0] = -1;
              HEAPF64[$3>>3] = $3606;
              HEAPF64[$151>>3] = $3601;
              HEAPF64[$152>>3] = $3600;
              $3607 = +HEAPF64[$3>>3];
              $3608 = (+__Z5IKcosd($3607));
              $3609 = (+__Z5IKsind($3607));
              $3610 = +HEAPF64[$45>>3];
              $3611 = +HEAPF64[$84>>3];
              $3612 = $3610 * $3611;
              $3613 = +HEAPF64[$83>>3];
              $3614 = +HEAPF64[$43>>3];
              $3615 = $3613 * $3614;
              $3616 = $3608 * 0.089999999999999996;
              $3617 = $3609 * $3612;
              $3618 = $3608 * -0.84999999999999998;
              $3619 = $3609 * $3615;
              $3620 = $3619 + -0.84999999999999998;
              $3621 = $3617 + $3620;
              $3622 = -$3612;
              $3623 = $3622 - $3615;
              $3624 = $3609 * 0.84999999999999998;
              $3625 = $3624 + $3623;
              $3626 = $3617 * 1.1000000000000001;
              $3627 = $3626 + -0.93500000000000005;
              $3628 = $3609 * 1.1000000000000001;
              $3629 = $3628 * $3615;
              $3630 = $3627 + $3629;
              $3631 = $3616 * $3615;
              $3632 = $3630 - $3631;
              $3633 = $3616 * $3622;
              $3634 = $3633 + $3632;
              $3635 = (+__Z5IKabsd($3618));
              $3636 = $3635 > 5.0000000000000004E-6;
              if ($3636) {
               break;
              }
              $3637 = $3608 * $3615;
              $3638 = $3608 * $3612;
              $3639 = $3638 + $3637;
              $3640 = (+__Z5IKabsd($3639));
              $3641 = $3640 > 5.0000000000000004E-6;
              if ($3641) {
               break;
              }
              $3642 = (+__Z5IKabsd($3621));
              $3643 = $3642 > 5.0000000000000004E-6;
              if ($3643) {
               break;
              }
              $3644 = (+__Z5IKabsd($3625));
              $3645 = $3644 > 5.0000000000000004E-6;
              if ($3645) {
               break;
              }
              $3646 = (+__Z5IKabsd($3634));
              $3647 = $3646 > 5.0000000000000004E-6;
              if ($3647) {
               break;
              }
              __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
              break;
             }
             $3059 = (+__Z5IKabsd($3053));
             $3060 = (+__Z5IKabsd($3049));
             $3061 = $3059 + $3060;
             $3062 = (+__Z5IKabsd($3061));
             $3063 = $3062 < 9.9999999999999995E-7;
             do {
              if ($3063) {
               $3064 = (+__Z5IKabsd(0.72250000000000003));
               $3065 = $3064 < 9.9999999999999995E-7;
               if (!($3065)) {
                break;
               }
               $3066 = (+__Z5IKabsd(-0.84999999999999998));
               $3067 = $3066 < 9.9999999999999995E-7;
               if (!($3067)) {
                break;
               }
               $3068 = (+__Z5IKabsd(0.0));
               $3069 = $3068 < 9.9999999999999995E-7;
               if (!($3069)) {
                break;
               }
               $3070 = (+__Z5IKabsd(-0.93500000000000005));
               $3071 = $3070 < 9.9999999999999995E-7;
               if (!($3071)) {
                break;
               }
               HEAPF64[$24>>3] = 0.0;
               HEAPF64[$23>>3] = -1.0;
               HEAPF64[$22>>3] = 3.14159265358979;
               HEAPF64[$47>>3] = 0.0;
               HEAPF64[$7>>3] = 0.0;
               HEAPF64[$76>>3] = 0.0;
               HEAPF64[$75>>3] = 1.0;
               HEAPF64[$64>>3] = 0.0;
               HEAPF64[$65>>3] = 0.0;
               HEAPF64[$67>>3] = 0.0;
               HEAPF64[$68>>3] = 0.0;
               HEAPF64[$70>>3] = 0.0;
               HEAPF64[$71>>3] = 0.0;
               HEAPF64[$66>>3] = 0.0;
               HEAPF64[$69>>3] = 0.0;
               HEAPF64[$72>>3] = 0.0;
               $3072 = (+__Z5IKabsd(1.0));
               $3073 = $3072 < 1.0E-8;
               ;HEAP32[$43>>2]=0|0;HEAP32[$43+4>>2]=0|0;HEAP32[$43+8>>2]=0|0;HEAP32[$43+12>>2]=0|0;
               ;HEAP32[$45>>2]=0|0;HEAP32[$45+4>>2]=0|0;HEAP32[$45+8>>2]=0|0;HEAP32[$45+12>>2]=0|0;
               ;HEAP32[$63>>2]=0|0;HEAP32[$63+4>>2]=0|0;HEAP32[$63+8>>2]=0|0;HEAP32[$63+12>>2]=0|0;
               if ($3073) {
                break L2360;
               }
               HEAPF64[$op123>>3] = 1.0;
               HEAPF64[$125>>3] = 0.0;
               HEAPF64[$126>>3] = -1.0;
               __ZN8IKSolver10polyroots2EPdS0_Ri($op123,$zeror124,$numroots125);
               $3074 = HEAP32[$numroots125>>2]|0;
               $3075 = ($3074|0)>(0);
               if (!($3075)) {
                HEAP16[$j1valid134>>1] = 257;
                HEAP8[$6>>0] = 2;
                break L2360;
               }
               $3076 = HEAP32[$numroots125>>2]|0;
               $3077 = ($3076|0)>(1);
               $numsolutions130$01805 = 0;
               while(1) {
                $3078 = (($zeror124) + ($numsolutions130$01805<<3)|0);
                $3079 = +HEAPF64[$3078>>3];
                $3080 = (+Math_atan((+$3079)));
                $3081 = $3080 * 2.0;
                $3082 = $3081 + 6.2831853071795898;
                $3083 = $3081 > 3.14159265358979;
                $3084 = (($j1array126) + ($numsolutions130$01805<<3)|0);
                HEAPF64[$3084>>3] = $3081;
                do {
                 if ($3083) {
                  $3085 = $3081 + -6.2831853071795898;
                  HEAPF64[$3084>>3] = $3085;
                 } else {
                  $3086 = $3081 < -3.14159265358979;
                  if (!($3086)) {
                   break;
                  }
                  HEAPF64[$3084>>3] = $3082;
                 }
                } while(0);
                $3087 = +HEAPF64[$3084>>3];
                $3088 = (+__Z5IKsind($3087));
                $3089 = (($sj1array128) + ($numsolutions130$01805<<3)|0);
                HEAPF64[$3089>>3] = $3088;
                $3090 = +HEAPF64[$3084>>3];
                $3091 = (+__Z5IKcosd($3090));
                $3092 = (($cj1array127) + ($numsolutions130$01805<<3)|0);
                HEAPF64[$3092>>3] = $3091;
                $3093 = (($numsolutions130$01805) + 1)|0;
                $3094 = ($3093|0)<($3076|0);
                if ($3094) {
                 $numsolutions130$01805 = $3093;
                } else {
                 break;
                }
               }
               $$2476 = $3077 ? $3076 : 1;
               HEAP16[$j1valid134>>1] = 257;
               HEAP8[$6>>0] = 2;
               $ij1135$01814 = 0;
               while(1) {
                $3095 = (($j1valid134) + ($ij1135$01814)|0);
                $3096 = HEAP8[$3095>>0]|0;
                $3097 = ($3096<<24>>24)==(0);
                if (!($3097)) {
                 $3098 = (($j1array126) + ($ij1135$01814<<3)|0);
                 $3099 = +HEAPF64[$3098>>3];
                 HEAPF64[$3>>3] = $3099;
                 $3100 = (($cj1array127) + ($ij1135$01814<<3)|0);
                 $3101 = +HEAPF64[$3100>>3];
                 HEAPF64[$127>>3] = $3101;
                 $3102 = (($sj1array128) + ($ij1135$01814<<3)|0);
                 $3103 = +HEAPF64[$3102>>3];
                 HEAPF64[$128>>3] = $3103;
                 $3104 = +HEAPF64[$3>>3];
                 $3105 = $3104 * 0.5;
                 $3106 = (+__Z5IKtand($3105));
                 HEAPF64[$129>>3] = $3106;
                 $3107 = $ij1135$01814&255;
                 HEAP8[$4>>0] = $3107;
                 HEAP8[$5>>0] = -1;
                 $iij1136$01810 = (($ij1135$01814) + 1)|0;
                 $3108 = ($iij1136$01810|0)<($$2476|0);
                 L2757: do {
                  if ($3108) {
                   $iij1136$01811 = $iij1136$01810;
                   L2758: while(1) {
                    $3109 = (($j1valid134) + ($iij1136$01811)|0);
                    $3110 = HEAP8[$3109>>0]|0;
                    $3111 = ($3110<<24>>24)==(0);
                    do {
                     if (!($3111)) {
                      $3113 = +HEAPF64[$3100>>3];
                      $3114 = (($cj1array127) + ($iij1136$01811<<3)|0);
                      $3115 = +HEAPF64[$3114>>3];
                      $3116 = $3113 - $3115;
                      $3117 = (+__Z5IKabsd($3116));
                      $3118 = $3117 < 9.9999999999999995E-7;
                      if (!($3118)) {
                       break;
                      }
                      $3119 = +HEAPF64[$3102>>3];
                      $3120 = (($sj1array128) + ($iij1136$01811<<3)|0);
                      $3121 = +HEAPF64[$3120>>3];
                      $3122 = $3119 - $3121;
                      $3123 = (+__Z5IKabsd($3122));
                      $3124 = $3123 < 9.9999999999999995E-7;
                      if ($3124) {
                       $$lcssa2773 = $3109;$iij1136$01811$lcssa = $iij1136$01811;
                       break L2758;
                      }
                     }
                    } while(0);
                    $iij1136$0 = (($iij1136$01811) + 1)|0;
                    $3112 = ($iij1136$0|0)<($$2476|0);
                    if ($3112) {
                     $iij1136$01811 = $iij1136$0;
                    } else {
                     break L2757;
                    }
                   }
                   HEAP8[$$lcssa2773>>0] = 0;
                   $3125 = $iij1136$01811$lcssa&255;
                   HEAP8[$5>>0] = $3125;
                  }
                 } while(0);
                 __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
                }
                $3126 = (($ij1135$01814) + 1)|0;
                $exitcond2288 = ($3126|0)==($$2476|0);
                if ($exitcond2288) {
                 break L2360;
                } else {
                 $ij1135$01814 = $3126;
                }
               }
              }
             } while(0);
             $3127 = +HEAPF64[$this>>3];
             $3128 = $3127 + 3.14159265358979;
             $3129 = (+__Z6IKfmoddd($3128,6.2831853071795898));
             $3130 = $3129 + -3.14159265358979;
             $3131 = (+__Z5IKabsd($3130));
             $3132 = +HEAPF64[$43>>3];
             $3133 = (+__Z5IKabsd($3132));
             $3134 = $3131 + $3133;
             $3135 = +HEAPF64[$45>>3];
             $3136 = -$3135;
             $3137 = (+__Z5IKabsd($3134));
             $3138 = $3137 < 9.9999999999999995E-7;
             do {
              if ($3138) {
               $3139 = $3135 * $3135;
               $3140 = 0.72250000000000003 - $3139;
               $3141 = (+__Z5IKabsd($3140));
               $3142 = $3141 < 9.9999999999999995E-7;
               if (!($3142)) {
                break;
               }
               $3143 = (+__Z5IKabsd(-0.84999999999999998));
               $3144 = $3143 < 9.9999999999999995E-7;
               if (!($3144)) {
                break;
               }
               $3145 = (+__Z5IKabsd($3136));
               $3146 = $3145 < 9.9999999999999995E-7;
               if (!($3146)) {
                break;
               }
               $3147 = (+__Z5IKabsd(0.0));
               $3148 = $3147 < 9.9999999999999995E-7;
               if (!($3148)) {
                break;
               }
               $3149 = (+__Z5IKabsd(-0.93500000000000005));
               $3150 = $3149 < 9.9999999999999995E-7;
               if (!($3150)) {
                break;
               }
               HEAPF64[$24>>3] = 0.0;
               HEAPF64[$23>>3] = -1.0;
               HEAPF64[$22>>3] = 3.14159265358979;
               HEAPF64[$47>>3] = 0.0;
               HEAPF64[$7>>3] = 0.0;
               HEAPF64[$76>>3] = 0.0;
               HEAPF64[$75>>3] = 1.0;
               $3151 = +HEAPF64[$45>>3];
               $3152 = $3151 * $3151;
               HEAPF64[$60>>3] = $3152;
               $3153 = +HEAPF64[$45>>3];
               $3154 = +HEAPF64[$32>>3];
               $3155 = $3153 * $3154;
               HEAPF64[$61>>3] = $3155;
               $3156 = +HEAPF64[$45>>3];
               $3157 = +HEAPF64[$34>>3];
               $3158 = $3156 * $3157;
               HEAPF64[$62>>3] = $3158;
               $3159 = +HEAPF64[$45>>3];
               $3160 = +HEAPF64[$36>>3];
               $3161 = $3159 * $3160;
               HEAPF64[$63>>3] = $3161;
               $3162 = +HEAPF64[$38>>3];
               $3163 = $3162 * $3136;
               HEAPF64[$64>>3] = $3163;
               HEAPF64[$65>>3] = 0.0;
               $3164 = +HEAPF64[$40>>3];
               $3165 = $3164 * $3136;
               HEAPF64[$67>>3] = $3165;
               HEAPF64[$68>>3] = 0.0;
               $3166 = +HEAPF64[$42>>3];
               $3167 = $3166 * $3136;
               HEAPF64[$70>>3] = $3167;
               HEAPF64[$71>>3] = 0.0;
               HEAPF64[$43>>3] = 0.0;
               HEAPF64[$this>>3] = 0.0;
               HEAPF64[$84>>3] = 0.0;
               HEAPF64[$83>>3] = 1.0;
               $3168 = +HEAPF64[$45>>3];
               $3169 = +HEAPF64[$26>>3];
               $3170 = $3168 * $3169;
               HEAPF64[$66>>3] = $3170;
               $3171 = +HEAPF64[$45>>3];
               $3172 = +HEAPF64[$28>>3];
               $3173 = $3171 * $3172;
               HEAPF64[$69>>3] = $3173;
               $3174 = +HEAPF64[$45>>3];
               $3175 = +HEAPF64[$30>>3];
               $3176 = $3174 * $3175;
               HEAPF64[$72>>3] = $3176;
               $3177 = (+__Z5IKabsd(1.0));
               $3178 = $3177 < 1.0E-8;
               if ($3178) {
                break L2360;
               }
               HEAPF64[$op139>>3] = 1.0;
               HEAPF64[$130>>3] = 0.0;
               HEAPF64[$131>>3] = -1.0;
               __ZN8IKSolver10polyroots2EPdS0_Ri($op139,$zeror140,$numroots141);
               $3179 = HEAP32[$numroots141>>2]|0;
               $3180 = ($3179|0)>(0);
               if (!($3180)) {
                HEAP16[$j1valid150>>1] = 257;
                HEAP8[$6>>0] = 2;
                break L2360;
               }
               $3181 = HEAP32[$numroots141>>2]|0;
               $3182 = ($3181|0)>(1);
               $numsolutions146$01790 = 0;
               while(1) {
                $3183 = (($zeror140) + ($numsolutions146$01790<<3)|0);
                $3184 = +HEAPF64[$3183>>3];
                $3185 = (+Math_atan((+$3184)));
                $3186 = $3185 * 2.0;
                $3187 = $3186 + 6.2831853071795898;
                $3188 = $3186 > 3.14159265358979;
                $3189 = (($j1array142) + ($numsolutions146$01790<<3)|0);
                HEAPF64[$3189>>3] = $3186;
                do {
                 if ($3188) {
                  $3190 = $3186 + -6.2831853071795898;
                  HEAPF64[$3189>>3] = $3190;
                 } else {
                  $3191 = $3186 < -3.14159265358979;
                  if (!($3191)) {
                   break;
                  }
                  HEAPF64[$3189>>3] = $3187;
                 }
                } while(0);
                $3192 = +HEAPF64[$3189>>3];
                $3193 = (+__Z5IKsind($3192));
                $3194 = (($sj1array144) + ($numsolutions146$01790<<3)|0);
                HEAPF64[$3194>>3] = $3193;
                $3195 = +HEAPF64[$3189>>3];
                $3196 = (+__Z5IKcosd($3195));
                $3197 = (($cj1array143) + ($numsolutions146$01790<<3)|0);
                HEAPF64[$3197>>3] = $3196;
                $3198 = (($numsolutions146$01790) + 1)|0;
                $3199 = ($3198|0)<($3181|0);
                if ($3199) {
                 $numsolutions146$01790 = $3198;
                } else {
                 break;
                }
               }
               $$2477 = $3182 ? $3181 : 1;
               HEAP16[$j1valid150>>1] = 257;
               HEAP8[$6>>0] = 2;
               $ij1151$01799 = 0;
               while(1) {
                $3200 = (($j1valid150) + ($ij1151$01799)|0);
                $3201 = HEAP8[$3200>>0]|0;
                $3202 = ($3201<<24>>24)==(0);
                if (!($3202)) {
                 $3203 = (($j1array142) + ($ij1151$01799<<3)|0);
                 $3204 = +HEAPF64[$3203>>3];
                 HEAPF64[$3>>3] = $3204;
                 $3205 = (($cj1array143) + ($ij1151$01799<<3)|0);
                 $3206 = +HEAPF64[$3205>>3];
                 HEAPF64[$132>>3] = $3206;
                 $3207 = (($sj1array144) + ($ij1151$01799<<3)|0);
                 $3208 = +HEAPF64[$3207>>3];
                 HEAPF64[$133>>3] = $3208;
                 $3209 = +HEAPF64[$3>>3];
                 $3210 = $3209 * 0.5;
                 $3211 = (+__Z5IKtand($3210));
                 HEAPF64[$134>>3] = $3211;
                 $3212 = $ij1151$01799&255;
                 HEAP8[$4>>0] = $3212;
                 HEAP8[$5>>0] = -1;
                 $iij1152$01795 = (($ij1151$01799) + 1)|0;
                 $3213 = ($iij1152$01795|0)<($$2477|0);
                 L2791: do {
                  if ($3213) {
                   $iij1152$01796 = $iij1152$01795;
                   L2792: while(1) {
                    $3214 = (($j1valid150) + ($iij1152$01796)|0);
                    $3215 = HEAP8[$3214>>0]|0;
                    $3216 = ($3215<<24>>24)==(0);
                    do {
                     if (!($3216)) {
                      $3218 = +HEAPF64[$3205>>3];
                      $3219 = (($cj1array143) + ($iij1152$01796<<3)|0);
                      $3220 = +HEAPF64[$3219>>3];
                      $3221 = $3218 - $3220;
                      $3222 = (+__Z5IKabsd($3221));
                      $3223 = $3222 < 9.9999999999999995E-7;
                      if (!($3223)) {
                       break;
                      }
                      $3224 = +HEAPF64[$3207>>3];
                      $3225 = (($sj1array144) + ($iij1152$01796<<3)|0);
                      $3226 = +HEAPF64[$3225>>3];
                      $3227 = $3224 - $3226;
                      $3228 = (+__Z5IKabsd($3227));
                      $3229 = $3228 < 9.9999999999999995E-7;
                      if ($3229) {
                       $$lcssa2770 = $3214;$iij1152$01796$lcssa = $iij1152$01796;
                       break L2792;
                      }
                     }
                    } while(0);
                    $iij1152$0 = (($iij1152$01796) + 1)|0;
                    $3217 = ($iij1152$0|0)<($$2477|0);
                    if ($3217) {
                     $iij1152$01796 = $iij1152$0;
                    } else {
                     break L2791;
                    }
                   }
                   HEAP8[$$lcssa2770>>0] = 0;
                   $3230 = $iij1152$01796$lcssa&255;
                   HEAP8[$5>>0] = $3230;
                  }
                 } while(0);
                 __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
                }
                $3231 = (($ij1151$01799) + 1)|0;
                $exitcond2286 = ($3231|0)==($$2477|0);
                if ($exitcond2286) {
                 break L2360;
                } else {
                 $ij1151$01799 = $3231;
                }
               }
              }
             } while(0);
             $3232 = +HEAPF64[$43>>3];
             $3233 = (+__Z5IKabsd($3232));
             $3234 = +HEAPF64[$this>>3];
             $3235 = (+__Z6IKfmoddd($3234,6.2831853071795898));
             $3236 = $3235 + -3.14159265358979;
             $3237 = (+__Z5IKabsd($3236));
             $3238 = $3233 + $3237;
             $3239 = +HEAPF64[$45>>3];
             $3240 = (+__Z5IKabsd($3238));
             $3241 = $3240 < 9.9999999999999995E-7;
             do {
              if ($3241) {
               $3242 = $3239 * $3239;
               $3243 = 0.72250000000000003 - $3242;
               $3244 = (+__Z5IKabsd($3243));
               $3245 = $3244 < 9.9999999999999995E-7;
               if (!($3245)) {
                break;
               }
               $3246 = (+__Z5IKabsd(-0.84999999999999998));
               $3247 = $3246 < 9.9999999999999995E-7;
               if (!($3247)) {
                break;
               }
               $3248 = (+__Z5IKabsd($3239));
               $3249 = $3248 < 9.9999999999999995E-7;
               if (!($3249)) {
                break;
               }
               $3250 = (+__Z5IKabsd(0.0));
               $3251 = $3250 < 9.9999999999999995E-7;
               if (!($3251)) {
                break;
               }
               $3252 = (+__Z5IKabsd(-0.93500000000000005));
               $3253 = $3252 < 9.9999999999999995E-7;
               if (!($3253)) {
                break;
               }
               $3254 = -$3239;
               HEAPF64[$24>>3] = 0.0;
               HEAPF64[$23>>3] = -1.0;
               HEAPF64[$22>>3] = 3.14159265358979;
               HEAPF64[$47>>3] = 0.0;
               HEAPF64[$7>>3] = 0.0;
               HEAPF64[$76>>3] = 0.0;
               HEAPF64[$75>>3] = 1.0;
               $3255 = +HEAPF64[$45>>3];
               $3256 = $3255 * $3255;
               HEAPF64[$60>>3] = $3256;
               $3257 = +HEAPF64[$45>>3];
               $3258 = +HEAPF64[$32>>3];
               $3259 = $3257 * $3258;
               HEAPF64[$61>>3] = $3259;
               $3260 = +HEAPF64[$45>>3];
               $3261 = +HEAPF64[$34>>3];
               $3262 = $3260 * $3261;
               HEAPF64[$62>>3] = $3262;
               $3263 = +HEAPF64[$45>>3];
               $3264 = +HEAPF64[$36>>3];
               $3265 = $3263 * $3264;
               HEAPF64[$63>>3] = $3265;
               $3266 = +HEAPF64[$38>>3];
               $3267 = $3266 * $3254;
               HEAPF64[$64>>3] = $3267;
               HEAPF64[$65>>3] = 0.0;
               $3268 = +HEAPF64[$40>>3];
               $3269 = $3268 * $3254;
               HEAPF64[$67>>3] = $3269;
               HEAPF64[$68>>3] = 0.0;
               $3270 = +HEAPF64[$42>>3];
               $3271 = $3270 * $3254;
               HEAPF64[$70>>3] = $3271;
               HEAPF64[$71>>3] = 0.0;
               HEAPF64[$43>>3] = 0.0;
               HEAPF64[$this>>3] = 3.14159265358979;
               HEAPF64[$84>>3] = 0.0;
               HEAPF64[$83>>3] = -1.0;
               $3272 = +HEAPF64[$45>>3];
               $3273 = +HEAPF64[$26>>3];
               $3274 = $3272 * $3273;
               HEAPF64[$66>>3] = $3274;
               $3275 = +HEAPF64[$45>>3];
               $3276 = +HEAPF64[$28>>3];
               $3277 = $3275 * $3276;
               HEAPF64[$69>>3] = $3277;
               $3278 = +HEAPF64[$45>>3];
               $3279 = +HEAPF64[$30>>3];
               $3280 = $3278 * $3279;
               HEAPF64[$72>>3] = $3280;
               $3281 = (+__Z5IKabsd(1.0));
               $3282 = $3281 < 1.0E-8;
               if ($3282) {
                break L2360;
               }
               HEAPF64[$op155>>3] = 1.0;
               HEAPF64[$135>>3] = 0.0;
               HEAPF64[$136>>3] = -1.0;
               __ZN8IKSolver10polyroots2EPdS0_Ri($op155,$zeror156,$numroots157);
               $3283 = HEAP32[$numroots157>>2]|0;
               $3284 = ($3283|0)>(0);
               if (!($3284)) {
                HEAP16[$j1valid166>>1] = 257;
                HEAP8[$6>>0] = 2;
                break L2360;
               }
               $3285 = HEAP32[$numroots157>>2]|0;
               $3286 = ($3285|0)>(1);
               $numsolutions162$01775 = 0;
               while(1) {
                $3287 = (($zeror156) + ($numsolutions162$01775<<3)|0);
                $3288 = +HEAPF64[$3287>>3];
                $3289 = (+Math_atan((+$3288)));
                $3290 = $3289 * 2.0;
                $3291 = $3290 + 6.2831853071795898;
                $3292 = $3290 > 3.14159265358979;
                $3293 = (($j1array158) + ($numsolutions162$01775<<3)|0);
                HEAPF64[$3293>>3] = $3290;
                do {
                 if ($3292) {
                  $3294 = $3290 + -6.2831853071795898;
                  HEAPF64[$3293>>3] = $3294;
                 } else {
                  $3295 = $3290 < -3.14159265358979;
                  if (!($3295)) {
                   break;
                  }
                  HEAPF64[$3293>>3] = $3291;
                 }
                } while(0);
                $3296 = +HEAPF64[$3293>>3];
                $3297 = (+__Z5IKsind($3296));
                $3298 = (($sj1array160) + ($numsolutions162$01775<<3)|0);
                HEAPF64[$3298>>3] = $3297;
                $3299 = +HEAPF64[$3293>>3];
                $3300 = (+__Z5IKcosd($3299));
                $3301 = (($cj1array159) + ($numsolutions162$01775<<3)|0);
                HEAPF64[$3301>>3] = $3300;
                $3302 = (($numsolutions162$01775) + 1)|0;
                $3303 = ($3302|0)<($3285|0);
                if ($3303) {
                 $numsolutions162$01775 = $3302;
                } else {
                 break;
                }
               }
               $$2478 = $3286 ? $3285 : 1;
               HEAP16[$j1valid166>>1] = 257;
               HEAP8[$6>>0] = 2;
               $ij1167$01784 = 0;
               while(1) {
                $3304 = (($j1valid166) + ($ij1167$01784)|0);
                $3305 = HEAP8[$3304>>0]|0;
                $3306 = ($3305<<24>>24)==(0);
                if (!($3306)) {
                 $3307 = (($j1array158) + ($ij1167$01784<<3)|0);
                 $3308 = +HEAPF64[$3307>>3];
                 HEAPF64[$3>>3] = $3308;
                 $3309 = (($cj1array159) + ($ij1167$01784<<3)|0);
                 $3310 = +HEAPF64[$3309>>3];
                 HEAPF64[$137>>3] = $3310;
                 $3311 = (($sj1array160) + ($ij1167$01784<<3)|0);
                 $3312 = +HEAPF64[$3311>>3];
                 HEAPF64[$138>>3] = $3312;
                 $3313 = +HEAPF64[$3>>3];
                 $3314 = $3313 * 0.5;
                 $3315 = (+__Z5IKtand($3314));
                 HEAPF64[$139>>3] = $3315;
                 $3316 = $ij1167$01784&255;
                 HEAP8[$4>>0] = $3316;
                 HEAP8[$5>>0] = -1;
                 $iij1168$01780 = (($ij1167$01784) + 1)|0;
                 $3317 = ($iij1168$01780|0)<($$2478|0);
                 L2825: do {
                  if ($3317) {
                   $iij1168$01781 = $iij1168$01780;
                   L2826: while(1) {
                    $3318 = (($j1valid166) + ($iij1168$01781)|0);
                    $3319 = HEAP8[$3318>>0]|0;
                    $3320 = ($3319<<24>>24)==(0);
                    do {
                     if (!($3320)) {
                      $3322 = +HEAPF64[$3309>>3];
                      $3323 = (($cj1array159) + ($iij1168$01781<<3)|0);
                      $3324 = +HEAPF64[$3323>>3];
                      $3325 = $3322 - $3324;
                      $3326 = (+__Z5IKabsd($3325));
                      $3327 = $3326 < 9.9999999999999995E-7;
                      if (!($3327)) {
                       break;
                      }
                      $3328 = +HEAPF64[$3311>>3];
                      $3329 = (($sj1array160) + ($iij1168$01781<<3)|0);
                      $3330 = +HEAPF64[$3329>>3];
                      $3331 = $3328 - $3330;
                      $3332 = (+__Z5IKabsd($3331));
                      $3333 = $3332 < 9.9999999999999995E-7;
                      if ($3333) {
                       $$lcssa2767 = $3318;$iij1168$01781$lcssa = $iij1168$01781;
                       break L2826;
                      }
                     }
                    } while(0);
                    $iij1168$0 = (($iij1168$01781) + 1)|0;
                    $3321 = ($iij1168$0|0)<($$2478|0);
                    if ($3321) {
                     $iij1168$01781 = $iij1168$0;
                    } else {
                     break L2825;
                    }
                   }
                   HEAP8[$$lcssa2767>>0] = 0;
                   $3334 = $iij1168$01781$lcssa&255;
                   HEAP8[$5>>0] = $3334;
                  }
                 } while(0);
                 __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
                }
                $3335 = (($ij1167$01784) + 1)|0;
                $exitcond2284 = ($3335|0)==($$2478|0);
                if ($exitcond2284) {
                 break L2360;
                } else {
                 $ij1167$01784 = $3335;
                }
               }
              }
             } while(0);
             $3336 = +HEAPF64[$45>>3];
             $3337 = (+__Z5IKabsd($3336));
             $3338 = +HEAPF64[$this>>3];
             $3339 = $3338 + 1.5707963267949001;
             $3340 = (+__Z6IKfmoddd($3339,6.2831853071795898));
             $3341 = $3340 + -3.14159265358979;
             $3342 = (+__Z5IKabsd($3341));
             $3343 = $3337 + $3342;
             $3344 = +HEAPF64[$43>>3];
             $3345 = (+__Z5IKabsd($3343));
             $3346 = $3345 < 9.9999999999999995E-7;
             do {
              if ($3346) {
               $3347 = $3344 * $3344;
               $3348 = 0.72250000000000003 - $3347;
               $3349 = (+__Z5IKabsd($3348));
               $3350 = $3349 < 9.9999999999999995E-7;
               if (!($3350)) {
                break;
               }
               $3351 = (+__Z5IKabsd(-0.84999999999999998));
               $3352 = $3351 < 9.9999999999999995E-7;
               if (!($3352)) {
                break;
               }
               $3353 = (+__Z5IKabsd($3344));
               $3354 = $3353 < 9.9999999999999995E-7;
               if (!($3354)) {
                break;
               }
               $3355 = (+__Z5IKabsd(0.0));
               $3356 = $3355 < 9.9999999999999995E-7;
               if (!($3356)) {
                break;
               }
               $3357 = (+__Z5IKabsd(-0.93500000000000005));
               $3358 = $3357 < 9.9999999999999995E-7;
               if (!($3358)) {
                break;
               }
               $3359 = -$3344;
               HEAPF64[$24>>3] = 0.0;
               HEAPF64[$23>>3] = -1.0;
               HEAPF64[$22>>3] = 3.14159265358979;
               HEAPF64[$47>>3] = 0.0;
               HEAPF64[$7>>3] = 0.0;
               HEAPF64[$76>>3] = 0.0;
               HEAPF64[$75>>3] = 1.0;
               $3360 = +HEAPF64[$43>>3];
               $3361 = $3360 * $3360;
               HEAPF64[$60>>3] = $3361;
               $3362 = +HEAPF64[$43>>3];
               $3363 = +HEAPF64[$26>>3];
               $3364 = $3362 * $3363;
               HEAPF64[$61>>3] = $3364;
               $3365 = +HEAPF64[$43>>3];
               $3366 = +HEAPF64[$28>>3];
               $3367 = $3365 * $3366;
               HEAPF64[$62>>3] = $3367;
               $3368 = +HEAPF64[$43>>3];
               $3369 = +HEAPF64[$30>>3];
               $3370 = $3368 * $3369;
               HEAPF64[$63>>3] = $3370;
               HEAPF64[$64>>3] = 0.0;
               $3371 = +HEAPF64[$43>>3];
               $3372 = +HEAPF64[$38>>3];
               $3373 = $3371 * $3372;
               HEAPF64[$65>>3] = $3373;
               HEAPF64[$67>>3] = 0.0;
               $3374 = +HEAPF64[$43>>3];
               $3375 = +HEAPF64[$40>>3];
               $3376 = $3374 * $3375;
               HEAPF64[$68>>3] = $3376;
               HEAPF64[$70>>3] = 0.0;
               $3377 = +HEAPF64[$43>>3];
               $3378 = +HEAPF64[$42>>3];
               $3379 = $3377 * $3378;
               HEAPF64[$71>>3] = $3379;
               HEAPF64[$45>>3] = 0.0;
               HEAPF64[$this>>3] = 1.5707963267949001;
               HEAPF64[$84>>3] = 1.0;
               HEAPF64[$83>>3] = 0.0;
               $3380 = +HEAPF64[$32>>3];
               $3381 = $3380 * $3359;
               HEAPF64[$66>>3] = $3381;
               $3382 = +HEAPF64[$34>>3];
               $3383 = $3382 * $3359;
               HEAPF64[$69>>3] = $3383;
               $3384 = +HEAPF64[$36>>3];
               $3385 = $3384 * $3359;
               HEAPF64[$72>>3] = $3385;
               $3386 = (+__Z5IKabsd(1.0));
               $3387 = $3386 < 1.0E-8;
               if ($3387) {
                break L2360;
               }
               HEAPF64[$op171>>3] = 1.0;
               HEAPF64[$140>>3] = 0.0;
               HEAPF64[$141>>3] = -1.0;
               __ZN8IKSolver10polyroots2EPdS0_Ri($op171,$zeror172,$numroots173);
               $3388 = HEAP32[$numroots173>>2]|0;
               $3389 = ($3388|0)>(0);
               if (!($3389)) {
                HEAP16[$j1valid182>>1] = 257;
                HEAP8[$6>>0] = 2;
                break L2360;
               }
               $3390 = HEAP32[$numroots173>>2]|0;
               $3391 = ($3390|0)>(1);
               $numsolutions178$01760 = 0;
               while(1) {
                $3392 = (($zeror172) + ($numsolutions178$01760<<3)|0);
                $3393 = +HEAPF64[$3392>>3];
                $3394 = (+Math_atan((+$3393)));
                $3395 = $3394 * 2.0;
                $3396 = $3395 + 6.2831853071795898;
                $3397 = $3395 > 3.14159265358979;
                $3398 = (($j1array174) + ($numsolutions178$01760<<3)|0);
                HEAPF64[$3398>>3] = $3395;
                do {
                 if ($3397) {
                  $3399 = $3395 + -6.2831853071795898;
                  HEAPF64[$3398>>3] = $3399;
                 } else {
                  $3400 = $3395 < -3.14159265358979;
                  if (!($3400)) {
                   break;
                  }
                  HEAPF64[$3398>>3] = $3396;
                 }
                } while(0);
                $3401 = +HEAPF64[$3398>>3];
                $3402 = (+__Z5IKsind($3401));
                $3403 = (($sj1array176) + ($numsolutions178$01760<<3)|0);
                HEAPF64[$3403>>3] = $3402;
                $3404 = +HEAPF64[$3398>>3];
                $3405 = (+__Z5IKcosd($3404));
                $3406 = (($cj1array175) + ($numsolutions178$01760<<3)|0);
                HEAPF64[$3406>>3] = $3405;
                $3407 = (($numsolutions178$01760) + 1)|0;
                $3408 = ($3407|0)<($3390|0);
                if ($3408) {
                 $numsolutions178$01760 = $3407;
                } else {
                 break;
                }
               }
               $$2479 = $3391 ? $3390 : 1;
               HEAP16[$j1valid182>>1] = 257;
               HEAP8[$6>>0] = 2;
               $ij1183$01769 = 0;
               while(1) {
                $3409 = (($j1valid182) + ($ij1183$01769)|0);
                $3410 = HEAP8[$3409>>0]|0;
                $3411 = ($3410<<24>>24)==(0);
                if (!($3411)) {
                 $3412 = (($j1array174) + ($ij1183$01769<<3)|0);
                 $3413 = +HEAPF64[$3412>>3];
                 HEAPF64[$3>>3] = $3413;
                 $3414 = (($cj1array175) + ($ij1183$01769<<3)|0);
                 $3415 = +HEAPF64[$3414>>3];
                 HEAPF64[$142>>3] = $3415;
                 $3416 = (($sj1array176) + ($ij1183$01769<<3)|0);
                 $3417 = +HEAPF64[$3416>>3];
                 HEAPF64[$143>>3] = $3417;
                 $3418 = +HEAPF64[$3>>3];
                 $3419 = $3418 * 0.5;
                 $3420 = (+__Z5IKtand($3419));
                 HEAPF64[$144>>3] = $3420;
                 $3421 = $ij1183$01769&255;
                 HEAP8[$4>>0] = $3421;
                 HEAP8[$5>>0] = -1;
                 $iij1184$01765 = (($ij1183$01769) + 1)|0;
                 $3422 = ($iij1184$01765|0)<($$2479|0);
                 L2859: do {
                  if ($3422) {
                   $iij1184$01766 = $iij1184$01765;
                   L2860: while(1) {
                    $3423 = (($j1valid182) + ($iij1184$01766)|0);
                    $3424 = HEAP8[$3423>>0]|0;
                    $3425 = ($3424<<24>>24)==(0);
                    do {
                     if (!($3425)) {
                      $3427 = +HEAPF64[$3414>>3];
                      $3428 = (($cj1array175) + ($iij1184$01766<<3)|0);
                      $3429 = +HEAPF64[$3428>>3];
                      $3430 = $3427 - $3429;
                      $3431 = (+__Z5IKabsd($3430));
                      $3432 = $3431 < 9.9999999999999995E-7;
                      if (!($3432)) {
                       break;
                      }
                      $3433 = +HEAPF64[$3416>>3];
                      $3434 = (($sj1array176) + ($iij1184$01766<<3)|0);
                      $3435 = +HEAPF64[$3434>>3];
                      $3436 = $3433 - $3435;
                      $3437 = (+__Z5IKabsd($3436));
                      $3438 = $3437 < 9.9999999999999995E-7;
                      if ($3438) {
                       $$lcssa2764 = $3423;$iij1184$01766$lcssa = $iij1184$01766;
                       break L2860;
                      }
                     }
                    } while(0);
                    $iij1184$0 = (($iij1184$01766) + 1)|0;
                    $3426 = ($iij1184$0|0)<($$2479|0);
                    if ($3426) {
                     $iij1184$01766 = $iij1184$0;
                    } else {
                     break L2859;
                    }
                   }
                   HEAP8[$$lcssa2764>>0] = 0;
                   $3439 = $iij1184$01766$lcssa&255;
                   HEAP8[$5>>0] = $3439;
                  }
                 } while(0);
                 __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
                }
                $3440 = (($ij1183$01769) + 1)|0;
                $exitcond2282 = ($3440|0)==($$2479|0);
                if ($exitcond2282) {
                 break L2360;
                } else {
                 $ij1183$01769 = $3440;
                }
               }
              }
             } while(0);
             $3441 = +HEAPF64[$45>>3];
             $3442 = (+__Z5IKabsd($3441));
             $3443 = +HEAPF64[$this>>3];
             $3444 = $3443 + 4.7123889803846897;
             $3445 = (+__Z6IKfmoddd($3444,6.2831853071795898));
             $3446 = $3445 + -3.14159265358979;
             $3447 = (+__Z5IKabsd($3446));
             $3448 = $3442 + $3447;
             $3449 = +HEAPF64[$43>>3];
             $3450 = -$3449;
             $3451 = (+__Z5IKabsd($3448));
             $3452 = $3451 < 9.9999999999999995E-7;
             if (!($3452)) {
              break;
             }
             $3453 = $3449 * $3449;
             $3454 = 0.72250000000000003 - $3453;
             $3455 = (+__Z5IKabsd($3454));
             $3456 = $3455 < 9.9999999999999995E-7;
             if (!($3456)) {
              break;
             }
             $3457 = (+__Z5IKabsd(-0.84999999999999998));
             $3458 = $3457 < 9.9999999999999995E-7;
             if (!($3458)) {
              break;
             }
             $3459 = (+__Z5IKabsd($3450));
             $3460 = $3459 < 9.9999999999999995E-7;
             if (!($3460)) {
              break;
             }
             $3461 = (+__Z5IKabsd(0.0));
             $3462 = $3461 < 9.9999999999999995E-7;
             if (!($3462)) {
              break;
             }
             $3463 = (+__Z5IKabsd(-0.93500000000000005));
             $3464 = $3463 < 9.9999999999999995E-7;
             if (!($3464)) {
              break;
             }
             HEAPF64[$24>>3] = 0.0;
             HEAPF64[$23>>3] = -1.0;
             HEAPF64[$22>>3] = 3.14159265358979;
             HEAPF64[$47>>3] = 0.0;
             HEAPF64[$7>>3] = 0.0;
             HEAPF64[$76>>3] = 0.0;
             HEAPF64[$75>>3] = 1.0;
             $3465 = +HEAPF64[$43>>3];
             $3466 = $3465 * $3465;
             HEAPF64[$60>>3] = $3466;
             $3467 = +HEAPF64[$43>>3];
             $3468 = +HEAPF64[$26>>3];
             $3469 = $3467 * $3468;
             HEAPF64[$61>>3] = $3469;
             $3470 = +HEAPF64[$43>>3];
             $3471 = +HEAPF64[$28>>3];
             $3472 = $3470 * $3471;
             HEAPF64[$62>>3] = $3472;
             $3473 = +HEAPF64[$43>>3];
             $3474 = +HEAPF64[$30>>3];
             $3475 = $3473 * $3474;
             HEAPF64[$63>>3] = $3475;
             HEAPF64[$64>>3] = 0.0;
             $3476 = +HEAPF64[$43>>3];
             $3477 = +HEAPF64[$38>>3];
             $3478 = $3476 * $3477;
             HEAPF64[$65>>3] = $3478;
             HEAPF64[$67>>3] = 0.0;
             $3479 = +HEAPF64[$43>>3];
             $3480 = +HEAPF64[$40>>3];
             $3481 = $3479 * $3480;
             HEAPF64[$68>>3] = $3481;
             HEAPF64[$70>>3] = 0.0;
             $3482 = +HEAPF64[$43>>3];
             $3483 = +HEAPF64[$42>>3];
             $3484 = $3482 * $3483;
             HEAPF64[$71>>3] = $3484;
             HEAPF64[$45>>3] = 0.0;
             HEAPF64[$this>>3] = -1.5707963267949001;
             HEAPF64[$84>>3] = -1.0;
             HEAPF64[$83>>3] = 0.0;
             $3485 = +HEAPF64[$32>>3];
             $3486 = $3485 * $3450;
             HEAPF64[$66>>3] = $3486;
             $3487 = +HEAPF64[$34>>3];
             $3488 = $3487 * $3450;
             HEAPF64[$69>>3] = $3488;
             $3489 = +HEAPF64[$36>>3];
             $3490 = $3489 * $3450;
             HEAPF64[$72>>3] = $3490;
             $3491 = (+__Z5IKabsd(1.0));
             $3492 = $3491 < 1.0E-8;
             if ($3492) {
              break;
             }
             HEAPF64[$op187>>3] = 1.0;
             HEAPF64[$145>>3] = 0.0;
             HEAPF64[$146>>3] = -1.0;
             __ZN8IKSolver10polyroots2EPdS0_Ri($op187,$zeror188,$numroots189);
             $3493 = HEAP32[$numroots189>>2]|0;
             $3494 = ($3493|0)>(0);
             if (!($3494)) {
              HEAP16[$j1valid198>>1] = 257;
              HEAP8[$6>>0] = 2;
              break;
             }
             $3495 = HEAP32[$numroots189>>2]|0;
             $3496 = ($3495|0)>(1);
             $numsolutions194$01745 = 0;
             while(1) {
              $3497 = (($zeror188) + ($numsolutions194$01745<<3)|0);
              $3498 = +HEAPF64[$3497>>3];
              $3499 = (+Math_atan((+$3498)));
              $3500 = $3499 * 2.0;
              $3501 = $3500 + 6.2831853071795898;
              $3502 = $3500 > 3.14159265358979;
              $3503 = (($j1array190) + ($numsolutions194$01745<<3)|0);
              HEAPF64[$3503>>3] = $3500;
              do {
               if ($3502) {
                $3504 = $3500 + -6.2831853071795898;
                HEAPF64[$3503>>3] = $3504;
               } else {
                $3505 = $3500 < -3.14159265358979;
                if (!($3505)) {
                 break;
                }
                HEAPF64[$3503>>3] = $3501;
               }
              } while(0);
              $3506 = +HEAPF64[$3503>>3];
              $3507 = (+__Z5IKsind($3506));
              $3508 = (($sj1array192) + ($numsolutions194$01745<<3)|0);
              HEAPF64[$3508>>3] = $3507;
              $3509 = +HEAPF64[$3503>>3];
              $3510 = (+__Z5IKcosd($3509));
              $3511 = (($cj1array191) + ($numsolutions194$01745<<3)|0);
              HEAPF64[$3511>>3] = $3510;
              $3512 = (($numsolutions194$01745) + 1)|0;
              $3513 = ($3512|0)<($3495|0);
              if ($3513) {
               $numsolutions194$01745 = $3512;
              } else {
               break;
              }
             }
             $$2480 = $3496 ? $3495 : 1;
             HEAP16[$j1valid198>>1] = 257;
             HEAP8[$6>>0] = 2;
             $ij1199$01754 = 0;
             while(1) {
              $3514 = (($j1valid198) + ($ij1199$01754)|0);
              $3515 = HEAP8[$3514>>0]|0;
              $3516 = ($3515<<24>>24)==(0);
              if (!($3516)) {
               $3517 = (($j1array190) + ($ij1199$01754<<3)|0);
               $3518 = +HEAPF64[$3517>>3];
               HEAPF64[$3>>3] = $3518;
               $3519 = (($cj1array191) + ($ij1199$01754<<3)|0);
               $3520 = +HEAPF64[$3519>>3];
               HEAPF64[$147>>3] = $3520;
               $3521 = (($sj1array192) + ($ij1199$01754<<3)|0);
               $3522 = +HEAPF64[$3521>>3];
               HEAPF64[$148>>3] = $3522;
               $3523 = +HEAPF64[$3>>3];
               $3524 = $3523 * 0.5;
               $3525 = (+__Z5IKtand($3524));
               HEAPF64[$149>>3] = $3525;
               $3526 = $ij1199$01754&255;
               HEAP8[$4>>0] = $3526;
               HEAP8[$5>>0] = -1;
               $iij1200$01750 = (($ij1199$01754) + 1)|0;
               $3527 = ($iij1200$01750|0)<($$2480|0);
               L2892: do {
                if ($3527) {
                 $iij1200$01751 = $iij1200$01750;
                 L2893: while(1) {
                  $3528 = (($j1valid198) + ($iij1200$01751)|0);
                  $3529 = HEAP8[$3528>>0]|0;
                  $3530 = ($3529<<24>>24)==(0);
                  do {
                   if (!($3530)) {
                    $3532 = +HEAPF64[$3519>>3];
                    $3533 = (($cj1array191) + ($iij1200$01751<<3)|0);
                    $3534 = +HEAPF64[$3533>>3];
                    $3535 = $3532 - $3534;
                    $3536 = (+__Z5IKabsd($3535));
                    $3537 = $3536 < 9.9999999999999995E-7;
                    if (!($3537)) {
                     break;
                    }
                    $3538 = +HEAPF64[$3521>>3];
                    $3539 = (($sj1array192) + ($iij1200$01751<<3)|0);
                    $3540 = +HEAPF64[$3539>>3];
                    $3541 = $3538 - $3540;
                    $3542 = (+__Z5IKabsd($3541));
                    $3543 = $3542 < 9.9999999999999995E-7;
                    if ($3543) {
                     $$lcssa2761 = $3528;$iij1200$01751$lcssa = $iij1200$01751;
                     break L2893;
                    }
                   }
                  } while(0);
                  $iij1200$0 = (($iij1200$01751) + 1)|0;
                  $3531 = ($iij1200$0|0)<($$2480|0);
                  if ($3531) {
                   $iij1200$01751 = $iij1200$0;
                  } else {
                   break L2892;
                  }
                 }
                 HEAP8[$$lcssa2761>>0] = 0;
                 $3544 = $iij1200$01751$lcssa&255;
                 HEAP8[$5>>0] = $3544;
                }
               } while(0);
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
              }
              $3545 = (($ij1199$01754) + 1)|0;
              $exitcond2280 = ($3545|0)==($$2480|0);
              if ($exitcond2280) {
               break;
              } else {
               $ij1199$01754 = $3545;
              }
             }
            }
           } while(0);
           $4812 = (($ij0$01912) + 1)|0;
           $exitcond2303 = ($4812|0)==(2);
           if ($exitcond2303) {
            break;
           } else {
            $ij0$01912 = $4812;
           }
          }
         }
        }
       }
      }
     }
    }
   }
  } while(0);
  $18336 = (($ij3$01913) + 1)|0;
  $exitcond2304 = ($18336|0)==(2);
  if ($exitcond2304) {
   break;
  } else {
   $ij3$01913 = $18336;
  }
 }
 $18337 = HEAP32[$solutions>>2]|0;
 $18338 = ((($18337)) + 16|0);
 $18339 = HEAP32[$18338>>2]|0;
 $18340 = (FUNCTION_TABLE_ii[$18339 & 63]($solutions)|0);
 $18341 = ($18340|0)!=(0);
 STACKTOP = sp;return ($18341|0);
}
function __ZN6ikfast14IkSolutionListIdEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN6ikfast18IkSolutionListBaseIdEC2Ev($this);
 HEAP32[$this>>2] = (376);
 $0 = ((($this)) + 4|0);
 HEAP32[$0>>2] = $0;
 $1 = ((($this)) + 8|0);
 HEAP32[$1>>2] = $0;
 $2 = ((($this)) + 12|0);
 HEAP32[$2>>2] = 0;
 return;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEEC2Ej($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = 0;
 $0 = ((($this)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($this)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = ($__n|0)==(0);
 if ($2) {
  return;
 }
 __ZNSt3__16vectorIdNS_9allocatorIdEEE8allocateEj($this,$__n);
 __ZNSt3__16vectorIdNS_9allocatorIdEEE18__construct_at_endEj($this,$__n);
 return;
}
function __ZNK6ikfast14IkSolutionListIdE15GetNumSolutionsEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNK6ikfast14IkSolutionListIdE11GetSolutionEj($this,$index) {
 $this = $this|0;
 $index = $index|0;
 var $$03$i$i = 0, $$14$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1>>>0)>($index>>>0);
 if (!($2)) {
  $3 = (___cxa_allocate_exception(8)|0);
  __ZNSt13runtime_errorC2EPKc($3,800);
  ___cxa_throw(($3|0),(1936|0),(35|0));
  // unreachable;
 }
 $4 = ((($this)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $5;
 $7 = ($index|0)>(-1);
 if (!($7)) {
  $$14$i$i = $index;$15 = $6;
  while(1) {
   $16 = $15;
   $17 = HEAP32[$16>>2]|0;
   $18 = (($$14$i$i) + 1)|0;
   $19 = ($$14$i$i|0)<(-1);
   if ($19) {
    $$14$i$i = $18;$15 = $17;
   } else {
    $20 = $17;
    break;
   }
  }
  $21 = $20;
  $22 = ((($21)) + 8|0);
  return ($22|0);
 }
 $8 = ($index|0)>(0);
 if ($8) {
  $$03$i$i = $index;$9 = $6;
 } else {
  $20 = $6;
  $21 = $20;
  $22 = ((($21)) + 8|0);
  return ($22|0);
 }
 while(1) {
  $10 = $9;
  $11 = ((($10)) + 4|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = (($$03$i$i) + -1)|0;
  $14 = ($$03$i$i|0)>(1);
  if ($14) {
   $$03$i$i = $13;$9 = $12;
  } else {
   $20 = $12;
   break;
  }
 }
 $21 = $20;
 $22 = ((($21)) + 8|0);
 return ($22|0);
}
function __ZNSt3__113__vector_baseIdNS_9allocatorIdEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_last2$i$i = 0, $scevgep$i$i = 0, $scevgep4$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ($0|0)==(0|0);
 if ($1) {
  return;
 }
 $2 = ((($this)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==($0|0);
 if (!($4)) {
  $scevgep$i$i = ((($3)) + -8|0);
  $5 = $scevgep$i$i;
  $__new_last2$i$i = $0;
  $6 = (($5) - ($__new_last2$i$i))|0;
  $7 = $6 >>> 3;
  $8 = $7 ^ -1;
  $scevgep4$i$i = (($3) + ($8<<3)|0);
  HEAP32[$2>>2] = $scevgep4$i$i;
 }
 $9 = HEAP32[$this>>2]|0;
 __ZdlPv($9);
 return;
}
function __ZN6ikfast14IkSolutionListIdED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (376);
 $0 = ((($this)) + 4|0);
 __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEED2Ev($0);
 return;
}
function __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5clearEv($this);
 return;
}
function __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5clearEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__f$01 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0);
 if ($2) {
  return;
 }
 $3 = ((($this)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = HEAP32[$this>>2]|0;
 $6 = ((($5)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = HEAP32[$4>>2]|0;
 $9 = ((($8)) + 4|0);
 HEAP32[$9>>2] = $7;
 $10 = HEAP32[$4>>2]|0;
 $11 = HEAP32[$6>>2]|0;
 HEAP32[$11>>2] = $10;
 HEAP32[$0>>2] = 0;
 $12 = ($4|0)==($this|0);
 if ($12) {
  return;
 } else {
  $__f$01 = $4;
 }
 while(1) {
  $13 = ((($__f$01)) + 4|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = ((($__f$01)) + 8|0);
  $16 = HEAP32[$15>>2]|0;
  $17 = HEAP32[$16>>2]|0;
  FUNCTION_TABLE_vi[$17 & 127]($15);
  __ZdlPv($__f$01);
  $18 = ($14|0)==($this|0);
  if ($18) {
   break;
  } else {
   $__f$01 = $14;
  }
 }
 return;
}
function __ZN6ikfast14IkSolutionListIdED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN6ikfast14IkSolutionListIdED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZN6ikfast14IkSolutionListIdE11AddSolutionERKNSt3__16vectorINS_23IkSingleDOFSolutionBaseIdEENS2_9allocatorIS5_EEEERKNS3_IiNS6_IiEEEE($this,$vinfos,$vfree) {
 $this = $this|0;
 $vinfos = $vinfos|0;
 $vfree = $vfree|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $0 = sp;
 $1 = ((($this)) + 4|0);
 $2 = ((($this)) + 12|0);
 $3 = HEAP32[$2>>2]|0;
 __ZN6ikfast10IkSolutionIdEC2ERKNSt3__16vectorINS_23IkSingleDOFSolutionBaseIdEENS2_9allocatorIS5_EEEERKNS3_IiNS6_IiEEEE($0,$vinfos,$vfree);
 __ZNSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE9push_backERKS3_($1,$0);
 __ZN6ikfast10IkSolutionIdED2Ev($0);
 STACKTOP = sp;return ($3|0);
}
function __ZN6ikfast14IkSolutionListIdE5ClearEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5clearEv($0);
 return;
}
function __ZN6ikfast10IkSolutionIdEC2ERKNSt3__16vectorINS_23IkSingleDOFSolutionBaseIdEENS2_9allocatorIS5_EEEERKNS3_IiNS6_IiEEEE($this,$vinfos,$vfree) {
 $this = $this|0;
 $vinfos = $vinfos|0;
 $vfree = $vfree|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN6ikfast14IkSolutionBaseIdEC2Ev($this);
 HEAP32[$this>>2] = (424);
 $0 = ((($this)) + 4|0);
 $1 = ((($this)) + 16|0);
 $2 = ($0|0)==($vinfos|0);
 ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;HEAP32[$0+12>>2]=0|0;HEAP32[$0+16>>2]=0|0;HEAP32[$0+20>>2]=0|0;
 if (!($2)) {
  $3 = HEAP32[$vinfos>>2]|0;
  $4 = ((($vinfos)) + 4|0);
  $5 = HEAP32[$4>>2]|0;
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_($0,$3,$5);
 }
 $6 = ($1|0)==($vfree|0);
 if ($6) {
  return;
 }
 $7 = HEAP32[$vfree>>2]|0;
 $8 = ((($vfree)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 __ZNSt3__16vectorIiNS_9allocatorIiEEE6assignIPiEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_($1,$7,$9);
 return;
}
function __ZNSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE9push_backERKS3_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__Znwj(36)|0);
 $1 = ((($0)) + 8|0);
 __ZN6ikfast10IkSolutionIdEC2ERKS1_($1,$__x);
 $2 = ((($0)) + 4|0);
 HEAP32[$2>>2] = $this;
 $3 = HEAP32[$this>>2]|0;
 HEAP32[$0>>2] = $3;
 $4 = ((($3)) + 4|0);
 HEAP32[$4>>2] = $0;
 HEAP32[$this>>2] = $0;
 $5 = ((($this)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (($6) + 1)|0;
 HEAP32[$5>>2] = $7;
 return;
}
function __ZN6ikfast10IkSolutionIdED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (424);
 $0 = ((($this)) + 16|0);
 __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($0);
 $1 = ((($this)) + 4|0);
 __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($1);
 return;
}
function ___clang_call_terminate($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 (___cxa_begin_catch(($0|0))|0);
 __ZSt9terminatev();
 // unreachable;
}
function __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_last2$i$i = 0, $scevgep$i$i = 0, $scevgep4$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ($0|0)==(0|0);
 if ($1) {
  return;
 }
 $2 = ((($this)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==($0|0);
 if (!($4)) {
  $scevgep$i$i = ((($3)) + -4|0);
  $5 = $scevgep$i$i;
  $__new_last2$i$i = $0;
  $6 = (($5) - ($__new_last2$i$i))|0;
  $7 = $6 >>> 2;
  $8 = $7 ^ -1;
  $scevgep4$i$i = (($3) + ($8<<2)|0);
  HEAP32[$2>>2] = $scevgep4$i$i;
 }
 $9 = HEAP32[$this>>2]|0;
 __ZdlPv($9);
 return;
}
function __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_last2$i$i = 0, $scevgep$i$i = 0, $scevgep4$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ($0|0)==(0|0);
 if ($1) {
  return;
 }
 $2 = ((($this)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==($0|0);
 if (!($4)) {
  $scevgep$i$i = ((($3)) + -24|0);
  $5 = $scevgep$i$i;
  $__new_last2$i$i = $0;
  $6 = (($5) - ($__new_last2$i$i))|0;
  $7 = (($6>>>0) / 24)&-1;
  $8 = $7 ^ -1;
  $scevgep4$i$i = (($3) + (($8*24)|0)|0);
  HEAP32[$2>>2] = $scevgep4$i$i;
 }
 $9 = HEAP32[$this>>2]|0;
 __ZdlPv($9);
 return;
}
function __ZN6ikfast10IkSolutionIdED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN6ikfast10IkSolutionIdED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNK6ikfast10IkSolutionIdE11GetSolutionEPdPKd($this,$solution,$freevalues) {
 $this = $this|0;
 $solution = $solution|0;
 $freevalues = $freevalues|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0.0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0.0, $21 = 0, $22 = 0.0, $23 = 0.0, $24 = 0, $25 = 0.0, $26 = 0.0;
 var $27 = 0, $28 = 0, $29 = 0.0, $3 = 0, $30 = 0, $31 = 0.0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i$01 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($1|0)==($3|0);
 if ($4) {
  return;
 }
 $5 = HEAP32[$0>>2]|0;
 $6 = HEAP32[$2>>2]|0;
 $7 = $5;
 $8 = $6;
 $9 = (($7) - ($8))|0;
 $10 = (($9|0) / 24)&-1;
 $12 = $3;$i$01 = 0;
 while(1) {
  $11 = (((($12) + (($i$01*24)|0)|0)) + 16|0);
  $13 = HEAP8[$11>>0]|0;
  $14 = ($13<<24>>24)<(0);
  do {
   if ($14) {
    $15 = (((($12) + (($i$01*24)|0)|0)) + 8|0);
    $16 = +HEAPF64[$15>>3];
    $17 = (($solution) + ($i$01<<3)|0);
    HEAPF64[$17>>3] = $16;
   } else {
    $18 = $13 << 24 >> 24;
    $19 = (($freevalues) + ($18<<3)|0);
    $20 = +HEAPF64[$19>>3];
    $21 = (($12) + (($i$01*24)|0)|0);
    $22 = +HEAPF64[$21>>3];
    $23 = $20 * $22;
    $24 = (((($12) + (($i$01*24)|0)|0)) + 8|0);
    $25 = +HEAPF64[$24>>3];
    $26 = $23 + $25;
    $27 = (($solution) + ($i$01<<3)|0);
    HEAPF64[$27>>3] = $26;
    $28 = $26 > 3.14159265358979;
    if ($28) {
     $29 = $26 + -6.2831853071795898;
     HEAPF64[$27>>3] = $29;
     break;
    }
    $30 = $26 < -3.14159265358979;
    if ($30) {
     $31 = $26 + 6.2831853071795898;
     HEAPF64[$27>>3] = $31;
    }
   }
  } while(0);
  $32 = (($i$01) + 1)|0;
  $33 = ($32>>>0)<($10>>>0);
  if ($33) {
   $12 = $6;$i$01 = $32;
  } else {
   break;
  }
 }
 return;
}
function __ZNK6ikfast10IkSolutionIdE11GetSolutionERNSt3__16vectorIdNS2_9allocatorIdEEEERKS6_($this,$solution,$freevalues) {
 $this = $this|0;
 $solution = $solution|0;
 $freevalues = $freevalues|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (FUNCTION_TABLE_ii[$2 & 63]($this)|0);
 __ZNSt3__16vectorIdNS_9allocatorIdEEE6resizeEj($solution,$3);
 $4 = HEAP32[$this>>2]|0;
 $5 = ((($4)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (__ZNSt3__16vectorIdNS_9allocatorIdEEE2atEj($solution,0)|0);
 $8 = ((($freevalues)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = HEAP32[$freevalues>>2]|0;
 $11 = ($9|0)==($10|0);
 if ($11) {
  $13 = 0;
  FUNCTION_TABLE_viii[$6 & 3]($this,$7,$13);
  return;
 }
 $12 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE2atEj($freevalues,0)|0);
 $13 = $12;
 FUNCTION_TABLE_viii[$6 & 3]($this,$7,$13);
 return;
}
function __ZNK6ikfast10IkSolutionIdE7GetFreeEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 16|0);
 return ($0|0);
}
function __ZNK6ikfast10IkSolutionIdE6GetDOFEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $1;
 $5 = $3;
 $6 = (($4) - ($5))|0;
 $7 = (($6|0) / 24)&-1;
 return ($7|0);
}
function __ZNK6ikfast10IkSolutionIdE8ValidateEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0.0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i$02 = 0, $or$cond = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($1|0)==($3|0);
 if ($4) {
  return;
 } else {
  $14 = $3;$i$02 = 0;
 }
 while(1) {
  $13 = (((($14) + (($i$02*24)|0)|0)) + 18|0);
  $15 = HEAP8[$13>>0]|0;
  if ((($15<<24>>24) == -1)) {
   label = 4;
   break;
  } else if (!((($15<<24>>24) == 0))) {
   $17 = (((($14) + (($i$02*24)|0)|0)) + 19|0);
   $18 = HEAP8[$17>>0]|0;
   $19 = ($18&255)<($15&255);
   if (!($19)) {
    label = 6;
    break;
   }
   $21 = (((($14) + (($i$02*24)|0)|0)) + 20|0);
   $22 = HEAP8[$21>>0]|0;
   $23 = ($22<<24>>24)==(-1);
   $24 = ($22&255)<($15&255);
   $or$cond = $23 | $24;
   if (!($or$cond)) {
    label = 8;
    break;
   }
  }
  $26 = HEAP32[$2>>2]|0;
  $27 = (((($26) + (($i$02*24)|0)|0)) + 8|0);
  $28 = +HEAPF64[$27>>3];
  (__Z13__DOUBLE_BITSd($28)|0);
  $29 = tempRet0;
  $30 = $29 & 2146435072;
  $31 = ($30>>>0)<(2146435072);
  $32 = (0)<(0);
  $33 = ($30|0)==(2146435072);
  $34 = $33 & $32;
  $35 = $31 | $34;
  $11 = (($i$02) + 1)|0;
  if (!($35)) {
   label = 10;
   break;
  }
  $5 = HEAP32[$0>>2]|0;
  $6 = HEAP32[$2>>2]|0;
  $7 = $5;
  $8 = $6;
  $9 = (($7) - ($8))|0;
  $10 = (($9|0) / 24)&-1;
  $12 = ($11>>>0)<($10>>>0);
  if ($12) {
   $14 = $6;$i$02 = $11;
  } else {
   label = 11;
   break;
  }
 }
 if ((label|0) == 4) {
  $16 = (___cxa_allocate_exception(8)|0);
  __ZNSt13runtime_errorC2EPKc($16,472);
  ___cxa_throw(($16|0),(1936|0),(35|0));
  // unreachable;
 }
 else if ((label|0) == 6) {
  $20 = (___cxa_allocate_exception(8)|0);
  __ZNSt13runtime_errorC2EPKc($20,512);
  ___cxa_throw(($20|0),(1936|0),(35|0));
  // unreachable;
 }
 else if ((label|0) == 8) {
  $25 = (___cxa_allocate_exception(8)|0);
  __ZNSt13runtime_errorC2EPKc($25,552);
  ___cxa_throw(($25|0),(1936|0),(35|0));
  // unreachable;
 }
 else if ((label|0) == 10) {
  $36 = (___cxa_allocate_exception(8)|0);
  __ZNSt13runtime_errorC2EPKc($36,592);
  ___cxa_throw(($36|0),(1936|0),(35|0));
  // unreachable;
 }
 else if ((label|0) == 11) {
  return;
 }
}
function __ZNK6ikfast10IkSolutionIdE18GetSolutionIndicesERNSt3__16vectorIjNS2_9allocatorIjEEEE($this,$v) {
 $this = $this|0;
 $v = $v|0;
 var $$lcssa5 = 0, $$lcssa6 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $8 = 0, $9 = 0, $exitcond = 0, $exitcond18 = 0, $i$015 = 0;
 var $i$015$in = 0, $j$07 = 0, $j1$010 = 0, $j2$012 = 0, $or$cond = 0, $or$cond19 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $0 = sp + 4|0;
 $1 = sp;
 __ZNSt3__16vectorIjNS_9allocatorIjEEE6resizeEj($v,0);
 HEAP32[$0>>2] = 0;
 $2 = ((($v)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($v)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($3|0)==($5|0);
 if ($6) {
  __ZNSt3__16vectorIjNS_9allocatorIjEEE21__push_back_slow_pathIKjEEvRT_($v,$0);
 } else {
  HEAP32[$3>>2] = 0;
  $7 = HEAP32[$2>>2]|0;
  $8 = ((($7)) + 4|0);
  HEAP32[$2>>2] = $8;
 }
 $9 = ((($this)) + 8|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ((($this)) + 4|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = $10;
 $14 = $12;
 $15 = (($13) - ($14))|0;
 $16 = ($15|0)>(0);
 if (!($16)) {
  STACKTOP = sp;return;
 }
 $17 = (($15|0) / 24)&-1;
 $i$015$in = $17;
 while(1) {
  $i$015 = (($i$015$in) + -1)|0;
  $18 = HEAP32[$11>>2]|0;
  $19 = (((($18) + (($i$015*24)|0)|0)) + 18|0);
  $20 = HEAP8[$19>>0]|0;
  if (!((($20<<24>>24) == 0) | (($20<<24>>24) == 1) | (($20<<24>>24) == -1))) {
   $21 = HEAP32[$2>>2]|0;
   $22 = HEAP32[$v>>2]|0;
   $23 = ($21|0)==($22|0);
   $24 = HEAP32[$11>>2]|0;
   if ($23) {
    $$lcssa5 = 0;$$lcssa6 = $24;
   } else {
    $25 = HEAP32[$2>>2]|0;
    $26 = HEAP32[$v>>2]|0;
    $27 = $25;
    $28 = $26;
    $29 = (($27) - ($28))|0;
    $30 = $29 >> 2;
    $31 = HEAP32[$11>>2]|0;
    $33 = $24;$37 = $22;$j$07 = 0;
    while(1) {
     $32 = (((($33) + (($i$015*24)|0)|0)) + 18|0);
     $34 = HEAP8[$32>>0]|0;
     $35 = $34&255;
     $36 = (($37) + ($j$07<<2)|0);
     $38 = HEAP32[$36>>2]|0;
     $39 = Math_imul($38, $35)|0;
     HEAP32[$36>>2] = $39;
     $40 = (($j$07) + 1)|0;
     $41 = ($40>>>0)<($30>>>0);
     if ($41) {
      $33 = $31;$37 = $26;$j$07 = $40;
     } else {
      $$lcssa5 = $30;$$lcssa6 = $31;
      break;
     }
    }
   }
   $42 = (((($$lcssa6) + (($i$015*24)|0)|0)) + 20|0);
   $43 = HEAP8[$42>>0]|0;
   $44 = ($43<<24>>24)==(-1);
   $45 = ($$lcssa5|0)==(0);
   $or$cond = $44 | $45;
   if (!($or$cond)) {
    $j1$010 = 0;
    while(1) {
     $46 = HEAP32[$v>>2]|0;
     $47 = (($46) + ($j1$010<<2)|0);
     $48 = HEAP32[$47>>2]|0;
     $49 = HEAP32[$11>>2]|0;
     $50 = (((($49) + (($i$015*24)|0)|0)) + 20|0);
     $51 = HEAP8[$50>>0]|0;
     $52 = $51&255;
     $53 = (($52) + ($48))|0;
     HEAP32[$1>>2] = $53;
     $54 = HEAP32[$2>>2]|0;
     $55 = HEAP32[$4>>2]|0;
     $56 = ($54|0)==($55|0);
     if ($56) {
      __ZNSt3__16vectorIjNS_9allocatorIjEEE21__push_back_slow_pathIKjEEvRT_($v,$1);
     } else {
      HEAP32[$54>>2] = $53;
      $57 = HEAP32[$2>>2]|0;
      $58 = ((($57)) + 4|0);
      HEAP32[$2>>2] = $58;
     }
     $59 = (($j1$010) + 1)|0;
     $exitcond = ($59|0)==($$lcssa5|0);
     if ($exitcond) {
      break;
     } else {
      $j1$010 = $59;
     }
    }
   }
   $60 = HEAP32[$11>>2]|0;
   $61 = (((($60) + (($i$015*24)|0)|0)) + 19|0);
   $62 = HEAP8[$61>>0]|0;
   $63 = ($62<<24>>24)==(-1);
   $64 = ($$lcssa5|0)==(0);
   $or$cond19 = $63 | $64;
   if (!($or$cond19)) {
    $j2$012 = 0;
    while(1) {
     $66 = HEAP32[$11>>2]|0;
     $67 = (((($66) + (($i$015*24)|0)|0)) + 19|0);
     $68 = HEAP8[$67>>0]|0;
     $69 = $68&255;
     $70 = HEAP32[$v>>2]|0;
     $71 = (($70) + ($j2$012<<2)|0);
     $72 = HEAP32[$71>>2]|0;
     $73 = (($72) + ($69))|0;
     HEAP32[$71>>2] = $73;
     $74 = (($j2$012) + 1)|0;
     $exitcond18 = ($74|0)==($$lcssa5|0);
     if ($exitcond18) {
      break;
     } else {
      $j2$012 = $74;
     }
    }
   }
  }
  $65 = ($i$015$in|0)>(1);
  if ($65) {
   $i$015$in = $i$015;
  } else {
   break;
  }
 }
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE6resizeEj($this,$__sz) {
 $this = $this|0;
 $__sz = $__sz|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_last2$i$i = 0, $scevgep$i$i = 0, $scevgep4$i$i = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$this>>2]|0;
 $3 = $1;
 $4 = $2;
 $5 = (($3) - ($4))|0;
 $6 = $5 >> 2;
 $7 = ($6>>>0)<($__sz>>>0);
 if ($7) {
  $8 = (($__sz) - ($6))|0;
  __ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEj($this,$8);
  return;
 }
 $9 = ($6>>>0)>($__sz>>>0);
 if (!($9)) {
  return;
 }
 $10 = (($2) + ($__sz<<2)|0);
 $11 = ($1|0)==($10|0);
 if ($11) {
  return;
 }
 $scevgep$i$i = ((($1)) + -4|0);
 $12 = $scevgep$i$i;
 $__new_last2$i$i = $10;
 $13 = (($12) - ($__new_last2$i$i))|0;
 $14 = $13 >>> 2;
 $15 = $14 ^ -1;
 $scevgep4$i$i = (($1) + ($15<<2)|0);
 HEAP32[$0>>2] = $scevgep4$i$i;
 return;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE21__push_back_slow_pathIKjEEvRT_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $$0$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__v = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $__v = sp;
 $0 = ((($this)) + 8|0);
 $1 = ((($this)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$this>>2]|0;
 $4 = $2;
 $5 = $3;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 2;
 $8 = (($7) + 1)|0;
 $9 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE8max_sizeEv($this)|0);
 $10 = ($9>>>0)<($8>>>0);
 if ($10) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $11 = ((($this)) + 8|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = HEAP32[$this>>2]|0;
 $14 = $12;
 $15 = $13;
 $16 = (($14) - ($15))|0;
 $17 = $16 >> 2;
 $18 = $9 >>> 1;
 $19 = ($17>>>0)<($18>>>0);
 if ($19) {
  $20 = $16 >> 1;
  $21 = ($20>>>0)<($8>>>0);
  $22 = $21 ? $8 : $20;
  $$0$i = $22;
 } else {
  $$0$i = $9;
 }
 $23 = HEAP32[$1>>2]|0;
 $24 = HEAP32[$this>>2]|0;
 $25 = $23;
 $26 = $24;
 $27 = (($25) - ($26))|0;
 $28 = $27 >> 2;
 __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEEC2EjjS3_($__v,$$0$i,$28,$0);
 $29 = ((($__v)) + 8|0);
 $30 = HEAP32[$29>>2]|0;
 $31 = HEAP32[$__x>>2]|0;
 HEAP32[$30>>2] = $31;
 $32 = HEAP32[$29>>2]|0;
 $33 = ((($32)) + 4|0);
 HEAP32[$29>>2] = $33;
 __ZNSt3__16vectorIjNS_9allocatorIjEEE26__swap_out_circular_bufferERNS_14__split_bufferIjRS2_EE($this,$__v);
 __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEED2Ev($__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorIjNS_9allocatorIjEEE8max_sizeEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1073741823;
}
function __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEEC2EjjS3_($this,$__cap,$__start,$__a) {
 $this = $this|0;
 $__cap = $__cap|0;
 $__start = $__start|0;
 $__a = $__a|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($this)) + 16|0);
 HEAP32[$1>>2] = $__a;
 $2 = ($__cap|0)==(0);
 if ($2) {
  $5 = 0;
 } else {
  $3 = $__cap << 2;
  $4 = (__Znwj($3)|0);
  $5 = $4;
 }
 HEAP32[$this>>2] = $5;
 $6 = (($5) + ($__start<<2)|0);
 $7 = ((($this)) + 8|0);
 HEAP32[$7>>2] = $6;
 $8 = ((($this)) + 4|0);
 HEAP32[$8>>2] = $6;
 $9 = HEAP32[$this>>2]|0;
 $10 = (($9) + ($__cap<<2)|0);
 $11 = ((($this)) + 12|0);
 HEAP32[$11>>2] = $10;
 return;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE26__swap_out_circular_bufferERNS_14__split_bufferIjRS2_EE($this,$__v) {
 $this = $this|0;
 $__v = $__v|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($this)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($__v)) + 4|0);
 $4 = $2;
 $5 = $0;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 2;
 $8 = HEAP32[$3>>2]|0;
 $9 = (0 - ($7))|0;
 $10 = (($8) + ($9<<2)|0);
 HEAP32[$3>>2] = $10;
 _memcpy(($10|0),($0|0),($6|0))|0;
 $11 = HEAP32[$this>>2]|0;
 $12 = HEAP32[$3>>2]|0;
 HEAP32[$this>>2] = $12;
 HEAP32[$3>>2] = $11;
 $13 = ((($__v)) + 8|0);
 $14 = HEAP32[$1>>2]|0;
 $15 = HEAP32[$13>>2]|0;
 HEAP32[$1>>2] = $15;
 HEAP32[$13>>2] = $14;
 $16 = ((($this)) + 8|0);
 $17 = ((($__v)) + 12|0);
 $18 = HEAP32[$16>>2]|0;
 $19 = HEAP32[$17>>2]|0;
 HEAP32[$16>>2] = $19;
 HEAP32[$17>>2] = $18;
 $20 = HEAP32[$3>>2]|0;
 HEAP32[$__v>>2] = $20;
 return;
}
function __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_last2$i$i$i = 0, $scevgep$i$i$i = 0, $scevgep4$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==($1|0);
 if (!($4)) {
  $scevgep$i$i$i = ((($3)) + -4|0);
  $5 = $scevgep$i$i$i;
  $__new_last2$i$i$i = $1;
  $6 = (($5) - ($__new_last2$i$i$i))|0;
  $7 = $6 >>> 2;
  $8 = $7 ^ -1;
  $scevgep4$i$i$i = (($3) + ($8<<2)|0);
  HEAP32[$2>>2] = $scevgep4$i$i$i;
 }
 $9 = HEAP32[$this>>2]|0;
 $10 = ($9|0)==(0|0);
 if ($10) {
  return;
 }
 __ZdlPv($9);
 return;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$0$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__v = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $__v = sp;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $1;
 $5 = $3;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 2;
 $8 = ($7>>>0)<($__n>>>0);
 if (!($8)) {
  __ZNSt3__16vectorIjNS_9allocatorIjEEE18__construct_at_endEj($this,$__n);
  STACKTOP = sp;return;
 }
 $9 = ((($this)) + 8|0);
 $10 = HEAP32[$this>>2]|0;
 $11 = $10;
 $12 = (($5) - ($11))|0;
 $13 = $12 >> 2;
 $14 = (($13) + ($__n))|0;
 $15 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE8max_sizeEv($this)|0);
 $16 = ($15>>>0)<($14>>>0);
 if ($16) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $17 = ((($this)) + 8|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = HEAP32[$this>>2]|0;
 $20 = $18;
 $21 = $19;
 $22 = (($20) - ($21))|0;
 $23 = $22 >> 2;
 $24 = $15 >>> 1;
 $25 = ($23>>>0)<($24>>>0);
 if ($25) {
  $26 = $22 >> 1;
  $27 = ($26>>>0)<($14>>>0);
  $28 = $27 ? $14 : $26;
  $$0$i = $28;
 } else {
  $$0$i = $15;
 }
 $29 = HEAP32[$2>>2]|0;
 $30 = HEAP32[$this>>2]|0;
 $31 = $29;
 $32 = $30;
 $33 = (($31) - ($32))|0;
 $34 = $33 >> 2;
 __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEEC2EjjS3_($__v,$$0$i,$34,$9);
 __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE18__construct_at_endEj($__v,$__n);
 __ZNSt3__16vectorIjNS_9allocatorIjEEE26__swap_out_circular_bufferERNS_14__split_bufferIjRS2_EE($this,$__v);
 __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEED2Ev($__v);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$promoted = 0, $0 = 0, $1 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $$promoted = HEAP32[$0>>2]|0;
 $1 = $__n << 2;
 _memset(($$promoted|0),0,($1|0))|0;
 $scevgep = (($$promoted) + ($__n<<2)|0);
 HEAP32[$0>>2] = $scevgep;
 return;
}
function __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$promoted = 0, $0 = 0, $1 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $$promoted = HEAP32[$0>>2]|0;
 $1 = $__n << 2;
 _memset(($$promoted|0),0,($1|0))|0;
 $scevgep = (($$promoted) + ($__n<<2)|0);
 HEAP32[$0>>2] = $scevgep;
 return;
}
function __Z13__DOUBLE_BITSd($__f) {
 $__f = +$__f;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $__f;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 tempRet0 = ($1);
 return ($0|0);
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE6resizeEj($this,$__sz) {
 $this = $this|0;
 $__sz = $__sz|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_last2$i$i = 0, $scevgep$i$i = 0, $scevgep4$i$i = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$this>>2]|0;
 $3 = $1;
 $4 = $2;
 $5 = (($3) - ($4))|0;
 $6 = $5 >> 3;
 $7 = ($6>>>0)<($__sz>>>0);
 if ($7) {
  $8 = (($__sz) - ($6))|0;
  __ZNSt3__16vectorIdNS_9allocatorIdEEE8__appendEj($this,$8);
  return;
 }
 $9 = ($6>>>0)>($__sz>>>0);
 if (!($9)) {
  return;
 }
 $10 = (($2) + ($__sz<<3)|0);
 $11 = ($1|0)==($10|0);
 if ($11) {
  return;
 }
 $scevgep$i$i = ((($1)) + -8|0);
 $12 = $scevgep$i$i;
 $__new_last2$i$i = $10;
 $13 = (($12) - ($__new_last2$i$i))|0;
 $14 = $13 >>> 3;
 $15 = $14 ^ -1;
 $scevgep4$i$i = (($1) + ($15<<3)|0);
 HEAP32[$0>>2] = $scevgep4$i$i;
 return;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE2atEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$this>>2]|0;
 $3 = $1;
 $4 = $2;
 $5 = (($3) - ($4))|0;
 $6 = $5 >> 3;
 $7 = ($6>>>0)>($__n>>>0);
 if ($7) {
  $8 = HEAP32[$this>>2]|0;
  $9 = (($8) + ($__n<<3)|0);
  return ($9|0);
 } else {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv($this);
  // unreachable;
 }
 return (0)|0;
}
function __ZNKSt3__16vectorIdNS_9allocatorIdEEE2atEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$this>>2]|0;
 $3 = $1;
 $4 = $2;
 $5 = (($3) - ($4))|0;
 $6 = $5 >> 3;
 $7 = ($6>>>0)>($__n>>>0);
 if ($7) {
  $8 = HEAP32[$this>>2]|0;
  $9 = (($8) + ($__n<<3)|0);
  return ($9|0);
 } else {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv($this);
  // unreachable;
 }
 return (0)|0;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE8__appendEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$0$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__v = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $__v = sp;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $1;
 $5 = $3;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 3;
 $8 = ($7>>>0)<($__n>>>0);
 if (!($8)) {
  __ZNSt3__16vectorIdNS_9allocatorIdEEE18__construct_at_endEj($this,$__n);
  STACKTOP = sp;return;
 }
 $9 = ((($this)) + 8|0);
 $10 = HEAP32[$this>>2]|0;
 $11 = $10;
 $12 = (($5) - ($11))|0;
 $13 = $12 >> 3;
 $14 = (($13) + ($__n))|0;
 $15 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE8max_sizeEv($this)|0);
 $16 = ($15>>>0)<($14>>>0);
 if ($16) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $17 = ((($this)) + 8|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = HEAP32[$this>>2]|0;
 $20 = $18;
 $21 = $19;
 $22 = (($20) - ($21))|0;
 $23 = $22 >> 3;
 $24 = $15 >>> 1;
 $25 = ($23>>>0)<($24>>>0);
 if ($25) {
  $26 = $22 >> 2;
  $27 = ($26>>>0)<($14>>>0);
  $28 = $27 ? $14 : $26;
  $$0$i = $28;
 } else {
  $$0$i = $15;
 }
 $29 = HEAP32[$2>>2]|0;
 $30 = HEAP32[$this>>2]|0;
 $31 = $29;
 $32 = $30;
 $33 = (($31) - ($32))|0;
 $34 = $33 >> 3;
 __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEEC2EjjS3_($__v,$$0$i,$34,$9);
 __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE18__construct_at_endEj($__v,$__n);
 __ZNSt3__16vectorIdNS_9allocatorIdEEE26__swap_out_circular_bufferERNS_14__split_bufferIdRS2_EE($this,$__v);
 __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEED2Ev($__v);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$promoted = 0, $0 = 0, $1 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $$promoted = HEAP32[$0>>2]|0;
 $1 = $__n << 3;
 _memset(($$promoted|0),0,($1|0))|0;
 $scevgep = (($$promoted) + ($__n<<3)|0);
 HEAP32[$0>>2] = $scevgep;
 return;
}
function __ZNKSt3__16vectorIdNS_9allocatorIdEEE8max_sizeEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 536870911;
}
function __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEEC2EjjS3_($this,$__cap,$__start,$__a) {
 $this = $this|0;
 $__cap = $__cap|0;
 $__start = $__start|0;
 $__a = $__a|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($this)) + 16|0);
 HEAP32[$1>>2] = $__a;
 $2 = ($__cap|0)==(0);
 if ($2) {
  $5 = 0;
 } else {
  $3 = $__cap << 3;
  $4 = (__Znwj($3)|0);
  $5 = $4;
 }
 HEAP32[$this>>2] = $5;
 $6 = (($5) + ($__start<<3)|0);
 $7 = ((($this)) + 8|0);
 HEAP32[$7>>2] = $6;
 $8 = ((($this)) + 4|0);
 HEAP32[$8>>2] = $6;
 $9 = HEAP32[$this>>2]|0;
 $10 = (($9) + ($__cap<<3)|0);
 $11 = ((($this)) + 12|0);
 HEAP32[$11>>2] = $10;
 return;
}
function __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$promoted = 0, $0 = 0, $1 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $$promoted = HEAP32[$0>>2]|0;
 $1 = $__n << 3;
 _memset(($$promoted|0),0,($1|0))|0;
 $scevgep = (($$promoted) + ($__n<<3)|0);
 HEAP32[$0>>2] = $scevgep;
 return;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE26__swap_out_circular_bufferERNS_14__split_bufferIdRS2_EE($this,$__v) {
 $this = $this|0;
 $__v = $__v|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($this)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($__v)) + 4|0);
 $4 = $2;
 $5 = $0;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 3;
 $8 = HEAP32[$3>>2]|0;
 $9 = (0 - ($7))|0;
 $10 = (($8) + ($9<<3)|0);
 HEAP32[$3>>2] = $10;
 _memcpy(($10|0),($0|0),($6|0))|0;
 $11 = HEAP32[$this>>2]|0;
 $12 = HEAP32[$3>>2]|0;
 HEAP32[$this>>2] = $12;
 HEAP32[$3>>2] = $11;
 $13 = ((($__v)) + 8|0);
 $14 = HEAP32[$1>>2]|0;
 $15 = HEAP32[$13>>2]|0;
 HEAP32[$1>>2] = $15;
 HEAP32[$13>>2] = $14;
 $16 = ((($this)) + 8|0);
 $17 = ((($__v)) + 12|0);
 $18 = HEAP32[$16>>2]|0;
 $19 = HEAP32[$17>>2]|0;
 HEAP32[$16>>2] = $19;
 HEAP32[$17>>2] = $18;
 $20 = HEAP32[$3>>2]|0;
 HEAP32[$__v>>2] = $20;
 return;
}
function __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_last2$i$i$i = 0, $scevgep$i$i$i = 0, $scevgep4$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==($1|0);
 if (!($4)) {
  $scevgep$i$i$i = ((($3)) + -8|0);
  $5 = $scevgep$i$i$i;
  $__new_last2$i$i$i = $1;
  $6 = (($5) - ($__new_last2$i$i$i))|0;
  $7 = $6 >>> 3;
  $8 = $7 ^ -1;
  $scevgep4$i$i$i = (($3) + ($8<<3)|0);
  HEAP32[$2>>2] = $scevgep4$i$i$i;
 }
 $9 = HEAP32[$this>>2]|0;
 $10 = ($9|0)==(0|0);
 if ($10) {
  return;
 }
 __ZdlPv($9);
 return;
}
function __ZN6ikfast10IkSolutionIdEC2ERKS1_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN6ikfast14IkSolutionBaseIdEC2ERKS1_($this,$0);
 HEAP32[$this>>2] = (424);
 $1 = ((($this)) + 4|0);
 $2 = ((($0)) + 4|0);
 __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2ERKS6_($1,$2);
 $3 = ((($this)) + 16|0);
 $4 = ((($0)) + 16|0);
 __ZNSt3__16vectorIiNS_9allocatorIiEEEC2ERKS3_($3,$4);
 return;
}
function __ZN6ikfast14IkSolutionBaseIdEC2ERKS1_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (696);
 return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2ERKS6_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = 0;
 $0 = ((($this)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($this)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__x)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$__x>>2]|0;
 $5 = ($3|0)==($4|0);
 if ($5) {
  return;
 }
 $6 = $3;
 $7 = $4;
 $8 = (($6) - ($7))|0;
 $9 = (($8|0) / 24)&-1;
 __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8allocateEj($this,$9);
 $10 = HEAP32[$__x>>2]|0;
 $11 = HEAP32[$2>>2]|0;
 __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($this,$10,$11);
 return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEEC2ERKS3_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = 0;
 $0 = ((($this)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($this)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__x)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$__x>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = $7 >> 2;
 $9 = ($8|0)==(0);
 if ($9) {
  return;
 }
 __ZNSt3__16vectorIiNS_9allocatorIiEEE8allocateEj($this,$8);
 $10 = HEAP32[$__x>>2]|0;
 $11 = HEAP32[$2>>2]|0;
 __ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endIPiEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_($this,$10,$11);
 return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE8allocateEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE8max_sizeEv($this)|0);
 $1 = ($0>>>0)<($__n>>>0);
 if ($1) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 } else {
  $2 = $__n << 2;
  $3 = (__Znwj($2)|0);
  $4 = ((($this)) + 4|0);
  HEAP32[$4>>2] = $3;
  HEAP32[$this>>2] = $3;
  $5 = (($3) + ($__n<<2)|0);
  $6 = ((($this)) + 8|0);
  HEAP32[$6>>2] = $5;
  return;
 }
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endIPiEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$01 = 0, $$promoted = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__first3 = 0, $scevgep = 0, $scevgep5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__first|0)==($__last|0);
 if ($0) {
  return;
 }
 $__first3 = $__first;
 $1 = ((($this)) + 4|0);
 $$promoted = HEAP32[$1>>2]|0;
 $scevgep = ((($__last)) + -4|0);
 $2 = $scevgep;
 $3 = (($2) - ($__first3))|0;
 $4 = $3 >>> 2;
 $5 = (($4) + 1)|0;
 $$01 = $__first;$7 = $$promoted;
 while(1) {
  $6 = HEAP32[$$01>>2]|0;
  HEAP32[$7>>2] = $6;
  $8 = ((($7)) + 4|0);
  $9 = ((($$01)) + 4|0);
  $10 = ($9|0)==($__last|0);
  if ($10) {
   break;
  } else {
   $$01 = $9;$7 = $8;
  }
 }
 $scevgep5 = (($$promoted) + ($5<<2)|0);
 HEAP32[$1>>2] = $scevgep5;
 return;
}
function __ZNKSt3__16vectorIiNS_9allocatorIiEEE8max_sizeEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1073741823;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8allocateEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8max_sizeEv($this)|0);
 $1 = ($0>>>0)<($__n>>>0);
 if ($1) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 } else {
  $2 = ($__n*24)|0;
  $3 = (__Znwj($2)|0);
  $4 = ((($this)) + 4|0);
  HEAP32[$4>>2] = $3;
  HEAP32[$this>>2] = $3;
  $5 = (($3) + (($__n*24)|0)|0);
  $6 = ((($this)) + 8|0);
  HEAP32[$6>>2] = $5;
  return;
 }
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$01 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__first|0)==($__last|0);
 if ($0) {
  return;
 }
 $1 = ((($this)) + 4|0);
 $$01 = $__first;
 while(1) {
  $2 = HEAP32[$1>>2]|0;
  ;HEAP32[$2>>2]=HEAP32[$$01>>2]|0;HEAP32[$2+4>>2]=HEAP32[$$01+4>>2]|0;HEAP32[$2+8>>2]=HEAP32[$$01+8>>2]|0;HEAP32[$2+12>>2]=HEAP32[$$01+12>>2]|0;HEAP32[$2+16>>2]=HEAP32[$$01+16>>2]|0;HEAP32[$2+20>>2]=HEAP32[$$01+20>>2]|0;
  $3 = HEAP32[$1>>2]|0;
  $4 = ((($3)) + 24|0);
  HEAP32[$1>>2] = $4;
  $5 = ((($$01)) + 24|0);
  $6 = ($5|0)==($__last|0);
  if ($6) {
   break;
  } else {
   $$01 = $5;
  }
 }
 return;
}
function __ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8max_sizeEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 178956970;
}
function __ZN6ikfast14IkSolutionBaseIdED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN6ikfast14IkSolutionBaseIdED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNK6ikfast14IkSolutionBaseIdE11GetSolutionERNSt3__16vectorIdNS2_9allocatorIdEEEERKS6_($this,$solution,$freevalues) {
 $this = $this|0;
 $solution = $solution|0;
 $freevalues = $freevalues|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (FUNCTION_TABLE_ii[$2 & 63]($this)|0);
 __ZNSt3__16vectorIdNS_9allocatorIdEEE6resizeEj($solution,$3);
 $4 = HEAP32[$this>>2]|0;
 $5 = ((($4)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (__ZNSt3__16vectorIdNS_9allocatorIdEEE2atEj($solution,0)|0);
 $8 = ((($freevalues)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = HEAP32[$freevalues>>2]|0;
 $11 = ($9|0)==($10|0);
 if ($11) {
  $13 = 0;
  FUNCTION_TABLE_viii[$6 & 3]($this,$7,$13);
  return;
 }
 $12 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE2atEj($freevalues,0)|0);
 $13 = $12;
 FUNCTION_TABLE_viii[$6 & 3]($this,$7,$13);
 return;
}
function __ZN6ikfast14IkSolutionBaseIdEC2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (696);
 return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$0$i = 0, $$__last = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_last2$i$i = 0, $scevgep$i$i = 0, $scevgep4$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__last;
 $1 = $__first;
 $2 = (($0) - ($1))|0;
 $3 = (($2|0) / 24)&-1;
 $4 = ((($this)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = HEAP32[$this>>2]|0;
 $7 = $5;
 $8 = $6;
 $9 = (($7) - ($8))|0;
 $10 = (($9|0) / 24)&-1;
 $11 = ($3>>>0)>($10>>>0);
 if ($11) {
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE10deallocateEv($this);
  $30 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8max_sizeEv($this)|0);
  $31 = ($30>>>0)<($3>>>0);
  if ($31) {
   __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
   // unreachable;
  }
  $32 = HEAP32[$4>>2]|0;
  $33 = HEAP32[$this>>2]|0;
  $34 = $32;
  $35 = $33;
  $36 = (($34) - ($35))|0;
  $37 = (($36|0) / 24)&-1;
  $38 = $30 >>> 1;
  $39 = ($37>>>0)<($38>>>0);
  if ($39) {
   $40 = $37 << 1;
   $41 = ($40>>>0)<($3>>>0);
   $42 = $41 ? $3 : $40;
   $$0$i = $42;
  } else {
   $$0$i = $30;
  }
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8allocateEj($this,$$0$i);
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($this,$__first,$__last);
  return;
 }
 $12 = ((($this)) + 4|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = $13;
 $15 = (($14) - ($8))|0;
 $16 = (($15|0) / 24)&-1;
 $17 = ($3>>>0)>($16>>>0);
 $18 = (($__first) + (($16*24)|0)|0);
 $$__last = $17 ? $18 : $__last;
 $19 = HEAP32[$this>>2]|0;
 $20 = $$__last;
 $21 = (($20) - ($1))|0;
 $22 = (($21|0) / 24)&-1;
 _memmove(($19|0),($__first|0),($21|0))|0;
 $23 = (($19) + (($22*24)|0)|0);
 if ($17) {
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($this,$$__last,$__last);
  return;
 }
 $24 = HEAP32[$12>>2]|0;
 $25 = ($24|0)==($23|0);
 if ($25) {
  return;
 }
 $scevgep$i$i = ((($24)) + -24|0);
 $26 = $scevgep$i$i;
 $__new_last2$i$i = $23;
 $27 = (($26) - ($__new_last2$i$i))|0;
 $28 = (($27>>>0) / 24)&-1;
 $29 = $28 ^ -1;
 $scevgep4$i$i = (($24) + (($29*24)|0)|0);
 HEAP32[$12>>2] = $scevgep4$i$i;
 return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE6assignIPiEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$0$i = 0, $$__last = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_last2$i$i = 0, $scevgep$i$i = 0, $scevgep4$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__last;
 $1 = $__first;
 $2 = (($0) - ($1))|0;
 $3 = $2 >> 2;
 $4 = ((($this)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = HEAP32[$this>>2]|0;
 $7 = $5;
 $8 = $6;
 $9 = (($7) - ($8))|0;
 $10 = $9 >> 2;
 $11 = ($3>>>0)>($10>>>0);
 if ($11) {
  __ZNSt3__16vectorIiNS_9allocatorIiEEE10deallocateEv($this);
  $30 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE8max_sizeEv($this)|0);
  $31 = ($30>>>0)<($3>>>0);
  if ($31) {
   __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
   // unreachable;
  }
  $32 = HEAP32[$4>>2]|0;
  $33 = HEAP32[$this>>2]|0;
  $34 = $32;
  $35 = $33;
  $36 = (($34) - ($35))|0;
  $37 = $36 >> 2;
  $38 = $30 >>> 1;
  $39 = ($37>>>0)<($38>>>0);
  if ($39) {
   $40 = $36 >> 1;
   $41 = ($40>>>0)<($3>>>0);
   $42 = $41 ? $3 : $40;
   $$0$i = $42;
  } else {
   $$0$i = $30;
  }
  __ZNSt3__16vectorIiNS_9allocatorIiEEE8allocateEj($this,$$0$i);
  __ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endIPiEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_($this,$__first,$__last);
  return;
 }
 $12 = ((($this)) + 4|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = $13;
 $15 = (($14) - ($8))|0;
 $16 = $15 >> 2;
 $17 = ($3>>>0)>($16>>>0);
 $18 = (($__first) + ($16<<2)|0);
 $$__last = $17 ? $18 : $__last;
 $19 = HEAP32[$this>>2]|0;
 $20 = $$__last;
 $21 = (($20) - ($1))|0;
 $22 = $21 >> 2;
 _memmove(($19|0),($__first|0),($21|0))|0;
 $23 = (($19) + ($22<<2)|0);
 if ($17) {
  __ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endIPiEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_($this,$$__last,$__last);
  return;
 }
 $24 = HEAP32[$12>>2]|0;
 $25 = ($24|0)==($23|0);
 if ($25) {
  return;
 }
 $scevgep$i$i = ((($24)) + -4|0);
 $26 = $scevgep$i$i;
 $__new_last2$i$i = $23;
 $27 = (($26) - ($__new_last2$i$i))|0;
 $28 = $27 >>> 2;
 $29 = $28 ^ -1;
 $scevgep4$i$i = (($24) + ($29<<2)|0);
 HEAP32[$12>>2] = $scevgep4$i$i;
 return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE10deallocateEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_last2$i$i$i = 0, $scevgep$i$i$i = 0, $scevgep4$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ($0|0)==(0|0);
 if ($1) {
  return;
 }
 $2 = ((($this)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==($0|0);
 if (!($4)) {
  $scevgep$i$i$i = ((($3)) + -4|0);
  $5 = $scevgep$i$i$i;
  $__new_last2$i$i$i = $0;
  $6 = (($5) - ($__new_last2$i$i$i))|0;
  $7 = $6 >>> 2;
  $8 = $7 ^ -1;
  $scevgep4$i$i$i = (($3) + ($8<<2)|0);
  HEAP32[$2>>2] = $scevgep4$i$i$i;
 }
 $9 = HEAP32[$this>>2]|0;
 __ZdlPv($9);
 $10 = ((($this)) + 8|0);
 HEAP32[$10>>2] = 0;
 HEAP32[$2>>2] = 0;
 HEAP32[$this>>2] = 0;
 return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE10deallocateEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_last2$i$i$i = 0, $scevgep$i$i$i = 0, $scevgep4$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ($0|0)==(0|0);
 if ($1) {
  return;
 }
 $2 = ((($this)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==($0|0);
 if (!($4)) {
  $scevgep$i$i$i = ((($3)) + -24|0);
  $5 = $scevgep$i$i$i;
  $__new_last2$i$i$i = $0;
  $6 = (($5) - ($__new_last2$i$i$i))|0;
  $7 = (($6>>>0) / 24)&-1;
  $8 = $7 ^ -1;
  $scevgep4$i$i$i = (($3) + (($8*24)|0)|0);
  HEAP32[$2>>2] = $scevgep4$i$i$i;
 }
 $9 = HEAP32[$this>>2]|0;
 __ZdlPv($9);
 $10 = ((($this)) + 8|0);
 HEAP32[$10>>2] = 0;
 HEAP32[$2>>2] = 0;
 HEAP32[$this>>2] = 0;
 return;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE8allocateEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE8max_sizeEv($this)|0);
 $1 = ($0>>>0)<($__n>>>0);
 if ($1) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 } else {
  $2 = $__n << 3;
  $3 = (__Znwj($2)|0);
  $4 = ((($this)) + 4|0);
  HEAP32[$4>>2] = $3;
  HEAP32[$this>>2] = $3;
  $5 = (($3) + ($__n<<3)|0);
  $6 = ((($this)) + 8|0);
  HEAP32[$6>>2] = $5;
  return;
 }
}
function __ZN6ikfast18IkSolutionListBaseIdEC2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (840);
 return;
}
function __ZN6ikfast18IkSolutionListBaseIdED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN6ikfast18IkSolutionListBaseIdED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __Z6IKasind($f) {
 $f = +$f;
 var $$06 = 0.0, $$sum$i$i$i = 0, $$sum1$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0.0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $ss = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0;
 $0 = sp + 160|0;
 $ss = sp + 16|0;
 $1 = sp;
 $2 = $f > -1.0000020000000001;
 $3 = $f < 1.0000020000000001;
 $or$cond = $2 & $3;
 if (!($or$cond)) {
  $4 = ((($ss)) + 64|0);
  $5 = ((($ss)) + 8|0);
  HEAP32[$5>>2] = (896);
  $6 = ((($ss)) + 12|0);
  HEAP32[$ss>>2] = ((940));
  HEAP32[$4>>2] = ((960));
  $7 = ((($ss)) + 4|0);
  HEAP32[$7>>2] = 0;
  $8 = HEAP32[$ss>>2]|0;
  $9 = ((($8)) + -12|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = (($ss) + ($10)|0);
  __ZNSt3__18ios_base4initEPv($11,$6);
  $12 = ((($ss)) + 64|0);
  $$sum$i$i$i = (($10) + 72)|0;
  $13 = (($ss) + ($$sum$i$i$i)|0);
  HEAP32[$13>>2] = 0;
  $$sum1$i$i$i = (($10) + 76)|0;
  $14 = (($ss) + ($$sum1$i$i$i)|0);
  HEAP32[$14>>2] = -1;
  HEAP32[$ss>>2] = (876);
  HEAP32[$12>>2] = (916);
  HEAP32[$5>>2] = (896);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($6);
  HEAP32[$6>>2] = (976);
  $15 = ((($ss)) + 44|0);
  $16 = ((($ss)) + 60|0);
  ;HEAP32[$15>>2]=0|0;HEAP32[$15+4>>2]=0|0;HEAP32[$15+8>>2]=0|0;HEAP32[$15+12>>2]=0|0;
  HEAP32[$16>>2] = 24;
  ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
  __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($6,$0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
  $17 = ((($ss)) + 8|0);
  $18 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($17,1072)|0);
  $19 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($18,1096)|0);
  $20 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($19,1136)|0);
  $21 = (__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi($20,130)|0);
  $22 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($21,1144)|0);
  $23 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($22,1560)|0);
  $24 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($23,1160)|0);
  $25 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($24,1496)|0);
  (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($25,1192)|0);
  $26 = (___cxa_allocate_exception(8)|0);
  __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($1,$6);
  __ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($26,$1);
  ___cxa_throw(($26|0),(1936|0),(35|0));
  // unreachable;
 }
 $27 = !($f <= -1.0);
 if (!($27)) {
  $$06 = -1.5707963267949001;
  STACKTOP = sp;return (+$$06);
 }
 $28 = !($f >= 1.0);
 if (!($28)) {
  $$06 = 1.5707963267949001;
  STACKTOP = sp;return (+$$06);
 }
 $29 = (+Math_asin((+$f)));
 $$06 = $29;
 STACKTOP = sp;return (+$$06);
}
function __Z5IKabsd($f) {
 $f = +$f;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+Math_abs((+$f)));
 return (+$0);
}
function __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($agg$result,$fy,$fx,$epsilon) {
 $agg$result = $agg$result|0;
 $fy = +$fy;
 $fx = +$fx;
 $epsilon = +$epsilon;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0.0, $18 = 0, $19 = 0.0, $2 = 0, $20 = 0, $21 = 0.0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($agg$result)) + 8|0);
 HEAP8[$0>>0] = 0;
 HEAPF64[$agg$result>>3] = 0.0;
 $1 = (__Z13__DOUBLE_BITSd($fy)|0);
 $2 = tempRet0;
 $3 = $2 & 2147483647;
 $4 = ($3>>>0)>(2146435072);
 $5 = ($1>>>0)>(0);
 $6 = ($3|0)==(2146435072);
 $7 = $6 & $5;
 $8 = $4 | $7;
 if ($8) {
  return;
 }
 $9 = (__Z13__DOUBLE_BITSd($fx)|0);
 $10 = tempRet0;
 $11 = $10 & 2147483647;
 $12 = ($11>>>0)>(2146435072);
 $13 = ($9>>>0)>(0);
 $14 = ($11|0)==(2146435072);
 $15 = $14 & $13;
 $16 = $12 | $15;
 if ($16) {
  return;
 }
 $17 = (+__Z5IKabsd($fy));
 $18 = !($17 >= 1.9999999999999999E-6);
 if ($18) {
  $19 = (+__Z5IKabsd($fx));
  $20 = $19 > 1.9999999999999999E-6;
  if (!($20)) {
   return;
  }
 }
 $21 = (+__Z13IKatan2Simpledd($fy,$fx));
 HEAPF64[$agg$result>>3] = $21;
 HEAP8[$0>>0] = 1;
 return;
}
function __Z6IKsqrtd($f) {
 $f = +$f;
 var $$0 = 0.0, $0 = 0, $1 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = !($f <= 0.0);
 if ($0) {
  $1 = (+Math_sqrt((+$f)));
  $$0 = $1;
 } else {
  $$0 = 0.0;
 }
 return (+$$0);
}
function __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($agg$result,$f,$n) {
 $agg$result = $agg$result|0;
 $f = +$f;
 $n = $n|0;
 var $$01 = 0.0, $0 = 0, $1 = 0, $10 = 0.0, $11 = 0, $12 = 0, $13 = 0, $14 = 0.0, $15 = 0.0, $16 = 0, $17 = 0.0, $18 = 0, $19 = 0.0, $2 = 0, $20 = 0.0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0.0, $9 = 0.0, $num$02 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($agg$result)) + 8|0);
 HEAP8[$0>>0] = 1;
 if ((($n|0) == 0)) {
  HEAPF64[$agg$result>>3] = 1.0;
  return;
 } else if ((($n|0) == 1)) {
  HEAPF64[$agg$result>>3] = $f;
  return;
 } else {
  $1 = ($n|0)<(0);
  if ($1) {
   $2 = $f == 0.0;
   if ($2) {
    HEAP8[$0>>0] = 0;
    HEAPF64[$agg$result>>3] = 1.0E+30;
    return;
   }
   $3 = ($n|0)==(-1);
   if ($3) {
    $4 = 1.0 / $f;
    HEAPF64[$agg$result>>3] = $4;
    return;
   }
  }
  $5 = ($n|0)>(0);
  $6 = (0 - ($n))|0;
  $7 = $5 ? $n : $6;
  if ((($7|0) == 2)) {
   $8 = $f * $f;
   HEAPF64[$agg$result>>3] = $8;
  } else if ((($7|0) == 3)) {
   $9 = $f * $f;
   $10 = $9 * $f;
   HEAPF64[$agg$result>>3] = $10;
  } else {
   HEAPF64[$agg$result>>3] = 1.0;
   $11 = ($7|0)>(0);
   if ($11) {
    $$01 = $f;$num$02 = $7;
    while(1) {
     $12 = $num$02 & 1;
     $13 = ($12|0)==(0);
     if (!($13)) {
      $14 = +HEAPF64[$agg$result>>3];
      $15 = $$01 * $14;
      HEAPF64[$agg$result>>3] = $15;
     }
     $16 = $num$02 >> 1;
     $17 = $$01 * $$01;
     $18 = ($16|0)>(0);
     if ($18) {
      $$01 = $17;$num$02 = $16;
     } else {
      break;
     }
    }
   }
  }
  if (!($1)) {
   return;
  }
  $19 = +HEAPF64[$agg$result>>3];
  $20 = 1.0 / $19;
  HEAPF64[$agg$result>>3] = $20;
  return;
 }
}
function __Z6IKsignd($f) {
 $f = +$f;
 var $$ = 0.0, $$0 = 0.0, $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $f > 0.0;
 $1 = $f < 0.0;
 $$ = $1 ? -1.0 : 0.0;
 $$0 = $0 ? 1.0 : $$;
 return (+$$0);
}
function __Z6IKfmoddd($x,$y) {
 $x = +$x;
 $y = +$y;
 var $$0$lcssa = 0.0, $$01 = 0.0, $0 = 0, $1 = 0.0, $2 = 0, $3 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $x < 0.0;
 if ($0) {
  $$01 = $x;
  while(1) {
   $1 = $$01 + $y;
   $2 = $1 < 0.0;
   if ($2) {
    $$01 = $1;
   } else {
    $$0$lcssa = $1;
    break;
   }
  }
 } else {
  $$0$lcssa = $x;
 }
 $3 = (+_fmod($$0$lcssa,$y));
 return (+$3);
}
function __ZN8IKSolver10polyroots2EPdS0_Ri($rawcoeffs,$rawroots,$numroots) {
 $rawcoeffs = $rawcoeffs|0;
 $rawroots = $rawroots|0;
 $numroots = $numroots|0;
 var $0 = 0, $1 = 0.0, $10 = 0, $11 = 0.0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $2 = 0.0, $20 = 0.0, $21 = 0.0, $22 = 0.0, $23 = 0, $3 = 0.0, $4 = 0.0, $5 = 0;
 var $6 = 0.0, $7 = 0.0, $8 = 0.0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($rawcoeffs)) + 8|0);
 $1 = +HEAPF64[$0>>3];
 $2 = $1 * $1;
 $3 = +HEAPF64[$rawcoeffs>>3];
 $4 = $3 * 4.0;
 $5 = ((($rawcoeffs)) + 16|0);
 $6 = +HEAPF64[$5>>3];
 $7 = $4 * $6;
 $8 = $2 - $7;
 $9 = $8 < 0.0;
 if ($9) {
  HEAP32[$numroots>>2] = 0;
  return;
 }
 $10 = $8 == 0.0;
 if ($10) {
  $11 = $1 * -0.5;
  $12 = $11 / $3;
  HEAPF64[$rawroots>>3] = $12;
  HEAP32[$numroots>>2] = 1;
  return;
 } else {
  $13 = (+__Z6IKsqrtd($8));
  $14 = $13 - $1;
  $15 = $3 * 2.0;
  $16 = $14 / $15;
  HEAPF64[$rawroots>>3] = $16;
  $17 = +HEAPF64[$0>>3];
  $18 = -$17;
  $19 = $18 - $13;
  $20 = +HEAPF64[$rawcoeffs>>3];
  $21 = $20 * 2.0;
  $22 = $19 / $21;
  $23 = ((($rawroots)) + 8|0);
  HEAPF64[$23>>3] = $22;
  HEAP32[$numroots>>2] = 2;
  return;
 }
}
function __Z5IKtand($f) {
 $f = +$f;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+Math_tan((+$f)));
 return (+$0);
}
function __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions) {
 $this = $this|0;
 $solutions = $solutions|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0.0, $1001 = 0, $1002 = 0.0, $1003 = 0, $1004 = 0.0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0;
 var $1015 = 0.0, $1016 = 0, $1017 = 0.0, $1018 = 0.0, $1019 = 0.0, $102 = 0, $1020 = 0, $1021 = 0.0, $1022 = 0, $1023 = 0.0, $1024 = 0.0, $1025 = 0.0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0.0, $103 = 0, $1030 = 0, $1031 = 0.0, $1032 = 0;
 var $1033 = 0.0, $1034 = 0.0, $1035 = 0.0, $1036 = 0.0, $1037 = 0.0, $1038 = 0.0, $1039 = 0.0, $104 = 0, $1040 = 0.0, $1041 = 0.0, $1042 = 0.0, $1043 = 0, $1044 = 0.0, $1045 = 0.0, $1046 = 0.0, $1047 = 0.0, $1048 = 0.0, $1049 = 0.0, $105 = 0, $1050 = 0.0;
 var $1051 = 0.0, $1052 = 0.0, $1053 = 0, $1054 = 0.0, $1055 = 0.0, $1056 = 0.0, $1057 = 0.0, $1058 = 0, $1059 = 0.0, $106 = 0, $1060 = 0.0, $1061 = 0.0, $1062 = 0.0, $1063 = 0.0, $1064 = 0, $1065 = 0.0, $1066 = 0.0, $1067 = 0.0, $1068 = 0.0, $1069 = 0.0;
 var $107 = 0, $1070 = 0.0, $1071 = 0.0, $1072 = 0.0, $1073 = 0.0, $1074 = 0.0, $1075 = 0.0, $1076 = 0.0, $1077 = 0.0, $1078 = 0, $1079 = 0.0, $108 = 0, $1080 = 0, $1081 = 0.0, $1082 = 0.0, $1083 = 0.0, $1084 = 0.0, $1085 = 0.0, $1086 = 0.0, $1087 = 0.0;
 var $1088 = 0.0, $1089 = 0.0, $109 = 0, $1090 = 0.0, $1091 = 0.0, $1092 = 0.0, $1093 = 0.0, $1094 = 0.0, $1095 = 0.0, $1096 = 0.0, $1097 = 0.0, $1098 = 0.0, $1099 = 0.0, $11 = 0, $110 = 0, $1100 = 0.0, $1101 = 0.0, $1102 = 0.0, $1103 = 0.0, $1104 = 0.0;
 var $1105 = 0.0, $1106 = 0.0, $1107 = 0.0, $1108 = 0.0, $1109 = 0.0, $111 = 0, $1110 = 0.0, $1111 = 0.0, $1112 = 0.0, $1113 = 0.0, $1114 = 0.0, $1115 = 0.0, $1116 = 0.0, $1117 = 0.0, $1118 = 0.0, $1119 = 0, $112 = 0, $1120 = 0.0, $1121 = 0.0, $1122 = 0.0;
 var $1123 = 0, $1124 = 0.0, $1125 = 0, $1126 = 0.0, $1127 = 0, $1128 = 0.0, $1129 = 0, $113 = 0, $1130 = 0.0, $1131 = 0, $1132 = 0.0, $1133 = 0, $1134 = 0.0, $1135 = 0, $1136 = 0, $1137 = 0, $1138 = 0.0, $1139 = 0, $114 = 0, $1140 = 0;
 var $1141 = 0, $1142 = 0, $1143 = 0, $1144 = 0, $1145 = 0, $1146 = 0, $1147 = 0, $1148 = 0, $1149 = 0, $115 = 0, $1150 = 0, $1151 = 0, $1152 = 0.0, $1153 = 0, $1154 = 0, $1155 = 0, $1156 = 0, $1157 = 0, $1158 = 0, $1159 = 0;
 var $116 = 0, $1160 = 0, $1161 = 0, $1162 = 0, $1163 = 0, $1164 = 0, $1165 = 0, $1166 = 0.0, $1167 = 0, $1168 = 0, $1169 = 0, $117 = 0, $1170 = 0, $1171 = 0, $1172 = 0, $1173 = 0, $1174 = 0, $1175 = 0, $1176 = 0, $1177 = 0;
 var $1178 = 0, $1179 = 0, $118 = 0, $1180 = 0.0, $1181 = 0, $1182 = 0, $1183 = 0, $1184 = 0, $1185 = 0, $1186 = 0, $1187 = 0, $1188 = 0, $1189 = 0, $119 = 0, $1190 = 0, $1191 = 0, $1192 = 0, $1193 = 0, $1194 = 0.0, $1195 = 0;
 var $1196 = 0, $1197 = 0, $1198 = 0, $1199 = 0, $12 = 0, $120 = 0, $1200 = 0, $1201 = 0, $1202 = 0, $1203 = 0, $1204 = 0, $1205 = 0, $1206 = 0, $1207 = 0, $1208 = 0.0, $1209 = 0, $121 = 0, $1210 = 0, $1211 = 0, $1212 = 0;
 var $1213 = 0, $1214 = 0, $1215 = 0, $1216 = 0, $1217 = 0, $1218 = 0, $1219 = 0, $122 = 0, $1220 = 0, $1221 = 0, $1222 = 0.0, $1223 = 0, $1224 = 0, $1225 = 0, $1226 = 0, $1227 = 0, $1228 = 0, $1229 = 0, $123 = 0, $1230 = 0;
 var $1231 = 0, $1232 = 0, $1233 = 0, $1234 = 0, $1235 = 0, $1236 = 0, $1237 = 0, $1238 = 0, $1239 = 0.0, $124 = 0, $1240 = 0.0, $1241 = 0.0, $1242 = 0.0, $1243 = 0.0, $1244 = 0.0, $1245 = 0.0, $1246 = 0.0, $1247 = 0.0, $1248 = 0.0, $1249 = 0.0;
 var $125 = 0, $1250 = 0, $1251 = 0.0, $1252 = 0.0, $1253 = 0.0, $1254 = 0, $1255 = 0.0, $1256 = 0, $1257 = 0.0, $1258 = 0, $1259 = 0.0, $126 = 0, $1260 = 0, $1261 = 0.0, $1262 = 0, $1263 = 0.0, $1264 = 0.0, $1265 = 0, $1266 = 0, $1267 = 0.0;
 var $1268 = 0.0, $1269 = 0.0, $127 = 0, $1270 = 0.0, $1271 = 0.0, $1272 = 0.0, $1273 = 0.0, $1274 = 0.0, $1275 = 0.0, $1276 = 0, $1277 = 0.0, $1278 = 0, $1279 = 0.0, $128 = 0, $1280 = 0.0, $1281 = 0, $1282 = 0.0, $1283 = 0, $1284 = 0.0, $1285 = 0;
 var $1286 = 0, $1287 = 0, $1288 = 0, $1289 = 0, $129 = 0, $1290 = 0, $1291 = 0, $1292 = 0, $1293 = 0, $1294 = 0, $1295 = 0.0, $1296 = 0, $1297 = 0.0, $1298 = 0.0, $1299 = 0.0, $13 = 0, $130 = 0, $1300 = 0, $1301 = 0.0, $1302 = 0;
 var $1303 = 0.0, $1304 = 0.0, $1305 = 0.0, $1306 = 0, $1307 = 0, $1308 = 0, $1309 = 0.0, $131 = 0, $1310 = 0, $1311 = 0.0, $1312 = 0, $1313 = 0.0, $1314 = 0.0, $1315 = 0.0, $1316 = 0.0, $1317 = 0.0, $1318 = 0.0, $1319 = 0.0, $132 = 0, $1320 = 0.0;
 var $1321 = 0.0, $1322 = 0.0, $1323 = 0, $1324 = 0.0, $1325 = 0.0, $1326 = 0.0, $1327 = 0.0, $1328 = 0.0, $1329 = 0.0, $133 = 0, $1330 = 0.0, $1331 = 0.0, $1332 = 0, $1333 = 0.0, $1334 = 0.0, $1335 = 0.0, $1336 = 0.0, $1337 = 0.0, $1338 = 0, $1339 = 0.0;
 var $134 = 0, $1340 = 0.0, $1341 = 0.0, $1342 = 0.0, $1343 = 0.0, $1344 = 0, $1345 = 0.0, $1346 = 0.0, $1347 = 0.0, $1348 = 0.0, $1349 = 0.0, $135 = 0, $1350 = 0.0, $1351 = 0.0, $1352 = 0.0, $1353 = 0.0, $1354 = 0.0, $1355 = 0.0, $1356 = 0.0, $1357 = 0.0;
 var $1358 = 0, $1359 = 0.0, $136 = 0, $1360 = 0, $1361 = 0.0, $1362 = 0.0, $1363 = 0.0, $1364 = 0.0, $1365 = 0.0, $1366 = 0.0, $1367 = 0.0, $1368 = 0.0, $1369 = 0.0, $137 = 0, $1370 = 0.0, $1371 = 0.0, $1372 = 0.0, $1373 = 0.0, $1374 = 0.0, $1375 = 0.0;
 var $1376 = 0.0, $1377 = 0.0, $1378 = 0.0, $1379 = 0.0, $138 = 0, $1380 = 0.0, $1381 = 0.0, $1382 = 0.0, $1383 = 0.0, $1384 = 0.0, $1385 = 0.0, $1386 = 0.0, $1387 = 0.0, $1388 = 0.0, $1389 = 0.0, $139 = 0, $1390 = 0.0, $1391 = 0.0, $1392 = 0.0, $1393 = 0.0;
 var $1394 = 0.0, $1395 = 0.0, $1396 = 0.0, $1397 = 0, $1398 = 0.0, $1399 = 0.0, $14 = 0, $140 = 0, $1400 = 0.0, $1401 = 0.0, $1402 = 0.0, $1403 = 0, $1404 = 0.0, $1405 = 0, $1406 = 0.0, $1407 = 0, $1408 = 0.0, $1409 = 0, $141 = 0, $1410 = 0.0;
 var $1411 = 0, $1412 = 0.0, $1413 = 0, $1414 = 0.0, $1415 = 0, $1416 = 0, $1417 = 0, $1418 = 0.0, $1419 = 0, $142 = 0, $1420 = 0, $1421 = 0, $1422 = 0, $1423 = 0, $1424 = 0, $1425 = 0, $1426 = 0, $1427 = 0, $1428 = 0, $1429 = 0;
 var $143 = 0, $1430 = 0, $1431 = 0, $1432 = 0.0, $1433 = 0, $1434 = 0, $1435 = 0, $1436 = 0, $1437 = 0, $1438 = 0, $1439 = 0, $144 = 0, $1440 = 0, $1441 = 0, $1442 = 0, $1443 = 0, $1444 = 0, $1445 = 0, $1446 = 0.0, $1447 = 0;
 var $1448 = 0, $1449 = 0, $145 = 0, $1450 = 0, $1451 = 0, $1452 = 0, $1453 = 0, $1454 = 0, $1455 = 0, $1456 = 0, $1457 = 0, $1458 = 0, $1459 = 0, $146 = 0, $1460 = 0.0, $1461 = 0, $1462 = 0, $1463 = 0, $1464 = 0, $1465 = 0;
 var $1466 = 0, $1467 = 0, $1468 = 0, $1469 = 0, $147 = 0, $1470 = 0, $1471 = 0, $1472 = 0, $1473 = 0, $1474 = 0.0, $1475 = 0, $1476 = 0, $1477 = 0, $1478 = 0, $1479 = 0, $148 = 0, $1480 = 0, $1481 = 0, $1482 = 0, $1483 = 0;
 var $1484 = 0, $1485 = 0, $1486 = 0, $1487 = 0, $1488 = 0.0, $1489 = 0, $149 = 0, $1490 = 0, $1491 = 0, $1492 = 0, $1493 = 0, $1494 = 0, $1495 = 0, $1496 = 0, $1497 = 0, $1498 = 0, $1499 = 0, $15 = 0, $150 = 0, $1500 = 0;
 var $1501 = 0, $1502 = 0.0, $1503 = 0, $1504 = 0, $1505 = 0, $1506 = 0, $1507 = 0, $1508 = 0, $1509 = 0, $151 = 0, $1510 = 0, $1511 = 0, $1512 = 0, $1513 = 0, $1514 = 0, $1515 = 0, $1516 = 0, $1517 = 0, $1518 = 0, $1519 = 0.0;
 var $152 = 0, $1520 = 0, $1521 = 0, $1522 = 0.0, $1523 = 0.0, $1524 = 0, $1525 = 0, $1526 = 0.0, $1527 = 0.0, $1528 = 0.0, $1529 = 0.0, $153 = 0, $1530 = 0.0, $1531 = 0.0, $1532 = 0.0, $1533 = 0.0, $1534 = 0.0, $1535 = 0.0, $1536 = 0, $1537 = 0.0;
 var $1538 = 0.0, $1539 = 0, $154 = 0, $1540 = 0.0, $1541 = 0.0, $1542 = 0.0, $1543 = 0.0, $1544 = 0.0, $1545 = 0, $1546 = 0.0, $1547 = 0.0, $1548 = 0.0, $1549 = 0.0, $155 = 0, $1550 = 0.0, $1551 = 0.0, $1552 = 0.0, $1553 = 0.0, $1554 = 0.0, $1555 = 0.0;
 var $1556 = 0.0, $1557 = 0.0, $1558 = 0.0, $1559 = 0, $156 = 0, $1560 = 0.0, $1561 = 0, $1562 = 0.0, $1563 = 0.0, $1564 = 0.0, $1565 = 0.0, $1566 = 0.0, $1567 = 0.0, $1568 = 0.0, $1569 = 0.0, $157 = 0, $1570 = 0.0, $1571 = 0.0, $1572 = 0.0, $1573 = 0.0;
 var $1574 = 0.0, $1575 = 0.0, $1576 = 0.0, $1577 = 0.0, $1578 = 0.0, $1579 = 0.0, $158 = 0, $1580 = 0.0, $1581 = 0.0, $1582 = 0.0, $1583 = 0.0, $1584 = 0.0, $1585 = 0.0, $1586 = 0.0, $1587 = 0.0, $1588 = 0.0, $1589 = 0.0, $159 = 0, $1590 = 0.0, $1591 = 0.0;
 var $1592 = 0.0, $1593 = 0.0, $1594 = 0.0, $1595 = 0.0, $1596 = 0.0, $1597 = 0.0, $1598 = 0.0, $1599 = 0.0, $16 = 0, $160 = 0, $1600 = 0.0, $1601 = 0.0, $1602 = 0.0, $1603 = 0.0, $1604 = 0.0, $1605 = 0.0, $1606 = 0.0, $1607 = 0.0, $1608 = 0.0, $1609 = 0.0;
 var $161 = 0, $1610 = 0.0, $1611 = 0.0, $1612 = 0.0, $1613 = 0.0, $1614 = 0.0, $1615 = 0.0, $1616 = 0.0, $1617 = 0, $1618 = 0.0, $1619 = 0.0, $162 = 0, $1620 = 0.0, $1621 = 0, $1622 = 0.0, $1623 = 0, $1624 = 0.0, $1625 = 0, $1626 = 0.0, $1627 = 0;
 var $1628 = 0.0, $1629 = 0, $163 = 0, $1630 = 0.0, $1631 = 0, $1632 = 0.0, $1633 = 0, $1634 = 0.0, $1635 = 0.0, $1636 = 0.0, $1637 = 0.0, $1638 = 0.0, $1639 = 0.0, $164 = 0, $1640 = 0.0, $1641 = 0.0, $1642 = 0.0, $1643 = 0.0, $1644 = 0.0, $1645 = 0.0;
 var $1646 = 0.0, $1647 = 0.0, $1648 = 0.0, $1649 = 0.0, $165 = 0, $1650 = 0.0, $1651 = 0.0, $1652 = 0.0, $1653 = 0.0, $1654 = 0.0, $1655 = 0.0, $1656 = 0.0, $1657 = 0.0, $1658 = 0.0, $1659 = 0.0, $166 = 0, $1660 = 0.0, $1661 = 0.0, $1662 = 0.0, $1663 = 0.0;
 var $1664 = 0.0, $1665 = 0.0, $1666 = 0.0, $1667 = 0.0, $1668 = 0.0, $1669 = 0.0, $167 = 0, $1670 = 0.0, $1671 = 0.0, $1672 = 0.0, $1673 = 0.0, $1674 = 0.0, $1675 = 0.0, $1676 = 0.0, $1677 = 0.0, $1678 = 0.0, $1679 = 0.0, $168 = 0, $1680 = 0.0, $1681 = 0.0;
 var $1682 = 0.0, $1683 = 0.0, $1684 = 0.0, $1685 = 0.0, $1686 = 0.0, $1687 = 0.0, $1688 = 0.0, $1689 = 0.0, $169 = 0, $1690 = 0.0, $1691 = 0.0, $1692 = 0.0, $1693 = 0.0, $1694 = 0.0, $1695 = 0.0, $1696 = 0.0, $1697 = 0.0, $1698 = 0.0, $1699 = 0.0, $17 = 0;
 var $170 = 0, $1700 = 0.0, $1701 = 0.0, $1702 = 0.0, $1703 = 0.0, $1704 = 0.0, $1705 = 0.0, $1706 = 0.0, $1707 = 0.0, $1708 = 0.0, $1709 = 0.0, $171 = 0, $1710 = 0.0, $1711 = 0.0, $1712 = 0.0, $1713 = 0.0, $1714 = 0.0, $1715 = 0.0, $1716 = 0.0, $1717 = 0.0;
 var $1718 = 0.0, $1719 = 0.0, $172 = 0, $1720 = 0.0, $1721 = 0.0, $1722 = 0.0, $1723 = 0.0, $1724 = 0.0, $1725 = 0.0, $1726 = 0.0, $1727 = 0.0, $1728 = 0.0, $1729 = 0, $173 = 0, $1730 = 0.0, $1731 = 0.0, $1732 = 0, $1733 = 0.0, $1734 = 0.0, $1735 = 0.0;
 var $1736 = 0.0, $1737 = 0.0, $1738 = 0.0, $1739 = 0.0, $174 = 0, $1740 = 0.0, $1741 = 0.0, $1742 = 0.0, $1743 = 0.0, $1744 = 0.0, $1745 = 0.0, $1746 = 0.0, $1747 = 0.0, $1748 = 0.0, $1749 = 0.0, $175 = 0, $1750 = 0.0, $1751 = 0.0, $1752 = 0.0, $1753 = 0.0;
 var $1754 = 0.0, $1755 = 0.0, $1756 = 0.0, $1757 = 0.0, $1758 = 0.0, $1759 = 0.0, $176 = 0, $1760 = 0.0, $1761 = 0.0, $1762 = 0.0, $1763 = 0.0, $1764 = 0.0, $1765 = 0.0, $1766 = 0.0, $1767 = 0.0, $1768 = 0.0, $1769 = 0.0, $177 = 0, $1770 = 0.0, $1771 = 0.0;
 var $1772 = 0.0, $1773 = 0.0, $1774 = 0.0, $1775 = 0.0, $1776 = 0.0, $1777 = 0.0, $1778 = 0.0, $1779 = 0.0, $178 = 0, $1780 = 0.0, $1781 = 0.0, $1782 = 0.0, $1783 = 0.0, $1784 = 0.0, $1785 = 0.0, $1786 = 0.0, $1787 = 0.0, $1788 = 0.0, $1789 = 0.0, $179 = 0;
 var $1790 = 0.0, $1791 = 0.0, $1792 = 0.0, $1793 = 0.0, $1794 = 0.0, $1795 = 0.0, $1796 = 0.0, $1797 = 0.0, $1798 = 0.0, $1799 = 0.0, $18 = 0, $180 = 0, $1800 = 0.0, $1801 = 0.0, $1802 = 0.0, $1803 = 0.0, $1804 = 0.0, $1805 = 0.0, $1806 = 0.0, $1807 = 0.0;
 var $1808 = 0.0, $1809 = 0.0, $181 = 0, $1810 = 0.0, $1811 = 0.0, $1812 = 0.0, $1813 = 0.0, $1814 = 0.0, $1815 = 0.0, $1816 = 0.0, $1817 = 0.0, $1818 = 0.0, $1819 = 0.0, $182 = 0, $1820 = 0.0, $1821 = 0.0, $1822 = 0.0, $1823 = 0.0, $1824 = 0.0, $1825 = 0.0;
 var $1826 = 0.0, $1827 = 0.0, $1828 = 0, $1829 = 0.0, $183 = 0, $1830 = 0.0, $1831 = 0, $1832 = 0.0, $1833 = 0.0, $1834 = 0.0, $1835 = 0.0, $1836 = 0.0, $1837 = 0.0, $1838 = 0.0, $1839 = 0.0, $184 = 0, $1840 = 0.0, $1841 = 0.0, $1842 = 0.0, $1843 = 0.0;
 var $1844 = 0.0, $1845 = 0.0, $1846 = 0.0, $1847 = 0.0, $1848 = 0.0, $1849 = 0.0, $185 = 0, $1850 = 0.0, $1851 = 0.0, $1852 = 0.0, $1853 = 0.0, $1854 = 0.0, $1855 = 0.0, $1856 = 0.0, $1857 = 0.0, $1858 = 0.0, $1859 = 0.0, $186 = 0, $1860 = 0.0, $1861 = 0.0;
 var $1862 = 0.0, $1863 = 0.0, $1864 = 0.0, $1865 = 0.0, $1866 = 0.0, $1867 = 0.0, $1868 = 0.0, $1869 = 0.0, $187 = 0, $1870 = 0.0, $1871 = 0.0, $1872 = 0.0, $1873 = 0.0, $1874 = 0.0, $1875 = 0.0, $1876 = 0.0, $1877 = 0.0, $1878 = 0.0, $1879 = 0.0, $188 = 0;
 var $1880 = 0.0, $1881 = 0.0, $1882 = 0.0, $1883 = 0.0, $1884 = 0.0, $1885 = 0.0, $1886 = 0.0, $1887 = 0.0, $1888 = 0.0, $1889 = 0.0, $189 = 0, $1890 = 0.0, $1891 = 0.0, $1892 = 0.0, $1893 = 0.0, $1894 = 0.0, $1895 = 0.0, $1896 = 0.0, $1897 = 0.0, $1898 = 0.0;
 var $1899 = 0.0, $19 = 0, $190 = 0, $1900 = 0.0, $1901 = 0.0, $1902 = 0.0, $1903 = 0.0, $1904 = 0.0, $1905 = 0.0, $1906 = 0.0, $1907 = 0.0, $1908 = 0.0, $1909 = 0.0, $191 = 0, $1910 = 0.0, $1911 = 0.0, $1912 = 0.0, $1913 = 0.0, $1914 = 0.0, $1915 = 0.0;
 var $1916 = 0.0, $1917 = 0.0, $1918 = 0.0, $1919 = 0.0, $192 = 0, $1920 = 0.0, $1921 = 0.0, $1922 = 0.0, $1923 = 0.0, $1924 = 0.0, $1925 = 0.0, $1926 = 0.0, $1927 = 0.0, $1928 = 0, $1929 = 0.0, $193 = 0, $1930 = 0.0, $1931 = 0, $1932 = 0.0, $1933 = 0;
 var $1934 = 0.0, $1935 = 0.0, $1936 = 0.0, $1937 = 0.0, $1938 = 0.0, $1939 = 0.0, $194 = 0, $1940 = 0.0, $1941 = 0.0, $1942 = 0.0, $1943 = 0.0, $1944 = 0.0, $1945 = 0.0, $1946 = 0.0, $1947 = 0.0, $1948 = 0.0, $1949 = 0.0, $195 = 0, $1950 = 0.0, $1951 = 0.0;
 var $1952 = 0.0, $1953 = 0.0, $1954 = 0.0, $1955 = 0.0, $1956 = 0.0, $1957 = 0.0, $1958 = 0.0, $1959 = 0.0, $196 = 0, $1960 = 0.0, $1961 = 0.0, $1962 = 0.0, $1963 = 0.0, $1964 = 0.0, $1965 = 0.0, $1966 = 0.0, $1967 = 0, $1968 = 0.0, $1969 = 0.0, $197 = 0;
 var $1970 = 0, $1971 = 0.0, $1972 = 0, $1973 = 0.0, $1974 = 0, $1975 = 0.0, $1976 = 0, $1977 = 0.0, $1978 = 0, $1979 = 0.0, $198 = 0, $1980 = 0, $1981 = 0.0, $1982 = 0, $1983 = 0.0, $1984 = 0.0, $1985 = 0.0, $1986 = 0, $1987 = 0, $1988 = 0.0;
 var $1989 = 0.0, $199 = 0, $1990 = 0, $1991 = 0, $1992 = 0.0, $1993 = 0.0, $1994 = 0.0, $1995 = 0.0, $1996 = 0.0, $1997 = 0.0, $1998 = 0.0, $1999 = 0, $2 = 0, $20 = 0, $200 = 0, $2000 = 0.0, $2001 = 0, $2002 = 0.0, $2003 = 0.0, $2004 = 0.0;
 var $2005 = 0.0, $2006 = 0.0, $2007 = 0.0, $2008 = 0.0, $2009 = 0.0, $201 = 0, $2010 = 0.0, $2011 = 0.0, $2012 = 0.0, $2013 = 0.0, $2014 = 0.0, $2015 = 0.0, $2016 = 0.0, $2017 = 0.0, $2018 = 0.0, $2019 = 0.0, $202 = 0, $2020 = 0.0, $2021 = 0.0, $2022 = 0.0;
 var $2023 = 0.0, $2024 = 0.0, $2025 = 0.0, $2026 = 0.0, $2027 = 0.0, $2028 = 0.0, $2029 = 0.0, $203 = 0, $2030 = 0.0, $2031 = 0.0, $2032 = 0.0, $2033 = 0.0, $2034 = 0.0, $2035 = 0, $2036 = 0.0, $2037 = 0.0, $2038 = 0.0, $2039 = 0, $204 = 0, $2040 = 0.0;
 var $2041 = 0, $2042 = 0.0, $2043 = 0, $2044 = 0.0, $2045 = 0, $2046 = 0.0, $2047 = 0, $2048 = 0.0, $2049 = 0, $205 = 0, $2050 = 0.0, $2051 = 0, $2052 = 0, $2053 = 0, $2054 = 0.0, $2055 = 0, $2056 = 0, $2057 = 0, $2058 = 0, $2059 = 0;
 var $206 = 0, $2060 = 0, $2061 = 0, $2062 = 0, $2063 = 0, $2064 = 0, $2065 = 0, $2066 = 0, $2067 = 0, $2068 = 0.0, $2069 = 0, $207 = 0, $2070 = 0, $2071 = 0, $2072 = 0, $2073 = 0, $2074 = 0, $2075 = 0, $2076 = 0, $2077 = 0;
 var $2078 = 0, $2079 = 0, $208 = 0, $2080 = 0, $2081 = 0, $2082 = 0.0, $2083 = 0, $2084 = 0, $2085 = 0, $2086 = 0, $2087 = 0, $2088 = 0, $2089 = 0, $209 = 0, $2090 = 0, $2091 = 0, $2092 = 0, $2093 = 0, $2094 = 0, $2095 = 0;
 var $2096 = 0.0, $2097 = 0, $2098 = 0, $2099 = 0, $21 = 0, $210 = 0, $2100 = 0, $2101 = 0, $2102 = 0, $2103 = 0, $2104 = 0, $2105 = 0, $2106 = 0, $2107 = 0, $2108 = 0, $2109 = 0, $211 = 0, $2110 = 0.0, $2111 = 0, $2112 = 0;
 var $2113 = 0, $2114 = 0, $2115 = 0, $2116 = 0, $2117 = 0, $2118 = 0, $2119 = 0, $212 = 0, $2120 = 0, $2121 = 0, $2122 = 0, $2123 = 0, $2124 = 0.0, $2125 = 0, $2126 = 0, $2127 = 0, $2128 = 0, $2129 = 0, $213 = 0, $2130 = 0;
 var $2131 = 0, $2132 = 0, $2133 = 0, $2134 = 0, $2135 = 0, $2136 = 0, $2137 = 0, $2138 = 0.0, $2139 = 0, $214 = 0, $2140 = 0, $2141 = 0, $2142 = 0, $2143 = 0, $2144 = 0, $2145 = 0, $2146 = 0, $2147 = 0, $2148 = 0, $2149 = 0;
 var $215 = 0, $2150 = 0, $2151 = 0, $2152 = 0, $2153 = 0.0, $2154 = 0.0, $2155 = 0.0, $2156 = 0.0, $2157 = 0.0, $2158 = 0.0, $2159 = 0.0, $216 = 0, $2160 = 0.0, $2161 = 0.0, $2162 = 0.0, $2163 = 0.0, $2164 = 0.0, $2165 = 0.0, $2166 = 0.0, $2167 = 0.0;
 var $2168 = 0.0, $2169 = 0.0, $217 = 0, $2170 = 0.0, $2171 = 0.0, $2172 = 0.0, $2173 = 0.0, $2174 = 0.0, $2175 = 0.0, $2176 = 0.0, $2177 = 0.0, $2178 = 0.0, $2179 = 0.0, $218 = 0, $2180 = 0.0, $2181 = 0.0, $2182 = 0.0, $2183 = 0.0, $2184 = 0.0, $2185 = 0.0;
 var $2186 = 0, $2187 = 0.0, $2188 = 0.0, $2189 = 0, $219 = 0, $2190 = 0.0, $2191 = 0, $2192 = 0.0, $2193 = 0, $2194 = 0.0, $2195 = 0, $2196 = 0.0, $2197 = 0, $2198 = 0.0, $2199 = 0, $22 = 0, $220 = 0, $2200 = 0.0, $2201 = 0, $2202 = 0.0;
 var $2203 = 0, $2204 = 0.0, $2205 = 0.0, $2206 = 0, $2207 = 0.0, $2208 = 0.0, $2209 = 0, $221 = 0, $2210 = 0.0, $2211 = 0.0, $2212 = 0.0, $2213 = 0.0, $2214 = 0.0, $2215 = 0, $2216 = 0.0, $2217 = 0.0, $2218 = 0.0, $2219 = 0.0, $222 = 0, $2220 = 0.0;
 var $2221 = 0, $2222 = 0.0, $2223 = 0, $2224 = 0.0, $2225 = 0.0, $2226 = 0.0, $2227 = 0.0, $2228 = 0.0, $2229 = 0.0, $223 = 0, $2230 = 0.0, $2231 = 0.0, $2232 = 0.0, $2233 = 0.0, $2234 = 0.0, $2235 = 0.0, $2236 = 0.0, $2237 = 0.0, $2238 = 0.0, $2239 = 0.0;
 var $224 = 0, $2240 = 0.0, $2241 = 0.0, $2242 = 0.0, $2243 = 0.0, $2244 = 0.0, $2245 = 0.0, $2246 = 0.0, $2247 = 0.0, $2248 = 0.0, $2249 = 0.0, $225 = 0, $2250 = 0.0, $2251 = 0.0, $2252 = 0.0, $2253 = 0.0, $2254 = 0.0, $2255 = 0, $2256 = 0.0, $2257 = 0.0;
 var $2258 = 0.0, $2259 = 0, $226 = 0, $2260 = 0.0, $2261 = 0, $2262 = 0.0, $2263 = 0, $2264 = 0.0, $2265 = 0, $2266 = 0.0, $2267 = 0, $2268 = 0.0, $2269 = 0, $227 = 0, $2270 = 0.0, $2271 = 0, $2272 = 0, $2273 = 0, $2274 = 0.0, $2275 = 0;
 var $2276 = 0, $2277 = 0, $2278 = 0, $2279 = 0, $228 = 0, $2280 = 0, $2281 = 0, $2282 = 0, $2283 = 0, $2284 = 0, $2285 = 0, $2286 = 0, $2287 = 0, $2288 = 0.0, $2289 = 0, $229 = 0, $2290 = 0, $2291 = 0, $2292 = 0, $2293 = 0;
 var $2294 = 0, $2295 = 0, $2296 = 0, $2297 = 0, $2298 = 0, $2299 = 0, $23 = 0, $230 = 0, $2300 = 0, $2301 = 0, $2302 = 0.0, $2303 = 0, $2304 = 0, $2305 = 0, $2306 = 0, $2307 = 0, $2308 = 0, $2309 = 0, $231 = 0, $2310 = 0;
 var $2311 = 0, $2312 = 0, $2313 = 0, $2314 = 0, $2315 = 0, $2316 = 0.0, $2317 = 0, $2318 = 0, $2319 = 0, $232 = 0, $2320 = 0, $2321 = 0, $2322 = 0, $2323 = 0, $2324 = 0, $2325 = 0, $2326 = 0, $2327 = 0, $2328 = 0, $2329 = 0;
 var $233 = 0, $2330 = 0.0, $2331 = 0, $2332 = 0, $2333 = 0, $2334 = 0, $2335 = 0, $2336 = 0, $2337 = 0, $2338 = 0, $2339 = 0, $234 = 0, $2340 = 0, $2341 = 0, $2342 = 0, $2343 = 0, $2344 = 0.0, $2345 = 0, $2346 = 0, $2347 = 0;
 var $2348 = 0, $2349 = 0, $235 = 0, $2350 = 0, $2351 = 0, $2352 = 0, $2353 = 0, $2354 = 0, $2355 = 0, $2356 = 0, $2357 = 0, $2358 = 0.0, $2359 = 0, $236 = 0, $2360 = 0, $2361 = 0, $2362 = 0, $2363 = 0, $2364 = 0, $2365 = 0;
 var $2366 = 0, $2367 = 0, $2368 = 0, $2369 = 0, $237 = 0, $2370 = 0, $2371 = 0, $2372 = 0, $2373 = 0.0, $2374 = 0.0, $2375 = 0.0, $2376 = 0.0, $2377 = 0.0, $2378 = 0.0, $2379 = 0.0, $238 = 0, $2380 = 0.0, $2381 = 0.0, $2382 = 0.0, $2383 = 0.0;
 var $2384 = 0.0, $2385 = 0.0, $2386 = 0.0, $2387 = 0.0, $2388 = 0.0, $2389 = 0.0, $239 = 0, $2390 = 0.0, $2391 = 0.0, $2392 = 0.0, $2393 = 0.0, $2394 = 0.0, $2395 = 0.0, $2396 = 0.0, $2397 = 0.0, $2398 = 0.0, $2399 = 0.0, $24 = 0, $240 = 0, $2400 = 0.0;
 var $2401 = 0.0, $2402 = 0.0, $2403 = 0.0, $2404 = 0.0, $2405 = 0.0, $2406 = 0.0, $2407 = 0.0, $2408 = 0.0, $2409 = 0, $241 = 0, $2410 = 0.0, $2411 = 0.0, $2412 = 0, $2413 = 0.0, $2414 = 0, $2415 = 0.0, $2416 = 0, $2417 = 0.0, $2418 = 0, $2419 = 0.0;
 var $242 = 0, $2420 = 0, $2421 = 0.0, $2422 = 0, $2423 = 0.0, $2424 = 0, $2425 = 0.0, $2426 = 0, $2427 = 0.0, $2428 = 0, $2429 = 0.0, $243 = 0, $2430 = 0, $2431 = 0.0, $2432 = 0.0, $2433 = 0, $2434 = 0.0, $2435 = 0.0, $2436 = 0.0, $2437 = 0;
 var $2438 = 0.0, $2439 = 0.0, $244 = 0, $2440 = 0.0, $2441 = 0.0, $2442 = 0.0, $2443 = 0, $2444 = 0.0, $2445 = 0.0, $2446 = 0.0, $2447 = 0.0, $2448 = 0.0, $2449 = 0.0, $245 = 0, $2450 = 0, $2451 = 0.0, $2452 = 0, $2453 = 0.0, $2454 = 0.0, $2455 = 0.0;
 var $2456 = 0.0, $2457 = 0.0, $2458 = 0.0, $2459 = 0.0, $246 = 0, $2460 = 0.0, $2461 = 0.0, $2462 = 0.0, $2463 = 0.0, $2464 = 0.0, $2465 = 0.0, $2466 = 0.0, $2467 = 0.0, $2468 = 0.0, $2469 = 0.0, $247 = 0, $2470 = 0.0, $2471 = 0.0, $2472 = 0.0, $2473 = 0.0;
 var $2474 = 0.0, $2475 = 0.0, $2476 = 0.0, $2477 = 0.0, $2478 = 0.0, $2479 = 0.0, $248 = 0, $2480 = 0.0, $2481 = 0.0, $2482 = 0.0, $2483 = 0.0, $2484 = 0.0, $2485 = 0.0, $2486 = 0, $2487 = 0.0, $2488 = 0.0, $2489 = 0.0, $249 = 0, $2490 = 0, $2491 = 0.0;
 var $2492 = 0, $2493 = 0.0, $2494 = 0, $2495 = 0.0, $2496 = 0, $2497 = 0.0, $2498 = 0, $2499 = 0.0, $25 = 0, $250 = 0, $2500 = 0, $2501 = 0.0, $2502 = 0, $2503 = 0, $2504 = 0, $2505 = 0.0, $2506 = 0, $2507 = 0, $2508 = 0, $2509 = 0;
 var $251 = 0, $2510 = 0, $2511 = 0, $2512 = 0, $2513 = 0, $2514 = 0, $2515 = 0, $2516 = 0, $2517 = 0, $2518 = 0, $2519 = 0.0, $252 = 0, $2520 = 0, $2521 = 0, $2522 = 0, $2523 = 0, $2524 = 0, $2525 = 0, $2526 = 0, $2527 = 0;
 var $2528 = 0, $2529 = 0, $253 = 0, $2530 = 0, $2531 = 0, $2532 = 0, $2533 = 0.0, $2534 = 0, $2535 = 0, $2536 = 0, $2537 = 0, $2538 = 0, $2539 = 0, $254 = 0, $2540 = 0, $2541 = 0, $2542 = 0, $2543 = 0, $2544 = 0, $2545 = 0;
 var $2546 = 0, $2547 = 0.0, $2548 = 0, $2549 = 0, $255 = 0, $2550 = 0, $2551 = 0, $2552 = 0, $2553 = 0, $2554 = 0, $2555 = 0, $2556 = 0, $2557 = 0, $2558 = 0, $2559 = 0, $256 = 0, $2560 = 0, $2561 = 0.0, $2562 = 0, $2563 = 0;
 var $2564 = 0, $2565 = 0, $2566 = 0, $2567 = 0, $2568 = 0, $2569 = 0, $257 = 0, $2570 = 0, $2571 = 0, $2572 = 0, $2573 = 0, $2574 = 0, $2575 = 0.0, $2576 = 0, $2577 = 0, $2578 = 0, $2579 = 0, $258 = 0, $2580 = 0, $2581 = 0;
 var $2582 = 0, $2583 = 0, $2584 = 0, $2585 = 0, $2586 = 0, $2587 = 0, $2588 = 0, $2589 = 0.0, $259 = 0, $2590 = 0, $2591 = 0, $2592 = 0, $2593 = 0, $2594 = 0, $2595 = 0, $2596 = 0, $2597 = 0, $2598 = 0, $2599 = 0, $26 = 0;
 var $260 = 0, $2600 = 0, $2601 = 0, $2602 = 0, $2603 = 0, $2604 = 0.0, $2605 = 0.0, $2606 = 0.0, $2607 = 0.0, $2608 = 0.0, $2609 = 0.0, $261 = 0, $2610 = 0.0, $2611 = 0.0, $2612 = 0.0, $2613 = 0.0, $2614 = 0.0, $2615 = 0.0, $2616 = 0.0, $2617 = 0.0;
 var $2618 = 0.0, $2619 = 0.0, $262 = 0, $2620 = 0.0, $2621 = 0.0, $2622 = 0.0, $2623 = 0.0, $2624 = 0.0, $2625 = 0.0, $2626 = 0.0, $2627 = 0.0, $2628 = 0.0, $2629 = 0.0, $263 = 0, $2630 = 0.0, $2631 = 0.0, $2632 = 0.0, $2633 = 0.0, $2634 = 0, $2635 = 0.0;
 var $2636 = 0.0, $2637 = 0, $2638 = 0.0, $2639 = 0, $264 = 0, $2640 = 0.0, $2641 = 0, $2642 = 0.0, $2643 = 0, $2644 = 0.0, $2645 = 0, $2646 = 0.0, $2647 = 0, $2648 = 0.0, $2649 = 0, $265 = 0, $2650 = 0.0, $2651 = 0.0, $2652 = 0.0, $2653 = 0;
 var $2654 = 0.0, $2655 = 0.0, $2656 = 0, $2657 = 0.0, $2658 = 0.0, $2659 = 0.0, $266 = 0, $2660 = 0.0, $2661 = 0.0, $2662 = 0, $2663 = 0.0, $2664 = 0.0, $2665 = 0.0, $2666 = 0.0, $2667 = 0.0, $2668 = 0.0, $2669 = 0, $267 = 0, $2670 = 0.0, $2671 = 0;
 var $2672 = 0.0, $2673 = 0.0, $2674 = 0.0, $2675 = 0.0, $2676 = 0.0, $2677 = 0.0, $2678 = 0.0, $2679 = 0.0, $268 = 0, $2680 = 0.0, $2681 = 0.0, $2682 = 0.0, $2683 = 0.0, $2684 = 0.0, $2685 = 0.0, $2686 = 0.0, $2687 = 0.0, $2688 = 0.0, $2689 = 0.0, $269 = 0;
 var $2690 = 0.0, $2691 = 0.0, $2692 = 0.0, $2693 = 0.0, $2694 = 0.0, $2695 = 0.0, $2696 = 0.0, $2697 = 0.0, $2698 = 0.0, $2699 = 0.0, $27 = 0, $270 = 0, $2700 = 0.0, $2701 = 0.0, $2702 = 0, $2703 = 0.0, $2704 = 0.0, $2705 = 0.0, $2706 = 0, $2707 = 0.0;
 var $2708 = 0, $2709 = 0.0, $271 = 0, $2710 = 0, $2711 = 0.0, $2712 = 0, $2713 = 0.0, $2714 = 0, $2715 = 0.0, $2716 = 0, $2717 = 0.0, $2718 = 0, $2719 = 0, $272 = 0, $2720 = 0, $2721 = 0.0, $2722 = 0, $2723 = 0, $2724 = 0, $2725 = 0;
 var $2726 = 0, $2727 = 0, $2728 = 0, $2729 = 0, $273 = 0, $2730 = 0, $2731 = 0, $2732 = 0, $2733 = 0, $2734 = 0, $2735 = 0.0, $2736 = 0, $2737 = 0, $2738 = 0, $2739 = 0, $274 = 0, $2740 = 0, $2741 = 0, $2742 = 0, $2743 = 0;
 var $2744 = 0, $2745 = 0, $2746 = 0, $2747 = 0, $2748 = 0, $2749 = 0.0, $275 = 0, $2750 = 0, $2751 = 0, $2752 = 0, $2753 = 0, $2754 = 0, $2755 = 0, $2756 = 0, $2757 = 0, $2758 = 0, $2759 = 0, $276 = 0, $2760 = 0, $2761 = 0;
 var $2762 = 0, $2763 = 0.0, $2764 = 0, $2765 = 0, $2766 = 0, $2767 = 0, $2768 = 0, $2769 = 0, $277 = 0, $2770 = 0, $2771 = 0, $2772 = 0, $2773 = 0, $2774 = 0, $2775 = 0, $2776 = 0, $2777 = 0.0, $2778 = 0, $2779 = 0, $278 = 0;
 var $2780 = 0, $2781 = 0, $2782 = 0, $2783 = 0, $2784 = 0, $2785 = 0, $2786 = 0, $2787 = 0, $2788 = 0, $2789 = 0, $279 = 0, $2790 = 0, $2791 = 0.0, $2792 = 0, $2793 = 0, $2794 = 0, $2795 = 0, $2796 = 0, $2797 = 0, $2798 = 0;
 var $2799 = 0, $28 = 0, $280 = 0, $2800 = 0, $2801 = 0, $2802 = 0, $2803 = 0, $2804 = 0, $2805 = 0.0, $2806 = 0, $2807 = 0, $2808 = 0, $2809 = 0, $281 = 0, $2810 = 0, $2811 = 0, $2812 = 0, $2813 = 0, $2814 = 0, $2815 = 0;
 var $2816 = 0, $2817 = 0, $2818 = 0, $2819 = 0, $282 = 0, $2820 = 0.0, $2821 = 0.0, $2822 = 0.0, $2823 = 0.0, $2824 = 0.0, $2825 = 0.0, $2826 = 0.0, $2827 = 0.0, $2828 = 0.0, $2829 = 0.0, $283 = 0, $2830 = 0.0, $2831 = 0.0, $2832 = 0.0, $2833 = 0.0;
 var $2834 = 0.0, $2835 = 0.0, $2836 = 0.0, $2837 = 0.0, $2838 = 0, $2839 = 0.0, $284 = 0, $2840 = 0.0, $2841 = 0.0, $2842 = 0, $2843 = 0.0, $2844 = 0, $2845 = 0.0, $2846 = 0, $2847 = 0.0, $2848 = 0, $2849 = 0.0, $285 = 0, $2850 = 0, $2851 = 0.0;
 var $2852 = 0, $2853 = 0.0, $2854 = 0, $2855 = 0.0, $2856 = 0.0, $2857 = 0.0, $2858 = 0.0, $2859 = 0.0, $286 = 0, $2860 = 0.0, $2861 = 0.0, $2862 = 0.0, $2863 = 0.0, $2864 = 0, $2865 = 0.0, $2866 = 0.0, $2867 = 0.0, $2868 = 0.0, $2869 = 0, $287 = 0;
 var $2870 = 0.0, $2871 = 0.0, $2872 = 0.0, $2873 = 0.0, $2874 = 0.0, $2875 = 0, $2876 = 0.0, $2877 = 0.0, $2878 = 0.0, $2879 = 0.0, $288 = 0, $2880 = 0.0, $2881 = 0.0, $2882 = 0.0, $2883 = 0.0, $2884 = 0.0, $2885 = 0.0, $2886 = 0.0, $2887 = 0.0, $2888 = 0.0;
 var $2889 = 0, $289 = 0, $2890 = 0.0, $2891 = 0, $2892 = 0.0, $2893 = 0.0, $2894 = 0.0, $2895 = 0.0, $2896 = 0.0, $2897 = 0.0, $2898 = 0.0, $2899 = 0.0, $29 = 0, $290 = 0, $2900 = 0.0, $2901 = 0.0, $2902 = 0.0, $2903 = 0.0, $2904 = 0.0, $2905 = 0.0;
 var $2906 = 0.0, $2907 = 0.0, $2908 = 0.0, $2909 = 0.0, $291 = 0, $2910 = 0.0, $2911 = 0.0, $2912 = 0.0, $2913 = 0.0, $2914 = 0.0, $2915 = 0.0, $2916 = 0.0, $2917 = 0.0, $2918 = 0.0, $2919 = 0.0, $292 = 0, $2920 = 0.0, $2921 = 0.0, $2922 = 0.0, $2923 = 0.0;
 var $2924 = 0.0, $2925 = 0.0, $2926 = 0.0, $2927 = 0.0, $2928 = 0.0, $2929 = 0.0, $293 = 0, $2930 = 0, $2931 = 0.0, $2932 = 0.0, $2933 = 0.0, $2934 = 0, $2935 = 0.0, $2936 = 0, $2937 = 0.0, $2938 = 0, $2939 = 0.0, $294 = 0, $2940 = 0, $2941 = 0.0;
 var $2942 = 0, $2943 = 0.0, $2944 = 0, $2945 = 0.0, $2946 = 0, $2947 = 0, $2948 = 0, $2949 = 0.0, $295 = 0, $2950 = 0, $2951 = 0, $2952 = 0, $2953 = 0, $2954 = 0, $2955 = 0, $2956 = 0, $2957 = 0, $2958 = 0, $2959 = 0, $296 = 0;
 var $2960 = 0, $2961 = 0, $2962 = 0, $2963 = 0.0, $2964 = 0, $2965 = 0, $2966 = 0, $2967 = 0, $2968 = 0, $2969 = 0, $297 = 0, $2970 = 0, $2971 = 0, $2972 = 0, $2973 = 0, $2974 = 0, $2975 = 0, $2976 = 0, $2977 = 0.0, $2978 = 0;
 var $2979 = 0, $298 = 0, $2980 = 0, $2981 = 0, $2982 = 0, $2983 = 0, $2984 = 0, $2985 = 0, $2986 = 0, $2987 = 0, $2988 = 0, $2989 = 0, $299 = 0, $2990 = 0, $2991 = 0.0, $2992 = 0, $2993 = 0, $2994 = 0, $2995 = 0, $2996 = 0;
 var $2997 = 0, $2998 = 0, $2999 = 0, $3 = 0, $30 = 0, $300 = 0, $3000 = 0, $3001 = 0, $3002 = 0, $3003 = 0, $3004 = 0, $3005 = 0.0, $3006 = 0, $3007 = 0, $3008 = 0, $3009 = 0, $301 = 0, $3010 = 0, $3011 = 0, $3012 = 0;
 var $3013 = 0, $3014 = 0, $3015 = 0, $3016 = 0, $3017 = 0, $3018 = 0, $3019 = 0.0, $302 = 0, $3020 = 0, $3021 = 0, $3022 = 0, $3023 = 0, $3024 = 0, $3025 = 0, $3026 = 0, $3027 = 0, $3028 = 0, $3029 = 0, $303 = 0, $3030 = 0;
 var $3031 = 0, $3032 = 0, $3033 = 0.0, $3034 = 0, $3035 = 0, $3036 = 0, $3037 = 0, $3038 = 0, $3039 = 0, $304 = 0, $3040 = 0, $3041 = 0, $3042 = 0, $3043 = 0, $3044 = 0, $3045 = 0, $3046 = 0, $3047 = 0, $3048 = 0.0, $3049 = 0.0;
 var $305 = 0, $3050 = 0.0, $3051 = 0.0, $3052 = 0.0, $3053 = 0.0, $3054 = 0.0, $3055 = 0.0, $3056 = 0.0, $3057 = 0.0, $3058 = 0.0, $3059 = 0.0, $306 = 0, $3060 = 0.0, $3061 = 0.0, $3062 = 0.0, $3063 = 0.0, $3064 = 0.0, $3065 = 0.0, $3066 = 0.0, $3067 = 0.0;
 var $3068 = 0.0, $3069 = 0, $307 = 0, $3070 = 0.0, $3071 = 0.0, $3072 = 0.0, $3073 = 0, $3074 = 0.0, $3075 = 0, $3076 = 0.0, $3077 = 0, $3078 = 0.0, $3079 = 0, $308 = 0, $3080 = 0.0, $3081 = 0, $3082 = 0.0, $3083 = 0, $3084 = 0.0, $3085 = 0;
 var $3086 = 0.0, $3087 = 0, $3088 = 0.0, $3089 = 0.0, $309 = 0, $3090 = 0.0, $3091 = 0.0, $3092 = 0.0, $3093 = 0.0, $3094 = 0.0, $3095 = 0.0, $3096 = 0, $3097 = 0.0, $3098 = 0.0, $3099 = 0.0, $31 = 0, $310 = 0, $3100 = 0.0, $3101 = 0.0, $3102 = 0;
 var $3103 = 0.0, $3104 = 0.0, $3105 = 0.0, $3106 = 0.0, $3107 = 0.0, $3108 = 0, $3109 = 0.0, $311 = 0, $3110 = 0.0, $3111 = 0.0, $3112 = 0.0, $3113 = 0.0, $3114 = 0.0, $3115 = 0.0, $3116 = 0.0, $3117 = 0.0, $3118 = 0.0, $3119 = 0.0, $312 = 0, $3120 = 0.0;
 var $3121 = 0.0, $3122 = 0, $3123 = 0.0, $3124 = 0, $3125 = 0.0, $3126 = 0.0, $3127 = 0.0, $3128 = 0.0, $3129 = 0.0, $313 = 0, $3130 = 0.0, $3131 = 0.0, $3132 = 0.0, $3133 = 0.0, $3134 = 0.0, $3135 = 0.0, $3136 = 0.0, $3137 = 0.0, $3138 = 0.0, $3139 = 0.0;
 var $314 = 0, $3140 = 0.0, $3141 = 0.0, $3142 = 0.0, $3143 = 0.0, $3144 = 0.0, $3145 = 0.0, $3146 = 0.0, $3147 = 0.0, $3148 = 0.0, $3149 = 0.0, $315 = 0, $3150 = 0.0, $3151 = 0.0, $3152 = 0.0, $3153 = 0.0, $3154 = 0.0, $3155 = 0.0, $3156 = 0.0, $3157 = 0.0;
 var $3158 = 0.0, $3159 = 0.0, $316 = 0, $3160 = 0.0, $3161 = 0, $3162 = 0.0, $3163 = 0.0, $3164 = 0.0, $3165 = 0.0, $3166 = 0.0, $3167 = 0, $3168 = 0.0, $3169 = 0, $317 = 0, $3170 = 0.0, $3171 = 0, $3172 = 0.0, $3173 = 0, $3174 = 0.0, $3175 = 0;
 var $3176 = 0.0, $3177 = 0, $3178 = 0.0, $3179 = 0, $318 = 0, $3180 = 0, $3181 = 0, $3182 = 0.0, $3183 = 0, $3184 = 0, $3185 = 0, $3186 = 0, $3187 = 0, $3188 = 0, $3189 = 0, $319 = 0, $3190 = 0, $3191 = 0, $3192 = 0, $3193 = 0;
 var $3194 = 0, $3195 = 0, $3196 = 0.0, $3197 = 0, $3198 = 0, $3199 = 0, $32 = 0, $320 = 0, $3200 = 0, $3201 = 0, $3202 = 0, $3203 = 0, $3204 = 0, $3205 = 0, $3206 = 0, $3207 = 0, $3208 = 0, $3209 = 0, $321 = 0, $3210 = 0.0;
 var $3211 = 0, $3212 = 0, $3213 = 0, $3214 = 0, $3215 = 0, $3216 = 0, $3217 = 0, $3218 = 0, $3219 = 0, $322 = 0, $3220 = 0, $3221 = 0, $3222 = 0, $3223 = 0, $3224 = 0.0, $3225 = 0, $3226 = 0, $3227 = 0, $3228 = 0, $3229 = 0;
 var $323 = 0, $3230 = 0, $3231 = 0, $3232 = 0, $3233 = 0, $3234 = 0, $3235 = 0, $3236 = 0, $3237 = 0, $3238 = 0.0, $3239 = 0, $324 = 0, $3240 = 0, $3241 = 0, $3242 = 0, $3243 = 0, $3244 = 0, $3245 = 0, $3246 = 0, $3247 = 0;
 var $3248 = 0, $3249 = 0, $325 = 0, $3250 = 0, $3251 = 0, $3252 = 0.0, $3253 = 0, $3254 = 0, $3255 = 0, $3256 = 0, $3257 = 0, $3258 = 0, $3259 = 0, $326 = 0, $3260 = 0, $3261 = 0, $3262 = 0, $3263 = 0, $3264 = 0, $3265 = 0;
 var $3266 = 0.0, $3267 = 0, $3268 = 0, $3269 = 0, $327 = 0, $3270 = 0, $3271 = 0, $3272 = 0, $3273 = 0, $3274 = 0, $3275 = 0, $3276 = 0, $3277 = 0, $3278 = 0, $3279 = 0, $328 = 0, $3280 = 0, $3281 = 0.0, $3282 = 0.0, $3283 = 0.0;
 var $3284 = 0.0, $3285 = 0.0, $3286 = 0.0, $3287 = 0.0, $3288 = 0.0, $3289 = 0.0, $329 = 0, $3290 = 0.0, $3291 = 0.0, $3292 = 0.0, $3293 = 0.0, $3294 = 0.0, $3295 = 0.0, $3296 = 0.0, $3297 = 0.0, $3298 = 0.0, $3299 = 0.0, $33 = 0, $330 = 0, $3300 = 0.0;
 var $3301 = 0.0, $3302 = 0.0, $3303 = 0.0, $3304 = 0.0, $3305 = 0.0, $3306 = 0.0, $3307 = 0.0, $3308 = 0.0, $3309 = 0.0, $331 = 0, $3310 = 0.0, $3311 = 0.0, $3312 = 0.0, $3313 = 0, $3314 = 0.0, $3315 = 0.0, $3316 = 0, $3317 = 0.0, $3318 = 0, $3319 = 0.0;
 var $332 = 0, $3320 = 0, $3321 = 0.0, $3322 = 0, $3323 = 0.0, $3324 = 0, $3325 = 0.0, $3326 = 0, $3327 = 0.0, $3328 = 0, $3329 = 0.0, $333 = 0, $3330 = 0.0, $3331 = 0, $3332 = 0.0, $3333 = 0.0, $3334 = 0, $3335 = 0.0, $3336 = 0.0, $3337 = 0.0;
 var $3338 = 0.0, $3339 = 0.0, $334 = 0, $3340 = 0, $3341 = 0.0, $3342 = 0.0, $3343 = 0.0, $3344 = 0.0, $3345 = 0.0, $3346 = 0, $3347 = 0.0, $3348 = 0, $3349 = 0.0, $335 = 0, $3350 = 0.0, $3351 = 0.0, $3352 = 0.0, $3353 = 0.0, $3354 = 0.0, $3355 = 0.0;
 var $3356 = 0.0, $3357 = 0.0, $3358 = 0.0, $3359 = 0.0, $336 = 0, $3360 = 0.0, $3361 = 0.0, $3362 = 0.0, $3363 = 0.0, $3364 = 0.0, $3365 = 0.0, $3366 = 0.0, $3367 = 0.0, $3368 = 0.0, $3369 = 0.0, $337 = 0, $3370 = 0.0, $3371 = 0.0, $3372 = 0.0, $3373 = 0.0;
 var $3374 = 0.0, $3375 = 0.0, $3376 = 0.0, $3377 = 0.0, $3378 = 0.0, $3379 = 0, $338 = 0, $3380 = 0.0, $3381 = 0.0, $3382 = 0.0, $3383 = 0, $3384 = 0.0, $3385 = 0, $3386 = 0.0, $3387 = 0, $3388 = 0.0, $3389 = 0, $339 = 0, $3390 = 0.0, $3391 = 0;
 var $3392 = 0.0, $3393 = 0, $3394 = 0.0, $3395 = 0, $3396 = 0, $3397 = 0, $3398 = 0.0, $3399 = 0, $34 = 0, $340 = 0, $3400 = 0, $3401 = 0, $3402 = 0, $3403 = 0, $3404 = 0, $3405 = 0, $3406 = 0, $3407 = 0, $3408 = 0, $3409 = 0;
 var $341 = 0, $3410 = 0, $3411 = 0, $3412 = 0.0, $3413 = 0, $3414 = 0, $3415 = 0, $3416 = 0, $3417 = 0, $3418 = 0, $3419 = 0, $342 = 0, $3420 = 0, $3421 = 0, $3422 = 0, $3423 = 0, $3424 = 0, $3425 = 0, $3426 = 0.0, $3427 = 0;
 var $3428 = 0, $3429 = 0, $343 = 0, $3430 = 0, $3431 = 0, $3432 = 0, $3433 = 0, $3434 = 0, $3435 = 0, $3436 = 0, $3437 = 0, $3438 = 0, $3439 = 0, $344 = 0, $3440 = 0.0, $3441 = 0, $3442 = 0, $3443 = 0, $3444 = 0, $3445 = 0;
 var $3446 = 0, $3447 = 0, $3448 = 0, $3449 = 0, $345 = 0, $3450 = 0, $3451 = 0, $3452 = 0, $3453 = 0, $3454 = 0.0, $3455 = 0, $3456 = 0, $3457 = 0, $3458 = 0, $3459 = 0, $346 = 0, $3460 = 0, $3461 = 0, $3462 = 0, $3463 = 0;
 var $3464 = 0, $3465 = 0, $3466 = 0, $3467 = 0, $3468 = 0.0, $3469 = 0, $347 = 0, $3470 = 0, $3471 = 0, $3472 = 0, $3473 = 0, $3474 = 0, $3475 = 0, $3476 = 0, $3477 = 0, $3478 = 0, $3479 = 0, $348 = 0, $3480 = 0, $3481 = 0;
 var $3482 = 0.0, $3483 = 0, $3484 = 0, $3485 = 0, $3486 = 0, $3487 = 0, $3488 = 0, $3489 = 0, $349 = 0, $3490 = 0, $3491 = 0, $3492 = 0, $3493 = 0, $3494 = 0, $3495 = 0, $3496 = 0, $3497 = 0.0, $3498 = 0.0, $3499 = 0.0, $35 = 0;
 var $350 = 0, $3500 = 0.0, $3501 = 0.0, $3502 = 0.0, $3503 = 0.0, $3504 = 0.0, $3505 = 0.0, $3506 = 0.0, $3507 = 0.0, $3508 = 0.0, $3509 = 0.0, $351 = 0, $3510 = 0.0, $3511 = 0.0, $3512 = 0.0, $3513 = 0.0, $3514 = 0.0, $3515 = 0.0, $3516 = 0.0, $3517 = 0.0;
 var $3518 = 0.0, $3519 = 0.0, $352 = 0, $3520 = 0.0, $3521 = 0.0, $3522 = 0.0, $3523 = 0.0, $3524 = 0.0, $3525 = 0.0, $3526 = 0.0, $3527 = 0.0, $3528 = 0.0, $3529 = 0.0, $353 = 0, $3530 = 0, $3531 = 0.0, $3532 = 0.0, $3533 = 0, $3534 = 0.0, $3535 = 0;
 var $3536 = 0.0, $3537 = 0, $3538 = 0.0, $3539 = 0, $354 = 0, $3540 = 0.0, $3541 = 0, $3542 = 0.0, $3543 = 0, $3544 = 0.0, $3545 = 0, $3546 = 0.0, $3547 = 0, $3548 = 0.0, $3549 = 0.0, $355 = 0, $3550 = 0.0, $3551 = 0, $3552 = 0, $3553 = 0.0;
 var $3554 = 0.0, $3555 = 0, $3556 = 0, $3557 = 0.0, $3558 = 0.0, $3559 = 0.0, $356 = 0, $3560 = 0.0, $3561 = 0.0, $3562 = 0.0, $3563 = 0.0, $3564 = 0, $3565 = 0.0, $3566 = 0, $3567 = 0.0, $3568 = 0.0, $3569 = 0.0, $357 = 0, $3570 = 0.0, $3571 = 0.0;
 var $3572 = 0.0, $3573 = 0.0, $3574 = 0.0, $3575 = 0.0, $3576 = 0.0, $3577 = 0.0, $3578 = 0.0, $3579 = 0.0, $358 = 0, $3580 = 0.0, $3581 = 0.0, $3582 = 0.0, $3583 = 0.0, $3584 = 0.0, $3585 = 0.0, $3586 = 0.0, $3587 = 0.0, $3588 = 0.0, $3589 = 0.0, $359 = 0;
 var $3590 = 0.0, $3591 = 0.0, $3592 = 0.0, $3593 = 0.0, $3594 = 0.0, $3595 = 0.0, $3596 = 0.0, $3597 = 0.0, $3598 = 0.0, $3599 = 0.0, $36 = 0, $360 = 0, $3600 = 0, $3601 = 0.0, $3602 = 0.0, $3603 = 0.0, $3604 = 0, $3605 = 0.0, $3606 = 0, $3607 = 0.0;
 var $3608 = 0, $3609 = 0.0, $361 = 0, $3610 = 0, $3611 = 0.0, $3612 = 0, $3613 = 0.0, $3614 = 0, $3615 = 0.0, $3616 = 0, $3617 = 0, $3618 = 0, $3619 = 0.0, $362 = 0, $3620 = 0, $3621 = 0, $3622 = 0, $3623 = 0, $3624 = 0, $3625 = 0;
 var $3626 = 0, $3627 = 0, $3628 = 0, $3629 = 0, $363 = 0, $3630 = 0, $3631 = 0, $3632 = 0, $3633 = 0.0, $3634 = 0, $3635 = 0, $3636 = 0, $3637 = 0, $3638 = 0, $3639 = 0, $364 = 0, $3640 = 0, $3641 = 0, $3642 = 0, $3643 = 0;
 var $3644 = 0, $3645 = 0, $3646 = 0, $3647 = 0.0, $3648 = 0, $3649 = 0, $365 = 0, $3650 = 0, $3651 = 0, $3652 = 0, $3653 = 0, $3654 = 0, $3655 = 0, $3656 = 0, $3657 = 0, $3658 = 0, $3659 = 0, $366 = 0, $3660 = 0, $3661 = 0.0;
 var $3662 = 0, $3663 = 0, $3664 = 0, $3665 = 0, $3666 = 0, $3667 = 0, $3668 = 0, $3669 = 0, $367 = 0, $3670 = 0, $3671 = 0, $3672 = 0, $3673 = 0, $3674 = 0, $3675 = 0.0, $3676 = 0, $3677 = 0, $3678 = 0, $3679 = 0, $368 = 0;
 var $3680 = 0, $3681 = 0, $3682 = 0, $3683 = 0, $3684 = 0, $3685 = 0, $3686 = 0, $3687 = 0, $3688 = 0, $3689 = 0.0, $369 = 0, $3690 = 0, $3691 = 0, $3692 = 0, $3693 = 0, $3694 = 0, $3695 = 0, $3696 = 0, $3697 = 0, $3698 = 0;
 var $3699 = 0, $37 = 0, $370 = 0, $3700 = 0, $3701 = 0, $3702 = 0, $3703 = 0.0, $3704 = 0, $3705 = 0, $3706 = 0, $3707 = 0, $3708 = 0, $3709 = 0, $371 = 0, $3710 = 0, $3711 = 0, $3712 = 0, $3713 = 0, $3714 = 0, $3715 = 0;
 var $3716 = 0, $3717 = 0, $3718 = 0.0, $3719 = 0, $372 = 0, $3720 = 0, $3721 = 0.0, $3722 = 0.0, $3723 = 0, $3724 = 0, $3725 = 0.0, $3726 = 0, $3727 = 0, $3728 = 0.0, $3729 = 0.0, $373 = 0, $3730 = 0.0, $3731 = 0.0, $3732 = 0.0, $3733 = 0.0;
 var $3734 = 0.0, $3735 = 0.0, $3736 = 0.0, $3737 = 0.0, $3738 = 0.0, $3739 = 0.0, $374 = 0, $3740 = 0.0, $3741 = 0, $3742 = 0.0, $3743 = 0.0, $3744 = 0.0, $3745 = 0, $3746 = 0.0, $3747 = 0.0, $3748 = 0.0, $3749 = 0.0, $375 = 0, $3750 = 0.0, $3751 = 0;
 var $3752 = 0.0, $3753 = 0.0, $3754 = 0.0, $3755 = 0.0, $3756 = 0.0, $3757 = 0.0, $3758 = 0.0, $3759 = 0.0, $376 = 0, $3760 = 0.0, $3761 = 0.0, $3762 = 0.0, $3763 = 0.0, $3764 = 0.0, $3765 = 0.0, $3766 = 0.0, $3767 = 0.0, $3768 = 0.0, $3769 = 0, $377 = 0;
 var $3770 = 0.0, $3771 = 0, $3772 = 0.0, $3773 = 0.0, $3774 = 0.0, $3775 = 0.0, $3776 = 0.0, $3777 = 0.0, $3778 = 0.0, $3779 = 0.0, $378 = 0, $3780 = 0.0, $3781 = 0.0, $3782 = 0.0, $3783 = 0.0, $3784 = 0.0, $3785 = 0.0, $3786 = 0.0, $3787 = 0.0, $3788 = 0.0;
 var $3789 = 0.0, $379 = 0, $3790 = 0.0, $3791 = 0.0, $3792 = 0.0, $3793 = 0.0, $3794 = 0.0, $3795 = 0.0, $3796 = 0.0, $3797 = 0.0, $3798 = 0.0, $3799 = 0.0, $38 = 0, $380 = 0, $3800 = 0.0, $3801 = 0.0, $3802 = 0.0, $3803 = 0.0, $3804 = 0.0, $3805 = 0.0;
 var $3806 = 0.0, $3807 = 0.0, $3808 = 0.0, $3809 = 0.0, $381 = 0, $3810 = 0.0, $3811 = 0.0, $3812 = 0.0, $3813 = 0.0, $3814 = 0.0, $3815 = 0.0, $3816 = 0.0, $3817 = 0.0, $3818 = 0.0, $3819 = 0.0, $382 = 0, $3820 = 0.0, $3821 = 0.0, $3822 = 0.0, $3823 = 0.0;
 var $3824 = 0.0, $3825 = 0.0, $3826 = 0.0, $3827 = 0.0, $3828 = 0.0, $3829 = 0.0, $383 = 0, $3830 = 0.0, $3831 = 0.0, $3832 = 0.0, $3833 = 0.0, $3834 = 0.0, $3835 = 0.0, $3836 = 0.0, $3837 = 0.0, $3838 = 0.0, $3839 = 0, $384 = 0, $3840 = 0.0, $3841 = 0.0;
 var $3842 = 0.0, $3843 = 0, $3844 = 0.0, $3845 = 0, $3846 = 0.0, $3847 = 0, $3848 = 0.0, $3849 = 0, $385 = 0, $3850 = 0.0, $3851 = 0, $3852 = 0.0, $3853 = 0, $3854 = 0.0, $3855 = 0, $3856 = 0.0, $3857 = 0, $3858 = 0.0, $3859 = 0, $386 = 0;
 var $3860 = 0.0, $3861 = 0, $3862 = 0.0, $3863 = 0, $3864 = 0, $3865 = 0, $3866 = 0.0, $3867 = 0, $3868 = 0, $3869 = 0, $387 = 0, $3870 = 0, $3871 = 0, $3872 = 0, $3873 = 0, $3874 = 0, $3875 = 0, $3876 = 0, $3877 = 0, $3878 = 0;
 var $3879 = 0, $388 = 0, $3880 = 0.0, $3881 = 0, $3882 = 0, $3883 = 0, $3884 = 0, $3885 = 0, $3886 = 0, $3887 = 0, $3888 = 0, $3889 = 0, $389 = 0, $3890 = 0, $3891 = 0, $3892 = 0, $3893 = 0, $3894 = 0.0, $3895 = 0, $3896 = 0;
 var $3897 = 0, $3898 = 0, $3899 = 0, $39 = 0, $390 = 0, $3900 = 0, $3901 = 0, $3902 = 0, $3903 = 0, $3904 = 0, $3905 = 0, $3906 = 0, $3907 = 0, $3908 = 0.0, $3909 = 0, $391 = 0, $3910 = 0, $3911 = 0, $3912 = 0, $3913 = 0;
 var $3914 = 0, $3915 = 0, $3916 = 0, $3917 = 0, $3918 = 0, $3919 = 0, $392 = 0, $3920 = 0, $3921 = 0, $3922 = 0.0, $3923 = 0, $3924 = 0, $3925 = 0, $3926 = 0, $3927 = 0, $3928 = 0, $3929 = 0, $393 = 0, $3930 = 0, $3931 = 0;
 var $3932 = 0, $3933 = 0, $3934 = 0, $3935 = 0, $3936 = 0.0, $3937 = 0, $3938 = 0, $3939 = 0, $394 = 0, $3940 = 0, $3941 = 0, $3942 = 0, $3943 = 0, $3944 = 0, $3945 = 0, $3946 = 0, $3947 = 0, $3948 = 0, $3949 = 0, $395 = 0;
 var $3950 = 0.0, $3951 = 0, $3952 = 0, $3953 = 0, $3954 = 0, $3955 = 0, $3956 = 0, $3957 = 0, $3958 = 0, $3959 = 0, $396 = 0, $3960 = 0, $3961 = 0, $3962 = 0, $3963 = 0, $3964 = 0, $3965 = 0.0, $3966 = 0, $3967 = 0, $3968 = 0.0;
 var $3969 = 0.0, $397 = 0, $3970 = 0, $3971 = 0, $3972 = 0.0, $3973 = 0.0, $3974 = 0.0, $3975 = 0.0, $3976 = 0.0, $3977 = 0.0, $3978 = 0.0, $3979 = 0.0, $398 = 0, $3980 = 0.0, $3981 = 0.0, $3982 = 0.0, $3983 = 0.0, $3984 = 0.0, $3985 = 0.0, $3986 = 0;
 var $3987 = 0.0, $3988 = 0.0, $3989 = 0.0, $399 = 0, $3990 = 0, $3991 = 0.0, $3992 = 0.0, $3993 = 0.0, $3994 = 0.0, $3995 = 0.0, $3996 = 0, $3997 = 0.0, $3998 = 0.0, $3999 = 0.0, $4 = 0, $40 = 0, $400 = 0, $4000 = 0.0, $4001 = 0.0, $4002 = 0.0;
 var $4003 = 0.0, $4004 = 0.0, $4005 = 0.0, $4006 = 0.0, $4007 = 0.0, $4008 = 0.0, $4009 = 0.0, $401 = 0, $4010 = 0.0, $4011 = 0.0, $4012 = 0.0, $4013 = 0.0, $4014 = 0.0, $4015 = 0, $4016 = 0.0, $4017 = 0, $4018 = 0.0, $4019 = 0.0, $402 = 0, $4020 = 0.0;
 var $4021 = 0.0, $4022 = 0.0, $4023 = 0.0, $4024 = 0.0, $4025 = 0.0, $4026 = 0.0, $4027 = 0.0, $4028 = 0.0, $4029 = 0.0, $403 = 0, $4030 = 0.0, $4031 = 0.0, $4032 = 0.0, $4033 = 0.0, $4034 = 0.0, $4035 = 0.0, $4036 = 0.0, $4037 = 0.0, $4038 = 0.0, $4039 = 0.0;
 var $404 = 0, $4040 = 0.0, $4041 = 0.0, $4042 = 0.0, $4043 = 0.0, $4044 = 0.0, $4045 = 0.0, $4046 = 0.0, $4047 = 0.0, $4048 = 0.0, $4049 = 0.0, $405 = 0, $4050 = 0.0, $4051 = 0.0, $4052 = 0.0, $4053 = 0.0, $4054 = 0.0, $4055 = 0.0, $4056 = 0.0, $4057 = 0.0;
 var $4058 = 0.0, $4059 = 0.0, $406 = 0, $4060 = 0.0, $4061 = 0.0, $4062 = 0.0, $4063 = 0.0, $4064 = 0.0, $4065 = 0.0, $4066 = 0.0, $4067 = 0.0, $4068 = 0.0, $4069 = 0.0, $407 = 0, $4070 = 0.0, $4071 = 0.0, $4072 = 0.0, $4073 = 0.0, $4074 = 0.0, $4075 = 0.0;
 var $4076 = 0.0, $4077 = 0.0, $4078 = 0.0, $4079 = 0.0, $408 = 0, $4080 = 0.0, $4081 = 0.0, $4082 = 0.0, $4083 = 0.0, $4084 = 0.0, $4085 = 0, $4086 = 0.0, $4087 = 0.0, $4088 = 0.0, $4089 = 0, $409 = 0, $4090 = 0.0, $4091 = 0, $4092 = 0.0, $4093 = 0;
 var $4094 = 0.0, $4095 = 0, $4096 = 0.0, $4097 = 0, $4098 = 0.0, $4099 = 0, $41 = 0, $410 = 0, $4100 = 0.0, $4101 = 0, $4102 = 0.0, $4103 = 0, $4104 = 0.0, $4105 = 0, $4106 = 0.0, $4107 = 0, $4108 = 0.0, $4109 = 0, $411 = 0, $4110 = 0;
 var $4111 = 0, $4112 = 0.0, $4113 = 0, $4114 = 0, $4115 = 0, $4116 = 0, $4117 = 0, $4118 = 0, $4119 = 0, $412 = 0, $4120 = 0, $4121 = 0, $4122 = 0, $4123 = 0, $4124 = 0, $4125 = 0, $4126 = 0.0, $4127 = 0, $4128 = 0, $4129 = 0;
 var $413 = 0, $4130 = 0, $4131 = 0, $4132 = 0, $4133 = 0, $4134 = 0, $4135 = 0, $4136 = 0, $4137 = 0, $4138 = 0, $4139 = 0, $414 = 0, $4140 = 0.0, $4141 = 0, $4142 = 0, $4143 = 0, $4144 = 0, $4145 = 0, $4146 = 0, $4147 = 0;
 var $4148 = 0, $4149 = 0, $415 = 0, $4150 = 0, $4151 = 0, $4152 = 0, $4153 = 0, $4154 = 0.0, $4155 = 0, $4156 = 0, $4157 = 0, $4158 = 0, $4159 = 0, $416 = 0, $4160 = 0, $4161 = 0, $4162 = 0, $4163 = 0, $4164 = 0, $4165 = 0;
 var $4166 = 0, $4167 = 0, $4168 = 0.0, $4169 = 0, $417 = 0, $4170 = 0, $4171 = 0, $4172 = 0, $4173 = 0, $4174 = 0, $4175 = 0, $4176 = 0, $4177 = 0, $4178 = 0, $4179 = 0, $418 = 0, $4180 = 0, $4181 = 0, $4182 = 0.0, $4183 = 0;
 var $4184 = 0, $4185 = 0, $4186 = 0, $4187 = 0, $4188 = 0, $4189 = 0, $419 = 0, $4190 = 0, $4191 = 0, $4192 = 0, $4193 = 0, $4194 = 0, $4195 = 0, $4196 = 0.0, $4197 = 0, $4198 = 0, $4199 = 0, $42 = 0, $420 = 0, $4200 = 0;
 var $4201 = 0, $4202 = 0, $4203 = 0, $4204 = 0, $4205 = 0, $4206 = 0, $4207 = 0, $4208 = 0, $4209 = 0, $421 = 0, $4210 = 0, $4211 = 0.0, $4212 = 0.0, $4213 = 0, $4214 = 0, $4215 = 0.0, $4216 = 0.0, $4217 = 0.0, $4218 = 0, $4219 = 0;
 var $422 = 0, $4220 = 0.0, $4221 = 0.0, $4222 = 0.0, $4223 = 0.0, $4224 = 0.0, $4225 = 0.0, $4226 = 0.0, $4227 = 0, $4228 = 0.0, $4229 = 0, $423 = 0, $4230 = 0.0, $4231 = 0.0, $4232 = 0.0, $4233 = 0.0, $4234 = 0.0, $4235 = 0.0, $4236 = 0.0, $4237 = 0.0;
 var $4238 = 0.0, $4239 = 0.0, $424 = 0, $4240 = 0.0, $4241 = 0.0, $4242 = 0.0, $4243 = 0.0, $4244 = 0.0, $4245 = 0.0, $4246 = 0.0, $4247 = 0.0, $4248 = 0.0, $4249 = 0.0, $425 = 0, $4250 = 0.0, $4251 = 0.0, $4252 = 0.0, $4253 = 0.0, $4254 = 0.0, $4255 = 0.0;
 var $4256 = 0.0, $4257 = 0.0, $4258 = 0.0, $4259 = 0.0, $426 = 0, $4260 = 0.0, $4261 = 0.0, $4262 = 0.0, $4263 = 0.0, $4264 = 0.0, $4265 = 0.0, $4266 = 0.0, $4267 = 0.0, $4268 = 0.0, $4269 = 0.0, $427 = 0, $4270 = 0.0, $4271 = 0.0, $4272 = 0.0, $4273 = 0.0;
 var $4274 = 0.0, $4275 = 0.0, $4276 = 0.0, $4277 = 0.0, $4278 = 0.0, $4279 = 0.0, $428 = 0, $4280 = 0.0, $4281 = 0.0, $4282 = 0.0, $4283 = 0.0, $4284 = 0.0, $4285 = 0.0, $4286 = 0.0, $4287 = 0.0, $4288 = 0.0, $4289 = 0.0, $429 = 0, $4290 = 0.0, $4291 = 0.0;
 var $4292 = 0.0, $4293 = 0.0, $4294 = 0.0, $4295 = 0.0, $4296 = 0.0, $4297 = 0, $4298 = 0.0, $4299 = 0.0, $43 = 0, $430 = 0, $4300 = 0.0, $4301 = 0, $4302 = 0.0, $4303 = 0, $4304 = 0.0, $4305 = 0, $4306 = 0.0, $4307 = 0, $4308 = 0.0, $4309 = 0;
 var $431 = 0, $4310 = 0.0, $4311 = 0, $4312 = 0.0, $4313 = 0, $4314 = 0.0, $4315 = 0, $4316 = 0.0, $4317 = 0, $4318 = 0.0, $4319 = 0, $432 = 0, $4320 = 0.0, $4321 = 0, $4322 = 0, $4323 = 0, $4324 = 0.0, $4325 = 0, $4326 = 0, $4327 = 0;
 var $4328 = 0, $4329 = 0, $433 = 0, $4330 = 0, $4331 = 0, $4332 = 0, $4333 = 0, $4334 = 0, $4335 = 0, $4336 = 0, $4337 = 0, $4338 = 0.0, $4339 = 0, $434 = 0, $4340 = 0, $4341 = 0, $4342 = 0, $4343 = 0, $4344 = 0, $4345 = 0;
 var $4346 = 0, $4347 = 0, $4348 = 0, $4349 = 0, $435 = 0, $4350 = 0, $4351 = 0, $4352 = 0.0, $4353 = 0, $4354 = 0, $4355 = 0, $4356 = 0, $4357 = 0, $4358 = 0, $4359 = 0, $436 = 0, $4360 = 0, $4361 = 0, $4362 = 0, $4363 = 0;
 var $4364 = 0, $4365 = 0, $4366 = 0.0, $4367 = 0, $4368 = 0, $4369 = 0, $437 = 0, $4370 = 0, $4371 = 0, $4372 = 0, $4373 = 0, $4374 = 0, $4375 = 0, $4376 = 0, $4377 = 0, $4378 = 0, $4379 = 0, $438 = 0, $4380 = 0.0, $4381 = 0;
 var $4382 = 0, $4383 = 0, $4384 = 0, $4385 = 0, $4386 = 0, $4387 = 0, $4388 = 0, $4389 = 0, $439 = 0, $4390 = 0, $4391 = 0, $4392 = 0, $4393 = 0, $4394 = 0.0, $4395 = 0, $4396 = 0, $4397 = 0, $4398 = 0, $4399 = 0, $44 = 0;
 var $440 = 0, $4400 = 0, $4401 = 0, $4402 = 0, $4403 = 0, $4404 = 0, $4405 = 0, $4406 = 0, $4407 = 0, $4408 = 0.0, $4409 = 0, $441 = 0, $4410 = 0, $4411 = 0, $4412 = 0, $4413 = 0, $4414 = 0, $4415 = 0, $4416 = 0, $4417 = 0;
 var $4418 = 0, $4419 = 0, $442 = 0, $4420 = 0, $4421 = 0, $4422 = 0, $4423 = 0.0, $4424 = 0.0, $4425 = 0, $4426 = 0, $4427 = 0.0, $4428 = 0.0, $4429 = 0, $443 = 0, $4430 = 0, $4431 = 0.0, $4432 = 0.0, $4433 = 0.0, $4434 = 0.0, $4435 = 0.0;
 var $4436 = 0.0, $4437 = 0.0, $4438 = 0, $4439 = 0.0, $444 = 0, $4440 = 0, $4441 = 0.0, $4442 = 0.0, $4443 = 0.0, $4444 = 0.0, $4445 = 0.0, $4446 = 0.0, $4447 = 0.0, $4448 = 0.0, $4449 = 0.0, $445 = 0, $4450 = 0.0, $4451 = 0.0, $4452 = 0.0, $4453 = 0.0;
 var $4454 = 0.0, $4455 = 0.0, $4456 = 0.0, $4457 = 0.0, $4458 = 0.0, $4459 = 0.0, $446 = 0, $4460 = 0.0, $4461 = 0.0, $4462 = 0.0, $4463 = 0.0, $4464 = 0.0, $4465 = 0.0, $4466 = 0.0, $4467 = 0.0, $4468 = 0.0, $4469 = 0.0, $447 = 0, $4470 = 0.0, $4471 = 0.0;
 var $4472 = 0.0, $4473 = 0.0, $4474 = 0.0, $4475 = 0.0, $4476 = 0.0, $4477 = 0.0, $4478 = 0.0, $4479 = 0.0, $448 = 0, $4480 = 0.0, $4481 = 0.0, $4482 = 0.0, $4483 = 0.0, $4484 = 0.0, $4485 = 0.0, $4486 = 0.0, $4487 = 0.0, $4488 = 0.0, $4489 = 0.0, $449 = 0;
 var $4490 = 0.0, $4491 = 0.0, $4492 = 0.0, $4493 = 0.0, $4494 = 0.0, $4495 = 0.0, $4496 = 0, $4497 = 0.0, $4498 = 0.0, $4499 = 0.0, $45 = 0, $450 = 0, $4500 = 0, $4501 = 0.0, $4502 = 0, $4503 = 0.0, $4504 = 0, $4505 = 0.0, $4506 = 0, $4507 = 0.0;
 var $4508 = 0, $4509 = 0.0, $451 = 0, $4510 = 0, $4511 = 0.0, $4512 = 0, $4513 = 0.0, $4514 = 0.0, $4515 = 0.0, $4516 = 0.0, $4517 = 0.0, $4518 = 0.0, $4519 = 0.0, $452 = 0, $4520 = 0.0, $4521 = 0.0, $4522 = 0.0, $4523 = 0.0, $4524 = 0.0, $4525 = 0.0;
 var $4526 = 0.0, $4527 = 0.0, $4528 = 0.0, $4529 = 0.0, $453 = 0, $4530 = 0.0, $4531 = 0.0, $4532 = 0.0, $4533 = 0.0, $4534 = 0.0, $4535 = 0.0, $4536 = 0.0, $4537 = 0.0, $4538 = 0.0, $4539 = 0.0, $454 = 0, $4540 = 0.0, $4541 = 0.0, $4542 = 0.0, $4543 = 0.0;
 var $4544 = 0.0, $4545 = 0.0, $4546 = 0.0, $4547 = 0.0, $4548 = 0.0, $4549 = 0.0, $455 = 0, $4550 = 0.0, $4551 = 0.0, $4552 = 0.0, $4553 = 0.0, $4554 = 0.0, $4555 = 0.0, $4556 = 0.0, $4557 = 0.0, $4558 = 0.0, $4559 = 0.0, $456 = 0, $4560 = 0.0, $4561 = 0.0;
 var $4562 = 0.0, $4563 = 0.0, $4564 = 0.0, $4565 = 0.0, $4566 = 0.0, $4567 = 0.0, $4568 = 0.0, $4569 = 0.0, $457 = 0, $4570 = 0.0, $4571 = 0.0, $4572 = 0.0, $4573 = 0.0, $4574 = 0.0, $4575 = 0.0, $4576 = 0.0, $4577 = 0.0, $4578 = 0.0, $4579 = 0.0, $458 = 0;
 var $4580 = 0.0, $4581 = 0.0, $4582 = 0.0, $4583 = 0.0, $4584 = 0.0, $4585 = 0.0, $4586 = 0.0, $4587 = 0.0, $4588 = 0.0, $4589 = 0.0, $459 = 0, $4590 = 0.0, $4591 = 0.0, $4592 = 0.0, $4593 = 0.0, $4594 = 0.0, $4595 = 0.0, $4596 = 0.0, $4597 = 0.0, $4598 = 0.0;
 var $4599 = 0.0, $46 = 0, $460 = 0, $4600 = 0.0, $4601 = 0.0, $4602 = 0.0, $4603 = 0.0, $4604 = 0.0, $4605 = 0.0, $4606 = 0.0, $4607 = 0.0, $4608 = 0, $4609 = 0.0, $461 = 0, $4610 = 0.0, $4611 = 0, $4612 = 0.0, $4613 = 0.0, $4614 = 0.0, $4615 = 0.0;
 var $4616 = 0.0, $4617 = 0.0, $4618 = 0.0, $4619 = 0.0, $462 = 0, $4620 = 0.0, $4621 = 0.0, $4622 = 0.0, $4623 = 0.0, $4624 = 0.0, $4625 = 0.0, $4626 = 0.0, $4627 = 0.0, $4628 = 0.0, $4629 = 0.0, $463 = 0, $4630 = 0.0, $4631 = 0.0, $4632 = 0.0, $4633 = 0.0;
 var $4634 = 0.0, $4635 = 0.0, $4636 = 0.0, $4637 = 0.0, $4638 = 0.0, $4639 = 0.0, $464 = 0, $4640 = 0.0, $4641 = 0.0, $4642 = 0.0, $4643 = 0.0, $4644 = 0.0, $4645 = 0.0, $4646 = 0.0, $4647 = 0.0, $4648 = 0.0, $4649 = 0.0, $465 = 0, $4650 = 0.0, $4651 = 0.0;
 var $4652 = 0.0, $4653 = 0.0, $4654 = 0.0, $4655 = 0.0, $4656 = 0.0, $4657 = 0.0, $4658 = 0.0, $4659 = 0.0, $466 = 0, $4660 = 0.0, $4661 = 0.0, $4662 = 0.0, $4663 = 0.0, $4664 = 0.0, $4665 = 0.0, $4666 = 0.0, $4667 = 0.0, $4668 = 0.0, $4669 = 0.0, $467 = 0;
 var $4670 = 0.0, $4671 = 0.0, $4672 = 0.0, $4673 = 0.0, $4674 = 0.0, $4675 = 0.0, $4676 = 0.0, $4677 = 0.0, $4678 = 0.0, $4679 = 0.0, $468 = 0, $4680 = 0.0, $4681 = 0.0, $4682 = 0.0, $4683 = 0.0, $4684 = 0.0, $4685 = 0.0, $4686 = 0.0, $4687 = 0.0, $4688 = 0.0;
 var $4689 = 0.0, $469 = 0, $4690 = 0.0, $4691 = 0.0, $4692 = 0.0, $4693 = 0.0, $4694 = 0.0, $4695 = 0.0, $4696 = 0.0, $4697 = 0.0, $4698 = 0.0, $4699 = 0.0, $47 = 0, $470 = 0, $4700 = 0.0, $4701 = 0.0, $4702 = 0.0, $4703 = 0.0, $4704 = 0.0, $4705 = 0.0;
 var $4706 = 0.0, $4707 = 0, $4708 = 0.0, $4709 = 0.0, $471 = 0, $4710 = 0, $4711 = 0.0, $4712 = 0.0, $4713 = 0.0, $4714 = 0.0, $4715 = 0.0, $4716 = 0.0, $4717 = 0.0, $4718 = 0.0, $4719 = 0.0, $472 = 0, $4720 = 0.0, $4721 = 0.0, $4722 = 0.0, $4723 = 0.0;
 var $4724 = 0.0, $4725 = 0.0, $4726 = 0.0, $4727 = 0.0, $4728 = 0.0, $4729 = 0.0, $473 = 0, $4730 = 0.0, $4731 = 0.0, $4732 = 0.0, $4733 = 0.0, $4734 = 0.0, $4735 = 0.0, $4736 = 0.0, $4737 = 0.0, $4738 = 0.0, $4739 = 0.0, $474 = 0, $4740 = 0.0, $4741 = 0.0;
 var $4742 = 0.0, $4743 = 0.0, $4744 = 0.0, $4745 = 0.0, $4746 = 0.0, $4747 = 0.0, $4748 = 0.0, $4749 = 0.0, $475 = 0, $4750 = 0.0, $4751 = 0.0, $4752 = 0.0, $4753 = 0.0, $4754 = 0.0, $4755 = 0.0, $4756 = 0.0, $4757 = 0.0, $4758 = 0.0, $4759 = 0.0, $476 = 0;
 var $4760 = 0.0, $4761 = 0.0, $4762 = 0.0, $4763 = 0.0, $4764 = 0.0, $4765 = 0.0, $4766 = 0.0, $4767 = 0.0, $4768 = 0.0, $4769 = 0.0, $477 = 0, $4770 = 0.0, $4771 = 0.0, $4772 = 0.0, $4773 = 0.0, $4774 = 0.0, $4775 = 0.0, $4776 = 0.0, $4777 = 0.0, $4778 = 0.0;
 var $4779 = 0.0, $478 = 0, $4780 = 0.0, $4781 = 0.0, $4782 = 0.0, $4783 = 0.0, $4784 = 0.0, $4785 = 0.0, $4786 = 0.0, $4787 = 0.0, $4788 = 0.0, $4789 = 0.0, $479 = 0, $4790 = 0.0, $4791 = 0.0, $4792 = 0.0, $4793 = 0.0, $4794 = 0.0, $4795 = 0.0, $4796 = 0.0;
 var $4797 = 0.0, $4798 = 0.0, $4799 = 0.0, $48 = 0, $480 = 0, $4800 = 0.0, $4801 = 0.0, $4802 = 0.0, $4803 = 0.0, $4804 = 0.0, $4805 = 0.0, $4806 = 0.0, $4807 = 0, $4808 = 0.0, $4809 = 0.0, $481 = 0, $4810 = 0, $4811 = 0.0, $4812 = 0, $4813 = 0.0;
 var $4814 = 0.0, $4815 = 0.0, $4816 = 0.0, $4817 = 0.0, $4818 = 0.0, $4819 = 0.0, $482 = 0, $4820 = 0.0, $4821 = 0.0, $4822 = 0.0, $4823 = 0.0, $4824 = 0.0, $4825 = 0.0, $4826 = 0.0, $4827 = 0.0, $4828 = 0.0, $4829 = 0.0, $483 = 0, $4830 = 0.0, $4831 = 0.0;
 var $4832 = 0.0, $4833 = 0.0, $4834 = 0.0, $4835 = 0.0, $4836 = 0.0, $4837 = 0.0, $4838 = 0.0, $4839 = 0.0, $484 = 0, $4840 = 0.0, $4841 = 0.0, $4842 = 0.0, $4843 = 0.0, $4844 = 0.0, $4845 = 0.0, $4846 = 0, $4847 = 0.0, $4848 = 0.0, $4849 = 0, $485 = 0;
 var $4850 = 0.0, $4851 = 0, $4852 = 0.0, $4853 = 0, $4854 = 0.0, $4855 = 0, $4856 = 0.0, $4857 = 0, $4858 = 0.0, $4859 = 0, $486 = 0, $4860 = 0.0, $4861 = 0, $4862 = 0.0, $4863 = 0.0, $4864 = 0.0, $4865 = 0, $4866 = 0, $4867 = 0.0, $4868 = 0.0;
 var $4869 = 0, $487 = 0, $4870 = 0, $4871 = 0.0, $4872 = 0.0, $4873 = 0.0, $4874 = 0.0, $4875 = 0.0, $4876 = 0.0, $4877 = 0.0, $4878 = 0, $4879 = 0.0, $488 = 0, $4880 = 0, $4881 = 0.0, $4882 = 0.0, $4883 = 0.0, $4884 = 0.0, $4885 = 0.0, $4886 = 0.0;
 var $4887 = 0.0, $4888 = 0.0, $4889 = 0.0, $489 = 0, $4890 = 0.0, $4891 = 0.0, $4892 = 0.0, $4893 = 0.0, $4894 = 0.0, $4895 = 0.0, $4896 = 0.0, $4897 = 0.0, $4898 = 0.0, $4899 = 0.0, $49 = 0, $490 = 0, $4900 = 0.0, $4901 = 0.0, $4902 = 0.0, $4903 = 0.0;
 var $4904 = 0.0, $4905 = 0.0, $4906 = 0.0, $4907 = 0.0, $4908 = 0.0, $4909 = 0.0, $491 = 0, $4910 = 0.0, $4911 = 0.0, $4912 = 0.0, $4913 = 0.0, $4914 = 0, $4915 = 0.0, $4916 = 0.0, $4917 = 0.0, $4918 = 0, $4919 = 0.0, $492 = 0, $4920 = 0, $4921 = 0.0;
 var $4922 = 0, $4923 = 0.0, $4924 = 0, $4925 = 0.0, $4926 = 0, $4927 = 0.0, $4928 = 0, $4929 = 0.0, $493 = 0, $4930 = 0, $4931 = 0, $4932 = 0, $4933 = 0.0, $4934 = 0, $4935 = 0, $4936 = 0, $4937 = 0, $4938 = 0, $4939 = 0, $494 = 0;
 var $4940 = 0, $4941 = 0, $4942 = 0, $4943 = 0, $4944 = 0, $4945 = 0, $4946 = 0, $4947 = 0.0, $4948 = 0, $4949 = 0, $495 = 0, $4950 = 0, $4951 = 0, $4952 = 0, $4953 = 0, $4954 = 0, $4955 = 0, $4956 = 0, $4957 = 0, $4958 = 0;
 var $4959 = 0, $496 = 0, $4960 = 0, $4961 = 0.0, $4962 = 0, $4963 = 0, $4964 = 0, $4965 = 0, $4966 = 0, $4967 = 0, $4968 = 0, $4969 = 0, $497 = 0, $4970 = 0, $4971 = 0, $4972 = 0, $4973 = 0, $4974 = 0, $4975 = 0.0, $4976 = 0;
 var $4977 = 0, $4978 = 0, $4979 = 0, $498 = 0, $4980 = 0, $4981 = 0, $4982 = 0, $4983 = 0, $4984 = 0, $4985 = 0, $4986 = 0, $4987 = 0, $4988 = 0, $4989 = 0.0, $499 = 0, $4990 = 0, $4991 = 0, $4992 = 0, $4993 = 0, $4994 = 0;
 var $4995 = 0, $4996 = 0, $4997 = 0, $4998 = 0, $4999 = 0, $5 = 0, $50 = 0, $500 = 0, $5000 = 0, $5001 = 0, $5002 = 0, $5003 = 0.0, $5004 = 0, $5005 = 0, $5006 = 0, $5007 = 0, $5008 = 0, $5009 = 0, $501 = 0, $5010 = 0;
 var $5011 = 0, $5012 = 0, $5013 = 0, $5014 = 0, $5015 = 0, $5016 = 0, $5017 = 0.0, $5018 = 0, $5019 = 0, $502 = 0, $5020 = 0, $5021 = 0, $5022 = 0, $5023 = 0, $5024 = 0, $5025 = 0, $5026 = 0, $5027 = 0, $5028 = 0, $5029 = 0;
 var $503 = 0, $5030 = 0, $5031 = 0, $5032 = 0.0, $5033 = 0.0, $5034 = 0.0, $5035 = 0.0, $5036 = 0.0, $5037 = 0.0, $5038 = 0.0, $5039 = 0.0, $504 = 0, $5040 = 0.0, $5041 = 0.0, $5042 = 0.0, $5043 = 0.0, $5044 = 0.0, $5045 = 0.0, $5046 = 0.0, $5047 = 0.0;
 var $5048 = 0.0, $5049 = 0.0, $505 = 0, $5050 = 0.0, $5051 = 0.0, $5052 = 0.0, $5053 = 0.0, $5054 = 0.0, $5055 = 0.0, $5056 = 0.0, $5057 = 0.0, $5058 = 0.0, $5059 = 0.0, $506 = 0, $5060 = 0.0, $5061 = 0.0, $5062 = 0.0, $5063 = 0.0, $5064 = 0.0, $5065 = 0;
 var $5066 = 0.0, $5067 = 0.0, $5068 = 0, $5069 = 0.0, $507 = 0, $5070 = 0, $5071 = 0.0, $5072 = 0, $5073 = 0.0, $5074 = 0, $5075 = 0.0, $5076 = 0, $5077 = 0.0, $5078 = 0, $5079 = 0.0, $508 = 0, $5080 = 0, $5081 = 0.0, $5082 = 0, $5083 = 0.0;
 var $5084 = 0.0, $5085 = 0, $5086 = 0.0, $5087 = 0.0, $5088 = 0, $5089 = 0.0, $509 = 0, $5090 = 0.0, $5091 = 0.0, $5092 = 0.0, $5093 = 0.0, $5094 = 0, $5095 = 0.0, $5096 = 0.0, $5097 = 0.0, $5098 = 0.0, $5099 = 0.0, $51 = 0, $510 = 0, $5100 = 0;
 var $5101 = 0.0, $5102 = 0, $5103 = 0.0, $5104 = 0.0, $5105 = 0.0, $5106 = 0.0, $5107 = 0.0, $5108 = 0.0, $5109 = 0.0, $511 = 0, $5110 = 0.0, $5111 = 0.0, $5112 = 0.0, $5113 = 0.0, $5114 = 0.0, $5115 = 0.0, $5116 = 0.0, $5117 = 0.0, $5118 = 0.0, $5119 = 0.0;
 var $512 = 0, $5120 = 0.0, $5121 = 0.0, $5122 = 0.0, $5123 = 0.0, $5124 = 0.0, $5125 = 0.0, $5126 = 0.0, $5127 = 0.0, $5128 = 0.0, $5129 = 0.0, $513 = 0, $5130 = 0.0, $5131 = 0.0, $5132 = 0.0, $5133 = 0.0, $5134 = 0.0, $5135 = 0, $5136 = 0.0, $5137 = 0.0;
 var $5138 = 0.0, $5139 = 0, $514 = 0, $5140 = 0.0, $5141 = 0, $5142 = 0.0, $5143 = 0, $5144 = 0.0, $5145 = 0, $5146 = 0.0, $5147 = 0, $5148 = 0.0, $5149 = 0, $515 = 0, $5150 = 0.0, $5151 = 0, $5152 = 0, $5153 = 0, $5154 = 0.0, $5155 = 0;
 var $5156 = 0, $5157 = 0, $5158 = 0, $5159 = 0, $516 = 0, $5160 = 0, $5161 = 0, $5162 = 0, $5163 = 0, $5164 = 0, $5165 = 0, $5166 = 0, $5167 = 0, $5168 = 0.0, $5169 = 0, $517 = 0, $5170 = 0, $5171 = 0, $5172 = 0, $5173 = 0;
 var $5174 = 0, $5175 = 0, $5176 = 0, $5177 = 0, $5178 = 0, $5179 = 0, $518 = 0, $5180 = 0, $5181 = 0, $5182 = 0.0, $5183 = 0, $5184 = 0, $5185 = 0, $5186 = 0, $5187 = 0, $5188 = 0, $5189 = 0, $519 = 0, $5190 = 0, $5191 = 0;
 var $5192 = 0, $5193 = 0, $5194 = 0, $5195 = 0, $5196 = 0.0, $5197 = 0, $5198 = 0, $5199 = 0, $52 = 0, $520 = 0, $5200 = 0, $5201 = 0, $5202 = 0, $5203 = 0, $5204 = 0, $5205 = 0, $5206 = 0, $5207 = 0, $5208 = 0, $5209 = 0;
 var $521 = 0, $5210 = 0.0, $5211 = 0, $5212 = 0, $5213 = 0, $5214 = 0, $5215 = 0, $5216 = 0, $5217 = 0, $5218 = 0, $5219 = 0, $522 = 0, $5220 = 0, $5221 = 0, $5222 = 0, $5223 = 0, $5224 = 0.0, $5225 = 0, $5226 = 0, $5227 = 0;
 var $5228 = 0, $5229 = 0, $523 = 0, $5230 = 0, $5231 = 0, $5232 = 0, $5233 = 0, $5234 = 0, $5235 = 0, $5236 = 0, $5237 = 0, $5238 = 0.0, $5239 = 0, $524 = 0, $5240 = 0, $5241 = 0, $5242 = 0, $5243 = 0, $5244 = 0, $5245 = 0;
 var $5246 = 0, $5247 = 0, $5248 = 0, $5249 = 0, $525 = 0, $5250 = 0, $5251 = 0, $5252 = 0, $5253 = 0.0, $5254 = 0.0, $5255 = 0.0, $5256 = 0.0, $5257 = 0.0, $5258 = 0.0, $5259 = 0.0, $526 = 0, $5260 = 0.0, $5261 = 0.0, $5262 = 0.0, $5263 = 0.0;
 var $5264 = 0.0, $5265 = 0.0, $5266 = 0.0, $5267 = 0.0, $5268 = 0.0, $5269 = 0.0, $527 = 0, $5270 = 0.0, $5271 = 0.0, $5272 = 0.0, $5273 = 0.0, $5274 = 0.0, $5275 = 0.0, $5276 = 0.0, $5277 = 0.0, $5278 = 0.0, $5279 = 0.0, $528 = 0, $5280 = 0.0, $5281 = 0.0;
 var $5282 = 0.0, $5283 = 0.0, $5284 = 0.0, $5285 = 0.0, $5286 = 0.0, $5287 = 0.0, $5288 = 0.0, $5289 = 0, $529 = 0, $5290 = 0.0, $5291 = 0.0, $5292 = 0, $5293 = 0.0, $5294 = 0, $5295 = 0.0, $5296 = 0, $5297 = 0.0, $5298 = 0, $5299 = 0.0, $53 = 0;
 var $530 = 0, $5300 = 0, $5301 = 0.0, $5302 = 0, $5303 = 0.0, $5304 = 0, $5305 = 0.0, $5306 = 0, $5307 = 0.0, $5308 = 0, $5309 = 0.0, $531 = 0, $5310 = 0, $5311 = 0.0, $5312 = 0.0, $5313 = 0, $5314 = 0.0, $5315 = 0.0, $5316 = 0.0, $5317 = 0;
 var $5318 = 0.0, $5319 = 0.0, $532 = 0, $5320 = 0.0, $5321 = 0.0, $5322 = 0.0, $5323 = 0, $5324 = 0.0, $5325 = 0.0, $5326 = 0.0, $5327 = 0.0, $5328 = 0.0, $5329 = 0.0, $533 = 0, $5330 = 0, $5331 = 0.0, $5332 = 0, $5333 = 0.0, $5334 = 0.0, $5335 = 0.0;
 var $5336 = 0.0, $5337 = 0.0, $5338 = 0.0, $5339 = 0.0, $534 = 0, $5340 = 0.0, $5341 = 0.0, $5342 = 0.0, $5343 = 0.0, $5344 = 0.0, $5345 = 0.0, $5346 = 0.0, $5347 = 0.0, $5348 = 0.0, $5349 = 0.0, $535 = 0, $5350 = 0.0, $5351 = 0.0, $5352 = 0.0, $5353 = 0.0;
 var $5354 = 0.0, $5355 = 0.0, $5356 = 0.0, $5357 = 0.0, $5358 = 0.0, $5359 = 0.0, $536 = 0, $5360 = 0.0, $5361 = 0.0, $5362 = 0.0, $5363 = 0.0, $5364 = 0.0, $5365 = 0.0, $5366 = 0, $5367 = 0.0, $5368 = 0.0, $5369 = 0.0, $537 = 0, $5370 = 0, $5371 = 0.0;
 var $5372 = 0, $5373 = 0.0, $5374 = 0, $5375 = 0.0, $5376 = 0, $5377 = 0.0, $5378 = 0, $5379 = 0.0, $538 = 0, $5380 = 0, $5381 = 0.0, $5382 = 0, $5383 = 0, $5384 = 0, $5385 = 0.0, $5386 = 0, $5387 = 0, $5388 = 0, $5389 = 0, $539 = 0;
 var $5390 = 0, $5391 = 0, $5392 = 0, $5393 = 0, $5394 = 0, $5395 = 0, $5396 = 0, $5397 = 0, $5398 = 0, $5399 = 0.0, $54 = 0, $540 = 0, $5400 = 0, $5401 = 0, $5402 = 0, $5403 = 0, $5404 = 0, $5405 = 0, $5406 = 0, $5407 = 0;
 var $5408 = 0, $5409 = 0, $541 = 0, $5410 = 0, $5411 = 0, $5412 = 0, $5413 = 0.0, $5414 = 0, $5415 = 0, $5416 = 0, $5417 = 0, $5418 = 0, $5419 = 0, $542 = 0, $5420 = 0, $5421 = 0, $5422 = 0, $5423 = 0, $5424 = 0, $5425 = 0;
 var $5426 = 0, $5427 = 0.0, $5428 = 0, $5429 = 0, $543 = 0, $5430 = 0, $5431 = 0, $5432 = 0, $5433 = 0, $5434 = 0, $5435 = 0, $5436 = 0, $5437 = 0, $5438 = 0, $5439 = 0, $544 = 0, $5440 = 0, $5441 = 0.0, $5442 = 0, $5443 = 0;
 var $5444 = 0, $5445 = 0, $5446 = 0, $5447 = 0, $5448 = 0, $5449 = 0, $545 = 0, $5450 = 0, $5451 = 0, $5452 = 0, $5453 = 0, $5454 = 0, $5455 = 0.0, $5456 = 0, $5457 = 0, $5458 = 0, $5459 = 0, $546 = 0, $5460 = 0, $5461 = 0;
 var $5462 = 0, $5463 = 0, $5464 = 0, $5465 = 0, $5466 = 0, $5467 = 0, $5468 = 0, $5469 = 0.0, $547 = 0, $5470 = 0, $5471 = 0, $5472 = 0, $5473 = 0, $5474 = 0, $5475 = 0, $5476 = 0, $5477 = 0, $5478 = 0, $5479 = 0, $548 = 0;
 var $5480 = 0, $5481 = 0, $5482 = 0, $5483 = 0, $5484 = 0.0, $5485 = 0.0, $5486 = 0.0, $5487 = 0.0, $5488 = 0.0, $5489 = 0.0, $549 = 0, $5490 = 0.0, $5491 = 0.0, $5492 = 0.0, $5493 = 0.0, $5494 = 0.0, $5495 = 0.0, $5496 = 0.0, $5497 = 0.0, $5498 = 0.0;
 var $5499 = 0.0, $55 = 0, $550 = 0, $5500 = 0.0, $5501 = 0.0, $5502 = 0.0, $5503 = 0.0, $5504 = 0.0, $5505 = 0.0, $5506 = 0.0, $5507 = 0.0, $5508 = 0.0, $5509 = 0.0, $551 = 0, $5510 = 0.0, $5511 = 0.0, $5512 = 0.0, $5513 = 0.0, $5514 = 0, $5515 = 0.0;
 var $5516 = 0.0, $5517 = 0, $5518 = 0.0, $5519 = 0, $552 = 0, $5520 = 0.0, $5521 = 0, $5522 = 0.0, $5523 = 0, $5524 = 0.0, $5525 = 0, $5526 = 0.0, $5527 = 0, $5528 = 0.0, $5529 = 0, $553 = 0, $5530 = 0.0, $5531 = 0.0, $5532 = 0.0, $5533 = 0;
 var $5534 = 0.0, $5535 = 0.0, $5536 = 0, $5537 = 0.0, $5538 = 0.0, $5539 = 0.0, $554 = 0, $5540 = 0.0, $5541 = 0.0, $5542 = 0, $5543 = 0.0, $5544 = 0.0, $5545 = 0.0, $5546 = 0.0, $5547 = 0.0, $5548 = 0.0, $5549 = 0, $555 = 0, $5550 = 0.0, $5551 = 0;
 var $5552 = 0.0, $5553 = 0.0, $5554 = 0.0, $5555 = 0.0, $5556 = 0.0, $5557 = 0.0, $5558 = 0.0, $5559 = 0.0, $556 = 0, $5560 = 0.0, $5561 = 0.0, $5562 = 0.0, $5563 = 0.0, $5564 = 0.0, $5565 = 0.0, $5566 = 0.0, $5567 = 0.0, $5568 = 0.0, $5569 = 0.0, $557 = 0;
 var $5570 = 0.0, $5571 = 0.0, $5572 = 0.0, $5573 = 0.0, $5574 = 0.0, $5575 = 0.0, $5576 = 0.0, $5577 = 0.0, $5578 = 0.0, $5579 = 0.0, $558 = 0, $5580 = 0.0, $5581 = 0.0, $5582 = 0.0, $5583 = 0, $5584 = 0.0, $5585 = 0.0, $5586 = 0.0, $5587 = 0, $5588 = 0.0;
 var $5589 = 0, $559 = 0, $5590 = 0.0, $5591 = 0, $5592 = 0.0, $5593 = 0, $5594 = 0.0, $5595 = 0, $5596 = 0.0, $5597 = 0, $5598 = 0.0, $5599 = 0, $56 = 0, $560 = 0, $5600 = 0, $5601 = 0, $5602 = 0.0, $5603 = 0, $5604 = 0, $5605 = 0;
 var $5606 = 0, $5607 = 0, $5608 = 0, $5609 = 0, $561 = 0, $5610 = 0, $5611 = 0, $5612 = 0, $5613 = 0, $5614 = 0, $5615 = 0, $5616 = 0.0, $5617 = 0, $5618 = 0, $5619 = 0, $562 = 0, $5620 = 0, $5621 = 0, $5622 = 0, $5623 = 0;
 var $5624 = 0, $5625 = 0, $5626 = 0, $5627 = 0, $5628 = 0, $5629 = 0, $563 = 0, $5630 = 0.0, $5631 = 0, $5632 = 0, $5633 = 0, $5634 = 0, $5635 = 0, $5636 = 0, $5637 = 0, $5638 = 0, $5639 = 0, $564 = 0, $5640 = 0, $5641 = 0;
 var $5642 = 0, $5643 = 0, $5644 = 0.0, $5645 = 0, $5646 = 0, $5647 = 0, $5648 = 0, $5649 = 0, $565 = 0, $5650 = 0, $5651 = 0, $5652 = 0, $5653 = 0, $5654 = 0, $5655 = 0, $5656 = 0, $5657 = 0, $5658 = 0.0, $5659 = 0, $566 = 0;
 var $5660 = 0, $5661 = 0, $5662 = 0, $5663 = 0, $5664 = 0, $5665 = 0, $5666 = 0, $5667 = 0, $5668 = 0, $5669 = 0, $567 = 0, $5670 = 0, $5671 = 0, $5672 = 0.0, $5673 = 0, $5674 = 0, $5675 = 0, $5676 = 0, $5677 = 0, $5678 = 0;
 var $5679 = 0, $568 = 0, $5680 = 0, $5681 = 0, $5682 = 0, $5683 = 0, $5684 = 0, $5685 = 0, $5686 = 0.0, $5687 = 0, $5688 = 0, $5689 = 0, $569 = 0, $5690 = 0, $5691 = 0, $5692 = 0, $5693 = 0, $5694 = 0, $5695 = 0, $5696 = 0;
 var $5697 = 0, $5698 = 0, $5699 = 0, $57 = 0, $570 = 0, $5700 = 0, $5701 = 0.0, $5702 = 0.0, $5703 = 0.0, $5704 = 0.0, $5705 = 0.0, $5706 = 0.0, $5707 = 0.0, $5708 = 0.0, $5709 = 0.0, $571 = 0, $5710 = 0.0, $5711 = 0.0, $5712 = 0.0, $5713 = 0.0;
 var $5714 = 0.0, $5715 = 0.0, $5716 = 0.0, $5717 = 0.0, $5718 = 0.0, $5719 = 0, $572 = 0, $5720 = 0.0, $5721 = 0.0, $5722 = 0.0, $5723 = 0, $5724 = 0.0, $5725 = 0, $5726 = 0.0, $5727 = 0, $5728 = 0.0, $5729 = 0, $573 = 0, $5730 = 0.0, $5731 = 0;
 var $5732 = 0.0, $5733 = 0, $5734 = 0.0, $5735 = 0, $5736 = 0.0, $5737 = 0.0, $5738 = 0.0, $5739 = 0.0, $574 = 0, $5740 = 0.0, $5741 = 0.0, $5742 = 0.0, $5743 = 0.0, $5744 = 0.0, $5745 = 0, $5746 = 0.0, $5747 = 0.0, $5748 = 0.0, $5749 = 0.0, $575 = 0;
 var $5750 = 0, $5751 = 0.0, $5752 = 0.0, $5753 = 0.0, $5754 = 0.0, $5755 = 0.0, $5756 = 0, $5757 = 0.0, $5758 = 0.0, $5759 = 0.0, $576 = 0, $5760 = 0.0, $5761 = 0.0, $5762 = 0.0, $5763 = 0.0, $5764 = 0.0, $5765 = 0.0, $5766 = 0.0, $5767 = 0.0, $5768 = 0.0;
 var $5769 = 0.0, $577 = 0, $5770 = 0, $5771 = 0.0, $5772 = 0, $5773 = 0.0, $5774 = 0.0, $5775 = 0.0, $5776 = 0.0, $5777 = 0.0, $5778 = 0.0, $5779 = 0.0, $578 = 0, $5780 = 0.0, $5781 = 0.0, $5782 = 0.0, $5783 = 0.0, $5784 = 0.0, $5785 = 0.0, $5786 = 0.0;
 var $5787 = 0.0, $5788 = 0.0, $5789 = 0.0, $579 = 0, $5790 = 0.0, $5791 = 0.0, $5792 = 0.0, $5793 = 0.0, $5794 = 0.0, $5795 = 0.0, $5796 = 0.0, $5797 = 0.0, $5798 = 0.0, $5799 = 0.0, $58 = 0, $580 = 0, $5800 = 0.0, $5801 = 0.0, $5802 = 0.0, $5803 = 0.0;
 var $5804 = 0.0, $5805 = 0.0, $5806 = 0.0, $5807 = 0.0, $5808 = 0.0, $5809 = 0.0, $581 = 0, $5810 = 0, $5811 = 0.0, $5812 = 0.0, $5813 = 0.0, $5814 = 0, $5815 = 0.0, $5816 = 0, $5817 = 0.0, $5818 = 0, $5819 = 0.0, $582 = 0, $5820 = 0, $5821 = 0.0;
 var $5822 = 0, $5823 = 0.0, $5824 = 0, $5825 = 0.0, $5826 = 0, $5827 = 0, $5828 = 0, $5829 = 0.0, $583 = 0, $5830 = 0, $5831 = 0, $5832 = 0, $5833 = 0, $5834 = 0, $5835 = 0, $5836 = 0, $5837 = 0, $5838 = 0, $5839 = 0, $584 = 0;
 var $5840 = 0, $5841 = 0, $5842 = 0, $5843 = 0.0, $5844 = 0, $5845 = 0, $5846 = 0, $5847 = 0, $5848 = 0, $5849 = 0, $585 = 0, $5850 = 0, $5851 = 0, $5852 = 0, $5853 = 0, $5854 = 0, $5855 = 0, $5856 = 0, $5857 = 0.0, $5858 = 0;
 var $5859 = 0, $586 = 0, $5860 = 0, $5861 = 0, $5862 = 0, $5863 = 0, $5864 = 0, $5865 = 0, $5866 = 0, $5867 = 0, $5868 = 0, $5869 = 0, $587 = 0, $5870 = 0, $5871 = 0.0, $5872 = 0, $5873 = 0, $5874 = 0, $5875 = 0, $5876 = 0;
 var $5877 = 0, $5878 = 0, $5879 = 0, $588 = 0, $5880 = 0, $5881 = 0, $5882 = 0, $5883 = 0, $5884 = 0, $5885 = 0.0, $5886 = 0, $5887 = 0, $5888 = 0, $5889 = 0, $589 = 0, $5890 = 0, $5891 = 0, $5892 = 0, $5893 = 0, $5894 = 0;
 var $5895 = 0, $5896 = 0, $5897 = 0, $5898 = 0, $5899 = 0.0, $59 = 0, $590 = 0, $5900 = 0, $5901 = 0, $5902 = 0, $5903 = 0, $5904 = 0, $5905 = 0, $5906 = 0, $5907 = 0, $5908 = 0, $5909 = 0, $591 = 0, $5910 = 0, $5911 = 0;
 var $5912 = 0, $5913 = 0.0, $5914 = 0, $5915 = 0, $5916 = 0, $5917 = 0, $5918 = 0, $5919 = 0, $592 = 0, $5920 = 0, $5921 = 0, $5922 = 0, $5923 = 0, $5924 = 0, $5925 = 0, $5926 = 0, $5927 = 0, $5928 = 0.0, $5929 = 0.0, $593 = 0;
 var $5930 = 0.0, $5931 = 0.0, $5932 = 0.0, $5933 = 0.0, $5934 = 0.0, $5935 = 0.0, $5936 = 0.0, $5937 = 0.0, $5938 = 0.0, $5939 = 0.0, $594 = 0, $5940 = 0.0, $5941 = 0.0, $5942 = 0.0, $5943 = 0.0, $5944 = 0.0, $5945 = 0.0, $5946 = 0.0, $5947 = 0.0, $5948 = 0.0;
 var $5949 = 0, $595 = 0, $5950 = 0.0, $5951 = 0.0, $5952 = 0.0, $5953 = 0, $5954 = 0.0, $5955 = 0, $5956 = 0.0, $5957 = 0, $5958 = 0.0, $5959 = 0, $596 = 0.0, $5960 = 0.0, $5961 = 0, $5962 = 0.0, $5963 = 0, $5964 = 0.0, $5965 = 0, $5966 = 0.0;
 var $5967 = 0, $5968 = 0.0, $5969 = 0.0, $597 = 0.0, $5970 = 0.0, $5971 = 0.0, $5972 = 0.0, $5973 = 0.0, $5974 = 0.0, $5975 = 0.0, $5976 = 0, $5977 = 0.0, $5978 = 0.0, $5979 = 0.0, $598 = 0.0, $5980 = 0.0, $5981 = 0.0, $5982 = 0, $5983 = 0.0, $5984 = 0.0;
 var $5985 = 0.0, $5986 = 0.0, $5987 = 0.0, $5988 = 0, $5989 = 0.0, $599 = 0.0, $5990 = 0.0, $5991 = 0.0, $5992 = 0.0, $5993 = 0.0, $5994 = 0.0, $5995 = 0.0, $5996 = 0.0, $5997 = 0.0, $5998 = 0.0, $5999 = 0.0, $6 = 0, $60 = 0, $600 = 0.0, $6000 = 0.0;
 var $6001 = 0.0, $6002 = 0, $6003 = 0.0, $6004 = 0, $6005 = 0.0, $6006 = 0.0, $6007 = 0.0, $6008 = 0.0, $6009 = 0.0, $601 = 0.0, $6010 = 0.0, $6011 = 0.0, $6012 = 0.0, $6013 = 0.0, $6014 = 0.0, $6015 = 0.0, $6016 = 0.0, $6017 = 0.0, $6018 = 0.0, $6019 = 0.0;
 var $602 = 0.0, $6020 = 0.0, $6021 = 0.0, $6022 = 0.0, $6023 = 0.0, $6024 = 0.0, $6025 = 0.0, $6026 = 0.0, $6027 = 0.0, $6028 = 0.0, $6029 = 0.0, $603 = 0.0, $6030 = 0.0, $6031 = 0.0, $6032 = 0.0, $6033 = 0.0, $6034 = 0.0, $6035 = 0.0, $6036 = 0.0, $6037 = 0.0;
 var $6038 = 0.0, $6039 = 0.0, $604 = 0.0, $6040 = 0, $6041 = 0.0, $6042 = 0.0, $6043 = 0.0, $6044 = 0.0, $6045 = 0.0, $6046 = 0, $6047 = 0.0, $6048 = 0, $6049 = 0.0, $605 = 0.0, $6050 = 0, $6051 = 0.0, $6052 = 0, $6053 = 0.0, $6054 = 0, $6055 = 0.0;
 var $6056 = 0, $6057 = 0.0, $6058 = 0, $6059 = 0, $606 = 0.0, $6060 = 0, $6061 = 0.0, $6062 = 0, $6063 = 0, $6064 = 0, $6065 = 0, $6066 = 0, $6067 = 0, $6068 = 0, $6069 = 0, $607 = 0.0, $6070 = 0, $6071 = 0, $6072 = 0, $6073 = 0;
 var $6074 = 0, $6075 = 0.0, $6076 = 0, $6077 = 0, $6078 = 0, $6079 = 0, $608 = 0.0, $6080 = 0, $6081 = 0, $6082 = 0, $6083 = 0, $6084 = 0, $6085 = 0, $6086 = 0, $6087 = 0, $6088 = 0, $6089 = 0.0, $609 = 0.0, $6090 = 0, $6091 = 0;
 var $6092 = 0, $6093 = 0, $6094 = 0, $6095 = 0, $6096 = 0, $6097 = 0, $6098 = 0, $6099 = 0, $61 = 0, $610 = 0.0, $6100 = 0, $6101 = 0, $6102 = 0, $6103 = 0.0, $6104 = 0, $6105 = 0, $6106 = 0, $6107 = 0, $6108 = 0, $6109 = 0;
 var $611 = 0.0, $6110 = 0, $6111 = 0, $6112 = 0, $6113 = 0, $6114 = 0, $6115 = 0, $6116 = 0, $6117 = 0.0, $6118 = 0, $6119 = 0, $612 = 0.0, $6120 = 0, $6121 = 0, $6122 = 0, $6123 = 0, $6124 = 0, $6125 = 0, $6126 = 0, $6127 = 0;
 var $6128 = 0, $6129 = 0, $613 = 0.0, $6130 = 0, $6131 = 0.0, $6132 = 0, $6133 = 0, $6134 = 0, $6135 = 0, $6136 = 0, $6137 = 0, $6138 = 0, $6139 = 0, $614 = 0.0, $6140 = 0, $6141 = 0, $6142 = 0, $6143 = 0, $6144 = 0, $6145 = 0.0;
 var $6146 = 0, $6147 = 0, $6148 = 0, $6149 = 0, $615 = 0.0, $6150 = 0, $6151 = 0, $6152 = 0, $6153 = 0, $6154 = 0, $6155 = 0, $6156 = 0, $6157 = 0, $6158 = 0, $6159 = 0, $616 = 0.0, $6160 = 0.0, $6161 = 0.0, $6162 = 0.0, $6163 = 0.0;
 var $6164 = 0.0, $6165 = 0.0, $6166 = 0.0, $6167 = 0.0, $6168 = 0.0, $6169 = 0.0, $617 = 0.0, $6170 = 0.0, $6171 = 0.0, $6172 = 0.0, $6173 = 0.0, $6174 = 0.0, $6175 = 0.0, $6176 = 0.0, $6177 = 0.0, $6178 = 0.0, $6179 = 0.0, $618 = 0.0, $6180 = 0.0, $6181 = 0.0;
 var $6182 = 0.0, $6183 = 0.0, $6184 = 0.0, $6185 = 0.0, $6186 = 0.0, $6187 = 0.0, $6188 = 0.0, $6189 = 0.0, $619 = 0.0, $6190 = 0.0, $6191 = 0.0, $6192 = 0, $6193 = 0.0, $6194 = 0.0, $6195 = 0, $6196 = 0.0, $6197 = 0, $6198 = 0.0, $6199 = 0, $62 = 0;
 var $620 = 0.0, $6200 = 0.0, $6201 = 0, $6202 = 0.0, $6203 = 0, $6204 = 0.0, $6205 = 0, $6206 = 0.0, $6207 = 0, $6208 = 0.0, $6209 = 0.0, $621 = 0.0, $6210 = 0, $6211 = 0.0, $6212 = 0.0, $6213 = 0, $6214 = 0.0, $6215 = 0.0, $6216 = 0.0, $6217 = 0.0;
 var $6218 = 0.0, $6219 = 0, $622 = 0.0, $6220 = 0.0, $6221 = 0.0, $6222 = 0.0, $6223 = 0.0, $6224 = 0.0, $6225 = 0, $6226 = 0.0, $6227 = 0, $6228 = 0.0, $6229 = 0.0, $623 = 0.0, $6230 = 0.0, $6231 = 0.0, $6232 = 0.0, $6233 = 0.0, $6234 = 0.0, $6235 = 0.0;
 var $6236 = 0.0, $6237 = 0.0, $6238 = 0.0, $6239 = 0.0, $624 = 0.0, $6240 = 0.0, $6241 = 0.0, $6242 = 0.0, $6243 = 0.0, $6244 = 0.0, $6245 = 0.0, $6246 = 0.0, $6247 = 0.0, $6248 = 0.0, $6249 = 0.0, $625 = 0.0, $6250 = 0.0, $6251 = 0.0, $6252 = 0.0, $6253 = 0.0;
 var $6254 = 0.0, $6255 = 0.0, $6256 = 0.0, $6257 = 0.0, $6258 = 0, $6259 = 0.0, $626 = 0.0, $6260 = 0.0, $6261 = 0.0, $6262 = 0, $6263 = 0.0, $6264 = 0, $6265 = 0.0, $6266 = 0, $6267 = 0.0, $6268 = 0, $6269 = 0.0, $627 = 0.0, $6270 = 0, $6271 = 0.0;
 var $6272 = 0, $6273 = 0.0, $6274 = 0, $6275 = 0, $6276 = 0, $6277 = 0.0, $6278 = 0, $6279 = 0, $628 = 0.0, $6280 = 0, $6281 = 0, $6282 = 0, $6283 = 0, $6284 = 0, $6285 = 0, $6286 = 0, $6287 = 0, $6288 = 0, $6289 = 0, $629 = 0.0;
 var $6290 = 0, $6291 = 0.0, $6292 = 0, $6293 = 0, $6294 = 0, $6295 = 0, $6296 = 0, $6297 = 0, $6298 = 0, $6299 = 0, $63 = 0, $630 = 0.0, $6300 = 0, $6301 = 0, $6302 = 0, $6303 = 0, $6304 = 0, $6305 = 0.0, $6306 = 0, $6307 = 0;
 var $6308 = 0, $6309 = 0, $631 = 0.0, $6310 = 0, $6311 = 0, $6312 = 0, $6313 = 0, $6314 = 0, $6315 = 0, $6316 = 0, $6317 = 0, $6318 = 0, $6319 = 0.0, $632 = 0.0, $6320 = 0, $6321 = 0, $6322 = 0, $6323 = 0, $6324 = 0, $6325 = 0;
 var $6326 = 0, $6327 = 0, $6328 = 0, $6329 = 0, $633 = 0.0, $6330 = 0, $6331 = 0, $6332 = 0, $6333 = 0.0, $6334 = 0, $6335 = 0, $6336 = 0, $6337 = 0, $6338 = 0, $6339 = 0, $634 = 0.0, $6340 = 0, $6341 = 0, $6342 = 0, $6343 = 0;
 var $6344 = 0, $6345 = 0, $6346 = 0, $6347 = 0.0, $6348 = 0, $6349 = 0, $635 = 0.0, $6350 = 0, $6351 = 0, $6352 = 0, $6353 = 0, $6354 = 0, $6355 = 0, $6356 = 0, $6357 = 0, $6358 = 0, $6359 = 0, $636 = 0.0, $6360 = 0, $6361 = 0.0;
 var $6362 = 0, $6363 = 0, $6364 = 0, $6365 = 0, $6366 = 0, $6367 = 0, $6368 = 0, $6369 = 0, $637 = 0.0, $6370 = 0, $6371 = 0, $6372 = 0, $6373 = 0, $6374 = 0, $6375 = 0, $6376 = 0.0, $6377 = 0.0, $6378 = 0.0, $6379 = 0.0, $638 = 0.0;
 var $6380 = 0.0, $6381 = 0.0, $6382 = 0.0, $6383 = 0.0, $6384 = 0.0, $6385 = 0.0, $6386 = 0.0, $6387 = 0.0, $6388 = 0.0, $6389 = 0.0, $639 = 0.0, $6390 = 0.0, $6391 = 0.0, $6392 = 0.0, $6393 = 0.0, $6394 = 0.0, $6395 = 0.0, $6396 = 0.0, $6397 = 0.0, $6398 = 0.0;
 var $6399 = 0.0, $64 = 0, $640 = 0.0, $6400 = 0.0, $6401 = 0.0, $6402 = 0.0, $6403 = 0.0, $6404 = 0.0, $6405 = 0.0, $6406 = 0.0, $6407 = 0.0, $6408 = 0.0, $6409 = 0, $641 = 0.0, $6410 = 0.0, $6411 = 0.0, $6412 = 0, $6413 = 0.0, $6414 = 0, $6415 = 0.0;
 var $6416 = 0, $6417 = 0.0, $6418 = 0, $6419 = 0.0, $642 = 0.0, $6420 = 0, $6421 = 0.0, $6422 = 0, $6423 = 0.0, $6424 = 0, $6425 = 0.0, $6426 = 0, $6427 = 0.0, $6428 = 0.0, $6429 = 0.0, $643 = 0.0, $6430 = 0, $6431 = 0, $6432 = 0.0, $6433 = 0.0;
 var $6434 = 0, $6435 = 0, $6436 = 0.0, $6437 = 0.0, $6438 = 0.0, $6439 = 0.0, $644 = 0.0, $6440 = 0.0, $6441 = 0.0, $6442 = 0.0, $6443 = 0, $6444 = 0.0, $6445 = 0, $6446 = 0.0, $6447 = 0.0, $6448 = 0.0, $6449 = 0.0, $645 = 0.0, $6450 = 0.0, $6451 = 0.0;
 var $6452 = 0.0, $6453 = 0.0, $6454 = 0.0, $6455 = 0.0, $6456 = 0.0, $6457 = 0.0, $6458 = 0.0, $6459 = 0.0, $646 = 0.0, $6460 = 0.0, $6461 = 0.0, $6462 = 0.0, $6463 = 0.0, $6464 = 0.0, $6465 = 0.0, $6466 = 0.0, $6467 = 0.0, $6468 = 0.0, $6469 = 0.0, $647 = 0.0;
 var $6470 = 0.0, $6471 = 0.0, $6472 = 0.0, $6473 = 0.0, $6474 = 0.0, $6475 = 0.0, $6476 = 0.0, $6477 = 0.0, $6478 = 0.0, $6479 = 0, $648 = 0.0, $6480 = 0.0, $6481 = 0.0, $6482 = 0.0, $6483 = 0, $6484 = 0.0, $6485 = 0, $6486 = 0.0, $6487 = 0, $6488 = 0.0;
 var $6489 = 0, $649 = 0.0, $6490 = 0.0, $6491 = 0, $6492 = 0.0, $6493 = 0, $6494 = 0.0, $6495 = 0, $6496 = 0, $6497 = 0, $6498 = 0.0, $6499 = 0, $65 = 0, $650 = 0.0, $6500 = 0, $6501 = 0, $6502 = 0, $6503 = 0, $6504 = 0, $6505 = 0;
 var $6506 = 0, $6507 = 0, $6508 = 0, $6509 = 0, $651 = 0.0, $6510 = 0, $6511 = 0, $6512 = 0.0, $6513 = 0, $6514 = 0, $6515 = 0, $6516 = 0, $6517 = 0, $6518 = 0, $6519 = 0, $652 = 0.0, $6520 = 0, $6521 = 0, $6522 = 0, $6523 = 0;
 var $6524 = 0, $6525 = 0, $6526 = 0.0, $6527 = 0, $6528 = 0, $6529 = 0, $653 = 0.0, $6530 = 0, $6531 = 0, $6532 = 0, $6533 = 0, $6534 = 0, $6535 = 0, $6536 = 0, $6537 = 0, $6538 = 0, $6539 = 0, $654 = 0.0, $6540 = 0.0, $6541 = 0;
 var $6542 = 0, $6543 = 0, $6544 = 0, $6545 = 0, $6546 = 0, $6547 = 0, $6548 = 0, $6549 = 0, $655 = 0.0, $6550 = 0, $6551 = 0, $6552 = 0, $6553 = 0, $6554 = 0.0, $6555 = 0, $6556 = 0, $6557 = 0, $6558 = 0, $6559 = 0, $656 = 0.0;
 var $6560 = 0, $6561 = 0, $6562 = 0, $6563 = 0, $6564 = 0, $6565 = 0, $6566 = 0, $6567 = 0, $6568 = 0.0, $6569 = 0, $657 = 0.0, $6570 = 0, $6571 = 0, $6572 = 0, $6573 = 0, $6574 = 0, $6575 = 0, $6576 = 0, $6577 = 0, $6578 = 0;
 var $6579 = 0, $658 = 0.0, $6580 = 0, $6581 = 0, $6582 = 0.0, $6583 = 0, $6584 = 0, $6585 = 0, $6586 = 0, $6587 = 0, $6588 = 0, $6589 = 0, $659 = 0.0, $6590 = 0, $6591 = 0, $6592 = 0, $6593 = 0, $6594 = 0, $6595 = 0, $6596 = 0;
 var $6597 = 0.0, $6598 = 0, $6599 = 0, $66 = 0, $660 = 0.0, $6600 = 0.0, $6601 = 0.0, $6602 = 0, $6603 = 0, $6604 = 0.0, $6605 = 0, $6606 = 0, $6607 = 0.0, $6608 = 0.0, $6609 = 0.0, $661 = 0.0, $6610 = 0.0, $6611 = 0.0, $6612 = 0.0, $6613 = 0.0;
 var $6614 = 0.0, $6615 = 0.0, $6616 = 0.0, $6617 = 0.0, $6618 = 0.0, $6619 = 0.0, $662 = 0.0, $6620 = 0, $6621 = 0.0, $6622 = 0.0, $6623 = 0.0, $6624 = 0, $6625 = 0.0, $6626 = 0.0, $6627 = 0.0, $6628 = 0.0, $6629 = 0.0, $663 = 0.0, $6630 = 0, $6631 = 0.0;
 var $6632 = 0.0, $6633 = 0.0, $6634 = 0.0, $6635 = 0.0, $6636 = 0.0, $6637 = 0.0, $6638 = 0.0, $6639 = 0.0, $664 = 0.0, $6640 = 0.0, $6641 = 0.0, $6642 = 0.0, $6643 = 0.0, $6644 = 0.0, $6645 = 0.0, $6646 = 0.0, $6647 = 0.0, $6648 = 0, $6649 = 0.0, $665 = 0.0;
 var $6650 = 0, $6651 = 0.0, $6652 = 0.0, $6653 = 0.0, $6654 = 0.0, $6655 = 0.0, $6656 = 0.0, $6657 = 0.0, $6658 = 0.0, $6659 = 0.0, $666 = 0.0, $6660 = 0.0, $6661 = 0.0, $6662 = 0.0, $6663 = 0.0, $6664 = 0.0, $6665 = 0.0, $6666 = 0.0, $6667 = 0.0, $6668 = 0.0;
 var $6669 = 0.0, $667 = 0.0, $6670 = 0.0, $6671 = 0.0, $6672 = 0.0, $6673 = 0.0, $6674 = 0.0, $6675 = 0.0, $6676 = 0.0, $6677 = 0.0, $6678 = 0.0, $6679 = 0.0, $668 = 0.0, $6680 = 0.0, $6681 = 0.0, $6682 = 0.0, $6683 = 0.0, $6684 = 0.0, $6685 = 0.0, $6686 = 0.0;
 var $6687 = 0.0, $6688 = 0.0, $6689 = 0.0, $669 = 0.0, $6690 = 0.0, $6691 = 0.0, $6692 = 0.0, $6693 = 0.0, $6694 = 0.0, $6695 = 0.0, $6696 = 0.0, $6697 = 0.0, $6698 = 0.0, $6699 = 0.0, $67 = 0, $670 = 0.0, $6700 = 0.0, $6701 = 0.0, $6702 = 0.0, $6703 = 0.0;
 var $6704 = 0.0, $6705 = 0.0, $6706 = 0.0, $6707 = 0.0, $6708 = 0.0, $6709 = 0.0, $671 = 0.0, $6710 = 0.0, $6711 = 0.0, $6712 = 0.0, $6713 = 0.0, $6714 = 0.0, $6715 = 0.0, $6716 = 0.0, $6717 = 0.0, $6718 = 0, $6719 = 0.0, $672 = 0.0, $6720 = 0.0, $6721 = 0.0;
 var $6722 = 0, $6723 = 0.0, $6724 = 0, $6725 = 0.0, $6726 = 0, $6727 = 0.0, $6728 = 0, $6729 = 0.0, $673 = 0.0, $6730 = 0, $6731 = 0.0, $6732 = 0, $6733 = 0.0, $6734 = 0, $6735 = 0.0, $6736 = 0, $6737 = 0.0, $6738 = 0, $6739 = 0.0, $674 = 0.0;
 var $6740 = 0, $6741 = 0.0, $6742 = 0, $6743 = 0, $6744 = 0, $6745 = 0.0, $6746 = 0, $6747 = 0, $6748 = 0, $6749 = 0, $675 = 0.0, $6750 = 0, $6751 = 0, $6752 = 0, $6753 = 0, $6754 = 0, $6755 = 0, $6756 = 0, $6757 = 0, $6758 = 0;
 var $6759 = 0.0, $676 = 0.0, $6760 = 0, $6761 = 0, $6762 = 0, $6763 = 0, $6764 = 0, $6765 = 0, $6766 = 0, $6767 = 0, $6768 = 0, $6769 = 0, $677 = 0.0, $6770 = 0, $6771 = 0, $6772 = 0, $6773 = 0.0, $6774 = 0, $6775 = 0, $6776 = 0;
 var $6777 = 0, $6778 = 0, $6779 = 0, $678 = 0.0, $6780 = 0, $6781 = 0, $6782 = 0, $6783 = 0, $6784 = 0, $6785 = 0, $6786 = 0, $6787 = 0.0, $6788 = 0, $6789 = 0, $679 = 0.0, $6790 = 0, $6791 = 0, $6792 = 0, $6793 = 0, $6794 = 0;
 var $6795 = 0, $6796 = 0, $6797 = 0, $6798 = 0, $6799 = 0, $68 = 0, $680 = 0.0, $6800 = 0, $6801 = 0.0, $6802 = 0, $6803 = 0, $6804 = 0, $6805 = 0, $6806 = 0, $6807 = 0, $6808 = 0, $6809 = 0, $681 = 0.0, $6810 = 0, $6811 = 0;
 var $6812 = 0, $6813 = 0, $6814 = 0, $6815 = 0.0, $6816 = 0, $6817 = 0, $6818 = 0, $6819 = 0, $682 = 0.0, $6820 = 0, $6821 = 0, $6822 = 0, $6823 = 0, $6824 = 0, $6825 = 0, $6826 = 0, $6827 = 0, $6828 = 0, $6829 = 0.0, $683 = 0.0;
 var $6830 = 0, $6831 = 0, $6832 = 0, $6833 = 0, $6834 = 0, $6835 = 0, $6836 = 0, $6837 = 0, $6838 = 0, $6839 = 0, $684 = 0.0, $6840 = 0, $6841 = 0, $6842 = 0, $6843 = 0, $6844 = 0.0, $6845 = 0, $6846 = 0, $6847 = 0.0, $6848 = 0.0;
 var $6849 = 0, $685 = 0.0, $6850 = 0, $6851 = 0.0, $6852 = 0.0, $6853 = 0.0, $6854 = 0.0, $6855 = 0.0, $6856 = 0.0, $6857 = 0.0, $6858 = 0.0, $6859 = 0.0, $686 = 0.0, $6860 = 0.0, $6861 = 0.0, $6862 = 0.0, $6863 = 0.0, $6864 = 0.0, $6865 = 0, $6866 = 0.0;
 var $6867 = 0.0, $6868 = 0.0, $6869 = 0, $687 = 0.0, $6870 = 0.0, $6871 = 0.0, $6872 = 0.0, $6873 = 0.0, $6874 = 0.0, $6875 = 0, $6876 = 0.0, $6877 = 0.0, $6878 = 0.0, $6879 = 0.0, $688 = 0.0, $6880 = 0.0, $6881 = 0.0, $6882 = 0.0, $6883 = 0.0, $6884 = 0.0;
 var $6885 = 0.0, $6886 = 0.0, $6887 = 0.0, $6888 = 0.0, $6889 = 0.0, $689 = 0.0, $6890 = 0.0, $6891 = 0.0, $6892 = 0.0, $6893 = 0.0, $6894 = 0, $6895 = 0.0, $6896 = 0, $6897 = 0.0, $6898 = 0.0, $6899 = 0.0, $69 = 0, $690 = 0.0, $6900 = 0.0, $6901 = 0.0;
 var $6902 = 0.0, $6903 = 0.0, $6904 = 0.0, $6905 = 0.0, $6906 = 0.0, $6907 = 0.0, $6908 = 0.0, $6909 = 0.0, $691 = 0.0, $6910 = 0.0, $6911 = 0.0, $6912 = 0.0, $6913 = 0.0, $6914 = 0.0, $6915 = 0.0, $6916 = 0.0, $6917 = 0.0, $6918 = 0.0, $6919 = 0.0, $692 = 0.0;
 var $6920 = 0.0, $6921 = 0.0, $6922 = 0.0, $6923 = 0.0, $6924 = 0.0, $6925 = 0.0, $6926 = 0.0, $6927 = 0.0, $6928 = 0.0, $6929 = 0.0, $693 = 0.0, $6930 = 0.0, $6931 = 0.0, $6932 = 0.0, $6933 = 0.0, $6934 = 0.0, $6935 = 0.0, $6936 = 0.0, $6937 = 0.0, $6938 = 0.0;
 var $6939 = 0.0, $694 = 0.0, $6940 = 0.0, $6941 = 0.0, $6942 = 0.0, $6943 = 0.0, $6944 = 0.0, $6945 = 0.0, $6946 = 0.0, $6947 = 0.0, $6948 = 0.0, $6949 = 0.0, $695 = 0.0, $6950 = 0.0, $6951 = 0.0, $6952 = 0.0, $6953 = 0.0, $6954 = 0.0, $6955 = 0.0, $6956 = 0.0;
 var $6957 = 0.0, $6958 = 0.0, $6959 = 0.0, $696 = 0.0, $6960 = 0.0, $6961 = 0.0, $6962 = 0.0, $6963 = 0.0, $6964 = 0, $6965 = 0.0, $6966 = 0.0, $6967 = 0.0, $6968 = 0, $6969 = 0.0, $697 = 0.0, $6970 = 0, $6971 = 0.0, $6972 = 0, $6973 = 0.0, $6974 = 0;
 var $6975 = 0.0, $6976 = 0, $6977 = 0.0, $6978 = 0, $6979 = 0.0, $698 = 0.0, $6980 = 0, $6981 = 0.0, $6982 = 0, $6983 = 0.0, $6984 = 0, $6985 = 0.0, $6986 = 0, $6987 = 0.0, $6988 = 0, $6989 = 0, $699 = 0.0, $6990 = 0, $6991 = 0.0, $6992 = 0;
 var $6993 = 0, $6994 = 0, $6995 = 0, $6996 = 0, $6997 = 0, $6998 = 0, $6999 = 0, $7 = 0, $70 = 0, $700 = 0.0, $7000 = 0, $7001 = 0, $7002 = 0, $7003 = 0, $7004 = 0, $7005 = 0.0, $7006 = 0, $7007 = 0, $7008 = 0, $7009 = 0;
 var $701 = 0.0, $7010 = 0, $7011 = 0, $7012 = 0, $7013 = 0, $7014 = 0, $7015 = 0, $7016 = 0, $7017 = 0, $7018 = 0, $7019 = 0.0, $702 = 0.0, $7020 = 0, $7021 = 0, $7022 = 0, $7023 = 0, $7024 = 0, $7025 = 0, $7026 = 0, $7027 = 0;
 var $7028 = 0, $7029 = 0, $703 = 0.0, $7030 = 0, $7031 = 0, $7032 = 0, $7033 = 0.0, $7034 = 0, $7035 = 0, $7036 = 0, $7037 = 0, $7038 = 0, $7039 = 0, $704 = 0.0, $7040 = 0, $7041 = 0, $7042 = 0, $7043 = 0, $7044 = 0, $7045 = 0;
 var $7046 = 0, $7047 = 0.0, $7048 = 0, $7049 = 0, $705 = 0.0, $7050 = 0, $7051 = 0, $7052 = 0, $7053 = 0, $7054 = 0, $7055 = 0, $7056 = 0, $7057 = 0, $7058 = 0, $7059 = 0, $706 = 0.0, $7060 = 0, $7061 = 0.0, $7062 = 0, $7063 = 0;
 var $7064 = 0, $7065 = 0, $7066 = 0, $7067 = 0, $7068 = 0, $7069 = 0, $707 = 0.0, $7070 = 0, $7071 = 0, $7072 = 0, $7073 = 0, $7074 = 0, $7075 = 0.0, $7076 = 0, $7077 = 0, $7078 = 0, $7079 = 0, $708 = 0.0, $7080 = 0, $7081 = 0;
 var $7082 = 0, $7083 = 0, $7084 = 0, $7085 = 0, $7086 = 0, $7087 = 0, $7088 = 0, $7089 = 0, $709 = 0.0, $7090 = 0.0, $7091 = 0.0, $7092 = 0, $7093 = 0, $7094 = 0.0, $7095 = 0.0, $7096 = 0.0, $7097 = 0, $7098 = 0, $7099 = 0.0, $71 = 0;
 var $710 = 0.0, $7100 = 0.0, $7101 = 0.0, $7102 = 0.0, $7103 = 0.0, $7104 = 0.0, $7105 = 0.0, $7106 = 0, $7107 = 0.0, $7108 = 0, $7109 = 0.0, $711 = 0.0, $7110 = 0.0, $7111 = 0.0, $7112 = 0.0, $7113 = 0.0, $7114 = 0.0, $7115 = 0.0, $7116 = 0.0, $7117 = 0.0;
 var $7118 = 0.0, $7119 = 0.0, $712 = 0.0, $7120 = 0.0, $7121 = 0.0, $7122 = 0.0, $7123 = 0.0, $7124 = 0.0, $7125 = 0.0, $7126 = 0.0, $7127 = 0.0, $7128 = 0.0, $7129 = 0.0, $713 = 0.0, $7130 = 0.0, $7131 = 0.0, $7132 = 0.0, $7133 = 0.0, $7134 = 0.0, $7135 = 0.0;
 var $7136 = 0.0, $7137 = 0.0, $7138 = 0.0, $7139 = 0.0, $714 = 0.0, $7140 = 0.0, $7141 = 0.0, $7142 = 0.0, $7143 = 0.0, $7144 = 0.0, $7145 = 0.0, $7146 = 0.0, $7147 = 0.0, $7148 = 0.0, $7149 = 0.0, $715 = 0, $7150 = 0.0, $7151 = 0.0, $7152 = 0.0, $7153 = 0.0;
 var $7154 = 0.0, $7155 = 0.0, $7156 = 0.0, $7157 = 0.0, $7158 = 0.0, $7159 = 0.0, $716 = 0, $7160 = 0.0, $7161 = 0.0, $7162 = 0.0, $7163 = 0.0, $7164 = 0.0, $7165 = 0.0, $7166 = 0.0, $7167 = 0.0, $7168 = 0.0, $7169 = 0.0, $717 = 0, $7170 = 0.0, $7171 = 0.0;
 var $7172 = 0.0, $7173 = 0.0, $7174 = 0.0, $7175 = 0.0, $7176 = 0.0, $7177 = 0, $7178 = 0.0, $7179 = 0.0, $718 = 0, $7180 = 0.0, $7181 = 0, $7182 = 0.0, $7183 = 0, $7184 = 0.0, $7185 = 0, $7186 = 0.0, $7187 = 0, $7188 = 0.0, $7189 = 0, $719 = 0;
 var $7190 = 0.0, $7191 = 0, $7192 = 0.0, $7193 = 0, $7194 = 0.0, $7195 = 0, $7196 = 0.0, $7197 = 0, $7198 = 0.0, $7199 = 0, $72 = 0, $720 = 0, $7200 = 0.0, $7201 = 0, $7202 = 0, $7203 = 0, $7204 = 0.0, $7205 = 0, $7206 = 0, $7207 = 0;
 var $7208 = 0, $7209 = 0, $721 = 0.0, $7210 = 0, $7211 = 0, $7212 = 0, $7213 = 0, $7214 = 0, $7215 = 0, $7216 = 0, $7217 = 0, $7218 = 0.0, $7219 = 0, $722 = 0.0, $7220 = 0, $7221 = 0, $7222 = 0, $7223 = 0, $7224 = 0, $7225 = 0;
 var $7226 = 0, $7227 = 0, $7228 = 0, $7229 = 0, $723 = 0.0, $7230 = 0, $7231 = 0, $7232 = 0.0, $7233 = 0, $7234 = 0, $7235 = 0, $7236 = 0, $7237 = 0, $7238 = 0, $7239 = 0, $724 = 0.0, $7240 = 0, $7241 = 0, $7242 = 0, $7243 = 0;
 var $7244 = 0, $7245 = 0, $7246 = 0.0, $7247 = 0, $7248 = 0, $7249 = 0, $725 = 0.0, $7250 = 0, $7251 = 0, $7252 = 0, $7253 = 0, $7254 = 0, $7255 = 0, $7256 = 0, $7257 = 0, $7258 = 0, $7259 = 0, $726 = 0.0, $7260 = 0.0, $7261 = 0;
 var $7262 = 0, $7263 = 0, $7264 = 0, $7265 = 0, $7266 = 0, $7267 = 0, $7268 = 0, $7269 = 0, $727 = 0.0, $7270 = 0, $7271 = 0, $7272 = 0, $7273 = 0, $7274 = 0.0, $7275 = 0, $7276 = 0, $7277 = 0, $7278 = 0, $7279 = 0, $728 = 0.0;
 var $7280 = 0, $7281 = 0, $7282 = 0, $7283 = 0, $7284 = 0, $7285 = 0, $7286 = 0, $7287 = 0, $7288 = 0.0, $7289 = 0, $729 = 0, $7290 = 0, $7291 = 0, $7292 = 0, $7293 = 0, $7294 = 0, $7295 = 0, $7296 = 0, $7297 = 0, $7298 = 0;
 var $7299 = 0, $73 = 0, $730 = 0, $7300 = 0, $7301 = 0, $7302 = 0, $7303 = 0, $7304 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0;
 var $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0.0, $748 = 0, $749 = 0.0, $75 = 0, $750 = 0.0, $751 = 0.0, $752 = 0, $753 = 0.0, $754 = 0, $755 = 0.0, $756 = 0.0, $757 = 0.0, $758 = 0, $759 = 0, $76 = 0;
 var $760 = 0, $761 = 0.0, $762 = 0, $763 = 0.0, $764 = 0, $765 = 0.0, $766 = 0.0, $767 = 0.0, $768 = 0.0, $769 = 0.0, $77 = 0, $770 = 0.0, $771 = 0.0, $772 = 0.0, $773 = 0.0, $774 = 0.0, $775 = 0.0, $776 = 0.0, $777 = 0.0, $778 = 0.0;
 var $779 = 0.0, $78 = 0, $780 = 0.0, $781 = 0.0, $782 = 0.0, $783 = 0.0, $784 = 0.0, $785 = 0.0, $786 = 0.0, $787 = 0.0, $788 = 0.0, $789 = 0.0, $79 = 0, $790 = 0.0, $791 = 0.0, $792 = 0.0, $793 = 0.0, $794 = 0.0, $795 = 0.0, $796 = 0.0;
 var $797 = 0.0, $798 = 0.0, $799 = 0.0, $8 = 0, $80 = 0, $800 = 0.0, $801 = 0.0, $802 = 0.0, $803 = 0.0, $804 = 0.0, $805 = 0.0, $806 = 0.0, $807 = 0.0, $808 = 0.0, $809 = 0.0, $81 = 0, $810 = 0.0, $811 = 0.0, $812 = 0.0, $813 = 0.0;
 var $814 = 0.0, $815 = 0.0, $816 = 0.0, $817 = 0.0, $818 = 0.0, $819 = 0.0, $82 = 0, $820 = 0.0, $821 = 0.0, $822 = 0.0, $823 = 0.0, $824 = 0.0, $825 = 0.0, $826 = 0.0, $827 = 0.0, $828 = 0.0, $829 = 0.0, $83 = 0, $830 = 0.0, $831 = 0.0;
 var $832 = 0.0, $833 = 0.0, $834 = 0.0, $835 = 0.0, $836 = 0.0, $837 = 0.0, $838 = 0.0, $839 = 0.0, $84 = 0, $840 = 0.0, $841 = 0.0, $842 = 0.0, $843 = 0.0, $844 = 0.0, $845 = 0.0, $846 = 0.0, $847 = 0.0, $848 = 0.0, $849 = 0.0, $85 = 0;
 var $850 = 0.0, $851 = 0.0, $852 = 0.0, $853 = 0.0, $854 = 0.0, $855 = 0.0, $856 = 0.0, $857 = 0.0, $858 = 0.0, $859 = 0.0, $86 = 0, $860 = 0.0, $861 = 0, $862 = 0.0, $863 = 0.0, $864 = 0, $865 = 0.0, $866 = 0.0, $867 = 0.0, $868 = 0.0;
 var $869 = 0.0, $87 = 0, $870 = 0.0, $871 = 0.0, $872 = 0.0, $873 = 0.0, $874 = 0.0, $875 = 0.0, $876 = 0.0, $877 = 0.0, $878 = 0.0, $879 = 0.0, $88 = 0, $880 = 0.0, $881 = 0.0, $882 = 0.0, $883 = 0.0, $884 = 0.0, $885 = 0.0, $886 = 0.0;
 var $887 = 0.0, $888 = 0.0, $889 = 0.0, $89 = 0, $890 = 0.0, $891 = 0.0, $892 = 0.0, $893 = 0.0, $894 = 0.0, $895 = 0.0, $896 = 0.0, $897 = 0.0, $898 = 0.0, $899 = 0.0, $9 = 0, $90 = 0, $900 = 0.0, $901 = 0.0, $902 = 0.0, $903 = 0.0;
 var $904 = 0.0, $905 = 0.0, $906 = 0.0, $907 = 0.0, $908 = 0.0, $909 = 0.0, $91 = 0, $910 = 0.0, $911 = 0.0, $912 = 0.0, $913 = 0.0, $914 = 0.0, $915 = 0.0, $916 = 0.0, $917 = 0.0, $918 = 0.0, $919 = 0.0, $92 = 0, $920 = 0.0, $921 = 0.0;
 var $922 = 0.0, $923 = 0.0, $924 = 0.0, $925 = 0.0, $926 = 0.0, $927 = 0.0, $928 = 0.0, $929 = 0.0, $93 = 0, $930 = 0.0, $931 = 0.0, $932 = 0.0, $933 = 0.0, $934 = 0.0, $935 = 0.0, $936 = 0.0, $937 = 0.0, $938 = 0.0, $939 = 0.0, $94 = 0;
 var $940 = 0.0, $941 = 0.0, $942 = 0.0, $943 = 0.0, $944 = 0.0, $945 = 0.0, $946 = 0.0, $947 = 0.0, $948 = 0.0, $949 = 0.0, $95 = 0, $950 = 0.0, $951 = 0.0, $952 = 0.0, $953 = 0.0, $954 = 0.0, $955 = 0.0, $956 = 0.0, $957 = 0.0, $958 = 0.0;
 var $959 = 0.0, $96 = 0, $960 = 0, $961 = 0.0, $962 = 0.0, $963 = 0.0, $964 = 0.0, $965 = 0.0, $966 = 0.0, $967 = 0.0, $968 = 0.0, $969 = 0.0, $97 = 0, $970 = 0.0, $971 = 0, $972 = 0.0, $973 = 0.0, $974 = 0, $975 = 0.0, $976 = 0;
 var $977 = 0.0, $978 = 0, $979 = 0.0, $98 = 0, $980 = 0, $981 = 0.0, $982 = 0, $983 = 0.0, $984 = 0.0, $985 = 0, $986 = 0, $987 = 0.0, $988 = 0.0, $989 = 0.0, $99 = 0, $990 = 0.0, $991 = 0.0, $992 = 0.0, $993 = 0.0, $994 = 0.0;
 var $995 = 0.0, $996 = 0, $997 = 0.0, $998 = 0, $999 = 0.0, $cj4array = 0, $cj4array6 = 0, $cj5array = 0, $iij4$0361 = 0, $iij410$0353 = 0, $iij5$0255 = 0, $ij4$0368 = 0, $ij49$0360 = 0, $ij5$0369 = 0, $j4array = 0, $j4array5 = 0, $j4valid = 0, $j4valid8 = 0, $j5array = 0, $j5valid = 0;
 var $or$cond = 0, $sj4array = 0, $sj4array7 = 0, $sj5array = 0, $vfree = 0, $vfree110 = 0, $vfree121 = 0, $vfree132 = 0, $vfree142 = 0, $vfree152 = 0, $vfree175 = 0, $vfree186 = 0, $vfree197 = 0, $vfree208 = 0, $vfree21 = 0, $vfree219 = 0, $vfree230 = 0, $vfree241 = 0, $vfree252 = 0, $vfree263 = 0;
 var $vfree273 = 0, $vfree283 = 0, $vfree44 = 0, $vfree55 = 0, $vfree66 = 0, $vfree77 = 0, $vfree88 = 0, $vfree99 = 0, $vinfos = 0, $vinfos109 = 0, $vinfos120 = 0, $vinfos131 = 0, $vinfos141 = 0, $vinfos151 = 0, $vinfos174 = 0, $vinfos185 = 0, $vinfos196 = 0, $vinfos20 = 0, $vinfos207 = 0, $vinfos218 = 0;
 var $vinfos229 = 0, $vinfos240 = 0, $vinfos251 = 0, $vinfos262 = 0, $vinfos272 = 0, $vinfos282 = 0, $vinfos43 = 0, $vinfos54 = 0, $vinfos65 = 0, $vinfos76 = 0, $vinfos87 = 0, $vinfos98 = 0, $x217 = 0, $x228 = 0, $x238 = 0, $x239 = 0, $x307 = 0, $x308 = 0, $x370 = 0, $x371 = 0;
 var $x378 = 0, $x379 = 0, $x380 = 0, $x392 = 0, $x393 = 0, $x404 = 0, $x405 = 0, $x416 = 0, $x417 = 0, $x485 = 0, $x486 = 0, $x548 = 0, $x549 = 0, $x556 = 0, $x557 = 0, $x558 = 0, $x570 = 0, $x571 = 0, $x582 = 0, $x583 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1184|0;
 $j5array = sp + 576|0;
 $cj5array = sp + 560|0;
 $sj5array = sp + 544|0;
 $j5valid = sp + 1172|0;
 $j4array = sp + 528|0;
 $cj4array = sp + 512|0;
 $sj4array = sp + 496|0;
 $j4valid = sp + 1170|0;
 $x217 = sp + 480|0;
 $vinfos = sp + 1156|0;
 $vfree = sp + 1144|0;
 $j4array5 = sp + 464|0;
 $cj4array6 = sp + 448|0;
 $sj4array7 = sp + 432|0;
 $j4valid8 = sp + 1168|0;
 $x228 = sp + 416|0;
 $vinfos20 = sp + 1132|0;
 $vfree21 = sp + 1120|0;
 $x238 = sp + 400|0;
 $x239 = sp + 384|0;
 $x307 = sp + 368|0;
 $x308 = sp + 352|0;
 $vinfos43 = sp + 1108|0;
 $vfree44 = sp + 1096|0;
 $vinfos54 = sp + 1084|0;
 $vfree55 = sp + 1072|0;
 $vinfos65 = sp + 1060|0;
 $vfree66 = sp + 1048|0;
 $vinfos76 = sp + 1036|0;
 $vfree77 = sp + 1024|0;
 $vinfos87 = sp + 1012|0;
 $vfree88 = sp + 1000|0;
 $vinfos98 = sp + 988|0;
 $vfree99 = sp + 976|0;
 $vinfos109 = sp + 964|0;
 $vfree110 = sp + 952|0;
 $x370 = sp + 336|0;
 $x371 = sp + 320|0;
 $vinfos120 = sp + 940|0;
 $vfree121 = sp + 928|0;
 $x378 = sp + 304|0;
 $x379 = sp + 288|0;
 $x380 = sp + 272|0;
 $vinfos131 = sp + 916|0;
 $vfree132 = sp + 904|0;
 $x392 = sp + 256|0;
 $x393 = sp + 240|0;
 $vinfos141 = sp + 892|0;
 $vfree142 = sp + 880|0;
 $x404 = sp + 224|0;
 $x405 = sp + 208|0;
 $vinfos151 = sp + 868|0;
 $vfree152 = sp + 856|0;
 $x416 = sp + 192|0;
 $x417 = sp + 176|0;
 $x485 = sp + 160|0;
 $x486 = sp + 144|0;
 $vinfos174 = sp + 844|0;
 $vfree175 = sp + 832|0;
 $vinfos185 = sp + 820|0;
 $vfree186 = sp + 808|0;
 $vinfos196 = sp + 796|0;
 $vfree197 = sp + 784|0;
 $vinfos207 = sp + 772|0;
 $vfree208 = sp + 760|0;
 $vinfos218 = sp + 748|0;
 $vfree219 = sp + 736|0;
 $vinfos229 = sp + 724|0;
 $vfree230 = sp + 712|0;
 $vinfos240 = sp + 700|0;
 $vfree241 = sp + 688|0;
 $x548 = sp + 128|0;
 $x549 = sp + 112|0;
 $vinfos251 = sp + 676|0;
 $vfree252 = sp + 664|0;
 $x556 = sp + 96|0;
 $x557 = sp + 80|0;
 $x558 = sp + 64|0;
 $vinfos262 = sp + 652|0;
 $vfree263 = sp + 640|0;
 $x570 = sp + 48|0;
 $x571 = sp + 32|0;
 $vinfos272 = sp + 628|0;
 $vfree273 = sp + 616|0;
 $x582 = sp + 16|0;
 $x583 = sp;
 $vinfos282 = sp + 604|0;
 $vfree283 = sp + 592|0;
 $0 = ((($this)) + 88|0);
 $1 = ((($this)) + 16|0);
 $2 = ((($this)) + 256|0);
 $3 = ((($this)) + 248|0);
 $4 = ((($this)) + 56|0);
 $5 = ((($this)) + 96|0);
 $6 = ((($this)) + 48|0);
 $7 = ((($this)) + 8|0);
 $8 = ((($this)) + 424|0);
 $9 = ((($this)) + 280|0);
 $10 = ((($this)) + 352|0);
 $11 = ((($this)) + 272|0);
 $12 = ((($this)) + 304|0);
 $13 = ((($this)) + 448|0);
 $14 = ((($this)) + 376|0);
 $15 = ((($this)) + 296|0);
 $16 = ((($this)) + 472|0);
 $17 = ((($this)) + 400|0);
 $18 = ((($this)) + 328|0);
 $19 = ((($this)) + 320|0);
 $20 = ((($this)) + 344|0);
 $21 = ((($this)) + 368|0);
 $22 = ((($this)) + 392|0);
 $23 = ((($this)) + 416|0);
 $24 = ((($this)) + 440|0);
 $25 = ((($this)) + 464|0);
 $26 = ((($this)) + 582|0);
 $27 = ((($this)) + 580|0);
 $28 = ((($this)) + 581|0);
 $29 = ((($this)) + 160|0);
 $30 = ((($this)) + 168|0);
 $31 = ((($this)) + 176|0);
 $32 = ((($this)) + 579|0);
 $33 = ((($x217)) + 8|0);
 $34 = ((($j4array)) + 8|0);
 $35 = ((($sj4array)) + 8|0);
 $36 = ((($cj4array)) + 8|0);
 $37 = ((($j4valid)) + 1|0);
 $38 = ((($this)) + 577|0);
 $39 = ((($this)) + 578|0);
 $40 = ((($this)) + 120|0);
 $41 = ((($this)) + 128|0);
 $42 = ((($this)) + 136|0);
 $43 = ((($this)) + 585|0);
 $44 = ((($this)) + 583|0);
 $45 = ((($this)) + 584|0);
 $46 = ((($this)) + 200|0);
 $47 = ((($this)) + 208|0);
 $48 = ((($this)) + 216|0);
 $49 = ((($this)) + 568|0);
 $50 = ((($this)) + 569|0);
 $51 = ((($this)) + 570|0);
 $52 = ((($this)) + 40|0);
 $53 = ((($this)) + 571|0);
 $54 = ((($this)) + 572|0);
 $55 = ((($this)) + 573|0);
 $56 = ((($this)) + 240|0);
 $57 = ((($this)) + 586|0);
 $58 = ((($this)) + 587|0);
 $59 = ((($this)) + 588|0);
 $60 = ((($this)) + 80|0);
 $61 = ((($this)) + 574|0);
 $62 = ((($this)) + 575|0);
 $63 = ((($this)) + 576|0);
 $64 = ((($this)) + 579|0);
 $65 = ((($x228)) + 8|0);
 $66 = ((($j4array5)) + 8|0);
 $67 = ((($sj4array7)) + 8|0);
 $68 = ((($cj4array6)) + 8|0);
 $69 = ((($j4valid8)) + 1|0);
 $70 = ((($this)) + 577|0);
 $71 = ((($this)) + 578|0);
 $72 = ((($this)) + 120|0);
 $73 = ((($this)) + 128|0);
 $74 = ((($this)) + 136|0);
 $75 = ((($this)) + 585|0);
 $76 = ((($this)) + 583|0);
 $77 = ((($this)) + 584|0);
 $78 = ((($this)) + 200|0);
 $79 = ((($this)) + 208|0);
 $80 = ((($this)) + 216|0);
 $81 = ((($this)) + 568|0);
 $82 = ((($this)) + 569|0);
 $83 = ((($this)) + 570|0);
 $84 = ((($this)) + 40|0);
 $85 = ((($this)) + 571|0);
 $86 = ((($this)) + 572|0);
 $87 = ((($this)) + 573|0);
 $88 = ((($this)) + 240|0);
 $89 = ((($this)) + 586|0);
 $90 = ((($this)) + 587|0);
 $91 = ((($this)) + 588|0);
 $92 = ((($this)) + 80|0);
 $93 = ((($this)) + 574|0);
 $94 = ((($this)) + 575|0);
 $95 = ((($this)) + 576|0);
 $96 = ((($this)) + 579|0);
 $97 = ((($x238)) + 8|0);
 $98 = ((($x239)) + 8|0);
 $99 = ((($this)) + 577|0);
 $100 = ((($this)) + 578|0);
 $101 = ((($this)) + 120|0);
 $102 = ((($this)) + 128|0);
 $103 = ((($this)) + 136|0);
 $104 = ((($this)) + 585|0);
 $105 = ((($x307)) + 8|0);
 $106 = ((($x308)) + 8|0);
 $107 = ((($this)) + 583|0);
 $108 = ((($this)) + 584|0);
 $109 = ((($this)) + 200|0);
 $110 = ((($this)) + 208|0);
 $111 = ((($this)) + 216|0);
 $112 = ((($this)) + 568|0);
 $113 = ((($this)) + 569|0);
 $114 = ((($this)) + 570|0);
 $115 = ((($this)) + 40|0);
 $116 = ((($this)) + 571|0);
 $117 = ((($this)) + 572|0);
 $118 = ((($this)) + 573|0);
 $119 = ((($this)) + 240|0);
 $120 = ((($this)) + 586|0);
 $121 = ((($this)) + 587|0);
 $122 = ((($this)) + 588|0);
 $123 = ((($this)) + 80|0);
 $124 = ((($this)) + 574|0);
 $125 = ((($this)) + 575|0);
 $126 = ((($this)) + 576|0);
 $127 = ((($this)) + 585|0);
 $128 = ((($this)) + 583|0);
 $129 = ((($this)) + 584|0);
 $130 = ((($this)) + 200|0);
 $131 = ((($this)) + 208|0);
 $132 = ((($this)) + 216|0);
 $133 = ((($this)) + 568|0);
 $134 = ((($this)) + 569|0);
 $135 = ((($this)) + 570|0);
 $136 = ((($this)) + 40|0);
 $137 = ((($this)) + 571|0);
 $138 = ((($this)) + 572|0);
 $139 = ((($this)) + 573|0);
 $140 = ((($this)) + 240|0);
 $141 = ((($this)) + 586|0);
 $142 = ((($this)) + 587|0);
 $143 = ((($this)) + 588|0);
 $144 = ((($this)) + 80|0);
 $145 = ((($this)) + 574|0);
 $146 = ((($this)) + 575|0);
 $147 = ((($this)) + 576|0);
 $148 = ((($this)) + 585|0);
 $149 = ((($this)) + 583|0);
 $150 = ((($this)) + 584|0);
 $151 = ((($this)) + 200|0);
 $152 = ((($this)) + 208|0);
 $153 = ((($this)) + 216|0);
 $154 = ((($this)) + 568|0);
 $155 = ((($this)) + 569|0);
 $156 = ((($this)) + 570|0);
 $157 = ((($this)) + 40|0);
 $158 = ((($this)) + 571|0);
 $159 = ((($this)) + 572|0);
 $160 = ((($this)) + 573|0);
 $161 = ((($this)) + 240|0);
 $162 = ((($this)) + 586|0);
 $163 = ((($this)) + 587|0);
 $164 = ((($this)) + 588|0);
 $165 = ((($this)) + 80|0);
 $166 = ((($this)) + 574|0);
 $167 = ((($this)) + 575|0);
 $168 = ((($this)) + 576|0);
 $169 = ((($this)) + 585|0);
 $170 = ((($this)) + 583|0);
 $171 = ((($this)) + 584|0);
 $172 = ((($this)) + 200|0);
 $173 = ((($this)) + 208|0);
 $174 = ((($this)) + 216|0);
 $175 = ((($this)) + 568|0);
 $176 = ((($this)) + 569|0);
 $177 = ((($this)) + 570|0);
 $178 = ((($this)) + 40|0);
 $179 = ((($this)) + 571|0);
 $180 = ((($this)) + 572|0);
 $181 = ((($this)) + 573|0);
 $182 = ((($this)) + 240|0);
 $183 = ((($this)) + 586|0);
 $184 = ((($this)) + 587|0);
 $185 = ((($this)) + 588|0);
 $186 = ((($this)) + 80|0);
 $187 = ((($this)) + 574|0);
 $188 = ((($this)) + 575|0);
 $189 = ((($this)) + 576|0);
 $190 = ((($this)) + 585|0);
 $191 = ((($this)) + 583|0);
 $192 = ((($this)) + 584|0);
 $193 = ((($this)) + 200|0);
 $194 = ((($this)) + 208|0);
 $195 = ((($this)) + 216|0);
 $196 = ((($this)) + 568|0);
 $197 = ((($this)) + 569|0);
 $198 = ((($this)) + 570|0);
 $199 = ((($this)) + 40|0);
 $200 = ((($this)) + 571|0);
 $201 = ((($this)) + 572|0);
 $202 = ((($this)) + 573|0);
 $203 = ((($this)) + 240|0);
 $204 = ((($this)) + 586|0);
 $205 = ((($this)) + 587|0);
 $206 = ((($this)) + 588|0);
 $207 = ((($this)) + 80|0);
 $208 = ((($this)) + 574|0);
 $209 = ((($this)) + 575|0);
 $210 = ((($this)) + 576|0);
 $211 = ((($this)) + 585|0);
 $212 = ((($this)) + 583|0);
 $213 = ((($this)) + 584|0);
 $214 = ((($this)) + 200|0);
 $215 = ((($this)) + 208|0);
 $216 = ((($this)) + 216|0);
 $217 = ((($this)) + 568|0);
 $218 = ((($this)) + 569|0);
 $219 = ((($this)) + 570|0);
 $220 = ((($this)) + 40|0);
 $221 = ((($this)) + 571|0);
 $222 = ((($this)) + 572|0);
 $223 = ((($this)) + 573|0);
 $224 = ((($this)) + 240|0);
 $225 = ((($this)) + 586|0);
 $226 = ((($this)) + 587|0);
 $227 = ((($this)) + 588|0);
 $228 = ((($this)) + 80|0);
 $229 = ((($this)) + 574|0);
 $230 = ((($this)) + 575|0);
 $231 = ((($this)) + 576|0);
 $232 = ((($this)) + 585|0);
 $233 = ((($this)) + 583|0);
 $234 = ((($this)) + 584|0);
 $235 = ((($this)) + 200|0);
 $236 = ((($this)) + 208|0);
 $237 = ((($this)) + 216|0);
 $238 = ((($this)) + 568|0);
 $239 = ((($this)) + 569|0);
 $240 = ((($this)) + 570|0);
 $241 = ((($this)) + 40|0);
 $242 = ((($this)) + 571|0);
 $243 = ((($this)) + 572|0);
 $244 = ((($this)) + 573|0);
 $245 = ((($this)) + 240|0);
 $246 = ((($this)) + 586|0);
 $247 = ((($this)) + 587|0);
 $248 = ((($this)) + 588|0);
 $249 = ((($this)) + 80|0);
 $250 = ((($this)) + 574|0);
 $251 = ((($this)) + 575|0);
 $252 = ((($this)) + 576|0);
 $253 = ((($this)) + 585|0);
 $254 = ((($x370)) + 8|0);
 $255 = ((($x371)) + 8|0);
 $256 = ((($this)) + 583|0);
 $257 = ((($this)) + 584|0);
 $258 = ((($this)) + 200|0);
 $259 = ((($this)) + 208|0);
 $260 = ((($this)) + 216|0);
 $261 = ((($this)) + 568|0);
 $262 = ((($this)) + 569|0);
 $263 = ((($this)) + 570|0);
 $264 = ((($this)) + 40|0);
 $265 = ((($this)) + 571|0);
 $266 = ((($this)) + 572|0);
 $267 = ((($this)) + 573|0);
 $268 = ((($this)) + 240|0);
 $269 = ((($this)) + 586|0);
 $270 = ((($this)) + 587|0);
 $271 = ((($this)) + 588|0);
 $272 = ((($this)) + 80|0);
 $273 = ((($this)) + 574|0);
 $274 = ((($this)) + 575|0);
 $275 = ((($this)) + 576|0);
 $276 = ((($this)) + 585|0);
 $277 = ((($x378)) + 8|0);
 $278 = ((($x379)) + 8|0);
 $279 = ((($x380)) + 8|0);
 $280 = ((($this)) + 583|0);
 $281 = ((($this)) + 584|0);
 $282 = ((($this)) + 200|0);
 $283 = ((($this)) + 208|0);
 $284 = ((($this)) + 216|0);
 $285 = ((($this)) + 568|0);
 $286 = ((($this)) + 569|0);
 $287 = ((($this)) + 570|0);
 $288 = ((($this)) + 40|0);
 $289 = ((($this)) + 571|0);
 $290 = ((($this)) + 572|0);
 $291 = ((($this)) + 573|0);
 $292 = ((($this)) + 240|0);
 $293 = ((($this)) + 586|0);
 $294 = ((($this)) + 587|0);
 $295 = ((($this)) + 588|0);
 $296 = ((($this)) + 80|0);
 $297 = ((($this)) + 574|0);
 $298 = ((($this)) + 575|0);
 $299 = ((($this)) + 576|0);
 $300 = ((($this)) + 585|0);
 $301 = ((($x392)) + 8|0);
 $302 = ((($x393)) + 8|0);
 $303 = ((($this)) + 583|0);
 $304 = ((($this)) + 584|0);
 $305 = ((($this)) + 200|0);
 $306 = ((($this)) + 208|0);
 $307 = ((($this)) + 216|0);
 $308 = ((($this)) + 568|0);
 $309 = ((($this)) + 569|0);
 $310 = ((($this)) + 570|0);
 $311 = ((($this)) + 40|0);
 $312 = ((($this)) + 571|0);
 $313 = ((($this)) + 572|0);
 $314 = ((($this)) + 573|0);
 $315 = ((($this)) + 240|0);
 $316 = ((($this)) + 586|0);
 $317 = ((($this)) + 587|0);
 $318 = ((($this)) + 588|0);
 $319 = ((($this)) + 80|0);
 $320 = ((($this)) + 574|0);
 $321 = ((($this)) + 575|0);
 $322 = ((($this)) + 576|0);
 $323 = ((($this)) + 585|0);
 $324 = ((($x404)) + 8|0);
 $325 = ((($x405)) + 8|0);
 $326 = ((($this)) + 583|0);
 $327 = ((($this)) + 584|0);
 $328 = ((($this)) + 200|0);
 $329 = ((($this)) + 208|0);
 $330 = ((($this)) + 216|0);
 $331 = ((($this)) + 568|0);
 $332 = ((($this)) + 569|0);
 $333 = ((($this)) + 570|0);
 $334 = ((($this)) + 40|0);
 $335 = ((($this)) + 571|0);
 $336 = ((($this)) + 572|0);
 $337 = ((($this)) + 573|0);
 $338 = ((($this)) + 240|0);
 $339 = ((($this)) + 586|0);
 $340 = ((($this)) + 587|0);
 $341 = ((($this)) + 588|0);
 $342 = ((($this)) + 80|0);
 $343 = ((($this)) + 574|0);
 $344 = ((($this)) + 575|0);
 $345 = ((($this)) + 576|0);
 $346 = ((($this)) + 579|0);
 $347 = ((($x416)) + 8|0);
 $348 = ((($x417)) + 8|0);
 $349 = ((($this)) + 577|0);
 $350 = ((($this)) + 578|0);
 $351 = ((($this)) + 120|0);
 $352 = ((($this)) + 128|0);
 $353 = ((($this)) + 136|0);
 $354 = ((($this)) + 585|0);
 $355 = ((($x485)) + 8|0);
 $356 = ((($x486)) + 8|0);
 $357 = ((($this)) + 583|0);
 $358 = ((($this)) + 584|0);
 $359 = ((($this)) + 200|0);
 $360 = ((($this)) + 208|0);
 $361 = ((($this)) + 216|0);
 $362 = ((($this)) + 568|0);
 $363 = ((($this)) + 569|0);
 $364 = ((($this)) + 570|0);
 $365 = ((($this)) + 40|0);
 $366 = ((($this)) + 571|0);
 $367 = ((($this)) + 572|0);
 $368 = ((($this)) + 573|0);
 $369 = ((($this)) + 240|0);
 $370 = ((($this)) + 586|0);
 $371 = ((($this)) + 587|0);
 $372 = ((($this)) + 588|0);
 $373 = ((($this)) + 80|0);
 $374 = ((($this)) + 574|0);
 $375 = ((($this)) + 575|0);
 $376 = ((($this)) + 576|0);
 $377 = ((($this)) + 585|0);
 $378 = ((($this)) + 583|0);
 $379 = ((($this)) + 584|0);
 $380 = ((($this)) + 200|0);
 $381 = ((($this)) + 208|0);
 $382 = ((($this)) + 216|0);
 $383 = ((($this)) + 568|0);
 $384 = ((($this)) + 569|0);
 $385 = ((($this)) + 570|0);
 $386 = ((($this)) + 40|0);
 $387 = ((($this)) + 571|0);
 $388 = ((($this)) + 572|0);
 $389 = ((($this)) + 573|0);
 $390 = ((($this)) + 240|0);
 $391 = ((($this)) + 586|0);
 $392 = ((($this)) + 587|0);
 $393 = ((($this)) + 588|0);
 $394 = ((($this)) + 80|0);
 $395 = ((($this)) + 574|0);
 $396 = ((($this)) + 575|0);
 $397 = ((($this)) + 576|0);
 $398 = ((($this)) + 585|0);
 $399 = ((($this)) + 583|0);
 $400 = ((($this)) + 584|0);
 $401 = ((($this)) + 200|0);
 $402 = ((($this)) + 208|0);
 $403 = ((($this)) + 216|0);
 $404 = ((($this)) + 568|0);
 $405 = ((($this)) + 569|0);
 $406 = ((($this)) + 570|0);
 $407 = ((($this)) + 40|0);
 $408 = ((($this)) + 571|0);
 $409 = ((($this)) + 572|0);
 $410 = ((($this)) + 573|0);
 $411 = ((($this)) + 240|0);
 $412 = ((($this)) + 586|0);
 $413 = ((($this)) + 587|0);
 $414 = ((($this)) + 588|0);
 $415 = ((($this)) + 80|0);
 $416 = ((($this)) + 574|0);
 $417 = ((($this)) + 575|0);
 $418 = ((($this)) + 576|0);
 $419 = ((($this)) + 585|0);
 $420 = ((($this)) + 583|0);
 $421 = ((($this)) + 584|0);
 $422 = ((($this)) + 200|0);
 $423 = ((($this)) + 208|0);
 $424 = ((($this)) + 216|0);
 $425 = ((($this)) + 568|0);
 $426 = ((($this)) + 569|0);
 $427 = ((($this)) + 570|0);
 $428 = ((($this)) + 40|0);
 $429 = ((($this)) + 571|0);
 $430 = ((($this)) + 572|0);
 $431 = ((($this)) + 573|0);
 $432 = ((($this)) + 240|0);
 $433 = ((($this)) + 586|0);
 $434 = ((($this)) + 587|0);
 $435 = ((($this)) + 588|0);
 $436 = ((($this)) + 80|0);
 $437 = ((($this)) + 574|0);
 $438 = ((($this)) + 575|0);
 $439 = ((($this)) + 576|0);
 $440 = ((($this)) + 585|0);
 $441 = ((($this)) + 583|0);
 $442 = ((($this)) + 584|0);
 $443 = ((($this)) + 200|0);
 $444 = ((($this)) + 208|0);
 $445 = ((($this)) + 216|0);
 $446 = ((($this)) + 568|0);
 $447 = ((($this)) + 569|0);
 $448 = ((($this)) + 570|0);
 $449 = ((($this)) + 40|0);
 $450 = ((($this)) + 571|0);
 $451 = ((($this)) + 572|0);
 $452 = ((($this)) + 573|0);
 $453 = ((($this)) + 240|0);
 $454 = ((($this)) + 586|0);
 $455 = ((($this)) + 587|0);
 $456 = ((($this)) + 588|0);
 $457 = ((($this)) + 80|0);
 $458 = ((($this)) + 574|0);
 $459 = ((($this)) + 575|0);
 $460 = ((($this)) + 576|0);
 $461 = ((($this)) + 585|0);
 $462 = ((($this)) + 583|0);
 $463 = ((($this)) + 584|0);
 $464 = ((($this)) + 200|0);
 $465 = ((($this)) + 208|0);
 $466 = ((($this)) + 216|0);
 $467 = ((($this)) + 568|0);
 $468 = ((($this)) + 569|0);
 $469 = ((($this)) + 570|0);
 $470 = ((($this)) + 40|0);
 $471 = ((($this)) + 571|0);
 $472 = ((($this)) + 572|0);
 $473 = ((($this)) + 573|0);
 $474 = ((($this)) + 240|0);
 $475 = ((($this)) + 586|0);
 $476 = ((($this)) + 587|0);
 $477 = ((($this)) + 588|0);
 $478 = ((($this)) + 80|0);
 $479 = ((($this)) + 574|0);
 $480 = ((($this)) + 575|0);
 $481 = ((($this)) + 576|0);
 $482 = ((($this)) + 585|0);
 $483 = ((($this)) + 583|0);
 $484 = ((($this)) + 584|0);
 $485 = ((($this)) + 200|0);
 $486 = ((($this)) + 208|0);
 $487 = ((($this)) + 216|0);
 $488 = ((($this)) + 568|0);
 $489 = ((($this)) + 569|0);
 $490 = ((($this)) + 570|0);
 $491 = ((($this)) + 40|0);
 $492 = ((($this)) + 571|0);
 $493 = ((($this)) + 572|0);
 $494 = ((($this)) + 573|0);
 $495 = ((($this)) + 240|0);
 $496 = ((($this)) + 586|0);
 $497 = ((($this)) + 587|0);
 $498 = ((($this)) + 588|0);
 $499 = ((($this)) + 80|0);
 $500 = ((($this)) + 574|0);
 $501 = ((($this)) + 575|0);
 $502 = ((($this)) + 576|0);
 $503 = ((($this)) + 585|0);
 $504 = ((($x548)) + 8|0);
 $505 = ((($x549)) + 8|0);
 $506 = ((($this)) + 583|0);
 $507 = ((($this)) + 584|0);
 $508 = ((($this)) + 200|0);
 $509 = ((($this)) + 208|0);
 $510 = ((($this)) + 216|0);
 $511 = ((($this)) + 568|0);
 $512 = ((($this)) + 569|0);
 $513 = ((($this)) + 570|0);
 $514 = ((($this)) + 40|0);
 $515 = ((($this)) + 571|0);
 $516 = ((($this)) + 572|0);
 $517 = ((($this)) + 573|0);
 $518 = ((($this)) + 240|0);
 $519 = ((($this)) + 586|0);
 $520 = ((($this)) + 587|0);
 $521 = ((($this)) + 588|0);
 $522 = ((($this)) + 80|0);
 $523 = ((($this)) + 574|0);
 $524 = ((($this)) + 575|0);
 $525 = ((($this)) + 576|0);
 $526 = ((($this)) + 585|0);
 $527 = ((($x556)) + 8|0);
 $528 = ((($x557)) + 8|0);
 $529 = ((($x558)) + 8|0);
 $530 = ((($this)) + 583|0);
 $531 = ((($this)) + 584|0);
 $532 = ((($this)) + 200|0);
 $533 = ((($this)) + 208|0);
 $534 = ((($this)) + 216|0);
 $535 = ((($this)) + 568|0);
 $536 = ((($this)) + 569|0);
 $537 = ((($this)) + 570|0);
 $538 = ((($this)) + 40|0);
 $539 = ((($this)) + 571|0);
 $540 = ((($this)) + 572|0);
 $541 = ((($this)) + 573|0);
 $542 = ((($this)) + 240|0);
 $543 = ((($this)) + 586|0);
 $544 = ((($this)) + 587|0);
 $545 = ((($this)) + 588|0);
 $546 = ((($this)) + 80|0);
 $547 = ((($this)) + 574|0);
 $548 = ((($this)) + 575|0);
 $549 = ((($this)) + 576|0);
 $550 = ((($this)) + 585|0);
 $551 = ((($x570)) + 8|0);
 $552 = ((($x571)) + 8|0);
 $553 = ((($this)) + 583|0);
 $554 = ((($this)) + 584|0);
 $555 = ((($this)) + 200|0);
 $556 = ((($this)) + 208|0);
 $557 = ((($this)) + 216|0);
 $558 = ((($this)) + 568|0);
 $559 = ((($this)) + 569|0);
 $560 = ((($this)) + 570|0);
 $561 = ((($this)) + 40|0);
 $562 = ((($this)) + 571|0);
 $563 = ((($this)) + 572|0);
 $564 = ((($this)) + 573|0);
 $565 = ((($this)) + 240|0);
 $566 = ((($this)) + 586|0);
 $567 = ((($this)) + 587|0);
 $568 = ((($this)) + 588|0);
 $569 = ((($this)) + 80|0);
 $570 = ((($this)) + 574|0);
 $571 = ((($this)) + 575|0);
 $572 = ((($this)) + 576|0);
 $573 = ((($this)) + 585|0);
 $574 = ((($x582)) + 8|0);
 $575 = ((($x583)) + 8|0);
 $576 = ((($this)) + 583|0);
 $577 = ((($this)) + 584|0);
 $578 = ((($this)) + 200|0);
 $579 = ((($this)) + 208|0);
 $580 = ((($this)) + 216|0);
 $581 = ((($this)) + 568|0);
 $582 = ((($this)) + 569|0);
 $583 = ((($this)) + 570|0);
 $584 = ((($this)) + 40|0);
 $585 = ((($this)) + 571|0);
 $586 = ((($this)) + 572|0);
 $587 = ((($this)) + 573|0);
 $588 = ((($this)) + 240|0);
 $589 = ((($this)) + 586|0);
 $590 = ((($this)) + 587|0);
 $591 = ((($this)) + 588|0);
 $592 = ((($this)) + 80|0);
 $593 = ((($this)) + 574|0);
 $594 = ((($this)) + 575|0);
 $595 = ((($this)) + 576|0);
 $596 = +HEAPF64[$0>>3];
 $597 = +HEAPF64[$1>>3];
 $598 = +HEAPF64[$2>>3];
 $599 = $597 * $598;
 $600 = +HEAPF64[$3>>3];
 $601 = +HEAPF64[$4>>3];
 $602 = $600 * $601;
 $603 = +HEAPF64[$5>>3];
 $604 = +HEAPF64[$6>>3];
 $605 = $600 * $604;
 $606 = $598 * $601;
 $607 = +HEAPF64[$7>>3];
 $608 = $598 * $607;
 $609 = $596 * $605;
 $610 = $601 * $603;
 $611 = $609 - $610;
 $612 = -$599;
 $613 = $604 * $612;
 $614 = $600 * $607;
 $615 = $613 + $614;
 $616 = $603 * $605;
 $617 = $596 * $601;
 $618 = $617 + $616;
 $619 = $602 * $603;
 $620 = $596 * $604;
 $621 = $620 - $619;
 $622 = $607 * $611;
 $623 = -$596;
 $624 = $602 * $623;
 $625 = $603 * $604;
 $626 = $624 - $625;
 $627 = $597 * $600;
 $628 = $604 * $608;
 $629 = -$628;
 $630 = $629 - $627;
 $631 = $597 * $611;
 $632 = $596 * $608;
 $633 = $632 + $631;
 $634 = $607 * $618;
 $635 = $603 * $612;
 $636 = $635 + $634;
 $637 = $603 * $608;
 $638 = $597 * $618;
 $639 = $637 + $638;
 $640 = $599 * $623;
 $641 = $640 + $622;
 $642 = +HEAPF64[$8>>3];
 $643 = $642 * $626;
 $644 = +HEAPF64[$9>>3];
 $645 = $644 * $641;
 $646 = $643 + $645;
 $647 = +HEAPF64[$10>>3];
 $648 = $647 * $633;
 $649 = $648 + $646;
 HEAPF64[$11>>3] = $649;
 $650 = +HEAPF64[$12>>3];
 $651 = $650 * $641;
 $652 = +HEAPF64[$13>>3];
 $653 = $626 * $652;
 $654 = $651 + $653;
 $655 = +HEAPF64[$14>>3];
 $656 = $633 * $655;
 $657 = $654 + $656;
 HEAPF64[$15>>3] = $657;
 $658 = +HEAPF64[$16>>3];
 $659 = $626 * $658;
 $660 = +HEAPF64[$17>>3];
 $661 = $633 * $660;
 $662 = $659 + $661;
 $663 = +HEAPF64[$18>>3];
 $664 = $641 * $663;
 $665 = $662 + $664;
 HEAPF64[$19>>3] = $665;
 $666 = +HEAPF64[$9>>3];
 $667 = $630 * $666;
 $668 = +HEAPF64[$8>>3];
 $669 = $606 * $668;
 $670 = $667 + $669;
 $671 = +HEAPF64[$10>>3];
 $672 = $615 * $671;
 $673 = $670 + $672;
 HEAPF64[$20>>3] = $673;
 $674 = +HEAPF64[$12>>3];
 $675 = $630 * $674;
 $676 = +HEAPF64[$13>>3];
 $677 = $606 * $676;
 $678 = $675 + $677;
 $679 = +HEAPF64[$14>>3];
 $680 = $615 * $679;
 $681 = $678 + $680;
 HEAPF64[$21>>3] = $681;
 $682 = +HEAPF64[$16>>3];
 $683 = $606 * $682;
 $684 = +HEAPF64[$17>>3];
 $685 = $615 * $684;
 $686 = $683 + $685;
 $687 = +HEAPF64[$18>>3];
 $688 = $630 * $687;
 $689 = $686 + $688;
 HEAPF64[$22>>3] = $689;
 $690 = +HEAPF64[$9>>3];
 $691 = $636 * $690;
 $692 = +HEAPF64[$8>>3];
 $693 = $621 * $692;
 $694 = $691 + $693;
 $695 = +HEAPF64[$10>>3];
 $696 = $639 * $695;
 $697 = $694 + $696;
 HEAPF64[$23>>3] = $697;
 $698 = +HEAPF64[$12>>3];
 $699 = $636 * $698;
 $700 = +HEAPF64[$13>>3];
 $701 = $621 * $700;
 $702 = $699 + $701;
 $703 = +HEAPF64[$14>>3];
 $704 = $639 * $703;
 $705 = $702 + $704;
 HEAPF64[$24>>3] = $705;
 $706 = +HEAPF64[$16>>3];
 $707 = $621 * $706;
 $708 = +HEAPF64[$17>>3];
 $709 = $639 * $708;
 $710 = $707 + $709;
 $711 = +HEAPF64[$18>>3];
 $712 = $636 * $711;
 $713 = $710 + $712;
 HEAPF64[$25>>3] = $713;
 HEAP16[$j5valid>>1] = 0;
 HEAP8[$26>>0] = 2;
 $714 = +HEAPF64[$25>>3];
 HEAPF64[$cj5array>>3] = $714;
 $715 = !($714 >= -1.0000020000000001);
 $716 = !($714 <= 1.0000020000000001);
 $or$cond = $715 | $716;
 if ($or$cond) {
  $729 = (__Z13__DOUBLE_BITSd($714)|0);
  $730 = tempRet0;
  $731 = $730 & 2147483647;
  $732 = ($731>>>0)>(2146435072);
  $733 = ($729>>>0)>(0);
  $734 = ($731|0)==(2146435072);
  $735 = $734 & $733;
  $736 = $732 | $735;
  if ($736) {
   HEAP8[$j5valid>>0] = 1;
   HEAPF64[$cj5array>>3] = 1.0;
   HEAPF64[$sj5array>>3] = 0.0;
   HEAPF64[$j5array>>3] = 0.0;
   $ij5$0369 = 0;
  } else {
   $ij5$0369 = 0;
  }
 } else {
  $717 = ((($sj5array)) + 8|0);
  $718 = ((($j5array)) + 8|0);
  $719 = ((($cj5array)) + 8|0);
  $720 = ((($j5valid)) + 1|0);
  HEAP8[$720>>0] = 1;
  HEAP8[$j5valid>>0] = 1;
  $721 = +HEAPF64[$cj5array>>3];
  $722 = (+__Z6IKacosd($721));
  HEAPF64[$j5array>>3] = $722;
  $723 = (+__Z5IKsind($722));
  HEAPF64[$sj5array>>3] = $723;
  $724 = +HEAPF64[$cj5array>>3];
  HEAPF64[$719>>3] = $724;
  $725 = +HEAPF64[$j5array>>3];
  $726 = -$725;
  HEAPF64[$718>>3] = $726;
  $727 = +HEAPF64[$sj5array>>3];
  $728 = -$727;
  HEAPF64[$717>>3] = $728;
  $ij5$0369 = 0;
 }
 while(1) {
  $737 = (($j5valid) + ($ij5$0369)|0);
  $738 = HEAP8[$737>>0]|0;
  $739 = ($738<<24>>24)==(0);
  L7: do {
   if (!($739)) {
    $740 = $ij5$0369&255;
    HEAP8[$27>>0] = $740;
    HEAP8[$28>>0] = -1;
    $iij5$0255 = (($ij5$0369) + 1)|0;
    $741 = ($iij5$0255|0)<(2);
    if ($741) {
     $742 = (($sj5array) + ($ij5$0369<<3)|0);
     $743 = (($j5valid) + ($iij5$0255)|0);
     $744 = HEAP8[$743>>0]|0;
     $745 = ($744<<24>>24)==(0);
     if (!($745)) {
      $746 = (($cj5array) + ($ij5$0369<<3)|0);
      $747 = +HEAPF64[$746>>3];
      $748 = (($cj5array) + ($iij5$0255<<3)|0);
      $749 = +HEAPF64[$748>>3];
      $750 = $747 - $749;
      $751 = (+__Z5IKabsd($750));
      $752 = $751 < 9.9999999999999995E-7;
      if ($752) {
       $753 = +HEAPF64[$742>>3];
       $754 = (($sj5array) + ($iij5$0255<<3)|0);
       $755 = +HEAPF64[$754>>3];
       $756 = $753 - $755;
       $757 = (+__Z5IKabsd($756));
       $758 = $757 < 9.9999999999999995E-7;
       if ($758) {
        HEAP8[$743>>0] = 0;
        $759 = $iij5$0255&255;
        HEAP8[$28>>0] = $759;
       }
      }
     }
    }
    $760 = (($j5array) + ($ij5$0369<<3)|0);
    $761 = +HEAPF64[$760>>3];
    HEAPF64[$29>>3] = $761;
    $762 = (($cj5array) + ($ij5$0369<<3)|0);
    $763 = +HEAPF64[$762>>3];
    HEAPF64[$30>>3] = $763;
    $764 = (($sj5array) + ($ij5$0369<<3)|0);
    $765 = +HEAPF64[$764>>3];
    HEAPF64[$31>>3] = $765;
    $766 = +HEAPF64[$0>>3];
    $767 = +HEAPF64[$1>>3];
    $768 = +HEAPF64[$2>>3];
    $769 = $767 * $768;
    $770 = +HEAPF64[$4>>3];
    $771 = +HEAPF64[$5>>3];
    $772 = $768 * $770;
    $773 = +HEAPF64[$7>>3];
    $774 = $768 * $773;
    $775 = $611 * $773;
    $776 = $611 * $767;
    $777 = $766 * $774;
    $778 = $776 + $777;
    $779 = $618 * $773;
    $780 = $769 * $771;
    $781 = $779 - $780;
    $782 = $771 * $774;
    $783 = $618 * $767;
    $784 = $783 + $782;
    $785 = $766 * $769;
    $786 = $775 - $785;
    $787 = +HEAPF64[$8>>3];
    $788 = $626 * $787;
    $789 = +HEAPF64[$10>>3];
    $790 = $789 * $778;
    $791 = $788 + $790;
    $792 = +HEAPF64[$9>>3];
    $793 = $786 * $792;
    $794 = $793 + $791;
    HEAPF64[$11>>3] = $794;
    $795 = +HEAPF64[$12>>3];
    $796 = $786 * $795;
    $797 = +HEAPF64[$13>>3];
    $798 = $626 * $797;
    $799 = $796 + $798;
    $800 = +HEAPF64[$14>>3];
    $801 = $778 * $800;
    $802 = $799 + $801;
    HEAPF64[$15>>3] = $802;
    $803 = +HEAPF64[$17>>3];
    $804 = $778 * $803;
    $805 = +HEAPF64[$16>>3];
    $806 = $626 * $805;
    $807 = $804 + $806;
    $808 = +HEAPF64[$18>>3];
    $809 = $786 * $808;
    $810 = $807 + $809;
    HEAPF64[$19>>3] = $810;
    $811 = +HEAPF64[$9>>3];
    $812 = $630 * $811;
    $813 = +HEAPF64[$8>>3];
    $814 = $772 * $813;
    $815 = $812 + $814;
    $816 = +HEAPF64[$10>>3];
    $817 = $615 * $816;
    $818 = $815 + $817;
    HEAPF64[$20>>3] = $818;
    $819 = +HEAPF64[$12>>3];
    $820 = $630 * $819;
    $821 = +HEAPF64[$13>>3];
    $822 = $772 * $821;
    $823 = $820 + $822;
    $824 = +HEAPF64[$14>>3];
    $825 = $615 * $824;
    $826 = $823 + $825;
    HEAPF64[$21>>3] = $826;
    $827 = +HEAPF64[$17>>3];
    $828 = $615 * $827;
    $829 = +HEAPF64[$18>>3];
    $830 = $630 * $829;
    $831 = $828 + $830;
    $832 = +HEAPF64[$16>>3];
    $833 = $772 * $832;
    $834 = $831 + $833;
    HEAPF64[$22>>3] = $834;
    $835 = +HEAPF64[$9>>3];
    $836 = $781 * $835;
    $837 = +HEAPF64[$8>>3];
    $838 = $621 * $837;
    $839 = $836 + $838;
    $840 = +HEAPF64[$10>>3];
    $841 = $784 * $840;
    $842 = $839 + $841;
    HEAPF64[$23>>3] = $842;
    $843 = +HEAPF64[$12>>3];
    $844 = $781 * $843;
    $845 = +HEAPF64[$13>>3];
    $846 = $621 * $845;
    $847 = $844 + $846;
    $848 = +HEAPF64[$14>>3];
    $849 = $784 * $848;
    $850 = $847 + $849;
    HEAPF64[$24>>3] = $850;
    $851 = +HEAPF64[$17>>3];
    $852 = $784 * $851;
    $853 = +HEAPF64[$18>>3];
    $854 = $781 * $853;
    $855 = $852 + $854;
    $856 = +HEAPF64[$16>>3];
    $857 = $621 * $856;
    $858 = $855 + $857;
    HEAPF64[$25>>3] = $858;
    $859 = +HEAPF64[$31>>3];
    $860 = (+__Z5IKabsd($859));
    $861 = $860 < 9.9999999999999995E-7;
    if (!($861)) {
     $862 = (+__Z6IKsignd($859));
     $863 = (+__Z5IKabsd($862));
     $864 = $863 < 9.9999999999999995E-7;
     if (!($864)) {
      HEAP8[$346>>0] = 1;
      $4423 = +HEAPF64[$31>>3];
      $4424 = (+__Z6IKsignd($4423));
      __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x416,$4424,-1);
      $4425 = HEAP8[$347>>0]|0;
      $4426 = ($4425<<24>>24)==(0);
      if ($4426) {
       break;
      }
      $4427 = +HEAPF64[$22>>3];
      $4428 = +HEAPF64[$19>>3];
      __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x417,$4427,$4428,1.9999999999999999E-6);
      $4429 = HEAP8[$348>>0]|0;
      $4430 = ($4429<<24>>24)==(0);
      if ($4430) {
       break;
      }
      $4431 = +HEAPF64[$x416>>3];
      $4432 = $4431 * 1.5707963267949001;
      $4433 = $4432 + -1.5707963267949001;
      $4434 = +HEAPF64[$x417>>3];
      $4435 = $4434 + $4433;
      $4436 = (+__Z5IKsind($4435));
      $4437 = (+__Z5IKcosd($4435));
      $4438 = $4435 > 3.14159265358979;
      if ($4438) {
       $4439 = $4435 + -6.2831853071795898;
       $4442 = $4439;
      } else {
       $4440 = $4435 < -3.14159265358979;
       if ($4440) {
        $4441 = $4435 + 6.2831853071795898;
        $4442 = $4441;
       } else {
        $4442 = $4435;
       }
      }
      HEAP8[$349>>0] = 0;
      HEAP8[$350>>0] = -1;
      HEAPF64[$351>>3] = $4442;
      HEAPF64[$352>>3] = $4437;
      HEAPF64[$353>>3] = $4436;
      $4443 = +HEAPF64[$351>>3];
      $4444 = (+__Z5IKcosd($4443));
      $4445 = (+__Z5IKsind($4443));
      $4446 = +HEAPF64[$31>>3];
      $4447 = +HEAPF64[$30>>3];
      $4448 = +HEAPF64[$22>>3];
      $4449 = $4445 * $4448;
      $4450 = +HEAPF64[$19>>3];
      $4451 = $4444 * $4450;
      $4452 = $4444 * $4446;
      $4453 = $4450 - $4452;
      $4454 = $4445 * $4450;
      $4455 = $4444 * $4448;
      $4456 = $4455 - $4454;
      $4457 = -$4446;
      $4458 = $4451 - $4446;
      $4459 = $4449 + $4458;
      $4460 = +HEAPF64[$25>>3];
      $4461 = -$4460;
      $4462 = $4446 * $4461;
      $4463 = $4447 * $4449;
      $4464 = $4463 + $4462;
      $4465 = $4447 * $4451;
      $4466 = $4465 + $4464;
      $4467 = +HEAPF64[$20>>3];
      $4468 = $4445 * $4467;
      $4469 = $4446 * $4468;
      $4470 = +HEAPF64[$11>>3];
      $4471 = $4444 * $4470;
      $4472 = $4446 * $4471;
      $4473 = -$4472;
      $4474 = $4473 - $4469;
      $4475 = +HEAPF64[$23>>3];
      $4476 = $4447 * $4475;
      $4477 = $4474 - $4476;
      $4478 = +HEAPF64[$15>>3];
      $4479 = $4444 * $4478;
      $4480 = $4446 * $4479;
      $4481 = +HEAPF64[$21>>3];
      $4482 = $4445 * $4481;
      $4483 = $4446 * $4482;
      $4484 = -$4483;
      $4485 = $4484 - $4480;
      $4486 = +HEAPF64[$24>>3];
      $4487 = $4447 * $4486;
      $4488 = $4485 - $4487;
      $4489 = $4449 * $4457;
      $4490 = $4489 + 1.0;
      $4491 = $4451 * $4457;
      $4492 = $4490 + $4491;
      $4493 = $4447 * $4461;
      $4494 = $4493 + $4492;
      $4495 = (+__Z5IKabsd($4453));
      $4496 = $4495 > 5.0000000000000004E-6;
      if ($4496) {
       break;
      }
      $4497 = $4445 * $4446;
      $4498 = $4448 - $4497;
      $4499 = (+__Z5IKabsd($4498));
      $4500 = $4499 > 5.0000000000000004E-6;
      if ($4500) {
       break;
      }
      $4501 = (+__Z5IKabsd($4456));
      $4502 = $4501 > 5.0000000000000004E-6;
      if ($4502) {
       break;
      }
      $4503 = (+__Z5IKabsd($4459));
      $4504 = $4503 > 5.0000000000000004E-6;
      if ($4504) {
       break;
      }
      $4505 = (+__Z5IKabsd($4466));
      $4506 = $4505 > 5.0000000000000004E-6;
      if ($4506) {
       break;
      }
      $4507 = (+__Z5IKabsd($4477));
      $4508 = $4507 > 5.0000000000000004E-6;
      if ($4508) {
       break;
      }
      $4509 = (+__Z5IKabsd($4488));
      $4510 = $4509 > 5.0000000000000004E-6;
      if ($4510) {
       break;
      }
      $4511 = (+__Z5IKabsd($4494));
      $4512 = $4511 > 5.0000000000000004E-6;
      if ($4512) {
       break;
      }
      $4513 = +HEAPF64[$0>>3];
      $4514 = +HEAPF64[$1>>3];
      $4515 = +HEAPF64[$2>>3];
      $4516 = $4514 * $4515;
      $4517 = +HEAPF64[$4>>3];
      $4518 = +HEAPF64[$5>>3];
      $4519 = $4515 * $4517;
      $4520 = +HEAPF64[$7>>3];
      $4521 = $4515 * $4520;
      $4522 = $611 * $4520;
      $4523 = $611 * $4514;
      $4524 = $4513 * $4521;
      $4525 = $4523 + $4524;
      $4526 = $618 * $4520;
      $4527 = $4516 * $4518;
      $4528 = $4526 - $4527;
      $4529 = $618 * $4514;
      $4530 = $4518 * $4521;
      $4531 = $4529 + $4530;
      $4532 = $4513 * $4516;
      $4533 = $4522 - $4532;
      $4534 = +HEAPF64[$10>>3];
      $4535 = $4534 * $4525;
      $4536 = +HEAPF64[$9>>3];
      $4537 = $4536 * $4533;
      $4538 = $4537 + $4535;
      $4539 = +HEAPF64[$8>>3];
      $4540 = $626 * $4539;
      $4541 = $4540 + $4538;
      HEAPF64[$11>>3] = $4541;
      $4542 = +HEAPF64[$13>>3];
      $4543 = $626 * $4542;
      $4544 = +HEAPF64[$12>>3];
      $4545 = $4533 * $4544;
      $4546 = $4543 + $4545;
      $4547 = +HEAPF64[$14>>3];
      $4548 = $4525 * $4547;
      $4549 = $4546 + $4548;
      HEAPF64[$15>>3] = $4549;
      $4550 = +HEAPF64[$17>>3];
      $4551 = $4525 * $4550;
      $4552 = +HEAPF64[$18>>3];
      $4553 = $4533 * $4552;
      $4554 = $4551 + $4553;
      $4555 = +HEAPF64[$16>>3];
      $4556 = $626 * $4555;
      $4557 = $4554 + $4556;
      HEAPF64[$19>>3] = $4557;
      $4558 = +HEAPF64[$8>>3];
      $4559 = $4519 * $4558;
      $4560 = +HEAPF64[$9>>3];
      $4561 = $630 * $4560;
      $4562 = $4559 + $4561;
      $4563 = +HEAPF64[$10>>3];
      $4564 = $615 * $4563;
      $4565 = $4562 + $4564;
      HEAPF64[$20>>3] = $4565;
      $4566 = +HEAPF64[$13>>3];
      $4567 = $4519 * $4566;
      $4568 = +HEAPF64[$12>>3];
      $4569 = $630 * $4568;
      $4570 = $4567 + $4569;
      $4571 = +HEAPF64[$14>>3];
      $4572 = $615 * $4571;
      $4573 = $4570 + $4572;
      HEAPF64[$21>>3] = $4573;
      $4574 = +HEAPF64[$17>>3];
      $4575 = $615 * $4574;
      $4576 = +HEAPF64[$18>>3];
      $4577 = $630 * $4576;
      $4578 = $4575 + $4577;
      $4579 = +HEAPF64[$16>>3];
      $4580 = $4519 * $4579;
      $4581 = $4578 + $4580;
      HEAPF64[$22>>3] = $4581;
      $4582 = +HEAPF64[$9>>3];
      $4583 = $4528 * $4582;
      $4584 = +HEAPF64[$10>>3];
      $4585 = $4531 * $4584;
      $4586 = $4583 + $4585;
      $4587 = +HEAPF64[$8>>3];
      $4588 = $621 * $4587;
      $4589 = $4586 + $4588;
      HEAPF64[$23>>3] = $4589;
      $4590 = +HEAPF64[$13>>3];
      $4591 = $621 * $4590;
      $4592 = +HEAPF64[$12>>3];
      $4593 = $4528 * $4592;
      $4594 = $4591 + $4593;
      $4595 = +HEAPF64[$14>>3];
      $4596 = $4531 * $4595;
      $4597 = $4594 + $4596;
      HEAPF64[$24>>3] = $4597;
      $4598 = +HEAPF64[$18>>3];
      $4599 = $4528 * $4598;
      $4600 = +HEAPF64[$16>>3];
      $4601 = $621 * $4600;
      $4602 = $4599 + $4601;
      $4603 = +HEAPF64[$17>>3];
      $4604 = $4531 * $4603;
      $4605 = $4602 + $4604;
      HEAPF64[$25>>3] = $4605;
      $4606 = +HEAPF64[$31>>3];
      $4607 = (+__Z5IKabsd($4606));
      $4608 = $4607 < 9.9999999999999995E-7;
      do {
       if (!($4608)) {
        $4609 = (+__Z6IKsignd($4606));
        $4610 = (+__Z5IKabsd($4609));
        $4611 = $4610 < 9.9999999999999995E-7;
        if ($4611) {
         break;
        }
        HEAP8[$573>>0] = 1;
        $7090 = +HEAPF64[$31>>3];
        $7091 = (+__Z6IKsignd($7090));
        __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x582,$7091,-1);
        $7092 = HEAP8[$574>>0]|0;
        $7093 = ($7092<<24>>24)==(0);
        if ($7093) {
         break L7;
        }
        $7094 = +HEAPF64[$24>>3];
        $7095 = +HEAPF64[$23>>3];
        $7096 = -$7095;
        __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x583,$7094,$7096,1.9999999999999999E-6);
        $7097 = HEAP8[$575>>0]|0;
        $7098 = ($7097<<24>>24)==(0);
        if ($7098) {
         break L7;
        }
        $7099 = +HEAPF64[$x582>>3];
        $7100 = $7099 * 1.5707963267949001;
        $7101 = $7100 + -1.5707963267949001;
        $7102 = +HEAPF64[$x583>>3];
        $7103 = $7102 + $7101;
        $7104 = (+__Z5IKsind($7103));
        $7105 = (+__Z5IKcosd($7103));
        $7106 = $7103 > 3.14159265358979;
        do {
         if ($7106) {
          $7107 = $7103 + -6.2831853071795898;
          $7110 = $7107;
         } else {
          $7108 = $7103 < -3.14159265358979;
          if (!($7108)) {
           $7110 = $7103;
           break;
          }
          $7109 = $7103 + 6.2831853071795898;
          $7110 = $7109;
         }
        } while(0);
        HEAP8[$576>>0] = 0;
        HEAP8[$577>>0] = -1;
        HEAPF64[$578>>3] = $7110;
        HEAPF64[$579>>3] = $7105;
        HEAPF64[$580>>3] = $7104;
        $7111 = +HEAPF64[$578>>3];
        $7112 = (+__Z5IKsind($7111));
        $7113 = (+__Z5IKcosd($7111));
        $7114 = +HEAPF64[$31>>3];
        $7115 = +HEAPF64[$353>>3];
        $7116 = +HEAPF64[$30>>3];
        $7117 = $7115 * $7116;
        $7118 = +HEAPF64[$352>>3];
        $7119 = +HEAPF64[$15>>3];
        $7120 = $7118 * $7119;
        $7121 = +HEAPF64[$11>>3];
        $7122 = $7118 * $7121;
        $7123 = $7112 * $7116;
        $7124 = $7113 * $7114;
        $7125 = +HEAPF64[$23>>3];
        $7126 = $7124 + $7125;
        $7127 = +HEAPF64[$24>>3];
        $7128 = +HEAPF64[$21>>3];
        $7129 = $7115 * $7128;
        $7130 = $7120 + $7129;
        $7131 = $7123 + $7130;
        $7132 = +HEAPF64[$20>>3];
        $7133 = $7118 * $7132;
        $7134 = $7133 - $7112;
        $7135 = $7115 * $7121;
        $7136 = $7134 - $7135;
        $7137 = $7115 * $7119;
        $7138 = $7118 * $7128;
        $7139 = $7138 - $7137;
        $7140 = -$7113;
        $7141 = $7139 - $7113;
        $7142 = $7113 * $7115;
        $7143 = $7142 + $7119;
        $7144 = $7118 * $7123;
        $7145 = $7144 + $7143;
        $7146 = $7113 * $7116;
        $7147 = $7115 * $7132;
        $7148 = $7147 - $7146;
        $7149 = $7122 + $7148;
        $7150 = -$7118;
        $7151 = $7116 * $7150;
        $7152 = $7113 * $7151;
        $7153 = $7112 * $7115;
        $7154 = $7153 + $7152;
        $7155 = $7121 + $7154;
        $7156 = $7112 * $7117;
        $7157 = $7113 * $7150;
        $7158 = $7156 + $7157;
        $7159 = $7158 + $7128;
        $7160 = $7112 * $7150;
        $7161 = $7115 * $7146;
        $7162 = $7160 - $7161;
        $7163 = $7162 + $7132;
        $7164 = $7114 * $7127;
        $7165 = $7116 * $7120;
        $7166 = $7165 - $7164;
        $7167 = $7112 + $7166;
        $7168 = $7117 * $7128;
        $7169 = $7168 + $7167;
        $7170 = $7114 * $7125;
        $7171 = $7140 - $7170;
        $7172 = $7116 * $7122;
        $7173 = $7172 + $7171;
        $7174 = $7117 * $7132;
        $7175 = $7173 + $7174;
        $7176 = (+__Z5IKabsd($7126));
        $7177 = $7176 > 5.0000000000000004E-6;
        if ($7177) {
         break L7;
        }
        $7178 = $7112 * $7114;
        $7179 = $7127 - $7178;
        $7180 = (+__Z5IKabsd($7179));
        $7181 = $7180 > 5.0000000000000004E-6;
        if ($7181) {
         break L7;
        }
        $7182 = (+__Z5IKabsd($7131));
        $7183 = $7182 > 5.0000000000000004E-6;
        if ($7183) {
         break L7;
        }
        $7184 = (+__Z5IKabsd($7136));
        $7185 = $7184 > 5.0000000000000004E-6;
        if ($7185) {
         break L7;
        }
        $7186 = (+__Z5IKabsd($7141));
        $7187 = $7186 > 5.0000000000000004E-6;
        if ($7187) {
         break L7;
        }
        $7188 = (+__Z5IKabsd($7145));
        $7189 = $7188 > 5.0000000000000004E-6;
        if ($7189) {
         break L7;
        }
        $7190 = (+__Z5IKabsd($7149));
        $7191 = $7190 > 5.0000000000000004E-6;
        if ($7191) {
         break L7;
        }
        $7192 = (+__Z5IKabsd($7155));
        $7193 = $7192 > 5.0000000000000004E-6;
        if ($7193) {
         break L7;
        }
        $7194 = (+__Z5IKabsd($7159));
        $7195 = $7194 > 5.0000000000000004E-6;
        if ($7195) {
         break L7;
        }
        $7196 = (+__Z5IKabsd($7163));
        $7197 = $7196 > 5.0000000000000004E-6;
        if ($7197) {
         break L7;
        }
        $7198 = (+__Z5IKabsd($7169));
        $7199 = $7198 > 5.0000000000000004E-6;
        if ($7199) {
         break L7;
        }
        $7200 = (+__Z5IKabsd($7175));
        $7201 = $7200 > 5.0000000000000004E-6;
        if ($7201) {
         break L7;
        }
        __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos282,7);
        $7202 = HEAP32[$vinfos282>>2]|0;
        $7203 = ((($7202)) + 17|0);
        HEAP8[$7203>>0] = 1;
        $7204 = +HEAPF64[$this>>3];
        $7205 = HEAP32[$vinfos282>>2]|0;
        $7206 = ((($7205)) + 8|0);
        HEAPF64[$7206>>3] = $7204;
        $7207 = HEAP8[$581>>0]|0;
        $7208 = HEAP32[$vinfos282>>2]|0;
        $7209 = ((($7208)) + 19|0);
        HEAP8[$7209>>0] = $7207;
        $7210 = HEAP8[$582>>0]|0;
        $7211 = HEAP32[$vinfos282>>2]|0;
        $7212 = ((($7211)) + 20|0);
        HEAP8[$7212>>0] = $7210;
        $7213 = HEAP8[$583>>0]|0;
        $7214 = HEAP32[$vinfos282>>2]|0;
        $7215 = ((($7214)) + 18|0);
        HEAP8[$7215>>0] = $7213;
        $7216 = HEAP32[$vinfos282>>2]|0;
        $7217 = ((($7216)) + 41|0);
        HEAP8[$7217>>0] = 1;
        $7218 = +HEAPF64[$584>>3];
        $7219 = HEAP32[$vinfos282>>2]|0;
        $7220 = ((($7219)) + 32|0);
        HEAPF64[$7220>>3] = $7218;
        $7221 = HEAP8[$585>>0]|0;
        $7222 = HEAP32[$vinfos282>>2]|0;
        $7223 = ((($7222)) + 43|0);
        HEAP8[$7223>>0] = $7221;
        $7224 = HEAP8[$586>>0]|0;
        $7225 = HEAP32[$vinfos282>>2]|0;
        $7226 = ((($7225)) + 44|0);
        HEAP8[$7226>>0] = $7224;
        $7227 = HEAP8[$587>>0]|0;
        $7228 = HEAP32[$vinfos282>>2]|0;
        $7229 = ((($7228)) + 42|0);
        HEAP8[$7229>>0] = $7227;
        $7230 = HEAP32[$vinfos282>>2]|0;
        $7231 = ((($7230)) + 65|0);
        HEAP8[$7231>>0] = 1;
        $7232 = +HEAPF64[$588>>3];
        $7233 = HEAP32[$vinfos282>>2]|0;
        $7234 = ((($7233)) + 56|0);
        HEAPF64[$7234>>3] = $7232;
        $7235 = HEAP8[$589>>0]|0;
        $7236 = HEAP32[$vinfos282>>2]|0;
        $7237 = ((($7236)) + 67|0);
        HEAP8[$7237>>0] = $7235;
        $7238 = HEAP8[$590>>0]|0;
        $7239 = HEAP32[$vinfos282>>2]|0;
        $7240 = ((($7239)) + 68|0);
        HEAP8[$7240>>0] = $7238;
        $7241 = HEAP8[$591>>0]|0;
        $7242 = HEAP32[$vinfos282>>2]|0;
        $7243 = ((($7242)) + 66|0);
        HEAP8[$7243>>0] = $7241;
        $7244 = HEAP32[$vinfos282>>2]|0;
        $7245 = ((($7244)) + 89|0);
        HEAP8[$7245>>0] = 1;
        $7246 = +HEAPF64[$592>>3];
        $7247 = HEAP32[$vinfos282>>2]|0;
        $7248 = ((($7247)) + 80|0);
        HEAPF64[$7248>>3] = $7246;
        $7249 = HEAP8[$593>>0]|0;
        $7250 = HEAP32[$vinfos282>>2]|0;
        $7251 = ((($7250)) + 91|0);
        HEAP8[$7251>>0] = $7249;
        $7252 = HEAP8[$594>>0]|0;
        $7253 = HEAP32[$vinfos282>>2]|0;
        $7254 = ((($7253)) + 92|0);
        HEAP8[$7254>>0] = $7252;
        $7255 = HEAP8[$595>>0]|0;
        $7256 = HEAP32[$vinfos282>>2]|0;
        $7257 = ((($7256)) + 90|0);
        HEAP8[$7257>>0] = $7255;
        $7258 = HEAP32[$vinfos282>>2]|0;
        $7259 = ((($7258)) + 113|0);
        HEAP8[$7259>>0] = 1;
        $7260 = +HEAPF64[$351>>3];
        $7261 = HEAP32[$vinfos282>>2]|0;
        $7262 = ((($7261)) + 104|0);
        HEAPF64[$7262>>3] = $7260;
        $7263 = HEAP8[$349>>0]|0;
        $7264 = HEAP32[$vinfos282>>2]|0;
        $7265 = ((($7264)) + 115|0);
        HEAP8[$7265>>0] = $7263;
        $7266 = HEAP8[$350>>0]|0;
        $7267 = HEAP32[$vinfos282>>2]|0;
        $7268 = ((($7267)) + 116|0);
        HEAP8[$7268>>0] = $7266;
        $7269 = HEAP8[$346>>0]|0;
        $7270 = HEAP32[$vinfos282>>2]|0;
        $7271 = ((($7270)) + 114|0);
        HEAP8[$7271>>0] = $7269;
        $7272 = HEAP32[$vinfos282>>2]|0;
        $7273 = ((($7272)) + 137|0);
        HEAP8[$7273>>0] = 1;
        $7274 = +HEAPF64[$29>>3];
        $7275 = HEAP32[$vinfos282>>2]|0;
        $7276 = ((($7275)) + 128|0);
        HEAPF64[$7276>>3] = $7274;
        $7277 = HEAP8[$27>>0]|0;
        $7278 = HEAP32[$vinfos282>>2]|0;
        $7279 = ((($7278)) + 139|0);
        HEAP8[$7279>>0] = $7277;
        $7280 = HEAP8[$28>>0]|0;
        $7281 = HEAP32[$vinfos282>>2]|0;
        $7282 = ((($7281)) + 140|0);
        HEAP8[$7282>>0] = $7280;
        $7283 = HEAP8[$26>>0]|0;
        $7284 = HEAP32[$vinfos282>>2]|0;
        $7285 = ((($7284)) + 138|0);
        HEAP8[$7285>>0] = $7283;
        $7286 = HEAP32[$vinfos282>>2]|0;
        $7287 = ((($7286)) + 161|0);
        HEAP8[$7287>>0] = 1;
        $7288 = +HEAPF64[$578>>3];
        $7289 = HEAP32[$vinfos282>>2]|0;
        $7290 = ((($7289)) + 152|0);
        HEAPF64[$7290>>3] = $7288;
        $7291 = HEAP8[$576>>0]|0;
        $7292 = HEAP32[$vinfos282>>2]|0;
        $7293 = ((($7292)) + 163|0);
        HEAP8[$7293>>0] = $7291;
        $7294 = HEAP8[$577>>0]|0;
        $7295 = HEAP32[$vinfos282>>2]|0;
        $7296 = ((($7295)) + 164|0);
        HEAP8[$7296>>0] = $7294;
        $7297 = HEAP8[$573>>0]|0;
        $7298 = HEAP32[$vinfos282>>2]|0;
        $7299 = ((($7298)) + 162|0);
        HEAP8[$7299>>0] = $7297;
        __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree283,0);
        $7300 = HEAP32[$solutions>>2]|0;
        $7301 = ((($7300)) + 8|0);
        $7302 = HEAP32[$7301>>2]|0;
        (FUNCTION_TABLE_iiii[$7302 & 31]($solutions,$vinfos282,$vfree283)|0);
        __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree283);
        __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos282);
        break L7;
       }
      } while(0);
      $4612 = +HEAPF64[$0>>3];
      $4613 = +HEAPF64[$1>>3];
      $4614 = +HEAPF64[$2>>3];
      $4615 = $4613 * $4614;
      $4616 = +HEAPF64[$4>>3];
      $4617 = +HEAPF64[$5>>3];
      $4618 = $4614 * $4616;
      $4619 = +HEAPF64[$7>>3];
      $4620 = $4614 * $4619;
      $4621 = $611 * $4619;
      $4622 = $611 * $4613;
      $4623 = $4612 * $4620;
      $4624 = $4622 + $4623;
      $4625 = $4615 * $4617;
      $4626 = $618 * $4619;
      $4627 = $4626 - $4625;
      $4628 = $618 * $4613;
      $4629 = $4617 * $4620;
      $4630 = $4628 + $4629;
      $4631 = $4612 * $4615;
      $4632 = $4621 - $4631;
      $4633 = +HEAPF64[$8>>3];
      $4634 = $626 * $4633;
      $4635 = +HEAPF64[$9>>3];
      $4636 = $4635 * $4632;
      $4637 = $4634 + $4636;
      $4638 = +HEAPF64[$10>>3];
      $4639 = $4638 * $4624;
      $4640 = $4637 + $4639;
      HEAPF64[$11>>3] = $4640;
      $4641 = +HEAPF64[$14>>3];
      $4642 = $4624 * $4641;
      $4643 = +HEAPF64[$12>>3];
      $4644 = $4632 * $4643;
      $4645 = $4642 + $4644;
      $4646 = +HEAPF64[$13>>3];
      $4647 = $626 * $4646;
      $4648 = $4645 + $4647;
      HEAPF64[$15>>3] = $4648;
      $4649 = +HEAPF64[$18>>3];
      $4650 = $4632 * $4649;
      $4651 = +HEAPF64[$17>>3];
      $4652 = $4624 * $4651;
      $4653 = $4650 + $4652;
      $4654 = +HEAPF64[$16>>3];
      $4655 = $626 * $4654;
      $4656 = $4653 + $4655;
      HEAPF64[$19>>3] = $4656;
      $4657 = +HEAPF64[$9>>3];
      $4658 = $630 * $4657;
      $4659 = +HEAPF64[$8>>3];
      $4660 = $4618 * $4659;
      $4661 = $4658 + $4660;
      $4662 = +HEAPF64[$10>>3];
      $4663 = $615 * $4662;
      $4664 = $4661 + $4663;
      HEAPF64[$20>>3] = $4664;
      $4665 = +HEAPF64[$13>>3];
      $4666 = $4618 * $4665;
      $4667 = +HEAPF64[$14>>3];
      $4668 = $615 * $4667;
      $4669 = $4666 + $4668;
      $4670 = +HEAPF64[$12>>3];
      $4671 = $630 * $4670;
      $4672 = $4669 + $4671;
      HEAPF64[$21>>3] = $4672;
      $4673 = +HEAPF64[$16>>3];
      $4674 = $4618 * $4673;
      $4675 = +HEAPF64[$17>>3];
      $4676 = $615 * $4675;
      $4677 = $4674 + $4676;
      $4678 = +HEAPF64[$18>>3];
      $4679 = $630 * $4678;
      $4680 = $4677 + $4679;
      HEAPF64[$22>>3] = $4680;
      $4681 = +HEAPF64[$8>>3];
      $4682 = $621 * $4681;
      $4683 = +HEAPF64[$9>>3];
      $4684 = $4627 * $4683;
      $4685 = $4682 + $4684;
      $4686 = +HEAPF64[$10>>3];
      $4687 = $4630 * $4686;
      $4688 = $4685 + $4687;
      HEAPF64[$23>>3] = $4688;
      $4689 = +HEAPF64[$14>>3];
      $4690 = $4630 * $4689;
      $4691 = +HEAPF64[$12>>3];
      $4692 = $4627 * $4691;
      $4693 = $4690 + $4692;
      $4694 = +HEAPF64[$13>>3];
      $4695 = $621 * $4694;
      $4696 = $4693 + $4695;
      HEAPF64[$24>>3] = $4696;
      $4697 = +HEAPF64[$17>>3];
      $4698 = $4630 * $4697;
      $4699 = +HEAPF64[$18>>3];
      $4700 = $4627 * $4699;
      $4701 = $4698 + $4700;
      $4702 = +HEAPF64[$16>>3];
      $4703 = $621 * $4702;
      $4704 = $4701 + $4703;
      HEAPF64[$25>>3] = $4704;
      $4705 = +HEAPF64[$353>>3];
      $4706 = (+__Z5IKabsd($4705));
      $4707 = $4706 < 9.9999999999999995E-7;
      do {
       if (!($4707)) {
        $4708 = +HEAPF64[$31>>3];
        $4709 = (+__Z5IKabsd($4708));
        $4710 = $4709 < 9.9999999999999995E-7;
        if ($4710) {
         break;
        }
        HEAP8[$550>>0] = 1;
        $6844 = +HEAPF64[$31>>3];
        __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x570,$6844,-1);
        $6845 = HEAP8[$551>>0]|0;
        $6846 = ($6845<<24>>24)==(0);
        if ($6846) {
         break L7;
        }
        $6847 = +HEAPF64[$x570>>3];
        $6848 = +HEAPF64[$353>>3];
        __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x571,$6848,-1);
        $6849 = HEAP8[$552>>0]|0;
        $6850 = ($6849<<24>>24)==(0);
        if ($6850) {
         break L7;
        }
        $6851 = +HEAPF64[$x571>>3];
        $6852 = $6847 * $6851;
        $6853 = +HEAPF64[$11>>3];
        $6854 = +HEAPF64[$31>>3];
        $6855 = $6853 * $6854;
        $6856 = +HEAPF64[$352>>3];
        $6857 = +HEAPF64[$30>>3];
        $6858 = $6856 * $6857;
        $6859 = +HEAPF64[$23>>3];
        $6860 = $6858 * $6859;
        $6861 = -$6860;
        $6862 = $6861 - $6855;
        $6863 = $6852 * $6862;
        $6864 = (+__Z5IKabsd($6863));
        $6865 = $6864 < 1.9999999999999999E-6;
        do {
         if ($6865) {
          $6866 = $6847 * $6859;
          $6867 = -$6866;
          $6868 = (+__Z5IKabsd($6867));
          $6869 = $6868 < 1.9999999999999999E-6;
          if (!($6869)) {
           break;
          }
          $6870 = (+__Z5IKsqrd($6863));
          $6871 = (+__Z5IKsqrd($6867));
          $6872 = $6870 + $6871;
          $6873 = $6872 + -1.0;
          $6874 = (+__Z5IKabsd($6873));
          $6875 = !($6874 <= 1.9999999999999999E-6);
          if (!($6875)) {
           break L7;
          }
         }
        } while(0);
        $6876 = +HEAPF64[$x571>>3];
        $6877 = $6847 * $6876;
        $6878 = +HEAPF64[$11>>3];
        $6879 = +HEAPF64[$31>>3];
        $6880 = $6878 * $6879;
        $6881 = +HEAPF64[$352>>3];
        $6882 = +HEAPF64[$30>>3];
        $6883 = $6881 * $6882;
        $6884 = +HEAPF64[$23>>3];
        $6885 = $6883 * $6884;
        $6886 = -$6885;
        $6887 = $6886 - $6880;
        $6888 = $6877 * $6887;
        $6889 = $6847 * $6884;
        $6890 = -$6889;
        $6891 = (+__Z7IKatan2dd($6888,$6890));
        $6892 = (+__Z5IKsind($6891));
        $6893 = (+__Z5IKcosd($6891));
        $6894 = $6891 > 3.14159265358979;
        do {
         if ($6894) {
          $6895 = $6891 + -6.2831853071795898;
          $6898 = $6895;
         } else {
          $6896 = $6891 < -3.14159265358979;
          if (!($6896)) {
           $6898 = $6891;
           break;
          }
          $6897 = $6891 + 6.2831853071795898;
          $6898 = $6897;
         }
        } while(0);
        HEAP8[$553>>0] = 0;
        HEAP8[$554>>0] = -1;
        HEAPF64[$555>>3] = $6898;
        HEAPF64[$556>>3] = $6893;
        HEAPF64[$557>>3] = $6892;
        $6899 = +HEAPF64[$555>>3];
        $6900 = (+__Z5IKsind($6899));
        $6901 = (+__Z5IKcosd($6899));
        $6902 = +HEAPF64[$31>>3];
        $6903 = +HEAPF64[$353>>3];
        $6904 = +HEAPF64[$30>>3];
        $6905 = $6903 * $6904;
        $6906 = +HEAPF64[$352>>3];
        $6907 = +HEAPF64[$15>>3];
        $6908 = $6906 * $6907;
        $6909 = +HEAPF64[$11>>3];
        $6910 = $6906 * $6909;
        $6911 = $6900 * $6904;
        $6912 = $6901 * $6902;
        $6913 = +HEAPF64[$23>>3];
        $6914 = $6912 + $6913;
        $6915 = +HEAPF64[$24>>3];
        $6916 = +HEAPF64[$21>>3];
        $6917 = $6903 * $6916;
        $6918 = $6908 + $6917;
        $6919 = $6911 + $6918;
        $6920 = +HEAPF64[$20>>3];
        $6921 = $6906 * $6920;
        $6922 = $6903 * $6909;
        $6923 = $6921 - $6922;
        $6924 = $6923 - $6900;
        $6925 = $6906 * $6916;
        $6926 = $6925 - $6901;
        $6927 = $6903 * $6907;
        $6928 = $6926 - $6927;
        $6929 = $6901 * $6903;
        $6930 = $6906 * $6911;
        $6931 = $6929 + $6930;
        $6932 = $6907 + $6931;
        $6933 = $6903 * $6920;
        $6934 = $6901 * $6904;
        $6935 = $6933 - $6934;
        $6936 = $6910 + $6935;
        $6937 = $6900 * $6903;
        $6938 = -$6906;
        $6939 = $6904 * $6938;
        $6940 = $6901 * $6939;
        $6941 = $6937 + $6940;
        $6942 = $6909 + $6941;
        $6943 = $6901 * $6938;
        $6944 = $6943 + $6916;
        $6945 = $6900 * $6905;
        $6946 = $6945 + $6944;
        $6947 = $6903 * $6934;
        $6948 = $6900 * $6938;
        $6949 = $6948 - $6947;
        $6950 = $6949 + $6920;
        $6951 = $6904 * $6908;
        $6952 = $6905 * $6916;
        $6953 = $6951 + $6952;
        $6954 = $6900 + $6953;
        $6955 = $6902 * $6915;
        $6956 = $6954 - $6955;
        $6957 = $6904 * $6910;
        $6958 = $6905 * $6920;
        $6959 = $6957 + $6958;
        $6960 = $6959 - $6901;
        $6961 = $6902 * $6913;
        $6962 = $6960 - $6961;
        $6963 = (+__Z5IKabsd($6914));
        $6964 = $6963 > 5.0000000000000004E-6;
        if ($6964) {
         break L7;
        }
        $6965 = $6900 * $6902;
        $6966 = $6915 - $6965;
        $6967 = (+__Z5IKabsd($6966));
        $6968 = $6967 > 5.0000000000000004E-6;
        if ($6968) {
         break L7;
        }
        $6969 = (+__Z5IKabsd($6919));
        $6970 = $6969 > 5.0000000000000004E-6;
        if ($6970) {
         break L7;
        }
        $6971 = (+__Z5IKabsd($6924));
        $6972 = $6971 > 5.0000000000000004E-6;
        if ($6972) {
         break L7;
        }
        $6973 = (+__Z5IKabsd($6928));
        $6974 = $6973 > 5.0000000000000004E-6;
        if ($6974) {
         break L7;
        }
        $6975 = (+__Z5IKabsd($6932));
        $6976 = $6975 > 5.0000000000000004E-6;
        if ($6976) {
         break L7;
        }
        $6977 = (+__Z5IKabsd($6936));
        $6978 = $6977 > 5.0000000000000004E-6;
        if ($6978) {
         break L7;
        }
        $6979 = (+__Z5IKabsd($6942));
        $6980 = $6979 > 5.0000000000000004E-6;
        if ($6980) {
         break L7;
        }
        $6981 = (+__Z5IKabsd($6946));
        $6982 = $6981 > 5.0000000000000004E-6;
        if ($6982) {
         break L7;
        }
        $6983 = (+__Z5IKabsd($6950));
        $6984 = $6983 > 5.0000000000000004E-6;
        if ($6984) {
         break L7;
        }
        $6985 = (+__Z5IKabsd($6956));
        $6986 = $6985 > 5.0000000000000004E-6;
        if ($6986) {
         break L7;
        }
        $6987 = (+__Z5IKabsd($6962));
        $6988 = $6987 > 5.0000000000000004E-6;
        if ($6988) {
         break L7;
        }
        __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos272,7);
        $6989 = HEAP32[$vinfos272>>2]|0;
        $6990 = ((($6989)) + 17|0);
        HEAP8[$6990>>0] = 1;
        $6991 = +HEAPF64[$this>>3];
        $6992 = HEAP32[$vinfos272>>2]|0;
        $6993 = ((($6992)) + 8|0);
        HEAPF64[$6993>>3] = $6991;
        $6994 = HEAP8[$558>>0]|0;
        $6995 = HEAP32[$vinfos272>>2]|0;
        $6996 = ((($6995)) + 19|0);
        HEAP8[$6996>>0] = $6994;
        $6997 = HEAP8[$559>>0]|0;
        $6998 = HEAP32[$vinfos272>>2]|0;
        $6999 = ((($6998)) + 20|0);
        HEAP8[$6999>>0] = $6997;
        $7000 = HEAP8[$560>>0]|0;
        $7001 = HEAP32[$vinfos272>>2]|0;
        $7002 = ((($7001)) + 18|0);
        HEAP8[$7002>>0] = $7000;
        $7003 = HEAP32[$vinfos272>>2]|0;
        $7004 = ((($7003)) + 41|0);
        HEAP8[$7004>>0] = 1;
        $7005 = +HEAPF64[$561>>3];
        $7006 = HEAP32[$vinfos272>>2]|0;
        $7007 = ((($7006)) + 32|0);
        HEAPF64[$7007>>3] = $7005;
        $7008 = HEAP8[$562>>0]|0;
        $7009 = HEAP32[$vinfos272>>2]|0;
        $7010 = ((($7009)) + 43|0);
        HEAP8[$7010>>0] = $7008;
        $7011 = HEAP8[$563>>0]|0;
        $7012 = HEAP32[$vinfos272>>2]|0;
        $7013 = ((($7012)) + 44|0);
        HEAP8[$7013>>0] = $7011;
        $7014 = HEAP8[$564>>0]|0;
        $7015 = HEAP32[$vinfos272>>2]|0;
        $7016 = ((($7015)) + 42|0);
        HEAP8[$7016>>0] = $7014;
        $7017 = HEAP32[$vinfos272>>2]|0;
        $7018 = ((($7017)) + 65|0);
        HEAP8[$7018>>0] = 1;
        $7019 = +HEAPF64[$565>>3];
        $7020 = HEAP32[$vinfos272>>2]|0;
        $7021 = ((($7020)) + 56|0);
        HEAPF64[$7021>>3] = $7019;
        $7022 = HEAP8[$566>>0]|0;
        $7023 = HEAP32[$vinfos272>>2]|0;
        $7024 = ((($7023)) + 67|0);
        HEAP8[$7024>>0] = $7022;
        $7025 = HEAP8[$567>>0]|0;
        $7026 = HEAP32[$vinfos272>>2]|0;
        $7027 = ((($7026)) + 68|0);
        HEAP8[$7027>>0] = $7025;
        $7028 = HEAP8[$568>>0]|0;
        $7029 = HEAP32[$vinfos272>>2]|0;
        $7030 = ((($7029)) + 66|0);
        HEAP8[$7030>>0] = $7028;
        $7031 = HEAP32[$vinfos272>>2]|0;
        $7032 = ((($7031)) + 89|0);
        HEAP8[$7032>>0] = 1;
        $7033 = +HEAPF64[$569>>3];
        $7034 = HEAP32[$vinfos272>>2]|0;
        $7035 = ((($7034)) + 80|0);
        HEAPF64[$7035>>3] = $7033;
        $7036 = HEAP8[$570>>0]|0;
        $7037 = HEAP32[$vinfos272>>2]|0;
        $7038 = ((($7037)) + 91|0);
        HEAP8[$7038>>0] = $7036;
        $7039 = HEAP8[$571>>0]|0;
        $7040 = HEAP32[$vinfos272>>2]|0;
        $7041 = ((($7040)) + 92|0);
        HEAP8[$7041>>0] = $7039;
        $7042 = HEAP8[$572>>0]|0;
        $7043 = HEAP32[$vinfos272>>2]|0;
        $7044 = ((($7043)) + 90|0);
        HEAP8[$7044>>0] = $7042;
        $7045 = HEAP32[$vinfos272>>2]|0;
        $7046 = ((($7045)) + 113|0);
        HEAP8[$7046>>0] = 1;
        $7047 = +HEAPF64[$351>>3];
        $7048 = HEAP32[$vinfos272>>2]|0;
        $7049 = ((($7048)) + 104|0);
        HEAPF64[$7049>>3] = $7047;
        $7050 = HEAP8[$349>>0]|0;
        $7051 = HEAP32[$vinfos272>>2]|0;
        $7052 = ((($7051)) + 115|0);
        HEAP8[$7052>>0] = $7050;
        $7053 = HEAP8[$350>>0]|0;
        $7054 = HEAP32[$vinfos272>>2]|0;
        $7055 = ((($7054)) + 116|0);
        HEAP8[$7055>>0] = $7053;
        $7056 = HEAP8[$346>>0]|0;
        $7057 = HEAP32[$vinfos272>>2]|0;
        $7058 = ((($7057)) + 114|0);
        HEAP8[$7058>>0] = $7056;
        $7059 = HEAP32[$vinfos272>>2]|0;
        $7060 = ((($7059)) + 137|0);
        HEAP8[$7060>>0] = 1;
        $7061 = +HEAPF64[$29>>3];
        $7062 = HEAP32[$vinfos272>>2]|0;
        $7063 = ((($7062)) + 128|0);
        HEAPF64[$7063>>3] = $7061;
        $7064 = HEAP8[$27>>0]|0;
        $7065 = HEAP32[$vinfos272>>2]|0;
        $7066 = ((($7065)) + 139|0);
        HEAP8[$7066>>0] = $7064;
        $7067 = HEAP8[$28>>0]|0;
        $7068 = HEAP32[$vinfos272>>2]|0;
        $7069 = ((($7068)) + 140|0);
        HEAP8[$7069>>0] = $7067;
        $7070 = HEAP8[$26>>0]|0;
        $7071 = HEAP32[$vinfos272>>2]|0;
        $7072 = ((($7071)) + 138|0);
        HEAP8[$7072>>0] = $7070;
        $7073 = HEAP32[$vinfos272>>2]|0;
        $7074 = ((($7073)) + 161|0);
        HEAP8[$7074>>0] = 1;
        $7075 = +HEAPF64[$555>>3];
        $7076 = HEAP32[$vinfos272>>2]|0;
        $7077 = ((($7076)) + 152|0);
        HEAPF64[$7077>>3] = $7075;
        $7078 = HEAP8[$553>>0]|0;
        $7079 = HEAP32[$vinfos272>>2]|0;
        $7080 = ((($7079)) + 163|0);
        HEAP8[$7080>>0] = $7078;
        $7081 = HEAP8[$554>>0]|0;
        $7082 = HEAP32[$vinfos272>>2]|0;
        $7083 = ((($7082)) + 164|0);
        HEAP8[$7083>>0] = $7081;
        $7084 = HEAP8[$550>>0]|0;
        $7085 = HEAP32[$vinfos272>>2]|0;
        $7086 = ((($7085)) + 162|0);
        HEAP8[$7086>>0] = $7084;
        __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree273,0);
        $7087 = HEAP32[$solutions>>2]|0;
        $7088 = ((($7087)) + 8|0);
        $7089 = HEAP32[$7088>>2]|0;
        (FUNCTION_TABLE_iiii[$7089 & 31]($solutions,$vinfos272,$vfree273)|0);
        __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree273);
        __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos272);
        break L7;
       }
      } while(0);
      $4711 = +HEAPF64[$0>>3];
      $4712 = +HEAPF64[$1>>3];
      $4713 = +HEAPF64[$2>>3];
      $4714 = $4712 * $4713;
      $4715 = +HEAPF64[$4>>3];
      $4716 = +HEAPF64[$5>>3];
      $4717 = $4713 * $4715;
      $4718 = +HEAPF64[$7>>3];
      $4719 = $4713 * $4718;
      $4720 = $611 * $4718;
      $4721 = $4711 * $4719;
      $4722 = $611 * $4712;
      $4723 = $4722 + $4721;
      $4724 = $4714 * $4716;
      $4725 = $618 * $4718;
      $4726 = $4725 - $4724;
      $4727 = $4716 * $4719;
      $4728 = $618 * $4712;
      $4729 = $4728 + $4727;
      $4730 = $4711 * $4714;
      $4731 = $4720 - $4730;
      $4732 = +HEAPF64[$10>>3];
      $4733 = $4732 * $4723;
      $4734 = +HEAPF64[$8>>3];
      $4735 = $626 * $4734;
      $4736 = $4735 + $4733;
      $4737 = +HEAPF64[$9>>3];
      $4738 = $4731 * $4737;
      $4739 = $4738 + $4736;
      HEAPF64[$11>>3] = $4739;
      $4740 = +HEAPF64[$13>>3];
      $4741 = $626 * $4740;
      $4742 = +HEAPF64[$14>>3];
      $4743 = $4723 * $4742;
      $4744 = $4741 + $4743;
      $4745 = +HEAPF64[$12>>3];
      $4746 = $4731 * $4745;
      $4747 = $4744 + $4746;
      HEAPF64[$15>>3] = $4747;
      $4748 = +HEAPF64[$18>>3];
      $4749 = $4731 * $4748;
      $4750 = +HEAPF64[$17>>3];
      $4751 = $4723 * $4750;
      $4752 = $4749 + $4751;
      $4753 = +HEAPF64[$16>>3];
      $4754 = $626 * $4753;
      $4755 = $4752 + $4754;
      HEAPF64[$19>>3] = $4755;
      $4756 = +HEAPF64[$10>>3];
      $4757 = $615 * $4756;
      $4758 = +HEAPF64[$8>>3];
      $4759 = $4717 * $4758;
      $4760 = $4757 + $4759;
      $4761 = +HEAPF64[$9>>3];
      $4762 = $630 * $4761;
      $4763 = $4760 + $4762;
      HEAPF64[$20>>3] = $4763;
      $4764 = +HEAPF64[$14>>3];
      $4765 = $615 * $4764;
      $4766 = +HEAPF64[$13>>3];
      $4767 = $4717 * $4766;
      $4768 = $4765 + $4767;
      $4769 = +HEAPF64[$12>>3];
      $4770 = $630 * $4769;
      $4771 = $4768 + $4770;
      HEAPF64[$21>>3] = $4771;
      $4772 = +HEAPF64[$16>>3];
      $4773 = $4717 * $4772;
      $4774 = +HEAPF64[$18>>3];
      $4775 = $630 * $4774;
      $4776 = $4773 + $4775;
      $4777 = +HEAPF64[$17>>3];
      $4778 = $615 * $4777;
      $4779 = $4776 + $4778;
      HEAPF64[$22>>3] = $4779;
      $4780 = +HEAPF64[$10>>3];
      $4781 = $4729 * $4780;
      $4782 = +HEAPF64[$8>>3];
      $4783 = $621 * $4782;
      $4784 = $4781 + $4783;
      $4785 = +HEAPF64[$9>>3];
      $4786 = $4726 * $4785;
      $4787 = $4784 + $4786;
      HEAPF64[$23>>3] = $4787;
      $4788 = +HEAPF64[$13>>3];
      $4789 = $621 * $4788;
      $4790 = +HEAPF64[$14>>3];
      $4791 = $4729 * $4790;
      $4792 = $4789 + $4791;
      $4793 = +HEAPF64[$12>>3];
      $4794 = $4726 * $4793;
      $4795 = $4792 + $4794;
      HEAPF64[$24>>3] = $4795;
      $4796 = +HEAPF64[$18>>3];
      $4797 = $4726 * $4796;
      $4798 = +HEAPF64[$17>>3];
      $4799 = $4729 * $4798;
      $4800 = $4797 + $4799;
      $4801 = +HEAPF64[$16>>3];
      $4802 = $621 * $4801;
      $4803 = $4800 + $4802;
      HEAPF64[$25>>3] = $4803;
      $4804 = +HEAPF64[$352>>3];
      $4805 = +HEAPF64[$31>>3];
      $4806 = (+__Z5IKabsd($4804));
      $4807 = $4806 < 9.9999999999999995E-7;
      do {
       if (!($4807)) {
        $4808 = +HEAPF64[$30>>3];
        $4809 = (+__Z5IKabsd($4808));
        $4810 = $4809 < 9.9999999999999995E-7;
        if ($4810) {
         break;
        }
        $4811 = (+__Z5IKabsd($4805));
        $4812 = $4811 < 9.9999999999999995E-7;
        if ($4812) {
         break;
        }
        HEAP8[$526>>0] = 1;
        $6597 = +HEAPF64[$31>>3];
        __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x556,$6597,-1);
        $6598 = HEAP8[$527>>0]|0;
        $6599 = ($6598<<24>>24)==(0);
        if ($6599) {
         break L7;
        }
        $6600 = +HEAPF64[$x556>>3];
        $6601 = +HEAPF64[$352>>3];
        __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x557,$6601,-1);
        $6602 = HEAP8[$528>>0]|0;
        $6603 = ($6602<<24>>24)==(0);
        if ($6603) {
         break L7;
        }
        $6604 = +HEAPF64[$30>>3];
        __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x558,$6604,-1);
        $6605 = HEAP8[$529>>0]|0;
        $6606 = ($6605<<24>>24)==(0);
        if ($6606) {
         break L7;
        }
        $6607 = +HEAPF64[$x557>>3];
        $6608 = $6600 * $6607;
        $6609 = +HEAPF64[$x558>>3];
        $6610 = $6608 * $6609;
        $6611 = +HEAPF64[$23>>3];
        $6612 = +HEAPF64[$353>>3];
        $6613 = $6611 * $6612;
        $6614 = +HEAPF64[$15>>3];
        $6615 = +HEAPF64[$31>>3];
        $6616 = $6614 * $6615;
        $6617 = $6613 - $6616;
        $6618 = $6610 * $6617;
        $6619 = (+__Z5IKabsd($6618));
        $6620 = $6619 < 1.9999999999999999E-6;
        do {
         if ($6620) {
          $6621 = $6600 * $6611;
          $6622 = -$6621;
          $6623 = (+__Z5IKabsd($6622));
          $6624 = $6623 < 1.9999999999999999E-6;
          if (!($6624)) {
           break;
          }
          $6625 = (+__Z5IKsqrd($6618));
          $6626 = (+__Z5IKsqrd($6622));
          $6627 = $6625 + $6626;
          $6628 = $6627 + -1.0;
          $6629 = (+__Z5IKabsd($6628));
          $6630 = !($6629 <= 1.9999999999999999E-6);
          if (!($6630)) {
           break L7;
          }
         }
        } while(0);
        $6631 = +HEAPF64[$x557>>3];
        $6632 = $6600 * $6631;
        $6633 = +HEAPF64[$x558>>3];
        $6634 = $6632 * $6633;
        $6635 = +HEAPF64[$23>>3];
        $6636 = +HEAPF64[$353>>3];
        $6637 = $6635 * $6636;
        $6638 = +HEAPF64[$15>>3];
        $6639 = +HEAPF64[$31>>3];
        $6640 = $6638 * $6639;
        $6641 = $6637 - $6640;
        $6642 = $6634 * $6641;
        $6643 = $6600 * $6635;
        $6644 = -$6643;
        $6645 = (+__Z7IKatan2dd($6642,$6644));
        $6646 = (+__Z5IKsind($6645));
        $6647 = (+__Z5IKcosd($6645));
        $6648 = $6645 > 3.14159265358979;
        do {
         if ($6648) {
          $6649 = $6645 + -6.2831853071795898;
          $6652 = $6649;
         } else {
          $6650 = $6645 < -3.14159265358979;
          if (!($6650)) {
           $6652 = $6645;
           break;
          }
          $6651 = $6645 + 6.2831853071795898;
          $6652 = $6651;
         }
        } while(0);
        HEAP8[$530>>0] = 0;
        HEAP8[$531>>0] = -1;
        HEAPF64[$532>>3] = $6652;
        HEAPF64[$533>>3] = $6647;
        HEAPF64[$534>>3] = $6646;
        $6653 = +HEAPF64[$532>>3];
        $6654 = (+__Z5IKsind($6653));
        $6655 = (+__Z5IKcosd($6653));
        $6656 = +HEAPF64[$31>>3];
        $6657 = +HEAPF64[$353>>3];
        $6658 = +HEAPF64[$30>>3];
        $6659 = $6657 * $6658;
        $6660 = +HEAPF64[$352>>3];
        $6661 = +HEAPF64[$15>>3];
        $6662 = $6660 * $6661;
        $6663 = +HEAPF64[$11>>3];
        $6664 = $6660 * $6663;
        $6665 = $6654 * $6658;
        $6666 = +HEAPF64[$23>>3];
        $6667 = $6655 * $6656;
        $6668 = $6667 + $6666;
        $6669 = +HEAPF64[$24>>3];
        $6670 = +HEAPF64[$21>>3];
        $6671 = $6657 * $6670;
        $6672 = $6665 + $6671;
        $6673 = $6662 + $6672;
        $6674 = $6657 * $6663;
        $6675 = +HEAPF64[$20>>3];
        $6676 = $6660 * $6675;
        $6677 = $6676 - $6674;
        $6678 = $6677 - $6654;
        $6679 = $6660 * $6670;
        $6680 = $6679 - $6655;
        $6681 = $6657 * $6661;
        $6682 = $6680 - $6681;
        $6683 = $6655 * $6657;
        $6684 = $6683 + $6661;
        $6685 = $6660 * $6665;
        $6686 = $6685 + $6684;
        $6687 = $6657 * $6675;
        $6688 = $6655 * $6658;
        $6689 = $6687 - $6688;
        $6690 = $6664 + $6689;
        $6691 = $6654 * $6657;
        $6692 = -$6660;
        $6693 = $6658 * $6692;
        $6694 = $6655 * $6693;
        $6695 = $6691 + $6694;
        $6696 = $6663 + $6695;
        $6697 = $6655 * $6692;
        $6698 = $6697 + $6670;
        $6699 = $6654 * $6659;
        $6700 = $6699 + $6698;
        $6701 = $6657 * $6688;
        $6702 = $6654 * $6692;
        $6703 = $6702 - $6701;
        $6704 = $6703 + $6675;
        $6705 = $6659 * $6670;
        $6706 = $6654 + $6705;
        $6707 = $6658 * $6662;
        $6708 = $6707 + $6706;
        $6709 = $6656 * $6669;
        $6710 = $6708 - $6709;
        $6711 = $6656 * $6666;
        $6712 = $6659 * $6675;
        $6713 = $6712 - $6711;
        $6714 = $6658 * $6664;
        $6715 = $6714 + $6713;
        $6716 = $6715 - $6655;
        $6717 = (+__Z5IKabsd($6668));
        $6718 = $6717 > 5.0000000000000004E-6;
        if ($6718) {
         break L7;
        }
        $6719 = $6654 * $6656;
        $6720 = $6669 - $6719;
        $6721 = (+__Z5IKabsd($6720));
        $6722 = $6721 > 5.0000000000000004E-6;
        if ($6722) {
         break L7;
        }
        $6723 = (+__Z5IKabsd($6673));
        $6724 = $6723 > 5.0000000000000004E-6;
        if ($6724) {
         break L7;
        }
        $6725 = (+__Z5IKabsd($6678));
        $6726 = $6725 > 5.0000000000000004E-6;
        if ($6726) {
         break L7;
        }
        $6727 = (+__Z5IKabsd($6682));
        $6728 = $6727 > 5.0000000000000004E-6;
        if ($6728) {
         break L7;
        }
        $6729 = (+__Z5IKabsd($6686));
        $6730 = $6729 > 5.0000000000000004E-6;
        if ($6730) {
         break L7;
        }
        $6731 = (+__Z5IKabsd($6690));
        $6732 = $6731 > 5.0000000000000004E-6;
        if ($6732) {
         break L7;
        }
        $6733 = (+__Z5IKabsd($6696));
        $6734 = $6733 > 5.0000000000000004E-6;
        if ($6734) {
         break L7;
        }
        $6735 = (+__Z5IKabsd($6700));
        $6736 = $6735 > 5.0000000000000004E-6;
        if ($6736) {
         break L7;
        }
        $6737 = (+__Z5IKabsd($6704));
        $6738 = $6737 > 5.0000000000000004E-6;
        if ($6738) {
         break L7;
        }
        $6739 = (+__Z5IKabsd($6710));
        $6740 = $6739 > 5.0000000000000004E-6;
        if ($6740) {
         break L7;
        }
        $6741 = (+__Z5IKabsd($6716));
        $6742 = $6741 > 5.0000000000000004E-6;
        if ($6742) {
         break L7;
        }
        __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos262,7);
        $6743 = HEAP32[$vinfos262>>2]|0;
        $6744 = ((($6743)) + 17|0);
        HEAP8[$6744>>0] = 1;
        $6745 = +HEAPF64[$this>>3];
        $6746 = HEAP32[$vinfos262>>2]|0;
        $6747 = ((($6746)) + 8|0);
        HEAPF64[$6747>>3] = $6745;
        $6748 = HEAP8[$535>>0]|0;
        $6749 = HEAP32[$vinfos262>>2]|0;
        $6750 = ((($6749)) + 19|0);
        HEAP8[$6750>>0] = $6748;
        $6751 = HEAP8[$536>>0]|0;
        $6752 = HEAP32[$vinfos262>>2]|0;
        $6753 = ((($6752)) + 20|0);
        HEAP8[$6753>>0] = $6751;
        $6754 = HEAP8[$537>>0]|0;
        $6755 = HEAP32[$vinfos262>>2]|0;
        $6756 = ((($6755)) + 18|0);
        HEAP8[$6756>>0] = $6754;
        $6757 = HEAP32[$vinfos262>>2]|0;
        $6758 = ((($6757)) + 41|0);
        HEAP8[$6758>>0] = 1;
        $6759 = +HEAPF64[$538>>3];
        $6760 = HEAP32[$vinfos262>>2]|0;
        $6761 = ((($6760)) + 32|0);
        HEAPF64[$6761>>3] = $6759;
        $6762 = HEAP8[$539>>0]|0;
        $6763 = HEAP32[$vinfos262>>2]|0;
        $6764 = ((($6763)) + 43|0);
        HEAP8[$6764>>0] = $6762;
        $6765 = HEAP8[$540>>0]|0;
        $6766 = HEAP32[$vinfos262>>2]|0;
        $6767 = ((($6766)) + 44|0);
        HEAP8[$6767>>0] = $6765;
        $6768 = HEAP8[$541>>0]|0;
        $6769 = HEAP32[$vinfos262>>2]|0;
        $6770 = ((($6769)) + 42|0);
        HEAP8[$6770>>0] = $6768;
        $6771 = HEAP32[$vinfos262>>2]|0;
        $6772 = ((($6771)) + 65|0);
        HEAP8[$6772>>0] = 1;
        $6773 = +HEAPF64[$542>>3];
        $6774 = HEAP32[$vinfos262>>2]|0;
        $6775 = ((($6774)) + 56|0);
        HEAPF64[$6775>>3] = $6773;
        $6776 = HEAP8[$543>>0]|0;
        $6777 = HEAP32[$vinfos262>>2]|0;
        $6778 = ((($6777)) + 67|0);
        HEAP8[$6778>>0] = $6776;
        $6779 = HEAP8[$544>>0]|0;
        $6780 = HEAP32[$vinfos262>>2]|0;
        $6781 = ((($6780)) + 68|0);
        HEAP8[$6781>>0] = $6779;
        $6782 = HEAP8[$545>>0]|0;
        $6783 = HEAP32[$vinfos262>>2]|0;
        $6784 = ((($6783)) + 66|0);
        HEAP8[$6784>>0] = $6782;
        $6785 = HEAP32[$vinfos262>>2]|0;
        $6786 = ((($6785)) + 89|0);
        HEAP8[$6786>>0] = 1;
        $6787 = +HEAPF64[$546>>3];
        $6788 = HEAP32[$vinfos262>>2]|0;
        $6789 = ((($6788)) + 80|0);
        HEAPF64[$6789>>3] = $6787;
        $6790 = HEAP8[$547>>0]|0;
        $6791 = HEAP32[$vinfos262>>2]|0;
        $6792 = ((($6791)) + 91|0);
        HEAP8[$6792>>0] = $6790;
        $6793 = HEAP8[$548>>0]|0;
        $6794 = HEAP32[$vinfos262>>2]|0;
        $6795 = ((($6794)) + 92|0);
        HEAP8[$6795>>0] = $6793;
        $6796 = HEAP8[$549>>0]|0;
        $6797 = HEAP32[$vinfos262>>2]|0;
        $6798 = ((($6797)) + 90|0);
        HEAP8[$6798>>0] = $6796;
        $6799 = HEAP32[$vinfos262>>2]|0;
        $6800 = ((($6799)) + 113|0);
        HEAP8[$6800>>0] = 1;
        $6801 = +HEAPF64[$351>>3];
        $6802 = HEAP32[$vinfos262>>2]|0;
        $6803 = ((($6802)) + 104|0);
        HEAPF64[$6803>>3] = $6801;
        $6804 = HEAP8[$349>>0]|0;
        $6805 = HEAP32[$vinfos262>>2]|0;
        $6806 = ((($6805)) + 115|0);
        HEAP8[$6806>>0] = $6804;
        $6807 = HEAP8[$350>>0]|0;
        $6808 = HEAP32[$vinfos262>>2]|0;
        $6809 = ((($6808)) + 116|0);
        HEAP8[$6809>>0] = $6807;
        $6810 = HEAP8[$346>>0]|0;
        $6811 = HEAP32[$vinfos262>>2]|0;
        $6812 = ((($6811)) + 114|0);
        HEAP8[$6812>>0] = $6810;
        $6813 = HEAP32[$vinfos262>>2]|0;
        $6814 = ((($6813)) + 137|0);
        HEAP8[$6814>>0] = 1;
        $6815 = +HEAPF64[$29>>3];
        $6816 = HEAP32[$vinfos262>>2]|0;
        $6817 = ((($6816)) + 128|0);
        HEAPF64[$6817>>3] = $6815;
        $6818 = HEAP8[$27>>0]|0;
        $6819 = HEAP32[$vinfos262>>2]|0;
        $6820 = ((($6819)) + 139|0);
        HEAP8[$6820>>0] = $6818;
        $6821 = HEAP8[$28>>0]|0;
        $6822 = HEAP32[$vinfos262>>2]|0;
        $6823 = ((($6822)) + 140|0);
        HEAP8[$6823>>0] = $6821;
        $6824 = HEAP8[$26>>0]|0;
        $6825 = HEAP32[$vinfos262>>2]|0;
        $6826 = ((($6825)) + 138|0);
        HEAP8[$6826>>0] = $6824;
        $6827 = HEAP32[$vinfos262>>2]|0;
        $6828 = ((($6827)) + 161|0);
        HEAP8[$6828>>0] = 1;
        $6829 = +HEAPF64[$532>>3];
        $6830 = HEAP32[$vinfos262>>2]|0;
        $6831 = ((($6830)) + 152|0);
        HEAPF64[$6831>>3] = $6829;
        $6832 = HEAP8[$530>>0]|0;
        $6833 = HEAP32[$vinfos262>>2]|0;
        $6834 = ((($6833)) + 163|0);
        HEAP8[$6834>>0] = $6832;
        $6835 = HEAP8[$531>>0]|0;
        $6836 = HEAP32[$vinfos262>>2]|0;
        $6837 = ((($6836)) + 164|0);
        HEAP8[$6837>>0] = $6835;
        $6838 = HEAP8[$526>>0]|0;
        $6839 = HEAP32[$vinfos262>>2]|0;
        $6840 = ((($6839)) + 162|0);
        HEAP8[$6840>>0] = $6838;
        __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree263,0);
        $6841 = HEAP32[$solutions>>2]|0;
        $6842 = ((($6841)) + 8|0);
        $6843 = HEAP32[$6842>>2]|0;
        (FUNCTION_TABLE_iiii[$6843 & 31]($solutions,$vinfos262,$vfree263)|0);
        __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree263);
        __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos262);
        break L7;
       }
      } while(0);
      $4813 = +HEAPF64[$25>>3];
      $4814 = +HEAPF64[$30>>3];
      $4815 = +HEAPF64[$31>>3];
      $4816 = +HEAPF64[$22>>3];
      $4817 = $4816 - $4815;
      $4818 = +HEAPF64[$351>>3];
      $4819 = $4818 + -1.5707963267949001;
      $4820 = (+__Z5IKabsd($4819));
      $4821 = $4820 + 3.14159265358979;
      $4822 = (+__Z6IKfmoddd($4821,6.2831853071795898));
      $4823 = $4822 + -3.14159265358979;
      $4824 = +HEAPF64[$19>>3];
      $4825 = $4814 * $4816;
      $4826 = -$4813;
      $4827 = $4815 * $4826;
      $4828 = $4827 + $4825;
      $4829 = +HEAPF64[$20>>3];
      $4830 = $4815 * $4829;
      $4831 = +HEAPF64[$23>>3];
      $4832 = $4814 * $4831;
      $4833 = -$4832;
      $4834 = $4833 - $4830;
      $4835 = +HEAPF64[$24>>3];
      $4836 = $4814 * $4835;
      $4837 = +HEAPF64[$21>>3];
      $4838 = $4815 * $4837;
      $4839 = -$4838;
      $4840 = $4839 - $4836;
      $4841 = $4814 * $4826;
      $4842 = $4841 + 1.0;
      $4843 = $4815 * $4816;
      $4844 = $4842 - $4843;
      $4845 = (+__Z5IKabsd($4823));
      $4846 = $4845 < 9.9999999999999995E-7;
      do {
       if ($4846) {
        $4847 = $4813 - $4814;
        $4848 = (+__Z5IKabsd($4847));
        $4849 = $4848 < 9.9999999999999995E-7;
        if (!($4849)) {
         break;
        }
        $4850 = (+__Z5IKabsd($4824));
        $4851 = $4850 < 9.9999999999999995E-7;
        if (!($4851)) {
         break;
        }
        $4852 = (+__Z5IKabsd($4817));
        $4853 = $4852 < 9.9999999999999995E-7;
        if (!($4853)) {
         break;
        }
        $4854 = (+__Z5IKabsd($4828));
        $4855 = $4854 < 9.9999999999999995E-7;
        if (!($4855)) {
         break;
        }
        $4856 = (+__Z5IKabsd($4834));
        $4857 = $4856 < 9.9999999999999995E-7;
        if (!($4857)) {
         break;
        }
        $4858 = (+__Z5IKabsd($4840));
        $4859 = $4858 < 9.9999999999999995E-7;
        if (!($4859)) {
         break;
        }
        $4860 = (+__Z5IKabsd($4844));
        $4861 = $4860 < 9.9999999999999995E-7;
        if (!($4861)) {
         break;
        }
        HEAP8[$354>>0] = 1;
        $4862 = +HEAPF64[$24>>3];
        $4863 = +HEAPF64[$23>>3];
        $4864 = -$4863;
        __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x485,$4862,$4864,1.9999999999999999E-6);
        $4865 = HEAP8[$355>>0]|0;
        $4866 = ($4865<<24>>24)==(0);
        if ($4866) {
         break L7;
        }
        $4867 = +HEAPF64[$22>>3];
        $4868 = (+__Z6IKsignd($4867));
        __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x486,$4868,-1);
        $4869 = HEAP8[$356>>0]|0;
        $4870 = ($4869<<24>>24)==(0);
        if ($4870) {
         break L7;
        }
        $4871 = +HEAPF64[$x485>>3];
        $4872 = $4871 + -1.5707963267949001;
        $4873 = +HEAPF64[$x486>>3];
        $4874 = $4873 * 1.5707963267949001;
        $4875 = $4872 + $4874;
        $4876 = (+__Z5IKsind($4875));
        $4877 = (+__Z5IKcosd($4875));
        $4878 = $4875 > 3.14159265358979;
        do {
         if ($4878) {
          $4879 = $4875 + -6.2831853071795898;
          $4882 = $4879;
         } else {
          $4880 = $4875 < -3.14159265358979;
          if (!($4880)) {
           $4882 = $4875;
           break;
          }
          $4881 = $4875 + 6.2831853071795898;
          $4882 = $4881;
         }
        } while(0);
        HEAP8[$357>>0] = 0;
        HEAP8[$358>>0] = -1;
        HEAPF64[$359>>3] = $4882;
        HEAPF64[$360>>3] = $4877;
        HEAPF64[$361>>3] = $4876;
        $4883 = +HEAPF64[$359>>3];
        $4884 = (+__Z5IKsind($4883));
        $4885 = (+__Z5IKcosd($4883));
        $4886 = +HEAPF64[$22>>3];
        $4887 = $4885 * $4886;
        $4888 = +HEAPF64[$23>>3];
        $4889 = $4887 + $4888;
        $4890 = +HEAPF64[$21>>3];
        $4891 = +HEAPF64[$25>>3];
        $4892 = $4884 * $4886;
        $4893 = +HEAPF64[$24>>3];
        $4894 = $4893 - $4892;
        $4895 = $4885 * $4891;
        $4896 = +HEAPF64[$20>>3];
        $4897 = $4896 - $4895;
        $4898 = +HEAPF64[$11>>3];
        $4899 = -$4898;
        $4900 = $4899 - $4884;
        $4901 = +HEAPF64[$15>>3];
        $4902 = -$4901;
        $4903 = $4902 - $4885;
        $4904 = $4886 * $4893;
        $4905 = $4884 - $4904;
        $4906 = $4890 * $4891;
        $4907 = $4906 + $4905;
        $4908 = $4886 * $4888;
        $4909 = -$4908;
        $4910 = $4909 - $4885;
        $4911 = $4891 * $4896;
        $4912 = $4910 + $4911;
        $4913 = (+__Z5IKabsd($4889));
        $4914 = $4913 > 5.0000000000000004E-6;
        if ($4914) {
         break L7;
        }
        $4915 = $4884 * $4891;
        $4916 = $4890 + $4915;
        $4917 = (+__Z5IKabsd($4916));
        $4918 = $4917 > 5.0000000000000004E-6;
        if ($4918) {
         break L7;
        }
        $4919 = (+__Z5IKabsd($4894));
        $4920 = $4919 > 5.0000000000000004E-6;
        if ($4920) {
         break L7;
        }
        $4921 = (+__Z5IKabsd($4897));
        $4922 = $4921 > 5.0000000000000004E-6;
        if ($4922) {
         break L7;
        }
        $4923 = (+__Z5IKabsd($4900));
        $4924 = $4923 > 5.0000000000000004E-6;
        if ($4924) {
         break L7;
        }
        $4925 = (+__Z5IKabsd($4903));
        $4926 = $4925 > 5.0000000000000004E-6;
        if ($4926) {
         break L7;
        }
        $4927 = (+__Z5IKabsd($4907));
        $4928 = $4927 > 5.0000000000000004E-6;
        if ($4928) {
         break L7;
        }
        $4929 = (+__Z5IKabsd($4912));
        $4930 = $4929 > 5.0000000000000004E-6;
        if ($4930) {
         break L7;
        }
        __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos174,7);
        $4931 = HEAP32[$vinfos174>>2]|0;
        $4932 = ((($4931)) + 17|0);
        HEAP8[$4932>>0] = 1;
        $4933 = +HEAPF64[$this>>3];
        $4934 = HEAP32[$vinfos174>>2]|0;
        $4935 = ((($4934)) + 8|0);
        HEAPF64[$4935>>3] = $4933;
        $4936 = HEAP8[$362>>0]|0;
        $4937 = HEAP32[$vinfos174>>2]|0;
        $4938 = ((($4937)) + 19|0);
        HEAP8[$4938>>0] = $4936;
        $4939 = HEAP8[$363>>0]|0;
        $4940 = HEAP32[$vinfos174>>2]|0;
        $4941 = ((($4940)) + 20|0);
        HEAP8[$4941>>0] = $4939;
        $4942 = HEAP8[$364>>0]|0;
        $4943 = HEAP32[$vinfos174>>2]|0;
        $4944 = ((($4943)) + 18|0);
        HEAP8[$4944>>0] = $4942;
        $4945 = HEAP32[$vinfos174>>2]|0;
        $4946 = ((($4945)) + 41|0);
        HEAP8[$4946>>0] = 1;
        $4947 = +HEAPF64[$365>>3];
        $4948 = HEAP32[$vinfos174>>2]|0;
        $4949 = ((($4948)) + 32|0);
        HEAPF64[$4949>>3] = $4947;
        $4950 = HEAP8[$366>>0]|0;
        $4951 = HEAP32[$vinfos174>>2]|0;
        $4952 = ((($4951)) + 43|0);
        HEAP8[$4952>>0] = $4950;
        $4953 = HEAP8[$367>>0]|0;
        $4954 = HEAP32[$vinfos174>>2]|0;
        $4955 = ((($4954)) + 44|0);
        HEAP8[$4955>>0] = $4953;
        $4956 = HEAP8[$368>>0]|0;
        $4957 = HEAP32[$vinfos174>>2]|0;
        $4958 = ((($4957)) + 42|0);
        HEAP8[$4958>>0] = $4956;
        $4959 = HEAP32[$vinfos174>>2]|0;
        $4960 = ((($4959)) + 65|0);
        HEAP8[$4960>>0] = 1;
        $4961 = +HEAPF64[$369>>3];
        $4962 = HEAP32[$vinfos174>>2]|0;
        $4963 = ((($4962)) + 56|0);
        HEAPF64[$4963>>3] = $4961;
        $4964 = HEAP8[$370>>0]|0;
        $4965 = HEAP32[$vinfos174>>2]|0;
        $4966 = ((($4965)) + 67|0);
        HEAP8[$4966>>0] = $4964;
        $4967 = HEAP8[$371>>0]|0;
        $4968 = HEAP32[$vinfos174>>2]|0;
        $4969 = ((($4968)) + 68|0);
        HEAP8[$4969>>0] = $4967;
        $4970 = HEAP8[$372>>0]|0;
        $4971 = HEAP32[$vinfos174>>2]|0;
        $4972 = ((($4971)) + 66|0);
        HEAP8[$4972>>0] = $4970;
        $4973 = HEAP32[$vinfos174>>2]|0;
        $4974 = ((($4973)) + 89|0);
        HEAP8[$4974>>0] = 1;
        $4975 = +HEAPF64[$373>>3];
        $4976 = HEAP32[$vinfos174>>2]|0;
        $4977 = ((($4976)) + 80|0);
        HEAPF64[$4977>>3] = $4975;
        $4978 = HEAP8[$374>>0]|0;
        $4979 = HEAP32[$vinfos174>>2]|0;
        $4980 = ((($4979)) + 91|0);
        HEAP8[$4980>>0] = $4978;
        $4981 = HEAP8[$375>>0]|0;
        $4982 = HEAP32[$vinfos174>>2]|0;
        $4983 = ((($4982)) + 92|0);
        HEAP8[$4983>>0] = $4981;
        $4984 = HEAP8[$376>>0]|0;
        $4985 = HEAP32[$vinfos174>>2]|0;
        $4986 = ((($4985)) + 90|0);
        HEAP8[$4986>>0] = $4984;
        $4987 = HEAP32[$vinfos174>>2]|0;
        $4988 = ((($4987)) + 113|0);
        HEAP8[$4988>>0] = 1;
        $4989 = +HEAPF64[$351>>3];
        $4990 = HEAP32[$vinfos174>>2]|0;
        $4991 = ((($4990)) + 104|0);
        HEAPF64[$4991>>3] = $4989;
        $4992 = HEAP8[$349>>0]|0;
        $4993 = HEAP32[$vinfos174>>2]|0;
        $4994 = ((($4993)) + 115|0);
        HEAP8[$4994>>0] = $4992;
        $4995 = HEAP8[$350>>0]|0;
        $4996 = HEAP32[$vinfos174>>2]|0;
        $4997 = ((($4996)) + 116|0);
        HEAP8[$4997>>0] = $4995;
        $4998 = HEAP8[$346>>0]|0;
        $4999 = HEAP32[$vinfos174>>2]|0;
        $5000 = ((($4999)) + 114|0);
        HEAP8[$5000>>0] = $4998;
        $5001 = HEAP32[$vinfos174>>2]|0;
        $5002 = ((($5001)) + 137|0);
        HEAP8[$5002>>0] = 1;
        $5003 = +HEAPF64[$29>>3];
        $5004 = HEAP32[$vinfos174>>2]|0;
        $5005 = ((($5004)) + 128|0);
        HEAPF64[$5005>>3] = $5003;
        $5006 = HEAP8[$27>>0]|0;
        $5007 = HEAP32[$vinfos174>>2]|0;
        $5008 = ((($5007)) + 139|0);
        HEAP8[$5008>>0] = $5006;
        $5009 = HEAP8[$28>>0]|0;
        $5010 = HEAP32[$vinfos174>>2]|0;
        $5011 = ((($5010)) + 140|0);
        HEAP8[$5011>>0] = $5009;
        $5012 = HEAP8[$26>>0]|0;
        $5013 = HEAP32[$vinfos174>>2]|0;
        $5014 = ((($5013)) + 138|0);
        HEAP8[$5014>>0] = $5012;
        $5015 = HEAP32[$vinfos174>>2]|0;
        $5016 = ((($5015)) + 161|0);
        HEAP8[$5016>>0] = 1;
        $5017 = +HEAPF64[$359>>3];
        $5018 = HEAP32[$vinfos174>>2]|0;
        $5019 = ((($5018)) + 152|0);
        HEAPF64[$5019>>3] = $5017;
        $5020 = HEAP8[$357>>0]|0;
        $5021 = HEAP32[$vinfos174>>2]|0;
        $5022 = ((($5021)) + 163|0);
        HEAP8[$5022>>0] = $5020;
        $5023 = HEAP8[$358>>0]|0;
        $5024 = HEAP32[$vinfos174>>2]|0;
        $5025 = ((($5024)) + 164|0);
        HEAP8[$5025>>0] = $5023;
        $5026 = HEAP8[$354>>0]|0;
        $5027 = HEAP32[$vinfos174>>2]|0;
        $5028 = ((($5027)) + 162|0);
        HEAP8[$5028>>0] = $5026;
        __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree175,0);
        $5029 = HEAP32[$solutions>>2]|0;
        $5030 = ((($5029)) + 8|0);
        $5031 = HEAP32[$5030>>2]|0;
        (FUNCTION_TABLE_iiii[$5031 & 31]($solutions,$vinfos174,$vfree175)|0);
        __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree175);
        __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos174);
        break L7;
       }
      } while(0);
      $5032 = +HEAPF64[$25>>3];
      $5033 = +HEAPF64[$30>>3];
      $5034 = +HEAPF64[$31>>3];
      $5035 = +HEAPF64[$351>>3];
      $5036 = $5035 + 1.5707963267949001;
      $5037 = (+__Z5IKabsd($5036));
      $5038 = $5037 + 3.14159265358979;
      $5039 = (+__Z6IKfmoddd($5038,6.2831853071795898));
      $5040 = $5039 + -3.14159265358979;
      $5041 = +HEAPF64[$19>>3];
      $5042 = +HEAPF64[$22>>3];
      $5043 = $5034 + $5042;
      $5044 = -$5042;
      $5045 = $5044 - $5034;
      $5046 = -$5032;
      $5047 = $5034 * $5046;
      $5048 = $5033 * $5044;
      $5049 = $5047 + $5048;
      $5050 = +HEAPF64[$23>>3];
      $5051 = $5033 * $5050;
      $5052 = +HEAPF64[$20>>3];
      $5053 = $5034 * $5052;
      $5054 = $5053 - $5051;
      $5055 = +HEAPF64[$21>>3];
      $5056 = $5034 * $5055;
      $5057 = +HEAPF64[$24>>3];
      $5058 = $5033 * $5057;
      $5059 = $5056 - $5058;
      $5060 = $5034 * $5042;
      $5061 = $5060 + 1.0;
      $5062 = $5033 * $5046;
      $5063 = $5062 + $5061;
      $5064 = (+__Z5IKabsd($5040));
      $5065 = $5064 < 9.9999999999999995E-7;
      do {
       if ($5065) {
        $5066 = $5032 - $5033;
        $5067 = (+__Z5IKabsd($5066));
        $5068 = $5067 < 9.9999999999999995E-7;
        if (!($5068)) {
         break;
        }
        $5069 = (+__Z5IKabsd($5041));
        $5070 = $5069 < 9.9999999999999995E-7;
        if (!($5070)) {
         break;
        }
        $5071 = (+__Z5IKabsd($5043));
        $5072 = $5071 < 9.9999999999999995E-7;
        if (!($5072)) {
         break;
        }
        $5073 = (+__Z5IKabsd($5045));
        $5074 = $5073 < 9.9999999999999995E-7;
        if (!($5074)) {
         break;
        }
        $5075 = (+__Z5IKabsd($5049));
        $5076 = $5075 < 9.9999999999999995E-7;
        if (!($5076)) {
         break;
        }
        $5077 = (+__Z5IKabsd($5054));
        $5078 = $5077 < 9.9999999999999995E-7;
        if (!($5078)) {
         break;
        }
        $5079 = (+__Z5IKabsd($5059));
        $5080 = $5079 < 9.9999999999999995E-7;
        if (!($5080)) {
         break;
        }
        $5081 = (+__Z5IKabsd($5063));
        $5082 = $5081 < 9.9999999999999995E-7;
        if (!($5082)) {
         break;
        }
        HEAP8[$377>>0] = 1;
        $5083 = +HEAPF64[$11>>3];
        $5084 = (+__Z5IKabsd($5083));
        $5085 = $5084 < 1.9999999999999999E-6;
        do {
         if ($5085) {
          $5086 = +HEAPF64[$15>>3];
          $5087 = (+__Z5IKabsd($5086));
          $5088 = $5087 < 1.9999999999999999E-6;
          if (!($5088)) {
           break;
          }
          $5089 = (+__Z5IKsqrd($5083));
          $5090 = (+__Z5IKsqrd($5086));
          $5091 = $5089 + $5090;
          $5092 = $5091 + -1.0;
          $5093 = (+__Z5IKabsd($5092));
          $5094 = !($5093 <= 1.9999999999999999E-6);
          if (!($5094)) {
           break L7;
          }
         }
        } while(0);
        $5095 = +HEAPF64[$11>>3];
        $5096 = +HEAPF64[$15>>3];
        $5097 = (+__Z7IKatan2dd($5095,$5096));
        $5098 = (+__Z5IKsind($5097));
        $5099 = (+__Z5IKcosd($5097));
        $5100 = $5097 > 3.14159265358979;
        do {
         if ($5100) {
          $5101 = $5097 + -6.2831853071795898;
          $5104 = $5101;
         } else {
          $5102 = $5097 < -3.14159265358979;
          if (!($5102)) {
           $5104 = $5097;
           break;
          }
          $5103 = $5097 + 6.2831853071795898;
          $5104 = $5103;
         }
        } while(0);
        HEAP8[$378>>0] = 0;
        HEAP8[$379>>0] = -1;
        HEAPF64[$380>>3] = $5104;
        HEAPF64[$381>>3] = $5099;
        HEAPF64[$382>>3] = $5098;
        $5105 = +HEAPF64[$380>>3];
        $5106 = (+__Z5IKsind($5105));
        $5107 = (+__Z5IKcosd($5105));
        $5108 = +HEAPF64[$25>>3];
        $5109 = +HEAPF64[$22>>3];
        $5110 = $5106 * $5109;
        $5111 = +HEAPF64[$24>>3];
        $5112 = $5110 + $5111;
        $5113 = +HEAPF64[$15>>3];
        $5114 = $5113 - $5107;
        $5115 = +HEAPF64[$23>>3];
        $5116 = $5107 * $5109;
        $5117 = $5115 - $5116;
        $5118 = +HEAPF64[$21>>3];
        $5119 = $5106 * $5108;
        $5120 = $5119 - $5118;
        $5121 = $5107 * $5108;
        $5122 = -$5121;
        $5123 = +HEAPF64[$20>>3];
        $5124 = $5122 - $5123;
        $5125 = $5108 * $5118;
        $5126 = $5109 * $5111;
        $5127 = $5126 - $5125;
        $5128 = $5106 + $5127;
        $5129 = $5108 * $5123;
        $5130 = -$5129;
        $5131 = $5130 - $5107;
        $5132 = $5109 * $5115;
        $5133 = $5132 + $5131;
        $5134 = (+__Z5IKabsd($5112));
        $5135 = $5134 > 5.0000000000000004E-6;
        if ($5135) {
         break L7;
        }
        $5136 = +HEAPF64[$11>>3];
        $5137 = $5136 - $5106;
        $5138 = (+__Z5IKabsd($5137));
        $5139 = $5138 > 5.0000000000000004E-6;
        if ($5139) {
         break L7;
        }
        $5140 = (+__Z5IKabsd($5114));
        $5141 = $5140 > 5.0000000000000004E-6;
        if ($5141) {
         break L7;
        }
        $5142 = (+__Z5IKabsd($5117));
        $5143 = $5142 > 5.0000000000000004E-6;
        if ($5143) {
         break L7;
        }
        $5144 = (+__Z5IKabsd($5120));
        $5145 = $5144 > 5.0000000000000004E-6;
        if ($5145) {
         break L7;
        }
        $5146 = (+__Z5IKabsd($5124));
        $5147 = $5146 > 5.0000000000000004E-6;
        if ($5147) {
         break L7;
        }
        $5148 = (+__Z5IKabsd($5128));
        $5149 = $5148 > 5.0000000000000004E-6;
        if ($5149) {
         break L7;
        }
        $5150 = (+__Z5IKabsd($5133));
        $5151 = $5150 > 5.0000000000000004E-6;
        if ($5151) {
         break L7;
        }
        __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos185,7);
        $5152 = HEAP32[$vinfos185>>2]|0;
        $5153 = ((($5152)) + 17|0);
        HEAP8[$5153>>0] = 1;
        $5154 = +HEAPF64[$this>>3];
        $5155 = HEAP32[$vinfos185>>2]|0;
        $5156 = ((($5155)) + 8|0);
        HEAPF64[$5156>>3] = $5154;
        $5157 = HEAP8[$383>>0]|0;
        $5158 = HEAP32[$vinfos185>>2]|0;
        $5159 = ((($5158)) + 19|0);
        HEAP8[$5159>>0] = $5157;
        $5160 = HEAP8[$384>>0]|0;
        $5161 = HEAP32[$vinfos185>>2]|0;
        $5162 = ((($5161)) + 20|0);
        HEAP8[$5162>>0] = $5160;
        $5163 = HEAP8[$385>>0]|0;
        $5164 = HEAP32[$vinfos185>>2]|0;
        $5165 = ((($5164)) + 18|0);
        HEAP8[$5165>>0] = $5163;
        $5166 = HEAP32[$vinfos185>>2]|0;
        $5167 = ((($5166)) + 41|0);
        HEAP8[$5167>>0] = 1;
        $5168 = +HEAPF64[$386>>3];
        $5169 = HEAP32[$vinfos185>>2]|0;
        $5170 = ((($5169)) + 32|0);
        HEAPF64[$5170>>3] = $5168;
        $5171 = HEAP8[$387>>0]|0;
        $5172 = HEAP32[$vinfos185>>2]|0;
        $5173 = ((($5172)) + 43|0);
        HEAP8[$5173>>0] = $5171;
        $5174 = HEAP8[$388>>0]|0;
        $5175 = HEAP32[$vinfos185>>2]|0;
        $5176 = ((($5175)) + 44|0);
        HEAP8[$5176>>0] = $5174;
        $5177 = HEAP8[$389>>0]|0;
        $5178 = HEAP32[$vinfos185>>2]|0;
        $5179 = ((($5178)) + 42|0);
        HEAP8[$5179>>0] = $5177;
        $5180 = HEAP32[$vinfos185>>2]|0;
        $5181 = ((($5180)) + 65|0);
        HEAP8[$5181>>0] = 1;
        $5182 = +HEAPF64[$390>>3];
        $5183 = HEAP32[$vinfos185>>2]|0;
        $5184 = ((($5183)) + 56|0);
        HEAPF64[$5184>>3] = $5182;
        $5185 = HEAP8[$391>>0]|0;
        $5186 = HEAP32[$vinfos185>>2]|0;
        $5187 = ((($5186)) + 67|0);
        HEAP8[$5187>>0] = $5185;
        $5188 = HEAP8[$392>>0]|0;
        $5189 = HEAP32[$vinfos185>>2]|0;
        $5190 = ((($5189)) + 68|0);
        HEAP8[$5190>>0] = $5188;
        $5191 = HEAP8[$393>>0]|0;
        $5192 = HEAP32[$vinfos185>>2]|0;
        $5193 = ((($5192)) + 66|0);
        HEAP8[$5193>>0] = $5191;
        $5194 = HEAP32[$vinfos185>>2]|0;
        $5195 = ((($5194)) + 89|0);
        HEAP8[$5195>>0] = 1;
        $5196 = +HEAPF64[$394>>3];
        $5197 = HEAP32[$vinfos185>>2]|0;
        $5198 = ((($5197)) + 80|0);
        HEAPF64[$5198>>3] = $5196;
        $5199 = HEAP8[$395>>0]|0;
        $5200 = HEAP32[$vinfos185>>2]|0;
        $5201 = ((($5200)) + 91|0);
        HEAP8[$5201>>0] = $5199;
        $5202 = HEAP8[$396>>0]|0;
        $5203 = HEAP32[$vinfos185>>2]|0;
        $5204 = ((($5203)) + 92|0);
        HEAP8[$5204>>0] = $5202;
        $5205 = HEAP8[$397>>0]|0;
        $5206 = HEAP32[$vinfos185>>2]|0;
        $5207 = ((($5206)) + 90|0);
        HEAP8[$5207>>0] = $5205;
        $5208 = HEAP32[$vinfos185>>2]|0;
        $5209 = ((($5208)) + 113|0);
        HEAP8[$5209>>0] = 1;
        $5210 = +HEAPF64[$351>>3];
        $5211 = HEAP32[$vinfos185>>2]|0;
        $5212 = ((($5211)) + 104|0);
        HEAPF64[$5212>>3] = $5210;
        $5213 = HEAP8[$349>>0]|0;
        $5214 = HEAP32[$vinfos185>>2]|0;
        $5215 = ((($5214)) + 115|0);
        HEAP8[$5215>>0] = $5213;
        $5216 = HEAP8[$350>>0]|0;
        $5217 = HEAP32[$vinfos185>>2]|0;
        $5218 = ((($5217)) + 116|0);
        HEAP8[$5218>>0] = $5216;
        $5219 = HEAP8[$346>>0]|0;
        $5220 = HEAP32[$vinfos185>>2]|0;
        $5221 = ((($5220)) + 114|0);
        HEAP8[$5221>>0] = $5219;
        $5222 = HEAP32[$vinfos185>>2]|0;
        $5223 = ((($5222)) + 137|0);
        HEAP8[$5223>>0] = 1;
        $5224 = +HEAPF64[$29>>3];
        $5225 = HEAP32[$vinfos185>>2]|0;
        $5226 = ((($5225)) + 128|0);
        HEAPF64[$5226>>3] = $5224;
        $5227 = HEAP8[$27>>0]|0;
        $5228 = HEAP32[$vinfos185>>2]|0;
        $5229 = ((($5228)) + 139|0);
        HEAP8[$5229>>0] = $5227;
        $5230 = HEAP8[$28>>0]|0;
        $5231 = HEAP32[$vinfos185>>2]|0;
        $5232 = ((($5231)) + 140|0);
        HEAP8[$5232>>0] = $5230;
        $5233 = HEAP8[$26>>0]|0;
        $5234 = HEAP32[$vinfos185>>2]|0;
        $5235 = ((($5234)) + 138|0);
        HEAP8[$5235>>0] = $5233;
        $5236 = HEAP32[$vinfos185>>2]|0;
        $5237 = ((($5236)) + 161|0);
        HEAP8[$5237>>0] = 1;
        $5238 = +HEAPF64[$380>>3];
        $5239 = HEAP32[$vinfos185>>2]|0;
        $5240 = ((($5239)) + 152|0);
        HEAPF64[$5240>>3] = $5238;
        $5241 = HEAP8[$378>>0]|0;
        $5242 = HEAP32[$vinfos185>>2]|0;
        $5243 = ((($5242)) + 163|0);
        HEAP8[$5243>>0] = $5241;
        $5244 = HEAP8[$379>>0]|0;
        $5245 = HEAP32[$vinfos185>>2]|0;
        $5246 = ((($5245)) + 164|0);
        HEAP8[$5246>>0] = $5244;
        $5247 = HEAP8[$377>>0]|0;
        $5248 = HEAP32[$vinfos185>>2]|0;
        $5249 = ((($5248)) + 162|0);
        HEAP8[$5249>>0] = $5247;
        __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree186,0);
        $5250 = HEAP32[$solutions>>2]|0;
        $5251 = ((($5250)) + 8|0);
        $5252 = HEAP32[$5251>>2]|0;
        (FUNCTION_TABLE_iiii[$5252 & 31]($solutions,$vinfos185,$vfree186)|0);
        __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree186);
        __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos185);
        break L7;
       }
      } while(0);
      $5253 = +HEAPF64[$352>>3];
      $5254 = +HEAPF64[$353>>3];
      $5255 = +HEAPF64[$22>>3];
      $5256 = $5253 * $5255;
      $5257 = +HEAPF64[$19>>3];
      $5258 = $5254 * $5257;
      $5259 = $5256 - $5258;
      $5260 = +HEAPF64[$29>>3];
      $5261 = $5260 + -1.5707963267949001;
      $5262 = (+__Z5IKabsd($5261));
      $5263 = $5262 + 3.14159265358979;
      $5264 = (+__Z6IKfmoddd($5263,6.2831853071795898));
      $5265 = $5264 + -3.14159265358979;
      $5266 = $5257 - $5253;
      $5267 = $5255 - $5254;
      $5268 = $5254 * $5255;
      $5269 = $5268 + -1.0;
      $5270 = $5253 * $5257;
      $5271 = $5269 + $5270;
      $5272 = +HEAPF64[$15>>3];
      $5273 = $5253 * $5272;
      $5274 = +HEAPF64[$21>>3];
      $5275 = $5254 * $5274;
      $5276 = $5273 + $5275;
      $5277 = +HEAPF64[$11>>3];
      $5278 = $5253 * $5277;
      $5279 = +HEAPF64[$20>>3];
      $5280 = $5254 * $5279;
      $5281 = $5278 + $5280;
      $5282 = -$5280;
      $5283 = $5282 - $5278;
      $5284 = -$5275;
      $5285 = $5284 - $5273;
      $5286 = 1.0 - $5270;
      $5287 = $5286 - $5268;
      $5288 = (+__Z5IKabsd($5265));
      $5289 = $5288 < 9.9999999999999995E-7;
      do {
       if ($5289) {
        $5290 = +HEAPF64[$25>>3];
        $5291 = (+__Z5IKabsd($5290));
        $5292 = $5291 < 9.9999999999999995E-7;
        if (!($5292)) {
         break;
        }
        $5293 = (+__Z5IKabsd($5266));
        $5294 = $5293 < 9.9999999999999995E-7;
        if (!($5294)) {
         break;
        }
        $5295 = (+__Z5IKabsd($5267));
        $5296 = $5295 < 9.9999999999999995E-7;
        if (!($5296)) {
         break;
        }
        $5297 = (+__Z5IKabsd($5259));
        $5298 = $5297 < 9.9999999999999995E-7;
        if (!($5298)) {
         break;
        }
        $5299 = (+__Z5IKabsd($5271));
        $5300 = $5299 < 9.9999999999999995E-7;
        if (!($5300)) {
         break;
        }
        $5301 = (+__Z5IKabsd($5276));
        $5302 = $5301 < 9.9999999999999995E-7;
        if (!($5302)) {
         break;
        }
        $5303 = (+__Z5IKabsd($5281));
        $5304 = $5303 < 9.9999999999999995E-7;
        if (!($5304)) {
         break;
        }
        $5305 = (+__Z5IKabsd($5283));
        $5306 = $5305 < 9.9999999999999995E-7;
        if (!($5306)) {
         break;
        }
        $5307 = (+__Z5IKabsd($5285));
        $5308 = $5307 < 9.9999999999999995E-7;
        if (!($5308)) {
         break;
        }
        $5309 = (+__Z5IKabsd($5287));
        $5310 = $5309 < 9.9999999999999995E-7;
        if (!($5310)) {
         break;
        }
        HEAP8[$398>>0] = 1;
        $5311 = +HEAPF64[$24>>3];
        $5312 = (+__Z5IKabsd($5311));
        $5313 = $5312 < 1.9999999999999999E-6;
        do {
         if ($5313) {
          $5314 = +HEAPF64[$23>>3];
          $5315 = -$5314;
          $5316 = (+__Z5IKabsd($5315));
          $5317 = $5316 < 1.9999999999999999E-6;
          if (!($5317)) {
           break;
          }
          $5318 = (+__Z5IKsqrd($5311));
          $5319 = (+__Z5IKsqrd($5315));
          $5320 = $5318 + $5319;
          $5321 = $5320 + -1.0;
          $5322 = (+__Z5IKabsd($5321));
          $5323 = !($5322 <= 1.9999999999999999E-6);
          if (!($5323)) {
           break L7;
          }
         }
        } while(0);
        $5324 = +HEAPF64[$24>>3];
        $5325 = +HEAPF64[$23>>3];
        $5326 = -$5325;
        $5327 = (+__Z7IKatan2dd($5324,$5326));
        $5328 = (+__Z5IKsind($5327));
        $5329 = (+__Z5IKcosd($5327));
        $5330 = $5327 > 3.14159265358979;
        do {
         if ($5330) {
          $5331 = $5327 + -6.2831853071795898;
          $5334 = $5331;
         } else {
          $5332 = $5327 < -3.14159265358979;
          if (!($5332)) {
           $5334 = $5327;
           break;
          }
          $5333 = $5327 + 6.2831853071795898;
          $5334 = $5333;
         }
        } while(0);
        HEAP8[$399>>0] = 0;
        HEAP8[$400>>0] = -1;
        HEAPF64[$401>>3] = $5334;
        HEAPF64[$402>>3] = $5329;
        HEAPF64[$403>>3] = $5328;
        $5335 = +HEAPF64[$401>>3];
        $5336 = (+__Z5IKcosd($5335));
        $5337 = (+__Z5IKsind($5335));
        $5338 = +HEAPF64[$22>>3];
        $5339 = +HEAPF64[$23>>3];
        $5340 = $5336 + $5339;
        $5341 = -$5337;
        $5342 = $5336 * $5338;
        $5343 = +HEAPF64[$15>>3];
        $5344 = $5342 + $5343;
        $5345 = $5337 * $5338;
        $5346 = +HEAPF64[$11>>3];
        $5347 = $5345 + $5346;
        $5348 = +HEAPF64[$19>>3];
        $5349 = -$5348;
        $5350 = $5336 * $5349;
        $5351 = +HEAPF64[$21>>3];
        $5352 = $5350 + $5351;
        $5353 = $5337 * $5349;
        $5354 = +HEAPF64[$20>>3];
        $5355 = $5353 + $5354;
        $5356 = $5338 * $5346;
        $5357 = $5341 - $5356;
        $5358 = $5348 * $5354;
        $5359 = $5357 + $5358;
        $5360 = $5338 * $5343;
        $5361 = -$5336;
        $5362 = $5361 - $5360;
        $5363 = $5348 * $5351;
        $5364 = $5362 + $5363;
        $5365 = (+__Z5IKabsd($5340));
        $5366 = $5365 > 5.0000000000000004E-6;
        if ($5366) {
         break L7;
        }
        $5367 = +HEAPF64[$24>>3];
        $5368 = $5367 - $5337;
        $5369 = (+__Z5IKabsd($5368));
        $5370 = $5369 > 5.0000000000000004E-6;
        if ($5370) {
         break L7;
        }
        $5371 = (+__Z5IKabsd($5344));
        $5372 = $5371 > 5.0000000000000004E-6;
        if ($5372) {
         break L7;
        }
        $5373 = (+__Z5IKabsd($5347));
        $5374 = $5373 > 5.0000000000000004E-6;
        if ($5374) {
         break L7;
        }
        $5375 = (+__Z5IKabsd($5352));
        $5376 = $5375 > 5.0000000000000004E-6;
        if ($5376) {
         break L7;
        }
        $5377 = (+__Z5IKabsd($5355));
        $5378 = $5377 > 5.0000000000000004E-6;
        if ($5378) {
         break L7;
        }
        $5379 = (+__Z5IKabsd($5359));
        $5380 = $5379 > 5.0000000000000004E-6;
        if ($5380) {
         break L7;
        }
        $5381 = (+__Z5IKabsd($5364));
        $5382 = $5381 > 5.0000000000000004E-6;
        if ($5382) {
         break L7;
        }
        __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos196,7);
        $5383 = HEAP32[$vinfos196>>2]|0;
        $5384 = ((($5383)) + 17|0);
        HEAP8[$5384>>0] = 1;
        $5385 = +HEAPF64[$this>>3];
        $5386 = HEAP32[$vinfos196>>2]|0;
        $5387 = ((($5386)) + 8|0);
        HEAPF64[$5387>>3] = $5385;
        $5388 = HEAP8[$404>>0]|0;
        $5389 = HEAP32[$vinfos196>>2]|0;
        $5390 = ((($5389)) + 19|0);
        HEAP8[$5390>>0] = $5388;
        $5391 = HEAP8[$405>>0]|0;
        $5392 = HEAP32[$vinfos196>>2]|0;
        $5393 = ((($5392)) + 20|0);
        HEAP8[$5393>>0] = $5391;
        $5394 = HEAP8[$406>>0]|0;
        $5395 = HEAP32[$vinfos196>>2]|0;
        $5396 = ((($5395)) + 18|0);
        HEAP8[$5396>>0] = $5394;
        $5397 = HEAP32[$vinfos196>>2]|0;
        $5398 = ((($5397)) + 41|0);
        HEAP8[$5398>>0] = 1;
        $5399 = +HEAPF64[$407>>3];
        $5400 = HEAP32[$vinfos196>>2]|0;
        $5401 = ((($5400)) + 32|0);
        HEAPF64[$5401>>3] = $5399;
        $5402 = HEAP8[$408>>0]|0;
        $5403 = HEAP32[$vinfos196>>2]|0;
        $5404 = ((($5403)) + 43|0);
        HEAP8[$5404>>0] = $5402;
        $5405 = HEAP8[$409>>0]|0;
        $5406 = HEAP32[$vinfos196>>2]|0;
        $5407 = ((($5406)) + 44|0);
        HEAP8[$5407>>0] = $5405;
        $5408 = HEAP8[$410>>0]|0;
        $5409 = HEAP32[$vinfos196>>2]|0;
        $5410 = ((($5409)) + 42|0);
        HEAP8[$5410>>0] = $5408;
        $5411 = HEAP32[$vinfos196>>2]|0;
        $5412 = ((($5411)) + 65|0);
        HEAP8[$5412>>0] = 1;
        $5413 = +HEAPF64[$411>>3];
        $5414 = HEAP32[$vinfos196>>2]|0;
        $5415 = ((($5414)) + 56|0);
        HEAPF64[$5415>>3] = $5413;
        $5416 = HEAP8[$412>>0]|0;
        $5417 = HEAP32[$vinfos196>>2]|0;
        $5418 = ((($5417)) + 67|0);
        HEAP8[$5418>>0] = $5416;
        $5419 = HEAP8[$413>>0]|0;
        $5420 = HEAP32[$vinfos196>>2]|0;
        $5421 = ((($5420)) + 68|0);
        HEAP8[$5421>>0] = $5419;
        $5422 = HEAP8[$414>>0]|0;
        $5423 = HEAP32[$vinfos196>>2]|0;
        $5424 = ((($5423)) + 66|0);
        HEAP8[$5424>>0] = $5422;
        $5425 = HEAP32[$vinfos196>>2]|0;
        $5426 = ((($5425)) + 89|0);
        HEAP8[$5426>>0] = 1;
        $5427 = +HEAPF64[$415>>3];
        $5428 = HEAP32[$vinfos196>>2]|0;
        $5429 = ((($5428)) + 80|0);
        HEAPF64[$5429>>3] = $5427;
        $5430 = HEAP8[$416>>0]|0;
        $5431 = HEAP32[$vinfos196>>2]|0;
        $5432 = ((($5431)) + 91|0);
        HEAP8[$5432>>0] = $5430;
        $5433 = HEAP8[$417>>0]|0;
        $5434 = HEAP32[$vinfos196>>2]|0;
        $5435 = ((($5434)) + 92|0);
        HEAP8[$5435>>0] = $5433;
        $5436 = HEAP8[$418>>0]|0;
        $5437 = HEAP32[$vinfos196>>2]|0;
        $5438 = ((($5437)) + 90|0);
        HEAP8[$5438>>0] = $5436;
        $5439 = HEAP32[$vinfos196>>2]|0;
        $5440 = ((($5439)) + 113|0);
        HEAP8[$5440>>0] = 1;
        $5441 = +HEAPF64[$351>>3];
        $5442 = HEAP32[$vinfos196>>2]|0;
        $5443 = ((($5442)) + 104|0);
        HEAPF64[$5443>>3] = $5441;
        $5444 = HEAP8[$349>>0]|0;
        $5445 = HEAP32[$vinfos196>>2]|0;
        $5446 = ((($5445)) + 115|0);
        HEAP8[$5446>>0] = $5444;
        $5447 = HEAP8[$350>>0]|0;
        $5448 = HEAP32[$vinfos196>>2]|0;
        $5449 = ((($5448)) + 116|0);
        HEAP8[$5449>>0] = $5447;
        $5450 = HEAP8[$346>>0]|0;
        $5451 = HEAP32[$vinfos196>>2]|0;
        $5452 = ((($5451)) + 114|0);
        HEAP8[$5452>>0] = $5450;
        $5453 = HEAP32[$vinfos196>>2]|0;
        $5454 = ((($5453)) + 137|0);
        HEAP8[$5454>>0] = 1;
        $5455 = +HEAPF64[$29>>3];
        $5456 = HEAP32[$vinfos196>>2]|0;
        $5457 = ((($5456)) + 128|0);
        HEAPF64[$5457>>3] = $5455;
        $5458 = HEAP8[$27>>0]|0;
        $5459 = HEAP32[$vinfos196>>2]|0;
        $5460 = ((($5459)) + 139|0);
        HEAP8[$5460>>0] = $5458;
        $5461 = HEAP8[$28>>0]|0;
        $5462 = HEAP32[$vinfos196>>2]|0;
        $5463 = ((($5462)) + 140|0);
        HEAP8[$5463>>0] = $5461;
        $5464 = HEAP8[$26>>0]|0;
        $5465 = HEAP32[$vinfos196>>2]|0;
        $5466 = ((($5465)) + 138|0);
        HEAP8[$5466>>0] = $5464;
        $5467 = HEAP32[$vinfos196>>2]|0;
        $5468 = ((($5467)) + 161|0);
        HEAP8[$5468>>0] = 1;
        $5469 = +HEAPF64[$401>>3];
        $5470 = HEAP32[$vinfos196>>2]|0;
        $5471 = ((($5470)) + 152|0);
        HEAPF64[$5471>>3] = $5469;
        $5472 = HEAP8[$399>>0]|0;
        $5473 = HEAP32[$vinfos196>>2]|0;
        $5474 = ((($5473)) + 163|0);
        HEAP8[$5474>>0] = $5472;
        $5475 = HEAP8[$400>>0]|0;
        $5476 = HEAP32[$vinfos196>>2]|0;
        $5477 = ((($5476)) + 164|0);
        HEAP8[$5477>>0] = $5475;
        $5478 = HEAP8[$398>>0]|0;
        $5479 = HEAP32[$vinfos196>>2]|0;
        $5480 = ((($5479)) + 162|0);
        HEAP8[$5480>>0] = $5478;
        __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree197,0);
        $5481 = HEAP32[$solutions>>2]|0;
        $5482 = ((($5481)) + 8|0);
        $5483 = HEAP32[$5482>>2]|0;
        (FUNCTION_TABLE_iiii[$5483 & 31]($solutions,$vinfos196,$vfree197)|0);
        __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree197);
        __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos196);
        break L7;
       }
      } while(0);
      $5484 = +HEAPF64[$19>>3];
      $5485 = +HEAPF64[$353>>3];
      $5486 = $5484 * $5485;
      $5487 = +HEAPF64[$352>>3];
      $5488 = +HEAPF64[$22>>3];
      $5489 = $5487 * $5488;
      $5490 = $5489 - $5486;
      $5491 = +HEAPF64[$11>>3];
      $5492 = $5487 * $5491;
      $5493 = +HEAPF64[$20>>3];
      $5494 = $5485 * $5493;
      $5495 = $5492 + $5494;
      $5496 = +HEAPF64[$15>>3];
      $5497 = $5487 * $5496;
      $5498 = +HEAPF64[$21>>3];
      $5499 = $5485 * $5498;
      $5500 = $5497 + $5499;
      $5501 = $5485 * $5488;
      $5502 = $5501 + 1.0;
      $5503 = $5484 * $5487;
      $5504 = $5503 + $5502;
      $5505 = +HEAPF64[$29>>3];
      $5506 = $5505 + 1.5707963267949001;
      $5507 = (+__Z5IKabsd($5506));
      $5508 = $5507 + 3.14159265358979;
      $5509 = (+__Z6IKfmoddd($5508,6.2831853071795898));
      $5510 = $5509 + -3.14159265358979;
      $5511 = $5484 + $5487;
      $5512 = $5485 + $5488;
      $5513 = (+__Z5IKabsd($5510));
      $5514 = $5513 < 9.9999999999999995E-7;
      do {
       if ($5514) {
        $5515 = +HEAPF64[$25>>3];
        $5516 = (+__Z5IKabsd($5515));
        $5517 = $5516 < 9.9999999999999995E-7;
        if (!($5517)) {
         break;
        }
        $5518 = (+__Z5IKabsd($5511));
        $5519 = $5518 < 9.9999999999999995E-7;
        if (!($5519)) {
         break;
        }
        $5520 = (+__Z5IKabsd($5512));
        $5521 = $5520 < 9.9999999999999995E-7;
        if (!($5521)) {
         break;
        }
        $5522 = (+__Z5IKabsd($5490));
        $5523 = $5522 < 9.9999999999999995E-7;
        if (!($5523)) {
         break;
        }
        $5524 = (+__Z5IKabsd($5504));
        $5525 = $5524 < 9.9999999999999995E-7;
        if (!($5525)) {
         break;
        }
        $5526 = (+__Z5IKabsd($5500));
        $5527 = $5526 < 9.9999999999999995E-7;
        if (!($5527)) {
         break;
        }
        $5528 = (+__Z5IKabsd($5495));
        $5529 = $5528 < 9.9999999999999995E-7;
        if (!($5529)) {
         break;
        }
        HEAP8[$419>>0] = 1;
        $5530 = +HEAPF64[$24>>3];
        $5531 = -$5530;
        $5532 = (+__Z5IKabsd($5531));
        $5533 = $5532 < 1.9999999999999999E-6;
        do {
         if ($5533) {
          $5534 = +HEAPF64[$23>>3];
          $5535 = (+__Z5IKabsd($5534));
          $5536 = $5535 < 1.9999999999999999E-6;
          if (!($5536)) {
           break;
          }
          $5537 = (+__Z5IKsqrd($5531));
          $5538 = (+__Z5IKsqrd($5534));
          $5539 = $5537 + $5538;
          $5540 = $5539 + -1.0;
          $5541 = (+__Z5IKabsd($5540));
          $5542 = !($5541 <= 1.9999999999999999E-6);
          if (!($5542)) {
           break L7;
          }
         }
        } while(0);
        $5543 = +HEAPF64[$24>>3];
        $5544 = -$5543;
        $5545 = +HEAPF64[$23>>3];
        $5546 = (+__Z7IKatan2dd($5544,$5545));
        $5547 = (+__Z5IKsind($5546));
        $5548 = (+__Z5IKcosd($5546));
        $5549 = $5546 > 3.14159265358979;
        do {
         if ($5549) {
          $5550 = $5546 + -6.2831853071795898;
          $5553 = $5550;
         } else {
          $5551 = $5546 < -3.14159265358979;
          if (!($5551)) {
           $5553 = $5546;
           break;
          }
          $5552 = $5546 + 6.2831853071795898;
          $5553 = $5552;
         }
        } while(0);
        HEAP8[$420>>0] = 0;
        HEAP8[$421>>0] = -1;
        HEAPF64[$422>>3] = $5553;
        HEAPF64[$423>>3] = $5548;
        HEAPF64[$424>>3] = $5547;
        $5554 = +HEAPF64[$422>>3];
        $5555 = (+__Z5IKcosd($5554));
        $5556 = (+__Z5IKsind($5554));
        $5557 = +HEAPF64[$19>>3];
        $5558 = +HEAPF64[$22>>3];
        $5559 = +HEAPF64[$24>>3];
        $5560 = $5556 + $5559;
        $5561 = $5555 * $5557;
        $5562 = +HEAPF64[$21>>3];
        $5563 = $5561 + $5562;
        $5564 = $5556 * $5557;
        $5565 = +HEAPF64[$20>>3];
        $5566 = $5564 + $5565;
        $5567 = +HEAPF64[$15>>3];
        $5568 = $5555 * $5558;
        $5569 = $5567 - $5568;
        $5570 = -$5556;
        $5571 = $5558 * $5570;
        $5572 = +HEAPF64[$11>>3];
        $5573 = $5571 + $5572;
        $5574 = $5557 * $5565;
        $5575 = $5570 - $5574;
        $5576 = $5558 * $5572;
        $5577 = $5575 + $5576;
        $5578 = $5557 * $5562;
        $5579 = $5558 * $5567;
        $5580 = $5579 - $5578;
        $5581 = $5580 - $5555;
        $5582 = (+__Z5IKabsd($5560));
        $5583 = $5582 > 5.0000000000000004E-6;
        if ($5583) {
         break L7;
        }
        $5584 = +HEAPF64[$23>>3];
        $5585 = $5584 - $5555;
        $5586 = (+__Z5IKabsd($5585));
        $5587 = $5586 > 5.0000000000000004E-6;
        if ($5587) {
         break L7;
        }
        $5588 = (+__Z5IKabsd($5563));
        $5589 = $5588 > 5.0000000000000004E-6;
        if ($5589) {
         break L7;
        }
        $5590 = (+__Z5IKabsd($5566));
        $5591 = $5590 > 5.0000000000000004E-6;
        if ($5591) {
         break L7;
        }
        $5592 = (+__Z5IKabsd($5569));
        $5593 = $5592 > 5.0000000000000004E-6;
        if ($5593) {
         break L7;
        }
        $5594 = (+__Z5IKabsd($5573));
        $5595 = $5594 > 5.0000000000000004E-6;
        if ($5595) {
         break L7;
        }
        $5596 = (+__Z5IKabsd($5577));
        $5597 = $5596 > 5.0000000000000004E-6;
        if ($5597) {
         break L7;
        }
        $5598 = (+__Z5IKabsd($5581));
        $5599 = $5598 > 5.0000000000000004E-6;
        if ($5599) {
         break L7;
        }
        __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos207,7);
        $5600 = HEAP32[$vinfos207>>2]|0;
        $5601 = ((($5600)) + 17|0);
        HEAP8[$5601>>0] = 1;
        $5602 = +HEAPF64[$this>>3];
        $5603 = HEAP32[$vinfos207>>2]|0;
        $5604 = ((($5603)) + 8|0);
        HEAPF64[$5604>>3] = $5602;
        $5605 = HEAP8[$425>>0]|0;
        $5606 = HEAP32[$vinfos207>>2]|0;
        $5607 = ((($5606)) + 19|0);
        HEAP8[$5607>>0] = $5605;
        $5608 = HEAP8[$426>>0]|0;
        $5609 = HEAP32[$vinfos207>>2]|0;
        $5610 = ((($5609)) + 20|0);
        HEAP8[$5610>>0] = $5608;
        $5611 = HEAP8[$427>>0]|0;
        $5612 = HEAP32[$vinfos207>>2]|0;
        $5613 = ((($5612)) + 18|0);
        HEAP8[$5613>>0] = $5611;
        $5614 = HEAP32[$vinfos207>>2]|0;
        $5615 = ((($5614)) + 41|0);
        HEAP8[$5615>>0] = 1;
        $5616 = +HEAPF64[$428>>3];
        $5617 = HEAP32[$vinfos207>>2]|0;
        $5618 = ((($5617)) + 32|0);
        HEAPF64[$5618>>3] = $5616;
        $5619 = HEAP8[$429>>0]|0;
        $5620 = HEAP32[$vinfos207>>2]|0;
        $5621 = ((($5620)) + 43|0);
        HEAP8[$5621>>0] = $5619;
        $5622 = HEAP8[$430>>0]|0;
        $5623 = HEAP32[$vinfos207>>2]|0;
        $5624 = ((($5623)) + 44|0);
        HEAP8[$5624>>0] = $5622;
        $5625 = HEAP8[$431>>0]|0;
        $5626 = HEAP32[$vinfos207>>2]|0;
        $5627 = ((($5626)) + 42|0);
        HEAP8[$5627>>0] = $5625;
        $5628 = HEAP32[$vinfos207>>2]|0;
        $5629 = ((($5628)) + 65|0);
        HEAP8[$5629>>0] = 1;
        $5630 = +HEAPF64[$432>>3];
        $5631 = HEAP32[$vinfos207>>2]|0;
        $5632 = ((($5631)) + 56|0);
        HEAPF64[$5632>>3] = $5630;
        $5633 = HEAP8[$433>>0]|0;
        $5634 = HEAP32[$vinfos207>>2]|0;
        $5635 = ((($5634)) + 67|0);
        HEAP8[$5635>>0] = $5633;
        $5636 = HEAP8[$434>>0]|0;
        $5637 = HEAP32[$vinfos207>>2]|0;
        $5638 = ((($5637)) + 68|0);
        HEAP8[$5638>>0] = $5636;
        $5639 = HEAP8[$435>>0]|0;
        $5640 = HEAP32[$vinfos207>>2]|0;
        $5641 = ((($5640)) + 66|0);
        HEAP8[$5641>>0] = $5639;
        $5642 = HEAP32[$vinfos207>>2]|0;
        $5643 = ((($5642)) + 89|0);
        HEAP8[$5643>>0] = 1;
        $5644 = +HEAPF64[$436>>3];
        $5645 = HEAP32[$vinfos207>>2]|0;
        $5646 = ((($5645)) + 80|0);
        HEAPF64[$5646>>3] = $5644;
        $5647 = HEAP8[$437>>0]|0;
        $5648 = HEAP32[$vinfos207>>2]|0;
        $5649 = ((($5648)) + 91|0);
        HEAP8[$5649>>0] = $5647;
        $5650 = HEAP8[$438>>0]|0;
        $5651 = HEAP32[$vinfos207>>2]|0;
        $5652 = ((($5651)) + 92|0);
        HEAP8[$5652>>0] = $5650;
        $5653 = HEAP8[$439>>0]|0;
        $5654 = HEAP32[$vinfos207>>2]|0;
        $5655 = ((($5654)) + 90|0);
        HEAP8[$5655>>0] = $5653;
        $5656 = HEAP32[$vinfos207>>2]|0;
        $5657 = ((($5656)) + 113|0);
        HEAP8[$5657>>0] = 1;
        $5658 = +HEAPF64[$351>>3];
        $5659 = HEAP32[$vinfos207>>2]|0;
        $5660 = ((($5659)) + 104|0);
        HEAPF64[$5660>>3] = $5658;
        $5661 = HEAP8[$349>>0]|0;
        $5662 = HEAP32[$vinfos207>>2]|0;
        $5663 = ((($5662)) + 115|0);
        HEAP8[$5663>>0] = $5661;
        $5664 = HEAP8[$350>>0]|0;
        $5665 = HEAP32[$vinfos207>>2]|0;
        $5666 = ((($5665)) + 116|0);
        HEAP8[$5666>>0] = $5664;
        $5667 = HEAP8[$346>>0]|0;
        $5668 = HEAP32[$vinfos207>>2]|0;
        $5669 = ((($5668)) + 114|0);
        HEAP8[$5669>>0] = $5667;
        $5670 = HEAP32[$vinfos207>>2]|0;
        $5671 = ((($5670)) + 137|0);
        HEAP8[$5671>>0] = 1;
        $5672 = +HEAPF64[$29>>3];
        $5673 = HEAP32[$vinfos207>>2]|0;
        $5674 = ((($5673)) + 128|0);
        HEAPF64[$5674>>3] = $5672;
        $5675 = HEAP8[$27>>0]|0;
        $5676 = HEAP32[$vinfos207>>2]|0;
        $5677 = ((($5676)) + 139|0);
        HEAP8[$5677>>0] = $5675;
        $5678 = HEAP8[$28>>0]|0;
        $5679 = HEAP32[$vinfos207>>2]|0;
        $5680 = ((($5679)) + 140|0);
        HEAP8[$5680>>0] = $5678;
        $5681 = HEAP8[$26>>0]|0;
        $5682 = HEAP32[$vinfos207>>2]|0;
        $5683 = ((($5682)) + 138|0);
        HEAP8[$5683>>0] = $5681;
        $5684 = HEAP32[$vinfos207>>2]|0;
        $5685 = ((($5684)) + 161|0);
        HEAP8[$5685>>0] = 1;
        $5686 = +HEAPF64[$422>>3];
        $5687 = HEAP32[$vinfos207>>2]|0;
        $5688 = ((($5687)) + 152|0);
        HEAPF64[$5688>>3] = $5686;
        $5689 = HEAP8[$420>>0]|0;
        $5690 = HEAP32[$vinfos207>>2]|0;
        $5691 = ((($5690)) + 163|0);
        HEAP8[$5691>>0] = $5689;
        $5692 = HEAP8[$421>>0]|0;
        $5693 = HEAP32[$vinfos207>>2]|0;
        $5694 = ((($5693)) + 164|0);
        HEAP8[$5694>>0] = $5692;
        $5695 = HEAP8[$419>>0]|0;
        $5696 = HEAP32[$vinfos207>>2]|0;
        $5697 = ((($5696)) + 162|0);
        HEAP8[$5697>>0] = $5695;
        __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree208,0);
        $5698 = HEAP32[$solutions>>2]|0;
        $5699 = ((($5698)) + 8|0);
        $5700 = HEAP32[$5699>>2]|0;
        (FUNCTION_TABLE_iiii[$5700 & 31]($solutions,$vinfos207,$vfree208)|0);
        __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree208);
        __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos207);
        break L7;
       }
      } while(0);
      $5701 = +HEAPF64[$19>>3];
      $5702 = +HEAPF64[$353>>3];
      $5703 = $5701 * $5702;
      $5704 = +HEAPF64[$352>>3];
      $5705 = +HEAPF64[$22>>3];
      $5706 = $5704 * $5705;
      $5707 = $5706 - $5703;
      $5708 = $5702 * $5705;
      $5709 = $5701 * $5704;
      $5710 = $5709 + $5708;
      $5711 = +HEAPF64[$29>>3];
      $5712 = (+__Z5IKabsd($5711));
      $5713 = $5712 + 3.14159265358979;
      $5714 = (+__Z6IKfmoddd($5713,6.2831853071795898));
      $5715 = $5714 + -3.14159265358979;
      $5716 = +HEAPF64[$23>>3];
      $5717 = +HEAPF64[$24>>3];
      $5718 = (+__Z5IKabsd($5715));
      $5719 = $5718 < 9.9999999999999995E-7;
      do {
       if ($5719) {
        $5720 = +HEAPF64[$25>>3];
        $5721 = $5720 + -1.0;
        $5722 = (+__Z5IKabsd($5721));
        $5723 = $5722 < 9.9999999999999995E-7;
        if (!($5723)) {
         break;
        }
        $5724 = (+__Z5IKabsd($5716));
        $5725 = $5724 < 9.9999999999999995E-7;
        if (!($5725)) {
         break;
        }
        $5726 = (+__Z5IKabsd($5701));
        $5727 = $5726 < 9.9999999999999995E-7;
        if (!($5727)) {
         break;
        }
        $5728 = (+__Z5IKabsd($5705));
        $5729 = $5728 < 9.9999999999999995E-7;
        if (!($5729)) {
         break;
        }
        $5730 = (+__Z5IKabsd($5717));
        $5731 = $5730 < 9.9999999999999995E-7;
        if (!($5731)) {
         break;
        }
        $5732 = (+__Z5IKabsd($5707));
        $5733 = $5732 < 9.9999999999999995E-7;
        if (!($5733)) {
         break;
        }
        $5734 = (+__Z5IKabsd($5710));
        $5735 = $5734 < 9.9999999999999995E-7;
        if (!($5735)) {
         break;
        }
        HEAP8[$440>>0] = 1;
        $5736 = +HEAPF64[$15>>3];
        $5737 = +HEAPF64[$352>>3];
        $5738 = $5736 * $5737;
        $5739 = +HEAPF64[$11>>3];
        $5740 = +HEAPF64[$353>>3];
        $5741 = $5739 * $5740;
        $5742 = -$5741;
        $5743 = $5742 - $5738;
        $5744 = (+__Z5IKabsd($5743));
        $5745 = $5744 < 1.9999999999999999E-6;
        do {
         if ($5745) {
          $5746 = $5737 * $5739;
          $5747 = $5736 * $5740;
          $5748 = $5746 - $5747;
          $5749 = (+__Z5IKabsd($5748));
          $5750 = $5749 < 1.9999999999999999E-6;
          if (!($5750)) {
           break;
          }
          $5751 = (+__Z5IKsqrd($5743));
          $5752 = (+__Z5IKsqrd($5748));
          $5753 = $5751 + $5752;
          $5754 = $5753 + -1.0;
          $5755 = (+__Z5IKabsd($5754));
          $5756 = !($5755 <= 1.9999999999999999E-6);
          if (!($5756)) {
           break L7;
          }
         }
        } while(0);
        $5757 = +HEAPF64[$352>>3];
        $5758 = $5736 * $5757;
        $5759 = +HEAPF64[$11>>3];
        $5760 = +HEAPF64[$353>>3];
        $5761 = $5759 * $5760;
        $5762 = -$5761;
        $5763 = $5762 - $5758;
        $5764 = $5757 * $5759;
        $5765 = $5736 * $5760;
        $5766 = $5764 - $5765;
        $5767 = (+__Z7IKatan2dd($5763,$5766));
        $5768 = (+__Z5IKsind($5767));
        $5769 = (+__Z5IKcosd($5767));
        $5770 = $5767 > 3.14159265358979;
        do {
         if ($5770) {
          $5771 = $5767 + -6.2831853071795898;
          $5774 = $5771;
         } else {
          $5772 = $5767 < -3.14159265358979;
          if (!($5772)) {
           $5774 = $5767;
           break;
          }
          $5773 = $5767 + 6.2831853071795898;
          $5774 = $5773;
         }
        } while(0);
        HEAP8[$441>>0] = 0;
        HEAP8[$442>>0] = -1;
        HEAPF64[$443>>3] = $5774;
        HEAPF64[$444>>3] = $5769;
        HEAPF64[$445>>3] = $5768;
        $5775 = +HEAPF64[$443>>3];
        $5776 = (+__Z5IKsind($5775));
        $5777 = (+__Z5IKcosd($5775));
        $5778 = +HEAPF64[$353>>3];
        $5779 = $5776 * $5778;
        $5780 = +HEAPF64[$352>>3];
        $5781 = $5776 * $5780;
        $5782 = $5777 * $5780;
        $5783 = +HEAPF64[$15>>3];
        $5784 = $5780 * $5783;
        $5785 = +HEAPF64[$21>>3];
        $5786 = $5778 * $5785;
        $5787 = $5784 + $5786;
        $5788 = $5776 + $5787;
        $5789 = +HEAPF64[$11>>3];
        $5790 = $5780 * $5789;
        $5791 = +HEAPF64[$20>>3];
        $5792 = $5778 * $5791;
        $5793 = $5790 + $5792;
        $5794 = $5793 - $5777;
        $5795 = $5780 * $5791;
        $5796 = $5795 - $5776;
        $5797 = $5778 * $5789;
        $5798 = $5796 - $5797;
        $5799 = $5780 * $5785;
        $5800 = $5799 - $5777;
        $5801 = $5778 * $5783;
        $5802 = $5800 - $5801;
        $5803 = $5779 - $5782;
        $5804 = $5803 + $5789;
        $5805 = $5803 + $5785;
        $5806 = $5791 - $5781;
        $5807 = $5777 * $5778;
        $5808 = $5806 - $5807;
        $5809 = (+__Z5IKabsd($5788));
        $5810 = $5809 > 5.0000000000000004E-6;
        if ($5810) {
         break L7;
        }
        $5811 = $5807 + $5781;
        $5812 = $5783 + $5811;
        $5813 = (+__Z5IKabsd($5812));
        $5814 = $5813 > 5.0000000000000004E-6;
        if ($5814) {
         break L7;
        }
        $5815 = (+__Z5IKabsd($5794));
        $5816 = $5815 > 5.0000000000000004E-6;
        if ($5816) {
         break L7;
        }
        $5817 = (+__Z5IKabsd($5798));
        $5818 = $5817 > 5.0000000000000004E-6;
        if ($5818) {
         break L7;
        }
        $5819 = (+__Z5IKabsd($5802));
        $5820 = $5819 > 5.0000000000000004E-6;
        if ($5820) {
         break L7;
        }
        $5821 = (+__Z5IKabsd($5804));
        $5822 = $5821 > 5.0000000000000004E-6;
        if ($5822) {
         break L7;
        }
        $5823 = (+__Z5IKabsd($5805));
        $5824 = $5823 > 5.0000000000000004E-6;
        if ($5824) {
         break L7;
        }
        $5825 = (+__Z5IKabsd($5808));
        $5826 = $5825 > 5.0000000000000004E-6;
        if ($5826) {
         break L7;
        }
        __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos218,7);
        $5827 = HEAP32[$vinfos218>>2]|0;
        $5828 = ((($5827)) + 17|0);
        HEAP8[$5828>>0] = 1;
        $5829 = +HEAPF64[$this>>3];
        $5830 = HEAP32[$vinfos218>>2]|0;
        $5831 = ((($5830)) + 8|0);
        HEAPF64[$5831>>3] = $5829;
        $5832 = HEAP8[$446>>0]|0;
        $5833 = HEAP32[$vinfos218>>2]|0;
        $5834 = ((($5833)) + 19|0);
        HEAP8[$5834>>0] = $5832;
        $5835 = HEAP8[$447>>0]|0;
        $5836 = HEAP32[$vinfos218>>2]|0;
        $5837 = ((($5836)) + 20|0);
        HEAP8[$5837>>0] = $5835;
        $5838 = HEAP8[$448>>0]|0;
        $5839 = HEAP32[$vinfos218>>2]|0;
        $5840 = ((($5839)) + 18|0);
        HEAP8[$5840>>0] = $5838;
        $5841 = HEAP32[$vinfos218>>2]|0;
        $5842 = ((($5841)) + 41|0);
        HEAP8[$5842>>0] = 1;
        $5843 = +HEAPF64[$449>>3];
        $5844 = HEAP32[$vinfos218>>2]|0;
        $5845 = ((($5844)) + 32|0);
        HEAPF64[$5845>>3] = $5843;
        $5846 = HEAP8[$450>>0]|0;
        $5847 = HEAP32[$vinfos218>>2]|0;
        $5848 = ((($5847)) + 43|0);
        HEAP8[$5848>>0] = $5846;
        $5849 = HEAP8[$451>>0]|0;
        $5850 = HEAP32[$vinfos218>>2]|0;
        $5851 = ((($5850)) + 44|0);
        HEAP8[$5851>>0] = $5849;
        $5852 = HEAP8[$452>>0]|0;
        $5853 = HEAP32[$vinfos218>>2]|0;
        $5854 = ((($5853)) + 42|0);
        HEAP8[$5854>>0] = $5852;
        $5855 = HEAP32[$vinfos218>>2]|0;
        $5856 = ((($5855)) + 65|0);
        HEAP8[$5856>>0] = 1;
        $5857 = +HEAPF64[$453>>3];
        $5858 = HEAP32[$vinfos218>>2]|0;
        $5859 = ((($5858)) + 56|0);
        HEAPF64[$5859>>3] = $5857;
        $5860 = HEAP8[$454>>0]|0;
        $5861 = HEAP32[$vinfos218>>2]|0;
        $5862 = ((($5861)) + 67|0);
        HEAP8[$5862>>0] = $5860;
        $5863 = HEAP8[$455>>0]|0;
        $5864 = HEAP32[$vinfos218>>2]|0;
        $5865 = ((($5864)) + 68|0);
        HEAP8[$5865>>0] = $5863;
        $5866 = HEAP8[$456>>0]|0;
        $5867 = HEAP32[$vinfos218>>2]|0;
        $5868 = ((($5867)) + 66|0);
        HEAP8[$5868>>0] = $5866;
        $5869 = HEAP32[$vinfos218>>2]|0;
        $5870 = ((($5869)) + 89|0);
        HEAP8[$5870>>0] = 1;
        $5871 = +HEAPF64[$457>>3];
        $5872 = HEAP32[$vinfos218>>2]|0;
        $5873 = ((($5872)) + 80|0);
        HEAPF64[$5873>>3] = $5871;
        $5874 = HEAP8[$458>>0]|0;
        $5875 = HEAP32[$vinfos218>>2]|0;
        $5876 = ((($5875)) + 91|0);
        HEAP8[$5876>>0] = $5874;
        $5877 = HEAP8[$459>>0]|0;
        $5878 = HEAP32[$vinfos218>>2]|0;
        $5879 = ((($5878)) + 92|0);
        HEAP8[$5879>>0] = $5877;
        $5880 = HEAP8[$460>>0]|0;
        $5881 = HEAP32[$vinfos218>>2]|0;
        $5882 = ((($5881)) + 90|0);
        HEAP8[$5882>>0] = $5880;
        $5883 = HEAP32[$vinfos218>>2]|0;
        $5884 = ((($5883)) + 113|0);
        HEAP8[$5884>>0] = 1;
        $5885 = +HEAPF64[$351>>3];
        $5886 = HEAP32[$vinfos218>>2]|0;
        $5887 = ((($5886)) + 104|0);
        HEAPF64[$5887>>3] = $5885;
        $5888 = HEAP8[$349>>0]|0;
        $5889 = HEAP32[$vinfos218>>2]|0;
        $5890 = ((($5889)) + 115|0);
        HEAP8[$5890>>0] = $5888;
        $5891 = HEAP8[$350>>0]|0;
        $5892 = HEAP32[$vinfos218>>2]|0;
        $5893 = ((($5892)) + 116|0);
        HEAP8[$5893>>0] = $5891;
        $5894 = HEAP8[$346>>0]|0;
        $5895 = HEAP32[$vinfos218>>2]|0;
        $5896 = ((($5895)) + 114|0);
        HEAP8[$5896>>0] = $5894;
        $5897 = HEAP32[$vinfos218>>2]|0;
        $5898 = ((($5897)) + 137|0);
        HEAP8[$5898>>0] = 1;
        $5899 = +HEAPF64[$29>>3];
        $5900 = HEAP32[$vinfos218>>2]|0;
        $5901 = ((($5900)) + 128|0);
        HEAPF64[$5901>>3] = $5899;
        $5902 = HEAP8[$27>>0]|0;
        $5903 = HEAP32[$vinfos218>>2]|0;
        $5904 = ((($5903)) + 139|0);
        HEAP8[$5904>>0] = $5902;
        $5905 = HEAP8[$28>>0]|0;
        $5906 = HEAP32[$vinfos218>>2]|0;
        $5907 = ((($5906)) + 140|0);
        HEAP8[$5907>>0] = $5905;
        $5908 = HEAP8[$26>>0]|0;
        $5909 = HEAP32[$vinfos218>>2]|0;
        $5910 = ((($5909)) + 138|0);
        HEAP8[$5910>>0] = $5908;
        $5911 = HEAP32[$vinfos218>>2]|0;
        $5912 = ((($5911)) + 161|0);
        HEAP8[$5912>>0] = 1;
        $5913 = +HEAPF64[$443>>3];
        $5914 = HEAP32[$vinfos218>>2]|0;
        $5915 = ((($5914)) + 152|0);
        HEAPF64[$5915>>3] = $5913;
        $5916 = HEAP8[$441>>0]|0;
        $5917 = HEAP32[$vinfos218>>2]|0;
        $5918 = ((($5917)) + 163|0);
        HEAP8[$5918>>0] = $5916;
        $5919 = HEAP8[$442>>0]|0;
        $5920 = HEAP32[$vinfos218>>2]|0;
        $5921 = ((($5920)) + 164|0);
        HEAP8[$5921>>0] = $5919;
        $5922 = HEAP8[$440>>0]|0;
        $5923 = HEAP32[$vinfos218>>2]|0;
        $5924 = ((($5923)) + 162|0);
        HEAP8[$5924>>0] = $5922;
        __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree219,0);
        $5925 = HEAP32[$solutions>>2]|0;
        $5926 = ((($5925)) + 8|0);
        $5927 = HEAP32[$5926>>2]|0;
        (FUNCTION_TABLE_iiii[$5927 & 31]($solutions,$vinfos218,$vfree219)|0);
        __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree219);
        __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos218);
        break L7;
       }
      } while(0);
      $5928 = +HEAPF64[$352>>3];
      $5929 = +HEAPF64[$19>>3];
      $5930 = $5928 * $5929;
      $5931 = +HEAPF64[$22>>3];
      $5932 = +HEAPF64[$353>>3];
      $5933 = $5931 * $5932;
      $5934 = $5929 * $5932;
      $5935 = $5928 * $5931;
      $5936 = $5935 - $5934;
      $5937 = +HEAPF64[$29>>3];
      $5938 = $5937 + -3.14159265358979;
      $5939 = (+__Z5IKabsd($5938));
      $5940 = $5939 + 3.14159265358979;
      $5941 = (+__Z6IKfmoddd($5940,6.2831853071795898));
      $5942 = $5941 + -3.14159265358979;
      $5943 = +HEAPF64[$23>>3];
      $5944 = +HEAPF64[$24>>3];
      $5945 = $5930 + $5933;
      $5946 = -$5930;
      $5947 = $5946 - $5933;
      $5948 = (+__Z5IKabsd($5942));
      $5949 = $5948 < 9.9999999999999995E-7;
      do {
       if ($5949) {
        $5950 = +HEAPF64[$25>>3];
        $5951 = $5950 + 1.0;
        $5952 = (+__Z5IKabsd($5951));
        $5953 = $5952 < 9.9999999999999995E-7;
        if (!($5953)) {
         break;
        }
        $5954 = (+__Z5IKabsd($5943));
        $5955 = $5954 < 9.9999999999999995E-7;
        if (!($5955)) {
         break;
        }
        $5956 = (+__Z5IKabsd($5929));
        $5957 = $5956 < 9.9999999999999995E-7;
        if (!($5957)) {
         break;
        }
        $5958 = (+__Z5IKabsd($5931));
        $5959 = $5958 < 9.9999999999999995E-7;
        if (!($5959)) {
         break;
        }
        $5960 = (+__Z5IKabsd($5944));
        $5961 = $5960 < 9.9999999999999995E-7;
        if (!($5961)) {
         break;
        }
        $5962 = (+__Z5IKabsd($5936));
        $5963 = $5962 < 9.9999999999999995E-7;
        if (!($5963)) {
         break;
        }
        $5964 = (+__Z5IKabsd($5945));
        $5965 = $5964 < 9.9999999999999995E-7;
        if (!($5965)) {
         break;
        }
        $5966 = (+__Z5IKabsd($5947));
        $5967 = $5966 < 9.9999999999999995E-7;
        if (!($5967)) {
         break;
        }
        HEAP8[$461>>0] = 1;
        $5968 = +HEAPF64[$11>>3];
        $5969 = +HEAPF64[$352>>3];
        $5970 = +HEAPF64[$15>>3];
        $5971 = $5969 * $5970;
        $5972 = +HEAPF64[$353>>3];
        $5973 = $5968 * $5972;
        $5974 = $5971 - $5973;
        $5975 = (+__Z5IKabsd($5974));
        $5976 = $5975 < 1.9999999999999999E-6;
        do {
         if ($5976) {
          $5977 = $5970 * $5972;
          $5978 = $5968 * $5969;
          $5979 = -$5978;
          $5980 = $5979 - $5977;
          $5981 = (+__Z5IKabsd($5980));
          $5982 = $5981 < 1.9999999999999999E-6;
          if (!($5982)) {
           break;
          }
          $5983 = (+__Z5IKsqrd($5974));
          $5984 = (+__Z5IKsqrd($5980));
          $5985 = $5983 + $5984;
          $5986 = $5985 + -1.0;
          $5987 = (+__Z5IKabsd($5986));
          $5988 = !($5987 <= 1.9999999999999999E-6);
          if (!($5988)) {
           break L7;
          }
         }
        } while(0);
        $5989 = +HEAPF64[$352>>3];
        $5990 = +HEAPF64[$15>>3];
        $5991 = $5989 * $5990;
        $5992 = +HEAPF64[$353>>3];
        $5993 = $5968 * $5992;
        $5994 = $5991 - $5993;
        $5995 = $5990 * $5992;
        $5996 = $5968 * $5989;
        $5997 = -$5996;
        $5998 = $5997 - $5995;
        $5999 = (+__Z7IKatan2dd($5994,$5998));
        $6000 = (+__Z5IKsind($5999));
        $6001 = (+__Z5IKcosd($5999));
        $6002 = $5999 > 3.14159265358979;
        do {
         if ($6002) {
          $6003 = $5999 + -6.2831853071795898;
          $6006 = $6003;
         } else {
          $6004 = $5999 < -3.14159265358979;
          if (!($6004)) {
           $6006 = $5999;
           break;
          }
          $6005 = $5999 + 6.2831853071795898;
          $6006 = $6005;
         }
        } while(0);
        HEAP8[$462>>0] = 0;
        HEAP8[$463>>0] = -1;
        HEAPF64[$464>>3] = $6006;
        HEAPF64[$465>>3] = $6001;
        HEAPF64[$466>>3] = $6000;
        $6007 = +HEAPF64[$464>>3];
        $6008 = (+__Z5IKcosd($6007));
        $6009 = (+__Z5IKsind($6007));
        $6010 = +HEAPF64[$353>>3];
        $6011 = $6008 * $6010;
        $6012 = +HEAPF64[$352>>3];
        $6013 = $6009 * $6012;
        $6014 = +HEAPF64[$11>>3];
        $6015 = $6012 * $6014;
        $6016 = +HEAPF64[$20>>3];
        $6017 = $6010 * $6016;
        $6018 = $6015 + $6017;
        $6019 = $6008 + $6018;
        $6020 = +HEAPF64[$15>>3];
        $6021 = +HEAPF64[$21>>3];
        $6022 = $6008 * $6012;
        $6023 = $6022 + $6014;
        $6024 = $6009 * $6010;
        $6025 = $6024 + $6023;
        $6026 = $6012 * $6016;
        $6027 = $6010 * $6014;
        $6028 = $6026 - $6027;
        $6029 = $6028 - $6009;
        $6030 = $6012 * $6021;
        $6031 = $6030 - $6008;
        $6032 = $6010 * $6020;
        $6033 = $6031 - $6032;
        $6034 = $6011 - $6013;
        $6035 = $6034 + $6020;
        $6036 = $6034 + $6016;
        $6037 = $6021 - $6024;
        $6038 = $6037 - $6022;
        $6039 = (+__Z5IKabsd($6019));
        $6040 = $6039 > 5.0000000000000004E-6;
        if ($6040) {
         break L7;
        }
        $6041 = $6012 * $6020;
        $6042 = $6010 * $6021;
        $6043 = $6041 + $6042;
        $6044 = $6043 - $6009;
        $6045 = (+__Z5IKabsd($6044));
        $6046 = $6045 > 5.0000000000000004E-6;
        if ($6046) {
         break L7;
        }
        $6047 = (+__Z5IKabsd($6025));
        $6048 = $6047 > 5.0000000000000004E-6;
        if ($6048) {
         break L7;
        }
        $6049 = (+__Z5IKabsd($6029));
        $6050 = $6049 > 5.0000000000000004E-6;
        if ($6050) {
         break L7;
        }
        $6051 = (+__Z5IKabsd($6033));
        $6052 = $6051 > 5.0000000000000004E-6;
        if ($6052) {
         break L7;
        }
        $6053 = (+__Z5IKabsd($6035));
        $6054 = $6053 > 5.0000000000000004E-6;
        if ($6054) {
         break L7;
        }
        $6055 = (+__Z5IKabsd($6036));
        $6056 = $6055 > 5.0000000000000004E-6;
        if ($6056) {
         break L7;
        }
        $6057 = (+__Z5IKabsd($6038));
        $6058 = $6057 > 5.0000000000000004E-6;
        if ($6058) {
         break L7;
        }
        __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos229,7);
        $6059 = HEAP32[$vinfos229>>2]|0;
        $6060 = ((($6059)) + 17|0);
        HEAP8[$6060>>0] = 1;
        $6061 = +HEAPF64[$this>>3];
        $6062 = HEAP32[$vinfos229>>2]|0;
        $6063 = ((($6062)) + 8|0);
        HEAPF64[$6063>>3] = $6061;
        $6064 = HEAP8[$467>>0]|0;
        $6065 = HEAP32[$vinfos229>>2]|0;
        $6066 = ((($6065)) + 19|0);
        HEAP8[$6066>>0] = $6064;
        $6067 = HEAP8[$468>>0]|0;
        $6068 = HEAP32[$vinfos229>>2]|0;
        $6069 = ((($6068)) + 20|0);
        HEAP8[$6069>>0] = $6067;
        $6070 = HEAP8[$469>>0]|0;
        $6071 = HEAP32[$vinfos229>>2]|0;
        $6072 = ((($6071)) + 18|0);
        HEAP8[$6072>>0] = $6070;
        $6073 = HEAP32[$vinfos229>>2]|0;
        $6074 = ((($6073)) + 41|0);
        HEAP8[$6074>>0] = 1;
        $6075 = +HEAPF64[$470>>3];
        $6076 = HEAP32[$vinfos229>>2]|0;
        $6077 = ((($6076)) + 32|0);
        HEAPF64[$6077>>3] = $6075;
        $6078 = HEAP8[$471>>0]|0;
        $6079 = HEAP32[$vinfos229>>2]|0;
        $6080 = ((($6079)) + 43|0);
        HEAP8[$6080>>0] = $6078;
        $6081 = HEAP8[$472>>0]|0;
        $6082 = HEAP32[$vinfos229>>2]|0;
        $6083 = ((($6082)) + 44|0);
        HEAP8[$6083>>0] = $6081;
        $6084 = HEAP8[$473>>0]|0;
        $6085 = HEAP32[$vinfos229>>2]|0;
        $6086 = ((($6085)) + 42|0);
        HEAP8[$6086>>0] = $6084;
        $6087 = HEAP32[$vinfos229>>2]|0;
        $6088 = ((($6087)) + 65|0);
        HEAP8[$6088>>0] = 1;
        $6089 = +HEAPF64[$474>>3];
        $6090 = HEAP32[$vinfos229>>2]|0;
        $6091 = ((($6090)) + 56|0);
        HEAPF64[$6091>>3] = $6089;
        $6092 = HEAP8[$475>>0]|0;
        $6093 = HEAP32[$vinfos229>>2]|0;
        $6094 = ((($6093)) + 67|0);
        HEAP8[$6094>>0] = $6092;
        $6095 = HEAP8[$476>>0]|0;
        $6096 = HEAP32[$vinfos229>>2]|0;
        $6097 = ((($6096)) + 68|0);
        HEAP8[$6097>>0] = $6095;
        $6098 = HEAP8[$477>>0]|0;
        $6099 = HEAP32[$vinfos229>>2]|0;
        $6100 = ((($6099)) + 66|0);
        HEAP8[$6100>>0] = $6098;
        $6101 = HEAP32[$vinfos229>>2]|0;
        $6102 = ((($6101)) + 89|0);
        HEAP8[$6102>>0] = 1;
        $6103 = +HEAPF64[$478>>3];
        $6104 = HEAP32[$vinfos229>>2]|0;
        $6105 = ((($6104)) + 80|0);
        HEAPF64[$6105>>3] = $6103;
        $6106 = HEAP8[$479>>0]|0;
        $6107 = HEAP32[$vinfos229>>2]|0;
        $6108 = ((($6107)) + 91|0);
        HEAP8[$6108>>0] = $6106;
        $6109 = HEAP8[$480>>0]|0;
        $6110 = HEAP32[$vinfos229>>2]|0;
        $6111 = ((($6110)) + 92|0);
        HEAP8[$6111>>0] = $6109;
        $6112 = HEAP8[$481>>0]|0;
        $6113 = HEAP32[$vinfos229>>2]|0;
        $6114 = ((($6113)) + 90|0);
        HEAP8[$6114>>0] = $6112;
        $6115 = HEAP32[$vinfos229>>2]|0;
        $6116 = ((($6115)) + 113|0);
        HEAP8[$6116>>0] = 1;
        $6117 = +HEAPF64[$351>>3];
        $6118 = HEAP32[$vinfos229>>2]|0;
        $6119 = ((($6118)) + 104|0);
        HEAPF64[$6119>>3] = $6117;
        $6120 = HEAP8[$349>>0]|0;
        $6121 = HEAP32[$vinfos229>>2]|0;
        $6122 = ((($6121)) + 115|0);
        HEAP8[$6122>>0] = $6120;
        $6123 = HEAP8[$350>>0]|0;
        $6124 = HEAP32[$vinfos229>>2]|0;
        $6125 = ((($6124)) + 116|0);
        HEAP8[$6125>>0] = $6123;
        $6126 = HEAP8[$346>>0]|0;
        $6127 = HEAP32[$vinfos229>>2]|0;
        $6128 = ((($6127)) + 114|0);
        HEAP8[$6128>>0] = $6126;
        $6129 = HEAP32[$vinfos229>>2]|0;
        $6130 = ((($6129)) + 137|0);
        HEAP8[$6130>>0] = 1;
        $6131 = +HEAPF64[$29>>3];
        $6132 = HEAP32[$vinfos229>>2]|0;
        $6133 = ((($6132)) + 128|0);
        HEAPF64[$6133>>3] = $6131;
        $6134 = HEAP8[$27>>0]|0;
        $6135 = HEAP32[$vinfos229>>2]|0;
        $6136 = ((($6135)) + 139|0);
        HEAP8[$6136>>0] = $6134;
        $6137 = HEAP8[$28>>0]|0;
        $6138 = HEAP32[$vinfos229>>2]|0;
        $6139 = ((($6138)) + 140|0);
        HEAP8[$6139>>0] = $6137;
        $6140 = HEAP8[$26>>0]|0;
        $6141 = HEAP32[$vinfos229>>2]|0;
        $6142 = ((($6141)) + 138|0);
        HEAP8[$6142>>0] = $6140;
        $6143 = HEAP32[$vinfos229>>2]|0;
        $6144 = ((($6143)) + 161|0);
        HEAP8[$6144>>0] = 1;
        $6145 = +HEAPF64[$464>>3];
        $6146 = HEAP32[$vinfos229>>2]|0;
        $6147 = ((($6146)) + 152|0);
        HEAPF64[$6147>>3] = $6145;
        $6148 = HEAP8[$462>>0]|0;
        $6149 = HEAP32[$vinfos229>>2]|0;
        $6150 = ((($6149)) + 163|0);
        HEAP8[$6150>>0] = $6148;
        $6151 = HEAP8[$463>>0]|0;
        $6152 = HEAP32[$vinfos229>>2]|0;
        $6153 = ((($6152)) + 164|0);
        HEAP8[$6153>>0] = $6151;
        $6154 = HEAP8[$461>>0]|0;
        $6155 = HEAP32[$vinfos229>>2]|0;
        $6156 = ((($6155)) + 162|0);
        HEAP8[$6156>>0] = $6154;
        __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree230,0);
        $6157 = HEAP32[$solutions>>2]|0;
        $6158 = ((($6157)) + 8|0);
        $6159 = HEAP32[$6158>>2]|0;
        (FUNCTION_TABLE_iiii[$6159 & 31]($solutions,$vinfos229,$vfree230)|0);
        __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree230);
        __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos229);
        break L7;
       }
      } while(0);
      $6160 = +HEAPF64[$25>>3];
      $6161 = +HEAPF64[$30>>3];
      $6162 = +HEAPF64[$31>>3];
      $6163 = +HEAPF64[$19>>3];
      $6164 = $6163 - $6162;
      $6165 = +HEAPF64[$351>>3];
      $6166 = (+__Z5IKabsd($6165));
      $6167 = $6166 + 3.14159265358979;
      $6168 = (+__Z6IKfmoddd($6167,6.2831853071795898));
      $6169 = $6168 + -3.14159265358979;
      $6170 = +HEAPF64[$22>>3];
      $6171 = -$6160;
      $6172 = $6162 * $6171;
      $6173 = $6161 * $6163;
      $6174 = $6172 + $6173;
      $6175 = +HEAPF64[$11>>3];
      $6176 = $6162 * $6175;
      $6177 = +HEAPF64[$23>>3];
      $6178 = $6161 * $6177;
      $6179 = -$6178;
      $6180 = $6179 - $6176;
      $6181 = +HEAPF64[$24>>3];
      $6182 = $6161 * $6181;
      $6183 = +HEAPF64[$15>>3];
      $6184 = $6162 * $6183;
      $6185 = -$6184;
      $6186 = $6185 - $6182;
      $6187 = $6161 * $6171;
      $6188 = $6187 + 1.0;
      $6189 = $6162 * $6163;
      $6190 = $6188 - $6189;
      $6191 = (+__Z5IKabsd($6169));
      $6192 = $6191 < 9.9999999999999995E-7;
      do {
       if ($6192) {
        $6193 = $6160 - $6161;
        $6194 = (+__Z5IKabsd($6193));
        $6195 = $6194 < 9.9999999999999995E-7;
        if (!($6195)) {
         break;
        }
        $6196 = (+__Z5IKabsd($6164));
        $6197 = $6196 < 9.9999999999999995E-7;
        if (!($6197)) {
         break;
        }
        $6198 = (+__Z5IKabsd($6170));
        $6199 = $6198 < 9.9999999999999995E-7;
        if (!($6199)) {
         break;
        }
        $6200 = (+__Z5IKabsd($6174));
        $6201 = $6200 < 9.9999999999999995E-7;
        if (!($6201)) {
         break;
        }
        $6202 = (+__Z5IKabsd($6180));
        $6203 = $6202 < 9.9999999999999995E-7;
        if (!($6203)) {
         break;
        }
        $6204 = (+__Z5IKabsd($6186));
        $6205 = $6204 < 9.9999999999999995E-7;
        if (!($6205)) {
         break;
        }
        $6206 = (+__Z5IKabsd($6190));
        $6207 = $6206 < 9.9999999999999995E-7;
        if (!($6207)) {
         break;
        }
        HEAP8[$482>>0] = 1;
        $6208 = +HEAPF64[$20>>3];
        $6209 = (+__Z5IKabsd($6208));
        $6210 = $6209 < 1.9999999999999999E-6;
        do {
         if ($6210) {
          $6211 = +HEAPF64[$21>>3];
          $6212 = (+__Z5IKabsd($6211));
          $6213 = $6212 < 1.9999999999999999E-6;
          if (!($6213)) {
           break;
          }
          $6214 = (+__Z5IKsqrd($6208));
          $6215 = (+__Z5IKsqrd($6211));
          $6216 = $6214 + $6215;
          $6217 = $6216 + -1.0;
          $6218 = (+__Z5IKabsd($6217));
          $6219 = !($6218 <= 1.9999999999999999E-6);
          if (!($6219)) {
           break L7;
          }
         }
        } while(0);
        $6220 = +HEAPF64[$20>>3];
        $6221 = +HEAPF64[$21>>3];
        $6222 = (+__Z7IKatan2dd($6220,$6221));
        $6223 = (+__Z5IKsind($6222));
        $6224 = (+__Z5IKcosd($6222));
        $6225 = $6222 > 3.14159265358979;
        do {
         if ($6225) {
          $6226 = $6222 + -6.2831853071795898;
          $6229 = $6226;
         } else {
          $6227 = $6222 < -3.14159265358979;
          if (!($6227)) {
           $6229 = $6222;
           break;
          }
          $6228 = $6222 + 6.2831853071795898;
          $6229 = $6228;
         }
        } while(0);
        HEAP8[$483>>0] = 0;
        HEAP8[$484>>0] = -1;
        HEAPF64[$485>>3] = $6229;
        HEAPF64[$486>>3] = $6224;
        HEAPF64[$487>>3] = $6223;
        $6230 = +HEAPF64[$485>>3];
        $6231 = (+__Z5IKcosd($6230));
        $6232 = (+__Z5IKsind($6230));
        $6233 = +HEAPF64[$19>>3];
        $6234 = $6231 * $6233;
        $6235 = +HEAPF64[$23>>3];
        $6236 = $6234 + $6235;
        $6237 = +HEAPF64[$21>>3];
        $6238 = $6237 - $6231;
        $6239 = +HEAPF64[$25>>3];
        $6240 = $6232 * $6239;
        $6241 = +HEAPF64[$15>>3];
        $6242 = $6240 + $6241;
        $6243 = $6232 * $6233;
        $6244 = +HEAPF64[$24>>3];
        $6245 = $6244 - $6243;
        $6246 = $6231 * $6239;
        $6247 = +HEAPF64[$11>>3];
        $6248 = $6247 - $6246;
        $6249 = $6239 * $6241;
        $6250 = $6233 * $6244;
        $6251 = $6249 - $6250;
        $6252 = $6232 + $6251;
        $6253 = $6239 * $6247;
        $6254 = $6233 * $6235;
        $6255 = $6253 - $6254;
        $6256 = $6255 - $6231;
        $6257 = (+__Z5IKabsd($6236));
        $6258 = $6257 > 5.0000000000000004E-6;
        if ($6258) {
         break L7;
        }
        $6259 = +HEAPF64[$20>>3];
        $6260 = $6259 - $6232;
        $6261 = (+__Z5IKabsd($6260));
        $6262 = $6261 > 5.0000000000000004E-6;
        if ($6262) {
         break L7;
        }
        $6263 = (+__Z5IKabsd($6238));
        $6264 = $6263 > 5.0000000000000004E-6;
        if ($6264) {
         break L7;
        }
        $6265 = (+__Z5IKabsd($6242));
        $6266 = $6265 > 5.0000000000000004E-6;
        if ($6266) {
         break L7;
        }
        $6267 = (+__Z5IKabsd($6245));
        $6268 = $6267 > 5.0000000000000004E-6;
        if ($6268) {
         break L7;
        }
        $6269 = (+__Z5IKabsd($6248));
        $6270 = $6269 > 5.0000000000000004E-6;
        if ($6270) {
         break L7;
        }
        $6271 = (+__Z5IKabsd($6252));
        $6272 = $6271 > 5.0000000000000004E-6;
        if ($6272) {
         break L7;
        }
        $6273 = (+__Z5IKabsd($6256));
        $6274 = $6273 > 5.0000000000000004E-6;
        if ($6274) {
         break L7;
        }
        __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos240,7);
        $6275 = HEAP32[$vinfos240>>2]|0;
        $6276 = ((($6275)) + 17|0);
        HEAP8[$6276>>0] = 1;
        $6277 = +HEAPF64[$this>>3];
        $6278 = HEAP32[$vinfos240>>2]|0;
        $6279 = ((($6278)) + 8|0);
        HEAPF64[$6279>>3] = $6277;
        $6280 = HEAP8[$488>>0]|0;
        $6281 = HEAP32[$vinfos240>>2]|0;
        $6282 = ((($6281)) + 19|0);
        HEAP8[$6282>>0] = $6280;
        $6283 = HEAP8[$489>>0]|0;
        $6284 = HEAP32[$vinfos240>>2]|0;
        $6285 = ((($6284)) + 20|0);
        HEAP8[$6285>>0] = $6283;
        $6286 = HEAP8[$490>>0]|0;
        $6287 = HEAP32[$vinfos240>>2]|0;
        $6288 = ((($6287)) + 18|0);
        HEAP8[$6288>>0] = $6286;
        $6289 = HEAP32[$vinfos240>>2]|0;
        $6290 = ((($6289)) + 41|0);
        HEAP8[$6290>>0] = 1;
        $6291 = +HEAPF64[$491>>3];
        $6292 = HEAP32[$vinfos240>>2]|0;
        $6293 = ((($6292)) + 32|0);
        HEAPF64[$6293>>3] = $6291;
        $6294 = HEAP8[$492>>0]|0;
        $6295 = HEAP32[$vinfos240>>2]|0;
        $6296 = ((($6295)) + 43|0);
        HEAP8[$6296>>0] = $6294;
        $6297 = HEAP8[$493>>0]|0;
        $6298 = HEAP32[$vinfos240>>2]|0;
        $6299 = ((($6298)) + 44|0);
        HEAP8[$6299>>0] = $6297;
        $6300 = HEAP8[$494>>0]|0;
        $6301 = HEAP32[$vinfos240>>2]|0;
        $6302 = ((($6301)) + 42|0);
        HEAP8[$6302>>0] = $6300;
        $6303 = HEAP32[$vinfos240>>2]|0;
        $6304 = ((($6303)) + 65|0);
        HEAP8[$6304>>0] = 1;
        $6305 = +HEAPF64[$495>>3];
        $6306 = HEAP32[$vinfos240>>2]|0;
        $6307 = ((($6306)) + 56|0);
        HEAPF64[$6307>>3] = $6305;
        $6308 = HEAP8[$496>>0]|0;
        $6309 = HEAP32[$vinfos240>>2]|0;
        $6310 = ((($6309)) + 67|0);
        HEAP8[$6310>>0] = $6308;
        $6311 = HEAP8[$497>>0]|0;
        $6312 = HEAP32[$vinfos240>>2]|0;
        $6313 = ((($6312)) + 68|0);
        HEAP8[$6313>>0] = $6311;
        $6314 = HEAP8[$498>>0]|0;
        $6315 = HEAP32[$vinfos240>>2]|0;
        $6316 = ((($6315)) + 66|0);
        HEAP8[$6316>>0] = $6314;
        $6317 = HEAP32[$vinfos240>>2]|0;
        $6318 = ((($6317)) + 89|0);
        HEAP8[$6318>>0] = 1;
        $6319 = +HEAPF64[$499>>3];
        $6320 = HEAP32[$vinfos240>>2]|0;
        $6321 = ((($6320)) + 80|0);
        HEAPF64[$6321>>3] = $6319;
        $6322 = HEAP8[$500>>0]|0;
        $6323 = HEAP32[$vinfos240>>2]|0;
        $6324 = ((($6323)) + 91|0);
        HEAP8[$6324>>0] = $6322;
        $6325 = HEAP8[$501>>0]|0;
        $6326 = HEAP32[$vinfos240>>2]|0;
        $6327 = ((($6326)) + 92|0);
        HEAP8[$6327>>0] = $6325;
        $6328 = HEAP8[$502>>0]|0;
        $6329 = HEAP32[$vinfos240>>2]|0;
        $6330 = ((($6329)) + 90|0);
        HEAP8[$6330>>0] = $6328;
        $6331 = HEAP32[$vinfos240>>2]|0;
        $6332 = ((($6331)) + 113|0);
        HEAP8[$6332>>0] = 1;
        $6333 = +HEAPF64[$351>>3];
        $6334 = HEAP32[$vinfos240>>2]|0;
        $6335 = ((($6334)) + 104|0);
        HEAPF64[$6335>>3] = $6333;
        $6336 = HEAP8[$349>>0]|0;
        $6337 = HEAP32[$vinfos240>>2]|0;
        $6338 = ((($6337)) + 115|0);
        HEAP8[$6338>>0] = $6336;
        $6339 = HEAP8[$350>>0]|0;
        $6340 = HEAP32[$vinfos240>>2]|0;
        $6341 = ((($6340)) + 116|0);
        HEAP8[$6341>>0] = $6339;
        $6342 = HEAP8[$346>>0]|0;
        $6343 = HEAP32[$vinfos240>>2]|0;
        $6344 = ((($6343)) + 114|0);
        HEAP8[$6344>>0] = $6342;
        $6345 = HEAP32[$vinfos240>>2]|0;
        $6346 = ((($6345)) + 137|0);
        HEAP8[$6346>>0] = 1;
        $6347 = +HEAPF64[$29>>3];
        $6348 = HEAP32[$vinfos240>>2]|0;
        $6349 = ((($6348)) + 128|0);
        HEAPF64[$6349>>3] = $6347;
        $6350 = HEAP8[$27>>0]|0;
        $6351 = HEAP32[$vinfos240>>2]|0;
        $6352 = ((($6351)) + 139|0);
        HEAP8[$6352>>0] = $6350;
        $6353 = HEAP8[$28>>0]|0;
        $6354 = HEAP32[$vinfos240>>2]|0;
        $6355 = ((($6354)) + 140|0);
        HEAP8[$6355>>0] = $6353;
        $6356 = HEAP8[$26>>0]|0;
        $6357 = HEAP32[$vinfos240>>2]|0;
        $6358 = ((($6357)) + 138|0);
        HEAP8[$6358>>0] = $6356;
        $6359 = HEAP32[$vinfos240>>2]|0;
        $6360 = ((($6359)) + 161|0);
        HEAP8[$6360>>0] = 1;
        $6361 = +HEAPF64[$485>>3];
        $6362 = HEAP32[$vinfos240>>2]|0;
        $6363 = ((($6362)) + 152|0);
        HEAPF64[$6363>>3] = $6361;
        $6364 = HEAP8[$483>>0]|0;
        $6365 = HEAP32[$vinfos240>>2]|0;
        $6366 = ((($6365)) + 163|0);
        HEAP8[$6366>>0] = $6364;
        $6367 = HEAP8[$484>>0]|0;
        $6368 = HEAP32[$vinfos240>>2]|0;
        $6369 = ((($6368)) + 164|0);
        HEAP8[$6369>>0] = $6367;
        $6370 = HEAP8[$482>>0]|0;
        $6371 = HEAP32[$vinfos240>>2]|0;
        $6372 = ((($6371)) + 162|0);
        HEAP8[$6372>>0] = $6370;
        __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree241,0);
        $6373 = HEAP32[$solutions>>2]|0;
        $6374 = ((($6373)) + 8|0);
        $6375 = HEAP32[$6374>>2]|0;
        (FUNCTION_TABLE_iiii[$6375 & 31]($solutions,$vinfos240,$vfree241)|0);
        __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree241);
        __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos240);
        break L7;
       }
      } while(0);
      $6376 = +HEAPF64[$25>>3];
      $6377 = +HEAPF64[$30>>3];
      $6378 = +HEAPF64[$31>>3];
      $6379 = +HEAPF64[$351>>3];
      $6380 = $6379 + -3.14159265358979;
      $6381 = (+__Z5IKabsd($6380));
      $6382 = $6381 + 3.14159265358979;
      $6383 = (+__Z6IKfmoddd($6382,6.2831853071795898));
      $6384 = $6383 + -3.14159265358979;
      $6385 = +HEAPF64[$19>>3];
      $6386 = $6378 + $6385;
      $6387 = +HEAPF64[$22>>3];
      $6388 = -$6385;
      $6389 = $6388 - $6378;
      $6390 = -$6376;
      $6391 = $6378 * $6390;
      $6392 = $6377 * $6388;
      $6393 = $6391 + $6392;
      $6394 = +HEAPF64[$23>>3];
      $6395 = $6377 * $6394;
      $6396 = +HEAPF64[$11>>3];
      $6397 = $6378 * $6396;
      $6398 = $6397 - $6395;
      $6399 = +HEAPF64[$15>>3];
      $6400 = $6378 * $6399;
      $6401 = +HEAPF64[$24>>3];
      $6402 = $6377 * $6401;
      $6403 = $6400 - $6402;
      $6404 = $6378 * $6385;
      $6405 = $6404 + 1.0;
      $6406 = $6377 * $6390;
      $6407 = $6406 + $6405;
      $6408 = (+__Z5IKabsd($6384));
      $6409 = $6408 < 9.9999999999999995E-7;
      if (!($6409)) {
       break;
      }
      $6410 = $6376 - $6377;
      $6411 = (+__Z5IKabsd($6410));
      $6412 = $6411 < 9.9999999999999995E-7;
      if (!($6412)) {
       break;
      }
      $6413 = (+__Z5IKabsd($6386));
      $6414 = $6413 < 9.9999999999999995E-7;
      if (!($6414)) {
       break;
      }
      $6415 = (+__Z5IKabsd($6387));
      $6416 = $6415 < 9.9999999999999995E-7;
      if (!($6416)) {
       break;
      }
      $6417 = (+__Z5IKabsd($6389));
      $6418 = $6417 < 9.9999999999999995E-7;
      if (!($6418)) {
       break;
      }
      $6419 = (+__Z5IKabsd($6393));
      $6420 = $6419 < 9.9999999999999995E-7;
      if (!($6420)) {
       break;
      }
      $6421 = (+__Z5IKabsd($6398));
      $6422 = $6421 < 9.9999999999999995E-7;
      if (!($6422)) {
       break;
      }
      $6423 = (+__Z5IKabsd($6403));
      $6424 = $6423 < 9.9999999999999995E-7;
      if (!($6424)) {
       break;
      }
      $6425 = (+__Z5IKabsd($6407));
      $6426 = $6425 < 9.9999999999999995E-7;
      if (!($6426)) {
       break;
      }
      HEAP8[$503>>0] = 1;
      $6427 = +HEAPF64[$24>>3];
      $6428 = -$6427;
      $6429 = +HEAPF64[$23>>3];
      __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x548,$6428,$6429,1.9999999999999999E-6);
      $6430 = HEAP8[$504>>0]|0;
      $6431 = ($6430<<24>>24)==(0);
      if ($6431) {
       break;
      }
      $6432 = +HEAPF64[$19>>3];
      $6433 = (+__Z6IKsignd($6432));
      __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x549,$6433,-1);
      $6434 = HEAP8[$505>>0]|0;
      $6435 = ($6434<<24>>24)==(0);
      if ($6435) {
       break;
      }
      $6436 = +HEAPF64[$x548>>3];
      $6437 = $6436 + -1.5707963267949001;
      $6438 = +HEAPF64[$x549>>3];
      $6439 = $6438 * 1.5707963267949001;
      $6440 = $6437 + $6439;
      $6441 = (+__Z5IKsind($6440));
      $6442 = (+__Z5IKcosd($6440));
      $6443 = $6440 > 3.14159265358979;
      do {
       if ($6443) {
        $6444 = $6440 + -6.2831853071795898;
        $6447 = $6444;
       } else {
        $6445 = $6440 < -3.14159265358979;
        if (!($6445)) {
         $6447 = $6440;
         break;
        }
        $6446 = $6440 + 6.2831853071795898;
        $6447 = $6446;
       }
      } while(0);
      HEAP8[$506>>0] = 0;
      HEAP8[$507>>0] = -1;
      HEAPF64[$508>>3] = $6447;
      HEAPF64[$509>>3] = $6442;
      HEAPF64[$510>>3] = $6441;
      $6448 = +HEAPF64[$508>>3];
      $6449 = (+__Z5IKsind($6448));
      $6450 = (+__Z5IKcosd($6448));
      $6451 = +HEAPF64[$15>>3];
      $6452 = +HEAPF64[$11>>3];
      $6453 = +HEAPF64[$19>>3];
      $6454 = $6449 * $6453;
      $6455 = +HEAPF64[$24>>3];
      $6456 = $6454 + $6455;
      $6457 = +HEAPF64[$23>>3];
      $6458 = +HEAPF64[$20>>3];
      $6459 = -$6458;
      $6460 = $6459 - $6449;
      $6461 = +HEAPF64[$21>>3];
      $6462 = -$6461;
      $6463 = $6462 - $6450;
      $6464 = +HEAPF64[$25>>3];
      $6465 = $6449 * $6464;
      $6466 = $6465 - $6451;
      $6467 = -$6464;
      $6468 = $6450 * $6467;
      $6469 = $6468 - $6452;
      $6470 = $6451 * $6467;
      $6471 = $6449 + $6470;
      $6472 = $6453 * $6455;
      $6473 = $6472 + $6471;
      $6474 = $6452 * $6467;
      $6475 = $6474 - $6450;
      $6476 = $6453 * $6457;
      $6477 = $6476 + $6475;
      $6478 = (+__Z5IKabsd($6456));
      $6479 = $6478 > 5.0000000000000004E-6;
      if ($6479) {
       break;
      }
      $6480 = $6450 * $6453;
      $6481 = $6457 - $6480;
      $6482 = (+__Z5IKabsd($6481));
      $6483 = $6482 > 5.0000000000000004E-6;
      if ($6483) {
       break;
      }
      $6484 = (+__Z5IKabsd($6460));
      $6485 = $6484 > 5.0000000000000004E-6;
      if ($6485) {
       break;
      }
      $6486 = (+__Z5IKabsd($6463));
      $6487 = $6486 > 5.0000000000000004E-6;
      if ($6487) {
       break;
      }
      $6488 = (+__Z5IKabsd($6466));
      $6489 = $6488 > 5.0000000000000004E-6;
      if ($6489) {
       break;
      }
      $6490 = (+__Z5IKabsd($6469));
      $6491 = $6490 > 5.0000000000000004E-6;
      if ($6491) {
       break;
      }
      $6492 = (+__Z5IKabsd($6473));
      $6493 = $6492 > 5.0000000000000004E-6;
      if ($6493) {
       break;
      }
      $6494 = (+__Z5IKabsd($6477));
      $6495 = $6494 > 5.0000000000000004E-6;
      if ($6495) {
       break;
      }
      __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos251,7);
      $6496 = HEAP32[$vinfos251>>2]|0;
      $6497 = ((($6496)) + 17|0);
      HEAP8[$6497>>0] = 1;
      $6498 = +HEAPF64[$this>>3];
      $6499 = HEAP32[$vinfos251>>2]|0;
      $6500 = ((($6499)) + 8|0);
      HEAPF64[$6500>>3] = $6498;
      $6501 = HEAP8[$511>>0]|0;
      $6502 = HEAP32[$vinfos251>>2]|0;
      $6503 = ((($6502)) + 19|0);
      HEAP8[$6503>>0] = $6501;
      $6504 = HEAP8[$512>>0]|0;
      $6505 = HEAP32[$vinfos251>>2]|0;
      $6506 = ((($6505)) + 20|0);
      HEAP8[$6506>>0] = $6504;
      $6507 = HEAP8[$513>>0]|0;
      $6508 = HEAP32[$vinfos251>>2]|0;
      $6509 = ((($6508)) + 18|0);
      HEAP8[$6509>>0] = $6507;
      $6510 = HEAP32[$vinfos251>>2]|0;
      $6511 = ((($6510)) + 41|0);
      HEAP8[$6511>>0] = 1;
      $6512 = +HEAPF64[$514>>3];
      $6513 = HEAP32[$vinfos251>>2]|0;
      $6514 = ((($6513)) + 32|0);
      HEAPF64[$6514>>3] = $6512;
      $6515 = HEAP8[$515>>0]|0;
      $6516 = HEAP32[$vinfos251>>2]|0;
      $6517 = ((($6516)) + 43|0);
      HEAP8[$6517>>0] = $6515;
      $6518 = HEAP8[$516>>0]|0;
      $6519 = HEAP32[$vinfos251>>2]|0;
      $6520 = ((($6519)) + 44|0);
      HEAP8[$6520>>0] = $6518;
      $6521 = HEAP8[$517>>0]|0;
      $6522 = HEAP32[$vinfos251>>2]|0;
      $6523 = ((($6522)) + 42|0);
      HEAP8[$6523>>0] = $6521;
      $6524 = HEAP32[$vinfos251>>2]|0;
      $6525 = ((($6524)) + 65|0);
      HEAP8[$6525>>0] = 1;
      $6526 = +HEAPF64[$518>>3];
      $6527 = HEAP32[$vinfos251>>2]|0;
      $6528 = ((($6527)) + 56|0);
      HEAPF64[$6528>>3] = $6526;
      $6529 = HEAP8[$519>>0]|0;
      $6530 = HEAP32[$vinfos251>>2]|0;
      $6531 = ((($6530)) + 67|0);
      HEAP8[$6531>>0] = $6529;
      $6532 = HEAP8[$520>>0]|0;
      $6533 = HEAP32[$vinfos251>>2]|0;
      $6534 = ((($6533)) + 68|0);
      HEAP8[$6534>>0] = $6532;
      $6535 = HEAP8[$521>>0]|0;
      $6536 = HEAP32[$vinfos251>>2]|0;
      $6537 = ((($6536)) + 66|0);
      HEAP8[$6537>>0] = $6535;
      $6538 = HEAP32[$vinfos251>>2]|0;
      $6539 = ((($6538)) + 89|0);
      HEAP8[$6539>>0] = 1;
      $6540 = +HEAPF64[$522>>3];
      $6541 = HEAP32[$vinfos251>>2]|0;
      $6542 = ((($6541)) + 80|0);
      HEAPF64[$6542>>3] = $6540;
      $6543 = HEAP8[$523>>0]|0;
      $6544 = HEAP32[$vinfos251>>2]|0;
      $6545 = ((($6544)) + 91|0);
      HEAP8[$6545>>0] = $6543;
      $6546 = HEAP8[$524>>0]|0;
      $6547 = HEAP32[$vinfos251>>2]|0;
      $6548 = ((($6547)) + 92|0);
      HEAP8[$6548>>0] = $6546;
      $6549 = HEAP8[$525>>0]|0;
      $6550 = HEAP32[$vinfos251>>2]|0;
      $6551 = ((($6550)) + 90|0);
      HEAP8[$6551>>0] = $6549;
      $6552 = HEAP32[$vinfos251>>2]|0;
      $6553 = ((($6552)) + 113|0);
      HEAP8[$6553>>0] = 1;
      $6554 = +HEAPF64[$351>>3];
      $6555 = HEAP32[$vinfos251>>2]|0;
      $6556 = ((($6555)) + 104|0);
      HEAPF64[$6556>>3] = $6554;
      $6557 = HEAP8[$349>>0]|0;
      $6558 = HEAP32[$vinfos251>>2]|0;
      $6559 = ((($6558)) + 115|0);
      HEAP8[$6559>>0] = $6557;
      $6560 = HEAP8[$350>>0]|0;
      $6561 = HEAP32[$vinfos251>>2]|0;
      $6562 = ((($6561)) + 116|0);
      HEAP8[$6562>>0] = $6560;
      $6563 = HEAP8[$346>>0]|0;
      $6564 = HEAP32[$vinfos251>>2]|0;
      $6565 = ((($6564)) + 114|0);
      HEAP8[$6565>>0] = $6563;
      $6566 = HEAP32[$vinfos251>>2]|0;
      $6567 = ((($6566)) + 137|0);
      HEAP8[$6567>>0] = 1;
      $6568 = +HEAPF64[$29>>3];
      $6569 = HEAP32[$vinfos251>>2]|0;
      $6570 = ((($6569)) + 128|0);
      HEAPF64[$6570>>3] = $6568;
      $6571 = HEAP8[$27>>0]|0;
      $6572 = HEAP32[$vinfos251>>2]|0;
      $6573 = ((($6572)) + 139|0);
      HEAP8[$6573>>0] = $6571;
      $6574 = HEAP8[$28>>0]|0;
      $6575 = HEAP32[$vinfos251>>2]|0;
      $6576 = ((($6575)) + 140|0);
      HEAP8[$6576>>0] = $6574;
      $6577 = HEAP8[$26>>0]|0;
      $6578 = HEAP32[$vinfos251>>2]|0;
      $6579 = ((($6578)) + 138|0);
      HEAP8[$6579>>0] = $6577;
      $6580 = HEAP32[$vinfos251>>2]|0;
      $6581 = ((($6580)) + 161|0);
      HEAP8[$6581>>0] = 1;
      $6582 = +HEAPF64[$508>>3];
      $6583 = HEAP32[$vinfos251>>2]|0;
      $6584 = ((($6583)) + 152|0);
      HEAPF64[$6584>>3] = $6582;
      $6585 = HEAP8[$506>>0]|0;
      $6586 = HEAP32[$vinfos251>>2]|0;
      $6587 = ((($6586)) + 163|0);
      HEAP8[$6587>>0] = $6585;
      $6588 = HEAP8[$507>>0]|0;
      $6589 = HEAP32[$vinfos251>>2]|0;
      $6590 = ((($6589)) + 164|0);
      HEAP8[$6590>>0] = $6588;
      $6591 = HEAP8[$503>>0]|0;
      $6592 = HEAP32[$vinfos251>>2]|0;
      $6593 = ((($6592)) + 162|0);
      HEAP8[$6593>>0] = $6591;
      __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree252,0);
      $6594 = HEAP32[$solutions>>2]|0;
      $6595 = ((($6594)) + 8|0);
      $6596 = HEAP32[$6595>>2]|0;
      (FUNCTION_TABLE_iiii[$6596 & 31]($solutions,$vinfos251,$vfree252)|0);
      __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree252);
      __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos251);
      break;
     }
    }
    $865 = +HEAPF64[$0>>3];
    $866 = +HEAPF64[$1>>3];
    $867 = +HEAPF64[$2>>3];
    $868 = $866 * $867;
    $869 = +HEAPF64[$4>>3];
    $870 = +HEAPF64[$5>>3];
    $871 = $867 * $869;
    $872 = +HEAPF64[$7>>3];
    $873 = $867 * $872;
    $874 = $611 * $872;
    $875 = $611 * $866;
    $876 = $865 * $873;
    $877 = $875 + $876;
    $878 = $868 * $870;
    $879 = $618 * $872;
    $880 = $879 - $878;
    $881 = $870 * $873;
    $882 = $618 * $866;
    $883 = $882 + $881;
    $884 = $865 * $868;
    $885 = $874 - $884;
    $886 = +HEAPF64[$9>>3];
    $887 = $886 * $885;
    $888 = +HEAPF64[$10>>3];
    $889 = $888 * $877;
    $890 = $887 + $889;
    $891 = +HEAPF64[$8>>3];
    $892 = $626 * $891;
    $893 = $892 + $890;
    HEAPF64[$11>>3] = $893;
    $894 = +HEAPF64[$13>>3];
    $895 = $626 * $894;
    $896 = +HEAPF64[$14>>3];
    $897 = $877 * $896;
    $898 = $895 + $897;
    $899 = +HEAPF64[$12>>3];
    $900 = $885 * $899;
    $901 = $898 + $900;
    HEAPF64[$15>>3] = $901;
    $902 = +HEAPF64[$17>>3];
    $903 = $877 * $902;
    $904 = +HEAPF64[$18>>3];
    $905 = $885 * $904;
    $906 = $903 + $905;
    $907 = +HEAPF64[$16>>3];
    $908 = $626 * $907;
    $909 = $906 + $908;
    HEAPF64[$19>>3] = $909;
    $910 = +HEAPF64[$10>>3];
    $911 = $615 * $910;
    $912 = +HEAPF64[$8>>3];
    $913 = $871 * $912;
    $914 = $911 + $913;
    $915 = +HEAPF64[$9>>3];
    $916 = $630 * $915;
    $917 = $914 + $916;
    HEAPF64[$20>>3] = $917;
    $918 = +HEAPF64[$14>>3];
    $919 = $615 * $918;
    $920 = +HEAPF64[$13>>3];
    $921 = $871 * $920;
    $922 = $919 + $921;
    $923 = +HEAPF64[$12>>3];
    $924 = $630 * $923;
    $925 = $922 + $924;
    HEAPF64[$21>>3] = $925;
    $926 = +HEAPF64[$16>>3];
    $927 = $871 * $926;
    $928 = +HEAPF64[$18>>3];
    $929 = $630 * $928;
    $930 = $927 + $929;
    $931 = +HEAPF64[$17>>3];
    $932 = $615 * $931;
    $933 = $930 + $932;
    HEAPF64[$22>>3] = $933;
    $934 = +HEAPF64[$8>>3];
    $935 = $621 * $934;
    $936 = +HEAPF64[$9>>3];
    $937 = $880 * $936;
    $938 = $935 + $937;
    $939 = +HEAPF64[$10>>3];
    $940 = $883 * $939;
    $941 = $938 + $940;
    HEAPF64[$23>>3] = $941;
    $942 = +HEAPF64[$14>>3];
    $943 = $883 * $942;
    $944 = +HEAPF64[$13>>3];
    $945 = $621 * $944;
    $946 = $943 + $945;
    $947 = +HEAPF64[$12>>3];
    $948 = $880 * $947;
    $949 = $946 + $948;
    HEAPF64[$24>>3] = $949;
    $950 = +HEAPF64[$16>>3];
    $951 = $621 * $950;
    $952 = +HEAPF64[$17>>3];
    $953 = $883 * $952;
    $954 = $951 + $953;
    $955 = +HEAPF64[$18>>3];
    $956 = $880 * $955;
    $957 = $954 + $956;
    HEAPF64[$25>>3] = $957;
    $958 = +HEAPF64[$31>>3];
    $959 = (+__Z5IKabsd($958));
    $960 = $959 < 9.9999999999999995E-7;
    if ($960) {
     $961 = +HEAPF64[$29>>3];
     $962 = (+__Z5IKabsd($961));
     $963 = $962 + 3.14159265358979;
     $964 = (+__Z6IKfmoddd($963,6.2831853071795898));
     $965 = $964 + -3.14159265358979;
     $966 = +HEAPF64[$23>>3];
     $967 = +HEAPF64[$19>>3];
     $968 = +HEAPF64[$22>>3];
     $969 = +HEAPF64[$24>>3];
     $970 = (+__Z5IKabsd($965));
     $971 = $970 < 9.9999999999999995E-7;
     if ($971) {
      $972 = $957 + -1.0;
      $973 = (+__Z5IKabsd($972));
      $974 = $973 < 9.9999999999999995E-7;
      if ($974) {
       $975 = (+__Z5IKabsd($966));
       $976 = $975 < 9.9999999999999995E-7;
       if ($976) {
        $977 = (+__Z5IKabsd($967));
        $978 = $977 < 9.9999999999999995E-7;
        if ($978) {
         $979 = (+__Z5IKabsd($968));
         $980 = $979 < 9.9999999999999995E-7;
         if ($980) {
          $981 = (+__Z5IKabsd($969));
          $982 = $981 < 9.9999999999999995E-7;
          if ($982) {
           HEAP16[$j4valid>>1] = 0;
           HEAP8[$32>>0] = 2;
           $983 = +HEAPF64[$19>>3];
           $984 = +HEAPF64[$22>>3];
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x217,$983,$984,1.9999999999999999E-6);
           $985 = HEAP8[$33>>0]|0;
           $986 = ($985<<24>>24)==(0);
           if ($986) {
            break;
           }
           $987 = +HEAPF64[$x217>>3];
           $988 = -$987;
           HEAPF64[$j4array>>3] = $988;
           $989 = (+__Z5IKsind($988));
           HEAPF64[$sj4array>>3] = $989;
           $990 = (+__Z5IKcosd($988));
           HEAPF64[$cj4array>>3] = $990;
           $991 = 3.14159265358979 - $987;
           HEAPF64[$34>>3] = $991;
           $992 = (+__Z5IKsind($991));
           HEAPF64[$35>>3] = $992;
           $993 = +HEAPF64[$34>>3];
           $994 = (+__Z5IKcosd($993));
           HEAPF64[$36>>3] = $994;
           $995 = +HEAPF64[$j4array>>3];
           $996 = $995 > 3.14159265358979;
           if ($996) {
            $997 = $995 + -6.2831853071795898;
            HEAPF64[$j4array>>3] = $997;
           } else {
            $998 = $995 < -3.14159265358979;
            if ($998) {
             $999 = $995 + 6.2831853071795898;
             HEAPF64[$j4array>>3] = $999;
            }
           }
           HEAP8[$j4valid>>0] = 1;
           $1000 = +HEAPF64[$34>>3];
           $1001 = $1000 > 3.14159265358979;
           if ($1001) {
            $1002 = $1000 + -6.2831853071795898;
            HEAPF64[$34>>3] = $1002;
           } else {
            $1003 = $1000 < -3.14159265358979;
            if ($1003) {
             $1004 = $1000 + 6.2831853071795898;
             HEAPF64[$34>>3] = $1004;
            }
           }
           HEAP8[$37>>0] = 1;
           $ij4$0368 = 0;
           while(1) {
            $1005 = (($j4valid) + ($ij4$0368)|0);
            $1006 = HEAP8[$1005>>0]|0;
            $1007 = ($1006<<24>>24)==(0);
            L351: do {
             if (!($1007)) {
              $1008 = $ij4$0368&255;
              HEAP8[$38>>0] = $1008;
              HEAP8[$39>>0] = -1;
              $iij4$0361 = (($ij4$0368) + 1)|0;
              $1009 = ($iij4$0361|0)<(2);
              do {
               if ($1009) {
                $1010 = (($sj4array) + ($ij4$0368<<3)|0);
                $1011 = (($j4valid) + ($iij4$0361)|0);
                $1012 = HEAP8[$1011>>0]|0;
                $1013 = ($1012<<24>>24)==(0);
                if ($1013) {
                 break;
                }
                $1014 = (($cj4array) + ($ij4$0368<<3)|0);
                $1015 = +HEAPF64[$1014>>3];
                $1016 = (($cj4array) + ($iij4$0361<<3)|0);
                $1017 = +HEAPF64[$1016>>3];
                $1018 = $1015 - $1017;
                $1019 = (+__Z5IKabsd($1018));
                $1020 = $1019 < 9.9999999999999995E-7;
                if (!($1020)) {
                 break;
                }
                $1021 = +HEAPF64[$1010>>3];
                $1022 = (($sj4array) + ($iij4$0361<<3)|0);
                $1023 = +HEAPF64[$1022>>3];
                $1024 = $1021 - $1023;
                $1025 = (+__Z5IKabsd($1024));
                $1026 = $1025 < 9.9999999999999995E-7;
                if (!($1026)) {
                 break;
                }
                HEAP8[$1011>>0] = 0;
                $1027 = $iij4$0361&255;
                HEAP8[$39>>0] = $1027;
               }
              } while(0);
              $1028 = (($j4array) + ($ij4$0368<<3)|0);
              $1029 = +HEAPF64[$1028>>3];
              HEAPF64[$40>>3] = $1029;
              $1030 = (($cj4array) + ($ij4$0368<<3)|0);
              $1031 = +HEAPF64[$1030>>3];
              HEAPF64[$41>>3] = $1031;
              $1032 = (($sj4array) + ($ij4$0368<<3)|0);
              $1033 = +HEAPF64[$1032>>3];
              HEAPF64[$42>>3] = $1033;
              $1034 = +HEAPF64[$22>>3];
              $1035 = +HEAPF64[$40>>3];
              $1036 = (+__Z5IKcosd($1035));
              $1037 = $1034 * $1036;
              $1038 = +HEAPF64[$19>>3];
              $1039 = (+__Z5IKsind($1035));
              $1040 = $1038 * $1039;
              $1041 = $1037 - $1040;
              $1042 = (+__Z5IKabsd($1041));
              $1043 = $1042 > 5.0000000000000004E-6;
              if ($1043) {
               break;
              }
              HEAP8[$43>>0] = 1;
              $1044 = +HEAPF64[$15>>3];
              $1045 = +HEAPF64[$41>>3];
              $1046 = $1044 * $1045;
              $1047 = +HEAPF64[$11>>3];
              $1048 = +HEAPF64[$42>>3];
              $1049 = $1047 * $1048;
              $1050 = -$1049;
              $1051 = $1050 - $1046;
              $1052 = (+__Z5IKabsd($1051));
              $1053 = $1052 < 1.9999999999999999E-6;
              do {
               if ($1053) {
                $1054 = $1045 * $1047;
                $1055 = $1044 * $1048;
                $1056 = $1054 - $1055;
                $1057 = (+__Z5IKabsd($1056));
                $1058 = $1057 < 1.9999999999999999E-6;
                if (!($1058)) {
                 break;
                }
                $1059 = (+__Z5IKsqrd($1051));
                $1060 = (+__Z5IKsqrd($1056));
                $1061 = $1059 + $1060;
                $1062 = $1061 + -1.0;
                $1063 = (+__Z5IKabsd($1062));
                $1064 = !($1063 <= 1.9999999999999999E-6);
                if (!($1064)) {
                 break L351;
                }
               }
              } while(0);
              $1065 = +HEAPF64[$41>>3];
              $1066 = $1044 * $1065;
              $1067 = +HEAPF64[$11>>3];
              $1068 = +HEAPF64[$42>>3];
              $1069 = $1067 * $1068;
              $1070 = -$1069;
              $1071 = $1070 - $1066;
              $1072 = $1065 * $1067;
              $1073 = $1044 * $1068;
              $1074 = $1072 - $1073;
              $1075 = (+__Z7IKatan2dd($1071,$1074));
              $1076 = (+__Z5IKsind($1075));
              $1077 = (+__Z5IKcosd($1075));
              $1078 = $1075 > 3.14159265358979;
              do {
               if ($1078) {
                $1079 = $1075 + -6.2831853071795898;
                $1082 = $1079;
               } else {
                $1080 = $1075 < -3.14159265358979;
                if (!($1080)) {
                 $1082 = $1075;
                 break;
                }
                $1081 = $1075 + 6.2831853071795898;
                $1082 = $1081;
               }
              } while(0);
              HEAP8[$44>>0] = 0;
              HEAP8[$45>>0] = -1;
              HEAPF64[$46>>3] = $1082;
              HEAPF64[$47>>3] = $1077;
              HEAPF64[$48>>3] = $1076;
              $1083 = +HEAPF64[$46>>3];
              $1084 = (+__Z5IKsind($1083));
              $1085 = (+__Z5IKcosd($1083));
              $1086 = +HEAPF64[$42>>3];
              $1087 = $1084 * $1086;
              $1088 = +HEAPF64[$41>>3];
              $1089 = $1084 * $1088;
              $1090 = $1085 * $1088;
              $1091 = +HEAPF64[$15>>3];
              $1092 = $1088 * $1091;
              $1093 = +HEAPF64[$21>>3];
              $1094 = $1086 * $1093;
              $1095 = $1092 + $1094;
              $1096 = $1084 + $1095;
              $1097 = +HEAPF64[$11>>3];
              $1098 = $1088 * $1097;
              $1099 = +HEAPF64[$20>>3];
              $1100 = $1086 * $1099;
              $1101 = $1098 + $1100;
              $1102 = $1101 - $1085;
              $1103 = $1088 * $1099;
              $1104 = $1103 - $1084;
              $1105 = $1086 * $1097;
              $1106 = $1104 - $1105;
              $1107 = $1086 * $1091;
              $1108 = $1088 * $1093;
              $1109 = $1108 - $1107;
              $1110 = $1109 - $1085;
              $1111 = $1087 + $1097;
              $1112 = $1111 - $1090;
              $1113 = $1087 + $1093;
              $1114 = $1113 - $1090;
              $1115 = $1085 * $1086;
              $1116 = $1099 - $1115;
              $1117 = $1116 - $1089;
              $1118 = (+__Z5IKabsd($1096));
              $1119 = $1118 > 5.0000000000000004E-6;
              if ($1119) {
               break;
              }
              $1120 = $1115 + $1089;
              $1121 = $1091 + $1120;
              $1122 = (+__Z5IKabsd($1121));
              $1123 = $1122 > 5.0000000000000004E-6;
              if ($1123) {
               break;
              }
              $1124 = (+__Z5IKabsd($1102));
              $1125 = $1124 > 5.0000000000000004E-6;
              if ($1125) {
               break;
              }
              $1126 = (+__Z5IKabsd($1106));
              $1127 = $1126 > 5.0000000000000004E-6;
              if ($1127) {
               break;
              }
              $1128 = (+__Z5IKabsd($1110));
              $1129 = $1128 > 5.0000000000000004E-6;
              if ($1129) {
               break;
              }
              $1130 = (+__Z5IKabsd($1112));
              $1131 = $1130 > 5.0000000000000004E-6;
              if ($1131) {
               break;
              }
              $1132 = (+__Z5IKabsd($1114));
              $1133 = $1132 > 5.0000000000000004E-6;
              if ($1133) {
               break;
              }
              $1134 = (+__Z5IKabsd($1117));
              $1135 = $1134 > 5.0000000000000004E-6;
              if ($1135) {
               break;
              }
              __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos,7);
              $1136 = HEAP32[$vinfos>>2]|0;
              $1137 = ((($1136)) + 17|0);
              HEAP8[$1137>>0] = 1;
              $1138 = +HEAPF64[$this>>3];
              $1139 = HEAP32[$vinfos>>2]|0;
              $1140 = ((($1139)) + 8|0);
              HEAPF64[$1140>>3] = $1138;
              $1141 = HEAP8[$49>>0]|0;
              $1142 = HEAP32[$vinfos>>2]|0;
              $1143 = ((($1142)) + 19|0);
              HEAP8[$1143>>0] = $1141;
              $1144 = HEAP8[$50>>0]|0;
              $1145 = HEAP32[$vinfos>>2]|0;
              $1146 = ((($1145)) + 20|0);
              HEAP8[$1146>>0] = $1144;
              $1147 = HEAP8[$51>>0]|0;
              $1148 = HEAP32[$vinfos>>2]|0;
              $1149 = ((($1148)) + 18|0);
              HEAP8[$1149>>0] = $1147;
              $1150 = HEAP32[$vinfos>>2]|0;
              $1151 = ((($1150)) + 41|0);
              HEAP8[$1151>>0] = 1;
              $1152 = +HEAPF64[$52>>3];
              $1153 = HEAP32[$vinfos>>2]|0;
              $1154 = ((($1153)) + 32|0);
              HEAPF64[$1154>>3] = $1152;
              $1155 = HEAP8[$53>>0]|0;
              $1156 = HEAP32[$vinfos>>2]|0;
              $1157 = ((($1156)) + 43|0);
              HEAP8[$1157>>0] = $1155;
              $1158 = HEAP8[$54>>0]|0;
              $1159 = HEAP32[$vinfos>>2]|0;
              $1160 = ((($1159)) + 44|0);
              HEAP8[$1160>>0] = $1158;
              $1161 = HEAP8[$55>>0]|0;
              $1162 = HEAP32[$vinfos>>2]|0;
              $1163 = ((($1162)) + 42|0);
              HEAP8[$1163>>0] = $1161;
              $1164 = HEAP32[$vinfos>>2]|0;
              $1165 = ((($1164)) + 65|0);
              HEAP8[$1165>>0] = 1;
              $1166 = +HEAPF64[$56>>3];
              $1167 = HEAP32[$vinfos>>2]|0;
              $1168 = ((($1167)) + 56|0);
              HEAPF64[$1168>>3] = $1166;
              $1169 = HEAP8[$57>>0]|0;
              $1170 = HEAP32[$vinfos>>2]|0;
              $1171 = ((($1170)) + 67|0);
              HEAP8[$1171>>0] = $1169;
              $1172 = HEAP8[$58>>0]|0;
              $1173 = HEAP32[$vinfos>>2]|0;
              $1174 = ((($1173)) + 68|0);
              HEAP8[$1174>>0] = $1172;
              $1175 = HEAP8[$59>>0]|0;
              $1176 = HEAP32[$vinfos>>2]|0;
              $1177 = ((($1176)) + 66|0);
              HEAP8[$1177>>0] = $1175;
              $1178 = HEAP32[$vinfos>>2]|0;
              $1179 = ((($1178)) + 89|0);
              HEAP8[$1179>>0] = 1;
              $1180 = +HEAPF64[$60>>3];
              $1181 = HEAP32[$vinfos>>2]|0;
              $1182 = ((($1181)) + 80|0);
              HEAPF64[$1182>>3] = $1180;
              $1183 = HEAP8[$61>>0]|0;
              $1184 = HEAP32[$vinfos>>2]|0;
              $1185 = ((($1184)) + 91|0);
              HEAP8[$1185>>0] = $1183;
              $1186 = HEAP8[$62>>0]|0;
              $1187 = HEAP32[$vinfos>>2]|0;
              $1188 = ((($1187)) + 92|0);
              HEAP8[$1188>>0] = $1186;
              $1189 = HEAP8[$63>>0]|0;
              $1190 = HEAP32[$vinfos>>2]|0;
              $1191 = ((($1190)) + 90|0);
              HEAP8[$1191>>0] = $1189;
              $1192 = HEAP32[$vinfos>>2]|0;
              $1193 = ((($1192)) + 113|0);
              HEAP8[$1193>>0] = 1;
              $1194 = +HEAPF64[$40>>3];
              $1195 = HEAP32[$vinfos>>2]|0;
              $1196 = ((($1195)) + 104|0);
              HEAPF64[$1196>>3] = $1194;
              $1197 = HEAP8[$38>>0]|0;
              $1198 = HEAP32[$vinfos>>2]|0;
              $1199 = ((($1198)) + 115|0);
              HEAP8[$1199>>0] = $1197;
              $1200 = HEAP8[$39>>0]|0;
              $1201 = HEAP32[$vinfos>>2]|0;
              $1202 = ((($1201)) + 116|0);
              HEAP8[$1202>>0] = $1200;
              $1203 = HEAP8[$32>>0]|0;
              $1204 = HEAP32[$vinfos>>2]|0;
              $1205 = ((($1204)) + 114|0);
              HEAP8[$1205>>0] = $1203;
              $1206 = HEAP32[$vinfos>>2]|0;
              $1207 = ((($1206)) + 137|0);
              HEAP8[$1207>>0] = 1;
              $1208 = +HEAPF64[$29>>3];
              $1209 = HEAP32[$vinfos>>2]|0;
              $1210 = ((($1209)) + 128|0);
              HEAPF64[$1210>>3] = $1208;
              $1211 = HEAP8[$27>>0]|0;
              $1212 = HEAP32[$vinfos>>2]|0;
              $1213 = ((($1212)) + 139|0);
              HEAP8[$1213>>0] = $1211;
              $1214 = HEAP8[$28>>0]|0;
              $1215 = HEAP32[$vinfos>>2]|0;
              $1216 = ((($1215)) + 140|0);
              HEAP8[$1216>>0] = $1214;
              $1217 = HEAP8[$26>>0]|0;
              $1218 = HEAP32[$vinfos>>2]|0;
              $1219 = ((($1218)) + 138|0);
              HEAP8[$1219>>0] = $1217;
              $1220 = HEAP32[$vinfos>>2]|0;
              $1221 = ((($1220)) + 161|0);
              HEAP8[$1221>>0] = 1;
              $1222 = +HEAPF64[$46>>3];
              $1223 = HEAP32[$vinfos>>2]|0;
              $1224 = ((($1223)) + 152|0);
              HEAPF64[$1224>>3] = $1222;
              $1225 = HEAP8[$44>>0]|0;
              $1226 = HEAP32[$vinfos>>2]|0;
              $1227 = ((($1226)) + 163|0);
              HEAP8[$1227>>0] = $1225;
              $1228 = HEAP8[$45>>0]|0;
              $1229 = HEAP32[$vinfos>>2]|0;
              $1230 = ((($1229)) + 164|0);
              HEAP8[$1230>>0] = $1228;
              $1231 = HEAP8[$43>>0]|0;
              $1232 = HEAP32[$vinfos>>2]|0;
              $1233 = ((($1232)) + 162|0);
              HEAP8[$1233>>0] = $1231;
              __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree,0);
              $1234 = HEAP32[$solutions>>2]|0;
              $1235 = ((($1234)) + 8|0);
              $1236 = HEAP32[$1235>>2]|0;
              (FUNCTION_TABLE_iiii[$1236 & 31]($solutions,$vinfos,$vfree)|0);
              __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree);
              __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos);
             }
            } while(0);
            $1237 = (($ij4$0368) + 1)|0;
            $1238 = ($1237|0)<(2);
            if ($1238) {
             $ij4$0368 = $1237;
            } else {
             break L7;
            }
           }
          }
         }
        }
       }
      }
     }
     $1239 = +HEAPF64[$29>>3];
     $1240 = $1239 + -3.14159265358979;
     $1241 = (+__Z5IKabsd($1240));
     $1242 = $1241 + 3.14159265358979;
     $1243 = (+__Z6IKfmoddd($1242,6.2831853071795898));
     $1244 = $1243 + -3.14159265358979;
     $1245 = +HEAPF64[$23>>3];
     $1246 = +HEAPF64[$19>>3];
     $1247 = +HEAPF64[$22>>3];
     $1248 = +HEAPF64[$24>>3];
     $1249 = (+__Z5IKabsd($1244));
     $1250 = $1249 < 9.9999999999999995E-7;
     if (!($1250)) {
      break;
     }
     $1251 = +HEAPF64[$25>>3];
     $1252 = $1251 + 1.0;
     $1253 = (+__Z5IKabsd($1252));
     $1254 = $1253 < 9.9999999999999995E-7;
     if (!($1254)) {
      break;
     }
     $1255 = (+__Z5IKabsd($1245));
     $1256 = $1255 < 9.9999999999999995E-7;
     if (!($1256)) {
      break;
     }
     $1257 = (+__Z5IKabsd($1246));
     $1258 = $1257 < 9.9999999999999995E-7;
     if (!($1258)) {
      break;
     }
     $1259 = (+__Z5IKabsd($1247));
     $1260 = $1259 < 9.9999999999999995E-7;
     if (!($1260)) {
      break;
     }
     $1261 = (+__Z5IKabsd($1248));
     $1262 = $1261 < 9.9999999999999995E-7;
     if (!($1262)) {
      break;
     }
     HEAP16[$j4valid8>>1] = 0;
     HEAP8[$64>>0] = 2;
     $1263 = +HEAPF64[$19>>3];
     $1264 = +HEAPF64[$22>>3];
     __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x228,$1263,$1264,1.9999999999999999E-6);
     $1265 = HEAP8[$65>>0]|0;
     $1266 = ($1265<<24>>24)==(0);
     if ($1266) {
      break;
     }
     $1267 = +HEAPF64[$x228>>3];
     $1268 = -$1267;
     HEAPF64[$j4array5>>3] = $1268;
     $1269 = (+__Z5IKsind($1268));
     HEAPF64[$sj4array7>>3] = $1269;
     $1270 = (+__Z5IKcosd($1268));
     HEAPF64[$cj4array6>>3] = $1270;
     $1271 = 3.14159265358979 - $1267;
     HEAPF64[$66>>3] = $1271;
     $1272 = (+__Z5IKsind($1271));
     HEAPF64[$67>>3] = $1272;
     $1273 = +HEAPF64[$66>>3];
     $1274 = (+__Z5IKcosd($1273));
     HEAPF64[$68>>3] = $1274;
     $1275 = +HEAPF64[$j4array5>>3];
     $1276 = $1275 > 3.14159265358979;
     if ($1276) {
      $1277 = $1275 + -6.2831853071795898;
      HEAPF64[$j4array5>>3] = $1277;
     } else {
      $1278 = $1275 < -3.14159265358979;
      if ($1278) {
       $1279 = $1275 + 6.2831853071795898;
       HEAPF64[$j4array5>>3] = $1279;
      }
     }
     HEAP8[$j4valid8>>0] = 1;
     $1280 = +HEAPF64[$66>>3];
     $1281 = $1280 > 3.14159265358979;
     if ($1281) {
      $1282 = $1280 + -6.2831853071795898;
      HEAPF64[$66>>3] = $1282;
     } else {
      $1283 = $1280 < -3.14159265358979;
      if ($1283) {
       $1284 = $1280 + 6.2831853071795898;
       HEAPF64[$66>>3] = $1284;
      }
     }
     HEAP8[$69>>0] = 1;
     $ij49$0360 = 0;
     while(1) {
      $1285 = (($j4valid8) + ($ij49$0360)|0);
      $1286 = HEAP8[$1285>>0]|0;
      $1287 = ($1286<<24>>24)==(0);
      L398: do {
       if (!($1287)) {
        $1288 = $ij49$0360&255;
        HEAP8[$70>>0] = $1288;
        HEAP8[$71>>0] = -1;
        $iij410$0353 = (($ij49$0360) + 1)|0;
        $1289 = ($iij410$0353|0)<(2);
        do {
         if ($1289) {
          $1290 = (($sj4array7) + ($ij49$0360<<3)|0);
          $1291 = (($j4valid8) + ($iij410$0353)|0);
          $1292 = HEAP8[$1291>>0]|0;
          $1293 = ($1292<<24>>24)==(0);
          if ($1293) {
           break;
          }
          $1294 = (($cj4array6) + ($ij49$0360<<3)|0);
          $1295 = +HEAPF64[$1294>>3];
          $1296 = (($cj4array6) + ($iij410$0353<<3)|0);
          $1297 = +HEAPF64[$1296>>3];
          $1298 = $1295 - $1297;
          $1299 = (+__Z5IKabsd($1298));
          $1300 = $1299 < 9.9999999999999995E-7;
          if (!($1300)) {
           break;
          }
          $1301 = +HEAPF64[$1290>>3];
          $1302 = (($sj4array7) + ($iij410$0353<<3)|0);
          $1303 = +HEAPF64[$1302>>3];
          $1304 = $1301 - $1303;
          $1305 = (+__Z5IKabsd($1304));
          $1306 = $1305 < 9.9999999999999995E-7;
          if (!($1306)) {
           break;
          }
          HEAP8[$1291>>0] = 0;
          $1307 = $iij410$0353&255;
          HEAP8[$71>>0] = $1307;
         }
        } while(0);
        $1308 = (($j4array5) + ($ij49$0360<<3)|0);
        $1309 = +HEAPF64[$1308>>3];
        HEAPF64[$72>>3] = $1309;
        $1310 = (($cj4array6) + ($ij49$0360<<3)|0);
        $1311 = +HEAPF64[$1310>>3];
        HEAPF64[$73>>3] = $1311;
        $1312 = (($sj4array7) + ($ij49$0360<<3)|0);
        $1313 = +HEAPF64[$1312>>3];
        HEAPF64[$74>>3] = $1313;
        $1314 = +HEAPF64[$22>>3];
        $1315 = +HEAPF64[$72>>3];
        $1316 = (+__Z5IKcosd($1315));
        $1317 = $1314 * $1316;
        $1318 = +HEAPF64[$19>>3];
        $1319 = (+__Z5IKsind($1315));
        $1320 = $1318 * $1319;
        $1321 = $1317 - $1320;
        $1322 = (+__Z5IKabsd($1321));
        $1323 = $1322 > 5.0000000000000004E-6;
        if ($1323) {
         break;
        }
        HEAP8[$75>>0] = 1;
        $1324 = +HEAPF64[$11>>3];
        $1325 = +HEAPF64[$73>>3];
        $1326 = +HEAPF64[$15>>3];
        $1327 = $1325 * $1326;
        $1328 = +HEAPF64[$74>>3];
        $1329 = $1324 * $1328;
        $1330 = $1327 - $1329;
        $1331 = (+__Z5IKabsd($1330));
        $1332 = $1331 < 1.9999999999999999E-6;
        do {
         if ($1332) {
          $1333 = $1324 * $1325;
          $1334 = $1326 * $1328;
          $1335 = -$1334;
          $1336 = $1335 - $1333;
          $1337 = (+__Z5IKabsd($1336));
          $1338 = $1337 < 1.9999999999999999E-6;
          if (!($1338)) {
           break;
          }
          $1339 = (+__Z5IKsqrd($1330));
          $1340 = (+__Z5IKsqrd($1336));
          $1341 = $1339 + $1340;
          $1342 = $1341 + -1.0;
          $1343 = (+__Z5IKabsd($1342));
          $1344 = !($1343 <= 1.9999999999999999E-6);
          if (!($1344)) {
           break L398;
          }
         }
        } while(0);
        $1345 = +HEAPF64[$73>>3];
        $1346 = +HEAPF64[$15>>3];
        $1347 = $1345 * $1346;
        $1348 = +HEAPF64[$74>>3];
        $1349 = $1324 * $1348;
        $1350 = $1347 - $1349;
        $1351 = $1324 * $1345;
        $1352 = $1346 * $1348;
        $1353 = -$1352;
        $1354 = $1353 - $1351;
        $1355 = (+__Z7IKatan2dd($1350,$1354));
        $1356 = (+__Z5IKsind($1355));
        $1357 = (+__Z5IKcosd($1355));
        $1358 = $1355 > 3.14159265358979;
        do {
         if ($1358) {
          $1359 = $1355 + -6.2831853071795898;
          $1362 = $1359;
         } else {
          $1360 = $1355 < -3.14159265358979;
          if (!($1360)) {
           $1362 = $1355;
           break;
          }
          $1361 = $1355 + 6.2831853071795898;
          $1362 = $1361;
         }
        } while(0);
        HEAP8[$76>>0] = 0;
        HEAP8[$77>>0] = -1;
        HEAPF64[$78>>3] = $1362;
        HEAPF64[$79>>3] = $1357;
        HEAPF64[$80>>3] = $1356;
        $1363 = +HEAPF64[$78>>3];
        $1364 = (+__Z5IKcosd($1363));
        $1365 = (+__Z5IKsind($1363));
        $1366 = +HEAPF64[$74>>3];
        $1367 = $1364 * $1366;
        $1368 = +HEAPF64[$73>>3];
        $1369 = $1365 * $1368;
        $1370 = +HEAPF64[$11>>3];
        $1371 = $1368 * $1370;
        $1372 = +HEAPF64[$20>>3];
        $1373 = $1366 * $1372;
        $1374 = $1371 + $1373;
        $1375 = $1364 + $1374;
        $1376 = +HEAPF64[$15>>3];
        $1377 = +HEAPF64[$21>>3];
        $1378 = $1365 * $1366;
        $1379 = $1364 * $1368;
        $1380 = $1378 + $1379;
        $1381 = $1370 + $1380;
        $1382 = $1368 * $1372;
        $1383 = $1382 - $1365;
        $1384 = $1366 * $1370;
        $1385 = $1383 - $1384;
        $1386 = $1368 * $1377;
        $1387 = $1386 - $1364;
        $1388 = $1366 * $1376;
        $1389 = $1387 - $1388;
        $1390 = $1367 - $1369;
        $1391 = $1390 + $1376;
        $1392 = $1390 + $1372;
        $1393 = -$1378;
        $1394 = $1393 - $1379;
        $1395 = $1394 + $1377;
        $1396 = (+__Z5IKabsd($1375));
        $1397 = $1396 > 5.0000000000000004E-6;
        if ($1397) {
         break;
        }
        $1398 = $1368 * $1376;
        $1399 = $1366 * $1377;
        $1400 = $1398 + $1399;
        $1401 = $1400 - $1365;
        $1402 = (+__Z5IKabsd($1401));
        $1403 = $1402 > 5.0000000000000004E-6;
        if ($1403) {
         break;
        }
        $1404 = (+__Z5IKabsd($1381));
        $1405 = $1404 > 5.0000000000000004E-6;
        if ($1405) {
         break;
        }
        $1406 = (+__Z5IKabsd($1385));
        $1407 = $1406 > 5.0000000000000004E-6;
        if ($1407) {
         break;
        }
        $1408 = (+__Z5IKabsd($1389));
        $1409 = $1408 > 5.0000000000000004E-6;
        if ($1409) {
         break;
        }
        $1410 = (+__Z5IKabsd($1391));
        $1411 = $1410 > 5.0000000000000004E-6;
        if ($1411) {
         break;
        }
        $1412 = (+__Z5IKabsd($1392));
        $1413 = $1412 > 5.0000000000000004E-6;
        if ($1413) {
         break;
        }
        $1414 = (+__Z5IKabsd($1395));
        $1415 = $1414 > 5.0000000000000004E-6;
        if ($1415) {
         break;
        }
        __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos20,7);
        $1416 = HEAP32[$vinfos20>>2]|0;
        $1417 = ((($1416)) + 17|0);
        HEAP8[$1417>>0] = 1;
        $1418 = +HEAPF64[$this>>3];
        $1419 = HEAP32[$vinfos20>>2]|0;
        $1420 = ((($1419)) + 8|0);
        HEAPF64[$1420>>3] = $1418;
        $1421 = HEAP8[$81>>0]|0;
        $1422 = HEAP32[$vinfos20>>2]|0;
        $1423 = ((($1422)) + 19|0);
        HEAP8[$1423>>0] = $1421;
        $1424 = HEAP8[$82>>0]|0;
        $1425 = HEAP32[$vinfos20>>2]|0;
        $1426 = ((($1425)) + 20|0);
        HEAP8[$1426>>0] = $1424;
        $1427 = HEAP8[$83>>0]|0;
        $1428 = HEAP32[$vinfos20>>2]|0;
        $1429 = ((($1428)) + 18|0);
        HEAP8[$1429>>0] = $1427;
        $1430 = HEAP32[$vinfos20>>2]|0;
        $1431 = ((($1430)) + 41|0);
        HEAP8[$1431>>0] = 1;
        $1432 = +HEAPF64[$84>>3];
        $1433 = HEAP32[$vinfos20>>2]|0;
        $1434 = ((($1433)) + 32|0);
        HEAPF64[$1434>>3] = $1432;
        $1435 = HEAP8[$85>>0]|0;
        $1436 = HEAP32[$vinfos20>>2]|0;
        $1437 = ((($1436)) + 43|0);
        HEAP8[$1437>>0] = $1435;
        $1438 = HEAP8[$86>>0]|0;
        $1439 = HEAP32[$vinfos20>>2]|0;
        $1440 = ((($1439)) + 44|0);
        HEAP8[$1440>>0] = $1438;
        $1441 = HEAP8[$87>>0]|0;
        $1442 = HEAP32[$vinfos20>>2]|0;
        $1443 = ((($1442)) + 42|0);
        HEAP8[$1443>>0] = $1441;
        $1444 = HEAP32[$vinfos20>>2]|0;
        $1445 = ((($1444)) + 65|0);
        HEAP8[$1445>>0] = 1;
        $1446 = +HEAPF64[$88>>3];
        $1447 = HEAP32[$vinfos20>>2]|0;
        $1448 = ((($1447)) + 56|0);
        HEAPF64[$1448>>3] = $1446;
        $1449 = HEAP8[$89>>0]|0;
        $1450 = HEAP32[$vinfos20>>2]|0;
        $1451 = ((($1450)) + 67|0);
        HEAP8[$1451>>0] = $1449;
        $1452 = HEAP8[$90>>0]|0;
        $1453 = HEAP32[$vinfos20>>2]|0;
        $1454 = ((($1453)) + 68|0);
        HEAP8[$1454>>0] = $1452;
        $1455 = HEAP8[$91>>0]|0;
        $1456 = HEAP32[$vinfos20>>2]|0;
        $1457 = ((($1456)) + 66|0);
        HEAP8[$1457>>0] = $1455;
        $1458 = HEAP32[$vinfos20>>2]|0;
        $1459 = ((($1458)) + 89|0);
        HEAP8[$1459>>0] = 1;
        $1460 = +HEAPF64[$92>>3];
        $1461 = HEAP32[$vinfos20>>2]|0;
        $1462 = ((($1461)) + 80|0);
        HEAPF64[$1462>>3] = $1460;
        $1463 = HEAP8[$93>>0]|0;
        $1464 = HEAP32[$vinfos20>>2]|0;
        $1465 = ((($1464)) + 91|0);
        HEAP8[$1465>>0] = $1463;
        $1466 = HEAP8[$94>>0]|0;
        $1467 = HEAP32[$vinfos20>>2]|0;
        $1468 = ((($1467)) + 92|0);
        HEAP8[$1468>>0] = $1466;
        $1469 = HEAP8[$95>>0]|0;
        $1470 = HEAP32[$vinfos20>>2]|0;
        $1471 = ((($1470)) + 90|0);
        HEAP8[$1471>>0] = $1469;
        $1472 = HEAP32[$vinfos20>>2]|0;
        $1473 = ((($1472)) + 113|0);
        HEAP8[$1473>>0] = 1;
        $1474 = +HEAPF64[$72>>3];
        $1475 = HEAP32[$vinfos20>>2]|0;
        $1476 = ((($1475)) + 104|0);
        HEAPF64[$1476>>3] = $1474;
        $1477 = HEAP8[$70>>0]|0;
        $1478 = HEAP32[$vinfos20>>2]|0;
        $1479 = ((($1478)) + 115|0);
        HEAP8[$1479>>0] = $1477;
        $1480 = HEAP8[$71>>0]|0;
        $1481 = HEAP32[$vinfos20>>2]|0;
        $1482 = ((($1481)) + 116|0);
        HEAP8[$1482>>0] = $1480;
        $1483 = HEAP8[$64>>0]|0;
        $1484 = HEAP32[$vinfos20>>2]|0;
        $1485 = ((($1484)) + 114|0);
        HEAP8[$1485>>0] = $1483;
        $1486 = HEAP32[$vinfos20>>2]|0;
        $1487 = ((($1486)) + 137|0);
        HEAP8[$1487>>0] = 1;
        $1488 = +HEAPF64[$29>>3];
        $1489 = HEAP32[$vinfos20>>2]|0;
        $1490 = ((($1489)) + 128|0);
        HEAPF64[$1490>>3] = $1488;
        $1491 = HEAP8[$27>>0]|0;
        $1492 = HEAP32[$vinfos20>>2]|0;
        $1493 = ((($1492)) + 139|0);
        HEAP8[$1493>>0] = $1491;
        $1494 = HEAP8[$28>>0]|0;
        $1495 = HEAP32[$vinfos20>>2]|0;
        $1496 = ((($1495)) + 140|0);
        HEAP8[$1496>>0] = $1494;
        $1497 = HEAP8[$26>>0]|0;
        $1498 = HEAP32[$vinfos20>>2]|0;
        $1499 = ((($1498)) + 138|0);
        HEAP8[$1499>>0] = $1497;
        $1500 = HEAP32[$vinfos20>>2]|0;
        $1501 = ((($1500)) + 161|0);
        HEAP8[$1501>>0] = 1;
        $1502 = +HEAPF64[$78>>3];
        $1503 = HEAP32[$vinfos20>>2]|0;
        $1504 = ((($1503)) + 152|0);
        HEAPF64[$1504>>3] = $1502;
        $1505 = HEAP8[$76>>0]|0;
        $1506 = HEAP32[$vinfos20>>2]|0;
        $1507 = ((($1506)) + 163|0);
        HEAP8[$1507>>0] = $1505;
        $1508 = HEAP8[$77>>0]|0;
        $1509 = HEAP32[$vinfos20>>2]|0;
        $1510 = ((($1509)) + 164|0);
        HEAP8[$1510>>0] = $1508;
        $1511 = HEAP8[$75>>0]|0;
        $1512 = HEAP32[$vinfos20>>2]|0;
        $1513 = ((($1512)) + 162|0);
        HEAP8[$1513>>0] = $1511;
        __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree21,0);
        $1514 = HEAP32[$solutions>>2]|0;
        $1515 = ((($1514)) + 8|0);
        $1516 = HEAP32[$1515>>2]|0;
        (FUNCTION_TABLE_iiii[$1516 & 31]($solutions,$vinfos20,$vfree21)|0);
        __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree21);
        __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos20);
       }
      } while(0);
      $1517 = (($ij49$0360) + 1)|0;
      $1518 = ($1517|0)<(2);
      if ($1518) {
       $ij49$0360 = $1517;
      } else {
       break L7;
      }
     }
    }
    HEAP8[$96>>0] = 1;
    $1519 = +HEAPF64[$31>>3];
    __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x238,$1519,-1);
    $1520 = HEAP8[$97>>0]|0;
    $1521 = ($1520<<24>>24)==(0);
    if (!($1521)) {
     $1522 = +HEAPF64[$x238>>3];
     $1523 = +HEAPF64[$22>>3];
     __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x239,$1523,-1);
     $1524 = HEAP8[$98>>0]|0;
     $1525 = ($1524<<24>>24)==(0);
     if (!($1525)) {
      $1526 = +HEAPF64[$x239>>3];
      $1527 = $1522 * $1526;
      $1528 = +HEAPF64[$19>>3];
      $1529 = $1528 * $1528;
      $1530 = 1.0 - $1529;
      $1531 = +HEAPF64[$30>>3];
      $1532 = $1531 * $1531;
      $1533 = $1530 - $1532;
      $1534 = $1527 * $1533;
      $1535 = (+__Z5IKabsd($1534));
      $1536 = $1535 < 1.9999999999999999E-6;
      if ($1536) {
       $1537 = $1522 * $1528;
       $1538 = (+__Z5IKabsd($1537));
       $1539 = $1538 < 1.9999999999999999E-6;
       if ($1539) {
        $1540 = (+__Z5IKsqrd($1534));
        $1541 = (+__Z5IKsqrd($1537));
        $1542 = $1540 + $1541;
        $1543 = $1542 + -1.0;
        $1544 = (+__Z5IKabsd($1543));
        $1545 = !($1544 <= 1.9999999999999999E-6);
        if (!($1545)) {
         break;
        }
       }
      }
      $1546 = +HEAPF64[$x239>>3];
      $1547 = $1522 * $1546;
      $1548 = +HEAPF64[$19>>3];
      $1549 = $1548 * $1548;
      $1550 = 1.0 - $1549;
      $1551 = +HEAPF64[$30>>3];
      $1552 = $1551 * $1551;
      $1553 = $1550 - $1552;
      $1554 = $1547 * $1553;
      $1555 = $1522 * $1548;
      $1556 = (+__Z7IKatan2dd($1554,$1555));
      $1557 = (+__Z5IKsind($1556));
      $1558 = (+__Z5IKcosd($1556));
      $1559 = $1556 > 3.14159265358979;
      if ($1559) {
       $1560 = $1556 + -6.2831853071795898;
       $1563 = $1560;
      } else {
       $1561 = $1556 < -3.14159265358979;
       if ($1561) {
        $1562 = $1556 + 6.2831853071795898;
        $1563 = $1562;
       } else {
        $1563 = $1556;
       }
      }
      HEAP8[$99>>0] = 0;
      HEAP8[$100>>0] = -1;
      HEAPF64[$101>>3] = $1563;
      HEAPF64[$102>>3] = $1558;
      HEAPF64[$103>>3] = $1557;
      $1564 = +HEAPF64[$101>>3];
      $1565 = (+__Z5IKcosd($1564));
      $1566 = (+__Z5IKsind($1564));
      $1567 = +HEAPF64[$31>>3];
      $1568 = +HEAPF64[$30>>3];
      $1569 = +HEAPF64[$22>>3];
      $1570 = $1566 * $1569;
      $1571 = +HEAPF64[$19>>3];
      $1572 = $1565 * $1571;
      $1573 = $1565 * $1567;
      $1574 = $1571 - $1573;
      $1575 = $1565 * $1569;
      $1576 = $1566 * $1571;
      $1577 = $1575 - $1576;
      $1578 = $1570 + $1572;
      $1579 = -$1567;
      $1580 = $1578 - $1567;
      $1581 = $1568 * $1570;
      $1582 = $1568 * $1572;
      $1583 = $1581 + $1582;
      $1584 = +HEAPF64[$25>>3];
      $1585 = -$1584;
      $1586 = $1567 * $1585;
      $1587 = $1586 + $1583;
      $1588 = +HEAPF64[$20>>3];
      $1589 = $1566 * $1588;
      $1590 = $1567 * $1589;
      $1591 = +HEAPF64[$11>>3];
      $1592 = $1565 * $1591;
      $1593 = $1567 * $1592;
      $1594 = -$1593;
      $1595 = $1594 - $1590;
      $1596 = +HEAPF64[$23>>3];
      $1597 = $1568 * $1596;
      $1598 = $1595 - $1597;
      $1599 = +HEAPF64[$21>>3];
      $1600 = $1566 * $1599;
      $1601 = $1567 * $1600;
      $1602 = +HEAPF64[$15>>3];
      $1603 = $1565 * $1602;
      $1604 = $1567 * $1603;
      $1605 = -$1604;
      $1606 = $1605 - $1601;
      $1607 = +HEAPF64[$24>>3];
      $1608 = $1568 * $1607;
      $1609 = $1606 - $1608;
      $1610 = $1570 * $1579;
      $1611 = $1610 + 1.0;
      $1612 = $1572 * $1579;
      $1613 = $1611 + $1612;
      $1614 = $1568 * $1585;
      $1615 = $1614 + $1613;
      $1616 = (+__Z5IKabsd($1574));
      $1617 = $1616 > 5.0000000000000004E-6;
      if (!($1617)) {
       $1618 = $1566 * $1567;
       $1619 = $1569 - $1618;
       $1620 = (+__Z5IKabsd($1619));
       $1621 = $1620 > 5.0000000000000004E-6;
       if (!($1621)) {
        $1622 = (+__Z5IKabsd($1577));
        $1623 = $1622 > 5.0000000000000004E-6;
        if (!($1623)) {
         $1624 = (+__Z5IKabsd($1580));
         $1625 = $1624 > 5.0000000000000004E-6;
         if (!($1625)) {
          $1626 = (+__Z5IKabsd($1587));
          $1627 = $1626 > 5.0000000000000004E-6;
          if (!($1627)) {
           $1628 = (+__Z5IKabsd($1598));
           $1629 = $1628 > 5.0000000000000004E-6;
           if (!($1629)) {
            $1630 = (+__Z5IKabsd($1609));
            $1631 = $1630 > 5.0000000000000004E-6;
            if (!($1631)) {
             $1632 = (+__Z5IKabsd($1615));
             $1633 = $1632 > 5.0000000000000004E-6;
             if (!($1633)) {
              $1634 = +HEAPF64[$0>>3];
              $1635 = +HEAPF64[$1>>3];
              $1636 = +HEAPF64[$2>>3];
              $1637 = $1635 * $1636;
              $1638 = +HEAPF64[$4>>3];
              $1639 = +HEAPF64[$5>>3];
              $1640 = $1636 * $1638;
              $1641 = +HEAPF64[$7>>3];
              $1642 = $1636 * $1641;
              $1643 = $611 * $1641;
              $1644 = $1634 * $1642;
              $1645 = $611 * $1635;
              $1646 = $1645 + $1644;
              $1647 = $618 * $1641;
              $1648 = $1637 * $1639;
              $1649 = $1647 - $1648;
              $1650 = $618 * $1635;
              $1651 = $1639 * $1642;
              $1652 = $1650 + $1651;
              $1653 = $1634 * $1637;
              $1654 = $1643 - $1653;
              $1655 = +HEAPF64[$8>>3];
              $1656 = $626 * $1655;
              $1657 = +HEAPF64[$10>>3];
              $1658 = $1657 * $1646;
              $1659 = $1656 + $1658;
              $1660 = +HEAPF64[$9>>3];
              $1661 = $1654 * $1660;
              $1662 = $1661 + $1659;
              HEAPF64[$11>>3] = $1662;
              $1663 = +HEAPF64[$13>>3];
              $1664 = $626 * $1663;
              $1665 = +HEAPF64[$14>>3];
              $1666 = $1646 * $1665;
              $1667 = $1664 + $1666;
              $1668 = +HEAPF64[$12>>3];
              $1669 = $1654 * $1668;
              $1670 = $1667 + $1669;
              HEAPF64[$15>>3] = $1670;
              $1671 = +HEAPF64[$18>>3];
              $1672 = $1654 * $1671;
              $1673 = +HEAPF64[$17>>3];
              $1674 = $1646 * $1673;
              $1675 = $1672 + $1674;
              $1676 = +HEAPF64[$16>>3];
              $1677 = $626 * $1676;
              $1678 = $1675 + $1677;
              HEAPF64[$19>>3] = $1678;
              $1679 = +HEAPF64[$8>>3];
              $1680 = $1640 * $1679;
              $1681 = +HEAPF64[$10>>3];
              $1682 = $615 * $1681;
              $1683 = $1680 + $1682;
              $1684 = +HEAPF64[$9>>3];
              $1685 = $630 * $1684;
              $1686 = $1683 + $1685;
              HEAPF64[$20>>3] = $1686;
              $1687 = +HEAPF64[$13>>3];
              $1688 = $1640 * $1687;
              $1689 = +HEAPF64[$14>>3];
              $1690 = $615 * $1689;
              $1691 = $1688 + $1690;
              $1692 = +HEAPF64[$12>>3];
              $1693 = $630 * $1692;
              $1694 = $1691 + $1693;
              HEAPF64[$21>>3] = $1694;
              $1695 = +HEAPF64[$18>>3];
              $1696 = $630 * $1695;
              $1697 = +HEAPF64[$17>>3];
              $1698 = $615 * $1697;
              $1699 = $1696 + $1698;
              $1700 = +HEAPF64[$16>>3];
              $1701 = $1640 * $1700;
              $1702 = $1699 + $1701;
              HEAPF64[$22>>3] = $1702;
              $1703 = +HEAPF64[$8>>3];
              $1704 = $621 * $1703;
              $1705 = +HEAPF64[$9>>3];
              $1706 = $1649 * $1705;
              $1707 = $1704 + $1706;
              $1708 = +HEAPF64[$10>>3];
              $1709 = $1652 * $1708;
              $1710 = $1707 + $1709;
              HEAPF64[$23>>3] = $1710;
              $1711 = +HEAPF64[$13>>3];
              $1712 = $621 * $1711;
              $1713 = +HEAPF64[$14>>3];
              $1714 = $1652 * $1713;
              $1715 = $1712 + $1714;
              $1716 = +HEAPF64[$12>>3];
              $1717 = $1649 * $1716;
              $1718 = $1715 + $1717;
              HEAPF64[$24>>3] = $1718;
              $1719 = +HEAPF64[$18>>3];
              $1720 = $1649 * $1719;
              $1721 = +HEAPF64[$17>>3];
              $1722 = $1652 * $1721;
              $1723 = $1720 + $1722;
              $1724 = +HEAPF64[$16>>3];
              $1725 = $621 * $1724;
              $1726 = $1723 + $1725;
              HEAPF64[$25>>3] = $1726;
              $1727 = +HEAPF64[$31>>3];
              $1728 = (+__Z5IKabsd($1727));
              $1729 = $1728 < 9.9999999999999995E-7;
              do {
               if (!($1729)) {
                $1730 = (+__Z6IKsignd($1727));
                $1731 = (+__Z5IKabsd($1730));
                $1732 = $1731 < 9.9999999999999995E-7;
                if ($1732) {
                 break;
                }
                HEAP8[$323>>0] = 1;
                $4211 = +HEAPF64[$31>>3];
                $4212 = (+__Z6IKsignd($4211));
                __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x404,$4212,-1);
                $4213 = HEAP8[$324>>0]|0;
                $4214 = ($4213<<24>>24)==(0);
                if ($4214) {
                 break L7;
                }
                $4215 = +HEAPF64[$24>>3];
                $4216 = +HEAPF64[$23>>3];
                $4217 = -$4216;
                __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x405,$4215,$4217,1.9999999999999999E-6);
                $4218 = HEAP8[$325>>0]|0;
                $4219 = ($4218<<24>>24)==(0);
                if ($4219) {
                 break L7;
                }
                $4220 = +HEAPF64[$x404>>3];
                $4221 = $4220 * 1.5707963267949001;
                $4222 = $4221 + -1.5707963267949001;
                $4223 = +HEAPF64[$x405>>3];
                $4224 = $4223 + $4222;
                $4225 = (+__Z5IKsind($4224));
                $4226 = (+__Z5IKcosd($4224));
                $4227 = $4224 > 3.14159265358979;
                do {
                 if ($4227) {
                  $4228 = $4224 + -6.2831853071795898;
                  $4231 = $4228;
                 } else {
                  $4229 = $4224 < -3.14159265358979;
                  if (!($4229)) {
                   $4231 = $4224;
                   break;
                  }
                  $4230 = $4224 + 6.2831853071795898;
                  $4231 = $4230;
                 }
                } while(0);
                HEAP8[$326>>0] = 0;
                HEAP8[$327>>0] = -1;
                HEAPF64[$328>>3] = $4231;
                HEAPF64[$329>>3] = $4226;
                HEAPF64[$330>>3] = $4225;
                $4232 = +HEAPF64[$328>>3];
                $4233 = (+__Z5IKsind($4232));
                $4234 = (+__Z5IKcosd($4232));
                $4235 = +HEAPF64[$31>>3];
                $4236 = +HEAPF64[$103>>3];
                $4237 = +HEAPF64[$30>>3];
                $4238 = $4236 * $4237;
                $4239 = +HEAPF64[$102>>3];
                $4240 = +HEAPF64[$15>>3];
                $4241 = $4239 * $4240;
                $4242 = +HEAPF64[$11>>3];
                $4243 = $4239 * $4242;
                $4244 = $4233 * $4237;
                $4245 = $4234 * $4235;
                $4246 = +HEAPF64[$23>>3];
                $4247 = $4245 + $4246;
                $4248 = +HEAPF64[$24>>3];
                $4249 = +HEAPF64[$21>>3];
                $4250 = $4236 * $4249;
                $4251 = $4241 + $4250;
                $4252 = $4244 + $4251;
                $4253 = +HEAPF64[$20>>3];
                $4254 = $4239 * $4253;
                $4255 = $4236 * $4242;
                $4256 = $4254 - $4255;
                $4257 = $4256 - $4233;
                $4258 = $4239 * $4249;
                $4259 = $4258 - $4234;
                $4260 = $4236 * $4240;
                $4261 = $4259 - $4260;
                $4262 = $4239 * $4244;
                $4263 = $4262 + $4240;
                $4264 = $4234 * $4236;
                $4265 = $4264 + $4263;
                $4266 = $4236 * $4253;
                $4267 = $4243 + $4266;
                $4268 = $4234 * $4237;
                $4269 = $4267 - $4268;
                $4270 = -$4239;
                $4271 = $4237 * $4270;
                $4272 = $4234 * $4271;
                $4273 = $4272 + $4242;
                $4274 = $4233 * $4236;
                $4275 = $4274 + $4273;
                $4276 = $4233 * $4238;
                $4277 = $4234 * $4270;
                $4278 = $4276 + $4277;
                $4279 = $4278 + $4249;
                $4280 = $4236 * $4268;
                $4281 = $4233 * $4270;
                $4282 = $4281 - $4280;
                $4283 = $4282 + $4253;
                $4284 = $4237 * $4241;
                $4285 = $4233 + $4284;
                $4286 = $4235 * $4248;
                $4287 = $4285 - $4286;
                $4288 = $4238 * $4249;
                $4289 = $4287 + $4288;
                $4290 = $4235 * $4246;
                $4291 = $4237 * $4243;
                $4292 = $4291 - $4290;
                $4293 = $4238 * $4253;
                $4294 = $4292 + $4293;
                $4295 = $4294 - $4234;
                $4296 = (+__Z5IKabsd($4247));
                $4297 = $4296 > 5.0000000000000004E-6;
                if ($4297) {
                 break L7;
                }
                $4298 = $4233 * $4235;
                $4299 = $4248 - $4298;
                $4300 = (+__Z5IKabsd($4299));
                $4301 = $4300 > 5.0000000000000004E-6;
                if ($4301) {
                 break L7;
                }
                $4302 = (+__Z5IKabsd($4252));
                $4303 = $4302 > 5.0000000000000004E-6;
                if ($4303) {
                 break L7;
                }
                $4304 = (+__Z5IKabsd($4257));
                $4305 = $4304 > 5.0000000000000004E-6;
                if ($4305) {
                 break L7;
                }
                $4306 = (+__Z5IKabsd($4261));
                $4307 = $4306 > 5.0000000000000004E-6;
                if ($4307) {
                 break L7;
                }
                $4308 = (+__Z5IKabsd($4265));
                $4309 = $4308 > 5.0000000000000004E-6;
                if ($4309) {
                 break L7;
                }
                $4310 = (+__Z5IKabsd($4269));
                $4311 = $4310 > 5.0000000000000004E-6;
                if ($4311) {
                 break L7;
                }
                $4312 = (+__Z5IKabsd($4275));
                $4313 = $4312 > 5.0000000000000004E-6;
                if ($4313) {
                 break L7;
                }
                $4314 = (+__Z5IKabsd($4279));
                $4315 = $4314 > 5.0000000000000004E-6;
                if ($4315) {
                 break L7;
                }
                $4316 = (+__Z5IKabsd($4283));
                $4317 = $4316 > 5.0000000000000004E-6;
                if ($4317) {
                 break L7;
                }
                $4318 = (+__Z5IKabsd($4289));
                $4319 = $4318 > 5.0000000000000004E-6;
                if ($4319) {
                 break L7;
                }
                $4320 = (+__Z5IKabsd($4295));
                $4321 = $4320 > 5.0000000000000004E-6;
                if ($4321) {
                 break L7;
                }
                __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos151,7);
                $4322 = HEAP32[$vinfos151>>2]|0;
                $4323 = ((($4322)) + 17|0);
                HEAP8[$4323>>0] = 1;
                $4324 = +HEAPF64[$this>>3];
                $4325 = HEAP32[$vinfos151>>2]|0;
                $4326 = ((($4325)) + 8|0);
                HEAPF64[$4326>>3] = $4324;
                $4327 = HEAP8[$331>>0]|0;
                $4328 = HEAP32[$vinfos151>>2]|0;
                $4329 = ((($4328)) + 19|0);
                HEAP8[$4329>>0] = $4327;
                $4330 = HEAP8[$332>>0]|0;
                $4331 = HEAP32[$vinfos151>>2]|0;
                $4332 = ((($4331)) + 20|0);
                HEAP8[$4332>>0] = $4330;
                $4333 = HEAP8[$333>>0]|0;
                $4334 = HEAP32[$vinfos151>>2]|0;
                $4335 = ((($4334)) + 18|0);
                HEAP8[$4335>>0] = $4333;
                $4336 = HEAP32[$vinfos151>>2]|0;
                $4337 = ((($4336)) + 41|0);
                HEAP8[$4337>>0] = 1;
                $4338 = +HEAPF64[$334>>3];
                $4339 = HEAP32[$vinfos151>>2]|0;
                $4340 = ((($4339)) + 32|0);
                HEAPF64[$4340>>3] = $4338;
                $4341 = HEAP8[$335>>0]|0;
                $4342 = HEAP32[$vinfos151>>2]|0;
                $4343 = ((($4342)) + 43|0);
                HEAP8[$4343>>0] = $4341;
                $4344 = HEAP8[$336>>0]|0;
                $4345 = HEAP32[$vinfos151>>2]|0;
                $4346 = ((($4345)) + 44|0);
                HEAP8[$4346>>0] = $4344;
                $4347 = HEAP8[$337>>0]|0;
                $4348 = HEAP32[$vinfos151>>2]|0;
                $4349 = ((($4348)) + 42|0);
                HEAP8[$4349>>0] = $4347;
                $4350 = HEAP32[$vinfos151>>2]|0;
                $4351 = ((($4350)) + 65|0);
                HEAP8[$4351>>0] = 1;
                $4352 = +HEAPF64[$338>>3];
                $4353 = HEAP32[$vinfos151>>2]|0;
                $4354 = ((($4353)) + 56|0);
                HEAPF64[$4354>>3] = $4352;
                $4355 = HEAP8[$339>>0]|0;
                $4356 = HEAP32[$vinfos151>>2]|0;
                $4357 = ((($4356)) + 67|0);
                HEAP8[$4357>>0] = $4355;
                $4358 = HEAP8[$340>>0]|0;
                $4359 = HEAP32[$vinfos151>>2]|0;
                $4360 = ((($4359)) + 68|0);
                HEAP8[$4360>>0] = $4358;
                $4361 = HEAP8[$341>>0]|0;
                $4362 = HEAP32[$vinfos151>>2]|0;
                $4363 = ((($4362)) + 66|0);
                HEAP8[$4363>>0] = $4361;
                $4364 = HEAP32[$vinfos151>>2]|0;
                $4365 = ((($4364)) + 89|0);
                HEAP8[$4365>>0] = 1;
                $4366 = +HEAPF64[$342>>3];
                $4367 = HEAP32[$vinfos151>>2]|0;
                $4368 = ((($4367)) + 80|0);
                HEAPF64[$4368>>3] = $4366;
                $4369 = HEAP8[$343>>0]|0;
                $4370 = HEAP32[$vinfos151>>2]|0;
                $4371 = ((($4370)) + 91|0);
                HEAP8[$4371>>0] = $4369;
                $4372 = HEAP8[$344>>0]|0;
                $4373 = HEAP32[$vinfos151>>2]|0;
                $4374 = ((($4373)) + 92|0);
                HEAP8[$4374>>0] = $4372;
                $4375 = HEAP8[$345>>0]|0;
                $4376 = HEAP32[$vinfos151>>2]|0;
                $4377 = ((($4376)) + 90|0);
                HEAP8[$4377>>0] = $4375;
                $4378 = HEAP32[$vinfos151>>2]|0;
                $4379 = ((($4378)) + 113|0);
                HEAP8[$4379>>0] = 1;
                $4380 = +HEAPF64[$101>>3];
                $4381 = HEAP32[$vinfos151>>2]|0;
                $4382 = ((($4381)) + 104|0);
                HEAPF64[$4382>>3] = $4380;
                $4383 = HEAP8[$99>>0]|0;
                $4384 = HEAP32[$vinfos151>>2]|0;
                $4385 = ((($4384)) + 115|0);
                HEAP8[$4385>>0] = $4383;
                $4386 = HEAP8[$100>>0]|0;
                $4387 = HEAP32[$vinfos151>>2]|0;
                $4388 = ((($4387)) + 116|0);
                HEAP8[$4388>>0] = $4386;
                $4389 = HEAP8[$96>>0]|0;
                $4390 = HEAP32[$vinfos151>>2]|0;
                $4391 = ((($4390)) + 114|0);
                HEAP8[$4391>>0] = $4389;
                $4392 = HEAP32[$vinfos151>>2]|0;
                $4393 = ((($4392)) + 137|0);
                HEAP8[$4393>>0] = 1;
                $4394 = +HEAPF64[$29>>3];
                $4395 = HEAP32[$vinfos151>>2]|0;
                $4396 = ((($4395)) + 128|0);
                HEAPF64[$4396>>3] = $4394;
                $4397 = HEAP8[$27>>0]|0;
                $4398 = HEAP32[$vinfos151>>2]|0;
                $4399 = ((($4398)) + 139|0);
                HEAP8[$4399>>0] = $4397;
                $4400 = HEAP8[$28>>0]|0;
                $4401 = HEAP32[$vinfos151>>2]|0;
                $4402 = ((($4401)) + 140|0);
                HEAP8[$4402>>0] = $4400;
                $4403 = HEAP8[$26>>0]|0;
                $4404 = HEAP32[$vinfos151>>2]|0;
                $4405 = ((($4404)) + 138|0);
                HEAP8[$4405>>0] = $4403;
                $4406 = HEAP32[$vinfos151>>2]|0;
                $4407 = ((($4406)) + 161|0);
                HEAP8[$4407>>0] = 1;
                $4408 = +HEAPF64[$328>>3];
                $4409 = HEAP32[$vinfos151>>2]|0;
                $4410 = ((($4409)) + 152|0);
                HEAPF64[$4410>>3] = $4408;
                $4411 = HEAP8[$326>>0]|0;
                $4412 = HEAP32[$vinfos151>>2]|0;
                $4413 = ((($4412)) + 163|0);
                HEAP8[$4413>>0] = $4411;
                $4414 = HEAP8[$327>>0]|0;
                $4415 = HEAP32[$vinfos151>>2]|0;
                $4416 = ((($4415)) + 164|0);
                HEAP8[$4416>>0] = $4414;
                $4417 = HEAP8[$323>>0]|0;
                $4418 = HEAP32[$vinfos151>>2]|0;
                $4419 = ((($4418)) + 162|0);
                HEAP8[$4419>>0] = $4417;
                __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree152,0);
                $4420 = HEAP32[$solutions>>2]|0;
                $4421 = ((($4420)) + 8|0);
                $4422 = HEAP32[$4421>>2]|0;
                (FUNCTION_TABLE_iiii[$4422 & 31]($solutions,$vinfos151,$vfree152)|0);
                __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree152);
                __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos151);
                break L7;
               }
              } while(0);
              $1733 = +HEAPF64[$0>>3];
              $1734 = +HEAPF64[$1>>3];
              $1735 = +HEAPF64[$2>>3];
              $1736 = $1734 * $1735;
              $1737 = +HEAPF64[$4>>3];
              $1738 = +HEAPF64[$5>>3];
              $1739 = $1735 * $1737;
              $1740 = +HEAPF64[$7>>3];
              $1741 = $1735 * $1740;
              $1742 = $611 * $1740;
              $1743 = $611 * $1734;
              $1744 = $1733 * $1741;
              $1745 = $1743 + $1744;
              $1746 = $1736 * $1738;
              $1747 = $618 * $1740;
              $1748 = $1747 - $1746;
              $1749 = $1738 * $1741;
              $1750 = $618 * $1734;
              $1751 = $1750 + $1749;
              $1752 = $1733 * $1736;
              $1753 = $1742 - $1752;
              $1754 = +HEAPF64[$9>>3];
              $1755 = $1754 * $1753;
              $1756 = +HEAPF64[$10>>3];
              $1757 = $1756 * $1745;
              $1758 = $1755 + $1757;
              $1759 = +HEAPF64[$8>>3];
              $1760 = $626 * $1759;
              $1761 = $1760 + $1758;
              HEAPF64[$11>>3] = $1761;
              $1762 = +HEAPF64[$12>>3];
              $1763 = $1753 * $1762;
              $1764 = +HEAPF64[$14>>3];
              $1765 = $1745 * $1764;
              $1766 = $1763 + $1765;
              $1767 = +HEAPF64[$13>>3];
              $1768 = $626 * $1767;
              $1769 = $1766 + $1768;
              HEAPF64[$15>>3] = $1769;
              $1770 = +HEAPF64[$16>>3];
              $1771 = $626 * $1770;
              $1772 = +HEAPF64[$18>>3];
              $1773 = $1753 * $1772;
              $1774 = $1771 + $1773;
              $1775 = +HEAPF64[$17>>3];
              $1776 = $1745 * $1775;
              $1777 = $1774 + $1776;
              HEAPF64[$19>>3] = $1777;
              $1778 = +HEAPF64[$9>>3];
              $1779 = $630 * $1778;
              $1780 = +HEAPF64[$10>>3];
              $1781 = $615 * $1780;
              $1782 = $1779 + $1781;
              $1783 = +HEAPF64[$8>>3];
              $1784 = $1739 * $1783;
              $1785 = $1782 + $1784;
              HEAPF64[$20>>3] = $1785;
              $1786 = +HEAPF64[$13>>3];
              $1787 = $1739 * $1786;
              $1788 = +HEAPF64[$12>>3];
              $1789 = $630 * $1788;
              $1790 = $1787 + $1789;
              $1791 = +HEAPF64[$14>>3];
              $1792 = $615 * $1791;
              $1793 = $1790 + $1792;
              HEAPF64[$21>>3] = $1793;
              $1794 = +HEAPF64[$18>>3];
              $1795 = $630 * $1794;
              $1796 = +HEAPF64[$16>>3];
              $1797 = $1739 * $1796;
              $1798 = $1795 + $1797;
              $1799 = +HEAPF64[$17>>3];
              $1800 = $615 * $1799;
              $1801 = $1798 + $1800;
              HEAPF64[$22>>3] = $1801;
              $1802 = +HEAPF64[$9>>3];
              $1803 = $1748 * $1802;
              $1804 = +HEAPF64[$10>>3];
              $1805 = $1751 * $1804;
              $1806 = $1803 + $1805;
              $1807 = +HEAPF64[$8>>3];
              $1808 = $621 * $1807;
              $1809 = $1806 + $1808;
              HEAPF64[$23>>3] = $1809;
              $1810 = +HEAPF64[$12>>3];
              $1811 = $1748 * $1810;
              $1812 = +HEAPF64[$14>>3];
              $1813 = $1751 * $1812;
              $1814 = $1811 + $1813;
              $1815 = +HEAPF64[$13>>3];
              $1816 = $621 * $1815;
              $1817 = $1814 + $1816;
              HEAPF64[$24>>3] = $1817;
              $1818 = +HEAPF64[$16>>3];
              $1819 = $621 * $1818;
              $1820 = +HEAPF64[$18>>3];
              $1821 = $1748 * $1820;
              $1822 = $1819 + $1821;
              $1823 = +HEAPF64[$17>>3];
              $1824 = $1751 * $1823;
              $1825 = $1822 + $1824;
              HEAPF64[$25>>3] = $1825;
              $1826 = +HEAPF64[$103>>3];
              $1827 = (+__Z5IKabsd($1826));
              $1828 = $1827 < 9.9999999999999995E-7;
              do {
               if (!($1828)) {
                $1829 = +HEAPF64[$31>>3];
                $1830 = (+__Z5IKabsd($1829));
                $1831 = $1830 < 9.9999999999999995E-7;
                if ($1831) {
                 break;
                }
                HEAP8[$300>>0] = 1;
                $3965 = +HEAPF64[$31>>3];
                __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x392,$3965,-1);
                $3966 = HEAP8[$301>>0]|0;
                $3967 = ($3966<<24>>24)==(0);
                if ($3967) {
                 break L7;
                }
                $3968 = +HEAPF64[$x392>>3];
                $3969 = +HEAPF64[$103>>3];
                __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x393,$3969,-1);
                $3970 = HEAP8[$302>>0]|0;
                $3971 = ($3970<<24>>24)==(0);
                if ($3971) {
                 break L7;
                }
                $3972 = +HEAPF64[$x393>>3];
                $3973 = $3968 * $3972;
                $3974 = +HEAPF64[$11>>3];
                $3975 = +HEAPF64[$31>>3];
                $3976 = $3974 * $3975;
                $3977 = +HEAPF64[$102>>3];
                $3978 = +HEAPF64[$30>>3];
                $3979 = $3977 * $3978;
                $3980 = +HEAPF64[$23>>3];
                $3981 = $3979 * $3980;
                $3982 = -$3981;
                $3983 = $3982 - $3976;
                $3984 = $3973 * $3983;
                $3985 = (+__Z5IKabsd($3984));
                $3986 = $3985 < 1.9999999999999999E-6;
                do {
                 if ($3986) {
                  $3987 = $3968 * $3980;
                  $3988 = -$3987;
                  $3989 = (+__Z5IKabsd($3988));
                  $3990 = $3989 < 1.9999999999999999E-6;
                  if (!($3990)) {
                   break;
                  }
                  $3991 = (+__Z5IKsqrd($3984));
                  $3992 = (+__Z5IKsqrd($3988));
                  $3993 = $3991 + $3992;
                  $3994 = $3993 + -1.0;
                  $3995 = (+__Z5IKabsd($3994));
                  $3996 = !($3995 <= 1.9999999999999999E-6);
                  if (!($3996)) {
                   break L7;
                  }
                 }
                } while(0);
                $3997 = +HEAPF64[$x393>>3];
                $3998 = $3968 * $3997;
                $3999 = +HEAPF64[$11>>3];
                $4000 = +HEAPF64[$31>>3];
                $4001 = $3999 * $4000;
                $4002 = +HEAPF64[$102>>3];
                $4003 = +HEAPF64[$30>>3];
                $4004 = $4002 * $4003;
                $4005 = +HEAPF64[$23>>3];
                $4006 = $4004 * $4005;
                $4007 = -$4006;
                $4008 = $4007 - $4001;
                $4009 = $3998 * $4008;
                $4010 = $3968 * $4005;
                $4011 = -$4010;
                $4012 = (+__Z7IKatan2dd($4009,$4011));
                $4013 = (+__Z5IKsind($4012));
                $4014 = (+__Z5IKcosd($4012));
                $4015 = $4012 > 3.14159265358979;
                do {
                 if ($4015) {
                  $4016 = $4012 + -6.2831853071795898;
                  $4019 = $4016;
                 } else {
                  $4017 = $4012 < -3.14159265358979;
                  if (!($4017)) {
                   $4019 = $4012;
                   break;
                  }
                  $4018 = $4012 + 6.2831853071795898;
                  $4019 = $4018;
                 }
                } while(0);
                HEAP8[$303>>0] = 0;
                HEAP8[$304>>0] = -1;
                HEAPF64[$305>>3] = $4019;
                HEAPF64[$306>>3] = $4014;
                HEAPF64[$307>>3] = $4013;
                $4020 = +HEAPF64[$305>>3];
                $4021 = (+__Z5IKsind($4020));
                $4022 = (+__Z5IKcosd($4020));
                $4023 = +HEAPF64[$31>>3];
                $4024 = +HEAPF64[$103>>3];
                $4025 = +HEAPF64[$30>>3];
                $4026 = $4024 * $4025;
                $4027 = +HEAPF64[$102>>3];
                $4028 = +HEAPF64[$15>>3];
                $4029 = $4027 * $4028;
                $4030 = +HEAPF64[$11>>3];
                $4031 = $4027 * $4030;
                $4032 = $4021 * $4025;
                $4033 = $4022 * $4023;
                $4034 = +HEAPF64[$23>>3];
                $4035 = $4033 + $4034;
                $4036 = +HEAPF64[$24>>3];
                $4037 = +HEAPF64[$21>>3];
                $4038 = $4024 * $4037;
                $4039 = $4029 + $4038;
                $4040 = $4032 + $4039;
                $4041 = +HEAPF64[$20>>3];
                $4042 = $4027 * $4041;
                $4043 = $4024 * $4030;
                $4044 = $4042 - $4043;
                $4045 = $4044 - $4021;
                $4046 = $4024 * $4028;
                $4047 = $4027 * $4037;
                $4048 = $4047 - $4046;
                $4049 = $4048 - $4022;
                $4050 = $4027 * $4032;
                $4051 = $4050 + $4028;
                $4052 = $4022 * $4024;
                $4053 = $4052 + $4051;
                $4054 = $4024 * $4041;
                $4055 = $4031 + $4054;
                $4056 = $4022 * $4025;
                $4057 = $4055 - $4056;
                $4058 = -$4027;
                $4059 = $4025 * $4058;
                $4060 = $4022 * $4059;
                $4061 = $4030 + $4060;
                $4062 = $4021 * $4024;
                $4063 = $4062 + $4061;
                $4064 = $4021 * $4026;
                $4065 = $4064 + $4037;
                $4066 = $4022 * $4058;
                $4067 = $4066 + $4065;
                $4068 = $4021 * $4058;
                $4069 = $4068 + $4041;
                $4070 = $4024 * $4056;
                $4071 = $4069 - $4070;
                $4072 = $4026 * $4037;
                $4073 = $4023 * $4036;
                $4074 = $4072 - $4073;
                $4075 = $4025 * $4029;
                $4076 = $4075 + $4074;
                $4077 = $4021 + $4076;
                $4078 = $4025 * $4031;
                $4079 = $4078 - $4022;
                $4080 = $4023 * $4034;
                $4081 = $4079 - $4080;
                $4082 = $4026 * $4041;
                $4083 = $4081 + $4082;
                $4084 = (+__Z5IKabsd($4035));
                $4085 = $4084 > 5.0000000000000004E-6;
                if ($4085) {
                 break L7;
                }
                $4086 = $4021 * $4023;
                $4087 = $4036 - $4086;
                $4088 = (+__Z5IKabsd($4087));
                $4089 = $4088 > 5.0000000000000004E-6;
                if ($4089) {
                 break L7;
                }
                $4090 = (+__Z5IKabsd($4040));
                $4091 = $4090 > 5.0000000000000004E-6;
                if ($4091) {
                 break L7;
                }
                $4092 = (+__Z5IKabsd($4045));
                $4093 = $4092 > 5.0000000000000004E-6;
                if ($4093) {
                 break L7;
                }
                $4094 = (+__Z5IKabsd($4049));
                $4095 = $4094 > 5.0000000000000004E-6;
                if ($4095) {
                 break L7;
                }
                $4096 = (+__Z5IKabsd($4053));
                $4097 = $4096 > 5.0000000000000004E-6;
                if ($4097) {
                 break L7;
                }
                $4098 = (+__Z5IKabsd($4057));
                $4099 = $4098 > 5.0000000000000004E-6;
                if ($4099) {
                 break L7;
                }
                $4100 = (+__Z5IKabsd($4063));
                $4101 = $4100 > 5.0000000000000004E-6;
                if ($4101) {
                 break L7;
                }
                $4102 = (+__Z5IKabsd($4067));
                $4103 = $4102 > 5.0000000000000004E-6;
                if ($4103) {
                 break L7;
                }
                $4104 = (+__Z5IKabsd($4071));
                $4105 = $4104 > 5.0000000000000004E-6;
                if ($4105) {
                 break L7;
                }
                $4106 = (+__Z5IKabsd($4077));
                $4107 = $4106 > 5.0000000000000004E-6;
                if ($4107) {
                 break L7;
                }
                $4108 = (+__Z5IKabsd($4083));
                $4109 = $4108 > 5.0000000000000004E-6;
                if ($4109) {
                 break L7;
                }
                __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos141,7);
                $4110 = HEAP32[$vinfos141>>2]|0;
                $4111 = ((($4110)) + 17|0);
                HEAP8[$4111>>0] = 1;
                $4112 = +HEAPF64[$this>>3];
                $4113 = HEAP32[$vinfos141>>2]|0;
                $4114 = ((($4113)) + 8|0);
                HEAPF64[$4114>>3] = $4112;
                $4115 = HEAP8[$308>>0]|0;
                $4116 = HEAP32[$vinfos141>>2]|0;
                $4117 = ((($4116)) + 19|0);
                HEAP8[$4117>>0] = $4115;
                $4118 = HEAP8[$309>>0]|0;
                $4119 = HEAP32[$vinfos141>>2]|0;
                $4120 = ((($4119)) + 20|0);
                HEAP8[$4120>>0] = $4118;
                $4121 = HEAP8[$310>>0]|0;
                $4122 = HEAP32[$vinfos141>>2]|0;
                $4123 = ((($4122)) + 18|0);
                HEAP8[$4123>>0] = $4121;
                $4124 = HEAP32[$vinfos141>>2]|0;
                $4125 = ((($4124)) + 41|0);
                HEAP8[$4125>>0] = 1;
                $4126 = +HEAPF64[$311>>3];
                $4127 = HEAP32[$vinfos141>>2]|0;
                $4128 = ((($4127)) + 32|0);
                HEAPF64[$4128>>3] = $4126;
                $4129 = HEAP8[$312>>0]|0;
                $4130 = HEAP32[$vinfos141>>2]|0;
                $4131 = ((($4130)) + 43|0);
                HEAP8[$4131>>0] = $4129;
                $4132 = HEAP8[$313>>0]|0;
                $4133 = HEAP32[$vinfos141>>2]|0;
                $4134 = ((($4133)) + 44|0);
                HEAP8[$4134>>0] = $4132;
                $4135 = HEAP8[$314>>0]|0;
                $4136 = HEAP32[$vinfos141>>2]|0;
                $4137 = ((($4136)) + 42|0);
                HEAP8[$4137>>0] = $4135;
                $4138 = HEAP32[$vinfos141>>2]|0;
                $4139 = ((($4138)) + 65|0);
                HEAP8[$4139>>0] = 1;
                $4140 = +HEAPF64[$315>>3];
                $4141 = HEAP32[$vinfos141>>2]|0;
                $4142 = ((($4141)) + 56|0);
                HEAPF64[$4142>>3] = $4140;
                $4143 = HEAP8[$316>>0]|0;
                $4144 = HEAP32[$vinfos141>>2]|0;
                $4145 = ((($4144)) + 67|0);
                HEAP8[$4145>>0] = $4143;
                $4146 = HEAP8[$317>>0]|0;
                $4147 = HEAP32[$vinfos141>>2]|0;
                $4148 = ((($4147)) + 68|0);
                HEAP8[$4148>>0] = $4146;
                $4149 = HEAP8[$318>>0]|0;
                $4150 = HEAP32[$vinfos141>>2]|0;
                $4151 = ((($4150)) + 66|0);
                HEAP8[$4151>>0] = $4149;
                $4152 = HEAP32[$vinfos141>>2]|0;
                $4153 = ((($4152)) + 89|0);
                HEAP8[$4153>>0] = 1;
                $4154 = +HEAPF64[$319>>3];
                $4155 = HEAP32[$vinfos141>>2]|0;
                $4156 = ((($4155)) + 80|0);
                HEAPF64[$4156>>3] = $4154;
                $4157 = HEAP8[$320>>0]|0;
                $4158 = HEAP32[$vinfos141>>2]|0;
                $4159 = ((($4158)) + 91|0);
                HEAP8[$4159>>0] = $4157;
                $4160 = HEAP8[$321>>0]|0;
                $4161 = HEAP32[$vinfos141>>2]|0;
                $4162 = ((($4161)) + 92|0);
                HEAP8[$4162>>0] = $4160;
                $4163 = HEAP8[$322>>0]|0;
                $4164 = HEAP32[$vinfos141>>2]|0;
                $4165 = ((($4164)) + 90|0);
                HEAP8[$4165>>0] = $4163;
                $4166 = HEAP32[$vinfos141>>2]|0;
                $4167 = ((($4166)) + 113|0);
                HEAP8[$4167>>0] = 1;
                $4168 = +HEAPF64[$101>>3];
                $4169 = HEAP32[$vinfos141>>2]|0;
                $4170 = ((($4169)) + 104|0);
                HEAPF64[$4170>>3] = $4168;
                $4171 = HEAP8[$99>>0]|0;
                $4172 = HEAP32[$vinfos141>>2]|0;
                $4173 = ((($4172)) + 115|0);
                HEAP8[$4173>>0] = $4171;
                $4174 = HEAP8[$100>>0]|0;
                $4175 = HEAP32[$vinfos141>>2]|0;
                $4176 = ((($4175)) + 116|0);
                HEAP8[$4176>>0] = $4174;
                $4177 = HEAP8[$96>>0]|0;
                $4178 = HEAP32[$vinfos141>>2]|0;
                $4179 = ((($4178)) + 114|0);
                HEAP8[$4179>>0] = $4177;
                $4180 = HEAP32[$vinfos141>>2]|0;
                $4181 = ((($4180)) + 137|0);
                HEAP8[$4181>>0] = 1;
                $4182 = +HEAPF64[$29>>3];
                $4183 = HEAP32[$vinfos141>>2]|0;
                $4184 = ((($4183)) + 128|0);
                HEAPF64[$4184>>3] = $4182;
                $4185 = HEAP8[$27>>0]|0;
                $4186 = HEAP32[$vinfos141>>2]|0;
                $4187 = ((($4186)) + 139|0);
                HEAP8[$4187>>0] = $4185;
                $4188 = HEAP8[$28>>0]|0;
                $4189 = HEAP32[$vinfos141>>2]|0;
                $4190 = ((($4189)) + 140|0);
                HEAP8[$4190>>0] = $4188;
                $4191 = HEAP8[$26>>0]|0;
                $4192 = HEAP32[$vinfos141>>2]|0;
                $4193 = ((($4192)) + 138|0);
                HEAP8[$4193>>0] = $4191;
                $4194 = HEAP32[$vinfos141>>2]|0;
                $4195 = ((($4194)) + 161|0);
                HEAP8[$4195>>0] = 1;
                $4196 = +HEAPF64[$305>>3];
                $4197 = HEAP32[$vinfos141>>2]|0;
                $4198 = ((($4197)) + 152|0);
                HEAPF64[$4198>>3] = $4196;
                $4199 = HEAP8[$303>>0]|0;
                $4200 = HEAP32[$vinfos141>>2]|0;
                $4201 = ((($4200)) + 163|0);
                HEAP8[$4201>>0] = $4199;
                $4202 = HEAP8[$304>>0]|0;
                $4203 = HEAP32[$vinfos141>>2]|0;
                $4204 = ((($4203)) + 164|0);
                HEAP8[$4204>>0] = $4202;
                $4205 = HEAP8[$300>>0]|0;
                $4206 = HEAP32[$vinfos141>>2]|0;
                $4207 = ((($4206)) + 162|0);
                HEAP8[$4207>>0] = $4205;
                __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree142,0);
                $4208 = HEAP32[$solutions>>2]|0;
                $4209 = ((($4208)) + 8|0);
                $4210 = HEAP32[$4209>>2]|0;
                (FUNCTION_TABLE_iiii[$4210 & 31]($solutions,$vinfos141,$vfree142)|0);
                __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree142);
                __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos141);
                break L7;
               }
              } while(0);
              $1832 = +HEAPF64[$0>>3];
              $1833 = +HEAPF64[$1>>3];
              $1834 = +HEAPF64[$2>>3];
              $1835 = $1833 * $1834;
              $1836 = +HEAPF64[$4>>3];
              $1837 = +HEAPF64[$5>>3];
              $1838 = $1834 * $1836;
              $1839 = +HEAPF64[$7>>3];
              $1840 = $1834 * $1839;
              $1841 = $611 * $1839;
              $1842 = $1832 * $1840;
              $1843 = $611 * $1833;
              $1844 = $1843 + $1842;
              $1845 = $1835 * $1837;
              $1846 = $618 * $1839;
              $1847 = $1846 - $1845;
              $1848 = $618 * $1833;
              $1849 = $1837 * $1840;
              $1850 = $1848 + $1849;
              $1851 = $1832 * $1835;
              $1852 = $1841 - $1851;
              $1853 = +HEAPF64[$8>>3];
              $1854 = $626 * $1853;
              $1855 = +HEAPF64[$10>>3];
              $1856 = $1855 * $1844;
              $1857 = $1854 + $1856;
              $1858 = +HEAPF64[$9>>3];
              $1859 = $1852 * $1858;
              $1860 = $1859 + $1857;
              HEAPF64[$11>>3] = $1860;
              $1861 = +HEAPF64[$12>>3];
              $1862 = $1852 * $1861;
              $1863 = +HEAPF64[$13>>3];
              $1864 = $626 * $1863;
              $1865 = $1862 + $1864;
              $1866 = +HEAPF64[$14>>3];
              $1867 = $1844 * $1866;
              $1868 = $1865 + $1867;
              HEAPF64[$15>>3] = $1868;
              $1869 = +HEAPF64[$17>>3];
              $1870 = $1844 * $1869;
              $1871 = +HEAPF64[$18>>3];
              $1872 = $1852 * $1871;
              $1873 = $1870 + $1872;
              $1874 = +HEAPF64[$16>>3];
              $1875 = $626 * $1874;
              $1876 = $1873 + $1875;
              HEAPF64[$19>>3] = $1876;
              $1877 = +HEAPF64[$9>>3];
              $1878 = $630 * $1877;
              $1879 = +HEAPF64[$10>>3];
              $1880 = $615 * $1879;
              $1881 = $1878 + $1880;
              $1882 = +HEAPF64[$8>>3];
              $1883 = $1838 * $1882;
              $1884 = $1881 + $1883;
              HEAPF64[$20>>3] = $1884;
              $1885 = +HEAPF64[$13>>3];
              $1886 = $1838 * $1885;
              $1887 = +HEAPF64[$12>>3];
              $1888 = $630 * $1887;
              $1889 = $1886 + $1888;
              $1890 = +HEAPF64[$14>>3];
              $1891 = $615 * $1890;
              $1892 = $1889 + $1891;
              HEAPF64[$21>>3] = $1892;
              $1893 = +HEAPF64[$17>>3];
              $1894 = $615 * $1893;
              $1895 = +HEAPF64[$16>>3];
              $1896 = $1838 * $1895;
              $1897 = $1894 + $1896;
              $1898 = +HEAPF64[$18>>3];
              $1899 = $630 * $1898;
              $1900 = $1897 + $1899;
              HEAPF64[$22>>3] = $1900;
              $1901 = +HEAPF64[$8>>3];
              $1902 = $621 * $1901;
              $1903 = +HEAPF64[$10>>3];
              $1904 = $1850 * $1903;
              $1905 = $1902 + $1904;
              $1906 = +HEAPF64[$9>>3];
              $1907 = $1847 * $1906;
              $1908 = $1905 + $1907;
              HEAPF64[$23>>3] = $1908;
              $1909 = +HEAPF64[$14>>3];
              $1910 = $1850 * $1909;
              $1911 = +HEAPF64[$12>>3];
              $1912 = $1847 * $1911;
              $1913 = $1910 + $1912;
              $1914 = +HEAPF64[$13>>3];
              $1915 = $621 * $1914;
              $1916 = $1913 + $1915;
              HEAPF64[$24>>3] = $1916;
              $1917 = +HEAPF64[$18>>3];
              $1918 = $1847 * $1917;
              $1919 = +HEAPF64[$16>>3];
              $1920 = $621 * $1919;
              $1921 = $1918 + $1920;
              $1922 = +HEAPF64[$17>>3];
              $1923 = $1850 * $1922;
              $1924 = $1921 + $1923;
              HEAPF64[$25>>3] = $1924;
              $1925 = +HEAPF64[$102>>3];
              $1926 = +HEAPF64[$31>>3];
              $1927 = (+__Z5IKabsd($1925));
              $1928 = $1927 < 9.9999999999999995E-7;
              do {
               if (!($1928)) {
                $1929 = +HEAPF64[$30>>3];
                $1930 = (+__Z5IKabsd($1929));
                $1931 = $1930 < 9.9999999999999995E-7;
                if ($1931) {
                 break;
                }
                $1932 = (+__Z5IKabsd($1926));
                $1933 = $1932 < 9.9999999999999995E-7;
                if ($1933) {
                 break;
                }
                HEAP8[$276>>0] = 1;
                $3718 = +HEAPF64[$31>>3];
                __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x378,$3718,-1);
                $3719 = HEAP8[$277>>0]|0;
                $3720 = ($3719<<24>>24)==(0);
                if ($3720) {
                 break L7;
                }
                $3721 = +HEAPF64[$x378>>3];
                $3722 = +HEAPF64[$102>>3];
                __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x379,$3722,-1);
                $3723 = HEAP8[$278>>0]|0;
                $3724 = ($3723<<24>>24)==(0);
                if ($3724) {
                 break L7;
                }
                $3725 = +HEAPF64[$30>>3];
                __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x380,$3725,-1);
                $3726 = HEAP8[$279>>0]|0;
                $3727 = ($3726<<24>>24)==(0);
                if ($3727) {
                 break L7;
                }
                $3728 = +HEAPF64[$x379>>3];
                $3729 = $3721 * $3728;
                $3730 = +HEAPF64[$x380>>3];
                $3731 = $3729 * $3730;
                $3732 = +HEAPF64[$23>>3];
                $3733 = +HEAPF64[$103>>3];
                $3734 = $3732 * $3733;
                $3735 = +HEAPF64[$15>>3];
                $3736 = +HEAPF64[$31>>3];
                $3737 = $3735 * $3736;
                $3738 = $3734 - $3737;
                $3739 = $3731 * $3738;
                $3740 = (+__Z5IKabsd($3739));
                $3741 = $3740 < 1.9999999999999999E-6;
                do {
                 if ($3741) {
                  $3742 = $3721 * $3732;
                  $3743 = -$3742;
                  $3744 = (+__Z5IKabsd($3743));
                  $3745 = $3744 < 1.9999999999999999E-6;
                  if (!($3745)) {
                   break;
                  }
                  $3746 = (+__Z5IKsqrd($3739));
                  $3747 = (+__Z5IKsqrd($3743));
                  $3748 = $3746 + $3747;
                  $3749 = $3748 + -1.0;
                  $3750 = (+__Z5IKabsd($3749));
                  $3751 = !($3750 <= 1.9999999999999999E-6);
                  if (!($3751)) {
                   break L7;
                  }
                 }
                } while(0);
                $3752 = +HEAPF64[$x379>>3];
                $3753 = $3721 * $3752;
                $3754 = +HEAPF64[$x380>>3];
                $3755 = $3753 * $3754;
                $3756 = +HEAPF64[$23>>3];
                $3757 = +HEAPF64[$103>>3];
                $3758 = $3756 * $3757;
                $3759 = +HEAPF64[$15>>3];
                $3760 = +HEAPF64[$31>>3];
                $3761 = $3759 * $3760;
                $3762 = $3758 - $3761;
                $3763 = $3755 * $3762;
                $3764 = $3721 * $3756;
                $3765 = -$3764;
                $3766 = (+__Z7IKatan2dd($3763,$3765));
                $3767 = (+__Z5IKsind($3766));
                $3768 = (+__Z5IKcosd($3766));
                $3769 = $3766 > 3.14159265358979;
                do {
                 if ($3769) {
                  $3770 = $3766 + -6.2831853071795898;
                  $3773 = $3770;
                 } else {
                  $3771 = $3766 < -3.14159265358979;
                  if (!($3771)) {
                   $3773 = $3766;
                   break;
                  }
                  $3772 = $3766 + 6.2831853071795898;
                  $3773 = $3772;
                 }
                } while(0);
                HEAP8[$280>>0] = 0;
                HEAP8[$281>>0] = -1;
                HEAPF64[$282>>3] = $3773;
                HEAPF64[$283>>3] = $3768;
                HEAPF64[$284>>3] = $3767;
                $3774 = +HEAPF64[$282>>3];
                $3775 = (+__Z5IKsind($3774));
                $3776 = (+__Z5IKcosd($3774));
                $3777 = +HEAPF64[$31>>3];
                $3778 = +HEAPF64[$103>>3];
                $3779 = +HEAPF64[$30>>3];
                $3780 = $3778 * $3779;
                $3781 = +HEAPF64[$102>>3];
                $3782 = +HEAPF64[$15>>3];
                $3783 = $3781 * $3782;
                $3784 = +HEAPF64[$11>>3];
                $3785 = $3781 * $3784;
                $3786 = $3775 * $3779;
                $3787 = $3776 * $3777;
                $3788 = +HEAPF64[$23>>3];
                $3789 = $3787 + $3788;
                $3790 = +HEAPF64[$24>>3];
                $3791 = +HEAPF64[$21>>3];
                $3792 = $3778 * $3791;
                $3793 = $3783 + $3792;
                $3794 = $3786 + $3793;
                $3795 = +HEAPF64[$20>>3];
                $3796 = $3781 * $3795;
                $3797 = $3796 - $3775;
                $3798 = $3778 * $3784;
                $3799 = $3797 - $3798;
                $3800 = $3781 * $3791;
                $3801 = $3778 * $3782;
                $3802 = $3800 - $3801;
                $3803 = $3802 - $3776;
                $3804 = $3776 * $3778;
                $3805 = $3804 + $3782;
                $3806 = $3781 * $3786;
                $3807 = $3806 + $3805;
                $3808 = $3778 * $3795;
                $3809 = $3785 + $3808;
                $3810 = $3776 * $3779;
                $3811 = $3809 - $3810;
                $3812 = -$3781;
                $3813 = $3779 * $3812;
                $3814 = $3776 * $3813;
                $3815 = $3775 * $3778;
                $3816 = $3815 + $3814;
                $3817 = $3784 + $3816;
                $3818 = $3776 * $3812;
                $3819 = $3818 + $3791;
                $3820 = $3775 * $3780;
                $3821 = $3820 + $3819;
                $3822 = $3775 * $3812;
                $3823 = $3778 * $3810;
                $3824 = $3822 - $3823;
                $3825 = $3824 + $3795;
                $3826 = $3780 * $3791;
                $3827 = $3775 + $3826;
                $3828 = $3777 * $3790;
                $3829 = $3827 - $3828;
                $3830 = $3779 * $3783;
                $3831 = $3830 + $3829;
                $3832 = $3777 * $3788;
                $3833 = $3780 * $3795;
                $3834 = $3833 - $3832;
                $3835 = $3834 - $3776;
                $3836 = $3779 * $3785;
                $3837 = $3836 + $3835;
                $3838 = (+__Z5IKabsd($3789));
                $3839 = $3838 > 5.0000000000000004E-6;
                if ($3839) {
                 break L7;
                }
                $3840 = $3775 * $3777;
                $3841 = $3790 - $3840;
                $3842 = (+__Z5IKabsd($3841));
                $3843 = $3842 > 5.0000000000000004E-6;
                if ($3843) {
                 break L7;
                }
                $3844 = (+__Z5IKabsd($3794));
                $3845 = $3844 > 5.0000000000000004E-6;
                if ($3845) {
                 break L7;
                }
                $3846 = (+__Z5IKabsd($3799));
                $3847 = $3846 > 5.0000000000000004E-6;
                if ($3847) {
                 break L7;
                }
                $3848 = (+__Z5IKabsd($3803));
                $3849 = $3848 > 5.0000000000000004E-6;
                if ($3849) {
                 break L7;
                }
                $3850 = (+__Z5IKabsd($3807));
                $3851 = $3850 > 5.0000000000000004E-6;
                if ($3851) {
                 break L7;
                }
                $3852 = (+__Z5IKabsd($3811));
                $3853 = $3852 > 5.0000000000000004E-6;
                if ($3853) {
                 break L7;
                }
                $3854 = (+__Z5IKabsd($3817));
                $3855 = $3854 > 5.0000000000000004E-6;
                if ($3855) {
                 break L7;
                }
                $3856 = (+__Z5IKabsd($3821));
                $3857 = $3856 > 5.0000000000000004E-6;
                if ($3857) {
                 break L7;
                }
                $3858 = (+__Z5IKabsd($3825));
                $3859 = $3858 > 5.0000000000000004E-6;
                if ($3859) {
                 break L7;
                }
                $3860 = (+__Z5IKabsd($3831));
                $3861 = $3860 > 5.0000000000000004E-6;
                if ($3861) {
                 break L7;
                }
                $3862 = (+__Z5IKabsd($3837));
                $3863 = $3862 > 5.0000000000000004E-6;
                if ($3863) {
                 break L7;
                }
                __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos131,7);
                $3864 = HEAP32[$vinfos131>>2]|0;
                $3865 = ((($3864)) + 17|0);
                HEAP8[$3865>>0] = 1;
                $3866 = +HEAPF64[$this>>3];
                $3867 = HEAP32[$vinfos131>>2]|0;
                $3868 = ((($3867)) + 8|0);
                HEAPF64[$3868>>3] = $3866;
                $3869 = HEAP8[$285>>0]|0;
                $3870 = HEAP32[$vinfos131>>2]|0;
                $3871 = ((($3870)) + 19|0);
                HEAP8[$3871>>0] = $3869;
                $3872 = HEAP8[$286>>0]|0;
                $3873 = HEAP32[$vinfos131>>2]|0;
                $3874 = ((($3873)) + 20|0);
                HEAP8[$3874>>0] = $3872;
                $3875 = HEAP8[$287>>0]|0;
                $3876 = HEAP32[$vinfos131>>2]|0;
                $3877 = ((($3876)) + 18|0);
                HEAP8[$3877>>0] = $3875;
                $3878 = HEAP32[$vinfos131>>2]|0;
                $3879 = ((($3878)) + 41|0);
                HEAP8[$3879>>0] = 1;
                $3880 = +HEAPF64[$288>>3];
                $3881 = HEAP32[$vinfos131>>2]|0;
                $3882 = ((($3881)) + 32|0);
                HEAPF64[$3882>>3] = $3880;
                $3883 = HEAP8[$289>>0]|0;
                $3884 = HEAP32[$vinfos131>>2]|0;
                $3885 = ((($3884)) + 43|0);
                HEAP8[$3885>>0] = $3883;
                $3886 = HEAP8[$290>>0]|0;
                $3887 = HEAP32[$vinfos131>>2]|0;
                $3888 = ((($3887)) + 44|0);
                HEAP8[$3888>>0] = $3886;
                $3889 = HEAP8[$291>>0]|0;
                $3890 = HEAP32[$vinfos131>>2]|0;
                $3891 = ((($3890)) + 42|0);
                HEAP8[$3891>>0] = $3889;
                $3892 = HEAP32[$vinfos131>>2]|0;
                $3893 = ((($3892)) + 65|0);
                HEAP8[$3893>>0] = 1;
                $3894 = +HEAPF64[$292>>3];
                $3895 = HEAP32[$vinfos131>>2]|0;
                $3896 = ((($3895)) + 56|0);
                HEAPF64[$3896>>3] = $3894;
                $3897 = HEAP8[$293>>0]|0;
                $3898 = HEAP32[$vinfos131>>2]|0;
                $3899 = ((($3898)) + 67|0);
                HEAP8[$3899>>0] = $3897;
                $3900 = HEAP8[$294>>0]|0;
                $3901 = HEAP32[$vinfos131>>2]|0;
                $3902 = ((($3901)) + 68|0);
                HEAP8[$3902>>0] = $3900;
                $3903 = HEAP8[$295>>0]|0;
                $3904 = HEAP32[$vinfos131>>2]|0;
                $3905 = ((($3904)) + 66|0);
                HEAP8[$3905>>0] = $3903;
                $3906 = HEAP32[$vinfos131>>2]|0;
                $3907 = ((($3906)) + 89|0);
                HEAP8[$3907>>0] = 1;
                $3908 = +HEAPF64[$296>>3];
                $3909 = HEAP32[$vinfos131>>2]|0;
                $3910 = ((($3909)) + 80|0);
                HEAPF64[$3910>>3] = $3908;
                $3911 = HEAP8[$297>>0]|0;
                $3912 = HEAP32[$vinfos131>>2]|0;
                $3913 = ((($3912)) + 91|0);
                HEAP8[$3913>>0] = $3911;
                $3914 = HEAP8[$298>>0]|0;
                $3915 = HEAP32[$vinfos131>>2]|0;
                $3916 = ((($3915)) + 92|0);
                HEAP8[$3916>>0] = $3914;
                $3917 = HEAP8[$299>>0]|0;
                $3918 = HEAP32[$vinfos131>>2]|0;
                $3919 = ((($3918)) + 90|0);
                HEAP8[$3919>>0] = $3917;
                $3920 = HEAP32[$vinfos131>>2]|0;
                $3921 = ((($3920)) + 113|0);
                HEAP8[$3921>>0] = 1;
                $3922 = +HEAPF64[$101>>3];
                $3923 = HEAP32[$vinfos131>>2]|0;
                $3924 = ((($3923)) + 104|0);
                HEAPF64[$3924>>3] = $3922;
                $3925 = HEAP8[$99>>0]|0;
                $3926 = HEAP32[$vinfos131>>2]|0;
                $3927 = ((($3926)) + 115|0);
                HEAP8[$3927>>0] = $3925;
                $3928 = HEAP8[$100>>0]|0;
                $3929 = HEAP32[$vinfos131>>2]|0;
                $3930 = ((($3929)) + 116|0);
                HEAP8[$3930>>0] = $3928;
                $3931 = HEAP8[$96>>0]|0;
                $3932 = HEAP32[$vinfos131>>2]|0;
                $3933 = ((($3932)) + 114|0);
                HEAP8[$3933>>0] = $3931;
                $3934 = HEAP32[$vinfos131>>2]|0;
                $3935 = ((($3934)) + 137|0);
                HEAP8[$3935>>0] = 1;
                $3936 = +HEAPF64[$29>>3];
                $3937 = HEAP32[$vinfos131>>2]|0;
                $3938 = ((($3937)) + 128|0);
                HEAPF64[$3938>>3] = $3936;
                $3939 = HEAP8[$27>>0]|0;
                $3940 = HEAP32[$vinfos131>>2]|0;
                $3941 = ((($3940)) + 139|0);
                HEAP8[$3941>>0] = $3939;
                $3942 = HEAP8[$28>>0]|0;
                $3943 = HEAP32[$vinfos131>>2]|0;
                $3944 = ((($3943)) + 140|0);
                HEAP8[$3944>>0] = $3942;
                $3945 = HEAP8[$26>>0]|0;
                $3946 = HEAP32[$vinfos131>>2]|0;
                $3947 = ((($3946)) + 138|0);
                HEAP8[$3947>>0] = $3945;
                $3948 = HEAP32[$vinfos131>>2]|0;
                $3949 = ((($3948)) + 161|0);
                HEAP8[$3949>>0] = 1;
                $3950 = +HEAPF64[$282>>3];
                $3951 = HEAP32[$vinfos131>>2]|0;
                $3952 = ((($3951)) + 152|0);
                HEAPF64[$3952>>3] = $3950;
                $3953 = HEAP8[$280>>0]|0;
                $3954 = HEAP32[$vinfos131>>2]|0;
                $3955 = ((($3954)) + 163|0);
                HEAP8[$3955>>0] = $3953;
                $3956 = HEAP8[$281>>0]|0;
                $3957 = HEAP32[$vinfos131>>2]|0;
                $3958 = ((($3957)) + 164|0);
                HEAP8[$3958>>0] = $3956;
                $3959 = HEAP8[$276>>0]|0;
                $3960 = HEAP32[$vinfos131>>2]|0;
                $3961 = ((($3960)) + 162|0);
                HEAP8[$3961>>0] = $3959;
                __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree132,0);
                $3962 = HEAP32[$solutions>>2]|0;
                $3963 = ((($3962)) + 8|0);
                $3964 = HEAP32[$3963>>2]|0;
                (FUNCTION_TABLE_iiii[$3964 & 31]($solutions,$vinfos131,$vfree132)|0);
                __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree132);
                __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos131);
                break L7;
               }
              } while(0);
              $1934 = +HEAPF64[$25>>3];
              $1935 = +HEAPF64[$30>>3];
              $1936 = +HEAPF64[$31>>3];
              $1937 = +HEAPF64[$22>>3];
              $1938 = $1937 - $1936;
              $1939 = +HEAPF64[$101>>3];
              $1940 = $1939 + -1.5707963267949001;
              $1941 = (+__Z5IKabsd($1940));
              $1942 = $1941 + 3.14159265358979;
              $1943 = (+__Z6IKfmoddd($1942,6.2831853071795898));
              $1944 = $1943 + -3.14159265358979;
              $1945 = +HEAPF64[$19>>3];
              $1946 = -$1934;
              $1947 = $1936 * $1946;
              $1948 = $1935 * $1937;
              $1949 = $1947 + $1948;
              $1950 = +HEAPF64[$23>>3];
              $1951 = $1935 * $1950;
              $1952 = +HEAPF64[$20>>3];
              $1953 = $1936 * $1952;
              $1954 = -$1953;
              $1955 = $1954 - $1951;
              $1956 = +HEAPF64[$24>>3];
              $1957 = $1935 * $1956;
              $1958 = +HEAPF64[$21>>3];
              $1959 = $1936 * $1958;
              $1960 = -$1959;
              $1961 = $1960 - $1957;
              $1962 = $1935 * $1946;
              $1963 = $1962 + 1.0;
              $1964 = $1936 * $1937;
              $1965 = $1963 - $1964;
              $1966 = (+__Z5IKabsd($1944));
              $1967 = $1966 < 9.9999999999999995E-7;
              do {
               if ($1967) {
                $1968 = $1934 - $1935;
                $1969 = (+__Z5IKabsd($1968));
                $1970 = $1969 < 9.9999999999999995E-7;
                if (!($1970)) {
                 break;
                }
                $1971 = (+__Z5IKabsd($1945));
                $1972 = $1971 < 9.9999999999999995E-7;
                if (!($1972)) {
                 break;
                }
                $1973 = (+__Z5IKabsd($1938));
                $1974 = $1973 < 9.9999999999999995E-7;
                if (!($1974)) {
                 break;
                }
                $1975 = (+__Z5IKabsd($1949));
                $1976 = $1975 < 9.9999999999999995E-7;
                if (!($1976)) {
                 break;
                }
                $1977 = (+__Z5IKabsd($1955));
                $1978 = $1977 < 9.9999999999999995E-7;
                if (!($1978)) {
                 break;
                }
                $1979 = (+__Z5IKabsd($1961));
                $1980 = $1979 < 9.9999999999999995E-7;
                if (!($1980)) {
                 break;
                }
                $1981 = (+__Z5IKabsd($1965));
                $1982 = $1981 < 9.9999999999999995E-7;
                if (!($1982)) {
                 break;
                }
                HEAP8[$104>>0] = 1;
                $1983 = +HEAPF64[$24>>3];
                $1984 = +HEAPF64[$23>>3];
                $1985 = -$1984;
                __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x307,$1983,$1985,1.9999999999999999E-6);
                $1986 = HEAP8[$105>>0]|0;
                $1987 = ($1986<<24>>24)==(0);
                if ($1987) {
                 break L7;
                }
                $1988 = +HEAPF64[$22>>3];
                $1989 = (+__Z6IKsignd($1988));
                __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x308,$1989,-1);
                $1990 = HEAP8[$106>>0]|0;
                $1991 = ($1990<<24>>24)==(0);
                if ($1991) {
                 break L7;
                }
                $1992 = +HEAPF64[$x307>>3];
                $1993 = $1992 + -1.5707963267949001;
                $1994 = +HEAPF64[$x308>>3];
                $1995 = $1994 * 1.5707963267949001;
                $1996 = $1993 + $1995;
                $1997 = (+__Z5IKsind($1996));
                $1998 = (+__Z5IKcosd($1996));
                $1999 = $1996 > 3.14159265358979;
                do {
                 if ($1999) {
                  $2000 = $1996 + -6.2831853071795898;
                  $2003 = $2000;
                 } else {
                  $2001 = $1996 < -3.14159265358979;
                  if (!($2001)) {
                   $2003 = $1996;
                   break;
                  }
                  $2002 = $1996 + 6.2831853071795898;
                  $2003 = $2002;
                 }
                } while(0);
                HEAP8[$107>>0] = 0;
                HEAP8[$108>>0] = -1;
                HEAPF64[$109>>3] = $2003;
                HEAPF64[$110>>3] = $1998;
                HEAPF64[$111>>3] = $1997;
                $2004 = +HEAPF64[$109>>3];
                $2005 = (+__Z5IKsind($2004));
                $2006 = (+__Z5IKcosd($2004));
                $2007 = +HEAPF64[$22>>3];
                $2008 = $2006 * $2007;
                $2009 = +HEAPF64[$23>>3];
                $2010 = $2008 + $2009;
                $2011 = +HEAPF64[$25>>3];
                $2012 = +HEAPF64[$21>>3];
                $2013 = +HEAPF64[$24>>3];
                $2014 = $2005 * $2007;
                $2015 = $2013 - $2014;
                $2016 = $2006 * $2011;
                $2017 = +HEAPF64[$20>>3];
                $2018 = $2017 - $2016;
                $2019 = +HEAPF64[$11>>3];
                $2020 = -$2019;
                $2021 = $2020 - $2005;
                $2022 = -$2006;
                $2023 = +HEAPF64[$15>>3];
                $2024 = -$2023;
                $2025 = $2024 - $2006;
                $2026 = $2007 * $2013;
                $2027 = $2005 - $2026;
                $2028 = $2011 * $2012;
                $2029 = $2028 + $2027;
                $2030 = $2007 * $2009;
                $2031 = $2022 - $2030;
                $2032 = $2011 * $2017;
                $2033 = $2031 + $2032;
                $2034 = (+__Z5IKabsd($2010));
                $2035 = $2034 > 5.0000000000000004E-6;
                if ($2035) {
                 break L7;
                }
                $2036 = $2005 * $2011;
                $2037 = $2036 + $2012;
                $2038 = (+__Z5IKabsd($2037));
                $2039 = $2038 > 5.0000000000000004E-6;
                if ($2039) {
                 break L7;
                }
                $2040 = (+__Z5IKabsd($2015));
                $2041 = $2040 > 5.0000000000000004E-6;
                if ($2041) {
                 break L7;
                }
                $2042 = (+__Z5IKabsd($2018));
                $2043 = $2042 > 5.0000000000000004E-6;
                if ($2043) {
                 break L7;
                }
                $2044 = (+__Z5IKabsd($2021));
                $2045 = $2044 > 5.0000000000000004E-6;
                if ($2045) {
                 break L7;
                }
                $2046 = (+__Z5IKabsd($2025));
                $2047 = $2046 > 5.0000000000000004E-6;
                if ($2047) {
                 break L7;
                }
                $2048 = (+__Z5IKabsd($2029));
                $2049 = $2048 > 5.0000000000000004E-6;
                if ($2049) {
                 break L7;
                }
                $2050 = (+__Z5IKabsd($2033));
                $2051 = $2050 > 5.0000000000000004E-6;
                if ($2051) {
                 break L7;
                }
                __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos43,7);
                $2052 = HEAP32[$vinfos43>>2]|0;
                $2053 = ((($2052)) + 17|0);
                HEAP8[$2053>>0] = 1;
                $2054 = +HEAPF64[$this>>3];
                $2055 = HEAP32[$vinfos43>>2]|0;
                $2056 = ((($2055)) + 8|0);
                HEAPF64[$2056>>3] = $2054;
                $2057 = HEAP8[$112>>0]|0;
                $2058 = HEAP32[$vinfos43>>2]|0;
                $2059 = ((($2058)) + 19|0);
                HEAP8[$2059>>0] = $2057;
                $2060 = HEAP8[$113>>0]|0;
                $2061 = HEAP32[$vinfos43>>2]|0;
                $2062 = ((($2061)) + 20|0);
                HEAP8[$2062>>0] = $2060;
                $2063 = HEAP8[$114>>0]|0;
                $2064 = HEAP32[$vinfos43>>2]|0;
                $2065 = ((($2064)) + 18|0);
                HEAP8[$2065>>0] = $2063;
                $2066 = HEAP32[$vinfos43>>2]|0;
                $2067 = ((($2066)) + 41|0);
                HEAP8[$2067>>0] = 1;
                $2068 = +HEAPF64[$115>>3];
                $2069 = HEAP32[$vinfos43>>2]|0;
                $2070 = ((($2069)) + 32|0);
                HEAPF64[$2070>>3] = $2068;
                $2071 = HEAP8[$116>>0]|0;
                $2072 = HEAP32[$vinfos43>>2]|0;
                $2073 = ((($2072)) + 43|0);
                HEAP8[$2073>>0] = $2071;
                $2074 = HEAP8[$117>>0]|0;
                $2075 = HEAP32[$vinfos43>>2]|0;
                $2076 = ((($2075)) + 44|0);
                HEAP8[$2076>>0] = $2074;
                $2077 = HEAP8[$118>>0]|0;
                $2078 = HEAP32[$vinfos43>>2]|0;
                $2079 = ((($2078)) + 42|0);
                HEAP8[$2079>>0] = $2077;
                $2080 = HEAP32[$vinfos43>>2]|0;
                $2081 = ((($2080)) + 65|0);
                HEAP8[$2081>>0] = 1;
                $2082 = +HEAPF64[$119>>3];
                $2083 = HEAP32[$vinfos43>>2]|0;
                $2084 = ((($2083)) + 56|0);
                HEAPF64[$2084>>3] = $2082;
                $2085 = HEAP8[$120>>0]|0;
                $2086 = HEAP32[$vinfos43>>2]|0;
                $2087 = ((($2086)) + 67|0);
                HEAP8[$2087>>0] = $2085;
                $2088 = HEAP8[$121>>0]|0;
                $2089 = HEAP32[$vinfos43>>2]|0;
                $2090 = ((($2089)) + 68|0);
                HEAP8[$2090>>0] = $2088;
                $2091 = HEAP8[$122>>0]|0;
                $2092 = HEAP32[$vinfos43>>2]|0;
                $2093 = ((($2092)) + 66|0);
                HEAP8[$2093>>0] = $2091;
                $2094 = HEAP32[$vinfos43>>2]|0;
                $2095 = ((($2094)) + 89|0);
                HEAP8[$2095>>0] = 1;
                $2096 = +HEAPF64[$123>>3];
                $2097 = HEAP32[$vinfos43>>2]|0;
                $2098 = ((($2097)) + 80|0);
                HEAPF64[$2098>>3] = $2096;
                $2099 = HEAP8[$124>>0]|0;
                $2100 = HEAP32[$vinfos43>>2]|0;
                $2101 = ((($2100)) + 91|0);
                HEAP8[$2101>>0] = $2099;
                $2102 = HEAP8[$125>>0]|0;
                $2103 = HEAP32[$vinfos43>>2]|0;
                $2104 = ((($2103)) + 92|0);
                HEAP8[$2104>>0] = $2102;
                $2105 = HEAP8[$126>>0]|0;
                $2106 = HEAP32[$vinfos43>>2]|0;
                $2107 = ((($2106)) + 90|0);
                HEAP8[$2107>>0] = $2105;
                $2108 = HEAP32[$vinfos43>>2]|0;
                $2109 = ((($2108)) + 113|0);
                HEAP8[$2109>>0] = 1;
                $2110 = +HEAPF64[$101>>3];
                $2111 = HEAP32[$vinfos43>>2]|0;
                $2112 = ((($2111)) + 104|0);
                HEAPF64[$2112>>3] = $2110;
                $2113 = HEAP8[$99>>0]|0;
                $2114 = HEAP32[$vinfos43>>2]|0;
                $2115 = ((($2114)) + 115|0);
                HEAP8[$2115>>0] = $2113;
                $2116 = HEAP8[$100>>0]|0;
                $2117 = HEAP32[$vinfos43>>2]|0;
                $2118 = ((($2117)) + 116|0);
                HEAP8[$2118>>0] = $2116;
                $2119 = HEAP8[$96>>0]|0;
                $2120 = HEAP32[$vinfos43>>2]|0;
                $2121 = ((($2120)) + 114|0);
                HEAP8[$2121>>0] = $2119;
                $2122 = HEAP32[$vinfos43>>2]|0;
                $2123 = ((($2122)) + 137|0);
                HEAP8[$2123>>0] = 1;
                $2124 = +HEAPF64[$29>>3];
                $2125 = HEAP32[$vinfos43>>2]|0;
                $2126 = ((($2125)) + 128|0);
                HEAPF64[$2126>>3] = $2124;
                $2127 = HEAP8[$27>>0]|0;
                $2128 = HEAP32[$vinfos43>>2]|0;
                $2129 = ((($2128)) + 139|0);
                HEAP8[$2129>>0] = $2127;
                $2130 = HEAP8[$28>>0]|0;
                $2131 = HEAP32[$vinfos43>>2]|0;
                $2132 = ((($2131)) + 140|0);
                HEAP8[$2132>>0] = $2130;
                $2133 = HEAP8[$26>>0]|0;
                $2134 = HEAP32[$vinfos43>>2]|0;
                $2135 = ((($2134)) + 138|0);
                HEAP8[$2135>>0] = $2133;
                $2136 = HEAP32[$vinfos43>>2]|0;
                $2137 = ((($2136)) + 161|0);
                HEAP8[$2137>>0] = 1;
                $2138 = +HEAPF64[$109>>3];
                $2139 = HEAP32[$vinfos43>>2]|0;
                $2140 = ((($2139)) + 152|0);
                HEAPF64[$2140>>3] = $2138;
                $2141 = HEAP8[$107>>0]|0;
                $2142 = HEAP32[$vinfos43>>2]|0;
                $2143 = ((($2142)) + 163|0);
                HEAP8[$2143>>0] = $2141;
                $2144 = HEAP8[$108>>0]|0;
                $2145 = HEAP32[$vinfos43>>2]|0;
                $2146 = ((($2145)) + 164|0);
                HEAP8[$2146>>0] = $2144;
                $2147 = HEAP8[$104>>0]|0;
                $2148 = HEAP32[$vinfos43>>2]|0;
                $2149 = ((($2148)) + 162|0);
                HEAP8[$2149>>0] = $2147;
                __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree44,0);
                $2150 = HEAP32[$solutions>>2]|0;
                $2151 = ((($2150)) + 8|0);
                $2152 = HEAP32[$2151>>2]|0;
                (FUNCTION_TABLE_iiii[$2152 & 31]($solutions,$vinfos43,$vfree44)|0);
                __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree44);
                __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos43);
                break L7;
               }
              } while(0);
              $2153 = +HEAPF64[$25>>3];
              $2154 = +HEAPF64[$30>>3];
              $2155 = +HEAPF64[$31>>3];
              $2156 = +HEAPF64[$101>>3];
              $2157 = $2156 + 1.5707963267949001;
              $2158 = (+__Z5IKabsd($2157));
              $2159 = $2158 + 3.14159265358979;
              $2160 = (+__Z6IKfmoddd($2159,6.2831853071795898));
              $2161 = $2160 + -3.14159265358979;
              $2162 = +HEAPF64[$19>>3];
              $2163 = +HEAPF64[$22>>3];
              $2164 = $2155 + $2163;
              $2165 = -$2163;
              $2166 = $2165 - $2155;
              $2167 = -$2153;
              $2168 = $2155 * $2167;
              $2169 = $2154 * $2165;
              $2170 = $2168 + $2169;
              $2171 = +HEAPF64[$20>>3];
              $2172 = $2155 * $2171;
              $2173 = +HEAPF64[$23>>3];
              $2174 = $2154 * $2173;
              $2175 = $2172 - $2174;
              $2176 = +HEAPF64[$24>>3];
              $2177 = $2154 * $2176;
              $2178 = +HEAPF64[$21>>3];
              $2179 = $2155 * $2178;
              $2180 = $2179 - $2177;
              $2181 = $2155 * $2163;
              $2182 = $2181 + 1.0;
              $2183 = $2154 * $2167;
              $2184 = $2183 + $2182;
              $2185 = (+__Z5IKabsd($2161));
              $2186 = $2185 < 9.9999999999999995E-7;
              do {
               if ($2186) {
                $2187 = $2153 - $2154;
                $2188 = (+__Z5IKabsd($2187));
                $2189 = $2188 < 9.9999999999999995E-7;
                if (!($2189)) {
                 break;
                }
                $2190 = (+__Z5IKabsd($2162));
                $2191 = $2190 < 9.9999999999999995E-7;
                if (!($2191)) {
                 break;
                }
                $2192 = (+__Z5IKabsd($2164));
                $2193 = $2192 < 9.9999999999999995E-7;
                if (!($2193)) {
                 break;
                }
                $2194 = (+__Z5IKabsd($2166));
                $2195 = $2194 < 9.9999999999999995E-7;
                if (!($2195)) {
                 break;
                }
                $2196 = (+__Z5IKabsd($2170));
                $2197 = $2196 < 9.9999999999999995E-7;
                if (!($2197)) {
                 break;
                }
                $2198 = (+__Z5IKabsd($2175));
                $2199 = $2198 < 9.9999999999999995E-7;
                if (!($2199)) {
                 break;
                }
                $2200 = (+__Z5IKabsd($2180));
                $2201 = $2200 < 9.9999999999999995E-7;
                if (!($2201)) {
                 break;
                }
                $2202 = (+__Z5IKabsd($2184));
                $2203 = $2202 < 9.9999999999999995E-7;
                if (!($2203)) {
                 break;
                }
                HEAP8[$127>>0] = 1;
                $2204 = +HEAPF64[$11>>3];
                $2205 = (+__Z5IKabsd($2204));
                $2206 = $2205 < 1.9999999999999999E-6;
                do {
                 if ($2206) {
                  $2207 = +HEAPF64[$15>>3];
                  $2208 = (+__Z5IKabsd($2207));
                  $2209 = $2208 < 1.9999999999999999E-6;
                  if (!($2209)) {
                   break;
                  }
                  $2210 = (+__Z5IKsqrd($2204));
                  $2211 = (+__Z5IKsqrd($2207));
                  $2212 = $2210 + $2211;
                  $2213 = $2212 + -1.0;
                  $2214 = (+__Z5IKabsd($2213));
                  $2215 = !($2214 <= 1.9999999999999999E-6);
                  if (!($2215)) {
                   break L7;
                  }
                 }
                } while(0);
                $2216 = +HEAPF64[$11>>3];
                $2217 = +HEAPF64[$15>>3];
                $2218 = (+__Z7IKatan2dd($2216,$2217));
                $2219 = (+__Z5IKsind($2218));
                $2220 = (+__Z5IKcosd($2218));
                $2221 = $2218 > 3.14159265358979;
                do {
                 if ($2221) {
                  $2222 = $2218 + -6.2831853071795898;
                  $2225 = $2222;
                 } else {
                  $2223 = $2218 < -3.14159265358979;
                  if (!($2223)) {
                   $2225 = $2218;
                   break;
                  }
                  $2224 = $2218 + 6.2831853071795898;
                  $2225 = $2224;
                 }
                } while(0);
                HEAP8[$128>>0] = 0;
                HEAP8[$129>>0] = -1;
                HEAPF64[$130>>3] = $2225;
                HEAPF64[$131>>3] = $2220;
                HEAPF64[$132>>3] = $2219;
                $2226 = +HEAPF64[$130>>3];
                $2227 = (+__Z5IKsind($2226));
                $2228 = (+__Z5IKcosd($2226));
                $2229 = +HEAPF64[$25>>3];
                $2230 = +HEAPF64[$22>>3];
                $2231 = $2227 * $2230;
                $2232 = +HEAPF64[$24>>3];
                $2233 = $2231 + $2232;
                $2234 = +HEAPF64[$15>>3];
                $2235 = $2234 - $2228;
                $2236 = $2228 * $2230;
                $2237 = +HEAPF64[$23>>3];
                $2238 = $2237 - $2236;
                $2239 = +HEAPF64[$21>>3];
                $2240 = $2227 * $2229;
                $2241 = $2240 - $2239;
                $2242 = +HEAPF64[$20>>3];
                $2243 = $2228 * $2229;
                $2244 = -$2243;
                $2245 = $2244 - $2242;
                $2246 = $2229 * $2239;
                $2247 = $2227 - $2246;
                $2248 = $2230 * $2232;
                $2249 = $2248 + $2247;
                $2250 = $2230 * $2237;
                $2251 = $2229 * $2242;
                $2252 = $2250 - $2251;
                $2253 = $2252 - $2228;
                $2254 = (+__Z5IKabsd($2233));
                $2255 = $2254 > 5.0000000000000004E-6;
                if ($2255) {
                 break L7;
                }
                $2256 = +HEAPF64[$11>>3];
                $2257 = $2256 - $2227;
                $2258 = (+__Z5IKabsd($2257));
                $2259 = $2258 > 5.0000000000000004E-6;
                if ($2259) {
                 break L7;
                }
                $2260 = (+__Z5IKabsd($2235));
                $2261 = $2260 > 5.0000000000000004E-6;
                if ($2261) {
                 break L7;
                }
                $2262 = (+__Z5IKabsd($2238));
                $2263 = $2262 > 5.0000000000000004E-6;
                if ($2263) {
                 break L7;
                }
                $2264 = (+__Z5IKabsd($2241));
                $2265 = $2264 > 5.0000000000000004E-6;
                if ($2265) {
                 break L7;
                }
                $2266 = (+__Z5IKabsd($2245));
                $2267 = $2266 > 5.0000000000000004E-6;
                if ($2267) {
                 break L7;
                }
                $2268 = (+__Z5IKabsd($2249));
                $2269 = $2268 > 5.0000000000000004E-6;
                if ($2269) {
                 break L7;
                }
                $2270 = (+__Z5IKabsd($2253));
                $2271 = $2270 > 5.0000000000000004E-6;
                if ($2271) {
                 break L7;
                }
                __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos54,7);
                $2272 = HEAP32[$vinfos54>>2]|0;
                $2273 = ((($2272)) + 17|0);
                HEAP8[$2273>>0] = 1;
                $2274 = +HEAPF64[$this>>3];
                $2275 = HEAP32[$vinfos54>>2]|0;
                $2276 = ((($2275)) + 8|0);
                HEAPF64[$2276>>3] = $2274;
                $2277 = HEAP8[$133>>0]|0;
                $2278 = HEAP32[$vinfos54>>2]|0;
                $2279 = ((($2278)) + 19|0);
                HEAP8[$2279>>0] = $2277;
                $2280 = HEAP8[$134>>0]|0;
                $2281 = HEAP32[$vinfos54>>2]|0;
                $2282 = ((($2281)) + 20|0);
                HEAP8[$2282>>0] = $2280;
                $2283 = HEAP8[$135>>0]|0;
                $2284 = HEAP32[$vinfos54>>2]|0;
                $2285 = ((($2284)) + 18|0);
                HEAP8[$2285>>0] = $2283;
                $2286 = HEAP32[$vinfos54>>2]|0;
                $2287 = ((($2286)) + 41|0);
                HEAP8[$2287>>0] = 1;
                $2288 = +HEAPF64[$136>>3];
                $2289 = HEAP32[$vinfos54>>2]|0;
                $2290 = ((($2289)) + 32|0);
                HEAPF64[$2290>>3] = $2288;
                $2291 = HEAP8[$137>>0]|0;
                $2292 = HEAP32[$vinfos54>>2]|0;
                $2293 = ((($2292)) + 43|0);
                HEAP8[$2293>>0] = $2291;
                $2294 = HEAP8[$138>>0]|0;
                $2295 = HEAP32[$vinfos54>>2]|0;
                $2296 = ((($2295)) + 44|0);
                HEAP8[$2296>>0] = $2294;
                $2297 = HEAP8[$139>>0]|0;
                $2298 = HEAP32[$vinfos54>>2]|0;
                $2299 = ((($2298)) + 42|0);
                HEAP8[$2299>>0] = $2297;
                $2300 = HEAP32[$vinfos54>>2]|0;
                $2301 = ((($2300)) + 65|0);
                HEAP8[$2301>>0] = 1;
                $2302 = +HEAPF64[$140>>3];
                $2303 = HEAP32[$vinfos54>>2]|0;
                $2304 = ((($2303)) + 56|0);
                HEAPF64[$2304>>3] = $2302;
                $2305 = HEAP8[$141>>0]|0;
                $2306 = HEAP32[$vinfos54>>2]|0;
                $2307 = ((($2306)) + 67|0);
                HEAP8[$2307>>0] = $2305;
                $2308 = HEAP8[$142>>0]|0;
                $2309 = HEAP32[$vinfos54>>2]|0;
                $2310 = ((($2309)) + 68|0);
                HEAP8[$2310>>0] = $2308;
                $2311 = HEAP8[$143>>0]|0;
                $2312 = HEAP32[$vinfos54>>2]|0;
                $2313 = ((($2312)) + 66|0);
                HEAP8[$2313>>0] = $2311;
                $2314 = HEAP32[$vinfos54>>2]|0;
                $2315 = ((($2314)) + 89|0);
                HEAP8[$2315>>0] = 1;
                $2316 = +HEAPF64[$144>>3];
                $2317 = HEAP32[$vinfos54>>2]|0;
                $2318 = ((($2317)) + 80|0);
                HEAPF64[$2318>>3] = $2316;
                $2319 = HEAP8[$145>>0]|0;
                $2320 = HEAP32[$vinfos54>>2]|0;
                $2321 = ((($2320)) + 91|0);
                HEAP8[$2321>>0] = $2319;
                $2322 = HEAP8[$146>>0]|0;
                $2323 = HEAP32[$vinfos54>>2]|0;
                $2324 = ((($2323)) + 92|0);
                HEAP8[$2324>>0] = $2322;
                $2325 = HEAP8[$147>>0]|0;
                $2326 = HEAP32[$vinfos54>>2]|0;
                $2327 = ((($2326)) + 90|0);
                HEAP8[$2327>>0] = $2325;
                $2328 = HEAP32[$vinfos54>>2]|0;
                $2329 = ((($2328)) + 113|0);
                HEAP8[$2329>>0] = 1;
                $2330 = +HEAPF64[$101>>3];
                $2331 = HEAP32[$vinfos54>>2]|0;
                $2332 = ((($2331)) + 104|0);
                HEAPF64[$2332>>3] = $2330;
                $2333 = HEAP8[$99>>0]|0;
                $2334 = HEAP32[$vinfos54>>2]|0;
                $2335 = ((($2334)) + 115|0);
                HEAP8[$2335>>0] = $2333;
                $2336 = HEAP8[$100>>0]|0;
                $2337 = HEAP32[$vinfos54>>2]|0;
                $2338 = ((($2337)) + 116|0);
                HEAP8[$2338>>0] = $2336;
                $2339 = HEAP8[$96>>0]|0;
                $2340 = HEAP32[$vinfos54>>2]|0;
                $2341 = ((($2340)) + 114|0);
                HEAP8[$2341>>0] = $2339;
                $2342 = HEAP32[$vinfos54>>2]|0;
                $2343 = ((($2342)) + 137|0);
                HEAP8[$2343>>0] = 1;
                $2344 = +HEAPF64[$29>>3];
                $2345 = HEAP32[$vinfos54>>2]|0;
                $2346 = ((($2345)) + 128|0);
                HEAPF64[$2346>>3] = $2344;
                $2347 = HEAP8[$27>>0]|0;
                $2348 = HEAP32[$vinfos54>>2]|0;
                $2349 = ((($2348)) + 139|0);
                HEAP8[$2349>>0] = $2347;
                $2350 = HEAP8[$28>>0]|0;
                $2351 = HEAP32[$vinfos54>>2]|0;
                $2352 = ((($2351)) + 140|0);
                HEAP8[$2352>>0] = $2350;
                $2353 = HEAP8[$26>>0]|0;
                $2354 = HEAP32[$vinfos54>>2]|0;
                $2355 = ((($2354)) + 138|0);
                HEAP8[$2355>>0] = $2353;
                $2356 = HEAP32[$vinfos54>>2]|0;
                $2357 = ((($2356)) + 161|0);
                HEAP8[$2357>>0] = 1;
                $2358 = +HEAPF64[$130>>3];
                $2359 = HEAP32[$vinfos54>>2]|0;
                $2360 = ((($2359)) + 152|0);
                HEAPF64[$2360>>3] = $2358;
                $2361 = HEAP8[$128>>0]|0;
                $2362 = HEAP32[$vinfos54>>2]|0;
                $2363 = ((($2362)) + 163|0);
                HEAP8[$2363>>0] = $2361;
                $2364 = HEAP8[$129>>0]|0;
                $2365 = HEAP32[$vinfos54>>2]|0;
                $2366 = ((($2365)) + 164|0);
                HEAP8[$2366>>0] = $2364;
                $2367 = HEAP8[$127>>0]|0;
                $2368 = HEAP32[$vinfos54>>2]|0;
                $2369 = ((($2368)) + 162|0);
                HEAP8[$2369>>0] = $2367;
                __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree55,0);
                $2370 = HEAP32[$solutions>>2]|0;
                $2371 = ((($2370)) + 8|0);
                $2372 = HEAP32[$2371>>2]|0;
                (FUNCTION_TABLE_iiii[$2372 & 31]($solutions,$vinfos54,$vfree55)|0);
                __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree55);
                __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos54);
                break L7;
               }
              } while(0);
              $2373 = +HEAPF64[$102>>3];
              $2374 = +HEAPF64[$103>>3];
              $2375 = +HEAPF64[$22>>3];
              $2376 = $2373 * $2375;
              $2377 = +HEAPF64[$19>>3];
              $2378 = $2374 * $2377;
              $2379 = $2376 - $2378;
              $2380 = +HEAPF64[$29>>3];
              $2381 = $2380 + -1.5707963267949001;
              $2382 = (+__Z5IKabsd($2381));
              $2383 = $2382 + 3.14159265358979;
              $2384 = (+__Z6IKfmoddd($2383,6.2831853071795898));
              $2385 = $2384 + -3.14159265358979;
              $2386 = $2377 - $2373;
              $2387 = $2375 - $2374;
              $2388 = $2374 * $2375;
              $2389 = $2388 + -1.0;
              $2390 = $2373 * $2377;
              $2391 = $2389 + $2390;
              $2392 = +HEAPF64[$15>>3];
              $2393 = $2373 * $2392;
              $2394 = +HEAPF64[$21>>3];
              $2395 = $2374 * $2394;
              $2396 = $2393 + $2395;
              $2397 = +HEAPF64[$11>>3];
              $2398 = $2373 * $2397;
              $2399 = +HEAPF64[$20>>3];
              $2400 = $2374 * $2399;
              $2401 = $2398 + $2400;
              $2402 = -$2400;
              $2403 = $2402 - $2398;
              $2404 = -$2395;
              $2405 = $2404 - $2393;
              $2406 = 1.0 - $2388;
              $2407 = $2406 - $2390;
              $2408 = (+__Z5IKabsd($2385));
              $2409 = $2408 < 9.9999999999999995E-7;
              do {
               if ($2409) {
                $2410 = +HEAPF64[$25>>3];
                $2411 = (+__Z5IKabsd($2410));
                $2412 = $2411 < 9.9999999999999995E-7;
                if (!($2412)) {
                 break;
                }
                $2413 = (+__Z5IKabsd($2386));
                $2414 = $2413 < 9.9999999999999995E-7;
                if (!($2414)) {
                 break;
                }
                $2415 = (+__Z5IKabsd($2387));
                $2416 = $2415 < 9.9999999999999995E-7;
                if (!($2416)) {
                 break;
                }
                $2417 = (+__Z5IKabsd($2379));
                $2418 = $2417 < 9.9999999999999995E-7;
                if (!($2418)) {
                 break;
                }
                $2419 = (+__Z5IKabsd($2391));
                $2420 = $2419 < 9.9999999999999995E-7;
                if (!($2420)) {
                 break;
                }
                $2421 = (+__Z5IKabsd($2396));
                $2422 = $2421 < 9.9999999999999995E-7;
                if (!($2422)) {
                 break;
                }
                $2423 = (+__Z5IKabsd($2401));
                $2424 = $2423 < 9.9999999999999995E-7;
                if (!($2424)) {
                 break;
                }
                $2425 = (+__Z5IKabsd($2403));
                $2426 = $2425 < 9.9999999999999995E-7;
                if (!($2426)) {
                 break;
                }
                $2427 = (+__Z5IKabsd($2405));
                $2428 = $2427 < 9.9999999999999995E-7;
                if (!($2428)) {
                 break;
                }
                $2429 = (+__Z5IKabsd($2407));
                $2430 = $2429 < 9.9999999999999995E-7;
                if (!($2430)) {
                 break;
                }
                HEAP8[$148>>0] = 1;
                $2431 = +HEAPF64[$24>>3];
                $2432 = (+__Z5IKabsd($2431));
                $2433 = $2432 < 1.9999999999999999E-6;
                do {
                 if ($2433) {
                  $2434 = +HEAPF64[$23>>3];
                  $2435 = -$2434;
                  $2436 = (+__Z5IKabsd($2435));
                  $2437 = $2436 < 1.9999999999999999E-6;
                  if (!($2437)) {
                   break;
                  }
                  $2438 = (+__Z5IKsqrd($2431));
                  $2439 = (+__Z5IKsqrd($2435));
                  $2440 = $2438 + $2439;
                  $2441 = $2440 + -1.0;
                  $2442 = (+__Z5IKabsd($2441));
                  $2443 = !($2442 <= 1.9999999999999999E-6);
                  if (!($2443)) {
                   break L7;
                  }
                 }
                } while(0);
                $2444 = +HEAPF64[$24>>3];
                $2445 = +HEAPF64[$23>>3];
                $2446 = -$2445;
                $2447 = (+__Z7IKatan2dd($2444,$2446));
                $2448 = (+__Z5IKsind($2447));
                $2449 = (+__Z5IKcosd($2447));
                $2450 = $2447 > 3.14159265358979;
                do {
                 if ($2450) {
                  $2451 = $2447 + -6.2831853071795898;
                  $2454 = $2451;
                 } else {
                  $2452 = $2447 < -3.14159265358979;
                  if (!($2452)) {
                   $2454 = $2447;
                   break;
                  }
                  $2453 = $2447 + 6.2831853071795898;
                  $2454 = $2453;
                 }
                } while(0);
                HEAP8[$149>>0] = 0;
                HEAP8[$150>>0] = -1;
                HEAPF64[$151>>3] = $2454;
                HEAPF64[$152>>3] = $2449;
                HEAPF64[$153>>3] = $2448;
                $2455 = +HEAPF64[$151>>3];
                $2456 = (+__Z5IKcosd($2455));
                $2457 = (+__Z5IKsind($2455));
                $2458 = +HEAPF64[$22>>3];
                $2459 = +HEAPF64[$23>>3];
                $2460 = $2456 + $2459;
                $2461 = $2456 * $2458;
                $2462 = +HEAPF64[$15>>3];
                $2463 = $2461 + $2462;
                $2464 = $2457 * $2458;
                $2465 = +HEAPF64[$11>>3];
                $2466 = $2464 + $2465;
                $2467 = +HEAPF64[$19>>3];
                $2468 = -$2467;
                $2469 = $2456 * $2468;
                $2470 = +HEAPF64[$21>>3];
                $2471 = $2469 + $2470;
                $2472 = $2457 * $2468;
                $2473 = +HEAPF64[$20>>3];
                $2474 = $2472 + $2473;
                $2475 = $2458 * $2465;
                $2476 = -$2475;
                $2477 = $2476 - $2457;
                $2478 = $2467 * $2473;
                $2479 = $2477 + $2478;
                $2480 = $2458 * $2462;
                $2481 = -$2480;
                $2482 = $2481 - $2456;
                $2483 = $2467 * $2470;
                $2484 = $2482 + $2483;
                $2485 = (+__Z5IKabsd($2460));
                $2486 = $2485 > 5.0000000000000004E-6;
                if ($2486) {
                 break L7;
                }
                $2487 = +HEAPF64[$24>>3];
                $2488 = $2487 - $2457;
                $2489 = (+__Z5IKabsd($2488));
                $2490 = $2489 > 5.0000000000000004E-6;
                if ($2490) {
                 break L7;
                }
                $2491 = (+__Z5IKabsd($2463));
                $2492 = $2491 > 5.0000000000000004E-6;
                if ($2492) {
                 break L7;
                }
                $2493 = (+__Z5IKabsd($2466));
                $2494 = $2493 > 5.0000000000000004E-6;
                if ($2494) {
                 break L7;
                }
                $2495 = (+__Z5IKabsd($2471));
                $2496 = $2495 > 5.0000000000000004E-6;
                if ($2496) {
                 break L7;
                }
                $2497 = (+__Z5IKabsd($2474));
                $2498 = $2497 > 5.0000000000000004E-6;
                if ($2498) {
                 break L7;
                }
                $2499 = (+__Z5IKabsd($2479));
                $2500 = $2499 > 5.0000000000000004E-6;
                if ($2500) {
                 break L7;
                }
                $2501 = (+__Z5IKabsd($2484));
                $2502 = $2501 > 5.0000000000000004E-6;
                if ($2502) {
                 break L7;
                }
                __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos65,7);
                $2503 = HEAP32[$vinfos65>>2]|0;
                $2504 = ((($2503)) + 17|0);
                HEAP8[$2504>>0] = 1;
                $2505 = +HEAPF64[$this>>3];
                $2506 = HEAP32[$vinfos65>>2]|0;
                $2507 = ((($2506)) + 8|0);
                HEAPF64[$2507>>3] = $2505;
                $2508 = HEAP8[$154>>0]|0;
                $2509 = HEAP32[$vinfos65>>2]|0;
                $2510 = ((($2509)) + 19|0);
                HEAP8[$2510>>0] = $2508;
                $2511 = HEAP8[$155>>0]|0;
                $2512 = HEAP32[$vinfos65>>2]|0;
                $2513 = ((($2512)) + 20|0);
                HEAP8[$2513>>0] = $2511;
                $2514 = HEAP8[$156>>0]|0;
                $2515 = HEAP32[$vinfos65>>2]|0;
                $2516 = ((($2515)) + 18|0);
                HEAP8[$2516>>0] = $2514;
                $2517 = HEAP32[$vinfos65>>2]|0;
                $2518 = ((($2517)) + 41|0);
                HEAP8[$2518>>0] = 1;
                $2519 = +HEAPF64[$157>>3];
                $2520 = HEAP32[$vinfos65>>2]|0;
                $2521 = ((($2520)) + 32|0);
                HEAPF64[$2521>>3] = $2519;
                $2522 = HEAP8[$158>>0]|0;
                $2523 = HEAP32[$vinfos65>>2]|0;
                $2524 = ((($2523)) + 43|0);
                HEAP8[$2524>>0] = $2522;
                $2525 = HEAP8[$159>>0]|0;
                $2526 = HEAP32[$vinfos65>>2]|0;
                $2527 = ((($2526)) + 44|0);
                HEAP8[$2527>>0] = $2525;
                $2528 = HEAP8[$160>>0]|0;
                $2529 = HEAP32[$vinfos65>>2]|0;
                $2530 = ((($2529)) + 42|0);
                HEAP8[$2530>>0] = $2528;
                $2531 = HEAP32[$vinfos65>>2]|0;
                $2532 = ((($2531)) + 65|0);
                HEAP8[$2532>>0] = 1;
                $2533 = +HEAPF64[$161>>3];
                $2534 = HEAP32[$vinfos65>>2]|0;
                $2535 = ((($2534)) + 56|0);
                HEAPF64[$2535>>3] = $2533;
                $2536 = HEAP8[$162>>0]|0;
                $2537 = HEAP32[$vinfos65>>2]|0;
                $2538 = ((($2537)) + 67|0);
                HEAP8[$2538>>0] = $2536;
                $2539 = HEAP8[$163>>0]|0;
                $2540 = HEAP32[$vinfos65>>2]|0;
                $2541 = ((($2540)) + 68|0);
                HEAP8[$2541>>0] = $2539;
                $2542 = HEAP8[$164>>0]|0;
                $2543 = HEAP32[$vinfos65>>2]|0;
                $2544 = ((($2543)) + 66|0);
                HEAP8[$2544>>0] = $2542;
                $2545 = HEAP32[$vinfos65>>2]|0;
                $2546 = ((($2545)) + 89|0);
                HEAP8[$2546>>0] = 1;
                $2547 = +HEAPF64[$165>>3];
                $2548 = HEAP32[$vinfos65>>2]|0;
                $2549 = ((($2548)) + 80|0);
                HEAPF64[$2549>>3] = $2547;
                $2550 = HEAP8[$166>>0]|0;
                $2551 = HEAP32[$vinfos65>>2]|0;
                $2552 = ((($2551)) + 91|0);
                HEAP8[$2552>>0] = $2550;
                $2553 = HEAP8[$167>>0]|0;
                $2554 = HEAP32[$vinfos65>>2]|0;
                $2555 = ((($2554)) + 92|0);
                HEAP8[$2555>>0] = $2553;
                $2556 = HEAP8[$168>>0]|0;
                $2557 = HEAP32[$vinfos65>>2]|0;
                $2558 = ((($2557)) + 90|0);
                HEAP8[$2558>>0] = $2556;
                $2559 = HEAP32[$vinfos65>>2]|0;
                $2560 = ((($2559)) + 113|0);
                HEAP8[$2560>>0] = 1;
                $2561 = +HEAPF64[$101>>3];
                $2562 = HEAP32[$vinfos65>>2]|0;
                $2563 = ((($2562)) + 104|0);
                HEAPF64[$2563>>3] = $2561;
                $2564 = HEAP8[$99>>0]|0;
                $2565 = HEAP32[$vinfos65>>2]|0;
                $2566 = ((($2565)) + 115|0);
                HEAP8[$2566>>0] = $2564;
                $2567 = HEAP8[$100>>0]|0;
                $2568 = HEAP32[$vinfos65>>2]|0;
                $2569 = ((($2568)) + 116|0);
                HEAP8[$2569>>0] = $2567;
                $2570 = HEAP8[$96>>0]|0;
                $2571 = HEAP32[$vinfos65>>2]|0;
                $2572 = ((($2571)) + 114|0);
                HEAP8[$2572>>0] = $2570;
                $2573 = HEAP32[$vinfos65>>2]|0;
                $2574 = ((($2573)) + 137|0);
                HEAP8[$2574>>0] = 1;
                $2575 = +HEAPF64[$29>>3];
                $2576 = HEAP32[$vinfos65>>2]|0;
                $2577 = ((($2576)) + 128|0);
                HEAPF64[$2577>>3] = $2575;
                $2578 = HEAP8[$27>>0]|0;
                $2579 = HEAP32[$vinfos65>>2]|0;
                $2580 = ((($2579)) + 139|0);
                HEAP8[$2580>>0] = $2578;
                $2581 = HEAP8[$28>>0]|0;
                $2582 = HEAP32[$vinfos65>>2]|0;
                $2583 = ((($2582)) + 140|0);
                HEAP8[$2583>>0] = $2581;
                $2584 = HEAP8[$26>>0]|0;
                $2585 = HEAP32[$vinfos65>>2]|0;
                $2586 = ((($2585)) + 138|0);
                HEAP8[$2586>>0] = $2584;
                $2587 = HEAP32[$vinfos65>>2]|0;
                $2588 = ((($2587)) + 161|0);
                HEAP8[$2588>>0] = 1;
                $2589 = +HEAPF64[$151>>3];
                $2590 = HEAP32[$vinfos65>>2]|0;
                $2591 = ((($2590)) + 152|0);
                HEAPF64[$2591>>3] = $2589;
                $2592 = HEAP8[$149>>0]|0;
                $2593 = HEAP32[$vinfos65>>2]|0;
                $2594 = ((($2593)) + 163|0);
                HEAP8[$2594>>0] = $2592;
                $2595 = HEAP8[$150>>0]|0;
                $2596 = HEAP32[$vinfos65>>2]|0;
                $2597 = ((($2596)) + 164|0);
                HEAP8[$2597>>0] = $2595;
                $2598 = HEAP8[$148>>0]|0;
                $2599 = HEAP32[$vinfos65>>2]|0;
                $2600 = ((($2599)) + 162|0);
                HEAP8[$2600>>0] = $2598;
                __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree66,0);
                $2601 = HEAP32[$solutions>>2]|0;
                $2602 = ((($2601)) + 8|0);
                $2603 = HEAP32[$2602>>2]|0;
                (FUNCTION_TABLE_iiii[$2603 & 31]($solutions,$vinfos65,$vfree66)|0);
                __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree66);
                __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos65);
                break L7;
               }
              } while(0);
              $2604 = +HEAPF64[$19>>3];
              $2605 = +HEAPF64[$103>>3];
              $2606 = $2604 * $2605;
              $2607 = +HEAPF64[$102>>3];
              $2608 = +HEAPF64[$22>>3];
              $2609 = $2607 * $2608;
              $2610 = $2609 - $2606;
              $2611 = +HEAPF64[$11>>3];
              $2612 = $2607 * $2611;
              $2613 = +HEAPF64[$20>>3];
              $2614 = $2605 * $2613;
              $2615 = $2612 + $2614;
              $2616 = +HEAPF64[$15>>3];
              $2617 = $2607 * $2616;
              $2618 = +HEAPF64[$21>>3];
              $2619 = $2605 * $2618;
              $2620 = $2617 + $2619;
              $2621 = $2605 * $2608;
              $2622 = $2621 + 1.0;
              $2623 = $2604 * $2607;
              $2624 = $2623 + $2622;
              $2625 = +HEAPF64[$29>>3];
              $2626 = $2625 + 1.5707963267949001;
              $2627 = (+__Z5IKabsd($2626));
              $2628 = $2627 + 3.14159265358979;
              $2629 = (+__Z6IKfmoddd($2628,6.2831853071795898));
              $2630 = $2629 + -3.14159265358979;
              $2631 = $2604 + $2607;
              $2632 = $2605 + $2608;
              $2633 = (+__Z5IKabsd($2630));
              $2634 = $2633 < 9.9999999999999995E-7;
              do {
               if ($2634) {
                $2635 = +HEAPF64[$25>>3];
                $2636 = (+__Z5IKabsd($2635));
                $2637 = $2636 < 9.9999999999999995E-7;
                if (!($2637)) {
                 break;
                }
                $2638 = (+__Z5IKabsd($2631));
                $2639 = $2638 < 9.9999999999999995E-7;
                if (!($2639)) {
                 break;
                }
                $2640 = (+__Z5IKabsd($2632));
                $2641 = $2640 < 9.9999999999999995E-7;
                if (!($2641)) {
                 break;
                }
                $2642 = (+__Z5IKabsd($2610));
                $2643 = $2642 < 9.9999999999999995E-7;
                if (!($2643)) {
                 break;
                }
                $2644 = (+__Z5IKabsd($2624));
                $2645 = $2644 < 9.9999999999999995E-7;
                if (!($2645)) {
                 break;
                }
                $2646 = (+__Z5IKabsd($2620));
                $2647 = $2646 < 9.9999999999999995E-7;
                if (!($2647)) {
                 break;
                }
                $2648 = (+__Z5IKabsd($2615));
                $2649 = $2648 < 9.9999999999999995E-7;
                if (!($2649)) {
                 break;
                }
                HEAP8[$169>>0] = 1;
                $2650 = +HEAPF64[$24>>3];
                $2651 = -$2650;
                $2652 = (+__Z5IKabsd($2651));
                $2653 = $2652 < 1.9999999999999999E-6;
                do {
                 if ($2653) {
                  $2654 = +HEAPF64[$23>>3];
                  $2655 = (+__Z5IKabsd($2654));
                  $2656 = $2655 < 1.9999999999999999E-6;
                  if (!($2656)) {
                   break;
                  }
                  $2657 = (+__Z5IKsqrd($2651));
                  $2658 = (+__Z5IKsqrd($2654));
                  $2659 = $2657 + $2658;
                  $2660 = $2659 + -1.0;
                  $2661 = (+__Z5IKabsd($2660));
                  $2662 = !($2661 <= 1.9999999999999999E-6);
                  if (!($2662)) {
                   break L7;
                  }
                 }
                } while(0);
                $2663 = +HEAPF64[$24>>3];
                $2664 = -$2663;
                $2665 = +HEAPF64[$23>>3];
                $2666 = (+__Z7IKatan2dd($2664,$2665));
                $2667 = (+__Z5IKsind($2666));
                $2668 = (+__Z5IKcosd($2666));
                $2669 = $2666 > 3.14159265358979;
                do {
                 if ($2669) {
                  $2670 = $2666 + -6.2831853071795898;
                  $2673 = $2670;
                 } else {
                  $2671 = $2666 < -3.14159265358979;
                  if (!($2671)) {
                   $2673 = $2666;
                   break;
                  }
                  $2672 = $2666 + 6.2831853071795898;
                  $2673 = $2672;
                 }
                } while(0);
                HEAP8[$170>>0] = 0;
                HEAP8[$171>>0] = -1;
                HEAPF64[$172>>3] = $2673;
                HEAPF64[$173>>3] = $2668;
                HEAPF64[$174>>3] = $2667;
                $2674 = +HEAPF64[$172>>3];
                $2675 = (+__Z5IKcosd($2674));
                $2676 = (+__Z5IKsind($2674));
                $2677 = +HEAPF64[$19>>3];
                $2678 = +HEAPF64[$22>>3];
                $2679 = +HEAPF64[$24>>3];
                $2680 = $2676 + $2679;
                $2681 = $2675 * $2677;
                $2682 = +HEAPF64[$21>>3];
                $2683 = $2681 + $2682;
                $2684 = $2676 * $2677;
                $2685 = +HEAPF64[$20>>3];
                $2686 = $2684 + $2685;
                $2687 = $2675 * $2678;
                $2688 = +HEAPF64[$15>>3];
                $2689 = $2688 - $2687;
                $2690 = $2676 * $2678;
                $2691 = +HEAPF64[$11>>3];
                $2692 = $2691 - $2690;
                $2693 = $2677 * $2685;
                $2694 = $2678 * $2691;
                $2695 = $2694 - $2693;
                $2696 = $2695 - $2676;
                $2697 = $2677 * $2682;
                $2698 = $2678 * $2688;
                $2699 = $2698 - $2697;
                $2700 = $2699 - $2675;
                $2701 = (+__Z5IKabsd($2680));
                $2702 = $2701 > 5.0000000000000004E-6;
                if ($2702) {
                 break L7;
                }
                $2703 = +HEAPF64[$23>>3];
                $2704 = $2703 - $2675;
                $2705 = (+__Z5IKabsd($2704));
                $2706 = $2705 > 5.0000000000000004E-6;
                if ($2706) {
                 break L7;
                }
                $2707 = (+__Z5IKabsd($2683));
                $2708 = $2707 > 5.0000000000000004E-6;
                if ($2708) {
                 break L7;
                }
                $2709 = (+__Z5IKabsd($2686));
                $2710 = $2709 > 5.0000000000000004E-6;
                if ($2710) {
                 break L7;
                }
                $2711 = (+__Z5IKabsd($2689));
                $2712 = $2711 > 5.0000000000000004E-6;
                if ($2712) {
                 break L7;
                }
                $2713 = (+__Z5IKabsd($2692));
                $2714 = $2713 > 5.0000000000000004E-6;
                if ($2714) {
                 break L7;
                }
                $2715 = (+__Z5IKabsd($2696));
                $2716 = $2715 > 5.0000000000000004E-6;
                if ($2716) {
                 break L7;
                }
                $2717 = (+__Z5IKabsd($2700));
                $2718 = $2717 > 5.0000000000000004E-6;
                if ($2718) {
                 break L7;
                }
                __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos76,7);
                $2719 = HEAP32[$vinfos76>>2]|0;
                $2720 = ((($2719)) + 17|0);
                HEAP8[$2720>>0] = 1;
                $2721 = +HEAPF64[$this>>3];
                $2722 = HEAP32[$vinfos76>>2]|0;
                $2723 = ((($2722)) + 8|0);
                HEAPF64[$2723>>3] = $2721;
                $2724 = HEAP8[$175>>0]|0;
                $2725 = HEAP32[$vinfos76>>2]|0;
                $2726 = ((($2725)) + 19|0);
                HEAP8[$2726>>0] = $2724;
                $2727 = HEAP8[$176>>0]|0;
                $2728 = HEAP32[$vinfos76>>2]|0;
                $2729 = ((($2728)) + 20|0);
                HEAP8[$2729>>0] = $2727;
                $2730 = HEAP8[$177>>0]|0;
                $2731 = HEAP32[$vinfos76>>2]|0;
                $2732 = ((($2731)) + 18|0);
                HEAP8[$2732>>0] = $2730;
                $2733 = HEAP32[$vinfos76>>2]|0;
                $2734 = ((($2733)) + 41|0);
                HEAP8[$2734>>0] = 1;
                $2735 = +HEAPF64[$178>>3];
                $2736 = HEAP32[$vinfos76>>2]|0;
                $2737 = ((($2736)) + 32|0);
                HEAPF64[$2737>>3] = $2735;
                $2738 = HEAP8[$179>>0]|0;
                $2739 = HEAP32[$vinfos76>>2]|0;
                $2740 = ((($2739)) + 43|0);
                HEAP8[$2740>>0] = $2738;
                $2741 = HEAP8[$180>>0]|0;
                $2742 = HEAP32[$vinfos76>>2]|0;
                $2743 = ((($2742)) + 44|0);
                HEAP8[$2743>>0] = $2741;
                $2744 = HEAP8[$181>>0]|0;
                $2745 = HEAP32[$vinfos76>>2]|0;
                $2746 = ((($2745)) + 42|0);
                HEAP8[$2746>>0] = $2744;
                $2747 = HEAP32[$vinfos76>>2]|0;
                $2748 = ((($2747)) + 65|0);
                HEAP8[$2748>>0] = 1;
                $2749 = +HEAPF64[$182>>3];
                $2750 = HEAP32[$vinfos76>>2]|0;
                $2751 = ((($2750)) + 56|0);
                HEAPF64[$2751>>3] = $2749;
                $2752 = HEAP8[$183>>0]|0;
                $2753 = HEAP32[$vinfos76>>2]|0;
                $2754 = ((($2753)) + 67|0);
                HEAP8[$2754>>0] = $2752;
                $2755 = HEAP8[$184>>0]|0;
                $2756 = HEAP32[$vinfos76>>2]|0;
                $2757 = ((($2756)) + 68|0);
                HEAP8[$2757>>0] = $2755;
                $2758 = HEAP8[$185>>0]|0;
                $2759 = HEAP32[$vinfos76>>2]|0;
                $2760 = ((($2759)) + 66|0);
                HEAP8[$2760>>0] = $2758;
                $2761 = HEAP32[$vinfos76>>2]|0;
                $2762 = ((($2761)) + 89|0);
                HEAP8[$2762>>0] = 1;
                $2763 = +HEAPF64[$186>>3];
                $2764 = HEAP32[$vinfos76>>2]|0;
                $2765 = ((($2764)) + 80|0);
                HEAPF64[$2765>>3] = $2763;
                $2766 = HEAP8[$187>>0]|0;
                $2767 = HEAP32[$vinfos76>>2]|0;
                $2768 = ((($2767)) + 91|0);
                HEAP8[$2768>>0] = $2766;
                $2769 = HEAP8[$188>>0]|0;
                $2770 = HEAP32[$vinfos76>>2]|0;
                $2771 = ((($2770)) + 92|0);
                HEAP8[$2771>>0] = $2769;
                $2772 = HEAP8[$189>>0]|0;
                $2773 = HEAP32[$vinfos76>>2]|0;
                $2774 = ((($2773)) + 90|0);
                HEAP8[$2774>>0] = $2772;
                $2775 = HEAP32[$vinfos76>>2]|0;
                $2776 = ((($2775)) + 113|0);
                HEAP8[$2776>>0] = 1;
                $2777 = +HEAPF64[$101>>3];
                $2778 = HEAP32[$vinfos76>>2]|0;
                $2779 = ((($2778)) + 104|0);
                HEAPF64[$2779>>3] = $2777;
                $2780 = HEAP8[$99>>0]|0;
                $2781 = HEAP32[$vinfos76>>2]|0;
                $2782 = ((($2781)) + 115|0);
                HEAP8[$2782>>0] = $2780;
                $2783 = HEAP8[$100>>0]|0;
                $2784 = HEAP32[$vinfos76>>2]|0;
                $2785 = ((($2784)) + 116|0);
                HEAP8[$2785>>0] = $2783;
                $2786 = HEAP8[$96>>0]|0;
                $2787 = HEAP32[$vinfos76>>2]|0;
                $2788 = ((($2787)) + 114|0);
                HEAP8[$2788>>0] = $2786;
                $2789 = HEAP32[$vinfos76>>2]|0;
                $2790 = ((($2789)) + 137|0);
                HEAP8[$2790>>0] = 1;
                $2791 = +HEAPF64[$29>>3];
                $2792 = HEAP32[$vinfos76>>2]|0;
                $2793 = ((($2792)) + 128|0);
                HEAPF64[$2793>>3] = $2791;
                $2794 = HEAP8[$27>>0]|0;
                $2795 = HEAP32[$vinfos76>>2]|0;
                $2796 = ((($2795)) + 139|0);
                HEAP8[$2796>>0] = $2794;
                $2797 = HEAP8[$28>>0]|0;
                $2798 = HEAP32[$vinfos76>>2]|0;
                $2799 = ((($2798)) + 140|0);
                HEAP8[$2799>>0] = $2797;
                $2800 = HEAP8[$26>>0]|0;
                $2801 = HEAP32[$vinfos76>>2]|0;
                $2802 = ((($2801)) + 138|0);
                HEAP8[$2802>>0] = $2800;
                $2803 = HEAP32[$vinfos76>>2]|0;
                $2804 = ((($2803)) + 161|0);
                HEAP8[$2804>>0] = 1;
                $2805 = +HEAPF64[$172>>3];
                $2806 = HEAP32[$vinfos76>>2]|0;
                $2807 = ((($2806)) + 152|0);
                HEAPF64[$2807>>3] = $2805;
                $2808 = HEAP8[$170>>0]|0;
                $2809 = HEAP32[$vinfos76>>2]|0;
                $2810 = ((($2809)) + 163|0);
                HEAP8[$2810>>0] = $2808;
                $2811 = HEAP8[$171>>0]|0;
                $2812 = HEAP32[$vinfos76>>2]|0;
                $2813 = ((($2812)) + 164|0);
                HEAP8[$2813>>0] = $2811;
                $2814 = HEAP8[$169>>0]|0;
                $2815 = HEAP32[$vinfos76>>2]|0;
                $2816 = ((($2815)) + 162|0);
                HEAP8[$2816>>0] = $2814;
                __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree77,0);
                $2817 = HEAP32[$solutions>>2]|0;
                $2818 = ((($2817)) + 8|0);
                $2819 = HEAP32[$2818>>2]|0;
                (FUNCTION_TABLE_iiii[$2819 & 31]($solutions,$vinfos76,$vfree77)|0);
                __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree77);
                __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos76);
                break L7;
               }
              } while(0);
              $2820 = +HEAPF64[$19>>3];
              $2821 = +HEAPF64[$103>>3];
              $2822 = $2820 * $2821;
              $2823 = +HEAPF64[$102>>3];
              $2824 = +HEAPF64[$22>>3];
              $2825 = $2823 * $2824;
              $2826 = $2825 - $2822;
              $2827 = $2821 * $2824;
              $2828 = $2820 * $2823;
              $2829 = $2828 + $2827;
              $2830 = +HEAPF64[$29>>3];
              $2831 = (+__Z5IKabsd($2830));
              $2832 = $2831 + 3.14159265358979;
              $2833 = (+__Z6IKfmoddd($2832,6.2831853071795898));
              $2834 = $2833 + -3.14159265358979;
              $2835 = +HEAPF64[$23>>3];
              $2836 = +HEAPF64[$24>>3];
              $2837 = (+__Z5IKabsd($2834));
              $2838 = $2837 < 9.9999999999999995E-7;
              do {
               if ($2838) {
                $2839 = +HEAPF64[$25>>3];
                $2840 = $2839 + -1.0;
                $2841 = (+__Z5IKabsd($2840));
                $2842 = $2841 < 9.9999999999999995E-7;
                if (!($2842)) {
                 break;
                }
                $2843 = (+__Z5IKabsd($2835));
                $2844 = $2843 < 9.9999999999999995E-7;
                if (!($2844)) {
                 break;
                }
                $2845 = (+__Z5IKabsd($2820));
                $2846 = $2845 < 9.9999999999999995E-7;
                if (!($2846)) {
                 break;
                }
                $2847 = (+__Z5IKabsd($2824));
                $2848 = $2847 < 9.9999999999999995E-7;
                if (!($2848)) {
                 break;
                }
                $2849 = (+__Z5IKabsd($2836));
                $2850 = $2849 < 9.9999999999999995E-7;
                if (!($2850)) {
                 break;
                }
                $2851 = (+__Z5IKabsd($2826));
                $2852 = $2851 < 9.9999999999999995E-7;
                if (!($2852)) {
                 break;
                }
                $2853 = (+__Z5IKabsd($2829));
                $2854 = $2853 < 9.9999999999999995E-7;
                if (!($2854)) {
                 break;
                }
                HEAP8[$190>>0] = 1;
                $2855 = +HEAPF64[$15>>3];
                $2856 = +HEAPF64[$102>>3];
                $2857 = $2855 * $2856;
                $2858 = +HEAPF64[$11>>3];
                $2859 = +HEAPF64[$103>>3];
                $2860 = $2858 * $2859;
                $2861 = -$2860;
                $2862 = $2861 - $2857;
                $2863 = (+__Z5IKabsd($2862));
                $2864 = $2863 < 1.9999999999999999E-6;
                do {
                 if ($2864) {
                  $2865 = $2855 * $2859;
                  $2866 = $2856 * $2858;
                  $2867 = $2866 - $2865;
                  $2868 = (+__Z5IKabsd($2867));
                  $2869 = $2868 < 1.9999999999999999E-6;
                  if (!($2869)) {
                   break;
                  }
                  $2870 = (+__Z5IKsqrd($2862));
                  $2871 = (+__Z5IKsqrd($2867));
                  $2872 = $2870 + $2871;
                  $2873 = $2872 + -1.0;
                  $2874 = (+__Z5IKabsd($2873));
                  $2875 = !($2874 <= 1.9999999999999999E-6);
                  if (!($2875)) {
                   break L7;
                  }
                 }
                } while(0);
                $2876 = +HEAPF64[$102>>3];
                $2877 = $2855 * $2876;
                $2878 = +HEAPF64[$11>>3];
                $2879 = +HEAPF64[$103>>3];
                $2880 = $2878 * $2879;
                $2881 = -$2880;
                $2882 = $2881 - $2877;
                $2883 = $2855 * $2879;
                $2884 = $2876 * $2878;
                $2885 = $2884 - $2883;
                $2886 = (+__Z7IKatan2dd($2882,$2885));
                $2887 = (+__Z5IKsind($2886));
                $2888 = (+__Z5IKcosd($2886));
                $2889 = $2886 > 3.14159265358979;
                do {
                 if ($2889) {
                  $2890 = $2886 + -6.2831853071795898;
                  $2893 = $2890;
                 } else {
                  $2891 = $2886 < -3.14159265358979;
                  if (!($2891)) {
                   $2893 = $2886;
                   break;
                  }
                  $2892 = $2886 + 6.2831853071795898;
                  $2893 = $2892;
                 }
                } while(0);
                HEAP8[$191>>0] = 0;
                HEAP8[$192>>0] = -1;
                HEAPF64[$193>>3] = $2893;
                HEAPF64[$194>>3] = $2888;
                HEAPF64[$195>>3] = $2887;
                $2894 = +HEAPF64[$193>>3];
                $2895 = (+__Z5IKsind($2894));
                $2896 = (+__Z5IKcosd($2894));
                $2897 = +HEAPF64[$103>>3];
                $2898 = $2895 * $2897;
                $2899 = +HEAPF64[$102>>3];
                $2900 = $2895 * $2899;
                $2901 = $2896 * $2899;
                $2902 = +HEAPF64[$15>>3];
                $2903 = $2899 * $2902;
                $2904 = +HEAPF64[$21>>3];
                $2905 = $2897 * $2904;
                $2906 = $2903 + $2905;
                $2907 = $2895 + $2906;
                $2908 = +HEAPF64[$11>>3];
                $2909 = $2899 * $2908;
                $2910 = +HEAPF64[$20>>3];
                $2911 = $2897 * $2910;
                $2912 = $2909 + $2911;
                $2913 = $2912 - $2896;
                $2914 = $2899 * $2910;
                $2915 = $2897 * $2908;
                $2916 = $2914 - $2915;
                $2917 = $2916 - $2895;
                $2918 = $2899 * $2904;
                $2919 = $2897 * $2902;
                $2920 = $2918 - $2919;
                $2921 = $2920 - $2896;
                $2922 = $2898 + $2908;
                $2923 = $2922 - $2901;
                $2924 = $2898 + $2904;
                $2925 = $2924 - $2901;
                $2926 = $2896 * $2897;
                $2927 = $2910 - $2926;
                $2928 = $2927 - $2900;
                $2929 = (+__Z5IKabsd($2907));
                $2930 = $2929 > 5.0000000000000004E-6;
                if ($2930) {
                 break L7;
                }
                $2931 = $2926 + $2900;
                $2932 = $2902 + $2931;
                $2933 = (+__Z5IKabsd($2932));
                $2934 = $2933 > 5.0000000000000004E-6;
                if ($2934) {
                 break L7;
                }
                $2935 = (+__Z5IKabsd($2913));
                $2936 = $2935 > 5.0000000000000004E-6;
                if ($2936) {
                 break L7;
                }
                $2937 = (+__Z5IKabsd($2917));
                $2938 = $2937 > 5.0000000000000004E-6;
                if ($2938) {
                 break L7;
                }
                $2939 = (+__Z5IKabsd($2921));
                $2940 = $2939 > 5.0000000000000004E-6;
                if ($2940) {
                 break L7;
                }
                $2941 = (+__Z5IKabsd($2923));
                $2942 = $2941 > 5.0000000000000004E-6;
                if ($2942) {
                 break L7;
                }
                $2943 = (+__Z5IKabsd($2925));
                $2944 = $2943 > 5.0000000000000004E-6;
                if ($2944) {
                 break L7;
                }
                $2945 = (+__Z5IKabsd($2928));
                $2946 = $2945 > 5.0000000000000004E-6;
                if ($2946) {
                 break L7;
                }
                __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos87,7);
                $2947 = HEAP32[$vinfos87>>2]|0;
                $2948 = ((($2947)) + 17|0);
                HEAP8[$2948>>0] = 1;
                $2949 = +HEAPF64[$this>>3];
                $2950 = HEAP32[$vinfos87>>2]|0;
                $2951 = ((($2950)) + 8|0);
                HEAPF64[$2951>>3] = $2949;
                $2952 = HEAP8[$196>>0]|0;
                $2953 = HEAP32[$vinfos87>>2]|0;
                $2954 = ((($2953)) + 19|0);
                HEAP8[$2954>>0] = $2952;
                $2955 = HEAP8[$197>>0]|0;
                $2956 = HEAP32[$vinfos87>>2]|0;
                $2957 = ((($2956)) + 20|0);
                HEAP8[$2957>>0] = $2955;
                $2958 = HEAP8[$198>>0]|0;
                $2959 = HEAP32[$vinfos87>>2]|0;
                $2960 = ((($2959)) + 18|0);
                HEAP8[$2960>>0] = $2958;
                $2961 = HEAP32[$vinfos87>>2]|0;
                $2962 = ((($2961)) + 41|0);
                HEAP8[$2962>>0] = 1;
                $2963 = +HEAPF64[$199>>3];
                $2964 = HEAP32[$vinfos87>>2]|0;
                $2965 = ((($2964)) + 32|0);
                HEAPF64[$2965>>3] = $2963;
                $2966 = HEAP8[$200>>0]|0;
                $2967 = HEAP32[$vinfos87>>2]|0;
                $2968 = ((($2967)) + 43|0);
                HEAP8[$2968>>0] = $2966;
                $2969 = HEAP8[$201>>0]|0;
                $2970 = HEAP32[$vinfos87>>2]|0;
                $2971 = ((($2970)) + 44|0);
                HEAP8[$2971>>0] = $2969;
                $2972 = HEAP8[$202>>0]|0;
                $2973 = HEAP32[$vinfos87>>2]|0;
                $2974 = ((($2973)) + 42|0);
                HEAP8[$2974>>0] = $2972;
                $2975 = HEAP32[$vinfos87>>2]|0;
                $2976 = ((($2975)) + 65|0);
                HEAP8[$2976>>0] = 1;
                $2977 = +HEAPF64[$203>>3];
                $2978 = HEAP32[$vinfos87>>2]|0;
                $2979 = ((($2978)) + 56|0);
                HEAPF64[$2979>>3] = $2977;
                $2980 = HEAP8[$204>>0]|0;
                $2981 = HEAP32[$vinfos87>>2]|0;
                $2982 = ((($2981)) + 67|0);
                HEAP8[$2982>>0] = $2980;
                $2983 = HEAP8[$205>>0]|0;
                $2984 = HEAP32[$vinfos87>>2]|0;
                $2985 = ((($2984)) + 68|0);
                HEAP8[$2985>>0] = $2983;
                $2986 = HEAP8[$206>>0]|0;
                $2987 = HEAP32[$vinfos87>>2]|0;
                $2988 = ((($2987)) + 66|0);
                HEAP8[$2988>>0] = $2986;
                $2989 = HEAP32[$vinfos87>>2]|0;
                $2990 = ((($2989)) + 89|0);
                HEAP8[$2990>>0] = 1;
                $2991 = +HEAPF64[$207>>3];
                $2992 = HEAP32[$vinfos87>>2]|0;
                $2993 = ((($2992)) + 80|0);
                HEAPF64[$2993>>3] = $2991;
                $2994 = HEAP8[$208>>0]|0;
                $2995 = HEAP32[$vinfos87>>2]|0;
                $2996 = ((($2995)) + 91|0);
                HEAP8[$2996>>0] = $2994;
                $2997 = HEAP8[$209>>0]|0;
                $2998 = HEAP32[$vinfos87>>2]|0;
                $2999 = ((($2998)) + 92|0);
                HEAP8[$2999>>0] = $2997;
                $3000 = HEAP8[$210>>0]|0;
                $3001 = HEAP32[$vinfos87>>2]|0;
                $3002 = ((($3001)) + 90|0);
                HEAP8[$3002>>0] = $3000;
                $3003 = HEAP32[$vinfos87>>2]|0;
                $3004 = ((($3003)) + 113|0);
                HEAP8[$3004>>0] = 1;
                $3005 = +HEAPF64[$101>>3];
                $3006 = HEAP32[$vinfos87>>2]|0;
                $3007 = ((($3006)) + 104|0);
                HEAPF64[$3007>>3] = $3005;
                $3008 = HEAP8[$99>>0]|0;
                $3009 = HEAP32[$vinfos87>>2]|0;
                $3010 = ((($3009)) + 115|0);
                HEAP8[$3010>>0] = $3008;
                $3011 = HEAP8[$100>>0]|0;
                $3012 = HEAP32[$vinfos87>>2]|0;
                $3013 = ((($3012)) + 116|0);
                HEAP8[$3013>>0] = $3011;
                $3014 = HEAP8[$96>>0]|0;
                $3015 = HEAP32[$vinfos87>>2]|0;
                $3016 = ((($3015)) + 114|0);
                HEAP8[$3016>>0] = $3014;
                $3017 = HEAP32[$vinfos87>>2]|0;
                $3018 = ((($3017)) + 137|0);
                HEAP8[$3018>>0] = 1;
                $3019 = +HEAPF64[$29>>3];
                $3020 = HEAP32[$vinfos87>>2]|0;
                $3021 = ((($3020)) + 128|0);
                HEAPF64[$3021>>3] = $3019;
                $3022 = HEAP8[$27>>0]|0;
                $3023 = HEAP32[$vinfos87>>2]|0;
                $3024 = ((($3023)) + 139|0);
                HEAP8[$3024>>0] = $3022;
                $3025 = HEAP8[$28>>0]|0;
                $3026 = HEAP32[$vinfos87>>2]|0;
                $3027 = ((($3026)) + 140|0);
                HEAP8[$3027>>0] = $3025;
                $3028 = HEAP8[$26>>0]|0;
                $3029 = HEAP32[$vinfos87>>2]|0;
                $3030 = ((($3029)) + 138|0);
                HEAP8[$3030>>0] = $3028;
                $3031 = HEAP32[$vinfos87>>2]|0;
                $3032 = ((($3031)) + 161|0);
                HEAP8[$3032>>0] = 1;
                $3033 = +HEAPF64[$193>>3];
                $3034 = HEAP32[$vinfos87>>2]|0;
                $3035 = ((($3034)) + 152|0);
                HEAPF64[$3035>>3] = $3033;
                $3036 = HEAP8[$191>>0]|0;
                $3037 = HEAP32[$vinfos87>>2]|0;
                $3038 = ((($3037)) + 163|0);
                HEAP8[$3038>>0] = $3036;
                $3039 = HEAP8[$192>>0]|0;
                $3040 = HEAP32[$vinfos87>>2]|0;
                $3041 = ((($3040)) + 164|0);
                HEAP8[$3041>>0] = $3039;
                $3042 = HEAP8[$190>>0]|0;
                $3043 = HEAP32[$vinfos87>>2]|0;
                $3044 = ((($3043)) + 162|0);
                HEAP8[$3044>>0] = $3042;
                __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree88,0);
                $3045 = HEAP32[$solutions>>2]|0;
                $3046 = ((($3045)) + 8|0);
                $3047 = HEAP32[$3046>>2]|0;
                (FUNCTION_TABLE_iiii[$3047 & 31]($solutions,$vinfos87,$vfree88)|0);
                __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree88);
                __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos87);
                break L7;
               }
              } while(0);
              $3048 = +HEAPF64[$102>>3];
              $3049 = +HEAPF64[$19>>3];
              $3050 = $3048 * $3049;
              $3051 = +HEAPF64[$22>>3];
              $3052 = +HEAPF64[$103>>3];
              $3053 = $3051 * $3052;
              $3054 = $3049 * $3052;
              $3055 = $3048 * $3051;
              $3056 = $3055 - $3054;
              $3057 = +HEAPF64[$29>>3];
              $3058 = $3057 + -3.14159265358979;
              $3059 = (+__Z5IKabsd($3058));
              $3060 = $3059 + 3.14159265358979;
              $3061 = (+__Z6IKfmoddd($3060,6.2831853071795898));
              $3062 = $3061 + -3.14159265358979;
              $3063 = +HEAPF64[$23>>3];
              $3064 = +HEAPF64[$24>>3];
              $3065 = $3050 + $3053;
              $3066 = -$3053;
              $3067 = $3066 - $3050;
              $3068 = (+__Z5IKabsd($3062));
              $3069 = $3068 < 9.9999999999999995E-7;
              do {
               if ($3069) {
                $3070 = +HEAPF64[$25>>3];
                $3071 = $3070 + 1.0;
                $3072 = (+__Z5IKabsd($3071));
                $3073 = $3072 < 9.9999999999999995E-7;
                if (!($3073)) {
                 break;
                }
                $3074 = (+__Z5IKabsd($3063));
                $3075 = $3074 < 9.9999999999999995E-7;
                if (!($3075)) {
                 break;
                }
                $3076 = (+__Z5IKabsd($3049));
                $3077 = $3076 < 9.9999999999999995E-7;
                if (!($3077)) {
                 break;
                }
                $3078 = (+__Z5IKabsd($3051));
                $3079 = $3078 < 9.9999999999999995E-7;
                if (!($3079)) {
                 break;
                }
                $3080 = (+__Z5IKabsd($3064));
                $3081 = $3080 < 9.9999999999999995E-7;
                if (!($3081)) {
                 break;
                }
                $3082 = (+__Z5IKabsd($3056));
                $3083 = $3082 < 9.9999999999999995E-7;
                if (!($3083)) {
                 break;
                }
                $3084 = (+__Z5IKabsd($3065));
                $3085 = $3084 < 9.9999999999999995E-7;
                if (!($3085)) {
                 break;
                }
                $3086 = (+__Z5IKabsd($3067));
                $3087 = $3086 < 9.9999999999999995E-7;
                if (!($3087)) {
                 break;
                }
                HEAP8[$211>>0] = 1;
                $3088 = +HEAPF64[$11>>3];
                $3089 = +HEAPF64[$102>>3];
                $3090 = +HEAPF64[$15>>3];
                $3091 = $3089 * $3090;
                $3092 = +HEAPF64[$103>>3];
                $3093 = $3088 * $3092;
                $3094 = $3091 - $3093;
                $3095 = (+__Z5IKabsd($3094));
                $3096 = $3095 < 1.9999999999999999E-6;
                do {
                 if ($3096) {
                  $3097 = $3090 * $3092;
                  $3098 = $3088 * $3089;
                  $3099 = -$3098;
                  $3100 = $3099 - $3097;
                  $3101 = (+__Z5IKabsd($3100));
                  $3102 = $3101 < 1.9999999999999999E-6;
                  if (!($3102)) {
                   break;
                  }
                  $3103 = (+__Z5IKsqrd($3094));
                  $3104 = (+__Z5IKsqrd($3100));
                  $3105 = $3103 + $3104;
                  $3106 = $3105 + -1.0;
                  $3107 = (+__Z5IKabsd($3106));
                  $3108 = !($3107 <= 1.9999999999999999E-6);
                  if (!($3108)) {
                   break L7;
                  }
                 }
                } while(0);
                $3109 = +HEAPF64[$102>>3];
                $3110 = +HEAPF64[$15>>3];
                $3111 = $3109 * $3110;
                $3112 = +HEAPF64[$103>>3];
                $3113 = $3088 * $3112;
                $3114 = $3111 - $3113;
                $3115 = $3110 * $3112;
                $3116 = $3088 * $3109;
                $3117 = -$3116;
                $3118 = $3117 - $3115;
                $3119 = (+__Z7IKatan2dd($3114,$3118));
                $3120 = (+__Z5IKsind($3119));
                $3121 = (+__Z5IKcosd($3119));
                $3122 = $3119 > 3.14159265358979;
                do {
                 if ($3122) {
                  $3123 = $3119 + -6.2831853071795898;
                  $3126 = $3123;
                 } else {
                  $3124 = $3119 < -3.14159265358979;
                  if (!($3124)) {
                   $3126 = $3119;
                   break;
                  }
                  $3125 = $3119 + 6.2831853071795898;
                  $3126 = $3125;
                 }
                } while(0);
                HEAP8[$212>>0] = 0;
                HEAP8[$213>>0] = -1;
                HEAPF64[$214>>3] = $3126;
                HEAPF64[$215>>3] = $3121;
                HEAPF64[$216>>3] = $3120;
                $3127 = +HEAPF64[$214>>3];
                $3128 = (+__Z5IKcosd($3127));
                $3129 = (+__Z5IKsind($3127));
                $3130 = +HEAPF64[$103>>3];
                $3131 = $3128 * $3130;
                $3132 = +HEAPF64[$102>>3];
                $3133 = $3129 * $3132;
                $3134 = +HEAPF64[$11>>3];
                $3135 = $3132 * $3134;
                $3136 = +HEAPF64[$20>>3];
                $3137 = $3130 * $3136;
                $3138 = $3135 + $3137;
                $3139 = $3128 + $3138;
                $3140 = +HEAPF64[$15>>3];
                $3141 = +HEAPF64[$21>>3];
                $3142 = $3129 * $3130;
                $3143 = $3128 * $3132;
                $3144 = $3142 + $3143;
                $3145 = $3134 + $3144;
                $3146 = $3132 * $3136;
                $3147 = $3146 - $3129;
                $3148 = $3130 * $3134;
                $3149 = $3147 - $3148;
                $3150 = $3132 * $3141;
                $3151 = $3150 - $3128;
                $3152 = $3130 * $3140;
                $3153 = $3151 - $3152;
                $3154 = $3131 - $3133;
                $3155 = $3154 + $3140;
                $3156 = $3154 + $3136;
                $3157 = -$3142;
                $3158 = $3157 - $3143;
                $3159 = $3158 + $3141;
                $3160 = (+__Z5IKabsd($3139));
                $3161 = $3160 > 5.0000000000000004E-6;
                if ($3161) {
                 break L7;
                }
                $3162 = $3132 * $3140;
                $3163 = $3130 * $3141;
                $3164 = $3162 + $3163;
                $3165 = $3164 - $3129;
                $3166 = (+__Z5IKabsd($3165));
                $3167 = $3166 > 5.0000000000000004E-6;
                if ($3167) {
                 break L7;
                }
                $3168 = (+__Z5IKabsd($3145));
                $3169 = $3168 > 5.0000000000000004E-6;
                if ($3169) {
                 break L7;
                }
                $3170 = (+__Z5IKabsd($3149));
                $3171 = $3170 > 5.0000000000000004E-6;
                if ($3171) {
                 break L7;
                }
                $3172 = (+__Z5IKabsd($3153));
                $3173 = $3172 > 5.0000000000000004E-6;
                if ($3173) {
                 break L7;
                }
                $3174 = (+__Z5IKabsd($3155));
                $3175 = $3174 > 5.0000000000000004E-6;
                if ($3175) {
                 break L7;
                }
                $3176 = (+__Z5IKabsd($3156));
                $3177 = $3176 > 5.0000000000000004E-6;
                if ($3177) {
                 break L7;
                }
                $3178 = (+__Z5IKabsd($3159));
                $3179 = $3178 > 5.0000000000000004E-6;
                if ($3179) {
                 break L7;
                }
                __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos98,7);
                $3180 = HEAP32[$vinfos98>>2]|0;
                $3181 = ((($3180)) + 17|0);
                HEAP8[$3181>>0] = 1;
                $3182 = +HEAPF64[$this>>3];
                $3183 = HEAP32[$vinfos98>>2]|0;
                $3184 = ((($3183)) + 8|0);
                HEAPF64[$3184>>3] = $3182;
                $3185 = HEAP8[$217>>0]|0;
                $3186 = HEAP32[$vinfos98>>2]|0;
                $3187 = ((($3186)) + 19|0);
                HEAP8[$3187>>0] = $3185;
                $3188 = HEAP8[$218>>0]|0;
                $3189 = HEAP32[$vinfos98>>2]|0;
                $3190 = ((($3189)) + 20|0);
                HEAP8[$3190>>0] = $3188;
                $3191 = HEAP8[$219>>0]|0;
                $3192 = HEAP32[$vinfos98>>2]|0;
                $3193 = ((($3192)) + 18|0);
                HEAP8[$3193>>0] = $3191;
                $3194 = HEAP32[$vinfos98>>2]|0;
                $3195 = ((($3194)) + 41|0);
                HEAP8[$3195>>0] = 1;
                $3196 = +HEAPF64[$220>>3];
                $3197 = HEAP32[$vinfos98>>2]|0;
                $3198 = ((($3197)) + 32|0);
                HEAPF64[$3198>>3] = $3196;
                $3199 = HEAP8[$221>>0]|0;
                $3200 = HEAP32[$vinfos98>>2]|0;
                $3201 = ((($3200)) + 43|0);
                HEAP8[$3201>>0] = $3199;
                $3202 = HEAP8[$222>>0]|0;
                $3203 = HEAP32[$vinfos98>>2]|0;
                $3204 = ((($3203)) + 44|0);
                HEAP8[$3204>>0] = $3202;
                $3205 = HEAP8[$223>>0]|0;
                $3206 = HEAP32[$vinfos98>>2]|0;
                $3207 = ((($3206)) + 42|0);
                HEAP8[$3207>>0] = $3205;
                $3208 = HEAP32[$vinfos98>>2]|0;
                $3209 = ((($3208)) + 65|0);
                HEAP8[$3209>>0] = 1;
                $3210 = +HEAPF64[$224>>3];
                $3211 = HEAP32[$vinfos98>>2]|0;
                $3212 = ((($3211)) + 56|0);
                HEAPF64[$3212>>3] = $3210;
                $3213 = HEAP8[$225>>0]|0;
                $3214 = HEAP32[$vinfos98>>2]|0;
                $3215 = ((($3214)) + 67|0);
                HEAP8[$3215>>0] = $3213;
                $3216 = HEAP8[$226>>0]|0;
                $3217 = HEAP32[$vinfos98>>2]|0;
                $3218 = ((($3217)) + 68|0);
                HEAP8[$3218>>0] = $3216;
                $3219 = HEAP8[$227>>0]|0;
                $3220 = HEAP32[$vinfos98>>2]|0;
                $3221 = ((($3220)) + 66|0);
                HEAP8[$3221>>0] = $3219;
                $3222 = HEAP32[$vinfos98>>2]|0;
                $3223 = ((($3222)) + 89|0);
                HEAP8[$3223>>0] = 1;
                $3224 = +HEAPF64[$228>>3];
                $3225 = HEAP32[$vinfos98>>2]|0;
                $3226 = ((($3225)) + 80|0);
                HEAPF64[$3226>>3] = $3224;
                $3227 = HEAP8[$229>>0]|0;
                $3228 = HEAP32[$vinfos98>>2]|0;
                $3229 = ((($3228)) + 91|0);
                HEAP8[$3229>>0] = $3227;
                $3230 = HEAP8[$230>>0]|0;
                $3231 = HEAP32[$vinfos98>>2]|0;
                $3232 = ((($3231)) + 92|0);
                HEAP8[$3232>>0] = $3230;
                $3233 = HEAP8[$231>>0]|0;
                $3234 = HEAP32[$vinfos98>>2]|0;
                $3235 = ((($3234)) + 90|0);
                HEAP8[$3235>>0] = $3233;
                $3236 = HEAP32[$vinfos98>>2]|0;
                $3237 = ((($3236)) + 113|0);
                HEAP8[$3237>>0] = 1;
                $3238 = +HEAPF64[$101>>3];
                $3239 = HEAP32[$vinfos98>>2]|0;
                $3240 = ((($3239)) + 104|0);
                HEAPF64[$3240>>3] = $3238;
                $3241 = HEAP8[$99>>0]|0;
                $3242 = HEAP32[$vinfos98>>2]|0;
                $3243 = ((($3242)) + 115|0);
                HEAP8[$3243>>0] = $3241;
                $3244 = HEAP8[$100>>0]|0;
                $3245 = HEAP32[$vinfos98>>2]|0;
                $3246 = ((($3245)) + 116|0);
                HEAP8[$3246>>0] = $3244;
                $3247 = HEAP8[$96>>0]|0;
                $3248 = HEAP32[$vinfos98>>2]|0;
                $3249 = ((($3248)) + 114|0);
                HEAP8[$3249>>0] = $3247;
                $3250 = HEAP32[$vinfos98>>2]|0;
                $3251 = ((($3250)) + 137|0);
                HEAP8[$3251>>0] = 1;
                $3252 = +HEAPF64[$29>>3];
                $3253 = HEAP32[$vinfos98>>2]|0;
                $3254 = ((($3253)) + 128|0);
                HEAPF64[$3254>>3] = $3252;
                $3255 = HEAP8[$27>>0]|0;
                $3256 = HEAP32[$vinfos98>>2]|0;
                $3257 = ((($3256)) + 139|0);
                HEAP8[$3257>>0] = $3255;
                $3258 = HEAP8[$28>>0]|0;
                $3259 = HEAP32[$vinfos98>>2]|0;
                $3260 = ((($3259)) + 140|0);
                HEAP8[$3260>>0] = $3258;
                $3261 = HEAP8[$26>>0]|0;
                $3262 = HEAP32[$vinfos98>>2]|0;
                $3263 = ((($3262)) + 138|0);
                HEAP8[$3263>>0] = $3261;
                $3264 = HEAP32[$vinfos98>>2]|0;
                $3265 = ((($3264)) + 161|0);
                HEAP8[$3265>>0] = 1;
                $3266 = +HEAPF64[$214>>3];
                $3267 = HEAP32[$vinfos98>>2]|0;
                $3268 = ((($3267)) + 152|0);
                HEAPF64[$3268>>3] = $3266;
                $3269 = HEAP8[$212>>0]|0;
                $3270 = HEAP32[$vinfos98>>2]|0;
                $3271 = ((($3270)) + 163|0);
                HEAP8[$3271>>0] = $3269;
                $3272 = HEAP8[$213>>0]|0;
                $3273 = HEAP32[$vinfos98>>2]|0;
                $3274 = ((($3273)) + 164|0);
                HEAP8[$3274>>0] = $3272;
                $3275 = HEAP8[$211>>0]|0;
                $3276 = HEAP32[$vinfos98>>2]|0;
                $3277 = ((($3276)) + 162|0);
                HEAP8[$3277>>0] = $3275;
                __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree99,0);
                $3278 = HEAP32[$solutions>>2]|0;
                $3279 = ((($3278)) + 8|0);
                $3280 = HEAP32[$3279>>2]|0;
                (FUNCTION_TABLE_iiii[$3280 & 31]($solutions,$vinfos98,$vfree99)|0);
                __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree99);
                __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos98);
                break L7;
               }
              } while(0);
              $3281 = +HEAPF64[$25>>3];
              $3282 = +HEAPF64[$30>>3];
              $3283 = +HEAPF64[$31>>3];
              $3284 = +HEAPF64[$19>>3];
              $3285 = $3284 - $3283;
              $3286 = +HEAPF64[$101>>3];
              $3287 = (+__Z5IKabsd($3286));
              $3288 = $3287 + 3.14159265358979;
              $3289 = (+__Z6IKfmoddd($3288,6.2831853071795898));
              $3290 = $3289 + -3.14159265358979;
              $3291 = +HEAPF64[$22>>3];
              $3292 = $3282 * $3284;
              $3293 = -$3281;
              $3294 = $3283 * $3293;
              $3295 = $3294 + $3292;
              $3296 = +HEAPF64[$11>>3];
              $3297 = $3283 * $3296;
              $3298 = +HEAPF64[$23>>3];
              $3299 = $3282 * $3298;
              $3300 = -$3299;
              $3301 = $3300 - $3297;
              $3302 = +HEAPF64[$15>>3];
              $3303 = $3283 * $3302;
              $3304 = +HEAPF64[$24>>3];
              $3305 = $3282 * $3304;
              $3306 = -$3305;
              $3307 = $3306 - $3303;
              $3308 = $3282 * $3293;
              $3309 = $3308 + 1.0;
              $3310 = $3283 * $3284;
              $3311 = $3309 - $3310;
              $3312 = (+__Z5IKabsd($3290));
              $3313 = $3312 < 9.9999999999999995E-7;
              do {
               if ($3313) {
                $3314 = $3281 - $3282;
                $3315 = (+__Z5IKabsd($3314));
                $3316 = $3315 < 9.9999999999999995E-7;
                if (!($3316)) {
                 break;
                }
                $3317 = (+__Z5IKabsd($3285));
                $3318 = $3317 < 9.9999999999999995E-7;
                if (!($3318)) {
                 break;
                }
                $3319 = (+__Z5IKabsd($3291));
                $3320 = $3319 < 9.9999999999999995E-7;
                if (!($3320)) {
                 break;
                }
                $3321 = (+__Z5IKabsd($3295));
                $3322 = $3321 < 9.9999999999999995E-7;
                if (!($3322)) {
                 break;
                }
                $3323 = (+__Z5IKabsd($3301));
                $3324 = $3323 < 9.9999999999999995E-7;
                if (!($3324)) {
                 break;
                }
                $3325 = (+__Z5IKabsd($3307));
                $3326 = $3325 < 9.9999999999999995E-7;
                if (!($3326)) {
                 break;
                }
                $3327 = (+__Z5IKabsd($3311));
                $3328 = $3327 < 9.9999999999999995E-7;
                if (!($3328)) {
                 break;
                }
                HEAP8[$232>>0] = 1;
                $3329 = +HEAPF64[$20>>3];
                $3330 = (+__Z5IKabsd($3329));
                $3331 = $3330 < 1.9999999999999999E-6;
                do {
                 if ($3331) {
                  $3332 = +HEAPF64[$21>>3];
                  $3333 = (+__Z5IKabsd($3332));
                  $3334 = $3333 < 1.9999999999999999E-6;
                  if (!($3334)) {
                   break;
                  }
                  $3335 = (+__Z5IKsqrd($3329));
                  $3336 = (+__Z5IKsqrd($3332));
                  $3337 = $3335 + $3336;
                  $3338 = $3337 + -1.0;
                  $3339 = (+__Z5IKabsd($3338));
                  $3340 = !($3339 <= 1.9999999999999999E-6);
                  if (!($3340)) {
                   break L7;
                  }
                 }
                } while(0);
                $3341 = +HEAPF64[$20>>3];
                $3342 = +HEAPF64[$21>>3];
                $3343 = (+__Z7IKatan2dd($3341,$3342));
                $3344 = (+__Z5IKsind($3343));
                $3345 = (+__Z5IKcosd($3343));
                $3346 = $3343 > 3.14159265358979;
                do {
                 if ($3346) {
                  $3347 = $3343 + -6.2831853071795898;
                  $3350 = $3347;
                 } else {
                  $3348 = $3343 < -3.14159265358979;
                  if (!($3348)) {
                   $3350 = $3343;
                   break;
                  }
                  $3349 = $3343 + 6.2831853071795898;
                  $3350 = $3349;
                 }
                } while(0);
                HEAP8[$233>>0] = 0;
                HEAP8[$234>>0] = -1;
                HEAPF64[$235>>3] = $3350;
                HEAPF64[$236>>3] = $3345;
                HEAPF64[$237>>3] = $3344;
                $3351 = +HEAPF64[$235>>3];
                $3352 = (+__Z5IKcosd($3351));
                $3353 = (+__Z5IKsind($3351));
                $3354 = +HEAPF64[$19>>3];
                $3355 = +HEAPF64[$23>>3];
                $3356 = $3352 * $3354;
                $3357 = $3355 + $3356;
                $3358 = +HEAPF64[$21>>3];
                $3359 = $3358 - $3352;
                $3360 = +HEAPF64[$25>>3];
                $3361 = $3353 * $3360;
                $3362 = +HEAPF64[$15>>3];
                $3363 = $3361 + $3362;
                $3364 = $3353 * $3354;
                $3365 = +HEAPF64[$24>>3];
                $3366 = $3365 - $3364;
                $3367 = $3352 * $3360;
                $3368 = +HEAPF64[$11>>3];
                $3369 = $3368 - $3367;
                $3370 = $3360 * $3362;
                $3371 = $3353 + $3370;
                $3372 = $3354 * $3365;
                $3373 = $3371 - $3372;
                $3374 = $3354 * $3355;
                $3375 = $3360 * $3368;
                $3376 = $3375 - $3374;
                $3377 = $3376 - $3352;
                $3378 = (+__Z5IKabsd($3357));
                $3379 = $3378 > 5.0000000000000004E-6;
                if ($3379) {
                 break L7;
                }
                $3380 = +HEAPF64[$20>>3];
                $3381 = $3380 - $3353;
                $3382 = (+__Z5IKabsd($3381));
                $3383 = $3382 > 5.0000000000000004E-6;
                if ($3383) {
                 break L7;
                }
                $3384 = (+__Z5IKabsd($3359));
                $3385 = $3384 > 5.0000000000000004E-6;
                if ($3385) {
                 break L7;
                }
                $3386 = (+__Z5IKabsd($3363));
                $3387 = $3386 > 5.0000000000000004E-6;
                if ($3387) {
                 break L7;
                }
                $3388 = (+__Z5IKabsd($3366));
                $3389 = $3388 > 5.0000000000000004E-6;
                if ($3389) {
                 break L7;
                }
                $3390 = (+__Z5IKabsd($3369));
                $3391 = $3390 > 5.0000000000000004E-6;
                if ($3391) {
                 break L7;
                }
                $3392 = (+__Z5IKabsd($3373));
                $3393 = $3392 > 5.0000000000000004E-6;
                if ($3393) {
                 break L7;
                }
                $3394 = (+__Z5IKabsd($3377));
                $3395 = $3394 > 5.0000000000000004E-6;
                if ($3395) {
                 break L7;
                }
                __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos109,7);
                $3396 = HEAP32[$vinfos109>>2]|0;
                $3397 = ((($3396)) + 17|0);
                HEAP8[$3397>>0] = 1;
                $3398 = +HEAPF64[$this>>3];
                $3399 = HEAP32[$vinfos109>>2]|0;
                $3400 = ((($3399)) + 8|0);
                HEAPF64[$3400>>3] = $3398;
                $3401 = HEAP8[$238>>0]|0;
                $3402 = HEAP32[$vinfos109>>2]|0;
                $3403 = ((($3402)) + 19|0);
                HEAP8[$3403>>0] = $3401;
                $3404 = HEAP8[$239>>0]|0;
                $3405 = HEAP32[$vinfos109>>2]|0;
                $3406 = ((($3405)) + 20|0);
                HEAP8[$3406>>0] = $3404;
                $3407 = HEAP8[$240>>0]|0;
                $3408 = HEAP32[$vinfos109>>2]|0;
                $3409 = ((($3408)) + 18|0);
                HEAP8[$3409>>0] = $3407;
                $3410 = HEAP32[$vinfos109>>2]|0;
                $3411 = ((($3410)) + 41|0);
                HEAP8[$3411>>0] = 1;
                $3412 = +HEAPF64[$241>>3];
                $3413 = HEAP32[$vinfos109>>2]|0;
                $3414 = ((($3413)) + 32|0);
                HEAPF64[$3414>>3] = $3412;
                $3415 = HEAP8[$242>>0]|0;
                $3416 = HEAP32[$vinfos109>>2]|0;
                $3417 = ((($3416)) + 43|0);
                HEAP8[$3417>>0] = $3415;
                $3418 = HEAP8[$243>>0]|0;
                $3419 = HEAP32[$vinfos109>>2]|0;
                $3420 = ((($3419)) + 44|0);
                HEAP8[$3420>>0] = $3418;
                $3421 = HEAP8[$244>>0]|0;
                $3422 = HEAP32[$vinfos109>>2]|0;
                $3423 = ((($3422)) + 42|0);
                HEAP8[$3423>>0] = $3421;
                $3424 = HEAP32[$vinfos109>>2]|0;
                $3425 = ((($3424)) + 65|0);
                HEAP8[$3425>>0] = 1;
                $3426 = +HEAPF64[$245>>3];
                $3427 = HEAP32[$vinfos109>>2]|0;
                $3428 = ((($3427)) + 56|0);
                HEAPF64[$3428>>3] = $3426;
                $3429 = HEAP8[$246>>0]|0;
                $3430 = HEAP32[$vinfos109>>2]|0;
                $3431 = ((($3430)) + 67|0);
                HEAP8[$3431>>0] = $3429;
                $3432 = HEAP8[$247>>0]|0;
                $3433 = HEAP32[$vinfos109>>2]|0;
                $3434 = ((($3433)) + 68|0);
                HEAP8[$3434>>0] = $3432;
                $3435 = HEAP8[$248>>0]|0;
                $3436 = HEAP32[$vinfos109>>2]|0;
                $3437 = ((($3436)) + 66|0);
                HEAP8[$3437>>0] = $3435;
                $3438 = HEAP32[$vinfos109>>2]|0;
                $3439 = ((($3438)) + 89|0);
                HEAP8[$3439>>0] = 1;
                $3440 = +HEAPF64[$249>>3];
                $3441 = HEAP32[$vinfos109>>2]|0;
                $3442 = ((($3441)) + 80|0);
                HEAPF64[$3442>>3] = $3440;
                $3443 = HEAP8[$250>>0]|0;
                $3444 = HEAP32[$vinfos109>>2]|0;
                $3445 = ((($3444)) + 91|0);
                HEAP8[$3445>>0] = $3443;
                $3446 = HEAP8[$251>>0]|0;
                $3447 = HEAP32[$vinfos109>>2]|0;
                $3448 = ((($3447)) + 92|0);
                HEAP8[$3448>>0] = $3446;
                $3449 = HEAP8[$252>>0]|0;
                $3450 = HEAP32[$vinfos109>>2]|0;
                $3451 = ((($3450)) + 90|0);
                HEAP8[$3451>>0] = $3449;
                $3452 = HEAP32[$vinfos109>>2]|0;
                $3453 = ((($3452)) + 113|0);
                HEAP8[$3453>>0] = 1;
                $3454 = +HEAPF64[$101>>3];
                $3455 = HEAP32[$vinfos109>>2]|0;
                $3456 = ((($3455)) + 104|0);
                HEAPF64[$3456>>3] = $3454;
                $3457 = HEAP8[$99>>0]|0;
                $3458 = HEAP32[$vinfos109>>2]|0;
                $3459 = ((($3458)) + 115|0);
                HEAP8[$3459>>0] = $3457;
                $3460 = HEAP8[$100>>0]|0;
                $3461 = HEAP32[$vinfos109>>2]|0;
                $3462 = ((($3461)) + 116|0);
                HEAP8[$3462>>0] = $3460;
                $3463 = HEAP8[$96>>0]|0;
                $3464 = HEAP32[$vinfos109>>2]|0;
                $3465 = ((($3464)) + 114|0);
                HEAP8[$3465>>0] = $3463;
                $3466 = HEAP32[$vinfos109>>2]|0;
                $3467 = ((($3466)) + 137|0);
                HEAP8[$3467>>0] = 1;
                $3468 = +HEAPF64[$29>>3];
                $3469 = HEAP32[$vinfos109>>2]|0;
                $3470 = ((($3469)) + 128|0);
                HEAPF64[$3470>>3] = $3468;
                $3471 = HEAP8[$27>>0]|0;
                $3472 = HEAP32[$vinfos109>>2]|0;
                $3473 = ((($3472)) + 139|0);
                HEAP8[$3473>>0] = $3471;
                $3474 = HEAP8[$28>>0]|0;
                $3475 = HEAP32[$vinfos109>>2]|0;
                $3476 = ((($3475)) + 140|0);
                HEAP8[$3476>>0] = $3474;
                $3477 = HEAP8[$26>>0]|0;
                $3478 = HEAP32[$vinfos109>>2]|0;
                $3479 = ((($3478)) + 138|0);
                HEAP8[$3479>>0] = $3477;
                $3480 = HEAP32[$vinfos109>>2]|0;
                $3481 = ((($3480)) + 161|0);
                HEAP8[$3481>>0] = 1;
                $3482 = +HEAPF64[$235>>3];
                $3483 = HEAP32[$vinfos109>>2]|0;
                $3484 = ((($3483)) + 152|0);
                HEAPF64[$3484>>3] = $3482;
                $3485 = HEAP8[$233>>0]|0;
                $3486 = HEAP32[$vinfos109>>2]|0;
                $3487 = ((($3486)) + 163|0);
                HEAP8[$3487>>0] = $3485;
                $3488 = HEAP8[$234>>0]|0;
                $3489 = HEAP32[$vinfos109>>2]|0;
                $3490 = ((($3489)) + 164|0);
                HEAP8[$3490>>0] = $3488;
                $3491 = HEAP8[$232>>0]|0;
                $3492 = HEAP32[$vinfos109>>2]|0;
                $3493 = ((($3492)) + 162|0);
                HEAP8[$3493>>0] = $3491;
                __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree110,0);
                $3494 = HEAP32[$solutions>>2]|0;
                $3495 = ((($3494)) + 8|0);
                $3496 = HEAP32[$3495>>2]|0;
                (FUNCTION_TABLE_iiii[$3496 & 31]($solutions,$vinfos109,$vfree110)|0);
                __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree110);
                __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos109);
                break L7;
               }
              } while(0);
              $3497 = +HEAPF64[$25>>3];
              $3498 = +HEAPF64[$30>>3];
              $3499 = +HEAPF64[$31>>3];
              $3500 = +HEAPF64[$101>>3];
              $3501 = $3500 + -3.14159265358979;
              $3502 = (+__Z5IKabsd($3501));
              $3503 = $3502 + 3.14159265358979;
              $3504 = (+__Z6IKfmoddd($3503,6.2831853071795898));
              $3505 = $3504 + -3.14159265358979;
              $3506 = +HEAPF64[$19>>3];
              $3507 = $3499 + $3506;
              $3508 = +HEAPF64[$22>>3];
              $3509 = -$3506;
              $3510 = $3509 - $3499;
              $3511 = -$3497;
              $3512 = $3499 * $3511;
              $3513 = $3498 * $3509;
              $3514 = $3512 + $3513;
              $3515 = +HEAPF64[$23>>3];
              $3516 = $3498 * $3515;
              $3517 = +HEAPF64[$11>>3];
              $3518 = $3499 * $3517;
              $3519 = $3518 - $3516;
              $3520 = +HEAPF64[$15>>3];
              $3521 = $3499 * $3520;
              $3522 = +HEAPF64[$24>>3];
              $3523 = $3498 * $3522;
              $3524 = $3521 - $3523;
              $3525 = $3499 * $3506;
              $3526 = $3525 + 1.0;
              $3527 = $3498 * $3511;
              $3528 = $3527 + $3526;
              $3529 = (+__Z5IKabsd($3505));
              $3530 = $3529 < 9.9999999999999995E-7;
              if (!($3530)) {
               break;
              }
              $3531 = $3497 - $3498;
              $3532 = (+__Z5IKabsd($3531));
              $3533 = $3532 < 9.9999999999999995E-7;
              if (!($3533)) {
               break;
              }
              $3534 = (+__Z5IKabsd($3507));
              $3535 = $3534 < 9.9999999999999995E-7;
              if (!($3535)) {
               break;
              }
              $3536 = (+__Z5IKabsd($3508));
              $3537 = $3536 < 9.9999999999999995E-7;
              if (!($3537)) {
               break;
              }
              $3538 = (+__Z5IKabsd($3510));
              $3539 = $3538 < 9.9999999999999995E-7;
              if (!($3539)) {
               break;
              }
              $3540 = (+__Z5IKabsd($3514));
              $3541 = $3540 < 9.9999999999999995E-7;
              if (!($3541)) {
               break;
              }
              $3542 = (+__Z5IKabsd($3519));
              $3543 = $3542 < 9.9999999999999995E-7;
              if (!($3543)) {
               break;
              }
              $3544 = (+__Z5IKabsd($3524));
              $3545 = $3544 < 9.9999999999999995E-7;
              if (!($3545)) {
               break;
              }
              $3546 = (+__Z5IKabsd($3528));
              $3547 = $3546 < 9.9999999999999995E-7;
              if (!($3547)) {
               break;
              }
              HEAP8[$253>>0] = 1;
              $3548 = +HEAPF64[$24>>3];
              $3549 = -$3548;
              $3550 = +HEAPF64[$23>>3];
              __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x370,$3549,$3550,1.9999999999999999E-6);
              $3551 = HEAP8[$254>>0]|0;
              $3552 = ($3551<<24>>24)==(0);
              if ($3552) {
               break;
              }
              $3553 = +HEAPF64[$19>>3];
              $3554 = (+__Z6IKsignd($3553));
              __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x371,$3554,-1);
              $3555 = HEAP8[$255>>0]|0;
              $3556 = ($3555<<24>>24)==(0);
              if ($3556) {
               break;
              }
              $3557 = +HEAPF64[$x370>>3];
              $3558 = $3557 + -1.5707963267949001;
              $3559 = +HEAPF64[$x371>>3];
              $3560 = $3559 * 1.5707963267949001;
              $3561 = $3558 + $3560;
              $3562 = (+__Z5IKsind($3561));
              $3563 = (+__Z5IKcosd($3561));
              $3564 = $3561 > 3.14159265358979;
              do {
               if ($3564) {
                $3565 = $3561 + -6.2831853071795898;
                $3568 = $3565;
               } else {
                $3566 = $3561 < -3.14159265358979;
                if (!($3566)) {
                 $3568 = $3561;
                 break;
                }
                $3567 = $3561 + 6.2831853071795898;
                $3568 = $3567;
               }
              } while(0);
              HEAP8[$256>>0] = 0;
              HEAP8[$257>>0] = -1;
              HEAPF64[$258>>3] = $3568;
              HEAPF64[$259>>3] = $3563;
              HEAPF64[$260>>3] = $3562;
              $3569 = +HEAPF64[$258>>3];
              $3570 = (+__Z5IKsind($3569));
              $3571 = (+__Z5IKcosd($3569));
              $3572 = +HEAPF64[$15>>3];
              $3573 = +HEAPF64[$11>>3];
              $3574 = +HEAPF64[$24>>3];
              $3575 = +HEAPF64[$19>>3];
              $3576 = $3570 * $3575;
              $3577 = $3574 + $3576;
              $3578 = +HEAPF64[$23>>3];
              $3579 = +HEAPF64[$20>>3];
              $3580 = -$3579;
              $3581 = $3580 - $3570;
              $3582 = +HEAPF64[$21>>3];
              $3583 = -$3582;
              $3584 = $3583 - $3571;
              $3585 = +HEAPF64[$25>>3];
              $3586 = $3570 * $3585;
              $3587 = $3586 - $3572;
              $3588 = -$3585;
              $3589 = $3571 * $3588;
              $3590 = $3589 - $3573;
              $3591 = $3572 * $3588;
              $3592 = $3570 + $3591;
              $3593 = $3574 * $3575;
              $3594 = $3593 + $3592;
              $3595 = $3573 * $3588;
              $3596 = $3595 - $3571;
              $3597 = $3575 * $3578;
              $3598 = $3597 + $3596;
              $3599 = (+__Z5IKabsd($3577));
              $3600 = $3599 > 5.0000000000000004E-6;
              if ($3600) {
               break;
              }
              $3601 = $3571 * $3575;
              $3602 = $3578 - $3601;
              $3603 = (+__Z5IKabsd($3602));
              $3604 = $3603 > 5.0000000000000004E-6;
              if ($3604) {
               break;
              }
              $3605 = (+__Z5IKabsd($3581));
              $3606 = $3605 > 5.0000000000000004E-6;
              if ($3606) {
               break;
              }
              $3607 = (+__Z5IKabsd($3584));
              $3608 = $3607 > 5.0000000000000004E-6;
              if ($3608) {
               break;
              }
              $3609 = (+__Z5IKabsd($3587));
              $3610 = $3609 > 5.0000000000000004E-6;
              if ($3610) {
               break;
              }
              $3611 = (+__Z5IKabsd($3590));
              $3612 = $3611 > 5.0000000000000004E-6;
              if ($3612) {
               break;
              }
              $3613 = (+__Z5IKabsd($3594));
              $3614 = $3613 > 5.0000000000000004E-6;
              if ($3614) {
               break;
              }
              $3615 = (+__Z5IKabsd($3598));
              $3616 = $3615 > 5.0000000000000004E-6;
              if ($3616) {
               break;
              }
              __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos120,7);
              $3617 = HEAP32[$vinfos120>>2]|0;
              $3618 = ((($3617)) + 17|0);
              HEAP8[$3618>>0] = 1;
              $3619 = +HEAPF64[$this>>3];
              $3620 = HEAP32[$vinfos120>>2]|0;
              $3621 = ((($3620)) + 8|0);
              HEAPF64[$3621>>3] = $3619;
              $3622 = HEAP8[$261>>0]|0;
              $3623 = HEAP32[$vinfos120>>2]|0;
              $3624 = ((($3623)) + 19|0);
              HEAP8[$3624>>0] = $3622;
              $3625 = HEAP8[$262>>0]|0;
              $3626 = HEAP32[$vinfos120>>2]|0;
              $3627 = ((($3626)) + 20|0);
              HEAP8[$3627>>0] = $3625;
              $3628 = HEAP8[$263>>0]|0;
              $3629 = HEAP32[$vinfos120>>2]|0;
              $3630 = ((($3629)) + 18|0);
              HEAP8[$3630>>0] = $3628;
              $3631 = HEAP32[$vinfos120>>2]|0;
              $3632 = ((($3631)) + 41|0);
              HEAP8[$3632>>0] = 1;
              $3633 = +HEAPF64[$264>>3];
              $3634 = HEAP32[$vinfos120>>2]|0;
              $3635 = ((($3634)) + 32|0);
              HEAPF64[$3635>>3] = $3633;
              $3636 = HEAP8[$265>>0]|0;
              $3637 = HEAP32[$vinfos120>>2]|0;
              $3638 = ((($3637)) + 43|0);
              HEAP8[$3638>>0] = $3636;
              $3639 = HEAP8[$266>>0]|0;
              $3640 = HEAP32[$vinfos120>>2]|0;
              $3641 = ((($3640)) + 44|0);
              HEAP8[$3641>>0] = $3639;
              $3642 = HEAP8[$267>>0]|0;
              $3643 = HEAP32[$vinfos120>>2]|0;
              $3644 = ((($3643)) + 42|0);
              HEAP8[$3644>>0] = $3642;
              $3645 = HEAP32[$vinfos120>>2]|0;
              $3646 = ((($3645)) + 65|0);
              HEAP8[$3646>>0] = 1;
              $3647 = +HEAPF64[$268>>3];
              $3648 = HEAP32[$vinfos120>>2]|0;
              $3649 = ((($3648)) + 56|0);
              HEAPF64[$3649>>3] = $3647;
              $3650 = HEAP8[$269>>0]|0;
              $3651 = HEAP32[$vinfos120>>2]|0;
              $3652 = ((($3651)) + 67|0);
              HEAP8[$3652>>0] = $3650;
              $3653 = HEAP8[$270>>0]|0;
              $3654 = HEAP32[$vinfos120>>2]|0;
              $3655 = ((($3654)) + 68|0);
              HEAP8[$3655>>0] = $3653;
              $3656 = HEAP8[$271>>0]|0;
              $3657 = HEAP32[$vinfos120>>2]|0;
              $3658 = ((($3657)) + 66|0);
              HEAP8[$3658>>0] = $3656;
              $3659 = HEAP32[$vinfos120>>2]|0;
              $3660 = ((($3659)) + 89|0);
              HEAP8[$3660>>0] = 1;
              $3661 = +HEAPF64[$272>>3];
              $3662 = HEAP32[$vinfos120>>2]|0;
              $3663 = ((($3662)) + 80|0);
              HEAPF64[$3663>>3] = $3661;
              $3664 = HEAP8[$273>>0]|0;
              $3665 = HEAP32[$vinfos120>>2]|0;
              $3666 = ((($3665)) + 91|0);
              HEAP8[$3666>>0] = $3664;
              $3667 = HEAP8[$274>>0]|0;
              $3668 = HEAP32[$vinfos120>>2]|0;
              $3669 = ((($3668)) + 92|0);
              HEAP8[$3669>>0] = $3667;
              $3670 = HEAP8[$275>>0]|0;
              $3671 = HEAP32[$vinfos120>>2]|0;
              $3672 = ((($3671)) + 90|0);
              HEAP8[$3672>>0] = $3670;
              $3673 = HEAP32[$vinfos120>>2]|0;
              $3674 = ((($3673)) + 113|0);
              HEAP8[$3674>>0] = 1;
              $3675 = +HEAPF64[$101>>3];
              $3676 = HEAP32[$vinfos120>>2]|0;
              $3677 = ((($3676)) + 104|0);
              HEAPF64[$3677>>3] = $3675;
              $3678 = HEAP8[$99>>0]|0;
              $3679 = HEAP32[$vinfos120>>2]|0;
              $3680 = ((($3679)) + 115|0);
              HEAP8[$3680>>0] = $3678;
              $3681 = HEAP8[$100>>0]|0;
              $3682 = HEAP32[$vinfos120>>2]|0;
              $3683 = ((($3682)) + 116|0);
              HEAP8[$3683>>0] = $3681;
              $3684 = HEAP8[$96>>0]|0;
              $3685 = HEAP32[$vinfos120>>2]|0;
              $3686 = ((($3685)) + 114|0);
              HEAP8[$3686>>0] = $3684;
              $3687 = HEAP32[$vinfos120>>2]|0;
              $3688 = ((($3687)) + 137|0);
              HEAP8[$3688>>0] = 1;
              $3689 = +HEAPF64[$29>>3];
              $3690 = HEAP32[$vinfos120>>2]|0;
              $3691 = ((($3690)) + 128|0);
              HEAPF64[$3691>>3] = $3689;
              $3692 = HEAP8[$27>>0]|0;
              $3693 = HEAP32[$vinfos120>>2]|0;
              $3694 = ((($3693)) + 139|0);
              HEAP8[$3694>>0] = $3692;
              $3695 = HEAP8[$28>>0]|0;
              $3696 = HEAP32[$vinfos120>>2]|0;
              $3697 = ((($3696)) + 140|0);
              HEAP8[$3697>>0] = $3695;
              $3698 = HEAP8[$26>>0]|0;
              $3699 = HEAP32[$vinfos120>>2]|0;
              $3700 = ((($3699)) + 138|0);
              HEAP8[$3700>>0] = $3698;
              $3701 = HEAP32[$vinfos120>>2]|0;
              $3702 = ((($3701)) + 161|0);
              HEAP8[$3702>>0] = 1;
              $3703 = +HEAPF64[$258>>3];
              $3704 = HEAP32[$vinfos120>>2]|0;
              $3705 = ((($3704)) + 152|0);
              HEAPF64[$3705>>3] = $3703;
              $3706 = HEAP8[$256>>0]|0;
              $3707 = HEAP32[$vinfos120>>2]|0;
              $3708 = ((($3707)) + 163|0);
              HEAP8[$3708>>0] = $3706;
              $3709 = HEAP8[$257>>0]|0;
              $3710 = HEAP32[$vinfos120>>2]|0;
              $3711 = ((($3710)) + 164|0);
              HEAP8[$3711>>0] = $3709;
              $3712 = HEAP8[$253>>0]|0;
              $3713 = HEAP32[$vinfos120>>2]|0;
              $3714 = ((($3713)) + 162|0);
              HEAP8[$3714>>0] = $3712;
              __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree121,0);
              $3715 = HEAP32[$solutions>>2]|0;
              $3716 = ((($3715)) + 8|0);
              $3717 = HEAP32[$3716>>2]|0;
              (FUNCTION_TABLE_iiii[$3717 & 31]($solutions,$vinfos120,$vfree121)|0);
              __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree121);
              __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos120);
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
   }
  } while(0);
  $7303 = (($ij5$0369) + 1)|0;
  $7304 = ($7303|0)<(2);
  if ($7304) {
   $ij5$0369 = $7303;
  } else {
   break;
  }
 }
 STACKTOP = sp;return;
}
function __Z5IKsqrd($f) {
 $f = +$f;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $f * $f;
 return (+$0);
}
function __Z7IKatan2dd($fy,$fx) {
 $fy = +$fy;
 $fx = +$fx;
 var $$05 = 0.0, $$sum$i$i$i = 0, $$sum1$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0.0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ss = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0;
 $0 = sp + 160|0;
 $ss = sp + 16|0;
 $1 = sp;
 $2 = (__Z13__DOUBLE_BITSd($fy)|0);
 $3 = tempRet0;
 $4 = $3 & 2147483647;
 $5 = ($4>>>0)>(2146435072);
 $6 = ($2>>>0)>(0);
 $7 = ($4|0)==(2146435072);
 $8 = $7 & $6;
 $9 = $5 | $8;
 $10 = (__Z13__DOUBLE_BITSd($fx)|0);
 $11 = tempRet0;
 $12 = $11 & 2147483647;
 $13 = ($12>>>0)>(2146435072);
 $14 = ($10>>>0)>(0);
 $15 = ($12|0)==(2146435072);
 $16 = $15 & $14;
 $17 = $13 | $16;
 if ($9) {
  if ($17) {
   $18 = ((($ss)) + 64|0);
   $19 = ((($ss)) + 8|0);
   HEAP32[$19>>2] = (896);
   $20 = ((($ss)) + 12|0);
   HEAP32[$ss>>2] = ((940));
   HEAP32[$18>>2] = ((960));
   $21 = ((($ss)) + 4|0);
   HEAP32[$21>>2] = 0;
   $22 = HEAP32[$ss>>2]|0;
   $23 = ((($22)) + -12|0);
   $24 = HEAP32[$23>>2]|0;
   $25 = (($ss) + ($24)|0);
   __ZNSt3__18ios_base4initEPv($25,$20);
   $26 = ((($ss)) + 64|0);
   $$sum$i$i$i = (($24) + 72)|0;
   $27 = (($ss) + ($$sum$i$i$i)|0);
   HEAP32[$27>>2] = 0;
   $$sum1$i$i$i = (($24) + 76)|0;
   $28 = (($ss) + ($$sum1$i$i$i)|0);
   HEAP32[$28>>2] = -1;
   HEAP32[$ss>>2] = (876);
   HEAP32[$26>>2] = (916);
   HEAP32[$19>>2] = (896);
   __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($20);
   HEAP32[$20>>2] = (976);
   $29 = ((($ss)) + 44|0);
   $30 = ((($ss)) + 60|0);
   ;HEAP32[$29>>2]=0|0;HEAP32[$29+4>>2]=0|0;HEAP32[$29+8>>2]=0|0;HEAP32[$29+12>>2]=0|0;
   HEAP32[$30>>2] = 24;
   ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
   __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($20,$0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   $31 = ((($ss)) + 8|0);
   $32 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($31,1072)|0);
   $33 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($32,1096)|0);
   $34 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($33,1136)|0);
   $35 = (__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi($34,194)|0);
   $36 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($35,1144)|0);
   $37 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($36,1152)|0);
   $38 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($37,1160)|0);
   $39 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($38,1176)|0);
   (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($39,1192)|0);
   $40 = (___cxa_allocate_exception(8)|0);
   __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($1,$20);
   __ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($40,$1);
   ___cxa_throw(($40|0),(1936|0),(35|0));
   // unreachable;
  } else {
   $$05 = 1.5707963267949001;
   STACKTOP = sp;return (+$$05);
  }
 }
 if ($17) {
  $$05 = 0.0;
  STACKTOP = sp;return (+$$05);
 }
 $41 = (+Math_atan2((+$fy),(+$fx)));
 $$05 = $41;
 STACKTOP = sp;return (+$$05);
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 32|0);
 (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($0,$__s)|0);
 $1 = ((($this)) + 44|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($this)) + 48|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 & 8;
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = HEAP8[$0>>0]|0;
  $7 = $6 & 1;
  $8 = ($7<<24>>24)==(0);
  if ($8) {
   $11 = ((($0)) + 1|0);
   $20 = $11;
  } else {
   $9 = ((($this)) + 40|0);
   $10 = HEAP32[$9>>2]|0;
   $20 = $10;
  }
  $12 = HEAP8[$0>>0]|0;
  $13 = $12 & 1;
  $14 = ($13<<24>>24)==(0);
  if ($14) {
   $17 = $12&255;
   $18 = $17 >>> 1;
   $21 = $18;
  } else {
   $15 = ((($this)) + 36|0);
   $16 = HEAP32[$15>>2]|0;
   $21 = $16;
  }
  $19 = (($20) + ($21)|0);
  HEAP32[$1>>2] = $19;
  $22 = HEAP8[$0>>0]|0;
  $23 = $22 & 1;
  $24 = ($23<<24>>24)==(0);
  if ($24) {
   $27 = ((($0)) + 1|0);
   $36 = $27;
  } else {
   $25 = ((($this)) + 40|0);
   $26 = HEAP32[$25>>2]|0;
   $36 = $26;
  }
  $28 = HEAP8[$0>>0]|0;
  $29 = $28 & 1;
  $30 = ($29<<24>>24)==(0);
  if ($30) {
   $33 = ((($0)) + 1|0);
   $38 = $33;
  } else {
   $31 = ((($this)) + 40|0);
   $32 = HEAP32[$31>>2]|0;
   $38 = $32;
  }
  $34 = HEAP32[$1>>2]|0;
  $35 = ((($this)) + 8|0);
  HEAP32[$35>>2] = $36;
  $37 = ((($this)) + 12|0);
  HEAP32[$37>>2] = $38;
  $39 = ((($this)) + 16|0);
  HEAP32[$39>>2] = $34;
 }
 $40 = HEAP32[$2>>2]|0;
 $41 = $40 & 16;
 $42 = ($41|0)==(0);
 if ($42) {
  return;
 }
 $43 = HEAP8[$0>>0]|0;
 $44 = $43 & 1;
 $45 = ($44<<24>>24)==(0);
 if ($45) {
  $48 = $43&255;
  $49 = $48 >>> 1;
  $58 = $49;
 } else {
  $46 = ((($this)) + 36|0);
  $47 = HEAP32[$46>>2]|0;
  $58 = $47;
 }
 $50 = HEAP8[$0>>0]|0;
 $51 = $50 & 1;
 $52 = ($51<<24>>24)==(0);
 if ($52) {
  $55 = ((($0)) + 1|0);
  $57 = $55;
 } else {
  $53 = ((($this)) + 40|0);
  $54 = HEAP32[$53>>2]|0;
  $57 = $54;
 }
 $56 = (($57) + ($58)|0);
 HEAP32[$1>>2] = $56;
 $59 = HEAP8[$0>>0]|0;
 $60 = $59 & 1;
 $61 = ($60<<24>>24)==(0);
 if ($61) {
  $64 = 10;
 } else {
  $62 = HEAP32[$0>>2]|0;
  $63 = $62 & -2;
  $phitmp$i = (($63) + -1)|0;
  $64 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($0,$64,0);
 $65 = HEAP8[$0>>0]|0;
 $66 = $65 & 1;
 $67 = ($66<<24>>24)==(0);
 if ($67) {
  $70 = ((($0)) + 1|0);
  $88 = $70;
 } else {
  $68 = ((($this)) + 40|0);
  $69 = HEAP32[$68>>2]|0;
  $88 = $69;
 }
 $71 = HEAP8[$0>>0]|0;
 $72 = $71 & 1;
 $73 = ($72<<24>>24)==(0);
 if ($73) {
  $76 = ((($0)) + 1|0);
  $85 = $76;
 } else {
  $74 = ((($this)) + 40|0);
  $75 = HEAP32[$74>>2]|0;
  $85 = $75;
 }
 $77 = HEAP8[$0>>0]|0;
 $78 = $77 & 1;
 $79 = ($78<<24>>24)==(0);
 if ($79) {
  $82 = $77&255;
  $83 = $82 >>> 1;
  $86 = $83;
 } else {
  $80 = ((($this)) + 36|0);
  $81 = HEAP32[$80>>2]|0;
  $86 = $81;
 }
 $84 = (($85) + ($86)|0);
 $87 = ((($this)) + 24|0);
 HEAP32[$87>>2] = $88;
 $89 = ((($this)) + 20|0);
 HEAP32[$89>>2] = $88;
 $90 = ((($this)) + 28|0);
 HEAP32[$90>>2] = $84;
 $91 = HEAP32[$2>>2]|0;
 $92 = $91 & 3;
 $93 = ($92|0)==(0);
 if ($93) {
  return;
 }
 $94 = HEAP32[$87>>2]|0;
 $95 = (($94) + ($58)|0);
 HEAP32[$87>>2] = $95;
 return;
}
function __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($__os,$__str) {
 $__os = $__os|0;
 $__str = $__str|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__111char_traitsIcE6lengthEPKc($__str)|0);
 $1 = (__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($__os,$__str,$0)|0);
 return ($1|0);
}
function __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 48|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 & 16;
 $3 = ($2|0)==(0);
 if (!($3)) {
  $4 = ((($this)) + 44|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = ((($this)) + 24|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = ($5>>>0)<($7>>>0);
  if ($8) {
   HEAP32[$4>>2] = $7;
  }
  $9 = ((($this)) + 20|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = HEAP32[$4>>2]|0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_($agg$result,$10,$11);
  return;
 }
 $12 = $1 & 8;
 $13 = ($12|0)==(0);
 if ($13) {
  ;HEAP32[$agg$result>>2]=0|0;HEAP32[$agg$result+4>>2]=0|0;HEAP32[$agg$result+8>>2]=0|0;
  return;
 } else {
  $14 = ((($this)) + 8|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = ((($this)) + 16|0);
  $17 = HEAP32[$16>>2]|0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_($agg$result,$15,$17);
  return;
 }
}
function __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this,1032);
 $0 = ((($this)) + 64|0);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($0);
 return;
}
function __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this,$vtt) {
 $this = $this|0;
 $vtt = $vtt|0;
 var $$cast = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$vtt>>2]|0;
 HEAP32[$this>>2] = $0;
 $1 = ((($vtt)) + 32|0);
 $2 = HEAP32[$1>>2]|0;
 $$cast = $0;
 $3 = ((($$cast)) + -12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (($this) + ($4)|0);
 HEAP32[$5>>2] = $2;
 $6 = ((($vtt)) + 36|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($this)) + 8|0);
 HEAP32[$8>>2] = $7;
 $9 = ((($this)) + 12|0);
 __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 return;
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (976);
 $0 = ((($this)) + 32|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$03 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $__p$0$lcssa = 0, $__p$0$ph = 0, $__p$02 = 0, $scevgep5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $0 = $__first;
 $1 = sp;
 $2 = $__last;
 $3 = (($2) - ($0))|0;
 $4 = ($3>>>0)>(4294967279);
 if ($4) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $5 = ($3>>>0)<(11);
 if ($5) {
  $6 = $3 << 1;
  $7 = $6&255;
  HEAP8[$this>>0] = $7;
  $8 = ((($this)) + 1|0);
  $__p$0$ph = $8;
 } else {
  $9 = (($3) + 16)|0;
  $10 = $9 & -16;
  $11 = (__Znwj($10)|0);
  $12 = ((($this)) + 8|0);
  HEAP32[$12>>2] = $11;
  $13 = $10 | 1;
  HEAP32[$this>>2] = $13;
  $14 = ((($this)) + 4|0);
  HEAP32[$14>>2] = $3;
  $__p$0$ph = $11;
 }
 $15 = ($__first|0)==($__last|0);
 if ($15) {
  $__p$0$lcssa = $__p$0$ph;
  HEAP8[$1>>0] = 0;
  __ZNSt3__111char_traitsIcE6assignERcRKc($__p$0$lcssa,$1);
  STACKTOP = sp;return;
 }
 $16 = $__last;
 $17 = (($16) - ($0))|0;
 $$03 = $__first;$__p$02 = $__p$0$ph;
 while(1) {
  __ZNSt3__111char_traitsIcE6assignERcRKc($__p$02,$$03);
  $18 = ((($$03)) + 1|0);
  $19 = ((($__p$02)) + 1|0);
  $20 = ($18|0)==($__last|0);
  if ($20) {
   break;
  } else {
   $$03 = $18;$__p$02 = $19;
  }
 }
 $scevgep5 = (($__p$0$ph) + ($17)|0);
 $__p$0$lcssa = $scevgep5;
 HEAP8[$1>>0] = 0;
 __ZNSt3__111char_traitsIcE6assignERcRKc($__p$0$lcssa,$1);
 STACKTOP = sp;return;
}
function __ZNSt3__111char_traitsIcE6assignERcRKc($__c1,$__c2) {
 $__c1 = $__c1|0;
 $__c2 = $__c2|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$__c2>>0]|0;
 HEAP8[$__c1>>0] = $0;
 return;
}
function __ZNSt3__111char_traitsIcE6lengthEPKc($__s) {
 $__s = $__s|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strlen(($__s|0))|0);
 return ($0|0);
}
function __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($__os,$__str,$__len) {
 $__os = $__os|0;
 $__str = $__str|0;
 $__len = $__len|0;
 var $$byval_copy = 0, $$sum = 0, $$sum$i = 0, $$sum2 = 0, $$sum3 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__s = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $$byval_copy = sp + 16|0;
 $__s = sp + 8|0;
 $0 = sp;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($__s,$__os);
 $1 = HEAP8[$__s>>0]|0;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
  STACKTOP = sp;return ($__os|0);
 }
 $3 = HEAP32[$__os>>2]|0;
 $4 = ((($3)) + -12|0);
 $5 = HEAP32[$4>>2]|0;
 $$sum$i = (($5) + 24)|0;
 $6 = (($__os) + ($$sum$i)|0);
 $7 = HEAP32[$6>>2]|0;
 HEAP32[$0>>2] = $7;
 $8 = HEAP32[$__os>>2]|0;
 $9 = ((($8)) + -12|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = (($__os) + ($10)|0);
 $$sum = (($10) + 4)|0;
 $12 = (($__os) + ($$sum)|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = (($__str) + ($__len)|0);
 $$sum2 = (($10) + 76)|0;
 $15 = (($__os) + ($$sum2)|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = (__ZNSt3__111char_traitsIcE11eq_int_typeEii(-1,$16)|0);
 if ($17) {
  $18 = (__ZNKSt3__18ios_base6getlocEv($11)|0);
  HEAP32[$$byval_copy>>2] = $18;
  $19 = (__ZNKSt3__16locale9use_facetERNS0_2idE($$byval_copy,6160)|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = ((($20)) + 28|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = (FUNCTION_TABLE_iii[$22 & 15]($19,32)|0);
  __ZNSt3__16localeD2Ev($$byval_copy);
  $24 = $23 << 24 >> 24;
  HEAP32[$15>>2] = $24;
 }
 $25 = HEAP32[$15>>2]|0;
 $26 = $25&255;
 $27 = $13 & 176;
 $28 = ($27|0)==(32);
 $29 = $28 ? $14 : $__str;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $30 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__str,$29,$14,$11,$26)|0);
 $31 = ($30|0)==(0|0);
 if (!($31)) {
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
  STACKTOP = sp;return ($__os|0);
 }
 $32 = HEAP32[$__os>>2]|0;
 $33 = ((($32)) + -12|0);
 $34 = HEAP32[$33>>2]|0;
 $35 = (($__os) + ($34)|0);
 $$sum3 = (($34) + 16)|0;
 $36 = (($__os) + ($$sum3)|0);
 $37 = HEAP32[$36>>2]|0;
 $38 = $37 | 5;
 __ZNSt3__18ios_base5clearEj($35,$38);
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
 STACKTOP = sp;return ($__os|0);
}
function __ZNSt3__111char_traitsIcE11eq_int_typeEii($__c1,$__c2) {
 $__c1 = $__c1|0;
 $__c2 = $__c2|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__c1|0)==($__c2|0);
 return ($0|0);
}
function __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($__s,$__ob,$__op,$__oe,$__iob,$__fl) {
 $__s = $__s|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 var $$sroa$0$1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $__ns$0 = 0, $__sp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__sp = sp;
 $0 = HEAP32[$__s>>2]|0;
 $1 = ($0|0)==(0|0);
 if ($1) {
  $$sroa$0$1 = 0;
  STACKTOP = sp;return ($$sroa$0$1|0);
 }
 $2 = $__oe;
 $3 = $__ob;
 $4 = (($2) - ($3))|0;
 $5 = ((($__iob)) + 12|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)>($4|0);
 $8 = (($6) - ($4))|0;
 $__ns$0 = $7 ? $8 : 0;
 $9 = $__op;
 $10 = (($9) - ($3))|0;
 $11 = ($10|0)>(0);
 if ($11) {
  $12 = HEAP32[$0>>2]|0;
  $13 = ((($12)) + 48|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = (FUNCTION_TABLE_iiii[$14 & 31]($0,$__ob,$10)|0);
  $16 = ($15|0)==($10|0);
  if (!($16)) {
   HEAP32[$__s>>2] = 0;
   $$sroa$0$1 = 0;
   STACKTOP = sp;return ($$sroa$0$1|0);
  }
 }
 $17 = ($__ns$0|0)>(0);
 do {
  if ($17) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($__sp,$__ns$0,$__fl);
   $18 = HEAP32[$__s>>2]|0;
   $19 = HEAP8[$__sp>>0]|0;
   $20 = $19 & 1;
   $21 = ($20<<24>>24)==(0);
   $22 = ((($__sp)) + 8|0);
   $23 = HEAP32[$22>>2]|0;
   $24 = ((($__sp)) + 1|0);
   $25 = $21 ? $24 : $23;
   $26 = HEAP32[$18>>2]|0;
   $27 = ((($26)) + 48|0);
   $28 = HEAP32[$27>>2]|0;
   $29 = (FUNCTION_TABLE_iiii[$28 & 31]($18,$25,$__ns$0)|0);
   $30 = ($29|0)==($__ns$0|0);
   if ($30) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sp);
    break;
   }
   HEAP32[$__s>>2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sp);
   $$sroa$0$1 = 0;
   STACKTOP = sp;return ($$sroa$0$1|0);
  }
 } while(0);
 $31 = (($2) - ($9))|0;
 $32 = ($31|0)>(0);
 if ($32) {
  $33 = HEAP32[$__s>>2]|0;
  $34 = HEAP32[$33>>2]|0;
  $35 = ((($34)) + 48|0);
  $36 = HEAP32[$35>>2]|0;
  $37 = (FUNCTION_TABLE_iiii[$36 & 31]($33,$__op,$31)|0);
  $38 = ($37|0)==($31|0);
  if (!($38)) {
   HEAP32[$__s>>2] = 0;
   $$sroa$0$1 = 0;
   STACKTOP = sp;return ($$sroa$0$1|0);
  }
 }
 HEAP32[$5>>2] = 0;
 $39 = HEAP32[$__s>>2]|0;
 $$sroa$0$1 = $39;
 STACKTOP = sp;return ($$sroa$0$1|0);
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekoffExNS_8ios_base7seekdirEj($agg$result,$this,$0,$1,$__way,$__wch) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 $__way = $__way|0;
 $__wch = $__wch|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($this)) + 44|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($this)) + 24|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($3>>>0)<($5>>>0);
 if ($6) {
  HEAP32[$2>>2] = $5;
 }
 $7 = $__wch & 24;
 $8 = ($7|0)==(0);
 if ($8) {
  $9 = $agg$result;
  $10 = $9;
  HEAP32[$10>>2] = 0;
  $11 = (($9) + 4)|0;
  $12 = $11;
  HEAP32[$12>>2] = 0;
  $13 = ((($agg$result)) + 8|0);
  $14 = $13;
  $15 = $14;
  HEAP32[$15>>2] = -1;
  $16 = (($14) + 4)|0;
  $17 = $16;
  HEAP32[$17>>2] = -1;
  return;
 }
 $18 = ($7|0)==(24);
 $19 = ($__way|0)==(1);
 $or$cond = $19 & $18;
 if ($or$cond) {
  $20 = $agg$result;
  $21 = $20;
  HEAP32[$21>>2] = 0;
  $22 = (($20) + 4)|0;
  $23 = $22;
  HEAP32[$23>>2] = 0;
  $24 = ((($agg$result)) + 8|0);
  $25 = $24;
  $26 = $25;
  HEAP32[$26>>2] = -1;
  $27 = (($25) + 4)|0;
  $28 = $27;
  HEAP32[$28>>2] = -1;
  return;
 }
 do {
  if ((($__way|0) == 1)) {
   $29 = $__wch & 8;
   $30 = ($29|0)==(0);
   if ($30) {
    $40 = HEAP32[$4>>2]|0;
    $41 = ((($this)) + 20|0);
    $42 = HEAP32[$41>>2]|0;
    $43 = $40;
    $44 = $42;
    $45 = (($43) - ($44))|0;
    $46 = ($45|0)<(0);
    $47 = $46 << 31 >> 31;
    $71 = $45;$72 = $47;
    break;
   } else {
    $31 = ((($this)) + 12|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = ((($this)) + 8|0);
    $34 = HEAP32[$33>>2]|0;
    $35 = $32;
    $36 = $34;
    $37 = (($35) - ($36))|0;
    $38 = ($37|0)<(0);
    $39 = $38 << 31 >> 31;
    $71 = $37;$72 = $39;
    break;
   }
  } else if ((($__way|0) == 0)) {
   $71 = 0;$72 = 0;
  } else if ((($__way|0) == 2)) {
   $48 = HEAP32[$2>>2]|0;
   $49 = ((($this)) + 32|0);
   $50 = HEAP8[$49>>0]|0;
   $51 = $50 & 1;
   $52 = ($51<<24>>24)==(0);
   if ($52) {
    $55 = ((($49)) + 1|0);
    $57 = $55;
   } else {
    $53 = ((($this)) + 40|0);
    $54 = HEAP32[$53>>2]|0;
    $57 = $54;
   }
   $56 = $48;
   $58 = $57;
   $59 = (($56) - ($58))|0;
   $60 = ($59|0)<(0);
   $61 = $60 << 31 >> 31;
   $71 = $59;$72 = $61;
  } else {
   $62 = $agg$result;
   $63 = $62;
   HEAP32[$63>>2] = 0;
   $64 = (($62) + 4)|0;
   $65 = $64;
   HEAP32[$65>>2] = 0;
   $66 = ((($agg$result)) + 8|0);
   $67 = $66;
   $68 = $67;
   HEAP32[$68>>2] = -1;
   $69 = (($67) + 4)|0;
   $70 = $69;
   HEAP32[$70>>2] = -1;
   return;
  }
 } while(0);
 $73 = (_i64Add(($71|0),($72|0),($0|0),($1|0))|0);
 $74 = tempRet0;
 $75 = ($74|0)<(0);
 if (!($75)) {
  $76 = HEAP32[$2>>2]|0;
  $77 = ((($this)) + 32|0);
  $78 = HEAP8[$77>>0]|0;
  $79 = $78 & 1;
  $80 = ($79<<24>>24)==(0);
  if ($80) {
   $83 = ((($77)) + 1|0);
   $85 = $83;
  } else {
   $81 = ((($this)) + 40|0);
   $82 = HEAP32[$81>>2]|0;
   $85 = $82;
  }
  $84 = $76;
  $86 = $85;
  $87 = (($84) - ($86))|0;
  $88 = ($87|0)<(0);
  $89 = $88 << 31 >> 31;
  $90 = ($89|0)<($74|0);
  $91 = ($87>>>0)<($73>>>0);
  $92 = ($89|0)==($74|0);
  $93 = $92 & $91;
  $94 = $90 | $93;
  if (!($94)) {
   $104 = ($73|0)==(0);
   $105 = ($74|0)==(0);
   $106 = $104 & $105;
   if (!($106)) {
    $107 = $__wch & 8;
    $108 = ($107|0)==(0);
    if (!($108)) {
     $109 = ((($this)) + 12|0);
     $110 = HEAP32[$109>>2]|0;
     $111 = ($110|0)==(0|0);
     if ($111) {
      $112 = $agg$result;
      $113 = $112;
      HEAP32[$113>>2] = 0;
      $114 = (($112) + 4)|0;
      $115 = $114;
      HEAP32[$115>>2] = 0;
      $116 = ((($agg$result)) + 8|0);
      $117 = $116;
      $118 = $117;
      HEAP32[$118>>2] = -1;
      $119 = (($117) + 4)|0;
      $120 = $119;
      HEAP32[$120>>2] = -1;
      return;
     }
    }
    $121 = $__wch & 16;
    $122 = ($121|0)==(0);
    if (!($122)) {
     $123 = HEAP32[$4>>2]|0;
     $124 = ($123|0)==(0|0);
     if ($124) {
      $125 = $agg$result;
      $126 = $125;
      HEAP32[$126>>2] = 0;
      $127 = (($125) + 4)|0;
      $128 = $127;
      HEAP32[$128>>2] = 0;
      $129 = ((($agg$result)) + 8|0);
      $130 = $129;
      $131 = $130;
      HEAP32[$131>>2] = -1;
      $132 = (($130) + 4)|0;
      $133 = $132;
      HEAP32[$133>>2] = -1;
      return;
     }
    }
   }
   $134 = $__wch & 8;
   $135 = ($134|0)==(0);
   if (!($135)) {
    $136 = ((($this)) + 8|0);
    $137 = HEAP32[$136>>2]|0;
    $138 = (($137) + ($73)|0);
    $139 = HEAP32[$2>>2]|0;
    $140 = ((($this)) + 12|0);
    HEAP32[$140>>2] = $138;
    $141 = ((($this)) + 16|0);
    HEAP32[$141>>2] = $139;
   }
   $142 = $__wch & 16;
   $143 = ($142|0)==(0);
   if (!($143)) {
    $144 = ((($this)) + 20|0);
    $145 = HEAP32[$144>>2]|0;
    $146 = ((($this)) + 28|0);
    $147 = HEAP32[$146>>2]|0;
    HEAP32[$4>>2] = $145;
    HEAP32[$144>>2] = $145;
    HEAP32[$146>>2] = $147;
    $148 = HEAP32[$4>>2]|0;
    $149 = (($148) + ($73)|0);
    HEAP32[$4>>2] = $149;
   }
   $150 = $agg$result;
   $151 = $150;
   HEAP32[$151>>2] = 0;
   $152 = (($150) + 4)|0;
   $153 = $152;
   HEAP32[$153>>2] = 0;
   $154 = ((($agg$result)) + 8|0);
   $155 = $154;
   $156 = $155;
   HEAP32[$156>>2] = $73;
   $157 = (($155) + 4)|0;
   $158 = $157;
   HEAP32[$158>>2] = $74;
   return;
  }
 }
 $95 = $agg$result;
 $96 = $95;
 HEAP32[$96>>2] = 0;
 $97 = (($95) + 4)|0;
 $98 = $97;
 HEAP32[$98>>2] = 0;
 $99 = ((($agg$result)) + 8|0);
 $100 = $99;
 $101 = $100;
 HEAP32[$101>>2] = -1;
 $102 = (($100) + 4)|0;
 $103 = $102;
 HEAP32[$103>>2] = -1;
 return;
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekposENS_4fposI11__mbstate_tEEj($agg$result,$this,$__sp,$__wch) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__sp = $__sp|0;
 $__wch = $__wch|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + 16|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($__sp)) + 8|0);
 $4 = $3;
 $5 = $4;
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) + 4)|0;
 $8 = $7;
 $9 = HEAP32[$8>>2]|0;
 FUNCTION_TABLE_viiiiii[$2 & 7]($agg$result,$this,$6,$9,0,$__wch);
 return;
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9underflowEv($this) {
 $this = $this|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 44|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 24|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($1>>>0)<($3>>>0);
 if ($4) {
  HEAP32[$0>>2] = $3;
 }
 $5 = ((($this)) + 48|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $6 & 8;
 $8 = ($7|0)==(0);
 if ($8) {
  $$0 = -1;
  return ($$0|0);
 }
 $9 = ((($this)) + 16|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAP32[$0>>2]|0;
 $12 = ($10>>>0)<($11>>>0);
 if ($12) {
  $13 = ((($this)) + 8|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = ((($this)) + 12|0);
  $16 = HEAP32[$15>>2]|0;
  HEAP32[$13>>2] = $14;
  HEAP32[$15>>2] = $16;
  HEAP32[$9>>2] = $11;
 }
 $17 = ((($this)) + 12|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = HEAP32[$9>>2]|0;
 $20 = ($18>>>0)<($19>>>0);
 if (!($20)) {
  $$0 = -1;
  return ($$0|0);
 }
 $21 = HEAP8[$18>>0]|0;
 $22 = (__ZNSt3__111char_traitsIcE11to_int_typeEc($21)|0);
 $$0 = $22;
 return ($$0|0);
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9pbackfailEi($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 44|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 24|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($1>>>0)<($3>>>0);
 if ($4) {
  HEAP32[$0>>2] = $3;
 }
 $5 = ((($this)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($this)) + 12|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ($6>>>0)<($8>>>0);
 if (!($9)) {
  $$0 = -1;
  return ($$0|0);
 }
 $10 = (__ZNSt3__111char_traitsIcE11eq_int_typeEii($__c,-1)|0);
 if ($10) {
  $11 = ((($8)) + -1|0);
  $12 = HEAP32[$0>>2]|0;
  HEAP32[$5>>2] = $6;
  HEAP32[$7>>2] = $11;
  $13 = ((($this)) + 16|0);
  HEAP32[$13>>2] = $12;
  $14 = (__ZNSt3__111char_traitsIcE7not_eofEi($__c)|0);
  $$0 = $14;
  return ($$0|0);
 }
 $15 = ((($this)) + 48|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = $16 & 16;
 $18 = ($17|0)==(0);
 if ($18) {
  $19 = (__ZNSt3__111char_traitsIcE12to_char_typeEi($__c)|0);
  $20 = ((($8)) + -1|0);
  $21 = HEAP8[$20>>0]|0;
  $22 = (__ZNSt3__111char_traitsIcE2eqEcc($19,$21)|0);
  if (!($22)) {
   $$0 = -1;
   return ($$0|0);
  }
 }
 $23 = HEAP32[$5>>2]|0;
 $24 = HEAP32[$7>>2]|0;
 $25 = ((($24)) + -1|0);
 $26 = HEAP32[$0>>2]|0;
 HEAP32[$5>>2] = $23;
 HEAP32[$7>>2] = $25;
 $27 = ((($this)) + 16|0);
 HEAP32[$27>>2] = $26;
 $28 = (__ZNSt3__111char_traitsIcE12to_char_typeEi($__c)|0);
 $29 = HEAP32[$7>>2]|0;
 HEAP8[$29>>0] = $28;
 $$0 = $__c;
 return ($$0|0);
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE8overflowEi($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $0 = sp;
 $1 = (__ZNSt3__111char_traitsIcE11eq_int_typeEii($__c,-1)|0);
 if ($1) {
  $87 = (__ZNSt3__111char_traitsIcE7not_eofEi($__c)|0);
  $$0 = $87;
  STACKTOP = sp;return ($$0|0);
 }
 $2 = ((($this)) + 12|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($this)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $3;
 $7 = $5;
 $8 = (($6) - ($7))|0;
 $9 = ((($this)) + 24|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ((($this)) + 28|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ($10|0)==($12|0);
 if ($13) {
  $14 = ((($this)) + 48|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = $15 & 16;
  $17 = ($16|0)==(0);
  if ($17) {
   $$0 = -1;
   STACKTOP = sp;return ($$0|0);
  }
  $18 = ((($this)) + 20|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = $10;
  $21 = $19;
  $22 = (($20) - ($21))|0;
  $23 = ((($this)) + 44|0);
  $24 = HEAP32[$23>>2]|0;
  $25 = $24;
  $26 = (($25) - ($21))|0;
  $27 = ((($this)) + 32|0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($27,0);
  $28 = HEAP8[$27>>0]|0;
  $29 = $28 & 1;
  $30 = ($29<<24>>24)==(0);
  if ($30) {
   $33 = 10;
  } else {
   $31 = HEAP32[$27>>2]|0;
   $32 = $31 & -2;
   $phitmp$i = (($32) + -1)|0;
   $33 = $phitmp$i;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($27,$33,0);
  $34 = HEAP8[$27>>0]|0;
  $35 = $34 & 1;
  $36 = ($35<<24>>24)==(0);
  if ($36) {
   $39 = ((($27)) + 1|0);
   $48 = $39;
  } else {
   $37 = ((($this)) + 40|0);
   $38 = HEAP32[$37>>2]|0;
   $48 = $38;
  }
  $40 = HEAP8[$27>>0]|0;
  $41 = $40 & 1;
  $42 = ($41<<24>>24)==(0);
  if ($42) {
   $45 = $40&255;
   $46 = $45 >>> 1;
   $49 = $46;
  } else {
   $43 = ((($this)) + 36|0);
   $44 = HEAP32[$43>>2]|0;
   $49 = $44;
  }
  $47 = (($48) + ($49)|0);
  HEAP32[$9>>2] = $48;
  HEAP32[$18>>2] = $48;
  HEAP32[$11>>2] = $47;
  $50 = HEAP32[$9>>2]|0;
  $51 = (($50) + ($22)|0);
  HEAP32[$9>>2] = $51;
  $52 = HEAP32[$18>>2]|0;
  $53 = (($52) + ($26)|0);
  HEAP32[$23>>2] = $53;
 }
 $54 = HEAP32[$9>>2]|0;
 $55 = ((($54)) + 1|0);
 HEAP32[$0>>2] = $55;
 $56 = ((($this)) + 44|0);
 $57 = HEAP32[$56>>2]|0;
 $58 = ($55>>>0)<($57>>>0);
 $59 = $58 ? $56 : $0;
 $60 = HEAP32[$59>>2]|0;
 HEAP32[$56>>2] = $60;
 $61 = ((($this)) + 48|0);
 $62 = HEAP32[$61>>2]|0;
 $63 = $62 & 8;
 $64 = ($63|0)==(0);
 if (!($64)) {
  $65 = ((($this)) + 32|0);
  $66 = HEAP8[$65>>0]|0;
  $67 = $66 & 1;
  $68 = ($67<<24>>24)==(0);
  if ($68) {
   $71 = ((($65)) + 1|0);
   $73 = $71;
  } else {
   $69 = ((($this)) + 40|0);
   $70 = HEAP32[$69>>2]|0;
   $73 = $70;
  }
  $72 = (($73) + ($8)|0);
  $74 = HEAP32[$56>>2]|0;
  HEAP32[$4>>2] = $73;
  HEAP32[$2>>2] = $72;
  $75 = ((($this)) + 16|0);
  HEAP32[$75>>2] = $74;
 }
 $76 = $__c&255;
 $77 = HEAP32[$9>>2]|0;
 $78 = HEAP32[$11>>2]|0;
 $79 = ($77|0)==($78|0);
 if ($79) {
  $80 = HEAP32[$this>>2]|0;
  $81 = ((($80)) + 52|0);
  $82 = HEAP32[$81>>2]|0;
  $83 = (__ZNSt3__111char_traitsIcE11to_int_typeEc($76)|0);
  $84 = (FUNCTION_TABLE_iii[$82 & 15]($this,$83)|0);
  $$0 = $84;
  STACKTOP = sp;return ($$0|0);
 } else {
  $85 = ((($77)) + 1|0);
  HEAP32[$9>>2] = $85;
  HEAP8[$77>>0] = $76;
  $86 = (__ZNSt3__111char_traitsIcE11to_int_typeEc($76)|0);
  $$0 = $86;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function __ZNSt3__111char_traitsIcE11to_int_typeEc($__c) {
 $__c = $__c|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__c&255;
 return ($0|0);
}
function __ZNSt3__111char_traitsIcE7not_eofEi($__c) {
 $__c = $__c|0;
 var $$__c = 0, $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__111char_traitsIcE11eq_int_typeEii($__c,-1)|0);
 $$__c = $0 ? 0 : $__c;
 return ($$__c|0);
}
function __ZNSt3__111char_traitsIcE12to_char_typeEi($__c) {
 $__c = $__c|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__c&255;
 return ($0|0);
}
function __ZNSt3__111char_traitsIcE2eqEcc($__c1,$__c2) {
 $__c1 = $__c1|0;
 $__c2 = $__c2|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__c1<<24>>24)==($__c2<<24>>24);
 return ($0|0);
}
function __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this);
 __ZdlPv($this);
 return;
}
function __ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + -8|0);
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
 return;
}
function __ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + -8|0);
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($0);
 return;
}
function __ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($this) + ($2)|0);
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($3);
 return;
}
function __ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($this) + ($2)|0);
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($3);
 return;
}
function __Z6IKacosd($f) {
 $f = +$f;
 var $$06 = 0.0, $$sum$i$i$i = 0, $$sum1$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0.0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $ss = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0;
 $0 = sp + 160|0;
 $ss = sp + 16|0;
 $1 = sp;
 $2 = $f > -1.0000020000000001;
 $3 = $f < 1.0000020000000001;
 $or$cond = $2 & $3;
 if (!($or$cond)) {
  $4 = ((($ss)) + 64|0);
  $5 = ((($ss)) + 8|0);
  HEAP32[$5>>2] = (896);
  $6 = ((($ss)) + 12|0);
  HEAP32[$ss>>2] = ((940));
  HEAP32[$4>>2] = ((960));
  $7 = ((($ss)) + 4|0);
  HEAP32[$7>>2] = 0;
  $8 = HEAP32[$ss>>2]|0;
  $9 = ((($8)) + -12|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = (($ss) + ($10)|0);
  __ZNSt3__18ios_base4initEPv($11,$6);
  $12 = ((($ss)) + 64|0);
  $$sum$i$i$i = (($10) + 72)|0;
  $13 = (($ss) + ($$sum$i$i$i)|0);
  HEAP32[$13>>2] = 0;
  $$sum1$i$i$i = (($10) + 76)|0;
  $14 = (($ss) + ($$sum1$i$i$i)|0);
  HEAP32[$14>>2] = -1;
  HEAP32[$ss>>2] = (876);
  HEAP32[$12>>2] = (916);
  HEAP32[$5>>2] = (896);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($6);
  HEAP32[$6>>2] = (976);
  $15 = ((($ss)) + 44|0);
  $16 = ((($ss)) + 60|0);
  ;HEAP32[$15>>2]=0|0;HEAP32[$15+4>>2]=0|0;HEAP32[$15+8>>2]=0|0;HEAP32[$15+12>>2]=0|0;
  HEAP32[$16>>2] = 24;
  ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
  __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($6,$0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
  $17 = ((($ss)) + 8|0);
  $18 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($17,1072)|0);
  $19 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($18,1096)|0);
  $20 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($19,1136)|0);
  $21 = (__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi($20,163)|0);
  $22 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($21,1144)|0);
  $23 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($22,1488)|0);
  $24 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($23,1160)|0);
  $25 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($24,1496)|0);
  (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($25,1192)|0);
  $26 = (___cxa_allocate_exception(8)|0);
  __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($1,$6);
  __ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($26,$1);
  ___cxa_throw(($26|0),(1936|0),(35|0));
  // unreachable;
 }
 $27 = !($f <= -1.0);
 if (!($27)) {
  $$06 = 3.14159265358979;
  STACKTOP = sp;return (+$$06);
 }
 $28 = !($f >= 1.0);
 if (!($28)) {
  $$06 = 0.0;
  STACKTOP = sp;return (+$$06);
 }
 $29 = (+Math_acos((+$f)));
 $$06 = $29;
 STACKTOP = sp;return (+$$06);
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = 0;
 $0 = ((($this)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($this)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = ($__n|0)==(0);
 if ($2) {
  return;
 }
 __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8allocateEj($this,$__n);
 __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE18__construct_at_endEj($this,$__n);
 return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = 0;
 $0 = ((($this)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($this)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = ($__n|0)==(0);
 if ($2) {
  return;
 }
 __ZNSt3__16vectorIiNS_9allocatorIiEEE8allocateEj($this,$__n);
 __ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endEj($this,$__n);
 return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$promoted = 0, $0 = 0, $1 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $$promoted = HEAP32[$0>>2]|0;
 $1 = $__n << 2;
 _memset(($$promoted|0),0,($1|0))|0;
 $scevgep = (($$promoted) + ($__n<<2)|0);
 HEAP32[$0>>2] = $scevgep;
 return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $$0 = $__n;
 while(1) {
  $1 = HEAP32[$0>>2]|0;
  __ZN6ikfast23IkSingleDOFSolutionBaseIdEC2Ev($1);
  $2 = HEAP32[$0>>2]|0;
  $3 = ((($2)) + 24|0);
  HEAP32[$0>>2] = $3;
  $4 = (($$0) + -1)|0;
  $5 = ($4|0)==(0);
  if ($5) {
   break;
  } else {
   $$0 = $4;
  }
 }
 return;
}
function __ZN6ikfast23IkSingleDOFSolutionBaseIdEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 16|0);
 ;HEAP32[$this>>2]=0|0;HEAP32[$this+4>>2]=0|0;HEAP32[$this+8>>2]=0|0;HEAP32[$this+12>>2]=0|0;
 HEAP8[$0>>0] = -1;
 $1 = ((($this)) + 18|0);
 HEAP8[$1>>0] = 1;
 $2 = ((($this)) + 19|0);
 ;HEAP8[$2>>0]=255|0;HEAP8[$2+1>>0]=255|0;HEAP8[$2+2>>0]=255|0;HEAP8[$2+3>>0]=255|0;HEAP8[$2+4>>0]=255|0;
 return;
}
function __Z13IKatan2Simpledd($fy,$fx) {
 $fy = +$fy;
 $fx = +$fx;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+Math_atan2((+$fy),(+$fx)));
 return (+$0);
}
function _strtoull_l($s,$p,$base,$loc) {
 $s = $s|0;
 $p = $p|0;
 $base = $base|0;
 $loc = $loc|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strtoull($s,$p,$base)|0);
 $1 = tempRet0;
 tempRet0 = ($1);
 return ($0|0);
}
function _strtoll_l($s,$p,$base,$loc) {
 $s = $s|0;
 $p = $p|0;
 $base = $base|0;
 $loc = $loc|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strtoll($s,$p,$base)|0);
 $1 = tempRet0;
 tempRet0 = ($1);
 return ($0|0);
}
function _isdigit_l($c,$l) {
 $c = $c|0;
 $l = $l|0;
 var $0 = 0, $isdigit = 0, $isdigittmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isdigittmp = (($c) + -48)|0;
 $isdigit = ($isdigittmp>>>0)<(10);
 $0 = $isdigit&1;
 return ($0|0);
}
function _isxdigit_l($c,$l) {
 $c = $c|0;
 $l = $l|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_isxdigit($c)|0);
 return ($0|0);
}
function _mbrlen($s,$n,$st) {
 $s = $s|0;
 $n = $n|0;
 $st = $st|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($st|0)!=(0|0);
 $1 = $0 ? $st : 1776;
 $2 = (_mbrtowc(0,$s,$n,$1)|0);
 return ($2|0);
}
function _mbrtowc($wc,$src,$n,$st) {
 $wc = $wc|0;
 $src = $src|0;
 $n = $n|0;
 $st = $st|0;
 var $$0 = 0, $$023 = 0, $$1 = 0, $$lcssa = 0, $$lcssa34 = 0, $$st = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $c$04 = 0, $c$1 = 0, $c$2 = 0, $s$05 = 0, $s$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $0 = sp;
 HEAP32[$0>>2] = $wc;
 $1 = ($st|0)==(0|0);
 $$st = $1 ? 1784 : $st;
 $2 = HEAP32[$$st>>2]|0;
 $3 = ($src|0)==(0|0);
 L1: do {
  if ($3) {
   $4 = ($2|0)==(0);
   if ($4) {
    $$0 = 0;
    STACKTOP = sp;return ($$0|0);
   }
  } else {
   $5 = ($wc|0)==(0|0);
   if ($5) {
    HEAP32[$0>>2] = $0;
    $11 = $0;
   } else {
    $11 = $wc;
   }
   $6 = ($n|0)==(0);
   if ($6) {
    $$0 = -2;
    STACKTOP = sp;return ($$0|0);
   }
   $7 = ($2|0)==(0);
   do {
    if ($7) {
     $8 = HEAP8[$src>>0]|0;
     $9 = $8&255;
     $10 = ($8<<24>>24)>(-1);
     if ($10) {
      HEAP32[$11>>2] = $9;
      $12 = ($8<<24>>24)!=(0);
      $13 = $12&1;
      $$0 = $13;
      STACKTOP = sp;return ($$0|0);
     } else {
      $14 = (($9) + -194)|0;
      $15 = ($14>>>0)>(50);
      if ($15) {
       break L1;
      }
      $16 = ((($src)) + 1|0);
      $17 = (1568 + ($14<<2)|0);
      $18 = HEAP32[$17>>2]|0;
      $19 = (($n) + -1)|0;
      $20 = ($19|0)==(0);
      if ($20) {
       $c$2 = $18;
       break;
      } else {
       $$023 = $19;$c$04 = $18;$s$05 = $16;
       label = 11;
       break;
      }
     }
    } else {
     $$023 = $n;$c$04 = $2;$s$05 = $src;
     label = 11;
    }
   } while(0);
   L18: do {
    if ((label|0) == 11) {
     $21 = HEAP8[$s$05>>0]|0;
     $22 = $21&255;
     $23 = $22 >>> 3;
     $24 = (($23) + -16)|0;
     $25 = $c$04 >> 26;
     $26 = (($23) + ($25))|0;
     $27 = $24 | $26;
     $28 = ($27>>>0)>(7);
     if ($28) {
      break L1;
     } else {
      $$1 = $$023;$32 = $21;$c$1 = $c$04;$s$1 = $s$05;
     }
     while(1) {
      $29 = $c$1 << 6;
      $30 = ((($s$1)) + 1|0);
      $31 = $32&255;
      $33 = (($31) + -128)|0;
      $34 = $33 | $29;
      $35 = (($$1) + -1)|0;
      $36 = ($34|0)<(0);
      if (!($36)) {
       $$lcssa = $34;$$lcssa34 = $35;
       break;
      }
      $38 = ($35|0)==(0);
      if ($38) {
       $c$2 = $34;
       break L18;
      }
      $39 = HEAP8[$30>>0]|0;
      $40 = $39 & -64;
      $41 = ($40<<24>>24)==(-128);
      if ($41) {
       $$1 = $35;$32 = $39;$c$1 = $34;$s$1 = $30;
      } else {
       break L1;
      }
     }
     HEAP32[$$st>>2] = 0;
     HEAP32[$11>>2] = $$lcssa;
     $37 = (($n) - ($$lcssa34))|0;
     $$0 = $37;
     STACKTOP = sp;return ($$0|0);
    }
   } while(0);
   HEAP32[$$st>>2] = $c$2;
   $$0 = -2;
   STACKTOP = sp;return ($$0|0);
  }
 } while(0);
 HEAP32[$$st>>2] = 0;
 $42 = (___errno_location()|0);
 HEAP32[$42>>2] = 84;
 $$0 = -1;
 STACKTOP = sp;return ($$0|0);
}
function _mbsinit($st) {
 $st = $st|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($st|0)==(0|0);
 if ($0) {
  $4 = 1;
 } else {
  $1 = HEAP32[$st>>2]|0;
  $2 = ($1|0)==(0);
  $4 = $2;
 }
 $3 = $4&1;
 return ($3|0);
}
function _mbsnrtowcs($wcs,$src,$n,$wn,$st) {
 $wcs = $wcs|0;
 $src = $src|0;
 $n = $n|0;
 $wn = $wn|0;
 $st = $st|0;
 var $$02$ = 0, $$021 = 0, $$0218 = 0, $$1 = 0, $$13 = 0, $$216 = 0, $$24 = 0, $$313 = 0, $$cast = 0, $$lcssa = 0, $$lcssa57 = 0, $$pr$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cnt$019 = 0, $cnt$1 = 0, $cnt$214 = 0, $cnt$214$lcssa = 0, $cnt$3 = 0, $or$cond = 0, $or$cond17 = 0, $s = 0, $wbuf = 0, $wcs$ = 0;
 var $wn$ = 0, $ws$020 = 0, $ws$020$lcssa56 = 0, $ws$09 = 0, $ws$1 = 0, $ws$215 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1040|0;
 $wbuf = sp + 8|0;
 $s = sp;
 $0 = HEAP32[$src>>2]|0;
 HEAP32[$s>>2] = $0;
 $1 = ($wcs|0)!=(0|0);
 $wn$ = $1 ? $wn : 256;
 $wcs$ = $1 ? $wcs : $wbuf;
 $$cast = $0;
 $2 = ($0|0)!=(0);
 $3 = ($wn$|0)!=(0);
 $or$cond17 = $3 & $2;
 L1: do {
  if ($or$cond17) {
   $$021 = $n;$$0218 = $wn$;$37 = $$cast;$cnt$019 = 0;$ws$020 = $wcs$;
   while(1) {
    $4 = $$021 >>> 2;
    $5 = ($4>>>0)>=($$0218>>>0);
    $6 = ($$021>>>0)>(131);
    $7 = $6 | $5;
    if (!($7)) {
     $$1 = $$021;$$24 = $$0218;$18 = $37;$cnt$1 = $cnt$019;$ws$09 = $ws$020;
     break L1;
    }
    $$02$ = $5 ? $$0218 : $4;
    $8 = (($$021) - ($$02$))|0;
    $9 = (_mbsrtowcs($ws$020,$s,$$02$,$st)|0);
    $10 = ($9|0)==(-1);
    if ($10) {
     $$lcssa57 = $8;$ws$020$lcssa56 = $ws$020;
     break;
    }
    $11 = ($ws$020|0)==($wbuf|0);
    $12 = (($ws$020) + ($9<<2)|0);
    $13 = $11 ? 0 : $9;
    $$13 = (($$0218) - ($13))|0;
    $ws$1 = $11 ? $ws$020 : $12;
    $14 = (($9) + ($cnt$019))|0;
    $15 = HEAP32[$s>>2]|0;
    $16 = ($15|0)!=(0|0);
    $17 = ($$0218|0)!=($13|0);
    $or$cond = $17 & $16;
    if ($or$cond) {
     $$021 = $8;$$0218 = $$13;$37 = $15;$cnt$019 = $14;$ws$020 = $ws$1;
    } else {
     $$1 = $8;$$24 = $$13;$18 = $15;$cnt$1 = $14;$ws$09 = $ws$1;
     break L1;
    }
   }
   $$pr$pre = HEAP32[$s>>2]|0;
   $$1 = $$lcssa57;$$24 = 0;$18 = $$pr$pre;$cnt$1 = -1;$ws$09 = $ws$020$lcssa56;
  } else {
   $$1 = $n;$$24 = $wn$;$18 = $$cast;$cnt$1 = 0;$ws$09 = $wcs$;
  }
 } while(0);
 $19 = ($18|0)==(0|0);
 L8: do {
  if ($19) {
   $cnt$3 = $cnt$1;
  } else {
   $20 = ($$24|0)!=(0);
   $21 = ($$1|0)!=(0);
   $22 = $20 & $21;
   if ($22) {
    $$216 = $$1;$$313 = $$24;$23 = $18;$cnt$214 = $cnt$1;$ws$215 = $ws$09;
    while(1) {
     $24 = (_mbrtowc($ws$215,$23,$$216,$st)|0);
     $25 = (($24) + 2)|0;
     $26 = ($25>>>0)<(3);
     if ($26) {
      $$lcssa = $24;$cnt$214$lcssa = $cnt$214;
      break;
     }
     $27 = HEAP32[$s>>2]|0;
     $28 = (($27) + ($24)|0);
     HEAP32[$s>>2] = $28;
     $29 = (($$216) - ($24))|0;
     $30 = ((($ws$215)) + 4|0);
     $31 = (($$313) + -1)|0;
     $32 = (($cnt$214) + 1)|0;
     $33 = ($31|0)!=(0);
     $34 = ($$216|0)!=($24|0);
     $35 = $33 & $34;
     if ($35) {
      $$216 = $29;$$313 = $31;$23 = $28;$cnt$214 = $32;$ws$215 = $30;
     } else {
      $cnt$3 = $32;
      break L8;
     }
    }
    if ((($$lcssa|0) == 0)) {
     HEAP32[$s>>2] = 0;
     $cnt$3 = $cnt$214$lcssa;
     break;
    } else if ((($$lcssa|0) == -1)) {
     $cnt$3 = -1;
     break;
    } else {
     HEAP32[$st>>2] = 0;
     $cnt$3 = $cnt$214$lcssa;
     break;
    }
   } else {
    $cnt$3 = $cnt$1;
   }
  }
 } while(0);
 if (!($1)) {
  STACKTOP = sp;return ($cnt$3|0);
 }
 $36 = HEAP32[$s>>2]|0;
 HEAP32[$src>>2] = $36;
 STACKTOP = sp;return ($cnt$3|0);
}
function _mbsrtowcs($ws,$src,$wn,$st) {
 $ws = $ws|0;
 $src = $src|0;
 $wn = $wn|0;
 $st = $st|0;
 var $$0 = 0, $$02$ph = 0, $$0219 = 0, $$03 = 0, $$1 = 0, $$1$lcssa = 0, $$14$lcssa = 0, $$1415 = 0, $$2 = 0, $$2$lcssa = 0, $$25 = 0, $$25$lcssa = 0, $$3 = 0, $$36 = 0, $$4 = 0, $$434 = 0, $$47$ph = 0, $$4718 = 0, $$48 = 0, $$5 = 0;
 var $$5$lcssa = 0, $$6 = 0, $$6$lcssa = 0, $$7 = 0, $$8 = 0, $$833 = 0, $$in = 0, $$lcssa102 = 0, $$lcssa90 = 0, $$lcssa94 = 0, $$lcssa96 = 0, $$lcssa97 = 0, $$lcssa98 = 0, $$old1 = 0, $$pre$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0;
 var $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0;
 var $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $c$2 = 0, $c$4 = 0, $c$5 = 0, $c$6 = 0, $or$cond = 0, $s$0 = 0, $s$1$lcssa = 0, $s$10 = 0, $s$1035 = 0, $s$109 = 0, $s$116 = 0, $s$2 = 0, $s$2$lcssa = 0, $s$3 = 0, $s$4 = 0, $s$5$lcssa = 0, $s$5$ph = 0;
 var $s$520 = 0, $s$6 = 0, $s$6$lcssa = 0, $s$7 = 0, $s$7$lcssa = 0, $s$8 = 0, $s$9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$src>>2]|0;
 $1 = ($st|0)==(0|0);
 if ($1) {
  label = 5;
 } else {
  $2 = HEAP32[$st>>2]|0;
  $3 = ($2|0)==(0);
  if ($3) {
   label = 5;
  } else {
   $4 = ($ws|0)==(0|0);
   if ($4) {
    $$36 = $wn;$c$2 = $2;$s$3 = $0;
    label = 16;
   } else {
    HEAP32[$st>>2] = 0;
    $$3 = $ws;$$7 = $wn;$c$4 = $2;$s$8 = $0;
    label = 37;
   }
  }
 }
 if ((label|0) == 5) {
  $5 = ($ws|0)==(0|0);
  if ($5) {
   $$03 = $wn;$s$0 = $0;
   label = 7;
  } else {
   $$02$ph = $ws;$$47$ph = $wn;$s$5$ph = $0;
   label = 6;
  }
 }
 L7: while(1) {
  if ((label|0) == 6) {
   label = 0;
   $6 = ($$47$ph|0)==(0);
   if ($6) {
    $s$5$lcssa = $s$5$ph;
    label = 26;
    break;
   } else {
    $$0219 = $$02$ph;$$4718 = $$47$ph;$s$520 = $s$5$ph;
   }
   while(1) {
    $63 = HEAP8[$s$520>>0]|0;
    $64 = $63&255;
    $65 = (($64) + -1)|0;
    $66 = ($65>>>0)<(127);
    do {
     if ($66) {
      $67 = $s$520;
      $68 = $67 & 3;
      $69 = ($68|0)==(0);
      $70 = ($$4718>>>0)>(4);
      $or$cond = $70 & $69;
      if ($or$cond) {
       $$1 = $$0219;$$5 = $$4718;$s$6 = $s$520;
       while(1) {
        $71 = HEAP32[$s$6>>2]|0;
        $72 = (($71) + -16843009)|0;
        $73 = $72 | $71;
        $74 = $73 & -2139062144;
        $75 = ($74|0)==(0);
        if (!($75)) {
         $$1$lcssa = $$1;$$5$lcssa = $$5;$$lcssa94 = $71;$s$6$lcssa = $s$6;
         label = 32;
         break;
        }
        $76 = ((($s$6)) + 1|0);
        $77 = $71 & 255;
        $78 = ((($$1)) + 4|0);
        HEAP32[$$1>>2] = $77;
        $79 = ((($s$6)) + 2|0);
        $80 = HEAP8[$76>>0]|0;
        $81 = $80&255;
        $82 = ((($$1)) + 8|0);
        HEAP32[$78>>2] = $81;
        $83 = ((($s$6)) + 3|0);
        $84 = HEAP8[$79>>0]|0;
        $85 = $84&255;
        $86 = ((($$1)) + 12|0);
        HEAP32[$82>>2] = $85;
        $87 = ((($s$6)) + 4|0);
        $88 = HEAP8[$83>>0]|0;
        $89 = $88&255;
        $90 = ((($$1)) + 16|0);
        HEAP32[$86>>2] = $89;
        $91 = (($$5) + -4)|0;
        $$old1 = ($91>>>0)>(4);
        if ($$old1) {
         $$1 = $90;$$5 = $91;$s$6 = $87;
        } else {
         $$lcssa96 = $87;$$lcssa97 = $90;$$lcssa98 = $91;
         label = 31;
         break;
        }
       }
       if ((label|0) == 31) {
        label = 0;
        $$pre$pre = HEAP8[$$lcssa96>>0]|0;
        $$2 = $$lcssa97;$$6 = $$lcssa98;$94 = $$pre$pre;$s$7 = $$lcssa96;
        break;
       }
       else if ((label|0) == 32) {
        label = 0;
        $92 = $$lcssa94&255;
        $$2 = $$1$lcssa;$$6 = $$5$lcssa;$94 = $92;$s$7 = $s$6$lcssa;
        break;
       }
      } else {
       $$2 = $$0219;$$6 = $$4718;$94 = $63;$s$7 = $s$520;
      }
     } else {
      $$2 = $$0219;$$6 = $$4718;$94 = $63;$s$7 = $s$520;
     }
    } while(0);
    $93 = $94&255;
    $95 = (($93) + -1)|0;
    $96 = ($95>>>0)<(127);
    if (!($96)) {
     $$2$lcssa = $$2;$$6$lcssa = $$6;$$lcssa102 = $93;$s$7$lcssa = $s$7;
     break;
    }
    $97 = ((($s$7)) + 1|0);
    $98 = ((($$2)) + 4|0);
    HEAP32[$$2>>2] = $93;
    $99 = (($$6) + -1)|0;
    $100 = ($99|0)==(0);
    if ($100) {
     $s$5$lcssa = $97;
     label = 26;
     break L7;
    } else {
     $$0219 = $98;$$4718 = $99;$s$520 = $97;
    }
   }
   $101 = (($$lcssa102) + -194)|0;
   $102 = ($101>>>0)>(50);
   if ($102) {
    $$434 = $$2$lcssa;$$833 = $$6$lcssa;$s$1035 = $s$7$lcssa;
    label = 48;
    break;
   }
   $103 = ((($s$7$lcssa)) + 1|0);
   $104 = (1568 + ($101<<2)|0);
   $105 = HEAP32[$104>>2]|0;
   $$3 = $$2$lcssa;$$7 = $$6$lcssa;$c$4 = $105;$s$8 = $103;
   label = 37;
   continue;
  }
  else if ((label|0) == 7) {
   label = 0;
   $7 = HEAP8[$s$0>>0]|0;
   $8 = $7&255;
   $9 = (($8) + -1)|0;
   $10 = ($9>>>0)<(127);
   if ($10) {
    $11 = $s$0;
    $12 = $11 & 3;
    $13 = ($12|0)==(0);
    if ($13) {
     $14 = HEAP32[$s$0>>2]|0;
     $15 = (($14) + -16843009)|0;
     $16 = $15 | $14;
     $17 = $16 & -2139062144;
     $18 = ($17|0)==(0);
     if ($18) {
      $$1415 = $$03;$s$116 = $s$0;
      while(1) {
       $19 = ((($s$116)) + 4|0);
       $20 = (($$1415) + -4)|0;
       $21 = HEAP32[$19>>2]|0;
       $22 = (($21) + -16843009)|0;
       $23 = $22 | $21;
       $24 = $23 & -2139062144;
       $25 = ($24|0)==(0);
       if ($25) {
        $$1415 = $20;$s$116 = $19;
       } else {
        $$14$lcssa = $20;$$in = $21;$s$1$lcssa = $19;
        break;
       }
      }
     } else {
      $$14$lcssa = $$03;$$in = $14;$s$1$lcssa = $s$0;
     }
     $26 = $$in&255;
     $$25 = $$14$lcssa;$28 = $26;$s$2 = $s$1$lcssa;
    } else {
     $$25 = $$03;$28 = $7;$s$2 = $s$0;
    }
   } else {
    $$25 = $$03;$28 = $7;$s$2 = $s$0;
   }
   $27 = $28&255;
   $29 = (($27) + -1)|0;
   $30 = ($29>>>0)<(127);
   if ($30) {
    $31 = ((($s$2)) + 1|0);
    $32 = (($$25) + -1)|0;
    $$03 = $32;$s$0 = $31;
    label = 7;
    continue;
   } else {
    $$25$lcssa = $$25;$$lcssa90 = $27;$s$2$lcssa = $s$2;
   }
   $33 = (($$lcssa90) + -194)|0;
   $34 = ($33>>>0)>(50);
   if ($34) {
    $$434 = $ws;$$833 = $$25$lcssa;$s$1035 = $s$2$lcssa;
    label = 48;
    break;
   }
   $35 = ((($s$2$lcssa)) + 1|0);
   $36 = (1568 + ($33<<2)|0);
   $37 = HEAP32[$36>>2]|0;
   $$36 = $$25$lcssa;$c$2 = $37;$s$3 = $35;
   label = 16;
   continue;
  }
  else if ((label|0) == 16) {
   label = 0;
   $38 = HEAP8[$s$3>>0]|0;
   $39 = $38&255;
   $40 = $39 >>> 3;
   $41 = (($40) + -16)|0;
   $42 = $c$2 >> 26;
   $43 = (($40) + ($42))|0;
   $44 = $41 | $43;
   $45 = ($44>>>0)>(7);
   if ($45) {
    label = 17;
    break;
   }
   $47 = ((($s$3)) + 1|0);
   $48 = $c$2 & 33554432;
   $49 = ($48|0)==(0);
   if ($49) {
    $s$4 = $47;
   } else {
    $50 = HEAP8[$47>>0]|0;
    $51 = $50 & -64;
    $52 = ($51<<24>>24)==(-128);
    if (!($52)) {
     label = 20;
     break;
    }
    $54 = ((($s$3)) + 2|0);
    $55 = $c$2 & 524288;
    $56 = ($55|0)==(0);
    if ($56) {
     $s$4 = $54;
    } else {
     $57 = HEAP8[$54>>0]|0;
     $58 = $57 & -64;
     $59 = ($58<<24>>24)==(-128);
     if (!($59)) {
      label = 23;
      break;
     }
     $61 = ((($s$3)) + 3|0);
     $s$4 = $61;
    }
   }
   $62 = (($$36) + -1)|0;
   $$03 = $62;$s$0 = $s$4;
   label = 7;
   continue;
  }
  else if ((label|0) == 37) {
   label = 0;
   $106 = HEAP8[$s$8>>0]|0;
   $107 = $106&255;
   $108 = $107 >>> 3;
   $109 = (($108) + -16)|0;
   $110 = $c$4 >> 26;
   $111 = (($108) + ($110))|0;
   $112 = $109 | $111;
   $113 = ($112>>>0)>(7);
   if ($113) {
    label = 38;
    break;
   }
   $115 = $c$4 << 6;
   $116 = ((($s$8)) + 1|0);
   $117 = (($107) + -128)|0;
   $118 = $117 | $115;
   $119 = ($118|0)<(0);
   if ($119) {
    $120 = HEAP8[$116>>0]|0;
    $121 = $120&255;
    $122 = $121 & 192;
    $123 = ($122|0)==(128);
    if (!($123)) {
     label = 41;
     break;
    }
    $125 = $118 << 6;
    $126 = ((($s$8)) + 2|0);
    $127 = (($121) + -128)|0;
    $128 = $127 | $125;
    $129 = ($128|0)<(0);
    if ($129) {
     $130 = HEAP8[$126>>0]|0;
     $131 = $130&255;
     $132 = $131 & 192;
     $133 = ($132|0)==(128);
     if (!($133)) {
      label = 44;
      break;
     }
     $135 = $128 << 6;
     $136 = ((($s$8)) + 3|0);
     $137 = (($131) + -128)|0;
     $138 = $137 | $135;
     $c$5 = $138;$s$9 = $136;
    } else {
     $c$5 = $128;$s$9 = $126;
    }
   } else {
    $c$5 = $118;$s$9 = $116;
   }
   $139 = ((($$3)) + 4|0);
   HEAP32[$$3>>2] = $c$5;
   $140 = (($$7) + -1)|0;
   $$02$ph = $139;$$47$ph = $140;$s$5$ph = $s$9;
   label = 6;
   continue;
  }
 }
 if ((label|0) == 17) {
  $46 = ((($s$3)) + -1|0);
  $$4 = $ws;$$8 = $$36;$c$6 = $c$2;$s$10 = $46;
  label = 47;
 }
 else if ((label|0) == 20) {
  $53 = ((($s$3)) + -1|0);
  $$4 = $ws;$$8 = $$36;$c$6 = $c$2;$s$10 = $53;
  label = 47;
 }
 else if ((label|0) == 23) {
  $60 = ((($s$3)) + -1|0);
  $$4 = $ws;$$8 = $$36;$c$6 = $c$2;$s$10 = $60;
  label = 47;
 }
 else if ((label|0) == 26) {
  HEAP32[$src>>2] = $s$5$lcssa;
  $$0 = $wn;
  return ($$0|0);
 }
 else if ((label|0) == 38) {
  $114 = ((($s$8)) + -1|0);
  $$4 = $$3;$$8 = $$7;$c$6 = $c$4;$s$10 = $114;
  label = 47;
 }
 else if ((label|0) == 41) {
  $124 = ((($s$8)) + -1|0);
  $$48 = $$3;$s$109 = $124;
 }
 else if ((label|0) == 44) {
  $134 = ((($s$8)) + -1|0);
  $$48 = $$3;$s$109 = $134;
 }
 if ((label|0) == 47) {
  $141 = ($c$6|0)==(0);
  if ($141) {
   $$434 = $$4;$$833 = $$8;$s$1035 = $s$10;
   label = 48;
  } else {
   $$48 = $$4;$s$109 = $s$10;
  }
 }
 if ((label|0) == 48) {
  $142 = HEAP8[$s$1035>>0]|0;
  $143 = ($142<<24>>24)==(0);
  if ($143) {
   $144 = ($$434|0)==(0|0);
   if (!($144)) {
    HEAP32[$$434>>2] = 0;
    HEAP32[$src>>2] = 0;
   }
   $145 = (($wn) - ($$833))|0;
   $$0 = $145;
   return ($$0|0);
  } else {
   $$48 = $$434;$s$109 = $s$1035;
  }
 }
 $146 = (___errno_location()|0);
 HEAP32[$146>>2] = 84;
 $147 = ($$48|0)==(0|0);
 if ($147) {
  $$0 = -1;
  return ($$0|0);
 }
 HEAP32[$src>>2] = $s$109;
 $$0 = -1;
 return ($$0|0);
}
function _mbtowc($wc,$src,$n) {
 $wc = $wc|0;
 $src = $src|0;
 $n = $n|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $0 = sp;
 HEAP32[$0>>2] = $wc;
 $1 = ($src|0)==(0|0);
 if ($1) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $2 = ($n|0)==(0);
 do {
  if (!($2)) {
   $3 = ($wc|0)==(0|0);
   if ($3) {
    HEAP32[$0>>2] = $0;
    $7 = $0;
   } else {
    $7 = $wc;
   }
   $4 = HEAP8[$src>>0]|0;
   $5 = $4&255;
   $6 = ($4<<24>>24)>(-1);
   if ($6) {
    HEAP32[$7>>2] = $5;
    $8 = ($4<<24>>24)!=(0);
    $9 = $8&1;
    $$0 = $9;
    STACKTOP = sp;return ($$0|0);
   }
   $10 = (($5) + -194)|0;
   $11 = ($10>>>0)>(50);
   if (!($11)) {
    $12 = ((($src)) + 1|0);
    $13 = (1568 + ($10<<2)|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = ($n>>>0)<(4);
    if ($15) {
     $16 = ($n*6)|0;
     $17 = (($16) + -6)|0;
     $18 = -2147483648 >>> $17;
     $19 = $14 & $18;
     $20 = ($19|0)==(0);
     if (!($20)) {
      break;
     }
    }
    $21 = HEAP8[$12>>0]|0;
    $22 = $21&255;
    $23 = $22 >>> 3;
    $24 = (($23) + -16)|0;
    $25 = $14 >> 26;
    $26 = (($23) + ($25))|0;
    $27 = $24 | $26;
    $28 = ($27>>>0)>(7);
    if (!($28)) {
     $29 = $14 << 6;
     $30 = (($22) + -128)|0;
     $31 = $30 | $29;
     $32 = ($31|0)<(0);
     if (!($32)) {
      HEAP32[$7>>2] = $31;
      $$0 = 2;
      STACKTOP = sp;return ($$0|0);
     }
     $33 = ((($src)) + 2|0);
     $34 = HEAP8[$33>>0]|0;
     $35 = $34&255;
     $36 = $35 & 192;
     $37 = ($36|0)==(128);
     if ($37) {
      $38 = $31 << 6;
      $39 = (($35) + -128)|0;
      $40 = $39 | $38;
      $41 = ($40|0)<(0);
      if (!($41)) {
       HEAP32[$7>>2] = $40;
       $$0 = 3;
       STACKTOP = sp;return ($$0|0);
      }
      $42 = ((($src)) + 3|0);
      $43 = HEAP8[$42>>0]|0;
      $44 = $43&255;
      $45 = $44 & 192;
      $46 = ($45|0)==(128);
      if ($46) {
       $47 = $40 << 6;
       $48 = (($44) + -128)|0;
       $49 = $48 | $47;
       HEAP32[$7>>2] = $49;
       $$0 = 4;
       STACKTOP = sp;return ($$0|0);
      }
     }
    }
   }
  }
 } while(0);
 $50 = (___errno_location()|0);
 HEAP32[$50>>2] = 84;
 $$0 = -1;
 STACKTOP = sp;return ($$0|0);
}
function _wcsnrtombs($dst,$wcs,$wn,$n,$st) {
 $dst = $dst|0;
 $wcs = $wcs|0;
 $wn = $wn|0;
 $n = $n|0;
 $st = $st|0;
 var $$02$$0 = 0, $$021 = 0, $$0218 = 0, $$1 = 0, $$13 = 0, $$216 = 0, $$24 = 0, $$313 = 0, $$cast = 0, $$lcssa = 0, $$lcssa57 = 0, $$pr$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $buf = 0, $cnt$019 = 0, $cnt$1 = 0, $cnt$214 = 0, $cnt$214$lcssa = 0, $cnt$3 = 0, $dst$ = 0, $n$ = 0, $or$cond = 0;
 var $or$cond17 = 0, $s$020 = 0, $s$020$lcssa56 = 0, $s$09 = 0, $s$1 = 0, $s$215 = 0, $ws = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272|0;
 $buf = sp + 8|0;
 $ws = sp;
 $0 = HEAP32[$wcs>>2]|0;
 HEAP32[$ws>>2] = $0;
 $1 = ($dst|0)!=(0|0);
 $n$ = $1 ? $n : 256;
 $dst$ = $1 ? $dst : $buf;
 $$cast = $0;
 $2 = ($0|0)!=(0);
 $3 = ($n$|0)!=(0);
 $or$cond17 = $3 & $2;
 L1: do {
  if ($or$cond17) {
   $$021 = $wn;$$0218 = $n$;$38 = $$cast;$cnt$019 = 0;$s$020 = $dst$;
   while(1) {
    $4 = ($$021>>>0)>=($$0218>>>0);
    $5 = ($$021>>>0)>(32);
    $6 = $4 | $5;
    if (!($6)) {
     $$1 = $$021;$$24 = $$0218;$17 = $38;$cnt$1 = $cnt$019;$s$09 = $s$020;
     break L1;
    }
    $$02$$0 = $4 ? $$0218 : $$021;
    $7 = (($$021) - ($$02$$0))|0;
    $8 = (_wcsrtombs($s$020,$ws,$$02$$0,0)|0);
    $9 = ($8|0)==(-1);
    if ($9) {
     $$lcssa57 = $7;$s$020$lcssa56 = $s$020;
     break;
    }
    $10 = ($s$020|0)==($buf|0);
    $11 = (($s$020) + ($8)|0);
    $12 = $10 ? 0 : $8;
    $$13 = (($$0218) - ($12))|0;
    $s$1 = $10 ? $s$020 : $11;
    $13 = (($8) + ($cnt$019))|0;
    $14 = HEAP32[$ws>>2]|0;
    $15 = ($14|0)!=(0|0);
    $16 = ($$0218|0)!=($12|0);
    $or$cond = $16 & $15;
    if ($or$cond) {
     $$021 = $7;$$0218 = $$13;$38 = $14;$cnt$019 = $13;$s$020 = $s$1;
    } else {
     $$1 = $7;$$24 = $$13;$17 = $14;$cnt$1 = $13;$s$09 = $s$1;
     break L1;
    }
   }
   $$pr$pre = HEAP32[$ws>>2]|0;
   $$1 = $$lcssa57;$$24 = 0;$17 = $$pr$pre;$cnt$1 = -1;$s$09 = $s$020$lcssa56;
  } else {
   $$1 = $wn;$$24 = $n$;$17 = $$cast;$cnt$1 = 0;$s$09 = $dst$;
  }
 } while(0);
 $18 = ($17|0)==(0|0);
 L8: do {
  if ($18) {
   $cnt$3 = $cnt$1;
  } else {
   $19 = ($$24|0)!=(0);
   $20 = ($$1|0)!=(0);
   $21 = $19 & $20;
   if ($21) {
    $$216 = $$1;$$313 = $$24;$23 = $17;$cnt$214 = $cnt$1;$s$215 = $s$09;
    while(1) {
     $22 = HEAP32[$23>>2]|0;
     $24 = (_wcrtomb($s$215,$22,0)|0);
     $25 = (($24) + 1)|0;
     $26 = ($25>>>0)<(2);
     if ($26) {
      $$lcssa = $24;$cnt$214$lcssa = $cnt$214;
      break;
     }
     $28 = HEAP32[$ws>>2]|0;
     $29 = ((($28)) + 4|0);
     HEAP32[$ws>>2] = $29;
     $30 = (($$216) + -1)|0;
     $31 = (($s$215) + ($24)|0);
     $32 = (($$313) - ($24))|0;
     $33 = (($cnt$214) + 1)|0;
     $34 = ($$313|0)!=($24|0);
     $35 = ($30|0)!=(0);
     $36 = $34 & $35;
     if ($36) {
      $$216 = $30;$$313 = $32;$23 = $29;$cnt$214 = $33;$s$215 = $31;
     } else {
      $cnt$3 = $33;
      break L8;
     }
    }
    $27 = ($$lcssa|0)==(0);
    if ($27) {
     HEAP32[$ws>>2] = 0;
     $cnt$3 = $cnt$214$lcssa;
    } else {
     $cnt$3 = -1;
    }
   } else {
    $cnt$3 = $cnt$1;
   }
  }
 } while(0);
 if (!($1)) {
  STACKTOP = sp;return ($cnt$3|0);
 }
 $37 = HEAP32[$ws>>2]|0;
 HEAP32[$wcs>>2] = $37;
 STACKTOP = sp;return ($cnt$3|0);
}
function _wcsrtombs($s,$ws,$n,$st) {
 $s = $s|0;
 $ws = $ws|0;
 $n = $n|0;
 $st = $st|0;
 var $$0 = 0, $$01$lcssa = 0, $$0129 = 0, $$0129$lcssa = 0, $$0218 = 0, $$1 = 0, $$13 = 0, $$223 = 0, $$223$lcssa = 0, $$24$lcssa = 0, $$2428 = 0, $$2428$lcssa = 0, $$3 = 0, $$35 = 0, $$422 = 0, $$422$lcssa = 0, $$422$lcssa82 = 0, $$5 = 0, $$pn = 0, $$pre = 0;
 var $$pre43 = 0, $$pre44 = 0, $$pre45 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $buf = 0, $ws2$019 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $buf = sp;
 $0 = ($s|0)==(0|0);
 if ($0) {
  $2 = HEAP32[$ws>>2]|0;
  $3 = HEAP32[$2>>2]|0;
  $4 = ($3|0)==(0);
  if ($4) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  } else {
   $$0218 = 0;$5 = $3;$ws2$019 = $2;
  }
  while(1) {
   $6 = ($5>>>0)>(127);
   if ($6) {
    $7 = (_wcrtomb($buf,$5,0)|0);
    $8 = ($7|0)==(-1);
    if ($8) {
     $$0 = -1;
     label = 26;
     break;
    } else {
     $$pn = $7;
    }
   } else {
    $$pn = 1;
   }
   $$13 = (($$pn) + ($$0218))|0;
   $9 = ((($ws2$019)) + 4|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = ($10|0)==(0);
   if ($11) {
    $$0 = $$13;
    label = 26;
    break;
   } else {
    $$0218 = $$13;$5 = $10;$ws2$019 = $9;
   }
  }
  if ((label|0) == 26) {
   STACKTOP = sp;return ($$0|0);
  }
 }
 $1 = ($n>>>0)>(3);
 L14: do {
  if ($1) {
   $$pre = HEAP32[$ws>>2]|0;
   $$0129 = $s;$$2428 = $n;$14 = $$pre;
   while(1) {
    $13 = HEAP32[$14>>2]|0;
    $15 = (($13) + -1)|0;
    $16 = ($15>>>0)>(126);
    if ($16) {
     $17 = ($13|0)==(0);
     if ($17) {
      $$0129$lcssa = $$0129;$$2428$lcssa = $$2428;
      break;
     }
     $19 = (_wcrtomb($$0129,$13,0)|0);
     $20 = ($19|0)==(-1);
     if ($20) {
      $$0 = -1;
      label = 26;
      break;
     }
     $21 = (($$0129) + ($19)|0);
     $22 = (($$2428) - ($19))|0;
     $$1 = $21;$$35 = $22;$27 = $14;
    } else {
     $23 = $13&255;
     $24 = ((($$0129)) + 1|0);
     HEAP8[$$0129>>0] = $23;
     $25 = (($$2428) + -1)|0;
     $$pre43 = HEAP32[$ws>>2]|0;
     $$1 = $24;$$35 = $25;$27 = $$pre43;
    }
    $26 = ((($27)) + 4|0);
    HEAP32[$ws>>2] = $26;
    $28 = ($$35>>>0)>(3);
    if ($28) {
     $$0129 = $$1;$$2428 = $$35;$14 = $26;
    } else {
     $$01$lcssa = $$1;$$24$lcssa = $$35;
     break L14;
    }
   }
   if ((label|0) == 26) {
    STACKTOP = sp;return ($$0|0);
   }
   HEAP8[$$0129$lcssa>>0] = 0;
   HEAP32[$ws>>2] = 0;
   $18 = (($n) - ($$2428$lcssa))|0;
   $$0 = $18;
   STACKTOP = sp;return ($$0|0);
  } else {
   $$01$lcssa = $s;$$24$lcssa = $n;
  }
 } while(0);
 $12 = ($$24$lcssa|0)==(0);
 if ($12) {
  $$0 = $n;
  STACKTOP = sp;return ($$0|0);
 }
 $$pre44 = HEAP32[$ws>>2]|0;
 $$223 = $$01$lcssa;$$422 = $$24$lcssa;$30 = $$pre44;
 while(1) {
  $29 = HEAP32[$30>>2]|0;
  $31 = (($29) + -1)|0;
  $32 = ($31>>>0)>(126);
  if ($32) {
   $33 = ($29|0)==(0);
   if ($33) {
    $$223$lcssa = $$223;$$422$lcssa = $$422;
    label = 19;
    break;
   }
   $35 = (_wcrtomb($buf,$29,0)|0);
   $36 = ($35|0)==(-1);
   if ($36) {
    $$0 = -1;
    label = 26;
    break;
   }
   $37 = ($$422>>>0)<($35>>>0);
   if ($37) {
    $$422$lcssa82 = $$422;
    label = 22;
    break;
   }
   $39 = HEAP32[$30>>2]|0;
   (_wcrtomb($$223,$39,0)|0);
   $40 = (($$223) + ($35)|0);
   $41 = (($$422) - ($35))|0;
   $$3 = $40;$$5 = $41;$46 = $30;
  } else {
   $42 = $29&255;
   $43 = ((($$223)) + 1|0);
   HEAP8[$$223>>0] = $42;
   $44 = (($$422) + -1)|0;
   $$pre45 = HEAP32[$ws>>2]|0;
   $$3 = $43;$$5 = $44;$46 = $$pre45;
  }
  $45 = ((($46)) + 4|0);
  HEAP32[$ws>>2] = $45;
  $47 = ($$5|0)==(0);
  if ($47) {
   $$0 = $n;
   label = 26;
   break;
  } else {
   $$223 = $$3;$$422 = $$5;$30 = $45;
  }
 }
 if ((label|0) == 19) {
  HEAP8[$$223$lcssa>>0] = 0;
  HEAP32[$ws>>2] = 0;
  $34 = (($n) - ($$422$lcssa))|0;
  $$0 = $34;
  STACKTOP = sp;return ($$0|0);
 }
 else if ((label|0) == 22) {
  $38 = (($n) - ($$422$lcssa82))|0;
  $$0 = $38;
  STACKTOP = sp;return ($$0|0);
 }
 else if ((label|0) == 26) {
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function ___string_read($f,$buf,$len) {
 $f = $f|0;
 $buf = $buf|0;
 $len = $len|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $k$0 = 0, $k$0$len = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 84|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($len) + 256)|0;
 $3 = (_memchr($1,0,$2)|0);
 $4 = ($3|0)==(0|0);
 $5 = $3;
 $6 = $1;
 $7 = (($5) - ($6))|0;
 $k$0 = $4 ? $2 : $7;
 $8 = ($k$0>>>0)<($len>>>0);
 $k$0$len = $8 ? $k$0 : $len;
 _memcpy(($buf|0),($1|0),($k$0$len|0))|0;
 $9 = (($1) + ($k$0$len)|0);
 $10 = ((($f)) + 4|0);
 HEAP32[$10>>2] = $9;
 $11 = (($1) + ($k$0)|0);
 $12 = ((($f)) + 8|0);
 HEAP32[$12>>2] = $11;
 HEAP32[$0>>2] = $11;
 return ($k$0$len|0);
}
function _sscanf($s,$fmt,$varargs) {
 $s = $s|0;
 $fmt = $fmt|0;
 $varargs = $varargs|0;
 var $0 = 0, $ap = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $ap = sp;
 HEAP32[$ap>>2] = $varargs;
 $0 = (_vsscanf($s,$fmt,$ap)|0);
 STACKTOP = sp;return ($0|0);
}
function _vasprintf($s,$fmt,$ap) {
 $s = $s|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ap2 = 0, $vacopy_currentptr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $ap2 = sp;
 $0 = (_malloc(240)|0);
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $$0 = -1;
  } else {
   $vacopy_currentptr = HEAP32[$ap>>2]|0;
   HEAP32[$ap2>>2] = $vacopy_currentptr;
   $2 = (_vsnprintf($0,240,$fmt,$ap2)|0);
   $3 = ($2>>>0)<(240);
   if ($3) {
    $4 = (($2) + 1)|0;
    $5 = (_realloc($0,$4)|0);
    $6 = ($5|0)!=(0|0);
    $7 = $6 ? $5 : $0;
    HEAP32[$s>>2] = $7;
    $$0 = $2;
    break;
   }
   _free($0);
   $8 = ($2|0)<(0);
   if ($8) {
    $$0 = -1;
   } else {
    $9 = (($2) + 1)|0;
    $10 = (_malloc($9)|0);
    HEAP32[$s>>2] = $10;
    $11 = ($10|0)==(0|0);
    if ($11) {
     $$0 = -1;
    } else {
     $12 = (_vsnprintf($10,$9,$fmt,$ap)|0);
     $$0 = $12;
    }
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function _MUSL_vfscanf($f,$fmt,$ap) {
 $f = $f|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $$ = 0, $$10 = 0, $$11 = 0, $$12 = 0, $$9 = 0, $$lcssa = 0, $$lcssa38 = 0, $$lcssa520 = 0, $$not = 0, $$old4 = 0, $$pre = 0, $$pre$phi224Z2D = 0, $$pre208 = 0, $$pre210 = 0, $$pre212 = 0, $$pre214 = 0, $$pre216 = 0, $$pre220 = 0, $$pre222 = 0, $$pre223 = 0;
 var $$size$0 = 0, $$width$0 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0;
 var $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0;
 var $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0;
 var $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0;
 var $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0;
 var $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0;
 var $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0;
 var $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0;
 var $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0;
 var $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0;
 var $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0.0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0.0, $348 = 0;
 var $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $alloc$0 = 0, $alloc$0203 = 0, $alloc$1 = 0, $alloc$2 = 0, $ap2$i = 0, $arglist_current = 0, $arglist_current2 = 0, $arglist_next = 0, $arglist_next3 = 0, $base$0 = 0, $c$0100 = 0, $dest$0 = 0, $expanded = 0, $expanded10 = 0, $expanded11 = 0, $expanded13 = 0, $expanded14 = 0;
 var $expanded15 = 0, $expanded4 = 0, $expanded6 = 0, $expanded7 = 0, $expanded8 = 0, $factor = 0, $factor16 = 0, $i$0$i = 0, $i$0$ph = 0, $i$0$ph$lcssa = 0, $i$0$ph20 = 0, $i$0$ph20$lcssa = 0, $i$0$ph20$us105 = 0, $i$1$lcssa = 0, $i$2 = 0, $i$2$ph = 0, $i$2$ph$phi = 0, $i$3 = 0, $i$4 = 0, $invert$0 = 0;
 var $isdigit = 0, $isdigit7 = 0, $isdigit795 = 0, $isdigittmp = 0, $isdigittmp6 = 0, $isdigittmp694 = 0, $k$0$ph = 0, $k$1$ph = 0, $matches$0$ = 0, $matches$0110 = 0, $matches$0110$lcssa = 0, $matches$0110501 = 0, $matches$1 = 0, $matches$2 = 0, $matches$3 = 0, $not$ = 0, $or$cond$us = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond8 = 0;
 var $p$0116 = 0, $p$1 = 0, $p$1$lcssa = 0, $p$10 = 0, $p$11 = 0, $p$2 = 0, $p$3$lcssa = 0, $p$396 = 0, $p$4 = 0, $p$5 = 0, $p$6 = 0, $p$7 = 0, $p$7$ph = 0, $p$8 = 0, $p$9 = 0, $pos$0115 = 0, $pos$1 = 0, $pos$2 = 0, $s$0108 = 0, $s$0108$lcssa = 0;
 var $s$1 = 0, $s$2$ph = 0, $s$3 = 0, $s$4 = 0, $s$5 = 0, $s$6 = 0, $s$7 = 0, $s$8 = 0, $scanset = 0, $size$0 = 0, $st = 0, $vacopy_currentptr = 0, $wc = 0, $wcs$0109 = 0, $wcs$0109$lcssa = 0, $wcs$1 = 0, $wcs$2 = 0, $wcs$3$ph = 0, $wcs$3$ph$lcssa = 0, $wcs$3$ph138 = 0;
 var $wcs$4 = 0, $wcs$5 = 0, $wcs$6 = 0, $wcs$7 = 0, $wcs$8 = 0, $wcs$9 = 0, $width$0$lcssa = 0, $width$097 = 0, $width$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0;
 $ap2$i = sp + 16|0;
 $st = sp + 8|0;
 $scanset = sp + 33|0;
 $wc = sp;
 $0 = sp + 32|0;
 $1 = HEAP8[$fmt>>0]|0;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $matches$3 = 0;
  STACKTOP = sp;return ($matches$3|0);
 }
 $3 = ((($f)) + 4|0);
 $4 = ((($f)) + 100|0);
 $5 = ((($f)) + 108|0);
 $6 = ((($f)) + 8|0);
 $7 = ((($scanset)) + 10|0);
 $8 = ((($scanset)) + 33|0);
 $9 = ((($st)) + 4|0);
 $10 = ((($scanset)) + 46|0);
 $11 = ((($scanset)) + 94|0);
 $13 = $1;$matches$0110 = 0;$p$0116 = $fmt;$pos$0115 = 0;$s$0108 = 0;$wcs$0109 = 0;
 L4: while(1) {
  $12 = $13&255;
  $14 = (_isspace($12)|0);
  $15 = ($14|0)==(0);
  L6: do {
   if ($15) {
    $42 = HEAP8[$p$0116>>0]|0;
    $43 = ($42<<24>>24)==(37);
    L8: do {
     if ($43) {
      $44 = ((($p$0116)) + 1|0);
      $45 = HEAP8[$44>>0]|0;
      do {
       if ((($45<<24>>24) == 37)) {
        break L8;
       } else if ((($45<<24>>24) == 42)) {
        $66 = ((($p$0116)) + 2|0);
        $dest$0 = 0;$p$2 = $66;
       } else {
        $67 = $45&255;
        $isdigittmp = (($67) + -48)|0;
        $isdigit = ($isdigittmp>>>0)<(10);
        if ($isdigit) {
         $68 = ((($p$0116)) + 2|0);
         $69 = HEAP8[$68>>0]|0;
         $70 = ($69<<24>>24)==(36);
         if ($70) {
          $vacopy_currentptr = HEAP32[$ap>>2]|0;
          HEAP32[$ap2$i>>2] = $vacopy_currentptr;
          $i$0$i = $isdigittmp;
          while(1) {
           $71 = ($i$0$i>>>0)>(1);
           $arglist_current = HEAP32[$ap2$i>>2]|0;
           $72 = $arglist_current;
           $73 = ((0) + 4|0);
           $expanded4 = $73;
           $expanded = (($expanded4) - 1)|0;
           $74 = (($72) + ($expanded))|0;
           $75 = ((0) + 4|0);
           $expanded8 = $75;
           $expanded7 = (($expanded8) - 1)|0;
           $expanded6 = $expanded7 ^ -1;
           $76 = $74 & $expanded6;
           $77 = $76;
           $78 = HEAP32[$77>>2]|0;
           $arglist_next = ((($77)) + 4|0);
           HEAP32[$ap2$i>>2] = $arglist_next;
           $79 = (($i$0$i) + -1)|0;
           if ($71) {
            $i$0$i = $79;
           } else {
            $$lcssa = $78;
            break;
           }
          }
          $80 = ((($p$0116)) + 3|0);
          $dest$0 = $$lcssa;$p$2 = $80;
          break;
         }
        }
        $arglist_current2 = HEAP32[$ap>>2]|0;
        $81 = $arglist_current2;
        $82 = ((0) + 4|0);
        $expanded11 = $82;
        $expanded10 = (($expanded11) - 1)|0;
        $83 = (($81) + ($expanded10))|0;
        $84 = ((0) + 4|0);
        $expanded15 = $84;
        $expanded14 = (($expanded15) - 1)|0;
        $expanded13 = $expanded14 ^ -1;
        $85 = $83 & $expanded13;
        $86 = $85;
        $87 = HEAP32[$86>>2]|0;
        $arglist_next3 = ((($86)) + 4|0);
        HEAP32[$ap>>2] = $arglist_next3;
        $dest$0 = $87;$p$2 = $44;
       }
      } while(0);
      $88 = HEAP8[$p$2>>0]|0;
      $89 = $88&255;
      $isdigittmp694 = (($89) + -48)|0;
      $isdigit795 = ($isdigittmp694>>>0)<(10);
      if ($isdigit795) {
       $93 = $89;$p$396 = $p$2;$width$097 = 0;
       while(1) {
        $90 = ($width$097*10)|0;
        $91 = (($90) + -48)|0;
        $92 = (($91) + ($93))|0;
        $94 = ((($p$396)) + 1|0);
        $95 = HEAP8[$94>>0]|0;
        $96 = $95&255;
        $isdigittmp6 = (($96) + -48)|0;
        $isdigit7 = ($isdigittmp6>>>0)<(10);
        if ($isdigit7) {
         $93 = $96;$p$396 = $94;$width$097 = $92;
        } else {
         $$lcssa38 = $95;$p$3$lcssa = $94;$width$0$lcssa = $92;
         break;
        }
       }
      } else {
       $$lcssa38 = $88;$p$3$lcssa = $p$2;$width$0$lcssa = 0;
      }
      $97 = ($$lcssa38<<24>>24)==(109);
      if ($97) {
       $98 = ($dest$0|0)!=(0|0);
       $99 = $98&1;
       $100 = ((($p$3$lcssa)) + 1|0);
       $$pre208 = HEAP8[$100>>0]|0;
       $103 = $$pre208;$alloc$0 = $99;$p$4 = $100;$s$1 = 0;$wcs$1 = 0;
      } else {
       $103 = $$lcssa38;$alloc$0 = 0;$p$4 = $p$3$lcssa;$s$1 = $s$0108;$wcs$1 = $wcs$0109;
      }
      $101 = ((($p$4)) + 1|0);
      $102 = $103&255;
      switch ($102|0) {
      case 108:  {
       $107 = HEAP8[$101>>0]|0;
       $108 = ($107<<24>>24)==(108);
       $109 = ((($p$4)) + 2|0);
       $$11 = $108 ? $109 : $101;
       $$12 = $108 ? 3 : 1;
       $p$5 = $$11;$size$0 = $$12;
       break;
      }
      case 116: case 122:  {
       $p$5 = $101;$size$0 = 1;
       break;
      }
      case 76:  {
       $p$5 = $101;$size$0 = 2;
       break;
      }
      case 110: case 112: case 67: case 83: case 91: case 99: case 115: case 88: case 71: case 70: case 69: case 65: case 103: case 102: case 101: case 97: case 120: case 117: case 111: case 105: case 100:  {
       $p$5 = $p$4;$size$0 = 0;
       break;
      }
      case 106:  {
       $p$5 = $101;$size$0 = 3;
       break;
      }
      case 104:  {
       $104 = HEAP8[$101>>0]|0;
       $105 = ($104<<24>>24)==(104);
       $106 = ((($p$4)) + 2|0);
       $$9 = $105 ? $106 : $101;
       $$10 = $105 ? -2 : -1;
       $p$5 = $$9;$size$0 = $$10;
       break;
      }
      default: {
       $alloc$0203 = $alloc$0;$matches$0110501 = $matches$0110;$s$6 = $s$1;$wcs$7 = $wcs$1;
       label = 164;
       break L4;
      }
      }
      $110 = HEAP8[$p$5>>0]|0;
      $111 = $110&255;
      $112 = $111 & 47;
      $113 = ($112|0)==(3);
      $114 = $111 | 32;
      $$ = $113 ? $114 : $111;
      $$size$0 = $113 ? 1 : $size$0;
      if ((($$|0) == 91)) {
       $pos$1 = $pos$0115;$width$1 = $width$0$lcssa;
      } else if ((($$|0) == 99)) {
       $115 = ($width$0$lcssa|0)<(1);
       $$width$0 = $115 ? 1 : $width$0$lcssa;
       $pos$1 = $pos$0115;$width$1 = $$width$0;
      } else if ((($$|0) == 110)) {
       $116 = ($pos$0115|0)<(0);
       $117 = $116 << 31 >> 31;
       $118 = ($dest$0|0)==(0|0);
       if ($118) {
        $matches$1 = $matches$0110;$p$11 = $p$5;$pos$2 = $pos$0115;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
       }
       switch ($$size$0|0) {
       case 0:  {
        HEAP32[$dest$0>>2] = $pos$0115;
        $matches$1 = $matches$0110;$p$11 = $p$5;$pos$2 = $pos$0115;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
        break;
       }
       case 1:  {
        HEAP32[$dest$0>>2] = $pos$0115;
        $matches$1 = $matches$0110;$p$11 = $p$5;$pos$2 = $pos$0115;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
        break;
       }
       case 3:  {
        $121 = $dest$0;
        $122 = $121;
        HEAP32[$122>>2] = $pos$0115;
        $123 = (($121) + 4)|0;
        $124 = $123;
        HEAP32[$124>>2] = $117;
        $matches$1 = $matches$0110;$p$11 = $p$5;$pos$2 = $pos$0115;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
        break;
       }
       case -2:  {
        $119 = $pos$0115&255;
        HEAP8[$dest$0>>0] = $119;
        $matches$1 = $matches$0110;$p$11 = $p$5;$pos$2 = $pos$0115;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
        break;
       }
       case -1:  {
        $120 = $pos$0115&65535;
        HEAP16[$dest$0>>1] = $120;
        $matches$1 = $matches$0110;$p$11 = $p$5;$pos$2 = $pos$0115;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
        break;
       }
       default: {
        $matches$1 = $matches$0110;$p$11 = $p$5;$pos$2 = $pos$0115;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
       }
       }
      } else {
       ___shlim($f,0);
       while(1) {
        $125 = HEAP32[$3>>2]|0;
        $126 = HEAP32[$4>>2]|0;
        $127 = ($125>>>0)<($126>>>0);
        if ($127) {
         $128 = ((($125)) + 1|0);
         HEAP32[$3>>2] = $128;
         $129 = HEAP8[$125>>0]|0;
         $130 = $129&255;
         $132 = $130;
        } else {
         $131 = (___shgetc($f)|0);
         $132 = $131;
        }
        $133 = (_isspace($132)|0);
        $134 = ($133|0)==(0);
        if ($134) {
         break;
        }
       }
       $135 = HEAP32[$4>>2]|0;
       $136 = ($135|0)==(0|0);
       $$pre210 = HEAP32[$3>>2]|0;
       if ($136) {
        $140 = $$pre210;
       } else {
        $137 = ((($$pre210)) + -1|0);
        HEAP32[$3>>2] = $137;
        $140 = $137;
       }
       $138 = HEAP32[$5>>2]|0;
       $139 = HEAP32[$6>>2]|0;
       $141 = $140;
       $142 = $139;
       $143 = (($138) + ($pos$0115))|0;
       $144 = (($143) + ($141))|0;
       $145 = (($144) - ($142))|0;
       $pos$1 = $145;$width$1 = $width$0$lcssa;
      }
      ___shlim($f,$width$1);
      $146 = HEAP32[$3>>2]|0;
      $147 = HEAP32[$4>>2]|0;
      $148 = ($146>>>0)<($147>>>0);
      if ($148) {
       $149 = ((($146)) + 1|0);
       HEAP32[$3>>2] = $149;
       $152 = $147;
      } else {
       $150 = (___shgetc($f)|0);
       $151 = ($150|0)<(0);
       if ($151) {
        $alloc$0203 = $alloc$0;$matches$0110501 = $matches$0110;$s$6 = $s$1;$wcs$7 = $wcs$1;
        label = 164;
        break L4;
       }
       $$pre212 = HEAP32[$4>>2]|0;
       $152 = $$pre212;
      }
      $153 = ($152|0)==(0|0);
      if (!($153)) {
       $154 = HEAP32[$3>>2]|0;
       $155 = ((($154)) + -1|0);
       HEAP32[$3>>2] = $155;
      }
      L65: do {
       switch ($$|0) {
       case 91: case 99: case 115:  {
        $156 = ($$|0)==(99);
        $157 = $$ & 239;
        $158 = ($157|0)==(99);
        L67: do {
         if ($158) {
          $159 = ($$|0)==(115);
          _memset(($scanset|0),-1,257)|0;
          HEAP8[$scanset>>0] = 0;
          if ($159) {
           HEAP8[$8>>0] = 0;
           ;HEAP8[$7>>0]=0|0;HEAP8[$7+1>>0]=0|0;HEAP8[$7+2>>0]=0|0;HEAP8[$7+3>>0]=0|0;HEAP8[$7+4>>0]=0|0;
           $p$9 = $p$5;
          } else {
           $p$9 = $p$5;
          }
         } else {
          $160 = ((($p$5)) + 1|0);
          $161 = HEAP8[$160>>0]|0;
          $162 = ($161<<24>>24)==(94);
          $163 = ((($p$5)) + 2|0);
          $invert$0 = $162&1;
          $164 = $162 ? $160 : $p$5;
          $p$6 = $162 ? $163 : $160;
          $165 = $162&1;
          _memset(($scanset|0),($165|0),257)|0;
          HEAP8[$scanset>>0] = 0;
          $166 = HEAP8[$p$6>>0]|0;
          if ((($166<<24>>24) == 45)) {
           $167 = ((($164)) + 2|0);
           $168 = $invert$0 ^ 1;
           $169 = $168&255;
           HEAP8[$10>>0] = $169;
           $$pre$phi224Z2D = $169;$p$7$ph = $167;
          } else if ((($166<<24>>24) == 93)) {
           $170 = ((($164)) + 2|0);
           $171 = $invert$0 ^ 1;
           $172 = $171&255;
           HEAP8[$11>>0] = $172;
           $$pre$phi224Z2D = $172;$p$7$ph = $170;
          } else {
           $$pre222 = $invert$0 ^ 1;
           $$pre223 = $$pre222&255;
           $$pre$phi224Z2D = $$pre223;$p$7$ph = $p$6;
          }
          $p$7 = $p$7$ph;
          while(1) {
           $173 = HEAP8[$p$7>>0]|0;
           if ((($173<<24>>24) == 45)) {
            $174 = ((($p$7)) + 1|0);
            $175 = HEAP8[$174>>0]|0;
            if ((($175<<24>>24) == 93) | (($175<<24>>24) == 0)) {
             $186 = 45;$p$8 = $p$7;
            } else {
             $176 = ((($p$7)) + -1|0);
             $177 = HEAP8[$176>>0]|0;
             $178 = ($177&255)<($175&255);
             if ($178) {
              $179 = $177&255;
              $c$0100 = $179;
              while(1) {
               $180 = (($c$0100) + 1)|0;
               $181 = (($scanset) + ($180)|0);
               HEAP8[$181>>0] = $$pre$phi224Z2D;
               $182 = HEAP8[$174>>0]|0;
               $183 = $182&255;
               $184 = ($180|0)<($183|0);
               if ($184) {
                $c$0100 = $180;
               } else {
                $186 = $182;$p$8 = $174;
                break;
               }
              }
             } else {
              $186 = $175;$p$8 = $174;
             }
            }
           } else if ((($173<<24>>24) == 93)) {
            $p$9 = $p$7;
            break L67;
           } else if ((($173<<24>>24) == 0)) {
            $alloc$0203 = $alloc$0;$matches$0110501 = $matches$0110;$s$6 = $s$1;$wcs$7 = $wcs$1;
            label = 164;
            break L4;
           } else {
            $186 = $173;$p$8 = $p$7;
           }
           $185 = $186&255;
           $187 = (($185) + 1)|0;
           $188 = (($scanset) + ($187)|0);
           HEAP8[$188>>0] = $$pre$phi224Z2D;
           $189 = ((($p$8)) + 1|0);
           $p$7 = $189;
          }
         }
        } while(0);
        $190 = (($width$1) + 1)|0;
        $191 = $156 ? $190 : 31;
        $192 = ($$size$0|0)==(1);
        $193 = ($alloc$0|0)!=(0);
        L86: do {
         if ($192) {
          if ($193) {
           $194 = $191 << 2;
           $195 = (_malloc($194)|0);
           $196 = ($195|0)==(0|0);
           if ($196) {
            $alloc$0203 = $alloc$0;$matches$0110501 = $matches$0110;$s$6 = 0;$wcs$7 = $195;
            label = 164;
            break L4;
           } else {
            $wcs$2 = $195;
           }
          } else {
           $wcs$2 = $dest$0;
          }
          HEAP32[$st>>2] = 0;
          HEAP32[$9>>2] = 0;
          $i$0$ph = 0;$k$0$ph = $191;$wcs$3$ph = $wcs$2;
          L92: while(1) {
           $197 = ($wcs$3$ph|0)==(0|0);
           if ($197) {
            $198 = ($i$0$ph|0)==($k$0$ph|0);
            $or$cond$us = $193 & $198;
            while(1) {
             $201 = HEAP32[$3>>2]|0;
             $211 = HEAP32[$4>>2]|0;
             $212 = ($201>>>0)<($211>>>0);
             if ($212) {
              $200 = ((($201)) + 1|0);
              HEAP32[$3>>2] = $200;
              $202 = HEAP8[$201>>0]|0;
              $203 = $202&255;
              $205 = $203;
             } else {
              $199 = (___shgetc($f)|0);
              $205 = $199;
             }
             $204 = (($205) + 1)|0;
             $206 = (($scanset) + ($204)|0);
             $207 = HEAP8[$206>>0]|0;
             $208 = ($207<<24>>24)==(0);
             if ($208) {
              $i$0$ph20$lcssa = $i$0$ph;$wcs$3$ph138 = 0;
              break L92;
             }
             $209 = $205&255;
             HEAP8[$0>>0] = $209;
             $210 = (_mbrtowc($wc,$0,1,$st)|0);
             if ((($210|0) == -2)) {
              continue;
             } else if ((($210|0) == -1)) {
              $alloc$0203 = $alloc$0;$matches$0110501 = $matches$0110;$s$6 = 0;$wcs$7 = 0;
              label = 164;
              break L4;
             }
             if ($or$cond$us) {
              $i$1$lcssa = $i$0$ph;
              break;
             }
            }
           } else {
            if ($193) {
             $i$0$ph20$us105 = $i$0$ph;
            } else {
             $i$0$ph$lcssa = $i$0$ph;$wcs$3$ph$lcssa = $wcs$3$ph;
             label = 86;
             break;
            }
            while(1) {
             while(1) {
              $215 = HEAP32[$3>>2]|0;
              $229 = HEAP32[$4>>2]|0;
              $230 = ($215>>>0)<($229>>>0);
              if ($230) {
               $214 = ((($215)) + 1|0);
               HEAP32[$3>>2] = $214;
               $216 = HEAP8[$215>>0]|0;
               $217 = $216&255;
               $219 = $217;
              } else {
               $213 = (___shgetc($f)|0);
               $219 = $213;
              }
              $218 = (($219) + 1)|0;
              $220 = (($scanset) + ($218)|0);
              $221 = HEAP8[$220>>0]|0;
              $222 = ($221<<24>>24)==(0);
              if ($222) {
               $i$0$ph20$lcssa = $i$0$ph20$us105;$wcs$3$ph138 = $wcs$3$ph;
               break L92;
              }
              $223 = $219&255;
              HEAP8[$0>>0] = $223;
              $224 = (_mbrtowc($wc,$0,1,$st)|0);
              if ((($224|0) == -1)) {
               $alloc$0203 = $alloc$0;$matches$0110501 = $matches$0110;$s$6 = 0;$wcs$7 = $wcs$3$ph;
               label = 164;
               break L4;
              } else if (!((($224|0) == -2))) {
               break;
              }
             }
             $225 = HEAP32[$wc>>2]|0;
             $226 = (($i$0$ph20$us105) + 1)|0;
             $227 = (($wcs$3$ph) + ($i$0$ph20$us105<<2)|0);
             HEAP32[$227>>2] = $225;
             $228 = ($226|0)==($k$0$ph|0);
             if ($228) {
              $i$1$lcssa = $k$0$ph;
              break;
             } else {
              $i$0$ph20$us105 = $226;
             }
            }
           }
           $factor = $k$0$ph << 1;
           $248 = $factor | 1;
           $249 = $248 << 2;
           $250 = (_realloc($wcs$3$ph,$249)|0);
           $251 = ($250|0)==(0|0);
           if ($251) {
            $alloc$0203 = $alloc$0;$matches$0110501 = $matches$0110;$s$6 = 0;$wcs$7 = $wcs$3$ph;
            label = 164;
            break L4;
           }
           $i$0$ph = $i$1$lcssa;$k$0$ph = $248;$wcs$3$ph = $250;
          }
          L117: do {
           if ((label|0) == 86) {
            label = 0;
            $i$0$ph20 = $i$0$ph$lcssa;
            while(1) {
             while(1) {
              $231 = HEAP32[$3>>2]|0;
              $232 = HEAP32[$4>>2]|0;
              $233 = ($231>>>0)<($232>>>0);
              if ($233) {
               $234 = ((($231)) + 1|0);
               HEAP32[$3>>2] = $234;
               $235 = HEAP8[$231>>0]|0;
               $236 = $235&255;
               $239 = $236;
              } else {
               $237 = (___shgetc($f)|0);
               $239 = $237;
              }
              $238 = (($239) + 1)|0;
              $240 = (($scanset) + ($238)|0);
              $241 = HEAP8[$240>>0]|0;
              $242 = ($241<<24>>24)==(0);
              if ($242) {
               $i$0$ph20$lcssa = $i$0$ph20;$wcs$3$ph138 = $wcs$3$ph$lcssa;
               break L117;
              }
              $243 = $239&255;
              HEAP8[$0>>0] = $243;
              $244 = (_mbrtowc($wc,$0,1,$st)|0);
              if ((($244|0) == -1)) {
               $alloc$0203 = 0;$matches$0110501 = $matches$0110;$s$6 = 0;$wcs$7 = $wcs$3$ph$lcssa;
               label = 164;
               break L4;
              } else if (!((($244|0) == -2))) {
               break;
              }
             }
             $245 = HEAP32[$wc>>2]|0;
             $246 = (($i$0$ph20) + 1)|0;
             $247 = (($wcs$3$ph$lcssa) + ($i$0$ph20<<2)|0);
             HEAP32[$247>>2] = $245;
             $i$0$ph20 = $246;
            }
           }
          } while(0);
          $252 = (_mbsinit($st)|0);
          $253 = ($252|0)==(0);
          if ($253) {
           $alloc$0203 = $alloc$0;$matches$0110501 = $matches$0110;$s$6 = 0;$wcs$7 = $wcs$3$ph138;
           label = 164;
           break L4;
          } else {
           $i$4 = $i$0$ph20$lcssa;$s$3 = 0;$wcs$4 = $wcs$3$ph138;
          }
         } else {
          if ($193) {
           $254 = (_malloc($191)|0);
           $255 = ($254|0)==(0|0);
           if ($255) {
            $alloc$0203 = $alloc$0;$matches$0110501 = $matches$0110;$s$6 = 0;$wcs$7 = 0;
            label = 164;
            break L4;
           } else {
            $i$2$ph = 0;$k$1$ph = $191;$s$2$ph = $254;
           }
           while(1) {
            $i$2 = $i$2$ph;
            while(1) {
             $256 = HEAP32[$3>>2]|0;
             $257 = HEAP32[$4>>2]|0;
             $258 = ($256>>>0)<($257>>>0);
             if ($258) {
              $259 = ((($256)) + 1|0);
              HEAP32[$3>>2] = $259;
              $260 = HEAP8[$256>>0]|0;
              $261 = $260&255;
              $264 = $261;
             } else {
              $262 = (___shgetc($f)|0);
              $264 = $262;
             }
             $263 = (($264) + 1)|0;
             $265 = (($scanset) + ($263)|0);
             $266 = HEAP8[$265>>0]|0;
             $267 = ($266<<24>>24)==(0);
             if ($267) {
              $i$4 = $i$2;$s$3 = $s$2$ph;$wcs$4 = 0;
              break L86;
             }
             $268 = $264&255;
             $269 = (($i$2) + 1)|0;
             $270 = (($s$2$ph) + ($i$2)|0);
             HEAP8[$270>>0] = $268;
             $271 = ($269|0)==($k$1$ph|0);
             if ($271) {
              break;
             } else {
              $i$2 = $269;
             }
            }
            $factor16 = $k$1$ph << 1;
            $272 = $factor16 | 1;
            $273 = (_realloc($s$2$ph,$272)|0);
            $274 = ($273|0)==(0|0);
            if ($274) {
             $alloc$0203 = $alloc$0;$matches$0110501 = $matches$0110;$s$6 = $s$2$ph;$wcs$7 = 0;
             label = 164;
             break L4;
            } else {
             $i$2$ph$phi = $k$1$ph;$k$1$ph = $272;$s$2$ph = $273;$i$2$ph = $i$2$ph$phi;
            }
           }
          }
          $275 = ($dest$0|0)==(0|0);
          if ($275) {
           $293 = $152;
           while(1) {
            $291 = HEAP32[$3>>2]|0;
            $292 = ($291>>>0)<($293>>>0);
            if ($292) {
             $294 = ((($291)) + 1|0);
             HEAP32[$3>>2] = $294;
             $295 = HEAP8[$291>>0]|0;
             $296 = $295&255;
             $299 = $296;
            } else {
             $297 = (___shgetc($f)|0);
             $299 = $297;
            }
            $298 = (($299) + 1)|0;
            $300 = (($scanset) + ($298)|0);
            $301 = HEAP8[$300>>0]|0;
            $302 = ($301<<24>>24)==(0);
            if ($302) {
             $i$4 = 0;$s$3 = 0;$wcs$4 = 0;
             break L86;
            }
            $$pre216 = HEAP32[$4>>2]|0;
            $293 = $$pre216;
           }
          } else {
           $278 = $152;$i$3 = 0;
           while(1) {
            $276 = HEAP32[$3>>2]|0;
            $277 = ($276>>>0)<($278>>>0);
            if ($277) {
             $279 = ((($276)) + 1|0);
             HEAP32[$3>>2] = $279;
             $280 = HEAP8[$276>>0]|0;
             $281 = $280&255;
             $284 = $281;
            } else {
             $282 = (___shgetc($f)|0);
             $284 = $282;
            }
            $283 = (($284) + 1)|0;
            $285 = (($scanset) + ($283)|0);
            $286 = HEAP8[$285>>0]|0;
            $287 = ($286<<24>>24)==(0);
            if ($287) {
             $i$4 = $i$3;$s$3 = $dest$0;$wcs$4 = 0;
             break L86;
            }
            $288 = $284&255;
            $289 = (($i$3) + 1)|0;
            $290 = (($dest$0) + ($i$3)|0);
            HEAP8[$290>>0] = $288;
            $$pre214 = HEAP32[$4>>2]|0;
            $278 = $$pre214;$i$3 = $289;
           }
          }
         }
        } while(0);
        $303 = HEAP32[$4>>2]|0;
        $304 = ($303|0)==(0|0);
        $$pre220 = HEAP32[$3>>2]|0;
        if ($304) {
         $308 = $$pre220;
        } else {
         $305 = ((($$pre220)) + -1|0);
         HEAP32[$3>>2] = $305;
         $308 = $305;
        }
        $306 = HEAP32[$5>>2]|0;
        $307 = HEAP32[$6>>2]|0;
        $309 = $308;
        $310 = $307;
        $311 = (($309) - ($310))|0;
        $312 = (($311) + ($306))|0;
        $313 = ($312|0)==(0);
        if ($313) {
         $alloc$2 = $alloc$0;$matches$2 = $matches$0110;$s$8 = $s$3;$wcs$9 = $wcs$4;
         break L4;
        }
        $$not = $156 ^ 1;
        $314 = ($312|0)==($width$1|0);
        $or$cond8 = $314 | $$not;
        if (!($or$cond8)) {
         $alloc$2 = $alloc$0;$matches$2 = $matches$0110;$s$8 = $s$3;$wcs$9 = $wcs$4;
         break L4;
        }
        do {
         if ($193) {
          if ($192) {
           HEAP32[$dest$0>>2] = $wcs$4;
           break;
          } else {
           HEAP32[$dest$0>>2] = $s$3;
           break;
          }
         }
        } while(0);
        if ($156) {
         $p$10 = $p$9;$s$4 = $s$3;$wcs$5 = $wcs$4;
        } else {
         $315 = ($wcs$4|0)==(0|0);
         if (!($315)) {
          $316 = (($wcs$4) + ($i$4<<2)|0);
          HEAP32[$316>>2] = 0;
         }
         $317 = ($s$3|0)==(0|0);
         if ($317) {
          $p$10 = $p$9;$s$4 = 0;$wcs$5 = $wcs$4;
         } else {
          $318 = (($s$3) + ($i$4)|0);
          HEAP8[$318>>0] = 0;
          $p$10 = $p$9;$s$4 = $s$3;$wcs$5 = $wcs$4;
         }
        }
        break;
       }
       case 111:  {
        $base$0 = 8;
        label = 146;
        break;
       }
       case 117: case 100:  {
        $base$0 = 10;
        label = 146;
        break;
       }
       case 105:  {
        $base$0 = 0;
        label = 146;
        break;
       }
       case 71: case 103: case 70: case 102: case 69: case 101: case 65: case 97:  {
        $338 = (+___floatscan($f,$$size$0,0));
        $339 = HEAP32[$5>>2]|0;
        $340 = HEAP32[$3>>2]|0;
        $341 = HEAP32[$6>>2]|0;
        $342 = $340;
        $343 = $341;
        $344 = (($343) - ($342))|0;
        $345 = ($339|0)==($344|0);
        if ($345) {
         $alloc$2 = $alloc$0;$matches$2 = $matches$0110;$s$8 = $s$1;$wcs$9 = $wcs$1;
         break L4;
        }
        $346 = ($dest$0|0)==(0|0);
        if ($346) {
         $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
        } else {
         if ((($$size$0|0) == 1)) {
          HEAPF64[$dest$0>>3] = $338;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L65;
         } else if ((($$size$0|0) == 2)) {
          HEAPF64[$dest$0>>3] = $338;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L65;
         } else if ((($$size$0|0) == 0)) {
          $347 = $338;
          HEAPF32[$dest$0>>2] = $347;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L65;
         } else {
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L65;
         }
        }
        break;
       }
       case 120: case 88: case 112:  {
        $base$0 = 16;
        label = 146;
        break;
       }
       default: {
        $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
       }
       }
      } while(0);
      L186: do {
       if ((label|0) == 146) {
        label = 0;
        $319 = (___intscan($f,$base$0,0,-1,-1)|0);
        $320 = tempRet0;
        $321 = HEAP32[$5>>2]|0;
        $322 = HEAP32[$3>>2]|0;
        $323 = HEAP32[$6>>2]|0;
        $324 = $322;
        $325 = $323;
        $326 = (($325) - ($324))|0;
        $327 = ($321|0)==($326|0);
        if ($327) {
         $alloc$2 = $alloc$0;$matches$2 = $matches$0110;$s$8 = $s$1;$wcs$9 = $wcs$1;
         break L4;
        }
        $328 = ($$|0)==(112);
        $329 = ($dest$0|0)!=(0|0);
        $or$cond3 = $329 & $328;
        if ($or$cond3) {
         $330 = $319;
         HEAP32[$dest$0>>2] = $330;
         $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
         break;
        }
        $331 = ($dest$0|0)==(0|0);
        if ($331) {
         $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
        } else {
         switch ($$size$0|0) {
         case -2:  {
          $332 = $319&255;
          HEAP8[$dest$0>>0] = $332;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L186;
          break;
         }
         case -1:  {
          $333 = $319&65535;
          HEAP16[$dest$0>>1] = $333;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L186;
          break;
         }
         case 0:  {
          HEAP32[$dest$0>>2] = $319;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L186;
          break;
         }
         case 1:  {
          HEAP32[$dest$0>>2] = $319;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L186;
          break;
         }
         case 3:  {
          $334 = $dest$0;
          $335 = $334;
          HEAP32[$335>>2] = $319;
          $336 = (($334) + 4)|0;
          $337 = $336;
          HEAP32[$337>>2] = $320;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L186;
          break;
         }
         default: {
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L186;
         }
         }
        }
       }
      } while(0);
      $348 = HEAP32[$5>>2]|0;
      $349 = HEAP32[$3>>2]|0;
      $350 = HEAP32[$6>>2]|0;
      $351 = $349;
      $352 = $350;
      $353 = (($348) + ($pos$1))|0;
      $354 = (($353) + ($351))|0;
      $355 = (($354) - ($352))|0;
      $not$ = ($dest$0|0)!=(0|0);
      $356 = $not$&1;
      $matches$0$ = (($356) + ($matches$0110))|0;
      $matches$1 = $matches$0$;$p$11 = $p$10;$pos$2 = $355;$s$5 = $s$4;$wcs$6 = $wcs$5;
      break L6;
     }
    } while(0);
    $46 = $43&1;
    $47 = (($p$0116) + ($46)|0);
    ___shlim($f,0);
    $48 = HEAP32[$3>>2]|0;
    $49 = HEAP32[$4>>2]|0;
    $50 = ($48>>>0)<($49>>>0);
    if ($50) {
     $51 = ((($48)) + 1|0);
     HEAP32[$3>>2] = $51;
     $52 = HEAP8[$48>>0]|0;
     $53 = $52&255;
     $57 = $53;
    } else {
     $54 = (___shgetc($f)|0);
     $57 = $54;
    }
    $55 = HEAP8[$47>>0]|0;
    $56 = $55&255;
    $58 = ($57|0)==($56|0);
    if (!($58)) {
     $$lcssa520 = $57;$matches$0110$lcssa = $matches$0110;$s$0108$lcssa = $s$0108;$wcs$0109$lcssa = $wcs$0109;
     label = 19;
     break L4;
    }
    $65 = (($pos$0115) + 1)|0;
    $matches$1 = $matches$0110;$p$11 = $47;$pos$2 = $65;$s$5 = $s$0108;$wcs$6 = $wcs$0109;
   } else {
    $p$1 = $p$0116;
    while(1) {
     $16 = ((($p$1)) + 1|0);
     $17 = HEAP8[$16>>0]|0;
     $18 = $17&255;
     $19 = (_isspace($18)|0);
     $20 = ($19|0)==(0);
     if ($20) {
      $p$1$lcssa = $p$1;
      break;
     } else {
      $p$1 = $16;
     }
    }
    ___shlim($f,0);
    while(1) {
     $21 = HEAP32[$3>>2]|0;
     $22 = HEAP32[$4>>2]|0;
     $23 = ($21>>>0)<($22>>>0);
     if ($23) {
      $24 = ((($21)) + 1|0);
      HEAP32[$3>>2] = $24;
      $25 = HEAP8[$21>>0]|0;
      $26 = $25&255;
      $28 = $26;
     } else {
      $27 = (___shgetc($f)|0);
      $28 = $27;
     }
     $29 = (_isspace($28)|0);
     $30 = ($29|0)==(0);
     if ($30) {
      break;
     }
    }
    $31 = HEAP32[$4>>2]|0;
    $32 = ($31|0)==(0|0);
    $$pre = HEAP32[$3>>2]|0;
    if ($32) {
     $36 = $$pre;
    } else {
     $33 = ((($$pre)) + -1|0);
     HEAP32[$3>>2] = $33;
     $36 = $33;
    }
    $34 = HEAP32[$5>>2]|0;
    $35 = HEAP32[$6>>2]|0;
    $37 = $36;
    $38 = $35;
    $39 = (($34) + ($pos$0115))|0;
    $40 = (($39) + ($37))|0;
    $41 = (($40) - ($38))|0;
    $matches$1 = $matches$0110;$p$11 = $p$1$lcssa;$pos$2 = $41;$s$5 = $s$0108;$wcs$6 = $wcs$0109;
   }
  } while(0);
  $357 = ((($p$11)) + 1|0);
  $358 = HEAP8[$357>>0]|0;
  $359 = ($358<<24>>24)==(0);
  if ($359) {
   $matches$3 = $matches$1;
   label = 168;
   break;
  } else {
   $13 = $358;$matches$0110 = $matches$1;$p$0116 = $357;$pos$0115 = $pos$2;$s$0108 = $s$5;$wcs$0109 = $wcs$6;
  }
 }
 if ((label|0) == 19) {
  $59 = HEAP32[$4>>2]|0;
  $60 = ($59|0)==(0|0);
  if (!($60)) {
   $61 = HEAP32[$3>>2]|0;
   $62 = ((($61)) + -1|0);
   HEAP32[$3>>2] = $62;
  }
  $63 = ($$lcssa520|0)>(-1);
  $64 = ($matches$0110$lcssa|0)!=(0);
  $or$cond5 = $64 | $63;
  if ($or$cond5) {
   $matches$3 = $matches$0110$lcssa;
   STACKTOP = sp;return ($matches$3|0);
  } else {
   $alloc$1 = 0;$s$7 = $s$0108$lcssa;$wcs$8 = $wcs$0109$lcssa;
   label = 165;
  }
 }
 else if ((label|0) == 164) {
  $$old4 = ($matches$0110501|0)==(0);
  if ($$old4) {
   $alloc$1 = $alloc$0203;$s$7 = $s$6;$wcs$8 = $wcs$7;
   label = 165;
  } else {
   $alloc$2 = $alloc$0203;$matches$2 = $matches$0110501;$s$8 = $s$6;$wcs$9 = $wcs$7;
  }
 }
 else if ((label|0) == 168) {
  STACKTOP = sp;return ($matches$3|0);
 }
 if ((label|0) == 165) {
  $alloc$2 = $alloc$1;$matches$2 = -1;$s$8 = $s$7;$wcs$9 = $wcs$8;
 }
 $360 = ($alloc$2|0)==(0);
 if ($360) {
  $matches$3 = $matches$2;
  STACKTOP = sp;return ($matches$3|0);
 }
 _free($s$8);
 _free($wcs$9);
 $matches$3 = $matches$2;
 STACKTOP = sp;return ($matches$3|0);
}
function _vsscanf($s,$fmt,$ap) {
 $s = $s|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $f = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $f = sp;
 dest=$f; stop=dest+112|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $0 = ((($f)) + 32|0);
 HEAP32[$0>>2] = 18;
 $1 = ((($f)) + 44|0);
 HEAP32[$1>>2] = $s;
 $2 = ((($f)) + 76|0);
 HEAP32[$2>>2] = -1;
 $3 = ((($f)) + 84|0);
 HEAP32[$3>>2] = $s;
 $4 = (_MUSL_vfscanf($f,$fmt,$ap)|0);
 STACKTOP = sp;return ($4|0);
}
function _wcslen($s) {
 $s = $s|0;
 var $$0 = 0, $$0$lcssa = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $s;
 while(1) {
  $0 = HEAP32[$$0>>2]|0;
  $1 = ($0|0)==(0);
  $2 = ((($$0)) + 4|0);
  if ($1) {
   $$0$lcssa = $$0;
   break;
  } else {
   $$0 = $2;
  }
 }
 $3 = $$0$lcssa;
 $4 = $s;
 $5 = (($3) - ($4))|0;
 $6 = $5 >> 2;
 return ($6|0);
}
function _wmemcpy($d,$s,$n) {
 $d = $d|0;
 $s = $s|0;
 $n = $n|0;
 var $$014 = 0, $$023 = 0, $$05 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($n|0)==(0);
 if ($0) {
  return ($d|0);
 } else {
  $$014 = $n;$$023 = $s;$$05 = $d;
 }
 while(1) {
  $1 = (($$014) + -1)|0;
  $2 = ((($$023)) + 4|0);
  $3 = HEAP32[$$023>>2]|0;
  $4 = ((($$05)) + 4|0);
  HEAP32[$$05>>2] = $3;
  $5 = ($1|0)==(0);
  if ($5) {
   break;
  } else {
   $$014 = $1;$$023 = $2;$$05 = $4;
  }
 }
 return ($d|0);
}
function _wmemmove($d,$s,$n) {
 $d = $d|0;
 $s = $s|0;
 $n = $n|0;
 var $$025 = 0, $$07 = 0, $$16 = 0, $$in = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $d;
 $1 = $s;
 $2 = (($0) - ($1))|0;
 $3 = $2 >> 2;
 $4 = ($3>>>0)<($n>>>0);
 $5 = ($n|0)==(0);
 if ($4) {
  if ($5) {
   return ($d|0);
  } else {
   $$in = $n;
  }
  while(1) {
   $6 = (($$in) + -1)|0;
   $7 = (($s) + ($6<<2)|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = (($d) + ($6<<2)|0);
   HEAP32[$9>>2] = $8;
   $10 = ($6|0)==(0);
   if ($10) {
    break;
   } else {
    $$in = $6;
   }
  }
  return ($d|0);
 } else {
  if ($5) {
   return ($d|0);
  } else {
   $$025 = $s;$$07 = $d;$$16 = $n;
  }
  while(1) {
   $11 = (($$16) + -1)|0;
   $12 = ((($$025)) + 4|0);
   $13 = HEAP32[$$025>>2]|0;
   $14 = ((($$07)) + 4|0);
   HEAP32[$$07>>2] = $13;
   $15 = ($11|0)==(0);
   if ($15) {
    break;
   } else {
    $$025 = $12;$$07 = $14;$$16 = $11;
   }
  }
  return ($d|0);
 }
 return (0)|0;
}
function _wmemset($d,$c,$n) {
 $d = $d|0;
 $c = $c|0;
 $n = $n|0;
 var $$012 = 0, $$03 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($n|0)==(0);
 if ($0) {
  return ($d|0);
 } else {
  $$012 = $n;$$03 = $d;
 }
 while(1) {
  $1 = (($$012) + -1)|0;
  $2 = ((($$03)) + 4|0);
  HEAP32[$$03>>2] = $c;
  $3 = ($1|0)==(0);
  if ($3) {
   break;
  } else {
   $$012 = $1;$$03 = $2;
  }
 }
 return ($d|0);
}
function _do_read($f,$buf,$len) {
 $f = $f|0;
 $buf = $buf|0;
 $len = $len|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___string_read($f,$buf,$len)|0);
 return ($0|0);
}
function _abort_message($format,$varargs) {
 $format = $format|0;
 $varargs = $varargs|0;
 var $0 = 0, $list = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $list = sp;
 HEAP32[$list>>2] = $varargs;
 $0 = HEAP32[_stderr>>2]|0;
 (_vfprintf(($0|0),($format|0),($list|0))|0);
 (_fputc(10,($0|0))|0);
 _abort();
 // unreachable;
}
function __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___assert_fail((2432|0),(2464|0),1164,(2552|0));
 // unreachable;
}
function __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___assert_fail((2576|0),(9528|0),303,(2552|0));
 // unreachable;
}
function ___cxa_get_globals_fast() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $0 = (_pthread_once((2608|0),(3|0))|0);
 $1 = ($0|0)==(0);
 if ($1) {
  $2 = HEAP32[2600>>2]|0;
  $3 = (_pthread_getspecific(($2|0))|0);
  STACKTOP = sp;return ($3|0);
 } else {
  _abort_message(2616,$vararg_buffer);
  // unreachable;
 }
 return (0)|0;
}
function __Znwj($size) {
 $size = $size|0;
 var $$lcssa = 0, $$size = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($size|0)==(0);
 $$size = $0 ? 1 : $size;
 $1 = (_malloc($$size)|0);
 $2 = ($1|0)==(0|0);
 L1: do {
  if ($2) {
   while(1) {
    $3 = (__ZSt15get_new_handlerv()|0);
    $4 = ($3|0)==(0|0);
    if ($4) {
     break;
    }
    FUNCTION_TABLE_v[$3 & 3]();
    $5 = (_malloc($$size)|0);
    $6 = ($5|0)==(0|0);
    if (!($6)) {
     $$lcssa = $5;
     break L1;
    }
   }
   $7 = (___cxa_allocate_exception(4)|0);
   HEAP32[$7>>2] = (1808);
   ___cxa_throw(($7|0),(1840|0),(33|0));
   // unreachable;
  } else {
   $$lcssa = $1;
  }
 } while(0);
 return ($$lcssa|0);
}
function __ZdlPv($ptr) {
 $ptr = $ptr|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($ptr);
 return;
}
function __ZdaPv($ptr) {
 $ptr = $ptr|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($ptr);
 return;
}
function __ZNSt9bad_allocC2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (1808);
 return;
}
function __ZNSt9bad_allocD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt9bad_allocD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt9bad_alloc4whatEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (2672|0);
}
function __ZSt11__terminatePFvvE($func) {
 $func = $func|0;
 var $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 FUNCTION_TABLE_v[$func & 3]();
 _abort_message(2688,$vararg_buffer);
 // unreachable;
}
function __ZSt9terminatev() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = (___cxa_get_globals_fast()|0);
 $1 = ($0|0)==(0|0);
 if (!($1)) {
  $2 = HEAP32[$0>>2]|0;
  $3 = ($2|0)==(0|0);
  if (!($3)) {
   $4 = ((($2)) + 48|0);
   $5 = $4;
   $6 = $5;
   $7 = HEAP32[$6>>2]|0;
   $8 = (($5) + 4)|0;
   $9 = $8;
   $10 = HEAP32[$9>>2]|0;
   $11 = $7 & -256;
   $12 = ($11|0)==(1126902528);
   $13 = ($10|0)==(1129074247);
   $14 = $12 & $13;
   if ($14) {
    $15 = ((($2)) + 12|0);
    $16 = HEAP32[$15>>2]|0;
    __ZSt11__terminatePFvvE($16);
    // unreachable;
   }
  }
 }
 $17 = HEAP32[448]|0;HEAP32[448] = (($17+0)|0);
 $18 = $17;
 __ZSt11__terminatePFvvE($18);
 // unreachable;
}
function __ZSt15get_new_handlerv() {
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[1856>>2]|0;HEAP32[1856>>2] = (($0+0)|0);
 $1 = $0;
 return ($1|0);
}
function __ZNSt9exceptionD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt13runtime_errorD2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (1896);
 $0 = ((($this)) + 4|0);
 __ZN12_GLOBAL__N_114__libcpp_nmstrD2Ev($0);
 return;
}
function __ZNSt13runtime_errorD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt13runtime_errorD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt13runtime_error4whatEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNSt9type_infoD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN10__cxxabiv116__shim_type_infoD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNK10__cxxabiv116__shim_type_info5noop1Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNK10__cxxabiv116__shim_type_info5noop2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN10__cxxabiv117__class_type_infoD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZN10__cxxabiv120__si_class_type_infoD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZN10__cxxabiv121__vmi_class_type_infoD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv($this,$thrown_type,$adjustedPtr) {
 $this = $this|0;
 $thrown_type = $thrown_type|0;
 $adjustedPtr = $adjustedPtr|0;
 var $$0 = 0, $$1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $info = 0, dest = 0;
 var label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $info = sp;
 $0 = ($this|0)==($thrown_type|0);
 if ($0) {
  $$1 = 1;
 } else {
  $1 = ($thrown_type|0)==(0|0);
  if ($1) {
   $$1 = 0;
  } else {
   $2 = (___dynamic_cast($thrown_type,2016,2072,0)|0);
   $3 = ($2|0)==(0|0);
   if ($3) {
    $$1 = 0;
   } else {
    dest=$info; stop=dest+56|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
    HEAP32[$info>>2] = $2;
    $4 = ((($info)) + 8|0);
    HEAP32[$4>>2] = $this;
    $5 = ((($info)) + 12|0);
    HEAP32[$5>>2] = -1;
    $6 = ((($info)) + 48|0);
    HEAP32[$6>>2] = 1;
    $7 = HEAP32[$2>>2]|0;
    $8 = ((($7)) + 28|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = HEAP32[$adjustedPtr>>2]|0;
    FUNCTION_TABLE_viiii[$9 & 7]($2,$info,$10,1);
    $11 = ((($info)) + 24|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = ($12|0)==(1);
    if ($13) {
     $14 = ((($info)) + 16|0);
     $15 = HEAP32[$14>>2]|0;
     HEAP32[$adjustedPtr>>2] = $15;
     $$0 = 1;
    } else {
     $$0 = 0;
    }
    $$1 = $$0;
   }
  }
 }
 STACKTOP = sp;return ($$1|0);
}
function __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 do {
  if ($2) {
   HEAP32[$0>>2] = $adjustedPtr;
   $3 = ((($info)) + 24|0);
   HEAP32[$3>>2] = $path_below;
   $4 = ((($info)) + 36|0);
   HEAP32[$4>>2] = 1;
  } else {
   $5 = ($1|0)==($adjustedPtr|0);
   if (!($5)) {
    $9 = ((($info)) + 36|0);
    $10 = HEAP32[$9>>2]|0;
    $11 = (($10) + 1)|0;
    HEAP32[$9>>2] = $11;
    $12 = ((($info)) + 24|0);
    HEAP32[$12>>2] = 2;
    $13 = ((($info)) + 54|0);
    HEAP8[$13>>0] = 1;
    break;
   }
   $6 = ((($info)) + 24|0);
   $7 = HEAP32[$6>>2]|0;
   $8 = ($7|0)==(2);
   if ($8) {
    HEAP32[$6>>2] = $path_below;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0,$info,$adjustedPtr,$path_below);
 }
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0,$info,$adjustedPtr,$path_below);
 } else {
  $3 = ((($this)) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = HEAP32[$4>>2]|0;
  $6 = ((($5)) + 28|0);
  $7 = HEAP32[$6>>2]|0;
  FUNCTION_TABLE_viiii[$7 & 7]($4,$info,$adjustedPtr,$path_below);
 }
 return;
}
function __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $offset_to_base$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 >> 8;
 $3 = $1 & 1;
 $4 = ($3|0)==(0);
 if ($4) {
  $offset_to_base$0 = $2;
 } else {
  $5 = HEAP32[$adjustedPtr>>2]|0;
  $6 = (($5) + ($2)|0);
  $7 = HEAP32[$6>>2]|0;
  $offset_to_base$0 = $7;
 }
 $8 = HEAP32[$this>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($9)) + 28|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($adjustedPtr) + ($offset_to_base$0)|0);
 $13 = $1 & 2;
 $14 = ($13|0)!=(0);
 $15 = $14 ? $path_below : 2;
 FUNCTION_TABLE_viiii[$11 & 7]($8,$info,$12,$15);
 return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 L1: do {
  if ($2) {
   __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0,$info,$adjustedPtr,$path_below);
  } else {
   $3 = ((($this)) + 16|0);
   $4 = ((($this)) + 12|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = (((($this)) + 16|0) + ($5<<3)|0);
   __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($3,$info,$adjustedPtr,$path_below);
   $7 = ($5|0)>(1);
   if ($7) {
    $8 = ((($this)) + 24|0);
    $9 = ((($info)) + 54|0);
    $p$0 = $8;
    while(1) {
     __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($p$0,$info,$adjustedPtr,$path_below);
     $10 = HEAP8[$9>>0]|0;
     $11 = ($10<<24>>24)==(0);
     if (!($11)) {
      break L1;
     }
     $12 = ((($p$0)) + 8|0);
     $13 = ($12>>>0)<($6>>>0);
     if ($13) {
      $p$0 = $12;
     } else {
      break;
     }
    }
   }
  }
 } while(0);
 return;
}
function ___dynamic_cast($static_ptr,$static_type,$dst_type,$src2dst_offset) {
 $static_ptr = $static_ptr|0;
 $static_type = $static_type|0;
 $dst_type = $dst_type|0;
 $src2dst_offset = $src2dst_offset|0;
 var $$ = 0, $$8 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $dst_ptr$0 = 0, $info = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond7 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $info = sp;
 $0 = HEAP32[$static_ptr>>2]|0;
 $1 = ((($0)) + -8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = $2;
 $4 = (($static_ptr) + ($3)|0);
 $5 = ((($0)) + -4|0);
 $6 = HEAP32[$5>>2]|0;
 HEAP32[$info>>2] = $dst_type;
 $7 = ((($info)) + 4|0);
 HEAP32[$7>>2] = $static_ptr;
 $8 = ((($info)) + 8|0);
 HEAP32[$8>>2] = $static_type;
 $9 = ((($info)) + 12|0);
 HEAP32[$9>>2] = $src2dst_offset;
 $10 = ((($info)) + 16|0);
 $11 = ((($info)) + 20|0);
 $12 = ((($info)) + 24|0);
 $13 = ((($info)) + 28|0);
 $14 = ((($info)) + 32|0);
 $15 = ((($info)) + 40|0);
 $16 = ($6|0)==($dst_type|0);
 dest=$10; stop=dest+36|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));HEAP16[$10+36>>1]=0|0;HEAP8[$10+38>>0]=0|0;
 do {
  if ($16) {
   $17 = ((($info)) + 48|0);
   HEAP32[$17>>2] = 1;
   $18 = HEAP32[$dst_type>>2]|0;
   $19 = ((($18)) + 20|0);
   $20 = HEAP32[$19>>2]|0;
   FUNCTION_TABLE_viiiiii[$20 & 7]($dst_type,$info,$4,$4,1,0);
   $21 = HEAP32[$12>>2]|0;
   $22 = ($21|0)==(1);
   $$ = $22 ? $4 : 0;
   $dst_ptr$0 = $$;
  } else {
   $23 = ((($info)) + 36|0);
   $24 = HEAP32[$6>>2]|0;
   $25 = ((($24)) + 24|0);
   $26 = HEAP32[$25>>2]|0;
   FUNCTION_TABLE_viiiii[$26 & 3]($6,$info,$4,1,0);
   $27 = HEAP32[$23>>2]|0;
   if ((($27|0) == 0)) {
    $28 = HEAP32[$15>>2]|0;
    $29 = ($28|0)==(1);
    $30 = HEAP32[$13>>2]|0;
    $31 = ($30|0)==(1);
    $or$cond = $29 & $31;
    $32 = HEAP32[$14>>2]|0;
    $33 = ($32|0)==(1);
    $or$cond3 = $or$cond & $33;
    $34 = HEAP32[$11>>2]|0;
    $$8 = $or$cond3 ? $34 : 0;
    $dst_ptr$0 = $$8;
    break;
   } else if (!((($27|0) == 1))) {
    $dst_ptr$0 = 0;
    break;
   }
   $35 = HEAP32[$12>>2]|0;
   $36 = ($35|0)==(1);
   if (!($36)) {
    $37 = HEAP32[$15>>2]|0;
    $38 = ($37|0)==(0);
    $39 = HEAP32[$13>>2]|0;
    $40 = ($39|0)==(1);
    $or$cond5 = $38 & $40;
    $41 = HEAP32[$14>>2]|0;
    $42 = ($41|0)==(1);
    $or$cond7 = $or$cond5 & $42;
    if (!($or$cond7)) {
     $dst_ptr$0 = 0;
     break;
    }
   }
   $43 = HEAP32[$10>>2]|0;
   $dst_ptr$0 = $43;
  }
 } while(0);
 STACKTOP = sp;return ($dst_ptr$0|0);
}
function __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i($this,$info,$dst_ptr,$current_ptr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 53|0);
 HEAP8[$0>>0] = 1;
 $1 = ((($info)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==($current_ptr|0);
 do {
  if ($3) {
   $4 = ((($info)) + 52|0);
   HEAP8[$4>>0] = 1;
   $5 = ((($info)) + 16|0);
   $6 = HEAP32[$5>>2]|0;
   $7 = ($6|0)==(0|0);
   if ($7) {
    HEAP32[$5>>2] = $dst_ptr;
    $8 = ((($info)) + 24|0);
    HEAP32[$8>>2] = $path_below;
    $9 = ((($info)) + 36|0);
    HEAP32[$9>>2] = 1;
    $10 = ((($info)) + 48|0);
    $11 = HEAP32[$10>>2]|0;
    $12 = ($11|0)==(1);
    $13 = ($path_below|0)==(1);
    $or$cond = $12 & $13;
    if (!($or$cond)) {
     break;
    }
    $14 = ((($info)) + 54|0);
    HEAP8[$14>>0] = 1;
    break;
   }
   $15 = ($6|0)==($dst_ptr|0);
   if (!($15)) {
    $25 = ((($info)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (($26) + 1)|0;
    HEAP32[$25>>2] = $27;
    $28 = ((($info)) + 54|0);
    HEAP8[$28>>0] = 1;
    break;
   }
   $16 = ((($info)) + 24|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ($17|0)==(2);
   if ($18) {
    HEAP32[$16>>2] = $path_below;
    $22 = $path_below;
   } else {
    $22 = $17;
   }
   $19 = ((($info)) + 48|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ($20|0)==(1);
   $23 = ($22|0)==(1);
   $or$cond1 = $21 & $23;
   if ($or$cond1) {
    $24 = ((($info)) + 54|0);
    HEAP8[$24>>0] = 1;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $does_dst_type_point_to_our_static_type$0$off0$lcssa = 0, $does_dst_type_point_to_our_static_type$0$off023 = 0, $does_dst_type_point_to_our_static_type$1$off0 = 0, $is_dst_type_derived_from_static_type$0$off025 = 0, $is_dst_type_derived_from_static_type$1$off0 = 0, $is_dst_type_derived_from_static_type$2$off0 = 0;
 var $p$024 = 0, $p2$0 = 0, $p2$1 = 0, $p2$2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 L1: do {
  if ($2) {
   $3 = ((($info)) + 4|0);
   $4 = HEAP32[$3>>2]|0;
   $5 = ($4|0)==($current_ptr|0);
   if ($5) {
    $6 = ((($info)) + 28|0);
    $7 = HEAP32[$6>>2]|0;
    $8 = ($7|0)==(1);
    if (!($8)) {
     HEAP32[$6>>2] = $path_below;
    }
   }
  } else {
   $9 = HEAP32[$info>>2]|0;
   $10 = ($this|0)==($9|0);
   if (!($10)) {
    $57 = ((($this)) + 16|0);
    $58 = ((($this)) + 12|0);
    $59 = HEAP32[$58>>2]|0;
    $60 = (((($this)) + 16|0) + ($59<<3)|0);
    __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($57,$info,$current_ptr,$path_below,$use_strcmp);
    $61 = ((($this)) + 24|0);
    $62 = ($59|0)>(1);
    if (!($62)) {
     break;
    }
    $63 = ((($this)) + 8|0);
    $64 = HEAP32[$63>>2]|0;
    $65 = $64 & 2;
    $66 = ($65|0)==(0);
    if ($66) {
     $67 = ((($info)) + 36|0);
     $68 = HEAP32[$67>>2]|0;
     $69 = ($68|0)==(1);
     if (!($69)) {
      $75 = $64 & 1;
      $76 = ($75|0)==(0);
      if ($76) {
       $79 = ((($info)) + 54|0);
       $p2$2 = $61;
       while(1) {
        $88 = HEAP8[$79>>0]|0;
        $89 = ($88<<24>>24)==(0);
        if (!($89)) {
         break L1;
        }
        $90 = HEAP32[$67>>2]|0;
        $91 = ($90|0)==(1);
        if ($91) {
         break L1;
        }
        __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$2,$info,$current_ptr,$path_below,$use_strcmp);
        $92 = ((($p2$2)) + 8|0);
        $93 = ($92>>>0)<($60>>>0);
        if ($93) {
         $p2$2 = $92;
        } else {
         break L1;
        }
       }
      }
      $77 = ((($info)) + 24|0);
      $78 = ((($info)) + 54|0);
      $p2$1 = $61;
      while(1) {
       $80 = HEAP8[$78>>0]|0;
       $81 = ($80<<24>>24)==(0);
       if (!($81)) {
        break L1;
       }
       $82 = HEAP32[$67>>2]|0;
       $83 = ($82|0)==(1);
       if ($83) {
        $84 = HEAP32[$77>>2]|0;
        $85 = ($84|0)==(1);
        if ($85) {
         break L1;
        }
       }
       __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$1,$info,$current_ptr,$path_below,$use_strcmp);
       $86 = ((($p2$1)) + 8|0);
       $87 = ($86>>>0)<($60>>>0);
       if ($87) {
        $p2$1 = $86;
       } else {
        break L1;
       }
      }
     }
    }
    $70 = ((($info)) + 54|0);
    $p2$0 = $61;
    while(1) {
     $71 = HEAP8[$70>>0]|0;
     $72 = ($71<<24>>24)==(0);
     if (!($72)) {
      break L1;
     }
     __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$0,$info,$current_ptr,$path_below,$use_strcmp);
     $73 = ((($p2$0)) + 8|0);
     $74 = ($73>>>0)<($60>>>0);
     if ($74) {
      $p2$0 = $73;
     } else {
      break L1;
     }
    }
   }
   $11 = ((($info)) + 16|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = ($12|0)==($current_ptr|0);
   if (!($13)) {
    $14 = ((($info)) + 20|0);
    $15 = HEAP32[$14>>2]|0;
    $16 = ($15|0)==($current_ptr|0);
    if (!($16)) {
     $19 = ((($info)) + 32|0);
     HEAP32[$19>>2] = $path_below;
     $20 = ((($info)) + 44|0);
     $21 = HEAP32[$20>>2]|0;
     $22 = ($21|0)==(4);
     if ($22) {
      break;
     }
     $23 = ((($this)) + 12|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = (((($this)) + 16|0) + ($24<<3)|0);
     $26 = ((($info)) + 52|0);
     $27 = ((($info)) + 53|0);
     $28 = ((($info)) + 54|0);
     $29 = ((($this)) + 8|0);
     $30 = ((($info)) + 24|0);
     $31 = ($24|0)>(0);
     L31: do {
      if ($31) {
       $32 = ((($this)) + 16|0);
       $does_dst_type_point_to_our_static_type$0$off023 = 0;$is_dst_type_derived_from_static_type$0$off025 = 0;$p$024 = $32;
       while(1) {
        HEAP8[$26>>0] = 0;
        HEAP8[$27>>0] = 0;
        __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($p$024,$info,$current_ptr,$current_ptr,1,$use_strcmp);
        $33 = HEAP8[$28>>0]|0;
        $34 = ($33<<24>>24)==(0);
        if (!($34)) {
         $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$0$off023;$is_dst_type_derived_from_static_type$2$off0 = $is_dst_type_derived_from_static_type$0$off025;
         label = 20;
         break L31;
        }
        $35 = HEAP8[$27>>0]|0;
        $36 = ($35<<24>>24)==(0);
        do {
         if ($36) {
          $does_dst_type_point_to_our_static_type$1$off0 = $does_dst_type_point_to_our_static_type$0$off023;$is_dst_type_derived_from_static_type$1$off0 = $is_dst_type_derived_from_static_type$0$off025;
         } else {
          $37 = HEAP8[$26>>0]|0;
          $38 = ($37<<24>>24)==(0);
          if ($38) {
           $44 = HEAP32[$29>>2]|0;
           $45 = $44 & 1;
           $46 = ($45|0)==(0);
           if ($46) {
            $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$0$off023;$is_dst_type_derived_from_static_type$2$off0 = 1;
            label = 20;
            break L31;
           } else {
            $does_dst_type_point_to_our_static_type$1$off0 = $does_dst_type_point_to_our_static_type$0$off023;$is_dst_type_derived_from_static_type$1$off0 = 1;
            break;
           }
          }
          $39 = HEAP32[$30>>2]|0;
          $40 = ($39|0)==(1);
          if ($40) {
           break L31;
          }
          $41 = HEAP32[$29>>2]|0;
          $42 = $41 & 2;
          $43 = ($42|0)==(0);
          if ($43) {
           break L31;
          } else {
           $does_dst_type_point_to_our_static_type$1$off0 = 1;$is_dst_type_derived_from_static_type$1$off0 = 1;
          }
         }
        } while(0);
        $47 = ((($p$024)) + 8|0);
        $48 = ($47>>>0)<($25>>>0);
        if ($48) {
         $does_dst_type_point_to_our_static_type$0$off023 = $does_dst_type_point_to_our_static_type$1$off0;$is_dst_type_derived_from_static_type$0$off025 = $is_dst_type_derived_from_static_type$1$off0;$p$024 = $47;
        } else {
         $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$1$off0;$is_dst_type_derived_from_static_type$2$off0 = $is_dst_type_derived_from_static_type$1$off0;
         label = 20;
         break;
        }
       }
      } else {
       $does_dst_type_point_to_our_static_type$0$off0$lcssa = 0;$is_dst_type_derived_from_static_type$2$off0 = 0;
       label = 20;
      }
     } while(0);
     do {
      if ((label|0) == 20) {
       if ($does_dst_type_point_to_our_static_type$0$off0$lcssa) {
        label = 24;
       } else {
        HEAP32[$14>>2] = $current_ptr;
        $49 = ((($info)) + 40|0);
        $50 = HEAP32[$49>>2]|0;
        $51 = (($50) + 1)|0;
        HEAP32[$49>>2] = $51;
        $52 = ((($info)) + 36|0);
        $53 = HEAP32[$52>>2]|0;
        $54 = ($53|0)==(1);
        if ($54) {
         $55 = HEAP32[$30>>2]|0;
         $56 = ($55|0)==(2);
         if ($56) {
          HEAP8[$28>>0] = 1;
          if ($is_dst_type_derived_from_static_type$2$off0) {
           break;
          }
         } else {
          label = 24;
         }
        } else {
         label = 24;
        }
       }
       if ((label|0) == 24) {
        if ($is_dst_type_derived_from_static_type$2$off0) {
         break;
        }
       }
       HEAP32[$20>>2] = 4;
       break L1;
      }
     } while(0);
     HEAP32[$20>>2] = 3;
     break;
    }
   }
   $17 = ($path_below|0)==(1);
   if ($17) {
    $18 = ((($info)) + 32|0);
    HEAP32[$18>>2] = 1;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $offset_to_base$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 >> 8;
 $3 = $1 & 1;
 $4 = ($3|0)==(0);
 if ($4) {
  $offset_to_base$0 = $2;
 } else {
  $5 = HEAP32[$current_ptr>>2]|0;
  $6 = (($5) + ($2)|0);
  $7 = HEAP32[$6>>2]|0;
  $offset_to_base$0 = $7;
 }
 $8 = HEAP32[$this>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($9)) + 20|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($current_ptr) + ($offset_to_base$0)|0);
 $13 = $1 & 2;
 $14 = ($13|0)!=(0);
 $15 = $14 ? $path_below : 2;
 FUNCTION_TABLE_viiiiii[$11 & 7]($8,$info,$dst_ptr,$12,$15,$use_strcmp);
 return;
}
function __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $offset_to_base$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 >> 8;
 $3 = $1 & 1;
 $4 = ($3|0)==(0);
 if ($4) {
  $offset_to_base$0 = $2;
 } else {
  $5 = HEAP32[$current_ptr>>2]|0;
  $6 = (($5) + ($2)|0);
  $7 = HEAP32[$6>>2]|0;
  $offset_to_base$0 = $7;
 }
 $8 = HEAP32[$this>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($9)) + 24|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($current_ptr) + ($offset_to_base$0)|0);
 $13 = $1 & 2;
 $14 = ($13|0)!=(0);
 $15 = $14 ? $path_below : 2;
 FUNCTION_TABLE_viiiii[$11 & 3]($8,$info,$12,$15,$use_strcmp);
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $is_dst_type_derived_from_static_type$0$off01 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 L1: do {
  if ($2) {
   $3 = ((($info)) + 4|0);
   $4 = HEAP32[$3>>2]|0;
   $5 = ($4|0)==($current_ptr|0);
   if ($5) {
    $6 = ((($info)) + 28|0);
    $7 = HEAP32[$6>>2]|0;
    $8 = ($7|0)==(1);
    if (!($8)) {
     HEAP32[$6>>2] = $path_below;
    }
   }
  } else {
   $9 = HEAP32[$info>>2]|0;
   $10 = ($this|0)==($9|0);
   if (!($10)) {
    $43 = ((($this)) + 8|0);
    $44 = HEAP32[$43>>2]|0;
    $45 = HEAP32[$44>>2]|0;
    $46 = ((($45)) + 24|0);
    $47 = HEAP32[$46>>2]|0;
    FUNCTION_TABLE_viiiii[$47 & 3]($44,$info,$current_ptr,$path_below,$use_strcmp);
    break;
   }
   $11 = ((($info)) + 16|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = ($12|0)==($current_ptr|0);
   if (!($13)) {
    $14 = ((($info)) + 20|0);
    $15 = HEAP32[$14>>2]|0;
    $16 = ($15|0)==($current_ptr|0);
    if (!($16)) {
     $19 = ((($info)) + 32|0);
     HEAP32[$19>>2] = $path_below;
     $20 = ((($info)) + 44|0);
     $21 = HEAP32[$20>>2]|0;
     $22 = ($21|0)==(4);
     if ($22) {
      break;
     }
     $23 = ((($info)) + 52|0);
     HEAP8[$23>>0] = 0;
     $24 = ((($info)) + 53|0);
     HEAP8[$24>>0] = 0;
     $25 = ((($this)) + 8|0);
     $26 = HEAP32[$25>>2]|0;
     $27 = HEAP32[$26>>2]|0;
     $28 = ((($27)) + 20|0);
     $29 = HEAP32[$28>>2]|0;
     FUNCTION_TABLE_viiiiii[$29 & 7]($26,$info,$current_ptr,$current_ptr,1,$use_strcmp);
     $30 = HEAP8[$24>>0]|0;
     $31 = ($30<<24>>24)==(0);
     if ($31) {
      $is_dst_type_derived_from_static_type$0$off01 = 0;
      label = 13;
     } else {
      $32 = HEAP8[$23>>0]|0;
      $not$ = ($32<<24>>24)==(0);
      if ($not$) {
       $is_dst_type_derived_from_static_type$0$off01 = 1;
       label = 13;
      }
     }
     do {
      if ((label|0) == 13) {
       HEAP32[$14>>2] = $current_ptr;
       $33 = ((($info)) + 40|0);
       $34 = HEAP32[$33>>2]|0;
       $35 = (($34) + 1)|0;
       HEAP32[$33>>2] = $35;
       $36 = ((($info)) + 36|0);
       $37 = HEAP32[$36>>2]|0;
       $38 = ($37|0)==(1);
       if ($38) {
        $39 = ((($info)) + 24|0);
        $40 = HEAP32[$39>>2]|0;
        $41 = ($40|0)==(2);
        if ($41) {
         $42 = ((($info)) + 54|0);
         HEAP8[$42>>0] = 1;
         if ($is_dst_type_derived_from_static_type$0$off01) {
          break;
         }
        } else {
         label = 16;
        }
       } else {
        label = 16;
       }
       if ((label|0) == 16) {
        if ($is_dst_type_derived_from_static_type$0$off01) {
         break;
        }
       }
       HEAP32[$20>>2] = 4;
       break L1;
      }
     } while(0);
     HEAP32[$20>>2] = 3;
     break;
    }
   }
   $17 = ($path_below|0)==(1);
   if ($17) {
    $18 = ((($info)) + 32|0);
    HEAP32[$18>>2] = 1;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 do {
  if ($2) {
   $3 = ((($info)) + 4|0);
   $4 = HEAP32[$3>>2]|0;
   $5 = ($4|0)==($current_ptr|0);
   if ($5) {
    $6 = ((($info)) + 28|0);
    $7 = HEAP32[$6>>2]|0;
    $8 = ($7|0)==(1);
    if (!($8)) {
     HEAP32[$6>>2] = $path_below;
    }
   }
  } else {
   $9 = HEAP32[$info>>2]|0;
   $10 = ($this|0)==($9|0);
   if ($10) {
    $11 = ((($info)) + 16|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = ($12|0)==($current_ptr|0);
    if (!($13)) {
     $14 = ((($info)) + 20|0);
     $15 = HEAP32[$14>>2]|0;
     $16 = ($15|0)==($current_ptr|0);
     if (!($16)) {
      $19 = ((($info)) + 32|0);
      HEAP32[$19>>2] = $path_below;
      HEAP32[$14>>2] = $current_ptr;
      $20 = ((($info)) + 40|0);
      $21 = HEAP32[$20>>2]|0;
      $22 = (($21) + 1)|0;
      HEAP32[$20>>2] = $22;
      $23 = ((($info)) + 36|0);
      $24 = HEAP32[$23>>2]|0;
      $25 = ($24|0)==(1);
      if ($25) {
       $26 = ((($info)) + 24|0);
       $27 = HEAP32[$26>>2]|0;
       $28 = ($27|0)==(2);
       if ($28) {
        $29 = ((($info)) + 54|0);
        HEAP8[$29>>0] = 1;
       }
      }
      $30 = ((($info)) + 44|0);
      HEAP32[$30>>2] = 4;
      break;
     }
    }
    $17 = ($path_below|0)==(1);
    if ($17) {
     $18 = ((($info)) + 32|0);
     HEAP32[$18>>2] = 1;
    }
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0,$info,$dst_ptr,$current_ptr,$path_below);
 } else {
  $3 = ((($info)) + 52|0);
  $4 = HEAP8[$3>>0]|0;
  $5 = ((($info)) + 53|0);
  $6 = HEAP8[$5>>0]|0;
  $7 = ((($this)) + 16|0);
  $8 = ((($this)) + 12|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (((($this)) + 16|0) + ($9<<3)|0);
  HEAP8[$3>>0] = 0;
  HEAP8[$5>>0] = 0;
  __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($7,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp);
  $11 = ($9|0)>(1);
  L3: do {
   if ($11) {
    $12 = ((($this)) + 24|0);
    $13 = ((($info)) + 24|0);
    $14 = ((($this)) + 8|0);
    $15 = ((($info)) + 54|0);
    $p$0 = $12;
    while(1) {
     $16 = HEAP8[$15>>0]|0;
     $17 = ($16<<24>>24)==(0);
     if (!($17)) {
      break L3;
     }
     $18 = HEAP8[$3>>0]|0;
     $19 = ($18<<24>>24)==(0);
     if ($19) {
      $25 = HEAP8[$5>>0]|0;
      $26 = ($25<<24>>24)==(0);
      if (!($26)) {
       $27 = HEAP32[$14>>2]|0;
       $28 = $27 & 1;
       $29 = ($28|0)==(0);
       if ($29) {
        break L3;
       }
      }
     } else {
      $20 = HEAP32[$13>>2]|0;
      $21 = ($20|0)==(1);
      if ($21) {
       break L3;
      }
      $22 = HEAP32[$14>>2]|0;
      $23 = $22 & 2;
      $24 = ($23|0)==(0);
      if ($24) {
       break L3;
      }
     }
     HEAP8[$3>>0] = 0;
     HEAP8[$5>>0] = 0;
     __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($p$0,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp);
     $30 = ((($p$0)) + 8|0);
     $31 = ($30>>>0)<($10>>>0);
     if ($31) {
      $p$0 = $30;
     } else {
      break;
     }
    }
   }
  } while(0);
  HEAP8[$3>>0] = $4;
  HEAP8[$5>>0] = $6;
 }
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0,$info,$dst_ptr,$current_ptr,$path_below);
 } else {
  $3 = ((($this)) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = HEAP32[$4>>2]|0;
  $6 = ((($5)) + 20|0);
  $7 = HEAP32[$6>>2]|0;
  FUNCTION_TABLE_viiiiii[$7 & 7]($4,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp);
 }
 return;
}
function __ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0,$info,$dst_ptr,$current_ptr,$path_below);
 }
 return;
}
function ___cxa_can_catch($catchType,$excpType,$thrown) {
 $catchType = $catchType|0;
 $excpType = $excpType|0;
 $thrown = $thrown|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $temp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $temp = sp;
 $0 = HEAP32[$thrown>>2]|0;
 HEAP32[$temp>>2] = $0;
 $1 = HEAP32[$catchType>>2]|0;
 $2 = ((($1)) + 16|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (FUNCTION_TABLE_iiii[$3 & 31]($catchType,$excpType,$temp)|0);
 $5 = $4&1;
 if ($4) {
  $6 = HEAP32[$temp>>2]|0;
  HEAP32[$thrown>>2] = $6;
 }
 STACKTOP = sp;return ($5|0);
}
function ___cxa_is_pointer_type($type) {
 $type = $type|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($type|0)==(0|0);
 if ($0) {
  $3 = 0;
 } else {
  $1 = (___dynamic_cast($type,2016,2184,0)|0);
  $phitmp = ($1|0)!=(0|0);
  $3 = $phitmp;
 }
 $2 = $3&1;
 return ($2|0);
}
function __ZSt17__throw_bad_allocv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___cxa_allocate_exception(4)|0);
 __ZNSt9bad_allocC2Ev($0);
 ___cxa_throw(($0|0),(1840|0),(33|0));
 // unreachable;
}
function __ZL25default_terminate_handlerv() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $thrown_object = 0, $vararg_buffer = 0, $vararg_buffer10 = 0, $vararg_buffer3 = 0, $vararg_buffer7 = 0, $vararg_ptr1 = 0;
 var $vararg_ptr2 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $vararg_buffer10 = sp + 32|0;
 $vararg_buffer7 = sp + 24|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $thrown_object = sp + 36|0;
 $0 = (___cxa_get_globals_fast()|0);
 $1 = ($0|0)==(0|0);
 if (!($1)) {
  $2 = HEAP32[$0>>2]|0;
  $3 = ($2|0)==(0|0);
  if (!($3)) {
   $4 = ((($2)) + 80|0);
   $5 = ((($2)) + 48|0);
   $6 = $5;
   $7 = $6;
   $8 = HEAP32[$7>>2]|0;
   $9 = (($6) + 4)|0;
   $10 = $9;
   $11 = HEAP32[$10>>2]|0;
   $12 = $8 & -256;
   $13 = ($12|0)==(1126902528);
   $14 = ($11|0)==(1129074247);
   $15 = $13 & $14;
   if (!($15)) {
    HEAP32[$vararg_buffer7>>2] = 2992;
    _abort_message(2936,$vararg_buffer7);
    // unreachable;
   }
   $16 = ($8|0)==(1126902529);
   $17 = ($11|0)==(1129074247);
   $18 = $16 & $17;
   if ($18) {
    $19 = ((($2)) + 44|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = $20;
   } else {
    $21 = $4;
   }
   HEAP32[$thrown_object>>2] = $21;
   $22 = HEAP32[$2>>2]|0;
   $23 = ((($22)) + 4|0);
   $24 = HEAP32[$23>>2]|0;
   $25 = HEAP32[1880>>2]|0;
   $26 = ((($25)) + 16|0);
   $27 = HEAP32[$26>>2]|0;
   $28 = (FUNCTION_TABLE_iiii[$27 & 31](1880,$22,$thrown_object)|0);
   if ($28) {
    $29 = HEAP32[$thrown_object>>2]|0;
    $30 = HEAP32[$29>>2]|0;
    $31 = ((($30)) + 8|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = (FUNCTION_TABLE_ii[$32 & 63]($29)|0);
    HEAP32[$vararg_buffer>>2] = 2992;
    $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
    HEAP32[$vararg_ptr1>>2] = $24;
    $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
    HEAP32[$vararg_ptr2>>2] = $33;
    _abort_message(2840,$vararg_buffer);
    // unreachable;
   } else {
    HEAP32[$vararg_buffer3>>2] = 2992;
    $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
    HEAP32[$vararg_ptr6>>2] = $24;
    _abort_message(2888,$vararg_buffer3);
    // unreachable;
   }
  }
 }
 _abort_message(2976,$vararg_buffer10);
 // unreachable;
}
function __ZN10__cxxabiv112_GLOBAL__N_110construct_Ev() {
 var $0 = 0, $1 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $0 = (_pthread_key_create((2600|0),(106|0))|0);
 $1 = ($0|0)==(0);
 if ($1) {
  STACKTOP = sp;return;
 } else {
  _abort_message(2728,$vararg_buffer);
  // unreachable;
 }
}
function __ZN12_GLOBAL__N_114__libcpp_nmstrD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -4|0);
 $2 = HEAP32[$1>>2]|0;HEAP32[$1>>2] = (($2+-1)|0);
 $3 = (($2) + -1)|0;
 $4 = ($3|0)<(0);
 if ($4) {
  $5 = HEAP32[$this>>2]|0;
  $6 = ((($5)) + -12|0);
  __ZdlPv($6);
 }
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv($p) {
 $p = $p|0;
 var $0 = 0, $1 = 0, $2 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 _free($p);
 $0 = HEAP32[2600>>2]|0;
 $1 = (_pthread_setspecific(($0|0),(0|0))|0);
 $2 = ($1|0)==(0);
 if ($2) {
  STACKTOP = sp;return;
 } else {
  _abort_message(2784,$vararg_buffer);
  // unreachable;
 }
}
function _malloc($bytes) {
 $bytes = $bytes|0;
 var $$3$i = 0, $$lcssa = 0, $$lcssa211 = 0, $$lcssa215 = 0, $$lcssa216 = 0, $$lcssa217 = 0, $$lcssa219 = 0, $$lcssa222 = 0, $$lcssa224 = 0, $$lcssa226 = 0, $$lcssa228 = 0, $$lcssa230 = 0, $$lcssa232 = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i22$i = 0, $$pre$i25 = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i23$iZ2D = 0;
 var $$pre$phi$i26Z2D = 0, $$pre$phi$iZ2D = 0, $$pre$phi58$i$iZ2D = 0, $$pre$phiZ2D = 0, $$pre105 = 0, $$pre106 = 0, $$pre14$i$i = 0, $$pre43$i = 0, $$pre56$i$i = 0, $$pre57$i$i = 0, $$pre8$i = 0, $$rsize$0$i = 0, $$rsize$3$i = 0, $$sum = 0, $$sum$i$i = 0, $$sum$i$i$i = 0, $$sum$i13$i = 0, $$sum$i14$i = 0, $$sum$i17$i = 0, $$sum$i19$i = 0;
 var $$sum$i2334 = 0, $$sum$i32 = 0, $$sum$i35 = 0, $$sum1 = 0, $$sum1$i = 0, $$sum1$i$i = 0, $$sum1$i15$i = 0, $$sum1$i20$i = 0, $$sum1$i24 = 0, $$sum10 = 0, $$sum10$i = 0, $$sum10$i$i = 0, $$sum11$i = 0, $$sum11$i$i = 0, $$sum1112 = 0, $$sum112$i = 0, $$sum113$i = 0, $$sum114$i = 0, $$sum115$i = 0, $$sum116$i = 0;
 var $$sum117$i = 0, $$sum118$i = 0, $$sum119$i = 0, $$sum12$i = 0, $$sum12$i$i = 0, $$sum120$i = 0, $$sum121$i = 0, $$sum122$i = 0, $$sum123$i = 0, $$sum124$i = 0, $$sum125$i = 0, $$sum13$i = 0, $$sum13$i$i = 0, $$sum14$i$i = 0, $$sum15$i = 0, $$sum15$i$i = 0, $$sum16$i = 0, $$sum16$i$i = 0, $$sum17$i = 0, $$sum17$i$i = 0;
 var $$sum18$i = 0, $$sum1819$i$i = 0, $$sum2 = 0, $$sum2$i = 0, $$sum2$i$i = 0, $$sum2$i$i$i = 0, $$sum2$i16$i = 0, $$sum2$i18$i = 0, $$sum2$i21$i = 0, $$sum20$i$i = 0, $$sum21$i$i = 0, $$sum22$i$i = 0, $$sum23$i$i = 0, $$sum24$i$i = 0, $$sum25$i$i = 0, $$sum27$i$i = 0, $$sum28$i$i = 0, $$sum29$i$i = 0, $$sum3$i = 0, $$sum3$i27 = 0;
 var $$sum30$i$i = 0, $$sum3132$i$i = 0, $$sum34$i$i = 0, $$sum3536$i$i = 0, $$sum3738$i$i = 0, $$sum39$i$i = 0, $$sum4 = 0, $$sum4$i = 0, $$sum4$i$i = 0, $$sum4$i28 = 0, $$sum40$i$i = 0, $$sum41$i$i = 0, $$sum42$i$i = 0, $$sum5$i = 0, $$sum5$i$i = 0, $$sum56 = 0, $$sum6$i = 0, $$sum67$i$i = 0, $$sum7$i = 0, $$sum8$i = 0;
 var $$sum9 = 0, $$sum9$i = 0, $$sum9$i$i = 0, $$tsize$1$i = 0, $$v$0$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0;
 var $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0;
 var $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0;
 var $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0;
 var $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;
 var $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0;
 var $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0;
 var $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0;
 var $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0;
 var $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0;
 var $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0;
 var $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0;
 var $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0;
 var $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0;
 var $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0;
 var $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0;
 var $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0;
 var $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0;
 var $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0;
 var $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0;
 var $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0;
 var $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0;
 var $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0;
 var $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0;
 var $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0;
 var $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0;
 var $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0;
 var $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0;
 var $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0;
 var $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0;
 var $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0;
 var $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0;
 var $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0;
 var $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0;
 var $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0;
 var $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0;
 var $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0;
 var $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0;
 var $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0;
 var $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0;
 var $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0;
 var $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0;
 var $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0;
 var $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0;
 var $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0;
 var $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0;
 var $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0;
 var $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0;
 var $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0;
 var $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0;
 var $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0;
 var $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0;
 var $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0;
 var $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $F$0$i$i = 0, $F1$0$i = 0, $F4$0 = 0, $F4$0$i$i = 0;
 var $F5$0$i = 0, $I1$0$i$i = 0, $I7$0$i = 0, $I7$0$i$i = 0, $K12$029$i = 0, $K2$07$i$i = 0, $K8$051$i$i = 0, $R$0$i = 0, $R$0$i$i = 0, $R$0$i$i$lcssa = 0, $R$0$i$lcssa = 0, $R$0$i18 = 0, $R$0$i18$lcssa = 0, $R$1$i = 0, $R$1$i$i = 0, $R$1$i20 = 0, $RP$0$i = 0, $RP$0$i$i = 0, $RP$0$i$i$lcssa = 0, $RP$0$i$lcssa = 0;
 var $RP$0$i17 = 0, $RP$0$i17$lcssa = 0, $T$0$lcssa$i = 0, $T$0$lcssa$i$i = 0, $T$0$lcssa$i25$i = 0, $T$028$i = 0, $T$028$i$lcssa = 0, $T$050$i$i = 0, $T$050$i$i$lcssa = 0, $T$06$i$i = 0, $T$06$i$i$lcssa = 0, $br$0$ph$i = 0, $cond$i = 0, $cond$i$i = 0, $cond$i21 = 0, $exitcond$i$i = 0, $i$02$i$i = 0, $idx$0$i = 0, $mem$0 = 0, $nb$0 = 0;
 var $not$$i = 0, $not$$i$i = 0, $not$$i26$i = 0, $oldfirst$0$i$i = 0, $or$cond$i = 0, $or$cond$i30 = 0, $or$cond1$i = 0, $or$cond19$i = 0, $or$cond2$i = 0, $or$cond3$i = 0, $or$cond5$i = 0, $or$cond57$i = 0, $or$cond6$i = 0, $or$cond8$i = 0, $or$cond9$i = 0, $qsize$0$i$i = 0, $rsize$0$i = 0, $rsize$0$i$lcssa = 0, $rsize$0$i15 = 0, $rsize$1$i = 0;
 var $rsize$2$i = 0, $rsize$3$lcssa$i = 0, $rsize$331$i = 0, $rst$0$i = 0, $rst$1$i = 0, $sizebits$0$i = 0, $sp$0$i$i = 0, $sp$0$i$i$i = 0, $sp$084$i = 0, $sp$084$i$lcssa = 0, $sp$183$i = 0, $sp$183$i$lcssa = 0, $ssize$0$$i = 0, $ssize$0$i = 0, $ssize$1$ph$i = 0, $ssize$2$i = 0, $t$0$i = 0, $t$0$i14 = 0, $t$1$i = 0, $t$2$ph$i = 0;
 var $t$2$v$3$i = 0, $t$230$i = 0, $tbase$255$i = 0, $tsize$0$ph$i = 0, $tsize$0323944$i = 0, $tsize$1$i = 0, $tsize$254$i = 0, $v$0$i = 0, $v$0$i$lcssa = 0, $v$0$i16 = 0, $v$1$i = 0, $v$2$i = 0, $v$3$lcssa$i = 0, $v$3$ph$i = 0, $v$332$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($bytes>>>0)<(245);
 do {
  if ($0) {
   $1 = ($bytes>>>0)<(11);
   $2 = (($bytes) + 11)|0;
   $3 = $2 & -8;
   $4 = $1 ? 16 : $3;
   $5 = $4 >>> 3;
   $6 = HEAP32[3008>>2]|0;
   $7 = $6 >>> $5;
   $8 = $7 & 3;
   $9 = ($8|0)==(0);
   if (!($9)) {
    $10 = $7 & 1;
    $11 = $10 ^ 1;
    $12 = (($11) + ($5))|0;
    $13 = $12 << 1;
    $14 = (3048 + ($13<<2)|0);
    $$sum10 = (($13) + 2)|0;
    $15 = (3048 + ($$sum10<<2)|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = ((($16)) + 8|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ($14|0)==($18|0);
    do {
     if ($19) {
      $20 = 1 << $12;
      $21 = $20 ^ -1;
      $22 = $6 & $21;
      HEAP32[3008>>2] = $22;
     } else {
      $23 = HEAP32[(3024)>>2]|0;
      $24 = ($18>>>0)<($23>>>0);
      if ($24) {
       _abort();
       // unreachable;
      }
      $25 = ((($18)) + 12|0);
      $26 = HEAP32[$25>>2]|0;
      $27 = ($26|0)==($16|0);
      if ($27) {
       HEAP32[$25>>2] = $14;
       HEAP32[$15>>2] = $18;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $28 = $12 << 3;
    $29 = $28 | 3;
    $30 = ((($16)) + 4|0);
    HEAP32[$30>>2] = $29;
    $$sum1112 = $28 | 4;
    $31 = (($16) + ($$sum1112)|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = $32 | 1;
    HEAP32[$31>>2] = $33;
    $mem$0 = $17;
    return ($mem$0|0);
   }
   $34 = HEAP32[(3016)>>2]|0;
   $35 = ($4>>>0)>($34>>>0);
   if ($35) {
    $36 = ($7|0)==(0);
    if (!($36)) {
     $37 = $7 << $5;
     $38 = 2 << $5;
     $39 = (0 - ($38))|0;
     $40 = $38 | $39;
     $41 = $37 & $40;
     $42 = (0 - ($41))|0;
     $43 = $41 & $42;
     $44 = (($43) + -1)|0;
     $45 = $44 >>> 12;
     $46 = $45 & 16;
     $47 = $44 >>> $46;
     $48 = $47 >>> 5;
     $49 = $48 & 8;
     $50 = $49 | $46;
     $51 = $47 >>> $49;
     $52 = $51 >>> 2;
     $53 = $52 & 4;
     $54 = $50 | $53;
     $55 = $51 >>> $53;
     $56 = $55 >>> 1;
     $57 = $56 & 2;
     $58 = $54 | $57;
     $59 = $55 >>> $57;
     $60 = $59 >>> 1;
     $61 = $60 & 1;
     $62 = $58 | $61;
     $63 = $59 >>> $61;
     $64 = (($62) + ($63))|0;
     $65 = $64 << 1;
     $66 = (3048 + ($65<<2)|0);
     $$sum4 = (($65) + 2)|0;
     $67 = (3048 + ($$sum4<<2)|0);
     $68 = HEAP32[$67>>2]|0;
     $69 = ((($68)) + 8|0);
     $70 = HEAP32[$69>>2]|0;
     $71 = ($66|0)==($70|0);
     do {
      if ($71) {
       $72 = 1 << $64;
       $73 = $72 ^ -1;
       $74 = $6 & $73;
       HEAP32[3008>>2] = $74;
       $88 = $34;
      } else {
       $75 = HEAP32[(3024)>>2]|0;
       $76 = ($70>>>0)<($75>>>0);
       if ($76) {
        _abort();
        // unreachable;
       }
       $77 = ((($70)) + 12|0);
       $78 = HEAP32[$77>>2]|0;
       $79 = ($78|0)==($68|0);
       if ($79) {
        HEAP32[$77>>2] = $66;
        HEAP32[$67>>2] = $70;
        $$pre = HEAP32[(3016)>>2]|0;
        $88 = $$pre;
        break;
       } else {
        _abort();
        // unreachable;
       }
      }
     } while(0);
     $80 = $64 << 3;
     $81 = (($80) - ($4))|0;
     $82 = $4 | 3;
     $83 = ((($68)) + 4|0);
     HEAP32[$83>>2] = $82;
     $84 = (($68) + ($4)|0);
     $85 = $81 | 1;
     $$sum56 = $4 | 4;
     $86 = (($68) + ($$sum56)|0);
     HEAP32[$86>>2] = $85;
     $87 = (($68) + ($80)|0);
     HEAP32[$87>>2] = $81;
     $89 = ($88|0)==(0);
     if (!($89)) {
      $90 = HEAP32[(3028)>>2]|0;
      $91 = $88 >>> 3;
      $92 = $91 << 1;
      $93 = (3048 + ($92<<2)|0);
      $94 = HEAP32[3008>>2]|0;
      $95 = 1 << $91;
      $96 = $94 & $95;
      $97 = ($96|0)==(0);
      if ($97) {
       $98 = $94 | $95;
       HEAP32[3008>>2] = $98;
       $$pre105 = (($92) + 2)|0;
       $$pre106 = (3048 + ($$pre105<<2)|0);
       $$pre$phiZ2D = $$pre106;$F4$0 = $93;
      } else {
       $$sum9 = (($92) + 2)|0;
       $99 = (3048 + ($$sum9<<2)|0);
       $100 = HEAP32[$99>>2]|0;
       $101 = HEAP32[(3024)>>2]|0;
       $102 = ($100>>>0)<($101>>>0);
       if ($102) {
        _abort();
        // unreachable;
       } else {
        $$pre$phiZ2D = $99;$F4$0 = $100;
       }
      }
      HEAP32[$$pre$phiZ2D>>2] = $90;
      $103 = ((($F4$0)) + 12|0);
      HEAP32[$103>>2] = $90;
      $104 = ((($90)) + 8|0);
      HEAP32[$104>>2] = $F4$0;
      $105 = ((($90)) + 12|0);
      HEAP32[$105>>2] = $93;
     }
     HEAP32[(3016)>>2] = $81;
     HEAP32[(3028)>>2] = $84;
     $mem$0 = $69;
     return ($mem$0|0);
    }
    $106 = HEAP32[(3012)>>2]|0;
    $107 = ($106|0)==(0);
    if ($107) {
     $nb$0 = $4;
    } else {
     $108 = (0 - ($106))|0;
     $109 = $106 & $108;
     $110 = (($109) + -1)|0;
     $111 = $110 >>> 12;
     $112 = $111 & 16;
     $113 = $110 >>> $112;
     $114 = $113 >>> 5;
     $115 = $114 & 8;
     $116 = $115 | $112;
     $117 = $113 >>> $115;
     $118 = $117 >>> 2;
     $119 = $118 & 4;
     $120 = $116 | $119;
     $121 = $117 >>> $119;
     $122 = $121 >>> 1;
     $123 = $122 & 2;
     $124 = $120 | $123;
     $125 = $121 >>> $123;
     $126 = $125 >>> 1;
     $127 = $126 & 1;
     $128 = $124 | $127;
     $129 = $125 >>> $127;
     $130 = (($128) + ($129))|0;
     $131 = (3312 + ($130<<2)|0);
     $132 = HEAP32[$131>>2]|0;
     $133 = ((($132)) + 4|0);
     $134 = HEAP32[$133>>2]|0;
     $135 = $134 & -8;
     $136 = (($135) - ($4))|0;
     $rsize$0$i = $136;$t$0$i = $132;$v$0$i = $132;
     while(1) {
      $137 = ((($t$0$i)) + 16|0);
      $138 = HEAP32[$137>>2]|0;
      $139 = ($138|0)==(0|0);
      if ($139) {
       $140 = ((($t$0$i)) + 20|0);
       $141 = HEAP32[$140>>2]|0;
       $142 = ($141|0)==(0|0);
       if ($142) {
        $rsize$0$i$lcssa = $rsize$0$i;$v$0$i$lcssa = $v$0$i;
        break;
       } else {
        $144 = $141;
       }
      } else {
       $144 = $138;
      }
      $143 = ((($144)) + 4|0);
      $145 = HEAP32[$143>>2]|0;
      $146 = $145 & -8;
      $147 = (($146) - ($4))|0;
      $148 = ($147>>>0)<($rsize$0$i>>>0);
      $$rsize$0$i = $148 ? $147 : $rsize$0$i;
      $$v$0$i = $148 ? $144 : $v$0$i;
      $rsize$0$i = $$rsize$0$i;$t$0$i = $144;$v$0$i = $$v$0$i;
     }
     $149 = HEAP32[(3024)>>2]|0;
     $150 = ($v$0$i$lcssa>>>0)<($149>>>0);
     if ($150) {
      _abort();
      // unreachable;
     }
     $151 = (($v$0$i$lcssa) + ($4)|0);
     $152 = ($v$0$i$lcssa>>>0)<($151>>>0);
     if (!($152)) {
      _abort();
      // unreachable;
     }
     $153 = ((($v$0$i$lcssa)) + 24|0);
     $154 = HEAP32[$153>>2]|0;
     $155 = ((($v$0$i$lcssa)) + 12|0);
     $156 = HEAP32[$155>>2]|0;
     $157 = ($156|0)==($v$0$i$lcssa|0);
     do {
      if ($157) {
       $167 = ((($v$0$i$lcssa)) + 20|0);
       $168 = HEAP32[$167>>2]|0;
       $169 = ($168|0)==(0|0);
       if ($169) {
        $170 = ((($v$0$i$lcssa)) + 16|0);
        $171 = HEAP32[$170>>2]|0;
        $172 = ($171|0)==(0|0);
        if ($172) {
         $R$1$i = 0;
         break;
        } else {
         $R$0$i = $171;$RP$0$i = $170;
        }
       } else {
        $R$0$i = $168;$RP$0$i = $167;
       }
       while(1) {
        $173 = ((($R$0$i)) + 20|0);
        $174 = HEAP32[$173>>2]|0;
        $175 = ($174|0)==(0|0);
        if (!($175)) {
         $R$0$i = $174;$RP$0$i = $173;
         continue;
        }
        $176 = ((($R$0$i)) + 16|0);
        $177 = HEAP32[$176>>2]|0;
        $178 = ($177|0)==(0|0);
        if ($178) {
         $R$0$i$lcssa = $R$0$i;$RP$0$i$lcssa = $RP$0$i;
         break;
        } else {
         $R$0$i = $177;$RP$0$i = $176;
        }
       }
       $179 = ($RP$0$i$lcssa>>>0)<($149>>>0);
       if ($179) {
        _abort();
        // unreachable;
       } else {
        HEAP32[$RP$0$i$lcssa>>2] = 0;
        $R$1$i = $R$0$i$lcssa;
        break;
       }
      } else {
       $158 = ((($v$0$i$lcssa)) + 8|0);
       $159 = HEAP32[$158>>2]|0;
       $160 = ($159>>>0)<($149>>>0);
       if ($160) {
        _abort();
        // unreachable;
       }
       $161 = ((($159)) + 12|0);
       $162 = HEAP32[$161>>2]|0;
       $163 = ($162|0)==($v$0$i$lcssa|0);
       if (!($163)) {
        _abort();
        // unreachable;
       }
       $164 = ((($156)) + 8|0);
       $165 = HEAP32[$164>>2]|0;
       $166 = ($165|0)==($v$0$i$lcssa|0);
       if ($166) {
        HEAP32[$161>>2] = $156;
        HEAP32[$164>>2] = $159;
        $R$1$i = $156;
        break;
       } else {
        _abort();
        // unreachable;
       }
      }
     } while(0);
     $180 = ($154|0)==(0|0);
     do {
      if (!($180)) {
       $181 = ((($v$0$i$lcssa)) + 28|0);
       $182 = HEAP32[$181>>2]|0;
       $183 = (3312 + ($182<<2)|0);
       $184 = HEAP32[$183>>2]|0;
       $185 = ($v$0$i$lcssa|0)==($184|0);
       if ($185) {
        HEAP32[$183>>2] = $R$1$i;
        $cond$i = ($R$1$i|0)==(0|0);
        if ($cond$i) {
         $186 = 1 << $182;
         $187 = $186 ^ -1;
         $188 = HEAP32[(3012)>>2]|0;
         $189 = $188 & $187;
         HEAP32[(3012)>>2] = $189;
         break;
        }
       } else {
        $190 = HEAP32[(3024)>>2]|0;
        $191 = ($154>>>0)<($190>>>0);
        if ($191) {
         _abort();
         // unreachable;
        }
        $192 = ((($154)) + 16|0);
        $193 = HEAP32[$192>>2]|0;
        $194 = ($193|0)==($v$0$i$lcssa|0);
        if ($194) {
         HEAP32[$192>>2] = $R$1$i;
        } else {
         $195 = ((($154)) + 20|0);
         HEAP32[$195>>2] = $R$1$i;
        }
        $196 = ($R$1$i|0)==(0|0);
        if ($196) {
         break;
        }
       }
       $197 = HEAP32[(3024)>>2]|0;
       $198 = ($R$1$i>>>0)<($197>>>0);
       if ($198) {
        _abort();
        // unreachable;
       }
       $199 = ((($R$1$i)) + 24|0);
       HEAP32[$199>>2] = $154;
       $200 = ((($v$0$i$lcssa)) + 16|0);
       $201 = HEAP32[$200>>2]|0;
       $202 = ($201|0)==(0|0);
       do {
        if (!($202)) {
         $203 = ($201>>>0)<($197>>>0);
         if ($203) {
          _abort();
          // unreachable;
         } else {
          $204 = ((($R$1$i)) + 16|0);
          HEAP32[$204>>2] = $201;
          $205 = ((($201)) + 24|0);
          HEAP32[$205>>2] = $R$1$i;
          break;
         }
        }
       } while(0);
       $206 = ((($v$0$i$lcssa)) + 20|0);
       $207 = HEAP32[$206>>2]|0;
       $208 = ($207|0)==(0|0);
       if (!($208)) {
        $209 = HEAP32[(3024)>>2]|0;
        $210 = ($207>>>0)<($209>>>0);
        if ($210) {
         _abort();
         // unreachable;
        } else {
         $211 = ((($R$1$i)) + 20|0);
         HEAP32[$211>>2] = $207;
         $212 = ((($207)) + 24|0);
         HEAP32[$212>>2] = $R$1$i;
         break;
        }
       }
      }
     } while(0);
     $213 = ($rsize$0$i$lcssa>>>0)<(16);
     if ($213) {
      $214 = (($rsize$0$i$lcssa) + ($4))|0;
      $215 = $214 | 3;
      $216 = ((($v$0$i$lcssa)) + 4|0);
      HEAP32[$216>>2] = $215;
      $$sum4$i = (($214) + 4)|0;
      $217 = (($v$0$i$lcssa) + ($$sum4$i)|0);
      $218 = HEAP32[$217>>2]|0;
      $219 = $218 | 1;
      HEAP32[$217>>2] = $219;
     } else {
      $220 = $4 | 3;
      $221 = ((($v$0$i$lcssa)) + 4|0);
      HEAP32[$221>>2] = $220;
      $222 = $rsize$0$i$lcssa | 1;
      $$sum$i35 = $4 | 4;
      $223 = (($v$0$i$lcssa) + ($$sum$i35)|0);
      HEAP32[$223>>2] = $222;
      $$sum1$i = (($rsize$0$i$lcssa) + ($4))|0;
      $224 = (($v$0$i$lcssa) + ($$sum1$i)|0);
      HEAP32[$224>>2] = $rsize$0$i$lcssa;
      $225 = HEAP32[(3016)>>2]|0;
      $226 = ($225|0)==(0);
      if (!($226)) {
       $227 = HEAP32[(3028)>>2]|0;
       $228 = $225 >>> 3;
       $229 = $228 << 1;
       $230 = (3048 + ($229<<2)|0);
       $231 = HEAP32[3008>>2]|0;
       $232 = 1 << $228;
       $233 = $231 & $232;
       $234 = ($233|0)==(0);
       if ($234) {
        $235 = $231 | $232;
        HEAP32[3008>>2] = $235;
        $$pre$i = (($229) + 2)|0;
        $$pre8$i = (3048 + ($$pre$i<<2)|0);
        $$pre$phi$iZ2D = $$pre8$i;$F1$0$i = $230;
       } else {
        $$sum3$i = (($229) + 2)|0;
        $236 = (3048 + ($$sum3$i<<2)|0);
        $237 = HEAP32[$236>>2]|0;
        $238 = HEAP32[(3024)>>2]|0;
        $239 = ($237>>>0)<($238>>>0);
        if ($239) {
         _abort();
         // unreachable;
        } else {
         $$pre$phi$iZ2D = $236;$F1$0$i = $237;
        }
       }
       HEAP32[$$pre$phi$iZ2D>>2] = $227;
       $240 = ((($F1$0$i)) + 12|0);
       HEAP32[$240>>2] = $227;
       $241 = ((($227)) + 8|0);
       HEAP32[$241>>2] = $F1$0$i;
       $242 = ((($227)) + 12|0);
       HEAP32[$242>>2] = $230;
      }
      HEAP32[(3016)>>2] = $rsize$0$i$lcssa;
      HEAP32[(3028)>>2] = $151;
     }
     $243 = ((($v$0$i$lcssa)) + 8|0);
     $mem$0 = $243;
     return ($mem$0|0);
    }
   } else {
    $nb$0 = $4;
   }
  } else {
   $244 = ($bytes>>>0)>(4294967231);
   if ($244) {
    $nb$0 = -1;
   } else {
    $245 = (($bytes) + 11)|0;
    $246 = $245 & -8;
    $247 = HEAP32[(3012)>>2]|0;
    $248 = ($247|0)==(0);
    if ($248) {
     $nb$0 = $246;
    } else {
     $249 = (0 - ($246))|0;
     $250 = $245 >>> 8;
     $251 = ($250|0)==(0);
     if ($251) {
      $idx$0$i = 0;
     } else {
      $252 = ($246>>>0)>(16777215);
      if ($252) {
       $idx$0$i = 31;
      } else {
       $253 = (($250) + 1048320)|0;
       $254 = $253 >>> 16;
       $255 = $254 & 8;
       $256 = $250 << $255;
       $257 = (($256) + 520192)|0;
       $258 = $257 >>> 16;
       $259 = $258 & 4;
       $260 = $259 | $255;
       $261 = $256 << $259;
       $262 = (($261) + 245760)|0;
       $263 = $262 >>> 16;
       $264 = $263 & 2;
       $265 = $260 | $264;
       $266 = (14 - ($265))|0;
       $267 = $261 << $264;
       $268 = $267 >>> 15;
       $269 = (($266) + ($268))|0;
       $270 = $269 << 1;
       $271 = (($269) + 7)|0;
       $272 = $246 >>> $271;
       $273 = $272 & 1;
       $274 = $273 | $270;
       $idx$0$i = $274;
      }
     }
     $275 = (3312 + ($idx$0$i<<2)|0);
     $276 = HEAP32[$275>>2]|0;
     $277 = ($276|0)==(0|0);
     L123: do {
      if ($277) {
       $rsize$2$i = $249;$t$1$i = 0;$v$2$i = 0;
       label = 86;
      } else {
       $278 = ($idx$0$i|0)==(31);
       $279 = $idx$0$i >>> 1;
       $280 = (25 - ($279))|0;
       $281 = $278 ? 0 : $280;
       $282 = $246 << $281;
       $rsize$0$i15 = $249;$rst$0$i = 0;$sizebits$0$i = $282;$t$0$i14 = $276;$v$0$i16 = 0;
       while(1) {
        $283 = ((($t$0$i14)) + 4|0);
        $284 = HEAP32[$283>>2]|0;
        $285 = $284 & -8;
        $286 = (($285) - ($246))|0;
        $287 = ($286>>>0)<($rsize$0$i15>>>0);
        if ($287) {
         $288 = ($285|0)==($246|0);
         if ($288) {
          $rsize$331$i = $286;$t$230$i = $t$0$i14;$v$332$i = $t$0$i14;
          label = 90;
          break L123;
         } else {
          $rsize$1$i = $286;$v$1$i = $t$0$i14;
         }
        } else {
         $rsize$1$i = $rsize$0$i15;$v$1$i = $v$0$i16;
        }
        $289 = ((($t$0$i14)) + 20|0);
        $290 = HEAP32[$289>>2]|0;
        $291 = $sizebits$0$i >>> 31;
        $292 = (((($t$0$i14)) + 16|0) + ($291<<2)|0);
        $293 = HEAP32[$292>>2]|0;
        $294 = ($290|0)==(0|0);
        $295 = ($290|0)==($293|0);
        $or$cond19$i = $294 | $295;
        $rst$1$i = $or$cond19$i ? $rst$0$i : $290;
        $296 = ($293|0)==(0|0);
        $297 = $sizebits$0$i << 1;
        if ($296) {
         $rsize$2$i = $rsize$1$i;$t$1$i = $rst$1$i;$v$2$i = $v$1$i;
         label = 86;
         break;
        } else {
         $rsize$0$i15 = $rsize$1$i;$rst$0$i = $rst$1$i;$sizebits$0$i = $297;$t$0$i14 = $293;$v$0$i16 = $v$1$i;
        }
       }
      }
     } while(0);
     if ((label|0) == 86) {
      $298 = ($t$1$i|0)==(0|0);
      $299 = ($v$2$i|0)==(0|0);
      $or$cond$i = $298 & $299;
      if ($or$cond$i) {
       $300 = 2 << $idx$0$i;
       $301 = (0 - ($300))|0;
       $302 = $300 | $301;
       $303 = $247 & $302;
       $304 = ($303|0)==(0);
       if ($304) {
        $nb$0 = $246;
        break;
       }
       $305 = (0 - ($303))|0;
       $306 = $303 & $305;
       $307 = (($306) + -1)|0;
       $308 = $307 >>> 12;
       $309 = $308 & 16;
       $310 = $307 >>> $309;
       $311 = $310 >>> 5;
       $312 = $311 & 8;
       $313 = $312 | $309;
       $314 = $310 >>> $312;
       $315 = $314 >>> 2;
       $316 = $315 & 4;
       $317 = $313 | $316;
       $318 = $314 >>> $316;
       $319 = $318 >>> 1;
       $320 = $319 & 2;
       $321 = $317 | $320;
       $322 = $318 >>> $320;
       $323 = $322 >>> 1;
       $324 = $323 & 1;
       $325 = $321 | $324;
       $326 = $322 >>> $324;
       $327 = (($325) + ($326))|0;
       $328 = (3312 + ($327<<2)|0);
       $329 = HEAP32[$328>>2]|0;
       $t$2$ph$i = $329;$v$3$ph$i = 0;
      } else {
       $t$2$ph$i = $t$1$i;$v$3$ph$i = $v$2$i;
      }
      $330 = ($t$2$ph$i|0)==(0|0);
      if ($330) {
       $rsize$3$lcssa$i = $rsize$2$i;$v$3$lcssa$i = $v$3$ph$i;
      } else {
       $rsize$331$i = $rsize$2$i;$t$230$i = $t$2$ph$i;$v$332$i = $v$3$ph$i;
       label = 90;
      }
     }
     if ((label|0) == 90) {
      while(1) {
       label = 0;
       $331 = ((($t$230$i)) + 4|0);
       $332 = HEAP32[$331>>2]|0;
       $333 = $332 & -8;
       $334 = (($333) - ($246))|0;
       $335 = ($334>>>0)<($rsize$331$i>>>0);
       $$rsize$3$i = $335 ? $334 : $rsize$331$i;
       $t$2$v$3$i = $335 ? $t$230$i : $v$332$i;
       $336 = ((($t$230$i)) + 16|0);
       $337 = HEAP32[$336>>2]|0;
       $338 = ($337|0)==(0|0);
       if (!($338)) {
        $rsize$331$i = $$rsize$3$i;$t$230$i = $337;$v$332$i = $t$2$v$3$i;
        label = 90;
        continue;
       }
       $339 = ((($t$230$i)) + 20|0);
       $340 = HEAP32[$339>>2]|0;
       $341 = ($340|0)==(0|0);
       if ($341) {
        $rsize$3$lcssa$i = $$rsize$3$i;$v$3$lcssa$i = $t$2$v$3$i;
        break;
       } else {
        $rsize$331$i = $$rsize$3$i;$t$230$i = $340;$v$332$i = $t$2$v$3$i;
        label = 90;
       }
      }
     }
     $342 = ($v$3$lcssa$i|0)==(0|0);
     if ($342) {
      $nb$0 = $246;
     } else {
      $343 = HEAP32[(3016)>>2]|0;
      $344 = (($343) - ($246))|0;
      $345 = ($rsize$3$lcssa$i>>>0)<($344>>>0);
      if ($345) {
       $346 = HEAP32[(3024)>>2]|0;
       $347 = ($v$3$lcssa$i>>>0)<($346>>>0);
       if ($347) {
        _abort();
        // unreachable;
       }
       $348 = (($v$3$lcssa$i) + ($246)|0);
       $349 = ($v$3$lcssa$i>>>0)<($348>>>0);
       if (!($349)) {
        _abort();
        // unreachable;
       }
       $350 = ((($v$3$lcssa$i)) + 24|0);
       $351 = HEAP32[$350>>2]|0;
       $352 = ((($v$3$lcssa$i)) + 12|0);
       $353 = HEAP32[$352>>2]|0;
       $354 = ($353|0)==($v$3$lcssa$i|0);
       do {
        if ($354) {
         $364 = ((($v$3$lcssa$i)) + 20|0);
         $365 = HEAP32[$364>>2]|0;
         $366 = ($365|0)==(0|0);
         if ($366) {
          $367 = ((($v$3$lcssa$i)) + 16|0);
          $368 = HEAP32[$367>>2]|0;
          $369 = ($368|0)==(0|0);
          if ($369) {
           $R$1$i20 = 0;
           break;
          } else {
           $R$0$i18 = $368;$RP$0$i17 = $367;
          }
         } else {
          $R$0$i18 = $365;$RP$0$i17 = $364;
         }
         while(1) {
          $370 = ((($R$0$i18)) + 20|0);
          $371 = HEAP32[$370>>2]|0;
          $372 = ($371|0)==(0|0);
          if (!($372)) {
           $R$0$i18 = $371;$RP$0$i17 = $370;
           continue;
          }
          $373 = ((($R$0$i18)) + 16|0);
          $374 = HEAP32[$373>>2]|0;
          $375 = ($374|0)==(0|0);
          if ($375) {
           $R$0$i18$lcssa = $R$0$i18;$RP$0$i17$lcssa = $RP$0$i17;
           break;
          } else {
           $R$0$i18 = $374;$RP$0$i17 = $373;
          }
         }
         $376 = ($RP$0$i17$lcssa>>>0)<($346>>>0);
         if ($376) {
          _abort();
          // unreachable;
         } else {
          HEAP32[$RP$0$i17$lcssa>>2] = 0;
          $R$1$i20 = $R$0$i18$lcssa;
          break;
         }
        } else {
         $355 = ((($v$3$lcssa$i)) + 8|0);
         $356 = HEAP32[$355>>2]|0;
         $357 = ($356>>>0)<($346>>>0);
         if ($357) {
          _abort();
          // unreachable;
         }
         $358 = ((($356)) + 12|0);
         $359 = HEAP32[$358>>2]|0;
         $360 = ($359|0)==($v$3$lcssa$i|0);
         if (!($360)) {
          _abort();
          // unreachable;
         }
         $361 = ((($353)) + 8|0);
         $362 = HEAP32[$361>>2]|0;
         $363 = ($362|0)==($v$3$lcssa$i|0);
         if ($363) {
          HEAP32[$358>>2] = $353;
          HEAP32[$361>>2] = $356;
          $R$1$i20 = $353;
          break;
         } else {
          _abort();
          // unreachable;
         }
        }
       } while(0);
       $377 = ($351|0)==(0|0);
       do {
        if (!($377)) {
         $378 = ((($v$3$lcssa$i)) + 28|0);
         $379 = HEAP32[$378>>2]|0;
         $380 = (3312 + ($379<<2)|0);
         $381 = HEAP32[$380>>2]|0;
         $382 = ($v$3$lcssa$i|0)==($381|0);
         if ($382) {
          HEAP32[$380>>2] = $R$1$i20;
          $cond$i21 = ($R$1$i20|0)==(0|0);
          if ($cond$i21) {
           $383 = 1 << $379;
           $384 = $383 ^ -1;
           $385 = HEAP32[(3012)>>2]|0;
           $386 = $385 & $384;
           HEAP32[(3012)>>2] = $386;
           break;
          }
         } else {
          $387 = HEAP32[(3024)>>2]|0;
          $388 = ($351>>>0)<($387>>>0);
          if ($388) {
           _abort();
           // unreachable;
          }
          $389 = ((($351)) + 16|0);
          $390 = HEAP32[$389>>2]|0;
          $391 = ($390|0)==($v$3$lcssa$i|0);
          if ($391) {
           HEAP32[$389>>2] = $R$1$i20;
          } else {
           $392 = ((($351)) + 20|0);
           HEAP32[$392>>2] = $R$1$i20;
          }
          $393 = ($R$1$i20|0)==(0|0);
          if ($393) {
           break;
          }
         }
         $394 = HEAP32[(3024)>>2]|0;
         $395 = ($R$1$i20>>>0)<($394>>>0);
         if ($395) {
          _abort();
          // unreachable;
         }
         $396 = ((($R$1$i20)) + 24|0);
         HEAP32[$396>>2] = $351;
         $397 = ((($v$3$lcssa$i)) + 16|0);
         $398 = HEAP32[$397>>2]|0;
         $399 = ($398|0)==(0|0);
         do {
          if (!($399)) {
           $400 = ($398>>>0)<($394>>>0);
           if ($400) {
            _abort();
            // unreachable;
           } else {
            $401 = ((($R$1$i20)) + 16|0);
            HEAP32[$401>>2] = $398;
            $402 = ((($398)) + 24|0);
            HEAP32[$402>>2] = $R$1$i20;
            break;
           }
          }
         } while(0);
         $403 = ((($v$3$lcssa$i)) + 20|0);
         $404 = HEAP32[$403>>2]|0;
         $405 = ($404|0)==(0|0);
         if (!($405)) {
          $406 = HEAP32[(3024)>>2]|0;
          $407 = ($404>>>0)<($406>>>0);
          if ($407) {
           _abort();
           // unreachable;
          } else {
           $408 = ((($R$1$i20)) + 20|0);
           HEAP32[$408>>2] = $404;
           $409 = ((($404)) + 24|0);
           HEAP32[$409>>2] = $R$1$i20;
           break;
          }
         }
        }
       } while(0);
       $410 = ($rsize$3$lcssa$i>>>0)<(16);
       L199: do {
        if ($410) {
         $411 = (($rsize$3$lcssa$i) + ($246))|0;
         $412 = $411 | 3;
         $413 = ((($v$3$lcssa$i)) + 4|0);
         HEAP32[$413>>2] = $412;
         $$sum18$i = (($411) + 4)|0;
         $414 = (($v$3$lcssa$i) + ($$sum18$i)|0);
         $415 = HEAP32[$414>>2]|0;
         $416 = $415 | 1;
         HEAP32[$414>>2] = $416;
        } else {
         $417 = $246 | 3;
         $418 = ((($v$3$lcssa$i)) + 4|0);
         HEAP32[$418>>2] = $417;
         $419 = $rsize$3$lcssa$i | 1;
         $$sum$i2334 = $246 | 4;
         $420 = (($v$3$lcssa$i) + ($$sum$i2334)|0);
         HEAP32[$420>>2] = $419;
         $$sum1$i24 = (($rsize$3$lcssa$i) + ($246))|0;
         $421 = (($v$3$lcssa$i) + ($$sum1$i24)|0);
         HEAP32[$421>>2] = $rsize$3$lcssa$i;
         $422 = $rsize$3$lcssa$i >>> 3;
         $423 = ($rsize$3$lcssa$i>>>0)<(256);
         if ($423) {
          $424 = $422 << 1;
          $425 = (3048 + ($424<<2)|0);
          $426 = HEAP32[3008>>2]|0;
          $427 = 1 << $422;
          $428 = $426 & $427;
          $429 = ($428|0)==(0);
          if ($429) {
           $430 = $426 | $427;
           HEAP32[3008>>2] = $430;
           $$pre$i25 = (($424) + 2)|0;
           $$pre43$i = (3048 + ($$pre$i25<<2)|0);
           $$pre$phi$i26Z2D = $$pre43$i;$F5$0$i = $425;
          } else {
           $$sum17$i = (($424) + 2)|0;
           $431 = (3048 + ($$sum17$i<<2)|0);
           $432 = HEAP32[$431>>2]|0;
           $433 = HEAP32[(3024)>>2]|0;
           $434 = ($432>>>0)<($433>>>0);
           if ($434) {
            _abort();
            // unreachable;
           } else {
            $$pre$phi$i26Z2D = $431;$F5$0$i = $432;
           }
          }
          HEAP32[$$pre$phi$i26Z2D>>2] = $348;
          $435 = ((($F5$0$i)) + 12|0);
          HEAP32[$435>>2] = $348;
          $$sum15$i = (($246) + 8)|0;
          $436 = (($v$3$lcssa$i) + ($$sum15$i)|0);
          HEAP32[$436>>2] = $F5$0$i;
          $$sum16$i = (($246) + 12)|0;
          $437 = (($v$3$lcssa$i) + ($$sum16$i)|0);
          HEAP32[$437>>2] = $425;
          break;
         }
         $438 = $rsize$3$lcssa$i >>> 8;
         $439 = ($438|0)==(0);
         if ($439) {
          $I7$0$i = 0;
         } else {
          $440 = ($rsize$3$lcssa$i>>>0)>(16777215);
          if ($440) {
           $I7$0$i = 31;
          } else {
           $441 = (($438) + 1048320)|0;
           $442 = $441 >>> 16;
           $443 = $442 & 8;
           $444 = $438 << $443;
           $445 = (($444) + 520192)|0;
           $446 = $445 >>> 16;
           $447 = $446 & 4;
           $448 = $447 | $443;
           $449 = $444 << $447;
           $450 = (($449) + 245760)|0;
           $451 = $450 >>> 16;
           $452 = $451 & 2;
           $453 = $448 | $452;
           $454 = (14 - ($453))|0;
           $455 = $449 << $452;
           $456 = $455 >>> 15;
           $457 = (($454) + ($456))|0;
           $458 = $457 << 1;
           $459 = (($457) + 7)|0;
           $460 = $rsize$3$lcssa$i >>> $459;
           $461 = $460 & 1;
           $462 = $461 | $458;
           $I7$0$i = $462;
          }
         }
         $463 = (3312 + ($I7$0$i<<2)|0);
         $$sum2$i = (($246) + 28)|0;
         $464 = (($v$3$lcssa$i) + ($$sum2$i)|0);
         HEAP32[$464>>2] = $I7$0$i;
         $$sum3$i27 = (($246) + 16)|0;
         $465 = (($v$3$lcssa$i) + ($$sum3$i27)|0);
         $$sum4$i28 = (($246) + 20)|0;
         $466 = (($v$3$lcssa$i) + ($$sum4$i28)|0);
         HEAP32[$466>>2] = 0;
         HEAP32[$465>>2] = 0;
         $467 = HEAP32[(3012)>>2]|0;
         $468 = 1 << $I7$0$i;
         $469 = $467 & $468;
         $470 = ($469|0)==(0);
         if ($470) {
          $471 = $467 | $468;
          HEAP32[(3012)>>2] = $471;
          HEAP32[$463>>2] = $348;
          $$sum5$i = (($246) + 24)|0;
          $472 = (($v$3$lcssa$i) + ($$sum5$i)|0);
          HEAP32[$472>>2] = $463;
          $$sum6$i = (($246) + 12)|0;
          $473 = (($v$3$lcssa$i) + ($$sum6$i)|0);
          HEAP32[$473>>2] = $348;
          $$sum7$i = (($246) + 8)|0;
          $474 = (($v$3$lcssa$i) + ($$sum7$i)|0);
          HEAP32[$474>>2] = $348;
          break;
         }
         $475 = HEAP32[$463>>2]|0;
         $476 = ((($475)) + 4|0);
         $477 = HEAP32[$476>>2]|0;
         $478 = $477 & -8;
         $479 = ($478|0)==($rsize$3$lcssa$i|0);
         L217: do {
          if ($479) {
           $T$0$lcssa$i = $475;
          } else {
           $480 = ($I7$0$i|0)==(31);
           $481 = $I7$0$i >>> 1;
           $482 = (25 - ($481))|0;
           $483 = $480 ? 0 : $482;
           $484 = $rsize$3$lcssa$i << $483;
           $K12$029$i = $484;$T$028$i = $475;
           while(1) {
            $491 = $K12$029$i >>> 31;
            $492 = (((($T$028$i)) + 16|0) + ($491<<2)|0);
            $487 = HEAP32[$492>>2]|0;
            $493 = ($487|0)==(0|0);
            if ($493) {
             $$lcssa232 = $492;$T$028$i$lcssa = $T$028$i;
             break;
            }
            $485 = $K12$029$i << 1;
            $486 = ((($487)) + 4|0);
            $488 = HEAP32[$486>>2]|0;
            $489 = $488 & -8;
            $490 = ($489|0)==($rsize$3$lcssa$i|0);
            if ($490) {
             $T$0$lcssa$i = $487;
             break L217;
            } else {
             $K12$029$i = $485;$T$028$i = $487;
            }
           }
           $494 = HEAP32[(3024)>>2]|0;
           $495 = ($$lcssa232>>>0)<($494>>>0);
           if ($495) {
            _abort();
            // unreachable;
           } else {
            HEAP32[$$lcssa232>>2] = $348;
            $$sum11$i = (($246) + 24)|0;
            $496 = (($v$3$lcssa$i) + ($$sum11$i)|0);
            HEAP32[$496>>2] = $T$028$i$lcssa;
            $$sum12$i = (($246) + 12)|0;
            $497 = (($v$3$lcssa$i) + ($$sum12$i)|0);
            HEAP32[$497>>2] = $348;
            $$sum13$i = (($246) + 8)|0;
            $498 = (($v$3$lcssa$i) + ($$sum13$i)|0);
            HEAP32[$498>>2] = $348;
            break L199;
           }
          }
         } while(0);
         $499 = ((($T$0$lcssa$i)) + 8|0);
         $500 = HEAP32[$499>>2]|0;
         $501 = HEAP32[(3024)>>2]|0;
         $502 = ($500>>>0)>=($501>>>0);
         $not$$i = ($T$0$lcssa$i>>>0)>=($501>>>0);
         $503 = $502 & $not$$i;
         if ($503) {
          $504 = ((($500)) + 12|0);
          HEAP32[$504>>2] = $348;
          HEAP32[$499>>2] = $348;
          $$sum8$i = (($246) + 8)|0;
          $505 = (($v$3$lcssa$i) + ($$sum8$i)|0);
          HEAP32[$505>>2] = $500;
          $$sum9$i = (($246) + 12)|0;
          $506 = (($v$3$lcssa$i) + ($$sum9$i)|0);
          HEAP32[$506>>2] = $T$0$lcssa$i;
          $$sum10$i = (($246) + 24)|0;
          $507 = (($v$3$lcssa$i) + ($$sum10$i)|0);
          HEAP32[$507>>2] = 0;
          break;
         } else {
          _abort();
          // unreachable;
         }
        }
       } while(0);
       $508 = ((($v$3$lcssa$i)) + 8|0);
       $mem$0 = $508;
       return ($mem$0|0);
      } else {
       $nb$0 = $246;
      }
     }
    }
   }
  }
 } while(0);
 $509 = HEAP32[(3016)>>2]|0;
 $510 = ($509>>>0)<($nb$0>>>0);
 if (!($510)) {
  $511 = (($509) - ($nb$0))|0;
  $512 = HEAP32[(3028)>>2]|0;
  $513 = ($511>>>0)>(15);
  if ($513) {
   $514 = (($512) + ($nb$0)|0);
   HEAP32[(3028)>>2] = $514;
   HEAP32[(3016)>>2] = $511;
   $515 = $511 | 1;
   $$sum2 = (($nb$0) + 4)|0;
   $516 = (($512) + ($$sum2)|0);
   HEAP32[$516>>2] = $515;
   $517 = (($512) + ($509)|0);
   HEAP32[$517>>2] = $511;
   $518 = $nb$0 | 3;
   $519 = ((($512)) + 4|0);
   HEAP32[$519>>2] = $518;
  } else {
   HEAP32[(3016)>>2] = 0;
   HEAP32[(3028)>>2] = 0;
   $520 = $509 | 3;
   $521 = ((($512)) + 4|0);
   HEAP32[$521>>2] = $520;
   $$sum1 = (($509) + 4)|0;
   $522 = (($512) + ($$sum1)|0);
   $523 = HEAP32[$522>>2]|0;
   $524 = $523 | 1;
   HEAP32[$522>>2] = $524;
  }
  $525 = ((($512)) + 8|0);
  $mem$0 = $525;
  return ($mem$0|0);
 }
 $526 = HEAP32[(3020)>>2]|0;
 $527 = ($526>>>0)>($nb$0>>>0);
 if ($527) {
  $528 = (($526) - ($nb$0))|0;
  HEAP32[(3020)>>2] = $528;
  $529 = HEAP32[(3032)>>2]|0;
  $530 = (($529) + ($nb$0)|0);
  HEAP32[(3032)>>2] = $530;
  $531 = $528 | 1;
  $$sum = (($nb$0) + 4)|0;
  $532 = (($529) + ($$sum)|0);
  HEAP32[$532>>2] = $531;
  $533 = $nb$0 | 3;
  $534 = ((($529)) + 4|0);
  HEAP32[$534>>2] = $533;
  $535 = ((($529)) + 8|0);
  $mem$0 = $535;
  return ($mem$0|0);
 }
 $536 = HEAP32[3480>>2]|0;
 $537 = ($536|0)==(0);
 do {
  if ($537) {
   $538 = (_sysconf(30)|0);
   $539 = (($538) + -1)|0;
   $540 = $539 & $538;
   $541 = ($540|0)==(0);
   if ($541) {
    HEAP32[(3488)>>2] = $538;
    HEAP32[(3484)>>2] = $538;
    HEAP32[(3492)>>2] = -1;
    HEAP32[(3496)>>2] = -1;
    HEAP32[(3500)>>2] = 0;
    HEAP32[(3452)>>2] = 0;
    $542 = (_time((0|0))|0);
    $543 = $542 & -16;
    $544 = $543 ^ 1431655768;
    HEAP32[3480>>2] = $544;
    break;
   } else {
    _abort();
    // unreachable;
   }
  }
 } while(0);
 $545 = (($nb$0) + 48)|0;
 $546 = HEAP32[(3488)>>2]|0;
 $547 = (($nb$0) + 47)|0;
 $548 = (($546) + ($547))|0;
 $549 = (0 - ($546))|0;
 $550 = $548 & $549;
 $551 = ($550>>>0)>($nb$0>>>0);
 if (!($551)) {
  $mem$0 = 0;
  return ($mem$0|0);
 }
 $552 = HEAP32[(3448)>>2]|0;
 $553 = ($552|0)==(0);
 if (!($553)) {
  $554 = HEAP32[(3440)>>2]|0;
  $555 = (($554) + ($550))|0;
  $556 = ($555>>>0)<=($554>>>0);
  $557 = ($555>>>0)>($552>>>0);
  $or$cond1$i = $556 | $557;
  if ($or$cond1$i) {
   $mem$0 = 0;
   return ($mem$0|0);
  }
 }
 $558 = HEAP32[(3452)>>2]|0;
 $559 = $558 & 4;
 $560 = ($559|0)==(0);
 L258: do {
  if ($560) {
   $561 = HEAP32[(3032)>>2]|0;
   $562 = ($561|0)==(0|0);
   L260: do {
    if ($562) {
     label = 174;
    } else {
     $sp$0$i$i = (3456);
     while(1) {
      $563 = HEAP32[$sp$0$i$i>>2]|0;
      $564 = ($563>>>0)>($561>>>0);
      if (!($564)) {
       $565 = ((($sp$0$i$i)) + 4|0);
       $566 = HEAP32[$565>>2]|0;
       $567 = (($563) + ($566)|0);
       $568 = ($567>>>0)>($561>>>0);
       if ($568) {
        $$lcssa228 = $sp$0$i$i;$$lcssa230 = $565;
        break;
       }
      }
      $569 = ((($sp$0$i$i)) + 8|0);
      $570 = HEAP32[$569>>2]|0;
      $571 = ($570|0)==(0|0);
      if ($571) {
       label = 174;
       break L260;
      } else {
       $sp$0$i$i = $570;
      }
     }
     $594 = HEAP32[(3020)>>2]|0;
     $595 = (($548) - ($594))|0;
     $596 = $595 & $549;
     $597 = ($596>>>0)<(2147483647);
     if ($597) {
      $598 = (_sbrk(($596|0))|0);
      $599 = HEAP32[$$lcssa228>>2]|0;
      $600 = HEAP32[$$lcssa230>>2]|0;
      $601 = (($599) + ($600)|0);
      $602 = ($598|0)==($601|0);
      $$3$i = $602 ? $596 : 0;
      if ($602) {
       $603 = ($598|0)==((-1)|0);
       if ($603) {
        $tsize$0323944$i = $$3$i;
       } else {
        $tbase$255$i = $598;$tsize$254$i = $$3$i;
        label = 194;
        break L258;
       }
      } else {
       $br$0$ph$i = $598;$ssize$1$ph$i = $596;$tsize$0$ph$i = $$3$i;
       label = 184;
      }
     } else {
      $tsize$0323944$i = 0;
     }
    }
   } while(0);
   do {
    if ((label|0) == 174) {
     $572 = (_sbrk(0)|0);
     $573 = ($572|0)==((-1)|0);
     if ($573) {
      $tsize$0323944$i = 0;
     } else {
      $574 = $572;
      $575 = HEAP32[(3484)>>2]|0;
      $576 = (($575) + -1)|0;
      $577 = $576 & $574;
      $578 = ($577|0)==(0);
      if ($578) {
       $ssize$0$i = $550;
      } else {
       $579 = (($576) + ($574))|0;
       $580 = (0 - ($575))|0;
       $581 = $579 & $580;
       $582 = (($550) - ($574))|0;
       $583 = (($582) + ($581))|0;
       $ssize$0$i = $583;
      }
      $584 = HEAP32[(3440)>>2]|0;
      $585 = (($584) + ($ssize$0$i))|0;
      $586 = ($ssize$0$i>>>0)>($nb$0>>>0);
      $587 = ($ssize$0$i>>>0)<(2147483647);
      $or$cond$i30 = $586 & $587;
      if ($or$cond$i30) {
       $588 = HEAP32[(3448)>>2]|0;
       $589 = ($588|0)==(0);
       if (!($589)) {
        $590 = ($585>>>0)<=($584>>>0);
        $591 = ($585>>>0)>($588>>>0);
        $or$cond2$i = $590 | $591;
        if ($or$cond2$i) {
         $tsize$0323944$i = 0;
         break;
        }
       }
       $592 = (_sbrk(($ssize$0$i|0))|0);
       $593 = ($592|0)==($572|0);
       $ssize$0$$i = $593 ? $ssize$0$i : 0;
       if ($593) {
        $tbase$255$i = $572;$tsize$254$i = $ssize$0$$i;
        label = 194;
        break L258;
       } else {
        $br$0$ph$i = $592;$ssize$1$ph$i = $ssize$0$i;$tsize$0$ph$i = $ssize$0$$i;
        label = 184;
       }
      } else {
       $tsize$0323944$i = 0;
      }
     }
    }
   } while(0);
   L280: do {
    if ((label|0) == 184) {
     $604 = (0 - ($ssize$1$ph$i))|0;
     $605 = ($br$0$ph$i|0)!=((-1)|0);
     $606 = ($ssize$1$ph$i>>>0)<(2147483647);
     $or$cond5$i = $606 & $605;
     $607 = ($545>>>0)>($ssize$1$ph$i>>>0);
     $or$cond6$i = $607 & $or$cond5$i;
     do {
      if ($or$cond6$i) {
       $608 = HEAP32[(3488)>>2]|0;
       $609 = (($547) - ($ssize$1$ph$i))|0;
       $610 = (($609) + ($608))|0;
       $611 = (0 - ($608))|0;
       $612 = $610 & $611;
       $613 = ($612>>>0)<(2147483647);
       if ($613) {
        $614 = (_sbrk(($612|0))|0);
        $615 = ($614|0)==((-1)|0);
        if ($615) {
         (_sbrk(($604|0))|0);
         $tsize$0323944$i = $tsize$0$ph$i;
         break L280;
        } else {
         $616 = (($612) + ($ssize$1$ph$i))|0;
         $ssize$2$i = $616;
         break;
        }
       } else {
        $ssize$2$i = $ssize$1$ph$i;
       }
      } else {
       $ssize$2$i = $ssize$1$ph$i;
      }
     } while(0);
     $617 = ($br$0$ph$i|0)==((-1)|0);
     if ($617) {
      $tsize$0323944$i = $tsize$0$ph$i;
     } else {
      $tbase$255$i = $br$0$ph$i;$tsize$254$i = $ssize$2$i;
      label = 194;
      break L258;
     }
    }
   } while(0);
   $618 = HEAP32[(3452)>>2]|0;
   $619 = $618 | 4;
   HEAP32[(3452)>>2] = $619;
   $tsize$1$i = $tsize$0323944$i;
   label = 191;
  } else {
   $tsize$1$i = 0;
   label = 191;
  }
 } while(0);
 if ((label|0) == 191) {
  $620 = ($550>>>0)<(2147483647);
  if ($620) {
   $621 = (_sbrk(($550|0))|0);
   $622 = (_sbrk(0)|0);
   $623 = ($621|0)!=((-1)|0);
   $624 = ($622|0)!=((-1)|0);
   $or$cond3$i = $623 & $624;
   $625 = ($621>>>0)<($622>>>0);
   $or$cond8$i = $625 & $or$cond3$i;
   if ($or$cond8$i) {
    $626 = $622;
    $627 = $621;
    $628 = (($626) - ($627))|0;
    $629 = (($nb$0) + 40)|0;
    $630 = ($628>>>0)>($629>>>0);
    $$tsize$1$i = $630 ? $628 : $tsize$1$i;
    if ($630) {
     $tbase$255$i = $621;$tsize$254$i = $$tsize$1$i;
     label = 194;
    }
   }
  }
 }
 if ((label|0) == 194) {
  $631 = HEAP32[(3440)>>2]|0;
  $632 = (($631) + ($tsize$254$i))|0;
  HEAP32[(3440)>>2] = $632;
  $633 = HEAP32[(3444)>>2]|0;
  $634 = ($632>>>0)>($633>>>0);
  if ($634) {
   HEAP32[(3444)>>2] = $632;
  }
  $635 = HEAP32[(3032)>>2]|0;
  $636 = ($635|0)==(0|0);
  L299: do {
   if ($636) {
    $637 = HEAP32[(3024)>>2]|0;
    $638 = ($637|0)==(0|0);
    $639 = ($tbase$255$i>>>0)<($637>>>0);
    $or$cond9$i = $638 | $639;
    if ($or$cond9$i) {
     HEAP32[(3024)>>2] = $tbase$255$i;
    }
    HEAP32[(3456)>>2] = $tbase$255$i;
    HEAP32[(3460)>>2] = $tsize$254$i;
    HEAP32[(3468)>>2] = 0;
    $640 = HEAP32[3480>>2]|0;
    HEAP32[(3044)>>2] = $640;
    HEAP32[(3040)>>2] = -1;
    $i$02$i$i = 0;
    while(1) {
     $641 = $i$02$i$i << 1;
     $642 = (3048 + ($641<<2)|0);
     $$sum$i$i = (($641) + 3)|0;
     $643 = (3048 + ($$sum$i$i<<2)|0);
     HEAP32[$643>>2] = $642;
     $$sum1$i$i = (($641) + 2)|0;
     $644 = (3048 + ($$sum1$i$i<<2)|0);
     HEAP32[$644>>2] = $642;
     $645 = (($i$02$i$i) + 1)|0;
     $exitcond$i$i = ($645|0)==(32);
     if ($exitcond$i$i) {
      break;
     } else {
      $i$02$i$i = $645;
     }
    }
    $646 = (($tsize$254$i) + -40)|0;
    $647 = ((($tbase$255$i)) + 8|0);
    $648 = $647;
    $649 = $648 & 7;
    $650 = ($649|0)==(0);
    $651 = (0 - ($648))|0;
    $652 = $651 & 7;
    $653 = $650 ? 0 : $652;
    $654 = (($tbase$255$i) + ($653)|0);
    $655 = (($646) - ($653))|0;
    HEAP32[(3032)>>2] = $654;
    HEAP32[(3020)>>2] = $655;
    $656 = $655 | 1;
    $$sum$i13$i = (($653) + 4)|0;
    $657 = (($tbase$255$i) + ($$sum$i13$i)|0);
    HEAP32[$657>>2] = $656;
    $$sum2$i$i = (($tsize$254$i) + -36)|0;
    $658 = (($tbase$255$i) + ($$sum2$i$i)|0);
    HEAP32[$658>>2] = 40;
    $659 = HEAP32[(3496)>>2]|0;
    HEAP32[(3036)>>2] = $659;
   } else {
    $sp$084$i = (3456);
    while(1) {
     $660 = HEAP32[$sp$084$i>>2]|0;
     $661 = ((($sp$084$i)) + 4|0);
     $662 = HEAP32[$661>>2]|0;
     $663 = (($660) + ($662)|0);
     $664 = ($tbase$255$i|0)==($663|0);
     if ($664) {
      $$lcssa222 = $660;$$lcssa224 = $661;$$lcssa226 = $662;$sp$084$i$lcssa = $sp$084$i;
      label = 204;
      break;
     }
     $665 = ((($sp$084$i)) + 8|0);
     $666 = HEAP32[$665>>2]|0;
     $667 = ($666|0)==(0|0);
     if ($667) {
      break;
     } else {
      $sp$084$i = $666;
     }
    }
    if ((label|0) == 204) {
     $668 = ((($sp$084$i$lcssa)) + 12|0);
     $669 = HEAP32[$668>>2]|0;
     $670 = $669 & 8;
     $671 = ($670|0)==(0);
     if ($671) {
      $672 = ($635>>>0)>=($$lcssa222>>>0);
      $673 = ($635>>>0)<($tbase$255$i>>>0);
      $or$cond57$i = $673 & $672;
      if ($or$cond57$i) {
       $674 = (($$lcssa226) + ($tsize$254$i))|0;
       HEAP32[$$lcssa224>>2] = $674;
       $675 = HEAP32[(3020)>>2]|0;
       $676 = (($675) + ($tsize$254$i))|0;
       $677 = ((($635)) + 8|0);
       $678 = $677;
       $679 = $678 & 7;
       $680 = ($679|0)==(0);
       $681 = (0 - ($678))|0;
       $682 = $681 & 7;
       $683 = $680 ? 0 : $682;
       $684 = (($635) + ($683)|0);
       $685 = (($676) - ($683))|0;
       HEAP32[(3032)>>2] = $684;
       HEAP32[(3020)>>2] = $685;
       $686 = $685 | 1;
       $$sum$i17$i = (($683) + 4)|0;
       $687 = (($635) + ($$sum$i17$i)|0);
       HEAP32[$687>>2] = $686;
       $$sum2$i18$i = (($676) + 4)|0;
       $688 = (($635) + ($$sum2$i18$i)|0);
       HEAP32[$688>>2] = 40;
       $689 = HEAP32[(3496)>>2]|0;
       HEAP32[(3036)>>2] = $689;
       break;
      }
     }
    }
    $690 = HEAP32[(3024)>>2]|0;
    $691 = ($tbase$255$i>>>0)<($690>>>0);
    if ($691) {
     HEAP32[(3024)>>2] = $tbase$255$i;
     $755 = $tbase$255$i;
    } else {
     $755 = $690;
    }
    $692 = (($tbase$255$i) + ($tsize$254$i)|0);
    $sp$183$i = (3456);
    while(1) {
     $693 = HEAP32[$sp$183$i>>2]|0;
     $694 = ($693|0)==($692|0);
     if ($694) {
      $$lcssa219 = $sp$183$i;$sp$183$i$lcssa = $sp$183$i;
      label = 212;
      break;
     }
     $695 = ((($sp$183$i)) + 8|0);
     $696 = HEAP32[$695>>2]|0;
     $697 = ($696|0)==(0|0);
     if ($697) {
      $sp$0$i$i$i = (3456);
      break;
     } else {
      $sp$183$i = $696;
     }
    }
    if ((label|0) == 212) {
     $698 = ((($sp$183$i$lcssa)) + 12|0);
     $699 = HEAP32[$698>>2]|0;
     $700 = $699 & 8;
     $701 = ($700|0)==(0);
     if ($701) {
      HEAP32[$$lcssa219>>2] = $tbase$255$i;
      $702 = ((($sp$183$i$lcssa)) + 4|0);
      $703 = HEAP32[$702>>2]|0;
      $704 = (($703) + ($tsize$254$i))|0;
      HEAP32[$702>>2] = $704;
      $705 = ((($tbase$255$i)) + 8|0);
      $706 = $705;
      $707 = $706 & 7;
      $708 = ($707|0)==(0);
      $709 = (0 - ($706))|0;
      $710 = $709 & 7;
      $711 = $708 ? 0 : $710;
      $712 = (($tbase$255$i) + ($711)|0);
      $$sum112$i = (($tsize$254$i) + 8)|0;
      $713 = (($tbase$255$i) + ($$sum112$i)|0);
      $714 = $713;
      $715 = $714 & 7;
      $716 = ($715|0)==(0);
      $717 = (0 - ($714))|0;
      $718 = $717 & 7;
      $719 = $716 ? 0 : $718;
      $$sum113$i = (($719) + ($tsize$254$i))|0;
      $720 = (($tbase$255$i) + ($$sum113$i)|0);
      $721 = $720;
      $722 = $712;
      $723 = (($721) - ($722))|0;
      $$sum$i19$i = (($711) + ($nb$0))|0;
      $724 = (($tbase$255$i) + ($$sum$i19$i)|0);
      $725 = (($723) - ($nb$0))|0;
      $726 = $nb$0 | 3;
      $$sum1$i20$i = (($711) + 4)|0;
      $727 = (($tbase$255$i) + ($$sum1$i20$i)|0);
      HEAP32[$727>>2] = $726;
      $728 = ($720|0)==($635|0);
      L324: do {
       if ($728) {
        $729 = HEAP32[(3020)>>2]|0;
        $730 = (($729) + ($725))|0;
        HEAP32[(3020)>>2] = $730;
        HEAP32[(3032)>>2] = $724;
        $731 = $730 | 1;
        $$sum42$i$i = (($$sum$i19$i) + 4)|0;
        $732 = (($tbase$255$i) + ($$sum42$i$i)|0);
        HEAP32[$732>>2] = $731;
       } else {
        $733 = HEAP32[(3028)>>2]|0;
        $734 = ($720|0)==($733|0);
        if ($734) {
         $735 = HEAP32[(3016)>>2]|0;
         $736 = (($735) + ($725))|0;
         HEAP32[(3016)>>2] = $736;
         HEAP32[(3028)>>2] = $724;
         $737 = $736 | 1;
         $$sum40$i$i = (($$sum$i19$i) + 4)|0;
         $738 = (($tbase$255$i) + ($$sum40$i$i)|0);
         HEAP32[$738>>2] = $737;
         $$sum41$i$i = (($736) + ($$sum$i19$i))|0;
         $739 = (($tbase$255$i) + ($$sum41$i$i)|0);
         HEAP32[$739>>2] = $736;
         break;
        }
        $$sum2$i21$i = (($tsize$254$i) + 4)|0;
        $$sum114$i = (($$sum2$i21$i) + ($719))|0;
        $740 = (($tbase$255$i) + ($$sum114$i)|0);
        $741 = HEAP32[$740>>2]|0;
        $742 = $741 & 3;
        $743 = ($742|0)==(1);
        if ($743) {
         $744 = $741 & -8;
         $745 = $741 >>> 3;
         $746 = ($741>>>0)<(256);
         L331: do {
          if ($746) {
           $$sum3738$i$i = $719 | 8;
           $$sum124$i = (($$sum3738$i$i) + ($tsize$254$i))|0;
           $747 = (($tbase$255$i) + ($$sum124$i)|0);
           $748 = HEAP32[$747>>2]|0;
           $$sum39$i$i = (($tsize$254$i) + 12)|0;
           $$sum125$i = (($$sum39$i$i) + ($719))|0;
           $749 = (($tbase$255$i) + ($$sum125$i)|0);
           $750 = HEAP32[$749>>2]|0;
           $751 = $745 << 1;
           $752 = (3048 + ($751<<2)|0);
           $753 = ($748|0)==($752|0);
           do {
            if (!($753)) {
             $754 = ($748>>>0)<($755>>>0);
             if ($754) {
              _abort();
              // unreachable;
             }
             $756 = ((($748)) + 12|0);
             $757 = HEAP32[$756>>2]|0;
             $758 = ($757|0)==($720|0);
             if ($758) {
              break;
             }
             _abort();
             // unreachable;
            }
           } while(0);
           $759 = ($750|0)==($748|0);
           if ($759) {
            $760 = 1 << $745;
            $761 = $760 ^ -1;
            $762 = HEAP32[3008>>2]|0;
            $763 = $762 & $761;
            HEAP32[3008>>2] = $763;
            break;
           }
           $764 = ($750|0)==($752|0);
           do {
            if ($764) {
             $$pre57$i$i = ((($750)) + 8|0);
             $$pre$phi58$i$iZ2D = $$pre57$i$i;
            } else {
             $765 = ($750>>>0)<($755>>>0);
             if ($765) {
              _abort();
              // unreachable;
             }
             $766 = ((($750)) + 8|0);
             $767 = HEAP32[$766>>2]|0;
             $768 = ($767|0)==($720|0);
             if ($768) {
              $$pre$phi58$i$iZ2D = $766;
              break;
             }
             _abort();
             // unreachable;
            }
           } while(0);
           $769 = ((($748)) + 12|0);
           HEAP32[$769>>2] = $750;
           HEAP32[$$pre$phi58$i$iZ2D>>2] = $748;
          } else {
           $$sum34$i$i = $719 | 24;
           $$sum115$i = (($$sum34$i$i) + ($tsize$254$i))|0;
           $770 = (($tbase$255$i) + ($$sum115$i)|0);
           $771 = HEAP32[$770>>2]|0;
           $$sum5$i$i = (($tsize$254$i) + 12)|0;
           $$sum116$i = (($$sum5$i$i) + ($719))|0;
           $772 = (($tbase$255$i) + ($$sum116$i)|0);
           $773 = HEAP32[$772>>2]|0;
           $774 = ($773|0)==($720|0);
           do {
            if ($774) {
             $$sum67$i$i = $719 | 16;
             $$sum122$i = (($$sum2$i21$i) + ($$sum67$i$i))|0;
             $784 = (($tbase$255$i) + ($$sum122$i)|0);
             $785 = HEAP32[$784>>2]|0;
             $786 = ($785|0)==(0|0);
             if ($786) {
              $$sum123$i = (($$sum67$i$i) + ($tsize$254$i))|0;
              $787 = (($tbase$255$i) + ($$sum123$i)|0);
              $788 = HEAP32[$787>>2]|0;
              $789 = ($788|0)==(0|0);
              if ($789) {
               $R$1$i$i = 0;
               break;
              } else {
               $R$0$i$i = $788;$RP$0$i$i = $787;
              }
             } else {
              $R$0$i$i = $785;$RP$0$i$i = $784;
             }
             while(1) {
              $790 = ((($R$0$i$i)) + 20|0);
              $791 = HEAP32[$790>>2]|0;
              $792 = ($791|0)==(0|0);
              if (!($792)) {
               $R$0$i$i = $791;$RP$0$i$i = $790;
               continue;
              }
              $793 = ((($R$0$i$i)) + 16|0);
              $794 = HEAP32[$793>>2]|0;
              $795 = ($794|0)==(0|0);
              if ($795) {
               $R$0$i$i$lcssa = $R$0$i$i;$RP$0$i$i$lcssa = $RP$0$i$i;
               break;
              } else {
               $R$0$i$i = $794;$RP$0$i$i = $793;
              }
             }
             $796 = ($RP$0$i$i$lcssa>>>0)<($755>>>0);
             if ($796) {
              _abort();
              // unreachable;
             } else {
              HEAP32[$RP$0$i$i$lcssa>>2] = 0;
              $R$1$i$i = $R$0$i$i$lcssa;
              break;
             }
            } else {
             $$sum3536$i$i = $719 | 8;
             $$sum117$i = (($$sum3536$i$i) + ($tsize$254$i))|0;
             $775 = (($tbase$255$i) + ($$sum117$i)|0);
             $776 = HEAP32[$775>>2]|0;
             $777 = ($776>>>0)<($755>>>0);
             if ($777) {
              _abort();
              // unreachable;
             }
             $778 = ((($776)) + 12|0);
             $779 = HEAP32[$778>>2]|0;
             $780 = ($779|0)==($720|0);
             if (!($780)) {
              _abort();
              // unreachable;
             }
             $781 = ((($773)) + 8|0);
             $782 = HEAP32[$781>>2]|0;
             $783 = ($782|0)==($720|0);
             if ($783) {
              HEAP32[$778>>2] = $773;
              HEAP32[$781>>2] = $776;
              $R$1$i$i = $773;
              break;
             } else {
              _abort();
              // unreachable;
             }
            }
           } while(0);
           $797 = ($771|0)==(0|0);
           if ($797) {
            break;
           }
           $$sum30$i$i = (($tsize$254$i) + 28)|0;
           $$sum118$i = (($$sum30$i$i) + ($719))|0;
           $798 = (($tbase$255$i) + ($$sum118$i)|0);
           $799 = HEAP32[$798>>2]|0;
           $800 = (3312 + ($799<<2)|0);
           $801 = HEAP32[$800>>2]|0;
           $802 = ($720|0)==($801|0);
           do {
            if ($802) {
             HEAP32[$800>>2] = $R$1$i$i;
             $cond$i$i = ($R$1$i$i|0)==(0|0);
             if (!($cond$i$i)) {
              break;
             }
             $803 = 1 << $799;
             $804 = $803 ^ -1;
             $805 = HEAP32[(3012)>>2]|0;
             $806 = $805 & $804;
             HEAP32[(3012)>>2] = $806;
             break L331;
            } else {
             $807 = HEAP32[(3024)>>2]|0;
             $808 = ($771>>>0)<($807>>>0);
             if ($808) {
              _abort();
              // unreachable;
             }
             $809 = ((($771)) + 16|0);
             $810 = HEAP32[$809>>2]|0;
             $811 = ($810|0)==($720|0);
             if ($811) {
              HEAP32[$809>>2] = $R$1$i$i;
             } else {
              $812 = ((($771)) + 20|0);
              HEAP32[$812>>2] = $R$1$i$i;
             }
             $813 = ($R$1$i$i|0)==(0|0);
             if ($813) {
              break L331;
             }
            }
           } while(0);
           $814 = HEAP32[(3024)>>2]|0;
           $815 = ($R$1$i$i>>>0)<($814>>>0);
           if ($815) {
            _abort();
            // unreachable;
           }
           $816 = ((($R$1$i$i)) + 24|0);
           HEAP32[$816>>2] = $771;
           $$sum3132$i$i = $719 | 16;
           $$sum119$i = (($$sum3132$i$i) + ($tsize$254$i))|0;
           $817 = (($tbase$255$i) + ($$sum119$i)|0);
           $818 = HEAP32[$817>>2]|0;
           $819 = ($818|0)==(0|0);
           do {
            if (!($819)) {
             $820 = ($818>>>0)<($814>>>0);
             if ($820) {
              _abort();
              // unreachable;
             } else {
              $821 = ((($R$1$i$i)) + 16|0);
              HEAP32[$821>>2] = $818;
              $822 = ((($818)) + 24|0);
              HEAP32[$822>>2] = $R$1$i$i;
              break;
             }
            }
           } while(0);
           $$sum120$i = (($$sum2$i21$i) + ($$sum3132$i$i))|0;
           $823 = (($tbase$255$i) + ($$sum120$i)|0);
           $824 = HEAP32[$823>>2]|0;
           $825 = ($824|0)==(0|0);
           if ($825) {
            break;
           }
           $826 = HEAP32[(3024)>>2]|0;
           $827 = ($824>>>0)<($826>>>0);
           if ($827) {
            _abort();
            // unreachable;
           } else {
            $828 = ((($R$1$i$i)) + 20|0);
            HEAP32[$828>>2] = $824;
            $829 = ((($824)) + 24|0);
            HEAP32[$829>>2] = $R$1$i$i;
            break;
           }
          }
         } while(0);
         $$sum9$i$i = $744 | $719;
         $$sum121$i = (($$sum9$i$i) + ($tsize$254$i))|0;
         $830 = (($tbase$255$i) + ($$sum121$i)|0);
         $831 = (($744) + ($725))|0;
         $oldfirst$0$i$i = $830;$qsize$0$i$i = $831;
        } else {
         $oldfirst$0$i$i = $720;$qsize$0$i$i = $725;
        }
        $832 = ((($oldfirst$0$i$i)) + 4|0);
        $833 = HEAP32[$832>>2]|0;
        $834 = $833 & -2;
        HEAP32[$832>>2] = $834;
        $835 = $qsize$0$i$i | 1;
        $$sum10$i$i = (($$sum$i19$i) + 4)|0;
        $836 = (($tbase$255$i) + ($$sum10$i$i)|0);
        HEAP32[$836>>2] = $835;
        $$sum11$i$i = (($qsize$0$i$i) + ($$sum$i19$i))|0;
        $837 = (($tbase$255$i) + ($$sum11$i$i)|0);
        HEAP32[$837>>2] = $qsize$0$i$i;
        $838 = $qsize$0$i$i >>> 3;
        $839 = ($qsize$0$i$i>>>0)<(256);
        if ($839) {
         $840 = $838 << 1;
         $841 = (3048 + ($840<<2)|0);
         $842 = HEAP32[3008>>2]|0;
         $843 = 1 << $838;
         $844 = $842 & $843;
         $845 = ($844|0)==(0);
         do {
          if ($845) {
           $846 = $842 | $843;
           HEAP32[3008>>2] = $846;
           $$pre$i22$i = (($840) + 2)|0;
           $$pre56$i$i = (3048 + ($$pre$i22$i<<2)|0);
           $$pre$phi$i23$iZ2D = $$pre56$i$i;$F4$0$i$i = $841;
          } else {
           $$sum29$i$i = (($840) + 2)|0;
           $847 = (3048 + ($$sum29$i$i<<2)|0);
           $848 = HEAP32[$847>>2]|0;
           $849 = HEAP32[(3024)>>2]|0;
           $850 = ($848>>>0)<($849>>>0);
           if (!($850)) {
            $$pre$phi$i23$iZ2D = $847;$F4$0$i$i = $848;
            break;
           }
           _abort();
           // unreachable;
          }
         } while(0);
         HEAP32[$$pre$phi$i23$iZ2D>>2] = $724;
         $851 = ((($F4$0$i$i)) + 12|0);
         HEAP32[$851>>2] = $724;
         $$sum27$i$i = (($$sum$i19$i) + 8)|0;
         $852 = (($tbase$255$i) + ($$sum27$i$i)|0);
         HEAP32[$852>>2] = $F4$0$i$i;
         $$sum28$i$i = (($$sum$i19$i) + 12)|0;
         $853 = (($tbase$255$i) + ($$sum28$i$i)|0);
         HEAP32[$853>>2] = $841;
         break;
        }
        $854 = $qsize$0$i$i >>> 8;
        $855 = ($854|0)==(0);
        do {
         if ($855) {
          $I7$0$i$i = 0;
         } else {
          $856 = ($qsize$0$i$i>>>0)>(16777215);
          if ($856) {
           $I7$0$i$i = 31;
           break;
          }
          $857 = (($854) + 1048320)|0;
          $858 = $857 >>> 16;
          $859 = $858 & 8;
          $860 = $854 << $859;
          $861 = (($860) + 520192)|0;
          $862 = $861 >>> 16;
          $863 = $862 & 4;
          $864 = $863 | $859;
          $865 = $860 << $863;
          $866 = (($865) + 245760)|0;
          $867 = $866 >>> 16;
          $868 = $867 & 2;
          $869 = $864 | $868;
          $870 = (14 - ($869))|0;
          $871 = $865 << $868;
          $872 = $871 >>> 15;
          $873 = (($870) + ($872))|0;
          $874 = $873 << 1;
          $875 = (($873) + 7)|0;
          $876 = $qsize$0$i$i >>> $875;
          $877 = $876 & 1;
          $878 = $877 | $874;
          $I7$0$i$i = $878;
         }
        } while(0);
        $879 = (3312 + ($I7$0$i$i<<2)|0);
        $$sum12$i$i = (($$sum$i19$i) + 28)|0;
        $880 = (($tbase$255$i) + ($$sum12$i$i)|0);
        HEAP32[$880>>2] = $I7$0$i$i;
        $$sum13$i$i = (($$sum$i19$i) + 16)|0;
        $881 = (($tbase$255$i) + ($$sum13$i$i)|0);
        $$sum14$i$i = (($$sum$i19$i) + 20)|0;
        $882 = (($tbase$255$i) + ($$sum14$i$i)|0);
        HEAP32[$882>>2] = 0;
        HEAP32[$881>>2] = 0;
        $883 = HEAP32[(3012)>>2]|0;
        $884 = 1 << $I7$0$i$i;
        $885 = $883 & $884;
        $886 = ($885|0)==(0);
        if ($886) {
         $887 = $883 | $884;
         HEAP32[(3012)>>2] = $887;
         HEAP32[$879>>2] = $724;
         $$sum15$i$i = (($$sum$i19$i) + 24)|0;
         $888 = (($tbase$255$i) + ($$sum15$i$i)|0);
         HEAP32[$888>>2] = $879;
         $$sum16$i$i = (($$sum$i19$i) + 12)|0;
         $889 = (($tbase$255$i) + ($$sum16$i$i)|0);
         HEAP32[$889>>2] = $724;
         $$sum17$i$i = (($$sum$i19$i) + 8)|0;
         $890 = (($tbase$255$i) + ($$sum17$i$i)|0);
         HEAP32[$890>>2] = $724;
         break;
        }
        $891 = HEAP32[$879>>2]|0;
        $892 = ((($891)) + 4|0);
        $893 = HEAP32[$892>>2]|0;
        $894 = $893 & -8;
        $895 = ($894|0)==($qsize$0$i$i|0);
        L417: do {
         if ($895) {
          $T$0$lcssa$i25$i = $891;
         } else {
          $896 = ($I7$0$i$i|0)==(31);
          $897 = $I7$0$i$i >>> 1;
          $898 = (25 - ($897))|0;
          $899 = $896 ? 0 : $898;
          $900 = $qsize$0$i$i << $899;
          $K8$051$i$i = $900;$T$050$i$i = $891;
          while(1) {
           $907 = $K8$051$i$i >>> 31;
           $908 = (((($T$050$i$i)) + 16|0) + ($907<<2)|0);
           $903 = HEAP32[$908>>2]|0;
           $909 = ($903|0)==(0|0);
           if ($909) {
            $$lcssa = $908;$T$050$i$i$lcssa = $T$050$i$i;
            break;
           }
           $901 = $K8$051$i$i << 1;
           $902 = ((($903)) + 4|0);
           $904 = HEAP32[$902>>2]|0;
           $905 = $904 & -8;
           $906 = ($905|0)==($qsize$0$i$i|0);
           if ($906) {
            $T$0$lcssa$i25$i = $903;
            break L417;
           } else {
            $K8$051$i$i = $901;$T$050$i$i = $903;
           }
          }
          $910 = HEAP32[(3024)>>2]|0;
          $911 = ($$lcssa>>>0)<($910>>>0);
          if ($911) {
           _abort();
           // unreachable;
          } else {
           HEAP32[$$lcssa>>2] = $724;
           $$sum23$i$i = (($$sum$i19$i) + 24)|0;
           $912 = (($tbase$255$i) + ($$sum23$i$i)|0);
           HEAP32[$912>>2] = $T$050$i$i$lcssa;
           $$sum24$i$i = (($$sum$i19$i) + 12)|0;
           $913 = (($tbase$255$i) + ($$sum24$i$i)|0);
           HEAP32[$913>>2] = $724;
           $$sum25$i$i = (($$sum$i19$i) + 8)|0;
           $914 = (($tbase$255$i) + ($$sum25$i$i)|0);
           HEAP32[$914>>2] = $724;
           break L324;
          }
         }
        } while(0);
        $915 = ((($T$0$lcssa$i25$i)) + 8|0);
        $916 = HEAP32[$915>>2]|0;
        $917 = HEAP32[(3024)>>2]|0;
        $918 = ($916>>>0)>=($917>>>0);
        $not$$i26$i = ($T$0$lcssa$i25$i>>>0)>=($917>>>0);
        $919 = $918 & $not$$i26$i;
        if ($919) {
         $920 = ((($916)) + 12|0);
         HEAP32[$920>>2] = $724;
         HEAP32[$915>>2] = $724;
         $$sum20$i$i = (($$sum$i19$i) + 8)|0;
         $921 = (($tbase$255$i) + ($$sum20$i$i)|0);
         HEAP32[$921>>2] = $916;
         $$sum21$i$i = (($$sum$i19$i) + 12)|0;
         $922 = (($tbase$255$i) + ($$sum21$i$i)|0);
         HEAP32[$922>>2] = $T$0$lcssa$i25$i;
         $$sum22$i$i = (($$sum$i19$i) + 24)|0;
         $923 = (($tbase$255$i) + ($$sum22$i$i)|0);
         HEAP32[$923>>2] = 0;
         break;
        } else {
         _abort();
         // unreachable;
        }
       }
      } while(0);
      $$sum1819$i$i = $711 | 8;
      $924 = (($tbase$255$i) + ($$sum1819$i$i)|0);
      $mem$0 = $924;
      return ($mem$0|0);
     } else {
      $sp$0$i$i$i = (3456);
     }
    }
    while(1) {
     $925 = HEAP32[$sp$0$i$i$i>>2]|0;
     $926 = ($925>>>0)>($635>>>0);
     if (!($926)) {
      $927 = ((($sp$0$i$i$i)) + 4|0);
      $928 = HEAP32[$927>>2]|0;
      $929 = (($925) + ($928)|0);
      $930 = ($929>>>0)>($635>>>0);
      if ($930) {
       $$lcssa215 = $925;$$lcssa216 = $928;$$lcssa217 = $929;
       break;
      }
     }
     $931 = ((($sp$0$i$i$i)) + 8|0);
     $932 = HEAP32[$931>>2]|0;
     $sp$0$i$i$i = $932;
    }
    $$sum$i14$i = (($$lcssa216) + -47)|0;
    $$sum1$i15$i = (($$lcssa216) + -39)|0;
    $933 = (($$lcssa215) + ($$sum1$i15$i)|0);
    $934 = $933;
    $935 = $934 & 7;
    $936 = ($935|0)==(0);
    $937 = (0 - ($934))|0;
    $938 = $937 & 7;
    $939 = $936 ? 0 : $938;
    $$sum2$i16$i = (($$sum$i14$i) + ($939))|0;
    $940 = (($$lcssa215) + ($$sum2$i16$i)|0);
    $941 = ((($635)) + 16|0);
    $942 = ($940>>>0)<($941>>>0);
    $943 = $942 ? $635 : $940;
    $944 = ((($943)) + 8|0);
    $945 = (($tsize$254$i) + -40)|0;
    $946 = ((($tbase$255$i)) + 8|0);
    $947 = $946;
    $948 = $947 & 7;
    $949 = ($948|0)==(0);
    $950 = (0 - ($947))|0;
    $951 = $950 & 7;
    $952 = $949 ? 0 : $951;
    $953 = (($tbase$255$i) + ($952)|0);
    $954 = (($945) - ($952))|0;
    HEAP32[(3032)>>2] = $953;
    HEAP32[(3020)>>2] = $954;
    $955 = $954 | 1;
    $$sum$i$i$i = (($952) + 4)|0;
    $956 = (($tbase$255$i) + ($$sum$i$i$i)|0);
    HEAP32[$956>>2] = $955;
    $$sum2$i$i$i = (($tsize$254$i) + -36)|0;
    $957 = (($tbase$255$i) + ($$sum2$i$i$i)|0);
    HEAP32[$957>>2] = 40;
    $958 = HEAP32[(3496)>>2]|0;
    HEAP32[(3036)>>2] = $958;
    $959 = ((($943)) + 4|0);
    HEAP32[$959>>2] = 27;
    ;HEAP32[$944>>2]=HEAP32[(3456)>>2]|0;HEAP32[$944+4>>2]=HEAP32[(3456)+4>>2]|0;HEAP32[$944+8>>2]=HEAP32[(3456)+8>>2]|0;HEAP32[$944+12>>2]=HEAP32[(3456)+12>>2]|0;
    HEAP32[(3456)>>2] = $tbase$255$i;
    HEAP32[(3460)>>2] = $tsize$254$i;
    HEAP32[(3468)>>2] = 0;
    HEAP32[(3464)>>2] = $944;
    $960 = ((($943)) + 28|0);
    HEAP32[$960>>2] = 7;
    $961 = ((($943)) + 32|0);
    $962 = ($961>>>0)<($$lcssa217>>>0);
    if ($962) {
     $964 = $960;
     while(1) {
      $963 = ((($964)) + 4|0);
      HEAP32[$963>>2] = 7;
      $965 = ((($964)) + 8|0);
      $966 = ($965>>>0)<($$lcssa217>>>0);
      if ($966) {
       $964 = $963;
      } else {
       break;
      }
     }
    }
    $967 = ($943|0)==($635|0);
    if (!($967)) {
     $968 = $943;
     $969 = $635;
     $970 = (($968) - ($969))|0;
     $971 = HEAP32[$959>>2]|0;
     $972 = $971 & -2;
     HEAP32[$959>>2] = $972;
     $973 = $970 | 1;
     $974 = ((($635)) + 4|0);
     HEAP32[$974>>2] = $973;
     HEAP32[$943>>2] = $970;
     $975 = $970 >>> 3;
     $976 = ($970>>>0)<(256);
     if ($976) {
      $977 = $975 << 1;
      $978 = (3048 + ($977<<2)|0);
      $979 = HEAP32[3008>>2]|0;
      $980 = 1 << $975;
      $981 = $979 & $980;
      $982 = ($981|0)==(0);
      if ($982) {
       $983 = $979 | $980;
       HEAP32[3008>>2] = $983;
       $$pre$i$i = (($977) + 2)|0;
       $$pre14$i$i = (3048 + ($$pre$i$i<<2)|0);
       $$pre$phi$i$iZ2D = $$pre14$i$i;$F$0$i$i = $978;
      } else {
       $$sum4$i$i = (($977) + 2)|0;
       $984 = (3048 + ($$sum4$i$i<<2)|0);
       $985 = HEAP32[$984>>2]|0;
       $986 = HEAP32[(3024)>>2]|0;
       $987 = ($985>>>0)<($986>>>0);
       if ($987) {
        _abort();
        // unreachable;
       } else {
        $$pre$phi$i$iZ2D = $984;$F$0$i$i = $985;
       }
      }
      HEAP32[$$pre$phi$i$iZ2D>>2] = $635;
      $988 = ((($F$0$i$i)) + 12|0);
      HEAP32[$988>>2] = $635;
      $989 = ((($635)) + 8|0);
      HEAP32[$989>>2] = $F$0$i$i;
      $990 = ((($635)) + 12|0);
      HEAP32[$990>>2] = $978;
      break;
     }
     $991 = $970 >>> 8;
     $992 = ($991|0)==(0);
     if ($992) {
      $I1$0$i$i = 0;
     } else {
      $993 = ($970>>>0)>(16777215);
      if ($993) {
       $I1$0$i$i = 31;
      } else {
       $994 = (($991) + 1048320)|0;
       $995 = $994 >>> 16;
       $996 = $995 & 8;
       $997 = $991 << $996;
       $998 = (($997) + 520192)|0;
       $999 = $998 >>> 16;
       $1000 = $999 & 4;
       $1001 = $1000 | $996;
       $1002 = $997 << $1000;
       $1003 = (($1002) + 245760)|0;
       $1004 = $1003 >>> 16;
       $1005 = $1004 & 2;
       $1006 = $1001 | $1005;
       $1007 = (14 - ($1006))|0;
       $1008 = $1002 << $1005;
       $1009 = $1008 >>> 15;
       $1010 = (($1007) + ($1009))|0;
       $1011 = $1010 << 1;
       $1012 = (($1010) + 7)|0;
       $1013 = $970 >>> $1012;
       $1014 = $1013 & 1;
       $1015 = $1014 | $1011;
       $I1$0$i$i = $1015;
      }
     }
     $1016 = (3312 + ($I1$0$i$i<<2)|0);
     $1017 = ((($635)) + 28|0);
     HEAP32[$1017>>2] = $I1$0$i$i;
     $1018 = ((($635)) + 20|0);
     HEAP32[$1018>>2] = 0;
     HEAP32[$941>>2] = 0;
     $1019 = HEAP32[(3012)>>2]|0;
     $1020 = 1 << $I1$0$i$i;
     $1021 = $1019 & $1020;
     $1022 = ($1021|0)==(0);
     if ($1022) {
      $1023 = $1019 | $1020;
      HEAP32[(3012)>>2] = $1023;
      HEAP32[$1016>>2] = $635;
      $1024 = ((($635)) + 24|0);
      HEAP32[$1024>>2] = $1016;
      $1025 = ((($635)) + 12|0);
      HEAP32[$1025>>2] = $635;
      $1026 = ((($635)) + 8|0);
      HEAP32[$1026>>2] = $635;
      break;
     }
     $1027 = HEAP32[$1016>>2]|0;
     $1028 = ((($1027)) + 4|0);
     $1029 = HEAP32[$1028>>2]|0;
     $1030 = $1029 & -8;
     $1031 = ($1030|0)==($970|0);
     L459: do {
      if ($1031) {
       $T$0$lcssa$i$i = $1027;
      } else {
       $1032 = ($I1$0$i$i|0)==(31);
       $1033 = $I1$0$i$i >>> 1;
       $1034 = (25 - ($1033))|0;
       $1035 = $1032 ? 0 : $1034;
       $1036 = $970 << $1035;
       $K2$07$i$i = $1036;$T$06$i$i = $1027;
       while(1) {
        $1043 = $K2$07$i$i >>> 31;
        $1044 = (((($T$06$i$i)) + 16|0) + ($1043<<2)|0);
        $1039 = HEAP32[$1044>>2]|0;
        $1045 = ($1039|0)==(0|0);
        if ($1045) {
         $$lcssa211 = $1044;$T$06$i$i$lcssa = $T$06$i$i;
         break;
        }
        $1037 = $K2$07$i$i << 1;
        $1038 = ((($1039)) + 4|0);
        $1040 = HEAP32[$1038>>2]|0;
        $1041 = $1040 & -8;
        $1042 = ($1041|0)==($970|0);
        if ($1042) {
         $T$0$lcssa$i$i = $1039;
         break L459;
        } else {
         $K2$07$i$i = $1037;$T$06$i$i = $1039;
        }
       }
       $1046 = HEAP32[(3024)>>2]|0;
       $1047 = ($$lcssa211>>>0)<($1046>>>0);
       if ($1047) {
        _abort();
        // unreachable;
       } else {
        HEAP32[$$lcssa211>>2] = $635;
        $1048 = ((($635)) + 24|0);
        HEAP32[$1048>>2] = $T$06$i$i$lcssa;
        $1049 = ((($635)) + 12|0);
        HEAP32[$1049>>2] = $635;
        $1050 = ((($635)) + 8|0);
        HEAP32[$1050>>2] = $635;
        break L299;
       }
      }
     } while(0);
     $1051 = ((($T$0$lcssa$i$i)) + 8|0);
     $1052 = HEAP32[$1051>>2]|0;
     $1053 = HEAP32[(3024)>>2]|0;
     $1054 = ($1052>>>0)>=($1053>>>0);
     $not$$i$i = ($T$0$lcssa$i$i>>>0)>=($1053>>>0);
     $1055 = $1054 & $not$$i$i;
     if ($1055) {
      $1056 = ((($1052)) + 12|0);
      HEAP32[$1056>>2] = $635;
      HEAP32[$1051>>2] = $635;
      $1057 = ((($635)) + 8|0);
      HEAP32[$1057>>2] = $1052;
      $1058 = ((($635)) + 12|0);
      HEAP32[$1058>>2] = $T$0$lcssa$i$i;
      $1059 = ((($635)) + 24|0);
      HEAP32[$1059>>2] = 0;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   }
  } while(0);
  $1060 = HEAP32[(3020)>>2]|0;
  $1061 = ($1060>>>0)>($nb$0>>>0);
  if ($1061) {
   $1062 = (($1060) - ($nb$0))|0;
   HEAP32[(3020)>>2] = $1062;
   $1063 = HEAP32[(3032)>>2]|0;
   $1064 = (($1063) + ($nb$0)|0);
   HEAP32[(3032)>>2] = $1064;
   $1065 = $1062 | 1;
   $$sum$i32 = (($nb$0) + 4)|0;
   $1066 = (($1063) + ($$sum$i32)|0);
   HEAP32[$1066>>2] = $1065;
   $1067 = $nb$0 | 3;
   $1068 = ((($1063)) + 4|0);
   HEAP32[$1068>>2] = $1067;
   $1069 = ((($1063)) + 8|0);
   $mem$0 = $1069;
   return ($mem$0|0);
  }
 }
 $1070 = (___errno_location()|0);
 HEAP32[$1070>>2] = 12;
 $mem$0 = 0;
 return ($mem$0|0);
}
function _free($mem) {
 $mem = $mem|0;
 var $$lcssa = 0, $$pre = 0, $$pre$phi59Z2D = 0, $$pre$phi61Z2D = 0, $$pre$phiZ2D = 0, $$pre57 = 0, $$pre58 = 0, $$pre60 = 0, $$sum = 0, $$sum11 = 0, $$sum12 = 0, $$sum13 = 0, $$sum14 = 0, $$sum1718 = 0, $$sum19 = 0, $$sum2 = 0, $$sum20 = 0, $$sum22 = 0, $$sum23 = 0, $$sum24 = 0;
 var $$sum25 = 0, $$sum26 = 0, $$sum27 = 0, $$sum28 = 0, $$sum29 = 0, $$sum3 = 0, $$sum30 = 0, $$sum31 = 0, $$sum5 = 0, $$sum67 = 0, $$sum8 = 0, $$sum9 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;
 var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0;
 var $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0;
 var $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0;
 var $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0;
 var $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0;
 var $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0;
 var $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0;
 var $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0;
 var $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0;
 var $321 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $F16$0 = 0, $I18$0 = 0, $K19$052 = 0, $R$0 = 0, $R$0$lcssa = 0, $R$1 = 0;
 var $R7$0 = 0, $R7$0$lcssa = 0, $R7$1 = 0, $RP$0 = 0, $RP$0$lcssa = 0, $RP9$0 = 0, $RP9$0$lcssa = 0, $T$0$lcssa = 0, $T$051 = 0, $T$051$lcssa = 0, $cond = 0, $cond47 = 0, $not$ = 0, $p$0 = 0, $psize$0 = 0, $psize$1 = 0, $sp$0$i = 0, $sp$0$in$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($mem|0)==(0|0);
 if ($0) {
  return;
 }
 $1 = ((($mem)) + -8|0);
 $2 = HEAP32[(3024)>>2]|0;
 $3 = ($1>>>0)<($2>>>0);
 if ($3) {
  _abort();
  // unreachable;
 }
 $4 = ((($mem)) + -4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $5 & 3;
 $7 = ($6|0)==(1);
 if ($7) {
  _abort();
  // unreachable;
 }
 $8 = $5 & -8;
 $$sum = (($8) + -8)|0;
 $9 = (($mem) + ($$sum)|0);
 $10 = $5 & 1;
 $11 = ($10|0)==(0);
 do {
  if ($11) {
   $12 = HEAP32[$1>>2]|0;
   $13 = ($6|0)==(0);
   if ($13) {
    return;
   }
   $$sum2 = (-8 - ($12))|0;
   $14 = (($mem) + ($$sum2)|0);
   $15 = (($12) + ($8))|0;
   $16 = ($14>>>0)<($2>>>0);
   if ($16) {
    _abort();
    // unreachable;
   }
   $17 = HEAP32[(3028)>>2]|0;
   $18 = ($14|0)==($17|0);
   if ($18) {
    $$sum3 = (($8) + -4)|0;
    $103 = (($mem) + ($$sum3)|0);
    $104 = HEAP32[$103>>2]|0;
    $105 = $104 & 3;
    $106 = ($105|0)==(3);
    if (!($106)) {
     $p$0 = $14;$psize$0 = $15;
     break;
    }
    HEAP32[(3016)>>2] = $15;
    $107 = $104 & -2;
    HEAP32[$103>>2] = $107;
    $108 = $15 | 1;
    $$sum20 = (($$sum2) + 4)|0;
    $109 = (($mem) + ($$sum20)|0);
    HEAP32[$109>>2] = $108;
    HEAP32[$9>>2] = $15;
    return;
   }
   $19 = $12 >>> 3;
   $20 = ($12>>>0)<(256);
   if ($20) {
    $$sum30 = (($$sum2) + 8)|0;
    $21 = (($mem) + ($$sum30)|0);
    $22 = HEAP32[$21>>2]|0;
    $$sum31 = (($$sum2) + 12)|0;
    $23 = (($mem) + ($$sum31)|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = $19 << 1;
    $26 = (3048 + ($25<<2)|0);
    $27 = ($22|0)==($26|0);
    if (!($27)) {
     $28 = ($22>>>0)<($2>>>0);
     if ($28) {
      _abort();
      // unreachable;
     }
     $29 = ((($22)) + 12|0);
     $30 = HEAP32[$29>>2]|0;
     $31 = ($30|0)==($14|0);
     if (!($31)) {
      _abort();
      // unreachable;
     }
    }
    $32 = ($24|0)==($22|0);
    if ($32) {
     $33 = 1 << $19;
     $34 = $33 ^ -1;
     $35 = HEAP32[3008>>2]|0;
     $36 = $35 & $34;
     HEAP32[3008>>2] = $36;
     $p$0 = $14;$psize$0 = $15;
     break;
    }
    $37 = ($24|0)==($26|0);
    if ($37) {
     $$pre60 = ((($24)) + 8|0);
     $$pre$phi61Z2D = $$pre60;
    } else {
     $38 = ($24>>>0)<($2>>>0);
     if ($38) {
      _abort();
      // unreachable;
     }
     $39 = ((($24)) + 8|0);
     $40 = HEAP32[$39>>2]|0;
     $41 = ($40|0)==($14|0);
     if ($41) {
      $$pre$phi61Z2D = $39;
     } else {
      _abort();
      // unreachable;
     }
    }
    $42 = ((($22)) + 12|0);
    HEAP32[$42>>2] = $24;
    HEAP32[$$pre$phi61Z2D>>2] = $22;
    $p$0 = $14;$psize$0 = $15;
    break;
   }
   $$sum22 = (($$sum2) + 24)|0;
   $43 = (($mem) + ($$sum22)|0);
   $44 = HEAP32[$43>>2]|0;
   $$sum23 = (($$sum2) + 12)|0;
   $45 = (($mem) + ($$sum23)|0);
   $46 = HEAP32[$45>>2]|0;
   $47 = ($46|0)==($14|0);
   do {
    if ($47) {
     $$sum25 = (($$sum2) + 20)|0;
     $57 = (($mem) + ($$sum25)|0);
     $58 = HEAP32[$57>>2]|0;
     $59 = ($58|0)==(0|0);
     if ($59) {
      $$sum24 = (($$sum2) + 16)|0;
      $60 = (($mem) + ($$sum24)|0);
      $61 = HEAP32[$60>>2]|0;
      $62 = ($61|0)==(0|0);
      if ($62) {
       $R$1 = 0;
       break;
      } else {
       $R$0 = $61;$RP$0 = $60;
      }
     } else {
      $R$0 = $58;$RP$0 = $57;
     }
     while(1) {
      $63 = ((($R$0)) + 20|0);
      $64 = HEAP32[$63>>2]|0;
      $65 = ($64|0)==(0|0);
      if (!($65)) {
       $R$0 = $64;$RP$0 = $63;
       continue;
      }
      $66 = ((($R$0)) + 16|0);
      $67 = HEAP32[$66>>2]|0;
      $68 = ($67|0)==(0|0);
      if ($68) {
       $R$0$lcssa = $R$0;$RP$0$lcssa = $RP$0;
       break;
      } else {
       $R$0 = $67;$RP$0 = $66;
      }
     }
     $69 = ($RP$0$lcssa>>>0)<($2>>>0);
     if ($69) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$RP$0$lcssa>>2] = 0;
      $R$1 = $R$0$lcssa;
      break;
     }
    } else {
     $$sum29 = (($$sum2) + 8)|0;
     $48 = (($mem) + ($$sum29)|0);
     $49 = HEAP32[$48>>2]|0;
     $50 = ($49>>>0)<($2>>>0);
     if ($50) {
      _abort();
      // unreachable;
     }
     $51 = ((($49)) + 12|0);
     $52 = HEAP32[$51>>2]|0;
     $53 = ($52|0)==($14|0);
     if (!($53)) {
      _abort();
      // unreachable;
     }
     $54 = ((($46)) + 8|0);
     $55 = HEAP32[$54>>2]|0;
     $56 = ($55|0)==($14|0);
     if ($56) {
      HEAP32[$51>>2] = $46;
      HEAP32[$54>>2] = $49;
      $R$1 = $46;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $70 = ($44|0)==(0|0);
   if ($70) {
    $p$0 = $14;$psize$0 = $15;
   } else {
    $$sum26 = (($$sum2) + 28)|0;
    $71 = (($mem) + ($$sum26)|0);
    $72 = HEAP32[$71>>2]|0;
    $73 = (3312 + ($72<<2)|0);
    $74 = HEAP32[$73>>2]|0;
    $75 = ($14|0)==($74|0);
    if ($75) {
     HEAP32[$73>>2] = $R$1;
     $cond = ($R$1|0)==(0|0);
     if ($cond) {
      $76 = 1 << $72;
      $77 = $76 ^ -1;
      $78 = HEAP32[(3012)>>2]|0;
      $79 = $78 & $77;
      HEAP32[(3012)>>2] = $79;
      $p$0 = $14;$psize$0 = $15;
      break;
     }
    } else {
     $80 = HEAP32[(3024)>>2]|0;
     $81 = ($44>>>0)<($80>>>0);
     if ($81) {
      _abort();
      // unreachable;
     }
     $82 = ((($44)) + 16|0);
     $83 = HEAP32[$82>>2]|0;
     $84 = ($83|0)==($14|0);
     if ($84) {
      HEAP32[$82>>2] = $R$1;
     } else {
      $85 = ((($44)) + 20|0);
      HEAP32[$85>>2] = $R$1;
     }
     $86 = ($R$1|0)==(0|0);
     if ($86) {
      $p$0 = $14;$psize$0 = $15;
      break;
     }
    }
    $87 = HEAP32[(3024)>>2]|0;
    $88 = ($R$1>>>0)<($87>>>0);
    if ($88) {
     _abort();
     // unreachable;
    }
    $89 = ((($R$1)) + 24|0);
    HEAP32[$89>>2] = $44;
    $$sum27 = (($$sum2) + 16)|0;
    $90 = (($mem) + ($$sum27)|0);
    $91 = HEAP32[$90>>2]|0;
    $92 = ($91|0)==(0|0);
    do {
     if (!($92)) {
      $93 = ($91>>>0)<($87>>>0);
      if ($93) {
       _abort();
       // unreachable;
      } else {
       $94 = ((($R$1)) + 16|0);
       HEAP32[$94>>2] = $91;
       $95 = ((($91)) + 24|0);
       HEAP32[$95>>2] = $R$1;
       break;
      }
     }
    } while(0);
    $$sum28 = (($$sum2) + 20)|0;
    $96 = (($mem) + ($$sum28)|0);
    $97 = HEAP32[$96>>2]|0;
    $98 = ($97|0)==(0|0);
    if ($98) {
     $p$0 = $14;$psize$0 = $15;
    } else {
     $99 = HEAP32[(3024)>>2]|0;
     $100 = ($97>>>0)<($99>>>0);
     if ($100) {
      _abort();
      // unreachable;
     } else {
      $101 = ((($R$1)) + 20|0);
      HEAP32[$101>>2] = $97;
      $102 = ((($97)) + 24|0);
      HEAP32[$102>>2] = $R$1;
      $p$0 = $14;$psize$0 = $15;
      break;
     }
    }
   }
  } else {
   $p$0 = $1;$psize$0 = $8;
  }
 } while(0);
 $110 = ($p$0>>>0)<($9>>>0);
 if (!($110)) {
  _abort();
  // unreachable;
 }
 $$sum19 = (($8) + -4)|0;
 $111 = (($mem) + ($$sum19)|0);
 $112 = HEAP32[$111>>2]|0;
 $113 = $112 & 1;
 $114 = ($113|0)==(0);
 if ($114) {
  _abort();
  // unreachable;
 }
 $115 = $112 & 2;
 $116 = ($115|0)==(0);
 if ($116) {
  $117 = HEAP32[(3032)>>2]|0;
  $118 = ($9|0)==($117|0);
  if ($118) {
   $119 = HEAP32[(3020)>>2]|0;
   $120 = (($119) + ($psize$0))|0;
   HEAP32[(3020)>>2] = $120;
   HEAP32[(3032)>>2] = $p$0;
   $121 = $120 | 1;
   $122 = ((($p$0)) + 4|0);
   HEAP32[$122>>2] = $121;
   $123 = HEAP32[(3028)>>2]|0;
   $124 = ($p$0|0)==($123|0);
   if (!($124)) {
    return;
   }
   HEAP32[(3028)>>2] = 0;
   HEAP32[(3016)>>2] = 0;
   return;
  }
  $125 = HEAP32[(3028)>>2]|0;
  $126 = ($9|0)==($125|0);
  if ($126) {
   $127 = HEAP32[(3016)>>2]|0;
   $128 = (($127) + ($psize$0))|0;
   HEAP32[(3016)>>2] = $128;
   HEAP32[(3028)>>2] = $p$0;
   $129 = $128 | 1;
   $130 = ((($p$0)) + 4|0);
   HEAP32[$130>>2] = $129;
   $131 = (($p$0) + ($128)|0);
   HEAP32[$131>>2] = $128;
   return;
  }
  $132 = $112 & -8;
  $133 = (($132) + ($psize$0))|0;
  $134 = $112 >>> 3;
  $135 = ($112>>>0)<(256);
  do {
   if ($135) {
    $136 = (($mem) + ($8)|0);
    $137 = HEAP32[$136>>2]|0;
    $$sum1718 = $8 | 4;
    $138 = (($mem) + ($$sum1718)|0);
    $139 = HEAP32[$138>>2]|0;
    $140 = $134 << 1;
    $141 = (3048 + ($140<<2)|0);
    $142 = ($137|0)==($141|0);
    if (!($142)) {
     $143 = HEAP32[(3024)>>2]|0;
     $144 = ($137>>>0)<($143>>>0);
     if ($144) {
      _abort();
      // unreachable;
     }
     $145 = ((($137)) + 12|0);
     $146 = HEAP32[$145>>2]|0;
     $147 = ($146|0)==($9|0);
     if (!($147)) {
      _abort();
      // unreachable;
     }
    }
    $148 = ($139|0)==($137|0);
    if ($148) {
     $149 = 1 << $134;
     $150 = $149 ^ -1;
     $151 = HEAP32[3008>>2]|0;
     $152 = $151 & $150;
     HEAP32[3008>>2] = $152;
     break;
    }
    $153 = ($139|0)==($141|0);
    if ($153) {
     $$pre58 = ((($139)) + 8|0);
     $$pre$phi59Z2D = $$pre58;
    } else {
     $154 = HEAP32[(3024)>>2]|0;
     $155 = ($139>>>0)<($154>>>0);
     if ($155) {
      _abort();
      // unreachable;
     }
     $156 = ((($139)) + 8|0);
     $157 = HEAP32[$156>>2]|0;
     $158 = ($157|0)==($9|0);
     if ($158) {
      $$pre$phi59Z2D = $156;
     } else {
      _abort();
      // unreachable;
     }
    }
    $159 = ((($137)) + 12|0);
    HEAP32[$159>>2] = $139;
    HEAP32[$$pre$phi59Z2D>>2] = $137;
   } else {
    $$sum5 = (($8) + 16)|0;
    $160 = (($mem) + ($$sum5)|0);
    $161 = HEAP32[$160>>2]|0;
    $$sum67 = $8 | 4;
    $162 = (($mem) + ($$sum67)|0);
    $163 = HEAP32[$162>>2]|0;
    $164 = ($163|0)==($9|0);
    do {
     if ($164) {
      $$sum9 = (($8) + 12)|0;
      $175 = (($mem) + ($$sum9)|0);
      $176 = HEAP32[$175>>2]|0;
      $177 = ($176|0)==(0|0);
      if ($177) {
       $$sum8 = (($8) + 8)|0;
       $178 = (($mem) + ($$sum8)|0);
       $179 = HEAP32[$178>>2]|0;
       $180 = ($179|0)==(0|0);
       if ($180) {
        $R7$1 = 0;
        break;
       } else {
        $R7$0 = $179;$RP9$0 = $178;
       }
      } else {
       $R7$0 = $176;$RP9$0 = $175;
      }
      while(1) {
       $181 = ((($R7$0)) + 20|0);
       $182 = HEAP32[$181>>2]|0;
       $183 = ($182|0)==(0|0);
       if (!($183)) {
        $R7$0 = $182;$RP9$0 = $181;
        continue;
       }
       $184 = ((($R7$0)) + 16|0);
       $185 = HEAP32[$184>>2]|0;
       $186 = ($185|0)==(0|0);
       if ($186) {
        $R7$0$lcssa = $R7$0;$RP9$0$lcssa = $RP9$0;
        break;
       } else {
        $R7$0 = $185;$RP9$0 = $184;
       }
      }
      $187 = HEAP32[(3024)>>2]|0;
      $188 = ($RP9$0$lcssa>>>0)<($187>>>0);
      if ($188) {
       _abort();
       // unreachable;
      } else {
       HEAP32[$RP9$0$lcssa>>2] = 0;
       $R7$1 = $R7$0$lcssa;
       break;
      }
     } else {
      $165 = (($mem) + ($8)|0);
      $166 = HEAP32[$165>>2]|0;
      $167 = HEAP32[(3024)>>2]|0;
      $168 = ($166>>>0)<($167>>>0);
      if ($168) {
       _abort();
       // unreachable;
      }
      $169 = ((($166)) + 12|0);
      $170 = HEAP32[$169>>2]|0;
      $171 = ($170|0)==($9|0);
      if (!($171)) {
       _abort();
       // unreachable;
      }
      $172 = ((($163)) + 8|0);
      $173 = HEAP32[$172>>2]|0;
      $174 = ($173|0)==($9|0);
      if ($174) {
       HEAP32[$169>>2] = $163;
       HEAP32[$172>>2] = $166;
       $R7$1 = $163;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $189 = ($161|0)==(0|0);
    if (!($189)) {
     $$sum12 = (($8) + 20)|0;
     $190 = (($mem) + ($$sum12)|0);
     $191 = HEAP32[$190>>2]|0;
     $192 = (3312 + ($191<<2)|0);
     $193 = HEAP32[$192>>2]|0;
     $194 = ($9|0)==($193|0);
     if ($194) {
      HEAP32[$192>>2] = $R7$1;
      $cond47 = ($R7$1|0)==(0|0);
      if ($cond47) {
       $195 = 1 << $191;
       $196 = $195 ^ -1;
       $197 = HEAP32[(3012)>>2]|0;
       $198 = $197 & $196;
       HEAP32[(3012)>>2] = $198;
       break;
      }
     } else {
      $199 = HEAP32[(3024)>>2]|0;
      $200 = ($161>>>0)<($199>>>0);
      if ($200) {
       _abort();
       // unreachable;
      }
      $201 = ((($161)) + 16|0);
      $202 = HEAP32[$201>>2]|0;
      $203 = ($202|0)==($9|0);
      if ($203) {
       HEAP32[$201>>2] = $R7$1;
      } else {
       $204 = ((($161)) + 20|0);
       HEAP32[$204>>2] = $R7$1;
      }
      $205 = ($R7$1|0)==(0|0);
      if ($205) {
       break;
      }
     }
     $206 = HEAP32[(3024)>>2]|0;
     $207 = ($R7$1>>>0)<($206>>>0);
     if ($207) {
      _abort();
      // unreachable;
     }
     $208 = ((($R7$1)) + 24|0);
     HEAP32[$208>>2] = $161;
     $$sum13 = (($8) + 8)|0;
     $209 = (($mem) + ($$sum13)|0);
     $210 = HEAP32[$209>>2]|0;
     $211 = ($210|0)==(0|0);
     do {
      if (!($211)) {
       $212 = ($210>>>0)<($206>>>0);
       if ($212) {
        _abort();
        // unreachable;
       } else {
        $213 = ((($R7$1)) + 16|0);
        HEAP32[$213>>2] = $210;
        $214 = ((($210)) + 24|0);
        HEAP32[$214>>2] = $R7$1;
        break;
       }
      }
     } while(0);
     $$sum14 = (($8) + 12)|0;
     $215 = (($mem) + ($$sum14)|0);
     $216 = HEAP32[$215>>2]|0;
     $217 = ($216|0)==(0|0);
     if (!($217)) {
      $218 = HEAP32[(3024)>>2]|0;
      $219 = ($216>>>0)<($218>>>0);
      if ($219) {
       _abort();
       // unreachable;
      } else {
       $220 = ((($R7$1)) + 20|0);
       HEAP32[$220>>2] = $216;
       $221 = ((($216)) + 24|0);
       HEAP32[$221>>2] = $R7$1;
       break;
      }
     }
    }
   }
  } while(0);
  $222 = $133 | 1;
  $223 = ((($p$0)) + 4|0);
  HEAP32[$223>>2] = $222;
  $224 = (($p$0) + ($133)|0);
  HEAP32[$224>>2] = $133;
  $225 = HEAP32[(3028)>>2]|0;
  $226 = ($p$0|0)==($225|0);
  if ($226) {
   HEAP32[(3016)>>2] = $133;
   return;
  } else {
   $psize$1 = $133;
  }
 } else {
  $227 = $112 & -2;
  HEAP32[$111>>2] = $227;
  $228 = $psize$0 | 1;
  $229 = ((($p$0)) + 4|0);
  HEAP32[$229>>2] = $228;
  $230 = (($p$0) + ($psize$0)|0);
  HEAP32[$230>>2] = $psize$0;
  $psize$1 = $psize$0;
 }
 $231 = $psize$1 >>> 3;
 $232 = ($psize$1>>>0)<(256);
 if ($232) {
  $233 = $231 << 1;
  $234 = (3048 + ($233<<2)|0);
  $235 = HEAP32[3008>>2]|0;
  $236 = 1 << $231;
  $237 = $235 & $236;
  $238 = ($237|0)==(0);
  if ($238) {
   $239 = $235 | $236;
   HEAP32[3008>>2] = $239;
   $$pre = (($233) + 2)|0;
   $$pre57 = (3048 + ($$pre<<2)|0);
   $$pre$phiZ2D = $$pre57;$F16$0 = $234;
  } else {
   $$sum11 = (($233) + 2)|0;
   $240 = (3048 + ($$sum11<<2)|0);
   $241 = HEAP32[$240>>2]|0;
   $242 = HEAP32[(3024)>>2]|0;
   $243 = ($241>>>0)<($242>>>0);
   if ($243) {
    _abort();
    // unreachable;
   } else {
    $$pre$phiZ2D = $240;$F16$0 = $241;
   }
  }
  HEAP32[$$pre$phiZ2D>>2] = $p$0;
  $244 = ((($F16$0)) + 12|0);
  HEAP32[$244>>2] = $p$0;
  $245 = ((($p$0)) + 8|0);
  HEAP32[$245>>2] = $F16$0;
  $246 = ((($p$0)) + 12|0);
  HEAP32[$246>>2] = $234;
  return;
 }
 $247 = $psize$1 >>> 8;
 $248 = ($247|0)==(0);
 if ($248) {
  $I18$0 = 0;
 } else {
  $249 = ($psize$1>>>0)>(16777215);
  if ($249) {
   $I18$0 = 31;
  } else {
   $250 = (($247) + 1048320)|0;
   $251 = $250 >>> 16;
   $252 = $251 & 8;
   $253 = $247 << $252;
   $254 = (($253) + 520192)|0;
   $255 = $254 >>> 16;
   $256 = $255 & 4;
   $257 = $256 | $252;
   $258 = $253 << $256;
   $259 = (($258) + 245760)|0;
   $260 = $259 >>> 16;
   $261 = $260 & 2;
   $262 = $257 | $261;
   $263 = (14 - ($262))|0;
   $264 = $258 << $261;
   $265 = $264 >>> 15;
   $266 = (($263) + ($265))|0;
   $267 = $266 << 1;
   $268 = (($266) + 7)|0;
   $269 = $psize$1 >>> $268;
   $270 = $269 & 1;
   $271 = $270 | $267;
   $I18$0 = $271;
  }
 }
 $272 = (3312 + ($I18$0<<2)|0);
 $273 = ((($p$0)) + 28|0);
 HEAP32[$273>>2] = $I18$0;
 $274 = ((($p$0)) + 16|0);
 $275 = ((($p$0)) + 20|0);
 HEAP32[$275>>2] = 0;
 HEAP32[$274>>2] = 0;
 $276 = HEAP32[(3012)>>2]|0;
 $277 = 1 << $I18$0;
 $278 = $276 & $277;
 $279 = ($278|0)==(0);
 L199: do {
  if ($279) {
   $280 = $276 | $277;
   HEAP32[(3012)>>2] = $280;
   HEAP32[$272>>2] = $p$0;
   $281 = ((($p$0)) + 24|0);
   HEAP32[$281>>2] = $272;
   $282 = ((($p$0)) + 12|0);
   HEAP32[$282>>2] = $p$0;
   $283 = ((($p$0)) + 8|0);
   HEAP32[$283>>2] = $p$0;
  } else {
   $284 = HEAP32[$272>>2]|0;
   $285 = ((($284)) + 4|0);
   $286 = HEAP32[$285>>2]|0;
   $287 = $286 & -8;
   $288 = ($287|0)==($psize$1|0);
   L202: do {
    if ($288) {
     $T$0$lcssa = $284;
    } else {
     $289 = ($I18$0|0)==(31);
     $290 = $I18$0 >>> 1;
     $291 = (25 - ($290))|0;
     $292 = $289 ? 0 : $291;
     $293 = $psize$1 << $292;
     $K19$052 = $293;$T$051 = $284;
     while(1) {
      $300 = $K19$052 >>> 31;
      $301 = (((($T$051)) + 16|0) + ($300<<2)|0);
      $296 = HEAP32[$301>>2]|0;
      $302 = ($296|0)==(0|0);
      if ($302) {
       $$lcssa = $301;$T$051$lcssa = $T$051;
       break;
      }
      $294 = $K19$052 << 1;
      $295 = ((($296)) + 4|0);
      $297 = HEAP32[$295>>2]|0;
      $298 = $297 & -8;
      $299 = ($298|0)==($psize$1|0);
      if ($299) {
       $T$0$lcssa = $296;
       break L202;
      } else {
       $K19$052 = $294;$T$051 = $296;
      }
     }
     $303 = HEAP32[(3024)>>2]|0;
     $304 = ($$lcssa>>>0)<($303>>>0);
     if ($304) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$$lcssa>>2] = $p$0;
      $305 = ((($p$0)) + 24|0);
      HEAP32[$305>>2] = $T$051$lcssa;
      $306 = ((($p$0)) + 12|0);
      HEAP32[$306>>2] = $p$0;
      $307 = ((($p$0)) + 8|0);
      HEAP32[$307>>2] = $p$0;
      break L199;
     }
    }
   } while(0);
   $308 = ((($T$0$lcssa)) + 8|0);
   $309 = HEAP32[$308>>2]|0;
   $310 = HEAP32[(3024)>>2]|0;
   $311 = ($309>>>0)>=($310>>>0);
   $not$ = ($T$0$lcssa>>>0)>=($310>>>0);
   $312 = $311 & $not$;
   if ($312) {
    $313 = ((($309)) + 12|0);
    HEAP32[$313>>2] = $p$0;
    HEAP32[$308>>2] = $p$0;
    $314 = ((($p$0)) + 8|0);
    HEAP32[$314>>2] = $309;
    $315 = ((($p$0)) + 12|0);
    HEAP32[$315>>2] = $T$0$lcssa;
    $316 = ((($p$0)) + 24|0);
    HEAP32[$316>>2] = 0;
    break;
   } else {
    _abort();
    // unreachable;
   }
  }
 } while(0);
 $317 = HEAP32[(3040)>>2]|0;
 $318 = (($317) + -1)|0;
 HEAP32[(3040)>>2] = $318;
 $319 = ($318|0)==(0);
 if ($319) {
  $sp$0$in$i = (3464);
 } else {
  return;
 }
 while(1) {
  $sp$0$i = HEAP32[$sp$0$in$i>>2]|0;
  $320 = ($sp$0$i|0)==(0|0);
  $321 = ((($sp$0$i)) + 8|0);
  if ($320) {
   break;
  } else {
   $sp$0$in$i = $321;
  }
 }
 HEAP32[(3040)>>2] = -1;
 return;
}
function _realloc($oldmem,$bytes) {
 $oldmem = $oldmem|0;
 $bytes = $bytes|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $mem$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($oldmem|0)==(0|0);
 if ($0) {
  $1 = (_malloc($bytes)|0);
  $mem$0 = $1;
  return ($mem$0|0);
 }
 $2 = ($bytes>>>0)>(4294967231);
 if ($2) {
  $3 = (___errno_location()|0);
  HEAP32[$3>>2] = 12;
  $mem$0 = 0;
  return ($mem$0|0);
 }
 $4 = ($bytes>>>0)<(11);
 $5 = (($bytes) + 11)|0;
 $6 = $5 & -8;
 $7 = $4 ? 16 : $6;
 $8 = ((($oldmem)) + -8|0);
 $9 = (_try_realloc_chunk($8,$7)|0);
 $10 = ($9|0)==(0|0);
 if (!($10)) {
  $11 = ((($9)) + 8|0);
  $mem$0 = $11;
  return ($mem$0|0);
 }
 $12 = (_malloc($bytes)|0);
 $13 = ($12|0)==(0|0);
 if ($13) {
  $mem$0 = 0;
  return ($mem$0|0);
 }
 $14 = ((($oldmem)) + -4|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = $15 & -8;
 $17 = $15 & 3;
 $18 = ($17|0)==(0);
 $19 = $18 ? 8 : 4;
 $20 = (($16) - ($19))|0;
 $21 = ($20>>>0)<($bytes>>>0);
 $22 = $21 ? $20 : $bytes;
 _memcpy(($12|0),($oldmem|0),($22|0))|0;
 _free($oldmem);
 $mem$0 = $12;
 return ($mem$0|0);
}
function _isspace($c) {
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($c|0)==(32);
 $1 = (($c) + -9)|0;
 $2 = ($1>>>0)<(5);
 $3 = $0 | $2;
 $4 = $3&1;
 return ($4|0);
}
function _isxdigit($c) {
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $isdigit = 0, $isdigittmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isdigittmp = (($c) + -48)|0;
 $isdigit = ($isdigittmp>>>0)<(10);
 if ($isdigit) {
  $4 = 1;
  $3 = $4&1;
  return ($3|0);
 }
 $0 = $c | 32;
 $1 = (($0) + -97)|0;
 $2 = ($1>>>0)<(6);
 $4 = $2;
 $3 = $4&1;
 return ($3|0);
}
function ___intscan($f,$base,$pok,$0,$1) {
 $f = $f|0;
 $base = $base|0;
 $pok = $pok|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$1 = 0, $$122 = 0, $$123 = 0, $$base21 = 0, $$lcssa = 0, $$lcssa130 = 0, $$lcssa131 = 0, $$lcssa132 = 0, $$lcssa133 = 0, $$lcssa134 = 0, $$lcssa135 = 0, $$sum = 0, $$sum14 = 0, $$sum1445 = 0, $$sum15 = 0, $$sum16 = 0, $$sum17 = 0, $$sum18 = 0, $$sum1865 = 0, $$sum19 = 0;
 var $$sum20 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0;
 var $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0;
 var $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0;
 var $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0;
 var $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0;
 var $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0;
 var $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0;
 var $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $c$0 = 0, $c$1 = 0, $c$124 = 0, $c$2$be = 0, $c$2$be$lcssa = 0, $c$2$lcssa = 0, $c$3$be = 0, $c$3$lcssa = 0, $c$371 = 0;
 var $c$4$be = 0, $c$4$be$lcssa = 0, $c$4$lcssa = 0, $c$5$be = 0, $c$6$be = 0, $c$6$be$lcssa = 0, $c$6$lcssa = 0, $c$7$be = 0, $c$753 = 0, $c$8 = 0, $c$9$be = 0, $neg$0 = 0, $or$cond = 0, $or$cond12 = 0, $or$cond40 = 0, $or$cond5 = 0, $or$cond7 = 0, $x$082 = 0, $x$146 = 0, $x$266 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($base>>>0)>(36);
 if ($2) {
  $5 = (___errno_location()|0);
  HEAP32[$5>>2] = 22;
  $282 = 0;$283 = 0;
  tempRet0 = ($282);
  return ($283|0);
 }
 $3 = ((($f)) + 4|0);
 $4 = ((($f)) + 100|0);
 while(1) {
  $6 = HEAP32[$3>>2]|0;
  $7 = HEAP32[$4>>2]|0;
  $8 = ($6>>>0)<($7>>>0);
  if ($8) {
   $9 = ((($6)) + 1|0);
   HEAP32[$3>>2] = $9;
   $10 = HEAP8[$6>>0]|0;
   $11 = $10&255;
   $13 = $11;
  } else {
   $12 = (___shgetc($f)|0);
   $13 = $12;
  }
  $14 = (_isspace($13)|0);
  $15 = ($14|0)==(0);
  if ($15) {
   $$lcssa135 = $13;
   break;
  }
 }
 $16 = ($$lcssa135|0)==(45);
 do {
  if ((($$lcssa135|0) == 43) | (($$lcssa135|0) == 45)) {
   $17 = $16 << 31 >> 31;
   $18 = HEAP32[$3>>2]|0;
   $19 = HEAP32[$4>>2]|0;
   $20 = ($18>>>0)<($19>>>0);
   if ($20) {
    $21 = ((($18)) + 1|0);
    HEAP32[$3>>2] = $21;
    $22 = HEAP8[$18>>0]|0;
    $23 = $22&255;
    $c$0 = $23;$neg$0 = $17;
    break;
   } else {
    $24 = (___shgetc($f)|0);
    $c$0 = $24;$neg$0 = $17;
    break;
   }
  } else {
   $c$0 = $$lcssa135;$neg$0 = 0;
  }
 } while(0);
 $25 = ($base|0)==(0);
 $26 = $base & -17;
 $27 = ($26|0)==(0);
 $28 = ($c$0|0)==(48);
 $or$cond5 = $27 & $28;
 do {
  if ($or$cond5) {
   $29 = HEAP32[$3>>2]|0;
   $30 = HEAP32[$4>>2]|0;
   $31 = ($29>>>0)<($30>>>0);
   if ($31) {
    $32 = ((($29)) + 1|0);
    HEAP32[$3>>2] = $32;
    $33 = HEAP8[$29>>0]|0;
    $34 = $33&255;
    $37 = $34;
   } else {
    $35 = (___shgetc($f)|0);
    $37 = $35;
   }
   $36 = $37 | 32;
   $38 = ($36|0)==(120);
   if (!($38)) {
    if ($25) {
     $$123 = 8;$c$124 = $37;
     label = 46;
     break;
    } else {
     $$1 = $base;$c$1 = $37;
     label = 32;
     break;
    }
   }
   $39 = HEAP32[$3>>2]|0;
   $40 = HEAP32[$4>>2]|0;
   $41 = ($39>>>0)<($40>>>0);
   if ($41) {
    $42 = ((($39)) + 1|0);
    HEAP32[$3>>2] = $42;
    $43 = HEAP8[$39>>0]|0;
    $44 = $43&255;
    $46 = $44;
   } else {
    $45 = (___shgetc($f)|0);
    $46 = $45;
   }
   $$sum20 = (($46) + 1)|0;
   $47 = (3504 + ($$sum20)|0);
   $48 = HEAP8[$47>>0]|0;
   $49 = ($48&255)>(15);
   if ($49) {
    $50 = HEAP32[$4>>2]|0;
    $51 = ($50|0)==(0|0);
    if (!($51)) {
     $52 = HEAP32[$3>>2]|0;
     $53 = ((($52)) + -1|0);
     HEAP32[$3>>2] = $53;
    }
    $54 = ($pok|0)==(0);
    if ($54) {
     ___shlim($f,0);
     $282 = 0;$283 = 0;
     tempRet0 = ($282);
     return ($283|0);
    }
    if ($51) {
     $282 = 0;$283 = 0;
     tempRet0 = ($282);
     return ($283|0);
    }
    $55 = HEAP32[$3>>2]|0;
    $56 = ((($55)) + -1|0);
    HEAP32[$3>>2] = $56;
    $282 = 0;$283 = 0;
    tempRet0 = ($282);
    return ($283|0);
   } else {
    $$123 = 16;$c$124 = $46;
    label = 46;
   }
  } else {
   $$base21 = $25 ? 10 : $base;
   $$sum = (($c$0) + 1)|0;
   $57 = (3504 + ($$sum)|0);
   $58 = HEAP8[$57>>0]|0;
   $59 = $58&255;
   $60 = ($59>>>0)<($$base21>>>0);
   if ($60) {
    $$1 = $$base21;$c$1 = $c$0;
    label = 32;
   } else {
    $61 = HEAP32[$4>>2]|0;
    $62 = ($61|0)==(0|0);
    if (!($62)) {
     $63 = HEAP32[$3>>2]|0;
     $64 = ((($63)) + -1|0);
     HEAP32[$3>>2] = $64;
    }
    ___shlim($f,0);
    $65 = (___errno_location()|0);
    HEAP32[$65>>2] = 22;
    $282 = 0;$283 = 0;
    tempRet0 = ($282);
    return ($283|0);
   }
  }
 } while(0);
 if ((label|0) == 32) {
  $66 = ($$1|0)==(10);
  if ($66) {
   $67 = (($c$1) + -48)|0;
   $68 = ($67>>>0)<(10);
   if ($68) {
    $71 = $67;$x$082 = 0;
    while(1) {
     $69 = ($x$082*10)|0;
     $70 = (($69) + ($71))|0;
     $72 = HEAP32[$3>>2]|0;
     $73 = HEAP32[$4>>2]|0;
     $74 = ($72>>>0)<($73>>>0);
     if ($74) {
      $75 = ((($72)) + 1|0);
      HEAP32[$3>>2] = $75;
      $76 = HEAP8[$72>>0]|0;
      $77 = $76&255;
      $c$2$be = $77;
     } else {
      $78 = (___shgetc($f)|0);
      $c$2$be = $78;
     }
     $79 = (($c$2$be) + -48)|0;
     $80 = ($79>>>0)<(10);
     $81 = ($70>>>0)<(429496729);
     $82 = $80 & $81;
     if ($82) {
      $71 = $79;$x$082 = $70;
     } else {
      $$lcssa134 = $70;$c$2$be$lcssa = $c$2$be;
      break;
     }
    }
    $284 = $$lcssa134;$285 = 0;$c$2$lcssa = $c$2$be$lcssa;
   } else {
    $284 = 0;$285 = 0;$c$2$lcssa = $c$1;
   }
   $83 = (($c$2$lcssa) + -48)|0;
   $84 = ($83>>>0)<(10);
   if ($84) {
    $85 = $284;$86 = $285;$89 = $83;$c$371 = $c$2$lcssa;
    while(1) {
     $87 = (___muldi3(($85|0),($86|0),10,0)|0);
     $88 = tempRet0;
     $90 = ($89|0)<(0);
     $91 = $90 << 31 >> 31;
     $92 = $89 ^ -1;
     $93 = $91 ^ -1;
     $94 = ($88>>>0)>($93>>>0);
     $95 = ($87>>>0)>($92>>>0);
     $96 = ($88|0)==($93|0);
     $97 = $96 & $95;
     $98 = $94 | $97;
     if ($98) {
      $$lcssa = $89;$286 = $85;$287 = $86;$c$3$lcssa = $c$371;
      break;
     }
     $99 = (_i64Add(($87|0),($88|0),($89|0),($91|0))|0);
     $100 = tempRet0;
     $101 = HEAP32[$3>>2]|0;
     $102 = HEAP32[$4>>2]|0;
     $103 = ($101>>>0)<($102>>>0);
     if ($103) {
      $104 = ((($101)) + 1|0);
      HEAP32[$3>>2] = $104;
      $105 = HEAP8[$101>>0]|0;
      $106 = $105&255;
      $c$3$be = $106;
     } else {
      $107 = (___shgetc($f)|0);
      $c$3$be = $107;
     }
     $108 = (($c$3$be) + -48)|0;
     $109 = ($108>>>0)<(10);
     $110 = ($100>>>0)<(429496729);
     $111 = ($99>>>0)<(2576980378);
     $112 = ($100|0)==(429496729);
     $113 = $112 & $111;
     $114 = $110 | $113;
     $or$cond7 = $109 & $114;
     if ($or$cond7) {
      $85 = $99;$86 = $100;$89 = $108;$c$371 = $c$3$be;
     } else {
      $$lcssa = $108;$286 = $99;$287 = $100;$c$3$lcssa = $c$3$be;
      break;
     }
    }
    $115 = ($$lcssa>>>0)>(9);
    if ($115) {
     $255 = $287;$257 = $286;
    } else {
     $$122 = 10;$288 = $286;$289 = $287;$c$8 = $c$3$lcssa;
     label = 72;
    }
   } else {
    $255 = $285;$257 = $284;
   }
  } else {
   $$123 = $$1;$c$124 = $c$1;
   label = 46;
  }
 }
 L69: do {
  if ((label|0) == 46) {
   $116 = (($$123) + -1)|0;
   $117 = $116 & $$123;
   $118 = ($117|0)==(0);
   if ($118) {
    $123 = ($$123*23)|0;
    $124 = $123 >>> 5;
    $125 = $124 & 7;
    $126 = (3768 + ($125)|0);
    $127 = HEAP8[$126>>0]|0;
    $128 = $127 << 24 >> 24;
    $$sum1445 = (($c$124) + 1)|0;
    $129 = (3504 + ($$sum1445)|0);
    $130 = HEAP8[$129>>0]|0;
    $131 = $130&255;
    $132 = ($131>>>0)<($$123>>>0);
    if ($132) {
     $135 = $131;$x$146 = 0;
     while(1) {
      $133 = $x$146 << $128;
      $134 = $135 | $133;
      $136 = HEAP32[$3>>2]|0;
      $137 = HEAP32[$4>>2]|0;
      $138 = ($136>>>0)<($137>>>0);
      if ($138) {
       $139 = ((($136)) + 1|0);
       HEAP32[$3>>2] = $139;
       $140 = HEAP8[$136>>0]|0;
       $141 = $140&255;
       $c$4$be = $141;
      } else {
       $142 = (___shgetc($f)|0);
       $c$4$be = $142;
      }
      $$sum14 = (($c$4$be) + 1)|0;
      $143 = (3504 + ($$sum14)|0);
      $144 = HEAP8[$143>>0]|0;
      $145 = $144&255;
      $146 = ($145>>>0)<($$123>>>0);
      $147 = ($134>>>0)<(134217728);
      $148 = $147 & $146;
      if ($148) {
       $135 = $145;$x$146 = $134;
      } else {
       $$lcssa130 = $134;$$lcssa131 = $144;$c$4$be$lcssa = $c$4$be;
       break;
      }
     }
     $152 = $$lcssa131;$154 = 0;$156 = $$lcssa130;$c$4$lcssa = $c$4$be$lcssa;
    } else {
     $152 = $130;$154 = 0;$156 = 0;$c$4$lcssa = $c$124;
    }
    $149 = (_bitshift64Lshr(-1,-1,($128|0))|0);
    $150 = tempRet0;
    $151 = $152&255;
    $153 = ($151>>>0)>=($$123>>>0);
    $155 = ($154>>>0)>($150>>>0);
    $157 = ($156>>>0)>($149>>>0);
    $158 = ($154|0)==($150|0);
    $159 = $158 & $157;
    $160 = $155 | $159;
    $or$cond40 = $153 | $160;
    if ($or$cond40) {
     $$122 = $$123;$288 = $156;$289 = $154;$c$8 = $c$4$lcssa;
     label = 72;
     break;
    } else {
     $161 = $156;$162 = $154;$166 = $152;
    }
    while(1) {
     $163 = (_bitshift64Shl(($161|0),($162|0),($128|0))|0);
     $164 = tempRet0;
     $165 = $166&255;
     $167 = $165 | $163;
     $168 = HEAP32[$3>>2]|0;
     $169 = HEAP32[$4>>2]|0;
     $170 = ($168>>>0)<($169>>>0);
     if ($170) {
      $171 = ((($168)) + 1|0);
      HEAP32[$3>>2] = $171;
      $172 = HEAP8[$168>>0]|0;
      $173 = $172&255;
      $c$5$be = $173;
     } else {
      $174 = (___shgetc($f)|0);
      $c$5$be = $174;
     }
     $$sum15 = (($c$5$be) + 1)|0;
     $175 = (3504 + ($$sum15)|0);
     $176 = HEAP8[$175>>0]|0;
     $177 = $176&255;
     $178 = ($177>>>0)>=($$123>>>0);
     $179 = ($164>>>0)>($150>>>0);
     $180 = ($167>>>0)>($149>>>0);
     $181 = ($164|0)==($150|0);
     $182 = $181 & $180;
     $183 = $179 | $182;
     $or$cond = $178 | $183;
     if ($or$cond) {
      $$122 = $$123;$288 = $167;$289 = $164;$c$8 = $c$5$be;
      label = 72;
      break L69;
     } else {
      $161 = $167;$162 = $164;$166 = $176;
     }
    }
   }
   $$sum1865 = (($c$124) + 1)|0;
   $119 = (3504 + ($$sum1865)|0);
   $120 = HEAP8[$119>>0]|0;
   $121 = $120&255;
   $122 = ($121>>>0)<($$123>>>0);
   if ($122) {
    $186 = $121;$x$266 = 0;
    while(1) {
     $184 = Math_imul($x$266, $$123)|0;
     $185 = (($186) + ($184))|0;
     $187 = HEAP32[$3>>2]|0;
     $188 = HEAP32[$4>>2]|0;
     $189 = ($187>>>0)<($188>>>0);
     if ($189) {
      $190 = ((($187)) + 1|0);
      HEAP32[$3>>2] = $190;
      $191 = HEAP8[$187>>0]|0;
      $192 = $191&255;
      $c$6$be = $192;
     } else {
      $193 = (___shgetc($f)|0);
      $c$6$be = $193;
     }
     $$sum18 = (($c$6$be) + 1)|0;
     $194 = (3504 + ($$sum18)|0);
     $195 = HEAP8[$194>>0]|0;
     $196 = $195&255;
     $197 = ($196>>>0)<($$123>>>0);
     $198 = ($185>>>0)<(119304647);
     $199 = $198 & $197;
     if ($199) {
      $186 = $196;$x$266 = $185;
     } else {
      $$lcssa132 = $185;$$lcssa133 = $195;$c$6$be$lcssa = $c$6$be;
      break;
     }
    }
    $201 = $$lcssa133;$290 = $$lcssa132;$291 = 0;$c$6$lcssa = $c$6$be$lcssa;
   } else {
    $201 = $120;$290 = 0;$291 = 0;$c$6$lcssa = $c$124;
   }
   $200 = $201&255;
   $202 = ($200>>>0)<($$123>>>0);
   if ($202) {
    $203 = (___udivdi3(-1,-1,($$123|0),0)|0);
    $204 = tempRet0;
    $205 = $291;$207 = $290;$215 = $201;$c$753 = $c$6$lcssa;
    while(1) {
     $206 = ($205>>>0)>($204>>>0);
     $208 = ($207>>>0)>($203>>>0);
     $209 = ($205|0)==($204|0);
     $210 = $209 & $208;
     $211 = $206 | $210;
     if ($211) {
      $$122 = $$123;$288 = $207;$289 = $205;$c$8 = $c$753;
      label = 72;
      break L69;
     }
     $212 = (___muldi3(($207|0),($205|0),($$123|0),0)|0);
     $213 = tempRet0;
     $214 = $215&255;
     $216 = $214 ^ -1;
     $217 = ($213>>>0)>(4294967295);
     $218 = ($212>>>0)>($216>>>0);
     $219 = ($213|0)==(-1);
     $220 = $219 & $218;
     $221 = $217 | $220;
     if ($221) {
      $$122 = $$123;$288 = $207;$289 = $205;$c$8 = $c$753;
      label = 72;
      break L69;
     }
     $222 = (_i64Add(($214|0),0,($212|0),($213|0))|0);
     $223 = tempRet0;
     $224 = HEAP32[$3>>2]|0;
     $225 = HEAP32[$4>>2]|0;
     $226 = ($224>>>0)<($225>>>0);
     if ($226) {
      $227 = ((($224)) + 1|0);
      HEAP32[$3>>2] = $227;
      $228 = HEAP8[$224>>0]|0;
      $229 = $228&255;
      $c$7$be = $229;
     } else {
      $230 = (___shgetc($f)|0);
      $c$7$be = $230;
     }
     $$sum19 = (($c$7$be) + 1)|0;
     $231 = (3504 + ($$sum19)|0);
     $232 = HEAP8[$231>>0]|0;
     $233 = $232&255;
     $234 = ($233>>>0)<($$123>>>0);
     if ($234) {
      $205 = $223;$207 = $222;$215 = $232;$c$753 = $c$7$be;
     } else {
      $$122 = $$123;$288 = $222;$289 = $223;$c$8 = $c$7$be;
      label = 72;
      break;
     }
    }
   } else {
    $$122 = $$123;$288 = $290;$289 = $291;$c$8 = $c$6$lcssa;
    label = 72;
   }
  }
 } while(0);
 if ((label|0) == 72) {
  $$sum16 = (($c$8) + 1)|0;
  $235 = (3504 + ($$sum16)|0);
  $236 = HEAP8[$235>>0]|0;
  $237 = $236&255;
  $238 = ($237>>>0)<($$122>>>0);
  if ($238) {
   while(1) {
    $239 = HEAP32[$3>>2]|0;
    $240 = HEAP32[$4>>2]|0;
    $241 = ($239>>>0)<($240>>>0);
    if ($241) {
     $242 = ((($239)) + 1|0);
     HEAP32[$3>>2] = $242;
     $243 = HEAP8[$239>>0]|0;
     $244 = $243&255;
     $c$9$be = $244;
    } else {
     $245 = (___shgetc($f)|0);
     $c$9$be = $245;
    }
    $$sum17 = (($c$9$be) + 1)|0;
    $246 = (3504 + ($$sum17)|0);
    $247 = HEAP8[$246>>0]|0;
    $248 = $247&255;
    $249 = ($248>>>0)<($$122>>>0);
    if (!($249)) {
     break;
    }
   }
   $250 = (___errno_location()|0);
   HEAP32[$250>>2] = 34;
   $255 = $1;$257 = $0;
  } else {
   $255 = $289;$257 = $288;
  }
 }
 $251 = HEAP32[$4>>2]|0;
 $252 = ($251|0)==(0|0);
 if (!($252)) {
  $253 = HEAP32[$3>>2]|0;
  $254 = ((($253)) + -1|0);
  HEAP32[$3>>2] = $254;
 }
 $256 = ($255>>>0)<($1>>>0);
 $258 = ($257>>>0)<($0>>>0);
 $259 = ($255|0)==($1|0);
 $260 = $259 & $258;
 $261 = $256 | $260;
 if (!($261)) {
  $262 = $0 & 1;
  $263 = ($262|0)!=(0);
  $264 = (0)!=(0);
  $265 = $263 | $264;
  $266 = ($neg$0|0)!=(0);
  $or$cond12 = $265 | $266;
  if (!($or$cond12)) {
   $267 = (___errno_location()|0);
   HEAP32[$267>>2] = 34;
   $268 = (_i64Add(($0|0),($1|0),-1,-1)|0);
   $269 = tempRet0;
   $282 = $269;$283 = $268;
   tempRet0 = ($282);
   return ($283|0);
  }
  $270 = ($255>>>0)>($1>>>0);
  $271 = ($257>>>0)>($0>>>0);
  $272 = ($255|0)==($1|0);
  $273 = $272 & $271;
  $274 = $270 | $273;
  if ($274) {
   $275 = (___errno_location()|0);
   HEAP32[$275>>2] = 34;
   $282 = $1;$283 = $0;
   tempRet0 = ($282);
   return ($283|0);
  }
 }
 $276 = ($neg$0|0)<(0);
 $277 = $276 << 31 >> 31;
 $278 = $257 ^ $neg$0;
 $279 = $255 ^ $277;
 $280 = (_i64Subtract(($278|0),($279|0),($neg$0|0),($277|0))|0);
 $281 = tempRet0;
 $282 = $281;$283 = $280;
 tempRet0 = ($282);
 return ($283|0);
}
function ___floatscan($f,$prec,$pok) {
 $f = $f|0;
 $prec = $prec|0;
 $pok = $pok|0;
 var $$$i = 0, $$0 = 0.0, $$0$i25 = 0.0, $$010$i = 0, $$07$i = 0, $$0710$i = 0, $$0711$i = 0, $$09$i = 0, $$1$be$i = 0, $$1$ph$i = 0, $$11$i = 0, $$18$i = 0, $$2$i = 0, $$3$be$i = 0, $$3$lcssa$i = 0, $$3121$i = 0, $$in = 0, $$k$0$i = 0, $$lcssa = 0, $$lcssa288 = 0;
 var $$lcssa289 = 0, $$lcssa308 = 0, $$lcssa308$lcssa = 0, $$lcssa309 = 0, $$lcssa309$lcssa = 0, $$lcssa322 = 0, $$lcssa323 = 0, $$lcssa333 = 0, $$lcssa50$i = 0, $$lnz$0$i = 0, $$neg32$i = 0, $$not$i = 0, $$old8 = 0, $$pn$i = 0.0, $$pre$i = 0, $$pre$i17 = 0, $$pre$phi42$iZ2D = 0.0, $$pre41$i = 0.0, $$promoted = 0, $$promoted$i = 0;
 var $$promoted185 = 0, $$sink$off0$us$i = 0, $$sink$off0$us93$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0;
 var $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0;
 var $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0.0, $177 = 0.0, $178 = 0.0, $179 = 0.0, $18 = 0, $180 = 0, $181 = 0, $182 = 0.0, $183 = 0.0, $184 = 0, $185 = 0;
 var $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0;
 var $203 = 0.0, $204 = 0.0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0;
 var $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0;
 var $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0.0, $253 = 0.0, $254 = 0, $255 = 0, $256 = 0, $257 = 0;
 var $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0.0, $262 = 0.0, $263 = 0.0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0.0, $275 = 0.0;
 var $276 = 0.0, $277 = 0, $278 = 0, $279 = 0.0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0;
 var $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0.0, $304 = 0.0, $305 = 0.0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0;
 var $311 = 0.0, $312 = 0.0, $313 = 0.0, $314 = 0.0, $315 = 0.0, $316 = 0.0, $317 = 0, $318 = 0, $319 = 0.0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0;
 var $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0;
 var $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0;
 var $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0;
 var $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0;
 var $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0.0, $419 = 0.0;
 var $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0.0, $436 = 0.0, $437 = 0.0;
 var $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0.0, $448 = 0.0, $449 = 0.0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0;
 var $456 = 0, $457 = 0, $458 = 0, $459 = 0.0, $46 = 0, $460 = 0.0, $461 = 0.0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0.0;
 var $474 = 0, $475 = 0.0, $476 = 0.0, $477 = 0, $478 = 0.0, $479 = 0, $48 = 0.0, $480 = 0.0, $481 = 0.0, $482 = 0, $483 = 0, $484 = 0, $485 = 0.0, $486 = 0.0, $487 = 0, $488 = 0, $489 = 0, $49 = 0.0, $490 = 0, $491 = 0;
 var $492 = 0.0, $493 = 0.0, $494 = 0.0, $495 = 0, $496 = 0, $497 = 0, $498 = 0.0, $499 = 0.0, $5 = 0, $50 = 0.0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0;
 var $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0;
 var $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0;
 var $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0;
 var $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0;
 var $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0;
 var $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0;
 var $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0;
 var $636 = 0, $637 = 0.0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0.0, $643 = 0.0, $644 = 0.0, $645 = 0, $646 = 0.0, $647 = 0.0, $648 = 0.0, $649 = 0.0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0;
 var $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0.0, $661 = 0.0, $662 = 0.0, $663 = 0, $664 = 0.0, $665 = 0.0, $666 = 0, $667 = 0, $668 = 0, $669 = 0.0, $67 = 0, $670 = 0.0, $671 = 0.0;
 var $672 = 0.0, $673 = 0, $674 = 0, $675 = 0.0, $676 = 0, $677 = 0.0, $678 = 0.0, $679 = 0.0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0.0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0.0, $69 = 0;
 var $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0.0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0.0, $702 = 0, $703 = 0, $704 = 0.0, $705 = 0.0, $706 = 0, $707 = 0;
 var $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0;
 var $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0;
 var $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $a$0$lcssa177$i = 0, $a$0101$i = 0, $a$1$i = 0, $a$1$i$lcssa = 0, $a$2$ph38$i = 0, $a$3$i = 0;
 var $a$3$i$lcssa300 = 0, $a$3$i301 = 0, $a$3$ph$i = 0, $a$3$ph183$i = 0, $a$478$i = 0, $a$5$i = 0, $a$5$i$lcssa = 0, $a$5$i$lcssa$lcssa = 0, $bias$0$i = 0.0, $bias$0$i23 = 0.0, $bits$0$ph = 0, $brmerge = 0, $brmerge$i26 = 0, $brmerge187 = 0, $c$0 = 0, $c$0$i = 0, $c$1$lcssa = 0, $c$1$ph$i = 0, $c$185 = 0, $c$2 = 0;
 var $c$2$i = 0, $c$2$lcssa$i = 0, $c$4 = 0, $c$4$1 = 0, $c$6 = 0, $carry$0103$i = 0, $carry1$0$us$i = 0, $carry1$0$us89$i = 0, $carry1$1$lcssa$lcssa$i = 0, $carry1$1$us$i = 0, $carry1$1$us$i$lcssa = 0, $carry1$1$us94$i = 0, $carry1$1$us94$i$lcssa = 0, $carry3$081$i = 0, $cond$i = 0, $d$0$i = 0, $denormal$0$i = 0, $denormal$1$i = 0, $denormal$2$i = 0, $e2$0$ph$i = 0;
 var $e2$0$us$i = 0, $e2$0$us84$i = 0, $e2$1$i = 0, $e2$1$i298 = 0, $e2$1$ph$i = 0, $e2$1$ph182$i = 0, $e2$2$i = 0, $e2$3$i = 0, $emin$0$ph = 0, $exitcond$i = 0, $frac$0$i = 0.0, $frac$1$i = 0.0, $frac$2$i = 0.0, $gotdig$0$i = 0, $gotdig$0$i$lcssa294 = 0, $gotdig$0$i12 = 0, $gotdig$0$i12$lcssa331 = 0, $gotdig$2$i = 0, $gotdig$2$i$lcssa = 0, $gotdig$2$i13 = 0;
 var $gotdig$3$i = 0, $gotdig$3$lcssa$i = 0, $gotdig$3117$i = 0, $gotdig$3117$i$lcssa = 0, $gotdig$4$i = 0, $gotrad$0$i = 0, $gotrad$0$i$lcssa = 0, $gotrad$0$i14 = 0, $gotrad$1$i = 0, $gotrad$1$lcssa$i = 0, $gotrad$1118$i = 0, $gotrad$2$i = 0, $gottail$0$i = 0, $gottail$1$i = 0, $gottail$2$i = 0, $i$0$lcssa = 0, $i$084 = 0, $i$1 = 0, $i$4 = 0, $i$4$lcssa = 0;
 var $j$0$lcssa$i = 0, $j$0120$i = 0, $j$0120$i$lcssa = 0, $j$067$i = 0, $j$068$i = 0, $j$069$i = 0, $j$2$i = 0, $j$3110$i = 0, $k$0$lcssa$i = 0, $k$0119$i = 0, $k$0119$i$lcssa = 0, $k$063$i = 0, $k$064$i = 0, $k$065$i = 0, $k$2$i = 0, $k$3$i = 0, $k$4102$i = 0, $k$5$in$us$i = 0, $k$5$in$us88$i = 0, $k$5$us$i = 0;
 var $k$5$us90$i = 0, $k$5$z$2$us$i = 0, $k$5$z$2$us96$i = 0, $k$679$i = 0, $lnz$0$lcssa$i = 0, $lnz$0116$i = 0, $lnz$0116$i$lcssa = 0, $lnz$057$i = 0, $lnz$058$i = 0, $lnz$059$i = 0, $lnz$2$i = 0, $notlhs = 0, $notrhs = 0, $or$cond = 0, $or$cond$i = 0, $or$cond$i16 = 0, $or$cond13$i = 0, $or$cond15$i = 0, $or$cond16$i = 0, $or$cond17$us$i = 0;
 var $or$cond17$us95$i = 0, $or$cond19$i = 0, $or$cond20$i = 0, $or$cond216$i = 0, $or$cond3$i = 0, $or$cond4$i = 0, $or$cond5 = 0, $or$cond6$i = 0, $or$cond7 = 0, $or$cond8$i = 0, $or$cond9$i = 0, $or$cond9$not = 0, $rp$0$lcssa178$i = 0, $rp$0100$i = 0, $rp$1$i18 = 0, $rp$1$i18$lcssa = 0, $rp$2$ph36$i = 0, $rp$3$ph$i = 0, $rp$3$ph34$i = 0, $rp$477$i = 0;
 var $rp$5$i = 0, $rp$5$i$lcssa = 0, $rp$5$i$lcssa$lcssa = 0, $scale$0$i = 0.0, $scale$1$i = 0.0, $scale$2$i = 0.0, $sign$0 = 0, $storemerge$i = 0, $sum$i = 0, $x$0$i = 0, $x$0$i$lcssa = 0, $x$1$i = 0, $x$2$i = 0, $x$3$lcssa$i = 0, $x$324$i = 0, $x$4$lcssa$i = 0, $x$419$i = 0, $x$5$i = 0, $x$6$i = 0, $x$i = 0;
 var $y$0$i = 0.0, $y$0$i$lcssa = 0.0, $y$1$i = 0.0, $y$1$i22 = 0.0, $y$2$i = 0.0, $y$2$i24 = 0.0, $y$3$i = 0.0, $y$3$lcssa$i = 0.0, $y$320$i = 0.0, $y$4$i = 0.0, $y$5$i = 0.0, $z$0$i = 0, $z$1$ph37$i = 0, $z$1$us$i = 0, $z$1$us85$i = 0, $z$2$us$i = 0, $z$2$us87$i = 0, $z$3$lcssa$lcssa$i = 0, $z$3$us$i = 0, $z$3$us$i$lcssa = 0;
 var $z$3$us97$i = 0, $z$3$us97$i$lcssa = 0, $z$4$i = 0, $z$5$ph$i = 0, $z$7$1$i = 0, $z$7$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512|0;
 $x$i = sp;
 if ((($prec|0) == 0)) {
  $bits$0$ph = 24;$emin$0$ph = -149;
 } else if ((($prec|0) == 1)) {
  $bits$0$ph = 53;$emin$0$ph = -1074;
 } else if ((($prec|0) == 2)) {
  $bits$0$ph = 53;$emin$0$ph = -1074;
 } else {
  $$0 = 0.0;
  STACKTOP = sp;return (+$$0);
 }
 $0 = ((($f)) + 4|0);
 $1 = ((($f)) + 100|0);
 while(1) {
  $2 = HEAP32[$0>>2]|0;
  $3 = HEAP32[$1>>2]|0;
  $4 = ($2>>>0)<($3>>>0);
  if ($4) {
   $5 = ((($2)) + 1|0);
   HEAP32[$0>>2] = $5;
   $6 = HEAP8[$2>>0]|0;
   $7 = $6&255;
   $9 = $7;
  } else {
   $8 = (___shgetc($f)|0);
   $9 = $8;
  }
  $10 = (_isspace($9)|0);
  $11 = ($10|0)==(0);
  if ($11) {
   $$lcssa333 = $9;
   break;
  }
 }
 $12 = ($$lcssa333|0)==(45);
 do {
  if ((($$lcssa333|0) == 43) | (($$lcssa333|0) == 45)) {
   $13 = $12&1;
   $14 = $13 << 1;
   $15 = (1 - ($14))|0;
   $16 = HEAP32[$0>>2]|0;
   $17 = HEAP32[$1>>2]|0;
   $18 = ($16>>>0)<($17>>>0);
   if ($18) {
    $19 = ((($16)) + 1|0);
    HEAP32[$0>>2] = $19;
    $20 = HEAP8[$16>>0]|0;
    $21 = $20&255;
    $c$0 = $21;$sign$0 = $15;
    break;
   } else {
    $22 = (___shgetc($f)|0);
    $c$0 = $22;$sign$0 = $15;
    break;
   }
  } else {
   $c$0 = $$lcssa333;$sign$0 = 1;
  }
 } while(0);
 $c$185 = $c$0;$i$084 = 0;
 while(1) {
  $23 = $c$185 | 32;
  $24 = (3784 + ($i$084)|0);
  $25 = HEAP8[$24>>0]|0;
  $26 = $25 << 24 >> 24;
  $27 = ($23|0)==($26|0);
  if (!($27)) {
   $c$1$lcssa = $c$185;$i$0$lcssa = $i$084;
   break;
  }
  $28 = ($i$084>>>0)<(7);
  do {
   if ($28) {
    $29 = HEAP32[$0>>2]|0;
    $30 = HEAP32[$1>>2]|0;
    $31 = ($29>>>0)<($30>>>0);
    if ($31) {
     $32 = ((($29)) + 1|0);
     HEAP32[$0>>2] = $32;
     $33 = HEAP8[$29>>0]|0;
     $34 = $33&255;
     $c$2 = $34;
     break;
    } else {
     $35 = (___shgetc($f)|0);
     $c$2 = $35;
     break;
    }
   } else {
    $c$2 = $c$185;
   }
  } while(0);
  $36 = (($i$084) + 1)|0;
  $37 = ($36>>>0)<(8);
  if ($37) {
   $c$185 = $c$2;$i$084 = $36;
  } else {
   $c$1$lcssa = $c$2;$i$0$lcssa = $36;
   break;
  }
 }
 do {
  if ((($i$0$lcssa|0) == 3)) {
   label = 23;
  } else if (!((($i$0$lcssa|0) == 8))) {
   $38 = ($i$0$lcssa>>>0)>(3);
   $39 = ($pok|0)!=(0);
   $or$cond5 = $39 & $38;
   if ($or$cond5) {
    $40 = ($i$0$lcssa|0)==(8);
    if ($40) {
     break;
    } else {
     label = 23;
     break;
    }
   }
   $51 = ($i$0$lcssa|0)==(0);
   do {
    if ($51) {
     $52 = $c$1$lcssa | 32;
     $53 = ($52|0)==(110);
     if ($53) {
      $54 = HEAP32[$0>>2]|0;
      $55 = HEAP32[$1>>2]|0;
      $56 = ($54>>>0)<($55>>>0);
      if ($56) {
       $57 = ((($54)) + 1|0);
       HEAP32[$0>>2] = $57;
       $58 = HEAP8[$54>>0]|0;
       $59 = $58&255;
       $c$4 = $59;
      } else {
       $60 = (___shgetc($f)|0);
       $c$4 = $60;
      }
      $61 = $c$4 | 32;
      $62 = ($61|0)==(97);
      if (!($62)) {
       break;
      }
      $712 = HEAP32[$0>>2]|0;
      $713 = HEAP32[$1>>2]|0;
      $714 = ($712>>>0)<($713>>>0);
      if ($714) {
       $716 = ((($712)) + 1|0);
       HEAP32[$0>>2] = $716;
       $717 = HEAP8[$712>>0]|0;
       $718 = $717&255;
       $c$4$1 = $718;
      } else {
       $715 = (___shgetc($f)|0);
       $c$4$1 = $715;
      }
      $719 = $c$4$1 | 32;
      $720 = ($719|0)==(110);
      if (!($720)) {
       break;
      }
      $63 = HEAP32[$0>>2]|0;
      $64 = HEAP32[$1>>2]|0;
      $65 = ($63>>>0)<($64>>>0);
      if ($65) {
       $66 = ((($63)) + 1|0);
       HEAP32[$0>>2] = $66;
       $67 = HEAP8[$63>>0]|0;
       $68 = $67&255;
       $70 = $68;
      } else {
       $69 = (___shgetc($f)|0);
       $70 = $69;
      }
      $71 = ($70|0)==(40);
      if ($71) {
       $i$4 = 1;
      } else {
       $72 = HEAP32[$1>>2]|0;
       $73 = ($72|0)==(0|0);
       if ($73) {
        $$0 = nan;
        STACKTOP = sp;return (+$$0);
       }
       $74 = HEAP32[$0>>2]|0;
       $75 = ((($74)) + -1|0);
       HEAP32[$0>>2] = $75;
       $$0 = nan;
       STACKTOP = sp;return (+$$0);
      }
      while(1) {
       $76 = HEAP32[$0>>2]|0;
       $77 = HEAP32[$1>>2]|0;
       $78 = ($76>>>0)<($77>>>0);
       if ($78) {
        $79 = ((($76)) + 1|0);
        HEAP32[$0>>2] = $79;
        $80 = HEAP8[$76>>0]|0;
        $81 = $80&255;
        $84 = $81;
       } else {
        $82 = (___shgetc($f)|0);
        $84 = $82;
       }
       $83 = (($84) + -48)|0;
       $85 = ($83>>>0)<(10);
       $86 = (($84) + -65)|0;
       $87 = ($86>>>0)<(26);
       $or$cond = $85 | $87;
       if (!($or$cond)) {
        $88 = (($84) + -97)|0;
        $89 = ($88>>>0)<(26);
        $90 = ($84|0)==(95);
        $or$cond7 = $90 | $89;
        if (!($or$cond7)) {
         $$lcssa289 = $84;$i$4$lcssa = $i$4;
         break;
        }
       }
       $102 = (($i$4) + 1)|0;
       $i$4 = $102;
      }
      $91 = ($$lcssa289|0)==(41);
      if ($91) {
       $$0 = nan;
       STACKTOP = sp;return (+$$0);
      }
      $92 = HEAP32[$1>>2]|0;
      $93 = ($92|0)==(0|0);
      if (!($93)) {
       $94 = HEAP32[$0>>2]|0;
       $95 = ((($94)) + -1|0);
       HEAP32[$0>>2] = $95;
      }
      if (!($39)) {
       $97 = (___errno_location()|0);
       HEAP32[$97>>2] = 22;
       ___shlim($f,0);
       $$0 = 0.0;
       STACKTOP = sp;return (+$$0);
      }
      $96 = ($i$4$lcssa|0)==(0);
      $brmerge187 = $96 | $93;
      if ($brmerge187) {
       $$0 = nan;
       STACKTOP = sp;return (+$$0);
      }
      $$promoted185 = HEAP32[$0>>2]|0;
      $$in = $i$4$lcssa;$100 = $$promoted185;
      while(1) {
       $98 = (($$in) + -1)|0;
       $99 = ((($100)) + -1|0);
       $101 = ($98|0)==(0);
       if ($101) {
        $$lcssa288 = $99;
        break;
       } else {
        $$in = $98;$100 = $99;
       }
      }
      HEAP32[$0>>2] = $$lcssa288;
      $$0 = nan;
      STACKTOP = sp;return (+$$0);
     }
     $108 = ($c$1$lcssa|0)==(48);
     do {
      if ($108) {
       $109 = HEAP32[$0>>2]|0;
       $110 = HEAP32[$1>>2]|0;
       $111 = ($109>>>0)<($110>>>0);
       if ($111) {
        $112 = ((($109)) + 1|0);
        HEAP32[$0>>2] = $112;
        $113 = HEAP8[$109>>0]|0;
        $114 = $113&255;
        $117 = $114;
       } else {
        $115 = (___shgetc($f)|0);
        $117 = $115;
       }
       $116 = $117 | 32;
       $118 = ($116|0)==(120);
       if (!($118)) {
        $320 = HEAP32[$1>>2]|0;
        $321 = ($320|0)==(0|0);
        if ($321) {
         $c$6 = 48;
         break;
        }
        $322 = HEAP32[$0>>2]|0;
        $323 = ((($322)) + -1|0);
        HEAP32[$0>>2] = $323;
        $c$6 = 48;
        break;
       }
       $119 = HEAP32[$0>>2]|0;
       $120 = HEAP32[$1>>2]|0;
       $121 = ($119>>>0)<($120>>>0);
       if ($121) {
        $122 = ((($119)) + 1|0);
        HEAP32[$0>>2] = $122;
        $123 = HEAP8[$119>>0]|0;
        $124 = $123&255;
        $c$0$i = $124;$gotdig$0$i = 0;
       } else {
        $125 = (___shgetc($f)|0);
        $c$0$i = $125;$gotdig$0$i = 0;
       }
       while(1) {
        if ((($c$0$i|0) == 46)) {
         $gotdig$0$i$lcssa294 = $gotdig$0$i;
         label = 71;
         break;
        } else if (!((($c$0$i|0) == 48))) {
         $162 = 0;$164 = 0;$721 = 0;$722 = 0;$c$2$i = $c$0$i;$gotdig$2$i = $gotdig$0$i;$gotrad$0$i = 0;$gottail$0$i = 0;$scale$0$i = 1.0;$x$0$i = 0;$y$0$i = 0.0;
         break;
        }
        $126 = HEAP32[$0>>2]|0;
        $127 = HEAP32[$1>>2]|0;
        $128 = ($126>>>0)<($127>>>0);
        if ($128) {
         $129 = ((($126)) + 1|0);
         HEAP32[$0>>2] = $129;
         $130 = HEAP8[$126>>0]|0;
         $131 = $130&255;
         $c$0$i = $131;$gotdig$0$i = 1;
         continue;
        } else {
         $132 = (___shgetc($f)|0);
         $c$0$i = $132;$gotdig$0$i = 1;
         continue;
        }
       }
       if ((label|0) == 71) {
        $133 = HEAP32[$0>>2]|0;
        $134 = HEAP32[$1>>2]|0;
        $135 = ($133>>>0)<($134>>>0);
        if ($135) {
         $136 = ((($133)) + 1|0);
         HEAP32[$0>>2] = $136;
         $137 = HEAP8[$133>>0]|0;
         $138 = $137&255;
         $c$1$ph$i = $138;
        } else {
         $139 = (___shgetc($f)|0);
         $c$1$ph$i = $139;
        }
        $140 = ($c$1$ph$i|0)==(48);
        if ($140) {
         $148 = 0;$149 = 0;
         while(1) {
          $141 = HEAP32[$0>>2]|0;
          $142 = HEAP32[$1>>2]|0;
          $143 = ($141>>>0)<($142>>>0);
          if ($143) {
           $144 = ((($141)) + 1|0);
           HEAP32[$0>>2] = $144;
           $145 = HEAP8[$141>>0]|0;
           $146 = $145&255;
           $152 = $146;
          } else {
           $147 = (___shgetc($f)|0);
           $152 = $147;
          }
          $150 = (_i64Add(($148|0),($149|0),-1,-1)|0);
          $151 = tempRet0;
          $153 = ($152|0)==(48);
          if ($153) {
           $148 = $150;$149 = $151;
          } else {
           $162 = 0;$164 = 0;$721 = $150;$722 = $151;$c$2$i = $152;$gotdig$2$i = 1;$gotrad$0$i = 1;$gottail$0$i = 0;$scale$0$i = 1.0;$x$0$i = 0;$y$0$i = 0.0;
           break;
          }
         }
        } else {
         $162 = 0;$164 = 0;$721 = 0;$722 = 0;$c$2$i = $c$1$ph$i;$gotdig$2$i = $gotdig$0$i$lcssa294;$gotrad$0$i = 1;$gottail$0$i = 0;$scale$0$i = 1.0;$x$0$i = 0;$y$0$i = 0.0;
        }
       }
       while(1) {
        $154 = (($c$2$i) + -48)|0;
        $155 = ($154>>>0)<(10);
        $$pre$i = $c$2$i | 32;
        if ($155) {
         label = 83;
        } else {
         $156 = (($$pre$i) + -97)|0;
         $157 = ($156>>>0)<(6);
         $158 = ($c$2$i|0)==(46);
         $or$cond6$i = $158 | $157;
         if (!($or$cond6$i)) {
          $206 = $721;$207 = $164;$209 = $722;$210 = $162;$c$2$lcssa$i = $c$2$i;$gotdig$2$i$lcssa = $gotdig$2$i;$gotrad$0$i$lcssa = $gotrad$0$i;$x$0$i$lcssa = $x$0$i;$y$0$i$lcssa = $y$0$i;
          break;
         }
         if ($158) {
          $159 = ($gotrad$0$i|0)==(0);
          if ($159) {
           $723 = $164;$724 = $162;$725 = $164;$726 = $162;$gotdig$3$i = $gotdig$2$i;$gotrad$1$i = 1;$gottail$2$i = $gottail$0$i;$scale$2$i = $scale$0$i;$x$2$i = $x$0$i;$y$2$i = $y$0$i;
          } else {
           $206 = $721;$207 = $164;$209 = $722;$210 = $162;$c$2$lcssa$i = 46;$gotdig$2$i$lcssa = $gotdig$2$i;$gotrad$0$i$lcssa = $gotrad$0$i;$x$0$i$lcssa = $x$0$i;$y$0$i$lcssa = $y$0$i;
           break;
          }
         } else {
          label = 83;
         }
        }
        if ((label|0) == 83) {
         label = 0;
         $160 = ($c$2$i|0)>(57);
         $161 = (($$pre$i) + -87)|0;
         $d$0$i = $160 ? $161 : $154;
         $163 = ($162|0)<(0);
         $165 = ($164>>>0)<(8);
         $166 = ($162|0)==(0);
         $167 = $166 & $165;
         $168 = $163 | $167;
         do {
          if ($168) {
           $169 = $x$0$i << 4;
           $170 = (($d$0$i) + ($169))|0;
           $gottail$1$i = $gottail$0$i;$scale$1$i = $scale$0$i;$x$1$i = $170;$y$1$i = $y$0$i;
          } else {
           $171 = ($162|0)<(0);
           $172 = ($164>>>0)<(14);
           $173 = ($162|0)==(0);
           $174 = $173 & $172;
           $175 = $171 | $174;
           if ($175) {
            $176 = (+($d$0$i|0));
            $177 = $scale$0$i * 0.0625;
            $178 = $177 * $176;
            $179 = $y$0$i + $178;
            $gottail$1$i = $gottail$0$i;$scale$1$i = $177;$x$1$i = $x$0$i;$y$1$i = $179;
            break;
           }
           $180 = ($d$0$i|0)==(0);
           $181 = ($gottail$0$i|0)!=(0);
           $or$cond$i = $181 | $180;
           if ($or$cond$i) {
            $gottail$1$i = $gottail$0$i;$scale$1$i = $scale$0$i;$x$1$i = $x$0$i;$y$1$i = $y$0$i;
           } else {
            $182 = $scale$0$i * 0.5;
            $183 = $y$0$i + $182;
            $gottail$1$i = 1;$scale$1$i = $scale$0$i;$x$1$i = $x$0$i;$y$1$i = $183;
           }
          }
         } while(0);
         $184 = (_i64Add(($164|0),($162|0),1,0)|0);
         $185 = tempRet0;
         $723 = $721;$724 = $722;$725 = $184;$726 = $185;$gotdig$3$i = 1;$gotrad$1$i = $gotrad$0$i;$gottail$2$i = $gottail$1$i;$scale$2$i = $scale$1$i;$x$2$i = $x$1$i;$y$2$i = $y$1$i;
        }
        $186 = HEAP32[$0>>2]|0;
        $187 = HEAP32[$1>>2]|0;
        $188 = ($186>>>0)<($187>>>0);
        if ($188) {
         $189 = ((($186)) + 1|0);
         HEAP32[$0>>2] = $189;
         $190 = HEAP8[$186>>0]|0;
         $191 = $190&255;
         $162 = $726;$164 = $725;$721 = $723;$722 = $724;$c$2$i = $191;$gotdig$2$i = $gotdig$3$i;$gotrad$0$i = $gotrad$1$i;$gottail$0$i = $gottail$2$i;$scale$0$i = $scale$2$i;$x$0$i = $x$2$i;$y$0$i = $y$2$i;
         continue;
        } else {
         $192 = (___shgetc($f)|0);
         $162 = $726;$164 = $725;$721 = $723;$722 = $724;$c$2$i = $192;$gotdig$2$i = $gotdig$3$i;$gotrad$0$i = $gotrad$1$i;$gottail$0$i = $gottail$2$i;$scale$0$i = $scale$2$i;$x$0$i = $x$2$i;$y$0$i = $y$2$i;
         continue;
        }
       }
       $193 = ($gotdig$2$i$lcssa|0)==(0);
       if ($193) {
        $194 = HEAP32[$1>>2]|0;
        $195 = ($194|0)==(0|0);
        if (!($195)) {
         $196 = HEAP32[$0>>2]|0;
         $197 = ((($196)) + -1|0);
         HEAP32[$0>>2] = $197;
        }
        $198 = ($pok|0)==(0);
        if ($198) {
         ___shlim($f,0);
        } else {
         if (!($195)) {
          $199 = HEAP32[$0>>2]|0;
          $200 = ((($199)) + -1|0);
          HEAP32[$0>>2] = $200;
          $201 = ($gotrad$0$i$lcssa|0)==(0);
          if (!($201)) {
           $202 = ((($199)) + -2|0);
           HEAP32[$0>>2] = $202;
          }
         }
        }
        $203 = (+($sign$0|0));
        $204 = $203 * 0.0;
        $$0 = $204;
        STACKTOP = sp;return (+$$0);
       }
       $205 = ($gotrad$0$i$lcssa|0)==(0);
       $208 = $205 ? $207 : $206;
       $211 = $205 ? $210 : $209;
       $212 = ($210|0)<(0);
       $213 = ($207>>>0)<(8);
       $214 = ($210|0)==(0);
       $215 = $214 & $213;
       $216 = $212 | $215;
       if ($216) {
        $218 = $207;$219 = $210;$x$324$i = $x$0$i$lcssa;
        while(1) {
         $217 = $x$324$i << 4;
         $220 = (_i64Add(($218|0),($219|0),1,0)|0);
         $221 = tempRet0;
         $222 = ($221|0)<(0);
         $223 = ($220>>>0)<(8);
         $224 = ($221|0)==(0);
         $225 = $224 & $223;
         $226 = $222 | $225;
         if ($226) {
          $218 = $220;$219 = $221;$x$324$i = $217;
         } else {
          $x$3$lcssa$i = $217;
          break;
         }
        }
       } else {
        $x$3$lcssa$i = $x$0$i$lcssa;
       }
       $227 = $c$2$lcssa$i | 32;
       $228 = ($227|0)==(112);
       do {
        if ($228) {
         $229 = (_scanexp($f,$pok)|0);
         $230 = tempRet0;
         $231 = ($229|0)==(0);
         $232 = ($230|0)==(-2147483648);
         $233 = $231 & $232;
         if ($233) {
          $234 = ($pok|0)==(0);
          if ($234) {
           ___shlim($f,0);
           $$0 = 0.0;
           STACKTOP = sp;return (+$$0);
          } else {
           $235 = HEAP32[$1>>2]|0;
           $236 = ($235|0)==(0|0);
           if ($236) {
            $247 = 0;$248 = 0;
            break;
           }
           $237 = HEAP32[$0>>2]|0;
           $238 = ((($237)) + -1|0);
           HEAP32[$0>>2] = $238;
           $247 = 0;$248 = 0;
           break;
          }
         } else {
          $247 = $229;$248 = $230;
         }
        } else {
         $239 = HEAP32[$1>>2]|0;
         $240 = ($239|0)==(0|0);
         if ($240) {
          $247 = 0;$248 = 0;
         } else {
          $241 = HEAP32[$0>>2]|0;
          $242 = ((($241)) + -1|0);
          HEAP32[$0>>2] = $242;
          $247 = 0;$248 = 0;
         }
        }
       } while(0);
       $243 = (_bitshift64Shl(($208|0),($211|0),2)|0);
       $244 = tempRet0;
       $245 = (_i64Add(($243|0),($244|0),-32,-1)|0);
       $246 = tempRet0;
       $249 = (_i64Add(($245|0),($246|0),($247|0),($248|0))|0);
       $250 = tempRet0;
       $251 = ($x$3$lcssa$i|0)==(0);
       if ($251) {
        $252 = (+($sign$0|0));
        $253 = $252 * 0.0;
        $$0 = $253;
        STACKTOP = sp;return (+$$0);
       }
       $254 = (0 - ($emin$0$ph))|0;
       $255 = ($250|0)>(0);
       $256 = ($249>>>0)>($254>>>0);
       $257 = ($250|0)==(0);
       $258 = $257 & $256;
       $259 = $255 | $258;
       if ($259) {
        $260 = (___errno_location()|0);
        HEAP32[$260>>2] = 34;
        $261 = (+($sign$0|0));
        $262 = $261 * 1.7976931348623157E+308;
        $263 = $262 * 1.7976931348623157E+308;
        $$0 = $263;
        STACKTOP = sp;return (+$$0);
       }
       $264 = (($emin$0$ph) + -106)|0;
       $265 = ($264|0)<(0);
       $266 = $265 << 31 >> 31;
       $267 = ($250|0)<($266|0);
       $268 = ($249>>>0)<($264>>>0);
       $269 = ($250|0)==($266|0);
       $270 = $269 & $268;
       $271 = $267 | $270;
       if ($271) {
        $273 = (___errno_location()|0);
        HEAP32[$273>>2] = 34;
        $274 = (+($sign$0|0));
        $275 = $274 * 2.2250738585072014E-308;
        $276 = $275 * 2.2250738585072014E-308;
        $$0 = $276;
        STACKTOP = sp;return (+$$0);
       }
       $272 = ($x$3$lcssa$i|0)>(-1);
       if ($272) {
        $282 = $249;$283 = $250;$x$419$i = $x$3$lcssa$i;$y$320$i = $y$0$i$lcssa;
        while(1) {
         $277 = !($y$320$i >= 0.5);
         $278 = $x$419$i << 1;
         $279 = $y$320$i + -1.0;
         $280 = $277&1;
         $281 = $280 | $278;
         $x$5$i = $281 ^ 1;
         $$pn$i = $277 ? $y$320$i : $279;
         $y$4$i = $y$320$i + $$pn$i;
         $284 = (_i64Add(($282|0),($283|0),-1,-1)|0);
         $285 = tempRet0;
         $286 = ($281|0)>(-1);
         if ($286) {
          $282 = $284;$283 = $285;$x$419$i = $x$5$i;$y$320$i = $y$4$i;
         } else {
          $291 = $284;$292 = $285;$x$4$lcssa$i = $x$5$i;$y$3$lcssa$i = $y$4$i;
          break;
         }
        }
       } else {
        $291 = $249;$292 = $250;$x$4$lcssa$i = $x$3$lcssa$i;$y$3$lcssa$i = $y$0$i$lcssa;
       }
       $287 = ($emin$0$ph|0)<(0);
       $288 = $287 << 31 >> 31;
       $289 = (_i64Subtract(32,0,($emin$0$ph|0),($288|0))|0);
       $290 = tempRet0;
       $293 = (_i64Add(($291|0),($292|0),($289|0),($290|0))|0);
       $294 = tempRet0;
       $295 = (0)>($294|0);
       $296 = ($bits$0$ph>>>0)>($293>>>0);
       $297 = (0)==($294|0);
       $298 = $297 & $296;
       $299 = $295 | $298;
       if ($299) {
        $300 = ($293|0)<(0);
        if ($300) {
         $$0710$i = 0;
         label = 124;
        } else {
         $$07$i = $293;
         label = 122;
        }
       } else {
        $$07$i = $bits$0$ph;
        label = 122;
       }
       do {
        if ((label|0) == 122) {
         $301 = ($$07$i|0)<(53);
         if ($301) {
          $$0710$i = $$07$i;
          label = 124;
          break;
         }
         $$pre41$i = (+($sign$0|0));
         $$0711$i = $$07$i;$$pre$phi42$iZ2D = $$pre41$i;$bias$0$i = 0.0;
        }
       } while(0);
       if ((label|0) == 124) {
        $302 = (84 - ($$0710$i))|0;
        $303 = (+_scalbn(1.0,$302));
        $304 = (+($sign$0|0));
        $305 = (+_copysignl($303,$304));
        $$0711$i = $$0710$i;$$pre$phi42$iZ2D = $304;$bias$0$i = $305;
       }
       $306 = ($$0711$i|0)<(32);
       $307 = $y$3$lcssa$i != 0.0;
       $or$cond4$i = $307 & $306;
       $308 = $x$4$lcssa$i & 1;
       $309 = ($308|0)==(0);
       $or$cond9$i = $309 & $or$cond4$i;
       $310 = $or$cond9$i&1;
       $x$6$i = (($310) + ($x$4$lcssa$i))|0;
       $y$5$i = $or$cond9$i ? 0.0 : $y$3$lcssa$i;
       $311 = (+($x$6$i>>>0));
       $312 = $$pre$phi42$iZ2D * $311;
       $313 = $bias$0$i + $312;
       $314 = $$pre$phi42$iZ2D * $y$5$i;
       $315 = $314 + $313;
       $316 = $315 - $bias$0$i;
       $317 = $316 != 0.0;
       if (!($317)) {
        $318 = (___errno_location()|0);
        HEAP32[$318>>2] = 34;
       }
       $319 = (+_scalbnl($316,$291));
       $$0 = $319;
       STACKTOP = sp;return (+$$0);
      } else {
       $c$6 = $c$1$lcssa;
      }
     } while(0);
     $sum$i = (($emin$0$ph) + ($bits$0$ph))|0;
     $324 = (0 - ($sum$i))|0;
     $$09$i = $c$6;$gotdig$0$i12 = 0;
     while(1) {
      if ((($$09$i|0) == 46)) {
       $gotdig$0$i12$lcssa331 = $gotdig$0$i12;
       label = 135;
       break;
      } else if (!((($$09$i|0) == 48))) {
       $$2$i = $$09$i;$727 = 0;$728 = 0;$gotdig$2$i13 = $gotdig$0$i12;$gotrad$0$i14 = 0;
       break;
      }
      $325 = HEAP32[$0>>2]|0;
      $326 = HEAP32[$1>>2]|0;
      $327 = ($325>>>0)<($326>>>0);
      if ($327) {
       $328 = ((($325)) + 1|0);
       HEAP32[$0>>2] = $328;
       $329 = HEAP8[$325>>0]|0;
       $330 = $329&255;
       $$09$i = $330;$gotdig$0$i12 = 1;
       continue;
      } else {
       $331 = (___shgetc($f)|0);
       $$09$i = $331;$gotdig$0$i12 = 1;
       continue;
      }
     }
     if ((label|0) == 135) {
      $332 = HEAP32[$0>>2]|0;
      $333 = HEAP32[$1>>2]|0;
      $334 = ($332>>>0)<($333>>>0);
      if ($334) {
       $335 = ((($332)) + 1|0);
       HEAP32[$0>>2] = $335;
       $336 = HEAP8[$332>>0]|0;
       $337 = $336&255;
       $$1$ph$i = $337;
      } else {
       $338 = (___shgetc($f)|0);
       $$1$ph$i = $338;
      }
      $339 = ($$1$ph$i|0)==(48);
      if ($339) {
       $340 = 0;$341 = 0;
       while(1) {
        $342 = (_i64Add(($340|0),($341|0),-1,-1)|0);
        $343 = tempRet0;
        $344 = HEAP32[$0>>2]|0;
        $345 = HEAP32[$1>>2]|0;
        $346 = ($344>>>0)<($345>>>0);
        if ($346) {
         $347 = ((($344)) + 1|0);
         HEAP32[$0>>2] = $347;
         $348 = HEAP8[$344>>0]|0;
         $349 = $348&255;
         $$1$be$i = $349;
        } else {
         $350 = (___shgetc($f)|0);
         $$1$be$i = $350;
        }
        $351 = ($$1$be$i|0)==(48);
        if ($351) {
         $340 = $342;$341 = $343;
        } else {
         $$2$i = $$1$be$i;$727 = $342;$728 = $343;$gotdig$2$i13 = 1;$gotrad$0$i14 = 1;
         break;
        }
       }
      } else {
       $$2$i = $$1$ph$i;$727 = 0;$728 = 0;$gotdig$2$i13 = $gotdig$0$i12$lcssa331;$gotrad$0$i14 = 1;
      }
     }
     HEAP32[$x$i>>2] = 0;
     $352 = (($$2$i) + -48)|0;
     $353 = ($352>>>0)<(10);
     $354 = ($$2$i|0)==(46);
     $355 = $354 | $353;
     L214: do {
      if ($355) {
       $356 = ((($x$i)) + 496|0);
       $$3121$i = $$2$i;$359 = 0;$360 = 0;$729 = $354;$730 = $352;$731 = $727;$732 = $728;$gotdig$3117$i = $gotdig$2$i13;$gotrad$1118$i = $gotrad$0$i14;$j$0120$i = 0;$k$0119$i = 0;$lnz$0116$i = 0;
       L216: while(1) {
        do {
         if ($729) {
          $cond$i = ($gotrad$1118$i|0)==(0);
          if ($cond$i) {
           $733 = $359;$734 = $360;$735 = $359;$736 = $360;$gotdig$4$i = $gotdig$3117$i;$gotrad$2$i = 1;$j$2$i = $j$0120$i;$k$2$i = $k$0119$i;$lnz$2$i = $lnz$0116$i;
          } else {
           $737 = $731;$738 = $732;$739 = $359;$740 = $360;$gotdig$3117$i$lcssa = $gotdig$3117$i;$j$0120$i$lcssa = $j$0120$i;$k$0119$i$lcssa = $k$0119$i;$lnz$0116$i$lcssa = $lnz$0116$i;
           break L216;
          }
         } else {
          $358 = ($k$0119$i|0)<(125);
          $361 = (_i64Add(($359|0),($360|0),1,0)|0);
          $362 = tempRet0;
          $363 = ($$3121$i|0)!=(48);
          if (!($358)) {
           if (!($363)) {
            $733 = $731;$734 = $732;$735 = $361;$736 = $362;$gotdig$4$i = $gotdig$3117$i;$gotrad$2$i = $gotrad$1118$i;$j$2$i = $j$0120$i;$k$2$i = $k$0119$i;$lnz$2$i = $lnz$0116$i;
            break;
           }
           $373 = HEAP32[$356>>2]|0;
           $374 = $373 | 1;
           HEAP32[$356>>2] = $374;
           $733 = $731;$734 = $732;$735 = $361;$736 = $362;$gotdig$4$i = $gotdig$3117$i;$gotrad$2$i = $gotrad$1118$i;$j$2$i = $j$0120$i;$k$2$i = $k$0119$i;$lnz$2$i = $lnz$0116$i;
           break;
          }
          $$lnz$0$i = $363 ? $361 : $lnz$0116$i;
          $364 = ($j$0120$i|0)==(0);
          $365 = (($x$i) + ($k$0119$i<<2)|0);
          if ($364) {
           $storemerge$i = $730;
          } else {
           $366 = HEAP32[$365>>2]|0;
           $367 = ($366*10)|0;
           $368 = (($$3121$i) + -48)|0;
           $369 = (($368) + ($367))|0;
           $storemerge$i = $369;
          }
          HEAP32[$365>>2] = $storemerge$i;
          $370 = (($j$0120$i) + 1)|0;
          $371 = ($370|0)==(9);
          $372 = $371&1;
          $$k$0$i = (($372) + ($k$0119$i))|0;
          $$11$i = $371 ? 0 : $370;
          $733 = $731;$734 = $732;$735 = $361;$736 = $362;$gotdig$4$i = 1;$gotrad$2$i = $gotrad$1118$i;$j$2$i = $$11$i;$k$2$i = $$k$0$i;$lnz$2$i = $$lnz$0$i;
         }
        } while(0);
        $375 = HEAP32[$0>>2]|0;
        $376 = HEAP32[$1>>2]|0;
        $377 = ($375>>>0)<($376>>>0);
        if ($377) {
         $378 = ((($375)) + 1|0);
         HEAP32[$0>>2] = $378;
         $379 = HEAP8[$375>>0]|0;
         $380 = $379&255;
         $$3$be$i = $380;
        } else {
         $381 = (___shgetc($f)|0);
         $$3$be$i = $381;
        }
        $382 = (($$3$be$i) + -48)|0;
        $383 = ($382>>>0)<(10);
        $384 = ($$3$be$i|0)==(46);
        $385 = $384 | $383;
        if ($385) {
         $$3121$i = $$3$be$i;$359 = $735;$360 = $736;$729 = $384;$730 = $382;$731 = $733;$732 = $734;$gotdig$3117$i = $gotdig$4$i;$gotrad$1118$i = $gotrad$2$i;$j$0120$i = $j$2$i;$k$0119$i = $k$2$i;$lnz$0116$i = $lnz$2$i;
        } else {
         $$3$lcssa$i = $$3$be$i;$387 = $733;$388 = $735;$390 = $734;$391 = $736;$gotdig$3$lcssa$i = $gotdig$4$i;$gotrad$1$lcssa$i = $gotrad$2$i;$j$0$lcssa$i = $j$2$i;$k$0$lcssa$i = $k$2$i;$lnz$0$lcssa$i = $lnz$2$i;
         label = 158;
         break L214;
        }
       }
       $357 = ($gotdig$3117$i$lcssa|0)!=(0);
       $741 = $739;$742 = $740;$743 = $737;$744 = $738;$745 = $357;$j$069$i = $j$0120$i$lcssa;$k$065$i = $k$0119$i$lcssa;$lnz$059$i = $lnz$0116$i$lcssa;
       label = 166;
      } else {
       $$3$lcssa$i = $$2$i;$387 = $727;$388 = 0;$390 = $728;$391 = 0;$gotdig$3$lcssa$i = $gotdig$2$i13;$gotrad$1$lcssa$i = $gotrad$0$i14;$j$0$lcssa$i = 0;$k$0$lcssa$i = 0;$lnz$0$lcssa$i = 0;
       label = 158;
      }
     } while(0);
     do {
      if ((label|0) == 158) {
       $386 = ($gotrad$1$lcssa$i|0)==(0);
       $389 = $386 ? $388 : $387;
       $392 = $386 ? $391 : $390;
       $393 = ($gotdig$3$lcssa$i|0)!=(0);
       $394 = $$3$lcssa$i | 32;
       $395 = ($394|0)==(101);
       $or$cond13$i = $395 & $393;
       if (!($or$cond13$i)) {
        $410 = ($$3$lcssa$i|0)>(-1);
        if ($410) {
         $741 = $388;$742 = $391;$743 = $389;$744 = $392;$745 = $393;$j$069$i = $j$0$lcssa$i;$k$065$i = $k$0$lcssa$i;$lnz$059$i = $lnz$0$lcssa$i;
         label = 166;
         break;
        } else {
         $746 = $388;$747 = $391;$748 = $393;$749 = $389;$750 = $392;$j$068$i = $j$0$lcssa$i;$k$064$i = $k$0$lcssa$i;$lnz$058$i = $lnz$0$lcssa$i;
         label = 168;
         break;
        }
       }
       $396 = (_scanexp($f,$pok)|0);
       $397 = tempRet0;
       $398 = ($396|0)==(0);
       $399 = ($397|0)==(-2147483648);
       $400 = $398 & $399;
       if ($400) {
        $401 = ($pok|0)==(0);
        if ($401) {
         ___shlim($f,0);
         $$0$i25 = 0.0;
         break;
        }
        $402 = HEAP32[$1>>2]|0;
        $403 = ($402|0)==(0|0);
        if ($403) {
         $406 = 0;$407 = 0;
        } else {
         $404 = HEAP32[$0>>2]|0;
         $405 = ((($404)) + -1|0);
         HEAP32[$0>>2] = $405;
         $406 = 0;$407 = 0;
        }
       } else {
        $406 = $396;$407 = $397;
       }
       $408 = (_i64Add(($406|0),($407|0),($389|0),($392|0))|0);
       $409 = tempRet0;
       $420 = $408;$422 = $388;$423 = $409;$425 = $391;$j$067$i = $j$0$lcssa$i;$k$063$i = $k$0$lcssa$i;$lnz$057$i = $lnz$0$lcssa$i;
       label = 170;
      }
     } while(0);
     if ((label|0) == 166) {
      $411 = HEAP32[$1>>2]|0;
      $412 = ($411|0)==(0|0);
      if ($412) {
       $746 = $741;$747 = $742;$748 = $745;$749 = $743;$750 = $744;$j$068$i = $j$069$i;$k$064$i = $k$065$i;$lnz$058$i = $lnz$059$i;
       label = 168;
      } else {
       $413 = HEAP32[$0>>2]|0;
       $414 = ((($413)) + -1|0);
       HEAP32[$0>>2] = $414;
       if ($745) {
        $420 = $743;$422 = $741;$423 = $744;$425 = $742;$j$067$i = $j$069$i;$k$063$i = $k$065$i;$lnz$057$i = $lnz$059$i;
        label = 170;
       } else {
        label = 169;
       }
      }
     }
     if ((label|0) == 168) {
      if ($748) {
       $420 = $749;$422 = $746;$423 = $750;$425 = $747;$j$067$i = $j$068$i;$k$063$i = $k$064$i;$lnz$057$i = $lnz$058$i;
       label = 170;
      } else {
       label = 169;
      }
     }
     do {
      if ((label|0) == 169) {
       $415 = (___errno_location()|0);
       HEAP32[$415>>2] = 22;
       ___shlim($f,0);
       $$0$i25 = 0.0;
      }
      else if ((label|0) == 170) {
       $416 = HEAP32[$x$i>>2]|0;
       $417 = ($416|0)==(0);
       if ($417) {
        $418 = (+($sign$0|0));
        $419 = $418 * 0.0;
        $$0$i25 = $419;
        break;
       }
       $421 = ($420|0)==($422|0);
       $424 = ($423|0)==($425|0);
       $426 = $421 & $424;
       $427 = ($425|0)<(0);
       $428 = ($422>>>0)<(10);
       $429 = ($425|0)==(0);
       $430 = $429 & $428;
       $431 = $427 | $430;
       $or$cond$i16 = $431 & $426;
       if ($or$cond$i16) {
        $432 = ($bits$0$ph>>>0)>(30);
        $433 = $416 >>> $bits$0$ph;
        $434 = ($433|0)==(0);
        $or$cond15$i = $432 | $434;
        if ($or$cond15$i) {
         $435 = (+($sign$0|0));
         $436 = (+($416>>>0));
         $437 = $435 * $436;
         $$0$i25 = $437;
         break;
        }
       }
       $438 = (($emin$0$ph|0) / -2)&-1;
       $439 = ($438|0)<(0);
       $440 = $439 << 31 >> 31;
       $441 = ($423|0)>($440|0);
       $442 = ($420>>>0)>($438>>>0);
       $443 = ($423|0)==($440|0);
       $444 = $443 & $442;
       $445 = $441 | $444;
       if ($445) {
        $446 = (___errno_location()|0);
        HEAP32[$446>>2] = 34;
        $447 = (+($sign$0|0));
        $448 = $447 * 1.7976931348623157E+308;
        $449 = $448 * 1.7976931348623157E+308;
        $$0$i25 = $449;
        break;
       }
       $450 = (($emin$0$ph) + -106)|0;
       $451 = ($450|0)<(0);
       $452 = $451 << 31 >> 31;
       $453 = ($423|0)<($452|0);
       $454 = ($420>>>0)<($450>>>0);
       $455 = ($423|0)==($452|0);
       $456 = $455 & $454;
       $457 = $453 | $456;
       if ($457) {
        $458 = (___errno_location()|0);
        HEAP32[$458>>2] = 34;
        $459 = (+($sign$0|0));
        $460 = $459 * 2.2250738585072014E-308;
        $461 = $460 * 2.2250738585072014E-308;
        $$0$i25 = $461;
        break;
       }
       $462 = ($j$067$i|0)==(0);
       if ($462) {
        $k$3$i = $k$063$i;
       } else {
        $463 = ($j$067$i|0)<(9);
        if ($463) {
         $464 = (($x$i) + ($k$063$i<<2)|0);
         $$promoted$i = HEAP32[$464>>2]|0;
         $466 = $$promoted$i;$j$3110$i = $j$067$i;
         while(1) {
          $465 = ($466*10)|0;
          $467 = (($j$3110$i) + 1)|0;
          $exitcond$i = ($467|0)==(9);
          if ($exitcond$i) {
           $$lcssa323 = $465;
           break;
          } else {
           $466 = $465;$j$3110$i = $467;
          }
         }
         HEAP32[$464>>2] = $$lcssa323;
        }
        $468 = (($k$063$i) + 1)|0;
        $k$3$i = $468;
       }
       $469 = ($lnz$057$i|0)<(9);
       if ($469) {
        $470 = ($lnz$057$i|0)<=($420|0);
        $471 = ($420|0)<(18);
        $or$cond3$i = $470 & $471;
        if ($or$cond3$i) {
         $472 = ($420|0)==(9);
         if ($472) {
          $473 = (+($sign$0|0));
          $474 = HEAP32[$x$i>>2]|0;
          $475 = (+($474>>>0));
          $476 = $473 * $475;
          $$0$i25 = $476;
          break;
         }
         $477 = ($420|0)<(9);
         if ($477) {
          $478 = (+($sign$0|0));
          $479 = HEAP32[$x$i>>2]|0;
          $480 = (+($479>>>0));
          $481 = $478 * $480;
          $482 = (8 - ($420))|0;
          $483 = (3800 + ($482<<2)|0);
          $484 = HEAP32[$483>>2]|0;
          $485 = (+($484|0));
          $486 = $481 / $485;
          $$0$i25 = $486;
          break;
         }
         $$neg32$i = (($bits$0$ph) + 27)|0;
         $487 = Math_imul($420, -3)|0;
         $488 = (($$neg32$i) + ($487))|0;
         $489 = ($488|0)>(30);
         $$pre$i17 = HEAP32[$x$i>>2]|0;
         $490 = $$pre$i17 >>> $488;
         $491 = ($490|0)==(0);
         $or$cond216$i = $489 | $491;
         if ($or$cond216$i) {
          $492 = (+($sign$0|0));
          $493 = (+($$pre$i17>>>0));
          $494 = $492 * $493;
          $495 = (($420) + -10)|0;
          $496 = (3800 + ($495<<2)|0);
          $497 = HEAP32[$496>>2]|0;
          $498 = (+($497|0));
          $499 = $494 * $498;
          $$0$i25 = $499;
          break;
         }
        }
       }
       $500 = (($420|0) % 9)&-1;
       $501 = ($500|0)==(0);
       if ($501) {
        $a$2$ph38$i = 0;$e2$0$ph$i = 0;$rp$2$ph36$i = $420;$z$1$ph37$i = $k$3$i;
       } else {
        $502 = ($420|0)>(-1);
        $503 = (($500) + 9)|0;
        $504 = $502 ? $500 : $503;
        $505 = (8 - ($504))|0;
        $506 = (3800 + ($505<<2)|0);
        $507 = HEAP32[$506>>2]|0;
        $508 = ($k$3$i|0)==(0);
        if ($508) {
         $a$0$lcssa177$i = 0;$rp$0$lcssa178$i = $420;$z$0$i = 0;
        } else {
         $509 = (1000000000 / ($507|0))&-1;
         $a$0101$i = 0;$carry$0103$i = 0;$k$4102$i = 0;$rp$0100$i = $420;
         while(1) {
          $510 = (($x$i) + ($k$4102$i<<2)|0);
          $511 = HEAP32[$510>>2]|0;
          $512 = (($511>>>0) % ($507>>>0))&-1;
          $513 = (($511>>>0) / ($507>>>0))&-1;
          $514 = (($513) + ($carry$0103$i))|0;
          HEAP32[$510>>2] = $514;
          $515 = Math_imul($512, $509)|0;
          $516 = ($k$4102$i|0)==($a$0101$i|0);
          $517 = ($514|0)==(0);
          $or$cond16$i = $516 & $517;
          $518 = (($k$4102$i) + 1)|0;
          $519 = $518 & 127;
          $520 = (($rp$0100$i) + -9)|0;
          $rp$1$i18 = $or$cond16$i ? $520 : $rp$0100$i;
          $a$1$i = $or$cond16$i ? $519 : $a$0101$i;
          $521 = ($518|0)==($k$3$i|0);
          if ($521) {
           $$lcssa322 = $515;$a$1$i$lcssa = $a$1$i;$rp$1$i18$lcssa = $rp$1$i18;
           break;
          } else {
           $a$0101$i = $a$1$i;$carry$0103$i = $515;$k$4102$i = $518;$rp$0100$i = $rp$1$i18;
          }
         }
         $522 = ($$lcssa322|0)==(0);
         if ($522) {
          $a$0$lcssa177$i = $a$1$i$lcssa;$rp$0$lcssa178$i = $rp$1$i18$lcssa;$z$0$i = $k$3$i;
         } else {
          $523 = (($k$3$i) + 1)|0;
          $524 = (($x$i) + ($k$3$i<<2)|0);
          HEAP32[$524>>2] = $$lcssa322;
          $a$0$lcssa177$i = $a$1$i$lcssa;$rp$0$lcssa178$i = $rp$1$i18$lcssa;$z$0$i = $523;
         }
        }
        $525 = (9 - ($504))|0;
        $526 = (($525) + ($rp$0$lcssa178$i))|0;
        $a$2$ph38$i = $a$0$lcssa177$i;$e2$0$ph$i = 0;$rp$2$ph36$i = $526;$z$1$ph37$i = $z$0$i;
       }
       L296: while(1) {
        $527 = ($rp$2$ph36$i|0)<(18);
        $528 = (($x$i) + ($a$2$ph38$i<<2)|0);
        if ($527) {
         $e2$0$us$i = $e2$0$ph$i;$z$1$us$i = $z$1$ph37$i;
         while(1) {
          $530 = (($z$1$us$i) + 127)|0;
          $carry1$0$us$i = 0;$k$5$in$us$i = $530;$z$2$us$i = $z$1$us$i;
          while(1) {
           $k$5$us$i = $k$5$in$us$i & 127;
           $531 = (($x$i) + ($k$5$us$i<<2)|0);
           $532 = HEAP32[$531>>2]|0;
           $533 = (_bitshift64Shl(($532|0),0,29)|0);
           $534 = tempRet0;
           $535 = (_i64Add(($533|0),($534|0),($carry1$0$us$i|0),0)|0);
           $536 = tempRet0;
           $537 = ($536>>>0)>(0);
           $538 = ($535>>>0)>(1000000000);
           $539 = ($536|0)==(0);
           $540 = $539 & $538;
           $541 = $537 | $540;
           if ($541) {
            $542 = (___udivdi3(($535|0),($536|0),1000000000,0)|0);
            $543 = tempRet0;
            $544 = (___uremdi3(($535|0),($536|0),1000000000,0)|0);
            $545 = tempRet0;
            $$sink$off0$us$i = $544;$carry1$1$us$i = $542;
           } else {
            $$sink$off0$us$i = $535;$carry1$1$us$i = 0;
           }
           HEAP32[$531>>2] = $$sink$off0$us$i;
           $546 = (($z$2$us$i) + 127)|0;
           $547 = $546 & 127;
           $548 = ($k$5$us$i|0)!=($547|0);
           $549 = ($k$5$us$i|0)==($a$2$ph38$i|0);
           $or$cond17$us$i = $548 | $549;
           $550 = ($$sink$off0$us$i|0)==(0);
           $k$5$z$2$us$i = $550 ? $k$5$us$i : $z$2$us$i;
           $z$3$us$i = $or$cond17$us$i ? $z$2$us$i : $k$5$z$2$us$i;
           $551 = (($k$5$us$i) + -1)|0;
           if ($549) {
            $carry1$1$us$i$lcssa = $carry1$1$us$i;$z$3$us$i$lcssa = $z$3$us$i;
            break;
           } else {
            $carry1$0$us$i = $carry1$1$us$i;$k$5$in$us$i = $551;$z$2$us$i = $z$3$us$i;
           }
          }
          $552 = (($e2$0$us$i) + -29)|0;
          $553 = ($carry1$1$us$i$lcssa|0)==(0);
          if ($553) {
           $e2$0$us$i = $552;$z$1$us$i = $z$3$us$i$lcssa;
          } else {
           $$lcssa50$i = $552;$carry1$1$lcssa$lcssa$i = $carry1$1$us$i$lcssa;$z$3$lcssa$lcssa$i = $z$3$us$i$lcssa;
           break;
          }
         }
        } else {
         $529 = ($rp$2$ph36$i|0)==(18);
         if ($529) {
          $e2$0$us84$i = $e2$0$ph$i;$z$1$us85$i = $z$1$ph37$i;
         } else {
          $a$3$ph$i = $a$2$ph38$i;$e2$1$ph$i = $e2$0$ph$i;$rp$3$ph34$i = $rp$2$ph36$i;$z$5$ph$i = $z$1$ph37$i;
          break;
         }
         while(1) {
          $554 = HEAP32[$528>>2]|0;
          $555 = ($554>>>0)<(9007199);
          if (!($555)) {
           $a$3$ph$i = $a$2$ph38$i;$e2$1$ph$i = $e2$0$us84$i;$rp$3$ph34$i = 18;$z$5$ph$i = $z$1$us85$i;
           break L296;
          }
          $556 = (($z$1$us85$i) + 127)|0;
          $carry1$0$us89$i = 0;$k$5$in$us88$i = $556;$z$2$us87$i = $z$1$us85$i;
          while(1) {
           $k$5$us90$i = $k$5$in$us88$i & 127;
           $557 = (($x$i) + ($k$5$us90$i<<2)|0);
           $558 = HEAP32[$557>>2]|0;
           $559 = (_bitshift64Shl(($558|0),0,29)|0);
           $560 = tempRet0;
           $561 = (_i64Add(($559|0),($560|0),($carry1$0$us89$i|0),0)|0);
           $562 = tempRet0;
           $563 = ($562>>>0)>(0);
           $564 = ($561>>>0)>(1000000000);
           $565 = ($562|0)==(0);
           $566 = $565 & $564;
           $567 = $563 | $566;
           if ($567) {
            $568 = (___udivdi3(($561|0),($562|0),1000000000,0)|0);
            $569 = tempRet0;
            $570 = (___uremdi3(($561|0),($562|0),1000000000,0)|0);
            $571 = tempRet0;
            $$sink$off0$us93$i = $570;$carry1$1$us94$i = $568;
           } else {
            $$sink$off0$us93$i = $561;$carry1$1$us94$i = 0;
           }
           HEAP32[$557>>2] = $$sink$off0$us93$i;
           $572 = (($z$2$us87$i) + 127)|0;
           $573 = $572 & 127;
           $574 = ($k$5$us90$i|0)!=($573|0);
           $575 = ($k$5$us90$i|0)==($a$2$ph38$i|0);
           $or$cond17$us95$i = $574 | $575;
           $576 = ($$sink$off0$us93$i|0)==(0);
           $k$5$z$2$us96$i = $576 ? $k$5$us90$i : $z$2$us87$i;
           $z$3$us97$i = $or$cond17$us95$i ? $z$2$us87$i : $k$5$z$2$us96$i;
           $577 = (($k$5$us90$i) + -1)|0;
           if ($575) {
            $carry1$1$us94$i$lcssa = $carry1$1$us94$i;$z$3$us97$i$lcssa = $z$3$us97$i;
            break;
           } else {
            $carry1$0$us89$i = $carry1$1$us94$i;$k$5$in$us88$i = $577;$z$2$us87$i = $z$3$us97$i;
           }
          }
          $578 = (($e2$0$us84$i) + -29)|0;
          $579 = ($carry1$1$us94$i$lcssa|0)==(0);
          if ($579) {
           $e2$0$us84$i = $578;$z$1$us85$i = $z$3$us97$i$lcssa;
          } else {
           $$lcssa50$i = $578;$carry1$1$lcssa$lcssa$i = $carry1$1$us94$i$lcssa;$z$3$lcssa$lcssa$i = $z$3$us97$i$lcssa;
           break;
          }
         }
        }
        $580 = (($rp$2$ph36$i) + 9)|0;
        $581 = (($a$2$ph38$i) + 127)|0;
        $582 = $581 & 127;
        $583 = ($582|0)==($z$3$lcssa$lcssa$i|0);
        if ($583) {
         $584 = (($z$3$lcssa$lcssa$i) + 127)|0;
         $585 = $584 & 127;
         $586 = (($x$i) + ($585<<2)|0);
         $587 = HEAP32[$586>>2]|0;
         $588 = (($z$3$lcssa$lcssa$i) + 126)|0;
         $589 = $588 & 127;
         $590 = (($x$i) + ($589<<2)|0);
         $591 = HEAP32[$590>>2]|0;
         $592 = $591 | $587;
         HEAP32[$590>>2] = $592;
         $z$4$i = $585;
        } else {
         $z$4$i = $z$3$lcssa$lcssa$i;
        }
        $593 = (($x$i) + ($582<<2)|0);
        HEAP32[$593>>2] = $carry1$1$lcssa$lcssa$i;
        $a$2$ph38$i = $582;$e2$0$ph$i = $$lcssa50$i;$rp$2$ph36$i = $580;$z$1$ph37$i = $z$4$i;
       }
       L321: while(1) {
        $624 = (($z$5$ph$i) + 1)|0;
        $621 = $624 & 127;
        $625 = (($z$5$ph$i) + 127)|0;
        $626 = $625 & 127;
        $627 = (($x$i) + ($626<<2)|0);
        $a$3$ph183$i = $a$3$ph$i;$e2$1$ph182$i = $e2$1$ph$i;$rp$3$ph$i = $rp$3$ph34$i;
        while(1) {
         $628 = ($rp$3$ph$i|0)==(18);
         $629 = ($rp$3$ph$i|0)>(27);
         $$18$i = $629 ? 9 : 1;
         $$not$i = $628 ^ 1;
         $a$3$i = $a$3$ph183$i;$e2$1$i = $e2$1$ph182$i;
         while(1) {
          $594 = $a$3$i & 127;
          $595 = ($594|0)==($z$5$ph$i|0);
          do {
           if ($595) {
            label = 220;
           } else {
            $596 = (($x$i) + ($594<<2)|0);
            $597 = HEAP32[$596>>2]|0;
            $598 = ($597>>>0)<(9007199);
            if ($598) {
             label = 220;
             break;
            }
            $599 = ($597>>>0)>(9007199);
            if ($599) {
             break;
            }
            $600 = (($a$3$i) + 1)|0;
            $601 = $600 & 127;
            $602 = ($601|0)==($z$5$ph$i|0);
            if ($602) {
             label = 220;
             break;
            }
            $708 = (($x$i) + ($601<<2)|0);
            $709 = HEAP32[$708>>2]|0;
            $710 = ($709>>>0)<(254740991);
            if ($710) {
             label = 220;
             break;
            }
            $711 = ($709>>>0)>(254740991);
            $brmerge$i26 = $711 | $$not$i;
            if (!($brmerge$i26)) {
             $635 = $594;$a$3$i301 = $a$3$i;$e2$1$i298 = $e2$1$i;$z$7$i = $z$5$ph$i;
             break L321;
            }
           }
          } while(0);
          if ((label|0) == 220) {
           label = 0;
           if ($628) {
            label = 221;
            break L321;
           }
          }
          $603 = (($e2$1$i) + ($$18$i))|0;
          $604 = ($a$3$i|0)==($z$5$ph$i|0);
          if ($604) {
           $a$3$i = $z$5$ph$i;$e2$1$i = $603;
          } else {
           $$lcssa308 = $603;$a$3$i$lcssa300 = $a$3$i;
           break;
          }
         }
         $605 = 1 << $$18$i;
         $606 = (($605) + -1)|0;
         $607 = 1000000000 >>> $$18$i;
         $a$478$i = $a$3$i$lcssa300;$carry3$081$i = 0;$k$679$i = $a$3$i$lcssa300;$rp$477$i = $rp$3$ph$i;
         while(1) {
          $608 = (($x$i) + ($k$679$i<<2)|0);
          $609 = HEAP32[$608>>2]|0;
          $610 = $609 & $606;
          $611 = $609 >>> $$18$i;
          $612 = (($611) + ($carry3$081$i))|0;
          HEAP32[$608>>2] = $612;
          $613 = Math_imul($610, $607)|0;
          $614 = ($k$679$i|0)==($a$478$i|0);
          $615 = ($612|0)==(0);
          $or$cond19$i = $614 & $615;
          $616 = (($k$679$i) + 1)|0;
          $617 = $616 & 127;
          $618 = (($rp$477$i) + -9)|0;
          $rp$5$i = $or$cond19$i ? $618 : $rp$477$i;
          $a$5$i = $or$cond19$i ? $617 : $a$478$i;
          $619 = ($617|0)==($z$5$ph$i|0);
          if ($619) {
           $$lcssa309 = $613;$a$5$i$lcssa = $a$5$i;$rp$5$i$lcssa = $rp$5$i;
           break;
          } else {
           $a$478$i = $a$5$i;$carry3$081$i = $613;$k$679$i = $617;$rp$477$i = $rp$5$i;
          }
         }
         $620 = ($$lcssa309|0)==(0);
         if ($620) {
          $a$3$ph183$i = $a$5$i$lcssa;$e2$1$ph182$i = $$lcssa308;$rp$3$ph$i = $rp$5$i$lcssa;
          continue;
         }
         $622 = ($621|0)==($a$5$i$lcssa|0);
         if (!($622)) {
          $$lcssa308$lcssa = $$lcssa308;$$lcssa309$lcssa = $$lcssa309;$a$5$i$lcssa$lcssa = $a$5$i$lcssa;$rp$5$i$lcssa$lcssa = $rp$5$i$lcssa;
          break;
         }
         $630 = HEAP32[$627>>2]|0;
         $631 = $630 | 1;
         HEAP32[$627>>2] = $631;
         $a$3$ph183$i = $a$5$i$lcssa;$e2$1$ph182$i = $$lcssa308;$rp$3$ph$i = $rp$5$i$lcssa;
        }
        $623 = (($x$i) + ($z$5$ph$i<<2)|0);
        HEAP32[$623>>2] = $$lcssa309$lcssa;
        $a$3$ph$i = $a$5$i$lcssa$lcssa;$e2$1$ph$i = $$lcssa308$lcssa;$rp$3$ph34$i = $rp$5$i$lcssa$lcssa;$z$5$ph$i = $621;
       }
       if ((label|0) == 221) {
        if ($595) {
         $632 = (($621) + -1)|0;
         $633 = (($x$i) + ($632<<2)|0);
         HEAP32[$633>>2] = 0;
         $635 = $z$5$ph$i;$a$3$i301 = $a$3$i;$e2$1$i298 = $e2$1$i;$z$7$i = $621;
        } else {
         $635 = $594;$a$3$i301 = $a$3$i;$e2$1$i298 = $e2$1$i;$z$7$i = $z$5$ph$i;
        }
       }
       $634 = (($x$i) + ($635<<2)|0);
       $636 = HEAP32[$634>>2]|0;
       $637 = (+($636>>>0));
       $638 = (($a$3$i301) + 1)|0;
       $639 = $638 & 127;
       $640 = ($639|0)==($z$7$i|0);
       if ($640) {
        $697 = (($a$3$i301) + 2)|0;
        $698 = $697 & 127;
        $699 = (($698) + -1)|0;
        $700 = (($x$i) + ($699<<2)|0);
        HEAP32[$700>>2] = 0;
        $z$7$1$i = $698;
       } else {
        $z$7$1$i = $z$7$i;
       }
       $701 = $637 * 1.0E+9;
       $702 = (($x$i) + ($639<<2)|0);
       $703 = HEAP32[$702>>2]|0;
       $704 = (+($703>>>0));
       $705 = $701 + $704;
       $661 = (+($sign$0|0));
       $643 = $661 * $705;
       $681 = (($e2$1$i298) + 53)|0;
       $687 = (($681) - ($emin$0$ph))|0;
       $688 = ($687|0)<($bits$0$ph|0);
       $706 = ($687|0)<(0);
       $$$i = $706 ? 0 : $687;
       $denormal$0$i = $688&1;
       $$010$i = $688 ? $$$i : $bits$0$ph;
       $707 = ($$010$i|0)<(53);
       if ($707) {
        $641 = (105 - ($$010$i))|0;
        $642 = (+_scalbn(1.0,$641));
        $644 = (+_copysignl($642,$643));
        $645 = (53 - ($$010$i))|0;
        $646 = (+_scalbn(1.0,$645));
        $647 = (+_fmodl($643,$646));
        $648 = $643 - $647;
        $649 = $644 + $648;
        $bias$0$i23 = $644;$frac$0$i = $647;$y$1$i22 = $649;
       } else {
        $bias$0$i23 = 0.0;$frac$0$i = 0.0;$y$1$i22 = $643;
       }
       $650 = (($a$3$i301) + 2)|0;
       $651 = $650 & 127;
       $652 = ($651|0)==($z$7$1$i|0);
       do {
        if ($652) {
         $frac$2$i = $frac$0$i;
        } else {
         $653 = (($x$i) + ($651<<2)|0);
         $654 = HEAP32[$653>>2]|0;
         $655 = ($654>>>0)<(500000000);
         do {
          if ($655) {
           $656 = ($654|0)==(0);
           if ($656) {
            $657 = (($a$3$i301) + 3)|0;
            $658 = $657 & 127;
            $659 = ($658|0)==($z$7$1$i|0);
            if ($659) {
             $frac$1$i = $frac$0$i;
             break;
            }
           }
           $660 = $661 * 0.25;
           $662 = $660 + $frac$0$i;
           $frac$1$i = $662;
          } else {
           $663 = ($654>>>0)>(500000000);
           if ($663) {
            $664 = $661 * 0.75;
            $665 = $664 + $frac$0$i;
            $frac$1$i = $665;
            break;
           }
           $666 = (($a$3$i301) + 3)|0;
           $667 = $666 & 127;
           $668 = ($667|0)==($z$7$1$i|0);
           if ($668) {
            $669 = $661 * 0.5;
            $670 = $669 + $frac$0$i;
            $frac$1$i = $670;
            break;
           } else {
            $671 = $661 * 0.75;
            $672 = $671 + $frac$0$i;
            $frac$1$i = $672;
            break;
           }
          }
         } while(0);
         $673 = (53 - ($$010$i))|0;
         $674 = ($673|0)>(1);
         if (!($674)) {
          $frac$2$i = $frac$1$i;
          break;
         }
         $675 = (+_fmodl($frac$1$i,1.0));
         $676 = $675 != 0.0;
         if ($676) {
          $frac$2$i = $frac$1$i;
          break;
         }
         $677 = $frac$1$i + 1.0;
         $frac$2$i = $677;
        }
       } while(0);
       $678 = $y$1$i22 + $frac$2$i;
       $679 = $678 - $bias$0$i23;
       $680 = $681 & 2147483647;
       $682 = (-2 - ($sum$i))|0;
       $683 = ($680|0)>($682|0);
       do {
        if ($683) {
         $684 = (+Math_abs((+$679)));
         $685 = !($684 >= 9007199254740992.0);
         if ($685) {
          $denormal$2$i = $denormal$0$i;$e2$2$i = $e2$1$i298;$y$2$i24 = $679;
         } else {
          $686 = ($$010$i|0)==($687|0);
          $or$cond20$i = $688 & $686;
          $denormal$1$i = $or$cond20$i ? 0 : $denormal$0$i;
          $689 = $679 * 0.5;
          $690 = (($e2$1$i298) + 1)|0;
          $denormal$2$i = $denormal$1$i;$e2$2$i = $690;$y$2$i24 = $689;
         }
         $691 = (($e2$2$i) + 50)|0;
         $692 = ($691|0)>($324|0);
         if (!($692)) {
          $693 = ($denormal$2$i|0)!=(0);
          $694 = $frac$2$i != 0.0;
          $or$cond8$i = $694 & $693;
          if (!($or$cond8$i)) {
           $e2$3$i = $e2$2$i;$y$3$i = $y$2$i24;
           break;
          }
         }
         $695 = (___errno_location()|0);
         HEAP32[$695>>2] = 34;
         $e2$3$i = $e2$2$i;$y$3$i = $y$2$i24;
        } else {
         $e2$3$i = $e2$1$i298;$y$3$i = $679;
        }
       } while(0);
       $696 = (+_scalbnl($y$3$i,$e2$3$i));
       $$0$i25 = $696;
      }
     } while(0);
     $$0 = $$0$i25;
     STACKTOP = sp;return (+$$0);
    }
   } while(0);
   $103 = HEAP32[$1>>2]|0;
   $104 = ($103|0)==(0|0);
   if (!($104)) {
    $105 = HEAP32[$0>>2]|0;
    $106 = ((($105)) + -1|0);
    HEAP32[$0>>2] = $106;
   }
   $107 = (___errno_location()|0);
   HEAP32[$107>>2] = 22;
   ___shlim($f,0);
   $$0 = 0.0;
   STACKTOP = sp;return (+$$0);
  }
 } while(0);
 if ((label|0) == 23) {
  $41 = HEAP32[$1>>2]|0;
  $42 = ($41|0)==(0|0);
  if (!($42)) {
   $43 = HEAP32[$0>>2]|0;
   $44 = ((($43)) + -1|0);
   HEAP32[$0>>2] = $44;
  }
  $notlhs = ($pok|0)==(0);
  $notrhs = ($i$0$lcssa>>>0)<(4);
  $or$cond9$not = $notrhs | $notlhs;
  $brmerge = $or$cond9$not | $42;
  if (!($brmerge)) {
   $$promoted = HEAP32[$0>>2]|0;
   $46 = $$promoted;$i$1 = $i$0$lcssa;
   while(1) {
    $45 = ((($46)) + -1|0);
    $47 = (($i$1) + -1)|0;
    $$old8 = ($47>>>0)>(3);
    if ($$old8) {
     $46 = $45;$i$1 = $47;
    } else {
     $$lcssa = $45;
     break;
    }
   }
   HEAP32[$0>>2] = $$lcssa;
  }
 }
 $48 = (+($sign$0|0));
 $49 = $48 * inf;
 $50 = $49;
 $$0 = $50;
 STACKTOP = sp;return (+$$0);
}
function ___shlim($f,$lim) {
 $f = $f|0;
 $lim = $lim|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 104|0);
 HEAP32[$0>>2] = $lim;
 $1 = ((($f)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($f)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $2;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = ((($f)) + 108|0);
 HEAP32[$8>>2] = $7;
 $9 = ($lim|0)!=(0);
 $10 = ($7|0)>($lim|0);
 $or$cond = $9 & $10;
 if ($or$cond) {
  $11 = (($4) + ($lim)|0);
  $12 = ((($f)) + 100|0);
  HEAP32[$12>>2] = $11;
  return;
 } else {
  $13 = ((($f)) + 100|0);
  HEAP32[$13>>2] = $5;
  return;
 }
}
function ___shgetc($f) {
 $f = $f|0;
 var $$0 = 0, $$phi$trans$insert = 0, $$phi$trans$insert3 = 0, $$pre = 0, $$pre4 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 104|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0);
 if ($2) {
  label = 3;
 } else {
  $3 = ((($f)) + 108|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = ($4|0)<($1|0);
  if ($5) {
   label = 3;
  }
 }
 if ((label|0) == 3) {
  $6 = (___uflow($f)|0);
  $7 = ($6|0)<(0);
  if (!($7)) {
   $9 = HEAP32[$0>>2]|0;
   $10 = ($9|0)==(0);
   $$phi$trans$insert = ((($f)) + 8|0);
   if ($10) {
    $$pre = HEAP32[$$phi$trans$insert>>2]|0;
    $11 = $$pre;
    $26 = $$pre;$41 = $11;
    label = 9;
   } else {
    $12 = HEAP32[$$phi$trans$insert>>2]|0;
    $13 = ((($f)) + 4|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = $12;
    $16 = $14;
    $17 = (($15) - ($16))|0;
    $18 = ((($f)) + 108|0);
    $19 = HEAP32[$18>>2]|0;
    $20 = (($9) - ($19))|0;
    $21 = (($20) + -1)|0;
    $22 = ($17|0)>($21|0);
    if ($22) {
     $23 = (($14) + ($21)|0);
     $24 = ((($f)) + 100|0);
     HEAP32[$24>>2] = $23;
     $27 = $12;
    } else {
     $26 = $15;$41 = $12;
     label = 9;
    }
   }
   if ((label|0) == 9) {
    $25 = ((($f)) + 100|0);
    HEAP32[$25>>2] = $26;
    $27 = $41;
   }
   $28 = ($27|0)==(0|0);
   $$phi$trans$insert3 = ((($f)) + 4|0);
   $$pre4 = HEAP32[$$phi$trans$insert3>>2]|0;
   if (!($28)) {
    $29 = $27;
    $30 = $$pre4;
    $31 = ((($f)) + 108|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = (($29) + 1)|0;
    $34 = (($33) - ($30))|0;
    $35 = (($34) + ($32))|0;
    HEAP32[$31>>2] = $35;
   }
   $36 = ((($$pre4)) + -1|0);
   $37 = HEAP8[$36>>0]|0;
   $38 = $37&255;
   $39 = ($38|0)==($6|0);
   if ($39) {
    $$0 = $6;
    return ($$0|0);
   }
   $40 = $6&255;
   HEAP8[$36>>0] = $40;
   $$0 = $6;
   return ($$0|0);
  }
 }
 $8 = ((($f)) + 100|0);
 HEAP32[$8>>2] = 0;
 $$0 = -1;
 return ($$0|0);
}
function _copysign($x,$y) {
 $x = +$x;
 $y = +$y;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $x;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 HEAPF64[tempDoublePtr>>3] = $y;$2 = HEAP32[tempDoublePtr>>2]|0;
 $3 = HEAP32[tempDoublePtr+4>>2]|0;
 $4 = $1 & 2147483647;
 $5 = $3 & -2147483648;
 $6 = $5 | $4;
 HEAP32[tempDoublePtr>>2] = $0;HEAP32[tempDoublePtr+4>>2] = $6;$7 = +HEAPF64[tempDoublePtr>>3];
 return (+$7);
}
function _copysignl($x,$y) {
 $x = +$x;
 $y = +$y;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_copysign($x,$y));
 return (+$0);
}
function _fmod($x,$y) {
 $x = +$x;
 $y = +$y;
 var $$0 = 0.0, $$lcssa7 = 0, $$x = 0.0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0.0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0;
 var $15 = 0, $150 = 0.0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0.0, $24 = 0.0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0.0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0.0;
 var $ex$0$lcssa = 0, $ex$026 = 0, $ex$1 = 0, $ex$2$lcssa = 0, $ex$212 = 0, $ex$3$lcssa = 0, $ex$39 = 0, $ey$0$lcssa = 0, $ey$020 = 0, $ey$1$ph = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $x;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 HEAPF64[tempDoublePtr>>3] = $y;$2 = HEAP32[tempDoublePtr>>2]|0;
 $3 = HEAP32[tempDoublePtr+4>>2]|0;
 $4 = (_bitshift64Lshr(($0|0),($1|0),52)|0);
 $5 = tempRet0;
 $6 = $4 & 2047;
 $7 = (_bitshift64Lshr(($2|0),($3|0),52)|0);
 $8 = tempRet0;
 $9 = $7 & 2047;
 $10 = $1 & -2147483648;
 $11 = (_bitshift64Shl(($2|0),($3|0),1)|0);
 $12 = tempRet0;
 $13 = ($11|0)==(0);
 $14 = ($12|0)==(0);
 $15 = $13 & $14;
 if (!($15)) {
  $16 = $3 & 2147483647;
  $17 = ($16>>>0)>(2146435072);
  $18 = ($2>>>0)>(0);
  $19 = ($16|0)==(2146435072);
  $20 = $19 & $18;
  $21 = $17 | $20;
  $22 = ($6|0)==(2047);
  $or$cond = $21 | $22;
  if (!($or$cond)) {
   $25 = (_bitshift64Shl(($0|0),($1|0),1)|0);
   $26 = tempRet0;
   $27 = ($26>>>0)>($12>>>0);
   $28 = ($25>>>0)>($11>>>0);
   $29 = ($26|0)==($12|0);
   $30 = $29 & $28;
   $31 = $27 | $30;
   if (!($31)) {
    $32 = ($25|0)==($11|0);
    $33 = ($26|0)==($12|0);
    $34 = $32 & $33;
    $35 = $x * 0.0;
    $$x = $34 ? $35 : $x;
    return (+$$x);
   }
   $36 = ($6|0)==(0);
   if ($36) {
    $37 = (_bitshift64Shl(($0|0),($1|0),12)|0);
    $38 = tempRet0;
    $39 = ($38|0)>(-1);
    $40 = ($37>>>0)>(4294967295);
    $41 = ($38|0)==(-1);
    $42 = $41 & $40;
    $43 = $39 | $42;
    if ($43) {
     $45 = $37;$46 = $38;$ex$026 = 0;
     while(1) {
      $44 = (($ex$026) + -1)|0;
      $47 = (_bitshift64Shl(($45|0),($46|0),1)|0);
      $48 = tempRet0;
      $49 = ($48|0)>(-1);
      $50 = ($47>>>0)>(4294967295);
      $51 = ($48|0)==(-1);
      $52 = $51 & $50;
      $53 = $49 | $52;
      if ($53) {
       $45 = $47;$46 = $48;$ex$026 = $44;
      } else {
       $ex$0$lcssa = $44;
       break;
      }
     }
    } else {
     $ex$0$lcssa = 0;
    }
    $54 = (1 - ($ex$0$lcssa))|0;
    $55 = (_bitshift64Shl(($0|0),($1|0),($54|0))|0);
    $56 = tempRet0;
    $83 = $55;$84 = $56;$ex$1 = $ex$0$lcssa;
   } else {
    $57 = $1 & 1048575;
    $58 = $57 | 1048576;
    $83 = $0;$84 = $58;$ex$1 = $6;
   }
   $59 = ($9|0)==(0);
   if ($59) {
    $60 = (_bitshift64Shl(($2|0),($3|0),12)|0);
    $61 = tempRet0;
    $62 = ($61|0)>(-1);
    $63 = ($60>>>0)>(4294967295);
    $64 = ($61|0)==(-1);
    $65 = $64 & $63;
    $66 = $62 | $65;
    if ($66) {
     $68 = $60;$69 = $61;$ey$020 = 0;
     while(1) {
      $67 = (($ey$020) + -1)|0;
      $70 = (_bitshift64Shl(($68|0),($69|0),1)|0);
      $71 = tempRet0;
      $72 = ($71|0)>(-1);
      $73 = ($70>>>0)>(4294967295);
      $74 = ($71|0)==(-1);
      $75 = $74 & $73;
      $76 = $72 | $75;
      if ($76) {
       $68 = $70;$69 = $71;$ey$020 = $67;
      } else {
       $ey$0$lcssa = $67;
       break;
      }
     }
    } else {
     $ey$0$lcssa = 0;
    }
    $77 = (1 - ($ey$0$lcssa))|0;
    $78 = (_bitshift64Shl(($2|0),($3|0),($77|0))|0);
    $79 = tempRet0;
    $85 = $78;$86 = $79;$ey$1$ph = $ey$0$lcssa;
   } else {
    $80 = $3 & 1048575;
    $81 = $80 | 1048576;
    $85 = $2;$86 = $81;$ey$1$ph = $9;
   }
   $82 = ($ex$1|0)>($ey$1$ph|0);
   $87 = (_i64Subtract(($83|0),($84|0),($85|0),($86|0))|0);
   $88 = tempRet0;
   $89 = ($88|0)>(-1);
   $90 = ($87>>>0)>(4294967295);
   $91 = ($88|0)==(-1);
   $92 = $91 & $90;
   $93 = $89 | $92;
   L23: do {
    if ($82) {
     $152 = $93;$153 = $87;$154 = $88;$94 = $83;$96 = $84;$ex$212 = $ex$1;
     while(1) {
      if ($152) {
       $95 = ($94|0)==($85|0);
       $97 = ($96|0)==($86|0);
       $98 = $95 & $97;
       if ($98) {
        break;
       } else {
        $100 = $153;$101 = $154;
       }
      } else {
       $100 = $94;$101 = $96;
      }
      $102 = (_bitshift64Shl(($100|0),($101|0),1)|0);
      $103 = tempRet0;
      $104 = (($ex$212) + -1)|0;
      $105 = ($104|0)>($ey$1$ph|0);
      $106 = (_i64Subtract(($102|0),($103|0),($85|0),($86|0))|0);
      $107 = tempRet0;
      $108 = ($107|0)>(-1);
      $109 = ($106>>>0)>(4294967295);
      $110 = ($107|0)==(-1);
      $111 = $110 & $109;
      $112 = $108 | $111;
      if ($105) {
       $152 = $112;$153 = $106;$154 = $107;$94 = $102;$96 = $103;$ex$212 = $104;
      } else {
       $$lcssa7 = $112;$113 = $102;$115 = $103;$155 = $106;$156 = $107;$ex$2$lcssa = $104;
       break L23;
      }
     }
     $99 = $x * 0.0;
     $$0 = $99;
     return (+$$0);
    } else {
     $$lcssa7 = $93;$113 = $83;$115 = $84;$155 = $87;$156 = $88;$ex$2$lcssa = $ex$1;
    }
   } while(0);
   if ($$lcssa7) {
    $114 = ($113|0)==($85|0);
    $116 = ($115|0)==($86|0);
    $117 = $114 & $116;
    if ($117) {
     $125 = $x * 0.0;
     $$0 = $125;
     return (+$$0);
    } else {
     $118 = $156;$120 = $155;
    }
   } else {
    $118 = $115;$120 = $113;
   }
   $119 = ($118>>>0)<(1048576);
   $121 = ($120>>>0)<(0);
   $122 = ($118|0)==(1048576);
   $123 = $122 & $121;
   $124 = $119 | $123;
   if ($124) {
    $126 = $120;$127 = $118;$ex$39 = $ex$2$lcssa;
    while(1) {
     $128 = (_bitshift64Shl(($126|0),($127|0),1)|0);
     $129 = tempRet0;
     $130 = (($ex$39) + -1)|0;
     $131 = ($129>>>0)<(1048576);
     $132 = ($128>>>0)<(0);
     $133 = ($129|0)==(1048576);
     $134 = $133 & $132;
     $135 = $131 | $134;
     if ($135) {
      $126 = $128;$127 = $129;$ex$39 = $130;
     } else {
      $137 = $128;$138 = $129;$ex$3$lcssa = $130;
      break;
     }
    }
   } else {
    $137 = $120;$138 = $118;$ex$3$lcssa = $ex$2$lcssa;
   }
   $136 = ($ex$3$lcssa|0)>(0);
   if ($136) {
    $139 = (_i64Add(($137|0),($138|0),0,-1048576)|0);
    $140 = tempRet0;
    $141 = (_bitshift64Shl(($ex$3$lcssa|0),0,52)|0);
    $142 = tempRet0;
    $143 = $139 | $141;
    $144 = $140 | $142;
    $149 = $144;$151 = $143;
   } else {
    $145 = (1 - ($ex$3$lcssa))|0;
    $146 = (_bitshift64Lshr(($137|0),($138|0),($145|0))|0);
    $147 = tempRet0;
    $149 = $147;$151 = $146;
   }
   $148 = $149 | $10;
   HEAP32[tempDoublePtr>>2] = $151;HEAP32[tempDoublePtr+4>>2] = $148;$150 = +HEAPF64[tempDoublePtr>>3];
   $$0 = $150;
   return (+$$0);
  }
 }
 $23 = $x * $y;
 $24 = $23 / $23;
 $$0 = $24;
 return (+$$0);
}
function _fmodl($x,$y) {
 $x = +$x;
 $y = +$y;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_fmod($x,$y));
 return (+$0);
}
function _frexp($x,$e) {
 $x = +$x;
 $e = $e|0;
 var $$0 = 0.0, $$01 = 0.0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0.0, $7 = 0.0, $8 = 0, $9 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $x;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 $2 = (_bitshift64Lshr(($0|0),($1|0),52)|0);
 $3 = tempRet0;
 $4 = $2 & 2047;
 if ((($4|0) == 0)) {
  $5 = $x != 0.0;
  if ($5) {
   $6 = $x * 1.8446744073709552E+19;
   $7 = (+_frexp($6,$e));
   $8 = HEAP32[$e>>2]|0;
   $9 = (($8) + -64)|0;
   $$01 = $7;$storemerge = $9;
  } else {
   $$01 = $x;$storemerge = 0;
  }
  HEAP32[$e>>2] = $storemerge;
  $$0 = $$01;
  return (+$$0);
 } else if ((($4|0) == 2047)) {
  $$0 = $x;
  return (+$$0);
 } else {
  $10 = (($4) + -1022)|0;
  HEAP32[$e>>2] = $10;
  $11 = $1 & -2146435073;
  $12 = $11 | 1071644672;
  HEAP32[tempDoublePtr>>2] = $0;HEAP32[tempDoublePtr+4>>2] = $12;$13 = +HEAPF64[tempDoublePtr>>3];
  $$0 = $13;
  return (+$$0);
 }
 return +(0.0);
}
function _frexpl($x,$e) {
 $x = +$x;
 $e = $e|0;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_frexp($x,$e));
 return (+$0);
}
function _scalbn($x,$n) {
 $x = +$x;
 $n = $n|0;
 var $$ = 0, $$0 = 0, $$1 = 0, $0 = 0, $1 = 0.0, $10 = 0, $11 = 0.0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0.0, $18 = 0.0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0.0, $9 = 0, $y$0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($n|0)>(1023);
 if ($0) {
  $1 = $x * 8.9884656743115795E+307;
  $2 = (($n) + -1023)|0;
  $3 = ($2|0)>(1023);
  if ($3) {
   $4 = $1 * 8.9884656743115795E+307;
   $5 = (($n) + -2046)|0;
   $6 = ($5|0)>(1023);
   $$ = $6 ? 1023 : $5;
   $$0 = $$;$y$0 = $4;
  } else {
   $$0 = $2;$y$0 = $1;
  }
 } else {
  $7 = ($n|0)<(-1022);
  if ($7) {
   $8 = $x * 2.2250738585072014E-308;
   $9 = (($n) + 1022)|0;
   $10 = ($9|0)<(-1022);
   if ($10) {
    $11 = $8 * 2.2250738585072014E-308;
    $12 = (($n) + 2044)|0;
    $13 = ($12|0)<(-1022);
    $$1 = $13 ? -1022 : $12;
    $$0 = $$1;$y$0 = $11;
   } else {
    $$0 = $9;$y$0 = $8;
   }
  } else {
   $$0 = $n;$y$0 = $x;
  }
 }
 $14 = (($$0) + 1023)|0;
 $15 = (_bitshift64Shl(($14|0),0,52)|0);
 $16 = tempRet0;
 HEAP32[tempDoublePtr>>2] = $15;HEAP32[tempDoublePtr+4>>2] = $16;$17 = +HEAPF64[tempDoublePtr>>3];
 $18 = $y$0 * $17;
 return (+$18);
}
function _scalbnl($x,$n) {
 $x = +$x;
 $n = $n|0;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_scalbn($x,$n));
 return (+$0);
}
function _wctomb($s,$wc) {
 $s = $s|0;
 $wc = $wc|0;
 var $$0 = 0, $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($s|0)==(0|0);
 if ($0) {
  $$0 = 0;
 } else {
  $1 = (_wcrtomb($s,$wc,0)|0);
  $$0 = $1;
 }
 return ($$0|0);
}
function _wcrtomb($s,$wc,$st) {
 $s = $s|0;
 $wc = $wc|0;
 $st = $st|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($s|0)==(0|0);
 if ($0) {
  $$0 = 1;
  return ($$0|0);
 }
 $1 = ($wc>>>0)<(128);
 if ($1) {
  $2 = $wc&255;
  HEAP8[$s>>0] = $2;
  $$0 = 1;
  return ($$0|0);
 }
 $3 = ($wc>>>0)<(2048);
 if ($3) {
  $4 = $wc >>> 6;
  $5 = $4 | 192;
  $6 = $5&255;
  $7 = ((($s)) + 1|0);
  HEAP8[$s>>0] = $6;
  $8 = $wc & 63;
  $9 = $8 | 128;
  $10 = $9&255;
  HEAP8[$7>>0] = $10;
  $$0 = 2;
  return ($$0|0);
 }
 $11 = ($wc>>>0)<(55296);
 $12 = $wc & -8192;
 $13 = ($12|0)==(57344);
 $or$cond = $11 | $13;
 if ($or$cond) {
  $14 = $wc >>> 12;
  $15 = $14 | 224;
  $16 = $15&255;
  $17 = ((($s)) + 1|0);
  HEAP8[$s>>0] = $16;
  $18 = $wc >>> 6;
  $19 = $18 & 63;
  $20 = $19 | 128;
  $21 = $20&255;
  $22 = ((($s)) + 2|0);
  HEAP8[$17>>0] = $21;
  $23 = $wc & 63;
  $24 = $23 | 128;
  $25 = $24&255;
  HEAP8[$22>>0] = $25;
  $$0 = 3;
  return ($$0|0);
 }
 $26 = (($wc) + -65536)|0;
 $27 = ($26>>>0)<(1048576);
 if ($27) {
  $28 = $wc >>> 18;
  $29 = $28 | 240;
  $30 = $29&255;
  $31 = ((($s)) + 1|0);
  HEAP8[$s>>0] = $30;
  $32 = $wc >>> 12;
  $33 = $32 & 63;
  $34 = $33 | 128;
  $35 = $34&255;
  $36 = ((($s)) + 2|0);
  HEAP8[$31>>0] = $35;
  $37 = $wc >>> 6;
  $38 = $37 & 63;
  $39 = $38 | 128;
  $40 = $39&255;
  $41 = ((($s)) + 3|0);
  HEAP8[$36>>0] = $40;
  $42 = $wc & 63;
  $43 = $42 | 128;
  $44 = $43&255;
  HEAP8[$41>>0] = $44;
  $$0 = 4;
  return ($$0|0);
 } else {
  $45 = (___errno_location()|0);
  HEAP32[$45>>2] = 84;
  $$0 = -1;
  return ($$0|0);
 }
 return (0)|0;
}
function ___toread($f) {
 $f = $f|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 74|0);
 $1 = HEAP8[$0>>0]|0;
 $2 = $1 << 24 >> 24;
 $3 = (($2) + 255)|0;
 $4 = $3 | $2;
 $5 = $4&255;
 HEAP8[$0>>0] = $5;
 $6 = ((($f)) + 20|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($f)) + 44|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($7>>>0)>($9>>>0);
 if ($10) {
  $11 = ((($f)) + 36|0);
  $12 = HEAP32[$11>>2]|0;
  (FUNCTION_TABLE_iiii[$12 & 31]($f,0,0)|0);
 }
 $13 = ((($f)) + 16|0);
 HEAP32[$13>>2] = 0;
 $14 = ((($f)) + 28|0);
 HEAP32[$14>>2] = 0;
 HEAP32[$6>>2] = 0;
 $15 = HEAP32[$f>>2]|0;
 $16 = $15 & 20;
 $17 = ($16|0)==(0);
 if ($17) {
  $21 = HEAP32[$8>>2]|0;
  $22 = ((($f)) + 8|0);
  HEAP32[$22>>2] = $21;
  $23 = ((($f)) + 4|0);
  HEAP32[$23>>2] = $21;
  $$0 = 0;
  return ($$0|0);
 }
 $18 = $15 & 4;
 $19 = ($18|0)==(0);
 if ($19) {
  $$0 = -1;
  return ($$0|0);
 }
 $20 = $15 | 32;
 HEAP32[$f>>2] = $20;
 $$0 = -1;
 return ($$0|0);
}
function ___towrite($f) {
 $f = $f|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 74|0);
 $1 = HEAP8[$0>>0]|0;
 $2 = $1 << 24 >> 24;
 $3 = (($2) + 255)|0;
 $4 = $3 | $2;
 $5 = $4&255;
 HEAP8[$0>>0] = $5;
 $6 = HEAP32[$f>>2]|0;
 $7 = $6 & 8;
 $8 = ($7|0)==(0);
 if ($8) {
  $10 = ((($f)) + 8|0);
  HEAP32[$10>>2] = 0;
  $11 = ((($f)) + 4|0);
  HEAP32[$11>>2] = 0;
  $12 = ((($f)) + 44|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = ((($f)) + 28|0);
  HEAP32[$14>>2] = $13;
  $15 = ((($f)) + 20|0);
  HEAP32[$15>>2] = $13;
  $16 = $13;
  $17 = ((($f)) + 48|0);
  $18 = HEAP32[$17>>2]|0;
  $19 = (($16) + ($18)|0);
  $20 = ((($f)) + 16|0);
  HEAP32[$20>>2] = $19;
  $$0 = 0;
  return ($$0|0);
 } else {
  $9 = $6 | 32;
  HEAP32[$f>>2] = $9;
  $$0 = -1;
  return ($$0|0);
 }
 return (0)|0;
}
function ___uflow($f) {
 $f = $f|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $c = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $c = sp;
 $0 = ((($f)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 if ($2) {
  $3 = (___toread($f)|0);
  $4 = ($3|0)==(0);
  if ($4) {
   label = 3;
  } else {
   $$0 = -1;
  }
 } else {
  label = 3;
 }
 if ((label|0) == 3) {
  $5 = ((($f)) + 32|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (FUNCTION_TABLE_iiii[$6 & 31]($f,$c,1)|0);
  $8 = ($7|0)==(1);
  if ($8) {
   $9 = HEAP8[$c>>0]|0;
   $10 = $9&255;
   $$0 = $10;
  } else {
   $$0 = -1;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function ___fwritex($s,$l,$f) {
 $s = $s|0;
 $l = $l|0;
 $f = $f|0;
 var $$0 = 0, $$01 = 0, $$02 = 0, $$pre = 0, $$pre6 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i$0 = 0, $i$0$lcssa10 = 0;
 var $i$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 do {
  if ($2) {
   $3 = (___towrite($f)|0);
   $4 = ($3|0)==(0);
   if ($4) {
    $$pre = HEAP32[$0>>2]|0;
    $7 = $$pre;
    break;
   } else {
    $$0 = 0;
    return ($$0|0);
   }
  } else {
   $7 = $1;
  }
 } while(0);
 $5 = ((($f)) + 20|0);
 $6 = HEAP32[$5>>2]|0;
 $8 = $7;
 $9 = $6;
 $10 = (($8) - ($9))|0;
 $11 = ($10>>>0)<($l>>>0);
 if ($11) {
  $12 = ((($f)) + 36|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = (FUNCTION_TABLE_iiii[$13 & 31]($f,$s,$l)|0);
  $$0 = $14;
  return ($$0|0);
 }
 $15 = ((($f)) + 75|0);
 $16 = HEAP8[$15>>0]|0;
 $17 = ($16<<24>>24)>(-1);
 L11: do {
  if ($17) {
   $i$0 = $l;
   while(1) {
    $18 = ($i$0|0)==(0);
    if ($18) {
     $$01 = $l;$$02 = $s;$29 = $6;$i$1 = 0;
     break L11;
    }
    $19 = (($i$0) + -1)|0;
    $20 = (($s) + ($19)|0);
    $21 = HEAP8[$20>>0]|0;
    $22 = ($21<<24>>24)==(10);
    if ($22) {
     $i$0$lcssa10 = $i$0;
     break;
    } else {
     $i$0 = $19;
    }
   }
   $23 = ((($f)) + 36|0);
   $24 = HEAP32[$23>>2]|0;
   $25 = (FUNCTION_TABLE_iiii[$24 & 31]($f,$s,$i$0$lcssa10)|0);
   $26 = ($25>>>0)<($i$0$lcssa10>>>0);
   if ($26) {
    $$0 = $i$0$lcssa10;
    return ($$0|0);
   } else {
    $27 = (($s) + ($i$0$lcssa10)|0);
    $28 = (($l) - ($i$0$lcssa10))|0;
    $$pre6 = HEAP32[$5>>2]|0;
    $$01 = $28;$$02 = $27;$29 = $$pre6;$i$1 = $i$0$lcssa10;
    break;
   }
  } else {
   $$01 = $l;$$02 = $s;$29 = $6;$i$1 = 0;
  }
 } while(0);
 _memcpy(($29|0),($$02|0),($$01|0))|0;
 $30 = HEAP32[$5>>2]|0;
 $31 = (($30) + ($$01)|0);
 HEAP32[$5>>2] = $31;
 $32 = (($i$1) + ($$01))|0;
 $$0 = $32;
 return ($$0|0);
}
function _snprintf($s,$n,$fmt,$varargs) {
 $s = $s|0;
 $n = $n|0;
 $fmt = $fmt|0;
 $varargs = $varargs|0;
 var $0 = 0, $ap = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $ap = sp;
 HEAP32[$ap>>2] = $varargs;
 $0 = (_vsnprintf($s,$n,$fmt,$ap)|0);
 STACKTOP = sp;return ($0|0);
}
function _MUSL_vfprintf($f,$fmt,$ap) {
 $f = $f|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $$ = 0, $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $ap2 = 0, $internal_buf = 0, $nl_arg = 0, $nl_type = 0, $ret$1 = 0, $vacopy_currentptr = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0;
 $ap2 = sp + 120|0;
 $nl_type = sp + 80|0;
 $nl_arg = sp;
 $internal_buf = sp + 136|0;
 dest=$nl_type; stop=dest+40|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $vacopy_currentptr = HEAP32[$ap>>2]|0;
 HEAP32[$ap2>>2] = $vacopy_currentptr;
 $0 = (_printf_core(0,$fmt,$ap2,$nl_arg,$nl_type)|0);
 $1 = ($0|0)<(0);
 if ($1) {
  $$0 = -1;
  STACKTOP = sp;return ($$0|0);
 }
 $2 = ((($f)) + 48|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0);
 if ($4) {
  $6 = ((($f)) + 44|0);
  $7 = HEAP32[$6>>2]|0;
  HEAP32[$6>>2] = $internal_buf;
  $8 = ((($f)) + 28|0);
  HEAP32[$8>>2] = $internal_buf;
  $9 = ((($f)) + 20|0);
  HEAP32[$9>>2] = $internal_buf;
  HEAP32[$2>>2] = 80;
  $10 = ((($internal_buf)) + 80|0);
  $11 = ((($f)) + 16|0);
  HEAP32[$11>>2] = $10;
  $12 = (_printf_core($f,$fmt,$ap2,$nl_arg,$nl_type)|0);
  $13 = ($7|0)==(0|0);
  if ($13) {
   $ret$1 = $12;
  } else {
   $14 = ((($f)) + 36|0);
   $15 = HEAP32[$14>>2]|0;
   (FUNCTION_TABLE_iiii[$15 & 31]($f,0,0)|0);
   $16 = HEAP32[$9>>2]|0;
   $17 = ($16|0)==(0|0);
   $$ = $17 ? -1 : $12;
   HEAP32[$6>>2] = $7;
   HEAP32[$2>>2] = 0;
   HEAP32[$11>>2] = 0;
   HEAP32[$8>>2] = 0;
   HEAP32[$9>>2] = 0;
   $ret$1 = $$;
  }
 } else {
  $5 = (_printf_core($f,$fmt,$ap2,$nl_arg,$nl_type)|0);
  $ret$1 = $5;
 }
 $$0 = $ret$1;
 STACKTOP = sp;return ($$0|0);
}
function _vsnprintf($s,$n,$fmt,$ap) {
 $s = $s|0;
 $n = $n|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $$$02 = 0, $$0 = 0, $$01 = 0, $$02 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $b = 0, $f = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0;
 $b = sp + 112|0;
 $f = sp;
 dest=$f; src=3832; stop=dest+112|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
 $0 = (($n) + -1)|0;
 $1 = ($0>>>0)>(2147483646);
 if ($1) {
  $2 = ($n|0)==(0);
  if ($2) {
   $$01 = $b;$$02 = 1;
  } else {
   $3 = (___errno_location()|0);
   HEAP32[$3>>2] = 75;
   $$0 = -1;
   STACKTOP = sp;return ($$0|0);
  }
 } else {
  $$01 = $s;$$02 = $n;
 }
 $4 = $$01;
 $5 = (-2 - ($4))|0;
 $6 = ($$02>>>0)>($5>>>0);
 $$$02 = $6 ? $5 : $$02;
 $7 = ((($f)) + 48|0);
 HEAP32[$7>>2] = $$$02;
 $8 = ((($f)) + 20|0);
 HEAP32[$8>>2] = $$01;
 $9 = ((($f)) + 44|0);
 HEAP32[$9>>2] = $$01;
 $10 = (($$01) + ($$$02)|0);
 $11 = ((($f)) + 16|0);
 HEAP32[$11>>2] = $10;
 $12 = ((($f)) + 28|0);
 HEAP32[$12>>2] = $10;
 $13 = (_MUSL_vfprintf($f,$fmt,$ap)|0);
 $14 = ($$$02|0)==(0);
 if ($14) {
  $$0 = $13;
  STACKTOP = sp;return ($$0|0);
 }
 $15 = HEAP32[$8>>2]|0;
 $16 = HEAP32[$11>>2]|0;
 $17 = ($15|0)==($16|0);
 $18 = $17 << 31 >> 31;
 $19 = (($15) + ($18)|0);
 HEAP8[$19>>0] = 0;
 $$0 = $13;
 STACKTOP = sp;return ($$0|0);
}
function _atof($s) {
 $s = $s|0;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_strtod($s,0));
 return (+$0);
}
function _strtod($s,$p) {
 $s = $s|0;
 $p = $p|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $f$i = 0, dest = 0, label = 0;
 var sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $f$i = sp;
 dest=$f$i; stop=dest+112|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $0 = ((($f$i)) + 4|0);
 HEAP32[$0>>2] = $s;
 $1 = ((($f$i)) + 8|0);
 HEAP32[$1>>2] = (-1);
 $2 = ((($f$i)) + 44|0);
 HEAP32[$2>>2] = $s;
 $3 = ((($f$i)) + 76|0);
 HEAP32[$3>>2] = -1;
 ___shlim($f$i,0);
 $4 = (+___floatscan($f$i,1,1));
 $5 = ((($f$i)) + 108|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = HEAP32[$0>>2]|0;
 $8 = HEAP32[$1>>2]|0;
 $9 = $7;
 $10 = $8;
 $11 = (($9) - ($10))|0;
 $12 = (($11) + ($6))|0;
 $13 = ($p|0)==(0|0);
 if ($13) {
  STACKTOP = sp;return (+$4);
 }
 $14 = ($12|0)!=(0);
 $15 = (($s) + ($12)|0);
 $16 = $14 ? $15 : $s;
 HEAP32[$p>>2] = $16;
 STACKTOP = sp;return (+$4);
}
function _strtold_l($s,$p,$loc) {
 $s = $s|0;
 $p = $p|0;
 $loc = $loc|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $f$i$i = 0, dest = 0, label = 0;
 var sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $f$i$i = sp;
 dest=$f$i$i; stop=dest+112|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $0 = ((($f$i$i)) + 4|0);
 HEAP32[$0>>2] = $s;
 $1 = ((($f$i$i)) + 8|0);
 HEAP32[$1>>2] = (-1);
 $2 = ((($f$i$i)) + 44|0);
 HEAP32[$2>>2] = $s;
 $3 = ((($f$i$i)) + 76|0);
 HEAP32[$3>>2] = -1;
 ___shlim($f$i$i,0);
 $4 = (+___floatscan($f$i$i,2,1));
 $5 = ((($f$i$i)) + 108|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = HEAP32[$0>>2]|0;
 $8 = HEAP32[$1>>2]|0;
 $9 = $7;
 $10 = $8;
 $11 = (($9) - ($10))|0;
 $12 = (($11) + ($6))|0;
 $13 = ($p|0)==(0|0);
 if ($13) {
  STACKTOP = sp;return (+$4);
 }
 $14 = ($12|0)!=(0);
 $15 = (($s) + ($12)|0);
 $16 = $14 ? $15 : $s;
 HEAP32[$p>>2] = $16;
 STACKTOP = sp;return (+$4);
}
function _strtoull($s,$p,$base) {
 $s = $s|0;
 $p = $p|0;
 $base = $base|0;
 var $$sink$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $f$i = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $f$i = sp;
 HEAP32[$f$i>>2] = 0;
 $0 = ((($f$i)) + 4|0);
 HEAP32[$0>>2] = $s;
 $1 = ((($f$i)) + 44|0);
 HEAP32[$1>>2] = $s;
 $2 = ($s|0)<(0|0);
 $3 = ((($s)) + 2147483647|0);
 $$sink$i = $2 ? (-1) : $3;
 $4 = ((($f$i)) + 8|0);
 HEAP32[$4>>2] = $$sink$i;
 $5 = ((($f$i)) + 76|0);
 HEAP32[$5>>2] = -1;
 ___shlim($f$i,0);
 $6 = (___intscan($f$i,$base,1,-1,-1)|0);
 $7 = tempRet0;
 $8 = ($p|0)==(0|0);
 if ($8) {
  tempRet0 = ($7);
  STACKTOP = sp;return ($6|0);
 }
 $9 = ((($f$i)) + 108|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAP32[$0>>2]|0;
 $12 = HEAP32[$4>>2]|0;
 $13 = $11;
 $14 = $12;
 $15 = (($13) + ($10))|0;
 $16 = (($15) - ($14))|0;
 $17 = (($s) + ($16)|0);
 HEAP32[$p>>2] = $17;
 tempRet0 = ($7);
 STACKTOP = sp;return ($6|0);
}
function _strtoll($s,$p,$base) {
 $s = $s|0;
 $p = $p|0;
 $base = $base|0;
 var $$sink$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $f$i = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $f$i = sp;
 HEAP32[$f$i>>2] = 0;
 $0 = ((($f$i)) + 4|0);
 HEAP32[$0>>2] = $s;
 $1 = ((($f$i)) + 44|0);
 HEAP32[$1>>2] = $s;
 $2 = ($s|0)<(0|0);
 $3 = ((($s)) + 2147483647|0);
 $$sink$i = $2 ? (-1) : $3;
 $4 = ((($f$i)) + 8|0);
 HEAP32[$4>>2] = $$sink$i;
 $5 = ((($f$i)) + 76|0);
 HEAP32[$5>>2] = -1;
 ___shlim($f$i,0);
 $6 = (___intscan($f$i,$base,1,0,-2147483648)|0);
 $7 = tempRet0;
 $8 = ($p|0)==(0|0);
 if ($8) {
  tempRet0 = ($7);
  STACKTOP = sp;return ($6|0);
 }
 $9 = ((($f$i)) + 108|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAP32[$0>>2]|0;
 $12 = HEAP32[$4>>2]|0;
 $13 = $11;
 $14 = $12;
 $15 = (($13) + ($10))|0;
 $16 = (($15) - ($14))|0;
 $17 = (($s) + ($16)|0);
 HEAP32[$p>>2] = $17;
 tempRet0 = ($7);
 STACKTOP = sp;return ($6|0);
}
function _memchr($src,$c,$n) {
 $src = $src|0;
 $c = $c|0;
 $n = $n|0;
 var $$0$lcssa = 0, $$0$lcssa44 = 0, $$019 = 0, $$1$lcssa = 0, $$110 = 0, $$110$lcssa = 0, $$24 = 0, $$3 = 0, $$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond18 = 0, $s$0$lcssa = 0, $s$0$lcssa43 = 0, $s$020 = 0, $s$15 = 0, $s$2 = 0, $w$0$lcssa = 0, $w$011 = 0, $w$011$lcssa = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $c & 255;
 $1 = $src;
 $2 = $1 & 3;
 $3 = ($2|0)!=(0);
 $4 = ($n|0)!=(0);
 $or$cond18 = $4 & $3;
 L1: do {
  if ($or$cond18) {
   $5 = $c&255;
   $$019 = $n;$s$020 = $src;
   while(1) {
    $6 = HEAP8[$s$020>>0]|0;
    $7 = ($6<<24>>24)==($5<<24>>24);
    if ($7) {
     $$0$lcssa44 = $$019;$s$0$lcssa43 = $s$020;
     label = 6;
     break L1;
    }
    $8 = ((($s$020)) + 1|0);
    $9 = (($$019) + -1)|0;
    $10 = $8;
    $11 = $10 & 3;
    $12 = ($11|0)!=(0);
    $13 = ($9|0)!=(0);
    $or$cond = $13 & $12;
    if ($or$cond) {
     $$019 = $9;$s$020 = $8;
    } else {
     $$0$lcssa = $9;$$lcssa = $13;$s$0$lcssa = $8;
     label = 5;
     break;
    }
   }
  } else {
   $$0$lcssa = $n;$$lcssa = $4;$s$0$lcssa = $src;
   label = 5;
  }
 } while(0);
 if ((label|0) == 5) {
  if ($$lcssa) {
   $$0$lcssa44 = $$0$lcssa;$s$0$lcssa43 = $s$0$lcssa;
   label = 6;
  } else {
   $$3 = 0;$s$2 = $s$0$lcssa;
  }
 }
 L8: do {
  if ((label|0) == 6) {
   $14 = HEAP8[$s$0$lcssa43>>0]|0;
   $15 = $c&255;
   $16 = ($14<<24>>24)==($15<<24>>24);
   if ($16) {
    $$3 = $$0$lcssa44;$s$2 = $s$0$lcssa43;
   } else {
    $17 = Math_imul($0, 16843009)|0;
    $18 = ($$0$lcssa44>>>0)>(3);
    L11: do {
     if ($18) {
      $$110 = $$0$lcssa44;$w$011 = $s$0$lcssa43;
      while(1) {
       $19 = HEAP32[$w$011>>2]|0;
       $20 = $19 ^ $17;
       $21 = (($20) + -16843009)|0;
       $22 = $20 & -2139062144;
       $23 = $22 ^ -2139062144;
       $24 = $23 & $21;
       $25 = ($24|0)==(0);
       if (!($25)) {
        $$110$lcssa = $$110;$w$011$lcssa = $w$011;
        break;
       }
       $26 = ((($w$011)) + 4|0);
       $27 = (($$110) + -4)|0;
       $28 = ($27>>>0)>(3);
       if ($28) {
        $$110 = $27;$w$011 = $26;
       } else {
        $$1$lcssa = $27;$w$0$lcssa = $26;
        label = 11;
        break L11;
       }
      }
      $$24 = $$110$lcssa;$s$15 = $w$011$lcssa;
     } else {
      $$1$lcssa = $$0$lcssa44;$w$0$lcssa = $s$0$lcssa43;
      label = 11;
     }
    } while(0);
    if ((label|0) == 11) {
     $29 = ($$1$lcssa|0)==(0);
     if ($29) {
      $$3 = 0;$s$2 = $w$0$lcssa;
      break;
     } else {
      $$24 = $$1$lcssa;$s$15 = $w$0$lcssa;
     }
    }
    while(1) {
     $30 = HEAP8[$s$15>>0]|0;
     $31 = ($30<<24>>24)==($15<<24>>24);
     if ($31) {
      $$3 = $$24;$s$2 = $s$15;
      break L8;
     }
     $32 = ((($s$15)) + 1|0);
     $33 = (($$24) + -1)|0;
     $34 = ($33|0)==(0);
     if ($34) {
      $$3 = 0;$s$2 = $32;
      break;
     } else {
      $$24 = $33;$s$15 = $32;
     }
    }
   }
  }
 } while(0);
 $35 = ($$3|0)!=(0);
 $36 = $35 ? $s$2 : 0;
 return ($36|0);
}
function _try_realloc_chunk($p,$nb) {
 $p = $p|0;
 $nb = $nb|0;
 var $$pre = 0, $$pre$phiZ2D = 0, $$sum = 0, $$sum11 = 0, $$sum12 = 0, $$sum13 = 0, $$sum14 = 0, $$sum15 = 0, $$sum16 = 0, $$sum17 = 0, $$sum19 = 0, $$sum2 = 0, $$sum20 = 0, $$sum22 = 0, $$sum23 = 0, $$sum2728 = 0, $$sum3 = 0, $$sum4 = 0, $$sum5 = 0, $$sum78 = 0;
 var $$sum910 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0;
 var $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0;
 var $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0;
 var $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0;
 var $17 = 0, $170 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $R$0 = 0, $R$0$lcssa = 0, $R$1 = 0, $RP$0 = 0, $RP$0$lcssa = 0, $cond = 0, $newp$0 = 0, $notlhs = 0;
 var $notrhs = 0, $or$cond$not = 0, $or$cond30 = 0, $storemerge = 0, $storemerge21 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($p)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 & -8;
 $3 = (($p) + ($2)|0);
 $4 = HEAP32[(3024)>>2]|0;
 $5 = $1 & 3;
 $notlhs = ($p>>>0)>=($4>>>0);
 $notrhs = ($5|0)!=(1);
 $or$cond$not = $notrhs & $notlhs;
 $6 = ($p>>>0)<($3>>>0);
 $or$cond30 = $or$cond$not & $6;
 if (!($or$cond30)) {
  _abort();
  // unreachable;
 }
 $$sum2728 = $2 | 4;
 $7 = (($p) + ($$sum2728)|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = $8 & 1;
 $10 = ($9|0)==(0);
 if ($10) {
  _abort();
  // unreachable;
 }
 $11 = ($5|0)==(0);
 if ($11) {
  $12 = ($nb>>>0)<(256);
  if ($12) {
   $newp$0 = 0;
   return ($newp$0|0);
  }
  $13 = (($nb) + 4)|0;
  $14 = ($2>>>0)<($13>>>0);
  if (!($14)) {
   $15 = (($2) - ($nb))|0;
   $16 = HEAP32[(3488)>>2]|0;
   $17 = $16 << 1;
   $18 = ($15>>>0)>($17>>>0);
   if (!($18)) {
    $newp$0 = $p;
    return ($newp$0|0);
   }
  }
  $newp$0 = 0;
  return ($newp$0|0);
 }
 $19 = ($2>>>0)<($nb>>>0);
 if (!($19)) {
  $20 = (($2) - ($nb))|0;
  $21 = ($20>>>0)>(15);
  if (!($21)) {
   $newp$0 = $p;
   return ($newp$0|0);
  }
  $22 = (($p) + ($nb)|0);
  $23 = $1 & 1;
  $24 = $23 | $nb;
  $25 = $24 | 2;
  HEAP32[$0>>2] = $25;
  $$sum23 = (($nb) + 4)|0;
  $26 = (($p) + ($$sum23)|0);
  $27 = $20 | 3;
  HEAP32[$26>>2] = $27;
  $28 = HEAP32[$7>>2]|0;
  $29 = $28 | 1;
  HEAP32[$7>>2] = $29;
  _dispose_chunk($22,$20);
  $newp$0 = $p;
  return ($newp$0|0);
 }
 $30 = HEAP32[(3032)>>2]|0;
 $31 = ($3|0)==($30|0);
 if ($31) {
  $32 = HEAP32[(3020)>>2]|0;
  $33 = (($32) + ($2))|0;
  $34 = ($33>>>0)>($nb>>>0);
  if (!($34)) {
   $newp$0 = 0;
   return ($newp$0|0);
  }
  $35 = (($33) - ($nb))|0;
  $36 = (($p) + ($nb)|0);
  $37 = $1 & 1;
  $38 = $37 | $nb;
  $39 = $38 | 2;
  HEAP32[$0>>2] = $39;
  $$sum22 = (($nb) + 4)|0;
  $40 = (($p) + ($$sum22)|0);
  $41 = $35 | 1;
  HEAP32[$40>>2] = $41;
  HEAP32[(3032)>>2] = $36;
  HEAP32[(3020)>>2] = $35;
  $newp$0 = $p;
  return ($newp$0|0);
 }
 $42 = HEAP32[(3028)>>2]|0;
 $43 = ($3|0)==($42|0);
 if ($43) {
  $44 = HEAP32[(3016)>>2]|0;
  $45 = (($44) + ($2))|0;
  $46 = ($45>>>0)<($nb>>>0);
  if ($46) {
   $newp$0 = 0;
   return ($newp$0|0);
  }
  $47 = (($45) - ($nb))|0;
  $48 = ($47>>>0)>(15);
  if ($48) {
   $49 = (($p) + ($nb)|0);
   $50 = (($p) + ($45)|0);
   $51 = $1 & 1;
   $52 = $51 | $nb;
   $53 = $52 | 2;
   HEAP32[$0>>2] = $53;
   $$sum19 = (($nb) + 4)|0;
   $54 = (($p) + ($$sum19)|0);
   $55 = $47 | 1;
   HEAP32[$54>>2] = $55;
   HEAP32[$50>>2] = $47;
   $$sum20 = (($45) + 4)|0;
   $56 = (($p) + ($$sum20)|0);
   $57 = HEAP32[$56>>2]|0;
   $58 = $57 & -2;
   HEAP32[$56>>2] = $58;
   $storemerge = $49;$storemerge21 = $47;
  } else {
   $59 = $1 & 1;
   $60 = $59 | $45;
   $61 = $60 | 2;
   HEAP32[$0>>2] = $61;
   $$sum17 = (($45) + 4)|0;
   $62 = (($p) + ($$sum17)|0);
   $63 = HEAP32[$62>>2]|0;
   $64 = $63 | 1;
   HEAP32[$62>>2] = $64;
   $storemerge = 0;$storemerge21 = 0;
  }
  HEAP32[(3016)>>2] = $storemerge21;
  HEAP32[(3028)>>2] = $storemerge;
  $newp$0 = $p;
  return ($newp$0|0);
 }
 $65 = $8 & 2;
 $66 = ($65|0)==(0);
 if (!($66)) {
  $newp$0 = 0;
  return ($newp$0|0);
 }
 $67 = $8 & -8;
 $68 = (($67) + ($2))|0;
 $69 = ($68>>>0)<($nb>>>0);
 if ($69) {
  $newp$0 = 0;
  return ($newp$0|0);
 }
 $70 = (($68) - ($nb))|0;
 $71 = $8 >>> 3;
 $72 = ($8>>>0)<(256);
 do {
  if ($72) {
   $$sum15 = (($2) + 8)|0;
   $73 = (($p) + ($$sum15)|0);
   $74 = HEAP32[$73>>2]|0;
   $$sum16 = (($2) + 12)|0;
   $75 = (($p) + ($$sum16)|0);
   $76 = HEAP32[$75>>2]|0;
   $77 = $71 << 1;
   $78 = (3048 + ($77<<2)|0);
   $79 = ($74|0)==($78|0);
   if (!($79)) {
    $80 = ($74>>>0)<($4>>>0);
    if ($80) {
     _abort();
     // unreachable;
    }
    $81 = ((($74)) + 12|0);
    $82 = HEAP32[$81>>2]|0;
    $83 = ($82|0)==($3|0);
    if (!($83)) {
     _abort();
     // unreachable;
    }
   }
   $84 = ($76|0)==($74|0);
   if ($84) {
    $85 = 1 << $71;
    $86 = $85 ^ -1;
    $87 = HEAP32[3008>>2]|0;
    $88 = $87 & $86;
    HEAP32[3008>>2] = $88;
    break;
   }
   $89 = ($76|0)==($78|0);
   if ($89) {
    $$pre = ((($76)) + 8|0);
    $$pre$phiZ2D = $$pre;
   } else {
    $90 = ($76>>>0)<($4>>>0);
    if ($90) {
     _abort();
     // unreachable;
    }
    $91 = ((($76)) + 8|0);
    $92 = HEAP32[$91>>2]|0;
    $93 = ($92|0)==($3|0);
    if ($93) {
     $$pre$phiZ2D = $91;
    } else {
     _abort();
     // unreachable;
    }
   }
   $94 = ((($74)) + 12|0);
   HEAP32[$94>>2] = $76;
   HEAP32[$$pre$phiZ2D>>2] = $74;
  } else {
   $$sum = (($2) + 24)|0;
   $95 = (($p) + ($$sum)|0);
   $96 = HEAP32[$95>>2]|0;
   $$sum2 = (($2) + 12)|0;
   $97 = (($p) + ($$sum2)|0);
   $98 = HEAP32[$97>>2]|0;
   $99 = ($98|0)==($3|0);
   do {
    if ($99) {
     $$sum4 = (($2) + 20)|0;
     $109 = (($p) + ($$sum4)|0);
     $110 = HEAP32[$109>>2]|0;
     $111 = ($110|0)==(0|0);
     if ($111) {
      $$sum3 = (($2) + 16)|0;
      $112 = (($p) + ($$sum3)|0);
      $113 = HEAP32[$112>>2]|0;
      $114 = ($113|0)==(0|0);
      if ($114) {
       $R$1 = 0;
       break;
      } else {
       $R$0 = $113;$RP$0 = $112;
      }
     } else {
      $R$0 = $110;$RP$0 = $109;
     }
     while(1) {
      $115 = ((($R$0)) + 20|0);
      $116 = HEAP32[$115>>2]|0;
      $117 = ($116|0)==(0|0);
      if (!($117)) {
       $R$0 = $116;$RP$0 = $115;
       continue;
      }
      $118 = ((($R$0)) + 16|0);
      $119 = HEAP32[$118>>2]|0;
      $120 = ($119|0)==(0|0);
      if ($120) {
       $R$0$lcssa = $R$0;$RP$0$lcssa = $RP$0;
       break;
      } else {
       $R$0 = $119;$RP$0 = $118;
      }
     }
     $121 = ($RP$0$lcssa>>>0)<($4>>>0);
     if ($121) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$RP$0$lcssa>>2] = 0;
      $R$1 = $R$0$lcssa;
      break;
     }
    } else {
     $$sum14 = (($2) + 8)|0;
     $100 = (($p) + ($$sum14)|0);
     $101 = HEAP32[$100>>2]|0;
     $102 = ($101>>>0)<($4>>>0);
     if ($102) {
      _abort();
      // unreachable;
     }
     $103 = ((($101)) + 12|0);
     $104 = HEAP32[$103>>2]|0;
     $105 = ($104|0)==($3|0);
     if (!($105)) {
      _abort();
      // unreachable;
     }
     $106 = ((($98)) + 8|0);
     $107 = HEAP32[$106>>2]|0;
     $108 = ($107|0)==($3|0);
     if ($108) {
      HEAP32[$103>>2] = $98;
      HEAP32[$106>>2] = $101;
      $R$1 = $98;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $122 = ($96|0)==(0|0);
   if (!($122)) {
    $$sum11 = (($2) + 28)|0;
    $123 = (($p) + ($$sum11)|0);
    $124 = HEAP32[$123>>2]|0;
    $125 = (3312 + ($124<<2)|0);
    $126 = HEAP32[$125>>2]|0;
    $127 = ($3|0)==($126|0);
    if ($127) {
     HEAP32[$125>>2] = $R$1;
     $cond = ($R$1|0)==(0|0);
     if ($cond) {
      $128 = 1 << $124;
      $129 = $128 ^ -1;
      $130 = HEAP32[(3012)>>2]|0;
      $131 = $130 & $129;
      HEAP32[(3012)>>2] = $131;
      break;
     }
    } else {
     $132 = HEAP32[(3024)>>2]|0;
     $133 = ($96>>>0)<($132>>>0);
     if ($133) {
      _abort();
      // unreachable;
     }
     $134 = ((($96)) + 16|0);
     $135 = HEAP32[$134>>2]|0;
     $136 = ($135|0)==($3|0);
     if ($136) {
      HEAP32[$134>>2] = $R$1;
     } else {
      $137 = ((($96)) + 20|0);
      HEAP32[$137>>2] = $R$1;
     }
     $138 = ($R$1|0)==(0|0);
     if ($138) {
      break;
     }
    }
    $139 = HEAP32[(3024)>>2]|0;
    $140 = ($R$1>>>0)<($139>>>0);
    if ($140) {
     _abort();
     // unreachable;
    }
    $141 = ((($R$1)) + 24|0);
    HEAP32[$141>>2] = $96;
    $$sum12 = (($2) + 16)|0;
    $142 = (($p) + ($$sum12)|0);
    $143 = HEAP32[$142>>2]|0;
    $144 = ($143|0)==(0|0);
    do {
     if (!($144)) {
      $145 = ($143>>>0)<($139>>>0);
      if ($145) {
       _abort();
       // unreachable;
      } else {
       $146 = ((($R$1)) + 16|0);
       HEAP32[$146>>2] = $143;
       $147 = ((($143)) + 24|0);
       HEAP32[$147>>2] = $R$1;
       break;
      }
     }
    } while(0);
    $$sum13 = (($2) + 20)|0;
    $148 = (($p) + ($$sum13)|0);
    $149 = HEAP32[$148>>2]|0;
    $150 = ($149|0)==(0|0);
    if (!($150)) {
     $151 = HEAP32[(3024)>>2]|0;
     $152 = ($149>>>0)<($151>>>0);
     if ($152) {
      _abort();
      // unreachable;
     } else {
      $153 = ((($R$1)) + 20|0);
      HEAP32[$153>>2] = $149;
      $154 = ((($149)) + 24|0);
      HEAP32[$154>>2] = $R$1;
      break;
     }
    }
   }
  }
 } while(0);
 $155 = ($70>>>0)<(16);
 if ($155) {
  $156 = $1 & 1;
  $157 = $68 | $156;
  $158 = $157 | 2;
  HEAP32[$0>>2] = $158;
  $$sum910 = $68 | 4;
  $159 = (($p) + ($$sum910)|0);
  $160 = HEAP32[$159>>2]|0;
  $161 = $160 | 1;
  HEAP32[$159>>2] = $161;
  $newp$0 = $p;
  return ($newp$0|0);
 } else {
  $162 = (($p) + ($nb)|0);
  $163 = $1 & 1;
  $164 = $163 | $nb;
  $165 = $164 | 2;
  HEAP32[$0>>2] = $165;
  $$sum5 = (($nb) + 4)|0;
  $166 = (($p) + ($$sum5)|0);
  $167 = $70 | 3;
  HEAP32[$166>>2] = $167;
  $$sum78 = $68 | 4;
  $168 = (($p) + ($$sum78)|0);
  $169 = HEAP32[$168>>2]|0;
  $170 = $169 | 1;
  HEAP32[$168>>2] = $170;
  _dispose_chunk($162,$70);
  $newp$0 = $p;
  return ($newp$0|0);
 }
 return (0)|0;
}
function _dispose_chunk($p,$psize) {
 $p = $p|0;
 $psize = $psize|0;
 var $$0 = 0, $$02 = 0, $$1 = 0, $$lcssa = 0, $$pre = 0, $$pre$phi50Z2D = 0, $$pre$phi52Z2D = 0, $$pre$phiZ2D = 0, $$pre48 = 0, $$pre49 = 0, $$pre51 = 0, $$sum = 0, $$sum1 = 0, $$sum10 = 0, $$sum11 = 0, $$sum12 = 0, $$sum13 = 0, $$sum14 = 0, $$sum16 = 0, $$sum17 = 0;
 var $$sum18 = 0, $$sum19 = 0, $$sum2 = 0, $$sum20 = 0, $$sum21 = 0, $$sum22 = 0, $$sum23 = 0, $$sum24 = 0, $$sum25 = 0, $$sum3 = 0, $$sum4 = 0, $$sum5 = 0, $$sum7 = 0, $$sum8 = 0, $$sum9 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0;
 var $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0;
 var $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0;
 var $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0;
 var $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0;
 var $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0;
 var $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0;
 var $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0;
 var $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0;
 var $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0;
 var $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0;
 var $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $F16$0 = 0, $I19$0 = 0, $K20$043 = 0, $R$0 = 0, $R$0$lcssa = 0, $R$1 = 0, $R7$0 = 0, $R7$0$lcssa = 0, $R7$1 = 0, $RP$0 = 0, $RP$0$lcssa = 0, $RP9$0 = 0, $RP9$0$lcssa = 0, $T$0$lcssa = 0, $T$042 = 0, $T$042$lcssa = 0, $cond = 0;
 var $cond39 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($p) + ($psize)|0);
 $1 = ((($p)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = $2 & 1;
 $4 = ($3|0)==(0);
 do {
  if ($4) {
   $5 = HEAP32[$p>>2]|0;
   $6 = $2 & 3;
   $7 = ($6|0)==(0);
   if ($7) {
    return;
   }
   $8 = (0 - ($5))|0;
   $9 = (($p) + ($8)|0);
   $10 = (($5) + ($psize))|0;
   $11 = HEAP32[(3024)>>2]|0;
   $12 = ($9>>>0)<($11>>>0);
   if ($12) {
    _abort();
    // unreachable;
   }
   $13 = HEAP32[(3028)>>2]|0;
   $14 = ($9|0)==($13|0);
   if ($14) {
    $$sum = (($psize) + 4)|0;
    $99 = (($p) + ($$sum)|0);
    $100 = HEAP32[$99>>2]|0;
    $101 = $100 & 3;
    $102 = ($101|0)==(3);
    if (!($102)) {
     $$0 = $9;$$02 = $10;
     break;
    }
    HEAP32[(3016)>>2] = $10;
    $103 = $100 & -2;
    HEAP32[$99>>2] = $103;
    $104 = $10 | 1;
    $$sum14 = (4 - ($5))|0;
    $105 = (($p) + ($$sum14)|0);
    HEAP32[$105>>2] = $104;
    HEAP32[$0>>2] = $10;
    return;
   }
   $15 = $5 >>> 3;
   $16 = ($5>>>0)<(256);
   if ($16) {
    $$sum24 = (8 - ($5))|0;
    $17 = (($p) + ($$sum24)|0);
    $18 = HEAP32[$17>>2]|0;
    $$sum25 = (12 - ($5))|0;
    $19 = (($p) + ($$sum25)|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = $15 << 1;
    $22 = (3048 + ($21<<2)|0);
    $23 = ($18|0)==($22|0);
    if (!($23)) {
     $24 = ($18>>>0)<($11>>>0);
     if ($24) {
      _abort();
      // unreachable;
     }
     $25 = ((($18)) + 12|0);
     $26 = HEAP32[$25>>2]|0;
     $27 = ($26|0)==($9|0);
     if (!($27)) {
      _abort();
      // unreachable;
     }
    }
    $28 = ($20|0)==($18|0);
    if ($28) {
     $29 = 1 << $15;
     $30 = $29 ^ -1;
     $31 = HEAP32[3008>>2]|0;
     $32 = $31 & $30;
     HEAP32[3008>>2] = $32;
     $$0 = $9;$$02 = $10;
     break;
    }
    $33 = ($20|0)==($22|0);
    if ($33) {
     $$pre51 = ((($20)) + 8|0);
     $$pre$phi52Z2D = $$pre51;
    } else {
     $34 = ($20>>>0)<($11>>>0);
     if ($34) {
      _abort();
      // unreachable;
     }
     $35 = ((($20)) + 8|0);
     $36 = HEAP32[$35>>2]|0;
     $37 = ($36|0)==($9|0);
     if ($37) {
      $$pre$phi52Z2D = $35;
     } else {
      _abort();
      // unreachable;
     }
    }
    $38 = ((($18)) + 12|0);
    HEAP32[$38>>2] = $20;
    HEAP32[$$pre$phi52Z2D>>2] = $18;
    $$0 = $9;$$02 = $10;
    break;
   }
   $$sum16 = (24 - ($5))|0;
   $39 = (($p) + ($$sum16)|0);
   $40 = HEAP32[$39>>2]|0;
   $$sum17 = (12 - ($5))|0;
   $41 = (($p) + ($$sum17)|0);
   $42 = HEAP32[$41>>2]|0;
   $43 = ($42|0)==($9|0);
   do {
    if ($43) {
     $$sum18 = (16 - ($5))|0;
     $$sum19 = (($$sum18) + 4)|0;
     $53 = (($p) + ($$sum19)|0);
     $54 = HEAP32[$53>>2]|0;
     $55 = ($54|0)==(0|0);
     if ($55) {
      $56 = (($p) + ($$sum18)|0);
      $57 = HEAP32[$56>>2]|0;
      $58 = ($57|0)==(0|0);
      if ($58) {
       $R$1 = 0;
       break;
      } else {
       $R$0 = $57;$RP$0 = $56;
      }
     } else {
      $R$0 = $54;$RP$0 = $53;
     }
     while(1) {
      $59 = ((($R$0)) + 20|0);
      $60 = HEAP32[$59>>2]|0;
      $61 = ($60|0)==(0|0);
      if (!($61)) {
       $R$0 = $60;$RP$0 = $59;
       continue;
      }
      $62 = ((($R$0)) + 16|0);
      $63 = HEAP32[$62>>2]|0;
      $64 = ($63|0)==(0|0);
      if ($64) {
       $R$0$lcssa = $R$0;$RP$0$lcssa = $RP$0;
       break;
      } else {
       $R$0 = $63;$RP$0 = $62;
      }
     }
     $65 = ($RP$0$lcssa>>>0)<($11>>>0);
     if ($65) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$RP$0$lcssa>>2] = 0;
      $R$1 = $R$0$lcssa;
      break;
     }
    } else {
     $$sum23 = (8 - ($5))|0;
     $44 = (($p) + ($$sum23)|0);
     $45 = HEAP32[$44>>2]|0;
     $46 = ($45>>>0)<($11>>>0);
     if ($46) {
      _abort();
      // unreachable;
     }
     $47 = ((($45)) + 12|0);
     $48 = HEAP32[$47>>2]|0;
     $49 = ($48|0)==($9|0);
     if (!($49)) {
      _abort();
      // unreachable;
     }
     $50 = ((($42)) + 8|0);
     $51 = HEAP32[$50>>2]|0;
     $52 = ($51|0)==($9|0);
     if ($52) {
      HEAP32[$47>>2] = $42;
      HEAP32[$50>>2] = $45;
      $R$1 = $42;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $66 = ($40|0)==(0|0);
   if ($66) {
    $$0 = $9;$$02 = $10;
   } else {
    $$sum20 = (28 - ($5))|0;
    $67 = (($p) + ($$sum20)|0);
    $68 = HEAP32[$67>>2]|0;
    $69 = (3312 + ($68<<2)|0);
    $70 = HEAP32[$69>>2]|0;
    $71 = ($9|0)==($70|0);
    if ($71) {
     HEAP32[$69>>2] = $R$1;
     $cond = ($R$1|0)==(0|0);
     if ($cond) {
      $72 = 1 << $68;
      $73 = $72 ^ -1;
      $74 = HEAP32[(3012)>>2]|0;
      $75 = $74 & $73;
      HEAP32[(3012)>>2] = $75;
      $$0 = $9;$$02 = $10;
      break;
     }
    } else {
     $76 = HEAP32[(3024)>>2]|0;
     $77 = ($40>>>0)<($76>>>0);
     if ($77) {
      _abort();
      // unreachable;
     }
     $78 = ((($40)) + 16|0);
     $79 = HEAP32[$78>>2]|0;
     $80 = ($79|0)==($9|0);
     if ($80) {
      HEAP32[$78>>2] = $R$1;
     } else {
      $81 = ((($40)) + 20|0);
      HEAP32[$81>>2] = $R$1;
     }
     $82 = ($R$1|0)==(0|0);
     if ($82) {
      $$0 = $9;$$02 = $10;
      break;
     }
    }
    $83 = HEAP32[(3024)>>2]|0;
    $84 = ($R$1>>>0)<($83>>>0);
    if ($84) {
     _abort();
     // unreachable;
    }
    $85 = ((($R$1)) + 24|0);
    HEAP32[$85>>2] = $40;
    $$sum21 = (16 - ($5))|0;
    $86 = (($p) + ($$sum21)|0);
    $87 = HEAP32[$86>>2]|0;
    $88 = ($87|0)==(0|0);
    do {
     if (!($88)) {
      $89 = ($87>>>0)<($83>>>0);
      if ($89) {
       _abort();
       // unreachable;
      } else {
       $90 = ((($R$1)) + 16|0);
       HEAP32[$90>>2] = $87;
       $91 = ((($87)) + 24|0);
       HEAP32[$91>>2] = $R$1;
       break;
      }
     }
    } while(0);
    $$sum22 = (($$sum21) + 4)|0;
    $92 = (($p) + ($$sum22)|0);
    $93 = HEAP32[$92>>2]|0;
    $94 = ($93|0)==(0|0);
    if ($94) {
     $$0 = $9;$$02 = $10;
    } else {
     $95 = HEAP32[(3024)>>2]|0;
     $96 = ($93>>>0)<($95>>>0);
     if ($96) {
      _abort();
      // unreachable;
     } else {
      $97 = ((($R$1)) + 20|0);
      HEAP32[$97>>2] = $93;
      $98 = ((($93)) + 24|0);
      HEAP32[$98>>2] = $R$1;
      $$0 = $9;$$02 = $10;
      break;
     }
    }
   }
  } else {
   $$0 = $p;$$02 = $psize;
  }
 } while(0);
 $106 = HEAP32[(3024)>>2]|0;
 $107 = ($0>>>0)<($106>>>0);
 if ($107) {
  _abort();
  // unreachable;
 }
 $$sum1 = (($psize) + 4)|0;
 $108 = (($p) + ($$sum1)|0);
 $109 = HEAP32[$108>>2]|0;
 $110 = $109 & 2;
 $111 = ($110|0)==(0);
 if ($111) {
  $112 = HEAP32[(3032)>>2]|0;
  $113 = ($0|0)==($112|0);
  if ($113) {
   $114 = HEAP32[(3020)>>2]|0;
   $115 = (($114) + ($$02))|0;
   HEAP32[(3020)>>2] = $115;
   HEAP32[(3032)>>2] = $$0;
   $116 = $115 | 1;
   $117 = ((($$0)) + 4|0);
   HEAP32[$117>>2] = $116;
   $118 = HEAP32[(3028)>>2]|0;
   $119 = ($$0|0)==($118|0);
   if (!($119)) {
    return;
   }
   HEAP32[(3028)>>2] = 0;
   HEAP32[(3016)>>2] = 0;
   return;
  }
  $120 = HEAP32[(3028)>>2]|0;
  $121 = ($0|0)==($120|0);
  if ($121) {
   $122 = HEAP32[(3016)>>2]|0;
   $123 = (($122) + ($$02))|0;
   HEAP32[(3016)>>2] = $123;
   HEAP32[(3028)>>2] = $$0;
   $124 = $123 | 1;
   $125 = ((($$0)) + 4|0);
   HEAP32[$125>>2] = $124;
   $126 = (($$0) + ($123)|0);
   HEAP32[$126>>2] = $123;
   return;
  }
  $127 = $109 & -8;
  $128 = (($127) + ($$02))|0;
  $129 = $109 >>> 3;
  $130 = ($109>>>0)<(256);
  do {
   if ($130) {
    $$sum12 = (($psize) + 8)|0;
    $131 = (($p) + ($$sum12)|0);
    $132 = HEAP32[$131>>2]|0;
    $$sum13 = (($psize) + 12)|0;
    $133 = (($p) + ($$sum13)|0);
    $134 = HEAP32[$133>>2]|0;
    $135 = $129 << 1;
    $136 = (3048 + ($135<<2)|0);
    $137 = ($132|0)==($136|0);
    if (!($137)) {
     $138 = ($132>>>0)<($106>>>0);
     if ($138) {
      _abort();
      // unreachable;
     }
     $139 = ((($132)) + 12|0);
     $140 = HEAP32[$139>>2]|0;
     $141 = ($140|0)==($0|0);
     if (!($141)) {
      _abort();
      // unreachable;
     }
    }
    $142 = ($134|0)==($132|0);
    if ($142) {
     $143 = 1 << $129;
     $144 = $143 ^ -1;
     $145 = HEAP32[3008>>2]|0;
     $146 = $145 & $144;
     HEAP32[3008>>2] = $146;
     break;
    }
    $147 = ($134|0)==($136|0);
    if ($147) {
     $$pre49 = ((($134)) + 8|0);
     $$pre$phi50Z2D = $$pre49;
    } else {
     $148 = ($134>>>0)<($106>>>0);
     if ($148) {
      _abort();
      // unreachable;
     }
     $149 = ((($134)) + 8|0);
     $150 = HEAP32[$149>>2]|0;
     $151 = ($150|0)==($0|0);
     if ($151) {
      $$pre$phi50Z2D = $149;
     } else {
      _abort();
      // unreachable;
     }
    }
    $152 = ((($132)) + 12|0);
    HEAP32[$152>>2] = $134;
    HEAP32[$$pre$phi50Z2D>>2] = $132;
   } else {
    $$sum2 = (($psize) + 24)|0;
    $153 = (($p) + ($$sum2)|0);
    $154 = HEAP32[$153>>2]|0;
    $$sum3 = (($psize) + 12)|0;
    $155 = (($p) + ($$sum3)|0);
    $156 = HEAP32[$155>>2]|0;
    $157 = ($156|0)==($0|0);
    do {
     if ($157) {
      $$sum5 = (($psize) + 20)|0;
      $167 = (($p) + ($$sum5)|0);
      $168 = HEAP32[$167>>2]|0;
      $169 = ($168|0)==(0|0);
      if ($169) {
       $$sum4 = (($psize) + 16)|0;
       $170 = (($p) + ($$sum4)|0);
       $171 = HEAP32[$170>>2]|0;
       $172 = ($171|0)==(0|0);
       if ($172) {
        $R7$1 = 0;
        break;
       } else {
        $R7$0 = $171;$RP9$0 = $170;
       }
      } else {
       $R7$0 = $168;$RP9$0 = $167;
      }
      while(1) {
       $173 = ((($R7$0)) + 20|0);
       $174 = HEAP32[$173>>2]|0;
       $175 = ($174|0)==(0|0);
       if (!($175)) {
        $R7$0 = $174;$RP9$0 = $173;
        continue;
       }
       $176 = ((($R7$0)) + 16|0);
       $177 = HEAP32[$176>>2]|0;
       $178 = ($177|0)==(0|0);
       if ($178) {
        $R7$0$lcssa = $R7$0;$RP9$0$lcssa = $RP9$0;
        break;
       } else {
        $R7$0 = $177;$RP9$0 = $176;
       }
      }
      $179 = ($RP9$0$lcssa>>>0)<($106>>>0);
      if ($179) {
       _abort();
       // unreachable;
      } else {
       HEAP32[$RP9$0$lcssa>>2] = 0;
       $R7$1 = $R7$0$lcssa;
       break;
      }
     } else {
      $$sum11 = (($psize) + 8)|0;
      $158 = (($p) + ($$sum11)|0);
      $159 = HEAP32[$158>>2]|0;
      $160 = ($159>>>0)<($106>>>0);
      if ($160) {
       _abort();
       // unreachable;
      }
      $161 = ((($159)) + 12|0);
      $162 = HEAP32[$161>>2]|0;
      $163 = ($162|0)==($0|0);
      if (!($163)) {
       _abort();
       // unreachable;
      }
      $164 = ((($156)) + 8|0);
      $165 = HEAP32[$164>>2]|0;
      $166 = ($165|0)==($0|0);
      if ($166) {
       HEAP32[$161>>2] = $156;
       HEAP32[$164>>2] = $159;
       $R7$1 = $156;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $180 = ($154|0)==(0|0);
    if (!($180)) {
     $$sum8 = (($psize) + 28)|0;
     $181 = (($p) + ($$sum8)|0);
     $182 = HEAP32[$181>>2]|0;
     $183 = (3312 + ($182<<2)|0);
     $184 = HEAP32[$183>>2]|0;
     $185 = ($0|0)==($184|0);
     if ($185) {
      HEAP32[$183>>2] = $R7$1;
      $cond39 = ($R7$1|0)==(0|0);
      if ($cond39) {
       $186 = 1 << $182;
       $187 = $186 ^ -1;
       $188 = HEAP32[(3012)>>2]|0;
       $189 = $188 & $187;
       HEAP32[(3012)>>2] = $189;
       break;
      }
     } else {
      $190 = HEAP32[(3024)>>2]|0;
      $191 = ($154>>>0)<($190>>>0);
      if ($191) {
       _abort();
       // unreachable;
      }
      $192 = ((($154)) + 16|0);
      $193 = HEAP32[$192>>2]|0;
      $194 = ($193|0)==($0|0);
      if ($194) {
       HEAP32[$192>>2] = $R7$1;
      } else {
       $195 = ((($154)) + 20|0);
       HEAP32[$195>>2] = $R7$1;
      }
      $196 = ($R7$1|0)==(0|0);
      if ($196) {
       break;
      }
     }
     $197 = HEAP32[(3024)>>2]|0;
     $198 = ($R7$1>>>0)<($197>>>0);
     if ($198) {
      _abort();
      // unreachable;
     }
     $199 = ((($R7$1)) + 24|0);
     HEAP32[$199>>2] = $154;
     $$sum9 = (($psize) + 16)|0;
     $200 = (($p) + ($$sum9)|0);
     $201 = HEAP32[$200>>2]|0;
     $202 = ($201|0)==(0|0);
     do {
      if (!($202)) {
       $203 = ($201>>>0)<($197>>>0);
       if ($203) {
        _abort();
        // unreachable;
       } else {
        $204 = ((($R7$1)) + 16|0);
        HEAP32[$204>>2] = $201;
        $205 = ((($201)) + 24|0);
        HEAP32[$205>>2] = $R7$1;
        break;
       }
      }
     } while(0);
     $$sum10 = (($psize) + 20)|0;
     $206 = (($p) + ($$sum10)|0);
     $207 = HEAP32[$206>>2]|0;
     $208 = ($207|0)==(0|0);
     if (!($208)) {
      $209 = HEAP32[(3024)>>2]|0;
      $210 = ($207>>>0)<($209>>>0);
      if ($210) {
       _abort();
       // unreachable;
      } else {
       $211 = ((($R7$1)) + 20|0);
       HEAP32[$211>>2] = $207;
       $212 = ((($207)) + 24|0);
       HEAP32[$212>>2] = $R7$1;
       break;
      }
     }
    }
   }
  } while(0);
  $213 = $128 | 1;
  $214 = ((($$0)) + 4|0);
  HEAP32[$214>>2] = $213;
  $215 = (($$0) + ($128)|0);
  HEAP32[$215>>2] = $128;
  $216 = HEAP32[(3028)>>2]|0;
  $217 = ($$0|0)==($216|0);
  if ($217) {
   HEAP32[(3016)>>2] = $128;
   return;
  } else {
   $$1 = $128;
  }
 } else {
  $218 = $109 & -2;
  HEAP32[$108>>2] = $218;
  $219 = $$02 | 1;
  $220 = ((($$0)) + 4|0);
  HEAP32[$220>>2] = $219;
  $221 = (($$0) + ($$02)|0);
  HEAP32[$221>>2] = $$02;
  $$1 = $$02;
 }
 $222 = $$1 >>> 3;
 $223 = ($$1>>>0)<(256);
 if ($223) {
  $224 = $222 << 1;
  $225 = (3048 + ($224<<2)|0);
  $226 = HEAP32[3008>>2]|0;
  $227 = 1 << $222;
  $228 = $226 & $227;
  $229 = ($228|0)==(0);
  if ($229) {
   $230 = $226 | $227;
   HEAP32[3008>>2] = $230;
   $$pre = (($224) + 2)|0;
   $$pre48 = (3048 + ($$pre<<2)|0);
   $$pre$phiZ2D = $$pre48;$F16$0 = $225;
  } else {
   $$sum7 = (($224) + 2)|0;
   $231 = (3048 + ($$sum7<<2)|0);
   $232 = HEAP32[$231>>2]|0;
   $233 = HEAP32[(3024)>>2]|0;
   $234 = ($232>>>0)<($233>>>0);
   if ($234) {
    _abort();
    // unreachable;
   } else {
    $$pre$phiZ2D = $231;$F16$0 = $232;
   }
  }
  HEAP32[$$pre$phiZ2D>>2] = $$0;
  $235 = ((($F16$0)) + 12|0);
  HEAP32[$235>>2] = $$0;
  $236 = ((($$0)) + 8|0);
  HEAP32[$236>>2] = $F16$0;
  $237 = ((($$0)) + 12|0);
  HEAP32[$237>>2] = $225;
  return;
 }
 $238 = $$1 >>> 8;
 $239 = ($238|0)==(0);
 if ($239) {
  $I19$0 = 0;
 } else {
  $240 = ($$1>>>0)>(16777215);
  if ($240) {
   $I19$0 = 31;
  } else {
   $241 = (($238) + 1048320)|0;
   $242 = $241 >>> 16;
   $243 = $242 & 8;
   $244 = $238 << $243;
   $245 = (($244) + 520192)|0;
   $246 = $245 >>> 16;
   $247 = $246 & 4;
   $248 = $247 | $243;
   $249 = $244 << $247;
   $250 = (($249) + 245760)|0;
   $251 = $250 >>> 16;
   $252 = $251 & 2;
   $253 = $248 | $252;
   $254 = (14 - ($253))|0;
   $255 = $249 << $252;
   $256 = $255 >>> 15;
   $257 = (($254) + ($256))|0;
   $258 = $257 << 1;
   $259 = (($257) + 7)|0;
   $260 = $$1 >>> $259;
   $261 = $260 & 1;
   $262 = $261 | $258;
   $I19$0 = $262;
  }
 }
 $263 = (3312 + ($I19$0<<2)|0);
 $264 = ((($$0)) + 28|0);
 HEAP32[$264>>2] = $I19$0;
 $265 = ((($$0)) + 16|0);
 $266 = ((($$0)) + 20|0);
 HEAP32[$266>>2] = 0;
 HEAP32[$265>>2] = 0;
 $267 = HEAP32[(3012)>>2]|0;
 $268 = 1 << $I19$0;
 $269 = $267 & $268;
 $270 = ($269|0)==(0);
 if ($270) {
  $271 = $267 | $268;
  HEAP32[(3012)>>2] = $271;
  HEAP32[$263>>2] = $$0;
  $272 = ((($$0)) + 24|0);
  HEAP32[$272>>2] = $263;
  $273 = ((($$0)) + 12|0);
  HEAP32[$273>>2] = $$0;
  $274 = ((($$0)) + 8|0);
  HEAP32[$274>>2] = $$0;
  return;
 }
 $275 = HEAP32[$263>>2]|0;
 $276 = ((($275)) + 4|0);
 $277 = HEAP32[$276>>2]|0;
 $278 = $277 & -8;
 $279 = ($278|0)==($$1|0);
 L191: do {
  if ($279) {
   $T$0$lcssa = $275;
  } else {
   $280 = ($I19$0|0)==(31);
   $281 = $I19$0 >>> 1;
   $282 = (25 - ($281))|0;
   $283 = $280 ? 0 : $282;
   $284 = $$1 << $283;
   $K20$043 = $284;$T$042 = $275;
   while(1) {
    $291 = $K20$043 >>> 31;
    $292 = (((($T$042)) + 16|0) + ($291<<2)|0);
    $287 = HEAP32[$292>>2]|0;
    $293 = ($287|0)==(0|0);
    if ($293) {
     $$lcssa = $292;$T$042$lcssa = $T$042;
     break;
    }
    $285 = $K20$043 << 1;
    $286 = ((($287)) + 4|0);
    $288 = HEAP32[$286>>2]|0;
    $289 = $288 & -8;
    $290 = ($289|0)==($$1|0);
    if ($290) {
     $T$0$lcssa = $287;
     break L191;
    } else {
     $K20$043 = $285;$T$042 = $287;
    }
   }
   $294 = HEAP32[(3024)>>2]|0;
   $295 = ($$lcssa>>>0)<($294>>>0);
   if ($295) {
    _abort();
    // unreachable;
   }
   HEAP32[$$lcssa>>2] = $$0;
   $296 = ((($$0)) + 24|0);
   HEAP32[$296>>2] = $T$042$lcssa;
   $297 = ((($$0)) + 12|0);
   HEAP32[$297>>2] = $$0;
   $298 = ((($$0)) + 8|0);
   HEAP32[$298>>2] = $$0;
   return;
  }
 } while(0);
 $299 = ((($T$0$lcssa)) + 8|0);
 $300 = HEAP32[$299>>2]|0;
 $301 = HEAP32[(3024)>>2]|0;
 $302 = ($300>>>0)>=($301>>>0);
 $not$ = ($T$0$lcssa>>>0)>=($301>>>0);
 $303 = $302 & $not$;
 if (!($303)) {
  _abort();
  // unreachable;
 }
 $304 = ((($300)) + 12|0);
 HEAP32[$304>>2] = $$0;
 HEAP32[$299>>2] = $$0;
 $305 = ((($$0)) + 8|0);
 HEAP32[$305>>2] = $300;
 $306 = ((($$0)) + 12|0);
 HEAP32[$306>>2] = $T$0$lcssa;
 $307 = ((($$0)) + 24|0);
 HEAP32[$307>>2] = 0;
 return;
}
function _scanexp($f,$pok) {
 $f = $f|0;
 $pok = $pok|0;
 var $$lcssa22 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $c$0 = 0, $c$1$be = 0, $c$1$be$lcssa = 0, $c$112 = 0, $c$2$be = 0, $c$2$lcssa = 0, $c$27 = 0, $c$3$be = 0, $neg$0 = 0, $or$cond3 = 0, $x$013 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($f)) + 100|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($1>>>0)<($3>>>0);
 if ($4) {
  $5 = ((($1)) + 1|0);
  HEAP32[$0>>2] = $5;
  $6 = HEAP8[$1>>0]|0;
  $7 = $6&255;
  $9 = $7;
 } else {
  $8 = (___shgetc($f)|0);
  $9 = $8;
 }
 $10 = ($9|0)==(45);
 if ((($9|0) == 43) | (($9|0) == 45)) {
  $11 = $10&1;
  $12 = HEAP32[$0>>2]|0;
  $13 = HEAP32[$2>>2]|0;
  $14 = ($12>>>0)<($13>>>0);
  if ($14) {
   $15 = ((($12)) + 1|0);
   HEAP32[$0>>2] = $15;
   $16 = HEAP8[$12>>0]|0;
   $17 = $16&255;
   $20 = $17;
  } else {
   $18 = (___shgetc($f)|0);
   $20 = $18;
  }
  $19 = (($20) + -48)|0;
  $21 = ($19>>>0)>(9);
  $22 = ($pok|0)!=(0);
  $or$cond3 = $22 & $21;
  if ($or$cond3) {
   $23 = HEAP32[$2>>2]|0;
   $24 = ($23|0)==(0|0);
   if ($24) {
    $c$0 = $20;$neg$0 = $11;
   } else {
    $25 = HEAP32[$0>>2]|0;
    $26 = ((($25)) + -1|0);
    HEAP32[$0>>2] = $26;
    $c$0 = $20;$neg$0 = $11;
   }
  } else {
   $c$0 = $20;$neg$0 = $11;
  }
 } else {
  $c$0 = $9;$neg$0 = 0;
 }
 $27 = (($c$0) + -48)|0;
 $28 = ($27>>>0)>(9);
 if ($28) {
  $29 = HEAP32[$2>>2]|0;
  $30 = ($29|0)==(0|0);
  if ($30) {
   $98 = -2147483648;$99 = 0;
   tempRet0 = ($98);
   return ($99|0);
  }
  $31 = HEAP32[$0>>2]|0;
  $32 = ((($31)) + -1|0);
  HEAP32[$0>>2] = $32;
  $98 = -2147483648;$99 = 0;
  tempRet0 = ($98);
  return ($99|0);
 } else {
  $c$112 = $c$0;$x$013 = 0;
 }
 while(1) {
  $33 = ($x$013*10)|0;
  $34 = (($c$112) + -48)|0;
  $35 = (($34) + ($33))|0;
  $36 = HEAP32[$0>>2]|0;
  $37 = HEAP32[$2>>2]|0;
  $38 = ($36>>>0)<($37>>>0);
  if ($38) {
   $39 = ((($36)) + 1|0);
   HEAP32[$0>>2] = $39;
   $40 = HEAP8[$36>>0]|0;
   $41 = $40&255;
   $c$1$be = $41;
  } else {
   $42 = (___shgetc($f)|0);
   $c$1$be = $42;
  }
  $43 = (($c$1$be) + -48)|0;
  $44 = ($43>>>0)<(10);
  $45 = ($35|0)<(214748364);
  $46 = $44 & $45;
  if ($46) {
   $c$112 = $c$1$be;$x$013 = $35;
  } else {
   $$lcssa22 = $35;$c$1$be$lcssa = $c$1$be;
   break;
  }
 }
 $47 = ($$lcssa22|0)<(0);
 $48 = $47 << 31 >> 31;
 $49 = (($c$1$be$lcssa) + -48)|0;
 $50 = ($49>>>0)<(10);
 if ($50) {
  $53 = $$lcssa22;$54 = $48;$c$27 = $c$1$be$lcssa;
  while(1) {
   $55 = (___muldi3(($53|0),($54|0),10,0)|0);
   $56 = tempRet0;
   $57 = ($c$27|0)<(0);
   $58 = $57 << 31 >> 31;
   $59 = (_i64Add(($c$27|0),($58|0),-48,-1)|0);
   $60 = tempRet0;
   $61 = (_i64Add(($59|0),($60|0),($55|0),($56|0))|0);
   $62 = tempRet0;
   $63 = HEAP32[$0>>2]|0;
   $64 = HEAP32[$2>>2]|0;
   $65 = ($63>>>0)<($64>>>0);
   if ($65) {
    $66 = ((($63)) + 1|0);
    HEAP32[$0>>2] = $66;
    $67 = HEAP8[$63>>0]|0;
    $68 = $67&255;
    $c$2$be = $68;
   } else {
    $69 = (___shgetc($f)|0);
    $c$2$be = $69;
   }
   $70 = (($c$2$be) + -48)|0;
   $71 = ($70>>>0)<(10);
   $72 = ($62|0)<(21474836);
   $73 = ($61>>>0)<(2061584302);
   $74 = ($62|0)==(21474836);
   $75 = $74 & $73;
   $76 = $72 | $75;
   $77 = $71 & $76;
   if ($77) {
    $53 = $61;$54 = $62;$c$27 = $c$2$be;
   } else {
    $92 = $61;$93 = $62;$c$2$lcssa = $c$2$be;
    break;
   }
  }
 } else {
  $92 = $$lcssa22;$93 = $48;$c$2$lcssa = $c$1$be$lcssa;
 }
 $51 = (($c$2$lcssa) + -48)|0;
 $52 = ($51>>>0)<(10);
 if ($52) {
  while(1) {
   $78 = HEAP32[$0>>2]|0;
   $79 = HEAP32[$2>>2]|0;
   $80 = ($78>>>0)<($79>>>0);
   if ($80) {
    $81 = ((($78)) + 1|0);
    HEAP32[$0>>2] = $81;
    $82 = HEAP8[$78>>0]|0;
    $83 = $82&255;
    $c$3$be = $83;
   } else {
    $84 = (___shgetc($f)|0);
    $c$3$be = $84;
   }
   $85 = (($c$3$be) + -48)|0;
   $86 = ($85>>>0)<(10);
   if (!($86)) {
    break;
   }
  }
 }
 $87 = HEAP32[$2>>2]|0;
 $88 = ($87|0)==(0|0);
 if (!($88)) {
  $89 = HEAP32[$0>>2]|0;
  $90 = ((($89)) + -1|0);
  HEAP32[$0>>2] = $90;
 }
 $91 = ($neg$0|0)!=(0);
 $94 = (_i64Subtract(0,0,($92|0),($93|0))|0);
 $95 = tempRet0;
 $96 = $91 ? $94 : $92;
 $97 = $91 ? $95 : $93;
 $98 = $97;$99 = $96;
 tempRet0 = ($98);
 return ($99|0);
}
function _printf_core($f,$fmt,$ap,$nl_arg,$nl_type) {
 $f = $f|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 $nl_arg = $nl_arg|0;
 $nl_type = $nl_type|0;
 var $$ = 0, $$$i = 0, $$0 = 0, $$0$i = 0, $$0$lcssa$i = 0, $$0$lcssa$i$i = 0, $$0$lcssa$i104$i = 0, $$0$lcssa$i128$i = 0, $$0$lcssa$i143$i = 0, $$0$lcssa$i39$i = 0, $$0$lcssa$i46 = 0, $$0$lcssa$i46$i = 0, $$0$lcssa$i48$i = 0, $$0$lcssa$i51 = 0, $$0$lcssa$i53 = 0, $$0$lcssa$i56$i = 0, $$0$lcssa$i61 = 0, $$0$lcssa$i63$i = 0, $$0$lcssa$i68 = 0, $$0$lcssa$i69$i = 0;
 var $$0$lcssa$i75 = 0, $$0$lcssa$i76$i = 0, $$0$lcssa$i84$i = 0, $$0$lcssa$i85 = 0, $$0$lcssa$i97$i = 0, $$01$i = 0, $$01$i$i = 0, $$01$i102$i = 0, $$01$i126$i = 0, $$01$i141$i = 0, $$01$i37$i = 0, $$01$i44 = 0, $$01$i44$i = 0, $$01$i54$i = 0, $$01$i59 = 0, $$01$i61$i = 0, $$01$i66 = 0, $$01$i67$i = 0, $$01$i73 = 0, $$01$i74$i = 0;
 var $$01$i83 = 0, $$01$i95$i = 0, $$01$lcssa$off0$i = 0, $$01$lcssa$off0$i$i = 0, $$01$lcssa$off0$i85$i = 0, $$012$i = 0, $$013$i = 0, $$03$i48 = 0, $$05$i = 0, $$05$i$i = 0, $$05$i79$i = 0, $$07$i = 0.0, $$1$i = 0.0, $$1$lcssa$i$i = 0, $$1$lcssa$i112$i = 0, $$114$i = 0, $$12$i = 0, $$12$i$i = 0, $$12$i110$i = 0, $$12$i119$i = 0;
 var $$12$i134$i = 0, $$12$i134$i$lcssa = 0, $$12$i87$i = 0, $$2$i = 0.0, $$2$us$i = 0.0, $$2$us$us$i = 0.0, $$20$i = 0.0, $$21$i = 0, $$210$$22$i = 0, $$210$$24$i = 0, $$210$i = 0, $$23$i = 0, $$24 = 0, $$25 = 0, $$3$i = 0.0, $$31$i = 0, $$311$i = 0, $$4$i = 0.0, $$412$lcssa$i = 0, $$412184$i = 0;
 var $$5196$i = 0, $$92 = 0, $$a$3$i = 0, $$a$3$us$i = 0, $$a$3$us303$i = 0, $$a$3$us304$i = 0, $$a$3305$i = 0, $$a$3306$i = 0, $$fl$4 = 0, $$l10n$0 = 0, $$lcssa106 = 0, $$lcssa275$i = 0, $$lcssa450 = 0, $$lcssa451 = 0, $$lcssa455 = 0, $$lcssa457 = 0, $$lcssa458 = 0, $$lcssa459 = 0, $$lcssa460 = 0, $$lcssa461 = 0;
 var $$lcssa463 = 0, $$lcssa464 = 0, $$lcssa470 = 0, $$lcssa474 = 0, $$lcssa476 = 0, $$lcssa479 = 0, $$lcssa480 = 0, $$lcssa483 = 0.0, $$lcssa484 = 0, $$lcssa487 = 0, $$lcssa491 = 0, $$mask$i = 0, $$mask$i38 = 0, $$mask1$i = 0, $$mask1$i37 = 0, $$neg151$i = 0, $$neg152$i = 0, $$p$$i = 0, $$p$5 = 0, $$p$i = 0;
 var $$pn$i = 0, $$pr$i = 0, $$pr146$i = 0, $$pre = 0, $$pre$i = 0, $$pre$phi302$iZ2D = 0, $$pre270 = 0, $$pre300$i = 0, $$pre301$i = 0, $$sum$i = 0, $$sum15$i = 0, $$sum16$i = 0, $$z$3$i = 0, $$z$4$i = 0, $$z$4$us$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0;
 var $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0;
 var $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0;
 var $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0;
 var $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0, $1071 = 0, $1072 = 0, $1073 = 0;
 var $1074 = 0, $1075 = 0, $1076 = 0, $1077 = 0, $1078 = 0, $1079 = 0, $108 = 0, $1080 = 0, $1081 = 0, $1082 = 0, $1083 = 0, $1084 = 0, $1085 = 0, $1086 = 0, $1087 = 0, $1088 = 0, $1089 = 0, $109 = 0, $1090 = 0, $1091 = 0;
 var $1092 = 0, $1093 = 0, $1094 = 0, $1095 = 0, $1096 = 0, $1097 = 0, $1098 = 0, $1099 = 0, $11 = 0, $110 = 0, $1100 = 0, $1101 = 0, $1102 = 0, $1103 = 0, $1104 = 0, $1105 = 0, $1106 = 0, $1107 = 0, $1108 = 0, $1109 = 0;
 var $111 = 0, $1110 = 0, $1111 = 0, $1112 = 0, $1113 = 0, $1114 = 0, $1115 = 0, $1116 = 0, $1117 = 0, $1118 = 0, $1119 = 0, $112 = 0, $1120 = 0, $1121 = 0, $1122 = 0, $1123 = 0, $1124 = 0, $1125 = 0, $1126 = 0, $1127 = 0;
 var $1128 = 0, $1129 = 0, $113 = 0, $1130 = 0, $1131 = 0, $1132 = 0, $1133 = 0, $1134 = 0, $1135 = 0, $1136 = 0, $1137 = 0, $1138 = 0, $1139 = 0, $114 = 0, $1140 = 0, $1141 = 0, $1142 = 0, $1143 = 0, $1144 = 0, $1145 = 0;
 var $1146 = 0, $1147 = 0, $1148 = 0, $1149 = 0, $115 = 0, $1150 = 0, $1151 = 0, $1152 = 0, $1153 = 0, $1154 = 0.0, $1155 = 0, $1156 = 0, $1157 = 0, $1158 = 0, $1159 = 0, $116 = 0, $1160 = 0, $1161 = 0.0, $1162 = 0, $1163 = 0;
 var $1164 = 0, $1165 = 0, $1166 = 0, $1167 = 0, $1168 = 0, $1169 = 0, $1169$phi = 0, $117 = 0, $1170 = 0, $1170$phi = 0, $1171 = 0, $1172 = 0, $1173 = 0, $1174 = 0, $1175 = 0, $1176 = 0, $1177 = 0, $1178 = 0, $1179 = 0, $118 = 0;
 var $1180 = 0, $1181 = 0, $1182 = 0, $1183 = 0, $1184 = 0, $1185 = 0, $1186 = 0, $1187 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0;
 var $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0;
 var $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0;
 var $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0;
 var $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0;
 var $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0;
 var $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0;
 var $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0.0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0.0, $253 = 0, $254 = 0, $255 = 0;
 var $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0;
 var $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0;
 var $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0;
 var $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0;
 var $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0;
 var $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0;
 var $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0;
 var $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0;
 var $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0;
 var $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0.0, $431 = 0, $432 = 0.0, $433 = 0, $434 = 0, $435 = 0;
 var $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0;
 var $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0.0;
 var $472 = 0.0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0.0, $488 = 0, $489 = 0, $49 = 0;
 var $490 = 0, $491 = 0.0, $492 = 0.0, $493 = 0.0, $494 = 0.0, $495 = 0.0, $496 = 0.0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0;
 var $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0;
 var $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0;
 var $544 = 0.0, $545 = 0.0, $546 = 0.0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0.0, $56 = 0, $560 = 0.0, $561 = 0.0;
 var $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0.0, $575 = 0.0, $576 = 0.0, $577 = 0, $578 = 0, $579 = 0, $58 = 0;
 var $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0;
 var $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0;
 var $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0.0, $632 = 0, $633 = 0;
 var $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0.0, $64 = 0, $640 = 0.0, $641 = 0.0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0;
 var $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0;
 var $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0;
 var $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0;
 var $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0;
 var $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0;
 var $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0;
 var $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0;
 var $779 = 0, $78 = 0, $780 = 0.0, $781 = 0.0, $782 = 0, $783 = 0.0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0;
 var $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0;
 var $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0;
 var $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0;
 var $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0;
 var $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0;
 var $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0;
 var $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0;
 var $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0;
 var $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0;
 var $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0;
 var $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0;
 var $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $a$0 = 0, $a$1 = 0, $a$1$lcssa$i = 0, $a$1253$i = 0, $a$2 = 0, $a$2$ph$i = 0, $a$3$lcssa$i = 0, $a$3240$i = 0, $a$3240$us$i = 0, $a$5$lcssa$i = 0, $a$5215$i = 0, $a$6$i = 0, $a$7$i = 0, $a$8$ph$i = 0, $arglist_current = 0;
 var $arglist_current11 = 0, $arglist_current14 = 0, $arglist_current17 = 0, $arglist_current2 = 0, $arglist_current20 = 0, $arglist_current23 = 0, $arglist_current26 = 0, $arglist_current29 = 0, $arglist_current32 = 0, $arglist_current35 = 0, $arglist_current38 = 0, $arglist_current41 = 0, $arglist_current44 = 0, $arglist_current47 = 0, $arglist_current5 = 0, $arglist_current50 = 0, $arglist_current53 = 0, $arglist_current56 = 0, $arglist_current59 = 0, $arglist_current62 = 0;
 var $arglist_current8 = 0, $arglist_next = 0, $arglist_next12 = 0, $arglist_next15 = 0, $arglist_next18 = 0, $arglist_next21 = 0, $arglist_next24 = 0, $arglist_next27 = 0, $arglist_next3 = 0, $arglist_next30 = 0, $arglist_next33 = 0, $arglist_next36 = 0, $arglist_next39 = 0, $arglist_next42 = 0, $arglist_next45 = 0, $arglist_next48 = 0, $arglist_next51 = 0, $arglist_next54 = 0, $arglist_next57 = 0, $arglist_next6 = 0;
 var $arglist_next60 = 0, $arglist_next63 = 0, $arglist_next9 = 0, $argpos$0 = 0, $big$i = 0, $buf = 0, $buf$i = 0, $carry$0246$i = 0, $carry3$0234$i = 0, $carry3$0234$us$i = 0, $cnt$0 = 0, $cnt$1 = 0, $cnt$1$lcssa = 0, $d$0$i = 0, $d$0245$i = 0, $d$0247$i = 0, $d$1233$i = 0, $d$1233$us$i = 0, $d$2$lcssa$i = 0, $d$2214$i = 0;
 var $d$3$i = 0, $d$4191$i = 0, $d$5183$i = 0, $d$6195$i = 0, $e$0229$i = 0, $e$1$i = 0, $e$2210$i = 0, $e$3$i = 0, $e$4$ph$i = 0, $e2$i = 0, $ebuf0$i = 0, $estr$0$i = 0, $estr$1$lcssa$i = 0, $estr$1$ph$i = 0, $estr$1201$i = 0, $estr$2$i = 0, $exitcond$i = 0, $expanded = 0, $expanded101 = 0, $expanded102 = 0;
 var $expanded103 = 0, $expanded105 = 0, $expanded106 = 0, $expanded108 = 0, $expanded109 = 0, $expanded110 = 0, $expanded112 = 0, $expanded113 = 0, $expanded115 = 0, $expanded116 = 0, $expanded117 = 0, $expanded119 = 0, $expanded120 = 0, $expanded122 = 0, $expanded123 = 0, $expanded124 = 0, $expanded126 = 0, $expanded127 = 0, $expanded129 = 0, $expanded130 = 0;
 var $expanded131 = 0, $expanded133 = 0, $expanded134 = 0, $expanded136 = 0, $expanded137 = 0, $expanded138 = 0, $expanded140 = 0, $expanded141 = 0, $expanded143 = 0, $expanded144 = 0, $expanded145 = 0, $expanded147 = 0, $expanded148 = 0, $expanded150 = 0, $expanded151 = 0, $expanded152 = 0, $expanded154 = 0, $expanded155 = 0, $expanded157 = 0, $expanded158 = 0;
 var $expanded159 = 0, $expanded161 = 0, $expanded162 = 0, $expanded164 = 0, $expanded165 = 0, $expanded166 = 0, $expanded168 = 0, $expanded169 = 0, $expanded171 = 0, $expanded172 = 0, $expanded173 = 0, $expanded175 = 0, $expanded176 = 0, $expanded178 = 0, $expanded179 = 0, $expanded180 = 0, $expanded182 = 0, $expanded183 = 0, $expanded185 = 0, $expanded186 = 0;
 var $expanded187 = 0, $expanded189 = 0, $expanded190 = 0, $expanded192 = 0, $expanded193 = 0, $expanded194 = 0, $expanded196 = 0, $expanded197 = 0, $expanded199 = 0, $expanded200 = 0, $expanded201 = 0, $expanded203 = 0, $expanded204 = 0, $expanded206 = 0, $expanded207 = 0, $expanded208 = 0, $expanded210 = 0, $expanded211 = 0, $expanded213 = 0, $expanded214 = 0;
 var $expanded215 = 0, $expanded64 = 0, $expanded66 = 0, $expanded67 = 0, $expanded68 = 0, $expanded70 = 0, $expanded71 = 0, $expanded73 = 0, $expanded74 = 0, $expanded75 = 0, $expanded77 = 0, $expanded78 = 0, $expanded80 = 0, $expanded81 = 0, $expanded82 = 0, $expanded84 = 0, $expanded85 = 0, $expanded87 = 0, $expanded88 = 0, $expanded89 = 0;
 var $expanded91 = 0, $expanded92 = 0, $expanded94 = 0, $expanded95 = 0, $expanded96 = 0, $expanded98 = 0, $expanded99 = 0, $fl$0110 = 0, $fl$0170 = 0, $fl$1 = 0, $fl$1$ = 0, $fl$3 = 0, $fl$4 = 0, $fl$6 = 0, $i$0$lcssa = 0, $i$0$lcssa273 = 0, $i$0175 = 0, $i$0228$i = 0, $i$03$i = 0, $i$03$i30 = 0;
 var $i$1$lcssa$i = 0, $i$1186 = 0, $i$1222$i = 0, $i$2162 = 0, $i$2162$lcssa = 0, $i$2209$i = 0, $i$3160 = 0, $i$3205$i = 0, $isdigit = 0, $isdigit$i = 0, $isdigit$i32 = 0, $isdigit10 = 0, $isdigit12 = 0, $isdigit2$i = 0, $isdigit2$i28 = 0, $isdigittmp = 0, $isdigittmp$ = 0, $isdigittmp$i = 0, $isdigittmp$i31 = 0, $isdigittmp1$i = 0;
 var $isdigittmp1$i27 = 0, $isdigittmp11 = 0, $isdigittmp4$i = 0, $isdigittmp4$i29 = 0, $isdigittmp9 = 0, $j$0$i = 0, $j$0221$i = 0, $j$0223$i = 0, $j$1206$i = 0, $j$2$i = 0, $l$0 = 0, $l$0$i = 0, $l$1$i = 0, $l$1174 = 0, $l$2 = 0, $l10n$0 = 0, $l10n$0$lcssa = 0, $l10n$0$phi = 0, $l10n$1 = 0, $l10n$2 = 0;
 var $l10n$3 = 0, $mb = 0, $notlhs$us$us$i = 0, $notrhs$i = 0, $or$cond = 0, $or$cond$i = 0, $or$cond$i$i = 0, $or$cond$i100$i = 0, $or$cond$i35$i = 0, $or$cond$i42$i = 0, $or$cond$i52$i = 0, $or$cond$i57 = 0, $or$cond$i59$i = 0, $or$cond$i64 = 0, $or$cond$i71 = 0, $or$cond$i72$i = 0, $or$cond$i79 = 0, $or$cond$i81 = 0, $or$cond$i93$i = 0, $or$cond15 = 0;
 var $or$cond19 = 0, $or$cond22 = 0, $or$cond29$i = 0, $or$cond332 = 0, $or$cond6$i = 0, $p$0 = 0, $p$1 = 0, $p$2 = 0, $p$2$ = 0, $p$3 = 0, $p$4272 = 0, $p$5 = 0, $pad$i = 0, $pl$0 = 0, $pl$0$i = 0, $pl$1 = 0, $pl$1$i = 0, $pl$2 = 0, $prefix$0 = 0, $prefix$0$$i = 0;
 var $prefix$0$i = 0, $prefix$1 = 0, $prefix$2 = 0, $r$0$a$8$i = 0, $re$1179$i = 0, $round$0178$i = 0.0, $round6$1$i = 0.0, $s$0$i = 0, $s$0$us$i = 0, $s$0$us$us$i = 0, $s$1$i = 0, $s$1$lcssa$i = 0, $s$1$us$i = 0, $s$1$us$us$i = 0, $s1$0$i = 0, $s7$0188$i = 0, $s7$1$i = 0, $s8$0$lcssa$i = 0, $s8$0180$i = 0, $s9$0$i = 0;
 var $s9$1192$i = 0, $s9$2$i = 0, $sext = 0, $sext93 = 0, $small$0$i = 0.0, $small$1$i = 0.0, $st$0 = 0, $st$0$lcssa456 = 0, $storemerge = 0, $storemerge13 = 0, $storemerge8108 = 0, $storemerge8169 = 0, $t$0 = 0, $t$1 = 0, $w$$i = 0, $w$0 = 0, $w$1 = 0, $w$2 = 0, $w$30$i = 0, $wc = 0;
 var $ws$0176 = 0, $ws$1187 = 0, $y$03$i = 0, $y$03$i$i = 0, $y$03$i109$i = 0, $y$03$i118$i = 0, $y$03$i133$i = 0, $y$03$i86$i = 0, $z$0$i = 0, $z$0$lcssa = 0, $z$0163 = 0, $z$1 = 0, $z$1$lcssa$i = 0, $z$1252$i = 0, $z$2 = 0, $z$2$i = 0, $z$2$i$lcssa = 0, $z$3$lcssa$i = 0, $z$3239$i = 0, $z$3239$us$i = 0;
 var $z$4$i = 0, $z$4$us$i = 0, $z$6$$i = 0, $z$6$i = 0, $z$6$i$lcssa = 0, $z$6$ph$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 864|0;
 $big$i = sp + 16|0;
 $e2$i = sp + 8|0;
 $buf$i = sp + 836|0;
 $0 = $buf$i;
 $ebuf0$i = sp + 824|0;
 $pad$i = sp + 568|0;
 $buf = sp + 528|0;
 $wc = sp;
 $mb = sp + 520|0;
 $1 = ($f|0)!=(0|0);
 $2 = ((($buf)) + 40|0);
 $3 = $2;
 $4 = ((($buf)) + 39|0);
 $5 = ((($wc)) + 4|0);
 $6 = $wc;
 $7 = ((($ebuf0$i)) + 12|0);
 $8 = ((($ebuf0$i)) + 11|0);
 $9 = $7;
 $10 = (($9) - ($0))|0;
 $11 = (-2 - ($0))|0;
 $12 = (($9) + 2)|0;
 $13 = ((($big$i)) + 288|0);
 $14 = ((($buf$i)) + 9|0);
 $15 = $14;
 $16 = ((($buf$i)) + 8|0);
 $1169 = 0;$1170 = 0;$23 = $fmt;$cnt$0 = 0;$l$0 = 0;$l10n$0 = 0;
 L1: while(1) {
  $17 = ($cnt$0|0)>(-1);
  do {
   if ($17) {
    $18 = (2147483647 - ($cnt$0))|0;
    $19 = ($l$0|0)>($18|0);
    if ($19) {
     $20 = (___errno_location()|0);
     HEAP32[$20>>2] = 75;
     $cnt$1 = -1;
     break;
    } else {
     $21 = (($l$0) + ($cnt$0))|0;
     $cnt$1 = $21;
     break;
    }
   } else {
    $cnt$1 = $cnt$0;
   }
  } while(0);
  $22 = HEAP8[$23>>0]|0;
  $24 = ($22<<24>>24)==(0);
  if ($24) {
   $cnt$1$lcssa = $cnt$1;$l10n$0$lcssa = $l10n$0;
   label = 344;
   break;
  } else {
   $1171 = $22;$26 = $23;
  }
  while(1) {
   if ((($1171<<24>>24) == 0)) {
    $$lcssa106 = $26;$z$0$lcssa = $26;
    break;
   } else if ((($1171<<24>>24) == 37)) {
    $28 = $26;$z$0163 = $26;
    label = 9;
    break;
   }
   $25 = ((($26)) + 1|0);
   $$pre = HEAP8[$25>>0]|0;
   $1171 = $$pre;$26 = $25;
  }
  L12: do {
   if ((label|0) == 9) {
    while(1) {
     label = 0;
     $27 = ((($28)) + 1|0);
     $29 = HEAP8[$27>>0]|0;
     $30 = ($29<<24>>24)==(37);
     if (!($30)) {
      $$lcssa106 = $28;$z$0$lcssa = $z$0163;
      break L12;
     }
     $31 = ((($z$0163)) + 1|0);
     $32 = ((($28)) + 2|0);
     $33 = HEAP8[$32>>0]|0;
     $34 = ($33<<24>>24)==(37);
     if ($34) {
      $28 = $32;$z$0163 = $31;
      label = 9;
     } else {
      $$lcssa106 = $32;$z$0$lcssa = $31;
      break;
     }
    }
   }
  } while(0);
  $35 = $z$0$lcssa;
  $36 = $23;
  $37 = (($35) - ($36))|0;
  if ($1) {
   (___fwritex($23,$37,$f)|0);
  }
  $38 = ($z$0$lcssa|0)==($23|0);
  if (!($38)) {
   $l10n$0$phi = $l10n$0;$1170$phi = $1170;$1169$phi = $1169;$23 = $$lcssa106;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$0$phi;$1170 = $1170$phi;$1169 = $1169$phi;
   continue;
  }
  $39 = ((($$lcssa106)) + 1|0);
  $40 = HEAP8[$39>>0]|0;
  $41 = $40 << 24 >> 24;
  $isdigittmp = (($41) + -48)|0;
  $isdigit = ($isdigittmp>>>0)<(10);
  if ($isdigit) {
   $42 = ((($$lcssa106)) + 2|0);
   $43 = HEAP8[$42>>0]|0;
   $44 = ($43<<24>>24)==(36);
   $45 = ((($$lcssa106)) + 3|0);
   $$92 = $44 ? $45 : $39;
   $$l10n$0 = $44 ? 1 : $l10n$0;
   $isdigittmp$ = $44 ? $isdigittmp : -1;
   $$pre270 = HEAP8[$$92>>0]|0;
   $47 = $$pre270;$argpos$0 = $isdigittmp$;$l10n$1 = $$l10n$0;$storemerge = $$92;
  } else {
   $47 = $40;$argpos$0 = -1;$l10n$1 = $l10n$0;$storemerge = $39;
  }
  $46 = $47 << 24 >> 24;
  $48 = $46 & -32;
  $49 = ($48|0)==(32);
  L24: do {
   if ($49) {
    $51 = $46;$56 = $47;$fl$0170 = 0;$storemerge8169 = $storemerge;
    while(1) {
     $50 = (($51) + -32)|0;
     $52 = 1 << $50;
     $53 = $52 & 75913;
     $54 = ($53|0)==(0);
     if ($54) {
      $65 = $56;$fl$0110 = $fl$0170;$storemerge8108 = $storemerge8169;
      break L24;
     }
     $55 = $56 << 24 >> 24;
     $57 = (($55) + -32)|0;
     $58 = 1 << $57;
     $59 = $58 | $fl$0170;
     $60 = ((($storemerge8169)) + 1|0);
     $61 = HEAP8[$60>>0]|0;
     $62 = $61 << 24 >> 24;
     $63 = $62 & -32;
     $64 = ($63|0)==(32);
     if ($64) {
      $51 = $62;$56 = $61;$fl$0170 = $59;$storemerge8169 = $60;
     } else {
      $65 = $61;$fl$0110 = $59;$storemerge8108 = $60;
      break;
     }
    }
   } else {
    $65 = $47;$fl$0110 = 0;$storemerge8108 = $storemerge;
   }
  } while(0);
  $66 = ($65<<24>>24)==(42);
  do {
   if ($66) {
    $67 = ((($storemerge8108)) + 1|0);
    $68 = HEAP8[$67>>0]|0;
    $69 = $68 << 24 >> 24;
    $isdigittmp11 = (($69) + -48)|0;
    $isdigit12 = ($isdigittmp11>>>0)<(10);
    if ($isdigit12) {
     $70 = ((($storemerge8108)) + 2|0);
     $71 = HEAP8[$70>>0]|0;
     $72 = ($71<<24>>24)==(36);
     if ($72) {
      $73 = (($nl_type) + ($isdigittmp11<<2)|0);
      HEAP32[$73>>2] = 10;
      $74 = HEAP8[$67>>0]|0;
      $75 = $74 << 24 >> 24;
      $76 = (($75) + -48)|0;
      $77 = (($nl_arg) + ($76<<3)|0);
      $78 = $77;
      $79 = $78;
      $80 = HEAP32[$79>>2]|0;
      $81 = (($78) + 4)|0;
      $82 = $81;
      $83 = HEAP32[$82>>2]|0;
      $84 = ((($storemerge8108)) + 3|0);
      $l10n$2 = 1;$storemerge13 = $84;$w$0 = $80;
     } else {
      label = 23;
     }
    } else {
     label = 23;
    }
    if ((label|0) == 23) {
     label = 0;
     $85 = ($l10n$1|0)==(0);
     if (!($85)) {
      $$0 = -1;
      label = 363;
      break L1;
     }
     if (!($1)) {
      $105 = $67;$fl$1 = $fl$0110;$l10n$3 = 0;$w$1 = 0;
      break;
     }
     $arglist_current = HEAP32[$ap>>2]|0;
     $86 = $arglist_current;
     $87 = ((0) + 4|0);
     $expanded64 = $87;
     $expanded = (($expanded64) - 1)|0;
     $88 = (($86) + ($expanded))|0;
     $89 = ((0) + 4|0);
     $expanded68 = $89;
     $expanded67 = (($expanded68) - 1)|0;
     $expanded66 = $expanded67 ^ -1;
     $90 = $88 & $expanded66;
     $91 = $90;
     $92 = HEAP32[$91>>2]|0;
     $arglist_next = ((($91)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next;
     $l10n$2 = 0;$storemerge13 = $67;$w$0 = $92;
    }
    $93 = ($w$0|0)<(0);
    if ($93) {
     $94 = $fl$0110 | 8192;
     $95 = (0 - ($w$0))|0;
     $105 = $storemerge13;$fl$1 = $94;$l10n$3 = $l10n$2;$w$1 = $95;
    } else {
     $105 = $storemerge13;$fl$1 = $fl$0110;$l10n$3 = $l10n$2;$w$1 = $w$0;
    }
   } else {
    $96 = $65 << 24 >> 24;
    $isdigittmp1$i = (($96) + -48)|0;
    $isdigit2$i = ($isdigittmp1$i>>>0)<(10);
    if ($isdigit2$i) {
     $100 = $storemerge8108;$i$03$i = 0;$isdigittmp4$i = $isdigittmp1$i;
     while(1) {
      $97 = ($i$03$i*10)|0;
      $98 = (($97) + ($isdigittmp4$i))|0;
      $99 = ((($100)) + 1|0);
      $101 = HEAP8[$99>>0]|0;
      $102 = $101 << 24 >> 24;
      $isdigittmp$i = (($102) + -48)|0;
      $isdigit$i = ($isdigittmp$i>>>0)<(10);
      if ($isdigit$i) {
       $100 = $99;$i$03$i = $98;$isdigittmp4$i = $isdigittmp$i;
      } else {
       $$lcssa450 = $98;$$lcssa451 = $99;
       break;
      }
     }
     $103 = ($$lcssa450|0)<(0);
     if ($103) {
      $$0 = -1;
      label = 363;
      break L1;
     } else {
      $105 = $$lcssa451;$fl$1 = $fl$0110;$l10n$3 = $l10n$1;$w$1 = $$lcssa450;
     }
    } else {
     $105 = $storemerge8108;$fl$1 = $fl$0110;$l10n$3 = $l10n$1;$w$1 = 0;
    }
   }
  } while(0);
  $104 = HEAP8[$105>>0]|0;
  $106 = ($104<<24>>24)==(46);
  L45: do {
   if ($106) {
    $107 = ((($105)) + 1|0);
    $108 = HEAP8[$107>>0]|0;
    $109 = ($108<<24>>24)==(42);
    if (!($109)) {
     $136 = $108 << 24 >> 24;
     $isdigittmp1$i27 = (($136) + -48)|0;
     $isdigit2$i28 = ($isdigittmp1$i27>>>0)<(10);
     if ($isdigit2$i28) {
      $140 = $107;$i$03$i30 = 0;$isdigittmp4$i29 = $isdigittmp1$i27;
     } else {
      $1172 = $107;$p$0 = 0;
      break;
     }
     while(1) {
      $137 = ($i$03$i30*10)|0;
      $138 = (($137) + ($isdigittmp4$i29))|0;
      $139 = ((($140)) + 1|0);
      $141 = HEAP8[$139>>0]|0;
      $142 = $141 << 24 >> 24;
      $isdigittmp$i31 = (($142) + -48)|0;
      $isdigit$i32 = ($isdigittmp$i31>>>0)<(10);
      if ($isdigit$i32) {
       $140 = $139;$i$03$i30 = $138;$isdigittmp4$i29 = $isdigittmp$i31;
      } else {
       $1172 = $139;$p$0 = $138;
       break L45;
      }
     }
    }
    $110 = ((($105)) + 2|0);
    $111 = HEAP8[$110>>0]|0;
    $112 = $111 << 24 >> 24;
    $isdigittmp9 = (($112) + -48)|0;
    $isdigit10 = ($isdigittmp9>>>0)<(10);
    if ($isdigit10) {
     $113 = ((($105)) + 3|0);
     $114 = HEAP8[$113>>0]|0;
     $115 = ($114<<24>>24)==(36);
     if ($115) {
      $116 = (($nl_type) + ($isdigittmp9<<2)|0);
      HEAP32[$116>>2] = 10;
      $117 = HEAP8[$110>>0]|0;
      $118 = $117 << 24 >> 24;
      $119 = (($118) + -48)|0;
      $120 = (($nl_arg) + ($119<<3)|0);
      $121 = $120;
      $122 = $121;
      $123 = HEAP32[$122>>2]|0;
      $124 = (($121) + 4)|0;
      $125 = $124;
      $126 = HEAP32[$125>>2]|0;
      $127 = ((($105)) + 4|0);
      $1172 = $127;$p$0 = $123;
      break;
     }
    }
    $128 = ($l10n$3|0)==(0);
    if (!($128)) {
     $$0 = -1;
     label = 363;
     break L1;
    }
    if ($1) {
     $arglist_current2 = HEAP32[$ap>>2]|0;
     $129 = $arglist_current2;
     $130 = ((0) + 4|0);
     $expanded71 = $130;
     $expanded70 = (($expanded71) - 1)|0;
     $131 = (($129) + ($expanded70))|0;
     $132 = ((0) + 4|0);
     $expanded75 = $132;
     $expanded74 = (($expanded75) - 1)|0;
     $expanded73 = $expanded74 ^ -1;
     $133 = $131 & $expanded73;
     $134 = $133;
     $135 = HEAP32[$134>>2]|0;
     $arglist_next3 = ((($134)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next3;
     $1172 = $110;$p$0 = $135;
    } else {
     $1172 = $110;$p$0 = 0;
    }
   } else {
    $1172 = $105;$p$0 = -1;
   }
  } while(0);
  $144 = $1172;$st$0 = 0;
  while(1) {
   $143 = HEAP8[$144>>0]|0;
   $145 = $143 << 24 >> 24;
   $146 = (($145) + -65)|0;
   $147 = ($146>>>0)>(57);
   if ($147) {
    $$0 = -1;
    label = 363;
    break L1;
   }
   $148 = ((($144)) + 1|0);
   $149 = ((3944 + (($st$0*58)|0)|0) + ($146)|0);
   $150 = HEAP8[$149>>0]|0;
   $151 = $150&255;
   $152 = (($151) + -1)|0;
   $153 = ($152>>>0)<(8);
   if ($153) {
    $144 = $148;$st$0 = $151;
   } else {
    $$lcssa455 = $144;$$lcssa457 = $148;$$lcssa458 = $150;$$lcssa459 = $151;$st$0$lcssa456 = $st$0;
    break;
   }
  }
  $154 = ($$lcssa458<<24>>24)==(0);
  if ($154) {
   $$0 = -1;
   label = 363;
   break;
  }
  $155 = ($$lcssa458<<24>>24)==(19);
  $156 = ($argpos$0|0)>(-1);
  L64: do {
   if ($155) {
    if ($156) {
     $$0 = -1;
     label = 363;
     break L1;
    } else {
     $1173 = $1169;$1174 = $1170;
     label = 62;
    }
   } else {
    if ($156) {
     $157 = (($nl_type) + ($argpos$0<<2)|0);
     HEAP32[$157>>2] = $$lcssa459;
     $158 = (($nl_arg) + ($argpos$0<<3)|0);
     $159 = HEAP32[$158>>2]|0;
     $160 = ((($158)) + 4|0);
     $161 = HEAP32[$160>>2]|0;
     $1173 = $161;$1174 = $159;
     label = 62;
     break;
    }
    if (!($1)) {
     $$0 = 0;
     label = 363;
     break L1;
    }
    $162 = ($$lcssa458&255)>(20);
    if ($162) {
     $264 = $1170;$291 = $1169;
    } else {
     do {
      switch ($$lcssa459|0) {
      case 12:  {
       $arglist_current14 = HEAP32[$ap>>2]|0;
       $187 = $arglist_current14;
       $188 = ((0) + 8|0);
       $expanded99 = $188;
       $expanded98 = (($expanded99) - 1)|0;
       $189 = (($187) + ($expanded98))|0;
       $190 = ((0) + 8|0);
       $expanded103 = $190;
       $expanded102 = (($expanded103) - 1)|0;
       $expanded101 = $expanded102 ^ -1;
       $191 = $189 & $expanded101;
       $192 = $191;
       $193 = $192;
       $194 = $193;
       $195 = HEAP32[$194>>2]|0;
       $196 = (($193) + 4)|0;
       $197 = $196;
       $198 = HEAP32[$197>>2]|0;
       $arglist_next15 = ((($192)) + 8|0);
       HEAP32[$ap>>2] = $arglist_next15;
       $264 = $195;$291 = $198;
       break L64;
       break;
      }
      case 10:  {
       $arglist_current8 = HEAP32[$ap>>2]|0;
       $171 = $arglist_current8;
       $172 = ((0) + 4|0);
       $expanded85 = $172;
       $expanded84 = (($expanded85) - 1)|0;
       $173 = (($171) + ($expanded84))|0;
       $174 = ((0) + 4|0);
       $expanded89 = $174;
       $expanded88 = (($expanded89) - 1)|0;
       $expanded87 = $expanded88 ^ -1;
       $175 = $173 & $expanded87;
       $176 = $175;
       $177 = HEAP32[$176>>2]|0;
       $arglist_next9 = ((($176)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next9;
       $178 = ($177|0)<(0);
       $179 = $178 << 31 >> 31;
       $264 = $177;$291 = $179;
       break L64;
       break;
      }
      case 14:  {
       $arglist_current20 = HEAP32[$ap>>2]|0;
       $211 = $arglist_current20;
       $212 = ((0) + 4|0);
       $expanded113 = $212;
       $expanded112 = (($expanded113) - 1)|0;
       $213 = (($211) + ($expanded112))|0;
       $214 = ((0) + 4|0);
       $expanded117 = $214;
       $expanded116 = (($expanded117) - 1)|0;
       $expanded115 = $expanded116 ^ -1;
       $215 = $213 & $expanded115;
       $216 = $215;
       $217 = HEAP32[$216>>2]|0;
       $arglist_next21 = ((($216)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next21;
       $$mask1$i37 = $217 & 65535;
       $264 = $$mask1$i37;$291 = 0;
       break L64;
       break;
      }
      case 16:  {
       $arglist_current26 = HEAP32[$ap>>2]|0;
       $230 = $arglist_current26;
       $231 = ((0) + 4|0);
       $expanded127 = $231;
       $expanded126 = (($expanded127) - 1)|0;
       $232 = (($230) + ($expanded126))|0;
       $233 = ((0) + 4|0);
       $expanded131 = $233;
       $expanded130 = (($expanded131) - 1)|0;
       $expanded129 = $expanded130 ^ -1;
       $234 = $232 & $expanded129;
       $235 = $234;
       $236 = HEAP32[$235>>2]|0;
       $arglist_next27 = ((($235)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next27;
       $$mask$i38 = $236 & 255;
       $264 = $$mask$i38;$291 = 0;
       break L64;
       break;
      }
      case 18:  {
       $arglist_current32 = HEAP32[$ap>>2]|0;
       $246 = $arglist_current32;
       $247 = ((0) + 8|0);
       $expanded141 = $247;
       $expanded140 = (($expanded141) - 1)|0;
       $248 = (($246) + ($expanded140))|0;
       $249 = ((0) + 8|0);
       $expanded145 = $249;
       $expanded144 = (($expanded145) - 1)|0;
       $expanded143 = $expanded144 ^ -1;
       $250 = $248 & $expanded143;
       $251 = $250;
       $252 = +HEAPF64[$251>>3];
       $arglist_next33 = ((($251)) + 8|0);
       HEAP32[$ap>>2] = $arglist_next33;
       HEAPF64[tempDoublePtr>>3] = $252;$253 = HEAP32[tempDoublePtr>>2]|0;
       $254 = HEAP32[tempDoublePtr+4>>2]|0;
       $264 = $253;$291 = $254;
       break L64;
       break;
      }
      case 17:  {
       $arglist_current29 = HEAP32[$ap>>2]|0;
       $237 = $arglist_current29;
       $238 = ((0) + 8|0);
       $expanded134 = $238;
       $expanded133 = (($expanded134) - 1)|0;
       $239 = (($237) + ($expanded133))|0;
       $240 = ((0) + 8|0);
       $expanded138 = $240;
       $expanded137 = (($expanded138) - 1)|0;
       $expanded136 = $expanded137 ^ -1;
       $241 = $239 & $expanded136;
       $242 = $241;
       $243 = +HEAPF64[$242>>3];
       $arglist_next30 = ((($242)) + 8|0);
       HEAP32[$ap>>2] = $arglist_next30;
       HEAPF64[tempDoublePtr>>3] = $243;$244 = HEAP32[tempDoublePtr>>2]|0;
       $245 = HEAP32[tempDoublePtr+4>>2]|0;
       $264 = $244;$291 = $245;
       break L64;
       break;
      }
      case 13:  {
       $arglist_current17 = HEAP32[$ap>>2]|0;
       $199 = $arglist_current17;
       $200 = ((0) + 4|0);
       $expanded106 = $200;
       $expanded105 = (($expanded106) - 1)|0;
       $201 = (($199) + ($expanded105))|0;
       $202 = ((0) + 4|0);
       $expanded110 = $202;
       $expanded109 = (($expanded110) - 1)|0;
       $expanded108 = $expanded109 ^ -1;
       $203 = $201 & $expanded108;
       $204 = $203;
       $205 = HEAP32[$204>>2]|0;
       $arglist_next18 = ((($204)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next18;
       $206 = $205&65535;
       $207 = $206 << 16 >> 16;
       $208 = ($207|0)<(0);
       $209 = $208 << 31 >> 31;
       $sext93 = $205 << 16;
       $210 = $sext93 >> 16;
       $264 = $210;$291 = $209;
       break L64;
       break;
      }
      case 15:  {
       $arglist_current23 = HEAP32[$ap>>2]|0;
       $218 = $arglist_current23;
       $219 = ((0) + 4|0);
       $expanded120 = $219;
       $expanded119 = (($expanded120) - 1)|0;
       $220 = (($218) + ($expanded119))|0;
       $221 = ((0) + 4|0);
       $expanded124 = $221;
       $expanded123 = (($expanded124) - 1)|0;
       $expanded122 = $expanded123 ^ -1;
       $222 = $220 & $expanded122;
       $223 = $222;
       $224 = HEAP32[$223>>2]|0;
       $arglist_next24 = ((($223)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next24;
       $225 = $224&255;
       $226 = $225 << 24 >> 24;
       $227 = ($226|0)<(0);
       $228 = $227 << 31 >> 31;
       $sext = $224 << 24;
       $229 = $sext >> 24;
       $264 = $229;$291 = $228;
       break L64;
       break;
      }
      case 9:  {
       $arglist_current5 = HEAP32[$ap>>2]|0;
       $163 = $arglist_current5;
       $164 = ((0) + 4|0);
       $expanded78 = $164;
       $expanded77 = (($expanded78) - 1)|0;
       $165 = (($163) + ($expanded77))|0;
       $166 = ((0) + 4|0);
       $expanded82 = $166;
       $expanded81 = (($expanded82) - 1)|0;
       $expanded80 = $expanded81 ^ -1;
       $167 = $165 & $expanded80;
       $168 = $167;
       $169 = HEAP32[$168>>2]|0;
       $arglist_next6 = ((($168)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next6;
       $170 = $169;
       $264 = $170;$291 = $1169;
       break L64;
       break;
      }
      case 11:  {
       $arglist_current11 = HEAP32[$ap>>2]|0;
       $180 = $arglist_current11;
       $181 = ((0) + 4|0);
       $expanded92 = $181;
       $expanded91 = (($expanded92) - 1)|0;
       $182 = (($180) + ($expanded91))|0;
       $183 = ((0) + 4|0);
       $expanded96 = $183;
       $expanded95 = (($expanded96) - 1)|0;
       $expanded94 = $expanded95 ^ -1;
       $184 = $182 & $expanded94;
       $185 = $184;
       $186 = HEAP32[$185>>2]|0;
       $arglist_next12 = ((($185)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next12;
       $264 = $186;$291 = 0;
       break L64;
       break;
      }
      default: {
       $264 = $1170;$291 = $1169;
       break L64;
      }
      }
     } while(0);
    }
   }
  } while(0);
  if ((label|0) == 62) {
   label = 0;
   if ($1) {
    $264 = $1174;$291 = $1173;
   } else {
    $1169 = $1173;$1170 = $1174;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
    continue;
   }
  }
  $255 = HEAP8[$$lcssa455>>0]|0;
  $256 = $255 << 24 >> 24;
  $257 = ($st$0$lcssa456|0)!=(0);
  $258 = $256 & 15;
  $259 = ($258|0)==(3);
  $or$cond15 = $257 & $259;
  $260 = $256 & -33;
  $t$0 = $or$cond15 ? $260 : $256;
  $261 = $fl$1 & 8192;
  $262 = ($261|0)==(0);
  $263 = $fl$1 & -65537;
  $fl$1$ = $262 ? $fl$1 : $263;
  L86: do {
   switch ($t$0|0) {
   case 110:  {
    switch ($st$0$lcssa456|0) {
    case 0:  {
     $265 = $264;
     HEAP32[$265>>2] = $cnt$1;
     $1169 = $291;$1170 = $264;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 1:  {
     $266 = $264;
     HEAP32[$266>>2] = $cnt$1;
     $1169 = $291;$1170 = $264;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 7:  {
     $279 = ($cnt$1|0)<(0);
     $280 = $279 << 31 >> 31;
     $281 = $264;
     $282 = $281;
     $283 = $282;
     HEAP32[$283>>2] = $cnt$1;
     $284 = (($282) + 4)|0;
     $285 = $284;
     HEAP32[$285>>2] = $280;
     $1169 = $291;$1170 = $264;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 2:  {
     $267 = ($cnt$1|0)<(0);
     $268 = $267 << 31 >> 31;
     $269 = $264;
     $270 = $269;
     $271 = $270;
     HEAP32[$271>>2] = $cnt$1;
     $272 = (($270) + 4)|0;
     $273 = $272;
     HEAP32[$273>>2] = $268;
     $1169 = $291;$1170 = $264;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 3:  {
     $274 = $cnt$1&65535;
     $275 = $264;
     HEAP16[$275>>1] = $274;
     $1169 = $291;$1170 = $264;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 4:  {
     $276 = $cnt$1&255;
     $277 = $264;
     HEAP8[$277>>0] = $276;
     $1169 = $291;$1170 = $264;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 6:  {
     $278 = $264;
     HEAP32[$278>>2] = $cnt$1;
     $1169 = $291;$1170 = $264;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    default: {
     $1169 = $291;$1170 = $264;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
    }
    }
    break;
   }
   case 112:  {
    $286 = ($p$0>>>0)>(8);
    $287 = $286 ? $p$0 : 8;
    $288 = $fl$1$ | 8;
    $fl$3 = $288;$p$1 = $287;$t$1 = 120;
    label = 73;
    break;
   }
   case 88: case 120:  {
    $fl$3 = $fl$1$;$p$1 = $p$0;$t$1 = $t$0;
    label = 73;
    break;
   }
   case 111:  {
    $312 = ($264|0)==(0);
    $313 = ($291|0)==(0);
    $314 = $312 & $313;
    if ($314) {
     $$0$lcssa$i51 = $2;
    } else {
     $$03$i48 = $2;$316 = $264;$320 = $291;
     while(1) {
      $315 = $316 & 7;
      $317 = $315 | 48;
      $318 = $317&255;
      $319 = ((($$03$i48)) + -1|0);
      HEAP8[$319>>0] = $318;
      $321 = (_bitshift64Lshr(($316|0),($320|0),3)|0);
      $322 = tempRet0;
      $323 = ($321|0)==(0);
      $324 = ($322|0)==(0);
      $325 = $323 & $324;
      if ($325) {
       $$0$lcssa$i51 = $319;
       break;
      } else {
       $$03$i48 = $319;$316 = $321;$320 = $322;
      }
     }
    }
    $326 = $fl$1$ & 8;
    $327 = ($326|0)==(0);
    $or$cond19 = $327 | $314;
    $$24 = $or$cond19 ? 4424 : (4429);
    $328 = $or$cond19&1;
    $$25 = $328 ^ 1;
    $366 = $264;$368 = $291;$a$0 = $$0$lcssa$i51;$fl$4 = $fl$1$;$p$2 = $p$0;$pl$1 = $$25;$prefix$1 = $$24;
    label = 89;
    break;
   }
   case 65: case 71: case 70: case 69: case 97: case 103: case 102: case 101:  {
    HEAP32[tempDoublePtr>>2] = $264;HEAP32[tempDoublePtr+4>>2] = $291;$430 = +HEAPF64[tempDoublePtr>>3];
    HEAP32[$e2$i>>2] = 0;
    $431 = ($291|0)<(0);
    if ($431) {
     $432 = -$430;
     $$07$i = $432;$pl$0$i = 1;$prefix$0$i = 4448;
    } else {
     $433 = $fl$1$ & 2048;
     $434 = ($433|0)==(0);
     if ($434) {
      $435 = $fl$1$ & 1;
      $436 = ($435|0)==(0);
      $$$i = $436 ? (4449) : (4454);
      $$07$i = $430;$pl$0$i = $435;$prefix$0$i = $$$i;
     } else {
      $$07$i = $430;$pl$0$i = 1;$prefix$0$i = (4451);
     }
    }
    HEAPF64[tempDoublePtr>>3] = $$07$i;$437 = HEAP32[tempDoublePtr>>2]|0;
    $438 = HEAP32[tempDoublePtr+4>>2]|0;
    $439 = $438 & 2146435072;
    $440 = ($439>>>0)<(2146435072);
    $441 = (0)<(0);
    $442 = ($439|0)==(2146435072);
    $443 = $442 & $441;
    $444 = $440 | $443;
    do {
     if ($444) {
      $471 = (+_frexpl($$07$i,$e2$i));
      $472 = $471 * 2.0;
      $473 = $472 != 0.0;
      if ($473) {
       $474 = HEAP32[$e2$i>>2]|0;
       $475 = (($474) + -1)|0;
       HEAP32[$e2$i>>2] = $475;
      }
      $476 = $t$0 | 32;
      $477 = ($476|0)==(97);
      if ($477) {
       $478 = $t$0 & 32;
       $479 = ($478|0)==(0);
       $480 = ((($prefix$0$i)) + 9|0);
       $prefix$0$$i = $479 ? $prefix$0$i : $480;
       $481 = $pl$0$i | 2;
       $482 = ($p$0>>>0)>(11);
       $483 = (12 - ($p$0))|0;
       $484 = ($483|0)==(0);
       $485 = $482 | $484;
       do {
        if ($485) {
         $$1$i = $472;
        } else {
         $re$1179$i = $483;$round$0178$i = 8.0;
         while(1) {
          $486 = (($re$1179$i) + -1)|0;
          $487 = $round$0178$i * 16.0;
          $488 = ($486|0)==(0);
          if ($488) {
           $$lcssa483 = $487;
           break;
          } else {
           $re$1179$i = $486;$round$0178$i = $487;
          }
         }
         $489 = HEAP8[$prefix$0$$i>>0]|0;
         $490 = ($489<<24>>24)==(45);
         if ($490) {
          $491 = -$472;
          $492 = $491 - $$lcssa483;
          $493 = $$lcssa483 + $492;
          $494 = -$493;
          $$1$i = $494;
          break;
         } else {
          $495 = $472 + $$lcssa483;
          $496 = $495 - $$lcssa483;
          $$1$i = $496;
          break;
         }
        }
       } while(0);
       $497 = HEAP32[$e2$i>>2]|0;
       $498 = ($497|0)<(0);
       $499 = (0 - ($497))|0;
       $500 = $498 ? $499 : $497;
       $501 = ($500|0)<(0);
       if ($501) {
        $502 = ($500|0)<(0);
        $503 = $502 << 31 >> 31;
        $$05$i$i = $7;$504 = $500;$505 = $503;
        while(1) {
         $506 = (___uremdi3(($504|0),($505|0),10,0)|0);
         $507 = tempRet0;
         $508 = $506 | 48;
         $509 = $508&255;
         $510 = ((($$05$i$i)) + -1|0);
         HEAP8[$510>>0] = $509;
         $511 = (___udivdi3(($504|0),($505|0),10,0)|0);
         $512 = tempRet0;
         $513 = ($505>>>0)>(9);
         $514 = ($504>>>0)>(4294967295);
         $515 = ($505|0)==(9);
         $516 = $515 & $514;
         $517 = $513 | $516;
         if ($517) {
          $$05$i$i = $510;$504 = $511;$505 = $512;
         } else {
          $$lcssa484 = $510;$1183 = $511;$1184 = $512;
          break;
         }
        }
        $$0$lcssa$i48$i = $$lcssa484;$$01$lcssa$off0$i$i = $1183;
       } else {
        $$0$lcssa$i48$i = $7;$$01$lcssa$off0$i$i = $500;
       }
       $518 = ($$01$lcssa$off0$i$i|0)==(0);
       if ($518) {
        $$1$lcssa$i$i = $$0$lcssa$i48$i;
       } else {
        $$12$i$i = $$0$lcssa$i48$i;$y$03$i$i = $$01$lcssa$off0$i$i;
        while(1) {
         $519 = (($y$03$i$i>>>0) % 10)&-1;
         $520 = $519 | 48;
         $521 = $520&255;
         $522 = ((($$12$i$i)) + -1|0);
         HEAP8[$522>>0] = $521;
         $523 = (($y$03$i$i>>>0) / 10)&-1;
         $524 = ($y$03$i$i>>>0)<(10);
         if ($524) {
          $$1$lcssa$i$i = $522;
          break;
         } else {
          $$12$i$i = $522;$y$03$i$i = $523;
         }
        }
       }
       $525 = ($$1$lcssa$i$i|0)==($7|0);
       if ($525) {
        HEAP8[$8>>0] = 48;
        $estr$0$i = $8;
       } else {
        $estr$0$i = $$1$lcssa$i$i;
       }
       $526 = HEAP32[$e2$i>>2]|0;
       $527 = $526 >> 31;
       $528 = $527 & 2;
       $529 = (($528) + 43)|0;
       $530 = $529&255;
       $531 = ((($estr$0$i)) + -1|0);
       HEAP8[$531>>0] = $530;
       $532 = (($t$0) + 15)|0;
       $533 = $532&255;
       $534 = ((($estr$0$i)) + -2|0);
       HEAP8[$534>>0] = $533;
       $535 = $fl$1$ & 8;
       $536 = ($535|0)==(0);
       if ($536) {
        $notrhs$i = ($p$0|0)<(1);
        if ($notrhs$i) {
         $$2$us$us$i = $$1$i;$s$0$us$us$i = $buf$i;
         while(1) {
          $537 = (~~(($$2$us$us$i)));
          $538 = (4408 + ($537)|0);
          $539 = HEAP8[$538>>0]|0;
          $540 = $539&255;
          $541 = $540 | $478;
          $542 = $541&255;
          $543 = ((($s$0$us$us$i)) + 1|0);
          HEAP8[$s$0$us$us$i>>0] = $542;
          $544 = (+($537|0));
          $545 = $$2$us$us$i - $544;
          $546 = $545 * 16.0;
          $547 = $543;
          $548 = (($547) - ($0))|0;
          $549 = ($548|0)!=(1);
          $notlhs$us$us$i = $546 == 0.0;
          $or$cond$i79 = $549 | $notlhs$us$us$i;
          if ($or$cond$i79) {
           $s$1$us$us$i = $543;
          } else {
           $550 = ((($s$0$us$us$i)) + 2|0);
           HEAP8[$543>>0] = 46;
           $s$1$us$us$i = $550;
          }
          $551 = $546 != 0.0;
          if ($551) {
           $$2$us$us$i = $546;$s$0$us$us$i = $s$1$us$us$i;
          } else {
           $s$1$lcssa$i = $s$1$us$us$i;
           break;
          }
         }
        } else {
         $$2$us$i = $$1$i;$s$0$us$i = $buf$i;
         while(1) {
          $552 = (~~(($$2$us$i)));
          $553 = (4408 + ($552)|0);
          $554 = HEAP8[$553>>0]|0;
          $555 = $554&255;
          $556 = $555 | $478;
          $557 = $556&255;
          $558 = ((($s$0$us$i)) + 1|0);
          HEAP8[$s$0$us$i>>0] = $557;
          $559 = (+($552|0));
          $560 = $$2$us$i - $559;
          $561 = $560 * 16.0;
          $562 = $558;
          $563 = (($562) - ($0))|0;
          $564 = ($563|0)==(1);
          if ($564) {
           $565 = ((($s$0$us$i)) + 2|0);
           HEAP8[$558>>0] = 46;
           $s$1$us$i = $565;
          } else {
           $s$1$us$i = $558;
          }
          $566 = $561 != 0.0;
          if ($566) {
           $$2$us$i = $561;$s$0$us$i = $s$1$us$i;
          } else {
           $s$1$lcssa$i = $s$1$us$i;
           break;
          }
         }
        }
       } else {
        $$2$i = $$1$i;$s$0$i = $buf$i;
        while(1) {
         $567 = (~~(($$2$i)));
         $568 = (4408 + ($567)|0);
         $569 = HEAP8[$568>>0]|0;
         $570 = $569&255;
         $571 = $570 | $478;
         $572 = $571&255;
         $573 = ((($s$0$i)) + 1|0);
         HEAP8[$s$0$i>>0] = $572;
         $574 = (+($567|0));
         $575 = $$2$i - $574;
         $576 = $575 * 16.0;
         $577 = $573;
         $578 = (($577) - ($0))|0;
         $579 = ($578|0)==(1);
         if ($579) {
          $580 = ((($s$0$i)) + 2|0);
          HEAP8[$573>>0] = 46;
          $s$1$i = $580;
         } else {
          $s$1$i = $573;
         }
         $581 = $576 != 0.0;
         if ($581) {
          $$2$i = $576;$s$0$i = $s$1$i;
         } else {
          $s$1$lcssa$i = $s$1$i;
          break;
         }
        }
       }
       $582 = ($p$0|0)!=(0);
       $$pre300$i = $s$1$lcssa$i;
       $583 = (($11) + ($$pre300$i))|0;
       $584 = ($583|0)<($p$0|0);
       $or$cond332 = $582 & $584;
       $585 = $534;
       $586 = (($12) + ($p$0))|0;
       $587 = (($586) - ($585))|0;
       $588 = $534;
       $589 = (($10) - ($588))|0;
       $590 = (($589) + ($$pre300$i))|0;
       $l$0$i = $or$cond332 ? $587 : $590;
       $591 = (($l$0$i) + ($481))|0;
       $592 = $fl$1$ & 73728;
       $593 = ($592|0)==(0);
       $594 = ($w$1|0)>($591|0);
       $or$cond$i52$i = $593 & $594;
       if ($or$cond$i52$i) {
        $595 = (($w$1) - ($591))|0;
        $596 = ($595>>>0)>(256);
        $597 = $596 ? 256 : $595;
        _memset(($pad$i|0),32,($597|0))|0;
        $598 = ($595>>>0)>(255);
        if ($598) {
         $$01$i54$i = $595;
         while(1) {
          (___fwritex($pad$i,256,$f)|0);
          $599 = (($$01$i54$i) + -256)|0;
          $600 = ($599>>>0)>(255);
          if ($600) {
           $$01$i54$i = $599;
          } else {
           break;
          }
         }
         $601 = $595 & 255;
         $$0$lcssa$i56$i = $601;
        } else {
         $$0$lcssa$i56$i = $595;
        }
        (___fwritex($pad$i,$$0$lcssa$i56$i,$f)|0);
       }
       (___fwritex($prefix$0$$i,$481,$f)|0);
       $602 = ($592|0)==(65536);
       $or$cond$i59$i = $602 & $594;
       if ($or$cond$i59$i) {
        $603 = (($w$1) - ($591))|0;
        $604 = ($603>>>0)>(256);
        $605 = $604 ? 256 : $603;
        _memset(($pad$i|0),48,($605|0))|0;
        $606 = ($603>>>0)>(255);
        if ($606) {
         $$01$i61$i = $603;
         while(1) {
          (___fwritex($pad$i,256,$f)|0);
          $607 = (($$01$i61$i) + -256)|0;
          $608 = ($607>>>0)>(255);
          if ($608) {
           $$01$i61$i = $607;
          } else {
           break;
          }
         }
         $609 = $603 & 255;
         $$0$lcssa$i63$i = $609;
        } else {
         $$0$lcssa$i63$i = $603;
        }
        (___fwritex($pad$i,$$0$lcssa$i63$i,$f)|0);
       }
       $610 = (($$pre300$i) - ($0))|0;
       (___fwritex($buf$i,$610,$f)|0);
       $611 = $534;
       $612 = (($9) - ($611))|0;
       $613 = (($l$0$i) - ($612))|0;
       $614 = (($613) - ($610))|0;
       $615 = ($614|0)>(0);
       if ($615) {
        $616 = ($614>>>0)>(256);
        $617 = $616 ? 256 : $614;
        _memset(($pad$i|0),48,($617|0))|0;
        $618 = ($614>>>0)>(255);
        if ($618) {
         $$01$i67$i = $614;
         while(1) {
          (___fwritex($pad$i,256,$f)|0);
          $619 = (($$01$i67$i) + -256)|0;
          $620 = ($619>>>0)>(255);
          if ($620) {
           $$01$i67$i = $619;
          } else {
           break;
          }
         }
         $621 = $614 & 255;
         $$0$lcssa$i69$i = $621;
        } else {
         $$0$lcssa$i69$i = $614;
        }
        (___fwritex($pad$i,$$0$lcssa$i69$i,$f)|0);
       }
       (___fwritex($534,$612,$f)|0);
       $622 = ($592|0)==(8192);
       $or$cond$i72$i = $622 & $594;
       if ($or$cond$i72$i) {
        $623 = (($w$1) - ($591))|0;
        $624 = ($623>>>0)>(256);
        $625 = $624 ? 256 : $623;
        _memset(($pad$i|0),32,($625|0))|0;
        $626 = ($623>>>0)>(255);
        if ($626) {
         $$01$i74$i = $623;
         while(1) {
          (___fwritex($pad$i,256,$f)|0);
          $627 = (($$01$i74$i) + -256)|0;
          $628 = ($627>>>0)>(255);
          if ($628) {
           $$01$i74$i = $627;
          } else {
           break;
          }
         }
         $629 = $623 & 255;
         $$0$lcssa$i76$i = $629;
        } else {
         $$0$lcssa$i76$i = $623;
        }
        (___fwritex($pad$i,$$0$lcssa$i76$i,$f)|0);
       }
       $w$$i = $594 ? $w$1 : $591;
       $$0$i = $w$$i;
       break;
      }
      $630 = ($p$0|0)<(0);
      $$p$i = $630 ? 6 : $p$0;
      if ($473) {
       $631 = $472 * 268435456.0;
       $632 = HEAP32[$e2$i>>2]|0;
       $633 = (($632) + -28)|0;
       HEAP32[$e2$i>>2] = $633;
       $$3$i = $631;$634 = $633;
      } else {
       $$pre$i = HEAP32[$e2$i>>2]|0;
       $$3$i = $472;$634 = $$pre$i;
      }
      $635 = ($634|0)<(0);
      $$31$i = $635 ? $big$i : $13;
      $636 = $$31$i;
      $$4$i = $$3$i;$z$0$i = $$31$i;
      while(1) {
       $637 = (~~(($$4$i))>>>0);
       HEAP32[$z$0$i>>2] = $637;
       $638 = ((($z$0$i)) + 4|0);
       $639 = (+($637>>>0));
       $640 = $$4$i - $639;
       $641 = $640 * 1.0E+9;
       $642 = $641 != 0.0;
       if ($642) {
        $$4$i = $641;$z$0$i = $638;
       } else {
        $$lcssa460 = $638;
        break;
       }
      }
      $$pr$i = HEAP32[$e2$i>>2]|0;
      $643 = ($$pr$i|0)>(0);
      if ($643) {
       $644 = $$pr$i;$a$1253$i = $$31$i;$z$1252$i = $$lcssa460;
       while(1) {
        $645 = ($644|0)>(29);
        $646 = $645 ? 29 : $644;
        $d$0245$i = ((($z$1252$i)) + -4|0);
        $647 = ($d$0245$i>>>0)<($a$1253$i>>>0);
        do {
         if ($647) {
          $a$2$ph$i = $a$1253$i;
         } else {
          $carry$0246$i = 0;$d$0247$i = $d$0245$i;
          while(1) {
           $648 = HEAP32[$d$0247$i>>2]|0;
           $649 = (_bitshift64Shl(($648|0),0,($646|0))|0);
           $650 = tempRet0;
           $651 = (_i64Add(($649|0),($650|0),($carry$0246$i|0),0)|0);
           $652 = tempRet0;
           $653 = (___uremdi3(($651|0),($652|0),1000000000,0)|0);
           $654 = tempRet0;
           HEAP32[$d$0247$i>>2] = $653;
           $655 = (___udivdi3(($651|0),($652|0),1000000000,0)|0);
           $656 = tempRet0;
           $d$0$i = ((($d$0247$i)) + -4|0);
           $657 = ($d$0$i>>>0)<($a$1253$i>>>0);
           if ($657) {
            $$lcssa461 = $655;
            break;
           } else {
            $carry$0246$i = $655;$d$0247$i = $d$0$i;
           }
          }
          $658 = ($$lcssa461|0)==(0);
          if ($658) {
           $a$2$ph$i = $a$1253$i;
           break;
          }
          $659 = ((($a$1253$i)) + -4|0);
          HEAP32[$659>>2] = $$lcssa461;
          $a$2$ph$i = $659;
         }
        } while(0);
        $z$2$i = $z$1252$i;
        while(1) {
         $660 = ($z$2$i>>>0)>($a$2$ph$i>>>0);
         if (!($660)) {
          $z$2$i$lcssa = $z$2$i;
          break;
         }
         $661 = ((($z$2$i)) + -4|0);
         $662 = HEAP32[$661>>2]|0;
         $663 = ($662|0)==(0);
         if ($663) {
          $z$2$i = $661;
         } else {
          $z$2$i$lcssa = $z$2$i;
          break;
         }
        }
        $664 = HEAP32[$e2$i>>2]|0;
        $665 = (($664) - ($646))|0;
        HEAP32[$e2$i>>2] = $665;
        $666 = ($665|0)>(0);
        if ($666) {
         $644 = $665;$a$1253$i = $a$2$ph$i;$z$1252$i = $z$2$i$lcssa;
        } else {
         $$pr146$i = $665;$a$1$lcssa$i = $a$2$ph$i;$z$1$lcssa$i = $z$2$i$lcssa;
         break;
        }
       }
      } else {
       $$pr146$i = $$pr$i;$a$1$lcssa$i = $$31$i;$z$1$lcssa$i = $$lcssa460;
      }
      $667 = ($$pr146$i|0)<(0);
      L227: do {
       if ($667) {
        $668 = (($$p$i) + 25)|0;
        $669 = (($668|0) / 9)&-1;
        $670 = (($669) + 1)|0;
        $671 = ($476|0)==(102);
        if (!($671)) {
         $704 = $$pr146$i;$a$3240$i = $a$1$lcssa$i;$z$3239$i = $z$1$lcssa$i;
         while(1) {
          $703 = (0 - ($704))|0;
          $705 = ($703|0)>(9);
          $706 = $705 ? 9 : $703;
          $707 = ($a$3240$i>>>0)<($z$3239$i>>>0);
          do {
           if ($707) {
            $711 = 1 << $706;
            $712 = (($711) + -1)|0;
            $713 = 1000000000 >>> $706;
            $carry3$0234$i = 0;$d$1233$i = $a$3240$i;
            while(1) {
             $714 = HEAP32[$d$1233$i>>2]|0;
             $715 = $714 & $712;
             $716 = $714 >>> $706;
             $717 = (($716) + ($carry3$0234$i))|0;
             HEAP32[$d$1233$i>>2] = $717;
             $718 = Math_imul($715, $713)|0;
             $719 = ((($d$1233$i)) + 4|0);
             $720 = ($719>>>0)<($z$3239$i>>>0);
             if ($720) {
              $carry3$0234$i = $718;$d$1233$i = $719;
             } else {
              $$lcssa463 = $718;
              break;
             }
            }
            $721 = HEAP32[$a$3240$i>>2]|0;
            $722 = ($721|0)==(0);
            $723 = ((($a$3240$i)) + 4|0);
            $$a$3$i = $722 ? $723 : $a$3240$i;
            $724 = ($$lcssa463|0)==(0);
            if ($724) {
             $$a$3306$i = $$a$3$i;$z$4$i = $z$3239$i;
             break;
            }
            $725 = ((($z$3239$i)) + 4|0);
            HEAP32[$z$3239$i>>2] = $$lcssa463;
            $$a$3306$i = $$a$3$i;$z$4$i = $725;
           } else {
            $708 = HEAP32[$a$3240$i>>2]|0;
            $709 = ($708|0)==(0);
            $710 = ((($a$3240$i)) + 4|0);
            $$a$3305$i = $709 ? $710 : $a$3240$i;
            $$a$3306$i = $$a$3305$i;$z$4$i = $z$3239$i;
           }
          } while(0);
          $726 = $z$4$i;
          $727 = $$a$3306$i;
          $728 = (($726) - ($727))|0;
          $729 = $728 >> 2;
          $730 = ($729|0)>($670|0);
          $731 = (($$a$3306$i) + ($670<<2)|0);
          $$z$4$i = $730 ? $731 : $z$4$i;
          $732 = HEAP32[$e2$i>>2]|0;
          $733 = (($732) + ($706))|0;
          HEAP32[$e2$i>>2] = $733;
          $734 = ($733|0)<(0);
          if ($734) {
           $704 = $733;$a$3240$i = $$a$3306$i;$z$3239$i = $$z$4$i;
          } else {
           $a$3$lcssa$i = $$a$3306$i;$z$3$lcssa$i = $$z$4$i;
           break L227;
          }
         }
        }
        $672 = (($$31$i) + ($670<<2)|0);
        $674 = $$pr146$i;$a$3240$us$i = $a$1$lcssa$i;$z$3239$us$i = $z$1$lcssa$i;
        while(1) {
         $673 = (0 - ($674))|0;
         $675 = ($673|0)>(9);
         $676 = $675 ? 9 : $673;
         $677 = ($a$3240$us$i>>>0)<($z$3239$us$i>>>0);
         do {
          if ($677) {
           $702 = 1 << $676;
           $695 = (($702) + -1)|0;
           $699 = 1000000000 >>> $676;
           $carry3$0234$us$i = 0;$d$1233$us$i = $a$3240$us$i;
           while(1) {
            $693 = HEAP32[$d$1233$us$i>>2]|0;
            $694 = $693 & $695;
            $696 = $693 >>> $676;
            $697 = (($696) + ($carry3$0234$us$i))|0;
            HEAP32[$d$1233$us$i>>2] = $697;
            $698 = Math_imul($694, $699)|0;
            $700 = ((($d$1233$us$i)) + 4|0);
            $701 = ($700>>>0)<($z$3239$us$i>>>0);
            if ($701) {
             $carry3$0234$us$i = $698;$d$1233$us$i = $700;
            } else {
             $$lcssa464 = $698;
             break;
            }
           }
           $681 = HEAP32[$a$3240$us$i>>2]|0;
           $682 = ($681|0)==(0);
           $683 = ((($a$3240$us$i)) + 4|0);
           $$a$3$us$i = $682 ? $683 : $a$3240$us$i;
           $684 = ($$lcssa464|0)==(0);
           if ($684) {
            $$a$3$us304$i = $$a$3$us$i;$z$4$us$i = $z$3239$us$i;
            break;
           }
           $685 = ((($z$3239$us$i)) + 4|0);
           HEAP32[$z$3239$us$i>>2] = $$lcssa464;
           $$a$3$us304$i = $$a$3$us$i;$z$4$us$i = $685;
          } else {
           $678 = HEAP32[$a$3240$us$i>>2]|0;
           $679 = ($678|0)==(0);
           $680 = ((($a$3240$us$i)) + 4|0);
           $$a$3$us303$i = $679 ? $680 : $a$3240$us$i;
           $$a$3$us304$i = $$a$3$us303$i;$z$4$us$i = $z$3239$us$i;
          }
         } while(0);
         $686 = $z$4$us$i;
         $687 = (($686) - ($636))|0;
         $688 = $687 >> 2;
         $689 = ($688|0)>($670|0);
         $$z$4$us$i = $689 ? $672 : $z$4$us$i;
         $690 = HEAP32[$e2$i>>2]|0;
         $691 = (($690) + ($676))|0;
         HEAP32[$e2$i>>2] = $691;
         $692 = ($691|0)<(0);
         if ($692) {
          $674 = $691;$a$3240$us$i = $$a$3$us304$i;$z$3239$us$i = $$z$4$us$i;
         } else {
          $a$3$lcssa$i = $$a$3$us304$i;$z$3$lcssa$i = $$z$4$us$i;
          break;
         }
        }
       } else {
        $a$3$lcssa$i = $a$1$lcssa$i;$z$3$lcssa$i = $z$1$lcssa$i;
       }
      } while(0);
      $735 = ($a$3$lcssa$i>>>0)<($z$3$lcssa$i>>>0);
      do {
       if ($735) {
        $736 = $a$3$lcssa$i;
        $737 = (($636) - ($736))|0;
        $738 = $737 >> 2;
        $739 = ($738*9)|0;
        $740 = HEAP32[$a$3$lcssa$i>>2]|0;
        $741 = ($740>>>0)<(10);
        if ($741) {
         $e$1$i = $739;
         break;
        } else {
         $e$0229$i = $739;$i$0228$i = 10;
        }
        while(1) {
         $742 = ($i$0228$i*10)|0;
         $743 = (($e$0229$i) + 1)|0;
         $744 = ($740>>>0)<($742>>>0);
         if ($744) {
          $e$1$i = $743;
          break;
         } else {
          $e$0229$i = $743;$i$0228$i = $742;
         }
        }
       } else {
        $e$1$i = 0;
       }
      } while(0);
      $745 = ($476|0)!=(102);
      $746 = $745 ? $e$1$i : 0;
      $747 = (($$p$i) - ($746))|0;
      $748 = ($476|0)==(103);
      $749 = ($$p$i|0)!=(0);
      $750 = $749 & $748;
      $$neg151$i = $750 << 31 >> 31;
      $751 = (($747) + ($$neg151$i))|0;
      $752 = $z$3$lcssa$i;
      $753 = (($752) - ($636))|0;
      $754 = $753 >> 2;
      $755 = ($754*9)|0;
      $756 = (($755) + -9)|0;
      $757 = ($751|0)<($756|0);
      if ($757) {
       $758 = (($751) + 9216)|0;
       $759 = (($758|0) / 9)&-1;
       $$sum$i = (($759) + -1023)|0;
       $760 = (($$31$i) + ($$sum$i<<2)|0);
       $761 = (($758|0) % 9)&-1;
       $j$0221$i = (($761) + 1)|0;
       $762 = ($j$0221$i|0)<(9);
       if ($762) {
        $i$1222$i = 10;$j$0223$i = $j$0221$i;
        while(1) {
         $763 = ($i$1222$i*10)|0;
         $j$0$i = (($j$0223$i) + 1)|0;
         $exitcond$i = ($j$0$i|0)==(9);
         if ($exitcond$i) {
          $i$1$lcssa$i = $763;
          break;
         } else {
          $i$1222$i = $763;$j$0223$i = $j$0$i;
         }
        }
       } else {
        $i$1$lcssa$i = 10;
       }
       $764 = HEAP32[$760>>2]|0;
       $765 = (($764>>>0) % ($i$1$lcssa$i>>>0))&-1;
       $766 = ($765|0)==(0);
       if ($766) {
        $$sum15$i = (($759) + -1022)|0;
        $767 = (($$31$i) + ($$sum15$i<<2)|0);
        $768 = ($767|0)==($z$3$lcssa$i|0);
        if ($768) {
         $a$7$i = $a$3$lcssa$i;$d$3$i = $760;$e$3$i = $e$1$i;
        } else {
         label = 221;
        }
       } else {
        label = 221;
       }
       do {
        if ((label|0) == 221) {
         label = 0;
         $769 = (($764>>>0) / ($i$1$lcssa$i>>>0))&-1;
         $770 = $769 & 1;
         $771 = ($770|0)==(0);
         $$20$i = $771 ? 9007199254740992.0 : 9007199254740994.0;
         $772 = (($i$1$lcssa$i|0) / 2)&-1;
         $773 = ($765>>>0)<($772>>>0);
         do {
          if ($773) {
           $small$0$i = 0.5;
          } else {
           $774 = ($765|0)==($772|0);
           if ($774) {
            $$sum16$i = (($759) + -1022)|0;
            $775 = (($$31$i) + ($$sum16$i<<2)|0);
            $776 = ($775|0)==($z$3$lcssa$i|0);
            if ($776) {
             $small$0$i = 1.0;
             break;
            }
           }
           $small$0$i = 1.5;
          }
         } while(0);
         $777 = ($pl$0$i|0)==(0);
         do {
          if ($777) {
           $round6$1$i = $$20$i;$small$1$i = $small$0$i;
          } else {
           $778 = HEAP8[$prefix$0$i>>0]|0;
           $779 = ($778<<24>>24)==(45);
           if (!($779)) {
            $round6$1$i = $$20$i;$small$1$i = $small$0$i;
            break;
           }
           $780 = -$$20$i;
           $781 = -$small$0$i;
           $round6$1$i = $780;$small$1$i = $781;
          }
         } while(0);
         $782 = (($764) - ($765))|0;
         HEAP32[$760>>2] = $782;
         $783 = $round6$1$i + $small$1$i;
         $784 = $783 != $round6$1$i;
         if (!($784)) {
          $a$7$i = $a$3$lcssa$i;$d$3$i = $760;$e$3$i = $e$1$i;
          break;
         }
         $785 = (($782) + ($i$1$lcssa$i))|0;
         HEAP32[$760>>2] = $785;
         $786 = ($785>>>0)>(999999999);
         if ($786) {
          $a$5215$i = $a$3$lcssa$i;$d$2214$i = $760;
          while(1) {
           $787 = ((($d$2214$i)) + -4|0);
           HEAP32[$d$2214$i>>2] = 0;
           $788 = ($787>>>0)<($a$5215$i>>>0);
           if ($788) {
            $789 = ((($a$5215$i)) + -4|0);
            HEAP32[$789>>2] = 0;
            $a$6$i = $789;
           } else {
            $a$6$i = $a$5215$i;
           }
           $790 = HEAP32[$787>>2]|0;
           $791 = (($790) + 1)|0;
           HEAP32[$787>>2] = $791;
           $792 = ($791>>>0)>(999999999);
           if ($792) {
            $a$5215$i = $a$6$i;$d$2214$i = $787;
           } else {
            $a$5$lcssa$i = $a$6$i;$d$2$lcssa$i = $787;
            break;
           }
          }
         } else {
          $a$5$lcssa$i = $a$3$lcssa$i;$d$2$lcssa$i = $760;
         }
         $793 = $a$5$lcssa$i;
         $794 = (($636) - ($793))|0;
         $795 = $794 >> 2;
         $796 = ($795*9)|0;
         $797 = HEAP32[$a$5$lcssa$i>>2]|0;
         $798 = ($797>>>0)<(10);
         if ($798) {
          $a$7$i = $a$5$lcssa$i;$d$3$i = $d$2$lcssa$i;$e$3$i = $796;
          break;
         } else {
          $e$2210$i = $796;$i$2209$i = 10;
         }
         while(1) {
          $799 = ($i$2209$i*10)|0;
          $800 = (($e$2210$i) + 1)|0;
          $801 = ($797>>>0)<($799>>>0);
          if ($801) {
           $a$7$i = $a$5$lcssa$i;$d$3$i = $d$2$lcssa$i;$e$3$i = $800;
           break;
          } else {
           $e$2210$i = $800;$i$2209$i = $799;
          }
         }
        }
       } while(0);
       $802 = ((($d$3$i)) + 4|0);
       $803 = ($z$3$lcssa$i>>>0)>($802>>>0);
       $$z$3$i = $803 ? $802 : $z$3$lcssa$i;
       $a$8$ph$i = $a$7$i;$e$4$ph$i = $e$3$i;$z$6$ph$i = $$z$3$i;
      } else {
       $a$8$ph$i = $a$3$lcssa$i;$e$4$ph$i = $e$1$i;$z$6$ph$i = $z$3$lcssa$i;
      }
      $804 = (0 - ($e$4$ph$i))|0;
      $z$6$i = $z$6$ph$i;
      while(1) {
       $805 = ($z$6$i>>>0)>($a$8$ph$i>>>0);
       if (!($805)) {
        $$lcssa275$i = 0;$z$6$i$lcssa = $z$6$i;
        break;
       }
       $806 = ((($z$6$i)) + -4|0);
       $807 = HEAP32[$806>>2]|0;
       $808 = ($807|0)==(0);
       if ($808) {
        $z$6$i = $806;
       } else {
        $$lcssa275$i = 1;$z$6$i$lcssa = $z$6$i;
        break;
       }
      }
      do {
       if ($748) {
        $809 = $749&1;
        $810 = $809 ^ 1;
        $$p$$i = (($810) + ($$p$i))|0;
        $811 = ($$p$$i|0)>($e$4$ph$i|0);
        $812 = ($e$4$ph$i|0)>(-5);
        $or$cond6$i = $811 & $812;
        if ($or$cond6$i) {
         $813 = (($t$0) + -1)|0;
         $$neg152$i = (($$p$$i) + -1)|0;
         $814 = (($$neg152$i) - ($e$4$ph$i))|0;
         $$013$i = $813;$$210$i = $814;
        } else {
         $815 = (($t$0) + -2)|0;
         $816 = (($$p$$i) + -1)|0;
         $$013$i = $815;$$210$i = $816;
        }
        $817 = $fl$1$ & 8;
        $818 = ($817|0)==(0);
        if (!($818)) {
         $$114$i = $$013$i;$$311$i = $$210$i;$$pre$phi302$iZ2D = $817;
         break;
        }
        do {
         if ($$lcssa275$i) {
          $819 = ((($z$6$i$lcssa)) + -4|0);
          $820 = HEAP32[$819>>2]|0;
          $821 = ($820|0)==(0);
          if ($821) {
           $j$2$i = 9;
           break;
          }
          $822 = (($820>>>0) % 10)&-1;
          $823 = ($822|0)==(0);
          if ($823) {
           $i$3205$i = 10;$j$1206$i = 0;
          } else {
           $j$2$i = 0;
           break;
          }
          while(1) {
           $824 = ($i$3205$i*10)|0;
           $825 = (($j$1206$i) + 1)|0;
           $826 = (($820>>>0) % ($824>>>0))&-1;
           $827 = ($826|0)==(0);
           if ($827) {
            $i$3205$i = $824;$j$1206$i = $825;
           } else {
            $j$2$i = $825;
            break;
           }
          }
         } else {
          $j$2$i = 9;
         }
        } while(0);
        $828 = $$013$i | 32;
        $829 = ($828|0)==(102);
        $830 = $z$6$i$lcssa;
        $831 = (($830) - ($636))|0;
        $832 = $831 >> 2;
        $833 = ($832*9)|0;
        $834 = (($833) + -9)|0;
        if ($829) {
         $835 = (($834) - ($j$2$i))|0;
         $836 = ($835|0)<(0);
         $$21$i = $836 ? 0 : $835;
         $837 = ($$210$i|0)<($$21$i|0);
         $$210$$22$i = $837 ? $$210$i : $$21$i;
         $$114$i = $$013$i;$$311$i = $$210$$22$i;$$pre$phi302$iZ2D = 0;
         break;
        } else {
         $838 = (($834) + ($e$4$ph$i))|0;
         $839 = (($838) - ($j$2$i))|0;
         $840 = ($839|0)<(0);
         $$23$i = $840 ? 0 : $839;
         $841 = ($$210$i|0)<($$23$i|0);
         $$210$$24$i = $841 ? $$210$i : $$23$i;
         $$114$i = $$013$i;$$311$i = $$210$$24$i;$$pre$phi302$iZ2D = 0;
         break;
        }
       } else {
        $$pre301$i = $fl$1$ & 8;
        $$114$i = $t$0;$$311$i = $$p$i;$$pre$phi302$iZ2D = $$pre301$i;
       }
      } while(0);
      $842 = $$311$i | $$pre$phi302$iZ2D;
      $843 = ($842|0)!=(0);
      $844 = $843&1;
      $845 = $$114$i | 32;
      $846 = ($845|0)==(102);
      if ($846) {
       $847 = ($e$4$ph$i|0)>(0);
       $848 = $847 ? $e$4$ph$i : 0;
       $$pn$i = $848;$estr$2$i = 0;
      } else {
       $849 = ($e$4$ph$i|0)<(0);
       $850 = $849 ? $804 : $e$4$ph$i;
       $851 = ($850|0)<(0);
       if ($851) {
        $852 = ($850|0)<(0);
        $853 = $852 << 31 >> 31;
        $$05$i79$i = $7;$854 = $850;$855 = $853;
        while(1) {
         $856 = (___uremdi3(($854|0),($855|0),10,0)|0);
         $857 = tempRet0;
         $858 = $856 | 48;
         $859 = $858&255;
         $860 = ((($$05$i79$i)) + -1|0);
         HEAP8[$860>>0] = $859;
         $861 = (___udivdi3(($854|0),($855|0),10,0)|0);
         $862 = tempRet0;
         $863 = ($855>>>0)>(9);
         $864 = ($854>>>0)>(4294967295);
         $865 = ($855|0)==(9);
         $866 = $865 & $864;
         $867 = $863 | $866;
         if ($867) {
          $$05$i79$i = $860;$854 = $861;$855 = $862;
         } else {
          $$lcssa470 = $860;$1185 = $861;$1186 = $862;
          break;
         }
        }
        $$0$lcssa$i84$i = $$lcssa470;$$01$lcssa$off0$i85$i = $1185;
       } else {
        $$0$lcssa$i84$i = $7;$$01$lcssa$off0$i85$i = $850;
       }
       $868 = ($$01$lcssa$off0$i85$i|0)==(0);
       if ($868) {
        $estr$1$ph$i = $$0$lcssa$i84$i;
       } else {
        $$12$i87$i = $$0$lcssa$i84$i;$y$03$i86$i = $$01$lcssa$off0$i85$i;
        while(1) {
         $869 = (($y$03$i86$i>>>0) % 10)&-1;
         $870 = $869 | 48;
         $871 = $870&255;
         $872 = ((($$12$i87$i)) + -1|0);
         HEAP8[$872>>0] = $871;
         $873 = (($y$03$i86$i>>>0) / 10)&-1;
         $874 = ($y$03$i86$i>>>0)<(10);
         if ($874) {
          $estr$1$ph$i = $872;
          break;
         } else {
          $$12$i87$i = $872;$y$03$i86$i = $873;
         }
        }
       }
       $875 = $estr$1$ph$i;
       $876 = (($9) - ($875))|0;
       $877 = ($876|0)<(2);
       if ($877) {
        $estr$1201$i = $estr$1$ph$i;
        while(1) {
         $878 = ((($estr$1201$i)) + -1|0);
         HEAP8[$878>>0] = 48;
         $879 = $878;
         $880 = (($9) - ($879))|0;
         $881 = ($880|0)<(2);
         if ($881) {
          $estr$1201$i = $878;
         } else {
          $estr$1$lcssa$i = $878;
          break;
         }
        }
       } else {
        $estr$1$lcssa$i = $estr$1$ph$i;
       }
       $882 = $e$4$ph$i >> 31;
       $883 = $882 & 2;
       $884 = (($883) + 43)|0;
       $885 = $884&255;
       $886 = ((($estr$1$lcssa$i)) + -1|0);
       HEAP8[$886>>0] = $885;
       $887 = $$114$i&255;
       $888 = ((($estr$1$lcssa$i)) + -2|0);
       HEAP8[$888>>0] = $887;
       $889 = $888;
       $890 = (($9) - ($889))|0;
       $$pn$i = $890;$estr$2$i = $888;
      }
      $891 = (($pl$0$i) + 1)|0;
      $892 = (($891) + ($$311$i))|0;
      $l$1$i = (($892) + ($844))|0;
      $893 = (($l$1$i) + ($$pn$i))|0;
      $894 = $fl$1$ & 73728;
      $895 = ($894|0)==(0);
      $896 = ($w$1|0)>($893|0);
      $or$cond$i93$i = $895 & $896;
      if ($or$cond$i93$i) {
       $897 = (($w$1) - ($893))|0;
       $898 = ($897>>>0)>(256);
       $899 = $898 ? 256 : $897;
       _memset(($pad$i|0),32,($899|0))|0;
       $900 = ($897>>>0)>(255);
       if ($900) {
        $$01$i95$i = $897;
        while(1) {
         (___fwritex($pad$i,256,$f)|0);
         $901 = (($$01$i95$i) + -256)|0;
         $902 = ($901>>>0)>(255);
         if ($902) {
          $$01$i95$i = $901;
         } else {
          break;
         }
        }
        $903 = $897 & 255;
        $$0$lcssa$i97$i = $903;
       } else {
        $$0$lcssa$i97$i = $897;
       }
       (___fwritex($pad$i,$$0$lcssa$i97$i,$f)|0);
      }
      (___fwritex($prefix$0$i,$pl$0$i,$f)|0);
      $904 = ($894|0)==(65536);
      $or$cond$i100$i = $904 & $896;
      if ($or$cond$i100$i) {
       $905 = (($w$1) - ($893))|0;
       $906 = ($905>>>0)>(256);
       $907 = $906 ? 256 : $905;
       _memset(($pad$i|0),48,($907|0))|0;
       $908 = ($905>>>0)>(255);
       if ($908) {
        $$01$i102$i = $905;
        while(1) {
         (___fwritex($pad$i,256,$f)|0);
         $909 = (($$01$i102$i) + -256)|0;
         $910 = ($909>>>0)>(255);
         if ($910) {
          $$01$i102$i = $909;
         } else {
          break;
         }
        }
        $911 = $905 & 255;
        $$0$lcssa$i104$i = $911;
       } else {
        $$0$lcssa$i104$i = $905;
       }
       (___fwritex($pad$i,$$0$lcssa$i104$i,$f)|0);
      }
      if ($846) {
       $912 = ($a$8$ph$i>>>0)>($$31$i>>>0);
       $r$0$a$8$i = $912 ? $$31$i : $a$8$ph$i;
       $d$4191$i = $r$0$a$8$i;
       while(1) {
        $913 = HEAP32[$d$4191$i>>2]|0;
        $914 = ($913|0)==(0);
        if ($914) {
         $$1$lcssa$i112$i = $14;
        } else {
         $$12$i110$i = $14;$y$03$i109$i = $913;
         while(1) {
          $915 = (($y$03$i109$i>>>0) % 10)&-1;
          $916 = $915 | 48;
          $917 = $916&255;
          $918 = ((($$12$i110$i)) + -1|0);
          HEAP8[$918>>0] = $917;
          $919 = (($y$03$i109$i>>>0) / 10)&-1;
          $920 = ($y$03$i109$i>>>0)<(10);
          if ($920) {
           $$1$lcssa$i112$i = $918;
           break;
          } else {
           $$12$i110$i = $918;$y$03$i109$i = $919;
          }
         }
        }
        $921 = ($d$4191$i|0)==($r$0$a$8$i|0);
        do {
         if ($921) {
          $925 = ($$1$lcssa$i112$i|0)==($14|0);
          if (!($925)) {
           $s7$1$i = $$1$lcssa$i112$i;
           break;
          }
          HEAP8[$16>>0] = 48;
          $s7$1$i = $16;
         } else {
          $922 = ($$1$lcssa$i112$i>>>0)>($buf$i>>>0);
          if ($922) {
           $s7$0188$i = $$1$lcssa$i112$i;
          } else {
           $s7$1$i = $$1$lcssa$i112$i;
           break;
          }
          while(1) {
           $923 = ((($s7$0188$i)) + -1|0);
           HEAP8[$923>>0] = 48;
           $924 = ($923>>>0)>($buf$i>>>0);
           if ($924) {
            $s7$0188$i = $923;
           } else {
            $s7$1$i = $923;
            break;
           }
          }
         }
        } while(0);
        $926 = $s7$1$i;
        $927 = (($15) - ($926))|0;
        (___fwritex($s7$1$i,$927,$f)|0);
        $928 = ((($d$4191$i)) + 4|0);
        $929 = ($928>>>0)>($$31$i>>>0);
        if ($929) {
         $$lcssa479 = $928;
         break;
        } else {
         $d$4191$i = $928;
        }
       }
       $930 = ($842|0)==(0);
       if (!($930)) {
        (___fwritex(4504,1,$f)|0);
       }
       $931 = ($$lcssa479>>>0)<($z$6$i$lcssa>>>0);
       $932 = ($$311$i|0)>(0);
       $933 = $932 & $931;
       if ($933) {
        $$412184$i = $$311$i;$d$5183$i = $$lcssa479;
        while(1) {
         $934 = HEAP32[$d$5183$i>>2]|0;
         $935 = ($934|0)==(0);
         if ($935) {
          $s8$0180$i = $14;
          label = 289;
         } else {
          $$12$i119$i = $14;$y$03$i118$i = $934;
          while(1) {
           $936 = (($y$03$i118$i>>>0) % 10)&-1;
           $937 = $936 | 48;
           $938 = $937&255;
           $939 = ((($$12$i119$i)) + -1|0);
           HEAP8[$939>>0] = $938;
           $940 = (($y$03$i118$i>>>0) / 10)&-1;
           $941 = ($y$03$i118$i>>>0)<(10);
           if ($941) {
            $$lcssa480 = $939;
            break;
           } else {
            $$12$i119$i = $939;$y$03$i118$i = $940;
           }
          }
          $942 = ($$lcssa480>>>0)>($buf$i>>>0);
          if ($942) {
           $s8$0180$i = $$lcssa480;
           label = 289;
          } else {
           $s8$0$lcssa$i = $$lcssa480;
          }
         }
         if ((label|0) == 289) {
          while(1) {
           label = 0;
           $943 = ((($s8$0180$i)) + -1|0);
           HEAP8[$943>>0] = 48;
           $944 = ($943>>>0)>($buf$i>>>0);
           if ($944) {
            $s8$0180$i = $943;
            label = 289;
           } else {
            $s8$0$lcssa$i = $943;
            break;
           }
          }
         }
         $945 = ($$412184$i|0)>(9);
         $946 = $945 ? 9 : $$412184$i;
         (___fwritex($s8$0$lcssa$i,$946,$f)|0);
         $947 = ((($d$5183$i)) + 4|0);
         $948 = (($$412184$i) + -9)|0;
         $949 = ($947>>>0)<($z$6$i$lcssa>>>0);
         $950 = $945 & $949;
         if ($950) {
          $$412184$i = $948;$d$5183$i = $947;
         } else {
          $$412$lcssa$i = $948;
          break;
         }
        }
       } else {
        $$412$lcssa$i = $$311$i;
       }
       $951 = ($$412$lcssa$i|0)>(0);
       if ($951) {
        $952 = ($$412$lcssa$i>>>0)>(256);
        $953 = $952 ? 256 : $$412$lcssa$i;
        _memset(($pad$i|0),48,($953|0))|0;
        $954 = ($$412$lcssa$i>>>0)>(255);
        if ($954) {
         $$01$i126$i = $$412$lcssa$i;
         while(1) {
          (___fwritex($pad$i,256,$f)|0);
          $955 = (($$01$i126$i) + -256)|0;
          $956 = ($955>>>0)>(255);
          if ($956) {
           $$01$i126$i = $955;
          } else {
           break;
          }
         }
         $957 = $$412$lcssa$i & 255;
         $$0$lcssa$i128$i = $957;
        } else {
         $$0$lcssa$i128$i = $$412$lcssa$i;
        }
        (___fwritex($pad$i,$$0$lcssa$i128$i,$f)|0);
       }
      } else {
       $958 = ((($a$8$ph$i)) + 4|0);
       $z$6$$i = $$lcssa275$i ? $z$6$i$lcssa : $958;
       $959 = ($$311$i|0)>(-1);
       do {
        if ($959) {
         $960 = ($$pre$phi302$iZ2D|0)==(0);
         $$5196$i = $$311$i;$d$6195$i = $a$8$ph$i;
         while(1) {
          $961 = HEAP32[$d$6195$i>>2]|0;
          $962 = ($961|0)==(0);
          if ($962) {
           label = 303;
          } else {
           $$12$i134$i = $14;$y$03$i133$i = $961;
           while(1) {
            $963 = (($y$03$i133$i>>>0) % 10)&-1;
            $964 = $963 | 48;
            $965 = $964&255;
            $966 = ((($$12$i134$i)) + -1|0);
            HEAP8[$966>>0] = $965;
            $967 = (($y$03$i133$i>>>0) / 10)&-1;
            $968 = ($y$03$i133$i>>>0)<(10);
            if ($968) {
             $$12$i134$i$lcssa = $$12$i134$i;$$lcssa474 = $966;
             break;
            } else {
             $$12$i134$i = $966;$y$03$i133$i = $967;
            }
           }
           $969 = ($$lcssa474|0)==($14|0);
           if ($969) {
            label = 303;
           } else {
            $1187 = $$12$i134$i$lcssa;$s9$0$i = $$lcssa474;
           }
          }
          if ((label|0) == 303) {
           label = 0;
           HEAP8[$16>>0] = 48;
           $1187 = $14;$s9$0$i = $16;
          }
          $970 = ($d$6195$i|0)==($a$8$ph$i|0);
          do {
           if ($970) {
            (___fwritex($s9$0$i,1,$f)|0);
            $974 = ($$5196$i|0)<(1);
            $or$cond29$i = $960 & $974;
            if ($or$cond29$i) {
             $s9$2$i = $1187;
             break;
            }
            (___fwritex(4504,1,$f)|0);
            $s9$2$i = $1187;
           } else {
            $971 = ($s9$0$i>>>0)>($buf$i>>>0);
            if ($971) {
             $s9$1192$i = $s9$0$i;
            } else {
             $s9$2$i = $s9$0$i;
             break;
            }
            while(1) {
             $972 = ((($s9$1192$i)) + -1|0);
             HEAP8[$972>>0] = 48;
             $973 = ($972>>>0)>($buf$i>>>0);
             if ($973) {
              $s9$1192$i = $972;
             } else {
              $s9$2$i = $972;
              break;
             }
            }
           }
          } while(0);
          $975 = $s9$2$i;
          $976 = (($15) - ($975))|0;
          $977 = ($$5196$i|0)>($976|0);
          $978 = $977 ? $976 : $$5196$i;
          (___fwritex($s9$2$i,$978,$f)|0);
          $979 = (($$5196$i) - ($976))|0;
          $980 = ((($d$6195$i)) + 4|0);
          $981 = ($980>>>0)<($z$6$$i>>>0);
          $982 = ($979|0)>(-1);
          $983 = $981 & $982;
          if ($983) {
           $$5196$i = $979;$d$6195$i = $980;
          } else {
           $$lcssa476 = $979;
           break;
          }
         }
         $984 = ($$lcssa476|0)>(0);
         if (!($984)) {
          break;
         }
         $985 = ($$lcssa476>>>0)>(256);
         $986 = $985 ? 256 : $$lcssa476;
         _memset(($pad$i|0),48,($986|0))|0;
         $987 = ($$lcssa476>>>0)>(255);
         if ($987) {
          $$01$i141$i = $$lcssa476;
          while(1) {
           (___fwritex($pad$i,256,$f)|0);
           $988 = (($$01$i141$i) + -256)|0;
           $989 = ($988>>>0)>(255);
           if ($989) {
            $$01$i141$i = $988;
           } else {
            break;
           }
          }
          $990 = $$lcssa476 & 255;
          $$0$lcssa$i143$i = $990;
         } else {
          $$0$lcssa$i143$i = $$lcssa476;
         }
         (___fwritex($pad$i,$$0$lcssa$i143$i,$f)|0);
        } else {
        }
       } while(0);
       $991 = $estr$2$i;
       $992 = (($9) - ($991))|0;
       (___fwritex($estr$2$i,$992,$f)|0);
      }
      $993 = ($894|0)==(8192);
      $or$cond$i$i = $993 & $896;
      if ($or$cond$i$i) {
       $994 = (($w$1) - ($893))|0;
       $995 = ($994>>>0)>(256);
       $996 = $995 ? 256 : $994;
       _memset(($pad$i|0),32,($996|0))|0;
       $997 = ($994>>>0)>(255);
       if ($997) {
        $$01$i$i = $994;
        while(1) {
         (___fwritex($pad$i,256,$f)|0);
         $998 = (($$01$i$i) + -256)|0;
         $999 = ($998>>>0)>(255);
         if ($999) {
          $$01$i$i = $998;
         } else {
          break;
         }
        }
        $1000 = $994 & 255;
        $$0$lcssa$i$i = $1000;
       } else {
        $$0$lcssa$i$i = $994;
       }
       (___fwritex($pad$i,$$0$lcssa$i$i,$f)|0);
      }
      $w$30$i = $896 ? $w$1 : $893;
      $$0$i = $w$30$i;
     } else {
      $445 = $t$0 & 32;
      $446 = ($445|0)!=(0);
      $447 = $446 ? 4472 : 4480;
      $448 = ($$07$i != $$07$i) | (0.0 != 0.0);
      $449 = $446 ? 4488 : 4496;
      $pl$1$i = $448 ? 0 : $pl$0$i;
      $s1$0$i = $448 ? $449 : $447;
      $450 = (($pl$1$i) + 3)|0;
      $451 = $fl$1$ & 8192;
      $452 = ($451|0)==(0);
      $453 = ($w$1|0)>($450|0);
      $or$cond$i35$i = $452 & $453;
      if ($or$cond$i35$i) {
       $454 = (($w$1) - ($450))|0;
       $455 = ($454>>>0)>(256);
       $456 = $455 ? 256 : $454;
       _memset(($pad$i|0),32,($456|0))|0;
       $457 = ($454>>>0)>(255);
       if ($457) {
        $$01$i37$i = $454;
        while(1) {
         (___fwritex($pad$i,256,$f)|0);
         $458 = (($$01$i37$i) + -256)|0;
         $459 = ($458>>>0)>(255);
         if ($459) {
          $$01$i37$i = $458;
         } else {
          break;
         }
        }
        $460 = $454 & 255;
        $$0$lcssa$i39$i = $460;
       } else {
        $$0$lcssa$i39$i = $454;
       }
       (___fwritex($pad$i,$$0$lcssa$i39$i,$f)|0);
      }
      (___fwritex($prefix$0$i,$pl$1$i,$f)|0);
      (___fwritex($s1$0$i,3,$f)|0);
      $461 = $fl$1$ & 73728;
      $462 = ($461|0)==(8192);
      $or$cond$i42$i = $462 & $453;
      if ($or$cond$i42$i) {
       $463 = (($w$1) - ($450))|0;
       $464 = ($463>>>0)>(256);
       $465 = $464 ? 256 : $463;
       _memset(($pad$i|0),32,($465|0))|0;
       $466 = ($463>>>0)>(255);
       if ($466) {
        $$01$i44$i = $463;
        while(1) {
         (___fwritex($pad$i,256,$f)|0);
         $467 = (($$01$i44$i) + -256)|0;
         $468 = ($467>>>0)>(255);
         if ($468) {
          $$01$i44$i = $467;
         } else {
          break;
         }
        }
        $469 = $463 & 255;
        $$0$lcssa$i46$i = $469;
       } else {
        $$0$lcssa$i46$i = $463;
       }
       (___fwritex($pad$i,$$0$lcssa$i46$i,$f)|0);
      }
      $470 = $453 ? $w$1 : $450;
      $$0$i = $470;
     }
    } while(0);
    $1169 = $291;$1170 = $264;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $$0$i;$l10n$0 = $l10n$3;
    continue L1;
    break;
   }
   case 117:  {
    $336 = $291;$338 = $264;$pl$0 = 0;$prefix$0 = 4424;
    label = 84;
    break;
   }
   case 99:  {
    $378 = $264&255;
    HEAP8[$4>>0] = $378;
    $1175 = $291;$1176 = $264;$a$2 = $4;$fl$6 = $263;$p$5 = 1;$pl$2 = 0;$prefix$2 = 4424;$z$2 = $2;
    break;
   }
   case 109:  {
    $379 = (___errno_location()|0);
    $380 = HEAP32[$379>>2]|0;
    $381 = (_strerror(($380|0))|0);
    $a$1 = $381;
    label = 94;
    break;
   }
   case 115:  {
    $382 = $264;
    $383 = ($264|0)!=(0);
    $384 = $383 ? $382 : 4440;
    $a$1 = $384;
    label = 94;
    break;
   }
   case 67:  {
    HEAP32[$wc>>2] = $264;
    HEAP32[$5>>2] = 0;
    $1179 = $wc;$1180 = $6;$p$4272 = -1;
    label = 97;
    break;
   }
   case 83:  {
    $391 = $264;
    $392 = ($p$0|0)==(0);
    if ($392) {
     $1181 = $264;$1182 = $391;$i$0$lcssa273 = 0;
     label = 102;
    } else {
     $1179 = $391;$1180 = $264;$p$4272 = $p$0;
     label = 97;
    }
    break;
   }
   case 105: case 100:  {
    $329 = ($291|0)<(0);
    if ($329) {
     $330 = (_i64Subtract(0,0,($264|0),($291|0))|0);
     $331 = tempRet0;
     $336 = $331;$338 = $330;$pl$0 = 1;$prefix$0 = 4424;
     label = 84;
     break L86;
    }
    $332 = $fl$1$ & 2048;
    $333 = ($332|0)==(0);
    if ($333) {
     $334 = $fl$1$ & 1;
     $335 = ($334|0)==(0);
     $$ = $335 ? 4424 : (4426);
     $336 = $291;$338 = $264;$pl$0 = $334;$prefix$0 = $$;
     label = 84;
    } else {
     $336 = $291;$338 = $264;$pl$0 = 1;$prefix$0 = (4425);
     label = 84;
    }
    break;
   }
   default: {
    $1175 = $291;$1176 = $264;$a$2 = $23;$fl$6 = $fl$1$;$p$5 = $p$0;$pl$2 = 0;$prefix$2 = 4424;$z$2 = $2;
   }
   }
  } while(0);
  if ((label|0) == 73) {
   label = 0;
   $289 = $t$1 & 32;
   $290 = ($264|0)==(0);
   $292 = ($291|0)==(0);
   $293 = $290 & $292;
   if ($293) {
    $366 = $264;$368 = $291;$a$0 = $2;$fl$4 = $fl$3;$p$2 = $p$1;$pl$1 = 0;$prefix$1 = 4424;
    label = 89;
   } else {
    $$012$i = $2;$295 = $264;$302 = $291;
    while(1) {
     $294 = $295 & 15;
     $296 = (4408 + ($294)|0);
     $297 = HEAP8[$296>>0]|0;
     $298 = $297&255;
     $299 = $298 | $289;
     $300 = $299&255;
     $301 = ((($$012$i)) + -1|0);
     HEAP8[$301>>0] = $300;
     $303 = (_bitshift64Lshr(($295|0),($302|0),4)|0);
     $304 = tempRet0;
     $305 = ($303|0)==(0);
     $306 = ($304|0)==(0);
     $307 = $305 & $306;
     if ($307) {
      $$lcssa491 = $301;
      break;
     } else {
      $$012$i = $301;$295 = $303;$302 = $304;
     }
    }
    $308 = $fl$3 & 8;
    $309 = ($308|0)==(0);
    if ($309) {
     $366 = $264;$368 = $291;$a$0 = $$lcssa491;$fl$4 = $fl$3;$p$2 = $p$1;$pl$1 = 0;$prefix$1 = 4424;
     label = 89;
    } else {
     $310 = $t$1 >> 4;
     $311 = (4424 + ($310)|0);
     $366 = $264;$368 = $291;$a$0 = $$lcssa491;$fl$4 = $fl$3;$p$2 = $p$1;$pl$1 = 2;$prefix$1 = $311;
     label = 89;
    }
   }
  }
  else if ((label|0) == 84) {
   label = 0;
   $337 = ($336>>>0)>(0);
   $339 = ($338>>>0)>(4294967295);
   $340 = ($336|0)==(0);
   $341 = $340 & $339;
   $342 = $337 | $341;
   if ($342) {
    $$05$i = $2;$343 = $338;$344 = $336;
    while(1) {
     $345 = (___uremdi3(($343|0),($344|0),10,0)|0);
     $346 = tempRet0;
     $347 = $345 | 48;
     $348 = $347&255;
     $349 = ((($$05$i)) + -1|0);
     HEAP8[$349>>0] = $348;
     $350 = (___udivdi3(($343|0),($344|0),10,0)|0);
     $351 = tempRet0;
     $352 = ($344>>>0)>(9);
     $353 = ($343>>>0)>(4294967295);
     $354 = ($344|0)==(9);
     $355 = $354 & $353;
     $356 = $352 | $355;
     if ($356) {
      $$05$i = $349;$343 = $350;$344 = $351;
     } else {
      $$lcssa487 = $349;$1177 = $350;$1178 = $351;
      break;
     }
    }
    $$0$lcssa$i53 = $$lcssa487;$$01$lcssa$off0$i = $1177;
   } else {
    $$0$lcssa$i53 = $2;$$01$lcssa$off0$i = $338;
   }
   $357 = ($$01$lcssa$off0$i|0)==(0);
   if ($357) {
    $366 = $338;$368 = $336;$a$0 = $$0$lcssa$i53;$fl$4 = $fl$1$;$p$2 = $p$0;$pl$1 = $pl$0;$prefix$1 = $prefix$0;
    label = 89;
   } else {
    $$12$i = $$0$lcssa$i53;$y$03$i = $$01$lcssa$off0$i;
    while(1) {
     $358 = (($y$03$i>>>0) % 10)&-1;
     $359 = $358 | 48;
     $360 = $359&255;
     $361 = ((($$12$i)) + -1|0);
     HEAP8[$361>>0] = $360;
     $362 = (($y$03$i>>>0) / 10)&-1;
     $363 = ($y$03$i>>>0)<(10);
     if ($363) {
      $366 = $338;$368 = $336;$a$0 = $361;$fl$4 = $fl$1$;$p$2 = $p$0;$pl$1 = $pl$0;$prefix$1 = $prefix$0;
      label = 89;
      break;
     } else {
      $$12$i = $361;$y$03$i = $362;
     }
    }
   }
  }
  else if ((label|0) == 94) {
   label = 0;
   $385 = (_memchr($a$1,0,$p$0)|0);
   $386 = ($385|0)==(0|0);
   $387 = $385;
   $388 = $a$1;
   $389 = (($387) - ($388))|0;
   $390 = (($a$1) + ($p$0)|0);
   $z$1 = $386 ? $390 : $385;
   $p$3 = $386 ? $p$0 : $389;
   $1175 = $291;$1176 = $264;$a$2 = $a$1;$fl$6 = $263;$p$5 = $p$3;$pl$2 = 0;$prefix$2 = 4424;$z$2 = $z$1;
  }
  else if ((label|0) == 97) {
   label = 0;
   $i$0175 = 0;$l$1174 = 0;$ws$0176 = $1179;
   while(1) {
    $393 = HEAP32[$ws$0176>>2]|0;
    $394 = ($393|0)==(0);
    if ($394) {
     $i$0$lcssa = $i$0175;$l$2 = $l$1174;
     break;
    }
    $395 = (_wctomb($mb,$393)|0);
    $396 = ($395|0)<(0);
    $397 = (($p$4272) - ($i$0175))|0;
    $398 = ($395>>>0)>($397>>>0);
    $or$cond22 = $396 | $398;
    if ($or$cond22) {
     $i$0$lcssa = $i$0175;$l$2 = $395;
     break;
    }
    $399 = ((($ws$0176)) + 4|0);
    $400 = (($395) + ($i$0175))|0;
    $401 = ($p$4272>>>0)>($400>>>0);
    if ($401) {
     $i$0175 = $400;$l$1174 = $395;$ws$0176 = $399;
    } else {
     $i$0$lcssa = $400;$l$2 = $395;
     break;
    }
   }
   $402 = ($l$2|0)<(0);
   if ($402) {
    $$0 = -1;
    label = 363;
    break;
   } else {
    $1181 = $1180;$1182 = $1179;$i$0$lcssa273 = $i$0$lcssa;
    label = 102;
   }
  }
  if ((label|0) == 89) {
   label = 0;
   $364 = ($p$2|0)>(-1);
   $365 = $fl$4 & -65537;
   $$fl$4 = $364 ? $365 : $fl$4;
   $367 = ($366|0)!=(0);
   $369 = ($368|0)!=(0);
   $370 = $367 | $369;
   $371 = ($p$2|0)!=(0);
   $or$cond = $370 | $371;
   if ($or$cond) {
    $372 = $a$0;
    $373 = (($3) - ($372))|0;
    $374 = $370&1;
    $375 = $374 ^ 1;
    $376 = (($375) + ($373))|0;
    $377 = ($p$2|0)>($376|0);
    $p$2$ = $377 ? $p$2 : $376;
    $1175 = $368;$1176 = $366;$a$2 = $a$0;$fl$6 = $$fl$4;$p$5 = $p$2$;$pl$2 = $pl$1;$prefix$2 = $prefix$1;$z$2 = $2;
   } else {
    $1175 = $368;$1176 = $366;$a$2 = $2;$fl$6 = $$fl$4;$p$5 = 0;$pl$2 = $pl$1;$prefix$2 = $prefix$1;$z$2 = $2;
   }
  }
  else if ((label|0) == 102) {
   label = 0;
   $403 = $fl$1$ & 73728;
   $404 = ($403|0)==(0);
   $405 = ($w$1|0)>($i$0$lcssa273|0);
   $or$cond$i64 = $404 & $405;
   if ($or$cond$i64) {
    $406 = (($w$1) - ($i$0$lcssa273))|0;
    $407 = ($406>>>0)>(256);
    $408 = $407 ? 256 : $406;
    _memset(($pad$i|0),32,($408|0))|0;
    $409 = ($406>>>0)>(255);
    if ($409) {
     $$01$i66 = $406;
     while(1) {
      (___fwritex($pad$i,256,$f)|0);
      $410 = (($$01$i66) + -256)|0;
      $411 = ($410>>>0)>(255);
      if ($411) {
       $$01$i66 = $410;
      } else {
       break;
      }
     }
     $412 = $406 & 255;
     $$0$lcssa$i68 = $412;
    } else {
     $$0$lcssa$i68 = $406;
    }
    (___fwritex($pad$i,$$0$lcssa$i68,$f)|0);
   }
   $413 = ($i$0$lcssa273|0)==(0);
   L463: do {
    if (!($413)) {
     $i$1186 = 0;$ws$1187 = $1182;
     while(1) {
      $414 = HEAP32[$ws$1187>>2]|0;
      $415 = ($414|0)==(0);
      if ($415) {
       break L463;
      }
      $416 = (_wctomb($mb,$414)|0);
      $417 = (($416) + ($i$1186))|0;
      $418 = ($417|0)>($i$0$lcssa273|0);
      if ($418) {
       break L463;
      }
      $419 = ((($ws$1187)) + 4|0);
      (___fwritex($mb,$416,$f)|0);
      $420 = ($417>>>0)<($i$0$lcssa273>>>0);
      if ($420) {
       $i$1186 = $417;$ws$1187 = $419;
      } else {
       break;
      }
     }
    }
   } while(0);
   $421 = ($403|0)==(8192);
   $or$cond$i71 = $421 & $405;
   if ($or$cond$i71) {
    $422 = (($w$1) - ($i$0$lcssa273))|0;
    $423 = ($422>>>0)>(256);
    $424 = $423 ? 256 : $422;
    _memset(($pad$i|0),32,($424|0))|0;
    $425 = ($422>>>0)>(255);
    if ($425) {
     $$01$i73 = $422;
     while(1) {
      (___fwritex($pad$i,256,$f)|0);
      $426 = (($$01$i73) + -256)|0;
      $427 = ($426>>>0)>(255);
      if ($427) {
       $$01$i73 = $426;
      } else {
       break;
      }
     }
     $428 = $422 & 255;
     $$0$lcssa$i75 = $428;
    } else {
     $$0$lcssa$i75 = $422;
    }
    (___fwritex($pad$i,$$0$lcssa$i75,$f)|0);
   }
   $429 = $405 ? $w$1 : $i$0$lcssa273;
   $1169 = $291;$1170 = $1181;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $429;$l10n$0 = $l10n$3;
   continue;
  }
  $1001 = $z$2;
  $1002 = $a$2;
  $1003 = (($1001) - ($1002))|0;
  $1004 = ($p$5|0)<($1003|0);
  $$p$5 = $1004 ? $1003 : $p$5;
  $1005 = (($pl$2) + ($$p$5))|0;
  $1006 = ($w$1|0)<($1005|0);
  $w$2 = $1006 ? $1005 : $w$1;
  $1007 = $fl$6 & 73728;
  $1008 = ($1007|0)==(0);
  $1009 = ($w$2|0)>($1005|0);
  $or$cond$i81 = $1008 & $1009;
  if ($or$cond$i81) {
   $1010 = (($w$2) - ($1005))|0;
   $1011 = ($1010>>>0)>(256);
   $1012 = $1011 ? 256 : $1010;
   _memset(($pad$i|0),32,($1012|0))|0;
   $1013 = ($1010>>>0)>(255);
   if ($1013) {
    $$01$i83 = $1010;
    while(1) {
     (___fwritex($pad$i,256,$f)|0);
     $1014 = (($$01$i83) + -256)|0;
     $1015 = ($1014>>>0)>(255);
     if ($1015) {
      $$01$i83 = $1014;
     } else {
      break;
     }
    }
    $1016 = $1010 & 255;
    $$0$lcssa$i85 = $1016;
   } else {
    $$0$lcssa$i85 = $1010;
   }
   (___fwritex($pad$i,$$0$lcssa$i85,$f)|0);
  }
  (___fwritex($prefix$2,$pl$2,$f)|0);
  $1017 = ($1007|0)==(65536);
  $or$cond$i57 = $1017 & $1009;
  if ($or$cond$i57) {
   $1018 = (($w$2) - ($1005))|0;
   $1019 = ($1018>>>0)>(256);
   $1020 = $1019 ? 256 : $1018;
   _memset(($pad$i|0),48,($1020|0))|0;
   $1021 = ($1018>>>0)>(255);
   if ($1021) {
    $$01$i59 = $1018;
    while(1) {
     (___fwritex($pad$i,256,$f)|0);
     $1022 = (($$01$i59) + -256)|0;
     $1023 = ($1022>>>0)>(255);
     if ($1023) {
      $$01$i59 = $1022;
     } else {
      break;
     }
    }
    $1024 = $1018 & 255;
    $$0$lcssa$i61 = $1024;
   } else {
    $$0$lcssa$i61 = $1018;
   }
   (___fwritex($pad$i,$$0$lcssa$i61,$f)|0);
  }
  $1025 = ($$p$5|0)>($1003|0);
  if ($1025) {
   $1026 = (($$p$5) - ($1003))|0;
   $1027 = ($1026>>>0)>(256);
   $1028 = $1027 ? 256 : $1026;
   _memset(($pad$i|0),48,($1028|0))|0;
   $1029 = ($1026>>>0)>(255);
   if ($1029) {
    $$01$i44 = $1026;
    while(1) {
     (___fwritex($pad$i,256,$f)|0);
     $1030 = (($$01$i44) + -256)|0;
     $1031 = ($1030>>>0)>(255);
     if ($1031) {
      $$01$i44 = $1030;
     } else {
      break;
     }
    }
    $1032 = $1026 & 255;
    $$0$lcssa$i46 = $1032;
   } else {
    $$0$lcssa$i46 = $1026;
   }
   (___fwritex($pad$i,$$0$lcssa$i46,$f)|0);
  }
  (___fwritex($a$2,$1003,$f)|0);
  $1033 = ($1007|0)==(8192);
  $or$cond$i = $1033 & $1009;
  if ($or$cond$i) {
   $1034 = (($w$2) - ($1005))|0;
   $1035 = ($1034>>>0)>(256);
   $1036 = $1035 ? 256 : $1034;
   _memset(($pad$i|0),32,($1036|0))|0;
   $1037 = ($1034>>>0)>(255);
   if ($1037) {
    $$01$i = $1034;
    while(1) {
     (___fwritex($pad$i,256,$f)|0);
     $1038 = (($$01$i) + -256)|0;
     $1039 = ($1038>>>0)>(255);
     if ($1039) {
      $$01$i = $1038;
     } else {
      break;
     }
    }
    $1040 = $1034 & 255;
    $$0$lcssa$i = $1040;
   } else {
    $$0$lcssa$i = $1034;
   }
   (___fwritex($pad$i,$$0$lcssa$i,$f)|0);
  }
  $1169 = $1175;$1170 = $1176;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $w$2;$l10n$0 = $l10n$3;
 }
 if ((label|0) == 344) {
  $1041 = ($f|0)==(0|0);
  if (!($1041)) {
   $$0 = $cnt$1$lcssa;
   STACKTOP = sp;return ($$0|0);
  }
  $1042 = ($l10n$0$lcssa|0)==(0);
  if ($1042) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  } else {
   $i$2162 = 1;
  }
  while(1) {
   $1043 = (($nl_type) + ($i$2162<<2)|0);
   $1044 = HEAP32[$1043>>2]|0;
   $1045 = ($1044|0)==(0);
   if ($1045) {
    $i$2162$lcssa = $i$2162;
    break;
   }
   $1047 = (($nl_arg) + ($i$2162<<3)|0);
   $1048 = ($1044>>>0)>(20);
   L530: do {
    if (!($1048)) {
     do {
      switch ($1044|0) {
      case 9:  {
       $arglist_current35 = HEAP32[$ap>>2]|0;
       $1049 = $arglist_current35;
       $1050 = ((0) + 4|0);
       $expanded148 = $1050;
       $expanded147 = (($expanded148) - 1)|0;
       $1051 = (($1049) + ($expanded147))|0;
       $1052 = ((0) + 4|0);
       $expanded152 = $1052;
       $expanded151 = (($expanded152) - 1)|0;
       $expanded150 = $expanded151 ^ -1;
       $1053 = $1051 & $expanded150;
       $1054 = $1053;
       $1055 = HEAP32[$1054>>2]|0;
       $arglist_next36 = ((($1054)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next36;
       HEAP32[$1047>>2] = $1055;
       break L530;
       break;
      }
      case 10:  {
       $arglist_current38 = HEAP32[$ap>>2]|0;
       $1056 = $arglist_current38;
       $1057 = ((0) + 4|0);
       $expanded155 = $1057;
       $expanded154 = (($expanded155) - 1)|0;
       $1058 = (($1056) + ($expanded154))|0;
       $1059 = ((0) + 4|0);
       $expanded159 = $1059;
       $expanded158 = (($expanded159) - 1)|0;
       $expanded157 = $expanded158 ^ -1;
       $1060 = $1058 & $expanded157;
       $1061 = $1060;
       $1062 = HEAP32[$1061>>2]|0;
       $arglist_next39 = ((($1061)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next39;
       $1063 = ($1062|0)<(0);
       $1064 = $1063 << 31 >> 31;
       $1065 = $1047;
       $1066 = $1065;
       HEAP32[$1066>>2] = $1062;
       $1067 = (($1065) + 4)|0;
       $1068 = $1067;
       HEAP32[$1068>>2] = $1064;
       break L530;
       break;
      }
      case 11:  {
       $arglist_current41 = HEAP32[$ap>>2]|0;
       $1069 = $arglist_current41;
       $1070 = ((0) + 4|0);
       $expanded162 = $1070;
       $expanded161 = (($expanded162) - 1)|0;
       $1071 = (($1069) + ($expanded161))|0;
       $1072 = ((0) + 4|0);
       $expanded166 = $1072;
       $expanded165 = (($expanded166) - 1)|0;
       $expanded164 = $expanded165 ^ -1;
       $1073 = $1071 & $expanded164;
       $1074 = $1073;
       $1075 = HEAP32[$1074>>2]|0;
       $arglist_next42 = ((($1074)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next42;
       $1076 = $1047;
       $1077 = $1076;
       HEAP32[$1077>>2] = $1075;
       $1078 = (($1076) + 4)|0;
       $1079 = $1078;
       HEAP32[$1079>>2] = 0;
       break L530;
       break;
      }
      case 12:  {
       $arglist_current44 = HEAP32[$ap>>2]|0;
       $1080 = $arglist_current44;
       $1081 = ((0) + 8|0);
       $expanded169 = $1081;
       $expanded168 = (($expanded169) - 1)|0;
       $1082 = (($1080) + ($expanded168))|0;
       $1083 = ((0) + 8|0);
       $expanded173 = $1083;
       $expanded172 = (($expanded173) - 1)|0;
       $expanded171 = $expanded172 ^ -1;
       $1084 = $1082 & $expanded171;
       $1085 = $1084;
       $1086 = $1085;
       $1087 = $1086;
       $1088 = HEAP32[$1087>>2]|0;
       $1089 = (($1086) + 4)|0;
       $1090 = $1089;
       $1091 = HEAP32[$1090>>2]|0;
       $arglist_next45 = ((($1085)) + 8|0);
       HEAP32[$ap>>2] = $arglist_next45;
       $1092 = $1047;
       $1093 = $1092;
       HEAP32[$1093>>2] = $1088;
       $1094 = (($1092) + 4)|0;
       $1095 = $1094;
       HEAP32[$1095>>2] = $1091;
       break L530;
       break;
      }
      case 13:  {
       $arglist_current47 = HEAP32[$ap>>2]|0;
       $1096 = $arglist_current47;
       $1097 = ((0) + 4|0);
       $expanded176 = $1097;
       $expanded175 = (($expanded176) - 1)|0;
       $1098 = (($1096) + ($expanded175))|0;
       $1099 = ((0) + 4|0);
       $expanded180 = $1099;
       $expanded179 = (($expanded180) - 1)|0;
       $expanded178 = $expanded179 ^ -1;
       $1100 = $1098 & $expanded178;
       $1101 = $1100;
       $1102 = HEAP32[$1101>>2]|0;
       $arglist_next48 = ((($1101)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next48;
       $1103 = $1102&65535;
       $1104 = $1103 << 16 >> 16;
       $1105 = ($1104|0)<(0);
       $1106 = $1105 << 31 >> 31;
       $1107 = $1047;
       $1108 = $1107;
       HEAP32[$1108>>2] = $1104;
       $1109 = (($1107) + 4)|0;
       $1110 = $1109;
       HEAP32[$1110>>2] = $1106;
       break L530;
       break;
      }
      case 14:  {
       $arglist_current50 = HEAP32[$ap>>2]|0;
       $1111 = $arglist_current50;
       $1112 = ((0) + 4|0);
       $expanded183 = $1112;
       $expanded182 = (($expanded183) - 1)|0;
       $1113 = (($1111) + ($expanded182))|0;
       $1114 = ((0) + 4|0);
       $expanded187 = $1114;
       $expanded186 = (($expanded187) - 1)|0;
       $expanded185 = $expanded186 ^ -1;
       $1115 = $1113 & $expanded185;
       $1116 = $1115;
       $1117 = HEAP32[$1116>>2]|0;
       $arglist_next51 = ((($1116)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next51;
       $$mask1$i = $1117 & 65535;
       $1118 = $1047;
       $1119 = $1118;
       HEAP32[$1119>>2] = $$mask1$i;
       $1120 = (($1118) + 4)|0;
       $1121 = $1120;
       HEAP32[$1121>>2] = 0;
       break L530;
       break;
      }
      case 15:  {
       $arglist_current53 = HEAP32[$ap>>2]|0;
       $1122 = $arglist_current53;
       $1123 = ((0) + 4|0);
       $expanded190 = $1123;
       $expanded189 = (($expanded190) - 1)|0;
       $1124 = (($1122) + ($expanded189))|0;
       $1125 = ((0) + 4|0);
       $expanded194 = $1125;
       $expanded193 = (($expanded194) - 1)|0;
       $expanded192 = $expanded193 ^ -1;
       $1126 = $1124 & $expanded192;
       $1127 = $1126;
       $1128 = HEAP32[$1127>>2]|0;
       $arglist_next54 = ((($1127)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next54;
       $1129 = $1128&255;
       $1130 = $1129 << 24 >> 24;
       $1131 = ($1130|0)<(0);
       $1132 = $1131 << 31 >> 31;
       $1133 = $1047;
       $1134 = $1133;
       HEAP32[$1134>>2] = $1130;
       $1135 = (($1133) + 4)|0;
       $1136 = $1135;
       HEAP32[$1136>>2] = $1132;
       break L530;
       break;
      }
      case 16:  {
       $arglist_current56 = HEAP32[$ap>>2]|0;
       $1137 = $arglist_current56;
       $1138 = ((0) + 4|0);
       $expanded197 = $1138;
       $expanded196 = (($expanded197) - 1)|0;
       $1139 = (($1137) + ($expanded196))|0;
       $1140 = ((0) + 4|0);
       $expanded201 = $1140;
       $expanded200 = (($expanded201) - 1)|0;
       $expanded199 = $expanded200 ^ -1;
       $1141 = $1139 & $expanded199;
       $1142 = $1141;
       $1143 = HEAP32[$1142>>2]|0;
       $arglist_next57 = ((($1142)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next57;
       $$mask$i = $1143 & 255;
       $1144 = $1047;
       $1145 = $1144;
       HEAP32[$1145>>2] = $$mask$i;
       $1146 = (($1144) + 4)|0;
       $1147 = $1146;
       HEAP32[$1147>>2] = 0;
       break L530;
       break;
      }
      case 17:  {
       $arglist_current59 = HEAP32[$ap>>2]|0;
       $1148 = $arglist_current59;
       $1149 = ((0) + 8|0);
       $expanded204 = $1149;
       $expanded203 = (($expanded204) - 1)|0;
       $1150 = (($1148) + ($expanded203))|0;
       $1151 = ((0) + 8|0);
       $expanded208 = $1151;
       $expanded207 = (($expanded208) - 1)|0;
       $expanded206 = $expanded207 ^ -1;
       $1152 = $1150 & $expanded206;
       $1153 = $1152;
       $1154 = +HEAPF64[$1153>>3];
       $arglist_next60 = ((($1153)) + 8|0);
       HEAP32[$ap>>2] = $arglist_next60;
       HEAPF64[$1047>>3] = $1154;
       break L530;
       break;
      }
      case 18:  {
       $arglist_current62 = HEAP32[$ap>>2]|0;
       $1155 = $arglist_current62;
       $1156 = ((0) + 8|0);
       $expanded211 = $1156;
       $expanded210 = (($expanded211) - 1)|0;
       $1157 = (($1155) + ($expanded210))|0;
       $1158 = ((0) + 8|0);
       $expanded215 = $1158;
       $expanded214 = (($expanded215) - 1)|0;
       $expanded213 = $expanded214 ^ -1;
       $1159 = $1157 & $expanded213;
       $1160 = $1159;
       $1161 = +HEAPF64[$1160>>3];
       $arglist_next63 = ((($1160)) + 8|0);
       HEAP32[$ap>>2] = $arglist_next63;
       HEAPF64[$1047>>3] = $1161;
       break L530;
       break;
      }
      default: {
       break L530;
      }
      }
     } while(0);
    }
   } while(0);
   $1162 = (($i$2162) + 1)|0;
   $1163 = ($1162|0)<(10);
   if ($1163) {
    $i$2162 = $1162;
   } else {
    $$0 = 1;
    label = 363;
    break;
   }
  }
  if ((label|0) == 363) {
   STACKTOP = sp;return ($$0|0);
  }
  $1046 = ($i$2162$lcssa|0)<(10);
  if ($1046) {
   $i$3160 = $i$2162$lcssa;
  } else {
   $$0 = 1;
   STACKTOP = sp;return ($$0|0);
  }
  while(1) {
   $1166 = (($nl_type) + ($i$3160<<2)|0);
   $1167 = HEAP32[$1166>>2]|0;
   $1168 = ($1167|0)==(0);
   $1164 = (($i$3160) + 1)|0;
   if (!($1168)) {
    $$0 = -1;
    label = 363;
    break;
   }
   $1165 = ($1164|0)<(10);
   if ($1165) {
    $i$3160 = $1164;
   } else {
    $$0 = 1;
    label = 363;
    break;
   }
  }
  if ((label|0) == 363) {
   STACKTOP = sp;return ($$0|0);
  }
 }
 else if ((label|0) == 363) {
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function _sn_write($f,$s,$l) {
 $f = $f|0;
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $l$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($f)) + 20|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $1;
 $5 = $3;
 $6 = (($4) - ($5))|0;
 $7 = ($6>>>0)>($l>>>0);
 $l$ = $7 ? $l : $6;
 _memcpy(($3|0),($s|0),($l$|0))|0;
 $8 = HEAP32[$2>>2]|0;
 $9 = (($8) + ($l$)|0);
 HEAP32[$2>>2] = $9;
 return ($l|0);
}
function __ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($this,$msg) {
 $this = $this|0;
 $msg = $msg|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (1896);
 $0 = ((($this)) + 4|0);
 $1 = HEAP8[$msg>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 $4 = ((($msg)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($msg)) + 1|0);
 $7 = $3 ? $6 : $5;
 __ZNSt3__118__libcpp_refstringC2EPKc($0,$7);
 return;
}
function __ZNSt13runtime_errorC2EPKc($this,$msg) {
 $this = $this|0;
 $msg = $msg|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (1896);
 $0 = ((($this)) + 4|0);
 __ZNSt3__118__libcpp_refstringC2EPKc($0,$msg);
 return;
}
function __ZNSt3__118__libcpp_refstringC2EPKc($this,$msg) {
 $this = $this|0;
 $msg = $msg|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strlen(($msg|0))|0);
 $1 = (($0) + 13)|0;
 $2 = (__Znwj($1)|0);
 HEAP32[$2>>2] = $0;
 $3 = ((($2)) + 4|0);
 HEAP32[$3>>2] = $0;
 $4 = ((($2)) + 8|0);
 HEAP32[$4>>2] = 0;
 $5 = ((($2)) + 12|0);
 $6 = (($0) + 1)|0;
 _memcpy(($5|0),($msg|0),($6|0))|0;
 HEAP32[$this>>2] = $5;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($this,$__str) {
 $this = $this|0;
 $__str = $__str|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$__str>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  ;HEAP32[$this>>2]=HEAP32[$__str>>2]|0;HEAP32[$this+4>>2]=HEAP32[$__str+4>>2]|0;HEAP32[$this+8>>2]=HEAP32[$__str+8>>2]|0;
 } else {
  $3 = ((($__str)) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = ((($__str)) + 4|0);
  $6 = HEAP32[$5>>2]|0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($this,$4,$6);
 }
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($this,$__s,$__sz) {
 $this = $this|0;
 $__s = $__s|0;
 $__sz = $__sz|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__sz>>>0)>(4294967279);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = ($__sz>>>0)<(11);
 if ($1) {
  $2 = $__sz << 1;
  $3 = $2&255;
  HEAP8[$this>>0] = $3;
  $4 = ((($this)) + 1|0);
  $__p$0 = $4;
 } else {
  $5 = (($__sz) + 16)|0;
  $6 = $5 & -16;
  $7 = (__Znwj($6)|0);
  $8 = ((($this)) + 8|0);
  HEAP32[$8>>2] = $7;
  $9 = $6 | 1;
  HEAP32[$this>>2] = $9;
  $10 = ((($this)) + 4|0);
  HEAP32[$10>>2] = $__sz;
  $__p$0 = $7;
 }
 _memcpy(($__p$0|0),($__s|0),($__sz|0))|0;
 $11 = (($__p$0) + ($__sz)|0);
 HEAP8[$11>>0] = 0;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($this,$__n,$__c) {
 $this = $this|0;
 $__n = $__n|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__n>>>0)>(4294967279);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = ($__n>>>0)<(11);
 if ($1) {
  $2 = $__n << 1;
  $3 = $2&255;
  HEAP8[$this>>0] = $3;
  $4 = ((($this)) + 1|0);
  $__p$0 = $4;
 } else {
  $5 = (($__n) + 16)|0;
  $6 = $5 & -16;
  $7 = (__Znwj($6)|0);
  $8 = ((($this)) + 8|0);
  HEAP32[$8>>2] = $7;
  $9 = $6 | 1;
  HEAP32[$this>>2] = $9;
  $10 = ((($this)) + 4|0);
  HEAP32[$10>>2] = $__n;
  $__p$0 = $7;
 }
 _memset(($__p$0|0),($__c|0),($__n|0))|0;
 $11 = (($__p$0) + ($__n)|0);
 HEAP8[$11>>0] = 0;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if (!($2)) {
  $3 = ((($this)) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  __ZdlPv($4);
 }
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($this,$__str) {
 $this = $this|0;
 $__str = $__str|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($this|0)==($__str|0);
 if (!($0)) {
  $1 = HEAP8[$__str>>0]|0;
  $2 = $1 & 1;
  $3 = ($2<<24>>24)==(0);
  $4 = ((($__str)) + 8|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = ((($__str)) + 1|0);
  $7 = $3 ? $6 : $5;
  $8 = ((($__str)) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = $1&255;
  $11 = $10 >>> 1;
  $12 = $3 ? $11 : $9;
  (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($this,$7,$12)|0);
 }
 return ($this|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strlen(($__s|0))|0);
 $1 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($this,$__s,$0)|0);
 return ($1|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $6 = 10;$9 = $0;
 } else {
  $3 = HEAP32[$this>>2]|0;
  $4 = $3 & -2;
  $phitmp$i = (($4) + -1)|0;
  $5 = $3&255;
  $6 = $phitmp$i;$9 = $5;
 }
 $7 = ($6>>>0)<($__n>>>0);
 $8 = $9 & 1;
 $10 = ($8<<24>>24)==(0);
 do {
  if ($7) {
   if ($10) {
    $24 = $9&255;
    $25 = $24 >>> 1;
    $27 = $25;
   } else {
    $22 = ((($this)) + 4|0);
    $23 = HEAP32[$22>>2]|0;
    $27 = $23;
   }
   $26 = (($__n) - ($6))|0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this,$6,$26,$27,0,$27,$__n,$__s);
  } else {
   if ($10) {
    $13 = ((($this)) + 1|0);
    $14 = $13;
   } else {
    $11 = ((($this)) + 8|0);
    $12 = HEAP32[$11>>2]|0;
    $14 = $12;
   }
   _memmove(($14|0),($__s|0),($__n|0))|0;
   $15 = (($14) + ($__n)|0);
   HEAP8[$15>>0] = 0;
   $16 = HEAP8[$this>>0]|0;
   $17 = $16 & 1;
   $18 = ($17<<24>>24)==(0);
   if ($18) {
    $20 = $__n << 1;
    $21 = $20&255;
    HEAP8[$this>>0] = $21;
    break;
   } else {
    $19 = ((($this)) + 4|0);
    HEAP32[$19>>2] = $__n;
    break;
   }
  }
 } while(0);
 return ($this|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($this,$__n,$__c) {
 $this = $this|0;
 $__n = $__n|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $5 = $0&255;
  $6 = $5 >>> 1;
  $7 = $6;
 } else {
  $3 = ((($this)) + 4|0);
  $4 = HEAP32[$3>>2]|0;
  $7 = $4;
 }
 $8 = ($7>>>0)<($__n>>>0);
 do {
  if ($8) {
   $9 = (($__n) - ($7))|0;
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEjc($this,$9,$__c)|0);
  } else {
   if ($2) {
    $14 = (((($this)) + 1|0) + ($__n)|0);
    HEAP8[$14>>0] = 0;
    $15 = $__n << 1;
    $16 = $15&255;
    HEAP8[$this>>0] = $16;
    break;
   } else {
    $10 = ((($this)) + 8|0);
    $11 = HEAP32[$10>>2]|0;
    $12 = (($11) + ($__n)|0);
    HEAP8[$12>>0] = 0;
    $13 = ((($this)) + 4|0);
    HEAP32[$13>>2] = $__n;
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEjc($this,$__n,$__c) {
 $this = $this|0;
 $__n = $__n|0;
 $__c = $__c|0;
 var $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__n|0)==(0);
 if (!($0)) {
  $1 = HEAP8[$this>>0]|0;
  $2 = $1 & 1;
  $3 = ($2<<24>>24)==(0);
  if ($3) {
   $16 = 10;$8 = $1;
  } else {
   $4 = HEAP32[$this>>2]|0;
   $5 = $4 & -2;
   $phitmp$i = (($5) + -1)|0;
   $6 = $4&255;
   $16 = $phitmp$i;$8 = $6;
  }
  $7 = $8 & 1;
  $9 = ($7<<24>>24)==(0);
  if ($9) {
   $12 = $8&255;
   $13 = $12 >>> 1;
   $15 = $13;
  } else {
   $10 = ((($this)) + 4|0);
   $11 = HEAP32[$10>>2]|0;
   $15 = $11;
  }
  $14 = (($16) - ($15))|0;
  $17 = ($14>>>0)<($__n>>>0);
  if ($17) {
   $18 = (($__n) - ($16))|0;
   $19 = (($18) + ($15))|0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this,$16,$19,$15,$15,0,0);
   $$pre = HEAP8[$this>>0]|0;
   $21 = $$pre;
  } else {
   $21 = $8;
  }
  $20 = $21 & 1;
  $22 = ($20<<24>>24)==(0);
  if ($22) {
   $25 = ((($this)) + 1|0);
   $27 = $25;
  } else {
   $23 = ((($this)) + 8|0);
   $24 = HEAP32[$23>>2]|0;
   $27 = $24;
  }
  $26 = (($27) + ($15)|0);
  _memset(($26|0),($__c|0),($__n|0))|0;
  $28 = (($15) + ($__n))|0;
  $29 = HEAP8[$this>>0]|0;
  $30 = $29 & 1;
  $31 = ($30<<24>>24)==(0);
  if ($31) {
   $33 = $28 << 1;
   $34 = $33&255;
   HEAP8[$this>>0] = $34;
  } else {
   $32 = ((($this)) + 4|0);
   HEAP32[$32>>2] = $28;
  }
  $35 = (($27) + ($28)|0);
  HEAP8[$35>>0] = 0;
 }
 return ($this|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($this,$__res_arg) {
 $this = $this|0;
 $__res_arg = $__res_arg|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_data$0 = 0, $__now_long$0$off0 = 0, $__p$0 = 0, $__was_long$0$off0 = 0, $phitmp$i = 0, $phitmp$i3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__res_arg>>>0)>(4294967279);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = HEAP8[$this>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $22 = 10;$8 = $1;
 } else {
  $4 = HEAP32[$this>>2]|0;
  $5 = $4 & -2;
  $phitmp$i = (($5) + -1)|0;
  $6 = $4&255;
  $22 = $phitmp$i;$8 = $6;
 }
 $7 = $8 & 1;
 $9 = ($7<<24>>24)==(0);
 if ($9) {
  $12 = $8&255;
  $13 = $12 >>> 1;
  $14 = $13;
 } else {
  $10 = ((($this)) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $14 = $11;
 }
 $15 = ($14>>>0)>($__res_arg>>>0);
 $16 = $15 ? $14 : $__res_arg;
 $17 = ($16>>>0)<(11);
 if ($17) {
  $20 = 10;
 } else {
  $18 = (($16) + 16)|0;
  $19 = $18 & -16;
  $phitmp$i3 = (($19) + -1)|0;
  $20 = $phitmp$i3;
 }
 $21 = ($20|0)==($22|0);
 do {
  if (!($21)) {
   $23 = ($20|0)==(10);
   do {
    if ($23) {
     $24 = ((($this)) + 1|0);
     $25 = ((($this)) + 8|0);
     $26 = HEAP32[$25>>2]|0;
     $__new_data$0 = $24;$__now_long$0$off0 = 0;$__p$0 = $26;$__was_long$0$off0 = 1;
    } else {
     $27 = (($20) + 1)|0;
     $28 = (__Znwj($27)|0);
     $29 = $8 & 1;
     $30 = ($29<<24>>24)==(0);
     if ($30) {
      $33 = ((($this)) + 1|0);
      $__new_data$0 = $28;$__now_long$0$off0 = 1;$__p$0 = $33;$__was_long$0$off0 = 0;
      break;
     } else {
      $31 = ((($this)) + 8|0);
      $32 = HEAP32[$31>>2]|0;
      $__new_data$0 = $28;$__now_long$0$off0 = 1;$__p$0 = $32;$__was_long$0$off0 = 1;
      break;
     }
    }
   } while(0);
   $34 = $8 & 1;
   $35 = ($34<<24>>24)==(0);
   if ($35) {
    $38 = $8&255;
    $39 = $38 >>> 1;
    $41 = $39;
   } else {
    $36 = ((($this)) + 4|0);
    $37 = HEAP32[$36>>2]|0;
    $41 = $37;
   }
   $40 = (($41) + 1)|0;
   _memcpy(($__new_data$0|0),($__p$0|0),($40|0))|0;
   if ($__was_long$0$off0) {
    __ZdlPv($__p$0);
   }
   if ($__now_long$0$off0) {
    $42 = (($20) + 1)|0;
    $43 = $42 | 1;
    HEAP32[$this>>2] = $43;
    $44 = ((($this)) + 4|0);
    HEAP32[$44>>2] = $14;
    $45 = ((($this)) + 8|0);
    HEAP32[$45>>2] = $__new_data$0;
    break;
   } else {
    $46 = $14 << 1;
    $47 = $46&255;
    HEAP8[$this>>0] = $47;
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$pn = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__cap$0 = 0, $__p$0 = 0, $__p$0$sum$pre$phiZZZ2D = 0, $__sz$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)!=(0);
 if ($2) {
  $5 = HEAP32[$this>>2]|0;
  $6 = $5 & -2;
  $7 = (($6) + -1)|0;
  $8 = ((($this)) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $__cap$0 = $7;$__sz$0 = $9;
 } else {
  $3 = $0&255;
  $4 = $3 >>> 1;
  $__cap$0 = 10;$__sz$0 = $4;
 }
 $10 = ($__sz$0|0)==($__cap$0|0);
 if ($10) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this,$__cap$0,1,$__cap$0,$__cap$0,0,0);
  $11 = HEAP8[$this>>0]|0;
  $12 = $11 & 1;
  $13 = ($12<<24>>24)==(0);
  if ($13) {
   label = 7;
  } else {
   label = 8;
  }
 } else {
  if ($2) {
   label = 8;
  } else {
   label = 7;
  }
 }
 if ((label|0) == 7) {
  $14 = ((($this)) + 1|0);
  $15 = $__sz$0 << 1;
  $16 = (($15) + 2)|0;
  $17 = $16&255;
  HEAP8[$this>>0] = $17;
  $$pre = (($__sz$0) + 1)|0;
  $$pn = $14;$__p$0$sum$pre$phiZZZ2D = $$pre;
 }
 else if ((label|0) == 8) {
  $18 = ((($this)) + 8|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = (($__sz$0) + 1)|0;
  $21 = ((($this)) + 4|0);
  HEAP32[$21>>2] = $20;
  $$pn = $19;$__p$0$sum$pre$phiZZZ2D = $20;
 }
 $__p$0 = (($$pn) + ($__sz$0)|0);
 HEAP8[$__p$0>>0] = $__c;
 $22 = (($$pn) + ($__p$0$sum$pre$phiZZZ2D)|0);
 HEAP8[$22>>0] = 0;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_del,$__n_add,$__p_new_stuff) {
 $this = $this|0;
 $__old_cap = $__old_cap|0;
 $__delta_cap = $__delta_cap|0;
 $__old_sz = $__old_sz|0;
 $__n_copy = $__n_copy|0;
 $__n_del = $__n_del|0;
 $__n_add = $__n_add|0;
 $__p_new_stuff = $__p_new_stuff|0;
 var $$sum = 0, $$sum1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (-18 - ($__old_cap))|0;
 $1 = ($0>>>0)<($__delta_cap>>>0);
 if ($1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $2 = HEAP8[$this>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = ((($this)) + 1|0);
  $20 = $7;
 } else {
  $5 = ((($this)) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $20 = $6;
 }
 $8 = ($__old_cap>>>0)<(2147483623);
 if ($8) {
  $9 = (($__delta_cap) + ($__old_cap))|0;
  $10 = $__old_cap << 1;
  $11 = ($9>>>0)<($10>>>0);
  $12 = $11 ? $10 : $9;
  $13 = ($12>>>0)<(11);
  $14 = (($12) + 16)|0;
  $15 = $14 & -16;
  $16 = $13 ? 11 : $15;
  $17 = $16;
 } else {
  $17 = -17;
 }
 $18 = (__Znwj($17)|0);
 $19 = ($__n_copy|0)==(0);
 if (!($19)) {
  _memcpy(($18|0),($20|0),($__n_copy|0))|0;
 }
 $21 = ($__n_add|0)==(0);
 if (!($21)) {
  $22 = (($18) + ($__n_copy)|0);
  _memcpy(($22|0),($__p_new_stuff|0),($__n_add|0))|0;
 }
 $23 = (($__old_sz) - ($__n_del))|0;
 $24 = ($23|0)==($__n_copy|0);
 if (!($24)) {
  $25 = (($23) - ($__n_copy))|0;
  $$sum = (($__n_add) + ($__n_copy))|0;
  $26 = (($18) + ($$sum)|0);
  $$sum1 = (($__n_del) + ($__n_copy))|0;
  $27 = (($20) + ($$sum1)|0);
  _memcpy(($26|0),($27|0),($25|0))|0;
 }
 $28 = ($__old_cap|0)==(10);
 if (!($28)) {
  __ZdlPv($20);
 }
 $29 = ((($this)) + 8|0);
 HEAP32[$29>>2] = $18;
 $30 = $17 | 1;
 HEAP32[$this>>2] = $30;
 $31 = (($23) + ($__n_add))|0;
 $32 = ((($this)) + 4|0);
 HEAP32[$32>>2] = $31;
 $33 = (($18) + ($31)|0);
 HEAP8[$33>>0] = 0;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_del,$__n_add) {
 $this = $this|0;
 $__old_cap = $__old_cap|0;
 $__delta_cap = $__delta_cap|0;
 $__old_sz = $__old_sz|0;
 $__n_copy = $__n_copy|0;
 $__n_del = $__n_del|0;
 $__n_add = $__n_add|0;
 var $$sum = 0, $$sum1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (-17 - ($__old_cap))|0;
 $1 = ($0>>>0)<($__delta_cap>>>0);
 if ($1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $2 = HEAP8[$this>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = ((($this)) + 1|0);
  $20 = $7;
 } else {
  $5 = ((($this)) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $20 = $6;
 }
 $8 = ($__old_cap>>>0)<(2147483623);
 if ($8) {
  $9 = (($__delta_cap) + ($__old_cap))|0;
  $10 = $__old_cap << 1;
  $11 = ($9>>>0)<($10>>>0);
  $12 = $11 ? $10 : $9;
  $13 = ($12>>>0)<(11);
  $14 = (($12) + 16)|0;
  $15 = $14 & -16;
  $16 = $13 ? 11 : $15;
  $17 = $16;
 } else {
  $17 = -17;
 }
 $18 = (__Znwj($17)|0);
 $19 = ($__n_copy|0)==(0);
 if (!($19)) {
  _memcpy(($18|0),($20|0),($__n_copy|0))|0;
 }
 $21 = (($__old_sz) - ($__n_del))|0;
 $22 = ($21|0)==($__n_copy|0);
 if (!($22)) {
  $23 = (($21) - ($__n_copy))|0;
  $$sum = (($__n_add) + ($__n_copy))|0;
  $24 = (($18) + ($$sum)|0);
  $$sum1 = (($__n_del) + ($__n_copy))|0;
  $25 = (($20) + ($$sum1)|0);
  _memcpy(($24|0),($25|0),($23|0))|0;
 }
 $26 = ($__old_cap|0)==(10);
 if (!($26)) {
  __ZdlPv($20);
 }
 $27 = ((($this)) + 8|0);
 HEAP32[$27>>2] = $18;
 $28 = $17 | 1;
 HEAP32[$this>>2] = $28;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($this,$__s,$__sz) {
 $this = $this|0;
 $__s = $__s|0;
 $__sz = $__sz|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__sz>>>0)>(1073741807);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = ($__sz>>>0)<(2);
 if ($1) {
  $2 = $__sz << 1;
  $3 = $2&255;
  HEAP8[$this>>0] = $3;
  $4 = ((($this)) + 4|0);
  $__p$0 = $4;
 } else {
  $5 = (($__sz) + 4)|0;
  $6 = $5 & -4;
  $7 = $6 << 2;
  $8 = (__Znwj($7)|0);
  $9 = ((($this)) + 8|0);
  HEAP32[$9>>2] = $8;
  $10 = $6 | 1;
  HEAP32[$this>>2] = $10;
  $11 = ((($this)) + 4|0);
  HEAP32[$11>>2] = $__sz;
  $__p$0 = $8;
 }
 (_wmemcpy($__p$0,$__s,$__sz)|0);
 $12 = (($__p$0) + ($__sz<<2)|0);
 HEAP32[$12>>2] = 0;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($this,$__n,$__c) {
 $this = $this|0;
 $__n = $__n|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__n>>>0)>(1073741807);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = ($__n>>>0)<(2);
 if ($1) {
  $2 = $__n << 1;
  $3 = $2&255;
  HEAP8[$this>>0] = $3;
  $4 = ((($this)) + 4|0);
  $__p$0 = $4;
 } else {
  $5 = (($__n) + 4)|0;
  $6 = $5 & -4;
  $7 = $6 << 2;
  $8 = (__Znwj($7)|0);
  $9 = ((($this)) + 8|0);
  HEAP32[$9>>2] = $8;
  $10 = $6 | 1;
  HEAP32[$this>>2] = $10;
  $11 = ((($this)) + 4|0);
  HEAP32[$11>>2] = $__n;
  $__p$0 = $8;
 }
 (_wmemset($__p$0,$__c,$__n)|0);
 $12 = (($__p$0) + ($__n<<2)|0);
 HEAP32[$12>>2] = 0;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if (!($2)) {
  $3 = ((($this)) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  __ZdlPv($4);
 }
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_wcslen($__s)|0);
 $1 = (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj($this,$__s,$0)|0);
 return ($1|0);
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $6 = 1;$9 = $0;
 } else {
  $3 = HEAP32[$this>>2]|0;
  $4 = $3 & -2;
  $phitmp$i = (($4) + -1)|0;
  $5 = $3&255;
  $6 = $phitmp$i;$9 = $5;
 }
 $7 = ($6>>>0)<($__n>>>0);
 $8 = $9 & 1;
 $10 = ($8<<24>>24)==(0);
 do {
  if ($7) {
   if ($10) {
    $24 = $9&255;
    $25 = $24 >>> 1;
    $27 = $25;
   } else {
    $22 = ((($this)) + 4|0);
    $23 = HEAP32[$22>>2]|0;
    $27 = $23;
   }
   $26 = (($__n) - ($6))|0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw($this,$6,$26,$27,0,$27,$__n,$__s);
  } else {
   if ($10) {
    $13 = ((($this)) + 4|0);
    $14 = $13;
   } else {
    $11 = ((($this)) + 8|0);
    $12 = HEAP32[$11>>2]|0;
    $14 = $12;
   }
   (_wmemmove($14,$__s,$__n)|0);
   $15 = (($14) + ($__n<<2)|0);
   HEAP32[$15>>2] = 0;
   $16 = HEAP8[$this>>0]|0;
   $17 = $16 & 1;
   $18 = ($17<<24>>24)==(0);
   if ($18) {
    $20 = $__n << 1;
    $21 = $20&255;
    HEAP8[$this>>0] = $21;
    break;
   } else {
    $19 = ((($this)) + 4|0);
    HEAP32[$19>>2] = $__n;
    break;
   }
  }
 } while(0);
 return ($this|0);
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($this,$__res_arg) {
 $this = $this|0;
 $__res_arg = $__res_arg|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_data$0 = 0, $__now_long$0$off0 = 0, $__p$0 = 0, $__was_long$0$off0 = 0, $phitmp$i = 0, $phitmp$i3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__res_arg>>>0)>(1073741807);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = HEAP8[$this>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $22 = 1;$8 = $1;
 } else {
  $4 = HEAP32[$this>>2]|0;
  $5 = $4 & -2;
  $phitmp$i = (($5) + -1)|0;
  $6 = $4&255;
  $22 = $phitmp$i;$8 = $6;
 }
 $7 = $8 & 1;
 $9 = ($7<<24>>24)==(0);
 if ($9) {
  $12 = $8&255;
  $13 = $12 >>> 1;
  $14 = $13;
 } else {
  $10 = ((($this)) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $14 = $11;
 }
 $15 = ($14>>>0)>($__res_arg>>>0);
 $16 = $15 ? $14 : $__res_arg;
 $17 = ($16>>>0)<(2);
 if ($17) {
  $20 = 1;
 } else {
  $18 = (($16) + 4)|0;
  $19 = $18 & -4;
  $phitmp$i3 = (($19) + -1)|0;
  $20 = $phitmp$i3;
 }
 $21 = ($20|0)==($22|0);
 do {
  if (!($21)) {
   $23 = ($20|0)==(1);
   do {
    if ($23) {
     $24 = ((($this)) + 4|0);
     $25 = ((($this)) + 8|0);
     $26 = HEAP32[$25>>2]|0;
     $__new_data$0 = $24;$__now_long$0$off0 = 0;$__p$0 = $26;$__was_long$0$off0 = 1;
    } else {
     $27 = $20 << 2;
     $28 = (($27) + 4)|0;
     $29 = (__Znwj($28)|0);
     $30 = $8 & 1;
     $31 = ($30<<24>>24)==(0);
     if ($31) {
      $34 = ((($this)) + 4|0);
      $__new_data$0 = $29;$__now_long$0$off0 = 1;$__p$0 = $34;$__was_long$0$off0 = 0;
      break;
     } else {
      $32 = ((($this)) + 8|0);
      $33 = HEAP32[$32>>2]|0;
      $__new_data$0 = $29;$__now_long$0$off0 = 1;$__p$0 = $33;$__was_long$0$off0 = 1;
      break;
     }
    }
   } while(0);
   $35 = $8 & 1;
   $36 = ($35<<24>>24)==(0);
   if ($36) {
    $39 = $8&255;
    $40 = $39 >>> 1;
    $42 = $40;
   } else {
    $37 = ((($this)) + 4|0);
    $38 = HEAP32[$37>>2]|0;
    $42 = $38;
   }
   $41 = (($42) + 1)|0;
   (_wmemcpy($__new_data$0,$__p$0,$41)|0);
   if ($__was_long$0$off0) {
    __ZdlPv($__p$0);
   }
   if ($__now_long$0$off0) {
    $43 = (($20) + 1)|0;
    $44 = $43 | 1;
    HEAP32[$this>>2] = $44;
    $45 = ((($this)) + 4|0);
    HEAP32[$45>>2] = $14;
    $46 = ((($this)) + 8|0);
    HEAP32[$46>>2] = $__new_data$0;
    break;
   } else {
    $47 = $14 << 1;
    $48 = $47&255;
    HEAP8[$this>>0] = $48;
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$pn = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__cap$0 = 0, $__p$0 = 0, $__p$0$sum$pre$phiZZZ2D = 0, $__sz$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)!=(0);
 if ($2) {
  $5 = HEAP32[$this>>2]|0;
  $6 = $5 & -2;
  $7 = (($6) + -1)|0;
  $8 = ((($this)) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $__cap$0 = $7;$__sz$0 = $9;
 } else {
  $3 = $0&255;
  $4 = $3 >>> 1;
  $__cap$0 = 1;$__sz$0 = $4;
 }
 $10 = ($__sz$0|0)==($__cap$0|0);
 if ($10) {
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this,$__cap$0,1,$__cap$0,$__cap$0,0,0);
  $11 = HEAP8[$this>>0]|0;
  $12 = $11 & 1;
  $13 = ($12<<24>>24)==(0);
  if ($13) {
   label = 7;
  } else {
   label = 8;
  }
 } else {
  if ($2) {
   label = 8;
  } else {
   label = 7;
  }
 }
 if ((label|0) == 7) {
  $14 = ((($this)) + 4|0);
  $15 = $__sz$0 << 1;
  $16 = (($15) + 2)|0;
  $17 = $16&255;
  HEAP8[$this>>0] = $17;
  $$pre = (($__sz$0) + 1)|0;
  $$pn = $14;$__p$0$sum$pre$phiZZZ2D = $$pre;
 }
 else if ((label|0) == 8) {
  $18 = ((($this)) + 8|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = (($__sz$0) + 1)|0;
  $21 = ((($this)) + 4|0);
  HEAP32[$21>>2] = $20;
  $$pn = $19;$__p$0$sum$pre$phiZZZ2D = $20;
 }
 $__p$0 = (($$pn) + ($__sz$0<<2)|0);
 HEAP32[$__p$0>>2] = $__c;
 $22 = (($$pn) + ($__p$0$sum$pre$phiZZZ2D<<2)|0);
 HEAP32[$22>>2] = 0;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_del,$__n_add,$__p_new_stuff) {
 $this = $this|0;
 $__old_cap = $__old_cap|0;
 $__delta_cap = $__delta_cap|0;
 $__old_sz = $__old_sz|0;
 $__n_copy = $__n_copy|0;
 $__n_del = $__n_del|0;
 $__n_add = $__n_add|0;
 $__p_new_stuff = $__p_new_stuff|0;
 var $$sum = 0, $$sum1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (1073741806 - ($__old_cap))|0;
 $1 = ($0>>>0)<($__delta_cap>>>0);
 if ($1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $2 = HEAP8[$this>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = ((($this)) + 4|0);
  $21 = $7;
 } else {
  $5 = ((($this)) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $21 = $6;
 }
 $8 = ($__old_cap>>>0)<(536870887);
 if ($8) {
  $9 = (($__delta_cap) + ($__old_cap))|0;
  $10 = $__old_cap << 1;
  $11 = ($9>>>0)<($10>>>0);
  $12 = $11 ? $10 : $9;
  $13 = ($12>>>0)<(2);
  $14 = (($12) + 4)|0;
  $15 = $14 & -4;
  $16 = $13 ? 2 : $15;
  $18 = $16;
 } else {
  $18 = 1073741807;
 }
 $17 = $18 << 2;
 $19 = (__Znwj($17)|0);
 $20 = ($__n_copy|0)==(0);
 if (!($20)) {
  (_wmemcpy($19,$21,$__n_copy)|0);
 }
 $22 = ($__n_add|0)==(0);
 if (!($22)) {
  $23 = (($19) + ($__n_copy<<2)|0);
  (_wmemcpy($23,$__p_new_stuff,$__n_add)|0);
 }
 $24 = (($__old_sz) - ($__n_del))|0;
 $25 = ($24|0)==($__n_copy|0);
 if (!($25)) {
  $26 = (($24) - ($__n_copy))|0;
  $$sum = (($__n_add) + ($__n_copy))|0;
  $27 = (($19) + ($$sum<<2)|0);
  $$sum1 = (($__n_del) + ($__n_copy))|0;
  $28 = (($21) + ($$sum1<<2)|0);
  (_wmemcpy($27,$28,$26)|0);
 }
 $29 = ($__old_cap|0)==(1);
 if (!($29)) {
  __ZdlPv($21);
 }
 $30 = ((($this)) + 8|0);
 HEAP32[$30>>2] = $19;
 $31 = $18 | 1;
 HEAP32[$this>>2] = $31;
 $32 = (($24) + ($__n_add))|0;
 $33 = ((($this)) + 4|0);
 HEAP32[$33>>2] = $32;
 $34 = (($19) + ($32<<2)|0);
 HEAP32[$34>>2] = 0;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_del,$__n_add) {
 $this = $this|0;
 $__old_cap = $__old_cap|0;
 $__delta_cap = $__delta_cap|0;
 $__old_sz = $__old_sz|0;
 $__n_copy = $__n_copy|0;
 $__n_del = $__n_del|0;
 $__n_add = $__n_add|0;
 var $$sum = 0, $$sum1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (1073741807 - ($__old_cap))|0;
 $1 = ($0>>>0)<($__delta_cap>>>0);
 if ($1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $2 = HEAP8[$this>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = ((($this)) + 4|0);
  $21 = $7;
 } else {
  $5 = ((($this)) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $21 = $6;
 }
 $8 = ($__old_cap>>>0)<(536870887);
 if ($8) {
  $9 = (($__delta_cap) + ($__old_cap))|0;
  $10 = $__old_cap << 1;
  $11 = ($9>>>0)<($10>>>0);
  $12 = $11 ? $10 : $9;
  $13 = ($12>>>0)<(2);
  $14 = (($12) + 4)|0;
  $15 = $14 & -4;
  $16 = $13 ? 2 : $15;
  $18 = $16;
 } else {
  $18 = 1073741807;
 }
 $17 = $18 << 2;
 $19 = (__Znwj($17)|0);
 $20 = ($__n_copy|0)==(0);
 if (!($20)) {
  (_wmemcpy($19,$21,$__n_copy)|0);
 }
 $22 = (($__old_sz) - ($__n_del))|0;
 $23 = ($22|0)==($__n_copy|0);
 if (!($23)) {
  $24 = (($22) - ($__n_copy))|0;
  $$sum = (($__n_add) + ($__n_copy))|0;
  $25 = (($19) + ($$sum<<2)|0);
  $$sum1 = (($__n_del) + ($__n_copy))|0;
  $26 = (($21) + ($$sum1<<2)|0);
  (_wmemcpy($25,$26,$24)|0);
 }
 $27 = ($__old_cap|0)==(1);
 if (!($27)) {
  __ZdlPv($21);
 }
 $28 = ((($this)) + 8|0);
 HEAP32[$28>>2] = $19;
 $29 = $18 | 1;
 HEAP32[$this>>2] = $29;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$04 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $__p$0$ph = 0, $__p$03 = 0, $scevgep2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__first;
 $1 = $__last;
 $2 = (($1) - ($0))|0;
 $3 = ($2>>>0)>(4294967279);
 if ($3) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $4 = ($2>>>0)<(11);
 if ($4) {
  $5 = $2 << 1;
  $6 = $5&255;
  HEAP8[$this>>0] = $6;
  $7 = ((($this)) + 1|0);
  $__p$0$ph = $7;
 } else {
  $8 = (($2) + 16)|0;
  $9 = $8 & -16;
  $10 = (__Znwj($9)|0);
  $11 = ((($this)) + 8|0);
  HEAP32[$11>>2] = $10;
  $12 = $9 | 1;
  HEAP32[$this>>2] = $12;
  $13 = ((($this)) + 4|0);
  HEAP32[$13>>2] = $2;
  $__p$0$ph = $10;
 }
 $14 = $__last;
 $15 = (($14) - ($0))|0;
 $16 = ($__first|0)==($__last|0);
 if (!($16)) {
  $$04 = $__first;$__p$03 = $__p$0$ph;
  while(1) {
   $17 = HEAP8[$$04>>0]|0;
   HEAP8[$__p$03>>0] = $17;
   $18 = ((($$04)) + 1|0);
   $19 = ((($__p$03)) + 1|0);
   $20 = ($18|0)==($__last|0);
   if ($20) {
    break;
   } else {
    $$04 = $18;$__p$03 = $19;
   }
  }
 }
 $scevgep2 = (($__p$0$ph) + ($15)|0);
 HEAP8[$scevgep2>>0] = 0;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$04 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0$ph = 0, $__p$03 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__first;
 $1 = $__last;
 $2 = (($1) - ($0))|0;
 $3 = $2 >> 2;
 $4 = ($3>>>0)>(1073741807);
 if ($4) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $5 = ($3>>>0)<(2);
 if ($5) {
  $6 = $2 >>> 1;
  $7 = $6&255;
  HEAP8[$this>>0] = $7;
  $8 = ((($this)) + 4|0);
  $__p$0$ph = $8;
 } else {
  $9 = (($3) + 4)|0;
  $10 = $9 & -4;
  $11 = $10 << 2;
  $12 = (__Znwj($11)|0);
  $13 = ((($this)) + 8|0);
  HEAP32[$13>>2] = $12;
  $14 = $10 | 1;
  HEAP32[$this>>2] = $14;
  $15 = ((($this)) + 4|0);
  HEAP32[$15>>2] = $3;
  $__p$0$ph = $12;
 }
 $16 = $__last;
 $17 = (($16) - ($0))|0;
 $18 = $17 >>> 2;
 $19 = ($__first|0)==($__last|0);
 if (!($19)) {
  $$04 = $__first;$__p$03 = $__p$0$ph;
  while(1) {
   $20 = HEAP32[$$04>>2]|0;
   HEAP32[$__p$03>>2] = $20;
   $21 = ((($$04)) + 4|0);
   $22 = ((($__p$03)) + 4|0);
   $23 = ($21|0)==($__last|0);
   if ($23) {
    break;
   } else {
    $$04 = $21;$__p$03 = $22;
   }
  }
 }
 $scevgep = (($__p$0$ph) + ($18<<2)|0);
 HEAP32[$scevgep>>2] = 0;
 return;
}
function __ZNSt3__18ios_base5clearEj($this,$state) {
 $this = $this|0;
 $state = $state|0;
 var $$state = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 24|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 $3 = $2&1;
 $$state = $3 | $state;
 $4 = ((($this)) + 16|0);
 HEAP32[$4>>2] = $$state;
 return;
}
function __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__18ios_baseD2Ev($this);
 return;
}
function __ZNSt3__18ios_baseD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (4584);
 __ZNSt3__18ios_base16__call_callbacksENS0_5eventE($this,0);
 $0 = ((($this)) + 28|0);
 __ZNSt3__16localeD2Ev($0);
 $1 = ((($this)) + 32|0);
 $2 = HEAP32[$1>>2]|0;
 _free($2);
 $3 = ((($this)) + 36|0);
 $4 = HEAP32[$3>>2]|0;
 _free($4);
 $5 = ((($this)) + 48|0);
 $6 = HEAP32[$5>>2]|0;
 _free($6);
 $7 = ((($this)) + 60|0);
 $8 = HEAP32[$7>>2]|0;
 _free($8);
 return;
}
function __ZNSt3__18ios_base16__call_callbacksENS0_5eventE($this,$ev) {
 $this = $this|0;
 $ev = $ev|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i$01 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 40|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 32|0);
 $3 = ((($this)) + 36|0);
 $4 = ($1|0)==(0);
 if (!($4)) {
  $i$01 = $1;
  while(1) {
   $5 = (($i$01) + -1)|0;
   $6 = HEAP32[$2>>2]|0;
   $7 = (($6) + ($5<<2)|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = HEAP32[$3>>2]|0;
   $10 = (($9) + ($5<<2)|0);
   $11 = HEAP32[$10>>2]|0;
   FUNCTION_TABLE_viii[$8 & 3]($ev,$this,$11);
   $12 = ($5|0)==(0);
   if ($12) {
    break;
   } else {
    $i$01 = $5;
   }
  }
 }
 return;
}
function __ZNKSt3__18ios_base6getlocEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $0 = sp;
 $1 = ((($this)) + 28|0);
 __ZNSt3__16localeC2ERKS0_($0,$1);
 $2 = HEAP32[$0>>2]|0;
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__18ios_base4initEPv($this,$sb) {
 $this = $this|0;
 $sb = $sb|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $not$ = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 24|0);
 HEAP32[$0>>2] = $sb;
 $not$ = ($sb|0)==(0|0);
 $1 = $not$&1;
 $2 = ((($this)) + 16|0);
 HEAP32[$2>>2] = $1;
 $3 = ((($this)) + 20|0);
 HEAP32[$3>>2] = 0;
 $4 = ((($this)) + 4|0);
 HEAP32[$4>>2] = 4098;
 $5 = ((($this)) + 12|0);
 HEAP32[$5>>2] = 0;
 $6 = ((($this)) + 8|0);
 HEAP32[$6>>2] = 6;
 $7 = ((($this)) + 32|0);
 $8 = ((($this)) + 28|0);
 dest=$7; stop=dest+40|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 __ZNSt3__16localeC2Ev($8);
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (4520);
 $0 = ((($this)) + 4|0);
 __ZNSt3__16localeD2Ev($0);
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (4520);
 $0 = ((($this)) + 4|0);
 __ZNSt3__16localeD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (4520);
 $0 = ((($this)) + 4|0);
 __ZNSt3__16localeC2Ev($0);
 $1 = ((($this)) + 8|0);
 ;HEAP32[$1>>2]=0|0;HEAP32[$1+4>>2]=0|0;HEAP32[$1+8>>2]=0|0;HEAP32[$1+12>>2]=0|0;HEAP32[$1+16>>2]=0|0;HEAP32[$1+20>>2]=0|0;
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPci($this,$0,$1) {
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ($this|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj($agg$result,$this,$0,$1,$2,$3) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = $agg$result;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = ((($agg$result)) + 8|0);
 $9 = $8;
 $10 = $9;
 HEAP32[$10>>2] = -1;
 $11 = (($9) + 4)|0;
 $12 = $11;
 HEAP32[$12>>2] = -1;
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj($agg$result,$this,$0,$1) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $agg$result;
 $3 = $2;
 HEAP32[$3>>2] = 0;
 $4 = (($2) + 4)|0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = ((($agg$result)) + 8|0);
 $7 = $6;
 $8 = $7;
 HEAP32[$8>>2] = -1;
 $9 = (($7) + 4)|0;
 $10 = $9;
 HEAP32[$10>>2] = -1;
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $$01 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0$lcssa = 0, $__i$02 = 0;
 var $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 $1 = ((($this)) + 16|0);
 $2 = ($__n|0)>(0);
 L1: do {
  if ($2) {
   $$01 = $__s;$__i$02 = 0;
   while(1) {
    $3 = HEAP32[$0>>2]|0;
    $4 = HEAP32[$1>>2]|0;
    $5 = ($3>>>0)<($4>>>0);
    if ($5) {
     $6 = ((($3)) + 1|0);
     HEAP32[$0>>2] = $6;
     $7 = HEAP8[$3>>0]|0;
     $storemerge = $7;
    } else {
     $8 = HEAP32[$this>>2]|0;
     $9 = ((($8)) + 40|0);
     $10 = HEAP32[$9>>2]|0;
     $11 = (FUNCTION_TABLE_ii[$10 & 63]($this)|0);
     $12 = ($11|0)==(-1);
     if ($12) {
      $__i$0$lcssa = $__i$02;
      break L1;
     }
     $13 = $11&255;
     $storemerge = $13;
    }
    HEAP8[$$01>>0] = $storemerge;
    $14 = (($__i$02) + 1)|0;
    $15 = ((($$01)) + 1|0);
    $16 = ($14|0)<($__n|0);
    if ($16) {
     $$01 = $15;$__i$02 = $14;
    } else {
     $__i$0$lcssa = $14;
     break;
    }
   }
  } else {
   $__i$0$lcssa = 0;
  }
 } while(0);
 return ($__i$0$lcssa|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9underflowEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -1;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv($this) {
 $this = $this|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + 36|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (FUNCTION_TABLE_ii[$2 & 63]($this)|0);
 $4 = ($3|0)==(-1);
 if ($4) {
  $$0 = -1;
 } else {
  $5 = ((($this)) + 12|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = ((($6)) + 1|0);
  HEAP32[$5>>2] = $7;
  $8 = HEAP8[$6>>0]|0;
  $9 = $8&255;
  $$0 = $9;
 }
 return ($$0|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -1;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $$02 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0$lcssa = 0;
 var $__i$01 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 24|0);
 $1 = ((($this)) + 28|0);
 $2 = ($__n|0)>(0);
 L1: do {
  if ($2) {
   $$02 = $__s;$__i$01 = 0;
   while(1) {
    $3 = HEAP32[$0>>2]|0;
    $4 = HEAP32[$1>>2]|0;
    $5 = ($3>>>0)<($4>>>0);
    if ($5) {
     $6 = HEAP8[$$02>>0]|0;
     $7 = ((($3)) + 1|0);
     HEAP32[$0>>2] = $7;
     HEAP8[$3>>0] = $6;
    } else {
     $8 = HEAP32[$this>>2]|0;
     $9 = ((($8)) + 52|0);
     $10 = HEAP32[$9>>2]|0;
     $11 = HEAP8[$$02>>0]|0;
     $12 = $11&255;
     $13 = (FUNCTION_TABLE_iii[$10 & 15]($this,$12)|0);
     $14 = ($13|0)==(-1);
     if ($14) {
      $__i$0$lcssa = $__i$01;
      break L1;
     }
    }
    $15 = ((($$02)) + 1|0);
    $16 = (($__i$01) + 1)|0;
    $17 = ($16|0)<($__n|0);
    if ($17) {
     $$02 = $15;$__i$01 = $16;
    } else {
     $__i$0$lcssa = $16;
     break;
    }
   }
  } else {
   $__i$0$lcssa = 0;
  }
 } while(0);
 return ($__i$0$lcssa|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8overflowEi($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -1;
}
function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 __ZNSt3__18ios_baseD2Ev($0);
 return;
}
function __ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $$sum = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $$sum = (($2) + 8)|0;
 $3 = (($this) + ($$sum)|0);
 __ZNSt3__18ios_baseD2Ev($3);
 return;
}
function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 __ZNSt3__18ios_baseD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($this) + ($2)|0);
 __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($3);
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($this) {
 $this = $this|0;
 var $$sum = 0, $$sum1 = 0, $$sum2 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__s = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__s = sp;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $$sum = (($2) + 24)|0;
 $3 = (($this) + ($$sum)|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0|0);
 if (!($5)) {
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($__s,$this);
  $6 = HEAP8[$__s>>0]|0;
  $7 = ($6<<24>>24)==(0);
  if (!($7)) {
   $8 = HEAP32[$this>>2]|0;
   $9 = ((($8)) + -12|0);
   $10 = HEAP32[$9>>2]|0;
   $$sum1 = (($10) + 24)|0;
   $11 = (($this) + ($$sum1)|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = HEAP32[$12>>2]|0;
   $14 = ((($13)) + 24|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = (FUNCTION_TABLE_ii[$15 & 63]($12)|0);
   $17 = ($16|0)==(-1);
   if ($17) {
    $18 = HEAP32[$this>>2]|0;
    $19 = ((($18)) + -12|0);
    $20 = HEAP32[$19>>2]|0;
    $$sum2 = (($20) + 16)|0;
    $21 = (($this) + ($$sum2)|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = $22 | 1;
    HEAP32[$21>>2] = $23;
   }
  }
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
 }
 STACKTOP = sp;return ($this|0);
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 __ZNSt3__18ios_baseD2Ev($0);
 return;
}
function __ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $$sum = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $$sum = (($2) + 4)|0;
 $3 = (($this) + ($$sum)|0);
 __ZNSt3__18ios_baseD2Ev($3);
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 __ZNSt3__18ios_baseD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($this) + ($2)|0);
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($3);
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($this,$__os) {
 $this = $this|0;
 $__os = $__os|0;
 var $$sum = 0, $$sum1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$this>>0] = 0;
 $0 = ((($this)) + 4|0);
 HEAP32[$0>>2] = $__os;
 $1 = HEAP32[$__os>>2]|0;
 $2 = ((($1)) + -12|0);
 $3 = HEAP32[$2>>2]|0;
 $$sum = (($3) + 16)|0;
 $4 = (($__os) + ($$sum)|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)==(0);
 if ($6) {
  $$sum1 = (($3) + 72)|0;
  $7 = (($__os) + ($$sum1)|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = ($8|0)==(0|0);
  if (!($9)) {
   (__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($8)|0);
  }
  HEAP8[$this>>0] = 1;
 }
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($this) {
 $this = $this|0;
 var $$sum = 0, $$sum1 = 0, $$sum2 = 0, $$sum3 = 0, $$sum4 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + -12|0);
 $4 = HEAP32[$3>>2]|0;
 $$sum = (($4) + 24)|0;
 $5 = (($1) + ($$sum)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)==(0|0);
 if (!($7)) {
  $$sum1 = (($4) + 16)|0;
  $8 = (($1) + ($$sum1)|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = ($9|0)==(0);
  if ($10) {
   $$sum2 = (($4) + 4)|0;
   $11 = (($1) + ($$sum2)|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = $12 & 8192;
   $14 = ($13|0)==(0);
   if (!($14)) {
    $15 = (__ZSt18uncaught_exceptionv()|0);
    if (!($15)) {
     $16 = HEAP32[$0>>2]|0;
     $17 = HEAP32[$16>>2]|0;
     $18 = ((($17)) + -12|0);
     $19 = HEAP32[$18>>2]|0;
     $$sum3 = (($19) + 24)|0;
     $20 = (($16) + ($$sum3)|0);
     $21 = HEAP32[$20>>2]|0;
     $22 = HEAP32[$21>>2]|0;
     $23 = ((($22)) + 24|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = (FUNCTION_TABLE_ii[$24 & 63]($21)|0);
     $26 = ($25|0)==(-1);
     if ($26) {
      $27 = HEAP32[$0>>2]|0;
      $28 = HEAP32[$27>>2]|0;
      $29 = ((($28)) + -12|0);
      $30 = HEAP32[$29>>2]|0;
      $$sum4 = (($30) + 16)|0;
      $31 = (($27) + ($$sum4)|0);
      $32 = HEAP32[$31>>2]|0;
      $33 = $32 | 1;
      HEAP32[$31>>2] = $33;
     }
    }
   }
  }
 }
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$byval_copy = 0, $$sum = 0, $$sum$i = 0, $$sum4 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $__s = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $$byval_copy = sp + 20|0;
 $0 = sp + 16|0;
 $__s = sp + 8|0;
 $1 = sp;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($__s,$this);
 $2 = HEAP8[$__s>>0]|0;
 $3 = ($2<<24>>24)==(0);
 if (!($3)) {
  $4 = HEAP32[$this>>2]|0;
  $5 = ((($4)) + -12|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (($this) + ($6)|0);
  $8 = (__ZNKSt3__18ios_base6getlocEv($7)|0);
  HEAP32[$1>>2] = $8;
  $9 = (__ZNKSt3__16locale9use_facetERNS0_2idE($1,5296)|0);
  __ZNSt3__16localeD2Ev($1);
  $10 = HEAP32[$this>>2]|0;
  $11 = ((($10)) + -12|0);
  $12 = HEAP32[$11>>2]|0;
  $$sum$i = (($12) + 24)|0;
  $13 = (($this) + ($$sum$i)|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = (($this) + ($12)|0);
  $$sum = (($12) + 76)|0;
  $16 = (($this) + ($$sum)|0);
  $17 = HEAP32[$16>>2]|0;
  $18 = ($17|0)==(-1);
  if ($18) {
   $19 = (__ZNKSt3__18ios_base6getlocEv($15)|0);
   HEAP32[$$byval_copy>>2] = $19;
   $20 = (__ZNKSt3__16locale9use_facetERNS0_2idE($$byval_copy,6160)|0);
   $21 = HEAP32[$20>>2]|0;
   $22 = ((($21)) + 28|0);
   $23 = HEAP32[$22>>2]|0;
   $24 = (FUNCTION_TABLE_iii[$23 & 15]($20,32)|0);
   __ZNSt3__16localeD2Ev($$byval_copy);
   $25 = $24 << 24 >> 24;
   HEAP32[$16>>2] = $25;
   $27 = $25;
  } else {
   $27 = $17;
  }
  $26 = $27&255;
  $28 = HEAP32[$9>>2]|0;
  $29 = ((($28)) + 16|0);
  $30 = HEAP32[$29>>2]|0;
  HEAP32[$0>>2] = $14;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
  $31 = (FUNCTION_TABLE_iiiiii[$30 & 31]($9,$$byval_copy,$15,$26,$__n)|0);
  $32 = ($31|0)==(0|0);
  if ($32) {
   $33 = HEAP32[$this>>2]|0;
   $34 = ((($33)) + -12|0);
   $35 = HEAP32[$34>>2]|0;
   $$sum4 = (($35) + 16)|0;
   $36 = (($this) + ($$sum4)|0);
   $37 = HEAP32[$36>>2]|0;
   $38 = $37 | 5;
   HEAP32[$36>>2] = $38;
  }
 }
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
 STACKTOP = sp;return ($this|0);
}
function __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev($this,$vtt) {
 $this = $this|0;
 $vtt = $vtt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 __ZNSt3__18ios_baseD2Ev($0);
 return;
}
function __ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + -8|0);
 $1 = ((($0)) + 12|0);
 __ZNSt3__18ios_baseD2Ev($1);
 return;
}
function __ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $$sum = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $$sum = (($2) + 12)|0;
 $3 = (($this) + ($$sum)|0);
 __ZNSt3__18ios_baseD2Ev($3);
 return;
}
function __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 __ZNSt3__18ios_baseD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + -8|0);
 __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($0);
 return;
}
function __ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($this) + ($2)|0);
 __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($3);
 return;
}
function __ZNSt3__18ios_baseD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__18ios_baseD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 | 1;
 HEAP32[$0>>2] = $2;
 return;
}
function __ZNSt3__17collateIcED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__16locale5facetD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17collateIcED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17collateIcE10do_compareEPKcS3_S3_S3_($this,$__lo1,$__hi1,$__lo2,$__hi2) {
 $this = $this|0;
 $__lo1 = $__lo1|0;
 $__hi1 = $__hi1|0;
 $__lo2 = $__lo2|0;
 $__hi2 = $__hi2|0;
 var $$0 = 0, $$018 = 0, $$02$lcssa = 0, $$027 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__lo2|0)==($__hi2|0);
 L1: do {
  if ($0) {
   $$02$lcssa = $__lo1;
   label = 6;
  } else {
   $$018 = $__lo2;$$027 = $__lo1;
   while(1) {
    $1 = ($$027|0)==($__hi1|0);
    if ($1) {
     $$0 = -1;
     break L1;
    }
    $2 = HEAP8[$$027>>0]|0;
    $3 = HEAP8[$$018>>0]|0;
    $4 = ($2<<24>>24)<($3<<24>>24);
    if ($4) {
     $$0 = -1;
     break L1;
    }
    $5 = ($3<<24>>24)<($2<<24>>24);
    if ($5) {
     $$0 = 1;
     break L1;
    }
    $6 = ((($$027)) + 1|0);
    $7 = ((($$018)) + 1|0);
    $8 = ($7|0)==($__hi2|0);
    if ($8) {
     $$02$lcssa = $6;
     label = 6;
     break;
    } else {
     $$018 = $7;$$027 = $6;
    }
   }
  }
 } while(0);
 if ((label|0) == 6) {
  $9 = ($$02$lcssa|0)!=($__hi1|0);
  $10 = $9&1;
  $$0 = $10;
 }
 return ($$0|0);
}
function __ZNKSt3__17collateIcE12do_transformEPKcS3_($agg$result,$this,$__lo,$__hi) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__lo = $__lo|0;
 $__hi = $__hi|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($agg$result,$__lo,$__hi);
 return;
}
function __ZNKSt3__17collateIcE7do_hashEPKcS3_($this,$__lo,$__hi) {
 $this = $this|0;
 $__lo = $__lo|0;
 $__hi = $__hi|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__h$0$lcssa = 0, $__h$02 = 0, $__p$01 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__lo|0)==($__hi|0);
 if ($0) {
  $__h$0$lcssa = 0;
 } else {
  $__h$02 = 0;$__p$01 = $__lo;
  while(1) {
   $1 = $__h$02 << 4;
   $2 = HEAP8[$__p$01>>0]|0;
   $3 = $2 << 24 >> 24;
   $4 = (($3) + ($1))|0;
   $5 = $4 & -268435456;
   $6 = $5 >>> 24;
   $7 = $6 | $5;
   $8 = $7 ^ $4;
   $9 = ((($__p$01)) + 1|0);
   $10 = ($9|0)==($__hi|0);
   if ($10) {
    $__h$0$lcssa = $8;
    break;
   } else {
    $__h$02 = $8;$__p$01 = $9;
   }
  }
 }
 return ($__h$0$lcssa|0);
}
function __ZNSt3__17collateIwED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17collateIwED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17collateIwE10do_compareEPKwS3_S3_S3_($this,$__lo1,$__hi1,$__lo2,$__hi2) {
 $this = $this|0;
 $__lo1 = $__lo1|0;
 $__hi1 = $__hi1|0;
 $__lo2 = $__lo2|0;
 $__hi2 = $__hi2|0;
 var $$0 = 0, $$018 = 0, $$02$lcssa = 0, $$027 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__lo2|0)==($__hi2|0);
 L1: do {
  if ($0) {
   $$02$lcssa = $__lo1;
   label = 6;
  } else {
   $$018 = $__lo2;$$027 = $__lo1;
   while(1) {
    $1 = ($$027|0)==($__hi1|0);
    if ($1) {
     $$0 = -1;
     break L1;
    }
    $2 = HEAP32[$$027>>2]|0;
    $3 = HEAP32[$$018>>2]|0;
    $4 = ($2|0)<($3|0);
    if ($4) {
     $$0 = -1;
     break L1;
    }
    $5 = ($3|0)<($2|0);
    if ($5) {
     $$0 = 1;
     break L1;
    }
    $6 = ((($$027)) + 4|0);
    $7 = ((($$018)) + 4|0);
    $8 = ($7|0)==($__hi2|0);
    if ($8) {
     $$02$lcssa = $6;
     label = 6;
     break;
    } else {
     $$018 = $7;$$027 = $6;
    }
   }
  }
 } while(0);
 if ((label|0) == 6) {
  $9 = ($$02$lcssa|0)!=($__hi1|0);
  $10 = $9&1;
  $$0 = $10;
 }
 return ($$0|0);
}
function __ZNKSt3__17collateIwE12do_transformEPKwS3_($agg$result,$this,$__lo,$__hi) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__lo = $__lo|0;
 $__hi = $__hi|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($agg$result,$__lo,$__hi);
 return;
}
function __ZNKSt3__17collateIwE7do_hashEPKwS3_($this,$__lo,$__hi) {
 $this = $this|0;
 $__lo = $__lo|0;
 $__hi = $__hi|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__h$0$lcssa = 0, $__h$02 = 0, $__p$01 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__lo|0)==($__hi|0);
 if ($0) {
  $__h$0$lcssa = 0;
 } else {
  $__h$02 = 0;$__p$01 = $__lo;
  while(1) {
   $1 = $__h$02 << 4;
   $2 = HEAP32[$__p$01>>2]|0;
   $3 = (($2) + ($1))|0;
   $4 = $3 & -268435456;
   $5 = $4 >>> 24;
   $6 = $5 | $4;
   $7 = $6 ^ $3;
   $8 = ((($__p$01)) + 4|0);
   $9 = ($8|0)==($__hi|0);
   if ($9) {
    $__h$0$lcssa = $7;
    break;
   } else {
    $__h$02 = $7;$__p$01 = $8;
   }
  }
 }
 return ($__h$0$lcssa|0);
}
function __ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy2 = 0, $$sroa$01$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__lv = 0, $__names = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $$byval_copy2 = sp + 56|0;
 $$byval_copy = sp + 52|0;
 $__lv = sp + 48|0;
 $0 = sp + 44|0;
 $1 = sp + 40|0;
 $2 = sp + 36|0;
 $3 = sp + 32|0;
 $__names = sp + 8|0;
 $4 = sp;
 $5 = ((($__iob)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $6 & 1;
 $8 = ($7|0)==(0);
 do {
  if ($8) {
   HEAP32[$__lv>>2] = -1;
   $9 = HEAP32[$this>>2]|0;
   $10 = ((($9)) + 16|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = HEAP32[$__b>>2]|0;
   HEAP32[$0>>2] = $12;
   $13 = HEAP32[$__e>>2]|0;
   HEAP32[$1>>2] = $13;
   ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
   ;HEAP32[$$byval_copy2>>2]=HEAP32[$1>>2]|0;
   $14 = (FUNCTION_TABLE_iiiiiii[$11 & 63]($this,$$byval_copy,$$byval_copy2,$__iob,$__err,$__lv)|0);
   HEAP32[$__b>>2] = $14;
   $15 = HEAP32[$__lv>>2]|0;
   if ((($15|0) == 1)) {
    HEAP8[$__v>>0] = 1;
    $$sroa$01$0 = $14;
    break;
   } else if ((($15|0) == 0)) {
    HEAP8[$__v>>0] = 0;
    $$sroa$01$0 = $14;
    break;
   } else {
    HEAP8[$__v>>0] = 1;
    HEAP32[$__err>>2] = 4;
    $$sroa$01$0 = $14;
    break;
   }
  } else {
   $16 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
   HEAP32[$2>>2] = $16;
   $17 = (__ZNKSt3__16locale9use_facetERNS0_2idE($2,6160)|0);
   (__ZNSt3__114__shared_count16__release_sharedEv($16)|0);
   $18 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
   HEAP32[$3>>2] = $18;
   $19 = (__ZNKSt3__16locale9use_facetERNS0_2idE($3,6304)|0);
   (__ZNSt3__114__shared_count16__release_sharedEv($18)|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($20)) + 24|0);
   $22 = HEAP32[$21>>2]|0;
   FUNCTION_TABLE_vii[$22 & 63]($__names,$19);
   $23 = ((($__names)) + 12|0);
   $24 = HEAP32[$19>>2]|0;
   $25 = ((($24)) + 28|0);
   $26 = HEAP32[$25>>2]|0;
   FUNCTION_TABLE_vii[$26 & 63]($23,$19);
   $27 = HEAP32[$__e>>2]|0;
   HEAP32[$4>>2] = $27;
   $28 = ((($__names)) + 24|0);
   ;HEAP32[$$byval_copy2>>2]=HEAP32[$4>>2]|0;
   $29 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy2,$__names,$28,$17,$__err,1)|0);
   $30 = ($29|0)==($__names|0);
   $31 = $30&1;
   HEAP8[$__v>>0] = $31;
   $32 = HEAP32[$__b>>2]|0;
   $33 = ((($__names)) + 12|0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($33);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__names);
   $$sroa$01$0 = $32;
  }
 } while(0);
 STACKTOP = sp;return ($$sroa$01$0|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i2$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0;
 var $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $phitmp$i = 0, $phitmp$i14 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0;
 $vararg_buffer = sp;
 $__atoms = sp + 208|0;
 $__grouping = sp + 196|0;
 $0 = sp + 192|0;
 $__buf = sp + 180|0;
 $__a_end = sp + 176|0;
 $__g = sp + 16|0;
 $__g_end = sp + 8|0;
 $__dc = sp + 4|0;
 HEAP32[$__grouping>>2] = 0;
 $1 = ((($__grouping)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__grouping)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $3;
 $4 = (__ZNKSt3__16locale9use_facetERNS0_2idE($0,6160)|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($5)) + 32|0);
 $7 = HEAP32[$6>>2]|0;
 (FUNCTION_TABLE_iiiii[$7 & 7]($4,5128,(5154),$__atoms)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($3)|0);
 HEAP32[$__buf>>2] = 0;
 $8 = ((($__buf)) + 4|0);
 HEAP32[$8>>2] = 0;
 $9 = ((($__buf)) + 8|0);
 HEAP32[$9>>2] = 0;
 $10 = HEAP8[$__buf>>0]|0;
 $11 = $10 & 1;
 $12 = ($11<<24>>24)==(0);
 if ($12) {
  $15 = 10;
 } else {
  $13 = HEAP32[$__buf>>2]|0;
  $14 = $13 & -2;
  $phitmp$i = (($14) + -1)|0;
  $15 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$15,0);
 $16 = HEAP8[$__buf>>0]|0;
 $17 = $16 & 1;
 $18 = ($17<<24>>24)==(0);
 $19 = ((($__buf)) + 8|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = ((($__buf)) + 1|0);
 $22 = $18 ? $21 : $20;
 HEAP32[$__a_end>>2] = $22;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $23 = ((($__buf)) + 4|0);
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i5 = $$pre;$__a$0 = $22;
 L4: while(1) {
  $24 = ($$pre$i$i$i5|0)==(0|0);
  if ($24) {
   $$pre$i$i$i = 0;
  } else {
   $25 = ((($$pre$i$i$i5)) + 12|0);
   $26 = HEAP32[$25>>2]|0;
   $27 = ((($$pre$i$i$i5)) + 16|0);
   $28 = HEAP32[$27>>2]|0;
   $29 = ($26|0)==($28|0);
   if ($29) {
    $30 = HEAP32[$$pre$i$i$i5>>2]|0;
    $31 = ((($30)) + 36|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = (FUNCTION_TABLE_ii[$32 & 63]($$pre$i$i$i5)|0);
    $34 = ($33|0)==(-1);
    if ($34) {
     HEAP32[$__b>>2] = 0;
     $$pre$i$i$i = 0;
    } else {
     $$pre$i$i$i = $$pre$i$i$i5;
    }
   } else {
    $$pre$i$i$i = $$pre$i$i$i5;
   }
  }
  $35 = ($$pre$i$i$i|0)==(0|0);
  $36 = HEAP32[$__e>>2]|0;
  $37 = ($36|0)==(0|0);
  do {
   if ($37) {
    label = 13;
   } else {
    $38 = ((($36)) + 12|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = ((($36)) + 16|0);
    $41 = HEAP32[$40>>2]|0;
    $42 = ($39|0)==($41|0);
    if (!($42)) {
     if ($35) {
      $131 = $36;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $36;$__a$2 = $__a$0;
      break L4;
     }
    }
    $43 = HEAP32[$36>>2]|0;
    $44 = ((($43)) + 36|0);
    $45 = HEAP32[$44>>2]|0;
    $46 = (FUNCTION_TABLE_ii[$45 & 63]($36)|0);
    $47 = ($46|0)==(-1);
    if ($47) {
     HEAP32[$__e>>2] = 0;
     label = 13;
     break;
    } else {
     if ($35) {
      $131 = $36;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $36;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 13) {
   label = 0;
   if ($35) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $131 = 0;
   }
  }
  $48 = HEAP32[$__a_end>>2]|0;
  $49 = HEAP8[$__buf>>0]|0;
  $50 = $49 & 1;
  $51 = ($50<<24>>24)==(0);
  $52 = HEAP32[$23>>2]|0;
  $53 = $49&255;
  $54 = $53 >>> 1;
  $55 = $51 ? $54 : $52;
  $56 = (($__a$0) + ($55)|0);
  $57 = ($48|0)==($56|0);
  if ($57) {
   $58 = $55 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$58,0);
   $59 = HEAP8[$__buf>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   if ($61) {
    $64 = 10;
   } else {
    $62 = HEAP32[$__buf>>2]|0;
    $63 = $62 & -2;
    $phitmp$i14 = (($63) + -1)|0;
    $64 = $phitmp$i14;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$64,0);
   $65 = HEAP8[$__buf>>0]|0;
   $66 = $65 & 1;
   $67 = ($66<<24>>24)==(0);
   $68 = HEAP32[$19>>2]|0;
   $69 = $67 ? $21 : $68;
   $70 = (($69) + ($55)|0);
   HEAP32[$__a_end>>2] = $70;
   $__a$1 = $69;
  } else {
   $__a$1 = $__a$0;
  }
  $71 = ((($$pre$i$i$i)) + 12|0);
  $72 = HEAP32[$71>>2]|0;
  $73 = ((($$pre$i$i$i)) + 16|0);
  $74 = HEAP32[$73>>2]|0;
  $75 = ($72|0)==($74|0);
  if ($75) {
   $76 = HEAP32[$$pre$i$i$i>>2]|0;
   $77 = ((($76)) + 36|0);
   $78 = HEAP32[$77>>2]|0;
   $79 = (FUNCTION_TABLE_ii[$78 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $79;
  } else {
   $80 = HEAP8[$72>>0]|0;
   $81 = $80&255;
   $$0$i$i = $81;
  }
  $82 = $$0$i$i&255;
  $83 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($82,16,$__a$1,$__a_end,$__dc,0,$__grouping,$__g,$__g_end,$__atoms)|0);
  $84 = ($83|0)==(0);
  if (!($84)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $131;$__a$2 = $__a$1;
   break;
  }
  $85 = HEAP32[$71>>2]|0;
  $86 = HEAP32[$73>>2]|0;
  $87 = ($85|0)==($86|0);
  if ($87) {
   $88 = HEAP32[$$pre$i$i$i>>2]|0;
   $89 = ((($88)) + 40|0);
   $90 = HEAP32[$89>>2]|0;
   (FUNCTION_TABLE_ii[$90 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $91 = ((($85)) + 1|0);
   HEAP32[$71>>2] = $91;
   $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $92 = HEAP32[$__a_end>>2]|0;
 $93 = $92;
 $94 = $__a$2;
 $95 = (($93) - ($94))|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$95,0);
 $96 = HEAP8[$__buf>>0]|0;
 $97 = $96 & 1;
 $98 = ($97<<24>>24)==(0);
 $99 = HEAP32[$19>>2]|0;
 $100 = $98 ? $21 : $99;
 $101 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $__v;
 $102 = (__ZNSt3__110__sscanf_lEPKcP15__locale_structS1_z($100,$101,9120,$vararg_buffer)|0);
 $103 = ($102|0)==(1);
 if (!($103)) {
  HEAP32[$__err>>2] = 4;
 }
 $104 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($104) {
  $115 = 0;
 } else {
  $105 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $106 = HEAP32[$105>>2]|0;
  $107 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $108 = HEAP32[$107>>2]|0;
  $109 = ($106|0)==($108|0);
  if ($109) {
   $110 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $111 = ((($110)) + 36|0);
   $112 = HEAP32[$111>>2]|0;
   $113 = (FUNCTION_TABLE_ii[$112 & 63]($$pre$i$i$i$lcssa)|0);
   $114 = ($113|0)==(-1);
   if ($114) {
    HEAP32[$__b>>2] = 0;
    $115 = 0;
   } else {
    $115 = $$pre$i$i$i$lcssa;
   }
  } else {
   $115 = $$pre$i$i$i$lcssa;
  }
 }
 $116 = ($115|0)==(0|0);
 $117 = ($$pre$i2$i$i|0)==(0|0);
 do {
  if ($117) {
   label = 37;
  } else {
   $118 = ((($$pre$i2$i$i)) + 12|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ((($$pre$i2$i$i)) + 16|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = ($119|0)==($121|0);
   if ($122) {
    $123 = HEAP32[$$pre$i2$i$i>>2]|0;
    $124 = ((($123)) + 36|0);
    $125 = HEAP32[$124>>2]|0;
    $126 = (FUNCTION_TABLE_ii[$125 & 63]($$pre$i2$i$i)|0);
    $127 = ($126|0)==(-1);
    if ($127) {
     HEAP32[$__e>>2] = 0;
     label = 37;
     break;
    }
   }
   if (!($116)) {
    label = 38;
   }
  }
 } while(0);
 if ((label|0) == 37) {
  if ($116) {
   label = 38;
  }
 }
 if ((label|0) == 38) {
  $128 = HEAP32[$__err>>2]|0;
  $129 = $128 | 2;
  HEAP32[$__err>>2] = $129;
 }
 $130 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($130|0);
}
function __ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($__ct,$__base,$__a,$__a_end,$__dc,$__thousands_sep,$__grouping,$__g,$__g_end,$__atoms) {
 $__ct = $__ct|0;
 $__base = $__base|0;
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__dc = $__dc|0;
 $__thousands_sep = $__thousands_sep|0;
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__atoms = $__atoms|0;
 var $$0 = 0, $$0$i2 = 0, $$0$lcssa$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__a_end>>2]|0;
 $1 = ($0|0)==($__a|0);
 do {
  if ($1) {
   $2 = ((($__atoms)) + 24|0);
   $3 = HEAP8[$2>>0]|0;
   $4 = ($3<<24>>24)==($__ct<<24>>24);
   if (!($4)) {
    $5 = ((($__atoms)) + 25|0);
    $6 = HEAP8[$5>>0]|0;
    $7 = ($6<<24>>24)==($__ct<<24>>24);
    if (!($7)) {
     label = 5;
     break;
    }
   }
   $8 = $4 ? 43 : 45;
   $9 = ((($__a)) + 1|0);
   HEAP32[$__a_end>>2] = $9;
   HEAP8[$__a>>0] = $8;
   HEAP32[$__dc>>2] = 0;
   $$0 = 0;
  } else {
   label = 5;
  }
 } while(0);
 do {
  if ((label|0) == 5) {
   $10 = HEAP8[$__grouping>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   $13 = ((($__grouping)) + 4|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = $10&255;
   $16 = $15 >>> 1;
   $17 = $12 ? $16 : $14;
   $18 = ($17|0)!=(0);
   $19 = ($__ct<<24>>24)==($__thousands_sep<<24>>24);
   $or$cond = $19 & $18;
   if ($or$cond) {
    $20 = HEAP32[$__g_end>>2]|0;
    $21 = $20;
    $22 = $__g;
    $23 = (($21) - ($22))|0;
    $24 = ($23|0)<(160);
    if (!($24)) {
     $$0 = 0;
     break;
    }
    $25 = HEAP32[$__dc>>2]|0;
    $26 = ((($20)) + 4|0);
    HEAP32[$__g_end>>2] = $26;
    HEAP32[$20>>2] = $25;
    HEAP32[$__dc>>2] = 0;
    $$0 = 0;
    break;
   }
   $27 = ((($__atoms)) + 26|0);
   $$0$i2 = $__atoms;
   while(1) {
    $28 = HEAP8[$$0$i2>>0]|0;
    $29 = ($28<<24>>24)==($__ct<<24>>24);
    if ($29) {
     $$0$lcssa$i = $$0$i2;
     break;
    }
    $30 = ((($$0$i2)) + 1|0);
    $31 = ($30|0)==($27|0);
    if ($31) {
     $$0$lcssa$i = $27;
     break;
    } else {
     $$0$i2 = $30;
    }
   }
   $32 = $$0$lcssa$i;
   $33 = $__atoms;
   $34 = (($32) - ($33))|0;
   $35 = ($34|0)>(23);
   if ($35) {
    $$0 = -1;
   } else {
    if ((($__base|0) == 16)) {
     $37 = ($34|0)<(22);
     if (!($37)) {
      if ($1) {
       $$0 = -1;
       break;
      }
      $38 = $0;
      $39 = $__a;
      $40 = (($38) - ($39))|0;
      $41 = ($40|0)<(3);
      if (!($41)) {
       $$0 = -1;
       break;
      }
      $42 = ((($0)) + -1|0);
      $43 = HEAP8[$42>>0]|0;
      $44 = ($43<<24>>24)==(48);
      if (!($44)) {
       $$0 = -1;
       break;
      }
      HEAP32[$__dc>>2] = 0;
      $45 = (5128 + ($34)|0);
      $46 = HEAP8[$45>>0]|0;
      $47 = ((($0)) + 1|0);
      HEAP32[$__a_end>>2] = $47;
      HEAP8[$0>>0] = $46;
      $$0 = 0;
      break;
     }
    } else if ((($__base|0) == 10) | (($__base|0) == 8)) {
     $36 = ($34|0)<($__base|0);
     if (!($36)) {
      $$0 = -1;
      break;
     }
    }
    $48 = (5128 + ($34)|0);
    $49 = HEAP8[$48>>0]|0;
    $50 = ((($0)) + 1|0);
    HEAP32[$__a_end>>2] = $50;
    HEAP8[$0>>0] = $49;
    $51 = HEAP32[$__dc>>2]|0;
    $52 = (($51) + 1)|0;
    HEAP32[$__dc>>2] = $52;
    $$0 = 0;
   }
  }
 } while(0);
 return ($$0|0);
}
function __ZNSt3__16__clocEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[9128>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((9128|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = (_newlocale(2147483647,(9136|0),(0|0))|0);
   HEAP32[9144>>2] = $4;
   ___cxa_guard_release((9128|0));
  }
 }
 $5 = HEAP32[9144>>2]|0;
 return ($5|0);
}
function __ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy2 = 0, $$sroa$01$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__lv = 0, $__names = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $$byval_copy2 = sp + 56|0;
 $$byval_copy = sp + 52|0;
 $__lv = sp + 48|0;
 $0 = sp + 44|0;
 $1 = sp + 40|0;
 $2 = sp + 36|0;
 $3 = sp + 32|0;
 $__names = sp + 8|0;
 $4 = sp;
 $5 = ((($__iob)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $6 & 1;
 $8 = ($7|0)==(0);
 do {
  if ($8) {
   HEAP32[$__lv>>2] = -1;
   $9 = HEAP32[$this>>2]|0;
   $10 = ((($9)) + 16|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = HEAP32[$__b>>2]|0;
   HEAP32[$0>>2] = $12;
   $13 = HEAP32[$__e>>2]|0;
   HEAP32[$1>>2] = $13;
   ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
   ;HEAP32[$$byval_copy2>>2]=HEAP32[$1>>2]|0;
   $14 = (FUNCTION_TABLE_iiiiiii[$11 & 63]($this,$$byval_copy,$$byval_copy2,$__iob,$__err,$__lv)|0);
   HEAP32[$__b>>2] = $14;
   $15 = HEAP32[$__lv>>2]|0;
   if ((($15|0) == 1)) {
    HEAP8[$__v>>0] = 1;
    $$sroa$01$0 = $14;
    break;
   } else if ((($15|0) == 0)) {
    HEAP8[$__v>>0] = 0;
    $$sroa$01$0 = $14;
    break;
   } else {
    HEAP8[$__v>>0] = 1;
    HEAP32[$__err>>2] = 4;
    $$sroa$01$0 = $14;
    break;
   }
  } else {
   $16 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
   HEAP32[$2>>2] = $16;
   $17 = (__ZNKSt3__16locale9use_facetERNS0_2idE($2,6152)|0);
   (__ZNSt3__114__shared_count16__release_sharedEv($16)|0);
   $18 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
   HEAP32[$3>>2] = $18;
   $19 = (__ZNKSt3__16locale9use_facetERNS0_2idE($3,6312)|0);
   (__ZNSt3__114__shared_count16__release_sharedEv($18)|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($20)) + 24|0);
   $22 = HEAP32[$21>>2]|0;
   FUNCTION_TABLE_vii[$22 & 63]($__names,$19);
   $23 = ((($__names)) + 12|0);
   $24 = HEAP32[$19>>2]|0;
   $25 = ((($24)) + 28|0);
   $26 = HEAP32[$25>>2]|0;
   FUNCTION_TABLE_vii[$26 & 63]($23,$19);
   $27 = HEAP32[$__e>>2]|0;
   HEAP32[$4>>2] = $27;
   $28 = ((($__names)) + 24|0);
   ;HEAP32[$$byval_copy2>>2]=HEAP32[$4>>2]|0;
   $29 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy2,$__names,$28,$17,$__err,1)|0);
   $30 = ($29|0)==($__names|0);
   $31 = $30&1;
   HEAP8[$__v>>0] = $31;
   $32 = HEAP32[$__b>>2]|0;
   $33 = ((($__names)) + 12|0);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($33);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__names);
   $$sroa$01$0 = $32;
  }
 } while(0);
 STACKTOP = sp;return ($$sroa$01$0|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i4 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i10 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i6 = 0, $$pre$i3$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $phitmp$i = 0, $phitmp$i18 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 320|0;
 $vararg_buffer = sp;
 $__atoms = sp + 208|0;
 $__grouping = sp + 196|0;
 $0 = sp + 192|0;
 $__buf = sp + 180|0;
 $__a_end = sp + 176|0;
 $__g = sp + 16|0;
 $__g_end = sp + 8|0;
 $__dc = sp + 4|0;
 HEAP32[$__grouping>>2] = 0;
 $1 = ((($__grouping)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__grouping)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $3;
 $4 = (__ZNKSt3__16locale9use_facetERNS0_2idE($0,6152)|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($5)) + 48|0);
 $7 = HEAP32[$6>>2]|0;
 (FUNCTION_TABLE_iiiii[$7 & 7]($4,5128,(5154),$__atoms)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($3)|0);
 HEAP32[$__buf>>2] = 0;
 $8 = ((($__buf)) + 4|0);
 HEAP32[$8>>2] = 0;
 $9 = ((($__buf)) + 8|0);
 HEAP32[$9>>2] = 0;
 $10 = HEAP8[$__buf>>0]|0;
 $11 = $10 & 1;
 $12 = ($11<<24>>24)==(0);
 if ($12) {
  $15 = 10;
 } else {
  $13 = HEAP32[$__buf>>2]|0;
  $14 = $13 & -2;
  $phitmp$i = (($14) + -1)|0;
  $15 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$15,0);
 $16 = HEAP8[$__buf>>0]|0;
 $17 = $16 & 1;
 $18 = ($17<<24>>24)==(0);
 $19 = ((($__buf)) + 8|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = ((($__buf)) + 1|0);
 $22 = $18 ? $21 : $20;
 HEAP32[$__a_end>>2] = $22;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $23 = ((($__buf)) + 4|0);
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i6 = $$pre;$__a$0 = $22;
 L4: while(1) {
  $24 = ($$pre$i$i$i6|0)==(0|0);
  if ($24) {
   $$pre$i$i$i = 0;$130 = 1;
  } else {
   $25 = ((($$pre$i$i$i6)) + 12|0);
   $26 = HEAP32[$25>>2]|0;
   $27 = ((($$pre$i$i$i6)) + 16|0);
   $28 = HEAP32[$27>>2]|0;
   $29 = ($26|0)==($28|0);
   if ($29) {
    $30 = HEAP32[$$pre$i$i$i6>>2]|0;
    $31 = ((($30)) + 36|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = (FUNCTION_TABLE_ii[$32 & 63]($$pre$i$i$i6)|0);
    $$0$i$i$i$i4 = $33;
   } else {
    $34 = HEAP32[$26>>2]|0;
    $$0$i$i$i$i4 = $34;
   }
   $35 = ($$0$i$i$i$i4|0)==(-1);
   if ($35) {
    HEAP32[$__b>>2] = 0;
    $$pre$i$i$i = 0;$130 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i6;$130 = 0;
   }
  }
  $36 = HEAP32[$__e>>2]|0;
  $37 = ($36|0)==(0|0);
  do {
   if ($37) {
    label = 16;
   } else {
    $38 = ((($36)) + 12|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = ((($36)) + 16|0);
    $41 = HEAP32[$40>>2]|0;
    $42 = ($39|0)==($41|0);
    if ($42) {
     $43 = HEAP32[$36>>2]|0;
     $44 = ((($43)) + 36|0);
     $45 = HEAP32[$44>>2]|0;
     $46 = (FUNCTION_TABLE_ii[$45 & 63]($36)|0);
     $$0$i$i1$i$i10 = $46;
    } else {
     $47 = HEAP32[$39>>2]|0;
     $$0$i$i1$i$i10 = $47;
    }
    $48 = ($$0$i$i1$i$i10|0)==(-1);
    if ($48) {
     HEAP32[$__e>>2] = 0;
     label = 16;
     break;
    } else {
     if ($130) {
      $131 = $36;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $36;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 16) {
   label = 0;
   if ($130) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $131 = 0;
   }
  }
  $49 = HEAP32[$__a_end>>2]|0;
  $50 = HEAP8[$__buf>>0]|0;
  $51 = $50 & 1;
  $52 = ($51<<24>>24)==(0);
  $53 = HEAP32[$23>>2]|0;
  $54 = $50&255;
  $55 = $54 >>> 1;
  $56 = $52 ? $55 : $53;
  $57 = (($__a$0) + ($56)|0);
  $58 = ($49|0)==($57|0);
  if ($58) {
   $59 = $56 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$59,0);
   $60 = HEAP8[$__buf>>0]|0;
   $61 = $60 & 1;
   $62 = ($61<<24>>24)==(0);
   if ($62) {
    $65 = 10;
   } else {
    $63 = HEAP32[$__buf>>2]|0;
    $64 = $63 & -2;
    $phitmp$i18 = (($64) + -1)|0;
    $65 = $phitmp$i18;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$65,0);
   $66 = HEAP8[$__buf>>0]|0;
   $67 = $66 & 1;
   $68 = ($67<<24>>24)==(0);
   $69 = HEAP32[$19>>2]|0;
   $70 = $68 ? $21 : $69;
   $71 = (($70) + ($56)|0);
   HEAP32[$__a_end>>2] = $71;
   $__a$1 = $70;
  } else {
   $__a$1 = $__a$0;
  }
  $72 = ((($$pre$i$i$i)) + 12|0);
  $73 = HEAP32[$72>>2]|0;
  $74 = ((($$pre$i$i$i)) + 16|0);
  $75 = HEAP32[$74>>2]|0;
  $76 = ($73|0)==($75|0);
  if ($76) {
   $77 = HEAP32[$$pre$i$i$i>>2]|0;
   $78 = ((($77)) + 36|0);
   $79 = HEAP32[$78>>2]|0;
   $80 = (FUNCTION_TABLE_ii[$79 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $80;
  } else {
   $81 = HEAP32[$73>>2]|0;
   $$0$i$i = $81;
  }
  $82 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,16,$__a$1,$__a_end,$__dc,0,$__grouping,$__g,$__g_end,$__atoms)|0);
  $83 = ($82|0)==(0);
  if (!($83)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $131;$__a$2 = $__a$1;
   break;
  }
  $84 = HEAP32[$72>>2]|0;
  $85 = HEAP32[$74>>2]|0;
  $86 = ($84|0)==($85|0);
  if ($86) {
   $87 = HEAP32[$$pre$i$i$i>>2]|0;
   $88 = ((($87)) + 40|0);
   $89 = HEAP32[$88>>2]|0;
   (FUNCTION_TABLE_ii[$89 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i6 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $90 = ((($84)) + 4|0);
   HEAP32[$72>>2] = $90;
   $$pre$i$i$i6 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $91 = HEAP32[$__a_end>>2]|0;
 $92 = $91;
 $93 = $__a$2;
 $94 = (($92) - ($93))|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$94,0);
 $95 = HEAP8[$__buf>>0]|0;
 $96 = $95 & 1;
 $97 = ($96<<24>>24)==(0);
 $98 = HEAP32[$19>>2]|0;
 $99 = $97 ? $21 : $98;
 $100 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $__v;
 $101 = (__ZNSt3__110__sscanf_lEPKcP15__locale_structS1_z($99,$100,9120,$vararg_buffer)|0);
 $102 = ($101|0)==(1);
 if (!($102)) {
  HEAP32[$__err>>2] = 4;
 }
 $103 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($103) {
  $132 = 1;
 } else {
  $104 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $105 = HEAP32[$104>>2]|0;
  $106 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $107 = HEAP32[$106>>2]|0;
  $108 = ($105|0)==($107|0);
  if ($108) {
   $109 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $110 = ((($109)) + 36|0);
   $111 = HEAP32[$110>>2]|0;
   $112 = (FUNCTION_TABLE_ii[$111 & 63]($$pre$i$i$i$lcssa)|0);
   $$0$i$i$i$i = $112;
  } else {
   $113 = HEAP32[$105>>2]|0;
   $$0$i$i$i$i = $113;
  }
  $114 = ($$0$i$i$i$i|0)==(-1);
  if ($114) {
   HEAP32[$__b>>2] = 0;
   $132 = 1;
  } else {
   $132 = 0;
  }
 }
 $115 = ($$pre$i3$i$i|0)==(0|0);
 do {
  if ($115) {
   label = 43;
  } else {
   $116 = ((($$pre$i3$i$i)) + 12|0);
   $117 = HEAP32[$116>>2]|0;
   $118 = ((($$pre$i3$i$i)) + 16|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ($117|0)==($119|0);
   if ($120) {
    $121 = HEAP32[$$pre$i3$i$i>>2]|0;
    $122 = ((($121)) + 36|0);
    $123 = HEAP32[$122>>2]|0;
    $124 = (FUNCTION_TABLE_ii[$123 & 63]($$pre$i3$i$i)|0);
    $$0$i$i1$i$i = $124;
   } else {
    $125 = HEAP32[$117>>2]|0;
    $$0$i$i1$i$i = $125;
   }
   $126 = ($$0$i$i1$i$i|0)==(-1);
   if ($126) {
    HEAP32[$__e>>2] = 0;
    label = 43;
    break;
   } else {
    if ($132) {
     break;
    } else {
     label = 45;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 43) {
  if ($132) {
   label = 45;
  }
 }
 if ((label|0) == 45) {
  $127 = HEAP32[$__err>>2]|0;
  $128 = $127 | 2;
  HEAP32[$__err>>2] = $128;
 }
 $129 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($129|0);
}
function __ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($__ct,$__base,$__a,$__a_end,$__dc,$__thousands_sep,$__grouping,$__g,$__g_end,$__atoms) {
 $__ct = $__ct|0;
 $__base = $__base|0;
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__dc = $__dc|0;
 $__thousands_sep = $__thousands_sep|0;
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__atoms = $__atoms|0;
 var $$0 = 0, $$0$i2 = 0, $$0$lcssa$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__a_end>>2]|0;
 $1 = ($0|0)==($__a|0);
 do {
  if ($1) {
   $2 = ((($__atoms)) + 96|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = ($3|0)==($__ct|0);
   if (!($4)) {
    $5 = ((($__atoms)) + 100|0);
    $6 = HEAP32[$5>>2]|0;
    $7 = ($6|0)==($__ct|0);
    if (!($7)) {
     label = 5;
     break;
    }
   }
   $8 = $4 ? 43 : 45;
   $9 = ((($__a)) + 1|0);
   HEAP32[$__a_end>>2] = $9;
   HEAP8[$__a>>0] = $8;
   HEAP32[$__dc>>2] = 0;
   $$0 = 0;
  } else {
   label = 5;
  }
 } while(0);
 do {
  if ((label|0) == 5) {
   $10 = HEAP8[$__grouping>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   $13 = ((($__grouping)) + 4|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = $10&255;
   $16 = $15 >>> 1;
   $17 = $12 ? $16 : $14;
   $18 = ($17|0)!=(0);
   $19 = ($__ct|0)==($__thousands_sep|0);
   $or$cond = $19 & $18;
   if ($or$cond) {
    $20 = HEAP32[$__g_end>>2]|0;
    $21 = $20;
    $22 = $__g;
    $23 = (($21) - ($22))|0;
    $24 = ($23|0)<(160);
    if (!($24)) {
     $$0 = 0;
     break;
    }
    $25 = HEAP32[$__dc>>2]|0;
    $26 = ((($20)) + 4|0);
    HEAP32[$__g_end>>2] = $26;
    HEAP32[$20>>2] = $25;
    HEAP32[$__dc>>2] = 0;
    $$0 = 0;
    break;
   }
   $27 = ((($__atoms)) + 104|0);
   $$0$i2 = $__atoms;
   while(1) {
    $28 = HEAP32[$$0$i2>>2]|0;
    $29 = ($28|0)==($__ct|0);
    if ($29) {
     $$0$lcssa$i = $$0$i2;
     break;
    }
    $30 = ((($$0$i2)) + 4|0);
    $31 = ($30|0)==($27|0);
    if ($31) {
     $$0$lcssa$i = $27;
     break;
    } else {
     $$0$i2 = $30;
    }
   }
   $32 = $$0$lcssa$i;
   $33 = $__atoms;
   $34 = (($32) - ($33))|0;
   $35 = $34 >> 2;
   $36 = ($34|0)>(92);
   if ($36) {
    $$0 = -1;
   } else {
    if ((($__base|0) == 16)) {
     $38 = ($34|0)<(88);
     if (!($38)) {
      if ($1) {
       $$0 = -1;
       break;
      }
      $39 = $0;
      $40 = $__a;
      $41 = (($39) - ($40))|0;
      $42 = ($41|0)<(3);
      if (!($42)) {
       $$0 = -1;
       break;
      }
      $43 = ((($0)) + -1|0);
      $44 = HEAP8[$43>>0]|0;
      $45 = ($44<<24>>24)==(48);
      if (!($45)) {
       $$0 = -1;
       break;
      }
      HEAP32[$__dc>>2] = 0;
      $46 = (5128 + ($35)|0);
      $47 = HEAP8[$46>>0]|0;
      $48 = ((($0)) + 1|0);
      HEAP32[$__a_end>>2] = $48;
      HEAP8[$0>>0] = $47;
      $$0 = 0;
      break;
     }
    } else if ((($__base|0) == 10) | (($__base|0) == 8)) {
     $37 = ($35|0)<($__base|0);
     if (!($37)) {
      $$0 = -1;
      break;
     }
    }
    $49 = (5128 + ($35)|0);
    $50 = HEAP8[$49>>0]|0;
    $51 = ((($0)) + 1|0);
    HEAP32[$__a_end>>2] = $51;
    HEAP8[$0>>0] = $50;
    $52 = HEAP32[$__dc>>2]|0;
    $53 = (($52) + 1)|0;
    HEAP32[$__dc>>2] = $53;
    $$0 = 0;
   }
  }
 } while(0);
 return ($$0|0);
}
function __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($agg$result,$__iob,$__atoms,$__thousands_sep) {
 $agg$result = $agg$result|0;
 $__iob = $__iob|0;
 $__atoms = $__atoms|0;
 $__thousands_sep = $__thousands_sep|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__loc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__loc = sp;
 $0 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $0;
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6160)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 32|0);
 $4 = HEAP32[$3>>2]|0;
 (FUNCTION_TABLE_iiiii[$4 & 7]($1,5128,(5154),$__atoms)|0);
 $5 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6304)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 16|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (FUNCTION_TABLE_ii[$8 & 63]($5)|0);
 HEAP8[$__thousands_sep>>0] = $9;
 $10 = HEAP32[$5>>2]|0;
 $11 = ((($10)) + 20|0);
 $12 = HEAP32[$11>>2]|0;
 FUNCTION_TABLE_vii[$12 & 63]($agg$result,$5);
 (__ZNSt3__114__shared_count16__release_sharedEv($0)|0);
 STACKTOP = sp;return;
}
function __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($agg$result,$__iob,$__atoms,$__decimal_point,$__thousands_sep) {
 $agg$result = $agg$result|0;
 $__iob = $__iob|0;
 $__atoms = $__atoms|0;
 $__decimal_point = $__decimal_point|0;
 $__thousands_sep = $__thousands_sep|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__loc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__loc = sp;
 $0 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $0;
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6160)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 32|0);
 $4 = HEAP32[$3>>2]|0;
 (FUNCTION_TABLE_iiiii[$4 & 7]($1,5128,(5160),$__atoms)|0);
 $5 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6304)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 12|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (FUNCTION_TABLE_ii[$8 & 63]($5)|0);
 HEAP8[$__decimal_point>>0] = $9;
 $10 = HEAP32[$5>>2]|0;
 $11 = ((($10)) + 16|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (FUNCTION_TABLE_ii[$12 & 63]($5)|0);
 HEAP8[$__thousands_sep>>0] = $13;
 $14 = HEAP32[$5>>2]|0;
 $15 = ((($14)) + 20|0);
 $16 = HEAP32[$15>>2]|0;
 FUNCTION_TABLE_vii[$16 & 63]($agg$result,$5);
 (__ZNSt3__114__shared_count16__release_sharedEv($0)|0);
 STACKTOP = sp;return;
}
function __ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($__ct,$__in_units,$__exp,$__a,$__a_end,$__decimal_point,$__thousands_sep,$__grouping,$__g,$__g_end,$__dc,$__atoms) {
 $__ct = $__ct|0;
 $__in_units = $__in_units|0;
 $__exp = $__exp|0;
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__decimal_point = $__decimal_point|0;
 $__thousands_sep = $__thousands_sep|0;
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__dc = $__dc|0;
 $__atoms = $__atoms|0;
 var $$0 = 0, $$0$i3 = 0, $$0$lcssa$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__ct<<24>>24)==($__decimal_point<<24>>24);
 do {
  if ($0) {
   $1 = HEAP8[$__in_units>>0]|0;
   $2 = ($1<<24>>24)==(0);
   if ($2) {
    $$0 = -1;
   } else {
    HEAP8[$__in_units>>0] = 0;
    $3 = HEAP32[$__a_end>>2]|0;
    $4 = ((($3)) + 1|0);
    HEAP32[$__a_end>>2] = $4;
    HEAP8[$3>>0] = 46;
    $5 = HEAP8[$__grouping>>0]|0;
    $6 = $5 & 1;
    $7 = ($6<<24>>24)==(0);
    $8 = ((($__grouping)) + 4|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = $5&255;
    $11 = $10 >>> 1;
    $12 = $7 ? $11 : $9;
    $13 = ($12|0)==(0);
    if ($13) {
     $$0 = 0;
    } else {
     $14 = HEAP32[$__g_end>>2]|0;
     $15 = $14;
     $16 = $__g;
     $17 = (($15) - ($16))|0;
     $18 = ($17|0)<(160);
     if ($18) {
      $19 = HEAP32[$__dc>>2]|0;
      $20 = ((($14)) + 4|0);
      HEAP32[$__g_end>>2] = $20;
      HEAP32[$14>>2] = $19;
      $$0 = 0;
     } else {
      $$0 = 0;
     }
    }
   }
  } else {
   $21 = ($__ct<<24>>24)==($__thousands_sep<<24>>24);
   if ($21) {
    $22 = HEAP8[$__grouping>>0]|0;
    $23 = $22 & 1;
    $24 = ($23<<24>>24)==(0);
    $25 = ((($__grouping)) + 4|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = $22&255;
    $28 = $27 >>> 1;
    $29 = $24 ? $28 : $26;
    $30 = ($29|0)==(0);
    if (!($30)) {
     $31 = HEAP8[$__in_units>>0]|0;
     $32 = ($31<<24>>24)==(0);
     if ($32) {
      $$0 = -1;
      break;
     }
     $33 = HEAP32[$__g_end>>2]|0;
     $34 = $33;
     $35 = $__g;
     $36 = (($34) - ($35))|0;
     $37 = ($36|0)<(160);
     if (!($37)) {
      $$0 = 0;
      break;
     }
     $38 = HEAP32[$__dc>>2]|0;
     $39 = ((($33)) + 4|0);
     HEAP32[$__g_end>>2] = $39;
     HEAP32[$33>>2] = $38;
     HEAP32[$__dc>>2] = 0;
     $$0 = 0;
     break;
    }
   }
   $40 = ((($__atoms)) + 32|0);
   $$0$i3 = $__atoms;
   while(1) {
    $41 = HEAP8[$$0$i3>>0]|0;
    $42 = ($41<<24>>24)==($__ct<<24>>24);
    if ($42) {
     $$0$lcssa$i = $$0$i3;
     break;
    }
    $43 = ((($$0$i3)) + 1|0);
    $44 = ($43|0)==($40|0);
    if ($44) {
     $$0$lcssa$i = $40;
     break;
    } else {
     $$0$i3 = $43;
    }
   }
   $45 = $$0$lcssa$i;
   $46 = $__atoms;
   $47 = (($45) - ($46))|0;
   $48 = ($47|0)>(31);
   if ($48) {
    $$0 = -1;
   } else {
    $49 = (5128 + ($47)|0);
    $50 = HEAP8[$49>>0]|0;
    if ((($47|0) == 24) | (($47|0) == 25)) {
     $51 = HEAP32[$__a_end>>2]|0;
     $52 = ($51|0)==($__a|0);
     if (!($52)) {
      $53 = ((($51)) + -1|0);
      $54 = HEAP8[$53>>0]|0;
      $55 = $54&255;
      $56 = $55 & 95;
      $57 = HEAP8[$__exp>>0]|0;
      $58 = $57&255;
      $59 = $58 & 127;
      $60 = ($56|0)==($59|0);
      if (!($60)) {
       $$0 = -1;
       break;
      }
     }
     $61 = ((($51)) + 1|0);
     HEAP32[$__a_end>>2] = $61;
     HEAP8[$51>>0] = $50;
     $$0 = 0;
     break;
    } else if ((($47|0) == 23) | (($47|0) == 22)) {
     HEAP8[$__exp>>0] = 80;
     $62 = HEAP32[$__a_end>>2]|0;
     $63 = ((($62)) + 1|0);
     HEAP32[$__a_end>>2] = $63;
     HEAP8[$62>>0] = $50;
     $$0 = 0;
     break;
    } else {
     $64 = $50&255;
     $65 = $64 & 95;
     $66 = HEAP8[$__exp>>0]|0;
     $67 = $66 << 24 >> 24;
     $68 = ($65|0)==($67|0);
     if ($68) {
      $69 = $65 | 128;
      $70 = $69&255;
      HEAP8[$__exp>>0] = $70;
      $71 = HEAP8[$__in_units>>0]|0;
      $72 = ($71<<24>>24)==(0);
      if (!($72)) {
       HEAP8[$__in_units>>0] = 0;
       $73 = HEAP8[$__grouping>>0]|0;
       $74 = $73 & 1;
       $75 = ($74<<24>>24)==(0);
       $76 = ((($__grouping)) + 4|0);
       $77 = HEAP32[$76>>2]|0;
       $78 = $73&255;
       $79 = $78 >>> 1;
       $80 = $75 ? $79 : $77;
       $81 = ($80|0)==(0);
       if (!($81)) {
        $82 = HEAP32[$__g_end>>2]|0;
        $83 = $82;
        $84 = $__g;
        $85 = (($83) - ($84))|0;
        $86 = ($85|0)<(160);
        if ($86) {
         $87 = HEAP32[$__dc>>2]|0;
         $88 = ((($82)) + 4|0);
         HEAP32[$__g_end>>2] = $88;
         HEAP32[$82>>2] = $87;
        }
       }
      }
     }
     $89 = HEAP32[$__a_end>>2]|0;
     $90 = ((($89)) + 1|0);
     HEAP32[$__a_end>>2] = $90;
     HEAP8[$89>>0] = $50;
     $91 = ($47|0)>(21);
     if ($91) {
      $$0 = 0;
      break;
     }
     $92 = HEAP32[$__dc>>2]|0;
     $93 = (($92) + 1)|0;
     HEAP32[$__dc>>2] = $93;
     $$0 = 0;
     break;
    }
   }
  }
 } while(0);
 return ($$0|0);
}
function __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($agg$result,$__iob,$__atoms,$__thousands_sep) {
 $agg$result = $agg$result|0;
 $__iob = $__iob|0;
 $__atoms = $__atoms|0;
 $__thousands_sep = $__thousands_sep|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__loc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__loc = sp;
 $0 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $0;
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6152)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 48|0);
 $4 = HEAP32[$3>>2]|0;
 (FUNCTION_TABLE_iiiii[$4 & 7]($1,5128,(5154),$__atoms)|0);
 $5 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6312)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 16|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (FUNCTION_TABLE_ii[$8 & 63]($5)|0);
 HEAP32[$__thousands_sep>>2] = $9;
 $10 = HEAP32[$5>>2]|0;
 $11 = ((($10)) + 20|0);
 $12 = HEAP32[$11>>2]|0;
 FUNCTION_TABLE_vii[$12 & 63]($agg$result,$5);
 (__ZNSt3__114__shared_count16__release_sharedEv($0)|0);
 STACKTOP = sp;return;
}
function __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($agg$result,$__iob,$__atoms,$__decimal_point,$__thousands_sep) {
 $agg$result = $agg$result|0;
 $__iob = $__iob|0;
 $__atoms = $__atoms|0;
 $__decimal_point = $__decimal_point|0;
 $__thousands_sep = $__thousands_sep|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__loc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__loc = sp;
 $0 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $0;
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6152)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 48|0);
 $4 = HEAP32[$3>>2]|0;
 (FUNCTION_TABLE_iiiii[$4 & 7]($1,5128,(5160),$__atoms)|0);
 $5 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6312)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 12|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (FUNCTION_TABLE_ii[$8 & 63]($5)|0);
 HEAP32[$__decimal_point>>2] = $9;
 $10 = HEAP32[$5>>2]|0;
 $11 = ((($10)) + 16|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (FUNCTION_TABLE_ii[$12 & 63]($5)|0);
 HEAP32[$__thousands_sep>>2] = $13;
 $14 = HEAP32[$5>>2]|0;
 $15 = ((($14)) + 20|0);
 $16 = HEAP32[$15>>2]|0;
 FUNCTION_TABLE_vii[$16 & 63]($agg$result,$5);
 (__ZNSt3__114__shared_count16__release_sharedEv($0)|0);
 STACKTOP = sp;return;
}
function __ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($__ct,$__in_units,$__exp,$__a,$__a_end,$__decimal_point,$__thousands_sep,$__grouping,$__g,$__g_end,$__dc,$__atoms) {
 $__ct = $__ct|0;
 $__in_units = $__in_units|0;
 $__exp = $__exp|0;
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__decimal_point = $__decimal_point|0;
 $__thousands_sep = $__thousands_sep|0;
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__dc = $__dc|0;
 $__atoms = $__atoms|0;
 var $$0 = 0, $$0$i3 = 0, $$0$lcssa$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__ct|0)==($__decimal_point|0);
 do {
  if ($0) {
   $1 = HEAP8[$__in_units>>0]|0;
   $2 = ($1<<24>>24)==(0);
   if ($2) {
    $$0 = -1;
   } else {
    HEAP8[$__in_units>>0] = 0;
    $3 = HEAP32[$__a_end>>2]|0;
    $4 = ((($3)) + 1|0);
    HEAP32[$__a_end>>2] = $4;
    HEAP8[$3>>0] = 46;
    $5 = HEAP8[$__grouping>>0]|0;
    $6 = $5 & 1;
    $7 = ($6<<24>>24)==(0);
    $8 = ((($__grouping)) + 4|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = $5&255;
    $11 = $10 >>> 1;
    $12 = $7 ? $11 : $9;
    $13 = ($12|0)==(0);
    if ($13) {
     $$0 = 0;
    } else {
     $14 = HEAP32[$__g_end>>2]|0;
     $15 = $14;
     $16 = $__g;
     $17 = (($15) - ($16))|0;
     $18 = ($17|0)<(160);
     if ($18) {
      $19 = HEAP32[$__dc>>2]|0;
      $20 = ((($14)) + 4|0);
      HEAP32[$__g_end>>2] = $20;
      HEAP32[$14>>2] = $19;
      $$0 = 0;
     } else {
      $$0 = 0;
     }
    }
   }
  } else {
   $21 = ($__ct|0)==($__thousands_sep|0);
   if ($21) {
    $22 = HEAP8[$__grouping>>0]|0;
    $23 = $22 & 1;
    $24 = ($23<<24>>24)==(0);
    $25 = ((($__grouping)) + 4|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = $22&255;
    $28 = $27 >>> 1;
    $29 = $24 ? $28 : $26;
    $30 = ($29|0)==(0);
    if (!($30)) {
     $31 = HEAP8[$__in_units>>0]|0;
     $32 = ($31<<24>>24)==(0);
     if ($32) {
      $$0 = -1;
      break;
     }
     $33 = HEAP32[$__g_end>>2]|0;
     $34 = $33;
     $35 = $__g;
     $36 = (($34) - ($35))|0;
     $37 = ($36|0)<(160);
     if (!($37)) {
      $$0 = 0;
      break;
     }
     $38 = HEAP32[$__dc>>2]|0;
     $39 = ((($33)) + 4|0);
     HEAP32[$__g_end>>2] = $39;
     HEAP32[$33>>2] = $38;
     HEAP32[$__dc>>2] = 0;
     $$0 = 0;
     break;
    }
   }
   $40 = ((($__atoms)) + 128|0);
   $$0$i3 = $__atoms;
   while(1) {
    $41 = HEAP32[$$0$i3>>2]|0;
    $42 = ($41|0)==($__ct|0);
    if ($42) {
     $$0$lcssa$i = $$0$i3;
     break;
    }
    $43 = ((($$0$i3)) + 4|0);
    $44 = ($43|0)==($40|0);
    if ($44) {
     $$0$lcssa$i = $40;
     break;
    } else {
     $$0$i3 = $43;
    }
   }
   $45 = $$0$lcssa$i;
   $46 = $__atoms;
   $47 = (($45) - ($46))|0;
   $48 = $47 >> 2;
   $49 = ($47|0)>(124);
   if ($49) {
    $$0 = -1;
   } else {
    $50 = (5128 + ($48)|0);
    $51 = HEAP8[$50>>0]|0;
    if ((($48|0) == 24) | (($48|0) == 25)) {
     $52 = HEAP32[$__a_end>>2]|0;
     $53 = ($52|0)==($__a|0);
     if (!($53)) {
      $54 = ((($52)) + -1|0);
      $55 = HEAP8[$54>>0]|0;
      $56 = $55&255;
      $57 = $56 & 95;
      $58 = HEAP8[$__exp>>0]|0;
      $59 = $58&255;
      $60 = $59 & 127;
      $61 = ($57|0)==($60|0);
      if (!($61)) {
       $$0 = -1;
       break;
      }
     }
     $62 = ((($52)) + 1|0);
     HEAP32[$__a_end>>2] = $62;
     HEAP8[$52>>0] = $51;
     $$0 = 0;
     break;
    } else if ((($48|0) == 23) | (($48|0) == 22)) {
     HEAP8[$__exp>>0] = 80;
    } else {
     $63 = $51&255;
     $64 = $63 & 95;
     $65 = HEAP8[$__exp>>0]|0;
     $66 = $65 << 24 >> 24;
     $67 = ($64|0)==($66|0);
     if ($67) {
      $68 = $64 | 128;
      $69 = $68&255;
      HEAP8[$__exp>>0] = $69;
      $70 = HEAP8[$__in_units>>0]|0;
      $71 = ($70<<24>>24)==(0);
      if (!($71)) {
       HEAP8[$__in_units>>0] = 0;
       $72 = HEAP8[$__grouping>>0]|0;
       $73 = $72 & 1;
       $74 = ($73<<24>>24)==(0);
       $75 = ((($__grouping)) + 4|0);
       $76 = HEAP32[$75>>2]|0;
       $77 = $72&255;
       $78 = $77 >>> 1;
       $79 = $74 ? $78 : $76;
       $80 = ($79|0)==(0);
       if (!($80)) {
        $81 = HEAP32[$__g_end>>2]|0;
        $82 = $81;
        $83 = $__g;
        $84 = (($82) - ($83))|0;
        $85 = ($84|0)<(160);
        if ($85) {
         $86 = HEAP32[$__dc>>2]|0;
         $87 = ((($81)) + 4|0);
         HEAP32[$__g_end>>2] = $87;
         HEAP32[$81>>2] = $86;
        }
       }
      }
     }
    }
    $88 = HEAP32[$__a_end>>2]|0;
    $89 = ((($88)) + 1|0);
    HEAP32[$__a_end>>2] = $89;
    HEAP8[$88>>0] = $51;
    $90 = ($47|0)>(84);
    if ($90) {
     $$0 = 0;
    } else {
     $91 = HEAP32[$__dc>>2]|0;
     $92 = (($91) + 1)|0;
     HEAP32[$__dc>>2] = $92;
     $$0 = 0;
    }
   }
  }
 } while(0);
 return ($$0|0);
}
function __ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$ph = 0, $$pre = 0, $$pre$phi5Z2D = 0, $$pre1 = 0, $$pre1$val = 0, $$pre1$val6 = 0, $$pre4 = 0, $$sroa$0$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $7 = 0, $8 = 0, $9 = 0, $__nm = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $$byval_copy = sp + 20|0;
 $0 = sp + 16|0;
 $1 = sp + 12|0;
 $__nm = sp;
 $2 = ((($__iob)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 & 1;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = HEAP32[$this>>2]|0;
  $7 = ((($6)) + 24|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = HEAP32[$__s>>2]|0;
  HEAP32[$0>>2] = $9;
  $10 = $__v&1;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
  $11 = (FUNCTION_TABLE_iiiiii[$8 & 31]($this,$$byval_copy,$__iob,$__fl,$10)|0);
  $$sroa$0$0 = $11;
 } else {
  $12 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
  HEAP32[$1>>2] = $12;
  $13 = (__ZNKSt3__16locale9use_facetERNS0_2idE($1,6304)|0);
  (__ZNSt3__114__shared_count16__release_sharedEv($12)|0);
  $14 = HEAP32[$13>>2]|0;
  if ($__v) {
   $15 = ((($14)) + 24|0);
   $16 = HEAP32[$15>>2]|0;
   FUNCTION_TABLE_vii[$16 & 63]($__nm,$13);
  } else {
   $17 = ((($14)) + 28|0);
   $18 = HEAP32[$17>>2]|0;
   FUNCTION_TABLE_vii[$18 & 63]($__nm,$13);
  }
  $19 = HEAP8[$__nm>>0]|0;
  $20 = $19 & 1;
  $21 = ($20<<24>>24)==(0);
  $22 = ((($__nm)) + 8|0);
  $23 = HEAP32[$22>>2]|0;
  $$pre4 = ((($__nm)) + 1|0);
  $24 = ((($__nm)) + 1|0);
  $$pre1 = ((($__nm)) + 8|0);
  $$pre$phi5Z2D = $21 ? $24 : $$pre4;
  $$ph = $21 ? $24 : $23;
  $25 = ((($__nm)) + 4|0);
  $26 = $19 & 1;
  $27 = ($26<<24>>24)==(0);
  $$pre1$val6 = HEAP32[$$pre1>>2]|0;
  $28 = HEAP32[$25>>2]|0;
  $29 = $19&255;
  $30 = $29 >>> 1;
  $31 = $27 ? $$pre$phi5Z2D : $$pre1$val6;
  $32 = $27 ? $30 : $28;
  $33 = (($31) + ($32)|0);
  $34 = ($$ph|0)==($33|0);
  if (!($34)) {
   $36 = $$ph;
   while(1) {
    $35 = HEAP8[$36>>0]|0;
    $37 = HEAP32[$__s>>2]|0;
    $38 = ($37|0)==(0|0);
    do {
     if (!($38)) {
      $39 = ((($37)) + 24|0);
      $40 = HEAP32[$39>>2]|0;
      $41 = ((($37)) + 28|0);
      $42 = HEAP32[$41>>2]|0;
      $43 = ($40|0)==($42|0);
      if (!($43)) {
       $44 = ((($40)) + 1|0);
       HEAP32[$39>>2] = $44;
       HEAP8[$40>>0] = $35;
       break;
      }
      $45 = HEAP32[$37>>2]|0;
      $46 = ((($45)) + 52|0);
      $47 = HEAP32[$46>>2]|0;
      $48 = $35&255;
      $49 = (FUNCTION_TABLE_iii[$47 & 15]($37,$48)|0);
      $50 = ($49|0)==(-1);
      if ($50) {
       HEAP32[$__s>>2] = 0;
      }
     }
    } while(0);
    $51 = ((($36)) + 1|0);
    $$pre = HEAP8[$__nm>>0]|0;
    $52 = $$pre & 1;
    $53 = ($52<<24>>24)==(0);
    $$pre1$val = HEAP32[$$pre1>>2]|0;
    $54 = HEAP32[$25>>2]|0;
    $55 = $$pre&255;
    $56 = $55 >>> 1;
    $57 = $53 ? $$pre$phi5Z2D : $$pre1$val;
    $58 = $53 ? $56 : $54;
    $59 = (($57) + ($58)|0);
    $60 = ($51|0)==($59|0);
    if ($60) {
     break;
    } else {
     $36 = $51;
    }
   }
  }
  $61 = HEAP32[$__s>>2]|0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nm);
  $$sroa$0$0 = $61;
 }
 STACKTOP = sp;return ($$sroa$0$0|0);
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $$byval_copy = sp;
 $__fmt = sp + 56|0;
 $__nar = sp + 44|0;
 $__o = sp + 20|0;
 $__op = sp + 16|0;
 $__oe = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt>>0]=HEAP8[9152>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[9152+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[9152+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[9152+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[9152+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[9152+5>>0]|0;
 $2 = ((($__fmt)) + 1|0);
 $3 = ((($__iob)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($2,9160,1,$4);
 $5 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$$byval_copy>>2] = $__v;
 $6 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,12,$5,$__fmt,$$byval_copy)|0);
 $7 = (($__nar) + ($6)|0);
 $8 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$7,$__iob)|0);
 $9 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $9;
 __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nar,$8,$7,$__o,$__op,$__oe,$0);
 (__ZNSt3__114__shared_count16__release_sharedEv($9)|0);
 $10 = HEAP32[$__s>>2]|0;
 HEAP32[$1>>2] = $10;
 $11 = HEAP32[$__op>>2]|0;
 $12 = HEAP32[$__oe>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 $13 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$11,$12,$__iob,$__fl)|0);
 STACKTOP = sp;return ($13|0);
}
function __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmtp,$__len,$__signd,$__flags) {
 $__fmtp = $__fmtp|0;
 $__len = $__len|0;
 $__signd = $__signd|0;
 $__flags = $__flags|0;
 var $$0 = 0, $$012 = 0, $$1$lcssa = 0, $$1$ph = 0, $$13 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__flags & 2048;
 $1 = ($0|0)==(0);
 if ($1) {
  $$0 = $__fmtp;
 } else {
  $2 = ((($__fmtp)) + 1|0);
  HEAP8[$__fmtp>>0] = 43;
  $$0 = $2;
 }
 $3 = $__flags & 512;
 $4 = ($3|0)==(0);
 if ($4) {
  $$1$ph = $$0;
 } else {
  $5 = ((($$0)) + 1|0);
  HEAP8[$$0>>0] = 35;
  $$1$ph = $5;
 }
 $6 = HEAP8[$__len>>0]|0;
 $7 = ($6<<24>>24)==(0);
 if ($7) {
  $$1$lcssa = $$1$ph;
 } else {
  $$012 = $__len;$$13 = $$1$ph;$10 = $6;
  while(1) {
   $8 = ((($$012)) + 1|0);
   $9 = ((($$13)) + 1|0);
   HEAP8[$$13>>0] = $10;
   $11 = HEAP8[$8>>0]|0;
   $12 = ($11<<24>>24)==(0);
   if ($12) {
    $$1$lcssa = $9;
    break;
   } else {
    $$012 = $8;$$13 = $9;$10 = $11;
   }
  }
 }
 $13 = $__flags & 74;
 do {
  if ((($13|0) == 8)) {
   $14 = $__flags & 16384;
   $15 = ($14|0)==(0);
   if ($15) {
    HEAP8[$$1$lcssa>>0] = 120;
    break;
   } else {
    HEAP8[$$1$lcssa>>0] = 88;
    break;
   }
  } else if ((($13|0) == 64)) {
   HEAP8[$$1$lcssa>>0] = 111;
  } else {
   if ($__signd) {
    HEAP8[$$1$lcssa>>0] = 100;
    break;
   } else {
    HEAP8[$$1$lcssa>>0] = 117;
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nb,$__ne,$__iob) {
 $__nb = $__nb|0;
 $__ne = $__ne|0;
 $__iob = $__iob|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($__iob)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 & 176;
 do {
  if ((($2|0) == 16)) {
   $3 = HEAP8[$__nb>>0]|0;
   if ((($3<<24>>24) == 43) | (($3<<24>>24) == 45)) {
    $4 = ((($__nb)) + 1|0);
    $$0 = $4;
    break;
   }
   $5 = $__ne;
   $6 = $__nb;
   $7 = (($5) - ($6))|0;
   $8 = ($7|0)>(1);
   $9 = ($3<<24>>24)==(48);
   $or$cond = $8 & $9;
   if ($or$cond) {
    $10 = ((($__nb)) + 1|0);
    $11 = HEAP8[$10>>0]|0;
    if ((($11<<24>>24) == 88) | (($11<<24>>24) == 120)) {
     $12 = ((($__nb)) + 2|0);
     $$0 = $12;
    } else {
     label = 7;
    }
   } else {
    label = 7;
   }
  } else if ((($2|0) == 32)) {
   $$0 = $__ne;
  } else {
   label = 7;
  }
 } while(0);
 if ((label|0) == 7) {
  $$0 = $__nb;
 }
 return ($$0|0);
}
function __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nb,$__np,$__ne,$__ob,$__op,$__oe,$__loc) {
 $__nb = $__nb|0;
 $__np = $__np|0;
 $__ne = $__ne|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__loc = $__loc|0;
 var $$01$i$i111 = 0, $$01$i$i7 = 0, $$__dg$0 = 0, $$pre = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;
 var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $__dc$08 = 0, $__dc$1 = 0, $__dg$09 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__p$010 = 0, $or$cond = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__grouping = sp;
 $0 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6160)|0);
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6304)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 FUNCTION_TABLE_vii[$4 & 63]($__grouping,$1);
 $5 = HEAP8[$__grouping>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 $8 = ((($__grouping)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = $5&255;
 $11 = $10 >>> 1;
 $12 = $7 ? $11 : $9;
 $13 = ($12|0)==(0);
 if ($13) {
  $14 = HEAP32[$0>>2]|0;
  $15 = ((($14)) + 32|0);
  $16 = HEAP32[$15>>2]|0;
  (FUNCTION_TABLE_iiiii[$16 & 7]($0,$__nb,$__ne,$__ob)|0);
  $17 = $__ne;
  $18 = $__nb;
  $19 = (($17) - ($18))|0;
  $20 = (($__ob) + ($19)|0);
  HEAP32[$__oe>>2] = $20;
  $$pre$phiZ2D = $18;$117 = $20;
 } else {
  HEAP32[$__oe>>2] = $__ob;
  $21 = HEAP8[$__nb>>0]|0;
  if ((($21<<24>>24) == 43) | (($21<<24>>24) == 45)) {
   $22 = ((($__nb)) + 1|0);
   $23 = HEAP32[$0>>2]|0;
   $24 = ((($23)) + 28|0);
   $25 = HEAP32[$24>>2]|0;
   $26 = (FUNCTION_TABLE_iii[$25 & 15]($0,$21)|0);
   $27 = HEAP32[$__oe>>2]|0;
   $28 = ((($27)) + 1|0);
   HEAP32[$__oe>>2] = $28;
   HEAP8[$27>>0] = $26;
   $__nf$0 = $22;
  } else {
   $__nf$0 = $__nb;
  }
  $29 = $__ne;
  $30 = $__nf$0;
  $31 = (($29) - ($30))|0;
  $32 = ($31|0)>(1);
  if ($32) {
   $33 = HEAP8[$__nf$0>>0]|0;
   $34 = ($33<<24>>24)==(48);
   if ($34) {
    $35 = ((($__nf$0)) + 1|0);
    $36 = HEAP8[$35>>0]|0;
    if ((($36<<24>>24) == 88) | (($36<<24>>24) == 120)) {
     $37 = HEAP32[$0>>2]|0;
     $38 = ((($37)) + 28|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = (FUNCTION_TABLE_iii[$39 & 15]($0,48)|0);
     $41 = HEAP32[$__oe>>2]|0;
     $42 = ((($41)) + 1|0);
     HEAP32[$__oe>>2] = $42;
     HEAP8[$41>>0] = $40;
     $43 = ((($__nf$0)) + 2|0);
     $44 = HEAP8[$35>>0]|0;
     $45 = HEAP32[$0>>2]|0;
     $46 = ((($45)) + 28|0);
     $47 = HEAP32[$46>>2]|0;
     $48 = (FUNCTION_TABLE_iii[$47 & 15]($0,$44)|0);
     $49 = HEAP32[$__oe>>2]|0;
     $50 = ((($49)) + 1|0);
     HEAP32[$__oe>>2] = $50;
     HEAP8[$49>>0] = $48;
     $__nf$1 = $43;
    } else {
     $__nf$1 = $__nf$0;
    }
   } else {
    $__nf$1 = $__nf$0;
   }
  } else {
   $__nf$1 = $__nf$0;
  }
  $51 = ($__nf$1|0)==($__ne|0);
  if (!($51)) {
   $52 = ((($__ne)) + -1|0);
   $53 = ($__nf$1>>>0)<($52>>>0);
   if ($53) {
    $$01$i$i111 = $__nf$1;$56 = $52;
    while(1) {
     $54 = HEAP8[$$01$i$i111>>0]|0;
     $55 = HEAP8[$56>>0]|0;
     HEAP8[$$01$i$i111>>0] = $55;
     HEAP8[$56>>0] = $54;
     $57 = ((($$01$i$i111)) + 1|0);
     $58 = ((($56)) + -1|0);
     $59 = ($57>>>0)<($58>>>0);
     if ($59) {
      $$01$i$i111 = $57;$56 = $58;
     } else {
      break;
     }
    }
   }
  }
  $60 = HEAP32[$1>>2]|0;
  $61 = ((($60)) + 16|0);
  $62 = HEAP32[$61>>2]|0;
  $63 = (FUNCTION_TABLE_ii[$62 & 63]($1)|0);
  $64 = ((($__grouping)) + 8|0);
  $65 = ((($__grouping)) + 1|0);
  $66 = ($__nf$1>>>0)<($__ne>>>0);
  if ($66) {
   $__dc$08 = 0;$__dg$09 = 0;$__p$010 = $__nf$1;
   while(1) {
    $67 = HEAP8[$__grouping>>0]|0;
    $68 = $67 & 1;
    $69 = ($68<<24>>24)==(0);
    $70 = HEAP32[$64>>2]|0;
    $71 = $69 ? $65 : $70;
    $72 = (($71) + ($__dg$09)|0);
    $73 = HEAP8[$72>>0]|0;
    $74 = ($73<<24>>24)!=(0);
    $75 = $73 << 24 >> 24;
    $76 = ($__dc$08|0)==($75|0);
    $or$cond = $74 & $76;
    if ($or$cond) {
     $77 = HEAP32[$__oe>>2]|0;
     $78 = ((($77)) + 1|0);
     HEAP32[$__oe>>2] = $78;
     HEAP8[$77>>0] = $63;
     $79 = HEAP8[$__grouping>>0]|0;
     $80 = $79 & 1;
     $81 = ($80<<24>>24)==(0);
     $82 = HEAP32[$8>>2]|0;
     $83 = $79&255;
     $84 = $83 >>> 1;
     $85 = $81 ? $84 : $82;
     $86 = (($85) + -1)|0;
     $87 = ($__dg$09>>>0)<($86>>>0);
     $88 = $87&1;
     $$__dg$0 = (($88) + ($__dg$09))|0;
     $__dc$1 = 0;$__dg$1 = $$__dg$0;
    } else {
     $__dc$1 = $__dc$08;$__dg$1 = $__dg$09;
    }
    $89 = HEAP8[$__p$010>>0]|0;
    $90 = HEAP32[$0>>2]|0;
    $91 = ((($90)) + 28|0);
    $92 = HEAP32[$91>>2]|0;
    $93 = (FUNCTION_TABLE_iii[$92 & 15]($0,$89)|0);
    $94 = HEAP32[$__oe>>2]|0;
    $95 = ((($94)) + 1|0);
    HEAP32[$__oe>>2] = $95;
    HEAP8[$94>>0] = $93;
    $96 = (($__dc$1) + 1)|0;
    $97 = ((($__p$010)) + 1|0);
    $98 = ($97>>>0)<($__ne>>>0);
    if ($98) {
     $__dc$08 = $96;$__dg$09 = $__dg$1;$__p$010 = $97;
    } else {
     break;
    }
   }
  }
  $99 = $__nf$1;
  $100 = $__nb;
  $101 = (($99) - ($100))|0;
  $102 = (($__ob) + ($101)|0);
  $103 = HEAP32[$__oe>>2]|0;
  $104 = ($102|0)==($103|0);
  if ($104) {
   $$pre$phiZ2D = $100;$117 = $102;
  } else {
   $105 = ((($103)) + -1|0);
   $106 = ($102>>>0)<($105>>>0);
   if ($106) {
    $$01$i$i7 = $102;$109 = $105;
    while(1) {
     $107 = HEAP8[$$01$i$i7>>0]|0;
     $108 = HEAP8[$109>>0]|0;
     HEAP8[$$01$i$i7>>0] = $108;
     HEAP8[$109>>0] = $107;
     $110 = ((($$01$i$i7)) + 1|0);
     $111 = ((($109)) + -1|0);
     $112 = ($110>>>0)<($111>>>0);
     if ($112) {
      $$01$i$i7 = $110;$109 = $111;
     } else {
      break;
     }
    }
   }
   $$pre = HEAP32[$__oe>>2]|0;
   $$pre$phiZ2D = $100;$117 = $$pre;
  }
 }
 $113 = ($__np|0)==($__ne|0);
 $114 = $__np;
 $115 = (($114) - ($$pre$phiZ2D))|0;
 $116 = (($__ob) + ($115)|0);
 $storemerge = $113 ? $117 : $116;
 HEAP32[$__op>>2] = $storemerge;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx($this,$__s,$__iob,$__fl,$0,$1) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0;
 $$byval_copy = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 74|0;
 $__o = sp + 32|0;
 $__op = sp + 28|0;
 $__oe = sp + 24|0;
 $2 = sp + 20|0;
 $3 = sp + 16|0;
 $4 = $__fmt;
 $5 = $4;
 HEAP32[$5>>2] = 37;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = ((($__fmt)) + 1|0);
 $9 = ((($__iob)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($8,9168,1,$10);
 $11 = (__ZNSt3__16__clocEv()|0);
 $12 = $$byval_copy;
 $13 = $12;
 HEAP32[$13>>2] = $0;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $1;
 $16 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,22,$11,$__fmt,$$byval_copy)|0);
 $17 = (($__nar) + ($16)|0);
 $18 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$17,$__iob)|0);
 $19 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$2>>2] = $19;
 __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nar,$18,$17,$__o,$__op,$__oe,$2);
 (__ZNSt3__114__shared_count16__release_sharedEv($19)|0);
 $20 = HEAP32[$__s>>2]|0;
 HEAP32[$3>>2] = $20;
 $21 = HEAP32[$__op>>2]|0;
 $22 = HEAP32[$__oe>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;
 $23 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$21,$22,$__iob,$__fl)|0);
 STACKTOP = sp;return ($23|0);
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $$byval_copy = sp;
 $__fmt = sp + 56|0;
 $__nar = sp + 44|0;
 $__o = sp + 20|0;
 $__op = sp + 16|0;
 $__oe = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt>>0]=HEAP8[9152>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[9152+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[9152+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[9152+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[9152+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[9152+5>>0]|0;
 $2 = ((($__fmt)) + 1|0);
 $3 = ((($__iob)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($2,9160,0,$4);
 $5 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$$byval_copy>>2] = $__v;
 $6 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,12,$5,$__fmt,$$byval_copy)|0);
 $7 = (($__nar) + ($6)|0);
 $8 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$7,$__iob)|0);
 $9 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $9;
 __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nar,$8,$7,$__o,$__op,$__oe,$0);
 (__ZNSt3__114__shared_count16__release_sharedEv($9)|0);
 $10 = HEAP32[$__s>>2]|0;
 HEAP32[$1>>2] = $10;
 $11 = HEAP32[$__op>>2]|0;
 $12 = HEAP32[$__oe>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 $13 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$11,$12,$__iob,$__fl)|0);
 STACKTOP = sp;return ($13|0);
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy($this,$__s,$__iob,$__fl,$0,$1) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $$byval_copy = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 75|0;
 $__o = sp + 32|0;
 $__op = sp + 28|0;
 $__oe = sp + 24|0;
 $2 = sp + 20|0;
 $3 = sp + 16|0;
 $4 = $__fmt;
 $5 = $4;
 HEAP32[$5>>2] = 37;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = ((($__fmt)) + 1|0);
 $9 = ((($__iob)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($8,9168,0,$10);
 $11 = (__ZNSt3__16__clocEv()|0);
 $12 = $$byval_copy;
 $13 = $12;
 HEAP32[$13>>2] = $0;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $1;
 $16 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,23,$11,$__fmt,$$byval_copy)|0);
 $17 = (($__nar) + ($16)|0);
 $18 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$17,$__iob)|0);
 $19 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$2>>2] = $19;
 __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nar,$18,$17,$__o,$__op,$__oe,$2);
 (__ZNSt3__114__shared_count16__release_sharedEv($19)|0);
 $20 = HEAP32[$__s>>2]|0;
 HEAP32[$3>>2] = $20;
 $21 = HEAP32[$__op>>2]|0;
 $22 = HEAP32[$__oe>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;
 $23 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$21,$22,$__iob,$__fl)|0);
 STACKTOP = sp;return ($23|0);
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = +$__v;
 var $$byval_copy = 0, $$pre4 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0;
 var $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_ptr1 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0;
 $$byval_copy = sp + 68|0;
 $vararg_buffer5 = sp + 32|0;
 $vararg_buffer2 = sp + 24|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 130|0;
 $__nb = sp + 64|0;
 $__o = sp + 72|0;
 $__op = sp + 60|0;
 $__oe = sp + 56|0;
 $0 = sp + 52|0;
 $1 = sp + 48|0;
 $2 = $__fmt;
 $3 = $2;
 HEAP32[$3>>2] = 37;
 $4 = (($2) + 4)|0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = ((($__fmt)) + 1|0);
 $7 = ((($__iob)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (__ZNSt3__114__num_put_base14__format_floatEPcPKcj($6,9176,$8)|0);
 HEAP32[$__nb>>2] = $__nar;
 $10 = (__ZNSt3__16__clocEv()|0);
 if ($9) {
  $11 = ((($__iob)) + 8|0);
  $12 = HEAP32[$11>>2]|0;
  HEAP32[$vararg_buffer>>2] = $12;
  $vararg_ptr1 = ((($vararg_buffer)) + 8|0);
  HEAPF64[$vararg_ptr1>>3] = $__v;
  $13 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer)|0);
  $__nc$0 = $13;
 } else {
  HEAPF64[$vararg_buffer2>>3] = $__v;
  $14 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer2)|0);
  $__nc$0 = $14;
 }
 $15 = ($__nc$0|0)>(29);
 if ($15) {
  $16 = (__ZNSt3__16__clocEv()|0);
  $17 = ((($__iob)) + 8|0);
  $18 = HEAP32[$17>>2]|0;
  HEAP32[$vararg_buffer5>>2] = $18;
  $vararg_ptr8 = ((($vararg_buffer5)) + 8|0);
  HEAPF64[$vararg_ptr8>>3] = $__v;
  $19 = (__ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__nb,$16,$__fmt,$vararg_buffer5)|0);
  $20 = HEAP32[$__nb>>2]|0;
  $21 = ($20|0)==(0|0);
  if ($21) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $23 = $20;$36 = $20;$__nc$1 = $19;
  }
 } else {
  $$pre4 = HEAP32[$__nb>>2]|0;
  $23 = $$pre4;$36 = 0;$__nc$1 = $__nc$0;
 }
 $22 = (($23) + ($__nc$1)|0);
 $24 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($23,$22,$__iob)|0);
 $25 = ($23|0)==($__nar|0);
 if ($25) {
  $30 = $__nar;$35 = 0;$__ob$0 = $__o;
 } else {
  $26 = $__nc$1 << 1;
  $27 = (_malloc($26)|0);
  $28 = ($27|0)==(0|0);
  if ($28) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $30 = $23;$35 = $27;$__ob$0 = $27;
  }
 }
 $29 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $29;
 __ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE($30,$24,$22,$__ob$0,$__op,$__oe,$0);
 (__ZNSt3__114__shared_count16__release_sharedEv($29)|0);
 $31 = HEAP32[$__s>>2]|0;
 HEAP32[$1>>2] = $31;
 $32 = HEAP32[$__op>>2]|0;
 $33 = HEAP32[$__oe>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 $34 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__ob$0,$32,$33,$__iob,$__fl)|0);
 _free($35);
 _free($36);
 STACKTOP = sp;return ($34|0);
}
function __ZNSt3__114__num_put_base14__format_floatEPcPKcj($__fmtp,$__len,$__flags) {
 $__fmtp = $__fmtp|0;
 $__len = $__len|0;
 $__flags = $__flags|0;
 var $$0 = 0, $$012 = 0, $$1 = 0, $$2$lcssa = 0, $$2$ph = 0, $$23 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $specify_precision$0$off0$ph = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__flags & 2048;
 $1 = ($0|0)==(0);
 if ($1) {
  $$0 = $__fmtp;
 } else {
  $2 = ((($__fmtp)) + 1|0);
  HEAP8[$__fmtp>>0] = 43;
  $$0 = $2;
 }
 $3 = $__flags & 1024;
 $4 = ($3|0)==(0);
 if ($4) {
  $$1 = $$0;
 } else {
  $5 = ((($$0)) + 1|0);
  HEAP8[$$0>>0] = 35;
  $$1 = $5;
 }
 $6 = $__flags & 260;
 $7 = $__flags >>> 14;
 $8 = ($6|0)==(260);
 if ($8) {
  $$2$ph = $$1;$specify_precision$0$off0$ph = 0;
 } else {
  $9 = ((($$1)) + 1|0);
  HEAP8[$$1>>0] = 46;
  $10 = ((($$1)) + 2|0);
  HEAP8[$9>>0] = 42;
  $$2$ph = $10;$specify_precision$0$off0$ph = 1;
 }
 $11 = HEAP8[$__len>>0]|0;
 $12 = ($11<<24>>24)==(0);
 if ($12) {
  $$2$lcssa = $$2$ph;
 } else {
  $$012 = $__len;$$23 = $$2$ph;$15 = $11;
  while(1) {
   $13 = ((($$012)) + 1|0);
   $14 = ((($$23)) + 1|0);
   HEAP8[$$23>>0] = $15;
   $16 = HEAP8[$13>>0]|0;
   $17 = ($16<<24>>24)==(0);
   if ($17) {
    $$2$lcssa = $14;
    break;
   } else {
    $$012 = $13;$$23 = $14;$15 = $16;
   }
  }
 }
 do {
  if ((($6|0) == 256)) {
   $20 = $7 & 1;
   $21 = ($20|0)==(0);
   if ($21) {
    HEAP8[$$2$lcssa>>0] = 101;
    break;
   } else {
    HEAP8[$$2$lcssa>>0] = 69;
    break;
   }
  } else if ((($6|0) == 4)) {
   $18 = $7 & 1;
   $19 = ($18|0)==(0);
   if ($19) {
    HEAP8[$$2$lcssa>>0] = 102;
    break;
   } else {
    HEAP8[$$2$lcssa>>0] = 70;
    break;
   }
  } else {
   $22 = $7 & 1;
   $23 = ($22|0)!=(0);
   if ($8) {
    if ($23) {
     HEAP8[$$2$lcssa>>0] = 65;
     break;
    } else {
     HEAP8[$$2$lcssa>>0] = 97;
     break;
    }
   } else {
    if ($23) {
     HEAP8[$$2$lcssa>>0] = 71;
     break;
    } else {
     HEAP8[$$2$lcssa>>0] = 103;
     break;
    }
   }
  }
 } while(0);
 return ($specify_precision$0$off0$ph|0);
}
function __ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nb,$__np,$__ne,$__ob,$__op,$__oe,$__loc) {
 $__nb = $__nb|0;
 $__np = $__np|0;
 $__ne = $__ne|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__loc = $__loc|0;
 var $$01$i$i20 = 0, $$01$i$i215 = 0, $$__dg$0 = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0;
 var $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dc$017 = 0, $__dc$1 = 0, $__dg$018 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__nf$214 = 0, $__nf$214$lcssa = 0, $__nf$3 = 0, $__ns$026 = 0, $__ns$122 = 0, $__ns$2 = 0, $__p$019 = 0;
 var $or$cond = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__grouping = sp;
 $0 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6160)|0);
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6304)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 FUNCTION_TABLE_vii[$4 & 63]($__grouping,$1);
 HEAP32[$__oe>>2] = $__ob;
 $5 = HEAP8[$__nb>>0]|0;
 if ((($5<<24>>24) == 43) | (($5<<24>>24) == 45)) {
  $6 = ((($__nb)) + 1|0);
  $7 = HEAP32[$0>>2]|0;
  $8 = ((($7)) + 28|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (FUNCTION_TABLE_iii[$9 & 15]($0,$5)|0);
  $11 = HEAP32[$__oe>>2]|0;
  $12 = ((($11)) + 1|0);
  HEAP32[$__oe>>2] = $12;
  HEAP8[$11>>0] = $10;
  $__nf$0 = $6;
 } else {
  $__nf$0 = $__nb;
 }
 $13 = $__ne;
 $14 = $__nf$0;
 $15 = (($13) - ($14))|0;
 $16 = ($15|0)>(1);
 L4: do {
  if ($16) {
   $18 = HEAP8[$__nf$0>>0]|0;
   $19 = ($18<<24>>24)==(48);
   if ($19) {
    $20 = ((($__nf$0)) + 1|0);
    $21 = HEAP8[$20>>0]|0;
    if ((($21<<24>>24) == 88) | (($21<<24>>24) == 120)) {
     $22 = HEAP32[$0>>2]|0;
     $23 = ((($22)) + 28|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = (FUNCTION_TABLE_iii[$24 & 15]($0,48)|0);
     $26 = HEAP32[$__oe>>2]|0;
     $27 = ((($26)) + 1|0);
     HEAP32[$__oe>>2] = $27;
     HEAP8[$26>>0] = $25;
     $28 = ((($__nf$0)) + 2|0);
     $29 = HEAP8[$20>>0]|0;
     $30 = HEAP32[$0>>2]|0;
     $31 = ((($30)) + 28|0);
     $32 = HEAP32[$31>>2]|0;
     $33 = (FUNCTION_TABLE_iii[$32 & 15]($0,$29)|0);
     $34 = HEAP32[$__oe>>2]|0;
     $35 = ((($34)) + 1|0);
     HEAP32[$__oe>>2] = $35;
     HEAP8[$34>>0] = $33;
     $36 = ($28>>>0)<($__ne>>>0);
     if ($36) {
      $__ns$026 = $28;
      while(1) {
       $37 = HEAP8[$__ns$026>>0]|0;
       $38 = $37 << 24 >> 24;
       $39 = (__ZNSt3__16__clocEv()|0);
       $40 = (_isxdigit_l($38,$39)|0);
       $41 = ($40|0)==(0);
       if ($41) {
        $__nf$1 = $28;$__ns$2 = $__ns$026;
        break L4;
       }
       $42 = ((($__ns$026)) + 1|0);
       $43 = ($42>>>0)<($__ne>>>0);
       if ($43) {
        $__ns$026 = $42;
       } else {
        $__nf$1 = $28;$__ns$2 = $42;
        break;
       }
      }
     } else {
      $__nf$1 = $28;$__ns$2 = $28;
     }
    } else {
     label = 4;
    }
   } else {
    label = 4;
   }
  } else {
   label = 4;
  }
 } while(0);
 L11: do {
  if ((label|0) == 4) {
   $17 = ($__nf$0>>>0)<($__ne>>>0);
   if ($17) {
    $__ns$122 = $__nf$0;
    while(1) {
     $44 = HEAP8[$__ns$122>>0]|0;
     $45 = $44 << 24 >> 24;
     $46 = (__ZNSt3__16__clocEv()|0);
     $47 = (_isdigit_l($45,$46)|0);
     $48 = ($47|0)==(0);
     if ($48) {
      $__nf$1 = $__nf$0;$__ns$2 = $__ns$122;
      break L11;
     }
     $49 = ((($__ns$122)) + 1|0);
     $50 = ($49>>>0)<($__ne>>>0);
     if ($50) {
      $__ns$122 = $49;
     } else {
      $__nf$1 = $__nf$0;$__ns$2 = $49;
      break;
     }
    }
   } else {
    $__nf$1 = $__nf$0;$__ns$2 = $__nf$0;
   }
  }
 } while(0);
 $51 = HEAP8[$__grouping>>0]|0;
 $52 = $51 & 1;
 $53 = ($52<<24>>24)==(0);
 $54 = ((($__grouping)) + 4|0);
 $55 = HEAP32[$54>>2]|0;
 $56 = $51&255;
 $57 = $56 >>> 1;
 $58 = $53 ? $57 : $55;
 $59 = ($58|0)==(0);
 if ($59) {
  $60 = HEAP32[$__oe>>2]|0;
  $61 = HEAP32[$0>>2]|0;
  $62 = ((($61)) + 32|0);
  $63 = HEAP32[$62>>2]|0;
  (FUNCTION_TABLE_iiiii[$63 & 7]($0,$__nf$1,$__ns$2,$60)|0);
  $64 = $__ns$2;
  $65 = $__nf$1;
  $66 = (($64) - ($65))|0;
  $67 = HEAP32[$__oe>>2]|0;
  $68 = (($67) + ($66)|0);
  HEAP32[$__oe>>2] = $68;
  $$pre$phiZ2D = $0;
 } else {
  $69 = ($__nf$1|0)==($__ns$2|0);
  if (!($69)) {
   $70 = ((($__ns$2)) + -1|0);
   $71 = ($__nf$1>>>0)<($70>>>0);
   if ($71) {
    $$01$i$i20 = $__nf$1;$74 = $70;
    while(1) {
     $72 = HEAP8[$$01$i$i20>>0]|0;
     $73 = HEAP8[$74>>0]|0;
     HEAP8[$$01$i$i20>>0] = $73;
     HEAP8[$74>>0] = $72;
     $75 = ((($$01$i$i20)) + 1|0);
     $76 = ((($74)) + -1|0);
     $77 = ($75>>>0)<($76>>>0);
     if ($77) {
      $$01$i$i20 = $75;$74 = $76;
     } else {
      break;
     }
    }
   }
  }
  $78 = HEAP32[$1>>2]|0;
  $79 = ((($78)) + 16|0);
  $80 = HEAP32[$79>>2]|0;
  $81 = (FUNCTION_TABLE_ii[$80 & 63]($1)|0);
  $82 = ((($__grouping)) + 8|0);
  $83 = ((($__grouping)) + 1|0);
  $84 = ($__nf$1>>>0)<($__ns$2>>>0);
  if ($84) {
   $__dc$017 = 0;$__dg$018 = 0;$__p$019 = $__nf$1;
   while(1) {
    $85 = HEAP8[$__grouping>>0]|0;
    $86 = $85 & 1;
    $87 = ($86<<24>>24)==(0);
    $88 = HEAP32[$82>>2]|0;
    $89 = $87 ? $83 : $88;
    $90 = (($89) + ($__dg$018)|0);
    $91 = HEAP8[$90>>0]|0;
    $92 = ($91<<24>>24)>(0);
    $93 = $91 << 24 >> 24;
    $94 = ($__dc$017|0)==($93|0);
    $or$cond = $92 & $94;
    if ($or$cond) {
     $95 = HEAP32[$__oe>>2]|0;
     $96 = ((($95)) + 1|0);
     HEAP32[$__oe>>2] = $96;
     HEAP8[$95>>0] = $81;
     $97 = HEAP8[$__grouping>>0]|0;
     $98 = $97 & 1;
     $99 = ($98<<24>>24)==(0);
     $100 = HEAP32[$54>>2]|0;
     $101 = $97&255;
     $102 = $101 >>> 1;
     $103 = $99 ? $102 : $100;
     $104 = (($103) + -1)|0;
     $105 = ($__dg$018>>>0)<($104>>>0);
     $106 = $105&1;
     $$__dg$0 = (($106) + ($__dg$018))|0;
     $__dc$1 = 0;$__dg$1 = $$__dg$0;
    } else {
     $__dc$1 = $__dc$017;$__dg$1 = $__dg$018;
    }
    $107 = HEAP8[$__p$019>>0]|0;
    $108 = HEAP32[$0>>2]|0;
    $109 = ((($108)) + 28|0);
    $110 = HEAP32[$109>>2]|0;
    $111 = (FUNCTION_TABLE_iii[$110 & 15]($0,$107)|0);
    $112 = HEAP32[$__oe>>2]|0;
    $113 = ((($112)) + 1|0);
    HEAP32[$__oe>>2] = $113;
    HEAP8[$112>>0] = $111;
    $114 = (($__dc$1) + 1)|0;
    $115 = ((($__p$019)) + 1|0);
    $116 = ($115>>>0)<($__ns$2>>>0);
    if ($116) {
     $__dc$017 = $114;$__dg$018 = $__dg$1;$__p$019 = $115;
    } else {
     break;
    }
   }
  }
  $117 = $__nf$1;
  $118 = $__nb;
  $119 = (($117) - ($118))|0;
  $120 = (($__ob) + ($119)|0);
  $121 = HEAP32[$__oe>>2]|0;
  $122 = ($120|0)==($121|0);
  if ($122) {
   $$pre$phiZ2D = $0;
  } else {
   $123 = ((($121)) + -1|0);
   $124 = ($120>>>0)<($123>>>0);
   if ($124) {
    $$01$i$i215 = $120;$128 = $123;
    while(1) {
     $126 = HEAP8[$$01$i$i215>>0]|0;
     $127 = HEAP8[$128>>0]|0;
     HEAP8[$$01$i$i215>>0] = $127;
     HEAP8[$128>>0] = $126;
     $129 = ((($$01$i$i215)) + 1|0);
     $130 = ((($128)) + -1|0);
     $131 = ($129>>>0)<($130>>>0);
     if ($131) {
      $$01$i$i215 = $129;$128 = $130;
     } else {
      $$pre$phiZ2D = $0;
      break;
     }
    }
   } else {
    $$pre$phiZ2D = $0;
   }
  }
 }
 $125 = ($__ns$2>>>0)<($__ne>>>0);
 L36: do {
  if ($125) {
   $__nf$214 = $__ns$2;
   while(1) {
    $132 = HEAP8[$__nf$214>>0]|0;
    $133 = ($132<<24>>24)==(46);
    if ($133) {
     $__nf$214$lcssa = $__nf$214;
     break;
    }
    $141 = HEAP32[$$pre$phiZ2D>>2]|0;
    $142 = ((($141)) + 28|0);
    $143 = HEAP32[$142>>2]|0;
    $144 = (FUNCTION_TABLE_iii[$143 & 15]($0,$132)|0);
    $145 = HEAP32[$__oe>>2]|0;
    $146 = ((($145)) + 1|0);
    HEAP32[$__oe>>2] = $146;
    HEAP8[$145>>0] = $144;
    $147 = ((($__nf$214)) + 1|0);
    $148 = ($147>>>0)<($__ne>>>0);
    if ($148) {
     $__nf$214 = $147;
    } else {
     $__nf$3 = $147;
     break L36;
    }
   }
   $134 = HEAP32[$1>>2]|0;
   $135 = ((($134)) + 12|0);
   $136 = HEAP32[$135>>2]|0;
   $137 = (FUNCTION_TABLE_ii[$136 & 63]($1)|0);
   $138 = HEAP32[$__oe>>2]|0;
   $139 = ((($138)) + 1|0);
   HEAP32[$__oe>>2] = $139;
   HEAP8[$138>>0] = $137;
   $140 = ((($__nf$214$lcssa)) + 1|0);
   $__nf$3 = $140;
  } else {
   $__nf$3 = $__ns$2;
  }
 } while(0);
 $149 = HEAP32[$__oe>>2]|0;
 $150 = HEAP32[$0>>2]|0;
 $151 = ((($150)) + 32|0);
 $152 = HEAP32[$151>>2]|0;
 (FUNCTION_TABLE_iiiii[$152 & 7]($0,$__nf$3,$__ne,$149)|0);
 $153 = $__nf$3;
 $154 = (($13) - ($153))|0;
 $155 = HEAP32[$__oe>>2]|0;
 $156 = (($155) + ($154)|0);
 HEAP32[$__oe>>2] = $156;
 $157 = ($__np|0)==($__ne|0);
 $158 = $__np;
 $159 = $__nb;
 $160 = (($158) - ($159))|0;
 $161 = (($__ob) + ($160)|0);
 $storemerge = $157 ? $156 : $161;
 HEAP32[$__op>>2] = $storemerge;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = +$__v;
 var $$byval_copy = 0, $$pre4 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__fmt = 0, $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0;
 $$byval_copy = sp + 76|0;
 $vararg_buffer9 = sp + 48|0;
 $vararg_buffer5 = sp + 32|0;
 $vararg_buffer2 = sp + 24|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 138|0;
 $__nb = sp + 72|0;
 $__o = sp + 80|0;
 $__op = sp + 68|0;
 $__oe = sp + 64|0;
 $0 = sp + 60|0;
 $1 = sp + 56|0;
 $2 = $__fmt;
 $3 = $2;
 HEAP32[$3>>2] = 37;
 $4 = (($2) + 4)|0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = ((($__fmt)) + 1|0);
 $7 = ((($__iob)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (__ZNSt3__114__num_put_base14__format_floatEPcPKcj($6,9184,$8)|0);
 HEAP32[$__nb>>2] = $__nar;
 $10 = (__ZNSt3__16__clocEv()|0);
 if ($9) {
  $11 = ((($__iob)) + 8|0);
  $12 = HEAP32[$11>>2]|0;
  HEAP32[$vararg_buffer>>2] = $12;
  $vararg_ptr1 = ((($vararg_buffer)) + 8|0);
  HEAPF64[$vararg_ptr1>>3] = $__v;
  $13 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer)|0);
  $__nc$0 = $13;
 } else {
  HEAPF64[$vararg_buffer2>>3] = $__v;
  $14 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer2)|0);
  $__nc$0 = $14;
 }
 $15 = ($__nc$0|0)>(29);
 if ($15) {
  $16 = (__ZNSt3__16__clocEv()|0);
  if ($9) {
   $17 = ((($__iob)) + 8|0);
   $18 = HEAP32[$17>>2]|0;
   HEAP32[$vararg_buffer5>>2] = $18;
   $vararg_ptr8 = ((($vararg_buffer5)) + 8|0);
   HEAPF64[$vararg_ptr8>>3] = $__v;
   $19 = (__ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__nb,$16,$__fmt,$vararg_buffer5)|0);
   $__nc$1 = $19;
  } else {
   HEAPF64[$vararg_buffer9>>3] = $__v;
   $20 = (__ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__nb,$16,$__fmt,$vararg_buffer9)|0);
   $__nc$1 = $20;
  }
  $21 = HEAP32[$__nb>>2]|0;
  $22 = ($21|0)==(0|0);
  if ($22) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $24 = $21;$37 = $21;$__nc$2 = $__nc$1;
  }
 } else {
  $$pre4 = HEAP32[$__nb>>2]|0;
  $24 = $$pre4;$37 = 0;$__nc$2 = $__nc$0;
 }
 $23 = (($24) + ($__nc$2)|0);
 $25 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($24,$23,$__iob)|0);
 $26 = ($24|0)==($__nar|0);
 if ($26) {
  $31 = $__nar;$36 = 0;$__ob$0 = $__o;
 } else {
  $27 = $__nc$2 << 1;
  $28 = (_malloc($27)|0);
  $29 = ($28|0)==(0|0);
  if ($29) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $31 = $24;$36 = $28;$__ob$0 = $28;
  }
 }
 $30 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $30;
 __ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE($31,$25,$23,$__ob$0,$__op,$__oe,$0);
 (__ZNSt3__114__shared_count16__release_sharedEv($30)|0);
 $32 = HEAP32[$__s>>2]|0;
 HEAP32[$1>>2] = $32;
 $33 = HEAP32[$__op>>2]|0;
 $34 = HEAP32[$__oe>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 $35 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__ob$0,$33,$34,$__iob,$__fl)|0);
 _free($36);
 _free($37);
 STACKTOP = sp;return ($35|0);
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__fmt = 0, $__nar = 0, $__o = 0, $__op$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0;
 $$byval_copy = sp;
 $__fmt = sp + 72|0;
 $__nar = sp + 52|0;
 $__o = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt>>0]=HEAP8[9192>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[9192+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[9192+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[9192+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[9192+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[9192+5>>0]|0;
 $2 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$$byval_copy>>2] = $__v;
 $3 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,20,$2,$__fmt,$$byval_copy)|0);
 $4 = (($__nar) + ($3)|0);
 $5 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$4,$__iob)|0);
 $6 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $6;
 $7 = (__ZNKSt3__16locale9use_facetERNS0_2idE($0,6160)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($6)|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 32|0);
 $10 = HEAP32[$9>>2]|0;
 (FUNCTION_TABLE_iiiii[$10 & 7]($7,$__nar,$4,$__o)|0);
 $11 = (($__o) + ($3)|0);
 $12 = ($5|0)==($4|0);
 $13 = $__nar;
 $14 = $5;
 $15 = (($14) - ($13))|0;
 $16 = (($__o) + ($15)|0);
 $__op$0 = $12 ? $11 : $16;
 $17 = HEAP32[$__s>>2]|0;
 HEAP32[$1>>2] = $17;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 $18 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$__op$0,$11,$__iob,$__fl)|0);
 STACKTOP = sp;return ($18|0);
}
function __ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$byval_copy = 0, $$ph = 0, $$pre = 0, $$pre$phi3Z2D = 0, $$pre1 = 0, $$pre1$val = 0, $$pre1$val4 = 0, $$pre2 = 0, $$sroa$0$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__nm = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $$byval_copy = sp + 20|0;
 $0 = sp + 16|0;
 $1 = sp + 12|0;
 $__nm = sp;
 $2 = ((($__iob)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 & 1;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = HEAP32[$this>>2]|0;
  $7 = ((($6)) + 24|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = HEAP32[$__s>>2]|0;
  HEAP32[$0>>2] = $9;
  $10 = $__v&1;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
  $11 = (FUNCTION_TABLE_iiiiii[$8 & 31]($this,$$byval_copy,$__iob,$__fl,$10)|0);
  $$sroa$0$0 = $11;
 } else {
  $12 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
  HEAP32[$1>>2] = $12;
  $13 = (__ZNKSt3__16locale9use_facetERNS0_2idE($1,6312)|0);
  (__ZNSt3__114__shared_count16__release_sharedEv($12)|0);
  $14 = HEAP32[$13>>2]|0;
  if ($__v) {
   $15 = ((($14)) + 24|0);
   $16 = HEAP32[$15>>2]|0;
   FUNCTION_TABLE_vii[$16 & 63]($__nm,$13);
  } else {
   $17 = ((($14)) + 28|0);
   $18 = HEAP32[$17>>2]|0;
   FUNCTION_TABLE_vii[$18 & 63]($__nm,$13);
  }
  $19 = HEAP8[$__nm>>0]|0;
  $20 = $19 & 1;
  $21 = ($20<<24>>24)==(0);
  $22 = ((($__nm)) + 8|0);
  $23 = HEAP32[$22>>2]|0;
  $$pre2 = ((($__nm)) + 4|0);
  $24 = ((($__nm)) + 4|0);
  $$pre1 = ((($__nm)) + 8|0);
  $$pre$phi3Z2D = $21 ? $24 : $$pre2;
  $$ph = $21 ? $24 : $23;
  $25 = $19 & 1;
  $26 = ($25<<24>>24)==(0);
  $$pre1$val4 = HEAP32[$$pre1>>2]|0;
  $27 = HEAP32[$$pre$phi3Z2D>>2]|0;
  $28 = $19&255;
  $29 = $28 >>> 1;
  $30 = $26 ? $$pre$phi3Z2D : $$pre1$val4;
  $31 = $26 ? $29 : $27;
  $32 = (($30) + ($31<<2)|0);
  $33 = ($$ph|0)==($32|0);
  if (!($33)) {
   $35 = $$ph;
   while(1) {
    $34 = HEAP32[$35>>2]|0;
    $36 = HEAP32[$__s>>2]|0;
    $37 = ($36|0)==(0|0);
    if (!($37)) {
     $38 = ((($36)) + 24|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = ((($36)) + 28|0);
     $41 = HEAP32[$40>>2]|0;
     $42 = ($39|0)==($41|0);
     if ($42) {
      $43 = HEAP32[$36>>2]|0;
      $44 = ((($43)) + 52|0);
      $45 = HEAP32[$44>>2]|0;
      $46 = (FUNCTION_TABLE_iii[$45 & 15]($36,$34)|0);
      $$0$i$i = $46;
     } else {
      $47 = ((($39)) + 4|0);
      HEAP32[$38>>2] = $47;
      HEAP32[$39>>2] = $34;
      $$0$i$i = $34;
     }
     $48 = ($$0$i$i|0)==(-1);
     if ($48) {
      HEAP32[$__s>>2] = 0;
     }
    }
    $49 = ((($35)) + 4|0);
    $$pre = HEAP8[$__nm>>0]|0;
    $50 = $$pre & 1;
    $51 = ($50<<24>>24)==(0);
    $$pre1$val = HEAP32[$$pre1>>2]|0;
    $52 = HEAP32[$$pre$phi3Z2D>>2]|0;
    $53 = $$pre&255;
    $54 = $53 >>> 1;
    $55 = $51 ? $$pre$phi3Z2D : $$pre1$val;
    $56 = $51 ? $54 : $52;
    $57 = (($55) + ($56<<2)|0);
    $58 = ($49|0)==($57|0);
    if ($58) {
     break;
    } else {
     $35 = $49;
    }
   }
  }
  $59 = HEAP32[$__s>>2]|0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__nm);
  $$sroa$0$0 = $59;
 }
 STACKTOP = sp;return ($$sroa$0$0|0);
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0;
 $$byval_copy = sp;
 $__fmt = sp + 116|0;
 $__nar = sp + 104|0;
 $__o = sp + 20|0;
 $__op = sp + 16|0;
 $__oe = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt>>0]=HEAP8[9152>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[9152+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[9152+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[9152+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[9152+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[9152+5>>0]|0;
 $2 = ((($__fmt)) + 1|0);
 $3 = ((($__iob)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($2,9160,1,$4);
 $5 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$$byval_copy>>2] = $__v;
 $6 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,12,$5,$__fmt,$$byval_copy)|0);
 $7 = (($__nar) + ($6)|0);
 $8 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$7,$__iob)|0);
 $9 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $9;
 __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nar,$8,$7,$__o,$__op,$__oe,$0);
 (__ZNSt3__114__shared_count16__release_sharedEv($9)|0);
 $10 = HEAP32[$__s>>2]|0;
 HEAP32[$1>>2] = $10;
 $11 = HEAP32[$__op>>2]|0;
 $12 = HEAP32[$__oe>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 $13 = (__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$11,$12,$__iob,$__fl)|0);
 STACKTOP = sp;return ($13|0);
}
function __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nb,$__np,$__ne,$__ob,$__op,$__oe,$__loc) {
 $__nb = $__nb|0;
 $__np = $__np|0;
 $__ne = $__ne|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__loc = $__loc|0;
 var $$01$i$i110 = 0, $$01$i$i6 = 0, $$__dg$0 = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $__dc$07 = 0, $__dc$1 = 0, $__dg$08 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__p$09 = 0, $or$cond = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__grouping = sp;
 $0 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6152)|0);
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6312)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 FUNCTION_TABLE_vii[$4 & 63]($__grouping,$1);
 $5 = HEAP8[$__grouping>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 $8 = ((($__grouping)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = $5&255;
 $11 = $10 >>> 1;
 $12 = $7 ? $11 : $9;
 $13 = ($12|0)==(0);
 if ($13) {
  $14 = HEAP32[$0>>2]|0;
  $15 = ((($14)) + 48|0);
  $16 = HEAP32[$15>>2]|0;
  (FUNCTION_TABLE_iiiii[$16 & 7]($0,$__nb,$__ne,$__ob)|0);
  $17 = $__ne;
  $18 = $__nb;
  $19 = (($17) - ($18))|0;
  $20 = (($__ob) + ($19<<2)|0);
  HEAP32[$__oe>>2] = $20;
  $$pre$phiZ2D = $18;$117 = $20;
 } else {
  HEAP32[$__oe>>2] = $__ob;
  $21 = HEAP8[$__nb>>0]|0;
  if ((($21<<24>>24) == 43) | (($21<<24>>24) == 45)) {
   $22 = ((($__nb)) + 1|0);
   $23 = HEAP32[$0>>2]|0;
   $24 = ((($23)) + 44|0);
   $25 = HEAP32[$24>>2]|0;
   $26 = (FUNCTION_TABLE_iii[$25 & 15]($0,$21)|0);
   $27 = HEAP32[$__oe>>2]|0;
   $28 = ((($27)) + 4|0);
   HEAP32[$__oe>>2] = $28;
   HEAP32[$27>>2] = $26;
   $__nf$0 = $22;
  } else {
   $__nf$0 = $__nb;
  }
  $29 = $__ne;
  $30 = $__nf$0;
  $31 = (($29) - ($30))|0;
  $32 = ($31|0)>(1);
  if ($32) {
   $33 = HEAP8[$__nf$0>>0]|0;
   $34 = ($33<<24>>24)==(48);
   if ($34) {
    $35 = ((($__nf$0)) + 1|0);
    $36 = HEAP8[$35>>0]|0;
    if ((($36<<24>>24) == 88) | (($36<<24>>24) == 120)) {
     $37 = HEAP32[$0>>2]|0;
     $38 = ((($37)) + 44|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = (FUNCTION_TABLE_iii[$39 & 15]($0,48)|0);
     $41 = HEAP32[$__oe>>2]|0;
     $42 = ((($41)) + 4|0);
     HEAP32[$__oe>>2] = $42;
     HEAP32[$41>>2] = $40;
     $43 = ((($__nf$0)) + 2|0);
     $44 = HEAP8[$35>>0]|0;
     $45 = HEAP32[$0>>2]|0;
     $46 = ((($45)) + 44|0);
     $47 = HEAP32[$46>>2]|0;
     $48 = (FUNCTION_TABLE_iii[$47 & 15]($0,$44)|0);
     $49 = HEAP32[$__oe>>2]|0;
     $50 = ((($49)) + 4|0);
     HEAP32[$__oe>>2] = $50;
     HEAP32[$49>>2] = $48;
     $__nf$1 = $43;
    } else {
     $__nf$1 = $__nf$0;
    }
   } else {
    $__nf$1 = $__nf$0;
   }
  } else {
   $__nf$1 = $__nf$0;
  }
  $51 = ($__nf$1|0)==($__ne|0);
  if (!($51)) {
   $52 = ((($__ne)) + -1|0);
   $53 = ($__nf$1>>>0)<($52>>>0);
   if ($53) {
    $$01$i$i110 = $__nf$1;$56 = $52;
    while(1) {
     $54 = HEAP8[$$01$i$i110>>0]|0;
     $55 = HEAP8[$56>>0]|0;
     HEAP8[$$01$i$i110>>0] = $55;
     HEAP8[$56>>0] = $54;
     $57 = ((($$01$i$i110)) + 1|0);
     $58 = ((($56)) + -1|0);
     $59 = ($57>>>0)<($58>>>0);
     if ($59) {
      $$01$i$i110 = $57;$56 = $58;
     } else {
      break;
     }
    }
   }
  }
  $60 = HEAP32[$1>>2]|0;
  $61 = ((($60)) + 16|0);
  $62 = HEAP32[$61>>2]|0;
  $63 = (FUNCTION_TABLE_ii[$62 & 63]($1)|0);
  $64 = ((($__grouping)) + 8|0);
  $65 = ((($__grouping)) + 1|0);
  $66 = ($__nf$1>>>0)<($__ne>>>0);
  if ($66) {
   $__dc$07 = 0;$__dg$08 = 0;$__p$09 = $__nf$1;
   while(1) {
    $67 = HEAP8[$__grouping>>0]|0;
    $68 = $67 & 1;
    $69 = ($68<<24>>24)==(0);
    $70 = HEAP32[$64>>2]|0;
    $71 = $69 ? $65 : $70;
    $72 = (($71) + ($__dg$08)|0);
    $73 = HEAP8[$72>>0]|0;
    $74 = ($73<<24>>24)!=(0);
    $75 = $73 << 24 >> 24;
    $76 = ($__dc$07|0)==($75|0);
    $or$cond = $74 & $76;
    if ($or$cond) {
     $77 = HEAP32[$__oe>>2]|0;
     $78 = ((($77)) + 4|0);
     HEAP32[$__oe>>2] = $78;
     HEAP32[$77>>2] = $63;
     $79 = HEAP8[$__grouping>>0]|0;
     $80 = $79 & 1;
     $81 = ($80<<24>>24)==(0);
     $82 = HEAP32[$8>>2]|0;
     $83 = $79&255;
     $84 = $83 >>> 1;
     $85 = $81 ? $84 : $82;
     $86 = (($85) + -1)|0;
     $87 = ($__dg$08>>>0)<($86>>>0);
     $88 = $87&1;
     $$__dg$0 = (($88) + ($__dg$08))|0;
     $__dc$1 = 0;$__dg$1 = $$__dg$0;
    } else {
     $__dc$1 = $__dc$07;$__dg$1 = $__dg$08;
    }
    $89 = HEAP8[$__p$09>>0]|0;
    $90 = HEAP32[$0>>2]|0;
    $91 = ((($90)) + 44|0);
    $92 = HEAP32[$91>>2]|0;
    $93 = (FUNCTION_TABLE_iii[$92 & 15]($0,$89)|0);
    $94 = HEAP32[$__oe>>2]|0;
    $95 = ((($94)) + 4|0);
    HEAP32[$__oe>>2] = $95;
    HEAP32[$94>>2] = $93;
    $96 = (($__dc$1) + 1)|0;
    $97 = ((($__p$09)) + 1|0);
    $98 = ($97>>>0)<($__ne>>>0);
    if ($98) {
     $__dc$07 = $96;$__dg$08 = $__dg$1;$__p$09 = $97;
    } else {
     break;
    }
   }
  }
  $99 = $__nf$1;
  $100 = $__nb;
  $101 = (($99) - ($100))|0;
  $102 = (($__ob) + ($101<<2)|0);
  $103 = HEAP32[$__oe>>2]|0;
  $104 = ($102|0)==($103|0);
  if ($104) {
   $$pre$phiZ2D = $100;$117 = $102;
  } else {
   $105 = ((($103)) + -4|0);
   $106 = ($102>>>0)<($105>>>0);
   if ($106) {
    $$01$i$i6 = $102;$109 = $105;
    while(1) {
     $107 = HEAP32[$$01$i$i6>>2]|0;
     $108 = HEAP32[$109>>2]|0;
     HEAP32[$$01$i$i6>>2] = $108;
     HEAP32[$109>>2] = $107;
     $110 = ((($$01$i$i6)) + 4|0);
     $111 = ((($109)) + -4|0);
     $112 = ($110>>>0)<($111>>>0);
     if ($112) {
      $$01$i$i6 = $110;$109 = $111;
     } else {
      $$pre$phiZ2D = $100;$117 = $103;
      break;
     }
    }
   } else {
    $$pre$phiZ2D = $100;$117 = $103;
   }
  }
 }
 $113 = ($__np|0)==($__ne|0);
 $114 = $__np;
 $115 = (($114) - ($$pre$phiZ2D))|0;
 $116 = (($__ob) + ($115<<2)|0);
 $storemerge = $113 ? $117 : $116;
 HEAP32[$__op>>2] = $storemerge;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx($this,$__s,$__iob,$__fl,$0,$1) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0;
 $$byval_copy = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 196|0;
 $__o = sp + 32|0;
 $__op = sp + 28|0;
 $__oe = sp + 24|0;
 $2 = sp + 20|0;
 $3 = sp + 16|0;
 $4 = $__fmt;
 $5 = $4;
 HEAP32[$5>>2] = 37;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = ((($__fmt)) + 1|0);
 $9 = ((($__iob)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($8,9168,1,$10);
 $11 = (__ZNSt3__16__clocEv()|0);
 $12 = $$byval_copy;
 $13 = $12;
 HEAP32[$13>>2] = $0;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $1;
 $16 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,22,$11,$__fmt,$$byval_copy)|0);
 $17 = (($__nar) + ($16)|0);
 $18 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$17,$__iob)|0);
 $19 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$2>>2] = $19;
 __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nar,$18,$17,$__o,$__op,$__oe,$2);
 (__ZNSt3__114__shared_count16__release_sharedEv($19)|0);
 $20 = HEAP32[$__s>>2]|0;
 HEAP32[$3>>2] = $20;
 $21 = HEAP32[$__op>>2]|0;
 $22 = HEAP32[$__oe>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;
 $23 = (__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$21,$22,$__iob,$__fl)|0);
 STACKTOP = sp;return ($23|0);
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0;
 $$byval_copy = sp;
 $__fmt = sp + 116|0;
 $__nar = sp + 104|0;
 $__o = sp + 20|0;
 $__op = sp + 16|0;
 $__oe = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt>>0]=HEAP8[9152>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[9152+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[9152+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[9152+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[9152+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[9152+5>>0]|0;
 $2 = ((($__fmt)) + 1|0);
 $3 = ((($__iob)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($2,9160,0,$4);
 $5 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$$byval_copy>>2] = $__v;
 $6 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,12,$5,$__fmt,$$byval_copy)|0);
 $7 = (($__nar) + ($6)|0);
 $8 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$7,$__iob)|0);
 $9 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $9;
 __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nar,$8,$7,$__o,$__op,$__oe,$0);
 (__ZNSt3__114__shared_count16__release_sharedEv($9)|0);
 $10 = HEAP32[$__s>>2]|0;
 HEAP32[$1>>2] = $10;
 $11 = HEAP32[$__op>>2]|0;
 $12 = HEAP32[$__oe>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 $13 = (__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$11,$12,$__iob,$__fl)|0);
 STACKTOP = sp;return ($13|0);
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy($this,$__s,$__iob,$__fl,$0,$1) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0;
 $$byval_copy = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 204|0;
 $__o = sp + 32|0;
 $__op = sp + 28|0;
 $__oe = sp + 24|0;
 $2 = sp + 20|0;
 $3 = sp + 16|0;
 $4 = $__fmt;
 $5 = $4;
 HEAP32[$5>>2] = 37;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = ((($__fmt)) + 1|0);
 $9 = ((($__iob)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($8,9168,0,$10);
 $11 = (__ZNSt3__16__clocEv()|0);
 $12 = $$byval_copy;
 $13 = $12;
 HEAP32[$13>>2] = $0;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $1;
 $16 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,23,$11,$__fmt,$$byval_copy)|0);
 $17 = (($__nar) + ($16)|0);
 $18 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$17,$__iob)|0);
 $19 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$2>>2] = $19;
 __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nar,$18,$17,$__o,$__op,$__oe,$2);
 (__ZNSt3__114__shared_count16__release_sharedEv($19)|0);
 $20 = HEAP32[$__s>>2]|0;
 HEAP32[$3>>2] = $20;
 $21 = HEAP32[$__op>>2]|0;
 $22 = HEAP32[$__oe>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;
 $23 = (__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$21,$22,$__iob,$__fl)|0);
 STACKTOP = sp;return ($23|0);
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = +$__v;
 var $$byval_copy = 0, $$pre3 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__fmt = 0, $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_ptr1 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 336|0;
 $$byval_copy = sp + 296|0;
 $vararg_buffer5 = sp + 32|0;
 $vararg_buffer2 = sp + 24|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 300|0;
 $__nb = sp + 292|0;
 $__o = sp + 64|0;
 $__op = sp + 60|0;
 $__oe = sp + 56|0;
 $0 = sp + 52|0;
 $1 = sp + 48|0;
 $2 = $__fmt;
 $3 = $2;
 HEAP32[$3>>2] = 37;
 $4 = (($2) + 4)|0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = ((($__fmt)) + 1|0);
 $7 = ((($__iob)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (__ZNSt3__114__num_put_base14__format_floatEPcPKcj($6,9176,$8)|0);
 HEAP32[$__nb>>2] = $__nar;
 $10 = (__ZNSt3__16__clocEv()|0);
 if ($9) {
  $11 = ((($__iob)) + 8|0);
  $12 = HEAP32[$11>>2]|0;
  HEAP32[$vararg_buffer>>2] = $12;
  $vararg_ptr1 = ((($vararg_buffer)) + 8|0);
  HEAPF64[$vararg_ptr1>>3] = $__v;
  $13 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer)|0);
  $__nc$0 = $13;
 } else {
  HEAPF64[$vararg_buffer2>>3] = $__v;
  $14 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer2)|0);
  $__nc$0 = $14;
 }
 $15 = ($__nc$0|0)>(29);
 if ($15) {
  $16 = (__ZNSt3__16__clocEv()|0);
  $17 = ((($__iob)) + 8|0);
  $18 = HEAP32[$17>>2]|0;
  HEAP32[$vararg_buffer5>>2] = $18;
  $vararg_ptr8 = ((($vararg_buffer5)) + 8|0);
  HEAPF64[$vararg_ptr8>>3] = $__v;
  $19 = (__ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__nb,$16,$__fmt,$vararg_buffer5)|0);
  $20 = HEAP32[$__nb>>2]|0;
  $21 = ($20|0)==(0|0);
  if ($21) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $23 = $20;$37 = $20;$__nc$1 = $19;
  }
 } else {
  $$pre3 = HEAP32[$__nb>>2]|0;
  $23 = $$pre3;$37 = 0;$__nc$1 = $__nc$0;
 }
 $22 = (($23) + ($__nc$1)|0);
 $24 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($23,$22,$__iob)|0);
 $25 = ($23|0)==($__nar|0);
 if ($25) {
  $30 = $__nar;$35 = 0;$__ob$0 = $__o;
 } else {
  $26 = $__nc$1 << 3;
  $27 = (_malloc($26)|0);
  $28 = ($27|0)==(0|0);
  if ($28) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $30 = $23;$35 = $27;$__ob$0 = $27;
  }
 }
 $29 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $29;
 __ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE($30,$24,$22,$__ob$0,$__op,$__oe,$0);
 (__ZNSt3__114__shared_count16__release_sharedEv($29)|0);
 $31 = HEAP32[$__s>>2]|0;
 HEAP32[$1>>2] = $31;
 $32 = HEAP32[$__op>>2]|0;
 $33 = HEAP32[$__oe>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 $34 = (__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__ob$0,$32,$33,$__iob,$__fl)|0);
 HEAP32[$__s>>2] = $34;
 $36 = ($35|0)==(0|0);
 if (!($36)) {
  _free($35);
 }
 _free($37);
 STACKTOP = sp;return ($34|0);
}
function __ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nb,$__np,$__ne,$__ob,$__op,$__oe,$__loc) {
 $__nb = $__nb|0;
 $__np = $__np|0;
 $__ne = $__ne|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__loc = $__loc|0;
 var $$01$i$i217 = 0, $$01$i$i22 = 0, $$__dg$0 = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0;
 var $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dc$019 = 0, $__dc$1 = 0, $__dg$020 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__nf$215 = 0, $__nf$215$lcssa = 0, $__nf$3 = 0, $__ns$028 = 0, $__ns$124 = 0, $__ns$2 = 0;
 var $__p$021 = 0, $or$cond = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__grouping = sp;
 $0 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6152)|0);
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6312)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 FUNCTION_TABLE_vii[$4 & 63]($__grouping,$1);
 HEAP32[$__oe>>2] = $__ob;
 $5 = HEAP8[$__nb>>0]|0;
 if ((($5<<24>>24) == 43) | (($5<<24>>24) == 45)) {
  $6 = ((($__nb)) + 1|0);
  $7 = HEAP32[$0>>2]|0;
  $8 = ((($7)) + 44|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (FUNCTION_TABLE_iii[$9 & 15]($0,$5)|0);
  $11 = HEAP32[$__oe>>2]|0;
  $12 = ((($11)) + 4|0);
  HEAP32[$__oe>>2] = $12;
  HEAP32[$11>>2] = $10;
  $__nf$0 = $6;
 } else {
  $__nf$0 = $__nb;
 }
 $13 = $__ne;
 $14 = $__nf$0;
 $15 = (($13) - ($14))|0;
 $16 = ($15|0)>(1);
 L4: do {
  if ($16) {
   $18 = HEAP8[$__nf$0>>0]|0;
   $19 = ($18<<24>>24)==(48);
   if ($19) {
    $20 = ((($__nf$0)) + 1|0);
    $21 = HEAP8[$20>>0]|0;
    if ((($21<<24>>24) == 88) | (($21<<24>>24) == 120)) {
     $22 = HEAP32[$0>>2]|0;
     $23 = ((($22)) + 44|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = (FUNCTION_TABLE_iii[$24 & 15]($0,48)|0);
     $26 = HEAP32[$__oe>>2]|0;
     $27 = ((($26)) + 4|0);
     HEAP32[$__oe>>2] = $27;
     HEAP32[$26>>2] = $25;
     $28 = ((($__nf$0)) + 2|0);
     $29 = HEAP8[$20>>0]|0;
     $30 = HEAP32[$0>>2]|0;
     $31 = ((($30)) + 44|0);
     $32 = HEAP32[$31>>2]|0;
     $33 = (FUNCTION_TABLE_iii[$32 & 15]($0,$29)|0);
     $34 = HEAP32[$__oe>>2]|0;
     $35 = ((($34)) + 4|0);
     HEAP32[$__oe>>2] = $35;
     HEAP32[$34>>2] = $33;
     $36 = ($28>>>0)<($__ne>>>0);
     if ($36) {
      $__ns$028 = $28;
      while(1) {
       $37 = HEAP8[$__ns$028>>0]|0;
       $38 = $37 << 24 >> 24;
       $39 = (__ZNSt3__16__clocEv()|0);
       $40 = (_isxdigit_l($38,$39)|0);
       $41 = ($40|0)==(0);
       if ($41) {
        $__nf$1 = $28;$__ns$2 = $__ns$028;
        break L4;
       }
       $42 = ((($__ns$028)) + 1|0);
       $43 = ($42>>>0)<($__ne>>>0);
       if ($43) {
        $__ns$028 = $42;
       } else {
        $__nf$1 = $28;$__ns$2 = $42;
        break;
       }
      }
     } else {
      $__nf$1 = $28;$__ns$2 = $28;
     }
    } else {
     label = 4;
    }
   } else {
    label = 4;
   }
  } else {
   label = 4;
  }
 } while(0);
 L11: do {
  if ((label|0) == 4) {
   $17 = ($__nf$0>>>0)<($__ne>>>0);
   if ($17) {
    $__ns$124 = $__nf$0;
    while(1) {
     $44 = HEAP8[$__ns$124>>0]|0;
     $45 = $44 << 24 >> 24;
     $46 = (__ZNSt3__16__clocEv()|0);
     $47 = (_isdigit_l($45,$46)|0);
     $48 = ($47|0)==(0);
     if ($48) {
      $__nf$1 = $__nf$0;$__ns$2 = $__ns$124;
      break L11;
     }
     $49 = ((($__ns$124)) + 1|0);
     $50 = ($49>>>0)<($__ne>>>0);
     if ($50) {
      $__ns$124 = $49;
     } else {
      $__nf$1 = $__nf$0;$__ns$2 = $49;
      break;
     }
    }
   } else {
    $__nf$1 = $__nf$0;$__ns$2 = $__nf$0;
   }
  }
 } while(0);
 $51 = HEAP8[$__grouping>>0]|0;
 $52 = $51 & 1;
 $53 = ($52<<24>>24)==(0);
 $54 = ((($__grouping)) + 4|0);
 $55 = HEAP32[$54>>2]|0;
 $56 = $51&255;
 $57 = $56 >>> 1;
 $58 = $53 ? $57 : $55;
 $59 = ($58|0)==(0);
 if ($59) {
  $60 = HEAP32[$__oe>>2]|0;
  $61 = HEAP32[$0>>2]|0;
  $62 = ((($61)) + 48|0);
  $63 = HEAP32[$62>>2]|0;
  (FUNCTION_TABLE_iiiii[$63 & 7]($0,$__nf$1,$__ns$2,$60)|0);
  $64 = $__ns$2;
  $65 = $__nf$1;
  $66 = (($64) - ($65))|0;
  $67 = HEAP32[$__oe>>2]|0;
  $68 = (($67) + ($66<<2)|0);
  HEAP32[$__oe>>2] = $68;
  $$pre$phiZ2D = $0;$162 = $68;
 } else {
  $69 = ($__nf$1|0)==($__ns$2|0);
  if (!($69)) {
   $70 = ((($__ns$2)) + -1|0);
   $71 = ($__nf$1>>>0)<($70>>>0);
   if ($71) {
    $$01$i$i22 = $__nf$1;$74 = $70;
    while(1) {
     $72 = HEAP8[$$01$i$i22>>0]|0;
     $73 = HEAP8[$74>>0]|0;
     HEAP8[$$01$i$i22>>0] = $73;
     HEAP8[$74>>0] = $72;
     $75 = ((($$01$i$i22)) + 1|0);
     $76 = ((($74)) + -1|0);
     $77 = ($75>>>0)<($76>>>0);
     if ($77) {
      $$01$i$i22 = $75;$74 = $76;
     } else {
      break;
     }
    }
   }
  }
  $78 = HEAP32[$1>>2]|0;
  $79 = ((($78)) + 16|0);
  $80 = HEAP32[$79>>2]|0;
  $81 = (FUNCTION_TABLE_ii[$80 & 63]($1)|0);
  $82 = ((($__grouping)) + 8|0);
  $83 = ((($__grouping)) + 1|0);
  $84 = ($__nf$1>>>0)<($__ns$2>>>0);
  if ($84) {
   $__dc$019 = 0;$__dg$020 = 0;$__p$021 = $__nf$1;
   while(1) {
    $85 = HEAP8[$__grouping>>0]|0;
    $86 = $85 & 1;
    $87 = ($86<<24>>24)==(0);
    $88 = HEAP32[$82>>2]|0;
    $89 = $87 ? $83 : $88;
    $90 = (($89) + ($__dg$020)|0);
    $91 = HEAP8[$90>>0]|0;
    $92 = ($91<<24>>24)>(0);
    $93 = $91 << 24 >> 24;
    $94 = ($__dc$019|0)==($93|0);
    $or$cond = $92 & $94;
    if ($or$cond) {
     $95 = HEAP32[$__oe>>2]|0;
     $96 = ((($95)) + 4|0);
     HEAP32[$__oe>>2] = $96;
     HEAP32[$95>>2] = $81;
     $97 = HEAP8[$__grouping>>0]|0;
     $98 = $97 & 1;
     $99 = ($98<<24>>24)==(0);
     $100 = HEAP32[$54>>2]|0;
     $101 = $97&255;
     $102 = $101 >>> 1;
     $103 = $99 ? $102 : $100;
     $104 = (($103) + -1)|0;
     $105 = ($__dg$020>>>0)<($104>>>0);
     $106 = $105&1;
     $$__dg$0 = (($106) + ($__dg$020))|0;
     $__dc$1 = 0;$__dg$1 = $$__dg$0;
    } else {
     $__dc$1 = $__dc$019;$__dg$1 = $__dg$020;
    }
    $107 = HEAP8[$__p$021>>0]|0;
    $108 = HEAP32[$0>>2]|0;
    $109 = ((($108)) + 44|0);
    $110 = HEAP32[$109>>2]|0;
    $111 = (FUNCTION_TABLE_iii[$110 & 15]($0,$107)|0);
    $112 = HEAP32[$__oe>>2]|0;
    $113 = ((($112)) + 4|0);
    HEAP32[$__oe>>2] = $113;
    HEAP32[$112>>2] = $111;
    $114 = (($__dc$1) + 1)|0;
    $115 = ((($__p$021)) + 1|0);
    $116 = ($115>>>0)<($__ns$2>>>0);
    if ($116) {
     $__dc$019 = $114;$__dg$020 = $__dg$1;$__p$021 = $115;
    } else {
     break;
    }
   }
  }
  $117 = $__nf$1;
  $118 = $__nb;
  $119 = (($117) - ($118))|0;
  $120 = (($__ob) + ($119<<2)|0);
  $121 = HEAP32[$__oe>>2]|0;
  $122 = ($120|0)==($121|0);
  if ($122) {
   $$pre$phiZ2D = $0;$162 = $120;
  } else {
   $123 = ((($121)) + -4|0);
   $124 = ($120>>>0)<($123>>>0);
   if ($124) {
    $$01$i$i217 = $120;$128 = $123;
    while(1) {
     $126 = HEAP32[$$01$i$i217>>2]|0;
     $127 = HEAP32[$128>>2]|0;
     HEAP32[$$01$i$i217>>2] = $127;
     HEAP32[$128>>2] = $126;
     $129 = ((($$01$i$i217)) + 4|0);
     $130 = ((($128)) + -4|0);
     $131 = ($129>>>0)<($130>>>0);
     if ($131) {
      $$01$i$i217 = $129;$128 = $130;
     } else {
      $$pre$phiZ2D = $0;$162 = $121;
      break;
     }
    }
   } else {
    $$pre$phiZ2D = $0;$162 = $121;
   }
  }
 }
 $125 = ($__ns$2>>>0)<($__ne>>>0);
 L36: do {
  if ($125) {
   $__nf$215 = $__ns$2;
   while(1) {
    $132 = HEAP8[$__nf$215>>0]|0;
    $133 = ($132<<24>>24)==(46);
    if ($133) {
     $__nf$215$lcssa = $__nf$215;
     break;
    }
    $141 = HEAP32[$$pre$phiZ2D>>2]|0;
    $142 = ((($141)) + 44|0);
    $143 = HEAP32[$142>>2]|0;
    $144 = (FUNCTION_TABLE_iii[$143 & 15]($0,$132)|0);
    $145 = HEAP32[$__oe>>2]|0;
    $146 = ((($145)) + 4|0);
    HEAP32[$__oe>>2] = $146;
    HEAP32[$145>>2] = $144;
    $147 = ((($__nf$215)) + 1|0);
    $148 = ($147>>>0)<($__ne>>>0);
    if ($148) {
     $__nf$215 = $147;
    } else {
     $152 = $146;$__nf$3 = $147;
     break L36;
    }
   }
   $134 = HEAP32[$1>>2]|0;
   $135 = ((($134)) + 12|0);
   $136 = HEAP32[$135>>2]|0;
   $137 = (FUNCTION_TABLE_ii[$136 & 63]($1)|0);
   $138 = HEAP32[$__oe>>2]|0;
   $139 = ((($138)) + 4|0);
   HEAP32[$__oe>>2] = $139;
   HEAP32[$138>>2] = $137;
   $140 = ((($__nf$215$lcssa)) + 1|0);
   $152 = $139;$__nf$3 = $140;
  } else {
   $152 = $162;$__nf$3 = $__ns$2;
  }
 } while(0);
 $149 = HEAP32[$0>>2]|0;
 $150 = ((($149)) + 48|0);
 $151 = HEAP32[$150>>2]|0;
 (FUNCTION_TABLE_iiiii[$151 & 7]($0,$__nf$3,$__ne,$152)|0);
 $153 = $__nf$3;
 $154 = (($13) - ($153))|0;
 $155 = HEAP32[$__oe>>2]|0;
 $156 = (($155) + ($154<<2)|0);
 HEAP32[$__oe>>2] = $156;
 $157 = ($__np|0)==($__ne|0);
 $158 = $__np;
 $159 = $__nb;
 $160 = (($158) - ($159))|0;
 $161 = (($__ob) + ($160<<2)|0);
 $storemerge = $157 ? $156 : $161;
 HEAP32[$__op>>2] = $storemerge;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = +$__v;
 var $$byval_copy = 0, $$pre3 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $__fmt = 0, $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0;
 $$byval_copy = sp + 304|0;
 $vararg_buffer9 = sp + 48|0;
 $vararg_buffer5 = sp + 32|0;
 $vararg_buffer2 = sp + 24|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 308|0;
 $__nb = sp + 300|0;
 $__o = sp + 72|0;
 $__op = sp + 68|0;
 $__oe = sp + 64|0;
 $0 = sp + 60|0;
 $1 = sp + 56|0;
 $2 = $__fmt;
 $3 = $2;
 HEAP32[$3>>2] = 37;
 $4 = (($2) + 4)|0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = ((($__fmt)) + 1|0);
 $7 = ((($__iob)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (__ZNSt3__114__num_put_base14__format_floatEPcPKcj($6,9184,$8)|0);
 HEAP32[$__nb>>2] = $__nar;
 $10 = (__ZNSt3__16__clocEv()|0);
 if ($9) {
  $11 = ((($__iob)) + 8|0);
  $12 = HEAP32[$11>>2]|0;
  HEAP32[$vararg_buffer>>2] = $12;
  $vararg_ptr1 = ((($vararg_buffer)) + 8|0);
  HEAPF64[$vararg_ptr1>>3] = $__v;
  $13 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer)|0);
  $__nc$0 = $13;
 } else {
  HEAPF64[$vararg_buffer2>>3] = $__v;
  $14 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer2)|0);
  $__nc$0 = $14;
 }
 $15 = ($__nc$0|0)>(29);
 if ($15) {
  $16 = (__ZNSt3__16__clocEv()|0);
  if ($9) {
   $17 = ((($__iob)) + 8|0);
   $18 = HEAP32[$17>>2]|0;
   HEAP32[$vararg_buffer5>>2] = $18;
   $vararg_ptr8 = ((($vararg_buffer5)) + 8|0);
   HEAPF64[$vararg_ptr8>>3] = $__v;
   $19 = (__ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__nb,$16,$__fmt,$vararg_buffer5)|0);
   $__nc$1 = $19;
  } else {
   HEAPF64[$vararg_buffer9>>3] = $__v;
   $20 = (__ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__nb,$16,$__fmt,$vararg_buffer9)|0);
   $__nc$1 = $20;
  }
  $21 = HEAP32[$__nb>>2]|0;
  $22 = ($21|0)==(0|0);
  if ($22) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $24 = $21;$38 = $21;$__nc$2 = $__nc$1;
  }
 } else {
  $$pre3 = HEAP32[$__nb>>2]|0;
  $24 = $$pre3;$38 = 0;$__nc$2 = $__nc$0;
 }
 $23 = (($24) + ($__nc$2)|0);
 $25 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($24,$23,$__iob)|0);
 $26 = ($24|0)==($__nar|0);
 if ($26) {
  $31 = $__nar;$36 = 0;$__ob$0 = $__o;
 } else {
  $27 = $__nc$2 << 3;
  $28 = (_malloc($27)|0);
  $29 = ($28|0)==(0|0);
  if ($29) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $31 = $24;$36 = $28;$__ob$0 = $28;
  }
 }
 $30 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $30;
 __ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE($31,$25,$23,$__ob$0,$__op,$__oe,$0);
 (__ZNSt3__114__shared_count16__release_sharedEv($30)|0);
 $32 = HEAP32[$__s>>2]|0;
 HEAP32[$1>>2] = $32;
 $33 = HEAP32[$__op>>2]|0;
 $34 = HEAP32[$__oe>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 $35 = (__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__ob$0,$33,$34,$__iob,$__fl)|0);
 HEAP32[$__s>>2] = $35;
 $37 = ($36|0)==(0|0);
 if (!($37)) {
  _free($36);
 }
 _free($38);
 STACKTOP = sp;return ($35|0);
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__fmt = 0, $__nar = 0, $__o = 0, $__op$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0;
 $$byval_copy = sp;
 $__fmt = sp + 180|0;
 $__nar = sp + 160|0;
 $__o = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt>>0]=HEAP8[9192>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[9192+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[9192+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[9192+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[9192+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[9192+5>>0]|0;
 $2 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$$byval_copy>>2] = $__v;
 $3 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,20,$2,$__fmt,$$byval_copy)|0);
 $4 = (($__nar) + ($3)|0);
 $5 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$4,$__iob)|0);
 $6 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $6;
 $7 = (__ZNKSt3__16locale9use_facetERNS0_2idE($0,6152)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($6)|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 48|0);
 $10 = HEAP32[$9>>2]|0;
 (FUNCTION_TABLE_iiiii[$10 & 7]($7,$__nar,$4,$__o)|0);
 $11 = (($__o) + ($3<<2)|0);
 $12 = ($5|0)==($4|0);
 $13 = $__nar;
 $14 = $5;
 $15 = (($14) - ($13))|0;
 $16 = (($__o) + ($15<<2)|0);
 $__op$0 = $12 ? $11 : $16;
 $17 = HEAP32[$__s>>2]|0;
 HEAP32[$1>>2] = $17;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 $18 = (__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$__op$0,$11,$__iob,$__fl)|0);
 STACKTOP = sp;return ($18|0);
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$__b,$__e,$__iob,$__err,$__tm,$__fmtb,$__fmte) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 $__fmtb = $__fmtb|0;
 $__fmte = $__fmte|0;
 var $$0$i$i = 0, $$0$i$i26 = 0, $$0$ph$be = 0, $$0$ph86 = 0, $$0$pn = 0, $$2 = 0, $$2$lcssa = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$lcssa = 0, $$lcssa94 = 0, $$lcssa95 = 0, $$pre$i$i$i17 = 0, $$pre$i$i$i8 = 0, $$pre$i2$i$i21 = 0, $$pre$i2$i$i2139 = 0, $$pre$i2$i$i2140 = 0, $$pre$pre = 0, $0 = 0, $1 = 0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__cmd$0 = 0, $__opt$0 = 0, $isascii1$i = 0, $isascii1$i24 = 0, $isascii1$i5 = 0, $or$cond84 = 0, $sext = 0, $tmp$i$i23 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $$byval_copy1 = sp + 16|0;
 $$byval_copy = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 $2 = sp;
 $3 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $3;
 $4 = (__ZNKSt3__16locale9use_facetERNS0_2idE($0,6160)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($3)|0);
 HEAP32[$__err>>2] = 0;
 $5 = ((($4)) + 8|0);
 $6 = ($__fmtb|0)==($__fmte|0);
 $7 = HEAP32[$__b>>2]|0;
 L1: do {
  if ($6) {
   $$pre$i$i$i8 = $7;
  } else {
   $$0$ph86 = $__fmtb;$8 = $7;
   L2: while(1) {
    $9 = ($8|0)==(0|0);
    $10 = $8;
    if ($9) {
     $21 = 0;$59 = $10;
    } else {
     $11 = ((($8)) + 12|0);
     $12 = HEAP32[$11>>2]|0;
     $13 = ((($8)) + 16|0);
     $14 = HEAP32[$13>>2]|0;
     $15 = ($12|0)==($14|0);
     if ($15) {
      $16 = HEAP32[$8>>2]|0;
      $17 = ((($16)) + 36|0);
      $18 = HEAP32[$17>>2]|0;
      $19 = (FUNCTION_TABLE_ii[$18 & 63]($8)|0);
      $20 = ($19|0)==(-1);
      if ($20) {
       HEAP32[$__b>>2] = 0;
       $21 = 0;$59 = 0;
      } else {
       $21 = $8;$59 = $10;
      }
     } else {
      $21 = $8;$59 = $10;
     }
    }
    $22 = ($21|0)==(0|0);
    $23 = HEAP32[$__e>>2]|0;
    $24 = ($23|0)==(0|0);
    $25 = $23;
    do {
     if ($24) {
      $190 = $25;
      label = 11;
     } else {
      $26 = ((($23)) + 12|0);
      $27 = HEAP32[$26>>2]|0;
      $28 = ((($23)) + 16|0);
      $29 = HEAP32[$28>>2]|0;
      $30 = ($27|0)==($29|0);
      if ($30) {
       $31 = HEAP32[$23>>2]|0;
       $32 = ((($31)) + 36|0);
       $33 = HEAP32[$32>>2]|0;
       $34 = (FUNCTION_TABLE_ii[$33 & 63]($23)|0);
       $35 = ($34|0)==(-1);
       if ($35) {
        HEAP32[$__e>>2] = 0;
        $190 = 0;
        label = 11;
        break;
       }
      }
      if ($22) {
       $191 = $23;$60 = $25;
      } else {
       $$lcssa = $21;
       label = 12;
       break L2;
      }
     }
    } while(0);
    if ((label|0) == 11) {
     label = 0;
     if ($22) {
      $$lcssa = $21;
      label = 12;
      break;
     } else {
      $191 = 0;$60 = $190;
     }
    }
    $36 = HEAP8[$$0$ph86>>0]|0;
    $37 = HEAP32[$4>>2]|0;
    $38 = ((($37)) + 36|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_iiii[$39 & 31]($4,$36,0)|0);
    $41 = ($40<<24>>24)==(37);
    L18: do {
     if ($41) {
      $42 = ((($$0$ph86)) + 1|0);
      $43 = ($42|0)==($__fmte|0);
      if ($43) {
       $$lcssa94 = $21;
       label = 15;
       break L2;
      }
      $44 = HEAP8[$42>>0]|0;
      $45 = HEAP32[$4>>2]|0;
      $46 = ((($45)) + 36|0);
      $47 = HEAP32[$46>>2]|0;
      $48 = (FUNCTION_TABLE_iiii[$47 & 31]($4,$44,0)|0);
      if ((($48<<24>>24) == 48) | (($48<<24>>24) == 69)) {
       $49 = ((($$0$ph86)) + 2|0);
       $50 = ($49|0)==($__fmte|0);
       if ($50) {
        $$lcssa95 = $21;
        label = 18;
        break L2;
       }
       $51 = HEAP8[$49>>0]|0;
       $52 = HEAP32[$4>>2]|0;
       $53 = ((($52)) + 36|0);
       $54 = HEAP32[$53>>2]|0;
       $55 = (FUNCTION_TABLE_iiii[$54 & 31]($4,$51,0)|0);
       $63 = $42;$__cmd$0 = $55;$__opt$0 = $48;
      } else {
       $63 = $$0$ph86;$__cmd$0 = $48;$__opt$0 = 0;
      }
      $56 = HEAP32[$this>>2]|0;
      $57 = ((($56)) + 36|0);
      $58 = HEAP32[$57>>2]|0;
      HEAP32[$1>>2] = $59;
      HEAP32[$2>>2] = $60;
      ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
      ;HEAP32[$$byval_copy1>>2]=HEAP32[$2>>2]|0;
      $61 = (FUNCTION_TABLE_iiiiiiiii[$58 & 15]($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,$__cmd$0,$__opt$0)|0);
      HEAP32[$__b>>2] = $61;
      $62 = ((($63)) + 2|0);
      $$0$ph$be = $62;
     } else {
      $67 = HEAP8[$$0$ph86>>0]|0;
      $isascii1$i = ($67<<24>>24)>(-1);
      if ($isascii1$i) {
       $68 = $67 << 24 >> 24;
       $69 = HEAP32[$5>>2]|0;
       $70 = (($69) + ($68<<1)|0);
       $71 = HEAP16[$70>>1]|0;
       $72 = $71 & 8192;
       $73 = ($72<<16>>16)==(0);
       if (!($73)) {
        $$0$pn = $$0$ph86;
        while(1) {
         $$2 = ((($$0$pn)) + 1|0);
         $74 = ($$2|0)==($__fmte|0);
         if ($74) {
          $$2$lcssa = $__fmte;
          break;
         }
         $75 = HEAP8[$$2>>0]|0;
         $isascii1$i5 = ($75<<24>>24)>(-1);
         if (!($isascii1$i5)) {
          $$2$lcssa = $$2;
          break;
         }
         $76 = $75 << 24 >> 24;
         $77 = (($69) + ($76<<1)|0);
         $78 = HEAP16[$77>>1]|0;
         $79 = $78 & 8192;
         $80 = ($79<<16>>16)==(0);
         if ($80) {
          $$2$lcssa = $$2;
          break;
         } else {
          $$0$pn = $$2;
         }
        }
        $$pre$i$i$i17 = $21;$$pre$i2$i$i21 = $191;$94 = $191;
        while(1) {
         $81 = ($$pre$i$i$i17|0)==(0|0);
         if ($81) {
          $92 = 0;
         } else {
          $82 = ((($$pre$i$i$i17)) + 12|0);
          $83 = HEAP32[$82>>2]|0;
          $84 = ((($$pre$i$i$i17)) + 16|0);
          $85 = HEAP32[$84>>2]|0;
          $86 = ($83|0)==($85|0);
          if ($86) {
           $87 = HEAP32[$$pre$i$i$i17>>2]|0;
           $88 = ((($87)) + 36|0);
           $89 = HEAP32[$88>>2]|0;
           $90 = (FUNCTION_TABLE_ii[$89 & 63]($$pre$i$i$i17)|0);
           $91 = ($90|0)==(-1);
           if ($91) {
            HEAP32[$__b>>2] = 0;
            $92 = 0;
           } else {
            $92 = $$pre$i$i$i17;
           }
          } else {
           $92 = $$pre$i$i$i17;
          }
         }
         $93 = ($92|0)==(0|0);
         $95 = ($94|0)==(0|0);
         do {
          if ($95) {
           $$pre$i2$i$i2140 = $$pre$i2$i$i21;
           label = 37;
          } else {
           $96 = ((($94)) + 12|0);
           $97 = HEAP32[$96>>2]|0;
           $98 = ((($94)) + 16|0);
           $99 = HEAP32[$98>>2]|0;
           $100 = ($97|0)==($99|0);
           if (!($100)) {
            if ($93) {
             $$pre$i2$i$i2139 = $$pre$i2$i$i21;$192 = $94;
             break;
            } else {
             $$0$ph$be = $$2$lcssa;
             break L18;
            }
           }
           $101 = HEAP32[$94>>2]|0;
           $102 = ((($101)) + 36|0);
           $103 = HEAP32[$102>>2]|0;
           $104 = (FUNCTION_TABLE_ii[$103 & 63]($94)|0);
           $105 = ($104|0)==(-1);
           if ($105) {
            HEAP32[$__e>>2] = 0;
            $$pre$i2$i$i2140 = 0;
            label = 37;
            break;
           } else {
            $106 = ($$pre$i2$i$i21|0)==(0|0);
            $tmp$i$i23 = $93 ^ $106;
            if ($tmp$i$i23) {
             $$pre$i2$i$i2139 = $$pre$i2$i$i21;$192 = $$pre$i2$i$i21;
             break;
            } else {
             $$0$ph$be = $$2$lcssa;
             break L18;
            }
           }
          }
         } while(0);
         if ((label|0) == 37) {
          label = 0;
          if ($93) {
           $$0$ph$be = $$2$lcssa;
           break L18;
          } else {
           $$pre$i2$i$i2139 = $$pre$i2$i$i2140;$192 = 0;
          }
         }
         $107 = ((($92)) + 12|0);
         $108 = HEAP32[$107>>2]|0;
         $109 = ((($92)) + 16|0);
         $110 = HEAP32[$109>>2]|0;
         $111 = ($108|0)==($110|0);
         if ($111) {
          $112 = HEAP32[$92>>2]|0;
          $113 = ((($112)) + 36|0);
          $114 = HEAP32[$113>>2]|0;
          $115 = (FUNCTION_TABLE_ii[$114 & 63]($92)|0);
          $$0$i$i = $115;
         } else {
          $116 = HEAP8[$108>>0]|0;
          $117 = $116&255;
          $$0$i$i = $117;
         }
         $118 = $$0$i$i&255;
         $isascii1$i24 = ($118<<24>>24)>(-1);
         if (!($isascii1$i24)) {
          $$0$ph$be = $$2$lcssa;
          break L18;
         }
         $sext = $$0$i$i << 24;
         $119 = $sext >> 24;
         $120 = HEAP32[$5>>2]|0;
         $121 = (($120) + ($119<<1)|0);
         $122 = HEAP16[$121>>1]|0;
         $123 = $122 & 8192;
         $124 = ($123<<16>>16)==(0);
         if ($124) {
          $$0$ph$be = $$2$lcssa;
          break L18;
         }
         $125 = HEAP32[$107>>2]|0;
         $126 = HEAP32[$109>>2]|0;
         $127 = ($125|0)==($126|0);
         if ($127) {
          $128 = HEAP32[$92>>2]|0;
          $129 = ((($128)) + 40|0);
          $130 = HEAP32[$129>>2]|0;
          (FUNCTION_TABLE_ii[$130 & 63]($92)|0);
          $$pre$i$i$i17 = $92;$$pre$i2$i$i21 = $$pre$i2$i$i2139;$94 = $192;
          continue;
         } else {
          $131 = ((($125)) + 1|0);
          HEAP32[$107>>2] = $131;
          $$pre$i$i$i17 = $92;$$pre$i2$i$i21 = $$pre$i2$i$i2139;$94 = $192;
          continue;
         }
        }
       }
      }
      $132 = ((($21)) + 12|0);
      $133 = HEAP32[$132>>2]|0;
      $134 = ((($21)) + 16|0);
      $135 = HEAP32[$134>>2]|0;
      $136 = ($133|0)==($135|0);
      if ($136) {
       $137 = HEAP32[$21>>2]|0;
       $138 = ((($137)) + 36|0);
       $139 = HEAP32[$138>>2]|0;
       $140 = (FUNCTION_TABLE_ii[$139 & 63]($21)|0);
       $$0$i$i26 = $140;
      } else {
       $141 = HEAP8[$133>>0]|0;
       $142 = $141&255;
       $$0$i$i26 = $142;
      }
      $143 = $$0$i$i26&255;
      $144 = HEAP32[$4>>2]|0;
      $145 = ((($144)) + 12|0);
      $146 = HEAP32[$145>>2]|0;
      $147 = (FUNCTION_TABLE_iii[$146 & 15]($4,$143)|0);
      $148 = HEAP8[$$0$ph86>>0]|0;
      $149 = HEAP32[$4>>2]|0;
      $150 = ((($149)) + 12|0);
      $151 = HEAP32[$150>>2]|0;
      $152 = (FUNCTION_TABLE_iii[$151 & 15]($4,$148)|0);
      $153 = ($147<<24>>24)==($152<<24>>24);
      if (!($153)) {
       label = 55;
       break L2;
      }
      $154 = HEAP32[$132>>2]|0;
      $155 = HEAP32[$134>>2]|0;
      $156 = ($154|0)==($155|0);
      if ($156) {
       $157 = HEAP32[$21>>2]|0;
       $158 = ((($157)) + 40|0);
       $159 = HEAP32[$158>>2]|0;
       (FUNCTION_TABLE_ii[$159 & 63]($21)|0);
      } else {
       $160 = ((($154)) + 1|0);
       HEAP32[$132>>2] = $160;
      }
      $161 = ((($$0$ph86)) + 1|0);
      $$0$ph$be = $161;
     }
    } while(0);
    $$pre$pre = HEAP32[$__err>>2]|0;
    $64 = ($$0$ph$be|0)!=($__fmte|0);
    $65 = ($$pre$pre|0)==(0);
    $or$cond84 = $64 & $65;
    $66 = HEAP32[$__b>>2]|0;
    if ($or$cond84) {
     $$0$ph86 = $$0$ph$be;$8 = $66;
    } else {
     $$pre$i$i$i8 = $66;
     break L1;
    }
   }
   if ((label|0) == 12) {
    HEAP32[$__err>>2] = 4;
    $$pre$i$i$i8 = $$lcssa;
    break;
   }
   else if ((label|0) == 15) {
    HEAP32[$__err>>2] = 4;
    $$pre$i$i$i8 = $$lcssa94;
    break;
   }
   else if ((label|0) == 18) {
    HEAP32[$__err>>2] = 4;
    $$pre$i$i$i8 = $$lcssa95;
    break;
   }
   else if ((label|0) == 55) {
    HEAP32[$__err>>2] = 4;
    $162 = HEAP32[$__b>>2]|0;
    $$pre$i$i$i8 = $162;
    break;
   }
  }
 } while(0);
 $163 = ($$pre$i$i$i8|0)==(0|0);
 if ($163) {
  $174 = 0;
 } else {
  $164 = ((($$pre$i$i$i8)) + 12|0);
  $165 = HEAP32[$164>>2]|0;
  $166 = ((($$pre$i$i$i8)) + 16|0);
  $167 = HEAP32[$166>>2]|0;
  $168 = ($165|0)==($167|0);
  if ($168) {
   $169 = HEAP32[$$pre$i$i$i8>>2]|0;
   $170 = ((($169)) + 36|0);
   $171 = HEAP32[$170>>2]|0;
   $172 = (FUNCTION_TABLE_ii[$171 & 63]($$pre$i$i$i8)|0);
   $173 = ($172|0)==(-1);
   if ($173) {
    HEAP32[$__b>>2] = 0;
    $174 = 0;
   } else {
    $174 = $$pre$i$i$i8;
   }
  } else {
   $174 = $$pre$i$i$i8;
  }
 }
 $175 = ($174|0)==(0|0);
 $176 = HEAP32[$__e>>2]|0;
 $177 = ($176|0)==(0|0);
 do {
  if ($177) {
   label = 65;
  } else {
   $178 = ((($176)) + 12|0);
   $179 = HEAP32[$178>>2]|0;
   $180 = ((($176)) + 16|0);
   $181 = HEAP32[$180>>2]|0;
   $182 = ($179|0)==($181|0);
   if ($182) {
    $183 = HEAP32[$176>>2]|0;
    $184 = ((($183)) + 36|0);
    $185 = HEAP32[$184>>2]|0;
    $186 = (FUNCTION_TABLE_ii[$185 & 63]($176)|0);
    $187 = ($186|0)==(-1);
    if ($187) {
     HEAP32[$__e>>2] = 0;
     label = 65;
     break;
    }
   }
   if (!($175)) {
    label = 66;
   }
  }
 } while(0);
 if ((label|0) == 65) {
  if ($175) {
   label = 66;
  }
 }
 if ((label|0) == 66) {
  $188 = HEAP32[$__err>>2]|0;
  $189 = $188 | 2;
  HEAP32[$__err>>2] = $189;
 }
 STACKTOP = sp;return ($174|0);
}
function __ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,9200,(9208))|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = ((($this)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($3)) + 20|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (FUNCTION_TABLE_ii[$5 & 63]($2)|0);
 $7 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $7;
 $8 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $8;
 $9 = HEAP8[$6>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($6)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($6)) + 1|0);
 $15 = $11 ? $14 : $13;
 $16 = ((($6)) + 4|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = $9&255;
 $19 = $18 >>> 1;
 $20 = $11 ? $19 : $17;
 $21 = (($15) + ($20)|0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $22 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,$15,$21)|0);
 STACKTOP = sp;return ($22|0);
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $2;
 $3 = (__ZNKSt3__16locale9use_facetERNS0_2idE($0,6160)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
 $4 = ((($__tm)) + 24|0);
 $5 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $5;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$4,$__b,$$byval_copy,$__err,$3);
 $6 = HEAP32[$__b>>2]|0;
 STACKTOP = sp;return ($6|0);
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__w,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__w = $__w|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = ((($this)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (FUNCTION_TABLE_ii[$3 & 63]($1)|0);
 $5 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $5;
 $6 = ((($4)) + 168|0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $7 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$4,$6,$__ct,$__err,0)|0);
 $8 = $7;
 $9 = $4;
 $10 = (($8) - ($9))|0;
 $11 = ($10|0)<(168);
 if ($11) {
  $12 = (($10|0) / 12)&-1;
  $13 = (($12|0) % 7)&-1;
  HEAP32[$__w>>2] = $13;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $2;
 $3 = (__ZNKSt3__16locale9use_facetERNS0_2idE($0,6160)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
 $4 = ((($__tm)) + 16|0);
 $5 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $5;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$4,$__b,$$byval_copy,$__err,$3);
 $6 = HEAP32[$__b>>2]|0;
 STACKTOP = sp;return ($6|0);
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = ((($this)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (FUNCTION_TABLE_ii[$4 & 63]($1)|0);
 $6 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $6;
 $7 = ((($5)) + 288|0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $8 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$5,$7,$__ct,$__err,0)|0);
 $9 = $8;
 $10 = $5;
 $11 = (($9) - ($10))|0;
 $12 = ($11|0)<(288);
 if ($12) {
  $13 = (($11|0) / 12)&-1;
  $14 = (($13|0) % 12)&-1;
  HEAP32[$__m>>2] = $14;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $2;
 $3 = (__ZNKSt3__16locale9use_facetERNS0_2idE($0,6160)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
 $4 = ((($__tm)) + 20|0);
 $5 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $5;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($this,$4,$__b,$$byval_copy,$__err,$3);
 $6 = HEAP32[$__b>>2]|0;
 STACKTOP = sp;return ($6|0);
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__y,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__y = $__y|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$ = 0, $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__t$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,4)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = ($2|0)<(69);
  if ($6) {
   $7 = (($2) + 2000)|0;
   $__t$0 = $7;
  } else {
   $$off = (($2) + -69)|0;
   $8 = ($$off>>>0)<(31);
   $9 = (($2) + 1900)|0;
   $$ = $8 ? $9 : $2;
   $__t$0 = $$;
  }
  $10 = (($__t$0) + -1900)|0;
  HEAP32[$__y>>2] = $10;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc($this,$__b,$__e,$__iob,$__err,$__tm,$__fmt,$0) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $0 = $0|0;
 var $$byval_copy26 = 0, $$byval_copy30 = 0, $$sroa$07$0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0;
 $$byval_copy30 = sp + 132|0;
 $$byval_copy26 = sp + 128|0;
 $1 = sp + 124|0;
 $2 = sp + 120|0;
 $3 = sp + 116|0;
 $4 = sp + 112|0;
 $5 = sp + 108|0;
 $6 = sp + 104|0;
 $7 = sp + 100|0;
 $8 = sp + 96|0;
 $9 = sp + 92|0;
 $10 = sp + 88|0;
 $11 = sp + 84|0;
 $12 = sp + 80|0;
 $13 = sp + 76|0;
 $14 = sp + 72|0;
 $15 = sp + 68|0;
 $16 = sp + 64|0;
 $17 = sp + 60|0;
 $18 = sp + 56|0;
 $19 = sp + 52|0;
 $20 = sp + 48|0;
 $21 = sp + 44|0;
 $22 = sp + 40|0;
 $23 = sp + 36|0;
 $24 = sp + 32|0;
 $25 = sp + 28|0;
 $26 = sp + 24|0;
 $27 = sp + 20|0;
 $28 = sp + 16|0;
 $29 = sp + 12|0;
 $30 = sp + 8|0;
 $31 = sp + 4|0;
 $32 = sp;
 HEAP32[$__err>>2] = 0;
 $33 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$1>>2] = $33;
 $34 = (__ZNKSt3__16locale9use_facetERNS0_2idE($1,6160)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($33)|0);
 $35 = $__fmt << 24 >> 24;
 do {
  switch ($35|0) {
  case 109:  {
   $75 = ((($__tm)) + 16|0);
   $76 = HEAP32[$__e>>2]|0;
   HEAP32[$14>>2] = $76;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$14>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE($this,$75,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 114:  {
   $82 = HEAP32[$__b>>2]|0;
   HEAP32[$18>>2] = $82;
   $83 = HEAP32[$__e>>2]|0;
   HEAP32[$19>>2] = $83;
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$18>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$19>>2]|0;
   $84 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,9224,(9235))|0);
   HEAP32[$__b>>2] = $84;
   label = 26;
   break;
  }
  case 120:  {
   $94 = HEAP32[$this>>2]|0;
   $95 = ((($94)) + 20|0);
   $96 = HEAP32[$95>>2]|0;
   $97 = HEAP32[$__b>>2]|0;
   HEAP32[$26>>2] = $97;
   $98 = HEAP32[$__e>>2]|0;
   HEAP32[$27>>2] = $98;
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$26>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$27>>2]|0;
   $99 = (FUNCTION_TABLE_iiiiiii[$96 & 63]($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm)|0);
   $$sroa$07$0 = $99;
   break;
  }
  case 104: case 66: case 98:  {
   $38 = ((($__tm)) + 16|0);
   $39 = HEAP32[$__e>>2]|0;
   HEAP32[$3>>2] = $39;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$3>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$38,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 121:  {
   $121 = ((($__tm)) + 20|0);
   $122 = HEAP32[$__e>>2]|0;
   HEAP32[$30>>2] = $122;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$30>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($this,$121,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 82:  {
   $85 = HEAP32[$__b>>2]|0;
   HEAP32[$20>>2] = $85;
   $86 = HEAP32[$__e>>2]|0;
   HEAP32[$21>>2] = $86;
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$20>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$21>>2]|0;
   $87 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,9240,(9245))|0);
   HEAP32[$__b>>2] = $87;
   label = 26;
   break;
  }
  case 65: case 97:  {
   $36 = ((($__tm)) + 24|0);
   $37 = HEAP32[$__e>>2]|0;
   HEAP32[$2>>2] = $37;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$2>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$36,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 89:  {
   $123 = ((($__tm)) + 20|0);
   $124 = HEAP32[$__e>>2]|0;
   HEAP32[$31>>2] = $124;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$31>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE($this,$123,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 88:  {
   $100 = ((($this)) + 8|0);
   $101 = HEAP32[$100>>2]|0;
   $102 = ((($101)) + 24|0);
   $103 = HEAP32[$102>>2]|0;
   $104 = (FUNCTION_TABLE_ii[$103 & 63]($100)|0);
   $105 = HEAP32[$__b>>2]|0;
   HEAP32[$28>>2] = $105;
   $106 = HEAP32[$__e>>2]|0;
   HEAP32[$29>>2] = $106;
   $107 = HEAP8[$104>>0]|0;
   $108 = $107 & 1;
   $109 = ($108<<24>>24)==(0);
   $110 = ((($104)) + 8|0);
   $111 = HEAP32[$110>>2]|0;
   $112 = ((($104)) + 1|0);
   $113 = $109 ? $112 : $111;
   $114 = ((($104)) + 4|0);
   $115 = HEAP32[$114>>2]|0;
   $116 = $107&255;
   $117 = $116 >>> 1;
   $118 = $109 ? $117 : $115;
   $119 = (($113) + ($118)|0);
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$28>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$29>>2]|0;
   $120 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,$113,$119)|0);
   HEAP32[$__b>>2] = $120;
   label = 26;
   break;
  }
  case 84:  {
   $89 = HEAP32[$__b>>2]|0;
   HEAP32[$23>>2] = $89;
   $90 = HEAP32[$__e>>2]|0;
   HEAP32[$24>>2] = $90;
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$23>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$24>>2]|0;
   $91 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,9248,(9256))|0);
   HEAP32[$__b>>2] = $91;
   label = 26;
   break;
  }
  case 116: case 110:  {
   $79 = HEAP32[$__e>>2]|0;
   HEAP32[$16>>2] = $79;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$16>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE($this,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 106:  {
   $73 = ((($__tm)) + 28|0);
   $74 = HEAP32[$__e>>2]|0;
   HEAP32[$13>>2] = $74;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$13>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE($this,$73,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 119:  {
   $92 = ((($__tm)) + 24|0);
   $93 = HEAP32[$__e>>2]|0;
   HEAP32[$25>>2] = $93;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$25>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE($this,$92,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 83:  {
   $88 = HEAP32[$__e>>2]|0;
   HEAP32[$22>>2] = $88;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$22>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__tm,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 68:  {
   $63 = HEAP32[$__b>>2]|0;
   HEAP32[$7>>2] = $63;
   $64 = HEAP32[$__e>>2]|0;
   HEAP32[$8>>2] = $64;
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$7>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$8>>2]|0;
   $65 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,9208,(9216))|0);
   HEAP32[$__b>>2] = $65;
   label = 26;
   break;
  }
  case 70:  {
   $66 = HEAP32[$__b>>2]|0;
   HEAP32[$9>>2] = $66;
   $67 = HEAP32[$__e>>2]|0;
   HEAP32[$10>>2] = $67;
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$9>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$10>>2]|0;
   $68 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,9216,(9224))|0);
   HEAP32[$__b>>2] = $68;
   label = 26;
   break;
  }
  case 77:  {
   $77 = ((($__tm)) + 4|0);
   $78 = HEAP32[$__e>>2]|0;
   HEAP32[$15>>2] = $78;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$15>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE($this,$77,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 73:  {
   $71 = ((($__tm)) + 8|0);
   $72 = HEAP32[$__e>>2]|0;
   HEAP32[$12>>2] = $72;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$12>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this,$71,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 112:  {
   $80 = ((($__tm)) + 8|0);
   $81 = HEAP32[$__e>>2]|0;
   HEAP32[$17>>2] = $81;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$17>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE($this,$80,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 72:  {
   $69 = ((($__tm)) + 8|0);
   $70 = HEAP32[$__e>>2]|0;
   HEAP32[$11>>2] = $70;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$11>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this,$69,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 99:  {
   $40 = ((($this)) + 8|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = ((($41)) + 12|0);
   $43 = HEAP32[$42>>2]|0;
   $44 = (FUNCTION_TABLE_ii[$43 & 63]($40)|0);
   $45 = HEAP32[$__b>>2]|0;
   HEAP32[$4>>2] = $45;
   $46 = HEAP32[$__e>>2]|0;
   HEAP32[$5>>2] = $46;
   $47 = HEAP8[$44>>0]|0;
   $48 = $47 & 1;
   $49 = ($48<<24>>24)==(0);
   $50 = ((($44)) + 8|0);
   $51 = HEAP32[$50>>2]|0;
   $52 = ((($44)) + 1|0);
   $53 = $49 ? $52 : $51;
   $54 = ((($44)) + 4|0);
   $55 = HEAP32[$54>>2]|0;
   $56 = $47&255;
   $57 = $56 >>> 1;
   $58 = $49 ? $57 : $55;
   $59 = (($53) + ($58)|0);
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$4>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$5>>2]|0;
   $60 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,$53,$59)|0);
   HEAP32[$__b>>2] = $60;
   label = 26;
   break;
  }
  case 37:  {
   $125 = HEAP32[$__e>>2]|0;
   HEAP32[$32>>2] = $125;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$32>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE($this,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 101: case 100:  {
   $61 = ((($__tm)) + 12|0);
   $62 = HEAP32[$__e>>2]|0;
   HEAP32[$6>>2] = $62;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$6>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE($this,$61,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  default: {
   $126 = HEAP32[$__err>>2]|0;
   $127 = $126 | 4;
   HEAP32[$__err>>2] = $127;
   label = 26;
  }
  }
 } while(0);
 if ((label|0) == 26) {
  $128 = HEAP32[$__b>>2]|0;
  $$sroa$07$0 = $128;
 }
 STACKTOP = sp;return ($$sroa$07$0|0);
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__d,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__d = $__d|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $$off = (($2) + -1)|0;
 $6 = ($$off>>>0)<(31);
 $7 = $6 & $5;
 if ($7) {
  HEAP32[$__d>>2] = $2;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(24);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__h>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $$off = (($2) + -1)|0;
 $6 = ($$off>>>0)<(12);
 $7 = $6 & $5;
 if ($7) {
  HEAP32[$__h>>2] = $2;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__d,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__d = $__d|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,3)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(366);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__d>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(13);
 $or$cond = $6 & $5;
 if ($or$cond) {
  $7 = (($2) + -1)|0;
  HEAP32[$__m>>2] = $7;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(60);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__m>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE($this,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$0$i$i = 0, $$pre$i$i$i = 0, $$pre$i$i$i2 = 0, $$pre$i2$i$i6 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $9 = 0, $isascii1$i = 0, $sext = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($__ct)) + 8|0);
 L1: while(1) {
  $1 = HEAP32[$__b>>2]|0;
  $2 = ($1|0)==(0|0);
  do {
   if ($2) {
    $13 = 0;
   } else {
    $3 = ((($1)) + 12|0);
    $4 = HEAP32[$3>>2]|0;
    $5 = ((($1)) + 16|0);
    $6 = HEAP32[$5>>2]|0;
    $7 = ($4|0)==($6|0);
    if ($7) {
     $8 = HEAP32[$1>>2]|0;
     $9 = ((($8)) + 36|0);
     $10 = HEAP32[$9>>2]|0;
     $11 = (FUNCTION_TABLE_ii[$10 & 63]($1)|0);
     $12 = ($11|0)==(-1);
     if ($12) {
      HEAP32[$__b>>2] = 0;
      $13 = 0;
      break;
     } else {
      $$pre$i$i$i = HEAP32[$__b>>2]|0;
      $13 = $$pre$i$i$i;
      break;
     }
    } else {
     $13 = $1;
    }
   }
  } while(0);
  $14 = ($13|0)==(0|0);
  $15 = HEAP32[$__e>>2]|0;
  $16 = ($15|0)==(0|0);
  do {
   if ($16) {
    label = 12;
   } else {
    $17 = ((($15)) + 12|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ((($15)) + 16|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = ($18|0)==($20|0);
    if (!($21)) {
     if ($14) {
      $83 = $15;
      break;
     } else {
      $$pre$i2$i$i6 = $15;
      break L1;
     }
    }
    $22 = HEAP32[$15>>2]|0;
    $23 = ((($22)) + 36|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = (FUNCTION_TABLE_ii[$24 & 63]($15)|0);
    $26 = ($25|0)==(-1);
    if ($26) {
     HEAP32[$__e>>2] = 0;
     label = 12;
     break;
    } else {
     if ($14) {
      $83 = $15;
      break;
     } else {
      $$pre$i2$i$i6 = $15;
      break L1;
     }
    }
   }
  } while(0);
  if ((label|0) == 12) {
   label = 0;
   if ($14) {
    $$pre$i2$i$i6 = 0;
    break;
   } else {
    $83 = 0;
   }
  }
  $27 = HEAP32[$__b>>2]|0;
  $28 = ((($27)) + 12|0);
  $29 = HEAP32[$28>>2]|0;
  $30 = ((($27)) + 16|0);
  $31 = HEAP32[$30>>2]|0;
  $32 = ($29|0)==($31|0);
  if ($32) {
   $33 = HEAP32[$27>>2]|0;
   $34 = ((($33)) + 36|0);
   $35 = HEAP32[$34>>2]|0;
   $36 = (FUNCTION_TABLE_ii[$35 & 63]($27)|0);
   $$0$i$i = $36;
  } else {
   $37 = HEAP8[$29>>0]|0;
   $38 = $37&255;
   $$0$i$i = $38;
  }
  $39 = $$0$i$i&255;
  $isascii1$i = ($39<<24>>24)>(-1);
  if (!($isascii1$i)) {
   $$pre$i2$i$i6 = $83;
   break;
  }
  $sext = $$0$i$i << 24;
  $40 = $sext >> 24;
  $41 = HEAP32[$0>>2]|0;
  $42 = (($41) + ($40<<1)|0);
  $43 = HEAP16[$42>>1]|0;
  $44 = $43 & 8192;
  $45 = ($44<<16>>16)==(0);
  if ($45) {
   $$pre$i2$i$i6 = $83;
   break;
  }
  $46 = HEAP32[$__b>>2]|0;
  $47 = ((($46)) + 12|0);
  $48 = HEAP32[$47>>2]|0;
  $49 = ((($46)) + 16|0);
  $50 = HEAP32[$49>>2]|0;
  $51 = ($48|0)==($50|0);
  if ($51) {
   $52 = HEAP32[$46>>2]|0;
   $53 = ((($52)) + 40|0);
   $54 = HEAP32[$53>>2]|0;
   (FUNCTION_TABLE_ii[$54 & 63]($46)|0);
   continue;
  } else {
   $55 = ((($48)) + 1|0);
   HEAP32[$47>>2] = $55;
   continue;
  }
 }
 $56 = HEAP32[$__b>>2]|0;
 $57 = ($56|0)==(0|0);
 do {
  if ($57) {
   $68 = 0;
  } else {
   $58 = ((($56)) + 12|0);
   $59 = HEAP32[$58>>2]|0;
   $60 = ((($56)) + 16|0);
   $61 = HEAP32[$60>>2]|0;
   $62 = ($59|0)==($61|0);
   if ($62) {
    $63 = HEAP32[$56>>2]|0;
    $64 = ((($63)) + 36|0);
    $65 = HEAP32[$64>>2]|0;
    $66 = (FUNCTION_TABLE_ii[$65 & 63]($56)|0);
    $67 = ($66|0)==(-1);
    if ($67) {
     HEAP32[$__b>>2] = 0;
     $68 = 0;
     break;
    } else {
     $$pre$i$i$i2 = HEAP32[$__b>>2]|0;
     $68 = $$pre$i$i$i2;
     break;
    }
   } else {
    $68 = $56;
   }
  }
 } while(0);
 $69 = ($68|0)==(0|0);
 $70 = ($$pre$i2$i$i6|0)==(0|0);
 do {
  if ($70) {
   label = 32;
  } else {
   $71 = ((($$pre$i2$i$i6)) + 12|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = ((($$pre$i2$i$i6)) + 16|0);
   $74 = HEAP32[$73>>2]|0;
   $75 = ($72|0)==($74|0);
   if ($75) {
    $76 = HEAP32[$$pre$i2$i$i6>>2]|0;
    $77 = ((($76)) + 36|0);
    $78 = HEAP32[$77>>2]|0;
    $79 = (FUNCTION_TABLE_ii[$78 & 63]($$pre$i2$i$i6)|0);
    $80 = ($79|0)==(-1);
    if ($80) {
     HEAP32[$__e>>2] = 0;
     label = 32;
     break;
    }
   }
   if (!($69)) {
    label = 33;
   }
  }
 } while(0);
 if ((label|0) == 32) {
  if ($69) {
   label = 33;
  }
 }
 if ((label|0) == 33) {
  $81 = HEAP32[$__err>>2]|0;
  $82 = $81 | 2;
  HEAP32[$__err>>2] = $82;
 }
 return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = ((($this)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (FUNCTION_TABLE_ii[$4 & 63]($1)|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = $6 & 1;
 $8 = ($7<<24>>24)==(0);
 if ($8) {
  $11 = $6&255;
  $12 = $11 >>> 1;
  $23 = $12;
 } else {
  $9 = ((($5)) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $23 = $10;
 }
 $13 = ((($5)) + 12|0);
 $14 = HEAP8[$13>>0]|0;
 $15 = $14 & 1;
 $16 = ($15<<24>>24)==(0);
 if ($16) {
  $19 = $14&255;
  $20 = $19 >>> 1;
  $22 = $20;
 } else {
  $17 = ((($5)) + 16|0);
  $18 = HEAP32[$17>>2]|0;
  $22 = $18;
 }
 $21 = (0 - ($22))|0;
 $24 = ($23|0)==($21|0);
 do {
  if ($24) {
   $25 = HEAP32[$__err>>2]|0;
   $26 = $25 | 4;
   HEAP32[$__err>>2] = $26;
  } else {
   $27 = HEAP32[$__e>>2]|0;
   HEAP32[$0>>2] = $27;
   $28 = ((($5)) + 24|0);
   ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
   $29 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$5,$28,$__ct,$__err,0)|0);
   $30 = ($29|0)==($5|0);
   $31 = HEAP32[$__h>>2]|0;
   $32 = ($31|0)==(12);
   $or$cond = $30 & $32;
   if ($or$cond) {
    HEAP32[$__h>>2] = 0;
    break;
   }
   $33 = $29;
   $34 = $5;
   $35 = (($33) - ($34))|0;
   $36 = ($35|0)==(12);
   $37 = ($31|0)<(12);
   $or$cond3 = $37 & $36;
   if ($or$cond3) {
    $38 = (($31) + 12)|0;
    HEAP32[$__h>>2] = $38;
   }
  }
 } while(0);
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__s,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__s = $__s|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(61);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__s>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__w,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__w = $__w|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,1)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(7);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__w>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__y,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__y = $__y|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,4)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = (($2) + -1900)|0;
  HEAP32[$__y>>2] = $6;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE($this,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i2 = 0, $$pre$i2$i$i611 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__b>>2]|0;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $12 = 0;
  } else {
   $2 = ((($0)) + 12|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = ((($0)) + 16|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = ($3|0)==($5|0);
   if ($6) {
    $7 = HEAP32[$0>>2]|0;
    $8 = ((($7)) + 36|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = (FUNCTION_TABLE_ii[$9 & 63]($0)|0);
    $11 = ($10|0)==(-1);
    if ($11) {
     HEAP32[$__b>>2] = 0;
     $12 = 0;
     break;
    } else {
     $$pre$i$i$i = HEAP32[$__b>>2]|0;
     $12 = $$pre$i$i$i;
     break;
    }
   } else {
    $12 = $0;
   }
  }
 } while(0);
 $13 = ($12|0)==(0|0);
 $14 = HEAP32[$__e>>2]|0;
 $15 = ($14|0)==(0|0);
 do {
  if ($15) {
   label = 11;
  } else {
   $16 = ((($14)) + 12|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ((($14)) + 16|0);
   $19 = HEAP32[$18>>2]|0;
   $20 = ($17|0)==($19|0);
   if ($20) {
    $21 = HEAP32[$14>>2]|0;
    $22 = ((($21)) + 36|0);
    $23 = HEAP32[$22>>2]|0;
    $24 = (FUNCTION_TABLE_ii[$23 & 63]($14)|0);
    $25 = ($24|0)==(-1);
    if ($25) {
     HEAP32[$__e>>2] = 0;
     label = 11;
     break;
    }
   }
   if ($13) {
    $$pre$i2$i$i611 = $14;
    label = 13;
   } else {
    label = 12;
   }
  }
 } while(0);
 if ((label|0) == 11) {
  if ($13) {
   label = 12;
  } else {
   $$pre$i2$i$i611 = 0;
   label = 13;
  }
 }
 L16: do {
  if ((label|0) == 12) {
   $26 = HEAP32[$__err>>2]|0;
   $27 = $26 | 6;
   HEAP32[$__err>>2] = $27;
  }
  else if ((label|0) == 13) {
   $28 = HEAP32[$__b>>2]|0;
   $29 = ((($28)) + 12|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = ((($28)) + 16|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = ($30|0)==($32|0);
   if ($33) {
    $34 = HEAP32[$28>>2]|0;
    $35 = ((($34)) + 36|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = (FUNCTION_TABLE_ii[$36 & 63]($28)|0);
    $$0$i$i = $37;
   } else {
    $38 = HEAP8[$30>>0]|0;
    $39 = $38&255;
    $$0$i$i = $39;
   }
   $40 = $$0$i$i&255;
   $41 = HEAP32[$__ct>>2]|0;
   $42 = ((($41)) + 36|0);
   $43 = HEAP32[$42>>2]|0;
   $44 = (FUNCTION_TABLE_iiii[$43 & 31]($__ct,$40,0)|0);
   $45 = ($44<<24>>24)==(37);
   if (!($45)) {
    $46 = HEAP32[$__err>>2]|0;
    $47 = $46 | 4;
    HEAP32[$__err>>2] = $47;
    break;
   }
   $48 = HEAP32[$__b>>2]|0;
   $49 = ((($48)) + 12|0);
   $50 = HEAP32[$49>>2]|0;
   $51 = ((($48)) + 16|0);
   $52 = HEAP32[$51>>2]|0;
   $53 = ($50|0)==($52|0);
   if ($53) {
    $55 = HEAP32[$48>>2]|0;
    $56 = ((($55)) + 40|0);
    $57 = HEAP32[$56>>2]|0;
    (FUNCTION_TABLE_ii[$57 & 63]($48)|0);
    $$pre = HEAP32[$__b>>2]|0;
    $58 = ($$pre|0)==(0|0);
    if ($58) {
     $70 = 0;
    } else {
     $60 = $$pre;
     label = 21;
    }
   } else {
    $54 = ((($50)) + 1|0);
    HEAP32[$49>>2] = $54;
    $60 = $48;
    label = 21;
   }
   do {
    if ((label|0) == 21) {
     $59 = ((($60)) + 12|0);
     $61 = HEAP32[$59>>2]|0;
     $62 = ((($60)) + 16|0);
     $63 = HEAP32[$62>>2]|0;
     $64 = ($61|0)==($63|0);
     if ($64) {
      $65 = HEAP32[$60>>2]|0;
      $66 = ((($65)) + 36|0);
      $67 = HEAP32[$66>>2]|0;
      $68 = (FUNCTION_TABLE_ii[$67 & 63]($60)|0);
      $69 = ($68|0)==(-1);
      if ($69) {
       HEAP32[$__b>>2] = 0;
       $70 = 0;
       break;
      } else {
       $$pre$i$i$i2 = HEAP32[$__b>>2]|0;
       $70 = $$pre$i$i$i2;
       break;
      }
     } else {
      $70 = $60;
     }
    }
   } while(0);
   $71 = ($70|0)==(0|0);
   $72 = ($$pre$i2$i$i611|0)==(0|0);
   do {
    if ($72) {
     label = 30;
    } else {
     $73 = ((($$pre$i2$i$i611)) + 12|0);
     $74 = HEAP32[$73>>2]|0;
     $75 = ((($$pre$i2$i$i611)) + 16|0);
     $76 = HEAP32[$75>>2]|0;
     $77 = ($74|0)==($76|0);
     if ($77) {
      $78 = HEAP32[$$pre$i2$i$i611>>2]|0;
      $79 = ((($78)) + 36|0);
      $80 = HEAP32[$79>>2]|0;
      $81 = (FUNCTION_TABLE_ii[$80 & 63]($$pre$i2$i$i611)|0);
      $82 = ($81|0)==(-1);
      if ($82) {
       HEAP32[$__e>>2] = 0;
       label = 30;
       break;
      }
     }
     if ($71) {
      break L16;
     }
    }
   } while(0);
   if ((label|0) == 30) {
    if (!($71)) {
     break;
    }
   }
   $83 = HEAP32[$__err>>2]|0;
   $84 = $83 | 2;
   HEAP32[$__err>>2] = $84;
  }
 } while(0);
 return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$__b,$__e,$__iob,$__err,$__tm,$__fmtb,$__fmte) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 $__fmtb = $__fmtb|0;
 $__fmte = $__fmte|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i20 = 0, $$0$i$i$i$i5 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i11 = 0, $$0$i$i1$i$i26 = 0, $$0$i$i17 = 0, $$0$ph$be = 0, $$0$ph89 = 0, $$0$pn = 0, $$2 = 0, $$2$lcssa = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$lcssa = 0, $$lcssa97 = 0, $$lcssa98 = 0, $$ph = 0, $$pre$i$i$i22 = 0;
 var $$pre$i$i$i7 = 0, $$pre$i3$i$i13 = 0, $$pre$i3$i$i1344 = 0, $$pre$i3$i$i1345 = 0, $$pre$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;
 var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0;
 var $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0;
 var $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0;
 var $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0;
 var $184 = 0, $185 = 0, $186 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__cmd$0 = 0, $__opt$0 = 0, $or$cond87 = 0, $phitmp$i4$i$i14 = 0, $tmp$i$i16 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $$byval_copy1 = sp + 16|0;
 $$byval_copy = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 $2 = sp;
 $3 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $3;
 $4 = (__ZNKSt3__16locale9use_facetERNS0_2idE($0,6152)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($3)|0);
 HEAP32[$__err>>2] = 0;
 $5 = ($__fmtb|0)==($__fmte|0);
 $6 = HEAP32[$__b>>2]|0;
 L1: do {
  if ($5) {
   $$pre$i$i$i22 = $6;
  } else {
   $$0$ph89 = $__fmtb;$7 = $6;
   L2: while(1) {
    $8 = ($7|0)==(0|0);
    $9 = $7;
    if ($8) {
     $126 = 0;$183 = 1;$58 = $9;
    } else {
     $10 = ((($7)) + 12|0);
     $11 = HEAP32[$10>>2]|0;
     $12 = ((($7)) + 16|0);
     $13 = HEAP32[$12>>2]|0;
     $14 = ($11|0)==($13|0);
     if ($14) {
      $15 = HEAP32[$7>>2]|0;
      $16 = ((($15)) + 36|0);
      $17 = HEAP32[$16>>2]|0;
      $18 = (FUNCTION_TABLE_ii[$17 & 63]($7)|0);
      $$0$i$i$i$i = $18;
     } else {
      $19 = HEAP32[$11>>2]|0;
      $$0$i$i$i$i = $19;
     }
     $20 = ($$0$i$i$i$i|0)==(-1);
     if ($20) {
      HEAP32[$__b>>2] = 0;
      $126 = 0;$183 = 1;$58 = 0;
     } else {
      $126 = $7;$183 = 0;$58 = $9;
     }
    }
    $21 = HEAP32[$__e>>2]|0;
    $22 = ($21|0)==(0|0);
    $23 = $21;
    do {
     if ($22) {
      $$ph = $23;
      label = 14;
     } else {
      $24 = ((($21)) + 12|0);
      $25 = HEAP32[$24>>2]|0;
      $26 = ((($21)) + 16|0);
      $27 = HEAP32[$26>>2]|0;
      $28 = ($25|0)==($27|0);
      if ($28) {
       $29 = HEAP32[$21>>2]|0;
       $30 = ((($29)) + 36|0);
       $31 = HEAP32[$30>>2]|0;
       $32 = (FUNCTION_TABLE_ii[$31 & 63]($21)|0);
       $$0$i$i1$i$i = $32;
      } else {
       $33 = HEAP32[$25>>2]|0;
       $$0$i$i1$i$i = $33;
      }
      $34 = ($$0$i$i1$i$i|0)==(-1);
      if ($34) {
       HEAP32[$__e>>2] = 0;
       $$ph = 0;
       label = 14;
       break;
      } else {
       if ($183) {
        $184 = $21;$59 = $23;
        break;
       } else {
        $$lcssa = $126;
        label = 16;
        break L2;
       }
      }
     }
    } while(0);
    if ((label|0) == 14) {
     label = 0;
     if ($183) {
      $$lcssa = $126;
      label = 16;
      break;
     } else {
      $184 = 0;$59 = $$ph;
     }
    }
    $35 = HEAP32[$$0$ph89>>2]|0;
    $36 = HEAP32[$4>>2]|0;
    $37 = ((($36)) + 52|0);
    $38 = HEAP32[$37>>2]|0;
    $39 = (FUNCTION_TABLE_iiii[$38 & 31]($4,$35,0)|0);
    $40 = ($39<<24>>24)==(37);
    L24: do {
     if ($40) {
      $41 = ((($$0$ph89)) + 4|0);
      $42 = ($41|0)==($__fmte|0);
      if ($42) {
       $$lcssa97 = $126;
       label = 19;
       break L2;
      }
      $43 = HEAP32[$41>>2]|0;
      $44 = HEAP32[$4>>2]|0;
      $45 = ((($44)) + 52|0);
      $46 = HEAP32[$45>>2]|0;
      $47 = (FUNCTION_TABLE_iiii[$46 & 31]($4,$43,0)|0);
      if ((($47<<24>>24) == 48) | (($47<<24>>24) == 69)) {
       $48 = ((($$0$ph89)) + 8|0);
       $49 = ($48|0)==($__fmte|0);
       if ($49) {
        $$lcssa98 = $126;
        label = 22;
        break L2;
       }
       $50 = HEAP32[$48>>2]|0;
       $51 = HEAP32[$4>>2]|0;
       $52 = ((($51)) + 52|0);
       $53 = HEAP32[$52>>2]|0;
       $54 = (FUNCTION_TABLE_iiii[$53 & 31]($4,$50,0)|0);
       $62 = $41;$__cmd$0 = $54;$__opt$0 = $47;
      } else {
       $62 = $$0$ph89;$__cmd$0 = $47;$__opt$0 = 0;
      }
      $55 = HEAP32[$this>>2]|0;
      $56 = ((($55)) + 36|0);
      $57 = HEAP32[$56>>2]|0;
      HEAP32[$1>>2] = $58;
      HEAP32[$2>>2] = $59;
      ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
      ;HEAP32[$$byval_copy1>>2]=HEAP32[$2>>2]|0;
      $60 = (FUNCTION_TABLE_iiiiiiiii[$57 & 15]($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,$__cmd$0,$__opt$0)|0);
      HEAP32[$__b>>2] = $60;
      $61 = ((($62)) + 8|0);
      $$0$ph$be = $61;
     } else {
      $66 = HEAP32[$$0$ph89>>2]|0;
      $67 = HEAP32[$4>>2]|0;
      $68 = ((($67)) + 12|0);
      $69 = HEAP32[$68>>2]|0;
      $70 = (FUNCTION_TABLE_iiii[$69 & 31]($4,8192,$66)|0);
      if ($70) {
       $$0$pn = $$0$ph89;
      } else {
       $125 = ((($126)) + 12|0);
       $127 = HEAP32[$125>>2]|0;
       $128 = ((($126)) + 16|0);
       $129 = HEAP32[$128>>2]|0;
       $130 = ($127|0)==($129|0);
       if ($130) {
        $131 = HEAP32[$126>>2]|0;
        $132 = ((($131)) + 36|0);
        $133 = HEAP32[$132>>2]|0;
        $134 = (FUNCTION_TABLE_ii[$133 & 63]($126)|0);
        $$0$i$i17 = $134;
       } else {
        $135 = HEAP32[$127>>2]|0;
        $$0$i$i17 = $135;
       }
       $136 = HEAP32[$4>>2]|0;
       $137 = ((($136)) + 28|0);
       $138 = HEAP32[$137>>2]|0;
       $139 = (FUNCTION_TABLE_iii[$138 & 15]($4,$$0$i$i17)|0);
       $140 = HEAP32[$$0$ph89>>2]|0;
       $141 = HEAP32[$4>>2]|0;
       $142 = ((($141)) + 28|0);
       $143 = HEAP32[$142>>2]|0;
       $144 = (FUNCTION_TABLE_iii[$143 & 15]($4,$140)|0);
       $145 = ($139|0)==($144|0);
       if (!($145)) {
        label = 59;
        break L2;
       }
       $146 = HEAP32[$125>>2]|0;
       $147 = HEAP32[$128>>2]|0;
       $148 = ($146|0)==($147|0);
       if ($148) {
        $149 = HEAP32[$126>>2]|0;
        $150 = ((($149)) + 40|0);
        $151 = HEAP32[$150>>2]|0;
        (FUNCTION_TABLE_ii[$151 & 63]($126)|0);
       } else {
        $152 = ((($146)) + 4|0);
        HEAP32[$125>>2] = $152;
       }
       $153 = ((($$0$ph89)) + 4|0);
       $$0$ph$be = $153;
       break;
      }
      while(1) {
       $$2 = ((($$0$pn)) + 4|0);
       $71 = ($$2|0)==($__fmte|0);
       if ($71) {
        $$2$lcssa = $__fmte;
        break;
       }
       $72 = HEAP32[$$2>>2]|0;
       $73 = HEAP32[$4>>2]|0;
       $74 = ((($73)) + 12|0);
       $75 = HEAP32[$74>>2]|0;
       $76 = (FUNCTION_TABLE_iiii[$75 & 31]($4,8192,$72)|0);
       if ($76) {
        $$0$pn = $$2;
       } else {
        $$2$lcssa = $$2;
        break;
       }
      }
      $$pre$i$i$i7 = $126;$$pre$i3$i$i13 = $184;$89 = $184;
      while(1) {
       $77 = ($$pre$i$i$i7|0)==(0|0);
       if ($77) {
        $102 = 1;$104 = 0;
       } else {
        $78 = ((($$pre$i$i$i7)) + 12|0);
        $79 = HEAP32[$78>>2]|0;
        $80 = ((($$pre$i$i$i7)) + 16|0);
        $81 = HEAP32[$80>>2]|0;
        $82 = ($79|0)==($81|0);
        if ($82) {
         $83 = HEAP32[$$pre$i$i$i7>>2]|0;
         $84 = ((($83)) + 36|0);
         $85 = HEAP32[$84>>2]|0;
         $86 = (FUNCTION_TABLE_ii[$85 & 63]($$pre$i$i$i7)|0);
         $$0$i$i$i$i5 = $86;
        } else {
         $87 = HEAP32[$79>>2]|0;
         $$0$i$i$i$i5 = $87;
        }
        $88 = ($$0$i$i$i$i5|0)==(-1);
        if ($88) {
         HEAP32[$__b>>2] = 0;
         $102 = 1;$104 = 0;
        } else {
         $102 = 0;$104 = $$pre$i$i$i7;
        }
       }
       $90 = ($89|0)==(0|0);
       do {
        if ($90) {
         $$pre$i3$i$i1345 = $$pre$i3$i$i13;
         label = 42;
        } else {
         $91 = ((($89)) + 12|0);
         $92 = HEAP32[$91>>2]|0;
         $93 = ((($89)) + 16|0);
         $94 = HEAP32[$93>>2]|0;
         $95 = ($92|0)==($94|0);
         if ($95) {
          $96 = HEAP32[$89>>2]|0;
          $97 = ((($96)) + 36|0);
          $98 = HEAP32[$97>>2]|0;
          $99 = (FUNCTION_TABLE_ii[$98 & 63]($89)|0);
          $$0$i$i1$i$i11 = $99;
         } else {
          $100 = HEAP32[$92>>2]|0;
          $$0$i$i1$i$i11 = $100;
         }
         $101 = ($$0$i$i1$i$i11|0)==(-1);
         if ($101) {
          HEAP32[$__e>>2] = 0;
          $$pre$i3$i$i1345 = 0;
          label = 42;
          break;
         } else {
          $phitmp$i4$i$i14 = ($$pre$i3$i$i13|0)==(0|0);
          $tmp$i$i16 = $102 ^ $phitmp$i4$i$i14;
          if ($tmp$i$i16) {
           $$pre$i3$i$i1344 = $$pre$i3$i$i13;$185 = $$pre$i3$i$i13;
           break;
          } else {
           $$0$ph$be = $$2$lcssa;
           break L24;
          }
         }
        }
       } while(0);
       if ((label|0) == 42) {
        label = 0;
        if ($102) {
         $$0$ph$be = $$2$lcssa;
         break L24;
        } else {
         $$pre$i3$i$i1344 = $$pre$i3$i$i1345;$185 = 0;
        }
       }
       $103 = ((($104)) + 12|0);
       $105 = HEAP32[$103>>2]|0;
       $106 = ((($104)) + 16|0);
       $107 = HEAP32[$106>>2]|0;
       $108 = ($105|0)==($107|0);
       if ($108) {
        $109 = HEAP32[$104>>2]|0;
        $110 = ((($109)) + 36|0);
        $111 = HEAP32[$110>>2]|0;
        $112 = (FUNCTION_TABLE_ii[$111 & 63]($104)|0);
        $$0$i$i = $112;
       } else {
        $113 = HEAP32[$105>>2]|0;
        $$0$i$i = $113;
       }
       $114 = HEAP32[$4>>2]|0;
       $115 = ((($114)) + 12|0);
       $116 = HEAP32[$115>>2]|0;
       $117 = (FUNCTION_TABLE_iiii[$116 & 31]($4,8192,$$0$i$i)|0);
       if (!($117)) {
        $$0$ph$be = $$2$lcssa;
        break L24;
       }
       $118 = HEAP32[$103>>2]|0;
       $119 = HEAP32[$106>>2]|0;
       $120 = ($118|0)==($119|0);
       if ($120) {
        $121 = HEAP32[$104>>2]|0;
        $122 = ((($121)) + 40|0);
        $123 = HEAP32[$122>>2]|0;
        (FUNCTION_TABLE_ii[$123 & 63]($104)|0);
        $$pre$i$i$i7 = $104;$$pre$i3$i$i13 = $$pre$i3$i$i1344;$89 = $185;
        continue;
       } else {
        $124 = ((($118)) + 4|0);
        HEAP32[$103>>2] = $124;
        $$pre$i$i$i7 = $104;$$pre$i3$i$i13 = $$pre$i3$i$i1344;$89 = $185;
        continue;
       }
      }
     }
    } while(0);
    $$pre$pre = HEAP32[$__err>>2]|0;
    $63 = ($$0$ph$be|0)!=($__fmte|0);
    $64 = ($$pre$pre|0)==(0);
    $or$cond87 = $63 & $64;
    $65 = HEAP32[$__b>>2]|0;
    if ($or$cond87) {
     $$0$ph89 = $$0$ph$be;$7 = $65;
    } else {
     $$pre$i$i$i22 = $65;
     break L1;
    }
   }
   if ((label|0) == 16) {
    HEAP32[$__err>>2] = 4;
    $$pre$i$i$i22 = $$lcssa;
    break;
   }
   else if ((label|0) == 19) {
    HEAP32[$__err>>2] = 4;
    $$pre$i$i$i22 = $$lcssa97;
    break;
   }
   else if ((label|0) == 22) {
    HEAP32[$__err>>2] = 4;
    $$pre$i$i$i22 = $$lcssa98;
    break;
   }
   else if ((label|0) == 59) {
    HEAP32[$__err>>2] = 4;
    $154 = HEAP32[$__b>>2]|0;
    $$pre$i$i$i22 = $154;
    break;
   }
  }
 } while(0);
 $155 = ($$pre$i$i$i22|0)==(0|0);
 if ($155) {
  $182 = 0;$186 = 1;
 } else {
  $156 = ((($$pre$i$i$i22)) + 12|0);
  $157 = HEAP32[$156>>2]|0;
  $158 = ((($$pre$i$i$i22)) + 16|0);
  $159 = HEAP32[$158>>2]|0;
  $160 = ($157|0)==($159|0);
  if ($160) {
   $161 = HEAP32[$$pre$i$i$i22>>2]|0;
   $162 = ((($161)) + 36|0);
   $163 = HEAP32[$162>>2]|0;
   $164 = (FUNCTION_TABLE_ii[$163 & 63]($$pre$i$i$i22)|0);
   $$0$i$i$i$i20 = $164;
  } else {
   $165 = HEAP32[$157>>2]|0;
   $$0$i$i$i$i20 = $165;
  }
  $166 = ($$0$i$i$i$i20|0)==(-1);
  if ($166) {
   HEAP32[$__b>>2] = 0;
   $182 = 0;$186 = 1;
  } else {
   $182 = $$pre$i$i$i22;$186 = 0;
  }
 }
 $167 = HEAP32[$__e>>2]|0;
 $168 = ($167|0)==(0|0);
 do {
  if ($168) {
   label = 72;
  } else {
   $169 = ((($167)) + 12|0);
   $170 = HEAP32[$169>>2]|0;
   $171 = ((($167)) + 16|0);
   $172 = HEAP32[$171>>2]|0;
   $173 = ($170|0)==($172|0);
   if ($173) {
    $174 = HEAP32[$167>>2]|0;
    $175 = ((($174)) + 36|0);
    $176 = HEAP32[$175>>2]|0;
    $177 = (FUNCTION_TABLE_ii[$176 & 63]($167)|0);
    $$0$i$i1$i$i26 = $177;
   } else {
    $178 = HEAP32[$170>>2]|0;
    $$0$i$i1$i$i26 = $178;
   }
   $179 = ($$0$i$i1$i$i26|0)==(-1);
   if ($179) {
    HEAP32[$__e>>2] = 0;
    label = 72;
    break;
   } else {
    if ($186) {
     break;
    } else {
     label = 74;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 72) {
  if ($186) {
   label = 74;
  }
 }
 if ((label|0) == 74) {
  $180 = HEAP32[$__err>>2]|0;
  $181 = $180 | 2;
  HEAP32[$__err>>2] = $181;
 }
 STACKTOP = sp;return ($182|0);
}
function __ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,9256,(9288))|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = ((($this)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($3)) + 20|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (FUNCTION_TABLE_ii[$5 & 63]($2)|0);
 $7 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $7;
 $8 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $8;
 $9 = HEAP8[$6>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($6)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($6)) + 4|0);
 $15 = $11 ? $14 : $13;
 $16 = HEAP32[$14>>2]|0;
 $17 = $9&255;
 $18 = $17 >>> 1;
 $19 = $11 ? $18 : $16;
 $20 = (($15) + ($19<<2)|0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $21 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,$15,$20)|0);
 STACKTOP = sp;return ($21|0);
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $2;
 $3 = (__ZNKSt3__16locale9use_facetERNS0_2idE($0,6152)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
 $4 = ((($__tm)) + 24|0);
 $5 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $5;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$4,$__b,$$byval_copy,$__err,$3);
 $6 = HEAP32[$__b>>2]|0;
 STACKTOP = sp;return ($6|0);
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__w,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__w = $__w|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = ((($this)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (FUNCTION_TABLE_ii[$3 & 63]($1)|0);
 $5 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $5;
 $6 = ((($4)) + 168|0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $7 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$4,$6,$__ct,$__err,0)|0);
 $8 = $7;
 $9 = $4;
 $10 = (($8) - ($9))|0;
 $11 = ($10|0)<(168);
 if ($11) {
  $12 = (($10|0) / 12)&-1;
  $13 = (($12|0) % 7)&-1;
  HEAP32[$__w>>2] = $13;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $2;
 $3 = (__ZNKSt3__16locale9use_facetERNS0_2idE($0,6152)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
 $4 = ((($__tm)) + 16|0);
 $5 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $5;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$4,$__b,$$byval_copy,$__err,$3);
 $6 = HEAP32[$__b>>2]|0;
 STACKTOP = sp;return ($6|0);
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = ((($this)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (FUNCTION_TABLE_ii[$4 & 63]($1)|0);
 $6 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $6;
 $7 = ((($5)) + 288|0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $8 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$5,$7,$__ct,$__err,0)|0);
 $9 = $8;
 $10 = $5;
 $11 = (($9) - ($10))|0;
 $12 = ($11|0)<(288);
 if ($12) {
  $13 = (($11|0) / 12)&-1;
  $14 = (($13|0) % 12)&-1;
  HEAP32[$__m>>2] = $14;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $2;
 $3 = (__ZNKSt3__16locale9use_facetERNS0_2idE($0,6152)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
 $4 = ((($__tm)) + 20|0);
 $5 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $5;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($this,$4,$__b,$$byval_copy,$__err,$3);
 $6 = HEAP32[$__b>>2]|0;
 STACKTOP = sp;return ($6|0);
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__y,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__y = $__y|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$ = 0, $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__t$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,4)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = ($2|0)<(69);
  if ($6) {
   $7 = (($2) + 2000)|0;
   $__t$0 = $7;
  } else {
   $$off = (($2) + -69)|0;
   $8 = ($$off>>>0)<(31);
   $9 = (($2) + 1900)|0;
   $$ = $8 ? $9 : $2;
   $__t$0 = $$;
  }
  $10 = (($__t$0) + -1900)|0;
  HEAP32[$__y>>2] = $10;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc($this,$__b,$__e,$__iob,$__err,$__tm,$__fmt,$0) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $0 = $0|0;
 var $$byval_copy26 = 0, $$byval_copy30 = 0, $$sroa$07$0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0;
 $$byval_copy30 = sp + 132|0;
 $$byval_copy26 = sp + 128|0;
 $1 = sp + 124|0;
 $2 = sp + 120|0;
 $3 = sp + 116|0;
 $4 = sp + 112|0;
 $5 = sp + 108|0;
 $6 = sp + 104|0;
 $7 = sp + 100|0;
 $8 = sp + 96|0;
 $9 = sp + 92|0;
 $10 = sp + 88|0;
 $11 = sp + 84|0;
 $12 = sp + 80|0;
 $13 = sp + 76|0;
 $14 = sp + 72|0;
 $15 = sp + 68|0;
 $16 = sp + 64|0;
 $17 = sp + 60|0;
 $18 = sp + 56|0;
 $19 = sp + 52|0;
 $20 = sp + 48|0;
 $21 = sp + 44|0;
 $22 = sp + 40|0;
 $23 = sp + 36|0;
 $24 = sp + 32|0;
 $25 = sp + 28|0;
 $26 = sp + 24|0;
 $27 = sp + 20|0;
 $28 = sp + 16|0;
 $29 = sp + 12|0;
 $30 = sp + 8|0;
 $31 = sp + 4|0;
 $32 = sp;
 HEAP32[$__err>>2] = 0;
 $33 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$1>>2] = $33;
 $34 = (__ZNKSt3__16locale9use_facetERNS0_2idE($1,6152)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($33)|0);
 $35 = $__fmt << 24 >> 24;
 do {
  switch ($35|0) {
  case 89:  {
   $121 = ((($__tm)) + 20|0);
   $122 = HEAP32[$__e>>2]|0;
   HEAP32[$31>>2] = $122;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$31>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE($this,$121,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 72:  {
   $68 = ((($__tm)) + 8|0);
   $69 = HEAP32[$__e>>2]|0;
   HEAP32[$11>>2] = $69;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$11>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this,$68,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 99:  {
   $40 = ((($this)) + 8|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = ((($41)) + 12|0);
   $43 = HEAP32[$42>>2]|0;
   $44 = (FUNCTION_TABLE_ii[$43 & 63]($40)|0);
   $45 = HEAP32[$__b>>2]|0;
   HEAP32[$4>>2] = $45;
   $46 = HEAP32[$__e>>2]|0;
   HEAP32[$5>>2] = $46;
   $47 = HEAP8[$44>>0]|0;
   $48 = $47 & 1;
   $49 = ($48<<24>>24)==(0);
   $50 = ((($44)) + 8|0);
   $51 = HEAP32[$50>>2]|0;
   $52 = ((($44)) + 4|0);
   $53 = $49 ? $52 : $51;
   $54 = HEAP32[$52>>2]|0;
   $55 = $47&255;
   $56 = $55 >>> 1;
   $57 = $49 ? $56 : $54;
   $58 = (($53) + ($57<<2)|0);
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$4>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$5>>2]|0;
   $59 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,$53,$58)|0);
   HEAP32[$__b>>2] = $59;
   label = 26;
   break;
  }
  case 37:  {
   $123 = HEAP32[$__e>>2]|0;
   HEAP32[$32>>2] = $123;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$32>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE($this,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 77:  {
   $76 = ((($__tm)) + 4|0);
   $77 = HEAP32[$__e>>2]|0;
   HEAP32[$15>>2] = $77;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$15>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE($this,$76,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 88:  {
   $99 = ((($this)) + 8|0);
   $100 = HEAP32[$99>>2]|0;
   $101 = ((($100)) + 24|0);
   $102 = HEAP32[$101>>2]|0;
   $103 = (FUNCTION_TABLE_ii[$102 & 63]($99)|0);
   $104 = HEAP32[$__b>>2]|0;
   HEAP32[$28>>2] = $104;
   $105 = HEAP32[$__e>>2]|0;
   HEAP32[$29>>2] = $105;
   $106 = HEAP8[$103>>0]|0;
   $107 = $106 & 1;
   $108 = ($107<<24>>24)==(0);
   $109 = ((($103)) + 8|0);
   $110 = HEAP32[$109>>2]|0;
   $111 = ((($103)) + 4|0);
   $112 = $108 ? $111 : $110;
   $113 = HEAP32[$111>>2]|0;
   $114 = $106&255;
   $115 = $114 >>> 1;
   $116 = $108 ? $115 : $113;
   $117 = (($112) + ($116<<2)|0);
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$28>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$29>>2]|0;
   $118 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,$112,$117)|0);
   HEAP32[$__b>>2] = $118;
   label = 26;
   break;
  }
  case 83:  {
   $87 = HEAP32[$__e>>2]|0;
   HEAP32[$22>>2] = $87;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$22>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__tm,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 116: case 110:  {
   $78 = HEAP32[$__e>>2]|0;
   HEAP32[$16>>2] = $78;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$16>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE($this,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 106:  {
   $72 = ((($__tm)) + 28|0);
   $73 = HEAP32[$__e>>2]|0;
   HEAP32[$13>>2] = $73;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$13>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE($this,$72,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 84:  {
   $88 = HEAP32[$__b>>2]|0;
   HEAP32[$23>>2] = $88;
   $89 = HEAP32[$__e>>2]|0;
   HEAP32[$24>>2] = $89;
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$23>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$24>>2]|0;
   $90 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,9424,(9456))|0);
   HEAP32[$__b>>2] = $90;
   label = 26;
   break;
  }
  case 120:  {
   $93 = HEAP32[$this>>2]|0;
   $94 = ((($93)) + 20|0);
   $95 = HEAP32[$94>>2]|0;
   $96 = HEAP32[$__b>>2]|0;
   HEAP32[$26>>2] = $96;
   $97 = HEAP32[$__e>>2]|0;
   HEAP32[$27>>2] = $97;
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$26>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$27>>2]|0;
   $98 = (FUNCTION_TABLE_iiiiiii[$95 & 63]($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm)|0);
   $$sroa$07$0 = $98;
   break;
  }
  case 121:  {
   $119 = ((($__tm)) + 20|0);
   $120 = HEAP32[$__e>>2]|0;
   HEAP32[$30>>2] = $120;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$30>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($this,$119,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 82:  {
   $84 = HEAP32[$__b>>2]|0;
   HEAP32[$20>>2] = $84;
   $85 = HEAP32[$__e>>2]|0;
   HEAP32[$21>>2] = $85;
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$20>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$21>>2]|0;
   $86 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,9400,(9420))|0);
   HEAP32[$__b>>2] = $86;
   label = 26;
   break;
  }
  case 73:  {
   $70 = ((($__tm)) + 8|0);
   $71 = HEAP32[$__e>>2]|0;
   HEAP32[$12>>2] = $71;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$12>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this,$70,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 68:  {
   $62 = HEAP32[$__b>>2]|0;
   HEAP32[$7>>2] = $62;
   $63 = HEAP32[$__e>>2]|0;
   HEAP32[$8>>2] = $63;
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$7>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$8>>2]|0;
   $64 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,9288,(9320))|0);
   HEAP32[$__b>>2] = $64;
   label = 26;
   break;
  }
  case 101: case 100:  {
   $60 = ((($__tm)) + 12|0);
   $61 = HEAP32[$__e>>2]|0;
   HEAP32[$6>>2] = $61;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$6>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE($this,$60,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 114:  {
   $81 = HEAP32[$__b>>2]|0;
   HEAP32[$18>>2] = $81;
   $82 = HEAP32[$__e>>2]|0;
   HEAP32[$19>>2] = $82;
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$18>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$19>>2]|0;
   $83 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,9352,(9396))|0);
   HEAP32[$__b>>2] = $83;
   label = 26;
   break;
  }
  case 109:  {
   $74 = ((($__tm)) + 16|0);
   $75 = HEAP32[$__e>>2]|0;
   HEAP32[$14>>2] = $75;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$14>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE($this,$74,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 70:  {
   $65 = HEAP32[$__b>>2]|0;
   HEAP32[$9>>2] = $65;
   $66 = HEAP32[$__e>>2]|0;
   HEAP32[$10>>2] = $66;
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$9>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$10>>2]|0;
   $67 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,9320,(9352))|0);
   HEAP32[$__b>>2] = $67;
   label = 26;
   break;
  }
  case 112:  {
   $79 = ((($__tm)) + 8|0);
   $80 = HEAP32[$__e>>2]|0;
   HEAP32[$17>>2] = $80;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$17>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE($this,$79,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 104: case 66: case 98:  {
   $38 = ((($__tm)) + 16|0);
   $39 = HEAP32[$__e>>2]|0;
   HEAP32[$3>>2] = $39;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$3>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$38,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 119:  {
   $91 = ((($__tm)) + 24|0);
   $92 = HEAP32[$__e>>2]|0;
   HEAP32[$25>>2] = $92;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$25>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE($this,$91,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 65: case 97:  {
   $36 = ((($__tm)) + 24|0);
   $37 = HEAP32[$__e>>2]|0;
   HEAP32[$2>>2] = $37;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$2>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$36,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  default: {
   $124 = HEAP32[$__err>>2]|0;
   $125 = $124 | 4;
   HEAP32[$__err>>2] = $125;
   label = 26;
  }
  }
 } while(0);
 if ((label|0) == 26) {
  $126 = HEAP32[$__b>>2]|0;
  $$sroa$07$0 = $126;
 }
 STACKTOP = sp;return ($$sroa$07$0|0);
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__d,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__d = $__d|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $$off = (($2) + -1)|0;
 $6 = ($$off>>>0)<(31);
 $7 = $6 & $5;
 if ($7) {
  HEAP32[$__d>>2] = $2;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(24);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__h>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $$off = (($2) + -1)|0;
 $6 = ($$off>>>0)<(12);
 $7 = $6 & $5;
 if ($7) {
  HEAP32[$__h>>2] = $2;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__d,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__d = $__d|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,3)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(366);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__d>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(13);
 $or$cond = $6 & $5;
 if ($or$cond) {
  $7 = (($2) + -1)|0;
  HEAP32[$__m>>2] = $7;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(60);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__m>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE($this,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre$i$i$i = 0, $$pre$i$i$i3 = 0, $$pre$i3$i$i9 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $9 = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 L1: while(1) {
  $0 = HEAP32[$__b>>2]|0;
  $1 = ($0|0)==(0|0);
  do {
   if ($1) {
    $78 = 1;
   } else {
    $2 = ((($0)) + 12|0);
    $3 = HEAP32[$2>>2]|0;
    $4 = ((($0)) + 16|0);
    $5 = HEAP32[$4>>2]|0;
    $6 = ($3|0)==($5|0);
    if ($6) {
     $7 = HEAP32[$0>>2]|0;
     $8 = ((($7)) + 36|0);
     $9 = HEAP32[$8>>2]|0;
     $10 = (FUNCTION_TABLE_ii[$9 & 63]($0)|0);
     $$0$i$i$i$i = $10;
    } else {
     $11 = HEAP32[$3>>2]|0;
     $$0$i$i$i$i = $11;
    }
    $12 = ($$0$i$i$i$i|0)==(-1);
    if ($12) {
     HEAP32[$__b>>2] = 0;
     $78 = 1;
     break;
    } else {
     $$pre$i$i$i = HEAP32[$__b>>2]|0;
     $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
     $78 = $phitmp$i$i$i;
     break;
    }
   }
  } while(0);
  $13 = HEAP32[$__e>>2]|0;
  $14 = ($13|0)==(0|0);
  do {
   if ($14) {
    label = 15;
   } else {
    $15 = ((($13)) + 12|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = ((($13)) + 16|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ($16|0)==($18|0);
    if ($19) {
     $20 = HEAP32[$13>>2]|0;
     $21 = ((($20)) + 36|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (FUNCTION_TABLE_ii[$22 & 63]($13)|0);
     $$0$i$i1$i$i = $23;
    } else {
     $24 = HEAP32[$16>>2]|0;
     $$0$i$i1$i$i = $24;
    }
    $25 = ($$0$i$i1$i$i|0)==(-1);
    if ($25) {
     HEAP32[$__e>>2] = 0;
     label = 15;
     break;
    } else {
     if ($78) {
      $79 = $13;
      break;
     } else {
      $$pre$i3$i$i9 = $13;
      break L1;
     }
    }
   }
  } while(0);
  if ((label|0) == 15) {
   label = 0;
   if ($78) {
    $$pre$i3$i$i9 = 0;
    break;
   } else {
    $79 = 0;
   }
  }
  $26 = HEAP32[$__b>>2]|0;
  $27 = ((($26)) + 12|0);
  $28 = HEAP32[$27>>2]|0;
  $29 = ((($26)) + 16|0);
  $30 = HEAP32[$29>>2]|0;
  $31 = ($28|0)==($30|0);
  if ($31) {
   $32 = HEAP32[$26>>2]|0;
   $33 = ((($32)) + 36|0);
   $34 = HEAP32[$33>>2]|0;
   $35 = (FUNCTION_TABLE_ii[$34 & 63]($26)|0);
   $$0$i$i = $35;
  } else {
   $36 = HEAP32[$28>>2]|0;
   $$0$i$i = $36;
  }
  $37 = HEAP32[$__ct>>2]|0;
  $38 = ((($37)) + 12|0);
  $39 = HEAP32[$38>>2]|0;
  $40 = (FUNCTION_TABLE_iiii[$39 & 31]($__ct,8192,$$0$i$i)|0);
  if (!($40)) {
   $$pre$i3$i$i9 = $79;
   break;
  }
  $41 = HEAP32[$__b>>2]|0;
  $42 = ((($41)) + 12|0);
  $43 = HEAP32[$42>>2]|0;
  $44 = ((($41)) + 16|0);
  $45 = HEAP32[$44>>2]|0;
  $46 = ($43|0)==($45|0);
  if ($46) {
   $47 = HEAP32[$41>>2]|0;
   $48 = ((($47)) + 40|0);
   $49 = HEAP32[$48>>2]|0;
   (FUNCTION_TABLE_ii[$49 & 63]($41)|0);
   continue;
  } else {
   $50 = ((($43)) + 4|0);
   HEAP32[$42>>2] = $50;
   continue;
  }
 }
 $51 = HEAP32[$__b>>2]|0;
 $52 = ($51|0)==(0|0);
 do {
  if ($52) {
   $80 = 1;
  } else {
   $53 = ((($51)) + 12|0);
   $54 = HEAP32[$53>>2]|0;
   $55 = ((($51)) + 16|0);
   $56 = HEAP32[$55>>2]|0;
   $57 = ($54|0)==($56|0);
   if ($57) {
    $58 = HEAP32[$51>>2]|0;
    $59 = ((($58)) + 36|0);
    $60 = HEAP32[$59>>2]|0;
    $61 = (FUNCTION_TABLE_ii[$60 & 63]($51)|0);
    $$0$i$i$i$i1 = $61;
   } else {
    $62 = HEAP32[$54>>2]|0;
    $$0$i$i$i$i1 = $62;
   }
   $63 = ($$0$i$i$i$i1|0)==(-1);
   if ($63) {
    HEAP32[$__b>>2] = 0;
    $80 = 1;
    break;
   } else {
    $$pre$i$i$i3 = HEAP32[$__b>>2]|0;
    $phitmp$i$i$i4 = ($$pre$i$i$i3|0)==(0|0);
    $80 = $phitmp$i$i$i4;
    break;
   }
  }
 } while(0);
 $64 = ($$pre$i3$i$i9|0)==(0|0);
 do {
  if ($64) {
   label = 37;
  } else {
   $65 = ((($$pre$i3$i$i9)) + 12|0);
   $66 = HEAP32[$65>>2]|0;
   $67 = ((($$pre$i3$i$i9)) + 16|0);
   $68 = HEAP32[$67>>2]|0;
   $69 = ($66|0)==($68|0);
   if ($69) {
    $70 = HEAP32[$$pre$i3$i$i9>>2]|0;
    $71 = ((($70)) + 36|0);
    $72 = HEAP32[$71>>2]|0;
    $73 = (FUNCTION_TABLE_ii[$72 & 63]($$pre$i3$i$i9)|0);
    $$0$i$i1$i$i7 = $73;
   } else {
    $74 = HEAP32[$66>>2]|0;
    $$0$i$i1$i$i7 = $74;
   }
   $75 = ($$0$i$i1$i$i7|0)==(-1);
   if ($75) {
    HEAP32[$__e>>2] = 0;
    label = 37;
    break;
   } else {
    if ($80) {
     break;
    } else {
     label = 39;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 37) {
  if ($80) {
   label = 39;
  }
 }
 if ((label|0) == 39) {
  $76 = HEAP32[$__err>>2]|0;
  $77 = $76 | 2;
  HEAP32[$__err>>2] = $77;
 }
 return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = ((($this)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (FUNCTION_TABLE_ii[$4 & 63]($1)|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = $6 & 1;
 $8 = ($7<<24>>24)==(0);
 if ($8) {
  $11 = $6&255;
  $12 = $11 >>> 1;
  $23 = $12;
 } else {
  $9 = ((($5)) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $23 = $10;
 }
 $13 = ((($5)) + 12|0);
 $14 = HEAP8[$13>>0]|0;
 $15 = $14 & 1;
 $16 = ($15<<24>>24)==(0);
 if ($16) {
  $19 = $14&255;
  $20 = $19 >>> 1;
  $22 = $20;
 } else {
  $17 = ((($5)) + 16|0);
  $18 = HEAP32[$17>>2]|0;
  $22 = $18;
 }
 $21 = (0 - ($22))|0;
 $24 = ($23|0)==($21|0);
 do {
  if ($24) {
   $25 = HEAP32[$__err>>2]|0;
   $26 = $25 | 4;
   HEAP32[$__err>>2] = $26;
  } else {
   $27 = HEAP32[$__e>>2]|0;
   HEAP32[$0>>2] = $27;
   $28 = ((($5)) + 24|0);
   ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
   $29 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$5,$28,$__ct,$__err,0)|0);
   $30 = ($29|0)==($5|0);
   $31 = HEAP32[$__h>>2]|0;
   $32 = ($31|0)==(12);
   $or$cond = $30 & $32;
   if ($or$cond) {
    HEAP32[$__h>>2] = 0;
    break;
   }
   $33 = $29;
   $34 = $5;
   $35 = (($33) - ($34))|0;
   $36 = ($35|0)==(12);
   $37 = ($31|0)<(12);
   $or$cond3 = $37 & $36;
   if ($or$cond3) {
    $38 = (($31) + 12)|0;
    HEAP32[$__h>>2] = $38;
   }
  }
 } while(0);
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__s,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__s = $__s|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(61);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__s>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__w,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__w = $__w|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,1)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(7);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__w>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__y,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__y = $__y|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,4)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = (($2) + -1900)|0;
  HEAP32[$__y>>2] = $6;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE($this,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i3 = 0, $$pre$i3$i$i915 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $9 = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__b>>2]|0;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $83 = 1;
  } else {
   $2 = ((($0)) + 12|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = ((($0)) + 16|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = ($3|0)==($5|0);
   if ($6) {
    $7 = HEAP32[$0>>2]|0;
    $8 = ((($7)) + 36|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = (FUNCTION_TABLE_ii[$9 & 63]($0)|0);
    $$0$i$i$i$i = $10;
   } else {
    $11 = HEAP32[$3>>2]|0;
    $$0$i$i$i$i = $11;
   }
   $12 = ($$0$i$i$i$i|0)==(-1);
   if ($12) {
    HEAP32[$__b>>2] = 0;
    $83 = 1;
    break;
   } else {
    $$pre$i$i$i = HEAP32[$__b>>2]|0;
    $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
    $83 = $phitmp$i$i$i;
    break;
   }
  }
 } while(0);
 $13 = HEAP32[$__e>>2]|0;
 $14 = ($13|0)==(0|0);
 do {
  if ($14) {
   label = 14;
  } else {
   $15 = ((($13)) + 12|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = ((($13)) + 16|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = ($16|0)==($18|0);
   if ($19) {
    $20 = HEAP32[$13>>2]|0;
    $21 = ((($20)) + 36|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = (FUNCTION_TABLE_ii[$22 & 63]($13)|0);
    $$0$i$i1$i$i = $23;
   } else {
    $24 = HEAP32[$16>>2]|0;
    $$0$i$i1$i$i = $24;
   }
   $25 = ($$0$i$i1$i$i|0)==(-1);
   if ($25) {
    HEAP32[$__e>>2] = 0;
    label = 14;
    break;
   } else {
    if ($83) {
     $$pre$i3$i$i915 = $13;
     label = 17;
     break;
    } else {
     label = 16;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 14) {
  if ($83) {
   label = 16;
  } else {
   $$pre$i3$i$i915 = 0;
   label = 17;
  }
 }
 L22: do {
  if ((label|0) == 16) {
   $26 = HEAP32[$__err>>2]|0;
   $27 = $26 | 6;
   HEAP32[$__err>>2] = $27;
  }
  else if ((label|0) == 17) {
   $28 = HEAP32[$__b>>2]|0;
   $29 = ((($28)) + 12|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = ((($28)) + 16|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = ($30|0)==($32|0);
   if ($33) {
    $34 = HEAP32[$28>>2]|0;
    $35 = ((($34)) + 36|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = (FUNCTION_TABLE_ii[$36 & 63]($28)|0);
    $$0$i$i = $37;
   } else {
    $38 = HEAP32[$30>>2]|0;
    $$0$i$i = $38;
   }
   $39 = HEAP32[$__ct>>2]|0;
   $40 = ((($39)) + 52|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = (FUNCTION_TABLE_iiii[$41 & 31]($__ct,$$0$i$i,0)|0);
   $43 = ($42<<24>>24)==(37);
   if (!($43)) {
    $44 = HEAP32[$__err>>2]|0;
    $45 = $44 | 4;
    HEAP32[$__err>>2] = $45;
    break;
   }
   $46 = HEAP32[$__b>>2]|0;
   $47 = ((($46)) + 12|0);
   $48 = HEAP32[$47>>2]|0;
   $49 = ((($46)) + 16|0);
   $50 = HEAP32[$49>>2]|0;
   $51 = ($48|0)==($50|0);
   if ($51) {
    $53 = HEAP32[$46>>2]|0;
    $54 = ((($53)) + 40|0);
    $55 = HEAP32[$54>>2]|0;
    (FUNCTION_TABLE_ii[$55 & 63]($46)|0);
    $$pre = HEAP32[$__b>>2]|0;
    $56 = ($$pre|0)==(0|0);
    if ($56) {
     $84 = 1;
    } else {
     $58 = $$pre;
     label = 25;
    }
   } else {
    $52 = ((($48)) + 4|0);
    HEAP32[$47>>2] = $52;
    $58 = $46;
    label = 25;
   }
   do {
    if ((label|0) == 25) {
     $57 = ((($58)) + 12|0);
     $59 = HEAP32[$57>>2]|0;
     $60 = ((($58)) + 16|0);
     $61 = HEAP32[$60>>2]|0;
     $62 = ($59|0)==($61|0);
     if ($62) {
      $63 = HEAP32[$58>>2]|0;
      $64 = ((($63)) + 36|0);
      $65 = HEAP32[$64>>2]|0;
      $66 = (FUNCTION_TABLE_ii[$65 & 63]($58)|0);
      $$0$i$i$i$i1 = $66;
     } else {
      $67 = HEAP32[$59>>2]|0;
      $$0$i$i$i$i1 = $67;
     }
     $68 = ($$0$i$i$i$i1|0)==(-1);
     if ($68) {
      HEAP32[$__b>>2] = 0;
      $84 = 1;
      break;
     } else {
      $$pre$i$i$i3 = HEAP32[$__b>>2]|0;
      $phitmp$i$i$i4 = ($$pre$i$i$i3|0)==(0|0);
      $84 = $phitmp$i$i$i4;
      break;
     }
    }
   } while(0);
   $69 = ($$pre$i3$i$i915|0)==(0|0);
   do {
    if ($69) {
     label = 37;
    } else {
     $70 = ((($$pre$i3$i$i915)) + 12|0);
     $71 = HEAP32[$70>>2]|0;
     $72 = ((($$pre$i3$i$i915)) + 16|0);
     $73 = HEAP32[$72>>2]|0;
     $74 = ($71|0)==($73|0);
     if ($74) {
      $75 = HEAP32[$$pre$i3$i$i915>>2]|0;
      $76 = ((($75)) + 36|0);
      $77 = HEAP32[$76>>2]|0;
      $78 = (FUNCTION_TABLE_ii[$77 & 63]($$pre$i3$i$i915)|0);
      $$0$i$i1$i$i7 = $78;
     } else {
      $79 = HEAP32[$71>>2]|0;
      $$0$i$i1$i$i7 = $79;
     }
     $80 = ($$0$i$i1$i$i7|0)==(-1);
     if ($80) {
      HEAP32[$__e>>2] = 0;
      label = 37;
      break;
     } else {
      if ($84) {
       break L22;
      } else {
       break;
      }
     }
    }
   } while(0);
   if ((label|0) == 37) {
    if (!($84)) {
     break;
    }
   }
   $81 = HEAP32[$__err>>2]|0;
   $82 = $81 | 2;
   HEAP32[$__err>>2] = $82;
  }
 } while(0);
 return;
}
function __ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 __ZNSt3__110__time_putD2Ev($0);
 return;
}
function __ZNSt3__110__time_putD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (__ZNSt3__16__clocEv()|0);
 $2 = ($0|0)==($1|0);
 if (!($2)) {
  $3 = HEAP32[$this>>2]|0;
  _freelocale(($3|0));
 }
 return;
}
function __ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 __ZNSt3__110__time_putD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc($this,$__s,$0,$1,$__tm,$__fmt,$__mod) {
 $this = $this|0;
 $__s = $__s|0;
 $0 = $0|0;
 $1 = $1|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $__mod = $__mod|0;
 var $$$i = 0, $$0$i$i2 = 0, $$lcssa = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__nar = 0, $__ne = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $__nar = sp + 4|0;
 $__ne = sp;
 $2 = ((($__nar)) + 100|0);
 HEAP32[$__ne>>2] = $2;
 $3 = ((($this)) + 8|0);
 __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc($3,$__nar,$__ne,$__tm,$__fmt,$__mod);
 $4 = HEAP32[$__ne>>2]|0;
 $5 = HEAP32[$__s>>2]|0;
 $6 = $5;
 $7 = ($__nar|0)==($4|0);
 if ($7) {
  $$lcssa = $6;
 } else {
  $$0$i$i2 = $__nar;$9 = $6;
  while(1) {
   $8 = HEAP8[$$0$i$i2>>0]|0;
   $10 = ($9|0)==(0|0);
   do {
    if ($10) {
     $25 = 0;
    } else {
     $11 = ((($9)) + 24|0);
     $12 = HEAP32[$11>>2]|0;
     $13 = ((($9)) + 28|0);
     $14 = HEAP32[$13>>2]|0;
     $15 = ($12|0)==($14|0);
     if ($15) {
      $17 = HEAP32[$9>>2]|0;
      $18 = ((($17)) + 52|0);
      $19 = HEAP32[$18>>2]|0;
      $20 = $8&255;
      $21 = (FUNCTION_TABLE_iii[$19 & 15]($9,$20)|0);
      $22 = ($21|0)==(-1);
      $$$i = $22 ? 0 : $9;
      $25 = $$$i;
      break;
     } else {
      $16 = ((($12)) + 1|0);
      HEAP32[$11>>2] = $16;
      HEAP8[$12>>0] = $8;
      $25 = $9;
      break;
     }
    }
   } while(0);
   $23 = ((($$0$i$i2)) + 1|0);
   $24 = ($23|0)==($4|0);
   if ($24) {
    $$lcssa = $25;
    break;
   } else {
    $$0$i$i2 = $23;$9 = $25;
   }
  }
 }
 STACKTOP = sp;return ($$lcssa|0);
}
function __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc($this,$__nb,$__ne,$__tm,$__fmt,$__mod) {
 $this = $this|0;
 $__nb = $__nb|0;
 $__ne = $__ne|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $__mod = $__mod|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $fmt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $fmt = sp;
 HEAP8[$fmt>>0] = 37;
 $0 = ((($fmt)) + 1|0);
 HEAP8[$0>>0] = $__fmt;
 $1 = ((($fmt)) + 2|0);
 HEAP8[$1>>0] = $__mod;
 $2 = ((($fmt)) + 3|0);
 HEAP8[$2>>0] = 0;
 $3 = ($__mod<<24>>24)==(0);
 if (!($3)) {
  HEAP8[$0>>0] = $__mod;
  HEAP8[$1>>0] = $__fmt;
 }
 $4 = HEAP32[$__ne>>2]|0;
 $5 = $4;
 $6 = $__nb;
 $7 = (($5) - ($6))|0;
 $8 = HEAP32[$this>>2]|0;
 $9 = (_strftime_l(($__nb|0),($7|0),($fmt|0),($__tm|0),($8|0))|0);
 $10 = (($__nb) + ($9)|0);
 HEAP32[$__ne>>2] = $10;
 STACKTOP = sp;return;
}
function __ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 __ZNSt3__110__time_putD2Ev($0);
 return;
}
function __ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 __ZNSt3__110__time_putD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc($this,$__s,$0,$1,$__tm,$__fmt,$__mod) {
 $this = $this|0;
 $__s = $__s|0;
 $0 = $0|0;
 $1 = $1|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $__mod = $__mod|0;
 var $$$i = 0, $$0$i$i$i$i = 0, $$0$i$i2 = 0, $$lcssa = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__nar = 0, $__ne = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 416|0;
 $__nar = sp + 8|0;
 $__ne = sp;
 $2 = ((($__nar)) + 400|0);
 HEAP32[$__ne>>2] = $2;
 $3 = ((($this)) + 8|0);
 __ZNKSt3__110__time_put8__do_putEPwRS1_PK2tmcc($3,$__nar,$__ne,$__tm,$__fmt,$__mod);
 $4 = HEAP32[$__ne>>2]|0;
 $5 = HEAP32[$__s>>2]|0;
 $6 = $5;
 $7 = ($__nar|0)==($4|0);
 if ($7) {
  $$lcssa = $6;
 } else {
  $$0$i$i2 = $__nar;$9 = $6;
  while(1) {
   $8 = HEAP32[$$0$i$i2>>2]|0;
   $10 = ($9|0)==(0|0);
   if ($10) {
    $24 = 0;
   } else {
    $11 = ((($9)) + 24|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = ((($9)) + 28|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = ($12|0)==($14|0);
    if ($15) {
     $16 = HEAP32[$9>>2]|0;
     $17 = ((($16)) + 52|0);
     $18 = HEAP32[$17>>2]|0;
     $19 = (FUNCTION_TABLE_iii[$18 & 15]($9,$8)|0);
     $$0$i$i$i$i = $19;
    } else {
     $20 = ((($12)) + 4|0);
     HEAP32[$11>>2] = $20;
     HEAP32[$12>>2] = $8;
     $$0$i$i$i$i = $8;
    }
    $21 = ($$0$i$i$i$i|0)==(-1);
    $$$i = $21 ? 0 : $9;
    $24 = $$$i;
   }
   $22 = ((($$0$i$i2)) + 4|0);
   $23 = ($22|0)==($4|0);
   if ($23) {
    $$lcssa = $24;
    break;
   } else {
    $$0$i$i2 = $22;$9 = $24;
   }
  }
 }
 STACKTOP = sp;return ($$lcssa|0);
}
function __ZNKSt3__110__time_put8__do_putEPwRS1_PK2tmcc($this,$__wb,$__we,$__tm,$__fmt,$__mod) {
 $this = $this|0;
 $__wb = $__wb|0;
 $__we = $__we|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $__mod = $__mod|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__nar = 0, $__nb = 0, $__ne = 0, $mb = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0;
 $__nar = sp + 16|0;
 $__ne = sp + 12|0;
 $mb = sp;
 $__nb = sp + 8|0;
 $0 = ((($__nar)) + 100|0);
 HEAP32[$__ne>>2] = $0;
 __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc($this,$__nar,$__ne,$__tm,$__fmt,$__mod);
 $1 = $mb;
 $2 = $1;
 HEAP32[$2>>2] = 0;
 $3 = (($1) + 4)|0;
 $4 = $3;
 HEAP32[$4>>2] = 0;
 HEAP32[$__nb>>2] = $__nar;
 $5 = HEAP32[$__we>>2]|0;
 $6 = $5;
 $7 = $__wb;
 $8 = (($6) - ($7))|0;
 $9 = $8 >> 2;
 $10 = HEAP32[$this>>2]|0;
 $11 = (_uselocale(($10|0))|0);
 $12 = (_mbsrtowcs($__wb,$__nb,$9,$mb)|0);
 $13 = ($11|0)==(0|0);
 if (!($13)) {
  (_uselocale(($11|0))|0);
 }
 $14 = (($__wb) + ($12<<2)|0);
 HEAP32[$__we>>2] = $14;
 STACKTOP = sp;return;
}
function __ZNSt3__110moneypunctIcLb0EED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__110moneypunctIcLb0EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_decimal_pointEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 127;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_thousands_sepEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 127;
}
function __ZNKSt3__110moneypunctIcLb0EE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE14do_curr_symbolEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_positive_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_negative_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($agg$result,1,45);
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE14do_frac_digitsEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__110moneypunctIcLb0EE13do_pos_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE13do_neg_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNSt3__110moneypunctIcLb1EED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__110moneypunctIcLb1EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_decimal_pointEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 127;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_thousands_sepEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 127;
}
function __ZNKSt3__110moneypunctIcLb1EE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE14do_curr_symbolEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_positive_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_negative_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($agg$result,1,45);
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE14do_frac_digitsEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__110moneypunctIcLb1EE13do_pos_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE13do_neg_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNSt3__110moneypunctIwLb0EED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__110moneypunctIwLb0EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_decimal_pointEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_thousands_sepEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb0EE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE14do_curr_symbolEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_positive_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_negative_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($agg$result,1,45);
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE14do_frac_digitsEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__110moneypunctIwLb0EE13do_pos_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE13do_neg_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNSt3__110moneypunctIwLb1EED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__110moneypunctIwLb1EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_decimal_pointEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_thousands_sepEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb1EE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE14do_curr_symbolEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_positive_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_negative_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($agg$result,1,45);
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE14do_frac_digitsEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__110moneypunctIwLb1EE13do_pos_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE13do_neg_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe($this,$__b,$__e,$__intl,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$ = 0, $$0$lcssa$i = 0, $$byval_copy = 0, $$pre = 0, $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__atoms = 0, $__loc = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2$lcssa = 0, $__nc$25 = 0, $__neg = 0, $__w$04 = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, $vararg_buffer = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0;
 $$byval_copy = sp + 24|0;
 $vararg_buffer = sp;
 $__wbuf = sp + 136|0;
 $__wb = sp + 16|0;
 $__wn = sp + 12|0;
 $__loc = sp + 8|0;
 $__neg = sp + 134|0;
 $0 = sp + 4|0;
 $__atoms = sp + 124|0;
 $1 = $__wbuf;
 HEAP32[$__wb>>2] = $1;
 $2 = ((($__wb)) + 4|0);
 HEAP32[$2>>2] = (107);
 $3 = ((($__wbuf)) + 100|0);
 $4 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $4;
 $5 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6160)|0);
 HEAP8[$__neg>>0] = 0;
 $6 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $6;
 $7 = ((($__iob)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $9 = (__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_($__b,$$byval_copy,$__intl,$__loc,$8,$__err,$__neg,$5,$__wb,$__wn,$3)|0);
 if ($9) {
  $10 = HEAP32[$5>>2]|0;
  $11 = ((($10)) + 32|0);
  $12 = HEAP32[$11>>2]|0;
  (FUNCTION_TABLE_iiiii[$12 & 7]($5,9456,(9466),$__atoms)|0);
  $13 = HEAP32[$__wn>>2]|0;
  $14 = HEAP32[$__wb>>2]|0;
  $15 = $13;
  $16 = $14;
  $17 = (($15) - ($16))|0;
  $18 = ($17|0)>(98);
  if ($18) {
   $19 = (($17) + 2)|0;
   $20 = (_malloc($19)|0);
   $21 = $20;
   $22 = ($20|0)==(0|0);
   if ($22) {
    __ZSt17__throw_bad_allocv();
    // unreachable;
   } else {
    $50 = $21;$__nc$0 = $20;
   }
  } else {
   $50 = 0;$__nc$0 = $$byval_copy;
  }
  $23 = HEAP8[$__neg>>0]|0;
  $24 = ($23<<24>>24)==(0);
  if ($24) {
   $__nc$1 = $__nc$0;
  } else {
   $25 = ((($__nc$0)) + 1|0);
   HEAP8[$__nc$0>>0] = 45;
   $__nc$1 = $25;
  }
  $26 = ((($__atoms)) + 10|0);
  $27 = $__atoms;
  $28 = ($14>>>0)<($13>>>0);
  if ($28) {
   $29 = ((($__atoms)) + 1|0);
   $30 = ((($29)) + 1|0);
   $31 = ((($30)) + 1|0);
   $32 = ((($31)) + 1|0);
   $33 = ((($32)) + 1|0);
   $34 = ((($33)) + 1|0);
   $35 = ((($34)) + 1|0);
   $36 = ((($35)) + 1|0);
   $37 = ((($36)) + 1|0);
   $__nc$25 = $__nc$1;$__w$04 = $14;
   while(1) {
    $38 = HEAP8[$__w$04>>0]|0;
    $39 = HEAP8[$__atoms>>0]|0;
    $40 = ($39<<24>>24)==($38<<24>>24);
    if ($40) {
     $$0$lcssa$i = $__atoms;
    } else {
     $41 = HEAP8[$29>>0]|0;
     $42 = ($41<<24>>24)==($38<<24>>24);
     if ($42) {
      $$0$lcssa$i = $29;
     } else {
      $86 = HEAP8[$30>>0]|0;
      $87 = ($86<<24>>24)==($38<<24>>24);
      if ($87) {
       $$0$lcssa$i = $30;
      } else {
       $88 = HEAP8[$31>>0]|0;
       $89 = ($88<<24>>24)==($38<<24>>24);
       if ($89) {
        $$0$lcssa$i = $31;
       } else {
        $90 = HEAP8[$32>>0]|0;
        $91 = ($90<<24>>24)==($38<<24>>24);
        if ($91) {
         $$0$lcssa$i = $32;
        } else {
         $92 = HEAP8[$33>>0]|0;
         $93 = ($92<<24>>24)==($38<<24>>24);
         if ($93) {
          $$0$lcssa$i = $33;
         } else {
          $94 = HEAP8[$34>>0]|0;
          $95 = ($94<<24>>24)==($38<<24>>24);
          if ($95) {
           $$0$lcssa$i = $34;
          } else {
           $96 = HEAP8[$35>>0]|0;
           $97 = ($96<<24>>24)==($38<<24>>24);
           if ($97) {
            $$0$lcssa$i = $35;
           } else {
            $98 = HEAP8[$36>>0]|0;
            $99 = ($98<<24>>24)==($38<<24>>24);
            if ($99) {
             $$0$lcssa$i = $36;
            } else {
             $100 = HEAP8[$37>>0]|0;
             $101 = ($100<<24>>24)==($38<<24>>24);
             $$ = $101 ? $37 : $26;
             $$0$lcssa$i = $$;
            }
           }
          }
         }
        }
       }
      }
     }
    }
    $43 = $$0$lcssa$i;
    $44 = (($43) - ($27))|0;
    $45 = (9456 + ($44)|0);
    $46 = HEAP8[$45>>0]|0;
    HEAP8[$__nc$25>>0] = $46;
    $47 = ((($__w$04)) + 1|0);
    $48 = ((($__nc$25)) + 1|0);
    $$pre = HEAP32[$__wn>>2]|0;
    $49 = ($47>>>0)<($$pre>>>0);
    if ($49) {
     $__nc$25 = $48;$__w$04 = $47;
    } else {
     $__nc$2$lcssa = $48;
     break;
    }
   }
  } else {
   $__nc$2$lcssa = $__nc$1;
  }
  HEAP8[$__nc$2$lcssa>>0] = 0;
  HEAP32[$vararg_buffer>>2] = $__v;
  (_sscanf($$byval_copy,9472,$vararg_buffer)|0);
  $51 = ($50|0)==(0);
  if (!($51)) {
   $52 = $50;
   _free($52);
  }
 }
 $53 = HEAP32[$__b>>2]|0;
 $54 = ($53|0)==(0|0);
 do {
  if ($54) {
   $65 = 0;
  } else {
   $55 = ((($53)) + 12|0);
   $56 = HEAP32[$55>>2]|0;
   $57 = ((($53)) + 16|0);
   $58 = HEAP32[$57>>2]|0;
   $59 = ($56|0)==($58|0);
   if ($59) {
    $60 = HEAP32[$53>>2]|0;
    $61 = ((($60)) + 36|0);
    $62 = HEAP32[$61>>2]|0;
    $63 = (FUNCTION_TABLE_ii[$62 & 63]($53)|0);
    $64 = ($63|0)==(-1);
    if ($64) {
     HEAP32[$__b>>2] = 0;
     $65 = 0;
     break;
    } else {
     $$pre$i$i$i = HEAP32[$__b>>2]|0;
     $65 = $$pre$i$i$i;
     break;
    }
   } else {
    $65 = $53;
   }
  }
 } while(0);
 $66 = ($65|0)==(0|0);
 $67 = HEAP32[$__e>>2]|0;
 $68 = ($67|0)==(0|0);
 do {
  if ($68) {
   label = 25;
  } else {
   $69 = ((($67)) + 12|0);
   $70 = HEAP32[$69>>2]|0;
   $71 = ((($67)) + 16|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = ($70|0)==($72|0);
   if ($73) {
    $74 = HEAP32[$67>>2]|0;
    $75 = ((($74)) + 36|0);
    $76 = HEAP32[$75>>2]|0;
    $77 = (FUNCTION_TABLE_ii[$76 & 63]($67)|0);
    $78 = ($77|0)==(-1);
    if ($78) {
     HEAP32[$__e>>2] = 0;
     label = 25;
     break;
    }
   }
   if (!($66)) {
    label = 26;
   }
  }
 } while(0);
 if ((label|0) == 25) {
  if ($66) {
   label = 26;
  }
 }
 if ((label|0) == 26) {
  $79 = HEAP32[$__err>>2]|0;
  $80 = $79 | 2;
  HEAP32[$__err>>2] = $80;
 }
 $81 = HEAP32[$__b>>2]|0;
 $82 = HEAP32[$__loc>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($82)|0);
 $83 = HEAP32[$__wb>>2]|0;
 HEAP32[$__wb>>2] = 0;
 $84 = ($83|0)==(0|0);
 if (!($84)) {
  $85 = HEAP32[$2>>2]|0;
  FUNCTION_TABLE_vi[$85 & 127]($83);
 }
 STACKTOP = sp;return ($81|0);
}
function __ZNSt3__112__do_nothingEPv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_($__b,$__e,$__intl,$__loc,$__flags,$__err,$__neg,$__ct,$__wb,$__wn,$__we) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__loc = $__loc|0;
 $__flags = $__flags|0;
 $__err = $__err|0;
 $__neg = $__neg|0;
 $__ct = $__ct|0;
 $__wb = $__wb|0;
 $__wn = $__wn|0;
 $__we = $__we|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i103 = 0, $$0$i$i105 = 0, $$0$i$i120 = 0, $$0$i$i27 = 0, $$0$i$i37 = 0, $$0$i$i39 = 0, $$0$i$i49 = 0, $$0$i$i55 = 0, $$0$i$i59 = 0, $$0$i$i75 = 0, $$0$i$i87 = 0, $$0$i$i95 = 0, $$in241 = 0, $$lcssa = 0, $$lcssa176 = 0, $$lcssa223 = 0, $$lcssa224 = 0, $$ph = 0;
 var $$phi$trans$insert = 0, $$phi$trans$insert198 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i109 = 0, $$pre$i$i$i124 = 0, $$pre$i$i$i30 = 0, $$pre$i$i$i41 = 0, $$pre$i$i$i63 = 0, $$pre$i$i$i79 = 0, $$pre$i2$i$i113 = 0, $$pre$i2$i$i113183 = 0, $$pre$i2$i$i113185 = 0, $$pre$i2$i$i128192 = 0, $$pre$i2$i$i128193 = 0, $$pre$i2$i$i128246 = 0, $$pre$i2$i$i45 = 0, $$pre$i2$i$i45200 = 0, $$pre$i2$i$i45202 = 0, $$pre$i2$i$i67188$ph = 0;
 var $$pre$i2$i$i67188205 = 0, $$pre$i2$i$i67237 = 0, $$pre$i2$i$i83 = 0, $$pre186 = 0, $$pre187 = 0, $$pre190 = 0, $$pre191 = 0, $$pre195 = 0, $$pre196 = 0, $$pre197 = 0, $$pre199 = 0, $$sum = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;
 var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0;
 var $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0;
 var $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0;
 var $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0;
 var $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0;
 var $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0;
 var $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0;
 var $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0;
 var $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0;
 var $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0;
 var $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0;
 var $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0;
 var $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0;
 var $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0;
 var $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0;
 var $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0;
 var $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0;
 var $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0;
 var $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0;
 var $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0;
 var $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0;
 var $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0;
 var $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0;
 var $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0;
 var $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0;
 var $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0;
 var $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0;
 var $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0;
 var $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0;
 var $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0;
 var $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0;
 var $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0;
 var $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0;
 var $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dp = 0, $__et = 0, $__fd = 0, $__gb = 0, $__gbuf = 0, $__ge = 0, $__gn = 0;
 var $__grp = 0, $__i$0 = 0, $__ng$0 = 0, $__ng$0$lcssa = 0, $__ng$1 = 0, $__nsn = 0, $__nsn$__trailing_sign$0 = 0, $__nsn$__trailing_sign$011 = 0, $__p$0253 = 0, $__pat = 0, $__psn = 0, $__psn$__trailing_sign$0 = 0, $__psn$__trailing_sign$010 = 0, $__spaces = 0, $__sym = 0, $__trailing_sign$0$lcssa = 0, $__trailing_sign$0255 = 0, $__trailing_sign$1 = 0, $__ts = 0, $brmerge = 0;
 var $cond = 0, $isascii1$i = 0, $isascii1$i101 = 0, $isascii1$i140 = 0, $isascii1$i51 = 0, $isascii1$i57 = 0, $or$cond = 0, $or$cond13 = 0, $or$cond222 = 0, $or$cond7 = 0, $or$cond9 = 0, $sext = 0, $sext165 = 0, $sext166 = 0, $sext167 = 0, $switch = 0, $tmp$i$i115 = 0, $tmp$i$i130 = 0, $tmp$i$i47 = 0, $tmp$i$i69 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512|0;
 $0 = sp + 488|0;
 $__gbuf = sp + 88|0;
 $__gb = sp + 80|0;
 $__gn = sp + 72|0;
 $__ge = sp + 68|0;
 $__pat = sp + 496|0;
 $__dp = sp + 493|0;
 $__ts = sp + 492|0;
 $__grp = sp + 56|0;
 $__sym = sp + 44|0;
 $__psn = sp + 32|0;
 $__nsn = sp + 20|0;
 $__spaces = sp + 8|0;
 $__fd = sp + 4|0;
 $__et = sp;
 HEAP32[$0>>2] = $__we;
 $1 = $__gbuf;
 HEAP32[$__gb>>2] = $1;
 $2 = ((($__gb)) + 4|0);
 HEAP32[$2>>2] = (107);
 HEAP32[$__gn>>2] = $__gbuf;
 $3 = ((($__gbuf)) + 400|0);
 HEAP32[$__ge>>2] = $3;
 HEAP32[$__grp>>2] = 0;
 $4 = ((($__grp)) + 4|0);
 HEAP32[$4>>2] = 0;
 $5 = ((($__grp)) + 8|0);
 HEAP32[$5>>2] = 0;
 HEAP32[$__sym>>2] = 0;
 $6 = ((($__sym)) + 4|0);
 HEAP32[$6>>2] = 0;
 $7 = ((($__sym)) + 8|0);
 HEAP32[$7>>2] = 0;
 HEAP32[$__psn>>2] = 0;
 $8 = ((($__psn)) + 4|0);
 HEAP32[$8>>2] = 0;
 $9 = ((($__psn)) + 8|0);
 HEAP32[$9>>2] = 0;
 HEAP32[$__nsn>>2] = 0;
 $10 = ((($__nsn)) + 4|0);
 HEAP32[$10>>2] = 0;
 $11 = ((($__nsn)) + 8|0);
 HEAP32[$11>>2] = 0;
 HEAP32[$__spaces>>2] = 0;
 $12 = ((($__spaces)) + 4|0);
 HEAP32[$12>>2] = 0;
 $13 = ((($__spaces)) + 8|0);
 HEAP32[$13>>2] = 0;
 __ZNSt3__111__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri($__intl,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__psn,$__nsn,$__fd);
 $14 = HEAP32[$__wb>>2]|0;
 HEAP32[$__wn>>2] = $14;
 $15 = ((($__ct)) + 8|0);
 $16 = ((($__psn)) + 4|0);
 $17 = ((($__nsn)) + 4|0);
 $18 = ((($__nsn)) + 8|0);
 $19 = ((($__nsn)) + 1|0);
 $20 = ((($__psn)) + 8|0);
 $21 = ((($__psn)) + 1|0);
 $22 = $__flags & 512;
 $23 = ($22|0)!=(0);
 $24 = ((($__sym)) + 8|0);
 $25 = ((($__sym)) + 1|0);
 $26 = ((($__sym)) + 4|0);
 $27 = ((($__spaces)) + 4|0);
 $28 = ((($__spaces)) + 8|0);
 $29 = ((($__spaces)) + 1|0);
 $30 = ((($__pat)) + 3|0);
 $31 = ((($__grp)) + 4|0);
 $750 = $__gbuf;$__p$0253 = 0;$__trailing_sign$0255 = 0;
 L1: while(1) {
  $32 = HEAP32[$__b>>2]|0;
  $33 = ($32|0)==(0|0);
  do {
   if ($33) {
    $44 = 0;
   } else {
    $34 = ((($32)) + 12|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ((($32)) + 16|0);
    $37 = HEAP32[$36>>2]|0;
    $38 = ($35|0)==($37|0);
    if ($38) {
     $39 = HEAP32[$32>>2]|0;
     $40 = ((($39)) + 36|0);
     $41 = HEAP32[$40>>2]|0;
     $42 = (FUNCTION_TABLE_ii[$41 & 63]($32)|0);
     $43 = ($42|0)==(-1);
     if ($43) {
      HEAP32[$__b>>2] = 0;
      $44 = 0;
      break;
     } else {
      $$pre$i$i$i30 = HEAP32[$__b>>2]|0;
      $44 = $$pre$i$i$i30;
      break;
     }
    } else {
     $44 = $32;
    }
   }
  } while(0);
  $45 = ($44|0)==(0|0);
  $46 = HEAP32[$__e>>2]|0;
  $47 = ($46|0)==(0|0);
  do {
   if ($47) {
    label = 12;
   } else {
    $48 = ((($46)) + 12|0);
    $49 = HEAP32[$48>>2]|0;
    $50 = ((($46)) + 16|0);
    $51 = HEAP32[$50>>2]|0;
    $52 = ($49|0)==($51|0);
    if (!($52)) {
     if ($45) {
      $751 = $46;
      break;
     } else {
      $$lcssa224 = $750;$__trailing_sign$0$lcssa = $__trailing_sign$0255;
      label = 202;
      break L1;
     }
    }
    $53 = HEAP32[$46>>2]|0;
    $54 = ((($53)) + 36|0);
    $55 = HEAP32[$54>>2]|0;
    $56 = (FUNCTION_TABLE_ii[$55 & 63]($46)|0);
    $57 = ($56|0)==(-1);
    if ($57) {
     HEAP32[$__e>>2] = 0;
     label = 12;
     break;
    } else {
     if ($45) {
      $751 = $46;
      break;
     } else {
      $$lcssa224 = $750;$__trailing_sign$0$lcssa = $__trailing_sign$0255;
      label = 202;
      break L1;
     }
    }
   }
  } while(0);
  if ((label|0) == 12) {
   label = 0;
   if ($45) {
    $$lcssa224 = $750;$__trailing_sign$0$lcssa = $__trailing_sign$0255;
    label = 202;
    break;
   } else {
    $751 = 0;
   }
  }
  $58 = (($__pat) + ($__p$0253)|0);
  $59 = HEAP8[$58>>0]|0;
  $60 = $59 << 24 >> 24;
  L21: do {
   switch ($60|0) {
   case 1:  {
    $cond = ($__p$0253|0)==(3);
    if ($cond) {
     $752 = $750;$__trailing_sign$1 = $__trailing_sign$0255;
    } else {
     $62 = HEAP32[$__b>>2]|0;
     $63 = ((($62)) + 12|0);
     $64 = HEAP32[$63>>2]|0;
     $65 = ((($62)) + 16|0);
     $66 = HEAP32[$65>>2]|0;
     $67 = ($64|0)==($66|0);
     if ($67) {
      $68 = HEAP32[$62>>2]|0;
      $69 = ((($68)) + 36|0);
      $70 = HEAP32[$69>>2]|0;
      $71 = (FUNCTION_TABLE_ii[$70 & 63]($62)|0);
      $$0$i$i37 = $71;
     } else {
      $72 = HEAP8[$64>>0]|0;
      $73 = $72&255;
      $$0$i$i37 = $73;
     }
     $74 = $$0$i$i37&255;
     $isascii1$i = ($74<<24>>24)>(-1);
     if (!($isascii1$i)) {
      label = 26;
      break L1;
     }
     $sext167 = $$0$i$i37 << 24;
     $75 = $sext167 >> 24;
     $76 = HEAP32[$15>>2]|0;
     $77 = (($76) + ($75<<1)|0);
     $78 = HEAP16[$77>>1]|0;
     $79 = $78 & 8192;
     $80 = ($79<<16>>16)==(0);
     if ($80) {
      label = 26;
      break L1;
     }
     $81 = HEAP32[$__b>>2]|0;
     $82 = ((($81)) + 12|0);
     $83 = HEAP32[$82>>2]|0;
     $84 = ((($81)) + 16|0);
     $85 = HEAP32[$84>>2]|0;
     $86 = ($83|0)==($85|0);
     if ($86) {
      $87 = HEAP32[$81>>2]|0;
      $88 = ((($87)) + 40|0);
      $89 = HEAP32[$88>>2]|0;
      $90 = (FUNCTION_TABLE_ii[$89 & 63]($81)|0);
      $$0$i$i39 = $90;
     } else {
      $91 = ((($83)) + 1|0);
      HEAP32[$82>>2] = $91;
      $92 = HEAP8[$83>>0]|0;
      $93 = $92&255;
      $$0$i$i39 = $93;
     }
     $94 = $$0$i$i39&255;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($__spaces,$94);
     $$pre$i2$i$i45 = $751;$112 = $751;
     label = 28;
    }
    break;
   }
   case 0:  {
    $97 = ($__p$0253|0)==(3);
    if ($97) {
     $752 = $750;$__trailing_sign$1 = $__trailing_sign$0255;
    } else {
     $$pre$i2$i$i45 = $751;$112 = $751;
     label = 28;
    }
    break;
   }
   case 3:  {
    $158 = HEAP8[$__psn>>0]|0;
    $159 = $158 & 1;
    $160 = ($159<<24>>24)==(0);
    $161 = HEAP32[$16>>2]|0;
    $162 = $158&255;
    $163 = $162 >>> 1;
    $164 = $160 ? $163 : $161;
    $165 = HEAP8[$__nsn>>0]|0;
    $166 = $165 & 1;
    $167 = ($166<<24>>24)==(0);
    $168 = HEAP32[$17>>2]|0;
    $169 = $165&255;
    $170 = $169 >>> 1;
    $171 = $167 ? $170 : $168;
    $172 = (0 - ($171))|0;
    $173 = ($164|0)==($172|0);
    if ($173) {
     $752 = $750;$__trailing_sign$1 = $__trailing_sign$0255;
    } else {
     $174 = ($164|0)==(0);
     $175 = ($171|0)==(0);
     $or$cond222 = $174 | $175;
     $176 = HEAP32[$__b>>2]|0;
     $177 = ((($176)) + 12|0);
     $178 = HEAP32[$177>>2]|0;
     $179 = ((($176)) + 16|0);
     $180 = HEAP32[$179>>2]|0;
     $181 = ($178|0)==($180|0);
     if ($or$cond222) {
      if ($181) {
       $182 = HEAP32[$176>>2]|0;
       $183 = ((($182)) + 36|0);
       $184 = HEAP32[$183>>2]|0;
       $185 = (FUNCTION_TABLE_ii[$184 & 63]($176)|0);
       $$0$i$i87 = $185;
      } else {
       $186 = HEAP8[$178>>0]|0;
       $187 = $186&255;
       $$0$i$i87 = $187;
      }
      $188 = $$0$i$i87&255;
      if ($174) {
       $214 = HEAP8[$__nsn>>0]|0;
       $215 = $214 & 1;
       $216 = ($215<<24>>24)==(0);
       $217 = HEAP32[$18>>2]|0;
       $218 = $216 ? $19 : $217;
       $219 = HEAP8[$218>>0]|0;
       $220 = ($188<<24>>24)==($219<<24>>24);
       if (!($220)) {
        $752 = $750;$__trailing_sign$1 = $__trailing_sign$0255;
        break L21;
       }
       $221 = HEAP32[$__b>>2]|0;
       $222 = ((($221)) + 12|0);
       $223 = HEAP32[$222>>2]|0;
       $224 = ((($221)) + 16|0);
       $225 = HEAP32[$224>>2]|0;
       $226 = ($223|0)==($225|0);
       if ($226) {
        $227 = HEAP32[$221>>2]|0;
        $228 = ((($227)) + 40|0);
        $229 = HEAP32[$228>>2]|0;
        (FUNCTION_TABLE_ii[$229 & 63]($221)|0);
       } else {
        $230 = ((($223)) + 1|0);
        HEAP32[$222>>2] = $230;
       }
       HEAP8[$__neg>>0] = 1;
       $231 = HEAP8[$__nsn>>0]|0;
       $232 = $231 & 1;
       $233 = ($232<<24>>24)==(0);
       $234 = HEAP32[$17>>2]|0;
       $235 = $231&255;
       $236 = $235 >>> 1;
       $237 = $233 ? $236 : $234;
       $238 = ($237>>>0)>(1);
       $__nsn$__trailing_sign$0 = $238 ? $__nsn : $__trailing_sign$0255;
       $752 = $750;$__trailing_sign$1 = $__nsn$__trailing_sign$0;
       break L21;
      }
      $189 = HEAP8[$__psn>>0]|0;
      $190 = $189 & 1;
      $191 = ($190<<24>>24)==(0);
      $192 = HEAP32[$20>>2]|0;
      $193 = $191 ? $21 : $192;
      $194 = HEAP8[$193>>0]|0;
      $195 = ($188<<24>>24)==($194<<24>>24);
      if (!($195)) {
       HEAP8[$__neg>>0] = 1;
       $752 = $750;$__trailing_sign$1 = $__trailing_sign$0255;
       break L21;
      }
      $196 = HEAP32[$__b>>2]|0;
      $197 = ((($196)) + 12|0);
      $198 = HEAP32[$197>>2]|0;
      $199 = ((($196)) + 16|0);
      $200 = HEAP32[$199>>2]|0;
      $201 = ($198|0)==($200|0);
      if ($201) {
       $202 = HEAP32[$196>>2]|0;
       $203 = ((($202)) + 40|0);
       $204 = HEAP32[$203>>2]|0;
       (FUNCTION_TABLE_ii[$204 & 63]($196)|0);
      } else {
       $205 = ((($198)) + 1|0);
       HEAP32[$197>>2] = $205;
      }
      $206 = HEAP8[$__psn>>0]|0;
      $207 = $206 & 1;
      $208 = ($207<<24>>24)==(0);
      $209 = HEAP32[$16>>2]|0;
      $210 = $206&255;
      $211 = $210 >>> 1;
      $212 = $208 ? $211 : $209;
      $213 = ($212>>>0)>(1);
      $__psn$__trailing_sign$0 = $213 ? $__psn : $__trailing_sign$0255;
      $752 = $750;$__trailing_sign$1 = $__psn$__trailing_sign$0;
      break L21;
     }
     if ($181) {
      $239 = HEAP32[$176>>2]|0;
      $240 = ((($239)) + 36|0);
      $241 = HEAP32[$240>>2]|0;
      $242 = (FUNCTION_TABLE_ii[$241 & 63]($176)|0);
      $$pre195 = HEAP8[$__psn>>0]|0;
      $$pre196 = HEAP32[$__b>>2]|0;
      $$phi$trans$insert = ((($$pre196)) + 12|0);
      $$pre197 = HEAP32[$$phi$trans$insert>>2]|0;
      $$phi$trans$insert198 = ((($$pre196)) + 16|0);
      $$pre199 = HEAP32[$$phi$trans$insert198>>2]|0;
      $$0$i$i95 = $242;$247 = $$pre195;$254 = $$pre196;$255 = $$pre197;$257 = $$pre199;
     } else {
      $243 = HEAP8[$178>>0]|0;
      $244 = $243&255;
      $$0$i$i95 = $244;$247 = $158;$254 = $176;$255 = $178;$257 = $180;
     }
     $245 = $$0$i$i95&255;
     $246 = $247 & 1;
     $248 = ($246<<24>>24)==(0);
     $249 = HEAP32[$20>>2]|0;
     $250 = $248 ? $21 : $249;
     $251 = HEAP8[$250>>0]|0;
     $252 = ($245<<24>>24)==($251<<24>>24);
     $253 = ((($254)) + 12|0);
     $256 = ($255|0)==($257|0);
     if ($252) {
      if ($256) {
       $258 = HEAP32[$254>>2]|0;
       $259 = ((($258)) + 40|0);
       $260 = HEAP32[$259>>2]|0;
       (FUNCTION_TABLE_ii[$260 & 63]($254)|0);
      } else {
       $261 = ((($255)) + 1|0);
       HEAP32[$253>>2] = $261;
      }
      $262 = HEAP8[$__psn>>0]|0;
      $263 = $262 & 1;
      $264 = ($263<<24>>24)==(0);
      $265 = HEAP32[$16>>2]|0;
      $266 = $262&255;
      $267 = $266 >>> 1;
      $268 = $264 ? $267 : $265;
      $269 = ($268>>>0)>(1);
      $__psn$__trailing_sign$010 = $269 ? $__psn : $__trailing_sign$0255;
      $752 = $750;$__trailing_sign$1 = $__psn$__trailing_sign$010;
      break L21;
     }
     if ($256) {
      $270 = HEAP32[$254>>2]|0;
      $271 = ((($270)) + 36|0);
      $272 = HEAP32[$271>>2]|0;
      $273 = (FUNCTION_TABLE_ii[$272 & 63]($254)|0);
      $$0$i$i105 = $273;
     } else {
      $274 = HEAP8[$255>>0]|0;
      $275 = $274&255;
      $$0$i$i105 = $275;
     }
     $276 = $$0$i$i105&255;
     $277 = HEAP8[$__nsn>>0]|0;
     $278 = $277 & 1;
     $279 = ($278<<24>>24)==(0);
     $280 = HEAP32[$18>>2]|0;
     $281 = $279 ? $19 : $280;
     $282 = HEAP8[$281>>0]|0;
     $283 = ($276<<24>>24)==($282<<24>>24);
     if (!($283)) {
      label = 82;
      break L1;
     }
     $284 = HEAP32[$__b>>2]|0;
     $285 = ((($284)) + 12|0);
     $286 = HEAP32[$285>>2]|0;
     $287 = ((($284)) + 16|0);
     $288 = HEAP32[$287>>2]|0;
     $289 = ($286|0)==($288|0);
     if ($289) {
      $290 = HEAP32[$284>>2]|0;
      $291 = ((($290)) + 40|0);
      $292 = HEAP32[$291>>2]|0;
      (FUNCTION_TABLE_ii[$292 & 63]($284)|0);
     } else {
      $293 = ((($286)) + 1|0);
      HEAP32[$285>>2] = $293;
     }
     HEAP8[$__neg>>0] = 1;
     $294 = HEAP8[$__nsn>>0]|0;
     $295 = $294 & 1;
     $296 = ($295<<24>>24)==(0);
     $297 = HEAP32[$17>>2]|0;
     $298 = $294&255;
     $299 = $298 >>> 1;
     $300 = $296 ? $299 : $297;
     $301 = ($300>>>0)>(1);
     $__nsn$__trailing_sign$011 = $301 ? $__nsn : $__trailing_sign$0255;
     $752 = $750;$__trailing_sign$1 = $__nsn$__trailing_sign$011;
    }
    break;
   }
   case 2:  {
    $304 = ($__trailing_sign$0255|0)!=(0|0);
    $305 = ($__p$0253>>>0)<(2);
    $or$cond = $305 | $304;
    if (!($or$cond)) {
     $306 = ($__p$0253|0)==(2);
     $307 = HEAP8[$30>>0]|0;
     $308 = ($307<<24>>24)!=(0);
     $309 = $306 & $308;
     $brmerge = $23 | $309;
     if (!($brmerge)) {
      $752 = $750;$__trailing_sign$1 = 0;
      break L21;
     }
    }
    $310 = HEAP8[$__sym>>0]|0;
    $311 = $310 & 1;
    $312 = ($311<<24>>24)==(0);
    $313 = HEAP32[$24>>2]|0;
    $314 = $312 ? $25 : $313;
    $315 = $314;
    $316 = ($__p$0253|0)==(0);
    L83: do {
     if ($316) {
      $$ph = $315;
     } else {
      $327 = (($__p$0253) + -1)|0;
      $328 = (($__pat) + ($327)|0);
      $329 = HEAP8[$328>>0]|0;
      $switch = ($329&255)<(2);
      if ($switch) {
       $330 = HEAP32[$26>>2]|0;
       $331 = $310&255;
       $332 = $331 >>> 1;
       $333 = $312 ? $332 : $330;
       $334 = (($314) + ($333)|0);
       $335 = HEAP32[$15>>2]|0;
       $336 = ($333|0)==(0);
       L86: do {
        if ($336) {
         $$lcssa223 = $315;
        } else {
         $338 = $314;$754 = $315;
         while(1) {
          $337 = HEAP8[$338>>0]|0;
          $isascii1$i140 = ($337<<24>>24)>(-1);
          if (!($isascii1$i140)) {
           $$lcssa223 = $754;
           break L86;
          }
          $339 = $337 << 24 >> 24;
          $340 = (($335) + ($339<<1)|0);
          $341 = HEAP16[$340>>1]|0;
          $342 = $341 & 8192;
          $343 = ($342<<16>>16)==(0);
          if ($343) {
           $$lcssa223 = $754;
           break L86;
          }
          $344 = ((($338)) + 1|0);
          $345 = $344;
          $346 = ($344|0)==($334|0);
          if ($346) {
           $$lcssa223 = $345;
           break;
          } else {
           $338 = $344;$754 = $345;
          }
         }
        }
       } while(0);
       $347 = (($$lcssa223) - ($315))|0;
       $348 = HEAP8[$__spaces>>0]|0;
       $349 = $348 & 1;
       $350 = ($349<<24>>24)==(0);
       $351 = HEAP32[$27>>2]|0;
       $352 = $348&255;
       $353 = $352 >>> 1;
       $354 = $350 ? $353 : $351;
       $355 = ($354>>>0)<($347>>>0);
       if ($355) {
        $$ph = $315;
       } else {
        $356 = HEAP32[$28>>2]|0;
        $357 = $350 ? $29 : $356;
        $358 = (($357) + ($354)|0);
        $359 = ($$lcssa223|0)==($315|0);
        if ($359) {
         $$ph = $$lcssa223;
        } else {
         $$sum = (($354) - ($347))|0;
         $360 = (($357) + ($$sum)|0);
         $$in241 = $314;$362 = $360;
         while(1) {
          $361 = HEAP8[$362>>0]|0;
          $363 = HEAP8[$$in241>>0]|0;
          $364 = ($361<<24>>24)==($363<<24>>24);
          if (!($364)) {
           $$ph = $315;
           break L83;
          }
          $365 = ((($362)) + 1|0);
          $366 = ((($$in241)) + 1|0);
          $367 = ($365|0)==($358|0);
          if ($367) {
           $$ph = $$lcssa223;
           break;
          } else {
           $$in241 = $366;$362 = $365;
          }
         }
        }
       }
      } else {
       $$ph = $315;
      }
     }
    } while(0);
    $317 = $310 & 1;
    $318 = ($317<<24>>24)==(0);
    $319 = HEAP32[$26>>2]|0;
    $320 = $310&255;
    $321 = $320 >>> 1;
    $322 = $318 ? $25 : $313;
    $323 = $318 ? $321 : $319;
    $324 = (($322) + ($323)|0);
    $325 = $$ph;
    $326 = ($325|0)==($324|0);
    L98: do {
     if ($326) {
      $$lcssa176 = $324;
     } else {
      $$pre$i2$i$i128246 = $751;$382 = $751;$409 = $325;
      while(1) {
       $368 = HEAP32[$__b>>2]|0;
       $369 = ($368|0)==(0|0);
       do {
        if ($369) {
         $380 = 0;
        } else {
         $370 = ((($368)) + 12|0);
         $371 = HEAP32[$370>>2]|0;
         $372 = ((($368)) + 16|0);
         $373 = HEAP32[$372>>2]|0;
         $374 = ($371|0)==($373|0);
         if ($374) {
          $375 = HEAP32[$368>>2]|0;
          $376 = ((($375)) + 36|0);
          $377 = HEAP32[$376>>2]|0;
          $378 = (FUNCTION_TABLE_ii[$377 & 63]($368)|0);
          $379 = ($378|0)==(-1);
          if ($379) {
           HEAP32[$__b>>2] = 0;
           $380 = 0;
           break;
          } else {
           $$pre$i$i$i124 = HEAP32[$__b>>2]|0;
           $380 = $$pre$i$i$i124;
           break;
          }
         } else {
          $380 = $368;
         }
        }
       } while(0);
       $381 = ($380|0)==(0|0);
       $383 = ($382|0)==(0|0);
       do {
        if ($383) {
         $$pre$i2$i$i128193 = $$pre$i2$i$i128246;
         label = 107;
        } else {
         $384 = ((($382)) + 12|0);
         $385 = HEAP32[$384>>2]|0;
         $386 = ((($382)) + 16|0);
         $387 = HEAP32[$386>>2]|0;
         $388 = ($385|0)==($387|0);
         if (!($388)) {
          if ($381) {
           $$pre$i2$i$i128192 = $$pre$i2$i$i128246;$755 = $382;
           break;
          } else {
           $$lcssa176 = $409;
           break L98;
          }
         }
         $389 = HEAP32[$382>>2]|0;
         $390 = ((($389)) + 36|0);
         $391 = HEAP32[$390>>2]|0;
         $392 = (FUNCTION_TABLE_ii[$391 & 63]($382)|0);
         $393 = ($392|0)==(-1);
         if ($393) {
          HEAP32[$__e>>2] = 0;
          $$pre$i2$i$i128193 = 0;
          label = 107;
          break;
         } else {
          $394 = ($$pre$i2$i$i128246|0)==(0|0);
          $tmp$i$i130 = $381 ^ $394;
          if ($tmp$i$i130) {
           $$pre$i2$i$i128192 = $$pre$i2$i$i128246;$755 = $$pre$i2$i$i128246;
           break;
          } else {
           $$lcssa176 = $409;
           break L98;
          }
         }
        }
       } while(0);
       if ((label|0) == 107) {
        label = 0;
        if ($381) {
         $$lcssa176 = $409;
         break L98;
        } else {
         $$pre$i2$i$i128192 = $$pre$i2$i$i128193;$755 = 0;
        }
       }
       $395 = HEAP32[$__b>>2]|0;
       $396 = ((($395)) + 12|0);
       $397 = HEAP32[$396>>2]|0;
       $398 = ((($395)) + 16|0);
       $399 = HEAP32[$398>>2]|0;
       $400 = ($397|0)==($399|0);
       if ($400) {
        $401 = HEAP32[$395>>2]|0;
        $402 = ((($401)) + 36|0);
        $403 = HEAP32[$402>>2]|0;
        $404 = (FUNCTION_TABLE_ii[$403 & 63]($395)|0);
        $$0$i$i120 = $404;
       } else {
        $405 = HEAP8[$397>>0]|0;
        $406 = $405&255;
        $$0$i$i120 = $406;
       }
       $407 = $$0$i$i120&255;
       $408 = HEAP8[$409>>0]|0;
       $410 = ($407<<24>>24)==($408<<24>>24);
       if (!($410)) {
        $$lcssa176 = $409;
        break L98;
       }
       $411 = HEAP32[$__b>>2]|0;
       $412 = ((($411)) + 12|0);
       $413 = HEAP32[$412>>2]|0;
       $414 = ((($411)) + 16|0);
       $415 = HEAP32[$414>>2]|0;
       $416 = ($413|0)==($415|0);
       if ($416) {
        $417 = HEAP32[$411>>2]|0;
        $418 = ((($417)) + 40|0);
        $419 = HEAP32[$418>>2]|0;
        (FUNCTION_TABLE_ii[$419 & 63]($411)|0);
       } else {
        $420 = ((($413)) + 1|0);
        HEAP32[$412>>2] = $420;
       }
       $421 = ((($409)) + 1|0);
       $$pre190 = HEAP8[$__sym>>0]|0;
       $$pre191 = HEAP32[$24>>2]|0;
       $422 = $$pre190 & 1;
       $423 = ($422<<24>>24)==(0);
       $424 = HEAP32[$26>>2]|0;
       $425 = $$pre190&255;
       $426 = $425 >>> 1;
       $427 = $423 ? $25 : $$pre191;
       $428 = $423 ? $426 : $424;
       $429 = (($427) + ($428)|0);
       $430 = ($421|0)==($429|0);
       if ($430) {
        $$lcssa176 = $429;
        break;
       } else {
        $$pre$i2$i$i128246 = $$pre$i2$i$i128192;$382 = $755;$409 = $421;
       }
      }
     }
    } while(0);
    if ($23) {
     $431 = HEAP8[$__sym>>0]|0;
     $432 = $431 & 1;
     $433 = ($432<<24>>24)==(0);
     $434 = HEAP32[$24>>2]|0;
     $435 = HEAP32[$26>>2]|0;
     $436 = $431&255;
     $437 = $436 >>> 1;
     $438 = $433 ? $25 : $434;
     $439 = $433 ? $437 : $435;
     $440 = (($438) + ($439)|0);
     $441 = ($$lcssa176|0)==($440|0);
     if ($441) {
      $752 = $750;$__trailing_sign$1 = $__trailing_sign$0255;
     } else {
      label = 119;
      break L1;
     }
    } else {
     $752 = $750;$__trailing_sign$1 = $__trailing_sign$0255;
    }
    break;
   }
   case 4:  {
    $61 = HEAP8[$__ts>>0]|0;
    $$pre$i2$i$i113 = $751;$458 = $751;$507 = $750;$__ng$0 = 0;
    L131: while(1) {
     $444 = HEAP32[$__b>>2]|0;
     $445 = ($444|0)==(0|0);
     do {
      if ($445) {
       $456 = 0;
      } else {
       $446 = ((($444)) + 12|0);
       $447 = HEAP32[$446>>2]|0;
       $448 = ((($444)) + 16|0);
       $449 = HEAP32[$448>>2]|0;
       $450 = ($447|0)==($449|0);
       if ($450) {
        $451 = HEAP32[$444>>2]|0;
        $452 = ((($451)) + 36|0);
        $453 = HEAP32[$452>>2]|0;
        $454 = (FUNCTION_TABLE_ii[$453 & 63]($444)|0);
        $455 = ($454|0)==(-1);
        if ($455) {
         HEAP32[$__b>>2] = 0;
         $456 = 0;
         break;
        } else {
         $$pre$i$i$i109 = HEAP32[$__b>>2]|0;
         $456 = $$pre$i$i$i109;
         break;
        }
       } else {
        $456 = $444;
       }
      }
     } while(0);
     $457 = ($456|0)==(0|0);
     $459 = ($458|0)==(0|0);
     do {
      if ($459) {
       $$pre$i2$i$i113183 = $$pre$i2$i$i113;
       label = 130;
      } else {
       $460 = ((($458)) + 12|0);
       $461 = HEAP32[$460>>2]|0;
       $462 = ((($458)) + 16|0);
       $463 = HEAP32[$462>>2]|0;
       $464 = ($461|0)==($463|0);
       if (!($464)) {
        if ($457) {
         $$pre$i2$i$i113185 = $$pre$i2$i$i113;$756 = $458;
         break;
        } else {
         $$lcssa = $507;$$pre$i2$i$i83 = $$pre$i2$i$i113;$__ng$0$lcssa = $__ng$0;
         break L131;
        }
       }
       $465 = HEAP32[$458>>2]|0;
       $466 = ((($465)) + 36|0);
       $467 = HEAP32[$466>>2]|0;
       $468 = (FUNCTION_TABLE_ii[$467 & 63]($458)|0);
       $469 = ($468|0)==(-1);
       if ($469) {
        HEAP32[$__e>>2] = 0;
        $$pre$i2$i$i113183 = 0;
        label = 130;
        break;
       } else {
        $470 = ($$pre$i2$i$i113|0)==(0|0);
        $tmp$i$i115 = $457 ^ $470;
        if ($tmp$i$i115) {
         $$pre$i2$i$i113185 = $$pre$i2$i$i113;$756 = $$pre$i2$i$i113;
         break;
        } else {
         $$lcssa = $507;$$pre$i2$i$i83 = $$pre$i2$i$i113;$__ng$0$lcssa = $__ng$0;
         break L131;
        }
       }
      }
     } while(0);
     if ((label|0) == 130) {
      label = 0;
      if ($457) {
       $$lcssa = $507;$$pre$i2$i$i83 = $$pre$i2$i$i113183;$__ng$0$lcssa = $__ng$0;
       break;
      } else {
       $$pre$i2$i$i113185 = $$pre$i2$i$i113183;$756 = 0;
      }
     }
     $471 = HEAP32[$__b>>2]|0;
     $472 = ((($471)) + 12|0);
     $473 = HEAP32[$472>>2]|0;
     $474 = ((($471)) + 16|0);
     $475 = HEAP32[$474>>2]|0;
     $476 = ($473|0)==($475|0);
     if ($476) {
      $477 = HEAP32[$471>>2]|0;
      $478 = ((($477)) + 36|0);
      $479 = HEAP32[$478>>2]|0;
      $480 = (FUNCTION_TABLE_ii[$479 & 63]($471)|0);
      $$0$i$i103 = $480;
     } else {
      $481 = HEAP8[$473>>0]|0;
      $482 = $481&255;
      $$0$i$i103 = $482;
     }
     $483 = $$0$i$i103&255;
     $isascii1$i101 = ($483<<24>>24)>(-1);
     if ($isascii1$i101) {
      $sext165 = $$0$i$i103 << 24;
      $484 = $sext165 >> 24;
      $485 = HEAP32[$15>>2]|0;
      $486 = (($485) + ($484<<1)|0);
      $487 = HEAP16[$486>>1]|0;
      $488 = $487 & 2048;
      $489 = ($488<<16>>16)==(0);
      if ($489) {
       label = 140;
      } else {
       $490 = HEAP32[$__wn>>2]|0;
       $491 = HEAP32[$0>>2]|0;
       $492 = ($490|0)==($491|0);
       if ($492) {
        __ZNSt3__119__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__wb,$__wn,$0);
        $$pre = HEAP32[$__wn>>2]|0;
        $494 = $$pre;
       } else {
        $494 = $490;
       }
       $493 = ((($494)) + 1|0);
       HEAP32[$__wn>>2] = $493;
       HEAP8[$494>>0] = $483;
       $495 = (($__ng$0) + 1)|0;
       $757 = $507;$__ng$1 = $495;
      }
     } else {
      label = 140;
     }
     if ((label|0) == 140) {
      label = 0;
      $496 = HEAP8[$__grp>>0]|0;
      $497 = $496 & 1;
      $498 = ($497<<24>>24)==(0);
      $499 = HEAP32[$31>>2]|0;
      $500 = $496&255;
      $501 = $500 >>> 1;
      $502 = $498 ? $501 : $499;
      $503 = ($502|0)!=(0);
      $504 = ($__ng$0|0)!=(0);
      $or$cond7 = $504 & $503;
      $505 = ($483<<24>>24)==($61<<24>>24);
      $or$cond13 = $505 & $or$cond7;
      if (!($or$cond13)) {
       $$lcssa = $507;$$pre$i2$i$i83 = $$pre$i2$i$i113185;$__ng$0$lcssa = $__ng$0;
       break;
      }
      $506 = HEAP32[$__ge>>2]|0;
      $508 = ($507|0)==($506|0);
      if ($508) {
       __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__gb,$__gn,$__ge);
       $$pre186 = HEAP32[$__gn>>2]|0;
       $510 = $$pre186;
      } else {
       $510 = $507;
      }
      $509 = ((($510)) + 4|0);
      HEAP32[$__gn>>2] = $509;
      HEAP32[$510>>2] = $__ng$0;
      $757 = $509;$__ng$1 = 0;
     }
     $511 = HEAP32[$__b>>2]|0;
     $512 = ((($511)) + 12|0);
     $513 = HEAP32[$512>>2]|0;
     $514 = ((($511)) + 16|0);
     $515 = HEAP32[$514>>2]|0;
     $516 = ($513|0)==($515|0);
     if ($516) {
      $517 = HEAP32[$511>>2]|0;
      $518 = ((($517)) + 40|0);
      $519 = HEAP32[$518>>2]|0;
      (FUNCTION_TABLE_ii[$519 & 63]($511)|0);
      $$pre$i2$i$i113 = $$pre$i2$i$i113185;$458 = $756;$507 = $757;$__ng$0 = $__ng$1;
      continue;
     } else {
      $520 = ((($513)) + 1|0);
      HEAP32[$512>>2] = $520;
      $$pre$i2$i$i113 = $$pre$i2$i$i113185;$458 = $756;$507 = $757;$__ng$0 = $__ng$1;
      continue;
     }
    }
    $521 = HEAP32[$__gb>>2]|0;
    $522 = ($521|0)!=($$lcssa|0);
    $523 = ($__ng$0$lcssa|0)!=(0);
    $or$cond9 = $523 & $522;
    if ($or$cond9) {
     $524 = HEAP32[$__ge>>2]|0;
     $525 = ($$lcssa|0)==($524|0);
     if ($525) {
      __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__gb,$__gn,$__ge);
      $$pre187 = HEAP32[$__gn>>2]|0;
      $527 = $$pre187;
     } else {
      $527 = $$lcssa;
     }
     $526 = ((($527)) + 4|0);
     HEAP32[$__gn>>2] = $526;
     HEAP32[$527>>2] = $__ng$0$lcssa;
     $758 = $526;
    } else {
     $758 = $$lcssa;
    }
    $528 = HEAP32[$__fd>>2]|0;
    $529 = ($528|0)>(0);
    if ($529) {
     $530 = HEAP32[$__b>>2]|0;
     $531 = ($530|0)==(0|0);
     do {
      if ($531) {
       $542 = 0;
      } else {
       $532 = ((($530)) + 12|0);
       $533 = HEAP32[$532>>2]|0;
       $534 = ((($530)) + 16|0);
       $535 = HEAP32[$534>>2]|0;
       $536 = ($533|0)==($535|0);
       if ($536) {
        $537 = HEAP32[$530>>2]|0;
        $538 = ((($537)) + 36|0);
        $539 = HEAP32[$538>>2]|0;
        $540 = (FUNCTION_TABLE_ii[$539 & 63]($530)|0);
        $541 = ($540|0)==(-1);
        if ($541) {
         HEAP32[$__b>>2] = 0;
         $542 = 0;
         break;
        } else {
         $$pre$i$i$i79 = HEAP32[$__b>>2]|0;
         $542 = $$pre$i$i$i79;
         break;
        }
       } else {
        $542 = $530;
       }
      }
     } while(0);
     $543 = ($542|0)==(0|0);
     $544 = ($$pre$i2$i$i83|0)==(0|0);
     do {
      if ($544) {
       label = 162;
      } else {
       $545 = ((($$pre$i2$i$i83)) + 12|0);
       $546 = HEAP32[$545>>2]|0;
       $547 = ((($$pre$i2$i$i83)) + 16|0);
       $548 = HEAP32[$547>>2]|0;
       $549 = ($546|0)==($548|0);
       if ($549) {
        $550 = HEAP32[$$pre$i2$i$i83>>2]|0;
        $551 = ((($550)) + 36|0);
        $552 = HEAP32[$551>>2]|0;
        $553 = (FUNCTION_TABLE_ii[$552 & 63]($$pre$i2$i$i83)|0);
        $554 = ($553|0)==(-1);
        if ($554) {
         HEAP32[$__e>>2] = 0;
         label = 162;
         break;
        }
       }
       if ($543) {
        $759 = $$pre$i2$i$i83;
       } else {
        label = 167;
        break L1;
       }
      }
     } while(0);
     if ((label|0) == 162) {
      label = 0;
      if ($543) {
       label = 167;
       break L1;
      } else {
       $759 = 0;
      }
     }
     $555 = HEAP32[$__b>>2]|0;
     $556 = ((($555)) + 12|0);
     $557 = HEAP32[$556>>2]|0;
     $558 = ((($555)) + 16|0);
     $559 = HEAP32[$558>>2]|0;
     $560 = ($557|0)==($559|0);
     if ($560) {
      $561 = HEAP32[$555>>2]|0;
      $562 = ((($561)) + 36|0);
      $563 = HEAP32[$562>>2]|0;
      $564 = (FUNCTION_TABLE_ii[$563 & 63]($555)|0);
      $$0$i$i75 = $564;
     } else {
      $565 = HEAP8[$557>>0]|0;
      $566 = $565&255;
      $$0$i$i75 = $566;
     }
     $567 = $$0$i$i75&255;
     $568 = HEAP8[$__dp>>0]|0;
     $569 = ($567<<24>>24)==($568<<24>>24);
     if (!($569)) {
      label = 167;
      break L1;
     }
     $572 = HEAP32[$__b>>2]|0;
     $573 = ((($572)) + 12|0);
     $574 = HEAP32[$573>>2]|0;
     $575 = ((($572)) + 16|0);
     $576 = HEAP32[$575>>2]|0;
     $577 = ($574|0)==($576|0);
     if ($577) {
      $578 = HEAP32[$572>>2]|0;
      $579 = ((($578)) + 40|0);
      $580 = HEAP32[$579>>2]|0;
      (FUNCTION_TABLE_ii[$580 & 63]($572)|0);
     } else {
      $581 = ((($574)) + 1|0);
      HEAP32[$573>>2] = $581;
     }
     $582 = ($528|0)>(0);
     if ($582) {
      $$pre$i2$i$i67237 = $759;$597 = $759;$650 = $528;
      while(1) {
       $583 = HEAP32[$__b>>2]|0;
       $584 = ($583|0)==(0|0);
       do {
        if ($584) {
         $595 = 0;
        } else {
         $585 = ((($583)) + 12|0);
         $586 = HEAP32[$585>>2]|0;
         $587 = ((($583)) + 16|0);
         $588 = HEAP32[$587>>2]|0;
         $589 = ($586|0)==($588|0);
         if ($589) {
          $590 = HEAP32[$583>>2]|0;
          $591 = ((($590)) + 36|0);
          $592 = HEAP32[$591>>2]|0;
          $593 = (FUNCTION_TABLE_ii[$592 & 63]($583)|0);
          $594 = ($593|0)==(-1);
          if ($594) {
           HEAP32[$__b>>2] = 0;
           $595 = 0;
           break;
          } else {
           $$pre$i$i$i63 = HEAP32[$__b>>2]|0;
           $595 = $$pre$i$i$i63;
           break;
          }
         } else {
          $595 = $583;
         }
        }
       } while(0);
       $596 = ($595|0)==(0|0);
       $598 = ($597|0)==(0|0);
       do {
        if ($598) {
         $$pre$i2$i$i67188$ph = $$pre$i2$i$i67237;
         label = 182;
        } else {
         $599 = ((($597)) + 12|0);
         $600 = HEAP32[$599>>2]|0;
         $601 = ((($597)) + 16|0);
         $602 = HEAP32[$601>>2]|0;
         $603 = ($600|0)==($602|0);
         if (!($603)) {
          if ($596) {
           $$pre$i2$i$i67188205 = $$pre$i2$i$i67237;$760 = $597;
           break;
          } else {
           label = 189;
           break L1;
          }
         }
         $604 = HEAP32[$597>>2]|0;
         $605 = ((($604)) + 36|0);
         $606 = HEAP32[$605>>2]|0;
         $607 = (FUNCTION_TABLE_ii[$606 & 63]($597)|0);
         $608 = ($607|0)==(-1);
         if ($608) {
          HEAP32[$__e>>2] = 0;
          $$pre$i2$i$i67188$ph = 0;
          label = 182;
          break;
         } else {
          $609 = ($$pre$i2$i$i67237|0)==(0|0);
          $tmp$i$i69 = $596 ^ $609;
          if ($tmp$i$i69) {
           $$pre$i2$i$i67188205 = $$pre$i2$i$i67237;$760 = $$pre$i2$i$i67237;
           break;
          } else {
           label = 189;
           break L1;
          }
         }
        }
       } while(0);
       if ((label|0) == 182) {
        label = 0;
        if ($596) {
         label = 189;
         break L1;
        } else {
         $$pre$i2$i$i67188205 = $$pre$i2$i$i67188$ph;$760 = 0;
        }
       }
       $610 = HEAP32[$__b>>2]|0;
       $611 = ((($610)) + 12|0);
       $612 = HEAP32[$611>>2]|0;
       $613 = ((($610)) + 16|0);
       $614 = HEAP32[$613>>2]|0;
       $615 = ($612|0)==($614|0);
       if ($615) {
        $616 = HEAP32[$610>>2]|0;
        $617 = ((($616)) + 36|0);
        $618 = HEAP32[$617>>2]|0;
        $619 = (FUNCTION_TABLE_ii[$618 & 63]($610)|0);
        $$0$i$i59 = $619;
       } else {
        $620 = HEAP8[$612>>0]|0;
        $621 = $620&255;
        $$0$i$i59 = $621;
       }
       $622 = $$0$i$i59&255;
       $isascii1$i57 = ($622<<24>>24)>(-1);
       if (!($isascii1$i57)) {
        label = 189;
        break L1;
       }
       $sext = $$0$i$i59 << 24;
       $623 = $sext >> 24;
       $624 = HEAP32[$15>>2]|0;
       $625 = (($624) + ($623<<1)|0);
       $626 = HEAP16[$625>>1]|0;
       $627 = $626 & 2048;
       $628 = ($627<<16>>16)==(0);
       if ($628) {
        label = 189;
        break L1;
       }
       $631 = HEAP32[$__wn>>2]|0;
       $632 = HEAP32[$0>>2]|0;
       $633 = ($631|0)==($632|0);
       if ($633) {
        __ZNSt3__119__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__wb,$__wn,$0);
       }
       $634 = HEAP32[$__b>>2]|0;
       $635 = ((($634)) + 12|0);
       $636 = HEAP32[$635>>2]|0;
       $637 = ((($634)) + 16|0);
       $638 = HEAP32[$637>>2]|0;
       $639 = ($636|0)==($638|0);
       if ($639) {
        $640 = HEAP32[$634>>2]|0;
        $641 = ((($640)) + 36|0);
        $642 = HEAP32[$641>>2]|0;
        $643 = (FUNCTION_TABLE_ii[$642 & 63]($634)|0);
        $$0$i$i27 = $643;
       } else {
        $644 = HEAP8[$636>>0]|0;
        $645 = $644&255;
        $$0$i$i27 = $645;
       }
       $646 = $$0$i$i27&255;
       $647 = HEAP32[$__wn>>2]|0;
       $648 = ((($647)) + 1|0);
       HEAP32[$__wn>>2] = $648;
       HEAP8[$647>>0] = $646;
       $649 = (($650) + -1)|0;
       HEAP32[$__fd>>2] = $649;
       $651 = HEAP32[$__b>>2]|0;
       $652 = ((($651)) + 12|0);
       $653 = HEAP32[$652>>2]|0;
       $654 = ((($651)) + 16|0);
       $655 = HEAP32[$654>>2]|0;
       $656 = ($653|0)==($655|0);
       if ($656) {
        $657 = HEAP32[$651>>2]|0;
        $658 = ((($657)) + 40|0);
        $659 = HEAP32[$658>>2]|0;
        (FUNCTION_TABLE_ii[$659 & 63]($651)|0);
       } else {
        $661 = ((($653)) + 1|0);
        HEAP32[$652>>2] = $661;
       }
       $660 = ($650|0)>(1);
       if ($660) {
        $$pre$i2$i$i67237 = $$pre$i2$i$i67188205;$597 = $760;$650 = $649;
       } else {
        break;
       }
      }
     }
    }
    $662 = HEAP32[$__wn>>2]|0;
    $663 = HEAP32[$__wb>>2]|0;
    $664 = ($662|0)==($663|0);
    if ($664) {
     label = 200;
     break L1;
    } else {
     $752 = $758;$__trailing_sign$1 = $__trailing_sign$0255;
    }
    break;
   }
   default: {
    $752 = $750;$__trailing_sign$1 = $__trailing_sign$0255;
   }
   }
  } while(0);
  L243: do {
   if ((label|0) == 28) {
    while(1) {
     label = 0;
     $98 = HEAP32[$__b>>2]|0;
     $99 = ($98|0)==(0|0);
     do {
      if ($99) {
       $110 = 0;
      } else {
       $100 = ((($98)) + 12|0);
       $101 = HEAP32[$100>>2]|0;
       $102 = ((($98)) + 16|0);
       $103 = HEAP32[$102>>2]|0;
       $104 = ($101|0)==($103|0);
       if ($104) {
        $105 = HEAP32[$98>>2]|0;
        $106 = ((($105)) + 36|0);
        $107 = HEAP32[$106>>2]|0;
        $108 = (FUNCTION_TABLE_ii[$107 & 63]($98)|0);
        $109 = ($108|0)==(-1);
        if ($109) {
         HEAP32[$__b>>2] = 0;
         $110 = 0;
         break;
        } else {
         $$pre$i$i$i41 = HEAP32[$__b>>2]|0;
         $110 = $$pre$i$i$i41;
         break;
        }
       } else {
        $110 = $98;
       }
      }
     } while(0);
     $111 = ($110|0)==(0|0);
     $113 = ($112|0)==(0|0);
     do {
      if ($113) {
       $$pre$i2$i$i45200 = $$pre$i2$i$i45;
       label = 38;
      } else {
       $114 = ((($112)) + 12|0);
       $115 = HEAP32[$114>>2]|0;
       $116 = ((($112)) + 16|0);
       $117 = HEAP32[$116>>2]|0;
       $118 = ($115|0)==($117|0);
       if (!($118)) {
        if ($111) {
         $$pre$i2$i$i45202 = $$pre$i2$i$i45;$753 = $112;
         break;
        } else {
         $752 = $750;$__trailing_sign$1 = $__trailing_sign$0255;
         break L243;
        }
       }
       $119 = HEAP32[$112>>2]|0;
       $120 = ((($119)) + 36|0);
       $121 = HEAP32[$120>>2]|0;
       $122 = (FUNCTION_TABLE_ii[$121 & 63]($112)|0);
       $123 = ($122|0)==(-1);
       if ($123) {
        HEAP32[$__e>>2] = 0;
        $$pre$i2$i$i45200 = 0;
        label = 38;
        break;
       } else {
        $124 = ($$pre$i2$i$i45|0)==(0|0);
        $tmp$i$i47 = $111 ^ $124;
        if ($tmp$i$i47) {
         $$pre$i2$i$i45202 = $$pre$i2$i$i45;$753 = $$pre$i2$i$i45;
         break;
        } else {
         $752 = $750;$__trailing_sign$1 = $__trailing_sign$0255;
         break L243;
        }
       }
      }
     } while(0);
     if ((label|0) == 38) {
      label = 0;
      if ($111) {
       $752 = $750;$__trailing_sign$1 = $__trailing_sign$0255;
       break L243;
      } else {
       $$pre$i2$i$i45202 = $$pre$i2$i$i45200;$753 = 0;
      }
     }
     $125 = HEAP32[$__b>>2]|0;
     $126 = ((($125)) + 12|0);
     $127 = HEAP32[$126>>2]|0;
     $128 = ((($125)) + 16|0);
     $129 = HEAP32[$128>>2]|0;
     $130 = ($127|0)==($129|0);
     if ($130) {
      $131 = HEAP32[$125>>2]|0;
      $132 = ((($131)) + 36|0);
      $133 = HEAP32[$132>>2]|0;
      $134 = (FUNCTION_TABLE_ii[$133 & 63]($125)|0);
      $$0$i$i49 = $134;
     } else {
      $135 = HEAP8[$127>>0]|0;
      $136 = $135&255;
      $$0$i$i49 = $136;
     }
     $137 = $$0$i$i49&255;
     $isascii1$i51 = ($137<<24>>24)>(-1);
     if (!($isascii1$i51)) {
      $752 = $750;$__trailing_sign$1 = $__trailing_sign$0255;
      break L243;
     }
     $sext166 = $$0$i$i49 << 24;
     $138 = $sext166 >> 24;
     $139 = HEAP32[$15>>2]|0;
     $140 = (($139) + ($138<<1)|0);
     $141 = HEAP16[$140>>1]|0;
     $142 = $141 & 8192;
     $143 = ($142<<16>>16)==(0);
     if ($143) {
      $752 = $750;$__trailing_sign$1 = $__trailing_sign$0255;
      break L243;
     }
     $144 = HEAP32[$__b>>2]|0;
     $145 = ((($144)) + 12|0);
     $146 = HEAP32[$145>>2]|0;
     $147 = ((($144)) + 16|0);
     $148 = HEAP32[$147>>2]|0;
     $149 = ($146|0)==($148|0);
     if ($149) {
      $150 = HEAP32[$144>>2]|0;
      $151 = ((($150)) + 40|0);
      $152 = HEAP32[$151>>2]|0;
      $153 = (FUNCTION_TABLE_ii[$152 & 63]($144)|0);
      $$0$i$i55 = $153;
     } else {
      $154 = ((($146)) + 1|0);
      HEAP32[$145>>2] = $154;
      $155 = HEAP8[$146>>0]|0;
      $156 = $155&255;
      $$0$i$i55 = $156;
     }
     $157 = $$0$i$i55&255;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($__spaces,$157);
     $$pre$i2$i$i45 = $$pre$i2$i$i45202;$112 = $753;
     label = 28;
    }
   }
  } while(0);
  $667 = (($__p$0253) + 1)|0;
  $668 = ($667>>>0)<(4);
  if ($668) {
   $750 = $752;$__p$0253 = $667;$__trailing_sign$0255 = $__trailing_sign$1;
  } else {
   $$lcssa224 = $752;$__trailing_sign$0$lcssa = $__trailing_sign$1;
   label = 202;
   break;
  }
 }
 L275: do {
  if ((label|0) == 26) {
   $95 = HEAP32[$__err>>2]|0;
   $96 = $95 | 4;
   HEAP32[$__err>>2] = $96;
   $$0 = 0;
  }
  else if ((label|0) == 82) {
   $302 = HEAP32[$__err>>2]|0;
   $303 = $302 | 4;
   HEAP32[$__err>>2] = $303;
   $$0 = 0;
  }
  else if ((label|0) == 119) {
   $442 = HEAP32[$__err>>2]|0;
   $443 = $442 | 4;
   HEAP32[$__err>>2] = $443;
   $$0 = 0;
  }
  else if ((label|0) == 167) {
   $570 = HEAP32[$__err>>2]|0;
   $571 = $570 | 4;
   HEAP32[$__err>>2] = $571;
   $$0 = 0;
  }
  else if ((label|0) == 189) {
   $629 = HEAP32[$__err>>2]|0;
   $630 = $629 | 4;
   HEAP32[$__err>>2] = $630;
   $$0 = 0;
  }
  else if ((label|0) == 200) {
   $665 = HEAP32[$__err>>2]|0;
   $666 = $665 | 4;
   HEAP32[$__err>>2] = $666;
   $$0 = 0;
  }
  else if ((label|0) == 202) {
   $669 = ($__trailing_sign$0$lcssa|0)==(0|0);
   L283: do {
    if (!($669)) {
     $670 = ((($__trailing_sign$0$lcssa)) + 1|0);
     $671 = ((($__trailing_sign$0$lcssa)) + 8|0);
     $672 = ((($__trailing_sign$0$lcssa)) + 4|0);
     $__i$0 = 1;
     L285: while(1) {
      $673 = HEAP8[$__trailing_sign$0$lcssa>>0]|0;
      $674 = $673 & 1;
      $675 = ($674<<24>>24)==(0);
      if ($675) {
       $677 = $673&255;
       $678 = $677 >>> 1;
       $680 = $678;
      } else {
       $676 = HEAP32[$672>>2]|0;
       $680 = $676;
      }
      $679 = ($__i$0>>>0)<($680>>>0);
      if (!($679)) {
       break L283;
      }
      $681 = HEAP32[$__b>>2]|0;
      $682 = ($681|0)==(0|0);
      do {
       if ($682) {
        $693 = 0;
       } else {
        $683 = ((($681)) + 12|0);
        $684 = HEAP32[$683>>2]|0;
        $685 = ((($681)) + 16|0);
        $686 = HEAP32[$685>>2]|0;
        $687 = ($684|0)==($686|0);
        if ($687) {
         $688 = HEAP32[$681>>2]|0;
         $689 = ((($688)) + 36|0);
         $690 = HEAP32[$689>>2]|0;
         $691 = (FUNCTION_TABLE_ii[$690 & 63]($681)|0);
         $692 = ($691|0)==(-1);
         if ($692) {
          HEAP32[$__b>>2] = 0;
          $693 = 0;
          break;
         } else {
          $$pre$i$i$i = HEAP32[$__b>>2]|0;
          $693 = $$pre$i$i$i;
          break;
         }
        } else {
         $693 = $681;
        }
       }
      } while(0);
      $694 = ($693|0)==(0|0);
      $695 = HEAP32[$__e>>2]|0;
      $696 = ($695|0)==(0|0);
      do {
       if ($696) {
        label = 218;
       } else {
        $697 = ((($695)) + 12|0);
        $698 = HEAP32[$697>>2]|0;
        $699 = ((($695)) + 16|0);
        $700 = HEAP32[$699>>2]|0;
        $701 = ($698|0)==($700|0);
        if ($701) {
         $702 = HEAP32[$695>>2]|0;
         $703 = ((($702)) + 36|0);
         $704 = HEAP32[$703>>2]|0;
         $705 = (FUNCTION_TABLE_ii[$704 & 63]($695)|0);
         $706 = ($705|0)==(-1);
         if ($706) {
          HEAP32[$__e>>2] = 0;
          label = 218;
          break;
         }
        }
        if (!($694)) {
         break L285;
        }
       }
      } while(0);
      if ((label|0) == 218) {
       label = 0;
       if ($694) {
        break;
       }
      }
      $707 = HEAP32[$__b>>2]|0;
      $708 = ((($707)) + 12|0);
      $709 = HEAP32[$708>>2]|0;
      $710 = ((($707)) + 16|0);
      $711 = HEAP32[$710>>2]|0;
      $712 = ($709|0)==($711|0);
      if ($712) {
       $713 = HEAP32[$707>>2]|0;
       $714 = ((($713)) + 36|0);
       $715 = HEAP32[$714>>2]|0;
       $716 = (FUNCTION_TABLE_ii[$715 & 63]($707)|0);
       $$0$i$i = $716;
      } else {
       $717 = HEAP8[$709>>0]|0;
       $718 = $717&255;
       $$0$i$i = $718;
      }
      $719 = $$0$i$i&255;
      $720 = HEAP8[$__trailing_sign$0$lcssa>>0]|0;
      $721 = $720 & 1;
      $722 = ($721<<24>>24)==(0);
      if ($722) {
       $725 = $670;
      } else {
       $723 = HEAP32[$671>>2]|0;
       $725 = $723;
      }
      $724 = (($725) + ($__i$0)|0);
      $726 = HEAP8[$724>>0]|0;
      $727 = ($719<<24>>24)==($726<<24>>24);
      if (!($727)) {
       break;
      }
      $730 = (($__i$0) + 1)|0;
      $731 = HEAP32[$__b>>2]|0;
      $732 = ((($731)) + 12|0);
      $733 = HEAP32[$732>>2]|0;
      $734 = ((($731)) + 16|0);
      $735 = HEAP32[$734>>2]|0;
      $736 = ($733|0)==($735|0);
      if ($736) {
       $737 = HEAP32[$731>>2]|0;
       $738 = ((($737)) + 40|0);
       $739 = HEAP32[$738>>2]|0;
       (FUNCTION_TABLE_ii[$739 & 63]($731)|0);
       $__i$0 = $730;
       continue;
      } else {
       $740 = ((($733)) + 1|0);
       HEAP32[$732>>2] = $740;
       $__i$0 = $730;
       continue;
      }
     }
     $728 = HEAP32[$__err>>2]|0;
     $729 = $728 | 4;
     HEAP32[$__err>>2] = $729;
     $$0 = 0;
     break L275;
    }
   } while(0);
   $741 = HEAP32[$__gb>>2]|0;
   $742 = ($741|0)==($$lcssa224|0);
   if ($742) {
    $$0 = 1;
   } else {
    HEAP32[$__et>>2] = 0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grp,$741,$$lcssa224,$__et);
    $743 = HEAP32[$__et>>2]|0;
    $744 = ($743|0)==(0);
    if ($744) {
     $$0 = 1;
    } else {
     $745 = HEAP32[$__err>>2]|0;
     $746 = $745 | 4;
     HEAP32[$__err>>2] = $746;
     $$0 = 0;
    }
   }
  }
 } while(0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__spaces);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nsn);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__psn);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
 $747 = HEAP32[$__gb>>2]|0;
 HEAP32[$__gb>>2] = 0;
 $748 = ($747|0)==(0|0);
 if (!($748)) {
  $749 = HEAP32[$2>>2]|0;
  FUNCTION_TABLE_vi[$749 & 127]($747);
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE($this,$__b,$__e,$__intl,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $7 = 0, $8 = 0, $9 = 0, $__loc = 0, $__neg = 0, $__w$0$lcssa = 0, $__w$02 = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0;
 $$byval_copy = sp + 24|0;
 $__wbuf = sp + 32|0;
 $__wb = sp + 16|0;
 $__wn = sp + 8|0;
 $__loc = sp + 4|0;
 $__neg = sp + 28|0;
 $0 = sp;
 $1 = $__wbuf;
 HEAP32[$__wb>>2] = $1;
 $2 = ((($__wb)) + 4|0);
 HEAP32[$2>>2] = (107);
 $3 = ((($__wbuf)) + 100|0);
 $4 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $4;
 $5 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6160)|0);
 HEAP8[$__neg>>0] = 0;
 $6 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $6;
 $7 = ((($__iob)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $9 = (__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_($__b,$$byval_copy,$__intl,$__loc,$8,$__err,$__neg,$5,$__wb,$__wn,$3)|0);
 $10 = $6;
 if ($9) {
  $11 = HEAP8[$__v>>0]|0;
  $12 = $11 & 1;
  $13 = ($12<<24>>24)==(0);
  if ($13) {
   $17 = ((($__v)) + 1|0);
   HEAP8[$17>>0] = 0;
   HEAP8[$__v>>0] = 0;
  } else {
   $14 = ((($__v)) + 8|0);
   $15 = HEAP32[$14>>2]|0;
   HEAP8[$15>>0] = 0;
   $16 = ((($__v)) + 4|0);
   HEAP32[$16>>2] = 0;
  }
  $18 = HEAP8[$__neg>>0]|0;
  $19 = ($18<<24>>24)==(0);
  if (!($19)) {
   $20 = HEAP32[$5>>2]|0;
   $21 = ((($20)) + 28|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = (FUNCTION_TABLE_iii[$22 & 15]($5,45)|0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($__v,$23);
  }
  $24 = HEAP32[$5>>2]|0;
  $25 = ((($24)) + 28|0);
  $26 = HEAP32[$25>>2]|0;
  $27 = (FUNCTION_TABLE_iii[$26 & 15]($5,48)|0);
  $28 = HEAP32[$__wb>>2]|0;
  $29 = HEAP32[$__wn>>2]|0;
  $30 = ((($29)) + -1|0);
  $31 = ($28>>>0)<($30>>>0);
  L10: do {
   if ($31) {
    $__w$02 = $28;
    while(1) {
     $32 = HEAP8[$__w$02>>0]|0;
     $33 = ($32<<24>>24)==($27<<24>>24);
     if (!($33)) {
      $__w$0$lcssa = $__w$02;
      break L10;
     }
     $34 = ((($__w$02)) + 1|0);
     $35 = ($34>>>0)<($30>>>0);
     if ($35) {
      $__w$02 = $34;
     } else {
      $__w$0$lcssa = $34;
      break;
     }
    }
   } else {
    $__w$0$lcssa = $28;
   }
  } while(0);
  (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_($__v,$__w$0$lcssa,$29)|0);
 }
 $36 = HEAP32[$__b>>2]|0;
 $37 = ($36|0)==(0|0);
 do {
  if ($37) {
   $48 = 0;
  } else {
   $38 = ((($36)) + 12|0);
   $39 = HEAP32[$38>>2]|0;
   $40 = ((($36)) + 16|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = ($39|0)==($41|0);
   if ($42) {
    $43 = HEAP32[$36>>2]|0;
    $44 = ((($43)) + 36|0);
    $45 = HEAP32[$44>>2]|0;
    $46 = (FUNCTION_TABLE_ii[$45 & 63]($36)|0);
    $47 = ($46|0)==(-1);
    if ($47) {
     HEAP32[$__b>>2] = 0;
     $48 = 0;
     break;
    } else {
     $$pre$i$i$i = HEAP32[$__b>>2]|0;
     $48 = $$pre$i$i$i;
     break;
    }
   } else {
    $48 = $36;
   }
  }
 } while(0);
 $49 = ($48|0)==(0|0);
 $50 = ($6|0)==(0);
 do {
  if ($50) {
   label = 21;
  } else {
   $51 = ((($10)) + 12|0);
   $52 = HEAP32[$51>>2]|0;
   $53 = ((($10)) + 16|0);
   $54 = HEAP32[$53>>2]|0;
   $55 = ($52|0)==($54|0);
   if ($55) {
    $56 = $6;
    $57 = HEAP32[$56>>2]|0;
    $58 = ((($57)) + 36|0);
    $59 = HEAP32[$58>>2]|0;
    $60 = (FUNCTION_TABLE_ii[$59 & 63]($10)|0);
    $61 = ($60|0)==(-1);
    if ($61) {
     HEAP32[$__e>>2] = 0;
     label = 21;
     break;
    }
   }
   if (!($49)) {
    label = 22;
   }
  }
 } while(0);
 if ((label|0) == 21) {
  if ($49) {
   label = 22;
  }
 }
 if ((label|0) == 22) {
  $62 = HEAP32[$__err>>2]|0;
  $63 = $62 | 2;
  HEAP32[$__err>>2] = $63;
 }
 $64 = HEAP32[$__b>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($4)|0);
 $65 = HEAP32[$__wb>>2]|0;
 HEAP32[$__wb>>2] = 0;
 $66 = ($65|0)==(0|0);
 if (!($66)) {
  $67 = HEAP32[$2>>2]|0;
  FUNCTION_TABLE_vi[$67 & 127]($65);
 }
 STACKTOP = sp;return ($64|0);
}
function __ZNSt3__111__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri($__intl,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__psn,$__nsn,$__fd) {
 $__intl = $__intl|0;
 $__loc = $__loc|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__psn = $__psn|0;
 $__nsn = $__nsn|0;
 $__fd = $__fd|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $0 = sp + 100|0;
 $1 = sp + 88|0;
 $2 = sp + 76|0;
 $3 = sp + 64|0;
 $4 = sp + 52|0;
 $5 = sp + 48|0;
 $6 = sp + 36|0;
 $7 = sp + 24|0;
 $8 = sp + 12|0;
 $9 = sp;
 if ($__intl) {
  $10 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,5744)|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ((($11)) + 44|0);
  $13 = HEAP32[$12>>2]|0;
  FUNCTION_TABLE_vii[$13 & 63]($0,$10);
  $14 = HEAP32[$0>>2]|0;
  HEAP8[$__pat>>0]=$14&255;HEAP8[$__pat+1>>0]=($14>>8)&255;HEAP8[$__pat+2>>0]=($14>>16)&255;HEAP8[$__pat+3>>0]=$14>>24;
  $15 = HEAP32[$10>>2]|0;
  $16 = ((($15)) + 32|0);
  $17 = HEAP32[$16>>2]|0;
  FUNCTION_TABLE_vii[$17 & 63]($1,$10);
  $18 = HEAP8[$__nsn>>0]|0;
  $19 = $18 & 1;
  $20 = ($19<<24>>24)==(0);
  if ($20) {
   $24 = ((($__nsn)) + 1|0);
   HEAP8[$24>>0] = 0;
   HEAP8[$__nsn>>0] = 0;
  } else {
   $21 = ((($__nsn)) + 8|0);
   $22 = HEAP32[$21>>2]|0;
   HEAP8[$22>>0] = 0;
   $23 = ((($__nsn)) + 4|0);
   HEAP32[$23>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__nsn,0);
  ;HEAP32[$__nsn>>2]=HEAP32[$1>>2]|0;HEAP32[$__nsn+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$__nsn+8>>2]=HEAP32[$1+8>>2]|0;
  HEAP32[$1>>2] = 0;
  $25 = ((($1)) + 4|0);
  HEAP32[$25>>2] = 0;
  $26 = ((($1)) + 8|0);
  HEAP32[$26>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  $27 = HEAP32[$10>>2]|0;
  $28 = ((($27)) + 28|0);
  $29 = HEAP32[$28>>2]|0;
  FUNCTION_TABLE_vii[$29 & 63]($2,$10);
  $30 = HEAP8[$__psn>>0]|0;
  $31 = $30 & 1;
  $32 = ($31<<24>>24)==(0);
  if ($32) {
   $36 = ((($__psn)) + 1|0);
   HEAP8[$36>>0] = 0;
   HEAP8[$__psn>>0] = 0;
  } else {
   $33 = ((($__psn)) + 8|0);
   $34 = HEAP32[$33>>2]|0;
   HEAP8[$34>>0] = 0;
   $35 = ((($__psn)) + 4|0);
   HEAP32[$35>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__psn,0);
  ;HEAP32[$__psn>>2]=HEAP32[$2>>2]|0;HEAP32[$__psn+4>>2]=HEAP32[$2+4>>2]|0;HEAP32[$__psn+8>>2]=HEAP32[$2+8>>2]|0;
  HEAP32[$2>>2] = 0;
  $37 = ((($2)) + 4|0);
  HEAP32[$37>>2] = 0;
  $38 = ((($2)) + 8|0);
  HEAP32[$38>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
  $39 = HEAP32[$10>>2]|0;
  $40 = ((($39)) + 12|0);
  $41 = HEAP32[$40>>2]|0;
  $42 = (FUNCTION_TABLE_ii[$41 & 63]($10)|0);
  HEAP8[$__dp>>0] = $42;
  $43 = HEAP32[$10>>2]|0;
  $44 = ((($43)) + 16|0);
  $45 = HEAP32[$44>>2]|0;
  $46 = (FUNCTION_TABLE_ii[$45 & 63]($10)|0);
  HEAP8[$__ts>>0] = $46;
  $47 = HEAP32[$10>>2]|0;
  $48 = ((($47)) + 20|0);
  $49 = HEAP32[$48>>2]|0;
  FUNCTION_TABLE_vii[$49 & 63]($3,$10);
  $50 = HEAP8[$__grp>>0]|0;
  $51 = $50 & 1;
  $52 = ($51<<24>>24)==(0);
  if ($52) {
   $56 = ((($__grp)) + 1|0);
   HEAP8[$56>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $53 = ((($__grp)) + 8|0);
   $54 = HEAP32[$53>>2]|0;
   HEAP8[$54>>0] = 0;
   $55 = ((($__grp)) + 4|0);
   HEAP32[$55>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp,0);
  ;HEAP32[$__grp>>2]=HEAP32[$3>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$3+8>>2]|0;
  HEAP32[$3>>2] = 0;
  $57 = ((($3)) + 4|0);
  HEAP32[$57>>2] = 0;
  $58 = ((($3)) + 8|0);
  HEAP32[$58>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
  $59 = HEAP32[$10>>2]|0;
  $60 = ((($59)) + 24|0);
  $61 = HEAP32[$60>>2]|0;
  FUNCTION_TABLE_vii[$61 & 63]($4,$10);
  $62 = HEAP8[$__sym>>0]|0;
  $63 = $62 & 1;
  $64 = ($63<<24>>24)==(0);
  if ($64) {
   $68 = ((($__sym)) + 1|0);
   HEAP8[$68>>0] = 0;
   HEAP8[$__sym>>0] = 0;
  } else {
   $65 = ((($__sym)) + 8|0);
   $66 = HEAP32[$65>>2]|0;
   HEAP8[$66>>0] = 0;
   $67 = ((($__sym)) + 4|0);
   HEAP32[$67>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sym,0);
  ;HEAP32[$__sym>>2]=HEAP32[$4>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$4+8>>2]|0;
  HEAP32[$4>>2] = 0;
  $69 = ((($4)) + 4|0);
  HEAP32[$69>>2] = 0;
  $70 = ((($4)) + 8|0);
  HEAP32[$70>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  $71 = HEAP32[$10>>2]|0;
  $72 = ((($71)) + 36|0);
  $73 = HEAP32[$72>>2]|0;
  $74 = (FUNCTION_TABLE_ii[$73 & 63]($10)|0);
  $storemerge = $74;
 } else {
  $75 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,5680)|0);
  $76 = HEAP32[$75>>2]|0;
  $77 = ((($76)) + 44|0);
  $78 = HEAP32[$77>>2]|0;
  FUNCTION_TABLE_vii[$78 & 63]($5,$75);
  $79 = HEAP32[$5>>2]|0;
  HEAP8[$__pat>>0]=$79&255;HEAP8[$__pat+1>>0]=($79>>8)&255;HEAP8[$__pat+2>>0]=($79>>16)&255;HEAP8[$__pat+3>>0]=$79>>24;
  $80 = HEAP32[$75>>2]|0;
  $81 = ((($80)) + 32|0);
  $82 = HEAP32[$81>>2]|0;
  FUNCTION_TABLE_vii[$82 & 63]($6,$75);
  $83 = HEAP8[$__nsn>>0]|0;
  $84 = $83 & 1;
  $85 = ($84<<24>>24)==(0);
  if ($85) {
   $89 = ((($__nsn)) + 1|0);
   HEAP8[$89>>0] = 0;
   HEAP8[$__nsn>>0] = 0;
  } else {
   $86 = ((($__nsn)) + 8|0);
   $87 = HEAP32[$86>>2]|0;
   HEAP8[$87>>0] = 0;
   $88 = ((($__nsn)) + 4|0);
   HEAP32[$88>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__nsn,0);
  ;HEAP32[$__nsn>>2]=HEAP32[$6>>2]|0;HEAP32[$__nsn+4>>2]=HEAP32[$6+4>>2]|0;HEAP32[$__nsn+8>>2]=HEAP32[$6+8>>2]|0;
  HEAP32[$6>>2] = 0;
  $90 = ((($6)) + 4|0);
  HEAP32[$90>>2] = 0;
  $91 = ((($6)) + 8|0);
  HEAP32[$91>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
  $92 = HEAP32[$75>>2]|0;
  $93 = ((($92)) + 28|0);
  $94 = HEAP32[$93>>2]|0;
  FUNCTION_TABLE_vii[$94 & 63]($7,$75);
  $95 = HEAP8[$__psn>>0]|0;
  $96 = $95 & 1;
  $97 = ($96<<24>>24)==(0);
  if ($97) {
   $101 = ((($__psn)) + 1|0);
   HEAP8[$101>>0] = 0;
   HEAP8[$__psn>>0] = 0;
  } else {
   $98 = ((($__psn)) + 8|0);
   $99 = HEAP32[$98>>2]|0;
   HEAP8[$99>>0] = 0;
   $100 = ((($__psn)) + 4|0);
   HEAP32[$100>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__psn,0);
  ;HEAP32[$__psn>>2]=HEAP32[$7>>2]|0;HEAP32[$__psn+4>>2]=HEAP32[$7+4>>2]|0;HEAP32[$__psn+8>>2]=HEAP32[$7+8>>2]|0;
  HEAP32[$7>>2] = 0;
  $102 = ((($7)) + 4|0);
  HEAP32[$102>>2] = 0;
  $103 = ((($7)) + 8|0);
  HEAP32[$103>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
  $104 = HEAP32[$75>>2]|0;
  $105 = ((($104)) + 12|0);
  $106 = HEAP32[$105>>2]|0;
  $107 = (FUNCTION_TABLE_ii[$106 & 63]($75)|0);
  HEAP8[$__dp>>0] = $107;
  $108 = HEAP32[$75>>2]|0;
  $109 = ((($108)) + 16|0);
  $110 = HEAP32[$109>>2]|0;
  $111 = (FUNCTION_TABLE_ii[$110 & 63]($75)|0);
  HEAP8[$__ts>>0] = $111;
  $112 = HEAP32[$75>>2]|0;
  $113 = ((($112)) + 20|0);
  $114 = HEAP32[$113>>2]|0;
  FUNCTION_TABLE_vii[$114 & 63]($8,$75);
  $115 = HEAP8[$__grp>>0]|0;
  $116 = $115 & 1;
  $117 = ($116<<24>>24)==(0);
  if ($117) {
   $121 = ((($__grp)) + 1|0);
   HEAP8[$121>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $118 = ((($__grp)) + 8|0);
   $119 = HEAP32[$118>>2]|0;
   HEAP8[$119>>0] = 0;
   $120 = ((($__grp)) + 4|0);
   HEAP32[$120>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp,0);
  ;HEAP32[$__grp>>2]=HEAP32[$8>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$8+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$8+8>>2]|0;
  HEAP32[$8>>2] = 0;
  $122 = ((($8)) + 4|0);
  HEAP32[$122>>2] = 0;
  $123 = ((($8)) + 8|0);
  HEAP32[$123>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
  $124 = HEAP32[$75>>2]|0;
  $125 = ((($124)) + 24|0);
  $126 = HEAP32[$125>>2]|0;
  FUNCTION_TABLE_vii[$126 & 63]($9,$75);
  $127 = HEAP8[$__sym>>0]|0;
  $128 = $127 & 1;
  $129 = ($128<<24>>24)==(0);
  if ($129) {
   $133 = ((($__sym)) + 1|0);
   HEAP8[$133>>0] = 0;
   HEAP8[$__sym>>0] = 0;
  } else {
   $130 = ((($__sym)) + 8|0);
   $131 = HEAP32[$130>>2]|0;
   HEAP8[$131>>0] = 0;
   $132 = ((($__sym)) + 4|0);
   HEAP32[$132>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sym,0);
  ;HEAP32[$__sym>>2]=HEAP32[$9>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$9+8>>2]|0;
  HEAP32[$9>>2] = 0;
  $134 = ((($9)) + 4|0);
  HEAP32[$134>>2] = 0;
  $135 = ((($9)) + 8|0);
  HEAP32[$135>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
  $136 = HEAP32[$75>>2]|0;
  $137 = ((($136)) + 36|0);
  $138 = HEAP32[$137>>2]|0;
  $139 = (FUNCTION_TABLE_ii[$138 & 63]($75)|0);
  $storemerge = $139;
 }
 HEAP32[$__fd>>2] = $storemerge;
 STACKTOP = sp;return;
}
function __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$__g_end,$__err) {
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__err = $__err|0;
 var $$01$i$i22 = 0, $$__ig$0 = 0, $$lcssa = 0, $$not = 0, $$not16 = 0, $$pre = 0, $$pre11 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__ig$018 = 0, $__r$019 = 0;
 var $or$cond2 = 0, $or$cond2$lcssa = 0, $or$cond217 = 0, $or$cond220 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$__grouping>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 $3 = ((($__grouping)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $0&255;
 $6 = $5 >>> 1;
 $7 = $2 ? $6 : $4;
 $8 = ($7|0)==(0);
 L1: do {
  if (!($8)) {
   $9 = ($__g|0)==($__g_end|0);
   if ($9) {
    $19 = $0;$27 = $4;
   } else {
    $10 = ((($__g_end)) + -4|0);
    $11 = ($10>>>0)>($__g>>>0);
    if ($11) {
     $$01$i$i22 = $__g;$14 = $10;
     while(1) {
      $12 = HEAP32[$$01$i$i22>>2]|0;
      $13 = HEAP32[$14>>2]|0;
      HEAP32[$$01$i$i22>>2] = $13;
      HEAP32[$14>>2] = $12;
      $15 = ((($$01$i$i22)) + 4|0);
      $16 = ((($14)) + -4|0);
      $17 = ($15>>>0)<($16>>>0);
      if ($17) {
       $$01$i$i22 = $15;$14 = $16;
      } else {
       break;
      }
     }
    }
    $$pre = HEAP8[$__grouping>>0]|0;
    $$pre11 = HEAP32[$3>>2]|0;
    $19 = $$pre;$27 = $$pre11;
   }
   $18 = $19 & 1;
   $20 = ($18<<24>>24)==(0);
   $21 = ((($__grouping)) + 8|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ((($__grouping)) + 1|0);
   $24 = $20 ? $23 : $22;
   $25 = $19&255;
   $26 = $25 >>> 1;
   $28 = $20 ? $26 : $27;
   $29 = (($24) + ($28)|0);
   $30 = ((($__g_end)) + -4|0);
   $31 = $29;
   $32 = ($30>>>0)>($__g>>>0);
   $33 = HEAP8[$24>>0]|0;
   $$not16 = ($33<<24>>24)<(1);
   $34 = ($33<<24>>24)==(127);
   $or$cond217 = $$not16 | $34;
   L10: do {
    if ($32) {
     $36 = $33;$__ig$018 = $24;$__r$019 = $__g;$or$cond220 = $or$cond217;
     while(1) {
      if (!($or$cond220)) {
       $35 = $36 << 24 >> 24;
       $37 = HEAP32[$__r$019>>2]|0;
       $38 = ($35|0)==($37|0);
       if (!($38)) {
        break;
       }
      }
      $39 = $__ig$018;
      $40 = (($31) - ($39))|0;
      $41 = ($40|0)>(1);
      $42 = ((($__ig$018)) + 1|0);
      $$__ig$0 = $41 ? $42 : $__ig$018;
      $43 = ((($__r$019)) + 4|0);
      $44 = ($43>>>0)<($30>>>0);
      $45 = HEAP8[$$__ig$0>>0]|0;
      $$not = ($45<<24>>24)<(1);
      $46 = ($45<<24>>24)==(127);
      $or$cond2 = $$not | $46;
      if ($44) {
       $36 = $45;$__ig$018 = $$__ig$0;$__r$019 = $43;$or$cond220 = $or$cond2;
      } else {
       $$lcssa = $45;$or$cond2$lcssa = $or$cond2;
       break L10;
      }
     }
     HEAP32[$__err>>2] = 4;
     break L1;
    } else {
     $$lcssa = $33;$or$cond2$lcssa = $or$cond217;
    }
   } while(0);
   if (!($or$cond2$lcssa)) {
    $47 = $$lcssa << 24 >> 24;
    $48 = HEAP32[$30>>2]|0;
    $49 = (($48) + -1)|0;
    $50 = ($49>>>0)<($47>>>0);
    if (!($50)) {
     HEAP32[$__err>>2] = 4;
    }
   }
  }
 } while(0);
 return;
}
function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe($this,$__b,$__e,$__intl,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$ = 0, $$0$i$i$i$i = 0, $$0$i$i1$i$i = 0, $$0$lcssa$i = 0, $$byval_copy = 0, $$pre = 0, $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__loc = 0, $__nbuf = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2$lcssa = 0, $__nc$24 = 0, $__neg = 0, $__w$03 = 0;
 var $__wb = 0, $__wbuf = 0, $__wn = 0, $phitmp$i$i$i = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 576|0;
 $$byval_copy = sp + 424|0;
 $vararg_buffer = sp;
 $__wbuf = sp + 24|0;
 $__wb = sp + 16|0;
 $__wn = sp + 12|0;
 $__loc = sp + 8|0;
 $__neg = sp + 564|0;
 $0 = sp + 4|0;
 $__nbuf = sp + 464|0;
 $1 = $__wbuf;
 HEAP32[$__wb>>2] = $1;
 $2 = ((($__wb)) + 4|0);
 HEAP32[$2>>2] = (107);
 $3 = ((($__wbuf)) + 400|0);
 $4 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $4;
 $5 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6152)|0);
 HEAP8[$__neg>>0] = 0;
 $6 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $6;
 $7 = ((($__iob)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $9 = (__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_($__b,$$byval_copy,$__intl,$__loc,$8,$__err,$__neg,$5,$__wb,$__wn,$3)|0);
 if ($9) {
  $10 = HEAP32[$5>>2]|0;
  $11 = ((($10)) + 48|0);
  $12 = HEAP32[$11>>2]|0;
  (FUNCTION_TABLE_iiiii[$12 & 7]($5,9480,(9490),$$byval_copy)|0);
  $13 = HEAP32[$__wn>>2]|0;
  $14 = HEAP32[$__wb>>2]|0;
  $15 = $13;
  $16 = $14;
  $17 = (($15) - ($16))|0;
  $18 = ($17|0)>(392);
  if ($18) {
   $19 = $17 >> 2;
   $20 = (($19) + 2)|0;
   $21 = (_malloc($20)|0);
   $22 = $21;
   $23 = ($21|0)==(0|0);
   if ($23) {
    __ZSt17__throw_bad_allocv();
    // unreachable;
   } else {
    $52 = $22;$__nc$0 = $21;
   }
  } else {
   $52 = 0;$__nc$0 = $__nbuf;
  }
  $24 = HEAP8[$__neg>>0]|0;
  $25 = ($24<<24>>24)==(0);
  if ($25) {
   $__nc$1 = $__nc$0;
  } else {
   $26 = ((($__nc$0)) + 1|0);
   HEAP8[$__nc$0>>0] = 45;
   $__nc$1 = $26;
  }
  $27 = ((($$byval_copy)) + 40|0);
  $28 = $$byval_copy;
  $29 = ($14>>>0)<($13>>>0);
  if ($29) {
   $30 = ((($$byval_copy)) + 4|0);
   $31 = ((($30)) + 4|0);
   $32 = ((($31)) + 4|0);
   $33 = ((($32)) + 4|0);
   $34 = ((($33)) + 4|0);
   $35 = ((($34)) + 4|0);
   $36 = ((($35)) + 4|0);
   $37 = ((($36)) + 4|0);
   $38 = ((($37)) + 4|0);
   $__nc$24 = $__nc$1;$__w$03 = $14;
   while(1) {
    $39 = HEAP32[$__w$03>>2]|0;
    $40 = HEAP32[$$byval_copy>>2]|0;
    $41 = ($40|0)==($39|0);
    if ($41) {
     $$0$lcssa$i = $$byval_copy;
    } else {
     $42 = HEAP32[$30>>2]|0;
     $43 = ($42|0)==($39|0);
     if ($43) {
      $$0$lcssa$i = $30;
     } else {
      $88 = HEAP32[$31>>2]|0;
      $89 = ($88|0)==($39|0);
      if ($89) {
       $$0$lcssa$i = $31;
      } else {
       $90 = HEAP32[$32>>2]|0;
       $91 = ($90|0)==($39|0);
       if ($91) {
        $$0$lcssa$i = $32;
       } else {
        $92 = HEAP32[$33>>2]|0;
        $93 = ($92|0)==($39|0);
        if ($93) {
         $$0$lcssa$i = $33;
        } else {
         $94 = HEAP32[$34>>2]|0;
         $95 = ($94|0)==($39|0);
         if ($95) {
          $$0$lcssa$i = $34;
         } else {
          $96 = HEAP32[$35>>2]|0;
          $97 = ($96|0)==($39|0);
          if ($97) {
           $$0$lcssa$i = $35;
          } else {
           $98 = HEAP32[$36>>2]|0;
           $99 = ($98|0)==($39|0);
           if ($99) {
            $$0$lcssa$i = $36;
           } else {
            $100 = HEAP32[$37>>2]|0;
            $101 = ($100|0)==($39|0);
            if ($101) {
             $$0$lcssa$i = $37;
            } else {
             $102 = HEAP32[$38>>2]|0;
             $103 = ($102|0)==($39|0);
             $$ = $103 ? $38 : $27;
             $$0$lcssa$i = $$;
            }
           }
          }
         }
        }
       }
      }
     }
    }
    $44 = $$0$lcssa$i;
    $45 = (($44) - ($28))|0;
    $46 = $45 >> 2;
    $47 = (9480 + ($46)|0);
    $48 = HEAP8[$47>>0]|0;
    HEAP8[$__nc$24>>0] = $48;
    $49 = ((($__w$03)) + 4|0);
    $50 = ((($__nc$24)) + 1|0);
    $$pre = HEAP32[$__wn>>2]|0;
    $51 = ($49>>>0)<($$pre>>>0);
    if ($51) {
     $__nc$24 = $50;$__w$03 = $49;
    } else {
     $__nc$2$lcssa = $50;
     break;
    }
   }
  } else {
   $__nc$2$lcssa = $__nc$1;
  }
  HEAP8[$__nc$2$lcssa>>0] = 0;
  HEAP32[$vararg_buffer>>2] = $__v;
  (_sscanf($__nbuf,9472,$vararg_buffer)|0);
  $53 = ($52|0)==(0);
  if (!($53)) {
   $54 = $52;
   _free($54);
  }
 }
 $55 = HEAP32[$__b>>2]|0;
 $56 = ($55|0)==(0|0);
 do {
  if ($56) {
   $104 = 1;
  } else {
   $57 = ((($55)) + 12|0);
   $58 = HEAP32[$57>>2]|0;
   $59 = ((($55)) + 16|0);
   $60 = HEAP32[$59>>2]|0;
   $61 = ($58|0)==($60|0);
   if ($61) {
    $62 = HEAP32[$55>>2]|0;
    $63 = ((($62)) + 36|0);
    $64 = HEAP32[$63>>2]|0;
    $65 = (FUNCTION_TABLE_ii[$64 & 63]($55)|0);
    $$0$i$i$i$i = $65;
   } else {
    $66 = HEAP32[$58>>2]|0;
    $$0$i$i$i$i = $66;
   }
   $67 = ($$0$i$i$i$i|0)==(-1);
   if ($67) {
    HEAP32[$__b>>2] = 0;
    $104 = 1;
    break;
   } else {
    $$pre$i$i$i = HEAP32[$__b>>2]|0;
    $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
    $104 = $phitmp$i$i$i;
    break;
   }
  }
 } while(0);
 $68 = HEAP32[$__e>>2]|0;
 $69 = ($68|0)==(0|0);
 do {
  if ($69) {
   label = 28;
  } else {
   $70 = ((($68)) + 12|0);
   $71 = HEAP32[$70>>2]|0;
   $72 = ((($68)) + 16|0);
   $73 = HEAP32[$72>>2]|0;
   $74 = ($71|0)==($73|0);
   if ($74) {
    $75 = HEAP32[$68>>2]|0;
    $76 = ((($75)) + 36|0);
    $77 = HEAP32[$76>>2]|0;
    $78 = (FUNCTION_TABLE_ii[$77 & 63]($68)|0);
    $$0$i$i1$i$i = $78;
   } else {
    $79 = HEAP32[$71>>2]|0;
    $$0$i$i1$i$i = $79;
   }
   $80 = ($$0$i$i1$i$i|0)==(-1);
   if ($80) {
    HEAP32[$__e>>2] = 0;
    label = 28;
    break;
   } else {
    if ($104) {
     break;
    } else {
     label = 30;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 28) {
  if ($104) {
   label = 30;
  }
 }
 if ((label|0) == 30) {
  $81 = HEAP32[$__err>>2]|0;
  $82 = $81 | 2;
  HEAP32[$__err>>2] = $82;
 }
 $83 = HEAP32[$__b>>2]|0;
 $84 = HEAP32[$__loc>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($84)|0);
 $85 = HEAP32[$__wb>>2]|0;
 HEAP32[$__wb>>2] = 0;
 $86 = ($85|0)==(0|0);
 if (!($86)) {
  $87 = HEAP32[$2>>2]|0;
  FUNCTION_TABLE_vi[$87 & 127]($85);
 }
 STACKTOP = sp;return ($83|0);
}
function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_($__b,$__e,$__intl,$__loc,$__flags,$__err,$__neg,$__ct,$__wb,$__wn,$__we) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__loc = $__loc|0;
 $__flags = $__flags|0;
 $__err = $__err|0;
 $__neg = $__neg|0;
 $__ct = $__ct|0;
 $__wb = $__wb|0;
 $__wn = $__wn|0;
 $__we = $__we|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i118 = 0, $$0$i$i$i$i136 = 0, $$0$i$i$i$i28 = 0, $$0$i$i$i$i43 = 0, $$0$i$i$i$i68 = 0, $$0$i$i$i$i90 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i124 = 0, $$0$i$i1$i$i142 = 0, $$0$i$i1$i$i34 = 0, $$0$i$i1$i$i49 = 0, $$0$i$i1$i$i74 = 0, $$0$i$i1$i$i96 = 0, $$0$i$i105 = 0, $$0$i$i111 = 0, $$0$i$i116 = 0, $$0$i$i133 = 0;
 var $$0$i$i26 = 0, $$0$i$i40 = 0, $$0$i$i42 = 0, $$0$i$i56 = 0, $$0$i$i60 = 0, $$0$i$i65 = 0, $$0$i$i82 = 0, $$0$i$i87 = 0, $$in265 = 0, $$lcssa = 0, $$lcssa183 = 0, $$lcssa248 = 0, $$lcssa294 = 0, $$ph = 0, $$ph240 = 0, $$ph241 = 0, $$phi$trans$insert = 0, $$phi$trans$insert209 = 0, $$pre = 0, $$pre$i$i$i = 0;
 var $$pre$i$i$i120 = 0, $$pre$i$i$i138 = 0, $$pre$i$i$i30 = 0, $$pre$i$i$i45 = 0, $$pre$i$i$i70 = 0, $$pre$i$i$i92 = 0, $$pre$i3$i$i126 = 0, $$pre$i3$i$i126190 = 0, $$pre$i3$i$i126192 = 0, $$pre$i3$i$i144203 = 0, $$pre$i3$i$i144204 = 0, $$pre$i3$i$i144270 = 0, $$pre$i3$i$i51 = 0, $$pre$i3$i$i51211 = 0, $$pre$i3$i$i51213 = 0, $$pre$i3$i$i76195$ph = 0, $$pre$i3$i$i76195216 = 0, $$pre$i3$i$i76261 = 0, $$pre$i3$i$i98 = 0, $$pre193 = 0;
 var $$pre194 = 0, $$pre197 = 0, $$pre198 = 0, $$pre199 = 0, $$pre200 = 0, $$pre201 = 0, $$pre202 = 0, $$pre206 = 0, $$pre207 = 0, $$pre208 = 0, $$pre210 = 0, $$sum = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;
 var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0;
 var $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0;
 var $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0;
 var $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0;
 var $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0;
 var $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0;
 var $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0;
 var $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0;
 var $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0;
 var $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0;
 var $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0;
 var $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0;
 var $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0;
 var $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0;
 var $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0;
 var $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0;
 var $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0;
 var $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0;
 var $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0;
 var $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0;
 var $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0;
 var $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0;
 var $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0;
 var $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0;
 var $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0;
 var $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0;
 var $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0;
 var $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0;
 var $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0;
 var $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0;
 var $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0;
 var $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0;
 var $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dp = 0, $__et = 0, $__fd = 0, $__gb = 0, $__gbuf = 0, $__ge = 0, $__gn = 0;
 var $__grp = 0, $__i$0 = 0, $__ng$0 = 0, $__ng$0$lcssa = 0, $__ng$1 = 0, $__nsn = 0, $__nsn$__trailing_sign$0 = 0, $__nsn$__trailing_sign$011 = 0, $__p$0276 = 0, $__pat = 0, $__psn = 0, $__psn$__trailing_sign$0 = 0, $__psn$__trailing_sign$010 = 0, $__spaces = 0, $__sym = 0, $__trailing_sign$0$lcssa = 0, $__trailing_sign$0278 = 0, $__trailing_sign$1 = 0, $__ts = 0, $brmerge = 0;
 var $cond = 0, $or$cond = 0, $or$cond13 = 0, $or$cond239 = 0, $or$cond7 = 0, $or$cond9 = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i121 = 0, $phitmp$i$i$i139 = 0, $phitmp$i$i$i31 = 0, $phitmp$i$i$i46 = 0, $phitmp$i$i$i71 = 0, $phitmp$i$i$i93 = 0, $phitmp$i4$i$i127 = 0, $phitmp$i4$i$i145 = 0, $phitmp$i4$i$i52 = 0, $phitmp$i4$i$i77 = 0, $switch = 0, $tmp$i$i129 = 0, $tmp$i$i147 = 0;
 var $tmp$i$i54 = 0, $tmp$i$i79 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512|0;
 $0 = sp + 496|0;
 $__gbuf = sp + 96|0;
 $__gb = sp + 88|0;
 $__gn = sp + 80|0;
 $__ge = sp + 76|0;
 $__pat = sp + 500|0;
 $__dp = sp + 72|0;
 $__ts = sp + 68|0;
 $__grp = sp + 56|0;
 $__sym = sp + 44|0;
 $__psn = sp + 32|0;
 $__nsn = sp + 20|0;
 $__spaces = sp + 8|0;
 $__fd = sp + 4|0;
 $__et = sp;
 HEAP32[$0>>2] = $__we;
 $1 = $__gbuf;
 HEAP32[$__gb>>2] = $1;
 $2 = ((($__gb)) + 4|0);
 HEAP32[$2>>2] = (107);
 HEAP32[$__gn>>2] = $__gbuf;
 $3 = ((($__gbuf)) + 400|0);
 HEAP32[$__ge>>2] = $3;
 HEAP32[$__grp>>2] = 0;
 $4 = ((($__grp)) + 4|0);
 HEAP32[$4>>2] = 0;
 $5 = ((($__grp)) + 8|0);
 HEAP32[$5>>2] = 0;
 HEAP32[$__sym>>2] = 0;
 $6 = ((($__sym)) + 4|0);
 HEAP32[$6>>2] = 0;
 $7 = ((($__sym)) + 8|0);
 HEAP32[$7>>2] = 0;
 HEAP32[$__psn>>2] = 0;
 $8 = ((($__psn)) + 4|0);
 HEAP32[$8>>2] = 0;
 $9 = ((($__psn)) + 8|0);
 HEAP32[$9>>2] = 0;
 HEAP32[$__nsn>>2] = 0;
 $10 = ((($__nsn)) + 4|0);
 HEAP32[$10>>2] = 0;
 $11 = ((($__nsn)) + 8|0);
 HEAP32[$11>>2] = 0;
 HEAP32[$__spaces>>2] = 0;
 $12 = ((($__spaces)) + 4|0);
 HEAP32[$12>>2] = 0;
 $13 = ((($__spaces)) + 8|0);
 HEAP32[$13>>2] = 0;
 __ZNSt3__111__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri($__intl,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__psn,$__nsn,$__fd);
 $14 = HEAP32[$__wb>>2]|0;
 HEAP32[$__wn>>2] = $14;
 $15 = ((($__psn)) + 4|0);
 $16 = ((($__nsn)) + 4|0);
 $17 = ((($__nsn)) + 8|0);
 $18 = ((($__psn)) + 8|0);
 $19 = $__flags & 512;
 $20 = ($19|0)!=(0);
 $21 = ((($__sym)) + 8|0);
 $22 = ((($__sym)) + 4|0);
 $23 = ((($__spaces)) + 4|0);
 $24 = ((($__spaces)) + 8|0);
 $25 = ((($__pat)) + 3|0);
 $26 = ((($__grp)) + 4|0);
 $727 = $__gbuf;$__p$0276 = 0;$__trailing_sign$0278 = 0;
 L1: while(1) {
  $27 = HEAP32[$__b>>2]|0;
  $28 = ($27|0)==(0|0);
  do {
   if ($28) {
    $728 = 1;
   } else {
    $29 = ((($27)) + 12|0);
    $30 = HEAP32[$29>>2]|0;
    $31 = ((($27)) + 16|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = ($30|0)==($32|0);
    if ($33) {
     $34 = HEAP32[$27>>2]|0;
     $35 = ((($34)) + 36|0);
     $36 = HEAP32[$35>>2]|0;
     $37 = (FUNCTION_TABLE_ii[$36 & 63]($27)|0);
     $$0$i$i$i$i28 = $37;
    } else {
     $38 = HEAP32[$30>>2]|0;
     $$0$i$i$i$i28 = $38;
    }
    $39 = ($$0$i$i$i$i28|0)==(-1);
    if ($39) {
     HEAP32[$__b>>2] = 0;
     $728 = 1;
     break;
    } else {
     $$pre$i$i$i30 = HEAP32[$__b>>2]|0;
     $phitmp$i$i$i31 = ($$pre$i$i$i30|0)==(0|0);
     $728 = $phitmp$i$i$i31;
     break;
    }
   }
  } while(0);
  $40 = HEAP32[$__e>>2]|0;
  $41 = ($40|0)==(0|0);
  do {
   if ($41) {
    label = 15;
   } else {
    $42 = ((($40)) + 12|0);
    $43 = HEAP32[$42>>2]|0;
    $44 = ((($40)) + 16|0);
    $45 = HEAP32[$44>>2]|0;
    $46 = ($43|0)==($45|0);
    if ($46) {
     $47 = HEAP32[$40>>2]|0;
     $48 = ((($47)) + 36|0);
     $49 = HEAP32[$48>>2]|0;
     $50 = (FUNCTION_TABLE_ii[$49 & 63]($40)|0);
     $$0$i$i1$i$i34 = $50;
    } else {
     $51 = HEAP32[$43>>2]|0;
     $$0$i$i1$i$i34 = $51;
    }
    $52 = ($$0$i$i1$i$i34|0)==(-1);
    if ($52) {
     HEAP32[$__e>>2] = 0;
     label = 15;
     break;
    } else {
     if ($728) {
      $729 = $40;
      break;
     } else {
      $$lcssa248 = $727;$__trailing_sign$0$lcssa = $__trailing_sign$0278;
      label = 217;
      break L1;
     }
    }
   }
  } while(0);
  if ((label|0) == 15) {
   label = 0;
   if ($728) {
    $$lcssa248 = $727;$__trailing_sign$0$lcssa = $__trailing_sign$0278;
    label = 217;
    break;
   } else {
    $729 = 0;
   }
  }
  $53 = (($__pat) + ($__p$0276)|0);
  $54 = HEAP8[$53>>0]|0;
  $55 = $54 << 24 >> 24;
  L25: do {
   switch ($55|0) {
   case 3:  {
    $141 = HEAP8[$__psn>>0]|0;
    $142 = $141 & 1;
    $143 = ($142<<24>>24)==(0);
    $144 = HEAP32[$15>>2]|0;
    $145 = $141&255;
    $146 = $145 >>> 1;
    $147 = $143 ? $146 : $144;
    $148 = HEAP8[$__nsn>>0]|0;
    $149 = $148 & 1;
    $150 = ($149<<24>>24)==(0);
    $151 = HEAP32[$16>>2]|0;
    $152 = $148&255;
    $153 = $152 >>> 1;
    $154 = $150 ? $153 : $151;
    $155 = (0 - ($154))|0;
    $156 = ($147|0)==($155|0);
    if ($156) {
     $730 = $727;$__trailing_sign$1 = $__trailing_sign$0278;
    } else {
     $157 = ($147|0)==(0);
     $158 = ($154|0)==(0);
     $or$cond239 = $157 | $158;
     $159 = HEAP32[$__b>>2]|0;
     $160 = ((($159)) + 12|0);
     $161 = HEAP32[$160>>2]|0;
     $162 = ((($159)) + 16|0);
     $163 = HEAP32[$162>>2]|0;
     $164 = ($161|0)==($163|0);
     if ($or$cond239) {
      if ($164) {
       $165 = HEAP32[$159>>2]|0;
       $166 = ((($165)) + 36|0);
       $167 = HEAP32[$166>>2]|0;
       $168 = (FUNCTION_TABLE_ii[$167 & 63]($159)|0);
       $$0$i$i82 = $168;
      } else {
       $169 = HEAP32[$161>>2]|0;
       $$0$i$i82 = $169;
      }
      if ($157) {
       $195 = HEAP8[$__nsn>>0]|0;
       $196 = $195 & 1;
       $197 = ($196<<24>>24)==(0);
       $198 = HEAP32[$17>>2]|0;
       $199 = $197 ? $16 : $198;
       $200 = HEAP32[$199>>2]|0;
       $201 = ($$0$i$i82|0)==($200|0);
       if (!($201)) {
        $730 = $727;$__trailing_sign$1 = $__trailing_sign$0278;
        break L25;
       }
       $202 = HEAP32[$__b>>2]|0;
       $203 = ((($202)) + 12|0);
       $204 = HEAP32[$203>>2]|0;
       $205 = ((($202)) + 16|0);
       $206 = HEAP32[$205>>2]|0;
       $207 = ($204|0)==($206|0);
       if ($207) {
        $208 = HEAP32[$202>>2]|0;
        $209 = ((($208)) + 40|0);
        $210 = HEAP32[$209>>2]|0;
        (FUNCTION_TABLE_ii[$210 & 63]($202)|0);
       } else {
        $211 = ((($204)) + 4|0);
        HEAP32[$203>>2] = $211;
       }
       HEAP8[$__neg>>0] = 1;
       $212 = HEAP8[$__nsn>>0]|0;
       $213 = $212 & 1;
       $214 = ($213<<24>>24)==(0);
       $215 = HEAP32[$16>>2]|0;
       $216 = $212&255;
       $217 = $216 >>> 1;
       $218 = $214 ? $217 : $215;
       $219 = ($218>>>0)>(1);
       $__nsn$__trailing_sign$0 = $219 ? $__nsn : $__trailing_sign$0278;
       $730 = $727;$__trailing_sign$1 = $__nsn$__trailing_sign$0;
       break L25;
      }
      $170 = HEAP8[$__psn>>0]|0;
      $171 = $170 & 1;
      $172 = ($171<<24>>24)==(0);
      $173 = HEAP32[$18>>2]|0;
      $174 = $172 ? $15 : $173;
      $175 = HEAP32[$174>>2]|0;
      $176 = ($$0$i$i82|0)==($175|0);
      if (!($176)) {
       HEAP8[$__neg>>0] = 1;
       $730 = $727;$__trailing_sign$1 = $__trailing_sign$0278;
       break L25;
      }
      $177 = HEAP32[$__b>>2]|0;
      $178 = ((($177)) + 12|0);
      $179 = HEAP32[$178>>2]|0;
      $180 = ((($177)) + 16|0);
      $181 = HEAP32[$180>>2]|0;
      $182 = ($179|0)==($181|0);
      if ($182) {
       $183 = HEAP32[$177>>2]|0;
       $184 = ((($183)) + 40|0);
       $185 = HEAP32[$184>>2]|0;
       (FUNCTION_TABLE_ii[$185 & 63]($177)|0);
      } else {
       $186 = ((($179)) + 4|0);
       HEAP32[$178>>2] = $186;
      }
      $187 = HEAP8[$__psn>>0]|0;
      $188 = $187 & 1;
      $189 = ($188<<24>>24)==(0);
      $190 = HEAP32[$15>>2]|0;
      $191 = $187&255;
      $192 = $191 >>> 1;
      $193 = $189 ? $192 : $190;
      $194 = ($193>>>0)>(1);
      $__psn$__trailing_sign$0 = $194 ? $__psn : $__trailing_sign$0278;
      $730 = $727;$__trailing_sign$1 = $__psn$__trailing_sign$0;
      break L25;
     }
     if ($164) {
      $220 = HEAP32[$159>>2]|0;
      $221 = ((($220)) + 36|0);
      $222 = HEAP32[$221>>2]|0;
      $223 = (FUNCTION_TABLE_ii[$222 & 63]($159)|0);
      $$pre206 = HEAP8[$__psn>>0]|0;
      $$pre207 = HEAP32[$__b>>2]|0;
      $$phi$trans$insert = ((($$pre207)) + 12|0);
      $$pre208 = HEAP32[$$phi$trans$insert>>2]|0;
      $$phi$trans$insert209 = ((($$pre207)) + 16|0);
      $$pre210 = HEAP32[$$phi$trans$insert209>>2]|0;
      $$0$i$i105 = $223;$226 = $$pre206;$233 = $$pre207;$234 = $$pre208;$236 = $$pre210;
     } else {
      $224 = HEAP32[$161>>2]|0;
      $$0$i$i105 = $224;$226 = $141;$233 = $159;$234 = $161;$236 = $163;
     }
     $225 = $226 & 1;
     $227 = ($225<<24>>24)==(0);
     $228 = HEAP32[$18>>2]|0;
     $229 = $227 ? $15 : $228;
     $230 = HEAP32[$229>>2]|0;
     $231 = ($$0$i$i105|0)==($230|0);
     $232 = ((($233)) + 12|0);
     $235 = ($234|0)==($236|0);
     if ($231) {
      if ($235) {
       $237 = HEAP32[$233>>2]|0;
       $238 = ((($237)) + 40|0);
       $239 = HEAP32[$238>>2]|0;
       (FUNCTION_TABLE_ii[$239 & 63]($233)|0);
      } else {
       $240 = ((($234)) + 4|0);
       HEAP32[$232>>2] = $240;
      }
      $241 = HEAP8[$__psn>>0]|0;
      $242 = $241 & 1;
      $243 = ($242<<24>>24)==(0);
      $244 = HEAP32[$15>>2]|0;
      $245 = $241&255;
      $246 = $245 >>> 1;
      $247 = $243 ? $246 : $244;
      $248 = ($247>>>0)>(1);
      $__psn$__trailing_sign$010 = $248 ? $__psn : $__trailing_sign$0278;
      $730 = $727;$__trailing_sign$1 = $__psn$__trailing_sign$010;
      break L25;
     }
     if ($235) {
      $249 = HEAP32[$233>>2]|0;
      $250 = ((($249)) + 36|0);
      $251 = HEAP32[$250>>2]|0;
      $252 = (FUNCTION_TABLE_ii[$251 & 63]($233)|0);
      $$0$i$i111 = $252;
     } else {
      $253 = HEAP32[$234>>2]|0;
      $$0$i$i111 = $253;
     }
     $254 = HEAP8[$__nsn>>0]|0;
     $255 = $254 & 1;
     $256 = ($255<<24>>24)==(0);
     $257 = HEAP32[$17>>2]|0;
     $258 = $256 ? $16 : $257;
     $259 = HEAP32[$258>>2]|0;
     $260 = ($$0$i$i111|0)==($259|0);
     if (!($260)) {
      label = 86;
      break L1;
     }
     $261 = HEAP32[$__b>>2]|0;
     $262 = ((($261)) + 12|0);
     $263 = HEAP32[$262>>2]|0;
     $264 = ((($261)) + 16|0);
     $265 = HEAP32[$264>>2]|0;
     $266 = ($263|0)==($265|0);
     if ($266) {
      $267 = HEAP32[$261>>2]|0;
      $268 = ((($267)) + 40|0);
      $269 = HEAP32[$268>>2]|0;
      (FUNCTION_TABLE_ii[$269 & 63]($261)|0);
     } else {
      $270 = ((($263)) + 4|0);
      HEAP32[$262>>2] = $270;
     }
     HEAP8[$__neg>>0] = 1;
     $271 = HEAP8[$__nsn>>0]|0;
     $272 = $271 & 1;
     $273 = ($272<<24>>24)==(0);
     $274 = HEAP32[$16>>2]|0;
     $275 = $271&255;
     $276 = $275 >>> 1;
     $277 = $273 ? $276 : $274;
     $278 = ($277>>>0)>(1);
     $__nsn$__trailing_sign$011 = $278 ? $__nsn : $__trailing_sign$0278;
     $730 = $727;$__trailing_sign$1 = $__nsn$__trailing_sign$011;
    }
    break;
   }
   case 2:  {
    $281 = ($__trailing_sign$0278|0)!=(0|0);
    $282 = ($__p$0276>>>0)<(2);
    $or$cond = $282 | $281;
    if (!($or$cond)) {
     $283 = ($__p$0276|0)==(2);
     $284 = HEAP8[$25>>0]|0;
     $285 = ($284<<24>>24)!=(0);
     $286 = $283 & $285;
     $brmerge = $20 | $286;
     if (!($brmerge)) {
      $730 = $727;$__trailing_sign$1 = 0;
      break L25;
     }
    }
    $287 = HEAP8[$__sym>>0]|0;
    $288 = $287 & 1;
    $289 = ($288<<24>>24)==(0);
    $290 = HEAP32[$21>>2]|0;
    $291 = $289 ? $22 : $290;
    $292 = $291;
    $293 = ($__p$0276|0)==(0);
    L74: do {
     if ($293) {
      $$ph = $290;$$ph240 = $287;$$ph241 = $292;
     } else {
      $304 = (($__p$0276) + -1)|0;
      $305 = (($__pat) + ($304)|0);
      $306 = HEAP8[$305>>0]|0;
      $switch = ($306&255)<(2);
      if ($switch) {
       $307 = $287 & 1;
       $308 = ($307<<24>>24)==(0);
       $309 = HEAP32[$22>>2]|0;
       $310 = $287&255;
       $311 = $310 >>> 1;
       $312 = $308 ? $22 : $290;
       $313 = $308 ? $311 : $309;
       $314 = (($312) + ($313<<2)|0);
       $315 = ($291|0)==($314|0);
       L77: do {
        if ($315) {
         $334 = $287;$336 = $290;$340 = $292;
        } else {
         $317 = $291;$732 = $292;
         while(1) {
          $316 = HEAP32[$317>>2]|0;
          $318 = HEAP32[$__ct>>2]|0;
          $319 = ((($318)) + 12|0);
          $320 = HEAP32[$319>>2]|0;
          $321 = (FUNCTION_TABLE_iiii[$320 & 31]($__ct,8192,$316)|0);
          if (!($321)) {
           $$lcssa294 = $732;
           break;
          }
          $322 = ((($317)) + 4|0);
          $323 = $322;
          $$pre197 = HEAP8[$__sym>>0]|0;
          $$pre198 = HEAP32[$21>>2]|0;
          $324 = $$pre197 & 1;
          $325 = ($324<<24>>24)==(0);
          $326 = HEAP32[$22>>2]|0;
          $327 = $$pre197&255;
          $328 = $327 >>> 1;
          $329 = $325 ? $22 : $$pre198;
          $330 = $325 ? $328 : $326;
          $331 = (($329) + ($330<<2)|0);
          $332 = ($322|0)==($331|0);
          if ($332) {
           $334 = $$pre197;$336 = $$pre198;$340 = $323;
           break L77;
          } else {
           $317 = $322;$732 = $323;
          }
         }
         $$pre199 = HEAP8[$__sym>>0]|0;
         $$pre200 = HEAP32[$21>>2]|0;
         $334 = $$pre199;$336 = $$pre200;$340 = $$lcssa294;
        }
       } while(0);
       $333 = $334 & 1;
       $335 = ($333<<24>>24)==(0);
       $337 = $335 ? $22 : $336;
       $338 = $337;
       $339 = (($340) - ($338))|0;
       $341 = $339 >> 2;
       $342 = HEAP8[$__spaces>>0]|0;
       $343 = $342 & 1;
       $344 = ($343<<24>>24)==(0);
       $345 = HEAP32[$23>>2]|0;
       $346 = $342&255;
       $347 = $346 >>> 1;
       $348 = $344 ? $347 : $345;
       $349 = ($348>>>0)<($341>>>0);
       if ($349) {
        $$ph = $336;$$ph240 = $334;$$ph241 = $338;
       } else {
        $350 = HEAP32[$24>>2]|0;
        $351 = $344 ? $23 : $350;
        $352 = (($351) + ($348<<2)|0);
        $353 = ($341|0)==(0);
        if ($353) {
         $$ph = $336;$$ph240 = $334;$$ph241 = $340;
        } else {
         $$sum = (($348) - ($341))|0;
         $354 = (($351) + ($$sum<<2)|0);
         $$in265 = $337;$356 = $354;
         while(1) {
          $355 = HEAP32[$356>>2]|0;
          $357 = HEAP32[$$in265>>2]|0;
          $358 = ($355|0)==($357|0);
          if (!($358)) {
           $$ph = $336;$$ph240 = $334;$$ph241 = $338;
           break L74;
          }
          $359 = ((($356)) + 4|0);
          $360 = ((($$in265)) + 4|0);
          $361 = ($359|0)==($352|0);
          if ($361) {
           $$ph = $336;$$ph240 = $334;$$ph241 = $340;
           break;
          } else {
           $$in265 = $360;$356 = $359;
          }
         }
        }
       }
      } else {
       $$ph = $290;$$ph240 = $287;$$ph241 = $292;
      }
     }
    } while(0);
    $294 = $$ph240 & 1;
    $295 = ($294<<24>>24)==(0);
    $296 = HEAP32[$22>>2]|0;
    $297 = $$ph240&255;
    $298 = $297 >>> 1;
    $299 = $295 ? $22 : $$ph;
    $300 = $295 ? $298 : $296;
    $301 = (($299) + ($300<<2)|0);
    $302 = $$ph241;
    $303 = ($302|0)==($301|0);
    L89: do {
     if ($303) {
      $$lcssa183 = $301;
     } else {
      $$pre$i3$i$i144270 = $729;$375 = $729;$401 = $302;
      while(1) {
       $362 = HEAP32[$__b>>2]|0;
       $363 = ($362|0)==(0|0);
       do {
        if ($363) {
         $388 = 1;
        } else {
         $364 = ((($362)) + 12|0);
         $365 = HEAP32[$364>>2]|0;
         $366 = ((($362)) + 16|0);
         $367 = HEAP32[$366>>2]|0;
         $368 = ($365|0)==($367|0);
         if ($368) {
          $369 = HEAP32[$362>>2]|0;
          $370 = ((($369)) + 36|0);
          $371 = HEAP32[$370>>2]|0;
          $372 = (FUNCTION_TABLE_ii[$371 & 63]($362)|0);
          $$0$i$i$i$i136 = $372;
         } else {
          $373 = HEAP32[$365>>2]|0;
          $$0$i$i$i$i136 = $373;
         }
         $374 = ($$0$i$i$i$i136|0)==(-1);
         if ($374) {
          HEAP32[$__b>>2] = 0;
          $388 = 1;
          break;
         } else {
          $$pre$i$i$i138 = HEAP32[$__b>>2]|0;
          $phitmp$i$i$i139 = ($$pre$i$i$i138|0)==(0|0);
          $388 = $phitmp$i$i$i139;
          break;
         }
        }
       } while(0);
       $376 = ($375|0)==(0|0);
       do {
        if ($376) {
         $$pre$i3$i$i144204 = $$pre$i3$i$i144270;
         label = 114;
        } else {
         $377 = ((($375)) + 12|0);
         $378 = HEAP32[$377>>2]|0;
         $379 = ((($375)) + 16|0);
         $380 = HEAP32[$379>>2]|0;
         $381 = ($378|0)==($380|0);
         if ($381) {
          $382 = HEAP32[$375>>2]|0;
          $383 = ((($382)) + 36|0);
          $384 = HEAP32[$383>>2]|0;
          $385 = (FUNCTION_TABLE_ii[$384 & 63]($375)|0);
          $$0$i$i1$i$i142 = $385;
         } else {
          $386 = HEAP32[$378>>2]|0;
          $$0$i$i1$i$i142 = $386;
         }
         $387 = ($$0$i$i1$i$i142|0)==(-1);
         if ($387) {
          HEAP32[$__e>>2] = 0;
          $$pre$i3$i$i144204 = 0;
          label = 114;
          break;
         } else {
          $phitmp$i4$i$i145 = ($$pre$i3$i$i144270|0)==(0|0);
          $tmp$i$i147 = $388 ^ $phitmp$i4$i$i145;
          if ($tmp$i$i147) {
           $$pre$i3$i$i144203 = $$pre$i3$i$i144270;$733 = $$pre$i3$i$i144270;
           break;
          } else {
           $$lcssa183 = $401;
           break L89;
          }
         }
        }
       } while(0);
       if ((label|0) == 114) {
        label = 0;
        if ($388) {
         $$lcssa183 = $401;
         break L89;
        } else {
         $$pre$i3$i$i144203 = $$pre$i3$i$i144204;$733 = 0;
        }
       }
       $389 = HEAP32[$__b>>2]|0;
       $390 = ((($389)) + 12|0);
       $391 = HEAP32[$390>>2]|0;
       $392 = ((($389)) + 16|0);
       $393 = HEAP32[$392>>2]|0;
       $394 = ($391|0)==($393|0);
       if ($394) {
        $395 = HEAP32[$389>>2]|0;
        $396 = ((($395)) + 36|0);
        $397 = HEAP32[$396>>2]|0;
        $398 = (FUNCTION_TABLE_ii[$397 & 63]($389)|0);
        $$0$i$i133 = $398;
       } else {
        $399 = HEAP32[$391>>2]|0;
        $$0$i$i133 = $399;
       }
       $400 = HEAP32[$401>>2]|0;
       $402 = ($$0$i$i133|0)==($400|0);
       if (!($402)) {
        $$lcssa183 = $401;
        break L89;
       }
       $403 = HEAP32[$__b>>2]|0;
       $404 = ((($403)) + 12|0);
       $405 = HEAP32[$404>>2]|0;
       $406 = ((($403)) + 16|0);
       $407 = HEAP32[$406>>2]|0;
       $408 = ($405|0)==($407|0);
       if ($408) {
        $409 = HEAP32[$403>>2]|0;
        $410 = ((($409)) + 40|0);
        $411 = HEAP32[$410>>2]|0;
        (FUNCTION_TABLE_ii[$411 & 63]($403)|0);
       } else {
        $412 = ((($405)) + 4|0);
        HEAP32[$404>>2] = $412;
       }
       $413 = ((($401)) + 4|0);
       $$pre201 = HEAP8[$__sym>>0]|0;
       $$pre202 = HEAP32[$21>>2]|0;
       $414 = $$pre201 & 1;
       $415 = ($414<<24>>24)==(0);
       $416 = HEAP32[$22>>2]|0;
       $417 = $$pre201&255;
       $418 = $417 >>> 1;
       $419 = $415 ? $22 : $$pre202;
       $420 = $415 ? $418 : $416;
       $421 = (($419) + ($420<<2)|0);
       $422 = ($413|0)==($421|0);
       if ($422) {
        $$lcssa183 = $421;
        break;
       } else {
        $$pre$i3$i$i144270 = $$pre$i3$i$i144203;$375 = $733;$401 = $413;
       }
      }
     }
    } while(0);
    if ($20) {
     $423 = HEAP8[$__sym>>0]|0;
     $424 = $423 & 1;
     $425 = ($424<<24>>24)==(0);
     $426 = HEAP32[$21>>2]|0;
     $427 = HEAP32[$22>>2]|0;
     $428 = $423&255;
     $429 = $428 >>> 1;
     $430 = $425 ? $22 : $426;
     $431 = $425 ? $429 : $427;
     $432 = (($430) + ($431<<2)|0);
     $433 = ($$lcssa183|0)==($432|0);
     if ($433) {
      $730 = $727;$__trailing_sign$1 = $__trailing_sign$0278;
     } else {
      label = 126;
      break L1;
     }
    } else {
     $730 = $727;$__trailing_sign$1 = $__trailing_sign$0278;
    }
    break;
   }
   case 1:  {
    $cond = ($__p$0276|0)==(3);
    if ($cond) {
     $730 = $727;$__trailing_sign$1 = $__trailing_sign$0278;
    } else {
     $57 = HEAP32[$__b>>2]|0;
     $58 = ((($57)) + 12|0);
     $59 = HEAP32[$58>>2]|0;
     $60 = ((($57)) + 16|0);
     $61 = HEAP32[$60>>2]|0;
     $62 = ($59|0)==($61|0);
     if ($62) {
      $63 = HEAP32[$57>>2]|0;
      $64 = ((($63)) + 36|0);
      $65 = HEAP32[$64>>2]|0;
      $66 = (FUNCTION_TABLE_ii[$65 & 63]($57)|0);
      $$0$i$i40 = $66;
     } else {
      $67 = HEAP32[$59>>2]|0;
      $$0$i$i40 = $67;
     }
     $68 = HEAP32[$__ct>>2]|0;
     $69 = ((($68)) + 12|0);
     $70 = HEAP32[$69>>2]|0;
     $71 = (FUNCTION_TABLE_iiii[$70 & 31]($__ct,8192,$$0$i$i40)|0);
     if (!($71)) {
      label = 28;
      break L1;
     }
     $72 = HEAP32[$__b>>2]|0;
     $73 = ((($72)) + 12|0);
     $74 = HEAP32[$73>>2]|0;
     $75 = ((($72)) + 16|0);
     $76 = HEAP32[$75>>2]|0;
     $77 = ($74|0)==($76|0);
     if ($77) {
      $78 = HEAP32[$72>>2]|0;
      $79 = ((($78)) + 40|0);
      $80 = HEAP32[$79>>2]|0;
      $81 = (FUNCTION_TABLE_ii[$80 & 63]($72)|0);
      $$0$i$i42 = $81;
     } else {
      $82 = ((($74)) + 4|0);
      HEAP32[$73>>2] = $82;
      $83 = HEAP32[$74>>2]|0;
      $$0$i$i42 = $83;
     }
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($__spaces,$$0$i$i42);
     $$pre$i3$i$i51 = $729;$100 = $729;
     label = 30;
    }
    break;
   }
   case 0:  {
    $86 = ($__p$0276|0)==(3);
    if ($86) {
     $730 = $727;$__trailing_sign$1 = $__trailing_sign$0278;
    } else {
     $$pre$i3$i$i51 = $729;$100 = $729;
     label = 30;
    }
    break;
   }
   case 4:  {
    $56 = HEAP32[$__ts>>2]|0;
    $$pre$i3$i$i126 = $729;$449 = $729;$495 = $727;$__ng$0 = 0;
    L138: while(1) {
     $436 = HEAP32[$__b>>2]|0;
     $437 = ($436|0)==(0|0);
     do {
      if ($437) {
       $462 = 1;
      } else {
       $438 = ((($436)) + 12|0);
       $439 = HEAP32[$438>>2]|0;
       $440 = ((($436)) + 16|0);
       $441 = HEAP32[$440>>2]|0;
       $442 = ($439|0)==($441|0);
       if ($442) {
        $443 = HEAP32[$436>>2]|0;
        $444 = ((($443)) + 36|0);
        $445 = HEAP32[$444>>2]|0;
        $446 = (FUNCTION_TABLE_ii[$445 & 63]($436)|0);
        $$0$i$i$i$i118 = $446;
       } else {
        $447 = HEAP32[$439>>2]|0;
        $$0$i$i$i$i118 = $447;
       }
       $448 = ($$0$i$i$i$i118|0)==(-1);
       if ($448) {
        HEAP32[$__b>>2] = 0;
        $462 = 1;
        break;
       } else {
        $$pre$i$i$i120 = HEAP32[$__b>>2]|0;
        $phitmp$i$i$i121 = ($$pre$i$i$i120|0)==(0|0);
        $462 = $phitmp$i$i$i121;
        break;
       }
      }
     } while(0);
     $450 = ($449|0)==(0|0);
     do {
      if ($450) {
       $$pre$i3$i$i126190 = $$pre$i3$i$i126;
       label = 140;
      } else {
       $451 = ((($449)) + 12|0);
       $452 = HEAP32[$451>>2]|0;
       $453 = ((($449)) + 16|0);
       $454 = HEAP32[$453>>2]|0;
       $455 = ($452|0)==($454|0);
       if ($455) {
        $456 = HEAP32[$449>>2]|0;
        $457 = ((($456)) + 36|0);
        $458 = HEAP32[$457>>2]|0;
        $459 = (FUNCTION_TABLE_ii[$458 & 63]($449)|0);
        $$0$i$i1$i$i124 = $459;
       } else {
        $460 = HEAP32[$452>>2]|0;
        $$0$i$i1$i$i124 = $460;
       }
       $461 = ($$0$i$i1$i$i124|0)==(-1);
       if ($461) {
        HEAP32[$__e>>2] = 0;
        $$pre$i3$i$i126190 = 0;
        label = 140;
        break;
       } else {
        $phitmp$i4$i$i127 = ($$pre$i3$i$i126|0)==(0|0);
        $tmp$i$i129 = $462 ^ $phitmp$i4$i$i127;
        if ($tmp$i$i129) {
         $$pre$i3$i$i126192 = $$pre$i3$i$i126;$734 = $$pre$i3$i$i126;
         break;
        } else {
         $$lcssa = $495;$$pre$i3$i$i98 = $$pre$i3$i$i126;$__ng$0$lcssa = $__ng$0;
         break L138;
        }
       }
      }
     } while(0);
     if ((label|0) == 140) {
      label = 0;
      if ($462) {
       $$lcssa = $495;$$pre$i3$i$i98 = $$pre$i3$i$i126190;$__ng$0$lcssa = $__ng$0;
       break;
      } else {
       $$pre$i3$i$i126192 = $$pre$i3$i$i126190;$734 = 0;
      }
     }
     $463 = HEAP32[$__b>>2]|0;
     $464 = ((($463)) + 12|0);
     $465 = HEAP32[$464>>2]|0;
     $466 = ((($463)) + 16|0);
     $467 = HEAP32[$466>>2]|0;
     $468 = ($465|0)==($467|0);
     if ($468) {
      $469 = HEAP32[$463>>2]|0;
      $470 = ((($469)) + 36|0);
      $471 = HEAP32[$470>>2]|0;
      $472 = (FUNCTION_TABLE_ii[$471 & 63]($463)|0);
      $$0$i$i116 = $472;
     } else {
      $473 = HEAP32[$465>>2]|0;
      $$0$i$i116 = $473;
     }
     $474 = HEAP32[$__ct>>2]|0;
     $475 = ((($474)) + 12|0);
     $476 = HEAP32[$475>>2]|0;
     $477 = (FUNCTION_TABLE_iiii[$476 & 31]($__ct,2048,$$0$i$i116)|0);
     if ($477) {
      $478 = HEAP32[$__wn>>2]|0;
      $479 = HEAP32[$0>>2]|0;
      $480 = ($478|0)==($479|0);
      if ($480) {
       __ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__wb,$__wn,$0);
       $$pre193 = HEAP32[$__wn>>2]|0;
       $482 = $$pre193;
      } else {
       $482 = $478;
      }
      $481 = ((($482)) + 4|0);
      HEAP32[$__wn>>2] = $481;
      HEAP32[$482>>2] = $$0$i$i116;
      $483 = (($__ng$0) + 1)|0;
      $735 = $495;$__ng$1 = $483;
     } else {
      $484 = HEAP8[$__grp>>0]|0;
      $485 = $484 & 1;
      $486 = ($485<<24>>24)==(0);
      $487 = HEAP32[$26>>2]|0;
      $488 = $484&255;
      $489 = $488 >>> 1;
      $490 = $486 ? $489 : $487;
      $491 = ($490|0)!=(0);
      $492 = ($__ng$0|0)!=(0);
      $or$cond7 = $492 & $491;
      $493 = ($$0$i$i116|0)==($56|0);
      $or$cond13 = $493 & $or$cond7;
      if (!($or$cond13)) {
       $$lcssa = $495;$$pre$i3$i$i98 = $$pre$i3$i$i126192;$__ng$0$lcssa = $__ng$0;
       break;
      }
      $494 = HEAP32[$__ge>>2]|0;
      $496 = ($495|0)==($494|0);
      if ($496) {
       __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__gb,$__gn,$__ge);
       $$pre = HEAP32[$__gn>>2]|0;
       $498 = $$pre;
      } else {
       $498 = $495;
      }
      $497 = ((($498)) + 4|0);
      HEAP32[$__gn>>2] = $497;
      HEAP32[$498>>2] = $__ng$0;
      $735 = $497;$__ng$1 = 0;
     }
     $499 = HEAP32[$__b>>2]|0;
     $500 = ((($499)) + 12|0);
     $501 = HEAP32[$500>>2]|0;
     $502 = ((($499)) + 16|0);
     $503 = HEAP32[$502>>2]|0;
     $504 = ($501|0)==($503|0);
     if ($504) {
      $505 = HEAP32[$499>>2]|0;
      $506 = ((($505)) + 40|0);
      $507 = HEAP32[$506>>2]|0;
      (FUNCTION_TABLE_ii[$507 & 63]($499)|0);
      $$pre$i3$i$i126 = $$pre$i3$i$i126192;$449 = $734;$495 = $735;$__ng$0 = $__ng$1;
      continue;
     } else {
      $508 = ((($501)) + 4|0);
      HEAP32[$500>>2] = $508;
      $$pre$i3$i$i126 = $$pre$i3$i$i126192;$449 = $734;$495 = $735;$__ng$0 = $__ng$1;
      continue;
     }
    }
    $509 = HEAP32[$__gb>>2]|0;
    $510 = ($509|0)!=($$lcssa|0);
    $511 = ($__ng$0$lcssa|0)!=(0);
    $or$cond9 = $511 & $510;
    if ($or$cond9) {
     $512 = HEAP32[$__ge>>2]|0;
     $513 = ($$lcssa|0)==($512|0);
     if ($513) {
      __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__gb,$__gn,$__ge);
      $$pre194 = HEAP32[$__gn>>2]|0;
      $515 = $$pre194;
     } else {
      $515 = $$lcssa;
     }
     $514 = ((($515)) + 4|0);
     HEAP32[$__gn>>2] = $514;
     HEAP32[$515>>2] = $__ng$0$lcssa;
     $736 = $514;
    } else {
     $736 = $$lcssa;
    }
    $516 = HEAP32[$__fd>>2]|0;
    $517 = ($516|0)>(0);
    if ($517) {
     $518 = HEAP32[$__b>>2]|0;
     $519 = ($518|0)==(0|0);
     do {
      if ($519) {
       $737 = 1;
      } else {
       $520 = ((($518)) + 12|0);
       $521 = HEAP32[$520>>2]|0;
       $522 = ((($518)) + 16|0);
       $523 = HEAP32[$522>>2]|0;
       $524 = ($521|0)==($523|0);
       if ($524) {
        $525 = HEAP32[$518>>2]|0;
        $526 = ((($525)) + 36|0);
        $527 = HEAP32[$526>>2]|0;
        $528 = (FUNCTION_TABLE_ii[$527 & 63]($518)|0);
        $$0$i$i$i$i90 = $528;
       } else {
        $529 = HEAP32[$521>>2]|0;
        $$0$i$i$i$i90 = $529;
       }
       $530 = ($$0$i$i$i$i90|0)==(-1);
       if ($530) {
        HEAP32[$__b>>2] = 0;
        $737 = 1;
        break;
       } else {
        $$pre$i$i$i92 = HEAP32[$__b>>2]|0;
        $phitmp$i$i$i93 = ($$pre$i$i$i92|0)==(0|0);
        $737 = $phitmp$i$i$i93;
        break;
       }
      }
     } while(0);
     $531 = ($$pre$i3$i$i98|0)==(0|0);
     do {
      if ($531) {
       label = 174;
      } else {
       $532 = ((($$pre$i3$i$i98)) + 12|0);
       $533 = HEAP32[$532>>2]|0;
       $534 = ((($$pre$i3$i$i98)) + 16|0);
       $535 = HEAP32[$534>>2]|0;
       $536 = ($533|0)==($535|0);
       if ($536) {
        $537 = HEAP32[$$pre$i3$i$i98>>2]|0;
        $538 = ((($537)) + 36|0);
        $539 = HEAP32[$538>>2]|0;
        $540 = (FUNCTION_TABLE_ii[$539 & 63]($$pre$i3$i$i98)|0);
        $$0$i$i1$i$i96 = $540;
       } else {
        $541 = HEAP32[$533>>2]|0;
        $$0$i$i1$i$i96 = $541;
       }
       $542 = ($$0$i$i1$i$i96|0)==(-1);
       if ($542) {
        HEAP32[$__e>>2] = 0;
        label = 174;
        break;
       } else {
        if ($737) {
         $738 = $$pre$i3$i$i98;
         break;
        } else {
         label = 180;
         break L1;
        }
       }
      }
     } while(0);
     if ((label|0) == 174) {
      label = 0;
      if ($737) {
       label = 180;
       break L1;
      } else {
       $738 = 0;
      }
     }
     $543 = HEAP32[$__b>>2]|0;
     $544 = ((($543)) + 12|0);
     $545 = HEAP32[$544>>2]|0;
     $546 = ((($543)) + 16|0);
     $547 = HEAP32[$546>>2]|0;
     $548 = ($545|0)==($547|0);
     if ($548) {
      $549 = HEAP32[$543>>2]|0;
      $550 = ((($549)) + 36|0);
      $551 = HEAP32[$550>>2]|0;
      $552 = (FUNCTION_TABLE_ii[$551 & 63]($543)|0);
      $$0$i$i87 = $552;
     } else {
      $553 = HEAP32[$545>>2]|0;
      $$0$i$i87 = $553;
     }
     $554 = HEAP32[$__dp>>2]|0;
     $555 = ($$0$i$i87|0)==($554|0);
     if (!($555)) {
      label = 180;
      break L1;
     }
     $558 = HEAP32[$__b>>2]|0;
     $559 = ((($558)) + 12|0);
     $560 = HEAP32[$559>>2]|0;
     $561 = ((($558)) + 16|0);
     $562 = HEAP32[$561>>2]|0;
     $563 = ($560|0)==($562|0);
     if ($563) {
      $564 = HEAP32[$558>>2]|0;
      $565 = ((($564)) + 40|0);
      $566 = HEAP32[$565>>2]|0;
      (FUNCTION_TABLE_ii[$566 & 63]($558)|0);
     } else {
      $567 = ((($560)) + 4|0);
      HEAP32[$559>>2] = $567;
     }
     $568 = ($516|0)>(0);
     if ($568) {
      $$pre$i3$i$i76261 = $738;$582 = $738;$630 = $516;
      while(1) {
       $569 = HEAP32[$__b>>2]|0;
       $570 = ($569|0)==(0|0);
       do {
        if ($570) {
         $595 = 1;
        } else {
         $571 = ((($569)) + 12|0);
         $572 = HEAP32[$571>>2]|0;
         $573 = ((($569)) + 16|0);
         $574 = HEAP32[$573>>2]|0;
         $575 = ($572|0)==($574|0);
         if ($575) {
          $576 = HEAP32[$569>>2]|0;
          $577 = ((($576)) + 36|0);
          $578 = HEAP32[$577>>2]|0;
          $579 = (FUNCTION_TABLE_ii[$578 & 63]($569)|0);
          $$0$i$i$i$i68 = $579;
         } else {
          $580 = HEAP32[$572>>2]|0;
          $$0$i$i$i$i68 = $580;
         }
         $581 = ($$0$i$i$i$i68|0)==(-1);
         if ($581) {
          HEAP32[$__b>>2] = 0;
          $595 = 1;
          break;
         } else {
          $$pre$i$i$i70 = HEAP32[$__b>>2]|0;
          $phitmp$i$i$i71 = ($$pre$i$i$i70|0)==(0|0);
          $595 = $phitmp$i$i$i71;
          break;
         }
        }
       } while(0);
       $583 = ($582|0)==(0|0);
       do {
        if ($583) {
         $$pre$i3$i$i76195$ph = $$pre$i3$i$i76261;
         label = 198;
        } else {
         $584 = ((($582)) + 12|0);
         $585 = HEAP32[$584>>2]|0;
         $586 = ((($582)) + 16|0);
         $587 = HEAP32[$586>>2]|0;
         $588 = ($585|0)==($587|0);
         if ($588) {
          $589 = HEAP32[$582>>2]|0;
          $590 = ((($589)) + 36|0);
          $591 = HEAP32[$590>>2]|0;
          $592 = (FUNCTION_TABLE_ii[$591 & 63]($582)|0);
          $$0$i$i1$i$i74 = $592;
         } else {
          $593 = HEAP32[$585>>2]|0;
          $$0$i$i1$i$i74 = $593;
         }
         $594 = ($$0$i$i1$i$i74|0)==(-1);
         if ($594) {
          HEAP32[$__e>>2] = 0;
          $$pre$i3$i$i76195$ph = 0;
          label = 198;
          break;
         } else {
          $phitmp$i4$i$i77 = ($$pre$i3$i$i76261|0)==(0|0);
          $tmp$i$i79 = $595 ^ $phitmp$i4$i$i77;
          if ($tmp$i$i79) {
           $$pre$i3$i$i76195216 = $$pre$i3$i$i76261;$739 = $$pre$i3$i$i76261;
           break;
          } else {
           label = 204;
           break L1;
          }
         }
        }
       } while(0);
       if ((label|0) == 198) {
        label = 0;
        if ($595) {
         label = 204;
         break L1;
        } else {
         $$pre$i3$i$i76195216 = $$pre$i3$i$i76195$ph;$739 = 0;
        }
       }
       $596 = HEAP32[$__b>>2]|0;
       $597 = ((($596)) + 12|0);
       $598 = HEAP32[$597>>2]|0;
       $599 = ((($596)) + 16|0);
       $600 = HEAP32[$599>>2]|0;
       $601 = ($598|0)==($600|0);
       if ($601) {
        $602 = HEAP32[$596>>2]|0;
        $603 = ((($602)) + 36|0);
        $604 = HEAP32[$603>>2]|0;
        $605 = (FUNCTION_TABLE_ii[$604 & 63]($596)|0);
        $$0$i$i65 = $605;
       } else {
        $606 = HEAP32[$598>>2]|0;
        $$0$i$i65 = $606;
       }
       $607 = HEAP32[$__ct>>2]|0;
       $608 = ((($607)) + 12|0);
       $609 = HEAP32[$608>>2]|0;
       $610 = (FUNCTION_TABLE_iiii[$609 & 31]($__ct,2048,$$0$i$i65)|0);
       if (!($610)) {
        label = 204;
        break L1;
       }
       $613 = HEAP32[$__wn>>2]|0;
       $614 = HEAP32[$0>>2]|0;
       $615 = ($613|0)==($614|0);
       if ($615) {
        __ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__wb,$__wn,$0);
       }
       $616 = HEAP32[$__b>>2]|0;
       $617 = ((($616)) + 12|0);
       $618 = HEAP32[$617>>2]|0;
       $619 = ((($616)) + 16|0);
       $620 = HEAP32[$619>>2]|0;
       $621 = ($618|0)==($620|0);
       if ($621) {
        $622 = HEAP32[$616>>2]|0;
        $623 = ((($622)) + 36|0);
        $624 = HEAP32[$623>>2]|0;
        $625 = (FUNCTION_TABLE_ii[$624 & 63]($616)|0);
        $$0$i$i26 = $625;
       } else {
        $626 = HEAP32[$618>>2]|0;
        $$0$i$i26 = $626;
       }
       $627 = HEAP32[$__wn>>2]|0;
       $628 = ((($627)) + 4|0);
       HEAP32[$__wn>>2] = $628;
       HEAP32[$627>>2] = $$0$i$i26;
       $629 = (($630) + -1)|0;
       HEAP32[$__fd>>2] = $629;
       $631 = HEAP32[$__b>>2]|0;
       $632 = ((($631)) + 12|0);
       $633 = HEAP32[$632>>2]|0;
       $634 = ((($631)) + 16|0);
       $635 = HEAP32[$634>>2]|0;
       $636 = ($633|0)==($635|0);
       if ($636) {
        $637 = HEAP32[$631>>2]|0;
        $638 = ((($637)) + 40|0);
        $639 = HEAP32[$638>>2]|0;
        (FUNCTION_TABLE_ii[$639 & 63]($631)|0);
       } else {
        $641 = ((($633)) + 4|0);
        HEAP32[$632>>2] = $641;
       }
       $640 = ($630|0)>(1);
       if ($640) {
        $$pre$i3$i$i76261 = $$pre$i3$i$i76195216;$582 = $739;$630 = $629;
       } else {
        break;
       }
      }
     }
    }
    $642 = HEAP32[$__wn>>2]|0;
    $643 = HEAP32[$__wb>>2]|0;
    $644 = ($642|0)==($643|0);
    if ($644) {
     label = 215;
     break L1;
    } else {
     $730 = $736;$__trailing_sign$1 = $__trailing_sign$0278;
    }
    break;
   }
   default: {
    $730 = $727;$__trailing_sign$1 = $__trailing_sign$0278;
   }
   }
  } while(0);
  L261: do {
   if ((label|0) == 30) {
    while(1) {
     label = 0;
     $87 = HEAP32[$__b>>2]|0;
     $88 = ($87|0)==(0|0);
     do {
      if ($88) {
       $113 = 1;
      } else {
       $89 = ((($87)) + 12|0);
       $90 = HEAP32[$89>>2]|0;
       $91 = ((($87)) + 16|0);
       $92 = HEAP32[$91>>2]|0;
       $93 = ($90|0)==($92|0);
       if ($93) {
        $94 = HEAP32[$87>>2]|0;
        $95 = ((($94)) + 36|0);
        $96 = HEAP32[$95>>2]|0;
        $97 = (FUNCTION_TABLE_ii[$96 & 63]($87)|0);
        $$0$i$i$i$i43 = $97;
       } else {
        $98 = HEAP32[$90>>2]|0;
        $$0$i$i$i$i43 = $98;
       }
       $99 = ($$0$i$i$i$i43|0)==(-1);
       if ($99) {
        HEAP32[$__b>>2] = 0;
        $113 = 1;
        break;
       } else {
        $$pre$i$i$i45 = HEAP32[$__b>>2]|0;
        $phitmp$i$i$i46 = ($$pre$i$i$i45|0)==(0|0);
        $113 = $phitmp$i$i$i46;
        break;
       }
      }
     } while(0);
     $101 = ($100|0)==(0|0);
     do {
      if ($101) {
       $$pre$i3$i$i51211 = $$pre$i3$i$i51;
       label = 43;
      } else {
       $102 = ((($100)) + 12|0);
       $103 = HEAP32[$102>>2]|0;
       $104 = ((($100)) + 16|0);
       $105 = HEAP32[$104>>2]|0;
       $106 = ($103|0)==($105|0);
       if ($106) {
        $107 = HEAP32[$100>>2]|0;
        $108 = ((($107)) + 36|0);
        $109 = HEAP32[$108>>2]|0;
        $110 = (FUNCTION_TABLE_ii[$109 & 63]($100)|0);
        $$0$i$i1$i$i49 = $110;
       } else {
        $111 = HEAP32[$103>>2]|0;
        $$0$i$i1$i$i49 = $111;
       }
       $112 = ($$0$i$i1$i$i49|0)==(-1);
       if ($112) {
        HEAP32[$__e>>2] = 0;
        $$pre$i3$i$i51211 = 0;
        label = 43;
        break;
       } else {
        $phitmp$i4$i$i52 = ($$pre$i3$i$i51|0)==(0|0);
        $tmp$i$i54 = $113 ^ $phitmp$i4$i$i52;
        if ($tmp$i$i54) {
         $$pre$i3$i$i51213 = $$pre$i3$i$i51;$731 = $$pre$i3$i$i51;
         break;
        } else {
         $730 = $727;$__trailing_sign$1 = $__trailing_sign$0278;
         break L261;
        }
       }
      }
     } while(0);
     if ((label|0) == 43) {
      label = 0;
      if ($113) {
       $730 = $727;$__trailing_sign$1 = $__trailing_sign$0278;
       break L261;
      } else {
       $$pre$i3$i$i51213 = $$pre$i3$i$i51211;$731 = 0;
      }
     }
     $114 = HEAP32[$__b>>2]|0;
     $115 = ((($114)) + 12|0);
     $116 = HEAP32[$115>>2]|0;
     $117 = ((($114)) + 16|0);
     $118 = HEAP32[$117>>2]|0;
     $119 = ($116|0)==($118|0);
     if ($119) {
      $120 = HEAP32[$114>>2]|0;
      $121 = ((($120)) + 36|0);
      $122 = HEAP32[$121>>2]|0;
      $123 = (FUNCTION_TABLE_ii[$122 & 63]($114)|0);
      $$0$i$i56 = $123;
     } else {
      $124 = HEAP32[$116>>2]|0;
      $$0$i$i56 = $124;
     }
     $125 = HEAP32[$__ct>>2]|0;
     $126 = ((($125)) + 12|0);
     $127 = HEAP32[$126>>2]|0;
     $128 = (FUNCTION_TABLE_iiii[$127 & 31]($__ct,8192,$$0$i$i56)|0);
     if (!($128)) {
      $730 = $727;$__trailing_sign$1 = $__trailing_sign$0278;
      break L261;
     }
     $129 = HEAP32[$__b>>2]|0;
     $130 = ((($129)) + 12|0);
     $131 = HEAP32[$130>>2]|0;
     $132 = ((($129)) + 16|0);
     $133 = HEAP32[$132>>2]|0;
     $134 = ($131|0)==($133|0);
     if ($134) {
      $135 = HEAP32[$129>>2]|0;
      $136 = ((($135)) + 40|0);
      $137 = HEAP32[$136>>2]|0;
      $138 = (FUNCTION_TABLE_ii[$137 & 63]($129)|0);
      $$0$i$i60 = $138;
     } else {
      $139 = ((($131)) + 4|0);
      HEAP32[$130>>2] = $139;
      $140 = HEAP32[$131>>2]|0;
      $$0$i$i60 = $140;
     }
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($__spaces,$$0$i$i60);
     $$pre$i3$i$i51 = $$pre$i3$i$i51213;$100 = $731;
     label = 30;
    }
   }
  } while(0);
  $647 = (($__p$0276) + 1)|0;
  $648 = ($647>>>0)<(4);
  if ($648) {
   $727 = $730;$__p$0276 = $647;$__trailing_sign$0278 = $__trailing_sign$1;
  } else {
   $$lcssa248 = $730;$__trailing_sign$0$lcssa = $__trailing_sign$1;
   label = 217;
   break;
  }
 }
 L296: do {
  if ((label|0) == 28) {
   $84 = HEAP32[$__err>>2]|0;
   $85 = $84 | 4;
   HEAP32[$__err>>2] = $85;
   $$0 = 0;
  }
  else if ((label|0) == 86) {
   $279 = HEAP32[$__err>>2]|0;
   $280 = $279 | 4;
   HEAP32[$__err>>2] = $280;
   $$0 = 0;
  }
  else if ((label|0) == 126) {
   $434 = HEAP32[$__err>>2]|0;
   $435 = $434 | 4;
   HEAP32[$__err>>2] = $435;
   $$0 = 0;
  }
  else if ((label|0) == 180) {
   $556 = HEAP32[$__err>>2]|0;
   $557 = $556 | 4;
   HEAP32[$__err>>2] = $557;
   $$0 = 0;
  }
  else if ((label|0) == 204) {
   $611 = HEAP32[$__err>>2]|0;
   $612 = $611 | 4;
   HEAP32[$__err>>2] = $612;
   $$0 = 0;
  }
  else if ((label|0) == 215) {
   $645 = HEAP32[$__err>>2]|0;
   $646 = $645 | 4;
   HEAP32[$__err>>2] = $646;
   $$0 = 0;
  }
  else if ((label|0) == 217) {
   $649 = ($__trailing_sign$0$lcssa|0)==(0|0);
   L299: do {
    if (!($649)) {
     $650 = ((($__trailing_sign$0$lcssa)) + 4|0);
     $651 = ((($__trailing_sign$0$lcssa)) + 8|0);
     $__i$0 = 1;
     L301: while(1) {
      $652 = HEAP8[$__trailing_sign$0$lcssa>>0]|0;
      $653 = $652 & 1;
      $654 = ($653<<24>>24)==(0);
      if ($654) {
       $656 = $652&255;
       $657 = $656 >>> 1;
       $659 = $657;
      } else {
       $655 = HEAP32[$650>>2]|0;
       $659 = $655;
      }
      $658 = ($__i$0>>>0)<($659>>>0);
      if (!($658)) {
       break L299;
      }
      $660 = HEAP32[$__b>>2]|0;
      $661 = ($660|0)==(0|0);
      do {
       if ($661) {
        $740 = 1;
       } else {
        $662 = ((($660)) + 12|0);
        $663 = HEAP32[$662>>2]|0;
        $664 = ((($660)) + 16|0);
        $665 = HEAP32[$664>>2]|0;
        $666 = ($663|0)==($665|0);
        if ($666) {
         $667 = HEAP32[$660>>2]|0;
         $668 = ((($667)) + 36|0);
         $669 = HEAP32[$668>>2]|0;
         $670 = (FUNCTION_TABLE_ii[$669 & 63]($660)|0);
         $$0$i$i$i$i = $670;
        } else {
         $671 = HEAP32[$663>>2]|0;
         $$0$i$i$i$i = $671;
        }
        $672 = ($$0$i$i$i$i|0)==(-1);
        if ($672) {
         HEAP32[$__b>>2] = 0;
         $740 = 1;
         break;
        } else {
         $$pre$i$i$i = HEAP32[$__b>>2]|0;
         $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
         $740 = $phitmp$i$i$i;
         break;
        }
       }
      } while(0);
      $673 = HEAP32[$__e>>2]|0;
      $674 = ($673|0)==(0|0);
      do {
       if ($674) {
        label = 236;
       } else {
        $675 = ((($673)) + 12|0);
        $676 = HEAP32[$675>>2]|0;
        $677 = ((($673)) + 16|0);
        $678 = HEAP32[$677>>2]|0;
        $679 = ($676|0)==($678|0);
        if ($679) {
         $680 = HEAP32[$673>>2]|0;
         $681 = ((($680)) + 36|0);
         $682 = HEAP32[$681>>2]|0;
         $683 = (FUNCTION_TABLE_ii[$682 & 63]($673)|0);
         $$0$i$i1$i$i = $683;
        } else {
         $684 = HEAP32[$676>>2]|0;
         $$0$i$i1$i$i = $684;
        }
        $685 = ($$0$i$i1$i$i|0)==(-1);
        if ($685) {
         HEAP32[$__e>>2] = 0;
         label = 236;
         break;
        } else {
         if ($740) {
          break;
         } else {
          break L301;
         }
        }
       }
      } while(0);
      if ((label|0) == 236) {
       label = 0;
       if ($740) {
        break;
       }
      }
      $686 = HEAP32[$__b>>2]|0;
      $687 = ((($686)) + 12|0);
      $688 = HEAP32[$687>>2]|0;
      $689 = ((($686)) + 16|0);
      $690 = HEAP32[$689>>2]|0;
      $691 = ($688|0)==($690|0);
      if ($691) {
       $692 = HEAP32[$686>>2]|0;
       $693 = ((($692)) + 36|0);
       $694 = HEAP32[$693>>2]|0;
       $695 = (FUNCTION_TABLE_ii[$694 & 63]($686)|0);
       $$0$i$i = $695;
      } else {
       $696 = HEAP32[$688>>2]|0;
       $$0$i$i = $696;
      }
      $697 = HEAP8[$__trailing_sign$0$lcssa>>0]|0;
      $698 = $697 & 1;
      $699 = ($698<<24>>24)==(0);
      if ($699) {
       $702 = $650;
      } else {
       $700 = HEAP32[$651>>2]|0;
       $702 = $700;
      }
      $701 = (($702) + ($__i$0<<2)|0);
      $703 = HEAP32[$701>>2]|0;
      $704 = ($$0$i$i|0)==($703|0);
      if (!($704)) {
       break;
      }
      $707 = (($__i$0) + 1)|0;
      $708 = HEAP32[$__b>>2]|0;
      $709 = ((($708)) + 12|0);
      $710 = HEAP32[$709>>2]|0;
      $711 = ((($708)) + 16|0);
      $712 = HEAP32[$711>>2]|0;
      $713 = ($710|0)==($712|0);
      if ($713) {
       $714 = HEAP32[$708>>2]|0;
       $715 = ((($714)) + 40|0);
       $716 = HEAP32[$715>>2]|0;
       (FUNCTION_TABLE_ii[$716 & 63]($708)|0);
       $__i$0 = $707;
       continue;
      } else {
       $717 = ((($710)) + 4|0);
       HEAP32[$709>>2] = $717;
       $__i$0 = $707;
       continue;
      }
     }
     $705 = HEAP32[$__err>>2]|0;
     $706 = $705 | 4;
     HEAP32[$__err>>2] = $706;
     $$0 = 0;
     break L296;
    }
   } while(0);
   $718 = HEAP32[$__gb>>2]|0;
   $719 = ($718|0)==($$lcssa248|0);
   if ($719) {
    $$0 = 1;
   } else {
    HEAP32[$__et>>2] = 0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grp,$718,$$lcssa248,$__et);
    $720 = HEAP32[$__et>>2]|0;
    $721 = ($720|0)==(0);
    if ($721) {
     $$0 = 1;
    } else {
     $722 = HEAP32[$__err>>2]|0;
     $723 = $722 | 4;
     HEAP32[$__err>>2] = $723;
     $$0 = 0;
    }
   }
  }
 } while(0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__spaces);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__nsn);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__psn);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
 $724 = HEAP32[$__gb>>2]|0;
 HEAP32[$__gb>>2] = 0;
 $725 = ($724|0)==(0|0);
 if (!($725)) {
  $726 = HEAP32[$2>>2]|0;
  FUNCTION_TABLE_vi[$726 & 127]($724);
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE($this,$__b,$__e,$__intl,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i$i$i = 0, $$0$i$i1$i$i = 0, $$byval_copy = 0, $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $7 = 0, $8 = 0, $9 = 0, $__loc = 0, $__neg = 0, $__w$0$lcssa = 0, $__w$02 = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, $phitmp$i$i$i = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 432|0;
 $$byval_copy = sp + 424|0;
 $__wbuf = sp + 24|0;
 $__wb = sp + 16|0;
 $__wn = sp + 8|0;
 $__loc = sp + 4|0;
 $__neg = sp + 428|0;
 $0 = sp;
 $1 = $__wbuf;
 HEAP32[$__wb>>2] = $1;
 $2 = ((($__wb)) + 4|0);
 HEAP32[$2>>2] = (107);
 $3 = ((($__wbuf)) + 400|0);
 $4 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $4;
 $5 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6152)|0);
 HEAP8[$__neg>>0] = 0;
 $6 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $6;
 $7 = ((($__iob)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $9 = (__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_($__b,$$byval_copy,$__intl,$__loc,$8,$__err,$__neg,$5,$__wb,$__wn,$3)|0);
 $10 = $6;
 if ($9) {
  $11 = HEAP8[$__v>>0]|0;
  $12 = $11 & 1;
  $13 = ($12<<24>>24)==(0);
  if ($13) {
   HEAP8[$__v>>0] = 0;
  } else {
   $14 = ((($__v)) + 8|0);
   $15 = HEAP32[$14>>2]|0;
   HEAP32[$15>>2] = 0;
  }
  $16 = ((($__v)) + 4|0);
  HEAP32[$16>>2] = 0;
  $17 = HEAP8[$__neg>>0]|0;
  $18 = ($17<<24>>24)==(0);
  if (!($18)) {
   $19 = HEAP32[$5>>2]|0;
   $20 = ((($19)) + 44|0);
   $21 = HEAP32[$20>>2]|0;
   $22 = (FUNCTION_TABLE_iii[$21 & 15]($5,45)|0);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($__v,$22);
  }
  $23 = HEAP32[$5>>2]|0;
  $24 = ((($23)) + 44|0);
  $25 = HEAP32[$24>>2]|0;
  $26 = (FUNCTION_TABLE_iii[$25 & 15]($5,48)|0);
  $27 = HEAP32[$__wb>>2]|0;
  $28 = HEAP32[$__wn>>2]|0;
  $29 = ((($28)) + -4|0);
  $30 = ($27>>>0)<($29>>>0);
  L10: do {
   if ($30) {
    $__w$02 = $27;
    while(1) {
     $31 = HEAP32[$__w$02>>2]|0;
     $32 = ($31|0)==($26|0);
     if (!($32)) {
      $__w$0$lcssa = $__w$02;
      break L10;
     }
     $33 = ((($__w$02)) + 4|0);
     $34 = ($33>>>0)<($29>>>0);
     if ($34) {
      $__w$02 = $33;
     } else {
      $__w$0$lcssa = $33;
      break;
     }
    }
   } else {
    $__w$0$lcssa = $27;
   }
  } while(0);
  (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendIPwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_($__v,$__w$0$lcssa,$28)|0);
 }
 $35 = HEAP32[$__b>>2]|0;
 $36 = ($35|0)==(0|0);
 do {
  if ($36) {
   $67 = 1;
  } else {
   $37 = ((($35)) + 12|0);
   $38 = HEAP32[$37>>2]|0;
   $39 = ((($35)) + 16|0);
   $40 = HEAP32[$39>>2]|0;
   $41 = ($38|0)==($40|0);
   if ($41) {
    $42 = HEAP32[$35>>2]|0;
    $43 = ((($42)) + 36|0);
    $44 = HEAP32[$43>>2]|0;
    $45 = (FUNCTION_TABLE_ii[$44 & 63]($35)|0);
    $$0$i$i$i$i = $45;
   } else {
    $46 = HEAP32[$38>>2]|0;
    $$0$i$i$i$i = $46;
   }
   $47 = ($$0$i$i$i$i|0)==(-1);
   if ($47) {
    HEAP32[$__b>>2] = 0;
    $67 = 1;
    break;
   } else {
    $$pre$i$i$i = HEAP32[$__b>>2]|0;
    $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
    $67 = $phitmp$i$i$i;
    break;
   }
  }
 } while(0);
 $48 = ($6|0)==(0);
 do {
  if ($48) {
   label = 24;
  } else {
   $49 = ((($10)) + 12|0);
   $50 = HEAP32[$49>>2]|0;
   $51 = ((($10)) + 16|0);
   $52 = HEAP32[$51>>2]|0;
   $53 = ($50|0)==($52|0);
   if ($53) {
    $54 = $6;
    $55 = HEAP32[$54>>2]|0;
    $56 = ((($55)) + 36|0);
    $57 = HEAP32[$56>>2]|0;
    $58 = (FUNCTION_TABLE_ii[$57 & 63]($10)|0);
    $$0$i$i1$i$i = $58;
   } else {
    $59 = HEAP32[$50>>2]|0;
    $$0$i$i1$i$i = $59;
   }
   $60 = ($$0$i$i1$i$i|0)==(-1);
   if ($60) {
    HEAP32[$__e>>2] = 0;
    label = 24;
    break;
   } else {
    if ($67) {
     break;
    } else {
     label = 26;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 24) {
  if ($67) {
   label = 26;
  }
 }
 if ((label|0) == 26) {
  $61 = HEAP32[$__err>>2]|0;
  $62 = $61 | 2;
  HEAP32[$__err>>2] = $62;
 }
 $63 = HEAP32[$__b>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($4)|0);
 $64 = HEAP32[$__wb>>2]|0;
 HEAP32[$__wb>>2] = 0;
 $65 = ($64|0)==(0|0);
 if (!($65)) {
  $66 = HEAP32[$2>>2]|0;
  FUNCTION_TABLE_vi[$66 & 127]($64);
 }
 STACKTOP = sp;return ($63|0);
}
function __ZNSt3__111__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri($__intl,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__psn,$__nsn,$__fd) {
 $__intl = $__intl|0;
 $__loc = $__loc|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__psn = $__psn|0;
 $__nsn = $__nsn|0;
 $__fd = $__fd|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $0 = sp + 100|0;
 $1 = sp + 88|0;
 $2 = sp + 76|0;
 $3 = sp + 64|0;
 $4 = sp + 52|0;
 $5 = sp + 48|0;
 $6 = sp + 36|0;
 $7 = sp + 24|0;
 $8 = sp + 12|0;
 $9 = sp;
 if ($__intl) {
  $10 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,5872)|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ((($11)) + 44|0);
  $13 = HEAP32[$12>>2]|0;
  FUNCTION_TABLE_vii[$13 & 63]($0,$10);
  $14 = HEAP32[$0>>2]|0;
  HEAP8[$__pat>>0]=$14&255;HEAP8[$__pat+1>>0]=($14>>8)&255;HEAP8[$__pat+2>>0]=($14>>16)&255;HEAP8[$__pat+3>>0]=$14>>24;
  $15 = HEAP32[$10>>2]|0;
  $16 = ((($15)) + 32|0);
  $17 = HEAP32[$16>>2]|0;
  FUNCTION_TABLE_vii[$17 & 63]($1,$10);
  $18 = HEAP8[$__nsn>>0]|0;
  $19 = $18 & 1;
  $20 = ($19<<24>>24)==(0);
  if ($20) {
   HEAP8[$__nsn>>0] = 0;
  } else {
   $21 = ((($__nsn)) + 8|0);
   $22 = HEAP32[$21>>2]|0;
   HEAP32[$22>>2] = 0;
  }
  $23 = ((($__nsn)) + 4|0);
  HEAP32[$23>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__nsn,0);
  ;HEAP32[$__nsn>>2]=HEAP32[$1>>2]|0;HEAP32[$__nsn+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$__nsn+8>>2]=HEAP32[$1+8>>2]|0;
  HEAP32[$1>>2] = 0;
  $24 = ((($1)) + 4|0);
  HEAP32[$24>>2] = 0;
  $25 = ((($1)) + 8|0);
  HEAP32[$25>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($1);
  $26 = HEAP32[$10>>2]|0;
  $27 = ((($26)) + 28|0);
  $28 = HEAP32[$27>>2]|0;
  FUNCTION_TABLE_vii[$28 & 63]($2,$10);
  $29 = HEAP8[$__psn>>0]|0;
  $30 = $29 & 1;
  $31 = ($30<<24>>24)==(0);
  if ($31) {
   HEAP8[$__psn>>0] = 0;
  } else {
   $32 = ((($__psn)) + 8|0);
   $33 = HEAP32[$32>>2]|0;
   HEAP32[$33>>2] = 0;
  }
  $34 = ((($__psn)) + 4|0);
  HEAP32[$34>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__psn,0);
  ;HEAP32[$__psn>>2]=HEAP32[$2>>2]|0;HEAP32[$__psn+4>>2]=HEAP32[$2+4>>2]|0;HEAP32[$__psn+8>>2]=HEAP32[$2+8>>2]|0;
  HEAP32[$2>>2] = 0;
  $35 = ((($2)) + 4|0);
  HEAP32[$35>>2] = 0;
  $36 = ((($2)) + 8|0);
  HEAP32[$36>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($2);
  $37 = HEAP32[$10>>2]|0;
  $38 = ((($37)) + 12|0);
  $39 = HEAP32[$38>>2]|0;
  $40 = (FUNCTION_TABLE_ii[$39 & 63]($10)|0);
  HEAP32[$__dp>>2] = $40;
  $41 = HEAP32[$10>>2]|0;
  $42 = ((($41)) + 16|0);
  $43 = HEAP32[$42>>2]|0;
  $44 = (FUNCTION_TABLE_ii[$43 & 63]($10)|0);
  HEAP32[$__ts>>2] = $44;
  $45 = HEAP32[$10>>2]|0;
  $46 = ((($45)) + 20|0);
  $47 = HEAP32[$46>>2]|0;
  FUNCTION_TABLE_vii[$47 & 63]($3,$10);
  $48 = HEAP8[$__grp>>0]|0;
  $49 = $48 & 1;
  $50 = ($49<<24>>24)==(0);
  if ($50) {
   $54 = ((($__grp)) + 1|0);
   HEAP8[$54>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $51 = ((($__grp)) + 8|0);
   $52 = HEAP32[$51>>2]|0;
   HEAP8[$52>>0] = 0;
   $53 = ((($__grp)) + 4|0);
   HEAP32[$53>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp,0);
  ;HEAP32[$__grp>>2]=HEAP32[$3>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$3+8>>2]|0;
  HEAP32[$3>>2] = 0;
  $55 = ((($3)) + 4|0);
  HEAP32[$55>>2] = 0;
  $56 = ((($3)) + 8|0);
  HEAP32[$56>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
  $57 = HEAP32[$10>>2]|0;
  $58 = ((($57)) + 24|0);
  $59 = HEAP32[$58>>2]|0;
  FUNCTION_TABLE_vii[$59 & 63]($4,$10);
  $60 = HEAP8[$__sym>>0]|0;
  $61 = $60 & 1;
  $62 = ($61<<24>>24)==(0);
  if ($62) {
   HEAP8[$__sym>>0] = 0;
  } else {
   $63 = ((($__sym)) + 8|0);
   $64 = HEAP32[$63>>2]|0;
   HEAP32[$64>>2] = 0;
  }
  $65 = ((($__sym)) + 4|0);
  HEAP32[$65>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sym,0);
  ;HEAP32[$__sym>>2]=HEAP32[$4>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$4+8>>2]|0;
  HEAP32[$4>>2] = 0;
  $66 = ((($4)) + 4|0);
  HEAP32[$66>>2] = 0;
  $67 = ((($4)) + 8|0);
  HEAP32[$67>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($4);
  $68 = HEAP32[$10>>2]|0;
  $69 = ((($68)) + 36|0);
  $70 = HEAP32[$69>>2]|0;
  $71 = (FUNCTION_TABLE_ii[$70 & 63]($10)|0);
  $storemerge = $71;
 } else {
  $72 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,5808)|0);
  $73 = HEAP32[$72>>2]|0;
  $74 = ((($73)) + 44|0);
  $75 = HEAP32[$74>>2]|0;
  FUNCTION_TABLE_vii[$75 & 63]($5,$72);
  $76 = HEAP32[$5>>2]|0;
  HEAP8[$__pat>>0]=$76&255;HEAP8[$__pat+1>>0]=($76>>8)&255;HEAP8[$__pat+2>>0]=($76>>16)&255;HEAP8[$__pat+3>>0]=$76>>24;
  $77 = HEAP32[$72>>2]|0;
  $78 = ((($77)) + 32|0);
  $79 = HEAP32[$78>>2]|0;
  FUNCTION_TABLE_vii[$79 & 63]($6,$72);
  $80 = HEAP8[$__nsn>>0]|0;
  $81 = $80 & 1;
  $82 = ($81<<24>>24)==(0);
  if ($82) {
   HEAP8[$__nsn>>0] = 0;
  } else {
   $83 = ((($__nsn)) + 8|0);
   $84 = HEAP32[$83>>2]|0;
   HEAP32[$84>>2] = 0;
  }
  $85 = ((($__nsn)) + 4|0);
  HEAP32[$85>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__nsn,0);
  ;HEAP32[$__nsn>>2]=HEAP32[$6>>2]|0;HEAP32[$__nsn+4>>2]=HEAP32[$6+4>>2]|0;HEAP32[$__nsn+8>>2]=HEAP32[$6+8>>2]|0;
  HEAP32[$6>>2] = 0;
  $86 = ((($6)) + 4|0);
  HEAP32[$86>>2] = 0;
  $87 = ((($6)) + 8|0);
  HEAP32[$87>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($6);
  $88 = HEAP32[$72>>2]|0;
  $89 = ((($88)) + 28|0);
  $90 = HEAP32[$89>>2]|0;
  FUNCTION_TABLE_vii[$90 & 63]($7,$72);
  $91 = HEAP8[$__psn>>0]|0;
  $92 = $91 & 1;
  $93 = ($92<<24>>24)==(0);
  if ($93) {
   HEAP8[$__psn>>0] = 0;
  } else {
   $94 = ((($__psn)) + 8|0);
   $95 = HEAP32[$94>>2]|0;
   HEAP32[$95>>2] = 0;
  }
  $96 = ((($__psn)) + 4|0);
  HEAP32[$96>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__psn,0);
  ;HEAP32[$__psn>>2]=HEAP32[$7>>2]|0;HEAP32[$__psn+4>>2]=HEAP32[$7+4>>2]|0;HEAP32[$__psn+8>>2]=HEAP32[$7+8>>2]|0;
  HEAP32[$7>>2] = 0;
  $97 = ((($7)) + 4|0);
  HEAP32[$97>>2] = 0;
  $98 = ((($7)) + 8|0);
  HEAP32[$98>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($7);
  $99 = HEAP32[$72>>2]|0;
  $100 = ((($99)) + 12|0);
  $101 = HEAP32[$100>>2]|0;
  $102 = (FUNCTION_TABLE_ii[$101 & 63]($72)|0);
  HEAP32[$__dp>>2] = $102;
  $103 = HEAP32[$72>>2]|0;
  $104 = ((($103)) + 16|0);
  $105 = HEAP32[$104>>2]|0;
  $106 = (FUNCTION_TABLE_ii[$105 & 63]($72)|0);
  HEAP32[$__ts>>2] = $106;
  $107 = HEAP32[$72>>2]|0;
  $108 = ((($107)) + 20|0);
  $109 = HEAP32[$108>>2]|0;
  FUNCTION_TABLE_vii[$109 & 63]($8,$72);
  $110 = HEAP8[$__grp>>0]|0;
  $111 = $110 & 1;
  $112 = ($111<<24>>24)==(0);
  if ($112) {
   $116 = ((($__grp)) + 1|0);
   HEAP8[$116>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $113 = ((($__grp)) + 8|0);
   $114 = HEAP32[$113>>2]|0;
   HEAP8[$114>>0] = 0;
   $115 = ((($__grp)) + 4|0);
   HEAP32[$115>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp,0);
  ;HEAP32[$__grp>>2]=HEAP32[$8>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$8+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$8+8>>2]|0;
  HEAP32[$8>>2] = 0;
  $117 = ((($8)) + 4|0);
  HEAP32[$117>>2] = 0;
  $118 = ((($8)) + 8|0);
  HEAP32[$118>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
  $119 = HEAP32[$72>>2]|0;
  $120 = ((($119)) + 24|0);
  $121 = HEAP32[$120>>2]|0;
  FUNCTION_TABLE_vii[$121 & 63]($9,$72);
  $122 = HEAP8[$__sym>>0]|0;
  $123 = $122 & 1;
  $124 = ($123<<24>>24)==(0);
  if ($124) {
   HEAP8[$__sym>>0] = 0;
  } else {
   $125 = ((($__sym)) + 8|0);
   $126 = HEAP32[$125>>2]|0;
   HEAP32[$126>>2] = 0;
  }
  $127 = ((($__sym)) + 4|0);
  HEAP32[$127>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sym,0);
  ;HEAP32[$__sym>>2]=HEAP32[$9>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$9+8>>2]|0;
  HEAP32[$9>>2] = 0;
  $128 = ((($9)) + 4|0);
  HEAP32[$128>>2] = 0;
  $129 = ((($9)) + 8|0);
  HEAP32[$129>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($9);
  $130 = HEAP32[$72>>2]|0;
  $131 = ((($130)) + 36|0);
  $132 = HEAP32[$131>>2]|0;
  $133 = (FUNCTION_TABLE_ii[$132 & 63]($72)|0);
  $storemerge = $133;
 }
 HEAP32[$__fd>>2] = $storemerge;
 STACKTOP = sp;return;
}
function __ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce($this,$__s,$__intl,$__iob,$__fl,$__units) {
 $this = $this|0;
 $__s = $__s|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__units = +$__units;
 var $$byval_copy = 0, $$pre14 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $__bb = 0, $__buf = 0;
 var $__db$0 = 0, $__digits = 0, $__dp = 0, $__fd = 0, $__grp = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__n$0 = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 384|0;
 $$byval_copy = sp + 8|0;
 $vararg_buffer1 = sp;
 $__buf = sp + 284|0;
 $__bb = sp + 72|0;
 $__digits = sp + 184|0;
 $__loc = sp + 68|0;
 $__pat = sp + 180|0;
 $__dp = sp + 177|0;
 $__ts = sp + 176|0;
 $__grp = sp + 56|0;
 $__sym = sp + 44|0;
 $__sn = sp + 32|0;
 $__fd = sp + 28|0;
 $__mbuf = sp + 76|0;
 $__mi = sp + 24|0;
 $__me = sp + 20|0;
 $0 = sp + 16|0;
 HEAP32[$__bb>>2] = $__buf;
 HEAPF64[$$byval_copy>>3] = $__units;
 $1 = (_snprintf($__buf,100,9496,$$byval_copy)|0);
 $2 = ($1>>>0)>(99);
 if ($2) {
  $3 = (__ZNSt3__16__clocEv()|0);
  HEAPF64[$vararg_buffer1>>3] = $__units;
  $4 = (__ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__bb,$3,9496,$vararg_buffer1)|0);
  $5 = HEAP32[$__bb>>2]|0;
  $6 = ($5|0)==(0|0);
  if ($6) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  }
  $7 = $5;
  $8 = (_malloc($4)|0);
  $9 = $8;
  $10 = ($8|0)==(0|0);
  if ($10) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $90 = $9;$93 = $7;$__db$0 = $8;$__n$0 = $4;
  }
 } else {
  $90 = 0;$93 = 0;$__db$0 = $__digits;$__n$0 = $1;
 }
 $11 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $11;
 $12 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6160)|0);
 $13 = HEAP32[$__bb>>2]|0;
 $14 = (($13) + ($__n$0)|0);
 $15 = HEAP32[$12>>2]|0;
 $16 = ((($15)) + 32|0);
 $17 = HEAP32[$16>>2]|0;
 (FUNCTION_TABLE_iiiii[$17 & 7]($12,$13,$14,$__db$0)|0);
 $18 = ($__n$0|0)==(0);
 if ($18) {
  $28 = 0;
 } else {
  $19 = HEAP32[$__bb>>2]|0;
  $20 = HEAP8[$19>>0]|0;
  $21 = ($20<<24>>24)==(45);
  $28 = $21;
 }
 HEAP32[$__grp>>2] = 0;
 $22 = ((($__grp)) + 4|0);
 HEAP32[$22>>2] = 0;
 $23 = ((($__grp)) + 8|0);
 HEAP32[$23>>2] = 0;
 HEAP32[$__sym>>2] = 0;
 $24 = ((($__sym)) + 4|0);
 HEAP32[$24>>2] = 0;
 $25 = ((($__sym)) + 8|0);
 HEAP32[$25>>2] = 0;
 HEAP32[$__sn>>2] = 0;
 $26 = ((($__sn)) + 4|0);
 HEAP32[$26>>2] = 0;
 $27 = ((($__sn)) + 8|0);
 HEAP32[$27>>2] = 0;
 __ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri($__intl,$28,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd);
 $29 = HEAP32[$__fd>>2]|0;
 $30 = ($__n$0|0)>($29|0);
 if ($30) {
  $31 = (($__n$0) - ($29))|0;
  $32 = $31 << 1;
  $33 = HEAP8[$__sn>>0]|0;
  $34 = $33 & 1;
  $35 = ($34<<24>>24)==(0);
  $36 = ((($__sn)) + 4|0);
  $37 = HEAP32[$36>>2]|0;
  $38 = $33&255;
  $39 = $38 >>> 1;
  $40 = $35 ? $39 : $37;
  $41 = HEAP8[$__sym>>0]|0;
  $42 = $41 & 1;
  $43 = ($42<<24>>24)==(0);
  $44 = ((($__sym)) + 4|0);
  $45 = HEAP32[$44>>2]|0;
  $46 = $41&255;
  $47 = $46 >>> 1;
  $48 = $43 ? $47 : $45;
  $49 = $32 | 1;
  $50 = (($49) + ($29))|0;
  $51 = (($50) + ($40))|0;
  $52 = (($51) + ($48))|0;
  $72 = $52;
 } else {
  $53 = HEAP8[$__sn>>0]|0;
  $54 = $53 & 1;
  $55 = ($54<<24>>24)==(0);
  $56 = ((($__sn)) + 4|0);
  $57 = HEAP32[$56>>2]|0;
  $58 = $53&255;
  $59 = $58 >>> 1;
  $60 = $55 ? $59 : $57;
  $61 = HEAP8[$__sym>>0]|0;
  $62 = $61 & 1;
  $63 = ($62<<24>>24)==(0);
  $64 = ((($__sym)) + 4|0);
  $65 = HEAP32[$64>>2]|0;
  $66 = $61&255;
  $67 = $66 >>> 1;
  $68 = $63 ? $67 : $65;
  $69 = (($29) + 2)|0;
  $70 = (($69) + ($60))|0;
  $71 = (($70) + ($68))|0;
  $72 = $71;
 }
 $73 = ($72>>>0)>(100);
 if ($73) {
  $74 = (_malloc($72)|0);
  $75 = $74;
  $76 = ($74|0)==(0|0);
  if ($76) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $86 = $75;$__mb$0 = $74;
  }
 } else {
  $86 = 0;$__mb$0 = $__mbuf;
 }
 $77 = ((($__iob)) + 4|0);
 $78 = HEAP32[$77>>2]|0;
 $79 = (($__db$0) + ($__n$0)|0);
 $80 = HEAP8[$__dp>>0]|0;
 $81 = HEAP8[$__ts>>0]|0;
 __ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i($__mb$0,$__mi,$__me,$78,$__db$0,$79,$12,$28,$__pat,$80,$81,$__grp,$__sym,$__sn,$29);
 $82 = HEAP32[$__s>>2]|0;
 HEAP32[$0>>2] = $82;
 $83 = HEAP32[$__mi>>2]|0;
 $84 = HEAP32[$__me>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $85 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__mb$0,$83,$84,$__iob,$__fl)|0);
 $87 = ($86|0)==(0);
 if ($87) {
  $89 = $11;
 } else {
  $88 = $86;
  _free($88);
  $$pre14 = HEAP32[$__loc>>2]|0;
  $89 = $$pre14;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sn);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
 (__ZNSt3__114__shared_count16__release_sharedEv($89)|0);
 $91 = ($90|0)==(0);
 if (!($91)) {
  $92 = $90;
  _free($92);
 }
 $94 = ($93|0)==(0);
 if (!($94)) {
  $95 = $93;
  _free($95);
 }
 STACKTOP = sp;return ($85|0);
}
function __ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri($__intl,$__neg,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd) {
 $__intl = $__intl|0;
 $__neg = $__neg|0;
 $__loc = $__loc|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__sn = $__sn|0;
 $__fd = $__fd|0;
 var $$pre$phi32Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $0 = sp + 108|0;
 $1 = sp + 96|0;
 $2 = sp + 92|0;
 $3 = sp + 80|0;
 $4 = sp + 68|0;
 $5 = sp + 56|0;
 $6 = sp + 52|0;
 $7 = sp + 40|0;
 $8 = sp + 36|0;
 $9 = sp + 24|0;
 $10 = sp + 12|0;
 $11 = sp;
 if ($__intl) {
  $12 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,5744)|0);
  $13 = HEAP32[$12>>2]|0;
  if ($__neg) {
   $14 = ((($13)) + 44|0);
   $15 = HEAP32[$14>>2]|0;
   FUNCTION_TABLE_vii[$15 & 63]($0,$12);
   $16 = HEAP32[$0>>2]|0;
   HEAP8[$__pat>>0]=$16&255;HEAP8[$__pat+1>>0]=($16>>8)&255;HEAP8[$__pat+2>>0]=($16>>16)&255;HEAP8[$__pat+3>>0]=$16>>24;
   $17 = HEAP32[$12>>2]|0;
   $18 = ((($17)) + 32|0);
   $19 = HEAP32[$18>>2]|0;
   FUNCTION_TABLE_vii[$19 & 63]($1,$12);
   $20 = HEAP8[$__sn>>0]|0;
   $21 = $20 & 1;
   $22 = ($21<<24>>24)==(0);
   if ($22) {
    $26 = ((($__sn)) + 1|0);
    HEAP8[$26>>0] = 0;
    HEAP8[$__sn>>0] = 0;
   } else {
    $23 = ((($__sn)) + 8|0);
    $24 = HEAP32[$23>>2]|0;
    HEAP8[$24>>0] = 0;
    $25 = ((($__sn)) + 4|0);
    HEAP32[$25>>2] = 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sn,0);
   ;HEAP32[$__sn>>2]=HEAP32[$1>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$1+8>>2]|0;
   HEAP32[$1>>2] = 0;
   $27 = ((($1)) + 4|0);
   HEAP32[$27>>2] = 0;
   $28 = ((($1)) + 8|0);
   HEAP32[$28>>2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
   $$pre$phiZ2D = $12;
  } else {
   $29 = ((($13)) + 40|0);
   $30 = HEAP32[$29>>2]|0;
   FUNCTION_TABLE_vii[$30 & 63]($2,$12);
   $31 = HEAP32[$2>>2]|0;
   HEAP8[$__pat>>0]=$31&255;HEAP8[$__pat+1>>0]=($31>>8)&255;HEAP8[$__pat+2>>0]=($31>>16)&255;HEAP8[$__pat+3>>0]=$31>>24;
   $32 = HEAP32[$12>>2]|0;
   $33 = ((($32)) + 28|0);
   $34 = HEAP32[$33>>2]|0;
   FUNCTION_TABLE_vii[$34 & 63]($3,$12);
   $35 = HEAP8[$__sn>>0]|0;
   $36 = $35 & 1;
   $37 = ($36<<24>>24)==(0);
   if ($37) {
    $41 = ((($__sn)) + 1|0);
    HEAP8[$41>>0] = 0;
    HEAP8[$__sn>>0] = 0;
   } else {
    $38 = ((($__sn)) + 8|0);
    $39 = HEAP32[$38>>2]|0;
    HEAP8[$39>>0] = 0;
    $40 = ((($__sn)) + 4|0);
    HEAP32[$40>>2] = 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sn,0);
   ;HEAP32[$__sn>>2]=HEAP32[$3>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$3+8>>2]|0;
   HEAP32[$3>>2] = 0;
   $42 = ((($3)) + 4|0);
   HEAP32[$42>>2] = 0;
   $43 = ((($3)) + 8|0);
   HEAP32[$43>>2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
   $$pre$phiZ2D = $12;
  }
  $44 = HEAP32[$12>>2]|0;
  $45 = ((($44)) + 12|0);
  $46 = HEAP32[$45>>2]|0;
  $47 = (FUNCTION_TABLE_ii[$46 & 63]($12)|0);
  HEAP8[$__dp>>0] = $47;
  $48 = HEAP32[$12>>2]|0;
  $49 = ((($48)) + 16|0);
  $50 = HEAP32[$49>>2]|0;
  $51 = (FUNCTION_TABLE_ii[$50 & 63]($12)|0);
  HEAP8[$__ts>>0] = $51;
  $52 = HEAP32[$$pre$phiZ2D>>2]|0;
  $53 = ((($52)) + 20|0);
  $54 = HEAP32[$53>>2]|0;
  FUNCTION_TABLE_vii[$54 & 63]($4,$12);
  $55 = HEAP8[$__grp>>0]|0;
  $56 = $55 & 1;
  $57 = ($56<<24>>24)==(0);
  if ($57) {
   $61 = ((($__grp)) + 1|0);
   HEAP8[$61>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $58 = ((($__grp)) + 8|0);
   $59 = HEAP32[$58>>2]|0;
   HEAP8[$59>>0] = 0;
   $60 = ((($__grp)) + 4|0);
   HEAP32[$60>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp,0);
  ;HEAP32[$__grp>>2]=HEAP32[$4>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$4+8>>2]|0;
  HEAP32[$4>>2] = 0;
  $62 = ((($4)) + 4|0);
  HEAP32[$62>>2] = 0;
  $63 = ((($4)) + 8|0);
  HEAP32[$63>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  $64 = HEAP32[$$pre$phiZ2D>>2]|0;
  $65 = ((($64)) + 24|0);
  $66 = HEAP32[$65>>2]|0;
  FUNCTION_TABLE_vii[$66 & 63]($5,$12);
  $67 = HEAP8[$__sym>>0]|0;
  $68 = $67 & 1;
  $69 = ($68<<24>>24)==(0);
  if ($69) {
   $73 = ((($__sym)) + 1|0);
   HEAP8[$73>>0] = 0;
   HEAP8[$__sym>>0] = 0;
  } else {
   $70 = ((($__sym)) + 8|0);
   $71 = HEAP32[$70>>2]|0;
   HEAP8[$71>>0] = 0;
   $72 = ((($__sym)) + 4|0);
   HEAP32[$72>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sym,0);
  ;HEAP32[$__sym>>2]=HEAP32[$5>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$5+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$5+8>>2]|0;
  HEAP32[$5>>2] = 0;
  $74 = ((($5)) + 4|0);
  HEAP32[$74>>2] = 0;
  $75 = ((($5)) + 8|0);
  HEAP32[$75>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
  $76 = HEAP32[$12>>2]|0;
  $77 = ((($76)) + 36|0);
  $78 = HEAP32[$77>>2]|0;
  $79 = (FUNCTION_TABLE_ii[$78 & 63]($12)|0);
  $storemerge = $79;
 } else {
  $80 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,5680)|0);
  $81 = HEAP32[$80>>2]|0;
  if ($__neg) {
   $82 = ((($81)) + 44|0);
   $83 = HEAP32[$82>>2]|0;
   FUNCTION_TABLE_vii[$83 & 63]($6,$80);
   $84 = HEAP32[$6>>2]|0;
   HEAP8[$__pat>>0]=$84&255;HEAP8[$__pat+1>>0]=($84>>8)&255;HEAP8[$__pat+2>>0]=($84>>16)&255;HEAP8[$__pat+3>>0]=$84>>24;
   $85 = HEAP32[$80>>2]|0;
   $86 = ((($85)) + 32|0);
   $87 = HEAP32[$86>>2]|0;
   FUNCTION_TABLE_vii[$87 & 63]($7,$80);
   $88 = HEAP8[$__sn>>0]|0;
   $89 = $88 & 1;
   $90 = ($89<<24>>24)==(0);
   if ($90) {
    $94 = ((($__sn)) + 1|0);
    HEAP8[$94>>0] = 0;
    HEAP8[$__sn>>0] = 0;
   } else {
    $91 = ((($__sn)) + 8|0);
    $92 = HEAP32[$91>>2]|0;
    HEAP8[$92>>0] = 0;
    $93 = ((($__sn)) + 4|0);
    HEAP32[$93>>2] = 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sn,0);
   ;HEAP32[$__sn>>2]=HEAP32[$7>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$7+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$7+8>>2]|0;
   HEAP32[$7>>2] = 0;
   $95 = ((($7)) + 4|0);
   HEAP32[$95>>2] = 0;
   $96 = ((($7)) + 8|0);
   HEAP32[$96>>2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
   $$pre$phi32Z2D = $80;
  } else {
   $97 = ((($81)) + 40|0);
   $98 = HEAP32[$97>>2]|0;
   FUNCTION_TABLE_vii[$98 & 63]($8,$80);
   $99 = HEAP32[$8>>2]|0;
   HEAP8[$__pat>>0]=$99&255;HEAP8[$__pat+1>>0]=($99>>8)&255;HEAP8[$__pat+2>>0]=($99>>16)&255;HEAP8[$__pat+3>>0]=$99>>24;
   $100 = HEAP32[$80>>2]|0;
   $101 = ((($100)) + 28|0);
   $102 = HEAP32[$101>>2]|0;
   FUNCTION_TABLE_vii[$102 & 63]($9,$80);
   $103 = HEAP8[$__sn>>0]|0;
   $104 = $103 & 1;
   $105 = ($104<<24>>24)==(0);
   if ($105) {
    $109 = ((($__sn)) + 1|0);
    HEAP8[$109>>0] = 0;
    HEAP8[$__sn>>0] = 0;
   } else {
    $106 = ((($__sn)) + 8|0);
    $107 = HEAP32[$106>>2]|0;
    HEAP8[$107>>0] = 0;
    $108 = ((($__sn)) + 4|0);
    HEAP32[$108>>2] = 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sn,0);
   ;HEAP32[$__sn>>2]=HEAP32[$9>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$9+8>>2]|0;
   HEAP32[$9>>2] = 0;
   $110 = ((($9)) + 4|0);
   HEAP32[$110>>2] = 0;
   $111 = ((($9)) + 8|0);
   HEAP32[$111>>2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
   $$pre$phi32Z2D = $80;
  }
  $112 = HEAP32[$80>>2]|0;
  $113 = ((($112)) + 12|0);
  $114 = HEAP32[$113>>2]|0;
  $115 = (FUNCTION_TABLE_ii[$114 & 63]($80)|0);
  HEAP8[$__dp>>0] = $115;
  $116 = HEAP32[$80>>2]|0;
  $117 = ((($116)) + 16|0);
  $118 = HEAP32[$117>>2]|0;
  $119 = (FUNCTION_TABLE_ii[$118 & 63]($80)|0);
  HEAP8[$__ts>>0] = $119;
  $120 = HEAP32[$$pre$phi32Z2D>>2]|0;
  $121 = ((($120)) + 20|0);
  $122 = HEAP32[$121>>2]|0;
  FUNCTION_TABLE_vii[$122 & 63]($10,$80);
  $123 = HEAP8[$__grp>>0]|0;
  $124 = $123 & 1;
  $125 = ($124<<24>>24)==(0);
  if ($125) {
   $129 = ((($__grp)) + 1|0);
   HEAP8[$129>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $126 = ((($__grp)) + 8|0);
   $127 = HEAP32[$126>>2]|0;
   HEAP8[$127>>0] = 0;
   $128 = ((($__grp)) + 4|0);
   HEAP32[$128>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp,0);
  ;HEAP32[$__grp>>2]=HEAP32[$10>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$10+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$10+8>>2]|0;
  HEAP32[$10>>2] = 0;
  $130 = ((($10)) + 4|0);
  HEAP32[$130>>2] = 0;
  $131 = ((($10)) + 8|0);
  HEAP32[$131>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
  $132 = HEAP32[$$pre$phi32Z2D>>2]|0;
  $133 = ((($132)) + 24|0);
  $134 = HEAP32[$133>>2]|0;
  FUNCTION_TABLE_vii[$134 & 63]($11,$80);
  $135 = HEAP8[$__sym>>0]|0;
  $136 = $135 & 1;
  $137 = ($136<<24>>24)==(0);
  if ($137) {
   $141 = ((($__sym)) + 1|0);
   HEAP8[$141>>0] = 0;
   HEAP8[$__sym>>0] = 0;
  } else {
   $138 = ((($__sym)) + 8|0);
   $139 = HEAP32[$138>>2]|0;
   HEAP8[$139>>0] = 0;
   $140 = ((($__sym)) + 4|0);
   HEAP32[$140>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sym,0);
  ;HEAP32[$__sym>>2]=HEAP32[$11>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$11+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$11+8>>2]|0;
  HEAP32[$11>>2] = 0;
  $142 = ((($11)) + 4|0);
  HEAP32[$142>>2] = 0;
  $143 = ((($11)) + 8|0);
  HEAP32[$143>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  $144 = HEAP32[$80>>2]|0;
  $145 = ((($144)) + 36|0);
  $146 = HEAP32[$145>>2]|0;
  $147 = (FUNCTION_TABLE_ii[$146 & 63]($80)|0);
  $storemerge = $147;
 }
 HEAP32[$__fd>>2] = $storemerge;
 STACKTOP = sp;return;
}
function __ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i($__mb,$__mi,$__me,$__flags,$__db,$__de,$__ct,$__neg,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd) {
 $__mb = $__mb|0;
 $__mi = $__mi|0;
 $__me = $__me|0;
 $__flags = $__flags|0;
 $__db = $__db|0;
 $__de = $__de|0;
 $__ct = $__ct|0;
 $__neg = $__neg|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__sn = $__sn|0;
 $__fd = $__fd|0;
 var $$ = 0, $$$0 = 0, $$$027 = 0, $$0$i$i$lcssa = 0, $$0$i$i35 = 0, $$0$i$i9$lcssa = 0, $$0$i$i958 = 0, $$01$i$i56 = 0, $$062 = 0, $$2 = 0, $$lcssa = 0, $$lcssa34 = 0, $$op = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0;
 var $177 = 0, $178 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__d$0$lcssa = 0, $__d$0$lcssa26 = 0, $__d$036 = 0, $__d$142 = 0, $__d$2 = 0, $__d$351 = 0, $__f$043 = 0, $__f$146 = 0;
 var $__gl$0$ph = 0, $__gl$054 = 0, $__gl$1 = 0, $__ig$053 = 0, $__ig$1 = 0, $__ng$052 = 0, $__ng$1 = 0, $__p$061 = 0, $exitcond = 0, $isascii1$i = 0, $or$cond = 0, $scevgep$sum = 0, $scevgep29 = 0, $umax28 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$__me>>2] = $__mb;
 $0 = ((($__sn)) + 4|0);
 $1 = ((($__sn)) + 8|0);
 $2 = ((($__sn)) + 1|0);
 $3 = ((($__sym)) + 4|0);
 $4 = $__flags & 512;
 $5 = ($4|0)==(0);
 $6 = ((($__sym)) + 8|0);
 $7 = ((($__sym)) + 1|0);
 $8 = ((($__ct)) + 8|0);
 $9 = ($__fd|0)>(0);
 $10 = ((($__grp)) + 4|0);
 $11 = ((($__grp)) + 8|0);
 $12 = ((($__grp)) + 1|0);
 $13 = (($__fd) + 1)|0;
 $14 = (-2 - ($__fd))|0;
 $15 = ($__fd|0)<(0);
 $$op = $__fd ^ -1;
 $16 = $15 ? $$op : -1;
 $17 = (($14) - ($16))|0;
 $18 = ($__fd|0)>(0);
 $$062 = $__db;$__p$061 = 0;
 while(1) {
  $19 = (($__pat) + ($__p$061)|0);
  $20 = HEAP8[$19>>0]|0;
  $21 = $20 << 24 >> 24;
  switch ($21|0) {
  case 0:  {
   $22 = HEAP32[$__me>>2]|0;
   HEAP32[$__mi>>2] = $22;
   $$2 = $$062;
   break;
  }
  case 2:  {
   $43 = HEAP8[$__sym>>0]|0;
   $44 = $43 & 1;
   $45 = ($44<<24>>24)==(0);
   $46 = HEAP32[$3>>2]|0;
   $47 = $43&255;
   $48 = $47 >>> 1;
   $49 = $45 ? $48 : $46;
   $50 = ($49|0)==(0);
   $or$cond = $5 | $50;
   if ($or$cond) {
    $$2 = $$062;
   } else {
    $51 = HEAP32[$6>>2]|0;
    $52 = $45 ? $7 : $51;
    $53 = (($52) + ($49)|0);
    $54 = HEAP32[$__me>>2]|0;
    $55 = ($49|0)==(0);
    if ($55) {
     $$0$i$i9$lcssa = $54;
    } else {
     $$0$i$i958 = $54;$57 = $52;
     while(1) {
      $56 = HEAP8[$57>>0]|0;
      HEAP8[$$0$i$i958>>0] = $56;
      $58 = ((($57)) + 1|0);
      $59 = ((($$0$i$i958)) + 1|0);
      $60 = ($58|0)==($53|0);
      if ($60) {
       $$0$i$i9$lcssa = $59;
       break;
      } else {
       $$0$i$i958 = $59;$57 = $58;
      }
     }
    }
    HEAP32[$__me>>2] = $$0$i$i9$lcssa;
    $$2 = $$062;
   }
   break;
  }
  case 4:  {
   $61 = HEAP32[$__me>>2]|0;
   $62 = ((($$062)) + 1|0);
   $$$0 = $__neg ? $62 : $$062;
   $$$027 = $$$0;
   $63 = HEAP32[$8>>2]|0;
   $64 = ($$$0>>>0)<($__de>>>0);
   L12: do {
    if ($64) {
     $__d$036 = $$$0;
     while(1) {
      $65 = HEAP8[$__d$036>>0]|0;
      $isascii1$i = ($65<<24>>24)>(-1);
      if (!($isascii1$i)) {
       $__d$0$lcssa = $__d$036;
       break L12;
      }
      $66 = $65 << 24 >> 24;
      $67 = (($63) + ($66<<1)|0);
      $68 = HEAP16[$67>>1]|0;
      $69 = $68 & 2048;
      $70 = ($69<<16>>16)==(0);
      if ($70) {
       $__d$0$lcssa = $__d$036;
       break L12;
      }
      $71 = ((($__d$036)) + 1|0);
      $72 = ($71>>>0)<($__de>>>0);
      if ($72) {
       $__d$036 = $71;
      } else {
       $__d$0$lcssa = $71;
       break;
      }
     }
    } else {
     $__d$0$lcssa = $$$0;
    }
   } while(0);
   $__d$0$lcssa26 = $__d$0$lcssa;
   if ($9) {
    $73 = (-2 - ($__d$0$lcssa26))|0;
    $74 = ($__d$0$lcssa26>>>0)>($$$027>>>0);
    $75 = $74 ? $$$027 : $__d$0$lcssa26;
    $76 = $75 ^ -1;
    $77 = (($73) - ($76))|0;
    $78 = ($17>>>0)>($77>>>0);
    $umax28 = $78 ? $17 : $77;
    $79 = ($__d$0$lcssa>>>0)>($$$0>>>0);
    $80 = $79 & $18;
    if ($80) {
     $__d$142 = $__d$0$lcssa;$__f$043 = $__fd;
     while(1) {
      $81 = ((($__d$142)) + -1|0);
      $82 = HEAP8[$81>>0]|0;
      $83 = HEAP32[$__me>>2]|0;
      $84 = ((($83)) + 1|0);
      HEAP32[$__me>>2] = $84;
      HEAP8[$83>>0] = $82;
      $85 = (($__f$043) + -1)|0;
      $86 = ($81>>>0)>($$$0>>>0);
      $87 = ($__f$043|0)>(1);
      $88 = $86 & $87;
      if ($88) {
       $__d$142 = $81;$__f$043 = $85;
      } else {
       $$lcssa = $87;
       break;
      }
     }
    } else {
     $$lcssa = $18;
    }
    $89 = (($13) + ($umax28))|0;
    $scevgep$sum = (($umax28) + 1)|0;
    $scevgep29 = (($__d$0$lcssa) + ($scevgep$sum)|0);
    if ($$lcssa) {
     $90 = HEAP32[$__ct>>2]|0;
     $91 = ((($90)) + 28|0);
     $92 = HEAP32[$91>>2]|0;
     $93 = (FUNCTION_TABLE_iii[$92 & 15]($__ct,48)|0);
     $97 = $93;
    } else {
     $97 = 0;
    }
    $94 = ($89|0)>(0);
    $95 = HEAP32[$__me>>2]|0;
    $96 = ((($95)) + 1|0);
    HEAP32[$__me>>2] = $96;
    if ($94) {
     $98 = $95;$__f$146 = $89;
     while(1) {
      HEAP8[$98>>0] = $97;
      $99 = (($__f$146) + -1)|0;
      $100 = ($__f$146|0)>(1);
      $101 = HEAP32[$__me>>2]|0;
      $102 = ((($101)) + 1|0);
      HEAP32[$__me>>2] = $102;
      if ($100) {
       $98 = $101;$__f$146 = $99;
      } else {
       $$lcssa34 = $101;
       break;
      }
     }
    } else {
     $$lcssa34 = $95;
    }
    HEAP8[$$lcssa34>>0] = $__dp;
    $__d$2 = $scevgep29;
   } else {
    $__d$2 = $__d$0$lcssa;
   }
   $103 = ($__d$2|0)==($$$0|0);
   if ($103) {
    $104 = HEAP32[$__ct>>2]|0;
    $105 = ((($104)) + 28|0);
    $106 = HEAP32[$105>>2]|0;
    $107 = (FUNCTION_TABLE_iii[$106 & 15]($__ct,48)|0);
    $108 = HEAP32[$__me>>2]|0;
    $109 = ((($108)) + 1|0);
    HEAP32[$__me>>2] = $109;
    HEAP8[$108>>0] = $107;
   } else {
    $110 = HEAP8[$__grp>>0]|0;
    $111 = $110 & 1;
    $112 = ($111<<24>>24)==(0);
    $113 = HEAP32[$10>>2]|0;
    $114 = $110&255;
    $115 = $114 >>> 1;
    $116 = $112 ? $115 : $113;
    $117 = ($116|0)==(0);
    if ($117) {
     $__gl$0$ph = -1;
    } else {
     $118 = HEAP32[$11>>2]|0;
     $119 = $112 ? $12 : $118;
     $120 = HEAP8[$119>>0]|0;
     $121 = $120 << 24 >> 24;
     $__gl$0$ph = $121;
    }
    $122 = ($__d$2|0)==($$$0|0);
    if (!($122)) {
     $__d$351 = $__d$2;$__gl$054 = $__gl$0$ph;$__ig$053 = 0;$__ng$052 = 0;
     while(1) {
      $123 = ($__ng$052|0)==($__gl$054|0);
      if ($123) {
       $124 = HEAP32[$__me>>2]|0;
       $125 = ((($124)) + 1|0);
       HEAP32[$__me>>2] = $125;
       HEAP8[$124>>0] = $__ts;
       $126 = (($__ig$053) + 1)|0;
       $127 = HEAP8[$__grp>>0]|0;
       $128 = $127 & 1;
       $129 = ($128<<24>>24)==(0);
       $130 = HEAP32[$10>>2]|0;
       $131 = $127&255;
       $132 = $131 >>> 1;
       $133 = $129 ? $132 : $130;
       $134 = ($126>>>0)<($133>>>0);
       if ($134) {
        $135 = HEAP32[$11>>2]|0;
        $136 = $129 ? $12 : $135;
        $137 = (($136) + ($126)|0);
        $138 = HEAP8[$137>>0]|0;
        $139 = ($138<<24>>24)==(127);
        $140 = $138 << 24 >> 24;
        $$ = $139 ? -1 : $140;
        $__gl$1 = $$;$__ig$1 = $126;$__ng$1 = 0;
       } else {
        $__gl$1 = $__ng$052;$__ig$1 = $126;$__ng$1 = 0;
       }
      } else {
       $__gl$1 = $__gl$054;$__ig$1 = $__ig$053;$__ng$1 = $__ng$052;
      }
      $141 = ((($__d$351)) + -1|0);
      $142 = HEAP8[$141>>0]|0;
      $143 = HEAP32[$__me>>2]|0;
      $144 = ((($143)) + 1|0);
      HEAP32[$__me>>2] = $144;
      HEAP8[$143>>0] = $142;
      $145 = (($__ng$1) + 1)|0;
      $146 = ($141|0)==($$$0|0);
      if ($146) {
       break;
      } else {
       $__d$351 = $141;$__gl$054 = $__gl$1;$__ig$053 = $__ig$1;$__ng$052 = $145;
      }
     }
    }
   }
   $147 = HEAP32[$__me>>2]|0;
   $148 = ($61|0)==($147|0);
   if ($148) {
    $$2 = $$$0;
   } else {
    $149 = ((($147)) + -1|0);
    $150 = ($61>>>0)<($149>>>0);
    if ($150) {
     $$01$i$i56 = $61;$153 = $149;
     while(1) {
      $151 = HEAP8[$$01$i$i56>>0]|0;
      $152 = HEAP8[$153>>0]|0;
      HEAP8[$$01$i$i56>>0] = $152;
      HEAP8[$153>>0] = $151;
      $154 = ((($$01$i$i56)) + 1|0);
      $155 = ((($153)) + -1|0);
      $156 = ($154>>>0)<($155>>>0);
      if ($156) {
       $$01$i$i56 = $154;$153 = $155;
      } else {
       $$2 = $$$0;
       break;
      }
     }
    } else {
     $$2 = $$$0;
    }
   }
   break;
  }
  case 3:  {
   $30 = HEAP8[$__sn>>0]|0;
   $31 = $30 & 1;
   $32 = ($31<<24>>24)==(0);
   $33 = HEAP32[$0>>2]|0;
   $34 = $30&255;
   $35 = $34 >>> 1;
   $36 = $32 ? $35 : $33;
   $37 = ($36|0)==(0);
   if ($37) {
    $$2 = $$062;
   } else {
    $38 = HEAP32[$1>>2]|0;
    $39 = $32 ? $2 : $38;
    $40 = HEAP8[$39>>0]|0;
    $41 = HEAP32[$__me>>2]|0;
    $42 = ((($41)) + 1|0);
    HEAP32[$__me>>2] = $42;
    HEAP8[$41>>0] = $40;
    $$2 = $$062;
   }
   break;
  }
  case 1:  {
   $23 = HEAP32[$__me>>2]|0;
   HEAP32[$__mi>>2] = $23;
   $24 = HEAP32[$__ct>>2]|0;
   $25 = ((($24)) + 28|0);
   $26 = HEAP32[$25>>2]|0;
   $27 = (FUNCTION_TABLE_iii[$26 & 15]($__ct,32)|0);
   $28 = HEAP32[$__me>>2]|0;
   $29 = ((($28)) + 1|0);
   HEAP32[$__me>>2] = $29;
   HEAP8[$28>>0] = $27;
   $$2 = $$062;
   break;
  }
  default: {
   $$2 = $$062;
  }
  }
  $157 = (($__p$061) + 1)|0;
  $exitcond = ($157|0)==(4);
  if ($exitcond) {
   break;
  } else {
   $$062 = $$2;$__p$061 = $157;
  }
 }
 $158 = HEAP8[$__sn>>0]|0;
 $159 = $158 & 1;
 $160 = ($159<<24>>24)==(0);
 $161 = HEAP32[$0>>2]|0;
 $162 = $158&255;
 $163 = $162 >>> 1;
 $164 = $160 ? $163 : $161;
 $165 = ($164>>>0)>(1);
 if ($165) {
  $166 = HEAP32[$1>>2]|0;
  $167 = $160 ? $2 : $166;
  $168 = (($167) + ($164)|0);
  $169 = HEAP32[$__me>>2]|0;
  $170 = ($164|0)==(1);
  if ($170) {
   $$0$i$i$lcssa = $169;
  } else {
   $171 = ((($167)) + 1|0);
   $$0$i$i35 = $169;$173 = $171;
   while(1) {
    $172 = HEAP8[$173>>0]|0;
    HEAP8[$$0$i$i35>>0] = $172;
    $174 = ((($$0$i$i35)) + 1|0);
    $175 = ((($173)) + 1|0);
    $176 = ($175|0)==($168|0);
    if ($176) {
     $$0$i$i$lcssa = $174;
     break;
    } else {
     $$0$i$i35 = $174;$173 = $175;
    }
   }
  }
  HEAP32[$__me>>2] = $$0$i$i$lcssa;
 }
 $177 = $__flags & 176;
 if ((($177|0) == 32)) {
  $178 = HEAP32[$__me>>2]|0;
  HEAP32[$__mi>>2] = $178;
 } else if (!((($177|0) == 16))) {
  HEAP32[$__mi>>2] = $__mb;
 }
 return;
}
function __ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE($this,$__s,$__intl,$__iob,$__fl,$__digits) {
 $this = $this|0;
 $__s = $__s|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__digits = $__digits|0;
 var $$byval_copy = 0, $$pre16 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dp = 0, $__fd = 0, $__grp = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0;
 $$byval_copy = sp + 56|0;
 $__loc = sp + 52|0;
 $__pat = sp + 164|0;
 $__dp = sp + 161|0;
 $__ts = sp + 160|0;
 $__grp = sp + 40|0;
 $__sym = sp + 28|0;
 $__sn = sp + 16|0;
 $__fd = sp + 12|0;
 $__mbuf = sp + 60|0;
 $__mi = sp + 8|0;
 $__me = sp + 4|0;
 $0 = sp;
 $1 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $1;
 $2 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6160)|0);
 $3 = HEAP8[$__digits>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 $6 = ((($__digits)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = $3&255;
 $9 = $8 >>> 1;
 $10 = $5 ? $9 : $7;
 $11 = ($10|0)==(0);
 if ($11) {
  $28 = 0;
 } else {
  $12 = ((($__digits)) + 8|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = ((($__digits)) + 1|0);
  $15 = $5 ? $14 : $13;
  $16 = HEAP8[$15>>0]|0;
  $17 = HEAP32[$2>>2]|0;
  $18 = ((($17)) + 28|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = (FUNCTION_TABLE_iii[$19 & 15]($2,45)|0);
  $21 = ($16<<24>>24)==($20<<24>>24);
  $28 = $21;
 }
 HEAP32[$__grp>>2] = 0;
 $22 = ((($__grp)) + 4|0);
 HEAP32[$22>>2] = 0;
 $23 = ((($__grp)) + 8|0);
 HEAP32[$23>>2] = 0;
 HEAP32[$__sym>>2] = 0;
 $24 = ((($__sym)) + 4|0);
 HEAP32[$24>>2] = 0;
 $25 = ((($__sym)) + 8|0);
 HEAP32[$25>>2] = 0;
 HEAP32[$__sn>>2] = 0;
 $26 = ((($__sn)) + 4|0);
 HEAP32[$26>>2] = 0;
 $27 = ((($__sn)) + 8|0);
 HEAP32[$27>>2] = 0;
 __ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri($__intl,$28,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd);
 $29 = HEAP8[$__digits>>0]|0;
 $30 = $29 & 1;
 $31 = ($30<<24>>24)==(0);
 $32 = HEAP32[$6>>2]|0;
 $33 = $29&255;
 $34 = $33 >>> 1;
 $35 = $31 ? $34 : $32;
 $36 = HEAP32[$__fd>>2]|0;
 $37 = ($35|0)>($36|0);
 if ($37) {
  $38 = (($35) - ($36))|0;
  $39 = $38 << 1;
  $40 = HEAP8[$__sn>>0]|0;
  $41 = $40 & 1;
  $42 = ($41<<24>>24)==(0);
  $43 = ((($__sn)) + 4|0);
  $44 = HEAP32[$43>>2]|0;
  $45 = $40&255;
  $46 = $45 >>> 1;
  $47 = $42 ? $46 : $44;
  $48 = HEAP8[$__sym>>0]|0;
  $49 = $48 & 1;
  $50 = ($49<<24>>24)==(0);
  $51 = ((($__sym)) + 4|0);
  $52 = HEAP32[$51>>2]|0;
  $53 = $48&255;
  $54 = $53 >>> 1;
  $55 = $50 ? $54 : $52;
  $56 = $39 | 1;
  $57 = (($56) + ($36))|0;
  $58 = (($57) + ($47))|0;
  $59 = (($58) + ($55))|0;
  $79 = $59;
 } else {
  $60 = HEAP8[$__sn>>0]|0;
  $61 = $60 & 1;
  $62 = ($61<<24>>24)==(0);
  $63 = ((($__sn)) + 4|0);
  $64 = HEAP32[$63>>2]|0;
  $65 = $60&255;
  $66 = $65 >>> 1;
  $67 = $62 ? $66 : $64;
  $68 = HEAP8[$__sym>>0]|0;
  $69 = $68 & 1;
  $70 = ($69<<24>>24)==(0);
  $71 = ((($__sym)) + 4|0);
  $72 = HEAP32[$71>>2]|0;
  $73 = $68&255;
  $74 = $73 >>> 1;
  $75 = $70 ? $74 : $72;
  $76 = (($36) + 2)|0;
  $77 = (($76) + ($67))|0;
  $78 = (($77) + ($75))|0;
  $79 = $78;
 }
 $80 = ($79>>>0)>(100);
 if ($80) {
  $81 = (_malloc($79)|0);
  $82 = $81;
  $83 = ($81|0)==(0|0);
  if ($83) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $102 = $82;$__mb$0 = $81;
  }
 } else {
  $102 = 0;$__mb$0 = $__mbuf;
 }
 $84 = ((($__iob)) + 4|0);
 $85 = HEAP32[$84>>2]|0;
 $86 = $29 & 1;
 $87 = ($86<<24>>24)==(0);
 $88 = ((($__digits)) + 8|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = ((($__digits)) + 1|0);
 $91 = $87 ? $90 : $89;
 $92 = $29&255;
 $93 = $92 >>> 1;
 $94 = $87 ? $93 : $32;
 $95 = (($91) + ($94)|0);
 $96 = HEAP8[$__dp>>0]|0;
 $97 = HEAP8[$__ts>>0]|0;
 __ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i($__mb$0,$__mi,$__me,$85,$91,$95,$2,$28,$__pat,$96,$97,$__grp,$__sym,$__sn,$36);
 $98 = HEAP32[$__s>>2]|0;
 HEAP32[$0>>2] = $98;
 $99 = HEAP32[$__mi>>2]|0;
 $100 = HEAP32[$__me>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $101 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__mb$0,$99,$100,$__iob,$__fl)|0);
 $103 = ($102|0)==(0);
 if ($103) {
  $105 = $1;
 } else {
  $104 = $102;
  _free($104);
  $$pre16 = HEAP32[$__loc>>2]|0;
  $105 = $$pre16;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sn);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
 (__ZNSt3__114__shared_count16__release_sharedEv($105)|0);
 STACKTOP = sp;return ($101|0);
}
function __ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe($this,$__s,$__intl,$__iob,$__fl,$__units) {
 $this = $this|0;
 $__s = $__s|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__units = +$__units;
 var $$byval_copy = 0, $$pre11 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $__bb = 0, $__buf = 0, $__db$0 = 0, $__digits = 0, $__dp = 0, $__fd = 0, $__grp = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__n$0 = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1008|0;
 $$byval_copy = sp + 8|0;
 $vararg_buffer1 = sp;
 $__buf = sp + 896|0;
 $__bb = sp + 888|0;
 $__digits = sp + 488|0;
 $__loc = sp + 480|0;
 $__pat = sp + 892|0;
 $__dp = sp + 476|0;
 $__ts = sp + 472|0;
 $__grp = sp + 460|0;
 $__sym = sp + 448|0;
 $__sn = sp + 436|0;
 $__fd = sp + 432|0;
 $__mbuf = sp + 32|0;
 $__mi = sp + 24|0;
 $__me = sp + 20|0;
 $0 = sp + 16|0;
 HEAP32[$__bb>>2] = $__buf;
 HEAPF64[$$byval_copy>>3] = $__units;
 $1 = (_snprintf($__buf,100,9496,$$byval_copy)|0);
 $2 = ($1>>>0)>(99);
 if ($2) {
  $3 = (__ZNSt3__16__clocEv()|0);
  HEAPF64[$vararg_buffer1>>3] = $__units;
  $4 = (__ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__bb,$3,9496,$vararg_buffer1)|0);
  $5 = HEAP32[$__bb>>2]|0;
  $6 = ($5|0)==(0|0);
  if ($6) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  }
  $7 = $5;
  $8 = $4 << 2;
  $9 = (_malloc($8)|0);
  $10 = $9;
  $11 = ($9|0)==(0|0);
  if ($11) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $92 = $10;$95 = $7;$__db$0 = $9;$__n$0 = $4;
  }
 } else {
  $92 = 0;$95 = 0;$__db$0 = $__digits;$__n$0 = $1;
 }
 $12 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $12;
 $13 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6152)|0);
 $14 = HEAP32[$__bb>>2]|0;
 $15 = (($14) + ($__n$0)|0);
 $16 = HEAP32[$13>>2]|0;
 $17 = ((($16)) + 48|0);
 $18 = HEAP32[$17>>2]|0;
 (FUNCTION_TABLE_iiiii[$18 & 7]($13,$14,$15,$__db$0)|0);
 $19 = ($__n$0|0)==(0);
 if ($19) {
  $29 = 0;
 } else {
  $20 = HEAP32[$__bb>>2]|0;
  $21 = HEAP8[$20>>0]|0;
  $22 = ($21<<24>>24)==(45);
  $29 = $22;
 }
 HEAP32[$__grp>>2] = 0;
 $23 = ((($__grp)) + 4|0);
 HEAP32[$23>>2] = 0;
 $24 = ((($__grp)) + 8|0);
 HEAP32[$24>>2] = 0;
 HEAP32[$__sym>>2] = 0;
 $25 = ((($__sym)) + 4|0);
 HEAP32[$25>>2] = 0;
 $26 = ((($__sym)) + 8|0);
 HEAP32[$26>>2] = 0;
 HEAP32[$__sn>>2] = 0;
 $27 = ((($__sn)) + 4|0);
 HEAP32[$27>>2] = 0;
 $28 = ((($__sn)) + 8|0);
 HEAP32[$28>>2] = 0;
 __ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri($__intl,$29,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd);
 $30 = HEAP32[$__fd>>2]|0;
 $31 = ($__n$0|0)>($30|0);
 if ($31) {
  $32 = (($__n$0) - ($30))|0;
  $33 = $32 << 1;
  $34 = HEAP8[$__sn>>0]|0;
  $35 = $34 & 1;
  $36 = ($35<<24>>24)==(0);
  $37 = ((($__sn)) + 4|0);
  $38 = HEAP32[$37>>2]|0;
  $39 = $34&255;
  $40 = $39 >>> 1;
  $41 = $36 ? $40 : $38;
  $42 = HEAP8[$__sym>>0]|0;
  $43 = $42 & 1;
  $44 = ($43<<24>>24)==(0);
  $45 = ((($__sym)) + 4|0);
  $46 = HEAP32[$45>>2]|0;
  $47 = $42&255;
  $48 = $47 >>> 1;
  $49 = $44 ? $48 : $46;
  $50 = $33 | 1;
  $51 = (($50) + ($30))|0;
  $52 = (($51) + ($41))|0;
  $53 = (($52) + ($49))|0;
  $73 = $53;
 } else {
  $54 = HEAP8[$__sn>>0]|0;
  $55 = $54 & 1;
  $56 = ($55<<24>>24)==(0);
  $57 = ((($__sn)) + 4|0);
  $58 = HEAP32[$57>>2]|0;
  $59 = $54&255;
  $60 = $59 >>> 1;
  $61 = $56 ? $60 : $58;
  $62 = HEAP8[$__sym>>0]|0;
  $63 = $62 & 1;
  $64 = ($63<<24>>24)==(0);
  $65 = ((($__sym)) + 4|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = $62&255;
  $68 = $67 >>> 1;
  $69 = $64 ? $68 : $66;
  $70 = (($30) + 2)|0;
  $71 = (($70) + ($61))|0;
  $72 = (($71) + ($69))|0;
  $73 = $72;
 }
 $74 = ($73>>>0)>(100);
 if ($74) {
  $75 = $73 << 2;
  $76 = (_malloc($75)|0);
  $77 = $76;
  $78 = ($76|0)==(0|0);
  if ($78) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $88 = $77;$__mb$0 = $76;
  }
 } else {
  $88 = 0;$__mb$0 = $__mbuf;
 }
 $79 = ((($__iob)) + 4|0);
 $80 = HEAP32[$79>>2]|0;
 $81 = (($__db$0) + ($__n$0<<2)|0);
 $82 = HEAP32[$__dp>>2]|0;
 $83 = HEAP32[$__ts>>2]|0;
 __ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i($__mb$0,$__mi,$__me,$80,$__db$0,$81,$13,$29,$__pat,$82,$83,$__grp,$__sym,$__sn,$30);
 $84 = HEAP32[$__s>>2]|0;
 HEAP32[$0>>2] = $84;
 $85 = HEAP32[$__mi>>2]|0;
 $86 = HEAP32[$__me>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $87 = (__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__mb$0,$85,$86,$__iob,$__fl)|0);
 $89 = ($88|0)==(0);
 if ($89) {
  $91 = $12;
 } else {
  $90 = $88;
  _free($90);
  $$pre11 = HEAP32[$__loc>>2]|0;
  $91 = $$pre11;
 }
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sn);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
 (__ZNSt3__114__shared_count16__release_sharedEv($91)|0);
 $93 = ($92|0)==(0);
 if (!($93)) {
  $94 = $92;
  _free($94);
 }
 $96 = ($95|0)==(0);
 if (!($96)) {
  $97 = $95;
  _free($97);
 }
 STACKTOP = sp;return ($87|0);
}
function __ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri($__intl,$__neg,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd) {
 $__intl = $__intl|0;
 $__neg = $__neg|0;
 $__loc = $__loc|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__sn = $__sn|0;
 $__fd = $__fd|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $0 = sp + 108|0;
 $1 = sp + 96|0;
 $2 = sp + 92|0;
 $3 = sp + 80|0;
 $4 = sp + 68|0;
 $5 = sp + 56|0;
 $6 = sp + 52|0;
 $7 = sp + 40|0;
 $8 = sp + 36|0;
 $9 = sp + 24|0;
 $10 = sp + 12|0;
 $11 = sp;
 if ($__intl) {
  $12 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,5872)|0);
  $13 = HEAP32[$12>>2]|0;
  if ($__neg) {
   $14 = ((($13)) + 44|0);
   $15 = HEAP32[$14>>2]|0;
   FUNCTION_TABLE_vii[$15 & 63]($0,$12);
   $16 = HEAP32[$0>>2]|0;
   HEAP8[$__pat>>0]=$16&255;HEAP8[$__pat+1>>0]=($16>>8)&255;HEAP8[$__pat+2>>0]=($16>>16)&255;HEAP8[$__pat+3>>0]=$16>>24;
   $17 = HEAP32[$12>>2]|0;
   $18 = ((($17)) + 32|0);
   $19 = HEAP32[$18>>2]|0;
   FUNCTION_TABLE_vii[$19 & 63]($1,$12);
   $20 = HEAP8[$__sn>>0]|0;
   $21 = $20 & 1;
   $22 = ($21<<24>>24)==(0);
   if ($22) {
    HEAP8[$__sn>>0] = 0;
   } else {
    $23 = ((($__sn)) + 8|0);
    $24 = HEAP32[$23>>2]|0;
    HEAP32[$24>>2] = 0;
   }
   $25 = ((($__sn)) + 4|0);
   HEAP32[$25>>2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sn,0);
   ;HEAP32[$__sn>>2]=HEAP32[$1>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$1+8>>2]|0;
   HEAP32[$1>>2] = 0;
   $26 = ((($1)) + 4|0);
   HEAP32[$26>>2] = 0;
   $27 = ((($1)) + 8|0);
   HEAP32[$27>>2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($1);
  } else {
   $28 = ((($13)) + 40|0);
   $29 = HEAP32[$28>>2]|0;
   FUNCTION_TABLE_vii[$29 & 63]($2,$12);
   $30 = HEAP32[$2>>2]|0;
   HEAP8[$__pat>>0]=$30&255;HEAP8[$__pat+1>>0]=($30>>8)&255;HEAP8[$__pat+2>>0]=($30>>16)&255;HEAP8[$__pat+3>>0]=$30>>24;
   $31 = HEAP32[$12>>2]|0;
   $32 = ((($31)) + 28|0);
   $33 = HEAP32[$32>>2]|0;
   FUNCTION_TABLE_vii[$33 & 63]($3,$12);
   $34 = HEAP8[$__sn>>0]|0;
   $35 = $34 & 1;
   $36 = ($35<<24>>24)==(0);
   if ($36) {
    HEAP8[$__sn>>0] = 0;
   } else {
    $37 = ((($__sn)) + 8|0);
    $38 = HEAP32[$37>>2]|0;
    HEAP32[$38>>2] = 0;
   }
   $39 = ((($__sn)) + 4|0);
   HEAP32[$39>>2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sn,0);
   ;HEAP32[$__sn>>2]=HEAP32[$3>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$3+8>>2]|0;
   HEAP32[$3>>2] = 0;
   $40 = ((($3)) + 4|0);
   HEAP32[$40>>2] = 0;
   $41 = ((($3)) + 8|0);
   HEAP32[$41>>2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($3);
  }
  $42 = HEAP32[$12>>2]|0;
  $43 = ((($42)) + 12|0);
  $44 = HEAP32[$43>>2]|0;
  $45 = (FUNCTION_TABLE_ii[$44 & 63]($12)|0);
  HEAP32[$__dp>>2] = $45;
  $46 = HEAP32[$12>>2]|0;
  $47 = ((($46)) + 16|0);
  $48 = HEAP32[$47>>2]|0;
  $49 = (FUNCTION_TABLE_ii[$48 & 63]($12)|0);
  HEAP32[$__ts>>2] = $49;
  $50 = HEAP32[$12>>2]|0;
  $51 = ((($50)) + 20|0);
  $52 = HEAP32[$51>>2]|0;
  FUNCTION_TABLE_vii[$52 & 63]($4,$12);
  $53 = HEAP8[$__grp>>0]|0;
  $54 = $53 & 1;
  $55 = ($54<<24>>24)==(0);
  if ($55) {
   $59 = ((($__grp)) + 1|0);
   HEAP8[$59>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $56 = ((($__grp)) + 8|0);
   $57 = HEAP32[$56>>2]|0;
   HEAP8[$57>>0] = 0;
   $58 = ((($__grp)) + 4|0);
   HEAP32[$58>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp,0);
  ;HEAP32[$__grp>>2]=HEAP32[$4>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$4+8>>2]|0;
  HEAP32[$4>>2] = 0;
  $60 = ((($4)) + 4|0);
  HEAP32[$60>>2] = 0;
  $61 = ((($4)) + 8|0);
  HEAP32[$61>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  $62 = HEAP32[$12>>2]|0;
  $63 = ((($62)) + 24|0);
  $64 = HEAP32[$63>>2]|0;
  FUNCTION_TABLE_vii[$64 & 63]($5,$12);
  $65 = HEAP8[$__sym>>0]|0;
  $66 = $65 & 1;
  $67 = ($66<<24>>24)==(0);
  if ($67) {
   HEAP8[$__sym>>0] = 0;
  } else {
   $68 = ((($__sym)) + 8|0);
   $69 = HEAP32[$68>>2]|0;
   HEAP32[$69>>2] = 0;
  }
  $70 = ((($__sym)) + 4|0);
  HEAP32[$70>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sym,0);
  ;HEAP32[$__sym>>2]=HEAP32[$5>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$5+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$5+8>>2]|0;
  HEAP32[$5>>2] = 0;
  $71 = ((($5)) + 4|0);
  HEAP32[$71>>2] = 0;
  $72 = ((($5)) + 8|0);
  HEAP32[$72>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($5);
  $73 = HEAP32[$12>>2]|0;
  $74 = ((($73)) + 36|0);
  $75 = HEAP32[$74>>2]|0;
  $76 = (FUNCTION_TABLE_ii[$75 & 63]($12)|0);
  $storemerge = $76;
 } else {
  $77 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,5808)|0);
  $78 = HEAP32[$77>>2]|0;
  if ($__neg) {
   $79 = ((($78)) + 44|0);
   $80 = HEAP32[$79>>2]|0;
   FUNCTION_TABLE_vii[$80 & 63]($6,$77);
   $81 = HEAP32[$6>>2]|0;
   HEAP8[$__pat>>0]=$81&255;HEAP8[$__pat+1>>0]=($81>>8)&255;HEAP8[$__pat+2>>0]=($81>>16)&255;HEAP8[$__pat+3>>0]=$81>>24;
   $82 = HEAP32[$77>>2]|0;
   $83 = ((($82)) + 32|0);
   $84 = HEAP32[$83>>2]|0;
   FUNCTION_TABLE_vii[$84 & 63]($7,$77);
   $85 = HEAP8[$__sn>>0]|0;
   $86 = $85 & 1;
   $87 = ($86<<24>>24)==(0);
   if ($87) {
    HEAP8[$__sn>>0] = 0;
   } else {
    $88 = ((($__sn)) + 8|0);
    $89 = HEAP32[$88>>2]|0;
    HEAP32[$89>>2] = 0;
   }
   $90 = ((($__sn)) + 4|0);
   HEAP32[$90>>2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sn,0);
   ;HEAP32[$__sn>>2]=HEAP32[$7>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$7+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$7+8>>2]|0;
   HEAP32[$7>>2] = 0;
   $91 = ((($7)) + 4|0);
   HEAP32[$91>>2] = 0;
   $92 = ((($7)) + 8|0);
   HEAP32[$92>>2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($7);
  } else {
   $93 = ((($78)) + 40|0);
   $94 = HEAP32[$93>>2]|0;
   FUNCTION_TABLE_vii[$94 & 63]($8,$77);
   $95 = HEAP32[$8>>2]|0;
   HEAP8[$__pat>>0]=$95&255;HEAP8[$__pat+1>>0]=($95>>8)&255;HEAP8[$__pat+2>>0]=($95>>16)&255;HEAP8[$__pat+3>>0]=$95>>24;
   $96 = HEAP32[$77>>2]|0;
   $97 = ((($96)) + 28|0);
   $98 = HEAP32[$97>>2]|0;
   FUNCTION_TABLE_vii[$98 & 63]($9,$77);
   $99 = HEAP8[$__sn>>0]|0;
   $100 = $99 & 1;
   $101 = ($100<<24>>24)==(0);
   if ($101) {
    HEAP8[$__sn>>0] = 0;
   } else {
    $102 = ((($__sn)) + 8|0);
    $103 = HEAP32[$102>>2]|0;
    HEAP32[$103>>2] = 0;
   }
   $104 = ((($__sn)) + 4|0);
   HEAP32[$104>>2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sn,0);
   ;HEAP32[$__sn>>2]=HEAP32[$9>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$9+8>>2]|0;
   HEAP32[$9>>2] = 0;
   $105 = ((($9)) + 4|0);
   HEAP32[$105>>2] = 0;
   $106 = ((($9)) + 8|0);
   HEAP32[$106>>2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($9);
  }
  $107 = HEAP32[$77>>2]|0;
  $108 = ((($107)) + 12|0);
  $109 = HEAP32[$108>>2]|0;
  $110 = (FUNCTION_TABLE_ii[$109 & 63]($77)|0);
  HEAP32[$__dp>>2] = $110;
  $111 = HEAP32[$77>>2]|0;
  $112 = ((($111)) + 16|0);
  $113 = HEAP32[$112>>2]|0;
  $114 = (FUNCTION_TABLE_ii[$113 & 63]($77)|0);
  HEAP32[$__ts>>2] = $114;
  $115 = HEAP32[$77>>2]|0;
  $116 = ((($115)) + 20|0);
  $117 = HEAP32[$116>>2]|0;
  FUNCTION_TABLE_vii[$117 & 63]($10,$77);
  $118 = HEAP8[$__grp>>0]|0;
  $119 = $118 & 1;
  $120 = ($119<<24>>24)==(0);
  if ($120) {
   $124 = ((($__grp)) + 1|0);
   HEAP8[$124>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $121 = ((($__grp)) + 8|0);
   $122 = HEAP32[$121>>2]|0;
   HEAP8[$122>>0] = 0;
   $123 = ((($__grp)) + 4|0);
   HEAP32[$123>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp,0);
  ;HEAP32[$__grp>>2]=HEAP32[$10>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$10+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$10+8>>2]|0;
  HEAP32[$10>>2] = 0;
  $125 = ((($10)) + 4|0);
  HEAP32[$125>>2] = 0;
  $126 = ((($10)) + 8|0);
  HEAP32[$126>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
  $127 = HEAP32[$77>>2]|0;
  $128 = ((($127)) + 24|0);
  $129 = HEAP32[$128>>2]|0;
  FUNCTION_TABLE_vii[$129 & 63]($11,$77);
  $130 = HEAP8[$__sym>>0]|0;
  $131 = $130 & 1;
  $132 = ($131<<24>>24)==(0);
  if ($132) {
   HEAP8[$__sym>>0] = 0;
  } else {
   $133 = ((($__sym)) + 8|0);
   $134 = HEAP32[$133>>2]|0;
   HEAP32[$134>>2] = 0;
  }
  $135 = ((($__sym)) + 4|0);
  HEAP32[$135>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sym,0);
  ;HEAP32[$__sym>>2]=HEAP32[$11>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$11+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$11+8>>2]|0;
  HEAP32[$11>>2] = 0;
  $136 = ((($11)) + 4|0);
  HEAP32[$136>>2] = 0;
  $137 = ((($11)) + 8|0);
  HEAP32[$137>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
  $138 = HEAP32[$77>>2]|0;
  $139 = ((($138)) + 36|0);
  $140 = HEAP32[$139>>2]|0;
  $141 = (FUNCTION_TABLE_ii[$140 & 63]($77)|0);
  $storemerge = $141;
 }
 HEAP32[$__fd>>2] = $storemerge;
 STACKTOP = sp;return;
}
function __ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i($__mb,$__mi,$__me,$__flags,$__db,$__de,$__ct,$__neg,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd) {
 $__mb = $__mb|0;
 $__mi = $__mi|0;
 $__me = $__me|0;
 $__flags = $__flags|0;
 $__db = $__db|0;
 $__de = $__de|0;
 $__ct = $__ct|0;
 $__neg = $__neg|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__sn = $__sn|0;
 $__fd = $__fd|0;
 var $$ = 0, $$$0 = 0, $$0$i$i30 = 0, $$0$i$i954 = 0, $$01$i$i52 = 0, $$057 = 0, $$2 = 0, $$lcssa = 0, $$lcssa63 = 0, $$lcssa64 = 0, $$lcssa65 = 0, $$lcssa67 = 0, $$op = 0, $$pre29 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0;
 var $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0;
 var $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0;
 var $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0;
 var $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__d$0$lcssa = 0;
 var $__d$031 = 0, $__d$1$lcssa = 0, $__d$137 = 0, $__d$2 = 0, $__d$347 = 0, $__f$0$lcssa = 0, $__f$038 = 0, $__f$143 = 0, $__gl$0$ph = 0, $__gl$050 = 0, $__gl$1 = 0, $__ig$049 = 0, $__ig$1 = 0, $__me$promoted = 0, $__me$promoted66 = 0, $__ng$048 = 0, $__ng$1 = 0, $__p$056 = 0, $exitcond = 0, $or$cond = 0;
 var $scevgep$i = 0, $scevgep$i10 = 0, $scevgep$sum = 0, $scevgep26 = 0, $scevgep27$sum = 0, $scevgep28 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$__me>>2] = $__mb;
 $0 = ((($__sn)) + 4|0);
 $1 = ((($__sn)) + 8|0);
 $2 = ((($__sym)) + 4|0);
 $3 = $__flags & 512;
 $4 = ($3|0)==(0);
 $5 = ((($__sym)) + 8|0);
 $6 = ($__fd|0)>(0);
 $7 = ((($__grp)) + 4|0);
 $8 = ((($__grp)) + 8|0);
 $9 = ((($__grp)) + 1|0);
 $10 = ($__fd|0)>(0);
 $$057 = $__db;$__p$056 = 0;
 while(1) {
  $11 = (($__pat) + ($__p$056)|0);
  $12 = HEAP8[$11>>0]|0;
  $13 = $12 << 24 >> 24;
  switch ($13|0) {
  case 1:  {
   $15 = HEAP32[$__me>>2]|0;
   HEAP32[$__mi>>2] = $15;
   $16 = HEAP32[$__ct>>2]|0;
   $17 = ((($16)) + 44|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = (FUNCTION_TABLE_iii[$18 & 15]($__ct,32)|0);
   $20 = HEAP32[$__me>>2]|0;
   $21 = ((($20)) + 4|0);
   HEAP32[$__me>>2] = $21;
   HEAP32[$20>>2] = $19;
   $$2 = $$057;
   break;
  }
  case 3:  {
   $22 = HEAP8[$__sn>>0]|0;
   $23 = $22 & 1;
   $24 = ($23<<24>>24)==(0);
   $25 = HEAP32[$0>>2]|0;
   $26 = $22&255;
   $27 = $26 >>> 1;
   $28 = $24 ? $27 : $25;
   $29 = ($28|0)==(0);
   if ($29) {
    $$2 = $$057;
   } else {
    $30 = HEAP32[$1>>2]|0;
    $31 = $24 ? $0 : $30;
    $32 = HEAP32[$31>>2]|0;
    $33 = HEAP32[$__me>>2]|0;
    $34 = ((($33)) + 4|0);
    HEAP32[$__me>>2] = $34;
    HEAP32[$33>>2] = $32;
    $$2 = $$057;
   }
   break;
  }
  case 4:  {
   $53 = HEAP32[$__me>>2]|0;
   $54 = ((($$057)) + 4|0);
   $$$0 = $__neg ? $54 : $$057;
   $55 = ($$$0>>>0)<($__de>>>0);
   L8: do {
    if ($55) {
     $__d$031 = $$$0;
     while(1) {
      $56 = HEAP32[$__d$031>>2]|0;
      $57 = HEAP32[$__ct>>2]|0;
      $58 = ((($57)) + 12|0);
      $59 = HEAP32[$58>>2]|0;
      $60 = (FUNCTION_TABLE_iiii[$59 & 31]($__ct,2048,$56)|0);
      if (!($60)) {
       $__d$0$lcssa = $__d$031;
       break L8;
      }
      $61 = ((($__d$031)) + 4|0);
      $62 = ($61>>>0)<($__de>>>0);
      if ($62) {
       $__d$031 = $61;
      } else {
       $__d$0$lcssa = $61;
       break;
      }
     }
    } else {
     $__d$0$lcssa = $$$0;
    }
   } while(0);
   if ($6) {
    $63 = ($__d$0$lcssa>>>0)>($$$0>>>0);
    $64 = $63 & $10;
    if ($64) {
     $__me$promoted66 = HEAP32[$__me>>2]|0;
     $68 = $__me$promoted66;$__d$137 = $__d$0$lcssa;$__f$038 = $__fd;
     while(1) {
      $65 = ((($__d$137)) + -4|0);
      $66 = HEAP32[$65>>2]|0;
      $67 = ((($68)) + 4|0);
      HEAP32[$68>>2] = $66;
      $69 = (($__f$038) + -1)|0;
      $70 = ($65>>>0)>($$$0>>>0);
      $71 = ($__f$038|0)>(1);
      $72 = $70 & $71;
      if ($72) {
       $68 = $67;$__d$137 = $65;$__f$038 = $69;
      } else {
       $$lcssa63 = $65;$$lcssa64 = $69;$$lcssa65 = $71;$$lcssa67 = $67;
       break;
      }
     }
     HEAP32[$__me>>2] = $$lcssa67;
     $$lcssa = $$lcssa65;$__d$1$lcssa = $$lcssa63;$__f$0$lcssa = $$lcssa64;
    } else {
     $$lcssa = $10;$__d$1$lcssa = $__d$0$lcssa;$__f$0$lcssa = $__fd;
    }
    if ($$lcssa) {
     $73 = HEAP32[$__ct>>2]|0;
     $74 = ((($73)) + 44|0);
     $75 = HEAP32[$74>>2]|0;
     $76 = (FUNCTION_TABLE_iii[$75 & 15]($__ct,48)|0);
     $83 = $76;
    } else {
     $83 = 0;
    }
    $__me$promoted = HEAP32[$__me>>2]|0;
    $77 = ($__f$0$lcssa|0)<(0);
    $$op = $__f$0$lcssa ^ -1;
    $78 = $77 ? $$op : -1;
    $79 = (($__f$0$lcssa) + ($78))|0;
    $80 = ($__f$0$lcssa|0)>(0);
    if ($80) {
     $82 = $__me$promoted;$__f$143 = $__f$0$lcssa;
     while(1) {
      $81 = ((($82)) + 4|0);
      HEAP32[$82>>2] = $83;
      $84 = (($__f$143) + -1)|0;
      $85 = ($__f$143|0)>(1);
      if ($85) {
       $82 = $81;$__f$143 = $84;
      } else {
       break;
      }
     }
    }
    $scevgep$sum = (($79) + 2)|0;
    $scevgep26 = (($__me$promoted) + ($scevgep$sum<<2)|0);
    $scevgep27$sum = (($79) + 1)|0;
    $scevgep28 = (($__me$promoted) + ($scevgep27$sum<<2)|0);
    HEAP32[$__me>>2] = $scevgep26;
    HEAP32[$scevgep28>>2] = $__dp;
    $__d$2 = $__d$1$lcssa;
   } else {
    $__d$2 = $__d$0$lcssa;
   }
   $86 = ($__d$2|0)==($$$0|0);
   if ($86) {
    $87 = HEAP32[$__ct>>2]|0;
    $88 = ((($87)) + 44|0);
    $89 = HEAP32[$88>>2]|0;
    $90 = (FUNCTION_TABLE_iii[$89 & 15]($__ct,48)|0);
    $91 = HEAP32[$__me>>2]|0;
    $92 = ((($91)) + 4|0);
    HEAP32[$__me>>2] = $92;
    HEAP32[$91>>2] = $90;
    $130 = $92;
   } else {
    $93 = HEAP8[$__grp>>0]|0;
    $94 = $93 & 1;
    $95 = ($94<<24>>24)==(0);
    $96 = HEAP32[$7>>2]|0;
    $97 = $93&255;
    $98 = $97 >>> 1;
    $99 = $95 ? $98 : $96;
    $100 = ($99|0)==(0);
    if ($100) {
     $__gl$0$ph = -1;
    } else {
     $101 = HEAP32[$8>>2]|0;
     $102 = $95 ? $9 : $101;
     $103 = HEAP8[$102>>0]|0;
     $104 = $103 << 24 >> 24;
     $__gl$0$ph = $104;
    }
    $105 = ($__d$2|0)==($$$0|0);
    if (!($105)) {
     $__d$347 = $__d$2;$__gl$050 = $__gl$0$ph;$__ig$049 = 0;$__ng$048 = 0;
     while(1) {
      $106 = ($__ng$048|0)==($__gl$050|0);
      $107 = HEAP32[$__me>>2]|0;
      if ($106) {
       $108 = ((($107)) + 4|0);
       HEAP32[$__me>>2] = $108;
       HEAP32[$107>>2] = $__ts;
       $109 = (($__ig$049) + 1)|0;
       $110 = HEAP8[$__grp>>0]|0;
       $111 = $110 & 1;
       $112 = ($111<<24>>24)==(0);
       $113 = $110&255;
       $114 = $113 >>> 1;
       $115 = $112 ? $114 : $96;
       $116 = ($109>>>0)<($115>>>0);
       if ($116) {
        $117 = HEAP32[$8>>2]|0;
        $118 = $112 ? $9 : $117;
        $119 = (($118) + ($109)|0);
        $120 = HEAP8[$119>>0]|0;
        $121 = ($120<<24>>24)==(127);
        $122 = $120 << 24 >> 24;
        $$ = $121 ? -1 : $122;
        $126 = $108;$__gl$1 = $$;$__ig$1 = $109;$__ng$1 = 0;
       } else {
        $126 = $108;$__gl$1 = $__ng$048;$__ig$1 = $109;$__ng$1 = 0;
       }
      } else {
       $126 = $107;$__gl$1 = $__gl$050;$__ig$1 = $__ig$049;$__ng$1 = $__ng$048;
      }
      $123 = ((($__d$347)) + -4|0);
      $124 = HEAP32[$123>>2]|0;
      $125 = ((($126)) + 4|0);
      HEAP32[$__me>>2] = $125;
      HEAP32[$126>>2] = $124;
      $127 = (($__ng$1) + 1)|0;
      $128 = ($123|0)==($$$0|0);
      if ($128) {
       break;
      } else {
       $__d$347 = $123;$__gl$050 = $__gl$1;$__ig$049 = $__ig$1;$__ng$048 = $127;
      }
     }
    }
    $$pre29 = HEAP32[$__me>>2]|0;
    $130 = $$pre29;
   }
   $129 = ($53|0)==($130|0);
   if ($129) {
    $$2 = $$$0;
   } else {
    $131 = ((($130)) + -4|0);
    $132 = ($53>>>0)<($131>>>0);
    if ($132) {
     $$01$i$i52 = $53;$135 = $131;
     while(1) {
      $133 = HEAP32[$$01$i$i52>>2]|0;
      $134 = HEAP32[$135>>2]|0;
      HEAP32[$$01$i$i52>>2] = $134;
      HEAP32[$135>>2] = $133;
      $136 = ((($$01$i$i52)) + 4|0);
      $137 = ((($135)) + -4|0);
      $138 = ($136>>>0)<($137>>>0);
      if ($138) {
       $$01$i$i52 = $136;$135 = $137;
      } else {
       $$2 = $$$0;
       break;
      }
     }
    } else {
     $$2 = $$$0;
    }
   }
   break;
  }
  case 2:  {
   $35 = HEAP8[$__sym>>0]|0;
   $36 = $35 & 1;
   $37 = ($36<<24>>24)==(0);
   $38 = HEAP32[$2>>2]|0;
   $39 = $35&255;
   $40 = $39 >>> 1;
   $41 = $37 ? $40 : $38;
   $42 = ($41|0)==(0);
   $or$cond = $4 | $42;
   if ($or$cond) {
    $$2 = $$057;
   } else {
    $43 = HEAP32[$5>>2]|0;
    $44 = $37 ? $2 : $43;
    $45 = (($44) + ($41<<2)|0);
    $46 = HEAP32[$__me>>2]|0;
    $47 = ($41|0)==(0);
    if (!($47)) {
     $$0$i$i954 = $46;$49 = $44;
     while(1) {
      $48 = HEAP32[$49>>2]|0;
      HEAP32[$$0$i$i954>>2] = $48;
      $50 = ((($49)) + 4|0);
      $51 = ((($$0$i$i954)) + 4|0);
      $52 = ($50|0)==($45|0);
      if ($52) {
       break;
      } else {
       $$0$i$i954 = $51;$49 = $50;
      }
     }
    }
    $scevgep$i10 = (($46) + ($41<<2)|0);
    HEAP32[$__me>>2] = $scevgep$i10;
    $$2 = $$057;
   }
   break;
  }
  case 0:  {
   $14 = HEAP32[$__me>>2]|0;
   HEAP32[$__mi>>2] = $14;
   $$2 = $$057;
   break;
  }
  default: {
   $$2 = $$057;
  }
  }
  $139 = (($__p$056) + 1)|0;
  $exitcond = ($139|0)==(4);
  if ($exitcond) {
   break;
  } else {
   $$057 = $$2;$__p$056 = $139;
  }
 }
 $140 = HEAP8[$__sn>>0]|0;
 $141 = $140 & 1;
 $142 = ($141<<24>>24)==(0);
 $143 = HEAP32[$0>>2]|0;
 $144 = $140&255;
 $145 = $144 >>> 1;
 $146 = $142 ? $145 : $143;
 $147 = ($146>>>0)>(1);
 if ($147) {
  $148 = HEAP32[$1>>2]|0;
  $149 = $142 ? $0 : $148;
  $150 = ((($149)) + 4|0);
  $151 = (($149) + ($146<<2)|0);
  $152 = HEAP32[$__me>>2]|0;
  $153 = $150;
  $154 = $151;
  $155 = (($154) - ($153))|0;
  $156 = ($146|0)==(1);
  if (!($156)) {
   $$0$i$i30 = $152;$158 = $150;
   while(1) {
    $157 = HEAP32[$158>>2]|0;
    HEAP32[$$0$i$i30>>2] = $157;
    $159 = ((($158)) + 4|0);
    $160 = ((($$0$i$i30)) + 4|0);
    $161 = ($159|0)==($151|0);
    if ($161) {
     break;
    } else {
     $$0$i$i30 = $160;$158 = $159;
    }
   }
  }
  $162 = $155 >>> 2;
  $scevgep$i = (($152) + ($162<<2)|0);
  HEAP32[$__me>>2] = $scevgep$i;
 }
 $163 = $__flags & 176;
 if ((($163|0) == 32)) {
  $164 = HEAP32[$__me>>2]|0;
  HEAP32[$__mi>>2] = $164;
 } else if (!((($163|0) == 16))) {
  HEAP32[$__mi>>2] = $__mb;
 }
 return;
}
function __ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE($this,$__s,$__intl,$__iob,$__fl,$__digits) {
 $this = $this|0;
 $__s = $__s|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__digits = $__digits|0;
 var $$byval_copy = 0, $$pre15 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dp = 0, $__fd = 0, $__grp = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 480|0;
 $$byval_copy = sp + 468|0;
 $__loc = sp + 464|0;
 $__pat = sp + 472|0;
 $__dp = sp + 460|0;
 $__ts = sp + 456|0;
 $__grp = sp + 444|0;
 $__sym = sp + 432|0;
 $__sn = sp + 420|0;
 $__fd = sp + 416|0;
 $__mbuf = sp + 16|0;
 $__mi = sp + 8|0;
 $__me = sp + 4|0;
 $0 = sp;
 $1 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $1;
 $2 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6152)|0);
 $3 = HEAP8[$__digits>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 $6 = ((($__digits)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = $3&255;
 $9 = $8 >>> 1;
 $10 = $5 ? $9 : $7;
 $11 = ($10|0)==(0);
 if ($11) {
  $27 = 0;
 } else {
  $12 = ((($__digits)) + 8|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = $5 ? $6 : $13;
  $15 = HEAP32[$14>>2]|0;
  $16 = HEAP32[$2>>2]|0;
  $17 = ((($16)) + 44|0);
  $18 = HEAP32[$17>>2]|0;
  $19 = (FUNCTION_TABLE_iii[$18 & 15]($2,45)|0);
  $20 = ($15|0)==($19|0);
  $27 = $20;
 }
 HEAP32[$__grp>>2] = 0;
 $21 = ((($__grp)) + 4|0);
 HEAP32[$21>>2] = 0;
 $22 = ((($__grp)) + 8|0);
 HEAP32[$22>>2] = 0;
 HEAP32[$__sym>>2] = 0;
 $23 = ((($__sym)) + 4|0);
 HEAP32[$23>>2] = 0;
 $24 = ((($__sym)) + 8|0);
 HEAP32[$24>>2] = 0;
 HEAP32[$__sn>>2] = 0;
 $25 = ((($__sn)) + 4|0);
 HEAP32[$25>>2] = 0;
 $26 = ((($__sn)) + 8|0);
 HEAP32[$26>>2] = 0;
 __ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri($__intl,$27,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd);
 $28 = HEAP8[$__digits>>0]|0;
 $29 = $28 & 1;
 $30 = ($29<<24>>24)==(0);
 $31 = HEAP32[$6>>2]|0;
 $32 = $28&255;
 $33 = $32 >>> 1;
 $34 = $30 ? $33 : $31;
 $35 = HEAP32[$__fd>>2]|0;
 $36 = ($34|0)>($35|0);
 if ($36) {
  $37 = (($34) - ($35))|0;
  $38 = $37 << 1;
  $39 = HEAP8[$__sn>>0]|0;
  $40 = $39 & 1;
  $41 = ($40<<24>>24)==(0);
  $42 = ((($__sn)) + 4|0);
  $43 = HEAP32[$42>>2]|0;
  $44 = $39&255;
  $45 = $44 >>> 1;
  $46 = $41 ? $45 : $43;
  $47 = HEAP8[$__sym>>0]|0;
  $48 = $47 & 1;
  $49 = ($48<<24>>24)==(0);
  $50 = ((($__sym)) + 4|0);
  $51 = HEAP32[$50>>2]|0;
  $52 = $47&255;
  $53 = $52 >>> 1;
  $54 = $49 ? $53 : $51;
  $55 = $38 | 1;
  $56 = (($55) + ($35))|0;
  $57 = (($56) + ($46))|0;
  $58 = (($57) + ($54))|0;
  $78 = $58;
 } else {
  $59 = HEAP8[$__sn>>0]|0;
  $60 = $59 & 1;
  $61 = ($60<<24>>24)==(0);
  $62 = ((($__sn)) + 4|0);
  $63 = HEAP32[$62>>2]|0;
  $64 = $59&255;
  $65 = $64 >>> 1;
  $66 = $61 ? $65 : $63;
  $67 = HEAP8[$__sym>>0]|0;
  $68 = $67 & 1;
  $69 = ($68<<24>>24)==(0);
  $70 = ((($__sym)) + 4|0);
  $71 = HEAP32[$70>>2]|0;
  $72 = $67&255;
  $73 = $72 >>> 1;
  $74 = $69 ? $73 : $71;
  $75 = (($35) + 2)|0;
  $76 = (($75) + ($66))|0;
  $77 = (($76) + ($74))|0;
  $78 = $77;
 }
 $79 = ($78>>>0)>(100);
 if ($79) {
  $80 = $78 << 2;
  $81 = (_malloc($80)|0);
  $82 = $81;
  $83 = ($81|0)==(0|0);
  if ($83) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $101 = $82;$__mb$0 = $81;
  }
 } else {
  $101 = 0;$__mb$0 = $__mbuf;
 }
 $84 = ((($__iob)) + 4|0);
 $85 = HEAP32[$84>>2]|0;
 $86 = $28 & 1;
 $87 = ($86<<24>>24)==(0);
 $88 = ((($__digits)) + 8|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = $87 ? $6 : $89;
 $91 = $28&255;
 $92 = $91 >>> 1;
 $93 = $87 ? $92 : $31;
 $94 = (($90) + ($93<<2)|0);
 $95 = HEAP32[$__dp>>2]|0;
 $96 = HEAP32[$__ts>>2]|0;
 __ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i($__mb$0,$__mi,$__me,$85,$90,$94,$2,$27,$__pat,$95,$96,$__grp,$__sym,$__sn,$35);
 $97 = HEAP32[$__s>>2]|0;
 HEAP32[$0>>2] = $97;
 $98 = HEAP32[$__mi>>2]|0;
 $99 = HEAP32[$__me>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $100 = (__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__mb$0,$98,$99,$__iob,$__fl)|0);
 $102 = ($101|0)==(0);
 if ($102) {
  $104 = $1;
 } else {
  $103 = $101;
  _free($103);
  $$pre15 = HEAP32[$__loc>>2]|0;
  $104 = $$pre15;
 }
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sn);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
 (__ZNSt3__114__shared_count16__release_sharedEv($104)|0);
 STACKTOP = sp;return ($100|0);
}
function __ZNSt3__18messagesIcED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__18messagesIcED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE($this,$__nm,$0) {
 $this = $this|0;
 $__nm = $__nm|0;
 $0 = $0|0;
 var $$ = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[$__nm>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 $4 = ((($__nm)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($__nm)) + 1|0);
 $7 = $3 ? $6 : $5;
 $8 = (_catopen(($7|0),1)|0);
 $9 = $8;
 $not$ = ($8|0)!=((-1)|0);
 $10 = $not$&1;
 $$ = $9 >>> $10;
 return ($$|0);
}
function __ZNKSt3__18messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($agg$result,$this,$__c,$__set,$__msgid,$__dflt) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__c = $__c|0;
 $__set = $__set|0;
 $__msgid = $__msgid|0;
 $__dflt = $__dflt|0;
 var $$0$i12 = 0, $$0$i614 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $__ndflt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__ndflt = sp;
 HEAP32[$__ndflt>>2] = 0;
 $0 = ((($__ndflt)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($__ndflt)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = HEAP8[$__dflt>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 $5 = ((($__dflt)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($__dflt)) + 1|0);
 $8 = $4 ? $7 : $6;
 $9 = ((($__dflt)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = $2&255;
 $12 = $11 >>> 1;
 $13 = $4 ? $12 : $10;
 $14 = (($8) + ($13)|0);
 $15 = ($13|0)>(0);
 if ($15) {
  $$0$i614 = $8;
  while(1) {
   $16 = HEAP8[$$0$i614>>0]|0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($__ndflt,$16);
   $17 = ((($$0$i614)) + 1|0);
   $18 = ($17>>>0)<($14>>>0);
   if ($18) {
    $$0$i614 = $17;
   } else {
    break;
   }
  }
 }
 $19 = ($__c|0)==(-1);
 $20 = $__c << 1;
 $21 = $20;
 $22 = $19 ? (-1) : $21;
 $23 = HEAP8[$__ndflt>>0]|0;
 $24 = $23 & 1;
 $25 = ($24<<24>>24)==(0);
 $26 = ((($__ndflt)) + 8|0);
 $27 = HEAP32[$26>>2]|0;
 $28 = ((($__ndflt)) + 1|0);
 $29 = $25 ? $28 : $27;
 $30 = (_catgets(($22|0),($__set|0),($__msgid|0),($29|0))|0);
 HEAP32[$agg$result>>2] = 0;
 $31 = ((($agg$result)) + 4|0);
 HEAP32[$31>>2] = 0;
 $32 = ((($agg$result)) + 8|0);
 HEAP32[$32>>2] = 0;
 $33 = (_strlen(($30|0))|0);
 $34 = (($30) + ($33)|0);
 $35 = ($33|0)>(0);
 if ($35) {
  $$0$i12 = $30;
  while(1) {
   $36 = HEAP8[$$0$i12>>0]|0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($agg$result,$36);
   $37 = ((($$0$i12)) + 1|0);
   $38 = ($37>>>0)<($34>>>0);
   if ($38) {
    $$0$i12 = $37;
   } else {
    break;
   }
  }
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__ndflt);
 STACKTOP = sp;return;
}
function __ZNKSt3__18messagesIcE8do_closeEi($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__c|0)==(-1);
 $1 = $__c << 1;
 $2 = $1;
 $3 = $0 ? (-1) : $2;
 (_catclose(($3|0))|0);
 return;
}
function __ZNSt3__18messagesIwED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__18messagesIwED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE($this,$__nm,$0) {
 $this = $this|0;
 $__nm = $__nm|0;
 $0 = $0|0;
 var $$ = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[$__nm>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 $4 = ((($__nm)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($__nm)) + 1|0);
 $7 = $3 ? $6 : $5;
 $8 = (_catopen(($7|0),1)|0);
 $9 = $8;
 $not$ = ($8|0)!=((-1)|0);
 $10 = $not$&1;
 $$ = $9 >>> $10;
 return ($$|0);
}
function __ZNKSt3__18messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE($agg$result,$this,$__c,$__set,$__msgid,$__dflt) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__c = $__c|0;
 $__set = $__set|0;
 $__msgid = $__msgid|0;
 $__dflt = $__dflt|0;
 var $$0$i15 = 0, $$0$i922 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $8 = 0, $9 = 0, $__bn$i7 = 0, $__buf$i6 = 0, $__mb$i5 = 0, $__ndflt = 0, $__p$0$i1018 = 0, $__p$0$i14 = 0;
 var $__wn$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0;
 $__mb$i5 = sp + 168|0;
 $__buf$i6 = sp + 40|0;
 $__bn$i7 = sp + 32|0;
 $__wn$i = sp + 28|0;
 $__ndflt = sp + 16|0;
 $0 = sp + 8|0;
 $1 = sp;
 HEAP32[$__ndflt>>2] = 0;
 $2 = ((($__ndflt)) + 4|0);
 HEAP32[$2>>2] = 0;
 $3 = ((($__ndflt)) + 8|0);
 HEAP32[$3>>2] = 0;
 $4 = ((($0)) + 4|0);
 HEAP32[$4>>2] = 0;
 HEAP32[$0>>2] = (6960);
 $5 = HEAP8[$__dflt>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 $8 = ((($__dflt)) + 8|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($__dflt)) + 4|0);
 $11 = $7 ? $10 : $9;
 $12 = HEAP32[$10>>2]|0;
 $13 = $5&255;
 $14 = $13 >>> 1;
 $15 = $7 ? $14 : $12;
 $16 = (($11) + ($15<<2)|0);
 $17 = ((($__buf$i6)) + 32|0);
 $18 = ($15|0)>(0);
 if ($18) {
  $$0$i922 = $11;
  while(1) {
   HEAP32[$__wn$i>>2] = $$0$i922;
   $19 = HEAP32[$0>>2]|0;
   $20 = ((($19)) + 12|0);
   $21 = HEAP32[$20>>2]|0;
   $22 = (FUNCTION_TABLE_iiiiiiiii[$21 & 15]($0,$__mb$i5,$$0$i922,$16,$__wn$i,$__buf$i6,$17,$__bn$i7)|0);
   $23 = HEAP32[$__bn$i7>>2]|0;
   $24 = ($__buf$i6>>>0)<($23>>>0);
   if ($24) {
    $__p$0$i1018 = $__buf$i6;
    while(1) {
     $25 = HEAP8[$__p$0$i1018>>0]|0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($__ndflt,$25);
     $26 = ((($__p$0$i1018)) + 1|0);
     $27 = HEAP32[$__bn$i7>>2]|0;
     $28 = ($26>>>0)<($27>>>0);
     if ($28) {
      $__p$0$i1018 = $26;
     } else {
      break;
     }
    }
   }
   $29 = HEAP32[$__wn$i>>2]|0;
   $30 = ($29>>>0)<($16>>>0);
   $31 = ($22|0)!=(2);
   $32 = $31 & $30;
   if ($32) {
    $$0$i922 = $29;
   } else {
    break;
   }
  }
 }
 $33 = ($__c|0)==(-1);
 $34 = $__c << 1;
 $35 = $34;
 $36 = $33 ? (-1) : $35;
 $37 = HEAP8[$__ndflt>>0]|0;
 $38 = $37 & 1;
 $39 = ($38<<24>>24)==(0);
 $40 = ((($__ndflt)) + 8|0);
 $41 = HEAP32[$40>>2]|0;
 $42 = ((($__ndflt)) + 1|0);
 $43 = $39 ? $42 : $41;
 $44 = (_catgets(($36|0),($__set|0),($__msgid|0),($43|0))|0);
 HEAP32[$agg$result>>2] = 0;
 $45 = ((($agg$result)) + 4|0);
 HEAP32[$45>>2] = 0;
 $46 = ((($agg$result)) + 8|0);
 HEAP32[$46>>2] = 0;
 $47 = ((($1)) + 4|0);
 HEAP32[$47>>2] = 0;
 HEAP32[$1>>2] = (7064);
 $48 = (_strlen(($44|0))|0);
 $49 = (($44) + ($48)|0);
 $50 = $49;
 $51 = ((($__buf$i6)) + 128|0);
 $52 = ($48|0)>(0);
 if ($52) {
  $$0$i15 = $44;
  while(1) {
   HEAP32[$__wn$i>>2] = $$0$i15;
   $53 = HEAP32[$1>>2]|0;
   $54 = ((($53)) + 16|0);
   $55 = HEAP32[$54>>2]|0;
   $56 = $$0$i15;
   $57 = (($50) - ($56))|0;
   $58 = ($57|0)>(32);
   $59 = ((($$0$i15)) + 32|0);
   $60 = $58 ? $59 : $49;
   $61 = (FUNCTION_TABLE_iiiiiiiii[$55 & 15]($1,$__mb$i5,$$0$i15,$60,$__wn$i,$__buf$i6,$51,$__bn$i7)|0);
   $62 = HEAP32[$__bn$i7>>2]|0;
   $63 = ($__buf$i6>>>0)<($62>>>0);
   if ($63) {
    $__p$0$i14 = $__buf$i6;
    while(1) {
     $64 = HEAP32[$__p$0$i14>>2]|0;
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($agg$result,$64);
     $65 = ((($__p$0$i14)) + 4|0);
     $66 = HEAP32[$__bn$i7>>2]|0;
     $67 = ($65>>>0)<($66>>>0);
     if ($67) {
      $__p$0$i14 = $65;
     } else {
      break;
     }
    }
   }
   $68 = HEAP32[$__wn$i>>2]|0;
   $69 = ($68>>>0)<($49>>>0);
   $70 = ($61|0)!=(2);
   $71 = $70 & $69;
   if ($71) {
    $$0$i15 = $68;
   } else {
    break;
   }
  }
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__ndflt);
 STACKTOP = sp;return;
}
function __ZNKSt3__18messagesIwE8do_closeEi($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__c|0)==(-1);
 $1 = $__c << 1;
 $2 = $1;
 $3 = $0 ? (-1) : $2;
 (_catclose(($3|0))|0);
 return;
}
function __ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___assert_fail((9504|0),(9528|0),314,(9616|0));
 // unreachable;
}
function __ZNSt3__16locale5__impC2Ej($this,$refs) {
 $this = $this|0;
 $refs = $refs|0;
 var $$lcssa = 0, $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($refs) + -1)|0;
 $1 = ((($this)) + 4|0);
 HEAP32[$1>>2] = $0;
 HEAP32[$this>>2] = (6128);
 $2 = ((($this)) + 8|0);
 __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEEC2Ej($2,28);
 $3 = ((($this)) + 144|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($3,9136,1);
 $4 = HEAP32[$2>>2]|0;
 $5 = ((($this)) + 12|0);
 $$pre$i$i$i = HEAP32[$5>>2]|0;
 $6 = ($$pre$i$i$i|0)==($4|0);
 if (!($6)) {
  $8 = $$pre$i$i$i;
  while(1) {
   $7 = ((($8)) + -4|0);
   $9 = ($7|0)==($4|0);
   if ($9) {
    $$lcssa = $7;
    break;
   } else {
    $8 = $7;
   }
  }
  HEAP32[$5>>2] = $$lcssa;
 }
 HEAP32[(9644)>>2] = 0;
 HEAP32[9640>>2] = (4984);
 __ZNSt3__16locale5__imp7installINS_7collateIcEEEEvPT_($this,9640);
 HEAP32[(9652)>>2] = 0;
 HEAP32[9648>>2] = (5024);
 __ZNSt3__16locale5__imp7installINS_7collateIwEEEEvPT_($this,9648);
 __ZNSt3__15ctypeIcEC2EPKtbj(9656,0,0,1);
 __ZNSt3__16locale5__imp7installINS_5ctypeIcEEEEvPT_($this,9656);
 HEAP32[(9676)>>2] = 0;
 HEAP32[9672>>2] = (6472);
 __ZNSt3__16locale5__imp7installINS_5ctypeIwEEEEvPT_($this,9672);
 HEAP32[(9684)>>2] = 0;
 HEAP32[9680>>2] = (6600);
 __ZNSt3__16locale5__imp7installINS_7codecvtIcc11__mbstate_tEEEEvPT_($this,9680);
 HEAP32[(9692)>>2] = 0;
 HEAP32[9688>>2] = (6248);
 $10 = (__ZNSt3__16__clocEv()|0);
 HEAP32[(9696)>>2] = $10;
 __ZNSt3__16locale5__imp7installINS_7codecvtIwc11__mbstate_tEEEEvPT_($this,9688);
 HEAP32[(9708)>>2] = 0;
 HEAP32[9704>>2] = (6720);
 __ZNSt3__16locale5__imp7installINS_7codecvtIDsc11__mbstate_tEEEEvPT_($this,9704);
 HEAP32[(9716)>>2] = 0;
 HEAP32[9712>>2] = (6840);
 __ZNSt3__16locale5__imp7installINS_7codecvtIDic11__mbstate_tEEEEvPT_($this,9712);
 __ZNSt3__18numpunctIcEC2Ej(9720,1);
 __ZNSt3__16locale5__imp7installINS_8numpunctIcEEEEvPT_($this,9720);
 __ZNSt3__18numpunctIwEC2Ej(9744,1);
 __ZNSt3__16locale5__imp7installINS_8numpunctIwEEEEvPT_($this,9744);
 HEAP32[(9780)>>2] = 0;
 HEAP32[9776>>2] = (5064);
 __ZNSt3__16locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,9776);
 HEAP32[(9788)>>2] = 0;
 HEAP32[9784>>2] = (5176);
 __ZNSt3__16locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,9784);
 HEAP32[(9796)>>2] = 0;
 HEAP32[9792>>2] = (5248);
 __ZNSt3__16locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,9792);
 HEAP32[(9804)>>2] = 0;
 HEAP32[9800>>2] = (5312);
 __ZNSt3__16locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,9800);
 HEAP32[(9812)>>2] = 0;
 HEAP32[9808>>2] = (5632);
 __ZNSt3__16locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_($this,9808);
 HEAP32[(9820)>>2] = 0;
 HEAP32[9816>>2] = (5696);
 __ZNSt3__16locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_($this,9816);
 HEAP32[(9828)>>2] = 0;
 HEAP32[9824>>2] = (5760);
 __ZNSt3__16locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_($this,9824);
 HEAP32[(9836)>>2] = 0;
 HEAP32[9832>>2] = (5824);
 __ZNSt3__16locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_($this,9832);
 HEAP32[(9844)>>2] = 0;
 HEAP32[9840>>2] = (5888);
 __ZNSt3__16locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,9840);
 HEAP32[(9852)>>2] = 0;
 HEAP32[9848>>2] = (5928);
 __ZNSt3__16locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,9848);
 HEAP32[(9860)>>2] = 0;
 HEAP32[9856>>2] = (5968);
 __ZNSt3__16locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,9856);
 HEAP32[(9868)>>2] = 0;
 HEAP32[9864>>2] = (6008);
 __ZNSt3__16locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,9864);
 HEAP32[(9876)>>2] = 0;
 HEAP32[9872>>2] = (5376);
 HEAP32[(9880)>>2] = (5424);
 __ZNSt3__16locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,9872);
 HEAP32[(9892)>>2] = 0;
 HEAP32[9888>>2] = (5472);
 HEAP32[(9896)>>2] = (5520);
 __ZNSt3__16locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,9888);
 HEAP32[(9908)>>2] = 0;
 HEAP32[9904>>2] = (6408);
 $11 = (__ZNSt3__16__clocEv()|0);
 HEAP32[(9912)>>2] = $11;
 HEAP32[9904>>2] = (5568);
 __ZNSt3__16locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,9904);
 HEAP32[(9924)>>2] = 0;
 HEAP32[9920>>2] = (6408);
 $12 = (__ZNSt3__16__clocEv()|0);
 HEAP32[(9928)>>2] = $12;
 HEAP32[9920>>2] = (5600);
 __ZNSt3__16locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,9920);
 HEAP32[(9940)>>2] = 0;
 HEAP32[9936>>2] = (6048);
 __ZNSt3__16locale5__imp7installINS_8messagesIcEEEEvPT_($this,9936);
 HEAP32[(9948)>>2] = 0;
 HEAP32[9944>>2] = (6088);
 __ZNSt3__16locale5__imp7installINS_8messagesIwEEEEvPT_($this,9944);
 return;
}
function __ZNSt3__16locale7classicEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[9952>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((9952|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   (__ZNSt3__16locale5__imp12make_classicEv()|0);
   HEAP32[9968>>2] = 9960;
   ___cxa_guard_release((9952|0));
  }
 }
 $4 = HEAP32[9968>>2]|0;
 return ($4|0);
}
function __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$id) {
 $this = $this|0;
 $f = $f|0;
 $id = $id|0;
 var $$pre = 0, $$pre1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__114__shared_count12__add_sharedEv($f);
 $0 = ((($this)) + 8|0);
 $1 = ((($this)) + 12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$0>>2]|0;
 $4 = $2;
 $5 = $3;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 2;
 $8 = ($7>>>0)>($id>>>0);
 if ($8) {
  $11 = $3;
 } else {
  $9 = (($id) + 1)|0;
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE6resizeEj($0,$9);
  $$pre = HEAP32[$0>>2]|0;
  $11 = $$pre;
 }
 $10 = (($11) + ($id<<2)|0);
 $12 = HEAP32[$10>>2]|0;
 $13 = ($12|0)==(0|0);
 if ($13) {
  $15 = $11;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($12)|0);
  $$pre1 = HEAP32[$0>>2]|0;
  $15 = $$pre1;
 }
 $14 = (($15) + ($id<<2)|0);
 HEAP32[$14>>2] = $f;
 return;
}
function __ZNSt3__16locale5__impD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i$01 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (6128);
 $0 = ((($this)) + 8|0);
 $1 = ((($this)) + 12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$0>>2]|0;
 $4 = ($2|0)==($3|0);
 if (!($4)) {
  $6 = $3;$i$01 = 0;
  while(1) {
   $5 = (($6) + ($i$01<<2)|0);
   $7 = HEAP32[$5>>2]|0;
   $8 = ($7|0)==(0|0);
   if (!($8)) {
    (__ZNSt3__114__shared_count16__release_sharedEv($7)|0);
   }
   $9 = (($i$01) + 1)|0;
   $10 = HEAP32[$1>>2]|0;
   $11 = HEAP32[$0>>2]|0;
   $12 = $10;
   $13 = $11;
   $14 = (($12) - ($13))|0;
   $15 = $14 >> 2;
   $16 = ($9>>>0)<($15>>>0);
   if ($16) {
    $6 = $11;$i$01 = $9;
   } else {
    break;
   }
  }
 }
 $17 = ((($this)) + 144|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
 __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($0);
 return;
}
function __ZNSt3__16locale5__impD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__16locale5__impD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt3__16locale5__imp12make_classicEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__16locale5__impC2Ej(9976,1);
 HEAP32[9960>>2] = 9976;
 return (9960|0);
}
function __ZNSt3__16locale5__imp11make_globalEv() {
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale7classicEv()|0);
 $1 = HEAP32[$0>>2]|0;
 HEAP32[10136>>2] = $1;
 __ZNSt3__114__shared_count12__add_sharedEv($1);
 return (10136|0);
}
function __ZNSt3__16locale8__globalEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[10144>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((10144|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   (__ZNSt3__16locale5__imp11make_globalEv()|0);
   HEAP32[10152>>2] = 10136;
   ___cxa_guard_release((10144|0));
  }
 }
 $4 = HEAP32[10152>>2]|0;
 return ($4|0);
}
function __ZNSt3__16localeC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale8__globalEv()|0);
 $1 = HEAP32[$0>>2]|0;
 HEAP32[$this>>2] = $1;
 __ZNSt3__114__shared_count12__add_sharedEv($1);
 return;
}
function __ZNSt3__16localeC2ERKS0_($this,$l) {
 $this = $this|0;
 $l = $l|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$l>>2]|0;
 HEAP32[$this>>2] = $0;
 __ZNSt3__114__shared_count12__add_sharedEv($0);
 return;
}
function __ZNSt3__16localeD2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($0)|0);
 return;
}
function __ZNSt3__16locale2id5__getEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $__p$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__p$i = sp;
 $0 = HEAP32[$this>>2]|0;
 $1 = ($0|0)==(-1);
 if (!($1)) {
  HEAP32[$__p$i>>2] = $this;
  $2 = ((($__p$i)) + 4|0);
  HEAP32[$2>>2] = (108);
  $3 = ((($__p$i)) + 8|0);
  HEAP32[$3>>2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E($this,$__p$i,109);
 }
 $4 = ((($this)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (($5) + -1)|0;
 STACKTOP = sp;return ($6|0);
}
function __ZNKSt3__16locale9use_facetERNS0_2idE($this,$x) {
 $this = $this|0;
 $x = $x|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (__ZNSt3__16locale2id5__getEv($x)|0);
 $2 = ((($0)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (($3) + ($1<<2)|0);
 $5 = HEAP32[$4>>2]|0;
 return ($5|0);
}
function __ZNSt3__16locale5facetD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNSt3__16locale5facet16__on_zero_sharedEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($this|0)==(0|0);
 if (!($0)) {
  $1 = HEAP32[$this>>2]|0;
  $2 = ((($1)) + 4|0);
  $3 = HEAP32[$2>>2]|0;
  FUNCTION_TABLE_vi[$3 & 127]($this);
 }
 return;
}
function __ZNSt3__16locale2id6__initEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[6144>>2]|0;HEAP32[6144>>2] = (($0+1)|0);
 $1 = (($0) + 1)|0;
 $2 = ((($this)) + 4|0);
 HEAP32[$2>>2] = $1;
 return;
}
function __ZNSt3__15ctypeIwED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__15ctypeIwE5do_isEtw($this,$m,$c) {
 $this = $this|0;
 $m = $m|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii = ($c>>>0)<(128);
 if ($isascii) {
  $0 = (___ctype_b_loc()|0);
  $1 = HEAP32[$0>>2]|0;
  $2 = (($1) + ($c<<1)|0);
  $3 = HEAP16[$2>>1]|0;
  $4 = $3 & $m;
  $5 = ($4<<16>>16)!=(0);
  $6 = $5;
 } else {
  $6 = 0;
 }
 return ($6|0);
}
function __ZNKSt3__15ctypeIwE5do_isEPKwS3_Pt($this,$low,$high,$vec) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $vec = $vec|0;
 var $$015 = 0, $$06 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii = 0, $low3 = 0, $scevgep = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $low3 = $low;
 $0 = $high;
 $1 = (($0) - ($low3))|0;
 $2 = $1 >>> 2;
 $3 = ($low|0)==($high|0);
 if (!($3)) {
  $$015 = $low;$$06 = $vec;
  while(1) {
   $4 = HEAP32[$$015>>2]|0;
   $isascii = ($4>>>0)<(128);
   if ($isascii) {
    $5 = (___ctype_b_loc()|0);
    $6 = HEAP32[$5>>2]|0;
    $7 = (($6) + ($4<<1)|0);
    $8 = HEAP16[$7>>1]|0;
    $9 = $8&65535;
    $11 = $9;
   } else {
    $11 = 0;
   }
   $10 = $11&65535;
   HEAP16[$$06>>1] = $10;
   $12 = ((($$015)) + 4|0);
   $13 = ((($$06)) + 2|0);
   $14 = ($12|0)==($high|0);
   if ($14) {
    break;
   } else {
    $$015 = $12;$$06 = $13;
   }
  }
 }
 $scevgep = (($low) + ($2<<2)|0);
 return ($scevgep|0);
}
function __ZNKSt3__15ctypeIwE10do_scan_isEtPKwS3_($this,$m,$low,$high) {
 $this = $this|0;
 $m = $m|0;
 $low = $low|0;
 $high = $high|0;
 var $$0$lcssa = 0, $$01 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 L1: do {
  if ($0) {
   $$0$lcssa = $high;
  } else {
   $$01 = $low;
   while(1) {
    $1 = HEAP32[$$01>>2]|0;
    $isascii = ($1>>>0)<(128);
    if ($isascii) {
     $2 = (___ctype_b_loc()|0);
     $3 = HEAP32[$2>>2]|0;
     $4 = (($3) + ($1<<1)|0);
     $5 = HEAP16[$4>>1]|0;
     $6 = $5 & $m;
     $7 = ($6<<16>>16)==(0);
     if (!($7)) {
      $$0$lcssa = $$01;
      break L1;
     }
    }
    $8 = ((($$01)) + 4|0);
    $9 = ($8|0)==($high|0);
    if ($9) {
     $$0$lcssa = $high;
     break;
    } else {
     $$01 = $8;
    }
   }
  }
 } while(0);
 return ($$0$lcssa|0);
}
function __ZNKSt3__15ctypeIwE11do_scan_notEtPKwS3_($this,$m,$low,$high) {
 $this = $this|0;
 $m = $m|0;
 $low = $low|0;
 $high = $high|0;
 var $$0$lcssa = 0, $$01 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 L1: do {
  if ($0) {
   $$0$lcssa = $high;
  } else {
   $$01 = $low;
   while(1) {
    $1 = HEAP32[$$01>>2]|0;
    $isascii = ($1>>>0)<(128);
    if (!($isascii)) {
     $$0$lcssa = $$01;
     break L1;
    }
    $2 = (___ctype_b_loc()|0);
    $3 = HEAP32[$2>>2]|0;
    $4 = (($3) + ($1<<1)|0);
    $5 = HEAP16[$4>>1]|0;
    $6 = $5 & $m;
    $7 = ($6<<16>>16)==(0);
    if ($7) {
     $$0$lcssa = $$01;
     break L1;
    }
    $8 = ((($$01)) + 4|0);
    $9 = ($8|0)==($high|0);
    if ($9) {
     $$0$lcssa = $high;
     break;
    } else {
     $$01 = $8;
    }
   }
  }
 } while(0);
 return ($$0$lcssa|0);
}
function __ZNKSt3__15ctypeIwE10do_toupperEw($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii = ($c>>>0)<(128);
 if ($isascii) {
  $0 = (___ctype_toupper_loc()|0);
  $1 = HEAP32[$0>>2]|0;
  $2 = (($1) + ($c<<2)|0);
  $3 = HEAP32[$2>>2]|0;
  $4 = $3;
 } else {
  $4 = $c;
 }
 return ($4|0);
}
function __ZNKSt3__15ctypeIwE10do_toupperEPwPKw($this,$low,$high) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 var $$04 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii = 0, $low2 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $low2 = $low;
 $0 = $high;
 $1 = (($0) - ($low2))|0;
 $2 = $1 >>> 2;
 $3 = ($low|0)==($high|0);
 if (!($3)) {
  $$04 = $low;
  while(1) {
   $4 = HEAP32[$$04>>2]|0;
   $isascii = ($4>>>0)<(128);
   if ($isascii) {
    $5 = (___ctype_toupper_loc()|0);
    $6 = HEAP32[$5>>2]|0;
    $7 = (($6) + ($4<<2)|0);
    $8 = HEAP32[$7>>2]|0;
    $9 = $8;
   } else {
    $9 = $4;
   }
   HEAP32[$$04>>2] = $9;
   $10 = ((($$04)) + 4|0);
   $11 = ($10|0)==($high|0);
   if ($11) {
    break;
   } else {
    $$04 = $10;
   }
  }
 }
 $scevgep = (($low) + ($2<<2)|0);
 return ($scevgep|0);
}
function __ZNKSt3__15ctypeIwE10do_tolowerEw($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii = ($c>>>0)<(128);
 if ($isascii) {
  $0 = (___ctype_tolower_loc()|0);
  $1 = HEAP32[$0>>2]|0;
  $2 = (($1) + ($c<<2)|0);
  $3 = HEAP32[$2>>2]|0;
  $4 = $3;
 } else {
  $4 = $c;
 }
 return ($4|0);
}
function __ZNKSt3__15ctypeIwE10do_tolowerEPwPKw($this,$low,$high) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 var $$04 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii = 0, $low2 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $low2 = $low;
 $0 = $high;
 $1 = (($0) - ($low2))|0;
 $2 = $1 >>> 2;
 $3 = ($low|0)==($high|0);
 if (!($3)) {
  $$04 = $low;
  while(1) {
   $4 = HEAP32[$$04>>2]|0;
   $isascii = ($4>>>0)<(128);
   if ($isascii) {
    $5 = (___ctype_tolower_loc()|0);
    $6 = HEAP32[$5>>2]|0;
    $7 = (($6) + ($4<<2)|0);
    $8 = HEAP32[$7>>2]|0;
    $9 = $8;
   } else {
    $9 = $4;
   }
   HEAP32[$$04>>2] = $9;
   $10 = ((($$04)) + 4|0);
   $11 = ($10|0)==($high|0);
   if ($11) {
    break;
   } else {
    $$04 = $10;
   }
  }
 }
 $scevgep = (($low) + ($2<<2)|0);
 return ($scevgep|0);
}
function __ZNKSt3__15ctypeIwE8do_widenEc($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $c << 24 >> 24;
 return ($0|0);
}
function __ZNKSt3__15ctypeIwE8do_widenEPKcS3_Pw($this,$low,$high,$dest) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $dest = $dest|0;
 var $$012 = 0, $$03 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 if (!($0)) {
  $$012 = $low;$$03 = $dest;
  while(1) {
   $1 = HEAP8[$$012>>0]|0;
   $2 = $1 << 24 >> 24;
   HEAP32[$$03>>2] = $2;
   $3 = ((($$012)) + 1|0);
   $4 = ((($$03)) + 4|0);
   $5 = ($3|0)==($high|0);
   if ($5) {
    break;
   } else {
    $$012 = $3;$$03 = $4;
   }
  }
 }
 return ($high|0);
}
function __ZNKSt3__15ctypeIwE9do_narrowEwc($this,$c,$dfault) {
 $this = $this|0;
 $c = $c|0;
 $dfault = $dfault|0;
 var $$0 = 0, $0 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii = ($c>>>0)<(128);
 $0 = $c&255;
 $$0 = $isascii ? $0 : $dfault;
 return ($$0|0);
}
function __ZNKSt3__15ctypeIwE9do_narrowEPKwS3_cPc($this,$low,$high,$dfault,$dest) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $dfault = $dfault|0;
 $dest = $dest|0;
 var $$015 = 0, $$06 = 0, $$dfault = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $isascii = 0, $low3 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $low3 = $low;
 $0 = $high;
 $1 = (($0) - ($low3))|0;
 $2 = $1 >>> 2;
 $3 = ($low|0)==($high|0);
 if (!($3)) {
  $$015 = $low;$$06 = $dest;
  while(1) {
   $4 = HEAP32[$$015>>2]|0;
   $isascii = ($4>>>0)<(128);
   $5 = $4&255;
   $$dfault = $isascii ? $5 : $dfault;
   HEAP8[$$06>>0] = $$dfault;
   $6 = ((($$015)) + 4|0);
   $7 = ((($$06)) + 1|0);
   $8 = ($6|0)==($high|0);
   if ($8) {
    break;
   } else {
    $$015 = $6;$$06 = $7;
   }
  }
 }
 $scevgep = (($low) + ($2<<2)|0);
 return ($scevgep|0);
}
function __ZNSt3__15ctypeIcEC2EPKtbj($this,$tab,$del,$refs) {
 $this = $this|0;
 $tab = $tab|0;
 $del = $del|0;
 $refs = $refs|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($refs) + -1)|0;
 $1 = ((($this)) + 4|0);
 HEAP32[$1>>2] = $0;
 HEAP32[$this>>2] = (6176);
 $2 = ((($this)) + 8|0);
 HEAP32[$2>>2] = $tab;
 $3 = ((($this)) + 12|0);
 $4 = $del&1;
 HEAP8[$3>>0] = $4;
 $5 = ($tab|0)==(0|0);
 if ($5) {
  $6 = (___ctype_b_loc()|0);
  $7 = HEAP32[$6>>2]|0;
  HEAP32[$2>>2] = $7;
 }
 return;
}
function __ZNSt3__15ctypeIcED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (6176);
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 if (!($2)) {
  $3 = ((($this)) + 12|0);
  $4 = HEAP8[$3>>0]|0;
  $5 = ($4<<24>>24)==(0);
  if (!($5)) {
   __ZdaPv($1);
  }
 }
 return;
}
function __ZNSt3__15ctypeIcED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__15ctypeIcED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__15ctypeIcE10do_toupperEc($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii1 = ($c<<24>>24)>(-1);
 if ($isascii1) {
  $0 = $c&255;
  $1 = (___ctype_toupper_loc()|0);
  $2 = HEAP32[$1>>2]|0;
  $3 = (($2) + ($0<<2)|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = $4&255;
  $6 = $5;
 } else {
  $6 = $c;
 }
 return ($6|0);
}
function __ZNKSt3__15ctypeIcE10do_toupperEPcPKc($this,$low,$high) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 var $$02 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 if (!($0)) {
  $$02 = $low;
  while(1) {
   $1 = HEAP8[$$02>>0]|0;
   $isascii1 = ($1<<24>>24)>(-1);
   if ($isascii1) {
    $2 = $1 << 24 >> 24;
    $3 = (___ctype_toupper_loc()|0);
    $4 = HEAP32[$3>>2]|0;
    $5 = (($4) + ($2<<2)|0);
    $6 = HEAP32[$5>>2]|0;
    $7 = $6&255;
    $8 = $7;
   } else {
    $8 = $1;
   }
   HEAP8[$$02>>0] = $8;
   $9 = ((($$02)) + 1|0);
   $10 = ($9|0)==($high|0);
   if ($10) {
    break;
   } else {
    $$02 = $9;
   }
  }
 }
 return ($high|0);
}
function __ZNKSt3__15ctypeIcE10do_tolowerEc($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii1 = ($c<<24>>24)>(-1);
 if ($isascii1) {
  $0 = $c << 24 >> 24;
  $1 = (___ctype_tolower_loc()|0);
  $2 = HEAP32[$1>>2]|0;
  $3 = (($2) + ($0<<2)|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = $4&255;
  $6 = $5;
 } else {
  $6 = $c;
 }
 return ($6|0);
}
function __ZNKSt3__15ctypeIcE10do_tolowerEPcPKc($this,$low,$high) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 var $$02 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 if (!($0)) {
  $$02 = $low;
  while(1) {
   $1 = HEAP8[$$02>>0]|0;
   $isascii1 = ($1<<24>>24)>(-1);
   if ($isascii1) {
    $2 = $1 << 24 >> 24;
    $3 = (___ctype_tolower_loc()|0);
    $4 = HEAP32[$3>>2]|0;
    $5 = (($4) + ($2<<2)|0);
    $6 = HEAP32[$5>>2]|0;
    $7 = $6&255;
    $8 = $7;
   } else {
    $8 = $1;
   }
   HEAP8[$$02>>0] = $8;
   $9 = ((($$02)) + 1|0);
   $10 = ($9|0)==($high|0);
   if ($10) {
    break;
   } else {
    $$02 = $9;
   }
  }
 }
 return ($high|0);
}
function __ZNKSt3__15ctypeIcE8do_widenEc($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ($c|0);
}
function __ZNKSt3__15ctypeIcE8do_widenEPKcS3_Pc($this,$low,$high,$dest) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $dest = $dest|0;
 var $$012 = 0, $$03 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 if (!($0)) {
  $$012 = $low;$$03 = $dest;
  while(1) {
   $1 = HEAP8[$$012>>0]|0;
   HEAP8[$$03>>0] = $1;
   $2 = ((($$012)) + 1|0);
   $3 = ((($$03)) + 1|0);
   $4 = ($2|0)==($high|0);
   if ($4) {
    break;
   } else {
    $$012 = $2;$$03 = $3;
   }
  }
 }
 return ($high|0);
}
function __ZNKSt3__15ctypeIcE9do_narrowEcc($this,$c,$dfault) {
 $this = $this|0;
 $c = $c|0;
 $dfault = $dfault|0;
 var $c$dfault = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii1 = ($c<<24>>24)>(-1);
 $c$dfault = $isascii1 ? $c : $dfault;
 return ($c$dfault|0);
}
function __ZNKSt3__15ctypeIcE9do_narrowEPKcS3_cPc($this,$low,$high,$dfault,$dest) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $dfault = $dfault|0;
 $dest = $dest|0;
 var $$013 = 0, $$04 = 0, $$dfault = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $isascii2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 if (!($0)) {
  $$013 = $low;$$04 = $dest;
  while(1) {
   $1 = HEAP8[$$013>>0]|0;
   $isascii2 = ($1<<24>>24)>(-1);
   $$dfault = $isascii2 ? $1 : $dfault;
   HEAP8[$$04>>0] = $$dfault;
   $2 = ((($$013)) + 1|0);
   $3 = ((($$04)) + 1|0);
   $4 = ($2|0)==($high|0);
   if ($4) {
    break;
   } else {
    $$013 = $2;$$04 = $3;
   }
  }
 }
 return ($high|0);
}
function __ZNSt3__17codecvtIcc11__mbstate_tED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_($this,$0,$frm,$1,$frm_nxt,$to,$2,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $1 = $1|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $2 = $2|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_($this,$0,$frm,$1,$frm_nxt,$to,$2,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $1 = $1|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $2 = $2|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this,$0,$to,$1,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $to = $to|0;
 $1 = $1|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$to_nxt>>2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE11do_encodingEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j($this,$0,$frm,$end,$mx) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $end = $end|0;
 $mx = $mx|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $end;
 $2 = $frm;
 $3 = (($1) - ($2))|0;
 $4 = ($3>>>0)<($mx>>>0);
 $5 = $4 ? $3 : $mx;
 return ($5|0);
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function __ZNSt3__17codecvtIwc11__mbstate_tED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__17codecvtIwc11__mbstate_tED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_($this,$st,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $st = $st|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $$0 = 0, $$01$be = 0, $$0143 = 0, $$0143$lcssa = 0, $$02$be = 0, $$0242 = 0, $$0242$lcssa = 0, $$1$lcssa = 0, $$128 = 0, $$pre = 0, $$pre14 = 0, $$pre15 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $8 = 0, $9 = 0, $fend$0$lcssa = 0, $fend$048 = 0, $fend$1$be = 0, $fend$144 = 0, $fend$2$lcssa = 0, $fend$235 = 0, $n$032 = 0, $not$ = 0, $or$cond = 0, $or$cond41 = 0, $p$033 = 0, $save_state = 0, $tmp = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $save_state = sp;
 $tmp = sp + 8|0;
 $0 = ($frm|0)==($frm_end|0);
 L1: do {
  if ($0) {
   $fend$0$lcssa = $frm_end;
  } else {
   $fend$048 = $frm;
   while(1) {
    $1 = HEAP32[$fend$048>>2]|0;
    $2 = ($1|0)==(0);
    if ($2) {
     $fend$0$lcssa = $fend$048;
     break L1;
    }
    $3 = ((($fend$048)) + 4|0);
    $4 = ($3|0)==($frm_end|0);
    if ($4) {
     $fend$0$lcssa = $frm_end;
     break;
    } else {
     $fend$048 = $3;
    }
   }
  }
 } while(0);
 HEAP32[$to_nxt>>2] = $to;
 HEAP32[$frm_nxt>>2] = $frm;
 $5 = $to_end;
 $6 = ((($this)) + 8|0);
 $7 = ($frm|0)==($frm_end|0);
 $8 = ($to|0)==($to_end|0);
 $or$cond41 = $8 | $7;
 L6: do {
  if ($or$cond41) {
   $72 = $frm;
   label = 29;
  } else {
   $$0143 = $frm;$$0242 = $to;$fend$144 = $fend$0$lcssa;
   while(1) {
    $9 = $st;
    $10 = $9;
    $11 = HEAP32[$10>>2]|0;
    $12 = (($9) + 4)|0;
    $13 = $12;
    $14 = HEAP32[$13>>2]|0;
    $15 = $save_state;
    $16 = $15;
    HEAP32[$16>>2] = $11;
    $17 = (($15) + 4)|0;
    $18 = $17;
    HEAP32[$18>>2] = $14;
    $19 = $fend$144;
    $20 = $$0143;
    $21 = (($19) - ($20))|0;
    $22 = $21 >> 2;
    $23 = $$0242;
    $24 = (($5) - ($23))|0;
    $25 = HEAP32[$6>>2]|0;
    $26 = (_uselocale(($25|0))|0);
    $27 = (_wcsnrtombs($$0242,$frm_nxt,$22,$24,$st)|0);
    $28 = ($26|0)==(0|0);
    if (!($28)) {
     (_uselocale(($26|0))|0);
    }
    if ((($27|0) == -1)) {
     $$0143$lcssa = $$0143;$$0242$lcssa = $$0242;
     break;
    } else if ((($27|0) == 0)) {
     $$0 = 1;
     break L6;
    }
    $43 = HEAP32[$to_nxt>>2]|0;
    $44 = (($43) + ($27)|0);
    HEAP32[$to_nxt>>2] = $44;
    $45 = ($44|0)==($to_end|0);
    if ($45) {
     label = 15;
     break;
    }
    $46 = ($fend$144|0)==($frm_end|0);
    if ($46) {
     $$pre = HEAP32[$frm_nxt>>2]|0;
     $$01$be = $$pre;$$02$be = $44;$fend$1$be = $frm_end;
    } else {
     $49 = HEAP32[$6>>2]|0;
     $50 = (_uselocale(($49|0))|0);
     $51 = (_wcrtomb($tmp,0,$st)|0);
     $52 = ($50|0)==(0|0);
     if (!($52)) {
      (_uselocale(($50|0))|0);
     }
     $53 = ($51|0)==(-1);
     if ($53) {
      $$0 = 2;
      break L6;
     }
     $54 = HEAP32[$to_nxt>>2]|0;
     $55 = $54;
     $56 = (($5) - ($55))|0;
     $57 = ($51>>>0)>($56>>>0);
     if ($57) {
      $$0 = 1;
      break L6;
     }
     $58 = ($51|0)==(0);
     if (!($58)) {
      $n$032 = $51;$p$033 = $tmp;
      while(1) {
       $59 = ((($p$033)) + 1|0);
       $60 = HEAP8[$p$033>>0]|0;
       $61 = HEAP32[$to_nxt>>2]|0;
       $62 = ((($61)) + 1|0);
       HEAP32[$to_nxt>>2] = $62;
       HEAP8[$61>>0] = $60;
       $63 = (($n$032) + -1)|0;
       $64 = ($63|0)==(0);
       if ($64) {
        break;
       } else {
        $n$032 = $63;$p$033 = $59;
       }
      }
     }
     $65 = HEAP32[$frm_nxt>>2]|0;
     $66 = ((($65)) + 4|0);
     HEAP32[$frm_nxt>>2] = $66;
     $67 = ($66|0)==($frm_end|0);
     L26: do {
      if ($67) {
       $fend$2$lcssa = $frm_end;
      } else {
       $fend$235 = $66;
       while(1) {
        $68 = HEAP32[$fend$235>>2]|0;
        $69 = ($68|0)==(0);
        if ($69) {
         $fend$2$lcssa = $fend$235;
         break L26;
        }
        $70 = ((($fend$235)) + 4|0);
        $71 = ($70|0)==($frm_end|0);
        if ($71) {
         $fend$2$lcssa = $frm_end;
         break;
        } else {
         $fend$235 = $70;
        }
       }
      }
     } while(0);
     $$pre14 = HEAP32[$to_nxt>>2]|0;
     $$01$be = $66;$$02$be = $$pre14;$fend$1$be = $fend$2$lcssa;
    }
    $47 = ($$01$be|0)==($frm_end|0);
    $48 = ($$02$be|0)==($to_end|0);
    $or$cond = $48 | $47;
    if ($or$cond) {
     $72 = $$01$be;
     label = 29;
     break L6;
    } else {
     $$0143 = $$01$be;$$0242 = $$02$be;$fend$144 = $fend$1$be;
    }
   }
   if ((label|0) == 15) {
    $$pre15 = HEAP32[$frm_nxt>>2]|0;
    $72 = $$pre15;
    label = 29;
    break;
   }
   HEAP32[$to_nxt>>2] = $$0242$lcssa;
   $29 = HEAP32[$frm_nxt>>2]|0;
   $30 = ($$0143$lcssa|0)==($29|0);
   L35: do {
    if ($30) {
     $$1$lcssa = $$0143$lcssa;
    } else {
     $$128 = $$0143$lcssa;$34 = $$0242$lcssa;
     while(1) {
      $31 = HEAP32[$$128>>2]|0;
      $32 = HEAP32[$6>>2]|0;
      $33 = (_uselocale(($32|0))|0);
      $35 = (_wcrtomb($34,$31,$save_state)|0);
      $36 = ($33|0)==(0|0);
      if (!($36)) {
       (_uselocale(($33|0))|0);
      }
      $37 = ($35|0)==(-1);
      if ($37) {
       $$1$lcssa = $$128;
       break L35;
      }
      $38 = HEAP32[$to_nxt>>2]|0;
      $39 = (($38) + ($35)|0);
      HEAP32[$to_nxt>>2] = $39;
      $40 = ((($$128)) + 4|0);
      $41 = HEAP32[$frm_nxt>>2]|0;
      $42 = ($40|0)==($41|0);
      if ($42) {
       $$1$lcssa = $40;
       break;
      } else {
       $$128 = $40;$34 = $39;
      }
     }
    }
   } while(0);
   HEAP32[$frm_nxt>>2] = $$1$lcssa;
   $$0 = 2;
  }
 } while(0);
 if ((label|0) == 29) {
  $not$ = ($72|0)!=($frm_end|0);
  $73 = $not$&1;
  $$0 = $73;
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_($this,$st,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $st = $st|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $$0 = 0, $$01$be = 0, $$0153 = 0, $$0153$lcssa = 0, $$02$be = 0, $$0252 = 0, $$0252$lcssa = 0, $$1$lcssa = 0, $$145 = 0, $$145$lcssa = 0, $$145$lcssa73 = 0, $$2 = 0, $$lcssa = 0, $$pre = 0, $$pre22 = 0, $$pre23 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0;
 var $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $fend$0$lcssa = 0, $fend$057 = 0, $fend$1$be = 0, $fend$154 = 0, $fend$2$lcssa = 0, $fend$246 = 0, $not$ = 0, $not$3 = 0, $or$cond = 0, $or$cond51 = 0, $save_state = 0, $storemerge44 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $save_state = sp;
 $0 = ($frm|0)==($frm_end|0);
 L1: do {
  if ($0) {
   $fend$0$lcssa = $frm_end;
  } else {
   $fend$057 = $frm;
   while(1) {
    $1 = HEAP8[$fend$057>>0]|0;
    $2 = ($1<<24>>24)==(0);
    if ($2) {
     $fend$0$lcssa = $fend$057;
     break L1;
    }
    $3 = ((($fend$057)) + 1|0);
    $4 = ($3|0)==($frm_end|0);
    if ($4) {
     $fend$0$lcssa = $frm_end;
     break;
    } else {
     $fend$057 = $3;
    }
   }
  }
 } while(0);
 HEAP32[$to_nxt>>2] = $to;
 HEAP32[$frm_nxt>>2] = $frm;
 $5 = $to_end;
 $6 = ((($this)) + 8|0);
 $7 = ($frm|0)==($frm_end|0);
 $8 = ($to|0)==($to_end|0);
 $or$cond51 = $8 | $7;
 L6: do {
  if ($or$cond51) {
   $64 = $frm;
   label = 29;
  } else {
   $$0153 = $frm;$$0252 = $to;$fend$154 = $fend$0$lcssa;
   while(1) {
    $9 = $st;
    $10 = $9;
    $11 = HEAP32[$10>>2]|0;
    $12 = (($9) + 4)|0;
    $13 = $12;
    $14 = HEAP32[$13>>2]|0;
    $15 = $save_state;
    $16 = $15;
    HEAP32[$16>>2] = $11;
    $17 = (($15) + 4)|0;
    $18 = $17;
    HEAP32[$18>>2] = $14;
    $19 = $fend$154;
    $20 = $$0153;
    $21 = (($19) - ($20))|0;
    $22 = $$0252;
    $23 = (($5) - ($22))|0;
    $24 = $23 >> 2;
    $25 = HEAP32[$6>>2]|0;
    $26 = (_uselocale(($25|0))|0);
    $27 = (_mbsnrtowcs($$0252,$frm_nxt,$21,$24,$st)|0);
    $28 = ($26|0)==(0|0);
    if (!($28)) {
     (_uselocale(($26|0))|0);
    }
    if ((($27|0) == -1)) {
     $$0153$lcssa = $$0153;$$0252$lcssa = $$0252;$$lcssa = $19;
     break;
    } else if ((($27|0) == 0)) {
     $$0 = 2;
     break L6;
    }
    $44 = HEAP32[$to_nxt>>2]|0;
    $45 = (($44) + ($27<<2)|0);
    HEAP32[$to_nxt>>2] = $45;
    $46 = ($45|0)==($to_end|0);
    if ($46) {
     label = 19;
     break;
    }
    $47 = ($fend$154|0)==($frm_end|0);
    $$pre = HEAP32[$frm_nxt>>2]|0;
    if ($47) {
     $$01$be = $$pre;$$02$be = $45;$fend$1$be = $frm_end;
    } else {
     $50 = HEAP32[$6>>2]|0;
     $51 = (_uselocale(($50|0))|0);
     $52 = (_mbrtowc($45,$$pre,1,$st)|0);
     $53 = ($51|0)==(0|0);
     if (!($53)) {
      (_uselocale(($51|0))|0);
     }
     $54 = ($52|0)==(0);
     if (!($54)) {
      $$0 = 2;
      break L6;
     }
     $55 = HEAP32[$to_nxt>>2]|0;
     $56 = ((($55)) + 4|0);
     HEAP32[$to_nxt>>2] = $56;
     $57 = HEAP32[$frm_nxt>>2]|0;
     $58 = ((($57)) + 1|0);
     HEAP32[$frm_nxt>>2] = $58;
     $59 = ($58|0)==($frm_end|0);
     L20: do {
      if ($59) {
       $fend$2$lcssa = $frm_end;
      } else {
       $fend$246 = $58;
       while(1) {
        $60 = HEAP8[$fend$246>>0]|0;
        $61 = ($60<<24>>24)==(0);
        if ($61) {
         $fend$2$lcssa = $fend$246;
         break L20;
        }
        $62 = ((($fend$246)) + 1|0);
        $63 = ($62|0)==($frm_end|0);
        if ($63) {
         $fend$2$lcssa = $frm_end;
         break;
        } else {
         $fend$246 = $62;
        }
       }
      }
     } while(0);
     $$pre22 = HEAP32[$to_nxt>>2]|0;
     $$01$be = $58;$$02$be = $$pre22;$fend$1$be = $fend$2$lcssa;
    }
    $48 = ($$01$be|0)==($frm_end|0);
    $49 = ($$02$be|0)==($to_end|0);
    $or$cond = $49 | $48;
    if ($or$cond) {
     $64 = $$01$be;
     label = 29;
     break L6;
    } else {
     $$0153 = $$01$be;$$0252 = $$02$be;$fend$154 = $fend$1$be;
    }
   }
   if ((label|0) == 19) {
    $$pre23 = HEAP32[$frm_nxt>>2]|0;
    $64 = $$pre23;
    label = 29;
    break;
   }
   HEAP32[$to_nxt>>2] = $$0252$lcssa;
   $29 = HEAP32[$frm_nxt>>2]|0;
   $30 = ($$0153$lcssa|0)==($29|0);
   L29: do {
    if ($30) {
     $$1$lcssa = $$0153$lcssa;
    } else {
     $$145 = $$0153$lcssa;$storemerge44 = $$0252$lcssa;
     while(1) {
      $31 = $$145;
      $32 = (($$lcssa) - ($31))|0;
      $33 = HEAP32[$6>>2]|0;
      $34 = (_uselocale(($33|0))|0);
      $35 = (_mbrtowc($storemerge44,$$145,$32,$save_state)|0);
      $36 = ($34|0)==(0|0);
      if (!($36)) {
       (_uselocale(($34|0))|0);
      }
      if ((($35|0) == -2)) {
       $$145$lcssa73 = $$145;
       label = 14;
       break;
      } else if ((($35|0) == 0)) {
       $37 = ((($$145)) + 1|0);
       $$2 = $37;
      } else if ((($35|0) == -1)) {
       $$145$lcssa = $$145;
       label = 13;
       break;
      } else {
       $38 = (($$145) + ($35)|0);
       $$2 = $38;
      }
      $39 = HEAP32[$to_nxt>>2]|0;
      $40 = ((($39)) + 4|0);
      HEAP32[$to_nxt>>2] = $40;
      $41 = HEAP32[$frm_nxt>>2]|0;
      $42 = ($$2|0)==($41|0);
      if ($42) {
       $$1$lcssa = $$2;
       break L29;
      } else {
       $$145 = $$2;$storemerge44 = $40;
      }
     }
     if ((label|0) == 13) {
      HEAP32[$frm_nxt>>2] = $$145$lcssa;
      $$0 = 2;
      break L6;
     }
     else if ((label|0) == 14) {
      HEAP32[$frm_nxt>>2] = $$145$lcssa73;
      $$0 = 1;
      break L6;
     }
    }
   } while(0);
   HEAP32[$frm_nxt>>2] = $$1$lcssa;
   $not$3 = ($$1$lcssa|0)!=($frm_end|0);
   $43 = $not$3&1;
   $$0 = $43;
  }
 } while(0);
 if ((label|0) == 29) {
  $not$ = ($64|0)!=($frm_end|0);
  $65 = $not$&1;
  $$0 = $65;
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this,$st,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $st = $st|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $n$02 = 0;
 var $p$03 = 0, $tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $tmp = sp;
 HEAP32[$to_nxt>>2] = $to;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (_uselocale(($1|0))|0);
 $3 = (_wcrtomb($tmp,0,$st)|0);
 $4 = ($2|0)==(0|0);
 if (!($4)) {
  (_uselocale(($2|0))|0);
 }
 if ((($3|0) == 0) | (($3|0) == -1)) {
  $$0 = 2;
 } else {
  $5 = (($3) + -1)|0;
  $6 = HEAP32[$to_nxt>>2]|0;
  $7 = $to_end;
  $8 = $6;
  $9 = (($7) - ($8))|0;
  $10 = ($5>>>0)>($9>>>0);
  if ($10) {
   $$0 = 1;
  } else {
   $11 = ($5|0)==(0);
   if ($11) {
    $$0 = 0;
   } else {
    $n$02 = $5;$p$03 = $tmp;
    while(1) {
     $12 = ((($p$03)) + 1|0);
     $13 = HEAP8[$p$03>>0]|0;
     $14 = HEAP32[$to_nxt>>2]|0;
     $15 = ((($14)) + 1|0);
     HEAP32[$to_nxt>>2] = $15;
     HEAP8[$14>>0] = $13;
     $16 = (($n$02) + -1)|0;
     $17 = ($16|0)==(0);
     if ($17) {
      $$0 = 0;
      break;
     } else {
      $n$02 = $16;$p$03 = $12;
     }
    }
   }
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE11do_encodingEv($this) {
 $this = $this|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (_uselocale(($1|0))|0);
 $3 = (_mbtowc(0,0,4)|0);
 $4 = ($2|0)==(0|0);
 if (!($4)) {
  (_uselocale(($2|0))|0);
 }
 $5 = ($3|0)==(0);
 if ($5) {
  $6 = HEAP32[$0>>2]|0;
  $7 = ($6|0)==(0|0);
  if ($7) {
   $$0 = 1;
  } else {
   $8 = (_uselocale(($6|0))|0);
   $9 = ($8|0)==(0|0);
   if ($9) {
    $$0 = 0;
   } else {
    (_uselocale(($8|0))|0);
    $$0 = 0;
   }
  }
 } else {
  $$0 = -1;
 }
 return ($$0|0);
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j($this,$st,$frm,$frm_end,$mx) {
 $this = $this|0;
 $st = $st|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 var $$013 = 0, $$1 = 0, $$pn = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $nbytes$0$lcssa = 0, $nbytes$04 = 0;
 var $nbytes$1 = 0, $nwchar_t$05 = 0, $or$cond = 0, $or$cond2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $frm_end;
 $1 = ((($this)) + 8|0);
 $2 = ($mx|0)==(0);
 $3 = ($frm|0)==($frm_end|0);
 $or$cond2 = $3 | $2;
 L1: do {
  if ($or$cond2) {
   $nbytes$0$lcssa = 0;
  } else {
   $$013 = $frm;$nbytes$04 = 0;$nwchar_t$05 = 0;
   while(1) {
    $4 = $$013;
    $5 = (($0) - ($4))|0;
    $6 = HEAP32[$1>>2]|0;
    $7 = (_uselocale(($6|0))|0);
    $8 = (_mbrlen($$013,$5,$st)|0);
    $9 = ($7|0)==(0|0);
    if (!($9)) {
     (_uselocale(($7|0))|0);
    }
    if ((($8|0) == 0)) {
     $10 = ((($$013)) + 1|0);
     $$1 = $10;$$pn = 1;
    } else if ((($8|0) == -2) | (($8|0) == -1)) {
     $nbytes$0$lcssa = $nbytes$04;
     break L1;
    } else {
     $11 = (($$013) + ($8)|0);
     $$1 = $11;$$pn = $8;
    }
    $nbytes$1 = (($$pn) + ($nbytes$04))|0;
    $12 = (($nwchar_t$05) + 1)|0;
    $13 = ($12>>>0)>=($mx>>>0);
    $14 = ($$1|0)==($frm_end|0);
    $or$cond = $14 | $13;
    if ($or$cond) {
     $nbytes$0$lcssa = $nbytes$1;
     break;
    } else {
     $$013 = $$1;$nbytes$04 = $nbytes$1;$nwchar_t$05 = $12;
    }
   }
  }
 } while(0);
 return ($nbytes$0$lcssa|0);
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 if ($2) {
  $5 = 1;
 } else {
  $3 = (_uselocale(($1|0))|0);
  $4 = ($3|0)==(0|0);
  if ($4) {
   $5 = 4;
  } else {
   (_uselocale(($3|0))|0);
   $5 = 4;
  }
 }
 return ($5|0);
}
function __ZNSt3__17codecvtIDsc11__mbstate_tED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_($this,$0,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $1 = 0, $2 = 0, $3 = 0, $_frm_nxt = 0, $_to_nxt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $_frm_nxt = sp + 4|0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt>>2] = $frm;
 HEAP32[$_to_nxt>>2] = $to;
 $1 = (__ZNSt3__1L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$_frm_nxt,$to,$to_end,$_to_nxt,1114111,0)|0);
 $2 = HEAP32[$_frm_nxt>>2]|0;
 HEAP32[$frm_nxt>>2] = $2;
 $3 = HEAP32[$_to_nxt>>2]|0;
 HEAP32[$to_nxt>>2] = $3;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_($this,$0,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $1 = 0, $2 = 0, $3 = 0, $_frm_nxt = 0, $_to_nxt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $_frm_nxt = sp + 4|0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt>>2] = $frm;
 HEAP32[$_to_nxt>>2] = $to;
 $1 = (__ZNSt3__1L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$_frm_nxt,$to,$to_end,$_to_nxt,1114111,0)|0);
 $2 = HEAP32[$_frm_nxt>>2]|0;
 HEAP32[$frm_nxt>>2] = $2;
 $3 = HEAP32[$_to_nxt>>2]|0;
 HEAP32[$to_nxt>>2] = $3;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this,$0,$to,$1,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $to = $to|0;
 $1 = $1|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$to_nxt>>2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE11do_encodingEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j($this,$0,$frm,$frm_end,$mx) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (__ZNSt3__1L20utf8_to_utf16_lengthEPKhS1_jmNS_12codecvt_modeE($frm,$frm_end,$mx,1114111,0)|0);
 return ($1|0);
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 4;
}
function __ZNSt3__17codecvtIDic11__mbstate_tED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_($this,$0,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $1 = 0, $2 = 0, $3 = 0, $_frm_nxt = 0, $_to_nxt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $_frm_nxt = sp + 4|0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt>>2] = $frm;
 HEAP32[$_to_nxt>>2] = $to;
 $1 = (__ZNSt3__1L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$_frm_nxt,$to,$to_end,$_to_nxt,1114111,0)|0);
 $2 = HEAP32[$_frm_nxt>>2]|0;
 HEAP32[$frm_nxt>>2] = $2;
 $3 = HEAP32[$_to_nxt>>2]|0;
 HEAP32[$to_nxt>>2] = $3;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_($this,$0,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $1 = 0, $2 = 0, $3 = 0, $_frm_nxt = 0, $_to_nxt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $_frm_nxt = sp + 4|0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt>>2] = $frm;
 HEAP32[$_to_nxt>>2] = $to;
 $1 = (__ZNSt3__1L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$_frm_nxt,$to,$to_end,$_to_nxt,1114111,0)|0);
 $2 = HEAP32[$_frm_nxt>>2]|0;
 HEAP32[$frm_nxt>>2] = $2;
 $3 = HEAP32[$_to_nxt>>2]|0;
 HEAP32[$to_nxt>>2] = $3;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this,$0,$to,$1,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $to = $to|0;
 $1 = $1|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$to_nxt>>2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE11do_encodingEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j($this,$0,$frm,$frm_end,$mx) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (__ZNSt3__1L19utf8_to_ucs4_lengthEPKhS1_jmNS_12codecvt_modeE($frm,$frm_end,$mx,1114111,0)|0);
 return ($1|0);
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 4;
}
function __ZNSt3__116__narrow_to_utf8ILj32EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNSt3__117__widen_from_utf8ILj32EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNSt3__18numpunctIcEC2Ej($this,$refs) {
 $this = $this|0;
 $refs = $refs|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($refs) + -1)|0;
 $1 = ((($this)) + 4|0);
 HEAP32[$1>>2] = $0;
 HEAP32[$this>>2] = (6328);
 $2 = ((($this)) + 8|0);
 HEAP8[$2>>0] = 46;
 $3 = ((($this)) + 9|0);
 HEAP8[$3>>0] = 44;
 $4 = ((($this)) + 12|0);
 HEAP32[$4>>2] = 0;
 $5 = ((($4)) + 4|0);
 HEAP32[$5>>2] = 0;
 $6 = ((($4)) + 8|0);
 HEAP32[$6>>2] = 0;
 return;
}
function __ZNSt3__18numpunctIwEC2Ej($this,$refs) {
 $this = $this|0;
 $refs = $refs|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($refs) + -1)|0;
 $1 = ((($this)) + 4|0);
 HEAP32[$1>>2] = $0;
 HEAP32[$this>>2] = (6368);
 $2 = ((($this)) + 8|0);
 HEAP32[$2>>2] = 46;
 $3 = ((($this)) + 12|0);
 HEAP32[$3>>2] = 44;
 $4 = ((($this)) + 16|0);
 HEAP32[$4>>2] = 0;
 $5 = ((($4)) + 4|0);
 HEAP32[$5>>2] = 0;
 $6 = ((($4)) + 8|0);
 HEAP32[$6>>2] = 0;
 return;
}
function __ZNSt3__18numpunctIcED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (6328);
 $0 = ((($this)) + 12|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
 return;
}
function __ZNSt3__18numpunctIcED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__18numpunctIcED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt3__18numpunctIwED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (6368);
 $0 = ((($this)) + 16|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
 return;
}
function __ZNSt3__18numpunctIwED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__18numpunctIwED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18numpunctIcE16do_decimal_pointEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $1 = HEAP8[$0>>0]|0;
 return ($1|0);
}
function __ZNKSt3__18numpunctIwE16do_decimal_pointEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNKSt3__18numpunctIcE16do_thousands_sepEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 9|0);
 $1 = HEAP8[$0>>0]|0;
 return ($1|0);
}
function __ZNKSt3__18numpunctIwE16do_thousands_sepEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNKSt3__18numpunctIcE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($agg$result,$0);
 return;
}
function __ZNKSt3__18numpunctIwE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 16|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($agg$result,$0);
 return;
}
function __ZNKSt3__18numpunctIcE11do_truenameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result,10160,4);
 return;
}
function __ZNKSt3__18numpunctIwE11do_truenameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_wcslen(10168)|0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($agg$result,10168,$0);
 return;
}
function __ZNKSt3__18numpunctIcE12do_falsenameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result,10192,5);
 return;
}
function __ZNKSt3__18numpunctIwE12do_falsenameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_wcslen(10200)|0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($agg$result,10200,$0);
 return;
}
function __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($iob) {
 $iob = $iob|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($iob)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 & 74;
 if ((($2|0) == 64)) {
  $$0 = 8;
 } else if ((($2|0) == 0)) {
  $$0 = 0;
 } else if ((($2|0) == 8)) {
  $$0 = 16;
 } else {
  $$0 = 10;
 }
 return ($$0|0);
}
function __ZNKSt3__120__time_get_c_storageIcE7__weeksEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[10224>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((10224|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = HEAP8[10232>>0]|0;
   $5 = ($4<<24>>24)==(0);
   if ($5) {
    $6 = (___cxa_guard_acquire((10232|0))|0);
    $7 = ($6|0)==(0);
    if (!($7)) {
     $8 = 10240;
     while(1) {
      HEAP32[$8>>2] = 0;
      $9 = ((($8)) + 4|0);
      HEAP32[$9>>2] = 0;
      $10 = ((($8)) + 8|0);
      HEAP32[$10>>2] = 0;
      $11 = ((($8)) + 12|0);
      $12 = ($11|0)==((10408)|0);
      if ($12) {
       break;
      } else {
       $8 = $11;
      }
     }
     ___cxa_guard_release((10232|0));
    }
   }
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(10240,10408)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((10252),10416)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((10264),10424)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((10276),10432)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((10288),10448)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((10300),10464)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((10312),10472)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((10324),10488)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((10336),10496)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((10348),10504)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((10360),10512)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((10372),10520)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((10384),10528)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((10396),10536)|0);
   HEAP32[10544>>2] = 10240;
   ___cxa_guard_release((10224|0));
  }
 }
 $13 = HEAP32[10544>>2]|0;
 return ($13|0);
}
function __ZNKSt3__120__time_get_c_storageIwE7__weeksEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[10552>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((10552|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = HEAP8[10560>>0]|0;
   $5 = ($4<<24>>24)==(0);
   if ($5) {
    $6 = (___cxa_guard_acquire((10560|0))|0);
    $7 = ($6|0)==(0);
    if (!($7)) {
     $8 = 10568;
     while(1) {
      HEAP32[$8>>2] = 0;
      $9 = ((($8)) + 4|0);
      HEAP32[$9>>2] = 0;
      $10 = ((($8)) + 8|0);
      HEAP32[$10>>2] = 0;
      $11 = ((($8)) + 12|0);
      $12 = ($11|0)==((10736)|0);
      if ($12) {
       break;
      } else {
       $8 = $11;
      }
     }
     ___cxa_guard_release((10560|0));
    }
   }
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(10568,10736)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((10580),10768)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((10592),10800)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((10604),10832)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((10616),10872)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((10628),10912)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((10640),10944)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((10652),10984)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((10664),11000)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((10676),11016)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((10688),11032)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((10700),11048)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((10712),11064)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((10724),11080)|0);
   HEAP32[11096>>2] = 10568;
   ___cxa_guard_release((10552|0));
  }
 }
 $13 = HEAP32[11096>>2]|0;
 return ($13|0);
}
function __ZNKSt3__120__time_get_c_storageIcE8__monthsEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[11104>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((11104|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = HEAP8[11112>>0]|0;
   $5 = ($4<<24>>24)==(0);
   if ($5) {
    $6 = (___cxa_guard_acquire((11112|0))|0);
    $7 = ($6|0)==(0);
    if (!($7)) {
     $8 = 11120;
     while(1) {
      HEAP32[$8>>2] = 0;
      $9 = ((($8)) + 4|0);
      HEAP32[$9>>2] = 0;
      $10 = ((($8)) + 8|0);
      HEAP32[$10>>2] = 0;
      $11 = ((($8)) + 12|0);
      $12 = ($11|0)==((11408)|0);
      if ($12) {
       break;
      } else {
       $8 = $11;
      }
     }
     ___cxa_guard_release((11112|0));
    }
   }
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(11120,11408)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11132),11416)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11144),11432)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11156),11440)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11168),11448)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11180),11456)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11192),11464)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11204),11472)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11216),11480)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11228),11496)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11240),11504)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11252),11520)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11264),11536)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11276),11544)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11288),11552)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11300),11560)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11312),11448)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11324),11568)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11336),11576)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11348),11584)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11360),11592)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11372),11600)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11384),11608)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11396),11616)|0);
   HEAP32[11624>>2] = 11120;
   ___cxa_guard_release((11104|0));
  }
 }
 $13 = HEAP32[11624>>2]|0;
 return ($13|0);
}
function __ZNKSt3__120__time_get_c_storageIwE8__monthsEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[11632>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((11632|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = HEAP8[11640>>0]|0;
   $5 = ($4<<24>>24)==(0);
   if ($5) {
    $6 = (___cxa_guard_acquire((11640|0))|0);
    $7 = ($6|0)==(0);
    if (!($7)) {
     $8 = 11648;
     while(1) {
      HEAP32[$8>>2] = 0;
      $9 = ((($8)) + 4|0);
      HEAP32[$9>>2] = 0;
      $10 = ((($8)) + 8|0);
      HEAP32[$10>>2] = 0;
      $11 = ((($8)) + 12|0);
      $12 = ($11|0)==((11936)|0);
      if ($12) {
       break;
      } else {
       $8 = $11;
      }
     }
     ___cxa_guard_release((11640|0));
    }
   }
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(11648,11936)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11660),11968)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11672),12008)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11684),12032)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11696),12056)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11708),12072)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11720),12096)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11732),12120)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11744),12152)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11756),12192)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11768),12224)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11780),12264)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11792),12304)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11804),12320)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11816),12336)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11828),12352)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11840),12056)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11852),12368)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11864),12384)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11876),12400)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11888),12416)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11900),12432)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11912),12448)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11924),12464)|0);
   HEAP32[12480>>2] = 11648;
   ___cxa_guard_release((11632|0));
  }
 }
 $13 = HEAP32[12480>>2]|0;
 return ($13|0);
}
function __ZNKSt3__120__time_get_c_storageIcE7__am_pmEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[12488>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((12488|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = HEAP8[12496>>0]|0;
   $5 = ($4<<24>>24)==(0);
   if ($5) {
    $6 = (___cxa_guard_acquire((12496|0))|0);
    $7 = ($6|0)==(0);
    if (!($7)) {
     $8 = 12504;
     while(1) {
      HEAP32[$8>>2] = 0;
      $9 = ((($8)) + 4|0);
      HEAP32[$9>>2] = 0;
      $10 = ((($8)) + 8|0);
      HEAP32[$10>>2] = 0;
      $11 = ((($8)) + 12|0);
      $12 = ($11|0)==((12792)|0);
      if ($12) {
       break;
      } else {
       $8 = $11;
      }
     }
     ___cxa_guard_release((12496|0));
    }
   }
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(12504,12792)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((12516),12800)|0);
   HEAP32[12808>>2] = 12504;
   ___cxa_guard_release((12488|0));
  }
 }
 $13 = HEAP32[12808>>2]|0;
 return ($13|0);
}
function __ZNKSt3__120__time_get_c_storageIwE7__am_pmEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[12816>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((12816|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = HEAP8[12824>>0]|0;
   $5 = ($4<<24>>24)==(0);
   if ($5) {
    $6 = (___cxa_guard_acquire((12824|0))|0);
    $7 = ($6|0)==(0);
    if (!($7)) {
     $8 = 12832;
     while(1) {
      HEAP32[$8>>2] = 0;
      $9 = ((($8)) + 4|0);
      HEAP32[$9>>2] = 0;
      $10 = ((($8)) + 8|0);
      HEAP32[$10>>2] = 0;
      $11 = ((($8)) + 12|0);
      $12 = ($11|0)==((13120)|0);
      if ($12) {
       break;
      } else {
       $8 = $11;
      }
     }
     ___cxa_guard_release((12824|0));
    }
   }
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(12832,13120)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((12844),13136)|0);
   HEAP32[13152>>2] = 12832;
   ___cxa_guard_release((12816|0));
  }
 }
 $13 = HEAP32[13152>>2]|0;
 return ($13|0);
}
function __ZNKSt3__120__time_get_c_storageIcE3__xEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[13160>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((13160|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(13168,13184,8);
   ___cxa_guard_release((13160|0));
  }
 }
 return (13168|0);
}
function __ZNKSt3__120__time_get_c_storageIwE3__xEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[13200>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((13200|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = (_wcslen(13208)|0);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(13248,13208,$4);
   ___cxa_guard_release((13200|0));
  }
 }
 return (13248|0);
}
function __ZNKSt3__120__time_get_c_storageIcE3__XEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[13264>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((13264|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(13272,13288,8);
   ___cxa_guard_release((13264|0));
  }
 }
 return (13272|0);
}
function __ZNKSt3__120__time_get_c_storageIwE3__XEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[13304>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((13304|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = (_wcslen(13312)|0);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(13352,13312,$4);
   ___cxa_guard_release((13304|0));
  }
 }
 return (13352|0);
}
function __ZNKSt3__120__time_get_c_storageIcE3__cEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[13368>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((13368|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(13376,13392,20);
   ___cxa_guard_release((13368|0));
  }
 }
 return (13376|0);
}
function __ZNKSt3__120__time_get_c_storageIwE3__cEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[13416>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((13416|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = (_wcslen(13424)|0);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(13512,13424,$4);
   ___cxa_guard_release((13416|0));
  }
 }
 return (13512|0);
}
function __ZNKSt3__120__time_get_c_storageIcE3__rEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[13528>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((13528|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(13536,13552,11);
   ___cxa_guard_release((13528|0));
  }
 }
 return (13536|0);
}
function __ZNKSt3__120__time_get_c_storageIwE3__rEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[13568>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((13568|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = (_wcslen(13576)|0);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(13624,13576,$4);
   ___cxa_guard_release((13568|0));
  }
 }
 return (13624|0);
}
function __ZNSt3__17codecvtIwc11__mbstate_tED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (6248);
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__16__clocEv()|0);
 $3 = ($1|0)==($2|0);
 if (!($3)) {
  $4 = HEAP32[$0>>2]|0;
  _freelocale(($4|0));
 }
 return;
}
function __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$__e,$__kb,$__ke,$__ct,$__err,$__case_sensitive) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__kb = $__kb|0;
 $__ke = $__ke|0;
 $__ct = $__ct|0;
 $__err = $__err|0;
 $__case_sensitive = $__case_sensitive|0;
 var $$0$i$i = 0, $$021 = 0, $$033 = 0, $$lcssa = 0, $$lcssa59 = 0, $$pre$i$i$i = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $$pre$i2$i$i$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0;
 var $162 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__c$0 = 0, $__consume$0$off0$lcssa = 0, $__consume$0$off038 = 0, $__consume$1$off0 = 0, $__indx$0 = 0, $__kc$0 = 0, $__ky$052 = 0, $__ky1$039 = 0;
 var $__ky2$046 = 0, $__n_does_match$0$lcssa = 0, $__n_does_match$050 = 0, $__n_does_match$1 = 0, $__n_does_match$2 = 0, $__n_does_match$3$lcssa = 0, $__n_does_match$335 = 0, $__n_does_match$4 = 0, $__n_does_match$544 = 0, $__n_does_match$6 = 0, $__n_might_match$0$lcssa = 0, $__n_might_match$049 = 0, $__n_might_match$1 = 0, $__n_might_match$2 = 0, $__n_might_match$3$lcssa = 0, $__n_might_match$334 = 0, $__n_might_match$4 = 0, $__st$051 = 0, $__st$136 = 0, $__st$245 = 0;
 var $__st$332 = 0, $__statbuf = 0, $__status$0 = 0, $or$cond = 0, $tmp$i$i10 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $__statbuf = sp;
 $0 = $__ke;
 $1 = $__kb;
 $2 = (($0) - ($1))|0;
 $3 = (($2|0) / 12)&-1;
 $4 = ($3>>>0)>(100);
 if ($4) {
  $5 = (_malloc($3)|0);
  $6 = ($5|0)==(0|0);
  if ($6) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $162 = $5;$__status$0 = $5;
  }
 } else {
  $162 = 0;$__status$0 = $__statbuf;
 }
 $7 = ($__kb|0)==($__ke|0);
 if ($7) {
  $__n_does_match$0$lcssa = 0;$__n_might_match$0$lcssa = $3;
 } else {
  $__ky$052 = $__kb;$__n_does_match$050 = 0;$__n_might_match$049 = $3;$__st$051 = $__status$0;
  while(1) {
   $10 = HEAP8[$__ky$052>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   if ($12) {
    $15 = $10&255;
    $16 = $15 >>> 1;
    $17 = $16;
   } else {
    $13 = ((($__ky$052)) + 4|0);
    $14 = HEAP32[$13>>2]|0;
    $17 = $14;
   }
   $18 = ($17|0)==(0);
   if ($18) {
    HEAP8[$__st$051>>0] = 2;
    $19 = (($__n_might_match$049) + -1)|0;
    $20 = (($__n_does_match$050) + 1)|0;
    $__n_does_match$1 = $20;$__n_might_match$1 = $19;
   } else {
    HEAP8[$__st$051>>0] = 1;
    $__n_does_match$1 = $__n_does_match$050;$__n_might_match$1 = $__n_might_match$049;
   }
   $21 = ((($__ky$052)) + 12|0);
   $22 = ((($__st$051)) + 1|0);
   $23 = ($21|0)==($__ke|0);
   if ($23) {
    $__n_does_match$0$lcssa = $__n_does_match$1;$__n_might_match$0$lcssa = $__n_might_match$1;
    break;
   } else {
    $__ky$052 = $21;$__n_does_match$050 = $__n_does_match$1;$__n_might_match$049 = $__n_might_match$1;$__st$051 = $22;
   }
  }
 }
 $8 = ($__kb|0)==($__ke|0);
 $9 = ($__kb|0)==($__ke|0);
 $__indx$0 = 0;$__n_does_match$2 = $__n_does_match$0$lcssa;$__n_might_match$2 = $__n_might_match$0$lcssa;
 L17: while(1) {
  $24 = HEAP32[$__b>>2]|0;
  $25 = ($24|0)==(0|0);
  do {
   if ($25) {
    $36 = 0;
   } else {
    $26 = ((($24)) + 12|0);
    $27 = HEAP32[$26>>2]|0;
    $28 = ((($24)) + 16|0);
    $29 = HEAP32[$28>>2]|0;
    $30 = ($27|0)==($29|0);
    if ($30) {
     $31 = HEAP32[$24>>2]|0;
     $32 = ((($31)) + 36|0);
     $33 = HEAP32[$32>>2]|0;
     $34 = (FUNCTION_TABLE_ii[$33 & 63]($24)|0);
     $35 = ($34|0)==(-1);
     if ($35) {
      HEAP32[$__b>>2] = 0;
      $36 = 0;
      break;
     } else {
      $$pre$i$i$i4 = HEAP32[$__b>>2]|0;
      $36 = $$pre$i$i$i4;
      break;
     }
    } else {
     $36 = $24;
    }
   }
  } while(0);
  $37 = ($36|0)==(0|0);
  $38 = HEAP32[$__e>>2]|0;
  $39 = ($38|0)==(0|0);
  if ($39) {
   $$pre$i2$i$i = 0;
  } else {
   $40 = ((($38)) + 12|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = ((($38)) + 16|0);
   $43 = HEAP32[$42>>2]|0;
   $44 = ($41|0)==($43|0);
   if ($44) {
    $45 = HEAP32[$38>>2]|0;
    $46 = ((($45)) + 36|0);
    $47 = HEAP32[$46>>2]|0;
    $48 = (FUNCTION_TABLE_ii[$47 & 63]($38)|0);
    $49 = ($48|0)==(-1);
    if ($49) {
     HEAP32[$__e>>2] = 0;
     $$pre$i2$i$i = 0;
    } else {
     $$pre$i2$i$i = $38;
    }
   } else {
    $$pre$i2$i$i = $38;
   }
  }
  $50 = ($$pre$i2$i$i|0)==(0|0);
  $tmp$i$i10 = $37 ^ $50;
  $51 = ($__n_might_match$2|0)!=(0);
  $52 = $51 & $tmp$i$i10;
  $53 = HEAP32[$__b>>2]|0;
  if (!($52)) {
   $$lcssa = $50;$$lcssa59 = $53;$$pre$i2$i$i$lcssa = $$pre$i2$i$i;
   break;
  }
  $54 = ((($53)) + 12|0);
  $55 = HEAP32[$54>>2]|0;
  $56 = ((($53)) + 16|0);
  $57 = HEAP32[$56>>2]|0;
  $58 = ($55|0)==($57|0);
  if ($58) {
   $59 = HEAP32[$53>>2]|0;
   $60 = ((($59)) + 36|0);
   $61 = HEAP32[$60>>2]|0;
   $62 = (FUNCTION_TABLE_ii[$61 & 63]($53)|0);
   $$0$i$i = $62;
  } else {
   $63 = HEAP8[$55>>0]|0;
   $64 = $63&255;
   $$0$i$i = $64;
  }
  $65 = $$0$i$i&255;
  if ($__case_sensitive) {
   $__c$0 = $65;
  } else {
   $66 = HEAP32[$__ct>>2]|0;
   $67 = ((($66)) + 12|0);
   $68 = HEAP32[$67>>2]|0;
   $69 = (FUNCTION_TABLE_iii[$68 & 15]($__ct,$65)|0);
   $__c$0 = $69;
  }
  $70 = (($__indx$0) + 1)|0;
  if ($8) {
   $__consume$0$off0$lcssa = 0;$__n_does_match$3$lcssa = $__n_does_match$2;$__n_might_match$3$lcssa = $__n_might_match$2;
  } else {
   $__consume$0$off038 = 0;$__ky1$039 = $__kb;$__n_does_match$335 = $__n_does_match$2;$__n_might_match$334 = $__n_might_match$2;$__st$136 = $__status$0;
   while(1) {
    $71 = HEAP8[$__st$136>>0]|0;
    $72 = ($71<<24>>24)==(1);
    do {
     if ($72) {
      $73 = HEAP8[$__ky1$039>>0]|0;
      $74 = $73 & 1;
      $75 = ($74<<24>>24)==(0);
      if ($75) {
       $78 = ((($__ky1$039)) + 1|0);
       $80 = $78;
      } else {
       $76 = ((($__ky1$039)) + 8|0);
       $77 = HEAP32[$76>>2]|0;
       $80 = $77;
      }
      $79 = (($80) + ($__indx$0)|0);
      $81 = HEAP8[$79>>0]|0;
      if ($__case_sensitive) {
       $__kc$0 = $81;
      } else {
       $82 = HEAP32[$__ct>>2]|0;
       $83 = ((($82)) + 12|0);
       $84 = HEAP32[$83>>2]|0;
       $85 = (FUNCTION_TABLE_iii[$84 & 15]($__ct,$81)|0);
       $__kc$0 = $85;
      }
      $86 = ($__c$0<<24>>24)==($__kc$0<<24>>24);
      if (!($86)) {
       HEAP8[$__st$136>>0] = 0;
       $98 = (($__n_might_match$334) + -1)|0;
       $__consume$1$off0 = $__consume$0$off038;$__n_does_match$4 = $__n_does_match$335;$__n_might_match$4 = $98;
       break;
      }
      $87 = HEAP8[$__ky1$039>>0]|0;
      $88 = $87 & 1;
      $89 = ($88<<24>>24)==(0);
      if ($89) {
       $92 = $87&255;
       $93 = $92 >>> 1;
       $94 = $93;
      } else {
       $90 = ((($__ky1$039)) + 4|0);
       $91 = HEAP32[$90>>2]|0;
       $94 = $91;
      }
      $95 = ($94|0)==($70|0);
      if ($95) {
       HEAP8[$__st$136>>0] = 2;
       $96 = (($__n_might_match$334) + -1)|0;
       $97 = (($__n_does_match$335) + 1)|0;
       $__consume$1$off0 = 1;$__n_does_match$4 = $97;$__n_might_match$4 = $96;
      } else {
       $__consume$1$off0 = 1;$__n_does_match$4 = $__n_does_match$335;$__n_might_match$4 = $__n_might_match$334;
      }
     } else {
      $__consume$1$off0 = $__consume$0$off038;$__n_does_match$4 = $__n_does_match$335;$__n_might_match$4 = $__n_might_match$334;
     }
    } while(0);
    $99 = ((($__ky1$039)) + 12|0);
    $100 = ((($__st$136)) + 1|0);
    $101 = ($99|0)==($__ke|0);
    if ($101) {
     $__consume$0$off0$lcssa = $__consume$1$off0;$__n_does_match$3$lcssa = $__n_does_match$4;$__n_might_match$3$lcssa = $__n_might_match$4;
     break;
    } else {
     $__consume$0$off038 = $__consume$1$off0;$__ky1$039 = $99;$__n_does_match$335 = $__n_does_match$4;$__n_might_match$334 = $__n_might_match$4;$__st$136 = $100;
    }
   }
  }
  if (!($__consume$0$off0$lcssa)) {
   $__indx$0 = $70;$__n_does_match$2 = $__n_does_match$3$lcssa;$__n_might_match$2 = $__n_might_match$3$lcssa;
   continue;
  }
  $102 = HEAP32[$__b>>2]|0;
  $103 = ((($102)) + 12|0);
  $104 = HEAP32[$103>>2]|0;
  $105 = ((($102)) + 16|0);
  $106 = HEAP32[$105>>2]|0;
  $107 = ($104|0)==($106|0);
  if ($107) {
   $108 = HEAP32[$102>>2]|0;
   $109 = ((($108)) + 40|0);
   $110 = HEAP32[$109>>2]|0;
   (FUNCTION_TABLE_ii[$110 & 63]($102)|0);
  } else {
   $111 = ((($104)) + 1|0);
   HEAP32[$103>>2] = $111;
  }
  $112 = (($__n_does_match$3$lcssa) + ($__n_might_match$3$lcssa))|0;
  $113 = ($112>>>0)<(2);
  $or$cond = $113 | $9;
  if ($or$cond) {
   $__indx$0 = $70;$__n_does_match$2 = $__n_does_match$3$lcssa;$__n_might_match$2 = $__n_might_match$3$lcssa;
   continue;
  } else {
   $__ky2$046 = $__kb;$__n_does_match$544 = $__n_does_match$3$lcssa;$__st$245 = $__status$0;
  }
  while(1) {
   $114 = HEAP8[$__st$245>>0]|0;
   $115 = ($114<<24>>24)==(2);
   if ($115) {
    $116 = HEAP8[$__ky2$046>>0]|0;
    $117 = $116 & 1;
    $118 = ($117<<24>>24)==(0);
    if ($118) {
     $121 = $116&255;
     $122 = $121 >>> 1;
     $123 = $122;
    } else {
     $119 = ((($__ky2$046)) + 4|0);
     $120 = HEAP32[$119>>2]|0;
     $123 = $120;
    }
    $124 = ($123|0)==($70|0);
    if ($124) {
     $__n_does_match$6 = $__n_does_match$544;
    } else {
     HEAP8[$__st$245>>0] = 0;
     $125 = (($__n_does_match$544) + -1)|0;
     $__n_does_match$6 = $125;
    }
   } else {
    $__n_does_match$6 = $__n_does_match$544;
   }
   $126 = ((($__ky2$046)) + 12|0);
   $127 = ((($__st$245)) + 1|0);
   $128 = ($126|0)==($__ke|0);
   if ($128) {
    $__indx$0 = $70;$__n_does_match$2 = $__n_does_match$6;$__n_might_match$2 = $__n_might_match$3$lcssa;
    continue L17;
   } else {
    $__ky2$046 = $126;$__n_does_match$544 = $__n_does_match$6;$__st$245 = $127;
   }
  }
 }
 $129 = ($$lcssa59|0)==(0|0);
 do {
  if ($129) {
   $140 = 0;
  } else {
   $130 = ((($$lcssa59)) + 12|0);
   $131 = HEAP32[$130>>2]|0;
   $132 = ((($$lcssa59)) + 16|0);
   $133 = HEAP32[$132>>2]|0;
   $134 = ($131|0)==($133|0);
   if ($134) {
    $135 = HEAP32[$$lcssa59>>2]|0;
    $136 = ((($135)) + 36|0);
    $137 = HEAP32[$136>>2]|0;
    $138 = (FUNCTION_TABLE_ii[$137 & 63]($$lcssa59)|0);
    $139 = ($138|0)==(-1);
    if ($139) {
     HEAP32[$__b>>2] = 0;
     $140 = 0;
     break;
    } else {
     $$pre$i$i$i = HEAP32[$__b>>2]|0;
     $140 = $$pre$i$i$i;
     break;
    }
   } else {
    $140 = $$lcssa59;
   }
  }
 } while(0);
 $141 = ($140|0)==(0|0);
 do {
  if ($$lcssa) {
   label = 65;
  } else {
   $142 = ((($$pre$i2$i$i$lcssa)) + 12|0);
   $143 = HEAP32[$142>>2]|0;
   $144 = ((($$pre$i2$i$i$lcssa)) + 16|0);
   $145 = HEAP32[$144>>2]|0;
   $146 = ($143|0)==($145|0);
   if ($146) {
    $147 = HEAP32[$$pre$i2$i$i$lcssa>>2]|0;
    $148 = ((($147)) + 36|0);
    $149 = HEAP32[$148>>2]|0;
    $150 = (FUNCTION_TABLE_ii[$149 & 63]($$pre$i2$i$i$lcssa)|0);
    $151 = ($150|0)==(-1);
    if ($151) {
     HEAP32[$__e>>2] = 0;
     label = 65;
     break;
    }
   }
   if (!($141)) {
    label = 66;
   }
  }
 } while(0);
 if ((label|0) == 65) {
  if ($141) {
   label = 66;
  }
 }
 if ((label|0) == 66) {
  $152 = HEAP32[$__err>>2]|0;
  $153 = $152 | 2;
  HEAP32[$__err>>2] = $153;
 }
 $154 = ($__kb|0)==($__ke|0);
 L95: do {
  if ($154) {
   label = 70;
  } else {
   $$033 = $__kb;$__st$332 = $__status$0;
   while(1) {
    $155 = HEAP8[$__st$332>>0]|0;
    $156 = ($155<<24>>24)==(2);
    if ($156) {
     $$021 = $$033;
     break L95;
    }
    $157 = ((($$033)) + 12|0);
    $158 = ((($__st$332)) + 1|0);
    $159 = ($157|0)==($__ke|0);
    if ($159) {
     label = 70;
     break;
    } else {
     $$033 = $157;$__st$332 = $158;
    }
   }
  }
 } while(0);
 if ((label|0) == 70) {
  $160 = HEAP32[$__err>>2]|0;
  $161 = $160 | 4;
  HEAP32[$__err>>2] = $161;
  $$021 = $__ke;
 }
 _free($162);
 STACKTOP = sp;return ($$021|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i2 = 0, $$pre$i2$i$i = 0, $$pre18 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0;
 var $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $phitmp$i = 0, $phitmp$i12 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0;
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$8,0);
 $9 = HEAP8[$__buf>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($__buf)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($__buf)) + 1|0);
 $15 = $11 ? $14 : $13;
 HEAP32[$__a_end>>2] = $15;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $16 = ((($__buf)) + 4|0);
 $17 = HEAP8[$__thousands_sep>>0]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i2 = $$pre;$__a$0 = $15;
 L4: while(1) {
  $18 = ($$pre$i$i$i2|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;
  } else {
   $19 = ((($$pre$i$i$i2)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i2)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i2>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i2)|0);
    $28 = ($27|0)==(-1);
    if ($28) {
     HEAP32[$__b>>2] = 0;
     $$pre$i$i$i = 0;
    } else {
     $$pre$i$i$i = $$pre$i$i$i2;
    }
   } else {
    $$pre$i$i$i = $$pre$i$i$i2;
   }
  }
  $29 = ($$pre$i$i$i|0)==(0|0);
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 13;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if (!($36)) {
     if ($29) {
      $131 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
    $37 = HEAP32[$30>>2]|0;
    $38 = ((($37)) + 36|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
    $41 = ($40|0)==(-1);
    if ($41) {
     HEAP32[$__e>>2] = 0;
     label = 13;
     break;
    } else {
     if ($29) {
      $131 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 13) {
   label = 0;
   if ($29) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $131 = 0;
   }
  }
  $42 = HEAP32[$__a_end>>2]|0;
  $43 = HEAP8[$__buf>>0]|0;
  $44 = $43 & 1;
  $45 = ($44<<24>>24)==(0);
  $46 = HEAP32[$16>>2]|0;
  $47 = $43&255;
  $48 = $47 >>> 1;
  $49 = $45 ? $48 : $46;
  $50 = (($__a$0) + ($49)|0);
  $51 = ($42|0)==($50|0);
  if ($51) {
   $52 = $49 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$52,0);
   $53 = HEAP8[$__buf>>0]|0;
   $54 = $53 & 1;
   $55 = ($54<<24>>24)==(0);
   if ($55) {
    $58 = 10;
   } else {
    $56 = HEAP32[$__buf>>2]|0;
    $57 = $56 & -2;
    $phitmp$i12 = (($57) + -1)|0;
    $58 = $phitmp$i12;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$58,0);
   $59 = HEAP8[$__buf>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   $62 = HEAP32[$12>>2]|0;
   $63 = $61 ? $14 : $62;
   $64 = (($63) + ($49)|0);
   HEAP32[$__a_end>>2] = $64;
   $__a$1 = $63;
  } else {
   $__a$1 = $__a$0;
  }
  $65 = ((($$pre$i$i$i)) + 12|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = ((($$pre$i$i$i)) + 16|0);
  $68 = HEAP32[$67>>2]|0;
  $69 = ($66|0)==($68|0);
  if ($69) {
   $70 = HEAP32[$$pre$i$i$i>>2]|0;
   $71 = ((($70)) + 36|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = (FUNCTION_TABLE_ii[$72 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $73;
  } else {
   $74 = HEAP8[$66>>0]|0;
   $75 = $74&255;
   $$0$i$i = $75;
  }
  $76 = $$0$i$i&255;
  $77 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($76,$0,$__a$1,$__a_end,$__dc,$17,$__grouping,$__g,$__g_end,$__atoms)|0);
  $78 = ($77|0)==(0);
  if (!($78)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $131;$__a$2 = $__a$1;
   break;
  }
  $79 = HEAP32[$65>>2]|0;
  $80 = HEAP32[$67>>2]|0;
  $81 = ($79|0)==($80|0);
  if ($81) {
   $82 = HEAP32[$$pre$i$i$i>>2]|0;
   $83 = ((($82)) + 40|0);
   $84 = HEAP32[$83>>2]|0;
   (FUNCTION_TABLE_ii[$84 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i2 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $85 = ((($79)) + 1|0);
   HEAP32[$65>>2] = $85;
   $$pre$i$i$i2 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $86 = HEAP8[$__grouping>>0]|0;
 $87 = $86 & 1;
 $88 = ($87<<24>>24)==(0);
 $89 = ((($__grouping)) + 4|0);
 $90 = HEAP32[$89>>2]|0;
 $91 = $86&255;
 $92 = $91 >>> 1;
 $93 = $88 ? $92 : $90;
 $94 = ($93|0)==(0);
 $$pre18 = HEAP32[$__g_end>>2]|0;
 if ($94) {
  $103 = $$pre18;
 } else {
  $95 = $$pre18;
  $96 = $__g;
  $97 = (($95) - ($96))|0;
  $98 = ($97|0)<(160);
  if ($98) {
   $99 = HEAP32[$__dc>>2]|0;
   $100 = ((($$pre18)) + 4|0);
   HEAP32[$__g_end>>2] = $100;
   HEAP32[$$pre18>>2] = $99;
   $103 = $100;
  } else {
   $103 = $$pre18;
  }
 }
 $101 = HEAP32[$__a_end>>2]|0;
 $102 = (__ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji($__a$2,$101,$__err,$0)|0);
 HEAP32[$__v>>2] = $102;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$103,$__err);
 $104 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($104) {
  $115 = 0;
 } else {
  $105 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $106 = HEAP32[$105>>2]|0;
  $107 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $108 = HEAP32[$107>>2]|0;
  $109 = ($106|0)==($108|0);
  if ($109) {
   $110 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $111 = ((($110)) + 36|0);
   $112 = HEAP32[$111>>2]|0;
   $113 = (FUNCTION_TABLE_ii[$112 & 63]($$pre$i$i$i$lcssa)|0);
   $114 = ($113|0)==(-1);
   if ($114) {
    HEAP32[$__b>>2] = 0;
    $115 = 0;
   } else {
    $115 = $$pre$i$i$i$lcssa;
   }
  } else {
   $115 = $$pre$i$i$i$lcssa;
  }
 }
 $116 = ($115|0)==(0|0);
 $117 = ($$pre$i2$i$i|0)==(0|0);
 do {
  if ($117) {
   label = 38;
  } else {
   $118 = ((($$pre$i2$i$i)) + 12|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ((($$pre$i2$i$i)) + 16|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = ($119|0)==($121|0);
   if ($122) {
    $123 = HEAP32[$$pre$i2$i$i>>2]|0;
    $124 = ((($123)) + 36|0);
    $125 = HEAP32[$124>>2]|0;
    $126 = (FUNCTION_TABLE_ii[$125 & 63]($$pre$i2$i$i)|0);
    $127 = ($126|0)==(-1);
    if ($127) {
     HEAP32[$__e>>2] = 0;
     label = 38;
     break;
    }
   }
   if (!($116)) {
    label = 39;
   }
  }
 } while(0);
 if ((label|0) == 38) {
  if ($116) {
   label = 39;
  }
 }
 if ((label|0) == 39) {
  $128 = HEAP32[$__err>>2]|0;
  $129 = $128 | 2;
  HEAP32[$__err>>2] = $129;
 }
 $130 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($130|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i2 = 0, $$pre$i2$i$i = 0, $$pre18 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $phitmp$i = 0, $phitmp$i12 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0;
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$8,0);
 $9 = HEAP8[$__buf>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($__buf)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($__buf)) + 1|0);
 $15 = $11 ? $14 : $13;
 HEAP32[$__a_end>>2] = $15;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $16 = ((($__buf)) + 4|0);
 $17 = HEAP8[$__thousands_sep>>0]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i2 = $$pre;$__a$0 = $15;
 L4: while(1) {
  $18 = ($$pre$i$i$i2|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;
  } else {
   $19 = ((($$pre$i$i$i2)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i2)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i2>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i2)|0);
    $28 = ($27|0)==(-1);
    if ($28) {
     HEAP32[$__b>>2] = 0;
     $$pre$i$i$i = 0;
    } else {
     $$pre$i$i$i = $$pre$i$i$i2;
    }
   } else {
    $$pre$i$i$i = $$pre$i$i$i2;
   }
  }
  $29 = ($$pre$i$i$i|0)==(0|0);
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 13;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if (!($36)) {
     if ($29) {
      $136 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
    $37 = HEAP32[$30>>2]|0;
    $38 = ((($37)) + 36|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
    $41 = ($40|0)==(-1);
    if ($41) {
     HEAP32[$__e>>2] = 0;
     label = 13;
     break;
    } else {
     if ($29) {
      $136 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 13) {
   label = 0;
   if ($29) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $136 = 0;
   }
  }
  $42 = HEAP32[$__a_end>>2]|0;
  $43 = HEAP8[$__buf>>0]|0;
  $44 = $43 & 1;
  $45 = ($44<<24>>24)==(0);
  $46 = HEAP32[$16>>2]|0;
  $47 = $43&255;
  $48 = $47 >>> 1;
  $49 = $45 ? $48 : $46;
  $50 = (($__a$0) + ($49)|0);
  $51 = ($42|0)==($50|0);
  if ($51) {
   $52 = $49 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$52,0);
   $53 = HEAP8[$__buf>>0]|0;
   $54 = $53 & 1;
   $55 = ($54<<24>>24)==(0);
   if ($55) {
    $58 = 10;
   } else {
    $56 = HEAP32[$__buf>>2]|0;
    $57 = $56 & -2;
    $phitmp$i12 = (($57) + -1)|0;
    $58 = $phitmp$i12;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$58,0);
   $59 = HEAP8[$__buf>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   $62 = HEAP32[$12>>2]|0;
   $63 = $61 ? $14 : $62;
   $64 = (($63) + ($49)|0);
   HEAP32[$__a_end>>2] = $64;
   $__a$1 = $63;
  } else {
   $__a$1 = $__a$0;
  }
  $65 = ((($$pre$i$i$i)) + 12|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = ((($$pre$i$i$i)) + 16|0);
  $68 = HEAP32[$67>>2]|0;
  $69 = ($66|0)==($68|0);
  if ($69) {
   $70 = HEAP32[$$pre$i$i$i>>2]|0;
   $71 = ((($70)) + 36|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = (FUNCTION_TABLE_ii[$72 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $73;
  } else {
   $74 = HEAP8[$66>>0]|0;
   $75 = $74&255;
   $$0$i$i = $75;
  }
  $76 = $$0$i$i&255;
  $77 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($76,$0,$__a$1,$__a_end,$__dc,$17,$__grouping,$__g,$__g_end,$__atoms)|0);
  $78 = ($77|0)==(0);
  if (!($78)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $136;$__a$2 = $__a$1;
   break;
  }
  $79 = HEAP32[$65>>2]|0;
  $80 = HEAP32[$67>>2]|0;
  $81 = ($79|0)==($80|0);
  if ($81) {
   $82 = HEAP32[$$pre$i$i$i>>2]|0;
   $83 = ((($82)) + 40|0);
   $84 = HEAP32[$83>>2]|0;
   (FUNCTION_TABLE_ii[$84 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i2 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $85 = ((($79)) + 1|0);
   HEAP32[$65>>2] = $85;
   $$pre$i$i$i2 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $86 = HEAP8[$__grouping>>0]|0;
 $87 = $86 & 1;
 $88 = ($87<<24>>24)==(0);
 $89 = ((($__grouping)) + 4|0);
 $90 = HEAP32[$89>>2]|0;
 $91 = $86&255;
 $92 = $91 >>> 1;
 $93 = $88 ? $92 : $90;
 $94 = ($93|0)==(0);
 $$pre18 = HEAP32[$__g_end>>2]|0;
 if ($94) {
  $108 = $$pre18;
 } else {
  $95 = $$pre18;
  $96 = $__g;
  $97 = (($95) - ($96))|0;
  $98 = ($97|0)<(160);
  if ($98) {
   $99 = HEAP32[$__dc>>2]|0;
   $100 = ((($$pre18)) + 4|0);
   HEAP32[$__g_end>>2] = $100;
   HEAP32[$$pre18>>2] = $99;
   $108 = $100;
  } else {
   $108 = $$pre18;
  }
 }
 $101 = HEAP32[$__a_end>>2]|0;
 $102 = (__ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji($__a$2,$101,$__err,$0)|0);
 $103 = tempRet0;
 $104 = $__v;
 $105 = $104;
 HEAP32[$105>>2] = $102;
 $106 = (($104) + 4)|0;
 $107 = $106;
 HEAP32[$107>>2] = $103;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$108,$__err);
 $109 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($109) {
  $120 = 0;
 } else {
  $110 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $111 = HEAP32[$110>>2]|0;
  $112 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $113 = HEAP32[$112>>2]|0;
  $114 = ($111|0)==($113|0);
  if ($114) {
   $115 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $116 = ((($115)) + 36|0);
   $117 = HEAP32[$116>>2]|0;
   $118 = (FUNCTION_TABLE_ii[$117 & 63]($$pre$i$i$i$lcssa)|0);
   $119 = ($118|0)==(-1);
   if ($119) {
    HEAP32[$__b>>2] = 0;
    $120 = 0;
   } else {
    $120 = $$pre$i$i$i$lcssa;
   }
  } else {
   $120 = $$pre$i$i$i$lcssa;
  }
 }
 $121 = ($120|0)==(0|0);
 $122 = ($$pre$i2$i$i|0)==(0|0);
 do {
  if ($122) {
   label = 38;
  } else {
   $123 = ((($$pre$i2$i$i)) + 12|0);
   $124 = HEAP32[$123>>2]|0;
   $125 = ((($$pre$i2$i$i)) + 16|0);
   $126 = HEAP32[$125>>2]|0;
   $127 = ($124|0)==($126|0);
   if ($127) {
    $128 = HEAP32[$$pre$i2$i$i>>2]|0;
    $129 = ((($128)) + 36|0);
    $130 = HEAP32[$129>>2]|0;
    $131 = (FUNCTION_TABLE_ii[$130 & 63]($$pre$i2$i$i)|0);
    $132 = ($131|0)==(-1);
    if ($132) {
     HEAP32[$__e>>2] = 0;
     label = 38;
     break;
    }
   }
   if (!($121)) {
    label = 39;
   }
  }
 } while(0);
 if ((label|0) == 38) {
  if ($121) {
   label = 39;
  }
 }
 if ((label|0) == 39) {
  $133 = HEAP32[$__err>>2]|0;
  $134 = $133 | 2;
  HEAP32[$__err>>2] = $134;
 }
 $135 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($135|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i2 = 0, $$pre$i2$i$i = 0, $$pre18 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0;
 var $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $phitmp$i = 0, $phitmp$i12 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0;
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$8,0);
 $9 = HEAP8[$__buf>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($__buf)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($__buf)) + 1|0);
 $15 = $11 ? $14 : $13;
 HEAP32[$__a_end>>2] = $15;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $16 = ((($__buf)) + 4|0);
 $17 = HEAP8[$__thousands_sep>>0]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i2 = $$pre;$__a$0 = $15;
 L4: while(1) {
  $18 = ($$pre$i$i$i2|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;
  } else {
   $19 = ((($$pre$i$i$i2)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i2)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i2>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i2)|0);
    $28 = ($27|0)==(-1);
    if ($28) {
     HEAP32[$__b>>2] = 0;
     $$pre$i$i$i = 0;
    } else {
     $$pre$i$i$i = $$pre$i$i$i2;
    }
   } else {
    $$pre$i$i$i = $$pre$i$i$i2;
   }
  }
  $29 = ($$pre$i$i$i|0)==(0|0);
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 13;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if (!($36)) {
     if ($29) {
      $131 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
    $37 = HEAP32[$30>>2]|0;
    $38 = ((($37)) + 36|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
    $41 = ($40|0)==(-1);
    if ($41) {
     HEAP32[$__e>>2] = 0;
     label = 13;
     break;
    } else {
     if ($29) {
      $131 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 13) {
   label = 0;
   if ($29) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $131 = 0;
   }
  }
  $42 = HEAP32[$__a_end>>2]|0;
  $43 = HEAP8[$__buf>>0]|0;
  $44 = $43 & 1;
  $45 = ($44<<24>>24)==(0);
  $46 = HEAP32[$16>>2]|0;
  $47 = $43&255;
  $48 = $47 >>> 1;
  $49 = $45 ? $48 : $46;
  $50 = (($__a$0) + ($49)|0);
  $51 = ($42|0)==($50|0);
  if ($51) {
   $52 = $49 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$52,0);
   $53 = HEAP8[$__buf>>0]|0;
   $54 = $53 & 1;
   $55 = ($54<<24>>24)==(0);
   if ($55) {
    $58 = 10;
   } else {
    $56 = HEAP32[$__buf>>2]|0;
    $57 = $56 & -2;
    $phitmp$i12 = (($57) + -1)|0;
    $58 = $phitmp$i12;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$58,0);
   $59 = HEAP8[$__buf>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   $62 = HEAP32[$12>>2]|0;
   $63 = $61 ? $14 : $62;
   $64 = (($63) + ($49)|0);
   HEAP32[$__a_end>>2] = $64;
   $__a$1 = $63;
  } else {
   $__a$1 = $__a$0;
  }
  $65 = ((($$pre$i$i$i)) + 12|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = ((($$pre$i$i$i)) + 16|0);
  $68 = HEAP32[$67>>2]|0;
  $69 = ($66|0)==($68|0);
  if ($69) {
   $70 = HEAP32[$$pre$i$i$i>>2]|0;
   $71 = ((($70)) + 36|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = (FUNCTION_TABLE_ii[$72 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $73;
  } else {
   $74 = HEAP8[$66>>0]|0;
   $75 = $74&255;
   $$0$i$i = $75;
  }
  $76 = $$0$i$i&255;
  $77 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($76,$0,$__a$1,$__a_end,$__dc,$17,$__grouping,$__g,$__g_end,$__atoms)|0);
  $78 = ($77|0)==(0);
  if (!($78)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $131;$__a$2 = $__a$1;
   break;
  }
  $79 = HEAP32[$65>>2]|0;
  $80 = HEAP32[$67>>2]|0;
  $81 = ($79|0)==($80|0);
  if ($81) {
   $82 = HEAP32[$$pre$i$i$i>>2]|0;
   $83 = ((($82)) + 40|0);
   $84 = HEAP32[$83>>2]|0;
   (FUNCTION_TABLE_ii[$84 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i2 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $85 = ((($79)) + 1|0);
   HEAP32[$65>>2] = $85;
   $$pre$i$i$i2 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $86 = HEAP8[$__grouping>>0]|0;
 $87 = $86 & 1;
 $88 = ($87<<24>>24)==(0);
 $89 = ((($__grouping)) + 4|0);
 $90 = HEAP32[$89>>2]|0;
 $91 = $86&255;
 $92 = $91 >>> 1;
 $93 = $88 ? $92 : $90;
 $94 = ($93|0)==(0);
 $$pre18 = HEAP32[$__g_end>>2]|0;
 if ($94) {
  $103 = $$pre18;
 } else {
  $95 = $$pre18;
  $96 = $__g;
  $97 = (($95) - ($96))|0;
  $98 = ($97|0)<(160);
  if ($98) {
   $99 = HEAP32[$__dc>>2]|0;
   $100 = ((($$pre18)) + 4|0);
   HEAP32[$__g_end>>2] = $100;
   HEAP32[$$pre18>>2] = $99;
   $103 = $100;
  } else {
   $103 = $$pre18;
  }
 }
 $101 = HEAP32[$__a_end>>2]|0;
 $102 = (__ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji($__a$2,$101,$__err,$0)|0);
 HEAP16[$__v>>1] = $102;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$103,$__err);
 $104 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($104) {
  $115 = 0;
 } else {
  $105 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $106 = HEAP32[$105>>2]|0;
  $107 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $108 = HEAP32[$107>>2]|0;
  $109 = ($106|0)==($108|0);
  if ($109) {
   $110 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $111 = ((($110)) + 36|0);
   $112 = HEAP32[$111>>2]|0;
   $113 = (FUNCTION_TABLE_ii[$112 & 63]($$pre$i$i$i$lcssa)|0);
   $114 = ($113|0)==(-1);
   if ($114) {
    HEAP32[$__b>>2] = 0;
    $115 = 0;
   } else {
    $115 = $$pre$i$i$i$lcssa;
   }
  } else {
   $115 = $$pre$i$i$i$lcssa;
  }
 }
 $116 = ($115|0)==(0|0);
 $117 = ($$pre$i2$i$i|0)==(0|0);
 do {
  if ($117) {
   label = 38;
  } else {
   $118 = ((($$pre$i2$i$i)) + 12|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ((($$pre$i2$i$i)) + 16|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = ($119|0)==($121|0);
   if ($122) {
    $123 = HEAP32[$$pre$i2$i$i>>2]|0;
    $124 = ((($123)) + 36|0);
    $125 = HEAP32[$124>>2]|0;
    $126 = (FUNCTION_TABLE_ii[$125 & 63]($$pre$i2$i$i)|0);
    $127 = ($126|0)==(-1);
    if ($127) {
     HEAP32[$__e>>2] = 0;
     label = 38;
     break;
    }
   }
   if (!($116)) {
    label = 39;
   }
  }
 } while(0);
 if ((label|0) == 38) {
  if ($116) {
   label = 39;
  }
 }
 if ((label|0) == 39) {
  $128 = HEAP32[$__err>>2]|0;
  $129 = $128 | 2;
  HEAP32[$__err>>2] = $129;
 }
 $130 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($130|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i2 = 0, $$pre$i2$i$i = 0, $$pre18 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0;
 var $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $phitmp$i = 0, $phitmp$i12 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0;
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$8,0);
 $9 = HEAP8[$__buf>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($__buf)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($__buf)) + 1|0);
 $15 = $11 ? $14 : $13;
 HEAP32[$__a_end>>2] = $15;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $16 = ((($__buf)) + 4|0);
 $17 = HEAP8[$__thousands_sep>>0]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i2 = $$pre;$__a$0 = $15;
 L4: while(1) {
  $18 = ($$pre$i$i$i2|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;
  } else {
   $19 = ((($$pre$i$i$i2)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i2)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i2>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i2)|0);
    $28 = ($27|0)==(-1);
    if ($28) {
     HEAP32[$__b>>2] = 0;
     $$pre$i$i$i = 0;
    } else {
     $$pre$i$i$i = $$pre$i$i$i2;
    }
   } else {
    $$pre$i$i$i = $$pre$i$i$i2;
   }
  }
  $29 = ($$pre$i$i$i|0)==(0|0);
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 13;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if (!($36)) {
     if ($29) {
      $131 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
    $37 = HEAP32[$30>>2]|0;
    $38 = ((($37)) + 36|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
    $41 = ($40|0)==(-1);
    if ($41) {
     HEAP32[$__e>>2] = 0;
     label = 13;
     break;
    } else {
     if ($29) {
      $131 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 13) {
   label = 0;
   if ($29) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $131 = 0;
   }
  }
  $42 = HEAP32[$__a_end>>2]|0;
  $43 = HEAP8[$__buf>>0]|0;
  $44 = $43 & 1;
  $45 = ($44<<24>>24)==(0);
  $46 = HEAP32[$16>>2]|0;
  $47 = $43&255;
  $48 = $47 >>> 1;
  $49 = $45 ? $48 : $46;
  $50 = (($__a$0) + ($49)|0);
  $51 = ($42|0)==($50|0);
  if ($51) {
   $52 = $49 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$52,0);
   $53 = HEAP8[$__buf>>0]|0;
   $54 = $53 & 1;
   $55 = ($54<<24>>24)==(0);
   if ($55) {
    $58 = 10;
   } else {
    $56 = HEAP32[$__buf>>2]|0;
    $57 = $56 & -2;
    $phitmp$i12 = (($57) + -1)|0;
    $58 = $phitmp$i12;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$58,0);
   $59 = HEAP8[$__buf>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   $62 = HEAP32[$12>>2]|0;
   $63 = $61 ? $14 : $62;
   $64 = (($63) + ($49)|0);
   HEAP32[$__a_end>>2] = $64;
   $__a$1 = $63;
  } else {
   $__a$1 = $__a$0;
  }
  $65 = ((($$pre$i$i$i)) + 12|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = ((($$pre$i$i$i)) + 16|0);
  $68 = HEAP32[$67>>2]|0;
  $69 = ($66|0)==($68|0);
  if ($69) {
   $70 = HEAP32[$$pre$i$i$i>>2]|0;
   $71 = ((($70)) + 36|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = (FUNCTION_TABLE_ii[$72 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $73;
  } else {
   $74 = HEAP8[$66>>0]|0;
   $75 = $74&255;
   $$0$i$i = $75;
  }
  $76 = $$0$i$i&255;
  $77 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($76,$0,$__a$1,$__a_end,$__dc,$17,$__grouping,$__g,$__g_end,$__atoms)|0);
  $78 = ($77|0)==(0);
  if (!($78)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $131;$__a$2 = $__a$1;
   break;
  }
  $79 = HEAP32[$65>>2]|0;
  $80 = HEAP32[$67>>2]|0;
  $81 = ($79|0)==($80|0);
  if ($81) {
   $82 = HEAP32[$$pre$i$i$i>>2]|0;
   $83 = ((($82)) + 40|0);
   $84 = HEAP32[$83>>2]|0;
   (FUNCTION_TABLE_ii[$84 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i2 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $85 = ((($79)) + 1|0);
   HEAP32[$65>>2] = $85;
   $$pre$i$i$i2 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $86 = HEAP8[$__grouping>>0]|0;
 $87 = $86 & 1;
 $88 = ($87<<24>>24)==(0);
 $89 = ((($__grouping)) + 4|0);
 $90 = HEAP32[$89>>2]|0;
 $91 = $86&255;
 $92 = $91 >>> 1;
 $93 = $88 ? $92 : $90;
 $94 = ($93|0)==(0);
 $$pre18 = HEAP32[$__g_end>>2]|0;
 if ($94) {
  $103 = $$pre18;
 } else {
  $95 = $$pre18;
  $96 = $__g;
  $97 = (($95) - ($96))|0;
  $98 = ($97|0)<(160);
  if ($98) {
   $99 = HEAP32[$__dc>>2]|0;
   $100 = ((($$pre18)) + 4|0);
   HEAP32[$__g_end>>2] = $100;
   HEAP32[$$pre18>>2] = $99;
   $103 = $100;
  } else {
   $103 = $$pre18;
  }
 }
 $101 = HEAP32[$__a_end>>2]|0;
 $102 = (__ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji($__a$2,$101,$__err,$0)|0);
 HEAP32[$__v>>2] = $102;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$103,$__err);
 $104 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($104) {
  $115 = 0;
 } else {
  $105 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $106 = HEAP32[$105>>2]|0;
  $107 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $108 = HEAP32[$107>>2]|0;
  $109 = ($106|0)==($108|0);
  if ($109) {
   $110 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $111 = ((($110)) + 36|0);
   $112 = HEAP32[$111>>2]|0;
   $113 = (FUNCTION_TABLE_ii[$112 & 63]($$pre$i$i$i$lcssa)|0);
   $114 = ($113|0)==(-1);
   if ($114) {
    HEAP32[$__b>>2] = 0;
    $115 = 0;
   } else {
    $115 = $$pre$i$i$i$lcssa;
   }
  } else {
   $115 = $$pre$i$i$i$lcssa;
  }
 }
 $116 = ($115|0)==(0|0);
 $117 = ($$pre$i2$i$i|0)==(0|0);
 do {
  if ($117) {
   label = 38;
  } else {
   $118 = ((($$pre$i2$i$i)) + 12|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ((($$pre$i2$i$i)) + 16|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = ($119|0)==($121|0);
   if ($122) {
    $123 = HEAP32[$$pre$i2$i$i>>2]|0;
    $124 = ((($123)) + 36|0);
    $125 = HEAP32[$124>>2]|0;
    $126 = (FUNCTION_TABLE_ii[$125 & 63]($$pre$i2$i$i)|0);
    $127 = ($126|0)==(-1);
    if ($127) {
     HEAP32[$__e>>2] = 0;
     label = 38;
     break;
    }
   }
   if (!($116)) {
    label = 39;
   }
  }
 } while(0);
 if ((label|0) == 38) {
  if ($116) {
   label = 39;
  }
 }
 if ((label|0) == 39) {
  $128 = HEAP32[$__err>>2]|0;
  $129 = $128 | 2;
  HEAP32[$__err>>2] = $129;
 }
 $130 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($130|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i2 = 0, $$pre$i2$i$i = 0, $$pre18 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0;
 var $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $phitmp$i = 0, $phitmp$i12 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0;
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$8,0);
 $9 = HEAP8[$__buf>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($__buf)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($__buf)) + 1|0);
 $15 = $11 ? $14 : $13;
 HEAP32[$__a_end>>2] = $15;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $16 = ((($__buf)) + 4|0);
 $17 = HEAP8[$__thousands_sep>>0]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i2 = $$pre;$__a$0 = $15;
 L4: while(1) {
  $18 = ($$pre$i$i$i2|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;
  } else {
   $19 = ((($$pre$i$i$i2)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i2)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i2>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i2)|0);
    $28 = ($27|0)==(-1);
    if ($28) {
     HEAP32[$__b>>2] = 0;
     $$pre$i$i$i = 0;
    } else {
     $$pre$i$i$i = $$pre$i$i$i2;
    }
   } else {
    $$pre$i$i$i = $$pre$i$i$i2;
   }
  }
  $29 = ($$pre$i$i$i|0)==(0|0);
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 13;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if (!($36)) {
     if ($29) {
      $131 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
    $37 = HEAP32[$30>>2]|0;
    $38 = ((($37)) + 36|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
    $41 = ($40|0)==(-1);
    if ($41) {
     HEAP32[$__e>>2] = 0;
     label = 13;
     break;
    } else {
     if ($29) {
      $131 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 13) {
   label = 0;
   if ($29) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $131 = 0;
   }
  }
  $42 = HEAP32[$__a_end>>2]|0;
  $43 = HEAP8[$__buf>>0]|0;
  $44 = $43 & 1;
  $45 = ($44<<24>>24)==(0);
  $46 = HEAP32[$16>>2]|0;
  $47 = $43&255;
  $48 = $47 >>> 1;
  $49 = $45 ? $48 : $46;
  $50 = (($__a$0) + ($49)|0);
  $51 = ($42|0)==($50|0);
  if ($51) {
   $52 = $49 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$52,0);
   $53 = HEAP8[$__buf>>0]|0;
   $54 = $53 & 1;
   $55 = ($54<<24>>24)==(0);
   if ($55) {
    $58 = 10;
   } else {
    $56 = HEAP32[$__buf>>2]|0;
    $57 = $56 & -2;
    $phitmp$i12 = (($57) + -1)|0;
    $58 = $phitmp$i12;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$58,0);
   $59 = HEAP8[$__buf>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   $62 = HEAP32[$12>>2]|0;
   $63 = $61 ? $14 : $62;
   $64 = (($63) + ($49)|0);
   HEAP32[$__a_end>>2] = $64;
   $__a$1 = $63;
  } else {
   $__a$1 = $__a$0;
  }
  $65 = ((($$pre$i$i$i)) + 12|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = ((($$pre$i$i$i)) + 16|0);
  $68 = HEAP32[$67>>2]|0;
  $69 = ($66|0)==($68|0);
  if ($69) {
   $70 = HEAP32[$$pre$i$i$i>>2]|0;
   $71 = ((($70)) + 36|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = (FUNCTION_TABLE_ii[$72 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $73;
  } else {
   $74 = HEAP8[$66>>0]|0;
   $75 = $74&255;
   $$0$i$i = $75;
  }
  $76 = $$0$i$i&255;
  $77 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($76,$0,$__a$1,$__a_end,$__dc,$17,$__grouping,$__g,$__g_end,$__atoms)|0);
  $78 = ($77|0)==(0);
  if (!($78)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $131;$__a$2 = $__a$1;
   break;
  }
  $79 = HEAP32[$65>>2]|0;
  $80 = HEAP32[$67>>2]|0;
  $81 = ($79|0)==($80|0);
  if ($81) {
   $82 = HEAP32[$$pre$i$i$i>>2]|0;
   $83 = ((($82)) + 40|0);
   $84 = HEAP32[$83>>2]|0;
   (FUNCTION_TABLE_ii[$84 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i2 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $85 = ((($79)) + 1|0);
   HEAP32[$65>>2] = $85;
   $$pre$i$i$i2 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $86 = HEAP8[$__grouping>>0]|0;
 $87 = $86 & 1;
 $88 = ($87<<24>>24)==(0);
 $89 = ((($__grouping)) + 4|0);
 $90 = HEAP32[$89>>2]|0;
 $91 = $86&255;
 $92 = $91 >>> 1;
 $93 = $88 ? $92 : $90;
 $94 = ($93|0)==(0);
 $$pre18 = HEAP32[$__g_end>>2]|0;
 if ($94) {
  $103 = $$pre18;
 } else {
  $95 = $$pre18;
  $96 = $__g;
  $97 = (($95) - ($96))|0;
  $98 = ($97|0)<(160);
  if ($98) {
   $99 = HEAP32[$__dc>>2]|0;
   $100 = ((($$pre18)) + 4|0);
   HEAP32[$__g_end>>2] = $100;
   HEAP32[$$pre18>>2] = $99;
   $103 = $100;
  } else {
   $103 = $$pre18;
  }
 }
 $101 = HEAP32[$__a_end>>2]|0;
 $102 = (__ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji($__a$2,$101,$__err,$0)|0);
 HEAP32[$__v>>2] = $102;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$103,$__err);
 $104 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($104) {
  $115 = 0;
 } else {
  $105 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $106 = HEAP32[$105>>2]|0;
  $107 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $108 = HEAP32[$107>>2]|0;
  $109 = ($106|0)==($108|0);
  if ($109) {
   $110 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $111 = ((($110)) + 36|0);
   $112 = HEAP32[$111>>2]|0;
   $113 = (FUNCTION_TABLE_ii[$112 & 63]($$pre$i$i$i$lcssa)|0);
   $114 = ($113|0)==(-1);
   if ($114) {
    HEAP32[$__b>>2] = 0;
    $115 = 0;
   } else {
    $115 = $$pre$i$i$i$lcssa;
   }
  } else {
   $115 = $$pre$i$i$i$lcssa;
  }
 }
 $116 = ($115|0)==(0|0);
 $117 = ($$pre$i2$i$i|0)==(0|0);
 do {
  if ($117) {
   label = 38;
  } else {
   $118 = ((($$pre$i2$i$i)) + 12|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ((($$pre$i2$i$i)) + 16|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = ($119|0)==($121|0);
   if ($122) {
    $123 = HEAP32[$$pre$i2$i$i>>2]|0;
    $124 = ((($123)) + 36|0);
    $125 = HEAP32[$124>>2]|0;
    $126 = (FUNCTION_TABLE_ii[$125 & 63]($$pre$i2$i$i)|0);
    $127 = ($126|0)==(-1);
    if ($127) {
     HEAP32[$__e>>2] = 0;
     label = 38;
     break;
    }
   }
   if (!($116)) {
    label = 39;
   }
  }
 } while(0);
 if ((label|0) == 38) {
  if ($116) {
   label = 39;
  }
 }
 if ((label|0) == 39) {
  $128 = HEAP32[$__err>>2]|0;
  $129 = $128 | 2;
  HEAP32[$__err>>2] = $129;
 }
 $130 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($130|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i2 = 0, $$pre$i2$i$i = 0, $$pre18 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $phitmp$i = 0, $phitmp$i12 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0;
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$8,0);
 $9 = HEAP8[$__buf>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($__buf)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($__buf)) + 1|0);
 $15 = $11 ? $14 : $13;
 HEAP32[$__a_end>>2] = $15;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $16 = ((($__buf)) + 4|0);
 $17 = HEAP8[$__thousands_sep>>0]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i2 = $$pre;$__a$0 = $15;
 L4: while(1) {
  $18 = ($$pre$i$i$i2|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;
  } else {
   $19 = ((($$pre$i$i$i2)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i2)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i2>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i2)|0);
    $28 = ($27|0)==(-1);
    if ($28) {
     HEAP32[$__b>>2] = 0;
     $$pre$i$i$i = 0;
    } else {
     $$pre$i$i$i = $$pre$i$i$i2;
    }
   } else {
    $$pre$i$i$i = $$pre$i$i$i2;
   }
  }
  $29 = ($$pre$i$i$i|0)==(0|0);
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 13;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if (!($36)) {
     if ($29) {
      $136 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
    $37 = HEAP32[$30>>2]|0;
    $38 = ((($37)) + 36|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
    $41 = ($40|0)==(-1);
    if ($41) {
     HEAP32[$__e>>2] = 0;
     label = 13;
     break;
    } else {
     if ($29) {
      $136 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 13) {
   label = 0;
   if ($29) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $136 = 0;
   }
  }
  $42 = HEAP32[$__a_end>>2]|0;
  $43 = HEAP8[$__buf>>0]|0;
  $44 = $43 & 1;
  $45 = ($44<<24>>24)==(0);
  $46 = HEAP32[$16>>2]|0;
  $47 = $43&255;
  $48 = $47 >>> 1;
  $49 = $45 ? $48 : $46;
  $50 = (($__a$0) + ($49)|0);
  $51 = ($42|0)==($50|0);
  if ($51) {
   $52 = $49 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$52,0);
   $53 = HEAP8[$__buf>>0]|0;
   $54 = $53 & 1;
   $55 = ($54<<24>>24)==(0);
   if ($55) {
    $58 = 10;
   } else {
    $56 = HEAP32[$__buf>>2]|0;
    $57 = $56 & -2;
    $phitmp$i12 = (($57) + -1)|0;
    $58 = $phitmp$i12;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$58,0);
   $59 = HEAP8[$__buf>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   $62 = HEAP32[$12>>2]|0;
   $63 = $61 ? $14 : $62;
   $64 = (($63) + ($49)|0);
   HEAP32[$__a_end>>2] = $64;
   $__a$1 = $63;
  } else {
   $__a$1 = $__a$0;
  }
  $65 = ((($$pre$i$i$i)) + 12|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = ((($$pre$i$i$i)) + 16|0);
  $68 = HEAP32[$67>>2]|0;
  $69 = ($66|0)==($68|0);
  if ($69) {
   $70 = HEAP32[$$pre$i$i$i>>2]|0;
   $71 = ((($70)) + 36|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = (FUNCTION_TABLE_ii[$72 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $73;
  } else {
   $74 = HEAP8[$66>>0]|0;
   $75 = $74&255;
   $$0$i$i = $75;
  }
  $76 = $$0$i$i&255;
  $77 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($76,$0,$__a$1,$__a_end,$__dc,$17,$__grouping,$__g,$__g_end,$__atoms)|0);
  $78 = ($77|0)==(0);
  if (!($78)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $136;$__a$2 = $__a$1;
   break;
  }
  $79 = HEAP32[$65>>2]|0;
  $80 = HEAP32[$67>>2]|0;
  $81 = ($79|0)==($80|0);
  if ($81) {
   $82 = HEAP32[$$pre$i$i$i>>2]|0;
   $83 = ((($82)) + 40|0);
   $84 = HEAP32[$83>>2]|0;
   (FUNCTION_TABLE_ii[$84 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i2 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $85 = ((($79)) + 1|0);
   HEAP32[$65>>2] = $85;
   $$pre$i$i$i2 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $86 = HEAP8[$__grouping>>0]|0;
 $87 = $86 & 1;
 $88 = ($87<<24>>24)==(0);
 $89 = ((($__grouping)) + 4|0);
 $90 = HEAP32[$89>>2]|0;
 $91 = $86&255;
 $92 = $91 >>> 1;
 $93 = $88 ? $92 : $90;
 $94 = ($93|0)==(0);
 $$pre18 = HEAP32[$__g_end>>2]|0;
 if ($94) {
  $108 = $$pre18;
 } else {
  $95 = $$pre18;
  $96 = $__g;
  $97 = (($95) - ($96))|0;
  $98 = ($97|0)<(160);
  if ($98) {
   $99 = HEAP32[$__dc>>2]|0;
   $100 = ((($$pre18)) + 4|0);
   HEAP32[$__g_end>>2] = $100;
   HEAP32[$$pre18>>2] = $99;
   $108 = $100;
  } else {
   $108 = $$pre18;
  }
 }
 $101 = HEAP32[$__a_end>>2]|0;
 $102 = (__ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji($__a$2,$101,$__err,$0)|0);
 $103 = tempRet0;
 $104 = $__v;
 $105 = $104;
 HEAP32[$105>>2] = $102;
 $106 = (($104) + 4)|0;
 $107 = $106;
 HEAP32[$107>>2] = $103;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$108,$__err);
 $109 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($109) {
  $120 = 0;
 } else {
  $110 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $111 = HEAP32[$110>>2]|0;
  $112 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $113 = HEAP32[$112>>2]|0;
  $114 = ($111|0)==($113|0);
  if ($114) {
   $115 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $116 = ((($115)) + 36|0);
   $117 = HEAP32[$116>>2]|0;
   $118 = (FUNCTION_TABLE_ii[$117 & 63]($$pre$i$i$i$lcssa)|0);
   $119 = ($118|0)==(-1);
   if ($119) {
    HEAP32[$__b>>2] = 0;
    $120 = 0;
   } else {
    $120 = $$pre$i$i$i$lcssa;
   }
  } else {
   $120 = $$pre$i$i$i$lcssa;
  }
 }
 $121 = ($120|0)==(0|0);
 $122 = ($$pre$i2$i$i|0)==(0|0);
 do {
  if ($122) {
   label = 38;
  } else {
   $123 = ((($$pre$i2$i$i)) + 12|0);
   $124 = HEAP32[$123>>2]|0;
   $125 = ((($$pre$i2$i$i)) + 16|0);
   $126 = HEAP32[$125>>2]|0;
   $127 = ($124|0)==($126|0);
   if ($127) {
    $128 = HEAP32[$$pre$i2$i$i>>2]|0;
    $129 = ((($128)) + 36|0);
    $130 = HEAP32[$129>>2]|0;
    $131 = (FUNCTION_TABLE_ii[$130 & 63]($$pre$i2$i$i)|0);
    $132 = ($131|0)==(-1);
    if ($132) {
     HEAP32[$__e>>2] = 0;
     label = 38;
     break;
    }
   }
   if (!($121)) {
    label = 39;
   }
  }
 } while(0);
 if ((label|0) == 38) {
  if ($121) {
   label = 39;
  }
 }
 if ((label|0) == 39) {
  $133 = HEAP32[$__err>>2]|0;
  $134 = $133 | 2;
  HEAP32[$__err>>2] = $134;
 }
 $135 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($135|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i3 = 0, $$pre$i2$i$i = 0, $$pre19 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0.0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0, $or$cond = 0, $phitmp$i = 0, $phitmp$i13 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0;
 $__atoms = sp + 200|0;
 $__decimal_point = sp + 199|0;
 $__thousands_sep = sp + 198|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 197|0;
 $__exp = sp + 196|0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $0 = ((($__buf)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($__buf)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$7,0);
 $8 = HEAP8[$__buf>>0]|0;
 $9 = $8 & 1;
 $10 = ($9<<24>>24)==(0);
 $11 = ((($__buf)) + 8|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($__buf)) + 1|0);
 $14 = $10 ? $13 : $12;
 HEAP32[$__a_end>>2] = $14;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 HEAP8[$__in_units>>0] = 1;
 HEAP8[$__exp>>0] = 69;
 $15 = ((($__buf)) + 4|0);
 $16 = HEAP8[$__decimal_point>>0]|0;
 $17 = HEAP8[$__thousands_sep>>0]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i3 = $$pre;$__a$0 = $14;
 L4: while(1) {
  $18 = ($$pre$i$i$i3|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;
  } else {
   $19 = ((($$pre$i$i$i3)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i3)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i3>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i3)|0);
    $28 = ($27|0)==(-1);
    if ($28) {
     HEAP32[$__b>>2] = 0;
     $$pre$i$i$i = 0;
    } else {
     $$pre$i$i$i = $$pre$i$i$i3;
    }
   } else {
    $$pre$i$i$i = $$pre$i$i$i3;
   }
  }
  $29 = ($$pre$i$i$i|0)==(0|0);
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 13;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if (!($36)) {
     if ($29) {
      $133 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
    $37 = HEAP32[$30>>2]|0;
    $38 = ((($37)) + 36|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
    $41 = ($40|0)==(-1);
    if ($41) {
     HEAP32[$__e>>2] = 0;
     label = 13;
     break;
    } else {
     if ($29) {
      $133 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 13) {
   label = 0;
   if ($29) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $133 = 0;
   }
  }
  $42 = HEAP32[$__a_end>>2]|0;
  $43 = HEAP8[$__buf>>0]|0;
  $44 = $43 & 1;
  $45 = ($44<<24>>24)==(0);
  $46 = HEAP32[$15>>2]|0;
  $47 = $43&255;
  $48 = $47 >>> 1;
  $49 = $45 ? $48 : $46;
  $50 = (($__a$0) + ($49)|0);
  $51 = ($42|0)==($50|0);
  if ($51) {
   $52 = $49 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$52,0);
   $53 = HEAP8[$__buf>>0]|0;
   $54 = $53 & 1;
   $55 = ($54<<24>>24)==(0);
   if ($55) {
    $58 = 10;
   } else {
    $56 = HEAP32[$__buf>>2]|0;
    $57 = $56 & -2;
    $phitmp$i13 = (($57) + -1)|0;
    $58 = $phitmp$i13;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$58,0);
   $59 = HEAP8[$__buf>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   $62 = HEAP32[$11>>2]|0;
   $63 = $61 ? $13 : $62;
   $64 = (($63) + ($49)|0);
   HEAP32[$__a_end>>2] = $64;
   $__a$1 = $63;
  } else {
   $__a$1 = $__a$0;
  }
  $65 = ((($$pre$i$i$i)) + 12|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = ((($$pre$i$i$i)) + 16|0);
  $68 = HEAP32[$67>>2]|0;
  $69 = ($66|0)==($68|0);
  if ($69) {
   $70 = HEAP32[$$pre$i$i$i>>2]|0;
   $71 = ((($70)) + 36|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = (FUNCTION_TABLE_ii[$72 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $73;
  } else {
   $74 = HEAP8[$66>>0]|0;
   $75 = $74&255;
   $$0$i$i = $75;
  }
  $76 = $$0$i$i&255;
  $77 = (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($76,$__in_units,$__exp,$__a$1,$__a_end,$16,$17,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
  $78 = ($77|0)==(0);
  if (!($78)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $133;$__a$2 = $__a$1;
   break;
  }
  $79 = HEAP32[$65>>2]|0;
  $80 = HEAP32[$67>>2]|0;
  $81 = ($79|0)==($80|0);
  if ($81) {
   $82 = HEAP32[$$pre$i$i$i>>2]|0;
   $83 = ((($82)) + 40|0);
   $84 = HEAP32[$83>>2]|0;
   (FUNCTION_TABLE_ii[$84 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $85 = ((($79)) + 1|0);
   HEAP32[$65>>2] = $85;
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $86 = HEAP8[$__grouping>>0]|0;
 $87 = $86 & 1;
 $88 = ($87<<24>>24)==(0);
 $89 = ((($__grouping)) + 4|0);
 $90 = HEAP32[$89>>2]|0;
 $91 = $86&255;
 $92 = $91 >>> 1;
 $93 = $88 ? $92 : $90;
 $94 = ($93|0)==(0);
 $95 = HEAP8[$__in_units>>0]|0;
 $96 = ($95<<24>>24)==(0);
 $or$cond = $96 | $94;
 $$pre19 = HEAP32[$__g_end>>2]|0;
 if ($or$cond) {
  $105 = $$pre19;
 } else {
  $97 = $$pre19;
  $98 = $__g;
  $99 = (($97) - ($98))|0;
  $100 = ($99|0)<(160);
  if ($100) {
   $101 = HEAP32[$__dc>>2]|0;
   $102 = ((($$pre19)) + 4|0);
   HEAP32[$__g_end>>2] = $102;
   HEAP32[$$pre19>>2] = $101;
   $105 = $102;
  } else {
   $105 = $$pre19;
  }
 }
 $103 = HEAP32[$__a_end>>2]|0;
 $104 = (+__ZNSt3__115__num_get_floatIfEET_PKcS3_Rj($__a$2,$103,$__err));
 HEAPF32[$__v>>2] = $104;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$105,$__err);
 $106 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($106) {
  $117 = 0;
 } else {
  $107 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $108 = HEAP32[$107>>2]|0;
  $109 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $110 = HEAP32[$109>>2]|0;
  $111 = ($108|0)==($110|0);
  if ($111) {
   $112 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $113 = ((($112)) + 36|0);
   $114 = HEAP32[$113>>2]|0;
   $115 = (FUNCTION_TABLE_ii[$114 & 63]($$pre$i$i$i$lcssa)|0);
   $116 = ($115|0)==(-1);
   if ($116) {
    HEAP32[$__b>>2] = 0;
    $117 = 0;
   } else {
    $117 = $$pre$i$i$i$lcssa;
   }
  } else {
   $117 = $$pre$i$i$i$lcssa;
  }
 }
 $118 = ($117|0)==(0|0);
 $119 = ($$pre$i2$i$i|0)==(0|0);
 do {
  if ($119) {
   label = 38;
  } else {
   $120 = ((($$pre$i2$i$i)) + 12|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = ((($$pre$i2$i$i)) + 16|0);
   $123 = HEAP32[$122>>2]|0;
   $124 = ($121|0)==($123|0);
   if ($124) {
    $125 = HEAP32[$$pre$i2$i$i>>2]|0;
    $126 = ((($125)) + 36|0);
    $127 = HEAP32[$126>>2]|0;
    $128 = (FUNCTION_TABLE_ii[$127 & 63]($$pre$i2$i$i)|0);
    $129 = ($128|0)==(-1);
    if ($129) {
     HEAP32[$__e>>2] = 0;
     label = 38;
     break;
    }
   }
   if (!($118)) {
    label = 39;
   }
  }
 } while(0);
 if ((label|0) == 38) {
  if ($118) {
   label = 39;
  }
 }
 if ((label|0) == 39) {
  $130 = HEAP32[$__err>>2]|0;
  $131 = $130 | 2;
  HEAP32[$__err>>2] = $131;
 }
 $132 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($132|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i3 = 0, $$pre$i2$i$i = 0, $$pre19 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0.0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0, $or$cond = 0, $phitmp$i = 0, $phitmp$i13 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0;
 $__atoms = sp + 200|0;
 $__decimal_point = sp + 199|0;
 $__thousands_sep = sp + 198|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 197|0;
 $__exp = sp + 196|0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $0 = ((($__buf)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($__buf)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$7,0);
 $8 = HEAP8[$__buf>>0]|0;
 $9 = $8 & 1;
 $10 = ($9<<24>>24)==(0);
 $11 = ((($__buf)) + 8|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($__buf)) + 1|0);
 $14 = $10 ? $13 : $12;
 HEAP32[$__a_end>>2] = $14;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 HEAP8[$__in_units>>0] = 1;
 HEAP8[$__exp>>0] = 69;
 $15 = ((($__buf)) + 4|0);
 $16 = HEAP8[$__decimal_point>>0]|0;
 $17 = HEAP8[$__thousands_sep>>0]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i3 = $$pre;$__a$0 = $14;
 L4: while(1) {
  $18 = ($$pre$i$i$i3|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;
  } else {
   $19 = ((($$pre$i$i$i3)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i3)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i3>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i3)|0);
    $28 = ($27|0)==(-1);
    if ($28) {
     HEAP32[$__b>>2] = 0;
     $$pre$i$i$i = 0;
    } else {
     $$pre$i$i$i = $$pre$i$i$i3;
    }
   } else {
    $$pre$i$i$i = $$pre$i$i$i3;
   }
  }
  $29 = ($$pre$i$i$i|0)==(0|0);
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 13;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if (!($36)) {
     if ($29) {
      $133 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
    $37 = HEAP32[$30>>2]|0;
    $38 = ((($37)) + 36|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
    $41 = ($40|0)==(-1);
    if ($41) {
     HEAP32[$__e>>2] = 0;
     label = 13;
     break;
    } else {
     if ($29) {
      $133 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 13) {
   label = 0;
   if ($29) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $133 = 0;
   }
  }
  $42 = HEAP32[$__a_end>>2]|0;
  $43 = HEAP8[$__buf>>0]|0;
  $44 = $43 & 1;
  $45 = ($44<<24>>24)==(0);
  $46 = HEAP32[$15>>2]|0;
  $47 = $43&255;
  $48 = $47 >>> 1;
  $49 = $45 ? $48 : $46;
  $50 = (($__a$0) + ($49)|0);
  $51 = ($42|0)==($50|0);
  if ($51) {
   $52 = $49 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$52,0);
   $53 = HEAP8[$__buf>>0]|0;
   $54 = $53 & 1;
   $55 = ($54<<24>>24)==(0);
   if ($55) {
    $58 = 10;
   } else {
    $56 = HEAP32[$__buf>>2]|0;
    $57 = $56 & -2;
    $phitmp$i13 = (($57) + -1)|0;
    $58 = $phitmp$i13;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$58,0);
   $59 = HEAP8[$__buf>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   $62 = HEAP32[$11>>2]|0;
   $63 = $61 ? $13 : $62;
   $64 = (($63) + ($49)|0);
   HEAP32[$__a_end>>2] = $64;
   $__a$1 = $63;
  } else {
   $__a$1 = $__a$0;
  }
  $65 = ((($$pre$i$i$i)) + 12|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = ((($$pre$i$i$i)) + 16|0);
  $68 = HEAP32[$67>>2]|0;
  $69 = ($66|0)==($68|0);
  if ($69) {
   $70 = HEAP32[$$pre$i$i$i>>2]|0;
   $71 = ((($70)) + 36|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = (FUNCTION_TABLE_ii[$72 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $73;
  } else {
   $74 = HEAP8[$66>>0]|0;
   $75 = $74&255;
   $$0$i$i = $75;
  }
  $76 = $$0$i$i&255;
  $77 = (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($76,$__in_units,$__exp,$__a$1,$__a_end,$16,$17,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
  $78 = ($77|0)==(0);
  if (!($78)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $133;$__a$2 = $__a$1;
   break;
  }
  $79 = HEAP32[$65>>2]|0;
  $80 = HEAP32[$67>>2]|0;
  $81 = ($79|0)==($80|0);
  if ($81) {
   $82 = HEAP32[$$pre$i$i$i>>2]|0;
   $83 = ((($82)) + 40|0);
   $84 = HEAP32[$83>>2]|0;
   (FUNCTION_TABLE_ii[$84 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $85 = ((($79)) + 1|0);
   HEAP32[$65>>2] = $85;
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $86 = HEAP8[$__grouping>>0]|0;
 $87 = $86 & 1;
 $88 = ($87<<24>>24)==(0);
 $89 = ((($__grouping)) + 4|0);
 $90 = HEAP32[$89>>2]|0;
 $91 = $86&255;
 $92 = $91 >>> 1;
 $93 = $88 ? $92 : $90;
 $94 = ($93|0)==(0);
 $95 = HEAP8[$__in_units>>0]|0;
 $96 = ($95<<24>>24)==(0);
 $or$cond = $96 | $94;
 $$pre19 = HEAP32[$__g_end>>2]|0;
 if ($or$cond) {
  $105 = $$pre19;
 } else {
  $97 = $$pre19;
  $98 = $__g;
  $99 = (($97) - ($98))|0;
  $100 = ($99|0)<(160);
  if ($100) {
   $101 = HEAP32[$__dc>>2]|0;
   $102 = ((($$pre19)) + 4|0);
   HEAP32[$__g_end>>2] = $102;
   HEAP32[$$pre19>>2] = $101;
   $105 = $102;
  } else {
   $105 = $$pre19;
  }
 }
 $103 = HEAP32[$__a_end>>2]|0;
 $104 = (+__ZNSt3__115__num_get_floatIdEET_PKcS3_Rj($__a$2,$103,$__err));
 HEAPF64[$__v>>3] = $104;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$105,$__err);
 $106 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($106) {
  $117 = 0;
 } else {
  $107 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $108 = HEAP32[$107>>2]|0;
  $109 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $110 = HEAP32[$109>>2]|0;
  $111 = ($108|0)==($110|0);
  if ($111) {
   $112 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $113 = ((($112)) + 36|0);
   $114 = HEAP32[$113>>2]|0;
   $115 = (FUNCTION_TABLE_ii[$114 & 63]($$pre$i$i$i$lcssa)|0);
   $116 = ($115|0)==(-1);
   if ($116) {
    HEAP32[$__b>>2] = 0;
    $117 = 0;
   } else {
    $117 = $$pre$i$i$i$lcssa;
   }
  } else {
   $117 = $$pre$i$i$i$lcssa;
  }
 }
 $118 = ($117|0)==(0|0);
 $119 = ($$pre$i2$i$i|0)==(0|0);
 do {
  if ($119) {
   label = 38;
  } else {
   $120 = ((($$pre$i2$i$i)) + 12|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = ((($$pre$i2$i$i)) + 16|0);
   $123 = HEAP32[$122>>2]|0;
   $124 = ($121|0)==($123|0);
   if ($124) {
    $125 = HEAP32[$$pre$i2$i$i>>2]|0;
    $126 = ((($125)) + 36|0);
    $127 = HEAP32[$126>>2]|0;
    $128 = (FUNCTION_TABLE_ii[$127 & 63]($$pre$i2$i$i)|0);
    $129 = ($128|0)==(-1);
    if ($129) {
     HEAP32[$__e>>2] = 0;
     label = 38;
     break;
    }
   }
   if (!($118)) {
    label = 39;
   }
  }
 } while(0);
 if ((label|0) == 38) {
  if ($118) {
   label = 39;
  }
 }
 if ((label|0) == 39) {
  $130 = HEAP32[$__err>>2]|0;
  $131 = $130 | 2;
  HEAP32[$__err>>2] = $131;
 }
 $132 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($132|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i3 = 0, $$pre$i2$i$i = 0, $$pre19 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0.0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0, $or$cond = 0, $phitmp$i = 0, $phitmp$i13 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0;
 $__atoms = sp + 200|0;
 $__decimal_point = sp + 199|0;
 $__thousands_sep = sp + 198|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 197|0;
 $__exp = sp + 196|0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $0 = ((($__buf)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($__buf)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$7,0);
 $8 = HEAP8[$__buf>>0]|0;
 $9 = $8 & 1;
 $10 = ($9<<24>>24)==(0);
 $11 = ((($__buf)) + 8|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($__buf)) + 1|0);
 $14 = $10 ? $13 : $12;
 HEAP32[$__a_end>>2] = $14;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 HEAP8[$__in_units>>0] = 1;
 HEAP8[$__exp>>0] = 69;
 $15 = ((($__buf)) + 4|0);
 $16 = HEAP8[$__decimal_point>>0]|0;
 $17 = HEAP8[$__thousands_sep>>0]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i3 = $$pre;$__a$0 = $14;
 L4: while(1) {
  $18 = ($$pre$i$i$i3|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;
  } else {
   $19 = ((($$pre$i$i$i3)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i3)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i3>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i3)|0);
    $28 = ($27|0)==(-1);
    if ($28) {
     HEAP32[$__b>>2] = 0;
     $$pre$i$i$i = 0;
    } else {
     $$pre$i$i$i = $$pre$i$i$i3;
    }
   } else {
    $$pre$i$i$i = $$pre$i$i$i3;
   }
  }
  $29 = ($$pre$i$i$i|0)==(0|0);
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 13;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if (!($36)) {
     if ($29) {
      $133 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
    $37 = HEAP32[$30>>2]|0;
    $38 = ((($37)) + 36|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
    $41 = ($40|0)==(-1);
    if ($41) {
     HEAP32[$__e>>2] = 0;
     label = 13;
     break;
    } else {
     if ($29) {
      $133 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 13) {
   label = 0;
   if ($29) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $133 = 0;
   }
  }
  $42 = HEAP32[$__a_end>>2]|0;
  $43 = HEAP8[$__buf>>0]|0;
  $44 = $43 & 1;
  $45 = ($44<<24>>24)==(0);
  $46 = HEAP32[$15>>2]|0;
  $47 = $43&255;
  $48 = $47 >>> 1;
  $49 = $45 ? $48 : $46;
  $50 = (($__a$0) + ($49)|0);
  $51 = ($42|0)==($50|0);
  if ($51) {
   $52 = $49 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$52,0);
   $53 = HEAP8[$__buf>>0]|0;
   $54 = $53 & 1;
   $55 = ($54<<24>>24)==(0);
   if ($55) {
    $58 = 10;
   } else {
    $56 = HEAP32[$__buf>>2]|0;
    $57 = $56 & -2;
    $phitmp$i13 = (($57) + -1)|0;
    $58 = $phitmp$i13;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$58,0);
   $59 = HEAP8[$__buf>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   $62 = HEAP32[$11>>2]|0;
   $63 = $61 ? $13 : $62;
   $64 = (($63) + ($49)|0);
   HEAP32[$__a_end>>2] = $64;
   $__a$1 = $63;
  } else {
   $__a$1 = $__a$0;
  }
  $65 = ((($$pre$i$i$i)) + 12|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = ((($$pre$i$i$i)) + 16|0);
  $68 = HEAP32[$67>>2]|0;
  $69 = ($66|0)==($68|0);
  if ($69) {
   $70 = HEAP32[$$pre$i$i$i>>2]|0;
   $71 = ((($70)) + 36|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = (FUNCTION_TABLE_ii[$72 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $73;
  } else {
   $74 = HEAP8[$66>>0]|0;
   $75 = $74&255;
   $$0$i$i = $75;
  }
  $76 = $$0$i$i&255;
  $77 = (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($76,$__in_units,$__exp,$__a$1,$__a_end,$16,$17,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
  $78 = ($77|0)==(0);
  if (!($78)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $133;$__a$2 = $__a$1;
   break;
  }
  $79 = HEAP32[$65>>2]|0;
  $80 = HEAP32[$67>>2]|0;
  $81 = ($79|0)==($80|0);
  if ($81) {
   $82 = HEAP32[$$pre$i$i$i>>2]|0;
   $83 = ((($82)) + 40|0);
   $84 = HEAP32[$83>>2]|0;
   (FUNCTION_TABLE_ii[$84 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $85 = ((($79)) + 1|0);
   HEAP32[$65>>2] = $85;
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $86 = HEAP8[$__grouping>>0]|0;
 $87 = $86 & 1;
 $88 = ($87<<24>>24)==(0);
 $89 = ((($__grouping)) + 4|0);
 $90 = HEAP32[$89>>2]|0;
 $91 = $86&255;
 $92 = $91 >>> 1;
 $93 = $88 ? $92 : $90;
 $94 = ($93|0)==(0);
 $95 = HEAP8[$__in_units>>0]|0;
 $96 = ($95<<24>>24)==(0);
 $or$cond = $96 | $94;
 $$pre19 = HEAP32[$__g_end>>2]|0;
 if ($or$cond) {
  $105 = $$pre19;
 } else {
  $97 = $$pre19;
  $98 = $__g;
  $99 = (($97) - ($98))|0;
  $100 = ($99|0)<(160);
  if ($100) {
   $101 = HEAP32[$__dc>>2]|0;
   $102 = ((($$pre19)) + 4|0);
   HEAP32[$__g_end>>2] = $102;
   HEAP32[$$pre19>>2] = $101;
   $105 = $102;
  } else {
   $105 = $$pre19;
  }
 }
 $103 = HEAP32[$__a_end>>2]|0;
 $104 = (+__ZNSt3__115__num_get_floatIeEET_PKcS3_Rj($__a$2,$103,$__err));
 HEAPF64[$__v>>3] = $104;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$105,$__err);
 $106 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($106) {
  $117 = 0;
 } else {
  $107 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $108 = HEAP32[$107>>2]|0;
  $109 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $110 = HEAP32[$109>>2]|0;
  $111 = ($108|0)==($110|0);
  if ($111) {
   $112 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $113 = ((($112)) + 36|0);
   $114 = HEAP32[$113>>2]|0;
   $115 = (FUNCTION_TABLE_ii[$114 & 63]($$pre$i$i$i$lcssa)|0);
   $116 = ($115|0)==(-1);
   if ($116) {
    HEAP32[$__b>>2] = 0;
    $117 = 0;
   } else {
    $117 = $$pre$i$i$i$lcssa;
   }
  } else {
   $117 = $$pre$i$i$i$lcssa;
  }
 }
 $118 = ($117|0)==(0|0);
 $119 = ($$pre$i2$i$i|0)==(0|0);
 do {
  if ($119) {
   label = 38;
  } else {
   $120 = ((($$pre$i2$i$i)) + 12|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = ((($$pre$i2$i$i)) + 16|0);
   $123 = HEAP32[$122>>2]|0;
   $124 = ($121|0)==($123|0);
   if ($124) {
    $125 = HEAP32[$$pre$i2$i$i>>2]|0;
    $126 = ((($125)) + 36|0);
    $127 = HEAP32[$126>>2]|0;
    $128 = (FUNCTION_TABLE_ii[$127 & 63]($$pre$i2$i$i)|0);
    $129 = ($128|0)==(-1);
    if ($129) {
     HEAP32[$__e>>2] = 0;
     label = 38;
     break;
    }
   }
   if (!($118)) {
    label = 39;
   }
  }
 } while(0);
 if ((label|0) == 38) {
  if ($118) {
   label = 39;
  }
 }
 if ((label|0) == 39) {
  $130 = HEAP32[$__err>>2]|0;
  $131 = $130 | 2;
  HEAP32[$__err>>2] = $131;
 }
 $132 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($132|0);
}
function __ZNSt3__110__sscanf_lEPKcP15__locale_structS1_z($__s,$__l,$__format,$varargs) {
 $__s = $__s|0;
 $__l = $__l|0;
 $__format = $__format|0;
 $varargs = $varargs|0;
 var $0 = 0, $1 = 0, $2 = 0, $__va = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__va = sp;
 HEAP32[$__va>>2] = $varargs;
 $0 = (_uselocale(($__l|0))|0);
 $1 = (_vsscanf($__s,$__format,$__va)|0);
 $2 = ($0|0)==(0|0);
 if (!($2)) {
  (_uselocale(($0|0))|0);
 }
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$__e,$__kb,$__ke,$__ct,$__err,$__case_sensitive) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__kb = $__kb|0;
 $__ke = $__ke|0;
 $__ct = $__ct|0;
 $__err = $__err|0;
 $__case_sensitive = $__case_sensitive|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$025 = 0, $$033 = 0, $$lcssa = 0, $$pre$i$i$i = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $$pre$i3$i$i$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;
 var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__c$0 = 0, $__consume$0$off0$lcssa = 0, $__consume$0$off038 = 0, $__consume$1$off0 = 0;
 var $__indx$0 = 0, $__kc$0 = 0, $__ky$052 = 0, $__ky1$039 = 0, $__ky2$046 = 0, $__n_does_match$0$lcssa = 0, $__n_does_match$050 = 0, $__n_does_match$1 = 0, $__n_does_match$2 = 0, $__n_does_match$3$lcssa = 0, $__n_does_match$335 = 0, $__n_does_match$4 = 0, $__n_does_match$544 = 0, $__n_does_match$6 = 0, $__n_might_match$0$lcssa = 0, $__n_might_match$049 = 0, $__n_might_match$1 = 0, $__n_might_match$2 = 0, $__n_might_match$3$lcssa = 0, $__n_might_match$334 = 0;
 var $__n_might_match$4 = 0, $__st$051 = 0, $__st$136 = 0, $__st$245 = 0, $__st$332 = 0, $__statbuf = 0, $__status$0 = 0, $or$cond = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i6 = 0, $tmp$i$i14 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $__statbuf = sp;
 $0 = $__ke;
 $1 = $__kb;
 $2 = (($0) - ($1))|0;
 $3 = (($2|0) / 12)&-1;
 $4 = ($3>>>0)>(100);
 if ($4) {
  $5 = (_malloc($3)|0);
  $6 = ($5|0)==(0|0);
  if ($6) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $162 = $5;$__status$0 = $5;
  }
 } else {
  $162 = 0;$__status$0 = $__statbuf;
 }
 $7 = ($__kb|0)==($__ke|0);
 if ($7) {
  $__n_does_match$0$lcssa = 0;$__n_might_match$0$lcssa = $3;
 } else {
  $__ky$052 = $__kb;$__n_does_match$050 = 0;$__n_might_match$049 = $3;$__st$051 = $__status$0;
  while(1) {
   $10 = HEAP8[$__ky$052>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   if ($12) {
    $15 = $10&255;
    $16 = $15 >>> 1;
    $17 = $16;
   } else {
    $13 = ((($__ky$052)) + 4|0);
    $14 = HEAP32[$13>>2]|0;
    $17 = $14;
   }
   $18 = ($17|0)==(0);
   if ($18) {
    HEAP8[$__st$051>>0] = 2;
    $19 = (($__n_might_match$049) + -1)|0;
    $20 = (($__n_does_match$050) + 1)|0;
    $__n_does_match$1 = $20;$__n_might_match$1 = $19;
   } else {
    HEAP8[$__st$051>>0] = 1;
    $__n_does_match$1 = $__n_does_match$050;$__n_might_match$1 = $__n_might_match$049;
   }
   $21 = ((($__ky$052)) + 12|0);
   $22 = ((($__st$051)) + 1|0);
   $23 = ($21|0)==($__ke|0);
   if ($23) {
    $__n_does_match$0$lcssa = $__n_does_match$1;$__n_might_match$0$lcssa = $__n_might_match$1;
    break;
   } else {
    $__ky$052 = $21;$__n_does_match$050 = $__n_does_match$1;$__n_might_match$049 = $__n_might_match$1;$__st$051 = $22;
   }
  }
 }
 $8 = ($__kb|0)==($__ke|0);
 $9 = ($__kb|0)==($__ke|0);
 $__indx$0 = 0;$__n_does_match$2 = $__n_does_match$0$lcssa;$__n_might_match$2 = $__n_might_match$0$lcssa;
 L17: while(1) {
  $24 = HEAP32[$__b>>2]|0;
  $25 = ($24|0)==(0|0);
  do {
   if ($25) {
    $51 = 1;
   } else {
    $26 = ((($24)) + 12|0);
    $27 = HEAP32[$26>>2]|0;
    $28 = ((($24)) + 16|0);
    $29 = HEAP32[$28>>2]|0;
    $30 = ($27|0)==($29|0);
    if ($30) {
     $31 = HEAP32[$24>>2]|0;
     $32 = ((($31)) + 36|0);
     $33 = HEAP32[$32>>2]|0;
     $34 = (FUNCTION_TABLE_ii[$33 & 63]($24)|0);
     $$0$i$i$i$i3 = $34;
    } else {
     $35 = HEAP32[$27>>2]|0;
     $$0$i$i$i$i3 = $35;
    }
    $36 = ($$0$i$i$i$i3|0)==(-1);
    if ($36) {
     HEAP32[$__b>>2] = 0;
     $51 = 1;
     break;
    } else {
     $$pre$i$i$i5 = HEAP32[$__b>>2]|0;
     $phitmp$i$i$i6 = ($$pre$i$i$i5|0)==(0|0);
     $51 = $phitmp$i$i$i6;
     break;
    }
   }
  } while(0);
  $37 = HEAP32[$__e>>2]|0;
  $38 = ($37|0)==(0|0);
  if ($38) {
   $$pre$i3$i$i = 0;$50 = 1;
  } else {
   $39 = ((($37)) + 12|0);
   $40 = HEAP32[$39>>2]|0;
   $41 = ((($37)) + 16|0);
   $42 = HEAP32[$41>>2]|0;
   $43 = ($40|0)==($42|0);
   if ($43) {
    $44 = HEAP32[$37>>2]|0;
    $45 = ((($44)) + 36|0);
    $46 = HEAP32[$45>>2]|0;
    $47 = (FUNCTION_TABLE_ii[$46 & 63]($37)|0);
    $$0$i$i1$i$i9 = $47;
   } else {
    $48 = HEAP32[$40>>2]|0;
    $$0$i$i1$i$i9 = $48;
   }
   $49 = ($$0$i$i1$i$i9|0)==(-1);
   if ($49) {
    HEAP32[$__e>>2] = 0;
    $$pre$i3$i$i = 0;$50 = 1;
   } else {
    $$pre$i3$i$i = $37;$50 = 0;
   }
  }
  $tmp$i$i14 = $51 ^ $50;
  $52 = ($__n_might_match$2|0)!=(0);
  $53 = $52 & $tmp$i$i14;
  $54 = HEAP32[$__b>>2]|0;
  if (!($53)) {
   $$lcssa = $54;$$pre$i3$i$i$lcssa = $$pre$i3$i$i;
   break;
  }
  $55 = ((($54)) + 12|0);
  $56 = HEAP32[$55>>2]|0;
  $57 = ((($54)) + 16|0);
  $58 = HEAP32[$57>>2]|0;
  $59 = ($56|0)==($58|0);
  if ($59) {
   $60 = HEAP32[$54>>2]|0;
   $61 = ((($60)) + 36|0);
   $62 = HEAP32[$61>>2]|0;
   $63 = (FUNCTION_TABLE_ii[$62 & 63]($54)|0);
   $$0$i$i = $63;
  } else {
   $64 = HEAP32[$56>>2]|0;
   $$0$i$i = $64;
  }
  if ($__case_sensitive) {
   $__c$0 = $$0$i$i;
  } else {
   $65 = HEAP32[$__ct>>2]|0;
   $66 = ((($65)) + 28|0);
   $67 = HEAP32[$66>>2]|0;
   $68 = (FUNCTION_TABLE_iii[$67 & 15]($__ct,$$0$i$i)|0);
   $__c$0 = $68;
  }
  $69 = (($__indx$0) + 1)|0;
  if ($8) {
   $__consume$0$off0$lcssa = 0;$__n_does_match$3$lcssa = $__n_does_match$2;$__n_might_match$3$lcssa = $__n_might_match$2;
  } else {
   $__consume$0$off038 = 0;$__ky1$039 = $__kb;$__n_does_match$335 = $__n_does_match$2;$__n_might_match$334 = $__n_might_match$2;$__st$136 = $__status$0;
   while(1) {
    $70 = HEAP8[$__st$136>>0]|0;
    $71 = ($70<<24>>24)==(1);
    do {
     if ($71) {
      $72 = HEAP8[$__ky1$039>>0]|0;
      $73 = $72 & 1;
      $74 = ($73<<24>>24)==(0);
      if ($74) {
       $77 = ((($__ky1$039)) + 4|0);
       $79 = $77;
      } else {
       $75 = ((($__ky1$039)) + 8|0);
       $76 = HEAP32[$75>>2]|0;
       $79 = $76;
      }
      $78 = (($79) + ($__indx$0<<2)|0);
      $80 = HEAP32[$78>>2]|0;
      if ($__case_sensitive) {
       $__kc$0 = $80;
      } else {
       $81 = HEAP32[$__ct>>2]|0;
       $82 = ((($81)) + 28|0);
       $83 = HEAP32[$82>>2]|0;
       $84 = (FUNCTION_TABLE_iii[$83 & 15]($__ct,$80)|0);
       $__kc$0 = $84;
      }
      $85 = ($__c$0|0)==($__kc$0|0);
      if (!($85)) {
       HEAP8[$__st$136>>0] = 0;
       $97 = (($__n_might_match$334) + -1)|0;
       $__consume$1$off0 = $__consume$0$off038;$__n_does_match$4 = $__n_does_match$335;$__n_might_match$4 = $97;
       break;
      }
      $86 = HEAP8[$__ky1$039>>0]|0;
      $87 = $86 & 1;
      $88 = ($87<<24>>24)==(0);
      if ($88) {
       $91 = $86&255;
       $92 = $91 >>> 1;
       $93 = $92;
      } else {
       $89 = ((($__ky1$039)) + 4|0);
       $90 = HEAP32[$89>>2]|0;
       $93 = $90;
      }
      $94 = ($93|0)==($69|0);
      if ($94) {
       HEAP8[$__st$136>>0] = 2;
       $95 = (($__n_might_match$334) + -1)|0;
       $96 = (($__n_does_match$335) + 1)|0;
       $__consume$1$off0 = 1;$__n_does_match$4 = $96;$__n_might_match$4 = $95;
      } else {
       $__consume$1$off0 = 1;$__n_does_match$4 = $__n_does_match$335;$__n_might_match$4 = $__n_might_match$334;
      }
     } else {
      $__consume$1$off0 = $__consume$0$off038;$__n_does_match$4 = $__n_does_match$335;$__n_might_match$4 = $__n_might_match$334;
     }
    } while(0);
    $98 = ((($__ky1$039)) + 12|0);
    $99 = ((($__st$136)) + 1|0);
    $100 = ($98|0)==($__ke|0);
    if ($100) {
     $__consume$0$off0$lcssa = $__consume$1$off0;$__n_does_match$3$lcssa = $__n_does_match$4;$__n_might_match$3$lcssa = $__n_might_match$4;
     break;
    } else {
     $__consume$0$off038 = $__consume$1$off0;$__ky1$039 = $98;$__n_does_match$335 = $__n_does_match$4;$__n_might_match$334 = $__n_might_match$4;$__st$136 = $99;
    }
   }
  }
  if (!($__consume$0$off0$lcssa)) {
   $__indx$0 = $69;$__n_does_match$2 = $__n_does_match$3$lcssa;$__n_might_match$2 = $__n_might_match$3$lcssa;
   continue;
  }
  $101 = HEAP32[$__b>>2]|0;
  $102 = ((($101)) + 12|0);
  $103 = HEAP32[$102>>2]|0;
  $104 = ((($101)) + 16|0);
  $105 = HEAP32[$104>>2]|0;
  $106 = ($103|0)==($105|0);
  if ($106) {
   $107 = HEAP32[$101>>2]|0;
   $108 = ((($107)) + 40|0);
   $109 = HEAP32[$108>>2]|0;
   (FUNCTION_TABLE_ii[$109 & 63]($101)|0);
  } else {
   $110 = ((($103)) + 4|0);
   HEAP32[$102>>2] = $110;
  }
  $111 = (($__n_does_match$3$lcssa) + ($__n_might_match$3$lcssa))|0;
  $112 = ($111>>>0)<(2);
  $or$cond = $112 | $9;
  if ($or$cond) {
   $__indx$0 = $69;$__n_does_match$2 = $__n_does_match$3$lcssa;$__n_might_match$2 = $__n_might_match$3$lcssa;
   continue;
  } else {
   $__ky2$046 = $__kb;$__n_does_match$544 = $__n_does_match$3$lcssa;$__st$245 = $__status$0;
  }
  while(1) {
   $113 = HEAP8[$__st$245>>0]|0;
   $114 = ($113<<24>>24)==(2);
   if ($114) {
    $115 = HEAP8[$__ky2$046>>0]|0;
    $116 = $115 & 1;
    $117 = ($116<<24>>24)==(0);
    if ($117) {
     $120 = $115&255;
     $121 = $120 >>> 1;
     $122 = $121;
    } else {
     $118 = ((($__ky2$046)) + 4|0);
     $119 = HEAP32[$118>>2]|0;
     $122 = $119;
    }
    $123 = ($122|0)==($69|0);
    if ($123) {
     $__n_does_match$6 = $__n_does_match$544;
    } else {
     HEAP8[$__st$245>>0] = 0;
     $124 = (($__n_does_match$544) + -1)|0;
     $__n_does_match$6 = $124;
    }
   } else {
    $__n_does_match$6 = $__n_does_match$544;
   }
   $125 = ((($__ky2$046)) + 12|0);
   $126 = ((($__st$245)) + 1|0);
   $127 = ($125|0)==($__ke|0);
   if ($127) {
    $__indx$0 = $69;$__n_does_match$2 = $__n_does_match$6;$__n_might_match$2 = $__n_might_match$3$lcssa;
    continue L17;
   } else {
    $__ky2$046 = $125;$__n_does_match$544 = $__n_does_match$6;$__st$245 = $126;
   }
  }
 }
 $128 = ($$lcssa|0)==(0|0);
 do {
  if ($128) {
   $163 = 1;
  } else {
   $129 = ((($$lcssa)) + 12|0);
   $130 = HEAP32[$129>>2]|0;
   $131 = ((($$lcssa)) + 16|0);
   $132 = HEAP32[$131>>2]|0;
   $133 = ($130|0)==($132|0);
   if ($133) {
    $134 = HEAP32[$$lcssa>>2]|0;
    $135 = ((($134)) + 36|0);
    $136 = HEAP32[$135>>2]|0;
    $137 = (FUNCTION_TABLE_ii[$136 & 63]($$lcssa)|0);
    $$0$i$i$i$i = $137;
   } else {
    $138 = HEAP32[$130>>2]|0;
    $$0$i$i$i$i = $138;
   }
   $139 = ($$0$i$i$i$i|0)==(-1);
   if ($139) {
    HEAP32[$__b>>2] = 0;
    $163 = 1;
    break;
   } else {
    $$pre$i$i$i = HEAP32[$__b>>2]|0;
    $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
    $163 = $phitmp$i$i$i;
    break;
   }
  }
 } while(0);
 $140 = ($$pre$i3$i$i$lcssa|0)==(0|0);
 do {
  if ($140) {
   label = 72;
  } else {
   $141 = ((($$pre$i3$i$i$lcssa)) + 12|0);
   $142 = HEAP32[$141>>2]|0;
   $143 = ((($$pre$i3$i$i$lcssa)) + 16|0);
   $144 = HEAP32[$143>>2]|0;
   $145 = ($142|0)==($144|0);
   if ($145) {
    $146 = HEAP32[$$pre$i3$i$i$lcssa>>2]|0;
    $147 = ((($146)) + 36|0);
    $148 = HEAP32[$147>>2]|0;
    $149 = (FUNCTION_TABLE_ii[$148 & 63]($$pre$i3$i$i$lcssa)|0);
    $$0$i$i1$i$i = $149;
   } else {
    $150 = HEAP32[$142>>2]|0;
    $$0$i$i1$i$i = $150;
   }
   $151 = ($$0$i$i1$i$i|0)==(-1);
   if ($151) {
    HEAP32[$__e>>2] = 0;
    label = 72;
    break;
   } else {
    if ($163) {
     break;
    } else {
     label = 74;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 72) {
  if ($163) {
   label = 74;
  }
 }
 if ((label|0) == 74) {
  $152 = HEAP32[$__err>>2]|0;
  $153 = $152 | 2;
  HEAP32[$__err>>2] = $153;
 }
 $154 = ($__kb|0)==($__ke|0);
 L107: do {
  if ($154) {
   label = 78;
  } else {
   $$033 = $__kb;$__st$332 = $__status$0;
   while(1) {
    $155 = HEAP8[$__st$332>>0]|0;
    $156 = ($155<<24>>24)==(2);
    if ($156) {
     $$025 = $$033;
     break L107;
    }
    $157 = ((($$033)) + 12|0);
    $158 = ((($__st$332)) + 1|0);
    $159 = ($157|0)==($__ke|0);
    if ($159) {
     label = 78;
     break;
    } else {
     $$033 = $157;$__st$332 = $158;
    }
   }
  }
 } while(0);
 if ((label|0) == 78) {
  $160 = HEAP32[$__err>>2]|0;
  $161 = $160 | 4;
  HEAP32[$__err>>2] = $161;
  $$025 = $__ke;
 }
 _free($162);
 STACKTOP = sp;return ($$025|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i3 = 0, $$pre$i3$i$i = 0, $$pre21 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $phitmp$i = 0, $phitmp$i16 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0;
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$8,0);
 $9 = HEAP8[$__buf>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($__buf)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($__buf)) + 1|0);
 $15 = $11 ? $14 : $13;
 HEAP32[$__a_end>>2] = $15;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $16 = ((($__buf)) + 4|0);
 $17 = HEAP32[$__thousands_sep>>2]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i3 = $$pre;$__a$0 = $15;
 L4: while(1) {
  $18 = ($$pre$i$i$i3|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;$130 = 1;
  } else {
   $19 = ((($$pre$i$i$i3)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i3)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i3>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i3)|0);
    $$0$i$i$i$i1 = $27;
   } else {
    $28 = HEAP32[$20>>2]|0;
    $$0$i$i$i$i1 = $28;
   }
   $29 = ($$0$i$i$i$i1|0)==(-1);
   if ($29) {
    HEAP32[$__b>>2] = 0;
    $$pre$i$i$i = 0;$130 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i3;$130 = 0;
   }
  }
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 16;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if ($36) {
     $37 = HEAP32[$30>>2]|0;
     $38 = ((($37)) + 36|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
     $$0$i$i1$i$i7 = $40;
    } else {
     $41 = HEAP32[$33>>2]|0;
     $$0$i$i1$i$i7 = $41;
    }
    $42 = ($$0$i$i1$i$i7|0)==(-1);
    if ($42) {
     HEAP32[$__e>>2] = 0;
     label = 16;
     break;
    } else {
     if ($130) {
      $131 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 16) {
   label = 0;
   if ($130) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $131 = 0;
   }
  }
  $43 = HEAP32[$__a_end>>2]|0;
  $44 = HEAP8[$__buf>>0]|0;
  $45 = $44 & 1;
  $46 = ($45<<24>>24)==(0);
  $47 = HEAP32[$16>>2]|0;
  $48 = $44&255;
  $49 = $48 >>> 1;
  $50 = $46 ? $49 : $47;
  $51 = (($__a$0) + ($50)|0);
  $52 = ($43|0)==($51|0);
  if ($52) {
   $53 = $50 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$53,0);
   $54 = HEAP8[$__buf>>0]|0;
   $55 = $54 & 1;
   $56 = ($55<<24>>24)==(0);
   if ($56) {
    $59 = 10;
   } else {
    $57 = HEAP32[$__buf>>2]|0;
    $58 = $57 & -2;
    $phitmp$i16 = (($58) + -1)|0;
    $59 = $phitmp$i16;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$59,0);
   $60 = HEAP8[$__buf>>0]|0;
   $61 = $60 & 1;
   $62 = ($61<<24>>24)==(0);
   $63 = HEAP32[$12>>2]|0;
   $64 = $62 ? $14 : $63;
   $65 = (($64) + ($50)|0);
   HEAP32[$__a_end>>2] = $65;
   $__a$1 = $64;
  } else {
   $__a$1 = $__a$0;
  }
  $66 = ((($$pre$i$i$i)) + 12|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = ((($$pre$i$i$i)) + 16|0);
  $69 = HEAP32[$68>>2]|0;
  $70 = ($67|0)==($69|0);
  if ($70) {
   $71 = HEAP32[$$pre$i$i$i>>2]|0;
   $72 = ((($71)) + 36|0);
   $73 = HEAP32[$72>>2]|0;
   $74 = (FUNCTION_TABLE_ii[$73 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $74;
  } else {
   $75 = HEAP32[$67>>2]|0;
   $$0$i$i = $75;
  }
  $76 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$17,$__grouping,$__g,$__g_end,$__atoms)|0);
  $77 = ($76|0)==(0);
  if (!($77)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $131;$__a$2 = $__a$1;
   break;
  }
  $78 = HEAP32[$66>>2]|0;
  $79 = HEAP32[$68>>2]|0;
  $80 = ($78|0)==($79|0);
  if ($80) {
   $81 = HEAP32[$$pre$i$i$i>>2]|0;
   $82 = ((($81)) + 40|0);
   $83 = HEAP32[$82>>2]|0;
   (FUNCTION_TABLE_ii[$83 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $84 = ((($78)) + 4|0);
   HEAP32[$66>>2] = $84;
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $85 = HEAP8[$__grouping>>0]|0;
 $86 = $85 & 1;
 $87 = ($86<<24>>24)==(0);
 $88 = ((($__grouping)) + 4|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = $85&255;
 $91 = $90 >>> 1;
 $92 = $87 ? $91 : $89;
 $93 = ($92|0)==(0);
 $$pre21 = HEAP32[$__g_end>>2]|0;
 if ($93) {
  $102 = $$pre21;
 } else {
  $94 = $$pre21;
  $95 = $__g;
  $96 = (($94) - ($95))|0;
  $97 = ($96|0)<(160);
  if ($97) {
   $98 = HEAP32[$__dc>>2]|0;
   $99 = ((($$pre21)) + 4|0);
   HEAP32[$__g_end>>2] = $99;
   HEAP32[$$pre21>>2] = $98;
   $102 = $99;
  } else {
   $102 = $$pre21;
  }
 }
 $100 = HEAP32[$__a_end>>2]|0;
 $101 = (__ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji($__a$2,$100,$__err,$0)|0);
 HEAP32[$__v>>2] = $101;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$102,$__err);
 $103 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($103) {
  $132 = 1;
 } else {
  $104 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $105 = HEAP32[$104>>2]|0;
  $106 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $107 = HEAP32[$106>>2]|0;
  $108 = ($105|0)==($107|0);
  if ($108) {
   $109 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $110 = ((($109)) + 36|0);
   $111 = HEAP32[$110>>2]|0;
   $112 = (FUNCTION_TABLE_ii[$111 & 63]($$pre$i$i$i$lcssa)|0);
   $$0$i$i$i$i = $112;
  } else {
   $113 = HEAP32[$105>>2]|0;
   $$0$i$i$i$i = $113;
  }
  $114 = ($$0$i$i$i$i|0)==(-1);
  if ($114) {
   HEAP32[$__b>>2] = 0;
   $132 = 1;
  } else {
   $132 = 0;
  }
 }
 $115 = ($$pre$i3$i$i|0)==(0|0);
 do {
  if ($115) {
   label = 44;
  } else {
   $116 = ((($$pre$i3$i$i)) + 12|0);
   $117 = HEAP32[$116>>2]|0;
   $118 = ((($$pre$i3$i$i)) + 16|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ($117|0)==($119|0);
   if ($120) {
    $121 = HEAP32[$$pre$i3$i$i>>2]|0;
    $122 = ((($121)) + 36|0);
    $123 = HEAP32[$122>>2]|0;
    $124 = (FUNCTION_TABLE_ii[$123 & 63]($$pre$i3$i$i)|0);
    $$0$i$i1$i$i = $124;
   } else {
    $125 = HEAP32[$117>>2]|0;
    $$0$i$i1$i$i = $125;
   }
   $126 = ($$0$i$i1$i$i|0)==(-1);
   if ($126) {
    HEAP32[$__e>>2] = 0;
    label = 44;
    break;
   } else {
    if ($132) {
     break;
    } else {
     label = 46;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 44) {
  if ($132) {
   label = 46;
  }
 }
 if ((label|0) == 46) {
  $127 = HEAP32[$__err>>2]|0;
  $128 = $127 | 2;
  HEAP32[$__err>>2] = $128;
 }
 $129 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($129|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i3 = 0, $$pre$i3$i$i = 0, $$pre21 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0;
 var $phitmp$i = 0, $phitmp$i16 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0;
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$8,0);
 $9 = HEAP8[$__buf>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($__buf)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($__buf)) + 1|0);
 $15 = $11 ? $14 : $13;
 HEAP32[$__a_end>>2] = $15;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $16 = ((($__buf)) + 4|0);
 $17 = HEAP32[$__thousands_sep>>2]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i3 = $$pre;$__a$0 = $15;
 L4: while(1) {
  $18 = ($$pre$i$i$i3|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;$135 = 1;
  } else {
   $19 = ((($$pre$i$i$i3)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i3)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i3>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i3)|0);
    $$0$i$i$i$i1 = $27;
   } else {
    $28 = HEAP32[$20>>2]|0;
    $$0$i$i$i$i1 = $28;
   }
   $29 = ($$0$i$i$i$i1|0)==(-1);
   if ($29) {
    HEAP32[$__b>>2] = 0;
    $$pre$i$i$i = 0;$135 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i3;$135 = 0;
   }
  }
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 16;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if ($36) {
     $37 = HEAP32[$30>>2]|0;
     $38 = ((($37)) + 36|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
     $$0$i$i1$i$i7 = $40;
    } else {
     $41 = HEAP32[$33>>2]|0;
     $$0$i$i1$i$i7 = $41;
    }
    $42 = ($$0$i$i1$i$i7|0)==(-1);
    if ($42) {
     HEAP32[$__e>>2] = 0;
     label = 16;
     break;
    } else {
     if ($135) {
      $136 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 16) {
   label = 0;
   if ($135) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $136 = 0;
   }
  }
  $43 = HEAP32[$__a_end>>2]|0;
  $44 = HEAP8[$__buf>>0]|0;
  $45 = $44 & 1;
  $46 = ($45<<24>>24)==(0);
  $47 = HEAP32[$16>>2]|0;
  $48 = $44&255;
  $49 = $48 >>> 1;
  $50 = $46 ? $49 : $47;
  $51 = (($__a$0) + ($50)|0);
  $52 = ($43|0)==($51|0);
  if ($52) {
   $53 = $50 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$53,0);
   $54 = HEAP8[$__buf>>0]|0;
   $55 = $54 & 1;
   $56 = ($55<<24>>24)==(0);
   if ($56) {
    $59 = 10;
   } else {
    $57 = HEAP32[$__buf>>2]|0;
    $58 = $57 & -2;
    $phitmp$i16 = (($58) + -1)|0;
    $59 = $phitmp$i16;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$59,0);
   $60 = HEAP8[$__buf>>0]|0;
   $61 = $60 & 1;
   $62 = ($61<<24>>24)==(0);
   $63 = HEAP32[$12>>2]|0;
   $64 = $62 ? $14 : $63;
   $65 = (($64) + ($50)|0);
   HEAP32[$__a_end>>2] = $65;
   $__a$1 = $64;
  } else {
   $__a$1 = $__a$0;
  }
  $66 = ((($$pre$i$i$i)) + 12|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = ((($$pre$i$i$i)) + 16|0);
  $69 = HEAP32[$68>>2]|0;
  $70 = ($67|0)==($69|0);
  if ($70) {
   $71 = HEAP32[$$pre$i$i$i>>2]|0;
   $72 = ((($71)) + 36|0);
   $73 = HEAP32[$72>>2]|0;
   $74 = (FUNCTION_TABLE_ii[$73 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $74;
  } else {
   $75 = HEAP32[$67>>2]|0;
   $$0$i$i = $75;
  }
  $76 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$17,$__grouping,$__g,$__g_end,$__atoms)|0);
  $77 = ($76|0)==(0);
  if (!($77)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $136;$__a$2 = $__a$1;
   break;
  }
  $78 = HEAP32[$66>>2]|0;
  $79 = HEAP32[$68>>2]|0;
  $80 = ($78|0)==($79|0);
  if ($80) {
   $81 = HEAP32[$$pre$i$i$i>>2]|0;
   $82 = ((($81)) + 40|0);
   $83 = HEAP32[$82>>2]|0;
   (FUNCTION_TABLE_ii[$83 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $84 = ((($78)) + 4|0);
   HEAP32[$66>>2] = $84;
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $85 = HEAP8[$__grouping>>0]|0;
 $86 = $85 & 1;
 $87 = ($86<<24>>24)==(0);
 $88 = ((($__grouping)) + 4|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = $85&255;
 $91 = $90 >>> 1;
 $92 = $87 ? $91 : $89;
 $93 = ($92|0)==(0);
 $$pre21 = HEAP32[$__g_end>>2]|0;
 if ($93) {
  $107 = $$pre21;
 } else {
  $94 = $$pre21;
  $95 = $__g;
  $96 = (($94) - ($95))|0;
  $97 = ($96|0)<(160);
  if ($97) {
   $98 = HEAP32[$__dc>>2]|0;
   $99 = ((($$pre21)) + 4|0);
   HEAP32[$__g_end>>2] = $99;
   HEAP32[$$pre21>>2] = $98;
   $107 = $99;
  } else {
   $107 = $$pre21;
  }
 }
 $100 = HEAP32[$__a_end>>2]|0;
 $101 = (__ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji($__a$2,$100,$__err,$0)|0);
 $102 = tempRet0;
 $103 = $__v;
 $104 = $103;
 HEAP32[$104>>2] = $101;
 $105 = (($103) + 4)|0;
 $106 = $105;
 HEAP32[$106>>2] = $102;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$107,$__err);
 $108 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($108) {
  $137 = 1;
 } else {
  $109 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $110 = HEAP32[$109>>2]|0;
  $111 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $112 = HEAP32[$111>>2]|0;
  $113 = ($110|0)==($112|0);
  if ($113) {
   $114 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $115 = ((($114)) + 36|0);
   $116 = HEAP32[$115>>2]|0;
   $117 = (FUNCTION_TABLE_ii[$116 & 63]($$pre$i$i$i$lcssa)|0);
   $$0$i$i$i$i = $117;
  } else {
   $118 = HEAP32[$110>>2]|0;
   $$0$i$i$i$i = $118;
  }
  $119 = ($$0$i$i$i$i|0)==(-1);
  if ($119) {
   HEAP32[$__b>>2] = 0;
   $137 = 1;
  } else {
   $137 = 0;
  }
 }
 $120 = ($$pre$i3$i$i|0)==(0|0);
 do {
  if ($120) {
   label = 44;
  } else {
   $121 = ((($$pre$i3$i$i)) + 12|0);
   $122 = HEAP32[$121>>2]|0;
   $123 = ((($$pre$i3$i$i)) + 16|0);
   $124 = HEAP32[$123>>2]|0;
   $125 = ($122|0)==($124|0);
   if ($125) {
    $126 = HEAP32[$$pre$i3$i$i>>2]|0;
    $127 = ((($126)) + 36|0);
    $128 = HEAP32[$127>>2]|0;
    $129 = (FUNCTION_TABLE_ii[$128 & 63]($$pre$i3$i$i)|0);
    $$0$i$i1$i$i = $129;
   } else {
    $130 = HEAP32[$122>>2]|0;
    $$0$i$i1$i$i = $130;
   }
   $131 = ($$0$i$i1$i$i|0)==(-1);
   if ($131) {
    HEAP32[$__e>>2] = 0;
    label = 44;
    break;
   } else {
    if ($137) {
     break;
    } else {
     label = 46;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 44) {
  if ($137) {
   label = 46;
  }
 }
 if ((label|0) == 46) {
  $132 = HEAP32[$__err>>2]|0;
  $133 = $132 | 2;
  HEAP32[$__err>>2] = $133;
 }
 $134 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($134|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i3 = 0, $$pre$i3$i$i = 0, $$pre21 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $phitmp$i = 0, $phitmp$i16 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0;
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$8,0);
 $9 = HEAP8[$__buf>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($__buf)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($__buf)) + 1|0);
 $15 = $11 ? $14 : $13;
 HEAP32[$__a_end>>2] = $15;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $16 = ((($__buf)) + 4|0);
 $17 = HEAP32[$__thousands_sep>>2]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i3 = $$pre;$__a$0 = $15;
 L4: while(1) {
  $18 = ($$pre$i$i$i3|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;$130 = 1;
  } else {
   $19 = ((($$pre$i$i$i3)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i3)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i3>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i3)|0);
    $$0$i$i$i$i1 = $27;
   } else {
    $28 = HEAP32[$20>>2]|0;
    $$0$i$i$i$i1 = $28;
   }
   $29 = ($$0$i$i$i$i1|0)==(-1);
   if ($29) {
    HEAP32[$__b>>2] = 0;
    $$pre$i$i$i = 0;$130 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i3;$130 = 0;
   }
  }
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 16;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if ($36) {
     $37 = HEAP32[$30>>2]|0;
     $38 = ((($37)) + 36|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
     $$0$i$i1$i$i7 = $40;
    } else {
     $41 = HEAP32[$33>>2]|0;
     $$0$i$i1$i$i7 = $41;
    }
    $42 = ($$0$i$i1$i$i7|0)==(-1);
    if ($42) {
     HEAP32[$__e>>2] = 0;
     label = 16;
     break;
    } else {
     if ($130) {
      $131 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 16) {
   label = 0;
   if ($130) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $131 = 0;
   }
  }
  $43 = HEAP32[$__a_end>>2]|0;
  $44 = HEAP8[$__buf>>0]|0;
  $45 = $44 & 1;
  $46 = ($45<<24>>24)==(0);
  $47 = HEAP32[$16>>2]|0;
  $48 = $44&255;
  $49 = $48 >>> 1;
  $50 = $46 ? $49 : $47;
  $51 = (($__a$0) + ($50)|0);
  $52 = ($43|0)==($51|0);
  if ($52) {
   $53 = $50 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$53,0);
   $54 = HEAP8[$__buf>>0]|0;
   $55 = $54 & 1;
   $56 = ($55<<24>>24)==(0);
   if ($56) {
    $59 = 10;
   } else {
    $57 = HEAP32[$__buf>>2]|0;
    $58 = $57 & -2;
    $phitmp$i16 = (($58) + -1)|0;
    $59 = $phitmp$i16;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$59,0);
   $60 = HEAP8[$__buf>>0]|0;
   $61 = $60 & 1;
   $62 = ($61<<24>>24)==(0);
   $63 = HEAP32[$12>>2]|0;
   $64 = $62 ? $14 : $63;
   $65 = (($64) + ($50)|0);
   HEAP32[$__a_end>>2] = $65;
   $__a$1 = $64;
  } else {
   $__a$1 = $__a$0;
  }
  $66 = ((($$pre$i$i$i)) + 12|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = ((($$pre$i$i$i)) + 16|0);
  $69 = HEAP32[$68>>2]|0;
  $70 = ($67|0)==($69|0);
  if ($70) {
   $71 = HEAP32[$$pre$i$i$i>>2]|0;
   $72 = ((($71)) + 36|0);
   $73 = HEAP32[$72>>2]|0;
   $74 = (FUNCTION_TABLE_ii[$73 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $74;
  } else {
   $75 = HEAP32[$67>>2]|0;
   $$0$i$i = $75;
  }
  $76 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$17,$__grouping,$__g,$__g_end,$__atoms)|0);
  $77 = ($76|0)==(0);
  if (!($77)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $131;$__a$2 = $__a$1;
   break;
  }
  $78 = HEAP32[$66>>2]|0;
  $79 = HEAP32[$68>>2]|0;
  $80 = ($78|0)==($79|0);
  if ($80) {
   $81 = HEAP32[$$pre$i$i$i>>2]|0;
   $82 = ((($81)) + 40|0);
   $83 = HEAP32[$82>>2]|0;
   (FUNCTION_TABLE_ii[$83 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $84 = ((($78)) + 4|0);
   HEAP32[$66>>2] = $84;
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $85 = HEAP8[$__grouping>>0]|0;
 $86 = $85 & 1;
 $87 = ($86<<24>>24)==(0);
 $88 = ((($__grouping)) + 4|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = $85&255;
 $91 = $90 >>> 1;
 $92 = $87 ? $91 : $89;
 $93 = ($92|0)==(0);
 $$pre21 = HEAP32[$__g_end>>2]|0;
 if ($93) {
  $102 = $$pre21;
 } else {
  $94 = $$pre21;
  $95 = $__g;
  $96 = (($94) - ($95))|0;
  $97 = ($96|0)<(160);
  if ($97) {
   $98 = HEAP32[$__dc>>2]|0;
   $99 = ((($$pre21)) + 4|0);
   HEAP32[$__g_end>>2] = $99;
   HEAP32[$$pre21>>2] = $98;
   $102 = $99;
  } else {
   $102 = $$pre21;
  }
 }
 $100 = HEAP32[$__a_end>>2]|0;
 $101 = (__ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji($__a$2,$100,$__err,$0)|0);
 HEAP16[$__v>>1] = $101;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$102,$__err);
 $103 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($103) {
  $132 = 1;
 } else {
  $104 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $105 = HEAP32[$104>>2]|0;
  $106 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $107 = HEAP32[$106>>2]|0;
  $108 = ($105|0)==($107|0);
  if ($108) {
   $109 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $110 = ((($109)) + 36|0);
   $111 = HEAP32[$110>>2]|0;
   $112 = (FUNCTION_TABLE_ii[$111 & 63]($$pre$i$i$i$lcssa)|0);
   $$0$i$i$i$i = $112;
  } else {
   $113 = HEAP32[$105>>2]|0;
   $$0$i$i$i$i = $113;
  }
  $114 = ($$0$i$i$i$i|0)==(-1);
  if ($114) {
   HEAP32[$__b>>2] = 0;
   $132 = 1;
  } else {
   $132 = 0;
  }
 }
 $115 = ($$pre$i3$i$i|0)==(0|0);
 do {
  if ($115) {
   label = 44;
  } else {
   $116 = ((($$pre$i3$i$i)) + 12|0);
   $117 = HEAP32[$116>>2]|0;
   $118 = ((($$pre$i3$i$i)) + 16|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ($117|0)==($119|0);
   if ($120) {
    $121 = HEAP32[$$pre$i3$i$i>>2]|0;
    $122 = ((($121)) + 36|0);
    $123 = HEAP32[$122>>2]|0;
    $124 = (FUNCTION_TABLE_ii[$123 & 63]($$pre$i3$i$i)|0);
    $$0$i$i1$i$i = $124;
   } else {
    $125 = HEAP32[$117>>2]|0;
    $$0$i$i1$i$i = $125;
   }
   $126 = ($$0$i$i1$i$i|0)==(-1);
   if ($126) {
    HEAP32[$__e>>2] = 0;
    label = 44;
    break;
   } else {
    if ($132) {
     break;
    } else {
     label = 46;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 44) {
  if ($132) {
   label = 46;
  }
 }
 if ((label|0) == 46) {
  $127 = HEAP32[$__err>>2]|0;
  $128 = $127 | 2;
  HEAP32[$__err>>2] = $128;
 }
 $129 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($129|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i3 = 0, $$pre$i3$i$i = 0, $$pre21 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $phitmp$i = 0, $phitmp$i16 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0;
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$8,0);
 $9 = HEAP8[$__buf>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($__buf)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($__buf)) + 1|0);
 $15 = $11 ? $14 : $13;
 HEAP32[$__a_end>>2] = $15;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $16 = ((($__buf)) + 4|0);
 $17 = HEAP32[$__thousands_sep>>2]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i3 = $$pre;$__a$0 = $15;
 L4: while(1) {
  $18 = ($$pre$i$i$i3|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;$130 = 1;
  } else {
   $19 = ((($$pre$i$i$i3)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i3)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i3>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i3)|0);
    $$0$i$i$i$i1 = $27;
   } else {
    $28 = HEAP32[$20>>2]|0;
    $$0$i$i$i$i1 = $28;
   }
   $29 = ($$0$i$i$i$i1|0)==(-1);
   if ($29) {
    HEAP32[$__b>>2] = 0;
    $$pre$i$i$i = 0;$130 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i3;$130 = 0;
   }
  }
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 16;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if ($36) {
     $37 = HEAP32[$30>>2]|0;
     $38 = ((($37)) + 36|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
     $$0$i$i1$i$i7 = $40;
    } else {
     $41 = HEAP32[$33>>2]|0;
     $$0$i$i1$i$i7 = $41;
    }
    $42 = ($$0$i$i1$i$i7|0)==(-1);
    if ($42) {
     HEAP32[$__e>>2] = 0;
     label = 16;
     break;
    } else {
     if ($130) {
      $131 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 16) {
   label = 0;
   if ($130) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $131 = 0;
   }
  }
  $43 = HEAP32[$__a_end>>2]|0;
  $44 = HEAP8[$__buf>>0]|0;
  $45 = $44 & 1;
  $46 = ($45<<24>>24)==(0);
  $47 = HEAP32[$16>>2]|0;
  $48 = $44&255;
  $49 = $48 >>> 1;
  $50 = $46 ? $49 : $47;
  $51 = (($__a$0) + ($50)|0);
  $52 = ($43|0)==($51|0);
  if ($52) {
   $53 = $50 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$53,0);
   $54 = HEAP8[$__buf>>0]|0;
   $55 = $54 & 1;
   $56 = ($55<<24>>24)==(0);
   if ($56) {
    $59 = 10;
   } else {
    $57 = HEAP32[$__buf>>2]|0;
    $58 = $57 & -2;
    $phitmp$i16 = (($58) + -1)|0;
    $59 = $phitmp$i16;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$59,0);
   $60 = HEAP8[$__buf>>0]|0;
   $61 = $60 & 1;
   $62 = ($61<<24>>24)==(0);
   $63 = HEAP32[$12>>2]|0;
   $64 = $62 ? $14 : $63;
   $65 = (($64) + ($50)|0);
   HEAP32[$__a_end>>2] = $65;
   $__a$1 = $64;
  } else {
   $__a$1 = $__a$0;
  }
  $66 = ((($$pre$i$i$i)) + 12|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = ((($$pre$i$i$i)) + 16|0);
  $69 = HEAP32[$68>>2]|0;
  $70 = ($67|0)==($69|0);
  if ($70) {
   $71 = HEAP32[$$pre$i$i$i>>2]|0;
   $72 = ((($71)) + 36|0);
   $73 = HEAP32[$72>>2]|0;
   $74 = (FUNCTION_TABLE_ii[$73 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $74;
  } else {
   $75 = HEAP32[$67>>2]|0;
   $$0$i$i = $75;
  }
  $76 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$17,$__grouping,$__g,$__g_end,$__atoms)|0);
  $77 = ($76|0)==(0);
  if (!($77)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $131;$__a$2 = $__a$1;
   break;
  }
  $78 = HEAP32[$66>>2]|0;
  $79 = HEAP32[$68>>2]|0;
  $80 = ($78|0)==($79|0);
  if ($80) {
   $81 = HEAP32[$$pre$i$i$i>>2]|0;
   $82 = ((($81)) + 40|0);
   $83 = HEAP32[$82>>2]|0;
   (FUNCTION_TABLE_ii[$83 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $84 = ((($78)) + 4|0);
   HEAP32[$66>>2] = $84;
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $85 = HEAP8[$__grouping>>0]|0;
 $86 = $85 & 1;
 $87 = ($86<<24>>24)==(0);
 $88 = ((($__grouping)) + 4|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = $85&255;
 $91 = $90 >>> 1;
 $92 = $87 ? $91 : $89;
 $93 = ($92|0)==(0);
 $$pre21 = HEAP32[$__g_end>>2]|0;
 if ($93) {
  $102 = $$pre21;
 } else {
  $94 = $$pre21;
  $95 = $__g;
  $96 = (($94) - ($95))|0;
  $97 = ($96|0)<(160);
  if ($97) {
   $98 = HEAP32[$__dc>>2]|0;
   $99 = ((($$pre21)) + 4|0);
   HEAP32[$__g_end>>2] = $99;
   HEAP32[$$pre21>>2] = $98;
   $102 = $99;
  } else {
   $102 = $$pre21;
  }
 }
 $100 = HEAP32[$__a_end>>2]|0;
 $101 = (__ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji($__a$2,$100,$__err,$0)|0);
 HEAP32[$__v>>2] = $101;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$102,$__err);
 $103 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($103) {
  $132 = 1;
 } else {
  $104 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $105 = HEAP32[$104>>2]|0;
  $106 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $107 = HEAP32[$106>>2]|0;
  $108 = ($105|0)==($107|0);
  if ($108) {
   $109 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $110 = ((($109)) + 36|0);
   $111 = HEAP32[$110>>2]|0;
   $112 = (FUNCTION_TABLE_ii[$111 & 63]($$pre$i$i$i$lcssa)|0);
   $$0$i$i$i$i = $112;
  } else {
   $113 = HEAP32[$105>>2]|0;
   $$0$i$i$i$i = $113;
  }
  $114 = ($$0$i$i$i$i|0)==(-1);
  if ($114) {
   HEAP32[$__b>>2] = 0;
   $132 = 1;
  } else {
   $132 = 0;
  }
 }
 $115 = ($$pre$i3$i$i|0)==(0|0);
 do {
  if ($115) {
   label = 44;
  } else {
   $116 = ((($$pre$i3$i$i)) + 12|0);
   $117 = HEAP32[$116>>2]|0;
   $118 = ((($$pre$i3$i$i)) + 16|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ($117|0)==($119|0);
   if ($120) {
    $121 = HEAP32[$$pre$i3$i$i>>2]|0;
    $122 = ((($121)) + 36|0);
    $123 = HEAP32[$122>>2]|0;
    $124 = (FUNCTION_TABLE_ii[$123 & 63]($$pre$i3$i$i)|0);
    $$0$i$i1$i$i = $124;
   } else {
    $125 = HEAP32[$117>>2]|0;
    $$0$i$i1$i$i = $125;
   }
   $126 = ($$0$i$i1$i$i|0)==(-1);
   if ($126) {
    HEAP32[$__e>>2] = 0;
    label = 44;
    break;
   } else {
    if ($132) {
     break;
    } else {
     label = 46;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 44) {
  if ($132) {
   label = 46;
  }
 }
 if ((label|0) == 46) {
  $127 = HEAP32[$__err>>2]|0;
  $128 = $127 | 2;
  HEAP32[$__err>>2] = $128;
 }
 $129 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($129|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i3 = 0, $$pre$i3$i$i = 0, $$pre21 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $phitmp$i = 0, $phitmp$i16 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0;
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$8,0);
 $9 = HEAP8[$__buf>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($__buf)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($__buf)) + 1|0);
 $15 = $11 ? $14 : $13;
 HEAP32[$__a_end>>2] = $15;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $16 = ((($__buf)) + 4|0);
 $17 = HEAP32[$__thousands_sep>>2]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i3 = $$pre;$__a$0 = $15;
 L4: while(1) {
  $18 = ($$pre$i$i$i3|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;$130 = 1;
  } else {
   $19 = ((($$pre$i$i$i3)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i3)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i3>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i3)|0);
    $$0$i$i$i$i1 = $27;
   } else {
    $28 = HEAP32[$20>>2]|0;
    $$0$i$i$i$i1 = $28;
   }
   $29 = ($$0$i$i$i$i1|0)==(-1);
   if ($29) {
    HEAP32[$__b>>2] = 0;
    $$pre$i$i$i = 0;$130 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i3;$130 = 0;
   }
  }
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 16;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if ($36) {
     $37 = HEAP32[$30>>2]|0;
     $38 = ((($37)) + 36|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
     $$0$i$i1$i$i7 = $40;
    } else {
     $41 = HEAP32[$33>>2]|0;
     $$0$i$i1$i$i7 = $41;
    }
    $42 = ($$0$i$i1$i$i7|0)==(-1);
    if ($42) {
     HEAP32[$__e>>2] = 0;
     label = 16;
     break;
    } else {
     if ($130) {
      $131 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 16) {
   label = 0;
   if ($130) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $131 = 0;
   }
  }
  $43 = HEAP32[$__a_end>>2]|0;
  $44 = HEAP8[$__buf>>0]|0;
  $45 = $44 & 1;
  $46 = ($45<<24>>24)==(0);
  $47 = HEAP32[$16>>2]|0;
  $48 = $44&255;
  $49 = $48 >>> 1;
  $50 = $46 ? $49 : $47;
  $51 = (($__a$0) + ($50)|0);
  $52 = ($43|0)==($51|0);
  if ($52) {
   $53 = $50 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$53,0);
   $54 = HEAP8[$__buf>>0]|0;
   $55 = $54 & 1;
   $56 = ($55<<24>>24)==(0);
   if ($56) {
    $59 = 10;
   } else {
    $57 = HEAP32[$__buf>>2]|0;
    $58 = $57 & -2;
    $phitmp$i16 = (($58) + -1)|0;
    $59 = $phitmp$i16;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$59,0);
   $60 = HEAP8[$__buf>>0]|0;
   $61 = $60 & 1;
   $62 = ($61<<24>>24)==(0);
   $63 = HEAP32[$12>>2]|0;
   $64 = $62 ? $14 : $63;
   $65 = (($64) + ($50)|0);
   HEAP32[$__a_end>>2] = $65;
   $__a$1 = $64;
  } else {
   $__a$1 = $__a$0;
  }
  $66 = ((($$pre$i$i$i)) + 12|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = ((($$pre$i$i$i)) + 16|0);
  $69 = HEAP32[$68>>2]|0;
  $70 = ($67|0)==($69|0);
  if ($70) {
   $71 = HEAP32[$$pre$i$i$i>>2]|0;
   $72 = ((($71)) + 36|0);
   $73 = HEAP32[$72>>2]|0;
   $74 = (FUNCTION_TABLE_ii[$73 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $74;
  } else {
   $75 = HEAP32[$67>>2]|0;
   $$0$i$i = $75;
  }
  $76 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$17,$__grouping,$__g,$__g_end,$__atoms)|0);
  $77 = ($76|0)==(0);
  if (!($77)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $131;$__a$2 = $__a$1;
   break;
  }
  $78 = HEAP32[$66>>2]|0;
  $79 = HEAP32[$68>>2]|0;
  $80 = ($78|0)==($79|0);
  if ($80) {
   $81 = HEAP32[$$pre$i$i$i>>2]|0;
   $82 = ((($81)) + 40|0);
   $83 = HEAP32[$82>>2]|0;
   (FUNCTION_TABLE_ii[$83 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $84 = ((($78)) + 4|0);
   HEAP32[$66>>2] = $84;
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $85 = HEAP8[$__grouping>>0]|0;
 $86 = $85 & 1;
 $87 = ($86<<24>>24)==(0);
 $88 = ((($__grouping)) + 4|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = $85&255;
 $91 = $90 >>> 1;
 $92 = $87 ? $91 : $89;
 $93 = ($92|0)==(0);
 $$pre21 = HEAP32[$__g_end>>2]|0;
 if ($93) {
  $102 = $$pre21;
 } else {
  $94 = $$pre21;
  $95 = $__g;
  $96 = (($94) - ($95))|0;
  $97 = ($96|0)<(160);
  if ($97) {
   $98 = HEAP32[$__dc>>2]|0;
   $99 = ((($$pre21)) + 4|0);
   HEAP32[$__g_end>>2] = $99;
   HEAP32[$$pre21>>2] = $98;
   $102 = $99;
  } else {
   $102 = $$pre21;
  }
 }
 $100 = HEAP32[$__a_end>>2]|0;
 $101 = (__ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji($__a$2,$100,$__err,$0)|0);
 HEAP32[$__v>>2] = $101;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$102,$__err);
 $103 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($103) {
  $132 = 1;
 } else {
  $104 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $105 = HEAP32[$104>>2]|0;
  $106 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $107 = HEAP32[$106>>2]|0;
  $108 = ($105|0)==($107|0);
  if ($108) {
   $109 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $110 = ((($109)) + 36|0);
   $111 = HEAP32[$110>>2]|0;
   $112 = (FUNCTION_TABLE_ii[$111 & 63]($$pre$i$i$i$lcssa)|0);
   $$0$i$i$i$i = $112;
  } else {
   $113 = HEAP32[$105>>2]|0;
   $$0$i$i$i$i = $113;
  }
  $114 = ($$0$i$i$i$i|0)==(-1);
  if ($114) {
   HEAP32[$__b>>2] = 0;
   $132 = 1;
  } else {
   $132 = 0;
  }
 }
 $115 = ($$pre$i3$i$i|0)==(0|0);
 do {
  if ($115) {
   label = 44;
  } else {
   $116 = ((($$pre$i3$i$i)) + 12|0);
   $117 = HEAP32[$116>>2]|0;
   $118 = ((($$pre$i3$i$i)) + 16|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ($117|0)==($119|0);
   if ($120) {
    $121 = HEAP32[$$pre$i3$i$i>>2]|0;
    $122 = ((($121)) + 36|0);
    $123 = HEAP32[$122>>2]|0;
    $124 = (FUNCTION_TABLE_ii[$123 & 63]($$pre$i3$i$i)|0);
    $$0$i$i1$i$i = $124;
   } else {
    $125 = HEAP32[$117>>2]|0;
    $$0$i$i1$i$i = $125;
   }
   $126 = ($$0$i$i1$i$i|0)==(-1);
   if ($126) {
    HEAP32[$__e>>2] = 0;
    label = 44;
    break;
   } else {
    if ($132) {
     break;
    } else {
     label = 46;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 44) {
  if ($132) {
   label = 46;
  }
 }
 if ((label|0) == 46) {
  $127 = HEAP32[$__err>>2]|0;
  $128 = $127 | 2;
  HEAP32[$__err>>2] = $128;
 }
 $129 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($129|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i3 = 0, $$pre$i3$i$i = 0, $$pre21 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0;
 var $phitmp$i = 0, $phitmp$i16 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0;
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$8,0);
 $9 = HEAP8[$__buf>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($__buf)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($__buf)) + 1|0);
 $15 = $11 ? $14 : $13;
 HEAP32[$__a_end>>2] = $15;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $16 = ((($__buf)) + 4|0);
 $17 = HEAP32[$__thousands_sep>>2]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i3 = $$pre;$__a$0 = $15;
 L4: while(1) {
  $18 = ($$pre$i$i$i3|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;$135 = 1;
  } else {
   $19 = ((($$pre$i$i$i3)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i3)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i3>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i3)|0);
    $$0$i$i$i$i1 = $27;
   } else {
    $28 = HEAP32[$20>>2]|0;
    $$0$i$i$i$i1 = $28;
   }
   $29 = ($$0$i$i$i$i1|0)==(-1);
   if ($29) {
    HEAP32[$__b>>2] = 0;
    $$pre$i$i$i = 0;$135 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i3;$135 = 0;
   }
  }
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 16;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if ($36) {
     $37 = HEAP32[$30>>2]|0;
     $38 = ((($37)) + 36|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
     $$0$i$i1$i$i7 = $40;
    } else {
     $41 = HEAP32[$33>>2]|0;
     $$0$i$i1$i$i7 = $41;
    }
    $42 = ($$0$i$i1$i$i7|0)==(-1);
    if ($42) {
     HEAP32[$__e>>2] = 0;
     label = 16;
     break;
    } else {
     if ($135) {
      $136 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 16) {
   label = 0;
   if ($135) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $136 = 0;
   }
  }
  $43 = HEAP32[$__a_end>>2]|0;
  $44 = HEAP8[$__buf>>0]|0;
  $45 = $44 & 1;
  $46 = ($45<<24>>24)==(0);
  $47 = HEAP32[$16>>2]|0;
  $48 = $44&255;
  $49 = $48 >>> 1;
  $50 = $46 ? $49 : $47;
  $51 = (($__a$0) + ($50)|0);
  $52 = ($43|0)==($51|0);
  if ($52) {
   $53 = $50 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$53,0);
   $54 = HEAP8[$__buf>>0]|0;
   $55 = $54 & 1;
   $56 = ($55<<24>>24)==(0);
   if ($56) {
    $59 = 10;
   } else {
    $57 = HEAP32[$__buf>>2]|0;
    $58 = $57 & -2;
    $phitmp$i16 = (($58) + -1)|0;
    $59 = $phitmp$i16;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$59,0);
   $60 = HEAP8[$__buf>>0]|0;
   $61 = $60 & 1;
   $62 = ($61<<24>>24)==(0);
   $63 = HEAP32[$12>>2]|0;
   $64 = $62 ? $14 : $63;
   $65 = (($64) + ($50)|0);
   HEAP32[$__a_end>>2] = $65;
   $__a$1 = $64;
  } else {
   $__a$1 = $__a$0;
  }
  $66 = ((($$pre$i$i$i)) + 12|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = ((($$pre$i$i$i)) + 16|0);
  $69 = HEAP32[$68>>2]|0;
  $70 = ($67|0)==($69|0);
  if ($70) {
   $71 = HEAP32[$$pre$i$i$i>>2]|0;
   $72 = ((($71)) + 36|0);
   $73 = HEAP32[$72>>2]|0;
   $74 = (FUNCTION_TABLE_ii[$73 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $74;
  } else {
   $75 = HEAP32[$67>>2]|0;
   $$0$i$i = $75;
  }
  $76 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$17,$__grouping,$__g,$__g_end,$__atoms)|0);
  $77 = ($76|0)==(0);
  if (!($77)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $136;$__a$2 = $__a$1;
   break;
  }
  $78 = HEAP32[$66>>2]|0;
  $79 = HEAP32[$68>>2]|0;
  $80 = ($78|0)==($79|0);
  if ($80) {
   $81 = HEAP32[$$pre$i$i$i>>2]|0;
   $82 = ((($81)) + 40|0);
   $83 = HEAP32[$82>>2]|0;
   (FUNCTION_TABLE_ii[$83 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $84 = ((($78)) + 4|0);
   HEAP32[$66>>2] = $84;
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $85 = HEAP8[$__grouping>>0]|0;
 $86 = $85 & 1;
 $87 = ($86<<24>>24)==(0);
 $88 = ((($__grouping)) + 4|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = $85&255;
 $91 = $90 >>> 1;
 $92 = $87 ? $91 : $89;
 $93 = ($92|0)==(0);
 $$pre21 = HEAP32[$__g_end>>2]|0;
 if ($93) {
  $107 = $$pre21;
 } else {
  $94 = $$pre21;
  $95 = $__g;
  $96 = (($94) - ($95))|0;
  $97 = ($96|0)<(160);
  if ($97) {
   $98 = HEAP32[$__dc>>2]|0;
   $99 = ((($$pre21)) + 4|0);
   HEAP32[$__g_end>>2] = $99;
   HEAP32[$$pre21>>2] = $98;
   $107 = $99;
  } else {
   $107 = $$pre21;
  }
 }
 $100 = HEAP32[$__a_end>>2]|0;
 $101 = (__ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji($__a$2,$100,$__err,$0)|0);
 $102 = tempRet0;
 $103 = $__v;
 $104 = $103;
 HEAP32[$104>>2] = $101;
 $105 = (($103) + 4)|0;
 $106 = $105;
 HEAP32[$106>>2] = $102;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$107,$__err);
 $108 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($108) {
  $137 = 1;
 } else {
  $109 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $110 = HEAP32[$109>>2]|0;
  $111 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $112 = HEAP32[$111>>2]|0;
  $113 = ($110|0)==($112|0);
  if ($113) {
   $114 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $115 = ((($114)) + 36|0);
   $116 = HEAP32[$115>>2]|0;
   $117 = (FUNCTION_TABLE_ii[$116 & 63]($$pre$i$i$i$lcssa)|0);
   $$0$i$i$i$i = $117;
  } else {
   $118 = HEAP32[$110>>2]|0;
   $$0$i$i$i$i = $118;
  }
  $119 = ($$0$i$i$i$i|0)==(-1);
  if ($119) {
   HEAP32[$__b>>2] = 0;
   $137 = 1;
  } else {
   $137 = 0;
  }
 }
 $120 = ($$pre$i3$i$i|0)==(0|0);
 do {
  if ($120) {
   label = 44;
  } else {
   $121 = ((($$pre$i3$i$i)) + 12|0);
   $122 = HEAP32[$121>>2]|0;
   $123 = ((($$pre$i3$i$i)) + 16|0);
   $124 = HEAP32[$123>>2]|0;
   $125 = ($122|0)==($124|0);
   if ($125) {
    $126 = HEAP32[$$pre$i3$i$i>>2]|0;
    $127 = ((($126)) + 36|0);
    $128 = HEAP32[$127>>2]|0;
    $129 = (FUNCTION_TABLE_ii[$128 & 63]($$pre$i3$i$i)|0);
    $$0$i$i1$i$i = $129;
   } else {
    $130 = HEAP32[$122>>2]|0;
    $$0$i$i1$i$i = $130;
   }
   $131 = ($$0$i$i1$i$i|0)==(-1);
   if ($131) {
    HEAP32[$__e>>2] = 0;
    label = 44;
    break;
   } else {
    if ($137) {
     break;
    } else {
     label = 46;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 44) {
  if ($137) {
   label = 46;
  }
 }
 if ((label|0) == 46) {
  $132 = HEAP32[$__err>>2]|0;
  $133 = $132 | 2;
  HEAP32[$__err>>2] = $133;
 }
 $134 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($134|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i2 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i8 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i4 = 0, $$pre$i3$i$i = 0, $$pre22 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0.0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0;
 var $or$cond = 0, $phitmp$i = 0, $phitmp$i17 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0;
 $__atoms = sp + 208|0;
 $__decimal_point = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 337|0;
 $__exp = sp + 336|0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $0 = ((($__buf)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($__buf)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$7,0);
 $8 = HEAP8[$__buf>>0]|0;
 $9 = $8 & 1;
 $10 = ($9<<24>>24)==(0);
 $11 = ((($__buf)) + 8|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($__buf)) + 1|0);
 $14 = $10 ? $13 : $12;
 HEAP32[$__a_end>>2] = $14;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 HEAP8[$__in_units>>0] = 1;
 HEAP8[$__exp>>0] = 69;
 $15 = ((($__buf)) + 4|0);
 $16 = HEAP32[$__decimal_point>>2]|0;
 $17 = HEAP32[$__thousands_sep>>2]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i4 = $$pre;$__a$0 = $14;
 L4: while(1) {
  $18 = ($$pre$i$i$i4|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;$132 = 1;
  } else {
   $19 = ((($$pre$i$i$i4)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i4)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i4>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i4)|0);
    $$0$i$i$i$i2 = $27;
   } else {
    $28 = HEAP32[$20>>2]|0;
    $$0$i$i$i$i2 = $28;
   }
   $29 = ($$0$i$i$i$i2|0)==(-1);
   if ($29) {
    HEAP32[$__b>>2] = 0;
    $$pre$i$i$i = 0;$132 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i4;$132 = 0;
   }
  }
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 16;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if ($36) {
     $37 = HEAP32[$30>>2]|0;
     $38 = ((($37)) + 36|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
     $$0$i$i1$i$i8 = $40;
    } else {
     $41 = HEAP32[$33>>2]|0;
     $$0$i$i1$i$i8 = $41;
    }
    $42 = ($$0$i$i1$i$i8|0)==(-1);
    if ($42) {
     HEAP32[$__e>>2] = 0;
     label = 16;
     break;
    } else {
     if ($132) {
      $133 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 16) {
   label = 0;
   if ($132) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $133 = 0;
   }
  }
  $43 = HEAP32[$__a_end>>2]|0;
  $44 = HEAP8[$__buf>>0]|0;
  $45 = $44 & 1;
  $46 = ($45<<24>>24)==(0);
  $47 = HEAP32[$15>>2]|0;
  $48 = $44&255;
  $49 = $48 >>> 1;
  $50 = $46 ? $49 : $47;
  $51 = (($__a$0) + ($50)|0);
  $52 = ($43|0)==($51|0);
  if ($52) {
   $53 = $50 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$53,0);
   $54 = HEAP8[$__buf>>0]|0;
   $55 = $54 & 1;
   $56 = ($55<<24>>24)==(0);
   if ($56) {
    $59 = 10;
   } else {
    $57 = HEAP32[$__buf>>2]|0;
    $58 = $57 & -2;
    $phitmp$i17 = (($58) + -1)|0;
    $59 = $phitmp$i17;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$59,0);
   $60 = HEAP8[$__buf>>0]|0;
   $61 = $60 & 1;
   $62 = ($61<<24>>24)==(0);
   $63 = HEAP32[$11>>2]|0;
   $64 = $62 ? $13 : $63;
   $65 = (($64) + ($50)|0);
   HEAP32[$__a_end>>2] = $65;
   $__a$1 = $64;
  } else {
   $__a$1 = $__a$0;
  }
  $66 = ((($$pre$i$i$i)) + 12|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = ((($$pre$i$i$i)) + 16|0);
  $69 = HEAP32[$68>>2]|0;
  $70 = ($67|0)==($69|0);
  if ($70) {
   $71 = HEAP32[$$pre$i$i$i>>2]|0;
   $72 = ((($71)) + 36|0);
   $73 = HEAP32[$72>>2]|0;
   $74 = (FUNCTION_TABLE_ii[$73 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $74;
  } else {
   $75 = HEAP32[$67>>2]|0;
   $$0$i$i = $75;
  }
  $76 = (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i,$__in_units,$__exp,$__a$1,$__a_end,$16,$17,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
  $77 = ($76|0)==(0);
  if (!($77)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $133;$__a$2 = $__a$1;
   break;
  }
  $78 = HEAP32[$66>>2]|0;
  $79 = HEAP32[$68>>2]|0;
  $80 = ($78|0)==($79|0);
  if ($80) {
   $81 = HEAP32[$$pre$i$i$i>>2]|0;
   $82 = ((($81)) + 40|0);
   $83 = HEAP32[$82>>2]|0;
   (FUNCTION_TABLE_ii[$83 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $84 = ((($78)) + 4|0);
   HEAP32[$66>>2] = $84;
   $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $85 = HEAP8[$__grouping>>0]|0;
 $86 = $85 & 1;
 $87 = ($86<<24>>24)==(0);
 $88 = ((($__grouping)) + 4|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = $85&255;
 $91 = $90 >>> 1;
 $92 = $87 ? $91 : $89;
 $93 = ($92|0)==(0);
 $94 = HEAP8[$__in_units>>0]|0;
 $95 = ($94<<24>>24)==(0);
 $or$cond = $95 | $93;
 $$pre22 = HEAP32[$__g_end>>2]|0;
 if ($or$cond) {
  $104 = $$pre22;
 } else {
  $96 = $$pre22;
  $97 = $__g;
  $98 = (($96) - ($97))|0;
  $99 = ($98|0)<(160);
  if ($99) {
   $100 = HEAP32[$__dc>>2]|0;
   $101 = ((($$pre22)) + 4|0);
   HEAP32[$__g_end>>2] = $101;
   HEAP32[$$pre22>>2] = $100;
   $104 = $101;
  } else {
   $104 = $$pre22;
  }
 }
 $102 = HEAP32[$__a_end>>2]|0;
 $103 = (+__ZNSt3__115__num_get_floatIfEET_PKcS3_Rj($__a$2,$102,$__err));
 HEAPF32[$__v>>2] = $103;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$104,$__err);
 $105 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($105) {
  $134 = 1;
 } else {
  $106 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $107 = HEAP32[$106>>2]|0;
  $108 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $109 = HEAP32[$108>>2]|0;
  $110 = ($107|0)==($109|0);
  if ($110) {
   $111 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $112 = ((($111)) + 36|0);
   $113 = HEAP32[$112>>2]|0;
   $114 = (FUNCTION_TABLE_ii[$113 & 63]($$pre$i$i$i$lcssa)|0);
   $$0$i$i$i$i = $114;
  } else {
   $115 = HEAP32[$107>>2]|0;
   $$0$i$i$i$i = $115;
  }
  $116 = ($$0$i$i$i$i|0)==(-1);
  if ($116) {
   HEAP32[$__b>>2] = 0;
   $134 = 1;
  } else {
   $134 = 0;
  }
 }
 $117 = ($$pre$i3$i$i|0)==(0|0);
 do {
  if ($117) {
   label = 44;
  } else {
   $118 = ((($$pre$i3$i$i)) + 12|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ((($$pre$i3$i$i)) + 16|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = ($119|0)==($121|0);
   if ($122) {
    $123 = HEAP32[$$pre$i3$i$i>>2]|0;
    $124 = ((($123)) + 36|0);
    $125 = HEAP32[$124>>2]|0;
    $126 = (FUNCTION_TABLE_ii[$125 & 63]($$pre$i3$i$i)|0);
    $$0$i$i1$i$i = $126;
   } else {
    $127 = HEAP32[$119>>2]|0;
    $$0$i$i1$i$i = $127;
   }
   $128 = ($$0$i$i1$i$i|0)==(-1);
   if ($128) {
    HEAP32[$__e>>2] = 0;
    label = 44;
    break;
   } else {
    if ($134) {
     break;
    } else {
     label = 46;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 44) {
  if ($134) {
   label = 46;
  }
 }
 if ((label|0) == 46) {
  $129 = HEAP32[$__err>>2]|0;
  $130 = $129 | 2;
  HEAP32[$__err>>2] = $130;
 }
 $131 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($131|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i2 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i8 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i4 = 0, $$pre$i3$i$i = 0, $$pre22 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0.0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0;
 var $or$cond = 0, $phitmp$i = 0, $phitmp$i17 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0;
 $__atoms = sp + 208|0;
 $__decimal_point = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 337|0;
 $__exp = sp + 336|0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $0 = ((($__buf)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($__buf)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$7,0);
 $8 = HEAP8[$__buf>>0]|0;
 $9 = $8 & 1;
 $10 = ($9<<24>>24)==(0);
 $11 = ((($__buf)) + 8|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($__buf)) + 1|0);
 $14 = $10 ? $13 : $12;
 HEAP32[$__a_end>>2] = $14;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 HEAP8[$__in_units>>0] = 1;
 HEAP8[$__exp>>0] = 69;
 $15 = ((($__buf)) + 4|0);
 $16 = HEAP32[$__decimal_point>>2]|0;
 $17 = HEAP32[$__thousands_sep>>2]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i4 = $$pre;$__a$0 = $14;
 L4: while(1) {
  $18 = ($$pre$i$i$i4|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;$132 = 1;
  } else {
   $19 = ((($$pre$i$i$i4)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i4)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i4>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i4)|0);
    $$0$i$i$i$i2 = $27;
   } else {
    $28 = HEAP32[$20>>2]|0;
    $$0$i$i$i$i2 = $28;
   }
   $29 = ($$0$i$i$i$i2|0)==(-1);
   if ($29) {
    HEAP32[$__b>>2] = 0;
    $$pre$i$i$i = 0;$132 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i4;$132 = 0;
   }
  }
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 16;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if ($36) {
     $37 = HEAP32[$30>>2]|0;
     $38 = ((($37)) + 36|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
     $$0$i$i1$i$i8 = $40;
    } else {
     $41 = HEAP32[$33>>2]|0;
     $$0$i$i1$i$i8 = $41;
    }
    $42 = ($$0$i$i1$i$i8|0)==(-1);
    if ($42) {
     HEAP32[$__e>>2] = 0;
     label = 16;
     break;
    } else {
     if ($132) {
      $133 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 16) {
   label = 0;
   if ($132) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $133 = 0;
   }
  }
  $43 = HEAP32[$__a_end>>2]|0;
  $44 = HEAP8[$__buf>>0]|0;
  $45 = $44 & 1;
  $46 = ($45<<24>>24)==(0);
  $47 = HEAP32[$15>>2]|0;
  $48 = $44&255;
  $49 = $48 >>> 1;
  $50 = $46 ? $49 : $47;
  $51 = (($__a$0) + ($50)|0);
  $52 = ($43|0)==($51|0);
  if ($52) {
   $53 = $50 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$53,0);
   $54 = HEAP8[$__buf>>0]|0;
   $55 = $54 & 1;
   $56 = ($55<<24>>24)==(0);
   if ($56) {
    $59 = 10;
   } else {
    $57 = HEAP32[$__buf>>2]|0;
    $58 = $57 & -2;
    $phitmp$i17 = (($58) + -1)|0;
    $59 = $phitmp$i17;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$59,0);
   $60 = HEAP8[$__buf>>0]|0;
   $61 = $60 & 1;
   $62 = ($61<<24>>24)==(0);
   $63 = HEAP32[$11>>2]|0;
   $64 = $62 ? $13 : $63;
   $65 = (($64) + ($50)|0);
   HEAP32[$__a_end>>2] = $65;
   $__a$1 = $64;
  } else {
   $__a$1 = $__a$0;
  }
  $66 = ((($$pre$i$i$i)) + 12|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = ((($$pre$i$i$i)) + 16|0);
  $69 = HEAP32[$68>>2]|0;
  $70 = ($67|0)==($69|0);
  if ($70) {
   $71 = HEAP32[$$pre$i$i$i>>2]|0;
   $72 = ((($71)) + 36|0);
   $73 = HEAP32[$72>>2]|0;
   $74 = (FUNCTION_TABLE_ii[$73 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $74;
  } else {
   $75 = HEAP32[$67>>2]|0;
   $$0$i$i = $75;
  }
  $76 = (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i,$__in_units,$__exp,$__a$1,$__a_end,$16,$17,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
  $77 = ($76|0)==(0);
  if (!($77)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $133;$__a$2 = $__a$1;
   break;
  }
  $78 = HEAP32[$66>>2]|0;
  $79 = HEAP32[$68>>2]|0;
  $80 = ($78|0)==($79|0);
  if ($80) {
   $81 = HEAP32[$$pre$i$i$i>>2]|0;
   $82 = ((($81)) + 40|0);
   $83 = HEAP32[$82>>2]|0;
   (FUNCTION_TABLE_ii[$83 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $84 = ((($78)) + 4|0);
   HEAP32[$66>>2] = $84;
   $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $85 = HEAP8[$__grouping>>0]|0;
 $86 = $85 & 1;
 $87 = ($86<<24>>24)==(0);
 $88 = ((($__grouping)) + 4|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = $85&255;
 $91 = $90 >>> 1;
 $92 = $87 ? $91 : $89;
 $93 = ($92|0)==(0);
 $94 = HEAP8[$__in_units>>0]|0;
 $95 = ($94<<24>>24)==(0);
 $or$cond = $95 | $93;
 $$pre22 = HEAP32[$__g_end>>2]|0;
 if ($or$cond) {
  $104 = $$pre22;
 } else {
  $96 = $$pre22;
  $97 = $__g;
  $98 = (($96) - ($97))|0;
  $99 = ($98|0)<(160);
  if ($99) {
   $100 = HEAP32[$__dc>>2]|0;
   $101 = ((($$pre22)) + 4|0);
   HEAP32[$__g_end>>2] = $101;
   HEAP32[$$pre22>>2] = $100;
   $104 = $101;
  } else {
   $104 = $$pre22;
  }
 }
 $102 = HEAP32[$__a_end>>2]|0;
 $103 = (+__ZNSt3__115__num_get_floatIdEET_PKcS3_Rj($__a$2,$102,$__err));
 HEAPF64[$__v>>3] = $103;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$104,$__err);
 $105 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($105) {
  $134 = 1;
 } else {
  $106 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $107 = HEAP32[$106>>2]|0;
  $108 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $109 = HEAP32[$108>>2]|0;
  $110 = ($107|0)==($109|0);
  if ($110) {
   $111 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $112 = ((($111)) + 36|0);
   $113 = HEAP32[$112>>2]|0;
   $114 = (FUNCTION_TABLE_ii[$113 & 63]($$pre$i$i$i$lcssa)|0);
   $$0$i$i$i$i = $114;
  } else {
   $115 = HEAP32[$107>>2]|0;
   $$0$i$i$i$i = $115;
  }
  $116 = ($$0$i$i$i$i|0)==(-1);
  if ($116) {
   HEAP32[$__b>>2] = 0;
   $134 = 1;
  } else {
   $134 = 0;
  }
 }
 $117 = ($$pre$i3$i$i|0)==(0|0);
 do {
  if ($117) {
   label = 44;
  } else {
   $118 = ((($$pre$i3$i$i)) + 12|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ((($$pre$i3$i$i)) + 16|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = ($119|0)==($121|0);
   if ($122) {
    $123 = HEAP32[$$pre$i3$i$i>>2]|0;
    $124 = ((($123)) + 36|0);
    $125 = HEAP32[$124>>2]|0;
    $126 = (FUNCTION_TABLE_ii[$125 & 63]($$pre$i3$i$i)|0);
    $$0$i$i1$i$i = $126;
   } else {
    $127 = HEAP32[$119>>2]|0;
    $$0$i$i1$i$i = $127;
   }
   $128 = ($$0$i$i1$i$i|0)==(-1);
   if ($128) {
    HEAP32[$__e>>2] = 0;
    label = 44;
    break;
   } else {
    if ($134) {
     break;
    } else {
     label = 46;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 44) {
  if ($134) {
   label = 46;
  }
 }
 if ((label|0) == 46) {
  $129 = HEAP32[$__err>>2]|0;
  $130 = $129 | 2;
  HEAP32[$__err>>2] = $130;
 }
 $131 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($131|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i2 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i8 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i4 = 0, $$pre$i3$i$i = 0, $$pre22 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0.0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0;
 var $or$cond = 0, $phitmp$i = 0, $phitmp$i17 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0;
 $__atoms = sp + 208|0;
 $__decimal_point = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 337|0;
 $__exp = sp + 336|0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $0 = ((($__buf)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($__buf)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$7,0);
 $8 = HEAP8[$__buf>>0]|0;
 $9 = $8 & 1;
 $10 = ($9<<24>>24)==(0);
 $11 = ((($__buf)) + 8|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($__buf)) + 1|0);
 $14 = $10 ? $13 : $12;
 HEAP32[$__a_end>>2] = $14;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 HEAP8[$__in_units>>0] = 1;
 HEAP8[$__exp>>0] = 69;
 $15 = ((($__buf)) + 4|0);
 $16 = HEAP32[$__decimal_point>>2]|0;
 $17 = HEAP32[$__thousands_sep>>2]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i4 = $$pre;$__a$0 = $14;
 L4: while(1) {
  $18 = ($$pre$i$i$i4|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;$132 = 1;
  } else {
   $19 = ((($$pre$i$i$i4)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i4)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i4>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i4)|0);
    $$0$i$i$i$i2 = $27;
   } else {
    $28 = HEAP32[$20>>2]|0;
    $$0$i$i$i$i2 = $28;
   }
   $29 = ($$0$i$i$i$i2|0)==(-1);
   if ($29) {
    HEAP32[$__b>>2] = 0;
    $$pre$i$i$i = 0;$132 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i4;$132 = 0;
   }
  }
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 16;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if ($36) {
     $37 = HEAP32[$30>>2]|0;
     $38 = ((($37)) + 36|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
     $$0$i$i1$i$i8 = $40;
    } else {
     $41 = HEAP32[$33>>2]|0;
     $$0$i$i1$i$i8 = $41;
    }
    $42 = ($$0$i$i1$i$i8|0)==(-1);
    if ($42) {
     HEAP32[$__e>>2] = 0;
     label = 16;
     break;
    } else {
     if ($132) {
      $133 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 16) {
   label = 0;
   if ($132) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $133 = 0;
   }
  }
  $43 = HEAP32[$__a_end>>2]|0;
  $44 = HEAP8[$__buf>>0]|0;
  $45 = $44 & 1;
  $46 = ($45<<24>>24)==(0);
  $47 = HEAP32[$15>>2]|0;
  $48 = $44&255;
  $49 = $48 >>> 1;
  $50 = $46 ? $49 : $47;
  $51 = (($__a$0) + ($50)|0);
  $52 = ($43|0)==($51|0);
  if ($52) {
   $53 = $50 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$53,0);
   $54 = HEAP8[$__buf>>0]|0;
   $55 = $54 & 1;
   $56 = ($55<<24>>24)==(0);
   if ($56) {
    $59 = 10;
   } else {
    $57 = HEAP32[$__buf>>2]|0;
    $58 = $57 & -2;
    $phitmp$i17 = (($58) + -1)|0;
    $59 = $phitmp$i17;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$59,0);
   $60 = HEAP8[$__buf>>0]|0;
   $61 = $60 & 1;
   $62 = ($61<<24>>24)==(0);
   $63 = HEAP32[$11>>2]|0;
   $64 = $62 ? $13 : $63;
   $65 = (($64) + ($50)|0);
   HEAP32[$__a_end>>2] = $65;
   $__a$1 = $64;
  } else {
   $__a$1 = $__a$0;
  }
  $66 = ((($$pre$i$i$i)) + 12|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = ((($$pre$i$i$i)) + 16|0);
  $69 = HEAP32[$68>>2]|0;
  $70 = ($67|0)==($69|0);
  if ($70) {
   $71 = HEAP32[$$pre$i$i$i>>2]|0;
   $72 = ((($71)) + 36|0);
   $73 = HEAP32[$72>>2]|0;
   $74 = (FUNCTION_TABLE_ii[$73 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $74;
  } else {
   $75 = HEAP32[$67>>2]|0;
   $$0$i$i = $75;
  }
  $76 = (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i,$__in_units,$__exp,$__a$1,$__a_end,$16,$17,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
  $77 = ($76|0)==(0);
  if (!($77)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $133;$__a$2 = $__a$1;
   break;
  }
  $78 = HEAP32[$66>>2]|0;
  $79 = HEAP32[$68>>2]|0;
  $80 = ($78|0)==($79|0);
  if ($80) {
   $81 = HEAP32[$$pre$i$i$i>>2]|0;
   $82 = ((($81)) + 40|0);
   $83 = HEAP32[$82>>2]|0;
   (FUNCTION_TABLE_ii[$83 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $84 = ((($78)) + 4|0);
   HEAP32[$66>>2] = $84;
   $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $85 = HEAP8[$__grouping>>0]|0;
 $86 = $85 & 1;
 $87 = ($86<<24>>24)==(0);
 $88 = ((($__grouping)) + 4|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = $85&255;
 $91 = $90 >>> 1;
 $92 = $87 ? $91 : $89;
 $93 = ($92|0)==(0);
 $94 = HEAP8[$__in_units>>0]|0;
 $95 = ($94<<24>>24)==(0);
 $or$cond = $95 | $93;
 $$pre22 = HEAP32[$__g_end>>2]|0;
 if ($or$cond) {
  $104 = $$pre22;
 } else {
  $96 = $$pre22;
  $97 = $__g;
  $98 = (($96) - ($97))|0;
  $99 = ($98|0)<(160);
  if ($99) {
   $100 = HEAP32[$__dc>>2]|0;
   $101 = ((($$pre22)) + 4|0);
   HEAP32[$__g_end>>2] = $101;
   HEAP32[$$pre22>>2] = $100;
   $104 = $101;
  } else {
   $104 = $$pre22;
  }
 }
 $102 = HEAP32[$__a_end>>2]|0;
 $103 = (+__ZNSt3__115__num_get_floatIeEET_PKcS3_Rj($__a$2,$102,$__err));
 HEAPF64[$__v>>3] = $103;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$104,$__err);
 $105 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($105) {
  $134 = 1;
 } else {
  $106 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $107 = HEAP32[$106>>2]|0;
  $108 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $109 = HEAP32[$108>>2]|0;
  $110 = ($107|0)==($109|0);
  if ($110) {
   $111 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $112 = ((($111)) + 36|0);
   $113 = HEAP32[$112>>2]|0;
   $114 = (FUNCTION_TABLE_ii[$113 & 63]($$pre$i$i$i$lcssa)|0);
   $$0$i$i$i$i = $114;
  } else {
   $115 = HEAP32[$107>>2]|0;
   $$0$i$i$i$i = $115;
  }
  $116 = ($$0$i$i$i$i|0)==(-1);
  if ($116) {
   HEAP32[$__b>>2] = 0;
   $134 = 1;
  } else {
   $134 = 0;
  }
 }
 $117 = ($$pre$i3$i$i|0)==(0|0);
 do {
  if ($117) {
   label = 44;
  } else {
   $118 = ((($$pre$i3$i$i)) + 12|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ((($$pre$i3$i$i)) + 16|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = ($119|0)==($121|0);
   if ($122) {
    $123 = HEAP32[$$pre$i3$i$i>>2]|0;
    $124 = ((($123)) + 36|0);
    $125 = HEAP32[$124>>2]|0;
    $126 = (FUNCTION_TABLE_ii[$125 & 63]($$pre$i3$i$i)|0);
    $$0$i$i1$i$i = $126;
   } else {
    $127 = HEAP32[$119>>2]|0;
    $$0$i$i1$i$i = $127;
   }
   $128 = ($$0$i$i1$i$i|0)==(-1);
   if ($128) {
    HEAP32[$__e>>2] = 0;
    label = 44;
    break;
   } else {
    if ($134) {
     break;
    } else {
     label = 46;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 44) {
  if ($134) {
   label = 46;
  }
 }
 if ((label|0) == 46) {
  $129 = HEAP32[$__err>>2]|0;
  $130 = $129 | 2;
  HEAP32[$__err>>2] = $130;
 }
 $131 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($131|0);
}
function __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__s,$__n,$__l,$__format,$varargs) {
 $__s = $__s|0;
 $__n = $__n|0;
 $__l = $__l|0;
 $__format = $__format|0;
 $varargs = $varargs|0;
 var $0 = 0, $1 = 0, $2 = 0, $__va = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__va = sp;
 HEAP32[$__va>>2] = $varargs;
 $0 = (_uselocale(($__l|0))|0);
 $1 = (_vsnprintf($__s,$__n,$__format,$__va)|0);
 $2 = ($0|0)==(0|0);
 if (!($2)) {
  (_uselocale(($0|0))|0);
 }
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__s,$__l,$__format,$varargs) {
 $__s = $__s|0;
 $__l = $__l|0;
 $__format = $__format|0;
 $varargs = $varargs|0;
 var $0 = 0, $1 = 0, $2 = 0, $__va = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__va = sp;
 HEAP32[$__va>>2] = $varargs;
 $0 = (_uselocale(($__l|0))|0);
 $1 = (_vasprintf($__s,$__format,$__va)|0);
 $2 = ($0|0)==(0|0);
 if (!($2)) {
  (_uselocale(($0|0))|0);
 }
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($__s,$__ob,$__op,$__oe,$__iob,$__fl) {
 $__s = $__s|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 var $$sroa$0$1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $__ns$0 = 0, $__sp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__sp = sp;
 $0 = HEAP32[$__s>>2]|0;
 $1 = ($0|0)==(0|0);
 L1: do {
  if ($1) {
   $$sroa$0$1 = 0;
  } else {
   $2 = $__oe;
   $3 = $__ob;
   $4 = (($2) - ($3))|0;
   $5 = $4 >> 2;
   $6 = ((($__iob)) + 12|0);
   $7 = HEAP32[$6>>2]|0;
   $8 = ($7|0)>($5|0);
   $9 = (($7) - ($5))|0;
   $__ns$0 = $8 ? $9 : 0;
   $10 = $__op;
   $11 = (($10) - ($3))|0;
   $12 = $11 >> 2;
   $13 = ($11|0)>(0);
   if ($13) {
    $14 = HEAP32[$0>>2]|0;
    $15 = ((($14)) + 48|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = (FUNCTION_TABLE_iiii[$16 & 31]($0,$__ob,$12)|0);
    $18 = ($17|0)==($12|0);
    if (!($18)) {
     HEAP32[$__s>>2] = 0;
     $$sroa$0$1 = 0;
     break;
    }
   }
   $19 = ($__ns$0|0)>(0);
   do {
    if ($19) {
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($__sp,$__ns$0,$__fl);
     $20 = HEAP8[$__sp>>0]|0;
     $21 = $20 & 1;
     $22 = ($21<<24>>24)==(0);
     $23 = ((($__sp)) + 8|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ((($__sp)) + 4|0);
     $26 = $22 ? $25 : $24;
     $27 = HEAP32[$0>>2]|0;
     $28 = ((($27)) + 48|0);
     $29 = HEAP32[$28>>2]|0;
     $30 = (FUNCTION_TABLE_iiii[$29 & 31]($0,$26,$__ns$0)|0);
     $31 = ($30|0)==($__ns$0|0);
     if ($31) {
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sp);
      break;
     } else {
      HEAP32[$__s>>2] = 0;
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sp);
      $$sroa$0$1 = 0;
      break L1;
     }
    }
   } while(0);
   $32 = (($2) - ($10))|0;
   $33 = $32 >> 2;
   $34 = ($32|0)>(0);
   if ($34) {
    $35 = HEAP32[$0>>2]|0;
    $36 = ((($35)) + 48|0);
    $37 = HEAP32[$36>>2]|0;
    $38 = (FUNCTION_TABLE_iiii[$37 & 31]($0,$__op,$33)|0);
    $39 = ($38|0)==($33|0);
    if (!($39)) {
     HEAP32[$__s>>2] = 0;
     $$sroa$0$1 = 0;
     break;
    }
   }
   HEAP32[$6>>2] = 0;
   $$sroa$0$1 = $0;
  }
 } while(0);
 STACKTOP = sp;return ($$sroa$0$1|0);
}
function __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$__e,$__err,$__ct,$__n) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 $__n = $__n|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i10 = 0, $$0$in = 0, $$01 = 0, $$lcssa = 0, $$pre$i$i$i = 0, $$pre$i$i$i16 = 0, $$pre$i$i$i3 = 0, $$pre$i2$i$i20 = 0, $$pre$i2$i$i20$lcssa = 0, $$pre$i2$i$i7 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__r$0 = 0, $__r$0$in = 0, $__r$0$lcssa = 0, $isascii1$i = 0, $isascii1$i12 = 0, $sext = 0, $sext24 = 0, $tmp$i$i9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__b>>2]|0;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $12 = 0;
  } else {
   $2 = ((($0)) + 12|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = ((($0)) + 16|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = ($3|0)==($5|0);
   if ($6) {
    $7 = HEAP32[$0>>2]|0;
    $8 = ((($7)) + 36|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = (FUNCTION_TABLE_ii[$9 & 63]($0)|0);
    $11 = ($10|0)==(-1);
    if ($11) {
     HEAP32[$__b>>2] = 0;
     $12 = 0;
     break;
    } else {
     $$pre$i$i$i = HEAP32[$__b>>2]|0;
     $12 = $$pre$i$i$i;
     break;
    }
   } else {
    $12 = $0;
   }
  }
 } while(0);
 $13 = ($12|0)==(0|0);
 $14 = HEAP32[$__e>>2]|0;
 $15 = ($14|0)==(0|0);
 do {
  if ($15) {
   label = 11;
  } else {
   $16 = ((($14)) + 12|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ((($14)) + 16|0);
   $19 = HEAP32[$18>>2]|0;
   $20 = ($17|0)==($19|0);
   if ($20) {
    $21 = HEAP32[$14>>2]|0;
    $22 = ((($21)) + 36|0);
    $23 = HEAP32[$22>>2]|0;
    $24 = (FUNCTION_TABLE_ii[$23 & 63]($14)|0);
    $25 = ($24|0)==(-1);
    if ($25) {
     HEAP32[$__e>>2] = 0;
     label = 11;
     break;
    }
   }
   if ($13) {
    $157 = $14;
    label = 13;
   } else {
    label = 12;
   }
  }
 } while(0);
 if ((label|0) == 11) {
  if ($13) {
   label = 12;
  } else {
   $157 = 0;
   label = 13;
  }
 }
 L16: do {
  if ((label|0) == 12) {
   $26 = HEAP32[$__err>>2]|0;
   $27 = $26 | 6;
   HEAP32[$__err>>2] = $27;
   $$01 = 0;
  }
  else if ((label|0) == 13) {
   $28 = HEAP32[$__b>>2]|0;
   $29 = ((($28)) + 12|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = ((($28)) + 16|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = ($30|0)==($32|0);
   if ($33) {
    $34 = HEAP32[$28>>2]|0;
    $35 = ((($34)) + 36|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = (FUNCTION_TABLE_ii[$36 & 63]($28)|0);
    $$0$i$i = $37;
   } else {
    $38 = HEAP8[$30>>0]|0;
    $39 = $38&255;
    $$0$i$i = $39;
   }
   $40 = $$0$i$i&255;
   $isascii1$i = ($40<<24>>24)>(-1);
   if ($isascii1$i) {
    $sext = $$0$i$i << 24;
    $41 = $sext >> 24;
    $42 = ((($__ct)) + 8|0);
    $43 = HEAP32[$42>>2]|0;
    $44 = (($43) + ($41<<1)|0);
    $45 = HEAP16[$44>>1]|0;
    $46 = $45 & 2048;
    $47 = ($46<<16>>16)==(0);
    if (!($47)) {
     $50 = HEAP32[$__ct>>2]|0;
     $51 = ((($50)) + 36|0);
     $52 = HEAP32[$51>>2]|0;
     $53 = (FUNCTION_TABLE_iiii[$52 & 31]($__ct,$40,0)|0);
     $54 = $53 << 24 >> 24;
     $55 = HEAP32[$__b>>2]|0;
     $56 = ((($55)) + 12|0);
     $57 = HEAP32[$56>>2]|0;
     $58 = ((($55)) + 16|0);
     $59 = HEAP32[$58>>2]|0;
     $60 = ($57|0)==($59|0);
     if ($60) {
      $61 = HEAP32[$55>>2]|0;
      $62 = ((($61)) + 40|0);
      $63 = HEAP32[$62>>2]|0;
      (FUNCTION_TABLE_ii[$63 & 63]($55)|0);
      $$0$in = $__n;$$pre$i2$i$i7 = $157;$79 = $157;$__r$0$in = $54;
     } else {
      $64 = ((($57)) + 1|0);
      HEAP32[$56>>2] = $64;
      $$0$in = $__n;$$pre$i2$i$i7 = $157;$79 = $157;$__r$0$in = $54;
     }
     while(1) {
      $__r$0 = (($__r$0$in) + -48)|0;
      $$0 = (($$0$in) + -1)|0;
      $65 = HEAP32[$__b>>2]|0;
      $66 = ($65|0)==(0|0);
      do {
       if ($66) {
        $77 = 0;
       } else {
        $67 = ((($65)) + 12|0);
        $68 = HEAP32[$67>>2]|0;
        $69 = ((($65)) + 16|0);
        $70 = HEAP32[$69>>2]|0;
        $71 = ($68|0)==($70|0);
        if ($71) {
         $72 = HEAP32[$65>>2]|0;
         $73 = ((($72)) + 36|0);
         $74 = HEAP32[$73>>2]|0;
         $75 = (FUNCTION_TABLE_ii[$74 & 63]($65)|0);
         $76 = ($75|0)==(-1);
         if ($76) {
          HEAP32[$__b>>2] = 0;
          $77 = 0;
          break;
         } else {
          $$pre$i$i$i3 = HEAP32[$__b>>2]|0;
          $77 = $$pre$i$i$i3;
          break;
         }
        } else {
         $77 = $65;
        }
       }
      } while(0);
      $78 = ($77|0)==(0|0);
      $80 = ($79|0)==(0|0);
      if ($80) {
       $$pre$i2$i$i20 = $$pre$i2$i$i7;$91 = 0;
      } else {
       $81 = ((($79)) + 12|0);
       $82 = HEAP32[$81>>2]|0;
       $83 = ((($79)) + 16|0);
       $84 = HEAP32[$83>>2]|0;
       $85 = ($82|0)==($84|0);
       if ($85) {
        $86 = HEAP32[$79>>2]|0;
        $87 = ((($86)) + 36|0);
        $88 = HEAP32[$87>>2]|0;
        $89 = (FUNCTION_TABLE_ii[$88 & 63]($79)|0);
        $90 = ($89|0)==(-1);
        if ($90) {
         HEAP32[$__e>>2] = 0;
         $$pre$i2$i$i20 = 0;$91 = 0;
        } else {
         $$pre$i2$i$i20 = $$pre$i2$i$i7;$91 = $$pre$i2$i$i7;
        }
       } else {
        $$pre$i2$i$i20 = $$pre$i2$i$i7;$91 = $79;
       }
      }
      $92 = ($91|0)==(0|0);
      $tmp$i$i9 = $78 ^ $92;
      $93 = ($$0$in|0)>(1);
      $94 = $93 & $tmp$i$i9;
      $95 = HEAP32[$__b>>2]|0;
      if (!($94)) {
       $$lcssa = $95;$$pre$i2$i$i20$lcssa = $$pre$i2$i$i20;$__r$0$lcssa = $__r$0;
       break;
      }
      $96 = ((($95)) + 12|0);
      $97 = HEAP32[$96>>2]|0;
      $98 = ((($95)) + 16|0);
      $99 = HEAP32[$98>>2]|0;
      $100 = ($97|0)==($99|0);
      if ($100) {
       $101 = HEAP32[$95>>2]|0;
       $102 = ((($101)) + 36|0);
       $103 = HEAP32[$102>>2]|0;
       $104 = (FUNCTION_TABLE_ii[$103 & 63]($95)|0);
       $$0$i$i10 = $104;
      } else {
       $105 = HEAP8[$97>>0]|0;
       $106 = $105&255;
       $$0$i$i10 = $106;
      }
      $107 = $$0$i$i10&255;
      $isascii1$i12 = ($107<<24>>24)>(-1);
      if (!($isascii1$i12)) {
       $$01 = $__r$0;
       break L16;
      }
      $sext24 = $$0$i$i10 << 24;
      $108 = $sext24 >> 24;
      $109 = HEAP32[$42>>2]|0;
      $110 = (($109) + ($108<<1)|0);
      $111 = HEAP16[$110>>1]|0;
      $112 = $111 & 2048;
      $113 = ($112<<16>>16)==(0);
      if ($113) {
       $$01 = $__r$0;
       break L16;
      }
      $114 = ($__r$0*10)|0;
      $115 = HEAP32[$__ct>>2]|0;
      $116 = ((($115)) + 36|0);
      $117 = HEAP32[$116>>2]|0;
      $118 = (FUNCTION_TABLE_iiii[$117 & 31]($__ct,$107,0)|0);
      $119 = $118 << 24 >> 24;
      $120 = (($119) + ($114))|0;
      $121 = HEAP32[$__b>>2]|0;
      $122 = ((($121)) + 12|0);
      $123 = HEAP32[$122>>2]|0;
      $124 = ((($121)) + 16|0);
      $125 = HEAP32[$124>>2]|0;
      $126 = ($123|0)==($125|0);
      if ($126) {
       $127 = HEAP32[$121>>2]|0;
       $128 = ((($127)) + 40|0);
       $129 = HEAP32[$128>>2]|0;
       (FUNCTION_TABLE_ii[$129 & 63]($121)|0);
       $$0$in = $$0;$$pre$i2$i$i7 = $$pre$i2$i$i20;$79 = $91;$__r$0$in = $120;
       continue;
      } else {
       $130 = ((($123)) + 1|0);
       HEAP32[$122>>2] = $130;
       $$0$in = $$0;$$pre$i2$i$i7 = $$pre$i2$i$i20;$79 = $91;$__r$0$in = $120;
       continue;
      }
     }
     $131 = ($$lcssa|0)==(0|0);
     do {
      if ($131) {
       $142 = 0;
      } else {
       $132 = ((($$lcssa)) + 12|0);
       $133 = HEAP32[$132>>2]|0;
       $134 = ((($$lcssa)) + 16|0);
       $135 = HEAP32[$134>>2]|0;
       $136 = ($133|0)==($135|0);
       if ($136) {
        $137 = HEAP32[$$lcssa>>2]|0;
        $138 = ((($137)) + 36|0);
        $139 = HEAP32[$138>>2]|0;
        $140 = (FUNCTION_TABLE_ii[$139 & 63]($$lcssa)|0);
        $141 = ($140|0)==(-1);
        if ($141) {
         HEAP32[$__b>>2] = 0;
         $142 = 0;
         break;
        } else {
         $$pre$i$i$i16 = HEAP32[$__b>>2]|0;
         $142 = $$pre$i$i$i16;
         break;
        }
       } else {
        $142 = $$lcssa;
       }
      }
     } while(0);
     $143 = ($142|0)==(0|0);
     $144 = ($$pre$i2$i$i20$lcssa|0)==(0|0);
     do {
      if ($144) {
       label = 50;
      } else {
       $145 = ((($$pre$i2$i$i20$lcssa)) + 12|0);
       $146 = HEAP32[$145>>2]|0;
       $147 = ((($$pre$i2$i$i20$lcssa)) + 16|0);
       $148 = HEAP32[$147>>2]|0;
       $149 = ($146|0)==($148|0);
       if ($149) {
        $150 = HEAP32[$$pre$i2$i$i20$lcssa>>2]|0;
        $151 = ((($150)) + 36|0);
        $152 = HEAP32[$151>>2]|0;
        $153 = (FUNCTION_TABLE_ii[$152 & 63]($$pre$i2$i$i20$lcssa)|0);
        $154 = ($153|0)==(-1);
        if ($154) {
         HEAP32[$__e>>2] = 0;
         label = 50;
         break;
        }
       }
       if ($143) {
        $$01 = $__r$0$lcssa;
        break L16;
       }
      }
     } while(0);
     if ((label|0) == 50) {
      if (!($143)) {
       $$01 = $__r$0$lcssa;
       break;
      }
     }
     $155 = HEAP32[$__err>>2]|0;
     $156 = $155 | 2;
     HEAP32[$__err>>2] = $156;
     $$01 = $__r$0$lcssa;
     break;
    }
   }
   $48 = HEAP32[$__err>>2]|0;
   $49 = $48 | 4;
   HEAP32[$__err>>2] = $49;
   $$01 = 0;
  }
 } while(0);
 return ($$01|0);
}
function __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$__e,$__err,$__ct,$__n) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 $__n = $__n|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i17 = 0, $$0$i$i$i$i2 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i23 = 0, $$0$i$i1$i$i8 = 0, $$0$i$i14 = 0, $$0$in = 0, $$01 = 0, $$lcssa = 0, $$pre$i$i$i = 0, $$pre$i$i$i19 = 0, $$pre$i$i$i4 = 0, $$pre$i3$i$i10 = 0, $$pre$i3$i$i25 = 0, $$pre$i3$i$i25$lcssa = 0, $0 = 0, $1 = 0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__r$0 = 0, $__r$0$in = 0, $__r$0$lcssa = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i20 = 0, $phitmp$i$i$i5 = 0, $phitmp$i4$i$i11 = 0, $tmp$i$i13 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__b>>2]|0;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $148 = 1;
  } else {
   $2 = ((($0)) + 12|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = ((($0)) + 16|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = ($3|0)==($5|0);
   if ($6) {
    $7 = HEAP32[$0>>2]|0;
    $8 = ((($7)) + 36|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = (FUNCTION_TABLE_ii[$9 & 63]($0)|0);
    $$0$i$i$i$i = $10;
   } else {
    $11 = HEAP32[$3>>2]|0;
    $$0$i$i$i$i = $11;
   }
   $12 = ($$0$i$i$i$i|0)==(-1);
   if ($12) {
    HEAP32[$__b>>2] = 0;
    $148 = 1;
    break;
   } else {
    $$pre$i$i$i = HEAP32[$__b>>2]|0;
    $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
    $148 = $phitmp$i$i$i;
    break;
   }
  }
 } while(0);
 $13 = HEAP32[$__e>>2]|0;
 $14 = ($13|0)==(0|0);
 do {
  if ($14) {
   label = 14;
  } else {
   $15 = ((($13)) + 12|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = ((($13)) + 16|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = ($16|0)==($18|0);
   if ($19) {
    $20 = HEAP32[$13>>2]|0;
    $21 = ((($20)) + 36|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = (FUNCTION_TABLE_ii[$22 & 63]($13)|0);
    $$0$i$i1$i$i = $23;
   } else {
    $24 = HEAP32[$16>>2]|0;
    $$0$i$i1$i$i = $24;
   }
   $25 = ($$0$i$i1$i$i|0)==(-1);
   if ($25) {
    HEAP32[$__e>>2] = 0;
    label = 14;
    break;
   } else {
    if ($148) {
     $149 = $13;
     label = 17;
     break;
    } else {
     label = 16;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 14) {
  if ($148) {
   label = 16;
  } else {
   $149 = 0;
   label = 17;
  }
 }
 L22: do {
  if ((label|0) == 16) {
   $26 = HEAP32[$__err>>2]|0;
   $27 = $26 | 6;
   HEAP32[$__err>>2] = $27;
   $$01 = 0;
  }
  else if ((label|0) == 17) {
   $28 = HEAP32[$__b>>2]|0;
   $29 = ((($28)) + 12|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = ((($28)) + 16|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = ($30|0)==($32|0);
   if ($33) {
    $34 = HEAP32[$28>>2]|0;
    $35 = ((($34)) + 36|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = (FUNCTION_TABLE_ii[$36 & 63]($28)|0);
    $$0$i$i = $37;
   } else {
    $38 = HEAP32[$30>>2]|0;
    $$0$i$i = $38;
   }
   $39 = HEAP32[$__ct>>2]|0;
   $40 = ((($39)) + 12|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = (FUNCTION_TABLE_iiii[$41 & 31]($__ct,2048,$$0$i$i)|0);
   if (!($42)) {
    $43 = HEAP32[$__err>>2]|0;
    $44 = $43 | 4;
    HEAP32[$__err>>2] = $44;
    $$01 = 0;
    break;
   }
   $45 = HEAP32[$__ct>>2]|0;
   $46 = ((($45)) + 52|0);
   $47 = HEAP32[$46>>2]|0;
   $48 = (FUNCTION_TABLE_iiii[$47 & 31]($__ct,$$0$i$i,0)|0);
   $49 = $48 << 24 >> 24;
   $50 = HEAP32[$__b>>2]|0;
   $51 = ((($50)) + 12|0);
   $52 = HEAP32[$51>>2]|0;
   $53 = ((($50)) + 16|0);
   $54 = HEAP32[$53>>2]|0;
   $55 = ($52|0)==($54|0);
   if ($55) {
    $56 = HEAP32[$50>>2]|0;
    $57 = ((($56)) + 40|0);
    $58 = HEAP32[$57>>2]|0;
    (FUNCTION_TABLE_ii[$58 & 63]($50)|0);
    $$0$in = $__n;$$pre$i3$i$i10 = $149;$73 = $149;$__r$0$in = $49;
   } else {
    $59 = ((($52)) + 4|0);
    HEAP32[$51>>2] = $59;
    $$0$in = $__n;$$pre$i3$i$i10 = $149;$73 = $149;$__r$0$in = $49;
   }
   while(1) {
    $__r$0 = (($__r$0$in) + -48)|0;
    $$0 = (($$0$in) + -1)|0;
    $60 = HEAP32[$__b>>2]|0;
    $61 = ($60|0)==(0|0);
    do {
     if ($61) {
      $87 = 1;
     } else {
      $62 = ((($60)) + 12|0);
      $63 = HEAP32[$62>>2]|0;
      $64 = ((($60)) + 16|0);
      $65 = HEAP32[$64>>2]|0;
      $66 = ($63|0)==($65|0);
      if ($66) {
       $67 = HEAP32[$60>>2]|0;
       $68 = ((($67)) + 36|0);
       $69 = HEAP32[$68>>2]|0;
       $70 = (FUNCTION_TABLE_ii[$69 & 63]($60)|0);
       $$0$i$i$i$i2 = $70;
      } else {
       $71 = HEAP32[$63>>2]|0;
       $$0$i$i$i$i2 = $71;
      }
      $72 = ($$0$i$i$i$i2|0)==(-1);
      if ($72) {
       HEAP32[$__b>>2] = 0;
       $87 = 1;
       break;
      } else {
       $$pre$i$i$i4 = HEAP32[$__b>>2]|0;
       $phitmp$i$i$i5 = ($$pre$i$i$i4|0)==(0|0);
       $87 = $phitmp$i$i$i5;
       break;
      }
     }
    } while(0);
    $74 = ($73|0)==(0|0);
    do {
     if ($74) {
      $$pre$i3$i$i25 = $$pre$i3$i$i10;$150 = 0;$86 = 1;
     } else {
      $75 = ((($73)) + 12|0);
      $76 = HEAP32[$75>>2]|0;
      $77 = ((($73)) + 16|0);
      $78 = HEAP32[$77>>2]|0;
      $79 = ($76|0)==($78|0);
      if ($79) {
       $80 = HEAP32[$73>>2]|0;
       $81 = ((($80)) + 36|0);
       $82 = HEAP32[$81>>2]|0;
       $83 = (FUNCTION_TABLE_ii[$82 & 63]($73)|0);
       $$0$i$i1$i$i8 = $83;
      } else {
       $84 = HEAP32[$76>>2]|0;
       $$0$i$i1$i$i8 = $84;
      }
      $85 = ($$0$i$i1$i$i8|0)==(-1);
      if ($85) {
       HEAP32[$__e>>2] = 0;
       $$pre$i3$i$i25 = 0;$150 = 0;$86 = 1;
       break;
      } else {
       $phitmp$i4$i$i11 = ($$pre$i3$i$i10|0)==(0|0);
       $$pre$i3$i$i25 = $$pre$i3$i$i10;$150 = $$pre$i3$i$i10;$86 = $phitmp$i4$i$i11;
       break;
      }
     }
    } while(0);
    $tmp$i$i13 = $87 ^ $86;
    $88 = ($$0$in|0)>(1);
    $89 = $88 & $tmp$i$i13;
    $90 = HEAP32[$__b>>2]|0;
    if (!($89)) {
     $$lcssa = $90;$$pre$i3$i$i25$lcssa = $$pre$i3$i$i25;$__r$0$lcssa = $__r$0;
     break;
    }
    $91 = ((($90)) + 12|0);
    $92 = HEAP32[$91>>2]|0;
    $93 = ((($90)) + 16|0);
    $94 = HEAP32[$93>>2]|0;
    $95 = ($92|0)==($94|0);
    if ($95) {
     $96 = HEAP32[$90>>2]|0;
     $97 = ((($96)) + 36|0);
     $98 = HEAP32[$97>>2]|0;
     $99 = (FUNCTION_TABLE_ii[$98 & 63]($90)|0);
     $$0$i$i14 = $99;
    } else {
     $100 = HEAP32[$92>>2]|0;
     $$0$i$i14 = $100;
    }
    $101 = HEAP32[$__ct>>2]|0;
    $102 = ((($101)) + 12|0);
    $103 = HEAP32[$102>>2]|0;
    $104 = (FUNCTION_TABLE_iiii[$103 & 31]($__ct,2048,$$0$i$i14)|0);
    if (!($104)) {
     $$01 = $__r$0;
     break L22;
    }
    $105 = ($__r$0*10)|0;
    $106 = HEAP32[$__ct>>2]|0;
    $107 = ((($106)) + 52|0);
    $108 = HEAP32[$107>>2]|0;
    $109 = (FUNCTION_TABLE_iiii[$108 & 31]($__ct,$$0$i$i14,0)|0);
    $110 = $109 << 24 >> 24;
    $111 = (($110) + ($105))|0;
    $112 = HEAP32[$__b>>2]|0;
    $113 = ((($112)) + 12|0);
    $114 = HEAP32[$113>>2]|0;
    $115 = ((($112)) + 16|0);
    $116 = HEAP32[$115>>2]|0;
    $117 = ($114|0)==($116|0);
    if ($117) {
     $118 = HEAP32[$112>>2]|0;
     $119 = ((($118)) + 40|0);
     $120 = HEAP32[$119>>2]|0;
     (FUNCTION_TABLE_ii[$120 & 63]($112)|0);
     $$0$in = $$0;$$pre$i3$i$i10 = $$pre$i3$i$i25;$73 = $150;$__r$0$in = $111;
     continue;
    } else {
     $121 = ((($114)) + 4|0);
     HEAP32[$113>>2] = $121;
     $$0$in = $$0;$$pre$i3$i$i10 = $$pre$i3$i$i25;$73 = $150;$__r$0$in = $111;
     continue;
    }
   }
   $122 = ($$lcssa|0)==(0|0);
   do {
    if ($122) {
     $151 = 1;
    } else {
     $123 = ((($$lcssa)) + 12|0);
     $124 = HEAP32[$123>>2]|0;
     $125 = ((($$lcssa)) + 16|0);
     $126 = HEAP32[$125>>2]|0;
     $127 = ($124|0)==($126|0);
     if ($127) {
      $128 = HEAP32[$$lcssa>>2]|0;
      $129 = ((($128)) + 36|0);
      $130 = HEAP32[$129>>2]|0;
      $131 = (FUNCTION_TABLE_ii[$130 & 63]($$lcssa)|0);
      $$0$i$i$i$i17 = $131;
     } else {
      $132 = HEAP32[$124>>2]|0;
      $$0$i$i$i$i17 = $132;
     }
     $133 = ($$0$i$i$i$i17|0)==(-1);
     if ($133) {
      HEAP32[$__b>>2] = 0;
      $151 = 1;
      break;
     } else {
      $$pre$i$i$i19 = HEAP32[$__b>>2]|0;
      $phitmp$i$i$i20 = ($$pre$i$i$i19|0)==(0|0);
      $151 = $phitmp$i$i$i20;
      break;
     }
    }
   } while(0);
   $134 = ($$pre$i3$i$i25$lcssa|0)==(0|0);
   do {
    if ($134) {
     label = 60;
    } else {
     $135 = ((($$pre$i3$i$i25$lcssa)) + 12|0);
     $136 = HEAP32[$135>>2]|0;
     $137 = ((($$pre$i3$i$i25$lcssa)) + 16|0);
     $138 = HEAP32[$137>>2]|0;
     $139 = ($136|0)==($138|0);
     if ($139) {
      $140 = HEAP32[$$pre$i3$i$i25$lcssa>>2]|0;
      $141 = ((($140)) + 36|0);
      $142 = HEAP32[$141>>2]|0;
      $143 = (FUNCTION_TABLE_ii[$142 & 63]($$pre$i3$i$i25$lcssa)|0);
      $$0$i$i1$i$i23 = $143;
     } else {
      $144 = HEAP32[$136>>2]|0;
      $$0$i$i1$i$i23 = $144;
     }
     $145 = ($$0$i$i1$i$i23|0)==(-1);
     if ($145) {
      HEAP32[$__e>>2] = 0;
      label = 60;
      break;
     } else {
      if ($151) {
       $$01 = $__r$0$lcssa;
       break L22;
      } else {
       break;
      }
     }
    }
   } while(0);
   if ((label|0) == 60) {
    if (!($151)) {
     $$01 = $__r$0$lcssa;
     break;
    }
   }
   $146 = HEAP32[$__err>>2]|0;
   $147 = $146 | 2;
   HEAP32[$__err>>2] = $147;
   $$01 = $__r$0$lcssa;
  }
 } while(0);
 return ($$01|0);
}
function __ZNSt3__119__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__b,$__n,$__e) {
 $__b = $__b|0;
 $__n = $__n|0;
 $__e = $__e|0;
 var $$ = 0, $$pr = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($__b)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)!=(107|0);
 $3 = HEAP32[$__e>>2]|0;
 $4 = HEAP32[$__b>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = ($7>>>0)<(2147483647);
 $9 = $7 << 1;
 $$ = $8 ? $9 : -1;
 $10 = HEAP32[$__n>>2]|0;
 $11 = $10;
 $12 = (($11) - ($6))|0;
 $13 = $2 ? $4 : 0;
 $14 = (_realloc($13,$$)|0);
 $15 = ($14|0)==(0|0);
 if ($15) {
  __ZSt17__throw_bad_allocv();
  // unreachable;
 }
 if ($2) {
  $16 = $14;
  HEAP32[$__b>>2] = $16;
  $21 = $14;
 } else {
  $$pr = HEAP32[$__b>>2]|0;
  $17 = $14;
  HEAP32[$__b>>2] = $17;
  $18 = ($$pr|0)==(0|0);
  if ($18) {
   $21 = $14;
  } else {
   $19 = HEAP32[$0>>2]|0;
   FUNCTION_TABLE_vi[$19 & 127]($$pr);
   $$pre = HEAP32[$__b>>2]|0;
   $21 = $$pre;
  }
 }
 HEAP32[$0>>2] = (110);
 $20 = (($21) + ($12)|0);
 HEAP32[$__n>>2] = $20;
 $22 = HEAP32[$__b>>2]|0;
 $23 = (($22) + ($$)|0);
 HEAP32[$__e>>2] = $23;
 return;
}
function __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__b,$__n,$__e) {
 $__b = $__b|0;
 $__n = $__n|0;
 $__e = $__e|0;
 var $$ = 0, $$pr = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($__b)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)!=(107|0);
 $3 = HEAP32[$__e>>2]|0;
 $4 = HEAP32[$__b>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = ($7>>>0)<(2147483647);
 $9 = $7 << 1;
 $$ = $8 ? $9 : -1;
 $10 = HEAP32[$__n>>2]|0;
 $11 = $10;
 $12 = (($11) - ($6))|0;
 $13 = $12 >> 2;
 $14 = $2 ? $4 : 0;
 $15 = (_realloc($14,$$)|0);
 $16 = ($15|0)==(0|0);
 if ($16) {
  __ZSt17__throw_bad_allocv();
  // unreachable;
 }
 if ($2) {
  $17 = $15;
  HEAP32[$__b>>2] = $17;
  $23 = $15;
 } else {
  $$pr = HEAP32[$__b>>2]|0;
  $18 = $15;
  HEAP32[$__b>>2] = $18;
  $19 = ($$pr|0)==(0|0);
  if ($19) {
   $23 = $15;
  } else {
   $20 = HEAP32[$0>>2]|0;
   FUNCTION_TABLE_vi[$20 & 127]($$pr);
   $$pre = HEAP32[$__b>>2]|0;
   $23 = $$pre;
  }
 }
 HEAP32[$0>>2] = (110);
 $21 = $$ >>> 2;
 $22 = (($23) + ($13<<2)|0);
 HEAP32[$__n>>2] = $22;
 $24 = HEAP32[$__b>>2]|0;
 $25 = (($24) + ($21<<2)|0);
 HEAP32[$__e>>2] = $25;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$03 = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$04 = 0, $phitmp$i = 0, $scevgep = 0, $scevgep1 = 0, $scevgep2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__first;
 $1 = HEAP8[$this>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $4 = $1&255;
  $5 = $4 >>> 1;
  $15 = $5;$16 = 10;$41 = $1;
 } else {
  $6 = ((($this)) + 4|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = HEAP32[$this>>2]|0;
  $9 = $8 & -2;
  $phitmp$i = (($9) + -1)|0;
  $10 = $8&255;
  $15 = $7;$16 = $phitmp$i;$41 = $10;
 }
 $11 = $__last;
 $12 = (($11) - ($0))|0;
 $13 = ($__last|0)==($__first|0);
 do {
  if (!($13)) {
   $14 = (($16) - ($15))|0;
   $17 = ($14>>>0)<($12>>>0);
   if ($17) {
    $18 = (($15) + ($12))|0;
    $19 = (($18) - ($16))|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this,$16,$19,$15,$15,0,0);
    $$pre = HEAP8[$this>>0]|0;
    $21 = $$pre;
   } else {
    $21 = $41;
   }
   $20 = $21 & 1;
   $22 = ($20<<24>>24)==(0);
   if ($22) {
    $25 = ((($this)) + 1|0);
    $29 = $25;
   } else {
    $23 = ((($this)) + 8|0);
    $24 = HEAP32[$23>>2]|0;
    $29 = $24;
   }
   $26 = (($15) - ($0))|0;
   $scevgep = (($__last) + ($26)|0);
   $scevgep1 = $scevgep;
   $27 = ($__first|0)==($__last|0);
   if (!($27)) {
    $28 = (($29) + ($15)|0);
    $$03 = $__first;$__p$04 = $28;
    while(1) {
     $30 = HEAP8[$$03>>0]|0;
     HEAP8[$__p$04>>0] = $30;
     $31 = ((($__p$04)) + 1|0);
     $32 = ((($$03)) + 1|0);
     $33 = ($32|0)==($__last|0);
     if ($33) {
      break;
     } else {
      $$03 = $32;$__p$04 = $31;
     }
    }
   }
   $scevgep2 = (($29) + ($scevgep1)|0);
   HEAP8[$scevgep2>>0] = 0;
   $34 = (($15) + ($12))|0;
   $35 = HEAP8[$this>>0]|0;
   $36 = $35 & 1;
   $37 = ($36<<24>>24)==(0);
   if ($37) {
    $39 = $34 << 1;
    $40 = $39&255;
    HEAP8[$this>>0] = $40;
    break;
   } else {
    $38 = ((($this)) + 4|0);
    HEAP32[$38>>2] = $34;
    break;
   }
  }
 } while(0);
 return ($this|0);
}
function __ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__b,$__n,$__e) {
 $__b = $__b|0;
 $__n = $__n|0;
 $__e = $__e|0;
 var $$ = 0, $$pr = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($__b)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)!=(107|0);
 $3 = HEAP32[$__e>>2]|0;
 $4 = HEAP32[$__b>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = ($7>>>0)<(2147483647);
 $9 = $7 << 1;
 $$ = $8 ? $9 : -1;
 $10 = HEAP32[$__n>>2]|0;
 $11 = $10;
 $12 = (($11) - ($6))|0;
 $13 = $12 >> 2;
 $14 = $2 ? $4 : 0;
 $15 = (_realloc($14,$$)|0);
 $16 = ($15|0)==(0|0);
 if ($16) {
  __ZSt17__throw_bad_allocv();
  // unreachable;
 }
 if ($2) {
  $17 = $15;
  HEAP32[$__b>>2] = $17;
  $23 = $15;
 } else {
  $$pr = HEAP32[$__b>>2]|0;
  $18 = $15;
  HEAP32[$__b>>2] = $18;
  $19 = ($$pr|0)==(0|0);
  if ($19) {
   $23 = $15;
  } else {
   $20 = HEAP32[$0>>2]|0;
   FUNCTION_TABLE_vi[$20 & 127]($$pr);
   $$pre = HEAP32[$__b>>2]|0;
   $23 = $$pre;
  }
 }
 HEAP32[$0>>2] = (110);
 $21 = $$ >>> 2;
 $22 = (($23) + ($13<<2)|0);
 HEAP32[$__n>>2] = $22;
 $24 = HEAP32[$__b>>2]|0;
 $25 = (($24) + ($21<<2)|0);
 HEAP32[$__e>>2] = $25;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendIPwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$03 = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$04 = 0, $phitmp$i = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__first;
 $1 = HEAP8[$this>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $4 = $1&255;
  $5 = $4 >>> 1;
  $16 = $5;$17 = 1;$45 = $1;
 } else {
  $6 = ((($this)) + 4|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = HEAP32[$this>>2]|0;
  $9 = $8 & -2;
  $phitmp$i = (($9) + -1)|0;
  $10 = $8&255;
  $16 = $7;$17 = $phitmp$i;$45 = $10;
 }
 $11 = $__last;
 $12 = (($11) - ($0))|0;
 $13 = $12 >> 2;
 $14 = ($13|0)==(0);
 do {
  if (!($14)) {
   $15 = (($17) - ($16))|0;
   $18 = ($15>>>0)<($13>>>0);
   if ($18) {
    $19 = (($16) + ($13))|0;
    $20 = (($19) - ($17))|0;
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this,$17,$20,$16,$16,0,0);
    $$pre = HEAP8[$this>>0]|0;
    $22 = $$pre;
   } else {
    $22 = $45;
   }
   $21 = $22 & 1;
   $23 = ($21<<24>>24)==(0);
   if ($23) {
    $26 = ((($this)) + 4|0);
    $33 = $26;
   } else {
    $24 = ((($this)) + 8|0);
    $25 = HEAP32[$24>>2]|0;
    $33 = $25;
   }
   $27 = $__last;
   $28 = (($27) - ($0))|0;
   $29 = $28 >>> 2;
   $30 = (($16) + ($29))|0;
   $31 = ($__first|0)==($__last|0);
   if (!($31)) {
    $32 = (($33) + ($16<<2)|0);
    $$03 = $__first;$__p$04 = $32;
    while(1) {
     $34 = HEAP32[$$03>>2]|0;
     HEAP32[$__p$04>>2] = $34;
     $35 = ((($__p$04)) + 4|0);
     $36 = ((($$03)) + 4|0);
     $37 = ($36|0)==($__last|0);
     if ($37) {
      break;
     } else {
      $$03 = $36;$__p$04 = $35;
     }
    }
   }
   $scevgep = (($33) + ($30<<2)|0);
   HEAP32[$scevgep>>2] = 0;
   $38 = (($16) + ($13))|0;
   $39 = HEAP8[$this>>0]|0;
   $40 = $39 & 1;
   $41 = ($40<<24>>24)==(0);
   if ($41) {
    $43 = $38 << 1;
    $44 = $43&255;
    HEAP8[$this>>0] = $44;
    break;
   } else {
    $42 = ((($this)) + 4|0);
    HEAP32[$42>>2] = $38;
    break;
   }
  }
 } while(0);
 return ($this|0);
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEEC2Ej($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = 0;
 $0 = ((($this)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($this)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($this)) + 128|0);
 HEAP8[$2>>0] = 0;
 $3 = ($__n|0)==(0);
 if (!($3)) {
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8allocateEj($this,$__n);
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($this,$__n);
 }
 return;
}
function __ZNSt3__16locale5__imp7installINS_7collateIcEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5008)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7collateIwEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5048)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_5ctypeIcEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6160)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_5ctypeIwEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6152)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7codecvtIcc11__mbstate_tEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6224)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7codecvtIwc11__mbstate_tEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6232)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7codecvtIDsc11__mbstate_tEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6288)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7codecvtIDic11__mbstate_tEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6296)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8numpunctIcEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6304)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8numpunctIwEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6312)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5120)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5232)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5296)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5360)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5680)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5744)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5808)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5872)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5912)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5952)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5992)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6032)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5456)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5552)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5584)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5616)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8messagesIcEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6072)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8messagesIwEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6112)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE6resizeEj($this,$__sz) {
 $this = $this|0;
 $__sz = $__sz|0;
 var $$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$this>>2]|0;
 $3 = $1;
 $4 = $2;
 $5 = (($3) - ($4))|0;
 $6 = $5 >> 2;
 $7 = ($6>>>0)<($__sz>>>0);
 if ($7) {
  $8 = (($__sz) - ($6))|0;
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($this,$8);
 } else {
  $9 = ($6>>>0)>($__sz>>>0);
  if ($9) {
   $10 = (($2) + ($__sz<<2)|0);
   $11 = ($1|0)==($10|0);
   if (!($11)) {
    $13 = $1;
    while(1) {
     $12 = ((($13)) + -4|0);
     $14 = ($12|0)==($10|0);
     if ($14) {
      $$lcssa = $12;
      break;
     } else {
      $13 = $12;
     }
    }
    HEAP32[$0>>2] = $$lcssa;
   }
  }
 }
 return;
}
function __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($this) {
 $this = $this|0;
 var $$lcssa = 0, $$pre$i$i = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ($0|0)==(0|0);
 do {
  if (!($1)) {
   $2 = ((($this)) + 4|0);
   $$pre$i$i = HEAP32[$2>>2]|0;
   $3 = ($$pre$i$i|0)==($0|0);
   if (!($3)) {
    $5 = $$pre$i$i;
    while(1) {
     $4 = ((($5)) + -4|0);
     $6 = ($4|0)==($0|0);
     if ($6) {
      $$lcssa = $4;
      break;
     } else {
      $5 = $4;
     }
    }
    HEAP32[$2>>2] = $$lcssa;
   }
   $7 = ((($this)) + 16|0);
   $8 = ($7|0)==($0|0);
   if ($8) {
    $9 = ((($this)) + 128|0);
    HEAP8[$9>>0] = 0;
    break;
   } else {
    __ZdlPv($0);
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__117__call_once_proxyINS_5tupleIJNS_12_GLOBAL__N_111__fake_bindEEEEEEvPv($__vp) {
 $__vp = $__vp|0;
 var $$field = 0, $$field2 = 0, $$index1 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($__vp)) + 4|0);
 $$field = HEAP32[$0>>2]|0;
 $$index1 = ((($0)) + 4|0);
 $$field2 = HEAP32[$$index1>>2]|0;
 $1 = HEAP32[$__vp>>2]|0;
 $2 = $$field2 >> 1;
 $3 = (($1) + ($2)|0);
 $4 = $$field2 & 1;
 $5 = ($4|0)==(0);
 if ($5) {
  $9 = $$field;
  $10 = $9;
 } else {
  $6 = HEAP32[$3>>2]|0;
  $7 = (($6) + ($$field)|0);
  $8 = HEAP32[$7>>2]|0;
  $10 = $8;
 }
 FUNCTION_TABLE_vi[$10 & 127]($3);
 return;
}
function __ZNSt3__1L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$pre = 0, $$pre1 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 $0 = $mode & 2;
 $1 = ($0|0)==(0);
 $$pre1 = $to_end;
 if ($1) {
  label = 4;
 } else {
  $2 = $to;
  $3 = (($$pre1) - ($2))|0;
  $4 = ($3|0)<(3);
  if ($4) {
   $$0 = 1;
  } else {
   $5 = ((($to)) + 1|0);
   HEAP32[$to_nxt>>2] = $5;
   HEAP8[$to>>0] = -17;
   $6 = HEAP32[$to_nxt>>2]|0;
   $7 = ((($6)) + 1|0);
   HEAP32[$to_nxt>>2] = $7;
   HEAP8[$6>>0] = -69;
   $8 = HEAP32[$to_nxt>>2]|0;
   $9 = ((($8)) + 1|0);
   HEAP32[$to_nxt>>2] = $9;
   HEAP8[$8>>0] = -65;
   label = 4;
  }
 }
 L4: do {
  if ((label|0) == 4) {
   $10 = $frm_end;
   $$pre = HEAP32[$frm_nxt>>2]|0;
   $11 = ($$pre>>>0)<($frm_end>>>0);
   if ($11) {
    $13 = $$pre;
    while(1) {
     $12 = HEAP16[$13>>1]|0;
     $14 = $12&65535;
     $15 = ($14>>>0)>($Maxcode>>>0);
     if ($15) {
      $$0 = 2;
      break L4;
     }
     $16 = ($12&65535)<(128);
     do {
      if ($16) {
       $17 = HEAP32[$to_nxt>>2]|0;
       $18 = $17;
       $19 = (($$pre1) - ($18))|0;
       $20 = ($19|0)<(1);
       if ($20) {
        $$0 = 1;
        break L4;
       }
       $21 = $12&255;
       $22 = ((($17)) + 1|0);
       HEAP32[$to_nxt>>2] = $22;
       HEAP8[$17>>0] = $21;
      } else {
       $23 = ($12&65535)<(2048);
       if ($23) {
        $24 = HEAP32[$to_nxt>>2]|0;
        $25 = $24;
        $26 = (($$pre1) - ($25))|0;
        $27 = ($26|0)<(2);
        if ($27) {
         $$0 = 1;
         break L4;
        }
        $28 = $14 >>> 6;
        $29 = $28 | 192;
        $30 = $29&255;
        $31 = ((($24)) + 1|0);
        HEAP32[$to_nxt>>2] = $31;
        HEAP8[$24>>0] = $30;
        $32 = $14 & 63;
        $33 = $32 | 128;
        $34 = $33&255;
        $35 = HEAP32[$to_nxt>>2]|0;
        $36 = ((($35)) + 1|0);
        HEAP32[$to_nxt>>2] = $36;
        HEAP8[$35>>0] = $34;
        break;
       }
       $37 = ($12&65535)<(55296);
       if ($37) {
        $38 = HEAP32[$to_nxt>>2]|0;
        $39 = $38;
        $40 = (($$pre1) - ($39))|0;
        $41 = ($40|0)<(3);
        if ($41) {
         $$0 = 1;
         break L4;
        }
        $42 = $14 >>> 12;
        $43 = $42 | 224;
        $44 = $43&255;
        $45 = ((($38)) + 1|0);
        HEAP32[$to_nxt>>2] = $45;
        HEAP8[$38>>0] = $44;
        $46 = $14 >>> 6;
        $47 = $46 & 63;
        $48 = $47 | 128;
        $49 = $48&255;
        $50 = HEAP32[$to_nxt>>2]|0;
        $51 = ((($50)) + 1|0);
        HEAP32[$to_nxt>>2] = $51;
        HEAP8[$50>>0] = $49;
        $52 = $14 & 63;
        $53 = $52 | 128;
        $54 = $53&255;
        $55 = HEAP32[$to_nxt>>2]|0;
        $56 = ((($55)) + 1|0);
        HEAP32[$to_nxt>>2] = $56;
        HEAP8[$55>>0] = $54;
        break;
       }
       $57 = ($12&65535)<(56320);
       if (!($57)) {
        $109 = ($12&65535)<(57344);
        if ($109) {
         $$0 = 2;
         break L4;
        }
        $110 = HEAP32[$to_nxt>>2]|0;
        $111 = $110;
        $112 = (($$pre1) - ($111))|0;
        $113 = ($112|0)<(3);
        if ($113) {
         $$0 = 1;
         break L4;
        }
        $114 = $14 >>> 12;
        $115 = $114 | 224;
        $116 = $115&255;
        $117 = ((($110)) + 1|0);
        HEAP32[$to_nxt>>2] = $117;
        HEAP8[$110>>0] = $116;
        $118 = $14 >>> 6;
        $119 = $118 & 63;
        $120 = $119 | 128;
        $121 = $120&255;
        $122 = HEAP32[$to_nxt>>2]|0;
        $123 = ((($122)) + 1|0);
        HEAP32[$to_nxt>>2] = $123;
        HEAP8[$122>>0] = $121;
        $124 = $14 & 63;
        $125 = $124 | 128;
        $126 = $125&255;
        $127 = HEAP32[$to_nxt>>2]|0;
        $128 = ((($127)) + 1|0);
        HEAP32[$to_nxt>>2] = $128;
        HEAP8[$127>>0] = $126;
        break;
       }
       $58 = $13;
       $59 = (($10) - ($58))|0;
       $60 = ($59|0)<(4);
       if ($60) {
        $$0 = 1;
        break L4;
       }
       $61 = ((($13)) + 2|0);
       $62 = HEAP16[$61>>1]|0;
       $63 = $62&65535;
       $64 = $63 & 64512;
       $65 = ($64|0)==(56320);
       if (!($65)) {
        $$0 = 2;
        break L4;
       }
       $66 = HEAP32[$to_nxt>>2]|0;
       $67 = $66;
       $68 = (($$pre1) - ($67))|0;
       $69 = ($68|0)<(4);
       if ($69) {
        $$0 = 1;
        break L4;
       }
       $70 = $14 & 960;
       $71 = $70 << 10;
       $72 = (($71) + 65536)|0;
       $73 = $14 << 10;
       $74 = $73 & 64512;
       $75 = $72 | $74;
       $76 = $63 & 1023;
       $77 = $75 | $76;
       $78 = ($77>>>0)>($Maxcode>>>0);
       if ($78) {
        $$0 = 2;
        break L4;
       }
       HEAP32[$frm_nxt>>2] = $61;
       $79 = $70 >>> 6;
       $80 = (($79) + 1)|0;
       $81 = $80 >>> 2;
       $82 = $81 | 240;
       $83 = $82&255;
       $84 = HEAP32[$to_nxt>>2]|0;
       $85 = ((($84)) + 1|0);
       HEAP32[$to_nxt>>2] = $85;
       HEAP8[$84>>0] = $83;
       $86 = $80 << 4;
       $87 = $86 & 48;
       $88 = $14 >>> 2;
       $89 = $88 & 15;
       $90 = $89 | $87;
       $91 = $90 | 128;
       $92 = $91&255;
       $93 = HEAP32[$to_nxt>>2]|0;
       $94 = ((($93)) + 1|0);
       HEAP32[$to_nxt>>2] = $94;
       HEAP8[$93>>0] = $92;
       $95 = $14 << 4;
       $96 = $95 & 48;
       $97 = $63 >>> 6;
       $98 = $97 & 15;
       $99 = $96 | $98;
       $100 = $99 | 128;
       $101 = $100&255;
       $102 = HEAP32[$to_nxt>>2]|0;
       $103 = ((($102)) + 1|0);
       HEAP32[$to_nxt>>2] = $103;
       HEAP8[$102>>0] = $101;
       $104 = $63 & 63;
       $105 = $104 | 128;
       $106 = $105&255;
       $107 = HEAP32[$to_nxt>>2]|0;
       $108 = ((($107)) + 1|0);
       HEAP32[$to_nxt>>2] = $108;
       HEAP8[$107>>0] = $106;
      }
     } while(0);
     $129 = HEAP32[$frm_nxt>>2]|0;
     $130 = ((($129)) + 2|0);
     HEAP32[$frm_nxt>>2] = $130;
     $131 = ($130>>>0)<($frm_end>>>0);
     if ($131) {
      $13 = $130;
     } else {
      $$0 = 0;
      break;
     }
    }
   } else {
    $$0 = 0;
   }
  }
 } while(0);
 return ($$0|0);
}
function __ZNSt3__1L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$lcssa = 0, $$off = 0, $$pre = 0, $$pre$phiZ2D = 0, $$pre$pre = 0, $$pre4 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 $0 = $mode & 4;
 $1 = ($0|0)==(0);
 if ($1) {
  $$pre4 = $frm_end;
  $$pre = $to;$$pre$phiZ2D = $$pre4;
 } else {
  $2 = HEAP32[$frm_nxt>>2]|0;
  $3 = $frm_end;
  $4 = $2;
  $5 = (($3) - ($4))|0;
  $6 = ($5|0)>(2);
  if ($6) {
   $7 = HEAP8[$2>>0]|0;
   $8 = ($7<<24>>24)==(-17);
   if ($8) {
    $9 = ((($2)) + 1|0);
    $10 = HEAP8[$9>>0]|0;
    $11 = ($10<<24>>24)==(-69);
    if ($11) {
     $12 = ((($2)) + 2|0);
     $13 = HEAP8[$12>>0]|0;
     $14 = ($13<<24>>24)==(-65);
     if ($14) {
      $15 = ((($2)) + 3|0);
      HEAP32[$frm_nxt>>2] = $15;
      $$pre$pre = HEAP32[$to_nxt>>2]|0;
      $$pre = $$pre$pre;$$pre$phiZ2D = $3;
     } else {
      $$pre = $to;$$pre$phiZ2D = $3;
     }
    } else {
     $$pre = $to;$$pre$phiZ2D = $3;
    }
   } else {
    $$pre = $to;$$pre$phiZ2D = $3;
   }
  } else {
   $$pre = $to;$$pre$phiZ2D = $3;
  }
 }
 $16 = $to_end;
 $17 = HEAP32[$frm_nxt>>2]|0;
 $18 = ($17>>>0)<($frm_end>>>0);
 $19 = ($$pre>>>0)<($to_end>>>0);
 $20 = $18 & $19;
 L9: do {
  if ($20) {
   $22 = $17;$27 = $$pre;
   while(1) {
    $21 = HEAP8[$22>>0]|0;
    $23 = $21&255;
    $24 = ($23>>>0)>($Maxcode>>>0);
    if ($24) {
     $$0 = 2;
     break L9;
    }
    $25 = ($21<<24>>24)>(-1);
    do {
     if ($25) {
      $26 = $21&255;
      HEAP16[$27>>1] = $26;
      $28 = ((($22)) + 1|0);
      HEAP32[$frm_nxt>>2] = $28;
     } else {
      $29 = ($21&255)<(194);
      if ($29) {
       $$0 = 2;
       break L9;
      }
      $30 = ($21&255)<(224);
      if ($30) {
       $31 = $22;
       $32 = (($$pre$phiZ2D) - ($31))|0;
       $33 = ($32|0)<(2);
       if ($33) {
        $$0 = 1;
        break L9;
       }
       $34 = ((($22)) + 1|0);
       $35 = HEAP8[$34>>0]|0;
       $36 = $35&255;
       $37 = $36 & 192;
       $38 = ($37|0)==(128);
       if (!($38)) {
        $$0 = 2;
        break L9;
       }
       $39 = $23 << 6;
       $40 = $39 & 1984;
       $41 = $36 & 63;
       $42 = $41 | $40;
       $43 = ($42>>>0)>($Maxcode>>>0);
       if ($43) {
        $$0 = 2;
        break L9;
       }
       $44 = $42&65535;
       HEAP16[$27>>1] = $44;
       $45 = ((($22)) + 2|0);
       HEAP32[$frm_nxt>>2] = $45;
       break;
      }
      $46 = ($21&255)<(240);
      if ($46) {
       $47 = $22;
       $48 = (($$pre$phiZ2D) - ($47))|0;
       $49 = ($48|0)<(3);
       if ($49) {
        $$0 = 1;
        break L9;
       }
       $50 = ((($22)) + 1|0);
       $51 = HEAP8[$50>>0]|0;
       $52 = ((($22)) + 2|0);
       $53 = HEAP8[$52>>0]|0;
       if ((($23|0) == 224)) {
        $54 = $51 & -32;
        $55 = ($54<<24>>24)==(-96);
        if (!($55)) {
         $$0 = 2;
         break L9;
        }
       } else if ((($23|0) == 237)) {
        $56 = $51 & -32;
        $57 = ($56<<24>>24)==(-128);
        if (!($57)) {
         $$0 = 2;
         break L9;
        }
       } else {
        $58 = $51 & -64;
        $59 = ($58<<24>>24)==(-128);
        if (!($59)) {
         $$0 = 2;
         break L9;
        }
       }
       $60 = $53&255;
       $61 = $60 & 192;
       $62 = ($61|0)==(128);
       if (!($62)) {
        $$0 = 2;
        break L9;
       }
       $63 = $23 << 12;
       $64 = $51&255;
       $65 = $64 << 6;
       $66 = $65 & 4032;
       $67 = $66 | $63;
       $68 = $60 & 63;
       $69 = $67 | $68;
       $70 = $69 & 65535;
       $71 = ($70>>>0)>($Maxcode>>>0);
       if ($71) {
        $$0 = 2;
        break L9;
       }
       $72 = $69&65535;
       HEAP16[$27>>1] = $72;
       $73 = ((($22)) + 3|0);
       HEAP32[$frm_nxt>>2] = $73;
       break;
      }
      $74 = ($21&255)<(245);
      if (!($74)) {
       $$0 = 2;
       break L9;
      }
      $75 = $22;
      $76 = (($$pre$phiZ2D) - ($75))|0;
      $77 = ($76|0)<(4);
      if ($77) {
       $$0 = 1;
       break L9;
      }
      $78 = ((($22)) + 1|0);
      $79 = HEAP8[$78>>0]|0;
      $80 = ((($22)) + 2|0);
      $81 = HEAP8[$80>>0]|0;
      $82 = ((($22)) + 3|0);
      $83 = HEAP8[$82>>0]|0;
      if ((($23|0) == 240)) {
       $$off = (($79) + 112)<<24>>24;
       $84 = ($$off&255)<(48);
       if (!($84)) {
        $$0 = 2;
        break L9;
       }
      } else if ((($23|0) == 244)) {
       $85 = $79 & -16;
       $86 = ($85<<24>>24)==(-128);
       if (!($86)) {
        $$0 = 2;
        break L9;
       }
      } else {
       $87 = $79 & -64;
       $88 = ($87<<24>>24)==(-128);
       if (!($88)) {
        $$0 = 2;
        break L9;
       }
      }
      $89 = $81&255;
      $90 = $89 & 192;
      $91 = ($90|0)==(128);
      if (!($91)) {
       $$0 = 2;
       break L9;
      }
      $92 = $83&255;
      $93 = $92 & 192;
      $94 = ($93|0)==(128);
      if (!($94)) {
       $$0 = 2;
       break L9;
      }
      $95 = $27;
      $96 = (($16) - ($95))|0;
      $97 = ($96|0)<(4);
      if ($97) {
       $$0 = 1;
       break L9;
      }
      $98 = $23 & 7;
      $99 = $98 << 18;
      $100 = $79&255;
      $101 = $100 << 12;
      $102 = $101 & 258048;
      $103 = $102 | $99;
      $104 = $89 << 6;
      $105 = $104 & 4032;
      $106 = $103 | $105;
      $107 = $92 & 63;
      $108 = $106 | $107;
      $109 = ($108>>>0)>($Maxcode>>>0);
      if ($109) {
       $$0 = 2;
       break L9;
      }
      $110 = $98 << 2;
      $111 = $100 >>> 4;
      $112 = $111 & 3;
      $113 = $112 | $110;
      $114 = $113 << 6;
      $115 = (($114) + 16320)|0;
      $116 = $100 << 2;
      $117 = $116 & 60;
      $118 = $89 >>> 4;
      $119 = $118 & 3;
      $120 = $117 | $119;
      $121 = $120 | $115;
      $122 = $121 | 55296;
      $123 = $122&65535;
      HEAP16[$27>>1] = $123;
      $124 = $104 & 960;
      $125 = $107 | $124;
      $126 = $125 | 56320;
      $127 = $126&65535;
      $128 = ((($27)) + 2|0);
      HEAP32[$to_nxt>>2] = $128;
      HEAP16[$128>>1] = $127;
      $129 = HEAP32[$frm_nxt>>2]|0;
      $130 = ((($129)) + 4|0);
      HEAP32[$frm_nxt>>2] = $130;
     }
    } while(0);
    $131 = HEAP32[$to_nxt>>2]|0;
    $132 = ((($131)) + 2|0);
    HEAP32[$to_nxt>>2] = $132;
    $133 = HEAP32[$frm_nxt>>2]|0;
    $134 = ($133>>>0)<($frm_end>>>0);
    $135 = ($132>>>0)<($to_end>>>0);
    $136 = $134 & $135;
    if ($136) {
     $22 = $133;$27 = $132;
    } else {
     $$lcssa = $134;
     label = 39;
     break;
    }
   }
  } else {
   $$lcssa = $18;
   label = 39;
  }
 } while(0);
 if ((label|0) == 39) {
  $137 = $$lcssa&1;
  $$0 = $137;
 }
 return ($$0|0);
}
function __ZNSt3__1L20utf8_to_utf16_lengthEPKhS1_jmNS_12codecvt_modeE($frm,$frm_end,$mx,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$frm = 0, $$lcssa = 0, $$lcssa82 = 0, $$lcssa83 = 0, $$lcssa84 = 0, $$lcssa85 = 0, $$lcssa86 = 0, $$off = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $frm_nxt$1$lcssa = 0, $frm_nxt$1$ph = 0, $frm_nxt$150 = 0, $frm_nxt$2 = 0, $nchar16_t$049 = 0, $nchar16_t$1 = 0, $or$cond = 0, $or$cond2 = 0, $or$cond48 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $mode & 4;
 $1 = ($0|0)==(0);
 $$pre = $frm_end;
 if ($1) {
  $frm_nxt$1$ph = $frm;
 } else {
  $2 = $frm;
  $3 = (($$pre) - ($2))|0;
  $4 = ($3|0)>(2);
  if ($4) {
   $5 = HEAP8[$frm>>0]|0;
   $6 = ($5<<24>>24)==(-17);
   if ($6) {
    $7 = ((($frm)) + 1|0);
    $8 = HEAP8[$7>>0]|0;
    $9 = ($8<<24>>24)==(-69);
    if ($9) {
     $10 = ((($frm)) + 2|0);
     $11 = HEAP8[$10>>0]|0;
     $12 = ($11<<24>>24)==(-65);
     $13 = ((($frm)) + 3|0);
     $$frm = $12 ? $13 : $frm;
     $frm_nxt$1$ph = $$frm;
    } else {
     $frm_nxt$1$ph = $frm;
    }
   } else {
    $frm_nxt$1$ph = $frm;
   }
  } else {
   $frm_nxt$1$ph = $frm;
  }
 }
 $14 = ($frm_nxt$1$ph>>>0)<($frm_end>>>0);
 $15 = ($mx|0)!=(0);
 $or$cond48 = $15 & $14;
 L7: do {
  if ($or$cond48) {
   $frm_nxt$150 = $frm_nxt$1$ph;$nchar16_t$049 = 0;
   L8: while(1) {
    $16 = HEAP8[$frm_nxt$150>>0]|0;
    $17 = $16&255;
    $18 = ($17>>>0)>($Maxcode>>>0);
    if ($18) {
     $frm_nxt$1$lcssa = $frm_nxt$150;
     label = 42;
     break L7;
    }
    $19 = ($16<<24>>24)>(-1);
    do {
     if ($19) {
      $20 = ((($frm_nxt$150)) + 1|0);
      $frm_nxt$2 = $20;$nchar16_t$1 = $nchar16_t$049;
     } else {
      $21 = ($16&255)<(194);
      if ($21) {
       $frm_nxt$1$lcssa = $frm_nxt$150;
       label = 42;
       break L7;
      }
      $22 = ($16&255)<(224);
      if ($22) {
       $23 = $frm_nxt$150;
       $24 = (($$pre) - ($23))|0;
       $25 = ($24|0)<(2);
       if ($25) {
        $frm_nxt$1$lcssa = $frm_nxt$150;
        label = 42;
        break L7;
       }
       $26 = ((($frm_nxt$150)) + 1|0);
       $27 = HEAP8[$26>>0]|0;
       $28 = $27&255;
       $29 = $28 & 192;
       $30 = ($29|0)==(128);
       if (!($30)) {
        $frm_nxt$1$lcssa = $frm_nxt$150;
        label = 42;
        break L7;
       }
       $31 = $17 << 6;
       $32 = $31 & 1984;
       $33 = $28 & 63;
       $34 = $33 | $32;
       $35 = ($34>>>0)>($Maxcode>>>0);
       if ($35) {
        $frm_nxt$1$lcssa = $frm_nxt$150;
        label = 42;
        break L7;
       }
       $36 = ((($frm_nxt$150)) + 2|0);
       $frm_nxt$2 = $36;$nchar16_t$1 = $nchar16_t$049;
       break;
      }
      $37 = ($16&255)<(240);
      if ($37) {
       $38 = $frm_nxt$150;
       $39 = (($$pre) - ($38))|0;
       $40 = ($39|0)<(3);
       if ($40) {
        $frm_nxt$1$lcssa = $frm_nxt$150;
        label = 42;
        break L7;
       }
       $41 = ((($frm_nxt$150)) + 1|0);
       $42 = HEAP8[$41>>0]|0;
       $43 = ((($frm_nxt$150)) + 2|0);
       $44 = HEAP8[$43>>0]|0;
       if ((($17|0) == 224)) {
        $45 = $42 & -32;
        $46 = ($45<<24>>24)==(-96);
        if (!($46)) {
         $$lcssa85 = $38;
         label = 20;
         break L8;
        }
       } else if ((($17|0) == 237)) {
        $49 = $42 & -32;
        $50 = ($49<<24>>24)==(-128);
        if (!($50)) {
         $$lcssa84 = $38;
         label = 22;
         break L8;
        }
       } else {
        $53 = $42 & -64;
        $54 = ($53<<24>>24)==(-128);
        if (!($54)) {
         $$lcssa86 = $38;
         label = 24;
         break L8;
        }
       }
       $57 = $44&255;
       $58 = $57 & 192;
       $59 = ($58|0)==(128);
       if (!($59)) {
        $frm_nxt$1$lcssa = $frm_nxt$150;
        label = 42;
        break L7;
       }
       $60 = $17 << 12;
       $61 = $60 & 61440;
       $62 = $42&255;
       $63 = $62 << 6;
       $64 = $63 & 4032;
       $65 = $64 | $61;
       $66 = $57 & 63;
       $67 = $65 | $66;
       $68 = ($67>>>0)>($Maxcode>>>0);
       if ($68) {
        $frm_nxt$1$lcssa = $frm_nxt$150;
        label = 42;
        break L7;
       }
       $69 = ((($frm_nxt$150)) + 3|0);
       $frm_nxt$2 = $69;$nchar16_t$1 = $nchar16_t$049;
       break;
      }
      $70 = ($16&255)<(245);
      if (!($70)) {
       $frm_nxt$1$lcssa = $frm_nxt$150;
       label = 42;
       break L7;
      }
      $71 = $frm_nxt$150;
      $72 = (($$pre) - ($71))|0;
      $73 = ($72|0)<(4);
      $74 = (($mx) - ($nchar16_t$049))|0;
      $75 = ($74>>>0)<(2);
      $or$cond2 = $75 | $73;
      if ($or$cond2) {
       $frm_nxt$1$lcssa = $frm_nxt$150;
       label = 42;
       break L7;
      }
      $76 = ((($frm_nxt$150)) + 1|0);
      $77 = HEAP8[$76>>0]|0;
      $78 = ((($frm_nxt$150)) + 2|0);
      $79 = HEAP8[$78>>0]|0;
      $80 = ((($frm_nxt$150)) + 3|0);
      $81 = HEAP8[$80>>0]|0;
      if ((($17|0) == 240)) {
       $$off = (($77) + 112)<<24>>24;
       $82 = ($$off&255)<(48);
       if (!($82)) {
        $$lcssa82 = $71;
        label = 32;
        break L8;
       }
      } else if ((($17|0) == 244)) {
       $85 = $77 & -16;
       $86 = ($85<<24>>24)==(-128);
       if (!($86)) {
        $$lcssa = $71;
        label = 34;
        break L8;
       }
      } else {
       $89 = $77 & -64;
       $90 = ($89<<24>>24)==(-128);
       if (!($90)) {
        $$lcssa83 = $71;
        label = 36;
        break L8;
       }
      }
      $93 = $79&255;
      $94 = $93 & 192;
      $95 = ($94|0)==(128);
      if (!($95)) {
       $frm_nxt$1$lcssa = $frm_nxt$150;
       label = 42;
       break L7;
      }
      $96 = $81&255;
      $97 = $96 & 192;
      $98 = ($97|0)==(128);
      if (!($98)) {
       $frm_nxt$1$lcssa = $frm_nxt$150;
       label = 42;
       break L7;
      }
      $99 = $17 << 18;
      $100 = $99 & 1835008;
      $101 = $77&255;
      $102 = $101 << 12;
      $103 = $102 & 258048;
      $104 = $103 | $100;
      $105 = $93 << 6;
      $106 = $105 & 4032;
      $107 = $104 | $106;
      $108 = $96 & 63;
      $109 = $107 | $108;
      $110 = ($109>>>0)>($Maxcode>>>0);
      if ($110) {
       $frm_nxt$1$lcssa = $frm_nxt$150;
       label = 42;
       break L7;
      }
      $111 = (($nchar16_t$049) + 1)|0;
      $112 = ((($frm_nxt$150)) + 4|0);
      $frm_nxt$2 = $112;$nchar16_t$1 = $111;
     }
    } while(0);
    $113 = (($nchar16_t$1) + 1)|0;
    $114 = ($frm_nxt$2>>>0)<($frm_end>>>0);
    $115 = ($113>>>0)<($mx>>>0);
    $or$cond = $115 & $114;
    if ($or$cond) {
     $frm_nxt$150 = $frm_nxt$2;$nchar16_t$049 = $113;
    } else {
     $frm_nxt$1$lcssa = $frm_nxt$2;
     label = 42;
     break L7;
    }
   }
   if ((label|0) == 20) {
    $47 = $frm;
    $48 = (($$lcssa85) - ($47))|0;
    $$0 = $48;
    break;
   }
   else if ((label|0) == 22) {
    $51 = $frm;
    $52 = (($$lcssa84) - ($51))|0;
    $$0 = $52;
    break;
   }
   else if ((label|0) == 24) {
    $55 = $frm;
    $56 = (($$lcssa86) - ($55))|0;
    $$0 = $56;
    break;
   }
   else if ((label|0) == 32) {
    $83 = $frm;
    $84 = (($$lcssa82) - ($83))|0;
    $$0 = $84;
    break;
   }
   else if ((label|0) == 34) {
    $87 = $frm;
    $88 = (($$lcssa) - ($87))|0;
    $$0 = $88;
    break;
   }
   else if ((label|0) == 36) {
    $91 = $frm;
    $92 = (($$lcssa83) - ($91))|0;
    $$0 = $92;
    break;
   }
  } else {
   $frm_nxt$1$lcssa = $frm_nxt$1$ph;
   label = 42;
  }
 } while(0);
 if ((label|0) == 42) {
  $116 = $frm_nxt$1$lcssa;
  $117 = $frm;
  $118 = (($116) - ($117))|0;
  $$0 = $118;
 }
 return ($$0|0);
}
function __ZNSt3__1L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$pre = 0, $$pre1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 $0 = $mode & 2;
 $1 = ($0|0)==(0);
 $$pre1 = $to_end;
 if ($1) {
  label = 4;
 } else {
  $2 = $to;
  $3 = (($$pre1) - ($2))|0;
  $4 = ($3|0)<(3);
  if ($4) {
   $$0 = 1;
  } else {
   $5 = ((($to)) + 1|0);
   HEAP32[$to_nxt>>2] = $5;
   HEAP8[$to>>0] = -17;
   $6 = HEAP32[$to_nxt>>2]|0;
   $7 = ((($6)) + 1|0);
   HEAP32[$to_nxt>>2] = $7;
   HEAP8[$6>>0] = -69;
   $8 = HEAP32[$to_nxt>>2]|0;
   $9 = ((($8)) + 1|0);
   HEAP32[$to_nxt>>2] = $9;
   HEAP8[$8>>0] = -65;
   label = 4;
  }
 }
 L4: do {
  if ((label|0) == 4) {
   $$pre = HEAP32[$frm_nxt>>2]|0;
   $10 = ($$pre>>>0)<($frm_end>>>0);
   if ($10) {
    $12 = $$pre;
    while(1) {
     $11 = HEAP32[$12>>2]|0;
     $13 = $11 & -2048;
     $14 = ($13|0)==(55296);
     $15 = ($11>>>0)>($Maxcode>>>0);
     $or$cond = $15 | $14;
     if ($or$cond) {
      $$0 = 2;
      break L4;
     }
     $16 = ($11>>>0)<(128);
     do {
      if ($16) {
       $17 = HEAP32[$to_nxt>>2]|0;
       $18 = $17;
       $19 = (($$pre1) - ($18))|0;
       $20 = ($19|0)<(1);
       if ($20) {
        $$0 = 1;
        break L4;
       }
       $21 = $11&255;
       $22 = ((($17)) + 1|0);
       HEAP32[$to_nxt>>2] = $22;
       HEAP8[$17>>0] = $21;
      } else {
       $23 = ($11>>>0)<(2048);
       if ($23) {
        $24 = HEAP32[$to_nxt>>2]|0;
        $25 = $24;
        $26 = (($$pre1) - ($25))|0;
        $27 = ($26|0)<(2);
        if ($27) {
         $$0 = 1;
         break L4;
        }
        $28 = $11 >>> 6;
        $29 = $28 | 192;
        $30 = $29&255;
        $31 = ((($24)) + 1|0);
        HEAP32[$to_nxt>>2] = $31;
        HEAP8[$24>>0] = $30;
        $32 = $11 & 63;
        $33 = $32 | 128;
        $34 = $33&255;
        $35 = HEAP32[$to_nxt>>2]|0;
        $36 = ((($35)) + 1|0);
        HEAP32[$to_nxt>>2] = $36;
        HEAP8[$35>>0] = $34;
        break;
       }
       $37 = ($11>>>0)<(65536);
       $38 = HEAP32[$to_nxt>>2]|0;
       $39 = $38;
       $40 = (($$pre1) - ($39))|0;
       if ($37) {
        $41 = ($40|0)<(3);
        if ($41) {
         $$0 = 1;
         break L4;
        }
        $42 = $11 >>> 12;
        $43 = $42 | 224;
        $44 = $43&255;
        $45 = ((($38)) + 1|0);
        HEAP32[$to_nxt>>2] = $45;
        HEAP8[$38>>0] = $44;
        $46 = $11 >>> 6;
        $47 = $46 & 63;
        $48 = $47 | 128;
        $49 = $48&255;
        $50 = HEAP32[$to_nxt>>2]|0;
        $51 = ((($50)) + 1|0);
        HEAP32[$to_nxt>>2] = $51;
        HEAP8[$50>>0] = $49;
        $52 = $11 & 63;
        $53 = $52 | 128;
        $54 = $53&255;
        $55 = HEAP32[$to_nxt>>2]|0;
        $56 = ((($55)) + 1|0);
        HEAP32[$to_nxt>>2] = $56;
        HEAP8[$55>>0] = $54;
        break;
       } else {
        $57 = ($40|0)<(4);
        if ($57) {
         $$0 = 1;
         break L4;
        }
        $58 = $11 >>> 18;
        $59 = $58 | 240;
        $60 = $59&255;
        $61 = ((($38)) + 1|0);
        HEAP32[$to_nxt>>2] = $61;
        HEAP8[$38>>0] = $60;
        $62 = $11 >>> 12;
        $63 = $62 & 63;
        $64 = $63 | 128;
        $65 = $64&255;
        $66 = HEAP32[$to_nxt>>2]|0;
        $67 = ((($66)) + 1|0);
        HEAP32[$to_nxt>>2] = $67;
        HEAP8[$66>>0] = $65;
        $68 = $11 >>> 6;
        $69 = $68 & 63;
        $70 = $69 | 128;
        $71 = $70&255;
        $72 = HEAP32[$to_nxt>>2]|0;
        $73 = ((($72)) + 1|0);
        HEAP32[$to_nxt>>2] = $73;
        HEAP8[$72>>0] = $71;
        $74 = $11 & 63;
        $75 = $74 | 128;
        $76 = $75&255;
        $77 = HEAP32[$to_nxt>>2]|0;
        $78 = ((($77)) + 1|0);
        HEAP32[$to_nxt>>2] = $78;
        HEAP8[$77>>0] = $76;
        break;
       }
      }
     } while(0);
     $79 = HEAP32[$frm_nxt>>2]|0;
     $80 = ((($79)) + 4|0);
     HEAP32[$frm_nxt>>2] = $80;
     $81 = ($80>>>0)<($frm_end>>>0);
     if ($81) {
      $12 = $80;
     } else {
      $$0 = 0;
      break;
     }
    }
   } else {
    $$0 = 0;
   }
  }
 } while(0);
 return ($$0|0);
}
function __ZNSt3__1L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$lcssa = 0, $$off = 0, $$pre = 0, $$pre$phiZ2D = 0, $$pre$pre = 0, $$pre4 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 $0 = $mode & 4;
 $1 = ($0|0)==(0);
 if ($1) {
  $$pre4 = $frm_end;
  $$pre = $to;$$pre$phiZ2D = $$pre4;
 } else {
  $2 = HEAP32[$frm_nxt>>2]|0;
  $3 = $frm_end;
  $4 = $2;
  $5 = (($3) - ($4))|0;
  $6 = ($5|0)>(2);
  if ($6) {
   $7 = HEAP8[$2>>0]|0;
   $8 = ($7<<24>>24)==(-17);
   if ($8) {
    $9 = ((($2)) + 1|0);
    $10 = HEAP8[$9>>0]|0;
    $11 = ($10<<24>>24)==(-69);
    if ($11) {
     $12 = ((($2)) + 2|0);
     $13 = HEAP8[$12>>0]|0;
     $14 = ($13<<24>>24)==(-65);
     if ($14) {
      $15 = ((($2)) + 3|0);
      HEAP32[$frm_nxt>>2] = $15;
      $$pre$pre = HEAP32[$to_nxt>>2]|0;
      $$pre = $$pre$pre;$$pre$phiZ2D = $3;
     } else {
      $$pre = $to;$$pre$phiZ2D = $3;
     }
    } else {
     $$pre = $to;$$pre$phiZ2D = $3;
    }
   } else {
    $$pre = $to;$$pre$phiZ2D = $3;
   }
  } else {
   $$pre = $to;$$pre$phiZ2D = $3;
  }
 }
 $16 = HEAP32[$frm_nxt>>2]|0;
 $17 = ($16>>>0)<($frm_end>>>0);
 $18 = ($$pre>>>0)<($to_end>>>0);
 $19 = $17 & $18;
 L9: do {
  if ($19) {
   $21 = $16;$25 = $$pre;
   while(1) {
    $20 = HEAP8[$21>>0]|0;
    $22 = $20&255;
    $23 = ($20<<24>>24)>(-1);
    do {
     if ($23) {
      $24 = ($22>>>0)>($Maxcode>>>0);
      if ($24) {
       $$0 = 2;
       break L9;
      }
      HEAP32[$25>>2] = $22;
      $26 = ((($21)) + 1|0);
      HEAP32[$frm_nxt>>2] = $26;
     } else {
      $27 = ($20&255)<(194);
      if ($27) {
       $$0 = 2;
       break L9;
      }
      $28 = ($20&255)<(224);
      if ($28) {
       $29 = $21;
       $30 = (($$pre$phiZ2D) - ($29))|0;
       $31 = ($30|0)<(2);
       if ($31) {
        $$0 = 1;
        break L9;
       }
       $32 = ((($21)) + 1|0);
       $33 = HEAP8[$32>>0]|0;
       $34 = $33&255;
       $35 = $34 & 192;
       $36 = ($35|0)==(128);
       if (!($36)) {
        $$0 = 2;
        break L9;
       }
       $37 = $22 << 6;
       $38 = $37 & 1984;
       $39 = $34 & 63;
       $40 = $39 | $38;
       $41 = ($40>>>0)>($Maxcode>>>0);
       if ($41) {
        $$0 = 2;
        break L9;
       }
       HEAP32[$25>>2] = $40;
       $42 = ((($21)) + 2|0);
       HEAP32[$frm_nxt>>2] = $42;
       break;
      }
      $43 = ($20&255)<(240);
      if ($43) {
       $44 = $21;
       $45 = (($$pre$phiZ2D) - ($44))|0;
       $46 = ($45|0)<(3);
       if ($46) {
        $$0 = 1;
        break L9;
       }
       $47 = ((($21)) + 1|0);
       $48 = HEAP8[$47>>0]|0;
       $49 = ((($21)) + 2|0);
       $50 = HEAP8[$49>>0]|0;
       if ((($22|0) == 237)) {
        $53 = $48 & -32;
        $54 = ($53<<24>>24)==(-128);
        if (!($54)) {
         $$0 = 2;
         break L9;
        }
       } else if ((($22|0) == 224)) {
        $51 = $48 & -32;
        $52 = ($51<<24>>24)==(-96);
        if (!($52)) {
         $$0 = 2;
         break L9;
        }
       } else {
        $55 = $48 & -64;
        $56 = ($55<<24>>24)==(-128);
        if (!($56)) {
         $$0 = 2;
         break L9;
        }
       }
       $57 = $50&255;
       $58 = $57 & 192;
       $59 = ($58|0)==(128);
       if (!($59)) {
        $$0 = 2;
        break L9;
       }
       $60 = $22 << 12;
       $61 = $60 & 61440;
       $62 = $48&255;
       $63 = $62 << 6;
       $64 = $63 & 4032;
       $65 = $64 | $61;
       $66 = $57 & 63;
       $67 = $65 | $66;
       $68 = ($67>>>0)>($Maxcode>>>0);
       if ($68) {
        $$0 = 2;
        break L9;
       }
       HEAP32[$25>>2] = $67;
       $69 = ((($21)) + 3|0);
       HEAP32[$frm_nxt>>2] = $69;
       break;
      }
      $70 = ($20&255)<(245);
      if (!($70)) {
       $$0 = 2;
       break L9;
      }
      $71 = $21;
      $72 = (($$pre$phiZ2D) - ($71))|0;
      $73 = ($72|0)<(4);
      if ($73) {
       $$0 = 1;
       break L9;
      }
      $74 = ((($21)) + 1|0);
      $75 = HEAP8[$74>>0]|0;
      $76 = ((($21)) + 2|0);
      $77 = HEAP8[$76>>0]|0;
      $78 = ((($21)) + 3|0);
      $79 = HEAP8[$78>>0]|0;
      if ((($22|0) == 244)) {
       $81 = $75 & -16;
       $82 = ($81<<24>>24)==(-128);
       if (!($82)) {
        $$0 = 2;
        break L9;
       }
      } else if ((($22|0) == 240)) {
       $$off = (($75) + 112)<<24>>24;
       $80 = ($$off&255)<(48);
       if (!($80)) {
        $$0 = 2;
        break L9;
       }
      } else {
       $83 = $75 & -64;
       $84 = ($83<<24>>24)==(-128);
       if (!($84)) {
        $$0 = 2;
        break L9;
       }
      }
      $85 = $77&255;
      $86 = $85 & 192;
      $87 = ($86|0)==(128);
      if (!($87)) {
       $$0 = 2;
       break L9;
      }
      $88 = $79&255;
      $89 = $88 & 192;
      $90 = ($89|0)==(128);
      if (!($90)) {
       $$0 = 2;
       break L9;
      }
      $91 = $22 << 18;
      $92 = $91 & 1835008;
      $93 = $75&255;
      $94 = $93 << 12;
      $95 = $94 & 258048;
      $96 = $95 | $92;
      $97 = $85 << 6;
      $98 = $97 & 4032;
      $99 = $96 | $98;
      $100 = $88 & 63;
      $101 = $99 | $100;
      $102 = ($101>>>0)>($Maxcode>>>0);
      if ($102) {
       $$0 = 2;
       break L9;
      }
      HEAP32[$25>>2] = $101;
      $103 = ((($21)) + 4|0);
      HEAP32[$frm_nxt>>2] = $103;
     }
    } while(0);
    $104 = HEAP32[$to_nxt>>2]|0;
    $105 = ((($104)) + 4|0);
    HEAP32[$to_nxt>>2] = $105;
    $106 = HEAP32[$frm_nxt>>2]|0;
    $107 = ($106>>>0)<($frm_end>>>0);
    $108 = ($105>>>0)<($to_end>>>0);
    $109 = $107 & $108;
    if ($109) {
     $21 = $106;$25 = $105;
    } else {
     $$lcssa = $107;
     label = 38;
     break;
    }
   }
  } else {
   $$lcssa = $17;
   label = 38;
  }
 } while(0);
 if ((label|0) == 38) {
  $110 = $$lcssa&1;
  $$0 = $110;
 }
 return ($$0|0);
}
function __ZNSt3__1L19utf8_to_ucs4_lengthEPKhS1_jmNS_12codecvt_modeE($frm,$frm_end,$mx,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$frm = 0, $$lcssa = 0, $$lcssa80 = 0, $$lcssa81 = 0, $$lcssa82 = 0, $$lcssa83 = 0, $$lcssa84 = 0, $$off = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $frm_nxt$1$lcssa = 0, $frm_nxt$1$ph = 0, $frm_nxt$148 = 0, $frm_nxt$2 = 0, $nchar32_t$047 = 0, $or$cond = 0, $or$cond46 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $mode & 4;
 $1 = ($0|0)==(0);
 $$pre = $frm_end;
 if ($1) {
  $frm_nxt$1$ph = $frm;
 } else {
  $2 = $frm;
  $3 = (($$pre) - ($2))|0;
  $4 = ($3|0)>(2);
  if ($4) {
   $5 = HEAP8[$frm>>0]|0;
   $6 = ($5<<24>>24)==(-17);
   if ($6) {
    $7 = ((($frm)) + 1|0);
    $8 = HEAP8[$7>>0]|0;
    $9 = ($8<<24>>24)==(-69);
    if ($9) {
     $10 = ((($frm)) + 2|0);
     $11 = HEAP8[$10>>0]|0;
     $12 = ($11<<24>>24)==(-65);
     $13 = ((($frm)) + 3|0);
     $$frm = $12 ? $13 : $frm;
     $frm_nxt$1$ph = $$frm;
    } else {
     $frm_nxt$1$ph = $frm;
    }
   } else {
    $frm_nxt$1$ph = $frm;
   }
  } else {
   $frm_nxt$1$ph = $frm;
  }
 }
 $14 = ($frm_nxt$1$ph>>>0)<($frm_end>>>0);
 $15 = ($mx|0)!=(0);
 $or$cond46 = $15 & $14;
 L7: do {
  if ($or$cond46) {
   $frm_nxt$148 = $frm_nxt$1$ph;$nchar32_t$047 = 0;
   L8: while(1) {
    $16 = HEAP8[$frm_nxt$148>>0]|0;
    $17 = $16&255;
    $18 = ($16<<24>>24)>(-1);
    do {
     if ($18) {
      $19 = ($17>>>0)>($Maxcode>>>0);
      if ($19) {
       $frm_nxt$1$lcssa = $frm_nxt$148;
       label = 42;
       break L7;
      }
      $20 = ((($frm_nxt$148)) + 1|0);
      $frm_nxt$2 = $20;
     } else {
      $21 = ($16&255)<(194);
      if ($21) {
       $frm_nxt$1$lcssa = $frm_nxt$148;
       label = 42;
       break L7;
      }
      $22 = ($16&255)<(224);
      if ($22) {
       $23 = $frm_nxt$148;
       $24 = (($$pre) - ($23))|0;
       $25 = ($24|0)<(2);
       if ($25) {
        $frm_nxt$1$lcssa = $frm_nxt$148;
        label = 42;
        break L7;
       }
       $26 = ((($frm_nxt$148)) + 1|0);
       $27 = HEAP8[$26>>0]|0;
       $28 = $27&255;
       $29 = $28 & 192;
       $30 = ($29|0)==(128);
       if (!($30)) {
        $frm_nxt$1$lcssa = $frm_nxt$148;
        label = 42;
        break L7;
       }
       $31 = $17 << 6;
       $32 = $31 & 1984;
       $33 = $28 & 63;
       $34 = $33 | $32;
       $35 = ($34>>>0)>($Maxcode>>>0);
       if ($35) {
        $frm_nxt$1$lcssa = $frm_nxt$148;
        label = 42;
        break L7;
       }
       $36 = ((($frm_nxt$148)) + 2|0);
       $frm_nxt$2 = $36;
       break;
      }
      $37 = ($16&255)<(240);
      if ($37) {
       $38 = $frm_nxt$148;
       $39 = (($$pre) - ($38))|0;
       $40 = ($39|0)<(3);
       if ($40) {
        $frm_nxt$1$lcssa = $frm_nxt$148;
        label = 42;
        break L7;
       }
       $41 = ((($frm_nxt$148)) + 1|0);
       $42 = HEAP8[$41>>0]|0;
       $43 = ((($frm_nxt$148)) + 2|0);
       $44 = HEAP8[$43>>0]|0;
       if ((($17|0) == 224)) {
        $45 = $42 & -32;
        $46 = ($45<<24>>24)==(-96);
        if (!($46)) {
         $$lcssa83 = $38;
         label = 20;
         break L8;
        }
       } else if ((($17|0) == 237)) {
        $49 = $42 & -32;
        $50 = ($49<<24>>24)==(-128);
        if (!($50)) {
         $$lcssa82 = $38;
         label = 22;
         break L8;
        }
       } else {
        $53 = $42 & -64;
        $54 = ($53<<24>>24)==(-128);
        if (!($54)) {
         $$lcssa84 = $38;
         label = 24;
         break L8;
        }
       }
       $57 = $44&255;
       $58 = $57 & 192;
       $59 = ($58|0)==(128);
       if (!($59)) {
        $frm_nxt$1$lcssa = $frm_nxt$148;
        label = 42;
        break L7;
       }
       $60 = $17 << 12;
       $61 = $60 & 61440;
       $62 = $42&255;
       $63 = $62 << 6;
       $64 = $63 & 4032;
       $65 = $64 | $61;
       $66 = $57 & 63;
       $67 = $65 | $66;
       $68 = ($67>>>0)>($Maxcode>>>0);
       if ($68) {
        $frm_nxt$1$lcssa = $frm_nxt$148;
        label = 42;
        break L7;
       }
       $69 = ((($frm_nxt$148)) + 3|0);
       $frm_nxt$2 = $69;
       break;
      }
      $70 = ($16&255)<(245);
      if (!($70)) {
       $frm_nxt$1$lcssa = $frm_nxt$148;
       label = 42;
       break L7;
      }
      $71 = $frm_nxt$148;
      $72 = (($$pre) - ($71))|0;
      $73 = ($72|0)<(4);
      if ($73) {
       $frm_nxt$1$lcssa = $frm_nxt$148;
       label = 42;
       break L7;
      }
      $74 = ((($frm_nxt$148)) + 1|0);
      $75 = HEAP8[$74>>0]|0;
      $76 = ((($frm_nxt$148)) + 2|0);
      $77 = HEAP8[$76>>0]|0;
      $78 = ((($frm_nxt$148)) + 3|0);
      $79 = HEAP8[$78>>0]|0;
      if ((($17|0) == 240)) {
       $$off = (($75) + 112)<<24>>24;
       $80 = ($$off&255)<(48);
       if (!($80)) {
        $$lcssa80 = $71;
        label = 32;
        break L8;
       }
      } else if ((($17|0) == 244)) {
       $83 = $75 & -16;
       $84 = ($83<<24>>24)==(-128);
       if (!($84)) {
        $$lcssa = $71;
        label = 34;
        break L8;
       }
      } else {
       $87 = $75 & -64;
       $88 = ($87<<24>>24)==(-128);
       if (!($88)) {
        $$lcssa81 = $71;
        label = 36;
        break L8;
       }
      }
      $91 = $77&255;
      $92 = $91 & 192;
      $93 = ($92|0)==(128);
      if (!($93)) {
       $frm_nxt$1$lcssa = $frm_nxt$148;
       label = 42;
       break L7;
      }
      $94 = $79&255;
      $95 = $94 & 192;
      $96 = ($95|0)==(128);
      if (!($96)) {
       $frm_nxt$1$lcssa = $frm_nxt$148;
       label = 42;
       break L7;
      }
      $97 = $17 << 18;
      $98 = $97 & 1835008;
      $99 = $75&255;
      $100 = $99 << 12;
      $101 = $100 & 258048;
      $102 = $101 | $98;
      $103 = $91 << 6;
      $104 = $103 & 4032;
      $105 = $102 | $104;
      $106 = $94 & 63;
      $107 = $105 | $106;
      $108 = ($107>>>0)>($Maxcode>>>0);
      if ($108) {
       $frm_nxt$1$lcssa = $frm_nxt$148;
       label = 42;
       break L7;
      }
      $109 = ((($frm_nxt$148)) + 4|0);
      $frm_nxt$2 = $109;
     }
    } while(0);
    $110 = (($nchar32_t$047) + 1)|0;
    $111 = ($frm_nxt$2>>>0)<($frm_end>>>0);
    $112 = ($110>>>0)<($mx>>>0);
    $or$cond = $112 & $111;
    if ($or$cond) {
     $frm_nxt$148 = $frm_nxt$2;$nchar32_t$047 = $110;
    } else {
     $frm_nxt$1$lcssa = $frm_nxt$2;
     label = 42;
     break L7;
    }
   }
   if ((label|0) == 20) {
    $47 = $frm;
    $48 = (($$lcssa83) - ($47))|0;
    $$0 = $48;
    break;
   }
   else if ((label|0) == 22) {
    $51 = $frm;
    $52 = (($$lcssa82) - ($51))|0;
    $$0 = $52;
    break;
   }
   else if ((label|0) == 24) {
    $55 = $frm;
    $56 = (($$lcssa84) - ($55))|0;
    $$0 = $56;
    break;
   }
   else if ((label|0) == 32) {
    $81 = $frm;
    $82 = (($$lcssa80) - ($81))|0;
    $$0 = $82;
    break;
   }
   else if ((label|0) == 34) {
    $85 = $frm;
    $86 = (($$lcssa) - ($85))|0;
    $$0 = $86;
    break;
   }
   else if ((label|0) == 36) {
    $89 = $frm;
    $90 = (($$lcssa81) - ($89))|0;
    $$0 = $90;
    break;
   }
  } else {
   $frm_nxt$1$lcssa = $frm_nxt$1$ph;
   label = 42;
  }
 } while(0);
 if ((label|0) == 42) {
  $113 = $frm_nxt$1$lcssa;
  $114 = $frm;
  $115 = (($113) - ($114))|0;
  $$0 = $115;
 }
 return ($$0|0);
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$0$i1 = 0, $$pre$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__v = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $__v = sp;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $1;
 $5 = $3;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 2;
 $8 = ($7>>>0)<($__n>>>0);
 if ($8) {
  $9 = ((($this)) + 16|0);
  $10 = HEAP32[$this>>2]|0;
  $11 = $10;
  $12 = (($5) - ($11))|0;
  $13 = $12 >> 2;
  $14 = (($13) + ($__n))|0;
  $15 = ($14>>>0)>(1073741823);
  if ($15) {
   __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
   // unreachable;
  }
  $16 = (($4) - ($11))|0;
  $17 = $16 >> 2;
  $18 = ($17>>>0)<(536870911);
  if ($18) {
   $19 = $16 >> 1;
   $20 = ($19>>>0)<($14>>>0);
   $21 = $20 ? $14 : $19;
   $$0$i1 = $21;
  } else {
   $$0$i1 = 1073741823;
  }
  __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEEC2EjjS6_($__v,$$0$i1,$13,$9);
  $22 = ((($__v)) + 8|0);
  $$pre$i = HEAP32[$22>>2]|0;
  $23 = $__n << 2;
  _memset(($$pre$i|0),0,($23|0))|0;
  $scevgep = (($$pre$i) + ($__n<<2)|0);
  HEAP32[$22>>2] = $scevgep;
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($this,$__v);
  __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEED2Ev($__v);
 } else {
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($this,$__n);
 }
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$0 = 0, $$pre = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $$pre = HEAP32[$0>>2]|0;
 $$0 = $__n;$1 = $$pre;
 while(1) {
  HEAP32[$1>>2] = 0;
  $2 = HEAP32[$0>>2]|0;
  $3 = ((($2)) + 4|0);
  HEAP32[$0>>2] = $3;
  $4 = (($$0) + -1)|0;
  $5 = ($4|0)==(0);
  if ($5) {
   break;
  } else {
   $$0 = $4;$1 = $3;
  }
 }
 return;
}
function __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEEC2EjjS6_($this,$__cap,$__start,$__a) {
 $this = $this|0;
 $__cap = $__cap|0;
 $__start = $__start|0;
 $__a = $__a|0;
 var $$not$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($this)) + 16|0);
 HEAP32[$1>>2] = $__a;
 $2 = ($__cap|0)==(0);
 do {
  if ($2) {
   $8 = 0;
  } else {
   $3 = ((($__a)) + 112|0);
   $4 = HEAP8[$3>>0]|0;
   $$not$i$i = ($4<<24>>24)==(0);
   $5 = ($__cap>>>0)<(29);
   $or$cond$i$i = $5 & $$not$i$i;
   if ($or$cond$i$i) {
    HEAP8[$3>>0] = 1;
    $8 = $__a;
    break;
   } else {
    $6 = $__cap << 2;
    $7 = (__Znwj($6)|0);
    $8 = $7;
    break;
   }
  }
 } while(0);
 HEAP32[$this>>2] = $8;
 $9 = (($8) + ($__start<<2)|0);
 $10 = ((($this)) + 8|0);
 HEAP32[$10>>2] = $9;
 $11 = ((($this)) + 4|0);
 HEAP32[$11>>2] = $9;
 $12 = (($8) + ($__cap<<2)|0);
 $13 = ((($this)) + 12|0);
 HEAP32[$13>>2] = $12;
 return;
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($this,$__v) {
 $this = $this|0;
 $__v = $__v|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($this)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($__v)) + 4|0);
 $4 = $2;
 $5 = $0;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 2;
 $8 = HEAP32[$3>>2]|0;
 $9 = (0 - ($7))|0;
 $10 = (($8) + ($9<<2)|0);
 HEAP32[$3>>2] = $10;
 _memcpy(($10|0),($0|0),($6|0))|0;
 $11 = HEAP32[$this>>2]|0;
 $12 = HEAP32[$3>>2]|0;
 HEAP32[$this>>2] = $12;
 HEAP32[$3>>2] = $11;
 $13 = ((($__v)) + 8|0);
 $14 = HEAP32[$1>>2]|0;
 $15 = HEAP32[$13>>2]|0;
 HEAP32[$1>>2] = $15;
 HEAP32[$13>>2] = $14;
 $16 = ((($this)) + 8|0);
 $17 = ((($__v)) + 12|0);
 $18 = HEAP32[$16>>2]|0;
 $19 = HEAP32[$17>>2]|0;
 HEAP32[$16>>2] = $19;
 HEAP32[$17>>2] = $18;
 $20 = HEAP32[$3>>2]|0;
 HEAP32[$__v>>2] = $20;
 return;
}
function __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEED2Ev($this) {
 $this = $this|0;
 var $$lcssa = 0, $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 8|0);
 $$pre$i$i$i = HEAP32[$2>>2]|0;
 $3 = ($$pre$i$i$i|0)==($1|0);
 if (!($3)) {
  $5 = $$pre$i$i$i;
  while(1) {
   $4 = ((($5)) + -4|0);
   $6 = ($4|0)==($1|0);
   if ($6) {
    $$lcssa = $4;
    break;
   } else {
    $5 = $4;
   }
  }
  HEAP32[$2>>2] = $$lcssa;
 }
 $7 = HEAP32[$this>>2]|0;
 $8 = ($7|0)==(0|0);
 do {
  if (!($8)) {
   $9 = ((($this)) + 16|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = ($10|0)==($7|0);
   if ($11) {
    $12 = ((($10)) + 112|0);
    HEAP8[$12>>0] = 0;
    break;
   } else {
    __ZdlPv($7);
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8allocateEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$0$i$i = 0, $$not$i$i = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__n>>>0)>(1073741823);
 if ($0) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = ((($this)) + 128|0);
 $2 = HEAP8[$1>>0]|0;
 $$not$i$i = ($2<<24>>24)==(0);
 $3 = ($__n>>>0)<(29);
 $or$cond$i$i = $3 & $$not$i$i;
 if ($or$cond$i$i) {
  $4 = ((($this)) + 16|0);
  HEAP8[$1>>0] = 1;
  $$0$i$i = $4;
 } else {
  $5 = $__n << 2;
  $6 = (__Znwj($5)|0);
  $$0$i$i = $6;
 }
 $7 = ((($this)) + 4|0);
 HEAP32[$7>>2] = $$0$i$i;
 HEAP32[$this>>2] = $$0$i$i;
 $8 = (($$0$i$i) + ($__n<<2)|0);
 $9 = ((($this)) + 8|0);
 HEAP32[$9>>2] = $8;
 return;
}
function __ZNSt3__115__num_get_floatIeEET_PKcS3_Rj($__a,$__a_end,$__err) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 var $$0 = 0.0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0.0;
  } else {
   $1 = (___errno_location()|0);
   $2 = HEAP32[$1>>2]|0;
   HEAP32[$1>>2] = 0;
   $3 = (__ZNSt3__16__clocEv()|0);
   $4 = (+_strtold_l($__a,$__p2,$3));
   $5 = HEAP32[$1>>2]|0;
   $6 = ($5|0)==(0);
   if ($6) {
    HEAP32[$1>>2] = $2;
   }
   $7 = HEAP32[$__p2>>2]|0;
   $8 = ($7|0)==($__a_end|0);
   if (!($8)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0.0;
    break;
   }
   $9 = ($5|0)==(34);
   if ($9) {
    HEAP32[$__err>>2] = 4;
    $$0 = $4;
   } else {
    $$0 = $4;
   }
  }
 } while(0);
 STACKTOP = sp;return (+$$0);
}
function __ZNSt3__115__num_get_floatIdEET_PKcS3_Rj($__a,$__a_end,$__err) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 var $$0 = 0.0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0.0;
  } else {
   $1 = (___errno_location()|0);
   $2 = HEAP32[$1>>2]|0;
   HEAP32[$1>>2] = 0;
   $3 = (__ZNSt3__16__clocEv()|0);
   $4 = (+_strtold_l($__a,$__p2,$3));
   $5 = HEAP32[$1>>2]|0;
   $6 = ($5|0)==(0);
   if ($6) {
    HEAP32[$1>>2] = $2;
   }
   $7 = HEAP32[$__p2>>2]|0;
   $8 = ($7|0)==($__a_end|0);
   if (!($8)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0.0;
    break;
   }
   $9 = ($5|0)==(34);
   if ($9) {
    HEAP32[$__err>>2] = 4;
    $$0 = $4;
   } else {
    $$0 = $4;
   }
  }
 } while(0);
 STACKTOP = sp;return (+$$0);
}
function __ZNSt3__115__num_get_floatIfEET_PKcS3_Rj($__a,$__a_end,$__err) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 var $$0 = 0.0, $0 = 0, $1 = 0, $10 = 0.0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0.0;
  } else {
   $1 = (___errno_location()|0);
   $2 = HEAP32[$1>>2]|0;
   HEAP32[$1>>2] = 0;
   $3 = (__ZNSt3__16__clocEv()|0);
   $4 = (+_strtold_l($__a,$__p2,$3));
   $5 = HEAP32[$1>>2]|0;
   $6 = ($5|0)==(0);
   if ($6) {
    HEAP32[$1>>2] = $2;
   }
   $7 = HEAP32[$__p2>>2]|0;
   $8 = ($7|0)==($__a_end|0);
   if (!($8)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0.0;
    break;
   }
   $9 = ($5|0)==(34);
   if ($9) {
    HEAP32[$__err>>2] = 4;
   }
   $10 = $4;
   $$0 = $10;
  }
 } while(0);
 STACKTOP = sp;return (+$$0);
}
function __ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $13 = 0;$14 = 0;
  } else {
   $1 = HEAP8[$__a>>0]|0;
   $2 = ($1<<24>>24)==(45);
   if ($2) {
    HEAP32[$__err>>2] = 4;
    $13 = 0;$14 = 0;
    break;
   }
   $3 = (___errno_location()|0);
   $4 = HEAP32[$3>>2]|0;
   HEAP32[$3>>2] = 0;
   $5 = (__ZNSt3__16__clocEv()|0);
   $6 = (_strtoull_l($__a,$__p2,$__base,$5)|0);
   $7 = tempRet0;
   $8 = HEAP32[$3>>2]|0;
   $9 = ($8|0)==(0);
   if ($9) {
    HEAP32[$3>>2] = $4;
   }
   $10 = HEAP32[$__p2>>2]|0;
   $11 = ($10|0)==($__a_end|0);
   if (!($11)) {
    HEAP32[$__err>>2] = 4;
    $13 = 0;$14 = 0;
    break;
   }
   $12 = ($8|0)==(34);
   if ($12) {
    HEAP32[$__err>>2] = 4;
    $13 = -1;$14 = -1;
   } else {
    $13 = $7;$14 = $6;
   }
  }
 } while(0);
 tempRet0 = ($13);
 STACKTOP = sp;return ($14|0);
}
function __ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0;
 var $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0;
  } else {
   $1 = HEAP8[$__a>>0]|0;
   $2 = ($1<<24>>24)==(45);
   if ($2) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $3 = (___errno_location()|0);
   $4 = HEAP32[$3>>2]|0;
   HEAP32[$3>>2] = 0;
   $5 = (__ZNSt3__16__clocEv()|0);
   $6 = (_strtoull_l($__a,$__p2,$__base,$5)|0);
   $7 = tempRet0;
   $8 = HEAP32[$3>>2]|0;
   $9 = ($8|0)==(0);
   if ($9) {
    HEAP32[$3>>2] = $4;
   }
   $10 = HEAP32[$__p2>>2]|0;
   $11 = ($10|0)==($__a_end|0);
   if (!($11)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $12 = ($8|0)==(34);
   $13 = ($7>>>0)>(0);
   $14 = ($6>>>0)>(4294967295);
   $15 = ($7|0)==(0);
   $16 = $15 & $14;
   $17 = $13 | $16;
   $or$cond = $17 | $12;
   if ($or$cond) {
    HEAP32[$__err>>2] = 4;
    $$0 = -1;
    break;
   } else {
    $$0 = $6;
    break;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0;
 var $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0;
  } else {
   $1 = HEAP8[$__a>>0]|0;
   $2 = ($1<<24>>24)==(45);
   if ($2) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $3 = (___errno_location()|0);
   $4 = HEAP32[$3>>2]|0;
   HEAP32[$3>>2] = 0;
   $5 = (__ZNSt3__16__clocEv()|0);
   $6 = (_strtoull_l($__a,$__p2,$__base,$5)|0);
   $7 = tempRet0;
   $8 = HEAP32[$3>>2]|0;
   $9 = ($8|0)==(0);
   if ($9) {
    HEAP32[$3>>2] = $4;
   }
   $10 = HEAP32[$__p2>>2]|0;
   $11 = ($10|0)==($__a_end|0);
   if (!($11)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $12 = ($8|0)==(34);
   $13 = ($7>>>0)>(0);
   $14 = ($6>>>0)>(4294967295);
   $15 = ($7|0)==(0);
   $16 = $15 & $14;
   $17 = $13 | $16;
   $or$cond = $17 | $12;
   if ($or$cond) {
    HEAP32[$__err>>2] = 4;
    $$0 = -1;
    break;
   } else {
    $$0 = $6;
    break;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__p2 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0;
  } else {
   $1 = HEAP8[$__a>>0]|0;
   $2 = ($1<<24>>24)==(45);
   if ($2) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $3 = (___errno_location()|0);
   $4 = HEAP32[$3>>2]|0;
   HEAP32[$3>>2] = 0;
   $5 = (__ZNSt3__16__clocEv()|0);
   $6 = (_strtoull_l($__a,$__p2,$__base,$5)|0);
   $7 = tempRet0;
   $8 = HEAP32[$3>>2]|0;
   $9 = ($8|0)==(0);
   if ($9) {
    HEAP32[$3>>2] = $4;
   }
   $10 = HEAP32[$__p2>>2]|0;
   $11 = ($10|0)==($__a_end|0);
   if (!($11)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $12 = ($8|0)==(34);
   $13 = ($7>>>0)>(0);
   $14 = ($6>>>0)>(65535);
   $15 = ($7|0)==(0);
   $16 = $15 & $14;
   $17 = $13 | $16;
   $or$cond = $17 | $12;
   if ($or$cond) {
    HEAP32[$__err>>2] = 4;
    $$0 = -1;
    break;
   } else {
    $18 = $6&65535;
    $$0 = $18;
    break;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $18 = 0;$19 = 0;
  } else {
   $1 = (___errno_location()|0);
   $2 = HEAP32[$1>>2]|0;
   HEAP32[$1>>2] = 0;
   $3 = (__ZNSt3__16__clocEv()|0);
   $4 = (_strtoll_l($__a,$__p2,$__base,$3)|0);
   $5 = tempRet0;
   $6 = HEAP32[$1>>2]|0;
   $7 = ($6|0)==(0);
   if ($7) {
    HEAP32[$1>>2] = $2;
   }
   $8 = HEAP32[$__p2>>2]|0;
   $9 = ($8|0)==($__a_end|0);
   if (!($9)) {
    HEAP32[$__err>>2] = 4;
    $18 = 0;$19 = 0;
    break;
   }
   $10 = ($6|0)==(34);
   if ($10) {
    HEAP32[$__err>>2] = 4;
    $11 = ($5|0)>(0);
    $12 = ($4>>>0)>(0);
    $13 = ($5|0)==(0);
    $14 = $13 & $12;
    $15 = $11 | $14;
    $16 = $15 ? -1 : 0;
    $17 = $15 ? 2147483647 : -2147483648;
    tempRet0 = ($17);
    STACKTOP = sp;return ($16|0);
   } else {
    $18 = $5;$19 = $4;
   }
  }
 } while(0);
 tempRet0 = ($18);
 STACKTOP = sp;return ($19|0);
}
function __ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 L1: do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0;
  } else {
   $1 = (___errno_location()|0);
   $2 = HEAP32[$1>>2]|0;
   HEAP32[$1>>2] = 0;
   $3 = (__ZNSt3__16__clocEv()|0);
   $4 = (_strtoll_l($__a,$__p2,$__base,$3)|0);
   $5 = tempRet0;
   $6 = HEAP32[$1>>2]|0;
   $7 = ($6|0)==(0);
   if ($7) {
    HEAP32[$1>>2] = $2;
   }
   $8 = HEAP32[$__p2>>2]|0;
   $9 = ($8|0)==($__a_end|0);
   if (!($9)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $10 = ($6|0)==(34);
   do {
    if ($10) {
     HEAP32[$__err>>2] = 4;
     $21 = ($5|0)>(0);
     $22 = ($4>>>0)>(0);
     $23 = ($5|0)==(0);
     $24 = $23 & $22;
     $25 = $21 | $24;
     if ($25) {
      $$0 = 2147483647;
      break L1;
     }
    } else {
     $11 = ($5|0)<(-1);
     $12 = ($4>>>0)<(2147483648);
     $13 = ($5|0)==(-1);
     $14 = $13 & $12;
     $15 = $11 | $14;
     if ($15) {
      HEAP32[$__err>>2] = 4;
      break;
     }
     $16 = ($5|0)>(0);
     $17 = ($4>>>0)>(2147483647);
     $18 = ($5|0)==(0);
     $19 = $18 & $17;
     $20 = $16 | $19;
     if ($20) {
      HEAP32[$__err>>2] = 4;
      $$0 = 2147483647;
      break L1;
     } else {
      $$0 = $4;
      break L1;
     }
    }
   } while(0);
   $$0 = -2147483648;
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__114__shared_countD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__114__shared_count12__add_sharedEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;HEAP32[$0>>2] = (($1+1)|0);
 return;
}
function __ZNSt3__114__shared_count16__release_sharedEv($this) {
 $this = $this|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;HEAP32[$0>>2] = (($1+-1)|0);
 $2 = ($1|0)==(0);
 if ($2) {
  $3 = HEAP32[$this>>2]|0;
  $4 = ((($3)) + 8|0);
  $5 = HEAP32[$4>>2]|0;
  FUNCTION_TABLE_vi[$5 & 127]($this);
  $$0 = 1;
 } else {
  $$0 = 0;
 }
 return ($$0|0);
}
function __ZNSt3__111__call_onceERVmPvPFvS2_E($flag,$arg,$func) {
 $flag = $flag|0;
 $arg = $arg|0;
 $func = $func|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 (_pthread_mutex_lock((14400|0))|0);
 $0 = HEAP32[$flag>>2]|0;
 $1 = ($0|0)==(1);
 if ($1) {
  while(1) {
   (_pthread_cond_wait((14424|0),(14400|0))|0);
   $2 = HEAP32[$flag>>2]|0;
   $3 = ($2|0)==(1);
   if (!($3)) {
    break;
   }
  }
 }
 $4 = HEAP32[$flag>>2]|0;
 $5 = ($4|0)==(0);
 if ($5) {
  HEAP32[$flag>>2] = 1;
  (_pthread_mutex_unlock((14400|0))|0);
  FUNCTION_TABLE_vi[$func & 127]($arg);
  (_pthread_mutex_lock((14400|0))|0);
  HEAP32[$flag>>2] = -1;
  (_pthread_mutex_unlock((14400|0))|0);
  (_pthread_cond_broadcast((14424|0))|0);
 } else {
  (_pthread_mutex_unlock((14400|0))|0);
 }
 return;
}
function runPostSets() {

}
function _i64Subtract(a, b, c, d) {
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a - c)>>>0;
    h = (b - d)>>>0;
    h = (b - d - (((c>>>0) > (a>>>0))|0))>>>0; // Borrow one from high word to low word on underflow.
    return ((tempRet0 = h,l|0)|0);
}
function _memset(ptr, value, num) {
    ptr = ptr|0; value = value|0; num = num|0;
    var stop = 0, value4 = 0, stop4 = 0, unaligned = 0;
    stop = (ptr + num)|0;
    if ((num|0) >= 20) {
      // This is unaligned, but quite large, so work hard to get to aligned settings
      value = value & 0xff;
      unaligned = ptr & 3;
      value4 = value | (value << 8) | (value << 16) | (value << 24);
      stop4 = stop & ~3;
      if (unaligned) {
        unaligned = (ptr + 4 - unaligned)|0;
        while ((ptr|0) < (unaligned|0)) { // no need to check for stop, since we have large num
          HEAP8[((ptr)>>0)]=value;
          ptr = (ptr+1)|0;
        }
      }
      while ((ptr|0) < (stop4|0)) {
        HEAP32[((ptr)>>2)]=value4;
        ptr = (ptr+4)|0;
      }
    }
    while ((ptr|0) < (stop|0)) {
      HEAP8[((ptr)>>0)]=value;
      ptr = (ptr+1)|0;
    }
    return (ptr-num)|0;
}
function _strlen(ptr) {
    ptr = ptr|0;
    var curr = 0;
    curr = ptr;
    while (((HEAP8[((curr)>>0)])|0)) {
      curr = (curr + 1)|0;
    }
    return (curr - ptr)|0;
}
function _i64Add(a, b, c, d) {
    /*
      x = a + b*2^32
      y = c + d*2^32
      result = l + h*2^32
    */
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a + c)>>>0;
    h = (b + d + (((l>>>0) < (a>>>0))|0))>>>0; // Add carry from low word to high word on overflow.
    return ((tempRet0 = h,l|0)|0);
}
function _bitshift64Lshr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >>> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = 0;
    return (high >>> (bits - 32))|0;
}
function _memcpy(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    if ((num|0) >= 4096) return _emscripten_memcpy_big(dest|0, src|0, num|0)|0;
    ret = dest|0;
    if ((dest&3) == (src&3)) {
      while (dest & 3) {
        if ((num|0) == 0) return ret|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
        dest = (dest+1)|0;
        src = (src+1)|0;
        num = (num-1)|0;
      }
      while ((num|0) >= 4) {
        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);
        dest = (dest+4)|0;
        src = (src+4)|0;
        num = (num-4)|0;
      }
    }
    while ((num|0) > 0) {
      HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      dest = (dest+1)|0;
      src = (src+1)|0;
      num = (num-1)|0;
    }
    return ret|0;
}
function _bitshift64Shl(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = (high << bits) | ((low&(ander << (32 - bits))) >>> (32 - bits));
      return low << bits;
    }
    tempRet0 = low << (bits - 32);
    return 0;
}
function _memmove(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    if (((src|0) < (dest|0)) & ((dest|0) < ((src + num)|0))) {
      // Unlikely case: Copy backwards in a safe manner
      ret = dest;
      src = (src + num)|0;
      dest = (dest + num)|0;
      while ((num|0) > 0) {
        dest = (dest - 1)|0;
        src = (src - 1)|0;
        num = (num - 1)|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      }
      dest = ret;
    } else {
      _memcpy(dest, src, num) | 0;
    }
    return dest | 0;
}
function _bitshift64Ashr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = (high|0) < 0 ? -1 : 0;
    return (high >> (bits - 32))|0;
  }
function _llvm_cttz_i32(x) {
    x = x|0;
    var ret = 0;
    ret = ((HEAP8[(((cttz_i8)+(x & 0xff))>>0)])|0);
    if ((ret|0) < 8) return ret|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 8)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 8)|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 16)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 16)|0;
    return (((HEAP8[(((cttz_i8)+(x >>> 24))>>0)])|0) + 24)|0;
  }

// ======== compiled code from system/lib/compiler-rt , see readme therein
function ___muldsi3($a, $b) {
  $a = $a | 0;
  $b = $b | 0;
  var $1 = 0, $2 = 0, $3 = 0, $6 = 0, $8 = 0, $11 = 0, $12 = 0;
  $1 = $a & 65535;
  $2 = $b & 65535;
  $3 = Math_imul($2, $1) | 0;
  $6 = $a >>> 16;
  $8 = ($3 >>> 16) + (Math_imul($2, $6) | 0) | 0;
  $11 = $b >>> 16;
  $12 = Math_imul($11, $1) | 0;
  return (tempRet0 = (($8 >>> 16) + (Math_imul($11, $6) | 0) | 0) + ((($8 & 65535) + $12 | 0) >>> 16) | 0, 0 | ($8 + $12 << 16 | $3 & 65535)) | 0;
}
function ___divdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $6$0 = 0, $7$0 = 0, $7$1 = 0, $8$0 = 0, $10$0 = 0;
  $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
  $4$1 = tempRet0;
  $6$0 = _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0;
  $7$0 = $2$0 ^ $1$0;
  $7$1 = $2$1 ^ $1$1;
  $8$0 = ___udivmoddi4($4$0, $4$1, $6$0, tempRet0, 0) | 0;
  $10$0 = _i64Subtract($8$0 ^ $7$0, tempRet0 ^ $7$1, $7$0, $7$1) | 0;
  return $10$0 | 0;
}
function ___remdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $rem = 0, $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $6$0 = 0, $10$0 = 0, $10$1 = 0, __stackBase__ = 0;
  __stackBase__ = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  $rem = __stackBase__ | 0;
  $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
  $4$1 = tempRet0;
  $6$0 = _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0;
  ___udivmoddi4($4$0, $4$1, $6$0, tempRet0, $rem) | 0;
  $10$0 = _i64Subtract(HEAP32[$rem >> 2] ^ $1$0, HEAP32[$rem + 4 >> 2] ^ $1$1, $1$0, $1$1) | 0;
  $10$1 = tempRet0;
  STACKTOP = __stackBase__;
  return (tempRet0 = $10$1, $10$0) | 0;
}
function ___muldi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $x_sroa_0_0_extract_trunc = 0, $y_sroa_0_0_extract_trunc = 0, $1$0 = 0, $1$1 = 0, $2 = 0;
  $x_sroa_0_0_extract_trunc = $a$0;
  $y_sroa_0_0_extract_trunc = $b$0;
  $1$0 = ___muldsi3($x_sroa_0_0_extract_trunc, $y_sroa_0_0_extract_trunc) | 0;
  $1$1 = tempRet0;
  $2 = Math_imul($a$1, $y_sroa_0_0_extract_trunc) | 0;
  return (tempRet0 = ((Math_imul($b$1, $x_sroa_0_0_extract_trunc) | 0) + $2 | 0) + $1$1 | $1$1 & 0, 0 | $1$0 & -1) | 0;
}
function ___udivdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $1$0 = 0;
  $1$0 = ___udivmoddi4($a$0, $a$1, $b$0, $b$1, 0) | 0;
  return $1$0 | 0;
}
function ___uremdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $rem = 0, __stackBase__ = 0;
  __stackBase__ = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  $rem = __stackBase__ | 0;
  ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) | 0;
  STACKTOP = __stackBase__;
  return (tempRet0 = HEAP32[$rem + 4 >> 2] | 0, HEAP32[$rem >> 2] | 0) | 0;
}
function ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  $rem = $rem | 0;
  var $n_sroa_0_0_extract_trunc = 0, $n_sroa_1_4_extract_shift$0 = 0, $n_sroa_1_4_extract_trunc = 0, $d_sroa_0_0_extract_trunc = 0, $d_sroa_1_4_extract_shift$0 = 0, $d_sroa_1_4_extract_trunc = 0, $4 = 0, $17 = 0, $37 = 0, $49 = 0, $51 = 0, $57 = 0, $58 = 0, $66 = 0, $78 = 0, $86 = 0, $88 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $105 = 0, $117 = 0, $119 = 0, $125 = 0, $126 = 0, $130 = 0, $q_sroa_1_1_ph = 0, $q_sroa_0_1_ph = 0, $r_sroa_1_1_ph = 0, $r_sroa_0_1_ph = 0, $sr_1_ph = 0, $d_sroa_0_0_insert_insert99$0 = 0, $d_sroa_0_0_insert_insert99$1 = 0, $137$0 = 0, $137$1 = 0, $carry_0203 = 0, $sr_1202 = 0, $r_sroa_0_1201 = 0, $r_sroa_1_1200 = 0, $q_sroa_0_1199 = 0, $q_sroa_1_1198 = 0, $147 = 0, $149 = 0, $r_sroa_0_0_insert_insert42$0 = 0, $r_sroa_0_0_insert_insert42$1 = 0, $150$1 = 0, $151$0 = 0, $152 = 0, $154$0 = 0, $r_sroa_0_0_extract_trunc = 0, $r_sroa_1_4_extract_trunc = 0, $155 = 0, $carry_0_lcssa$0 = 0, $carry_0_lcssa$1 = 0, $r_sroa_0_1_lcssa = 0, $r_sroa_1_1_lcssa = 0, $q_sroa_0_1_lcssa = 0, $q_sroa_1_1_lcssa = 0, $q_sroa_0_0_insert_ext75$0 = 0, $q_sroa_0_0_insert_ext75$1 = 0, $q_sroa_0_0_insert_insert77$1 = 0, $_0$0 = 0, $_0$1 = 0;
  $n_sroa_0_0_extract_trunc = $a$0;
  $n_sroa_1_4_extract_shift$0 = $a$1;
  $n_sroa_1_4_extract_trunc = $n_sroa_1_4_extract_shift$0;
  $d_sroa_0_0_extract_trunc = $b$0;
  $d_sroa_1_4_extract_shift$0 = $b$1;
  $d_sroa_1_4_extract_trunc = $d_sroa_1_4_extract_shift$0;
  if (($n_sroa_1_4_extract_trunc | 0) == 0) {
    $4 = ($rem | 0) != 0;
    if (($d_sroa_1_4_extract_trunc | 0) == 0) {
      if ($4) {
        HEAP32[$rem >> 2] = ($n_sroa_0_0_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
        HEAP32[$rem + 4 >> 2] = 0;
      }
      $_0$1 = 0;
      $_0$0 = ($n_sroa_0_0_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    } else {
      if (!$4) {
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      HEAP32[$rem >> 2] = $a$0 & -1;
      HEAP32[$rem + 4 >> 2] = $a$1 & 0;
      $_0$1 = 0;
      $_0$0 = 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    }
  }
  $17 = ($d_sroa_1_4_extract_trunc | 0) == 0;
  do {
    if (($d_sroa_0_0_extract_trunc | 0) == 0) {
      if ($17) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
          HEAP32[$rem + 4 >> 2] = 0;
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      if (($n_sroa_0_0_extract_trunc | 0) == 0) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = 0;
          HEAP32[$rem + 4 >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_1_4_extract_trunc >>> 0);
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_1_4_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $37 = $d_sroa_1_4_extract_trunc - 1 | 0;
      if (($37 & $d_sroa_1_4_extract_trunc | 0) == 0) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = 0 | $a$0 & -1;
          HEAP32[$rem + 4 >> 2] = $37 & $n_sroa_1_4_extract_trunc | $a$1 & 0;
        }
        $_0$1 = 0;
        $_0$0 = $n_sroa_1_4_extract_trunc >>> ((_llvm_cttz_i32($d_sroa_1_4_extract_trunc | 0) | 0) >>> 0);
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $49 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
      $51 = $49 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
      if ($51 >>> 0 <= 30) {
        $57 = $51 + 1 | 0;
        $58 = 31 - $51 | 0;
        $sr_1_ph = $57;
        $r_sroa_0_1_ph = $n_sroa_1_4_extract_trunc << $58 | $n_sroa_0_0_extract_trunc >>> ($57 >>> 0);
        $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($57 >>> 0);
        $q_sroa_0_1_ph = 0;
        $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $58;
        break;
      }
      if (($rem | 0) == 0) {
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      HEAP32[$rem >> 2] = 0 | $a$0 & -1;
      HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
      $_0$1 = 0;
      $_0$0 = 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    } else {
      if (!$17) {
        $117 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
        $119 = $117 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        if ($119 >>> 0 <= 31) {
          $125 = $119 + 1 | 0;
          $126 = 31 - $119 | 0;
          $130 = $119 - 31 >> 31;
          $sr_1_ph = $125;
          $r_sroa_0_1_ph = $n_sroa_0_0_extract_trunc >>> ($125 >>> 0) & $130 | $n_sroa_1_4_extract_trunc << $126;
          $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($125 >>> 0) & $130;
          $q_sroa_0_1_ph = 0;
          $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $126;
          break;
        }
        if (($rem | 0) == 0) {
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        HEAP32[$rem >> 2] = 0 | $a$0 & -1;
        HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $66 = $d_sroa_0_0_extract_trunc - 1 | 0;
      if (($66 & $d_sroa_0_0_extract_trunc | 0) != 0) {
        $86 = (Math_clz32($d_sroa_0_0_extract_trunc | 0) | 0) + 33 | 0;
        $88 = $86 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        $89 = 64 - $88 | 0;
        $91 = 32 - $88 | 0;
        $92 = $91 >> 31;
        $95 = $88 - 32 | 0;
        $105 = $95 >> 31;
        $sr_1_ph = $88;
        $r_sroa_0_1_ph = $91 - 1 >> 31 & $n_sroa_1_4_extract_trunc >>> ($95 >>> 0) | ($n_sroa_1_4_extract_trunc << $91 | $n_sroa_0_0_extract_trunc >>> ($88 >>> 0)) & $105;
        $r_sroa_1_1_ph = $105 & $n_sroa_1_4_extract_trunc >>> ($88 >>> 0);
        $q_sroa_0_1_ph = $n_sroa_0_0_extract_trunc << $89 & $92;
        $q_sroa_1_1_ph = ($n_sroa_1_4_extract_trunc << $89 | $n_sroa_0_0_extract_trunc >>> ($95 >>> 0)) & $92 | $n_sroa_0_0_extract_trunc << $91 & $88 - 33 >> 31;
        break;
      }
      if (($rem | 0) != 0) {
        HEAP32[$rem >> 2] = $66 & $n_sroa_0_0_extract_trunc;
        HEAP32[$rem + 4 >> 2] = 0;
      }
      if (($d_sroa_0_0_extract_trunc | 0) == 1) {
        $_0$1 = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$0 = 0 | $a$0 & -1;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      } else {
        $78 = _llvm_cttz_i32($d_sroa_0_0_extract_trunc | 0) | 0;
        $_0$1 = 0 | $n_sroa_1_4_extract_trunc >>> ($78 >>> 0);
        $_0$0 = $n_sroa_1_4_extract_trunc << 32 - $78 | $n_sroa_0_0_extract_trunc >>> ($78 >>> 0) | 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
    }
  } while (0);
  if (($sr_1_ph | 0) == 0) {
    $q_sroa_1_1_lcssa = $q_sroa_1_1_ph;
    $q_sroa_0_1_lcssa = $q_sroa_0_1_ph;
    $r_sroa_1_1_lcssa = $r_sroa_1_1_ph;
    $r_sroa_0_1_lcssa = $r_sroa_0_1_ph;
    $carry_0_lcssa$1 = 0;
    $carry_0_lcssa$0 = 0;
  } else {
    $d_sroa_0_0_insert_insert99$0 = 0 | $b$0 & -1;
    $d_sroa_0_0_insert_insert99$1 = $d_sroa_1_4_extract_shift$0 | $b$1 & 0;
    $137$0 = _i64Add($d_sroa_0_0_insert_insert99$0 | 0, $d_sroa_0_0_insert_insert99$1 | 0, -1, -1) | 0;
    $137$1 = tempRet0;
    $q_sroa_1_1198 = $q_sroa_1_1_ph;
    $q_sroa_0_1199 = $q_sroa_0_1_ph;
    $r_sroa_1_1200 = $r_sroa_1_1_ph;
    $r_sroa_0_1201 = $r_sroa_0_1_ph;
    $sr_1202 = $sr_1_ph;
    $carry_0203 = 0;
    while (1) {
      $147 = $q_sroa_0_1199 >>> 31 | $q_sroa_1_1198 << 1;
      $149 = $carry_0203 | $q_sroa_0_1199 << 1;
      $r_sroa_0_0_insert_insert42$0 = 0 | ($r_sroa_0_1201 << 1 | $q_sroa_1_1198 >>> 31);
      $r_sroa_0_0_insert_insert42$1 = $r_sroa_0_1201 >>> 31 | $r_sroa_1_1200 << 1 | 0;
      _i64Subtract($137$0, $137$1, $r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1) | 0;
      $150$1 = tempRet0;
      $151$0 = $150$1 >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1;
      $152 = $151$0 & 1;
      $154$0 = _i64Subtract($r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1, $151$0 & $d_sroa_0_0_insert_insert99$0, ((($150$1 | 0) < 0 ? -1 : 0) >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1) & $d_sroa_0_0_insert_insert99$1) | 0;
      $r_sroa_0_0_extract_trunc = $154$0;
      $r_sroa_1_4_extract_trunc = tempRet0;
      $155 = $sr_1202 - 1 | 0;
      if (($155 | 0) == 0) {
        break;
      } else {
        $q_sroa_1_1198 = $147;
        $q_sroa_0_1199 = $149;
        $r_sroa_1_1200 = $r_sroa_1_4_extract_trunc;
        $r_sroa_0_1201 = $r_sroa_0_0_extract_trunc;
        $sr_1202 = $155;
        $carry_0203 = $152;
      }
    }
    $q_sroa_1_1_lcssa = $147;
    $q_sroa_0_1_lcssa = $149;
    $r_sroa_1_1_lcssa = $r_sroa_1_4_extract_trunc;
    $r_sroa_0_1_lcssa = $r_sroa_0_0_extract_trunc;
    $carry_0_lcssa$1 = 0;
    $carry_0_lcssa$0 = $152;
  }
  $q_sroa_0_0_insert_ext75$0 = $q_sroa_0_1_lcssa;
  $q_sroa_0_0_insert_ext75$1 = 0;
  $q_sroa_0_0_insert_insert77$1 = $q_sroa_1_1_lcssa | $q_sroa_0_0_insert_ext75$1;
  if (($rem | 0) != 0) {
    HEAP32[$rem >> 2] = 0 | $r_sroa_0_1_lcssa;
    HEAP32[$rem + 4 >> 2] = $r_sroa_1_1_lcssa | 0;
  }
  $_0$1 = (0 | $q_sroa_0_0_insert_ext75$0) >>> 31 | $q_sroa_0_0_insert_insert77$1 << 1 | ($q_sroa_0_0_insert_ext75$1 << 1 | $q_sroa_0_0_insert_ext75$0 >>> 31) & 0 | $carry_0_lcssa$1;
  $_0$0 = ($q_sroa_0_0_insert_ext75$0 << 1 | 0 >>> 31) & -2 | $carry_0_lcssa$0;
  return (tempRet0 = $_0$1, $_0$0) | 0;
}
// =======================================================================



  
function dynCall_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0;
  return FUNCTION_TABLE_iiiiiiii[index&7](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0)|0;
}


function dynCall_iiii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  return FUNCTION_TABLE_iiii[index&31](a1|0,a2|0,a3|0)|0;
}


function dynCall_viiiii(index,a1,a2,a3,a4,a5) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
  FUNCTION_TABLE_viiiii[index&3](a1|0,a2|0,a3|0,a4|0,a5|0);
}


function dynCall_iiiiiid(index,a1,a2,a3,a4,a5,a6) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=+a6;
  return FUNCTION_TABLE_iiiiiid[index&3](a1|0,a2|0,a3|0,a4|0,a5|0,+a6)|0;
}


function dynCall_vi(index,a1) {
  index = index|0;
  a1=a1|0;
  FUNCTION_TABLE_vi[index&127](a1|0);
}


function dynCall_vii(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=a2|0;
  FUNCTION_TABLE_vii[index&63](a1|0,a2|0);
}


function dynCall_iiiiiii(index,a1,a2,a3,a4,a5,a6) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
  return FUNCTION_TABLE_iiiiiii[index&63](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0)|0;
}


function dynCall_iiiiid(index,a1,a2,a3,a4,a5) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=+a5;
  return FUNCTION_TABLE_iiiiid[index&7](a1|0,a2|0,a3|0,a4|0,+a5)|0;
}


function dynCall_ii(index,a1) {
  index = index|0;
  a1=a1|0;
  return FUNCTION_TABLE_ii[index&63](a1|0)|0;
}


function dynCall_viii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  FUNCTION_TABLE_viii[index&3](a1|0,a2|0,a3|0);
}


function dynCall_v(index) {
  index = index|0;
  
  FUNCTION_TABLE_v[index&3]();
}


function dynCall_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0;
  return FUNCTION_TABLE_iiiiiiiii[index&15](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0)|0;
}


function dynCall_iiiii(index,a1,a2,a3,a4) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  return FUNCTION_TABLE_iiiii[index&7](a1|0,a2|0,a3|0,a4|0)|0;
}


function dynCall_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
  FUNCTION_TABLE_viiiiii[index&7](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0);
}


function dynCall_iii(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=a2|0;
  return FUNCTION_TABLE_iii[index&15](a1|0,a2|0)|0;
}


function dynCall_iiiiii(index,a1,a2,a3,a4,a5) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
  return FUNCTION_TABLE_iiiiii[index&31](a1|0,a2|0,a3|0,a4|0,a5|0)|0;
}


function dynCall_viiii(index,a1,a2,a3,a4) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  FUNCTION_TABLE_viiii[index&7](a1|0,a2|0,a3|0,a4|0);
}

function b0(p0,p1,p2,p3,p4,p5,p6) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0; abort(0);return 0; }
function b1(p0,p1,p2) { p0 = p0|0;p1 = p1|0;p2 = p2|0; abort(1);return 0; }
function b2(p0,p1,p2,p3,p4) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; abort(2); }
function b3(p0,p1,p2,p3,p4,p5) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = +p5; abort(3);return 0; }
function b4(p0) { p0 = p0|0; abort(4); }
function b5(p0,p1) { p0 = p0|0;p1 = p1|0; abort(5); }
function b6(p0,p1,p2,p3,p4,p5) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0; abort(6);return 0; }
function b7(p0,p1,p2,p3,p4) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = +p4; abort(7);return 0; }
function b8(p0) { p0 = p0|0; abort(8);return 0; }
function b9(p0,p1,p2) { p0 = p0|0;p1 = p1|0;p2 = p2|0; abort(9); }
function b10() { ; abort(10); }
function ___cxa_pure_virtual__wrapper() { ; ___cxa_pure_virtual(); }
function b11(p0,p1,p2,p3,p4,p5,p6,p7) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0; abort(11);return 0; }
function b12(p0,p1,p2,p3) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; abort(12);return 0; }
function b13(p0,p1,p2,p3,p4,p5) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0; abort(13); }
function b14(p0,p1) { p0 = p0|0;p1 = p1|0; abort(14);return 0; }
function b15(p0,p1,p2,p3,p4) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; abort(15);return 0; }
function b16(p0,p1,p2,p3) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; abort(16); }

// EMSCRIPTEN_END_FUNCS
var FUNCTION_TABLE_iiiiiiii = [b0,__ZNKSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc,__ZNKSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc,__ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,__ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE,__ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,__ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE,b0];
var FUNCTION_TABLE_iiii = [b1,__ZN6ikfast14IkSolutionListIdE11AddSolutionERKNSt3__16vectorINS_23IkSingleDOFSolutionBaseIdEENS2_9allocatorIS5_EEEERKNS3_IiNS6_IiEEEE,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPci,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci,__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv,_sn_write,__ZNKSt3__17collateIcE7do_hashEPKcS3_,__ZNKSt3__17collateIwE7do_hashEPKwS3_,__ZNKSt3__18messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,__ZNKSt3__18messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,__ZNKSt3__15ctypeIcE10do_toupperEPcPKc,__ZNKSt3__15ctypeIcE10do_tolowerEPcPKc,__ZNKSt3__15ctypeIcE9do_narrowEcc,__ZNKSt3__15ctypeIwE5do_isEtw,__ZNKSt3__15ctypeIwE10do_toupperEPwPKw,__ZNKSt3__15ctypeIwE10do_tolowerEPwPKw,__ZNKSt3__15ctypeIwE9do_narrowEwc,_do_read,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1];
var FUNCTION_TABLE_viiiii = [b2,__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,__ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib];
var FUNCTION_TABLE_iiiiiid = [b3,__ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce,__ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe,b3];
var FUNCTION_TABLE_vi = [b4,__ZN6ikfast14IkSolutionListIdED2Ev,__ZN6ikfast14IkSolutionListIdED0Ev,__ZN6ikfast14IkSolutionListIdE5ClearEv,__ZN6ikfast10IkSolutionIdED2Ev,__ZN6ikfast10IkSolutionIdED0Ev,__ZNK6ikfast10IkSolutionIdE8ValidateEv,__ZN6ikfast14IkSolutionBaseIdED2Ev,__ZN6ikfast14IkSolutionBaseIdED0Ev,__ZN6ikfast18IkSolutionListBaseIdED2Ev,__ZN6ikfast18IkSolutionListBaseIdED0Ev,__ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev,__ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev,__ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev
,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev,__ZNSt9bad_allocD2Ev,__ZNSt9bad_allocD0Ev,__ZNSt13runtime_errorD2Ev,__ZNSt13runtime_errorD0Ev,__ZN10__cxxabiv116__shim_type_infoD2Ev,__ZN10__cxxabiv117__class_type_infoD0Ev,__ZNK10__cxxabiv116__shim_type_info5noop1Ev,__ZNK10__cxxabiv116__shim_type_info5noop2Ev,__ZN10__cxxabiv120__si_class_type_infoD0Ev,__ZN10__cxxabiv121__vmi_class_type_infoD0Ev,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED0Ev,__ZNSt3__18ios_baseD2Ev,__ZNSt3__18ios_baseD0Ev,__ZNSt3__17collateIcED2Ev,__ZNSt3__17collateIcED0Ev,__ZNSt3__16locale5facet16__on_zero_sharedEv,__ZNSt3__17collateIwED2Ev,__ZNSt3__17collateIwED0Ev,__ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev
,__ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__110moneypunctIcLb0EED2Ev,__ZNSt3__110moneypunctIcLb0EED0Ev,__ZNSt3__110moneypunctIcLb1EED2Ev,__ZNSt3__110moneypunctIcLb1EED0Ev,__ZNSt3__110moneypunctIwLb0EED2Ev,__ZNSt3__110moneypunctIwLb0EED0Ev,__ZNSt3__110moneypunctIwLb1EED2Ev,__ZNSt3__110moneypunctIwLb1EED0Ev,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__18messagesIcED2Ev,__ZNSt3__18messagesIcED0Ev,__ZNSt3__18messagesIwED2Ev,__ZNSt3__18messagesIwED0Ev,__ZNSt3__16locale5__impD2Ev
,__ZNSt3__16locale5__impD0Ev,__ZNSt3__15ctypeIcED2Ev,__ZNSt3__15ctypeIcED0Ev,__ZNSt3__17codecvtIwc11__mbstate_tED2Ev,__ZNSt3__17codecvtIwc11__mbstate_tED0Ev,__ZNSt3__18numpunctIcED2Ev,__ZNSt3__18numpunctIcED0Ev,__ZNSt3__18numpunctIwED2Ev,__ZNSt3__18numpunctIwED0Ev,__ZNSt3__16locale5facetD2Ev,__ZNSt3__16locale5facetD0Ev,__ZNSt3__15ctypeIwED0Ev,__ZNSt3__17codecvtIcc11__mbstate_tED0Ev,__ZNSt3__17codecvtIDsc11__mbstate_tED0Ev,__ZNSt3__17codecvtIDic11__mbstate_tED0Ev,__ZNSt3__116__narrow_to_utf8ILj32EED0Ev,__ZNSt3__117__widen_from_utf8ILj32EED0Ev,__ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv,__ZNSt3__112__do_nothingEPv,__ZNSt3__16locale2id6__initEv,__ZNSt3__117__call_once_proxyINS_5tupleIJNS_12_GLOBAL__N_111__fake_bindEEEEEEvPv,_free,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4];
var FUNCTION_TABLE_vii = [b5,__ZNK6ikfast10IkSolutionIdE18GetSolutionIndicesERNSt3__16vectorIjNS2_9allocatorIjEEEE,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE,__ZNKSt3__110moneypunctIcLb0EE11do_groupingEv,__ZNKSt3__110moneypunctIcLb0EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIcLb0EE16do_positive_signEv,__ZNKSt3__110moneypunctIcLb0EE16do_negative_signEv,__ZNKSt3__110moneypunctIcLb0EE13do_pos_formatEv,__ZNKSt3__110moneypunctIcLb0EE13do_neg_formatEv,__ZNKSt3__110moneypunctIcLb1EE11do_groupingEv,__ZNKSt3__110moneypunctIcLb1EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIcLb1EE16do_positive_signEv,__ZNKSt3__110moneypunctIcLb1EE16do_negative_signEv,__ZNKSt3__110moneypunctIcLb1EE13do_pos_formatEv,__ZNKSt3__110moneypunctIcLb1EE13do_neg_formatEv,__ZNKSt3__110moneypunctIwLb0EE11do_groupingEv,__ZNKSt3__110moneypunctIwLb0EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIwLb0EE16do_positive_signEv,__ZNKSt3__110moneypunctIwLb0EE16do_negative_signEv,__ZNKSt3__110moneypunctIwLb0EE13do_pos_formatEv,__ZNKSt3__110moneypunctIwLb0EE13do_neg_formatEv,__ZNKSt3__110moneypunctIwLb1EE11do_groupingEv,__ZNKSt3__110moneypunctIwLb1EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIwLb1EE16do_positive_signEv,__ZNKSt3__110moneypunctIwLb1EE16do_negative_signEv,__ZNKSt3__110moneypunctIwLb1EE13do_pos_formatEv,__ZNKSt3__110moneypunctIwLb1EE13do_neg_formatEv,__ZNKSt3__18messagesIcE8do_closeEi,__ZNKSt3__18messagesIwE8do_closeEi
,__ZNKSt3__18numpunctIcE11do_groupingEv,__ZNKSt3__18numpunctIcE11do_truenameEv,__ZNKSt3__18numpunctIcE12do_falsenameEv,__ZNKSt3__18numpunctIwE11do_groupingEv,__ZNKSt3__18numpunctIwE11do_truenameEv,__ZNKSt3__18numpunctIwE12do_falsenameEv,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5];
var FUNCTION_TABLE_iiiiiii = [b6,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm
,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE,__ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6];
var FUNCTION_TABLE_iiiiid = [b7,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe,b7,b7,b7];
var FUNCTION_TABLE_ii = [b8,__ZNK6ikfast14IkSolutionListIdE15GetNumSolutionsEv,__ZNK6ikfast10IkSolutionIdE7GetFreeEv,__ZNK6ikfast10IkSolutionIdE6GetDOFEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9underflowEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv,__ZNKSt9bad_alloc4whatEv,__ZNKSt13runtime_error4whatEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9underflowEv,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv,__ZNKSt3__120__time_get_c_storageIcE7__weeksEv,__ZNKSt3__120__time_get_c_storageIcE8__monthsEv,__ZNKSt3__120__time_get_c_storageIcE7__am_pmEv,__ZNKSt3__120__time_get_c_storageIcE3__cEv,__ZNKSt3__120__time_get_c_storageIcE3__rEv,__ZNKSt3__120__time_get_c_storageIcE3__xEv,__ZNKSt3__120__time_get_c_storageIcE3__XEv,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv,__ZNKSt3__120__time_get_c_storageIwE7__weeksEv,__ZNKSt3__120__time_get_c_storageIwE8__monthsEv,__ZNKSt3__120__time_get_c_storageIwE7__am_pmEv,__ZNKSt3__120__time_get_c_storageIwE3__cEv,__ZNKSt3__120__time_get_c_storageIwE3__rEv,__ZNKSt3__120__time_get_c_storageIwE3__xEv,__ZNKSt3__120__time_get_c_storageIwE3__XEv,__ZNKSt3__110moneypunctIcLb0EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIcLb0EE16do_thousands_sepEv
,__ZNKSt3__110moneypunctIcLb0EE14do_frac_digitsEv,__ZNKSt3__110moneypunctIcLb1EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIcLb1EE16do_thousands_sepEv,__ZNKSt3__110moneypunctIcLb1EE14do_frac_digitsEv,__ZNKSt3__110moneypunctIwLb0EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIwLb0EE16do_thousands_sepEv,__ZNKSt3__110moneypunctIwLb0EE14do_frac_digitsEv,__ZNKSt3__110moneypunctIwLb1EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIwLb1EE16do_thousands_sepEv,__ZNKSt3__110moneypunctIwLb1EE14do_frac_digitsEv,__ZNKSt3__17codecvtIwc11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIwc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__17codecvtIwc11__mbstate_tE13do_max_lengthEv,__ZNKSt3__18numpunctIcE16do_decimal_pointEv,__ZNKSt3__18numpunctIcE16do_thousands_sepEv,__ZNKSt3__18numpunctIwE16do_decimal_pointEv,__ZNKSt3__18numpunctIwE16do_thousands_sepEv,__ZNKSt3__17codecvtIcc11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIcc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__17codecvtIcc11__mbstate_tE13do_max_lengthEv,__ZNKSt3__17codecvtIDsc11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIDsc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__17codecvtIDsc11__mbstate_tE13do_max_lengthEv,__ZNKSt3__17codecvtIDic11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIDic11__mbstate_tE16do_always_noconvEv,__ZNKSt3__17codecvtIDic11__mbstate_tE13do_max_lengthEv,b8,b8,b8,b8
,b8,b8,b8,b8,b8];
var FUNCTION_TABLE_viii = [b9,__ZNK6ikfast10IkSolutionIdE11GetSolutionEPdPKd,__ZNK6ikfast10IkSolutionIdE11GetSolutionERNSt3__16vectorIdNS2_9allocatorIdEEEERKS6_,__ZNK6ikfast14IkSolutionBaseIdE11GetSolutionERNSt3__16vectorIdNS2_9allocatorIdEEEERKS6_];
var FUNCTION_TABLE_v = [b10,___cxa_pure_virtual__wrapper,__ZL25default_terminate_handlerv,__ZN10__cxxabiv112_GLOBAL__N_110construct_Ev];
var FUNCTION_TABLE_iiiiiiiii = [b11,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,__ZNKSt3__17codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_,__ZNKSt3__17codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_,__ZNKSt3__17codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_,b11,b11,b11,b11,b11];
var FUNCTION_TABLE_iiiii = [b12,__ZNKSt3__15ctypeIcE8do_widenEPKcS3_Pc,__ZNKSt3__15ctypeIwE5do_isEPKwS3_Pt,__ZNKSt3__15ctypeIwE10do_scan_isEtPKwS3_,__ZNKSt3__15ctypeIwE11do_scan_notEtPKwS3_,__ZNKSt3__15ctypeIwE8do_widenEPKcS3_Pw,b12,b12];
var FUNCTION_TABLE_viiiiii = [b13,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekoffExNS_8ios_base7seekdirEj,__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj,__ZNKSt3__18messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,__ZNKSt3__18messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE];
var FUNCTION_TABLE_iii = [b14,__ZNK6ikfast14IkSolutionListIdE11GetSolutionEj,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9pbackfailEi,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE8overflowEi,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8overflowEi,__ZNKSt3__15ctypeIcE10do_toupperEc,__ZNKSt3__15ctypeIcE10do_tolowerEc,__ZNKSt3__15ctypeIcE8do_widenEc,__ZNKSt3__15ctypeIwE10do_toupperEw,__ZNKSt3__15ctypeIwE10do_tolowerEw,__ZNKSt3__15ctypeIwE8do_widenEc,b14,b14,b14,b14];
var FUNCTION_TABLE_iiiiii = [b15,__ZNKSt3__17collateIcE10do_compareEPKcS3_S3_S3_,__ZNKSt3__17collateIwE10do_compareEPKwS3_S3_S3_,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv,__ZNKSt3__15ctypeIcE9do_narrowEPKcS3_cPc,__ZNKSt3__17codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__17codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j,__ZNKSt3__15ctypeIwE9do_narrowEPKwS3_cPc,__ZNKSt3__17codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__17codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j,__ZNKSt3__17codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__17codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j,__ZNKSt3__17codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__17codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15];
var FUNCTION_TABLE_viiii = [b16,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekposENS_4fposI11__mbstate_tEEj,__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj,__ZNKSt3__17collateIcE12do_transformEPKcS3_,__ZNKSt3__17collateIwE12do_transformEPKwS3_];

  return { ___cxa_can_catch: ___cxa_can_catch, _free: _free, _main: _main, ___cxa_is_pointer_type: ___cxa_is_pointer_type, _i64Add: _i64Add, _memmove: _memmove, _i64Subtract: _i64Subtract, _memset: _memset, _malloc: _malloc, _memcpy: _memcpy, _strlen: _strlen, _bitshift64Lshr: _bitshift64Lshr, _bitshift64Shl: _bitshift64Shl, runPostSets: runPostSets, stackAlloc: stackAlloc, stackSave: stackSave, stackRestore: stackRestore, setThrew: setThrew, setTempRet0: setTempRet0, getTempRet0: getTempRet0, dynCall_iiiiiiii: dynCall_iiiiiiii, dynCall_iiii: dynCall_iiii, dynCall_viiiii: dynCall_viiiii, dynCall_iiiiiid: dynCall_iiiiiid, dynCall_vi: dynCall_vi, dynCall_vii: dynCall_vii, dynCall_iiiiiii: dynCall_iiiiiii, dynCall_iiiiid: dynCall_iiiiid, dynCall_ii: dynCall_ii, dynCall_viii: dynCall_viii, dynCall_v: dynCall_v, dynCall_iiiiiiiii: dynCall_iiiiiiiii, dynCall_iiiii: dynCall_iiiii, dynCall_viiiiii: dynCall_viiiiii, dynCall_iii: dynCall_iii, dynCall_iiiiii: dynCall_iiiiii, dynCall_viiii: dynCall_viiii };
})
// EMSCRIPTEN_END_ASM
(Module.asmGlobalArg, Module.asmLibraryArg, buffer);
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var ___cxa_can_catch = Module["___cxa_can_catch"] = asm["___cxa_can_catch"];
var _free = Module["_free"] = asm["_free"];
var _main = Module["_main"] = asm["_main"];
var ___cxa_is_pointer_type = Module["___cxa_is_pointer_type"] = asm["___cxa_is_pointer_type"];
var _i64Add = Module["_i64Add"] = asm["_i64Add"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
var _memset = Module["_memset"] = asm["_memset"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var _strlen = Module["_strlen"] = asm["_strlen"];
var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
var dynCall_iiiiiiii = Module["dynCall_iiiiiiii"] = asm["dynCall_iiiiiiii"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_iiiiiid = Module["dynCall_iiiiiid"] = asm["dynCall_iiiiiid"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_iiiiiii = Module["dynCall_iiiiiii"] = asm["dynCall_iiiiiii"];
var dynCall_iiiiid = Module["dynCall_iiiiid"] = asm["dynCall_iiiiid"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_iiiiiiiii = Module["dynCall_iiiiiiiii"] = asm["dynCall_iiiiiiiii"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];
;

Runtime.stackAlloc = asm['stackAlloc'];
Runtime.stackSave = asm['stackSave'];
Runtime.stackRestore = asm['stackRestore'];

Runtime.setTempRet0 = asm['setTempRet0'];
Runtime.getTempRet0 = asm['getTempRet0'];


// TODO: strip out parts of this we do not need

//======= begin closure i64 code =======

// Copyright 2009 The Closure Library Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/**
 * @fileoverview Defines a Long class for representing a 64-bit two's-complement
 * integer value, which faithfully simulates the behavior of a Java "long". This
 * implementation is derived from LongLib in GWT.
 *
 */

var i64Math = (function() { // Emscripten wrapper
  var goog = { math: {} };


  /**
   * Constructs a 64-bit two's-complement integer, given its low and high 32-bit
   * values as *signed* integers.  See the from* functions below for more
   * convenient ways of constructing Longs.
   *
   * The internal representation of a long is the two given signed, 32-bit values.
   * We use 32-bit pieces because these are the size of integers on which
   * Javascript performs bit-operations.  For operations like addition and
   * multiplication, we split each number into 16-bit pieces, which can easily be
   * multiplied within Javascript's floating-point representation without overflow
   * or change in sign.
   *
   * In the algorithms below, we frequently reduce the negative case to the
   * positive case by negating the input(s) and then post-processing the result.
   * Note that we must ALWAYS check specially whether those values are MIN_VALUE
   * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as
   * a positive number, it overflows back into a negative).  Not handling this
   * case would often result in infinite recursion.
   *
   * @param {number} low  The low (signed) 32 bits of the long.
   * @param {number} high  The high (signed) 32 bits of the long.
   * @constructor
   */
  goog.math.Long = function(low, high) {
    /**
     * @type {number}
     * @private
     */
    this.low_ = low | 0;  // force into 32 signed bits.

    /**
     * @type {number}
     * @private
     */
    this.high_ = high | 0;  // force into 32 signed bits.
  };


  // NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the
  // from* methods on which they depend.


  /**
   * A cache of the Long representations of small integer values.
   * @type {!Object}
   * @private
   */
  goog.math.Long.IntCache_ = {};


  /**
   * Returns a Long representing the given (32-bit) integer value.
   * @param {number} value The 32-bit integer in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromInt = function(value) {
    if (-128 <= value && value < 128) {
      var cachedObj = goog.math.Long.IntCache_[value];
      if (cachedObj) {
        return cachedObj;
      }
    }

    var obj = new goog.math.Long(value | 0, value < 0 ? -1 : 0);
    if (-128 <= value && value < 128) {
      goog.math.Long.IntCache_[value] = obj;
    }
    return obj;
  };


  /**
   * Returns a Long representing the given value, provided that it is a finite
   * number.  Otherwise, zero is returned.
   * @param {number} value The number in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromNumber = function(value) {
    if (isNaN(value) || !isFinite(value)) {
      return goog.math.Long.ZERO;
    } else if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MIN_VALUE;
    } else if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MAX_VALUE;
    } else if (value < 0) {
      return goog.math.Long.fromNumber(-value).negate();
    } else {
      return new goog.math.Long(
          (value % goog.math.Long.TWO_PWR_32_DBL_) | 0,
          (value / goog.math.Long.TWO_PWR_32_DBL_) | 0);
    }
  };


  /**
   * Returns a Long representing the 64-bit integer that comes by concatenating
   * the given high and low bits.  Each is assumed to use 32 bits.
   * @param {number} lowBits The low 32-bits.
   * @param {number} highBits The high 32-bits.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromBits = function(lowBits, highBits) {
    return new goog.math.Long(lowBits, highBits);
  };


  /**
   * Returns a Long representation of the given string, written using the given
   * radix.
   * @param {string} str The textual representation of the Long.
   * @param {number=} opt_radix The radix in which the text is written.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromString = function(str, opt_radix) {
    if (str.length == 0) {
      throw Error('number format error: empty string');
    }

    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (str.charAt(0) == '-') {
      return goog.math.Long.fromString(str.substring(1), radix).negate();
    } else if (str.indexOf('-') >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }

    // Do several (8) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));

    var result = goog.math.Long.ZERO;
    for (var i = 0; i < str.length; i += 8) {
      var size = Math.min(8, str.length - i);
      var value = parseInt(str.substring(i, i + size), radix);
      if (size < 8) {
        var power = goog.math.Long.fromNumber(Math.pow(radix, size));
        result = result.multiply(power).add(goog.math.Long.fromNumber(value));
      } else {
        result = result.multiply(radixToPower);
        result = result.add(goog.math.Long.fromNumber(value));
      }
    }
    return result;
  };


  // NOTE: the compiler should inline these constant values below and then remove
  // these variables, so there should be no runtime penalty for these.


  /**
   * Number used repeated below in calculations.  This must appear before the
   * first call to any from* function below.
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_24_DBL_ = 1 << 24;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_32_DBL_ =
      goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_31_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ / 2;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_48_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_64_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_63_DBL_ =
      goog.math.Long.TWO_PWR_64_DBL_ / 2;


  /** @type {!goog.math.Long} */
  goog.math.Long.ZERO = goog.math.Long.fromInt(0);


  /** @type {!goog.math.Long} */
  goog.math.Long.ONE = goog.math.Long.fromInt(1);


  /** @type {!goog.math.Long} */
  goog.math.Long.NEG_ONE = goog.math.Long.fromInt(-1);


  /** @type {!goog.math.Long} */
  goog.math.Long.MAX_VALUE =
      goog.math.Long.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);


  /** @type {!goog.math.Long} */
  goog.math.Long.MIN_VALUE = goog.math.Long.fromBits(0, 0x80000000 | 0);


  /**
   * @type {!goog.math.Long}
   * @private
   */
  goog.math.Long.TWO_PWR_24_ = goog.math.Long.fromInt(1 << 24);


  /** @return {number} The value, assuming it is a 32-bit integer. */
  goog.math.Long.prototype.toInt = function() {
    return this.low_;
  };


  /** @return {number} The closest floating-point representation to this value. */
  goog.math.Long.prototype.toNumber = function() {
    return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ +
           this.getLowBitsUnsigned();
  };


  /**
   * @param {number=} opt_radix The radix in which the text should be written.
   * @return {string} The textual representation of this value.
   */
  goog.math.Long.prototype.toString = function(opt_radix) {
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (this.isZero()) {
      return '0';
    }

    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        // We need to change the Long value before it can be negated, so we remove
        // the bottom-most digit in this base and then recurse to do the rest.
        var radixLong = goog.math.Long.fromNumber(radix);
        var div = this.div(radixLong);
        var rem = div.multiply(radixLong).subtract(this);
        return div.toString(radix) + rem.toInt().toString(radix);
      } else {
        return '-' + this.negate().toString(radix);
      }
    }

    // Do several (6) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));

    var rem = this;
    var result = '';
    while (true) {
      var remDiv = rem.div(radixToPower);
      var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();
      var digits = intval.toString(radix);

      rem = remDiv;
      if (rem.isZero()) {
        return digits + result;
      } else {
        while (digits.length < 6) {
          digits = '0' + digits;
        }
        result = '' + digits + result;
      }
    }
  };


  /** @return {number} The high 32-bits as a signed value. */
  goog.math.Long.prototype.getHighBits = function() {
    return this.high_;
  };


  /** @return {number} The low 32-bits as a signed value. */
  goog.math.Long.prototype.getLowBits = function() {
    return this.low_;
  };


  /** @return {number} The low 32-bits as an unsigned value. */
  goog.math.Long.prototype.getLowBitsUnsigned = function() {
    return (this.low_ >= 0) ?
        this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
  };


  /**
   * @return {number} Returns the number of bits needed to represent the absolute
   *     value of this Long.
   */
  goog.math.Long.prototype.getNumBitsAbs = function() {
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        return 64;
      } else {
        return this.negate().getNumBitsAbs();
      }
    } else {
      var val = this.high_ != 0 ? this.high_ : this.low_;
      for (var bit = 31; bit > 0; bit--) {
        if ((val & (1 << bit)) != 0) {
          break;
        }
      }
      return this.high_ != 0 ? bit + 33 : bit + 1;
    }
  };


  /** @return {boolean} Whether this value is zero. */
  goog.math.Long.prototype.isZero = function() {
    return this.high_ == 0 && this.low_ == 0;
  };


  /** @return {boolean} Whether this value is negative. */
  goog.math.Long.prototype.isNegative = function() {
    return this.high_ < 0;
  };


  /** @return {boolean} Whether this value is odd. */
  goog.math.Long.prototype.isOdd = function() {
    return (this.low_ & 1) == 1;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long equals the other.
   */
  goog.math.Long.prototype.equals = function(other) {
    return (this.high_ == other.high_) && (this.low_ == other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long does not equal the other.
   */
  goog.math.Long.prototype.notEquals = function(other) {
    return (this.high_ != other.high_) || (this.low_ != other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than the other.
   */
  goog.math.Long.prototype.lessThan = function(other) {
    return this.compare(other) < 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than or equal to the other.
   */
  goog.math.Long.prototype.lessThanOrEqual = function(other) {
    return this.compare(other) <= 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than the other.
   */
  goog.math.Long.prototype.greaterThan = function(other) {
    return this.compare(other) > 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than or equal to the other.
   */
  goog.math.Long.prototype.greaterThanOrEqual = function(other) {
    return this.compare(other) >= 0;
  };


  /**
   * Compares this Long with the given one.
   * @param {goog.math.Long} other Long to compare against.
   * @return {number} 0 if they are the same, 1 if the this is greater, and -1
   *     if the given one is greater.
   */
  goog.math.Long.prototype.compare = function(other) {
    if (this.equals(other)) {
      return 0;
    }

    var thisNeg = this.isNegative();
    var otherNeg = other.isNegative();
    if (thisNeg && !otherNeg) {
      return -1;
    }
    if (!thisNeg && otherNeg) {
      return 1;
    }

    // at this point, the signs are the same, so subtraction will not overflow
    if (this.subtract(other).isNegative()) {
      return -1;
    } else {
      return 1;
    }
  };


  /** @return {!goog.math.Long} The negation of this value. */
  goog.math.Long.prototype.negate = function() {
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.MIN_VALUE;
    } else {
      return this.not().add(goog.math.Long.ONE);
    }
  };


  /**
   * Returns the sum of this and the given Long.
   * @param {goog.math.Long} other Long to add to this one.
   * @return {!goog.math.Long} The sum of this and the given Long.
   */
  goog.math.Long.prototype.add = function(other) {
    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 + b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 + b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 + b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 + b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns the difference of this and the given Long.
   * @param {goog.math.Long} other Long to subtract from this.
   * @return {!goog.math.Long} The difference of this and the given Long.
   */
  goog.math.Long.prototype.subtract = function(other) {
    return this.add(other.negate());
  };


  /**
   * Returns the product of this and the given long.
   * @param {goog.math.Long} other Long to multiply with this.
   * @return {!goog.math.Long} The product of this and the other.
   */
  goog.math.Long.prototype.multiply = function(other) {
    if (this.isZero()) {
      return goog.math.Long.ZERO;
    } else if (other.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return other.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return this.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().multiply(other.negate());
      } else {
        return this.negate().multiply(other).negate();
      }
    } else if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }

    // If both longs are small, use float multiplication
    if (this.lessThan(goog.math.Long.TWO_PWR_24_) &&
        other.lessThan(goog.math.Long.TWO_PWR_24_)) {
      return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
    }

    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.
    // We can skip products that would overflow.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 * b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 * b00;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c16 += a00 * b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 * b00;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a16 * b16;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a00 * b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns this Long divided by the given one.
   * @param {goog.math.Long} other Long by which to divide.
   * @return {!goog.math.Long} This Long divided by the given one.
   */
  goog.math.Long.prototype.div = function(other) {
    if (other.isZero()) {
      throw Error('division by zero');
    } else if (this.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      if (other.equals(goog.math.Long.ONE) ||
          other.equals(goog.math.Long.NEG_ONE)) {
        return goog.math.Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE
      } else if (other.equals(goog.math.Long.MIN_VALUE)) {
        return goog.math.Long.ONE;
      } else {
        // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.ZERO)) {
          return other.isNegative() ? goog.math.Long.ONE : goog.math.Long.NEG_ONE;
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().div(other.negate());
      } else {
        return this.negate().div(other).negate();
      }
    } else if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }

    // Repeat the following until the remainder is less than other:  find a
    // floating-point that approximates remainder / other *from below*, add this
    // into the result, and subtract it from the remainder.  It is critical that
    // the approximate value is less than or equal to the real value so that the
    // remainder never becomes negative.
    var res = goog.math.Long.ZERO;
    var rem = this;
    while (rem.greaterThanOrEqual(other)) {
      // Approximate the result of division. This may be a little greater or
      // smaller than the actual value.
      var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));

      // We will tweak the approximate result by changing it in the 48-th digit or
      // the smallest non-fractional digit, whichever is larger.
      var log2 = Math.ceil(Math.log(approx) / Math.LN2);
      var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);

      // Decrease the approximation until it is smaller than the remainder.  Note
      // that if it is too large, the product overflows and is negative.
      var approxRes = goog.math.Long.fromNumber(approx);
      var approxRem = approxRes.multiply(other);
      while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
        approx -= delta;
        approxRes = goog.math.Long.fromNumber(approx);
        approxRem = approxRes.multiply(other);
      }

      // We know the answer can't be zero... and actually, zero would cause
      // infinite recursion since we would make no progress.
      if (approxRes.isZero()) {
        approxRes = goog.math.Long.ONE;
      }

      res = res.add(approxRes);
      rem = rem.subtract(approxRem);
    }
    return res;
  };


  /**
   * Returns this Long modulo the given one.
   * @param {goog.math.Long} other Long by which to mod.
   * @return {!goog.math.Long} This Long modulo the given one.
   */
  goog.math.Long.prototype.modulo = function(other) {
    return this.subtract(this.div(other).multiply(other));
  };


  /** @return {!goog.math.Long} The bitwise-NOT of this value. */
  goog.math.Long.prototype.not = function() {
    return goog.math.Long.fromBits(~this.low_, ~this.high_);
  };


  /**
   * Returns the bitwise-AND of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to AND.
   * @return {!goog.math.Long} The bitwise-AND of this and the other.
   */
  goog.math.Long.prototype.and = function(other) {
    return goog.math.Long.fromBits(this.low_ & other.low_,
                                   this.high_ & other.high_);
  };


  /**
   * Returns the bitwise-OR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to OR.
   * @return {!goog.math.Long} The bitwise-OR of this and the other.
   */
  goog.math.Long.prototype.or = function(other) {
    return goog.math.Long.fromBits(this.low_ | other.low_,
                                   this.high_ | other.high_);
  };


  /**
   * Returns the bitwise-XOR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to XOR.
   * @return {!goog.math.Long} The bitwise-XOR of this and the other.
   */
  goog.math.Long.prototype.xor = function(other) {
    return goog.math.Long.fromBits(this.low_ ^ other.low_,
                                   this.high_ ^ other.high_);
  };


  /**
   * Returns this Long with bits shifted to the left by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the left by the given amount.
   */
  goog.math.Long.prototype.shiftLeft = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var low = this.low_;
      if (numBits < 32) {
        var high = this.high_;
        return goog.math.Long.fromBits(
            low << numBits,
            (high << numBits) | (low >>> (32 - numBits)));
      } else {
        return goog.math.Long.fromBits(0, low << (numBits - 32));
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount.
   */
  goog.math.Long.prototype.shiftRight = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >> numBits);
      } else {
        return goog.math.Long.fromBits(
            high >> (numBits - 32),
            high >= 0 ? 0 : -1);
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount, with
   * the new top bits matching the current sign bit.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount, with
   *     zeros placed into the new leading bits.
   */
  goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >>> numBits);
      } else if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> (numBits - 32), 0);
      }
    }
  };

  //======= begin jsbn =======

  var navigator = { appName: 'Modern Browser' }; // polyfill a little

  // Copyright (c) 2005  Tom Wu
  // All Rights Reserved.
  // http://www-cs-students.stanford.edu/~tjw/jsbn/

  /*
   * Copyright (c) 2003-2005  Tom Wu
   * All Rights Reserved.
   *
   * Permission is hereby granted, free of charge, to any person obtaining
   * a copy of this software and associated documentation files (the
   * "Software"), to deal in the Software without restriction, including
   * without limitation the rights to use, copy, modify, merge, publish,
   * distribute, sublicense, and/or sell copies of the Software, and to
   * permit persons to whom the Software is furnished to do so, subject to
   * the following conditions:
   *
   * The above copyright notice and this permission notice shall be
   * included in all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
   * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
   * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
   *
   * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,
   * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER
   * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF
   * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT
   * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
   *
   * In addition, the following condition applies:
   *
   * All redistributions must retain an intact copy of this copyright notice
   * and disclaimer.
   */

  // Basic JavaScript BN library - subset useful for RSA encryption.

  // Bits per digit
  var dbits;

  // JavaScript engine analysis
  var canary = 0xdeadbeefcafe;
  var j_lm = ((canary&0xffffff)==0xefcafe);

  // (public) Constructor
  function BigInteger(a,b,c) {
    if(a != null)
      if("number" == typeof a) this.fromNumber(a,b,c);
      else if(b == null && "string" != typeof a) this.fromString(a,256);
      else this.fromString(a,b);
  }

  // return new, unset BigInteger
  function nbi() { return new BigInteger(null); }

  // am: Compute w_j += (x*this_i), propagate carries,
  // c is initial carry, returns final carry.
  // c < 3*dvalue, x < 2*dvalue, this_i < dvalue
  // We need to select the fastest one that works in this environment.

  // am1: use a single mult and divide to get the high bits,
  // max digit bits should be 26 because
  // max internal value = 2*dvalue^2-2*dvalue (< 2^53)
  function am1(i,x,w,j,c,n) {
    while(--n >= 0) {
      var v = x*this[i++]+w[j]+c;
      c = Math.floor(v/0x4000000);
      w[j++] = v&0x3ffffff;
    }
    return c;
  }
  // am2 avoids a big mult-and-extract completely.
  // Max digit bits should be <= 30 because we do bitwise ops
  // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)
  function am2(i,x,w,j,c,n) {
    var xl = x&0x7fff, xh = x>>15;
    while(--n >= 0) {
      var l = this[i]&0x7fff;
      var h = this[i++]>>15;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);
      c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);
      w[j++] = l&0x3fffffff;
    }
    return c;
  }
  // Alternately, set max digit bits to 28 since some
  // browsers slow down when dealing with 32-bit numbers.
  function am3(i,x,w,j,c,n) {
    var xl = x&0x3fff, xh = x>>14;
    while(--n >= 0) {
      var l = this[i]&0x3fff;
      var h = this[i++]>>14;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x3fff)<<14)+w[j]+c;
      c = (l>>28)+(m>>14)+xh*h;
      w[j++] = l&0xfffffff;
    }
    return c;
  }
  if(j_lm && (navigator.appName == "Microsoft Internet Explorer")) {
    BigInteger.prototype.am = am2;
    dbits = 30;
  }
  else if(j_lm && (navigator.appName != "Netscape")) {
    BigInteger.prototype.am = am1;
    dbits = 26;
  }
  else { // Mozilla/Netscape seems to prefer am3
    BigInteger.prototype.am = am3;
    dbits = 28;
  }

  BigInteger.prototype.DB = dbits;
  BigInteger.prototype.DM = ((1<<dbits)-1);
  BigInteger.prototype.DV = (1<<dbits);

  var BI_FP = 52;
  BigInteger.prototype.FV = Math.pow(2,BI_FP);
  BigInteger.prototype.F1 = BI_FP-dbits;
  BigInteger.prototype.F2 = 2*dbits-BI_FP;

  // Digit conversions
  var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
  var BI_RC = new Array();
  var rr,vv;
  rr = "0".charCodeAt(0);
  for(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;
  rr = "a".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  rr = "A".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;

  function int2char(n) { return BI_RM.charAt(n); }
  function intAt(s,i) {
    var c = BI_RC[s.charCodeAt(i)];
    return (c==null)?-1:c;
  }

  // (protected) copy this to r
  function bnpCopyTo(r) {
    for(var i = this.t-1; i >= 0; --i) r[i] = this[i];
    r.t = this.t;
    r.s = this.s;
  }

  // (protected) set from integer value x, -DV <= x < DV
  function bnpFromInt(x) {
    this.t = 1;
    this.s = (x<0)?-1:0;
    if(x > 0) this[0] = x;
    else if(x < -1) this[0] = x+DV;
    else this.t = 0;
  }

  // return bigint initialized to value
  function nbv(i) { var r = nbi(); r.fromInt(i); return r; }

  // (protected) set from string and radix
  function bnpFromString(s,b) {
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 256) k = 8; // byte array
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else { this.fromRadix(s,b); return; }
    this.t = 0;
    this.s = 0;
    var i = s.length, mi = false, sh = 0;
    while(--i >= 0) {
      var x = (k==8)?s[i]&0xff:intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-") mi = true;
        continue;
      }
      mi = false;
      if(sh == 0)
        this[this.t++] = x;
      else if(sh+k > this.DB) {
        this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;
        this[this.t++] = (x>>(this.DB-sh));
      }
      else
        this[this.t-1] |= x<<sh;
      sh += k;
      if(sh >= this.DB) sh -= this.DB;
    }
    if(k == 8 && (s[0]&0x80) != 0) {
      this.s = -1;
      if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;
    }
    this.clamp();
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) clamp off excess high words
  function bnpClamp() {
    var c = this.s&this.DM;
    while(this.t > 0 && this[this.t-1] == c) --this.t;
  }

  // (public) return string representation in given radix
  function bnToString(b) {
    if(this.s < 0) return "-"+this.negate().toString(b);
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else return this.toRadix(b);
    var km = (1<<k)-1, d, m = false, r = "", i = this.t;
    var p = this.DB-(i*this.DB)%k;
    if(i-- > 0) {
      if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }
      while(i >= 0) {
        if(p < k) {
          d = (this[i]&((1<<p)-1))<<(k-p);
          d |= this[--i]>>(p+=this.DB-k);
        }
        else {
          d = (this[i]>>(p-=k))&km;
          if(p <= 0) { p += this.DB; --i; }
        }
        if(d > 0) m = true;
        if(m) r += int2char(d);
      }
    }
    return m?r:"0";
  }

  // (public) -this
  function bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }

  // (public) |this|
  function bnAbs() { return (this.s<0)?this.negate():this; }

  // (public) return + if this > a, - if this < a, 0 if equal
  function bnCompareTo(a) {
    var r = this.s-a.s;
    if(r != 0) return r;
    var i = this.t;
    r = i-a.t;
    if(r != 0) return (this.s<0)?-r:r;
    while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;
    return 0;
  }

  // returns bit length of the integer x
  function nbits(x) {
    var r = 1, t;
    if((t=x>>>16) != 0) { x = t; r += 16; }
    if((t=x>>8) != 0) { x = t; r += 8; }
    if((t=x>>4) != 0) { x = t; r += 4; }
    if((t=x>>2) != 0) { x = t; r += 2; }
    if((t=x>>1) != 0) { x = t; r += 1; }
    return r;
  }

  // (public) return the number of bits in "this"
  function bnBitLength() {
    if(this.t <= 0) return 0;
    return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));
  }

  // (protected) r = this << n*DB
  function bnpDLShiftTo(n,r) {
    var i;
    for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];
    for(i = n-1; i >= 0; --i) r[i] = 0;
    r.t = this.t+n;
    r.s = this.s;
  }

  // (protected) r = this >> n*DB
  function bnpDRShiftTo(n,r) {
    for(var i = n; i < this.t; ++i) r[i-n] = this[i];
    r.t = Math.max(this.t-n,0);
    r.s = this.s;
  }

  // (protected) r = this << n
  function bnpLShiftTo(n,r) {
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<cbs)-1;
    var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;
    for(i = this.t-1; i >= 0; --i) {
      r[i+ds+1] = (this[i]>>cbs)|c;
      c = (this[i]&bm)<<bs;
    }
    for(i = ds-1; i >= 0; --i) r[i] = 0;
    r[ds] = c;
    r.t = this.t+ds+1;
    r.s = this.s;
    r.clamp();
  }

  // (protected) r = this >> n
  function bnpRShiftTo(n,r) {
    r.s = this.s;
    var ds = Math.floor(n/this.DB);
    if(ds >= this.t) { r.t = 0; return; }
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<bs)-1;
    r[0] = this[ds]>>bs;
    for(var i = ds+1; i < this.t; ++i) {
      r[i-ds-1] |= (this[i]&bm)<<cbs;
      r[i-ds] = this[i]>>bs;
    }
    if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;
    r.t = this.t-ds;
    r.clamp();
  }

  // (protected) r = this - a
  function bnpSubTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]-a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c -= a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c -= a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c -= a.s;
    }
    r.s = (c<0)?-1:0;
    if(c < -1) r[i++] = this.DV+c;
    else if(c > 0) r[i++] = c;
    r.t = i;
    r.clamp();
  }

  // (protected) r = this * a, r != this,a (HAC 14.12)
  // "this" should be the larger one if appropriate.
  function bnpMultiplyTo(a,r) {
    var x = this.abs(), y = a.abs();
    var i = x.t;
    r.t = i+y.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);
    r.s = 0;
    r.clamp();
    if(this.s != a.s) BigInteger.ZERO.subTo(r,r);
  }

  // (protected) r = this^2, r != this (HAC 14.16)
  function bnpSquareTo(r) {
    var x = this.abs();
    var i = r.t = 2*x.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < x.t-1; ++i) {
      var c = x.am(i,x[i],r,2*i,0,1);
      if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {
        r[i+x.t] -= x.DV;
        r[i+x.t+1] = 1;
      }
    }
    if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);
    r.s = 0;
    r.clamp();
  }

  // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
  // r != q, this != m.  q or r may be null.
  function bnpDivRemTo(m,q,r) {
    var pm = m.abs();
    if(pm.t <= 0) return;
    var pt = this.abs();
    if(pt.t < pm.t) {
      if(q != null) q.fromInt(0);
      if(r != null) this.copyTo(r);
      return;
    }
    if(r == null) r = nbi();
    var y = nbi(), ts = this.s, ms = m.s;
    var nsh = this.DB-nbits(pm[pm.t-1]);	// normalize modulus
    if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }
    else { pm.copyTo(y); pt.copyTo(r); }
    var ys = y.t;
    var y0 = y[ys-1];
    if(y0 == 0) return;
    var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);
    var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;
    var i = r.t, j = i-ys, t = (q==null)?nbi():q;
    y.dlShiftTo(j,t);
    if(r.compareTo(t) >= 0) {
      r[r.t++] = 1;
      r.subTo(t,r);
    }
    BigInteger.ONE.dlShiftTo(ys,t);
    t.subTo(y,y);	// "negative" y so we can replace sub with am later
    while(y.t < ys) y[y.t++] = 0;
    while(--j >= 0) {
      // Estimate quotient digit
      var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);
      if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {	// Try it out
        y.dlShiftTo(j,t);
        r.subTo(t,r);
        while(r[i] < --qd) r.subTo(t,r);
      }
    }
    if(q != null) {
      r.drShiftTo(ys,q);
      if(ts != ms) BigInteger.ZERO.subTo(q,q);
    }
    r.t = ys;
    r.clamp();
    if(nsh > 0) r.rShiftTo(nsh,r);	// Denormalize remainder
    if(ts < 0) BigInteger.ZERO.subTo(r,r);
  }

  // (public) this mod a
  function bnMod(a) {
    var r = nbi();
    this.abs().divRemTo(a,null,r);
    if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);
    return r;
  }

  // Modular reduction using "classic" algorithm
  function Classic(m) { this.m = m; }
  function cConvert(x) {
    if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);
    else return x;
  }
  function cRevert(x) { return x; }
  function cReduce(x) { x.divRemTo(this.m,null,x); }
  function cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
  function cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  Classic.prototype.convert = cConvert;
  Classic.prototype.revert = cRevert;
  Classic.prototype.reduce = cReduce;
  Classic.prototype.mulTo = cMulTo;
  Classic.prototype.sqrTo = cSqrTo;

  // (protected) return "-1/this % 2^DB"; useful for Mont. reduction
  // justification:
  //         xy == 1 (mod m)
  //         xy =  1+km
  //   xy(2-xy) = (1+km)(1-km)
  // x[y(2-xy)] = 1-k^2m^2
  // x[y(2-xy)] == 1 (mod m^2)
  // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
  // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
  // JS multiply "overflows" differently from C/C++, so care is needed here.
  function bnpInvDigit() {
    if(this.t < 1) return 0;
    var x = this[0];
    if((x&1) == 0) return 0;
    var y = x&3;		// y == 1/x mod 2^2
    y = (y*(2-(x&0xf)*y))&0xf;	// y == 1/x mod 2^4
    y = (y*(2-(x&0xff)*y))&0xff;	// y == 1/x mod 2^8
    y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;	// y == 1/x mod 2^16
    // last step - calculate inverse mod DV directly;
    // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
    y = (y*(2-x*y%this.DV))%this.DV;		// y == 1/x mod 2^dbits
    // we really want the negative inverse, and -DV < y < DV
    return (y>0)?this.DV-y:-y;
  }

  // Montgomery reduction
  function Montgomery(m) {
    this.m = m;
    this.mp = m.invDigit();
    this.mpl = this.mp&0x7fff;
    this.mph = this.mp>>15;
    this.um = (1<<(m.DB-15))-1;
    this.mt2 = 2*m.t;
  }

  // xR mod m
  function montConvert(x) {
    var r = nbi();
    x.abs().dlShiftTo(this.m.t,r);
    r.divRemTo(this.m,null,r);
    if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);
    return r;
  }

  // x/R mod m
  function montRevert(x) {
    var r = nbi();
    x.copyTo(r);
    this.reduce(r);
    return r;
  }

  // x = x/R mod m (HAC 14.32)
  function montReduce(x) {
    while(x.t <= this.mt2)	// pad x so am has enough room later
      x[x.t++] = 0;
    for(var i = 0; i < this.m.t; ++i) {
      // faster way of calculating u0 = x[i]*mp mod DV
      var j = x[i]&0x7fff;
      var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;
      // use am to combine the multiply-shift-add into one call
      j = i+this.m.t;
      x[j] += this.m.am(0,u0,x,i,0,this.m.t);
      // propagate carry
      while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }
    }
    x.clamp();
    x.drShiftTo(this.m.t,x);
    if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);
  }

  // r = "x^2/R mod m"; x != r
  function montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  // r = "xy/R mod m"; x,y != r
  function montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }

  Montgomery.prototype.convert = montConvert;
  Montgomery.prototype.revert = montRevert;
  Montgomery.prototype.reduce = montReduce;
  Montgomery.prototype.mulTo = montMulTo;
  Montgomery.prototype.sqrTo = montSqrTo;

  // (protected) true iff this is even
  function bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }

  // (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)
  function bnpExp(e,z) {
    if(e > 0xffffffff || e < 1) return BigInteger.ONE;
    var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;
    g.copyTo(r);
    while(--i >= 0) {
      z.sqrTo(r,r2);
      if((e&(1<<i)) > 0) z.mulTo(r2,g,r);
      else { var t = r; r = r2; r2 = t; }
    }
    return z.revert(r);
  }

  // (public) this^e % m, 0 <= e < 2^32
  function bnModPowInt(e,m) {
    var z;
    if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);
    return this.exp(e,z);
  }

  // protected
  BigInteger.prototype.copyTo = bnpCopyTo;
  BigInteger.prototype.fromInt = bnpFromInt;
  BigInteger.prototype.fromString = bnpFromString;
  BigInteger.prototype.clamp = bnpClamp;
  BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
  BigInteger.prototype.drShiftTo = bnpDRShiftTo;
  BigInteger.prototype.lShiftTo = bnpLShiftTo;
  BigInteger.prototype.rShiftTo = bnpRShiftTo;
  BigInteger.prototype.subTo = bnpSubTo;
  BigInteger.prototype.multiplyTo = bnpMultiplyTo;
  BigInteger.prototype.squareTo = bnpSquareTo;
  BigInteger.prototype.divRemTo = bnpDivRemTo;
  BigInteger.prototype.invDigit = bnpInvDigit;
  BigInteger.prototype.isEven = bnpIsEven;
  BigInteger.prototype.exp = bnpExp;

  // public
  BigInteger.prototype.toString = bnToString;
  BigInteger.prototype.negate = bnNegate;
  BigInteger.prototype.abs = bnAbs;
  BigInteger.prototype.compareTo = bnCompareTo;
  BigInteger.prototype.bitLength = bnBitLength;
  BigInteger.prototype.mod = bnMod;
  BigInteger.prototype.modPowInt = bnModPowInt;

  // "constants"
  BigInteger.ZERO = nbv(0);
  BigInteger.ONE = nbv(1);

  // jsbn2 stuff

  // (protected) convert from radix string
  function bnpFromRadix(s,b) {
    this.fromInt(0);
    if(b == null) b = 10;
    var cs = this.chunkSize(b);
    var d = Math.pow(b,cs), mi = false, j = 0, w = 0;
    for(var i = 0; i < s.length; ++i) {
      var x = intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-" && this.signum() == 0) mi = true;
        continue;
      }
      w = b*w+x;
      if(++j >= cs) {
        this.dMultiply(d);
        this.dAddOffset(w,0);
        j = 0;
        w = 0;
      }
    }
    if(j > 0) {
      this.dMultiply(Math.pow(b,j));
      this.dAddOffset(w,0);
    }
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) return x s.t. r^x < DV
  function bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }

  // (public) 0 if this == 0, 1 if this > 0
  function bnSigNum() {
    if(this.s < 0) return -1;
    else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;
    else return 1;
  }

  // (protected) this *= n, this >= 0, 1 < n < DV
  function bnpDMultiply(n) {
    this[this.t] = this.am(0,n-1,this,0,0,this.t);
    ++this.t;
    this.clamp();
  }

  // (protected) this += n << w words, this >= 0
  function bnpDAddOffset(n,w) {
    if(n == 0) return;
    while(this.t <= w) this[this.t++] = 0;
    this[w] += n;
    while(this[w] >= this.DV) {
      this[w] -= this.DV;
      if(++w >= this.t) this[this.t++] = 0;
      ++this[w];
    }
  }

  // (protected) convert to radix string
  function bnpToRadix(b) {
    if(b == null) b = 10;
    if(this.signum() == 0 || b < 2 || b > 36) return "0";
    var cs = this.chunkSize(b);
    var a = Math.pow(b,cs);
    var d = nbv(a), y = nbi(), z = nbi(), r = "";
    this.divRemTo(d,y,z);
    while(y.signum() > 0) {
      r = (a+z.intValue()).toString(b).substr(1) + r;
      y.divRemTo(d,y,z);
    }
    return z.intValue().toString(b) + r;
  }

  // (public) return value as integer
  function bnIntValue() {
    if(this.s < 0) {
      if(this.t == 1) return this[0]-this.DV;
      else if(this.t == 0) return -1;
    }
    else if(this.t == 1) return this[0];
    else if(this.t == 0) return 0;
    // assumes 16 < DB < 32
    return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];
  }

  // (protected) r = this + a
  function bnpAddTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]+a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c += a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c += a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += a.s;
    }
    r.s = (c<0)?-1:0;
    if(c > 0) r[i++] = c;
    else if(c < -1) r[i++] = this.DV+c;
    r.t = i;
    r.clamp();
  }

  BigInteger.prototype.fromRadix = bnpFromRadix;
  BigInteger.prototype.chunkSize = bnpChunkSize;
  BigInteger.prototype.signum = bnSigNum;
  BigInteger.prototype.dMultiply = bnpDMultiply;
  BigInteger.prototype.dAddOffset = bnpDAddOffset;
  BigInteger.prototype.toRadix = bnpToRadix;
  BigInteger.prototype.intValue = bnIntValue;
  BigInteger.prototype.addTo = bnpAddTo;

  //======= end jsbn =======

  // Emscripten wrapper
  var Wrapper = {
    abs: function(l, h) {
      var x = new goog.math.Long(l, h);
      var ret;
      if (x.isNegative()) {
        ret = x.negate();
      } else {
        ret = x;
      }
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
    },
    ensureTemps: function() {
      if (Wrapper.ensuredTemps) return;
      Wrapper.ensuredTemps = true;
      Wrapper.two32 = new BigInteger();
      Wrapper.two32.fromString('4294967296', 10);
      Wrapper.two64 = new BigInteger();
      Wrapper.two64.fromString('18446744073709551616', 10);
      Wrapper.temp1 = new BigInteger();
      Wrapper.temp2 = new BigInteger();
    },
    lh2bignum: function(l, h) {
      var a = new BigInteger();
      a.fromString(h.toString(), 10);
      var b = new BigInteger();
      a.multiplyTo(Wrapper.two32, b);
      var c = new BigInteger();
      c.fromString(l.toString(), 10);
      var d = new BigInteger();
      c.addTo(b, d);
      return d;
    },
    stringify: function(l, h, unsigned) {
      var ret = new goog.math.Long(l, h).toString();
      if (unsigned && ret[0] == '-') {
        // unsign slowly using jsbn bignums
        Wrapper.ensureTemps();
        var bignum = new BigInteger();
        bignum.fromString(ret, 10);
        ret = new BigInteger();
        Wrapper.two64.addTo(bignum, ret);
        ret = ret.toString(10);
      }
      return ret;
    },
    fromString: function(str, base, min, max, unsigned) {
      Wrapper.ensureTemps();
      var bignum = new BigInteger();
      bignum.fromString(str, base);
      var bigmin = new BigInteger();
      bigmin.fromString(min, 10);
      var bigmax = new BigInteger();
      bigmax.fromString(max, 10);
      if (unsigned && bignum.compareTo(BigInteger.ZERO) < 0) {
        var temp = new BigInteger();
        bignum.addTo(Wrapper.two64, temp);
        bignum = temp;
      }
      var error = false;
      if (bignum.compareTo(bigmin) < 0) {
        bignum = bigmin;
        error = true;
      } else if (bignum.compareTo(bigmax) > 0) {
        bignum = bigmax;
        error = true;
      }
      var ret = goog.math.Long.fromString(bignum.toString()); // min-max checks should have clamped this to a range goog.math.Long can handle well
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
      if (error) throw 'range error';
    }
  };
  return Wrapper;
})();

//======= end closure i64 code =======



// === Auto-generated postamble setup entry stuff ===

if (memoryInitializer) {
  if (typeof Module['locateFile'] === 'function') {
    memoryInitializer = Module['locateFile'](memoryInitializer);
  } else if (Module['memoryInitializerPrefixURL']) {
    memoryInitializer = Module['memoryInitializerPrefixURL'] + memoryInitializer;
  }
  if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
    var data = Module['readBinary'](memoryInitializer);
    HEAPU8.set(data, STATIC_BASE);
  } else {
    addRunDependency('memory initializer');
    var applyMemoryInitializer = function(data) {
      if (data.byteLength) data = new Uint8Array(data);
      HEAPU8.set(data, STATIC_BASE);
      removeRunDependency('memory initializer');
    }
    var request = Module['memoryInitializerRequest'];
    if (request) {
      // a network request has already been created, just use that
      if (request.response) {
        setTimeout(function() {
          applyMemoryInitializer(request.response);
        }, 0); // it's already here; but, apply it asynchronously
      } else {
        request.addEventListener('load', function() { // wait for it
          if (request.status !== 200 && request.status !== 0) {
            console.warn('a problem seems to have happened with Module.memoryInitializerRequest, status: ' + request.status);
          }
          if (!request.response || typeof request.response !== 'object' || !request.response.byteLength) {
            console.warn('a problem seems to have happened with Module.memoryInitializerRequest response (expected ArrayBuffer): ' + request.response);
          }
          applyMemoryInitializer(request.response);
        });
      }
    } else {
      // fetch it from the network ourselves
      Browser.asyncLoad(memoryInitializer, applyMemoryInitializer, function() {
        throw 'could not load memory initializer ' + memoryInitializer;
      });
    }
  }
}

function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var preloadStartTime = null;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun']) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}

Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');

  args = args || [];

  ensureInitRuntime();

  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString(Module['thisProgram']), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);

  initialStackTop = STACKTOP;

  try {

    var ret = Module['_main'](argc, argv, 0);


    // if we're not running an evented main loop, it's time to exit
    exit(ret, /* implicit = */ true);
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
      throw e;
    }
  } finally {
    calledMain = true;
  }
}




function run(args) {
  args = args || Module['arguments'];

  if (preloadStartTime === null) preloadStartTime = Date.now();

  if (runDependencies > 0) {
    return;
  }

  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    if (ABORT) return; 

    ensureInitRuntime();

    preMain();

    if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
      Module.printErr('pre-main prep time: ' + (Date.now() - preloadStartTime) + ' ms');
    }

    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();

    if (Module['_main'] && shouldRunNow) Module['callMain'](args);

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;

function exit(status, implicit) {
  if (implicit && Module['noExitRuntime']) {
    return;
  }

  if (Module['noExitRuntime']) {
  } else {
    ABORT = true;
    EXITSTATUS = status;
    STACKTOP = initialStackTop;

    exitRuntime();

    if (Module['onExit']) Module['onExit'](status);
  }

  if (ENVIRONMENT_IS_NODE) {
    // Work around a node.js bug where stdout buffer is not flushed at process exit:
    // Instead of process.exit() directly, wait for stdout flush event.
    // See https://github.com/joyent/node/issues/1669 and https://github.com/kripken/emscripten/issues/2582
    // Workaround is based on https://github.com/RReverser/acorn/commit/50ab143cecc9ed71a2d66f78b4aec3bb2e9844f6
    process['stdout']['once']('drain', function () {
      process['exit'](status);
    });
    console.log(' '); // Make sure to print something to force the drain event to occur, in case the stdout buffer was empty.
    // Work around another node bug where sometimes 'drain' is never fired - make another effort
    // to emit the exit status, after a significant delay (if node hasn't fired drain by then, give up)
    setTimeout(function() {
      process['exit'](status);
    }, 500);
  } else
  if (ENVIRONMENT_IS_SHELL && typeof quit === 'function') {
    quit(status);
  }
  // if we reach here, we must throw an exception to halt the current execution
  throw new ExitStatus(status);
}
Module['exit'] = Module.exit = exit;

var abortDecorators = [];

function abort(what) {
  if (what !== undefined) {
    Module.print(what);
    Module.printErr(what);
    what = JSON.stringify(what)
  } else {
    what = '';
  }

  ABORT = true;
  EXITSTATUS = 1;

  var extra = '\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.';

  var output = 'abort(' + what + ') at ' + stackTrace() + extra;
  if (abortDecorators) {
    abortDecorators.forEach(function(decorator) {
      output = decorator(output, what);
    });
  }
  throw output;
}
Module['abort'] = Module.abort = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

// shouldRunNow refers to calling main(), not run().
var shouldRunNow = false;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}

Module["noExitRuntime"] = true;

run();

// {{POST_RUN_ADDITIONS}}






// {{MODULE_ADDITIONS}}



module.exports = Module;

